[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "so hello everyone so uh uh I will start my topic uh today so my topic today is",
    "start": "40",
    "end": "6720"
  },
  {
    "text": "uh web kit everywhere secure or not and uh uh let me introduce the",
    "start": "6720",
    "end": "14519"
  },
  {
    "text": "agenda so firstly I will uh describe the uh web kit uh background and also uh",
    "start": "14519",
    "end": "21000"
  },
  {
    "text": "because recently a lot of security features and the exploitation mitigation has been introduced I will also talk",
    "start": "21000",
    "end": "27840"
  },
  {
    "text": "about them and the most important thing is I will uh release and disclose the",
    "start": "27840",
    "end": "33480"
  },
  {
    "text": "details of cve 2004 1303 which I um uh",
    "start": "33480",
    "end": "39640"
  },
  {
    "text": "which king team present in PTO on 2014 and also I will give some",
    "start": "39640",
    "end": "45320"
  },
  {
    "text": "suggestions to uh web kit so uh the agenda is a bit um longer so I may talk",
    "start": "45320",
    "end": "52359"
  },
  {
    "text": "longer they expect it uh sorry for that and I hope that uh it will not make you",
    "start": "52359",
    "end": "58760"
  },
  {
    "text": "hungry yeah so uh first a uh my self introduction so um I'm a chief uh",
    "start": "58760",
    "end": "64838"
  },
  {
    "text": "security researcher at King team and uh of course I'm a black hat and also I",
    "start": "64839",
    "end": "70119"
  },
  {
    "text": "specialized in BR uh exploitation including uh Chrome Safari IE uh flash",
    "start": "70119",
    "end": "77400"
  },
  {
    "text": "Etc and also I'm I'm the winner of two p uh events one is mobile Pon 203 uh 2013",
    "start": "77400",
    "end": "86640"
  },
  {
    "text": "and another is uh Ponto on 2014 pting the uh Mac OS Safari",
    "start": "86640",
    "end": "93600"
  },
  {
    "text": "category so first let me introduce the uh introduct the uh introduce uh web kit",
    "start": "93600",
    "end": "102040"
  },
  {
    "start": "102000",
    "end": "102000"
  },
  {
    "text": "so uh because everyone knows webkit a lot it is the most popular uh web uh",
    "start": "102040",
    "end": "107960"
  },
  {
    "text": "rendering engines in the world so uh the only thing that uh we need to take care",
    "start": "107960",
    "end": "113719"
  },
  {
    "text": "of is um there are two code versions of uh web kit one is the trunk and another",
    "start": "113719",
    "end": "119880"
  },
  {
    "text": "is brunch so the trunk usually introduce the new features and it is upgraded uh",
    "start": "119880",
    "end": "125520"
  },
  {
    "text": "updated very frequently maybe um it will introduce a lot of new features in one",
    "start": "125520",
    "end": "131000"
  },
  {
    "text": "single day and uh for the branch it is used by safery uh product which is um uh",
    "start": "131000",
    "end": "138480"
  },
  {
    "text": "released version so it will be update uh less frequently and also a web kit will work",
    "start": "138480",
    "end": "145319"
  },
  {
    "text": "along with the JS engine either V V8 or JSC which uh allows um hackers uh to um",
    "start": "145319",
    "end": "154440"
  },
  {
    "text": "do do some uh some bad SC which is good for the",
    "start": "154440",
    "end": "160280"
  },
  {
    "text": "exploiter so uh currently web kit is used everywhere we have browsers or some",
    "start": "160280",
    "end": "165800"
  },
  {
    "text": "PC application or mobile applications and usually a single bu um if it's in uh",
    "start": "165800",
    "end": "174720"
  },
  {
    "text": "extreme uh situation it may destroy all of them",
    "start": "174720",
    "end": "180400"
  },
  {
    "start": "180000",
    "end": "180000"
  },
  {
    "text": "under historical issues we have some dos issues which happened uh frequently uh",
    "start": "180400",
    "end": "187040"
  },
  {
    "text": "so the most famous uh incident happened uh last year is Arab uh character issues",
    "start": "187040",
    "end": "194680"
  },
  {
    "text": "which will uh make the iOS 6 applications uh uh crash immediately and",
    "start": "194680",
    "end": "201200"
  },
  {
    "text": "it also impact some versions of uh Macos and also we have the USS uh uxs",
    "start": "201200",
    "end": "208480"
  },
  {
    "text": "universal access s vulnerabilities which may leak the information uh to to the",
    "start": "208480",
    "end": "214200"
  },
  {
    "text": "hacker and also uh the most uh severe in",
    "start": "214200",
    "end": "219360"
  },
  {
    "text": "um severe uh vulnerability if is of course the remote code execution so uh",
    "start": "219360",
    "end": "225400"
  },
  {
    "text": "it has logical issues also the memory corruption issues but logical issues",
    "start": "225400",
    "end": "230760"
  },
  {
    "text": "because um with more and more restrict uh code review mechanism it almost",
    "start": "230760",
    "end": "236920"
  },
  {
    "text": "extinct but for the memory corruption issue it will keep uh existing for a",
    "start": "236920",
    "end": "242200"
  },
  {
    "text": "long time and uh uh it is also possible to to use it to p uh uh to P The Hope",
    "start": "242200",
    "end": "250000"
  },
  {
    "text": "device so it is my major uh focus in this",
    "start": "250000",
    "end": "255040"
  },
  {
    "text": "presentation and uh memory corruption issues uh has many categories such as",
    "start": "255040",
    "end": "260359"
  },
  {
    "start": "256000",
    "end": "256000"
  },
  {
    "text": "Heap overflow type confusion and UF but um you will find that in the uh public",
    "start": "260359",
    "end": "267280"
  },
  {
    "text": "you can only find a very rare uh real cases of web kit exploitation uh some of",
    "start": "267280",
    "end": "273600"
  },
  {
    "text": "them are JSC uh exploitation but uh webkit exploitation is not very quite",
    "start": "273600",
    "end": "279639"
  },
  {
    "text": "many uh so the typical example is NEOS uh PTO on 2013 which he use the type confusion",
    "start": "279639",
    "end": "287280"
  },
  {
    "text": "vulnerability to P the latest uh uh Chrome o uh Chrome browser and also the",
    "start": "287280",
    "end": "294680"
  },
  {
    "text": "pinking Pi uh Chrome exploit in uh Linux 60 for bit which is very um very ex",
    "start": "294680",
    "end": "303560"
  },
  {
    "text": "exciting and uh the reason why recently there is not too many uh public uh",
    "start": "303560",
    "end": "311000"
  },
  {
    "text": "exploits for webkit so um because webkit introduce some new features and",
    "start": "311000",
    "end": "317320"
  },
  {
    "text": "exploitation mitigations and also some other vendors like Google uh joined the",
    "start": "317320",
    "end": "323560"
  },
  {
    "text": "program and to help uh to improve the security of the web kit which will make",
    "start": "323560",
    "end": "329199"
  },
  {
    "text": "web exploitation really really uh hard so uh the first uh concept is hip Arena",
    "start": "329199",
    "end": "337880"
  },
  {
    "start": "334000",
    "end": "334000"
  },
  {
    "text": "which is a similar concept with ie isolate Hep so it will put all those uh",
    "start": "337880",
    "end": "344319"
  },
  {
    "text": "frequently updated um objects the typical example is render object uh so",
    "start": "344319",
    "end": "350840"
  },
  {
    "text": "render object will be uh updated when the ray out tree is changed so it is",
    "start": "350840",
    "end": "357680"
  },
  {
    "text": "updated very frequently and and it uh in our cases uh based on our fing test uh",
    "start": "357680",
    "end": "364600"
  },
  {
    "text": "it contributes for more than 90% uh webkit ufs so you you may need to find a",
    "start": "364600",
    "end": "372280"
  },
  {
    "text": "general way to exploit the Hep Arena otherwise those UF will be",
    "start": "372280",
    "end": "378520"
  },
  {
    "text": "wasted uh so the rent Arena will be created uh for each document when the",
    "start": "378520",
    "end": "384000"
  },
  {
    "start": "379000",
    "end": "379000"
  },
  {
    "text": "document is created and internally it maintains a single uh linked list uh with the nest",
    "start": "384000",
    "end": "391800"
  },
  {
    "text": "pointer uh to uh to uh some other uh blocks uh to store those free",
    "start": "391800",
    "end": "398919"
  },
  {
    "text": "list so uh it also use last in first out",
    "start": "398919",
    "end": "404160"
  },
  {
    "text": "uh mechanism when allocating the Rand object so from The exploiter View uh you",
    "start": "404160",
    "end": "410080"
  },
  {
    "text": "just need to overwrite the next pointer to a cont buffer and then try to",
    "start": "410080",
    "end": "415199"
  },
  {
    "text": "allocate uh the Rend object with the same size so that the user controlled uh",
    "start": "415199",
    "end": "420560"
  },
  {
    "text": "buffer will be returned to the to the user and you can uh leak the V table and",
    "start": "420560",
    "end": "425879"
  },
  {
    "text": "Achieve rce that's for the his uh history but now uh Randa Arena has some",
    "start": "425879",
    "end": "432560"
  },
  {
    "start": "431000",
    "end": "431000"
  },
  {
    "text": "enhancement which is the next point is exort by a random value which almost uh",
    "start": "432560",
    "end": "439199"
  },
  {
    "text": "killed all the exploits in uh random Arena and also uh but but but uh this",
    "start": "439199",
    "end": "445520"
  },
  {
    "text": "only applies for to uh the web kit uh branch in the trunk uh there is no uh",
    "start": "445520",
    "end": "452440"
  },
  {
    "text": "render Arena concept so you can still exploit some third party web view or or",
    "start": "452440",
    "end": "458960"
  },
  {
    "text": "some applications W without uh uh Rend arena being",
    "start": "458960",
    "end": "464360"
  },
  {
    "text": "implemented and the second one is the GC mechanism unlike I IE and Firefox you",
    "start": "464360",
    "end": "470599"
  },
  {
    "start": "465000",
    "end": "465000"
  },
  {
    "text": "can just call the GC function by some uh uh uh interface there is no such",
    "start": "470599",
    "end": "477080"
  },
  {
    "text": "interface in GC although some security researchers like uh Charlie Miller uh",
    "start": "477080",
    "end": "482599"
  },
  {
    "text": "find some way to uh use uh number hip uh previously to trigger GC uh nowadays uh",
    "start": "482599",
    "end": "492159"
  },
  {
    "text": "the the function collector or garbage can be never triggered by any function and on the mobile device it may",
    "start": "492159",
    "end": "500039"
  },
  {
    "text": "be easier because uh resource is not enough sometimes and for uh the PC the",
    "start": "500039",
    "end": "506800"
  },
  {
    "text": "Mac um on the Mac platform uh it is hard even you use up all the memory it will",
    "start": "506800",
    "end": "512959"
  },
  {
    "text": "not Trigg the GC so for debug uh so for debuging purpose it is very easy you can",
    "start": "512959",
    "end": "520039"
  },
  {
    "start": "515000",
    "end": "515000"
  },
  {
    "text": "just uh compile the code to modify and add some uh some uh code to explicitly",
    "start": "520039",
    "end": "527959"
  },
  {
    "text": "uh trigger the the the GC which is possible but it only uh applies to uh",
    "start": "527959",
    "end": "534160"
  },
  {
    "text": "for the debugging purpose uh in the real world it is not feedable and uh recently Y in it's uh",
    "start": "534160",
    "end": "542880"
  },
  {
    "text": "his uh project zero uh block he published a way to uh do the he playay",
    "start": "542880",
    "end": "548399"
  },
  {
    "text": "Ting without GC uh he reserved the memory and then do some uh some thing he",
    "start": "548399",
    "end": "554880"
  },
  {
    "text": "wants to do and he can trigger uh he can free that buffer uh to and then uh put",
    "start": "554880",
    "end": "561959"
  },
  {
    "text": "the uh reliable object to that that uh to that hole which is very good and can",
    "start": "561959",
    "end": "568160"
  },
  {
    "text": "be used to uh to resolve Mo most of the Heap funray issues however that's not",
    "start": "568160",
    "end": "574760"
  },
  {
    "text": "enough uh in some cases and uh uh sometimes it will not meet the needs for the exploiters so uh today I will",
    "start": "574760",
    "end": "582040"
  },
  {
    "text": "introduce a new technology called uh JS control free which I will introduce",
    "start": "582040",
    "end": "587160"
  },
  {
    "text": "later and of course aslr is not a very advanced technology but on different uh",
    "start": "587160",
    "end": "593399"
  },
  {
    "text": "platform the ASR LR random uh level is not the same for example on iOS the aslr",
    "start": "593399",
    "end": "601800"
  },
  {
    "text": "is weak because of the uh dyld sh catch so which means all the modules share a",
    "start": "601800",
    "end": "609200"
  },
  {
    "text": "same uh base however on the Mac OS the aslr is much stronger uh because each module has",
    "start": "609200",
    "end": "617800"
  },
  {
    "start": "611000",
    "end": "611000"
  },
  {
    "text": "independ has two independent base one for the data and one for the text which",
    "start": "617800",
    "end": "623279"
  },
  {
    "text": "indicates that if you uh leak the V table it doesn't doesn't mean that you",
    "start": "623279",
    "end": "629079"
  },
  {
    "text": "defeat aslr because you have to leak another base which is a text base so",
    "start": "629079",
    "end": "634279"
  },
  {
    "text": "that you can perform a a drop and also DP is not a very uh",
    "start": "634279",
    "end": "641240"
  },
  {
    "text": "advanced technology it is implemented by um almost all the platforms uh and uh uh",
    "start": "641240",
    "end": "648639"
  },
  {
    "start": "647000",
    "end": "647000"
  },
  {
    "text": "the last one is sendbox so sendbox uh is regarded as the last layer of protection",
    "start": "648639",
    "end": "655639"
  },
  {
    "text": "which limited the scope of the exploiter to do some bad things uh and it has many",
    "start": "655639",
    "end": "661959"
  },
  {
    "text": "uh sandbox types one is T typical example is the Apple sandbox the enjoyed",
    "start": "661959",
    "end": "667760"
  },
  {
    "text": "sand boox as well as some third party sand box uh the typical example is a",
    "start": "667760",
    "end": "673480"
  },
  {
    "text": "chrome sand boox so uh also you have uh uh nowadays",
    "start": "673480",
    "end": "679920"
  },
  {
    "start": "675000",
    "end": "675000"
  },
  {
    "text": "more and more APS uh are native uh 64bit uh so the typical example is a Mac OS",
    "start": "679920",
    "end": "686839"
  },
  {
    "text": "and the latest iPhone and iPad uh platform and in the future I believe the",
    "start": "686839",
    "end": "692880"
  },
  {
    "text": "enroy platform will use the native a uh 6 of AP which indicates that uh Heap",
    "start": "692880",
    "end": "699440"
  },
  {
    "text": "spraying uh spraying is not very effective and you have to walk around",
    "start": "699440",
    "end": "705160"
  },
  {
    "text": "this issue um maybe you can try to avoid Heap spray",
    "start": "705160",
    "end": "711040"
  },
  {
    "text": "spraying so uh because exploitation on web browsers um especially web kit",
    "start": "711040",
    "end": "718959"
  },
  {
    "text": "browsers is very difficult so I call it the era of uh vulnerability dependent",
    "start": "718959",
    "end": "725480"
  },
  {
    "text": "exploitation which means you need to invent or discover some uh uh",
    "start": "725480",
    "end": "730880"
  },
  {
    "text": "exploitation uh Tech uh techniques uh which only applied to one specific",
    "start": "730880",
    "end": "736480"
  },
  {
    "text": "vulnerability and uh those uh te techniques may not be very useful uh to",
    "start": "736480",
    "end": "742240"
  },
  {
    "text": "apply to other vulnerabilities but the uh method methodology to discover those",
    "start": "742240",
    "end": "749720"
  },
  {
    "text": "uh those methods is very useful so uh now I will talk about a",
    "start": "749720",
    "end": "756959"
  },
  {
    "text": "case study which is p uh 2014 safer uh P",
    "start": "756959",
    "end": "762880"
  },
  {
    "text": "so first is vulnerability so as we know that in HTML we have uh in CSS we have a",
    "start": "762880",
    "end": "769480"
  },
  {
    "start": "763000",
    "end": "763000"
  },
  {
    "text": "a concept called CSS selectors which you can Define uh some CSS selectors uh and",
    "start": "769480",
    "end": "776320"
  },
  {
    "text": "apply those element to some text so here you can see the code um I defined two uh",
    "start": "776320",
    "end": "783560"
  },
  {
    "text": "CS uh CSS selectors and in the memory it will show as uh 32 uh bytes and each for",
    "start": "783560",
    "end": "791360"
  },
  {
    "text": "uh 16 16 BYT and I because I created two so it is",
    "start": "791360",
    "end": "797680"
  },
  {
    "text": "32 and then the CSS selector list can be mutate which means you can use uh get",
    "start": "797680",
    "end": "805079"
  },
  {
    "text": "matched the CSS rules function and uh to change it it's uh selector test property",
    "start": "805079",
    "end": "811240"
  },
  {
    "text": "so here in this example I choose uh text to one uh CSS selectors which means in",
    "start": "811240",
    "end": "818440"
  },
  {
    "text": "the memory you can see that uh another buffer is allocated and this time it is",
    "start": "818440",
    "end": "824480"
  },
  {
    "text": "uh 16 bit uh 16 by because it has only one uh",
    "start": "824480",
    "end": "831360"
  },
  {
    "text": "element however uh when some uh function is called the uh the value of selector",
    "start": "831360",
    "end": "838199"
  },
  {
    "text": "index is still one so one means the second uh second CSS selector uh element",
    "start": "838199",
    "end": "845320"
  },
  {
    "text": "which means uh because now uh you only have one CSS select element but the",
    "start": "845320",
    "end": "851279"
  },
  {
    "text": "index is one which means you may achieve the uh out of boundary",
    "start": "851279",
    "end": "857600"
  },
  {
    "text": "access yeah so in the function uh CSS selector specificity you can see that uh",
    "start": "857600",
    "end": "865079"
  },
  {
    "text": "uh the select index is pointed to uh the the uh memory which does not belong to",
    "start": "865079",
    "end": "871920"
  },
  {
    "text": "the CSS selector however uh if you read the name",
    "start": "871920",
    "end": "877360"
  },
  {
    "text": "of the function you may think that the function only has o read not o WR but",
    "start": "877360",
    "end": "884959"
  },
  {
    "text": "maybe uh we are not correct so a deep look of the CSS selector structure",
    "start": "884959",
    "end": "890519"
  },
  {
    "text": "indicates that uh this fun uh this element contains two uh eight byte poter",
    "start": "890519",
    "end": "897639"
  },
  {
    "text": "one one is a big bit uh 21 bit value which is uh aligned to8 bytes and",
    "start": "897639",
    "end": "904839"
  },
  {
    "text": "followed by a 8 bytes pointer so if we check the code flow",
    "start": "904839",
    "end": "911079"
  },
  {
    "text": "carefully we can see that in some cases o right can be achieved but it is very",
    "start": "911079",
    "end": "917480"
  },
  {
    "text": "restrictive it has to pass a lot of checks to re uh uh to achieve one bit uh",
    "start": "917480",
    "end": "926440"
  },
  {
    "text": "right so you can see that uh this is uh 21 uh uh bit value and uh you have to",
    "start": "926440",
    "end": "934480"
  },
  {
    "start": "927000",
    "end": "927000"
  },
  {
    "text": "meet all those uh conditions uh for example the F uh the uh the third to the",
    "start": "934480",
    "end": "941680"
  },
  {
    "text": "fifth bit must be one one or uh 0 0 or something like that and all these uh uh",
    "start": "941680",
    "end": "949560"
  },
  {
    "text": "conditions is achieved then that value can be uh the the eigh uh bit can be",
    "start": "949560",
    "end": "956199"
  },
  {
    "text": "changed from 0 to one that's a vulnerability so what we we can do uh we",
    "start": "956199",
    "end": "963319"
  },
  {
    "text": "can possibly uh uh choose some options first you can choose a value of uh 0 x40",
    "start": "963319",
    "end": "970880"
  },
  {
    "text": "to 0x c0 this seems to be good although we have some other um uh possible options",
    "start": "970880",
    "end": "980480"
  },
  {
    "text": "they are not that um useful and also there are some other restrictions uh for",
    "start": "980480",
    "end": "986440"
  },
  {
    "text": "example you you uh for that uh value uh the uh offset eight must must be either",
    "start": "986440",
    "end": "994440"
  },
  {
    "text": "zero or a valid point but since you currently you uh it is on the 64bit uh",
    "start": "994440",
    "end": "1002279"
  },
  {
    "text": "Hep spraying is very difficult so you cannot put a very valid pointer uh just",
    "start": "1002279",
    "end": "1009240"
  },
  {
    "text": "after that that bit bit value which is difficult so where we are is that we",
    "start": "1009240",
    "end": "1015120"
  },
  {
    "text": "have a very restrictive one bit right achieved so uh now we should consider what to",
    "start": "1015120",
    "end": "1022000"
  },
  {
    "start": "1019000",
    "end": "1019000"
  },
  {
    "text": "overwrite so the first uh option uh the first conate is of course the WTF string",
    "start": "1022000",
    "end": "1029319"
  },
  {
    "text": "Implement so we can see that it contains the two uh uh some uh Fields like the M",
    "start": "1029319",
    "end": "1036640"
  },
  {
    "text": "ref count um so you can maybe uh change the ref ref count from CX 40 0 x40 to 0x",
    "start": "1036640",
    "end": "1045120"
  },
  {
    "text": "c0 which is not quite useful because if you can change that value to a small",
    "start": "1045120",
    "end": "1051240"
  },
  {
    "text": "smaller value then uh the object can be freed uh earlier which is good but if",
    "start": "1051240",
    "end": "1057760"
  },
  {
    "text": "you make it a larger number it is not useful and also you can choose uh to",
    "start": "1057760",
    "end": "1064440"
  },
  {
    "text": "make the M length bigger which is uh good however the M length is on its",
    "start": "1064440",
    "end": "1070559"
  },
  {
    "text": "higher uh 4 byte position so it is not possible in this",
    "start": "1070559",
    "end": "1077400"
  },
  {
    "text": "case so the next candidate should be the WTF array buffer so look at its uh",
    "start": "1077400",
    "end": "1084919"
  },
  {
    "text": "structure so uh it is a m ref count followed by m data which is a real",
    "start": "1084919",
    "end": "1091200"
  },
  {
    "text": "buffer uh buffer pointer uh pointing to the buffer and the the next is the size",
    "start": "1091200",
    "end": "1098039"
  },
  {
    "text": "of the uh size of the buffer and the last one is M first view which uh the",
    "start": "1098039",
    "end": "1105679"
  },
  {
    "text": "array buffer view isign that that value will be assigned otherwise it is zero",
    "start": "1105679",
    "end": "1111600"
  },
  {
    "text": "which is quite good so uh we can see when no uh AR Ray",
    "start": "1111600",
    "end": "1116760"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "buffer view is assigned the memory layout is like this so under the uh the",
    "start": "1116760",
    "end": "1123159"
  },
  {
    "text": "force field is zero because no uh array buffer view is aant however if uh the",
    "start": "1123159",
    "end": "1129720"
  },
  {
    "text": "array buffer view is aant then the the the first view view pointer should be a",
    "start": "1129720",
    "end": "1136720"
  },
  {
    "text": "valid pointer so uh let me uh reemphasize the overall",
    "start": "1136720",
    "end": "1143799"
  },
  {
    "start": "1140000",
    "end": "1140000"
  },
  {
    "text": "exploitation Str uh strategy so first of course we need to achieve one bit over",
    "start": "1143799",
    "end": "1149600"
  },
  {
    "text": "uh o right and then we can achieve U because we changed the size from 14 to",
    "start": "1149600",
    "end": "1156720"
  },
  {
    "text": "uh to c0 so we can achieve additional 0x80 by right which is quite good and",
    "start": "1156720",
    "end": "1164000"
  },
  {
    "text": "then we we try try to uh achieve the A and A a w and finally we can uh achieve",
    "start": "1164000",
    "end": "1171240"
  },
  {
    "text": "the remote code execution so uh we we construct this",
    "start": "1171240",
    "end": "1176760"
  },
  {
    "text": "kind of uh uh memory layout so it contains two chunk one is the zx20 chunk",
    "start": "1176760",
    "end": "1183960"
  },
  {
    "text": "which uh you have a a buffer uh a ray buffer right uh in in front uh behind",
    "start": "1183960",
    "end": "1191159"
  },
  {
    "text": "the uh in front of the CSS select array which you can use it to achieve the OB",
    "start": "1191159",
    "end": "1198039"
  },
  {
    "text": "right and then you have a lot of zx40 Chunk which you stored some uh array uh array",
    "start": "1198039",
    "end": "1206240"
  },
  {
    "text": "buffer uh the real buffer and following by a a web key uh web core object which",
    "start": "1206240",
    "end": "1214240"
  },
  {
    "text": "has the V table so that you can leak that v v table out to to defeat the",
    "start": "1214240",
    "end": "1222600"
  },
  {
    "text": "aslr however something we forgot if you do this memory layout immediately you",
    "start": "1222600",
    "end": "1227960"
  },
  {
    "text": "can see that the process is crashed this is because just after that uh one bit",
    "start": "1227960",
    "end": "1234200"
  },
  {
    "text": "right there is a a loop that Loop will travel against the whole CSS list until",
    "start": "1234200",
    "end": "1241200"
  },
  {
    "text": "it find it is the last CSS list uh CSS select list so uh you can see that it",
    "start": "1241200",
    "end": "1248280"
  },
  {
    "text": "used the a bit which is called the is last in t history which is its uh 18th",
    "start": "1248280",
    "end": "1255960"
  },
  {
    "text": "bit if this bit is set to one then it means some uh the last um CSS selector",
    "start": "1255960",
    "end": "1263039"
  },
  {
    "text": "is uh accessed so it will quit the loop otherwise it will keeping uh two Travers",
    "start": "1263039",
    "end": "1269200"
  },
  {
    "text": "uh until uh the uh the the the process is crashed so uh let's uh adjust the",
    "start": "1269200",
    "end": "1276760"
  },
  {
    "text": "memory layout we can put another uh array buffer which has the uh SES 0x",
    "start": "1276760",
    "end": "1284640"
  },
  {
    "text": "20,000 uh behind that uh 0x 40 a r buffer uh which indicates that M uh is",
    "start": "1284640",
    "end": "1292880"
  },
  {
    "text": "last in tag history uh is set so that uh the process will not crash uh if uh with",
    "start": "1292880",
    "end": "1300360"
  },
  {
    "text": "that we we will of course uh cause some byproduct it will have uh additionally",
    "start": "1300360",
    "end": "1308000"
  },
  {
    "text": "uh additional uh 20,000 chunk a lot of uh of those buffers and of course those",
    "start": "1308000",
    "end": "1314919"
  },
  {
    "text": "buffers will not be wasted just for uh to avoid the process crash we can use",
    "start": "1314919",
    "end": "1320720"
  },
  {
    "text": "those big buffers to stall our op Gadget later on so uh the problem here is that uh",
    "start": "1320720",
    "end": "1329159"
  },
  {
    "text": "what which uh Z x40 web call object to choose because this web uh web kit Webb",
    "start": "1329159",
    "end": "1336159"
  },
  {
    "text": "core object will be used to leak the V table so uh of course you you also need",
    "start": "1336159",
    "end": "1342720"
  },
  {
    "text": "to leak the another Base called the text base so uh you need to have some uh",
    "start": "1342720",
    "end": "1350480"
  },
  {
    "text": "candidate so uh a typical uh case is that you you need to have that uh object",
    "start": "1350480",
    "end": "1358200"
  },
  {
    "text": "containing a v table as well as a vector element so that you can uh put a pointer",
    "start": "1358200",
    "end": "1365000"
  },
  {
    "text": "to that Vector to uh read some uh to to achieve the a so uh the good candidate",
    "start": "1365000",
    "end": "1372520"
  },
  {
    "text": "uh for example is HTML link element uh the SVG test element and The Source buff",
    "start": "1372520",
    "end": "1378880"
  },
  {
    "text": "list is essal but uh none of them is zx40 so that's not a good option so we",
    "start": "1378880",
    "end": "1385520"
  },
  {
    "text": "have a option too that we can maybe um put that to the two faces one is to put",
    "start": "1385520",
    "end": "1392320"
  },
  {
    "text": "a object just having a v table uh object uh into that memory and then try to free",
    "start": "1392320",
    "end": "1399240"
  },
  {
    "text": "it and after we free free it we can uh put another object containing uh meeting",
    "start": "1399240",
    "end": "1406799"
  },
  {
    "text": "our needs for example we can put array buffer view uh into that that memory so",
    "start": "1406799",
    "end": "1412400"
  },
  {
    "text": "that we can achieve a and aw so uh uh that uh I will introduce the",
    "start": "1412400",
    "end": "1419200"
  },
  {
    "start": "1415000",
    "end": "1415000"
  },
  {
    "text": "JS control fre so in some uh uh some uh objects of web web web kit we can see",
    "start": "1419200",
    "end": "1426200"
  },
  {
    "text": "that uh the object can be allocated if you uh set the uh property of that JS uh",
    "start": "1426200",
    "end": "1435000"
  },
  {
    "text": "JS object and you you can free it by by just onset uh that value so a typical",
    "start": "1435000",
    "end": "1442559"
  },
  {
    "text": "example is uh web core number input type so you can see that if we we set its",
    "start": "1442559",
    "end": "1448559"
  },
  {
    "text": "type to number it will allocate zx40 uh byte memory and if we make it uh n it",
    "start": "1448559",
    "end": "1456720"
  },
  {
    "text": "will be freed so I call this kind of object JS control free and in the web",
    "start": "1456720",
    "end": "1462520"
  },
  {
    "text": "kit you can um find a lot of such objects by uh by searching the patterns",
    "start": "1462520",
    "end": "1468520"
  },
  {
    "text": "which is quite good so uh let's adjust the memory",
    "start": "1468520",
    "end": "1474399"
  },
  {
    "text": "layout so in the 0x 20 Chunk we uh we we just put it uh as usual and also in the",
    "start": "1474399",
    "end": "1482080"
  },
  {
    "text": "0x 40 Chunk we put that uh that number element uh number input type uh in front",
    "start": "1482080",
    "end": "1490000"
  },
  {
    "text": "of uh the Overflow the buffer so and then we we just free it after we free it",
    "start": "1490000",
    "end": "1497080"
  },
  {
    "text": "we fill it with a r buff view so that we can achieve the A and",
    "start": "1497080",
    "end": "1503279"
  },
  {
    "text": "A so uh after uh with those te uh techniques equipped we can just uh make",
    "start": "1503279",
    "end": "1510279"
  },
  {
    "text": "the A and aw and here is the uh code PR",
    "start": "1510279",
    "end": "1516760"
  },
  {
    "text": "primitive so uh the next topic is uh how we try uh try to uh avoid that Heap",
    "start": "1516840",
    "end": "1524600"
  },
  {
    "text": "spraying uh because uh of the six 4bit uh platform so with the A and aw this",
    "start": "1524600",
    "end": "1532640"
  },
  {
    "text": "can be really really easy we can just put a v table uh as the M uh base uh",
    "start": "1532640",
    "end": "1539440"
  },
  {
    "text": "address and then we can achieve a to read the content of the V table so after",
    "start": "1539440",
    "end": "1545640"
  },
  {
    "text": "reading the content of V table we can link the text uh section base so that we",
    "start": "1545640",
    "end": "1552399"
  },
  {
    "text": "can construct the r and then uh uh we can uh with the a",
    "start": "1552399",
    "end": "1558360"
  },
  {
    "text": "we can know the uh address of that uh 0x 20,000 buffer so that we can put our",
    "start": "1558360",
    "end": "1564520"
  },
  {
    "text": "Shell Code into that buffer and change a v table uh to that buffer so that we can",
    "start": "1564520",
    "end": "1570200"
  },
  {
    "text": "achieve the arbitrary uh code access or code execution without hip",
    "start": "1570200",
    "end": "1576600"
  },
  {
    "text": "spray and another problem here is that how we can avoid that our piece because",
    "start": "1576600",
    "end": "1582480"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "our piece is not very uh stable it relies on version a lot",
    "start": "1582480",
    "end": "1588320"
  },
  {
    "text": "so uh let's uh look at the uh mechanism of the web kit uh on 64bit so you can",
    "start": "1588320",
    "end": "1595640"
  },
  {
    "text": "see that upon the uh process creation uh 128 megabyte jit P page will be",
    "start": "1595640",
    "end": "1604120"
  },
  {
    "text": "allocated and you can see that uh you can find the address here is quite",
    "start": "1604120",
    "end": "1610159"
  },
  {
    "text": "different uh from other addresses like the image address or the Hep address the",
    "start": "1610159",
    "end": "1616279"
  },
  {
    "text": "the address is quite different so if if there is any way for us to",
    "start": "1616279",
    "end": "1622840"
  },
  {
    "text": "search that the memory to find that jit page uh by by some smart uh methods so",
    "start": "1622840",
    "end": "1631080"
  },
  {
    "text": "that we can avoid the ROP the actually uh you can see uh in JavaScript uh",
    "start": "1631080",
    "end": "1638240"
  },
  {
    "text": "JavaScript call module uh there is a symbol called the start of uh fixed",
    "start": "1638240",
    "end": "1644080"
  },
  {
    "text": "executable memory pool which will point to that jit page which is quite good and",
    "start": "1644080",
    "end": "1650520"
  },
  {
    "text": "uh you you now have the solution which is you can point uh just uh use the",
    "start": "1650520",
    "end": "1656320"
  },
  {
    "text": "offset uh because uh the on some specific uh web kit version that offset",
    "start": "1656320",
    "end": "1663640"
  },
  {
    "text": "will be fixed which is very good for example in this case you can just use the offset 3d3 B8 which uh is the offset",
    "start": "1663640",
    "end": "1673200"
  },
  {
    "text": "of the uh points to the start of the uh git port but this is a very dirty",
    "start": "1673200",
    "end": "1679320"
  },
  {
    "text": "solution and on different version of web kit that offset will be",
    "start": "1679320",
    "end": "1684799"
  },
  {
    "text": "different so uh we we can um uh we can",
    "start": "1684799",
    "end": "1690200"
  },
  {
    "text": "find a more uh smarter way to find the jit page uh by looking at the source",
    "start": "1690200",
    "end": "1695480"
  },
  {
    "text": "code when uh the uh git page is allocated so we can find that it has a",
    "start": "1695480",
    "end": "1700880"
  },
  {
    "text": "minim uh it just uh allocate a very random value and do some shift so so you",
    "start": "1700880",
    "end": "1707679"
  },
  {
    "text": "can see the highest some bits are always zero and the the lower uh the least uh",
    "start": "1707679",
    "end": "1714720"
  },
  {
    "text": "20 bits are always zero and it has the minimum value and the maximum value and",
    "start": "1714720",
    "end": "1722320"
  },
  {
    "text": "um the red part here can can be a even",
    "start": "1722320",
    "end": "1727559"
  },
  {
    "text": "value which can be only be one uh 0 2 4 68",
    "start": "1727559",
    "end": "1734240"
  },
  {
    "text": "AC uh which means it can be divided by two to so with that pattern we can do a",
    "start": "1734240",
    "end": "1741039"
  },
  {
    "text": "JavaScript search to search that memory so that finally we can find that jit",
    "start": "1741039",
    "end": "1746480"
  },
  {
    "text": "page without any problem so after that we can get the code",
    "start": "1746480",
    "end": "1752840"
  },
  {
    "text": "execution so uh let me summarize the web kit exploit so uh the this uh kind of",
    "start": "1752919",
    "end": "1760200"
  },
  {
    "start": "1753000",
    "end": "1753000"
  },
  {
    "text": "vulnerabilities can impact on all uh web Kate uh APS so it is very dangerous",
    "start": "1760200",
    "end": "1766720"
  },
  {
    "text": "however you may need to have different exploitation techniques uh on different",
    "start": "1766720",
    "end": "1772279"
  },
  {
    "text": "platforms that that means you have to uh uh be very familiar with the uh webkit",
    "start": "1772279",
    "end": "1778840"
  },
  {
    "text": "source source code as well as exploitation",
    "start": "1778840",
    "end": "1783880"
  },
  {
    "text": "method so uh after we have this case study we should uh find out a very uh",
    "start": "1783880",
    "end": "1791880"
  },
  {
    "text": "find out the reason why it can be exploited so that we can give the uh the",
    "start": "1791880",
    "end": "1797679"
  },
  {
    "text": "the suggestions to the vendor so uh the first uh suggestion to",
    "start": "1797679",
    "end": "1803360"
  },
  {
    "text": "Apple is that you can uh put a lot of frequently used objects uh to uh hip",
    "start": "1803360",
    "end": "1810600"
  },
  {
    "text": "Arena just like uh Chrome I think uh for example the the type ofray will be put",
    "start": "1810600",
    "end": "1817240"
  },
  {
    "text": "at V8 uh Hep and but in uh Safari it is",
    "start": "1817240",
    "end": "1822600"
  },
  {
    "text": "not so maybe we can do that and also we we need to enable the memory allocation",
    "start": "1822600",
    "end": "1829240"
  },
  {
    "text": "randomization so U especially for some small memory allocation because currently uh the the web web kit and JSC",
    "start": "1829240",
    "end": "1837880"
  },
  {
    "text": "use TC my lock which um is not quite random uh if you uh allocate the memory",
    "start": "1837880",
    "end": "1844919"
  },
  {
    "text": "for the specific size then uh the memory will be consecutive and also uh um here because",
    "start": "1844919",
    "end": "1853440"
  },
  {
    "text": "I introduced the JS control fre those uh object is quite good but uh it may uh",
    "start": "1853440",
    "end": "1860679"
  },
  {
    "text": "may be a tool for the for the exploiter to uh to craft the memory layout to",
    "start": "1860679",
    "end": "1866799"
  },
  {
    "text": "achieve the Hep fun which is really bad so uh maybe we can uh reduce number of",
    "start": "1866799",
    "end": "1873760"
  },
  {
    "text": "of objects which with the JS control free uh feature and also we of course",
    "start": "1873760",
    "end": "1879960"
  },
  {
    "text": "need to make the jit page hard harder to guess especially for the 60 uh 64bit",
    "start": "1879960",
    "end": "1888639"
  },
  {
    "text": "so uh the suggesting to Apple and Google because they both maintain the code of",
    "start": "1888639",
    "end": "1893679"
  },
  {
    "text": "the uh of the uh web kit so uh always I can see some uh security fix applied to",
    "start": "1893679",
    "end": "1901279"
  },
  {
    "text": "some code uh Branch but it will not be applied to all the code branch which",
    "start": "1901279",
    "end": "1906399"
  },
  {
    "text": "will leave some uh time window for the hackers to exploit and of course uh to some OS OEM",
    "start": "1906399",
    "end": "1915240"
  },
  {
    "text": "and some AP vendor my suggestion is that you have you need to upgrade the web kit",
    "start": "1915240",
    "end": "1922159"
  },
  {
    "text": "version and the web kit uh libraries frequently to avoid some undes being",
    "start": "1922159",
    "end": "1928360"
  },
  {
    "text": "exploited by some AP guys for a long time which is really really bad so uh",
    "start": "1928360",
    "end": "1935240"
  },
  {
    "text": "although we can still exploit web kit I have to um admit that it is the best and",
    "start": "1935240",
    "end": "1942559"
  },
  {
    "text": "the most secure rendering engine in the world so uh with with my research I need",
    "start": "1942559",
    "end": "1948720"
  },
  {
    "text": "to thank uh the following persons who helped me a lot during my research",
    "start": "1948720",
    "end": "1954080"
  },
  {
    "text": "thanks a lot and uh uh here uh that's all for my topic any",
    "start": "1954080",
    "end": "1961840"
  },
  {
    "text": "questions",
    "start": "1966960",
    "end": "1969960"
  }
]