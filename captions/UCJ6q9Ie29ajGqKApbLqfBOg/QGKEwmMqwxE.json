[
  {
    "text": "[Music]",
    "start": "4120",
    "end": "14550"
  },
  {
    "text": "hi everyone thanks for attending my talk uh today i'm going to talk about tpm field which is related to some vulnerabilities",
    "start": "15040",
    "end": "22000"
  },
  {
    "text": "on uh trusted platform modules that can actually be exploited to the",
    "start": "22000",
    "end": "27119"
  },
  {
    "text": "cryptographic keys from these secure platforms my name is daniel morimi i'm a security",
    "start": "27119",
    "end": "33440"
  },
  {
    "text": "researcher and i've been working as a phd student on a few topics like microarchitectural",
    "start": "33440",
    "end": "39520"
  },
  {
    "text": "attacks side channels and applying them to break crypto implementations and intellectuals",
    "start": "39520",
    "end": "46000"
  },
  {
    "text": "and and you can reach reach out to me on my twitter or dark information on my website as well",
    "start": "46000",
    "end": "52640"
  },
  {
    "text": "before i start my talk i would like to also thank my collaborators in some of these works",
    "start": "52640",
    "end": "59359"
  },
  {
    "text": "like my advisors burke sooner nadia henninger thomas eisenberg and",
    "start": "59359",
    "end": "64559"
  },
  {
    "text": "john vishelman before we uh dive into the topic of this uh",
    "start": "64559",
    "end": "72000"
  },
  {
    "text": "this presentation which is related to site channel crypto analysis uh we we basically motivate on the fact",
    "start": "72000",
    "end": "79200"
  },
  {
    "text": "that on traditional crypto analysis an attacker try to look at a crypto system at the input and",
    "start": "79200",
    "end": "85840"
  },
  {
    "text": "output of this crypto system and try to find some flaws that can be used to leak the crypto key",
    "start": "85840",
    "end": "91840"
  },
  {
    "text": "uh by just finding some design flow and things like that a good example of this",
    "start": "91840",
    "end": "97439"
  },
  {
    "text": "happened 10 years ago on playstation 3 that they were using",
    "start": "97439",
    "end": "102479"
  },
  {
    "text": "ucdsa nuts in the proper way and what happened then it was that so in",
    "start": "102479",
    "end": "108240"
  },
  {
    "text": "cdsa we have like this fancy equations here that we can compute",
    "start": "108240",
    "end": "114320"
  },
  {
    "text": "a signature pair and here in these equations there is a nonce that is a secret value that need to be generated",
    "start": "114320",
    "end": "120079"
  },
  {
    "text": "for each signatures uniquely and randomly and there is a private key here that",
    "start": "120079",
    "end": "125439"
  },
  {
    "text": "that is the private key for for that message and what happened back then is that the",
    "start": "125439",
    "end": "131520"
  },
  {
    "text": "designers of playstation 3 they basically used the same nouns for all the messages and this",
    "start": "131520",
    "end": "137360"
  },
  {
    "text": "equation turned to something like this and when you do that the problem is that if you just",
    "start": "137360",
    "end": "142720"
  },
  {
    "text": "generate two messages and you subtract them from each other you get a much simpler equation with just one unknown variable and you can",
    "start": "142720",
    "end": "149760"
  },
  {
    "text": "just calculate the private key from this so this is a huge design issue and",
    "start": "149760",
    "end": "155360"
  },
  {
    "text": "that's what uh traditional crypto analysis is about that people try to find design issue in the actual",
    "start": "155360",
    "end": "161920"
  },
  {
    "text": "algorithm or the actual design of uh some crypto system to break it but",
    "start": "161920",
    "end": "167040"
  },
  {
    "text": "inside channel crypto analysis we are not playing the fair the same fair game we actually have more",
    "start": "167040",
    "end": "173599"
  },
  {
    "text": "information about the the system and the idea is that during the execution of a crypto system we can",
    "start": "173599",
    "end": "180800"
  },
  {
    "text": "learn some signal uh something like timing channel or other things that can actually be used to",
    "start": "180800",
    "end": "187200"
  },
  {
    "text": "perform key recovery in a more efficient way and there are lots of different type of",
    "start": "187200",
    "end": "192560"
  },
  {
    "text": "side channels for example there is power attack electromagnetic attacks timing attacks cache attacks",
    "start": "192560",
    "end": "198239"
  },
  {
    "text": "and these attacks they are generally they have a very complicated thread models because some of them can be",
    "start": "198239",
    "end": "204239"
  },
  {
    "text": "conducted not phys on a physical access device scenario or some of them can only be",
    "start": "204239",
    "end": "209440"
  },
  {
    "text": "done in a local attack scenario like in the cloud and some of them can also be done in remotely and this",
    "start": "209440",
    "end": "214560"
  },
  {
    "text": "actually makes it really complicated for crypto developers to implement an algorithm to be secure against all",
    "start": "214560",
    "end": "221280"
  },
  {
    "text": "these different scenarios so you mentioned that today talk is",
    "start": "221280",
    "end": "226480"
  },
  {
    "text": "about uh trusted platform module uh so just basic what is trusted platform module",
    "start": "226480",
    "end": "232480"
  },
  {
    "text": "the basic idea is that we know that we cannot really rely on operating system or the hypervisor",
    "start": "232480",
    "end": "239519"
  },
  {
    "text": "for roots of trust and security because there are all sorts of attacks that compromise the system software like",
    "start": "239519",
    "end": "245519"
  },
  {
    "text": "there is uh there is root kits there are different things and we know that even sometimes the cpu",
    "start": "245519",
    "end": "250640"
  },
  {
    "text": "cannot be trusted as we have seen by attacks like meltdown and spectra so the idea is we need something like",
    "start": "250640",
    "end": "256639"
  },
  {
    "text": "hardware based off root of truss and we have designed things like trusted platform module for instance",
    "start": "256639",
    "end": "262639"
  },
  {
    "text": "trusted platform module is a secure element that is a standard and it has to support a standard set of",
    "start": "262639",
    "end": "268320"
  },
  {
    "text": "functionality and the other promise of this transfer platform module is that",
    "start": "268320",
    "end": "273759"
  },
  {
    "text": "it basically uh defines a security chip that need to be secure against even",
    "start": "273759",
    "end": "280240"
  },
  {
    "text": "some of the physical attacks like uh like tampering and side channel attacks and uh this uh",
    "start": "280240",
    "end": "286160"
  },
  {
    "text": "tpm devices uh basically when you have one of these you can simply put all your crypto keys or",
    "start": "286160",
    "end": "292160"
  },
  {
    "text": "important as an insight is inside this kind of a safe and if the os",
    "start": "292160",
    "end": "297280"
  },
  {
    "text": "or the cloud provider or any of the software level or even anything that runs basically on",
    "start": "297280",
    "end": "302639"
  },
  {
    "text": "your cpu get compromised they cannot subvert the entire control and they cannot access to",
    "start": "302639",
    "end": "308720"
  },
  {
    "text": "all of the information so what is inside this security chip or",
    "start": "308720",
    "end": "315280"
  },
  {
    "text": "trusted platform module there is a specific set of functionalities that is defined by trusted computing group and organization",
    "start": "315280",
    "end": "323120"
  },
  {
    "text": "and basically based on this definition this trusted platform module has to support some",
    "start": "323120",
    "end": "329600"
  },
  {
    "text": "secure storage and also some cryptographic functionalities like digital signatures and",
    "start": "329600",
    "end": "334960"
  },
  {
    "text": "we're going to talk about digital signatures more in this talk and it's important but in general",
    "start": "334960",
    "end": "341840"
  },
  {
    "text": "these digital signatures uh can help us to execute signing operations more",
    "start": "341840",
    "end": "347199"
  },
  {
    "text": "securely and nowadays there are lots of software stacks like the linux software stack or open ssl",
    "start": "347199",
    "end": "353120"
  },
  {
    "text": "that they actually support using trusted platform module or tpms for",
    "start": "353120",
    "end": "358720"
  },
  {
    "text": "performing signing operations whether it's rsa or ecdsa and another important aspect of these",
    "start": "358720",
    "end": "364880"
  },
  {
    "text": "digital signatures is that you can actually use them to perform a remote attestation of",
    "start": "364880",
    "end": "370639"
  },
  {
    "text": "hardware from like the other side of the internet you don't know if another part is running the correct",
    "start": "370639",
    "end": "376560"
  },
  {
    "text": "firmware the correct hardware and you can use remote attestation to verify some of these promises",
    "start": "376560",
    "end": "383360"
  },
  {
    "text": "since 2010 trusted platform module version 2 now supports elliptic curve digital",
    "start": "383360",
    "end": "389600"
  },
  {
    "text": "signatures and schemes like ecdsa or ecdaa and",
    "start": "389600",
    "end": "394639"
  },
  {
    "text": "these schemes use elliptic curves that are actually more efficient and uh are actually more popular",
    "start": "394639",
    "end": "400960"
  },
  {
    "text": "nowadays so one thing we mentioned is that okay these uh trusted platform modules they have some",
    "start": "400960",
    "end": "408080"
  },
  {
    "text": "standard and they need to support a set of functionalities but one thing that we are interested in",
    "start": "408080",
    "end": "414240"
  },
  {
    "text": "to know also if these devices actually support any if this is standard supports any",
    "start": "414240",
    "end": "420080"
  },
  {
    "text": "implementation standard like how do we know if these uh hardware devices the",
    "start": "420080",
    "end": "425280"
  },
  {
    "text": "security chips are actually implemented properly so tcg expect designers and developers",
    "start": "425280",
    "end": "432720"
  },
  {
    "text": "of these products to maintain a security assurance according to common criteria",
    "start": "432720",
    "end": "438319"
  },
  {
    "text": "and the level of assurance they expect is a l4 plus and if you go on the tcg website you can",
    "start": "438319",
    "end": "444560"
  },
  {
    "text": "also find a list of devices that actually have proper certificates and for instance in this picture we see",
    "start": "444560",
    "end": "451440"
  },
  {
    "text": "some devices from sd microelectronics or new photon or infinii and that that are listed here",
    "start": "451440",
    "end": "458560"
  },
  {
    "text": "and uh for example one one thing here we looked at is this is like a",
    "start": "458560",
    "end": "464800"
  },
  {
    "text": "picture of st microelectronics that i actually took from the laptop",
    "start": "464800",
    "end": "470080"
  },
  {
    "text": "that i'm using today for this presentation and we looked at the data sheet of this",
    "start": "470080",
    "end": "475120"
  },
  {
    "text": "uh this chip and it shows that okay this this is this supports resistance against sidechain attacks and we also looked at",
    "start": "475120",
    "end": "481759"
  },
  {
    "text": "the evaluation and uh here is the link for the evaluation of this uh tpm chip and uh it's also like we made",
    "start": "481759",
    "end": "489759"
  },
  {
    "text": "like we looked at through the different part of this evaluation it says okay this is the version that is",
    "start": "489759",
    "end": "495919"
  },
  {
    "text": "evaluated and this is the date that the evaluation has been conducted and there are some interesting information like",
    "start": "495919",
    "end": "502479"
  },
  {
    "text": "for instance both the rsa and ecc keys are actually used for endorsements of this device which is the",
    "start": "502479",
    "end": "509759"
  },
  {
    "text": "root security key that is used for these devices and there is also other things that says for instance this",
    "start": "509759",
    "end": "516560"
  },
  {
    "text": "device need to maintain security of all the assets inside it and the list of assets is",
    "start": "516560",
    "end": "521839"
  },
  {
    "text": "defined by the protection profile the user key or other other keys that are stored in the",
    "start": "521839",
    "end": "527920"
  },
  {
    "text": "storage they all need to be protected for the implementation of these devices",
    "start": "527920",
    "end": "533200"
  },
  {
    "text": "and more explicitly it also says that this evaluation supports side chain attacks",
    "start": "533200",
    "end": "539440"
  },
  {
    "text": "and timings attacks and attacks like spa and dpa and there is also",
    "start": "539440",
    "end": "544560"
  },
  {
    "text": "other information like uh yeah the standard that it need to support physical manipulation and",
    "start": "544560",
    "end": "551040"
  },
  {
    "text": "physical probing is covered so you see that basically this says that",
    "start": "551040",
    "end": "556320"
  },
  {
    "text": "okay this uh device actually supports mitigation against this uh sidechain attack so now the question",
    "start": "556320",
    "end": "563519"
  },
  {
    "text": "is okay should we just rely on these certificates and say okay this is done this is a secure device or",
    "start": "563519",
    "end": "569680"
  },
  {
    "text": "not so the first thing we wanted to basically test is the simplest test that's uh also very",
    "start": "569680",
    "end": "576959"
  },
  {
    "text": "practical is a timing test because if you can recover any key from these devices using a timing attack it's actually very",
    "start": "576959",
    "end": "582959"
  },
  {
    "text": "valuable and uh it's a attack that is not intrusive it can even may be done",
    "start": "582959",
    "end": "588080"
  },
  {
    "text": "remotely so to build a testing tool and measure the timing of these tpm",
    "start": "588080",
    "end": "594560"
  },
  {
    "text": "devices what we did is that we looked at the cpu cycle count because we realized that most of these tpm",
    "start": "594560",
    "end": "601680"
  },
  {
    "text": "devices are implemented on a very low cost uh micro processor that may run like 100",
    "start": "601680",
    "end": "608240"
  },
  {
    "text": "times slower than a cpu so using cpu cycle count is a good good way to measure",
    "start": "608240",
    "end": "613920"
  },
  {
    "text": "time for these devices and without any special equipment or anything anything",
    "start": "613920",
    "end": "619920"
  },
  {
    "text": "so one of these devices that we we looked at initially was called",
    "start": "619920",
    "end": "624959"
  },
  {
    "text": "intel platform trust technology or intel ftpm this intel ftpm the idea is that they have implemented",
    "start": "624959",
    "end": "631440"
  },
  {
    "text": "the tpm features as as it is defined by tcg as a module that",
    "start": "631440",
    "end": "636880"
  },
  {
    "text": "runs on the csme or management engine inside the same die as the cpu and this",
    "start": "636880",
    "end": "643920"
  },
  {
    "text": "management engine also runs its own microprocessor so it's separate from the cpu so even if the cpu gets compromised",
    "start": "643920",
    "end": "650320"
  },
  {
    "text": "you cannot really you are not supposed to have access to that microprocessor or even though if they are on the same die",
    "start": "650320",
    "end": "656320"
  },
  {
    "text": "and this has been around now for a long time since haspel and it's very popular because uh most",
    "start": "656320",
    "end": "662160"
  },
  {
    "text": "computers and laptops nowadays they can just rely on and these if they have an intel cpu and they don't",
    "start": "662160",
    "end": "667600"
  },
  {
    "text": "need to attach a separate uh trusted platform modular dedicated trusted platform azure to your motherboard",
    "start": "667600",
    "end": "673440"
  },
  {
    "text": "we did an initial initial timing test and we realized that okay if we run ecdsa on this tpm",
    "start": "673440",
    "end": "682399"
  },
  {
    "text": "firmware tpm we see that for different executions of the same",
    "start": "682399",
    "end": "687440"
  },
  {
    "text": "ecdsa function with the same private key the timing operations are actually different",
    "start": "687440",
    "end": "692720"
  },
  {
    "text": "for different execution and here we see a histogram of a different histogram of a number of",
    "start": "692720",
    "end": "699760"
  },
  {
    "text": "signature operations and their timing so this got kind of our curiosity like okay",
    "start": "699760",
    "end": "706720"
  },
  {
    "text": "so we see as timing behavior here this is interesting can we do better so what we did is that",
    "start": "706720",
    "end": "712320"
  },
  {
    "text": "we basically implemented a tool to do this timing measurement more precisely our tool basically",
    "start": "712320",
    "end": "718720"
  },
  {
    "text": "uh override some of the functionality of the linux kernel stack for tpm and this uh",
    "start": "718720",
    "end": "726079"
  },
  {
    "text": "this functionality when is override then with our tool we can actually measure the time of the tpm operation as close as",
    "start": "726079",
    "end": "733040"
  },
  {
    "text": "possible to the interface of the tpm device and by doing that we can get a very high",
    "start": "733040",
    "end": "738160"
  },
  {
    "text": "resolution timing of what's actually going on or if there is any anything interesting and when we did that we saw",
    "start": "738160",
    "end": "744639"
  },
  {
    "text": "that okay this gaussian distribution actually become even more more separated and we see that there are two",
    "start": "744639",
    "end": "750480"
  },
  {
    "text": "different brackets here in the in this uh timing operation that is measured by with a root access",
    "start": "750480",
    "end": "757680"
  },
  {
    "text": "so we use the same key to generate all the signatures and this actually told us that okay if we",
    "start": "757680",
    "end": "764560"
  },
  {
    "text": "use the same key to generate all these signatures the only thing that is changing is the nonce and that could be",
    "start": "764560",
    "end": "770320"
  },
  {
    "text": "the reason that we see this timing behavior so we looked at the nonsense for some of the signatures we generated",
    "start": "770320",
    "end": "776000"
  },
  {
    "text": "and we realized that there is actually a leakage behavior that is directly correlated with the",
    "start": "776000",
    "end": "781120"
  },
  {
    "text": "bit length of the nuts so for example if you execute uh this uh a",
    "start": "781120",
    "end": "787360"
  },
  {
    "text": "signature operation and this is the nonce that is used we see some some timing like this and if",
    "start": "787360",
    "end": "792959"
  },
  {
    "text": "there is like four bit window of leading zero bit at the beginning of it and once we see that the timing is much",
    "start": "792959",
    "end": "799120"
  },
  {
    "text": "faster and so and so we see that for every additional four bit window of leading zero bits at the nonce the",
    "start": "799120",
    "end": "806240"
  },
  {
    "text": "signature is generated much faster and for instance if we have like a 12 leading zero bit in a",
    "start": "806240",
    "end": "812240"
  },
  {
    "text": "signature the signature may be slowed maybe faster like for more than three milliseconds",
    "start": "812240",
    "end": "818480"
  },
  {
    "text": "which is a very high timing behavior that maybe even be observable over a network",
    "start": "818480",
    "end": "825680"
  },
  {
    "text": "and here i prepared basically a demo of how such a such an attack works",
    "start": "825680",
    "end": "832079"
  },
  {
    "text": "that we can collect timing measurements first we use a script to generate open ssl generate a cd saq using open",
    "start": "832079",
    "end": "840720"
  },
  {
    "text": "sshold and then we program the device with this key so this is script runs we program the device with a",
    "start": "840720",
    "end": "846959"
  },
  {
    "text": "new new key for ecdsa operation and if you look at the key we see that",
    "start": "846959",
    "end": "853920"
  },
  {
    "text": "okay we have generated a 256 bit ecdsa key and",
    "start": "853920",
    "end": "861519"
  },
  {
    "text": "yeah and here is the key the private key starts with the hex value 92 and so on",
    "start": "861519",
    "end": "869279"
  },
  {
    "text": "and then we have another script here that basically uses our tool to measure the time and also run a tpm signing operation so",
    "start": "869279",
    "end": "876639"
  },
  {
    "text": "we use this tool basically to generate signatures and also measure the time of execution of that signature and when we",
    "start": "876639",
    "end": "883839"
  },
  {
    "text": "run this tool we see that a new entry has been added that it has some signature pair and some timing",
    "start": "883839",
    "end": "890399"
  },
  {
    "text": "values and if we keep running this script we see that okay another entry has been added",
    "start": "890399",
    "end": "895440"
  },
  {
    "text": "so in our for our attack we basically run this script for a while and here we have also",
    "start": "895440",
    "end": "901040"
  },
  {
    "text": "a live histogram of what's happening here that we see that uh as we generate these",
    "start": "901040",
    "end": "906079"
  },
  {
    "text": "signatures some of these signatures are faster and this means that the bit length of the nonce was",
    "start": "906079",
    "end": "912399"
  },
  {
    "text": "shorter for the signatures and this histogram as we see is populated with this",
    "start": "912399",
    "end": "917440"
  },
  {
    "text": "bit length value and we see that some of the signatures are faster and",
    "start": "917440",
    "end": "923519"
  },
  {
    "text": "for an attack we are generally interested for the signatures that are on the on the left brackets because we know",
    "start": "923519",
    "end": "929199"
  },
  {
    "text": "that they have some bios in their nuts",
    "start": "929199",
    "end": "939990"
  },
  {
    "text": "[Music]",
    "start": "939990",
    "end": "943720"
  },
  {
    "text": "so this was a vulnerability basically we found an intel fdpm or intel ptt and",
    "start": "952480",
    "end": "959199"
  },
  {
    "text": "even though this device has some security guarantees like the phipps certificate but it",
    "start": "959199",
    "end": "965920"
  },
  {
    "text": "doesn't have any cc evaluation and it's not listed on trusted computing group",
    "start": "965920",
    "end": "971040"
  },
  {
    "text": "website so we're very interested to also see if there are similar vulnerabilities in other tpm devices so",
    "start": "971040",
    "end": "977120"
  },
  {
    "text": "we used our tool to do timing test of a bunch of computers that we had in the",
    "start": "977120",
    "end": "983440"
  },
  {
    "text": "lab this computer some of them they just use the intel uh ftpm and when we ran this",
    "start": "983440",
    "end": "989680"
  },
  {
    "text": "uh test on intel ftpm almost all of the devices that were using this intel ftpm are vulnerable to",
    "start": "989680",
    "end": "995279"
  },
  {
    "text": "this timing behavior and then we also found some interesting thing and uh interesting other timing behaviors on",
    "start": "995279",
    "end": "1002480"
  },
  {
    "text": "other devices like on nuvotone and infineon but the only other interesting vulnerability we",
    "start": "1002480",
    "end": "1007600"
  },
  {
    "text": "found was on st microelectronic tpm device that we also earlier showed that it's it's supposed",
    "start": "1007600",
    "end": "1013440"
  },
  {
    "text": "to be resisting as this attack and here is basically the histogram we",
    "start": "1013440",
    "end": "1019199"
  },
  {
    "text": "we drew for the for the timing behavior of sd microelectronic and we see that",
    "start": "1019199",
    "end": "1024480"
  },
  {
    "text": "even though at the first glance it looks like a balanced gaussian distribution but that",
    "start": "1024480",
    "end": "1030079"
  },
  {
    "text": "we have more samples on the left side and it actually gave us an idea that okay this may also have a",
    "start": "1030079",
    "end": "1035280"
  },
  {
    "text": "timing behavior so we looked at the nonsense again and we realized that okay this is a very",
    "start": "1035280",
    "end": "1041600"
  },
  {
    "text": "similar vulnerability to compared to the intel ftpm ecdsa operation",
    "start": "1041600",
    "end": "1046720"
  },
  {
    "text": "but this time instead of for every additional four between the uh leading zero bits we see that for",
    "start": "1046720",
    "end": "1052559"
  },
  {
    "text": "every additional leading zero bits for every one leading zero bits we see",
    "start": "1052559",
    "end": "1057840"
  },
  {
    "text": "that the timing is is faster and uh we also looked at that okay there is a linear correlation",
    "start": "1057840",
    "end": "1063760"
  },
  {
    "text": "between the beats length of slang afternoons and and the timing so this again gives us the similar leakage behavior",
    "start": "1063760",
    "end": "1070720"
  },
  {
    "text": "so so far we have just talked about okay we have some vulnerabilities and this",
    "start": "1070720",
    "end": "1077360"
  },
  {
    "text": "ecdsa operation of these devices and this vulnerability tells us some number of bits about the nons for",
    "start": "1077360",
    "end": "1084799"
  },
  {
    "text": "ecdsa operation but this information by itself is not useful we need to use this",
    "start": "1084799",
    "end": "1090000"
  },
  {
    "text": "information to recover something that is more valuable like the private key for a cdsa and for for this purpose we basically",
    "start": "1090000",
    "end": "1098160"
  },
  {
    "text": "came up with a with a systematic attack and this systematic attack assuming that the tpm is programmed with",
    "start": "1098160",
    "end": "1104960"
  },
  {
    "text": "a private key with an unknown private key we can basically what we do is that we collect a list of signatures",
    "start": "1104960",
    "end": "1111679"
  },
  {
    "text": "uh using this tpm device and these signatures are collected with their timing and we",
    "start": "1111679",
    "end": "1117679"
  },
  {
    "text": "use the timing basically to filter signatures to a group that has some bias some non-bias for instance we know that",
    "start": "1117679",
    "end": "1124559"
  },
  {
    "text": "all the signatures that are generated in less than x amount of cycle are",
    "start": "1124559",
    "end": "1129600"
  },
  {
    "text": "supposed to be eight bits uh short for instance and when we have those biases we basically",
    "start": "1129600",
    "end": "1136160"
  },
  {
    "text": "can use a technical that is based attack and using this lattice based attack we can recover the private key so i'm not going",
    "start": "1136160",
    "end": "1143440"
  },
  {
    "text": "to get into the detail of how lattices work there are lots of mathematics behind behind that and it's",
    "start": "1143440",
    "end": "1149520"
  },
  {
    "text": "beyond the scope of this talk but the idea is that",
    "start": "1149520",
    "end": "1154559"
  },
  {
    "text": "we can rewrite that this cdsa equation we showed earlier as a simpler equation that has some",
    "start": "1154559",
    "end": "1160400"
  },
  {
    "text": "known values and some unknown values and then when we replace the known values with simple",
    "start": "1160400",
    "end": "1166799"
  },
  {
    "text": "like variables we have just this equation that has two unknowns and for these two unknowns we",
    "start": "1166799",
    "end": "1172960"
  },
  {
    "text": "cannot simply calculate any of them because we we need at least one of them to calculate the other",
    "start": "1172960",
    "end": "1178799"
  },
  {
    "text": "but the reality is we have some information about the value of the nonce or ki",
    "start": "1178799",
    "end": "1184000"
  },
  {
    "text": "and this value this information tells us the ki cannot be bigger than some amount",
    "start": "1184000",
    "end": "1190080"
  },
  {
    "text": "because we know the bit length of ki for some of these signatures and these",
    "start": "1190080",
    "end": "1195280"
  },
  {
    "text": "uh basically resemble a very well known uh well-known problem of hidden number",
    "start": "1195280",
    "end": "1201600"
  },
  {
    "text": "problem that was proposed a long time ago and it can actually efficiently be calculated and we can",
    "start": "1201600",
    "end": "1208640"
  },
  {
    "text": "efficiently recover the private key from this if you have enough uh signatures with this quality",
    "start": "1208640",
    "end": "1214559"
  },
  {
    "text": "and what we did is basically we use this information we construct a lattice",
    "start": "1214559",
    "end": "1220000"
  },
  {
    "text": "uh this lattice is described in a form of a matrix here and this lattice basically form a problem",
    "start": "1220000",
    "end": "1226799"
  },
  {
    "text": "that is uh that is well studied in the in the lattice base crypto community and this problem",
    "start": "1226799",
    "end": "1232720"
  },
  {
    "text": "basically tells us that okay we want to solve the shortest vector and if we solve this problem we can actually",
    "start": "1232720",
    "end": "1239520"
  },
  {
    "text": "recover the private key and uh surprisingly this problem can be solved in a polynomial time and",
    "start": "1239520",
    "end": "1245600"
  },
  {
    "text": "there are some algorithms like lll and bk set that we can execute on this lattice to recover the private",
    "start": "1245600",
    "end": "1251679"
  },
  {
    "text": "key and we did that and it actually worked and here is also a demo for this attack basically",
    "start": "1251679",
    "end": "1259440"
  },
  {
    "text": "so for the same key that we showed earlier we collected more results here",
    "start": "1259440",
    "end": "1264480"
  },
  {
    "text": "we have for instance 25 000 signatures that we generated uh these signatures",
    "start": "1264480",
    "end": "1269919"
  },
  {
    "text": "now we can see that okay this these are the historic these are the gaussian distributions and",
    "start": "1269919",
    "end": "1276720"
  },
  {
    "text": "we are probably more interested in the signatures that are generated faster so here if we look at at the value 4.7",
    "start": "1276720",
    "end": "1285120"
  },
  {
    "text": "uh to the to the 10 to the 8th this these are the signatures that",
    "start": "1285120",
    "end": "1290400"
  },
  {
    "text": "probably have eight bit of leading zero bits because this is this is the second window here",
    "start": "1290400",
    "end": "1296000"
  },
  {
    "text": "so we program this value to our tool uh we filter all the signatures that are",
    "start": "1296000",
    "end": "1301919"
  },
  {
    "text": "executed that fast and when we filter these signatures we realize that there is only",
    "start": "1301919",
    "end": "1308000"
  },
  {
    "text": "a 99 signature out of this 25 000 signature that they have this quality",
    "start": "1308000",
    "end": "1313760"
  },
  {
    "text": "and we save these 99 signatures and then we use another script that we have",
    "start": "1313760",
    "end": "1320000"
  },
  {
    "text": "program using sage and this script basically randomly pick 60 different signature",
    "start": "1320000",
    "end": "1326400"
  },
  {
    "text": "from this set of filtered signatures to run the lattice attack and here we",
    "start": "1326400",
    "end": "1332320"
  },
  {
    "text": "also have the same private key in id to to check as a ground through to see if our attack works",
    "start": "1332320",
    "end": "1338559"
  },
  {
    "text": "and if our attack works this function solves cvp is gonna recover the key if the key matches that",
    "start": "1338559",
    "end": "1346240"
  },
  {
    "text": "the key that we have put here as a ground truth then the attack works and here is the simple definition of the lattice in",
    "start": "1346240",
    "end": "1354320"
  },
  {
    "text": "in matrix form and running the lll algorithm uh in the code so if we run this we",
    "start": "1354320",
    "end": "1360320"
  },
  {
    "text": "basically see that okay our attack works even when we randomly pick different set of samples and every time",
    "start": "1360320",
    "end": "1367840"
  },
  {
    "text": "the key this the correct key is recovered",
    "start": "1367840",
    "end": "1372080"
  },
  {
    "text": "so uh this was basically uh an efficient attack we saw that okay",
    "start": "1373760",
    "end": "1379120"
  },
  {
    "text": "running the attack actually uh doesn't take that much time the only the only thing that takes time is",
    "start": "1379120",
    "end": "1384559"
  },
  {
    "text": "collecting those signatures because depending on the on the amount of leakage we have if you have four bit leakage or eight bit",
    "start": "1384559",
    "end": "1390799"
  },
  {
    "text": "leakage we need to collect different amount of signatures and we have some numbers in the paper in more detail",
    "start": "1390799",
    "end": "1396640"
  },
  {
    "text": "but the end result is that you can recover the crypto key very efficiently on both",
    "start": "1396640",
    "end": "1402240"
  },
  {
    "text": "intel ftpm and st microelectronic especially if you have a local access that that's very",
    "start": "1402240",
    "end": "1408000"
  },
  {
    "text": "fast and it just signature generation may take some some time so",
    "start": "1408000",
    "end": "1415280"
  },
  {
    "text": "after we did this it was like okay we have a almost remote attack on tpm devices which means that",
    "start": "1415280",
    "end": "1421200"
  },
  {
    "text": "uh this tpm is even not supposed to leak these keys with a physical attack but we can already lick this keys",
    "start": "1421200",
    "end": "1428000"
  },
  {
    "text": "from the cpu because uh we can't measure the timing and leak these ac dsa keys but can we do these attacks",
    "start": "1428000",
    "end": "1434960"
  },
  {
    "text": "on a real remote like network or remote timing attack like as is known by the community like in the",
    "start": "1434960",
    "end": "1442080"
  },
  {
    "text": "one so what we looked at is okay these tpm devices they are running with a very",
    "start": "1442080",
    "end": "1448400"
  },
  {
    "text": "slow frequency and because of that the timing difference for every of these",
    "start": "1448400",
    "end": "1453600"
  },
  {
    "text": "short signatures the different brackets is different for instance for the intel ftpm the time difference for each of those uh",
    "start": "1453600",
    "end": "1461200"
  },
  {
    "text": "group of peaks we saw is like about more than one millisecond which means that if you have like 12 bit of uh",
    "start": "1461200",
    "end": "1468880"
  },
  {
    "text": "zero at one nonce that signature is gonna be executed like for more than three seconds",
    "start": "1468880",
    "end": "1474400"
  },
  {
    "text": "uh faster and that means that on most local networks on or even some",
    "start": "1474400",
    "end": "1481039"
  },
  {
    "text": "internet networks this can be kind of observed and for instance here i have like a",
    "start": "1481039",
    "end": "1486400"
  },
  {
    "text": "the round trip time on my local network of pinging another device in my local network and we see that the",
    "start": "1486400",
    "end": "1493039"
  },
  {
    "text": "time it takes to do a round trip is like less than a millisecond which means if i have a leakage that is like",
    "start": "1493039",
    "end": "1498400"
  },
  {
    "text": "three milliseconds delay this is something that probably can be observed uh easily over even a",
    "start": "1498400",
    "end": "1504640"
  },
  {
    "text": "local network and even on some remote networks here if i ping cloudflare it takes 20 milliseconds",
    "start": "1504640",
    "end": "1510960"
  },
  {
    "text": "so maybe this is even observable observable over a online like",
    "start": "1510960",
    "end": "1516480"
  },
  {
    "text": "like internet network uh well we didn't do an attack on internet work but on a local network we try to see if this",
    "start": "1516480",
    "end": "1523760"
  },
  {
    "text": "what is the impact of this attack on a local network so we picked up an application a vpn",
    "start": "1523760",
    "end": "1530400"
  },
  {
    "text": "application that actually has the instruction how to use a strong sound vpn to configure it to use tpm for",
    "start": "1530400",
    "end": "1537760"
  },
  {
    "text": "authentication so when we configure the strong sun vpn to use tpm for authentication",
    "start": "1537760",
    "end": "1543679"
  },
  {
    "text": "what we realized is okay that the first handshake is the same there is a default main queue exchange at the first",
    "start": "1543679",
    "end": "1549919"
  },
  {
    "text": "handshake with the server and then after this default monkey exchange both the client and the server",
    "start": "1549919",
    "end": "1555120"
  },
  {
    "text": "they both have the shared key for encryption of their packets but then the client also need to make",
    "start": "1555120",
    "end": "1560960"
  },
  {
    "text": "sure the server is the correct server so it's not a impersonated server so then the",
    "start": "1560960",
    "end": "1566640"
  },
  {
    "text": "authentication happens in the next ike exchange protocol and then during the next exchange",
    "start": "1566640",
    "end": "1572080"
  },
  {
    "text": "the vpn server doesn't even have the access to the key and it's going to ask the tpm device",
    "start": "1572080",
    "end": "1577520"
  },
  {
    "text": "hey this is a message please sign this for me and then the server asks the vpn device",
    "start": "1577520",
    "end": "1583840"
  },
  {
    "text": "to sign the message and the tpm ui signed a message and then the server just get their response and send it to",
    "start": "1583840",
    "end": "1589440"
  },
  {
    "text": "the client and the client can verify that oh this server is a legitimate server",
    "start": "1589440",
    "end": "1594960"
  },
  {
    "text": "and the good thing about using this tpm is that okay now even if the server is compromised nobody can have access to",
    "start": "1594960",
    "end": "1600720"
  },
  {
    "text": "that private key so nobody can impersonate the vpn server",
    "start": "1600720",
    "end": "1607919"
  },
  {
    "text": "that roll off the vpn server basically but the the bad thing about this is that if we have vulnerability on the tpm",
    "start": "1608480",
    "end": "1614080"
  },
  {
    "text": "device then every time there is a handshake you can measure the time so here what we did is that after the",
    "start": "1614080",
    "end": "1619120"
  },
  {
    "text": "second hatching you just drop the connection and we repeat this operation again and we collect uh lots of timing measurement",
    "start": "1619120",
    "end": "1626799"
  },
  {
    "text": "after doing that we again applied the same attack that we explained as our local attack on the",
    "start": "1626799",
    "end": "1632480"
  },
  {
    "text": "as a root adversary and with the local attack with the remote attack we again managed to recover the private key from",
    "start": "1632480",
    "end": "1639600"
  },
  {
    "text": "uh from a vpn server and uh for this attack we needed like about",
    "start": "1639600",
    "end": "1645760"
  },
  {
    "text": "forty four thousand handshakes uh with the vpn server that we configured on a local network",
    "start": "1645760",
    "end": "1651279"
  },
  {
    "text": "that takes about like five hours to collect this amount of signature and the attack is also about sixty",
    "start": "1651279",
    "end": "1658880"
  },
  {
    "text": "percent of the times is successful with this prettiest network",
    "start": "1658880",
    "end": "1664158"
  },
  {
    "text": "and here also we see a comparison of different histograms that we generated for this",
    "start": "1664960",
    "end": "1670399"
  },
  {
    "text": "intel ftp and vulnerability and we see that for system level adversary the leakage is almost as clean as",
    "start": "1670399",
    "end": "1677039"
  },
  {
    "text": "if we already know the bios there is no interesting statistics behind it it's",
    "start": "1677039",
    "end": "1682080"
  },
  {
    "text": "just clean leakage and for the remote attacks the leakage is noisier and remote attack",
    "start": "1682080",
    "end": "1687679"
  },
  {
    "text": "with vpn protocol event is more lazier more noisier but what is clear is that",
    "start": "1687679",
    "end": "1693279"
  },
  {
    "text": "there is a still possibility to lick the key and we actually showed that you can",
    "start": "1693279",
    "end": "1698320"
  },
  {
    "text": "recover the private key over a network so uh you may be surprised okay why",
    "start": "1698320",
    "end": "1705919"
  },
  {
    "text": "why are these such problems on this tpm devices and this is not actually the first time that",
    "start": "1705919",
    "end": "1711279"
  },
  {
    "text": "we show such a vulnerability on some uh diploid crypto products",
    "start": "1711279",
    "end": "1716480"
  },
  {
    "text": "um like two years ago around two years ago we showed that another product that's uh that uses the",
    "start": "1716480",
    "end": "1723200"
  },
  {
    "text": "signature schemes like a signature scheme called epid that also use elliptic curve uh actually",
    "start": "1723200",
    "end": "1729120"
  },
  {
    "text": "has this leakage and we show that on intel sgx product uh they're secure on their uh",
    "start": "1729120",
    "end": "1736159"
  },
  {
    "text": "coating enclave that is used as part of the remote asset station is actually vulnerable and using a cache attack we could",
    "start": "1736159",
    "end": "1742559"
  },
  {
    "text": "actually recover the private key for remote attestation so these uh why why why is it so easy to",
    "start": "1742559",
    "end": "1749919"
  },
  {
    "text": "break this crypto implementation when it comes to sidechain attack the reason is that implementing this",
    "start": "1749919",
    "end": "1755120"
  },
  {
    "text": "crypto implementation is really hard it's really hard to implement them to be resistant against",
    "start": "1755120",
    "end": "1760960"
  },
  {
    "text": "all sort of different side channel attacks if we look at the ecd i say for instance as we talked a",
    "start": "1760960",
    "end": "1767200"
  },
  {
    "text": "lot about the cdsa is that there is a simple equation here that okay this is the cdsa signing",
    "start": "1767200",
    "end": "1773279"
  },
  {
    "text": "operation but in reality there is more going on in the back and implementing this is much more complicated than it seems",
    "start": "1773279",
    "end": "1780480"
  },
  {
    "text": "and so for elliptic curve we have like a curve this is called the elliptic curve and it's defined okay this is a secure curve",
    "start": "1780480",
    "end": "1787679"
  },
  {
    "text": "and then we have two primitive operations one operation is called double that after we double the point we get",
    "start": "1787679",
    "end": "1794240"
  },
  {
    "text": "another point on the same curve here and again for another operation called add we add two points together",
    "start": "1794240",
    "end": "1801360"
  },
  {
    "text": "and we pass a line to these two points and we get another point here mirrored down there and these are the two basic",
    "start": "1801360",
    "end": "1808320"
  },
  {
    "text": "operations but using this two basic operation we can implement more complicated operation for instance during the cdsa signing operation one",
    "start": "1808320",
    "end": "1815520"
  },
  {
    "text": "complicated operation is the scalar multiplication and we can implement a scalar multiplication using a series of double",
    "start": "1815520",
    "end": "1821760"
  },
  {
    "text": "and add operation as you can see that for instance multiplying 3 7 23 different numbers with",
    "start": "1821760",
    "end": "1827520"
  },
  {
    "text": "a point can be done using this island double operation and this gives us a simple algorithm we",
    "start": "1827520",
    "end": "1833279"
  },
  {
    "text": "can use this to implement the cdsa but there is not a single implementation of this algorithm",
    "start": "1833279",
    "end": "1840159"
  },
  {
    "text": "and we see that this algorithm has behavior depending on the key beats and there are so many other algorithms",
    "start": "1840159",
    "end": "1846320"
  },
  {
    "text": "there is like double that algorithm that we show there is montgomery double up there like a sliding window fixed window so",
    "start": "1846320",
    "end": "1852640"
  },
  {
    "text": "there are so many different ways to implement the same functionality this is part of this cdsa",
    "start": "1852640",
    "end": "1857919"
  },
  {
    "text": "signature and in our case the shortcase we showed in fixed window in intel ftpm it was actually a fixed",
    "start": "1857919",
    "end": "1865200"
  },
  {
    "text": "window implementation that was leaking leaking for every four bit window but",
    "start": "1865200",
    "end": "1870640"
  },
  {
    "text": "if you are designing crypto system this is very difficult because uh you are not sure what is the threat",
    "start": "1870640",
    "end": "1875760"
  },
  {
    "text": "model you may implement this cryptosystem to run on a cloud but then later on you may use the same code",
    "start": "1875760",
    "end": "1881519"
  },
  {
    "text": "to run it on an airplane and people have told you not to implement your own crypto so you just copy paste the same",
    "start": "1881519",
    "end": "1886880"
  },
  {
    "text": "crypto library from one design to another and this makes it really difficult and",
    "start": "1886880",
    "end": "1892159"
  },
  {
    "text": "uh a while back we actually were curious okay how can we find these leakages uh automatically instead of trying to",
    "start": "1892159",
    "end": "1898880"
  },
  {
    "text": "attack every specific uh implementation on different platforms and one thing we",
    "start": "1898880",
    "end": "1904720"
  },
  {
    "text": "we came up with here is that okay all these software related side channel leakages they have some",
    "start": "1904720",
    "end": "1911760"
  },
  {
    "text": "characteristics they either happen due to a secret dependent control flow like when you do a loop or if a statement that depends",
    "start": "1911760",
    "end": "1919200"
  },
  {
    "text": "on the keywords or when you try to do a memory access depending on the keyboards like when we see that in",
    "start": "1919200",
    "end": "1925039"
  },
  {
    "text": "in some black ciphers like aes that they have something called s box and in some rare cases there are also some",
    "start": "1925039",
    "end": "1931760"
  },
  {
    "text": "instructions that they leak some value about the input like on some arm cpu for instance",
    "start": "1931760",
    "end": "1937279"
  },
  {
    "text": "this has been reported but the idea is that okay we want to have an automatic",
    "start": "1937279",
    "end": "1942480"
  },
  {
    "text": "tool and we want to apply this understanding to recover these leakages from a software's perspective without",
    "start": "1942480",
    "end": "1948960"
  },
  {
    "text": "even caring uh what computer or what threat model we are running to uh so in reality the way",
    "start": "1948960",
    "end": "1957279"
  },
  {
    "text": "our tool which we call it microwave work is that so in practice an attacker learn about the",
    "start": "1957279",
    "end": "1962799"
  },
  {
    "text": "execution time the memory usage behavior the cash access pattern but in theory in the principle what",
    "start": "1962799",
    "end": "1969200"
  },
  {
    "text": "happens is that the attacker learns something about how many instructions are executed or or what branches have been taken or what",
    "start": "1969200",
    "end": "1976080"
  },
  {
    "text": "is the memory access pattern of the software and so we said okay we're going to try to have a more",
    "start": "1976080",
    "end": "1981760"
  },
  {
    "text": "tight model and we just look at the principle of why the leakage happen so",
    "start": "1981760",
    "end": "1986960"
  },
  {
    "text": "we came up with this tool and the idea is we generate a set of random test case and we feed these random case test cases",
    "start": "1986960",
    "end": "1993279"
  },
  {
    "text": "to the implementation of a crypto operation and while we are generating while we are feeding these",
    "start": "1993279",
    "end": "1999200"
  },
  {
    "text": "test cases we also generate the execution trace of this crypto operation and then uh one",
    "start": "1999200",
    "end": "2004960"
  },
  {
    "text": "way to see if there is a leakage we can we we show that we can check the difference between the traces",
    "start": "2004960",
    "end": "2010320"
  },
  {
    "text": "for the same for different inputs and another way we also use mutual information we said",
    "start": "2010320",
    "end": "2016640"
  },
  {
    "text": "for every instruction that has been executed during the execution of uh",
    "start": "2016640",
    "end": "2022159"
  },
  {
    "text": "this crypto system with different inputs we're going to calculate a mutual information score and we say we look at how",
    "start": "2022159",
    "end": "2029039"
  },
  {
    "text": "if this mutual information is positive if there is a score associated with the instruction it means",
    "start": "2029039",
    "end": "2034399"
  },
  {
    "text": "that that instruction was involved with the operation that took different amount of different uh different inputs or",
    "start": "2034399",
    "end": "2041519"
  },
  {
    "text": "different amount of execution and that actually tells us there is a relationship between the",
    "start": "2041519",
    "end": "2046799"
  },
  {
    "text": "leakage and that instruction so using that we can actually also look at which instructions are leaky",
    "start": "2046799",
    "end": "2052960"
  },
  {
    "text": "and the there are two the way it works is that first we generate these traces and we do some uh some tweaks to that to that",
    "start": "2052960",
    "end": "2059520"
  },
  {
    "text": "generation during the execution we use something like intel pin tool to to but do binary",
    "start": "2059520",
    "end": "2064878"
  },
  {
    "text": "instrumentation so it can work on binary software that we don't have access to the source code and then we do",
    "start": "2064879",
    "end": "2070720"
  },
  {
    "text": "some pre-processing of the trace because some of these operations like they have",
    "start": "2070720",
    "end": "2076079"
  },
  {
    "text": "different address space because of aslr or because of memory allocation so we try to normalize the",
    "start": "2076079",
    "end": "2082720"
  },
  {
    "text": "trace so we don't have false positive and we also apply some leakage granularity like you may be",
    "start": "2082720",
    "end": "2088320"
  },
  {
    "text": "interested in cache level attack or page level attacks and things like that and then we apply the analysis",
    "start": "2088320",
    "end": "2094398"
  },
  {
    "text": "that we mentioned so we had this tool but apparently the",
    "start": "2094399",
    "end": "2099760"
  },
  {
    "text": "vendor didn't have access to such a tool or they didn't care enough to use it and this is the basically the",
    "start": "2099760",
    "end": "2107599"
  },
  {
    "text": "responsible disclosure we had with sd micro electronic we reported this vulnerability to them",
    "start": "2107599",
    "end": "2112880"
  },
  {
    "text": "about a year ago and we had lots of exchanges with them to help them to update the firmware for this device",
    "start": "2112880",
    "end": "2119440"
  },
  {
    "text": "and fix these devices and later on uh some vendors like hp and lenovo issued some",
    "start": "2119440",
    "end": "2124560"
  },
  {
    "text": "firmware updates to fix this issue for intel uh we also had a responsible disclosure that was a little",
    "start": "2124560",
    "end": "2130240"
  },
  {
    "text": "bit longer about nine months and then similarly we reported this issue and what's interesting is after we",
    "start": "2130240",
    "end": "2136800"
  },
  {
    "text": "reported this issue they told us that uh the reason they had this vulnerability was that they were using",
    "start": "2136800",
    "end": "2142480"
  },
  {
    "text": "an updated version of library and this also matches our our previous reports because we already",
    "start": "2142480",
    "end": "2147760"
  },
  {
    "text": "reported similar vulnerabilities in intel ipp which is a official crypto library by intel as part",
    "start": "2147760",
    "end": "2155280"
  },
  {
    "text": "of our study of the microwave tool and we already reported this vulnerability is like two years before like",
    "start": "2155280",
    "end": "2161440"
  },
  {
    "text": "in 2018 but later on again the same vulnerability appeared in another product another",
    "start": "2161440",
    "end": "2167920"
  },
  {
    "text": "consumer product actually and that's actually an interesting thing that sometimes",
    "start": "2167920",
    "end": "2173280"
  },
  {
    "text": "uh the knowledge you get from cash attacks and analyzing software indicators can be transferred to that",
    "start": "2173280",
    "end": "2178400"
  },
  {
    "text": "totally different type of site channel and with even more bad consequence on the products",
    "start": "2178400",
    "end": "2186160"
  },
  {
    "text": "this is my talk and here are some things about our tool about this attack and also this paper",
    "start": "2186160",
    "end": "2193440"
  },
  {
    "text": "will appear also at using security symposium which happens soon right after the",
    "start": "2193440",
    "end": "2199200"
  },
  {
    "text": "blackhead yeah so i have one one question in the",
    "start": "2199200",
    "end": "2204400"
  },
  {
    "text": "chat window that asks uh from what i can remember tpm should be generating key materials with",
    "start": "2204400",
    "end": "2210720"
  },
  {
    "text": "an artificial response time to prevent this type of timing attack your results show this is not true but",
    "start": "2210720",
    "end": "2216320"
  },
  {
    "text": "is that a problem in the standard or the tpm vendors i i believe that the tpm standards the",
    "start": "2216320",
    "end": "2222400"
  },
  {
    "text": "tpm standard itself doesn't impose how the vendors are supposed to",
    "start": "2222400",
    "end": "2228240"
  },
  {
    "text": "implement that actual tpm hardware but the cc certification when it's at",
    "start": "2228240",
    "end": "2233280"
  },
  {
    "text": "level four or five expect dpm vendors to have some mitigation",
    "start": "2233280",
    "end": "2239119"
  },
  {
    "text": "so i don't know if i hope that clarified the answer for that",
    "start": "2240560",
    "end": "2246640"
  },
  {
    "text": "any other question",
    "start": "2250640",
    "end": "2257838"
  },
  {
    "text": "i don't see more questions but i would like to again thank the audience for listening",
    "start": "2303440",
    "end": "2309599"
  },
  {
    "text": "to my talk uh yeah",
    "start": "2309599",
    "end": "2315599"
  }
]