[
  {
    "text": "welcome to black hat Windows 2K security held February 14th through the 15th 2001",
    "start": "19240",
    "end": "25000"
  },
  {
    "text": "in Las Vegas Nevada the following videotape was recorded live at the conference and produced by the sound of",
    "start": "25000",
    "end": "30759"
  },
  {
    "text": "knowledge Incorporated this is videotape number 6B a",
    "start": "30759",
    "end": "35840"
  },
  {
    "text": "continuation deep knowledge track IPC in a Windows 2000",
    "start": "35840",
    "end": "42360"
  },
  {
    "text": "World still has a choice to fill in everything so for example you know I may",
    "start": "44840",
    "end": "50600"
  },
  {
    "text": "have made typos or mistakes or something about uh my email address right I",
    "start": "50600",
    "end": "56160"
  },
  {
    "text": "have.org as opposed Toom um you know I could have lied about any of this information uh I could be",
    "start": "56160",
    "end": "63480"
  },
  {
    "text": "using friendly names that the company doesn't want me to use I could have put in you know profanity or something just",
    "start": "63480",
    "end": "69040"
  },
  {
    "text": "bogus right um that is it's the ca's issuance policy it's how does the ca",
    "start": "69040",
    "end": "75640"
  },
  {
    "text": "validate these fields um and in often cases the ca won't take this input from a user or",
    "start": "75640",
    "end": "82560"
  },
  {
    "text": "from you know somebody just filling out a form they will uh decide this these",
    "start": "82560",
    "end": "88360"
  },
  {
    "text": "values themselves they really need is the public key in the request right so",
    "start": "88360",
    "end": "95119"
  },
  {
    "text": "anyway I filled in some information here part of which is incorrect um I understand there is 82. 11 in the",
    "start": "95119",
    "end": "101200"
  },
  {
    "text": "building so I'll pull out my wireless card and see if I can go online and I'll show you the web uh the internet CA that",
    "start": "101200",
    "end": "107399"
  },
  {
    "text": "we have set up to to just test test it uh which you can use basically in this",
    "start": "107399",
    "end": "113079"
  },
  {
    "text": "form I'm allowed to choose a cryptographic service provider um I just choose the base cryptographic service",
    "start": "113079",
    "end": "119159"
  },
  {
    "text": "provider which does a lot of things um namely generate the RSA key pair uh my",
    "start": "119159",
    "end": "125200"
  },
  {
    "text": "machine has the strong cryptography pack installed so I have the option of going",
    "start": "125200",
    "end": "130440"
  },
  {
    "text": "Beyond 1024 bits for keys that is the public and private key pair that I",
    "start": "130440",
    "end": "136760"
  },
  {
    "text": "generate um there's two different ways to do key generation one is for data exchange which is what that means it",
    "start": "136760",
    "end": "143080"
  },
  {
    "text": "doesn't mean email is data exchange so if I want to encrypt data then um I can get a key for data",
    "start": "143080",
    "end": "150800"
  },
  {
    "text": "exchange or I can do signature key Pairs and this particular form doesn't",
    "start": "150800",
    "end": "156080"
  },
  {
    "text": "automatically adjust the key sizes but if I'm just doing a signature key then I can go large right even if I don't have",
    "start": "156080",
    "end": "163800"
  },
  {
    "text": "a strong cryptography pack because a certificate will only be used for Signature and there's no limit on the size of cryptography or export limit on",
    "start": "163800",
    "end": "171120"
  },
  {
    "text": "on cryptography the purpose of signature right all it is is very strong signature um but if I'm actually going to encrypt",
    "start": "171120",
    "end": "177120"
  },
  {
    "text": "data with it then there is uh limitations and so with the strong crypto pack installed on this box I'm able to go up",
    "start": "177120",
    "end": "183840"
  },
  {
    "text": "a little higher and I of course I never really want to use anything less than 1024 and I I should use stronger Keys",
    "start": "183840",
    "end": "189760"
  },
  {
    "text": "than that if I can get away with it I think the um the latest I've read is a",
    "start": "189760",
    "end": "195599"
  },
  {
    "text": "300 54 bit key or something RSA key that was cracked I",
    "start": "195599",
    "end": "201720"
  },
  {
    "text": "mean okay I I don't know then but basically somewhere around 350 bits of",
    "start": "202000",
    "end": "208080"
  },
  {
    "text": "RSA key which is getting close to 512 um and is not very close to 1024 and",
    "start": "208080",
    "end": "213959"
  },
  {
    "text": "you know and that's throwing massive computing power at it and so forth so at least for the foreseeable future that is",
    "start": "213959",
    "end": "220480"
  },
  {
    "text": "the next couple years unless there's you know some Quantum Advance that's published um 1024 bits",
    "start": "220480",
    "end": "227439"
  },
  {
    "text": "should be sufficient but you can go higher for IPC we're just doing signature right so you only need a",
    "start": "227439",
    "end": "233560"
  },
  {
    "text": "signature key pair uh the hash algorithm is the algorithm that's used in the",
    "start": "233560",
    "end": "238640"
  },
  {
    "text": "certificate it doesn't matter uh what does matter though is this check box down here it says use local machine",
    "start": "238640",
    "end": "245959"
  },
  {
    "text": "store so when you go to the online web uh page or when third parties provide websites to do",
    "start": "245959",
    "end": "253599"
  },
  {
    "text": "enrollment if they're doing enrollment for quote IPC all IPC means is that it's",
    "start": "253599",
    "end": "258720"
  },
  {
    "text": "a machine CT they'll talk about an IPC CT and there is technically a way to",
    "start": "258720",
    "end": "264360"
  },
  {
    "text": "specify IPC usage right here in what's called extended key usage but not all",
    "start": "264360",
    "end": "269720"
  },
  {
    "text": "pki Systems Support this EKU field the extended key usage field so you may or",
    "start": "269720",
    "end": "275720"
  },
  {
    "text": "may not have an IPC usage and so therefore the IPC implementation in Windows 2000 doesn't require that the",
    "start": "275720",
    "end": "281720"
  },
  {
    "text": "cert have an IPC usage it'll use a client authentication key usage field",
    "start": "281720",
    "end": "287720"
  },
  {
    "text": "essentially all it requires is really the the root name a valid chain the sert",
    "start": "287720",
    "end": "294520"
  },
  {
    "text": "is used within its validity time and a 512 or larger key size",
    "start": "294520",
    "end": "300639"
  },
  {
    "text": "of course it has to be resident in a local machine store I can add other attributes and so forth and then I can",
    "start": "300639",
    "end": "306560"
  },
  {
    "text": "generate an output file name here um I wonder what I can",
    "start": "306560",
    "end": "312039"
  },
  {
    "text": "do I'll just Temp and then I'll say black hat example file now there",
    "start": "312039",
    "end": "319840"
  },
  {
    "text": "should be some some extension to that I don't know I won't put an extension on it in fact",
    "start": "319840",
    "end": "325440"
  },
  {
    "text": "I'll just does it okay see if it'll it'll complain all right it",
    "start": "325440",
    "end": "334240"
  },
  {
    "text": "complain so I okay so all I did was generate a public and private key pair",
    "start": "340080",
    "end": "345600"
  },
  {
    "text": "right so my private key is stored inside inside the machine protected store so that's basically an encrypted uh I",
    "start": "345600",
    "end": "353400"
  },
  {
    "text": "shouldn't say encrypted file system it's an encrypted area of the registry that only the local system knows how to",
    "start": "353400",
    "end": "360360"
  },
  {
    "text": "access um and I also have a public key so if I go",
    "start": "360360",
    "end": "366280"
  },
  {
    "text": "and I look um now I'm back to the beginning if I go back in the uh if you if you'll pardon me because this is my",
    "start": "366280",
    "end": "372360"
  },
  {
    "text": "corporate laptop I'll just switch off for a second and go to find that in the U C",
    "start": "372360",
    "end": "380080"
  },
  {
    "text": "temp",
    "start": "380080",
    "end": "383080"
  },
  {
    "text": "um it's in it's protected by a symmetric private key u which is so it's it's",
    "start": "397440",
    "end": "402800"
  },
  {
    "text": "reversibly encrypted because it has to be when the machine boots up it's got to be able to reverse encrypt but that that",
    "start": "402800",
    "end": "408680"
  },
  {
    "text": "symmetric private key is again um I'll say obfuscated in a proprietary way and",
    "start": "408680",
    "end": "414960"
  },
  {
    "text": "as strong as our cryptographers can possibly make it um it's B basically based on the machine account password",
    "start": "414960",
    "end": "422560"
  },
  {
    "text": "and again the machine account password is obious skated in as strong as our cryptographers can make it so it's it's",
    "start": "422560",
    "end": "428680"
  },
  {
    "text": "not a perfect system in terms of protection but you've got to break two or three layers of of encryption in",
    "start": "428680",
    "end": "434599"
  },
  {
    "text": "order to get there if if you can log on the machine",
    "start": "434599",
    "end": "440440"
  },
  {
    "text": "that machine s's available to any user well it's available to the local system",
    "start": "440440",
    "end": "446280"
  },
  {
    "text": "right okay user certificates are a different issue user CER certificates have a hash of their of their password",
    "start": "446280",
    "end": "452680"
  },
  {
    "text": "which protect which encrypts their private key data it's also called protected store but it's stored",
    "start": "452680",
    "end": "457879"
  },
  {
    "text": "differently because you have data that that really authenticates the user that you don't have to store on the disk",
    "start": "457879",
    "end": "463919"
  },
  {
    "text": "which would essentially be a hash of their password um so for users if if you got",
    "start": "463919",
    "end": "469400"
  },
  {
    "text": "aert on the box let me switch back now if you got a a user CT on this box",
    "start": "469400",
    "end": "476080"
  },
  {
    "text": "um or I have user shts on the box and you were able to log on you can't access my private keys and in fact you you'd",
    "start": "476080",
    "end": "482479"
  },
  {
    "text": "have to break all the crypto protecting them in order to even see what they were uh because you don't have my user ID and",
    "start": "482479",
    "end": "488919"
  },
  {
    "text": "password to log on so the fact of me logging on with my user ID and password unlocks my credentials but doesn't",
    "start": "488919",
    "end": "495520"
  },
  {
    "text": "unlock anybody else's credentials it can lock can log on in the same box okay so here's here's what happened",
    "start": "495520",
    "end": "501919"
  },
  {
    "text": "um with that CT request I said uh in the temp directory I just called it black",
    "start": "501919",
    "end": "507120"
  },
  {
    "text": "hat CT I thought it would put an extension on it but it didn't all it is is a text file so I just edited that with notepad and this is what a pkcs1",
    "start": "507120",
    "end": "515120"
  },
  {
    "text": "format looks like you can send this via email um or delivered on a floppy or",
    "start": "515120",
    "end": "521518"
  },
  {
    "text": "post it in a web form you know cut and past it into a website typically is how most of the ca vendors will take it you",
    "start": "521519",
    "end": "528399"
  },
  {
    "text": "just you know highlight it and copy and then you go over to your browser and you paste it in okay and that's that's",
    "start": "528399",
    "end": "535240"
  },
  {
    "text": "what's called manual enrollment Okay so that is the alternative right now if you're not",
    "start": "535240",
    "end": "541680"
  },
  {
    "text": "doing um to get a machine certificate as local admin you do some method of manual enrollment you run this seert request",
    "start": "541680",
    "end": "548000"
  },
  {
    "text": "tool on the local box um or you go to a web page that will run that seert",
    "start": "548000",
    "end": "553600"
  },
  {
    "text": "request form for you with the active X controls and generate the request so now that I have a pkcs1 I'll send that off",
    "start": "553600",
    "end": "560839"
  },
  {
    "text": "to the CA and then the ca will issue back a pkcs7 remember all that information that",
    "start": "560839",
    "end": "566800"
  },
  {
    "text": "I that I entered in the form that's all embedded in here some somewhere but the ca is free to throw all that stuff out",
    "start": "566800",
    "end": "572440"
  },
  {
    "text": "except for my my public key and issue back a credential that it wants to",
    "start": "572440",
    "end": "577880"
  },
  {
    "text": "issue right but the whole trick of enrollment or the whole security of enrollment is how securely do I get this",
    "start": "577880",
    "end": "584440"
  },
  {
    "text": "enrollment request to the CA and what does the ca know about me when I give it",
    "start": "584440",
    "end": "590480"
  },
  {
    "text": "to them right so that when they issue the CT who are they issuing the CT",
    "start": "590480",
    "end": "596480"
  },
  {
    "text": "to and that's why it matters these level one two or class one class two class three C it's what Assurance do they have",
    "start": "596480",
    "end": "603360"
  },
  {
    "text": "that I am who I say I am when I give them a request and what do they put in the request they're probably not going",
    "start": "603360",
    "end": "609279"
  },
  {
    "text": "to take anything I tell them right the only thing they have to take is the public key and then they can issue the",
    "start": "609279",
    "end": "614480"
  },
  {
    "text": "CT with whatever is in the CT um for whatever usage for whatever they can't",
    "start": "614480",
    "end": "619600"
  },
  {
    "text": "change the key size I guess um and that's about it okay so when you're thinking about",
    "start": "619600",
    "end": "625839"
  },
  {
    "text": "pkis be very careful about how you do enrollment um and like I said in wi 2K",
    "start": "625839",
    "end": "631720"
  },
  {
    "text": "we solve the enrollment problem uh in a non-standard way because we had to early in the standards development process",
    "start": "631720",
    "end": "637800"
  },
  {
    "text": "just to get something for wind 2K that worked for machine Auto enrollment in uh Whistler Windows XP will have user Auto",
    "start": "637800",
    "end": "644040"
  },
  {
    "text": "enrollment working as well as machine so as soon as you log in you can automatically get assert if your",
    "start": "644040",
    "end": "650040"
  },
  {
    "text": "administrator has set that up okay so I'll turn it over uh to these",
    "start": "650040",
    "end": "655120"
  },
  {
    "text": "guys",
    "start": "655120",
    "end": "658120"
  },
  {
    "text": "okay to",
    "start": "664279",
    "end": "668279"
  },
  {
    "text": "only when you log in as administrator um you'll log in either as administrator in",
    "start": "699480",
    "end": "707160"
  },
  {
    "text": "which case you have access to the Keys which are generated by the user local administrator right and you have",
    "start": "707160",
    "end": "714480"
  },
  {
    "text": "access you never have access to the private key but you can cause things to use private ke as local admin like you",
    "start": "714480",
    "end": "721560"
  },
  {
    "text": "can manipulate services like ipac and configure IPC which will be able to access machine certificate private keys",
    "start": "721560",
    "end": "728079"
  },
  {
    "text": "for the purpose of signature through the API so you can never really look at the private key or get access",
    "start": "728079",
    "end": "734519"
  },
  {
    "text": "to right you can't you can't access those because they're protected they're in an encrypted part of the of the the",
    "start": "734519",
    "end": "740920"
  },
  {
    "text": "storage area which is protected by that user",
    "start": "740920",
    "end": "746800"
  },
  {
    "text": "password hash of the password",
    "start": "747120",
    "end": "751160"
  },
  {
    "text": "don't the we have to go to the OS Security Guys and ask them I'm not sure how much they want to make because more",
    "start": "756360",
    "end": "764040"
  },
  {
    "text": "you know more I do know",
    "start": "764040",
    "end": "769639"
  },
  {
    "text": "internal Contra external",
    "start": "769639",
    "end": "774240"
  },
  {
    "text": "okay so um from now until I guess I got 40 minutes to do it um we're going to go",
    "start": "780120",
    "end": "786000"
  },
  {
    "text": "on and do a more in-depth uh view of IPC",
    "start": "786000",
    "end": "792120"
  },
  {
    "text": "and it it will get kind of uh confusing when we get to Ike but hopefully it'll",
    "start": "792120",
    "end": "798560"
  },
  {
    "text": "give you a better idea of what we're dealing with there",
    "start": "798560",
    "end": "803360"
  },
  {
    "text": "okay so uh first thing we're going to cover is ESP ESP is the encryption of uh",
    "start": "809839",
    "end": "817680"
  },
  {
    "text": "packets stands for encapsulated security payload um this is the component of IPC",
    "start": "817680",
    "end": "823279"
  },
  {
    "text": "that actually does the encryption of the packets um what happens every ESP packet",
    "start": "823279",
    "end": "829240"
  },
  {
    "text": "must either encrypt or authenticate or both in every single packet that that it processes",
    "start": "829240",
    "end": "835600"
  },
  {
    "text": "um what that means basically what happens is if we do both encryption",
    "start": "835600",
    "end": "841680"
  },
  {
    "text": "happens first and then we authenticate the encrypted data but ESP only deals with the data um that it is encrypting",
    "start": "841680",
    "end": "850240"
  },
  {
    "text": "right um so the network headers they are not touched At All by ESP",
    "start": "850240",
    "end": "858240"
  },
  {
    "text": "um okay so this is very similar to the same diagram as what we saw before",
    "start": "863959",
    "end": "869880"
  },
  {
    "text": "um this is going to show what happens in transport mode what we do is we we",
    "start": "869880",
    "end": "875160"
  },
  {
    "text": "maintain the same IP header with the uh the exception of the um data length",
    "start": "875160",
    "end": "881360"
  },
  {
    "text": "field um the ESP header is inserted and this is what's in an ESP header um we've",
    "start": "881360",
    "end": "888480"
  },
  {
    "text": "got the security parameter index a sequence number and an initialization Vector which when we're starting up",
    "start": "888480",
    "end": "896519"
  },
  {
    "text": "um when we're starting up the actual transport connection um the",
    "start": "896519",
    "end": "902800"
  },
  {
    "text": "initialization Vector is used for the encryption of the data um carried in the ESP um ESP also has a trailer or okay",
    "start": "902800",
    "end": "911519"
  },
  {
    "text": "the authentication data which is going to um be the authentication data for the",
    "start": "911519",
    "end": "917399"
  },
  {
    "text": "this Integrity hash the information that generated by that Integrity hash goes into this final",
    "start": "917399",
    "end": "924199"
  },
  {
    "text": "field in the ESP trailer and ESP trailer um in ESP you",
    "start": "924199",
    "end": "932600"
  },
  {
    "text": "have you have the ability to um say that every packet is going to be a certain length and that's supposed to cut down",
    "start": "932600",
    "end": "938720"
  },
  {
    "text": "on traffic analysis if every packet looks the same to the outside world then you you can't really tell what that",
    "start": "938720",
    "end": "944399"
  },
  {
    "text": "packet's used for um so then it's going to the the trailer is going to um have",
    "start": "944399",
    "end": "950440"
  },
  {
    "text": "all of that padding in it the pad length and whatever the next header is that um",
    "start": "950440",
    "end": "955680"
  },
  {
    "text": "that means in this final thing right here",
    "start": "955680",
    "end": "962560"
  },
  {
    "text": "wait that's going to tell me what this right here what this header",
    "start": "962560",
    "end": "967959"
  },
  {
    "text": "is because we are encapsulating any um any of the IP protocols can go right",
    "start": "967959",
    "end": "974639"
  },
  {
    "text": "here so it's going to tell me what this header is",
    "start": "974639",
    "end": "979319"
  },
  {
    "text": "so um there's a couple things to realize we talked about Anna replay detection earlier and the Anna replay detection is",
    "start": "997399",
    "end": "1004440"
  },
  {
    "text": "is covered by the sequence number here and because this is black hat I'm just going to tell you just dumb okay um the",
    "start": "1004440",
    "end": "1012279"
  },
  {
    "text": "sequence number is a 32-bit uh number and it is unique it starts at one for the very first ESP packet and",
    "start": "1012279",
    "end": "1018000"
  },
  {
    "text": "monotonically increased pieces right and it helps you manage as a receiver your replay window so every time you've seen",
    "start": "1018000",
    "end": "1023920"
  },
  {
    "text": "if you've seen packet number one you don't receive it again okay and you only you only increment the fact that you've",
    "start": "1023920",
    "end": "1031120"
  },
  {
    "text": "seen it right you only say that you've seen it if the authentication ha hash has been verified so that nobody can",
    "start": "1031120",
    "end": "1037839"
  },
  {
    "text": "modify the sequence number send you a packet you know and you say oh it's a sequence number two I haven't seen this",
    "start": "1037839",
    "end": "1043880"
  },
  {
    "text": "yet and you try to process it and then you don't receive the real sequence number two so not when you when you do",
    "start": "1043880",
    "end": "1049120"
  },
  {
    "text": "Anor replay detection you have to verify the Integrity of the hash first then you know it's a valid packet that it came",
    "start": "1049120",
    "end": "1055440"
  },
  {
    "text": "from the guy that you set up the security association with and then you update the sequence um the window and",
    "start": "1055440",
    "end": "1061360"
  },
  {
    "text": "the Anor replay basically bit Vector that says I've seen this packet um the security parameter index",
    "start": "1061360",
    "end": "1068960"
  },
  {
    "text": "when you do the negotiation in Ike which we'll show more uh later you have to agree on a whole bunch of parameters",
    "start": "1068960",
    "end": "1075840"
  },
  {
    "text": "algorithms and primarily the keys that are used to encrypt the data so there's",
    "start": "1075840",
    "end": "1081840"
  },
  {
    "text": "really no indication when you're looking at the packet what algorithms were used to encrypt it um what the key size is",
    "start": "1081840",
    "end": "1089159"
  },
  {
    "text": "you know that's being used to protect the packet in fact uh if you're doing encrypted ESP you can't tell what's",
    "start": "1089159",
    "end": "1095240"
  },
  {
    "text": "inside the packet it may be a TCP header it may be something else normally the next header field in IP would show you",
    "start": "1095240",
    "end": "1101159"
  },
  {
    "text": "that but that's encrypted so it's just an ipv4 ESP packet that's all you really",
    "start": "1101159",
    "end": "1106320"
  },
  {
    "text": "know out of the packet by by examp examining it on the wire um but the security parameter index",
    "start": "1106320",
    "end": "1112559"
  },
  {
    "text": "for the receiver right imagine the receiver's got a thousand different encrypted sessions coming into it well it's got to be able to know what the",
    "start": "1112559",
    "end": "1118640"
  },
  {
    "text": "right key is to decrypt the packet and what the algorithms are uh to to uh deproc it essentially on received so the",
    "start": "1118640",
    "end": "1125640"
  },
  {
    "text": "security parameter index is the one field that allows the receiver uh to know how to process it um how to decrypt",
    "start": "1125640",
    "end": "1134080"
  },
  {
    "text": "the packet so that's why it's in there and when you set up the security Association the receiver tells the",
    "start": "1134080",
    "end": "1140000"
  },
  {
    "text": "sender hey I want you to use this spy when you send data to me and they because it's a bidirectional negotiation",
    "start": "1140000",
    "end": "1145880"
  },
  {
    "text": "they both swap spies so they agree on this in Ike um the initialization Vector",
    "start": "1145880",
    "end": "1152000"
  },
  {
    "text": "is the initialization Vector for the block Cipher that's being used in when 2K it's Dez or triple Dez the ITF spec",
    "start": "1152000",
    "end": "1158640"
  },
  {
    "text": "uh specifies a whole bunch of encryption algorithms and Windows 2000 we supported",
    "start": "1158640",
    "end": "1164000"
  },
  {
    "text": "two which are the the mandatory to implement Dez although it's 56 bits and you should shouldn't use it if you can",
    "start": "1164000",
    "end": "1169880"
  },
  {
    "text": "use triple DZ triple D is three independent 56-bit Keys um but the",
    "start": "1169880",
    "end": "1175280"
  },
  {
    "text": "initialization Vector is essentially in the clear it's random and um part of the ESP header the ESP header is protected",
    "start": "1175280",
    "end": "1182159"
  },
  {
    "text": "by the Integrity hash so you can't modify the sequence number or the initialization vector or the um",
    "start": "1182159",
    "end": "1187679"
  },
  {
    "text": "spy um the padding is um as Dan said the uh padding is there to allow you to um",
    "start": "1187679",
    "end": "1195600"
  },
  {
    "text": "have fixed size packets and it turns out in the standard you're supposed to be",
    "start": "1195600",
    "end": "1201200"
  },
  {
    "text": "able to add zero to 255 bytes of padding to a packet almost all implementations",
    "start": "1201200",
    "end": "1208400"
  },
  {
    "text": "add only the padding that they need to um to get the the data that they're",
    "start": "1208400",
    "end": "1213960"
  },
  {
    "text": "going to encrypt meaning from this point to this point um aligned on a 64-bit",
    "start": "1213960",
    "end": "1220720"
  },
  {
    "text": "boundary because that's what Dez and triple de operate on 64-bit blocks so if",
    "start": "1220720",
    "end": "1226280"
  },
  {
    "text": "your data comes in and it's um not on a 64-bit boundary essentially you've got to add a little bit of data a few bytes",
    "start": "1226280",
    "end": "1232640"
  },
  {
    "text": "to make it align on a 64-bit boundary and that's what padding is doing so inside the packet you can check the pad",
    "start": "1232640",
    "end": "1238200"
  },
  {
    "text": "link once you decrypt it you can check to see that the pad link is in fact the padding that is added and there's a spec",
    "start": "1238200",
    "end": "1243919"
  },
  {
    "text": "on how to do the padding it should be a monotonically increasing um bite number um the key hash as I said is the",
    "start": "1243919",
    "end": "1252120"
  },
  {
    "text": "the cryptographic check sum if you will across the this part and the original Ip",
    "start": "1252120",
    "end": "1257240"
  },
  {
    "text": "header is not covered now that's because uh they thought that that you might want to modify the",
    "start": "1257240",
    "end": "1263200"
  },
  {
    "text": "original Ip header why would you want to do that well there's lots of options that um can be in the IP header there's",
    "start": "1263200",
    "end": "1269000"
  },
  {
    "text": "Source address Des address in there there's a check sum field um really practically most people are finding out",
    "start": "1269000",
    "end": "1276400"
  },
  {
    "text": "that protecting this information is not very useful um yes I mean in the other format",
    "start": "1276400",
    "end": "1282600"
  },
  {
    "text": "that will probably show on ah you'll you'll protect the IP header but by the time you're done you're not going to",
    "start": "1282600",
    "end": "1288080"
  },
  {
    "text": "accept this packet anyway unless you're be able to fully depress it right and and there have been no errors in",
    "start": "1288080",
    "end": "1293279"
  },
  {
    "text": "depressing uh the packet so the fact that you have you know that it actually came from that IP address or it's not",
    "start": "1293279",
    "end": "1299919"
  },
  {
    "text": "spoofed it's not going to be spoofed anyway so you really don't have to worry about protecting the IP header in my opinion although I'm I'm open for",
    "start": "1299919",
    "end": "1306279"
  },
  {
    "text": "philosophical discussion on that um so the the concern here is that if",
    "start": "1306279",
    "end": "1312360"
  },
  {
    "text": "you're IPC protecting your traffic you're going to add 22 to 36 bytes essentially to the pack",
    "start": "1312360",
    "end": "1319120"
  },
  {
    "text": "to do this extra processing um what we add the minimal amount of padding that",
    "start": "1319120",
    "end": "1324840"
  },
  {
    "text": "will align on a 64-bit boundary so we don't add any extra overhead other than what's required to send the packet in an",
    "start": "1324840",
    "end": "1331080"
  },
  {
    "text": "RFC compatible manner there is Hardware acceleration in three common Intel Nix for wi 2K and they may have it for other",
    "start": "1331080",
    "end": "1338559"
  },
  {
    "text": "platforms that allow you to do once you've once you've essentially frame the packet you can give the the hardware the",
    "start": "1338559",
    "end": "1346120"
  },
  {
    "text": "keys to do the actual encryption cuz that's that's the really expensive part formatting the packet's not hard um but",
    "start": "1346120",
    "end": "1353320"
  },
  {
    "text": "actually doing the crypto across the full packet value is um is quite expensive if you're doing it on every",
    "start": "1353320",
    "end": "1359600"
  },
  {
    "text": "packet now I mean I can do it in software and on a fast CPU you'll never notice it just depends on how much data",
    "start": "1359600",
    "end": "1365760"
  },
  {
    "text": "you're transmitting U so we'll probably talk a little bit more about performance later in some of the deployment uh",
    "start": "1365760",
    "end": "1371159"
  },
  {
    "text": "slides or in the advanced deployment slide at the very end so just know that there is Hardware",
    "start": "1371159",
    "end": "1376520"
  },
  {
    "text": "acceleration it's done in the network card in when okay uh in our design because once you have an IP packet",
    "start": "1376520",
    "end": "1381559"
  },
  {
    "text": "you're right you're right above the Nick so you're just going to give the Nick the the packet and it'll send it out",
    "start": "1381559",
    "end": "1386640"
  },
  {
    "text": "vice versa on receive um the Nick already knows how to decrypt the packets it recognizes the spies that it can",
    "start": "1386640",
    "end": "1392360"
  },
  {
    "text": "decrypt and it decrypts and sends the packet decrypted up to the operating system and there's a a whole language",
    "start": "1392360",
    "end": "1398279"
  },
  {
    "text": "and and protocol between the network car driver and the stack that um control",
    "start": "1398279",
    "end": "1403960"
  },
  {
    "text": "this so if your card only does Dez and you're doing a triple Dez IP secs say well of course it's not going to be",
    "start": "1403960",
    "end": "1410279"
  },
  {
    "text": "offloaded okay okay the one thing I do want to uh bring up is that this",
    "start": "1410279",
    "end": "1415480"
  },
  {
    "text": "sequence number and the anti-replay protection it is not defined in the base RFC um for IPC so it is not mandatory",
    "start": "1415480",
    "end": "1424000"
  },
  {
    "text": "that implementations uh put it in there actually do the in or do the window",
    "start": "1424000",
    "end": "1429200"
  },
  {
    "text": "check I honestly don't know of any implementations that do not do that but",
    "start": "1429200",
    "end": "1434440"
  },
  {
    "text": "it is possible that in the future one doesn't",
    "start": "1434440",
    "end": "1439279"
  },
  {
    "text": "then we're going to move on to ESPN tunnel mode",
    "start": "1439520",
    "end": "1446679"
  },
  {
    "text": "yeah",
    "start": "1467360",
    "end": "1470360"
  },
  {
    "text": "e",
    "start": "1497320",
    "end": "1500320"
  },
  {
    "text": "e",
    "start": "1527320",
    "end": "1530320"
  },
  {
    "text": "for e",
    "start": "1557240",
    "end": "1561278"
  },
  {
    "text": "problem for",
    "start": "1617240",
    "end": "1621200"
  },
  {
    "text": "okay back to this slide um this is the the ESP header trailer and off they all",
    "start": "1658880",
    "end": "1665120"
  },
  {
    "text": "serve the same purpose in this um in tunnel mode as they do in transport mode",
    "start": "1665120",
    "end": "1670240"
  },
  {
    "text": "um the only real difference is that in tunnel mode this whole information is encrypted here and it's it append the IP",
    "start": "1670240",
    "end": "1679279"
  },
  {
    "text": "um when it's processed will will end up putting a new IP header onto the",
    "start": "1679279",
    "end": "1687440"
  },
  {
    "text": "packet okay then authentication header authentication header is pretty much exactly what it sounds like",
    "start": "1687919",
    "end": "1695880"
  },
  {
    "text": "um the authentication is applied to the entire packet with the mutable Fields zeroed out of the IP header um so",
    "start": "1695880",
    "end": "1703440"
  },
  {
    "text": "anything that can change in the header is zeroed out before you compute the hash and um before you verify the hash",
    "start": "1703440",
    "end": "1710480"
  },
  {
    "text": "as well um if both ESP and ah are applied to the packet um ESP is done",
    "start": "1710480",
    "end": "1716120"
  },
  {
    "text": "first and then ah is done um that is so that all of the information that ESP did",
    "start": "1716120",
    "end": "1721519"
  },
  {
    "text": "is also authenticated by ah as well as the network",
    "start": "1721519",
    "end": "1727559"
  },
  {
    "text": "header and this is a similar diagram that we had before um in transport mode",
    "start": "1728559",
    "end": "1734159"
  },
  {
    "text": "um ah it's only a header it has no trailing information and it will put itself in here and",
    "start": "1734159",
    "end": "1741159"
  },
  {
    "text": "expand it out the ah header looks like this um the next header uh field will",
    "start": "1741159",
    "end": "1746799"
  },
  {
    "text": "point to the IP type of this header here um payload length is pay payload length",
    "start": "1746799",
    "end": "1754279"
  },
  {
    "text": "of the um packet reserved is just not used currently um SPI is the same as the",
    "start": "1754279",
    "end": "1761799"
  },
  {
    "text": "SPI in the um ESP it will identify the essays on both ends that",
    "start": "1761799",
    "end": "1768760"
  },
  {
    "text": "uh apply to the packet so that the both endpoints will know what algorithms were used in authenticating this",
    "start": "1768760",
    "end": "1775600"
  },
  {
    "text": "packet um the sequence number is also used for um the replay protection and",
    "start": "1775600",
    "end": "1782200"
  },
  {
    "text": "the key hash that's the actual the me the meat of the authentication uh header that is where the Integrity hash",
    "start": "1782200",
    "end": "1787960"
  },
  {
    "text": "coverage um actually stores the hash that it computed on that packet and",
    "start": "1787960",
    "end": "1794720"
  },
  {
    "text": "again um before this before the the window is moved um the packet has to",
    "start": "1794720",
    "end": "1801720"
  },
  {
    "text": "pass the Integrity check that the hash provided do you have anything to add on",
    "start": "1801720",
    "end": "1807799"
  },
  {
    "text": "this one um age and tunnel mode it's the same",
    "start": "1807799",
    "end": "1813559"
  },
  {
    "text": "as a uh ESP and tunnel mode it creates a new IP header and then the Integrity hash will cover the whole packet like",
    "start": "1813559",
    "end": "1821000"
  },
  {
    "text": "this and keep in mind everything here will be visible um if it's just",
    "start": "1821000",
    "end": "1826279"
  },
  {
    "text": "authentication header",
    "start": "1826279",
    "end": "1829960"
  },
  {
    "text": "okay now Ike Ike is the confusing part um I consist of two different phases um",
    "start": "1833120",
    "end": "1838799"
  },
  {
    "text": "in in the phase first the first phase um is to establish a secure Channel which",
    "start": "1838799",
    "end": "1844240"
  },
  {
    "text": "is called an Isa KMP Isa KMP is a protocol um for key exchange U messages",
    "start": "1844240",
    "end": "1851320"
  },
  {
    "text": "that was uh developed by the NSA um go ahead well proposed by the NSA",
    "start": "1851320",
    "end": "1858840"
  },
  {
    "text": "to the IPC working group and they adopted it um it's just the way that the format",
    "start": "1858840",
    "end": "1866840"
  },
  {
    "text": "of the messages that are passed in um Ike um what the phase one does is it",
    "start": "1866840",
    "end": "1872960"
  },
  {
    "text": "sets up a secure channel for um the further phase two uh connections um so that the the the two",
    "start": "1872960",
    "end": "1881399"
  },
  {
    "text": "com the two end points can negotiate whatever um authentication or I'm sorry",
    "start": "1881399",
    "end": "1887000"
  },
  {
    "text": "security Association that they need to establish for IP sec to work um then",
    "start": "1887000",
    "end": "1892320"
  },
  {
    "text": "phase two phase two is actually used for for U maintenance and",
    "start": "1892320",
    "end": "1898919"
  },
  {
    "text": "um negotiation of those security um associations sorry",
    "start": "1898919",
    "end": "1908120"
  },
  {
    "text": "yes okay there's two kinds of security associations one of them is an isakmp",
    "start": "1910840",
    "end": "1916200"
  },
  {
    "text": "security Association and that consists of the um of the encryption algorithm uh",
    "start": "1916200",
    "end": "1922399"
  },
  {
    "text": "key length uh dippy Helman types used in key exchange um is there anything I'm",
    "start": "1922399",
    "end": "1928320"
  },
  {
    "text": "missing there you",
    "start": "1928320",
    "end": "1934120"
  },
  {
    "text": "probably we probably have some other slides describe it'll later in there I",
    "start": "1934120",
    "end": "1939480"
  },
  {
    "text": "know that at least in in the pki talk that I have I go through the detail of Ike negotiating certificate",
    "start": "1939480",
    "end": "1944639"
  },
  {
    "text": "authentication and there's there's quite a few things in there okay and then an ipct essay is completely different from",
    "start": "1944639",
    "end": "1950120"
  },
  {
    "text": "an isakmp essay um what it's used for is the definition of the algorithms and",
    "start": "1950120",
    "end": "1955960"
  },
  {
    "text": "every and it maintains the state of the IP um connection between the two",
    "start": "1955960",
    "end": "1962720"
  },
  {
    "text": "endpoints um for so for each for each IP set connection there are two essays one",
    "start": "1962720",
    "end": "1968360"
  },
  {
    "text": "inbound and one outbound",
    "start": "1968360",
    "end": "1972120"
  },
  {
    "text": "Okay and like I just said main mode um negotiation in Ike will create the uh",
    "start": "1980279",
    "end": "1985399"
  },
  {
    "text": "Isa PSA which is then used to um negotiate the uh IP SEC sessay um",
    "start": "1985399",
    "end": "1992799"
  },
  {
    "text": "there's three steps in main mode uh first step is going to be uh the sa negotiation that's the ISA km PSA",
    "start": "1992799",
    "end": "1999840"
  },
  {
    "text": "negotiation uh second it's going to use for uh DIY Helman exchange or DIY Helman",
    "start": "1999840",
    "end": "2005960"
  },
  {
    "text": "um key exchange and non exchange um the Diffy Helman is actually going to be or",
    "start": "2005960",
    "end": "2012159"
  },
  {
    "text": "the key derived from the Diffy Helman exchanges is actually used to encrypt the authentication phase of or not phase",
    "start": "2012159",
    "end": "2018679"
  },
  {
    "text": "but um the authentication exchange used in main",
    "start": "2018679",
    "end": "2024879"
  },
  {
    "text": "mode okay and this is the diagram showing how uh main mode exchange looks",
    "start": "2025960",
    "end": "2031480"
  },
  {
    "text": "while using uh curb RS first thing that happens this is in",
    "start": "2031480",
    "end": "2037120"
  },
  {
    "text": "the SA collection um part of main mode uh what it sends is the ISA campy header",
    "start": "2037120",
    "end": "2045080"
  },
  {
    "text": "and all of the ISA KMP um all of the ISA KMP essays that the",
    "start": "2045080",
    "end": "2052000"
  },
  {
    "text": "initiator could use did you want to show them how to set",
    "start": "2052000",
    "end": "2057280"
  },
  {
    "text": "that in Windows or show them what what's that",
    "start": "2057280",
    "end": "2064800"
  },
  {
    "text": "okay um of these what happens is is the responder will choose one of these",
    "start": "2064800",
    "end": "2069960"
  },
  {
    "text": "sessay and reply with it in the ISA Camp header um so then they they have an",
    "start": "2069960",
    "end": "2076158"
  },
  {
    "text": "agreement on what it is they're going to use to authenticate their their session and everything from that",
    "start": "2076159",
    "end": "2082440"
  },
  {
    "text": "point uh second is going to be the Diffy Helman key exchange so um the initiator",
    "start": "2082440",
    "end": "2089440"
  },
  {
    "text": "will put its part of the Diffy Helman key exchange in there a nons and a ceros",
    "start": "2089440",
    "end": "2095358"
  },
  {
    "text": "token the ceros token is actually a token generated by the um the security",
    "start": "2095359",
    "end": "2102640"
  },
  {
    "text": "uh security service provider interfaces for Cur Rose um so it actually uses the",
    "start": "2102640",
    "end": "2108400"
  },
  {
    "text": "operating systems um infrastructure to do the curos exchange and it generates",
    "start": "2108400",
    "end": "2114640"
  },
  {
    "text": "the token here the responder will send back it's",
    "start": "2114640",
    "end": "2120800"
  },
  {
    "text": "half of the uh Diffy Helman key exchange it's nons and a cerose token that is",
    "start": "2120800",
    "end": "2126200"
  },
  {
    "text": "actually part of the the same exchange that that the operating system uh just just negotiated for",
    "start": "2126200",
    "end": "2134480"
  },
  {
    "text": "them okay uh the third part the authenticated part it's this whole",
    "start": "2134480",
    "end": "2139920"
  },
  {
    "text": "section here is going to be authenticated there's two or there's one exchange so One Direction and then",
    "start": "2139920",
    "end": "2145880"
  },
  {
    "text": "coming back what happens is um it's going to have a header it's going to have an ID",
    "start": "2145880",
    "end": "2153560"
  },
  {
    "text": "um William that that ID is for the isaam",
    "start": "2153960",
    "end": "2159480"
  },
  {
    "text": "P okay that's the main mode ID generated for this isaam PSA um and then this hash",
    "start": "2159480",
    "end": "2166200"
  },
  {
    "text": "is derived from the curos exchange that happened here and it's used for the mutual authentication it's it's to prove",
    "start": "2166200",
    "end": "2172839"
  },
  {
    "text": "that that um that Cur actually succeeded so in this case um Diffy",
    "start": "2172839",
    "end": "2181720"
  },
  {
    "text": "Helman the DH exchange is what's actually generating the shared master key between the two IP addresses so when",
    "start": "2181720",
    "end": "2189960"
  },
  {
    "text": "you're done you have 768 bits or 1024 bits of shared master key material it's",
    "start": "2189960",
    "end": "2196240"
  },
  {
    "text": "a symmetric key via the Diffy Helman exchange but Diffy Helman by itself",
    "start": "2196240",
    "end": "2202079"
  },
  {
    "text": "doesn't tell you that somebody wasn't in the middle and conducting an active man in the middle attack on you right",
    "start": "2202079",
    "end": "2208720"
  },
  {
    "text": "because if you do the Diffy Helman the way Diffy Helman um works and you have",
    "start": "2208720",
    "end": "2213839"
  },
  {
    "text": "to go through this in your mind if you're not a cryptographer it's G to the mod uh G to the x P um essentially what",
    "start": "2213839",
    "end": "2220839"
  },
  {
    "text": "you do is you choose a random exponent each side chooses a random exponent a large random exponent like 320 bits",
    "start": "2220839",
    "end": "2227960"
  },
  {
    "text": "large um and you raise a well-known G uh to that exponent power and then you take",
    "start": "2227960",
    "end": "2235079"
  },
  {
    "text": "the mod value of P which is also wellknown it's defined in the RFC so you're taking a well-known value to a",
    "start": "2235079",
    "end": "2241640"
  },
  {
    "text": "random exponent and taking the modulus of it of a well-known value in the end you end up with What's called the",
    "start": "2241640",
    "end": "2246920"
  },
  {
    "text": "intermediate product okay the Diffy Helman intermediate product and that's what's in this DH exchange it's called",
    "start": "2246920",
    "end": "2253400"
  },
  {
    "text": "the K payload in Ike the key exchange payload it's part of the shared secret",
    "start": "2253400",
    "end": "2261160"
  },
  {
    "text": "computation U both sides do that so the random number on the right and the random number on the left are different",
    "start": "2261160",
    "end": "2267079"
  },
  {
    "text": "you'll end up with different intermediate products they exchange those and then they complete the",
    "start": "2267079",
    "end": "2274480"
  },
  {
    "text": "calculation uh where they raise that exponent they raise that intermediate product to their random value and I",
    "start": "2274480",
    "end": "2281079"
  },
  {
    "text": "believe take mod P again and then you end up by the magic of this of this math",
    "start": "2281079",
    "end": "2288240"
  },
  {
    "text": "with the same um sharedr shared secret the same 768 bits or 1024 bits on each",
    "start": "2288240",
    "end": "2295880"
  },
  {
    "text": "side but what that does is it doesn't tell you um that there's not somebody in the middle that was doing this",
    "start": "2295880",
    "end": "2302640"
  },
  {
    "text": "computation and sending data over here and sending data over there and by the time you're done",
    "start": "2302640",
    "end": "2308319"
  },
  {
    "text": "there's a guy in there that knows Secrets different Secrets but secrets for both sides right so what you have to",
    "start": "2308319",
    "end": "2313839"
  },
  {
    "text": "do is authenticate the the key generation authenticate the Diffy Helman exchange and that's what's happening in",
    "start": "2313839",
    "end": "2320119"
  },
  {
    "text": "keros or in certificates is there's a hash value here which is based upon",
    "start": "2320119",
    "end": "2325520"
  },
  {
    "text": "either your Kos relationship or the fact that you have a private key and you use a private key to sign all of this",
    "start": "2325520",
    "end": "2331880"
  },
  {
    "text": "exchange and send that over to the other guy and he computes that and verifies that yes in fact our conversation has",
    "start": "2331880",
    "end": "2338760"
  },
  {
    "text": "been between us and only between us and what that is that's called a liveness proof um it it basically proves to each",
    "start": "2338760",
    "end": "2345960"
  },
  {
    "text": "end that the other side is alive in the next exchange the exact same thing happens but in the other direction um so",
    "start": "2345960",
    "end": "2352560"
  },
  {
    "text": "then this hash is computed both sides know how to compute that hash and so they realize yeah that is the this is",
    "start": "2352560",
    "end": "2360000"
  },
  {
    "text": "live and it's not a replay attack okay and then when it happens a",
    "start": "2360000",
    "end": "2365880"
  },
  {
    "text": "little bit differently main mode using certificates um the first part is going",
    "start": "2365880",
    "end": "2371319"
  },
  {
    "text": "to be exactly the same and so I want to I want to make sure that the it's clear that these sa",
    "start": "2371319",
    "end": "2377079"
  },
  {
    "text": "proposals the one that's actually chosen will Define the rest of the main mode um",
    "start": "2377079",
    "end": "2382599"
  },
  {
    "text": "negotiation um this sa proposal contains the information like I want to I want to negotiate using curos or I want to",
    "start": "2382599",
    "end": "2389200"
  },
  {
    "text": "negotiate using uh certificates or shared secrets that's where that information is is exchanged um then the",
    "start": "2389200",
    "end": "2396920"
  },
  {
    "text": "respon will select one of these sa proposals and send it back to the",
    "start": "2396920",
    "end": "2402640"
  },
  {
    "text": "initiator and then um they also they they then attempt",
    "start": "2402640",
    "end": "2408200"
  },
  {
    "text": "to do the um Diffy helmet exchange this is up till this part the only difference is that they do not have a cerose token",
    "start": "2408200",
    "end": "2415079"
  },
  {
    "text": "at this point that um because they are using uh certificates for",
    "start": "2415079",
    "end": "2420920"
  },
  {
    "text": "this um sends back the Diffy helmet exchange um from the responder um the",
    "start": "2420920",
    "end": "2427520"
  },
  {
    "text": "knots from the responder and the Certificate request which means the responder wants to see what the",
    "start": "2427520",
    "end": "2433560"
  },
  {
    "text": "initiator's certificate looks like can can I cover the main mode",
    "start": "2433560",
    "end": "2438960"
  },
  {
    "text": "parameters over here sure okay so we're talking about this very first sa payload",
    "start": "2438960",
    "end": "2445200"
  },
  {
    "text": "the there's the header but there's also sa proposals um if you go into the IPC",
    "start": "2445200",
    "end": "2451640"
  },
  {
    "text": "policy management snap in you go to a particular policy and you go on the general tab again",
    "start": "2451640",
    "end": "2457800"
  },
  {
    "text": "all of these settings right believe me i' I've redesigned their UI three times I know it's painful so um if you have",
    "start": "2457800",
    "end": "2466400"
  },
  {
    "text": "ideas on how to improve the UI I'd like to hear them but basically this is the UI that we we ended up with and so for a",
    "start": "2466400",
    "end": "2473359"
  },
  {
    "text": "single policy we have a single setting on how to do main mode and that",
    "start": "2473359",
    "end": "2479800"
  },
  {
    "text": "essentially is an ordered list of algorithms so in main mode you're you're",
    "start": "2479800",
    "end": "2486000"
  },
  {
    "text": "proposing how are we going to incre our communication and what key strength are we going to generate between the two and",
    "start": "2486000",
    "end": "2491920"
  },
  {
    "text": "this happens at the IP level between the two IP addresses so in this case the",
    "start": "2491920",
    "end": "2497400"
  },
  {
    "text": "this particular policy and you can change this uh this particular policy has triple de for encryption sha one is",
    "start": "2497400",
    "end": "2504040"
  },
  {
    "text": "the Integrity algorithm and then Diffy Helman um I say medium value two here that's 1024 bits um and then there's",
    "start": "2504040",
    "end": "2511640"
  },
  {
    "text": "multiple proposals here so that you can if if one side doesn't agree on Triple",
    "start": "2511640",
    "end": "2516960"
  },
  {
    "text": "dead sh one well maybe it will agree on something else in the list you as the IPC administrator would go in and make",
    "start": "2516960",
    "end": "2523359"
  },
  {
    "text": "this be what you want it to be uh in order to interoperate we had to support enough options that everybody would you",
    "start": "2523359",
    "end": "2530480"
  },
  {
    "text": "know be able to have one option in common so you know people people are free in their implementations to support",
    "start": "2530480",
    "end": "2537000"
  },
  {
    "text": "however many options they want there are there are systems that support hundreds of options uh we support um you know",
    "start": "2537000",
    "end": "2545440"
  },
  {
    "text": "triple Dez Dez md5 sha one but after you're all said and done that's still",
    "start": "2545440",
    "end": "2550960"
  },
  {
    "text": "over 200,000 combinations that you could possibly configure uh in all these different ways in an IPC policy so the",
    "start": "2550960",
    "end": "2558480"
  },
  {
    "text": "bottom line here is that in main mode you're you're trying to decide how to encrypt your traffic and what key size",
    "start": "2558480",
    "end": "2564400"
  },
  {
    "text": "to generate what's not shown in here and what's shown in the security rules is that in main mode you're also choosing",
    "start": "2564400",
    "end": "2570520"
  },
  {
    "text": "the authentication method so if I look at the rule each rule has an",
    "start": "2570520",
    "end": "2576200"
  },
  {
    "text": "authentication method and it can have a list of authentication methods so the list of authentication methods is what's",
    "start": "2576200",
    "end": "2582559"
  },
  {
    "text": "proposed in main mode so I say I want to do ceros first then I'll do Cs and then",
    "start": "2582559",
    "end": "2587800"
  },
  {
    "text": "maybe I'll do pre-shared key or maybe the proposal in main mode is I'll only do certificate authentication but the",
    "start": "2587800",
    "end": "2594119"
  },
  {
    "text": "responder has to choose he only has one chance he he has to choose a particular",
    "start": "2594119",
    "end": "2599480"
  },
  {
    "text": "authentication method he doesn't know exactly the CTS and everything yet but he has to choose a particular authentication method as a responder",
    "start": "2599480",
    "end": "2608160"
  },
  {
    "text": "in the protocol okay yeah oh you want to just",
    "start": "2608160",
    "end": "2613440"
  },
  {
    "text": "put slides over there yeah",
    "start": "2613440",
    "end": "2619359"
  },
  {
    "text": "yeah okay in on this slide you'll see or not slide but on this you'll see that",
    "start": "2619359",
    "end": "2625040"
  },
  {
    "text": "Diffy Helman it says medium and then in parentheses it says two of that I I believe the um IPC uh RFC defined five",
    "start": "2625040",
    "end": "2634240"
  },
  {
    "text": "of those one and two um what that is that's a grp group of all of exactly",
    "start": "2634240",
    "end": "2640200"
  },
  {
    "text": "it's a group defined by the RFC of the Diffy Helman values to be used as the",
    "start": "2640200",
    "end": "2645319"
  },
  {
    "text": "generator and the mod modulus um in the Diffy Helman exchanges",
    "start": "2645319",
    "end": "2652119"
  },
  {
    "text": "they are defined in the RFC of those to be compliant with the r IP SE need to",
    "start": "2652119",
    "end": "2658000"
  },
  {
    "text": "implement one and two so we get all this pressure to be user",
    "start": "2658000",
    "end": "2663119"
  },
  {
    "text": "friendly and that's why we chose low and medium because certainly could go higher",
    "start": "2663119",
    "end": "2668400"
  },
  {
    "text": "but we didn't support something higher so we had to call it low and medium um so medium is the strongest",
    "start": "2668400",
    "end": "2675240"
  },
  {
    "text": "that we support in Windows 2000 and in Whistler it's the 1024-bit uh Diffy",
    "start": "2675240",
    "end": "2680839"
  },
  {
    "text": "helmet okay and back to this this first exchange um what happens is the",
    "start": "2680839",
    "end": "2686720"
  },
  {
    "text": "initiator makes a list of all of the acceptable sa parameters that it can use um the responder is supposed to choose",
    "start": "2686720",
    "end": "2693440"
  },
  {
    "text": "the one highest in the list so the the one highest in the list this is a prioritized list sent by the initiator",
    "start": "2693440",
    "end": "2700079"
  },
  {
    "text": "the highest one in the list that they can both agree to that's the one that's supposed to be uh chosen by the",
    "start": "2700079",
    "end": "2707240"
  },
  {
    "text": "responder okay so back to what's going on we've now got sent the Certificate",
    "start": "2709240",
    "end": "2715119"
  },
  {
    "text": "request um so the responder this is now encrypted the responder will send the",
    "start": "2715119",
    "end": "2720319"
  },
  {
    "text": "certificate to the other side as well as the signature of the certificate to authen uh to authenticate the uh",
    "start": "2720319",
    "end": "2727000"
  },
  {
    "text": "certificate and it'll also request that the responder send its certificate back",
    "start": "2727000",
    "end": "2732079"
  },
  {
    "text": "um the responder at this point in time will verify that the certificate is valid and verify um I'm sorry I I",
    "start": "2732079",
    "end": "2740079"
  },
  {
    "text": "skipped a part over here in the Certificate request that will also have a list of the um Casa that the responder",
    "start": "2740079",
    "end": "2747680"
  },
  {
    "text": "trusts um so then this certificate when it's returned back to the responder um",
    "start": "2747680",
    "end": "2754079"
  },
  {
    "text": "must have one of the uh one of the uh",
    "start": "2754079",
    "end": "2759359"
  },
  {
    "text": "Casa accepted by the responder and then the responder will verify the",
    "start": "2759359",
    "end": "2767400"
  },
  {
    "text": "certificate right if if the initiator doesn't have any certificates that are",
    "start": "2779359",
    "end": "2784720"
  },
  {
    "text": "agreable to this responder then the whole negotiation breaks down right",
    "start": "2784720",
    "end": "2790640"
  },
  {
    "text": "there",
    "start": "2795440",
    "end": "2798440"
  },
  {
    "text": "yes okay so then um what's used for the liveness proof here is actually going to be the signatures that are sent back",
    "start": "2800960",
    "end": "2807720"
  },
  {
    "text": "with the certificates um obviously because of uh certificate the way",
    "start": "2807720",
    "end": "2812800"
  },
  {
    "text": "certificates work only the responder should have the private key and be able to sign the sign or sign the certificate",
    "start": "2812800",
    "end": "2819599"
  },
  {
    "text": "that it just sent across um and then this is the main mode ID that that is negotiated as well",
    "start": "2819599",
    "end": "2828000"
  },
  {
    "text": "that that would be bad and that's why the hash actually includes the sa payloads um that were sent across so the",
    "start": "2853760",
    "end": "2862800"
  },
  {
    "text": "the hash is is not a simple hash in the RFC it defines the inclusion of a bunch",
    "start": "2862800",
    "end": "2868559"
  },
  {
    "text": "of these things these payloads inside the hash so while it's uh where's the",
    "start": "2868559",
    "end": "2874800"
  },
  {
    "text": "hash or the sign basically the signature the signat signature is the is the hash",
    "start": "2874800",
    "end": "2880078"
  },
  {
    "text": "pay yeah it actually it's the um signature here is the hash yeah it's a",
    "start": "2881599",
    "end": "2887319"
  },
  {
    "text": "signed it's the signed hash yeah it's basically signing all of the shared information that they have between them",
    "start": "2887319",
    "end": "2894079"
  },
  {
    "text": "right and it it it specifically incloses uh includes the essay proposal because of exactly that",
    "start": "2894079",
    "end": "2900839"
  },
  {
    "text": "problem what it means is that you cannot you could potentially intercept this",
    "start": "2902559",
    "end": "2907800"
  },
  {
    "text": "message here because this is not Integrity protected it's not encrypted you could change what this guy was",
    "start": "2907800",
    "end": "2913559"
  },
  {
    "text": "proposing to the other guy this is what he was describing he's asking what the signature the signature is actually um",
    "start": "2913559",
    "end": "2919760"
  },
  {
    "text": "defined in the part of The saay Proposal is defining the signature algorithm and",
    "start": "2919760",
    "end": "2925319"
  },
  {
    "text": "that's used as a pseudo random function to generate you you append everything together and then compute the hash of",
    "start": "2925319",
    "end": "2933920"
  },
  {
    "text": "that yes yes that is what the question was right",
    "start": "2933920",
    "end": "2939480"
  },
  {
    "text": "um well it's whatever is negotiated in in what we were showing up",
    "start": "2939480",
    "end": "2944599"
  },
  {
    "text": "here um not not exactly this signature is the private key signature of the",
    "start": "2944599",
    "end": "2952000"
  },
  {
    "text": "communication so what the Sha one and md5 are are keyed hashes okay so you",
    "start": "2952000",
    "end": "2957960"
  },
  {
    "text": "have to have a symmetric key for sha one or md5 this part here that says",
    "start": "2957960",
    "end": "2963280"
  },
  {
    "text": "encrypted it's encrypted and and the communication the encryption itself is",
    "start": "2963280",
    "end": "2968720"
  },
  {
    "text": "signed which is independent of this particular signature this signature is the authenticator signature the actual",
    "start": "2968720",
    "end": "2975400"
  },
  {
    "text": "payload the whole message itself is encrypted with one of the encryption algorithms and the md5 and sha one is",
    "start": "2975400",
    "end": "2981799"
  },
  {
    "text": "run across the encrypted text using a the another shared key from your master",
    "start": "2981799",
    "end": "2988160"
  },
  {
    "text": "key so this gets as why it gets complicated it's why it gets deep you generated a master key as a result of",
    "start": "2988160",
    "end": "2994520"
  },
  {
    "text": "this from that master key you direct Drive session keys to encrypt the ike",
    "start": "2994520",
    "end": "3000040"
  },
  {
    "text": "negotiation and also to sign the ike negotiation but there session Keys",
    "start": "3000040",
    "end": "3005200"
  },
  {
    "text": "they're just they're symmetric session keys this here is in certificate authentication is the asymmetric private",
    "start": "3005200",
    "end": "3010760"
  },
  {
    "text": "key signature of all of our conversation which is embedded inside the encrypted",
    "start": "3010760",
    "end": "3018040"
  },
  {
    "text": "message okay and the final is going to be main mode using a pre-shared key and this is going to be the least sec that",
    "start": "3021319",
    "end": "3027559"
  },
  {
    "text": "you probably don't want to implement unless it's completely necessary that you",
    "start": "3027559",
    "end": "3032799"
  },
  {
    "text": "do um same thing happens at in the the first uh exchange is exactly the same as",
    "start": "3032799",
    "end": "3038319"
  },
  {
    "text": "it was for certificates um you select the the essay this sa is going to say",
    "start": "3038319",
    "end": "3043520"
  },
  {
    "text": "yes we are going to do a pre-shared key exchange um in the in the third exchange",
    "start": "3043520",
    "end": "3050920"
  },
  {
    "text": "here um the Diffy Helman key is going to be exchanged the nons is going to be exchanged",
    "start": "3050920",
    "end": "3057319"
  },
  {
    "text": "and the exact same thing's going to come back the other way that were generated by the",
    "start": "3057319",
    "end": "3062640"
  },
  {
    "text": "responder the encrypted um they're going to use uh the authentication information",
    "start": "3062640",
    "end": "3068920"
  },
  {
    "text": "generated by the nons and the pre-shared secret um to ident or to generate the",
    "start": "3068920",
    "end": "3074799"
  },
  {
    "text": "hash they're going to do a main Mo mode ID and the header and the exact same thing comes",
    "start": "3074799",
    "end": "3081640"
  },
  {
    "text": "back the other way so this is by far the simplest of the ike exchanges",
    "start": "3081640",
    "end": "3087040"
  },
  {
    "text": "um but it's also the least secure because that shared secret is easy easily",
    "start": "3087040",
    "end": "3092798"
  },
  {
    "text": "compromised so the shared secret um I typed it in up here it's a pre-shared",
    "start": "3094359",
    "end": "3099760"
  },
  {
    "text": "key um in the Windows 2000 model if you were configuring this policy just on",
    "start": "3099760",
    "end": "3105760"
  },
  {
    "text": "this local machine just as local administrator then nobody else can read",
    "start": "3105760",
    "end": "3111799"
  },
  {
    "text": "that pre-shared key I mean other users if they logged on could read the pre-shared key but the pre-shared key",
    "start": "3111799",
    "end": "3117119"
  },
  {
    "text": "is stored in PL text inside the policy and that policy is cashed in local",
    "start": "3117119",
    "end": "3122880"
  },
  {
    "text": "registry um or it's stored in the directory Okay the reason for that is",
    "start": "3122880",
    "end": "3128240"
  },
  {
    "text": "because in the directory model or in any any model where I want to protect this",
    "start": "3128240",
    "end": "3134880"
  },
  {
    "text": "this pre-shared key I have to have a way of delivering the policy to the end system across the network and for it to",
    "start": "3134880",
    "end": "3141839"
  },
  {
    "text": "be able to decrypt you know if it were encrypted it has to decrypt and find out what the pre-shared key was there's no",
    "start": "3141839",
    "end": "3149079"
  },
  {
    "text": "There's no practical way to deliver policy to thousands of in systems and",
    "start": "3149079",
    "end": "3154920"
  },
  {
    "text": "have every one of them know how to decrypt this particular string okay I mean this is it's",
    "start": "3154920",
    "end": "3162040"
  },
  {
    "text": "important to understand because this comes up in ITF lists and a lot of things in Windows 2000 if you set a",
    "start": "3162040",
    "end": "3167920"
  },
  {
    "text": "pre-shared key locally as local admin first of all your local admin you know it you can read it when it's stored in",
    "start": "3167920",
    "end": "3174400"
  },
  {
    "text": "the local registry it's accessible only to local admin read read only for local admin so anybody that compromises a",
    "start": "3174400",
    "end": "3181400"
  },
  {
    "text": "machine can see this pre-shared key right I mean if they get local admin in the registry they have to decry",
    "start": "3181400",
    "end": "3188200"
  },
  {
    "text": "you know they have to I'll say reverse um reverse compile the policy formats",
    "start": "3188200",
    "end": "3193319"
  },
  {
    "text": "because we don't publish those but in the bottom line is it's in the clear okay so it's so the way we store it on",
    "start": "3193319",
    "end": "3199079"
  },
  {
    "text": "the system is not like a password and the reason is because in policy for",
    "start": "3199079",
    "end": "3204200"
  },
  {
    "text": "particularly for distributed policy where you can fing policy in the active directory and you're pushing policy to thousands of clients that key has to be",
    "start": "3204200",
    "end": "3211400"
  },
  {
    "text": "represented in a way that every client will be able to understand what it is and be able to use it now when we",
    "start": "3211400",
    "end": "3216599"
  },
  {
    "text": "transmit the policy across the wire we use kerberized encrypted ldap right for for transporting the",
    "start": "3216599",
    "end": "3223079"
  },
  {
    "text": "policy so nobody can passively look at the policy as it goes by and see the data in the policy that we did take care",
    "start": "3223079",
    "end": "3229200"
  },
  {
    "text": "of but once the policy is stored or cashed on the local machine it's there",
    "start": "3229200",
    "end": "3234760"
  },
  {
    "text": "accessible to local admin all right the other thing is that if I'm doing a server and I want to be secure from",
    "start": "3234760",
    "end": "3241880"
  },
  {
    "text": "anyone to me and I'm specifying an authentication method well I can when",
    "start": "3241880",
    "end": "3248000"
  },
  {
    "text": "you specify a pre-shared key there's a pre-shared key right I mean you can specify multiple pre-shared keys but",
    "start": "3248000",
    "end": "3254839"
  },
  {
    "text": "there's no way in Ike to say use one pre-shared key or use the other pre-shared key right there's no",
    "start": "3254839",
    "end": "3260400"
  },
  {
    "text": "pre-shared key identifier so you have to um basically guess which pre-shared key",
    "start": "3260400",
    "end": "3266040"
  },
  {
    "text": "to use and in our initial implementation we support essentially one pre-shared key although you can configure several",
    "start": "3266040",
    "end": "3272119"
  },
  {
    "text": "only one of them will take effect okay so it would be an invalid configuration to have more than one pre-shared key in",
    "start": "3272119",
    "end": "3278359"
  },
  {
    "text": "a particular authentication method um now that said imagine everybody is communicating to me and",
    "start": "3278359",
    "end": "3285280"
  },
  {
    "text": "we're doing pre-shared key what if one machine out there gets compromised and I",
    "start": "3285280",
    "end": "3290680"
  },
  {
    "text": "now need to change the pre-shared key well I changed the pre-shared key here",
    "start": "3290680",
    "end": "3296000"
  },
  {
    "text": "I've got Pro I've got a policy problem that I have to update all clients first to use a new pre-shared key before I",
    "start": "3296000",
    "end": "3301040"
  },
  {
    "text": "change it on this one right I can't really add another pre-shared key here very well because of the way the ike is",
    "start": "3301040",
    "end": "3306359"
  },
  {
    "text": "defined in in the RFC so bottom line is when you do pre-shared key everybody",
    "start": "3306359",
    "end": "3312000"
  },
  {
    "text": "gets a pre-shared key and they all have to change at once when you change the pre-shared key bad model right much",
    "start": "3312000",
    "end": "3320079"
  },
  {
    "text": "better to go with curos or certificates and so that's why we for for all the reasons I just stated we",
    "start": "3320079",
    "end": "3326079"
  },
  {
    "text": "don't recommend you try pre-share key it's very useful for small testing and for demos and and interoperability",
    "start": "3326079",
    "end": "3331599"
  },
  {
    "text": "because everyone implements pre-share key support first but practically it's very difficult to maintain the security",
    "start": "3331599",
    "end": "3337720"
  },
  {
    "text": "of that pre-shared key and for those of you who have remote access clients that use pre-shared key or machine passwords",
    "start": "3337720",
    "end": "3343920"
  },
  {
    "text": "you know if thousands of remote access users know the secret it's not very much a secret anymore you know yes you're",
    "start": "3343920",
    "end": "3349880"
  },
  {
    "text": "doing user authentication on top but realize what the ike authentication is doing it is your only guarantee that you",
    "start": "3349880",
    "end": "3356440"
  },
  {
    "text": "there is not an active man in the middle that is is participating in your encrypted",
    "start": "3356440",
    "end": "3361480"
  },
  {
    "text": "exchange okay if you cannot positively authenticate end to end then and if your",
    "start": "3361480",
    "end": "3367359"
  },
  {
    "text": "pre-share key becomes compromised the risk is somebody can intercept that traffic participate in the conversation",
    "start": "3367359",
    "end": "3374039"
  },
  {
    "text": "and know all of the cryptographic key material so they basic they have to decrypt on receive and reencrypt on send",
    "start": "3374039",
    "end": "3379880"
  },
  {
    "text": "to participate as an active man in the middle but they still can do it so",
    "start": "3379880",
    "end": "3385440"
  },
  {
    "text": "please do not use pre-shared key uh in your real deployments use something like CS or use",
    "start": "3385440",
    "end": "3390599"
  },
  {
    "text": "ceros okay so box",
    "start": "3390599",
    "end": "3395000"
  },
  {
    "text": "over no that the if you're issuing certificates the the pre-shared key is just an option for authentication if",
    "start": "3397559",
    "end": "3404160"
  },
  {
    "text": "you're using certificates for authentication don't use pre-share key you don't need it",
    "start": "3404160",
    "end": "3410359"
  },
  {
    "text": "right we we have to store the entire policy in the in the protected store and",
    "start": "3419880",
    "end": "3424920"
  },
  {
    "text": "the bottom line is we didn't design it that way we we could have done that but that would the policy can be arbitrarily",
    "start": "3424920",
    "end": "3431640"
  },
  {
    "text": "large and you don't have an arbitrarily large amount of space in the protected store it could amount to a denial of",
    "start": "3431640",
    "end": "3437760"
  },
  {
    "text": "service attack that you create a massive policy shove it down to to workstations and now they can't log in because they",
    "start": "3437760",
    "end": "3443599"
  },
  {
    "text": "can't get access to their protected store service well the service yeah the",
    "start": "3443599",
    "end": "3450400"
  },
  {
    "text": "service had I mean the machine private keys I mean we were trying for private keys in particular right very very",
    "start": "3450400",
    "end": "3456240"
  },
  {
    "text": "security critical um components small amounts of data are what's stored in the",
    "start": "3456240",
    "end": "3461280"
  },
  {
    "text": "protected store not a bunch of data like a policy that can be arbitrarily large so you're right we could have we could",
    "start": "3461280",
    "end": "3467960"
  },
  {
    "text": "have potentially extracted out every pre-shared key and stored like a handle to the pre-shared key and just store the",
    "start": "3467960",
    "end": "3474839"
  },
  {
    "text": "policy in the clear with a handle the pre-shared key that's a lot of work and and bottom line is pre-shared use of",
    "start": "3474839",
    "end": "3481880"
  },
  {
    "text": "pre-shared key is not very secure so we said you know should we do a lot of work to try to protect this pre-share key",
    "start": "3481880",
    "end": "3487760"
  },
  {
    "text": "better or can we support it because it's an RFC requirement and people should be using curus or CS in general so that",
    "start": "3487760",
    "end": "3495920"
  },
  {
    "text": "that's our thinking okay",
    "start": "3495920",
    "end": "3503640"
  },
  {
    "text": "yes I I understand but the private Keys is not and we have a way to and we have a way to refer to certificates and a",
    "start": "3515799",
    "end": "3521319"
  },
  {
    "text": "whole certificate infrastructure that is essentially dependent upon the storage of the private keys so there's a great",
    "start": "3521319",
    "end": "3527160"
  },
  {
    "text": "amount of effort put into storage of private Keys private you know certificate Keys um and there's there's",
    "start": "3527160",
    "end": "3534119"
  },
  {
    "text": "not that much um practical reason I'll say by the time you're all said and done",
    "start": "3534119",
    "end": "3540799"
  },
  {
    "text": "and that's I mean that's our that's sort of the way we've been thinking about it um to to do super secure uh pre-shared",
    "start": "3540799",
    "end": "3548200"
  },
  {
    "text": "key in policy I mean remember it's stored in the directory everybody's got to be able to read it too I mean ideally",
    "start": "3548200",
    "end": "3554760"
  },
  {
    "text": "you'd like to you'd like to encrypt it wherever it's stored you want to encrypt it but now everybody who's got to read",
    "start": "3554760",
    "end": "3559880"
  },
  {
    "text": "it it's got to decrypt it so that's kind of hard to store it and I mean that's basically implies a",
    "start": "3559880",
    "end": "3566119"
  },
  {
    "text": "group pre-share key a group symmetric key so that everybody that reads the policy could then decrypt",
    "start": "3566119",
    "end": "3571200"
  },
  {
    "text": "it you're just protecting the ke right now now it's a it's a group shared key and it's a group encryption key as",
    "start": "3571200",
    "end": "3577960"
  },
  {
    "text": "opposed to an authentication key so there are um for if you choose a weak",
    "start": "3577960",
    "end": "3583359"
  },
  {
    "text": "pre-shared key uh this came up I guess in oh August of 98 or October of 98",
    "start": "3583359",
    "end": "3590200"
  },
  {
    "text": "there's a fellow by the name of John Pam who's a cryptographer uh who published um what he what was an",
    "start": "3590200",
    "end": "3597160"
  },
  {
    "text": "analysis of EXO the extended authentication module for Ike and the",
    "start": "3597160",
    "end": "3602720"
  },
  {
    "text": "design of EXO is insecure to uh compromise of essentially the",
    "start": "3602720",
    "end": "3610559"
  },
  {
    "text": "pre-shared key so if for some reason your pre-shared key has been compromised and somebody else is masquerading as",
    "start": "3610559",
    "end": "3616960"
  },
  {
    "text": "somebody you trust this is the only method right if you're using pre-shared key it's the only method of establishing trust right so if I know your pre-share",
    "start": "3616960",
    "end": "3624240"
  },
  {
    "text": "key that you're going to negotiate to me with and I can get you to negotiate with me then with EXO I can get you to reveal",
    "start": "3624240",
    "end": "3630280"
  },
  {
    "text": "your user credentials your user password at least enough of a hash so that I can do offline pass password guessing attack",
    "start": "3630280",
    "end": "3637920"
  },
  {
    "text": "just by actively communicating with you and you don't really know who I am I just happen to know your pre-share key so uh that paper is published and uh",
    "start": "3637920",
    "end": "3645920"
  },
  {
    "text": "the pointer is in my slides later um so I'll just say that",
    "start": "3645920",
    "end": "3652838"
  },
  {
    "text": "okay quick mode uh quick mode is uh the second phase of the um Ike negotiation",
    "start": "3657200",
    "end": "3663640"
  },
  {
    "text": "it's actually used to um create the IP SEC security associations um each quick",
    "start": "3663640",
    "end": "3669760"
  },
  {
    "text": "mode uh exchange will I'm sorry each quick mode negotiation because there's actually more than one exchange um will",
    "start": "3669760",
    "end": "3676880"
  },
  {
    "text": "result in two IPC um essays one inbound and one outbound so basically defining",
    "start": "3676880",
    "end": "3683119"
  },
  {
    "text": "the the IP SEC connection if you will um there is something called perfect",
    "start": "3683119",
    "end": "3689680"
  },
  {
    "text": "forward secrecy um what that does um each one of these quick mode",
    "start": "3689680",
    "end": "3695280"
  },
  {
    "text": "um each quick mode exchange or not exchange I'm sorry but each quick mode",
    "start": "3695280",
    "end": "3701119"
  },
  {
    "text": "negotiation is is derived the keying material is derived from what was",
    "start": "3701119",
    "end": "3706880"
  },
  {
    "text": "negotiated in the main mode from that the main mode ID",
    "start": "3706880",
    "end": "3712480"
  },
  {
    "text": "um know there's separate identifiers in quick mode is that what you're asking sorry I",
    "start": "3712480",
    "end": "3718240"
  },
  {
    "text": "wasn't listening um the each quick mode exchange was the identifier is actually um derived from the no not a derived",
    "start": "3718240",
    "end": "3726039"
  },
  {
    "text": "from the main mode because the quick mode is identifying something else it's it's the What's called the proxy ID",
    "start": "3726039",
    "end": "3732680"
  },
  {
    "text": "field it's typically the address information um in our implementation in",
    "start": "3732680",
    "end": "3738279"
  },
  {
    "text": "win2k it can be an fqdn or or something else okay so this is a lot like uh main",
    "start": "3738279",
    "end": "3745279"
  },
  {
    "text": "mode it's a lot they don't have to perform the authentication and establish",
    "start": "3745279",
    "end": "3750599"
  },
  {
    "text": "an encrypted session because that was already set up via main mode so everything happens as encrypted and um",
    "start": "3750599",
    "end": "3759960"
  },
  {
    "text": "verified um it's a lot the same you propose your essays in a list um the",
    "start": "3759960",
    "end": "3766559"
  },
  {
    "text": "responder will select one of these essays and they also give a",
    "start": "3766559",
    "end": "3771720"
  },
  {
    "text": "hash um what was this hash um oh this hash is actually part of the liveness",
    "start": "3771720",
    "end": "3778440"
  },
  {
    "text": "it's probably an a hash of an non probably what it is for liveness right um what happens is you you first send",
    "start": "3778440",
    "end": "3785079"
  },
  {
    "text": "this uh across to the responder um the responder now has um a way to prove back",
    "start": "3785079",
    "end": "3791039"
  },
  {
    "text": "to you um you it it deres its hash from what you sent it and what you guys what",
    "start": "3791039",
    "end": "3797480"
  },
  {
    "text": "you already negotiated in main mode um and this is proof of its liveness",
    "start": "3797480",
    "end": "3803359"
  },
  {
    "text": "because it's sharing um or it's showing that it has a shared secret back to you",
    "start": "3803359",
    "end": "3809279"
  },
  {
    "text": "um and then um the same way the the initiator has to prove to the responder",
    "start": "3809279",
    "end": "3814720"
  },
  {
    "text": "that it's not being replayed so that's what this hash computed in the third or the third communication is um this also",
    "start": "3814720",
    "end": "3824520"
  },
  {
    "text": "or sets a committed bite which is in the um which is defined in the ismp what",
    "start": "3824520",
    "end": "3831200"
  },
  {
    "text": "that committed bite says is that I want to get a connected notification this this final exchange here or this final",
    "start": "3831200",
    "end": "3837680"
  },
  {
    "text": "communication here is not necessary in all quick mode um negotiations um Windows does request",
    "start": "3837680",
    "end": "3845200"
  },
  {
    "text": "this connection notification and what that is me meant to do is after this",
    "start": "3845200",
    "end": "3851279"
  },
  {
    "text": "final is sent off the initiator can Al can start sending IPC secured packets",
    "start": "3851279",
    "end": "3857079"
  },
  {
    "text": "because this is the final um exchange or the final piece of the exchange that",
    "start": "3857079",
    "end": "3862319"
  },
  {
    "text": "identifies the IPC um saay um what this final that committed bite",
    "start": "3862319",
    "end": "3869359"
  },
  {
    "text": "that requires them to send a connection notification back does is it makes the initiator wait until it gets that",
    "start": "3869359",
    "end": "3875559"
  },
  {
    "text": "connection notification before it starts sending secured packets because you don't want them to get to the responder",
    "start": "3875559",
    "end": "3881520"
  },
  {
    "text": "and the responder still doesn't know how to um how to unencrypt them or or even",
    "start": "3881520",
    "end": "3886760"
  },
  {
    "text": "how to handle them because they'll just be dropped so that's what that what the connection notification",
    "start": "3886760",
    "end": "3892680"
  },
  {
    "text": "serves remember what we're trying to do is estabish a secure encrypted session but we don't want to start sending data",
    "start": "3892680",
    "end": "3899319"
  },
  {
    "text": "until both sides are ready right so that last exchange down",
    "start": "3899319",
    "end": "3904440"
  },
  {
    "text": "there is trying to synchronize the sender and the receiver so that when the",
    "start": "3904440",
    "end": "3910000"
  },
  {
    "text": "sender starts sending data this receiver is ready to receive it and there all of",
    "start": "3910000",
    "end": "3915799"
  },
  {
    "text": "all of these Ike uh negotiation um messages uh have to have reliability",
    "start": "3915799",
    "end": "3922720"
  },
  {
    "text": "built into them inside Ike there there's no no requirement uh if you will for",
    "start": "3922720",
    "end": "3928640"
  },
  {
    "text": "reliability we're not using TCP right we're just using UDP messages these guys can get lost in the internet um or lost",
    "start": "3928640",
    "end": "3935240"
  },
  {
    "text": "in your local network um so basically each Ike implementation has to implement",
    "start": "3935240",
    "end": "3940640"
  },
  {
    "text": "a timer and retry intervals to make sure that the message is going and has to",
    "start": "3940640",
    "end": "3945839"
  },
  {
    "text": "have logic in there to make sure that you know a particular negotiation is making progress right there's the",
    "start": "3945839",
    "end": "3953079"
  },
  {
    "text": "starvation well it doesn't apply too much in user mode but you could certainly imagine attackers getting",
    "start": "3953079",
    "end": "3958520"
  },
  {
    "text": "halfway through a negotiation and then U just stopping right failing like it's",
    "start": "3958520",
    "end": "3963599"
  },
  {
    "text": "like the TCP open uh an open attack where you just open a bunch of tcps you just never act them finally to finish",
    "start": "3963599",
    "end": "3970680"
  },
  {
    "text": "but this is all in user mode so one of the security properties that they were trying to get to with um with IPC and",
    "start": "3970680",
    "end": "3977920"
  },
  {
    "text": "Ike being a UDP packet is that the user mode process can take an enormous amount",
    "start": "3977920",
    "end": "3983599"
  },
  {
    "text": "of traffic and can implement Den a service algorithms in user mode in a much more efficient way than say colonel",
    "start": "3983599",
    "end": "3991000"
  },
  {
    "text": "mode right because you have an arbitrary amount of user mode memory and virtual memory to receive messages cue them uh",
    "start": "3991000",
    "end": "3997720"
  },
  {
    "text": "process timers and so forth once traffic is underway right that's the that's the",
    "start": "3997720",
    "end": "4003160"
  },
  {
    "text": "kernel mode ESP or ah transfer and that has its own security property right so",
    "start": "4003160",
    "end": "4008920"
  },
  {
    "text": "if you've already set up an essay somebody doing denial a service with you with Ike is not going to affect the ESP",
    "start": "4008920",
    "end": "4015200"
  },
  {
    "text": "or a AG traffic that is already established right it may it may affect your ability to respond quicker to",
    "start": "4015200",
    "end": "4022000"
  },
  {
    "text": "legitimate people but you don't necessarily know who they are remember that in quick mode we're doing encrypted",
    "start": "4022000",
    "end": "4027400"
  },
  {
    "text": "um exchanges here and in and they're authenticated exchanges as well they're doing that mb5 or or sha one hash on",
    "start": "4027400",
    "end": "4034400"
  },
  {
    "text": "every packet and that that hash is checked on every packet before you process what's in it right so if",
    "start": "4034400",
    "end": "4040319"
  },
  {
    "text": "somebody sends you or the worst they can do is replay something and then there's replay detection",
    "start": "4040319",
    "end": "4046039"
  },
  {
    "text": "uh in Ike itself um but if somebody sends you a bogus Ike message in quick",
    "start": "4046039",
    "end": "4051480"
  },
  {
    "text": "mode it's not going to be authenticated right they don't have the shared key state that you established when you authenticated in main mode so quick mode",
    "start": "4051480",
    "end": "4058920"
  },
  {
    "text": "is is intended to be is basically intended to Rey the IPC key material",
    "start": "4058920",
    "end": "4066319"
  },
  {
    "text": "right it's it's it does policy negotiation but it's called quick mode because it's just two round trips and we're done we're ready to send data",
    "start": "4066319",
    "end": "4072640"
  },
  {
    "text": "whereas authentication was three round trips and a lot of processing to do Diffy helmet and do um authentication",
    "start": "4072640",
    "end": "4079119"
  },
  {
    "text": "between the machines okay so main mode gets you an authenticated encrypted negotiation",
    "start": "4079119",
    "end": "4086760"
  },
  {
    "text": "Channel quick mode allows you to very quickly set up or using that trust very",
    "start": "4086760",
    "end": "4091960"
  },
  {
    "text": "quickly set up individual key pairs for IPC uh data",
    "start": "4091960",
    "end": "4097000"
  },
  {
    "text": "protection okay that's the difference really between main mode and quick mode and they did this to leverage so like in",
    "start": "4097000",
    "end": "4103120"
  },
  {
    "text": "SSL typically SSL applications they connect they authenticate they do key exchange and then they disconnect and",
    "start": "4103120",
    "end": "4108960"
  },
  {
    "text": "they tear down the state and then they're back to square one with IPC you do your initial main mode negotiation",
    "start": "4108960",
    "end": "4115640"
  },
  {
    "text": "that main mode may live in our implementation you can set it but it typically is eight hours so you don't",
    "start": "4115640",
    "end": "4121480"
  },
  {
    "text": "have to do another main mode for eight hours so as long as you continue communicating with that particular IP address you'll just do quick modes",
    "start": "4121480",
    "end": "4127838"
  },
  {
    "text": "refresh the key material the key material has lifetimes and so forth so you'll automatically in the background",
    "start": "4127839",
    "end": "4133120"
  },
  {
    "text": "regenerate these keys and the appli really is completely transparent of all of this but the security control is",
    "start": "4133120",
    "end": "4140000"
  },
  {
    "text": "completely under the control of the administrator yes",
    "start": "4140000",
    "end": "4145600"
  },
  {
    "text": "sir um yes because sassel the question was why wasn't",
    "start": "4150960",
    "end": "4156400"
  },
  {
    "text": "sassel um used to do this the authentication and",
    "start": "4156400",
    "end": "4163040"
  },
  {
    "text": "negotiation um well I wasn't around in 1992 and 1994 when they were probably",
    "start": "4163040",
    "end": "4168520"
  },
  {
    "text": "making that decision um they felt like they needed a a completely IP based",
    "start": "4168520",
    "end": "4176159"
  },
  {
    "text": "excuse me UDP based authentication mechanism to to set up this security and",
    "start": "4176159",
    "end": "4183000"
  },
  {
    "text": "they threw out a lot of other methods including TLs you know they had that as an example U they threw out a lot of",
    "start": "4183000",
    "end": "4189318"
  },
  {
    "text": "other methods that basically relied on TCP or implementations would be on TCP",
    "start": "4189319",
    "end": "4195159"
  },
  {
    "text": "um they also felt that most people didn't have ldap clients I mean they were doing gateway to Gateway router",
    "start": "4195159",
    "end": "4200679"
  },
  {
    "text": "tunneling basically was the original goal and so they just wanted something that the routers could do uh to",
    "start": "4200679",
    "end": "4206920"
  },
  {
    "text": "authenticate the routers to themselves or to each other um so imagine um the",
    "start": "4206920",
    "end": "4212080"
  },
  {
    "text": "way this is quick mode also defines what a tunnel is when you do main mode you don't know what what you're what data",
    "start": "4212080",
    "end": "4217600"
  },
  {
    "text": "you're going to send you just know the guys trusted right and quick mode is when you actually send the data you send",
    "start": "4217600",
    "end": "4223040"
  },
  {
    "text": "a proposal that essay proposal is what what data am I going to protect that's the filter right it's the tunnel filter",
    "start": "4223040",
    "end": "4229600"
  },
  {
    "text": "or it's the transport mode filter uh for the traffic that you want to protect so you send the filter over that's what's",
    "start": "4229600",
    "end": "4236040"
  },
  {
    "text": "in the proxy ID um I'm sorry that's what's in the well it's basically the proposed sa and there's a proxy ID field",
    "start": "4236040",
    "end": "4243320"
  },
  {
    "text": "in there as well that's not shown the sa payload includes the encryption algorithms like I show over here it's",
    "start": "4243320",
    "end": "4250120"
  },
  {
    "text": "it's whether you want to do ah whether you want to do ESP and what algorithms you're going to choose when you do these",
    "start": "4250120",
    "end": "4255600"
  },
  {
    "text": "things and also what lifetimes how long do you want these things to live now",
    "start": "4255600",
    "end": "4260760"
  },
  {
    "text": "there's no mandatory way to handle this stuff in the spec so everybody has to",
    "start": "4260760",
    "end": "4265840"
  },
  {
    "text": "kind of cook up a way of doing it of what to receive and what to propose and how to Rey in order to be",
    "start": "4265840",
    "end": "4271960"
  },
  {
    "text": "interoperable so you can start to see now that at least at this level of complexity um you know it was it was",
    "start": "4271960",
    "end": "4278960"
  },
  {
    "text": "highly risky for us to Support options that were not well tested and interoperable before we shipped and so",
    "start": "4278960",
    "end": "4284440"
  },
  {
    "text": "that's why we have well tested very interoperable um ways of handling the",
    "start": "4284440",
    "end": "4290360"
  },
  {
    "text": "all these settings in here so you can pretty much it the policy as you said it will be enforced on that system and to",
    "start": "4290360",
    "end": "4297600"
  },
  {
    "text": "the maximum extent possible a negotiation will happen and they'll try to agree on settings but when your",
    "start": "4297600",
    "end": "4303120"
  },
  {
    "text": "experience when you do interoperability testing or you deploy IPC you know in a lab environment first um you'll probably",
    "start": "4303120",
    "end": "4309920"
  },
  {
    "text": "find that you've got some setting slightly off and the two aren't agreeing right",
    "start": "4309920",
    "end": "4315800"
  },
  {
    "text": "okay okay another thing to note um in this diagram there is no um quick mode ID shown here there is a quick mode ID",
    "start": "4315800",
    "end": "4323880"
  },
  {
    "text": "um anytime after main mode um we can just like we can have a multiple number",
    "start": "4323880",
    "end": "4329760"
  },
  {
    "text": "of quick mode negotiations going on at any time each one of them is unique um so the identifier identifies which of",
    "start": "4329760",
    "end": "4336560"
  },
  {
    "text": "these quick mode negotiations is occurring in this exchange",
    "start": "4336560",
    "end": "4343239"
  },
  {
    "text": "um I don't think understanding El I think that's it and that is the end of what I have",
    "start": "4343400",
    "end": "4350960"
  },
  {
    "text": "which was only 10 minutes over so oh really we have a time",
    "start": "4350960",
    "end": "4356719"
  },
  {
    "text": "okay yeah um all the control of these settings I mean the negotiation is is by",
    "start": "4358080",
    "end": "4363960"
  },
  {
    "text": "RFC the choice of options to implement is the implementers choice and the",
    "start": "4363960",
    "end": "4369800"
  },
  {
    "text": "behavior when you do support an option is also by implementers choice but also by what other people uh do as well so",
    "start": "4369800",
    "end": "4377600"
  },
  {
    "text": "you have to establish interoperability Cisco iOS has been the primary reference",
    "start": "4377600",
    "end": "4382760"
  },
  {
    "text": "implementation if you will commercial reference implementation uh and that's partly why we jointly developed all of",
    "start": "4382760",
    "end": "4388840"
  },
  {
    "text": "this with Cisco so that we could guarantee interoperability with Cisco and and at the moment I believe Cisco is",
    "start": "4388840",
    "end": "4395679"
  },
  {
    "text": "the only product that we s that we guarantee I'll say interoperability but as you can imagine um vendors that have",
    "start": "4395679",
    "end": "4402760"
  },
  {
    "text": "a shorter ship cycle than Windows say iOS right which releases new versions of",
    "start": "4402760",
    "end": "4408840"
  },
  {
    "text": "iOS every two months or three months um they are continually evolving their support for options and they're",
    "start": "4408840",
    "end": "4415880"
  },
  {
    "text": "continually testing to make sure that they don't change the behavior that was established in say iOS",
    "start": "4415880",
    "end": "4421360"
  },
  {
    "text": "11.3 uh when they ship iOS 12.1 or 12.1.3 so in some",
    "start": "4421360",
    "end": "4427360"
  },
  {
    "text": "cases um say in the handling of that commit bid or the connected notify something like that they may",
    "start": "4427360",
    "end": "4434280"
  },
  {
    "text": "accidentally or on purpose change and then um interoperability will be",
    "start": "4434280",
    "end": "4439840"
  },
  {
    "text": "affected I'll I'll I'll give an example in uh wi 2K s in wi 2K",
    "start": "4439840",
    "end": "4446320"
  },
  {
    "text": "2195 we padded you remember the padding in uh in the IP ESP uh formats we padded",
    "start": "4446320",
    "end": "4453199"
  },
  {
    "text": "0 to seven bytes but we we accepted up to eight or nine bytes of padding if",
    "start": "4453199",
    "end": "4459320"
  },
  {
    "text": "somebody wanted to support that um in wi 2K sp1",
    "start": "4459320",
    "end": "4465199"
  },
  {
    "text": "we did a lot of work to make the the padding checks more secure and when we did that we only",
    "start": "4465199",
    "end": "4472080"
  },
  {
    "text": "accepted 0 to seven bytes of padding and it turned out that iOS when they needed zero bytes of padding they used eight",
    "start": "4472080",
    "end": "4478679"
  },
  {
    "text": "bytes of padding so we no longer accepted certain size packets of ESP um and that was",
    "start": "4478679",
    "end": "4486800"
  },
  {
    "text": "completely by accident and we didn't catch it before we Shi so sp1 will have some ESP padding ESP",
    "start": "4486800",
    "end": "4495080"
  },
  {
    "text": "packets be dropped as a result of it being padded 8 bytes as opposed to 07 um we quickly discovered this and uh",
    "start": "4495080",
    "end": "4503760"
  },
  {
    "text": "put out a qfe and now it's fixed in SP2 right for General Distribution so if you're doing Cisco iOS interop testing",
    "start": "4503760",
    "end": "4511480"
  },
  {
    "text": "um and you happen to see a few ESP packets are being dropped that's largely the reason and we have a qf available",
    "start": "4511480",
    "end": "4517360"
  },
  {
    "text": "for that but you know these These are these are tiny little things that you know one value changed one option",
    "start": "4517360",
    "end": "4524440"
  },
  {
    "text": "anywhere in the protocol uh can just cause a fairly Major",
    "start": "4524440",
    "end": "4530800"
  },
  {
    "text": "Impact ah good question I should give you a t-shirt I um I wanted to have",
    "start": "4533560",
    "end": "4539719"
  },
  {
    "text": "gifts to hand out and I didn't get that together MTU um basically what happens is the the stack is aware so MTU is",
    "start": "4539719",
    "end": "4548760"
  },
  {
    "text": "reported up to the application by by the TCP or UDP stacks for TCP applications",
    "start": "4548760",
    "end": "4554320"
  },
  {
    "text": "they'll reduce the interface MTU when they see they'll basically autogenerate an icmp internally within the stack and",
    "start": "4554320",
    "end": "4561480"
  },
  {
    "text": "it'll uh when they find out that the traffic is going to be IPC protected they'll autogenerate and reduce the MTL",
    "start": "4561480",
    "end": "4567280"
  },
  {
    "text": "uh reduce the MTU automatically so you will not fragment TCP",
    "start": "4567280",
    "end": "4573440"
  },
  {
    "text": "traffic it's handled internally within the stack when it recognizes packets or TCP packets are too big for the IPC",
    "start": "4573800",
    "end": "4581960"
  },
  {
    "text": "protection that will be applied to them they autogenerate and reduce the MTU and then the new packet is resent with the",
    "start": "4581960",
    "end": "4587679"
  },
  {
    "text": "right",
    "start": "4587679",
    "end": "4589840"
  },
  {
    "text": "MTU well it's it's handled via tcps okay um",
    "start": "4592760",
    "end": "4598920"
  },
  {
    "text": "TCP the the interface mtuu value from TCP that's that's basically where it's",
    "start": "4598920",
    "end": "4606679"
  },
  {
    "text": "handled it's basically TDI I mean technically all traffic that is",
    "start": "4606679",
    "end": "4613440"
  },
  {
    "text": "protected by an IPC to the host there may be TCP connections that are going to a host that are not IPC protected in",
    "start": "4613440",
    "end": "4619960"
  },
  {
    "text": "which case they would not have the MTU",
    "start": "4619960",
    "end": "4623400"
  },
  {
    "text": "reduction no it's um let me show you a stack diagram and then maybe um you can",
    "start": "4626800",
    "end": "4632440"
  },
  {
    "text": "understand so it's my turn right now yeah would you guys prefer to take a little bit of a break before we go on to",
    "start": "4632440",
    "end": "4638000"
  },
  {
    "text": "the next part or keep going okay let's do let's do five",
    "start": "4638000",
    "end": "4643639"
  },
  {
    "text": "minutes and that puts us back here at uh or 3 minutes whatever bathroom break we'll start at uh 5",
    "start": "4643639",
    "end": "4651280"
  },
  {
    "text": "till",
    "start": "4673840",
    "end": "4676840"
  },
  {
    "text": "e",
    "start": "4703760",
    "end": "4706760"
  },
  {
    "text": "e",
    "start": "4733719",
    "end": "4736719"
  },
  {
    "text": "e",
    "start": "4763719",
    "end": "4766719"
  },
  {
    "text": "e",
    "start": "4793639",
    "end": "4796639"
  },
  {
    "text": "e",
    "start": "4823639",
    "end": "4826639"
  },
  {
    "text": "e",
    "start": "4853639",
    "end": "4856639"
  },
  {
    "text": "e",
    "start": "4883560",
    "end": "4886560"
  },
  {
    "text": "e",
    "start": "4913520",
    "end": "4916520"
  },
  {
    "text": "e",
    "start": "4943520",
    "end": "4946520"
  },
  {
    "text": "e",
    "start": "4973440",
    "end": "4976440"
  },
  {
    "text": "e",
    "start": "5003440",
    "end": "5006440"
  },
  {
    "text": "e",
    "start": "5033440",
    "end": "5036440"
  },
  {
    "text": "e",
    "start": "5063320",
    "end": "5066320"
  },
  {
    "text": "e",
    "start": "5093320",
    "end": "5096320"
  },
  {
    "text": "e",
    "start": "5123320",
    "end": "5126320"
  },
  {
    "text": "e",
    "start": "5153239",
    "end": "5156239"
  },
  {
    "text": "e",
    "start": "5183239",
    "end": "5186239"
  },
  {
    "text": "e",
    "start": "5213239",
    "end": "5216239"
  },
  {
    "text": "e",
    "start": "5243119",
    "end": "5246119"
  },
  {
    "text": "e",
    "start": "5273119",
    "end": "5276119"
  },
  {
    "text": "e",
    "start": "5303119",
    "end": "5306119"
  },
  {
    "text": "e",
    "start": "5333040",
    "end": "5336040"
  },
  {
    "text": "e",
    "start": "5363040",
    "end": "5366040"
  },
  {
    "text": "e",
    "start": "5393040",
    "end": "5396040"
  },
  {
    "text": "e",
    "start": "5422960",
    "end": "5425960"
  },
  {
    "text": "e",
    "start": "5452920",
    "end": "5455920"
  },
  {
    "text": "e",
    "start": "5482920",
    "end": "5485920"
  },
  {
    "text": "e",
    "start": "5512840",
    "end": "5515840"
  },
  {
    "text": "e",
    "start": "5542840",
    "end": "5545840"
  },
  {
    "text": "e",
    "start": "5572840",
    "end": "5575840"
  },
  {
    "text": "e",
    "start": "5602760",
    "end": "5605760"
  },
  {
    "text": "e",
    "start": "5632719",
    "end": "5635719"
  },
  {
    "text": "e",
    "start": "5662719",
    "end": "5665719"
  },
  {
    "text": "e e",
    "start": "5692639",
    "end": "5696679"
  }
]