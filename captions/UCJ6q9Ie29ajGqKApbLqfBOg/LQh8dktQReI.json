[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "and without further Ado I would like to introduce this afternoon session deep learning on disassembly data please",
    "start": "520",
    "end": "7640"
  },
  {
    "text": "welcome Andrew Davis and Matt",
    "start": "7640",
    "end": "11559"
  },
  {
    "text": "wolf uh okay sorry thank you thank you uh so I'm Matt",
    "start": "12880",
    "end": "20359"
  },
  {
    "text": "wolf this is Andrew Davis uh we are part of the Daya science team at a company called",
    "start": "20359",
    "end": "26199"
  },
  {
    "start": "26000",
    "end": "65000"
  },
  {
    "text": "silence um if you're not familiar with the company at all uh basically the best description of her Highland just give",
    "start": "26199",
    "end": "32439"
  },
  {
    "text": "idea is it's the AI of Av so our work focuses on um applying machine learning",
    "start": "32439",
    "end": "40239"
  },
  {
    "text": "for the purpose of of mware classification um the research we're going to discuss",
    "start": "40239",
    "end": "47079"
  },
  {
    "text": "here um just a disclaimer is that uh the research we're we're going to show is is",
    "start": "47079",
    "end": "53199"
  },
  {
    "text": "different from what we have in our commercial product so for people who are familiar with silance I don't want you confused with this being commercial",
    "start": "53199",
    "end": "60320"
  },
  {
    "text": "product that we have so just to make that clear beforehand",
    "start": "60320",
    "end": "65519"
  },
  {
    "start": "65000",
    "end": "138000"
  },
  {
    "text": "um a little bit of fud because it's black cat so I want to scare everybody first um there's a lot of malware out",
    "start": "65520",
    "end": "72920"
  },
  {
    "text": "there so just from the Verizon report this year uh five malware events occur",
    "start": "72920",
    "end": "79159"
  },
  {
    "text": "every second uh 79% of these samples are unique to",
    "start": "79159",
    "end": "84520"
  },
  {
    "text": "organizations uh and signatures are dead so what this essentially means is that uh over the last decade or so the volume",
    "start": "84520",
    "end": "91840"
  },
  {
    "text": "of mware that's out there now uh continues to grow and that causes a problem because you just can't uh scale",
    "start": "91840",
    "end": "99399"
  },
  {
    "text": "in the traditional ways that we have before uh so in the old days uh well in the very old days you a Navy company",
    "start": "99399",
    "end": "106240"
  },
  {
    "text": "would write a signature and then fax it to people you know 20 30 years ago uh",
    "start": "106240",
    "end": "111479"
  },
  {
    "text": "and so technology has changed over time and now we have signature updates and some other techniques are being used uh",
    "start": "111479",
    "end": "116719"
  },
  {
    "text": "but the main problem is if you're going to have a human in the loop to evaluate mware fire you evaluate a file and you",
    "start": "116719",
    "end": "122039"
  },
  {
    "text": "know if it's mware um you just can't scale that up uh so our goal and part of this research uh we'll talk about that",
    "start": "122039",
    "end": "129679"
  },
  {
    "text": "is we want to find automated ways that can detect mware uh and do it quickly uh and",
    "start": "129679",
    "end": "138360"
  },
  {
    "start": "138000",
    "end": "223000"
  },
  {
    "text": "accurately uh for this talk just to give you a little bit of road map",
    "start": "138720",
    "end": "143840"
  },
  {
    "text": "uh as I mentioned earlier uh our focus is on artificial intelligence and machine learning uh so we're going to",
    "start": "143840",
    "end": "150200"
  },
  {
    "text": "give a brief overview of what that actually entails uh I know some of you uh work in areas of AI here uh in this",
    "start": "150200",
    "end": "157319"
  },
  {
    "text": "room right now so for you just sit tight uh we'll get some good stuff later uh but for for the rest of you we'll give",
    "start": "157319",
    "end": "162480"
  },
  {
    "text": "you overview what it is so you understand sort of the context of what's going on um then we'll talk about an",
    "start": "162480",
    "end": "168000"
  },
  {
    "text": "area This research is focused on which is deep learning which is a subset of machine learning that has uh sort of",
    "start": "168000",
    "end": "174280"
  },
  {
    "text": "grown in recent years to uh has shown State art uh Effectiveness in in very I",
    "start": "174280",
    "end": "180040"
  },
  {
    "text": "applications outside of security uh and most how we appli that into the security space here uh and then after that uh the",
    "start": "180040",
    "end": "186959"
  },
  {
    "text": "fun part is we're going to do a demo so we're going to go to the Internet uh download a bunch of brand new malware",
    "start": "186959",
    "end": "193560"
  },
  {
    "text": "that's been uploaded uh today uh to virus total and uh see how the model",
    "start": "193560",
    "end": "198720"
  },
  {
    "text": "does so you get an idea of the actual Effectiveness that these techniques would have uh in the real world right uh",
    "start": "198720",
    "end": "206080"
  },
  {
    "text": "and so with that I'll introduce my colleague Andrew Davis uh and he'll walk through uh the research he",
    "start": "206080",
    "end": "213159"
  },
  {
    "text": "done CL che check everybody hear me",
    "start": "213959",
    "end": "222400"
  },
  {
    "start": "223000",
    "end": "235000"
  },
  {
    "text": "great so could I get a showing of hands for the people who have been to the other machine learning talk Series so far just to sort of get an idea of how",
    "start": "223239",
    "end": "231239"
  },
  {
    "text": "much I should get into Okay cool so there's a good mix with the crowd who hasn't seen some of the stuff yet all",
    "start": "231239",
    "end": "236480"
  },
  {
    "start": "235000",
    "end": "279000"
  },
  {
    "text": "right so the basic idea we're trying to address is in advance telling if something is good or bad in other words",
    "start": "236480",
    "end": "242000"
  },
  {
    "text": "we Download a pdf we get something an email attachment or something like that and before we click on it we want to",
    "start": "242000",
    "end": "247480"
  },
  {
    "text": "know if this thing contains some sort of malicious code right so it turns out that telling good things from bad things",
    "start": "247480",
    "end": "252799"
  },
  {
    "text": "is a very classic application of pattern recognition or machine learning um a lot of other people like Google uses machine",
    "start": "252799",
    "end": "259919"
  },
  {
    "text": "learning to give you better search results Facebook is going to use really cool sophisticated algorithms to automatically tag faces and images so",
    "start": "259919",
    "end": "267400"
  },
  {
    "text": "there's a lot of uh good use of machine learning in industry so if we have these very large databases of malware right and we know what we're",
    "start": "267400",
    "end": "274400"
  },
  {
    "text": "looking at we know if it's good if it's bad why don't we put these things why don't we put these things to",
    "start": "274400",
    "end": "279639"
  },
  {
    "text": "work so for supervised learning we need four main ingredients right we need input data which in this case is going",
    "start": "279639",
    "end": "285840"
  },
  {
    "text": "to be a whole bunch of um let's say binaries things like that we need something called feature engineering",
    "start": "285840",
    "end": "291639"
  },
  {
    "text": "which is a way to sort of uh take this raw information these raw executables or whatever input data modality is then",
    "start": "291639",
    "end": "298000"
  },
  {
    "text": "sort of crunch it into something that the model understand then of course we need a predictive model model's job is",
    "start": "298000",
    "end": "303720"
  },
  {
    "text": "to look at a whole bunch of data and then learn how it can tell between good and bad then we also need Associated",
    "start": "303720",
    "end": "309160"
  },
  {
    "text": "labels so for every single input sample we need a way to tell the model that hey this thing is bad so you should try and",
    "start": "309160",
    "end": "315120"
  },
  {
    "text": "call it bad or hey this thing is good so you should try and call it",
    "start": "315120",
    "end": "320039"
  },
  {
    "start": "320000",
    "end": "373000"
  },
  {
    "text": "good so our input data modality can be a lot of things right in this talk we're",
    "start": "320680",
    "end": "325800"
  },
  {
    "text": "going to cover mostly executable code so we're going to use Windows pees in particular but it's not necessarily combined to",
    "start": "325800",
    "end": "331680"
  },
  {
    "text": "that you could also use maos so you know for OSX you could use Linux CFS there are all sorts of uh different executable",
    "start": "331680",
    "end": "338319"
  },
  {
    "text": "types you could train a model on you could also use these modeling techniques for documents right so you could see if",
    "start": "338319",
    "end": "344360"
  },
  {
    "text": "a Word document is trying to do something weird you could see if there's some malicious code in a PDF or you",
    "start": "344360",
    "end": "350199"
  },
  {
    "text": "could also see if uh Excel macro is trying to do something nasty in addition you could also use",
    "start": "350199",
    "end": "355800"
  },
  {
    "text": "scripts right so if you have a big scripts you have a big script data set of let's say python malware you could train a model that could hopefully do",
    "start": "355800",
    "end": "362280"
  },
  {
    "text": "well on python you could train a model on batch scripts zshell scripts Ruby scripts whatever you want basically as",
    "start": "362280",
    "end": "368479"
  },
  {
    "text": "long as you have enough input data you can probably train a pretty good model on",
    "start": "368479",
    "end": "373599"
  },
  {
    "start": "373000",
    "end": "401000"
  },
  {
    "text": "it so labels the label is going to tell the model what the sample is and in our",
    "start": "373759",
    "end": "378880"
  },
  {
    "text": "case it's going to be a very uh very granular just good versus bad decision right but if you wanted to do some",
    "start": "378880",
    "end": "384280"
  },
  {
    "text": "Advanced analytics you could also have labels like let's say you wanted to train a model to detect of something",
    "start": "384280",
    "end": "389639"
  },
  {
    "text": "Banker malware or not or train a model that you know it says okay this thing's probably a key logger you could um you",
    "start": "389639",
    "end": "395720"
  },
  {
    "text": "could train a model to do some more advanced analytics that",
    "start": "395720",
    "end": "399840"
  },
  {
    "start": "401000",
    "end": "759000"
  },
  {
    "text": "way so feature engineering feature engineering is vitally important to machine learning in other words the",
    "start": "401560",
    "end": "407039"
  },
  {
    "text": "model that you have is only going to be as good as your input features so as a motivating example",
    "start": "407039",
    "end": "412440"
  },
  {
    "text": "let's say we have a case where we're trying to break some new form of capture right so this capture is going to be 10 images you may have seen something like",
    "start": "412440",
    "end": "418879"
  },
  {
    "text": "this before each one is a cat or a dog and presumably if you're not a bot you have no idea what a cat or a dog is and",
    "start": "418879",
    "end": "425240"
  },
  {
    "text": "you're just going to choose randomly and the capture isn't going to let you submit your form or whatever you're trying to do so let's say we're trying",
    "start": "425240",
    "end": "432160"
  },
  {
    "text": "to break this thing right so what we would do is instead of dealing with the input image which may be very",
    "start": "432160",
    "end": "438080"
  },
  {
    "text": "complicated cats have a wide variety of looks dogs have a wide variety of looks what you would do instead is you would",
    "start": "438080",
    "end": "443400"
  },
  {
    "text": "write something to sort of uh break the problem into smaller chunks right so you'd have a thing that tells you okay",
    "start": "443400",
    "end": "449800"
  },
  {
    "text": "is this object that I'm looking at furry if so you know it's sort of a true or false thing or does this object have",
    "start": "449800",
    "end": "455680"
  },
  {
    "text": "floppy ears for example um or what is this object's approximate Mass so as you",
    "start": "455680",
    "end": "461840"
  },
  {
    "text": "can see none of these features are by themselves necessarily discriminative so if something's furry it could either be",
    "start": "461840",
    "end": "467360"
  },
  {
    "text": "you know a sphinx cat or that weird looking dog on the side there um floppy ears that's not necessarily completely",
    "start": "467360",
    "end": "474159"
  },
  {
    "text": "predictive as to whether or not it's a cat or a dog and same with mass so what the model would do is it would take these pieces of evidence and it would",
    "start": "474159",
    "end": "481080"
  },
  {
    "text": "find ways to sort of reason about it automatically so that it could tell you if the thing is a dog or a cat and then you could break the capture",
    "start": "481080",
    "end": "488840"
  },
  {
    "text": "algorithm so let's bring things home a bit and talk about the kinds of features that we would use for executables so",
    "start": "489440",
    "end": "495479"
  },
  {
    "text": "there are a number of um number of machine learning based approaches for detecting malware out there so maybe",
    "start": "495479",
    "end": "501560"
  },
  {
    "text": "what they would do is they would look at file size for example malare tries to fly under the radar so in a lot of situations it's very small um that's not",
    "start": "501560",
    "end": "509720"
  },
  {
    "text": "necessarily true in every single case you may have a very small file that's not doing anything malicious so again",
    "start": "509720",
    "end": "515320"
  },
  {
    "text": "these features aren't necessarily by themselves completely predictive you could also use strings so you could run",
    "start": "515320",
    "end": "521360"
  },
  {
    "text": "the you know Unix command strings against your file then extract out all the strings that you see and if the file",
    "start": "521360",
    "end": "527279"
  },
  {
    "text": "is doing something like including a bunch of B 64 encoded strings or it includes a whole bunch of gibberish",
    "start": "527279",
    "end": "532640"
  },
  {
    "text": "looking host names or things like that the uh sample may be trying to do something nasty to you we also have this",
    "start": "532640",
    "end": "538760"
  },
  {
    "text": "idea called inrs an Ingram is a way to turn a variable length thing into a",
    "start": "538760",
    "end": "543880"
  },
  {
    "text": "fixed length thing right so if we take the example cat cat is a variable length word right in this case we have a word",
    "start": "543880",
    "end": "550360"
  },
  {
    "text": "that's three letters long and in the case of a one gr we're going to turn it into 26 dimensional Vector in other",
    "start": "550360",
    "end": "556320"
  },
  {
    "text": "words we have something with 26 bins and for that particular word we turn on the C bin the a bin and the T bin and",
    "start": "556320",
    "end": "562880"
  },
  {
    "text": "everything else is zero you can also have two gs so instead of a vector you would have a matrix of things and you",
    "start": "562880",
    "end": "568560"
  },
  {
    "text": "would light up the C b as well as the at bin so unfortunately in GRS tend to",
    "start": "568560",
    "end": "574160"
  },
  {
    "text": "scale exponentially so if you have a 2 G you need 26 squared storage if you have a three G you need 26 cubed and it just",
    "start": "574160",
    "end": "581200"
  },
  {
    "text": "gets worse and worse so inrs kind of become prohibitive as you start increasing in up to numbers like n or 10",
    "start": "581200",
    "end": "587079"
  },
  {
    "text": "you could also use entropy of sections so you would look at all your sections if a section has very high entropy that",
    "start": "587079",
    "end": "593480"
  },
  {
    "text": "means it probably doesn't contain much executable code it's probably packed or something like that and again being",
    "start": "593480",
    "end": "598519"
  },
  {
    "text": "packed isn't NE necessarily indicative of whether or not it's doing something bad but with the other evidence like",
    "start": "598519",
    "end": "604680"
  },
  {
    "text": "what the file size is and what kind of strings it contains your model could learn how to discriminate between good and bad",
    "start": "604680",
    "end": "611760"
  },
  {
    "text": "samples so what is the model doing then the model is going to take something in your feature space in other words the",
    "start": "611760",
    "end": "617959"
  },
  {
    "text": "thing that you've engineered the binary to go into and it's going to try and draw a line between the good samples and",
    "start": "617959",
    "end": "623560"
  },
  {
    "text": "the bad samples so the whole goal of feature engineering is to come up with a way that you can make all your bad stuff",
    "start": "623560",
    "end": "629160"
  },
  {
    "text": "go go to this side in your feature space and make all the good stuff go to this side in your feature space what the model is going to do is it's going to",
    "start": "629160",
    "end": "634959"
  },
  {
    "text": "try and learn this dividing line between your good stuff and bad stuff so there are a lot of models out there the most",
    "start": "634959",
    "end": "640160"
  },
  {
    "text": "simple one I can think of is naive Bay you may have seen naive Bay an application to email spam email spam",
    "start": "640160",
    "end": "646560"
  },
  {
    "text": "detection what naive Bas does is it assumes that every single one of your features are completely independent and",
    "start": "646560",
    "end": "652480"
  },
  {
    "text": "it's a very small easy to train model you could maybe put a naive Bas classifier on a really uh really low",
    "start": "652480",
    "end": "660000"
  },
  {
    "text": "powered network switch to you know filter out spam emails stuff like that then you have models that get more",
    "start": "660000",
    "end": "665519"
  },
  {
    "text": "complex right you can have your more Workhorse models like random Forest K nearest neighbors logistic aggression",
    "start": "665519",
    "end": "671519"
  },
  {
    "text": "support Vector machines these are sort of off-the-shelf models that work well in a lot of General cases and if you",
    "start": "671519",
    "end": "678040"
  },
  {
    "text": "they they kind of perform a good Baseline of performance right so you take your data run it through one of these Workhorse models and you can sort",
    "start": "678040",
    "end": "683760"
  },
  {
    "text": "of get an idea of how well your model can do then we have more complex models which is going to be the subject this",
    "start": "683760",
    "end": "689680"
  },
  {
    "text": "talk they're called neural networks neural networks are nice because you can sort of tune the complexity of the model",
    "start": "689680",
    "end": "694839"
  },
  {
    "text": "right you can make it learn really really cool things and I'll show you some neat demos of deep neural networks",
    "start": "694839",
    "end": "700279"
  },
  {
    "text": "doing interesting things so as I was saying the whole point of the model is to learn sort of a",
    "start": "700279",
    "end": "706959"
  },
  {
    "text": "separating region between the good stuff and the bad stuff or whatever you're trying to classify so to do this you",
    "start": "706959",
    "end": "712079"
  },
  {
    "text": "have to train the model so the line may start off see if I can get the laser point cor",
    "start": "712079",
    "end": "719560"
  },
  {
    "text": "suppose it's not showing up on there pretty well okay I so M it so the",
    "start": "719560",
    "end": "724839"
  },
  {
    "text": "decision boundary may start off being something like this and then over time as it starts to look at more samples the",
    "start": "724839",
    "end": "730160"
  },
  {
    "text": "decision boundary will sort of figure out how to best move that line around so that it can divide between good and bad",
    "start": "730160",
    "end": "736720"
  },
  {
    "text": "so the whole purpose with this is to generalize to new samples right if the model can only tell us things that it",
    "start": "736720",
    "end": "742199"
  },
  {
    "text": "knows about samples it's seen already that's not very useful we already have that that's signatures right so the",
    "start": "742199",
    "end": "747240"
  },
  {
    "text": "whole point is to generalize to unseen samples so when you feed in a completely new novel piece of malware if you have a",
    "start": "747240",
    "end": "753519"
  },
  {
    "text": "good enough model it's going to be able to tell you straight away whether it's good or",
    "start": "753519",
    "end": "758760"
  },
  {
    "start": "759000",
    "end": "854000"
  },
  {
    "text": "bad so I cooked up some uh some animations for you what we're seeing here is a model called logistic",
    "start": "760360",
    "end": "765680"
  },
  {
    "text": "regression logistic regression is going to have the assumption that in whatever feature space you're operating in your",
    "start": "765680",
    "end": "771000"
  },
  {
    "text": "data is linearly separable and if it's not linearly separable then this line that it draws isn't going to perfectly",
    "start": "771000",
    "end": "776839"
  },
  {
    "text": "discriminate things but you know in a lot of cases you can get some reasonable accuracy out of it so as I was saying",
    "start": "776839",
    "end": "783000"
  },
  {
    "text": "before the initial condition sort of draws the line you know horizontally instead of vertically and this",
    "start": "783000",
    "end": "789199"
  },
  {
    "text": "particular model is being trained with something called stochastic gradient descent or in this case it's just gradient descent because I'm using all",
    "start": "789199",
    "end": "794639"
  },
  {
    "text": "the samples and every single time the line moves a little bit it's because the model has said okay here are all my",
    "start": "794639",
    "end": "800519"
  },
  {
    "text": "errors and here's how I should move the line so that I better classify things on the next iteration and it does this",
    "start": "800519",
    "end": "806360"
  },
  {
    "text": "again and again and again until it finally look until it settles into a local Optimum in other words the",
    "start": "806360",
    "end": "811440"
  },
  {
    "text": "performance where the model is going to be the best in the weight space or in the parameter space and when it finally gets there it's discriminating these red",
    "start": "811440",
    "end": "818120"
  },
  {
    "text": "and blue classes with about an accuracy of 99% however there are some failure modes",
    "start": "818120",
    "end": "825519"
  },
  {
    "text": "right like I was saying feature engineering is vitally important and for a model like logistic aggression if your features aren't linearly separable in",
    "start": "825519",
    "end": "832440"
  },
  {
    "text": "other words they're non linearly separable in this example it's not going to do as well right so as you can see",
    "start": "832440",
    "end": "837839"
  },
  {
    "text": "from this toy problem there's no dividing line that you can come up with that'll perfectly separate those two",
    "start": "837839",
    "end": "843040"
  },
  {
    "text": "classes you know you could have maybe something curved but logistic regression isn't going to give you a curve so you",
    "start": "843040",
    "end": "849199"
  },
  {
    "text": "can see it has sort of a middling accuracy of like 88.6% so what we're going to do is we're",
    "start": "849199",
    "end": "856120"
  },
  {
    "text": "going to give it a more complicated model and as this animation goes on I'll sort of explain what's going on so the",
    "start": "856120",
    "end": "861800"
  },
  {
    "text": "neural network has the ability to sort of twist around and contort the original feature space so that it is linearly",
    "start": "861800",
    "end": "867560"
  },
  {
    "text": "separable in higher parts of the model that's not to say that no other models can do this things like support Vector",
    "start": "867560",
    "end": "872959"
  },
  {
    "text": "machines and random Forest definitely do come up with nonlinear decision boundaries but you know this is still a really cool visualization because you",
    "start": "872959",
    "end": "879240"
  },
  {
    "text": "can see exactly how it's sort of sliding the space around in a way that it packs all the red stuff over here and all the",
    "start": "879240",
    "end": "886040"
  },
  {
    "text": "blue stuff you know sort of goes to the corners of the feature space it's pretty cool to see so when the model gets to",
    "start": "886040",
    "end": "892839"
  },
  {
    "text": "the point of logistic progression in other words it says okay I found something that sort of you know mostly separates red and blue it's going to say",
    "start": "892839",
    "end": "899720"
  },
  {
    "text": "okay if I start bending the decision boundary down then I can perform better and you can see this one's getting 100%",
    "start": "899720",
    "end": "906480"
  },
  {
    "text": "accuracy hoay it's doing the job",
    "start": "906480",
    "end": "910600"
  },
  {
    "start": "914000",
    "end": "1068000"
  },
  {
    "text": "perfectly so unfortunately fature engineering as important it is is very very",
    "start": "914720",
    "end": "921880"
  },
  {
    "text": "hard excuse me you need you need people",
    "start": "921880",
    "end": "927680"
  },
  {
    "text": "who excuse ex me you need people who really know what they're doing so you need people with a very long history in",
    "start": "927680",
    "end": "933959"
  },
  {
    "text": "reverse engineering you need people who know the file formats inside and out you need to know all sorts of things to do",
    "start": "933959",
    "end": "939680"
  },
  {
    "text": "feature engineering well there's also this really fragile interplay between implementing the features in a way",
    "start": "939680",
    "end": "946240"
  },
  {
    "text": "that's you know bug free so it's a very fragile process so maybe we should ask ourselves",
    "start": "946240",
    "end": "951480"
  },
  {
    "text": "if there are ways around feature Engineering in other words some magical algorithm that we just dump data into and it gives us get output predictions",
    "start": "951480",
    "end": "958519"
  },
  {
    "text": "so other ways around feature engineering yeah I would say so if you have a whole lot of data and you have a whole lot of",
    "start": "958519",
    "end": "964839"
  },
  {
    "text": "computing power and you take advantage of these advances in deep learning or representation learning algorithms you",
    "start": "964839",
    "end": "970519"
  },
  {
    "text": "can usually do quite well so that I'm going to get into deep",
    "start": "970519",
    "end": "975639"
  },
  {
    "text": "learning like I said I'm not going to Ambush you with the math straight away I'm going to give you a whole bunch of really cool motivating examples to maybe",
    "start": "975639",
    "end": "982399"
  },
  {
    "text": "convince you that deep learning is a complex model that you know will apply well in the field of uh our detection",
    "start": "982399",
    "end": "990920"
  },
  {
    "text": "so this is sort of the turnaround point for neural networks this was a thing that happened in 2010 it was the first",
    "start": "991600",
    "end": "996680"
  },
  {
    "text": "case of neural networks sort of working much much much better than the sort of existing Solutions in computer vision so",
    "start": "996680",
    "end": "1003920"
  },
  {
    "text": "hopefully you can see the labels well enough here um it's correctly classifying things like mites and",
    "start": "1003920",
    "end": "1009040"
  },
  {
    "text": "container ships and motor scooters and leopards in fact with this challenge there are 1,000 output classes so the",
    "start": "1009040",
    "end": "1014399"
  },
  {
    "text": "things that it needs to be able to you know say what it is is very wide and very",
    "start": "1014399",
    "end": "1020839"
  },
  {
    "text": "so what's really cool about this is that when it outputs something like might it",
    "start": "1020839",
    "end": "1026438"
  },
  {
    "text": "also has a couple of additional outputs so these models are these models are evaluated on how well they guess this",
    "start": "1026439",
    "end": "1032880"
  },
  {
    "text": "top five accuracy so as long as the correct label is in the top five output predictions it counts it as correct so",
    "start": "1032880",
    "end": "1038959"
  },
  {
    "text": "when it outputs something like might you can see that it the the other labels are very related right we have black widow",
    "start": "1038959",
    "end": "1044839"
  },
  {
    "text": "we have cockroach we have tick the exception of starfish everything is pretty closely related so in a sense",
    "start": "1044839",
    "end": "1050200"
  },
  {
    "text": "this model may be learning something about the world right it's saying that mites are very similar to these other buggy things container ships are very",
    "start": "1050200",
    "end": "1056559"
  },
  {
    "text": "similar to lifeboats and amphibians motor scooters are kind of like go-karts and mopeds and it's doing this",
    "start": "1056559",
    "end": "1061760"
  },
  {
    "text": "completely on its own all it has are input pixels and then the output labels is what it's learning",
    "start": "1061760",
    "end": "1068399"
  },
  {
    "start": "1068000",
    "end": "1118000"
  },
  {
    "text": "from so the next evolution of this was automatic captioning this work has only been going on for about a year or so um",
    "start": "1068679",
    "end": "1075039"
  },
  {
    "text": "and the idea with automatic captioning is there's this huge data set of in put images and then the labels for these",
    "start": "1075039",
    "end": "1080720"
  },
  {
    "text": "images aren't the object you're looking at the labels are a human human-made I",
    "start": "1080720",
    "end": "1086240"
  },
  {
    "text": "guess annotation of the image the idea of the model is you're training it to look at an input image and replicate the",
    "start": "1086240",
    "end": "1092720"
  },
  {
    "text": "caption that a human gave it so you can see examples like man in Black is playing a guitar or construction worker",
    "start": "1092720",
    "end": "1098679"
  },
  {
    "text": "in Orange safety vest is working on a road the really cool thing to point out about this is that this model has never",
    "start": "1098679",
    "end": "1104280"
  },
  {
    "text": "seen these images before it's the very first time it's seen a construction worker in an orange safety vest working on a road and it's all putting the",
    "start": "1104280",
    "end": "1110360"
  },
  {
    "text": "correct thing there are some kind of weird ones like a boy is doing a backflip on a wakeboard yeah he's doing a backflip but it's not on a",
    "start": "1110360",
    "end": "1117960"
  },
  {
    "text": "wakeboard of course there are some uh there are some failure modes of these models so a cat is sitting on a couch",
    "start": "1117960",
    "end": "1123120"
  },
  {
    "start": "1118000",
    "end": "1144000"
  },
  {
    "text": "with a remote control that kind of looks like a rat to Me Maybe close enough a woman holding a teddy bear in front of a",
    "start": "1123120",
    "end": "1129000"
  },
  {
    "text": "mirror I don't see any teddy bears I don't see any mirrors so I have no idea why it's coming up with this then my favorite one is a horse is standing in",
    "start": "1129000",
    "end": "1135039"
  },
  {
    "text": "the middle of a road there's no horse whatsoever this model's just getting it dead wrong so clearly there's some uh there's some",
    "start": "1135039",
    "end": "1141919"
  },
  {
    "text": "room to uh to grow with these models another really cool thing is a",
    "start": "1141919",
    "end": "1147360"
  },
  {
    "start": "1144000",
    "end": "1194000"
  },
  {
    "text": "recurrent neural network it's a special deep Network that has recurrent connections so it can model time series data and it's supplied to the objective",
    "start": "1147360",
    "end": "1154919"
  },
  {
    "text": "of language modeling so with language modeling you're going to look at the last let's say 10 or so characters you're going to see some history of",
    "start": "1154919",
    "end": "1160760"
  },
  {
    "text": "characters the objective of the model is to Output the next character that it's likely to be so you dump a whole bunch",
    "start": "1160760",
    "end": "1167400"
  },
  {
    "text": "of Shakespeare into this model mod and it completely memorizes things like character names panderas second Senator",
    "start": "1167400",
    "end": "1173039"
  },
  {
    "text": "Duke Veno and it's also coming up with things that are very structurally Shakespearean right so words like strain",
    "start": "1173039",
    "end": "1178799"
  },
  {
    "text": "words like attainted um so it's it's really interesting to see it sort of mimicking Shakespeare of course like on",
    "start": "1178799",
    "end": "1184600"
  },
  {
    "text": "a local level it's you know looking a lot like Shakespeare but on a global level it's not really coming up with an",
    "start": "1184600",
    "end": "1190320"
  },
  {
    "text": "overall story of the play it's just outputting Shakespeare and giberish another kind of funny one is",
    "start": "1190320",
    "end": "1196200"
  },
  {
    "start": "1194000",
    "end": "1259000"
  },
  {
    "text": "Paul Graham blog posts you can see it's a lot about Angel Investors startups things like that these models are",
    "start": "1196200",
    "end": "1202480"
  },
  {
    "text": "actually stochastic there's a bit of Randomness to them so you can sort of make them output more predictable things",
    "start": "1202480",
    "end": "1208440"
  },
  {
    "text": "by changing how it samples anyways so the funny thing about the Paul Grand blog post is if you make the model super",
    "start": "1208440",
    "end": "1214320"
  },
  {
    "text": "deterministic it gets stuck in this Loop of talking about startups I think it says something like about the startup about the startup about the startup it",
    "start": "1214320",
    "end": "1220880"
  },
  {
    "text": "just turns into a broken record and the final one is deep neural",
    "start": "1220880",
    "end": "1226000"
  },
  {
    "text": "networks trained on Linux kernel source so in this case you can see that it's doing a very good job of balancing curly",
    "start": "1226000",
    "end": "1231559"
  },
  {
    "text": "braces balancing parentheses it's um you know it it knows what pointer D",
    "start": "1231559",
    "end": "1237120"
  },
  {
    "text": "referencing is it knows about structs uh there's kind of a funny thing where it's returning zero in a static void but you",
    "start": "1237120",
    "end": "1243240"
  },
  {
    "text": "know we can cut the model a little bit of slack it's again this is gibberish the if you tried to compile this nothing",
    "start": "1243240",
    "end": "1248679"
  },
  {
    "text": "would happen most likely but it's really cool to see that it can output C like if you were just to hand me these functions",
    "start": "1248679",
    "end": "1254799"
  },
  {
    "text": "I would totally be fooled and think it's some lowle C code",
    "start": "1254799",
    "end": "1259919"
  },
  {
    "start": "1259000",
    "end": "1415000"
  },
  {
    "text": "so now that I've shown you that I'm going to introduce what's going on sort of mathematically in a deep neural network when you go from an input Vector",
    "start": "1260600",
    "end": "1266600"
  },
  {
    "text": "to an output label so what I have on the left side here is a set of input features so the top node is going to be",
    "start": "1266600",
    "end": "1273600"
  },
  {
    "text": "file size next note is going to be section one entropy let's say section two entropy section three entropy then",
    "start": "1273600",
    "end": "1279159"
  },
  {
    "text": "we have a whole bunch of other features which I haven't listed then we have a final feature like you know is packed with upx or something like that what",
    "start": "1279159",
    "end": "1286520"
  },
  {
    "text": "we're going to do is we're going to to encode that as a vector and we're going to do a matrix Vector multiplication on",
    "start": "1286520",
    "end": "1293039"
  },
  {
    "text": "it right so that turns a vector into another Vector then we're going to apply a nonlinearity in other words just some",
    "start": "1293039",
    "end": "1299159"
  },
  {
    "text": "function to every single one of those outputs and then we're going to do that again with the previous hidden layer",
    "start": "1299159",
    "end": "1305520"
  },
  {
    "text": "into another weight Matrix we're going to apply this process again and again until we finally get to the output layer",
    "start": "1305520",
    "end": "1310640"
  },
  {
    "text": "so you can sort of think of it as just a whole bunch of um repetitive operations of matrix multiplication and",
    "start": "1310640",
    "end": "1315880"
  },
  {
    "text": "nonlinearities and this actually comes with a really powerful",
    "start": "1315880",
    "end": "1321480"
  },
  {
    "text": "model another thing that we unfortunately have to go through is the idea of convolution so all these really",
    "start": "1321960",
    "end": "1328080"
  },
  {
    "text": "cool image recognition algorithms use something called convolutional neural networks so here I'm showing you a fully",
    "start": "1328080",
    "end": "1333320"
  },
  {
    "text": "connected Network so no matter how we sort of permute these inputs it's going to have the same meaning right it",
    "start": "1333320",
    "end": "1338919"
  },
  {
    "text": "doesn't matter if the file size comes first or the file size comes second we can sort of Shuffle these things around",
    "start": "1338919",
    "end": "1344440"
  },
  {
    "text": "however with image data if you were to shuffle the pixels around you lose the meaning of what's the image entirely",
    "start": "1344440",
    "end": "1350240"
  },
  {
    "text": "right um so what we do to deal with this is we instead of using Matrix Matrix",
    "start": "1350240",
    "end": "1356480"
  },
  {
    "text": "multiplications in each layer we use convolutions a convolution basically is",
    "start": "1356480",
    "end": "1361520"
  },
  {
    "text": "going to be taking an input image and then you have something called a convolutional kernel that sort of steps over it so every single row and every",
    "start": "1361520",
    "end": "1368480"
  },
  {
    "text": "single column will have this convolution filter applied to it and so what it's doing you know mathematically is it's",
    "start": "1368480",
    "end": "1375320"
  },
  {
    "text": "taking and since my laser pointer isn't here I'll Mouse over it we're going to have an input image here",
    "start": "1375320",
    "end": "1381279"
  },
  {
    "text": "and we're going to have our convolution kernel here and every single overlapping pixel so this zero to this four we're",
    "start": "1381279",
    "end": "1387080"
  },
  {
    "text": "going to multiply together so we do 0 * 4 then 0 * 0 and 0 * 0 0 * 0 again 1 * 0",
    "start": "1387080",
    "end": "1394559"
  },
  {
    "text": "again 1 * one so on and so forth until we get to all the overlapping pixels then we're going to add all those",
    "start": "1394559",
    "end": "1402159"
  },
  {
    "text": "up and the filter response for that particular pixel is going to be ne8 so we copy that over to our output image",
    "start": "1402159",
    "end": "1408520"
  },
  {
    "text": "we're going to do it again for this pixel again for this pixel again for this pixel until we've stepped through the entire input",
    "start": "1408520",
    "end": "1415200"
  },
  {
    "start": "1415000",
    "end": "1463000"
  },
  {
    "text": "image so what are these convolutions doing exactly well it's a really General operation you can use them for Edge",
    "start": "1415520",
    "end": "1421400"
  },
  {
    "text": "detection so in this case we have convolution kernel that's going to look at a top pixel a bottom pixel a left",
    "start": "1421400",
    "end": "1426880"
  },
  {
    "text": "pixel and a right pixel that's going to be a weight of four right 1 plus 1 plus 1 plus 1 and you're going to subtract",
    "start": "1426880",
    "end": "1432679"
  },
  {
    "text": "out the center pixel with the same weight4 what you get is sort of like a rising falling Edge an idea of for the",
    "start": "1432679",
    "end": "1438760"
  },
  {
    "text": "edges line the image so if you're trying to do a classifier that let's say distinguishes between men and women you",
    "start": "1438760",
    "end": "1443960"
  },
  {
    "text": "could maybe use the edge filter to come up with uh useful features like I said",
    "start": "1443960",
    "end": "1449080"
  },
  {
    "text": "it's a really General operation you can also use it for blurring so in this blurring example we have um all you're",
    "start": "1449080",
    "end": "1455960"
  },
  {
    "text": "doing is you're just taking the average of the neighborhood of pixels and this says the effects when you look at the image of blurring things",
    "start": "1455960",
    "end": "1462960"
  },
  {
    "text": "out so how do we use these in neural networks so what we're going to do with the neural network is we're going to",
    "start": "1462960",
    "end": "1469399"
  },
  {
    "start": "1463000",
    "end": "1597000"
  },
  {
    "text": "have instead of weight matrices we're going to have these convolution kernels",
    "start": "1469399",
    "end": "1474720"
  },
  {
    "text": "and the convolution kernels are going to be completely learn from the data we're going to have convolutions followed by",
    "start": "1474720",
    "end": "1479799"
  },
  {
    "text": "the element wise nonlinearity I was talking about we do this a few times then we have something called a pooling",
    "start": "1479799",
    "end": "1485039"
  },
  {
    "text": "layer the objective of the pooling layer is to look at a whole bunch of let's say 2 by two neighborhoods of pixels and do",
    "start": "1485039",
    "end": "1491679"
  },
  {
    "text": "something like look at the maximum pixel for all of them so in that case you can turn a 64x 64 image into a 32x 3 image",
    "start": "1491679",
    "end": "1499240"
  },
  {
    "text": "and that has the effect of sort of reducing the dimensionality without hopefully throwing away too much interesting data and you do this again",
    "start": "1499240",
    "end": "1505679"
  },
  {
    "text": "and again until you get to the output layer and then if the convolution filters have been learned well and the",
    "start": "1505679",
    "end": "1510840"
  },
  {
    "text": "fully connected layer has been learned well then I can tell you the difference between cars and trucks and airplanes and ships and",
    "start": "1510840",
    "end": "1517158"
  },
  {
    "text": "horses so what are how how do we interpret these models right so what I'm showing you here is the first hi layer",
    "start": "1517480",
    "end": "1524080"
  },
  {
    "text": "in other words the first set of filter responses what you can see it's doing is it's sort of figuring out you know the",
    "start": "1524080",
    "end": "1529120"
  },
  {
    "text": "light parts of the image the dark parts of the image it may be coming up with Edge detectors things like that then as",
    "start": "1529120",
    "end": "1535679"
  },
  {
    "text": "we run it through the rest of the model what you tend to see is it starts picking up objects right so instead of",
    "start": "1535679",
    "end": "1541200"
  },
  {
    "text": "just considering the light parts of the image and the dark parts of the image it maybe combining that information together into you know sort of like what",
    "start": "1541200",
    "end": "1547760"
  },
  {
    "text": "does a wheel look like or what does a windshield look like or what does a trunk look like it's combining all this",
    "start": "1547760",
    "end": "1552840"
  },
  {
    "text": "stuff together to come up with a model that can tell the difference between a car and a horse",
    "start": "1552840",
    "end": "1558640"
  },
  {
    "text": "so what I'm showing here is the final output layer so we're basically taking I want to say these and then just",
    "start": "1558640",
    "end": "1567000"
  },
  {
    "text": "overlaying them on the car image what you see is you see it's picking up really highly right here so this may be",
    "start": "1567000",
    "end": "1573840"
  },
  {
    "text": "you know a filter that's really sensitive to detecting windows and cars maybe that's what its job is then you",
    "start": "1573840",
    "end": "1578919"
  },
  {
    "text": "have other things that seem to be looking at the car at a as a whole you have this one here that looks like it's looking at a headlight and Grill so it's",
    "start": "1578919",
    "end": "1584919"
  },
  {
    "text": "combining all this information together to come up with something that can you know describe between a car and something",
    "start": "1584919",
    "end": "1591080"
  },
  {
    "text": "else so how do we use all this stuff for malware detection I'm going to describe our",
    "start": "1591080",
    "end": "1596880"
  },
  {
    "text": "model so what we're going to do is we're going to disassemble a PE we're going to",
    "start": "1596880",
    "end": "1602679"
  },
  {
    "start": "1597000",
    "end": "2111000"
  },
  {
    "text": "turn it into a list of instructions right so we're going to have human readable pneumonics and then we're going",
    "start": "1602679",
    "end": "1608399"
  },
  {
    "text": "to turn it into just the heximal encoding right this hexal encoding has a binary representation that's all we're",
    "start": "1608399",
    "end": "1615120"
  },
  {
    "text": "doing here so I take this 55 the thing that corresponds to the push RVP and we're going to just put its binary",
    "start": "1615120",
    "end": "1621159"
  },
  {
    "text": "information down here so this is going to be the binary representation of 55 we're padding this out to 8 bytes",
    "start": "1621159",
    "end": "1627120"
  },
  {
    "text": "because x86 instructions a variable length this one's 53 so you can see it's only differing by one bit this is the",
    "start": "1627120",
    "end": "1634320"
  },
  {
    "text": "4889 FD we're just going to do this to every single instruction until we have an image that is 64 pixels wide in other",
    "start": "1634320",
    "end": "1641760"
  },
  {
    "text": "words 64 bits the number of bits in the instruction and it's going to be however many instructions we have in the",
    "start": "1641760",
    "end": "1647000"
  },
  {
    "text": "executable d right so that's how tall the image is going to be then all we're going to do is we're",
    "start": "1647000",
    "end": "1652880"
  },
  {
    "text": "going to take these image ALG image recognition algorithms that work really well with object recognition and apply",
    "start": "1652880",
    "end": "1658200"
  },
  {
    "text": "them directly to malware detection so we're going to have a big data set of Windows pees we have in advance we know",
    "start": "1658200",
    "end": "1665200"
  },
  {
    "text": "which ones are good and which ones are bad we're going to turn them into these sorts of images then we're going to throw it through a model see what it",
    "start": "1665200",
    "end": "1671000"
  },
  {
    "text": "says about it then we'll be done so you can see sort of the spatial structure in the instructions you can see sort of",
    "start": "1671000",
    "end": "1678760"
  },
  {
    "text": "repeating sets they they kind of remind me of uh as a Steven wolf from um cellular alom if you've ever seen those",
    "start": "1678760",
    "end": "1686279"
  },
  {
    "text": "they're sort of um they get a little noisy sometimes but there's still definitely these patterns in the chaos",
    "start": "1686279",
    "end": "1694120"
  },
  {
    "text": "right so the one unfortunate thing about this model and the thing that we had to figure out was the fact that with the",
    "start": "1694600",
    "end": "1700960"
  },
  {
    "text": "object recognition algorithms they always take in a fixed image size so if you have a 512x 512 image and you want",
    "start": "1700960",
    "end": "1706640"
  },
  {
    "text": "to classify it and your net only works with 64x 64 images you have to take your",
    "start": "1706640",
    "end": "1712159"
  },
  {
    "text": "input image of 512 x 512 squeeze it down to the siid it needs to be and then you feed that into the algorithm as far as I",
    "start": "1712159",
    "end": "1718159"
  },
  {
    "text": "know there's no way for there's no compression thing you can do directly to pees that make sense right you could",
    "start": "1718159",
    "end": "1724360"
  },
  {
    "text": "maybe truncate instructions Pat it out to some maximal length that's going to waste a lot of memory so what we do",
    "start": "1724360",
    "end": "1730039"
  },
  {
    "text": "instead is we have this idea of sort of only feeding what the model thinks is",
    "start": "1730039",
    "end": "1735240"
  },
  {
    "text": "important to the final fully connected layer so in this case the model sort of learns which instructions it needs to",
    "start": "1735240",
    "end": "1741519"
  },
  {
    "text": "consider to call something good or bad and what I've done here is I've sort of visualized it so we have red being the",
    "start": "1741519",
    "end": "1747760"
  },
  {
    "text": "sequences of instructions that the model thinks are important and then white are the sequences that aren't important",
    "start": "1747760",
    "end": "1753720"
  },
  {
    "text": "unfortunately I haven't done a lot of data sciencing on these images I think it could be really useful to reverse Engineers it could maybe give them you",
    "start": "1753720",
    "end": "1760200"
  },
  {
    "text": "know sort of uh first point to look at in the uh in the executable or something like",
    "start": "1760200",
    "end": "1767000"
  },
  {
    "text": "that so for future work static disassembly is really problematic right it's a very heris thing there's no way",
    "start": "1767039",
    "end": "1773519"
  },
  {
    "text": "that you can step through an executable and extract out every single instruction right there are going to be some things",
    "start": "1773519",
    "end": "1778679"
  },
  {
    "text": "that you jump into conditionally and it may not grab that so how are we going to",
    "start": "1778679",
    "end": "1783720"
  },
  {
    "text": "extract out all the executable code that we can it's a difficult problem another difficult thing is that",
    "start": "1783720",
    "end": "1789679"
  },
  {
    "text": "information can be buried elsewhere in the executable you can have packed examples um you can have upus skated",
    "start": "1789679",
    "end": "1796159"
  },
  {
    "text": "examples so we need to come up with to deal with this right because the model that's just working on the disassembly",
    "start": "1796159",
    "end": "1801600"
  },
  {
    "text": "data is going to have no visibility into the packed part of the executable that said there may be regularities and",
    "start": "1801600",
    "end": "1807840"
  },
  {
    "text": "malware so the malware may be doing something that makes a reverse engineer have to try really hard to unpack a",
    "start": "1807840",
    "end": "1813240"
  },
  {
    "text": "sample and that information may give you all you need to call something good or bad also this code or this model only",
    "start": "1813240",
    "end": "1820919"
  },
  {
    "text": "really applies to ex executable code so it would be really cool to come up with ways to apply this to scripts um I think",
    "start": "1820919",
    "end": "1828039"
  },
  {
    "text": "would be also be interesting to start applying this model to code running in VMS so we could almost immediately start",
    "start": "1828039",
    "end": "1833840"
  },
  {
    "text": "applying this model to Java we could start applying it to C's intermediate",
    "start": "1833840",
    "end": "1839080"
  },
  {
    "text": "representation um and as long as you add enough input samples this approach could probably work pretty well another",
    "start": "1839080",
    "end": "1845159"
  },
  {
    "text": "interesting thing I'd like to look into is the question of whether or not training on raw bytes is this tractable",
    "start": "1845159",
    "end": "1850679"
  },
  {
    "text": "right because if we have disassembly data you may take like a 20 megab PE it has a whole bunch of images or something",
    "start": "1850679",
    "end": "1857480"
  },
  {
    "text": "like that on and when you disassemble it you may wind up with you know several hundred kiloby",
    "start": "1857480",
    "end": "1862840"
  },
  {
    "text": "of disassembly information so for the disassembly model it's going to be very small and very Compact and easy to train",
    "start": "1862840",
    "end": "1868760"
  },
  {
    "text": "but if you're training on Raw bites it get more it it gets much more difficult right because you have to consider every single bite and that can be very very",
    "start": "1868760",
    "end": "1875880"
  },
  {
    "text": "large for some pees so with that I'm going to get to",
    "start": "1875880",
    "end": "1881360"
  },
  {
    "text": "the demo so before I started this talk I",
    "start": "1881360",
    "end": "1886919"
  },
  {
    "text": "downloaded 100 samples from virus total and I'll show you the query that I'm",
    "start": "1886919",
    "end": "1893080"
  },
  {
    "text": "using this particular one we are grabbing any samples that are less than three Megs so if it's larger than three",
    "start": "1893080",
    "end": "1898880"
  },
  {
    "text": "Megs we just throw it away they were first seen three days ago or later they're of type pexe because that's what",
    "start": "1898880",
    "end": "1905320"
  },
  {
    "text": "our model is trained on has more than 20 positives so the industry as a whole thinks this thing's pretty nasty then we",
    "start": "1905320",
    "end": "1911480"
  },
  {
    "text": "just have a tag in here that if the PE is corrupt we toss it out because we don't want to uh disassemble it",
    "start": "1911480",
    "end": "1918480"
  },
  {
    "text": "then we're going to grab some scans so we can see how this model compares to Industry and we're going to do some",
    "start": "1920000",
    "end": "1925600"
  },
  {
    "text": "stuff that throws out samples that are net for example so if we disassemble a net sample we only wind up with one",
    "start": "1925600",
    "end": "1931639"
  },
  {
    "text": "instruction so there's not much useful stuff the model can do with it then we're going to convert it into a thing",
    "start": "1931639",
    "end": "1937200"
  },
  {
    "text": "that Julia programming language I implemented this can understand and then we're going to score it so I'm going to",
    "start": "1937200",
    "end": "1944440"
  },
  {
    "text": "run this model on the data that I downloaded before I started this talk and we'll see how it does I have no",
    "start": "1944440",
    "end": "1951398"
  },
  {
    "text": "idea so I'll full screen this I'm explain the graph",
    "start": "1954240",
    "end": "1961000"
  },
  {
    "text": "too all right so what we're seeing here is we're seeing a count of how many",
    "start": "1961600",
    "end": "1968240"
  },
  {
    "text": "times a so okay we're looking at the model's output probability right so you feed in a sample then you get some",
    "start": "1968240",
    "end": "1974559"
  },
  {
    "text": "output probability as to whether or not it's malware if it's zero then it's probably good if it's one it's probably",
    "start": "1974559",
    "end": "1980600"
  },
  {
    "text": "bad so we're counting things up seeing that we have a lot of",
    "start": "1980600",
    "end": "1985840"
  },
  {
    "text": "detections at one so the one will be on the on the right and zero to the left the numbers",
    "start": "1985840",
    "end": "1991840"
  },
  {
    "text": "are cut off on",
    "start": "1991840",
    "end": "1994480"
  },
  {
    "text": "theor so the interesting thing to point out about this is that there have been very few development hours that went",
    "start": "2004200",
    "end": "2010159"
  },
  {
    "text": "into this project right and it's comparing somewhat favorably with the rest of Industry right it's picking",
    "start": "2010159",
    "end": "2015600"
  },
  {
    "text": "things out not at a super impressive hit rate but the fact that this model can run on a whole lot of samples and",
    "start": "2015600",
    "end": "2022639"
  },
  {
    "text": "sort of filter things down for reverse Engineers to then look at it's pretty interesting so let's now",
    "start": "2022639",
    "end": "2030799"
  },
  {
    "text": "run the scan program to see how well industry did",
    "start": "2030799",
    "end": "2037880"
  },
  {
    "text": "so I got to grab these scans first this will take a moment so what I'm going to do now is",
    "start": "2041120",
    "end": "2047039"
  },
  {
    "text": "I'm going to see how well industry did with all of these samples right so I'm going to look at all the query results",
    "start": "2047039",
    "end": "2053520"
  },
  {
    "text": "from virus total and then an automize the vendors and then we'll see where we",
    "start": "2053520",
    "end": "2058838"
  },
  {
    "text": "fall while this is",
    "start": "2066720",
    "end": "2070240"
  },
  {
    "text": "running and open up",
    "start": "2075119",
    "end": "2078598"
  },
  {
    "text": "Julia all right so we can see with the scans so",
    "start": "2084079",
    "end": "2089679"
  },
  {
    "text": "far not all of them have completed but as I talk more scans will go and we'll see how it winds up we're falling",
    "start": "2089679",
    "end": "2095480"
  },
  {
    "text": "roughly into the I would say a little bit lower than half we're somewhere here whoever vendor 54 is we're doing",
    "start": "2095480",
    "end": "2101920"
  },
  {
    "text": "slightly better",
    "start": "2101920",
    "end": "2104599"
  },
  {
    "text": "than and as these scans come in I'll go ahead and give you the three takeaways from",
    "start": "2107200",
    "end": "2113359"
  },
  {
    "start": "2111000",
    "end": "2121000"
  },
  {
    "text": "this talk basically throw disassembly data into a neural net then the neural net does stuff",
    "start": "2113359",
    "end": "2121240"
  },
  {
    "start": "2121000",
    "end": "2467000"
  },
  {
    "text": "profit I suppose while the scans are going I'll start taking questions um if you don't happen to ask the question if",
    "start": "2122200",
    "end": "2129040"
  },
  {
    "text": "you don't have a chance to ask your question you can contact us at machine learning.com and send us any questions",
    "start": "2129040",
    "end": "2134560"
  },
  {
    "text": "there like to give a shout out to Derrick Soder and Gabriel oo without them there would be no data for this project and it just wouldn't have",
    "start": "2134560",
    "end": "2140680"
  },
  {
    "text": "happened um and as an extra plug we are hiring so check outs silence.",
    "start": "2140680",
    "end": "2146480"
  },
  {
    "text": "compcare and see if you'd be interested in",
    "start": "2146480",
    "end": "2151440"
  },
  {
    "text": "anything that all open the floor to some questions yes",
    "start": "2152359",
    "end": "2158040"
  },
  {
    "text": "we uh turn on the mics oh can you oh okay here we go so Caro's a blog post",
    "start": "2160599",
    "end": "2167839"
  },
  {
    "text": "about text generation with recurrent neural networks use two or three layer networks right and I was under the",
    "start": "2167839",
    "end": "2173880"
  },
  {
    "text": "impression that deep learning referred to using much more layers I was",
    "start": "2173880",
    "end": "2179319"
  },
  {
    "text": "wondering what that was about like is that deep learning or so I would say technically deep learning is any neural",
    "start": "2179319",
    "end": "2186560"
  },
  {
    "text": "net that has I guess it depends on who you ask it has more than maybe let's say one hidden",
    "start": "2186560",
    "end": "2192160"
  },
  {
    "text": "layer you could call it deep um some of the more sophisticated models like the googly net use up to",
    "start": "2192160",
    "end": "2197720"
  },
  {
    "text": "like I think 22 layers each each layer is doing some sort of like crazy thing",
    "start": "2197720",
    "end": "2203359"
  },
  {
    "text": "um so yeah they they can wi there's a pretty wide range for the definition of deep Ling I would call two layers deep",
    "start": "2203359",
    "end": "2210560"
  },
  {
    "text": "um in this particular case we have two convolutional layers followed by two fully connected layers um it's not super",
    "start": "2210560",
    "end": "2216280"
  },
  {
    "text": "deep but I would still call it",
    "start": "2216280",
    "end": "2219520"
  },
  {
    "text": "yes um so my question is with the uh blog post you had on earlier and yours uh as well you're using um so the blog",
    "start": "2223200",
    "end": "2230680"
  },
  {
    "text": "post uses letters as the uh The Primitives and you're using just the op codes is there a reason why you're not",
    "start": "2230680",
    "end": "2236680"
  },
  {
    "text": "using like the a for your code or words for the the generation for text so",
    "start": "2236680",
    "end": "2242800"
  },
  {
    "text": "you're asking uh why we're not using things like ests yeah why you're not why you're not usings and the blog post you",
    "start": "2242800",
    "end": "2248359"
  },
  {
    "text": "had up earlier uses letters rather than than words as the the things to operate on okay um you could certainly figure",
    "start": "2248359",
    "end": "2255440"
  },
  {
    "text": "out a way to sort of uh leverage ests um I think there are some models that sort of work like neural network based models",
    "start": "2255440",
    "end": "2262400"
  },
  {
    "text": "that work on tree structures so that would be an interesting line of work um but yeah that's you know with research",
    "start": "2262400",
    "end": "2269079"
  },
  {
    "text": "there are a million different ways you can go and that's just one particular direction I didn't go okay thank you",
    "start": "2269079",
    "end": "2275880"
  },
  {
    "text": "sure next question yes Val okay so the question was what is",
    "start": "2275880",
    "end": "2283720"
  },
  {
    "text": "the biggest data set we validated this on as far as training let me think about this I think I had about 1.6 million",
    "start": "2283720",
    "end": "2290440"
  },
  {
    "text": "samples going in then I divided it about 90% for training and 10% for validation",
    "start": "2290440",
    "end": "2296079"
  },
  {
    "text": "so somewhere in the neighborhood of several hundred thousand samples maybe one or hundred",
    "start": "2296079",
    "end": "2301160"
  },
  {
    "text": "thousand next question hi um I was just wondering um do you know what percentage",
    "start": "2301160",
    "end": "2308319"
  },
  {
    "text": "of the samples you're trying to classify are actually benign versus militias so",
    "start": "2308319",
    "end": "2314200"
  },
  {
    "text": "with the validation set that I have it's a 50/50 split well I think it was slightly less than 50/50 um something",
    "start": "2314200",
    "end": "2319960"
  },
  {
    "text": "like 60/40 but when I train the model I give it a perfect split between good and bad so it doesn't learn to unfairly bias",
    "start": "2319960",
    "end": "2326720"
  },
  {
    "text": "one label over the other okay I mean the reason I ask is like if you I mean",
    "start": "2326720",
    "end": "2331920"
  },
  {
    "text": "obviously those proportions are like a lot different than you would find in an Enterprise Network or something absolutely so I mean you could just make",
    "start": "2331920",
    "end": "2338160"
  },
  {
    "text": "a sensor that always says this is malicious and it would get it right 50% of the time which would look better than",
    "start": "2338160",
    "end": "2344319"
  },
  {
    "text": "some antivirus but that's not really realistic yeah that's very true um the",
    "start": "2344319",
    "end": "2349359"
  },
  {
    "text": "whole idea of like how our input distribution and training differs from the input distribution in like a likely",
    "start": "2349359",
    "end": "2356000"
  },
  {
    "text": "situation like when you actually run a machine learning based",
    "start": "2356000",
    "end": "2361160"
  },
  {
    "text": "AV it's one of those questions that's really hard to Grapple with right because knowing the input distribution",
    "start": "2361160",
    "end": "2366560"
  },
  {
    "text": "is a really hard thing um yeah I guess I'm just wondering have you have you tried running like you know",
    "start": "2366560",
    "end": "2373920"
  },
  {
    "text": "with maybe 10,000 Bine Weare and one malicious and seeing if it finds that one needle on the hay stack or not I",
    "start": "2373920",
    "end": "2379760"
  },
  {
    "text": "have not tried that no um I can say as far as our our production model goes it's not super false positive e",
    "start": "2379760",
    "end": "2387560"
  },
  {
    "text": "um but yeah yeah okay thank you sure another question so with a training set",
    "start": "2387560",
    "end": "2394760"
  },
  {
    "text": "of 1.6 million samples it's obvious that they haven't been manually analyzed and labeled so like your labels may not have",
    "start": "2394760",
    "end": "2403280"
  },
  {
    "text": "that much confidence how do you predict against just repeating the mistakes of existing AV yeah good question",
    "start": "2403280",
    "end": "2410960"
  },
  {
    "text": "um we have observe that there's like a particular amount of label noise right",
    "start": "2410960",
    "end": "2416839"
  },
  {
    "text": "so we may find that you know somewhere in the neighborhood of 1% or around",
    "start": "2416839",
    "end": "2421880"
  },
  {
    "text": "there of labels are kind of like not very good um so there is that problem fortunately",
    "start": "2421880",
    "end": "2427880"
  },
  {
    "text": "a lot of models are fairly resilient to that in other words you don't have to worry too much about label noise until you start getting into the regime of",
    "start": "2427880",
    "end": "2434319"
  },
  {
    "text": "like 5 10 20% so as long as the labels that you get are kind of okay your model is going to work pretty well so how do",
    "start": "2434319",
    "end": "2441160"
  },
  {
    "text": "you tell which labels are good um unfortunately that's one of",
    "start": "2441160",
    "end": "2446800"
  },
  {
    "text": "those sort of getting into the range of Trade Secrets there's a lot of work that goes into it and I can't talk about that too",
    "start": "2446800",
    "end": "2454000"
  },
  {
    "text": "much any more questions",
    "start": "2455520",
    "end": "2459240"
  },
  {
    "text": "all right cool thank you so much for your time really appreciate it [Music] [Applause]",
    "start": "2462319",
    "end": "2469349"
  }
]