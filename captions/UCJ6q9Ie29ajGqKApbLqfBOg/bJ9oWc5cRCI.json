[
  {
    "text": "[Music]",
    "start": "1700",
    "end": "4810"
  },
  {
    "text": "hi I'm Siobhan I'm a new assistant",
    "start": "7460",
    "end": "10440"
  },
  {
    "text": "professor at UT Austin and today I'll be",
    "start": "10440",
    "end": "13740"
  },
  {
    "text": "telling you how to secure your",
    "start": "13740",
    "end": "15360"
  },
  {
    "text": "applications from bugs in its",
    "start": "15360",
    "end": "17039"
  },
  {
    "text": "dependencies",
    "start": "17039",
    "end": "18359"
  },
  {
    "text": "and so this is actually the result of a",
    "start": "18359",
    "end": "21960"
  },
  {
    "text": "multi-year collaboration between a bunch",
    "start": "21960",
    "end": "23580"
  },
  {
    "text": "of people at UC San Diego UT Austin and",
    "start": "23580",
    "end": "26640"
  },
  {
    "text": "Mozilla",
    "start": "26640",
    "end": "27779"
  },
  {
    "text": "and today's talk in a nutshell is going",
    "start": "27779",
    "end": "30420"
  },
  {
    "text": "to be about in-process sandboxing which",
    "start": "30420",
    "end": "32940"
  },
  {
    "text": "is this technique to secure your",
    "start": "32940",
    "end": "34500"
  },
  {
    "text": "application from dependencies in the",
    "start": "34500",
    "end": "36360"
  },
  {
    "text": "form of native code",
    "start": "36360",
    "end": "37980"
  },
  {
    "text": "and this idea of in-process sandboxing",
    "start": "37980",
    "end": "40620"
  },
  {
    "text": "has actually been around in the academic",
    "start": "40620",
    "end": "43200"
  },
  {
    "text": "security Community for a while almost 30",
    "start": "43200",
    "end": "45300"
  },
  {
    "text": "years at this point and this is the",
    "start": "45300",
    "end": "47280"
  },
  {
    "text": "first time it's making its way to",
    "start": "47280",
    "end": "48480"
  },
  {
    "text": "production code",
    "start": "48480",
    "end": "49800"
  },
  {
    "text": "and it and this is because of a couple",
    "start": "49800",
    "end": "52140"
  },
  {
    "text": "of reasons the first is webassembly",
    "start": "52140",
    "end": "54180"
  },
  {
    "text": "which is this widely available tool",
    "start": "54180",
    "end": "56280"
  },
  {
    "text": "chain for compiler-based isolation that",
    "start": "56280",
    "end": "58379"
  },
  {
    "text": "is now available uh for all of us and",
    "start": "58379",
    "end": "61140"
  },
  {
    "text": "the second part is this framework we had",
    "start": "61140",
    "end": "63780"
  },
  {
    "text": "to build called RL box which simplifies",
    "start": "63780",
    "end": "66420"
  },
  {
    "text": "adoption of in-process sandboxing and",
    "start": "66420",
    "end": "69240"
  },
  {
    "text": "lets you sandbox native code with",
    "start": "69240",
    "end": "70860"
  },
  {
    "text": "webassembly",
    "start": "70860",
    "end": "72360"
  },
  {
    "text": "and Firefox has been the Firefox web",
    "start": "72360",
    "end": "74640"
  },
  {
    "text": "browser has been using Autobox for over",
    "start": "74640",
    "end": "77220"
  },
  {
    "text": "over two years at this point and this is",
    "start": "77220",
    "end": "79500"
  },
  {
    "text": "something we believe other applications",
    "start": "79500",
    "end": "80880"
  },
  {
    "text": "can do as well",
    "start": "80880",
    "end": "82560"
  },
  {
    "text": "so in this talk I'll start with some",
    "start": "82560",
    "end": "84600"
  },
  {
    "text": "high level bits like why we want",
    "start": "84600",
    "end": "86400"
  },
  {
    "text": "something like in process sandboxing in",
    "start": "86400",
    "end": "88080"
  },
  {
    "text": "the first place",
    "start": "88080",
    "end": "89220"
  },
  {
    "text": "next I'll talk a little bit about the",
    "start": "89220",
    "end": "90780"
  },
  {
    "text": "pain points what the pain points of",
    "start": "90780",
    "end": "92100"
  },
  {
    "text": "in-process sandboxing are and why we",
    "start": "92100",
    "end": "93840"
  },
  {
    "text": "need a framework to help us adopt it",
    "start": "93840",
    "end": "96420"
  },
  {
    "text": "we'll talk about robox which is our the",
    "start": "96420",
    "end": "98700"
  },
  {
    "text": "framework we built to actually simplify",
    "start": "98700",
    "end": "100500"
  },
  {
    "text": "in-process sandboxing and finally we'll",
    "start": "100500",
    "end": "103259"
  },
  {
    "text": "talk about our experiences actually",
    "start": "103259",
    "end": "104640"
  },
  {
    "text": "deploying in-process sandboxing with RL",
    "start": "104640",
    "end": "107100"
  },
  {
    "text": "box",
    "start": "107100",
    "end": "109020"
  },
  {
    "text": "so let's Jump Right In the reason we",
    "start": "109020",
    "end": "112799"
  },
  {
    "text": "care about any of this is that every",
    "start": "112799",
    "end": "115439"
  },
  {
    "text": "application we use today in some way",
    "start": "115439",
    "end": "117780"
  },
  {
    "text": "relies on Native code",
    "start": "117780",
    "end": "119880"
  },
  {
    "text": "and as we probably well know native code",
    "start": "119880",
    "end": "122820"
  },
  {
    "text": "tends to have memory safety bugs and if",
    "start": "122820",
    "end": "126060"
  },
  {
    "text": "you've been to black hat before you've",
    "start": "126060",
    "end": "127380"
  },
  {
    "text": "probably seen a slide like this this is",
    "start": "127380",
    "end": "129300"
  },
  {
    "text": "basically an analysis of bugs in Google",
    "start": "129300",
    "end": "131700"
  },
  {
    "text": "Chrome and Microsoft Windows and what",
    "start": "131700",
    "end": "134640"
  },
  {
    "text": "was found was uh 70 of all the bugs we",
    "start": "134640",
    "end": "138060"
  },
  {
    "text": "see are just memory safety bugs so use",
    "start": "138060",
    "end": "141060"
  },
  {
    "text": "after freeze buffer overflows all of",
    "start": "141060",
    "end": "143099"
  },
  {
    "text": "these things",
    "start": "143099",
    "end": "144420"
  },
  {
    "text": "and at this point you might you might",
    "start": "144420",
    "end": "146400"
  },
  {
    "text": "say something like well let's stop",
    "start": "146400",
    "end": "148260"
  },
  {
    "text": "writing stuff in C plus plus I'll write",
    "start": "148260",
    "end": "149819"
  },
  {
    "text": "everything in rust or something like",
    "start": "149819",
    "end": "151319"
  },
  {
    "text": "that",
    "start": "151319",
    "end": "152340"
  },
  {
    "text": "and there's a problem there which is",
    "start": "152340",
    "end": "154440"
  },
  {
    "text": "these safe languages are also built on",
    "start": "154440",
    "end": "156840"
  },
  {
    "text": "the same unsafe libraries so if you look",
    "start": "156840",
    "end": "160440"
  },
  {
    "text": "up the CC crate on rust or the add-on",
    "start": "160440",
    "end": "163260"
  },
  {
    "text": "API node.js you'll see this and it's",
    "start": "163260",
    "end": "165360"
  },
  {
    "text": "just one other example something like",
    "start": "165360",
    "end": "167160"
  },
  {
    "text": "openssl uh half a million lines of C",
    "start": "167160",
    "end": "171900"
  },
  {
    "text": "it's a common dependency even in Rust",
    "start": "171900",
    "end": "173940"
  },
  {
    "text": "applications for examples",
    "start": "173940",
    "end": "177140"
  },
  {
    "text": "and the problem we have with all of this",
    "start": "177900",
    "end": "180360"
  },
  {
    "text": "native code is",
    "start": "180360",
    "end": "182220"
  },
  {
    "text": "when these libraries have bugs they are",
    "start": "182220",
    "end": "185280"
  },
  {
    "text": "used in real attacks and we've seen this",
    "start": "185280",
    "end": "187500"
  },
  {
    "text": "in a while time again time and again",
    "start": "187500",
    "end": "189060"
  },
  {
    "text": "where these sort of bugs are exploited",
    "start": "189060",
    "end": "191459"
  },
  {
    "text": "to compromised systems like web browsers",
    "start": "191459",
    "end": "194360"
  },
  {
    "text": "iMessage you name a system it's probably",
    "start": "194360",
    "end": "196680"
  },
  {
    "text": "been compromised by something like this",
    "start": "196680",
    "end": "200060"
  },
  {
    "text": "and the the challenge we're running up",
    "start": "201659",
    "end": "203700"
  },
  {
    "text": "against is all of the techniques we have",
    "start": "203700",
    "end": "205560"
  },
  {
    "text": "the mitigations the application",
    "start": "205560",
    "end": "207060"
  },
  {
    "text": "hardening like aslr stack canaries",
    "start": "207060",
    "end": "210180"
  },
  {
    "text": "control flow Integrity end up being just",
    "start": "210180",
    "end": "212819"
  },
  {
    "text": "a little speed bump for in the wild",
    "start": "212819",
    "end": "214440"
  },
  {
    "text": "attacks something they have to get past",
    "start": "214440",
    "end": "215940"
  },
  {
    "text": "but eventually they do and suddenly we",
    "start": "215940",
    "end": "218340"
  },
  {
    "text": "see attacks in the wild",
    "start": "218340",
    "end": "220500"
  },
  {
    "text": "and we could we could try to say",
    "start": "220500",
    "end": "222480"
  },
  {
    "text": "something like well let's rewrite",
    "start": "222480",
    "end": "223799"
  },
  {
    "text": "everything in Rust",
    "start": "223799",
    "end": "225180"
  },
  {
    "text": "unfortunately this is not very practical",
    "start": "225180",
    "end": "227580"
  },
  {
    "text": "this is actually quite unrealistic there",
    "start": "227580",
    "end": "229980"
  },
  {
    "text": "are billions of lines of existing C and",
    "start": "229980",
    "end": "232200"
  },
  {
    "text": "C plus plus code that aren't going away",
    "start": "232200",
    "end": "234000"
  },
  {
    "text": "and rewriting it is not just changing",
    "start": "234000",
    "end": "237060"
  },
  {
    "text": "the syntax or something you have to",
    "start": "237060",
    "end": "238379"
  },
  {
    "text": "retest you actually have to make sure",
    "start": "238379",
    "end": "240239"
  },
  {
    "text": "it's portable get this it gets the same",
    "start": "240239",
    "end": "242040"
  },
  {
    "text": "performance it is quite a process and to",
    "start": "242040",
    "end": "245099"
  },
  {
    "text": "a point that even Mozilla who developed",
    "start": "245099",
    "end": "246659"
  },
  {
    "text": "rust is not really trying to rewrite all",
    "start": "246659",
    "end": "248459"
  },
  {
    "text": "of Firefox and all of its dependencies",
    "start": "248459",
    "end": "250260"
  },
  {
    "text": "in Rust",
    "start": "250260",
    "end": "251760"
  },
  {
    "text": "so instead we have to look for something",
    "start": "251760",
    "end": "253920"
  },
  {
    "text": "else to tackle these sort of problems",
    "start": "253920",
    "end": "256739"
  },
  {
    "text": "so one thing we can do is take all of",
    "start": "256739",
    "end": "259680"
  },
  {
    "text": "this buggy native code and stick it into",
    "start": "259680",
    "end": "261720"
  },
  {
    "text": "a separate process where it can't affect",
    "start": "261720",
    "end": "263460"
  },
  {
    "text": "the rest of the application this is the",
    "start": "263460",
    "end": "265440"
  },
  {
    "text": "idea of process sandboxing and it's been",
    "start": "265440",
    "end": "267000"
  },
  {
    "text": "around for a while it's convenient",
    "start": "267000",
    "end": "268680"
  },
  {
    "text": "because all of our existing code works",
    "start": "268680",
    "end": "270540"
  },
  {
    "text": "that's great",
    "start": "270540",
    "end": "272040"
  },
  {
    "text": "but what we see is this technique is",
    "start": "272040",
    "end": "274919"
  },
  {
    "text": "rarely used in practice barring like a",
    "start": "274919",
    "end": "277080"
  },
  {
    "text": "couple of exceptions I think opensh web",
    "start": "277080",
    "end": "279360"
  },
  {
    "text": "browsers but other than that it hasn't",
    "start": "279360",
    "end": "281400"
  },
  {
    "text": "really seen widespread adoption",
    "start": "281400",
    "end": "283440"
  },
  {
    "text": "and there's a pretty good reason for",
    "start": "283440",
    "end": "284880"
  },
  {
    "text": "this",
    "start": "284880",
    "end": "286080"
  },
  {
    "text": "and that is performance",
    "start": "286080",
    "end": "287940"
  },
  {
    "text": "when you have processes you have",
    "start": "287940",
    "end": "289919"
  },
  {
    "text": "inter-process communication when you",
    "start": "289919",
    "end": "291840"
  },
  {
    "text": "have inter-process communication you",
    "start": "291840",
    "end": "293580"
  },
  {
    "text": "have slowdowns in your application there",
    "start": "293580",
    "end": "295680"
  },
  {
    "text": "is a lot of overheads cpu-wise memory",
    "start": "295680",
    "end": "298259"
  },
  {
    "text": "wise scheduler-wise and there are",
    "start": "298259",
    "end": "300120"
  },
  {
    "text": "challenges with scaling too",
    "start": "300120",
    "end": "302100"
  },
  {
    "text": "and even if you can get past some of",
    "start": "302100",
    "end": "304020"
  },
  {
    "text": "these what eventually happens when you",
    "start": "304020",
    "end": "306419"
  },
  {
    "text": "use process sandboxing in your",
    "start": "306419",
    "end": "307919"
  },
  {
    "text": "application is you are going to",
    "start": "307919",
    "end": "309479"
  },
  {
    "text": "re-architect it you're going to change",
    "start": "309479",
    "end": "311040"
  },
  {
    "text": "the way it's written it is hard to",
    "start": "311040",
    "end": "313199"
  },
  {
    "text": "retrofit process sandboxing onto your",
    "start": "313199",
    "end": "315240"
  },
  {
    "text": "existing application as is now I could",
    "start": "315240",
    "end": "317940"
  },
  {
    "text": "talk to you about this at Great length",
    "start": "317940",
    "end": "320040"
  },
  {
    "text": "but instead let me just point you to a",
    "start": "320040",
    "end": "322080"
  },
  {
    "text": "great talk by Chris Palmer who went from",
    "start": "322080",
    "end": "324360"
  },
  {
    "text": "Google Chrome security who went through",
    "start": "324360",
    "end": "326100"
  },
  {
    "text": "all of this in great detail",
    "start": "326100",
    "end": "327780"
  },
  {
    "text": "and instead let me talk about a",
    "start": "327780",
    "end": "330060"
  },
  {
    "text": "Technique we tried that did end up",
    "start": "330060",
    "end": "331620"
  },
  {
    "text": "working for us and this is this idea of",
    "start": "331620",
    "end": "334680"
  },
  {
    "text": "in process sandboxing",
    "start": "334680",
    "end": "337500"
  },
  {
    "text": "so in process sandboxing it's a pretty",
    "start": "337500",
    "end": "339780"
  },
  {
    "text": "simple idea again which is we take these",
    "start": "339780",
    "end": "342240"
  },
  {
    "text": "libraries that we don't trust we compile",
    "start": "342240",
    "end": "344639"
  },
  {
    "text": "them with the web assembly with",
    "start": "344639",
    "end": "346020"
  },
  {
    "text": "webassembly to sandbox them",
    "start": "346020",
    "end": "348000"
  },
  {
    "text": "and then we run them in the same process",
    "start": "348000",
    "end": "350520"
  },
  {
    "text": "and for the purpose of this talk it's",
    "start": "350520",
    "end": "352919"
  },
  {
    "text": "sufficient to think of webassembly as",
    "start": "352919",
    "end": "355080"
  },
  {
    "text": "this compiler that can isolate code",
    "start": "355080",
    "end": "357360"
  },
  {
    "text": "using runtime checks",
    "start": "357360",
    "end": "360240"
  },
  {
    "text": "and what we're trying to get when we do",
    "start": "360240",
    "end": "363000"
  },
  {
    "text": "all of this is to make your application",
    "start": "363000",
    "end": "365340"
  },
  {
    "text": "look something like that",
    "start": "365340",
    "end": "367500"
  },
  {
    "text": "not this big monolith blob of code that",
    "start": "367500",
    "end": "370680"
  },
  {
    "text": "can access any part of the address space",
    "start": "370680",
    "end": "372479"
  },
  {
    "text": "but something with clear components",
    "start": "372479",
    "end": "374280"
  },
  {
    "text": "which are sandboxed and the sandbox",
    "start": "374280",
    "end": "376380"
  },
  {
    "text": "components can only access a portion of",
    "start": "376380",
    "end": "378419"
  },
  {
    "text": "the address space so for example there",
    "start": "378419",
    "end": "381000"
  },
  {
    "text": "lib jpeg can only access addresses",
    "start": "381000",
    "end": "384000"
  },
  {
    "text": "between Ox 4100 and Ox 4200",
    "start": "384000",
    "end": "388560"
  },
  {
    "text": "and the end result of doing something",
    "start": "388560",
    "end": "390539"
  },
  {
    "text": "like this is when you have a user after",
    "start": "390539",
    "end": "392639"
  },
  {
    "text": "free a buffer overflow or something",
    "start": "392639",
    "end": "394139"
  },
  {
    "text": "similar in lib jpeg",
    "start": "394139",
    "end": "396060"
  },
  {
    "text": "it does not touch any of the memory of",
    "start": "396060",
    "end": "398580"
  },
  {
    "text": "the main Firefox process or any other",
    "start": "398580",
    "end": "400979"
  },
  {
    "text": "component",
    "start": "400979",
    "end": "403460"
  },
  {
    "text": "this is really nice because we now get",
    "start": "403680",
    "end": "406319"
  },
  {
    "text": "code reuse and we also get performance",
    "start": "406319",
    "end": "408479"
  },
  {
    "text": "there is no processes hence there is no",
    "start": "408479",
    "end": "410819"
  },
  {
    "text": "IPC CP overheads are great",
    "start": "410819",
    "end": "414300"
  },
  {
    "text": "but we still have this open challenge",
    "start": "414300",
    "end": "416100"
  },
  {
    "text": "now which is the engineering effort",
    "start": "416100",
    "end": "417960"
  },
  {
    "text": "involved we still have to take this idea",
    "start": "417960",
    "end": "420720"
  },
  {
    "text": "of in-process sandboxing and put it into",
    "start": "420720",
    "end": "423240"
  },
  {
    "text": "our existing million light code base and",
    "start": "423240",
    "end": "426000"
  },
  {
    "text": "so on",
    "start": "426000",
    "end": "427919"
  },
  {
    "text": "and it turns out this is a really hard",
    "start": "427919",
    "end": "429600"
  },
  {
    "text": "problem",
    "start": "429600",
    "end": "430620"
  },
  {
    "text": "at least to do by hand there is some you",
    "start": "430620",
    "end": "433199"
  },
  {
    "text": "do need some help so let's let's talk",
    "start": "433199",
    "end": "435240"
  },
  {
    "text": "about that let's talk about this uh what",
    "start": "435240",
    "end": "437639"
  },
  {
    "text": "the pain points of in-process sandboxing",
    "start": "437639",
    "end": "439680"
  },
  {
    "text": "are and why we need a framework to help",
    "start": "439680",
    "end": "442560"
  },
  {
    "text": "us adopt this in the first place",
    "start": "442560",
    "end": "445440"
  },
  {
    "text": "and the best way to kind of get a sense",
    "start": "445440",
    "end": "447780"
  },
  {
    "text": "of what's Happening Here is with an",
    "start": "447780",
    "end": "450180"
  },
  {
    "text": "example so we're going to use this as",
    "start": "450180",
    "end": "452400"
  },
  {
    "text": "our running case study we're going to",
    "start": "452400",
    "end": "454500"
  },
  {
    "text": "try to sandbox lib jpeg in the Firefox",
    "start": "454500",
    "end": "457080"
  },
  {
    "text": "web browser",
    "start": "457080",
    "end": "458340"
  },
  {
    "text": "again the goal is isolate lib jpeg any",
    "start": "458340",
    "end": "461699"
  },
  {
    "text": "memory safety errors in lib jpeg do not",
    "start": "461699",
    "end": "463680"
  },
  {
    "text": "affect the rest of Firefox",
    "start": "463680",
    "end": "466319"
  },
  {
    "text": "so step one here really simple take lib",
    "start": "466319",
    "end": "469740"
  },
  {
    "text": "jpeg sources",
    "start": "469740",
    "end": "471000"
  },
  {
    "text": "run it through the Watson compiler",
    "start": "471000",
    "end": "472500"
  },
  {
    "text": "produced a sandboxed lib jpeg binary",
    "start": "472500",
    "end": "475740"
  },
  {
    "text": "and under the covers webassembly is",
    "start": "475740",
    "end": "478259"
  },
  {
    "text": "adding range checks so the way it",
    "start": "478259",
    "end": "480539"
  },
  {
    "text": "actually ensures sandboxing is with",
    "start": "480539",
    "end": "482160"
  },
  {
    "text": "range checks like this where any memory",
    "start": "482160",
    "end": "484740"
  },
  {
    "text": "read you have in your application is",
    "start": "484740",
    "end": "486780"
  },
  {
    "text": "just transformed to a range check",
    "start": "486780",
    "end": "488300"
  },
  {
    "text": "followed by the same memory read",
    "start": "488300",
    "end": "491819"
  },
  {
    "text": "and it's a pretty simple idea and I",
    "start": "491819",
    "end": "494160"
  },
  {
    "text": "should point out that in practice there",
    "start": "494160",
    "end": "496259"
  },
  {
    "text": "are a bunch of Tricks involved to make",
    "start": "496259",
    "end": "498000"
  },
  {
    "text": "these sort of range stats like to",
    "start": "498000",
    "end": "499740"
  },
  {
    "text": "optimize away these range checks for",
    "start": "499740",
    "end": "501479"
  },
  {
    "text": "performance but this should give you the",
    "start": "501479",
    "end": "503520"
  },
  {
    "text": "intuition",
    "start": "503520",
    "end": "505560"
  },
  {
    "text": "and broadly we know how to do this this",
    "start": "505560",
    "end": "508020"
  },
  {
    "text": "is in some sense the simple bit the",
    "start": "508020",
    "end": "510240"
  },
  {
    "text": "really difficult bit is we now need to",
    "start": "510240",
    "end": "512159"
  },
  {
    "text": "modify Firefox to incorporate this",
    "start": "512159",
    "end": "514620"
  },
  {
    "text": "sandbox lip JPEG and this is the bit I",
    "start": "514620",
    "end": "517140"
  },
  {
    "text": "want to focus on for now",
    "start": "517140",
    "end": "520200"
  },
  {
    "text": "and let me actually walk you through the",
    "start": "520200",
    "end": "522659"
  },
  {
    "text": "various steps now that are needed to",
    "start": "522659",
    "end": "524760"
  },
  {
    "text": "incorporate this modified lip jpeg",
    "start": "524760",
    "end": "527100"
  },
  {
    "text": "and the first thing we would do if we",
    "start": "527100",
    "end": "529320"
  },
  {
    "text": "wanted to do this is decouple the",
    "start": "529320",
    "end": "531360"
  },
  {
    "text": "library and this is not just a matter of",
    "start": "531360",
    "end": "533580"
  },
  {
    "text": "like grabbing the code and putting it in",
    "start": "533580",
    "end": "535380"
  },
  {
    "text": "a separate folder now we need to grab",
    "start": "535380",
    "end": "537180"
  },
  {
    "text": "all of the shared data structures we",
    "start": "537180",
    "end": "538980"
  },
  {
    "text": "need to figure out how con descent how",
    "start": "538980",
    "end": "541080"
  },
  {
    "text": "to disentangle the shared control flow",
    "start": "541080",
    "end": "543300"
  },
  {
    "text": "all of these things have to be carefully",
    "start": "543300",
    "end": "545220"
  },
  {
    "text": "separated so that we can actually",
    "start": "545220",
    "end": "546899"
  },
  {
    "text": "sandbox lip jpeg correctly",
    "start": "546899",
    "end": "549360"
  },
  {
    "text": "and once we do this we need to now go",
    "start": "549360",
    "end": "552120"
  },
  {
    "text": "back and think about all of the data",
    "start": "552120",
    "end": "554040"
  },
  {
    "text": "sharing that needs to happen because",
    "start": "554040",
    "end": "555779"
  },
  {
    "text": "components now have their own separate",
    "start": "555779",
    "end": "557760"
  },
  {
    "text": "memory so we need to Marshall data back",
    "start": "557760",
    "end": "560160"
  },
  {
    "text": "and forth between different components",
    "start": "560160",
    "end": "562200"
  },
  {
    "text": "and this is actually made challenging by",
    "start": "562200",
    "end": "564240"
  },
  {
    "text": "a couple of different factors the first",
    "start": "564240",
    "end": "566519"
  },
  {
    "text": "one is webassembly is a different",
    "start": "566519",
    "end": "568500"
  },
  {
    "text": "compiler it has a different API it has",
    "start": "568500",
    "end": "570720"
  },
  {
    "text": "different calling conventions some of",
    "start": "570720",
    "end": "572880"
  },
  {
    "text": "these are chosen for performance reasons",
    "start": "572880",
    "end": "574440"
  },
  {
    "text": "but they are different from the rest of",
    "start": "574440",
    "end": "576060"
  },
  {
    "text": "Firefox so we now need to deal with this",
    "start": "576060",
    "end": "578700"
  },
  {
    "text": "we have to have a patchwork of code that",
    "start": "578700",
    "end": "580980"
  },
  {
    "text": "fixes all of these things before and",
    "start": "580980",
    "end": "582480"
  },
  {
    "text": "after every time we Marshal data",
    "start": "582480",
    "end": "585300"
  },
  {
    "text": "and the second bit is we can't just",
    "start": "585300",
    "end": "587399"
  },
  {
    "text": "stick this marshalling code wherever we",
    "start": "587399",
    "end": "589080"
  },
  {
    "text": "want we need to do this very carefully",
    "start": "589080",
    "end": "591240"
  },
  {
    "text": "we need to do this lazily so that we",
    "start": "591240",
    "end": "593399"
  },
  {
    "text": "limit the amount of marshalling and",
    "start": "593399",
    "end": "595019"
  },
  {
    "text": "limit the overhead of marshalling data",
    "start": "595019",
    "end": "597300"
  },
  {
    "text": "back and forth",
    "start": "597300",
    "end": "598740"
  },
  {
    "text": "and once we complete all of this",
    "start": "598740",
    "end": "601980"
  },
  {
    "text": "we still have to think more about",
    "start": "601980",
    "end": "603360"
  },
  {
    "text": "security",
    "start": "603360",
    "end": "604560"
  },
  {
    "text": "because when we started lib jpeg was a",
    "start": "604560",
    "end": "607740"
  },
  {
    "text": "trusted Library Firefox trusted lib JPEG",
    "start": "607740",
    "end": "610080"
  },
  {
    "text": "and a trusted lib jpegs outputs what",
    "start": "610080",
    "end": "612959"
  },
  {
    "text": "we've said now is lib jpack is sandbox",
    "start": "612959",
    "end": "614640"
  },
  {
    "text": "we don't trust it we shouldn't trust its",
    "start": "614640",
    "end": "617040"
  },
  {
    "text": "outputs meaning we now have to go back",
    "start": "617040",
    "end": "619560"
  },
  {
    "text": "to the Firefox code",
    "start": "619560",
    "end": "621240"
  },
  {
    "text": "find all the places lib jpeg's output",
    "start": "621240",
    "end": "623700"
  },
  {
    "text": "has been used and add some sort of",
    "start": "623700",
    "end": "625860"
  },
  {
    "text": "Sanity check or data sanitization there",
    "start": "625860",
    "end": "629519"
  },
  {
    "text": "and making all these checkout changes",
    "start": "629519",
    "end": "631980"
  },
  {
    "text": "gets really difficult and nice way to",
    "start": "631980",
    "end": "634140"
  },
  {
    "text": "see this is probably with an example so",
    "start": "634140",
    "end": "636480"
  },
  {
    "text": "let's look at some code",
    "start": "636480",
    "end": "639800"
  },
  {
    "text": "so that's a very simple 10 line example",
    "start": "640260",
    "end": "643080"
  },
  {
    "text": "of an application that renders images",
    "start": "643080",
    "end": "645120"
  },
  {
    "text": "with lip jpeg you don't have to read all",
    "start": "645120",
    "end": "647880"
  },
  {
    "text": "of that in great detail I think the",
    "start": "647880",
    "end": "649500"
  },
  {
    "text": "broad thing to keep in mind there is",
    "start": "649500",
    "end": "651120"
  },
  {
    "text": "there's an application that renders",
    "start": "651120",
    "end": "652620"
  },
  {
    "text": "images there are a couple of calls to",
    "start": "652620",
    "end": "654240"
  },
  {
    "text": "lib JPEG apis and we want to modify this",
    "start": "654240",
    "end": "657779"
  },
  {
    "text": "application to do all of the things we",
    "start": "657779",
    "end": "659640"
  },
  {
    "text": "just talked about marshalling API fixing",
    "start": "659640",
    "end": "662100"
  },
  {
    "text": "Security checks",
    "start": "662100",
    "end": "664500"
  },
  {
    "text": "so if we actually went ahead and did all",
    "start": "664500",
    "end": "667260"
  },
  {
    "text": "of those changes the resulting code is",
    "start": "667260",
    "end": "669540"
  },
  {
    "text": "going to look something like this",
    "start": "669540",
    "end": "672740"
  },
  {
    "text": "nearly every line of that code of code",
    "start": "673019",
    "end": "675600"
  },
  {
    "text": "has changed",
    "start": "675600",
    "end": "676740"
  },
  {
    "text": "and it is and if you if you actually uh",
    "start": "676740",
    "end": "679980"
  },
  {
    "text": "read what's there which I do not",
    "start": "679980",
    "end": "681540"
  },
  {
    "text": "recommend you're going to see that it's",
    "start": "681540",
    "end": "683220"
  },
  {
    "text": "almost impossible to understand",
    "start": "683220",
    "end": "685260"
  },
  {
    "text": "and here's the best best bit if you get",
    "start": "685260",
    "end": "688140"
  },
  {
    "text": "any of that wrong your security is",
    "start": "688140",
    "end": "690300"
  },
  {
    "text": "completely compromised like all of that",
    "start": "690300",
    "end": "692940"
  },
  {
    "text": "sandboxing counts for another",
    "start": "692940",
    "end": "694980"
  },
  {
    "text": "so this is where we found the Practical",
    "start": "694980",
    "end": "698040"
  },
  {
    "text": "challenges line and we really had a hard",
    "start": "698040",
    "end": "699839"
  },
  {
    "text": "time doing this by hand",
    "start": "699839",
    "end": "702000"
  },
  {
    "text": "and we basically came to the conclusion",
    "start": "702000",
    "end": "703860"
  },
  {
    "text": "that if we have to write code like this",
    "start": "703860",
    "end": "705660"
  },
  {
    "text": "it really Falls flat in practice",
    "start": "705660",
    "end": "708300"
  },
  {
    "text": "so even that 10 line example was",
    "start": "708300",
    "end": "710459"
  },
  {
    "text": "difficult to look at imagine doing that",
    "start": "710459",
    "end": "712260"
  },
  {
    "text": "for a real code base with tens of",
    "start": "712260",
    "end": "714060"
  },
  {
    "text": "thousands of lines of code for an image",
    "start": "714060",
    "end": "715680"
  },
  {
    "text": "renderer the diffs are going to be",
    "start": "715680",
    "end": "717360"
  },
  {
    "text": "insane",
    "start": "717360",
    "end": "718380"
  },
  {
    "text": "and and kind of the core problem here is",
    "start": "718380",
    "end": "722880"
  },
  {
    "text": "code like that exposes details of the",
    "start": "722880",
    "end": "725339"
  },
  {
    "text": "sandboxing in your feature code and what",
    "start": "725339",
    "end": "727800"
  },
  {
    "text": "we've done is we've mixed up security",
    "start": "727800",
    "end": "730019"
  },
  {
    "text": "and Feature work",
    "start": "730019",
    "end": "731459"
  },
  {
    "text": "and it really becomes unclear who even",
    "start": "731459",
    "end": "733560"
  },
  {
    "text": "should maintain this code at this point",
    "start": "733560",
    "end": "735000"
  },
  {
    "text": "is it the security team is it the",
    "start": "735000",
    "end": "736320"
  },
  {
    "text": "feature team what happens if you want to",
    "start": "736320",
    "end": "738180"
  },
  {
    "text": "update something who has to view it and",
    "start": "738180",
    "end": "740700"
  },
  {
    "text": "if if you want to add more features to",
    "start": "740700",
    "end": "742980"
  },
  {
    "text": "that code testing debugging",
    "start": "742980",
    "end": "745079"
  },
  {
    "text": "good luck",
    "start": "745079",
    "end": "746519"
  },
  {
    "text": "and even better we've ported that for",
    "start": "746519",
    "end": "749100"
  },
  {
    "text": "one API presumably we want to support",
    "start": "749100",
    "end": "751380"
  },
  {
    "text": "Windows Linux couple of platforms at",
    "start": "751380",
    "end": "753360"
  },
  {
    "text": "least repeat that one more time two more",
    "start": "753360",
    "end": "756000"
  },
  {
    "text": "times three more times and if you",
    "start": "756000",
    "end": "757920"
  },
  {
    "text": "somehow miraculously do all of this",
    "start": "757920",
    "end": "760079"
  },
  {
    "text": "repeat that for each Library you now",
    "start": "760079",
    "end": "762060"
  },
  {
    "text": "want to isolate and sandbox in this way",
    "start": "762060",
    "end": "765180"
  },
  {
    "text": "and we basically so we came to the",
    "start": "765180",
    "end": "767700"
  },
  {
    "text": "conclusion we can't do this by hand and",
    "start": "767700",
    "end": "769380"
  },
  {
    "text": "we weren't even alone in this so people",
    "start": "769380",
    "end": "771899"
  },
  {
    "text": "at Google also tried this and came to",
    "start": "771899",
    "end": "774360"
  },
  {
    "text": "pretty much the same conclusion as we",
    "start": "774360",
    "end": "775800"
  },
  {
    "text": "did this is really hard to do by hand",
    "start": "775800",
    "end": "779040"
  },
  {
    "text": "so to address this problem we built the",
    "start": "779040",
    "end": "782579"
  },
  {
    "text": "robox sandboxing framework",
    "start": "782579",
    "end": "785399"
  },
  {
    "text": "so IRL box is this Library framework",
    "start": "785399",
    "end": "788040"
  },
  {
    "text": "that's meant to simplify adoption of",
    "start": "788040",
    "end": "790860"
  },
  {
    "text": "sandboxing into your existing large code",
    "start": "790860",
    "end": "793920"
  },
  {
    "text": "base",
    "start": "793920",
    "end": "794760"
  },
  {
    "text": "and the core idea here is to use types",
    "start": "794760",
    "end": "798420"
  },
  {
    "text": "we use types to hide all the low level",
    "start": "798420",
    "end": "800279"
  },
  {
    "text": "details so ABI data marshalling all of",
    "start": "800279",
    "end": "803279"
  },
  {
    "text": "this stuff is automatically handled",
    "start": "803279",
    "end": "805560"
  },
  {
    "text": "we use types to track untrusted data and",
    "start": "805560",
    "end": "808200"
  },
  {
    "text": "control flow so if you're missing",
    "start": "808200",
    "end": "809820"
  },
  {
    "text": "Security checks you will get a compile",
    "start": "809820",
    "end": "811500"
  },
  {
    "text": "error which is really nice",
    "start": "811500",
    "end": "813540"
  },
  {
    "text": "and we use types to even let you",
    "start": "813540",
    "end": "815579"
  },
  {
    "text": "identify and make changes to code",
    "start": "815579",
    "end": "817560"
  },
  {
    "text": "incrementally",
    "start": "817560",
    "end": "819240"
  },
  {
    "text": "line by line and you can even pause and",
    "start": "819240",
    "end": "821279"
  },
  {
    "text": "test their application",
    "start": "821279",
    "end": "823019"
  },
  {
    "text": "and the really cool bit of all this is",
    "start": "823019",
    "end": "824820"
  },
  {
    "text": "robox is a PRC plus Library so you can",
    "start": "824820",
    "end": "827399"
  },
  {
    "text": "drop it into your application without",
    "start": "827399",
    "end": "828839"
  },
  {
    "text": "changing your compiler build systems any",
    "start": "828839",
    "end": "830880"
  },
  {
    "text": "of that stuff it should just work",
    "start": "830880",
    "end": "833519"
  },
  {
    "text": "and at a high level all box is pretty",
    "start": "833519",
    "end": "835680"
  },
  {
    "text": "simple there are just three principles",
    "start": "835680",
    "end": "837720"
  },
  {
    "text": "the first is control flow should be",
    "start": "837720",
    "end": "839940"
  },
  {
    "text": "explicit so if you make a function call",
    "start": "839940",
    "end": "841740"
  },
  {
    "text": "to a API to a library like lip jpeg",
    "start": "841740",
    "end": "844740"
  },
  {
    "text": "which you want to sandbox you have to go",
    "start": "844740",
    "end": "846839"
  },
  {
    "text": "through this API called sandbox.inbook",
    "start": "846839",
    "end": "850740"
  },
  {
    "text": "and is RL box is uh forces any data",
    "start": "850800",
    "end": "855240"
  },
  {
    "text": "coming out of the sandbox to be marked",
    "start": "855240",
    "end": "857339"
  },
  {
    "text": "distincted so if you access the size of",
    "start": "857339",
    "end": "860279"
  },
  {
    "text": "the jpeg image which is output by",
    "start": "860279",
    "end": "862800"
  },
  {
    "text": "lib.jpg you're not going to get a u32",
    "start": "862800",
    "end": "865019"
  },
  {
    "text": "you're going to you're going to get a",
    "start": "865019",
    "end": "866700"
  },
  {
    "text": "tainted u32",
    "start": "866700",
    "end": "868200"
  },
  {
    "text": "oh and I should point out if you mess up",
    "start": "868200",
    "end": "870720"
  },
  {
    "text": "in making any of these changes RL box",
    "start": "870720",
    "end": "872880"
  },
  {
    "text": "will force a compile error so you have",
    "start": "872880",
    "end": "874860"
  },
  {
    "text": "to get this right there's no way to get",
    "start": "874860",
    "end": "876120"
  },
  {
    "text": "this wrong",
    "start": "876120",
    "end": "877440"
  },
  {
    "text": "and finally once you've done this",
    "start": "877440",
    "end": "880139"
  },
  {
    "text": "the third principle is you need to make",
    "start": "880139",
    "end": "882240"
  },
  {
    "text": "sure all tainted data is checked before",
    "start": "882240",
    "end": "884279"
  },
  {
    "text": "use so if we now take this previous size",
    "start": "884279",
    "end": "886800"
  },
  {
    "text": "which is Tainted and stick it into a mem",
    "start": "886800",
    "end": "888660"
  },
  {
    "text": "copy operation you're going to get a",
    "start": "888660",
    "end": "890040"
  },
  {
    "text": "compile error the way to fix that is to",
    "start": "890040",
    "end": "892800"
  },
  {
    "text": "call this API called copy and verify and",
    "start": "892800",
    "end": "895800"
  },
  {
    "text": "what what that gives you a chance to do",
    "start": "895800",
    "end": "897720"
  },
  {
    "text": "is sanitize this data and once you do",
    "start": "897720",
    "end": "899639"
  },
  {
    "text": "that the tainting is removed and that",
    "start": "899639",
    "end": "901380"
  },
  {
    "text": "will compile",
    "start": "901380",
    "end": "903180"
  },
  {
    "text": "and again let's go back to that same",
    "start": "903180",
    "end": "905579"
  },
  {
    "text": "example and apply these three principles",
    "start": "905579",
    "end": "907980"
  },
  {
    "text": "our goal is to migrate the code in the",
    "start": "907980",
    "end": "910019"
  },
  {
    "text": "same way that we did before except this",
    "start": "910019",
    "end": "911820"
  },
  {
    "text": "time with robox and these three",
    "start": "911820",
    "end": "913320"
  },
  {
    "text": "principles and I'm going to start with",
    "start": "913320",
    "end": "915480"
  },
  {
    "text": "just the first two there",
    "start": "915480",
    "end": "917339"
  },
  {
    "text": "if I were to make the changes for those",
    "start": "917339",
    "end": "919440"
  },
  {
    "text": "first two principles which is",
    "start": "919440",
    "end": "920720"
  },
  {
    "text": "sandbox.invoke and tainted data",
    "start": "920720",
    "end": "923399"
  },
  {
    "text": "the code is going to look like this",
    "start": "923399",
    "end": "925740"
  },
  {
    "text": "and with even without reading it",
    "start": "925740",
    "end": "927420"
  },
  {
    "text": "hopefully you can see right away that",
    "start": "927420",
    "end": "928800"
  },
  {
    "text": "it's a little bit cleaner it's a little",
    "start": "928800",
    "end": "930120"
  },
  {
    "text": "bit easier to read",
    "start": "930120",
    "end": "931980"
  },
  {
    "text": "and all of this is because robox is",
    "start": "931980",
    "end": "934860"
  },
  {
    "text": "automating a lot of things behind the",
    "start": "934860",
    "end": "936600"
  },
  {
    "text": "scenes all of that API craft all of the",
    "start": "936600",
    "end": "938880"
  },
  {
    "text": "data marshalling that goes away",
    "start": "938880",
    "end": "940920"
  },
  {
    "text": "it's even able to automate some of the",
    "start": "940920",
    "end": "943139"
  },
  {
    "text": "required bounce checks that you need to",
    "start": "943139",
    "end": "944760"
  },
  {
    "text": "have so uh in that example there you",
    "start": "944760",
    "end": "948300"
  },
  {
    "text": "actually need a bounce check because you",
    "start": "948300",
    "end": "949860"
  },
  {
    "text": "are dereferencing a pointer that lib",
    "start": "949860",
    "end": "951959"
  },
  {
    "text": "jpeg has given you so this is Security",
    "start": "951959",
    "end": "953639"
  },
  {
    "text": "check involved usually when you have to",
    "start": "953639",
    "end": "955019"
  },
  {
    "text": "do that",
    "start": "955019",
    "end": "956399"
  },
  {
    "text": "um and so now that we've done we're done",
    "start": "956399",
    "end": "959699"
  },
  {
    "text": "with these first two principles let's",
    "start": "959699",
    "end": "961139"
  },
  {
    "text": "focus in on the third bit which is",
    "start": "961139",
    "end": "963240"
  },
  {
    "text": "Tainted data must be checked",
    "start": "963240",
    "end": "965880"
  },
  {
    "text": "so if we look at that principle we'll",
    "start": "965880",
    "end": "968279"
  },
  {
    "text": "see that this variable size at the",
    "start": "968279",
    "end": "971040"
  },
  {
    "text": "bottom is Tainted",
    "start": "971040",
    "end": "973440"
  },
  {
    "text": "and the reason it's tainted is it's",
    "start": "973440",
    "end": "975360"
  },
  {
    "text": "Computing the number of pixels the image",
    "start": "975360",
    "end": "977880"
  },
  {
    "text": "would have based on jpeg image metadata",
    "start": "977880",
    "end": "980279"
  },
  {
    "text": "which itself comes from lib jpeg so it",
    "start": "980279",
    "end": "982260"
  },
  {
    "text": "makes sense it should be tainted",
    "start": "982260",
    "end": "984000"
  },
  {
    "text": "and size is being used again in a mem",
    "start": "984000",
    "end": "985860"
  },
  {
    "text": "copy later on so we need to validate it",
    "start": "985860",
    "end": "989399"
  },
  {
    "text": "and to get all of this to compile",
    "start": "989399",
    "end": "992100"
  },
  {
    "text": "we should validate this and remove the",
    "start": "992100",
    "end": "994199"
  },
  {
    "text": "tainting and we can in this case if we",
    "start": "994199",
    "end": "996480"
  },
  {
    "text": "stare at this code a little bit we can",
    "start": "996480",
    "end": "998639"
  },
  {
    "text": "identify what sort of security check we",
    "start": "998639",
    "end": "1000320"
  },
  {
    "text": "want",
    "start": "1000320",
    "end": "1001040"
  },
  {
    "text": "the main thing we want to make sure is",
    "start": "1001040",
    "end": "1002899"
  },
  {
    "text": "that when we copy data out we don't go",
    "start": "1002899",
    "end": "1006560"
  },
  {
    "text": "past the end of the output buffer so",
    "start": "1006560",
    "end": "1008360"
  },
  {
    "text": "let's add that security check",
    "start": "1008360",
    "end": "1010519"
  },
  {
    "text": "we call Copy and verify make sure that",
    "start": "1010519",
    "end": "1013220"
  },
  {
    "text": "the value of size is less than the",
    "start": "1013220",
    "end": "1015380"
  },
  {
    "text": "output buffer size",
    "start": "1015380",
    "end": "1016940"
  },
  {
    "text": "and then we use this checked value in",
    "start": "1016940",
    "end": "1018920"
  },
  {
    "text": "the mem copy operation and at this point",
    "start": "1018920",
    "end": "1021079"
  },
  {
    "text": "everything should compile",
    "start": "1021079",
    "end": "1023899"
  },
  {
    "text": "and this is really what our box brings",
    "start": "1023899",
    "end": "1025640"
  },
  {
    "text": "to the table it brings some sort of",
    "start": "1025640",
    "end": "1027678"
  },
  {
    "text": "closure to this process of modifying",
    "start": "1027679",
    "end": "1029600"
  },
  {
    "text": "code because if you compile this code",
    "start": "1029600",
    "end": "1032720"
  },
  {
    "text": "and your six or other if you're",
    "start": "1032720",
    "end": "1034520"
  },
  {
    "text": "successfully able to compile this code",
    "start": "1034520",
    "end": "1036199"
  },
  {
    "text": "this is robox's way of telling you",
    "start": "1036199",
    "end": "1038839"
  },
  {
    "text": "you're done with sandboxing you're yeah",
    "start": "1038839",
    "end": "1041178"
  },
  {
    "text": "this should work",
    "start": "1041179",
    "end": "1043100"
  },
  {
    "text": "and in effect the takeaway here is when",
    "start": "1043100",
    "end": "1046280"
  },
  {
    "text": "we use webassembly and arrow box we get",
    "start": "1046280",
    "end": "1048438"
  },
  {
    "text": "the two things we are looking for",
    "start": "1048439",
    "end": "1050360"
  },
  {
    "text": "which is fast sandboxing and low",
    "start": "1050360",
    "end": "1053480"
  },
  {
    "text": "engineering effort",
    "start": "1053480",
    "end": "1055160"
  },
  {
    "text": "and to really give you a sense of what",
    "start": "1055160",
    "end": "1057679"
  },
  {
    "text": "this looks like in practice I'm just",
    "start": "1057679",
    "end": "1059780"
  },
  {
    "text": "going to very very briefly tell you",
    "start": "1059780",
    "end": "1061160"
  },
  {
    "text": "about our experiences deploying",
    "start": "1061160",
    "end": "1063860"
  },
  {
    "text": "in-process sandboxing using robox",
    "start": "1063860",
    "end": "1067460"
  },
  {
    "text": "so the first thing we did and first",
    "start": "1067460",
    "end": "1069860"
  },
  {
    "text": "thing we should always do When",
    "start": "1069860",
    "end": "1070820"
  },
  {
    "text": "developing a new framework is try it out",
    "start": "1070820",
    "end": "1072620"
  },
  {
    "text": "so we tested a whole bunch of",
    "start": "1072620",
    "end": "1074600"
  },
  {
    "text": "applications to sandbox several",
    "start": "1074600",
    "end": "1076880"
  },
  {
    "text": "libraries so applications like Firefox",
    "start": "1076880",
    "end": "1078799"
  },
  {
    "text": "node.js Apache and so on and we",
    "start": "1078799",
    "end": "1081559"
  },
  {
    "text": "sandboxed several different classes of",
    "start": "1081559",
    "end": "1083539"
  },
  {
    "text": "libraries image and font rendering audio",
    "start": "1083539",
    "end": "1086120"
  },
  {
    "text": "video playback XML parsing there's a",
    "start": "1086120",
    "end": "1088280"
  },
  {
    "text": "whole list",
    "start": "1088280",
    "end": "1089660"
  },
  {
    "text": "and broadly what we saw is that IRL box",
    "start": "1089660",
    "end": "1093380"
  },
  {
    "text": "is able to automate away hundreds of",
    "start": "1093380",
    "end": "1096140"
  },
  {
    "text": "lines of glue code to do with all of the",
    "start": "1096140",
    "end": "1098299"
  },
  {
    "text": "same ABI marshalling and even Security",
    "start": "1098299",
    "end": "1100400"
  },
  {
    "text": "checks and what's left for us is pretty",
    "start": "1100400",
    "end": "1102860"
  },
  {
    "text": "much like what you saw a few pieces of",
    "start": "1102860",
    "end": "1105200"
  },
  {
    "text": "Tainted data that we need to validate",
    "start": "1105200",
    "end": "1106760"
  },
  {
    "text": "typically at most two to four lines of",
    "start": "1106760",
    "end": "1109039"
  },
  {
    "text": "code for this validation",
    "start": "1109039",
    "end": "1110900"
  },
  {
    "text": "and what this lets us do is sandbox a",
    "start": "1110900",
    "end": "1114380"
  },
  {
    "text": "library in any one of these applications",
    "start": "1114380",
    "end": "1115820"
  },
  {
    "text": "in just a matter of a few days",
    "start": "1115820",
    "end": "1118220"
  },
  {
    "text": "with a confidence that we've actually",
    "start": "1118220",
    "end": "1120140"
  },
  {
    "text": "gotten it right",
    "start": "1120140",
    "end": "1122299"
  },
  {
    "text": "and at this point we actually turn",
    "start": "1122299",
    "end": "1124760"
  },
  {
    "text": "towards deployment we wanted to make",
    "start": "1124760",
    "end": "1126380"
  },
  {
    "text": "this production and deployment ready",
    "start": "1126380",
    "end": "1129080"
  },
  {
    "text": "so we worked uh worked for a while and",
    "start": "1129080",
    "end": "1132440"
  },
  {
    "text": "in February 2020 we actually did this we",
    "start": "1132440",
    "end": "1134840"
  },
  {
    "text": "actually managed to ship RL box in the",
    "start": "1134840",
    "end": "1137360"
  },
  {
    "text": "Firefox web browser and we started very",
    "start": "1137360",
    "end": "1139940"
  },
  {
    "text": "small sandboxing just one library on",
    "start": "1139940",
    "end": "1142760"
  },
  {
    "text": "just a couple of platforms just Mac and",
    "start": "1142760",
    "end": "1144559"
  },
  {
    "text": "just Linux",
    "start": "1144559",
    "end": "1145820"
  },
  {
    "text": "and over the course of like two years",
    "start": "1145820",
    "end": "1148520"
  },
  {
    "text": "since then we've been working on",
    "start": "1148520",
    "end": "1150020"
  },
  {
    "text": "improving performance portability",
    "start": "1150020",
    "end": "1152059"
  },
  {
    "text": "debugging a whole bunch of things and as",
    "start": "1152059",
    "end": "1154880"
  },
  {
    "text": "of this year we've actually sandboxed a",
    "start": "1154880",
    "end": "1157520"
  },
  {
    "text": "handful of libraries across all",
    "start": "1157520",
    "end": "1159559"
  },
  {
    "text": "platforms that Firefox supports and this",
    "start": "1159559",
    "end": "1162320"
  },
  {
    "text": "includes Android as well",
    "start": "1162320",
    "end": "1165580"
  },
  {
    "text": "and as far",
    "start": "1165799",
    "end": "1168460"
  },
  {
    "text": "uh make sure that our sandboxing didn't",
    "start": "1169460",
    "end": "1171320"
  },
  {
    "text": "introduce very large overheads so we",
    "start": "1171320",
    "end": "1173780"
  },
  {
    "text": "measured a couple of the high value use",
    "start": "1173780",
    "end": "1175520"
  },
  {
    "text": "cases in Firefox so we measured XML",
    "start": "1175520",
    "end": "1178280"
  },
  {
    "text": "passing sandboxing XML parsing and font",
    "start": "1178280",
    "end": "1180919"
  },
  {
    "text": "decompression and broadly we see that",
    "start": "1180919",
    "end": "1183679"
  },
  {
    "text": "that's around 10 percent",
    "start": "1183679",
    "end": "1185840"
  },
  {
    "text": "and this allows us to make a security",
    "start": "1185840",
    "end": "1188000"
  },
  {
    "text": "versus performance trade-off that's",
    "start": "1188000",
    "end": "1189799"
  },
  {
    "text": "sensible for our application for a",
    "start": "1189799",
    "end": "1191960"
  },
  {
    "text": "browser these two are just one of the",
    "start": "1191960",
    "end": "1194299"
  },
  {
    "text": "billion things that a browser does so 10",
    "start": "1194299",
    "end": "1196760"
  },
  {
    "text": "on one of the billion things is not",
    "start": "1196760",
    "end": "1199100"
  },
  {
    "text": "something that's perceivable by the end",
    "start": "1199100",
    "end": "1200660"
  },
  {
    "text": "user so we are actually okay with this",
    "start": "1200660",
    "end": "1202400"
  },
  {
    "text": "so this works really really well and we",
    "start": "1202400",
    "end": "1204679"
  },
  {
    "text": "actually did deploy all of this",
    "start": "1204679",
    "end": "1207940"
  },
  {
    "text": "and we aren't done we are working on a",
    "start": "1208280",
    "end": "1211160"
  },
  {
    "text": "whole bunch of things uh improving uh",
    "start": "1211160",
    "end": "1213380"
  },
  {
    "text": "several things on the performance side",
    "start": "1213380",
    "end": "1215660"
  },
  {
    "text": "we are uh still waiting on things like",
    "start": "1215660",
    "end": "1218840"
  },
  {
    "text": "uh threading to be fully standardized on",
    "start": "1218840",
    "end": "1220880"
  },
  {
    "text": "webassembly and we're trying to keep on",
    "start": "1220880",
    "end": "1222860"
  },
  {
    "text": "top of adopting these things into the",
    "start": "1222860",
    "end": "1224720"
  },
  {
    "text": "library sandboxing world as well so that",
    "start": "1224720",
    "end": "1226880"
  },
  {
    "text": "when we sandbox libraries that need",
    "start": "1226880",
    "end": "1228679"
  },
  {
    "text": "these features they work as expected",
    "start": "1228679",
    "end": "1232039"
  },
  {
    "text": "we've also done a ton of work",
    "start": "1232039",
    "end": "1233679"
  },
  {
    "text": "contributing back to sandboxing Tool",
    "start": "1233679",
    "end": "1235880"
  },
  {
    "text": "chains to make sure they work well on",
    "start": "1235880",
    "end": "1237559"
  },
  {
    "text": "low resource environments so 32-bit",
    "start": "1237559",
    "end": "1240380"
  },
  {
    "text": "architectures like Intel 32 arm32 and so",
    "start": "1240380",
    "end": "1242900"
  },
  {
    "text": "on and",
    "start": "1242900",
    "end": "1244520"
  },
  {
    "text": "one of the challenges there which we've",
    "start": "1244520",
    "end": "1246860"
  },
  {
    "text": "made some progress on and but we're",
    "start": "1246860",
    "end": "1248360"
  },
  {
    "text": "still addressing is it's not just the",
    "start": "1248360",
    "end": "1250640"
  },
  {
    "text": "memory footprint it is the virtual",
    "start": "1250640",
    "end": "1252860"
  },
  {
    "text": "memory footprint virtual memory is also",
    "start": "1252860",
    "end": "1254600"
  },
  {
    "text": "a premium in platforms with 32-bit",
    "start": "1254600",
    "end": "1256760"
  },
  {
    "text": "pointers so we are doing some work",
    "start": "1256760",
    "end": "1258860"
  },
  {
    "text": "trying to improve all of that as well",
    "start": "1258860",
    "end": "1261500"
  },
  {
    "text": "um and finally on the usability space",
    "start": "1261500",
    "end": "1264080"
  },
  {
    "text": "we're also revamping the robox API we're",
    "start": "1264080",
    "end": "1267080"
  },
  {
    "text": "trying to make it confirm with all of",
    "start": "1267080",
    "end": "1268820"
  },
  {
    "text": "the modern C plus idioms as they evolve",
    "start": "1268820",
    "end": "1271039"
  },
  {
    "text": "and there's a bunch of work we're doing",
    "start": "1271039",
    "end": "1272660"
  },
  {
    "text": "on the space to make it easier to use as",
    "start": "1272660",
    "end": "1274160"
  },
  {
    "text": "well",
    "start": "1274160",
    "end": "1276340"
  },
  {
    "text": "and so if all of that looks interesting",
    "start": "1276620",
    "end": "1278539"
  },
  {
    "text": "to you",
    "start": "1278539",
    "end": "1279740"
  },
  {
    "text": "try it out help us get this right use it",
    "start": "1279740",
    "end": "1282919"
  },
  {
    "text": "in your application and let us know what",
    "start": "1282919",
    "end": "1285260"
  },
  {
    "text": "worked what didn't",
    "start": "1285260",
    "end": "1287200"
  },
  {
    "text": "and if you're more on the attack side of",
    "start": "1287200",
    "end": "1289580"
  },
  {
    "text": "things let me point out that robox is",
    "start": "1289580",
    "end": "1292460"
  },
  {
    "text": "actually covered",
    "start": "1292460",
    "end": "1293900"
  },
  {
    "text": "under firefox's bug Bounty and it's",
    "start": "1293900",
    "end": "1296240"
  },
  {
    "text": "covered as like a sandboxing bug Bounty",
    "start": "1296240",
    "end": "1298520"
  },
  {
    "text": "which means you get to start by adding a",
    "start": "1298520",
    "end": "1300559"
  },
  {
    "text": "memory corruption into your favorite",
    "start": "1300559",
    "end": "1302539"
  },
  {
    "text": "Library that's sandboxed and if you can",
    "start": "1302539",
    "end": "1304820"
  },
  {
    "text": "escape the sandbox you get the bug",
    "start": "1304820",
    "end": "1307100"
  },
  {
    "text": "bounty",
    "start": "1307100",
    "end": "1309620"
  },
  {
    "text": "so uh let me briefly conclude uh by",
    "start": "1309620",
    "end": "1314840"
  },
  {
    "text": "saying in process sandboxing is this",
    "start": "1314840",
    "end": "1317480"
  },
  {
    "text": "technique it's a practical technique to",
    "start": "1317480",
    "end": "1319159"
  },
  {
    "text": "secure the native code in your in your",
    "start": "1319159",
    "end": "1321140"
  },
  {
    "text": "application",
    "start": "1321140",
    "end": "1322280"
  },
  {
    "text": "it is an idea that's been around for 30",
    "start": "1322280",
    "end": "1323900"
  },
  {
    "text": "years and it's seeing production for the",
    "start": "1323900",
    "end": "1325520"
  },
  {
    "text": "first time because we now have the tools",
    "start": "1325520",
    "end": "1327260"
  },
  {
    "text": "to deploy this and use this RL box is",
    "start": "1327260",
    "end": "1330500"
  },
  {
    "text": "the framework we built to actually use",
    "start": "1330500",
    "end": "1331880"
  },
  {
    "text": "in process sandboxing and simplify the",
    "start": "1331880",
    "end": "1334039"
  },
  {
    "text": "adoption of in-process sandboxing into",
    "start": "1334039",
    "end": "1336500"
  },
  {
    "text": "your application",
    "start": "1336500",
    "end": "1337820"
  },
  {
    "text": "and robox is a production ready tool",
    "start": "1337820",
    "end": "1340039"
  },
  {
    "text": "it's being used by Firefox it's been",
    "start": "1340039",
    "end": "1342020"
  },
  {
    "text": "used for the last two years and this is",
    "start": "1342020",
    "end": "1343880"
  },
  {
    "text": "hopefully something you can use in your",
    "start": "1343880",
    "end": "1345500"
  },
  {
    "text": "applications as well",
    "start": "1345500",
    "end": "1347179"
  },
  {
    "text": "so thanks thank you everyone for for",
    "start": "1347179",
    "end": "1349760"
  },
  {
    "text": "your attention",
    "start": "1349760",
    "end": "1351310"
  },
  {
    "text": "[Music]",
    "start": "1351310",
    "end": "1354420"
  },
  {
    "text": "[Music]",
    "start": "1358260",
    "end": "1361369"
  }
]