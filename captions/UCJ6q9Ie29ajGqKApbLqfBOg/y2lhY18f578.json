[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "I like to introduce Chris we'll be speaking on full system emulation achieving success automated Dynamic",
    "start": "0",
    "end": "6120"
  },
  {
    "text": "analysis of evasive malware",
    "start": "6120",
    "end": "9859"
  },
  {
    "text": "all right so thanks for the introduction I'm talking to you about Dynamic malware",
    "start": "15139",
    "end": "20520"
  },
  {
    "text": "analysis and the challenges that we face when doing so as well as potential ways",
    "start": "20520",
    "end": "25859"
  },
  {
    "text": "in which we can circumvent work around those challenges that the attackers throw at us before I get started just a one minute",
    "start": "25859",
    "end": "33300"
  },
  {
    "text": "background what what's my um basically way up here so I'm currently",
    "start": "33300",
    "end": "39059"
  },
  {
    "text": "the chief scientist and one of the co-founders of last line last one is a company vendor that works on providing",
    "start": "39059",
    "end": "46739"
  },
  {
    "text": "solutions for advanced threats and advanced malware and it really started",
    "start": "46739",
    "end": "51840"
  },
  {
    "text": "out as an effort to commercialize some of our work some of our efforts that I",
    "start": "51840",
    "end": "57120"
  },
  {
    "text": "was involved in previously at the University so I'm having academic background I'm currently on leave from",
    "start": "57120",
    "end": "63120"
  },
  {
    "text": "the University of California in Santa Barbara and some of you might have heard of the Anubis and the Weber web systems",
    "start": "63120",
    "end": "69659"
  },
  {
    "text": "which are two systems one for the analysis of malware and the other for the analysis of exploit kids and",
    "start": "69659",
    "end": "76799"
  },
  {
    "text": "JavaScript in malicious web pages that really sort of we're driving our",
    "start": "76799",
    "end": "82560"
  },
  {
    "text": "interest and our work in this area for for many years so what does this talk about um I want",
    "start": "82560",
    "end": "90360"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "to talk about an automated malware analysis in particular how can we Implement an environment that allows us",
    "start": "90360",
    "end": "97140"
  },
  {
    "text": "to to analyze programs unknown programs and to detect if they are malicious as",
    "start": "97140",
    "end": "103320"
  },
  {
    "text": "well as to provide forensics information that helps us to understand what types of malicious activities",
    "start": "103320",
    "end": "110060"
  },
  {
    "text": "programs might be involved in and um basically I'll talk about different ways",
    "start": "110060",
    "end": "116520"
  },
  {
    "text": "in which we can build these systems and then want to highlight one particular threat which is evasive evasion and",
    "start": "116520",
    "end": "123240"
  },
  {
    "text": "evasive code because of course in security we typically face an arms race and when we try to build better systems",
    "start": "123240",
    "end": "130560"
  },
  {
    "text": "that allow us to detect more malware that allow us to detect more sophisticated malware of course attack",
    "start": "130560",
    "end": "136860"
  },
  {
    "text": "attackers react to this and they want to make sure that our job as Defenders is",
    "start": "136860",
    "end": "141959"
  },
  {
    "text": "becoming harder and they can fly under the radar and evasive threats are a particular problem for dynamic analysis",
    "start": "141959",
    "end": "148860"
  },
  {
    "text": "environments like sandboxes and I want to spend some time on just telling you a",
    "start": "148860",
    "end": "154020"
  },
  {
    "text": "number of ways that we have seen in which attackers try to identify and bypass detection and Analysis in",
    "start": "154020",
    "end": "161220"
  },
  {
    "text": "sandboxes but I don't want to just stop there I actually want to end on a on a more optimistic note by telling you some",
    "start": "161220",
    "end": "167580"
  },
  {
    "text": "ways in which we believe that we can build some counter counter measures in",
    "start": "167580",
    "end": "173280"
  },
  {
    "text": "which we can maybe and combat entire classes of evasion and",
    "start": "173280",
    "end": "179519"
  },
  {
    "text": "find ways in which we can turn the table and maybe use the fact that a program tries to launch some evasive behaviors",
    "start": "179519",
    "end": "186720"
  },
  {
    "text": "as an additional signal that actually allows us to detect that it's doing something bad so these are sort of the three different",
    "start": "186720",
    "end": "193980"
  },
  {
    "text": "parts that I want to talk about let me just set maybe um",
    "start": "193980",
    "end": "199440"
  },
  {
    "text": "spent two minutes to set the stage why why do I believe that automated malware analysis is important it's really the",
    "start": "199440",
    "end": "205980"
  },
  {
    "start": "204000",
    "end": "204000"
  },
  {
    "text": "result of of two Trends and I'm sure you have seen one of these slides you know in many talks or in many different forms",
    "start": "205980",
    "end": "214019"
  },
  {
    "text": "it basically shows that attackers have moved on from just you know hacking for",
    "start": "214019",
    "end": "219120"
  },
  {
    "text": "fun to hacking for profit to even hacking to obtain intellectual property or state secrets",
    "start": "219120",
    "end": "226799"
  },
  {
    "text": "and as part of that evolution of of the threat landscape and malware malware",
    "start": "226799",
    "end": "232440"
  },
  {
    "text": "authors have become more sophisticated and can invest more resources to a Target malware specifically to a",
    "start": "232440",
    "end": "239459"
  },
  {
    "text": "particular organization that they want to attack and you know when you target something then it becomes very difficult",
    "start": "239459",
    "end": "246299"
  },
  {
    "text": "for a defense solution that relies on having seen a particular malware somewhere else to be creating a",
    "start": "246299",
    "end": "251640"
  },
  {
    "text": "signature to actually have a signature for that so the fact that it's being targeted makes it much harder to to you",
    "start": "251640",
    "end": "257820"
  },
  {
    "text": "know rely on traditional signatures and on reputation information but but they're also more sophisticated it means",
    "start": "257820",
    "end": "264060"
  },
  {
    "text": "they can invest in um of course reconnaissance of the target but also in crafting malware that",
    "start": "264060",
    "end": "270300"
  },
  {
    "text": "is using tricks to evade a Sandbox that the defender might use so so that's one",
    "start": "270300",
    "end": "276900"
  },
  {
    "text": "problem the evolution of malware to becoming more sophisticated and more targeted but also there's the problem",
    "start": "276900",
    "end": "282720"
  },
  {
    "text": "that there's really a lot of malware out there and it takes a long time to do manual analysis so you know if you have",
    "start": "282720",
    "end": "290759"
  },
  {
    "text": "done work on metal analysis you might have seen you know you launch it in a debugger and you use the number of",
    "start": "290759",
    "end": "297000"
  },
  {
    "text": "system tools to analyze maybe the processes or the network traffic or the",
    "start": "297000",
    "end": "302040"
  },
  {
    "text": "registry keys and it takes you a long time you know if you are working in incidence response or if you're working",
    "start": "302040",
    "end": "308340"
  },
  {
    "text": "in in manual reverse engineering of malware it just takes a long time to understand what malware is up to and",
    "start": "308340",
    "end": "315000"
  },
  {
    "text": "what the capabilities of a piece of malware are and if you combine that with another graph I'm sure you've seen tons",
    "start": "315000",
    "end": "320880"
  },
  {
    "text": "of times sort of these exponential growth of the number of threads then we can really see where the problem is",
    "start": "320880",
    "end": "326039"
  },
  {
    "text": "there's a lot of malware and it takes a long time to analyze it by hand and it becomes more sophisticated and more",
    "start": "326039",
    "end": "332580"
  },
  {
    "text": "targeted so we really ought to have some mechanisms some general technique that",
    "start": "332580",
    "end": "338699"
  },
  {
    "text": "tries to to put something against this threat and you know a very important",
    "start": "338699",
    "end": "344460"
  },
  {
    "text": "class of tools are sandboxes Dynamic analysis environments",
    "start": "344460",
    "end": "350240"
  },
  {
    "text": "I just want to sort of give you a little bit of a stepping aside to your side",
    "start": "350240",
    "end": "355320"
  },
  {
    "text": "note we are mostly talking here about the analysis of the classic Intel x86",
    "start": "355320",
    "end": "361020"
  },
  {
    "text": "malware you know other malware for example those written for Android",
    "start": "361020",
    "end": "366139"
  },
  {
    "text": "might be more amendable to static analysis because you know it's no longer code that can you know",
    "start": "366139",
    "end": "373800"
  },
  {
    "text": "write new instructions during the runtime the obfuscate itself it's much",
    "start": "373800",
    "end": "379320"
  },
  {
    "text": "harder for malware authors on a dialogic environment to use a lot of these",
    "start": "379320",
    "end": "385199"
  },
  {
    "text": "obfuscation tricks that they use to combat static analysis for x86 binaries",
    "start": "385199",
    "end": "390960"
  },
  {
    "text": "so we are mostly focusing here on sort of the the classic malware that is written with the idea of running on",
    "start": "390960",
    "end": "398100"
  },
  {
    "text": "maybe Windows or Mac for the x86 and for those a dynamic analysis environment the",
    "start": "398100",
    "end": "403500"
  },
  {
    "text": "sandbox is really in my opinion the best most powerful option to understand what",
    "start": "403500",
    "end": "409319"
  },
  {
    "text": "such a program might be doing and the general idea is simple you basically take the program and you run it and you",
    "start": "409319",
    "end": "414900"
  },
  {
    "text": "observe what it's doing so you need some kind of instrumentation some instrumental environment in which you",
    "start": "414900",
    "end": "420419"
  },
  {
    "text": "can safely execute the program and you need ways to observe ways to understand what this program is what this program",
    "start": "420419",
    "end": "428220"
  },
  {
    "text": "is doing and you know the fact that you can do this in an automated way is great because you don't have to you know",
    "start": "428220",
    "end": "433680"
  },
  {
    "text": "expand manual labor so we can stem the flood we can scale up to the the number",
    "start": "433680",
    "end": "439080"
  },
  {
    "text": "of samples that we receive but and that's also I think a very cool advantage that you know leads more and",
    "start": "439080",
    "end": "447120"
  },
  {
    "text": "more security vendors to embrace sandboxing it's the ability to handle a targeted or previously unknown attack",
    "start": "447120",
    "end": "453020"
  },
  {
    "text": "because you don't need a signature you don't have to have seen a particular",
    "start": "453020",
    "end": "458039"
  },
  {
    "text": "program before you can make the decision on the spot you run the program you see",
    "start": "458039",
    "end": "463319"
  },
  {
    "text": "in a very generic way if it's doing something bad and then you can flag this program as malicious even though you",
    "start": "463319",
    "end": "469800"
  },
  {
    "text": "might not have seen it before or you might not have seen the source as being suspicious so so that's great let's talk",
    "start": "469800",
    "end": "477960"
  },
  {
    "text": "about different ways in which you can implement it we said it's a it's an instrumented",
    "start": "477960",
    "end": "483180"
  },
  {
    "text": "environment that wants to monitor the activity that operation of programs so what what can we can we monitor you know",
    "start": "483180",
    "end": "490560"
  },
  {
    "start": "490000",
    "end": "490000"
  },
  {
    "text": "in the simplest case we just monitor persistent changes to the operating system you know after the execution of a",
    "start": "490560",
    "end": "497880"
  },
  {
    "text": "program is there a new file did that program create some Network traffic that",
    "start": "497880",
    "end": "502919"
  },
  {
    "text": "we want to analyze um so you know you get high level information of a sample has been written",
    "start": "502919",
    "end": "508259"
  },
  {
    "text": "or you know some network connection has happened or a registry key was created or modified and in principle you know",
    "start": "508259",
    "end": "514260"
  },
  {
    "text": "that is really the very basic sandbox would be would be simple to implement you can actually even use",
    "start": "514260",
    "end": "520320"
  },
  {
    "text": "um a bare metal sort of a normal uh operating system are not nothing special",
    "start": "520320",
    "end": "526320"
  },
  {
    "text": "no special instrumentation you can basically run the program and after the program has stopped or after you",
    "start": "526320",
    "end": "532260"
  },
  {
    "text": "terminate the program you just look at the changes that have happened to the file system at the registry and you know",
    "start": "532260",
    "end": "538740"
  },
  {
    "text": "you can of course observe the network traffic that is produced um it's easy but it also doesn't provide",
    "start": "538740",
    "end": "545100"
  },
  {
    "text": "you a lot of visibility you don't have any visibility into temporary effects you might not have any you know you",
    "start": "545100",
    "end": "550860"
  },
  {
    "text": "don't know if files are being created and then deleted you don't know in which sequence certain operations have",
    "start": "550860",
    "end": "556440"
  },
  {
    "text": "happened so it's typically considered not enough visibility so you want to dig deeper you want to see the interactions",
    "start": "556440",
    "end": "563100"
  },
  {
    "text": "between the program between that malware and the operating system when it's being executed right so you see maybe an open",
    "start": "563100",
    "end": "570000"
  },
  {
    "text": "system call and then the program reads from the from that file and then it writes somewhere else and then there's",
    "start": "570000",
    "end": "575100"
  },
  {
    "text": "some Network traffic and then it deletes in a file so you basically get a sequence of operations and you have a",
    "start": "575100",
    "end": "582000"
  },
  {
    "text": "much better visibility into the interactions of that program with its in with its environment and and I would say",
    "start": "582000",
    "end": "589019"
  },
  {
    "text": "I would argue that that actually this is the way most sandboxes work today it can",
    "start": "589019",
    "end": "594720"
  },
  {
    "text": "be done by instrumenting the operating system you can you know hook system calls you can install a driver at the",
    "start": "594720",
    "end": "600000"
  },
  {
    "text": "kernel level that records this operation between the program and the operating system or you can instrument libraries",
    "start": "600000",
    "end": "607200"
  },
  {
    "text": "in dlls or the runtime and you can basically say whenever the program invokes a system call whenever the",
    "start": "607200",
    "end": "613440"
  },
  {
    "text": "program asks the operating system to do something then I want to log the",
    "start": "613440",
    "end": "618720"
  },
  {
    "text": "information about this operation maybe with parameters and I want to learn something about this operation",
    "start": "618720",
    "end": "624300"
  },
  {
    "text": "and you know you can you you quite easily run something like this in a virtual machine so you spin up a",
    "start": "624300",
    "end": "629399"
  },
  {
    "text": "virtual machine you instrument the virtual machine you run the program and you get a trace of the system calls so",
    "start": "629399",
    "end": "635220"
  },
  {
    "text": "visibility is clearly better you see sequence of operations you can see temporary actions but I would argue that",
    "start": "635220",
    "end": "642959"
  },
  {
    "text": "you still don't see enough you cannot really see deep into the program itself",
    "start": "642959",
    "end": "648600"
  },
  {
    "text": "you don't have deep visibility into okay you know the program has read some",
    "start": "648600",
    "end": "654000"
  },
  {
    "text": "information from a file but what does it actually do with this information does it process it does it encrypt it does it",
    "start": "654000",
    "end": "660720"
  },
  {
    "text": "send it over the network afterwards you don't really know so you're lacking visibility into individual instructions",
    "start": "660720",
    "end": "668040"
  },
  {
    "text": "you lack visibility into possible data flows and and that's really a problem right you",
    "start": "668040",
    "end": "675480"
  },
  {
    "text": "would really like to sort of not just take the abstraction off here's the program it's a black box it does",
    "start": "675480",
    "end": "682019"
  },
  {
    "text": "something with the operating system it's good information but I argue that you want to look deeper you want to have",
    "start": "682019",
    "end": "690300"
  },
  {
    "text": "information that tells you how a program might process inputs or how outputs are",
    "start": "690300",
    "end": "695459"
  },
  {
    "text": "produced and which checks are done inside the program right I mean there could be compare instructions that could",
    "start": "695459",
    "end": "701279"
  },
  {
    "text": "be data manipulation operations that you just don't see when you just have the visibility of the operating system",
    "start": "701279",
    "end": "708180"
  },
  {
    "text": "interface so you know even the same Trace as before if you look deeper you",
    "start": "708180",
    "end": "714360"
  },
  {
    "text": "can see for example hey does the program leak information over the network that",
    "start": "714360",
    "end": "719820"
  },
  {
    "text": "it has previously read from this specific file or does it you know read certain bits of the registry only",
    "start": "719820",
    "end": "728220"
  },
  {
    "text": "if it has previously received something from the network maybe a command that triggers a certain activity or you know",
    "start": "728220",
    "end": "735540"
  },
  {
    "text": "for this right operations where does the data actually come that is written to this file is it previously downloaded in",
    "start": "735540",
    "end": "742079"
  },
  {
    "text": "the form of a download and execute or is there some information that was statically embedded in the binary so a",
    "start": "742079",
    "end": "747360"
  },
  {
    "text": "lot of extra information that are lost when you just look at the operating system interface",
    "start": "747360",
    "end": "752640"
  },
  {
    "text": "so one way in which you can get that information is by using some kind of",
    "start": "752640",
    "end": "758519"
  },
  {
    "text": "debugger you just debug the process or maybe more commonly you use",
    "start": "758519",
    "end": "764820"
  },
  {
    "text": "a small CPU emulator you're basically emulating the CPU you're emulating the individual instructions and you have",
    "start": "764820",
    "end": "771959"
  },
  {
    "text": "written some stop functions that basically emulate what Windows would do",
    "start": "771959",
    "end": "778500"
  },
  {
    "text": "if a certain system call would happen right so if if the program says open this file then you have a little",
    "start": "778500",
    "end": "784680"
  },
  {
    "text": "emulator that says okay the file is now open or if the program reads and says",
    "start": "784680",
    "end": "790860"
  },
  {
    "text": "give me the first 10 bytes of this program then your little emulator your little your little process emulator can",
    "start": "790860",
    "end": "798420"
  },
  {
    "text": "tell you okay you know here are 10 bytes from maybe even the real file or some",
    "start": "798420",
    "end": "804360"
  },
  {
    "text": "emulated file and sort of this this visibility that you now have is since you're emulating the individual",
    "start": "804360",
    "end": "811800"
  },
  {
    "text": "instructions you actually see every instruction that the program executes you can understand what happens with",
    "start": "811800",
    "end": "817800"
  },
  {
    "text": "data that is being read from a program from a file and then processed by the program you might be able to understand",
    "start": "817800",
    "end": "823440"
  },
  {
    "text": "what data is being sent over the network so in principle this is in my opinion an",
    "start": "823440",
    "end": "829680"
  },
  {
    "text": "improvement but it has a problem and the problem is that the way these sort of process emulators are being implemented",
    "start": "829680",
    "end": "837500"
  },
  {
    "text": "the the lag what we call it Fidelity they lack in the sense that when",
    "start": "837500",
    "end": "846120"
  },
  {
    "text": "the program interacts with the operating system and you have basically emulated the operating system so you're not using",
    "start": "846120",
    "end": "851820"
  },
  {
    "text": "the real operating system you've just written some sub functions that try to mimic some of the things that the",
    "start": "851820",
    "end": "857339"
  },
  {
    "text": "operating system can do then you're basically incomplete it's it's likely and you know we've talked to people that",
    "start": "857339",
    "end": "863519"
  },
  {
    "text": "use this kind of approach that a good fraction of your malware is not",
    "start": "863519",
    "end": "868680"
  },
  {
    "text": "executing properly just because you would have to Faithfully emulate the entire Windows system to be able to give",
    "start": "868680",
    "end": "877200"
  },
  {
    "text": "the malware or any program that interacts with you all the information in a completely Faithful Way and in the",
    "start": "877200",
    "end": "883320"
  },
  {
    "text": "way Windows would do right so so you basically have nice visibility but the",
    "start": "883320",
    "end": "890760"
  },
  {
    "text": "problem is that your environment is not realistic enough you basically had to spend a lot of work to write in this",
    "start": "890760",
    "end": "896459"
  },
  {
    "text": "process emulator and you emulate windows and it's not complete just because Windows is so big so is there a way that",
    "start": "896459",
    "end": "903720"
  },
  {
    "text": "you can actually get all the details while maintaining what we call your good Fidelity basically while maintaining",
    "start": "903720",
    "end": "910980"
  },
  {
    "text": "the actual operating system and basically have the process emulated so",
    "start": "910980",
    "end": "916260"
  },
  {
    "text": "you can see what the process does but when it talks with the operating system or when it sort of interacts with Windows",
    "start": "916260",
    "end": "922199"
  },
  {
    "text": "why not just you know emulate that too why not emulate everything right so the the idea here that we are sort of",
    "start": "922199",
    "end": "928980"
  },
  {
    "text": "wanting to distinguish or get that you could Implement a full system emulator that emulates the entire system and",
    "start": "928980",
    "end": "937040"
  },
  {
    "text": "emulates the system not that the operating system level but emulates the hardware the physical Hardware the",
    "start": "937040",
    "end": "943260"
  },
  {
    "text": "physical CPU the physical memory so that you can run a real operating system inside your full system emulator and you",
    "start": "943260",
    "end": "950040"
  },
  {
    "text": "can selectively then say okay here there's some operating system code that's running I just let it run and I",
    "start": "950040",
    "end": "955199"
  },
  {
    "text": "don't really care about it but hey now the process that I care about is executing so I switch into a detailed",
    "start": "955199",
    "end": "963720"
  },
  {
    "text": "look mode and I know exactly what this process does what instructions it executes how it manipulates data that it",
    "start": "963720",
    "end": "970980"
  },
  {
    "text": "reads and how it creates maybe files or or data that it sends over the network",
    "start": "970980",
    "end": "976800"
  },
  {
    "text": "so basically get good visibility and good Fidelity the only problem is",
    "start": "976800",
    "end": "983820"
  },
  {
    "text": "since you now run a real windows and the process that you want to analyze on top of an emulated hardware and full system",
    "start": "983820",
    "end": "991139"
  },
  {
    "text": "it might not be as fast as a VM based system so you have to be careful with that and",
    "start": "991139",
    "end": "998519"
  },
  {
    "text": "um you have to be careful that your emulator has enough Fidelity to to be",
    "start": "998519",
    "end": "1005839"
  },
  {
    "text": "able to emulate the actual x86 processor and the physical Hardware that Windows needs but if you can pull this off then",
    "start": "1005839",
    "end": "1013459"
  },
  {
    "start": "1013000",
    "end": "1013000"
  },
  {
    "text": "we're sort of arguing that you get a visibility that instead of just giving you point visibility for every system",
    "start": "1013459",
    "end": "1019339"
  },
  {
    "text": "call that the program might might do you actually see the entire instruction stream and this extra visibility as I",
    "start": "1019339",
    "end": "1027380"
  },
  {
    "text": "will argue hopefully in a bit is really crucial to do a number of things that",
    "start": "1027380",
    "end": "1034400"
  },
  {
    "text": "are typically not possible without this visibility so just you know to recap we're sort of",
    "start": "1034400",
    "end": "1040699"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "having these two access visibility into the process Fidelity how realistic is the environment for for the process or",
    "start": "1040699",
    "end": "1046579"
  },
  {
    "text": "the program that you're running and you have high visibility but low Fidelity with process emulation you have high",
    "start": "1046579",
    "end": "1052460"
  },
  {
    "text": "fidelity because it's a real operating system but low visibility with a classic virtual machine based approach and",
    "start": "1052460",
    "end": "1058700"
  },
  {
    "text": "system hooking and and we think that full system emulation combines both advantages so you know we have we have",
    "start": "1058700",
    "end": "1066559"
  },
  {
    "text": "believed that for for a long while actually you know that's why when we started the Anubis project about 10",
    "start": "1066559",
    "end": "1072740"
  },
  {
    "start": "1067000",
    "end": "1067000"
  },
  {
    "text": "years ago this is really the route we went we started to build our analysis system on top of a full system emulator",
    "start": "1072740",
    "end": "1080660"
  },
  {
    "text": "and of course when we later decided to commercialize our research we built our analysis engine also following this",
    "start": "1080660",
    "end": "1087799"
  },
  {
    "text": "paradigm so um let's focus on what I said before why",
    "start": "1087799",
    "end": "1094039"
  },
  {
    "start": "1093000",
    "end": "1093000"
  },
  {
    "text": "does visibility matter I think visibility matters because first you see",
    "start": "1094039",
    "end": "1099080"
  },
  {
    "text": "more behaviors I hope I sort of already made the argument I'll give you a few examples why this is important but also",
    "start": "1099080",
    "end": "1106280"
  },
  {
    "text": "it really helps you when we talk about evasion because evasion are often little",
    "start": "1106280",
    "end": "1111559"
  },
  {
    "text": "tricks or little checks or little triggers that happen inside the program and that ensure that the process can",
    "start": "1111559",
    "end": "1120799"
  },
  {
    "text": "decide hey am I running in an analysis environment or not and if you don't actually have the",
    "start": "1120799",
    "end": "1126260"
  },
  {
    "text": "visibility into the program then you just don't see those checks you don't see those triggers that the malware",
    "start": "1126260",
    "end": "1132679"
  },
  {
    "text": "might try to launch against you so we argue that it's really important to to see into the program when it's executing",
    "start": "1132679",
    "end": "1139460"
  },
  {
    "text": "to be able to combat evasion so on before we go to Aviation just a",
    "start": "1139460",
    "end": "1145520"
  },
  {
    "text": "couple of behaviors that I want to point out um you know it might be interesting for you to understand from all the registry keys and programs",
    "start": "1145520",
    "end": "1154640"
  },
  {
    "text": "and files that the that the malware has touched which ones does it actually leak over",
    "start": "1154640",
    "end": "1160220"
  },
  {
    "text": "the network and more so what are the network connections over which it leaks the data",
    "start": "1160220",
    "end": "1166520"
  },
  {
    "text": "because it could very well be that the malware connects to 10 remote servers and you know some of them might be decoy",
    "start": "1166520",
    "end": "1172580"
  },
  {
    "text": "some of them might be legitimate machines so what are the actual destinations that are used for command",
    "start": "1172580",
    "end": "1178400"
  },
  {
    "text": "and control and where the malware sends data to that's an interesting thing you might want to learn another interesting",
    "start": "1178400",
    "end": "1184700"
  },
  {
    "text": "thing you might want to learn is if data is read from the network is it used to",
    "start": "1184700",
    "end": "1190039"
  },
  {
    "text": "trigger commands in that program does the program read commands from a CNC",
    "start": "1190039",
    "end": "1195080"
  },
  {
    "text": "server and what actions do they trigger inside your program right again you want to have this data flow information that",
    "start": "1195080",
    "end": "1201140"
  },
  {
    "text": "you can say data was read and the program had checks inside that acted",
    "start": "1201140",
    "end": "1206960"
  },
  {
    "text": "upon the data that it is just received we can also you know detect more about",
    "start": "1206960",
    "end": "1212600"
  },
  {
    "text": "keyloggers the off they're off passive in a sandbox so if we basically have a fake user that enters information then",
    "start": "1212600",
    "end": "1218480"
  },
  {
    "text": "we can track how the program might hook the keyboard and might process the data",
    "start": "1218480",
    "end": "1223760"
  },
  {
    "text": "that the user enters or we can take memory snapshots to Aid static analysis",
    "start": "1223760",
    "end": "1228799"
  },
  {
    "text": "so the idea is basically to say hey this program",
    "start": "1228799",
    "end": "1233960"
  },
  {
    "text": "has unpacked some parts of its code it's now running some parts that we haven't",
    "start": "1233960",
    "end": "1239000"
  },
  {
    "text": "seen statically on disk can we just take a snapshot of that memory image and since we have full control over the",
    "start": "1239000",
    "end": "1245419"
  },
  {
    "text": "process its instructions and the memory we can basically take the information and we can then export it to something",
    "start": "1245419",
    "end": "1252200"
  },
  {
    "text": "that someone can inspect in either in more detail",
    "start": "1252200",
    "end": "1257500"
  },
  {
    "text": "and so what I just said is sort of summarized here we can progress not only based on the fact that",
    "start": "1258020",
    "end": "1265340"
  },
  {
    "start": "1260000",
    "end": "1260000"
  },
  {
    "text": "the hook system calls right because they might use set Windows hook or get a",
    "start": "1265340",
    "end": "1270740"
  },
  {
    "text": "synchronous Key State to understand you know if someone is typing something but we can actually track how the data that",
    "start": "1270740",
    "end": "1278240"
  },
  {
    "text": "the user types or how data that enters the process by reading these keystrokes",
    "start": "1278240",
    "end": "1285440"
  },
  {
    "text": "how the malware processes it and that allows us to to do things like okay",
    "start": "1285440",
    "end": "1290480"
  },
  {
    "text": "determinations like this where then we can say hey we've seen that there's some stealing activity going on the process",
    "start": "1290480",
    "end": "1297320"
  },
  {
    "text": "not only Hoops keystrokes but it takes that information and maybe sends it over the network it may be an encrypted form",
    "start": "1297320",
    "end": "1305179"
  },
  {
    "text": "and then we can tell you also what kind of data has been leaked or when I said before supporting static analysis we can",
    "start": "1305179",
    "end": "1312260"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "recognize interesting points in the execution of a program we can take a snapshot of that memory and then export",
    "start": "1312260",
    "end": "1317840"
  },
  {
    "text": "it into Ida and you know a user can just say Okay a number of analyzes have happened",
    "start": "1317840",
    "end": "1323840"
  },
  {
    "text": "um export the process snapshot and then you know you see on on the on the bottom of",
    "start": "1323840",
    "end": "1330320"
  },
  {
    "text": "that slide this is just you know the classic IW you can basically see um new untrusted memory regions that the",
    "start": "1330320",
    "end": "1338240"
  },
  {
    "text": "program has created while it's being executed right and so all these these",
    "start": "1338240",
    "end": "1343580"
  },
  {
    "text": "things come from the deep visibility that we have into the process and it's often not visible when you just look at",
    "start": "1343580",
    "end": "1349760"
  },
  {
    "text": "the system calls all right so let's talk about evasion of course the malware authors are not",
    "start": "1349760",
    "end": "1355100"
  },
  {
    "text": "stupid they're seeing hey there are all these vendors that put in sandboxes in their products um and they can detect my zero day",
    "start": "1355100",
    "end": "1361340"
  },
  {
    "text": "that's that's bad so what they want to do is of course they develop code that",
    "start": "1361340",
    "end": "1366940"
  },
  {
    "text": "detects the presence of a Sandbox when being executed and the cool thing is here they can do that because the",
    "start": "1366940",
    "end": "1372919"
  },
  {
    "text": "dynamic analysis environment actually runs the program and so you run the malware so the malware has a chance to",
    "start": "1372919",
    "end": "1379760"
  },
  {
    "text": "do things like looking around finding out hey I'm being monitored let's just drop everything and pretend to be good",
    "start": "1379760",
    "end": "1385280"
  },
  {
    "text": "and then you know the sandbox doesn't see any malicious activity and thinks well that's a legitimate program let's",
    "start": "1385280",
    "end": "1391159"
  },
  {
    "text": "just forward it and then it runs on the actual victim system and might behave very differently so it's a it's a big",
    "start": "1391159",
    "end": "1398179"
  },
  {
    "text": "problem how can you achieve evasion um there are three big ways in in you",
    "start": "1398179",
    "end": "1405080"
  },
  {
    "text": "know sort of our taxonomy here one is you can detect the underlying runtime environment so what I mean by this is",
    "start": "1405080",
    "end": "1412400"
  },
  {
    "text": "let's say you know we use an emulator others use Virtual machines can you detect the presence just of an emulator",
    "start": "1412400",
    "end": "1418280"
  },
  {
    "text": "or a virtual machine um you know are there certain Hardware differences are there timing differences",
    "start": "1418280",
    "end": "1424760"
  },
  {
    "text": "are there certain artifacts being introduced um the second way is by not saying I",
    "start": "1424760",
    "end": "1431120"
  },
  {
    "text": "want to detect a generic runtime environment but you say I want to detect a specific sandbox maybe I know",
    "start": "1431120",
    "end": "1437960"
  },
  {
    "text": "something about the sandbox what kind of files does it create what kind of other artifacts does it introduce in the",
    "start": "1437960",
    "end": "1444260"
  },
  {
    "text": "windows system and I just look specifically for them and if I find them I know that I'm being analyzed",
    "start": "1444260",
    "end": "1451220"
  },
  {
    "text": "and the third thing is you don't actually try to understand if you're in a sandbox or not you actually want to",
    "start": "1451220",
    "end": "1458960"
  },
  {
    "text": "make it so that the sandbox doesn't see your malicious code that you're executing so you don't care if you're",
    "start": "1458960",
    "end": "1464960"
  },
  {
    "text": "running a Sandbox or not as long as you can execute code in a way that makes it invisible to the sandbox or doesn't",
    "start": "1464960",
    "end": "1471559"
  },
  {
    "text": "trigger it for a Sandbox then you're good right so this is sort of the three points and I'll give you a lot of",
    "start": "1471559",
    "end": "1477500"
  },
  {
    "text": "examples for those in a second I just want to show that this is actually real so this is you know for for the anubi",
    "start": "1477500",
    "end": "1483799"
  },
  {
    "text": "system the university system you know there's a malware pack that has anti-inubi switch there's a crypto",
    "start": "1483799",
    "end": "1489620"
  },
  {
    "text": "there's an anti-anubi switch there's another malware generation tool that has an anti-inubi switch so you know the",
    "start": "1489620",
    "end": "1494780"
  },
  {
    "text": "attackers are well aware of our systems and they create malware generator kits that already come pre-shipped with some",
    "start": "1494780",
    "end": "1502520"
  },
  {
    "text": "code that tries to detect a lubis and also other sandboxes so it's a real",
    "start": "1502520",
    "end": "1508100"
  },
  {
    "text": "problem okay and and that's why we think it's it's really important because it's not",
    "start": "1508100",
    "end": "1513559"
  },
  {
    "text": "just a theoretical issue it already happened you know a few years ago against our commercial",
    "start": "1513559",
    "end": "1519080"
  },
  {
    "text": "against our academic system so you can imagine if you are uh someone who writes",
    "start": "1519080",
    "end": "1524299"
  },
  {
    "text": "targeted attacks and you have the resources you will certainly also study",
    "start": "1524299",
    "end": "1529460"
  },
  {
    "text": "commercial sandboxes and try to evade them as well",
    "start": "1529460",
    "end": "1533919"
  },
  {
    "text": "at the different ways in which you can detect the runtime environment and then",
    "start": "1534500",
    "end": "1540980"
  },
  {
    "start": "1535000",
    "end": "1535000"
  },
  {
    "text": "I talk about how to detect specific sandboxes and then how you can evade code from being analyzed a classic way",
    "start": "1540980",
    "end": "1548000"
  },
  {
    "text": "to detect a runtime in particular virtual machine is the fact that when virtualization or also when when",
    "start": "1548000",
    "end": "1555080"
  },
  {
    "text": "emulations be introduced there are differences between the real hardware and the emulated Hardware or the virtual",
    "start": "1555080",
    "end": "1563659"
  },
  {
    "text": "environment that is being generated and you know along time classic paper already in 2000 and",
    "start": "1563659",
    "end": "1570500"
  },
  {
    "text": "understood that there is some difference in the way privileged operations are handled and um",
    "start": "1570500",
    "end": "1578539"
  },
  {
    "text": "when you are sort of in in ring 0 and ring three and that",
    "start": "1578539",
    "end": "1583580"
  },
  {
    "text": "allowed um you know a large number of little tricks that looked at how instructions",
    "start": "1583580",
    "end": "1588919"
  },
  {
    "text": "are different uh including the the famous red pill snippet that allowed to",
    "start": "1588919",
    "end": "1594200"
  },
  {
    "text": "see that certain addresses were different in a real Windows environment and then on a VM of course you know with",
    "start": "1594200",
    "end": "1600380"
  },
  {
    "text": "the Advent of Hardware assisted virtualization um for example Intel VT this",
    "start": "1600380",
    "end": "1607279"
  },
  {
    "text": "went away or these differences shrank substantially so this is getting increasingly harder because Hardware is",
    "start": "1607279",
    "end": "1613520"
  },
  {
    "text": "now making it more and more difficult for a program to understand if it's being run inside a virtual machine or",
    "start": "1613520",
    "end": "1620120"
  },
  {
    "text": "not but it remains a problem and there are CPU bugs for example you know Intel",
    "start": "1620120",
    "end": "1626120"
  },
  {
    "text": "publishes bugs in their CPUs or sort of behavior that is not according to the specification and if you basically run a",
    "start": "1626120",
    "end": "1634100"
  },
  {
    "text": "test then you can determine hey am I on this real CPU that actually has that bug and behaves not according to the",
    "start": "1634100",
    "end": "1640820"
  },
  {
    "text": "specification the official processor specification or am I me being an environment where it's",
    "start": "1640820",
    "end": "1648320"
  },
  {
    "text": "either a newer version of the processor or a VM where they have Faithfully",
    "start": "1648320",
    "end": "1653360"
  },
  {
    "text": "implemented that spec and so the bug is not present or Unfaithful emulation",
    "start": "1653360",
    "end": "1658700"
  },
  {
    "text": "where you see um since an emulator is a softer piece that tries to implement the",
    "start": "1658700",
    "end": "1665240"
  },
  {
    "text": "functionality of a hardware like the CPU sometimes there are slight differences or bugs that can be detected and there's",
    "start": "1665240",
    "end": "1672679"
  },
  {
    "text": "a nice paper on how to automatically actually detect these differences and recently we've seen a lot of malware",
    "start": "1672679",
    "end": "1677900"
  },
  {
    "text": "using um more obscure math operations or floating Point operations in the hope",
    "start": "1677900",
    "end": "1684559"
  },
  {
    "text": "that the emulator doesn't support them and if the emulator doesn't support these math operations then you know that",
    "start": "1684559",
    "end": "1692179"
  },
  {
    "text": "you're not running a real system but on an emulator so there are some tricks in which you you know have to make sure",
    "start": "1692179",
    "end": "1698360"
  },
  {
    "text": "that your emulator or your VM is faithful although the general Quest remains especially with more and more",
    "start": "1698360",
    "end": "1704299"
  },
  {
    "text": "user virtualization can you really assume that you are in an analysis environment just because you're in a VM",
    "start": "1704299",
    "end": "1710419"
  },
  {
    "text": "right that might not be enough anymore because a lot of people use the virtual machines for legitimate purposes so if",
    "start": "1710419",
    "end": "1718159"
  },
  {
    "text": "you can just detect if you're in a VM or not it might not be enough to decide for a piece of malware that you're actually",
    "start": "1718159",
    "end": "1723799"
  },
  {
    "text": "not in a victim environment so what you want is you might want to detect the actual analysis engine",
    "start": "1723799",
    "end": "1729740"
  },
  {
    "start": "1727000",
    "end": "1727000"
  },
  {
    "text": "um you know for example in the case of Anubis a lot of other sandboxes you know especially if they make available",
    "start": "1729740",
    "end": "1736880"
  },
  {
    "text": "um the reports that they generate malware authors create little programs",
    "start": "1736880",
    "end": "1742039"
  },
  {
    "text": "to check for example for the Windows product ID or if there's a specific username used or processes names or hard",
    "start": "1742039",
    "end": "1748460"
  },
  {
    "text": "disk names or you can check okay how many people have logged in since that machine is rebooted how many people or",
    "start": "1748460",
    "end": "1755840"
  },
  {
    "text": "when was that machine rebooted last so there are a lot of checks you can do that",
    "start": "1755840",
    "end": "1761000"
  },
  {
    "text": "that look a certain way in a real environment but not necessarily an analysis environment where you say no",
    "start": "1761000",
    "end": "1766820"
  },
  {
    "text": "users are logged in and the Machine was just started two two minutes ago right that might might give it away you can",
    "start": "1766820",
    "end": "1773179"
  },
  {
    "text": "check for unexpected you know dlls that are loaded or mutex names uh in Hadoop",
    "start": "1773179",
    "end": "1778220"
  },
  {
    "text": "is actually we had a fun case where they were fingerprinting our background sort",
    "start": "1778220",
    "end": "1784100"
  },
  {
    "text": "of the pixel by pixel color of the background of our analysis system and they said okay well these guys always",
    "start": "1784100",
    "end": "1790279"
  },
  {
    "text": "launch a dosbox at this particular location so if this pixel is yellow this is red and this is black I know that I'm",
    "start": "1790279",
    "end": "1796940"
  },
  {
    "text": "I'm in Anubis and I'm not just doing anything right so very sophisticated checks presence of enough RAM three",
    "start": "1796940",
    "end": "1803539"
  },
  {
    "text": "button Mouse the keyboard layout a lot of checks that you can do and you know malware authors do them so here's sort",
    "start": "1803539",
    "end": "1809480"
  },
  {
    "text": "of a reverse engineered code where you can't really see it very well but they basically check for VMware or qmo for",
    "start": "1809480",
    "end": "1817100"
  },
  {
    "text": "those strings present in artist names there's even on 4 forums you can see the",
    "start": "1817100",
    "end": "1823460"
  },
  {
    "text": "attackers share interesting tidbits for example you know a very old way to detect Anubis was to check if the user",
    "start": "1823460",
    "end": "1830059"
  },
  {
    "text": "that was logged in his name was Andy because Andy was a PhD student who built the system and he just created an image",
    "start": "1830059",
    "end": "1836299"
  },
  {
    "text": "with that name so you know we changed it to administrator but you know it's it's it's a check that they can do when you",
    "start": "1836299",
    "end": "1842240"
  },
  {
    "text": "see a number of other checks for user names here or for",
    "start": "1842240",
    "end": "1847940"
  },
  {
    "text": "um the fact that the sample that you execute is called sample so a lot of specific checks that male authors can do",
    "start": "1847940",
    "end": "1854899"
  },
  {
    "text": "especially if they have access to your box if they can study or box they can",
    "start": "1854899",
    "end": "1860059"
  },
  {
    "text": "specifically look for these environment values that might give away that",
    "start": "1860059",
    "end": "1866360"
  },
  {
    "text": "the program is being analyzed in that specific environment all right so",
    "start": "1866360",
    "end": "1872299"
  },
  {
    "start": "1872000",
    "end": "1872000"
  },
  {
    "text": "the Third Way and you know sort of different rather than what I just explained is is to avoid",
    "start": "1872299",
    "end": "1878179"
  },
  {
    "text": "monitoring all together so make sure that there is no malicious code executed in the sandbox or",
    "start": "1878179",
    "end": "1885620"
  },
  {
    "text": "you executed in a way that the sandbox doesn't seat and so at Classic is okay",
    "start": "1885620",
    "end": "1890720"
  },
  {
    "text": "so you wait for the user to click on something and of course you know some Modern sandboxes have user interaction",
    "start": "1890720",
    "end": "1896240"
  },
  {
    "text": "simulators they will click on themes but you know as a competitor recently",
    "start": "1896240",
    "end": "1901279"
  },
  {
    "text": "um published a blog post sometimes you must click more than once so you must click three times before some malicious",
    "start": "1901279",
    "end": "1907220"
  },
  {
    "text": "activity happens so you know there's always this sort of arms race here you can do things only after reboot although",
    "start": "1907220",
    "end": "1914659"
  },
  {
    "text": "you see in the sandbox that the program makes itself persistent you can run only",
    "start": "1914659",
    "end": "1919940"
  },
  {
    "text": "after before certain dates or on specific dates you know going back to the Michelangelo virus 20 plus years ago",
    "start": "1919940",
    "end": "1926360"
  },
  {
    "text": "a trick that still is is in use and then there are a couple of of other ones that",
    "start": "1926360",
    "end": "1931520"
  },
  {
    "text": "I want to just point out that we recently found that are fun um that use sort of quirks of different sandbox",
    "start": "1931520",
    "end": "1938600"
  },
  {
    "text": "implementations so this is just a you can't read the code very well but basically he does an if statement that",
    "start": "1938600",
    "end": "1944779"
  },
  {
    "text": "checks if the time is after 2012 and I think it was January so simple database",
    "start": "1944779",
    "end": "1950659"
  },
  {
    "text": "checks that malware authors introduce into their malware so there's a couple of things I wanted",
    "start": "1950659",
    "end": "1955760"
  },
  {
    "text": "to point out is is this one this was fun um so if you monitor our process",
    "start": "1955760",
    "end": "1960799"
  },
  {
    "text": "um you basically say okay you know there's a malware or potential malware process and it might spawn other processes and",
    "start": "1960799",
    "end": "1967100"
  },
  {
    "text": "you add that to the list of processes that you Monitor and so you track all the things that the initial malware",
    "start": "1967100",
    "end": "1973159"
  },
  {
    "text": "process and sort of its its children might do or if that malware injects code",
    "start": "1973159",
    "end": "1978200"
  },
  {
    "text": "into a remote process and you want to add that process to the list of things you monitor",
    "start": "1978200",
    "end": "1983419"
  },
  {
    "text": "now at one point you want to stop monitoring and you typically stop monitor when someone calls exit right",
    "start": "1983419",
    "end": "1990260"
  },
  {
    "text": "the process exits and actually the system call that you care about is anti-terminate process so",
    "start": "1990260",
    "end": "1996080"
  },
  {
    "text": "um at one point we had the problem that okay after anti-terminate process we thought well you know the process is now",
    "start": "1996080",
    "end": "2001299"
  },
  {
    "text": "over so why why should we care about it anymore so the interesting problem and this is actually source code it's not",
    "start": "2001299",
    "end": "2007360"
  },
  {
    "text": "from the real Windows kernel it's taken from react to S shows you that you have",
    "start": "2007360",
    "end": "2012640"
  },
  {
    "text": "this thing here where it says anti-determinate process is being called as part of exit process and it says peel",
    "start": "2012640",
    "end": "2018820"
  },
  {
    "text": "all the threads and this is sort of where we stop monitoring but unfortunately one line later it calls",
    "start": "2018820",
    "end": "2024640"
  },
  {
    "text": "loader shutdown processes that unloads dlls and as part of this unloading of the dlls some code is executed in those",
    "start": "2024640",
    "end": "2031240"
  },
  {
    "text": "dlls and we would have already unhooked our monitoring because actually on the last line you see another call to",
    "start": "2031240",
    "end": "2037960"
  },
  {
    "text": "anti-terminate processes which says first kill all the threads and then now let's do it again and unfortunately in",
    "start": "2037960",
    "end": "2044620"
  },
  {
    "text": "between there is some chance for dlls that malware authors might write to",
    "start": "2044620",
    "end": "2050080"
  },
  {
    "text": "actually inject code and run this code so you know you have to sort of fix the",
    "start": "2050080",
    "end": "2055960"
  },
  {
    "text": "way you monitor another classic that um you know affects sandboxes that do hooking is",
    "start": "2055960",
    "end": "2062740"
  },
  {
    "text": "hooked by passing it's basically instead of jumping to a function here I think it would be and adjust token privileges uh",
    "start": "2062740",
    "end": "2070179"
  },
  {
    "text": "you're actually not jumping into the start of the function you are basically copying parts of the functions that this",
    "start": "2070179",
    "end": "2076480"
  },
  {
    "text": "process would do before you actually jump there so you execute a few instructions before and then you jump in",
    "start": "2076480",
    "end": "2082839"
  },
  {
    "text": "the middle of that function and if you have a hook at the beginning of that function or if you monitor the address",
    "start": "2082839",
    "end": "2089638"
  },
  {
    "text": "that starts that function then the execution will actually never go and hit",
    "start": "2089639",
    "end": "2094898"
  },
  {
    "text": "your hook or hits the address that you're interested in but it will just bypass it but still execute the normal",
    "start": "2094899",
    "end": "2101940"
  },
  {
    "text": "code that the malware authors want to want to execute",
    "start": "2101940",
    "end": "2107260"
  },
  {
    "text": "so um you know an interesting way of bypassing in-process hooks typically of",
    "start": "2107260",
    "end": "2113440"
  },
  {
    "text": "Library functions um another way is you can sleep",
    "start": "2113440",
    "end": "2118900"
  },
  {
    "text": "um you know the classic sleep is um well you know malware you can only run it for so long so why don't you just",
    "start": "2118900",
    "end": "2125079"
  },
  {
    "text": "call it sleep five minutes and after you know the five minutes presumably you have hit the time out",
    "start": "2125079",
    "end": "2131260"
  },
  {
    "text": "um and of course you know guys who write sandboxes know about this so they say okay why don't we just skip all sleeps",
    "start": "2131260",
    "end": "2137440"
  },
  {
    "text": "that are longer than I don't know two seconds and uh just pretend that the thread has slept for the five minutes",
    "start": "2137440",
    "end": "2144400"
  },
  {
    "text": "um well the metal authors reacted to that by doing things where they start two threads one sleeps and then calls",
    "start": "2144400",
    "end": "2150760"
  },
  {
    "text": "terminate process or or exit and then in the second thread they would copy and",
    "start": "2150760",
    "end": "2156339"
  },
  {
    "text": "restart the program and so if you execute the if you accelerate over the first sleep too fast the actual process",
    "start": "2156339",
    "end": "2163660"
  },
  {
    "text": "is being killed and the second thread cannot complete copying and restarting the program so you basically have killed",
    "start": "2163660",
    "end": "2170500"
  },
  {
    "text": "the program you know exploiting a race condition a similar one is where you say sleep and then delete the file and",
    "start": "2170500",
    "end": "2176079"
  },
  {
    "text": "another thread is actually trying to execute that file and again if you accelerate over the sleep too fast then",
    "start": "2176079",
    "end": "2181540"
  },
  {
    "text": "the file is already gone when the second thread wants to start that file and so the execution fails so that's already",
    "start": "2181540",
    "end": "2189280"
  },
  {
    "text": "somewhat tricky but you can do it even more Tricky by not just invoking any kind of system call because you know",
    "start": "2189280",
    "end": "2195640"
  },
  {
    "text": "remember system calls are something that every sandbox can monitor but what if I",
    "start": "2195640",
    "end": "2201940"
  },
  {
    "text": "want to stall the execution without actually invoking any system call or doing race condition tricks in this case",
    "start": "2201940",
    "end": "2209320"
  },
  {
    "text": "I could go into a loop I sort of do nothing Loop that just wastes time and",
    "start": "2209320",
    "end": "2214960"
  },
  {
    "text": "that hopefully is written in a way that it is slower in the execution environment that is the sandbox compared",
    "start": "2214960",
    "end": "2222099"
  },
  {
    "text": "to the real victim environment so maybe if it takes a few seconds to stall",
    "start": "2222099",
    "end": "2227680"
  },
  {
    "text": "execution in a victim environment it might take minutes maybe even hours depending on how you implement the",
    "start": "2227680",
    "end": "2233320"
  },
  {
    "text": "sandbox on your sandbox to get through this stalling Loop and before anything of Interest happens afterwards so you're",
    "start": "2233320",
    "end": "2240040"
  },
  {
    "text": "sort of stuck with the problem that um code is running you don't know what's",
    "start": "2240040",
    "end": "2246099"
  },
  {
    "text": "going on if you don't have deep insight into the execution of the process and you might just conclude after a timeout",
    "start": "2246099",
    "end": "2252520"
  },
  {
    "text": "that this program is benign because it didn't do anything bad when in reality all it was is actually waiting waiting",
    "start": "2252520",
    "end": "2259900"
  },
  {
    "text": "you out and then continuing with bad operations afterwards so um you know",
    "start": "2259900",
    "end": "2265780"
  },
  {
    "text": "a tricky question of how to how to handle these stalling installing loops and you cannot just accelerate sleeps",
    "start": "2265780",
    "end": "2271720"
  },
  {
    "text": "because there are no sleeves it's just running running Loops",
    "start": "2271720",
    "end": "2277740"
  },
  {
    "text": "all right so you know by now um You Might already be",
    "start": "2277740",
    "end": "2283020"
  },
  {
    "start": "2281000",
    "end": "2281000"
  },
  {
    "text": "depressed and think like hey this is uh this is bad you know they have all these",
    "start": "2283020",
    "end": "2288040"
  },
  {
    "text": "tricks they use all these tricks we are we're failing and you know this this",
    "start": "2288040",
    "end": "2293680"
  },
  {
    "text": "great idea of of running things in a sandbox and seeing what it does to detect previously unknown malware",
    "start": "2293680",
    "end": "2299500"
  },
  {
    "text": "doesn't actually work um so it's a problem but we believe that if",
    "start": "2299500",
    "end": "2305020"
  },
  {
    "text": "you actually have the full visibility that I was talking about in the first part there are certain things you can do",
    "start": "2305020",
    "end": "2311320"
  },
  {
    "text": "to combat General classes generic ideas of of",
    "start": "2311320",
    "end": "2318099"
  },
  {
    "text": "bypassing or detecting the presence of a system so combating evasion and and I",
    "start": "2318099",
    "end": "2324220"
  },
  {
    "text": "think we should sort of distinguish two things one is triggers the malware reads",
    "start": "2324220",
    "end": "2329619"
  },
  {
    "text": "something from the environment and contains a check and many of the things that I've told you are like that right",
    "start": "2329619",
    "end": "2335680"
  },
  {
    "text": "read this is this file present do we have the current date is this registry",
    "start": "2335680",
    "end": "2341320"
  },
  {
    "text": "key present do we have a three Mouse button do we have that memory right all this is system call you acquire",
    "start": "2341320",
    "end": "2348940"
  },
  {
    "text": "information you compare that information with some values and you do something based on these checks right and I'll",
    "start": "2348940",
    "end": "2356020"
  },
  {
    "text": "call these checks triggers so if there's some generic way in which we can detect those triggers and at least pinpoint",
    "start": "2356020",
    "end": "2362740"
  },
  {
    "text": "that they are interesting and unusual then we actually have a good chance to to handle large classes of those",
    "start": "2362740",
    "end": "2369220"
  },
  {
    "text": "automatically and then there's another problem that of the stalling Loops it's different",
    "start": "2369220",
    "end": "2374380"
  },
  {
    "text": "because there are no checks but the question again is can we leverage deep insight into the execution of a program",
    "start": "2374380",
    "end": "2380500"
  },
  {
    "text": "to actually recognize potential stalling and maybe skip it or accelerate it right",
    "start": "2380500",
    "end": "2386560"
  },
  {
    "text": "so so these are sort of the two problems I want to use my my last 10 plus minutes",
    "start": "2386560",
    "end": "2391780"
  },
  {
    "text": "to to talk about all right so first bypassing triggers",
    "start": "2391780",
    "end": "2397359"
  },
  {
    "start": "2395000",
    "end": "2395000"
  },
  {
    "text": "the idea is you basically want to understand",
    "start": "2397359",
    "end": "2403020"
  },
  {
    "text": "what malware does with interesting values that it might read from the",
    "start": "2403020",
    "end": "2408220"
  },
  {
    "text": "environment right so malware goes and might read the current date malware goes and might",
    "start": "2408220",
    "end": "2414640"
  },
  {
    "text": "read something from the environment that tells you how many buttons your mouse has and then you want to understand if",
    "start": "2414640",
    "end": "2421720"
  },
  {
    "text": "the data that has been read in such a fashion is used in a trigger it's used in a comparison operations used in a",
    "start": "2421720",
    "end": "2427900"
  },
  {
    "text": "check inside the malware and if you can recognize that then at least you learned that there's some interesting check and",
    "start": "2427900",
    "end": "2435160"
  },
  {
    "text": "that you know depending on how common those checks are or how infrequent they are you can actually use that as a",
    "start": "2435160",
    "end": "2441640"
  },
  {
    "text": "signal that this is bad it's something that tries to detect you that tries to evade you and in the best of all worlds",
    "start": "2441640",
    "end": "2448000"
  },
  {
    "text": "you can actually go and explore a multiple or multiple execution path you",
    "start": "2448000",
    "end": "2453400"
  },
  {
    "text": "can explore alternative reality where you say okay the malware checks how many",
    "start": "2453400",
    "end": "2458440"
  },
  {
    "text": "Mouse buttons I have I gave it two mouse buttons it did that it exited what",
    "start": "2458440",
    "end": "2464980"
  },
  {
    "text": "happened if I had given it three buttons because that's exactly what it's checking for and then let's see what it",
    "start": "2464980",
    "end": "2470560"
  },
  {
    "text": "does if we give it that number of buttons so that's all the basic idea and what we",
    "start": "2470560",
    "end": "2476800"
  },
  {
    "text": "need for that basic idea is we need to be able to track interesting inputs we already sort of have the ability to do",
    "start": "2476800",
    "end": "2482260"
  },
  {
    "text": "data flow tracking some memory some values read into memory and then it's moved around by instructions move",
    "start": "2482260",
    "end": "2488619"
  },
  {
    "text": "whatever and then there's a compare operation so can we track this interesting data and can we",
    "start": "2488619",
    "end": "2495339"
  },
  {
    "text": "detect that there's a control flow decision a check a trigger that uses that input and then in the best of all",
    "start": "2495339",
    "end": "2503079"
  },
  {
    "text": "worlds we're taking a snapshot and we're actually saying okay let's now let the program continue and then let's go back",
    "start": "2503079",
    "end": "2509740"
  },
  {
    "text": "let's revert to that snapshot and let's explore an alternative reality and let's",
    "start": "2509740",
    "end": "2514839"
  },
  {
    "text": "explore the alternative execution path so just to give you a few ideas about this okay you know we already know how",
    "start": "2514839",
    "end": "2521200"
  },
  {
    "text": "to track input if you have this deep visibility into the process we can basically track every instruction so we",
    "start": "2521200",
    "end": "2528099"
  },
  {
    "text": "can see if the program moves around data or operates some data um we can of course take snapshots we",
    "start": "2528099",
    "end": "2534579"
  },
  {
    "text": "have full visibility into the memory we have full visibility into sort of the execution state so we can just save the",
    "start": "2534579",
    "end": "2541420"
  },
  {
    "text": "content of the virtual address space and if we want we can restore it by overwriting it back and we can then",
    "start": "2541420",
    "end": "2548680"
  },
  {
    "text": "basically explore alternate path by saying okay memories move to certain instructions",
    "start": "2548680",
    "end": "2555640"
  },
  {
    "text": "and now they are used to compare I don't know a value with 15 we can say well the",
    "start": "2555640",
    "end": "2560680"
  },
  {
    "text": "value that the program currently has is zero so let's continue to let it execute but then revert and pretend that that",
    "start": "2560680",
    "end": "2567400"
  },
  {
    "text": "value had been 15 and explore an alternative path",
    "start": "2567400",
    "end": "2572619"
  },
  {
    "text": "so um you know that that sounds good there is a little bit of complexity",
    "start": "2572619",
    "end": "2579099"
  },
  {
    "text": "um I don't want to go too much into detail I just want to sort of give you the gist the complexity is that of of inconsistent values when you just fix up",
    "start": "2579099",
    "end": "2586780"
  },
  {
    "text": "the value in one comparison operation in this particular case malware reads a",
    "start": "2586780",
    "end": "2591880"
  },
  {
    "text": "value X multiplies it by two as one to get the value y so this is this let's",
    "start": "2591880",
    "end": "2598300"
  },
  {
    "text": "assume it reads zero then it multiplies that by two so it's still zero plus one so you add one and then you pass that",
    "start": "2598300",
    "end": "2605260"
  },
  {
    "text": "value one into the check function and here you check if is the value that I read",
    "start": "2605260",
    "end": "2611560"
  },
  {
    "text": "and that I multiply by 2 and added one is it 47 and if not then you exit right",
    "start": "2611560",
    "end": "2617500"
  },
  {
    "text": "and and so what you get here is well we know that the malware checks on some kind of input and apparently it then",
    "start": "2617500",
    "end": "2624940"
  },
  {
    "text": "exits so we can go and say okay magic is zero we exit if we would set magic to 47",
    "start": "2624940",
    "end": "2631180"
  },
  {
    "text": "well we would pass but the problem is just by making this check pass by",
    "start": "2631180",
    "end": "2636460"
  },
  {
    "text": "setting magic to 47 we actually did not correctly adjust the other values X and",
    "start": "2636460",
    "end": "2642579"
  },
  {
    "text": "Y so if program continues then to execute in this case it would just print out X is zero when in reality it should",
    "start": "2642579",
    "end": "2649599"
  },
  {
    "text": "print out something else it should actually print out X is 23 because only if x is 23 then y will be 47 and Magic",
    "start": "2649599",
    "end": "2656740"
  },
  {
    "text": "would be 47. okay so you basically have to um",
    "start": "2656740",
    "end": "2661839"
  },
  {
    "text": "track the input in a clever way in a sense so whenever you copy values around",
    "start": "2661839",
    "end": "2667900"
  },
  {
    "text": "after they've been read from the environment and they are manipulated by the program you actually have to",
    "start": "2667900",
    "end": "2673240"
  },
  {
    "text": "remember how they have been manipulated and then adjust them accordingly so",
    "start": "2673240",
    "end": "2680500"
  },
  {
    "text": "we call this a constraint set you basically say Okay X is the input Wise It's dependent on X which is dependent",
    "start": "2680500",
    "end": "2686200"
  },
  {
    "text": "on the input matching is equal to Y so if we want to solve the equation I want",
    "start": "2686200",
    "end": "2691420"
  },
  {
    "text": "to say okay we want magic to be 47 so we can then use a constraint solver or some",
    "start": "2691420",
    "end": "2696760"
  },
  {
    "text": "simple linear algebra so alsoever depending on how complex you want to go and it actually solves you and gives you",
    "start": "2696760",
    "end": "2702160"
  },
  {
    "text": "the output that X should have been 23 and in this beautiful case we would actually learn that hey the program",
    "start": "2702160",
    "end": "2709119"
  },
  {
    "text": "expects that input value and only if that input value is given it would reveal additional behaviors later on",
    "start": "2709119",
    "end": "2717460"
  },
  {
    "text": "so it basically uh you know would have done both things it would have told you",
    "start": "2717460",
    "end": "2724119"
  },
  {
    "text": "hey there was a check and hey we can solve that check and we would even learn",
    "start": "2724119",
    "end": "2729880"
  },
  {
    "text": "something about the input that would have been necessary to drive the program down that's not always possible of",
    "start": "2729880",
    "end": "2735819"
  },
  {
    "text": "course because you can imagine let's say an input is being hashed and then the result of that hash is compared so you",
    "start": "2735819",
    "end": "2742540"
  },
  {
    "text": "would have to undo invert the hash function to learn what the right input would have been which is presumably hard",
    "start": "2742540",
    "end": "2748359"
  },
  {
    "text": "or impossible so in this case you only know that a check has happened but you can basically learn all these checks and",
    "start": "2748359",
    "end": "2755380"
  },
  {
    "text": "you can know that programs do checks based on interesting inputs that you can Define and you can",
    "start": "2755380",
    "end": "2762579"
  },
  {
    "text": "handle this entire class of possible evasions by just finding interesting inputs that the program manipulates or",
    "start": "2762579",
    "end": "2770200"
  },
  {
    "text": "checks for in an unusual fashion and you know we find this is a very",
    "start": "2770200",
    "end": "2776440"
  },
  {
    "text": "powerful way of of handling handling trigger trigger-based malware",
    "start": "2776440",
    "end": "2782700"
  },
  {
    "start": "2782000",
    "end": "2782000"
  },
  {
    "text": "let me just give you a couple of minutes the high level ID on the second part",
    "start": "2782700",
    "end": "2788020"
  },
  {
    "text": "which is the stalling Loops so stalling Loops I said they are difficult because they don't have a trigger right there's",
    "start": "2788020",
    "end": "2793599"
  },
  {
    "text": "no input being read there's no system call that happens there are no tainted inputs that we need to track it's just a",
    "start": "2793599",
    "end": "2799780"
  },
  {
    "text": "program looping and spinning and not doing anything so how can we detect that again the cool",
    "start": "2799780",
    "end": "2806079"
  },
  {
    "text": "thing is that we have this deep visibility into the process we can actually sort of inquire the process and",
    "start": "2806079",
    "end": "2811660"
  },
  {
    "text": "say what are you doing right now and then you know you do that second after second after second and you find out hey",
    "start": "2811660",
    "end": "2817780"
  },
  {
    "text": "it's always in this Loop and it doesn't seem to actually do much the system calls that it invokes are maybe",
    "start": "2817780",
    "end": "2823359"
  },
  {
    "text": "irrelevant or they all fail or they all succeed but actually don't change the state of the system so you can recognize",
    "start": "2823359",
    "end": "2830200"
  },
  {
    "text": "that it's doing something but it doesn't actually make progress and when you learned it doesn't make",
    "start": "2830200",
    "end": "2837040"
  },
  {
    "text": "actual progress then you can do two things first is you can try to",
    "start": "2837040",
    "end": "2842200"
  },
  {
    "text": "reduce the overhead that you produce by logging or monitoring that particular Loop and maybe you get fast enough so",
    "start": "2842200",
    "end": "2849040"
  },
  {
    "text": "that the program will just go out by itself or you can take a more active approach and actually actively interrupt",
    "start": "2849040",
    "end": "2855339"
  },
  {
    "text": "the execution and say hey I just want to jump out of that Loop",
    "start": "2855339",
    "end": "2860619"
  },
  {
    "text": "okay so um this is just sort of high level I think I'll uh given that I'm sort of short on",
    "start": "2860619",
    "end": "2867400"
  },
  {
    "start": "2863000",
    "end": "2863000"
  },
  {
    "text": "time I'll have to let you read the white paper or um the the presentation but there are basically a couple of things",
    "start": "2867400",
    "end": "2873400"
  },
  {
    "text": "you can do to find the code blocks for which you should reduce logging as well as how to actually interrupt the loops",
    "start": "2873400",
    "end": "2880619"
  },
  {
    "start": "2878000",
    "end": "2878000"
  },
  {
    "text": "once you find them and reducing the logging is not sufficient",
    "start": "2880619",
    "end": "2887020"
  },
  {
    "text": "okay but so what is nice about it is again this idea that deep visibility enables you to see things that are",
    "start": "2887020",
    "end": "2894700"
  },
  {
    "text": "necessary to convert something that malware authors already do and that they successfully use to bypass sandboxes",
    "start": "2894700",
    "end": "2903040"
  },
  {
    "text": "um that are not prepared to react to this kind of evasive activity",
    "start": "2903040",
    "end": "2909220"
  },
  {
    "text": "okay so um going to the conclusion I just want to",
    "start": "2909220",
    "end": "2915099"
  },
  {
    "start": "2910000",
    "end": "2910000"
  },
  {
    "text": "leave you with one other thought which I thought was interesting and that is history repeats itself so we've seen",
    "start": "2915099",
    "end": "2921220"
  },
  {
    "text": "from malicious binaries we've seen that you know bad guys write viruses EV vendors write",
    "start": "2921220",
    "end": "2927700"
  },
  {
    "text": "signatures malware becomes polymorphic that means you know changes the way it",
    "start": "2927700",
    "end": "2933400"
  },
  {
    "text": "looks on disk changes the way um so that you cannot recognize it using",
    "start": "2933400",
    "end": "2938619"
  },
  {
    "text": "static signatures anymore so people introduce Dynamic analysis environments sandboxes and now the next step is of",
    "start": "2938619",
    "end": "2944980"
  },
  {
    "text": "the malware authors to try to avoid and detect sandboxes and the thought is that we actually see something very similar",
    "start": "2944980",
    "end": "2951220"
  },
  {
    "text": "also on the website of things with exploit toolkits right first JavaScript",
    "start": "2951220",
    "end": "2956319"
  },
  {
    "text": "exploits you write simple tokens to detect them they start to obfuscate themselves and you know use frequently",
    "start": "2956319",
    "end": "2962440"
  },
  {
    "text": "eval and many many levels of eval to hide the code from static signatures and",
    "start": "2962440",
    "end": "2968680"
  },
  {
    "text": "then people introduced honeypots which are Dynamic analysis environments for JavaScript and now we actually see",
    "start": "2968680",
    "end": "2974740"
  },
  {
    "text": "attackers introducing tricks into their JavaScript so they can recognize if they're executed not in a real victim",
    "start": "2974740",
    "end": "2981400"
  },
  {
    "text": "browser but in a honey client so I'd sort of the same Evolution from",
    "start": "2981400",
    "end": "2987220"
  },
  {
    "text": "like simple signature piece detection obfuscation Dynamic analysis recognizing Dynamic analysis all over again for a",
    "start": "2987220",
    "end": "2994660"
  },
  {
    "text": "completely different domain so I thought that was sort of an interesting analogy and I think I'm out of time so with that",
    "start": "2994660",
    "end": "3000960"
  },
  {
    "start": "2999000",
    "end": "2999000"
  },
  {
    "text": "I conclude I think visibility and Fidelity are two critical factors when building sandboxes and we think full",
    "start": "3000960",
    "end": "3006780"
  },
  {
    "text": "system emulations is a desirable spot in the design Spectrum are hopefully",
    "start": "3006780",
    "end": "3012240"
  },
  {
    "text": "convinced you the dynamic metal analysis and invasive code is hard but also that we shouldn't give up",
    "start": "3012240",
    "end": "3017280"
  },
  {
    "text": "because there are General approaches in which we can counter counter evasive code",
    "start": "3017280",
    "end": "3023460"
  },
  {
    "text": "and with that thank you very much and I'm open for questions foreign",
    "start": "3023460",
    "end": "3029299"
  }
]