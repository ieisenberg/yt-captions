[
  {
    "text": "[Music] foreign",
    "start": "1730",
    "end": "6720"
  },
  {
    "text": "to the stage Alex martisov",
    "start": "8540",
    "end": "14040"
  },
  {
    "text": "hi what's up yeah thank you very much",
    "start": "14040",
    "end": "18740"
  },
  {
    "text": "thank you very much for coming this session I'm Alex matrosov and it's been a very interesting research which has",
    "start": "19740",
    "end": "27000"
  },
  {
    "text": "been done by binary team and Jager vaselenka Alex hermolov and Sam Thomas",
    "start": "27000",
    "end": "32220"
  },
  {
    "text": "make a great contribution to this research and first of all I wanted to say it's a big difference from the",
    "start": "32220",
    "end": "39239"
  },
  {
    "text": "previous year I've been presenting the last year in Vegas for black hat and I see a couple of more people coming",
    "start": "39239",
    "end": "44879"
  },
  {
    "text": "actually to the session it's great to see you guys here in Vegas all right",
    "start": "44879",
    "end": "50399"
  },
  {
    "text": "this is a binary team and Kudos goal to the whole team for hard work on this",
    "start": "50399",
    "end": "55980"
  },
  {
    "text": "research and we have a lot of stuff to discuss today so first of all like previously",
    "start": "55980",
    "end": "62180"
  },
  {
    "text": "vulnerabilities it's been constantly overlooked and actually it connects the whole uh interesting and very dangerous",
    "start": "62180",
    "end": "71640"
  },
  {
    "text": "and impactful space for the researchers and the attackers as well and some of",
    "start": "71640",
    "end": "77640"
  },
  {
    "text": "them actually bypassing a lot of mitigation just by Design and like STM",
    "start": "77640",
    "end": "84299"
  },
  {
    "text": "ppam and other fancy mitigations which is Intel developed unfortunately it can",
    "start": "84299",
    "end": "89520"
  },
  {
    "text": "be bypassed from the pre-e5 phases early boot phases but let's actually talk about how this",
    "start": "89520",
    "end": "97860"
  },
  {
    "text": "research started and some pre-story so in 2017 we already been talking about",
    "start": "97860",
    "end": "103320"
  },
  {
    "text": "Intel boot guard and how actually modifying some of the data which is",
    "start": "103320",
    "end": "109200"
  },
  {
    "text": "controlled the boot process it's actually reflect on the bypass the whole security features right and in 2019 with",
    "start": "109200",
    "end": "117899"
  },
  {
    "text": "Alexandra Gazette we've been talking about how security boundaries are",
    "start": "117899",
    "end": "123000"
  },
  {
    "text": "important to consider as a threat model because different security boundaries when they are crossing have a different",
    "start": "123000",
    "end": "129239"
  },
  {
    "text": "impact on some of the mitigations or security features and we've done that before and of course the last year when",
    "start": "129239",
    "end": "137459"
  },
  {
    "text": "we first time with Alex Taylor rushkin and Adams zabroski kind of like a go",
    "start": "137459",
    "end": "142680"
  },
  {
    "text": "deep dive with some of the vulnerabilities in pre-5 phase and of course like Intel bssa DFT it's been",
    "start": "142680",
    "end": "150239"
  },
  {
    "text": "kind of like a an eye opening for previous raises for the exploitation and by the",
    "start": "150239",
    "end": "156900"
  },
  {
    "text": "way this one is eliminated for most underhyped Pony Awards we'll see maybe we can get this one for this sweet",
    "start": "156900",
    "end": "164340"
  },
  {
    "text": "vulnerability and unfortunately actually it's still available in the Wild unpatched on many systems make sure you",
    "start": "164340",
    "end": "171239"
  },
  {
    "text": "are not the one and um an offensive Con in February we actually drop about 22 new fresh baked",
    "start": "171239",
    "end": "178680"
  },
  {
    "text": "cities related mostly for system management mode and we can see literally",
    "start": "178680",
    "end": "184920"
  },
  {
    "text": "like it is a repeatable failure is happening in the industry with such vulnerabilities and the space with",
    "start": "184920",
    "end": "192239"
  },
  {
    "text": "vulnerability research in the firmware has been overlooked and system management memory corruption to be",
    "start": "192239",
    "end": "197819"
  },
  {
    "text": "honest it's not a new vectors it is actually like known from the early 2000s but still",
    "start": "197819",
    "end": "203959"
  },
  {
    "text": "it is available and of course when you write your firmers on the C language it's great some interesting rooms for",
    "start": "203959",
    "end": "211940"
  },
  {
    "text": "memory corruption all right uh what is a p Prime and",
    "start": "211940",
    "end": "216959"
  },
  {
    "text": "actually in our offensive research talk we say we are working on ppam and actually it's platform Cooperative",
    "start": "216959",
    "end": "222420"
  },
  {
    "text": "assessment module which is responsible for armoring system management mode it's one of the more",
    "start": "222420",
    "end": "228560"
  },
  {
    "text": "powerful uh modes on the XS x86 systems and basically like we say we will be",
    "start": "228560",
    "end": "236220"
  },
  {
    "text": "finding some bypasses for sure because the complexity of such feature is actually incredible and we did",
    "start": "236220",
    "end": "243420"
  },
  {
    "text": "right but before we dig into previous five phases with a pi drivers",
    "start": "243420",
    "end": "250140"
  },
  {
    "text": "let's talk about ACM and intelicia ACM it is a authenticated code modules think",
    "start": "250140",
    "end": "256079"
  },
  {
    "text": "about it is just a binary blob which is executed uh separately from your firmware and actually it is loading to",
    "start": "256079",
    "end": "265440"
  },
  {
    "text": "um cache directly on CPU this cache is locked it's called like a cache as RAM",
    "start": "265440",
    "end": "271080"
  },
  {
    "text": "on the CPU feature and it's providing some additional capabilities for",
    "start": "271080",
    "end": "276120"
  },
  {
    "text": "attestation or basically for txt and a lot of other things but what's the",
    "start": "276120",
    "end": "281940"
  },
  {
    "text": "interesting about the ACM their complexity is also growing and basically",
    "start": "281940",
    "end": "288360"
  },
  {
    "text": "we already showed it before uh with binary research team uh into wood guard",
    "start": "288360",
    "end": "293940"
  },
  {
    "text": "in the bias guard by passes and actually vulnerabilities and Intel txt is not rare and",
    "start": "293940",
    "end": "301280"
  },
  {
    "text": "also as example the changes in uscms first of all it's increased the security",
    "start": "301280",
    "end": "307320"
  },
  {
    "text": "over like the hashes new Flash functions used and rsas but it's not about that",
    "start": "307320",
    "end": "313199"
  },
  {
    "text": "the size of the module it's actually grows like more than five times right it's been a 32 kilobytes now it's 256",
    "start": "313199",
    "end": "321180"
  },
  {
    "text": "kilobytes right what happened when the code base is growing attack surface is growing as well and",
    "start": "321180",
    "end": "327720"
  },
  {
    "text": "uh ACM are responsible also for attestation of ppam policies and this",
    "start": "327720",
    "end": "336660"
  },
  {
    "text": "very important to remember because we very we have a very interesting Discovery later on",
    "start": "336660",
    "end": "342660"
  },
  {
    "text": "um uh in our presentation and uh also as example uh talking from",
    "start": "342660",
    "end": "349680"
  },
  {
    "text": "the attack surface perspective Intel patched like about 10 vulnerabilities in",
    "start": "349680",
    "end": "355860"
  },
  {
    "text": "acms for this year and that's mean this attack surface it's actually pretty",
    "start": "355860",
    "end": "361860"
  },
  {
    "text": "legit right let's dive to preview fire attack surface and just a reminder about what",
    "start": "361860",
    "end": "369539"
  },
  {
    "text": "the attacker model and potential impact I don't want to go uh that deep but basically all these vulnerabilities",
    "start": "369539",
    "end": "375240"
  },
  {
    "text": "we're talking today it can be used for the persistent implant delivery and by",
    "start": "375240",
    "end": "380580"
  },
  {
    "text": "passing all the security boundaries on uh firmware space",
    "start": "380580",
    "end": "385740"
  },
  {
    "text": "also vulnerabilities which is related to enviram it's actually not protected if",
    "start": "385740",
    "end": "392039"
  },
  {
    "text": "we're talking about the persistent storage on the Spy flash it's usually not protected by woodgard interestingly",
    "start": "392039",
    "end": "398460"
  },
  {
    "text": "if you have enviram payload basically it can be a constant re-exploitation during",
    "start": "398460",
    "end": "405780"
  },
  {
    "text": "the boot and actually can gain for the attacker the persistence it's why I would say these vulnerabilities is very",
    "start": "405780",
    "end": "412620"
  },
  {
    "text": "dangerous because technically from just SM you can be protected but from",
    "start": "412620",
    "end": "418319"
  },
  {
    "text": "environment persistent storage sometimes it's not considered by System Architects or device vendors as potential space for",
    "start": "418319",
    "end": "426840"
  },
  {
    "text": "the persistence but it is so and you can see uh actual",
    "start": "426840",
    "end": "435259"
  },
  {
    "text": "complexity of communicating constantly during the boot process with environment storage right",
    "start": "435259",
    "end": "441900"
  },
  {
    "text": "but let's talk more about the pre-fire attack vectors and we have so many of them to be honest so basically it's",
    "start": "441900",
    "end": "449759"
  },
  {
    "text": "why is it preview fight so dangerous as you can see on this picture it started earlier than actually Dixie phase and",
    "start": "449759",
    "end": "457860"
  },
  {
    "text": "smm get initialized also during the previous five boot",
    "start": "457860",
    "end": "463319"
  },
  {
    "text": "phases it is actually called like a platform initialization phase right it's",
    "start": "463319",
    "end": "469740"
  },
  {
    "text": "a lot of security features to get initialized it's a lot of things happening like a memory training and",
    "start": "469740",
    "end": "475680"
  },
  {
    "text": "other things but also previous is actually sometimes accessible for the",
    "start": "475680",
    "end": "481319"
  },
  {
    "text": "code execution from the operating system but of course it's give more limited capabilities for",
    "start": "481319",
    "end": "489780"
  },
  {
    "text": "the attacker compared to during when the early boot just started because a lot of",
    "start": "489780",
    "end": "495360"
  },
  {
    "text": "memory regions are already locked but still it can be used for bypassing a lot of security features",
    "start": "495360",
    "end": "503039"
  },
  {
    "text": "so and as example during Pi phase we can",
    "start": "503039",
    "end": "508860"
  },
  {
    "text": "of course bypass all the security protection and spy because it's just not enabled and it's just not happened yet",
    "start": "508860",
    "end": "514560"
  },
  {
    "text": "before so all the historical mitigations like a bioslog enable and smm buys right",
    "start": "514560",
    "end": "521399"
  },
  {
    "text": "protections it's going to be bypassed because it's basically a natural design",
    "start": "521399",
    "end": "527420"
  },
  {
    "text": "of the firmware for ufi standard and basically I wanted to say uh",
    "start": "527420",
    "end": "535380"
  },
  {
    "text": "sometimes it's very important from the perspective of the specification or the",
    "start": "535380",
    "end": "540480"
  },
  {
    "text": "standard if it is exist from early 2000s to review and reconsider how different",
    "start": "540480",
    "end": "546540"
  },
  {
    "text": "wood phases can actually reflect on new security features right and of course like a complexity it's always anime of",
    "start": "546540",
    "end": "553560"
  },
  {
    "text": "security and you can see that about how many vulnerabilities we managed to found",
    "start": "553560",
    "end": "559980"
  },
  {
    "text": "so basically this white is a summary of the 12 CVS which is disclosed right now",
    "start": "559980",
    "end": "567000"
  },
  {
    "text": "and all the advisories are uploaded on binary website so you can go and learn",
    "start": "567000",
    "end": "573120"
  },
  {
    "text": "more details about them and some of the pocs also available public",
    "start": "573120",
    "end": "578899"
  },
  {
    "text": "and interesting reminder also about some of the issues which is related to",
    "start": "578940",
    "end": "584580"
  },
  {
    "text": "Independent bios developers it's actually not only connected to single",
    "start": "584580",
    "end": "590399"
  },
  {
    "text": "device vendor it's impact the whole ecosystem which actually uses similar code across the different devices and",
    "start": "590399",
    "end": "597300"
  },
  {
    "text": "product lines but also on this slide I wanted to thank you all the PCR teams and their hard",
    "start": "597300",
    "end": "603899"
  },
  {
    "text": "work to helping us get on time discussed all these vulnerabilities",
    "start": "603899",
    "end": "609120"
  },
  {
    "text": "let's talk about the exploitation and actually as she resumed to Pi it's very",
    "start": "609120",
    "end": "615660"
  },
  {
    "text": "interesting vulnerability because it actually shows the supply chain problem as well",
    "start": "615660",
    "end": "621600"
  },
  {
    "text": "first of all this card is actually exist on Ed K2 but unfortunately it's got modified with",
    "start": "621600",
    "end": "629880"
  },
  {
    "text": "some of the code by independent bios developer and basically what happened",
    "start": "629880",
    "end": "635580"
  },
  {
    "text": "with this modification it's actually introduced vulnerability and of course this vulnerability will be",
    "start": "635580",
    "end": "642420"
  },
  {
    "text": "exist on many other systems which is uses code from independent bias developer which is actually connected to",
    "start": "642420",
    "end": "648480"
  },
  {
    "text": "this vulnerability and problem is also when someone is forking",
    "start": "648480",
    "end": "654600"
  },
  {
    "text": "uh public reference code it is actually support this Fork keep it up to date and",
    "start": "654600",
    "end": "660120"
  },
  {
    "text": "a lot of other things are coming to supply chain security I think actually it's better to keep consistent uh this",
    "start": "660120",
    "end": "669120"
  },
  {
    "text": "code and actually the same as original reference code because it's basically",
    "start": "669120",
    "end": "674760"
  },
  {
    "text": "will be give much easier and transparent supply chain from that perspective",
    "start": "674760",
    "end": "680820"
  },
  {
    "text": "what the vulnerability is so basically we have a get variable value fpdt",
    "start": "680820",
    "end": "686579"
  },
  {
    "text": "variable which is actually contain St performance table pointer and we can get access to",
    "start": "686579",
    "end": "695100"
  },
  {
    "text": "acpi St performance Andreas actually from the operating system memory and we",
    "start": "695100",
    "end": "700320"
  },
  {
    "text": "can change this at 3D performance table pointer and basically it will because",
    "start": "700320",
    "end": "705540"
  },
  {
    "text": "arbitrary right to control both address interesting thing about this vulnerability we don't have an access to",
    "start": "705540",
    "end": "712140"
  },
  {
    "text": "environment variable itself because it's not accessible in runtime but we have an access to the pointer in memory and",
    "start": "712140",
    "end": "719220"
  },
  {
    "text": "basically it been very interesting discussions with the developers because they say oh how you can exploit that it",
    "start": "719220",
    "end": "725820"
  },
  {
    "text": "is not available in runtime but we control the pointer no no it's not",
    "start": "725820",
    "end": "731100"
  },
  {
    "text": "possible but actually after developing the PLC on that it's been more",
    "start": "731100",
    "end": "736860"
  },
  {
    "text": "convincible so yeah let's take a look on the demo so",
    "start": "736860",
    "end": "742140"
  },
  {
    "text": "basically we have uh as you can see on this demo basically it",
    "start": "742140",
    "end": "748980"
  },
  {
    "text": "works very fast what we need to do we need to modify the pointer and actually",
    "start": "748980",
    "end": "754380"
  },
  {
    "text": "trigger S3 sleep mode and then it's actually goes to the sleep mode and boom",
    "start": "754380",
    "end": "760440"
  },
  {
    "text": "we have the code execution and this uh arbitrary right it's",
    "start": "760440",
    "end": "766800"
  },
  {
    "text": "actually give you just a bit more than a two bytes of controllable value what we",
    "start": "766800",
    "end": "774240"
  },
  {
    "text": "can do with the two bytes and we can see more about that because two bytes sometimes can bypass all the mitigations",
    "start": "774240",
    "end": "780959"
  },
  {
    "text": "but it's just one vulnerability we discussing today um another one it's a platform we need",
    "start": "780959",
    "end": "788279"
  },
  {
    "text": "Advanced premium which is also pretty interesting because actually it can bypass all authenticated variables from",
    "start": "788279",
    "end": "795240"
  },
  {
    "text": "the system management model which is protected right so but basically if you have this code execution in system",
    "start": "795240",
    "end": "802440"
  },
  {
    "text": "management mode basically all the variables are read only if they are",
    "start": "802440",
    "end": "808260"
  },
  {
    "text": "authenticated and basically if you gain the Privileges to system management mode you can do that",
    "start": "808260",
    "end": "815959"
  },
  {
    "text": "so also these such variables it is a physical attack Vector always available",
    "start": "817019",
    "end": "822899"
  },
  {
    "text": "when you can just reprogram and these variables in persistent storage you can basically",
    "start": "822899",
    "end": "828260"
  },
  {
    "text": "make Gain the persistent over constant code execution which I mentioned before",
    "start": "828260",
    "end": "834839"
  },
  {
    "text": "again demo time most recent knock tiger",
    "start": "834839",
    "end": "840060"
  },
  {
    "text": "Lake released in this year so boom",
    "start": "840060",
    "end": "846200"
  },
  {
    "text": "yep but we have 12 of them we will go in in",
    "start": "848040",
    "end": "853320"
  },
  {
    "text": "the more details and more details on that so this vulnerability SM",
    "start": "853320",
    "end": "858500"
  },
  {
    "text": "bios elog this is actually also very interesting because this exactly",
    "start": "858500",
    "end": "864720"
  },
  {
    "text": "functionality have been developed for providing additional Telemetry and",
    "start": "864720",
    "end": "870060"
  },
  {
    "text": "exchange the information from smm to provide actually some debug data bring",
    "start": "870060",
    "end": "875100"
  },
  {
    "text": "up data or whatever has been considered for developing for so but",
    "start": "875100",
    "end": "880260"
  },
  {
    "text": "sometimes it's my handlers which is actually just for reminder it's callback functions from the firmware to operating",
    "start": "880260",
    "end": "886800"
  },
  {
    "text": "system layer to hook some of the functionality from uh from the firmware to operating system and this callback",
    "start": "886800",
    "end": "894779"
  },
  {
    "text": "functions sometimes have a very complex uh inherited pointers so and as we can",
    "start": "894779",
    "end": "901139"
  },
  {
    "text": "see here with this case when basically we can have like a API func one and many",
    "start": "901139",
    "end": "908100"
  },
  {
    "text": "others but this function API func one as you can see on this file is actually can",
    "start": "908100",
    "end": "915060"
  },
  {
    "text": "be triggered some additional functionality over overflow when the attacker can actually just cause the",
    "start": "915060",
    "end": "921240"
  },
  {
    "text": "classical memory corruption as we can see it's lead to the copingworm and with the controllable buffer and size it's",
    "start": "921240",
    "end": "928320"
  },
  {
    "text": "actually given attacker opportunity to exploit it the link to POC is there",
    "start": "928320",
    "end": "935120"
  },
  {
    "text": "but basically reference code issues it's uh",
    "start": "935399",
    "end": "941279"
  },
  {
    "text": "it's it's happening and basically uh another reminder about a pretty similar",
    "start": "941279",
    "end": "948240"
  },
  {
    "text": "vulnerability which we've discovered last year it's been in uh into reference code so if AP error log so basically",
    "start": "948240",
    "end": "956339"
  },
  {
    "text": "it's pretty interesting one because also providing some of the additional functionality to collecting",
    "start": "956339",
    "end": "963720"
  },
  {
    "text": "the data and providing this data in and we're unbearable and basically",
    "start": "963720",
    "end": "970079"
  },
  {
    "text": "unfortunately it's been exploitable attack vector right demo",
    "start": "970079",
    "end": "976139"
  },
  {
    "text": "time about the cement bios work all the smaller abilities as you can see it's pretty stable is working very reliable",
    "start": "976139",
    "end": "984899"
  },
  {
    "text": "and it's actually very dangerous it's why it's very very important to fix them because it's often a lot of",
    "start": "984899",
    "end": "991560"
  },
  {
    "text": "opportunities for the attacker to gain a lot of Privileges and persistence on a",
    "start": "991560",
    "end": "997139"
  },
  {
    "text": "very privileged firmware modes another one overclock SMI Handler story",
    "start": "997139",
    "end": "1004459"
  },
  {
    "text": "and this one it's interesting because it's actually have a clear supply chain",
    "start": "1004459",
    "end": "1011420"
  },
  {
    "text": "problem this overclock SMI Handler it connects with the module which is actually kind of like a legacy",
    "start": "1011420",
    "end": "1018199"
  },
  {
    "text": "functionality for overclocking uh on the game CPUs but this on the gamer",
    "start": "1018199",
    "end": "1024860"
  },
  {
    "text": "machines and basically this functionality um is actually been removed for a long time",
    "start": "1024860",
    "end": "1031880"
  },
  {
    "text": "I think a few years ago from many of the platforms but unfortunately it's been appears on internet again and we noticed",
    "start": "1031880",
    "end": "1039678"
  },
  {
    "text": "that on one of our client platform and like why it's actually freshly updated",
    "start": "1039679",
    "end": "1044720"
  },
  {
    "text": "bias it's new platform why this functionality is available here and actually provides a vulnerable",
    "start": "1044720",
    "end": "1050480"
  },
  {
    "text": "vulnerabilities someone just forget to change build script and actually older",
    "start": "1050480",
    "end": "1055940"
  },
  {
    "text": "module unpaged and get to the newer firmware and it's clearly say shows the",
    "start": "1055940",
    "end": "1062120"
  },
  {
    "text": "supply chain problem sometimes it can happen and it's also remind me American megatrans usbr key issue when the",
    "start": "1062120",
    "end": "1069200"
  },
  {
    "text": "vulnerability is actually some of them being patched or the model been module been outdated but it's been constantly",
    "start": "1069200",
    "end": "1075919"
  },
  {
    "text": "given new and new attack vectors as example we presented two new vulnerabilities at offensive con which",
    "start": "1075919",
    "end": "1082700"
  },
  {
    "text": "has been found on usbrt with a pretty new hardware includes the servers",
    "start": "1082700",
    "end": "1090160"
  },
  {
    "text": "so also actually",
    "start": "1090200",
    "end": "1095140"
  },
  {
    "text": "interesting reminder when we have such vulnerability like overclocking it is",
    "start": "1095299",
    "end": "1103460"
  },
  {
    "text": "good to see how we can actually create the list of deprecated modules which",
    "start": "1103460",
    "end": "1109400"
  },
  {
    "text": "will be never available anymore in the runtime and the industry can actually just clean up this supply chain",
    "start": "1109400",
    "end": "1116780"
  },
  {
    "text": "naturally I think that will be a good idea to have one if someone can actually",
    "start": "1116780",
    "end": "1121880"
  },
  {
    "text": "from the device vendor's perspective to influence on that all right let's look on another one it's uh actually goes",
    "start": "1121880",
    "end": "1129440"
  },
  {
    "text": "through smm get variable OC setup and as we can see here we have a",
    "start": "1129440",
    "end": "1136160"
  },
  {
    "text": "signature to DBS uh on the top right so basically this bug for make it",
    "start": "1136160",
    "end": "1142640"
  },
  {
    "text": "exploitable we need to keep the signature to actually bypass all the security checks and then",
    "start": "1142640",
    "end": "1148940"
  },
  {
    "text": "basically we have a controllable pointer in RBX and uh we go to actually exploit it over the",
    "start": "1148940",
    "end": "1156260"
  },
  {
    "text": "PCD value yep so let's do the demo",
    "start": "1156260",
    "end": "1163460"
  },
  {
    "text": "and basically this vulnerability is actually changing the my CSP Global in the sptr variable",
    "start": "1163460",
    "end": "1171500"
  },
  {
    "text": "so basically through the vulnerability in smm and this is",
    "start": "1171500",
    "end": "1176720"
  },
  {
    "text": "pretty cool one because it's also can buy plus authenticated variables",
    "start": "1176720",
    "end": "1182179"
  },
  {
    "text": "um one of the previous vulnerabilities which we've been talking about triggering this vulnerability over uh S3",
    "start": "1182179",
    "end": "1189860"
  },
  {
    "text": "sleep mode it's been a constant discussion because some of some of the",
    "start": "1189860",
    "end": "1195440"
  },
  {
    "text": "vendors been saying like this vulnerability is only exploitable on the client systems because the sleep mode is",
    "start": "1195440",
    "end": "1201080"
  },
  {
    "text": "not available on the server machines but unfortunately it's not true because sleep mode can be",
    "start": "1201080",
    "end": "1207919"
  },
  {
    "text": "uh it's completely implemented in software and separating systems you can",
    "start": "1207919",
    "end": "1213020"
  },
  {
    "text": "use on Linux rtcp wake and some other functionality to actually uh do that on",
    "start": "1213020",
    "end": "1218840"
  },
  {
    "text": "Windows and servers are impacted but it's actually",
    "start": "1218840",
    "end": "1223940"
  },
  {
    "text": "needs some additional effort from that I care to call such functions to go to the sleep mode",
    "start": "1223940",
    "end": "1230000"
  },
  {
    "text": "so yeah it's exactly what I told you so basically Linux and windows are just to",
    "start": "1230000",
    "end": "1236360"
  },
  {
    "text": "configure in S3 functionality we can make it this exploitation successful on",
    "start": "1236360",
    "end": "1242720"
  },
  {
    "text": "servers and basically",
    "start": "1242720",
    "end": "1248780"
  },
  {
    "text": "saying this it's not exploitable for short wears it's actually the lazy disclosure for almost a month for the",
    "start": "1248780",
    "end": "1255740"
  },
  {
    "text": "server machines from one of the vendors and I think basically collaborating better collaboration between the vendor",
    "start": "1255740",
    "end": "1261980"
  },
  {
    "text": "and researcher and going more transparent way about like yes it is impactful it actually will be first of",
    "start": "1261980",
    "end": "1268820"
  },
  {
    "text": "all protect better than ecosystem another vulnerability we are talking",
    "start": "1268820",
    "end": "1275120"
  },
  {
    "text": "about uh uh binary we entered 22nd 15.",
    "start": "1275120",
    "end": "1280340"
  },
  {
    "text": "so basically this one is actually arbitrary code execution in DXE and what",
    "start": "1280340",
    "end": "1287360"
  },
  {
    "text": "interesting so basically this driver it's not privileged it's not smm system",
    "start": "1287360",
    "end": "1292580"
  },
  {
    "text": "management mod driver and of course like it's given a high care opportunity to bypass manager earlier uh",
    "start": "1292580",
    "end": "1299840"
  },
  {
    "text": "the secure boot but basically also it's open in other attack surface what if if",
    "start": "1299840",
    "end": "1306140"
  },
  {
    "text": "we exploit in the vulnerability not directly from operating system what if we gain the code execution on Dixie",
    "start": "1306140",
    "end": "1312440"
  },
  {
    "text": "phase and then exploit something from there and actually most of",
    "start": "1312440",
    "end": "1318340"
  },
  {
    "text": "most of most of the security features been",
    "start": "1318340",
    "end": "1325460"
  },
  {
    "text": "designed and not considering this as an attack surface and this example Intel biosguard I don't know guys if you",
    "start": "1325460",
    "end": "1332000"
  },
  {
    "text": "everyone knows what the bias guard is but it's actually protecting the spyware",
    "start": "1332000",
    "end": "1337039"
  },
  {
    "text": "storage from the changes so basically it's very important security feature against firmware",
    "start": "1337039",
    "end": "1345380"
  },
  {
    "text": "implants but it can be easily disabled by one data buffer",
    "start": "1345380",
    "end": "1352100"
  },
  {
    "text": "so also a reminder all vulnerabilities we presented it is actually will be not",
    "start": "1352100",
    "end": "1358220"
  },
  {
    "text": "protecting from secure cores it will be not protected with drtm's srtms and other stuff because TPMS are not",
    "start": "1358220",
    "end": "1365900"
  },
  {
    "text": "extending their PCR in runtime where all these measurement is start right and",
    "start": "1365900",
    "end": "1371120"
  },
  {
    "text": "remote code of gestation for these devices will be completely blind for such exploitation",
    "start": "1371120",
    "end": "1377179"
  },
  {
    "text": "but let's talk about the Automation and this is very important piece why it is",
    "start": "1377179",
    "end": "1382760"
  },
  {
    "text": "repeatable failures because it's a lot of vulnerabilities existing the space and I think it's need to be fixed of",
    "start": "1382760",
    "end": "1389480"
  },
  {
    "text": "course like we already committed to like a system and presented the E5 Explorer uh plugin a few years ago on black hat",
    "start": "1389480",
    "end": "1396140"
  },
  {
    "text": "Europe and also we developed the whole approach with white wet static analysis and under",
    "start": "1396140",
    "end": "1403340"
  },
  {
    "text": "constraint symbolic execution to find such problems so just an example if",
    "start": "1403340",
    "end": "1410059"
  },
  {
    "text": "go with static analysis without some partial emulation or actual symbolic",
    "start": "1410059",
    "end": "1416059"
  },
  {
    "text": "execution for Discovery it actually can cause some of the false positives in some cases and if I explorer actually",
    "start": "1416059",
    "end": "1423260"
  },
  {
    "text": "contain automatic Discovery for vulnerabilities with the git variables just use it on your firmware for finding",
    "start": "1423260",
    "end": "1430280"
  },
  {
    "text": "it before releasing to the customers but how we can actually can improve it",
    "start": "1430280",
    "end": "1436220"
  },
  {
    "text": "and what the limitations are about the current approaches it is first of all",
    "start": "1436220",
    "end": "1442000"
  },
  {
    "text": "numbers of false positives it's basically most of them based on very",
    "start": "1442000",
    "end": "1448580"
  },
  {
    "text": "straightforward pattern matching and we just create a lot of limitations and our",
    "start": "1448580",
    "end": "1454100"
  },
  {
    "text": "approach is actually leveraged in my semantic properties and lightweight content code patterns for actually",
    "start": "1454100",
    "end": "1460940"
  },
  {
    "text": "develop the Shakers to detect it so it's just like literally a pipeline for the analysis don't want to spend much time",
    "start": "1460940",
    "end": "1468159"
  },
  {
    "text": "interesting point it is intermediate representation which is actually used for symbolic execution and semantic",
    "start": "1468159",
    "end": "1474380"
  },
  {
    "text": "annotations there so it's how the lifting uh for uh",
    "start": "1474380",
    "end": "1480080"
  },
  {
    "text": "customers I say form it looks like and here's a sneak peek about semantic",
    "start": "1480080",
    "end": "1487159"
  },
  {
    "text": "annotations actually it's exactly what the firmware hand does for detections it's open source uh technology uh just",
    "start": "1487159",
    "end": "1494780"
  },
  {
    "text": "look on our GitHub but it goes on top of some intermediate",
    "start": "1494780",
    "end": "1500480"
  },
  {
    "text": "representation to actually power this Visa semantic annotations",
    "start": "1500480",
    "end": "1506919"
  },
  {
    "text": "and static Checkers it's actually pretty straightforward we just actually add in",
    "start": "1507140",
    "end": "1512179"
  },
  {
    "text": "some additional Rule and runtime for kind of like a detecting such problems and it's augmented with a code flow and",
    "start": "1512179",
    "end": "1520580"
  },
  {
    "text": "code flow properties and data flow dependencies and properties as well and we have intercall properties there",
    "start": "1520580",
    "end": "1529960"
  },
  {
    "text": "so basically we are instrumenting this intermediate representation to simulate execution from there right so and I",
    "start": "1531380",
    "end": "1538880"
  },
  {
    "text": "think actually about the symbolic execution for finding some vulnerabilities it's being covered also",
    "start": "1538880",
    "end": "1545179"
  },
  {
    "text": "in my talk in 2016 actually when I've been working for Intel Corporation we",
    "start": "1545179",
    "end": "1550760"
  },
  {
    "text": "developed on cmex the whole framework for finding such vulnerabilities but",
    "start": "1550760",
    "end": "1555860"
  },
  {
    "text": "looks like it's been not used much after I left",
    "start": "1555860",
    "end": "1561220"
  },
  {
    "text": "all right another pay phase vulnerability it's 2016 14 uh to 20 22nd 014 uh get",
    "start": "1562220",
    "end": "1572360"
  },
  {
    "text": "variable leading to arbitrary code execution and this one is very important to remember",
    "start": "1572360",
    "end": "1579320"
  },
  {
    "text": "because this one we used for actual Intel ppam bypass",
    "start": "1579320",
    "end": "1585400"
  },
  {
    "text": "and also it's been fun as you can see here it's actually been found uh over",
    "start": "1586279",
    "end": "1593659"
  },
  {
    "text": "our framework right with a symbolic execution another demo it's a get",
    "start": "1593659",
    "end": "1600320"
  },
  {
    "text": "variable another one but in the system management mode so basically it's detect",
    "start": "1600320",
    "end": "1605840"
  },
  {
    "text": "uh detected yep",
    "start": "1605840",
    "end": "1610539"
  },
  {
    "text": "and buffer overflow classical with a comb buffer constrained so lead to the",
    "start": "1611900",
    "end": "1618200"
  },
  {
    "text": "copy ma'am so symbolic execution is pretty effective as you can see here anyway so first of all I wanted to thank",
    "start": "1618200",
    "end": "1627020"
  },
  {
    "text": "you the p-shirt from American Mega Trends to actually doing a hard job to",
    "start": "1627020",
    "end": "1632360"
  },
  {
    "text": "patching all the vulnerabilities we discovered and actually uh related to American megatrans and",
    "start": "1632360",
    "end": "1639940"
  },
  {
    "text": "help protect the ecosystem so another cool business goals to the HP",
    "start": "1639940",
    "end": "1647000"
  },
  {
    "text": "preserved which has been constantly working with the binary team on the different disclosures and it's been a",
    "start": "1647000",
    "end": "1653240"
  },
  {
    "text": "hard work from the team to actually make all these products are secure and",
    "start": "1653240",
    "end": "1658580"
  },
  {
    "text": "all the advisors are public now right but let's focus on Intel ppam and",
    "start": "1658580",
    "end": "1664460"
  },
  {
    "text": "NCM internals so um istem and pfam it's actually the most",
    "start": "1664460",
    "end": "1670700"
  },
  {
    "text": "fancy mitigations and system management mode it's get applied for most streets and times right so basically what's",
    "start": "1670700",
    "end": "1677299"
  },
  {
    "text": "happening on P1 it's provide isolation for every SMI Handler",
    "start": "1677299",
    "end": "1685220"
  },
  {
    "text": "from each other previously when you exploit one SMI Handler you get access to the flat memory space and you can",
    "start": "1685220",
    "end": "1692000"
  },
  {
    "text": "actually influence on any others after the PPM get introduced it's actually",
    "start": "1692000",
    "end": "1697700"
  },
  {
    "text": "pretty close with on arm trusted execution environment does it's",
    "start": "1697700",
    "end": "1704240"
  },
  {
    "text": "isolating different easy Ebbs it's the same thing with the semi handlers should happen right",
    "start": "1704240",
    "end": "1711140"
  },
  {
    "text": "how the people work it's actually can break on three different phases first phase is of course like kind of like",
    "start": "1711140",
    "end": "1717380"
  },
  {
    "text": "understand if people will be enabled and the right platform properties are",
    "start": "1717380",
    "end": "1723080"
  },
  {
    "text": "available second it's kind of like initializing the Monitor and then get modules loaded and policies",
    "start": "1723080",
    "end": "1730159"
  },
  {
    "text": "so it's uh how actually uh the polishes are get checked and",
    "start": "1730159",
    "end": "1738200"
  },
  {
    "text": "loaded up policies are here about",
    "start": "1738200",
    "end": "1745220"
  },
  {
    "text": "this one is actually important you can see here it's checking the ppam image",
    "start": "1745220",
    "end": "1750620"
  },
  {
    "text": "before loading to parse all the policies and all these features are undocumented",
    "start": "1750620",
    "end": "1756140"
  },
  {
    "text": "it's actually been reverse engineered by binary team and provide all this information available to research",
    "start": "1756140",
    "end": "1762980"
  },
  {
    "text": "community so basically what's happening check ppam image it's actually just",
    "start": "1762980",
    "end": "1770600"
  },
  {
    "text": "about like msec smram Hub will be break Department civilization right so if we",
    "start": "1770600",
    "end": "1777740"
  },
  {
    "text": "have able to single byte right to the memory space from msec smram we can",
    "start": "1777740",
    "end": "1784220"
  },
  {
    "text": "change some data storage which is actually will be break initialization and the feature will be",
    "start": "1784220",
    "end": "1790159"
  },
  {
    "text": "disabled I remember the slide at the beginning with the boot guard that's exactly the same type of vulnerabilities",
    "start": "1790159",
    "end": "1796580"
  },
  {
    "text": "can be used for bypassing such security features and",
    "start": "1796580",
    "end": "1802159"
  },
  {
    "text": "ppam manifest saved in the configuration table and basically it can be received",
    "start": "1802159",
    "end": "1808640"
  },
  {
    "text": "by operating system component and runtime easily so another one installation and",
    "start": "1808640",
    "end": "1815360"
  },
  {
    "text": "configuration for the policies on access basically every SMI Handler have a",
    "start": "1815360",
    "end": "1820520"
  },
  {
    "text": "configuration for initialization of access to input output ports MSR",
    "start": "1820520",
    "end": "1825559"
  },
  {
    "text": "registers and some other policies actually it's pretty interesting technology and I think actually it is a",
    "start": "1825559",
    "end": "1832460"
  },
  {
    "text": "game changer in general but it need to be more securely designed because on the",
    "start": "1832460",
    "end": "1837919"
  },
  {
    "text": "specifications looks better than actual implementations let's talk about the attack surface and",
    "start": "1837919",
    "end": "1844760"
  },
  {
    "text": "we use as a target one of the most recent HP platforms and basically",
    "start": "1844760",
    "end": "1850940"
  },
  {
    "text": "this white book I think it's based on the tiger Lake CPU which is very new",
    "start": "1850940",
    "end": "1856700"
  },
  {
    "text": "it's 11 generation and it's how actually this picture",
    "start": "1856700",
    "end": "1862659"
  },
  {
    "text": "summarized a whole block of the information we've been talking before and how this connects to the ppam bypass",
    "start": "1862659",
    "end": "1870679"
  },
  {
    "text": "so we have a pre-e5 vulnerabilities which is can influence to some data",
    "start": "1870679",
    "end": "1876919"
  },
  {
    "text": "storage which is here actually showed as a hopes data and then bypass the who",
    "start": "1876919",
    "end": "1884059"
  },
  {
    "text": "configuration loading for the people boom we have a CPU smm variable which is",
    "start": "1884059",
    "end": "1893360"
  },
  {
    "text": "actually contains some configurational data and as we can see into reference implementation which is",
    "start": "1893360",
    "end": "1899240"
  },
  {
    "text": "available on GitHub like POC so it is kind of like it looks different",
    "start": "1899240",
    "end": "1906820"
  },
  {
    "text": "so and also this Hub data it's accessible from",
    "start": "1907220",
    "end": "1912980"
  },
  {
    "text": "the operating system layer but basically we can go through the pi to kind of like",
    "start": "1912980",
    "end": "1918080"
  },
  {
    "text": "a bypasses so I will be move a bit faster just to",
    "start": "1918080",
    "end": "1924740"
  },
  {
    "text": "able to cover very important information on the next slide so",
    "start": "1924740",
    "end": "1930260"
  },
  {
    "text": "people manifest it's actually all the data about the",
    "start": "1930260",
    "end": "1935480"
  },
  {
    "text": "policies contained there and of course it should be signed it and attestation",
    "start": "1935480",
    "end": "1940820"
  },
  {
    "text": "should work for this manifest unfortunately what we discover all the certificates across multiple vendors and",
    "start": "1940820",
    "end": "1948380"
  },
  {
    "text": "platforms they've been outdated and it's just a bit more details on the certificate actually the reverse",
    "start": "1948380",
    "end": "1954860"
  },
  {
    "text": "Engineers is and all the parses will be available a bit later under embargo now",
    "start": "1954860",
    "end": "1962360"
  },
  {
    "text": "and people manifest actually outdated not on a single platform as I mentioned we checked a lot of different platforms",
    "start": "1962360",
    "end": "1969380"
  },
  {
    "text": "probably like 2020 it's been one of the first BPM configurations and uh",
    "start": "1969380",
    "end": "1974440"
  },
  {
    "text": "implementations and basically it's why it's not been much available in the wild but we check it around like a 200",
    "start": "1974440",
    "end": "1981799"
  },
  {
    "text": "systems and all of them actually outdated with the previous year certificate what's",
    "start": "1981799",
    "end": "1988100"
  },
  {
    "text": "that mean attestation for this feature it just doesn't work or never been used",
    "start": "1988100",
    "end": "1993940"
  },
  {
    "text": "so uh I think this certificate is being",
    "start": "1993940",
    "end": "1999039"
  },
  {
    "text": "kind of embedded to the reference implementation from Silicon vendor and",
    "start": "1999039",
    "end": "2004720"
  },
  {
    "text": "then shipped to the device manufacturers and they just use this reference implementation in place and never get",
    "start": "2004720",
    "end": "2010539"
  },
  {
    "text": "updated this root certificate for um for uh attestation and I think is this",
    "start": "2010539",
    "end": "2020080"
  },
  {
    "text": "certificate is actually issued by Intel Corporation and I think it also shows a",
    "start": "2020080",
    "end": "2026559"
  },
  {
    "text": "very important supply chain problem which is not don't need any offense exploitation so basically uh this kind",
    "start": "2026559",
    "end": "2034600"
  },
  {
    "text": "of like a problem with certificate validity valid after right all the",
    "start": "2034600",
    "end": "2039880"
  },
  {
    "text": "verification will be failed but the code are assigned if we will be in bad such",
    "start": "2039880",
    "end": "2045159"
  },
  {
    "text": "thing or component to newer firmware basically it will be failed to load",
    "start": "2045159",
    "end": "2051040"
  },
  {
    "text": "right and also the ppam features right now it's available only the most uh",
    "start": "2051040",
    "end": "2057460"
  },
  {
    "text": "expensive uh Intel CPUs with vipro so basically",
    "start": "2057460",
    "end": "2063700"
  },
  {
    "text": "that's interesting way which is goals to bypass the PPM from the different perspective without exploitation we show",
    "start": "2063700",
    "end": "2070720"
  },
  {
    "text": "you some with an exploitation and here is without without supply chain failure",
    "start": "2070720",
    "end": "2076179"
  },
  {
    "text": "from the vendor but also thank you for Intel PCR we've been a few months very hard working with",
    "start": "2076179",
    "end": "2083260"
  },
  {
    "text": "them closely to actually make all the fixes available and as a conclusion I think it's important",
    "start": "2083260",
    "end": "2090638"
  },
  {
    "text": "to remember so this feature should be properly configured by the vendors and",
    "start": "2090639",
    "end": "2096460"
  },
  {
    "text": "consistent with an ecosystem again static storage it's actually",
    "start": "2096460",
    "end": "2101700"
  },
  {
    "text": "contain a lot of important data which it should be considered as a potential",
    "start": "2101700",
    "end": "2107200"
  },
  {
    "text": "attack surface and actually open the attacker for possibilities for an easy",
    "start": "2107200",
    "end": "2112240"
  },
  {
    "text": "bypasses and also it's going to be modified something in",
    "start": "2112240",
    "end": "2117820"
  },
  {
    "text": "memory and Lead arbitrary code execution gaining during the early boot right and",
    "start": "2117820",
    "end": "2123280"
  },
  {
    "text": "this actually arose attacker to gain much more interesting security boundaries and attack the platforms",
    "start": "2123280",
    "end": "2130900"
  },
  {
    "text": "and just one more reminder to the industry complexity it is an enemy of",
    "start": "2130900",
    "end": "2136480"
  },
  {
    "text": "security so all",
    "start": "2136480",
    "end": "2142180"
  },
  {
    "text": "actually firmware controls for detection such vulnerabilities at scale the scanner everything is open sourced",
    "start": "2142180",
    "end": "2148839"
  },
  {
    "text": "available on the GitHub and all the advice advisories are public so please enjoy looking on it and fixing these",
    "start": "2148839",
    "end": "2155920"
  },
  {
    "text": "problems at scale thank you very much [Applause]",
    "start": "2155920",
    "end": "2166860"
  },
  {
    "text": "[Music]",
    "start": "2166860",
    "end": "2169969"
  },
  {
    "text": "thank you [Music]",
    "start": "2172079",
    "end": "2176900"
  }
]