[
  {
    "text": "and today is the start of this room's sessions and it is digging for IE1",
    "start": "240",
    "end": "5839"
  },
  {
    "text": "sandbox escapes and your speaker today is James",
    "start": "5839",
    "end": "11040"
  },
  {
    "text": "Forshaw hi yes good morning it's uh impressive to see so many people at at this ungodly hour",
    "start": "14920",
    "end": "21800"
  },
  {
    "text": "um yeah so I'm here to speak about some of the stuff I've done in IE",
    "start": "21800",
    "end": "28000"
  },
  {
    "text": "specifically IE1 to find ways out of its sandbox specifically on Windows 8 which",
    "start": "28000",
    "end": "33760"
  },
  {
    "text": "has a new enhanced sandbox which is better than the old one apparently um some would beg to differ um so it is in",
    "start": "33760",
    "end": "42879"
  },
  {
    "text": "a workshop format i've presented this before at a few different conferences where it was more specifically about the",
    "start": "42879",
    "end": "49280"
  },
  {
    "text": "bugs I found during the Microsoft bug bounty period which was running uh last",
    "start": "49280",
    "end": "55120"
  },
  {
    "text": "year just prior to black hat um but I hope to now do sort of a more expanded",
    "start": "55120",
    "end": "61280"
  },
  {
    "text": "talk talk about my sort of methodology of how I go about finding sandbox escapes in IE what sort of techniques I",
    "start": "61280",
    "end": "68479"
  },
  {
    "text": "use we'll still go into some of the bugs because the bugs are quite useful to sort of demonstrate what types of things",
    "start": "68479",
    "end": "74880"
  },
  {
    "text": "you can actually find how you can actually exploit those sort of scenarios you find yourself",
    "start": "74880",
    "end": "80200"
  },
  {
    "text": "in and as this is a workshop this isn't just a straight presentation to people",
    "start": "80200",
    "end": "86720"
  },
  {
    "text": "if people have questions if I don't make the blindest bit of sense during the during the workshop I encourage people",
    "start": "86720",
    "end": "92479"
  },
  {
    "text": "to ask questions uh bug me about stuff i'm I hopefully should answer at least most sort of questions about this but if",
    "start": "92479",
    "end": "98880"
  },
  {
    "text": "not then I'm sure I can uh I bluff my way through and and make it up as I go along",
    "start": "98880",
    "end": "106400"
  },
  {
    "text": "so I don't people don't have to obviously uh actually participate i see",
    "start": "107640",
    "end": "113040"
  },
  {
    "text": "some people with with laptops here but um if you want to you can um I'll I've",
    "start": "113040",
    "end": "120000"
  },
  {
    "text": "got some links as you can see right at the bottom of the slides there's a link to my GitHub page where you can actually download pre-built binaries for uh some",
    "start": "120000",
    "end": "127439"
  },
  {
    "text": "of the example exploits and some of the tools I'm going to use and there's also some other",
    "start": "127439",
    "end": "134239"
  },
  {
    "text": "resources um sort of specifically there's actually the source code there as well on my GitHub page so if you",
    "start": "134239",
    "end": "140000"
  },
  {
    "text": "actually want to look at it in more detail you can do so um but you don't have as I say you don't have to you can",
    "start": "140000",
    "end": "146080"
  },
  {
    "text": "just listen to me waffle on for two hours if you like um now I'm going to go into some detail of the IE sandbox but",
    "start": "146080",
    "end": "154000"
  },
  {
    "text": "I'm not going to go into sort of intricate minutia about it so there's",
    "start": "154000",
    "end": "159920"
  },
  {
    "text": "actually a sort of quite good write up by Mark Y who works for IBM X Force who",
    "start": "159920",
    "end": "165599"
  },
  {
    "text": "presented it a few times and goes into far more depth about the IE sandbox",
    "start": "165599",
    "end": "170640"
  },
  {
    "text": "implementation so it's definitely recommend you go and try and pick that up and if you want to actually read into",
    "start": "170640",
    "end": "175760"
  },
  {
    "text": "more about the sandbox stuff so this is my background i do have to give some sort of background otherwise we've got",
    "start": "175760",
    "end": "182159"
  },
  {
    "text": "no sort of nice base with which to uh to play and I is it's fairly typical it was",
    "start": "182159",
    "end": "192239"
  },
  {
    "text": "one of the first browser sandboxes if not the first browser sandbox to come along originally developed in Vista um",
    "start": "192239",
    "end": "199200"
  },
  {
    "text": "and so under something called protected mode and what it used was it used a new feature of Vista called integrity levels",
    "start": "199200",
    "end": "206560"
  },
  {
    "text": "or mandatory integrity levels which allows you to restrict what a a process",
    "start": "206560",
    "end": "212080"
  },
  {
    "text": "can do without necessarily being a different user and so what the actual",
    "start": "212080",
    "end": "217840"
  },
  {
    "text": "sort of basic setup is is you've got a a low permission zone which is running with uh less permissions and this is",
    "start": "217840",
    "end": "225360"
  },
  {
    "text": "where all your internet content is rendered so whenever you browse to a website it will be rendered the HTML",
    "start": "225360",
    "end": "234560"
  },
  {
    "text": "will be parsed the JavaScript will be run within this lower privileged code so the theory being this untrusted data",
    "start": "234560",
    "end": "241439"
  },
  {
    "text": "which is getting stuck into Internet Explorer if there is a remote code execution vulnerability and and let's",
    "start": "241439",
    "end": "247760"
  },
  {
    "text": "face it i.e has one or two remote code execution vulnerabilities the the worst that can",
    "start": "247760",
    "end": "252879"
  },
  {
    "text": "happen is you get contained within this sandbox and that's the idea now you",
    "start": "252879",
    "end": "259759"
  },
  {
    "text": "wouldn't be able to do a lot you wouldn't be able to do very much if that was the only piece of code running so",
    "start": "259759",
    "end": "265360"
  },
  {
    "text": "there's actually a normal privileged uh piece of code uh the sort of frame process which actually the thing which",
    "start": "265360",
    "end": "271440"
  },
  {
    "text": "sort of renders the window and this contains the functionality to uh sort of",
    "start": "271440",
    "end": "277199"
  },
  {
    "text": "support these lowprivileged uh tabs low privileged sandbox uh applications and",
    "start": "277199",
    "end": "283280"
  },
  {
    "text": "it does that through a broker so it there's a piece of code in this higher privilege process which sort of",
    "start": "283280",
    "end": "289639"
  },
  {
    "text": "brokers functions so if you want to open a file for example you talk to the broker and say hey I want to open this",
    "start": "289639",
    "end": "295759"
  },
  {
    "text": "file will you let me do it and the broker is then responsible for the s of security enforcement of",
    "start": "295759",
    "end": "301240"
  },
  {
    "text": "that now in contrast to chrome sandbox for example um or the Safari",
    "start": "301240",
    "end": "309160"
  },
  {
    "text": "sandbox IE has a really weird sort of view on uh trust so internet zone trusts",
    "start": "309160",
    "end": "317120"
  },
  {
    "text": "or the internet uh facing components are absolutely untrusted and run with his",
    "start": "317120",
    "end": "322479"
  },
  {
    "text": "low privilege however if you browse to an internet site uh an internet site this is usually categorized by a host",
    "start": "322479",
    "end": "330080"
  },
  {
    "text": "name with no dots in it or something which is explicitly marked as in the internet zone it actually runs it at the",
    "start": "330080",
    "end": "336639"
  },
  {
    "text": "normal user permissions so if you're able to run an exploit within that uh an",
    "start": "336639",
    "end": "343280"
  },
  {
    "text": "internet internet zone page you don't actually even have to deal with the sandbox and as ZDI demonstrated the",
    "start": "343280",
    "end": "350720"
  },
  {
    "text": "other week that you can use this to abuse um IE to actually break out of the",
    "start": "350720",
    "end": "355919"
  },
  {
    "text": "sandbox directly and this is something Microsoft apparently can't be bothered to fix so that's pretty uh pretty sad",
    "start": "355919",
    "end": "363280"
  },
  {
    "text": "does that go for active controls JavaScript all the sandboxing yeah",
    "start": "363280",
    "end": "368479"
  },
  {
    "text": "everything should run in the sandbox process nothing should be run outside of that from you from",
    "start": "368479",
    "end": "376319"
  },
  {
    "text": "internet control so one of the limitations on um",
    "start": "376319",
    "end": "383680"
  },
  {
    "text": "the original implementation protected mode was all this low integrity level",
    "start": "383680",
    "end": "388800"
  },
  {
    "text": "did was it restricted the ability to write to resources so the usual modus operandi sort of of a",
    "start": "388800",
    "end": "397360"
  },
  {
    "text": "a remote code execution vulnerability would be you you pop IE you run code and",
    "start": "397360",
    "end": "402560"
  },
  {
    "text": "then you can install your malware permanently and it just runs forever um you put it say in the startup folder or",
    "start": "402560",
    "end": "408160"
  },
  {
    "text": "somewhere like that or in the registry or some other cunning way the idea here is you can't easily do",
    "start": "408160",
    "end": "415600"
  },
  {
    "text": "that with the sandbox because you can't write to those locations on disk but there's nothing stopping a piece of",
    "start": "415600",
    "end": "421759"
  },
  {
    "text": "malware sitting there temporarily hoovering off your data because you can read everything it doesn't",
    "start": "421759",
    "end": "428120"
  },
  {
    "text": "matter so with Windows 8 they added a new sandboxing technology app containers",
    "start": "428120",
    "end": "433919"
  },
  {
    "text": "it's what actually underpins the sort of metro applications or modern applications or",
    "start": "433919",
    "end": "439520"
  },
  {
    "text": "whatever the hell they're calling them this week and they use this now as a the",
    "start": "439520",
    "end": "445039"
  },
  {
    "text": "new enhanced protected mode sandbox which is a lot more restrictive specifically you need to",
    "start": "445039",
    "end": "450800"
  },
  {
    "text": "actually give explicit permissions to both read and write to resources and",
    "start": "450800",
    "end": "456400"
  },
  {
    "text": "this is done through the usual access control mechanisms in in Windows so for",
    "start": "456400",
    "end": "462319"
  },
  {
    "text": "example um IE has a special SID associated with the process and so you",
    "start": "462319",
    "end": "467840"
  },
  {
    "text": "can add this um special SID into an access control list and give uh access to IE only there's also a group SID uh",
    "start": "467840",
    "end": "476160"
  },
  {
    "text": "the all applications packages group SID which allows you to access resources based on",
    "start": "476160",
    "end": "481960"
  },
  {
    "text": "groups and then EPM goes even further so app containers allow you to do",
    "start": "481960",
    "end": "487360"
  },
  {
    "text": "interesting sandboxing techniques so it has something called capabilities and these reflect what your application is",
    "start": "487360",
    "end": "493759"
  },
  {
    "text": "allowed to do so there's things like can I access the internet at all and that's a capability if you have no capab if the",
    "start": "493759",
    "end": "501120"
  },
  {
    "text": "capability flag is not set for internet access you can't get internet access and and that's the end of it there's a few",
    "start": "501120",
    "end": "507759"
  },
  {
    "text": "others another interesting one is hosting local servers and the the ZDI",
    "start": "507759",
    "end": "512959"
  },
  {
    "text": "sandbox escape demonstrated the um well a couple of months ago is actually will",
    "start": "512959",
    "end": "519919"
  },
  {
    "text": "not work will not directly work in EPM because you can't bind the local web server and use that to do a loop back",
    "start": "519919",
    "end": "526640"
  },
  {
    "text": "attack and and get internet permissions so it furthers sort of reduces the attack surface from the perspective of",
    "start": "526640",
    "end": "533600"
  },
  {
    "text": "the operating system but of course as I say it actually has",
    "start": "533600",
    "end": "538640"
  },
  {
    "text": "to do something useful so it has the broker associated with it which is implemented o over com so com is a",
    "start": "538640",
    "end": "545600"
  },
  {
    "text": "technology which has been around for many many years in in Windows and it use it can be used to do a sort of out of",
    "start": "545600",
    "end": "552080"
  },
  {
    "text": "process access to uh resources so let's just at least have a",
    "start": "552080",
    "end": "558240"
  },
  {
    "text": "quick look at IE yeah well bit of advertising from my friends",
    "start": "558240",
    "end": "565680"
  },
  {
    "text": "there obviously um right so we can actually just look at if I bring up a",
    "start": "565680",
    "end": "571760"
  },
  {
    "text": "copy of IE so the desktop IE is um is designed for",
    "start": "571760",
    "end": "578800"
  },
  {
    "text": "sort of legacy use they say because on Windows 8 obviously there's the full um the full screen version of IE but the",
    "start": "578800",
    "end": "588320"
  },
  {
    "text": "full screen version of IE is always running with the enhanced detector mode on there there's no way of turning that",
    "start": "588320",
    "end": "593519"
  },
  {
    "text": "off whereas the desktop mode uh as we'll see isn't always a guarantee so we can",
    "start": "593519",
    "end": "598959"
  },
  {
    "text": "actually just look in if you bring up like process",
    "start": "598959",
    "end": "603519"
  },
  {
    "text": "explorer um and we can zoom in a bit so we've got a copy of IE here this is",
    "start": "604600",
    "end": "610800"
  },
  {
    "text": "actually the u the metroized IE uh as you see it's because it's suspended and",
    "start": "610800",
    "end": "616399"
  },
  {
    "text": "we can see that we've got a medium process which is our uh broker process",
    "start": "616399",
    "end": "622240"
  },
  {
    "text": "is our frame process doing the rendering and then we've got our sandboxed application our app container and we can",
    "start": "622240",
    "end": "629279"
  },
  {
    "text": "see if we scroll further down we should also see a copy of desktop IE which has",
    "start": "629279",
    "end": "634560"
  },
  {
    "text": "the same medium and app container",
    "start": "634560",
    "end": "639399"
  },
  {
    "text": "but actually security-wise in contrast to something like the Chrome sandbox which is",
    "start": "639680",
    "end": "644800"
  },
  {
    "text": "actually really really restrictive of what it allows you to do you can see the actual um permissions given to the the",
    "start": "644800",
    "end": "652079"
  },
  {
    "text": "low integrity sandbox is actually quite a lot theoretically you can shut down the machine and and and change the time",
    "start": "652079",
    "end": "658160"
  },
  {
    "text": "zone and do other weird stuff potentially um whereas if yeah if you",
    "start": "658160",
    "end": "663440"
  },
  {
    "text": "look at sort of Chrome it gives you nothing and really really heavily restricts what you're",
    "start": "663440",
    "end": "669440"
  },
  {
    "text": "allowed to do so even even before we've even started there's there's a certain amount of sort of leeway in actually the",
    "start": "669440",
    "end": "677760"
  },
  {
    "text": "way in which IIEIE is sandboxing itself and this is for legacy reasons so IE has",
    "start": "677760",
    "end": "682959"
  },
  {
    "text": "a lot of enterprise users uh it has a lot of unfortunate legacy it needs to",
    "start": "682959",
    "end": "688160"
  },
  {
    "text": "carry along with it it needs to make sure that as few applications break as possible and so unfortunately",
    "start": "688160",
    "end": "696279"
  },
  {
    "text": "um it's the security is is less because it has to support those scenarios which",
    "start": "696279",
    "end": "702240"
  },
  {
    "text": "is unfortunate so let's go back to the presentation",
    "start": "702240",
    "end": "708360"
  },
  {
    "text": "so one of the things which comes about through this legacy support is the fact",
    "start": "710560",
    "end": "717640"
  },
  {
    "text": "that there's loads of like old plugins load of old active X controls",
    "start": "717640",
    "end": "724320"
  },
  {
    "text": "um toolbars all that sort of useless junk which IE generally",
    "start": "724320",
    "end": "730279"
  },
  {
    "text": "accumulates but Microsoft didn't want IE to just drop support for those",
    "start": "730279",
    "end": "737040"
  },
  {
    "text": "features so it tried to emulate some a sort of um environment in which the",
    "start": "737040",
    "end": "744399"
  },
  {
    "text": "control would normally find itself to try and make it at least amanable to it so for example the old control with IE6",
    "start": "744399",
    "end": "751839"
  },
  {
    "text": "would be running as normal permissions and it might want to create a new process which does something and",
    "start": "751839",
    "end": "757440"
  },
  {
    "text": "unfortunately that shouldn't be allowed or at least if it is allowed would run with this lower permission and that may",
    "start": "757440",
    "end": "762639"
  },
  {
    "text": "then break and then it wouldn't work so what it does is it proxies along certain",
    "start": "762639",
    "end": "768720"
  },
  {
    "text": "function calls so create process or the co-create instance which is used for com instantiation it will actually proxy",
    "start": "768720",
    "end": "774880"
  },
  {
    "text": "these through the broker itself so the broker exposes functions which implement",
    "start": "774880",
    "end": "781279"
  },
  {
    "text": "these at the user level so in theory a poorly written extension can still use",
    "start": "781279",
    "end": "787519"
  },
  {
    "text": "create process and the worst that will happen is you got to click the user has to click a box saying yes I allow you to",
    "start": "787519",
    "end": "793120"
  },
  {
    "text": "run uh command exe or whatever and it does this it does this",
    "start": "793120",
    "end": "798480"
  },
  {
    "text": "security decision through an elevation policy so the elevation policy is something written into registry and",
    "start": "798480",
    "end": "805600"
  },
  {
    "text": "contains basically the information about what processes are allowed to run what com objects are allowed to instantiate",
    "start": "805600",
    "end": "812399"
  },
  {
    "text": "and I'll show that in a bit more detail later as we go into sort of my methodology of finding bugs but",
    "start": "812399",
    "end": "818079"
  },
  {
    "text": "basically this you can just see this in the registry and it's it's effectively",
    "start": "818079",
    "end": "823800"
  },
  {
    "text": "documented now there's a few different policies to support different scenarios uh the ones you're probably most",
    "start": "823800",
    "end": "829839"
  },
  {
    "text": "interested in is the ones which basically say run this executable completely silently with arbitrary",
    "start": "829839",
    "end": "835519"
  },
  {
    "text": "command line do whatever you want and those are the ones you really want to sort of look for when you're going actually after finding bugs in the",
    "start": "835519",
    "end": "841839"
  },
  {
    "text": "elevation policy but there's other ones there's one which actually explicitly states sort of this process is never allowed to",
    "start": "841839",
    "end": "848720"
  },
  {
    "text": "launch you can't even prompt for it so commanderexe for example is set as do no",
    "start": "848720",
    "end": "854000"
  },
  {
    "text": "do not ever give the user the ability to completely screw themselves over but of course things like WScript which runs",
    "start": "854000",
    "end": "860160"
  },
  {
    "text": "arbitrary JavaScript or anything else like that oh that's fine you you can at least just prompt that would be fine so",
    "start": "860160",
    "end": "866320"
  },
  {
    "text": "it's a bit sort of it's bit pointless but yeah",
    "start": "866320",
    "end": "872360"
  },
  {
    "text": "well now IE is is a non it's not a monolithic application there's a lot of",
    "start": "872360",
    "end": "879040"
  },
  {
    "text": "component parts and we only need to kind of know which parts of the Internet Explorer are actually important for",
    "start": "879040",
    "end": "886120"
  },
  {
    "text": "sandbox and it turns out that I explore XC the thing you actually run is little",
    "start": "886120",
    "end": "891839"
  },
  {
    "text": "more than a shim around the uh IE frame DL and this is actually where a lot of",
    "start": "891839",
    "end": "898720"
  },
  {
    "text": "the real guts of IE actually sit so when you're going to do reverse engineering of",
    "start": "898720",
    "end": "904040"
  },
  {
    "text": "IE going to I explore XE is going to get you pretty much nowhere so you have to",
    "start": "904040",
    "end": "910000"
  },
  {
    "text": "go for IE frame and then there's also other support routines as I um for doing",
    "start": "910000",
    "end": "915519"
  },
  {
    "text": "remoting and proxying of uh function calls which are also generally somewhat",
    "start": "915519",
    "end": "920880"
  },
  {
    "text": "important but but perhaps less so now if you know much about IE you'll notice that things like MS HTML which is the",
    "start": "920880",
    "end": "927760"
  },
  {
    "text": "HTML rendered tried in the engine that's got absolutely nothing to do with the sandbox realistically it has no real",
    "start": "927760",
    "end": "933920"
  },
  {
    "text": "concept of the sandboxing mechanism or at least to a certain degree i'm sure it does have some knowledge of it but if",
    "start": "933920",
    "end": "941440"
  },
  {
    "text": "you're actually looking for sandbox escapes MS HTML is completely useless and is unlikely to be um something you",
    "start": "941440",
    "end": "947920"
  },
  {
    "text": "want to go look for okay so given all that information",
    "start": "947920",
    "end": "955120"
  },
  {
    "text": "there's there's some sort of level of uh attack surface you can kind of infer",
    "start": "955120",
    "end": "960320"
  },
  {
    "text": "from um the way in which IIE does its sandboxing and this is probably fairly",
    "start": "960320",
    "end": "965920"
  },
  {
    "text": "similar to pretty much any other sandboxed application out there so",
    "start": "965920",
    "end": "971519"
  },
  {
    "text": "you've got things like accessible resources so you've got this code running at low what actual resources",
    "start": "971519",
    "end": "977920"
  },
  {
    "text": "what files what registry keys what processes can those resources access or can those processes access directly",
    "start": "977920",
    "end": "984480"
  },
  {
    "text": "without ever invoking any of the other sandboxing mechanisms so if you can find something which you can access there",
    "start": "984480",
    "end": "991680"
  },
  {
    "text": "might be a way of exploiting that you've then got the IPC boundary itself so there's a bit of interprocess",
    "start": "991680",
    "end": "998480"
  },
  {
    "text": "communication obviously the internet process has to talk to the broker in some fashion in this case it's",
    "start": "998480",
    "end": "1004440"
  },
  {
    "text": "decom there's probably stuff in the boundary layers which have interesting problems that's certainly true there's",
    "start": "1004440",
    "end": "1011680"
  },
  {
    "text": "the broker itself the broker is obviously exposing functions which should be secure but may not be and I",
    "start": "1011680",
    "end": "1018639"
  },
  {
    "text": "think it should demonstrate that that's that's definitely the case and finally the other major attack surface is what",
    "start": "1018639",
    "end": "1025280"
  },
  {
    "text": "is actually allowed through this elevation policy what processes can you run what objects can you access if any",
    "start": "1025280",
    "end": "1032319"
  },
  {
    "text": "of them do anything bad you potentially got a sandbox escape",
    "start": "1032319",
    "end": "1037558"
  },
  {
    "text": "rider okay so that's my basic background has anyone got any questions about the sort",
    "start": "1037559",
    "end": "1043678"
  },
  {
    "text": "of IE sandbox stuff there's not much yeah Windows",
    "start": "1043679",
    "end": "1049600"
  },
  {
    "text": "7 Windows 8 okay so Windows 7 um does can only run protected mode it's Windows",
    "start": "1053880",
    "end": "1061200"
  },
  {
    "text": "8 specific is enhanced protecting mode because it requires the app container mechanism to",
    "start": "1061200",
    "end": "1066720"
  },
  {
    "text": "work not sure what it does also contain it well it it I think it does some extra",
    "start": "1068200",
    "end": "1075120"
  },
  {
    "text": "features things like 64-bit processes but I think it it can't use the app container mechanism i think it doesn't",
    "start": "1075120",
    "end": "1080799"
  },
  {
    "text": "actually provide you much extra on top of what you'd normally get in protected",
    "start": "1080799",
    "end": "1086160"
  },
  {
    "text": "mode um sorry um yeah the question was on",
    "start": "1086160",
    "end": "1091520"
  },
  {
    "text": "Windows 7 you can set um a flag saying turn on enhanced protective mode the",
    "start": "1091520",
    "end": "1097039"
  },
  {
    "text": "question was does that use some sort of app container mechanism like on Windows 8 and the basic answer is Windows 7 does",
    "start": "1097039",
    "end": "1104720"
  },
  {
    "text": "not have the app container mechanism so any of the more in Windows 8 specific",
    "start": "1104720",
    "end": "1110960"
  },
  {
    "text": "features like capabilities and the um restricted write access are not",
    "start": "1110960",
    "end": "1116080"
  },
  {
    "text": "something you can get through on Windows 7 that make sense",
    "start": "1116080",
    "end": "1122760"
  },
  {
    "text": "okay okay now of course I think Microsoft",
    "start": "1122760",
    "end": "1129600"
  },
  {
    "text": "officially state that protecting mode so the window like prior to um Windows 8",
    "start": "1129600",
    "end": "1135600"
  },
  {
    "text": "the normal protective mode is not a security boundary the usual sort of get out calls for Microsoft to say we don't",
    "start": "1135600",
    "end": "1141440"
  },
  {
    "text": "want to fix any bugs in this in this particular area so it turns out that",
    "start": "1141440",
    "end": "1149360"
  },
  {
    "text": "um you actually have to sort of enable enhanced protecting mode you have to sort of turn it on above and beyond",
    "start": "1149360",
    "end": "1154880"
  },
  {
    "text": "normal protecting mode both in Windows 8",
    "start": "1154880",
    "end": "1160880"
  },
  {
    "text": "yes yes you can have both um on the on Windows 8 if you choose now it was",
    "start": "1160880",
    "end": "1167080"
  },
  {
    "text": "defaulting the first version of RTM 8.1 of Windows 8 using i11 it defaulted to",
    "start": "1167080",
    "end": "1173440"
  },
  {
    "text": "enhanced protective mode being on and that was deemed quite a good thing because much as it may be not the",
    "start": "1173440",
    "end": "1180480"
  },
  {
    "text": "greatest uh sandbox it's at least better than protected mode but presumably for compatibility reasons",
    "start": "1180480",
    "end": "1188320"
  },
  {
    "text": "in one of the subsequent IE1 security updates that was actually now disabled",
    "start": "1188320",
    "end": "1193520"
  },
  {
    "text": "by default automatically so you actually have to go and turn it on unfortunately so if we actually want to test this we",
    "start": "1193520",
    "end": "1199919"
  },
  {
    "text": "kind of need to actually turn it on before you can actually do any testing of EPM because the only bugs Microsoft",
    "start": "1199919",
    "end": "1206080"
  },
  {
    "text": "theoretically will fix is the ones you will find in enhanced protective mode",
    "start": "1206080",
    "end": "1212160"
  },
  {
    "text": "we actually actually see in IE itself um when we're actually doing tests you want",
    "start": "1212160",
    "end": "1217919"
  },
  {
    "text": "to make sure that the you're actually getting a sandbox at all because there's various places where you can",
    "start": "1217919",
    "end": "1223679"
  },
  {
    "text": "accidentally turn off the sandbox so if you rightclick uh a page in IE you can",
    "start": "1223679",
    "end": "1229120"
  },
  {
    "text": "actually see um as I as I show here you can actually see what sandbox mode is",
    "start": "1229120",
    "end": "1234480"
  },
  {
    "text": "running and if you're just normal protected mode it will just say on and if you're enhanced it will say enhanced",
    "start": "1234480",
    "end": "1240080"
  },
  {
    "text": "if you're running with no sandbox at all it will say off so yeah that's just a bit of And",
    "start": "1240080",
    "end": "1246320"
  },
  {
    "text": "yeah the trick is when you're doing this testing not to accidentally end up in no sandbox or protected mode especially if",
    "start": "1246320",
    "end": "1252640"
  },
  {
    "text": "you're actually trying to do it through remote code execution because there's various places where you could",
    "start": "1252640",
    "end": "1258080"
  },
  {
    "text": "accidentally turn off the sandbox such as internet zones or local files so you got to make sure you don't do",
    "start": "1258080",
    "end": "1265000"
  },
  {
    "text": "that now when I did this initial research and arguably the research I'm",
    "start": "1265000",
    "end": "1270320"
  },
  {
    "text": "doing now I didn't actually have a remote code execution in IE so how am I actually going to test a sandbox escape",
    "start": "1270320",
    "end": "1277679"
  },
  {
    "text": "when I can't get code to run in the process well obviously with Windows it gives you plenty of opportunity to",
    "start": "1277679",
    "end": "1284720"
  },
  {
    "text": "inject your code into other processes and so if if you've not seen a simple DL",
    "start": "1284720",
    "end": "1290880"
  },
  {
    "text": "injector using create remote thread I I'd be surprised so that's basically all you have to do you can just inject an",
    "start": "1290880",
    "end": "1296400"
  },
  {
    "text": "arbitrary DL into the sandbox process run your your test run your escape see",
    "start": "1296400",
    "end": "1301600"
  },
  {
    "text": "if it works the only proviso is you need to be able to give IE access to that DL",
    "start": "1301600",
    "end": "1309679"
  },
  {
    "text": "obviously if you say load this DL and you've not given read permissions to it it's not going to get very far so the",
    "start": "1309679",
    "end": "1316320"
  },
  {
    "text": "simplest way change the access control list add the all application packages group SID uh the group to it you can",
    "start": "1316320",
    "end": "1323679"
  },
  {
    "text": "then get read access to that file and you can inject so sec you build up a simple test",
    "start": "1323679",
    "end": "1330640"
  },
  {
    "text": "harness there's there's example code for this on on my GitHub page so we can just",
    "start": "1330640",
    "end": "1335760"
  },
  {
    "text": "do a little simple test just to make sure it's all working",
    "start": "1335760",
    "end": "1342120"
  },
  {
    "text": "um so I do have Okay so I have an example one here",
    "start": "1342120",
    "end": "1348440"
  },
  {
    "text": "so hopefully I don't know whether that right okay so the example code which",
    "start": "1348440",
    "end": "1356559"
  },
  {
    "text": "I've got has an inject DL program which will just allow you to find um inject an",
    "start": "1356559",
    "end": "1363280"
  },
  {
    "text": "arbitrary DL into the process and it has a minus L switch just to print out the",
    "start": "1363280",
    "end": "1368960"
  },
  {
    "text": "current instances of IE running and we obviously want to target the low privilege one this is the sandboxed",
    "start": "1368960",
    "end": "1375000"
  },
  {
    "text": "one so we'll just inject DL into 2580 and example DL and this doesn't",
    "start": "1375000",
    "end": "1383120"
  },
  {
    "text": "actually do any sandbox escapes but it'll just demonstrate that things are actually working we can see in the",
    "start": "1383120",
    "end": "1388400"
  },
  {
    "text": "debugger example DL ran and hopefully somewhere",
    "start": "1388400",
    "end": "1394280"
  },
  {
    "text": "[Music] uh there it is so it just pops up a message box and this is actually running",
    "start": "1394280",
    "end": "1402440"
  },
  {
    "text": "um it's running in the low privilege process so this is directly running as a low",
    "start": "1402440",
    "end": "1408200"
  },
  {
    "text": "privilege so hopefully it's it the example code should give you a",
    "start": "1408200",
    "end": "1413280"
  },
  {
    "text": "reasonable way of actually writing your own stuff it's it's just a simple framework you can just write your own",
    "start": "1413280",
    "end": "1419440"
  },
  {
    "text": "attempt for the sandbox escape run it in this and you can actually just get code to run",
    "start": "1419440",
    "end": "1426440"
  },
  {
    "text": "so that injected into the sandbox yes so the inject DL program creates a",
    "start": "1427440",
    "end": "1437120"
  },
  {
    "text": "um uses a technique to inject a dynamic library into the sandboxed process it",
    "start": "1437120",
    "end": "1443600"
  },
  {
    "text": "will then run in the sandbox process and you can obviously then do test for the actual security of",
    "start": "1443600",
    "end": "1449720"
  },
  {
    "text": "that okay now when I actually came to doing a lot",
    "start": "1449720",
    "end": "1457919"
  },
  {
    "text": "of the sandbox work you will find that a lot of the interfaces into IE sandbox",
    "start": "1457919",
    "end": "1463200"
  },
  {
    "text": "are all running COM so the big challenge usually is to actually how you've got to",
    "start": "1463200",
    "end": "1469760"
  },
  {
    "text": "kind of reverse engineer COM obviously there's very little open source for anything to do with Internet Explorer to",
    "start": "1469760",
    "end": "1476799"
  },
  {
    "text": "you need to have a bit of sort of um knowledge of of what to look for in in",
    "start": "1476799",
    "end": "1482720"
  },
  {
    "text": "com itself and I unfortunately can't talk about com without at least a little bit",
    "start": "1482720",
    "end": "1489440"
  },
  {
    "text": "of background in in how comm is structured so there's sort of three main concepts in in in the way com works and",
    "start": "1489440",
    "end": "1497440"
  },
  {
    "text": "it's used for the acronym is basically um common object model it's designed for",
    "start": "1497440",
    "end": "1502960"
  },
  {
    "text": "sort of sharing objects without worrying about like binary compatibility which is",
    "start": "1502960",
    "end": "1508720"
  },
  {
    "text": "something C++ has traditionally not done very well so at the top you you have",
    "start": "1508720",
    "end": "1514240"
  },
  {
    "text": "what is called a server and a server could be an executable could be a DL and this is the block of code which",
    "start": "1514240",
    "end": "1521360"
  },
  {
    "text": "implements your COM objects and that server is registered in",
    "start": "1521360",
    "end": "1526720"
  },
  {
    "text": "the registry and says I support this COM object and that server can have more",
    "start": "1526720",
    "end": "1532480"
  },
  {
    "text": "than one COM object for example so it can have multiple different classes and these are the classes which are referred to using special uh unique",
    "start": "1532480",
    "end": "1541080"
  },
  {
    "text": "identifiers and then finally each class itself can support multiple ways of looking at it with different functions",
    "start": "1541080",
    "end": "1547600"
  },
  {
    "text": "and these are called interfaces and there sort of predetermined ways of going through each step so for example",
    "start": "1547600",
    "end": "1553600"
  },
  {
    "text": "if you call the function co-create instance in your code you'll instantiate a class which is from the server and",
    "start": "1553600",
    "end": "1560320"
  },
  {
    "text": "then that class has a function called query interface which effectively allows you to cast between different",
    "start": "1560320",
    "end": "1567720"
  },
  {
    "text": "interfaces and that become that will become very important later on when you're trying to find for um the attack",
    "start": "1567720",
    "end": "1573600"
  },
  {
    "text": "surface of a COM object or broker object which is exposed to you in the",
    "start": "1573600",
    "end": "1579520"
  },
  {
    "text": "sandbox and everything's using um you these unique identifiers you'll see them everywhere it's used in Explorer and all",
    "start": "1579559",
    "end": "1586480"
  },
  {
    "text": "that sort of stuff so it's all fair you can find documentation about this it's not too",
    "start": "1586480",
    "end": "1593559"
  },
  {
    "text": "bad now when we want to actually access the we want to break out we want to get our first COM object we kind of have to",
    "start": "1593559",
    "end": "1600080"
  },
  {
    "text": "try and talk to the this broker and I've said the broker is implemented using COM and that's obviously quite important so",
    "start": "1600080",
    "end": "1607120"
  },
  {
    "text": "this is just a little bit of code which gets the broker for you so when IEI starts up the um the main process",
    "start": "1607120",
    "end": "1615279"
  },
  {
    "text": "creates this broker object and then effectively hands it off to each sandbox process and says here if you need to",
    "start": "1615279",
    "end": "1621679"
  },
  {
    "text": "talk back to me talk via this this com object and you need it's not documented",
    "start": "1621679",
    "end": "1628480"
  },
  {
    "text": "of course because it's all internal to IE but it's fairly easy to reverse engineer it and find out how to do",
    "start": "1628480",
    "end": "1635519"
  },
  {
    "text": "it so that's your object now then the object has potentially multiple",
    "start": "1636600",
    "end": "1642320"
  },
  {
    "text": "interfaces multiple ways of looking at that object and the main one for the broker is this IE user broker and you",
    "start": "1642320",
    "end": "1649279"
  },
  {
    "text": "can actually see most of the functions on there are actually related to that um hooking I was talking about so for",
    "start": "1649279",
    "end": "1655279"
  },
  {
    "text": "example create process when you call create process in a sandbox there's a little shim which redirects you to the",
    "start": "1655279",
    "end": "1662080"
  },
  {
    "text": "broker and the broker then exposes a function which then does all the security checks and all that sort of",
    "start": "1662080",
    "end": "1667279"
  },
  {
    "text": "stuff but how do you actually get that out how do you actually find out what those functions are called well obviously it",
    "start": "1667279",
    "end": "1674559"
  },
  {
    "text": "turns out Microsoft is very generous in this in this regard and gives you everyone public symbols to IE and we can",
    "start": "1674559",
    "end": "1681360"
  },
  {
    "text": "go and pull those out using if you've got a copy of IDA you can pull them out fairly easily using a simple script so",
    "start": "1681360",
    "end": "1686960"
  },
  {
    "text": "I'll hopefully have IE frame",
    "start": "1686960",
    "end": "1692520"
  },
  {
    "text": "so I've loaded IE frame into IDA and pulled in its PDB file so it's public",
    "start": "1692520",
    "end": "1698480"
  },
  {
    "text": "symbol file and we can sort of track",
    "start": "1698480",
    "end": "1704279"
  },
  {
    "text": "down hope if it works okay so we can easily track",
    "start": "1704279",
    "end": "1711159"
  },
  {
    "text": "down the broker functions they're all fairly obviously named C IE user broker",
    "start": "1711159",
    "end": "1719000"
  },
  {
    "text": "object and if we actually go to one of",
    "start": "1719000",
    "end": "1725320"
  },
  {
    "text": "these it'll obviously give you all the usual stuff IDA does we we want to try",
    "start": "1725320",
    "end": "1731279"
  },
  {
    "text": "and get it into a form we can call so you can just take these manually and just type them in manually",
    "start": "1731279",
    "end": "1738039"
  },
  {
    "text": "um as as I go along I'll show you some some interfaces which have slightly more",
    "start": "1738039",
    "end": "1743279"
  },
  {
    "text": "than six functions on so at that point you you'll be there forever if you try and type them all in so we can actually",
    "start": "1743279",
    "end": "1750960"
  },
  {
    "text": "go and see we actually pick one which is",
    "start": "1750960",
    "end": "1756679"
  },
  {
    "text": "exposed um we can go to its reference if we go to it reference we",
    "start": "1756679",
    "end": "1762080"
  },
  {
    "text": "find the vtable of that object so com is all implemented using virtual tables",
    "start": "1762080",
    "end": "1768640"
  },
  {
    "text": "which is sort of uh an idiom from C++ and effectively this is a list of",
    "start": "1768640",
    "end": "1774799"
  },
  {
    "text": "function pointers to all the functions in that interface and I've got some scripts which I should",
    "start": "1774799",
    "end": "1782480"
  },
  {
    "text": "have on the desktop uh where is it obviously I don't have it on the",
    "start": "1782480",
    "end": "1790840"
  },
  {
    "text": "desktop right and I've just got a script which again",
    "start": "1790840",
    "end": "1797279"
  },
  {
    "text": "is available online and it's a simple ID Python script which will go through and",
    "start": "1797279",
    "end": "1803600"
  },
  {
    "text": "for a certain selection try and generate you a simple C++ interface file that you",
    "start": "1803600",
    "end": "1810080"
  },
  {
    "text": "can then recall and actually do direct work with so let's try and run that",
    "start": "1810080",
    "end": "1815880"
  },
  {
    "text": "okay so first I select just out the list of functions I want to expose",
    "start": "1815880",
    "end": "1822720"
  },
  {
    "text": "then run script file and vtable to definition i run that and hopefully if I",
    "start": "1822720",
    "end": "1830960"
  },
  {
    "text": "can get it to expose here so just in my",
    "start": "1830960",
    "end": "1836159"
  },
  {
    "text": "um output window I've now got a C++ structure and usually either the public",
    "start": "1836159",
    "end": "1843200"
  },
  {
    "text": "symbols because most of this is written in C++ there's mangled symbols in the public symbols and usually this allows",
    "start": "1843200",
    "end": "1849440"
  },
  {
    "text": "you to extract a reasonable amount of type information about the function call parameters um if not usually either is",
    "start": "1849440",
    "end": "1856240"
  },
  {
    "text": "clever enough to try and work out some of them already for you so the actual output for the most part will be",
    "start": "1856240",
    "end": "1863919"
  },
  {
    "text": "um reasonably um typed up so you can just plug it straight into your um your",
    "start": "1863919",
    "end": "1869440"
  },
  {
    "text": "code and call functions directly on it now it doesn't tell you what those parameters do and that's of course the",
    "start": "1869440",
    "end": "1875440"
  },
  {
    "text": "challenge of reverse engineering to work out what the hell they actually do but that's just that's for for later okay",
    "start": "1875440",
    "end": "1885880"
  },
  {
    "text": "now when it comes to um com there's two ways of running com you can either run it in process which",
    "start": "1889919",
    "end": "1896880"
  },
  {
    "text": "obviously in this case would just be running it in this sandbox instance so that doesn't actually provide you with",
    "start": "1896880",
    "end": "1903120"
  },
  {
    "text": "much in the way of useful information most of the stuff is running out of",
    "start": "1903120",
    "end": "1908399"
  },
  {
    "text": "process and especially for third party code um for example things like um Flash",
    "start": "1908399",
    "end": "1914880"
  },
  {
    "text": "has a broker to allow you to access certain things in IE um you've got to actually track down in the reverse",
    "start": "1914880",
    "end": "1920960"
  },
  {
    "text": "engineering where that function is this is a particularly important if you have no symbols so Adobe obviously don't",
    "start": "1920960",
    "end": "1927200"
  },
  {
    "text": "provide symbols for the IE flash broker so you've got to kind of use IDA to",
    "start": "1927200",
    "end": "1932960"
  },
  {
    "text": "actually track this down and so the best way to do this is there there is a specific sort of calling",
    "start": "1932960",
    "end": "1939440"
  },
  {
    "text": "convention used in um in registration of process com and it's do using this",
    "start": "1939440",
    "end": "1945760"
  },
  {
    "text": "co-register class object function and through that we can kind of trace through work out where this the actual",
    "start": "1945760",
    "end": "1952399"
  },
  {
    "text": "class is which is implementing these functions and we can then extract and reverse engineer those functions",
    "start": "1952399",
    "end": "1958200"
  },
  {
    "text": "itself now sometimes you get lucky and there's also uh type libraries so COM",
    "start": "1958200",
    "end": "1964559"
  },
  {
    "text": "has the um facility to have a self-describing sort of metadata file associated with it and this gives you",
    "start": "1964559",
    "end": "1971279"
  },
  {
    "text": "pretty much all the sort of function information for the exposed interfaces",
    "start": "1971279",
    "end": "1976960"
  },
  {
    "text": "and if you're lucky and in this case Flash Broker you are very lucky you actually get a full type library which",
    "start": "1976960",
    "end": "1983039"
  },
  {
    "text": "tells you exactly how to call all the functions and usually what even the parameters are doesn't necessarily give",
    "start": "1983039",
    "end": "1989840"
  },
  {
    "text": "you a a full tutorial of what you need to do to get it to run but it's certainly a better than",
    "start": "1989840",
    "end": "1996360"
  },
  {
    "text": "nothing so I'll quickly just go through sort of tracking down Flash Brokers um",
    "start": "1996360",
    "end": "2002399"
  },
  {
    "text": "stuff so this is default install of Windows 8 um because Windows 8 or",
    "start": "2002399",
    "end": "2007840"
  },
  {
    "text": "Windows 8 and Windows 8.1 come with Flash built in um in order to support it in running in in Metro mode um this is",
    "start": "2007840",
    "end": "2015519"
  },
  {
    "text": "actually built in to all versions of Windows 8 and I actually found some sandbox",
    "start": "2015519",
    "end": "2021360"
  },
  {
    "text": "escapes in Flash Broker which um at least try and look at one later on um but yeah we want to actually try",
    "start": "2021360",
    "end": "2029200"
  },
  {
    "text": "and dig through and try and find our functions and obviously I've somewhat annotated already so",
    "start": "2029200",
    "end": "2037559"
  },
  {
    "text": "um so we have our co-register class object which you can obviously browse",
    "start": "2037559",
    "end": "2042880"
  },
  {
    "text": "through to where it gets called and so this is where it's registering what is called the class factory so you",
    "start": "2042880",
    "end": "2050320"
  },
  {
    "text": "don't register the com object directly you register a factory object which when you call it will instantiate a new COM",
    "start": "2050320",
    "end": "2058118"
  },
  {
    "text": "object so we can tell from our function parameters where our class factory",
    "start": "2058119",
    "end": "2063158"
  },
  {
    "text": "is and we can obviously um which is",
    "start": "2063159",
    "end": "2068358"
  },
  {
    "text": "ESI and then we can dig out okay the constructors here because it has to",
    "start": "2068359",
    "end": "2073599"
  },
  {
    "text": "instantiate a copy this class factory we can then go through that one and then we can go through that one and obviously it",
    "start": "2073599",
    "end": "2079760"
  },
  {
    "text": "like a little rabbit warrior you could be there all day but eventually you should find um the actual vable itself",
    "start": "2079760",
    "end": "2087599"
  },
  {
    "text": "and again from there you can do break pointing or you can kind of tie it up to that type library because that type library gives you all that useful",
    "start": "2087599",
    "end": "2094079"
  },
  {
    "text": "information in there to actually um process and and work out what you need",
    "start": "2094079",
    "end": "2100079"
  },
  {
    "text": "to call because obviously you want to reverse engineer the functions because you want to find vulnerabilities in them",
    "start": "2100079",
    "end": "2106400"
  },
  {
    "text": "you could just try and just call the functions but it sometimes is easier sit there with the disassembly maybe and",
    "start": "2106400",
    "end": "2112720"
  },
  {
    "text": "actually work out what those functions are doing",
    "start": "2112720",
    "end": "2118240"
  },
  {
    "text": "okay so that was a bit of a long background of the sort of my reverse bit of my",
    "start": "2119240",
    "end": "2125520"
  },
  {
    "text": "reverse engineering methodology the sort of things you need to kind of know to actually go out and try and find i.e",
    "start": "2125520",
    "end": "2132240"
  },
  {
    "text": "sandbox escapes the sort of com stuff and and how the sandbox works so now",
    "start": "2132240",
    "end": "2137440"
  },
  {
    "text": "actually let's go into trying to find some vulnerabilities and the first um the",
    "start": "2137440",
    "end": "2145119"
  },
  {
    "text": "sort of simplest one to go looking for in my opinion is the access to accessible",
    "start": "2145119",
    "end": "2152200"
  },
  {
    "text": "resources so accessible resources are isolated from the outside so effectively",
    "start": "2152200",
    "end": "2157599"
  },
  {
    "text": "if you know what permissions that sandbox process runs with you can easily offline by just trolling the file system",
    "start": "2157599",
    "end": "2164560"
  },
  {
    "text": "or trolling the registry find resources you can directly access and directly write",
    "start": "2164560",
    "end": "2170200"
  },
  {
    "text": "to and there's various tools to do this i didn't find one which kind of worked",
    "start": "2170200",
    "end": "2175520"
  },
  {
    "text": "in the right way for narrowing down functions so I just wrote some PowerShell scripts and PowerShell is is",
    "start": "2175520",
    "end": "2182800"
  },
  {
    "text": "usually gives you pretty much full access to um like ales and and security",
    "start": "2182800",
    "end": "2189200"
  },
  {
    "text": "aspects so you can just write a real simple and dirty script in this case this is for trolling registry uh",
    "start": "2189200",
    "end": "2196680"
  },
  {
    "text": "information and when we're dealing with the enhanced protection mode sandbox you need to know um either can the IE uh",
    "start": "2196680",
    "end": "2205280"
  },
  {
    "text": "process SID access it or can the group SID access it and so you're basically looking for anything which can write",
    "start": "2205280",
    "end": "2212079"
  },
  {
    "text": "using one of these two sids so again we can just sort of",
    "start": "2212079",
    "end": "2218240"
  },
  {
    "text": "quickly run that if I bring up",
    "start": "2218240",
    "end": "2221760"
  },
  {
    "text": "PowerShell [Music] okay scripts so I got a couple of",
    "start": "2223640",
    "end": "2231680"
  },
  {
    "text": "PowerShell scripts in here um find accessible files and find",
    "start": "2231680",
    "end": "2237200"
  },
  {
    "text": "accessible keys uh so effectively that's just the same",
    "start": "2237200",
    "end": "2242880"
  },
  {
    "text": "as I had before and if I just run that",
    "start": "2242880",
    "end": "2248119"
  },
  {
    "text": "um obviously ignore the various errors because obviously I'm running as a normal user so some things you can't",
    "start": "2249800",
    "end": "2254960"
  },
  {
    "text": "directly access and hopefully if it all goes goes to plan okay so now it starts spitting",
    "start": "2254960",
    "end": "2262000"
  },
  {
    "text": "out all these keys and so these are are registry keys you can directly access in",
    "start": "2262000",
    "end": "2268839"
  },
  {
    "text": "um from the IE sandbox process so if I just run regedit",
    "start": "2268839",
    "end": "2275960"
  },
  {
    "text": "oops we can go and pick one of these so software Microsoft Internet",
    "start": "2275960",
    "end": "2283320"
  },
  {
    "text": "Explorer you there software Microsoft Internet Explorer",
    "start": "2283320",
    "end": "2290920"
  },
  {
    "text": "um low registry so these are all stuff you can access directly and we can see",
    "start": "2290920",
    "end": "2297720"
  },
  {
    "text": "that this is the IE um user the uh 4096 you can always remember",
    "start": "2297720",
    "end": "2305359"
  },
  {
    "text": "that it's quite easy and it has full control so anyone can from a sandbox process can modify write manipulate that",
    "start": "2305359",
    "end": "2312800"
  },
  {
    "text": "that registry",
    "start": "2312800",
    "end": "2315599"
  },
  {
    "text": "key now it's all very well finding these resources but what can you actually do",
    "start": "2320839",
    "end": "2326320"
  },
  {
    "text": "with them once you found them well there's there's usually two ways of exploiting accessible resources either",
    "start": "2326320",
    "end": "2334480"
  },
  {
    "text": "through through stupidity or or whatever um that resource has direct security",
    "start": "2334480",
    "end": "2340200"
  },
  {
    "text": "implications so that resource has some security critical function such",
    "start": "2340200",
    "end": "2346280"
  },
  {
    "text": "as is the sandbox on or off and if that",
    "start": "2346280",
    "end": "2351440"
  },
  {
    "text": "if you find something like that you can potentially just modify the resource to turn off the sandbox",
    "start": "2351440",
    "end": "2358079"
  },
  {
    "text": "the second sort of main way of exploiting accessible resources is trying to exploit the relationship",
    "start": "2358079",
    "end": "2364320"
  },
  {
    "text": "between sort of a higher privilege process and a lower privileged process",
    "start": "2364320",
    "end": "2369960"
  },
  {
    "text": "so as a as a good example if the the the medium level the user level version of",
    "start": "2369960",
    "end": "2377240"
  },
  {
    "text": "IE writes to a file which you can also manipulate at low privilege potentially",
    "start": "2377240",
    "end": "2383760"
  },
  {
    "text": "there's a way of exploiting that to either gain arbitrary um resource modification or accessing other files",
    "start": "2383760",
    "end": "2391760"
  },
  {
    "text": "you shouldn't be allowed to do so in the general case number one is",
    "start": "2391760",
    "end": "2398240"
  },
  {
    "text": "rare fairly rare in terms of of finding those sort of things it does happen but it's it's it's less um less significant",
    "start": "2398240",
    "end": "2406240"
  },
  {
    "text": "but number two is definitely sort of something you can find um as I'll just demonstrate",
    "start": "2406240",
    "end": "2412440"
  },
  {
    "text": "so I usually then try and find out who's calling it because the best way to find",
    "start": "2412440",
    "end": "2417760"
  },
  {
    "text": "a vulnerability in the stuff in my opinion is to find out who is responsible for manipulating that",
    "start": "2417760",
    "end": "2422800"
  },
  {
    "text": "resource and then obviously uh that once you found that particular",
    "start": "2422800",
    "end": "2428000"
  },
  {
    "text": "function you can then dig in straight in and and actually look at it and reverse engineer it and work out what you're",
    "start": "2428000",
    "end": "2433200"
  },
  {
    "text": "doing and I find the best tool for that for resource access is process monitor",
    "start": "2433200",
    "end": "2438400"
  },
  {
    "text": "and hopefully someone in this audience has at least used process monitor once um whether you've used it to like try",
    "start": "2438400",
    "end": "2445200"
  },
  {
    "text": "and dig out uh where a vulnerable piece of code is is sitting I don't know",
    "start": "2445200",
    "end": "2450359"
  },
  {
    "text": "um yeah you can you can set symbols up in process monitor to effectively access",
    "start": "2450359",
    "end": "2456359"
  },
  {
    "text": "um find out in sort of um Microsoft code at least using public symbols exactly",
    "start": "2456359",
    "end": "2463280"
  },
  {
    "text": "where in the code you need to go looking for to work out what who's accessing that resource so I should have just a very",
    "start": "2463280",
    "end": "2471520"
  },
  {
    "text": "quick demo of um sorry about this",
    "start": "2471520",
    "end": "2478839"
  },
  {
    "text": "uhhuh um restore",
    "start": "2478839",
    "end": "2485440"
  },
  {
    "text": "that so yeah it's usually this is my always my go-to if I need to see if",
    "start": "2488200",
    "end": "2494480"
  },
  {
    "text": "something's accessing that resource who's doing it straight to process monitor if you can't see in process",
    "start": "2494480",
    "end": "2500359"
  },
  {
    "text": "monitor then life gets considerably more difficult but it's hopefully not too bad",
    "start": "2500359",
    "end": "2506880"
  },
  {
    "text": "so if we run a new copy of IE up we can see obviously accessing an awful lot of of",
    "start": "2506880",
    "end": "2512520"
  },
  {
    "text": "crap uh load registry so this is what we were looking at",
    "start": "2512520",
    "end": "2518040"
  },
  {
    "text": "before um oops and so we can",
    "start": "2518040",
    "end": "2523560"
  },
  {
    "text": "see say low registry him let's just zoom back out otherwise",
    "start": "2523560",
    "end": "2529040"
  },
  {
    "text": "we'll not see anything and then you can just look at the stack frame and we can see that there's like a a set protecting",
    "start": "2529040",
    "end": "2535599"
  },
  {
    "text": "my regge key only function and maybe that has a vulnerability who",
    "start": "2535599",
    "end": "2540880"
  },
  {
    "text": "knows so I obviously went a bit into detail on that and uh",
    "start": "2541960",
    "end": "2549599"
  },
  {
    "text": "did some reverse engineering and it turned out that this function was just this relatively simple",
    "start": "2549599",
    "end": "2555800"
  },
  {
    "text": "um flow so it it tries to create this registry key which we've identified if",
    "start": "2555800",
    "end": "2562480"
  },
  {
    "text": "that key doesn't exist it'll create it and this is running at the medium level process this is not running in the sandbox",
    "start": "2562480",
    "end": "2568599"
  },
  {
    "text": "process if it doesn't exist um it'll create it it then tries to check whether",
    "start": "2568599",
    "end": "2574079"
  },
  {
    "text": "a low privilege process can access that registry key can it read and write to that key if not it will actually modify",
    "start": "2574079",
    "end": "2580720"
  },
  {
    "text": "it so that the access control list says yes you can access that registry key and that to me just looked like a",
    "start": "2580720",
    "end": "2587680"
  },
  {
    "text": "potentially dangerous function because we can in theory induce",
    "start": "2587680",
    "end": "2594480"
  },
  {
    "text": "uh this the user level version of IE to create this registry key but we can",
    "start": "2594480",
    "end": "2599839"
  },
  {
    "text": "modify it from the sandbox process so can we exploit that well clearly we can otherwise I wouldn't talk about",
    "start": "2599839",
    "end": "2606520"
  },
  {
    "text": "it and this comes down to one of the techniques of attacking registry access",
    "start": "2606520",
    "end": "2612640"
  },
  {
    "text": "in the low privilege process there's something called registry symbolic links and I don't know whether",
    "start": "2612640",
    "end": "2618400"
  },
  {
    "text": "I'm sure anyone who's used a single Unix system will know what a symbolic link is but probably not many people realize",
    "start": "2618400",
    "end": "2624000"
  },
  {
    "text": "that the Windows registry has symbolic link functionality in it that's because Microsoft are somewhat loathed to",
    "start": "2624000",
    "end": "2630640"
  },
  {
    "text": "document this uh if you go to MSDN there's this um there's generally oblique references to this functionality",
    "start": "2630640",
    "end": "2638720"
  },
  {
    "text": "so key crate link reserved for system use okay cool thanks um fortunately",
    "start": "2638720",
    "end": "2645599"
  },
  {
    "text": "other people have done the digging and worked out how to use this but what symbolic link gives you is it allows you",
    "start": "2645599",
    "end": "2651359"
  },
  {
    "text": "to write something into the registry which points to a completely different part of the registry and hopefully that should be",
    "start": "2651359",
    "end": "2658000"
  },
  {
    "text": "relatively obvious how you would exploit this because you can you can modify the registry so that you've got a symbolic",
    "start": "2658000",
    "end": "2664560"
  },
  {
    "text": "link and when the medium level process goes to write it it will actually write somewhere completely different and now",
    "start": "2664560",
    "end": "2670480"
  },
  {
    "text": "you can write into some sort of security critical area of the registry and I chose actually for my exploit purposes I",
    "start": "2670480",
    "end": "2676960"
  },
  {
    "text": "chose the elevation policy and it turns out the elevation policy has both a system level and a user level component",
    "start": "2676960",
    "end": "2683599"
  },
  {
    "text": "and we can write to the user level one quite easily and from that we can add our own processes to the elevation",
    "start": "2683599",
    "end": "2690000"
  },
  {
    "text": "policy and jump like pop cow quite easily out of sandbox so it's fairly it's fairly",
    "start": "2690000",
    "end": "2698160"
  },
  {
    "text": "simple attack once you actually get down to it you you can create a symbolic link as I say you can find on code for it",
    "start": "2698160",
    "end": "2704560"
  },
  {
    "text": "online uh the example code I provide on my GitHub page also has example code for",
    "start": "2704560",
    "end": "2710520"
  },
  {
    "text": "it and use that i I I chose a particular registry key and spun up a copy of IE",
    "start": "2710520",
    "end": "2717280"
  },
  {
    "text": "and once IE runs the registry key gets created but it doesn't create the right",
    "start": "2717280",
    "end": "2722400"
  },
  {
    "text": "registry key it creates the registry key I pointed it at and crucially it also",
    "start": "2722400",
    "end": "2727920"
  },
  {
    "text": "sets the security of that registry key to allow me access from the sandbox process",
    "start": "2727920",
    "end": "2734000"
  },
  {
    "text": "so at the very least this is an arbitrary registry key creation which may or may not be that useful but",
    "start": "2734000",
    "end": "2740000"
  },
  {
    "text": "because it sets the security I can now modify that will I can fill in my registry elevation policy",
    "start": "2740000",
    "end": "2747440"
  },
  {
    "text": "um do a bit of refreshing and obviously you can get kio to pop up quite easily",
    "start": "2747440",
    "end": "2753280"
  },
  {
    "text": "so that bypasses any permissions registry",
    "start": "2753280",
    "end": "2759359"
  },
  {
    "text": "yes so yeah the",
    "start": "2759359",
    "end": "2764720"
  },
  {
    "text": "um trying to think of the best way but yeah the the uh the question was uh can",
    "start": "2766839",
    "end": "2772319"
  },
  {
    "text": "you um does this bypass the protect protection on the registry area and yes it basically circumvents the it allows",
    "start": "2772319",
    "end": "2779680"
  },
  {
    "text": "me to create a accessible part of the registry in my on my own control in some other part of the protected registry and",
    "start": "2779680",
    "end": "2785839"
  },
  {
    "text": "so bypass the security restrictions on the registry",
    "start": "2785839",
    "end": "2789920"
  },
  {
    "text": "so obviously I can I can quickly uh demo that unfortunately I've kind of got to a",
    "start": "2790960",
    "end": "2797838"
  },
  {
    "text": "um stop that yeah fair",
    "start": "2798119",
    "end": "2806160"
  },
  {
    "text": "enough the wonderful world of uh snapshots in VMs it's How do you do",
    "start": "2806920",
    "end": "2814000"
  },
  {
    "text": "vulnerability research before before VMs and snapshots i don't",
    "start": "2814000",
    "end": "2819760"
  },
  {
    "text": "know okay so it turns out that",
    "start": "2822440",
    "end": "2829480"
  },
  {
    "text": "um Microsoft fixed this bug twice they",
    "start": "2829480",
    "end": "2834560"
  },
  {
    "text": "actually half fixed it first um and so they fixed the part where it was",
    "start": "2834560",
    "end": "2839920"
  },
  {
    "text": "checking for the registry key to see where it existed and it it they modified",
    "start": "2839920",
    "end": "2844960"
  },
  {
    "text": "it so instead of uh creating the register key directly it would it would open the symbolic link so if it opened",
    "start": "2844960",
    "end": "2850640"
  },
  {
    "text": "the symbolic link it would realize that oh there's already something sitting here like waiting to do me over so I'm",
    "start": "2850640",
    "end": "2858880"
  },
  {
    "text": "I'm not going to continue but it turns out if you could bypass that open check the create check didn't check for the",
    "start": "2858880",
    "end": "2865520"
  },
  {
    "text": "symbolic link and so you could still exploit it through various different means so uh they actually had to fix it",
    "start": "2865520",
    "end": "2871440"
  },
  {
    "text": "again in a later later uh um security fix which is always amusing um so let's",
    "start": "2871440",
    "end": "2878880"
  },
  {
    "text": "see if I can remember which one this is um not that",
    "start": "2878880",
    "end": "2885480"
  },
  {
    "text": "one i'm sure actually I wrote it down on the slides didn't I yeah sorry i'm obviously",
    "start": "2885480",
    "end": "2892920"
  },
  {
    "text": "Yeah okay [Music] so all my all my escapes have got like",
    "start": "2892920",
    "end": "2900319"
  },
  {
    "text": "debugging information and kind of gives you a rough idea of where it's currently sitting um and we've got a copy of IE",
    "start": "2900319",
    "end": "2906880"
  },
  {
    "text": "running so we can obviously do inject DL list uh 2058 okay so 2580 CVE and this",
    "start": "2906880",
    "end": "2917480"
  },
  {
    "text": "one and um if I just break point on this the CBE",
    "start": "2917480",
    "end": "2928720"
  },
  {
    "text": "2013 50",
    "start": "2929559",
    "end": "2933680"
  },
  {
    "text": "45 okay so hopefully yeah so obviously you can now",
    "start": "2936839",
    "end": "2943680"
  },
  {
    "text": "obviously step through everything and so this function was creating the our",
    "start": "2943680",
    "end": "2949520"
  },
  {
    "text": "arbitrary registry keys and we can actually see um you could run up process monitor for",
    "start": "2949520",
    "end": "2955680"
  },
  {
    "text": "example and actually see which piece of code is doing this each time and eventually we we get through to",
    "start": "2955680",
    "end": "2962000"
  },
  {
    "text": "the end and obviously count pops up and this is obviously now running as as the medium integrity and has bypassed the",
    "start": "2962000",
    "end": "2967760"
  },
  {
    "text": "sandbox and this was from EPM originally into",
    "start": "2967760",
    "end": "2972800"
  },
  {
    "text": "Okay so it's not just files which we're which we're dealing with uh not just registry keys we're dealing with",
    "start": "2977319",
    "end": "2983359"
  },
  {
    "text": "obviously files as well are also potentially of interest and I suppose the thing here is",
    "start": "2983359",
    "end": "2989359"
  },
  {
    "text": "can we do something similar um with files as we can with registry",
    "start": "2989359",
    "end": "2996040"
  },
  {
    "text": "keys well it turns out sort of now Vista",
    "start": "2996040",
    "end": "3001200"
  },
  {
    "text": "introduced the concept of a file symbolic link to Windows pri prior to that it had no uh ability to do file",
    "start": "3001200",
    "end": "3008640"
  },
  {
    "text": "level symbolic links but unfortunately either for security",
    "start": "3008640",
    "end": "3014160"
  },
  {
    "text": "reasons or just for reliability reasons Microsoft uh made it so that you required a specific permission to create",
    "start": "3014160",
    "end": "3020880"
  },
  {
    "text": "these symbolic symbolic links and the only people by default who have this permission are administrators and if",
    "start": "3020880",
    "end": "3027680"
  },
  {
    "text": "you're an administrator well I don't think it matters anymore so there's",
    "start": "3027680",
    "end": "3033119"
  },
  {
    "text": "there's obviously a problem there but it turns out that if you're only worrying about",
    "start": "3033119",
    "end": "3039920"
  },
  {
    "text": "directories uh NTS had symbolic links for quite a long time since at least Windows 2000",
    "start": "3039920",
    "end": "3046079"
  },
  {
    "text": "and these are actually usually called junctions and they they're used at a directory level you can't redirect a",
    "start": "3046079",
    "end": "3051359"
  },
  {
    "text": "single file access but potentially if you can create a um directory you can",
    "start": "3051359",
    "end": "3057920"
  },
  {
    "text": "repurpose it and use that as a symbolic link into somewhere else so if you can access a resource a file resource and",
    "start": "3057920",
    "end": "3063920"
  },
  {
    "text": "then get a higher privilege process to write to that resource you potentially can get an a right to an arbitrary",
    "start": "3063920",
    "end": "3070440"
  },
  {
    "text": "location and this actually requires fortunately no privileges above and",
    "start": "3070440",
    "end": "3076160"
  },
  {
    "text": "beyond the ability to create an arbitrary directory so as long as you can get right access to any directory on",
    "start": "3076160",
    "end": "3082000"
  },
  {
    "text": "the file system you can modify it in theory to be a",
    "start": "3082000",
    "end": "3087838"
  },
  {
    "text": "junction so this is where one of my Flash Broker bugs came in flash Broker actually implements a",
    "start": "3088440",
    "end": "3096160"
  },
  {
    "text": "file API because it wants to write things like your shared objects files into the protected parts of the file",
    "start": "3096160",
    "end": "3104160"
  },
  {
    "text": "system so it create it has functions like broker create file and broker create",
    "start": "3104160",
    "end": "3109520"
  },
  {
    "text": "directory but obviously if it just wrote to anywhere there's a clear security issue there so it has to do something",
    "start": "3109520",
    "end": "3117680"
  },
  {
    "text": "different and what it does is it limits the locations you can write to to",
    "start": "3117680",
    "end": "3123119"
  },
  {
    "text": "specific areas of the file system so I've shown them in the little table below you've got things like um the",
    "start": "3123119",
    "end": "3130160"
  },
  {
    "text": "roaming Adobe Flash player this is where the sort of shared objects live there's also a Macromedia one because obviously",
    "start": "3130160",
    "end": "3135680"
  },
  {
    "text": "Flash was written originally by Macromedia who were bought out by Adobe um so that name sort of sits there for",
    "start": "3135680",
    "end": "3142079"
  },
  {
    "text": "legacy reasons but one interesting place they do allow you to write to is the temp",
    "start": "3142079",
    "end": "3148160"
  },
  {
    "text": "directory um and the temp directory theoretically is under control of the",
    "start": "3148160",
    "end": "3154960"
  },
  {
    "text": "low privileged process because the low privilege process still needs to write temporary files somewhere",
    "start": "3154960",
    "end": "3160440"
  },
  {
    "text": "um and in this case potentially if you can write to that you can create a junction and then write your arbit file",
    "start": "3160440",
    "end": "3167680"
  },
  {
    "text": "through the flashbroker API so yeah unfortunately this only",
    "start": "3167680",
    "end": "3173440"
  },
  {
    "text": "works in protected mode um but Adobe still fixed it because they weren't Microsoft um but this is because in in a",
    "start": "3173440",
    "end": "3183200"
  },
  {
    "text": "in enhanced protected mode it redirects the temp directory so it redirects it to a completely different location to your",
    "start": "3183200",
    "end": "3189520"
  },
  {
    "text": "normal users directory but if we at least assume that we can use protected mode well it's",
    "start": "3189520",
    "end": "3196400"
  },
  {
    "text": "actually fairly simple to to exploit so you create a directory under the temp",
    "start": "3196400",
    "end": "3201480"
  },
  {
    "text": "folder call it whatever you want and then use the",
    "start": "3201480",
    "end": "3206520"
  },
  {
    "text": "APIs write that directory uh write that file and you can write it to anywhere you like so I think this will probably",
    "start": "3206520",
    "end": "3213760"
  },
  {
    "text": "be uh the last demo of this session because we got five minutes left so I think it kind of works out quite well",
    "start": "3213760",
    "end": "3220240"
  },
  {
    "text": "okay uh and back to uh pissing around with",
    "start": "3220240",
    "end": "3225839"
  },
  {
    "text": "this so power off so I've got",
    "start": "3225839",
    "end": "3232480"
  },
  {
    "text": "a I've got a VM which has EPM turned off um so this is just running",
    "start": "3233079",
    "end": "3239760"
  },
  {
    "text": "traditional protected mode so all it does is it restricts you to areas of the",
    "start": "3239760",
    "end": "3244960"
  },
  {
    "text": "file system which have a low integrity label set and so we can open temp and see the",
    "start": "3244960",
    "end": "3256640"
  },
  {
    "text": "bug effectively comes about because you cannot write to temp directly so temp itself is you need to be a high",
    "start": "3256640",
    "end": "3264000"
  },
  {
    "text": "privilege process to write to it but IE creates a low directory for you and the",
    "start": "3264000",
    "end": "3270400"
  },
  {
    "text": "load directory just so happens to be accessible by low integrity probably",
    "start": "3270400",
    "end": "3276880"
  },
  {
    "text": "unsurprisingly given its name so while we can't write to temp we can write to low temp low and we can then create our",
    "start": "3276880",
    "end": "3284240"
  },
  {
    "text": "junction there and we can do the exploit so",
    "start": "3284240",
    "end": "3290760"
  },
  {
    "text": "uh okay so this",
    "start": "3292920",
    "end": "3298318"
  },
  {
    "text": "is if I remember what it's called inject DL 10",
    "start": "3298359",
    "end": "3306599"
  },
  {
    "text": "58 and",
    "start": "3306599",
    "end": "3310000"
  },
  {
    "text": "CV and so this this is just a simple there's various different ways you can exploit this but in In this case all I'm",
    "start": "3311720",
    "end": "3318480"
  },
  {
    "text": "doing is I'll write a batch file to the startup folder your user startup folder",
    "start": "3318480",
    "end": "3324400"
  },
  {
    "text": "so when Explorer starts when they log back in it'll potentially pop",
    "start": "3324400",
    "end": "3329480"
  },
  {
    "text": "calc so I run that oops what's it called i'll obviously call it something",
    "start": "3329480",
    "end": "3336680"
  },
  {
    "text": "different sorry about this so",
    "start": "3336680",
    "end": "3342119"
  },
  {
    "text": "3604 okay shall start up",
    "start": "3342119",
    "end": "3347440"
  },
  {
    "text": "so we got we've now ended up with a batch file in there and I'm sure if I",
    "start": "3347440",
    "end": "3353040"
  },
  {
    "text": "actually logged off and logged back in this will probably not work now it's",
    "start": "3353040",
    "end": "3358920"
  },
  {
    "text": "uh I'm getting a bit It's a bit",
    "start": "3358920",
    "end": "3364880"
  },
  {
    "text": "risky and hey it didn't work yeah Windows 8 is a bit weird when it comes",
    "start": "3366920",
    "end": "3372640"
  },
  {
    "text": "to startup folders it's uh doesn't always I've obviously done something horribly wrong oh no there we go it's just taking",
    "start": "3372640",
    "end": "3380160"
  },
  {
    "text": "its time",
    "start": "3380160",
    "end": "3383480"
  },
  {
    "text": "okay",
    "start": "3385760",
    "end": "3388319"
  }
]