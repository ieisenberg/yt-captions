[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "we are going to present something different today so hopefully you guys will forgive us uh welcome to SSL gun in",
    "start": "80",
    "end": "5720"
  },
  {
    "text": "60 seconds the network is is not that fast",
    "start": "5720",
    "end": "10840"
  },
  {
    "text": "yeah so hi everyone um I'm Neil I'm a security engineer at",
    "start": "10840",
    "end": "16039"
  },
  {
    "text": "Square hi I'm y I'm a security researcher at Salesforce hi everyone I'm",
    "start": "16039",
    "end": "21400"
  },
  {
    "text": "Angelo I love sangria Mano cheese oh yeah and I'm security engineer as well",
    "start": "21400",
    "end": "26560"
  },
  {
    "text": "at so uh let's go ahead and get started so um you know the title of our talk",
    "start": "26560",
    "end": "32040"
  },
  {
    "text": "um what are we doing today so um the agenda for today's talk is uh we are",
    "start": "32040",
    "end": "37320"
  },
  {
    "start": "33000",
    "end": "33000"
  },
  {
    "text": "first if you haven't figured out from the title of the talk we're going to tell you a little bit about crime it's an awesome attack announced last",
    "start": "37320",
    "end": "43760"
  },
  {
    "text": "September at uh at Echo party so we have to get some context there before we can understand our work after talking about",
    "start": "43760",
    "end": "50840"
  },
  {
    "text": "crime we're going to go ahead and uh talk about our work which we're calling",
    "start": "50840",
    "end": "56320"
  },
  {
    "text": "breach so then we're going to force you all to suffer through the technical details of uh of our work and uh that's",
    "start": "56800",
    "end": "63440"
  },
  {
    "text": "going to take a while but the good news is after that we're going to show you guys a demo of the attack and finally we",
    "start": "63440",
    "end": "69759"
  },
  {
    "text": "will uh we'll finish up with some potential mitigations for breach so that's where we're going let's",
    "start": "69759",
    "end": "76040"
  },
  {
    "text": "go ahead and get started so what happened with crime um",
    "start": "76040",
    "end": "82079"
  },
  {
    "text": "for those of you that don't remember back in September Juliana Rizzo and Tai dang announced a a really cool attack",
    "start": "82079",
    "end": "88799"
  },
  {
    "text": "which they called crime um and the idea was they were going to Target Secrets which were in HTTP request headers okay",
    "start": "88799",
    "end": "97360"
  },
  {
    "text": "um using a compression side Channel um the requirements for their attack were they needed TLS level compression want",
    "start": "97360",
    "end": "103200"
  },
  {
    "text": "to emphasize that man in the middle someone needed to measure the traffic the size of the traffic and of course",
    "start": "103200",
    "end": "108799"
  },
  {
    "text": "someone had to be using a browser at some point to make this work so again secrets and HTTP request",
    "start": "108799",
    "end": "116000"
  },
  {
    "text": "headers okay so what was the Oracle what what were the details of the attack how did it actually",
    "start": "116000",
    "end": "122159"
  },
  {
    "text": "work so the thing about SSL is it doesn't actually hide the length of the underlying plane text that's one",
    "start": "122159",
    "end": "128879"
  },
  {
    "text": "important thing for all of us to recognize SSL and Speedy actually have",
    "start": "128879",
    "end": "134280"
  },
  {
    "text": "an option to compress headers you can use a compression setting in TLS that will actually compress",
    "start": "134280",
    "end": "141560"
  },
  {
    "text": "headers so what crime does is it issues requests with every possible character",
    "start": "141720",
    "end": "146760"
  },
  {
    "text": "for the Target secret and measures the resulting Cipher text",
    "start": "146760",
    "end": "153040"
  },
  {
    "text": "length and then what you're looking for is you're looking for the plain text which compresses the most and whichever",
    "start": "154000",
    "end": "159720"
  },
  {
    "text": "one that is that corresponds to the guess with the correct sorry the request with the correct guess okay and that",
    "start": "159720",
    "end": "166120"
  },
  {
    "text": "allows you to guess the secret bite by bite so everyone always makes fun of Hollywood for uh you know having those",
    "start": "166120",
    "end": "171200"
  },
  {
    "text": "movies where you're guessing the pin or whatever one bite at a time well they kind of got part of it right",
    "start": "171200",
    "end": "177400"
  },
  {
    "text": "so and uh what one important thing also this does require a small bootstrapping sequence so you have to have a known",
    "start": "177400",
    "end": "183799"
  },
  {
    "text": "prefix in order to get the compression to to start matching up the attackers guess with the target",
    "start": "183799",
    "end": "189640"
  },
  {
    "text": "secret okay so how does compression actually",
    "start": "189640",
    "end": "195959"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "work so just one quick one slide overview of a reminder so we can have that all in our heads as we go",
    "start": "195959",
    "end": "202799"
  },
  {
    "text": "forward so deflate and all of its friends jeub ZB Etc um has two parts to",
    "start": "202799",
    "end": "208280"
  },
  {
    "text": "it the first is z77 and that's the part that that we like that makes the attack actually work and it reduces redundancy",
    "start": "208280",
    "end": "215280"
  },
  {
    "text": "in strings so for example if you have a string like Googling the Googles you have the string o twice in there so",
    "start": "215280",
    "end": "222400"
  },
  {
    "text": "instead of writing down o twice why not just take the second instance and use a pointer that refers back to the earlier",
    "start": "222400",
    "end": "228760"
  },
  {
    "text": "one so in this case in the resulting compressed text you would have a a",
    "start": "228760",
    "end": "233799"
  },
  {
    "text": "pointer which is a distance and length pair so the minus 13 says go back 13 characters and the four says repeat for",
    "start": "233799",
    "end": "240920"
  },
  {
    "text": "from there okay so that's the part that we're actually taking advantage of that crime takes advantage of to guess a",
    "start": "240920",
    "end": "247760"
  },
  {
    "text": "Target secret there's one more part unfortunately which actually uh is pretty annoying for the attack and",
    "start": "247760",
    "end": "253599"
  },
  {
    "text": "that's something called Huffman coding and Huffman coding works slightly differently it's going to take common bytes so it's just a single bite it's in",
    "start": "253599",
    "end": "260840"
  },
  {
    "text": "the entire document and it's going to take the most common bytes and replace them with shorter codes so for example",
    "start": "260840",
    "end": "266520"
  },
  {
    "text": "you can see in the little table here if the character space or a if those are two of the most common characters in",
    "start": "266520",
    "end": "272000"
  },
  {
    "text": "your document then you might replace those with just a three- bit sequence and maybe less common characters like uh",
    "start": "272000",
    "end": "278360"
  },
  {
    "text": "I don't know Z or or whatever you'd be willing to use uh say four bits or more to",
    "start": "278360",
    "end": "284320"
  },
  {
    "text": "encode so um without telling you exactly why that causes US problems just keep it in your heads for now it causes us a lot",
    "start": "284320",
    "end": "291039"
  },
  {
    "text": "of pain we'll tell you why later so what happened in September so",
    "start": "291039",
    "end": "299160"
  },
  {
    "text": "after the authors of crime showed their demo everyone sort of said well okay",
    "start": "299160",
    "end": "304360"
  },
  {
    "text": "that's cool but all you have to do to disable TLS level compression and everything is fine so all of the major",
    "start": "304360",
    "end": "311039"
  },
  {
    "text": "writeups from all the security consultancies said turn off TLS compression browsers don't most browsers don't even use it anyway who cares let's",
    "start": "311039",
    "end": "317600"
  },
  {
    "text": "move on um we actually when we initially contacted C with our work that was their first response also um so all the",
    "start": "317600",
    "end": "325639"
  },
  {
    "text": "experts are telling us that it's fixed right so we should just all go home everything's fine we have some locks and",
    "start": "325639",
    "end": "331840"
  },
  {
    "text": "everything guarantees tubes are secure right so we're here to question that and",
    "start": "331840",
    "end": "339520"
  },
  {
    "text": "uh we don't agree so um the point of our talk today is to remind people first of",
    "start": "339520",
    "end": "346160"
  },
  {
    "text": "all the original crime authors if you look at their talk take a look at slides 38 through 40 they actually warned us of",
    "start": "346160",
    "end": "351560"
  },
  {
    "text": "this no one seemed to listen we listened um so we're bringing the attack back to life we're showing you that it's a real",
    "start": "351560",
    "end": "357199"
  },
  {
    "text": "thing it can still be exploited today right now",
    "start": "357199",
    "end": "361638"
  },
  {
    "text": "okay but before we actually move forward we want to go ahead and correct the record let's go ahead and uh change the",
    "start": "362520",
    "end": "367880"
  },
  {
    "text": "Wikipedia page to make sure that uh everything's accurate Angelo",
    "start": "367880",
    "end": "374120"
  },
  {
    "text": "article yeah so maybe someone can add a citation during the talk that'd be nice okay",
    "start": "398400",
    "end": "404720"
  },
  {
    "text": "thanks yeah all right cool there all right all right we can go",
    "start": "404840",
    "end": "411199"
  },
  {
    "text": "home Neil okay thanks all right so um there we go",
    "start": "411199",
    "end": "416440"
  },
  {
    "text": "so today we're here to tell you about our work we've been we've been uh working on something for the last few months we're calling it breach um so one",
    "start": "416440",
    "end": "424240"
  },
  {
    "text": "of the hardest things about our work was figuring out an acronym which was cool like crime which actually made sense and",
    "start": "424240",
    "end": "429319"
  },
  {
    "text": "so we landed on breach and breach stands for so how long how long did that process take that was most of our work",
    "start": "429319",
    "end": "435120"
  },
  {
    "text": "it was it was long night you with lots of um you know bka and yeah it was a lot",
    "start": "435120",
    "end": "440560"
  },
  {
    "text": "of work it stands for browser reconnaissance and exfiltration Via adaptive compression of hypertexts pretty cool huh yeah okay so what is",
    "start": "440560",
    "end": "448599"
  },
  {
    "text": "breach though why does it still work and in a nutshell what breach is is the",
    "start": "448599",
    "end": "454840"
  },
  {
    "start": "451000",
    "end": "451000"
  },
  {
    "text": "crime attack against the response body so remember crime the initial demo was against request headers okay what breach",
    "start": "454840",
    "end": "463639"
  },
  {
    "text": "is is the same idea but against secrets that are actually in the response body",
    "start": "463639",
    "end": "468720"
  },
  {
    "text": "so if you guys go anyone use the internet here if you guys go and use the internet okay and you use a web application you'll find that it's very",
    "start": "468720",
    "end": "476400"
  },
  {
    "text": "common to compress all sorts of stuff in response okay if you don't you're going to be",
    "start": "476400",
    "end": "481840"
  },
  {
    "text": "paying probably a bigger Bill okay it's a it's a big difference in performance um but we think that that's not always",
    "start": "481840",
    "end": "488919"
  },
  {
    "text": "such a good idea and hopefully by the end of the talk we'll convince you that wanting compression of HTV responses is",
    "start": "488919",
    "end": "495800"
  },
  {
    "text": "uh is dangerous so just to give a quick example of how this is going to happen",
    "start": "495800",
    "end": "501360"
  },
  {
    "text": "so the top is an HP request where the client is telling it the server that it accepts gzip and deflate encodings and",
    "start": "501360",
    "end": "507800"
  },
  {
    "text": "the bottom shows uh a respon where the the body is actually compressed using gzip okay so that's",
    "start": "507800",
    "end": "514120"
  },
  {
    "text": "it's pretty common you're going to see it all over the place um now what are the ingredients for the attack what do",
    "start": "514120",
    "end": "519959"
  },
  {
    "text": "we need for breach to actually work well first of all we need compression okay",
    "start": "519959",
    "end": "525160"
  },
  {
    "start": "520000",
    "end": "520000"
  },
  {
    "text": "that's kind of key here um but like I said before it's very prevalent lots of web applications use it and this will",
    "start": "525160",
    "end": "531040"
  },
  {
    "text": "work against any browser uh the second bullet this is not strictly a requirement but does make the",
    "start": "531040",
    "end": "537760"
  },
  {
    "text": "attack faster and easier for us we need the pages to be somewhat stable okay and what I mean by stable is that the",
    "start": "537760",
    "end": "544399"
  },
  {
    "text": "responses don't change too much from request to request okay and with a stable uh with a",
    "start": "544399",
    "end": "551320"
  },
  {
    "text": "stable page with the target secret that we're after we can actually execute the attack and under 30 seconds sometimes",
    "start": "551320",
    "end": "557600"
  },
  {
    "text": "we'll see if we can do that today might be 60 next we still need uh to be able to",
    "start": "557600",
    "end": "562920"
  },
  {
    "text": "measure the victim's traffic so we're going to have to man in the middle of them and have some traffic flowing through us but we're not tampering with",
    "start": "562920",
    "end": "569440"
  },
  {
    "text": "the actual SSL connection we're not going to downgrade you to you know a lower Cipher Suite or anything like",
    "start": "569440",
    "end": "575839"
  },
  {
    "text": "that we need a secret in the response body um so the first one that comes to mind for most of you is probably a seaf",
    "start": "575839",
    "end": "581720"
  },
  {
    "text": "token uh it could be view state it could be you know something else really anything in the response body that an",
    "start": "581720",
    "end": "586760"
  },
  {
    "text": "attacker would want to get we need an attacker supplied guess",
    "start": "586760",
    "end": "593560"
  },
  {
    "text": "so some user input to be reflected in the response body",
    "start": "593560",
    "end": "599519"
  },
  {
    "text": "we still need that bootstrapping sequence like that we mentioned before with crime three characters is what you",
    "start": "599760",
    "end": "605160"
  },
  {
    "text": "need and finally this isn't exactly a requirement we want to emphasize this works for any version of TLS and or SSL",
    "start": "605160",
    "end": "612079"
  },
  {
    "text": "with whatever options you like so uh this point I'll go ahead and hand it over to",
    "start": "612079",
    "end": "618920"
  },
  {
    "text": "Angelo he's going to talk about some of the uh details of the attack",
    "start": "619120",
    "end": "625319"
  },
  {
    "text": "right excellent so here we have an example for a uh Target application and",
    "start": "626320",
    "end": "632959"
  },
  {
    "text": "you can see that there's a let me see if I can do this excellent so there's a secret and",
    "start": "632959",
    "end": "639120"
  },
  {
    "text": "response body uh we call it can in this case called Canary and it's a hex secret 32 characters length and here's a gas",
    "start": "639120",
    "end": "647200"
  },
  {
    "text": "now the guas comes from the URL it's just a parameter that gets reflected in the page uh so we going to go after that",
    "start": "647200",
    "end": "654600"
  },
  {
    "text": "particular guess now Bridge what is the archit for",
    "start": "654600",
    "end": "659639"
  },
  {
    "start": "659000",
    "end": "659000"
  },
  {
    "text": "breach so there's four components there's four critical pieces in breach we have a we need to have a victim we",
    "start": "659639",
    "end": "667000"
  },
  {
    "text": "need to have an attacker uh the attacker and the victim happen to be in the same network uh there's a common and control",
    "start": "667000",
    "end": "672120"
  },
  {
    "text": "center which typically is operated by the attacker doing all the math and all the algorithms but that that common",
    "start": "672120",
    "end": "678040"
  },
  {
    "text": "control center could be on the internet as well but uh we need to see the traffic on the network uh and then",
    "start": "678040",
    "end": "684279"
  },
  {
    "text": "there's end to end SSL connection through the tubes all the way to the",
    "start": "684279",
    "end": "689639"
  },
  {
    "text": "target server so from a high level standpoint the common and control center this is",
    "start": "689639",
    "end": "695160"
  },
  {
    "start": "693000",
    "end": "693000"
  },
  {
    "text": "what we have we have a web server driver p81 which is an iframe streamer which is",
    "start": "695160",
    "end": "701279"
  },
  {
    "text": "going to inject payloads that are going to trigger HTTP request in the victim we'll get there in a second uh we have",
    "start": "701279",
    "end": "707800"
  },
  {
    "text": "another server Port 82 which is a call back which uh will be called back when",
    "start": "707800",
    "end": "714760"
  },
  {
    "text": "the responses come back to the victim uh and then there's a men in Middle component we have some Oracle logic that",
    "start": "714760",
    "end": "721800"
  },
  {
    "text": "will uh do all the different algorithms that we will see in a few seconds uh and",
    "start": "721800",
    "end": "726880"
  },
  {
    "text": "then there's traffic monitor we simply observe the length of the cipher Tex coming back uh and then there's more",
    "start": "726880",
    "end": "733040"
  },
  {
    "text": "Advan common in control um logic which uh it'sit in the engine and of course",
    "start": "733040",
    "end": "738320"
  },
  {
    "text": "it's 100% secure because we built it so all right so CNC logic we have men",
    "start": "738320",
    "end": "745639"
  },
  {
    "start": "741000",
    "end": "741000"
  },
  {
    "text": "the middle first of all uh we monitor traffic it's basically just a transparent SSL",
    "start": "745639",
    "end": "752360"
  },
  {
    "text": "relay it's not even a SSL proxy we just basically pass traffic from one socket to the next next one from one pipe to",
    "start": "752360",
    "end": "758839"
  },
  {
    "text": "the next one and then we have an HTML and JavaScript controller what the HTML and JavaScript controller will do is it",
    "start": "758839",
    "end": "764680"
  },
  {
    "text": "will generate requests that are dynamically targeted to the independent victims uh because no two victims are",
    "start": "764680",
    "end": "771560"
  },
  {
    "text": "created equal that's the Bea about this attack um it injects image requests onto",
    "start": "771560",
    "end": "777279"
  },
  {
    "text": "KN frame which force the browser to perform HTTP requests now those HTTP",
    "start": "777279",
    "end": "783320"
  },
  {
    "text": "requests they will fail eventually because they're not actual images but when they fail is because they completed so the actual request and response went",
    "start": "783320",
    "end": "790000"
  },
  {
    "text": "through uh and logically you know triggers an event in this case an on error and we just measur the response",
    "start": "790000",
    "end": "796880"
  },
  {
    "text": "size um now there's Logic on the server side which is sort of you know Common",
    "start": "796880",
    "end": "802079"
  },
  {
    "text": "and control so this was the JavaScript part now there's a we have a binary and what that binary is is the common",
    "start": "802079",
    "end": "807480"
  },
  {
    "text": "control driver now the driver is responsible for coordinating character",
    "start": "807480",
    "end": "812680"
  },
  {
    "text": "guessing so what that means it will try every single character and then when it guesses one it will move to the next one so we do one by one uh and it will issue",
    "start": "812680",
    "end": "821279"
  },
  {
    "text": "requests depending on which side and and what are you targeting um it will listen to the",
    "start": "821279",
    "end": "826320"
  },
  {
    "text": "JavaScript callbox so when the request finishes in the browser the browser will make your request back to the common and Control Center and it will say hey",
    "start": "826320",
    "end": "832199"
  },
  {
    "text": "browser I'm sorry hey server anything that you sell Through the Wire that was",
    "start": "832199",
    "end": "837240"
  },
  {
    "text": "me uh and the request is done anything that you saw from this particular destination IP that I talked to uh just",
    "start": "837240",
    "end": "842880"
  },
  {
    "text": "go ahead and measure it um so it measures the packet length and then it has some buil in intelligence for um you",
    "start": "842880",
    "end": "850560"
  },
  {
    "text": "know runtime recovery what what that means is sometimes we hear issues sometimes we make mistakes but this type",
    "start": "850560",
    "end": "855959"
  },
  {
    "text": "of attack we're not allowed to make mistakes because if we do uh because it Li in compression we cannot continue so",
    "start": "855959",
    "end": "862079"
  },
  {
    "text": "if we make a mistake we have algorithms that are able to detect that we made a mistake and and roll back and we'll show",
    "start": "862079",
    "end": "867480"
  },
  {
    "text": "you that in a few seconds so the Oracle the Oracle is the magic um you know it's",
    "start": "867480",
    "end": "873120"
  },
  {
    "text": "the black box is the uh is the mystical piece in our attack uh it just measures",
    "start": "873120",
    "end": "878680"
  },
  {
    "text": "the size Delta between different requests so the size difference between different I'm sorry between different",
    "start": "878680",
    "end": "884399"
  },
  {
    "text": "responses um it will guess by by by so one character at a time and it will perform error recovery if there's you",
    "start": "884399",
    "end": "891079"
  },
  {
    "text": "know any issues or one not um so let's look at SSL for a few seconds",
    "start": "891079",
    "end": "897519"
  },
  {
    "start": "897000",
    "end": "897000"
  },
  {
    "text": "so what is the problem with SSL well the problem is SSL does not high length so you have a victim you have a",
    "start": "897519",
    "end": "904160"
  },
  {
    "text": "Target server there's SSL Pockets request and response pairs flowing back and forth now it turns out that the HTTP",
    "start": "904160",
    "end": "912759"
  },
  {
    "text": "clear text um at least in the Stream ciphers it's equivalent it's the same",
    "start": "912759",
    "end": "917880"
  },
  {
    "text": "you know after handshake and all that is taken care of it's exactly the same as the SSL Cipher text so um the size of",
    "start": "917880",
    "end": "925839"
  },
  {
    "text": "the underlying PL text is the same size as the cipher text in this case we have an example 10 bytes so let's look at a",
    "start": "925839",
    "end": "932759"
  },
  {
    "start": "932000",
    "end": "932000"
  },
  {
    "text": "let's look at an example of a compression Oracle um here we have a gas",
    "start": "932759",
    "end": "938440"
  },
  {
    "text": "right so we have a gas which is uh super secret super secrex uh and the actual",
    "start": "938440",
    "end": "944120"
  },
  {
    "text": "Target is super secret so X the last character is incorrect so compression is going to do the following I hope you can",
    "start": "944120",
    "end": "951040"
  },
  {
    "text": "see that at the at the very end of the room but what compression is going to do is going to replace super secr without",
    "start": "951040",
    "end": "956800"
  },
  {
    "text": "the T it's going to replace that with a pointer right back to the original secret so",
    "start": "956800",
    "end": "962360"
  },
  {
    "text": "because there's a repetition whatever is repeated it's replaced back with a pointer but because the X was an incorrect guess because it should have",
    "start": "962360",
    "end": "968639"
  },
  {
    "text": "been a t instead of an X the X will not get compressed because it's not a match",
    "start": "968639",
    "end": "973839"
  },
  {
    "text": "so the compression is only within the sub string much hopefully that makes sense so we go from 48 bytes to 38 bytes",
    "start": "973839",
    "end": "980560"
  },
  {
    "text": "we save 10 bytes because of compression now if instead of an X we s a t right so",
    "start": "980560",
    "end": "986240"
  },
  {
    "text": "we rotate through the whole alphabet uh the key space that we target If instead of an X we have a t guess",
    "start": "986240",
    "end": "992720"
  },
  {
    "text": "what the whole them will compress right so super secret which is the attacker's",
    "start": "992720",
    "end": "998560"
  },
  {
    "text": "guess will compress against the actual guess on the page the actual secret on the page the whole thing compresses we",
    "start": "998560",
    "end": "1003920"
  },
  {
    "text": "go down 11 byes we go from 48 bytes to 37 bytes you might be thinking okay this is great Angelo but what does this have",
    "start": "1003920",
    "end": "1010399"
  },
  {
    "text": "to do with breach well it turns out that if you look at the previous slide with the incorrect secret we have 38 bites",
    "start": "1010399",
    "end": "1016720"
  },
  {
    "text": "with the correct secret we have 37 by now that would be a one by difference",
    "start": "1016720",
    "end": "1022800"
  },
  {
    "text": "that one by difference is what makes breach possible because we can tell which is the correct one and which",
    "start": "1022800",
    "end": "1029199"
  },
  {
    "text": "wasn't is the incorrect one so you all safety begins with you take it over so",
    "start": "1029199",
    "end": "1035360"
  },
  {
    "text": "after we talked a little bit about the Oracle um I want to talk a little bit about uh it's on it's on U I want to talk a",
    "start": "1035360",
    "end": "1043678"
  },
  {
    "text": "little bit about some roadblocks that we hit and uh explain a little bit what the these roadblocks are and uh how did we",
    "start": "1043679",
    "end": "1049160"
  },
  {
    "text": "work around it so the first St block that we hit was uh Hoffman coding uh as",
    "start": "1049160",
    "end": "1054640"
  },
  {
    "start": "1054000",
    "end": "1054000"
  },
  {
    "text": "we mentioned before compression is built of two components the first component is",
    "start": "1054640",
    "end": "1059760"
  },
  {
    "text": "LD 77 lz77 is is is the key that's what we want lz77 compresses repeated string",
    "start": "1059760",
    "end": "1066720"
  },
  {
    "text": "against each other so if we have a repeated string we know that it will compress well so if we guessed correct",
    "start": "1066720",
    "end": "1072400"
  },
  {
    "text": "the secret it will compress well and our Oracle will'll be able to determine what's the correct guess Hoffman coding",
    "start": "1072400",
    "end": "1077640"
  },
  {
    "text": "on the other hand is not really friend Huffman coding what it tries to do in the compression is find characters that",
    "start": "1077640",
    "end": "1083640"
  },
  {
    "text": "are very common like Neil explained before and replace those common bytes with shorter sequences the problem with",
    "start": "1083640",
    "end": "1090679"
  },
  {
    "text": "that is that when you replace common btes with shorter sequences that also compresses the overall size and when",
    "start": "1090679",
    "end": "1096760"
  },
  {
    "text": "that compresses the overall size to something smaller our Oracle compression is now confused because it doesn't know why it was compressed to smaller it just",
    "start": "1096760",
    "end": "1102600"
  },
  {
    "text": "knows it's smaller so the question is why is it smaller is it smaller because of lz77 which is something that",
    "start": "1102600",
    "end": "1109159"
  },
  {
    "text": "indicates a match in our string or is it just because that character is very common in the response and therefore",
    "start": "1109159",
    "end": "1115200"
  },
  {
    "text": "that is causing the response to be smaller so we really don't like hman coding we might want to uh do something",
    "start": "1115200",
    "end": "1121320"
  },
  {
    "text": "about that but for now we have to deal with it so let's take a look at a very concrete example and see how this",
    "start": "1121320",
    "end": "1126640"
  },
  {
    "text": "Hoffman coding affects our U case so in this case uh we have a response that has",
    "start": "1126640",
    "end": "1134320"
  },
  {
    "text": "a secret in it and we're trying to get some characters we we already guessed 4 BF in",
    "start": "1134320",
    "end": "1140240"
  },
  {
    "text": "our secret and we're trying to guess that fourth character and in this case the fourth character the correct fourth",
    "start": "1140240",
    "end": "1146520"
  },
  {
    "text": "character would be B so after we try different characters and we try the character B our Oracle will see oh B is",
    "start": "1146520",
    "end": "1153159"
  },
  {
    "text": "correct because the response size seems to be a little bit smaller compress is better so now we continue and now what",
    "start": "1153159",
    "end": "1158600"
  },
  {
    "text": "happens next what happens next is we try another character in this case a which we probably tried before but that's fine",
    "start": "1158600",
    "end": "1164919"
  },
  {
    "text": "so we try a and we get the same response size we get response 13 58 bytes as well",
    "start": "1164919",
    "end": "1170120"
  },
  {
    "text": "so from the Oracle perspective the Oracle doesn't know why it got the same small response size why it compresses",
    "start": "1170120",
    "end": "1176120"
  },
  {
    "text": "well it just knows it compresses well so if it compresses well it thinks well that's probably a winner however in this",
    "start": "1176120",
    "end": "1181919"
  },
  {
    "text": "case it compressed well not because the character was correct not because it compressed against another string but",
    "start": "1181919",
    "end": "1187080"
  },
  {
    "text": "rather because it was just a very common character a appeared many many times in that response body and therefore Hoffman",
    "start": "1187080",
    "end": "1193120"
  },
  {
    "text": "coding caused it to be a very very small bit representation so they both appear to be the same respon size and how do we",
    "start": "1193120",
    "end": "1200840"
  },
  {
    "text": "know which one is the winner so that that's some of the nightmares that we had with Hoffman coding and uh I'm sure anyone that would tried to play with",
    "start": "1200840",
    "end": "1206159"
  },
  {
    "text": "this probably that was one of the the first things that is sure to come up so what do we do about it obviously",
    "start": "1206159",
    "end": "1212200"
  },
  {
    "text": "we're not going to send breach home we're going to try to deal with that so we had a few things that we did the",
    "start": "1212200",
    "end": "1217280"
  },
  {
    "text": "first thing that we did is two tries two tries is not something new that we invented two tries was already mentioned in crime and what two tries does is a",
    "start": "1217280",
    "end": "1223840"
  },
  {
    "text": "very simple approach that would try to eliminate the effects of Hoffman coding and allow the Oracle to detect that the",
    "start": "1223840",
    "end": "1229320"
  },
  {
    "text": "compression the response size is small because of lz77 because of that repetition in the string that matches to",
    "start": "1229320",
    "end": "1236280"
  },
  {
    "text": "the secret the way that it does that is it sends two requests for every guest character that wants to guess so let's",
    "start": "1236280",
    "end": "1242000"
  },
  {
    "text": "say we're trying to guess in this case the number seven we want to see if seven is correct so what we are going to do",
    "start": "1242000",
    "end": "1248039"
  },
  {
    "text": "we're going to send it once just after the characters that we already know that we already guessed before let's assume we already guess those characters and",
    "start": "1248039",
    "end": "1254520"
  },
  {
    "text": "we're going to put seven so we have four BF then we have seven and then we have",
    "start": "1254520",
    "end": "1259880"
  },
  {
    "text": "some random padding that we put over there to just buffer it out of the rest of the data so we'll get the response",
    "start": "1259880",
    "end": "1265720"
  },
  {
    "text": "we'll measure it and then we'll send another request the second try and over there we'll put the number seven after",
    "start": "1265720",
    "end": "1271919"
  },
  {
    "text": "that padding so we have 4bf padding and then seven and when we measure the difference between those two that's the",
    "start": "1271919",
    "end": "1278520"
  },
  {
    "text": "key cuz if we have a difference between these two that means it's because of lz77 if it were that we got a small size",
    "start": "1278520",
    "end": "1286320"
  },
  {
    "text": "because of Hoffman coding there should be no reason why these two should result",
    "start": "1286320",
    "end": "1291440"
  },
  {
    "text": "in a different size so if we do have a different size we know that's because of lz77 uh which is if it would have been",
    "start": "1291440",
    "end": "1298440"
  },
  {
    "text": "close it compresses well against the secret if it's far after the padding it does not compress against the secret",
    "start": "1298440",
    "end": "1303720"
  },
  {
    "text": "hopefully that makes sense the second thing that we tried uh is character set pool again we're still trying to fight",
    "start": "1303720",
    "end": "1309880"
  },
  {
    "text": "Hoffman coding so in character set pool what we're trying to do is for every guess that we're going to send every request that we're going to send we're",
    "start": "1309880",
    "end": "1316480"
  },
  {
    "text": "going to put all the characters all the alphabet from our secret let's assume we have a secret that that has a hexa",
    "start": "1316480",
    "end": "1322679"
  },
  {
    "text": "secret in it or secret that is encoded in hexa and hexi is going to be a to z 0",
    "start": "1322679",
    "end": "1328120"
  },
  {
    "text": "to9 so what we're going to do is we're going to put that entire alphabet in every request and as we want to guess a",
    "start": "1328120",
    "end": "1333480"
  },
  {
    "text": "specific character we're going to move it out of the guest position out out of the character pool and move it into the",
    "start": "1333480",
    "end": "1339640"
  },
  {
    "text": "guest position what that essentially allows us to do is allows us to not change the Hoffman coding the hufman",
    "start": "1339640",
    "end": "1346039"
  },
  {
    "text": "coding will stay basically the same across different requests so only thing that changes across request is going to",
    "start": "1346039",
    "end": "1351159"
  },
  {
    "text": "be the location of that character and the location will only affect lz77 and not halfman coding so that helps us a",
    "start": "1351159",
    "end": "1357720"
  },
  {
    "text": "little bit to determine what's the correct guess and what's just Hoffman coding fooling Oracle so that was the first Ro block we",
    "start": "1357720",
    "end": "1365679"
  },
  {
    "text": "had a few more the second as as we're trying to",
    "start": "1365679",
    "end": "1371880"
  },
  {
    "text": "guess characters sometimes we have different issues and and the two main issues that we're going to have from a",
    "start": "1371880",
    "end": "1377520"
  },
  {
    "text": "high level are let's assume we're trying to guess different characters and we get",
    "start": "1377520",
    "end": "1382799"
  },
  {
    "text": "no winners meaning we Define a winner as a character that the Oracle tells us that's the correct guess for our secret",
    "start": "1382799",
    "end": "1389480"
  },
  {
    "text": "so we have no winners the Oracle does not seem to suggest that any character is the correct character from The Secret",
    "start": "1389480",
    "end": "1396120"
  },
  {
    "text": "so what do we do about that the second thing is if we have too many winners meaning we have too many characters that as we guess them the Oracle suggests",
    "start": "1396120",
    "end": "1402960"
  },
  {
    "text": "that that is the correct character for this location in the secret",
    "start": "1402960",
    "end": "1409000"
  },
  {
    "text": "the first thing that we did to solve these problems is look ahead instead of guessing one character at a time we just do two characters at a time so instead",
    "start": "1409000",
    "end": "1415919"
  },
  {
    "text": "of guessing A and B and C and see which one of them is correct we're just going to do a a a b a c now that's obviously",
    "start": "1415919",
    "end": "1421840"
  },
  {
    "text": "more expensive but it tends to be more reliable especially in these cases where we had no winners or too many",
    "start": "1421840",
    "end": "1427679"
  },
  {
    "text": "winners now let's assume we went down the road and we uh tried and some somewhere down the road we see that",
    "start": "1427679",
    "end": "1433520"
  },
  {
    "text": "something doesn't look right we're not getting any winners we're trying a bunch of tricks and we'll talk more about some",
    "start": "1433520",
    "end": "1438640"
  },
  {
    "text": "other tricks but but no matter what we do we're kind of stuck nothing is compressing well and that case what we",
    "start": "1438640",
    "end": "1444360"
  },
  {
    "text": "do is we roll back we roll back to the last known location of a conflict so if we had some conflict we had multiple characters that appeared to be winners",
    "start": "1444360",
    "end": "1450400"
  },
  {
    "text": "but one was stronger than another we start with a stronger and then if there's later down down an issue we go",
    "start": "1450400",
    "end": "1456159"
  },
  {
    "text": "we roll back to that conflict another thing that we had is",
    "start": "1456159",
    "end": "1461960"
  },
  {
    "text": "let's assume that we have a a secret that has inside the secret ABC",
    "start": "1461960",
    "end": "1467360"
  },
  {
    "text": "ab1 what happens in that case is is we have something that will lead us to cause compression against the guess",
    "start": "1467360",
    "end": "1473200"
  },
  {
    "text": "itself not against the real secret what happens is if you have a secret again ABC ab and then we're trying to guess",
    "start": "1473200",
    "end": "1480399"
  },
  {
    "text": "that sixth character that is supposed to be one we're starting to rotate through guesses we're going a b c 1 Etc what's",
    "start": "1480399",
    "end": "1488960"
  },
  {
    "text": "going to happen is both C and one will suggest that those are correct guesses those are both winners the reason for",
    "start": "1488960",
    "end": "1495679"
  },
  {
    "text": "that is the one will be correct because it compresses against the secret the correct the real secret and the C will",
    "start": "1495679",
    "end": "1501720"
  },
  {
    "text": "show up as correct because it compresses against the guess itself so how do identify how do identify between those",
    "start": "1501720",
    "end": "1506880"
  },
  {
    "text": "two what compresses against the secret and what is just a sub pattern within the guess itself so as a title already",
    "start": "1506880",
    "end": "1513559"
  },
  {
    "text": "suggests it's pretty simple what we're doing is we're doing a compression ratio on the guess itself and let's assume",
    "start": "1513559",
    "end": "1519840"
  },
  {
    "text": "that we're talking about Secrets if it's not secrets and it's not random then we don't need to talk about this so we're talking about real true random secrets",
    "start": "1519840",
    "end": "1526600"
  },
  {
    "text": "that we're trying to extract and and if it's true random secrets we probably shouldn't have secrets that are really",
    "start": "1526600",
    "end": "1532159"
  },
  {
    "text": "good secrets that compress well against themselves that there's some significant patterns going on in there so we just",
    "start": "1532159",
    "end": "1538240"
  },
  {
    "text": "zip it and if we see that it compresses well we can assume that's probably wrong we drop that character and then we're",
    "start": "1538240",
    "end": "1544440"
  },
  {
    "text": "left with one which is correct another problem that we're facing is URL and HTML encoding um in",
    "start": "1544440",
    "end": "1553600"
  },
  {
    "text": "the page so in reality a lot of times these tokens let's say Neil mentioned before for examp example we might be",
    "start": "1553600",
    "end": "1558840"
  },
  {
    "text": "going after a cesf token A Cerf token typically will be let's say inside a form post so inside the form you'll have",
    "start": "1558840",
    "end": "1564440"
  },
  {
    "text": "a field an input field and you'll have value equals and some quotes or whatever so let's show let's take a look at an",
    "start": "1564440",
    "end": "1570080"
  },
  {
    "text": "example over here so as you can see in this example um you'll have with there cesf token but it's but it's hidden",
    "start": "1570080",
    "end": "1576240"
  },
  {
    "text": "inside a value equals quotes and the problem is if we're going to try to get that quote into the response body it's",
    "start": "1576240",
    "end": "1582080"
  },
  {
    "text": "probably going to be encoded if it's not going to be encoded then there's probably xss on that page so I don't think we need breach for that",
    "start": "1582080",
    "end": "1588760"
  },
  {
    "text": "so so we're assuming that that that quotes is encoded and if quotes encoded then in this case we're we're sort of",
    "start": "1588760",
    "end": "1594760"
  },
  {
    "text": "stuck so this is a roadblock actually that we did not have a solution it's kind of a limitation so if you put your",
    "start": "1594760",
    "end": "1600520"
  },
  {
    "text": "secrets in places where the guess gets encoded in a way that it cannot bootstrap essentially and get to the",
    "start": "1600520",
    "end": "1606360"
  },
  {
    "text": "secret location we will not be able to bootstrap and start to compress character by character against the real",
    "start": "1606360",
    "end": "1613399"
  },
  {
    "text": "secret and some more robloxs so so so far we started with a",
    "start": "1613399",
    "end": "1619279"
  },
  {
    "text": "fairly simple example we said that every bite in the in the clear text Will Will indicate a bite in the cipher text now",
    "start": "1619279",
    "end": "1625640"
  },
  {
    "text": "that's not always the case in in Block Cipher that might not be the case so so why is that let's let's take a look at",
    "start": "1625640",
    "end": "1630919"
  },
  {
    "text": "stream Cipher versus block Cipher in stream Cipher it's pretty straightforward stream Cipher will",
    "start": "1630919",
    "end": "1637640"
  },
  {
    "text": "reveal the exact lengths of the clean of the clear text so if you have 10 byes",
    "start": "1637640",
    "end": "1642799"
  },
  {
    "text": "bytes in HTTP let's assume it's compressed or not it doesn't matter but it's the clear text that bytes will be",
    "start": "1642799",
    "end": "1649120"
  },
  {
    "text": "exactly 10 bytes of Cipher text so then if your Oracle looks at the size it knows exactly what was your length of",
    "start": "1649120",
    "end": "1655679"
  },
  {
    "text": "your clear text however in Block Cipher mode that's not the case BL Cipher mode as we all know it's always going to be",
    "start": "1655679",
    "end": "1662039"
  },
  {
    "text": "some sort of block size so let's say we have HTP response that is 10 bytes it gets encrypted we have now 16 bytes",
    "start": "1662039",
    "end": "1668679"
  },
  {
    "text": "whether or not we had 10 or 11 bytes inside over there the Oracle will not see that so that kind of Limits The",
    "start": "1668679",
    "end": "1674159"
  },
  {
    "text": "Oracle so what did we do about this all we needed to do to overcome this",
    "start": "1674159",
    "end": "1680000"
  },
  {
    "text": "problem was to align the response body before we try to even guess the characters to that block Cipher",
    "start": "1680000",
    "end": "1686399"
  },
  {
    "text": "basically we just add more characters causing the page to be in a position where any additional uncompressible bite",
    "start": "1686399",
    "end": "1693559"
  },
  {
    "text": "will cause the output to overflow into the next block Cipher to the next block",
    "start": "1693559",
    "end": "1699559"
  },
  {
    "text": "um now when we get to that position if we start to get characters if it's correct it will compress well and it won't overflow to the next block If it's",
    "start": "1699559",
    "end": "1706519"
  },
  {
    "text": "incorrect it will overflow and then then we have basically our Oracle being able to see that did it overflow or not",
    "start": "1706519",
    "end": "1711880"
  },
  {
    "text": "basically we'll have 16 bytes difference instead of one now let's assume we started to guess",
    "start": "1711880",
    "end": "1718080"
  },
  {
    "text": "now we aligned it we started to guess characters so we're guessing a character we got a winner we want to add it if we",
    "start": "1718080",
    "end": "1723760"
  },
  {
    "text": "add it sometimes it will still cause alignments to go off and when the alignment goes off it goes off that",
    "start": "1723760",
    "end": "1730159"
  },
  {
    "text": "Tipping Point then now if we're going to try to guess another character we won't",
    "start": "1730159",
    "end": "1735559"
  },
  {
    "text": "necessarily see who's the winner because now we're inside the next and a bite here or there won't show any difference in the cipher text so what we do in this",
    "start": "1735559",
    "end": "1742240"
  },
  {
    "text": "case is we just keep a window that we're using all the time we're keeping a guest window that guest window is always going",
    "start": "1742240",
    "end": "1747720"
  },
  {
    "text": "to be constant and that helps stabilize the response sies to always stay the same size especially the input to the uh",
    "start": "1747720",
    "end": "1754640"
  },
  {
    "text": "to the cipher so if we're always keeping let's say 10 characters as we guess another character We'll add it and we'll",
    "start": "1754640",
    "end": "1761600"
  },
  {
    "text": "drop the first we're keeping always 10 and that will keep us aligned to the Tipping Point keep our Oracle happy and",
    "start": "1761600",
    "end": "1766799"
  },
  {
    "text": "we'll be able to over block Cipher and uh breach yet more",
    "start": "1766799",
    "end": "1773480"
  },
  {
    "start": "1772000",
    "end": "1772000"
  },
  {
    "text": "[Music] roadblocks so we mentioned before that we want stable pages and the reason we",
    "start": "1773480",
    "end": "1778720"
  },
  {
    "text": "want to stable pages is because if they're unstable then our Oracle is suffering from the measurements it does not see a",
    "start": "1778720",
    "end": "1785600"
  },
  {
    "text": "clear measurement indication of it's changing because it's a winner and",
    "start": "1785600",
    "end": "1790799"
  },
  {
    "text": "rather in this case it's just going to change because it's unstable page the response adds some different data and that data changes and as it changes the",
    "start": "1790799",
    "end": "1797679"
  },
  {
    "text": "size changes so we want the changes to be as stable as possible but if they're",
    "start": "1797679",
    "end": "1802720"
  },
  {
    "text": "not that's not the end of the world all we have to do is let's just throw a couple of requests 10 15 doesn't matter",
    "start": "1802720",
    "end": "1810440"
  },
  {
    "text": "and get our statistics aligned so that after we do enough of those we can average it out and then we compare that",
    "start": "1810440",
    "end": "1817159"
  },
  {
    "text": "average to the average of the next guess and if on average one is bigger than the other we know that the one that is",
    "start": "1817159",
    "end": "1823279"
  },
  {
    "text": "smaller our Oracle should suggest that that's the correct character",
    "start": "1823279",
    "end": "1829480"
  },
  {
    "text": "Hoffman coding we talked about it before but uh we're not done with it yet so one more thing that we did is",
    "start": "1829480",
    "end": "1835240"
  },
  {
    "text": "weight normalization so before we start our guesses we can try to detect what is",
    "start": "1835240",
    "end": "1841159"
  },
  {
    "text": "really the Hoffman tree looking like let's try to figure out the Hoffman tree let's try to figure out what's the",
    "start": "1841159",
    "end": "1846279"
  },
  {
    "text": "frequencies of which characters what is being represented in longer streams and what is being represented as shorter",
    "start": "1846279",
    "end": "1852240"
  },
  {
    "text": "streams and then the ones that we see that are presented in shorter streams we want to try and work around that and",
    "start": "1852240",
    "end": "1857320"
  },
  {
    "text": "basically B B it out with adding some virtual value to it to essentially get the Oracle to ignore that and just look",
    "start": "1857320",
    "end": "1864440"
  },
  {
    "text": "at the real lz77 without the effects of the Hoffman",
    "start": "1864440",
    "end": "1870799"
  },
  {
    "text": "coding now because we love our Oracle so much we uh worked on a few more however we won't be able to release them today",
    "start": "1870799",
    "end": "1876559"
  },
  {
    "text": "because we're patenting them that's right just kidding just kidding we don't like",
    "start": "1876559",
    "end": "1881639"
  },
  {
    "text": "those hello can you still hear me yes excellent thank you y all",
    "start": "1881639",
    "end": "1888639"
  },
  {
    "text": "um thank you so you know all all of this can be uh I've seen some faces in the",
    "start": "1888639",
    "end": "1894440"
  },
  {
    "text": "audience do you mind if I take this toit I'm going to take this cable with me um some of you might be overwhelmed uh but",
    "start": "1894440",
    "end": "1901080"
  },
  {
    "text": "do not panic um it's not as hard it's not as hard as it looks like",
    "start": "1901080",
    "end": "1907240"
  },
  {
    "text": "you know it's uh connecting a cable in black hat is a little bit harder but uh",
    "start": "1907240",
    "end": "1912399"
  },
  {
    "text": "me connect this cable over here all right so let me ask you a question guys",
    "start": "1912399",
    "end": "1918840"
  },
  {
    "text": "are you ready for a demo all right I'm I'm not hearing that are you guys ready for a",
    "start": "1918840",
    "end": "1925480"
  },
  {
    "text": "demo that's better all right so uh demo time that's right demo time yes yes yes",
    "start": "1925480",
    "end": "1934480"
  },
  {
    "text": "you might switch excellent so first we're going to show the demo then we're going to tell you how it",
    "start": "1934480",
    "end": "1940720"
  },
  {
    "text": "works so we chose a application the the reality is there's um you know there's a",
    "start": "1940720",
    "end": "1947600"
  },
  {
    "text": "lot of applications that are vulnerable uh we installed a um selfhosted version",
    "start": "1947600",
    "end": "1953320"
  },
  {
    "text": "of a popular email client that we like which is uh Outlook web access and um we",
    "start": "1953320",
    "end": "1959480"
  },
  {
    "text": "install it in a domain that we control it's the mabo and um it's basically just um",
    "start": "1959480",
    "end": "1965639"
  },
  {
    "text": "Outlook web access um nothing too fancy about it but um you know keep an eye on it cuz you you're going to like this let",
    "start": "1965639",
    "end": "1972120"
  },
  {
    "text": "me get this zoom level to 100% all right so that's the uh that's the malbo and",
    "start": "1972120",
    "end": "1977480"
  },
  {
    "text": "we're going to do is we're going to launch breach Brides up and running and",
    "start": "1977480",
    "end": "1982679"
  },
  {
    "text": "then we're going to uh basically we're going to have the uh victim we're going to inject an eye frame in the victim and",
    "start": "1982679",
    "end": "1988399"
  },
  {
    "text": "the victim would not see anything when they're going to cnn.com and the breach attack would happen uh but because we",
    "start": "1988399",
    "end": "1994360"
  },
  {
    "text": "want to show it to you guys we're going to make it full screen if if that's if that's okay with can you point that you",
    "start": "1994360",
    "end": "2001200"
  },
  {
    "text": "point that that way there's e yeah thank you okay so we need to go to militia",
    "start": "2001200",
    "end": "2006639"
  },
  {
    "text": "domain and so we thought you know evil hacker was a nice domain so um we",
    "start": "2006639",
    "end": "2013440"
  },
  {
    "text": "actually bought the domain spent the whole budget for the black hat talk but uh you know we actually on the domain",
    "start": "2013440",
    "end": "2019240"
  },
  {
    "text": "now so uh we just go to Evil hacker.com and then you get bridged uh so without",
    "start": "2019240",
    "end": "2024880"
  },
  {
    "text": "further Ado um let's pray that this works okay",
    "start": "2024880",
    "end": "2033480"
  },
  {
    "text": "[Music]",
    "start": "2034870",
    "end": "2041299"
  },
  {
    "text": "[Music]",
    "start": "2049570",
    "end": "2054670"
  },
  {
    "text": "this is like the movies",
    "start": "2058520",
    "end": "2062040"
  },
  {
    "text": "[Music]",
    "start": "2066150",
    "end": "2069229"
  },
  {
    "text": "we'll show you in a second the goal is to be mind sweeper before breach is done and that's a little bit hard so we were",
    "start": "2073040",
    "end": "2079720"
  },
  {
    "text": "not able to do it all right so that was our demo oh yes the music is",
    "start": "2079720",
    "end": "2085398"
  },
  {
    "text": "a little bit off but um now how long do you think that took it was uh that was less than 60 seconds maybe a little bit",
    "start": "2085399",
    "end": "2092118"
  },
  {
    "text": "more than 30 now what happened there is we extracted a secret on evil hacker",
    "start": "2092119",
    "end": "2097359"
  },
  {
    "text": "website we extracted a secret from the malbot website and you might be thinking what is the secret let me show you in a",
    "start": "2097359",
    "end": "2103400"
  },
  {
    "text": "second let's go back to Outlook web access and um just so everybody can see that Let me refresh the page and if this",
    "start": "2103400",
    "end": "2110119"
  },
  {
    "text": "works you're going to see something interesting just watch oh now the page isn't rushing now",
    "start": "2110119",
    "end": "2116040"
  },
  {
    "text": "that is a breach now you might be thinking how did that happen well if we copy paste this",
    "start": "2116040",
    "end": "2122400"
  },
  {
    "text": "token over here watch the source code on the page control",
    "start": "2122400",
    "end": "2129599"
  },
  {
    "text": "find and that is the sister of toen we just stole the sister of toen from the",
    "start": "2129599",
    "end": "2135520"
  },
  {
    "text": "page thank you",
    "start": "2135520",
    "end": "2138640"
  },
  {
    "text": "everybody now I know some of you are a skeptical let me let's let's do this one more time uh let's let's see how it",
    "start": "2144640",
    "end": "2150880"
  },
  {
    "text": "works so here's the malbot Donnet um identity verified get a green lock and",
    "start": "2150880",
    "end": "2157119"
  },
  {
    "text": "uh if you go to connection you can actually see you know certificate has been validated so it's an actual valid",
    "start": "2157119",
    "end": "2163280"
  },
  {
    "text": "certificate we're not like tampering or doing a proxy like burp or anything like that it is a per perfectly valid",
    "start": "2163280",
    "end": "2169240"
  },
  {
    "text": "certificate now when we go to the malicious website let's launch the breach attack one more",
    "start": "2169240",
    "end": "2174800"
  },
  {
    "text": "time so when we launch the breach attack you're going to see the browser issue number of requests and and you're going",
    "start": "2174800",
    "end": "2180319"
  },
  {
    "text": "to see the attack riew you're going to see how he's getting every character one by one by having the browser issue the",
    "start": "2180319",
    "end": "2186560"
  },
  {
    "text": "requests so let's do that one more time without music this time uh so we are",
    "start": "2186560",
    "end": "2191760"
  },
  {
    "text": "going to do control F5 and this is the attacker View and we going to overlap it",
    "start": "2191760",
    "end": "2197520"
  },
  {
    "text": "with chrome so you can see that there's a bunch of requests going down back and forth at the bottom of your screen if we",
    "start": "2197520",
    "end": "2203720"
  },
  {
    "text": "zoom into one of those and this will maybe stop the attack for a second but um you can see",
    "start": "2203720",
    "end": "2209480"
  },
  {
    "text": "that there's two pairs of requests there's one that's going to Outlook web access or in this case or Target",
    "start": "2209480",
    "end": "2214800"
  },
  {
    "text": "application you know with the guest so you can see here's guessing number four you can see here is guessing number five",
    "start": "2214800",
    "end": "2220480"
  },
  {
    "text": "and then it's doing a call back to the evil hacker which in this case is us but it could be a different computer uh it's",
    "start": "2220480",
    "end": "2227319"
  },
  {
    "text": "doing a call back that tells hey that request just went through now with the call back we know that the request was",
    "start": "2227319",
    "end": "2234119"
  },
  {
    "text": "completed so whatever we saw in the response whatever size we saw in the response that must correspond to that request so we measure it and we issue",
    "start": "2234119",
    "end": "2241400"
  },
  {
    "text": "one request for every one of them and then in 43 seconds we get the whole sister talking and then we do a post",
    "start": "2241400",
    "end": "2247480"
  },
  {
    "text": "with the sister talking to actually you know change your settings so that's that's pretty cool but you may thinking",
    "start": "2247480",
    "end": "2252720"
  },
  {
    "text": "well all you did is um what happened he was count the request oh yeah and and by the way thank you very much Neil for Dr",
    "start": "2252720",
    "end": "2259520"
  },
  {
    "text": "Harris for pointing that out um there's 1,20 requests in this case now something",
    "start": "2259520",
    "end": "2265960"
  },
  {
    "text": "more interesting is because we have the sister for talking we can do let me close this and let me log in",
    "start": "2265960",
    "end": "2272880"
  },
  {
    "text": "again so we can do the following we can also uh see malb but.net I look web",
    "start": "2272880",
    "end": "2279640"
  },
  {
    "text": "access let me log in again this section I wanted to show you let me see if I can put this back in",
    "start": "2279640",
    "end": "2285800"
  },
  {
    "text": "English because I I don't really know Russian so the attacker was a little bit lousy he uh forgot to change back the uh",
    "start": "2285800",
    "end": "2293000"
  },
  {
    "text": "the language but um does anybody does anybody wait it's uh it's Spanish I can",
    "start": "2293000",
    "end": "2300319"
  },
  {
    "text": "do this I know Spanish Spain so uh I can I can do this we save it refresh all right that's",
    "start": "2300319",
    "end": "2307640"
  },
  {
    "text": "let's back to readable so let's go to rules and you will see oh there's a new",
    "start": "2307640",
    "end": "2312880"
  },
  {
    "text": "rule advaned persisting kitten we going to open it up forward every email that",
    "start": "2312880",
    "end": "2318960"
  },
  {
    "text": "arrives to persistent thread at evil hacker.com now is that convincing or what now that is an AP thank you thank",
    "start": "2318960",
    "end": "2328000"
  },
  {
    "text": "you thank you and again and and I'm going to show",
    "start": "2328000",
    "end": "2333319"
  },
  {
    "text": "you just something more because there might be you know if if you're skeptical about this the way this works is you",
    "start": "2333319",
    "end": "2338920"
  },
  {
    "text": "know when you go to any page you basically let me show you this with chrome let me do this again and m.net",
    "start": "2338920",
    "end": "2349040"
  },
  {
    "text": "right so let me refresh should be in English I guess not uh I guess it's",
    "start": "2349040",
    "end": "2354480"
  },
  {
    "text": "fixated for the session let's do this one more time all right boom so what",
    "start": "2354480",
    "end": "2361079"
  },
  {
    "text": "we're doing effectively is we go into this new page right write a new email",
    "start": "2361079",
    "end": "2366240"
  },
  {
    "text": "and we found out let's create an error this just trigger an error so how do we trigger an error in in in a Microsoft",
    "start": "2366240",
    "end": "2371520"
  },
  {
    "text": "product well we just type you know random numbers uh so so you know so so we type some some numbers and um you",
    "start": "2371520",
    "end": "2378400"
  },
  {
    "text": "know and and again this works in many many many uh software out there when you",
    "start": "2378400",
    "end": "2383599"
  },
  {
    "text": "type some random numbers let's write some numbers that actually make sense like hello black hat right so what you",
    "start": "2383599",
    "end": "2390079"
  },
  {
    "text": "can see is if you look at the source code and search for Hello black hat you can absolutely see that it's getting",
    "start": "2390079",
    "end": "2396319"
  },
  {
    "text": "reflected on response now why is that interesting instead of hello blackhead let's do Canary equals hello blackhead",
    "start": "2396319",
    "end": "2404480"
  },
  {
    "text": "and now let's look at the source Cod one more time right so you can see now I think",
    "start": "2404480",
    "end": "2411000"
  },
  {
    "text": "even people at the bottom can see it uh it says Canary equals hello black hat now the interesting thing is watch",
    "start": "2411000",
    "end": "2417040"
  },
  {
    "text": "Canary see it's also in the logo of Handler so we could just start rotating",
    "start": "2417040",
    "end": "2424200"
  },
  {
    "text": "through every hex character we star in zero and we we go one two three until we hit the one that is correct based on the",
    "start": "2424200",
    "end": "2430760"
  },
  {
    "text": "smallest compression size so we just do this through this URL uh and then we report back to the server and the server",
    "start": "2430760",
    "end": "2436200"
  },
  {
    "text": "knows when to move forward and it gets the whole token when it gets the token then it will issue the malicious request",
    "start": "2436200",
    "end": "2442119"
  },
  {
    "text": "it will set up the language in Russian it will forward the email and ideally it will set up the language back in English",
    "start": "2442119",
    "end": "2447680"
  },
  {
    "text": "but uh that was just to show you guys so um now you might be thinking can I do this against my own applications and the",
    "start": "2447680",
    "end": "2453920"
  },
  {
    "text": "answer is yes um I think we can do from here uh we're going to release a self assessment tool um now here's here's one",
    "start": "2453920",
    "end": "2462160"
  },
  {
    "text": "thing for you guys this tool is strictly for educational purposes um now now listen carefully I don't care",
    "start": "2462160",
    "end": "2469560"
  },
  {
    "text": "what you do with it but uh this is uh this is educational purposes only U now",
    "start": "2469560",
    "end": "2475040"
  },
  {
    "text": "with the tool which we're going to release this week is going to do is going to allow you to point it to a POC page that we provide and then you can",
    "start": "2475040",
    "end": "2480800"
  },
  {
    "text": "just go ahead and test breach you have a baseline you can adjust the parameters just like we did without local boxes you",
    "start": "2480800",
    "end": "2486040"
  },
  {
    "text": "test it against your own apps you test it against your internet you test it against your company you do self assessment you see if you're vulnerable",
    "start": "2486040",
    "end": "2491119"
  },
  {
    "text": "to breach if you are uh the bad news is that you have a problem the good news is",
    "start": "2491119",
    "end": "2496800"
  },
  {
    "text": "that we may have a solution for you um and Dr Harris is going to tell you about",
    "start": "2496800",
    "end": "2502079"
  },
  {
    "start": "2499000",
    "end": "2499000"
  },
  {
    "text": "Solutions thank okay so um how do we mitigate this",
    "start": "2502079",
    "end": "2509200"
  },
  {
    "text": "so I'm sure that probably 90% or more of you are thinking what you should do is well just hide the length of the thing",
    "start": "2509200",
    "end": "2515000"
  },
  {
    "text": "right add a random comment at the end of or the beginning of your page and uh just try to obscure the length that way",
    "start": "2515000",
    "end": "2521119"
  },
  {
    "text": "um that doesn't really work and the reason for that is you're still leaking information right you're forcing the",
    "start": "2521119",
    "end": "2527200"
  },
  {
    "text": "attacker to make more requests and measure more responses but the bias will still be there to the correct guess on",
    "start": "2527200",
    "end": "2533079"
  },
  {
    "text": "average the correct guess will yield the smaller response so it's a small thorn",
    "start": "2533079",
    "end": "2538240"
  },
  {
    "text": "in the attacker side but it definitely does not actually close the side channel so what else might you do well",
    "start": "2538240",
    "end": "2545680"
  },
  {
    "text": "instead of having uh the secret be the same for every response depending on the context and and what the Secret's",
    "start": "2545680",
    "end": "2550960"
  },
  {
    "text": "actually for you might be able to have the secret change every single time um that defeats us because we rely on the",
    "start": "2550960",
    "end": "2556960"
  },
  {
    "text": "secret actually being the same across you know this thousand or so uh",
    "start": "2556960",
    "end": "2563400"
  },
  {
    "text": "requests maybe for some reason though whatever the secret is that you're trying to protect you can't have it",
    "start": "2563599",
    "end": "2569200"
  },
  {
    "text": "change per response so instead what you might be able to do is have a random",
    "start": "2569200",
    "end": "2574240"
  },
  {
    "text": "mask which is generated for each response and use that to essentially just XR out against the secret put the",
    "start": "2574240",
    "end": "2580480"
  },
  {
    "text": "mask right next to the secret the exort secret and then send that down to the client um the reason this defeats us is",
    "start": "2580480",
    "end": "2587200"
  },
  {
    "text": "because while the Secret's actually itself the same it's being presented in the page in a different way every time",
    "start": "2587200",
    "end": "2592720"
  },
  {
    "text": "which means that we can't uh we can't proceed okay um another mitigation",
    "start": "2592720",
    "end": "2599119"
  },
  {
    "text": "separate Secrets From Any user input so instead of having the uh the attacker controled payload that that request",
    "start": "2599119",
    "end": "2605640"
  },
  {
    "text": "parameter be in the same comess impression context as the target secret have them come in separate",
    "start": "2605640",
    "end": "2612119"
  },
  {
    "text": "responses um so one thing that we actually rely on for this attack to work is we are forging requests on behalf of",
    "start": "2612480",
    "end": "2619400"
  },
  {
    "text": "the victim so you might be able to mitigate this by Cerf protecting any vulnerable Pages it gets a little weird",
    "start": "2619400",
    "end": "2626200"
  },
  {
    "text": "when the target Secrets A Cerf token but you know sees surf tokens aren't the only possible uh targets",
    "start": "2626200",
    "end": "2632079"
  },
  {
    "text": "here now so we don't have to make a huge number of requests like 100,000 or",
    "start": "2632079",
    "end": "2637240"
  },
  {
    "text": "something but we are making you know at least a thousand or so requests uh against a web application in about a",
    "start": "2637240",
    "end": "2642400"
  },
  {
    "text": "minute um that is faster than any human would use a web app so one potential",
    "start": "2642400",
    "end": "2647640"
  },
  {
    "text": "mitigation is to throttle users and monitor this sort of traffic and maybe combine it with some of the other mitigations that we mentioned and",
    "start": "2647640",
    "end": "2654520"
  },
  {
    "text": "finally the only one that really works 100% of the time is just turn off compression on responses um you might",
    "start": "2654520",
    "end": "2660280"
  },
  {
    "text": "have some other problems when you do that but that will I guarantee you completely defeat this attack",
    "start": "2660280",
    "end": "2667400"
  },
  {
    "start": "2667000",
    "end": "2667000"
  },
  {
    "text": "it will make your user experience team very unhappy as well so let's talk a little bit about",
    "start": "2667880",
    "end": "2674280"
  },
  {
    "text": "future work so the first thing that we we had so many roadblocks that we hit and we were trying to do a lot of things",
    "start": "2674280",
    "end": "2679920"
  },
  {
    "text": "to get our our percentages of success Higher and Higher and we ended up getting at 95% success rate so at least",
    "start": "2679920",
    "end": "2686240"
  },
  {
    "text": "at the page that we tested obviously different pages will defer depending on a lot of those conditions that we had",
    "start": "2686240",
    "end": "2691359"
  },
  {
    "text": "but that might not be perfect we might want to get 100% so future work to would",
    "start": "2691359",
    "end": "2697000"
  },
  {
    "text": "would be to really analyze a little bit better zip deflate understand a little bit better those two components Hoffman",
    "start": "2697000",
    "end": "2702119"
  },
  {
    "text": "coding and El 77 and understand how can we really maximize and get our solution",
    "start": "2702119",
    "end": "2707520"
  },
  {
    "text": "perfect the second thing um this this attack breaches really nothing to do",
    "start": "2707520",
    "end": "2713520"
  },
  {
    "text": "with htps so it begs the question what else what else can we breach what other protocols what other systems what other",
    "start": "2713520",
    "end": "2719920"
  },
  {
    "text": "encryption systems use compression underneath the hood that we can try to attack uh we uh",
    "start": "2719920",
    "end": "2727960"
  },
  {
    "text": "stay tuned for the next breach we we uh we intend to be back we have actually another uh breach we're not ready to",
    "start": "2727960",
    "end": "2733960"
  },
  {
    "text": "disclose it we want to let the companies uh do their thing first but uh we'll be",
    "start": "2733960",
    "end": "2739200"
  },
  {
    "text": "back that's right if you want more we have agents standby in locations",
    "start": "2739200",
    "end": "2745240"
  },
  {
    "text": "worldwide uh to answer your questions uh you can just go to break.com uh effectively now it it will have the POC",
    "start": "2745240",
    "end": "2754040"
  },
  {
    "text": "tool by the end of the week it does have already the paper which um we have explained with much more depth the whole",
    "start": "2754040",
    "end": "2760480"
  },
  {
    "text": "attack if you're curious and want to learn more go to breach attack.com and also it has this presentation that",
    "start": "2760480",
    "end": "2766040"
  },
  {
    "text": "you're seeing here so definitely go check it out so with that we would like",
    "start": "2766040",
    "end": "2771200"
  },
  {
    "text": "to thank you everybody for being here today you guys are awesome thank",
    "start": "2771200",
    "end": "2776440"
  },
  {
    "text": "you and of course we will open the floor for questions so uh anything you want to",
    "start": "2785319",
    "end": "2790599"
  },
  {
    "text": "ask us we will be here and please do count your badges and the way out if you like or talk so we can come",
    "start": "2790599",
    "end": "2797720"
  },
  {
    "text": "back with more breach how are we doing the question yes question as a possible mitigation",
    "start": "2797720",
    "end": "2805559"
  },
  {
    "text": "strategy not notle back",
    "start": "2805559",
    "end": "2811079"
  },
  {
    "text": "error it's a possible mitigation not reflecting back error you want to answer that so Tech really has nothing to do",
    "start": "2813359",
    "end": "2818720"
  },
  {
    "text": "with error page it's just in this specific case we found a page that reflected the secret in error page we just need a page that reflects the user",
    "start": "2818720",
    "end": "2825480"
  },
  {
    "text": "guess and a secret in this case it was error page it doesn't need to",
    "start": "2825480",
    "end": "2830240"
  },
  {
    "text": "be right so so any real web app will probably have a lot of places where it will reflect you take inputs and your",
    "start": "2833920",
    "end": "2840680"
  },
  {
    "text": "respon yeah but yes to answer your question if you can my respon",
    "start": "2840680",
    "end": "2847440"
  },
  {
    "text": "can you repeat that can you repeat the question well if for example the input",
    "start": "2849760",
    "end": "2855040"
  },
  {
    "text": "that the user is providing is everything that I need to return I'm encoding their",
    "start": "2855040",
    "end": "2861280"
  },
  {
    "text": "their input as something else so it really depends on where you're reflecting it back and how you're encoding it that's true that's why we",
    "start": "2861280",
    "end": "2866640"
  },
  {
    "text": "had one of the limitations was if your secret is within kind of like that form with the quotes around it and you're not",
    "start": "2866640",
    "end": "2873119"
  },
  {
    "text": "going to let the reflected user input onto the page without encoding then that will defeat the yes but in this case in",
    "start": "2873119",
    "end": "2879960"
  },
  {
    "text": "this specific case what we had is a log off link and that log off link had a URL with the reflective parameters without",
    "start": "2879960",
    "end": "2886599"
  },
  {
    "text": "anything so we didn't need actually the quote in this case because the secret was not away from our bootstrap our",
    "start": "2886599",
    "end": "2894000"
  },
  {
    "text": "bootstrap was Canary equals right and we didn't need a quote in that case y let not a question I have an idea for",
    "start": "2894000",
    "end": "2901319"
  },
  {
    "text": "get okay and then there is uh try a whole bunch of guesses if one request",
    "start": "2901319",
    "end": "2907760"
  },
  {
    "text": "try a whole bunch of guesses we experimented with that uh it was not as reliable as we wanted but uh that",
    "start": "2907760",
    "end": "2913319"
  },
  {
    "text": "absolutely can optimize it and get us you know we have 40 seconds we can probably do better than that we actually we actually wanted to try that and we",
    "start": "2913319",
    "end": "2919319"
  },
  {
    "text": "were thinking about some really interesting ways that the basic problem with that is that then you get noise in your responses and you don't know which guess is which responses with which",
    "start": "2919319",
    "end": "2926040"
  },
  {
    "text": "guest bch is possible yes but you could potentially try to do kind of like a multiplexing so you can kind of like",
    "start": "2926040",
    "end": "2931440"
  },
  {
    "text": "offset and have groups of channels and every channel is with the offset of let's say 100 bytes and then you can",
    "start": "2931440",
    "end": "2936839"
  },
  {
    "text": "tried to do in parallel you can have 100 guesses and if the response is smaller",
    "start": "2936839",
    "end": "2943280"
  },
  {
    "text": "than you expected then figure out which of those",
    "start": "2943280",
    "end": "2948160"
  },
  {
    "text": "right yeah should we uh all right next question you want to you want to come up",
    "start": "2948319",
    "end": "2954079"
  },
  {
    "text": "here or no just several of your screenshots you had showed the 12 key is",
    "start": "2954079",
    "end": "2960480"
  },
  {
    "text": "your attack dependent on that at all no the attacker does not depend in 120 that was just to show that it was perfectly a",
    "start": "2960480",
    "end": "2966400"
  },
  {
    "text": "cell with do not tamper with the channel so more questions can you say that loud so everyone hears right yeah mitigation",
    "start": "2966400",
    "end": "2972880"
  },
  {
    "text": "to reject requests that have a canary that is incorrect correct is it a valid",
    "start": "2972880",
    "end": "2978799"
  },
  {
    "text": "mitigation to reject requests that have the secret you speaking to M yeah so are are you saying you're",
    "start": "2978799",
    "end": "2987680"
  },
  {
    "text": "going to try and figure out that we're guessing the secret and just throw those way well I guess you would have to build an intelligence to your application to",
    "start": "2987680",
    "end": "2994440"
  },
  {
    "text": "know when we're trying to guess the secret and then throw the away that can get complicated given like seizure tokens are kind of a sexy thing to",
    "start": "2994440",
    "end": "3000920"
  },
  {
    "text": "attack right but we could go after other stuff too so you'd have to somehow anticipate every single possible thing",
    "start": "3000920",
    "end": "3006000"
  },
  {
    "text": "you want to protect and that's consider a secret within the the web page in this case",
    "start": "3006000",
    "end": "3011920"
  },
  {
    "text": "canals your is incorrect but yeah that is pretty hard to do though because you might have social security numbers you",
    "start": "3011920",
    "end": "3017640"
  },
  {
    "text": "might have cell phones uh you cannot always you know and you might have a user data you don't know it's a secret",
    "start": "3017640",
    "end": "3023319"
  },
  {
    "text": "so yeah and we'll be here for a while later but let's get more questions just so we can get some more people uh",
    "start": "3023319",
    "end": "3029319"
  },
  {
    "text": "question I'll get to you in a second I I think I missed um you you separated the",
    "start": "3029319",
    "end": "3035599"
  },
  {
    "text": "gas with the padding to avoid the H did you also try um poisoning that by making",
    "start": "3035599",
    "end": "3043280"
  },
  {
    "text": "characters outside of your your target alphabet more common than everything else y you want to rephrase",
    "start": "3043280",
    "end": "3049880"
  },
  {
    "text": "that question and answer understand what I yeah I understand basically what you're trying to do is try to balance",
    "start": "3049880",
    "end": "3054960"
  },
  {
    "text": "out so what he was asking is can we potentially try to inject a bunch of characters with very high frequency that",
    "start": "3054960",
    "end": "3060400"
  },
  {
    "text": "we know that are not in the secret to try to balance out the secrets so the secret part of the alphabet will be nice",
    "start": "3060400",
    "end": "3065839"
  },
  {
    "text": "on the bottom of the hofman tree so that way they're kind of like all on the low weight and they won't confuse the Oracle I think that's a great idea uh I think I",
    "start": "3065839",
    "end": "3072520"
  },
  {
    "text": "did experiment with it a little bit uh but we didn't end up showing in this PC I think your the padding is probably",
    "start": "3072520",
    "end": "3078720"
  },
  {
    "text": "easier but it's a it's a great idea it's there's room for plenty of optimizations we just did what we could to get at a",
    "start": "3078720",
    "end": "3085559"
  },
  {
    "text": "95% FL reliability and all right more questions guys so random noise clearly",
    "start": "3085559",
    "end": "3090799"
  },
  {
    "text": "doesn't work in the L does random noise work does the deterministic noise in for",
    "start": "3090799",
    "end": "3098920"
  },
  {
    "text": "that's a good question so so what he's asking is can we create some sort of deterministic noise that will allow us",
    "start": "3098920",
    "end": "3104280"
  },
  {
    "text": "to create a repeated pattern but unknown pattern for the for the potential for the attacker and basically not allowing",
    "start": "3104280",
    "end": "3109839"
  },
  {
    "text": "you to to guess the characters we actually had someone suggest something very interesting very similar to that maybe exactly that which was basically",
    "start": "3109839",
    "end": "3116599"
  },
  {
    "text": "try to hmac with a key the entire the entire input not just the paramet the entire response basically and therefore",
    "start": "3116599",
    "end": "3122760"
  },
  {
    "text": "you have basically a deterministic response that and then you use that hmac result into some entry hash table that",
    "start": "3122760",
    "end": "3128359"
  },
  {
    "text": "will determine how much length padding to add to confuse the Oracle uh we have easy way around that or we think we have",
    "start": "3128359",
    "end": "3134200"
  },
  {
    "text": "an easy way around that is let's just try to create let's say a thousand random strings and add that to every",
    "start": "3134200",
    "end": "3141079"
  },
  {
    "text": "guess and then you go back to averaging right so then basically every question you want to guess a let's add those you average out and you're back to to square",
    "start": "3141079",
    "end": "3146920"
  },
  {
    "text": "zero so bottom line Dynamic Pages do not help you averaging as possible but it makes us slower but not slower than it's",
    "start": "3146920",
    "end": "3153400"
  },
  {
    "text": "in the realm of the invisible okay more",
    "start": "3153400",
    "end": "3159359"
  },
  {
    "text": "questions it's um safe to say that well I can get like CES tokens out of this",
    "start": "3159359",
    "end": "3165440"
  },
  {
    "text": "type sort of thing for the response body this isn't going to actually help me perform any sort of session high or",
    "start": "3165440",
    "end": "3171520"
  },
  {
    "text": "that's beend have already turned off let me ask answer that",
    "start": "3171520",
    "end": "3177440"
  },
  {
    "text": "the question is you know session idas are safe and the answer is for the most part but C serve you know it's helpful",
    "start": "3177440",
    "end": "3186319"
  },
  {
    "text": "because you can do anything you can do with a session because you have the C token however there's some financial institutions and there's pages that have",
    "start": "3186319",
    "end": "3192920"
  },
  {
    "text": "Legacy Frameworks not necessarily the developers fall but they have Legacy Frameworks that will register the",
    "start": "3192920",
    "end": "3198200"
  },
  {
    "text": "session ID on the body maybe because they send it to a partner maybe because they have an KN frame maybe because they",
    "start": "3198200",
    "end": "3203319"
  },
  {
    "text": "they just do it so it's not unheard of to see J session IDs or PHP session IDs",
    "start": "3203319",
    "end": "3208520"
  },
  {
    "text": "on the body it's not a good practice as you point out but if it's in the body we can get it uh but yes the request and",
    "start": "3208520",
    "end": "3215000"
  },
  {
    "text": "the actual response headers are not uh compressed just the um just the actual",
    "start": "3215000",
    "end": "3221359"
  },
  {
    "text": "body let me ask let me add just one point on that I think uh one place where it's very common to see session ad is actually in the response assuming you",
    "start": "3221359",
    "end": "3227240"
  },
  {
    "text": "have a good application that doesn't otherwise put it in uh you might see it a lot in third party Integrations where you have one domain trying to somehow",
    "start": "3227240",
    "end": "3233480"
  },
  {
    "text": "connect another domain and tie the authentication between the two you might see over their sessions and their",
    "start": "3233480",
    "end": "3239558"
  },
  {
    "text": "response yeah oath oath is it could be very interesting especially if you're kind of like Auto integrating with oath",
    "start": "3242359",
    "end": "3247480"
  },
  {
    "text": "that you're sending the key to them or something yeah yeah all right we got a couple more",
    "start": "3247480",
    "end": "3252640"
  },
  {
    "text": "minutes for questions so if anyone has questions or wasse we'll just go down and talk to you guys any any more",
    "start": "3252640",
    "end": "3257680"
  },
  {
    "text": "questions anyone would like to ask yes is there a way you can pull off this",
    "start": "3257680",
    "end": "3263520"
  },
  {
    "text": "attack without getting the victim to load an attack page and instead the vitim load attack images yes uh we have",
    "start": "3263520",
    "end": "3271599"
  },
  {
    "text": "not so the question is is there a way to do the attack without the victim going to the attacker page uh you know we we",
    "start": "3271599",
    "end": "3278520"
  },
  {
    "text": "are experimenting with it because we really run out of time but uh I have the theory that I I'm going to try to prove",
    "start": "3278520",
    "end": "3284359"
  },
  {
    "text": "in the next few weeks I have the theory that any email client would be susceptible to this attack namely um",
    "start": "3284359",
    "end": "3290280"
  },
  {
    "text": "just ways to make Outlook render images automatically but more importantly uh Safari mail renders images automatically",
    "start": "3290280",
    "end": "3297880"
  },
  {
    "text": "by default uh so if you can issue the request that goes to the attacker Comm and control center the attor basically",
    "start": "3297880",
    "end": "3305200"
  },
  {
    "text": "redirects back to the Target side with a three cheat redirect and then you measure the traffic and then you go into the next image and so long you have",
    "start": "3305200",
    "end": "3311559"
  },
  {
    "text": "synchronicity which is something that we have with uh with JavaScript but I think if you have synchronicity which means",
    "start": "3311559",
    "end": "3316839"
  },
  {
    "text": "only one request at a time so we can actually measure them and not get them you know all gar garbage and mixed up",
    "start": "3316839",
    "end": "3323799"
  },
  {
    "text": "you can you can I think it's possible to mail client uh which would be pretty cool we just honestly haven't done it",
    "start": "3323799",
    "end": "3329880"
  },
  {
    "text": "yet but I I think it's there's nothing technically that would stop that even if you're not limited one at a time you can",
    "start": "3329880",
    "end": "3335440"
  },
  {
    "text": "have seven stall and then after that it yeah us are absolutely correct you just need to have like 1 th images preloaded",
    "start": "3335440",
    "end": "3342119"
  },
  {
    "text": "in the uh in the mail and then one after another starts loading and you coordinate it redirects",
    "start": "3342119",
    "end": "3348720"
  },
  {
    "text": "um okay so yeah y so if there's no more we didn't say that questions we'll uh",
    "start": "3348720",
    "end": "3355760"
  },
  {
    "text": "we'll be here if you guys want to talk to us so thank you again",
    "start": "3355760",
    "end": "3361160"
  }
]