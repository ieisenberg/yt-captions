[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "hello everybody I'm so delighted to be here as a speaker and welcome to my talk my",
    "start": "2280",
    "end": "10800"
  },
  {
    "text": "name is maybe you can call me yeah Peter is my",
    "start": "10800",
    "end": "17039"
  },
  {
    "text": "collaborator but he can arrive here because of his family stuffs",
    "start": "17039",
    "end": "23100"
  },
  {
    "text": "okay well let's begin our talk",
    "start": "23100",
    "end": "28699"
  },
  {
    "text": "this is a agenda you can see so",
    "start": "39600",
    "end": "46200"
  },
  {
    "text": "we can start with the abuse connection resource",
    "start": "46200",
    "end": "51600"
  },
  {
    "text": "the first one",
    "start": "51600",
    "end": "54378"
  },
  {
    "start": "57000",
    "end": "136000"
  },
  {
    "text": "yeah first of all that's real some basket Concepts about jdbc and gndi as we know",
    "start": "57360",
    "end": "65280"
  },
  {
    "text": "jdbc is a crucial component of Java application when the client endpoint",
    "start": "65280",
    "end": "71100"
  },
  {
    "text": "connecting the database gndi is an application",
    "start": "71100",
    "end": "77040"
  },
  {
    "text": "programming interface that provides naming and directory",
    "start": "77040",
    "end": "82220"
  },
  {
    "text": "functionality to Applications yeah as you see",
    "start": "82220",
    "end": "90299"
  },
  {
    "text": "this slide illustrates how to leverage gen di to",
    "start": "90299",
    "end": "95820"
  },
  {
    "text": "connect jdbc data source the client tries to communicate with the",
    "start": "95820",
    "end": "101579"
  },
  {
    "text": "gender tree as you see to connect jdbc this source",
    "start": "101579",
    "end": "108180"
  },
  {
    "text": "and the decline tries to communicate with the jdbc3 and the establish the",
    "start": "108180",
    "end": "116159"
  },
  {
    "text": "session in the connect connection pool finally it connects",
    "start": "116159",
    "end": "122100"
  },
  {
    "text": "the database with the specific jdbc driver",
    "start": "122100",
    "end": "128899"
  },
  {
    "text": "that's what yeah therefore we analyze plenty of jdbc driver Source codes we",
    "start": "134780",
    "end": "142319"
  },
  {
    "start": "136000",
    "end": "180000"
  },
  {
    "text": "expectedly find some juicy gdbc properties which",
    "start": "142319",
    "end": "147540"
  },
  {
    "text": "can be utilized to create a g g and Di connection",
    "start": "147540",
    "end": "153239"
  },
  {
    "text": "yeah in this slide we find a group of properties related to jdbc Connection in",
    "start": "153239",
    "end": "161400"
  },
  {
    "text": "information driver you know it belongs to IBM I'm sure you are well",
    "start": "161400",
    "end": "169560"
  },
  {
    "text": "it seems like a remote execution involved gndi injection",
    "start": "169560",
    "end": "177019"
  },
  {
    "text": "okay we try to construct the way available POC but it does not work",
    "start": "180599",
    "end": "188940"
  },
  {
    "text": "generalizes",
    "start": "188940",
    "end": "191780"
  },
  {
    "start": "195000",
    "end": "300000"
  },
  {
    "text": "then we analyze the source code back and forth",
    "start": "195720",
    "end": "201439"
  },
  {
    "text": "function in the Highlight sorry in the Highlight area you can see the search",
    "start": "201720",
    "end": "209640"
  },
  {
    "text": "method shows my attention while debugging the code I tried to",
    "start": "209640",
    "end": "216420"
  },
  {
    "text": "such a l d a p code",
    "start": "216420",
    "end": "221640"
  },
  {
    "text": "this you know remote code bits",
    "start": "221640",
    "end": "226700"
  },
  {
    "text": "next one we step into the method p on the store",
    "start": "227879",
    "end": "235620"
  },
  {
    "text": "on this score search it deals with variable",
    "start": "235620",
    "end": "241560"
  },
  {
    "text": "which input from such method in the Highlight area",
    "start": "241560",
    "end": "246659"
  },
  {
    "text": "you can see and then next one",
    "start": "246659",
    "end": "252299"
  },
  {
    "text": "we keep on stepping into the P honest score result intermediate method",
    "start": "252299",
    "end": "260760"
  },
  {
    "text": "as you see it deals with the arrival switch input from P underscore search",
    "start": "260760",
    "end": "267540"
  },
  {
    "text": "method",
    "start": "267540",
    "end": "270139"
  },
  {
    "text": "then I stepped into the C underscore without the intermediate unstar SS",
    "start": "280440",
    "end": "287580"
  },
  {
    "text": "method 8 handled with the variables which input",
    "start": "287580",
    "end": "293400"
  },
  {
    "text": "from P undersburg resulted intermediate method",
    "start": "293400",
    "end": "299520"
  },
  {
    "text": "as we'll see so at last we can say the say understood",
    "start": "299520",
    "end": "306060"
  },
  {
    "text": "lookup there with the variables which input from the result in the media",
    "start": "306060",
    "end": "312240"
  },
  {
    "text": "an SS method",
    "start": "312240",
    "end": "315500"
  },
  {
    "text": "so consequently yeah the invoking relationship",
    "start": "319199",
    "end": "325460"
  },
  {
    "text": "simply looks like this yeah the search method you can say invokes the P",
    "start": "325460",
    "end": "333240"
  },
  {
    "text": "underscore search method dancer P underscore search",
    "start": "333240",
    "end": "339300"
  },
  {
    "text": "the inbox that a peer result intermediate method and then it invokes",
    "start": "339300",
    "end": "346160"
  },
  {
    "text": "C underscore lookup method finally it's a change di lookup can be triggered",
    "start": "346160",
    "end": "353160"
  },
  {
    "text": "as you see yeah this is a stack twist",
    "start": "353160",
    "end": "359820"
  },
  {
    "text": "in green color",
    "start": "359820",
    "end": "363500"
  },
  {
    "text": "I'm sorry yeah according to the above analysis we",
    "start": "366720",
    "end": "372660"
  },
  {
    "text": "can construct a available POC and Trigger the icing involving gndi",
    "start": "372660",
    "end": "378860"
  },
  {
    "text": "injections successfully I did not disclose the",
    "start": "378860",
    "end": "384660"
  },
  {
    "text": "detail about the POC yeah",
    "start": "384660",
    "end": "390180"
  },
  {
    "text": "the next section in this section I want to talk about another attack scenario",
    "start": "390180",
    "end": "397080"
  },
  {
    "text": "writing",
    "start": "397080",
    "end": "400080"
  },
  {
    "text": "yeah I have analyzed a lot of jdbc drivers",
    "start": "403380",
    "end": "409440"
  },
  {
    "text": "yeah substantial jdbc drivers support writing the tree log into a file by",
    "start": "409440",
    "end": "417360"
  },
  {
    "text": "jtb's connect connecting property the five extensions of some genius",
    "start": "417360",
    "end": "424319"
  },
  {
    "text": "driver Log 5 can be customized like uh you know",
    "start": "424319",
    "end": "429840"
  },
  {
    "text": "dot JSP as a webshare for example",
    "start": "429840",
    "end": "436100"
  },
  {
    "text": "the IBM also IBM jdbc driver it has three property for",
    "start": "436160",
    "end": "444000"
  },
  {
    "text": "this Chase log name in the trees fire Trace level and Trace via",
    "start": "444000",
    "end": "451319"
  },
  {
    "text": "append you know with the trees fire property the user can specify the name",
    "start": "451319",
    "end": "457380"
  },
  {
    "text": "of a fight into which IBM data server driver for jdbc and circulatory",
    "start": "457380",
    "end": "465599"
  },
  {
    "text": "write Trace information",
    "start": "465599",
    "end": "469160"
  },
  {
    "text": "so so we can easily write the malicious",
    "start": "471539",
    "end": "477539"
  },
  {
    "text": "code in JSP for remote code execution as",
    "start": "477539",
    "end": "483479"
  },
  {
    "text": "you know however in a relative",
    "start": "483479",
    "end": "488699"
  },
  {
    "text": "scenario like you know leaving a web shell in the",
    "start": "488699",
    "end": "494580"
  },
  {
    "text": "web logic server and not practical because of it the the illegal has",
    "start": "494580",
    "end": "501599"
  },
  {
    "text": "characters yeah just like the below",
    "start": "501599",
    "end": "508080"
  },
  {
    "text": "in Escape pattern actually it is a portion of GSP tag",
    "start": "508080",
    "end": "516260"
  },
  {
    "text": "well I have to invade the Restriction as you",
    "start": "517320",
    "end": "522419"
  },
  {
    "text": "know yeah I find only the surveillance version 2 .3 you know earlier than 2.3 then the",
    "start": "522419",
    "end": "533880"
  },
  {
    "text": "El expression are disabled by default",
    "start": "533880",
    "end": "539540"
  },
  {
    "text": "fortunately the web launch server 14 supports the servlet for",
    "start": "539540",
    "end": "547440"
  },
  {
    "text": "just like this the the official document",
    "start": "547440",
    "end": "553680"
  },
  {
    "text": "has described so I can use the El expression to invade",
    "start": "553680",
    "end": "560880"
  },
  {
    "text": "the UIL decoder expection",
    "start": "560880",
    "end": "566880"
  },
  {
    "text": "just like this that I constructed a complicated Vector",
    "start": "568040",
    "end": "578040"
  },
  {
    "text": "for store the log logging console username and password as you know by El",
    "start": "578040",
    "end": "585180"
  },
  {
    "text": "expression just a backdoor web shell in weblogic",
    "start": "585180",
    "end": "590279"
  },
  {
    "text": "server it's very very long when we go to the web shell URL the El",
    "start": "590279",
    "end": "598860"
  },
  {
    "text": "expression has been executed the login console username and password",
    "start": "598860",
    "end": "604560"
  },
  {
    "text": "are stored just like this is my username and password",
    "start": "604560",
    "end": "611839"
  },
  {
    "start": "607000",
    "end": "771000"
  },
  {
    "text": "but how to inject a discoverable memory web shell into the",
    "start": "613820",
    "end": "622320"
  },
  {
    "text": "weblogic server well by the way I wanna I wanna say the",
    "start": "622320",
    "end": "628200"
  },
  {
    "text": "web the memory web show differs from the traditional web shell it's a kind of",
    "start": "628200",
    "end": "633980"
  },
  {
    "text": "fireless that dots as you know and they only exist in memory instead of disk",
    "start": "633980",
    "end": "643940"
  },
  {
    "text": "yeah actually the memory Rapture has the diversity like Asian type assembly type",
    "start": "649380",
    "end": "657060"
  },
  {
    "text": "A filter type and a listener type in our scenario you know we can construct a",
    "start": "657060",
    "end": "663959"
  },
  {
    "text": "field type web shell The crucial process is how to inject the Malaysia class into",
    "start": "663959",
    "end": "670440"
  },
  {
    "text": "the web logic server dynamically As We Know",
    "start": "670440",
    "end": "676760"
  },
  {
    "text": "yeah let's take a look at the ideal processes",
    "start": "676800",
    "end": "682620"
  },
  {
    "text": "as follow just like this yeah",
    "start": "682620",
    "end": "687980"
  },
  {
    "text": "firstly we need to acquire the request object of weblogic server by carrying",
    "start": "689300",
    "end": "695640"
  },
  {
    "text": "this red and secondly we need to utilize the Malaysia class in",
    "start": "695640",
    "end": "702240"
  },
  {
    "text": "to implement new as we know filter register",
    "start": "702240",
    "end": "708440"
  },
  {
    "text": "certainly we need to inject the byte code of Malaysia class with pcel",
    "start": "708440",
    "end": "716819"
  },
  {
    "text": "incidentally the BCL is a short for the byte code engineering library and it is",
    "start": "718140",
    "end": "726120"
  },
  {
    "text": "used to analyze screw and create and manipulate",
    "start": "726120",
    "end": "731640"
  },
  {
    "text": "finally Java class file",
    "start": "731640",
    "end": "735920"
  },
  {
    "text": "yeah then write a class name the web logic mem file just like this it is used to",
    "start": "738120",
    "end": "745079"
  },
  {
    "text": "acquire the request object of weblogic server with current thread and that I",
    "start": "745079",
    "end": "751260"
  },
  {
    "text": "write another class here to convert jump class to",
    "start": "751260",
    "end": "758160"
  },
  {
    "text": "bcel code just like this it's a",
    "start": "758160",
    "end": "766680"
  },
  {
    "text": "BCL Transformer yeah",
    "start": "766680",
    "end": "771899"
  },
  {
    "start": "771000",
    "end": "794000"
  },
  {
    "text": "it's really really long you know as you see",
    "start": "771899",
    "end": "777139"
  },
  {
    "text": "when we go to the web show URL again the malicious code is executed as well now",
    "start": "778560",
    "end": "784920"
  },
  {
    "text": "we can have a backdoor in memory successfully and arbitrary command can",
    "start": "784920",
    "end": "791100"
  },
  {
    "text": "be excluded as as follow just like this you know",
    "start": "791100",
    "end": "798440"
  },
  {
    "start": "794000",
    "end": "817000"
  },
  {
    "text": "the memory show is here",
    "start": "801600",
    "end": "806180"
  },
  {
    "text": "we can exclude any command",
    "start": "808740",
    "end": "814040"
  },
  {
    "text": "okay let's go Section 3 you know is this section",
    "start": "814320",
    "end": "821639"
  },
  {
    "start": "817000",
    "end": "830000"
  },
  {
    "text": "I will talk about the lexical syntax",
    "start": "821639",
    "end": "827339"
  },
  {
    "text": "compatibility just like this",
    "start": "827339",
    "end": "833130"
  },
  {
    "start": "830000",
    "end": "981000"
  },
  {
    "text": "[Music] yeah as you know in my circle database a",
    "start": "833130",
    "end": "840300"
  },
  {
    "text": "blob is a binary large object that can be held a reliable amount of data and",
    "start": "840300",
    "end": "850019"
  },
  {
    "text": "a blobber values are treated as a binary strings",
    "start": "850019",
    "end": "855060"
  },
  {
    "text": "actually byte stream yeah my Mexico JD busy driver",
    "start": "855060",
    "end": "861240"
  },
  {
    "text": "uses pre does this prepare statement set blob",
    "start": "861240",
    "end": "866880"
  },
  {
    "text": "method so I review the code fragment I'll set",
    "start": "866880",
    "end": "875880"
  },
  {
    "text": "blob method set plot method tackles parameter index and",
    "start": "875880",
    "end": "883380"
  },
  {
    "text": "input stream as you'll see in the slide",
    "start": "883380",
    "end": "888720"
  },
  {
    "text": "here sorry yeah",
    "start": "888720",
    "end": "896000"
  },
  {
    "text": "foreign As We Know when we create a jdbc connection in",
    "start": "901500",
    "end": "907500"
  },
  {
    "text": "mySQL database we can set the calculated set like a utf-8 or utf-8 MB for",
    "start": "907500",
    "end": "916980"
  },
  {
    "text": "and gbk unfortunately gpk character set is",
    "start": "916980",
    "end": "924180"
  },
  {
    "text": "vulnerable yeah first of all let's look at",
    "start": "924180",
    "end": "929399"
  },
  {
    "text": "the two ascis of single coat and a backslash",
    "start": "929399",
    "end": "936500"
  },
  {
    "text": "yeah the seller method on my circle Genesis driver pans a single codes",
    "start": "940079",
    "end": "945779"
  },
  {
    "text": "around the blob data and it is keeps the single quotes and the backslash",
    "start": "945779",
    "end": "954839"
  },
  {
    "text": "so after processing the byte stream transferred like the illustration",
    "start": "954839",
    "end": "963860"
  },
  {
    "text": "as you see here so we create a malicious image and insert",
    "start": "964079",
    "end": "971820"
  },
  {
    "text": "into the table as the blob data yeah just like this",
    "start": "971820",
    "end": "979880"
  },
  {
    "text": "understand in my illustration",
    "start": "980160",
    "end": "985380"
  },
  {
    "text": "we can see I dropped the table successfully one is jdbc connection and",
    "start": "985380",
    "end": "991440"
  },
  {
    "text": "insert a malicious image",
    "start": "991440",
    "end": "995839"
  },
  {
    "text": "okay let's go search for let's go and talk about another scenario",
    "start": "1001160",
    "end": "1008420"
  },
  {
    "text": "our own chapter in the initialization class",
    "start": "1008420",
    "end": "1013880"
  },
  {
    "text": "like yeah okay when I review IBM genoves driver",
    "start": "1013880",
    "end": "1022399"
  },
  {
    "text": "code Source I've had a particular property named plugging class name",
    "start": "1022399",
    "end": "1029058"
  },
  {
    "text": "just like that which is not mentioned in official document",
    "start": "1029059",
    "end": "1036319"
  },
  {
    "text": "then I step into the source source code there is a Java bin with the gather you",
    "start": "1036319",
    "end": "1042260"
  },
  {
    "text": "know gather and Setter methods according to the code analysis your user can input",
    "start": "1042260",
    "end": "1049340"
  },
  {
    "text": "a Java class as a the property value without any verification",
    "start": "1049340",
    "end": "1056980"
  },
  {
    "text": "yeah however I find only uh no argument Constructor",
    "start": "1065840",
    "end": "1072500"
  },
  {
    "text": "in the job class can be risky I lastly it with a",
    "start": "1072500",
    "end": "1078919"
  },
  {
    "text": "an ideal Java class which leads the Malaysia class from the remote code base",
    "start": "1078919",
    "end": "1085760"
  },
  {
    "text": "and triggers remote code execution",
    "start": "1085760",
    "end": "1090340"
  },
  {
    "text": "just an ideal class not in real world scenario",
    "start": "1090980",
    "end": "1098059"
  },
  {
    "text": "so just like this",
    "start": "1098059",
    "end": "1102580"
  },
  {
    "text": "yeah when we establish the jdbc connection the ideal class will be",
    "start": "1105020",
    "end": "1111260"
  },
  {
    "text": "initialized well we need actually we need to find a",
    "start": "1111260",
    "end": "1118520"
  },
  {
    "text": "no argument Constructor in a practical job class so we came out",
    "start": "1118520",
    "end": "1125720"
  },
  {
    "text": "trying at this time I recorded the gni as you",
    "start": "1125720",
    "end": "1133820"
  },
  {
    "start": "1127000",
    "end": "1420000"
  },
  {
    "text": "know GI is short shortfall Java native interface it's a standard",
    "start": "1133820",
    "end": "1141020"
  },
  {
    "text": "standard programming interface for writing Java native methods and embedding the Java virtual machine into",
    "start": "1141020",
    "end": "1148640"
  },
  {
    "text": "native application yeah just like this",
    "start": "1148640",
    "end": "1156400"
  },
  {
    "text": "as you know system.load Library Master to revoke the libraries from a",
    "start": "1157820",
    "end": "1165200"
  },
  {
    "text": "various platforms yeah like a Mac OS windows or Linux",
    "start": "1165200",
    "end": "1171380"
  },
  {
    "text": "whatever so we can use some Dynamic analysis",
    "start": "1171380",
    "end": "1177740"
  },
  {
    "text": "technology like you know code clear or yeah in China Tabby to find the",
    "start": "1177740",
    "end": "1185740"
  },
  {
    "text": "satisfactory Java class we finally get the class",
    "start": "1185740",
    "end": "1190820"
  },
  {
    "text": "this one yeah unique system it can contains uh no",
    "start": "1190820",
    "end": "1200120"
  },
  {
    "text": "argument Constructor which leads a library named gaas underscore",
    "start": "1200120",
    "end": "1207020"
  },
  {
    "text": "your links yeah so we can hijack the Java Library",
    "start": "1207020",
    "end": "1216520"
  },
  {
    "text": "Unix actually in Windows platform there is a class named anti-system",
    "start": "1217120",
    "end": "1224780"
  },
  {
    "text": "maybe you know so",
    "start": "1224780",
    "end": "1230660"
  },
  {
    "text": "this is a demonstration of gender adapter for command excretion I replace",
    "start": "1230660",
    "end": "1236840"
  },
  {
    "text": "the original library with this that door Library",
    "start": "1236840",
    "end": "1242260"
  },
  {
    "text": "just like this I established the JDR connection again and",
    "start": "1243320",
    "end": "1249140"
  },
  {
    "text": "the remote code execution has been triggered successfully",
    "start": "1249140",
    "end": "1255280"
  },
  {
    "text": "yeah we also find that the same problem existing in other objectives driver we",
    "start": "1261500",
    "end": "1267320"
  },
  {
    "text": "find the parameter grandership provider in our analysis of Google Cloud",
    "start": "1267320",
    "end": "1275360"
  },
  {
    "text": "Spanish adbc driver yeah a deep deep dive into the source code",
    "start": "1275360",
    "end": "1281600"
  },
  {
    "text": "and the wayfinder class can be essentially here with a",
    "start": "1281600",
    "end": "1288440"
  },
  {
    "text": "any check",
    "start": "1288440",
    "end": "1291158"
  },
  {
    "text": "yeah just make it so you can leave the Hayden you know back door with it for",
    "start": "1295100",
    "end": "1303220"
  },
  {
    "text": "apt attack yeah next subject is about Apache",
    "start": "1303220",
    "end": "1311380"
  },
  {
    "text": "calcite avity card jdbc driver",
    "start": "1311380",
    "end": "1317000"
  },
  {
    "text": "actually we finally it during a pen test sorry",
    "start": "1317000",
    "end": "1324919"
  },
  {
    "text": "[Music] actually you will find in the during a fantastic test fantastic engagement for",
    "start": "1326840",
    "end": "1333860"
  },
  {
    "text": "you know data integration plan four we report",
    "start": "1333860",
    "end": "1340280"
  },
  {
    "text": "and it was assigned a CV number",
    "start": "1340280",
    "end": "1345400"
  },
  {
    "text": "okay the first layer we focus on the property HTTP kinda underscore implement the",
    "start": "1354980",
    "end": "1364100"
  },
  {
    "text": "class which implements HTTP class used to send HTTP requests from client to",
    "start": "1364100",
    "end": "1369500"
  },
  {
    "text": "server as you know so we create a jdbc connection with an ideal class as follow",
    "start": "1369500",
    "end": "1378159"
  },
  {
    "text": "sorry yeah deep into the code we can see the",
    "start": "1380120",
    "end": "1385520"
  },
  {
    "text": "class instantly it and there is a no invocation of arbitrary constructed with",
    "start": "1385520",
    "end": "1393860"
  },
  {
    "text": "URL argument due to unchecked server class",
    "start": "1393860",
    "end": "1400240"
  },
  {
    "text": "yeah so we construct the ideal class to prove it",
    "start": "1405320",
    "end": "1412059"
  },
  {
    "text": "yeah as you see the command has been executed",
    "start": "1413299",
    "end": "1420080"
  },
  {
    "start": "1420000",
    "end": "1531000"
  },
  {
    "text": "yeah we also need to find a practical Gadget in real world scenario as you",
    "start": "1420080",
    "end": "1426860"
  },
  {
    "text": "know so at that time we leverage Dynamic",
    "start": "1426860",
    "end": "1434960"
  },
  {
    "text": "analysis tools to look for you know the particular gadgets we scan the code base",
    "start": "1434960",
    "end": "1444080"
  },
  {
    "text": "for unchecked cars in property values actually we we write a customer Fork of",
    "start": "1444080",
    "end": "1452780"
  },
  {
    "text": "Gadget inspector to find a suitable exploitable",
    "start": "1452780",
    "end": "1457840"
  },
  {
    "text": "Constructors in common Library yeah and finally",
    "start": "1457840",
    "end": "1464240"
  },
  {
    "text": "I find a that we find a lot of",
    "start": "1464240",
    "end": "1469340"
  },
  {
    "text": "potential gadgets and verify them eventually this one the green one you",
    "start": "1469340",
    "end": "1475159"
  },
  {
    "text": "know I pick up it yeah we can see the code fragment",
    "start": "1475159",
    "end": "1483740"
  },
  {
    "text": "it's one argument construct and the argument is UIL attack",
    "start": "1483740",
    "end": "1490960"
  },
  {
    "text": "so we can make a sensitive information leakage in jdbc connection I think",
    "start": "1492380",
    "end": "1499760"
  },
  {
    "text": "exception with this gadget in this case I require the sensitive",
    "start": "1499760",
    "end": "1506120"
  },
  {
    "text": "information of ATC password",
    "start": "1506120",
    "end": "1509799"
  },
  {
    "text": "okay let's go next section I came on talking about",
    "start": "1518179",
    "end": "1524440"
  },
  {
    "text": "incorrect response disposal",
    "start": "1524440",
    "end": "1529658"
  },
  {
    "start": "1531000",
    "end": "1575000"
  },
  {
    "text": "yeah first first one is about the snowflake",
    "start": "1531200",
    "end": "1536299"
  },
  {
    "text": "JDS driver as you know snowflake yeah we can researching bugs in the area about",
    "start": "1536299",
    "end": "1544460"
  },
  {
    "text": "the browser based SSO integration with the jdbc drivers the idea that",
    "start": "1544460",
    "end": "1552039"
  },
  {
    "text": "the attacker can control the server and",
    "start": "1552039",
    "end": "1557659"
  },
  {
    "text": "the client can conjure the solar response and transcline the behavior",
    "start": "1557659",
    "end": "1563600"
  },
  {
    "text": "yeah it's similar to rug my circle server research as you know done several",
    "start": "1563600",
    "end": "1570740"
  },
  {
    "text": "years ago",
    "start": "1570740",
    "end": "1573220"
  },
  {
    "start": "1575000",
    "end": "1773000"
  },
  {
    "text": "yeah yeah let's review the code observe come come on injection to launch",
    "start": "1576919",
    "end": "1584600"
  },
  {
    "text": "browser yeah platforms specific commands realize this you can you can see runtime",
    "start": "1584600",
    "end": "1592299"
  },
  {
    "text": "dot e x e c is cute yeah actually this",
    "start": "1592299",
    "end": "1597559"
  },
  {
    "text": "type of filter will always have a risk of common injection",
    "start": "1597559",
    "end": "1603820"
  },
  {
    "text": "yeah and then we construct a fixer as follow",
    "start": "1606919",
    "end": "1612799"
  },
  {
    "text": "this one a fixed server",
    "start": "1612799",
    "end": "1616840"
  },
  {
    "text": "yeah that we set up a browser-based SSO",
    "start": "1617840",
    "end": "1622880"
  },
  {
    "text": "from external for auth you know jdc driver requests",
    "start": "1622880",
    "end": "1628460"
  },
  {
    "text": "the URL and pass Jason response yeah",
    "start": "1628460",
    "end": "1635000"
  },
  {
    "text": "pass the value of the data.sso URL method just format property",
    "start": "1635000",
    "end": "1641900"
  },
  {
    "text": "to as you know here runtime dot it's cute method as a second",
    "start": "1641900",
    "end": "1652039"
  },
  {
    "text": "parameter as you see the first pyramid is open on",
    "start": "1652039",
    "end": "1658220"
  },
  {
    "text": "Mac OS and remote code execution um Mac os2",
    "start": "1658220",
    "end": "1665860"
  },
  {
    "text": "yeah finally we make it yeah just like this",
    "start": "1669860",
    "end": "1675020"
  },
  {
    "text": "we fight we find it a report to snowflake",
    "start": "1675020",
    "end": "1680900"
  },
  {
    "text": "disclosure program program was great to work with the supportive of this talk",
    "start": "1680900",
    "end": "1687980"
  },
  {
    "text": "yeah thank you to the snake click team",
    "start": "1687980",
    "end": "1695919"
  },
  {
    "text": "yeah actually the only jdbc versus arrival here but also other",
    "start": "1698720",
    "end": "1706039"
  },
  {
    "text": "language has similar vulnerabilities in this area as you know nodejs.net",
    "start": "1706039",
    "end": "1714500"
  },
  {
    "text": "foreign okay this slide let's go Google cloud",
    "start": "1714520",
    "end": "1720200"
  },
  {
    "text": "has been a JD business driver for read SSI gcp of Auto delegated credential to",
    "start": "1720200",
    "end": "1727840"
  },
  {
    "text": "AWS exposed design floor in gcprs",
    "start": "1727840",
    "end": "1733159"
  },
  {
    "text": "library yeah in all language that we look at this design flaw can lead to",
    "start": "1733159",
    "end": "1741020"
  },
  {
    "text": "four read SSI by supplying a craft set you know other conditions",
    "start": "1741020",
    "end": "1750080"
  },
  {
    "text": "the parameter encoded credentials it allows users to sell their own Google",
    "start": "1750080",
    "end": "1758539"
  },
  {
    "text": "Cloud platform shoes in this you know base 6-4 encoded",
    "start": "1758539",
    "end": "1765860"
  },
  {
    "text": "Json through this undocumented property",
    "start": "1765860",
    "end": "1771100"
  },
  {
    "start": "1773000",
    "end": "1850000"
  },
  {
    "text": "yeah something else we need to know gcp Grand Shield Json is used for all of to gcp",
    "start": "1773240",
    "end": "1781100"
  },
  {
    "text": "yeah Json is the serialized by different implement implementations",
    "start": "1781100",
    "end": "1787580"
  },
  {
    "text": "we are targeting the you know from Jesse Messer is brought many",
    "start": "1787580",
    "end": "1794419"
  },
  {
    "text": "external grinder shoes in included AWS",
    "start": "1794419",
    "end": "1799520"
  },
  {
    "text": "the AWS implementation make makes several HTTP",
    "start": "1799520",
    "end": "1805340"
  },
  {
    "text": "request requests based on the provided configuration",
    "start": "1805340",
    "end": "1811700"
  },
  {
    "text": "so we constructed The Craft response as a Json format",
    "start": "1813380",
    "end": "1820760"
  },
  {
    "text": "just like this yeah we go go back to the source code",
    "start": "1820760",
    "end": "1828200"
  },
  {
    "text": "let's retrieve the resource tackles the credential Source UIL that",
    "start": "1828200",
    "end": "1835880"
  },
  {
    "text": "the Highlight area so you know the POC",
    "start": "1835880",
    "end": "1842600"
  },
  {
    "text": "just like this yeah",
    "start": "1842600",
    "end": "1849559"
  },
  {
    "text": "and then we acquire sensitive information of HTC",
    "start": "1849559",
    "end": "1855140"
  },
  {
    "start": "1850000",
    "end": "1869000"
  },
  {
    "text": "password we report it to Google we IP and get",
    "start": "1855140",
    "end": "1861580"
  },
  {
    "text": "uh five hundred dollars reward",
    "start": "1861580",
    "end": "1867398"
  },
  {
    "text": "okay the last one the last case is a teradata jdbc driver",
    "start": "1868820",
    "end": "1874820"
  },
  {
    "start": "1869000",
    "end": "1931000"
  },
  {
    "text": "as you know Terror data jdbc driver has an interesting",
    "start": "1874820",
    "end": "1880520"
  },
  {
    "text": "parameter browser yeah it's a leverage rages browser-based SSO why",
    "start": "1880520",
    "end": "1889820"
  },
  {
    "text": "teradata server configuration enabling open ID connect oigc",
    "start": "1890559",
    "end": "1898520"
  },
  {
    "text": "yep and the jdfc UIL parameter legit zipline oidc handling requires the",
    "start": "1898520",
    "end": "1908240"
  },
  {
    "text": "server to confirm that oidc is a configured and this allows the jdbc",
    "start": "1908240",
    "end": "1914779"
  },
  {
    "text": "driver to you use the browser based SSO code path",
    "start": "1914779",
    "end": "1921460"
  },
  {
    "text": "yeah uh adding Terror data server will oidc",
    "start": "1922220",
    "end": "1928520"
  },
  {
    "text": "is enabled actually so let's dive into the source code",
    "start": "1928520",
    "end": "1934940"
  },
  {
    "text": "here we can see the master which can execute the command yeah",
    "start": "1934940",
    "end": "1941200"
  },
  {
    "text": "runtime yeah better run time so",
    "start": "1941659",
    "end": "1947360"
  },
  {
    "text": "we create a fake data server in pattern which tells the client oh I see oidc has",
    "start": "1947360",
    "end": "1955220"
  },
  {
    "text": "been configured on the server these three sorry this tricks the client into",
    "start": "1955220",
    "end": "1962240"
  },
  {
    "text": "allowing the browser to exit property",
    "start": "1962240",
    "end": "1966880"
  },
  {
    "text": "yeah does not even require a working Terror data server to achieve ice on the",
    "start": "1968179",
    "end": "1975919"
  },
  {
    "text": "you know machine learning subjectivity kind similar to a rugging myself server",
    "start": "1975919",
    "end": "1982580"
  },
  {
    "text": "MySQL server logify login file explore from you know many",
    "start": "1982580",
    "end": "1988580"
  },
  {
    "text": "years ago here",
    "start": "1988580",
    "end": "1993679"
  },
  {
    "text": "we construct the the fake server with python it's like this",
    "start": "1993679",
    "end": "2001059"
  },
  {
    "text": "the processes like this jdbc client connects to the fake tarot",
    "start": "2001059",
    "end": "2008860"
  },
  {
    "text": "data server a fixed server tells client oidc is enamel yeah jdbc kind makes UI",
    "start": "2008860",
    "end": "2015940"
  },
  {
    "text": "air refers to oidc server is expecting Json document with with",
    "start": "2015940",
    "end": "2024399"
  },
  {
    "text": "open ID configuration format jdbc client",
    "start": "2024399",
    "end": "2030539"
  },
  {
    "text": "executes the command in browser property",
    "start": "2030539",
    "end": "2035398"
  },
  {
    "text": "yeah just like",
    "start": "2037179",
    "end": "2040620"
  },
  {
    "text": "okay [Music] the OS command has been",
    "start": "2049119",
    "end": "2056280"
  },
  {
    "text": "injected and triggered",
    "start": "2056740",
    "end": "2060898"
  },
  {
    "text": "okay uh I I'd like to talk about some more tricks which can bypass High",
    "start": "2064359",
    "end": "2071020"
  },
  {
    "text": "version Java Reflection restriction wire teradata objectives driver",
    "start": "2071020",
    "end": "2079240"
  },
  {
    "text": "we can combine three attack interfaces you know jdbc gndi and a Java",
    "start": "2079240",
    "end": "2085839"
  },
  {
    "text": "deserialization just like this",
    "start": "2085839",
    "end": "2091080"
  },
  {
    "start": "2088000",
    "end": "2115000"
  },
  {
    "text": "yeah as we know since jdk 17.",
    "start": "2092919",
    "end": "2098500"
  },
  {
    "text": "the Java Reflection is limited by default however jdbc",
    "start": "2098500",
    "end": "2105160"
  },
  {
    "text": "connection can be leveraged to invade jdbc the serialization with reflection",
    "start": "2105160",
    "end": "2111040"
  },
  {
    "text": "in jdk yeah yeah firstly we take a look at the",
    "start": "2111040",
    "end": "2118599"
  },
  {
    "start": "2115000",
    "end": "2132000"
  },
  {
    "text": "com Bing YouTube's Gadget invisible zero",
    "start": "2118599",
    "end": "2125760"
  },
  {
    "text": "yeah we use the white social tool to generate",
    "start": "2128020",
    "end": "2133660"
  },
  {
    "start": "2132000",
    "end": "2170000"
  },
  {
    "text": "come comes beings YouTube's payload Java Reflection has been restricted in you",
    "start": "2133660",
    "end": "2142000"
  },
  {
    "text": "know Java 17. here",
    "start": "2142000",
    "end": "2148740"
  },
  {
    "text": "so the class teradata source provides a Serial like Rebel data source",
    "start": "2150880",
    "end": "2159640"
  },
  {
    "text": "implementation here",
    "start": "2159640",
    "end": "2164339"
  },
  {
    "text": "yeah the gas and and the sets in Java Bing are utilized to set the jdb's connection",
    "start": "2169960",
    "end": "2176859"
  },
  {
    "start": "2170000",
    "end": "2197000"
  },
  {
    "text": "properties so we subtly",
    "start": "2176859",
    "end": "2183400"
  },
  {
    "text": "slightly we slightly reform the calm being utils Gadget with the teradata",
    "start": "2183400",
    "end": "2189520"
  },
  {
    "text": "jdbc drive class yeah just like this",
    "start": "2189520",
    "end": "2197760"
  },
  {
    "start": "2197000",
    "end": "2221000"
  },
  {
    "text": "that we use white socr to generate again the payload again the Java Reflection",
    "start": "2199000",
    "end": "2205240"
  },
  {
    "text": "has been invaded successfully",
    "start": "2205240",
    "end": "2209339"
  },
  {
    "text": "okay the last section will give you some suggestion for",
    "start": "2211960",
    "end": "2217660"
  },
  {
    "text": "protection if if you expose gdpc configuration to",
    "start": "2217660",
    "end": "2225820"
  },
  {
    "start": "2221000",
    "end": "2318000"
  },
  {
    "text": "users in your software or service",
    "start": "2225820",
    "end": "2230920"
  },
  {
    "text": "let's use a low list for JDP practice within many many more",
    "start": "2230920",
    "end": "2238599"
  },
  {
    "text": "viable set for business service needs",
    "start": "2238599",
    "end": "2243760"
  },
  {
    "text": "use only vetted database drivers and do not allow user upload as you know yeah",
    "start": "2243760",
    "end": "2249579"
  },
  {
    "text": "pay special attention to configuration properties which affect fire rights and networker",
    "start": "2249579",
    "end": "2258880"
  },
  {
    "text": "OS command just deny this by default yeah sandbox",
    "start": "2258880",
    "end": "2266079"
  },
  {
    "text": "user original jdbc activity in",
    "start": "2266079",
    "end": "2271900"
  },
  {
    "text": "dedicated VM or Cloud function yeah assume",
    "start": "2271900",
    "end": "2279220"
  },
  {
    "text": "as you assume the environment will be compromised and minimized plus Radiance",
    "start": "2279220",
    "end": "2287320"
  },
  {
    "text": "yeah regularly",
    "start": "2287320",
    "end": "2290880"
  },
  {
    "text": "just like this yeah regularly review jdbc configurations and usage from",
    "start": "2292599",
    "end": "2299460"
  },
  {
    "text": "malicious on or unexpected configuration jdbc driver",
    "start": "2299460",
    "end": "2306280"
  },
  {
    "text": "should be a part of your complaint version like you know live cycle",
    "start": "2306280",
    "end": "2313380"
  },
  {
    "text": "strategy and keep them empty yeah and",
    "start": "2313500",
    "end": "2319300"
  },
  {
    "start": "2318000",
    "end": "2389000"
  },
  {
    "text": "if you are developing a Java you know jdc driver I do not trust user provided",
    "start": "2319300",
    "end": "2326980"
  },
  {
    "text": "properties especially you know when the properties are used to invoke Network",
    "start": "2326980",
    "end": "2332920"
  },
  {
    "text": "cores OS commands or code through reflection yeah just be well a malicious server and",
    "start": "2332920",
    "end": "2341260"
  },
  {
    "text": "as you can see this year you know use checksums or other",
    "start": "2341260",
    "end": "2347740"
  },
  {
    "text": "verifiable data Exchange",
    "start": "2347740",
    "end": "2353039"
  },
  {
    "text": "if you are focusing uh because existing jdbc driver make sure you stay up to",
    "start": "2354400",
    "end": "2361240"
  },
  {
    "text": "deal with the Upstream driver and ensure you are applying particularly",
    "start": "2361240",
    "end": "2368079"
  },
  {
    "text": "so creative fixes yeah that's my",
    "start": "2368079",
    "end": "2373119"
  },
  {
    "text": "company my suggestions okay that's all",
    "start": "2373119",
    "end": "2379180"
  },
  {
    "text": "this is my my talk says for you all coming yeah to attend",
    "start": "2379180",
    "end": "2384579"
  },
  {
    "text": "my talk step so long",
    "start": "2384579",
    "end": "2388200"
  }
]