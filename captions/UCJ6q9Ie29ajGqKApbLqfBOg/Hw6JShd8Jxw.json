[
  {
    "start": "0",
    "end": "239000"
  },
  {
    "text": "thanks for being here after lunch this is a preload insecurity in your doctrine",
    "start": "60",
    "end": "5160"
  },
  {
    "text": "my name is Luca so today we're gonna cover just a bit of electron overview",
    "start": "5160",
    "end": "10309"
  },
  {
    "text": "particularly we'll be spending a few minutes on the security model which is particularly important in order to",
    "start": "10309",
    "end": "16440"
  },
  {
    "text": "understand you know the new techniques that I'm I'm going to introduce we'll",
    "start": "16440",
    "end": "21750"
  },
  {
    "text": "dive then deeper into the core topic which is subverting application being secure preload after today's",
    "start": "21750",
    "end": "29160"
  },
  {
    "text": "presentation if you find an XSS across the scripting on an electron application",
    "start": "29160",
    "end": "34260"
  },
  {
    "text": "you should be able to turn it to RC even though the application is using the",
    "start": "34260",
    "end": "40260"
  },
  {
    "text": "latest version of the framework and all they recommended security settings so what I will be introducing today are a",
    "start": "40260",
    "end": "46260"
  },
  {
    "text": "set of techniques that can be leveraged even in you know what will you consider a securely configured electron",
    "start": "46260",
    "end": "54180"
  },
  {
    "text": "application so let's just you know jump into the topics before that this is the",
    "start": "54180",
    "end": "62190"
  },
  {
    "text": "experience that was born as bit of as part of the research time that I spent",
    "start": "62190",
    "end": "67650"
  },
  {
    "text": "at my company down in sec as well as customer engagement so you will see a",
    "start": "67650",
    "end": "73830"
  },
  {
    "text": "lot of vulnerability here on common applications but before as I said I just",
    "start": "73830",
    "end": "83280"
  },
  {
    "text": "need to do an introduction about electron I assume you know what is electron since you are here if you don't",
    "start": "83280",
    "end": "88710"
  },
  {
    "text": "it's a popular framework that allows to build text up up with web technologies",
    "start": "88710",
    "end": "94909"
  },
  {
    "text": "it is really the combination of using chromium it used to be like Roman",
    "start": "94909",
    "end": "100680"
  },
  {
    "text": "content so I share the library today is a chromium binary with node and both",
    "start": "100680",
    "end": "105780"
  },
  {
    "text": "those components share v8 which is a JavaScript engine and even if you don't",
    "start": "105780",
    "end": "113970"
  },
  {
    "text": "know the framework you are you know I probably have at least one application that is running on top of electron on",
    "start": "113970",
    "end": "120990"
  },
  {
    "text": "your computer today whether you're chatting through Skype discord or writing code or text on business in your",
    "start": "120990",
    "end": "129090"
  },
  {
    "text": "code or atom and many other application it's becoming very popular and you know a lot of the application",
    "start": "129090",
    "end": "136330"
  },
  {
    "text": "that don't seem to be electron based application they are actually you know on top of this framework so it makes",
    "start": "136330",
    "end": "144970"
  },
  {
    "text": "sense from a security standpoint looking at you know look at the security of this application because they're becoming predominant in in the text of the",
    "start": "144970",
    "end": "152500"
  },
  {
    "text": "environment and of course it basically",
    "start": "152500",
    "end": "158980"
  },
  {
    "text": "tried to cover the mantra that we've been trying to have for the past you know decades around you know with Java",
    "start": "158980",
    "end": "165190"
  },
  {
    "text": "of bright ones you know run everywhere or run anywhere you know we would really",
    "start": "165190",
    "end": "172180"
  },
  {
    "text": "like to have something that we can use to have application that can be ported between operating system and you know",
    "start": "172180",
    "end": "179230"
  },
  {
    "text": "they just don't require anything else than then compiling and bundling for specific operating system and with",
    "start": "179230",
    "end": "185950"
  },
  {
    "text": "electron you know it is possible and moreover it is possible to do web technology there of course are very",
    "start": "185950",
    "end": "193120"
  },
  {
    "text": "popular today and and a lot of people you know know how to code with those so",
    "start": "193120",
    "end": "199330"
  },
  {
    "text": "here you have an example of why people love it Felix is one of the core maintainer he",
    "start": "199330",
    "end": "205090"
  },
  {
    "text": "even made an electron app that is actually running Windows 95 and being an electron app can be ported on all",
    "start": "205090",
    "end": "211390"
  },
  {
    "text": "operating system on the other side you have security people where you know",
    "start": "211390",
    "end": "219430"
  },
  {
    "text": "they're comparing for example electron with the new flash and and so you know",
    "start": "219430",
    "end": "228700"
  },
  {
    "text": "it's it's it's very difficult to taking a stand but I I would start saying it's difficult to fill the gap between you",
    "start": "228700",
    "end": "234940"
  },
  {
    "text": "know web and next up and we'll see why so if you take an electron application",
    "start": "234940",
    "end": "242320"
  },
  {
    "start": "239000",
    "end": "239000"
  },
  {
    "text": "where you're actually looking at it's a bundle of a lot of things it start from",
    "start": "242320",
    "end": "248740"
  },
  {
    "text": "the foundation chromium and no Jess the framework itself obviously your code and",
    "start": "248740",
    "end": "255280"
  },
  {
    "text": "all the MPM so all the dependency you're bringing in and every time you move an",
    "start": "255280",
    "end": "260530"
  },
  {
    "text": "application you are moving all these components so this is an important things to remember",
    "start": "260530",
    "end": "267350"
  },
  {
    "start": "267000",
    "end": "267000"
  },
  {
    "text": "application are bundled through files called Dada's are there are basically",
    "start": "267350",
    "end": "275410"
  },
  {
    "text": "archives non-compressed it's a concatenation of file to basically have a single file that would contain the",
    "start": "275410",
    "end": "281720"
  },
  {
    "text": "entire application and the way electric works is by inspecting those package",
    "start": "281720",
    "end": "287660"
  },
  {
    "text": "looking for a package of JSON manifest file which will determine the main",
    "start": "287660",
    "end": "292940"
  },
  {
    "text": "process so the first process is executed by the framework and when you build the",
    "start": "292940",
    "end": "299660"
  },
  {
    "text": "main process as a developer you're supposed to create render process so",
    "start": "299660",
    "end": "305620"
  },
  {
    "text": "processes that will actually contain the actual web content and as of today's you",
    "start": "305620",
    "end": "311990"
  },
  {
    "text": "know today's releases of electron you there are three ways of creating render process the most common one being the",
    "start": "311990",
    "end": "319790"
  },
  {
    "text": "browser window browser view it's a recently introduced object that is",
    "start": "319790",
    "end": "326420"
  },
  {
    "text": "equivalent to what it was webview tag webview tags a custom HTML tag that is",
    "start": "326420",
    "end": "332360"
  },
  {
    "text": "understood when when you run some content inside an electronic context and",
    "start": "332360",
    "end": "338720"
  },
  {
    "text": "what is it important is that inside the render process the application will load the resources right so we'll load HTML",
    "start": "338720",
    "end": "345680"
  },
  {
    "text": "Javascript and CSS and before loading that content it can invoke what it's",
    "start": "345680",
    "end": "351290"
  },
  {
    "text": "called the preload and this is the central topic of today's so let's let's dive a bit deeper into what it's the",
    "start": "351290",
    "end": "358100"
  },
  {
    "text": "preload so preload is basically a way to execute code just before the render you",
    "start": "358100",
    "end": "367430"
  },
  {
    "text": "know finish the bootstrap and start rendering the content so you know you have the main process run running will",
    "start": "367430",
    "end": "374390"
  },
  {
    "text": "Eastern she ate it for example a browser window as you can see on the code example here which is body weight taken",
    "start": "374390",
    "end": "381560"
  },
  {
    "text": "from the official documentation and the browser window will be stan shaded with",
    "start": "381560",
    "end": "387110"
  },
  {
    "text": "some preferences and one of them one of those process is the preload where we",
    "start": "387110",
    "end": "392300"
  },
  {
    "text": "define a file that is executed just before loading resources and then this",
    "start": "392300",
    "end": "398180"
  },
  {
    "text": "is a pretty particularly around augmenting the dawn and particularly the wind of object with",
    "start": "398180",
    "end": "405139"
  },
  {
    "text": "custom function there are normally not available on the browser window so in",
    "start": "405139",
    "end": "411350"
  },
  {
    "text": "this case for example you see how you could create a customized window open so",
    "start": "411350",
    "end": "416410"
  },
  {
    "text": "you basically override the functionality of windows that open and an important",
    "start": "416410",
    "end": "424940"
  },
  {
    "text": "aspect here is that the pillars creep bytes nature has access to no jsapi let",
    "start": "424940",
    "end": "434060"
  },
  {
    "start": "433000",
    "end": "433000"
  },
  {
    "text": "me now introduce another flag which is important for you no other discussion later on and that's context isolation",
    "start": "434060",
    "end": "441100"
  },
  {
    "text": "context isolation is a feature that is considered experimental but it's it's",
    "start": "441100",
    "end": "447860"
  },
  {
    "text": "there and will be there they basically introduced context isolation between the preload script and",
    "start": "447860",
    "end": "455180"
  },
  {
    "text": "the render what that means is that pre low script can still access the entire",
    "start": "455180",
    "end": "460760"
  },
  {
    "text": "with the Wobs but cannot make changes so if you try to append like in a previous",
    "start": "460760",
    "end": "466070"
  },
  {
    "text": "example a new version of the window open function that won't simply work a",
    "start": "466070",
    "end": "472330"
  },
  {
    "text": "moreover context isolation works on both renders and preload but also on renders",
    "start": "472330",
    "end": "478430"
  },
  {
    "text": "and the lakefront framework code and this is again an important aspect and we'll see why so let's let's look at an",
    "start": "478430",
    "end": "486620"
  },
  {
    "text": "example of how this work so you probably",
    "start": "486620",
    "end": "493340"
  },
  {
    "text": "see here so this is a some demo code",
    "start": "493340",
    "end": "498590"
  },
  {
    "text": "this is a very useful tool electron field that allow you to basically run the same code on different electron",
    "start": "498590",
    "end": "504830"
  },
  {
    "text": "versions so on the on this side here you see the main process this is what will",
    "start": "504830",
    "end": "510650"
  },
  {
    "text": "be normally sent shaded as the first process and we are essentially a browser",
    "start": "510650",
    "end": "516229"
  },
  {
    "text": "window with certain preferences so in this case we have note integration false context isolation false is already the",
    "start": "516229",
    "end": "522890"
  },
  {
    "text": "default behavior so that doesn't affect you know the overall behavior of the application and what we're doing here we",
    "start": "522890",
    "end": "529100"
  },
  {
    "text": "are calling pillows clip called rendered I apologize for the confusion of the",
    "start": "529100",
    "end": "534709"
  },
  {
    "text": "filename but that's how these Tool Works and the content of render GS is these",
    "start": "534709",
    "end": "539750"
  },
  {
    "text": "parts so we're appending a static string to wind up dot ABC and then we are",
    "start": "539750",
    "end": "546019"
  },
  {
    "text": "simply prompting right that the value so if I ran exiling this way you know we",
    "start": "546019",
    "end": "552319"
  },
  {
    "text": "expect to see the value of the string if we now redo by making contact isolation",
    "start": "552319",
    "end": "558380"
  },
  {
    "text": "through the script the preload script so this this object is the window and the",
    "start": "558380",
    "end": "564829"
  },
  {
    "text": "render are in two completely isolated words so that does not work and we get",
    "start": "564829",
    "end": "570380"
  },
  {
    "text": "an undefined let's now talk about",
    "start": "570380",
    "end": "580459"
  },
  {
    "text": "security model you would expect from electron being based on chromium to be",
    "start": "580459",
    "end": "587750"
  },
  {
    "text": "you know comparable to you know browser and in regards to security model to also",
    "start": "587750",
    "end": "594110"
  },
  {
    "text": "have the same security model but that's actually not accurate because the election is important to remember it's",
    "start": "594110",
    "end": "599180"
  },
  {
    "start": "596000",
    "end": "596000"
  },
  {
    "text": "not a browser and even from you know design perspective what electron is",
    "start": "599180",
    "end": "606949"
  },
  {
    "text": "trying to achieve is giving flexibility to software engineers and developers to build something that can use native you",
    "start": "606949",
    "end": "613730"
  },
  {
    "text": "know system in you know system notification and native capabilities which are obviously not possible in a",
    "start": "613730",
    "end": "619790"
  },
  {
    "text": "full browser and so electron maintainer has had to balance and I'd still have to balance the usability for developers and",
    "start": "619790",
    "end": "627769"
  },
  {
    "text": "the security and so certain you know mechanisms that are available and on the",
    "start": "627769",
    "end": "634009"
  },
  {
    "text": "browser today by choice or or you know buddy by the current design they're just",
    "start": "634009",
    "end": "640519"
  },
  {
    "text": "not there in electron and particularly",
    "start": "640519",
    "end": "646130"
  },
  {
    "start": "643000",
    "end": "643000"
  },
  {
    "text": "let's talk about two orthogonal aspects one being our surface so how do we",
    "start": "646130",
    "end": "652250"
  },
  {
    "text": "compare browser to electron in that matter so if we think about untrusted",
    "start": "652250",
    "end": "658339"
  },
  {
    "text": "content from the web well that's why we have browser browser give you gives the",
    "start": "658339",
    "end": "664279"
  },
  {
    "text": "ability to to - random website which is usually not you know not possible in an electron",
    "start": "664279",
    "end": "670880"
  },
  {
    "text": "application unless you're building a browser now electron which is highly discouraged and the brave browser",
    "start": "670880",
    "end": "676130"
  },
  {
    "text": "experiment was was an experiment of you know kind of a failure of not building a",
    "start": "676130",
    "end": "681589"
  },
  {
    "text": "browser based on electron and in fact they recently migrated back to a native",
    "start": "681589",
    "end": "687250"
  },
  {
    "text": "chromium based browser there is usually very limited interaction you are",
    "start": "687250",
    "end": "693500"
  },
  {
    "text": "allowing people to you know type input fields maybe are images but you never allow user to go on you know on on",
    "start": "693500",
    "end": "700519"
  },
  {
    "text": "random URLs so in that regards there is definitely limited interaction on",
    "start": "700519",
    "end": "706490"
  },
  {
    "text": "electron up its for example discouraged to open a browser window with a remote",
    "start": "706490",
    "end": "712459"
  },
  {
    "text": "origin all the guidelines will recommend you to load Rock local resources on the",
    "start": "712459",
    "end": "719690"
  },
  {
    "text": "other side there are new things that become part of those you know a possible",
    "start": "719690",
    "end": "724850"
  },
  {
    "text": "attack surface and this is for example local resources so you can you know load",
    "start": "724850",
    "end": "730550"
  },
  {
    "text": "resources of any kind from the from the system and that would be part of the trade model so in streaming application",
    "start": "730550",
    "end": "738920"
  },
  {
    "text": "it is not unlikely for user to download let's say subtitles file you know may be",
    "start": "738920",
    "end": "744410"
  },
  {
    "text": "downloaded from torrent or or the web within the application so those are",
    "start": "744410",
    "end": "749449"
  },
  {
    "text": "obviously things that should be considered as you know untrusted untrusted input on the other side we",
    "start": "749449",
    "end": "758389"
  },
  {
    "start": "756000",
    "end": "756000"
  },
  {
    "text": "have isolation so how isolation diff you know differs from browser to electron",
    "start": "758389",
    "end": "764720"
  },
  {
    "text": "well in the browser especially with you know recent version of browsers",
    "start": "764720",
    "end": "769970"
  },
  {
    "text": "you know sandboxing is becoming a very important part and while there is a",
    "start": "769970",
    "end": "776630"
  },
  {
    "text": "chrome-like sandbox in electron because of the flexibility we we just talk it's",
    "start": "776630",
    "end": "782360"
  },
  {
    "text": "very difficult to be to enforce that by default and and if you need if you do",
    "start": "782360",
    "end": "787880"
  },
  {
    "text": "need to render a content you know you may or may not be able to use this",
    "start": "787880",
    "end": "793160"
  },
  {
    "text": "property so generally speaking you know",
    "start": "793160",
    "end": "798560"
  },
  {
    "text": "enterprise unless you use the proper settings you",
    "start": "798560",
    "end": "804490"
  },
  {
    "text": "know the latest version of the framework and and all the mitigation that I will probably providing at the end of the",
    "start": "804490",
    "end": "810490"
  },
  {
    "text": "talk you should consider the cross the scripting will lead to RC and moreover",
    "start": "810490",
    "end": "816310"
  },
  {
    "text": "the explore reliability is you know obviously much much greater than it would be for a typical memory correction",
    "start": "816310",
    "end": "822370"
  },
  {
    "text": "box it's not integration bypasses which are the mechanisms to break the isolation are usually business logic",
    "start": "822370",
    "end": "828760"
  },
  {
    "text": "bugs and if we look at the full chain of an exploit on any electron up you can",
    "start": "828760",
    "end": "836860"
  },
  {
    "text": "distill these in basically three components so let's start looking at each of them on the first step you need",
    "start": "836860",
    "end": "844000"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "some how to control the Dom so you need to be able to inject JavaScript this is",
    "start": "844000",
    "end": "850390"
  },
  {
    "text": "typically done through cross the scripting but are actually a lot of other ways including for example middle",
    "start": "850390",
    "end": "857770"
  },
  {
    "text": "click and middle click is they also a good example of something that is being mitigated by the framework itself in the",
    "start": "857770",
    "end": "864160"
  },
  {
    "text": "recent versions the primeira middle click was that the middle click would",
    "start": "864160",
    "end": "870130"
  },
  {
    "text": "generate an event that is not a traditional click event but rather a aux",
    "start": "870130",
    "end": "875290"
  },
  {
    "text": "click event and so if you would build your application trying to intercept events and blocking the execution it",
    "start": "875290",
    "end": "882490"
  },
  {
    "text": "just wouldn't work because the actual event handler would get a different event another good example is drag and",
    "start": "882490",
    "end": "891550"
  },
  {
    "text": "drop being able you know based on chromium you can actually drag and drop",
    "start": "891550",
    "end": "897100"
  },
  {
    "text": "URL and that would force navigation to that URL so that's been used for kind of",
    "start": "897100",
    "end": "905170"
  },
  {
    "text": "dragging door privilege escalation where you drag and drop a content to from a render that is not privileged to a",
    "start": "905170",
    "end": "912160"
  },
  {
    "text": "privileged render but this is also fixed by the framework so since version 3 drag",
    "start": "912160",
    "end": "918010"
  },
  {
    "text": "and drop is not a you know enabled by default anymore so the most common way",
    "start": "918010",
    "end": "925210"
  },
  {
    "start": "923000",
    "end": "923000"
  },
  {
    "text": "to days of subverting the flow is through cross scripting which is",
    "start": "925210",
    "end": "932579"
  },
  {
    "text": "still very relevant but not a very interesting from the pure strength technical standpoint I mean after so",
    "start": "932579",
    "end": "937949"
  },
  {
    "text": "many years I guess we know what what is the problem run across our scripting most of the top popular apps are based",
    "start": "937949",
    "end": "945269"
  },
  {
    "text": "on reactor or angular's context well output encoding is making having crosses",
    "start": "945269",
    "end": "952170"
  },
  {
    "text": "scripting more and more difficult several apps use CSP as well so it's",
    "start": "952170",
    "end": "959429"
  },
  {
    "text": "it's becoming more complicated and then it seems to actually obtain you know",
    "start": "959429",
    "end": "965699"
  },
  {
    "text": "JavaScript execution we talked about limiting interaction also the contents",
    "start": "965699",
    "end": "971249"
  },
  {
    "text": "of cross scripting if you think about it's often you know something that can",
    "start": "971249",
    "end": "976980"
  },
  {
    "text": "be triggered by the user itself which make it not very useful for exploitation",
    "start": "976980",
    "end": "983129"
  },
  {
    "text": "as an exploitation vector I'm gonna jump",
    "start": "983129",
    "end": "990119"
  },
  {
    "start": "989000",
    "end": "989000"
  },
  {
    "text": "for a second step two and instead spend a few seconds on step three which is",
    "start": "990119",
    "end": "995459"
  },
  {
    "text": "basically granted like if you are on a vendor that has and you have full",
    "start": "995459",
    "end": "1001970"
  },
  {
    "text": "control of JavaScript and there is no isolation or you bypassed the isolation then obtaining reliable remote code",
    "start": "1001970",
    "end": "1008569"
  },
  {
    "text": "execution is as easy as using no J's API so from the pure technical standpoint",
    "start": "1008569",
    "end": "1015350"
  },
  {
    "text": "the interesting part at least my opinion is step two is how do I go from there is",
    "start": "1015350",
    "end": "1022910"
  },
  {
    "text": "an XSS to bypass the isolation in order to execute commands and there are a few",
    "start": "1022910",
    "end": "1031730"
  },
  {
    "text": "ask but on why this is interesting the framework is getting better at least better than it was you know two years",
    "start": "1031730",
    "end": "1038178"
  },
  {
    "text": "ago when when we presented the first research and electron there are better the four settings and also people are",
    "start": "1038179",
    "end": "1045230"
  },
  {
    "text": "just learning what are the common mistakes and and how to prevent them so it's less likely if you take a top app",
    "start": "1045230",
    "end": "1054080"
  },
  {
    "text": "that will have the basic mistake of for example not enabling not integration and",
    "start": "1054080",
    "end": "1062690"
  },
  {
    "start": "1060000",
    "end": "1060000"
  },
  {
    "text": "let's look at not integration as an example we are tracking vulnerabilities on",
    "start": "1062690",
    "end": "1067700"
  },
  {
    "text": "electron since the beginning there are 12 note integration of our ability from",
    "start": "1067700",
    "end": "1073460"
  },
  {
    "text": "the inception until February that's when we made the count and so the question is",
    "start": "1073460",
    "end": "1081920"
  },
  {
    "text": "and those are question obviously we cannot really answer are those vulnerabilities partial dance how many",
    "start": "1081920",
    "end": "1087320"
  },
  {
    "text": "more are out there there are probably more out there like I mean I do expect",
    "start": "1087320",
    "end": "1092750"
  },
  {
    "text": "to see more not integration bypasses but if you look for example at something",
    "start": "1092750",
    "end": "1098059"
  },
  {
    "start": "1095000",
    "end": "1095000"
  },
  {
    "text": "that was in 2015 or 2019 you clearly see a difference which is what is the",
    "start": "1098059",
    "end": "1103790"
  },
  {
    "text": "configuration that that was affected by the vulnerability so in 2015 the one you",
    "start": "1103790",
    "end": "1111800"
  },
  {
    "text": "see on the left it was basically the full browser window that's that's something that every single app has to",
    "start": "1111800",
    "end": "1118370"
  },
  {
    "text": "use on the other hand in 2019 which was the most recent iteration vulnerability",
    "start": "1118370",
    "end": "1125570"
  },
  {
    "text": "it only affected a new feature which is browser view with two particular",
    "start": "1125570",
    "end": "1132309"
  },
  {
    "text": "attributes and all both the the object and the attributes are experimental at",
    "start": "1132309",
    "end": "1137990"
  },
  {
    "text": "this point right so it's clearly setting a difference as for the applicability of",
    "start": "1137990",
    "end": "1143840"
  },
  {
    "text": "certain node integration bypass if you take a random application you know you",
    "start": "1143840",
    "end": "1149330"
  },
  {
    "text": "need to really have this specific configuration in order to bypass the integration how you exploit those it",
    "start": "1149330",
    "end": "1158350"
  },
  {
    "start": "1155000",
    "end": "1155000"
  },
  {
    "text": "didn't really change much it's basically always three getting the opening of another browser window",
    "start": "1158350",
    "end": "1164809"
  },
  {
    "text": "somehow piggybacking some some details",
    "start": "1164809",
    "end": "1169929"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "so I mentioned that secure settings are you know getting by default",
    "start": "1172420",
    "end": "1177620"
  },
  {
    "text": "I do remember two years ago a black at Vegas mentioning that v2 election will",
    "start": "1177620",
    "end": "1184100"
  },
  {
    "text": "be two would be the game changer for security it didn't happen but it's now confirmed it will happen in version five",
    "start": "1184100",
    "end": "1190990"
  },
  {
    "text": "where browser window will have important security by default so all well you know",
    "start": "1190990",
    "end": "1197059"
  },
  {
    "text": "all what we discussed so far will be they're forced by the framework by default after April release if you look",
    "start": "1197059",
    "end": "1206820"
  },
  {
    "start": "1206000",
    "end": "1206000"
  },
  {
    "text": "at chromium our grade so how electron keeps chromium updated it's also getting",
    "start": "1206820",
    "end": "1212010"
  },
  {
    "text": "better right they are catching up much faster there are motor source located",
    "start": "1212010",
    "end": "1217260"
  },
  {
    "text": "for for the project more company they are investing and so this is all",
    "start": "1217260",
    "end": "1224159"
  },
  {
    "start": "1224000",
    "end": "1224000"
  },
  {
    "text": "bringing to a kind of a point which is you know security-wise different work is getting better we ran our tools so we",
    "start": "1224159",
    "end": "1233970"
  },
  {
    "text": "have an open source tool that has security checks that can be you know can",
    "start": "1233970",
    "end": "1239279"
  },
  {
    "text": "be automated and we automated to run on on all open source electronification and",
    "start": "1239279",
    "end": "1246059"
  },
  {
    "text": "just to give you some number like what we found for example that you know over eighty percent we're using node",
    "start": "1246059",
    "end": "1251340"
  },
  {
    "text": "integration so this again brings back at the point of people are aware of this",
    "start": "1251340",
    "end": "1257490"
  },
  {
    "text": "problem of those though only a small percentage twenty five percent is using",
    "start": "1257490",
    "end": "1264059"
  },
  {
    "text": "context isolation and we'll see why that matters sandbox while still experimental",
    "start": "1264059",
    "end": "1271350"
  },
  {
    "text": "there are people out there today trying in production so that's also good news and then yes a lot of people still don't",
    "start": "1271350",
    "end": "1279240"
  },
  {
    "text": "update election to the latest release so",
    "start": "1279240",
    "end": "1286679"
  },
  {
    "text": "if you want to kind of summarize what is this state of security for election and",
    "start": "1286679",
    "end": "1291720"
  },
  {
    "text": "i see a lot of discussion on twitter around that so that's my personal opinion which is it is true that",
    "start": "1291720",
    "end": "1298080"
  },
  {
    "text": "electron vulnerability has higher impact and if not probably configured XSS means",
    "start": "1298080",
    "end": "1304380"
  },
  {
    "text": "r c-- but they are more difficult to trigger it is not just like browsing a",
    "start": "1304380",
    "end": "1311279"
  },
  {
    "text": "page on on a browser and if you look at an important application the application",
    "start": "1311279",
    "end": "1316620"
  },
  {
    "text": "that we rely on every single day all a pick you know all application this category have isolation in place in some",
    "start": "1316620",
    "end": "1324179"
  },
  {
    "text": "way or another and from an attacker perspective what is important is okay if",
    "start": "1324179",
    "end": "1329850"
  },
  {
    "text": "I have an application that is using the latest version of the work and has all the secure settings",
    "start": "1329850",
    "end": "1334949"
  },
  {
    "text": "what else can I do and here is you know I would like to",
    "start": "1334949",
    "end": "1340559"
  },
  {
    "text": "introduce you this new class of vulnerability called you know insecure",
    "start": "1340559",
    "end": "1346739"
  },
  {
    "text": "preload so insecure preload in particularly preload it's something that",
    "start": "1346739",
    "end": "1352799"
  },
  {
    "start": "1349000",
    "end": "1349000"
  },
  {
    "text": "I think it's been neglected by a lot of people and the vulnerability we found on",
    "start": "1352799",
    "end": "1357929"
  },
  {
    "text": "very popular apps you know demonstrates that it is a prominent it's been known",
    "start": "1357929",
    "end": "1363119"
  },
  {
    "text": "in the electron maintainer community it's somehow being you know advertised",
    "start": "1363119",
    "end": "1369329"
  },
  {
    "text": "on the security page but you know as a minor issue and I don't think it received the level of attention that",
    "start": "1369329",
    "end": "1377099"
  },
  {
    "text": "actually requires and so there are four main categories or topics around how how",
    "start": "1377099",
    "end": "1385289"
  },
  {
    "text": "you can make your application insecure by mistake lean doing something in a",
    "start": "1385289",
    "end": "1391049"
  },
  {
    "text": "preload and so will Co now cover each of them in greater detail let's start with",
    "start": "1391049",
    "end": "1400469"
  },
  {
    "text": "the first one which is probably the most easy to understand which is the preload",
    "start": "1400469",
    "end": "1407339"
  },
  {
    "start": "1407000",
    "end": "1407000"
  },
  {
    "text": "is has access to node node primitives and as such if you miss sickling brings",
    "start": "1407339",
    "end": "1415829"
  },
  {
    "text": "object from the preload back to the render it you know basically you're",
    "start": "1415829",
    "end": "1421469"
  },
  {
    "text": "defeating the purpose of the isolation and the preload which is you know obvious for certain modules like for",
    "start": "1421469",
    "end": "1427679"
  },
  {
    "text": "example process or or file system FS but is probably not that clear for things",
    "start": "1427679",
    "end": "1433199"
  },
  {
    "text": "like buffer right and even the electron maintainer x' were exposing by default",
    "start": "1433199",
    "end": "1438869"
  },
  {
    "text": "buffer and I'm talking about node node buffer to the window object even when",
    "start": "1438869",
    "end": "1443939"
  },
  {
    "text": "not integration will disable and this was used for as an own integration bypass so the thing the first thing that",
    "start": "1443939",
    "end": "1451079"
  },
  {
    "text": "you know can go wrong on preload is obviously you should not reintroduce no J's primitive again obvious for certain",
    "start": "1451079",
    "end": "1459359"
  },
  {
    "text": "modules less obvious for others so every time you introduce something it really takes the time to figure out the",
    "start": "1459359",
    "end": "1466469"
  },
  {
    "text": "implication that but let's go into the second",
    "start": "1466469",
    "end": "1471600"
  },
  {
    "text": "category which I think it's the most interesting one and it's about exposing dangerous primitives and we'll see this",
    "start": "1471600",
    "end": "1478110"
  },
  {
    "text": "example with a very popular app wire which is an end-to-end encryption messaging app you know they market",
    "start": "1478110",
    "end": "1487830"
  },
  {
    "start": "1479000",
    "end": "1479000"
  },
  {
    "text": "themselves as most secure collaboration platform and the way they desktop up so",
    "start": "1487830",
    "end": "1493080"
  },
  {
    "text": "we will be talking here obviously about the desktop app is built is by having a browser window there has not integration",
    "start": "1493080",
    "end": "1501660"
  },
  {
    "text": "Falls but allow webview and then the actual content of where you render the messages it's inside a webview so if you",
    "start": "1501660",
    "end": "1511830"
  },
  {
    "text": "are you know any XSS on wire",
    "start": "1511830",
    "end": "1517050"
  },
  {
    "text": "you know beside of potential XSS in the settings or like very minor windows will",
    "start": "1517050",
    "end": "1525900"
  },
  {
    "text": "be inside that webview and they do enforce isolation but they also load a",
    "start": "1525900",
    "end": "1533490"
  },
  {
    "text": "preload which is the one you see on which you see in you're a part of that and what this preload is doing is",
    "start": "1533490",
    "end": "1542240"
  },
  {
    "text": "appending a logger which is used to as the name suggests to to log information",
    "start": "1542240",
    "end": "1550310"
  },
  {
    "text": "this is obviously something that it is required in the render because the the overall purpose is to actually log",
    "start": "1550310",
    "end": "1557220"
  },
  {
    "text": "something inside the render so inside the page that display messages and an attachment and such but unfortunately if",
    "start": "1557220",
    "end": "1566100"
  },
  {
    "text": "you have JavaScript the cushion there then you can repurpose that function so you see here how this can be abused you",
    "start": "1566100",
    "end": "1574230"
  },
  {
    "text": "know we have to jump you know for demonstration purposes we have to jump from the initial browser window to the",
    "start": "1574230",
    "end": "1580740"
  },
  {
    "text": "render and then inside the render we can reconfigure the the formatter and the",
    "start": "1580740",
    "end": "1587580"
  },
  {
    "text": "transport of the logger to for example write to a file instead of to console and at that point you know exploitation",
    "start": "1587580",
    "end": "1595560"
  },
  {
    "text": "is as easy as revoking the same function so let's let's look at the demo",
    "start": "1595560",
    "end": "1604040"
  },
  {
    "text": "all right so this is the app will be slowly loading I guess yeah and here you",
    "start": "1625370",
    "end": "1634520"
  },
  {
    "text": "have the developer console of the primary window so as I said we need to",
    "start": "1634520",
    "end": "1643040"
  },
  {
    "text": "switch first of all to the webview we",
    "start": "1643040",
    "end": "1649850"
  },
  {
    "text": "now have the developer tools of the of the rent that there is actually",
    "start": "1649850",
    "end": "1655400"
  },
  {
    "text": "containing the messages and so what we do here it's a kind of three steps so the first step we just changed the",
    "start": "1655400",
    "end": "1663770"
  },
  {
    "text": "formatter the second step we set the",
    "start": "1663770",
    "end": "1668840"
  },
  {
    "text": "transport you can see here too in this case just to write a file on you know",
    "start": "1668840",
    "end": "1673970"
  },
  {
    "text": "just write in bash RC and I'm not overriding and then with this simple",
    "start": "1673970",
    "end": "1680330"
  },
  {
    "text": "commands we can just trigger a logging error and so at this point when for",
    "start": "1680330",
    "end": "1687680"
  },
  {
    "text": "example I open a new terminal you will actually get a calculator because we override the file so this is a you know",
    "start": "1687680",
    "end": "1696140"
  },
  {
    "text": "a first example of a functionality that you know can be abused even though you",
    "start": "1696140",
    "end": "1703460"
  },
  {
    "text": "know it is expected to be used within the render let's now talk about a",
    "start": "1703460",
    "end": "1712310"
  },
  {
    "start": "1710000",
    "end": "1710000"
  },
  {
    "text": "different software this code a very popular messaging app especially for",
    "start": "1712310",
    "end": "1719330"
  },
  {
    "text": "gamers the isolation in this case is done directly through a browser window",
    "start": "1719330",
    "end": "1726310"
  },
  {
    "text": "so the browser window itself doesn't have primitives enabled but it has you",
    "start": "1726310",
    "end": "1733010"
  },
  {
    "text": "know a preload and so let's look at the part of the preload where it's loading",
    "start": "1733010",
    "end": "1738680"
  },
  {
    "text": "native modules and what this native mojo is doing it can be used to require local",
    "start": "1738680",
    "end": "1746090"
  },
  {
    "text": "modules and so by reviewing all the modules that were present in the application we found one that was called",
    "start": "1746090",
    "end": "1752090"
  },
  {
    "text": "xx e8 if you google for that it's a better child process which is always promising when",
    "start": "1752090",
    "end": "1757389"
  },
  {
    "text": "you google and you get these type of results so in this case is much easier than the wire examples because you",
    "start": "1757389",
    "end": "1764940"
  },
  {
    "text": "barely just need to use the functionality this is kind of exported",
    "start": "1764940",
    "end": "1771479"
  },
  {
    "text": "so if you think that you know too easy well let's let's analyze another example",
    "start": "1772950",
    "end": "1779200"
  },
  {
    "text": "on the same application just the different version the same preload script also was importing this module",
    "start": "1779200",
    "end": "1789039"
  },
  {
    "text": "called IPC what is IPC it's you know if",
    "start": "1789039",
    "end": "1796359"
  },
  {
    "text": "you look at the code you know right in the middle you see a PC in the render send apply and then just below you see a",
    "start": "1796359",
    "end": "1804639"
  },
  {
    "text": "b surrendur on its passing in advance this is basically just a proper to the",
    "start": "1804639",
    "end": "1810039"
  },
  {
    "text": "native IPC that a electron has and it's you know it's used internally by",
    "start": "1810039",
    "end": "1816729"
  },
  {
    "text": "electron itself so to understand what is",
    "start": "1816729",
    "end": "1822459"
  },
  {
    "start": "1820000",
    "end": "1820000"
  },
  {
    "text": "the implication of that let's let's do a quick recap of how IPC works for electron so in election you know you",
    "start": "1822459",
    "end": "1830649"
  },
  {
    "text": "need to communicate between main and renders and the way it's done is through synchronous or asynchronous messages so",
    "start": "1830649",
    "end": "1838539"
  },
  {
    "text": "let's start with the synchronous the easiest one on the main we define a listener that's the you know synchronous",
    "start": "1838539",
    "end": "1846339"
  },
  {
    "text": "message IPC on synchronous message and on the render we just need we can just send a",
    "start": "1846339",
    "end": "1851649"
  },
  {
    "text": "synchronous message through a sensing and the important things here for you to",
    "start": "1851649",
    "end": "1858459"
  },
  {
    "text": "remember is that the only thing that really matters is the channel name which",
    "start": "1858459",
    "end": "1863469"
  },
  {
    "text": "is the first argument of those functions you know in a similar way a synchronous",
    "start": "1863469",
    "end": "1870429"
  },
  {
    "text": "messages works but of course it's a synchronous so you need to have listeners on both render and main and",
    "start": "1870429",
    "end": "1879209"
  },
  {
    "text": "there is actually no separation of channels even in the internal electronic",
    "start": "1879209",
    "end": "1884739"
  },
  {
    "text": "code so the one at the bottom is actually the example of how election implemented",
    "start": "1884739",
    "end": "1890450"
  },
  {
    "text": "the alert box so when you have what you do window alert on a render what the",
    "start": "1890450",
    "end": "1896000"
  },
  {
    "text": "render does it sends a message of type you know of channel election underscore",
    "start": "1896000",
    "end": "1901520"
  },
  {
    "text": "browser will underscore window underscore alert and that's the code executed on the main what that means is",
    "start": "1901520",
    "end": "1909680"
  },
  {
    "start": "1909000",
    "end": "1909000"
  },
  {
    "text": "that we can actually leverage you know the internal electron I P C and so here is an example of how you would basically",
    "start": "1909680",
    "end": "1916970"
  },
  {
    "text": "craft some JavaScript to send IPC messages they would trigger the",
    "start": "1916970",
    "end": "1922400"
  },
  {
    "text": "secretion of of in this case of a calculator you know we basically used in",
    "start": "1922400",
    "end": "1929960"
  },
  {
    "text": "the native electron functionality so we do a require by signing a channel like",
    "start": "1929960",
    "end": "1935030"
  },
  {
    "text": "message to the channel electron browser require and and and so on right so so",
    "start": "1935030",
    "end": "1942440"
  },
  {
    "text": "far so good but this is obviously it has one one point which is you need to be",
    "start": "1942440",
    "end": "1949820"
  },
  {
    "text": "able to send IPC messages which normally it's not available on the render because you don't have access to the first you",
    "start": "1949820",
    "end": "1956750"
  },
  {
    "text": "know line so they require electron I be surrender but back to the disk or bark",
    "start": "1956750",
    "end": "1963010"
  },
  {
    "start": "1960000",
    "end": "1960000"
  },
  {
    "text": "you know if you remember we actually had an end layer of that IPC this bad if I",
    "start": "1963010",
    "end": "1971390"
  },
  {
    "text": "we didn't have you know a way to obtain actually a references and so you know",
    "start": "1971390",
    "end": "1978200"
  },
  {
    "text": "we've been thinking okay how can we can abuse that and then you know pretty quickly realize that we actually don't need to ten references so an exploit for",
    "start": "1978200",
    "end": "1987620"
  },
  {
    "text": "this vulnerability it actually just involves using in this case was a synchronous messages where we first send",
    "start": "1987620",
    "end": "1994700"
  },
  {
    "text": "a message to the browser require child process will be in the stack of the",
    "start": "1994700",
    "end": "2000220"
  },
  {
    "text": "object and then we just simply try to send another message to call and obviously this call will be executed on",
    "start": "2000220",
    "end": "2007240"
  },
  {
    "text": "object there's nothing to do with child process but we don't care as long as",
    "start": "2007240",
    "end": "2012310"
  },
  {
    "text": "eventually will actually be invoked on a child process all right so let's look at",
    "start": "2012310",
    "end": "2018730"
  },
  {
    "text": "the two demos",
    "start": "2018730",
    "end": "2021299"
  },
  {
    "text": "hopefully so this core the patching and upgrading is pretty aggressive so",
    "start": "2028100",
    "end": "2033210"
  },
  {
    "text": "hopefully they haven't patch the up that I have locally installed here so the",
    "start": "2033210",
    "end": "2040019"
  },
  {
    "text": "first one is you know the native modules you know we're doing nothing else than",
    "start": "2040019",
    "end": "2047100"
  },
  {
    "text": "just native modules required the modules and this is the modules that is bundled",
    "start": "2047100",
    "end": "2052108"
  },
  {
    "text": "with the app and so you know obviously we execute this one and we get a calculator it is in a different version",
    "start": "2052109",
    "end": "2060000"
  },
  {
    "text": "so for the other one I'm gonna show you a quick video not to have too many",
    "start": "2060000",
    "end": "2065220"
  },
  {
    "text": "virtual machines so this is again scored",
    "start": "2065220",
    "end": "2073970"
  },
  {
    "text": "you can we can go through the so this is",
    "start": "2073970",
    "end": "2087750"
  },
  {
    "text": "a pretty much the one I was on the slides we are using the require and and",
    "start": "2087750",
    "end": "2095460"
  },
  {
    "text": "then that object will be allocated and just waiting for us to be executed and",
    "start": "2095460",
    "end": "2100650"
  },
  {
    "text": "of course it's all client-side and it's all triggered for JavaScript so it's it's pretty fast and even too fast in my",
    "start": "2100650",
    "end": "2108000"
  },
  {
    "text": "videos",
    "start": "2108000",
    "end": "2110300"
  },
  {
    "text": "and I another aspect and so here we go into the third categories of why preload",
    "start": "2117400",
    "end": "2122620"
  },
  {
    "text": "can be bad it's around sandbox bypasses so not integration is usually not enough like",
    "start": "2122620",
    "end": "2128650"
  },
  {
    "start": "2124000",
    "end": "2124000"
  },
  {
    "text": "if you have something that comes from untrusted resources like you load the",
    "start": "2128650",
    "end": "2133810"
  },
  {
    "text": "remote page you do really need to use sandbox and sandbox makes possible to",
    "start": "2133810",
    "end": "2138910"
  },
  {
    "text": "have a chromium OS sandbox it used to be necessary to specify",
    "start": "2138910",
    "end": "2147010"
  },
  {
    "text": "command line argument it's not true anymore so with you know a recent",
    "start": "2147010",
    "end": "2152080"
  },
  {
    "text": "version of electron you can have up enable sandbox and this will be the same",
    "start": "2152080",
    "end": "2157210"
  },
  {
    "text": "code that chromium is using for sandbox things with one caveat which is there",
    "start": "2157210",
    "end": "2162460"
  },
  {
    "text": "are obviously all the additional IPC messages that electron uses so if you",
    "start": "2162460",
    "end": "2168160"
  },
  {
    "text": "have a browser vulnerability and you compromise a render it is most likely",
    "start": "2168160",
    "end": "2175650"
  },
  {
    "text": "you know much easier to actually do a sandwich escape as it is on a native",
    "start": "2175650",
    "end": "2181390"
  },
  {
    "text": "chromium but nevertheless this is you",
    "start": "2181390",
    "end": "2186700"
  },
  {
    "text": "know the best it gets as to getting a render that is you know equivalent to a",
    "start": "2186700",
    "end": "2191980"
  },
  {
    "text": "browser however if you have a preload again that it's exposing some of those",
    "start": "2191980",
    "end": "2198070"
  },
  {
    "text": "primitives we go back to the the problem is around introducing objects so at the",
    "start": "2198070",
    "end": "2204220"
  },
  {
    "text": "bottom for example we see cases where if you expose again the app object or if",
    "start": "2204220",
    "end": "2210160"
  },
  {
    "text": "you expose the IPC render and it is possible even if you have sandbox if you",
    "start": "2210160",
    "end": "2216370"
  },
  {
    "text": "explicitly do it in the preload then we turn back to the ability to send arbitrary IPC which again it can be",
    "start": "2216370",
    "end": "2225340"
  },
  {
    "text": "trigger for you know can be used to trigger native electron functions and",
    "start": "2225340",
    "end": "2231660"
  },
  {
    "text": "finally let's cover missing context isolation if there is something you know",
    "start": "2231660",
    "end": "2240280"
  },
  {
    "start": "2236000",
    "end": "2236000"
  },
  {
    "text": "you need to be in back home today is if you have an electron app and you don't have context isolation enable it's",
    "start": "2240280",
    "end": "2247600"
  },
  {
    "text": "basically like not having node integration disable after you know some time I was",
    "start": "2247600",
    "end": "2254080"
  },
  {
    "text": "able to modify the security page of electron and it's called native capability in your responsibility to",
    "start": "2254080",
    "end": "2260680"
  },
  {
    "text": "actually explicitly mention that you need to enable context isolation so to recap if you don't have context",
    "start": "2260680",
    "end": "2267850"
  },
  {
    "text": "isolation it's like you have a permanent node integration bypass and this is a by",
    "start": "2267850",
    "end": "2276580"
  },
  {
    "text": "itself I would say a completely new class of vulnerabilities Masato is you",
    "start": "2276580",
    "end": "2282880"
  },
  {
    "text": "know all credit goes to him and thanks",
    "start": "2282880",
    "end": "2288790"
  },
  {
    "text": "to his work election Lee introduced this this new setting for the context of",
    "start": "2288790",
    "end": "2295810"
  },
  {
    "start": "2293000",
    "end": "2293000"
  },
  {
    "text": "preload this is also very interesting and so that's what we'll be covering today it's how can you use the missing",
    "start": "2295810",
    "end": "2302290"
  },
  {
    "text": "context isolation in the context of preload and so the idea is that if you",
    "start": "2302290",
    "end": "2311200"
  },
  {
    "text": "don't know if context isolation render and preload share the same context so changes in the render affects the code",
    "start": "2311200",
    "end": "2318460"
  },
  {
    "text": "that it's been you know defining preloads what that means is that we",
    "start": "2318460",
    "end": "2324250"
  },
  {
    "text": "cannot guarantee the integrity of that code and again I will show you with like",
    "start": "2324250",
    "end": "2331300"
  },
  {
    "start": "2328000",
    "end": "2328000"
  },
  {
    "text": "a real live app that has been redacted trading app where it would have a single",
    "start": "2331300",
    "end": "2337990"
  },
  {
    "text": "browser window with both not integration disabled and sandbox which again you would expect to be the best security",
    "start": "2337990",
    "end": "2344530"
  },
  {
    "text": "configuration out there and it was using the most recent electron frame or at",
    "start": "2344530",
    "end": "2351280"
  },
  {
    "text": "that time and if you look at the preload",
    "start": "2351280",
    "end": "2356310"
  },
  {
    "text": "you know we had a code similar to this one I was a bit you know it was a bit a little bit refactor with changing a",
    "start": "2356310",
    "end": "2363550"
  },
  {
    "text": "variable name and such but it was basically the same code I was there and this is actually trying to prevent the",
    "start": "2363550",
    "end": "2370570"
  },
  {
    "text": "common channels right this is exactly trying to prevent a vulnerability that we found on this card where you're",
    "start": "2370570",
    "end": "2376870"
  },
  {
    "text": "valuating what is the channel that the render is sending messages to",
    "start": "2376870",
    "end": "2382040"
  },
  {
    "text": "and it looks good unless you realize that you don't have context isolation so",
    "start": "2382040",
    "end": "2388310"
  },
  {
    "text": "if you don't have a context isolation you can use prototype pollution to",
    "start": "2388310",
    "end": "2394070"
  },
  {
    "text": "override in this case they include function so if you look back you see",
    "start": "2394070",
    "end": "2399500"
  },
  {
    "text": "here there is an if statement where we are checking if the specific channel",
    "start": "2399500",
    "end": "2404690"
  },
  {
    "text": "it's part of the IPC whitelist and it's done with the native includes you know",
    "start": "2404690",
    "end": "2410540"
  },
  {
    "text": "array includes function but this can be bypassed we by simply doing a try",
    "start": "2410540",
    "end": "2416660"
  },
  {
    "text": "prototype includes they always return true and after that just invoke your",
    "start": "2416660",
    "end": "2423530"
  },
  {
    "text": "code and in this case is again leveraging the same technique and basically the same code that we prepared",
    "start": "2423530",
    "end": "2429860"
  },
  {
    "text": "for the other IPC abuse just as a matter",
    "start": "2429860",
    "end": "2436310"
  },
  {
    "start": "2435000",
    "end": "2435000"
  },
  {
    "text": "of reference you also need to know that prototype pollution and the probe around context isolation effects things outside",
    "start": "2436310",
    "end": "2444230"
  },
  {
    "text": "of preload as well so masado has done",
    "start": "2444230",
    "end": "2450230"
  },
  {
    "text": "you know an amazing research you will you have the slides here the bottom line",
    "start": "2450230",
    "end": "2455510"
  },
  {
    "text": "is that you can overwrite the Col function and basically one of those",
    "start": "2455510",
    "end": "2461180"
  },
  {
    "text": "argument of the cool function at some point of the application execution is actually a process object and so you can",
    "start": "2461180",
    "end": "2468620"
  },
  {
    "text": "leverage the process object to get back access to node is an example of you know",
    "start": "2468620",
    "end": "2477260"
  },
  {
    "text": "an application is vulnerable to that and again this is apply to basically all application that don't use context",
    "start": "2477260",
    "end": "2483410"
  },
  {
    "text": "isolation with some caveats but most of them is matter most which is slack clone",
    "start": "2483410",
    "end": "2492860"
  },
  {
    "text": "type of application use a webview inside a browser window and so I will be",
    "start": "2492860",
    "end": "2500810"
  },
  {
    "text": "showing here briefly the demo",
    "start": "2500810",
    "end": "2505090"
  },
  {
    "text": "so here we have matter most this bag is not patched yet they are aware of the",
    "start": "2516340",
    "end": "2523120"
  },
  {
    "text": "issue in enabling context as relations not trivial",
    "start": "2523120",
    "end": "2529150"
  },
  {
    "text": "so what we're doing here we are doing prototype call where we are overriding",
    "start": "2529150",
    "end": "2540240"
  },
  {
    "text": "the basically we are piggybacking on the arguments and at some point is the",
    "start": "2540240",
    "end": "2546400"
  },
  {
    "text": "cushion will actually bring as the argument a process and once we have a process we can use main module require",
    "start": "2546400",
    "end": "2553000"
  },
  {
    "text": "to get access to other modules and so",
    "start": "2553000",
    "end": "2558030"
  },
  {
    "text": "the first part is actually giving access to to do is basically over run in to",
    "start": "2558030",
    "end": "2566080"
  },
  {
    "text": "improve that pollution and then the last part is triggering in advance in this case they reload which trigger the",
    "start": "2566080",
    "end": "2573010"
  },
  {
    "text": "execution of the call with one or the argument being a process so what are the",
    "start": "2573010",
    "end": "2586660"
  },
  {
    "start": "2584000",
    "end": "2584000"
  },
  {
    "text": "solution around context isolation or rather if you enable context isolation",
    "start": "2586660",
    "end": "2591970"
  },
  {
    "text": "as they demonstrate at the very very beginning you can't export things to the window so how do you do well for the",
    "start": "2591970",
    "end": "2599740"
  },
  {
    "text": "preload problem specifically you can use VM context which basically create you",
    "start": "2599740",
    "end": "2606370"
  },
  {
    "text": "can programmatically create a new context this will solve the problem of preload it will not solve the problem",
    "start": "2606370",
    "end": "2612700"
  },
  {
    "text": "around context isolation affecting the electron code but it's better than",
    "start": "2612700",
    "end": "2618010"
  },
  {
    "text": "nothing and it's easy to implement because it's it's just about adding code to the preload the real solution to this",
    "start": "2618010",
    "end": "2625240"
  },
  {
    "text": "problem is having context isolation on and using post messages instead of just",
    "start": "2625240",
    "end": "2632260"
  },
  {
    "text": "appending object to the window object if you have very complex messages that you",
    "start": "2632260",
    "end": "2637990"
  },
  {
    "text": "need to pass around or very complex object there is electron balance which is a module that allow you to serialize",
    "start": "2637990",
    "end": "2644380"
  },
  {
    "text": "and deserialize objects so to go through",
    "start": "2644380",
    "end": "2649750"
  },
  {
    "text": "the conclusion it is possible to build electron a platoon that are secure you really need",
    "start": "2649750",
    "end": "2656080"
  },
  {
    "start": "2650000",
    "end": "2650000"
  },
  {
    "text": "to know the framework it's evolving very fast so you do need to spend time figuring out how things are changing and",
    "start": "2656080",
    "end": "2662640"
  },
  {
    "text": "what are the new settings that may be relevant for security for example like context isolation you know the first you",
    "start": "2662640",
    "end": "2673630"
  },
  {
    "text": "know best advice I can give you is do not load do not load remote content the",
    "start": "2673630",
    "end": "2678910"
  },
  {
    "text": "entry point is always navigating to some attacker provided page in order to",
    "start": "2678910",
    "end": "2686410"
  },
  {
    "text": "execute JavaScript so XSS and and all you know the old-school vulnerability still apply so use modern jazz framework",
    "start": "2686410",
    "end": "2695140"
  },
  {
    "text": "that already protect against that and then on top of that you need to have secure configuration but after this",
    "start": "2695140",
    "end": "2701320"
  },
  {
    "text": "presentation you awfully understand you also need to pay attention of what you are exposing in preload particular",
    "start": "2701320",
    "end": "2707560"
  },
  {
    "text": "around dangerous primitives and IPC we released a tool we just released a new",
    "start": "2707560",
    "end": "2714580"
  },
  {
    "text": "version that has a bit more checks on onager on our github page so you can use",
    "start": "2714580",
    "end": "2720910"
  },
  {
    "text": "this tool to scan for basically those common vulnerabilities and with that my",
    "start": "2720910",
    "end": "2727840"
  },
  {
    "text": "you know we just 45 minutes we have five more minutes so we can I can take one",
    "start": "2727840",
    "end": "2734110"
  },
  {
    "text": "more question if there is",
    "start": "2734110",
    "end": "2737190"
  },
  {
    "text": "no questions let's see if we can get at",
    "start": "2746070",
    "end": "2752220"
  },
  {
    "text": "least one cos no it's it's not like it's",
    "start": "2752220",
    "end": "2759800"
  },
  {
    "text": "it there's no there is no solution meaning it's the latest version is still vulnerable the reason it's in my",
    "start": "2759800",
    "end": "2767310"
  },
  {
    "text": "presentation it's a public bug so I didn't see the need of of who's getting",
    "start": "2767310",
    "end": "2772890"
  },
  {
    "text": "something it's on the internet already but the problematics around the context isolation is that people have been",
    "start": "2772890",
    "end": "2779760"
  },
  {
    "text": "traditionally appending stuff to the window object and so migrating from this design this type of designing",
    "start": "2779760",
    "end": "2786510"
  },
  {
    "text": "application it's not a one line code change so it does require some time and",
    "start": "2786510",
    "end": "2794210"
  },
  {
    "text": "you know you no matter most approach is because it does rely on having an XSS or",
    "start": "2794210",
    "end": "2802440"
  },
  {
    "text": "having a way to redirect the user execution to an arbitrary JavaScript it it is not an exploit a vulnerability by",
    "start": "2802440",
    "end": "2810330"
  },
  {
    "text": "itself there will be you know - thing is that they will be fixing this bug again",
    "start": "2810330",
    "end": "2817110"
  },
  {
    "text": "there's an open ticket and I see some traction I think it just it does involve",
    "start": "2817110",
    "end": "2822690"
  },
  {
    "text": "redesigning a bit of the preload not",
    "start": "2822690",
    "end": "2831990"
  },
  {
    "text": "really no it's",
    "start": "2831990",
    "end": "2835130"
  },
  {
    "text": "any workaround would rely on modifying the application so if you enable context",
    "start": "2837900",
    "end": "2847479"
  },
  {
    "text": "isolation the app will break so it's not even possible to say okay I want to just",
    "start": "2847479",
    "end": "2852849"
  },
  {
    "text": "lose some features that just not possible",
    "start": "2852849",
    "end": "2857068"
  },
  {
    "text": "thanks for asking at least the question oh and thanks a",
    "start": "2860339",
    "end": "2867400"
  },
  {
    "text": "lot for for listening [Applause]",
    "start": "2867400",
    "end": "2877069"
  }
]