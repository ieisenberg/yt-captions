[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": "uh the session coming up next pixel perfect timing attacks by Paul Stone um I just ask that you hold your questions",
    "start": "160",
    "end": "6120"
  },
  {
    "text": "to the end of the session we'll make sure that there's time at the end uh there's a mic down this Row for you to",
    "start": "6120",
    "end": "11320"
  },
  {
    "text": "ask your question if you're from the back or if you yell out from the front uh Paul will be so kind as to repeat",
    "start": "11320",
    "end": "16560"
  },
  {
    "text": "your question and then answer it uh I would also ask that uh on your way out if you just scan your badge um they'll",
    "start": "16560",
    "end": "24000"
  },
  {
    "text": "email you the evaluation form and the feedback is very appreciated by uh both black hat and the speakers so uh thank",
    "start": "24000",
    "end": "30439"
  },
  {
    "text": "you guys for doing that and without further Ado I'll pass the",
    "start": "30439",
    "end": "35000"
  },
  {
    "text": "floor okay thank you guys for coming um I'm Paul Stone uh and I'm from Context",
    "start": "35520",
    "end": "41600"
  },
  {
    "text": "information security we're based in the UK and I'm going to talk today about timing",
    "start": "41600",
    "end": "46719"
  },
  {
    "text": "attacks so timing attacks uh one way of looking at them is as a black box with",
    "start": "46719",
    "end": "52359"
  },
  {
    "text": "some Secret inside that we want to find out um and we can use a timing attack to try and get those secrets so we put some",
    "start": "52359",
    "end": "59640"
  },
  {
    "text": "input into this black box and we get an output and we time how long the output takes to takes to come through the box",
    "start": "59640",
    "end": "67240"
  },
  {
    "text": "and then we give another input into the box and get another output and we time it again and actually the output from",
    "start": "67240",
    "end": "73880"
  },
  {
    "text": "the box isn't necessarily all that important what we're interested in is the times and if we can correlate the",
    "start": "73880",
    "end": "80000"
  },
  {
    "text": "inputs we put into the box with the times then perhaps we can uh find out some something interesting about what's",
    "start": "80000",
    "end": "85960"
  },
  {
    "text": "going on inside that box um and and usually we have to give quite a few different inputs uh to figure out uh",
    "start": "85960",
    "end": "92759"
  },
  {
    "text": "what we're trying to what we're trying to get out so I'm talking about browser timing attacks",
    "start": "92759",
    "end": "98880"
  },
  {
    "start": "95000",
    "end": "95000"
  },
  {
    "text": "and what kind of black boxes are there in web browsers so um one of the one of",
    "start": "98880",
    "end": "105719"
  },
  {
    "text": "the main black boxes is also the the foundation of browser security and",
    "start": "105719",
    "end": "110880"
  },
  {
    "text": "that's the same origin policy so basically the same orig policy says that one website shouldn't be able to read or",
    "start": "110880",
    "end": "118159"
  },
  {
    "text": "modify any data from another website it so the online banking website you're logged",
    "start": "118159",
    "end": "125280"
  },
  {
    "text": "into shouldn't be able to uh be affected by any other website you have open at the same",
    "start": "125280",
    "end": "131879"
  },
  {
    "text": "time so even though uh there's there's this restriction with the same origin policy websites can still make requests",
    "start": "131879",
    "end": "138680"
  },
  {
    "text": "to other websites and there's various different ways of doing that one way is with uh an image so one website can load",
    "start": "138680",
    "end": "144640"
  },
  {
    "text": "load an image from another website and it will display on that site but it can't get it you can't actually see the content of the image and there's other",
    "start": "144640",
    "end": "151519"
  },
  {
    "text": "things as well you can uh one website can lo a script from from another website uh and things like XML HTP",
    "start": "151519",
    "end": "158040"
  },
  {
    "text": "requests can can make make requests um but by default the website can't read",
    "start": "158040",
    "end": "163239"
  },
  {
    "text": "the results back so uh so yeah those are kind of black boxes uh from the point of view of",
    "start": "163239",
    "end": "169879"
  },
  {
    "text": "a website they can put some data in but they can't get any data out so the particular black boxes that",
    "start": "169879",
    "end": "176760"
  },
  {
    "text": "I'm interested in today um are these two two things one is uh link colors so when",
    "start": "176760",
    "end": "183280"
  },
  {
    "text": "you have links in a web page uh pointing to other websites usually they're different colors depending on whe",
    "start": "183280",
    "end": "188440"
  },
  {
    "text": "whether you visited visited those or not so that's kind of some private information uh and the second thing is",
    "start": "188440",
    "end": "194440"
  },
  {
    "text": "if frames so um by default one website can load another website uh inside uh",
    "start": "194440",
    "end": "202480"
  },
  {
    "text": "inside a frame and although it can do that it can't actually uh get inside the",
    "start": "202480",
    "end": "207680"
  },
  {
    "text": "if frame it can't see what's inside there again because of the same origin policy so here's a just an example of",
    "start": "207680",
    "end": "212959"
  },
  {
    "text": "that so here's a here's a website any website can do this it can put a bunch bunch of links on the web page and it",
    "start": "212959",
    "end": "218480"
  },
  {
    "text": "can frame in this case uh just your Amazon account page if you're logged in um and there there there's private data",
    "start": "218480",
    "end": "224360"
  },
  {
    "text": "that you can see there so you can see that um as a person using a browser but the web page can't see that private",
    "start": "224360",
    "end": "231120"
  },
  {
    "text": "information so it can't tell if those links are visited and although it can load in the Amazon page it can't uh you",
    "start": "231120",
    "end": "237640"
  },
  {
    "text": "can't see what's inside there so uh today I'm going to be talking about uh doing browser history sifting",
    "start": "237640",
    "end": "245120"
  },
  {
    "text": "with timing attacks I'm going to look at how you can read pixels from W frames using timing saacks and I'm going to use",
    "start": "245120",
    "end": "251840"
  },
  {
    "text": "uh relatively new browser Fe features um HTML 5 and related things to do that and",
    "start": "251840",
    "end": "259479"
  },
  {
    "text": "uh I've got some some fun demos as well so uh before I talk about all the",
    "start": "259479",
    "end": "265400"
  },
  {
    "text": "uh the new fun stuff I'm going to show you an example of a timing attack that's been around for uh forever pretty much",
    "start": "265400",
    "end": "271720"
  },
  {
    "text": "um just as a just as an example of how timing attacks can work so this is called page request",
    "start": "271720",
    "end": "279080"
  },
  {
    "start": "275000",
    "end": "275000"
  },
  {
    "text": "timing and it's about timing n network requests so let's say that uh I want to",
    "start": "279080",
    "end": "285919"
  },
  {
    "text": "know if you're logged into to Gmail I get you to visit my website and I run some JavaScript to try and figure out if",
    "start": "285919",
    "end": "292000"
  },
  {
    "text": "you're logged in so here's how the JavaScript will work so first of all it gets the the",
    "start": "292000",
    "end": "298120"
  },
  {
    "text": "current time the time stamp um date. now will give you the current time",
    "start": "298120",
    "end": "303280"
  },
  {
    "text": "milliseconds and then we use uh an image uh we use an image request so um in",
    "start": "303280",
    "end": "310280"
  },
  {
    "text": "browsers or in JavaScript the the simplest way to make a a network request is uh with an image now you don't",
    "start": "310280",
    "end": "316759"
  },
  {
    "text": "actually have to request uh an image from the network you can request any URL",
    "start": "316759",
    "end": "322199"
  },
  {
    "text": "that you want to basically uh so in this case we're going to request uh the Gmail website so as soon as we set image. sour",
    "start": "322199",
    "end": "329840"
  },
  {
    "text": "the browser will go off and uh start fetching that URL uh and of course it's not not actually an image um and",
    "start": "329840",
    "end": "335680"
  },
  {
    "text": "eventually the browser will realize that and go hang on uh that's not an image",
    "start": "335680",
    "end": "340720"
  },
  {
    "text": "and uh it will call my on error call back so it'll call this function and then I can get the time stump again and",
    "start": "340720",
    "end": "347319"
  },
  {
    "text": "figure out how long that Network request took so in terms of the Black Box the",
    "start": "347319",
    "end": "354520"
  },
  {
    "text": "image request is our black box and the URL that we give is our input",
    "start": "354520",
    "end": "360280"
  },
  {
    "text": "the on error callback uh is is the output of the black box and the thing that we're interested in is is the time",
    "start": "360280",
    "end": "366479"
  },
  {
    "text": "it takes so we use dat. now to time how long that uh that process",
    "start": "366479",
    "end": "372199"
  },
  {
    "text": "takes so what happens uh if you're not logged into Gmail well uh when the page requests uh the",
    "start": "372199",
    "end": "379080"
  },
  {
    "text": "Gmail site um it will uh Gmail will redirect to the Google accounts page and",
    "start": "379080",
    "end": "387000"
  },
  {
    "text": "um the browser will uh even though you just one request it will keep following the redirects until it gets a result so",
    "start": "387000",
    "end": "393000"
  },
  {
    "text": "in this case it will redirect to the to the login page and if you are logged into Gmail",
    "start": "393000",
    "end": "398520"
  },
  {
    "text": "then uh first of all you'll be redirected to the to the accounts page but because you're logged in uh that",
    "start": "398520",
    "end": "403840"
  },
  {
    "text": "will redirect you back to Gmail and then it will do a couple more redirects so because there are more uh",
    "start": "403840",
    "end": "410639"
  },
  {
    "text": "redirects to follow in the second case that will take longer so in the first case it's about 400 milliseconds in the",
    "start": "410639",
    "end": "415800"
  },
  {
    "text": "second case about 700 so uh we can uh take a bunch of test this a few times",
    "start": "415800",
    "end": "422879"
  },
  {
    "text": "so we send a bunch of uh requests when we're logged in and when we're not logged in and we can plot those in the graph and see that yeah on average uh if",
    "start": "422879",
    "end": "430599"
  },
  {
    "text": "you're if you're logged in then it the request will take longer um so let's say that I do this I",
    "start": "430599",
    "end": "437240"
  },
  {
    "text": "make my web page and uh I do this request and uh I get a result of 500",
    "start": "437240",
    "end": "443960"
  },
  {
    "text": "millisecs so are you logged into Gmail or not well this brings us to the some",
    "start": "443960",
    "end": "449840"
  },
  {
    "text": "of the difficulties of of doing timing attacks um and there were quite a few",
    "start": "449840",
    "end": "454879"
  },
  {
    "start": "453000",
    "end": "453000"
  },
  {
    "text": "problems with doing timing attacks in the world and making them reliable so one is um Network latency in Jetta um",
    "start": "454879",
    "end": "461479"
  },
  {
    "text": "each time you make a request it will take different amounts of time especially if you're doing things over the",
    "start": "461479",
    "end": "466840"
  },
  {
    "text": "network and also we don't I don't necessarily know how long uh the the",
    "start": "466840",
    "end": "472879"
  },
  {
    "text": "that response will take from your computer so I might have tested on my computer and it takes a certain amount of time you may be may be somewhere else",
    "start": "472879",
    "end": "479159"
  },
  {
    "text": "in the world you may be closer or further away from Google servers uh you may have a faster or slower computer and also things running on your",
    "start": "479159",
    "end": "486159"
  },
  {
    "text": "own computer can uh disrupt the timing so if you're encoding a video or got",
    "start": "486159",
    "end": "491400"
  },
  {
    "text": "lots of other browser tabs open it can affect the timings so these are problems with doing a reliable timing attack but",
    "start": "491400",
    "end": "498280"
  },
  {
    "text": "they can be overcome so to overcome the Jitter we can take multiple measur",
    "start": "498280",
    "end": "503560"
  },
  {
    "text": "measurements and take an average um if I don't know how long a request to Google might take from your",
    "start": "503560",
    "end": "508879"
  },
  {
    "text": "computer well we can we can calibrate against a server that we know will take a certain amount",
    "start": "508879",
    "end": "513880"
  },
  {
    "text": "of time so we might uh make a request to a Google server that will always return the same",
    "start": "513880",
    "end": "519399"
  },
  {
    "text": "response and um if the if there are things other network requests running or other processes uh the JavaScript and",
    "start": "519399",
    "end": "526080"
  },
  {
    "text": "web page can uh can wait maybe just a few seconds um until uh until the",
    "start": "526080",
    "end": "532200"
  },
  {
    "text": "computer's idle and it can get more relable measurements okay so that was that was a",
    "start": "532200",
    "end": "538000"
  },
  {
    "text": "a timing sack that's um been possible since forever so just as an example so now we're going to I'm going to look at",
    "start": "538000",
    "end": "543959"
  },
  {
    "text": "how we can sniff browser history with with timing attacks so a long time ago about three",
    "start": "543959",
    "end": "551880"
  },
  {
    "start": "548000",
    "end": "548000"
  },
  {
    "text": "years ago it was possible to for every every web browser could do this it could sniff your browser history it could find",
    "start": "551880",
    "end": "557079"
  },
  {
    "text": "out what websites you visited and it was very very simple to do so here here's a code that would need to do it first of",
    "start": "557079",
    "end": "563320"
  },
  {
    "text": "all it would set some styles on on links so this basically says uh all links are",
    "start": "563320",
    "end": "568399"
  },
  {
    "text": "blue in color unless you have visited them in which case they're R and then uh the site can create a link",
    "start": "568399",
    "end": "575160"
  },
  {
    "text": "on on the web page say to PayPal and then this little bit of",
    "start": "575160",
    "end": "580440"
  },
  {
    "text": "JavaScript basically gets a a reference to the to the link and asks the browser what color the link is very",
    "start": "580440",
    "end": "587079"
  },
  {
    "text": "straightforward um and if it's red then it's visited if it's blue it's not visited and it was",
    "start": "587079",
    "end": "593839"
  },
  {
    "text": "possible sorry uh yeah it's possible",
    "start": "593839",
    "end": "599920"
  },
  {
    "text": "you can make this entirely invisible to the user so it um you wouldn't necessarily see that that PayPal link on",
    "start": "599920",
    "end": "605560"
  },
  {
    "text": "the screen um so it possible to do this uh for thousands and thousands and",
    "start": "605560",
    "end": "611200"
  },
  {
    "text": "thousands of links in a very short space of time um and you could build up a profile of the eer which is obviously a",
    "start": "611200",
    "end": "617200"
  },
  {
    "text": "big privacy problem so uh someone actually did a study uh in 2010 and they looked at the",
    "start": "617200",
    "end": "623839"
  },
  {
    "text": "top 50,000 most popular sites and found that a whole bunch of them were actually",
    "start": "623839",
    "end": "631040"
  },
  {
    "text": "we're actually using this uh sniffing attack to find out what sites people have visited and send those results back",
    "start": "631040",
    "end": "637040"
  },
  {
    "text": "to a server so um there were some adult sites that were doing this and there was at least one ad Network that was uh",
    "start": "637040",
    "end": "643639"
  },
  {
    "text": "doing this and and sending out this Java script to lots of different websites uh to to find this stuff",
    "start": "643639",
    "end": "649240"
  },
  {
    "text": "out so and and there was there was quite a big fuss about it um you know that this has gone from being a kind of a fun",
    "start": "649240",
    "end": "656160"
  },
  {
    "text": "theoretical attack to be to something that was actually uh going on in the wild and there were you know there were",
    "start": "656160",
    "end": "662000"
  },
  {
    "text": "lawsuits and things like that so it it was quite uh it quite a serious stuff but the history sniffing attack",
    "start": "662000",
    "end": "669040"
  },
  {
    "text": "has now been fixed so Milla came up with a solution for it um it wasn't simple um",
    "start": "669040",
    "end": "674800"
  },
  {
    "text": "so in 2010 they proposed to fix um this this had been possible for about 10 years in every single web browser um",
    "start": "674800",
    "end": "682519"
  },
  {
    "text": "this this attack had been uh had been there um but now all browsers have implemented this fix um and there are",
    "start": "682519",
    "end": "688279"
  },
  {
    "text": "lots of restrictions on what you can do with link so you can only change the color of the link you can't change uh",
    "start": "688279",
    "end": "694360"
  },
  {
    "text": "the background image or the size if it's visited and and the browser will actually lie to you now if you ask the browser what color link it is it'll",
    "start": "694360",
    "end": "700680"
  },
  {
    "text": "always tell you that it's not visited even though it is so um I quite like the history",
    "start": "700680",
    "end": "706959"
  },
  {
    "text": "sniffing attack I first came across it um back before I was uh in this industry",
    "start": "706959",
    "end": "712079"
  },
  {
    "text": "and I thought it was quite fun so um I decided to bring it back with a timing attack so how can we do that",
    "start": "712079",
    "end": "720560"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "so uh request animation frame is part of HTML 5 okay technically it's not part of",
    "start": "720560",
    "end": "726160"
  },
  {
    "text": "HTML 5 uh but there's HML 5 in the title of my talk so I you know let's let's pretend it is lots of other people do as",
    "start": "726160",
    "end": "733320"
  },
  {
    "text": "well so what is request animation frame basically it's a it lets um web pages do",
    "start": "733320",
    "end": "741160"
  },
  {
    "text": "nice smooth animations so if you've done a bit of JavaScript before you might have heard of set timeout so set timeout",
    "start": "741160",
    "end": "748199"
  },
  {
    "text": "uh you give it a call back function and a and a time delay and we'll call back um after say you know 10 milliseconds or",
    "start": "748199",
    "end": "755079"
  },
  {
    "text": "50 milliseconds and in the past you you could use set time out to do animations but request animation frame um is synced",
    "start": "755079",
    "end": "762800"
  },
  {
    "text": "to the refresh uh rate of your monitor so the idea is you you give uh you pass",
    "start": "762800",
    "end": "768040"
  },
  {
    "text": "a function to request animation frame and it will call back your function just before the browser is about to draw the",
    "start": "768040",
    "end": "773959"
  },
  {
    "text": "next frame so the idea is it will give you nice smooth animations roughly um six times a second it will update the",
    "start": "773959",
    "end": "780440"
  },
  {
    "text": "update the the screen almost monitors about every 16",
    "start": "780440",
    "end": "785519"
  },
  {
    "text": "milliseconds so most of the time you can get a nice smooth animation um but if uh",
    "start": "785519",
    "end": "791399"
  },
  {
    "text": "if things are taking a bit too long if the JavaScript is a bit too complex or there's too many uh complex Graphics in",
    "start": "791399",
    "end": "796720"
  },
  {
    "text": "the web page things will slow down and and the uh the interval between the frames that are painted will slow down",
    "start": "796720",
    "end": "802839"
  },
  {
    "text": "too so a quest animation frame is interesting because we can use it to measure the frame weight of the entire",
    "start": "802839",
    "end": "808920"
  },
  {
    "text": "web web page not just our our animations that we're doing but everything that's going on on our web page so when I saw",
    "start": "808920",
    "end": "817240"
  },
  {
    "text": "uh when I saw this uh this new function appear um in browsers I thought you know maybe we can do something interesting",
    "start": "817240",
    "end": "823040"
  },
  {
    "text": "with this to do with timing attacks so I'm going to show you a a quick video now and this is a video of",
    "start": "823040",
    "end": "831639"
  },
  {
    "text": "let me try and find it so this is a video of uh me in Internet Explorer uh 10 typing in the",
    "start": "831639",
    "end": "839639"
  },
  {
    "text": "search result to Google um and going to Wikipedia absolutely nothing interesting",
    "start": "839639",
    "end": "845240"
  },
  {
    "text": "there you might think but I'm just going to go back and and kind of Step through that in in oh slow",
    "start": "845240",
    "end": "853360"
  },
  {
    "text": "motion and we're going to see something slightly [Music] interesting right so I'm going to step",
    "start": "854399",
    "end": "861199"
  },
  {
    "text": "through now just as just as the search results were about to appear we're going to see something interesting W fairly",
    "start": "861199",
    "end": "867720"
  },
  {
    "text": "interesting right so the search results have appeared there and just keep your eye on",
    "start": "867720",
    "end": "873320"
  },
  {
    "text": "this this link to Wikipedia here so at the moment this link is blue uh and as we step a few frames",
    "start": "873320",
    "end": "880680"
  },
  {
    "text": "forward it's to turn purple it's a little bit subtle there the colors not too different but um hopefully you",
    "start": "880680",
    "end": "885920"
  },
  {
    "text": "spotted that uh let's back it up again okay so blue frame frame frame",
    "start": "885920",
    "end": "893720"
  },
  {
    "text": "purple so and the same thing happens when uh the Wikipedia page loads up as well uh these links are blue and I think",
    "start": "893720",
    "end": "901639"
  },
  {
    "text": "they turn purple yeah there so you might be thinking why is",
    "start": "901639",
    "end": "907199"
  },
  {
    "text": "that interesting well I'll tell you so what's happened there um so this uh I",
    "start": "907199",
    "end": "916000"
  },
  {
    "text": "recorded that in inet Explorer and let's break it down frame by frame so first of all the page begins",
    "start": "916000",
    "end": "922519"
  },
  {
    "text": "to load and we have nothing on the web page in in our first frame and then um",
    "start": "922519",
    "end": "927959"
  },
  {
    "text": "in the HTML or or possibly JavaScript inserts a link into a web page uh let's say uh link to",
    "start": "927959",
    "end": "934000"
  },
  {
    "text": "Google Now when uh the browser knows it needs to render this link it it does a",
    "start": "934000",
    "end": "939720"
  },
  {
    "text": "request into its history database to find out if that link is visited but it's an asynchronous request it doesn't",
    "start": "939720",
    "end": "945920"
  },
  {
    "text": "wait for that uh response to come back it just goes ahead and draws the link and it draws it as unvisited because it",
    "start": "945920",
    "end": "951959"
  },
  {
    "text": "doesn't know yet uh if it is visited so um this request takes a few",
    "start": "951959",
    "end": "957560"
  },
  {
    "text": "frames to come back and then that database query completes and",
    "start": "957560",
    "end": "962959"
  },
  {
    "text": "it finds out that actually uh google.com is visited so it repaints the",
    "start": "962959",
    "end": "969000"
  },
  {
    "text": "link so we can think of this as maybe five frames but actually the browser",
    "start": "969000",
    "end": "975519"
  },
  {
    "text": "only repainted only had to draw something on the screen in two of those frames so it drew it first unvisited and",
    "start": "975519",
    "end": "981120"
  },
  {
    "text": "then uh when it found out it visited it redrew it so what if the link wasn't visited let's go step step back and okay",
    "start": "981120",
    "end": "988959"
  },
  {
    "text": "okay so the database query completes and we find out the Link's not bisted well in that case nothing happens the browser",
    "start": "988959",
    "end": "995560"
  },
  {
    "text": "doesn't need to repaint the link and we only have one uh frame where something is actually painted on the",
    "start": "995560",
    "end": "1002160"
  },
  {
    "start": "1002000",
    "end": "1002000"
  },
  {
    "text": "screen so I thought well if we can detect those repaints then perhaps we",
    "start": "1002160",
    "end": "1008240"
  },
  {
    "text": "can find out if that link had visited but the problem is that request animation frame doesn't tell us about",
    "start": "1008240",
    "end": "1014600"
  },
  {
    "text": "repaints uh it only uh tells us um uh the time between frames but perhaps if",
    "start": "1014600",
    "end": "1021720"
  },
  {
    "text": "we could slow down the frames without painting occurs then we could detect the the repaint so how can we slow things down",
    "start": "1021720",
    "end": "1029520"
  },
  {
    "text": "uh well one one way uh it's pretty straightforward is using something called text Shadow which is part of CSS",
    "start": "1029520",
    "end": "1035319"
  },
  {
    "text": "so we can take a nice boring normal looking link and apply a nice funky text Shadow to it so in this case uh you can",
    "start": "1035319",
    "end": "1042120"
  },
  {
    "text": "specify an offset a blur radius and a color and you can actually have more than one Shadow on a link so in that",
    "start": "1042120",
    "end": "1047959"
  },
  {
    "text": "case there we've got two shadows and this slows things down a lot and also uh if rather than just having one link we",
    "start": "1047959",
    "end": "1054039"
  },
  {
    "text": "can have lots and lots of links then all of those links would have to be repainted um if the browser finds out",
    "start": "1054039",
    "end": "1059200"
  },
  {
    "text": "it's visited so hopefully this will slow that things down a bit so here's how it might might work so",
    "start": "1059200",
    "end": "1066880"
  },
  {
    "text": "in our normal case with a nice uh quick link to draw every frame we're going at 60 frames per second Full Throttle every",
    "start": "1066880",
    "end": "1074240"
  },
  {
    "text": "T frame takes an equal amount of time to draw but if we apply um the teex Shadow",
    "start": "1074240",
    "end": "1080120"
  },
  {
    "text": "and have lots and lots of links then perhaps the uh those frames where the repainting occurs will be slower and we",
    "start": "1080120",
    "end": "1087039"
  },
  {
    "text": "can detect that happening with request animation frame so let's go back to the the black",
    "start": "1087039",
    "end": "1093320"
  },
  {
    "text": "box again so this time the entire page rendering pipeline",
    "start": "1093320",
    "end": "1100559"
  },
  {
    "text": "is our black box and everything we draw in the screen is is our input but in this case specifically the uh the link",
    "start": "1100559",
    "end": "1106919"
  },
  {
    "text": "and the URL the URL of the link is is our input and the request animation frame",
    "start": "1106919",
    "end": "1112240"
  },
  {
    "text": "callback is is our output and of course the delay between the frames is the timing date that we",
    "start": "1112240",
    "end": "1117640"
  },
  {
    "text": "can hopefully use to figure out if that link is visited so here's how this uh how here's",
    "start": "1117640",
    "end": "1123240"
  },
  {
    "text": "how this attack might work so we have a whole bunch of URLs we want to find out if they visited and for each URL we we",
    "start": "1123240",
    "end": "1129720"
  },
  {
    "text": "make a whole bunch of Link elements on on the page with nice teex shadow to make it nice and slow and uh as soon as",
    "start": "1129720",
    "end": "1136360"
  },
  {
    "text": "we we put those links on the page we use request animation frame to uh time the next few frames how long they take to",
    "start": "1136360",
    "end": "1143159"
  },
  {
    "text": "draw and in theory we if we have one slow frame then we know the URL isn't",
    "start": "1143159",
    "end": "1149000"
  },
  {
    "text": "visited because only one repaint occurred when the links were originally drawn and if there are two slow frames then uh we know the URL is visited",
    "start": "1149000",
    "end": "1156000"
  },
  {
    "text": "because we've had a second repaint so let me",
    "start": "1156000",
    "end": "1161919"
  },
  {
    "text": "uh let me show you a quick demo of that so this is uh in Explorer 10 it work",
    "start": "1161919",
    "end": "1168720"
  },
  {
    "text": "Works in in Explorer 11 as well uh",
    "start": "1168720",
    "end": "1175200"
  },
  {
    "text": "okay so what's going on here so um just say know this is um this is what I've",
    "start": "1175200",
    "end": "1181000"
  },
  {
    "text": "been using to experiment with this technique but um none of this needs to be visible on the web page right so all",
    "start": "1181000",
    "end": "1186360"
  },
  {
    "text": "of this could be completely hidden it could be happening inside an ads advert iframe and not be visible to the user at",
    "start": "1186360",
    "end": "1193240"
  },
  {
    "text": "all but this is just so we can see what's going on so what what is happening here so this web page is cped",
    "start": "1193240",
    "end": "1199559"
  },
  {
    "text": "link through a whole bunch of links okay so and each time uh so for the first",
    "start": "1199559",
    "end": "1204960"
  },
  {
    "text": "link it sets all of these links here to that particular URL so there's a whole bunch of them they've got a text shadow",
    "start": "1204960",
    "end": "1211360"
  },
  {
    "text": "um and they take a time time to draw so this page sets the the first link to the",
    "start": "1211360",
    "end": "1216480"
  },
  {
    "text": "first URL and then it times the next five frames okay so these times here you",
    "start": "1216480",
    "end": "1222679"
  },
  {
    "text": "can see in the first the first frame it always takes quite a long time to draw um and then uh the second frame is",
    "start": "1222679",
    "end": "1231360"
  },
  {
    "text": "actually pretty much zero because it's trying to catch up trying to keep that 60 60 frames per second and then for the",
    "start": "1231360",
    "end": "1237120"
  },
  {
    "text": "links that I visited um that third frame is is quite a lot slower um so so we can see that um the",
    "start": "1237120",
    "end": "1244760"
  },
  {
    "text": "first and third frames the repaints occur and um so that the purple links are the ones that actually are visited",
    "start": "1244760",
    "end": "1251240"
  },
  {
    "text": "and the where the green ticks occur that's where um this page has detected that the repaints occurred so it's",
    "start": "1251240",
    "end": "1257919"
  },
  {
    "text": "basically keeps through them but as you can see it's it's pretty accurate and we can you know we can play with the numbers here so we can have a smaller",
    "start": "1257919",
    "end": "1263720"
  },
  {
    "text": "Tech Shadow which just speed things up a bit um or we can uh use CSS transforms",
    "start": "1263720",
    "end": "1269640"
  },
  {
    "text": "to uh make the the whole thing all those links pretty much invisible um but again",
    "start": "1269640",
    "end": "1277039"
  },
  {
    "text": "you know the the um it still works we can still detect those repaints so that's quite",
    "start": "1277039",
    "end": "1284559"
  },
  {
    "text": "fun so uh that works in in inst Explorer and it works in Chrome U sorry it works",
    "start": "1284919",
    "end": "1290279"
  },
  {
    "text": "in Internet Explorer and Firefox but Chrome is a little bit different chrome doesn't do asynchronous URL lookups",
    "start": "1290279",
    "end": "1296120"
  },
  {
    "text": "which is a bit of a problem basically um with chrome when you put a link on the screen it will wait for the um the",
    "start": "1296120",
    "end": "1303159"
  },
  {
    "text": "database lookup to come back before it Paints the link on the screen so the first time it Paints the link it will always be painted visited or not visited",
    "start": "1303159",
    "end": "1309960"
  },
  {
    "text": "so how can we how can we uh do the same thing in Chrome well um a slightly different way of",
    "start": "1309960",
    "end": "1316320"
  },
  {
    "text": "doing things is putting a link on the screen we know isn't visited and then we change the target of the link the HF to",
    "start": "1316320",
    "end": "1324240"
  },
  {
    "text": "a different URL and if that new URL is visited then Chrome will repaint the",
    "start": "1324240",
    "end": "1329520"
  },
  {
    "text": "link so here's what we do we have a link that's not visited uh we get a reference",
    "start": "1329520",
    "end": "1336120"
  },
  {
    "text": "to the link we change the HF and then we have to do a little uh little trick here so by default Chrome won't actually",
    "start": "1336120",
    "end": "1343159"
  },
  {
    "text": "restyle the link um if you just change the HF um I found that if you kind of touch one of the the sty attributes so",
    "start": "1343159",
    "end": "1349360"
  },
  {
    "text": "in this case to set the color to something and remove it um then Chrome will go aha I need to see if this I need",
    "start": "1349360",
    "end": "1354720"
  },
  {
    "text": "to resty this and it will repaint the link only if the new URL is",
    "start": "1354720",
    "end": "1359880"
  },
  {
    "text": "visited so we have a slightly different technique for for Chrome so we have a whole bunch of Link elements that we",
    "start": "1359880",
    "end": "1365360"
  },
  {
    "text": "keep on the screen uh with a text Shadow and then for each URL we want to check we update uh the link targets to that so",
    "start": "1365360",
    "end": "1373320"
  },
  {
    "text": "that URL we turn the next frame with request request animation frame and and",
    "start": "1373320",
    "end": "1379000"
  },
  {
    "text": "um if that frame was slow then we know the Link's visited um and it's quite a lot it's quite a bit uh quicker in",
    "start": "1379000",
    "end": "1384760"
  },
  {
    "text": "Chrome because um we don't because again because the lookup is not asynchronous",
    "start": "1384760",
    "end": "1389880"
  },
  {
    "text": "we only have to time one frame rather than the next few frames so let's go have a look at that",
    "start": "1389880",
    "end": "1395400"
  },
  {
    "text": "in",
    "start": "1395400",
    "end": "1397520"
  },
  {
    "text": "Chrome okay so this uh this D is slightly different it actually self- calibrates",
    "start": "1401360",
    "end": "1407080"
  },
  {
    "text": "so it tries to find uh a value for text Shadow uh and for the number of links it",
    "start": "1407080",
    "end": "1412440"
  },
  {
    "text": "tries to find uh a value which will give a nice timing difference so in this case it started off with a loan sort of a",
    "start": "1412440",
    "end": "1418600"
  },
  {
    "text": "small Tech Shadow and just a few links and then it calibrated by um it kept going increasing the numbers until it",
    "start": "1418600",
    "end": "1424880"
  },
  {
    "text": "got well in this case uh the the visit links were about 70 80",
    "start": "1424880",
    "end": "1430880"
  },
  {
    "text": "milliseconds so as you can see um it's gone through a whole bunch of links again only had to tie in one frame for",
    "start": "1430880",
    "end": "1436279"
  },
  {
    "text": "each link and again it's got um all of those correct I think y it's got all of those correct and it's found out B links",
    "start": "1436279",
    "end": "1443200"
  },
  {
    "text": "have visited um so so the change in the URL",
    "start": "1443200",
    "end": "1449279"
  },
  {
    "text": "uh also works in Firefox which is quite nice so yeah just just to summarize so",
    "start": "1449279",
    "end": "1455159"
  },
  {
    "text": "uh Firefox and Internet Explorer have the asynchronous lookups and uh Firefox",
    "start": "1455159",
    "end": "1460400"
  },
  {
    "text": "and chrome um have will repaint a link after the HF changes so we have two",
    "start": "1460400",
    "end": "1465640"
  },
  {
    "text": "techniques that work in three different browsers which I think is pretty good so how practical is this you might",
    "start": "1465640",
    "end": "1472240"
  },
  {
    "text": "be asking yourself well um yes we need to do the calibration um but that works pretty well uh to find out you know if",
    "start": "1472240",
    "end": "1478679"
  },
  {
    "text": "you've got a slower computer or a faster computer we need to find the right value for text shadow um as I said we can make",
    "start": "1478679",
    "end": "1483760"
  },
  {
    "text": "the links invisible so the user doesn't actually see this going on um and um how fast is it well uh",
    "start": "1483760",
    "end": "1490760"
  },
  {
    "text": "Chrome was the fastest out of of those and I could test about 16 Ur per second",
    "start": "1490760",
    "end": "1496360"
  },
  {
    "text": "which is okay but it's it's a bit slow um so I thought you know can I improve things a bit so here's a slightly different",
    "start": "1496360",
    "end": "1503080"
  },
  {
    "text": "technique I came up with for uh Internet Explorer so rather than testing one URL",
    "start": "1503080",
    "end": "1508320"
  },
  {
    "text": "at a time um I display a thousand different URLs all in one go so a thousand different different URLs want",
    "start": "1508320",
    "end": "1513480"
  },
  {
    "text": "to test if the user visited them and as we put them all on the screen even if we",
    "start": "1513480",
    "end": "1519640"
  },
  {
    "text": "detect one even if one of those links is repainted we can detect that repaint happening so it will be a slow frame um",
    "start": "1519640",
    "end": "1526360"
  },
  {
    "text": "so we know that if the re paint occurs then at least one of those links is visited so we divide them in two um and",
    "start": "1526360",
    "end": "1532960"
  },
  {
    "text": "then we display the first half on the screen and test for redraws and then we display the second half of the screen and test redraws and we keep splitting",
    "start": "1532960",
    "end": "1539320"
  },
  {
    "text": "them down uh until we get down to a single URL uh and I'll show you this",
    "start": "1539320",
    "end": "1545480"
  },
  {
    "text": "working in inst Explorer",
    "start": "1545480",
    "end": "1549360"
  },
  {
    "text": "[Music]",
    "start": "1563390",
    "end": "1566999"
  },
  {
    "text": "yeah it's working pretty nicely okay so this time assed assessed a th000 URLs in",
    "start": "1571840",
    "end": "1578720"
  },
  {
    "text": "17 seconds which is you know a lot quicker than we uh achieved with testing one at a",
    "start": "1578720",
    "end": "1584759"
  },
  {
    "text": "time okay",
    "start": "1585760",
    "end": "1589760"
  },
  {
    "text": "so um the uh the study they did in in 2010 when they found these websites that were doing this for real they were",
    "start": "1590840",
    "end": "1596960"
  },
  {
    "text": "testing between 20 and 200 URLs so the fact that we can test a th000 URLs uh in",
    "start": "1596960",
    "end": "1602960"
  },
  {
    "text": "16 seconds that's that's pretty good and kind of measures up with with uh what they those sites were doing um back",
    "start": "1602960",
    "end": "1609480"
  },
  {
    "text": "then so that's uh that's history slipping [Applause]",
    "start": "1609480",
    "end": "1616440"
  },
  {
    "text": "thank you so now we're going to go into the really fun stuff and it is how can we",
    "start": "1620159",
    "end": "1626640"
  },
  {
    "text": "read pixels from the from the screen using a timing attack so SVG um uh is a scalable Vector",
    "start": "1626640",
    "end": "1634480"
  },
  {
    "text": "graphic so it's basically um you can have parts and lines and circles and stuff um in an XML document um and this",
    "start": "1634480",
    "end": "1641919"
  },
  {
    "text": "this uh Graphics format is supported by all all browsers even Internet Explorer um",
    "start": "1641919",
    "end": "1649480"
  },
  {
    "text": "so uh where does HML 5 come into this well okay uh HTML 5 basically says that",
    "start": "1650240",
    "end": "1655760"
  },
  {
    "text": "you can embed uh and mix s SVG and HTML elements in the same document so yeah",
    "start": "1655760",
    "end": "1661679"
  },
  {
    "text": "SVG is not technically part of HTML 5 but yeah it kind of is so yeah okay so",
    "start": "1661679",
    "end": "1666720"
  },
  {
    "text": "this is SVG we've got nice simple lines paths text vector format um but the",
    "start": "1666720",
    "end": "1673480"
  },
  {
    "text": "reason I'm looking SVG is because of something called SVG filters filter effect",
    "start": "1673480",
    "end": "1678799"
  },
  {
    "start": "1677000",
    "end": "1677000"
  },
  {
    "text": "so this lets us do nice funky effects like this so we can go from boring SVG to fun funcy",
    "start": "1678799",
    "end": "1686039"
  },
  {
    "text": "effects so SVG filter effects um is a separate ASPC to to SVG and it defines",
    "start": "1686039",
    "end": "1693120"
  },
  {
    "text": "16 basic operations things like uh convolution Matrix matrices um blurs",
    "start": "1693120",
    "end": "1699200"
  },
  {
    "text": "displacement Maps uh change in colors and things like that and you can combine",
    "start": "1699200",
    "end": "1704360"
  },
  {
    "text": "these uh basic operations uh you can kind of stack them up into a single filter to make the kind of fancy effects",
    "start": "1704360",
    "end": "1710960"
  },
  {
    "text": "I just showed you so you can do cool things like lighting effects bump mapping and so on so SVG filters only affect the",
    "start": "1710960",
    "end": "1719080"
  },
  {
    "text": "appearance of uh those paths on the screen they don't actually um don't",
    "start": "1719080",
    "end": "1724799"
  },
  {
    "text": "actually change the paths um and it's not possible for JavaScript to actually kind of see what the SPG filter has done",
    "start": "1724799",
    "end": "1730600"
  },
  {
    "text": "so it's only a visual effect really so why am I looking at filter effects well um you can apply SVG",
    "start": "1730600",
    "end": "1739200"
  },
  {
    "text": "filters to any HTML element in uh in Chrome and in",
    "start": "1739200",
    "end": "1744440"
  },
  {
    "text": "Firefox and when I when I first found out you could do this I thought well there's got to be something bad you can",
    "start": "1744440",
    "end": "1749840"
  },
  {
    "text": "do with this right um so I thought okay let's see if I can uh do a do a timing",
    "start": "1749840",
    "end": "1755120"
  },
  {
    "text": "attack with SVG filters so how I why why would this work well SVG filters are pretty complex",
    "start": "1755120",
    "end": "1762559"
  },
  {
    "text": "algorithms right they're doing quite serious number crunching and um",
    "start": "1762559",
    "end": "1769799"
  },
  {
    "text": "perhaps if we can apply find a certain filter that we can apply to a part of a web page can we find a filter that takes",
    "start": "1770120",
    "end": "1778360"
  },
  {
    "text": "uh longer for some input than other inputs and if we could find you know if",
    "start": "1778360",
    "end": "1783480"
  },
  {
    "text": "we can find this filter then then perhaps we can do some some timing attacks so you know we have input a and",
    "start": "1783480",
    "end": "1791080"
  },
  {
    "text": "input B and if we apply the same filter to it it might take two different times that's the theory right so I had a look at at uh I had",
    "start": "1791080",
    "end": "1799279"
  },
  {
    "text": "look at the Firefox source code and I found this filter called Fe morphology so morphology is uh a fancy",
    "start": "1799279",
    "end": "1806799"
  },
  {
    "text": "term basically it is used to make lines thicker or thinner um and this filter",
    "start": "1806799",
    "end": "1811840"
  },
  {
    "text": "takes a uh takes a one per parameter radius and that controls how much uh",
    "start": "1811840",
    "end": "1817279"
  },
  {
    "text": "thinner or thicker the lines get so there there's kind of two modes there's dation which makes things thicker and",
    "start": "1817279",
    "end": "1822519"
  },
  {
    "text": "there's erosion which makes things thinner so how do this um how does this",
    "start": "1822519",
    "end": "1827760"
  },
  {
    "text": "work how does this algorithm work it's it's uh it's fairly simple so the radius",
    "start": "1827760",
    "end": "1833360"
  },
  {
    "text": "parameter defines the size of this box that Orange Box you see there and basically it will pass this box over",
    "start": "1833360",
    "end": "1840519"
  },
  {
    "text": "every single Pixel of the input image and uh each time it places a box it will",
    "start": "1840519",
    "end": "1846279"
  },
  {
    "text": "scan every single Pixel inside that box to find uh the darkest or the lightest pixel depending on if you're doing",
    "start": "1846279",
    "end": "1852000"
  },
  {
    "text": "erosion or delation um so in this case it will find the lightest pixel and it will set uh that pixel in the middle of",
    "start": "1852000",
    "end": "1858639"
  },
  {
    "text": "the box to to the color of the lightest pixel and I've got a l fancy little animation",
    "start": "1858639",
    "end": "1865120"
  },
  {
    "text": "here okay let's do that again so basically as it as it passes over um you can see that the line's getting thicker",
    "start": "1865120",
    "end": "1872440"
  },
  {
    "text": "um now basically um in the most basic case if you just implemented this with no optimizations um you would have to do",
    "start": "1872440",
    "end": "1880840"
  },
  {
    "text": "uh for a particular size image width time height and particular size box RX * r y you you multiply all those together",
    "start": "1880840",
    "end": "1887440"
  },
  {
    "text": "and that's how how many uh comparisons you have to do so this is potentially quite a slow thing to do",
    "start": "1887440",
    "end": "1892960"
  },
  {
    "text": "right um but uh in Firefox says this optimization to speed things up a bit so",
    "start": "1892960",
    "end": "1899200"
  },
  {
    "text": "this is the the source code um uh from the Fe morphology filter um a a year or",
    "start": "1899200",
    "end": "1904639"
  },
  {
    "text": "so ago in Firefox and you don't need to understand the the whole thing but basically um here's the uh the code the",
    "start": "1904639",
    "end": "1911960"
  },
  {
    "text": "screen at the moment is the the basic is the slow case the nonoptimized case and in this case uh the those took two for",
    "start": "1911960",
    "end": "1918600"
  },
  {
    "text": "Loops uh those are going through that entire uh uh box RX * a y and the the",
    "start": "1918600",
    "end": "1925880"
  },
  {
    "text": "loop is um doing RGB and Alpha but you see there's three for Loops there but",
    "start": "1925880",
    "end": "1931440"
  },
  {
    "text": "there's this optimized case um and in the optimized case it only checks the",
    "start": "1931440",
    "end": "1936760"
  },
  {
    "text": "right hand column of pixels in that box so only has to do uh scan through Ry uh",
    "start": "1936760",
    "end": "1942799"
  },
  {
    "text": "pixels basically so instead instead of scanning the whole box it just say one column and that's uh makes things a lot",
    "start": "1942799",
    "end": "1948960"
  },
  {
    "text": "quicker so when when does this best case occur well basically um if your image is",
    "start": "1948960",
    "end": "1954320"
  },
  {
    "text": "completely flat just a single color then you you will always hit that uh optimized",
    "start": "1954320",
    "end": "1960440"
  },
  {
    "text": "case um and if your if your image is uh completely random and noisy there's no flat areas then you're always going to",
    "start": "1960440",
    "end": "1967200"
  },
  {
    "text": "hit the worst case so we have two inputs that we can give to this filter so we",
    "start": "1967200",
    "end": "1972240"
  },
  {
    "text": "can if we apply Fe morphology to those two inputs we get those two different outputs you can see on the the bottom right one it's kind of gone all uh kind",
    "start": "1972240",
    "end": "1979159"
  },
  {
    "text": "of blotchy um basically on the right hand side that will be a lot slower to apply",
    "start": "1979159",
    "end": "1985320"
  },
  {
    "text": "this filter to okay so how can we use this fact how can we use this filter to do a timing",
    "start": "1985320",
    "end": "1992000"
  },
  {
    "start": "1987000",
    "end": "1987000"
  },
  {
    "text": "attack um because the thing is you know what use is having a black and a",
    "start": "1992000",
    "end": "1997639"
  },
  {
    "text": "noisy image when's that actually going to occur uh you know in the real world but there's we can use more SVG filters",
    "start": "1997639",
    "end": "2004320"
  },
  {
    "text": "to to do something interesting so rather than having a uh image and a noise image we can take uh a black area and a white",
    "start": "2004320",
    "end": "2013240"
  },
  {
    "text": "area and uh we can uh use uh an Fe image filter uh which is as noise and we can",
    "start": "2013240",
    "end": "2021279"
  },
  {
    "text": "multiply those together so if we multiply uh black with noise we get",
    "start": "2021279",
    "end": "2026519"
  },
  {
    "text": "black and if we apply if we uh multiply white with noise we get noise because in",
    "start": "2026519",
    "end": "2033080"
  },
  {
    "text": "the top image it's all zeros so0 times anything is zero and the bottom image is is white it's one so one time is",
    "start": "2033080",
    "end": "2039000"
  },
  {
    "text": "anything it's one so we end we go from black and white to black and noisy which we can then apply Fe morphology to and",
    "start": "2039000",
    "end": "2046559"
  },
  {
    "text": "that will take that be faster or slower okay so now we have black and",
    "start": "2046559",
    "end": "2051919"
  },
  {
    "text": "white how can we actually do a timing attack with this so how could we read pictures from an if frame okay so here's",
    "start": "2051919",
    "end": "2059200"
  },
  {
    "text": "what we do we take our if frame and using CSS we crop it to a single Pixel the top left hand pixel and then again",
    "start": "2059200",
    "end": "2066118"
  },
  {
    "text": "we use CSS to blow it up to 100 times the size so instead of a single Pixel we've got a nice large area and then we",
    "start": "2066119",
    "end": "2072560"
  },
  {
    "text": "apply our SVG filter and we time how long uh that",
    "start": "2072560",
    "end": "2077960"
  },
  {
    "text": "filter takes to apply using request animation frame and then we move to the next pixel and we time that pixel and we",
    "start": "2077960",
    "end": "2083079"
  },
  {
    "text": "do that for the entire if frame so uh going back to the black box",
    "start": "2083079",
    "end": "2088480"
  },
  {
    "text": "again you love black boxes right so um in this case the SVG filter is our Black Box uh or the rendering you know it's",
    "start": "2088480",
    "end": "2095240"
  },
  {
    "text": "the whole page rendering but it's it's the SVG filter that we're interested in so we can give pixels to it we can give",
    "start": "2095240",
    "end": "2101119"
  },
  {
    "text": "it black pixels or white pixels and again we've got the Callback from request animation frame and we can time",
    "start": "2101119",
    "end": "2108079"
  },
  {
    "text": "uh how long that filter takes to apply and we can tell if we have black pixels or white",
    "start": "2108079",
    "end": "2113640"
  },
  {
    "text": "pixels so it's it's a little bit more complicated than that so I'm not going to go into details here um there's the",
    "start": "2113640",
    "end": "2118839"
  },
  {
    "text": "white paper which goes into a bit more detail about this but um",
    "start": "2118839",
    "end": "2124240"
  },
  {
    "text": "so when we're applying our filter we're only interested in how long uh the filter takes to apply and we don't we're",
    "start": "2124240",
    "end": "2131040"
  },
  {
    "text": "not interested in anything else going on any other rendering operations going on so in Milla um there's this uh CSS uh",
    "start": "2131040",
    "end": "2140240"
  },
  {
    "text": "attribute called Moz elements and that's only found in Firefox but basically it lets you set the uh the background of",
    "start": "2140240",
    "end": "2146880"
  },
  {
    "text": "one element element to be uh visually the same as another element so it take let's just kind of take a snapshot of it",
    "start": "2146880",
    "end": "2153920"
  },
  {
    "text": "and the reason I do this is because um if you apply an SVG filter to the original if frame uh it'll have to",
    "start": "2153920",
    "end": "2160520"
  },
  {
    "text": "redraw the whole if frame everything in that and that will kind of throw off our timings so by applying it to a a",
    "start": "2160520",
    "end": "2166200"
  },
  {
    "text": "snapshot of of the iframe then we uh eliminate everything else except for the",
    "start": "2166200",
    "end": "2171280"
  },
  {
    "text": "SVG filter um and the other problem we've got is uh well pixels uh in most",
    "start": "2171280",
    "end": "2178720"
  },
  {
    "text": "websites aren't just black and white you have Grays you've got colors um but we need black and white so again we can use",
    "start": "2178720",
    "end": "2184880"
  },
  {
    "text": "SVG filters um that come to the rescue and we can apply threshold filter to make things uh black or",
    "start": "2184880",
    "end": "2192040"
  },
  {
    "text": "white um so so yeah so let me just uh quickly show you how those SVG filters",
    "start": "2192040",
    "end": "2199119"
  },
  {
    "text": "work for us so we have a website here loaded in an if frame and we can apply an SVG filter to",
    "start": "2199119",
    "end": "2206400"
  },
  {
    "text": "it so here's my threshold filter um and uh it's kind of fun",
    "start": "2206400",
    "end": "2212520"
  },
  {
    "text": "because it's the website's still working it's it's still um you know you can interact with it and everything um and",
    "start": "2212520",
    "end": "2218520"
  },
  {
    "text": "we can we can adjust our SVD filter threshold to to get the right you know to get the text that we want the reason",
    "start": "2218520",
    "end": "2225440"
  },
  {
    "text": "I've inverted it is because uh the black pixels are quicker to read than the",
    "start": "2225440",
    "end": "2230640"
  },
  {
    "text": "white pixels and because there's more black pixels it will be quicker to to read mostly black pixels and a few white",
    "start": "2230640",
    "end": "2237359"
  },
  {
    "text": "pixels okay so uh okay so let's uh you want to see the",
    "start": "2237359",
    "end": "2244720"
  },
  {
    "text": "demo now right",
    "start": "2244720",
    "end": "2248280"
  },
  {
    "text": "okay so um as you know uh lots of sites prevent",
    "start": "2252960",
    "end": "2258240"
  },
  {
    "text": "framing these days right um so I had a look kind of wrap my brains trying to",
    "start": "2258240",
    "end": "2263599"
  },
  {
    "text": "think of uh websites that uh still allow Framing and have some interesting information on so one of those is uh if",
    "start": "2263599",
    "end": "2272640"
  },
  {
    "text": "you go on the Google Blog um they have this comments widget there Google Plus comments widget which is an i frame and",
    "start": "2272640",
    "end": "2279560"
  },
  {
    "text": "um it's got your name on it so I thought you know that could be interesting to read um so and also let's hit this off",
    "start": "2279560",
    "end": "2287599"
  },
  {
    "text": "so and also the the Amazon website you can frame that so this is my ERS page so you know we can we can read some",
    "start": "2287599",
    "end": "2293240"
  },
  {
    "text": "interesting things so okay so what's going on here so in",
    "start": "2293240",
    "end": "2299680"
  },
  {
    "text": "the top we've got the original life frame uh the second uh one down here is",
    "start": "2299680",
    "end": "2304880"
  },
  {
    "text": "our enlarged version so this is enlarged eight times and down the bottom here we have got uh",
    "start": "2304880",
    "end": "2311280"
  },
  {
    "text": "this is our single Pixel so this box here is is this top left",
    "start": "2311280",
    "end": "2318280"
  },
  {
    "text": "hand pixel blown up by 150 times and as you can see if it's black uh the pixel",
    "start": "2318280",
    "end": "2324640"
  },
  {
    "text": "is black then our filter outputs nothing basically and if it's a white pixel we get our kind of colors there modified",
    "start": "2324640",
    "end": "2331480"
  },
  {
    "text": "noise basically okay so let's run this now and see what",
    "start": "2331480",
    "end": "2337760"
  },
  {
    "text": "happens so we do the it does the calibration first to find out the times of the white and black",
    "start": "2337760",
    "end": "2343599"
  },
  {
    "text": "pixels and as you can see there it's building up pixel by pixel reading from your if frame and and plotting the",
    "start": "2347119",
    "end": "2352839"
  },
  {
    "text": "results onto onto a canvas and again all of this could be invisible to the user",
    "start": "2352839",
    "end": "2358720"
  },
  {
    "text": "um so once this it could build this picture up in memory and then send it back to a server and you know in this",
    "start": "2358720",
    "end": "2364359"
  },
  {
    "text": "case it would have thank you",
    "start": "2364359",
    "end": "2368400"
  },
  {
    "text": "so in this case we've got my name but you know it could be any any kind of information that is on a on a website or or web page that we can",
    "start": "2374760",
    "end": "2381880"
  },
  {
    "text": "frame so that's pretty fun I like that but it it's relatively slow and also you",
    "start": "2381880",
    "end": "2388599"
  },
  {
    "text": "know we end up with a picture and pictures are nice but what would be really nice is is",
    "start": "2388599",
    "end": "2393960"
  },
  {
    "text": "text so could we speed things up a bit could we make some assumptions about the text that is on the web page um to come",
    "start": "2393960",
    "end": "2401720"
  },
  {
    "text": "up with a a kind of quicker algorithm so what if we knew the font",
    "start": "2401720",
    "end": "2408680"
  },
  {
    "text": "face and the font size that's it's going to be on the web page and what if it is a fixed width font so the the space",
    "start": "2408680",
    "end": "2415240"
  },
  {
    "text": "between the letters is equal and what if we knew exactly uh where on the page our particular text",
    "start": "2415240",
    "end": "2421040"
  },
  {
    "text": "is so there's one thing which kind of matches all of those assumptions and that is the source code of a web page",
    "start": "2421040",
    "end": "2428119"
  },
  {
    "text": "now in Firefox there's a kind of neat trick you can do you can actually load the source page the source code of a website into an if frame by sticking",
    "start": "2428119",
    "end": "2434920"
  },
  {
    "text": "view- Source in front of the URL and it will show you the source of the page instead of the",
    "start": "2434920",
    "end": "2440000"
  },
  {
    "text": "page so there's all sorts of fun stuff that we can we can get that inside uh the source code of a web page so",
    "start": "2440000",
    "end": "2446359"
  },
  {
    "text": "obviously everything that's displayed on the page you can get that um but also there are things like cross out request",
    "start": "2446359",
    "end": "2451839"
  },
  {
    "text": "forry tokens authorization tokens IDs and things like that so you know if we",
    "start": "2451839",
    "end": "2456920"
  },
  {
    "text": "can if we can get the the source of a page then we can get some interesting",
    "start": "2456920",
    "end": "2462119"
  },
  {
    "text": "stuff so I thought you know instead of getting getting the picture of the text how about we do a kind of OCR OCR",
    "start": "2462119",
    "end": "2468560"
  },
  {
    "text": "Technique we actually recognize the text and convert it uh convert it from a picture into text but instead of a kind",
    "start": "2468560",
    "end": "2474720"
  },
  {
    "text": "of normal OCR algorithm where we study an entire image because you know we're on a computer the fonts are always the",
    "start": "2474720",
    "end": "2481640"
  },
  {
    "text": "same every time what if we could just read a few pixels from each character and figure out what character it is is",
    "start": "2481640",
    "end": "2488480"
  },
  {
    "text": "so this kind of raises the question of okay which pixels do we have to read um you know if we read that pixel on the",
    "start": "2488480",
    "end": "2495960"
  },
  {
    "text": "number six is that unique to six are there other are there other characters that share that pixel you know how do we",
    "start": "2495960",
    "end": "2501960"
  },
  {
    "text": "know we we have to have some knowledge of the font so the idea is um perhaps if we",
    "start": "2501960",
    "end": "2509400"
  },
  {
    "text": "study the font really well we we get all the information about where each pixel is and each character we can build up a",
    "start": "2509400",
    "end": "2514920"
  },
  {
    "text": "kind of decision tree so we can read one pixel say you know some some pixel somewhere that will be either black or",
    "start": "2514920",
    "end": "2521160"
  },
  {
    "text": "white and then if that pixel is uh say it's black then that kind of we know that certain characters have that pixel",
    "start": "2521160",
    "end": "2527760"
  },
  {
    "text": "set and then we can test another pixel and we know you know that that further",
    "start": "2527760",
    "end": "2533240"
  },
  {
    "text": "restricts the the characters that we might have and we can keep doing that until we until we know which character to read so the question is how many how",
    "start": "2533240",
    "end": "2541800"
  },
  {
    "text": "many pixels do we have to read and and you know is this um how straightforward would is this to do in in real",
    "start": "2541800",
    "end": "2548119"
  },
  {
    "start": "2548000",
    "end": "2548000"
  },
  {
    "text": "ity so here's what I did um I decided rather than kind of doing this by hand it' be quite slow it be quite boring um",
    "start": "2548119",
    "end": "2554440"
  },
  {
    "text": "I wrote some JavaScript to do this uh on the fly so what what it does is uh the",
    "start": "2554440",
    "end": "2560160"
  },
  {
    "text": "JavaScript takes a a snapshot of of the text we want to recognize so in this case instead of recognizing the whole",
    "start": "2560160",
    "end": "2566319"
  },
  {
    "text": "alphabet we're just going to uh look at hex characters so um the JavaScript will",
    "start": "2566319",
    "end": "2571760"
  },
  {
    "text": "take these characters it will draw them onto a canvas where it can manipulate the pixels and and read the pixel values",
    "start": "2571760",
    "end": "2579119"
  },
  {
    "text": "um and the first thing it does is apply the threshold so the same threshold we apply to the if frame we also apply to",
    "start": "2579240",
    "end": "2584800"
  },
  {
    "text": "this this text so we we have black and white and next what happens is we take",
    "start": "2584800",
    "end": "2590040"
  },
  {
    "text": "each of those characters and we draw them all on top of each other and build up this kind of heat",
    "start": "2590040",
    "end": "2596440"
  },
  {
    "text": "map so what's going on in this heat map is that um the red pixels are the pixels",
    "start": "2596440",
    "end": "2604119"
  },
  {
    "text": "used by exactly half of the characters so um the red pixels are used by uh",
    "start": "2604119",
    "end": "2611319"
  },
  {
    "text": "eight characters but they're not they're not used by by the other half um and the the orange pixels are",
    "start": "2611319",
    "end": "2617599"
  },
  {
    "text": "ones that uh have a slightly different split so they might be uh used by set by",
    "start": "2617599",
    "end": "2623680"
  },
  {
    "text": "seven seven seven characters or they might be used by nine characters U but the red pixels are the ones we're",
    "start": "2623680",
    "end": "2629200"
  },
  {
    "text": "interested in because they they divide the character setting to essentially so we take our heat map with",
    "start": "2629200",
    "end": "2635000"
  },
  {
    "text": "all the characters and we pick one of red pixels and we we find out which characters use that pixel so in this",
    "start": "2635000",
    "end": "2642000"
  },
  {
    "text": "case that that pixel selected there is used by uh the characters 47 A B C D E F",
    "start": "2642000",
    "end": "2648319"
  },
  {
    "text": "and we take those eight characters and we build up another Heap and again we find the red pixel find which characters",
    "start": "2648319",
    "end": "2654079"
  },
  {
    "text": "use that um and we we keep building up this tree until we get down to the",
    "start": "2654079",
    "end": "2659280"
  },
  {
    "text": "bottom so by the time we've by the time we get to our fourth pixel uh we we we",
    "start": "2659280",
    "end": "2664920"
  },
  {
    "text": "know in this case uh if that pixel is set we've got the character seven and if it's not set we've got the character F",
    "start": "2664920",
    "end": "2670400"
  },
  {
    "text": "and we build up the tree like this so so the the JavaScript algorithm does this all automatically and it it splits out",
    "start": "2670400",
    "end": "2676599"
  },
  {
    "text": "this data of this decision tree so what we have is that um instead",
    "start": "2676599",
    "end": "2682440"
  },
  {
    "text": "of having to read the entire character which is hundreds of pixels we can just read uh select pixels for each character",
    "start": "2682440",
    "end": "2689280"
  },
  {
    "text": "so the the the orange pixels there those those are the Char those are the pixels we need to read to recognize each",
    "start": "2689280",
    "end": "2695760"
  },
  {
    "text": "character so if we're reading uh if we're reading hex we only have to read four",
    "start": "2695760",
    "end": "2701599"
  },
  {
    "text": "pixels uh if we want to read kind of alphabetic uh lowcase and spaces say we",
    "start": "2701599",
    "end": "2706760"
  },
  {
    "text": "only have to read five pixels and if we wanted to read you know most most text we could probably do it at 64 characters",
    "start": "2706760",
    "end": "2712319"
  },
  {
    "text": "or we want to read Bas 64 we can just read six pixels so this brings us to the final",
    "start": "2712319",
    "end": "2721078"
  },
  {
    "text": "demo so the setup is uh is pretty much the same uh as as previously but in this",
    "start": "2723280",
    "end": "2728480"
  },
  {
    "text": "case we have this is the source code of the uh of that Google+ comments widget",
    "start": "2728480",
    "end": "2734880"
  },
  {
    "text": "and uh what's interesting about that particular widget is that your entire Google+",
    "start": "2734880",
    "end": "2741319"
  },
  {
    "text": "profile is actually in the source code of that web page so it's it's in like a",
    "start": "2741319",
    "end": "2746920"
  },
  {
    "text": "it's in the JavaScript so even though it's just a web page for putting comments on blogs um every single piece",
    "start": "2746920",
    "end": "2753000"
  },
  {
    "text": "of data whether you marked it public or not is in that source code so it makes quite a nice",
    "start": "2753000",
    "end": "2759160"
  },
  {
    "text": "Target so what what we've got at the top here is this is the uh this is the data that that heat map algorithm spat out so",
    "start": "2759160",
    "end": "2765680"
  },
  {
    "text": "this is our uh kind of the raw data of our binary tree so this is",
    "start": "2765680",
    "end": "2770839"
  },
  {
    "text": "um this is the number of pixels from if you if you kind of go along counting down rows this is the first pixel we",
    "start": "2770839",
    "end": "2776880"
  },
  {
    "text": "test um and then it jumps to a particular place in the tree that's our data",
    "start": "2776880",
    "end": "2782400"
  },
  {
    "text": "so uh I'm going to uh Press Start and fingers cross this is going to work",
    "start": "2782400",
    "end": "2788920"
  },
  {
    "text": "so first of all it's reading my Google ID so from my Google ID I can figure out I can go to someone's Google+ profile so",
    "start": "2789800",
    "end": "2796240"
  },
  {
    "text": "I can essentially de deize them and then um there a telephone number in the profile I might as private but you know",
    "start": "2796240",
    "end": "2802800"
  },
  {
    "text": "it's in there anyway and it's got my mobile phone number as well there we go",
    "start": "2802800",
    "end": "2810920"
  },
  {
    "text": "so as you can see that was a that was a lot quicker than having to uh you know read the entire image and you know we've",
    "start": "2818880",
    "end": "2824559"
  },
  {
    "text": "got some nice actual values back uh as text um so in that case um I had to read",
    "start": "2824559",
    "end": "2832760"
  },
  {
    "text": "um in the previous demo you saw that it didn't get all the pixels right in this case because just reading a single Pixel",
    "start": "2832760",
    "end": "2838960"
  },
  {
    "text": "wrong will throw us off in the binary tree or get a wrong result it takes three readings for each uh for each",
    "start": "2838960",
    "end": "2844680"
  },
  {
    "text": "pixel and just takes a median uh and that that works pretty well in this",
    "start": "2844680",
    "end": "2849880"
  },
  {
    "text": "case so um which browsers is this working well",
    "start": "2849880",
    "end": "2855680"
  },
  {
    "text": "um in Firefox and in Chrome you can apply SVD filters to HTML um I've only",
    "start": "2855680",
    "end": "2860960"
  },
  {
    "text": "done this uh this demo in Firefox uh it's slightly easier because of the uh",
    "start": "2860960",
    "end": "2866079"
  },
  {
    "text": "that Mo element um thing I told you about um I haven't yet had time to do a",
    "start": "2866079",
    "end": "2871280"
  },
  {
    "text": "demo on Chrome but I think it is possible and the uh Fe morphology filter that that also has the has the timing",
    "start": "2871280",
    "end": "2878480"
  },
  {
    "text": "difference in Chrome um unfortunately Firefox is the only browser that lets us do the view",
    "start": "2878480",
    "end": "2883720"
  },
  {
    "text": "source with the iframes um but of course even without view Source you can still read the the visual text on on the web",
    "start": "2883720",
    "end": "2888960"
  },
  {
    "text": "page um inet Explorer is no fun really because it doesn't let you apply um SVG",
    "start": "2888960",
    "end": "2894440"
  },
  {
    "text": "filters to any old HTML so this isn't possible in in Internet Explorer unless they want to add that feature okay",
    "start": "2894440",
    "end": "2903680"
  },
  {
    "text": "um um so so yeah there's um I only looked at the Fe morphology filter so far I think there are probably other",
    "start": "2903880",
    "end": "2910000"
  },
  {
    "text": "filters that have um have these timing differences so I uh I reported uh my",
    "start": "2910000",
    "end": "2917880"
  },
  {
    "start": "2914000",
    "end": "2914000"
  },
  {
    "text": "original research I did in in Firefox um and I reported this to Milla um about a",
    "start": "2917880",
    "end": "2923400"
  },
  {
    "text": "year ago and they fixed that now in the latest version of Firefox they they fixed the Fe morphology filter um but",
    "start": "2923400",
    "end": "2929920"
  },
  {
    "text": "possibly the other filters that you know have the timing differences um but actually these kind of bugs are really tricky to fix um and",
    "start": "2929920",
    "end": "2939119"
  },
  {
    "text": "that's for several reasons one is that um browsers like to be really fast these days and",
    "start": "2939119",
    "end": "2947200"
  },
  {
    "text": "um one way to fix these kind of attacks is to take out those optimizations so",
    "start": "2947200",
    "end": "2952359"
  },
  {
    "text": "Milla basically took out the optimization in Fe morphology which made the filter slower um you know which",
    "start": "2952359",
    "end": "2957599"
  },
  {
    "text": "which is a that's a trade-off right um and also they they actually had some fun fixing uh fixing the code as",
    "start": "2957599",
    "end": "2964280"
  },
  {
    "text": "well so the first time they tried to uh fix the F morphology they took out that slow case that entire block of code they",
    "start": "2964280",
    "end": "2971640"
  },
  {
    "text": "took it out um but actually there was still a timeing difference it was smaller but um because there were if",
    "start": "2971640",
    "end": "2978000"
  },
  {
    "text": "statements in right in the middle of the loop um they still made a tiny difference and it was still possible to to get a timing uh for the timing tack",
    "start": "2978000",
    "end": "2984599"
  },
  {
    "text": "to work so they took a few goes um basically to to get code that was would",
    "start": "2984599",
    "end": "2989680"
  },
  {
    "text": "run exactly the same time no mass of the input um and there are various things going on there possibly compiler",
    "start": "2989680",
    "end": "2995520"
  },
  {
    "text": "optimizations so even though didn't specifically put an an an if statement the compiler still kind of optimized it",
    "start": "2995520",
    "end": "3001400"
  },
  {
    "text": "and and kind of made code that was slightly slower quicker depending on the circumstances um so going back to the",
    "start": "3001400",
    "end": "3008880"
  },
  {
    "text": "the link uh link redrawing the history sniffing uh well one way to fix that is",
    "start": "3008880",
    "end": "3014839"
  },
  {
    "text": "um potentially to always redraw links whether they're visited or not when that result comes back from the history uh",
    "start": "3014839",
    "end": "3020799"
  },
  {
    "text": "database but again that's a that's a bit of a trade-off right because if you redraw every single link on page if you",
    "start": "3020799",
    "end": "3027280"
  },
  {
    "text": "got a you know a big Wikipedia entry or or some news page with lots and lots of links that's going to slow things down",
    "start": "3027280",
    "end": "3032640"
  },
  {
    "text": "so the um the the history sniffing attack that I found that more recently um a few months ago and I've reported",
    "start": "3032640",
    "end": "3039040"
  },
  {
    "text": "that to the browser vendors um they've not um they've not fixed it yet I think they're still debating you know what the",
    "start": "3039040",
    "end": "3045480"
  },
  {
    "text": "best way to fix this is um and yeah for the SPG FS there's",
    "start": "3045480",
    "end": "3050799"
  },
  {
    "text": "possibly other ways to prevent this maybe preventing you know doing what id IE does and not allowing SVG filters to",
    "start": "3050799",
    "end": "3056160"
  },
  {
    "text": "apply to Tre HTML content um and if you're particularly worried about these these kind of things",
    "start": "3056160",
    "end": "3062319"
  },
  {
    "text": "if you're on a website well you should be using xame options anyway uh and that will that will prevent um your website",
    "start": "3062319",
    "end": "3069280"
  },
  {
    "text": "from Being Framed obviously you should be doing that to prevent pit jacking anyway um and if you as a user are",
    "start": "3069280",
    "end": "3074559"
  },
  {
    "text": "particularly concerned about this well uh with the history sing attack you can you know you can clear your history regularly or you can use private",
    "start": "3074559",
    "end": "3080520"
  },
  {
    "text": "browsing for certain sites um but you know I think I think eventually these these bugs do need to be fixed by the",
    "start": "3080520",
    "end": "3086040"
  },
  {
    "text": "browser vendors so that's it thank you very much",
    "start": "3086040",
    "end": "3091799"
  }
]