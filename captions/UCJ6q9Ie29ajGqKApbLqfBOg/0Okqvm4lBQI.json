[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "[Music]",
    "start": "3920",
    "end": "15599"
  },
  {
    "text": "welcome to our talk we're going to present new attacks on cryptocurrency wallets",
    "start": "15599",
    "end": "21039"
  },
  {
    "start": "21000",
    "end": "21000"
  },
  {
    "text": "that is a joint presentation with omar shawmovis who discovered most of the attacks that we're going to present today so we both",
    "start": "21039",
    "end": "27359"
  },
  {
    "text": "have experience with enterprise wallets and we're both interested by auditing the security of specialty",
    "start": "27359",
    "end": "34000"
  },
  {
    "text": "crypto and npc product so let's start with the basic notions we",
    "start": "34000",
    "end": "40719"
  },
  {
    "text": "only have so much time so first of all what is a wallet so a wallet is the way to protect your",
    "start": "40719",
    "end": "47760"
  },
  {
    "start": "41000",
    "end": "41000"
  },
  {
    "text": "digital assets your cryptocurrency anything that runs on a blockchain so as you may know you do not literally",
    "start": "47760",
    "end": "54239"
  },
  {
    "text": "store bitcoins as piece of data instead you store the private keys that",
    "start": "54239",
    "end": "60239"
  },
  {
    "text": "you will use to issue a transaction so if you lose access to this private key you lose access to your money and if",
    "start": "60239",
    "end": "66640"
  },
  {
    "text": "someone sees your private key then they can spend your money so you want to product this uh private key",
    "start": "66640",
    "end": "73040"
  },
  {
    "text": "there are different types of wallets you might be familiar with mobile wireless that's run on mobile phones on online wallets which are essentially",
    "start": "73040",
    "end": "80240"
  },
  {
    "text": "web applications uh on the hardware orders such as ledger of twitter devices which provide you",
    "start": "80240",
    "end": "86000"
  },
  {
    "text": "quite higher security and with paperwork when you print out your key and you put it in the safe somewhere",
    "start": "86000",
    "end": "92720"
  },
  {
    "start": "91000",
    "end": "91000"
  },
  {
    "text": "so enterprise what i've seen specifically was used by banks and financial institutions they have",
    "start": "92720",
    "end": "98159"
  },
  {
    "text": "slightly different needs that we described on this slide maybe the the biggest one is the security and privacy",
    "start": "98159",
    "end": "103840"
  },
  {
    "text": "requirement because if you're bank and you store hundreds of millions of data",
    "start": "103840",
    "end": "109119"
  },
  {
    "text": "and you're regulated by some regulatory body in your country and are audited by auditors and you want",
    "start": "109119",
    "end": "116240"
  },
  {
    "text": "to protect you have to protect the privacy of your customers this makes things slightly more complicated and slightly more",
    "start": "116240",
    "end": "122079"
  },
  {
    "text": "interesting so one of the things you have to do is distribute trust so for example in switzerland there's a",
    "start": "122079",
    "end": "129039"
  },
  {
    "start": "123000",
    "end": "123000"
  },
  {
    "text": "regulation called 4i control which means that when you do certain type of transaction you need",
    "start": "129039",
    "end": "135599"
  },
  {
    "text": "at least two or three people to participate to give their approval so in the context of cryptocurrency it",
    "start": "135599",
    "end": "141599"
  },
  {
    "text": "means that you have you need different parties with different credentials different access rights",
    "start": "141599",
    "end": "146879"
  },
  {
    "text": "to authorize a transaction and more generally you want to distribute trust between different software hardware",
    "start": "146879",
    "end": "153200"
  },
  {
    "text": "components in order to avoid a single point of failure so one common way to do it",
    "start": "153200",
    "end": "159680"
  },
  {
    "text": "if you're familiar with bitcoin interim is multi-signatures but it's sometimes complicated because",
    "start": "159680",
    "end": "166160"
  },
  {
    "text": "it will require multiple keys sometimes you need a single key and it works differently for",
    "start": "166160",
    "end": "171760"
  },
  {
    "text": "different uh blockchain platforms so ideally you want to have something that",
    "start": "171760",
    "end": "177360"
  },
  {
    "text": "will work on different for different blockchains bitcoin eater and all the others so what we're going to",
    "start": "177360",
    "end": "183440"
  },
  {
    "text": "present today is about mpc and tss which are technique to distribute trust",
    "start": "183440",
    "end": "190319"
  },
  {
    "text": "not using hardware not using procedures but using fundamentally uh cryptographic",
    "start": "190319",
    "end": "195599"
  },
  {
    "text": "techniques which is one of uh different approaches so what is npc multi-party computation",
    "start": "195599",
    "end": "202720"
  },
  {
    "start": "198000",
    "end": "198000"
  },
  {
    "text": "so from a very general perspective it's a protocol a system whereby",
    "start": "202720",
    "end": "208720"
  },
  {
    "text": "you will receive the inputs but in a way that is kind of encrypted in such a way you don't really know the input values",
    "start": "208720",
    "end": "215280"
  },
  {
    "text": "however you will be able to compute the output the result of some function so in this example we receive the encrypted version of x",
    "start": "215280",
    "end": "222239"
  },
  {
    "text": "and of y and we compute the result x plus y for the addition",
    "start": "222239",
    "end": "227280"
  },
  {
    "text": "maybe you can guess how to adapt this for the context of wallet applications",
    "start": "227280",
    "end": "232959"
  },
  {
    "text": "so one way to use mpc for enterprise wireless is to split the key in different shares",
    "start": "232959",
    "end": "238720"
  },
  {
    "text": "in different values so that no single share of the key will give you the full key value and the npc protocol",
    "start": "238720",
    "end": "245840"
  },
  {
    "text": "will receive the encrypted key share with different key shares and will receive a kind of encrypted",
    "start": "245840",
    "end": "251040"
  },
  {
    "text": "form of the transaction and it will compute the signature without uh seeing the key so it's not about decrypting the values and",
    "start": "251040",
    "end": "257759"
  },
  {
    "text": "combining them and computing the result it's really about computing the result from directly from the",
    "start": "257759",
    "end": "264000"
  },
  {
    "text": "encrypted values without ever decrypting them so to speak so now the question is how",
    "start": "264000",
    "end": "269280"
  },
  {
    "text": "do you adapt npc how you do something that is really optimized for a system",
    "start": "269280",
    "end": "274720"
  },
  {
    "text": "for the case when you want to split the secret between let's say n participants but you only",
    "start": "274720",
    "end": "280880"
  },
  {
    "text": "want to authorize a subset of this participant to issue a signature so that's what threshold signatures",
    "start": "280880",
    "end": "287280"
  },
  {
    "start": "285000",
    "end": "285000"
  },
  {
    "text": "or tss is about and you can see it as a special type of multi-party competition",
    "start": "287280",
    "end": "293440"
  },
  {
    "text": "so here we usually use the notations t and n whereby n is the number of potential",
    "start": "293440",
    "end": "299280"
  },
  {
    "text": "signers and t is the minimal number of signers you need to issue a transaction",
    "start": "299280",
    "end": "304960"
  },
  {
    "text": "so in this example we have three individuals and one is potentially uh malicious well at",
    "start": "304960",
    "end": "311520"
  },
  {
    "text": "least they look uh not really trustworthy so we don't want to authorize one single person to each a transaction",
    "start": "311520",
    "end": "318479"
  },
  {
    "text": "so we have a system whereby we need two parties to cooperate together to issue a transaction",
    "start": "318479",
    "end": "324720"
  },
  {
    "text": "and here you can see that the two persons with the shares shared to industry in blue can work together to sign a message",
    "start": "324720",
    "end": "332639"
  },
  {
    "text": "without the approval of the pink guy on the left hand so from a more abstract",
    "start": "332639",
    "end": "339120"
  },
  {
    "text": "perspective in tss you will have for example these two signers each of these three sender they will",
    "start": "339120",
    "end": "344720"
  },
  {
    "text": "have a different share of the key which means that will not have access to the full key they will",
    "start": "344720",
    "end": "350160"
  },
  {
    "text": "receive the message to be signed and they will run a protocol they will follow a list of operations to work together",
    "start": "350160",
    "end": "357680"
  },
  {
    "text": "and compute a valid signature now you might ask okay but how do you",
    "start": "357680",
    "end": "363520"
  },
  {
    "text": "generate these key shares how do you distribute them so the naive approach is to do a kind of ceremony whereby a",
    "start": "363520",
    "end": "371120"
  },
  {
    "text": "centralized operator will generate the private key and we split this key in different chairs",
    "start": "371120",
    "end": "377600"
  },
  {
    "text": "and distribute the key to the signers but you can actually do a more decentralized",
    "start": "377600",
    "end": "382639"
  },
  {
    "text": "more distributed way to split the key it's called distributed key",
    "start": "382639",
    "end": "388160"
  },
  {
    "start": "385000",
    "end": "385000"
  },
  {
    "text": "generation of an aggregated dkg so here the participants will work together with follow",
    "start": "388160",
    "end": "394319"
  },
  {
    "text": "cryptographic protocol to obtain shares of a private key but in such a way that the private key",
    "start": "394319",
    "end": "401919"
  },
  {
    "text": "the master key so to speak is never exposed to anyone so it's quite convenient because it",
    "start": "401919",
    "end": "407280"
  },
  {
    "text": "really minimizes the exposure of the key so you don't have to to trust a single",
    "start": "407280",
    "end": "413199"
  },
  {
    "text": "point you don't have to really erase the key security because the key is nowhere um it kind of sounds like magic",
    "start": "413199",
    "end": "419759"
  },
  {
    "text": "but that's what advanced crypto is about most of the time so mpc and tss is not just something",
    "start": "419759",
    "end": "426639"
  },
  {
    "text": "that people write research papers about it's something actually used in real systems in real cryptocurrency exchanges and a",
    "start": "426639",
    "end": "434080"
  },
  {
    "text": "typical use case is called storage systems where you have sometimes a single key a single account",
    "start": "434080",
    "end": "440479"
  },
  {
    "text": "that stores really tons of money typically tens or hundreds of millions",
    "start": "440479",
    "end": "446160"
  },
  {
    "text": "so in this case you want to make sure that the access to these farms the access to the key",
    "start": "446160",
    "end": "451520"
  },
  {
    "text": "is distributed among multiple parties locations infrastructure in case there's an earthquake a fire somewhere",
    "start": "451520",
    "end": "457360"
  },
  {
    "text": "you want to make sure that you will always recover your funds and you want to avoid trusting only one",
    "start": "457360",
    "end": "463039"
  },
  {
    "text": "or two people with your money and you can combine this with different technology with smart cars hsn",
    "start": "463039",
    "end": "470080"
  },
  {
    "text": "cloud hsms even mobile phones to have different types of platforms",
    "start": "470080",
    "end": "475759"
  },
  {
    "text": "now what about the the crypto use underhood was do we need to build tss so to be",
    "start": "475759",
    "end": "482400"
  },
  {
    "text": "stressful signatures of course you must be you must have signatures somewhere so in the blockchain space",
    "start": "482400",
    "end": "488639"
  },
  {
    "text": "there are two main types of signatures being used to ecdsticker dsa which is using bitcoin ethereum",
    "start": "488639",
    "end": "496720"
  },
  {
    "text": "and now you you find uh ed dsa and ed25519",
    "start": "496720",
    "end": "503919"
  },
  {
    "text": "which are signature based on the schnorr signing paradigm which is slightly different and has the",
    "start": "503919",
    "end": "509759"
  },
  {
    "text": "benefit of not using a notch not using a unique number per signature which avoids some classes",
    "start": "509759",
    "end": "514880"
  },
  {
    "text": "of attacks and it also makes aggregation of keys and signatures easier which is quite convenient when you do",
    "start": "514880",
    "end": "521839"
  },
  {
    "text": "social signatures another type of signature that we can sign is the pls signature which work",
    "start": "521839",
    "end": "526880"
  },
  {
    "text": "very differently which are quite complicated because they use cryptographic bearings but they make the aggregation",
    "start": "526880",
    "end": "532560"
  },
  {
    "text": "of different keys into a master key and the aggregation of different signatures into one single",
    "start": "532560",
    "end": "538080"
  },
  {
    "text": "signature much easier than classical signatures so you may have heard about fully",
    "start": "538080",
    "end": "544320"
  },
  {
    "text": "homomorphic encryption so here we don't do fully homomorphic we are only interested in",
    "start": "544320",
    "end": "549519"
  },
  {
    "text": "homomorphic encryption with respect to one single operation so the first line really defines what",
    "start": "549519",
    "end": "555920"
  },
  {
    "text": "homomorphic encryption is about you combine you combine two ciphertext encryption of m1 and m2",
    "start": "555920",
    "end": "563120"
  },
  {
    "text": "and when you decrypt the result you get a value that is the combination of m1 and m2",
    "start": "563120",
    "end": "568560"
  },
  {
    "text": "so you see that we use different signs different operands on the left hand right hand of the equation",
    "start": "568560",
    "end": "574480"
  },
  {
    "text": "because sometimes it's not the same operation so if you consider textbook rsa which is uh quite",
    "start": "574480",
    "end": "580959"
  },
  {
    "text": "insecure but which happens to be homomorphic with respect to the multiplication then you multiply to cipher text and",
    "start": "580959",
    "end": "587279"
  },
  {
    "text": "what you obtain is a valid cipher text of the product of the two plaintexts but",
    "start": "587279",
    "end": "592399"
  },
  {
    "text": "in pious encryption it's slightly different because you have multiplication on the one hand",
    "start": "592399",
    "end": "597920"
  },
  {
    "text": "and addition on the other hand which is very interesting features in many cases so",
    "start": "597920",
    "end": "604079"
  },
  {
    "text": "homomorphic encryption is also used in e-voting to combine balance of waters and it's",
    "start": "604079",
    "end": "609279"
  },
  {
    "text": "also used in some tss constructions commitments which",
    "start": "609279",
    "end": "614320"
  },
  {
    "start": "610000",
    "end": "610000"
  },
  {
    "text": "is notion that this probably familiar to too many of you so i know if you're on twitter but",
    "start": "614320",
    "end": "619360"
  },
  {
    "text": "sometimes you will see people mysteriously posting hash values and uh",
    "start": "619360",
    "end": "625279"
  },
  {
    "text": "they would suggest that it's because they have found some zero day but they don't want the ticks of the zero day so they possibly hash that later on they",
    "start": "625279",
    "end": "631279"
  },
  {
    "text": "can show you the stuff they hash to demonstrate that they found that the order themselves so",
    "start": "631279",
    "end": "637040"
  },
  {
    "text": "it's a kind of commitment the context of crypto commitment is a slightly more more involved",
    "start": "637040",
    "end": "643360"
  },
  {
    "text": "technique with more formal definitions and security properties but ultimately it's the same so",
    "start": "643360",
    "end": "648560"
  },
  {
    "text": "initially the setup is about the rules of the game which function you're going to use the commit phase",
    "start": "648560",
    "end": "654640"
  },
  {
    "text": "is when you commit to some value x here and you also use the value r to",
    "start": "654640",
    "end": "659920"
  },
  {
    "text": "randomize the process and the opening phase the reveal phase is when you reveal these two values",
    "start": "659920",
    "end": "667200"
  },
  {
    "text": "thereby allowing the verifier to check that the value that you committed to c",
    "start": "667200",
    "end": "672640"
  },
  {
    "text": "matches the x and r that you just published um so this one is not",
    "start": "672640",
    "end": "678240"
  },
  {
    "start": "675000",
    "end": "675000"
  },
  {
    "text": "going to surprise you with talking about special signatures and of course we use somewhere threshold",
    "start": "678240",
    "end": "683519"
  },
  {
    "text": "secret sharing uh and specifically xiaomi's game which is maybe the most common",
    "start": "683519",
    "end": "688959"
  },
  {
    "text": "and the most known construction which relies on polynomial interpolation",
    "start": "688959",
    "end": "694800"
  },
  {
    "text": "so here will be us a reminder you have a secret you have a string and from this secret you're going to",
    "start": "694800",
    "end": "701360"
  },
  {
    "text": "generate a list of for example five different values and in such a way that for example you",
    "start": "701360",
    "end": "707920"
  },
  {
    "text": "need three of these values to reconcile the secret but such that",
    "start": "707920",
    "end": "713519"
  },
  {
    "text": "one or two values will not click any on information on on the secret value when varying that",
    "start": "713519",
    "end": "720320"
  },
  {
    "text": "is often used in a tss construction is verifiable securing so it's a small brand where the owners",
    "start": "720320",
    "end": "728320"
  },
  {
    "text": "of the shares can verify when they reconstruct the secret that the correct secret has been reconstructed and",
    "start": "728320",
    "end": "735040"
  },
  {
    "text": "in particular that the other participants have used a valid share of the secret and not any random value so a common vss game is",
    "start": "735040",
    "end": "742240"
  },
  {
    "text": "by feldman and it was designer thinking the less in the late 80s and it's actually based on",
    "start": "742240",
    "end": "748079"
  },
  {
    "text": "homomorphic encryption so last but not least zero knowledge proofs and modular zero",
    "start": "748079",
    "end": "754720"
  },
  {
    "start": "749000",
    "end": "749000"
  },
  {
    "text": "knowledge protocols so you might be familiar with the intuition of racial knowledge profits",
    "start": "754720",
    "end": "759760"
  },
  {
    "text": "approve that listing information on the stuff that you're providing it's for example use in a privacy oriented protocol such as",
    "start": "759760",
    "end": "767839"
  },
  {
    "text": "z-car from monero in this case you want to hide the money being transferred the address of the sender and recipient",
    "start": "767839",
    "end": "774480"
  },
  {
    "text": "yet in such a way that participants can verify that this money has been sent somewhere and that",
    "start": "774480",
    "end": "780959"
  },
  {
    "text": "everything is correct and sound so journey as you know proof is about proving a mathematical",
    "start": "780959",
    "end": "787040"
  },
  {
    "text": "statement such as the result of any question without leaking literally any bit of information",
    "start": "787040",
    "end": "792720"
  },
  {
    "text": "yet in such a way that the approver cannot cheat but that they can't prove any correct",
    "start": "792720",
    "end": "798959"
  },
  {
    "text": "value to be correct and that any inquiry value cannot convince a verifier that is correct",
    "start": "798959",
    "end": "805120"
  },
  {
    "text": "in the context of blockchain you will often encounter nizk non-interactive zero-knowledge",
    "start": "805120",
    "end": "810639"
  },
  {
    "text": "proof which is just a blob of data instead of being a protocol with multiple around",
    "start": "810639",
    "end": "816160"
  },
  {
    "text": "you will just send one piece of data which will be your your proof so you don't have to run multiple round trips",
    "start": "816160",
    "end": "822000"
  },
  {
    "text": "you just have to send one piece of data okay so now based on this uh preliminary",
    "start": "822000",
    "end": "827600"
  },
  {
    "text": "i will let omer present the attacks on npc and tss constructions",
    "start": "827600",
    "end": "833120"
  },
  {
    "text": "i would like to start with describing the general setup in which our attacks takes place",
    "start": "833120",
    "end": "839519"
  },
  {
    "text": "starting from the left we have a user communicating with an exchange the user in the exchange run a two-party",
    "start": "839519",
    "end": "846240"
  },
  {
    "start": "840000",
    "end": "840000"
  },
  {
    "text": "key generation resulting with the user getting a secret key share sk1 and the exchange getting a secret",
    "start": "846240",
    "end": "852639"
  },
  {
    "text": "key share sk2 the user deposits funds to his address and from that point",
    "start": "852639",
    "end": "858079"
  },
  {
    "text": "can initiate orders each order comes with a signature generated by running a two-party signing",
    "start": "858079",
    "end": "864000"
  },
  {
    "text": "between the user and the exchange on the other side the crypto exchange runs an infrastructure",
    "start": "864000",
    "end": "870160"
  },
  {
    "text": "to manage access to its liquidity as part of this setup there are several sites that together",
    "start": "870160",
    "end": "876160"
  },
  {
    "text": "can authorize the transfer of large amounts per the requirements of the exchange we are using a hot wallet and cold wallet",
    "start": "876160",
    "end": "883120"
  },
  {
    "text": "to express the frequency of the use and mention it since this is the terminology used in the industry but it",
    "start": "883120",
    "end": "888800"
  },
  {
    "text": "is not much relevant to our attacks therefore we are actually looking at two subsystems",
    "start": "888800",
    "end": "894800"
  },
  {
    "text": "the hot subsystem on the left is usually based on two-party protocols where we need to protect from a failure",
    "start": "894800",
    "end": "901360"
  },
  {
    "text": "of one of the parties the current subsystem on the right is spreading security to multiple sites",
    "start": "901360",
    "end": "908000"
  },
  {
    "text": "the number of sites or parties can vary as well as the robustness",
    "start": "908000",
    "end": "913839"
  },
  {
    "text": "the guaranteed security for this setup using tss is that even if a single key holder is",
    "start": "913839",
    "end": "919680"
  },
  {
    "start": "915000",
    "end": "915000"
  },
  {
    "text": "compromised the attacker gains no advantage in our attacks we demonstrate how an",
    "start": "919680",
    "end": "925680"
  },
  {
    "text": "attacker with full control over only a single party can break the security of the tss",
    "start": "925680",
    "end": "932480"
  },
  {
    "text": "for simplicity we assume that the exchange is compromised modeling either an",
    "start": "932480",
    "end": "938720"
  },
  {
    "text": "outside attacker or some insider threat we can describe our attacks in the",
    "start": "938720",
    "end": "944320"
  },
  {
    "text": "context of the hotend called subsystems in this talk we'll describe three attacks the first one",
    "start": "944320",
    "end": "951199"
  },
  {
    "text": "walks in the multi-party setting it will result in private key division which means the",
    "start": "951199",
    "end": "956959"
  },
  {
    "text": "exchange funds will be permanently locked the second attack named lathering's repeat works best for",
    "start": "956959",
    "end": "964160"
  },
  {
    "text": "the two-party setting it allows the exchange to extract the key of the user and steal its funds",
    "start": "964160",
    "end": "970959"
  },
  {
    "text": "the last attack golden shoe fits well in both settings and works by sending a well-engineered",
    "start": "970959",
    "end": "977199"
  },
  {
    "text": "message which gets all counterparties to send the attacker their secrets",
    "start": "977199",
    "end": "983279"
  },
  {
    "text": "we conducted a responsible disclosure on all three attacks the first attack was found in an open",
    "start": "983279",
    "end": "989519"
  },
  {
    "start": "984000",
    "end": "984000"
  },
  {
    "text": "source library of one of the biggest crypto exchanges however it was found around a week",
    "start": "989519",
    "end": "995040"
  },
  {
    "text": "after the library became public so we assumed no one was using it the second vulnerability was found in an",
    "start": "995040",
    "end": "1001759"
  },
  {
    "text": "open source code by a big mpc company we were told that the code used in the product is",
    "start": "1001759",
    "end": "1007600"
  },
  {
    "text": "different and therefore no one was actually affected the last attack was again found in an",
    "start": "1007600",
    "end": "1013440"
  },
  {
    "text": "open source library of a big crypto exchange you can check out the cv for details",
    "start": "1013440",
    "end": "1020399"
  },
  {
    "text": "before diving into the concrete attacks we want to give another high-level analysis of the root cause for the attacks here",
    "start": "1020399",
    "end": "1027600"
  },
  {
    "start": "1021000",
    "end": "1021000"
  },
  {
    "text": "the raws describe different characteristics common to most threshold cryptography or tss based protocols",
    "start": "1027600",
    "end": "1035520"
  },
  {
    "text": "at first tss protocols are interactive they progress in rounds of communication",
    "start": "1035520",
    "end": "1041520"
  },
  {
    "text": "between the parties while in modern cryptography we usually get a single party",
    "start": "1041520",
    "end": "1046558"
  },
  {
    "text": "to generate a key and sign locally here we must have interaction this is essentially all that was needed",
    "start": "1046559",
    "end": "1053039"
  },
  {
    "text": "to mount the first attack tss often makes use in some cryptographic primitives",
    "start": "1053039",
    "end": "1059440"
  },
  {
    "text": "which are not common and not used by many this makes them hard to understand or to nail properly how they work",
    "start": "1059440",
    "end": "1066960"
  },
  {
    "text": "finally it is important to note that in the real world where an attacker can attack any one of the participating parties a",
    "start": "1066960",
    "end": "1074160"
  },
  {
    "text": "party cannot assume anything about the correctness of the messages it receives this means that for any message sent the",
    "start": "1074160",
    "end": "1081679"
  },
  {
    "text": "sender needs to attach a proof that the message was computed according to the protocol one common way of doing it is using the",
    "start": "1081679",
    "end": "1088960"
  },
  {
    "text": "zero knowledge proofs some of which are tailored to prove statements on particular",
    "start": "1088960",
    "end": "1094160"
  },
  {
    "text": "messages in the protocol the first attack as we mentioned before",
    "start": "1094160",
    "end": "1100559"
  },
  {
    "text": "works best for the code setting in fact we want to focus on a protocol for key rotation",
    "start": "1100559",
    "end": "1106880"
  },
  {
    "text": "this is a common industry practice if every safe holds a secret share sk we want a",
    "start": "1106880",
    "end": "1113039"
  },
  {
    "text": "protocol for all safes to change their secret key shares but still maintain access to the funds",
    "start": "1113039",
    "end": "1119120"
  },
  {
    "text": "locked under the joint public key putting it simply we want to move from the red set of secret keys",
    "start": "1119120",
    "end": "1126000"
  },
  {
    "text": "at time t to the blue set of secret key shares in time t prime this is a basic",
    "start": "1126000",
    "end": "1133200"
  },
  {
    "text": "requirement for such a system because otherwise a single attacker would be able to systematically",
    "start": "1133200",
    "end": "1138799"
  },
  {
    "text": "compromise side by side until uncovering the full private key we call this attack forget and forgive",
    "start": "1138799",
    "end": "1145520"
  },
  {
    "text": "since parties are forced to forget the keys",
    "start": "1145520",
    "end": "1150720"
  },
  {
    "text": "ending up in a situation where the actual distributed key is lost now let's move on to describe",
    "start": "1150720",
    "end": "1157280"
  },
  {
    "text": "the low level details a morty in our scheme is an honest party we use a setup with three parties a b",
    "start": "1157280",
    "end": "1164880"
  },
  {
    "text": "and c instead of secret key share sk let's say that each moti holds",
    "start": "1164880",
    "end": "1170320"
  },
  {
    "text": "some personal number x a x b and x c we have invariant which is the",
    "start": "1170320",
    "end": "1176640"
  },
  {
    "text": "sum of x ax b and x c here equal to y our task",
    "start": "1176640",
    "end": "1182000"
  },
  {
    "text": "is to replace or in other words refresh each of x ax bxe with the new x a prime x b prime x c",
    "start": "1182000",
    "end": "1189520"
  },
  {
    "text": "prime while keeping the invariant of this on the sum of x primes to be equal to y for that we use a",
    "start": "1189520",
    "end": "1197200"
  },
  {
    "text": "cryptographic primitive we mentioned before called vss which stands for verifiable secret sharing",
    "start": "1197200",
    "end": "1203600"
  },
  {
    "text": "we let each moti distribute secret shares such that their additive value is equal to zero",
    "start": "1203600",
    "end": "1209440"
  },
  {
    "text": "in the figure we are only demonstrating it for the multi holding x c this moti will generate rca and rcb",
    "start": "1209440",
    "end": "1217600"
  },
  {
    "text": "sum to such that when we sum all secret shares the contribution will cancel out in the",
    "start": "1217600",
    "end": "1224240"
  },
  {
    "text": "total sum each moti will collect all the secret shares he received and will add them to",
    "start": "1224240",
    "end": "1229520"
  },
  {
    "text": "a secret x i as can be seen while x a prime and x b prime have changed",
    "start": "1229520",
    "end": "1235919"
  },
  {
    "text": "summing now all x primes we get that y prime is equal to y as required so are we done yet",
    "start": "1235919",
    "end": "1244320"
  },
  {
    "text": "not exactly we still need to delete the old secret shares",
    "start": "1244320",
    "end": "1249360"
  },
  {
    "text": "now this is where it gets interesting deleting is a step that cannot be reversed we ask",
    "start": "1249360",
    "end": "1255679"
  },
  {
    "text": "how does the mother knows that it is safe to delete the old secret share the answer should be that each motive needs",
    "start": "1255679",
    "end": "1262960"
  },
  {
    "text": "to make sure all other motives also think it is safe to delete so in fact we have an extra round of",
    "start": "1262960",
    "end": "1269280"
  },
  {
    "text": "communication that is hidden here in the system that we attacked this step was missing",
    "start": "1269280",
    "end": "1275120"
  },
  {
    "text": "let's see the attack we start the same as before with establishing the secret chairs",
    "start": "1275120",
    "end": "1280480"
  },
  {
    "text": "xxx bxc however now a malicious party represented here by",
    "start": "1280480",
    "end": "1286000"
  },
  {
    "text": "convillius daniel on top taking over the moti that holds xc",
    "start": "1286000",
    "end": "1291039"
  },
  {
    "text": "can and can send different messages to different parties in the figure the left side moti gets a",
    "start": "1291039",
    "end": "1297360"
  },
  {
    "text": "correct message and therefore deletes his old chair however the moti",
    "start": "1297360",
    "end": "1302480"
  },
  {
    "text": "on the right gets a corrupted message and decides to abort the protocol keeping his old feature while not",
    "start": "1302480",
    "end": "1309280"
  },
  {
    "text": "visible in the figure it is important to say that the multi-detection of a corrupted message is enabled due to",
    "start": "1309280",
    "end": "1315919"
  },
  {
    "text": "the check done as part of the vss primitive as a result the invariant is",
    "start": "1315919",
    "end": "1322799"
  },
  {
    "text": "now broken y prime is no longer equal to y and the key is effectively deleted",
    "start": "1322799",
    "end": "1329280"
  },
  {
    "text": "the outcome in practice is that by trying to refresh the private key shares we end up with a situation where it is",
    "start": "1329280",
    "end": "1336000"
  },
  {
    "text": "impossible to recover the private key or to put it into any use such as to sign transactions spending the amount",
    "start": "1336000",
    "end": "1342720"
  },
  {
    "text": "locked under the original private key a smart attacker can leverage this situation to",
    "start": "1342720",
    "end": "1348559"
  },
  {
    "text": "mount a ransom attack attacking enough parties such that all honest parties cannot reach the required",
    "start": "1348559",
    "end": "1354400"
  },
  {
    "text": "threshold to execute a signature without the involvement of the attacker for example the attacker can require",
    "start": "1354400",
    "end": "1361600"
  },
  {
    "text": "half the locked amount to publish its secret key so we now move on to describe the next",
    "start": "1361600",
    "end": "1367440"
  },
  {
    "text": "attack we are now focusing on the hot wallet scheme with the exchange and the user both hold",
    "start": "1367440",
    "end": "1373520"
  },
  {
    "text": "secret shares of a private key used to sign transactions on the blockchain",
    "start": "1373520",
    "end": "1378880"
  },
  {
    "text": "in this example the exchange released the signed transactions to the blockchain here again",
    "start": "1378880",
    "end": "1385120"
  },
  {
    "text": "it is important for the parties to refresh their secret shares every once in a while it could be after every transaction for",
    "start": "1385120",
    "end": "1392159"
  },
  {
    "text": "example conceptually this is the same as what we saw before concretely though",
    "start": "1392159",
    "end": "1397440"
  },
  {
    "text": "we are looking at a different protocol earlier we assumed that the key material needed to be refreshed is a single",
    "start": "1397440",
    "end": "1404000"
  },
  {
    "text": "random number but sometimes there are some extra artifacts that must be refreshed as well",
    "start": "1404000",
    "end": "1410240"
  },
  {
    "text": "this is the case with this attack let's look at the concrete details",
    "start": "1410240",
    "end": "1415360"
  },
  {
    "text": "so here multi on the right and rick on the left are two parties playing the exchange and",
    "start": "1415360",
    "end": "1420640"
  },
  {
    "text": "the user in an honest execution we start with a two-party key generation",
    "start": "1420640",
    "end": "1426240"
  },
  {
    "text": "we treat the protocol as black box as the specific details are not relevant to the attack",
    "start": "1426240",
    "end": "1431520"
  },
  {
    "text": "what is important to note is that as part of the output we introduce another cryptosystem",
    "start": "1431520",
    "end": "1436799"
  },
  {
    "text": "marked here in green which is homomorphic cryptosystem in particular rick generates a private",
    "start": "1436799",
    "end": "1443279"
  },
  {
    "text": "key and multi learns the corresponding public key together with the ciphertext c",
    "start": "1443279",
    "end": "1450320"
  },
  {
    "text": "this cipher text is an encryption of freak secret x1 for completeness let's imagine how a",
    "start": "1450320",
    "end": "1457360"
  },
  {
    "text": "two-party signing protocol would look like again treating the protocol itself as a black box",
    "start": "1457360",
    "end": "1463600"
  },
  {
    "text": "moti inputs a message to be signed m and both input to the outputs from the key generation",
    "start": "1463600",
    "end": "1469760"
  },
  {
    "text": "as a result both get a signature however we want to focus on the refresh protocol",
    "start": "1469760",
    "end": "1475919"
  },
  {
    "text": "this can be seen if we want to fully refresh we need to also refresh thermomorphic cryptosystem parts",
    "start": "1475919",
    "end": "1482559"
  },
  {
    "text": "otherwise the signing protocol will simply not work or another option is that an attacker",
    "start": "1482559",
    "end": "1487679"
  },
  {
    "text": "will be able to attack one party after the other breaking the cryptographic guarantees of",
    "start": "1487679",
    "end": "1492720"
  },
  {
    "text": "the rotation double clicking on the refresh protocol we see that as part of generating the",
    "start": "1492720",
    "end": "1499039"
  },
  {
    "text": "new state rick must prove to moti that the encryption was done in a proper manner that is proving",
    "start": "1499039",
    "end": "1506960"
  },
  {
    "text": "c prime is an encryption of x1 prime without revealing x1 prime or the",
    "start": "1506960",
    "end": "1512400"
  },
  {
    "text": "decryption key dk prime the problem is this zero knowledge proof is highly",
    "start": "1512400",
    "end": "1519120"
  },
  {
    "text": "expensive in the code we examined a shortcut was suggested",
    "start": "1519120",
    "end": "1524559"
  },
  {
    "text": "the id is really cool and is using demographic properties of the encryption scheme in short instead of proving c new c",
    "start": "1524559",
    "end": "1532400"
  },
  {
    "text": "prime structure from scratch we can just prove a relation between c new and c old unfortunately",
    "start": "1532400",
    "end": "1539679"
  },
  {
    "text": "they use the wrong proof what they achieve is that the attacker can now convince",
    "start": "1539679",
    "end": "1544799"
  },
  {
    "text": "the other party really efficiently that the cipher text is an encryption of anything",
    "start": "1544799",
    "end": "1551600"
  },
  {
    "text": "so this is how the export works at a high level we require moti to allow us to call",
    "start": "1551600",
    "end": "1556799"
  },
  {
    "start": "1552000",
    "end": "1552000"
  },
  {
    "text": "two-party rotation and two-part is signing multiple times each time we will change",
    "start": "1556799",
    "end": "1562159"
  },
  {
    "text": "the encrypted value and try to obtain a signature we get some information from each such query",
    "start": "1562159",
    "end": "1568559"
  },
  {
    "text": "hopefully one bit until eventually we are able to extract large parts of the private key",
    "start": "1568559",
    "end": "1575200"
  },
  {
    "text": "to summarize this attack we started with a system that distributes the signing between the",
    "start": "1575200",
    "end": "1580320"
  },
  {
    "text": "user and the exchange when we allow to rotate the private keys the exchange hijack hijacks the user",
    "start": "1580320",
    "end": "1586400"
  },
  {
    "text": "secret key which mean it now can sign transactions without the user involvement at all",
    "start": "1586400",
    "end": "1593520"
  },
  {
    "text": "effectively an attacker that attacks the exchange will be able to extract all the keys of all the users",
    "start": "1593520",
    "end": "1598640"
  },
  {
    "text": "given enough time breaking the distributed trust guaranteed from the cryptography we name this",
    "start": "1598640",
    "end": "1604960"
  },
  {
    "text": "attack ladder rinse repeat since to mount it we're required to run two protocols therefore ladder and rinse and repeat",
    "start": "1604960",
    "end": "1612000"
  },
  {
    "text": "them many times we now move on to describe the last attack if you recall this attack works",
    "start": "1612000",
    "end": "1618880"
  },
  {
    "start": "1615000",
    "end": "1615000"
  },
  {
    "text": "in multiple scenarios however we chose to demonstrate it in the specific case of four parties",
    "start": "1618880",
    "end": "1624720"
  },
  {
    "text": "running tss among themselves whenever one of the parties needs to sign a message and send it to",
    "start": "1624720",
    "end": "1630080"
  },
  {
    "text": "the blockchain to explain the attack we recall that in our kind of real life protocols",
    "start": "1630080",
    "end": "1636480"
  },
  {
    "text": "it is required that every participant must prove it ran each computation according to the",
    "start": "1636480",
    "end": "1641840"
  },
  {
    "text": "protocol in the first attack this was part of the vss where each party sent a proof",
    "start": "1641840",
    "end": "1647520"
  },
  {
    "text": "together with a random value in the second attack it was the zero knowledge proof in the",
    "start": "1647520",
    "end": "1654159"
  },
  {
    "text": "current attack we described a step like this was missing it is not all the time that a concrete",
    "start": "1654159",
    "end": "1659440"
  },
  {
    "text": "vulnerability can be derived directly from a missing zero knowledge proof but here we show one such example",
    "start": "1659440",
    "end": "1667039"
  },
  {
    "text": "let's look at the details so here rick rix play honest parties there is first a",
    "start": "1667039",
    "end": "1673919"
  },
  {
    "text": "setup phase this happens during the distributed key generation each party generates parameters nh1 and",
    "start": "1673919",
    "end": "1680799"
  },
  {
    "text": "h2 and share them with the other parties in the figure we show we show only we show it only for",
    "start": "1680799",
    "end": "1687679"
  },
  {
    "text": "the rick on top these parameters will later be used by the receiver to generate some proofs in",
    "start": "1687679",
    "end": "1693200"
  },
  {
    "text": "the distributed signing during signing each party takes the nh1",
    "start": "1693200",
    "end": "1698559"
  },
  {
    "text": "and h2 received from each counterparty probably now saved in memory and sends some proofs using these",
    "start": "1698559",
    "end": "1705039"
  },
  {
    "text": "parameters in the figure we use f31 to abstract the exact data sent from the left trick",
    "start": "1705039",
    "end": "1712240"
  },
  {
    "text": "to the rick on top what is important to our attack is that this is a function that depends on nh1",
    "start": "1712240",
    "end": "1717600"
  },
  {
    "text": "and h2 therefore data goes in two steps at first during key generation at the beginning",
    "start": "1717600",
    "end": "1724720"
  },
  {
    "text": "of time the attacker sends nh1 and h2 to the rest of the parties they can be anything because there is no",
    "start": "1724720",
    "end": "1731039"
  },
  {
    "text": "check in the implementation the second step is to receive proofs from all the parties",
    "start": "1731039",
    "end": "1736880"
  },
  {
    "text": "during a single threshold signature from each such proof the attacker will extract the",
    "start": "1736880",
    "end": "1742960"
  },
  {
    "text": "secret key share to summarize this attack we start with a key distributed between the different",
    "start": "1742960",
    "end": "1749120"
  },
  {
    "text": "parties after the attack all key shares will be copied into a single location",
    "start": "1749120",
    "end": "1754320"
  },
  {
    "text": "which means that the attacker will be able to sign transactions ignoring all other parties we derived",
    "start": "1754320",
    "end": "1760240"
  },
  {
    "text": "enabled for this attack because a simple one-time message at game time lets one party with it all",
    "start": "1760240",
    "end": "1766159"
  },
  {
    "text": "next up is jp with some recommendations so to conclude we would like to share",
    "start": "1766159",
    "end": "1771600"
  },
  {
    "text": "some general advice to help you avoid the kind of security problem that omer just described so first of all minimize",
    "start": "1771600",
    "end": "1779200"
  },
  {
    "start": "1778000",
    "end": "1778000"
  },
  {
    "text": "complexity so it's quite common place in security and it's of course easier said than done",
    "start": "1779200",
    "end": "1784320"
  },
  {
    "text": "but it's still important as it's the source of a lot of headaches and wasted time artists from my",
    "start": "1784320",
    "end": "1790320"
  },
  {
    "text": "perspective as a security auditor so a lot of this crypto is by definition quite complex as you've seen",
    "start": "1790320",
    "end": "1797360"
  },
  {
    "text": "but you can still minimize sometimes the complexity by avoiding implementing user stuff uh for example only",
    "start": "1797360",
    "end": "1803360"
  },
  {
    "text": "implementing what you need and also by avoiding useless levels of abstraction by not into introducing new terminology",
    "start": "1803360",
    "end": "1810320"
  },
  {
    "text": "or new notation for example by using the same symbols as in the paper it makes things a lot easier so the",
    "start": "1810320",
    "end": "1816960"
  },
  {
    "text": "second point here is about uh languages about coding so i completely agree with max's point where",
    "start": "1816960",
    "end": "1823440"
  },
  {
    "text": "he he says that code should be optimized for readability instead of writability",
    "start": "1823440",
    "end": "1829039"
  },
  {
    "text": "so what it means is that instead of aiming to have like the most elegant or the most conscious chord",
    "start": "1829039",
    "end": "1834960"
  },
  {
    "text": "you want to prioritize code clarity uh as it will make it much easier for the auditors for anyone to understand what",
    "start": "1834960",
    "end": "1841440"
  },
  {
    "text": "your code is doing and also to find bugs learning so be it purely logical bugs or bugs specific to",
    "start": "1841440",
    "end": "1847440"
  },
  {
    "text": "the language being used this part is about a class of bug that",
    "start": "1847440",
    "end": "1853760"
  },
  {
    "start": "1849000",
    "end": "1849000"
  },
  {
    "text": "we found and which are related to the understanding of the academic paper",
    "start": "1853760",
    "end": "1859120"
  },
  {
    "text": "sometimes the academic paper that you implement is very correct",
    "start": "1859120",
    "end": "1864640"
  },
  {
    "text": "in terms of academic correctness but nonetheless ends up in something completely unsafe so how can it happen",
    "start": "1864640",
    "end": "1871279"
  },
  {
    "text": "so there are three main classes of problems here the first one is the fact that the papers they will",
    "start": "1871279",
    "end": "1877039"
  },
  {
    "text": "usually not describe how you encode data how you pass the serialized data",
    "start": "1877039",
    "end": "1882399"
  },
  {
    "text": "and that's also where a lot of security problems happen also some people describe a protocol in",
    "start": "1882399",
    "end": "1889039"
  },
  {
    "text": "terms of generic security level but without giving you a concrete instance without",
    "start": "1889039",
    "end": "1894240"
  },
  {
    "text": "giving you concrete parameters and it's your role to find the good parameters the choice of primitives for example",
    "start": "1894240",
    "end": "1899440"
  },
  {
    "text": "which the curve to use which hash function to use uh which keysights to use so you want to make sure that you pick",
    "start": "1899440",
    "end": "1905519"
  },
  {
    "text": "parameters that end up in a scheme that is secure enough for example if you aim for 128 bit",
    "start": "1905519",
    "end": "1911679"
  },
  {
    "text": "security level you want to make sure that all your components will guarantee this security level",
    "start": "1911679",
    "end": "1917600"
  },
  {
    "text": "and the third bullet here complete or confusing definition is illustrated by this example of a zero",
    "start": "1917600",
    "end": "1923919"
  },
  {
    "text": "knowledge proof of factorization whereby approver proved to a verifier that they know the",
    "start": "1923919",
    "end": "1930159"
  },
  {
    "text": "factorization of some rsc models so which means without leaking the",
    "start": "1930159",
    "end": "1935279"
  },
  {
    "text": "factors the problem here is as you can see in the small crane cap there's a common input capital n the",
    "start": "1935279",
    "end": "1942399"
  },
  {
    "text": "problem is that the autos of the paper had one understanding of common input",
    "start": "1942399",
    "end": "1948000"
  },
  {
    "text": "but they did not describe it in the paper so what they understood is that common input was a value magically given",
    "start": "1948000",
    "end": "1955279"
  },
  {
    "text": "to both the approver and verifier beforehand and not controlled by approver however the implementer they understood",
    "start": "1955279",
    "end": "1961679"
  },
  {
    "text": "that common input was just a random value potentially chosen by the prover the",
    "start": "1961679",
    "end": "1966799"
  },
  {
    "text": "problem is that if you do it with this weight it becomes completely insecure and completely broken because anyone can forge a proof so",
    "start": "1966799",
    "end": "1973760"
  },
  {
    "text": "that's a very good example of something that is safe on paper and completely insecure in practice so",
    "start": "1973760",
    "end": "1980960"
  },
  {
    "start": "1979000",
    "end": "1979000"
  },
  {
    "text": "to conclude this part um maybe a disclaimer we don't we don't mean to recommend against npc",
    "start": "1980960",
    "end": "1986799"
  },
  {
    "text": "and tss these are really great technologies that can sometimes provide you with much",
    "start": "1986799",
    "end": "1991840"
  },
  {
    "text": "higher security level but at the same time they are also relatively recent",
    "start": "1991840",
    "end": "1997120"
  },
  {
    "text": "in terms of real-world applications and we're still learning a lot about how to improve the security in terms of",
    "start": "1997120",
    "end": "2003919"
  },
  {
    "text": "procedures and in terms of card safety so if you have questions about this talk",
    "start": "2003919",
    "end": "2010159"
  },
  {
    "text": "feel free to contact us directly you will also find more details in the paper and i would like to thank you for following",
    "start": "2010159",
    "end": "2016320"
  },
  {
    "text": "this this talk in this unusual setting thank you very much",
    "start": "2016320",
    "end": "2021120"
  },
  {
    "text": "hello everyone i don't know how many is watching we have a few minutes left to take",
    "start": "2023279",
    "end": "2029919"
  },
  {
    "text": "questions i'm looking at the uh what's called swap card thing i don't see many questions",
    "start": "2029919",
    "end": "2035760"
  },
  {
    "text": "um but maybe what we can say after this presentation is um i mean",
    "start": "2035760",
    "end": "2041519"
  },
  {
    "text": "if you're using this kind of solution or if using different solutions uh from our experience in practice",
    "start": "2041519",
    "end": "2046880"
  },
  {
    "text": "what's very important even if you use mpc or tss if you have this kind of distributed decentralized",
    "start": "2046880",
    "end": "2051919"
  },
  {
    "text": "setup is still very important to make backups and to have bcp drp plans um because",
    "start": "2051919",
    "end": "2060079"
  },
  {
    "text": "you already have some key to um to protect and it might still happen that some of these",
    "start": "2060079",
    "end": "2066720"
  },
  {
    "text": "devices go offline or that you just accept to these data devices so you always need to",
    "start": "2066720",
    "end": "2071839"
  },
  {
    "text": "have backups whether you use tss or not it's not it's not a trick to avoid making backups and having a proper recovery system",
    "start": "2071839",
    "end": "2078398"
  },
  {
    "text": "uh i see some no not questions comments um yeah and also what may be obvious but",
    "start": "2078399",
    "end": "2084878"
  },
  {
    "text": "that we want to say if you follow the news recently there's been some uh 51 percent attacks on uh ethereum",
    "start": "2084879",
    "end": "2092079"
  },
  {
    "text": "classic dc so of course you you can throw crypto at the let's say at your wallet put some gss",
    "start": "2092079",
    "end": "2098560"
  },
  {
    "text": "npc you name it but if you have an attack on the blockchain behind if your deduction sucks",
    "start": "2098560",
    "end": "2103760"
  },
  {
    "text": "then no amount of crypto in your wallet will save you so you also want to be careful um you know with which uh asset with",
    "start": "2103760",
    "end": "2110480"
  },
  {
    "text": "which cryptocurrency you you walk and also if you have some privacy if you have some currency that is not",
    "start": "2110480",
    "end": "2116560"
  },
  {
    "text": "anonymous such as bitcoin then npc will not protect you against it that's quite obvious but uh",
    "start": "2116560",
    "end": "2123040"
  },
  {
    "text": "um where can we find a link to the paper a good question uh it should appear on the black hat website uh",
    "start": "2123040",
    "end": "2129119"
  },
  {
    "text": "in the next hours or maybe tomorrow and usually they'll usually put it online uh the day after",
    "start": "2129119",
    "end": "2134880"
  },
  {
    "text": "or two hours later uh we just put the slides online there's the link on my twitter",
    "start": "2134880",
    "end": "2140240"
  },
  {
    "text": "and uh in the swap car interface um so you can look for it and then again if",
    "start": "2140240",
    "end": "2145839"
  },
  {
    "text": "you have questions everything feel free to contact us uh we'll be happy to talk about it you see we like talking about crypto but",
    "start": "2145839",
    "end": "2152000"
  },
  {
    "text": "blockchain can stop us so yeah so we have the the paper online we have documentation on",
    "start": "2152000",
    "end": "2158079"
  },
  {
    "text": "github as you can see on the chat so yeah hope it was useful to",
    "start": "2158079",
    "end": "2163359"
  },
  {
    "text": "to you and uh hope to see online or in person next year",
    "start": "2163359",
    "end": "2173838"
  },
  {
    "text": "looking for questions oh have you seen any of these attacks",
    "start": "2182800",
    "end": "2190160"
  },
  {
    "text": "in the wild um i have not um",
    "start": "2190160",
    "end": "2197359"
  },
  {
    "text": "i don't know if omer has a different perspective",
    "start": "2198400",
    "end": "2203760"
  },
  {
    "text": "um",
    "start": "2212839",
    "end": "2215839"
  },
  {
    "text": "uh supposing the privacy can be avoided by creating storing keys in hsn um yeah if you put keys in hsn",
    "start": "2224640",
    "end": "2233839"
  },
  {
    "text": "um you need to use data you need to use hardware some hardware hsns which can get you quite a",
    "start": "2233839",
    "end": "2241040"
  },
  {
    "text": "high level of security and you can also combine uh thresholds circuit threshold signatures",
    "start": "2241040",
    "end": "2246800"
  },
  {
    "text": "with hsns so again it depends on your use case or your on your model on what you need also in terms of hot",
    "start": "2246800",
    "end": "2253520"
  },
  {
    "text": "wallet cold wallet all the broken called open source um",
    "start": "2253520",
    "end": "2261359"
  },
  {
    "text": "to most of it we did not do reverse engineering from binaries to um to look at this code",
    "start": "2261359",
    "end": "2270960"
  },
  {
    "text": "uh any cryptocurrency more than they're able um not three so in this case these",
    "start": "2270960",
    "end": "2279200"
  },
  {
    "text": "attacks they are specific to the wallet technology they are not directly tied to um",
    "start": "2279200",
    "end": "2284800"
  },
  {
    "text": "to an in specific blockchain um they are related to one signing screen",
    "start": "2284800",
    "end": "2290000"
  },
  {
    "text": "so they might apply to each dsid2519 uh some more terrain about",
    "start": "2290000",
    "end": "2295119"
  },
  {
    "text": "cryptocurrency security um no specific comments are very hard",
    "start": "2295119",
    "end": "2313280"
  },
  {
    "text": "i want to say that about the question of how many cryptographers are involved in development of such",
    "start": "2313280",
    "end": "2320320"
  },
  {
    "text": "libraries so it's really good question because uh",
    "start": "2320320",
    "end": "2325599"
  },
  {
    "text": "to find cryptographers applied photographers it's uh they are there so usually the structure",
    "start": "2325599",
    "end": "2331200"
  },
  {
    "text": "of such companies that you have one cryptographer that actually is doing the work and and then like one or two that is doing",
    "start": "2331200",
    "end": "2337839"
  },
  {
    "text": "uh formal auditing and and you probably also um have your code reviewed by by some",
    "start": "2337839",
    "end": "2345119"
  },
  {
    "text": "other um like the theoretical cryptographer what and um",
    "start": "2345119",
    "end": "2352960"
  },
  {
    "text": "so it mostly comes down to battle testing your code so um this is where i think most of it",
    "start": "2352960",
    "end": "2360720"
  },
  {
    "text": "most of this stuff gets exposed so someone asked if we've looked at",
    "start": "2360720",
    "end": "2367760"
  },
  {
    "text": "another uh custody uh cloud-based water solution that i may not name uh we have not i",
    "start": "2367760",
    "end": "2375440"
  },
  {
    "text": "don't know if it's open source you know i don't know much about yeah",
    "start": "2375440",
    "end": "2383838"
  },
  {
    "text": "mitigation a good secure dlc process maybe do some audits and hire good people and test",
    "start": "2392160",
    "end": "2399040"
  },
  {
    "text": "that's your goal understand what your and hope for the best",
    "start": "2399040",
    "end": "2407359"
  }
]