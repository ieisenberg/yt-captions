[
  {
    "text": "[Music]",
    "start": "1130",
    "end": "13840"
  },
  {
    "text": "hello everyone and thank you for joining me for this session my name is suzanna and i work for eset",
    "start": "13840",
    "end": "19680"
  },
  {
    "text": "as a malware researcher and today i will guide you through the topic of anatomy",
    "start": "19680",
    "end": "25439"
  },
  {
    "text": "of native iis malware for those not familiar iis here stands",
    "start": "25439",
    "end": "31599"
  },
  {
    "text": "for internet information services which is microsoft web server software",
    "start": "31599",
    "end": "36800"
  },
  {
    "text": "and this software has a modular architecture so the developers can create and add modules to extend the",
    "start": "36800",
    "end": "44480"
  },
  {
    "text": "functionality of this software but we are going to look at the case where malicious thread actors misuse",
    "start": "44480",
    "end": "51600"
  },
  {
    "text": "this same extensibility so we will cover the topic of malicious iis modules and",
    "start": "51600",
    "end": "58160"
  },
  {
    "text": "how we can dissect them by the way the word native hearing the",
    "start": "58160",
    "end": "63600"
  },
  {
    "text": "title refers to native iis modules which is one of the types supported by the iis",
    "start": "63600",
    "end": "70000"
  },
  {
    "text": "software but we will get to those specifics later so let's start with some",
    "start": "70000",
    "end": "75360"
  },
  {
    "text": "broader context and explain why this is a relevant topic worth studying",
    "start": "75360",
    "end": "82080"
  },
  {
    "text": "so some facts first and the first time you probably already know that iis is not the most popular web",
    "start": "82080",
    "end": "90000"
  },
  {
    "text": "server software out there it's estimated that four to seven percent of websites use this software",
    "start": "90000",
    "end": "98079"
  },
  {
    "text": "and these numbers are based on the recent netcraft web survey and also the recent w3 text survey",
    "start": "98079",
    "end": "106399"
  },
  {
    "text": "but even though iis is not the most widely used web server software you can",
    "start": "106399",
    "end": "111920"
  },
  {
    "text": "still find it running at interesting places remember this is microsoft software so",
    "start": "111920",
    "end": "118479"
  },
  {
    "text": "running in microsoft servers such as microsoft exchange servers with",
    "start": "118479",
    "end": "123920"
  },
  {
    "text": "owa enabled so this owa is running on iis",
    "start": "123920",
    "end": "130160"
  },
  {
    "text": "and that makes is malware a particularly interesting tool when you want to spy on",
    "start": "130160",
    "end": "136959"
  },
  {
    "text": "these servers and we know that owa service is pretty",
    "start": "136959",
    "end": "142400"
  },
  {
    "text": "common especially these days where a lot of people are working from home so they",
    "start": "142400",
    "end": "147440"
  },
  {
    "text": "need to access their email via the web but just to get the idea we ran a",
    "start": "147440",
    "end": "153920"
  },
  {
    "text": "showdown query to find out or to estimate the number of such public",
    "start": "153920",
    "end": "159280"
  },
  {
    "text": "facing exchange servers with owa running and the number is in the hundreds of",
    "start": "159280",
    "end": "165360"
  },
  {
    "text": "thousands so plenty of opportunities to deploy is malware",
    "start": "165360",
    "end": "171120"
  },
  {
    "text": "and one real world example this is exactly what the tridectors have been doing so uh this year after the",
    "start": "171120",
    "end": "178879"
  },
  {
    "text": "disclosure of the proxy logon vulnerability chain at least five distinct trade actors used this",
    "start": "178879",
    "end": "185280"
  },
  {
    "text": "vulnerability to deploy iis backdoors and a lot of organizations were affected",
    "start": "185280",
    "end": "191840"
  },
  {
    "text": "uh among them government organizations in free southeast asian countries but",
    "start": "191840",
    "end": "197519"
  },
  {
    "text": "also dozens of private companies in a wide range of industries in the us in canada",
    "start": "197519",
    "end": "204720"
  },
  {
    "text": "and in other countries and this prox slogan case is just one example but it's good to illustrate how",
    "start": "204720",
    "end": "212400"
  },
  {
    "text": "you would normally get compromised by is malware so through server exploitation",
    "start": "212400",
    "end": "219680"
  },
  {
    "text": "and also this case was about is backdoors but if we look at the whole",
    "start": "219680",
    "end": "224799"
  },
  {
    "text": "class of these threats is not just about backdoors or just about espionage you",
    "start": "224799",
    "end": "230640"
  },
  {
    "text": "can also find ies malware which is stealing credit card information from",
    "start": "230640",
    "end": "235920"
  },
  {
    "text": "e-commerce sites or ones which is serving adware or turning the compromise",
    "start": "235920",
    "end": "241760"
  },
  {
    "text": "server into cnc infrastructure and each of itself would be an",
    "start": "241760",
    "end": "247200"
  },
  {
    "text": "interesting story to tell but we decided to round this app and to look at the",
    "start": "247200",
    "end": "252400"
  },
  {
    "text": "whole class of these threats with one shared aspect that they are implemented",
    "start": "252400",
    "end": "257440"
  },
  {
    "text": "as iis modules and there have been some malicious ies",
    "start": "257440",
    "end": "263040"
  },
  {
    "text": "modules reported in the past so let's quickly look at this well 2007 that's",
    "start": "263040",
    "end": "269520"
  },
  {
    "text": "when is first introduced its modular architecture and then the first malicious is modules",
    "start": "269520",
    "end": "277120"
  },
  {
    "text": "was reported in 2013 by trustwave and then in the following years other",
    "start": "277120",
    "end": "284720"
  },
  {
    "text": "reports were published by unit 42 by segbules d5 and my colleagues here at",
    "start": "284720",
    "end": "293040"
  },
  {
    "text": "eset so these were the known ies malware families at the time",
    "start": "293040",
    "end": "298800"
  },
  {
    "text": "but even though these were all useful resources to learn more about these particular families none of these",
    "start": "298800",
    "end": "305919"
  },
  {
    "text": "reports focused primarily on the topic of ies malware and how you can analyze",
    "start": "305919",
    "end": "311680"
  },
  {
    "text": "it so there is no comprehensive guide for that and this is where our research comes in",
    "start": "311680",
    "end": "318240"
  },
  {
    "text": "so this was our goal to take a systematic approach to this topic and then to build a comprehensive guide for",
    "start": "318240",
    "end": "325759"
  },
  {
    "text": "you to analyze dissect these malicious ies modules and to help everyone",
    "start": "325759",
    "end": "331680"
  },
  {
    "text": "understand this class of threads better we focused on malicious native iis",
    "start": "331680",
    "end": "338560"
  },
  {
    "text": "modules which are those written as c plus plus libraries then there is another category of ies",
    "start": "338560",
    "end": "345199"
  },
  {
    "text": "modules supported by that software and that's managed modules which are dotnet",
    "start": "345199",
    "end": "350479"
  },
  {
    "text": "assemblies but that's a topic for another day so during our research we have collected",
    "start": "350479",
    "end": "357440"
  },
  {
    "text": "over 80 samples of native iis malware and then we studied and categorized",
    "start": "357440",
    "end": "363360"
  },
  {
    "text": "these into 14 malware families 10 of them were never previously documented",
    "start": "363360",
    "end": "370080"
  },
  {
    "text": "but i'm not going into the details of these 14 malware families today you can find all the detailed analyses and other",
    "start": "370080",
    "end": "377199"
  },
  {
    "text": "information in the white paper which is going to be released together with this session",
    "start": "377199",
    "end": "382560"
  },
  {
    "text": "so make sure to grab a copy from the blackhead website after this session",
    "start": "382560",
    "end": "387600"
  },
  {
    "text": "and today rather than focus on any particular trade actor or particular malware family",
    "start": "387600",
    "end": "394639"
  },
  {
    "text": "we are going to discuss the common features extracted from all these",
    "start": "394639",
    "end": "399680"
  },
  {
    "text": "families so what these is malicious modules have in common and",
    "start": "399680",
    "end": "405280"
  },
  {
    "text": "most importantly the practical information on how you can analyze them",
    "start": "405280",
    "end": "411120"
  },
  {
    "text": "and that brings me to today's agenda so first what we're gonna do is we will",
    "start": "411120",
    "end": "416319"
  },
  {
    "text": "explain the architecture and the mechanisms behind the iis server in",
    "start": "416319",
    "end": "421759"
  },
  {
    "text": "general and then also the is malware and then we will discuss how we can",
    "start": "421759",
    "end": "428080"
  },
  {
    "text": "analyze such is malicious modules so this will be the practical part for the",
    "start": "428080",
    "end": "434639"
  },
  {
    "text": "reversers in the audience and then the next section will cover the",
    "start": "434639",
    "end": "440000"
  },
  {
    "text": "techniques used by iis malware so here we will show you what these trajectories",
    "start": "440000",
    "end": "446400"
  },
  {
    "text": "are up to when they are using ies malware so this will be a more high-level part with the demonstration",
    "start": "446400",
    "end": "453759"
  },
  {
    "text": "so even if you don't plan to analyze any is malware anytime soon hopefully this",
    "start": "453759",
    "end": "460080"
  },
  {
    "text": "part will be interesting for you as well and then finally we will quickly look at",
    "start": "460080",
    "end": "466000"
  },
  {
    "text": "the defense side for some tips on how you can detect remove and avoid these",
    "start": "466000",
    "end": "472240"
  },
  {
    "text": "threats so this is our plan for today and let's get started with the architecture",
    "start": "472240",
    "end": "480560"
  },
  {
    "text": "so in this section we will introduce some iis terminology and we will explain",
    "start": "480560",
    "end": "487039"
  },
  {
    "text": "how the server operates and also when is it that the malware fits in",
    "start": "487039",
    "end": "493039"
  },
  {
    "text": "so some basics first well we already mentioned that iis has a modular architecture but there is more to it",
    "start": "493039",
    "end": "499919"
  },
  {
    "text": "than just these modules other components include is services",
    "start": "499919",
    "end": "505360"
  },
  {
    "text": "which are by default configured to run at each system start and then there is",
    "start": "505360",
    "end": "510720"
  },
  {
    "text": "the iis worker process which handles all the requests received by the server so",
    "start": "510720",
    "end": "516800"
  },
  {
    "text": "this one is very important and this process will load all the iis",
    "start": "516800",
    "end": "522080"
  },
  {
    "text": "modules which are configured on the server and usually there are dozen or more of these modules so it's a pretty",
    "start": "522080",
    "end": "529040"
  },
  {
    "text": "standard mechanism that there are some some of these extensions so this is well the where the main functionality of the",
    "start": "529040",
    "end": "536240"
  },
  {
    "text": "server will be implemented and in our case we are talking about a malicious ios module right so imagine",
    "start": "536240",
    "end": "543839"
  },
  {
    "text": "that among those dozens of modules on the server there is one which is malicious",
    "start": "543839",
    "end": "549440"
  },
  {
    "text": "so when we look at this malicious module well it doesn't really need to do anything special for persistence or",
    "start": "549440",
    "end": "556800"
  },
  {
    "text": "execution because as long as it's configured as an is module it gets",
    "start": "556800",
    "end": "562080"
  },
  {
    "text": "loaded by the is worker process and while is is persistent in itself so",
    "start": "562080",
    "end": "569920"
  },
  {
    "text": "that's one advantage to the persistent sis module then another advantage for",
    "start": "569920",
    "end": "575680"
  },
  {
    "text": "the malware is that once it's loaded by the is worker process it will see all",
    "start": "575680",
    "end": "582399"
  },
  {
    "text": "the traffic coming through the iis server and it will also be able to affect the request processing so the",
    "start": "582399",
    "end": "590399"
  },
  {
    "text": "request processing is something that we will look at next so how does that work",
    "start": "590399",
    "end": "596560"
  },
  {
    "text": "well whenever there is a new http request coming to the iis server it",
    "start": "596560",
    "end": "602800"
  },
  {
    "text": "enters a so-called request processing pipeline which is basically a series of",
    "start": "602800",
    "end": "608079"
  },
  {
    "text": "steps called events of steps such as authentication logging",
    "start": "608079",
    "end": "613519"
  },
  {
    "text": "and so on and these steps are taken one after another until the server persister",
    "start": "613519",
    "end": "619600"
  },
  {
    "text": "processes the request and sends the appropriate http response",
    "start": "619600",
    "end": "625200"
  },
  {
    "text": "and on a deeper level what really happens is that each of these events generates an even",
    "start": "625200",
    "end": "631600"
  },
  {
    "text": "notification which is then handled by an event handler which is implemented in",
    "start": "631600",
    "end": "637279"
  },
  {
    "text": "the iis modules so for example the authorization event",
    "start": "637279",
    "end": "642959"
  },
  {
    "text": "will generate a notification which is handled by the unauthorized request",
    "start": "642959",
    "end": "648000"
  },
  {
    "text": "handler and after that event the server will also generate a second notification so",
    "start": "648000",
    "end": "654640"
  },
  {
    "text": "it's just after the event that's why it's called post event notification and",
    "start": "654640",
    "end": "659680"
  },
  {
    "text": "again that one is handled by another handler in those ies modules",
    "start": "659680",
    "end": "665440"
  },
  {
    "text": "but honestly if you are just here to learn about how to analyze is malware",
    "start": "665440",
    "end": "670880"
  },
  {
    "text": "you don't really have to distinguish between these event and post even notifications",
    "start": "670880",
    "end": "676720"
  },
  {
    "text": "you do want to know which events are handled by the malware so in which part of the request processing it interferes",
    "start": "676720",
    "end": "684399"
  },
  {
    "text": "but you don't have to pay attention to these events so just know that uh the events which",
    "start": "684399",
    "end": "690720"
  },
  {
    "text": "can be handled by that by the malware are first of all these which are listed here so that's uh events tied to the",
    "start": "690720",
    "end": "697920"
  },
  {
    "text": "request processing but then there are other events such as on send response",
    "start": "697920",
    "end": "703360"
  },
  {
    "text": "send response event which is handled by the onsen response handler and that one",
    "start": "703360",
    "end": "709200"
  },
  {
    "text": "is not listed here because it can occur in any place of the pipeline so it doesn't have a fixed place but it can",
    "start": "709200",
    "end": "715920"
  },
  {
    "text": "also be handled by the malware so it's also where the malware can interfere",
    "start": "715920",
    "end": "721040"
  },
  {
    "text": "and then there are also other events which are occurring on the global level so not",
    "start": "721040",
    "end": "726480"
  },
  {
    "text": "tied to the request processing and these can also be handled by any is module",
    "start": "726480",
    "end": "733040"
  },
  {
    "text": "and how do these even handlers work well these event handlers are actually",
    "start": "733040",
    "end": "738320"
  },
  {
    "text": "methods of module classes so whenever you analyze an is malware you will",
    "start": "738320",
    "end": "745279"
  },
  {
    "text": "always see a class either inheriting from c http module or c global module so",
    "start": "745279",
    "end": "752160"
  },
  {
    "text": "one of them handles the request level events another the global events and there can be one",
    "start": "752160",
    "end": "759680"
  },
  {
    "text": "or both in any malicious ies module and then these event handlers",
    "start": "759680",
    "end": "765680"
  },
  {
    "text": "implemented here are the most important part of any is module because this is",
    "start": "765680",
    "end": "770880"
  },
  {
    "text": "where the main functionality will be hidden so if you are looking at a suspicious",
    "start": "770880",
    "end": "776639"
  },
  {
    "text": "ies module and you want to check if it's malicious well this is where you will be",
    "start": "776639",
    "end": "782000"
  },
  {
    "text": "looking at these even handlers and usually not all of them will be implemented by is malware so it can be",
    "start": "782000",
    "end": "788959"
  },
  {
    "text": "tour free and this is not a rule but from those malware families that we",
    "start": "788959",
    "end": "795440"
  },
  {
    "text": "analyzed it seems like some of these email handlers are more popular than the",
    "start": "795440",
    "end": "800720"
  },
  {
    "text": "others so for example the on begging beating request or the",
    "start": "800720",
    "end": "806399"
  },
  {
    "text": "onsen respawn handlers are usually handled by the malware well basically",
    "start": "806399",
    "end": "811680"
  },
  {
    "text": "the malware wants to step in whenever there is a new http request coming to",
    "start": "811680",
    "end": "817120"
  },
  {
    "text": "the server and also just before the http response is sent but as i said that's",
    "start": "817120",
    "end": "823040"
  },
  {
    "text": "not the rule and then there are also other handlers handled by the malicious iis modules",
    "start": "823040",
    "end": "830079"
  },
  {
    "text": "such as on log request and this one can be used to make sure that no malicious",
    "start": "830079",
    "end": "836480"
  },
  {
    "text": "activity is locked on the server and we have seen such case",
    "start": "836480",
    "end": "841839"
  },
  {
    "text": "well in any case uh this is uh how the event handlers are important for the",
    "start": "841839",
    "end": "847440"
  },
  {
    "text": "malware but one more mechanism that they need to mention is how these event handlers register for these even",
    "start": "847440",
    "end": "854839"
  },
  {
    "text": "notifications and that's implemented in the dll export called register module so all",
    "start": "854839",
    "end": "862240"
  },
  {
    "text": "of these native is modules are dll libraries so they all export the same",
    "start": "862240",
    "end": "867920"
  },
  {
    "text": "function called register module and this is where the initialization will take",
    "start": "867920",
    "end": "873199"
  },
  {
    "text": "place so two things will be implemented in any register module function",
    "start": "873199",
    "end": "879199"
  },
  {
    "text": "the first one is that the function will create instances of the core classes",
    "start": "879199",
    "end": "885600"
  },
  {
    "text": "and then the second step is that it will call the set request notifications",
    "start": "885600",
    "end": "890639"
  },
  {
    "text": "method and this is to specify which event should be handled by this module",
    "start": "890639",
    "end": "896800"
  },
  {
    "text": "so in this example we can see uh that there is the rq send response constant",
    "start": "896800",
    "end": "902800"
  },
  {
    "text": "that just tells us that this module will handle the onsen response event",
    "start": "902800",
    "end": "910399"
  },
  {
    "text": "and optionally the register module function can also set the priority for",
    "start": "910399",
    "end": "916160"
  },
  {
    "text": "the module or do other initialization steps but these are the two which are",
    "start": "916160",
    "end": "921440"
  },
  {
    "text": "always implemented there all right so this is how the is server",
    "start": "921440",
    "end": "928160"
  },
  {
    "text": "components interact with each other and what are the main mechanisms and now",
    "start": "928160",
    "end": "933519"
  },
  {
    "text": "let's look at the reversing side so let's quickly go over four steps that",
    "start": "933519",
    "end": "939199"
  },
  {
    "text": "you can take to kick start any analysis of a malicious is module",
    "start": "939199",
    "end": "945920"
  },
  {
    "text": "so at first i recommend to import the relevant interfaces into your favorite",
    "start": "945920",
    "end": "951440"
  },
  {
    "text": "disassembler as listed here they'll all implement it in is car.dll",
    "start": "951440",
    "end": "958320"
  },
  {
    "text": "and you will need those because uh the is modules rely heavily on iis c plus",
    "start": "958320",
    "end": "964240"
  },
  {
    "text": "plus api calls so you will need them to interpret all the virtual function calls",
    "start": "964240",
    "end": "969759"
  },
  {
    "text": "across the module then as a second step start analyzing",
    "start": "969759",
    "end": "975040"
  },
  {
    "text": "from the register module export usually it's very simple and straightforward as i said that there are",
    "start": "975040",
    "end": "981360"
  },
  {
    "text": "those two steps which are implemented here so you usually want to use it to find",
    "start": "981360",
    "end": "986720"
  },
  {
    "text": "out which handlers are implemented in the module but in some cases the function can be",
    "start": "986720",
    "end": "993120"
  },
  {
    "text": "much more complex there can be some structural initialization or string",
    "start": "993120",
    "end": "998399"
  },
  {
    "text": "decryption and so on so definitely don't overlook this export because it's not",
    "start": "998399",
    "end": "1003680"
  },
  {
    "text": "always so short and simple and here just as a side note you may",
    "start": "1003680",
    "end": "1009440"
  },
  {
    "text": "notice these small green icons popping up in the rest of the presentation and",
    "start": "1009440",
    "end": "1014639"
  },
  {
    "text": "that's just a reference for you for where you can find more information in the paper but definitely you don't need",
    "start": "1014639",
    "end": "1021120"
  },
  {
    "text": "to read those small notes now anyway back to the reversing so the",
    "start": "1021120",
    "end": "1027280"
  },
  {
    "text": "third step you will take is to identify the actual implemented handlers in the",
    "start": "1027280",
    "end": "1032400"
  },
  {
    "text": "code and this one is easy because you will immediately know when some handler was",
    "start": "1032400",
    "end": "1038319"
  },
  {
    "text": "not implemented it will look like this you can see there are some debug strings",
    "start": "1038319",
    "end": "1043918"
  },
  {
    "text": "so you can disregard those and use that as a guide to find those handlers which",
    "start": "1043919",
    "end": "1049280"
  },
  {
    "text": "are actually implemented so these we will mark and we will start analyzing them which will not be that",
    "start": "1049280",
    "end": "1056160"
  },
  {
    "text": "easy as finding them but just know that not all the",
    "start": "1056160",
    "end": "1061840"
  },
  {
    "text": "implemented handlers are necessarily malicious handlers so for example we",
    "start": "1061840",
    "end": "1067120"
  },
  {
    "text": "analyzed one family which was a trojanized version of a legitimate iis module so of course in that case some of",
    "start": "1067120",
    "end": "1074240"
  },
  {
    "text": "the handlers were taken from the original module so those were benign and then there was one malicious handler",
    "start": "1074240",
    "end": "1080720"
  },
  {
    "text": "added on top and the design of these ies modules makes this very easy to do it this way",
    "start": "1080720",
    "end": "1087840"
  },
  {
    "text": "so just know that not all the handlers are necessarily part of the malware",
    "start": "1087840",
    "end": "1094240"
  },
  {
    "text": "but anyway once you have your handlers identified this is where you will spend the most",
    "start": "1094240",
    "end": "1100640"
  },
  {
    "text": "time analyzing so for that i link here the native code api reference which you",
    "start": "1100640",
    "end": "1106960"
  },
  {
    "text": "will need for the analysis and as another guide for the analysis",
    "start": "1106960",
    "end": "1113919"
  },
  {
    "text": "you need to know what you can expect in those handlers so here in our next part",
    "start": "1113919",
    "end": "1119360"
  },
  {
    "text": "we will look at how to understand these iis modules this is malware so what kind",
    "start": "1119360",
    "end": "1125760"
  },
  {
    "text": "of techniques it uses and what are their objectives as the key feature to understand uh you",
    "start": "1125760",
    "end": "1132640"
  },
  {
    "text": "should know that all these is malware modules will process http requests",
    "start": "1132640",
    "end": "1138080"
  },
  {
    "text": "coming to the server so the question is which requests are processed and which are ignored and also",
    "start": "1138080",
    "end": "1144720"
  },
  {
    "text": "how are they processed and we identified four or five main",
    "start": "1144720",
    "end": "1150559"
  },
  {
    "text": "types of ies malware so let's introduce these five types",
    "start": "1150559",
    "end": "1157200"
  },
  {
    "text": "so the first group is is backdoors and these backdoors are usually used by",
    "start": "1157200",
    "end": "1162559"
  },
  {
    "text": "attackers to control the server remotely execute commands and these iis backdoors are passive",
    "start": "1162559",
    "end": "1169840"
  },
  {
    "text": "implants so it's not the standard case where the malware contacts the cnc",
    "start": "1169840",
    "end": "1175280"
  },
  {
    "text": "server but in this case it's the attacker who initiates the connection by",
    "start": "1175280",
    "end": "1180640"
  },
  {
    "text": "sending a special http request and then this request can have some",
    "start": "1180640",
    "end": "1185760"
  },
  {
    "text": "vector command embedded which the server will execute and then it can optionally embed some command",
    "start": "1185760",
    "end": "1192799"
  },
  {
    "text": "output or other data in the http response as for the commands",
    "start": "1192799",
    "end": "1198720"
  },
  {
    "text": "well from the malware families that we analyzed there wasn't any special",
    "start": "1198720",
    "end": "1203840"
  },
  {
    "text": "iis special backdoor comment so it's the usual download upload files or execute",
    "start": "1203840",
    "end": "1210799"
  },
  {
    "text": "comments but what i want to discuss in more detail are these attacker http requests",
    "start": "1210799",
    "end": "1218400"
  },
  {
    "text": "so we need to we need to understand that these iis modules will see all the requests coming",
    "start": "1218400",
    "end": "1225520"
  },
  {
    "text": "to the iis server the request from the legitimate visitors but also the request from the attacker",
    "start": "1225520",
    "end": "1231440"
  },
  {
    "text": "in this case so they need to distinguish between those so there needs to be some mechanism on how to mark these attacker",
    "start": "1231440",
    "end": "1238880"
  },
  {
    "text": "requests so that the is malware can recognize them and this can be implemented in different",
    "start": "1238880",
    "end": "1244960"
  },
  {
    "text": "ways for example the attacker can embed some spec specific http header in their",
    "start": "1244960",
    "end": "1251200"
  },
  {
    "text": "request or there can be a hard-coded password in the header or in the url or",
    "start": "1251200",
    "end": "1257039"
  },
  {
    "text": "in the request body but there are also other cases which are more complex so this is one such example",
    "start": "1257039",
    "end": "1264080"
  },
  {
    "text": "where this malware family doesn't look for a specific password in the request",
    "start": "1264080",
    "end": "1270080"
  },
  {
    "text": "but it looks for a specific relationship between the url and then the host and",
    "start": "1270080",
    "end": "1275919"
  },
  {
    "text": "cookie header so the malware will calculate ndp hashes of these values and",
    "start": "1275919",
    "end": "1281280"
  },
  {
    "text": "it will rearrange them and compare them in a certain way to make sure that this",
    "start": "1281280",
    "end": "1286320"
  },
  {
    "text": "is indeed the attacker request and uh interestingly this is more uh",
    "start": "1286320",
    "end": "1293039"
  },
  {
    "text": "difficult to find in the logs or more difficult to fingerprint for the defenders so that's",
    "start": "1293039",
    "end": "1298960"
  },
  {
    "text": "probably the reasons why they did it this way so when we compare it to another malware families another",
    "start": "1298960",
    "end": "1306320"
  },
  {
    "text": "backdoors which have a hard-coded password or which have some specific header well you",
    "start": "1306320",
    "end": "1312720"
  },
  {
    "text": "can more easily find this in the locks as a defender but in this case it's not",
    "start": "1312720",
    "end": "1318480"
  },
  {
    "text": "so straightforward so that's an anti-detection technique",
    "start": "1318480",
    "end": "1323679"
  },
  {
    "text": "and then let's move on to the next category of is malware and that's is",
    "start": "1323679",
    "end": "1328720"
  },
  {
    "text": "info stealers and these steal data from legitimate visitors so they're listening",
    "start": "1328720",
    "end": "1334400"
  },
  {
    "text": "to the traffic coming to the server and then they lock and exfiltrate some information",
    "start": "1334400",
    "end": "1341600"
  },
  {
    "text": "such as credit card information or credentials so in this one example this",
    "start": "1341600",
    "end": "1347760"
  },
  {
    "text": "malware family will listen to all the incoming traffic and then once there is a http request coming to a specific uri",
    "start": "1347760",
    "end": "1356960"
  },
  {
    "text": "such as a request such as checkout or payment then this request is identified and the",
    "start": "1356960",
    "end": "1363280"
  },
  {
    "text": "malware locks it and mower doesn't do anything with the http response so the user will not be",
    "start": "1363280",
    "end": "1370320"
  },
  {
    "text": "aware and then the attacker can also contact the same server by sending a special",
    "start": "1370320",
    "end": "1376080"
  },
  {
    "text": "attacker request just like in the backdoor case and on this special request the malware will exfiltrate the",
    "start": "1376080",
    "end": "1382320"
  },
  {
    "text": "collected data of course https doesn't help the user",
    "start": "1382320",
    "end": "1388159"
  },
  {
    "text": "here in any way because the malware runs on the server so it will see the decrypted version of the data",
    "start": "1388159",
    "end": "1396400"
  },
  {
    "text": "now let's have a quick demonstration so let's look at at an example of how",
    "start": "1396400",
    "end": "1403440"
  },
  {
    "text": "this is infostiller can work so what we have here is a",
    "start": "1403440",
    "end": "1408960"
  },
  {
    "text": "clean installation of iis server but with an added module which is",
    "start": "1408960",
    "end": "1415360"
  },
  {
    "text": "both an infosteeler and backdoor so now we are opening ies manager which is a",
    "start": "1415360",
    "end": "1421120"
  },
  {
    "text": "tool where you can see the server configuration and we are opening it to show you the list of the modules and in",
    "start": "1421120",
    "end": "1429120"
  },
  {
    "text": "that list of modules you will see one called is backdoor so we name it this",
    "start": "1429120",
    "end": "1434159"
  },
  {
    "text": "way just to make it more obvious but that wouldn't happen in the real world case",
    "start": "1434159",
    "end": "1439279"
  },
  {
    "text": "and what we're going to do is we are going to interact with this server by sending it http request using the python",
    "start": "1439279",
    "end": "1446000"
  },
  {
    "text": "request library so the first request will be just the standard request just to see what kind",
    "start": "1446000",
    "end": "1452559"
  },
  {
    "text": "of response the server would normally send back to a user just pay attention to the headers which is important to",
    "start": "1452559",
    "end": "1459760"
  },
  {
    "text": "this particular malware and then in our next step we will send a",
    "start": "1459760",
    "end": "1465279"
  },
  {
    "text": "request as a standard legitimate visitor of this server who tries to authenticate",
    "start": "1465279",
    "end": "1470400"
  },
  {
    "text": "so we include some kind of password in the http request body and from the response we can see it's",
    "start": "1470400",
    "end": "1477919"
  },
  {
    "text": "the same as in the standard case nothing nothing special in the headers",
    "start": "1477919",
    "end": "1483679"
  },
  {
    "text": "and that's because this is the is infostealer so it's mostly listening and logging it doesn't really interfere with",
    "start": "1483679",
    "end": "1490640"
  },
  {
    "text": "the response sent to legitimate user and we know that what kind of log file",
    "start": "1490640",
    "end": "1497840"
  },
  {
    "text": "this malware is using so we can look at inside this log file and we can see that",
    "start": "1497840",
    "end": "1504799"
  },
  {
    "text": "indeed the same password was locked because it was",
    "start": "1504799",
    "end": "1510400"
  },
  {
    "text": "founded in that request from the user uh there's an interesting string password",
    "start": "1510400",
    "end": "1515440"
  },
  {
    "text": "so the malware log that and this will happen in any case where the string password is in the",
    "start": "1515440",
    "end": "1523440"
  },
  {
    "text": "http request from the user because this is how that malware was written",
    "start": "1523440",
    "end": "1528880"
  },
  {
    "text": "and now uh for the interesting part we will switch heads and we will act as the",
    "start": "1528880",
    "end": "1534080"
  },
  {
    "text": "attacker now so we will send another request but this time it's a special attacker request so see there are two",
    "start": "1534080",
    "end": "1541440"
  },
  {
    "text": "special headers included in the request one of them is with the password that we",
    "start": "1541440",
    "end": "1546720"
  },
  {
    "text": "change from the original to demo and then the other header is with the",
    "start": "1546720",
    "end": "1552480"
  },
  {
    "text": "backdoor command so this special headers name is xcom variations and remember",
    "start": "1552480",
    "end": "1559520"
  },
  {
    "text": "that so now we send the request and we can see the response headers and we can see",
    "start": "1559520",
    "end": "1565679"
  },
  {
    "text": "that the same special http header is included in the response from server from the malware",
    "start": "1565679",
    "end": "1574400"
  },
  {
    "text": "so what is sent in this header we can see it's some kind of base64",
    "start": "1574400",
    "end": "1580000"
  },
  {
    "text": "encoded string so let's decode it and let's see our",
    "start": "1580000",
    "end": "1585120"
  },
  {
    "text": "answer for our backdoor command and we can see this is the content of",
    "start": "1585120",
    "end": "1590960"
  },
  {
    "text": "the log file so these are all data collected and locked by the malware",
    "start": "1590960",
    "end": "1597360"
  },
  {
    "text": "by the infostiller so it's all the credentials so this is the main mechanism behind an is infosphere and",
    "start": "1597360",
    "end": "1604799"
  },
  {
    "text": "how it can look like in real world conditions and we will come back to this example",
    "start": "1604799",
    "end": "1611679"
  },
  {
    "text": "but we still have three more malware types to cover so let's continue with",
    "start": "1611679",
    "end": "1617200"
  },
  {
    "text": "the third category and that's is infostealers so this type of malware",
    "start": "1617200",
    "end": "1624080"
  },
  {
    "text": "is also targeting legitimate users of the servers whenever there is a legitimate visitor",
    "start": "1624080",
    "end": "1629840"
  },
  {
    "text": "it looks at its request but this time the request is not locked but it's",
    "start": "1629840",
    "end": "1635039"
  },
  {
    "text": "relayed to the server to obtain a configuration from the server and the configuration is then used to modify the",
    "start": "1635039",
    "end": "1642799"
  },
  {
    "text": "http response from for the user so unlike infosteelers we're actively",
    "start": "1642799",
    "end": "1648080"
  },
  {
    "text": "modifying the response and this is used to serve some malware or adware or redirect the user to",
    "start": "1648080",
    "end": "1655840"
  },
  {
    "text": "another website so to actively serve malicious content to that user",
    "start": "1655840",
    "end": "1662960"
  },
  {
    "text": "and then our next category is is proxies and that's very different from these",
    "start": "1662960",
    "end": "1668399"
  },
  {
    "text": "other cases because this malware is usually used as part of a larger malware",
    "start": "1668399",
    "end": "1674320"
  },
  {
    "text": "infrastructure and it's used to relay traffic between some compromised host",
    "start": "1674320",
    "end": "1680159"
  },
  {
    "text": "and its cnc server so whenever a compromise host contacts",
    "start": "1680159",
    "end": "1686159"
  },
  {
    "text": "this is server it just relays the request to the cnc server and it's doing",
    "start": "1686159",
    "end": "1691440"
  },
  {
    "text": "the same the other way around and the malware actors are usually using",
    "start": "1691440",
    "end": "1697440"
  },
  {
    "text": "this technique to conceal the real location of the cnc server so the compromise host which of course doesn't",
    "start": "1697440",
    "end": "1704720"
  },
  {
    "text": "know about the communication doesn't communicate with the real synthesizer but the compromised proxy",
    "start": "1704720",
    "end": "1711039"
  },
  {
    "text": "and the threat actors can chain multiple such proxies one after another to make it more obscure to find",
    "start": "1711039",
    "end": "1719360"
  },
  {
    "text": "the real cnc server another reason why they are doing it like this is well that compromised",
    "start": "1719360",
    "end": "1726320"
  },
  {
    "text": "server can have a good reputation so maybe they will be able to bypass firewall or other detection mechanisms",
    "start": "1726320",
    "end": "1733840"
  },
  {
    "text": "but in any case these is proxies are only used to relay this kind of traffic",
    "start": "1733840",
    "end": "1740000"
  },
  {
    "text": "but when there is a request from a legitimate visitor of the iis server",
    "start": "1740000",
    "end": "1745360"
  },
  {
    "text": "this request would get ignored by this malware so that's unlike the is infostealers and injectors where that",
    "start": "1745360",
    "end": "1752399"
  },
  {
    "text": "legitimate users or visitors would be directly affected their request here will still get",
    "start": "1752399",
    "end": "1759120"
  },
  {
    "text": "handled by the iis server is just that this malware will ignore them",
    "start": "1759120",
    "end": "1765279"
  },
  {
    "text": "and then there is the last category that we named seo fraud and in this category",
    "start": "1765279",
    "end": "1771039"
  },
  {
    "text": "the real visitors of the server are also ignored so it has a low impact on the",
    "start": "1771039",
    "end": "1777520"
  },
  {
    "text": "legitimate visitors but i still want to mention this category because it's used in a criminal scheme",
    "start": "1777520",
    "end": "1783919"
  },
  {
    "text": "so what's going on the purpose of this malware is to manipulate content served",
    "start": "1783919",
    "end": "1789600"
  },
  {
    "text": "to search engine crawlers to boost seo for some third-party websites",
    "start": "1789600",
    "end": "1796320"
  },
  {
    "text": "so this is not the case where admin would install such malware such functionality by themselves because it's",
    "start": "1796320",
    "end": "1803840"
  },
  {
    "text": "not to boost their seo it reaches techniques you may know under the name blackhead seo but in this case it's the",
    "start": "1803840",
    "end": "1811520"
  },
  {
    "text": "malware that communicates with its cnc server to get the configuration as to",
    "start": "1811520",
    "end": "1817039"
  },
  {
    "text": "which third-party website should be promoted so the compromise iis server is just",
    "start": "1817039",
    "end": "1823440"
  },
  {
    "text": "misused here and all the websites can be promoted by various techniques such as keywords",
    "start": "1823440",
    "end": "1830080"
  },
  {
    "text": "stuffing or injecting lists of backlinks or other techniques but in general uh",
    "start": "1830080",
    "end": "1835520"
  },
  {
    "text": "the uh purpose is to fool these algorithms and this malware doesn't care",
    "start": "1835520",
    "end": "1841360"
  },
  {
    "text": "about the real visitors of this server okay so these were the five main types",
    "start": "1841360",
    "end": "1848000"
  },
  {
    "text": "of ies malware and here you can see the distribution of these types among those",
    "start": "1848000",
    "end": "1854320"
  },
  {
    "text": "14 malware families that we analyzed and as you can see oftentimes there were",
    "start": "1854320",
    "end": "1860240"
  },
  {
    "text": "several functionalities combined in one malware family proxy with seo fraud or backdoor with",
    "start": "1860240",
    "end": "1867200"
  },
  {
    "text": "info stealer but more info on that in the paper because now i still want to cover some",
    "start": "1867200",
    "end": "1875039"
  },
  {
    "text": "basics about what i as administrators can do about these threats",
    "start": "1875039",
    "end": "1881440"
  },
  {
    "text": "so the first question is how you can find such a malicious nativis module on",
    "start": "1881440",
    "end": "1887360"
  },
  {
    "text": "your iis server and there are several ways how you can do it uh well the first",
    "start": "1887360",
    "end": "1893120"
  },
  {
    "text": "is to use this is manager tool that we used in our example so you can use this tool to list all the",
    "start": "1893120",
    "end": "1900399"
  },
  {
    "text": "configured modules on the server and from the list of modules you can get these actual files and you can check",
    "start": "1900399",
    "end": "1907360"
  },
  {
    "text": "whether those dll files are legitimate so either that they're",
    "start": "1907360",
    "end": "1912399"
  },
  {
    "text": "signed by a trusted provider or that it was you who installed these modules",
    "start": "1912399",
    "end": "1917679"
  },
  {
    "text": "but this is not the only way you can also use the command line tool",
    "start": "1917679",
    "end": "1923120"
  },
  {
    "text": "app cmd.exe which is also building on the server or you can just inspect the",
    "start": "1923120",
    "end": "1928320"
  },
  {
    "text": "configuration file manually then additional source of information",
    "start": "1928320",
    "end": "1933679"
  },
  {
    "text": "can be is locks and again you can see the location of these logs using iis",
    "start": "1933679",
    "end": "1940320"
  },
  {
    "text": "manager just be aware that these logs will not be hundred percent reliable",
    "start": "1940320",
    "end": "1945360"
  },
  {
    "text": "well not everything gets locked but more importantly the is malware can also",
    "start": "1945360",
    "end": "1951039"
  },
  {
    "text": "interfere with logging as we have seen even today and finally you can use the yara rules",
    "start": "1951039",
    "end": "1958320"
  },
  {
    "text": "to scan for these 40 nonmalware families so we have put together these arrows and",
    "start": "1958320",
    "end": "1963600"
  },
  {
    "text": "extracted the iocs and you can find that in our github repository",
    "start": "1963600",
    "end": "1969279"
  },
  {
    "text": "and then if you do identify a successful compromise and you want to get rid of it well the first",
    "start": "1969279",
    "end": "1976960"
  },
  {
    "text": "option too is to reinstall the server but if you don't plan to do that",
    "start": "1976960",
    "end": "1982240"
  },
  {
    "text": "then at least this is how you can get rid of that particular module so let's come back to our example with that",
    "start": "1982240",
    "end": "1989760"
  },
  {
    "text": "backdoor plus info stealer and what we are going to do going to do is we will",
    "start": "1989760",
    "end": "1994960"
  },
  {
    "text": "use that command line tool app cmd.xz to remove that one malicious module",
    "start": "1994960",
    "end": "2001919"
  },
  {
    "text": "so this would be when we already know the name of the module so where it's installed so in our case it's this is",
    "start": "2001919",
    "end": "2008960"
  },
  {
    "text": "backdoor and you need to be admin uh to remove such native is module but you don't need",
    "start": "2008960",
    "end": "2015360"
  },
  {
    "text": "to reboot the server afterwards so it's really just this one command",
    "start": "2015360",
    "end": "2020399"
  },
  {
    "text": "so let's check the list of the modules and we can see that this backdoor is no longer there",
    "start": "2020399",
    "end": "2026720"
  },
  {
    "text": "and one more check we want to do is check whether this malware is not",
    "start": "2026720",
    "end": "2032240"
  },
  {
    "text": "running somewhere in the background so we will use that same attacker request that we sent previously and we'll check",
    "start": "2032240",
    "end": "2039679"
  },
  {
    "text": "the response for that special header and we have the response from the server",
    "start": "2039679",
    "end": "2045120"
  },
  {
    "text": "where we can see that there is no special handler embedded so indeed this malware was successfully removed",
    "start": "2045120",
    "end": "2053118"
  },
  {
    "text": "uh you probably still want to check the server for any additional malware and make sure to pass your os and software",
    "start": "2053119",
    "end": "2060638"
  },
  {
    "text": "and change your admin passwords just to make sure you won't get reinfected again",
    "start": "2060639",
    "end": "2066398"
  },
  {
    "text": "but these were the basics and finally here are some thoughts on how",
    "start": "2066399",
    "end": "2072320"
  },
  {
    "text": "you can prevent being compromised with such malware so one thing you should",
    "start": "2072320",
    "end": "2077520"
  },
  {
    "text": "know is that the attackers also need admin rights to install native is",
    "start": "2077520",
    "end": "2082878"
  },
  {
    "text": "malware just like we needed it to uninstall it so together with the fact that these are server threats that",
    "start": "2082879",
    "end": "2090240"
  },
  {
    "text": "narrows down the candidates for initial compromise so we're not talking about phishing",
    "start": "2090240",
    "end": "2095919"
  },
  {
    "text": "emails here but what we are trying to prevent are scenarios such as server",
    "start": "2095919",
    "end": "2102000"
  },
  {
    "text": "exploitation or installing trojanized iis modules or just rope modules in",
    "start": "2102000",
    "end": "2108800"
  },
  {
    "text": "general so try to prevent your exploitation by keeping your server up to date and also",
    "start": "2108800",
    "end": "2116320"
  },
  {
    "text": "by keeping separate accounts for administration with strong passwords",
    "start": "2116320",
    "end": "2122079"
  },
  {
    "text": "consider using a web application firewall or endpoint security solution on the server",
    "start": "2122079",
    "end": "2128480"
  },
  {
    "text": "because still a lot of is servers don't use any security solution and unfortunately that helps the attackers",
    "start": "2128480",
    "end": "2135440"
  },
  {
    "text": "to stay under cover for longer but even if you don't use any security",
    "start": "2135440",
    "end": "2141040"
  },
  {
    "text": "solution at least make sure to only ever install ios modules from trusted sources",
    "start": "2141040",
    "end": "2149040"
  },
  {
    "text": "and that brings me to the end of this session so let's summarize it quickly and let's leave you with some useful",
    "start": "2149359",
    "end": "2156839"
  },
  {
    "text": "resources so first of all as we discussed is malware may be outside of the public",
    "start": "2156839",
    "end": "2164320"
  },
  {
    "text": "interest but it's very much active and it's used for both cyber crime and cyber",
    "start": "2164320",
    "end": "2170839"
  },
  {
    "text": "espionage we have put together a guide that you can use to reverse engineer and",
    "start": "2170839",
    "end": "2176480"
  },
  {
    "text": "understand malicious ios modules and that paper will soon be available at the",
    "start": "2176480",
    "end": "2181839"
  },
  {
    "text": "blackhead website so make sure to grab a copy if you're interested in the topic or if you ever need to analyze any is",
    "start": "2181839",
    "end": "2190240"
  },
  {
    "text": "malware and finally we have shared year rules to detect those 14 malware families that we",
    "start": "2190240",
    "end": "2197520"
  },
  {
    "text": "analyze and also the iocs so if you're a defender you can obtain these from our",
    "start": "2197520",
    "end": "2202560"
  },
  {
    "text": "github repository and with that thank you very much for",
    "start": "2202560",
    "end": "2207680"
  },
  {
    "text": "watching today and this is the time where i will answer your questions if you have any",
    "start": "2207680",
    "end": "2213760"
  },
  {
    "text": "thank you",
    "start": "2213760",
    "end": "2216400"
  }
]