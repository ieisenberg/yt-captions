[
  {
    "text": "hello so this is on wire guard which is fast smart secure VPN tunnel so with",
    "start": "0",
    "end": "7049"
  },
  {
    "text": "some background I'm Jason donenfeld around security company and my background is primarily in exploitation",
    "start": "7049",
    "end": "13830"
  },
  {
    "text": "and funding kernel vulnerabilities crypto vulnerabilities yeah mostly in",
    "start": "13830",
    "end": "18960"
  },
  {
    "text": "breaking things but I've also been doing kernel related development for a long",
    "start": "18960",
    "end": "24869"
  },
  {
    "text": "time and I wanted to make a VPN that would avoid a lot of the things that a lot of the problems that I've seen when",
    "start": "24869",
    "end": "32340"
  },
  {
    "text": "doing offensive research so what is wire garden it's a layer 3 secure network",
    "start": "32340",
    "end": "39960"
  },
  {
    "text": "tunnel for ipv4 and ipv6 and as we'll see throughout this presentation is very",
    "start": "39960",
    "end": "45510"
  },
  {
    "text": "opinionated so in this case it's only layer 3 it only works at the IP level it doesn't do layer 2 Ethernet frames",
    "start": "45510",
    "end": "53100"
  },
  {
    "text": "because I don't think that's the right way to design your network l think that's a good way to do tunneling and so",
    "start": "53100",
    "end": "59969"
  },
  {
    "text": "it only does layer 3 because it's a very opinionated design it's been designed",
    "start": "59969",
    "end": "65939"
  },
  {
    "text": "specifically for the Linux kernel and the Linux kernel networking idioms but we do have cross platforms of limitation",
    "start": "65939",
    "end": "72650"
  },
  {
    "text": "available and hopefully we'll be porting to other kernels as well it's udp-based it doesn't use its own IP",
    "start": "72650",
    "end": "83220"
  },
  {
    "text": "protocol which means it gets through most firewalls in the normal way that UDP gets through firewalls we've tried",
    "start": "83220",
    "end": "91950"
  },
  {
    "text": "to use modern cryptography but also a fairly conservative cryptography nothing too new thing gold and the emphasis of",
    "start": "91950",
    "end": "98640"
  },
  {
    "text": "the project is on general simplicity simplicity and and being really auditable we want people to be able to",
    "start": "98640",
    "end": "104670"
  },
  {
    "text": "sit down read the code understand the project and make sure that it's doing what we say it does the authentication",
    "start": "104670",
    "end": "113310"
  },
  {
    "text": "model is extremely simple it's just like SSH is authenticated keys where both",
    "start": "113310",
    "end": "118649"
  },
  {
    "text": "sides know each other's public use ahead of time and then they can talk to each other there is a presentation in here",
    "start": "118649",
    "end": "126630"
  },
  {
    "text": "before about Open VPN and some problems with it so wire guard is a replacement for Open VPN and the other",
    "start": "126630",
    "end": "133260"
  },
  {
    "text": "standard of IPSec now the code base for this actually grew out of a stealth",
    "start": "133260",
    "end": "138420"
  },
  {
    "text": "rootkit project I was working on where I needed to stay embedded in a network for",
    "start": "138420",
    "end": "143819"
  },
  {
    "text": "quite some time without being discovered and get data in and out securely but it",
    "start": "143819",
    "end": "149670"
  },
  {
    "text": "turns out that a lot of these things that you do for stealth in an offensive setting turn out to be really useful in",
    "start": "149670",
    "end": "156030"
  },
  {
    "text": "a defensive setting when you just want to have a legitimate network tunnel for yourself",
    "start": "156030",
    "end": "162079"
  },
  {
    "text": "so this first idea of being easily auditable when we look at the code counts for this other project but",
    "start": "162079",
    "end": "168599"
  },
  {
    "text": "OpenVPN a hundred sixteen thousand lines of code plus need all of OpenSSL",
    "start": "168599",
    "end": "173639"
  },
  {
    "text": "in order to to run it the Linux xfr M layer which is like kind of the",
    "start": "173639",
    "end": "179670"
  },
  {
    "text": "symmetric part of the IPSec is 119 thousand lines of code but then you need",
    "start": "179670",
    "end": "185370"
  },
  {
    "text": "strong Swann for the key exchange and strongswan is massive four hundred thousand lines of code soft ether is",
    "start": "185370",
    "end": "192989"
  },
  {
    "text": "kind of this jack-of-all-trades user space program that implements a",
    "start": "192989",
    "end": "198090"
  },
  {
    "text": "variety of VPN protocols is three hundred thousand lines of code I mean this is a lot of stuff that is going to",
    "start": "198090",
    "end": "204660"
  },
  {
    "text": "be very difficult has been very difficult for people to audit because it's so big wire guard in contrast is",
    "start": "204660",
    "end": "210930"
  },
  {
    "text": "less than four thousand lines of code yeah so when we visualize this kind of the solar system of VPNs will hire guard",
    "start": "210930",
    "end": "218819"
  },
  {
    "text": "is the Pluto over there and this is really important",
    "start": "218819",
    "end": "224540"
  },
  {
    "text": "we want the project to be one that any security researcher on the weekend just",
    "start": "224540",
    "end": "230609"
  },
  {
    "text": "because he's curious could casually open it up and check things you know when you",
    "start": "230609",
    "end": "237419"
  },
  {
    "text": "have a massive code base maybe you look at it as a security searcher because",
    "start": "237419",
    "end": "243000"
  },
  {
    "text": "you've been paid to as part of a job or because you want to make a massive project out of it but always it's a very",
    "start": "243000",
    "end": "249199"
  },
  {
    "text": "cumbersome undertaking not something you would just casually waltz into whereas I",
    "start": "249199",
    "end": "254310"
  },
  {
    "text": "think with wire guard with such a small code size it resembles more of a toy in",
    "start": "254310",
    "end": "260849"
  },
  {
    "text": "size and so researchers will be more inclined just to take a quick peek because it's quick",
    "start": "260849",
    "end": "267250"
  },
  {
    "text": "it's small the next thing we want is the simplicity of the interface",
    "start": "267250",
    "end": "273280"
  },
  {
    "text": "so if you if you used IPSec before maybe you've struggled with the Linux XF RM",
    "start": "273280",
    "end": "280180"
  },
  {
    "text": "layer to make this happen we have transformation tables and policies and",
    "start": "280180",
    "end": "285460"
  },
  {
    "text": "it's very complicated with wire guard instead you just get a normal network interface so you can add the interface",
    "start": "285460",
    "end": "291880"
  },
  {
    "text": "using IP link you can give it IP addresses routes IP tables basically all",
    "start": "291880",
    "end": "298240"
  },
  {
    "text": "the things that you're used to doing with normal network interfaces like ETA zero or wlan0",
    "start": "298240",
    "end": "303780"
  },
  {
    "text": "you can do just the same with with WG zero with wire guard as we'll see even",
    "start": "303780",
    "end": "311020"
  },
  {
    "text": "kind of antiquated things like Ezio so now and deny become newly possible newly",
    "start": "311020",
    "end": "316570"
  },
  {
    "text": "secured with wire guard but why our guard is also a little bit blasphemous",
    "start": "316570",
    "end": "322980"
  },
  {
    "text": "we've broken a lot of the really nice pristine layering that 90s technology is",
    "start": "322980",
    "end": "330070"
  },
  {
    "text": "like IPSec have so IPSec you get a transformation table that transforms",
    "start": "330070",
    "end": "335380"
  },
  {
    "text": "packets by adding encryption or sometimes even compression yikes and then this is managed",
    "start": "335380",
    "end": "341080"
  },
  {
    "text": "separately by a user space daemon that does the keying that updates a policy table and the transformation table and",
    "start": "341080",
    "end": "348370"
  },
  {
    "text": "so very nicely cleanly layered but that makes it super complex to so with wire",
    "start": "348370",
    "end": "355060"
  },
  {
    "text": "guard we just kind of get rid of all of that and our basic unit instead is the",
    "start": "355060",
    "end": "360370"
  },
  {
    "text": "network interface and then we build up from there we try and use clever engineering tricks and clever",
    "start": "360370",
    "end": "365410"
  },
  {
    "text": "organizational tricks to make it coherent again so we start with",
    "start": "365410",
    "end": "370570"
  },
  {
    "text": "something that at first can possibly do what we need encrypting things and accounting for different peers but then",
    "start": "370570",
    "end": "376960"
  },
  {
    "text": "we're able to gradually solve each of the problems that that has and we have something a lot simpler as a consequence",
    "start": "376960",
    "end": "383250"
  },
  {
    "text": "so how do we do this we have this idea called cryptokey routing we're the",
    "start": "383250",
    "end": "388840"
  },
  {
    "text": "fundamental idea is you have an association between a public key of appear and the IP addresses that that",
    "start": "388840",
    "end": "396700"
  },
  {
    "text": "peer is allowed to be inside the tunnel so let's look the full list of things that wire",
    "start": "396700",
    "end": "402880"
  },
  {
    "text": "interface has a wire guard interface has a private key that's what would identify you for example it has a listening UDP",
    "start": "402880",
    "end": "409720"
  },
  {
    "text": "port so that's how to access your wire guard interface on the internet and that",
    "start": "409720",
    "end": "415120"
  },
  {
    "text": "has a list of peers each peer is identified by his public key his public",
    "start": "415120",
    "end": "420670"
  },
  {
    "text": "key is his name and then it has this list of associated tunnel IP use this",
    "start": "420670",
    "end": "425740"
  },
  {
    "text": "allowed IPs and these are the IP addresses that it can be inside the tunnel not outside but inside the tunnel",
    "start": "425740",
    "end": "432430"
  },
  {
    "text": "and then optionally it has an endpoint IP and port on the internet that is where do I send UDP packets to to find",
    "start": "432430",
    "end": "440140"
  },
  {
    "text": "that peer on the Internet so this is a really important concept we",
    "start": "440140",
    "end": "446290"
  },
  {
    "text": "bind the public key to the IP address and there's always this 1:1 mapping between a and IP address and public key",
    "start": "446290",
    "end": "453570"
  },
  {
    "text": "so if we look at just kind of an example text configuration a server would have a",
    "start": "453570",
    "end": "462340"
  },
  {
    "text": "private key and list on a well-known listen port and it would say alright",
    "start": "462340",
    "end": "467890"
  },
  {
    "text": "this peer can be in the slash 32 in the slash 24 the other peer can be in this",
    "start": "467890",
    "end": "473710"
  },
  {
    "text": "slash 32 in the slash 16 but then on the client the client might want to say",
    "start": "473710",
    "end": "479170"
  },
  {
    "text": "alright my allowed IP is is going to be 0 0 0 slash 0 so that would mean I trust",
    "start": "479170",
    "end": "484180"
  },
  {
    "text": "the server to send me any packets through the tunnel which would be the case if you wanted to use a wire at",
    "start": "484180",
    "end": "490330"
  },
  {
    "text": "server for tunneling internet traffic for example so here's the flow of",
    "start": "490330",
    "end": "495880"
  },
  {
    "text": "packets when when you send things from user space so you type ping and this",
    "start": "495880",
    "end": "502360"
  },
  {
    "text": "issue is the sense this call you send a packet the Linux kernel then goes the ordinary routing table and it determines",
    "start": "502360",
    "end": "508480"
  },
  {
    "text": "that this should be routed using the W g0 interface then wire guard now has the",
    "start": "508480",
    "end": "513520"
  },
  {
    "text": "packet and we look at the destination IP address to determine which peer should we send it to and then once we know",
    "start": "513520",
    "end": "520659"
  },
  {
    "text": "which appear we should send it to we encrypt it and we send it to that peers end point on the other end it works in",
    "start": "520660",
    "end": "526690"
  },
  {
    "text": "Reverse where wire guard will receive through its UDP socket and encrypted packet it'll decrypt that and well it",
    "start": "526690",
    "end": "533320"
  },
  {
    "text": "decrypts it and it will to Herman which pier encrypted it then",
    "start": "533320",
    "end": "538700"
  },
  {
    "text": "it'll look at the source IP address of that decrypted packet and say were I to",
    "start": "538700",
    "end": "544310"
  },
  {
    "text": "be sending to this source IP address would I send it to the same pier that",
    "start": "544310",
    "end": "550280"
  },
  {
    "text": "just sent me this packet so it was a kind of reverse path filtering there but",
    "start": "550280",
    "end": "555680"
  },
  {
    "text": "cryptographically enforced and then once it checks out that indeed this pier is allowed to have sent that packet as that",
    "start": "555680",
    "end": "561950"
  },
  {
    "text": "IP address then it just hands it off to the rest of the Linux networking stack so this model here makes system",
    "start": "561950",
    "end": "570770"
  },
  {
    "text": "administration extremely simple if it comes from wt0 and it comes from the IP",
    "start": "570770",
    "end": "576590"
  },
  {
    "text": "address say 191 68 517 and that's for yoshi's public key then we know it",
    "start": "576590",
    "end": "582050"
  },
  {
    "text": "definitely came from Yoshi and it couldn't have come from anyone else cryptographically enforced and so the IP",
    "start": "582050",
    "end": "588350"
  },
  {
    "text": "table is rules for this kind of thing or playing the simple comes from the wiring interface it's from the given IP address",
    "start": "588350",
    "end": "593630"
  },
  {
    "text": "and then you know it's authentically from who you want it to be from so I",
    "start": "593630",
    "end": "599720"
  },
  {
    "text": "mentioned this was was simple and the intent is that you set things up",
    "start": "599720",
    "end": "605630"
  },
  {
    "text": "stateless Lee so you have W g0 and it looks kind of like an ETA zero but of",
    "start": "605630",
    "end": "612260"
  },
  {
    "text": "course all all network protocols that",
    "start": "612260",
    "end": "617360"
  },
  {
    "text": "use cryptography or most I should say require some kind of state for things",
    "start": "617360",
    "end": "622430"
  },
  {
    "text": "like for secrecy or uncle and key exchanges and so forth but wire guard a",
    "start": "622430",
    "end": "628550"
  },
  {
    "text": "peer state listed administrator so the way we do this is with a series of timers and the timers manage all the",
    "start": "628550",
    "end": "637820"
  },
  {
    "text": "session state invisibly behind the scenes that doesn't require any configuration and it just works you turn",
    "start": "637820",
    "end": "645920"
  },
  {
    "text": "it on and wire there it starts working we've tried to keep the timer model state machine extremely simple so that",
    "start": "645920",
    "end": "652130"
  },
  {
    "text": "every transition between each state is accounted for so we have no undefined corners of it so we have four main",
    "start": "652130",
    "end": "661490"
  },
  {
    "text": "events user space sends a packet now if there has been no session that's been",
    "start": "661490",
    "end": "666710"
  },
  {
    "text": "established for the last two minutes then we send a handshake initiation packet if we don't get a response to",
    "start": "666710",
    "end": "673429"
  },
  {
    "text": "that packet after five seconds then we send a new one now after we successfully",
    "start": "673429",
    "end": "679839"
  },
  {
    "text": "authenticate an incoming packet like a data packet we get from a peer and we're",
    "start": "679839",
    "end": "685879"
  },
  {
    "text": "certain that the peers actually sent it to us then we wait 10 seconds if during",
    "start": "685879",
    "end": "691730"
  },
  {
    "text": "there was 10 seconds we have a packet to reply such as I tend to pain you send a pong that's fine we do nothing but if we",
    "start": "691730",
    "end": "699499"
  },
  {
    "text": "don't have anything to send within 10 seconds naturally then we just send an authenticated empty packet this way if",
    "start": "699499",
    "end": "707540"
  },
  {
    "text": "we've sent information but but we haven't received anything back within 15",
    "start": "707540",
    "end": "713029"
  },
  {
    "text": "seconds we know something went wrong with the with the connection and we send a new handshake initiation",
    "start": "713029",
    "end": "720040"
  },
  {
    "text": "now notably the this all stops when no-one's sending anything if no one's",
    "start": "720040",
    "end": "725869"
  },
  {
    "text": "sending anything I haven't received a message that I'm inclined to reply to and so I don't reply and so it goes",
    "start": "725869",
    "end": "731480"
  },
  {
    "text": "silent which is nice for stealth as I'll see you later but well people are talking we make sure that we'll continue",
    "start": "731480",
    "end": "738410"
  },
  {
    "text": "to be able to talk successfully with simple time or state machine so as I",
    "start": "738410",
    "end": "746239"
  },
  {
    "text": "mentioned the the interface is super simple it's trying to be stateless to the administrator we add it interface",
    "start": "746239",
    "end": "752629"
  },
  {
    "text": "you configure its peers and then immediately you can just send packets we",
    "start": "752629",
    "end": "758869"
  },
  {
    "text": "try and have very few configuration knobs for this and the goal is that if you set it up wrong it just won't work",
    "start": "758869",
    "end": "765829"
  },
  {
    "text": "as opposed to setting it up wrong and then you have some terrible security catastrophe they didn't realize because",
    "start": "765829",
    "end": "772759"
  },
  {
    "text": "it seemed to be working no but in this case we want to failsafe the endpoints",
    "start": "772759",
    "end": "779329"
  },
  {
    "text": "also Rome so you don't actually have to specify where to reach a peer on the",
    "start": "779329",
    "end": "785689"
  },
  {
    "text": "Internet if a packet from a peer arrives at your computer and it authenticates",
    "start": "785689",
    "end": "790970"
  },
  {
    "text": "successfully then if you want to talk back to that peer you just talk back to wherever that peer was sending packets",
    "start": "790970",
    "end": "796850"
  },
  {
    "text": "from so this means if you put your laptop to sleep and what network and wake it up in another it'll just keep working or roam",
    "start": "796850",
    "end": "803060"
  },
  {
    "text": "seamlessly with to one from the other from one to the other if you have a mobile phone with Wi-Fi and and cellular",
    "start": "803060",
    "end": "810500"
  },
  {
    "text": "and you switch between the two it'll just roam automatically between the two of them if you've ever used",
    "start": "810500",
    "end": "816350"
  },
  {
    "text": "maash which is kind of a UDP SSH it's",
    "start": "816350",
    "end": "821810"
  },
  {
    "text": "very similar in nature to that so before",
    "start": "821810",
    "end": "827959"
  },
  {
    "text": "we go further into how this all works I just want to show a demo of what it's like to set it up so you have more more intuition on what this all looks like",
    "start": "827959",
    "end": "836410"
  },
  {
    "text": "okay so we have a peer a and a peer B so",
    "start": "839589",
    "end": "845390"
  },
  {
    "text": "a peer a will generate a new product GWG Genki and we'll do the same on pure beef and when we look at the private keys",
    "start": "845390",
    "end": "851839"
  },
  {
    "text": "these very short base64 encoded string then from the private key we can drive a",
    "start": "851839",
    "end": "858680"
  },
  {
    "text": "public key using WG pub key okay now in",
    "start": "858680",
    "end": "865790"
  },
  {
    "text": "puree we add a wire guard interface so and to be 0 type wire guard we give it an IP address this is just kind of",
    "start": "865790",
    "end": "873410"
  },
  {
    "text": "normal boring Linux networking stuff and",
    "start": "873410",
    "end": "879310"
  },
  {
    "text": "then we tell it here's the private key that you should use because we just generated this file in private and then",
    "start": "879310",
    "end": "885500"
  },
  {
    "text": "we set the interface up using IP link setup then we do the same on pure beef",
    "start": "885500",
    "end": "891230"
  },
  {
    "text": "we have a WG interface we give it an IP address",
    "start": "891230",
    "end": "896290"
  },
  {
    "text": "you know we assign it the private key that we've just generated and we set it",
    "start": "896290",
    "end": "904459"
  },
  {
    "text": "up so now when we hit IP address we can",
    "start": "904459",
    "end": "910699"
  },
  {
    "text": "see the various various interfaces we have to start with we have ETA 0 that's",
    "start": "910699",
    "end": "918050"
  },
  {
    "text": "like our internet facing interface so that's in the 192 168 range and then we",
    "start": "918050",
    "end": "927320"
  },
  {
    "text": "have WG zero and that's an is like a 10 slash 24 range so that's inside the",
    "start": "927320",
    "end": "932930"
  },
  {
    "text": "tunnel so now let's tell the peers of battle each other when we hit wd0 we see that",
    "start": "932930",
    "end": "939440"
  },
  {
    "text": "they each have a public key and a private key now they're both listening on a port and that will tell one to",
    "start": "939440",
    "end": "944660"
  },
  {
    "text": "another with the amazing key exchange mechanism called copy and paste now were you to be using this in a bigger setting",
    "start": "944660",
    "end": "950900"
  },
  {
    "text": "you could of course strip this use databases even use TLS it doesn't matter but just for this we're doing the",
    "start": "950900",
    "end": "958310"
  },
  {
    "text": "initial key exchange through copy and paste which I'm sure you've already done with say SSH so we tell puree about pier",
    "start": "958310",
    "end": "967700"
  },
  {
    "text": "B we gave it the public key and we say here the IP address is that B is allowed to be in the tunnel and here's its end",
    "start": "967700",
    "end": "974660"
  },
  {
    "text": "point on the Internet and now we do the same thing on pure B",
    "start": "974660",
    "end": "980570"
  },
  {
    "text": "we say okay here's purées public key again copy and paste here we give it the",
    "start": "980570",
    "end": "987740"
  },
  {
    "text": "IP address that it's allowed to be inside the tunnel and then we tell it",
    "start": "987740",
    "end": "993350"
  },
  {
    "text": "here's your internet facing endpoint and that's pretty much it with the setup at",
    "start": "993350",
    "end": "999170"
  },
  {
    "text": "after this we can just hang the other side and it works it's not more complicated than that wire guard does",
    "start": "999170",
    "end": "1007180"
  },
  {
    "text": "not do much more than that either and when we hit W Ginette now we see you know they had a handshake and exchanged",
    "start": "1007180",
    "end": "1014830"
  },
  {
    "text": "some data and all as well but that's pretty much it as far as wire guard did you have peers and you can exchange keys",
    "start": "1014830",
    "end": "1022230"
  },
  {
    "text": "and then they can talk ever after and you have this layer 3 interface that's",
    "start": "1022230",
    "end": "1027900"
  },
  {
    "text": "new secure it's intentionally small wire",
    "start": "1027900",
    "end": "1033459"
  },
  {
    "text": "guard is intentionally the small building block that we want to keep secure compact easy to understand and",
    "start": "1033460",
    "end": "1041470"
  },
  {
    "text": "then from that you can build more complicated systems but we want the crucial element the building block to be",
    "start": "1041470",
    "end": "1048610"
  },
  {
    "text": "as secure and simple as possible so since this wgz er this WG tool that we",
    "start": "1048610",
    "end": "1057040"
  },
  {
    "text": "just used it's very simple you can build more complicated tools around it so",
    "start": "1057040",
    "end": "1063910"
  },
  {
    "text": "there's already integration around this tooling in the various network manager is in open wrt hits in gentoos open our",
    "start": "1063910",
    "end": "1071530"
  },
  {
    "text": "seas and nick sauce it's even in systemd now and linux kit listen ubiquity routers it's a network",
    "start": "1071530",
    "end": "1078850"
  },
  {
    "text": "manager so it's very simple interface then you can integrate it into other",
    "start": "1078850",
    "end": "1083860"
  },
  {
    "text": "things so here's one example as WG quick is a little bash script I wrote that I",
    "start": "1083860",
    "end": "1091480"
  },
  {
    "text": "now distribute with the tools because people seem to enjoy using it but it's just a tiny dumb bash script that wraps",
    "start": "1091480",
    "end": "1097960"
  },
  {
    "text": "i pianned WG and adds a couple extra fields to a config file it adds a post",
    "start": "1097960",
    "end": "1105280"
  },
  {
    "text": "down in case your and a post up and pre up and so forth you see one around some",
    "start": "1105280",
    "end": "1112150"
  },
  {
    "text": "commands you can set the address and DNS from within it and then you just run WD",
    "start": "1112150",
    "end": "1117190"
  },
  {
    "text": "quick up and WG quick down to have your interface instead of having to plug all the keys in manually and you know that's",
    "start": "1117190",
    "end": "1125530"
  },
  {
    "text": "great convenient works right on my laptop but at the end of the day that's just a dumb shell script around these",
    "start": "1125530",
    "end": "1132880"
  },
  {
    "text": "other smaller tools and that's the kind of development that wire guard",
    "start": "1132880",
    "end": "1138190"
  },
  {
    "text": "encourages where we have this nice building block and then you can build up from that it also works nicely with",
    "start": "1138190",
    "end": "1144430"
  },
  {
    "text": "Network namespaces if you if you use those in Linux before the wire interface",
    "start": "1144430",
    "end": "1150430"
  },
  {
    "text": "can live in one network namespace and the physical interface can live in",
    "start": "1150430",
    "end": "1155770"
  },
  {
    "text": "another one and you can choose where the socket that wire guard is using to exchange encrypted UDP packets lives so",
    "start": "1155770",
    "end": "1163390"
  },
  {
    "text": "for example you could let a docker container only access the internet via wire guard you can only let your DHCP",
    "start": "1163390",
    "end": "1170860"
  },
  {
    "text": "clients touch physical interfaces but then let your web browser only see the",
    "start": "1170860",
    "end": "1175930"
  },
  {
    "text": "wire interface and nothing else so for the the container case you might",
    "start": "1175930",
    "end": "1182410"
  },
  {
    "text": "have in your in a namespace your ETA 0 and W and 0 and in your container",
    "start": "1182410",
    "end": "1188380"
  },
  {
    "text": "namespace like in your doctor place you only have WG 0 so when you look at you",
    "start": "1188380",
    "end": "1193810"
  },
  {
    "text": "know I have configure out put within the container the only interface those processes can see is double",
    "start": "1193810",
    "end": "1200410"
  },
  {
    "text": "the only way it has to access the outside world is through wire guard but meanwhile the socket wire guard uses is",
    "start": "1200410",
    "end": "1206620"
  },
  {
    "text": "over in your innovative space and so the encrypted packets go out through the interfaces you expect it to go out we",
    "start": "1206620",
    "end": "1215140"
  },
  {
    "text": "could also reverse the whole thing this is running on my laptop right now for",
    "start": "1215140",
    "end": "1220150"
  },
  {
    "text": "the purposes of a security conference where I have in my init namespace only WG zero where in a physical namespace",
    "start": "1220150",
    "end": "1227620"
  },
  {
    "text": "are natives I'd call physical I have my actual Ethernet adapter so my DCP client",
    "start": "1227620",
    "end": "1234340"
  },
  {
    "text": "and it could be a supplicant and all that know-how can only see can only see",
    "start": "1234340",
    "end": "1241090"
  },
  {
    "text": "my physical interfaces whereas the only way my web browser can access the Internet is to WG zero and so we have a",
    "start": "1241090",
    "end": "1248770"
  },
  {
    "text": "perfect separation so I'm not going to leak any plain text by accident to blackhat Wi-Fi network all right so next",
    "start": "1248770",
    "end": "1258190"
  },
  {
    "text": "next principle and secure design we want to have static fixed length headers so",
    "start": "1258190",
    "end": "1264220"
  },
  {
    "text": "all the packet headers have fixed width field so there's no parsing and so we",
    "start": "1264220",
    "end": "1269530"
  },
  {
    "text": "eliminate all parts or volts this is kind of amazing if we have no Parkers we have no partial vulnerabilities really",
    "start": "1269530",
    "end": "1276580"
  },
  {
    "text": "simple obvious basic thing but it's not done in practice but when you do it then you just get rid of years of security",
    "start": "1276580",
    "end": "1284710"
  },
  {
    "text": "researchers coming after you which is a lot different than what's been done say yes and one an x.509 where you have",
    "start": "1284710",
    "end": "1292840"
  },
  {
    "text": "these crazy formats and every time it's been implemented it has a bug I don't",
    "start": "1292840",
    "end": "1300550"
  },
  {
    "text": "know anyone that can make a asn.1 parser correct on the first try so we don't",
    "start": "1300550",
    "end": "1306400"
  },
  {
    "text": "give ourselves that challenge instead we just have fixed fixed with headers we",
    "start": "1306400",
    "end": "1312790"
  },
  {
    "text": "also have static allocations and guarded state everywhere and this is a little",
    "start": "1312790",
    "end": "1318760"
  },
  {
    "text": "bit harder to do in practice so all the state required for wire guard to work is allocated at configuration time instead",
    "start": "1318760",
    "end": "1325660"
  },
  {
    "text": "of in response to packets so we get a",
    "start": "1325660",
    "end": "1331000"
  },
  {
    "text": "packet we can't do any dynamic memory allocation which is great eliminates a lot of heat",
    "start": "1331000",
    "end": "1337120"
  },
  {
    "text": "fuller abilities but it also places unusual set constraints on the",
    "start": "1337120",
    "end": "1342550"
  },
  {
    "text": "cryptography we're using because it means that we can only operate over a very finite set of state and corollary",
    "start": "1342550",
    "end": "1352960"
  },
  {
    "text": "of this is that no state then can be modified in response to unauthenticated packets since then you could have an",
    "start": "1352960",
    "end": "1360190"
  },
  {
    "text": "attacker used up use up all your finite state so on one again it's great that an",
    "start": "1360190",
    "end": "1366160"
  },
  {
    "text": "attacker can't use any state eliminates and other classic vulnerabilities but also puts more constraints on the crypto",
    "start": "1366160",
    "end": "1373440"
  },
  {
    "text": "so interesting part of the wire guard project is coming from this perspective of okay we want to code this in a",
    "start": "1373440",
    "end": "1380380"
  },
  {
    "text": "certain way we want to have these defense and depth techniques all right now how do we make the protocol so that",
    "start": "1380380",
    "end": "1386500"
  },
  {
    "text": "we can code it in a way that's secure most network protocols are done in Reverse where you have a room of",
    "start": "1386500",
    "end": "1391510"
  },
  {
    "text": "networking people and crypto people who dream up the best things they can and and then you know the poor implementer",
    "start": "1391510",
    "end": "1398470"
  },
  {
    "text": "is try and code and it's a disaster so with with wire guard we're trying to",
    "start": "1398470",
    "end": "1404410"
  },
  {
    "text": "take into account both considerations at the same time as I alluded to before",
    "start": "1404410",
    "end": "1409960"
  },
  {
    "text": "wire guard is intentionally stealthy grew out of a rootkit project so needed",
    "start": "1409960",
    "end": "1416200"
  },
  {
    "text": "not to be discovered and so it doesn't respond it doesn't respond to any unauthenticated packets you can't scan",
    "start": "1416200",
    "end": "1423160"
  },
  {
    "text": "for on the internet and so it'll only respond to you if you send a packet that",
    "start": "1423160",
    "end": "1429190"
  },
  {
    "text": "has the right cryptography in it it's also nice because it's not it's not chatty so if you're using this on a",
    "start": "1429190",
    "end": "1435880"
  },
  {
    "text": "mobile phone with filament of battery it's not going to be sending random useless junk all days because just go",
    "start": "1435880",
    "end": "1442330"
  },
  {
    "text": "silent when it's not in use so to achieve this we want to have solid",
    "start": "1442330",
    "end": "1449350"
  },
  {
    "text": "crypto we're using Trevor parens noise protocol framework wire guard project",
    "start": "1449350",
    "end": "1455680"
  },
  {
    "text": "was involved really early early on with noise and so we went back and forth trying to make sure that noise would be",
    "start": "1455680",
    "end": "1462160"
  },
  {
    "text": "able to fulfill the goals that we had for wire guard and and what's come out is quite nice",
    "start": "1462160",
    "end": "1468299"
  },
  {
    "text": "noise itself is kind of related and spirits a signal protocol similar set of",
    "start": "1468299",
    "end": "1473409"
  },
  {
    "text": "ideas though totally different protocol because it comes from the same guy and it has the usual list of desirable",
    "start": "1473409",
    "end": "1480490"
  },
  {
    "text": "property as you want from a modern key exchange we're also using modern primitives we're using a curve to 5:19",
    "start": "1480490",
    "end": "1488169"
  },
  {
    "text": "we're using Blake 2 as a hash function we're using cha-cha 20 point 1 3 or 5 as",
    "start": "1488169",
    "end": "1494320"
  },
  {
    "text": "an AE ad now importantly there's no cypher agility you don't get to choose",
    "start": "1494320",
    "end": "1501100"
  },
  {
    "text": "this is what we have and if you've got a different opinion sorry no this is what",
    "start": "1501100",
    "end": "1508659"
  },
  {
    "text": "you get if these are ever broken then the policy will be to upgrade because",
    "start": "1508659",
    "end": "1515049"
  },
  {
    "text": "why would you want to have broken networks a broken elements in your network besides secure elements no",
    "start": "1515049",
    "end": "1522159"
  },
  {
    "text": "that's not the way to design a system so if the Crypt is broken then you update",
    "start": "1522159",
    "end": "1528039"
  },
  {
    "text": "your systems and you don't leave around broken crypto for years giving back",
    "start": "1528039",
    "end": "1533080"
  },
  {
    "text": "doors to attackers for a long time to come this is quite a bit different from the",
    "start": "1533080",
    "end": "1540270"
  },
  {
    "text": "extreme Sai fertility with something like TLS where you have a complicated",
    "start": "1540270",
    "end": "1545529"
  },
  {
    "text": "negotiation that happens which historically has been vulnerable to to",
    "start": "1545529",
    "end": "1550960"
  },
  {
    "text": "downgrade attacks and so forth and it also means that we're not leaving around a bunch of antiquated crypto which is",
    "start": "1550960",
    "end": "1558820"
  },
  {
    "text": "good so we have nice properties that come out of this protocol we have strong",
    "start": "1558820",
    "end": "1564460"
  },
  {
    "text": "key agreement key compromise and personation resistance it's an interesting one it means that someone",
    "start": "1564460",
    "end": "1569919"
  },
  {
    "text": "steals your public key if your protocol is vulnerable to key compromising",
    "start": "1569919",
    "end": "1574960"
  },
  {
    "text": "personation it means that then I could impersonate anyone to you because I've",
    "start": "1574960",
    "end": "1580149"
  },
  {
    "text": "stolen your public key it's like if someone stole your wallet and then they",
    "start": "1580149",
    "end": "1585190"
  },
  {
    "text": "could change your perception of other people's faces and then you wouldn't you know they could pretend to be anyone to you so we're resistant to that unknown",
    "start": "1585190",
    "end": "1593049"
  },
  {
    "text": "key share so the two people are talking to each other and definitely their key",
    "start": "1593049",
    "end": "1598720"
  },
  {
    "text": "hasn't and share with a didn't one there's key secrecy there's forward secrecy so we have a new",
    "start": "1598720",
    "end": "1604639"
  },
  {
    "text": "session every two minutes we're sure that sessions are unique there's so limited form of identity hiding and of",
    "start": "1604639",
    "end": "1612350"
  },
  {
    "text": "course there's replay attack prevention but we still allow for the network to reorder packets which is necessary at",
    "start": "1612350",
    "end": "1619490"
  },
  {
    "text": "layer 3 IP networks do that but we don't allow it to replay packets and it might",
    "start": "1619490",
    "end": "1627950"
  },
  {
    "text": "just be a bunch of crypto mumbo jumbo that you say I don't understand that and it looks fishy and so I don't want to",
    "start": "1627950",
    "end": "1634549"
  },
  {
    "text": "trust it but in fact we've formally verified this in a symbolic model using",
    "start": "1634549",
    "end": "1641360"
  },
  {
    "text": "an ice topper called tamarin so we have a proof that it's that that has these",
    "start": "1641360",
    "end": "1646549"
  },
  {
    "text": "properties recently there is a another proof done in a computational model and",
    "start": "1646549",
    "end": "1653779"
  },
  {
    "text": "academics are working on this kind of thing so we have some real assurance that the cryptography we've come up with",
    "start": "1653779",
    "end": "1660139"
  },
  {
    "text": "it the protocol we come up with is not bogus so all these design principles",
    "start": "1660139",
    "end": "1667909"
  },
  {
    "text": "before kind of kind of combine into into what we get from the key exchange so first thing you might notice from this",
    "start": "1667909",
    "end": "1674509"
  },
  {
    "text": "diagram is it's one one round-trip initiator sends a message to the",
    "start": "1674509",
    "end": "1679639"
  },
  {
    "text": "responder responder sends a message back to the initiator they do some computation and then they can send data",
    "start": "1679639",
    "end": "1687860"
  },
  {
    "text": "back and forth with the initiator sending a first-date a packet now and the one round-trip part is really",
    "start": "1687860",
    "end": "1693679"
  },
  {
    "text": "important because it keeps this idea of",
    "start": "1693679",
    "end": "1700490"
  },
  {
    "text": "having aesthetic allocations and guards state we have authentication in the",
    "start": "1700490",
    "end": "1705950"
  },
  {
    "text": "first message so that as soon as the other side is is going to operate on it and store state required for it it knows",
    "start": "1705950",
    "end": "1713929"
  },
  {
    "text": "that this indeed was an authentic authentic packet ok so just before we go",
    "start": "1713929",
    "end": "1724370"
  },
  {
    "text": "into the details of it just for those who don't know I'll show you what the hell minh looks like is",
    "start": "1724370",
    "end": "1732070"
  },
  {
    "text": "really cool property where you come up with a private key for Alice a private key for Bob for both of those you can",
    "start": "1732070",
    "end": "1738970"
  },
  {
    "text": "derive a public key from that private key somehow and then we have this really",
    "start": "1738970",
    "end": "1744670"
  },
  {
    "text": "awesome property where if we take the diffie-hellman of Alice's private key in",
    "start": "1744670",
    "end": "1750610"
  },
  {
    "text": "Bob's public key that winds up being the same thing as the diffie-hellman of",
    "start": "1750610",
    "end": "1755890"
  },
  {
    "text": "Bob's private key and Alice's public key with the hope that there's no other way",
    "start": "1755890",
    "end": "1760990"
  },
  {
    "text": "you can compute those values other than other than having that information so",
    "start": "1760990",
    "end": "1768970"
  },
  {
    "text": "this is just a really cool property alone and it's kind of amazing that we were able to find functions that exhibit",
    "start": "1768970",
    "end": "1776080"
  },
  {
    "text": "this property but anyway this isn't new it's just kind of great and essential",
    "start": "1776080",
    "end": "1782980"
  },
  {
    "text": "for understanding wire handshake so and noise AI K which is the aspect of noise",
    "start": "1782980",
    "end": "1788980"
  },
  {
    "text": "we're using one pier is the initiator the other is the responder each pier has",
    "start": "1788980",
    "end": "1796510"
  },
  {
    "text": "their static long-term identity this would be the equivalent of like what you put in your ssh authorized keys file and",
    "start": "1796510",
    "end": "1802420"
  },
  {
    "text": "then for each new handshake we generate an ephemeral key pair so we pick a new",
    "start": "1802420",
    "end": "1808030"
  },
  {
    "text": "random number for each time we do it and we get the security properties we want",
    "start": "1808030",
    "end": "1813280"
  },
  {
    "text": "by computing the the diffie-hellman on the combination of these so Alice will",
    "start": "1813280",
    "end": "1821380"
  },
  {
    "text": "do will do her static with Bob static",
    "start": "1821380",
    "end": "1827950"
  },
  {
    "text": "then our static with Bob's ephemeral and then a febrile looking static and they come over to terminal so all four of",
    "start": "1827950",
    "end": "1833650"
  },
  {
    "text": "these then because of this nice symmetry of diffie-hellman now in Reverse the same thing will happen with Bob static",
    "start": "1833650",
    "end": "1841030"
  },
  {
    "text": "and Alice the static and so forth and these all get computed and hashed",
    "start": "1841030",
    "end": "1847240"
  },
  {
    "text": "together and in the end you have a shared secret that has these properties",
    "start": "1847240",
    "end": "1853440"
  },
  {
    "text": "the next two slides have more information on this that you can read in",
    "start": "1853440",
    "end": "1858550"
  },
  {
    "text": "the slides in the internet book for this talk a little short on time so we're going to skip over these and",
    "start": "1858550",
    "end": "1865510"
  },
  {
    "text": "as you can see we wind up driving this from these forward to the helm ins we",
    "start": "1865510",
    "end": "1871240"
  },
  {
    "text": "put all into noise and get our session keys",
    "start": "1871240",
    "end": "1875190"
  },
  {
    "text": "so the key exchange might seem complicated but in fact it's just one",
    "start": "1878010",
    "end": "1887020"
  },
  {
    "text": "round trip and you can implement it in like four hundred lines really a compact",
    "start": "1887020",
    "end": "1892810"
  },
  {
    "text": "thing especially compared to something crazy like open SSL or strongswan we have those sorts of parsers and options",
    "start": "1892810",
    "end": "1899650"
  },
  {
    "text": "and things go in different directions with why are there no certificates no",
    "start": "1899650",
    "end": "1906130"
  },
  {
    "text": "x.509 stuff both sides just have their short base64 public key exchange and",
    "start": "1906130",
    "end": "1913270"
  },
  {
    "text": "then they can talk to each other and it's really important to keep the cryptographic core minimal so that you",
    "start": "1913270",
    "end": "1921550"
  },
  {
    "text": "can really look at it and understand what it's doing we also have kind of a",
    "start": "1921550",
    "end": "1926920"
  },
  {
    "text": "poor man's post quantum resistance where optionally each the two pairs can have a",
    "start": "1926920",
    "end": "1933670"
  },
  {
    "text": "pre shared key which then gets mixed into the handshake so there's this thing called Grover's algorithm which says",
    "start": "1933670",
    "end": "1942070"
  },
  {
    "text": "that if you have a symmetric encryption the speed-up on it from a quantum",
    "start": "1942070",
    "end": "1948220"
  },
  {
    "text": "computer is going to be square root so 256 bit symmetric key is going to be",
    "start": "1948220",
    "end": "1953320"
  },
  {
    "text": "like like 128-bit symmetric key and once we have quantum computers and so we mix",
    "start": "1953320",
    "end": "1958870"
  },
  {
    "text": "it which 128-bit is perfectly adequate in terms of brute force complexity and so we mix in a 256 minute symmetric key",
    "start": "1958870",
    "end": "1966960"
  },
  {
    "text": "and if that's kept secret then even with the quantum computer the information",
    "start": "1966960",
    "end": "1974050"
  },
  {
    "text": "won't be compromised now it turns out pre-shared keys are easier to steal",
    "start": "1974050",
    "end": "1979270"
  },
  {
    "text": "because they're just kind of sitting around and they got to be shared at some point but the the the hope is that by",
    "start": "1979270",
    "end": "1987730"
  },
  {
    "text": "the time a quantum computer actually exists all those pre-shared keys will have",
    "start": "1987730",
    "end": "1993010"
  },
  {
    "text": "rusted off the hard drive anyway and additionally it's it's not",
    "start": "1993010",
    "end": "1999010"
  },
  {
    "text": "replacement for the previous handshake is just augments it so we still get all the same properties as before but we can",
    "start": "1999010",
    "end": "2005250"
  },
  {
    "text": "also do better than the poor man's post climb resistance we can also have a kind of a hybrid post flogging resistance",
    "start": "2005250",
    "end": "2011070"
  },
  {
    "text": "where at first we just have a normal wire guard tunnel with no no post",
    "start": "2011070",
    "end": "2016500"
  },
  {
    "text": "quantum security and then inside the tunnel we do one of these newfangled",
    "start": "2016500",
    "end": "2021900"
  },
  {
    "text": "post quantum key exchanges now I say newfangled because these are somewhat",
    "start": "2021900",
    "end": "2029580"
  },
  {
    "text": "new there's a NIST competition recently there have been other things like New",
    "start": "2029580",
    "end": "2036330"
  },
  {
    "text": "Hope and enter prime that have been around for a while but still it hasn't",
    "start": "2036330",
    "end": "2041430"
  },
  {
    "text": "seen the this the scrutiny that that other classical algorithms have seen so",
    "start": "2041430",
    "end": "2048690"
  },
  {
    "text": "this is not the kind of thing that we want to bake into the kernel now but what you can do now is you make a wire",
    "start": "2048690",
    "end": "2054898"
  },
  {
    "text": "guard tunnel and then through it but since the channel is authenticated and encrypted already you could say you",
    "start": "2054899",
    "end": "2063450"
  },
  {
    "text": "could pick say five different of these NIST candidates for post quantum algorithms and do em all because you're",
    "start": "2063450",
    "end": "2070378"
  },
  {
    "text": "operating over something like TCP which is reliable so it makes it easy to implement and then you take the result",
    "start": "2070379",
    "end": "2077010"
  },
  {
    "text": "of that and you put it into wire guards pre shared key slot so what is possible to have a hybrid post climb resistance",
    "start": "2077010",
    "end": "2083330"
  },
  {
    "text": "and hopefully in the future as we get more visibility into with the post",
    "start": "2083330",
    "end": "2089040"
  },
  {
    "text": "quantum algorithms you're looking like well we'll be able to build something into the core of wire guard but for now I think this hybrid approach is the",
    "start": "2089040",
    "end": "2095429"
  },
  {
    "text": "right way okay next next security is on principle we want this to be abuse",
    "start": "2095429",
    "end": "2101220"
  },
  {
    "text": "resistant hashing and encrypting stuff is fast uh-huh but all that public key",
    "start": "2101220",
    "end": "2109650"
  },
  {
    "text": "cryptography is not as fast we're using curved 519 which is among the fastest",
    "start": "2109650",
    "end": "2115590"
  },
  {
    "text": "elliptic curve diffie-hellman functions was still it's way slower than hashing",
    "start": "2115590",
    "end": "2121440"
  },
  {
    "text": "and symmetric crypto and so in something like Open VPN which does you know lots",
    "start": "2121440",
    "end": "2128100"
  },
  {
    "text": "of things because it uses TLS you just overwhelming ass yet to compute you know tons of",
    "start": "2128100",
    "end": "2134290"
  },
  {
    "text": "expensive RSA or tons of expensive look the curve stuff over and over so what",
    "start": "2134290",
    "end": "2139510"
  },
  {
    "text": "wire guard instead uses uses cookies to prevent this so a little history of",
    "start": "2139510",
    "end": "2146560"
  },
  {
    "text": "cookies we first see something cookie like in in TCP where initiator says you",
    "start": "2146560",
    "end": "2155440"
  },
  {
    "text": "know I do some do some expensive calculations say compute this II see th the responder says okay my magic words",
    "start": "2155440",
    "end": "2163270"
  },
  {
    "text": "area 51 ask me again with the magic word initiator says alright I got the magic word area 51",
    "start": "2163270",
    "end": "2169120"
  },
  {
    "text": "now will you do it and so they have this back and forth first so this is great because it it sort of proves IP",
    "start": "2169120",
    "end": "2176140"
  },
  {
    "text": "ownership and then since you know the IP then you can you can rate limit based on",
    "start": "2176140",
    "end": "2183220"
  },
  {
    "text": "the IP address but then you have to keep track of this association between the",
    "start": "2183220",
    "end": "2188620"
  },
  {
    "text": "magic word you just gave out the IP address and so you got a store state and so this this violates our dynamic",
    "start": "2188620",
    "end": "2195730"
  },
  {
    "text": "allocation security design principle of course also the responder always",
    "start": "2195730",
    "end": "2203950"
  },
  {
    "text": "responds and so we lose stealth with something like this and obviously the magic word can be intercepted here DTLS",
    "start": "2203950",
    "end": "2212380"
  },
  {
    "text": "and I can ev2 that's the IPSec and a handshake have something a little bit",
    "start": "2212380",
    "end": "2218230"
  },
  {
    "text": "improved from this where you're says compute the CCD H the responder says",
    "start": "2218230",
    "end": "2223570"
  },
  {
    "text": "your magic word is some junk ask me again what the magic word initiator says all right my magic word",
    "start": "2223570",
    "end": "2229960"
  },
  {
    "text": "is that junk now we do and then it goes and it turns out that that junk is a mac",
    "start": "2229960",
    "end": "2235470"
  },
  {
    "text": "using some secret that the responder has the changes over a few minutes as the key and the initiators IP address as a",
    "start": "2235470",
    "end": "2243010"
  },
  {
    "text": "payload so this is clever because you don't have to store state since you can",
    "start": "2243010",
    "end": "2249250"
  },
  {
    "text": "just recompute this mac every time but there's still a problem we're always",
    "start": "2249250",
    "end": "2255760"
  },
  {
    "text": "there is a response to the message so it violates our stealth principle also the",
    "start": "2255760",
    "end": "2262750"
  },
  {
    "text": "magic word can be intercepted in the same way the initiator himself can be dossed by",
    "start": "2262750",
    "end": "2268329"
  },
  {
    "text": "just flooding the initiator with bogus magic words which isn't good",
    "start": "2268329",
    "end": "2274319"
  },
  {
    "text": "as an aside kind of an out of the lineage of these ideas there's proof of",
    "start": "2274319",
    "end": "2281770"
  },
  {
    "text": "work which is seen in the host identity protocol where an issue says Gil compute",
    "start": "2281770",
    "end": "2287289"
  },
  {
    "text": "this our problem responder says no way but mine a Bitcoin first and then ask me and then we'll be equal and then the",
    "start": "2287289",
    "end": "2293650"
  },
  {
    "text": "mystery says like toiling away I found a Bitcoin now you do it and he does it the proof of work is great because you can",
    "start": "2293650",
    "end": "2300250"
  },
  {
    "text": "make the you can make their work as hard or harder than what you're trying to",
    "start": "2300250",
    "end": "2305680"
  },
  {
    "text": "prevent against being dust but in wire guard peers can switch signs at any",
    "start": "2305680",
    "end": "2310720"
  },
  {
    "text": "moment the initiator can come and respond or responder can become initiator there's no client-server architecture it's all just peers and so we wouldn't",
    "start": "2310720",
    "end": "2318970"
  },
  {
    "text": "want say a server that has lots of peers to be overwhelmed doing proofs of work",
    "start": "2318970",
    "end": "2324099"
  },
  {
    "text": "just to talk to each of its clients so this doesn't really fit into what we have here but the wire guard variant",
    "start": "2324099",
    "end": "2331180"
  },
  {
    "text": "builds on builds on the the DTLS version where each handshake message has two",
    "start": "2331180",
    "end": "2340450"
  },
  {
    "text": "Macs has Mac one and has Mac - Mac one is calculated as a hash that includes the",
    "start": "2340450",
    "end": "2348039"
  },
  {
    "text": "responders public key and the previous bytes of the message and so if the Mac",
    "start": "2348039",
    "end": "2353079"
  },
  {
    "text": "is invalid or missing the message is ignored but if it is there then it means that the initiator knows who the",
    "start": "2353079",
    "end": "2359770"
  },
  {
    "text": "responder and says I'm sending this message to you and I know it's you that's going to be reading it and so we",
    "start": "2359770",
    "end": "2365349"
  },
  {
    "text": "don't have to worry about stealth because I know it's you so if the responder is not under load",
    "start": "2365349",
    "end": "2371849"
  },
  {
    "text": "Percy's normally then if we're done if it is under load then it'll respond with",
    "start": "2371849",
    "end": "2378309"
  },
  {
    "text": "a cookie message now the payload of the cookie itself is essentially the same as",
    "start": "2378309",
    "end": "2384099"
  },
  {
    "text": "in DTLS it's it's a Mac using a changing responder secret that changes every two minutes the initiators IP address but we",
    "start": "2384099",
    "end": "2392170"
  },
  {
    "text": "want to encrypt it and we encrypt it using something public using in fact a",
    "start": "2392170",
    "end": "2398140"
  },
  {
    "text": "hash there's there's public key so it's not a complete secret but it at least assumes",
    "start": "2398140",
    "end": "2404460"
  },
  {
    "text": "that you know who you were talking to so a completely blind adversary wouldn't be",
    "start": "2404460",
    "end": "2410309"
  },
  {
    "text": "able to modify it additionally we use as the additional data as part of an ad that is some extra",
    "start": "2410309",
    "end": "2417690"
  },
  {
    "text": "information that gets hashed in with authentication tag the bytes of the",
    "start": "2417690",
    "end": "2424230"
  },
  {
    "text": "handshake message that provoked this cookie so that when the initiator receives the cookie he knows that it",
    "start": "2424230",
    "end": "2430559"
  },
  {
    "text": "actually corresponds to the handshake message that he just sent so then we can",
    "start": "2430559",
    "end": "2437039"
  },
  {
    "text": "compute Mac 2 which is just a Mac of the previous byte so the message using this",
    "start": "2437039",
    "end": "2442140"
  },
  {
    "text": "cookie as the key and so if the Mac 2 is valid then the handshake proceeds",
    "start": "2442140",
    "end": "2448289"
  },
  {
    "text": "even if we're under load so then once we have IP address attribution we can just",
    "start": "2448289",
    "end": "2456720"
  },
  {
    "text": "do the normal token bucket right limiting it's an IP rate limiting algorithm you can read any network",
    "start": "2456720",
    "end": "2462119"
  },
  {
    "text": "textbook and this maintains stealthiness since we're not responding unless we",
    "start": "2462119",
    "end": "2467700"
  },
  {
    "text": "already know who it is and we're talking to and the cookies themselves can be",
    "start": "2467700",
    "end": "2474420"
  },
  {
    "text": "intercepted by someone who couldn't already initiate the same kind of exchange with with the responder the",
    "start": "2474420",
    "end": "2482240"
  },
  {
    "text": "initiator himself kept DDoS because of this additional data that we just put in which binds the response to the",
    "start": "2482240",
    "end": "2489690"
  },
  {
    "text": "handshake message that provoked it our",
    "start": "2489690",
    "end": "2494700"
  },
  {
    "text": "performance were in the kernel which means it's really fast and low latency",
    "start": "2494700",
    "end": "2500490"
  },
  {
    "text": "so we don't need to copy packets twice between user space and kernel space",
    "start": "2500490",
    "end": "2506000"
  },
  {
    "text": "we're using Church of 21 3 or 5 which is super fast in software around pretty",
    "start": "2506119",
    "end": "2512609"
  },
  {
    "text": "much all processors now aes ni is really fast too and getting faster but actually",
    "start": "2512609",
    "end": "2520470"
  },
  {
    "text": "right now cha-cha can piece pretty well with it and is fast even on small nips",
    "start": "2520470",
    "end": "2525599"
  },
  {
    "text": "forbs that don't have a SNI the other",
    "start": "2525599",
    "end": "2531150"
  },
  {
    "text": "aspect of its speed is that my regards simple and with with a",
    "start": "2531150",
    "end": "2537190"
  },
  {
    "text": "small program with less code sometimes it's just faster I mean not always",
    "start": "2537190",
    "end": "2542770"
  },
  {
    "text": "obviously but in this case it's just doing less so we have some numbers and",
    "start": "2542770",
    "end": "2549550"
  },
  {
    "text": "it beats the competition alright so in summary the whole thing is less than",
    "start": "2549550",
    "end": "2556480"
  },
  {
    "text": "4,000 lines of code it's been designed so that it can be implemented with basic data structures nothing too funky",
    "start": "2556480",
    "end": "2562530"
  },
  {
    "text": "nothing you've got a crack open a computer science textbook for the design",
    "start": "2562530",
    "end": "2568660"
  },
  {
    "text": "of the protocol lends itself to being implemented using secure coding patterns",
    "start": "2568660",
    "end": "2573990"
  },
  {
    "text": "so so we're you to do this naively you",
    "start": "2573990",
    "end": "2580720"
  },
  {
    "text": "would probably come up with something that's at least okay there's minimal",
    "start": "2580720",
    "end": "2587619"
  },
  {
    "text": "state no dynamic memory allocations we want to keep it super stealthy and and",
    "start": "2587619",
    "end": "2593920"
  },
  {
    "text": "it's it's a very opinionated so it's available for all the major Linux",
    "start": "2593920",
    "end": "2599680"
  },
  {
    "text": "distros wire guard complex install but it's also now we have a client for bsds from mac OS and for android we're",
    "start": "2599680",
    "end": "2607180"
  },
  {
    "text": "working on Windows working on iOS there's an academic paper from n DSS 2017 that kind of lays out a lot of",
    "start": "2607180",
    "end": "2614800"
  },
  {
    "text": "design rationale it's open source obviously there's a mailing list there's",
    "start": "2614800",
    "end": "2620710"
  },
  {
    "text": "a free noon IRC channel and most important part is that I have this",
    "start": "2620710",
    "end": "2627280"
  },
  {
    "text": "massive bag of stickers here and if you find me after all I'll give you a sticker yeah that's it thanks that take",
    "start": "2627280",
    "end": "2634839"
  },
  {
    "text": "some cookies [Applause]",
    "start": "2634839",
    "end": "2645599"
  },
  {
    "text": "[Music]",
    "start": "2657190",
    "end": "2660249"
  },
  {
    "text": "so with ubiquity in particular it's not from the vendor we're supplying a dot",
    "start": "2663480",
    "end": "2671349"
  },
  {
    "text": "Deb that you can install with the other things I mentioned they're normal",
    "start": "2671349",
    "end": "2676690"
  },
  {
    "text": "open-source projects and so they gradually trickle out to everything else",
    "start": "2676690",
    "end": "2682380"
  },
  {
    "text": "hi I'm sorry what know that there are no",
    "start": "2682380",
    "end": "2699400"
  },
  {
    "text": "plans to get this ship certified I mean we're not using AES probably chacha",
    "start": "2699400",
    "end": "2706690"
  },
  {
    "text": "Paula we should be certified at some point but I mean who knows but no we're",
    "start": "2706690",
    "end": "2712270"
  },
  {
    "text": "not really seeking the FIP stamp at all",
    "start": "2712270",
    "end": "2718410"
  },
  {
    "text": "yeah just a quick question so the the Dowling Patterson analysis that you",
    "start": "2720000",
    "end": "2725380"
  },
  {
    "text": "mentioned they weren't actually able to prove security of the wire protocol as",
    "start": "2725380",
    "end": "2730960"
  },
  {
    "text": "is they required a small tweak to the protocol to prove security can you can",
    "start": "2730960",
    "end": "2736180"
  },
  {
    "text": "you briefly explain what what the gap was and I'm also curious whether you think it represents a real vulnerability",
    "start": "2736180",
    "end": "2741910"
  },
  {
    "text": "or if you think it's more of an academic issue so that's not actually the analysis I mentioned I was referring to",
    "start": "2741910",
    "end": "2747220"
  },
  {
    "text": "is one that recently came out for Benjamin lip in the ACC model which",
    "start": "2747220",
    "end": "2752230"
  },
  {
    "text": "proves the properties entirely and it's done now what happened with the Dowling",
    "start": "2752230",
    "end": "2757329"
  },
  {
    "text": "Patterson paper is they wanted to prove it more traditional you seek a model",
    "start": "2757329",
    "end": "2764200"
  },
  {
    "text": "where you want to have a very separate key exchange from a data plane where you",
    "start": "2764200",
    "end": "2770049"
  },
  {
    "text": "can have this key exchange in isolation and then take whatever comes out of that and put it in the data plane this is",
    "start": "2770049",
    "end": "2775809"
  },
  {
    "text": "kind the traditional you know IPSec style separate all the layers and wire guard",
    "start": "2775809",
    "end": "2782040"
  },
  {
    "text": "was was certainly not designed that way we really intimately tied a timer state",
    "start": "2782040",
    "end": "2787590"
  },
  {
    "text": "machine with the key exchange with the data playing so we have something a lot more compact and minimal and so if you",
    "start": "2787590",
    "end": "2795060"
  },
  {
    "text": "try and analyze according to these these old techniques it it doesn't work it's not made for that so they're tweak was",
    "start": "2795060",
    "end": "2802760"
  },
  {
    "text": "to add an additional message that would then put it as a separate thing and I",
    "start": "2802760",
    "end": "2809370"
  },
  {
    "text": "mean in the end that doesn't get us anything and I think there's a kind of a",
    "start": "2809370",
    "end": "2814770"
  },
  {
    "text": "nice hand wavy argument you can make where you say that their analysis is and",
    "start": "2814770",
    "end": "2820320"
  },
  {
    "text": "their tweak is is morally equivalent to the wire guard protocol that is I mean this you know that's the hand wavy",
    "start": "2820320",
    "end": "2826470"
  },
  {
    "text": "version and well I felt uneasy about that but recently we have this nice",
    "start": "2826470",
    "end": "2832800"
  },
  {
    "text": "computational model analysis that came out that the shows were okay so there's",
    "start": "2832800",
    "end": "2839910"
  },
  {
    "text": "a new proof in the ACC model of the of the Aza's wire guard there is if you go",
    "start": "2839910",
    "end": "2845250"
  },
  {
    "text": "to wire guard comm slash formal - verification know there's a link to it there thank you a question about future",
    "start": "2845250",
    "end": "2855090"
  },
  {
    "text": "plans small and fast is good for many devices in IOT but managing keys of",
    "start": "2855090",
    "end": "2862560"
  },
  {
    "text": "thousands of devices is problematic do you have any plans to add a public key hierarchy of any sort some kind of sick",
    "start": "2862560",
    "end": "2870630"
  },
  {
    "text": "checking higher-level signature rather than having to know every client key so we don't have plans to add signatures or",
    "start": "2870630",
    "end": "2877740"
  },
  {
    "text": "certificates but I think it's very feasible to build tooling around this to",
    "start": "2877740",
    "end": "2885630"
  },
  {
    "text": "even manage hundreds of thousands of clients where both sides do learn of",
    "start": "2885630",
    "end": "2891600"
  },
  {
    "text": "each other's public key ahead of time I don't think that every new protocol that",
    "start": "2891600",
    "end": "2899040"
  },
  {
    "text": "uses cryptography in one way or another should reinvent the key distribution",
    "start": "2899040",
    "end": "2904760"
  },
  {
    "text": "method so by just having these short base64 public key",
    "start": "2904760",
    "end": "2909970"
  },
  {
    "text": "that are pre distributed you can use existing mechanisms if you've got you know a database server or LDAP even or",
    "start": "2909970",
    "end": "2917680"
  },
  {
    "text": "anything that's already there you can plug into that rather than try and roll our own brand-new PK I I there's a so",
    "start": "2917680",
    "end": "2930609"
  },
  {
    "text": "there's a third-party implementation of our guard for Windows have you had any",
    "start": "2930609",
    "end": "2935650"
  },
  {
    "text": "communication with the developers behind that or is your policy or not still it's not from the market our devs so don't",
    "start": "2935650",
    "end": "2941020"
  },
  {
    "text": "use it so we've we've talked a little bit with them but we're trying to push",
    "start": "2941020",
    "end": "2950920"
  },
  {
    "text": "out very high assurance software from the wire guard project and they got our",
    "start": "2950920",
    "end": "2959200"
  },
  {
    "text": "recommendation would be wait for wait for clients that come from us because they're trying to do a really thorough job and developing it you said you were",
    "start": "2959200",
    "end": "2970780"
  },
  {
    "text": "very opinionated about your crypto algorithm and choice I'm sorry I didn't hear said you were very opinionated about your choice of crypto algorithms",
    "start": "2970780",
    "end": "2977740"
  },
  {
    "text": "do you have a transition mechanism it's tomorrow morning one of those has to change yeah so every message type every",
    "start": "2977740",
    "end": "2986410"
  },
  {
    "text": "message in wire guard has a type and even the wire guard handshake itself is",
    "start": "2986410",
    "end": "2993780"
  },
  {
    "text": "versioned and that version is hashed in super early on in a handshake and so the",
    "start": "2993780",
    "end": "2999580"
  },
  {
    "text": "types of each message in the crypto that is using are very closely bound to each other and so if there's a clipped",
    "start": "2999580",
    "end": "3006060"
  },
  {
    "text": "apocalypse and chacha is broken and everyone needs to upgrade it's not a",
    "start": "3006060",
    "end": "3011400"
  },
  {
    "text": "problem we can introduce more message types and expand things as we need it's",
    "start": "3011400",
    "end": "3016830"
  },
  {
    "text": "very different from negotiation it's for each side talks and what do you support and that kind of thing it's more like",
    "start": "3016830",
    "end": "3023490"
  },
  {
    "text": "what you're used to with software updates but the protocol does allow for that kind of thing and we even have",
    "start": "3023490",
    "end": "3028830"
  },
  {
    "text": "three additional reserved bytes in the basic message header just in case you",
    "start": "3028830",
    "end": "3035369"
  },
  {
    "text": "know we need to expand massively it",
    "start": "3035369",
    "end": "3041460"
  },
  {
    "text": "looks like I'm at a time",
    "start": "3041460",
    "end": "3044660"
  }
]