[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "welcome to the unofficial closing ceremonies - black hat 2017 glad you",
    "start": "0",
    "end": "5130"
  },
  {
    "text": "guys could make it it's awesome we're gonna talk today about revoke obfuscation really the depths of how",
    "start": "5130",
    "end": "11400"
  },
  {
    "text": "crazy PowerShell obfuscation can get but also some crazy math and science that we",
    "start": "11400",
    "end": "16470"
  },
  {
    "text": "can do to give you a fighting chance as defenders but is av still here we were",
    "start": "16470",
    "end": "21840"
  },
  {
    "text": "told that we were gonna get the laser show like that Jeff Moss Scott whatever",
    "start": "21840",
    "end": "27570"
  },
  {
    "text": "what come on so I'm Lee Holmes I'm a architect for Azure management I the",
    "start": "27570",
    "end": "33570"
  },
  {
    "text": "author of the Windows PowerShell cookbook and was a developer on PowerShell since the first version my",
    "start": "33570",
    "end": "40680"
  },
  {
    "text": "name is Daniel Bohannon and I am a senior applied security researcher for mandiant prior to that doing semi are",
    "start": "40680",
    "end": "47579"
  },
  {
    "text": "from India I'm the author of the in bow confiscation and invoke cradle crafter PowerShell a few skatin frameworks and",
    "start": "47579",
    "end": "54620"
  },
  {
    "text": "yeah just really excited to be here talking about this with you now so to",
    "start": "54620",
    "end": "60180"
  },
  {
    "text": "get things going what we're going to first talk about is basically a treatise on blue team Follies so if you take a",
    "start": "60180",
    "end": "66840"
  },
  {
    "text": "look at the way that people are trying to detect malicious underhanded any sort of PowerShell out there we do see a",
    "start": "66840",
    "end": "74369"
  },
  {
    "text": "bunch of things that are make it difficult but also where people are making mistakes that are very very easy",
    "start": "74369",
    "end": "80580"
  },
  {
    "text": "to bypass so some background in some context we're gonna assume here that",
    "start": "80580",
    "end": "85650"
  },
  {
    "text": "there's really a couple of prerequisites when it comes to doing any sort of detection of PowerShell one is that",
    "start": "85650",
    "end": "92790"
  },
  {
    "text": "you've got command line logging enabled so event ID 46 88 you can get this from",
    "start": "92790",
    "end": "98100"
  },
  {
    "text": "that or you can also get it from deploying system on a really great tool but also when it comes to the PowerShell",
    "start": "98100",
    "end": "104130"
  },
  {
    "text": "specific stuff PowerShell in version 5 has really really changed the game when it comes to",
    "start": "104130",
    "end": "109680"
  },
  {
    "text": "what it means to be a transparent scripting engine so the two things here",
    "start": "109680",
    "end": "115350"
  },
  {
    "text": "are the PowerShell script block logging and module logging that really really make a big difference attackers aren't in the Haab the habit",
    "start": "115350",
    "end": "122610"
  },
  {
    "text": "of enabling these logs for you so you might want to do it before you encounter them",
    "start": "122610",
    "end": "129110"
  },
  {
    "text": "so this is the the typical way that people start to try to do any sort of analysis of powershell obfuscation or",
    "start": "129509",
    "end": "136470"
  },
  {
    "text": "detection of malice usually it starts with the event log logging from the",
    "start": "136470",
    "end": "141540"
  },
  {
    "text": "process command lines so this is what somebody might do anytime I see PowerShell with a given command line I'm",
    "start": "141540",
    "end": "148319"
  },
  {
    "text": "gonna use that as my flag to detect when something malicious has happened",
    "start": "148319",
    "end": "153890"
  },
  {
    "text": "however PowerShell like most languages and automation engines out there doesn't",
    "start": "153890",
    "end": "160260"
  },
  {
    "text": "need to take all of its stuff from the command line itself you can also pass",
    "start": "160260",
    "end": "165390"
  },
  {
    "text": "input into PowerShell standard input so if you're doing PowerShell obfuscation or malicious detection based on the",
    "start": "165390",
    "end": "173010"
  },
  {
    "text": "content of PowerShell command lines here's two examples that you're not going to see anything that might have",
    "start": "173010",
    "end": "179280"
  },
  {
    "text": "happened itself so this is somebody taking CMD piping content into",
    "start": "179280",
    "end": "184379"
  },
  {
    "text": "PowerShell through standard input and it runs you can see here it runs successfully this is what it looks like",
    "start": "184379",
    "end": "190620"
  },
  {
    "text": "in the command line logs just PowerShell - or parish shall invoke expression",
    "start": "190620",
    "end": "195690"
  },
  {
    "text": "input that's not going to get you anywhere however that might be a bypass",
    "start": "195690",
    "end": "203010"
  },
  {
    "text": "but when you're doing it this way you will see CMD that called PowerShell you",
    "start": "203010",
    "end": "208530"
  },
  {
    "text": "will see the commands that were actually used to pack all of this stuff into PowerShell and run it so maybe that's",
    "start": "208530",
    "end": "214739"
  },
  {
    "text": "kind of your approach you you don't want to detect just the PowerShell command lines but maybe you start looking at CMD",
    "start": "214739",
    "end": "220440"
  },
  {
    "text": "calling PowerShell itself so here's the question can we start to just see off",
    "start": "220440",
    "end": "227609"
  },
  {
    "text": "key off of CMD calling PowerShell maybe that's a bad thing to do but",
    "start": "227609",
    "end": "233190"
  },
  {
    "text": "unfortunately not here's an example where CMD can run any command that you give it based on information that's",
    "start": "233190",
    "end": "240569"
  },
  {
    "text": "packed in environment variables so here's an example of packing some information in an environment variable",
    "start": "240569",
    "end": "245910"
  },
  {
    "text": "and that represents calling PowerShell itself so this is now CMD echoing into",
    "start": "245910",
    "end": "252120"
  },
  {
    "text": "the thing represented by an environment variable and running it",
    "start": "252120",
    "end": "257359"
  },
  {
    "text": "this actually happens in the wild this is an example from thin ate some malware they're financially motivated attackers",
    "start": "258000",
    "end": "265080"
  },
  {
    "text": "this is what their malware looks like rings a bell doesn't it this is exactly",
    "start": "265080",
    "end": "270430"
  },
  {
    "text": "what we were just talking about this is what they're doing another point too is",
    "start": "270430",
    "end": "275800"
  },
  {
    "text": "it doesn't just have to come from standard input you could pack the information in environment variable",
    "start": "275800",
    "end": "281740"
  },
  {
    "text": "itself and have power shall run the content of that environment variable Koffler is some hour strain it does this",
    "start": "281740",
    "end": "288280"
  },
  {
    "text": "and loves it as well environment variables are one but what about the clipboard there's tons of different ways",
    "start": "288280",
    "end": "294039"
  },
  {
    "text": "to start sending content from powershell from another process so you might say",
    "start": "294039",
    "end": "299860"
  },
  {
    "text": "here there's a clipboard an example of that you might say here let's start doing detection anytime CMD is calling",
    "start": "299860",
    "end": "306449"
  },
  {
    "text": "powershell maybe we even start to do this among a process tree checking a couple different ones so here's kind of",
    "start": "306449",
    "end": "314740"
  },
  {
    "text": "a the demo that we're talking about before but what I can also do is I can do CMD to set some environment variables",
    "start": "314740",
    "end": "321970"
  },
  {
    "text": "pipe that into CMD to process the environment variables and then pipe that",
    "start": "321970",
    "end": "327310"
  },
  {
    "text": "into pyro shell so if you had any detection going on directly arguments in",
    "start": "327310",
    "end": "332470"
  },
  {
    "text": "parish in CMD to arguments in PowerShell that's gonna be broken as well now",
    "start": "332470",
    "end": "339070"
  },
  {
    "text": "here's a problem it seems like it works but you look at your command line logs and ultimately the parent process you",
    "start": "339070",
    "end": "345340"
  },
  {
    "text": "see it anyway so maybe you're not so bad off this little shield mark that we have here that represents some of the stuff",
    "start": "345340",
    "end": "351849"
  },
  {
    "text": "that's still gonna show up in the actual PowerShell logs so if you've enabled PowerShell b5 the script lock logging",
    "start": "351849",
    "end": "358690"
  },
  {
    "text": "and module logging you're still going to have evidence of this happening as well",
    "start": "358690",
    "end": "363720"
  },
  {
    "text": "however take a look at that pipeline what happened is that first CMD took",
    "start": "363720",
    "end": "370030"
  },
  {
    "text": "your whole arguments and ran it and so what I can do is escape this command line that works you got an example here",
    "start": "370030",
    "end": "379120"
  },
  {
    "text": "of CMD echoing something that you can't even tell and then running PowerShell so",
    "start": "379120",
    "end": "384490"
  },
  {
    "text": "maybe you start to say do I'd like look at the whole tree from like winning it all the way down to PowerShell maybe",
    "start": "384490",
    "end": "390610"
  },
  {
    "text": "that's your approach is to really start combining these things but you've got some problems there's a lot of ways to launch",
    "start": "390610",
    "end": "396190"
  },
  {
    "text": "PowerShell and then another window where there is no shared power parent process",
    "start": "396190",
    "end": "401639"
  },
  {
    "text": "what if you launch a PowerShell with a specific window title and then launch another PowerShell as a sibling that",
    "start": "401639",
    "end": "408760"
  },
  {
    "text": "reads from that window title what about reading from files registry keys anything like that you cannot depend on",
    "start": "408760",
    "end": "415780"
  },
  {
    "text": "a parent process tree either there's so many ways around it so the good news as",
    "start": "415780",
    "end": "422830"
  },
  {
    "text": "I was mentioning is that PowerShell stripped Bluff logging captures all of this stuff that actually makes it into",
    "start": "422830",
    "end": "428470"
  },
  {
    "text": "PowerShell but you still got a problem we didn't even talk about at all yet any",
    "start": "428470",
    "end": "434320"
  },
  {
    "text": "of the content in PowerShell itself yeah so let's shift over and look at that so",
    "start": "434320",
    "end": "440169"
  },
  {
    "start": "438000",
    "end": "510000"
  },
  {
    "text": "leaders covered a lot of examples and kind of showing the folly of as a defender why we shouldn't just look at",
    "start": "440169",
    "end": "446020"
  },
  {
    "text": "PowerShell dot exe s arguments or even its parent process arguments or even recursively but again",
    "start": "446020",
    "end": "451510"
  },
  {
    "text": "PowerShell logging in PowerShell 5 will have all of this information and script block logs really are your best friend",
    "start": "451510",
    "end": "457810"
  },
  {
    "text": "on the Eid 4104 so what we're going to do at this point is actually going to look at a few stations and techniques",
    "start": "457810",
    "end": "464680"
  },
  {
    "text": "that exist that actually never get D off you skated in those logs so whether you're looking at command line analysis",
    "start": "464680",
    "end": "470950"
  },
  {
    "text": "or actual script LOC log analysis you need to be aware of these techniques and how they could affect you as a defender",
    "start": "470950",
    "end": "476860"
  },
  {
    "text": "so at the very top here we have an example command and this is the most common plain-jane remote download cradle",
    "start": "476860",
    "end": "483460"
  },
  {
    "text": "what I mean by that is this command will basically read from this remote source so they'll download this script into",
    "start": "483460",
    "end": "488830"
  },
  {
    "text": "memory and then pass it to invoke expression or IEX which is kind of like power shells eval statement and so this",
    "start": "488830",
    "end": "494979"
  },
  {
    "text": "will all be executed within memory and we see attackers using this all the time and the reason is is that copy and paste",
    "start": "494979",
    "end": "501760"
  },
  {
    "text": "is every developer and hackers best friend and you see this in popular frameworks like veil power sploit",
    "start": "501760",
    "end": "507940"
  },
  {
    "text": "Metasploit all over the place and so let's walk through this example we have",
    "start": "507940",
    "end": "513430"
  },
  {
    "text": "this attacker command up here with a totally legit bitly link feel free to run that if you please and then as a",
    "start": "513430",
    "end": "519729"
  },
  {
    "text": "defender how could we catch this and let's think about the command line example here be the exact same for script walk logs",
    "start": "519729",
    "end": "525889"
  },
  {
    "text": "but let's say if as a defender we look for arguments where we see invoke expression new object system net that",
    "start": "525889",
    "end": "533089"
  },
  {
    "text": "web client and download string HTTP this would catch this exact command so now",
    "start": "533089",
    "end": "538430"
  },
  {
    "text": "let's walk through and have a little fun so first off system net that web client",
    "start": "538430",
    "end": "544220"
  },
  {
    "text": "pretty much anytime you see system dot and PowerShell it's referencing a dotnet class and you don't actually need system",
    "start": "544220",
    "end": "549560"
  },
  {
    "text": "dot PowerShell we'll go ahead and handle that for you so if an attacker doesn't have to have that and that's a defender",
    "start": "549560",
    "end": "555320"
  },
  {
    "text": "we don't want to make that assumption that we also have to have that in our defenses so as we change our attacker",
    "start": "555320",
    "end": "560510"
  },
  {
    "text": "command at the top we're also going to change our defender commands underneath next the URL is a string and so with a",
    "start": "560510",
    "end": "567889"
  },
  {
    "text": "string we can just concatenate it in line just like that we're also not limited to any kind of quote so we can",
    "start": "567889",
    "end": "574130"
  },
  {
    "text": "use single quotes double quotes put whitespace in there a lot of options there so let's go ahead and move that HTTP and the quote from download string",
    "start": "574130",
    "end": "580959"
  },
  {
    "text": "all right download string now if you look at this command um PowerShell interprets this and what are called",
    "start": "580959",
    "end": "587660"
  },
  {
    "text": "tokens hints what we call this token layer off eustachian so for example the URL that's a string token download",
    "start": "587660",
    "end": "594350"
  },
  {
    "text": "string is a member token and so given any member token what are ways that we can really screw around with it to make",
    "start": "594350",
    "end": "600949"
  },
  {
    "text": "the syntax look really odd but it still work so if you'll notice with download string before we even apply any kind of",
    "start": "600949",
    "end": "607970"
  },
  {
    "text": "syntax off using the home load string is just a method to the net that web client",
    "start": "607970",
    "end": "613070"
  },
  {
    "text": "class but there's a lot of methods in fact here's just a partial list here so the main ones I would say to definitely",
    "start": "613070",
    "end": "619070"
  },
  {
    "text": "keep keep in mind download string download file and download data download file with download to disk download data",
    "start": "619070",
    "end": "625040"
  },
  {
    "text": "or return a byte array so maybe we can just cover all of these by saying instead of looking for dot download",
    "start": "625040",
    "end": "630350"
  },
  {
    "text": "string let's just look for dot download all right so now that we have that done with a member token what we can actually",
    "start": "630350",
    "end": "636920"
  },
  {
    "text": "do is we can also set that value into a variable or we can set the object",
    "start": "636920",
    "end": "644149"
  },
  {
    "text": "instantiation in the variable so we can't even rely on that parentheses being there so let's go ahead and pull it out of our defender triggers so now",
    "start": "644149",
    "end": "651889"
  },
  {
    "text": "how can we off you skate this member even further we can actually put single tick marks around it",
    "start": "651889",
    "end": "657380"
  },
  {
    "text": "we can put double quotes around it now the fascinating thing is that when you put double quotes around it and I want",
    "start": "657380",
    "end": "663260"
  },
  {
    "text": "you to look closely at download string well you can actually do is just put a tick mark there now why in the world",
    "start": "663260",
    "end": "668990"
  },
  {
    "text": "does this work well this works because the tick mark is power shells escape character or called",
    "start": "668990",
    "end": "674390"
  },
  {
    "text": "the the grave Accent character so I like to think of it kind of as a grave of a lot of defenders ifcs because this will",
    "start": "674390",
    "end": "679970"
  },
  {
    "text": "break a lot of stuff if you're not aware of it so the tick mark before these 8 characters will do things like take 0 is",
    "start": "679970",
    "end": "687920"
  },
  {
    "text": "a null tick in this new line but if you have a tick mark before a character that has no escapable meaning",
    "start": "687920",
    "end": "693440"
  },
  {
    "text": "then powershell processes it and there's nothing else for it to do with a tick so you can actually put tick marks in front",
    "start": "693440",
    "end": "699920"
  },
  {
    "text": "of any character that's not one of these eight here and in fact if you're like me and are just really really dying to put",
    "start": "699920",
    "end": "706280"
  },
  {
    "text": "a tick mark in front of those characters all you have to do is just uppercase the characters and you can put a tick mark in front of it so now we have tick marks",
    "start": "706280",
    "end": "713360"
  },
  {
    "text": "in front of any character that we want except for zero unfortunately there's not an upper case here that I'm aware of but we have a lot of options here as as",
    "start": "713360",
    "end": "721310"
  },
  {
    "text": "an attacker to mess with this now here's why this is really really important on the top you'll see this is what it looks",
    "start": "721310",
    "end": "727490"
  },
  {
    "text": "like in command line event logs or if you have some kind of real time agent this is exactly what you'll see on the",
    "start": "727490",
    "end": "733370"
  },
  {
    "text": "command line this tick marks are still there and at the bottom is PowerShell script lock logs and the ticks are still",
    "start": "733370",
    "end": "739730"
  },
  {
    "text": "there and the concatenation is still there so everything we're doing right here still persist into those script",
    "start": "739730",
    "end": "745670"
  },
  {
    "text": "block logs all right so maybe we can come up with some crazy regex that take into account these tick marks sure I",
    "start": "745670",
    "end": "753470"
  },
  {
    "text": "guess you try that if you want to go down that route don't the stop it download because in addition to download",
    "start": "753470",
    "end": "758780"
  },
  {
    "text": "string file and data there's also open read which will return a byte stream and we have seen attackers",
    "start": "758780",
    "end": "764270"
  },
  {
    "text": "use that before so again it's really important as the offenders that we know what's possible and that we know the",
    "start": "764270",
    "end": "769940"
  },
  {
    "text": "flexibility of PowerShell and any language for that matter so we're not making bad assumptions on the defenses",
    "start": "769940",
    "end": "775400"
  },
  {
    "text": "that we're putting in place another thing if we encapsulate the member token",
    "start": "775400",
    "end": "780800"
  },
  {
    "text": "inside of parenthesis we can actually then treat it as a full-blown string so we can concatenate it we can set it in",
    "start": "780800",
    "end": "786470"
  },
  {
    "text": "variables we do a lot of crazy stuff and if you'll notice this dot invoke after this parentheses that's only",
    "start": "786470",
    "end": "792260"
  },
  {
    "text": "required in PowerShell - PowerShell 3 and later doesn't even need that so make sure you're not basing your defenses on",
    "start": "792260",
    "end": "797900"
  },
  {
    "text": "that dot invoke because it's totally not necessary in later versions so is if it's alright with you I'm just gonna go",
    "start": "797900",
    "end": "803960"
  },
  {
    "text": "ahead and remove that one that seems like some crazy regex it's is it - do we already have other stuff in here that we can count on not being off you skated is",
    "start": "803960",
    "end": "809930"
  },
  {
    "text": "that cool all right let's keep going so net dot web planet this is the name of",
    "start": "809930",
    "end": "815510"
  },
  {
    "text": "botnet class but in the context of this PowerShell command it's actually an argument token it's an argument to new",
    "start": "815510",
    "end": "821660"
  },
  {
    "text": "object so argument tokens really easy to off you skate we can use double quotes and tick marks we can put it in",
    "start": "821660",
    "end": "828050"
  },
  {
    "text": "parenthesis and treat it like a string we can also chunk that up into variables and then just put those variables together in the command",
    "start": "828050",
    "end": "836060"
  },
  {
    "text": "so we'll just go with the first option there and remove that from our list of a defender terms their new object so if",
    "start": "836060",
    "end": "844370"
  },
  {
    "text": "anyone here is use PowerShell I actually kind of accidentally happened into PowerShell I was writing bat files and",
    "start": "844370",
    "end": "850640"
  },
  {
    "text": "someone said won't you change that to a dot dat to a dot PS one and like almost all your stuff is gonna work and I said",
    "start": "850640",
    "end": "856100"
  },
  {
    "text": "really what's the point so it's so much more powerful and so yeah it's like my bat file had Durer had l all this kind",
    "start": "856100",
    "end": "861590"
  },
  {
    "text": "of stuff and it totally worked PowerShell is really inviting to two newcomers to pick it up because if you",
    "start": "861590",
    "end": "867710"
  },
  {
    "text": "want to let's say enumerate all the files in a directory if you come from Windows background durricks Linux",
    "start": "867710",
    "end": "873110"
  },
  {
    "text": "background LS works the the formal command let in PowerShell is get child item you can also just do GC I so power",
    "start": "873110",
    "end": "880790"
  },
  {
    "text": "saws tons of what are called aliases to give you lots of options to make it really really user friendly and it",
    "start": "880790",
    "end": "885830"
  },
  {
    "text": "absolutely is however as a defender that means you have to be aware of all those options so you want to make sure you're",
    "start": "885830",
    "end": "891860"
  },
  {
    "text": "not writing triggers on things that have a lot of other ways you can write it the good news is that was new object there",
    "start": "891860",
    "end": "897170"
  },
  {
    "text": "are no aliases so at first when I saw this I thought awesome this will be a really good indicator",
    "start": "897170",
    "end": "902590"
  },
  {
    "text": "however PowerShell is really helpful he goes out of its way to be really helpful so for example if there's a command what",
    "start": "902590",
    "end": "909920"
  },
  {
    "text": "they I know I've used this commandment before but I can't remember what it is it's new - P something then we can just",
    "start": "909920",
    "end": "916190"
  },
  {
    "text": "say git command to list all the commands and functions that are built available so if we say git command new - P",
    "start": "916190",
    "end": "922520"
  },
  {
    "text": "asterisks in a list all the commands that match that so what we can do then is if we return just a",
    "start": "922520",
    "end": "929320"
  },
  {
    "text": "single command let it's actually displaying PowerShell objects but if we return that single commandment and pass",
    "start": "929320",
    "end": "934630"
  },
  {
    "text": "it in to invoke expression behind the scenes it'll automatically transform that object to a string which is the",
    "start": "934630",
    "end": "940480"
  },
  {
    "text": "commandment name and then invoke it so this is just like calling a new object however we can get a bit more creative",
    "start": "940480",
    "end": "946810"
  },
  {
    "text": "with this since we're dealing with PowerShell objects instead of invoke expression what we can actually do is use the dot or the ampersand now these",
    "start": "946810",
    "end": "954910"
  },
  {
    "text": "are invocation operators and also if you keep in mind remember when we were trying to figure out that new - pica",
    "start": "954910",
    "end": "961330"
  },
  {
    "text": "mantlet we can use wildcards to search for the available options in the argument so this is a new object and",
    "start": "961330",
    "end": "969760"
  },
  {
    "text": "then that's also a new object as is that and that and there are as many",
    "start": "969760",
    "end": "975850"
  },
  {
    "text": "combinations as you can dream of to return just new object so now if you're",
    "start": "975850",
    "end": "981190"
  },
  {
    "text": "looking for new object on the command line you'll never see it however where you will see it is in PowerShell module",
    "start": "981190",
    "end": "987100"
  },
  {
    "text": "logs which is Eid 4103 now the thing to keep in mind is that if you have a massive script every single command",
    "start": "987100",
    "end": "993580"
  },
  {
    "text": "--let and every parent parameter binding will have its own module log so basically there's a lot of them so all",
    "start": "993580",
    "end": "1000300"
  },
  {
    "text": "the all the evidence is there it's just in a lot of different places which makes it challenging as a defender to piece it",
    "start": "1000300",
    "end": "1006060"
  },
  {
    "text": "all back together in addition git command also has an alias of course of GCM and actually is a",
    "start": "1006060",
    "end": "1013710"
  },
  {
    "text": "very interesting alias that really bugged me for a long time because it's actually undocumented is it okay if I share that with you it's kind of",
    "start": "1013710",
    "end": "1019230"
  },
  {
    "text": "top-secret it is command now this works because PowerShell again it's so",
    "start": "1019230",
    "end": "1025829"
  },
  {
    "start": "1022000",
    "end": "1060000"
  },
  {
    "text": "friendly it's like the best friend you could ever ask for whenever you type command it'll say I don't see a command late' or a function",
    "start": "1025830",
    "end": "1032100"
  },
  {
    "text": "name command maybe you forgot to type that get - let me go out of my way and see yep there's a get - command like",
    "start": "1032100",
    "end": "1038550"
  },
  {
    "text": "here you go so now anytime you've written that indicator on any command line that starts with git - you don't",
    "start": "1038550",
    "end": "1044819"
  },
  {
    "text": "need that yet - it'll automatically work so more options to keep in mind in",
    "start": "1044820",
    "end": "1050550"
  },
  {
    "text": "addition if we don't ever want to use a wildcard for this new object stuff we could just concatenate a new object into",
    "start": "1050550",
    "end": "1056100"
  },
  {
    "text": "some other variables and calls it command on that there's yet more options powershell 1.0 if you are",
    "start": "1056100",
    "end": "1063630"
  },
  {
    "start": "1060000",
    "end": "1097000"
  },
  {
    "text": "into if you're on the blue team or the red team dealing with powershell posh code org is an amazing resource because",
    "start": "1063630",
    "end": "1071330"
  },
  {
    "text": "there's just a lot of new and really old scripts there and there's a lot of powershell one moto syntax that you can",
    "start": "1071330",
    "end": "1077760"
  },
  {
    "text": "find which a lot of people aren't aware of and there's some crazy stuff that you can do that is a lot shorter and easier",
    "start": "1077760",
    "end": "1083880"
  },
  {
    "text": "in later versions of powershell well what are the offenders probably not looking for stuff like this this execution context is an automatic",
    "start": "1083880",
    "end": "1090480"
  },
  {
    "text": "variable in powershell and is like stupid powerful it's really really awesome so i definitely recommend you",
    "start": "1090480",
    "end": "1096090"
  },
  {
    "text": "start looking for that in addition all the stuff we just did with git command they were acting on the full commandment",
    "start": "1096090",
    "end": "1102660"
  },
  {
    "start": "1097000",
    "end": "1123000"
  },
  {
    "text": "name if the object we want to deal with has an alias then we can use git alias",
    "start": "1102660",
    "end": "1107880"
  },
  {
    "text": "or its alias of GAO or aliases alias which is called alias because you know the whole get - pre fin thing so we can",
    "start": "1107880",
    "end": "1115049"
  },
  {
    "text": "use that in almost the exact same way so we'll just go with that that option right there the GCM asterisk wo asterisk",
    "start": "1115049",
    "end": "1123350"
  },
  {
    "text": "so there's a lot of options here maybe we want to try to look for a new object and get command and get alias and all",
    "start": "1123350",
    "end": "1129540"
  },
  {
    "text": "these sorts of things right well they're commandlets so we can put tick marks in front of them we can also come back to",
    "start": "1129540",
    "end": "1137760"
  },
  {
    "text": "our good friends the dot and ampersand invocation operators and again as we can then treat new object as a string and",
    "start": "1137760",
    "end": "1144419"
  },
  {
    "text": "concatenate it or in this second example we can actually use the - F format operator and substring and then reorder",
    "start": "1144419",
    "end": "1151500"
  },
  {
    "text": "that which is really really powerful because some defenders of come to be",
    "start": "1151500",
    "end": "1156630"
  },
  {
    "text": "before and said well okay like I don't care about your concatenations because whenever I take in command-line arguments or script lock logs I remove",
    "start": "1156630",
    "end": "1163440"
  },
  {
    "text": "all special characters so all the quotes are removed the pluses remove and new object magically comes back together",
    "start": "1163440",
    "end": "1168809"
  },
  {
    "text": "well when you start doing reordering stuff like this it never comes back together so less either regex all the",
    "start": "1168809",
    "end": "1176910"
  },
  {
    "text": "things or give up so i'm going to be be a realist here and just give up on new object as a solid indicator so we're",
    "start": "1176910",
    "end": "1183210"
  },
  {
    "start": "1182000",
    "end": "1224000"
  },
  {
    "text": "left with invoke expression now on the command line invoke expression and IEX is a really freaking good indicator and",
    "start": "1183210",
    "end": "1189960"
  },
  {
    "text": "if you're not looking for this absolutely should be because there's a lot of evil out there that uses this all the time",
    "start": "1189960",
    "end": "1195690"
  },
  {
    "text": "however as a defender we can't become complacent just with invoke expression or IEX there's a lot of things to keep",
    "start": "1195690",
    "end": "1201509"
  },
  {
    "text": "in mind here for example it has invoke expression has the alias ie X order",
    "start": "1201509",
    "end": "1207389"
  },
  {
    "text": "doesn't matter you can invoke expression and then have your expression or you can have your expression and pipe it in to",
    "start": "1207389",
    "end": "1212639"
  },
  {
    "text": "invoke expression you can also put it a commandment you can use the invocation",
    "start": "1212639",
    "end": "1219419"
  },
  {
    "text": "operators and have IEX or invoke expression and do string manipulation there in a fun fact actually as part of",
    "start": "1219419",
    "end": "1228720"
  },
  {
    "start": "1224000",
    "end": "1246000"
  },
  {
    "text": "this research we'll talk about this in just a few slides we developed a powershell corpus quite a large corpus",
    "start": "1228720",
    "end": "1234600"
  },
  {
    "text": "we'll get into the numbers in a moment but only three percent of scripts in the wild in this corpus actually use invoke",
    "start": "1234600",
    "end": "1240750"
  },
  {
    "text": "expression in the script so it comes some interesting interesting numbers there it's a bit of a rarity",
    "start": "1240750",
    "end": "1247009"
  },
  {
    "start": "1246000",
    "end": "1260000"
  },
  {
    "text": "then we also have invoke expressions cousin as I like the call which is invoke command now typically you'll see",
    "start": "1247009",
    "end": "1253019"
  },
  {
    "text": "invoke command when you're running like powershell remoting you want to run on another system but if you never define",
    "start": "1253019",
    "end": "1258120"
  },
  {
    "text": "computer name for a remote system then it'll run locally so with invoke command you have its alias of ICM you can use",
    "start": "1258120",
    "end": "1264059"
  },
  {
    "start": "1260000",
    "end": "1275000"
  },
  {
    "text": "dot invoke you can use the ampersand of the dot invocation operators invoke return is is invoked with context so",
    "start": "1264059",
    "end": "1269940"
  },
  {
    "text": "many options and again we have to be aware of these options as defenders also",
    "start": "1269940",
    "end": "1276299"
  },
  {
    "start": "1275000",
    "end": "1291000"
  },
  {
    "text": "with powershell 1.0 syntax remember that execution context automatic variable you can also call its invoke script method",
    "start": "1276299",
    "end": "1282870"
  },
  {
    "text": "there which will receive either an expression or a script block because invoke expression is going to expect an expression invoke command will expect a",
    "start": "1282870",
    "end": "1290730"
  },
  {
    "text": "script block so we can add tick marks to all of these right because they're commandlets however that ampersand in",
    "start": "1290730",
    "end": "1297600"
  },
  {
    "text": "that dot how in the world could we feasibly expect to alert on an ampersand or a dot in a command line let's say",
    "start": "1297600",
    "end": "1303809"
  },
  {
    "text": "without getting insane false positives well maybe we could say okay let's only alert if we see an ampersand or dot and",
    "start": "1303809",
    "end": "1310230"
  },
  {
    "text": "we also see curly braces because curly braces are the only way that you can denote a script block however",
    "start": "1310230",
    "end": "1315899"
  },
  {
    "start": "1315000",
    "end": "1342000"
  },
  {
    "text": "unfortunately that's not true you can actually convert an expression to a script block and here are two ways of",
    "start": "1315899",
    "end": "1321029"
  },
  {
    "text": "doing it you can use the script lock net class and use the create method or you can use this PowerShell one auto",
    "start": "1321029",
    "end": "1327390"
  },
  {
    "text": "execution context and use the new script lock mantlet and in fact or the script",
    "start": "1327390",
    "end": "1332520"
  },
  {
    "text": "block method and in fact for both of these examples you can off you skate them just like we've been doing all",
    "start": "1332520",
    "end": "1337560"
  },
  {
    "text": "along so there is no silver bullet every component can be obfuscated even further",
    "start": "1337560",
    "end": "1342710"
  },
  {
    "start": "1342000",
    "end": "1375000"
  },
  {
    "text": "and on the note of these invocation syntaxes in invoke Cradle crafter which",
    "start": "1342710",
    "end": "1349380"
  },
  {
    "text": "I just released a couple months ago there's actually annual yeah I have to argue with some people they say how are",
    "start": "1349380",
    "end": "1355140"
  },
  {
    "text": "you still a blue Timur and I feel like you have some some personality disorder going on there but uh I like to be",
    "start": "1355140",
    "end": "1360480"
  },
  {
    "text": "thorough in my research so in invoke Cradle crafter there's actually over 10 different invocation options using this",
    "start": "1360480",
    "end": "1366390"
  },
  {
    "text": "get alias get command so basically it's a really interesting tool to go around and to play around with to see all the",
    "start": "1366390",
    "end": "1372900"
  },
  {
    "text": "different kinds of combinations that can come out there that was brutal I don't",
    "start": "1372900",
    "end": "1378060"
  },
  {
    "start": "1375000",
    "end": "1396000"
  },
  {
    "text": "know about you but my brain is hurting I'm about as much as I can go when it comes to this kind of stuff so just",
    "start": "1378060",
    "end": "1384840"
  },
  {
    "text": "breathe relax alright so fortunately the good news is that's really the extent of the oxidation that you can perform for",
    "start": "1384840",
    "end": "1390750"
  },
  {
    "text": "PowerShell thank you guys stole the punch line there it's absolutely not the",
    "start": "1390750",
    "end": "1397290"
  },
  {
    "start": "1396000",
    "end": "1450000"
  },
  {
    "text": "end there's way more we can do we can actually step back after we've done all this token layer off the station and say",
    "start": "1397290",
    "end": "1402450"
  },
  {
    "text": "let me take this entire command and treat it as a string and as a string I can just like let's say reverse the",
    "start": "1402450",
    "end": "1408930"
  },
  {
    "text": "entire command and on the command line everything is in reverse in memory its reversed what we can also do is we can",
    "start": "1408930",
    "end": "1414930"
  },
  {
    "text": "put garbage two limiters all throughout the command and then split and join on that we can do a very similar thing with",
    "start": "1414930",
    "end": "1420630"
  },
  {
    "text": "replace just say yeah all those garbage delimiter so let me just remove those before I invoke what's left",
    "start": "1420630",
    "end": "1425760"
  },
  {
    "text": "we can then chunk it up into sub strings and concatenate it again any kind of string manipulation and it's game over",
    "start": "1425760",
    "end": "1432600"
  },
  {
    "text": "and that's kind of what are we doing with the method stuff right with download string if we could treat it as a string object it's game over we can do",
    "start": "1432600",
    "end": "1438990"
  },
  {
    "text": "any of these techniques either on any individual piece of the command or the entire command now wouldn't it suck if",
    "start": "1438990",
    "end": "1445950"
  },
  {
    "text": "there's a tool out there that did all this stuff in an automated fashion like that B that would be pretty disturbing right unfortunately some guy wrote this",
    "start": "1445950",
    "end": "1452220"
  },
  {
    "start": "1450000",
    "end": "1481000"
  },
  {
    "text": "tool called invoke off eustachian thanks Daniel mmm that basically does just that and so if you",
    "start": "1452220",
    "end": "1458029"
  },
  {
    "text": "take again this is the this is the sample command that we just office skated manually right a download cradle",
    "start": "1458029",
    "end": "1463219"
  },
  {
    "text": "with that totally legit bitly link and in the info coffee station you can just say yeah instead of having to go to the",
    "start": "1463219",
    "end": "1469489"
  },
  {
    "text": "string token the member token just say yeah all the tokens like randomize all that stuff and produce something like",
    "start": "1469489",
    "end": "1474710"
  },
  {
    "text": "that you can then take something like that and say hey let me do some of that fancy string manipulation that we just",
    "start": "1474710",
    "end": "1480559"
  },
  {
    "text": "talked about you'll get something like that now fun fact um writing this tool",
    "start": "1480559",
    "end": "1487009"
  },
  {
    "text": "was was very frustrating at times because debugging off you skated code is like the worst possible wish you could ever wish upon somebody but then you're",
    "start": "1487009",
    "end": "1494389"
  },
  {
    "text": "bad you lay in it but then actually when you see like apt groups using your code",
    "start": "1494389",
    "end": "1499820"
  },
  {
    "text": "and you have to go and like decode it you kind of get some dirty looks in the office alright I'll decode this one so",
    "start": "1499820",
    "end": "1504950"
  },
  {
    "text": "apt 32 is a Vietnamese group also known as ocean Lotus and they happen to like",
    "start": "1504950",
    "end": "1510139"
  },
  {
    "text": "this combination typically they'll have their payloads and they'll run it through token layer on off you station and then like five or six layers of",
    "start": "1510139",
    "end": "1516200"
  },
  {
    "text": "string off you sagacious so keeps it interesting so that's invoke computation invoke",
    "start": "1516200",
    "end": "1521960"
  },
  {
    "start": "1520000",
    "end": "1532000"
  },
  {
    "text": "cradle crafter actually will take a very different spin on this so in the cradle crafter you can basically hand at this URL",
    "start": "1521960",
    "end": "1527330"
  },
  {
    "text": "your bitly link and then it will perform completely different kind of obfuscation against this it will do substitution off",
    "start": "1527330",
    "end": "1534559"
  },
  {
    "text": "Yusuke ssin so now let's look like for a member right for download string it'll",
    "start": "1534559",
    "end": "1539690"
  },
  {
    "text": "never put that in quotes it'll never add tick marks what it will actually do is it will enumerate other",
    "start": "1539690",
    "end": "1546049"
  },
  {
    "text": "objects and basically say alright like the 37th item when I call this command happens to be the string download string",
    "start": "1546049",
    "end": "1551479"
  },
  {
    "text": "so now this big blob of text is gonna resolve to download string in memory but not on the command line so that's where",
    "start": "1551479",
    "end": "1557479"
  },
  {
    "text": "you get commands like this so as part of today's talk a few hours ago I actually",
    "start": "1557479",
    "end": "1564649"
  },
  {
    "text": "released two new encoding schemes for invoke confiscation just to drive home the point if anyone's not convinced that",
    "start": "1564649",
    "end": "1571719"
  },
  {
    "text": "that there needs to be a different approach when it comes to detecting off you station this is 100% special",
    "start": "1571719",
    "end": "1578119"
  },
  {
    "start": "1576000",
    "end": "1604000"
  },
  {
    "text": "characters now I cannot take credit for this there's a Japanese researcher that",
    "start": "1578119",
    "end": "1583429"
  },
  {
    "text": "in 2010 came up with this their Twitter handle is Muto Gucci and they actually",
    "start": "1583429",
    "end": "1589279"
  },
  {
    "text": "wrote hello world 100% with special characters and I would love to meet this person because it's a brilliant idea it's these",
    "start": "1589279",
    "end": "1596000"
  },
  {
    "text": "three parts they do to come up with this but really fascinating now this is basically a ton of variables and their",
    "start": "1596000",
    "end": "1601520"
  },
  {
    "text": "variable names happen to also be special characters but you could also make those variable names just be different amounts",
    "start": "1601520",
    "end": "1606740"
  },
  {
    "text": "of white space look like that and now I was having a conversation with Casey",
    "start": "1606740",
    "end": "1612140"
  },
  {
    "text": "Smith or sub to you several months ago and he saw us he said ah that reminds me of white space encoding and I said uh",
    "start": "1612140",
    "end": "1618580"
  },
  {
    "text": "say what he said you know like white space and to have encoding is like you got talk to me about this and so that's",
    "start": "1618580",
    "end": "1625429"
  },
  {
    "start": "1624000",
    "end": "1647000"
  },
  {
    "text": "the second one or at least today which is white space and tab encoding so this",
    "start": "1625429",
    "end": "1632600"
  },
  {
    "text": "isn't a typo that there's a tiny little tick mark at the beginning and then the rest of that is either a white space",
    "start": "1632600",
    "end": "1637730"
  },
  {
    "text": "delimited by tabs or tabs limited by white space and that stuff at the end basically decodes that so as a defender",
    "start": "1637730",
    "end": "1645070"
  },
  {
    "text": "we may start to feel like really isn't much hope so I'm starting to feel guilty",
    "start": "1645070",
    "end": "1654230"
  },
  {
    "start": "1647000",
    "end": "1665000"
  },
  {
    "text": "because I feel like you know I'm kind of betraying my own people so is there anything that we can do to make this better for us I don't know",
    "start": "1654230",
    "end": "1660679"
  },
  {
    "text": "well we're not even halfway through this talk so I think the answer might be yes I think we could do some smart stuff",
    "start": "1660679",
    "end": "1667549"
  },
  {
    "start": "1665000",
    "end": "1675000"
  },
  {
    "text": "here the big thing to realize so hold back we're not professional data scientists or anything we're gonna do",
    "start": "1667549",
    "end": "1673490"
  },
  {
    "text": "some some journeyman science here the big thing when you take a look at this nobody looking at either of these",
    "start": "1673490",
    "end": "1679730"
  },
  {
    "start": "1675000",
    "end": "1709000"
  },
  {
    "text": "scripts is gonna be like that's fine let's just let that through you look at this thing and you have",
    "start": "1679730",
    "end": "1686490"
  },
  {
    "text": "spotlight we've got an opportunity here to take what attackers are using as this",
    "start": "1686490",
    "end": "1692159"
  },
  {
    "text": "subversive cloak of invisibility and turn it into this laser of like look at me look at me I'm in so one of the ways",
    "start": "1692159",
    "end": "1699779"
  },
  {
    "text": "we can do this is start thinking about character frequency like you look at this and you say that's a lot of ticks",
    "start": "1699779",
    "end": "1705629"
  },
  {
    "text": "that's a lot of braces so character frequency let's do this we did some analysis against posh code",
    "start": "1705629",
    "end": "1713159"
  },
  {
    "start": "1709000",
    "end": "1752000"
  },
  {
    "text": "which is a popular PowerShell script sharing repository so on the right there you see that's what when you when you",
    "start": "1713159",
    "end": "1720419"
  },
  {
    "text": "take all the scripts in posh code that's what the character frequency looks like you know you vet some pretty regular",
    "start": "1720419",
    "end": "1726210"
  },
  {
    "text": "English characters and stuff on the left there is two examples of what those",
    "start": "1726210",
    "end": "1731480"
  },
  {
    "text": "obfuscated scripts look like they look nothing like what a regular powershell",
    "start": "1731480",
    "end": "1737610"
  },
  {
    "text": "script does and at this point now we have sort of vectors of numbers that we can start to actually apply some",
    "start": "1737610",
    "end": "1744149"
  },
  {
    "text": "traditional techniques now one thing that's out there in the information retrieval community is called cosine",
    "start": "1744149",
    "end": "1750929"
  },
  {
    "text": "similarity the idea there search engines",
    "start": "1750929",
    "end": "1755940"
  },
  {
    "start": "1752000",
    "end": "1812000"
  },
  {
    "text": "use this a lot they characterize a document based on a big old list of numbers they call them features with",
    "start": "1755940",
    "end": "1761820"
  },
  {
    "text": "their numbers they go a list of numbers and then you compare all these numbers together and then you try to look for",
    "start": "1761820",
    "end": "1767820"
  },
  {
    "text": "ones that are very similar based on this math here so when you're doing cosine",
    "start": "1767820",
    "end": "1774779"
  },
  {
    "text": "just on little graph paper or grade 10 or whatever a line on paper is represented by two numbers that's a",
    "start": "1774779",
    "end": "1780360"
  },
  {
    "text": "two-dimensional line you take two lines that's another two numbers and then you can take the cosine of that and figure",
    "start": "1780360",
    "end": "1787169"
  },
  {
    "text": "out how similar the lines are by basically how much they the angle between them so you can take this exact",
    "start": "1787169",
    "end": "1794009"
  },
  {
    "text": "same approach and extend it into three dimensions or four dimensions and you could do a lot of dimensions and put a",
    "start": "1794009",
    "end": "1799379"
  },
  {
    "text": "nice-looking math symbol there and feel like you're so happy the truth is these",
    "start": "1799379",
    "end": "1804450"
  },
  {
    "text": "don't need to be dimensions on a graph these can also be just other numbers like character frequencies",
    "start": "1804450",
    "end": "1812549"
  },
  {
    "start": "1812000",
    "end": "1838000"
  },
  {
    "text": "when we take that cosine similarity and start to apply that a character frequencies across all of posh code this",
    "start": "1812549",
    "end": "1820870"
  },
  {
    "text": "is an example so most of the scripts they show up as being like 0.97 similar",
    "start": "1820870",
    "end": "1827140"
  },
  {
    "text": "to an average powershell script these are few skated ones they stick out like",
    "start": "1827140",
    "end": "1832150"
  },
  {
    "text": "a sore thumb we've got 0.15 similarity we've got point three seven similarity",
    "start": "1832150",
    "end": "1838890"
  },
  {
    "text": "this is what it looks like when you take those similarity metrics to the average",
    "start": "1838890",
    "end": "1844540"
  },
  {
    "text": "powershell script across all of posh code we see just a really really great",
    "start": "1844540",
    "end": "1849910"
  },
  {
    "text": "grouping here above about 0.8 anything below that when you took a look at you",
    "start": "1849910",
    "end": "1856210"
  },
  {
    "text": "know you're talking about reducing 3500 scripts down to like a couple dozen when",
    "start": "1856210",
    "end": "1862809"
  },
  {
    "text": "you do look at these most of these things below 0.8 actually do have a lot",
    "start": "1862809",
    "end": "1868240"
  },
  {
    "text": "of characteristics of obfuscation and when they weren't done intentionally a lot of times they were done as part of",
    "start": "1868240",
    "end": "1875140"
  },
  {
    "text": "some sort of code golf competition or something like that so you know it makes sense so it's really good metric of a",
    "start": "1875140",
    "end": "1880780"
  },
  {
    "text": "way using cosine similarity to start really really finding some high density obfuscated stuff in your environment",
    "start": "1880780",
    "end": "1887530"
  },
  {
    "text": "using log processing so at this point we're pretty happy with with these",
    "start": "1887530",
    "end": "1892929"
  },
  {
    "text": "initial results but wondered this is really just posh code like there's other PowerShell scripts out there that we",
    "start": "1892929",
    "end": "1898360"
  },
  {
    "start": "1894000",
    "end": "1926000"
  },
  {
    "text": "could get our hands on so Microsoft last last spring ran a little contest called underhanded PowerShell and basically",
    "start": "1898360",
    "end": "1905110"
  },
  {
    "text": "it's kind of a two phase contest in the first part was more of the Red Team phase and basically invited",
    "start": "1905110",
    "end": "1910330"
  },
  {
    "text": "the community to submit underhanded or obfuscated or obtuse PowerShell code to",
    "start": "1910330",
    "end": "1916809"
  },
  {
    "text": "perform such a specific task that got around certain script analyzer rules looking for this certain activity to",
    "start": "1916809",
    "end": "1923500"
  },
  {
    "text": "happen and so so that was one part of this and then we really said you know we",
    "start": "1923500",
    "end": "1929740"
  },
  {
    "start": "1926000",
    "end": "1947000"
  },
  {
    "text": "need like that was a few hundred scripts that are really really fascinating but we said we need more we need more data",
    "start": "1929740",
    "end": "1934840"
  },
  {
    "text": "and so what we decided to do was to build a powershell corpus now however",
    "start": "1934840",
    "end": "1940870"
  },
  {
    "text": "we're both gentlemen and so we did this politely and what I mean by that",
    "start": "1940870",
    "end": "1945910"
  },
  {
    "text": "is that leader with this nice little script to scrape github and those blue portions are the portions that are",
    "start": "1945910",
    "end": "1951700"
  },
  {
    "start": "1947000",
    "end": "1965000"
  },
  {
    "text": "scraping github and the red portions are Canadian because Lee is Canadian and is",
    "start": "1951700",
    "end": "1956920"
  },
  {
    "text": "so polite so it's like swaddling it's like it's just so generous so it's really really a gentleman and how he",
    "start": "1956920",
    "end": "1962530"
  },
  {
    "text": "scrapes scrapes the Internet's but mad props to github so we had this thing",
    "start": "1962530",
    "end": "1967570"
  },
  {
    "start": "1965000",
    "end": "2000000"
  },
  {
    "text": "running for literally a month we took a look at all the github IDs and I'm like",
    "start": "1967570",
    "end": "1972880"
  },
  {
    "text": "okay ten million github repositories start scraping through those a month of",
    "start": "1972880",
    "end": "1977950"
  },
  {
    "text": "doing this and then it gets to like 11 million 12 million I'm like times with",
    "start": "1977950",
    "end": "1983890"
  },
  {
    "text": "pickin looked it up again it was actually a hundred million repos and so",
    "start": "1983890",
    "end": "1989230"
  },
  {
    "text": "I didn't feel like waiting for a year had to have this finish reached out to the github folks and they ran a little back-end query gave me a zip and it's",
    "start": "1989230",
    "end": "1996640"
  },
  {
    "text": "all good so so the most polite thing is actually just to ask the people you want",
    "start": "1996640",
    "end": "2002940"
  },
  {
    "start": "2000000",
    "end": "2054000"
  },
  {
    "text": "the data from so big thanks to get help for that and so we'd like to thank all of the contributors we hope don't have",
    "start": "2002940",
    "end": "2010530"
  },
  {
    "text": "time at the end to get to that but there's a lot of contributors out there so if you wouldn't mind raising your hand if you've ever submitted a",
    "start": "2010530",
    "end": "2015540"
  },
  {
    "text": "PowerShell script to get hub TechNet posh code powershell galleries anyone ever submitted awesome thank you so much",
    "start": "2015540",
    "end": "2022890"
  },
  {
    "text": "because this research wouldn't be possible without you so so your name is actually on that slide and it is it is",
    "start": "2022890",
    "end": "2028710"
  },
  {
    "text": "packed in the code in some fun places which we'll get to at the end so really excited about that so now once we got",
    "start": "2028710",
    "end": "2035940"
  },
  {
    "text": "all these scripts we had the realization that oh my gosh we actually have to look at these scripts so there's some",
    "start": "2035940",
    "end": "2043830"
  },
  {
    "text": "interesting things you might find when you gather this kind of corpus produced by human beings at a keyboard and some",
    "start": "2043830",
    "end": "2051030"
  },
  {
    "text": "of the stuff was just like really sad we found this it was called remove games",
    "start": "2051030",
    "end": "2057300"
  },
  {
    "start": "2054000",
    "end": "2100000"
  },
  {
    "text": "at ps1 the author oh crap matte great burn yeah ok so this",
    "start": "2057300",
    "end": "2062310"
  },
  {
    "text": "guy I don't know if that's right but basically this removed game stopped ps1 we'll go through and find the default",
    "start": "2062310",
    "end": "2068970"
  },
  {
    "text": "games kill those processes and at the end actually remove the freaking directories so I haven't investigated",
    "start": "2068970",
    "end": "2074700"
  },
  {
    "text": "where the high scores are stored but if it's lost in this then that makes me pretty sad so major buzzkill",
    "start": "2074700",
    "end": "2079889"
  },
  {
    "text": "but but in all seriousness we actually found some like some like heavier stuff it'll absolutely brutal it actually kind",
    "start": "2079890",
    "end": "2086970"
  },
  {
    "text": "of paused our research for a little bit to figure out how to handle this appropriately but we actually found a",
    "start": "2086970",
    "end": "2092370"
  },
  {
    "text": "plot to kind of overthrow a really interesting set of of people at a",
    "start": "2092370",
    "end": "2097890"
  },
  {
    "text": "certain nation-state and that was this script - let's fill the logs of the US House and Senate servers with a message",
    "start": "2097890",
    "end": "2104310"
  },
  {
    "start": "2100000",
    "end": "2112000"
  },
  {
    "text": "that we don't want SOPA so the the Stop Online Piracy Act so a lot of interesting stuff there so go back to",
    "start": "2104310",
    "end": "2112350"
  },
  {
    "start": "2112000",
    "end": "2157000"
  },
  {
    "text": "the serious stuff again we needed more data so the PowerShell corporates that we assembled and that we are actually",
    "start": "2112350",
    "end": "2118470"
  },
  {
    "text": "releasing as part of this research came up to four hundred and eight thousand",
    "start": "2118470",
    "end": "2123570"
  },
  {
    "text": "PowerShell scripts contributed by at least twenty eight thousand authors we",
    "start": "2123570",
    "end": "2128760"
  },
  {
    "text": "actually identified about sixteen hundred off you skated scripts in that data set and then we produced around",
    "start": "2128760",
    "end": "2135870"
  },
  {
    "text": "four thousand off you skated scripts by randomly taking these PowerShell scripts and running them through invoke off you",
    "start": "2135870",
    "end": "2141930"
  },
  {
    "text": "station invoke cradle crafter and then PowerShell ISE steroids off you station and the interesting thing to note here",
    "start": "2141930",
    "end": "2148470"
  },
  {
    "text": "is in the middle on the right where we manually labeled seven thousand scripts now that sounds really tedious",
    "start": "2148470",
    "end": "2153600"
  },
  {
    "text": "I don't why would we why do we do that I don't know one of the things that that's",
    "start": "2153600",
    "end": "2158700"
  },
  {
    "start": "2157000",
    "end": "2197000"
  },
  {
    "text": "amazing too is that this is four gigs of text if you type that by hand as fast as",
    "start": "2158700",
    "end": "2164910"
  },
  {
    "text": "you possibly could you know the average person types fifty words a minute did that eight hours a day like 365 you're",
    "start": "2164910",
    "end": "2174900"
  },
  {
    "text": "talking thirty years of non-stop typing to make this corpus like the amount of humanity represented",
    "start": "2174900",
    "end": "2180930"
  },
  {
    "text": "by this is crazy but seven thousand scripts why do you actually everyone thinks hacking is pretty awesome like",
    "start": "2180930",
    "end": "2186990"
  },
  {
    "text": "you're in a hood and you do crazy music and stuff it's kind of boring you sit there a notepad window pops up you take",
    "start": "2186990",
    "end": "2192330"
  },
  {
    "text": "a look it's good close it label it so there's some PowerShell scripts to help out a bit but this is why we talked",
    "start": "2192330",
    "end": "2199440"
  },
  {
    "start": "2197000",
    "end": "2236000"
  },
  {
    "text": "about how happy we were with that string similar similarity metrics right where we were able to say all this stuff below",
    "start": "2199440",
    "end": "2206550"
  },
  {
    "text": "zero point eight that stuff looked pretty sketchy and we're happy with that we didn't point out though we didn't",
    "start": "2206550",
    "end": "2213430"
  },
  {
    "text": "review the stuff above 0.8 Ryan Cobb did some interesting investigation kind of going along that",
    "start": "2213430",
    "end": "2219670"
  },
  {
    "text": "path and the real measure that you need to focus on and he did find that if you",
    "start": "2219670",
    "end": "2225640"
  },
  {
    "text": "change that 0.8 to 0.7 or 0.9 it starts to get a lot less good as a metric so",
    "start": "2225640",
    "end": "2233680"
  },
  {
    "text": "when you're trying to be a bit more kind of principled about this thing the way that you traditionally measure things is",
    "start": "2233680",
    "end": "2240220"
  },
  {
    "start": "2236000",
    "end": "2310000"
  },
  {
    "text": "by the two main things are precision and recall so precision says when you know",
    "start": "2240220",
    "end": "2247480"
  },
  {
    "text": "this thing had an answer how often was it correct so basically that's the measure of false positives and recall",
    "start": "2247480",
    "end": "2254619"
  },
  {
    "text": "says of all the bad stuff that's out there all the obfuscated stuff how much did it actually give you back to take a",
    "start": "2254619",
    "end": "2261130"
  },
  {
    "text": "look at so this is an example here where precision was pretty good right it was",
    "start": "2261130",
    "end": "2266440"
  },
  {
    "text": "right almost 90 percent of the time but recall that was not a happy time 37",
    "start": "2266440",
    "end": "2272529"
  },
  {
    "text": "percent it was really not returning that much of the obfuscated stuff there was a ton of stuff above that 0.8 that when",
    "start": "2272529",
    "end": "2280180"
  },
  {
    "text": "reviewed manually or visually was considered obfuscated and the f1 score",
    "start": "2280180",
    "end": "2286180"
  },
  {
    "text": "is a thing that people use to kind of combine those two things and that's where you see we really have some problems here at 0.5 too so there's",
    "start": "2286180",
    "end": "2294880"
  },
  {
    "text": "clearly some dangers of character only stuff but not only the problem of looking at characters but if you just",
    "start": "2294880",
    "end": "2301809"
  },
  {
    "text": "look at characters there's a big opportunity for attackers to start manipulating those character frequencies",
    "start": "2301809",
    "end": "2308130"
  },
  {
    "text": "so this is PowerShell one of the most powerful things ever invented I love it",
    "start": "2308130",
    "end": "2313299"
  },
  {
    "start": "2310000",
    "end": "2325000"
  },
  {
    "text": "I have his babies we've got the power we could do a lot better than just simple character frequency analysis yeah so how",
    "start": "2313299",
    "end": "2321160"
  },
  {
    "text": "might we get more data points other than just character frequency well PowerShell when it sees code it knows",
    "start": "2321160",
    "end": "2328029"
  },
  {
    "text": "its own and it has to have a way to parse that code and what we're looking at here is actually um powershell",
    "start": "2328029",
    "end": "2334539"
  },
  {
    "text": "abstract syntax tree or AST so when power sells ceases command at the bottom it says okay git command that's called",
    "start": "2334539",
    "end": "2341319"
  },
  {
    "text": "generic it understands these left the season right parentheses it sees that the dash F is actually a format",
    "start": "2341319",
    "end": "2347940"
  },
  {
    "text": "operator we also see the these strings and so the neat part about this is that",
    "start": "2347940",
    "end": "2353010"
  },
  {
    "text": "PowerShell doesn't only recognize what these items are it also recognizes how",
    "start": "2353010",
    "end": "2358590"
  },
  {
    "text": "they are related to every other piece of the command thus the abstract syntax tree so what",
    "start": "2358590",
    "end": "2364680"
  },
  {
    "text": "this means is that we can actually go really deep and inspect the script in a really deep fashion not just looking at",
    "start": "2364680",
    "end": "2370230"
  },
  {
    "text": "it as a whole and looking at characters there's a great little GUI out there for viewing powershell ast called ast",
    "start": "2370230",
    "end": "2376800"
  },
  {
    "start": "2372000",
    "end": "2399000"
  },
  {
    "text": "Explorer out there on github so a really cool tool just to use to kind of type in a command and see how does this actually",
    "start": "2376800",
    "end": "2381930"
  },
  {
    "text": "break out into ast and this is ridiculous like you just open up a PowerShell window install a module show",
    "start": "2381930",
    "end": "2389910"
  },
  {
    "text": "PS ast you get it you run it like PowerShell makes it's so so easy to get",
    "start": "2389910",
    "end": "2395460"
  },
  {
    "text": "useful stuff on your systems exactly and so now what we did with this is we said",
    "start": "2395460",
    "end": "2402210"
  },
  {
    "start": "2399000",
    "end": "2466000"
  },
  {
    "text": "ok instead of just looking at character frequency for the whole script how many features can we possibly get so we",
    "start": "2402210",
    "end": "2409890"
  },
  {
    "text": "started with AST type so basically in this entire script how many commands do we have how many parentheses how many",
    "start": "2409890",
    "end": "2415770"
  },
  {
    "text": "operators how many how many members how many strings all the stuff just getting counts and percentages of the entire",
    "start": "2415770",
    "end": "2422100"
  },
  {
    "text": "script what percentage was this we did the same thing with operator so assignment operators binary operators",
    "start": "2422100",
    "end": "2427920"
  },
  {
    "text": "unary invocation operators array size ranges an array of five elements is a",
    "start": "2427920",
    "end": "2433050"
  },
  {
    "text": "little bit it could be interesting but one of 5,000 elements that becomes interesting maybe that's show code so we",
    "start": "2433050",
    "end": "2438840"
  },
  {
    "text": "got that data and then for every single one of these we ran character frequency analysis on each of those elements so",
    "start": "2438840",
    "end": "2445470"
  },
  {
    "text": "just on the strings just on the commandlets and we didn't just do frequency we did frequency entropy we",
    "start": "2445470",
    "end": "2451830"
  },
  {
    "text": "did the length max min medium mode range average we did a white space density character casing a lot of fun stuff and",
    "start": "2451830",
    "end": "2458850"
  },
  {
    "text": "we also did statistics on the command names dotnet methods variables etc and so what that resulted in was a lot of",
    "start": "2458850",
    "end": "2464670"
  },
  {
    "text": "features actually 4,000 feature 198 features that's crazy",
    "start": "2464670",
    "end": "2470480"
  },
  {
    "text": "anyone realize oh my gosh what do we do with all these features",
    "start": "2470480",
    "end": "2476180"
  },
  {
    "start": "2475000",
    "end": "2532000"
  },
  {
    "text": "here's a here's a thing there's a there's a technique that is really common in statistics called a linear",
    "start": "2476630",
    "end": "2483900"
  },
  {
    "text": "regression so it's you could do this in Excel it you know there's a lot of plugins to do a linear regression so the",
    "start": "2483900",
    "end": "2490200"
  },
  {
    "text": "way that a linear regression works so we talk about features right those five thousand features so you might talk",
    "start": "2490200",
    "end": "2496470"
  },
  {
    "text": "about well how do you figure out which ones are the most important or not so for each feature you give it a weight that's just a way to figure out the",
    "start": "2496470",
    "end": "2502830"
  },
  {
    "text": "importance so I take the combination of weights and their features do some",
    "start": "2502830",
    "end": "2508860"
  },
  {
    "text": "multiplication add it up across the whole five thousand and if it's over a",
    "start": "2508860",
    "end": "2514080"
  },
  {
    "text": "certain level like if that number whatever it is is over a certain number then maybe you call that obfuscated and",
    "start": "2514080",
    "end": "2519750"
  },
  {
    "text": "if it's below a number well then it's not obvious kated now the thing is these",
    "start": "2519750",
    "end": "2525600"
  },
  {
    "text": "the numbers coming back from these features can be kind of rangy like way up and down way up and down so you had",
    "start": "2525600",
    "end": "2532980"
  },
  {
    "start": "2532000",
    "end": "2601000"
  },
  {
    "text": "this other thing called a logit function that basically takes all your features and scales it down between zero and one",
    "start": "2532980",
    "end": "2538980"
  },
  {
    "text": "just so that you don't have one thing where like somebody dumps in a script with 14 megabytes in a character array",
    "start": "2538980",
    "end": "2546120"
  },
  {
    "text": "that just totally trashes everything so this is a way to kind of squish those ranges a little bit so you combine the",
    "start": "2546120",
    "end": "2552170"
  },
  {
    "text": "linear regression with a logit function and that's called a logistic regression so that's a pretty common thing as well",
    "start": "2552170",
    "end": "2560150"
  },
  {
    "text": "so again another graphic of math just show how smart we are the you basically",
    "start": "2560150",
    "end": "2567480"
  },
  {
    "text": "take those features send them through this logit function and you do the same thing so now you're doing a linear",
    "start": "2567480",
    "end": "2573720"
  },
  {
    "text": "regression on these logic functions then",
    "start": "2573720",
    "end": "2578730"
  },
  {
    "text": "there's other big question though you have is like what do you do like that sound is smart but you still didn't",
    "start": "2578730",
    "end": "2584070"
  },
  {
    "text": "answer the main question is like how do I figure out all these weights that's that's an art that's a science do I like",
    "start": "2584070",
    "end": "2589470"
  },
  {
    "text": "phone up Deebo would be like ad Bo is like a character array like a bad thing and I don't know like how many false",
    "start": "2589470",
    "end": "2596130"
  },
  {
    "text": "positives are you gonna get how many false negatives are you gonna get so the",
    "start": "2596130",
    "end": "2602370"
  },
  {
    "start": "2601000",
    "end": "2678000"
  },
  {
    "text": "trick there is another statistical technique called a gradient descent now this exactly is why we went through",
    "start": "2602370",
    "end": "2610560"
  },
  {
    "text": "all the painstaking effort to label tons and tons and tons of data because what",
    "start": "2610560",
    "end": "2615750"
  },
  {
    "text": "you do need is a source of truth so this gradient descent says I take all of",
    "start": "2615750",
    "end": "2621030"
  },
  {
    "text": "these weights and I just pretend that they don't matter at all and then you go through this data set of stuff that you",
    "start": "2621030",
    "end": "2627660"
  },
  {
    "text": "know what that you've labeled and then you get an answer you say I'm gonna run my my calculation I think that it's",
    "start": "2627660",
    "end": "2634470"
  },
  {
    "text": "obfuscated or not based on based on these numbers but then you have an actual answer of are you correct or not",
    "start": "2634470",
    "end": "2641630"
  },
  {
    "text": "so if you're not correct there's always gonna be some error between what you thought it was and what the actual value",
    "start": "2641630",
    "end": "2647250"
  },
  {
    "text": "is you can take that error and feed it back and then adjust all those weights",
    "start": "2647250",
    "end": "2652320"
  },
  {
    "text": "based on that error so the big weights are gonna get adjusted the most when",
    "start": "2652320",
    "end": "2657360"
  },
  {
    "text": "they're wrong and the small weights will get adjusted the least when things are wrong so this is the approach here you",
    "start": "2657360",
    "end": "2663090"
  },
  {
    "text": "you run this gradient descent on all these features and you get a really big you get a really big weight vector that",
    "start": "2663090",
    "end": "2670200"
  },
  {
    "text": "you can then go off and apply to any script and decide whether it's obfuscated or not so does it work I",
    "start": "2670200",
    "end": "2679130"
  },
  {
    "start": "2678000",
    "end": "2723000"
  },
  {
    "text": "think so take a look at this we got 94% of obfuscated in the wild",
    "start": "2679130",
    "end": "2686430"
  },
  {
    "text": "PowerShell scripts with only 1% false positives that's something you want on",
    "start": "2686430",
    "end": "2692850"
  },
  {
    "text": "your team absolutely",
    "start": "2692850",
    "end": "2696170"
  },
  {
    "text": "so this thing became ten times better at finding the bad than character frequency",
    "start": "2698520",
    "end": "2704730"
  },
  {
    "text": "analysis alone with half the false positives but that was stuff in the wild",
    "start": "2704730",
    "end": "2713880"
  },
  {
    "text": "some people in the wild are just like whoo Yolo just dump everything at it",
    "start": "2713880",
    "end": "2720050"
  },
  {
    "text": "what about just sketchy stuff you're in the midst of an incident response or you're trying to take a look at",
    "start": "2723230",
    "end": "2729300"
  },
  {
    "text": "something and you want to cast a much wider net you want to say let that one",
    "start": "2729300",
    "end": "2734310"
  },
  {
    "text": "on the left that's like to the wall off you skated the one on the right like I don't know maybe it's off you skated",
    "start": "2734310",
    "end": "2740280"
  },
  {
    "text": "maybe it's just sketchy like it doesn't look like a regular powershell script maybe I want to have if I had the best",
    "start": "2740280",
    "end": "2746400"
  },
  {
    "text": "intern ever them to say a li like take a look at this I don't know what it does but I think you might want to take another look so what we did is we ran",
    "start": "2746400",
    "end": "2755250"
  },
  {
    "text": "this again with that as a bar of what's considered off you skated so really looking for a deep analysis of script",
    "start": "2755250",
    "end": "2761880"
  },
  {
    "text": "blocks still like really really epic when you start talking about the deep",
    "start": "2761880",
    "end": "2768920"
  },
  {
    "start": "2762000",
    "end": "2892000"
  },
  {
    "text": "analysis you're still getting 88% recall so 88% of all stuff that anybody might",
    "start": "2768920",
    "end": "2776430"
  },
  {
    "text": "consider kind of sketchy or noteworthy is coming up and you still only have 5%",
    "start": "2776430",
    "end": "2782880"
  },
  {
    "text": "false positives you're catching a wider net casting a wider net and the most important thing to hear is that when you",
    "start": "2782880",
    "end": "2790830"
  },
  {
    "text": "start talking about in the wild stuff what we had there of the 94 percent in the wild being caught when you're",
    "start": "2790830",
    "end": "2797609"
  },
  {
    "text": "casting this wider net that now becomes 97 percent of in the wild PowerShell",
    "start": "2797609",
    "end": "2803220"
  },
  {
    "text": "scripts being able to cut by this algorithm so you know logistic all that kind of",
    "start": "2803220",
    "end": "2811559"
  },
  {
    "text": "stuff logistic regression or are there any other ways to do this and there are so what we did is as part of this we",
    "start": "2811559",
    "end": "2817950"
  },
  {
    "text": "generated a huge CSV of all this stuff and you can dump this into a place like Azure machine learning studio and see",
    "start": "2817950",
    "end": "2824849"
  },
  {
    "text": "what it looks like when you're doing the the logistic regression there's other ones there's one support vector machine",
    "start": "2824849",
    "end": "2831989"
  },
  {
    "text": "and there's boosted decision trees there's a bunch of different ways that people are applying statistics at scale",
    "start": "2831989",
    "end": "2837959"
  },
  {
    "text": "to do basically categorization of data the closest one was the boosted decision",
    "start": "2837959",
    "end": "2844529"
  },
  {
    "text": "tree we with this research we ended up getting about the same answer as the the",
    "start": "2844529",
    "end": "2849930"
  },
  {
    "text": "logistic progression and a kind of a professional machine learning studio the boosted decision tree got us pretty",
    "start": "2849930",
    "end": "2855989"
  },
  {
    "text": "close as well it was a little bit worse and then the other two were much worse so so this is pretty awesome stuff",
    "start": "2855989",
    "end": "2864380"
  },
  {
    "text": "anyone care to see it alright so if",
    "start": "2864380",
    "end": "2870900"
  },
  {
    "text": "anyone knows me I'm obsessed with the right host command lit with colors so I couldn't refrain I had to I had to put",
    "start": "2870900",
    "end": "2878039"
  },
  {
    "text": "some ascii are out there so this is this is what you get basically a script",
    "start": "2878039",
    "end": "2883469"
  },
  {
    "text": "analyzing it piece by piece throwing some of the actual statistics that we get out of it some number of features",
    "start": "2883469",
    "end": "2890160"
  },
  {
    "text": "the how fast it takes on average less than 300 milliseconds to analyze any script or command with this tool and to",
    "start": "2890160",
    "end": "2897839"
  },
  {
    "start": "2892000",
    "end": "2960000"
  },
  {
    "text": "be honest this entire function actually serves no purpose and finding evil it's simply for the lulz and for the colors",
    "start": "2897839",
    "end": "2903329"
  },
  {
    "text": "so if you don't like any of that stuff just don't run rivo coffee station and we'll show you the more important",
    "start": "2903329",
    "end": "2908940"
  },
  {
    "text": "functions later but if you do there's a tutorial it's also known as the readme but this one has colors so you can look",
    "start": "2908940",
    "end": "2915239"
  },
  {
    "text": "at that fun facts there's a lot of interesting statistics and fun things that we found in this research some more",
    "start": "2915239",
    "end": "2921989"
  },
  {
    "text": "goodies in the corpus so just run fun facts and see what comes up there if you're feeling feeling down on yourself",
    "start": "2921989",
    "end": "2927749"
  },
  {
    "text": "that day also when you collect almost half a million powershell scripts you're bound to find other people who do some",
    "start": "2927749",
    "end": "2934739"
  },
  {
    "text": "pretty interesting ASCII art so you can check out some random ASCII art there that we found in the corpus it's quite",
    "start": "2934739",
    "end": "2940589"
  },
  {
    "text": "nice and they'll show you a URL the project if you want to check it out a set of fun quotes and then credits at",
    "start": "2940589",
    "end": "2945990"
  },
  {
    "text": "the end again if you'd like to see maybe your name pop up there then we have all the contributors sitting in there so",
    "start": "2945990",
    "end": "2951990"
  },
  {
    "text": "good times and actually we had a nice little subsection of our favorites that have some pretty fun names but if you're",
    "start": "2951990",
    "end": "2957630"
  },
  {
    "text": "actually looking to you know find evil and not just laugh then there's two things you want to know one is get our",
    "start": "2957630",
    "end": "2963480"
  },
  {
    "start": "2960000",
    "end": "2967000"
  },
  {
    "text": "vo script block now what this is doing is we tell people okay upgrade to PowerShell five enable script block",
    "start": "2963480",
    "end": "2968490"
  },
  {
    "start": "2967000",
    "end": "2973000"
  },
  {
    "text": "logging that produces a lot of data though and a lot of times the entire script will be cast over several",
    "start": "2968490",
    "end": "2974280"
  },
  {
    "start": "2973000",
    "end": "3002000"
  },
  {
    "text": "different event logs so what this will do is it'll go through and group and reassemble those into PowerShell objects",
    "start": "2974280",
    "end": "2980520"
  },
  {
    "text": "so if all you have is a get win event across a lot of systems or if you just have the raw VTX files you can pipe it",
    "start": "2980520",
    "end": "2986369"
  },
  {
    "text": "in to get our via script block and we'll reassemble those scripts for you now once you have either a directory of",
    "start": "2986369",
    "end": "2992400"
  },
  {
    "text": "scripts or you've reassemble them from script block logs how do you actually find evil it's simple all you do is pipe",
    "start": "2992400",
    "end": "2998880"
  },
  {
    "text": "it into measure RB o occupation and there we go so now our vo is that is the",
    "start": "2998880",
    "end": "3007280"
  },
  {
    "text": "short name for repo coffee station but as you can see here it's it's really colorful it's kind of like Christmas red",
    "start": "3007280",
    "end": "3013400"
  },
  {
    "text": "and green and in the results you get back you have the script content you have is obfuscated you have all the",
    "start": "3013400",
    "end": "3019220"
  },
  {
    "text": "script features at the bottom there you have the time it took to pull those features the time it took to measure those features everything and lastly our",
    "start": "3019220",
    "end": "3030200"
  },
  {
    "start": "3025000",
    "end": "3075000"
  },
  {
    "text": "desire was always for this to be usable by anybody this isn't just some research",
    "start": "3030200",
    "end": "3035450"
  },
  {
    "text": "tool that researchers can have fun with we want this to be practical like like today as in like we just pushed it an",
    "start": "3035450",
    "end": "3041180"
  },
  {
    "text": "hour ago and it's live on github we want you to be able to take a home and use it right out of the box and so from an",
    "start": "3041180",
    "end": "3046460"
  },
  {
    "text": "operational perspective we really wanted to make it as easy as possible to whitelist things that you've looked at but this is said hey the seems off you",
    "start": "3046460",
    "end": "3053330"
  },
  {
    "text": "skated and you can say alright let me check it out ok this was fine this is not a few scattered you can just drag that into a whitelist directory and",
    "start": "3053330",
    "end": "3059750"
  },
  {
    "text": "it'll hash it and basically a whitelist at any time it sees it again you can use content or regex and again all this is",
    "start": "3059750",
    "end": "3065900"
  },
  {
    "text": "in the tutorial all of this is in the readme but again our hope was that we can make it as easy and usable as possible for anyone in any organization",
    "start": "3065900",
    "end": "3074180"
  },
  {
    "text": "remember I was showing how easy it was to install the ast module just as easy you get home",
    "start": "3074180",
    "end": "3080650"
  },
  {
    "text": "install a module revoke obfuscation this is up on the PowerShell gallery as well you get this on your system immediately",
    "start": "3080650",
    "end": "3087280"
  },
  {
    "text": "you can start detecting obfuscation in PowerShell scripts in like 30 seconds",
    "start": "3087280",
    "end": "3093060"
  },
  {
    "text": "exactly so as we said this code is live it is it hosted on my github and also",
    "start": "3093060",
    "end": "3100180"
  },
  {
    "text": "the PowerShell gallery so again just install - module revoke - office casing and you have it on your system to use in",
    "start": "3100180",
    "end": "3107920"
  },
  {
    "start": "3107000",
    "end": "3151000"
  },
  {
    "text": "just a couple references this initial blog post from Lee homes last fall is kind of what started my interest in this",
    "start": "3107920",
    "end": "3114760"
  },
  {
    "text": "and kind of formed this this little team up here looking at this in them he had a",
    "start": "3114760",
    "end": "3121480"
  },
  {
    "text": "couple blog posts on that and then some is the n resources and the last blog if",
    "start": "3121480",
    "end": "3126580"
  },
  {
    "text": "you haven't read PowerShell hearts the blue team it's a phenomenal blog and white paper about all the stuff the PowerShell team is built in the",
    "start": "3126580",
    "end": "3132190"
  },
  {
    "text": "PowerShell for security people for security purposes and it's really really great thank you very much that is the",
    "start": "3132190",
    "end": "3139870"
  },
  {
    "text": "end of our presentation thank you",
    "start": "3139870",
    "end": "3143520"
  },
  {
    "text": "[Applause]",
    "start": "3145150",
    "end": "3148219"
  },
  {
    "text": "do we have any brave souls for questions if you have a question if you wouldn't mind heading up to the microphone and",
    "start": "3150790",
    "end": "3157820"
  },
  {
    "start": "3151000",
    "end": "3443000"
  },
  {
    "text": "we'll be around afterwards also if you don't want to speak into the microphone and be any questions I'll ask one so I",
    "start": "3157820",
    "end": "3165410"
  },
  {
    "text": "was looking at your character frequency analysis and it looks like it conforms basically to zip slaw did you look at",
    "start": "3165410",
    "end": "3171350"
  },
  {
    "text": "any of the power law stuff for distribution of characters yeah the distribution of characters",
    "start": "3171350",
    "end": "3177170"
  },
  {
    "text": "there we buy graph analysis is another common thing to look for commonality of like one-two punches like a ETI that",
    "start": "3177170",
    "end": "3184940"
  },
  {
    "text": "kind of stuff you end up running into some of the same issues at the first",
    "start": "3184940",
    "end": "3189950"
  },
  {
    "text": "order the Zips law stuff ends up showing at the at the regular character frequency as well it's definitely",
    "start": "3189950",
    "end": "3195980"
  },
  {
    "text": "interesting we ended up packing that intelligence into the into the entropy measurements",
    "start": "3195980",
    "end": "3202760"
  },
  {
    "text": "because that also shows it as well so we're doing entropy on everything command command names variable names",
    "start": "3202760",
    "end": "3208460"
  },
  {
    "text": "function names method names everything but the question thanks thank you any",
    "start": "3208460",
    "end": "3215780"
  },
  {
    "text": "others I got a question yeah have you found any legitimate uses of obfuscation in scripts that weren't",
    "start": "3215780",
    "end": "3221300"
  },
  {
    "text": "malware like what what how much of that was going on the primary kind we saw",
    "start": "3221300",
    "end": "3227660"
  },
  {
    "text": "where people trying to use it for IP prevention one of the tools that we used was one from ISC steroids where you",
    "start": "3227660",
    "end": "3234800"
  },
  {
    "text": "didn't write it as a malware vehicle even though malware has used it he wrote it as somebody wants to protect their",
    "start": "3234800",
    "end": "3240770"
  },
  {
    "text": "intellectual property or view skate it so that it becomes a little bit harder that's really the primary place you've",
    "start": "3240770",
    "end": "3247370"
  },
  {
    "text": "seen it elsewhere Thanks thank you all right thank you",
    "start": "3247370",
    "end": "3254300"
  },
  {
    "text": "thanks for staying so late oh one more so if I understand correctly it's actually first time run the code and",
    "start": "3254300",
    "end": "3261560"
  },
  {
    "text": "it's checks in the evaluated code so for instance if I would add a large large a",
    "start": "3261560",
    "end": "3272180"
  },
  {
    "text": "lot of codes to my office scalar script and if I would for instance place it in",
    "start": "3272180",
    "end": "3277880"
  },
  {
    "text": "an epilogue that would never become true with that throw off your system so for instance I have like 10",
    "start": "3277880",
    "end": "3284400"
  },
  {
    "text": "lines of obfuscated code and then I take a thousand lines of legitimate code but I placed in an F block that never",
    "start": "3284400",
    "end": "3291150"
  },
  {
    "text": "evaluates true with that then with your system then see it as a legitimate script it might as that's one of the big",
    "start": "3291150",
    "end": "3300839"
  },
  {
    "text": "questions when we did the analysis of the 7000 scripts we did for sure there's",
    "start": "3300839",
    "end": "3308130"
  },
  {
    "text": "a lot of things that are like line by line as opposed to the entire script itself so we did do a lot of",
    "start": "3308130",
    "end": "3314309"
  },
  {
    "text": "investigation of like hey this one little chunk is like a huge confusing thing we're gonna call this obfuscated",
    "start": "3314309",
    "end": "3320700"
  },
  {
    "text": "and the kind of a funny thing about the gradient descent and all that is we don't actually know it exactly what it",
    "start": "3320700",
    "end": "3326579"
  },
  {
    "text": "calls as the important stuff but the really critical part is if that actually starts becoming a thing that people do",
    "start": "3326579",
    "end": "3332099"
  },
  {
    "text": "well then you just start feeding that back into the corpus labeling it correctly and rerunning your your",
    "start": "3332099",
    "end": "3337799"
  },
  {
    "text": "learning on it and then you can start to pick up those things Thanks yes",
    "start": "3337799",
    "end": "3348470"
  },
  {
    "text": "so the question is I was a developer on PowerShell why the hell did we put all this back ticks and escapes and all that",
    "start": "3360170",
    "end": "3365780"
  },
  {
    "text": "is that the question because they are",
    "start": "3365780",
    "end": "3370850"
  },
  {
    "text": "used very very very frequently for non crazy things the truth is when you have",
    "start": "3370850",
    "end": "3375980"
  },
  {
    "text": "any sort of engine that can do computation you can do ridiculous stuff with it if you've ever seen one of the",
    "start": "3375980",
    "end": "3381950"
  },
  {
    "text": "brain f star star star competitions there's like literally four characters you can use and it some is too messed up",
    "start": "3381950",
    "end": "3388510"
  },
  {
    "text": "so you know you're never gonna get a language that cannot be used in this manner what we have done in PowerShell",
    "start": "3388510",
    "end": "3395060"
  },
  {
    "text": "is go like crazy on making it transparent when this happens so when",
    "start": "3395060",
    "end": "3400280"
  },
  {
    "text": "you enable script lock logging PowerShell logs all this stuff to the event log all that stuff you saw with",
    "start": "3400280",
    "end": "3406160"
  },
  {
    "text": "the shield gets unraveled automatically when it gets to the event log we've also done things like anytime one of these",
    "start": "3406160",
    "end": "3412670"
  },
  {
    "text": "things is interpreted by PowerShell it can also ask antivirus in line whether",
    "start": "3412670",
    "end": "3418850"
  },
  {
    "text": "this is okay to run so not just stuff off the disk but you go through three layers of eval all those things are",
    "start": "3418850",
    "end": "3425450"
  },
  {
    "text": "being sent into your event logs and the anti-malware so with great power becomes",
    "start": "3425450",
    "end": "3430640"
  },
  {
    "text": "comes great responsibility and it can be done in both ways Thanks cool thank you",
    "start": "3430640",
    "end": "3435710"
  },
  {
    "text": "very much I know our times up but we'll be just outside in the in the room would love to chat and hear a question so thank you again very much",
    "start": "3435710",
    "end": "3443050"
  }
]