[
  {
    "text": "[Music]",
    "start": "1180",
    "end": "13759"
  },
  {
    "text": "hello everyone hope you all had a happy halloween this year today i'm going to introduce my journey as a security risker and this gotta be",
    "start": "13759",
    "end": "20240"
  },
  {
    "text": "my lowest poverty cover so for the better quality i wrote down entire script and use google synthesizer",
    "start": "20240",
    "end": "25519"
  },
  {
    "text": "voice to conduct the speech alright here we go",
    "start": "25519",
    "end": "31840"
  },
  {
    "text": "i'm a jailbreak enthusiast since i was a kid the night i was waiting for evasion developers release ios 6 jailbreak was",
    "start": "31840",
    "end": "38800"
  },
  {
    "text": "unforgettable that's when i was a middle school kid i've got no other words to describe",
    "start": "38800",
    "end": "44079"
  },
  {
    "text": "it it was just absolutely amazing their talker 2013 hack in the box reveal",
    "start": "44079",
    "end": "50000"
  },
  {
    "text": "the secrets behind the jailbreaking the topic was fascinating and the amount of work that has been done is",
    "start": "50000",
    "end": "55760"
  },
  {
    "text": "unbelievable however i couldn't really comprehend all that things mentioned in the slide",
    "start": "55760",
    "end": "61440"
  },
  {
    "text": "as well as many other things described in the famous ios hackers handbook it's some sort of black magic nobody",
    "start": "61440",
    "end": "68080"
  },
  {
    "text": "understands and that is what intrigues me a lot talking about my background i'm from",
    "start": "68080",
    "end": "75119"
  },
  {
    "text": "china in my tiny little city and people around me back then it's",
    "start": "75119",
    "end": "80159"
  },
  {
    "text": "extremely rare to see someone who has good understanding at computer and english and there were controversies all over",
    "start": "80159",
    "end": "86400"
  },
  {
    "text": "the country about whether the new generation should be allowed to access the internet i was merely a teenage back then or even",
    "start": "86400",
    "end": "93280"
  },
  {
    "text": "younger the society doesn't take our words for real i really believe many of you out",
    "start": "93280",
    "end": "98320"
  },
  {
    "text": "there can relate to what i'm saying so the computer device was almost",
    "start": "98320",
    "end": "103439"
  },
  {
    "text": "considered as a new type of drug and parents would send their kids to boarding school to keep them away from",
    "start": "103439",
    "end": "109040"
  },
  {
    "text": "the internet and the school apparently cannot possibly teach what they do not understand and believe i went to boarding school",
    "start": "109040",
    "end": "117040"
  },
  {
    "text": "from the first grade all the way until the end of my school life towards the end of the primary school i",
    "start": "117040",
    "end": "123200"
  },
  {
    "text": "began to question the meaning of school cause for so many years i had been doing everything everybody told me and it just",
    "start": "123200",
    "end": "129440"
  },
  {
    "text": "doesn't feel right i get blamed and punished when i want to spend more time with myself study my interest so it took me several",
    "start": "129440",
    "end": "136319"
  },
  {
    "text": "years persuading my parents to let me out and that was the toughest thing i ever done in my life",
    "start": "136319",
    "end": "142400"
  },
  {
    "text": "i was literally fighting for my own time and freedom to learn what i want to learn however don't take me wrong though i'm",
    "start": "142400",
    "end": "149599"
  },
  {
    "text": "not saying school is useless my experience with school has taught me some important life lessons that i will",
    "start": "149599",
    "end": "155519"
  },
  {
    "text": "never forget they are quite simple but it's impossible to truly understand them if you haven't been in that kind of",
    "start": "155519",
    "end": "161760"
  },
  {
    "text": "situations before i appreciate my time and freedom more than ever after dropout",
    "start": "161760",
    "end": "168879"
  },
  {
    "text": "i was so excited when first time i had a chance to come to america by myself attending a conference",
    "start": "168879",
    "end": "175040"
  },
  {
    "text": "the 2015 jailbreak con in san francisco i was the youngest attendee there and",
    "start": "175040",
    "end": "180480"
  },
  {
    "text": "the person who drives me there he is the first american one ever met whose name is alfred",
    "start": "180480",
    "end": "186080"
  },
  {
    "text": "he was so worried about me since i barely understand any english so he found a female staff who is",
    "start": "186080",
    "end": "192159"
  },
  {
    "text": "working on-site and asked for some help i believe her name was britta so britta",
    "start": "192159",
    "end": "197280"
  },
  {
    "text": "introduced me to another attendee who was the only person beside me speaking chinese",
    "start": "197280",
    "end": "202640"
  },
  {
    "text": "his name was larry and later he becomes a very good friend to me so is alfred it was so exciting to see",
    "start": "202640",
    "end": "209440"
  },
  {
    "text": "the man behind the mysterious absidia and along with many other jailbreakers i",
    "start": "209440",
    "end": "214959"
  },
  {
    "text": "appreciate they uploaded the video on youtube it's so reminiscent of the past many",
    "start": "214959",
    "end": "220159"
  },
  {
    "text": "people have brought me interest in learning jailbreak and i am deeply grateful for that after",
    "start": "220159",
    "end": "226000"
  },
  {
    "text": "that i traveled back and forth multiple times to america by myself didn't do much fun things but visiting",
    "start": "226000",
    "end": "232400"
  },
  {
    "text": "libraries and make a space that is something i really love about america whether is public library or",
    "start": "232400",
    "end": "238480"
  },
  {
    "text": "university or college library everyone has free access and it's not crowded at all",
    "start": "238480",
    "end": "243680"
  },
  {
    "text": "and then makerspace is usually a non-profit business where people share tools in a rented place it gives you really positive",
    "start": "243680",
    "end": "250879"
  },
  {
    "text": "feeling about learning and focusing on something you're interested i really think they are gifts",
    "start": "250879",
    "end": "256079"
  },
  {
    "text": "for people who living in america so please don't take them for granted",
    "start": "256079",
    "end": "261359"
  },
  {
    "text": "all right now let's get to the technical topic i'll share the detail of how i jailbreak since ios 12.",
    "start": "261359",
    "end": "268320"
  },
  {
    "text": "here is the outline of the talk",
    "start": "268320",
    "end": "271840"
  },
  {
    "text": "we will first review what is ios sandbox and evaluate its weaknesses what benefits can an attacker get out of",
    "start": "274560",
    "end": "281120"
  },
  {
    "text": "it and i made a couple of diagrams to visualize the strength or intensity of the current ios sandbox",
    "start": "281120",
    "end": "287680"
  },
  {
    "text": "and then compare it to the past few years summarize the improvement apple has been made",
    "start": "287680",
    "end": "294400"
  },
  {
    "text": "so sandbox is a general term rather than a specific security mechanism and almost all modern operating systems",
    "start": "294400",
    "end": "301520"
  },
  {
    "text": "now have some kind of sandbox design ios or ipad os as a system mainly",
    "start": "301520",
    "end": "307440"
  },
  {
    "text": "running on the mobile device is in favor of very stringent restrictions",
    "start": "307440",
    "end": "312720"
  },
  {
    "text": "sandboxing gives a higher level of access control for a different process it's similar to the privacy panel in ios",
    "start": "312720",
    "end": "319600"
  },
  {
    "text": "settings but way more powerful than that and it lets apple neutralize many kinds of vulnerabilities in a very short",
    "start": "319600",
    "end": "326000"
  },
  {
    "text": "period of time with almost no overhead added it's definitely one of the revolutionary",
    "start": "326000",
    "end": "332720"
  },
  {
    "text": "designs in the evolution of computer security ios has its own sandbox design the",
    "start": "332720",
    "end": "339759"
  },
  {
    "text": "restrictions placed on a process depend on four conditions by default we cannot alter any of the",
    "start": "339759",
    "end": "345520"
  },
  {
    "text": "listed four conditions on a regular ios device but it's good to know them as later we",
    "start": "345520",
    "end": "350800"
  },
  {
    "text": "will talk about escalation i'm gonna go through each of them quickly so the first one",
    "start": "350800",
    "end": "357120"
  },
  {
    "text": "all files on ios must have a code signature to run there is no exception trust cache is a",
    "start": "357120",
    "end": "363520"
  },
  {
    "text": "list of hash stored in the ios kernel binary so it's static all the system files have",
    "start": "363520",
    "end": "369280"
  },
  {
    "text": "been signed this way and the different versions of the ios shipped it differently",
    "start": "369280",
    "end": "374319"
  },
  {
    "text": "so you can not swap execution files across different versions of ios because they wouldn't be able to run",
    "start": "374319",
    "end": "381840"
  },
  {
    "text": "but on mac os they can so the attacker can just copy and paste an old apple",
    "start": "381919",
    "end": "387120"
  },
  {
    "text": "signed file with the vulnerability that allowing the attacker to take over the execution then all of a sudden malicious",
    "start": "387120",
    "end": "393919"
  },
  {
    "text": "activities can be disguised in an apple sign process which usually displayed as green",
    "start": "393919",
    "end": "399280"
  },
  {
    "text": "meaning trusted in the antivirus software one of the anti-virus software i have",
    "start": "399280",
    "end": "404639"
  },
  {
    "text": "used that report some very useful information was developed by an apple hacker patrick wardle",
    "start": "404639",
    "end": "410080"
  },
  {
    "text": "it scans and verifies all process code signature which is a very effective method since",
    "start": "410080",
    "end": "415599"
  },
  {
    "text": "code signature is fundamentally protected by cryptographic algorithms bad guys are extremely unlikely to be",
    "start": "415599",
    "end": "421919"
  },
  {
    "text": "able to crack it this app displays app store apps as the black secured lock and the trick i mentioned earlier could",
    "start": "421919",
    "end": "428400"
  },
  {
    "text": "give us the green lock like other system processors the attacker could blend into the surroundings perfectly to survive",
    "start": "428400",
    "end": "434639"
  },
  {
    "text": "security inspection then signed by apple basically means all",
    "start": "434639",
    "end": "439680"
  },
  {
    "text": "the app store apps although you cannot directly interfere with the signing process it still remains exploitable as someone",
    "start": "439680",
    "end": "446639"
  },
  {
    "text": "could leave a back door in their app and later execute malicious code through the app charlie miller one of the authors of the",
    "start": "446639",
    "end": "453280"
  },
  {
    "text": "ios hackers handbook did it back in 2011. despite that the",
    "start": "453280",
    "end": "458319"
  },
  {
    "text": "ios doesn't allow you to run unsigned code whether it's files or memory so far",
    "start": "458319",
    "end": "464479"
  },
  {
    "text": "arbitrary code execution still achievable through complicated rop or job programming",
    "start": "464479",
    "end": "470160"
  },
  {
    "text": "the pointer authentication technology didn't stop it completely it just made it harder the last",
    "start": "470160",
    "end": "476080"
  },
  {
    "text": "situation signed by third-party developers is only allowed to possess certain entitlements",
    "start": "476080",
    "end": "481599"
  },
  {
    "text": "that won't break the sandbox the next one is the path of execution",
    "start": "481599",
    "end": "487759"
  },
  {
    "text": "all third-party applications on ios are automatically placed in a containerized environment because of the",
    "start": "487759",
    "end": "493280"
  },
  {
    "text": "path they have been running on they have limited access to all kinds of resources such as files",
    "start": "493280",
    "end": "499759"
  },
  {
    "text": "services kernel apis use functions like fork or execute and we refer to this as the default",
    "start": "499759",
    "end": "506160"
  },
  {
    "text": "application sandbox this is the thing we want to break out of it everyone is familiar with this one the",
    "start": "506160",
    "end": "513120"
  },
  {
    "text": "unix user id cause ios as well as mac os is a unix-like system",
    "start": "513120",
    "end": "518719"
  },
  {
    "text": "but something interesting is that ios has so many other privilege separation designs",
    "start": "518719",
    "end": "524159"
  },
  {
    "text": "obtaining the top privilege that usually is the root on ios doesn't really mean you can do all kinds of things since",
    "start": "524159",
    "end": "530399"
  },
  {
    "text": "there are other restrictions so it's the least useful one you are looking for",
    "start": "530399",
    "end": "536160"
  },
  {
    "text": "all right the last one is the entitlements and the seatbelt profiles this is the real deal when it comes to",
    "start": "536160",
    "end": "542000"
  },
  {
    "text": "sandbox escape they represent the actual access rights and are capable of restraining all kinds",
    "start": "542000",
    "end": "547279"
  },
  {
    "text": "of activities further refined down to the level of each individual process",
    "start": "547279",
    "end": "553519"
  },
  {
    "text": "all processes except a few at least have some entitlements whereas for the seat belt profiles only",
    "start": "553519",
    "end": "559839"
  },
  {
    "text": "a small portion is using it and they are often the critical ones that are directly accessible from safari",
    "start": "559839",
    "end": "565440"
  },
  {
    "text": "or app sandbox this happens because they are actually two different things for the",
    "start": "565440",
    "end": "570560"
  },
  {
    "text": "entitlements as its name a lot of time they were used for giving rights to access something",
    "start": "570560",
    "end": "576560"
  },
  {
    "text": "without the appropriate entitlements you can still establish connections to service or kernel apis",
    "start": "576560",
    "end": "582399"
  },
  {
    "text": "but at the end of the day the connection will be rejected how far you can go before that happens",
    "start": "582399",
    "end": "587839"
  },
  {
    "text": "is going to depend on when they decide to check your entitlements this is the essential difference between",
    "start": "587839",
    "end": "593440"
  },
  {
    "text": "entitlements and seat belt profiles cause seat belt profiles are born to prevent the connection from happening",
    "start": "593440",
    "end": "600560"
  },
  {
    "text": "now let's mention colonel a little bit kernel as its name is the core of the operating",
    "start": "600959",
    "end": "606640"
  },
  {
    "text": "system although it sounds like it has a lot of power and indeed it does nowadays the kernel is kind of",
    "start": "606640",
    "end": "613920"
  },
  {
    "text": "fallen off its throne separate chip and hardware protection attracts more eyes and the next promising hardware protection is the",
    "start": "613920",
    "end": "620480"
  },
  {
    "text": "memory tagging extension i am all excited to see it the term attack ios kernel has a wide meaning",
    "start": "620480",
    "end": "627600"
  },
  {
    "text": "but i only refer to obtain the capability of reading and writing virtual memory in kernel space",
    "start": "627600",
    "end": "633519"
  },
  {
    "text": "certainly that is not the end of the hacking after that you still have pointer authentication",
    "start": "633519",
    "end": "638800"
  },
  {
    "text": "and page protection layer to bypass and these are backed up by the hardware protection",
    "start": "638800",
    "end": "644399"
  },
  {
    "text": "if you want to learn more about them you should study the presentation apple did in black hat last year",
    "start": "644399",
    "end": "650240"
  },
  {
    "text": "the name is behind the scenes of ios and mac security also i had to mention a very impressive",
    "start": "650240",
    "end": "656480"
  },
  {
    "text": "researcher whose name is brandon azard he published many related works when he was working at google project zero",
    "start": "656480",
    "end": "664000"
  },
  {
    "text": "all good stuffs even if you don't have the motivation to hack them now still worth spending time to read them",
    "start": "664000",
    "end": "670000"
  },
  {
    "text": "because security technologies are advancing fast we might start seeing them used in other",
    "start": "670000",
    "end": "675200"
  },
  {
    "text": "devices in the future back to ios kernel 99 of the time",
    "start": "675200",
    "end": "682399"
  },
  {
    "text": "you have to get to the kernel in order to disable some of the most prominent security mechanisms",
    "start": "682399",
    "end": "687760"
  },
  {
    "text": "and one of them is code signing it controls the freedom to run any binaries and this is the least thing you can do",
    "start": "687760",
    "end": "694160"
  },
  {
    "text": "in order to be called a rootless jailbreak but why is 99 instead of 100 percent",
    "start": "694160",
    "end": "701839"
  },
  {
    "text": "because there are always special cases in the past and the present like the checkra 1n project relies on a",
    "start": "701839",
    "end": "707920"
  },
  {
    "text": "bootrum exploit it's rare and now with the new mitigation introduced in ios 14.",
    "start": "707920",
    "end": "713680"
  },
  {
    "text": "even future we develop another bootrum exploit use it to jailbreak is no longer an easy task anymore",
    "start": "713680",
    "end": "721680"
  },
  {
    "text": "overlapping segment attack against dyld to achieve untethered jailbreak first appearance in ios 6 jailbreak tool",
    "start": "721680",
    "end": "729519"
  },
  {
    "text": "then similar approach shown on every public jailbreaks until after pengu9 apple seems finally",
    "start": "729519",
    "end": "735680"
  },
  {
    "text": "eradicated this issue and we had to mention brandon azad again",
    "start": "735680",
    "end": "741200"
  },
  {
    "text": "because of his impressive work i'm pretty much amazed when i'm reading his open source project blanket",
    "start": "741200",
    "end": "747760"
  },
  {
    "text": "he bypassed code signing without first getting colonel read and write yet many of the techniques he used are",
    "start": "747760",
    "end": "753519"
  },
  {
    "text": "now patched as the aftermath so for now i'd say it's extinct",
    "start": "753519",
    "end": "759519"
  },
  {
    "text": "now our only option is to find and exploit kernel vulnerabilities this has become the common approach",
    "start": "759519",
    "end": "765680"
  },
  {
    "text": "especially when you're targeting the latest device many recent jailbreaks include all my jailbreaks are in this category",
    "start": "765680",
    "end": "772480"
  },
  {
    "text": "now let's talk about how to get to the kernel there are two common ways to do so",
    "start": "772480",
    "end": "778720"
  },
  {
    "text": "i made two diagrams for easier understanding both of them are still being seen today",
    "start": "779120",
    "end": "784560"
  },
  {
    "text": "but you probably have seen more of the first one which attacking kernel through interfaces that are directly accessible",
    "start": "784560",
    "end": "790560"
  },
  {
    "text": "from within the sandbox these interfaces usually have a long history suggesting that many others may",
    "start": "790560",
    "end": "796959"
  },
  {
    "text": "have studied it in the past that makes it hard to find your own zero day but it's not an impossible task",
    "start": "796959",
    "end": "803120"
  },
  {
    "text": "though since apple keeps adding more new syscalls every year and syscalls aren't like iokit apis most",
    "start": "803120",
    "end": "809600"
  },
  {
    "text": "of them if not all of them don't require the caller to have certain entitlements",
    "start": "809600",
    "end": "814880"
  },
  {
    "text": "vulnerability of this type are valuable because often time they can be exploited from the safari sandbox",
    "start": "814880",
    "end": "820959"
  },
  {
    "text": "combine with webkit rce you can build a remote attacking chain and attending hacking events",
    "start": "820959",
    "end": "826959"
  },
  {
    "text": "while the second one it has a lot lesser value and does not sounds as cool as the first one",
    "start": "826959",
    "end": "832560"
  },
  {
    "text": "in this case you split one goal into multiple goals escalate privilege in new zealand and",
    "start": "832560",
    "end": "838320"
  },
  {
    "text": "attack kernel components that usually cannot be directly accessed to be frank all my jailbreaks are in",
    "start": "838320",
    "end": "844480"
  },
  {
    "text": "this scope soon after i'll explain why i do prefer finding bugs in this category",
    "start": "844480",
    "end": "850000"
  },
  {
    "text": "now back to the first type the more valuable one did i mention that most of the cases you",
    "start": "850000",
    "end": "855040"
  },
  {
    "text": "heard of are probably belong to this category that is right here is a list of them",
    "start": "855040",
    "end": "861760"
  },
  {
    "text": "many are used in public jailbreaks and have been thoroughly analyzed the write-ups are all public you can",
    "start": "861760",
    "end": "867760"
  },
  {
    "text": "search for them on google google project xero is really fulfilling their duty which is making zero day harder you can",
    "start": "867760",
    "end": "875040"
  },
  {
    "text": "get a long list of high risk vulnerabilities discovered by google project xero members",
    "start": "875040",
    "end": "880399"
  },
  {
    "text": "congratulation for them they not only working hard to discover new zero days but also very good at",
    "start": "880399",
    "end": "886079"
  },
  {
    "text": "collecting and analyzing samples they have done a number of investigations of zero-day exploits",
    "start": "886079",
    "end": "891839"
  },
  {
    "text": "being used in active attacks and all are published in their blog which is wonderful frankly speaking",
    "start": "891839",
    "end": "899199"
  },
  {
    "text": "the ios security community has grown so much compared to seven or eight years ago",
    "start": "899199",
    "end": "904639"
  },
  {
    "text": "we have got a lot more security researchers actively studying ios and every once a while we see a new",
    "start": "904639",
    "end": "911600"
  },
  {
    "text": "research article made public by someone or some company just like many other things in life when",
    "start": "911600",
    "end": "917760"
  },
  {
    "text": "you have more players join the game the competition inevitably will be more intense than ever",
    "start": "917760",
    "end": "924800"
  },
  {
    "text": "here is a list of different types of people or entities who may be interested in such a bug",
    "start": "924880",
    "end": "930160"
  },
  {
    "text": "you see you got other researchers who are sponsored by the company or individuals planning to participate in",
    "start": "930160",
    "end": "935680"
  },
  {
    "text": "hacking events it's getting popular more companies willing to organize such events nowadays",
    "start": "935680",
    "end": "941920"
  },
  {
    "text": "besides the well-known pwn to own then there are cyber arms dealers who are making fully functional offensive",
    "start": "941920",
    "end": "948399"
  },
  {
    "text": "products private acquisition companies from europe and israel well they may sound shady but they are",
    "start": "948399",
    "end": "955440"
  },
  {
    "text": "actually the best case you may encounter cause they don't do free giveaway that often after all and down to earth",
    "start": "955440",
    "end": "962399"
  },
  {
    "text": "what does independent researcher care about the most it may not just represent ios but also",
    "start": "962399",
    "end": "969279"
  },
  {
    "text": "other bug hunting fields at the end of the day after you got yourself some cves",
    "start": "969279",
    "end": "975279"
  },
  {
    "text": "if you decide to go full time these are what you care about the most",
    "start": "975279",
    "end": "980800"
  },
  {
    "text": "ios does contain many bugs but only a handful of them are exploitable the rest of them a researcher might able",
    "start": "980800",
    "end": "987519"
  },
  {
    "text": "to get a cve and credit on apple's website but almost certain that apple or other",
    "start": "987519",
    "end": "992560"
  },
  {
    "text": "bug bounty programs will not award the researcher for them because practically these bugs are not posing a real threat",
    "start": "992560",
    "end": "998160"
  },
  {
    "text": "to the user i think many researchers often stuck in here keep finding more bugs that are",
    "start": "998160",
    "end": "1003839"
  },
  {
    "text": "considered not exploitable speaking from my experience they got distracted by them",
    "start": "1003839",
    "end": "1009199"
  },
  {
    "text": "one of my talks goals is to give these people some inspiration to find their first exploitable ios bug",
    "start": "1009199",
    "end": "1015680"
  },
  {
    "text": "soon later i'll evaluate ios attacking surfaces in terms of exploitability",
    "start": "1015680",
    "end": "1021680"
  },
  {
    "text": "and i want to explain the terminology for newcomers what is bug collision it's simple it",
    "start": "1021680",
    "end": "1027120"
  },
  {
    "text": "means your bug has been discovered by someone else and he decided to report it or publish it earlier than you",
    "start": "1027120",
    "end": "1033678"
  },
  {
    "text": "this means much less return for your research in terms of profit and credit and that is if the research is still",
    "start": "1033679",
    "end": "1039839"
  },
  {
    "text": "worth some value now if you look back at the second type of the bug it doesn't look that mediocre",
    "start": "1039839",
    "end": "1046558"
  },
  {
    "text": "anymore isn't it after all it meets all your needs i have personally experienced a bug",
    "start": "1046559",
    "end": "1052640"
  },
  {
    "text": "collision a few times but never with bugs in this category it's almost surprising how long they",
    "start": "1052640",
    "end": "1058240"
  },
  {
    "text": "lasted all right and that is why i prefer to find such bugs and next i'll be focusing on analyzing",
    "start": "1058240",
    "end": "1065120"
  },
  {
    "text": "this category so in this category we are first looking for useless bugs instead of kernel ones",
    "start": "1065120",
    "end": "1071919"
  },
  {
    "text": "we need something that provides us the extra privilege and they must be useful to open up more kernel attack surface",
    "start": "1071919",
    "end": "1078799"
  },
  {
    "text": "back to the entitlements thing another side of the story is that ios is not perfect in reality it still has a",
    "start": "1078799",
    "end": "1086400"
  },
  {
    "text": "number of system processors that lack the necessary restrictions in place you can even see bad use internally",
    "start": "1086400",
    "end": "1094480"
  },
  {
    "text": "that is our ticket to get out of the app sandbox imperfections are opportunities in the bug hunting world",
    "start": "1094480",
    "end": "1101919"
  },
  {
    "text": "after sorted things out among the combination of all the different entitlements these four particular ones are standing",
    "start": "1101919",
    "end": "1108400"
  },
  {
    "text": "out a demon could have all of them or none of them we need to build a good filter it is",
    "start": "1108400",
    "end": "1113840"
  },
  {
    "text": "worth noting that the attacker can perform limited malicious operations without compromising the kernel",
    "start": "1113840",
    "end": "1119440"
  },
  {
    "text": "like such have access to the file system outside of the sandbox means the",
    "start": "1119440",
    "end": "1124559"
  },
  {
    "text": "attacker could read data across different applications if you can call functions like fork and",
    "start": "1124559",
    "end": "1130000"
  },
  {
    "text": "execute to run other binaries that opens up another attack surface in the userland there are binaries that",
    "start": "1130000",
    "end": "1136240"
  },
  {
    "text": "allow you to take over them by running them and the last two like its name the permission to access them",
    "start": "1136240",
    "end": "1143280"
  },
  {
    "text": "then i gotta mention that unfortunately everyone listed here is not as free as it sounds",
    "start": "1143280",
    "end": "1149120"
  },
  {
    "text": "here is another layer of limitations the root file system where almost all",
    "start": "1149120",
    "end": "1155120"
  },
  {
    "text": "the system files at doesn't allow anyone to write any files even you are not in the sandbox",
    "start": "1155120",
    "end": "1161039"
  },
  {
    "text": "it's another layer of security and technically on ios you need to have read and write access",
    "start": "1161039",
    "end": "1166799"
  },
  {
    "text": "to the kernel memory in order to patch it and for user and mac services and io kit",
    "start": "1166799",
    "end": "1171919"
  },
  {
    "text": "apis it's not rare to see they checking for special entitlements if you don't have it we can almost say",
    "start": "1171919",
    "end": "1178400"
  },
  {
    "text": "we don't have access to those services if you break down all the daemons and",
    "start": "1178400",
    "end": "1183919"
  },
  {
    "text": "classify them by comparing access to useln service and kernel apis the map will look a bit like this well",
    "start": "1183919",
    "end": "1191200"
  },
  {
    "text": "the two light green colors representing daemons that have free access to all kernel apis",
    "start": "1191200",
    "end": "1196799"
  },
  {
    "text": "which include all the i o kit drivers they are the ideal trampolines to reach the kernel",
    "start": "1196799",
    "end": "1202080"
  },
  {
    "text": "and then the dark green is the daemon that only has unrestricted access to uzland services",
    "start": "1202080",
    "end": "1207520"
  },
  {
    "text": "it has more contact surface with the two light green colours most of these light green demons we",
    "start": "1207520",
    "end": "1212799"
  },
  {
    "text": "cannot reach them within the sandbox and that is when the dark green comes in handy black and grey demons are not that",
    "start": "1212799",
    "end": "1219600"
  },
  {
    "text": "attractive especially when we haven't finished picking all the low-hanging fruits yet",
    "start": "1219600",
    "end": "1225760"
  },
  {
    "text": "so those greens are our targets i connected a and b together because they are only conceptually distinct",
    "start": "1225760",
    "end": "1232240"
  },
  {
    "text": "statistically speaking except for those demons that used seat belt profiles all daemons that have free access to",
    "start": "1232240",
    "end": "1238880"
  },
  {
    "text": "kernel apis also have free access to useln services so what about the ones that used seat",
    "start": "1238880",
    "end": "1244799"
  },
  {
    "text": "belt profiles i basically just rule out everything that has used them they are relatively more secure",
    "start": "1244799",
    "end": "1251200"
  },
  {
    "text": "especially with those who have personalized seat belt profiles all right now we have only two",
    "start": "1251200",
    "end": "1256799"
  },
  {
    "text": "interesting categories left a b and c we gonna give them new colors that indicate",
    "start": "1256799",
    "end": "1262000"
  },
  {
    "text": "the level of security risk okay all right so for the unsandboxed ones",
    "start": "1262000",
    "end": "1269200"
  },
  {
    "text": "baby blue and if they are directly accessible from within the app sandbox then we mark those as red because once",
    "start": "1269200",
    "end": "1276080"
  },
  {
    "text": "we take over one of these we are free of the sandbox it's that simple",
    "start": "1276080",
    "end": "1282320"
  },
  {
    "text": "moreover for the semis we use light ginger and pink if they are accessible from within the app sandbox",
    "start": "1282320",
    "end": "1288960"
  },
  {
    "text": "they are dangerous as well we can use them as a bridge to attack more a and b targets all right now it's time to see",
    "start": "1288960",
    "end": "1296400"
  },
  {
    "text": "some statistical data which intuitively reflects the continuous strengthening of the sandbox",
    "start": "1296400",
    "end": "1301679"
  },
  {
    "text": "i have collected such data from three different major versions",
    "start": "1301679",
    "end": "1306960"
  },
  {
    "text": "so the first one is ios 12.4.1 you can see the red area almost has a",
    "start": "1307200",
    "end": "1313600"
  },
  {
    "text": "size of walnut again soon as we take over one of them in the red area",
    "start": "1313600",
    "end": "1318960"
  },
  {
    "text": "we are out of sandbox completely and then it's just a matter of time until you find good bug in the kernel",
    "start": "1318960",
    "end": "1326960"
  },
  {
    "text": "let's put on another one and compare them both the total number of the service is",
    "start": "1328240",
    "end": "1333919"
  },
  {
    "text": "increasing as apple adding more features to the system ios 13 had some minor improvement but",
    "start": "1333919",
    "end": "1340320"
  },
  {
    "text": "nothing significant the red area still has the size of a walnut well if you compare it to the first",
    "start": "1340320",
    "end": "1346400"
  },
  {
    "text": "generation of ios which released 12 years ago at that time the entire circle was",
    "start": "1346400",
    "end": "1352159"
  },
  {
    "text": "filled up with red then yes ios 13 is much more secure but the fact is that none of these red",
    "start": "1352159",
    "end": "1358640"
  },
  {
    "text": "colors should be exist and they are the typical examples of lacking restrictions",
    "start": "1358640",
    "end": "1365200"
  },
  {
    "text": "and the fact that ios 13 has one less high risk targets was also because of external information",
    "start": "1365520",
    "end": "1371760"
  },
  {
    "text": "i have another sandbox escaping bug that was reported during the ios 12. apple eventually fixed it in ios 13.2",
    "start": "1371760",
    "end": "1380400"
  },
  {
    "text": "however they have sandboxed it when ios 13 came out that is why i stated that the sandboxing",
    "start": "1380400",
    "end": "1386320"
  },
  {
    "text": "is a powerful mitigation they don't need to understand the details of how a vulnerability works",
    "start": "1386320",
    "end": "1392000"
  },
  {
    "text": "before patching it despite that is a temporary patch it worked it cannot be used as a bridge to",
    "start": "1392000",
    "end": "1398159"
  },
  {
    "text": "attack kernel anymore i had to find another sandbox escaping bug to replace it",
    "start": "1398159",
    "end": "1403679"
  },
  {
    "text": "that didn't take too long i'll explain it after to add more sense this is a conceptual",
    "start": "1403679",
    "end": "1410559"
  },
  {
    "text": "diagram shows how a user invulnerability leads to kernel attack before ios 14.",
    "start": "1410559",
    "end": "1416320"
  },
  {
    "text": "you don't even care about the dark green targets let alone the black and grays",
    "start": "1416320",
    "end": "1422720"
  },
  {
    "text": "because apple didn't fix the overall sandbox problem i was able to quickly locate another",
    "start": "1422960",
    "end": "1428080"
  },
  {
    "text": "sandbox escaping bug with the target filter i built and continue jailbreak the latest ios 13",
    "start": "1428080",
    "end": "1434880"
  },
  {
    "text": "and something even more ironic is that apple has also failed to fix the kernel bug",
    "start": "1434880",
    "end": "1439919"
  },
  {
    "text": "i want to say something after experiencing through this apple is a slow responder and they have",
    "start": "1439919",
    "end": "1445440"
  },
  {
    "text": "failed to fix bugs in one go lack the ability to thoroughly investigate the issue and hence other",
    "start": "1445440",
    "end": "1450720"
  },
  {
    "text": "place may still expose to the same weakness apple also lets bug regressions happen i",
    "start": "1450720",
    "end": "1456400"
  },
  {
    "text": "have no idea how that happened that is outright internal threat apple is a big corporation",
    "start": "1456400",
    "end": "1462320"
  },
  {
    "text": "the internal management must be super complicated nevertheless maybe apple is not the best",
    "start": "1462320",
    "end": "1469200"
  },
  {
    "text": "active defensive player but still an excellent company i appreciate apple",
    "start": "1469200",
    "end": "1474240"
  },
  {
    "text": "there are just so many companies and not even caring about security vulnerabilities",
    "start": "1474240",
    "end": "1479279"
  },
  {
    "text": "i love apple we love apple ios 14 has made notable advancements in",
    "start": "1479279",
    "end": "1486000"
  },
  {
    "text": "the security of the sandbox apple has completely eliminated the red area and significantly reduced the size",
    "start": "1486000",
    "end": "1492640"
  },
  {
    "text": "of pink area by introducing a new entitlement for the first time",
    "start": "1492640",
    "end": "1497760"
  },
  {
    "text": "the amount of baby blue and ginger color starts to appear inconsistent",
    "start": "1497760",
    "end": "1503360"
  },
  {
    "text": "however that did not end the career of the sandbox escaping bugs yet this is a new diagram shows possible",
    "start": "1503919",
    "end": "1510559"
  },
  {
    "text": "routes to reach colonel through sandbox escaping bug on ios 14.",
    "start": "1510559",
    "end": "1516400"
  },
  {
    "text": "as long as baby blue's still there sandbox escaping isn't ended but for sure to do it on ios 14 is",
    "start": "1517039",
    "end": "1523600"
  },
  {
    "text": "more complicated now you need to put two or more useless bugs together i know it's feasible because i already",
    "start": "1523600",
    "end": "1530480"
  },
  {
    "text": "done it on ios 14. in the optimum case apple needs to",
    "start": "1530480",
    "end": "1536400"
  },
  {
    "text": "eliminate all colors however consider debugging capability maybe a few have to be excluded",
    "start": "1536400",
    "end": "1542480"
  },
  {
    "text": "and you should see something like this well now let's get back to ios 13.",
    "start": "1542480",
    "end": "1548880"
  },
  {
    "text": "since that's the topic of this talk i want to show you some negligence in the ios sandbox",
    "start": "1548880",
    "end": "1554640"
  },
  {
    "text": "some of them been fixed on ios 14 but definitely not all of them there are a variety of seemly sandbox",
    "start": "1554640",
    "end": "1561440"
  },
  {
    "text": "related entitlements being used to restrict demons i'm sure you have seen them if you have tried reverse engineering on ios",
    "start": "1561440",
    "end": "1570240"
  },
  {
    "text": "among all these options only a few have the actual effect on blocking access to kernel apis and useln services",
    "start": "1570240",
    "end": "1578880"
  },
  {
    "text": "the a blocks access to other apps data in the file system but it will not interfere with access to",
    "start": "1580640",
    "end": "1586400"
  },
  {
    "text": "the kernel and other userland mac services these targets are good for using as a bridge and then the b",
    "start": "1586400",
    "end": "1592720"
  },
  {
    "text": "is almost as if it's not there and the rest of the green options they don't work alone ironically you can",
    "start": "1592720",
    "end": "1599200"
  },
  {
    "text": "see a lot of misuse cases like this one i believe what apple wants is to",
    "start": "1599200",
    "end": "1604480"
  },
  {
    "text": "restrict its access only to a useless service that has been highlighted but in fact this demon has no sandbox at",
    "start": "1604480",
    "end": "1611679"
  },
  {
    "text": "all it's almost like a bluff it's so misleading to have that entitlement because it contains the word security",
    "start": "1611679",
    "end": "1619840"
  },
  {
    "text": "next part i'll talk about how did i build my target filter which leads to discovery of many useless bugs",
    "start": "1620159",
    "end": "1626720"
  },
  {
    "text": "so among all the light green targets there was 55 of them on ios 13.",
    "start": "1626720",
    "end": "1631919"
  },
  {
    "text": "i have applied other conditions for a better result and they were super effective and i thought it's interesting to share",
    "start": "1631919",
    "end": "1638159"
  },
  {
    "text": "with you guys what i was thinking so the first type of demons i would get",
    "start": "1638159",
    "end": "1643600"
  },
  {
    "text": "rid of is those who running as root in the scenario of sandbox escaping root",
    "start": "1643600",
    "end": "1648880"
  },
  {
    "text": "is quite worthless but reminds apple engineers to raise security awareness and attracts other researchers to come",
    "start": "1648880",
    "end": "1655279"
  },
  {
    "text": "over and finding bugs then the second type of demons i don't like is those who used nsx pc",
    "start": "1655279",
    "end": "1661679"
  },
  {
    "text": "instead of c style xpc library using nsx pc implies a fair amount of objective c",
    "start": "1661679",
    "end": "1667760"
  },
  {
    "text": "code was used if not all of it not using nsx pc doesn't mean there is no objective c",
    "start": "1667760",
    "end": "1673679"
  },
  {
    "text": "code but it is telling us that more or less c code also been used and if you have studied enough cases on",
    "start": "1673679",
    "end": "1680000"
  },
  {
    "text": "ios you will notice that most dangerous problems stick with the programming language c in its variant c",
    "start": "1680000",
    "end": "1686559"
  },
  {
    "text": "plus the same explanation goes to the question of why i skipped programs that are written by swift",
    "start": "1686559",
    "end": "1694240"
  },
  {
    "text": "after rule out the demons that met those conditions i got only three ideal targets left",
    "start": "1694559",
    "end": "1700080"
  },
  {
    "text": "and by the time i found out this the authentication broker agent and symptoms d was also used on mac os it was rather an",
    "start": "1700080",
    "end": "1708240"
  },
  {
    "text": "easy task to discover and exploit this bug since we have the unparalleled debugging capability on mac os",
    "start": "1708240",
    "end": "1714799"
  },
  {
    "text": "and then apple removed it from mac os after version 10.15 i was in that perfect time gap since",
    "start": "1714799",
    "end": "1721760"
  },
  {
    "text": "reverse engineering frameworks on ios is a big nuisance this bug probably gonna last really long if i didn't",
    "start": "1721760",
    "end": "1728399"
  },
  {
    "text": "report it so this is where the vulnerability located at long story short",
    "start": "1728399",
    "end": "1735679"
  },
  {
    "text": "objective c runtime is problematic and this issue is sort of like the classic format string problem in c",
    "start": "1735679",
    "end": "1741679"
  },
  {
    "text": "and c plus sometime the user can control the selector string that will later used for executing a objective c method",
    "start": "1741679",
    "end": "1750559"
  },
  {
    "text": "in most cases the attacker could pass the string dialic that will deallocate whatever",
    "start": "1751120",
    "end": "1756640"
  },
  {
    "text": "object has been called on which constitutes a use after free however that is not the case here because the",
    "start": "1756640",
    "end": "1763600"
  },
  {
    "text": "next function will inevitably crash the process and there was no time for us to spray data over the memory that gets released",
    "start": "1763600",
    "end": "1770960"
  },
  {
    "text": "especially when the symptoms d doesn't support asynchronous execution through xpc",
    "start": "1770960",
    "end": "1777600"
  },
  {
    "text": "so we gotta find other ways to exploit it i discovered a specific objective c method that we can control",
    "start": "1777760",
    "end": "1784080"
  },
  {
    "text": "the return value thus capable of turning it into a very reliable exploit the detail is boring let's speed up",
    "start": "1784080",
    "end": "1791360"
  },
  {
    "text": "little bit if you want to study more about it you should read my write-up that has been published on zetsop's website or my",
    "start": "1791360",
    "end": "1798000"
  },
  {
    "text": "white paper for this talk",
    "start": "1798000",
    "end": "1801279"
  },
  {
    "text": "and that was how this vulnerability being exploited and takeaway is the keyword perform selector and bunch of",
    "start": "1805200",
    "end": "1811039"
  },
  {
    "text": "similar stuff since the secret is now been revealed i'm gonna dropping zero days too",
    "start": "1811039",
    "end": "1818880"
  },
  {
    "text": "the first one was good before ios 13. now is being sandboxed make it worthless",
    "start": "1820240",
    "end": "1827840"
  },
  {
    "text": "the second one is possible to be triggered from the file the file is located under one of the system frameworks",
    "start": "1827840",
    "end": "1834159"
  },
  {
    "text": "since the root file system on ios remains red only before you reach the kernel this one cannot be used for jailbreak",
    "start": "1834159",
    "end": "1841520"
  },
  {
    "text": "all right that was the end of the useland exploitation after we break out of the sandbox",
    "start": "1841520",
    "end": "1847120"
  },
  {
    "text": "we will then attacking the weak part of the kernel the apple video encoder is a graphics i",
    "start": "1847120",
    "end": "1853279"
  },
  {
    "text": "o kit driver that runs in kernel space and exists only on ios and just like many other ios exclusive drivers",
    "start": "1853279",
    "end": "1860399"
  },
  {
    "text": "it's not open source and most of the symbols have been removed and it cannot be accessed from the app",
    "start": "1860399",
    "end": "1866000"
  },
  {
    "text": "sandbox also back in 2017 the same driver has been exploited badly and apple did gave",
    "start": "1866000",
    "end": "1873039"
  },
  {
    "text": "it a complete makeover after ios 14. here is the external methods of this",
    "start": "1873039",
    "end": "1879440"
  },
  {
    "text": "driver we mainly use method at index 7 to encode a client buff it basically means to load many io",
    "start": "1879440",
    "end": "1885919"
  },
  {
    "text": "surfaces object through ids provided from the user end and then calling method at index 6 to",
    "start": "1885919",
    "end": "1891519"
  },
  {
    "text": "trigger multiple security flaws located inside the highlighted function",
    "start": "1891519",
    "end": "1897279"
  },
  {
    "text": "and then this map shows the relationship between involved objects and structures",
    "start": "1897440",
    "end": "1907039"
  },
  {
    "text": "then i put all the structures together and formed another map that clearly shows the connections between them",
    "start": "1907039",
    "end": "1913840"
  },
  {
    "text": "unfortunately apple didn't patch it well back in 2017 and this phenomenon is also seen in",
    "start": "1914640",
    "end": "1920640"
  },
  {
    "text": "other drivers apple has not paid enough attention to drivers that require sandbox escape to",
    "start": "1920640",
    "end": "1925840"
  },
  {
    "text": "access the detail of this exploit has made public you can find them online",
    "start": "1925840",
    "end": "1931600"
  },
  {
    "text": "all right now let's look at the next one this is my second time exploiting the",
    "start": "1931600",
    "end": "1938000"
  },
  {
    "text": "same graphics driver this time is way more complex let's take a look at the workflow",
    "start": "1938000",
    "end": "1948640"
  },
  {
    "text": "you will notice that i will mention this variable here multiple times throughout the explanation",
    "start": "1948640",
    "end": "1955120"
  },
  {
    "text": "this variable which i call it mapping from user is kernel variable contains the address of a memory mapping across",
    "start": "1956960",
    "end": "1962480"
  },
  {
    "text": "userpandan kernel both sides can read and write this memory simultaneously",
    "start": "1962480",
    "end": "1967679"
  },
  {
    "text": "which brings up the racecondition problem by taking the advantage of the memory race condition",
    "start": "1967679",
    "end": "1973360"
  },
  {
    "text": "we can build some gadgets that will handy later",
    "start": "1973360",
    "end": "1977840"
  },
  {
    "text": "and these are the three gadgets",
    "start": "1978960",
    "end": "1982398"
  },
  {
    "text": "now we can proceed to achieve the key step which is to leak the memory mapping address but in kernel space",
    "start": "1984080",
    "end": "1990320"
  },
  {
    "text": "i initially thought it was impossible but somehow i did it and it was really magical since we can",
    "start": "1990320",
    "end": "1996320"
  },
  {
    "text": "allocate and leak kernel 40 bytes memory through one of the gadgets we can try something like this",
    "start": "1996320",
    "end": "2003760"
  },
  {
    "text": "we keep leaking more memory addresses then collect two of them",
    "start": "2003760",
    "end": "2010720"
  },
  {
    "text": "and then allocate a new one now release all of them since an os data instance is also 40",
    "start": "2010720",
    "end": "2016880"
  },
  {
    "text": "bytes long it's possible that it fell into one of the blocks we just released the difficult part is how do we know if",
    "start": "2016880",
    "end": "2023440"
  },
  {
    "text": "that happens and which address exactly cause if we guessed it wrong the panic will happen",
    "start": "2023440",
    "end": "2030159"
  },
  {
    "text": "we can predict if that will happen by using following strategies by the end we will have 10 addresses",
    "start": "2030159",
    "end": "2035519"
  },
  {
    "text": "saved i discovered two simple patterns that is giving out information we want",
    "start": "2035519",
    "end": "2041759"
  },
  {
    "text": "this is the first pattern",
    "start": "2042320",
    "end": "2047840"
  },
  {
    "text": "and there is the second pattern",
    "start": "2048240",
    "end": "2051679"
  },
  {
    "text": "these two patterns will tell us the exact address of an os data instance",
    "start": "2054399",
    "end": "2061520"
  },
  {
    "text": "so now we have an os data instance with a known kernel address next step is to overwrite the data",
    "start": "2061520",
    "end": "2067520"
  },
  {
    "text": "pointer from the help of another gadget then we can read the following structure",
    "start": "2067520",
    "end": "2074240"
  },
  {
    "text": "through the os data instance this structure contains the target variable however",
    "start": "2074240",
    "end": "2080000"
  },
  {
    "text": "very unfortunate the one we leaked is empty",
    "start": "2080000",
    "end": "2084638"
  },
  {
    "text": "it's so tired and unnecessary to explain the logic here since i have every steps written in the",
    "start": "2085040",
    "end": "2090320"
  },
  {
    "text": "white paper so let's skip some steps and just get to the point",
    "start": "2090320",
    "end": "2095839"
  },
  {
    "text": "basically after we leaked the variable mapping from user we now have the power to read and write",
    "start": "2096000",
    "end": "2101359"
  },
  {
    "text": "any kernel memory data but it's not perfect yet",
    "start": "2101359",
    "end": "2106720"
  },
  {
    "text": "it has side effects for this reason i have to locate another primitive for reading memory",
    "start": "2106720",
    "end": "2112240"
  },
  {
    "text": "it's a lot reverse engineering work at the end i found it a new memory red",
    "start": "2112240",
    "end": "2118720"
  },
  {
    "text": "primitive that is not based on race condition then we read out our task structure",
    "start": "2118720",
    "end": "2124000"
  },
  {
    "text": "insert a fake task for pid0 port using the temporary memory write primitive that is it we are done",
    "start": "2124000",
    "end": "2132000"
  },
  {
    "text": "then i reported to apple during ios 13. apple fixed it by destroying the read",
    "start": "2132000",
    "end": "2137119"
  },
  {
    "text": "and write primitive i was using well they didn't fix it thoroughly i guess part of the reason is that they",
    "start": "2137119",
    "end": "2143359"
  },
  {
    "text": "were reprogramming the driver on ios 14. besides that apple also fixed a critical",
    "start": "2143359",
    "end": "2150079"
  },
  {
    "text": "part of building a fake task for pid0 port which means now you have to develop custom kernel read and write primitive",
    "start": "2150079",
    "end": "2156800"
  },
  {
    "text": "before injecting tfp0 next this diagram shows that part of the",
    "start": "2156800",
    "end": "2164000"
  },
  {
    "text": "workflow has been patched on 13.6 then the diagram on the right shows the",
    "start": "2164000",
    "end": "2169119"
  },
  {
    "text": "new steps to achieve custom kernel read and write it's actually kinda silly it's the same",
    "start": "2169119",
    "end": "2176000"
  },
  {
    "text": "function that apple has tried to patch still giving us the power to read memory and empty any one byte long memory",
    "start": "2176000",
    "end": "2184320"
  },
  {
    "text": "i have mentioned this from the very beginning that all client biff's forming a double linked list",
    "start": "2184320",
    "end": "2189359"
  },
  {
    "text": "so i leverage the writing gadget to set two lower bits of the linking pointer to zero it then points back to a memory that we",
    "start": "2189359",
    "end": "2196079"
  },
  {
    "text": "have complete control over it turns out to be completely",
    "start": "2196079",
    "end": "2201200"
  },
  {
    "text": "exploitable we can set up a fake client boof and looking for new ways to read and write kernel memory",
    "start": "2201200",
    "end": "2208560"
  },
  {
    "text": "without rely on tfp 0 we can reuse the previously mentioned stable read primitive",
    "start": "2208560",
    "end": "2214400"
  },
  {
    "text": "and it didn't take too long for me to find another memory right primitive because client buff is a huge structure",
    "start": "2214400",
    "end": "2221119"
  },
  {
    "text": "lots of code was used so this is the new memory right",
    "start": "2221119",
    "end": "2226839"
  },
  {
    "text": "primitive we can then build tfp0 again and then it's all the same after that",
    "start": "2226839",
    "end": "2235119"
  },
  {
    "text": "so pretty much that's the end if you have anything i want to say just contact me through the email",
    "start": "2236320",
    "end": "2243839"
  }
]