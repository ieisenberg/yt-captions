[
  {
    "text": "Welcome to our talk where today we are going to talk about how Lazarus group are targeting specific individuals and",
    "start": "2560",
    "end": "10360"
  },
  {
    "text": "how attackers were exploiting a zero day vulnerability to gain read write Primitives to effectively blind",
    "start": "10360",
    "end": "19240"
  },
  {
    "text": "security vendors and security features uh my name is Lino kastra and I'm a",
    "start": "19240",
    "end": "24680"
  },
  {
    "text": "senior mod researcher at gen digital focusing on analyzing and hunting AP and",
    "start": "24680",
    "end": "30640"
  },
  {
    "text": "various complex attacks and on This research work with me yanek who is also",
    "start": "30640",
    "end": "36640"
  },
  {
    "text": "Senor Mal researcher hello everyone my name is seor morg and I'm a senior Mal",
    "start": "36640",
    "end": "42160"
  },
  {
    "text": "researcher for Gen digital thank you so we first start uh",
    "start": "42160",
    "end": "48480"
  },
  {
    "text": "with a quick introduction uh about previous research regarding to Lazarus group how targeting specific individuals",
    "start": "48480",
    "end": "56239"
  },
  {
    "text": "followed by attack chain analysis we're going to describe each stage of the attack chain and my colleague will tell",
    "start": "56239",
    "end": "63320"
  },
  {
    "text": "you more about zero day vulnerability and also how uh with the root kit",
    "start": "63320",
    "end": "69200"
  },
  {
    "text": "capabilities there were blinding uh Security Solutions and uh security",
    "start": "69200",
    "end": "74560"
  },
  {
    "text": "features as you already heard about this Lazarus group that were targeting",
    "start": "74560",
    "end": "80159"
  },
  {
    "text": "specific individuals via fabricated job offer as you can see on the slides here there are already various research about",
    "start": "80159",
    "end": "86240"
  },
  {
    "text": "this topic and all they all day they have the same",
    "start": "86240",
    "end": "91920"
  },
  {
    "text": "common infection vector and that is through a fabricated job offer where in",
    "start": "91920",
    "end": "98000"
  },
  {
    "text": "our case uh was the same where the attacker uh initiated attack Again by",
    "start": "98000",
    "end": "104200"
  },
  {
    "text": "presenting a fabricated job offer where they used various communication platform like LinkedIn WhatsApp or",
    "start": "104200",
    "end": "113040"
  },
  {
    "text": "emails but uh the the victim has to first to show uh some skill so",
    "start": "113320",
    "end": "120439"
  },
  {
    "text": "what is the best way to so to to show your skills and that is through a challenge so this challenge was sent by",
    "start": "120439",
    "end": "128239"
  },
  {
    "text": "the attacker to the victim and it was forc a victim to mount this uh isop file",
    "start": "128239",
    "end": "135080"
  },
  {
    "text": "and execute Amazon VNC which which uh executes the malicious dll and",
    "start": "135080",
    "end": "142480"
  },
  {
    "text": "this malicious DL is going to executes the payload and this payload is going to",
    "start": "142480",
    "end": "148440"
  },
  {
    "text": "communicate with the website which was utilized by the lazaros group as a CNC",
    "start": "148440",
    "end": "153959"
  },
  {
    "text": "server to download and execute a shell code in the",
    "start": "153959",
    "end": "159360"
  },
  {
    "text": "memory unfortunately we couldn't obtain this Shell Code but thanks to a really",
    "start": "159360",
    "end": "164640"
  },
  {
    "text": "good Telemetry alongside this Shell Code executed the memory we found two files",
    "start": "164640",
    "end": "171920"
  },
  {
    "text": "one rolling loader another one is analys file um the main idea of this sh code is",
    "start": "171920",
    "end": "179840"
  },
  {
    "text": "is actually to achieve the persistence by uh registering a r fling loader as a",
    "start": "179840",
    "end": "186400"
  },
  {
    "text": "service and then the rling loader is a actually kickstar of the whole execution",
    "start": "186400",
    "end": "192519"
  },
  {
    "text": "chain which needs to first it's which which his main idea is actually load and",
    "start": "192519",
    "end": "198840"
  },
  {
    "text": "execute the next stage which is a Ros link but in order to get there uh he needs to First obtain AAR Key by calling",
    "start": "198840",
    "end": "207120"
  },
  {
    "text": "uh get system F table and after this call uh you get the 30 by Long Key which",
    "start": "207120",
    "end": "213959"
  },
  {
    "text": "helps you to sore the NLS file uh this anls file is basically",
    "start": "213959",
    "end": "220680"
  },
  {
    "text": "encrypted roll link and after decryption uh the rosling is the rling",
    "start": "220680",
    "end": "228720"
  },
  {
    "text": "is now has everything and can uh load a roll link uh in the memory but",
    "start": "228720",
    "end": "235720"
  },
  {
    "text": "before going to the analysis of the Ros link I would like to also show you that",
    "start": "235720",
    "end": "241000"
  },
  {
    "text": "uh this sample was already discussed by the Microsoft research where they shared a research where the",
    "start": "241000",
    "end": "248079"
  },
  {
    "text": "multiple Korean tractors was was exploiting uh vulnerability in the team",
    "start": "248079",
    "end": "253760"
  },
  {
    "text": "City and as you can see on the slides here by in the left there is a Microsoft",
    "start": "253760",
    "end": "260199"
  },
  {
    "text": "sample and on the right there is our sample that uh we found in the victim",
    "start": "260199",
    "end": "265800"
  },
  {
    "text": "machine and as you can see there is a pretty strong code overlay lab between those two uh samples so let's go back to",
    "start": "265800",
    "end": "274000"
  },
  {
    "text": "the analysis the of the rlink so first of all uh the Ros link has again is",
    "start": "274000",
    "end": "280240"
  },
  {
    "text": "another loader so his idea is load and execute the next",
    "start": "280240",
    "end": "286199"
  },
  {
    "text": "stage this uh rlink first of all needs to locate the binary blob this binary",
    "start": "286199",
    "end": "292360"
  },
  {
    "text": "blob holds another stage which is R meet and also through encrypted uh module",
    "start": "292360",
    "end": "300199"
  },
  {
    "text": "one module is a network module and other one is a part of the rad module which I will talk later and also the encrypted",
    "start": "300199",
    "end": "307400"
  },
  {
    "text": "configuration data and this binary blob uh is also very important to say that it was",
    "start": "307400",
    "end": "313360"
  },
  {
    "text": "located uh without any file extension so uh rosling has to locate",
    "start": "313360",
    "end": "319600"
  },
  {
    "text": "this binary and what's the Bas uh what's what's the way how the rosling was locating this binary blob is that it was",
    "start": "319600",
    "end": "326280"
  },
  {
    "text": "inating the folder and it was looking for a a file which has a first four bytes this",
    "start": "326280",
    "end": "333880"
  },
  {
    "text": "four bytes was indicating the size of the how much data should be read from",
    "start": "333880",
    "end": "339520"
  },
  {
    "text": "the binary blob and extract uh to the into memory and uh then it was it was",
    "start": "339520",
    "end": "347000"
  },
  {
    "text": "starting to search for a start action uh in this data so as you can see the after",
    "start": "347000",
    "end": "354759"
  },
  {
    "text": "all these conditions are met so they they found uh the rling found a start action",
    "start": "354759",
    "end": "360520"
  },
  {
    "text": "uh in the export export function uh it is now pretty confident to load the r me",
    "start": "360520",
    "end": "367479"
  },
  {
    "text": "uh in the memory as you can see on the slides here another loader so and uh",
    "start": "367479",
    "end": "376199"
  },
  {
    "text": "again a r me does in order to load and execute another stage it needs to",
    "start": "376199",
    "end": "382199"
  },
  {
    "text": "communicate not with one or two but three different CNC servers so and in",
    "start": "382199",
    "end": "389280"
  },
  {
    "text": "order to communicate with all of them three it use different export function",
    "start": "389280",
    "end": "394319"
  },
  {
    "text": "from the network module binary which the r me will extract from the binary blob",
    "start": "394319",
    "end": "400080"
  },
  {
    "text": "so after this is done and uh I forget of course it needs to also pass the address",
    "start": "400080",
    "end": "405759"
  },
  {
    "text": "of the CNC server uh from the binary blob in order to communicate first with the first CNC",
    "start": "405759",
    "end": "411800"
  },
  {
    "text": "server so after the communication with the first C server you will retrieve the",
    "start": "411800",
    "end": "417400"
  },
  {
    "text": "HTML file uh from the HTML file it will extract the uh address to the second CNC server",
    "start": "417400",
    "end": "423879"
  },
  {
    "text": "and from the second CNC server we will retrieve the PNG file where thanks to the stenography it will extract the",
    "start": "423879",
    "end": "431479"
  },
  {
    "text": "address of the thre CNC server and the last communication is the with the thir CNC server well uh the",
    "start": "431479",
    "end": "439319"
  },
  {
    "text": "third CNC server will retrieve the data blob again this data blob has uh",
    "start": "439319",
    "end": "447199"
  },
  {
    "text": "contains configuration data for the next stage but also contains the data uh to",
    "start": "447199",
    "end": "452919"
  },
  {
    "text": "be able to create a c rat so the r meet",
    "start": "452919",
    "end": "458400"
  },
  {
    "text": "needs to extract part of the cing rat from the binary blob and part of the cing Rat will receive from the D will",
    "start": "458400",
    "end": "466159"
  },
  {
    "text": "will will will be in the data blob so after this it will open it together and it will create a colon red which will be",
    "start": "466159",
    "end": "473560"
  },
  {
    "text": "loaded and executed in the memory and this calr in in order to",
    "start": "473560",
    "end": "480159"
  },
  {
    "text": "communicate with the CNC server it needs to again uh load uh network module",
    "start": "480159",
    "end": "486680"
  },
  {
    "text": "because thanks to the network module it has uh API functions in order to",
    "start": "486680",
    "end": "491879"
  },
  {
    "text": "communicate with the CNC server where the all uh uh communication with the TNC server",
    "start": "491879",
    "end": "499759"
  },
  {
    "text": "is encrypted with as algorithm and this is a custom rat so it was developed by",
    "start": "499759",
    "end": "505280"
  },
  {
    "text": "the by the Lazarus group with the file compression capabilities uh ability to",
    "start": "505280",
    "end": "510319"
  },
  {
    "text": "upload file to a CNC server change files last FR time stamp but most important",
    "start": "510319",
    "end": "516880"
  },
  {
    "text": "functionality of this uh Rat is able to download the D file from the CNC server",
    "start": "516880",
    "end": "522440"
  },
  {
    "text": "and loading in the memory which means that in this case we are high high",
    "start": "522440",
    "end": "527680"
  },
  {
    "text": "confident that uh it was loading the exploit uh to gain read write Primitives",
    "start": "527680",
    "end": "533880"
  },
  {
    "text": "and also uh to thanks to the exploit um it will also load the the f module where",
    "start": "533880",
    "end": "540440"
  },
  {
    "text": "it was binding uh security vendors and security features and now my my colleague will tell you more about the",
    "start": "540440",
    "end": "548920"
  },
  {
    "text": "exploit okay so before we uh before we dig into the internal of fud module",
    "start": "550240",
    "end": "556760"
  },
  {
    "text": "let's quickly recap uh why threat actors are even interested in uh getting kernal",
    "start": "556760",
    "end": "562600"
  },
  {
    "text": "level access and why in many cases to achieve that they use vulnerable drivers",
    "start": "562600",
    "end": "567839"
  },
  {
    "text": "so from an attacker perspective Crossing from admin to Kel opens the whole new world of opportunities it",
    "start": "567839",
    "end": "574560"
  },
  {
    "text": "becomes possible to disrupt security software and hide indicators of",
    "start": "574560",
    "end": "580160"
  },
  {
    "text": "infection such as files processes and network activity it also uh becomes",
    "start": "580160",
    "end": "585880"
  },
  {
    "text": "possible to disable uh kernel mode Telemetry and turn of different",
    "start": "585880",
    "end": "591880"
  },
  {
    "text": "mitigations so even though Microsoft do not consider admin to Kernel a security",
    "start": "591880",
    "end": "597279"
  },
  {
    "text": "boundary they have made a significant progress over the years in hardening this boundary uh with the introduction of",
    "start": "597279",
    "end": "604519"
  },
  {
    "text": "mitigations such as driver signature enforcement and the HCI it became very",
    "start": "604519",
    "end": "610880"
  },
  {
    "text": "difficult to run your own custom code in kernel so um uh attackers are being",
    "start": "610880",
    "end": "616600"
  },
  {
    "text": "forced to uh to use data only attacks so what uh how can we solve this one of the",
    "start": "616600",
    "end": "625279"
  },
  {
    "text": "ways would be actually sign your own malicious driver and we definitely see this kind of drivers in the wild uh but",
    "start": "625279",
    "end": "631959"
  },
  {
    "text": "uh these kind of drivers can be detected during the verification process of the",
    "start": "631959",
    "end": "637240"
  },
  {
    "text": "uh when signing the driver so another way would be to actually abuse the vulnerable drivers and uh this is the",
    "start": "637240",
    "end": "644440"
  },
  {
    "text": "technique we are going to discuss today uh we can roughly divide this",
    "start": "644440",
    "end": "649839"
  },
  {
    "text": "technique into three categories so the first one would be and they bring your own vulnerable driver so this one is the",
    "start": "649839",
    "end": "656760"
  },
  {
    "text": "easiest one to pull off uh because there are plent PL of well-known vulnerable drivers available for everyone to",
    "start": "656760",
    "end": "662600"
  },
  {
    "text": "exploit and we have seen Lazarus exploiting this kind of drivers in",
    "start": "662600",
    "end": "668240"
  },
  {
    "text": "previous campaigns more specifically drivers like DB and I uh but on the",
    "start": "668240",
    "end": "674440"
  },
  {
    "text": "other hand uh this is the most straightforward to detect because to load the driver you have to first drop",
    "start": "674440",
    "end": "680440"
  },
  {
    "text": "it on dis and uh uh Microsoft and other security vendors usually have their own",
    "start": "680440",
    "end": "685600"
  },
  {
    "text": "uh blocklists of well-known vulnerable drivers another technique would be uh",
    "start": "685600",
    "end": "691680"
  },
  {
    "text": "zero day uh bring your own vulnerable driver and this is much stealthier than the previous one but it requires an",
    "start": "691680",
    "end": "699320"
  },
  {
    "text": "attacker first to discover the zero day vulnerability in one of the already signed drivers but from the researches we can",
    "start": "699320",
    "end": "706920"
  },
  {
    "text": "see uh it is not such a difficult task to accomplish uh it can also be detected",
    "start": "706920",
    "end": "712920"
  },
  {
    "text": "in theory because loading some third party uh drivers uh can generate",
    "start": "712920",
    "end": "718120"
  },
  {
    "text": "suspicious events in ADR or Etc uh the best option would definitely be a zero",
    "start": "718120",
    "end": "724639"
  },
  {
    "text": "day in the oos itself uh when you can uh abuse the one of the built-in Windows",
    "start": "724639",
    "end": "730079"
  },
  {
    "text": "drivers this one is the most difficult one to achieve because uh finding Zer",
    "start": "730079",
    "end": "735360"
  },
  {
    "text": "day vulnerability in one of the windows components is uh uh is much more",
    "start": "735360",
    "end": "741240"
  },
  {
    "text": "difficult uh it is the attack surface is much reduced comparing to the previous",
    "start": "741240",
    "end": "746600"
  },
  {
    "text": "technique and uh uh the quality code quality is uh higher um comparing to the",
    "start": "746600",
    "end": "754680"
  },
  {
    "text": "third party vendors but this technique provides the the best level of stealth and this is the technique that Lazarus",
    "start": "754680",
    "end": "760800"
  },
  {
    "text": "used in this campaign so when analizing malware from",
    "start": "760800",
    "end": "766800"
  },
  {
    "text": "one of our victims our colleague Yan vek discovered that this the one of the",
    "start": "766800",
    "end": "772440"
  },
  {
    "text": "samples was exploiting zero day vulnerability in one of the windows components we have successfully",
    "start": "772440",
    "end": "779279"
  },
  {
    "text": "submitted this vulnerability to Microsoft and uh received this CV for",
    "start": "779279",
    "end": "785320"
  },
  {
    "text": "the vulnerability um more specifically the uh vulnerability resides in ictal",
    "start": "785320",
    "end": "791519"
  },
  {
    "text": "dispatcher of ID driver which is a part of app Locker uh feature of windows so",
    "start": "791519",
    "end": "799360"
  },
  {
    "text": "to exploit this vulnerability an an attacker has to send specifically specifically crafted ioctl to this",
    "start": "799360",
    "end": "806560"
  },
  {
    "text": "driver and uh by doing so it is going to uh get uh ability to run arbitary kernel",
    "start": "806560",
    "end": "814560"
  },
  {
    "text": "functions uh an attacker also has a partial control over the first argument of this function there are some",
    "start": "814560",
    "end": "820800"
  },
  {
    "text": "limitations also uh for instance map prevents you from calling a user mode code and K CFG requires an valid Target",
    "start": "820800",
    "end": "829399"
  },
  {
    "text": "so uh an attacker has to work a bit harder and the ictal itself is um",
    "start": "829399",
    "end": "835519"
  },
  {
    "text": "exposed through this specific device and to to send ictal and user has to have",
    "start": "835519",
    "end": "841560"
  },
  {
    "text": "right access to this device and um to have right access it should be uh",
    "start": "841560",
    "end": "846639"
  },
  {
    "text": "running as a local service let's see how they actually exploited this vulnerability uh before",
    "start": "846639",
    "end": "853600"
  },
  {
    "text": "they start they uh make sure that the driver is loaded they do it by uh",
    "start": "853600",
    "end": "859680"
  },
  {
    "text": "writing a specific event to an app Locker etw provider then they wait sometime for the allowing the driver to",
    "start": "859680",
    "end": "868079"
  },
  {
    "text": "actually load after that they impersonate the local service account uh",
    "start": "868079",
    "end": "873360"
  },
  {
    "text": "to gain the right access to this uh uh device and um the next stage would be",
    "start": "873360",
    "end": "879759"
  },
  {
    "text": "actually to exploit this vulnerability to gain a right primitive and using this",
    "start": "879759",
    "end": "884800"
  },
  {
    "text": "right primitive they are going to uh change the previous mode of the current thread so by doing so they uh",
    "start": "884800",
    "end": "891519"
  },
  {
    "text": "effectively make it appear that the calls are coming from uh kernel modes",
    "start": "891519",
    "end": "896839"
  },
  {
    "text": "and uh they are able to read and right arbitrary kernel uh memory using anti WR",
    "start": "896839",
    "end": "904199"
  },
  {
    "text": "virtual memory function Microsoft addressed this vulnerability by introduction of EX get previous mode",
    "start": "904199",
    "end": "911959"
  },
  {
    "text": "check in the uh ictal dispatcher so F module it is a data only",
    "start": "911959",
    "end": "919160"
  },
  {
    "text": "rootkit it is operating entirely from user space uh the first version of fud",
    "start": "919160",
    "end": "925120"
  },
  {
    "text": "module was independently discovered by nlab and uh is said researches and published in",
    "start": "925120",
    "end": "931720"
  },
  {
    "text": "2022 uh so the first version was uh using uh bring your own vulnerable",
    "start": "931720",
    "end": "937279"
  },
  {
    "text": "driver exploit and was implementing uh seven different uh data only rootkit",
    "start": "937279",
    "end": "943639"
  },
  {
    "text": "techniques the new version is armed with a zero day exploit and is implementing",
    "start": "943639",
    "end": "949920"
  },
  {
    "text": "nine different uh kernel object manipulation techniques so these are the techniques we are going to discuss now",
    "start": "949920",
    "end": "957000"
  },
  {
    "text": "so the first technique is targeting registry callbacks so these callbacks allow drivers to Monitor and respond to",
    "start": "957000",
    "end": "963399"
  },
  {
    "text": "changes in the registry and can be registered using CM registered callback uh function so manipulation technique",
    "start": "963399",
    "end": "971279"
  },
  {
    "text": "starts by resolving CM unregistered callback function which is an export of n kernel module uh then it's going to",
    "start": "971279",
    "end": "978560"
  },
  {
    "text": "scan the function for this specific instruction which is loading an address of a callback list head uh which is um U",
    "start": "978560",
    "end": "987279"
  },
  {
    "text": "pointing to a an link list of cmre callback structs by uh going over this",
    "start": "987279",
    "end": "994639"
  },
  {
    "text": "link list it is going to check where the Callback function resides and Skip all the Whit listed modules uh all of the",
    "start": "994639",
    "end": "1002519"
  },
  {
    "text": "rest of the functions are going to be uh resp replaced with ob is Kernel handle",
    "start": "1002519",
    "end": "1009199"
  },
  {
    "text": "and uh unlink from the list entirely the second technique is targeting uh object callbacks and this",
    "start": "1009199",
    "end": "1017120"
  },
  {
    "text": "technique has not changed since the previous version but let's see how it works the objects uh object callbacks uh",
    "start": "1017120",
    "end": "1023920"
  },
  {
    "text": "are meant to for monitoring and responding to thread process and desktop handle operations this uh callback can",
    "start": "1023920",
    "end": "1031480"
  },
  {
    "text": "be registered using OB register callback function and the technique starts by",
    "start": "1031480",
    "end": "1037319"
  },
  {
    "text": "resolving of the of the OB get object type function which is an export of NTI",
    "start": "1037319",
    "end": "1043199"
  },
  {
    "text": "uh o kernel uh module then it is going to look for OB",
    "start": "1043199",
    "end": "1049039"
  },
  {
    "text": "type index uh index table uh inside this function and uh it is pointing to an",
    "start": "1049039",
    "end": "1054760"
  },
  {
    "text": "array of pointers to uh object type structures so each such struct",
    "start": "1054760",
    "end": "1060640"
  },
  {
    "text": "represents an different uh system system object type and by going over the uh",
    "start": "1060640",
    "end": "1068039"
  },
  {
    "text": "callback list uh it is possible or fud module can neutralize the callbacks by",
    "start": "1068039",
    "end": "1073960"
  },
  {
    "text": "pointing their forward and backward pointers to itself",
    "start": "1073960",
    "end": "1079440"
  },
  {
    "text": "uh another technique is dealing with the process threat and image callbacks these callbacks are pretty important they",
    "start": "1079720",
    "end": "1087080"
  },
  {
    "text": "allow drivers to run the custom code in respon to uh processes and threads being",
    "start": "1087080",
    "end": "1092799"
  },
  {
    "text": "created and the images being loaded such as DLS loaded by processes so these",
    "start": "1092799",
    "end": "1098520"
  },
  {
    "text": "callbacks can be registered using the following functions and uh these",
    "start": "1098520",
    "end": "1103880"
  },
  {
    "text": "callbacks are often used by uh by edrs um so the technique starts by",
    "start": "1103880",
    "end": "1110480"
  },
  {
    "text": "resolving all of the necessary um structures and uh initially it is",
    "start": "1110480",
    "end": "1115760"
  },
  {
    "text": "clearing out the PSP notify enable mask this is already going to uh to disable",
    "start": "1115760",
    "end": "1123200"
  },
  {
    "text": "the callbacks but it doesn't stop there it is going to create a new uh array",
    "start": "1123200",
    "end": "1130159"
  },
  {
    "text": "that is going to contain only uh only callbacks from the white listed modules",
    "start": "1130159",
    "end": "1135400"
  },
  {
    "text": "So eventually it is going to replace the uh original array with the array that",
    "start": "1135400",
    "end": "1140919"
  },
  {
    "text": "contains only the white listed callbacks uh in the end it is going to revert the",
    "start": "1140919",
    "end": "1147799"
  },
  {
    "text": "uh value of PSP notify enable mask so file system mini filters is a",
    "start": "1147799",
    "end": "1155039"
  },
  {
    "text": "mechanism for drivers to intercept file system operations it can be used in a variety",
    "start": "1155039",
    "end": "1161400"
  },
  {
    "text": "of this different scenarios including uh compression encryption and Antivirus",
    "start": "1161400",
    "end": "1167280"
  },
  {
    "text": "scanning so in the early version of fud module it was patching the U filter",
    "start": "1167280",
    "end": "1174720"
  },
  {
    "text": "functions directly which is not possible anymore with the presence of HCI so they had to reimplement this technique from",
    "start": "1174720",
    "end": "1181440"
  },
  {
    "text": "scratch uh so they start by resolving FLT Global uh structure which is",
    "start": "1181440",
    "end": "1187600"
  },
  {
    "text": "pointing to frame list uh it is a linked list of um fltp frame structs each such",
    "start": "1187600",
    "end": "1195240"
  },
  {
    "text": "such struct represents a single uh fil manager frame so by following attached",
    "start": "1195240",
    "end": "1202320"
  },
  {
    "text": "volumes list uh we get to the list of Ft volumes uh each such struct is a",
    "start": "1202320",
    "end": "1209880"
  },
  {
    "text": "representation of all the instances which are attached so to a single volume",
    "start": "1209880",
    "end": "1215480"
  },
  {
    "text": "so by following uh callbacks uh operations list we get to an array uh",
    "start": "1215480",
    "end": "1221640"
  },
  {
    "text": "which is indexed by IRP major function codes and uh following that we get to",
    "start": "1221640",
    "end": "1228760"
  },
  {
    "text": "the list of callback nodes U we from which we can retrieve uh uh an instance",
    "start": "1228760",
    "end": "1236280"
  },
  {
    "text": "and from an instance from this instance we get to the uh filter structure",
    "start": "1236280",
    "end": "1242280"
  },
  {
    "text": "itself so fat module starts by checking the name of the filter and if the um if",
    "start": "1242280",
    "end": "1249080"
  },
  {
    "text": "the name is belongs to um Hitman Pro it is going to uh unlink this U this no",
    "start": "1249080",
    "end": "1256720"
  },
  {
    "text": "immediately otherwise it is going to check if this uh name is on white list",
    "start": "1256720",
    "end": "1262840"
  },
  {
    "text": "if it's not it's going to make the decision whether to remove it or not based on the default altitude of this uh",
    "start": "1262840",
    "end": "1270400"
  },
  {
    "text": "filter so fat module is interested in two ranges of altitudes first range is",
    "start": "1270400",
    "end": "1276840"
  },
  {
    "text": "uh FS filter activity monitor and the second one is FS filter antivirus",
    "start": "1276840",
    "end": "1283520"
  },
  {
    "text": "range uh if uh for all of the mini filters which are in these ranges it is going to remove them from the link at",
    "start": "1283520",
    "end": "1291080"
  },
  {
    "text": "list and uh wipe up wipe the um callback",
    "start": "1291080",
    "end": "1296760"
  },
  {
    "text": "nodes entirely from FLT instant structure so next technique is working",
    "start": "1296760",
    "end": "1303840"
  },
  {
    "text": "against uh uh Windows uh filtering platform so Windows filtering platform",
    "start": "1303840",
    "end": "1308880"
  },
  {
    "text": "is a set of apis which are designed uh for uh host based Network traffic",
    "start": "1308880",
    "end": "1314039"
  },
  {
    "text": "filtering so um it allows uh packet filtering modif ification and the",
    "start": "1314039",
    "end": "1319480"
  },
  {
    "text": "dropping of packets and this specific technique uh is executing only when the",
    "start": "1319480",
    "end": "1326400"
  },
  {
    "text": "kasperski drivers present on the system so they start by uh re resolving um G",
    "start": "1326400",
    "end": "1333720"
  },
  {
    "text": "wfp Global struct this struct is not documented but it is not difficult to uh",
    "start": "1333720",
    "end": "1339960"
  },
  {
    "text": "find an offset inside the struct which is pointing to an array of call outs so",
    "start": "1339960",
    "end": "1346120"
  },
  {
    "text": "by going off over these call outs a fud module can um can set call out flag",
    "start": "1346120",
    "end": "1353360"
  },
  {
    "text": "conditional on Flow uh flag inside the callout object structures and by",
    "start": "1353360",
    "end": "1359080"
  },
  {
    "text": "according to the documentation if this flag is set the call out function is only going to be executed if there is a",
    "start": "1359080",
    "end": "1366000"
  },
  {
    "text": "context associated with the the data uh data flow so some uh security vendors",
    "start": "1366000",
    "end": "1372559"
  },
  {
    "text": "definitely set this flag by default so this call outs are not going to be uh",
    "start": "1372559",
    "end": "1377640"
  },
  {
    "text": "affected by this technique so considering this and the initial check for kasperski drivers we assume that",
    "start": "1377640",
    "end": "1384279"
  },
  {
    "text": "this technique is specifically targeting kasperski uh event tracing for Windows",
    "start": "1384279",
    "end": "1391559"
  },
  {
    "text": "uh or etw is a high performance mechanism for tracing and login events",
    "start": "1391559",
    "end": "1397039"
  },
  {
    "text": "so um it is basically meant to connect between uh log providers and low",
    "start": "1397039",
    "end": "1403120"
  },
  {
    "text": "consumers and Microsoft provide few uh",
    "start": "1403120",
    "end": "1408559"
  },
  {
    "text": "useful uh default providers uh for instance Microsoft Windows threat",
    "start": "1408559",
    "end": "1414360"
  },
  {
    "text": "intelligence providers which can uh which provides logs for suspicious",
    "start": "1414360",
    "end": "1419720"
  },
  {
    "text": "events such as proc processes writing into other processes memory so this",
    "start": "1419720",
    "end": "1425240"
  },
  {
    "text": "specific technique is targeting Windows system loggers and uh it is fairly simple it is",
    "start": "1425240",
    "end": "1432559"
  },
  {
    "text": "basically just zeroing out uh ewp uh active system loggers and and uh",
    "start": "1432559",
    "end": "1440279"
  },
  {
    "text": "eventually disabling disabling the uh disabling the",
    "start": "1440279",
    "end": "1446559"
  },
  {
    "text": "loggers um next technique uh is also targeting etw but it is it has a",
    "start": "1446559",
    "end": "1454039"
  },
  {
    "text": "hardcoded list of 95 different uh gu IDs for specific providers so it starts by",
    "start": "1454039",
    "end": "1462840"
  },
  {
    "text": "uh resolving itwp hosy state which is pointing to a structure which which uh",
    "start": "1462840",
    "end": "1469279"
  },
  {
    "text": "which contains um hashtable of guids so",
    "start": "1469279",
    "end": "1474799"
  },
  {
    "text": "following this hash table we can uh discover etw guid entry struct which",
    "start": "1474799",
    "end": "1481679"
  },
  {
    "text": "contains the actual guid so by going over this uh hash table uh we can find",
    "start": "1481679",
    "end": "1489480"
  },
  {
    "text": "all of the um gu IDs which are on our list and disable them by uh actually by",
    "start": "1489480",
    "end": "1496279"
  },
  {
    "text": "zeroing out uh provider enabl info is enabled field of this structure it is",
    "start": "1496279",
    "end": "1502440"
  },
  {
    "text": "also possible to um for these providers to actually Supply the logs uh in",
    "start": "1502440",
    "end": "1508640"
  },
  {
    "text": "different ways so fud module is going to zero out the all of the following masks",
    "start": "1508640",
    "end": "1514080"
  },
  {
    "text": "to to prevent it from happening uh so here we",
    "start": "1514080",
    "end": "1521520"
  },
  {
    "text": "have a quick quick demo this is going to show show uh the",
    "start": "1521520",
    "end": "1531720"
  },
  {
    "text": "the last technique that that I have discussed so we start by monitoring for",
    "start": "1531720",
    "end": "1537919"
  },
  {
    "text": "uh the events from services log provider we can uh start the service and",
    "start": "1537919",
    "end": "1545399"
  },
  {
    "text": "see the logs are",
    "start": "1545399",
    "end": "1548679"
  },
  {
    "text": "coming so now we are going to actually run the exploit uh which is going to disable the",
    "start": "1550640",
    "end": "1558679"
  },
  {
    "text": "guid uh which corresponds to the uh",
    "start": "1558679",
    "end": "1564120"
  },
  {
    "text": "Services yeah and now you can see that we don't get any get don't get any new",
    "start": "1566240",
    "end": "1571480"
  },
  {
    "text": "uh",
    "start": "1571480",
    "end": "1573640"
  },
  {
    "text": "logs",
    "start": "1577720",
    "end": "1580720"
  },
  {
    "text": "okay thanks another F module technique um to",
    "start": "1583559",
    "end": "1588600"
  },
  {
    "text": "disrupting is a ver image verification callbacks image verification callback is",
    "start": "1588600",
    "end": "1594200"
  },
  {
    "text": "actually invoked every time a new driver image is loaded in the kernel memory and it's a pretty useful",
    "start": "1594200",
    "end": "1600559"
  },
  {
    "text": "functionality for antim software to block malicious or vulnerable drivers",
    "start": "1600559",
    "end": "1606760"
  },
  {
    "text": "and to disrupt this um f module needs to First allocate a function called uh s",
    "start": "1606760",
    "end": "1613360"
  },
  {
    "text": "regist register image verification call back in the kernel and then looking for",
    "start": "1613360",
    "end": "1619919"
  },
  {
    "text": "a pointer which points to the global object and this global object has the",
    "start": "1619919",
    "end": "1625320"
  },
  {
    "text": "element register callbacks which points to the link kadist of uh callback",
    "start": "1625320",
    "end": "1630840"
  },
  {
    "text": "registrations where a callback functions resides and to disrupt this F module",
    "start": "1630840",
    "end": "1637240"
  },
  {
    "text": "clears the entire list by making the register callbacks uh had list entry",
    "start": "1637240",
    "end": "1645760"
  },
  {
    "text": "point point directly to to itself now let's talk about uh direct attacks",
    "start": "1645760",
    "end": "1652640"
  },
  {
    "text": "on the security software uh where in this case it was targeting a unlap",
    "start": "1652640",
    "end": "1657799"
  },
  {
    "text": "Circuit Solution where it first needs to locate the a process structure of the unlap and",
    "start": "1657799",
    "end": "1665399"
  },
  {
    "text": "then uh to disrupt uh this uh proc to this process is basically zeroing out",
    "start": "1665399",
    "end": "1671919"
  },
  {
    "text": "the um protection element and by this modification you are making it uh just a",
    "start": "1671919",
    "end": "1678960"
  },
  {
    "text": "regular non prothetic process which means it can open up some f attacks from",
    "start": "1678960",
    "end": "1684320"
  },
  {
    "text": "the user mode and it also it can May disrupt links between user mode and the",
    "start": "1684320",
    "end": "1690399"
  },
  {
    "text": "kernel mode components but before the F module is",
    "start": "1690399",
    "end": "1696519"
  },
  {
    "text": "going to uh disrupt uh another Security Solutions in order to increase stability",
    "start": "1696519",
    "end": "1704440"
  },
  {
    "text": "to of this attack it needs to First do some small changes in in his own",
    "start": "1704440",
    "end": "1710440"
  },
  {
    "text": "eprocess structure and it's first it's basically zeroing out a mitigation flag",
    "start": "1710440",
    "end": "1716159"
  },
  {
    "text": "in the eprocess structure and also it clears the flag uh in the in the handle",
    "start": "1716159",
    "end": "1721919"
  },
  {
    "text": "table which is enable handle exception and now uh before we will I",
    "start": "1721919",
    "end": "1729799"
  },
  {
    "text": "will explain to you uh how um f module was directly uh targeting other Security",
    "start": "1729799",
    "end": "1737039"
  },
  {
    "text": "Solutions I would like to explain to you what is actually first handle table is",
    "start": "1737039",
    "end": "1742240"
  },
  {
    "text": "used for so when the new user mode codes interacts with the kernel object such as",
    "start": "1742240",
    "end": "1748840"
  },
  {
    "text": "process files or mutexes the problem is that it typically doesn't worked directly uh with the",
    "start": "1748840",
    "end": "1756159"
  },
  {
    "text": "object itself but instead uh it the references them indirectly uh through",
    "start": "1756159",
    "end": "1763039"
  },
  {
    "text": "the handles so uh internally the the kernel must be able to translate uh the handle",
    "start": "1763039",
    "end": "1770120"
  },
  {
    "text": "to the corresponding uh kernel object and this is actually where the handle",
    "start": "1770120",
    "end": "1775519"
  },
  {
    "text": "table comes in as as you can see on the slides there is a pointer to the handle",
    "start": "1775519",
    "end": "1780600"
  },
  {
    "text": "table entries so the handle is actually index in those hand entry uh entries so",
    "start": "1780600",
    "end": "1788039"
  },
  {
    "text": "and this is per process table available in the a process",
    "start": "1788039",
    "end": "1793960"
  },
  {
    "text": "structure now uh let's talk about the last uh",
    "start": "1793960",
    "end": "1799159"
  },
  {
    "text": "finally the last uh fud module disruption technique to disrupt a security solution and uh by doing this",
    "start": "1799159",
    "end": "1807440"
  },
  {
    "text": "the fud module creates first a dram damit thread with all access rights so",
    "start": "1807440",
    "end": "1814960"
  },
  {
    "text": "as you can see on the slides by creating a thread which by itself is not interesting by creating this you are",
    "start": "1814960",
    "end": "1821480"
  },
  {
    "text": "creating an entry in the handle table entries so after is uh you are basically",
    "start": "1821480",
    "end": "1828799"
  },
  {
    "text": "uh have you have a pointer which points to the handle table entry and object",
    "start": "1828799",
    "end": "1833880"
  },
  {
    "text": "pointer bits uh points to the corresponding arbitrary object and with",
    "start": "1833880",
    "end": "1838960"
  },
  {
    "text": "the read write Primitives F module is able to modify object pointer bits well",
    "start": "1838960",
    "end": "1845480"
  },
  {
    "text": "it will point to uh targeted processes where targeted processes",
    "start": "1845480",
    "end": "1851360"
  },
  {
    "text": "are uh Windows Defender uh crowd strike or Hitman Pro",
    "start": "1851360",
    "end": "1858840"
  },
  {
    "text": "so by doing this the fud module now has can perform privilege operation on it",
    "start": "1858840",
    "end": "1865960"
  },
  {
    "text": "which means that can f module can now call uh any API functions to be able to",
    "start": "1865960",
    "end": "1873840"
  },
  {
    "text": "uh suspend this targeted process and all threats that regarding this process and",
    "start": "1873840",
    "end": "1881000"
  },
  {
    "text": "this is how uh fun module was uh disrupting the Security Solutions",
    "start": "1881000",
    "end": "1889519"
  },
  {
    "text": "so in conclusion uh our research has shown that the Lazarus group is still",
    "start": "1889519",
    "end": "1894600"
  },
  {
    "text": "investing significant resources into developing sophisticated attacks including Discovery and weaponization of",
    "start": "1894600",
    "end": "1902720"
  },
  {
    "text": "the zero days vulnerabilities to Target high value assets and despite existence",
    "start": "1902720",
    "end": "1909320"
  },
  {
    "text": "of various mitigations our findings indicates the kernel base security",
    "start": "1909320",
    "end": "1915639"
  },
  {
    "text": "indicates uh it is still kernel Bas Security Solutions still remain",
    "start": "1915639",
    "end": "1921559"
  },
  {
    "text": "vulnerable and U despite those sophisticated attacks Lazarus group is",
    "start": "1921559",
    "end": "1927399"
  },
  {
    "text": "still using infection Vector uh still using fishing as infection Vector to gain uh to the",
    "start": "1927399",
    "end": "1934120"
  },
  {
    "text": "victim machine so that's all was all from us thank you for your attentions",
    "start": "1934120",
    "end": "1939840"
  },
  {
    "text": "and we are ready to answer some questions [Applause]",
    "start": "1939840",
    "end": "1949339"
  },
  {
    "text": "yes so so by the facts uh because I'm the",
    "start": "1960760",
    "end": "1966320"
  },
  {
    "text": "researcher so I'm really by the facts we don't have the facts what we are trying to achieve but what I can say what I",
    "start": "1966320",
    "end": "1972519"
  },
  {
    "text": "think is uh their motivation I think was uh to get to the attack",
    "start": "1972519",
    "end": "1978360"
  },
  {
    "text": "to the uh corporate Network because I think they were trying to do is uh kind of bypass the the this F first infection",
    "start": "1978360",
    "end": "1987320"
  },
  {
    "text": "Vector not just by infect the whole network but infect individual and that",
    "start": "1987320",
    "end": "1994080"
  },
  {
    "text": "individual may use corporate laptop as a for IND for private U stuff and uh I",
    "start": "1994080",
    "end": "2004039"
  },
  {
    "text": "think that's why they used also such as such a s ticated ATT to kind of disrupt",
    "start": "2004039",
    "end": "2009960"
  },
  {
    "text": "this Security Solutions because I don't have in my private laptop crowd strike so I think that's uh that can be one of",
    "start": "2009960",
    "end": "2017559"
  },
  {
    "text": "the way and to to achieve why Target specific",
    "start": "2017559",
    "end": "2023559"
  },
  {
    "text": "company I think they were after they were they they they were going after",
    "start": "2023559",
    "end": "2028639"
  },
  {
    "text": "money I think there was Financial motivation since I think the lazaros group is pretty famous for this uh",
    "start": "2028639",
    "end": "2035760"
  },
  {
    "text": "motivation another yes yes",
    "start": "2035760",
    "end": "2040840"
  },
  {
    "text": "please yeah yeah yeah you're uh yeah have",
    "start": "2040840",
    "end": "2046360"
  },
  {
    "text": "the uh sorry I didn't hear you uh",
    "start": "2058040",
    "end": "2064280"
  },
  {
    "text": "yeah can you hear me now yes okay um first of all thank you for the interesting presentation my question is",
    "start": "2072679",
    "end": "2079200"
  },
  {
    "text": "that before this uh malare before this fought module had you seen um Lazarus",
    "start": "2079200",
    "end": "2085118"
  },
  {
    "text": "using this sort of sophisticated kernel mode",
    "start": "2085119",
    "end": "2090440"
  },
  {
    "text": "malver again any any other Kel mode malver you",
    "start": "2092440",
    "end": "2099040"
  },
  {
    "text": "analyze from Lazarus group ah uh so far uh I'm aware of the uh F module but I I",
    "start": "2099040",
    "end": "2109079"
  },
  {
    "text": "I I'm not holding the whole history of the ler group attacks in my in my mind I mean my head on top of my head but uh",
    "start": "2109079",
    "end": "2115960"
  },
  {
    "text": "I'm I know about this fud module and uh previous module by the fud module also",
    "start": "2115960",
    "end": "2121520"
  },
  {
    "text": "discovered by uh another others uh AV vendor but this fud module was",
    "start": "2121520",
    "end": "2128599"
  },
  {
    "text": "um uh newer version so they were through thata only attack there were there were",
    "start": "2128599",
    "end": "2135000"
  },
  {
    "text": "the way have by binding security vendors and Security Solutions okay thank",
    "start": "2135000",
    "end": "2142839"
  },
  {
    "text": "you",
    "start": "2143839",
    "end": "2146839"
  },
  {
    "text": "yes hi thanks for the presentation U yeah I was just curious cuz the the 10",
    "start": "2149920",
    "end": "2156400"
  },
  {
    "text": "techniques or nine um did you uncover them yourself or it",
    "start": "2156400",
    "end": "2163119"
  },
  {
    "text": "was a bigger community that worked on this and which one did you enjoy reversing",
    "start": "2163119",
    "end": "2170880"
  },
  {
    "text": "the most uh it was Discovery uh by myself also by",
    "start": "2170880",
    "end": "2179079"
  },
  {
    "text": "my colleague vek but um that's also we have I have to say that u u the first",
    "start": "2179079",
    "end": "2187280"
  },
  {
    "text": "discovery was the exploit and since we have a pretty good Telemetry in the in the memory uh alongside this shell Cod",
    "start": "2187280",
    "end": "2195079"
  },
  {
    "text": "uh we had them dump which were in the which alongside this exploit was a root",
    "start": "2195079",
    "end": "2200359"
  },
  {
    "text": "kit as well and uh what was I think most interesting is the how with the that",
    "start": "2200359",
    "end": "2207400"
  },
  {
    "text": "that only attack how it was uh crafting the handle table uh so it was pretty interesting",
    "start": "2207400",
    "end": "2214920"
  },
  {
    "text": "because on the first side uh you don't understand understand but but when you're going to deep deeper and",
    "start": "2214920",
    "end": "2221319"
  },
  {
    "text": "understand more about Windows internals that this makes sense",
    "start": "2221319",
    "end": "2228680"
  },
  {
    "text": "yes okay good uh thank you so much again thank you",
    "start": "2238040",
    "end": "2245280"
  }
]