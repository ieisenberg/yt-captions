[
  {
    "text": "hi everyone thank you for joining uh thank you for having me here my name is Demetrios I'm from Greece and here are a",
    "start": "2520",
    "end": "9440"
  },
  {
    "text": "few things about me uh I'm engaged in computer security since 2002 I was member of one of the",
    "start": "9440",
    "end": "15839"
  },
  {
    "text": "first reverse engineering groups back in Greece and I started my career as a network security engineer for about 10",
    "start": "15839",
    "end": "22000"
  },
  {
    "text": "years then I moved into developing for almost 5 years and the last six years I",
    "start": "22000",
    "end": "27480"
  },
  {
    "text": "focus mainly on mobile security while before I joined Microsoft's threat intelligence team as a senior security",
    "start": "27480",
    "end": "34360"
  },
  {
    "text": "researcher I was leading another team which was conducting malware reviews for the Google Play store besides that I'm a",
    "start": "34360",
    "end": "40360"
  },
  {
    "text": "father of two a boy and a girl and in my free time I try at least to write and play music uh so before we start uh just",
    "start": "40360",
    "end": "48320"
  },
  {
    "text": "to get an idea of uh your background do you have any Android developers here just hands",
    "start": "48320",
    "end": "55199"
  },
  {
    "text": "up brilliant okay all right so anyway this is uh I guess justifies uh the",
    "start": "55199",
    "end": "63079"
  },
  {
    "text": "short intro that we're going to have so we're going to jump right into the outline of this briefing which consist",
    "start": "63079",
    "end": "68360"
  },
  {
    "text": "of the following topics first of all we're going to talk about some uh basic concepts regarding",
    "start": "68360",
    "end": "74840"
  },
  {
    "text": "uh class loaders parcelable cables and then we're going to see some uh common security issues which may",
    "start": "74840",
    "end": "81680"
  },
  {
    "text": "occur when we handle these objects in an inse secure manner after that we're going to see",
    "start": "81680",
    "end": "88079"
  },
  {
    "text": "what was the main uh motive behind This research behind this idea and then we'll",
    "start": "88079",
    "end": "93600"
  },
  {
    "text": "see what we've tested until we've finally concluded on the most convenient way in order to implement the",
    "start": "93600",
    "end": "100840"
  },
  {
    "text": "exploitation technique for which I'm going to talk to you about to see everything in practice we're going to go",
    "start": "100840",
    "end": "106479"
  },
  {
    "text": "through some uh showcases some actual vulnerability showcases and we will wrap",
    "start": "106479",
    "end": "112040"
  },
  {
    "text": "up with conclusions and takeaways right so class loader is an",
    "start": "112040",
    "end": "117840"
  },
  {
    "text": "essential part of the Java virtual machine responsible for uh finding binary representations of classes",
    "start": "117840",
    "end": "124079"
  },
  {
    "text": "interfaces and when these are found the jvm uh constructs the corresponding",
    "start": "124079",
    "end": "129479"
  },
  {
    "text": "class and interface and LOD it into the application's memory uh they are uh implementations of the abstract class",
    "start": "129479",
    "end": "136000"
  },
  {
    "text": "loader class reflecting various loading policies and they are organized according to an hierarchal model",
    "start": "136000",
    "end": "142480"
  },
  {
    "text": "establishing a parent to child relationship between them on the top of this model we have",
    "start": "142480",
    "end": "147760"
  },
  {
    "text": "the bootstrap or primordial class LA which is responsible for loading the Java code libraries and we also have",
    "start": "147760",
    "end": "154640"
  },
  {
    "text": "user defined ones like extension or application class loaders uh which are",
    "start": "154640",
    "end": "161519"
  },
  {
    "text": "they load secondary classes from extension or application directories as their name implies when it comes to loading a class",
    "start": "161519",
    "end": "169120"
  },
  {
    "text": "class loaders follow a delegation model According to which the lower level ones refer to their parents in case they",
    "start": "169120",
    "end": "176239"
  },
  {
    "text": "themselves were not able to locate a specific class this process will either",
    "start": "176239",
    "end": "181440"
  },
  {
    "text": "end up un successfully loading a class or to a class not found exception in case no one of the class loaders was",
    "start": "181440",
    "end": "188000"
  },
  {
    "text": "able to locate the specific class moving towards Android operating system",
    "start": "188000",
    "end": "193799"
  },
  {
    "text": "performance considerations as well as licensing and copyright issues prompt Android to adopt uh the dvic",
    "start": "193799",
    "end": "201599"
  },
  {
    "text": "VM",
    "start": "201599",
    "end": "204599"
  },
  {
    "text": "oops just s is it out no ah all right the dvic VM",
    "start": "208200",
    "end": "216840"
  },
  {
    "text": "was initially designed in order to address some the of the jvm's",
    "start": "216840",
    "end": "222439"
  },
  {
    "text": "limitations uh D went through a lot of improvements until it was finally replaced by the Android runtime Android",
    "start": "222439",
    "end": "229120"
  },
  {
    "text": "5 despite all this shift the Android runtime maintains compatibility with uh",
    "start": "229120",
    "end": "234799"
  },
  {
    "text": "the D bite code and actually the uh overall Android application development",
    "start": "234799",
    "end": "239840"
  },
  {
    "text": "and deployment didn't change much through all these years in terms of programming Java remains a main stay",
    "start": "239840",
    "end": "246599"
  },
  {
    "text": "besides coding of course and when it comes to running bite code dalic uses dalic bite code which we can find in uh",
    "start": "246599",
    "end": "253680"
  },
  {
    "text": "dalic in Dex files and it's not compatible with the corresponding Java bite code in fact in order to create a",
    "start": "253680",
    "end": "261040"
  },
  {
    "text": "de file we need to use an additional tool in order to convert a class file to a de file that can be finally utilized",
    "start": "261040",
    "end": "268280"
  },
  {
    "text": "by uh an APK some notable Android class loaders are",
    "start": "268280",
    "end": "273800"
  },
  {
    "text": "the boot uh class loader which is responsible for loading core libraries and we also have the path class loader",
    "start": "273800",
    "end": "281000"
  },
  {
    "text": "which is responsible for loading uh which is the one actually assigned by default to every Android app during the",
    "start": "281000",
    "end": "287320"
  },
  {
    "text": "initialization process few things about uh serialization which in Java is the",
    "start": "287320",
    "end": "293520"
  },
  {
    "text": "process of converting an object into a b stream which facilitates the transmission of this uh object across",
    "start": "293520",
    "end": "301680"
  },
  {
    "text": "different jvms either those are within the same machine or distributed on some kind of a network for this project to be",
    "start": "301680",
    "end": "309240"
  },
  {
    "text": "successful the receiving end must be aware of the structure of the class of the received object which means that",
    "start": "309240",
    "end": "316160"
  },
  {
    "text": "this class file the class file must belong to the path of the receiving uh Ed uh end class",
    "start": "316160",
    "end": "323600"
  },
  {
    "text": "loader now in a Droid moving objects between components is essential for",
    "start": "323600",
    "end": "330479"
  },
  {
    "text": "inner and Inter process communication so the adoption of an additional class specially designed for this reason was",
    "start": "330479",
    "end": "336680"
  },
  {
    "text": "avoidable so Android besides serializable uses parcela bles for classes that can be read from and",
    "start": "336680",
    "end": "343280"
  },
  {
    "text": "written to a parcel so these classes must implement the parcelable interface",
    "start": "343280",
    "end": "348400"
  },
  {
    "text": "and must provide methods that can be used in order to read and write uh a",
    "start": "348400",
    "end": "353800"
  },
  {
    "text": "parcel if we want to create a parcel from the scratch we can't use uh the Constructor of the class of the partial",
    "start": "353800",
    "end": "360919"
  },
  {
    "text": "class due to the fact that this has remained intentionally private but we",
    "start": "360919",
    "end": "366199"
  },
  {
    "text": "can use the obtain method of the same class which works as follows dives into a pool of uh Parcels in order to obtain",
    "start": "366199",
    "end": "373639"
  },
  {
    "text": "one and return it back to the calling app when this parel is no longer needed",
    "start": "373639",
    "end": "379400"
  },
  {
    "text": "it can be recycled and so on so this serialization can introduce",
    "start": "379400",
    "end": "385919"
  },
  {
    "text": "vulnerabilities assuming that the serialization source can be controlled by attacker might assign more than 690",
    "start": "385919",
    "end": "392759"
  },
  {
    "text": "cves for this realization issues and for a prominent objectoriented languages",
    "start": "392759",
    "end": "398560"
  },
  {
    "text": "like java.net Python and so on Androids Z minimum Reliance on uh Java vulnerable",
    "start": "398560",
    "end": "406080"
  },
  {
    "text": "classes has raised the bar when it comes to crafting gadgets as evidenced by the fact that very few of them exist in the",
    "start": "406080",
    "end": "411520"
  },
  {
    "text": "Android uh ecosystem don't be Fool by that Android is not immune to this",
    "start": "411520",
    "end": "417080"
  },
  {
    "text": "realization attacks and here are some notable is when it comes to serializable the",
    "start": "417080",
    "end": "422560"
  },
  {
    "text": "first one that I'm going to talk about was discovered in 2014 by y horn who",
    "start": "422560",
    "end": "428080"
  },
  {
    "text": "proved that during the DC realization process the object to be DC realized was",
    "start": "428080",
    "end": "433560"
  },
  {
    "text": "not inspected if it indeed actually belong to a serializable class so this",
    "start": "433560",
    "end": "439039"
  },
  {
    "text": "allowed him to serialize objects of any class and while many of you may think",
    "start": "439039",
    "end": "444120"
  },
  {
    "text": "what bad can happen with that the receiving end will try to cast this object to a non fitting class and reject",
    "start": "444120",
    "end": "450960"
  },
  {
    "text": "it or is some kind of an exception well uh during the garbage collection",
    "start": "450960",
    "end": "456000"
  },
  {
    "text": "process uh the finalized method of the binder proxy class dives into native code using a couple of pointers which",
    "start": "456000",
    "end": "464000"
  },
  {
    "text": "could be set by an attacker could be controlled by an attacker so Horn uh",
    "start": "464000",
    "end": "469800"
  },
  {
    "text": "attacked the system server process with such an object managed to get uh control of these pointers and get arbitrary code",
    "start": "469800",
    "end": "476520"
  },
  {
    "text": "execution with system privileges a year after uh p and ha in",
    "start": "476520",
    "end": "482400"
  },
  {
    "text": "their paper one class to rule them all they did something similar highlighted vulnerability which could once again",
    "start": "482400",
    "end": "489039"
  },
  {
    "text": "allow an attacker to get arbitrary code execution with system privileges this time the researchers uh used the non",
    "start": "489039",
    "end": "495599"
  },
  {
    "text": "transcent field of this class here and by getting control of an 18 poter they",
    "start": "495599",
    "end": "501080"
  },
  {
    "text": "managed once again to get arbitrary code execution with system privileges moving to parcel which are",
    "start": "501080",
    "end": "507520"
  },
  {
    "text": "also not immune to the kind of attacks actually there is a whole class of vulnerabilities which stems out of the",
    "start": "507520",
    "end": "514760"
  },
  {
    "text": "mismatch between the read and write to parcel the first most important one uh",
    "start": "514760",
    "end": "521000"
  },
  {
    "text": "was discovered in 2017 by Mikel bednarski who by exploiting such an issue managed to get what we call a",
    "start": "521000",
    "end": "528399"
  },
  {
    "text": "lunch anywhere simply said he was able to use the start activity with system",
    "start": "528399",
    "end": "534440"
  },
  {
    "text": "Privileges and an intent that he was able to control and this allowed him to",
    "start": "534440",
    "end": "540240"
  },
  {
    "text": "uh send this intent even to not exported activities few years after the same uh",
    "start": "540240",
    "end": "545959"
  },
  {
    "text": "researcher exploited a similar type of vulnerability although in this case he was able to get arbitrary code execution",
    "start": "545959",
    "end": "551880"
  },
  {
    "text": "with system privileges so it seems that uh the researcher Community is aware of issues",
    "start": "551880",
    "end": "557640"
  },
  {
    "text": "which may occur from insecure handling of these objects and the developer Community is aware of these kind of",
    "start": "557640",
    "end": "564680"
  },
  {
    "text": "issues and they are actually familiar with Parable and serializable since intent and uh bundles which are the most",
    "start": "564680",
    "end": "572680"
  },
  {
    "text": "some of the most commonly used classes in theid operating system are actually parcelable there seems though to be a",
    "start": "572680",
    "end": "578839"
  },
  {
    "text": "misconception when it comes to custom classes and objects which are created from these classes what I mean by custom",
    "start": "578839",
    "end": "585760"
  },
  {
    "text": "classes I'm referring to the ones which are created within an app we can't find them in some kind of public repository",
    "start": "585760",
    "end": "592240"
  },
  {
    "text": "or some kind of Library we can't import them in our project so due to the fact",
    "start": "592240",
    "end": "598079"
  },
  {
    "text": "that Android apps are sandbox each one treated as a distinct Linux user there seems as I said to be a misconception",
    "start": "598079",
    "end": "604920"
  },
  {
    "text": "that one application cannot interfere with another application class loader which as we're going to see is wrong so",
    "start": "604920",
    "end": "611480"
  },
  {
    "text": "developers don't take the appropriate measures in order as we're going to see in order to protect these kind of",
    "start": "611480",
    "end": "617320"
  },
  {
    "text": "objects all right now that we went through the basics uh let uh let's go let's see",
    "start": "617320",
    "end": "626279"
  },
  {
    "text": "actually what was the main idea behind this research and I guess despite the fact that this slide explains itself",
    "start": "626279",
    "end": "632079"
  },
  {
    "text": "everything started while I was working on a project of mine which I wanted to extend uh in order to monitor Android",
    "start": "632079",
    "end": "638880"
  },
  {
    "text": "intents which are exchanged between Android components which subsequently led me to consider what might have",
    "start": "638880",
    "end": "646639"
  },
  {
    "text": "happened in case a Rog APK was involved in this process so after endless hours",
    "start": "646639",
    "end": "653320"
  },
  {
    "text": "of programming I managed to create a couple of scripts which allowed me to do such a thing and uh here is how this uh",
    "start": "653320",
    "end": "660959"
  },
  {
    "text": "extension this feature let's say looks like this is the python version for",
    "start": "660959",
    "end": "666360"
  },
  {
    "text": "those who are interested uh you can find some more info in this repo there there's also a Java one and",
    "start": "666360",
    "end": "673920"
  },
  {
    "text": "uh this is actually uh a picture of an intent which is captured uh when it's",
    "start": "673920",
    "end": "679560"
  },
  {
    "text": "exchanged between as I said Android components now if we look a little bit closer we're going to see that this intent contains a",
    "start": "679560",
    "end": "686399"
  },
  {
    "text": "parcelable which parcelable contains uh a field which is called entry URI and",
    "start": "686399",
    "end": "691519"
  },
  {
    "text": "it's actually URL so the static review proved that the app the receiving component was adopting",
    "start": "691519",
    "end": "699160"
  },
  {
    "text": "this URL blindly and sending there an HP request which was authenticated included",
    "start": "699160",
    "end": "706399"
  },
  {
    "text": "the user tokens so what if we were able to position ourselves in a way that we",
    "start": "706399",
    "end": "713720"
  },
  {
    "text": "could create such Parcels send them to these components and this partes contain our",
    "start": "713720",
    "end": "720160"
  },
  {
    "text": "own let's say uh data so the first idea in order to do such a thing was a simple",
    "start": "720160",
    "end": "727519"
  },
  {
    "text": "approach it was to reconstruct the fully qualified name of the class add fields",
    "start": "727519",
    "end": "733160"
  },
  {
    "text": "which don't supposed to be that when they received by the other end and that's it start to creating",
    "start": "733160",
    "end": "738560"
  },
  {
    "text": "objects take for example this case here where we have a class which is parcelable it has a simple field a",
    "start": "738560",
    "end": "745279"
  },
  {
    "text": "single field so we can simply decompile the AP K that we are targeting copy the",
    "start": "745279",
    "end": "751360"
  },
  {
    "text": "specific code within our project add it to this package here which is highlighted and that's it start to",
    "start": "751360",
    "end": "757360"
  },
  {
    "text": "create object and this seems to work well for simple cases though because",
    "start": "757360",
    "end": "763600"
  },
  {
    "text": "when we have more complex cases things are getting a little bit strange for example imagine we have this case here",
    "start": "763600",
    "end": "769279"
  },
  {
    "text": "where we have a class that links to another class which links to another one",
    "start": "769279",
    "end": "774320"
  },
  {
    "text": "and so on and to add to this of course the fation which is very common in Android apps so imagine that we have to",
    "start": "774320",
    "end": "781000"
  },
  {
    "text": "copy all these classes within our project in order to create a single object which as I said again is",
    "start": "781000",
    "end": "788600"
  },
  {
    "text": "Impractical the other idea was uh why we don't import the APK or the Dex file to",
    "start": "788600",
    "end": "795399"
  },
  {
    "text": "our project like a library like an external Library the approach this approach although it is lesser known",
    "start": "795399",
    "end": "802360"
  },
  {
    "text": "it's pretty much straightforward so the only thing that we have to do is just get the APK or Dex file use a tool like",
    "start": "802360",
    "end": "808320"
  },
  {
    "text": "Dex to jar in order to uh convert this apkex file to jar file and import import",
    "start": "808320",
    "end": "816440"
  },
  {
    "text": "it to our uh project like an external Library so once again this works well in",
    "start": "816440",
    "end": "822680"
  },
  {
    "text": "some cases although it has two main disadvantages the first one is the",
    "start": "822680",
    "end": "828240"
  },
  {
    "text": "obviously the size of uh the APK due to the fact that it contains an additional",
    "start": "828240",
    "end": "833800"
  },
  {
    "text": "one so we have two APK in one I guess and the other one uh the most discarded",
    "start": "833800",
    "end": "839279"
  },
  {
    "text": "I guess is the following screen is the screen here which you get when you try to when you have a conflict between the",
    "start": "839279",
    "end": "845120"
  },
  {
    "text": "libraries that you are importing and the librar that are already there in your project so you have to resolve these",
    "start": "845120",
    "end": "852279"
  },
  {
    "text": "conflicts you have to unpack the jar I guess uh remove all these uh conflicts",
    "start": "852279",
    "end": "857639"
  },
  {
    "text": "manually which once again is pretty much uh impractical so it doesn't",
    "start": "857639",
    "end": "863079"
  },
  {
    "text": "work so what seems to work for us was Dynamic called loading and when it comes",
    "start": "863079",
    "end": "868920"
  },
  {
    "text": "to Android operating system Dynamic code loading can be achieved with one of the",
    "start": "868920",
    "end": "874040"
  },
  {
    "text": "uh many class loaders that Android has including the memory de class loader the path class loader and the Dex class",
    "start": "874040",
    "end": "880480"
  },
  {
    "text": "loader with the last two being among the most popular ones when it comes to Android operating system now the Dex",
    "start": "880480",
    "end": "885839"
  },
  {
    "text": "class loader is a bit more flexible than the path class loader it takes as an argument a path to an APK to a de file",
    "start": "885839",
    "end": "893880"
  },
  {
    "text": "it can be used in order to load uh classes from this file the second one",
    "start": "893880",
    "end": "899199"
  },
  {
    "text": "takes two arguments a path to the installation directory of a nap and a an",
    "start": "899199",
    "end": "905040"
  },
  {
    "text": "optional parent class loader so the problem here is that we don't",
    "start": "905040",
    "end": "912720"
  },
  {
    "text": "know I mean we can't predict actually the installation directory of an app due",
    "start": "912720",
    "end": "917800"
  },
  {
    "text": "to the fact that this installation directory contains randomly generated Bas 64 strings it's out of scope right",
    "start": "917800",
    "end": "923920"
  },
  {
    "text": "now to describe how the strings are created but we can keep in mind that we can't simply predict",
    "start": "923920",
    "end": "929519"
  },
  {
    "text": "there are ways of course to get this info using some API calls the package manager for example although why to do",
    "start": "929519",
    "end": "936680"
  },
  {
    "text": "such a think when we have a much easier way to obtain a class loader of another app and here is the create package",
    "start": "936680",
    "end": "943120"
  },
  {
    "text": "context of the context class which works as follows so it takes two arguments the",
    "start": "943120",
    "end": "949560"
  },
  {
    "text": "package name for which we want to obtain a class loader and a flag or a set of flags out of the ones which are depicted",
    "start": "949560",
    "end": "957440"
  },
  {
    "text": "here so when this this method is used it will finally call the create resources method which will wrap up everything",
    "start": "957440",
    "end": "965240"
  },
  {
    "text": "into a context object and when I say everything includes this includes the resources of this package the class",
    "start": "965240",
    "end": "972160"
  },
  {
    "text": "loader of this package and we'll return it back to the calling app now when it comes to the flags that I said",
    "start": "972160",
    "end": "977759"
  },
  {
    "text": "before uh out of particular interest when it comes to uh this briefing at least are the first two the context",
    "start": "977759",
    "end": "984360"
  },
  {
    "text": "include code and context ignore security which when they are used used in",
    "start": "984360",
    "end": "989600"
  },
  {
    "text": "combination they can allow us they may allow us to execute code and create objects using class loader of the other",
    "start": "989600",
    "end": "996480"
  },
  {
    "text": "of the package that we want few things to consider when we're using this uh specific method uh so",
    "start": "996480",
    "end": "1004759"
  },
  {
    "text": "before Android 11 we could use the create package context directly no extra",
    "start": "1004759",
    "end": "1011720"
  },
  {
    "text": "steps uh is is it out again",
    "start": "1011720",
    "end": "1019279"
  },
  {
    "text": "okay yeah so we could use it uh without extra steps although in",
    "start": "1019720",
    "end": "1025079"
  },
  {
    "text": "Android 11 uh onwards due to the package visibility",
    "start": "1025079",
    "end": "1030678"
  },
  {
    "text": "restrictions that were important in this uh version we need to take some extra steps when when we want to use a",
    "start": "1030679",
    "end": "1036760"
  },
  {
    "text": "specific method and these extra steps uh regard the Android manifest so if we",
    "start": "1036760",
    "end": "1042918"
  },
  {
    "text": "know the package name for which we want to uh obtain the class loader for example we have to add the following",
    "start": "1042919",
    "end": "1049160"
  },
  {
    "text": "entry here in the Android manifest if we don't know simply we don't want to",
    "start": "1049160",
    "end": "1054480"
  },
  {
    "text": "disclose this name we can add a filter an intent filter so we can use the",
    "start": "1054480",
    "end": "1059840"
  },
  {
    "text": "create package context for uh any app which matches the specific filter finally when uh there's",
    "start": "1059840",
    "end": "1067880"
  },
  {
    "text": "another way using for example the query all packages permission although if we want to publish such an up to play store",
    "start": "1067880",
    "end": "1076120"
  },
  {
    "text": "for example we have to justify the usage of this per Mission due to the fact that it's regulated and I can assure you that we",
    "start": "1076120",
    "end": "1082679"
  },
  {
    "text": "can't say that we want to start exploiting apps not valid justification so",
    "start": "1082679",
    "end": "1089960"
  },
  {
    "text": "yeah so indeed we can obtain the class loader of another app and what we can do with that we can of course use",
    "start": "1089960",
    "end": "1097240"
  },
  {
    "text": "reflection and for those who are not familiar with Java Reflection is a powerful Java feature which may allow us",
    "start": "1097240",
    "end": "1102880"
  },
  {
    "text": "to create objects uh inspect modify them",
    "start": "1102880",
    "end": "1107960"
  },
  {
    "text": "during the applications run time so basic uh uh components of reflection are the class the field method The",
    "start": "1107960",
    "end": "1114280"
  },
  {
    "text": "Constructor in our case we're going to use this uh method here the load class",
    "start": "1114280",
    "end": "1119400"
  },
  {
    "text": "which takes as an argument uh the name of a class and returns a class object so",
    "start": "1119400",
    "end": "1125679"
  },
  {
    "text": "by using this class object we can get a reference among others to the",
    "start": "1125679",
    "end": "1131480"
  },
  {
    "text": "Constructor of this class and start creating instances as I said before here's an example how this works as I",
    "start": "1131480",
    "end": "1138960"
  },
  {
    "text": "said we get the reference to the specific class uh uh Constructor and then give the name of the class Define",
    "start": "1138960",
    "end": "1145960"
  },
  {
    "text": "the fields that this class has and then we can provide our own data in order to",
    "start": "1145960",
    "end": "1151240"
  },
  {
    "text": "create an object an instance all right so let me summarize",
    "start": "1151240",
    "end": "1156840"
  },
  {
    "text": "what we have uh so far so we said an app can access and uh use the class loader",
    "start": "1156840",
    "end": "1164960"
  },
  {
    "text": "of another app as long as both of them are installed in the same device they",
    "start": "1164960",
    "end": "1170360"
  },
  {
    "text": "coexist so this allow us to create objects of any class of another app and",
    "start": "1170360",
    "end": "1178280"
  },
  {
    "text": "by using of course our own arbitrary data if the class is parcelable or serializable then we can send it across",
    "start": "1178280",
    "end": "1186200"
  },
  {
    "text": "components or across different apps so what we can achieve with that so the impact depends on the way",
    "start": "1186200",
    "end": "1194880"
  },
  {
    "text": "that the receiving end will handle uh the data that this object that we have",
    "start": "1194880",
    "end": "1200200"
  },
  {
    "text": "created this evil twin that we have created contains and as I said before developers don't take usually the",
    "start": "1200200",
    "end": "1206600"
  },
  {
    "text": "appropriate measures in order to handle this kind of uh data and this is why in many cases in most of the cases we manag",
    "start": "1206600",
    "end": "1213679"
  },
  {
    "text": "to get account hijacking intent redirection in some cases and even code",
    "start": "1213679",
    "end": "1219440"
  },
  {
    "text": "execution in some of them so what we are looking for when we're looking for this kind of uh issues this kind of",
    "start": "1219440",
    "end": "1226400"
  },
  {
    "text": "vulnerabilities we're looking for specific calls within exported components or",
    "start": "1226400",
    "end": "1232159"
  },
  {
    "text": "components which communicate with exported components with the idea that uh these kind of objects may originate",
    "start": "1232159",
    "end": "1239480"
  },
  {
    "text": "from an external entity when we're dealing with intents we're looking for get Parable extra or get realizable",
    "start": "1239480",
    "end": "1246200"
  },
  {
    "text": "extra these kind of components when we are dealing with um uh bundles we are",
    "start": "1246200",
    "end": "1252720"
  },
  {
    "text": "looking for get parcelable gets realizable so on right so what about the frequency it is extremely frequent uh",
    "start": "1252720",
    "end": "1260440"
  },
  {
    "text": "from the point that out of 300 apps that we reviewed how they use this kind of",
    "start": "1260440",
    "end": "1265760"
  },
  {
    "text": "objects 156 of them were found to indeed obtain such an object from uh an",
    "start": "1265760",
    "end": "1272559"
  },
  {
    "text": "external component which means that these May originate as I said before from an untrusted",
    "start": "1272559",
    "end": "1278880"
  },
  {
    "text": "entity uh what about the uh impact so",
    "start": "1278880",
    "end": "1283919"
  },
  {
    "text": "31% of them were found to be vulnerable and uh about 14% of them we managed to",
    "start": "1283919",
    "end": "1289880"
  },
  {
    "text": "get account hijacking as I said before this was the most uh common impact in",
    "start": "1289880",
    "end": "1296200"
  },
  {
    "text": "this case 3% uh was found to oops",
    "start": "1296200",
    "end": "1303158"
  },
  {
    "text": "all right so 3% was found to be uh vulnerable to intent R Direction and 14%",
    "start": "1323559",
    "end": "1328679"
  },
  {
    "text": "of them in other uh issues including on execution as I said before now when it",
    "start": "1328679",
    "end": "1334559"
  },
  {
    "text": "comes to uh where the classes of uh I mean which what kinds of apps that we",
    "start": "1334559",
    "end": "1342200"
  },
  {
    "text": "found uh issue to be this issue to be active they are spread all over including retail and incom Merce travel",
    "start": "1342200",
    "end": "1348679"
  },
  {
    "text": "Hospitality media and so on right so uh now that we have everything in place",
    "start": "1348679",
    "end": "1355080"
  },
  {
    "text": "let's go through some actual uh vulnerability showcases in order to see everything in practice and the first one",
    "start": "1355080",
    "end": "1361559"
  },
  {
    "text": "that we're going to talk about regards an intent Direction uh so for those who are not",
    "start": "1361559",
    "end": "1367640"
  },
  {
    "text": "familiar with Android vulnerabilities an intent redirection is uh happens when an",
    "start": "1367640",
    "end": "1374240"
  },
  {
    "text": "attacker is able to force another app to send an intent with data that he or she",
    "start": "1374240",
    "end": "1380159"
  },
  {
    "text": "controls it's one of the most let's say important vulnerabilities when it comes to Android apps even play store issues a",
    "start": "1380159",
    "end": "1386520"
  },
  {
    "text": "warning for apps where this kind of uh vulnerability was identified and uh was",
    "start": "1386520",
    "end": "1392960"
  },
  {
    "text": "not mitigated in a specific timeline now let's go through the",
    "start": "1392960",
    "end": "1398880"
  },
  {
    "text": "specific case and what we see here is a code snippet which is taken from an exported",
    "start": "1398880",
    "end": "1403919"
  },
  {
    "text": "component uh so what this uh component",
    "start": "1403919",
    "end": "1409279"
  },
  {
    "text": "is doing is checking the incoming intent for an extra which is called extra request and if this extra request is",
    "start": "1409279",
    "end": "1415880"
  },
  {
    "text": "present this xray is present it will uh check if it is of type request and",
    "start": "1415880",
    "end": "1422080"
  },
  {
    "text": "finally will set it as an argument to the handle request method which is highlighted below now before we see what",
    "start": "1422080",
    "end": "1428400"
  },
  {
    "text": "this handle request method is doing let's take a look on the request class",
    "start": "1428400",
    "end": "1433440"
  },
  {
    "text": "which is actually abstracted and it's extended by the I request if we take a look closer we're going to to see that",
    "start": "1433440",
    "end": "1439039"
  },
  {
    "text": "has a fi an intent uh which we can set I guess using",
    "start": "1439039",
    "end": "1444240"
  },
  {
    "text": "the Constructor of uh this class so now moving back to how this object is",
    "start": "1444240",
    "end": "1451840"
  },
  {
    "text": "handled by the handle request that we saw before so it will finally inspect it",
    "start": "1451840",
    "end": "1458080"
  },
  {
    "text": "if it's of type I request and uh it will be used as an argument to the start",
    "start": "1458080",
    "end": "1463799"
  },
  {
    "text": "activity method so we have a textbook case of an Direction the specific case",
    "start": "1463799",
    "end": "1469640"
  },
  {
    "text": "and how we can exploit this specific uh code",
    "start": "1469640",
    "end": "1475440"
  },
  {
    "text": "here uh create uh use the create package context in order to obtain the class",
    "start": "1475559",
    "end": "1480760"
  },
  {
    "text": "loader of this target package then load the I request class create a malicious",
    "start": "1480760",
    "end": "1487440"
  },
  {
    "text": "intent let's call it intent one the first intent create an I request object",
    "start": "1487440",
    "end": "1492679"
  },
  {
    "text": "where we uh assign the in first intent the malicious one create a second intent",
    "start": "1492679",
    "end": "1499919"
  },
  {
    "text": "which we call which we add an extra request extra and we attach the specific object and finally use the start",
    "start": "1499919",
    "end": "1506600"
  },
  {
    "text": "activity with the second request in order to get our intent redirection as I said",
    "start": "1506600",
    "end": "1512399"
  },
  {
    "text": "before now the next uh showcase is about uh is about account",
    "start": "1512399",
    "end": "1519480"
  },
  {
    "text": "hijacking and uh as I said before account hijacking is one of the most common uh impact when it comes to these",
    "start": "1519480",
    "end": "1526520"
  },
  {
    "text": "kind of attacks so once again this cipit is taken from an exported component and",
    "start": "1526520",
    "end": "1532760"
  },
  {
    "text": "what happens here is that this component checks if the bundle is null I mean the",
    "start": "1532760",
    "end": "1538360"
  },
  {
    "text": "argument is null uh which is going to be null uh in case the activity was just created so",
    "start": "1538360",
    "end": "1545240"
  },
  {
    "text": "then it will inspect the incoming intent if it contains a request which is called",
    "start": "1545240",
    "end": "1551440"
  },
  {
    "text": "Insider this supposed to be uh an article collection fragment",
    "start": "1551440",
    "end": "1556720"
  },
  {
    "text": "instance and let's see what this article collection fragment instance is actually so it is a an",
    "start": "1556720",
    "end": "1562960"
  },
  {
    "text": "Insider class implements Parable it's Parable class it has two Fields a",
    "start": "1562960",
    "end": "1568520"
  },
  {
    "text": "collection URL and a con uh which we can set of course using the Constructor of",
    "start": "1568520",
    "end": "1575080"
  },
  {
    "text": "this class so when we create such an object",
    "start": "1575080",
    "end": "1580240"
  },
  {
    "text": "and we send to this sub this sub will adapt The Collection URL the URL that you saw before and we'll send there an",
    "start": "1580240",
    "end": "1585720"
  },
  {
    "text": "authenticated request which includes the users uh token how we can exploit that",
    "start": "1585720",
    "end": "1592039"
  },
  {
    "text": "once again steps are pretty much the same use the create package context to obtain a class loader instance of this",
    "start": "1592039",
    "end": "1598399"
  },
  {
    "text": "app load The Insider class create a nil toin of this class",
    "start": "1598399",
    "end": "1604520"
  },
  {
    "text": "using a malicious url url that we control and uh create an intent which",
    "start": "1604520",
    "end": "1609720"
  },
  {
    "text": "has the nextra which called The Insider and finally send it to the Target APK so",
    "start": "1609720",
    "end": "1614840"
  },
  {
    "text": "we got the user toen in our uh own server server the last case that I'm going to",
    "start": "1614840",
    "end": "1621600"
  },
  {
    "text": "talk about uh so there are many cases actually where in order to exploit a",
    "start": "1621600",
    "end": "1627399"
  },
  {
    "text": "specific let's say vulnerability or a specific uh field we have to provide",
    "start": "1627399",
    "end": "1633120"
  },
  {
    "text": "some additional uh object an additional object as an argument or else uh our",
    "start": "1633120",
    "end": "1638799"
  },
  {
    "text": "exploit will fail so it was about uh few months ago that I read the post about uh",
    "start": "1638799",
    "end": "1645279"
  },
  {
    "text": "an issue in the jetpack Library which may allow an attacker to not necessarily",
    "start": "1645279",
    "end": "1651200"
  },
  {
    "text": "an attacker but someone to initialize fragments even if those fragments were",
    "start": "1651200",
    "end": "1657000"
  },
  {
    "text": "not did not belong to exported activities or to exported components this is actually a textbook",
    "start": "1657000",
    "end": "1663480"
  },
  {
    "text": "Showcase of uh what I just said so we have such a fragment which we take a",
    "start": "1663480",
    "end": "1670480"
  },
  {
    "text": "look it takes quite few arguments including a URL and uh another one was called up",
    "start": "1670480",
    "end": "1677799"
  },
  {
    "text": "screen now if you notice this sub screen doesn't supposed to be null it has the",
    "start": "1677799",
    "end": "1683399"
  },
  {
    "text": "nullable set to false and it is of type screen so if we try to exploit the URL",
    "start": "1683399",
    "end": "1689240"
  },
  {
    "text": "assuming that uh this fragment will try to uh this actually is a web view so I",
    "start": "1689240",
    "end": "1694679"
  },
  {
    "text": "will try to load this URL and send the user tokens there if we try to exploit",
    "start": "1694679",
    "end": "1700200"
  },
  {
    "text": "that we're going to get the following uh crash which is expected due to the fact",
    "start": "1700200",
    "end": "1707320"
  },
  {
    "text": "that uh the argument that I said before is required for this exploit to succeed",
    "start": "1707320",
    "end": "1712360"
  },
  {
    "text": "so the only thing that we have to do in our case in this case at least is to create a serializable of this class of",
    "start": "1712360",
    "end": "1719120"
  },
  {
    "text": "uh an instance of this class the screen class which is actually serializable the payload is not here is",
    "start": "1719120",
    "end": "1725000"
  },
  {
    "text": "the URL that I said before uh it's pretty much simple we can even use the first method I told you",
    "start": "1725000",
    "end": "1731279"
  },
  {
    "text": "just uh reconstruct the full qualified name and so on all right so when uh this",
    "start": "1731279",
    "end": "1738320"
  },
  {
    "text": "fragment that I said before receives the specific intent it will take the URL it",
    "start": "1738320",
    "end": "1744919"
  },
  {
    "text": "will fetch the URL and send there once again an authenticated request which includes the users tokens how how we can",
    "start": "1744919",
    "end": "1752399"
  },
  {
    "text": "exploit this uh type of vulnerability once again the steps are",
    "start": "1752399",
    "end": "1759919"
  },
  {
    "text": "pretty much the same create an instance uh uh no obtain first of all the class",
    "start": "1759919",
    "end": "1765440"
  },
  {
    "text": "loader uh of the other app uh load the screen class that we saw",
    "start": "1765440",
    "end": "1770799"
  },
  {
    "text": "before which is serializable in this case create a screen",
    "start": "1770799",
    "end": "1775840"
  },
  {
    "text": "instance create an intent which uh we assign the up screen and the URL",
    "start": "1775840",
    "end": "1783720"
  },
  {
    "text": "extra that's",
    "start": "1783760",
    "end": "1787159"
  },
  {
    "text": "again and the final user start activity in order to send the intent to the",
    "start": "1790799",
    "end": "1796320"
  },
  {
    "text": "vulnerable app so we have once again uh and account hijacking in the specific",
    "start": "1796320",
    "end": "1802320"
  },
  {
    "text": "case all right so this I guess summarize what uh I just uh yeah",
    "start": "1802320",
    "end": "1811039"
  },
  {
    "text": "so some issues here all right so the first uh key",
    "start": "1812039",
    "end": "1818440"
  },
  {
    "text": "takeaway you don't own your class loer what I mean by that is um of course you",
    "start": "1818440",
    "end": "1823600"
  },
  {
    "text": "own your code you can change it modify it do pretty much whatever you want with it but it's uh hard if not impossible to",
    "start": "1823600",
    "end": "1832440"
  },
  {
    "text": "prevent someone from using it and uh this of course includes boring your apps",
    "start": "1832440",
    "end": "1838720"
  },
  {
    "text": "class loader and start to creating to create instances of your uh classes the",
    "start": "1838720",
    "end": "1844519"
  },
  {
    "text": "next one is to avoid exposing Parable sourc realizable object in exposed",
    "start": "1844519",
    "end": "1852039"
  },
  {
    "text": "components export components I don't actually see a reason of doing such a thing although I guess uh developers",
    "start": "1852039",
    "end": "1860880"
  },
  {
    "text": "have pretty much uh valid reasons which I'm not aware I guess but if you have to",
    "start": "1860880",
    "end": "1866000"
  },
  {
    "text": "do so so if you have to do such a thing make sure uh to take the appropriate measures in order to protect these kind",
    "start": "1866000",
    "end": "1871760"
  },
  {
    "text": "of uh objects and be extra cautious with the data that they may contain since since as I said before they may",
    "start": "1871760",
    "end": "1878679"
  },
  {
    "text": "originate from untrusted entities last thing uh as you may",
    "start": "1878679",
    "end": "1884679"
  },
  {
    "text": "noticed this type of vulnerability requires another app to be installed on uh the same",
    "start": "1884679",
    "end": "1890960"
  },
  {
    "text": "device and here comes the other misconception which uh I get even unfortunately when I uh discuss these",
    "start": "1890960",
    "end": "1898159"
  },
  {
    "text": "kind of issues with uh security engineers and this is what is the",
    "start": "1898159",
    "end": "1903320"
  },
  {
    "text": "likelihood of someone downloading and installing a an app a malicious app which can actually",
    "start": "1903320",
    "end": "1909840"
  },
  {
    "text": "exploit the specific uh let's say vulnerability so let me uh remind you",
    "start": "1909840",
    "end": "1915919"
  },
  {
    "text": "that uh Play Store issues a warning for a vulnerability",
    "start": "1915919",
    "end": "1921600"
  },
  {
    "text": "type which requires the third party app to be installed on the same device the intend direction that we saw before so I",
    "start": "1921600",
    "end": "1927080"
  },
  {
    "text": "guess Play Store and Google don't take this kind of things lightly from my side",
    "start": "1927080",
    "end": "1932519"
  },
  {
    "text": "I would say that it is uh a matter of how much you trust millions of apps which are uh",
    "start": "1932519",
    "end": "1939799"
  },
  {
    "text": "let's say published in various marketplaces and they're downloaded and installed by millions of users daily so",
    "start": "1939799",
    "end": "1946000"
  },
  {
    "text": "I wouldn't say that it's uh a matter of if such a thing may happen but when such a thing may happen so if you respect",
    "start": "1946000",
    "end": "1954440"
  },
  {
    "text": "your user privacy and safety and you think you might have such an issue make sure to mitigate these kind of issues as",
    "start": "1954440",
    "end": "1961639"
  },
  {
    "text": "soon as possible and with that uh",
    "start": "1961639",
    "end": "1966960"
  },
  {
    "text": "concluded and I will be uh if you have any uh questions I can take",
    "start": "1966960",
    "end": "1974120"
  },
  {
    "text": "them thank you very much [Applause]",
    "start": "1974120",
    "end": "1981010"
  }
]