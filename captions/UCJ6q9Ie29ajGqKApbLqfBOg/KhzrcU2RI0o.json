[
  {
    "text": "okay so hello everyone and thank you very much for coming today we are going to see a research that we and we've",
    "start": "60",
    "end": "7710"
  },
  {
    "text": "conducted last year on Qualcomm virus code for Android and so our agenda for",
    "start": "7710",
    "end": "13349"
  },
  {
    "text": "today first we will speak about chips generally add a location in the",
    "start": "13349",
    "end": "19350"
  },
  {
    "text": "ecosystem of Android how they fix and affect the overall security of Android and then we will focus small Qualcomm as",
    "start": "19350",
    "end": "27420"
  },
  {
    "text": "a chipset and if you sum of its different subsystems afterwards will",
    "start": "27420",
    "end": "34079"
  },
  {
    "text": "reveal a new not anymore the vulnerabilities that we found including",
    "start": "34079",
    "end": "39719"
  },
  {
    "text": "a video name of one of them and finally we will discuss some streaking point for",
    "start": "39719",
    "end": "46140"
  },
  {
    "text": "in the security of Android and ideas how to improve it so 30 seconds about myself",
    "start": "46140",
    "end": "52800"
  },
  {
    "text": "and my name is Adam donenfeld I've been a security researcher for years and mainly the mobile field but I've done",
    "start": "52800",
    "end": "60480"
  },
  {
    "text": "some this is covered as well I really done a security assessment and exploitation right now and now I work",
    "start": "60480",
    "end": "67790"
  },
  {
    "text": "for in Tesla security researcher for Android and in my free time I also a",
    "start": "67790",
    "end": "73439"
  },
  {
    "text": "study German additionally I would like to think abortion done your body and",
    "start": "73439",
    "end": "79439"
  },
  {
    "text": "powerful burn goals for helping me and supporting me during the hard moments in",
    "start": "79439",
    "end": "85020"
  },
  {
    "text": "the research so let's talk about Android and the energetic architecture the",
    "start": "85020",
    "end": "91710"
  },
  {
    "text": "Android supply chain consists of very few fundamental players we all know first one is the Linux kernel with",
    "start": "91710",
    "end": "99119"
  },
  {
    "text": "humidification like binder for example and then we have the Android project",
    "start": "99119",
    "end": "104520"
  },
  {
    "text": "which is exclusively developed by Google but also third-party contributors and",
    "start": "104520",
    "end": "111000"
  },
  {
    "text": "patches amplifications and we also have the OEMs like Samsung LG HTC associate",
    "start": "111000",
    "end": "118409"
  },
  {
    "text": "many others but that's not completely there is another player that is often",
    "start": "118409",
    "end": "124500"
  },
  {
    "text": "are estimated for its effect on the security of Android chips it and the",
    "start": "124500",
    "end": "131459"
  },
  {
    "text": "chips a very important fall in the supply chain of Android for two main reasons",
    "start": "131459",
    "end": "137870"
  },
  {
    "text": "first of all most of them unification are used most of the of the chipset",
    "start": "137870",
    "end": "143239"
  },
  {
    "text": "modifications are usually very essential and in a very low level in the system",
    "start": "143239",
    "end": "148430"
  },
  {
    "text": "and that means that if we find the security but it often leads to a game",
    "start": "148430",
    "end": "154069"
  },
  {
    "text": "over in the persuasion of privilege escalations in Android now additionally since chipsets usually distribute the",
    "start": "154069",
    "end": "162530"
  },
  {
    "text": "patch and of too many different OEMs it means that the single vulnerability in",
    "start": "162530",
    "end": "169160"
  },
  {
    "text": "the chipset code is most likely affecting multiple OMS and supposing a",
    "start": "169160",
    "end": "174769"
  },
  {
    "text": "very larger risk than a vulnerability in just om code now let's see I know that",
    "start": "174769",
    "end": "182450"
  },
  {
    "text": "the market is fragmented very equally and not here we can see here that",
    "start": "182450",
    "end": "188030"
  },
  {
    "text": "Qualcomm dominates the market and it is the most popular arm and chips chips at",
    "start": "188030",
    "end": "195109"
  },
  {
    "text": "a manufacturer and when they was there for a very interesting target for our research so let's talk about welcome",
    "start": "195109",
    "end": "203769"
  },
  {
    "text": "Qualcomm has a very large impact on over system in fact in fact there are a lot",
    "start": "203769",
    "end": "209810"
  },
  {
    "text": "of different subsystems which are completely written by Qualcomm each one",
    "start": "209810",
    "end": "215090"
  },
  {
    "text": "of these subsystems is a great place to start looking for vulnerabilities and if",
    "start": "215090",
    "end": "220099"
  },
  {
    "text": "the system is if the component is low-level enough in the whole system one bug would probably be enough to",
    "start": "220099",
    "end": "226790"
  },
  {
    "text": "completely compromise the device and that's without mentioning components",
    "start": "226790",
    "end": "231799"
  },
  {
    "text": "that have been modified to satisfy the requirements of Qualcomm and let's see",
    "start": "231799",
    "end": "237319"
  },
  {
    "text": "an example of one of these so our first vulnerability and we call it as minion",
    "start": "237319",
    "end": "244370"
  },
  {
    "text": "devil it's a vulnerability in the Ashman module action module is the acronym is",
    "start": "244370",
    "end": "251269"
  },
  {
    "text": "the Android a shared memory it's a proprietary memory allocator it is",
    "start": "251269",
    "end": "256849"
  },
  {
    "text": "implemented in the files fot here close sharing a memory between processes",
    "start": "256849",
    "end": "263120"
  },
  {
    "text": "and it reminds a little bit the Linux Sh a mechanism except that few differences",
    "start": "263120",
    "end": "270949"
  },
  {
    "text": "like it supports a file based API so the whole interact usage of this mechanism",
    "start": "270949",
    "end": "276860"
  },
  {
    "text": "is by file descriptors now Qualcomm a wanted to expand the nodded",
    "start": "276860",
    "end": "283910"
  },
  {
    "text": "functionality but the API of this mechanism the kernel API so it wanted to",
    "start": "283910",
    "end": "290030"
  },
  {
    "text": "easily receive information just by getting a file script own from the user",
    "start": "290030",
    "end": "295490"
  },
  {
    "text": "and that's one of the functions that Qualcomm added so as you can see here",
    "start": "295490",
    "end": "301520"
  },
  {
    "text": "let's see I don't think it works ok so as you can see here the function receives an input parameter of Alice",
    "start": "301520",
    "end": "308330"
  },
  {
    "text": "crypto and free output pointers and the what the function does is converting the",
    "start": "308330",
    "end": "315050"
  },
  {
    "text": "file descriptor so a struct file which is the internal representation of file in the Linux kernel then the function",
    "start": "315050",
    "end": "321860"
  },
  {
    "text": "checks if it is indeed a national file and if it is it just extract data from the private data of the file which is",
    "start": "321860",
    "end": "329570"
  },
  {
    "text": "the pointer to the U to the pointer to information and it depends on every type",
    "start": "329570",
    "end": "335810"
  },
  {
    "text": "of file so it just extract information to the output pointers and exits now a",
    "start": "335810",
    "end": "342620"
  },
  {
    "text": "question that each security researcher must must ask himself is how does",
    "start": "342620",
    "end": "348860"
  },
  {
    "text": "welcome verify that our F files crypto is indeed a nice inside the script all",
    "start": "348860",
    "end": "354460"
  },
  {
    "text": "know for those of you who are a little bit less familiar with the linux api what we what usually have is the way to",
    "start": "354460",
    "end": "363470"
  },
  {
    "text": "distinguish between different file types is by the operation handlers for example",
    "start": "363470",
    "end": "368990"
  },
  {
    "text": "let's take a circuit file in a modular file if we perform a write operation on",
    "start": "368990",
    "end": "375410"
  },
  {
    "text": "a circuit file obviously the behavior is different in comparison to a jeweler file now again everything is done by the",
    "start": "375410",
    "end": "382430"
  },
  {
    "text": "kernel so we can just compare pointers and eventually this handlers are just pointers so just compare a pointer and",
    "start": "382430",
    "end": "388610"
  },
  {
    "text": "we can see if the type of the file we think is is actually type way we were",
    "start": "388610",
    "end": "394010"
  },
  {
    "text": "looking for but welcome decided that it's boring to do the obvious and instead of doing that we",
    "start": "394010",
    "end": "402539"
  },
  {
    "text": "checked what's the name of the file and all if it's in if the file name is - man it might be Russian files no so so let's",
    "start": "402539",
    "end": "413460"
  },
  {
    "text": "see what we have here we need to create a file name called - ma'am on the top of",
    "start": "413460",
    "end": "419099"
  },
  {
    "text": "a mounting point now why on top of a mounting point because it's slash Ashman",
    "start": "419099",
    "end": "424110"
  },
  {
    "text": "and it gets the just get the full path from the mounting point so unfortunately",
    "start": "424110",
    "end": "432860"
  },
  {
    "text": "slash is the RAM disk and it is just read-only and any other mounting point",
    "start": "432860",
    "end": "438419"
  },
  {
    "text": "is not accessible for the untrusted application now again if we would beforehand we can just do whatever we",
    "start": "438419",
    "end": "445259"
  },
  {
    "text": "want but we are taking into perspective that we are unprivileged at this point so the way we found to overcome this",
    "start": "445259",
    "end": "453360"
  },
  {
    "text": "problem was using unique feature called OBB so obviously is a Parker binary blob",
    "start": "453360",
    "end": "460080"
  },
  {
    "text": "is deprecated but still works so few years ago if you would want if you would",
    "start": "460080",
    "end": "467159"
  },
  {
    "text": "have wanted to upload the nap to the google play it h8 mustn't be more than",
    "start": "467159",
    "end": "472440"
  },
  {
    "text": "100 100 megabytes so let's take for example games game steps extra sound",
    "start": "472440",
    "end": "478830"
  },
  {
    "text": "pictures however and they usually cross this limitation so what usually what",
    "start": "478830",
    "end": "483990"
  },
  {
    "text": "they used to do is first download the main functionality of the app and then externally download all the graphics and",
    "start": "483990",
    "end": "491099"
  },
  {
    "text": "textures so all would be is basically a file system that anyone can create",
    "start": "491099",
    "end": "497120"
  },
  {
    "text": "externally download and then just mount it so yeah it's a kind of fun so what we",
    "start": "497120",
    "end": "503310"
  },
  {
    "text": "did was first to created an OBB file system and report a file called Ashman",
    "start": "503310",
    "end": "509339"
  },
  {
    "text": "in it's a top and directory then we just mounted it we did we don't need any",
    "start": "509339",
    "end": "515789"
  },
  {
    "text": "permission for that by the way and then we have a file name called a Ashman on the top of a mounting point and we can",
    "start": "515789",
    "end": "521760"
  },
  {
    "text": "just send it to my channel and have fun",
    "start": "521760",
    "end": "526250"
  },
  {
    "text": "okay now work to the next example in a",
    "start": "528680",
    "end": "534059"
  },
  {
    "text": "completely different module again by the mast of this asteroid and about",
    "start": "534059",
    "end": "539910"
  },
  {
    "text": "disclosure and this is a very important point to during the presentation we reported the vulnerability back in April",
    "start": "539910",
    "end": "548370"
  },
  {
    "text": "and Qualcomm confirmed that is it is indeed a vulnerability in months later",
    "start": "548370",
    "end": "553649"
  },
  {
    "text": "which is reasonable and then they release the patch in 28th of July but",
    "start": "553649",
    "end": "560069"
  },
  {
    "text": "even though it was public since its 28th of July to date there was a public",
    "start": "560069",
    "end": "565980"
  },
  {
    "text": "advisory we will fix it only in the 6th of September so everyone in the road",
    "start": "565980",
    "end": "571860"
  },
  {
    "text": "head or more than a month to see the vulnerability explore it and you know",
    "start": "571860",
    "end": "577439"
  },
  {
    "text": "still that I do hacker stuff so going to the next vulnerability in a completely",
    "start": "577439",
    "end": "583769"
  },
  {
    "text": "different module so this one is the IPS IPC ultra module it is an IPC mechanism",
    "start": "583769",
    "end": "590100"
  },
  {
    "text": "that was written XK by Qualcomm it is not it should not be accessible from an",
    "start": "590100",
    "end": "596009"
  },
  {
    "text": "untrusted application and it is it is not very accessible now but it was and",
    "start": "596009",
    "end": "602569"
  },
  {
    "text": "Google just added an excellent tool to block it so this IPC mechanism is just",
    "start": "602569",
    "end": "611069"
  },
  {
    "text": "socket safe assembly number 27 AF MSM IPC and it's you can just send receive",
    "start": "611069",
    "end": "617610"
  },
  {
    "text": "messages to other sockets in the family in the absolutely but it has fuel cool",
    "start": "617610",
    "end": "623790"
  },
  {
    "text": "features that we are going to see freedom is for example you can whitelist",
    "start": "623790",
    "end": "628860"
  },
  {
    "text": "or black or blacklist a sockets based on group IDs which is very interesting if",
    "start": "628860",
    "end": "634620"
  },
  {
    "text": "you want to prevent unprivileged processes from talking to you and another feature that we are going to go",
    "start": "634620",
    "end": "642660"
  },
  {
    "text": "to see is monitoring the system anyone in the system could just monitor",
    "start": "642660",
    "end": "648509"
  },
  {
    "text": "creation or destruction of this endpoints and well calls my opinion now the best thing about it requires no",
    "start": "648509",
    "end": "655439"
  },
  {
    "text": "permission to use so and there are four types of this socket",
    "start": "655439",
    "end": "661590"
  },
  {
    "text": "a client's port control port IRS support and server port we are not going to talk about IRS support and server fault",
    "start": "661590",
    "end": "668190"
  },
  {
    "text": "because they required high permission speeds so each time we create a socket",
    "start": "668190",
    "end": "674340"
  },
  {
    "text": "it is by default the client port and transport is just the socket that can send and receive data and if you wanted",
    "start": "674340",
    "end": "681810"
  },
  {
    "text": "the control port we had to issue Nayak tail and then our client port will be converted to a control port now how does",
    "start": "681810",
    "end": "688950"
  },
  {
    "text": "this how does this look in the channel this is the function that handles iocked",
    "start": "688950",
    "end": "694380"
  },
  {
    "text": "a request it's very risk the restrictive and straightforward every time you issue an",
    "start": "694380",
    "end": "700110"
  },
  {
    "text": "axle on the system it locks the socket so we cannot issue to excels at the same time and in the socket and according to",
    "start": "700110",
    "end": "709380"
  },
  {
    "text": "our request it does stuff so if we issue IPC well trioxide bankotsu port our",
    "start": "709380",
    "end": "715260"
  },
  {
    "text": "socket will be converted from whatever it is to at LAN port that's the code",
    "start": "715260",
    "end": "721890"
  },
  {
    "text": "that converts the socket when I say convert it just means take a a socket",
    "start": "721890",
    "end": "728040"
  },
  {
    "text": "from at least eight and move it to this B now second because the laser doesn't",
    "start": "728040",
    "end": "734190"
  },
  {
    "text": "walk on the screen wait so this is just a lock to the client port socket to the",
    "start": "734190",
    "end": "742500"
  },
  {
    "text": "list then we take the object out from the client port from the client fault list we unlock the sock we unlock the",
    "start": "742500",
    "end": "748260"
  },
  {
    "text": "list we lock the console port list we add our objects to the control port list then we unlock it so pretty",
    "start": "748260",
    "end": "756300"
  },
  {
    "text": "straightforward but there is a vulnerability and we are going to see it now it's kind of how to follow but we",
    "start": "756300",
    "end": "763080"
  },
  {
    "text": "really try to make it as close as possible so we are going to convert this object to a control port so the first",
    "start": "763080",
    "end": "770310"
  },
  {
    "text": "line the first command is to lock the client list and then we take the object out from his list and now it's not in",
    "start": "770310",
    "end": "777840"
  },
  {
    "text": "any list then we unlock it we unlock the client list we lock the control list we",
    "start": "777840",
    "end": "782850"
  },
  {
    "text": "add the object to the control list and we unlock it not so complicated and",
    "start": "782850",
    "end": "789390"
  },
  {
    "text": "there was nothing wrong with the flow that we saw here but there's always this but what happens",
    "start": "789390",
    "end": "796240"
  },
  {
    "text": "when we convert control port to control port George no limitation for that so",
    "start": "796240",
    "end": "802000"
  },
  {
    "text": "let's examine the code we lock the client list we take the object out from his list which is not locked we unlock",
    "start": "802000",
    "end": "809259"
  },
  {
    "text": "the client list locking the control list putting the object back and unlocking",
    "start": "809259",
    "end": "814420"
  },
  {
    "text": "the control list now for those of you who missed it even though the control is is unlocked we",
    "start": "814420",
    "end": "820839"
  },
  {
    "text": "modify it and fun stuff can happen here so what we do what do we have here or",
    "start": "820839",
    "end": "828819"
  },
  {
    "text": "what is operatives come to the control post list is modified without a lock so",
    "start": "828819",
    "end": "834550"
  },
  {
    "text": "we can delete two objects simultaneously and therefore there is a race condition",
    "start": "834550",
    "end": "839560"
  },
  {
    "text": "here and which leads to easily now I",
    "start": "839560",
    "end": "845100"
  },
  {
    "text": "love the television to anyway and we know there is a explanation of how to",
    "start": "845100",
    "end": "852790"
  },
  {
    "text": "exploit what you forward step abilities but and because we added some stuff we",
    "start": "852790",
    "end": "859389"
  },
  {
    "text": "are going to skip it but you can find it online or asking later and now demo time so and what we're going to do because it",
    "start": "859389",
    "end": "867339"
  },
  {
    "text": "found it back in the end of 2015 and we are using Marshall in this case so we",
    "start": "867339",
    "end": "875170"
  },
  {
    "text": "are just installing our PLC we are going to see now that the device is not rooted",
    "start": "875170",
    "end": "881800"
  },
  {
    "text": "and that it is indeed a genuine killer version and that gives a marshmallow",
    "start": "881800",
    "end": "887709"
  },
  {
    "text": "Marshall device you can see here our build version release and we are not",
    "start": "887709",
    "end": "894819"
  },
  {
    "text": "rooted of course so there are no prerequisite is a saline lock is enforcing and we are not putting s foot",
    "start": "894819",
    "end": "906569"
  },
  {
    "text": "okay so our PLC ultimately installed",
    "start": "907319",
    "end": "913899"
  },
  {
    "text": "this towards assuage file in the system partition and it also creates a local service at port 1 3 3 7 just receive",
    "start": "913899",
    "end": "922360"
  },
  {
    "text": "texts and issues issues the dist excess root come s would comment so basically",
    "start": "922360",
    "end": "928420"
  },
  {
    "text": "netcat and then a system and put it just called a comment so we're going to see",
    "start": "928420",
    "end": "935050"
  },
  {
    "text": "now that system is normal there's nothing suspicious there and",
    "start": "935050",
    "end": "941490"
  },
  {
    "text": "that's our services port 127 is just not",
    "start": "941490",
    "end": "946990"
  },
  {
    "text": "there yet great so now we're going to actually",
    "start": "946990",
    "end": "954490"
  },
  {
    "text": "exploit the vulnerability it takes approximately three seconds to do that and but because the GUI you know lots of",
    "start": "954490",
    "end": "964540"
  },
  {
    "text": "stuff maybe six seconds okay so the",
    "start": "964540",
    "end": "970810"
  },
  {
    "text": "sweet file that we are going to place in the system partition is called su gang cause of my left to the German language",
    "start": "970810",
    "end": "976540"
  },
  {
    "text": "and so I don't you see it's so junk file which is a sweet file in order to see that the service is up we are now with",
    "start": "976540",
    "end": "984270"
  },
  {
    "text": "the entire I mean three seconds but cleans up from stuff okay",
    "start": "984270",
    "end": "996390"
  },
  {
    "text": "and this point device at this release file is placed the service is up and now",
    "start": "996390",
    "end": "1001880"
  },
  {
    "text": "we're going to see a difference you're still at one is fruit but SLE knocks on",
    "start": "1001880",
    "end": "1009480"
  },
  {
    "text": "your enforcing the system and we're going to see now that if we try to",
    "start": "1009480",
    "end": "1014610"
  },
  {
    "text": "connect to one four three seven we are not no longer getting connection refused and if we see the system",
    "start": "1014610",
    "end": "1020820"
  },
  {
    "text": "partition we see that we have a to gunk file at the bottom here and it is a sweet file and we can read the f-stop",
    "start": "1020820",
    "end": "1027900"
  },
  {
    "text": "which is only accessible to watch processes again we just connect to the service and we are buying a suit who am",
    "start": "1027900",
    "end": "1036720"
  },
  {
    "text": "i think also yeah cool so that was a limo three seconds exploit and again for",
    "start": "1036720",
    "end": "1043770"
  },
  {
    "text": "more details for how ideas just come at me after the presentation another very disappointing point about",
    "start": "1043770",
    "end": "1051360"
  },
  {
    "text": "the disclosure process of this vulnerability we reported it back in the",
    "start": "1051360",
    "end": "1057180"
  },
  {
    "text": "beginning of February 2016 a week later confirmed confirm the vulnerability and",
    "start": "1057180",
    "end": "1064110"
  },
  {
    "text": "release the patch in the end of April when I say release the patch I mean a",
    "start": "1064110",
    "end": "1069210"
  },
  {
    "text": "public test so everyone can see the vulnerability but still it took four",
    "start": "1069210",
    "end": "1074730"
  },
  {
    "text": "months four months till it was actually fixed on the most selective devices of",
    "start": "1074730",
    "end": "1080460"
  },
  {
    "text": "Google so four months for hackers to exploit it and nothing prevented them",
    "start": "1080460",
    "end": "1086910"
  },
  {
    "text": "from doing this ok another case but now before we go to the next case we have to",
    "start": "1086910",
    "end": "1094260"
  },
  {
    "text": "talk 30 seconds about a mechanism called IDR so IDR is the Linux kernel mechanism",
    "start": "1094260",
    "end": "1100350"
  },
  {
    "text": "and it it allows a mapping between safe IDs that's how I call them safe IDs and",
    "start": "1100350",
    "end": "1108330"
  },
  {
    "text": "kernel objects we need that because if we want to give the user mode agenda to some objects we don't want to reveal the",
    "start": "1108330",
    "end": "1115020"
  },
  {
    "text": "kernel address for the act so we just use the MEK this mechanism so how how it works in de facto these are ones to",
    "start": "1115020",
    "end": "1122580"
  },
  {
    "text": "create a an object a kernel object the kernel allocates data and initializes an",
    "start": "1122580",
    "end": "1128010"
  },
  {
    "text": "object so it has a channel address but we don't want to reveal this address to",
    "start": "1128010",
    "end": "1133260"
  },
  {
    "text": "the user so we just pass this address to the IDR mechanism get our mechanism now",
    "start": "1133260",
    "end": "1138660"
  },
  {
    "text": "maps between these kernel address and just a safe number and this safe number",
    "start": "1138660",
    "end": "1144330"
  },
  {
    "text": "is returned to the user and every time Duty we want to refer these objects perform comment on it or whatever it",
    "start": "1144330",
    "end": "1152100"
  },
  {
    "text": "will just send the colonel this number so it's very easy to use that and very -",
    "start": "1152100",
    "end": "1158760"
  },
  {
    "text": "very useful so with that said let's see the last module that were going to see",
    "start": "1158760",
    "end": "1167220"
  },
  {
    "text": "today - vulnerabilities in this model and the model is called cage a cell or kennel",
    "start": "1167220",
    "end": "1172920"
  },
  {
    "text": "graphic support layer written by welcome to supports on graphic stuffs and vulnerabilities it is a wrapper to the",
    "start": "1172920",
    "end": "1181710"
  },
  {
    "text": "GPU driver the advil driver and it communicates with the user mode and to",
    "start": "1181710",
    "end": "1187380"
  },
  {
    "text": "render graphics now let's see the actual attack surface here and first of all it",
    "start": "1187380",
    "end": "1192840"
  },
  {
    "text": "is accessible funny and privileges application even now because it's graphics and graphics of cool and everyone loves",
    "start": "1192840",
    "end": "1199160"
  },
  {
    "text": "graphics so we open it using the stopping a device called kgs L - a - 3d",
    "start": "1199160",
    "end": "1206840"
  },
  {
    "text": "0 no permissions are needed and it has 26 I hope tails which are apples to the",
    "start": "1206840",
    "end": "1213830"
  },
  {
    "text": "adrenal and adviser so let's see how it works this is just a part from the table",
    "start": "1213830",
    "end": "1221900"
  },
  {
    "text": "I took from the axis I hope today I will talk stable I showed it for brevity but you can see that it's very simple to",
    "start": "1221900",
    "end": "1229490"
  },
  {
    "text": "find the appropriate function from dioctyl and let's take for example",
    "start": "1229490",
    "end": "1234559"
  },
  {
    "text": "drowse CTX create which creates a new context in the system we'll see that",
    "start": "1234559",
    "end": "1240110"
  },
  {
    "text": "this function and receives a command and data data is completely controllable by",
    "start": "1240110",
    "end": "1247070"
  },
  {
    "text": "the user it is not user mode address but it is just copied from the user and we",
    "start": "1247070",
    "end": "1252200"
  },
  {
    "text": "see that eventually it takes the flags from our user parameters and it goes to",
    "start": "1252200",
    "end": "1257510"
  },
  {
    "text": "it calls another function called draw city X create in F stable what is a",
    "start": "1257510",
    "end": "1263600"
  },
  {
    "text": "stable a stable is the add value function table and we can see that there is a corresponding function and from the",
    "start": "1263600",
    "end": "1270860"
  },
  {
    "text": "F table from here so here we eventually all the functions that we have in kg",
    "start": "1270860",
    "end": "1276200"
  },
  {
    "text": "cell are just rappers - most of them are just rappers - a design of func a table",
    "start": "1276200",
    "end": "1281420"
  },
  {
    "text": "and to convince you that this is a very unsafe mechanism the two vulnerabilities",
    "start": "1281420",
    "end": "1287210"
  },
  {
    "text": "that we found didn't he didn't even we didn't even have to go to the Advent and visor they were just in the water in",
    "start": "1287210",
    "end": "1294650"
  },
  {
    "text": "wrapping of the user mode parameter so our first vulnerability we call it in",
    "start": "1294650",
    "end": "1300410"
  },
  {
    "text": "cocoa route the vulnerability is in in an object called sync source it is used to synchronize between the GPU and",
    "start": "1300410",
    "end": "1307400"
  },
  {
    "text": "currently running application absolutely themselves it is usually wrapped by our graphic engines like OpenGL and soon by",
    "start": "1307400",
    "end": "1316100"
  },
  {
    "text": "WebGL a 2.0 which means we could have two wheels late if we would find it in",
    "start": "1316100",
    "end": "1322700"
  },
  {
    "text": "two years you could have had remotes to the channels from the web now we don't have to know a lot about the app",
    "start": "1322700",
    "end": "1328610"
  },
  {
    "text": "to understand the vulnerability we just have to know how to create it and destroy it and as you saw before with",
    "start": "1328610",
    "end": "1334610"
  },
  {
    "text": "the idea mechanism at the idea mechanism this object is referent referenced by this safe ID so that's the function that",
    "start": "1334610",
    "end": "1343040"
  },
  {
    "text": "destroys the object theydo cleans it up and as you can see here and the user as",
    "start": "1343040",
    "end": "1350330"
  },
  {
    "text": "I said before the users controls the data for a pointer so we use the",
    "start": "1350330",
    "end": "1355970"
  },
  {
    "text": "controls this poem ID and what this function does is first checking whether",
    "start": "1355970",
    "end": "1362809"
  },
  {
    "text": "this is a real object in the system by calling cage assessing source gets and",
    "start": "1362809",
    "end": "1368090"
  },
  {
    "text": "then if it is if there is a sink sauce it drops the restaurant twice why twice",
    "start": "1368090",
    "end": "1374000"
  },
  {
    "text": "once for the creation and once again because this also takes reference so how",
    "start": "1374000",
    "end": "1379730"
  },
  {
    "text": "does it look let's say that the rest of the reference count of the object is 1 this function increases the rest one by",
    "start": "1379730",
    "end": "1386720"
  },
  {
    "text": "one so another of can be stool and then it is wrote one for the creation and once because we took a reference here",
    "start": "1386720",
    "end": "1392750"
  },
  {
    "text": "and then the object is freed but this",
    "start": "1392750",
    "end": "1397840"
  },
  {
    "text": "six lines of code are vulnerable to a race condition there is no pending a",
    "start": "1397840",
    "end": "1407299"
  },
  {
    "text": "pending check and there is no check that the object is about to be freed so and",
    "start": "1407299",
    "end": "1412360"
  },
  {
    "text": "what happens if two threads call this function at the same time and we have an",
    "start": "1412360",
    "end": "1417919"
  },
  {
    "text": "object with the ref count one and we just call this destroy I octal with the",
    "start": "1417919",
    "end": "1422929"
  },
  {
    "text": "same ID two different effort so first add the ref count is increased to two",
    "start": "1422929",
    "end": "1429220"
  },
  {
    "text": "the entry of count is dropped back to one then there is a context which if it we also increased the ref one by one",
    "start": "1429220",
    "end": "1435850"
  },
  {
    "text": "drops it again going back to a the debrief cond is dropped to zero and at",
    "start": "1435850",
    "end": "1442220"
  },
  {
    "text": "this point the object is freeze and reclaim able by any of your favorites heap can hit cons playing techniques but",
    "start": "1442220",
    "end": "1450710"
  },
  {
    "text": "12e is not done yet so we are going back to Fred B which now drops the ref count a on a free memory so here we can either",
    "start": "1450710",
    "end": "1459860"
  },
  {
    "text": "just drop a reference for one for objects or we can get the system to",
    "start": "1459860",
    "end": "1465260"
  },
  {
    "text": "destroy a different object and maybe control the destructive flow to get code execution now again to summarize it the",
    "start": "1465260",
    "end": "1473120"
  },
  {
    "text": "very simple vulnerability we create the stings of objects we know the idea number two first destroying the idea",
    "start": "1473120",
    "end": "1479840"
  },
  {
    "text": "this object the radicand is reduced to minus 1 and just after all once it is on",
    "start": "1479840",
    "end": "1486649"
  },
  {
    "text": "zero and we can just exploit the killer memory and have user softly okay the",
    "start": "1486649",
    "end": "1494419"
  },
  {
    "text": "closure so here it was reasonable we reported it in the photo fourth of April",
    "start": "1494419",
    "end": "1502070"
  },
  {
    "text": "and one month later Qualcomm confirmed the vulnerability and one more fighter",
    "start": "1502070",
    "end": "1507679"
  },
  {
    "text": "they released a public patch and on the same day Google deployed it so that devices not",
    "start": "1507679",
    "end": "1515179"
  },
  {
    "text": "the best story not the best release but reasonable okay now the last",
    "start": "1515179",
    "end": "1521710"
  },
  {
    "text": "vulnerability and the same mechanism again the cages cell mechanism we didn't even get to the advent one the last",
    "start": "1521710",
    "end": "1529779"
  },
  {
    "text": "vulnerability is called kangaroos and the vulnerability is in mapping between",
    "start": "1529779",
    "end": "1535730"
  },
  {
    "text": "user day user mode data to GPU day a data the edge GPU memory story each time",
    "start": "1535730",
    "end": "1543320"
  },
  {
    "text": "we map a data it is referenced by the idea mechanism and an object that",
    "start": "1543320",
    "end": "1549080"
  },
  {
    "text": "represents our mapping is also created it represents the range of the mapping the protection level will count and are",
    "start": "1549080",
    "end": "1557169"
  },
  {
    "text": "not interesting stuff so after we found some cocoa to say okay let's go to the",
    "start": "1557169",
    "end": "1564039"
  },
  {
    "text": "cleanup function maybe you can also find the vulnerability there and then we saw",
    "start": "1564039",
    "end": "1569480"
  },
  {
    "text": "this again you can see the user control the data and again by there is an ID for",
    "start": "1569480",
    "end": "1576590"
  },
  {
    "text": "the idea mechanism and we see that if there is a if there is an entry just",
    "start": "1576590",
    "end": "1582919"
  },
  {
    "text": "cleans it up now we were happy because you didn't see any spin lock or something like that and then we went to",
    "start": "1582919",
    "end": "1589490"
  },
  {
    "text": "share my free entry and unfortunately they will know right this time",
    "start": "1589490",
    "end": "1596090"
  },
  {
    "text": "so here every time we call it the story on one of these objects first atomically",
    "start": "1596090",
    "end": "1601520"
  },
  {
    "text": "it gets some field and it swaps it with yes and no it's the opposite to a value",
    "start": "1601520",
    "end": "1607460"
  },
  {
    "text": "and then only once it drops to refcon twice and again since this function in",
    "start": "1607460",
    "end": "1612860"
  },
  {
    "text": "this function takes the ref count on the object now it is dropped here but it",
    "start": "1612860",
    "end": "1619610"
  },
  {
    "text": "will only be cleaned up once so they load it appropriately and no",
    "start": "1619610",
    "end": "1624860"
  },
  {
    "text": "vulnerability here and in a desperation we said maybe the allocation function is",
    "start": "1624860",
    "end": "1630740"
  },
  {
    "text": "vulnerable somehow and then we so we went to the allocation function so the",
    "start": "1630740",
    "end": "1637100"
  },
  {
    "text": "way we map the data first we met we initialize the objects the W objects",
    "start": "1637100",
    "end": "1643100"
  },
  {
    "text": "that represent the mapping then they call kgs mm mm entry at each process",
    "start": "1643100",
    "end": "1648640"
  },
  {
    "text": "entry is the the object that represents the mapping and then it fills us",
    "start": "1648640",
    "end": "1654620"
  },
  {
    "text": "associated with an ideal number then it just maps it to the process and here",
    "start": "1654620",
    "end": "1660530"
  },
  {
    "text": "just like before and we didn't see any spin lock and there is a problem because",
    "start": "1660530",
    "end": "1666050"
  },
  {
    "text": "if we call at this point at this point after the idea log this object is",
    "start": "1666050",
    "end": "1672080"
  },
  {
    "text": "already referenceable from out of threads that means that at this point we can already call the cleanup function",
    "start": "1672080",
    "end": "1679190"
  },
  {
    "text": "and then this entire code right normal here this entire code is going to call",
    "start": "1679190",
    "end": "1686720"
  },
  {
    "text": "it with you it is going to call it reduce the entry object even though it might be already freed at this point so",
    "start": "1686720",
    "end": "1694630"
  },
  {
    "text": "let's see the normal use case of this object first of all a thread a Maps data to the",
    "start": "1694630",
    "end": "1701510"
  },
  {
    "text": "GPU so the kernel allocates objects were present snapping then it associates it",
    "start": "1701510",
    "end": "1707600"
  },
  {
    "text": "with an ID our number with our value then it initializes the object then if",
    "start": "1707600",
    "end": "1714200"
  },
  {
    "text": "you want to UM map to unmapped a this memory we just call and we just",
    "start": "1714200",
    "end": "1720710"
  },
  {
    "text": "call the risk I have tell the colonel checks where this ID is already in the system and if it is it simply",
    "start": "1720710",
    "end": "1728630"
  },
  {
    "text": "simple it simply freeze it from the channel but as I said before if this is",
    "start": "1728630",
    "end": "1735470"
  },
  {
    "text": "our current situation we know that our next number is going to be six here so we can call on the same time map in",
    "start": "1735470",
    "end": "1742850"
  },
  {
    "text": "unmapped so first you just map data and an object is allocated it is maps to the",
    "start": "1742850",
    "end": "1749240"
  },
  {
    "text": "idea items but then we unmet the data before it is already initialized so they",
    "start": "1749240",
    "end": "1756050"
  },
  {
    "text": "can detect where the number six is already in the system and since it since it is already in the",
    "start": "1756050",
    "end": "1761660"
  },
  {
    "text": "system it just freezes from the oh it just a freezes the memory like a free",
    "start": "1761660",
    "end": "1768020"
  },
  {
    "text": "and at this point this is a reclaimer later this is a reclaim herbal scramble",
    "start": "1768020",
    "end": "1774140"
  },
  {
    "text": "update data we can spray the killer heap and catch it but Fred a did not finish",
    "start": "1774140",
    "end": "1779300"
  },
  {
    "text": "it and now it will operate on free data which you control and we can manipulate to elevate our privileges and compromise",
    "start": "1779300",
    "end": "1786500"
  },
  {
    "text": "the system so again a summary of this",
    "start": "1786500",
    "end": "1792820"
  },
  {
    "text": "summary of this vulnerability first we map memory then we know which",
    "start": "1792820",
    "end": "1799700"
  },
  {
    "text": "idea number we are going to get so we three we are going to issue",
    "start": "1799700",
    "end": "1804710"
  },
  {
    "text": "I am mapping request and uh nothing request on and cannulate on two",
    "start": "1804710",
    "end": "1809930"
  },
  {
    "text": "different threads and before the mapping mapper thread is done a return from the",
    "start": "1809930",
    "end": "1814940"
  },
  {
    "text": "camera mode we are going to have users two three case in the function on the entry parameter and the picture of a",
    "start": "1814940",
    "end": "1822830"
  },
  {
    "text": "drunken group okay again this closure M it adds closure",
    "start": "1822830",
    "end": "1829250"
  },
  {
    "text": "procedure we reported the vulnerability at the same time in fourth of April to",
    "start": "1829250",
    "end": "1836840"
  },
  {
    "text": "Qualcomm and they confirmed it on the second of May and kokum worries it's",
    "start": "1836840",
    "end": "1842300"
  },
  {
    "text": "they on the same time within cocoa roots on the 6th of July but for some reason",
    "start": "1842300",
    "end": "1847400"
  },
  {
    "text": "Google fixed it only I want one month later on the first of August why we",
    "start": "1847400",
    "end": "1853490"
  },
  {
    "text": "don't know what and now we created an app in check point that checks whether",
    "start": "1853490",
    "end": "1859340"
  },
  {
    "text": "you you are vulnerable to any of this vulnerabilities more than half a million",
    "start": "1859340",
    "end": "1865429"
  },
  {
    "text": "downloads happened in just one month and we got we got some users could opt in to",
    "start": "1865429",
    "end": "1871879"
  },
  {
    "text": "send us some anonymous data and the statistics were taken in mid-august and",
    "start": "1871879",
    "end": "1876889"
  },
  {
    "text": "we're all and at this time all the vulnerabilities were already public and that's the information we saw so 63% of",
    "start": "1876889",
    "end": "1887179"
  },
  {
    "text": "the devices or vulnerable to at least one of these vulnerabilities again this",
    "start": "1887179",
    "end": "1892639"
  },
  {
    "text": "reveals a very bad situation where classic user to feel vulnerabilities a",
    "start": "1892639",
    "end": "1898070"
  },
  {
    "text": "public while not patched on most of the device in the world we had we take your",
    "start": "1898070",
    "end": "1904039"
  },
  {
    "text": "into consideration device into these statistics devices that were not vulnerable from the first place like",
    "start": "1904039",
    "end": "1910969"
  },
  {
    "text": "media tech devices that is didn't have the Qualcomm code so the number of the vulnerable devices that successfully",
    "start": "1910969",
    "end": "1918139"
  },
  {
    "text": "received the patch is probably even lower and next to interesting",
    "start": "1918139",
    "end": "1924919"
  },
  {
    "text": "information a number of vulnerable devices for each vulnerability and this",
    "start": "1924919",
    "end": "1932450"
  },
  {
    "text": "is the first one we shot we saw with the Ashman these are the two cages vulnerabilities and this is the one with",
    "start": "1932450",
    "end": "1939769"
  },
  {
    "text": "the IPC and as you can see I bet the reported the vulnerabilities back in",
    "start": "1939769",
    "end": "1946070"
  },
  {
    "text": "April for the for the booth free and for the equal about one the IPC over a",
    "start": "1946070",
    "end": "1953570"
  },
  {
    "text": "router was reported in February still half a year later almost half of the",
    "start": "1953570",
    "end": "1959869"
  },
  {
    "text": "market is vulnerable to the koala owner ability again I mean it's not supposed",
    "start": "1959869",
    "end": "1967669"
  },
  {
    "text": "to be it isn't supposed to take so much time especially when public patch by patches",
    "start": "1967669",
    "end": "1973580"
  },
  {
    "text": "by Qualcomm are already available and the last piece of information this",
    "start": "1973580",
    "end": "1980869"
  },
  {
    "text": "actually does it have to do with the for vulnerabilities we saw here but we can see just and this this this is just",
    "start": "1980869",
    "end": "1988969"
  },
  {
    "text": "based on half more than half a million devices in mid-august less than 10% of",
    "start": "1988969",
    "end": "1994879"
  },
  {
    "text": "the market head the latest batch and if we look just to",
    "start": "1994879",
    "end": "2000159"
  },
  {
    "text": "may May 2016 we see that more at Lee a sorry if you look free month before",
    "start": "2000159",
    "end": "2007029"
  },
  {
    "text": "August we see that most of the market did not even receive the security pass now this is it just means that I mean",
    "start": "2007029",
    "end": "2015369"
  },
  {
    "text": "this has to be changed all this entire purge mechanism and with that said and",
    "start": "2015369",
    "end": "2021330"
  },
  {
    "text": "suggestions first of all the supply chain of Android prevents actually",
    "start": "2021330",
    "end": "2027519"
  },
  {
    "text": "prevents security patches from being distributed efficiently to the influent user a chipset vulnerability is",
    "start": "2027519",
    "end": "2034840"
  },
  {
    "text": "extremely important in the case because every window has to adapt and to this",
    "start": "2034840",
    "end": "2040059"
  },
  {
    "text": "view distributed on is own secondly sending security patches to the device",
    "start": "2040059",
    "end": "2045940"
  },
  {
    "text": "once a month is not ideal once the device is infected is the vulnerable",
    "start": "2045940",
    "end": "2050980"
  },
  {
    "text": "sorry and the attacker doesn't necessarily have to exploit the vulnerability again and again",
    "start": "2050980",
    "end": "2057059"
  },
  {
    "text": "out-of-band patches are seen often in other platforms like and windows and",
    "start": "2057059",
    "end": "2063250"
  },
  {
    "text": "even by iOS which is also a mobile platform and finally I want to address",
    "start": "2063250",
    "end": "2069368"
  },
  {
    "text": "something that appeared a lot on the media following the release of this research verify apps so will oil verify",
    "start": "2069369",
    "end": "2077530"
  },
  {
    "text": "apps doesn't harm your device it requires a lot of collaboration with Google to work appropriately we also are",
    "start": "2077530",
    "end": "2085450"
  },
  {
    "text": "the publication of these vulnerabilities verify apps did not or any other",
    "start": "2085450",
    "end": "2090520"
  },
  {
    "text": "built-in mechanism cqt mechanism in android did not detect any of these bugs",
    "start": "2090520",
    "end": "2096520"
  },
  {
    "text": "it takes a lot of time and nice amount of efforts to actually distribute this",
    "start": "2096520",
    "end": "2101730"
  },
  {
    "text": "protection of the devices and it requires Google to have cooperation with us",
    "start": "2101730",
    "end": "2106780"
  },
  {
    "text": "so verify apps is not a magic mechanism that protects ads it just it requires a",
    "start": "2106780",
    "end": "2112690"
  },
  {
    "text": "lot of work to actually prevent new threat and that's it I hope you enjoy",
    "start": "2112690",
    "end": "2119470"
  },
  {
    "text": "the presentation and got some new insight and if you have any question about anything since this is the last",
    "start": "2119470",
    "end": "2126099"
  },
  {
    "text": "presentation for today we'll do it outside because the people negative talk clear oh thank",
    "start": "2126099",
    "end": "2132780"
  },
  {
    "text": "you [Applause]",
    "start": "2132780",
    "end": "2139630"
  }
]