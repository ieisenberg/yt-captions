[
  {
    "text": "for those of you who showed up um I'm Derek Soder this is Ryan Perma we're both with EI and today we're going",
    "start": "28840",
    "end": "35640"
  },
  {
    "text": "to talk about EI boot root why EI boot root because there's already another boot root out there and",
    "start": "35640",
    "end": "42680"
  },
  {
    "text": "uh you know do a little bit of name disambiguation so boot root is uh it's a",
    "start": "42680",
    "end": "51600"
  },
  {
    "text": "survey of the capabilities challenges and implementation excuse me implementation details of boot sector",
    "start": "51600",
    "end": "59199"
  },
  {
    "text": "code that infil so Windows n family kernel um now this is the first",
    "start": "59199",
    "end": "65760"
  },
  {
    "text": "privilege code drawn on the processor before any part of the operating system I me of course after the bios so um we",
    "start": "65760",
    "end": "73280"
  },
  {
    "text": "don't want to operate the machine we want the OS to operate the machine so the trick is how can we hand back",
    "start": "73280",
    "end": "79479"
  },
  {
    "text": "control to uh the operating system while still retaining the capacity for execution and also being able to insert",
    "start": "79479",
    "end": "86680"
  },
  {
    "text": "a couple modifications of our own um what we're going to talk about is the boot up process specifically how",
    "start": "86680",
    "end": "93280"
  },
  {
    "text": "it's pertinent to uh completing a project like this going to talk about",
    "start": "93280",
    "end": "98560"
  },
  {
    "text": "that includes a Windows startup as well as how the BIOS hands execution to various boot",
    "start": "98560",
    "end": "104560"
  },
  {
    "text": "media we're going to talk about EI boot root how it works um capabilities and",
    "start": "104560",
    "end": "110240"
  },
  {
    "text": "shortcomings and then we're going to demonstrate the EI boot root kit Network backdoor um highly highly recommended",
    "start": "110240",
    "end": "117520"
  },
  {
    "text": "knowledge is just something about Intel uh architecture real mode protected mode",
    "start": "117520",
    "end": "123320"
  },
  {
    "text": "and some about the windows kernel so anyways I'm going to hand it",
    "start": "123320",
    "end": "129000"
  },
  {
    "text": "off to Ryan to take us from boot into the",
    "start": "129000",
    "end": "134160"
  },
  {
    "text": "colonel good morning um let me uh just make sure I got",
    "start": "135760",
    "end": "142760"
  },
  {
    "text": "everything can I get uh can I get that first oh got it okay",
    "start": "143120",
    "end": "151560"
  },
  {
    "text": "um I'm I'm going to be talking today about the actual boot process it's going to give you some useful background we're",
    "start": "151560",
    "end": "157800"
  },
  {
    "text": "going to show a little bit of reference here uh to see how a machine goes from the powered off state to having a",
    "start": "157800",
    "end": "164440"
  },
  {
    "text": "running kernel and userland execution mode uh and and this will lay the groundwork for how we're going to",
    "start": "164440",
    "end": "171400"
  },
  {
    "text": "subvert this process and still main uh maintain control of our",
    "start": "171400",
    "end": "178239"
  },
  {
    "text": "code um uh booting up is kind of a a two-phase uh operation we have the the",
    "start": "178599",
    "end": "184840"
  },
  {
    "text": "BIOS level uh the actual Hardware interactions the the specs for what's necessary to boot up and then we have",
    "start": "184840",
    "end": "192080"
  },
  {
    "text": "the N process of boot up uh first of all I'm going to cover uh the the BIOS",
    "start": "192080",
    "end": "198560"
  },
  {
    "text": "partion here um to start out with the BIOS uh is designed to transfer",
    "start": "198560",
    "end": "205920"
  },
  {
    "text": "execution to some type of media uh that media can be a floppy drive a discat",
    "start": "205920",
    "end": "211239"
  },
  {
    "text": "drive a cdrom or using a a system called pxe a network uh boot uh there are other",
    "start": "211239",
    "end": "220120"
  },
  {
    "text": "types of uh boot media like USB and uh and things like Zip drives but we're",
    "start": "220120",
    "end": "225959"
  },
  {
    "text": "just not going to cover those in this their specs are a little bit different and not necessarily pertinent to the EI",
    "start": "225959",
    "end": "231680"
  },
  {
    "text": "boot root project uh once Windows starts up it uh",
    "start": "231680",
    "end": "237280"
  },
  {
    "text": "right now it almost always starts up from a hard drive uh that's been the history of NT uh the the problems in",
    "start": "237280",
    "end": "245280"
  },
  {
    "text": "making bootable media that could access NTFS and and deal with the whole uh n",
    "start": "245280",
    "end": "250879"
  },
  {
    "text": "boot process so it it starts with uh a booting from a hard drive you have your",
    "start": "250879",
    "end": "257359"
  },
  {
    "text": "hard drive Master boot record uh that trans uh transfers control to the the",
    "start": "257359",
    "end": "263400"
  },
  {
    "text": "initial Windows loader uh it's it's a bootstrapper that that sets the process in motion uh that that will load NT",
    "start": "263400",
    "end": "272440"
  },
  {
    "text": "loader uh which will then load OS loader NT detect and then finally NS kernel and",
    "start": "272440",
    "end": "280759"
  },
  {
    "text": "the associated pieces like the how uh which is a hard uh Hardware extraction layer and and the boot drivers and and",
    "start": "280759",
    "end": "288639"
  },
  {
    "text": "right now in our project the boot drivers are are a real key piece",
    "start": "288639",
    "end": "293840"
  },
  {
    "text": "so what uh we will go through these all more in depth here",
    "start": "293840",
    "end": "300199"
  },
  {
    "text": "uh basically uh almost everybody boots up off a disc drive in modern machines uh",
    "start": "300199",
    "end": "307800"
  },
  {
    "text": "your bios can select your boot order but nearly all the time you're booting up off of a disc",
    "start": "307800",
    "end": "313960"
  },
  {
    "text": "drive uh in booting up off a disc drive uh we always execute in real mode on an",
    "start": "313960",
    "end": "321560"
  },
  {
    "text": "Intel processor 16bit uh segmented address space uh on",
    "start": "321560",
    "end": "327800"
  },
  {
    "text": "Startup uh the the stack pointer uh is set to to zero uh uh uh 400 hex rather",
    "start": "327800",
    "end": "336680"
  },
  {
    "text": "um and the data uh the data segment for the uh boot uh is set into 40 hex",
    "start": "336680",
    "end": "342919"
  },
  {
    "text": "here uh that that's what bios uses uh for its data",
    "start": "342919",
    "end": "348319"
  },
  {
    "text": "area in um um in hard drives when they boot up",
    "start": "348319",
    "end": "356720"
  },
  {
    "text": "uh the very first sector is the master boot record the master Master boot record is a a table of sorts that's",
    "start": "356720",
    "end": "362280"
  },
  {
    "text": "designed to uh facilitate locating other partitions and and uh beginning the boot",
    "start": "362280",
    "end": "370960"
  },
  {
    "text": "process uh what happens is there's a small bit of code at the beginning that will first of all re uh relocate itself",
    "start": "370960",
    "end": "379880"
  },
  {
    "text": "uh to uh 600 hex so it moves itself out of the process area that it was in so",
    "start": "379880",
    "end": "386759"
  },
  {
    "text": "that uh the new code can be moved in uh it it creates a um bootable partition",
    "start": "386759",
    "end": "393000"
  },
  {
    "text": "from the partition table and copies that into the the first area there at uh 7",
    "start": "393000",
    "end": "401160"
  },
  {
    "text": "c00 um the oh the uh the partition boot sector",
    "start": "401520",
    "end": "409440"
  },
  {
    "text": "um it's always part of the operating system so this is where we get our next stage uh of the operating system uh",
    "start": "409440",
    "end": "417960"
  },
  {
    "text": "load I'd like to show you a little bit about the uh the NT uh Master boot",
    "start": "417960",
    "end": "424039"
  },
  {
    "text": "record um we got this from ntfs.sys",
    "start": "424039",
    "end": "429080"
  },
  {
    "text": "that's available and pretty well",
    "start": "449520",
    "end": "453560"
  },
  {
    "text": "understood uh now I'm going to cover some of the the booting from cdrom this",
    "start": "455919",
    "end": "461520"
  },
  {
    "text": "is a little bit different but in many ways it's similar um let's start with the",
    "start": "461520",
    "end": "466919"
  },
  {
    "text": "differences uh the the sector size on a CD ROM is actually much larger uh than",
    "start": "466919",
    "end": "472879"
  },
  {
    "text": "uh in the case of a hard drive uh you have up to 2K where a hard drive only",
    "start": "472879",
    "end": "478000"
  },
  {
    "text": "has 512 bytes uh available to it and that will that",
    "start": "478000",
    "end": "484000"
  },
  {
    "text": "that will give us a a little bit more sector read space um the data format uh",
    "start": "484000",
    "end": "490080"
  },
  {
    "text": "is a ISO 9660 uh there's also an ecma standard on",
    "start": "490080",
    "end": "495680"
  },
  {
    "text": "it um this is a a much more complex format than than the uh the hard drive",
    "start": "495680",
    "end": "501840"
  },
  {
    "text": "spec actually is uh additionally uh the spec for uh bootable CD ROMs is called",
    "start": "501840",
    "end": "511519"
  },
  {
    "text": "elito uh this is an additional spec on top of the iso of 9660 uh that that's specified for the",
    "start": "511519",
    "end": "519800"
  },
  {
    "text": "process that you need to boot uh a CD ROM now I'm going to cover some of the",
    "start": "519800",
    "end": "526160"
  },
  {
    "text": "El toito spec here um as it's pertinent to the the EI boot root",
    "start": "526160",
    "end": "534480"
  },
  {
    "text": "project we have uh uh this is the very first chunk of uh the the spec much like the MBR",
    "start": "535760",
    "end": "544600"
  },
  {
    "text": "this is a standardized format most of the stuff in here basically has to be one way for the uh for the device to",
    "start": "544600",
    "end": "550640"
  },
  {
    "text": "boot there's a little bit of wiggle room and and some specifics things I'd like to uh uh discuss are things like uh uh",
    "start": "550640",
    "end": "559560"
  },
  {
    "text": "right now we can cover things like sector size right now though this this layout part is not super important uh",
    "start": "559560",
    "end": "567560"
  },
  {
    "text": "most of this is all leading to a more specific piece um this is another",
    "start": "567560",
    "end": "573160"
  },
  {
    "text": "expansion uh we're covering things uh uh like uh the the volume descriptor",
    "start": "573160",
    "end": "580680"
  },
  {
    "text": "and the the spec version um the real important one here is located uh in the",
    "start": "580680",
    "end": "586279"
  },
  {
    "text": "boot record volume uh and that would be the pointer to the first sector of the",
    "start": "586279",
    "end": "591320"
  },
  {
    "text": "boot catalog the boot catalog is uh much like a boot partition uh in the MBR and",
    "start": "591320",
    "end": "598720"
  },
  {
    "text": "that's going to be our Focus the third part here is actually",
    "start": "598720",
    "end": "603959"
  },
  {
    "text": "the boot catalog we're covering um a lot of very important",
    "start": "603959",
    "end": "609440"
  },
  {
    "text": "pieces to tell us really how to boot uh it's akin to a bootup partition uh what",
    "start": "609440",
    "end": "616920"
  },
  {
    "text": "we have is the the type of media um the the platform ID a lot of uh",
    "start": "616920",
    "end": "623839"
  },
  {
    "text": "important stuff right now uh we uh we we actually uh because",
    "start": "623839",
    "end": "631240"
  },
  {
    "text": "bioses uh do not necessarily support the iso media in full um what we do is we",
    "start": "631240",
    "end": "639120"
  },
  {
    "text": "actually emulate a hard drive or a floppy Drive using interrupt 13 writes",
    "start": "639120",
    "end": "644279"
  },
  {
    "text": "and reads that the BIOS are very familiar with um the the piece that we have here uh the boot media type uh will",
    "start": "644279",
    "end": "653079"
  },
  {
    "text": "specify whether we're actually emulating a hard drive or a floppy drive this is so that all bosos uh can actually boot",
    "start": "653079",
    "end": "661079"
  },
  {
    "text": "on this spec uh additionally really important things here are we have the",
    "start": "661079",
    "end": "667680"
  },
  {
    "text": "the load segment in this case we're loading on segment zero uh we have uh",
    "start": "667680",
    "end": "672839"
  },
  {
    "text": "the sector count which is the number of uh sectors that we're going to be uh",
    "start": "672839",
    "end": "679200"
  },
  {
    "text": "actually be loading for our boot rut and then we have the load RBA which is uh",
    "start": "679200",
    "end": "685920"
  },
  {
    "text": "the exact start of where to load our code here so all of this is",
    "start": "685920",
    "end": "694160"
  },
  {
    "text": "basically um leading to uh oh I'm sorry uh we have Network boot here I'm missing",
    "start": "694160",
    "end": "700519"
  },
  {
    "text": "a slide um in the network boot uh this is",
    "start": "700519",
    "end": "705959"
  },
  {
    "text": "uh called pxe uh pxe is a pre-boot execution",
    "start": "705959",
    "end": "711519"
  },
  {
    "text": "environment there was a spec that was developed by Intel it works with the local ethernet uh driver to REM remote",
    "start": "711519",
    "end": "719240"
  },
  {
    "text": "boot things like dis list workstations and uh pretty much any uh modern",
    "start": "719240",
    "end": "724480"
  },
  {
    "text": "motherboard will support the pxe standard um to do pxe you need an",
    "start": "724480",
    "end": "730200"
  },
  {
    "text": "outside server that's going uh and and a network uh and this server is going to",
    "start": "730200",
    "end": "736040"
  },
  {
    "text": "serve as a bootp which is kind of a precursor to DHCP um and then tftp to serve the",
    "start": "736040",
    "end": "743920"
  },
  {
    "text": "image uh we have uh in a normal",
    "start": "743920",
    "end": "748959"
  },
  {
    "text": "situation you boot up your pxe driver on your bios uh will request an address",
    "start": "748959",
    "end": "756120"
  },
  {
    "text": "over bootp which is very similar to DHCP um and it will receive not only an",
    "start": "756120",
    "end": "761880"
  },
  {
    "text": "address but an IP of the host to tftp from and the name of the image that's",
    "start": "761880",
    "end": "767800"
  },
  {
    "text": "going to tftp so once it receives that address it's going to request out and",
    "start": "767800",
    "end": "774600"
  },
  {
    "text": "gather that tftp image load and operate on it um",
    "start": "774600",
    "end": "780320"
  },
  {
    "text": "um basically uh uh the tftp has uh as we know runs on UDP 69 is a pure UDP port",
    "start": "780320",
    "end": "787880"
  },
  {
    "text": "and you do need to be running a tftp server for this to work uh in in the boot process again this is very very",
    "start": "787880",
    "end": "795600"
  },
  {
    "text": "similar to booting a hard drive where we have uh we we start execution at 7",
    "start": "795600",
    "end": "802440"
  },
  {
    "text": "c0000 exactly like a hard drive uh the difference is that in our tftp load we",
    "start": "802440",
    "end": "807639"
  },
  {
    "text": "can pull down a about 500k which is typically bigger than we have in most",
    "start": "807639",
    "end": "813279"
  },
  {
    "text": "situations we really don't need that much but uh it's available if",
    "start": "813279",
    "end": "819079"
  },
  {
    "text": "necessary uh one thing that that we've noticed in in loading and playing with",
    "start": "819079",
    "end": "824199"
  },
  {
    "text": "this is that uh pxe unlike normal hard drive uh booths uh the initial registers",
    "start": "824199",
    "end": "831279"
  },
  {
    "text": "are sort of undefined they're kind of left in a in an odd state so if you're writing an image that you need to pxe",
    "start": "831279",
    "end": "837800"
  },
  {
    "text": "boot make sure that you clean up uh all your registers and set them to where you really want them to",
    "start": "837800",
    "end": "845040"
  },
  {
    "text": "be um this is basically a quick back and forth on how",
    "start": "845040",
    "end": "852560"
  },
  {
    "text": "a pxe boot actually works uh it's a it's just a simple packet dump uh just",
    "start": "852560",
    "end": "857720"
  },
  {
    "text": "showing the kind of communications are happening first the client boots up it has no IP address it issues a DHCP uh",
    "start": "857720",
    "end": "866320"
  },
  {
    "text": "Discovery uh to get its IP um and your DHCP server uh which in this",
    "start": "866320",
    "end": "872720"
  },
  {
    "text": "case is a pxe based DHCP and bootp server uh will respond and say hey this",
    "start": "872720",
    "end": "880600"
  },
  {
    "text": "is your IP this is going to be what you uh what you get uh uh and this is the",
    "start": "880600",
    "end": "887040"
  },
  {
    "text": "host that you're going to get it from uh the the actual request comes back and we",
    "start": "887040",
    "end": "892519"
  },
  {
    "text": "act the request to to validate the DHCP transaction um and and in again as part",
    "start": "892519",
    "end": "899519"
  },
  {
    "text": "of this dhtp some of the attributes are the various things like tftp host and uh",
    "start": "899519",
    "end": "905440"
  },
  {
    "text": "uh file name that you're going to download with that established the pxe client that you're booting from will",
    "start": "905440",
    "end": "912320"
  },
  {
    "text": "make a connection uh to a tftp server the tftp server uh will then feed you uh",
    "start": "912320",
    "end": "921120"
  },
  {
    "text": "the file that you have so it's a a a straight back and forth Val moding t uh",
    "start": "921120",
    "end": "926560"
  },
  {
    "text": "tfp uh once the file is uh finished downloading execution can",
    "start": "926560",
    "end": "933279"
  },
  {
    "text": "begin now I'd like to actually cover now now that we actually have our",
    "start": "933279",
    "end": "939480"
  },
  {
    "text": "media and our boot image all this was leading up to a single thing which is to get to uh how Windows is going to start",
    "start": "939480",
    "end": "946800"
  },
  {
    "text": "up this is all specs and real lowlevel stuff that is important uh very",
    "start": "946800",
    "end": "952920"
  },
  {
    "text": "important but standardized and there's not a lot of wiggle room there now we're at Windows land and this this is where",
    "start": "952920",
    "end": "959399"
  },
  {
    "text": "the heart of where EI boot rot comes",
    "start": "959399",
    "end": "963880"
  },
  {
    "text": "in the the windows uh startup the very first phase is a is a bootstrap loader",
    "start": "965279",
    "end": "971800"
  },
  {
    "text": "um this is a very small chunk of code that that's whole purpose is to get the",
    "start": "971800",
    "end": "978360"
  },
  {
    "text": "ball rolling so to speak um the very first thing it does is it acts sort of as an unpacker because of limited amount",
    "start": "978360",
    "end": "985560"
  },
  {
    "text": "of size that you have at this level you need to uh and the the length that",
    "start": "985560",
    "end": "990759"
  },
  {
    "text": "Windows is going to uh the very first thing it does is it loads the first 16",
    "start": "990759",
    "end": "997000"
  },
  {
    "text": "sectors uh 15 additional sectors at OD",
    "start": "997000",
    "end": "1002319"
  },
  {
    "text": "oo uh sector on z0 we're still in uh real mode here so we're working a",
    "start": "1002319",
    "end": "1008440"
  },
  {
    "text": "segmented uh uh address space here uh one one thing to note uh is that uh the",
    "start": "1008440",
    "end": "1016399"
  },
  {
    "text": "windows partition uh or the windows uh bootstrap loader actually makes use of",
    "start": "1016399",
    "end": "1024000"
  },
  {
    "text": "the IBM Microsoft n13 extensions these are sort of known uh as like LBA",
    "start": "1024000",
    "end": "1030319"
  },
  {
    "text": "extensions they're they're designed to handle very large discs uh so anything I",
    "start": "1030319",
    "end": "1036319"
  },
  {
    "text": "believe over 137 gab around there it it's necessary to actually use these uh",
    "start": "1036319",
    "end": "1043120"
  },
  {
    "text": "and Derek will get into a little bit more on uh on this a little bit later in relation to boot root",
    "start": "1043120",
    "end": "1049160"
  },
  {
    "text": "um we do then once this is up uh and loaded we pass on to uh the next uh",
    "start": "1049160",
    "end": "1057640"
  },
  {
    "text": "chunk of our bootstrap uh now we focus on loading the",
    "start": "1057640",
    "end": "1064440"
  },
  {
    "text": "anti loader ENT loader is the first very visible piece of n as you're",
    "start": "1064440",
    "end": "1070559"
  },
  {
    "text": "loading um we load this at 2,000 and because we're still in real",
    "start": "1070559",
    "end": "1077039"
  },
  {
    "text": "mode we're in a very limited execution environment we literally are not",
    "start": "1077039",
    "end": "1083240"
  },
  {
    "text": "offering any additional services to to ENT loader um and and this is all being",
    "start": "1083240",
    "end": "1088360"
  },
  {
    "text": "loaded into that 16 uh sector space that we have uh what we do have um is that in",
    "start": "1088360",
    "end": "1096120"
  },
  {
    "text": "that 16 sectors we we're actually only using or NT is actually only using",
    "start": "1096120",
    "end": "1102760"
  },
  {
    "text": "around 40% of that meaning that 60% is just idle space they could have got away",
    "start": "1102760",
    "end": "1107840"
  },
  {
    "text": "with uh allocating eight sectors instead of 16 but I guess uh they they decided",
    "start": "1107840",
    "end": "1113720"
  },
  {
    "text": "better safe than sary what we found is that that actually gives us some pre-allocated space that could be very",
    "start": "1113720",
    "end": "1120080"
  },
  {
    "text": "very useful for code that we",
    "start": "1120080",
    "end": "1124120"
  },
  {
    "text": "have now - loader um we're we're beginning uh on our path to actually",
    "start": "1126559",
    "end": "1132440"
  },
  {
    "text": "being a Windows machine at this point instead of just a simple Intel bios boot box um we this is the first time that we",
    "start": "1132440",
    "end": "1139960"
  },
  {
    "text": "enter protected mode we're still in 16 bit but we are now in protected mode for that we create a gdt an",
    "start": "1139960",
    "end": "1147280"
  },
  {
    "text": "IDT uh and we use these throughout pretty much the rest of the lowlevel",
    "start": "1147280",
    "end": "1153640"
  },
  {
    "text": "Windows start up uh another function of anti- loader is that we will wrap uh",
    "start": "1153640",
    "end": "1161640"
  },
  {
    "text": "various interupts inside a protected mode so that we can offer those Services down the line uh we'll do things like",
    "start": "1161640",
    "end": "1168320"
  },
  {
    "text": "video disc keyboard um the one the one that we're uh using a lot is dis uh M",
    "start": "1168320",
    "end": "1175799"
  },
  {
    "text": "much like uh in any interrupt uh system these are passed down to real mode from protective",
    "start": "1175799",
    "end": "1182919"
  },
  {
    "text": "mode uh the next stage is uh OS loader now OS loader is actually embedded",
    "start": "1182919",
    "end": "1190080"
  },
  {
    "text": "inside of n loader uh it it it is a full PE file uh although it's slightly munged",
    "start": "1190080",
    "end": "1199120"
  },
  {
    "text": "uh before Windows 2000 uh it's missing uh it's MZ and PE hter uh basic reverse",
    "start": "1199120",
    "end": "1206480"
  },
  {
    "text": "engineering tools like Ida uh can still process it and you can learn a lot by",
    "start": "1206480",
    "end": "1212440"
  },
  {
    "text": "looking at what OS loader is for the most part because it's embedded you don't really often see the OS loader but",
    "start": "1212440",
    "end": "1219840"
  },
  {
    "text": "it it's wholly possible in different versions of n to actually have that out there what we do then is that uh in this",
    "start": "1219840",
    "end": "1229320"
  },
  {
    "text": "uh an loader we dropped the OS loader and then we execute it in 32-bit",
    "start": "1229320",
    "end": "1235120"
  },
  {
    "text": "protected mode so now we're finally in the flat 4 gab address space that NT",
    "start": "1235120",
    "end": "1240200"
  },
  {
    "text": "itself will run inside of this is a quick rundown of the gdt",
    "start": "1240200",
    "end": "1247440"
  },
  {
    "text": "that uh NT loaders using uh this is the gdt that you're using across the board",
    "start": "1247440",
    "end": "1252760"
  },
  {
    "text": "through the startup process until uh until we're basically windows at that point uh konel hackers should take note",
    "start": "1252760",
    "end": "1260440"
  },
  {
    "text": "of this we have things like uh our our ring zero code data ring three code and",
    "start": "1260440",
    "end": "1265799"
  },
  {
    "text": "data and a variety of other pieces that are very similar to normal kernel although we're in 16bit uh we're using",
    "start": "1265799",
    "end": "1272440"
  },
  {
    "text": "16bit segments here um this is mostly for reference so uh you might want to just check your",
    "start": "1272440",
    "end": "1278559"
  },
  {
    "text": "slides on the book um what we have now is now we're",
    "start": "1278559",
    "end": "1283600"
  },
  {
    "text": "inside of os loader uh OS loader uh is doing the",
    "start": "1283600",
    "end": "1289000"
  },
  {
    "text": "first chunks of things that you would normally see inside of NT things like",
    "start": "1289000",
    "end": "1294640"
  },
  {
    "text": "the boot inii that have been around uh and dictate the loading uh behavior of",
    "start": "1294640",
    "end": "1301039"
  },
  {
    "text": "NT uh are all available and processed here it'll read that file in and cach",
    "start": "1301039",
    "end": "1306919"
  },
  {
    "text": "the results and use them throughout his process uh the very one of the first things it does is execute ect.com",
    "start": "1306919",
    "end": "1314480"
  },
  {
    "text": "now this is a a real mode application that uh that the purpose of is to",
    "start": "1314480",
    "end": "1320919"
  },
  {
    "text": "determine the underlying how and the underlying uh multiprocessor uh processor adness of the NT system it",
    "start": "1320919",
    "end": "1328840"
  },
  {
    "text": "gives it uh information on which n kernel and which hell to",
    "start": "1328840",
    "end": "1333919"
  },
  {
    "text": "load uh additionally we enable paging uh there's a a uh boot inii",
    "start": "1333919",
    "end": "1342200"
  },
  {
    "text": "option uh to handle uh a 3 gigabyte user space that that's processed and added",
    "start": "1342200",
    "end": "1349640"
  },
  {
    "text": "here uh we set up the typical virtual addresses available for the gdt IDT and",
    "start": "1349640",
    "end": "1356159"
  },
  {
    "text": "the the page tables again this is how the kernel will begin to reference this stuff um from the NTI detect um we will",
    "start": "1356159",
    "end": "1364600"
  },
  {
    "text": "load uh the appropriate how and NS kernel how is a head a hardware",
    "start": "1364600",
    "end": "1369760"
  },
  {
    "text": "abstraction layer uh various underlying Hardware compact HP uh dell that uses",
    "start": "1369760",
    "end": "1376919"
  },
  {
    "text": "specific chipset will have different hows uh and multiprocessor systems typically have",
    "start": "1376919",
    "end": "1382919"
  },
  {
    "text": "different NS kernels so you select based on the anos detect and we load them and",
    "start": "1382919",
    "end": "1389440"
  },
  {
    "text": "import any of the dependencies uh there are some like the boot video and uh and",
    "start": "1389440",
    "end": "1395720"
  },
  {
    "text": "whatnot that that need to be loaded for uh continu uh continuation of the boot",
    "start": "1395720",
    "end": "1401320"
  },
  {
    "text": "process uh we load them at their preferred uh base addresses uh and then",
    "start": "1401320",
    "end": "1407240"
  },
  {
    "text": "map them to the the appropriate virtual addresses um additionally OS loader will",
    "start": "1407240",
    "end": "1412600"
  },
  {
    "text": "load the registry um which is actually just a file in system 32 config system",
    "start": "1412600",
    "end": "1418840"
  },
  {
    "text": "it loads that and Maps it into memory so now the registry is available for further boot",
    "start": "1418840",
    "end": "1424679"
  },
  {
    "text": "processing uh finally it loads the NLS code pages and record fonts these are",
    "start": "1424679",
    "end": "1430440"
  },
  {
    "text": "like text space and unicode F uh character sets that you uh that you will",
    "start": "1430440",
    "end": "1436200"
  },
  {
    "text": "use uh if for if you're doing unic code text processing and stuff next up we",
    "start": "1436200",
    "end": "1443640"
  },
  {
    "text": "have um the boot drivers now this is a real important part here uh we actually",
    "start": "1443640",
    "end": "1451200"
  },
  {
    "text": "will create a a list uh or we we process uh uh the types of boot drivers now",
    "start": "1451200",
    "end": "1460080"
  },
  {
    "text": "these drivers are set up in the registry as as a type zero uh which indicates",
    "start": "1460080",
    "end": "1465200"
  },
  {
    "text": "that the at like Services they start up at boot type drivers happen before Services obviously",
    "start": "1465200",
    "end": "1471120"
  },
  {
    "text": "and right now we create a PS loaded module list uh which is a familiar",
    "start": "1471120",
    "end": "1476760"
  },
  {
    "text": "kernel structure for loaded drivers uh it also mirrors the the type of",
    "start": "1476760",
    "end": "1482039"
  },
  {
    "text": "structure that uh userland PS API and uh various other module list utilities from",
    "start": "1482039",
    "end": "1488399"
  },
  {
    "text": "Microsoft would do uh it's it's known as the the BL loader block uh next up we uh uh or just one",
    "start": "1488399",
    "end": "1496880"
  },
  {
    "text": "thing to note here rather is before Windows 2003 there was no actual uh alignment of these boot",
    "start": "1496880",
    "end": "1503440"
  },
  {
    "text": "drivers they just would load uh and they may not have been on a on a page or on a",
    "start": "1503440",
    "end": "1508640"
  },
  {
    "text": "a 64k alignment uh they're just simple uh file mappings of the drive so right",
    "start": "1508640",
    "end": "1514880"
  },
  {
    "text": "now basically we're map we're we're selecting the boot drivers and file mapping them into memory um we do not at",
    "start": "1514880",
    "end": "1523039"
  },
  {
    "text": "this point execute the boot drivers we just our purpose is to get them into uh",
    "start": "1523039",
    "end": "1529320"
  },
  {
    "text": "memory here so now we go to ntos Kernel which is uh ENT proper as most people",
    "start": "1529320",
    "end": "1537000"
  },
  {
    "text": "know it and NTS colel um and how are very",
    "start": "1537000",
    "end": "1542919"
  },
  {
    "text": "tightly integrated they uh they provide most of the base services for uh for NT",
    "start": "1542919",
    "end": "1549880"
  },
  {
    "text": "uh and for subsequent pieces so the boot process kind of goes like this uh the NS",
    "start": "1549880",
    "end": "1556760"
  },
  {
    "text": "kernel will select first of all the the TSS IDT and",
    "start": "1556760",
    "end": "1562399"
  },
  {
    "text": "gdt uh and take control of it at this point and uh NS kernel is there to stay",
    "start": "1562399",
    "end": "1568039"
  },
  {
    "text": "it's going to control this from uh now on uh we we then initialize the processors through the how and add uh a",
    "start": "1568039",
    "end": "1575960"
  },
  {
    "text": "bio support uh that will basically set up the processor so that we can continue",
    "start": "1575960",
    "end": "1581120"
  },
  {
    "text": "forward uh there may be one or more processors uh the the the final thing",
    "start": "1581120",
    "end": "1587320"
  },
  {
    "text": "that we're going to do is we're going to initialize the various kernel subsystems and in NT there's a lot of Kernel",
    "start": "1587320",
    "end": "1594399"
  },
  {
    "text": "subsystems and in this situation they actually uh although there's actually three phases one of them is much much",
    "start": "1594399",
    "end": "1601559"
  },
  {
    "text": "much less important and totally uh unimportant for the EI boot route talk",
    "start": "1601559",
    "end": "1607240"
  },
  {
    "text": "uh phase zero um basically uh it's a first pass uh it's not worrying about",
    "start": "1607240",
    "end": "1613159"
  },
  {
    "text": "dependencies it's just going through firing off a bunch of calls setting up a bunch of sub systems on their very base",
    "start": "1613159",
    "end": "1619039"
  },
  {
    "text": "level it calls into Ki system startup Ki initialized kernel and then finally into",
    "start": "1619039",
    "end": "1625360"
  },
  {
    "text": "exp uh initialized executive uh phase one and I I'll cover",
    "start": "1625360",
    "end": "1631399"
  },
  {
    "text": "more more of these uh in depth here phase one is the the actual initialization phase that does a variety",
    "start": "1631399",
    "end": "1639000"
  },
  {
    "text": "of uh startup sequences and mostly comes down to the actual ini uh initialization",
    "start": "1639000",
    "end": "1645520"
  },
  {
    "text": "code um basically it's in a separate system thread uh the boot drivers are",
    "start": "1645520",
    "end": "1651720"
  },
  {
    "text": "executed at this point so the driver entries uh and and they're set up and",
    "start": "1651720",
    "end": "1656919"
  },
  {
    "text": "now operational and then finally uh starts up user Land by executing",
    "start": "1656919",
    "end": "1664080"
  },
  {
    "text": "smss um phase two is the the phase that I was mentioning that's not really important it mostly deals with licensing",
    "start": "1664080",
    "end": "1670679"
  },
  {
    "text": "between Windows Server Windows workstation it it it's really just not",
    "start": "1670679",
    "end": "1676480"
  },
  {
    "text": "important for boot rot it does execute but it doesn't really control any",
    "start": "1676480",
    "end": "1682399"
  },
  {
    "text": "flow covering phase zero um we have a a fairly simple like uh call stack here um",
    "start": "1682399",
    "end": "1688760"
  },
  {
    "text": "basically the how will initialize the processor first uh it will cover uh",
    "start": "1688760",
    "end": "1694679"
  },
  {
    "text": "basically setting up spin locks and and registers and everything per processor",
    "start": "1694679",
    "end": "1700039"
  },
  {
    "text": "uh we'll we'll go initialize a kernel uh which will set off a chain of events uh",
    "start": "1700039",
    "end": "1705200"
  },
  {
    "text": "we we'll cover the a nit system with which uh we we cover the service descriptor table and the descriptor",
    "start": "1705200",
    "end": "1711919"
  },
  {
    "text": "table Shadow which anti kernel hackers that do any kind of hooking uh are very",
    "start": "1711919",
    "end": "1718000"
  },
  {
    "text": "familiar with uh we'll initialize the process uh for what will eventually",
    "start": "1718000",
    "end": "1724120"
  },
  {
    "text": "become the idle thread um so basically we create this process and this thread",
    "start": "1724120",
    "end": "1730240"
  },
  {
    "text": "and uh this is the thread that runs in the background at all times just running as Idle finally we're we're going to to",
    "start": "1730240",
    "end": "1737960"
  },
  {
    "text": "attempt to initialize our executive which is the n kernel the the heart of",
    "start": "1737960",
    "end": "1744320"
  },
  {
    "text": "NT again since this is Phase zero we're just kind of doing a shoot through on",
    "start": "1744320",
    "end": "1749600"
  },
  {
    "text": "this uh we'll uh we'll hit the the how an initialize some data structures there",
    "start": "1749600",
    "end": "1755519"
  },
  {
    "text": "uh and basically walk through things like uh the executive anit system the memory manager the object manager the",
    "start": "1755519",
    "end": "1762399"
  },
  {
    "text": "security manager and then uh basically the PS andit system is",
    "start": "1762399",
    "end": "1768799"
  },
  {
    "text": "the one that actually spins off the uh starts the the idle thread",
    "start": "1768799",
    "end": "1774518"
  },
  {
    "text": "here phase one is the the actual heart of where everything's happening here um",
    "start": "1775279",
    "end": "1781320"
  },
  {
    "text": "you see a lot of redundancy here we're actually shooting through a lot of this again to to take care of interdependencies in these startups so",
    "start": "1781320",
    "end": "1788200"
  },
  {
    "text": "we go through we we init the Hal again that covers things that we missed last time AIT the system object manager",
    "start": "1788200",
    "end": "1796399"
  },
  {
    "text": "basically we go down the the point we cover LPC which we didn't before um and then we start uh we we",
    "start": "1796399",
    "end": "1804039"
  },
  {
    "text": "fire off the phase two initialization which is the licensing piece uh the key part that we want to note here is down",
    "start": "1804039",
    "end": "1810760"
  },
  {
    "text": "here at the bottom uh we have I nit system uh basically ioa nit system is",
    "start": "1810760",
    "end": "1816679"
  },
  {
    "text": "the code that actually will run the driver code um this is uh uh hit the",
    "start": "1816679",
    "end": "1822600"
  },
  {
    "text": "driver entry and load the boot drivers into memory uh into me or uh their loaded into memory it will actually",
    "start": "1822600",
    "end": "1828840"
  },
  {
    "text": "execute them uh additionally it covers things like loading ntdll which is a core uh C uh kernel of functionality",
    "start": "1828840",
    "end": "1836960"
  },
  {
    "text": "inside the kernel um additional uh things like uh the a nit system is hit",
    "start": "1836960",
    "end": "1843600"
  },
  {
    "text": "another time to create a executive uh page table uh that the colonel uses um",
    "start": "1843600",
    "end": "1851679"
  },
  {
    "text": "we have ah uh PS a nit system uh the the last time will actually reallocate or uh",
    "start": "1851679",
    "end": "1861080"
  },
  {
    "text": "re uh export of the ntdll one thing to note here is that uh before this last",
    "start": "1861080",
    "end": "1867440"
  },
  {
    "text": "piece in fact when your boot drivers load you do not have actual access to n",
    "start": "1867440",
    "end": "1872720"
  },
  {
    "text": "dlll so your boot driver may not have access to any uh uh exports that",
    "start": "1872720",
    "end": "1878960"
  },
  {
    "text": "traditional drivers usually do uh that that can make it a little bit more hairy",
    "start": "1878960",
    "end": "1884279"
  },
  {
    "text": "uh maybe force you to roll your own as it were uh finally the RTL create user process",
    "start": "1884279",
    "end": "1891000"
  },
  {
    "text": "smss is what launches the the user land code uh and",
    "start": "1891000",
    "end": "1897159"
  },
  {
    "text": "now we are a Windows system basically uh you can at this point do things like log",
    "start": "1897159",
    "end": "1903320"
  },
  {
    "text": "into it and uh begin to go for",
    "start": "1903320",
    "end": "1908039"
  },
  {
    "text": "it um Derek I I don't I don't think a uh I don't think sisy will cover that like",
    "start": "1913320",
    "end": "1920440"
  },
  {
    "text": "mostly sisy is going to deal with like the SEC we'll get to it at the end um we got",
    "start": "1920440",
    "end": "1927039"
  },
  {
    "text": "to try and make sure that we're on schedule to actually by the time everybody's",
    "start": "1927039",
    "end": "1932519"
  },
  {
    "text": "started um uh actually not uh yeah we'll we'll we'll certainly cover that um uh",
    "start": "1932519",
    "end": "1938799"
  },
  {
    "text": "I'd like to actually pass it off to Derek here where we're now going to go into boot root proper and show the magic",
    "start": "1938799",
    "end": "1944720"
  },
  {
    "text": "as it were cool so um Ryan's laid the",
    "start": "1944720",
    "end": "1949799"
  },
  {
    "text": "groundwork now we're going to use this reconnaissance to plan our invasion of the",
    "start": "1949799",
    "end": "1955480"
  },
  {
    "text": "konel um our problem with EI boot root is that we got too much control and we have it too soon kind of a funny",
    "start": "1955480",
    "end": "1962600"
  },
  {
    "text": "situation to be in we want to give almost all the control back to the operating system because we want it to",
    "start": "1962600",
    "end": "1968000"
  },
  {
    "text": "do its thing and appear seamless to the user the user wants Windows they don't want EI boot root OS um you know we",
    "start": "1968000",
    "end": "1975880"
  },
  {
    "text": "don't want them to know that anything has changed but we do want to change a couple things um giving control back to",
    "start": "1975880",
    "end": "1982559"
  },
  {
    "text": "privilege code is tricky because this privilege code can take the entire take over the entire machine State and uh",
    "start": "1982559",
    "end": "1990000"
  },
  {
    "text": "basically ruin our chances to regain execution so um these are the advantages",
    "start": "1990000",
    "end": "1997399"
  },
  {
    "text": "and disadvantages of being at this specific point in between when the BIOS hands off execution to the boot medium",
    "start": "1997399",
    "end": "2004000"
  },
  {
    "text": "and you know stuck before the operating system",
    "start": "2004000",
    "end": "2008960"
  },
  {
    "text": "system so let's see what we have to work with when our code is executing it's a",
    "start": "2009840",
    "end": "2015080"
  },
  {
    "text": "pretty Barren landscape uh we have all memory uh we have all the hardware",
    "start": "2015080",
    "end": "2021159"
  },
  {
    "text": "everything on the processor we pretty much have everything um except the operating system which is still on disk there's no",
    "start": "2021159",
    "end": "2027480"
  },
  {
    "text": "OS code to patch there's uh no OS data structures to modify we do have a couple",
    "start": "2027480",
    "end": "2033760"
  },
  {
    "text": "bios uh established data structures we've of course got got the interrupt Vector table we have uh the bio area",
    "start": "2033760",
    "end": "2040159"
  },
  {
    "text": "which Ryan mentioned at linear address 400 segment 40 uh Ralph Brown's interrup",
    "start": "2040159",
    "end": "2046639"
  },
  {
    "text": "list contains a file memory list which goes over that in great detail recommended reading if you haven't read",
    "start": "2046639",
    "end": "2053398"
  },
  {
    "text": "it already uh a little all right that's",
    "start": "2053399",
    "end": "2058760"
  },
  {
    "text": "yeah laugh it up now uh let's see so yeah 640k conventional memory there's of",
    "start": "2058760",
    "end": "2064118"
  },
  {
    "text": "course more memory on the machine if you want to go into protected mode there's probably also a bios interrupt like interrupt 15 service that will let you",
    "start": "2064119",
    "end": "2071440"
  },
  {
    "text": "access protected mode memory or excuse me you know the higher memory um of course all the CPU",
    "start": "2071440",
    "end": "2078520"
  },
  {
    "text": "registers keeping in mind that windows will blow away whatever we put in most of these but for instance we have the",
    "start": "2078520",
    "end": "2086118"
  },
  {
    "text": "debug registers it's a it's kind of an interesting idea just to play with that maybe we could set something in the",
    "start": "2086119",
    "end": "2091679"
  },
  {
    "text": "debug registers and perhaps Windows wouldn't initialize them so that at some",
    "start": "2091679",
    "end": "2097200"
  },
  {
    "text": "certain point in Windows startup the setting in the debug register would cause us to regain execution problem",
    "start": "2097200",
    "end": "2103320"
  },
  {
    "text": "with that being that it would throw an interrupt and windows has taken exclusive control over the interrupt",
    "start": "2103320",
    "end": "2108359"
  },
  {
    "text": "table but uh it's just a random thought uh there are other processors on the machine and multiprocessor machines that",
    "start": "2108359",
    "end": "2115800"
  },
  {
    "text": "we could use uh it'd be kind of neat to have another processor running simultaneously doing these kind of real",
    "start": "2115800",
    "end": "2122760"
  },
  {
    "text": "time modifications to the boot environment it's a little bit James Bond",
    "start": "2122760",
    "end": "2128800"
  },
  {
    "text": "so here's our plan um we know what we've got to work with now um and we know that",
    "start": "2129040",
    "end": "2135000"
  },
  {
    "text": "Windows is going to inadvertently try to evict us by taking over the machine exclusively uh however it does still",
    "start": "2135000",
    "end": "2142560"
  },
  {
    "text": "have to trust the BIOS and that's our angle of attack uh it has a the",
    "start": "2142560",
    "end": "2148960"
  },
  {
    "text": "interrupt Vector table exposes the interrupt services that the BIOS provides which is kind of like exported",
    "start": "2148960",
    "end": "2154960"
  },
  {
    "text": "API in a way these are all services that the BIOS is providing to the operating system to get itself started",
    "start": "2154960",
    "end": "2162240"
  },
  {
    "text": "with so um what are we going to do um we're",
    "start": "2162240",
    "end": "2169720"
  },
  {
    "text": "going to modify these structures we have the interrupt Vector table we have the BIOS data area they're all accessible",
    "start": "2169720",
    "end": "2175880"
  },
  {
    "text": "they're all Universal well-known offsets and of course they're writable obviously",
    "start": "2175880",
    "end": "2181119"
  },
  {
    "text": "the BIOS is not writable although I'm sure there's some people in there who uh who would disagree with me but uh we",
    "start": "2181119",
    "end": "2187480"
  },
  {
    "text": "didn't want to we didn't want to try and Flash the BIOS that would uh be very difficult to",
    "start": "2187480",
    "end": "2193400"
  },
  {
    "text": "debug um so we're going to function as a bios hook and use that leverage to",
    "start": "2193400",
    "end": "2199599"
  },
  {
    "text": "invade the windows kernel when it appears more specifically our solution",
    "start": "2199599",
    "end": "2206119"
  },
  {
    "text": "is first to go resident we have to carve ourselves out of niche in memory where we can hide and not be tampered with",
    "start": "2206119",
    "end": "2213480"
  },
  {
    "text": "because Windows is taking over every other aspect of the machine it's going to take the memory too the way that boot viruses have done",
    "start": "2213480",
    "end": "2220480"
  },
  {
    "text": "this forever which is a good sound technique is to take the uh amount of conventional memory reported in the",
    "start": "2220480",
    "end": "2226040"
  },
  {
    "text": "biosta area and just kind of shave a little bit off of it this allocates some memory at the top of conventional memory",
    "start": "2226040",
    "end": "2231960"
  },
  {
    "text": "that will uh never be touched this limit or excuse me this count of kilobytes of",
    "start": "2231960",
    "end": "2238400"
  },
  {
    "text": "conventional memory is respected by all memory checks so once we've gone there we can hang out there forever and not",
    "start": "2238400",
    "end": "2244640"
  },
  {
    "text": "worry about being modified um next up we copy ourselves",
    "start": "2244640",
    "end": "2251960"
  },
  {
    "text": "there first thing because we want to get out of the way right now as Ryan pointed out we're at a",
    "start": "2251960",
    "end": "2257800"
  },
  {
    "text": "specific linear address which is where all boot sector code expects itself to be um we're there too we want to get out",
    "start": "2257800",
    "end": "2264760"
  },
  {
    "text": "of the way because what we want to do is load the uh the hard drive Boots the",
    "start": "2264760",
    "end": "2270640"
  },
  {
    "text": "master boot record and execute it so that the execution seamlessly transfers to the hard drive so say if you left a",
    "start": "2270640",
    "end": "2276960"
  },
  {
    "text": "CD or you left a floppy in the drive just kind of inconspicuously and somebody booted off of it it would just",
    "start": "2276960",
    "end": "2282960"
  },
  {
    "text": "pass execution on through the hard drive and no one would be the wiser unless they're looking at the little green LED",
    "start": "2282960",
    "end": "2288319"
  },
  {
    "text": "or listening to the noises that your computer makes um what we do after we're there is",
    "start": "2288319",
    "end": "2296119"
  },
  {
    "text": "we hook interrupt 13 the disc interrupt and we're going to scan the operating system as it loads sector by",
    "start": "2296119",
    "end": "2303000"
  },
  {
    "text": "sector looking for a a specific code signature and we're going to patch at that code signature and essentially",
    "start": "2303000",
    "end": "2309599"
  },
  {
    "text": "virtually patch the operating system as it's pulled off the dis um Windows startup of course depends",
    "start": "2309599",
    "end": "2316200"
  },
  {
    "text": "on this interrupt as its only means to dis access until it's loaded the disk drivers Etc so it's forced to trust",
    "start": "2316200",
    "end": "2325240"
  },
  {
    "text": "it and our code has first dibs um there are of course other things",
    "start": "2325240",
    "end": "2332480"
  },
  {
    "text": "that we could have done we can modify the operating system files on disk that",
    "start": "2332480",
    "end": "2338319"
  },
  {
    "text": "requires us to understand the file system I guess it's kind of the obvious solution but there is already existent",
    "start": "2338319",
    "end": "2344480"
  },
  {
    "text": "code to read the file system for instance in the Windows boot loader that Ryan was talking about it already",
    "start": "2344480",
    "end": "2351520"
  },
  {
    "text": "understands NTFS and it's at a location that we know and can get to so we could perhaps piggyback off its code and kind",
    "start": "2351520",
    "end": "2357920"
  },
  {
    "text": "of save some of our own space because our space is on a premium here",
    "start": "2357920",
    "end": "2364760"
  },
  {
    "text": "um uh excuse excuse me yeah um we could have also this is",
    "start": "2364760",
    "end": "2371160"
  },
  {
    "text": "really doesn't relate to infiltrating the kernel it's just kind of a neat observation there's an interrupt in5 a",
    "start": "2371160",
    "end": "2377480"
  },
  {
    "text": "specific service that will give the operating system a memory map of what memory is reserved and what memory is",
    "start": "2377480",
    "end": "2383440"
  },
  {
    "text": "actually available if we hook this and we filter the results passed back to the OS then we can make physical memory",
    "start": "2383440",
    "end": "2391240"
  },
  {
    "text": "disappear um it will not be accessible it will not be used by Windows it will not be accessible via device physical",
    "start": "2391240",
    "end": "2397040"
  },
  {
    "text": "memory the only way to get to it would be kernel code that goes and tweaks with the page tables um so it'd be kind of a neat",
    "start": "2397040",
    "end": "2404119"
  },
  {
    "text": "place to hide stuff in memory however you've still got to have some code that's visible in virtual memory in",
    "start": "2404119",
    "end": "2410319"
  },
  {
    "text": "order to go uh map in and access this hidden physical memory so there's still",
    "start": "2410319",
    "end": "2416680"
  },
  {
    "text": "a little stub of code that could be detected but it's just a thought there",
    "start": "2416680",
    "end": "2422280"
  },
  {
    "text": "are probably other interrupts that we could hook to regain execution and perhaps much later in the operating",
    "start": "2422280",
    "end": "2429040"
  },
  {
    "text": "system startup after OS code and Os data structures are present for us to modify",
    "start": "2429040",
    "end": "2434880"
  },
  {
    "text": "uh we didn't look at it in too much detail but one of the problems is that these interrupt handlers that we would",
    "start": "2434880",
    "end": "2441200"
  },
  {
    "text": "install uh Run in real mode and all the operating system stuff is up in higher memory outside of conventional memory um",
    "start": "2441200",
    "end": "2448640"
  },
  {
    "text": "so we would need to enter our protected mode ourselves to get to it it's going to cost us more code bites in our boot",
    "start": "2448640",
    "end": "2453960"
  },
  {
    "text": "sector code and um you know just a little bit Messier so uh it's something that we",
    "start": "2453960",
    "end": "2461880"
  },
  {
    "text": "could do we just didn't do this is H that system memory map I",
    "start": "2461880",
    "end": "2467359"
  },
  {
    "text": "was talking about as you can see the second blue line the the one with 7df in",
    "start": "2467359",
    "end": "2473160"
  },
  {
    "text": "the right column is is the big one that tells how much you know basically all",
    "start": "2473160",
    "end": "2478800"
  },
  {
    "text": "the unused memory up above conventional memory the video bios the uh Reserve",
    "start": "2478800",
    "end": "2485079"
  },
  {
    "text": "conventional memory Etc if we Cho this value down and we filtered out the other ones that are",
    "start": "2485079",
    "end": "2491240"
  },
  {
    "text": "reclaimable and available then we could actually lower the cut off um to make it",
    "start": "2491240",
    "end": "2496480"
  },
  {
    "text": "appear as though the machine had less physical memory so finally someone implemented it uh",
    "start": "2496480",
    "end": "2504880"
  },
  {
    "text": "these are some of our ideas on how to implement it and here's where we put them into",
    "start": "2504880",
    "end": "2511000"
  },
  {
    "text": "practice EI boot root kit is a proof of concept for the EI boot root technology",
    "start": "2512520",
    "end": "2518800"
  },
  {
    "text": "it's not really a traditional root kit it doesn't hide things it's just a network back door but a network back",
    "start": "2518800",
    "end": "2523960"
  },
  {
    "text": "door that lets you uh run kernel code through a firewall so yeah it's ups and",
    "start": "2523960",
    "end": "2529599"
  },
  {
    "text": "downs um it loads from a variety of bootable media um in particular we're",
    "start": "2529599",
    "end": "2535560"
  },
  {
    "text": "focusing on floppy disc and CD ROM drive and network",
    "start": "2535560",
    "end": "2541079"
  },
  {
    "text": "boot it um it it does exactly what I just talked about it reserves some conventional memory hides up there it",
    "start": "2541079",
    "end": "2548440"
  },
  {
    "text": "hooks at 13 so it can monitor all sector reads it lets the read occur and then it",
    "start": "2548440",
    "end": "2553800"
  },
  {
    "text": "looks through the disc buffer that was filled by the bios for a specific code signature if it finds it it modifies it",
    "start": "2553800",
    "end": "2561119"
  },
  {
    "text": "the code signature we picked is an OS loader um which as Ryan mention is a part of enti loader and this uh we",
    "start": "2561119",
    "end": "2569040"
  },
  {
    "text": "choose a special location that is after all the boot drivers have loaded so we can find indis at this point and we can",
    "start": "2569040",
    "end": "2575760"
  },
  {
    "text": "go hook IND this.s um that back door inspects all received incoming ethernet frames and",
    "start": "2575760",
    "end": "2583599"
  },
  {
    "text": "looking for a specific signature in a specific place and then runs code out of the packet if it's",
    "start": "2583599",
    "end": "2589240"
  },
  {
    "text": "found uh features it works on Windows 2000 later it does not work on nt4 to",
    "start": "2589240",
    "end": "2595319"
  },
  {
    "text": "our shagrin we'll uh we need to work on that we don't want to be negligent uh we",
    "start": "2595319",
    "end": "2600599"
  },
  {
    "text": "just hadn't got it working yet and it fits into 512 byes so sector so that",
    "start": "2600599",
    "end": "2607240"
  },
  {
    "text": "means our code doesn't have to go load other sectors off the dis so um we squeezed it to make it fit of course",
    "start": "2607240",
    "end": "2614640"
  },
  {
    "text": "this idea um is simple you know hijacking the boot sector and running our code but the devil is in the details",
    "start": "2614640",
    "end": "2622520"
  },
  {
    "text": "so we're going to go over some of those complexities here so you don't have",
    "start": "2622520",
    "end": "2628160"
  },
  {
    "text": "to um here's the more granular play by play first off we move ourselves to",
    "start": "2628280",
    "end": "2633599"
  },
  {
    "text": "reserve conventional memory there's a there's that word in the bio area that we just subtract from and then the the",
    "start": "2633599",
    "end": "2641000"
  },
  {
    "text": "final subtracted value is actually multiply that by 1K and that's the address that we can hide",
    "start": "2641000",
    "end": "2647680"
  },
  {
    "text": "at um we shouldn't uh when you're copying yourself from the from the initial load address at linear 7 Co you",
    "start": "2647680",
    "end": "2655599"
  },
  {
    "text": "shouldn't assume the value of Cs this was an early mistake we made and the",
    "start": "2655599",
    "end": "2660800"
  },
  {
    "text": "reason is because when you boot from a CD it puts uh the segment is different",
    "start": "2660800",
    "end": "2666839"
  },
  {
    "text": "than if you booted from a dis the linear address is the same it's just that the value in CS is different and if you make",
    "start": "2666839",
    "end": "2673760"
  },
  {
    "text": "any assumptions on that then you will fail um the N 13 hook as we talked about",
    "start": "2673760",
    "end": "2681400"
  },
  {
    "text": "it uh it looks for reads and then it scans the the disc buffer that was filled with the contents of the dis",
    "start": "2681400",
    "end": "2688680"
  },
  {
    "text": "specifically we're looking at two read Services there's a standard one aho2 and um then there's the IBM mic",
    "start": "2688680",
    "end": "2695920"
  },
  {
    "text": "Microsoft extension 42 which is required on large discs uh one thing you know a",
    "start": "2695920",
    "end": "2703440"
  },
  {
    "text": "little a little lazy shortcut we tried to to attempt is uh looking for the installation check for those extensions",
    "start": "2703440",
    "end": "2709839"
  },
  {
    "text": "and just responding with failure saying those Services aren't available because we don't want to support them that",
    "start": "2709839",
    "end": "2715599"
  },
  {
    "text": "causes the operating system not to load so um so we do both it's not a big",
    "start": "2715599",
    "end": "2721720"
  },
  {
    "text": "deal it's just a little bit different all the details are in Ralph Brown's interrupt list it's good stuff you",
    "start": "2721720",
    "end": "2727200"
  },
  {
    "text": "should check it out um and it's not that bad to support it doesn't cost us much in the way of code bites we still got it",
    "start": "2727200",
    "end": "2732960"
  },
  {
    "text": "in one sector so it's all right uh the signature choice is extremely important",
    "start": "2732960",
    "end": "2738680"
  },
  {
    "text": "it needs to be unique you don't want to go patching random pieces of the disc as they load you want to patch exactly one",
    "start": "2738680",
    "end": "2745119"
  },
  {
    "text": "uh piece of the operating system when it loads um it should of course be cross version ours is 2000 XP and 2003 it's",
    "start": "2745119",
    "end": "2753160"
  },
  {
    "text": "not it's probably not N4 that's my best guess is to so why we're not working on N4 cuz the signature is just not there",
    "start": "2753160",
    "end": "2759559"
  },
  {
    "text": "and it needs to be not split across a sector boundary if half of the signature is loaded in one sector and half in the",
    "start": "2759559",
    "end": "2765640"
  },
  {
    "text": "other our Hook is simple it's dumb it's stateless it's not going to realize that that was",
    "start": "2765640",
    "end": "2771079"
  },
  {
    "text": "loaded um of course it would also be tricky to to patch the signature in two places but uh",
    "start": "2771079",
    "end": "2780079"
  },
  {
    "text": "so just choose one that's not split across sectors and do yourself a favor",
    "start": "2780079",
    "end": "2786680"
  },
  {
    "text": "um another little caveat is that uh OS loader checks check sums on the modules",
    "start": "2786680",
    "end": "2793040"
  },
  {
    "text": "that it loads it does not check the check sum on itself so that's why we target it to patch we originally",
    "start": "2793040",
    "end": "2799240"
  },
  {
    "text": "patching in or indis directly or in toss kernel just for fun and they're all",
    "start": "2799240",
    "end": "2805280"
  },
  {
    "text": "they're all checked so you could disable the check sum code that was one thing we did but it's just more it's just more",
    "start": "2805280",
    "end": "2812040"
  },
  {
    "text": "wasted space in your packet the best way is just to attack OS loader itself and",
    "start": "2812040",
    "end": "2817319"
  },
  {
    "text": "then use that as a jumping off point after the modules are loaded and after all the check sums are",
    "start": "2817319",
    "end": "2824160"
  },
  {
    "text": "verified here is a specific place that we patched there are seven bytes here just uh to make sure the signature is",
    "start": "2825000",
    "end": "2830960"
  },
  {
    "text": "unique and easily identifiable however um you know it's it breaks an",
    "start": "2830960",
    "end": "2836000"
  },
  {
    "text": "instruction boundary we got one bite of another instruction in there so that's no good um therefore um we uh we went",
    "start": "2836000",
    "end": "2845040"
  },
  {
    "text": "with this we with a special kind of hook um we wanted our hook to be absolute",
    "start": "2845040",
    "end": "2850119"
  },
  {
    "text": "because this is a situation our n13 hook sees the contents of the dis and the disc buffer it doesn't know where that",
    "start": "2850119",
    "end": "2857240"
  },
  {
    "text": "con that data is going to end up eventually it's going to be copied off into uh higher memory somewhere we don't",
    "start": "2857240",
    "end": "2864240"
  },
  {
    "text": "know where uh we don't care to go find it um by making our hook absolute we",
    "start": "2864240",
    "end": "2870319"
  },
  {
    "text": "know our address so we can use an absolute hook to get there from absolutely anywhere",
    "start": "2870319",
    "end": "2876400"
  },
  {
    "text": "um the uh the most obvious absolute Hook is just call segment offset which is seven bytes that's a little too big so",
    "start": "2876400",
    "end": "2883480"
  },
  {
    "text": "we went with a six byte one it's just a call memory the memory address that we call is absolute and then the pointer at",
    "start": "2883480",
    "end": "2889760"
  },
  {
    "text": "that address is absolute so it's still an absolute hook it only takes six bytes it's just the best choice for the",
    "start": "2889760",
    "end": "2896760"
  },
  {
    "text": "situation um paging is not a concern in this case OS loader will implement it",
    "start": "2896760",
    "end": "2901920"
  },
  {
    "text": "but uh it doesn't matter because the low 16 Meg of physical memory which is definitely where we are is mapped as a",
    "start": "2901920",
    "end": "2907920"
  },
  {
    "text": "low 16 Mega virtual memory so we don't have to worry about that at this",
    "start": "2907920",
    "end": "2914319"
  },
  {
    "text": "point here's what our OS loader patch function does we installed the patch or excuse me the hook it's going to jump",
    "start": "2914319",
    "end": "2920400"
  },
  {
    "text": "back into our code our hook function is going to scan through OS loader for the",
    "start": "2920400",
    "end": "2926440"
  },
  {
    "text": "loaded module list this is the easiest way that we found to find IND this what we were doing previously was scanning",
    "start": "2926440",
    "end": "2932440"
  },
  {
    "text": "through Page tables looking for allocated memory and and um looking to see if it was in this that's just kind",
    "start": "2932440",
    "end": "2938640"
  },
  {
    "text": "of a pain this is actually easier um of course our Hook is a call",
    "start": "2938640",
    "end": "2944480"
  },
  {
    "text": "so we have on the stack a return address which is our hint into our pointer into",
    "start": "2944480",
    "end": "2949559"
  },
  {
    "text": "OS loader now it's not to the beginning of os loader so we actually want to start from the start so that we can uh",
    "start": "2949559",
    "end": "2957280"
  },
  {
    "text": "find our BL loader block no matter what the no matter where our Hook was called",
    "start": "2957280",
    "end": "2962799"
  },
  {
    "text": "from in LS loader we assume that it starts on one megabyte boundary so we just round down nothing too",
    "start": "2962799",
    "end": "2968920"
  },
  {
    "text": "sophisticated and we look for this signature which is after all the modules have been loaded it's very unique and",
    "start": "2968920",
    "end": "2974640"
  },
  {
    "text": "specific not split across sectors and it's got a pointer to be loader block right there now that pointer you can",
    "start": "2974640",
    "end": "2980960"
  },
  {
    "text": "just de reference that a couple times and you're at the module list um we search this module list for",
    "start": "2980960",
    "end": "2987359"
  },
  {
    "text": "indis dosis uh the name is in unic code don't depend on the case don't assume",
    "start": "2987359",
    "end": "2992440"
  },
  {
    "text": "it's going to be uppercase just you you can be lazy just don't be that",
    "start": "2992440",
    "end": "2997960"
  },
  {
    "text": "lazy this is uh the format of that module list which is actually um I don't",
    "start": "2997960",
    "end": "3003799"
  },
  {
    "text": "know if Robert's here but sorry Robert um he pointed out that this is the exact same format as every other module list",
    "start": "3003799",
    "end": "3011559"
  },
  {
    "text": "um Colonel userland they're all the same so those question marks just represent an unused field",
    "start": "3011559",
    "end": "3018880"
  },
  {
    "text": "um but this is the the uh Colonel hackers will might recognize this as PS",
    "start": "3018880",
    "end": "3024000"
  },
  {
    "text": "loaded modulus format which uh is a good way to find modules when you're already in the kernel OS",
    "start": "3024000",
    "end": "3030440"
  },
  {
    "text": "loader passes the same format to in TOS kernel so now we've uh we've got our OS",
    "start": "3030440",
    "end": "3038400"
  },
  {
    "text": "loader patch it's found indis in the module list now what we want to hook in",
    "start": "3038400",
    "end": "3043640"
  },
  {
    "text": "this um how we do that is yet searching for yet more signatures we have another",
    "start": "3043640",
    "end": "3049079"
  },
  {
    "text": "specific code signature we didn't have a code signature for eth filter DPR indicate receive p",
    "start": "3049079",
    "end": "3056319"
  },
  {
    "text": "packet here to Hereafter referred to as that function but we uh did have one for",
    "start": "3056319",
    "end": "3062240"
  },
  {
    "text": "its collar so we find its caller we follow the call and then we find that",
    "start": "3062240",
    "end": "3068319"
  },
  {
    "text": "function um now the problem is as Ryan pointed out earlier before 2003 the",
    "start": "3068319",
    "end": "3075119"
  },
  {
    "text": "sections of the module aren't aligned to their virtu to their inmemory addresses which is actually different from the",
    "start": "3075119",
    "end": "3080640"
  },
  {
    "text": "infile add offsets excuse me um so prior to 2003 but not on 2003 we'll",
    "start": "3080640",
    "end": "3088400"
  },
  {
    "text": "need to perform translation from this RVA to follow the relative call and then",
    "start": "3088400",
    "end": "3094160"
  },
  {
    "text": "translate from that RVA back to an offset within the uh loaded image and um in order to find that",
    "start": "3094160",
    "end": "3103799"
  },
  {
    "text": "function um so uh we kind of had a hackish way of",
    "start": "3103799",
    "end": "3109160"
  },
  {
    "text": "of checking if this was the case or not the loaded module list contains the size of the kind of the footprint of the in",
    "start": "3109160",
    "end": "3115880"
  },
  {
    "text": "memory image and if it's a 64k multiple we assume it's been all aligned and",
    "start": "3115880",
    "end": "3120920"
  },
  {
    "text": "everything it's 2003 it's all good there's also a possibility that we're unlucky and the file contents really are",
    "start": "3120920",
    "end": "3127240"
  },
  {
    "text": "64k multiple in which case we will fail but that hasn't happened so far so it's",
    "start": "3127240",
    "end": "3134119"
  },
  {
    "text": "good enough for a demonstration right if it's not a 64k multiple it'll probably just be some 4K multiple and that will",
    "start": "3134119",
    "end": "3141799"
  },
  {
    "text": "mean that it is U the file contents loaded into memory it is not yet aligned",
    "start": "3141799",
    "end": "3149079"
  },
  {
    "text": "properly so our hook of that function um stores a uh relative jump at the",
    "start": "3149599",
    "end": "3155400"
  },
  {
    "text": "beginning just like any other standard function hook we know the instructions we want to overwrite because this is a",
    "start": "3155400",
    "end": "3160799"
  },
  {
    "text": "well- behaved function it uses an EBP based frame um a little landmine is that move",
    "start": "3160799",
    "end": "3166720"
  },
  {
    "text": "EDI EDI that xps2 introduced we want to skip over that if it's present so that we can overwrite the instructions we",
    "start": "3166720",
    "end": "3172880"
  },
  {
    "text": "intended to we always assume those are going to be push EBP move EBP ESP just a",
    "start": "3172880",
    "end": "3178119"
  },
  {
    "text": "standard prologue and then subtract something from ESP uh we don't really care what because",
    "start": "3178119",
    "end": "3184480"
  },
  {
    "text": "it is an EVP based frame so we can just subtract a lot and that will be good enough and we don't have to bother",
    "start": "3184480",
    "end": "3190799"
  },
  {
    "text": "ourselves with the particulars uh right protection is not yet enabled so we can modify the code to",
    "start": "3190799",
    "end": "3196480"
  },
  {
    "text": "our heart's content and um what we need is a place to store our little back door",
    "start": "3196480",
    "end": "3202760"
  },
  {
    "text": "function because at this point now it's the kernel that everybody knows and loves our conventional memory is",
    "start": "3202760",
    "end": "3208880"
  },
  {
    "text": "probably not present I mean it might be but you know there's the three gigabyte option and there's just kind of all",
    "start": "3208880",
    "end": "3215040"
  },
  {
    "text": "kinds of circumstances where there's really a better way to do it and this is what we came up with it's a very small",
    "start": "3215040",
    "end": "3222119"
  },
  {
    "text": "function the indis back door so we stuff it up in the this program cannot be run in DOS mode code up right after the MZ",
    "start": "3222119",
    "end": "3230160"
  },
  {
    "text": "header there's 64 bytes there at least it's more than enough room for our function it's all good",
    "start": "3230160",
    "end": "3236160"
  },
  {
    "text": "good this function provides a remote kernel back door and here's how it works",
    "start": "3236160",
    "end": "3242880"
  },
  {
    "text": "um it checks the arguments to the function it finds the ethernet frame in memory it finds the size of the frame if",
    "start": "3242880",
    "end": "3248319"
  },
  {
    "text": "the frame's big enough it looks for the signature at a very specific offset this offset is arbitrary but it was chosen to",
    "start": "3248319",
    "end": "3256200"
  },
  {
    "text": "make sure that it'll be within the data payload even if there's some IP options or some TCP options or whatever so um",
    "start": "3256200",
    "end": "3263920"
  },
  {
    "text": "you know we may have to shift around our data payload a little bit but it should we shouldn't have to you know store",
    "start": "3263920",
    "end": "3270559"
  },
  {
    "text": "anything in the headers because that's a mess um if the signature is present we just run the code that follows it now",
    "start": "3270559",
    "end": "3277599"
  },
  {
    "text": "obviously the uh size of a frame is limited so if you want to send a really big remote kernel backd door payload",
    "start": "3277599",
    "end": "3285880"
  },
  {
    "text": "then we recommend smaller payloads and kind of copy them to a staging area the perfect staging area is shared user data",
    "start": "3285880",
    "end": "3293240"
  },
  {
    "text": "it's at a universal address in kernel and also in all userland processes so",
    "start": "3293240",
    "end": "3299040"
  },
  {
    "text": "that's really handy um of course it's writable in the kernel so that's a must",
    "start": "3299040",
    "end": "3304599"
  },
  {
    "text": "and um there's plenty of room there so it's just a it's a good place to store",
    "start": "3304599",
    "end": "3309880"
  },
  {
    "text": "our uh payload now the fun part what you've all",
    "start": "3309880",
    "end": "3315559"
  },
  {
    "text": "been waiting for we're going to demonstrate um we're going to demonstrate on a VMware from a floppy",
    "start": "3315559",
    "end": "3323400"
  },
  {
    "text": "and from a CD we we're going to do Network boot I'm sorry we had some technical difficulties our crossover",
    "start": "3323400",
    "end": "3330520"
  },
  {
    "text": "cable doesn't work etc so um hey I didn't make that cable all right that's",
    "start": "3330520",
    "end": "3336039"
  },
  {
    "text": "not that's not my fault did anybody come see the E reap",
    "start": "3336039",
    "end": "3343520"
  },
  {
    "text": "talk last year anybody this inside",
    "start": "3343520",
    "end": "3349160"
  },
  {
    "text": "joke um is it okay yeah it",
    "start": "3350079",
    "end": "3357000"
  },
  {
    "text": "sweet um oh that's too bad",
    "start": "3361960",
    "end": "3367599"
  },
  {
    "text": "um I had it in CRT mode nice so there we go VMware",
    "start": "3367599",
    "end": "3376240"
  },
  {
    "text": "everybody's best friend what we're setting up right here is a um a virtual",
    "start": "3376240",
    "end": "3381880"
  },
  {
    "text": "floppy drive this laptop doesn't actually have a floppy Drive so that's why we're doing it in a VMware",
    "start": "3381880",
    "end": "3388640"
  },
  {
    "text": "um now the thing because because the format of a um of a a floppy Drive",
    "start": "3388640",
    "end": "3395799"
  },
  {
    "text": "floppy disc is so simple we can actually just compile the assembly code and then just pass it in directly as a floppy",
    "start": "3395799",
    "end": "3401799"
  },
  {
    "text": "image works great so that's what we're going to do",
    "start": "3401799",
    "end": "3407359"
  },
  {
    "text": "um the uh the cdrom drive is not enabled right",
    "start": "3407359",
    "end": "3413280"
  },
  {
    "text": "now so it will just boot off the sloppy drive and um what we have here is the",
    "start": "3413280",
    "end": "3420920"
  },
  {
    "text": "hoston networking in VMware so we're going to net cat it our evil little packet oh I'm sorry watch the up left",
    "start": "3420920",
    "end": "3428400"
  },
  {
    "text": "corner just a second see that blue smiley face onage um it is a it was a",
    "start": "3428400",
    "end": "3436039"
  },
  {
    "text": "little debugging artifact but just didn't have the heart to take it out so if you ever see that on like your system",
    "start": "3436039",
    "end": "3441599"
  },
  {
    "text": "at home or something take that e or that EI boot",
    "start": "3441599",
    "end": "3446720"
  },
  {
    "text": "rot CD out of the drive I guess while it's doing that um",
    "start": "3446720",
    "end": "3454039"
  },
  {
    "text": "we will get ready to netcat what I'm going to do here is I'm",
    "start": "3454039",
    "end": "3459119"
  },
  {
    "text": "going to send a UDP packet that's just what we've set it up to work with the size of the UDP header uh we're going to",
    "start": "3459119",
    "end": "3464440"
  },
  {
    "text": "send it to this machine over our hostonly imaginary Network we're going",
    "start": "3464440",
    "end": "3470480"
  },
  {
    "text": "to send it to a closed Port it could be a firewalled port it doesn't matter",
    "start": "3470480",
    "end": "3476039"
  },
  {
    "text": "indis will see it therefore we'll see it um oh yeah another apology we",
    "start": "3476039",
    "end": "3483079"
  },
  {
    "text": "had we had kind of a cool uh demonstration it was just a hokey little text mode thing but I kind of liked it",
    "start": "3483079",
    "end": "3490240"
  },
  {
    "text": "um turns out it actually doesn't work on this version of VMware so we can't do it",
    "start": "3490240",
    "end": "3496200"
  },
  {
    "text": "today however we're still going to make it painfully clear that we're running code in the kernel and uh even even to",
    "start": "3496200",
    "end": "3503240"
  },
  {
    "text": "show you all a little something secret to make up for it uh what is it called demo",
    "start": "3503240",
    "end": "3510720"
  },
  {
    "text": "Arad okay so um this is just the the compiled stuff with a little bit of",
    "start": "3510720",
    "end": "3516000"
  },
  {
    "text": "padding to get the data to the proper offset that offset 55 that we're looking at in the frame so uh here we go watch",
    "start": "3516000",
    "end": "3524440"
  },
  {
    "text": "that VMware whoops it's like a blue screen but it's not um it's real real",
    "start": "3524440",
    "end": "3531720"
  },
  {
    "text": "simple demonstration all we did is uh we just patched uh kbug checky X to do red",
    "start": "3531720",
    "end": "3536960"
  },
  {
    "text": "fill instead of blue fill and then through an invalid op code to uh make it",
    "start": "3536960",
    "end": "3542640"
  },
  {
    "text": "happen um anyways um please bear me with me while",
    "start": "3542640",
    "end": "3548319"
  },
  {
    "text": "I operate the computer onehanded",
    "start": "3548319",
    "end": "3553920"
  },
  {
    "text": "um this is a special treat right here we were not going to De view this publicly",
    "start": "3553920",
    "end": "3560119"
  },
  {
    "text": "but our little demo failure didn't give us a choice so we're not going to boot",
    "start": "3560119",
    "end": "3565520"
  },
  {
    "text": "off the floppy drive this time we're going to boot off the CG Drive uhoh what is this CIS request",
    "start": "3565520",
    "end": "3574119"
  },
  {
    "text": "business what does that mean what is this guy doing there we go um GNA boot off the CD",
    "start": "3574119",
    "end": "3581720"
  },
  {
    "text": "now oh is it working are y'all curious probably not um but we're going to do it",
    "start": "3582160",
    "end": "3589440"
  },
  {
    "text": "anyway so um watch that up left corner again as the uh as the starting bar bar",
    "start": "3589440",
    "end": "3594920"
  },
  {
    "text": "fills up see another blue smiley face bad",
    "start": "3594920",
    "end": "3601160"
  },
  {
    "text": "sign well look at that guy uh what's going to happen when I boot this",
    "start": "3602720",
    "end": "3609160"
  },
  {
    "text": "computer well nothing's going to happen and it's just you know it's just windows",
    "start": "3609160",
    "end": "3615079"
  },
  {
    "text": "don't be alarmed nothing to see",
    "start": "3615079",
    "end": "3620760"
  },
  {
    "text": "here I do like how Windows XP boots much faster than Windows",
    "start": "3621440",
    "end": "3627160"
  },
  {
    "text": "2000 it's in no hurry I know yall are we're almost there thanks for bearing",
    "start": "3637920",
    "end": "3643480"
  },
  {
    "text": "with me at least the the demonstration is",
    "start": "3643480",
    "end": "3649520"
  },
  {
    "text": "working I shouldn't have said that now we're jinxed now this is difficult to do two-handed did but I'm going to attempt",
    "start": "3649520",
    "end": "3655760"
  },
  {
    "text": "it anyways you want to you do the honors you have to use that uh shift control",
    "start": "3655760",
    "end": "3661599"
  },
  {
    "text": "assist request you have to use a function key man a blue one check this",
    "start": "3661599",
    "end": "3668319"
  },
  {
    "text": "out uh I I held it down a little bit too long but what wait what what is this I",
    "start": "3668319",
    "end": "3675400"
  },
  {
    "text": "thought we just uh you know we're at the login screen a minute ago and now we got these shells all over the place what's",
    "start": "3675400",
    "end": "3681359"
  },
  {
    "text": "going on um oh no it's not is it",
    "start": "3681359",
    "end": "3688640"
  },
  {
    "text": "um um does anybody have anything they'd like us to attempt to prove that we're running a",
    "start": "3688760",
    "end": "3694200"
  },
  {
    "text": "system reg edit security directory I don't have",
    "start": "3694200",
    "end": "3699960"
  },
  {
    "text": "anything cool like you name or who am I or",
    "start": "3699960",
    "end": "3704799"
  },
  {
    "text": "whatever give that a try do a set or",
    "start": "3705799",
    "end": "3710880"
  },
  {
    "text": "something I just do a set yeah default user huh default user this is",
    "start": "3711680",
    "end": "3719880"
  },
  {
    "text": "pre yeah um kind of go go ahead and uh oh wait yeah I've got a different",
    "start": "3719880",
    "end": "3725799"
  },
  {
    "text": "password on this one how about the yeah that's a good call you're not supposed to be able to",
    "start": "3725799",
    "end": "3732480"
  },
  {
    "text": "do that and",
    "start": "3732480",
    "end": "3739279"
  },
  {
    "text": "uh yeah did you have a different user let me close some of these all right um",
    "start": "3739279",
    "end": "3745160"
  },
  {
    "text": "actually I got one thing I want to do real quick all right thanks man down um all",
    "start": "3745160",
    "end": "3753400"
  },
  {
    "text": "right net user I forget how this command Works",
    "start": "3753400",
    "end": "3758460"
  },
  {
    "text": "[Music] slash there we go um net user",
    "start": "3758460",
    "end": "3767160"
  },
  {
    "text": "EI in the hisy slash",
    "start": "3767160",
    "end": "3773359"
  },
  {
    "text": "add EI and his",
    "start": "3773359",
    "end": "3778640"
  },
  {
    "text": "Z huh will all be",
    "start": "3778640",
    "end": "3784520"
  },
  {
    "text": "[Applause]",
    "start": "3784520",
    "end": "3790199"
  },
  {
    "text": "um so back to the slides we do have a little bit more material",
    "start": "3790720",
    "end": "3795760"
  },
  {
    "text": "um it's not all just smoking mirrors here so um things to do there's always",
    "start": "3795760",
    "end": "3801920"
  },
  {
    "text": "something to do for instance we should adapt this to more traditional uh rootkit functionality like actually",
    "start": "3801920",
    "end": "3807400"
  },
  {
    "text": "hiding things we should uh explore other methods of retaining the potential for",
    "start": "3807400",
    "end": "3813200"
  },
  {
    "text": "execution and infiltrating the kernel besides just uh hooking in three or in",
    "start": "3813200",
    "end": "3818839"
  },
  {
    "text": "13 it's simple and effective and boring um we should investigate bootable USB",
    "start": "3818839",
    "end": "3824279"
  },
  {
    "text": "storage and we should get this working on nt4 um there's probably other stuff but",
    "start": "3824279",
    "end": "3829319"
  },
  {
    "text": "it's just not listed here bonus material I'll uh try to speed",
    "start": "3829319",
    "end": "3835920"
  },
  {
    "text": "through this uh just a little something extra um did you know that you can",
    "start": "3835920",
    "end": "3841240"
  },
  {
    "text": "perform a raw disc operation without being in the kernel it's not a vulnerability it's",
    "start": "3841240",
    "end": "3848520"
  },
  {
    "text": "iopo it's a feature not a vulnerability um now protected mode part",
    "start": "3848520",
    "end": "3855200"
  },
  {
    "text": "of the point is to keep uh user application code from messing with the",
    "start": "3855200",
    "end": "3861119"
  },
  {
    "text": "hardware so um now there's a field in e flags that will let user application code do just that it's the iopo field",
    "start": "3861119",
    "end": "3868920"
  },
  {
    "text": "it's a two- bit field it says the numerically greatest um least privileged in other words privileged level that can",
    "start": "3868920",
    "end": "3875640"
  },
  {
    "text": "do these IO instructions there aren't many of them but it's enough in out CLI",
    "start": "3875640",
    "end": "3881680"
  },
  {
    "text": "STI and now only ring zero can modify this field but um obviously because we're talking",
    "start": "3881680",
    "end": "3889359"
  },
  {
    "text": "about this there are some user threads that run with iopo and a matter of fact in fact they're in",
    "start": "3889359",
    "end": "3895079"
  },
  {
    "text": "csrss prior to Windows 2003 um these threads are just running",
    "start": "3895079",
    "end": "3900520"
  },
  {
    "text": "with it that way um and they can be hijacked through all the usual means set",
    "start": "3900520",
    "end": "3905839"
  },
  {
    "text": "thread context Q&A PC you want to just like right process memory into",
    "start": "3905839",
    "end": "3910960"
  },
  {
    "text": "csrss you find a csrss vulnerability now that's a going to give you system",
    "start": "3910960",
    "end": "3916680"
  },
  {
    "text": "anyways but this is just that's why we don't classify this as a vulnerability it's just a little half step up that",
    "start": "3916680",
    "end": "3922839"
  },
  {
    "text": "you'd probably be able to do anyway running a system but it's just a little bit sneaky um you can also ask for iopo with",
    "start": "3922839",
    "end": "3931279"
  },
  {
    "text": "uh set information process uh process user mode iopo um either way you do have",
    "start": "3931279",
    "end": "3936680"
  },
  {
    "text": "to be system because that requires TCB privilege so you might as well be system",
    "start": "3936680",
    "end": "3941720"
  },
  {
    "text": "and uh not really a vulnerability but it's going to be a",
    "start": "3941720",
    "end": "3948119"
  },
  {
    "text": "thorn in someone's side uh it allows for instance low-level disc access using only iOS for an IDE",
    "start": "3948119",
    "end": "3955200"
  },
  {
    "text": "drive and there is code out there that does this you can use purely Port IO to read and write sectors um I I saw some",
    "start": "3955200",
    "end": "3963680"
  },
  {
    "text": "viruses that tried to do this I couldn't get them to work but this code that we refer to in references works great um",
    "start": "3963680",
    "end": "3972400"
  },
  {
    "text": "this does not require dma it does not require irqs therefore it does not require you to tweak with the IDT so um",
    "start": "3972400",
    "end": "3979160"
  },
  {
    "text": "pure Port iio so what well perhaps if there's",
    "start": "3979160",
    "end": "3984359"
  },
  {
    "text": "antivirus on the system that's looking for say device physical Drive access you",
    "start": "3984359",
    "end": "3989559"
  },
  {
    "text": "you know trying to stop you from changing the boot sector or doing low-level dis access now you can get",
    "start": "3989559",
    "end": "3995200"
  },
  {
    "text": "around that from user mode nobody as far as I know anticipates this um you could",
    "start": "3995200",
    "end": "4002640"
  },
  {
    "text": "perhaps evade system Integrity Assurance software that tries to keep you out of the kernel because now you have access",
    "start": "4002640",
    "end": "4008559"
  },
  {
    "text": "to the raw disc contents and maybe even some other possibilities that we'll just",
    "start": "4008559",
    "end": "4014680"
  },
  {
    "text": "barely GL U look at next perhaps you could defeat machine State preservation",
    "start": "4014680",
    "end": "4020400"
  },
  {
    "text": "software that tries to preserve the uh file system in",
    "start": "4020400",
    "end": "4025640"
  },
  {
    "text": "registry and restore it to a known good like wafty reboot and it's a cool way to",
    "start": "4025640",
    "end": "4031400"
  },
  {
    "text": "install EI boot root kit on a hard drive",
    "start": "4031400",
    "end": "4037599"
  },
  {
    "text": "um maybe it could be used as a local kernel back door um I have not written any code to do this I don't know any one",
    "start": "4037599",
    "end": "4044200"
  },
  {
    "text": "who has but dma supposedly has Provisions for memory to memory transfers that'd be pretty neat um if",
    "start": "4044200",
    "end": "4051200"
  },
  {
    "text": "you want to be like a little bit sci-fi you could try and reprogram the interrupt controller you could redirect",
    "start": "4051200",
    "end": "4057680"
  },
  {
    "text": "an irq to one of the exception interrupts now what this is going to do is the the OS exception interrupt",
    "start": "4057680",
    "end": "4064440"
  },
  {
    "text": "Handler is going to expect an error code to be pushed by the CPU being an irq",
    "start": "4064440",
    "end": "4069880"
  },
  {
    "text": "there should be no error code pushed so perhaps some will go haywire and maybe just magically will run some",
    "start": "4069880",
    "end": "4076359"
  },
  {
    "text": "code um of course you can modify arbitrary disc contents that's the uh you know that's the more Bal solution we",
    "start": "4076359",
    "end": "4083079"
  },
  {
    "text": "can force a violent reboot so there's no chance toh detect our modifications and um the benefit here is",
    "start": "4083079",
    "end": "4090200"
  },
  {
    "text": "this is much harder to monitor than any of the other ways of getting into the kernel so far obviously loading a driver",
    "start": "4090200",
    "end": "4095960"
  },
  {
    "text": "that's you know stop number one uh harder than device physical memory and uh ZW system debug control",
    "start": "4095960",
    "end": "4103920"
  },
  {
    "text": "which you guy Rand nut at hotmail.com pointed out some time back should be harder to monitor than that I don't know",
    "start": "4103920",
    "end": "4109880"
  },
  {
    "text": "if anybody monitors that it's just a thought well looks like we're winding",
    "start": "4109880",
    "end": "4115640"
  },
  {
    "text": "down here's some references U the things I talked about they're all in the slides hopefully the print's not too small to",
    "start": "4115640",
    "end": "4122040"
  },
  {
    "text": "not read but um that's about it does anybody have any",
    "start": "4122040",
    "end": "4130359"
  },
  {
    "text": "questions",
    "start": "4132799",
    "end": "4135798"
  },
  {
    "text": "D um you mean like um like I guess we could modify the registry at a thanks",
    "start": "4147480",
    "end": "4153359"
  },
  {
    "text": "Ben I guess we could try and modify the registry and maybe set ourselves as a dependency of that boot driver or",
    "start": "4153359",
    "end": "4159758"
  },
  {
    "text": "something or what did you have in mind okay um",
    "start": "4159759",
    "end": "4165719"
  },
  {
    "text": "well that's a good question um I'm not sure why it would do that and",
    "start": "4173440",
    "end": "4179960"
  },
  {
    "text": "I mean I I've I know what you're talking about I think I've seen it um I uh yeah",
    "start": "4179960",
    "end": "4186040"
  },
  {
    "text": "off the top of my head I don't have any way to to leverage that or make use of that but it's it's an interesting",
    "start": "4186040",
    "end": "4191199"
  },
  {
    "text": "observation the more we know about the boot process the the more evil things we can do you",
    "start": "4191199",
    "end": "4198840"
  },
  {
    "text": "know um I mean it looks like they they tighten some bolts here and there um I",
    "start": "4199000",
    "end": "4204400"
  },
  {
    "text": "didn't really I didn't really stumble over anything except for the uh the OS loader being in a different base the OS",
    "start": "4204400",
    "end": "4210440"
  },
  {
    "text": "loader having like a full mzp header and uh the modules being aligned by OS",
    "start": "4210440",
    "end": "4216760"
  },
  {
    "text": "loader um these are just things that we stumbled into because of what we were trying to implement I don't know what",
    "start": "4216760",
    "end": "4223800"
  },
  {
    "text": "else might have changed and by the way all those references are from Windows 2000 so like the gdt or like the the",
    "start": "4223800",
    "end": "4230640"
  },
  {
    "text": "whole kernel inos kernel initialization now all that could have changed we just looked at 2000 because 2000 is",
    "start": "4230640",
    "end": "4236880"
  },
  {
    "text": "cool is um",
    "start": "4236880",
    "end": "4242920"
  },
  {
    "text": "CD um any more questions we have CDs a valid question is can I have a CD",
    "start": "4242920",
    "end": "4250320"
  },
  {
    "text": "so um um we will be giving away the code maybe",
    "start": "4250320",
    "end": "4256880"
  },
  {
    "text": "not right now I'm going to use it as a as a bargaining chip to try and get some free drinks or something um but um any",
    "start": "4256880",
    "end": "4265440"
  },
  {
    "text": "anybody else um what um I'm sorry I'm not familiar with sis key I don't know",
    "start": "4265440",
    "end": "4271719"
  },
  {
    "text": "uh I'm not able to answer that you do okay it's all yours uh as as far as the",
    "start": "4271719",
    "end": "4278520"
  },
  {
    "text": "CIS key goes um that's actually a registry change to to harden the the Sam so what's happening is that will almost",
    "start": "4278520",
    "end": "4285159"
  },
  {
    "text": "all be in the uh the SE uh the security uh init um and yes it it does change it",
    "start": "4285159",
    "end": "4293440"
  },
  {
    "text": "although it doesn't change it for the scope of what we're doing",
    "start": "4293440",
    "end": "4299360"
  },
  {
    "text": "um uh for most of what we're doing uh actually that's actually an interesting",
    "start": "4301360",
    "end": "4307760"
  },
  {
    "text": "concept I guess I never even thought about uh I I know that CIS key level two is the one uh or is it level one that",
    "start": "4307760",
    "end": "4314239"
  },
  {
    "text": "just encrypts the the the",
    "start": "4314239",
    "end": "4318239"
  },
  {
    "text": "Sam gotcha I I actually have no idea I I don't think we've actually tested it",
    "start": "4320239",
    "end": "4325880"
  },
  {
    "text": "with that um in its heart it would probably be just another layer because",
    "start": "4325880",
    "end": "4330960"
  },
  {
    "text": "at that point because they can do it we can do it too uh we're just there it's just probably more Hoops that would have",
    "start": "4330960",
    "end": "4336360"
  },
  {
    "text": "to jump through um we didn't really do any testing with that so um because it's",
    "start": "4336360",
    "end": "4342320"
  },
  {
    "text": "all there I would assume that we certainly could um of course it's much",
    "start": "4342320",
    "end": "4347719"
  },
  {
    "text": "harder to convince somebody to be booting when they're typing a physical password in unless you can silently slip",
    "start": "4347719",
    "end": "4354800"
  },
  {
    "text": "a a CD in their drive without them noticing so uh in in that case like just",
    "start": "4354800",
    "end": "4362199"
  },
  {
    "text": "strong monitoring of where you're booting from uh which would probably be inherent in that uh would probably",
    "start": "4362199",
    "end": "4369159"
  },
  {
    "text": "prevent these types of attacks so uh as far as the technical side it could",
    "start": "4369159",
    "end": "4374320"
  },
  {
    "text": "they're all Hoops that could be jumped through actually made me think of something um that that made me think of",
    "start": "4374320",
    "end": "4380560"
  },
  {
    "text": "something kind of unrelated is that um because this can be done over Network boot this could be done by a purely",
    "start": "4380560",
    "end": "4385880"
  },
  {
    "text": "remote attacker um wake on land kind of creeps me out a little bit now this",
    "start": "4385880",
    "end": "4391159"
  },
  {
    "text": "means that the remote attacker would have to know the Mac addresses of shut off machines but then he could uh",
    "start": "4391159",
    "end": "4396480"
  },
  {
    "text": "perhaps knock over the real DHCP server install his own and then wake up some machines to come uh run his code all",
    "start": "4396480",
    "end": "4404280"
  },
  {
    "text": "from wherever his mom's basement or something or a Palm Pilot or a Palm",
    "start": "4404280",
    "end": "4412960"
  },
  {
    "text": "Pilot um anybody else CD one one left he wants the CD he",
    "start": "4412960",
    "end": "4421440"
  },
  {
    "text": "wants the CD the death match the guy in green with the coffee right there Ben no you got he raised his hand first he's",
    "start": "4421440",
    "end": "4427760"
  },
  {
    "text": "got dibs there there's more where that came from we'll uh I don't know if anybody",
    "start": "4427760",
    "end": "4433760"
  },
  {
    "text": "has a burner but if anybody does have cdrs and you got a",
    "start": "4433760",
    "end": "4438800"
  },
  {
    "text": "burner CDR okay um I'm sure come on this is black hat somebody's got to have a",
    "start": "4438800",
    "end": "4445840"
  },
  {
    "text": "CDR what's up oh hey what's up man um that's cool we uh yeah I mean the more",
    "start": "4445840",
    "end": "4453880"
  },
  {
    "text": "the merrier you know just don't accidentally leave it in your drive when you you know oh I got one last special",
    "start": "4453880",
    "end": "4459679"
  },
  {
    "text": "treat for y'all",
    "start": "4459679",
    "end": "4465280"
  },
  {
    "text": "gotcha",
    "start": "4465520",
    "end": "4468520"
  },
  {
    "text": "thanks",
    "start": "4492280",
    "end": "4495280"
  },
  {
    "text": "e",
    "start": "4522199",
    "end": "4525199"
  },
  {
    "text": "for",
    "start": "4552199",
    "end": "4555199"
  },
  {
    "text": "e",
    "start": "4582120",
    "end": "4585120"
  },
  {
    "text": "for",
    "start": "4612080",
    "end": "4615080"
  },
  {
    "text": "e",
    "start": "4642000",
    "end": "4645000"
  },
  {
    "text": "e",
    "start": "4672000",
    "end": "4675000"
  },
  {
    "text": "e",
    "start": "4701920",
    "end": "4704920"
  },
  {
    "text": "e",
    "start": "4731920",
    "end": "4734920"
  },
  {
    "text": "e",
    "start": "4761840",
    "end": "4764840"
  },
  {
    "text": "for",
    "start": "4791840",
    "end": "4794840"
  },
  {
    "text": "e",
    "start": "4821760",
    "end": "4824760"
  },
  {
    "text": "e",
    "start": "4851719",
    "end": "4854719"
  },
  {
    "text": "e",
    "start": "4881639",
    "end": "4884639"
  },
  {
    "text": "e",
    "start": "4911639",
    "end": "4914639"
  },
  {
    "text": "e",
    "start": "4941560",
    "end": "4944560"
  },
  {
    "text": "e",
    "start": "4971560",
    "end": "4974560"
  },
  {
    "text": "e",
    "start": "5001480",
    "end": "5004480"
  },
  {
    "text": "e",
    "start": "5031480",
    "end": "5034480"
  },
  {
    "text": "e",
    "start": "5061360",
    "end": "5064360"
  },
  {
    "text": "e",
    "start": "5091360",
    "end": "5094360"
  },
  {
    "text": "e",
    "start": "5121280",
    "end": "5124280"
  },
  {
    "text": "e",
    "start": "5151280",
    "end": "5154280"
  },
  {
    "text": "e",
    "start": "5181199",
    "end": "5184199"
  },
  {
    "text": "e",
    "start": "5211199",
    "end": "5214199"
  },
  {
    "text": "e",
    "start": "5241119",
    "end": "5244119"
  },
  {
    "text": "e",
    "start": "5271119",
    "end": "5274119"
  },
  {
    "text": "e",
    "start": "5301040",
    "end": "5304040"
  },
  {
    "text": "e",
    "start": "5331000",
    "end": "5334000"
  },
  {
    "text": "for",
    "start": "5360920",
    "end": "5363920"
  },
  {
    "text": "for",
    "start": "5390920",
    "end": "5393920"
  },
  {
    "text": "for",
    "start": "5420840",
    "end": "5423840"
  },
  {
    "text": "e",
    "start": "5450840",
    "end": "5453840"
  },
  {
    "text": "e",
    "start": "5480760",
    "end": "5483760"
  },
  {
    "text": "e",
    "start": "6019960",
    "end": "6022960"
  },
  {
    "text": "e",
    "start": "7218159",
    "end": "7221159"
  }
]