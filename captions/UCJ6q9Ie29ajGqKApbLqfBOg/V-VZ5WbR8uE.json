[
  {
    "text": "foreign",
    "start": "1979",
    "end": "4159"
  },
  {
    "text": "and today I'm going to present to you",
    "start": "10880",
    "end": "12960"
  },
  {
    "text": "Json security off or how we abuse Json",
    "start": "12960",
    "end": "16198"
  },
  {
    "text": "syntax to phone Cloud applications",
    "start": "16199",
    "end": "18840"
  },
  {
    "text": "so a short World about myself I'm a",
    "start": "18840",
    "end": "21240"
  },
  {
    "text": "vulnerability researcher at Clarity",
    "start": "21240",
    "end": "22680"
  },
  {
    "text": "team82 at Cloud intimate 2 we do",
    "start": "22680",
    "end": "25140"
  },
  {
    "text": "responsible disclosure that means that",
    "start": "25140",
    "end": "27180"
  },
  {
    "text": "we target very interesting be it",
    "start": "27180",
    "end": "29580"
  },
  {
    "text": "physical devices scada iot devices",
    "start": "29580",
    "end": "32419"
  },
  {
    "text": "applications Cloud applications",
    "start": "32420",
    "end": "34440"
  },
  {
    "text": "basically everything and we report the",
    "start": "34440",
    "end": "36780"
  },
  {
    "text": "vulnerabilities we find to the vendors",
    "start": "36780",
    "end": "38340"
  },
  {
    "text": "and as you can see we have a very cool",
    "start": "38340",
    "end": "40500"
  },
  {
    "text": "lab that we get to have a lot of fun",
    "start": "40500",
    "end": "42000"
  },
  {
    "text": "with and I personally love researching",
    "start": "42000",
    "end": "45300"
  },
  {
    "text": "cloud and web applications because the",
    "start": "45300",
    "end": "47879"
  },
  {
    "text": "vast scale it offers when you found when",
    "start": "47879",
    "end": "50219"
  },
  {
    "text": "you find one vulnerability and lastly",
    "start": "50219",
    "end": "52860"
  },
  {
    "text": "we're also participating in hacking",
    "start": "52860",
    "end": "54420"
  },
  {
    "text": "competitions and ctfs and we are",
    "start": "54420",
    "end": "56460"
  },
  {
    "text": "actually participating in pontoon",
    "start": "56460",
    "end": "58020"
  },
  {
    "text": "Toronto right now and so we have a big",
    "start": "58020",
    "end": "61199"
  },
  {
    "text": "few big week on our hands",
    "start": "61199",
    "end": "64018"
  },
  {
    "text": "so let's talk about our agenda for today",
    "start": "64019",
    "end": "66600"
  },
  {
    "text": "today I'm going to present to you a",
    "start": "66600",
    "end": "68700"
  },
  {
    "text": "research I've done in the last year and",
    "start": "68700",
    "end": "72000"
  },
  {
    "text": "where we found a few cool Cloud",
    "start": "72000",
    "end": "74100"
  },
  {
    "text": "vulnerabilities and when we try to",
    "start": "74100",
    "end": "76619"
  },
  {
    "text": "exploit these vulnerabilities we",
    "start": "76619",
    "end": "78540"
  },
  {
    "text": "actually got stuck you see we were",
    "start": "78540",
    "end": "80520"
  },
  {
    "text": "blocked by AWS security mechanism more",
    "start": "80520",
    "end": "83580"
  },
  {
    "text": "specifically awaf and that threw us in a",
    "start": "83580",
    "end": "86580"
  },
  {
    "text": "loop and because of this we had the need",
    "start": "86580",
    "end": "89100"
  },
  {
    "text": "to bypass this rough and be able to",
    "start": "89100",
    "end": "91680"
  },
  {
    "text": "exploit our vulnerabilities",
    "start": "91680",
    "end": "94920"
  },
  {
    "text": "these we were able to do this by",
    "start": "94920",
    "end": "96840"
  },
  {
    "text": "analyzing how oaf works and how it Flags",
    "start": "96840",
    "end": "99659"
  },
  {
    "text": "requests as malicious as and as safe and",
    "start": "99659",
    "end": "102540"
  },
  {
    "text": "through that we were able to actually",
    "start": "102540",
    "end": "103979"
  },
  {
    "text": "find a generic rough bypass that",
    "start": "103979",
    "end": "106259"
  },
  {
    "text": "invested that we tested against all of",
    "start": "106259",
    "end": "108240"
  },
  {
    "text": "vendors and in all cases it just worked",
    "start": "108240",
    "end": "111240"
  },
  {
    "text": "plane work nothing out of the box just",
    "start": "111240",
    "end": "113700"
  },
  {
    "text": "send it and forget it and lastly I'm",
    "start": "113700",
    "end": "116159"
  },
  {
    "text": "going to present some tools and open",
    "start": "116159",
    "end": "117960"
  },
  {
    "text": "source stuff we wrote that you can use",
    "start": "117960",
    "end": "119939"
  },
  {
    "text": "this research on your own",
    "start": "119939",
    "end": "122340"
  },
  {
    "text": "so late last year we were returning a",
    "start": "122340",
    "end": "125340"
  },
  {
    "text": "company named cambium networks now",
    "start": "125340",
    "end": "127200"
  },
  {
    "text": "cambium networks does a lot of wireless",
    "start": "127200",
    "end": "129679"
  },
  {
    "text": "communication devices be it access",
    "start": "129679",
    "end": "132000"
  },
  {
    "text": "points long range access points antennas",
    "start": "132000",
    "end": "134940"
  },
  {
    "text": "4G routers basically every kind of",
    "start": "134940",
    "end": "137760"
  },
  {
    "text": "wireless connection you can think of",
    "start": "137760",
    "end": "139379"
  },
  {
    "text": "they do it and in this particular case",
    "start": "139379",
    "end": "142020"
  },
  {
    "text": "we weren't looking at the physical",
    "start": "142020",
    "end": "143700"
  },
  {
    "text": "devices themselves but instead we're",
    "start": "143700",
    "end": "145920"
  },
  {
    "text": "looking at a platform called CN Maestro",
    "start": "145920",
    "end": "148620"
  },
  {
    "text": "now CN Maestro is a platform that allows",
    "start": "148620",
    "end": "151739"
  },
  {
    "text": "it administrators and a system augmented",
    "start": "151739",
    "end": "153840"
  },
  {
    "text": "as administrators to take a look at",
    "start": "153840",
    "end": "156239"
  },
  {
    "text": "their devices see their location status",
    "start": "156239",
    "end": "158540"
  },
  {
    "text": "configurations and even perform some",
    "start": "158540",
    "end": "160620"
  },
  {
    "text": "actions like push a new firmware push",
    "start": "160620",
    "end": "163080"
  },
  {
    "text": "new configurations it basically allows",
    "start": "163080",
    "end": "165360"
  },
  {
    "text": "them to control it",
    "start": "165360",
    "end": "167400"
  },
  {
    "text": "when we talk about how CN Maestro is",
    "start": "167400",
    "end": "169680"
  },
  {
    "text": "built it is built in either one of two",
    "start": "169680",
    "end": "171959"
  },
  {
    "text": "flavors it is either an on-prem solution",
    "start": "171959",
    "end": "174420"
  },
  {
    "text": "that the company buys and installs on",
    "start": "174420",
    "end": "176940"
  },
  {
    "text": "their own machine and then all their",
    "start": "176940",
    "end": "179280"
  },
  {
    "text": "wireless access points connect to this",
    "start": "179280",
    "end": "181200"
  },
  {
    "text": "machine and are managed by it or the",
    "start": "181200",
    "end": "184800"
  },
  {
    "text": "second in my opinion more interesting",
    "start": "184800",
    "end": "186980"
  },
  {
    "text": "flavor is a cloud deployment and in this",
    "start": "186980",
    "end": "190680"
  },
  {
    "text": "deployment type I sync my machine to the",
    "start": "190680",
    "end": "193860"
  },
  {
    "text": "cloud and I can manage it through",
    "start": "193860",
    "end": "195659"
  },
  {
    "text": "cambium's application",
    "start": "195659",
    "end": "197580"
  },
  {
    "text": "and and of course luckily for us when we",
    "start": "197580",
    "end": "201360"
  },
  {
    "text": "went to cambium's Cloud we noticed that",
    "start": "201360",
    "end": "203640"
  },
  {
    "text": "it we can register we can just register",
    "start": "203640",
    "end": "205980"
  },
  {
    "text": "freely and that put the cost of Entry to",
    "start": "205980",
    "end": "208500"
  },
  {
    "text": "This research at a zero because we just",
    "start": "208500",
    "end": "211739"
  },
  {
    "text": "registered and when we registered we",
    "start": "211739",
    "end": "214980"
  },
  {
    "text": "noticed that a new instance a unique",
    "start": "214980",
    "end": "217019"
  },
  {
    "text": "instance of CN Maestro is being set up",
    "start": "217019",
    "end": "219180"
  },
  {
    "text": "and we were able to access it through a",
    "start": "219180",
    "end": "221159"
  },
  {
    "text": "Nick guide through a URL",
    "start": "221159",
    "end": "224879"
  },
  {
    "text": "now this gave us two options we could",
    "start": "224879",
    "end": "228780"
  },
  {
    "text": "either Black Box the cloud meaning we",
    "start": "228780",
    "end": "231720"
  },
  {
    "text": "could try and find vulnerabilities on",
    "start": "231720",
    "end": "233400"
  },
  {
    "text": "the cloud platform itself or and in my",
    "start": "233400",
    "end": "235920"
  },
  {
    "text": "opinion the better the better version is",
    "start": "235920",
    "end": "237900"
  },
  {
    "text": "to research the on-prem solution because",
    "start": "237900",
    "end": "240720"
  },
  {
    "text": "we noticed that it actually looks the",
    "start": "240720",
    "end": "242700"
  },
  {
    "text": "same and it might have a similar code",
    "start": "242700",
    "end": "244319"
  },
  {
    "text": "base and once again we were lucky and we",
    "start": "244319",
    "end": "246780"
  },
  {
    "text": "were able to just download this solution",
    "start": "246780",
    "end": "249120"
  },
  {
    "text": "out of their website",
    "start": "249120",
    "end": "251280"
  },
  {
    "text": "and when we downloaded it we noticed",
    "start": "251280",
    "end": "253920"
  },
  {
    "text": "that it is in an OVA and we can just",
    "start": "253920",
    "end": "256199"
  },
  {
    "text": "plug it into our favorite virtual",
    "start": "256199",
    "end": "258239"
  },
  {
    "text": "machine software be it VMware virtualbox",
    "start": "258239",
    "end": "260760"
  },
  {
    "text": "whatever and and then we have the access",
    "start": "260760",
    "end": "263460"
  },
  {
    "text": "to CN maestro",
    "start": "263460",
    "end": "265320"
  },
  {
    "text": "inside OVA there was a very basic Linux",
    "start": "265320",
    "end": "267900"
  },
  {
    "text": "distribution with a lot of proprietary",
    "start": "267900",
    "end": "270479"
  },
  {
    "text": "code and a lot of proprietary services",
    "start": "270479",
    "end": "272240"
  },
  {
    "text": "and that actually manage the physical",
    "start": "272240",
    "end": "275160"
  },
  {
    "text": "devices themselves",
    "start": "275160",
    "end": "277560"
  },
  {
    "text": "now most of the services were written in",
    "start": "277560",
    "end": "280020"
  },
  {
    "text": "nodejs so that's our exploit path trying",
    "start": "280020",
    "end": "283620"
  },
  {
    "text": "to exploit a node.js application and",
    "start": "283620",
    "end": "286500"
  },
  {
    "text": "inside of it there are many different",
    "start": "286500",
    "end": "288479"
  },
  {
    "text": "servlets that serve different functions",
    "start": "288479",
    "end": "291060"
  },
  {
    "text": "be it allowing administers to connect to",
    "start": "291060",
    "end": "293340"
  },
  {
    "text": "the to the application uh sending",
    "start": "293340",
    "end": "296040"
  },
  {
    "text": "commands to the cloud Etc to the devices",
    "start": "296040",
    "end": "298560"
  },
  {
    "text": "Etc",
    "start": "298560",
    "end": "299520"
  },
  {
    "text": "and there are actually many of them",
    "start": "299520",
    "end": "301620"
  },
  {
    "text": "around 10.",
    "start": "301620",
    "end": "304080"
  },
  {
    "text": "pretty soon enough we're we reached a",
    "start": "304080",
    "end": "306840"
  },
  {
    "text": "very cool SQL injection vulnerability",
    "start": "306840",
    "end": "308639"
  },
  {
    "text": "that basically allowed us access to the",
    "start": "308639",
    "end": "310440"
  },
  {
    "text": "database this happened because they just",
    "start": "310440",
    "end": "312540"
  },
  {
    "text": "appended user data in a route that took",
    "start": "312540",
    "end": "315000"
  },
  {
    "text": "Max serial number of devices into an SQL",
    "start": "315000",
    "end": "318600"
  },
  {
    "text": "query and we were able to inject",
    "start": "318600",
    "end": "319979"
  },
  {
    "text": "malicious SQL syntax to the up to the",
    "start": "319979",
    "end": "324180"
  },
  {
    "text": "database",
    "start": "324180",
    "end": "327020"
  },
  {
    "text": "what can we do with vulnerability it's",
    "start": "327060",
    "end": "328800"
  },
  {
    "text": "very simple we can start accessory in",
    "start": "328800",
    "end": "331320"
  },
  {
    "text": "data a lot of sensitive data is being",
    "start": "331320",
    "end": "333300"
  },
  {
    "text": "saved in this application be it cookies",
    "start": "333300",
    "end": "335039"
  },
  {
    "text": "tokens SSH Keys everything that's",
    "start": "335039",
    "end": "338460"
  },
  {
    "text": "interesting to us but sadly we could not",
    "start": "338460",
    "end": "341340"
  },
  {
    "text": "do it",
    "start": "341340",
    "end": "342539"
  },
  {
    "text": "you see we started our process into",
    "start": "342539",
    "end": "345120"
  },
  {
    "text": "building our payload meaning thanking",
    "start": "345120",
    "end": "347400"
  },
  {
    "text": "the vulnerability and creating an",
    "start": "347400",
    "end": "348780"
  },
  {
    "text": "exploit out of it and that's where we",
    "start": "348780",
    "end": "351120"
  },
  {
    "text": "had a lot of hurdles and stuff that we",
    "start": "351120",
    "end": "353100"
  },
  {
    "text": "had to come by",
    "start": "353100",
    "end": "354600"
  },
  {
    "text": "first of all when it tried to expeditate",
    "start": "354600",
    "end": "356820"
  },
  {
    "text": "Simple Text we got an exception the main",
    "start": "356820",
    "end": "360419"
  },
  {
    "text": "route of this vulnerability only allowed",
    "start": "360419",
    "end": "362520"
  },
  {
    "text": "us to exfiltrate device IDs meaning",
    "start": "362520",
    "end": "364680"
  },
  {
    "text": "integers so we had to take the text that",
    "start": "364680",
    "end": "367080"
  },
  {
    "text": "we want to explorate be it assh Keys be",
    "start": "367080",
    "end": "369240"
  },
  {
    "text": "it cookies and converted to an integer",
    "start": "369240",
    "end": "372539"
  },
  {
    "text": "and using some SQL magic it's pretty",
    "start": "372539",
    "end": "374820"
  },
  {
    "text": "simple you can just take a text so split",
    "start": "374820",
    "end": "378180"
  },
  {
    "text": "up into an array and returning rows of",
    "start": "378180",
    "end": "381000"
  },
  {
    "text": "characters and then you need to convert",
    "start": "381000",
    "end": "383699"
  },
  {
    "text": "it into integers",
    "start": "383699",
    "end": "385199"
  },
  {
    "text": "and then we were getting the ability to",
    "start": "385199",
    "end": "387060"
  },
  {
    "text": "exfiltrate some data but that wasn't",
    "start": "387060",
    "end": "389940"
  },
  {
    "text": "enough yet you see when we accelerate",
    "start": "389940",
    "end": "393000"
  },
  {
    "text": "data we noticed that the data comes in a",
    "start": "393000",
    "end": "396180"
  },
  {
    "text": "scrambled order meaning we don't save",
    "start": "396180",
    "end": "398100"
  },
  {
    "text": "the correct order of a word and once",
    "start": "398100",
    "end": "402660"
  },
  {
    "text": "again we fixed it with pretty simple SQL",
    "start": "402660",
    "end": "405720"
  },
  {
    "text": "magic we just took the index of each",
    "start": "405720",
    "end": "408419"
  },
  {
    "text": "character multiplied by a thousand embed",
    "start": "408419",
    "end": "410940"
  },
  {
    "text": "and then by doing a simple division",
    "start": "410940",
    "end": "412620"
  },
  {
    "text": "division and calculation we can extract",
    "start": "412620",
    "end": "415620"
  },
  {
    "text": "both the character and the index of the",
    "start": "415620",
    "end": "418800"
  },
  {
    "text": "character",
    "start": "418800",
    "end": "420539"
  },
  {
    "text": "lastly this endpoint was very very slow",
    "start": "420539",
    "end": "423539"
  },
  {
    "text": "and we wanted to express a lot of data",
    "start": "423539",
    "end": "425400"
  },
  {
    "text": "through it meaning that when we try to",
    "start": "425400",
    "end": "427860"
  },
  {
    "text": "exfiltrate for example all of the users",
    "start": "427860",
    "end": "430259"
  },
  {
    "text": "or of the user's password we got timed",
    "start": "430259",
    "end": "432960"
  },
  {
    "text": "out because each each exported row was",
    "start": "432960",
    "end": "435479"
  },
  {
    "text": "returned in different row and multiple",
    "start": "435479",
    "end": "437520"
  },
  {
    "text": "actions were performed on it",
    "start": "437520",
    "end": "440160"
  },
  {
    "text": "and once again we can fix it pretty",
    "start": "440160",
    "end": "442319"
  },
  {
    "text": "easily with SQL I know it looks a little",
    "start": "442319",
    "end": "444840"
  },
  {
    "text": "bit funny but simple SQL syntax that",
    "start": "444840",
    "end": "447900"
  },
  {
    "text": "basically constructs one big integer out",
    "start": "447900",
    "end": "450180"
  },
  {
    "text": "of seven characters and returns seven",
    "start": "450180",
    "end": "453720"
  },
  {
    "text": "characters in one returned value",
    "start": "453720",
    "end": "456900"
  },
  {
    "text": "cool now this is where I usually just",
    "start": "456900",
    "end": "459840"
  },
  {
    "text": "send my boss my boss an ambiguous",
    "start": "459840",
    "end": "461759"
  },
  {
    "text": "message like hey we did it and then I",
    "start": "461759",
    "end": "464160"
  },
  {
    "text": "ghost him for the next seven days",
    "start": "464160",
    "end": "467539"
  },
  {
    "text": "so we try to take this vulnerability to",
    "start": "467580",
    "end": "469560"
  },
  {
    "text": "the cloud and we",
    "start": "469560",
    "end": "471479"
  },
  {
    "text": "were blocked I kind of spoiled at the",
    "start": "471479",
    "end": "473699"
  },
  {
    "text": "beginning but we were blocked you see",
    "start": "473699",
    "end": "475740"
  },
  {
    "text": "our requests returned forward three",
    "start": "475740",
    "end": "478319"
  },
  {
    "text": "and after a few minutes of complete",
    "start": "478319",
    "end": "481259"
  },
  {
    "text": "shock and we didn't know what to do with",
    "start": "481259",
    "end": "483479"
  },
  {
    "text": "ourselves we noticed this cute thing in",
    "start": "483479",
    "end": "486599"
  },
  {
    "text": "the response and that this header server",
    "start": "486599",
    "end": "490020"
  },
  {
    "text": "AWS clb is what triggered our entire",
    "start": "490020",
    "end": "493199"
  },
  {
    "text": "research you see we were blocked by AWS",
    "start": "493199",
    "end": "497780"
  },
  {
    "text": "awl 12 offers is a web application",
    "start": "497780",
    "end": "501120"
  },
  {
    "text": "firewall it basically looks at the",
    "start": "501120",
    "end": "503580"
  },
  {
    "text": "request and response that users send to",
    "start": "503580",
    "end": "506280"
  },
  {
    "text": "an application and tries to flag them",
    "start": "506280",
    "end": "508800"
  },
  {
    "text": "for malicious in SQL injection and shell",
    "start": "508800",
    "end": "511860"
  },
  {
    "text": "injection oscoma injection xss attacks",
    "start": "511860",
    "end": "515099"
  },
  {
    "text": "and our goal was to exfiltrate all the",
    "start": "515099",
    "end": "518039"
  },
  {
    "text": "juicy data that was saved on the cloud",
    "start": "518039",
    "end": "520020"
  },
  {
    "text": "so we had to find a bypass",
    "start": "520020",
    "end": "523560"
  },
  {
    "text": "that's where we created a very unique",
    "start": "523560",
    "end": "526860"
  },
  {
    "text": "set AWS setup of our own with the intent",
    "start": "526860",
    "end": "529860"
  },
  {
    "text": "to try and analyze how it works and in",
    "start": "529860",
    "end": "532380"
  },
  {
    "text": "the next three I said three to took more",
    "start": "532380",
    "end": "534959"
  },
  {
    "text": "like 12 days I just sent was sending",
    "start": "534959",
    "end": "539459"
  },
  {
    "text": "payloads and trying to see what gets",
    "start": "539459",
    "end": "541980"
  },
  {
    "text": "blocked what doesn't get blocked and how",
    "start": "541980",
    "end": "544500"
  },
  {
    "text": "the wife could flag request as malicious",
    "start": "544500",
    "end": "548279"
  },
  {
    "text": "now I'm not a buff developer myself so",
    "start": "548279",
    "end": "551040"
  },
  {
    "text": "don't take tips from me but if I was a",
    "start": "551040",
    "end": "553560"
  },
  {
    "text": "web developer that's how I would flag",
    "start": "553560",
    "end": "555899"
  },
  {
    "text": "request as malicious I think there are",
    "start": "555899",
    "end": "558600"
  },
  {
    "text": "only two there are at least two",
    "start": "558600",
    "end": "560220"
  },
  {
    "text": "approaches and most of the time you need",
    "start": "560220",
    "end": "561899"
  },
  {
    "text": "to combine multiple approaches in order",
    "start": "561899",
    "end": "564120"
  },
  {
    "text": "to flag a request as malicious the first",
    "start": "564120",
    "end": "566220"
  },
  {
    "text": "approach is to look for blacklisted SQL",
    "start": "566220",
    "end": "568920"
  },
  {
    "text": "Syntax for example we know that select",
    "start": "568920",
    "end": "570839"
  },
  {
    "text": "we know that Union we know that like are",
    "start": "570839",
    "end": "573660"
  },
  {
    "text": "clearly SQL directives and if we see too",
    "start": "573660",
    "end": "576360"
  },
  {
    "text": "many of them in a request we can simply",
    "start": "576360",
    "end": "578519"
  },
  {
    "text": "drop it",
    "start": "578519",
    "end": "580320"
  },
  {
    "text": "the second approach which I think is",
    "start": "580320",
    "end": "583080"
  },
  {
    "text": "allium complex is try to understand SQL",
    "start": "583080",
    "end": "586500"
  },
  {
    "text": "syntax from the request meaning does",
    "start": "586500",
    "end": "589680"
  },
  {
    "text": "this payload can construct an SQL syntax",
    "start": "589680",
    "end": "593339"
  },
  {
    "text": "in some specific conditions",
    "start": "593339",
    "end": "596820"
  },
  {
    "text": "but that's what started our research",
    "start": "596820",
    "end": "599880"
  },
  {
    "text": "question what would happen if there was",
    "start": "599880",
    "end": "602580"
  },
  {
    "text": "SQL syntax valid SQL syntax that the",
    "start": "602580",
    "end": "605580"
  },
  {
    "text": "wolf did not know of what would happen",
    "start": "605580",
    "end": "607620"
  },
  {
    "text": "if we can confuse the WAFF and make him",
    "start": "607620",
    "end": "609420"
  },
  {
    "text": "deem as a payload as non-exploitable and",
    "start": "609420",
    "end": "613140"
  },
  {
    "text": "non-xql even if it would",
    "start": "613140",
    "end": "617420"
  },
  {
    "text": "that's when I'm going to introduce to",
    "start": "618120",
    "end": "619920"
  },
  {
    "text": "you Json in SQL which kind of spoiled",
    "start": "619920",
    "end": "622500"
  },
  {
    "text": "the whole thing but that's the answer of",
    "start": "622500",
    "end": "624720"
  },
  {
    "text": "this syntax",
    "start": "624720",
    "end": "626820"
  },
  {
    "text": "what is Json Json is one of the most",
    "start": "626820",
    "end": "628980"
  },
  {
    "text": "common data format in the world we use",
    "start": "628980",
    "end": "631680"
  },
  {
    "text": "it constantly and more specifically we",
    "start": "631680",
    "end": "635040"
  },
  {
    "text": "use it as in web apis in requests to",
    "start": "635040",
    "end": "638640"
  },
  {
    "text": "store data and to save it and to send it",
    "start": "638640",
    "end": "640380"
  },
  {
    "text": "to different servers and currently all",
    "start": "640380",
    "end": "643620"
  },
  {
    "text": "SQL databases",
    "start": "643620",
    "end": "646320"
  },
  {
    "text": "have added native Json support for their",
    "start": "646320",
    "end": "649980"
  },
  {
    "text": "implementation",
    "start": "649980",
    "end": "652980"
  },
  {
    "text": "but why should we use it as developers",
    "start": "653160",
    "end": "655200"
  },
  {
    "text": "well I'm not a developer once again so I",
    "start": "655200",
    "end": "657779"
  },
  {
    "text": "ask my few of my friends and asked them",
    "start": "657779",
    "end": "659880"
  },
  {
    "text": "hey why would you use a Json SQL and",
    "start": "659880",
    "end": "662700"
  },
  {
    "text": "they told me yeah because we can just",
    "start": "662700",
    "end": "664500"
  },
  {
    "text": "work with Json directly in SQL meaning",
    "start": "664500",
    "end": "668100"
  },
  {
    "text": "we can increase our efficiency for",
    "start": "668100",
    "end": "670800"
  },
  {
    "text": "example instead of doing a lot of API",
    "start": "670800",
    "end": "673980"
  },
  {
    "text": "calls and database calls to the database",
    "start": "673980",
    "end": "676500"
  },
  {
    "text": "itself and fetching data and trying to",
    "start": "676500",
    "end": "678839"
  },
  {
    "text": "pre-process it in a way of Json we can",
    "start": "678839",
    "end": "682620"
  },
  {
    "text": "just immediately return Json data from",
    "start": "682620",
    "end": "684899"
  },
  {
    "text": "the SQL itself and because we work in SQ",
    "start": "684899",
    "end": "688740"
  },
  {
    "text": "with Json so much it could help us a lot",
    "start": "688740",
    "end": "692760"
  },
  {
    "text": "and that's basically the process you can",
    "start": "692760",
    "end": "695220"
  },
  {
    "text": "take a table",
    "start": "695220",
    "end": "696660"
  },
  {
    "text": "use some SQL query to modify this and",
    "start": "696660",
    "end": "700380"
  },
  {
    "text": "parse it as Json and then just return",
    "start": "700380",
    "end": "703920"
  },
  {
    "text": "the data as Json completely",
    "start": "703920",
    "end": "707940"
  },
  {
    "text": "when we took when we look at Json",
    "start": "707940",
    "end": "709920"
  },
  {
    "text": "support in SQL we see that",
    "start": "709920",
    "end": "712740"
  },
  {
    "text": "all database engine or that all database",
    "start": "712740",
    "end": "715380"
  },
  {
    "text": "engines support SQL in some cases as",
    "start": "715380",
    "end": "718200"
  },
  {
    "text": "soon as to 2012 in the case of postgres",
    "start": "718200",
    "end": "721800"
  },
  {
    "text": "most of them added proprietary support",
    "start": "721800",
    "end": "724380"
  },
  {
    "text": "proprietary sparser and some and",
    "start": "724380",
    "end": "727200"
  },
  {
    "text": "everyone added functions and operators",
    "start": "727200",
    "end": "729839"
  },
  {
    "text": "of their own it's so we can see",
    "start": "729839",
    "end": "732180"
  },
  {
    "text": "different SQL syntax in all database",
    "start": "732180",
    "end": "734160"
  },
  {
    "text": "engines",
    "start": "734160",
    "end": "736380"
  },
  {
    "text": "that's when we get to the cool stuff",
    "start": "736380",
    "end": "738000"
  },
  {
    "text": "that's like uh the intro we are now",
    "start": "738000",
    "end": "741540"
  },
  {
    "text": "going to construct new SQL injection",
    "start": "741540",
    "end": "743880"
  },
  {
    "text": "payloads we all know that in SQL in at",
    "start": "743880",
    "end": "747240"
  },
  {
    "text": "least blind scale we try to get true",
    "start": "747240",
    "end": "749399"
  },
  {
    "text": "statements meaning does this uh does",
    "start": "749399",
    "end": "753240"
  },
  {
    "text": "this password equal to the admin",
    "start": "753240",
    "end": "754620"
  },
  {
    "text": "password the answer is no but we can",
    "start": "754620",
    "end": "756779"
  },
  {
    "text": "create modify the SQL syntax and changes",
    "start": "756779",
    "end": "759720"
  },
  {
    "text": "to do does this password equals to the",
    "start": "759720",
    "end": "762120"
  },
  {
    "text": "admin passwords or a true statements",
    "start": "762120",
    "end": "764940"
  },
  {
    "text": "like one equal one and that's when we",
    "start": "764940",
    "end": "767639"
  },
  {
    "text": "created new Json new sqlite payloads",
    "start": "767639",
    "end": "770880"
  },
  {
    "text": "using Json",
    "start": "770880",
    "end": "773160"
  },
  {
    "text": "let's take a look at this",
    "start": "773160",
    "end": "776100"
  },
  {
    "text": "operator as an example it basically",
    "start": "776100",
    "end": "778260"
  },
  {
    "text": "translates to does the left Json contain",
    "start": "778260",
    "end": "781139"
  },
  {
    "text": "is the left Json contained in the right",
    "start": "781139",
    "end": "783420"
  },
  {
    "text": "Json and we of course can create",
    "start": "783420",
    "end": "786500"
  },
  {
    "text": "situations where it is true and we can",
    "start": "786500",
    "end": "789360"
  },
  {
    "text": "create a simple SQL payload that",
    "start": "789360",
    "end": "792060"
  },
  {
    "text": "basically translates to true",
    "start": "792060",
    "end": "795560"
  },
  {
    "text": "a similar parallel can be created in",
    "start": "795600",
    "end": "797639"
  },
  {
    "text": "MySQL with the operator will be the",
    "start": "797639",
    "end": "800279"
  },
  {
    "text": "function Json extract that basically",
    "start": "800279",
    "end": "802139"
  },
  {
    "text": "extracts a key a value using a key and",
    "start": "802139",
    "end": "806100"
  },
  {
    "text": "once again it's pretty simple to create",
    "start": "806100",
    "end": "808800"
  },
  {
    "text": "a true statement",
    "start": "808800",
    "end": "811620"
  },
  {
    "text": "and lastly we have this operator that is",
    "start": "811620",
    "end": "815220"
  },
  {
    "text": "basically translates to the same thing",
    "start": "815220",
    "end": "816600"
  },
  {
    "text": "Json extract and we ask it to extract",
    "start": "816600",
    "end": "820560"
  },
  {
    "text": "the key the value with the key a",
    "start": "820560",
    "end": "824519"
  },
  {
    "text": "and",
    "start": "824519",
    "end": "825779"
  },
  {
    "text": "using combining multiple payloads we can",
    "start": "825779",
    "end": "828360"
  },
  {
    "text": "create some enstrosities some very very",
    "start": "828360",
    "end": "830519"
  },
  {
    "text": "confusing SQL syntax that will for sure",
    "start": "830519",
    "end": "833820"
  },
  {
    "text": "confuse the WAFF",
    "start": "833820",
    "end": "835440"
  },
  {
    "text": "so after we have some basic",
    "start": "835440",
    "end": "837120"
  },
  {
    "text": "understanding of Json in SQL we can",
    "start": "837120",
    "end": "840600"
  },
  {
    "text": "start to test our theory that maybe the",
    "start": "840600",
    "end": "843240"
  },
  {
    "text": "WASP won't know of it",
    "start": "843240",
    "end": "846240"
  },
  {
    "text": "and when we go back to our setup we",
    "start": "846240",
    "end": "849839"
  },
  {
    "text": "tried a Google fashion tag or a equal a",
    "start": "849839",
    "end": "852360"
  },
  {
    "text": "or one equal one and of course we get",
    "start": "852360",
    "end": "854760"
  },
  {
    "text": "blocked because the rough knows this",
    "start": "854760",
    "end": "856560"
  },
  {
    "text": "payload and can immediately flag it as",
    "start": "856560",
    "end": "859740"
  },
  {
    "text": "malicious",
    "start": "859740",
    "end": "860880"
  },
  {
    "text": "but when we try our new json-based",
    "start": "860880",
    "end": "864540"
  },
  {
    "text": "syntax we can see that the request",
    "start": "864540",
    "end": "866639"
  },
  {
    "text": "passes by",
    "start": "866639",
    "end": "868079"
  },
  {
    "text": "and that's because the WAFF doesn't know",
    "start": "868079",
    "end": "870600"
  },
  {
    "text": "how to parse our new syntax and it just",
    "start": "870600",
    "end": "873660"
  },
  {
    "text": "decides yeah that's not SQL it can be",
    "start": "873660",
    "end": "876300"
  },
  {
    "text": "SQL so I'll let the request slide by",
    "start": "876300",
    "end": "880579"
  },
  {
    "text": "now let's get back to the case at hand",
    "start": "881220",
    "end": "883680"
  },
  {
    "text": "what was our goal our goal was to bypass",
    "start": "883680",
    "end": "887339"
  },
  {
    "text": "the WAFF which we just did and exploit",
    "start": "887339",
    "end": "890579"
  },
  {
    "text": "our vulnerability",
    "start": "890579",
    "end": "892680"
  },
  {
    "text": "we want to use our SQ injection bypass",
    "start": "892680",
    "end": "896160"
  },
  {
    "text": "the WAFF and exfiltrate admin tokens",
    "start": "896160",
    "end": "899040"
  },
  {
    "text": "other users tokens SSH Keys private Keys",
    "start": "899040",
    "end": "902940"
  },
  {
    "text": "everything",
    "start": "902940",
    "end": "904079"
  },
  {
    "text": "and to do so we've created this",
    "start": "904079",
    "end": "907680"
  },
  {
    "text": "monstrous payload",
    "start": "907680",
    "end": "909240"
  },
  {
    "text": "and so let's do a quick rundown of this",
    "start": "909240",
    "end": "911760"
  },
  {
    "text": "pedal I know it looks intimidating and",
    "start": "911760",
    "end": "914339"
  },
  {
    "text": "basically in pink we have the first part",
    "start": "914339",
    "end": "916380"
  },
  {
    "text": "of the payload it's the WAFF confusion",
    "start": "916380",
    "end": "919079"
  },
  {
    "text": "part as I like to call it all we do all",
    "start": "919079",
    "end": "921420"
  },
  {
    "text": "we are doing here is we're creating an",
    "start": "921420",
    "end": "923339"
  },
  {
    "text": "SQL syntax that the waffle that the WAFF",
    "start": "923339",
    "end": "926160"
  },
  {
    "text": "does not know of and when it Encounters",
    "start": "926160",
    "end": "928500"
  },
  {
    "text": "this syntax it basically gets gets",
    "start": "928500",
    "end": "931560"
  },
  {
    "text": "confused and says yeah that's not an SQL",
    "start": "931560",
    "end": "934199"
  },
  {
    "text": "statement because it can't be it's not",
    "start": "934199",
    "end": "936180"
  },
  {
    "text": "as your syntax and this part basically",
    "start": "936180",
    "end": "938940"
  },
  {
    "text": "completely bypasses the WAFF and then we",
    "start": "938940",
    "end": "943740"
  },
  {
    "text": "get back to the fold to the three",
    "start": "943740",
    "end": "945540"
  },
  {
    "text": "limitations we had before the first one",
    "start": "945540",
    "end": "947880"
  },
  {
    "text": "is our vulnerability must return",
    "start": "947880",
    "end": "950100"
  },
  {
    "text": "integers so once again we simply return",
    "start": "950100",
    "end": "953639"
  },
  {
    "text": "integers and we cut each character into",
    "start": "953639",
    "end": "956639"
  },
  {
    "text": "a different row and we return integers",
    "start": "956639",
    "end": "959940"
  },
  {
    "text": "then we have the problem of the",
    "start": "959940",
    "end": "962220"
  },
  {
    "text": "characters getting all jumbled up",
    "start": "962220",
    "end": "964920"
  },
  {
    "text": "yeah we fix it we simply append the row",
    "start": "964920",
    "end": "967800"
  },
  {
    "text": "number and lastly we create a bigint out",
    "start": "967800",
    "end": "971279"
  },
  {
    "text": "of several characters and then we can",
    "start": "971279",
    "end": "973079"
  },
  {
    "text": "reconstruct it later",
    "start": "973079",
    "end": "975120"
  },
  {
    "text": "and using this payload it actually",
    "start": "975120",
    "end": "977459"
  },
  {
    "text": "worked",
    "start": "977459",
    "end": "979320"
  },
  {
    "text": "we finally had the ability to exfiltrate",
    "start": "979320",
    "end": "981420"
  },
  {
    "text": "arbitrary data from the database and we",
    "start": "981420",
    "end": "985079"
  },
  {
    "text": "basically Pawn them",
    "start": "985079",
    "end": "986820"
  },
  {
    "text": "now let's say consequences when we Pawn",
    "start": "986820",
    "end": "990480"
  },
  {
    "text": "this we were happy over the moon and we",
    "start": "990480",
    "end": "993959"
  },
  {
    "text": "finally had the ability to control all",
    "start": "993959",
    "end": "996480"
  },
  {
    "text": "cambium devices that are connected to",
    "start": "996480",
    "end": "998279"
  },
  {
    "text": "the cloud using this simple very simple",
    "start": "998279",
    "end": "1000980"
  },
  {
    "text": "it's basically an SQL injection using",
    "start": "1000980",
    "end": "1003259"
  },
  {
    "text": "this simple vulnerability we were able",
    "start": "1003259",
    "end": "1004880"
  },
  {
    "text": "to pone all the access points that were",
    "start": "1004880",
    "end": "1008420"
  },
  {
    "text": "connected to the cloud we were able to",
    "start": "1008420",
    "end": "1010459"
  },
  {
    "text": "manage them and perform actions on them",
    "start": "1010459",
    "end": "1014660"
  },
  {
    "text": "we reported this issue to AWS and they",
    "start": "1014660",
    "end": "1018920"
  },
  {
    "text": "say yeah that's right we're not",
    "start": "1018920",
    "end": "1020600"
  },
  {
    "text": "supporting Json in our SQL syntax and",
    "start": "1020600",
    "end": "1023959"
  },
  {
    "text": "they added support and then we said to",
    "start": "1023959",
    "end": "1026058"
  },
  {
    "text": "ourselves yeah that's cool we have an",
    "start": "1026059",
    "end": "1028040"
  },
  {
    "text": "off bypass of AWS",
    "start": "1028040",
    "end": "1030798"
  },
  {
    "text": "what can we do with it and we did the",
    "start": "1030799",
    "end": "1033079"
  },
  {
    "text": "only logical thing and we decided",
    "start": "1033079",
    "end": "1035780"
  },
  {
    "text": "to bypass all other Lofts you see we've",
    "start": "1035780",
    "end": "1039740"
  },
  {
    "text": "thought to ourselves maybe we have a",
    "start": "1039740",
    "end": "1041540"
  },
  {
    "text": "core concept maybe not just AWS doesn't",
    "start": "1041540",
    "end": "1044660"
  },
  {
    "text": "know of Json syntax maybe we have a",
    "start": "1044660",
    "end": "1046938"
  },
  {
    "text": "bigger problem so one by one we started",
    "start": "1046939",
    "end": "1049760"
  },
  {
    "text": "testing against different what vendors",
    "start": "1049760",
    "end": "1052220"
  },
  {
    "text": "be it AWS of course at first cloudflare",
    "start": "1052220",
    "end": "1055840"
  },
  {
    "text": "F5 impervine Palo Alto and every one of",
    "start": "1055840",
    "end": "1059840"
  },
  {
    "text": "them fell like a fly and not realizing",
    "start": "1059840",
    "end": "1062660"
  },
  {
    "text": "that we are passing SQL syntax",
    "start": "1062660",
    "end": "1066520"
  },
  {
    "text": "bypassing wafts is cool and all but we",
    "start": "1067940",
    "end": "1070160"
  },
  {
    "text": "thought ourselves then after we managed",
    "start": "1070160",
    "end": "1071960"
  },
  {
    "text": "to bypass Olaf",
    "start": "1071960",
    "end": "1073280"
  },
  {
    "text": "yeah let's do it automatically so",
    "start": "1073280",
    "end": "1077240"
  },
  {
    "text": "we reached the conclusion what can we do",
    "start": "1077240",
    "end": "1079760"
  },
  {
    "text": "we can modify a very cool tool",
    "start": "1079760",
    "end": "1082880"
  },
  {
    "text": "we all know of SQL map SQL map is one of",
    "start": "1082880",
    "end": "1085340"
  },
  {
    "text": "the most common tools in web application",
    "start": "1085340",
    "end": "1088640"
  },
  {
    "text": "and penetration testing it basically",
    "start": "1088640",
    "end": "1091580"
  },
  {
    "text": "allows you to point it to a vulnerable",
    "start": "1091580",
    "end": "1093740"
  },
  {
    "text": "endpoint and automatically it just",
    "start": "1093740",
    "end": "1096320"
  },
  {
    "text": "starts generating payloads and",
    "start": "1096320",
    "end": "1098539"
  },
  {
    "text": "exfiltrate data",
    "start": "1098539",
    "end": "1100430"
  },
  {
    "text": "[Music]",
    "start": "1100430",
    "end": "1101740"
  },
  {
    "text": "is vast and it supports a wide range of",
    "start": "1101740",
    "end": "1104600"
  },
  {
    "text": "the databases different cases what",
    "start": "1104600",
    "end": "1107299"
  },
  {
    "text": "specific flags are enabled in the",
    "start": "1107299",
    "end": "1108919"
  },
  {
    "text": "database and it just works",
    "start": "1108919",
    "end": "1111440"
  },
  {
    "text": "we added a new module to SQL map that",
    "start": "1111440",
    "end": "1114919"
  },
  {
    "text": "basically takes the payload that it",
    "start": "1114919",
    "end": "1117679"
  },
  {
    "text": "generates and modifies it in some way",
    "start": "1117679",
    "end": "1121039"
  },
  {
    "text": "and this particular way is actually",
    "start": "1121039",
    "end": "1122480"
  },
  {
    "text": "adding WAFF bypass and Json syntax to",
    "start": "1122480",
    "end": "1125960"
  },
  {
    "text": "the payload thus being able to what to",
    "start": "1125960",
    "end": "1129440"
  },
  {
    "text": "bypass wafts",
    "start": "1129440",
    "end": "1132320"
  },
  {
    "text": "so in order to demonstrate how it works",
    "start": "1132320",
    "end": "1134660"
  },
  {
    "text": "we did the only logical thing we created",
    "start": "1134660",
    "end": "1136580"
  },
  {
    "text": "a very vulnerable web application very",
    "start": "1136580",
    "end": "1138860"
  },
  {
    "text": "simple logic simply take something from",
    "start": "1138860",
    "end": "1140900"
  },
  {
    "text": "the user and insert it into scale query",
    "start": "1140900",
    "end": "1143480"
  },
  {
    "text": "and we placed it in between we placed",
    "start": "1143480",
    "end": "1146299"
  },
  {
    "text": "Palo Alto Next Generation firewall in",
    "start": "1146299",
    "end": "1148100"
  },
  {
    "text": "between us and the application and now",
    "start": "1148100",
    "end": "1150320"
  },
  {
    "text": "our application was protected",
    "start": "1150320",
    "end": "1152600"
  },
  {
    "text": "and when we used SQL map out of the box",
    "start": "1152600",
    "end": "1155480"
  },
  {
    "text": "yeah it obviously didn't work we can see",
    "start": "1155480",
    "end": "1158059"
  },
  {
    "text": "that every request got dropped and this",
    "start": "1158059",
    "end": "1161059"
  },
  {
    "text": "the this was done this is because the",
    "start": "1161059",
    "end": "1163820"
  },
  {
    "text": "wife recognized each request is",
    "start": "1163820",
    "end": "1165500"
  },
  {
    "text": "malicious and simply dropped the request",
    "start": "1165500",
    "end": "1168919"
  },
  {
    "text": "then we used our script our new module",
    "start": "1168919",
    "end": "1172039"
  },
  {
    "text": "an SQL map and it actually worked now we",
    "start": "1172039",
    "end": "1175640"
  },
  {
    "text": "have a vulnerable endpoint and we are",
    "start": "1175640",
    "end": "1178400"
  },
  {
    "text": "able to inject arbitrary SQL payloads",
    "start": "1178400",
    "end": "1182600"
  },
  {
    "text": "foreign",
    "start": "1182600",
    "end": "1184780"
  },
  {
    "text": "at the same time and we can see on the",
    "start": "1186460",
    "end": "1189260"
  },
  {
    "text": "right that every request gets dropped",
    "start": "1189260",
    "end": "1191480"
  },
  {
    "text": "and",
    "start": "1191480",
    "end": "1193400"
  },
  {
    "text": "and on the left that's our tempered",
    "start": "1193400",
    "end": "1196460"
  },
  {
    "text": "version and we can see that SQL map",
    "start": "1196460",
    "end": "1198380"
  },
  {
    "text": "recognizes it as vulnerable",
    "start": "1198380",
    "end": "1202480"
  },
  {
    "text": "well let's talk disclosure after we",
    "start": "1206480",
    "end": "1209600"
  },
  {
    "text": "managed to bypass all Waf vendors",
    "start": "1209600",
    "end": "1212500"
  },
  {
    "text": "we went one by one and started",
    "start": "1212500",
    "end": "1215179"
  },
  {
    "text": "disclosing our findings to them and we",
    "start": "1215179",
    "end": "1218660"
  },
  {
    "text": "started with AWS and then moved to the",
    "start": "1218660",
    "end": "1220580"
  },
  {
    "text": "rest of them and one by one it said to",
    "start": "1220580",
    "end": "1222799"
  },
  {
    "text": "us yeah we don't have Json support we",
    "start": "1222799",
    "end": "1225320"
  },
  {
    "text": "must edit and now we can say that most",
    "start": "1225320",
    "end": "1229460"
  },
  {
    "text": "Waf vendors actually support Json syntax",
    "start": "1229460",
    "end": "1231860"
  },
  {
    "text": "in their",
    "start": "1231860",
    "end": "1233679"
  },
  {
    "text": "SQL parsing engine",
    "start": "1233679",
    "end": "1235940"
  },
  {
    "text": "but let's think a little wider yeah cool",
    "start": "1235940",
    "end": "1239480"
  },
  {
    "text": "Jason is cool I guess",
    "start": "1239480",
    "end": "1242419"
  },
  {
    "text": "maybe we have something bigger maybe we",
    "start": "1242419",
    "end": "1244700"
  },
  {
    "text": "have a core concept you see a wife",
    "start": "1244700",
    "end": "1247460"
  },
  {
    "text": "cannot actually parse SQL fully because",
    "start": "1247460",
    "end": "1251299"
  },
  {
    "text": "it has a little limited time it sits",
    "start": "1251299",
    "end": "1253640"
  },
  {
    "text": "between you and the application and it",
    "start": "1253640",
    "end": "1255380"
  },
  {
    "text": "should just work immediately it should",
    "start": "1255380",
    "end": "1256760"
  },
  {
    "text": "make decisions immediately",
    "start": "1256760",
    "end": "1259640"
  },
  {
    "text": "we see that WAFF The Defenders all",
    "start": "1259640",
    "end": "1262820"
  },
  {
    "text": "offenders didn't let jadison support",
    "start": "1262820",
    "end": "1264620"
  },
  {
    "text": "even though it is supported for more",
    "start": "1264620",
    "end": "1266840"
  },
  {
    "text": "than 10 years why is that again that's",
    "start": "1266840",
    "end": "1270020"
  },
  {
    "text": "exactly because they can't fully parse",
    "start": "1270020",
    "end": "1272419"
  },
  {
    "text": "the SQL think about how many other SQL",
    "start": "1272419",
    "end": "1275900"
  },
  {
    "text": "features that are prevalent in all SQL",
    "start": "1275900",
    "end": "1279039"
  },
  {
    "text": "database engines are out there think",
    "start": "1279039",
    "end": "1282320"
  },
  {
    "text": "about how many other features be it",
    "start": "1282320",
    "end": "1286000"
  },
  {
    "text": "asynchronics action be it other data",
    "start": "1286000",
    "end": "1289700"
  },
  {
    "text": "formats CSV XML that are out there and",
    "start": "1289700",
    "end": "1293360"
  },
  {
    "text": "enabled by default just like Json and",
    "start": "1293360",
    "end": "1296120"
  },
  {
    "text": "could be vulnerable to and by you'll be",
    "start": "1296120",
    "end": "1298580"
  },
  {
    "text": "used to bypass arbitrary warps",
    "start": "1298580",
    "end": "1303039"
  },
  {
    "text": "let's do a quick rundown of what we did",
    "start": "1305120",
    "end": "1307700"
  },
  {
    "text": "we basically found a very cool",
    "start": "1307700",
    "end": "1310100"
  },
  {
    "text": "vulnerability tried to exploit it and",
    "start": "1310100",
    "end": "1312860"
  },
  {
    "text": "got stucked and we thought to ourselves",
    "start": "1312860",
    "end": "1315679"
  },
  {
    "text": "yeah we're and we could have just",
    "start": "1315679",
    "end": "1317600"
  },
  {
    "text": "said that let's leave it not vulnerable",
    "start": "1317600",
    "end": "1319820"
  },
  {
    "text": "that's okay but instead we took the time",
    "start": "1319820",
    "end": "1323299"
  },
  {
    "text": "and effort to try and analyze and black",
    "start": "1323299",
    "end": "1325940"
  },
  {
    "text": "box how a WAFF works and we managed to",
    "start": "1325940",
    "end": "1328220"
  },
  {
    "text": "bypass it and for the first time at",
    "start": "1328220",
    "end": "1330320"
  },
  {
    "text": "least that I know of we have a generic",
    "start": "1330320",
    "end": "1331940"
  },
  {
    "text": "craft bypass meaning I don't care what",
    "start": "1331940",
    "end": "1334220"
  },
  {
    "text": "kind of wafted between me and the",
    "start": "1334220",
    "end": "1335720"
  },
  {
    "text": "application I can just send it and",
    "start": "1335720",
    "end": "1337580"
  },
  {
    "text": "forget it and which I think is pretty",
    "start": "1337580",
    "end": "1340820"
  },
  {
    "text": "cool and",
    "start": "1340820",
    "end": "1342799"
  },
  {
    "text": "also like we've shown Jason is very new",
    "start": "1342799",
    "end": "1346640"
  },
  {
    "text": "ish in SQL it goes between one year 10",
    "start": "1346640",
    "end": "1350120"
  },
  {
    "text": "years it depends on the SQL database and",
    "start": "1350120",
    "end": "1353360"
  },
  {
    "text": "each desk Guild engine decided to",
    "start": "1353360",
    "end": "1355340"
  },
  {
    "text": "implement Json Json parser of their own",
    "start": "1355340",
    "end": "1358100"
  },
  {
    "text": "each of them is proprietary and we",
    "start": "1358100",
    "end": "1360200"
  },
  {
    "text": "believe there is some differences so you",
    "start": "1360200",
    "end": "1362240"
  },
  {
    "text": "can wait for this research we're gonna",
    "start": "1362240",
    "end": "1363679"
  },
  {
    "text": "do soon presenting the differences",
    "start": "1363679",
    "end": "1366020"
  },
  {
    "text": "between different database engines and",
    "start": "1366020",
    "end": "1369140"
  },
  {
    "text": "lastly give to the community if you have",
    "start": "1369140",
    "end": "1372020"
  },
  {
    "text": "a New Concept do add support for it in",
    "start": "1372020",
    "end": "1374960"
  },
  {
    "text": "open openly available tools because I",
    "start": "1374960",
    "end": "1377960"
  },
  {
    "text": "believe it's cool so feel free to use a",
    "start": "1377960",
    "end": "1379640"
  },
  {
    "text": "scale map with our new feature",
    "start": "1379640",
    "end": "1383059"
  },
  {
    "text": "are there any questions",
    "start": "1383059",
    "end": "1385280"
  },
  {
    "text": "if there are any questions you can go to",
    "start": "1385280",
    "end": "1387200"
  },
  {
    "text": "the mic",
    "start": "1387200",
    "end": "1389500"
  },
  {
    "text": "[Applause]",
    "start": "1390820",
    "end": "1395620"
  },
  {
    "text": "[Music]",
    "start": "1395620",
    "end": "1398730"
  },
  {
    "text": "[Music]",
    "start": "1402590",
    "end": "1405679"
  }
]