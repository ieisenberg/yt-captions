[
  {
    "start": "0",
    "end": "300000"
  },
  {
    "text": "so I guess we're alive this is me this is David Wong and I came here to tell you a story so my story starts with a",
    "start": "30",
    "end": "7440"
  },
  {
    "text": "timeline to hash functions near for an MD for where it is in the beginning of the 90s they go they got quite popular",
    "start": "7440",
    "end": "15890"
  },
  {
    "text": "unfortunately sniff who quickly got broken by the newly introduced differential cryptanalysis nd4 remained",
    "start": "15890",
    "end": "24000"
  },
  {
    "text": "unbroken for some years and became the de facto standard for a hash function",
    "start": "24000",
    "end": "29039"
  },
  {
    "text": "but also to construct hash functions so MD here stands for merkle-damgard so the",
    "start": "29039",
    "end": "35489"
  },
  {
    "text": "construction became the standard to build other hash functions and other",
    "start": "35489",
    "end": "40860"
  },
  {
    "text": "hash functions using that standard our md5 sha-1 even chateau and a bunch of others so yeah MD for unfortunately we",
    "start": "40860",
    "end": "50730"
  },
  {
    "text": "realized that it's broken it's not very secure md5 we quickly realized that or",
    "start": "50730",
    "end": "56489"
  },
  {
    "text": "not that quickly and actually md5 it took a lot of time to deprecate it was rather painful was used all over the",
    "start": "56489",
    "end": "62730"
  },
  {
    "text": "place right from certificates to storing passwords so yeah sha-1 got broken",
    "start": "62730",
    "end": "69750"
  },
  {
    "text": "earlier this year right if you were at blackhat us you must have seen Eli from Google giving a talk about that",
    "start": "69750",
    "end": "76560"
  },
  {
    "text": "so no more sha-1 and our left push a to shadow is is really the standard that",
    "start": "76560",
    "end": "83130"
  },
  {
    "text": "everybody use wherever you are on the spectrum of security you're a developer if your pen tester whatever you are you",
    "start": "83130",
    "end": "89909"
  },
  {
    "text": "must have seen shot or you must have used shattered right it's all over the place so the question we had back then",
    "start": "89909",
    "end": "96930"
  },
  {
    "text": "was is shadow going to fold them fates right it's built on the same",
    "start": "96930",
    "end": "102540"
  },
  {
    "text": "construction the merkle-damgard construction that i'm not going to explain here and if it falls the same",
    "start": "102540",
    "end": "108810"
  },
  {
    "text": "fate do we have a back-up plan do we have another hash function that you can use to replace shatter and the",
    "start": "108810",
    "end": "116250"
  },
  {
    "text": "answer was not that clear back then so the NIST's an American organization",
    "start": "116250",
    "end": "121649"
  },
  {
    "text": "decided to organize an open competition like the AES competition for the new",
    "start": "121649",
    "end": "127259"
  },
  {
    "text": "standard hash algorithm shattering so it started in 2007 lasted for five years",
    "start": "127259",
    "end": "134150"
  },
  {
    "text": "five years in which 64 different candidates from all over the world",
    "start": "134150",
    "end": "139370"
  },
  {
    "text": "thoughts to become the next standard so Chateau was designed by the NSA sherry",
    "start": "139370",
    "end": "145020"
  },
  {
    "text": "is really an open standard so 2012 five",
    "start": "145020",
    "end": "150510"
  },
  {
    "text": "years later finally kid Shaq is nominated as the winner so whenever I",
    "start": "150510",
    "end": "156420"
  },
  {
    "text": "say sherry I also mean kid jackets though it's the same algorithm now other",
    "start": "156420",
    "end": "162510"
  },
  {
    "text": "candidates that didn't make the cuts in the last round were Blake Russell JH and skein it's not that they were insecure",
    "start": "162510",
    "end": "170370"
  },
  {
    "text": "it's rather than we only had one position for the winner and if you look at Blake you might recognize that name",
    "start": "170370",
    "end": "176280"
  },
  {
    "text": "because it had had a second life after the competition by releasing a second version Blake - and it's been adopted by",
    "start": "176280",
    "end": "183750"
  },
  {
    "text": "quite a lot of standards and applications all right so 2012 Kasich wins 2015 three",
    "start": "183750",
    "end": "192150"
  },
  {
    "text": "years after the end of the competition we finally have a standard so it's a nice standard called FIPS pub - - it's",
    "start": "192150",
    "end": "198180"
  },
  {
    "text": "kind of an ugly name or BPF but anyway whatever we have a standard only two",
    "start": "198180",
    "end": "203459"
  },
  {
    "text": "years ago right so it's pretty recent so that's try three and I was my intro",
    "start": "203459",
    "end": "208920"
  },
  {
    "text": "to why we build shot three and why and what's shattering and here's my outline",
    "start": "208920",
    "end": "215220"
  },
  {
    "text": "and I'll basically spend a few slides next to explain to you how shot three works so I'm not going to go too much",
    "start": "215220",
    "end": "221850"
  },
  {
    "text": "into the details I'm just going to give you some intuition or fight words so don't worry no equations no math it's pretty cool if",
    "start": "221850",
    "end": "229530"
  },
  {
    "text": "you focus on the next few slides you'll go away from this talk with the knowledge of how shot three works after",
    "start": "229530",
    "end": "235860"
  },
  {
    "text": "that I'll be looking at strobe which is something built on top of sha-3 it's not",
    "start": "235860",
    "end": "241110"
  },
  {
    "text": "a hash function it's actually a protocol framework so it allows you to build make",
    "start": "241110",
    "end": "246450"
  },
  {
    "text": "much more than just hash functions the",
    "start": "246450",
    "end": "252180"
  },
  {
    "text": "third part of this talk will be about noise which is another protocol framework actually anyone here has heard",
    "start": "252180",
    "end": "258180"
  },
  {
    "text": "of noise before the noise protocol framework it two three four people five",
    "start": "258180",
    "end": "263390"
  },
  {
    "text": "so it's something to build something like TLS you can think of it like that and it really doesn't use chattery so",
    "start": "263390",
    "end": "269820"
  },
  {
    "text": "there will be a break from shuttering and find finally at the end I have a surprise but more about that later",
    "start": "269820",
    "end": "276770"
  },
  {
    "text": "alright so time to focus Shari Shari is something it's in the field of",
    "start": "276770",
    "end": "283710"
  },
  {
    "text": "permutation based cryptography in crypto you have a lot of different fields one of them is just a field of things built",
    "start": "283710",
    "end": "289860"
  },
  {
    "text": "on top of permutations so that's why it's called what a permitted what is a permutation well don't worry I have a good",
    "start": "289860",
    "end": "296130"
  },
  {
    "text": "explanation for that everybody knows a es right he has the core algorithm to",
    "start": "296130",
    "end": "301260"
  },
  {
    "start": "300000",
    "end": "340000"
  },
  {
    "text": "encrypt things it takes 128 bit inputs plaintext and it gives you a 128 bit",
    "start": "301260",
    "end": "308370"
  },
  {
    "text": "ciphertext right that's how you can encrypt and from a cipher text you can decrypt and get back to your plain text",
    "start": "308370",
    "end": "314790"
  },
  {
    "text": "so it's a one-to-one mapping between all the possible inputs of 128 bits and all",
    "start": "314790",
    "end": "320040"
  },
  {
    "text": "the possible outputs of 128 bits right if you don't have this one-to-one mapping if you have a ciphertext you",
    "start": "320040",
    "end": "326160"
  },
  {
    "text": "don't know how to decrypt it you don't know what Planet X you can get and here I pretend that I use a key of all zeros",
    "start": "326160",
    "end": "332850"
  },
  {
    "text": "so the key is known everybody can use it to the create Anchorage we don't care there is no secret here so every time",
    "start": "332850",
    "end": "340140"
  },
  {
    "start": "340000",
    "end": "598000"
  },
  {
    "text": "you'll see this function here this permutation you can think of AES with unknown key I'm going to I'm going to",
    "start": "340140",
    "end": "347010"
  },
  {
    "text": "build something called a sponge construction this was invented as part",
    "start": "347010",
    "end": "352950"
  },
  {
    "text": "of the Sheree competition to build the new hash function shattering so this",
    "start": "352950",
    "end": "358050"
  },
  {
    "text": "replaces this merkle-damgard construction that I talked about previously remember okay what is this",
    "start": "358050",
    "end": "364710"
  },
  {
    "text": "pond construction well first I set the input of my permutation to all zeros okay",
    "start": "364710",
    "end": "369720"
  },
  {
    "text": "bunch of zeros so the permutation kind of randomized this and I get an output",
    "start": "369720",
    "end": "375710"
  },
  {
    "text": "no I decide to split my inputs and my outputs into different parts the first",
    "start": "375710",
    "end": "382110"
  },
  {
    "text": "part I say the first are bits and here I choose a very simple example I have five bits here are the inputs and the output",
    "start": "382110",
    "end": "388890"
  },
  {
    "text": "are the public parts okay it's public and the remaining bits of the input and",
    "start": "388890",
    "end": "395010"
  },
  {
    "text": "the output are see bits here three bits are the secret part and you're going to",
    "start": "395010",
    "end": "400950"
  },
  {
    "text": "understand I call that public why I call that secret but just so that we're in the same page if it's AES right you take the",
    "start": "400950",
    "end": "406319"
  },
  {
    "text": "plaintext and you just say the first hour beats are the public part and then really the remaining part is the secret",
    "start": "406319",
    "end": "411780"
  },
  {
    "text": "one all right so a hash function is not",
    "start": "411780",
    "end": "417509"
  },
  {
    "text": "very good if you don't take an input right so we want to have something and here to have to take the input inside",
    "start": "417509",
    "end": "423780"
  },
  {
    "text": "our algorithm what I do is that I just XOR my input with the public parts and",
    "start": "423780",
    "end": "429120"
  },
  {
    "text": "at the beginning the public part is only zeros right very easy so here it's very easy if I have an",
    "start": "429120",
    "end": "435720"
  },
  {
    "text": "input of only five bits because my public part is five bits but what if it's larger well if it's larger it's",
    "start": "435720",
    "end": "443460"
  },
  {
    "text": "easy as well we just split it into blocks of five bits and we XOR the first block of five bits with my public part",
    "start": "443460",
    "end": "450750"
  },
  {
    "text": "okay we don't touch the secret part then we take the second block and we ignore that with the public part after",
    "start": "450750",
    "end": "457289"
  },
  {
    "text": "permuting after using something like a yes right we permute again and finally if we have",
    "start": "457289",
    "end": "463560"
  },
  {
    "text": "only three blocks we XOR the final block with the public parts and we permeate",
    "start": "463560",
    "end": "468870"
  },
  {
    "text": "again make sense it's just what we call absorbing right",
    "start": "468870",
    "end": "475229"
  },
  {
    "text": "it's it's a sponge function we absorb a message make sense now how do we get our",
    "start": "475229",
    "end": "480930"
  },
  {
    "text": "outputs it's not very it's not very useful if we don't get an output from that right so hash function what we can",
    "start": "480930",
    "end": "487320"
  },
  {
    "text": "do is that we can just read the public parts so here we get five bits if we",
    "start": "487320",
    "end": "492960"
  },
  {
    "text": "need more we can just permute and read again we get ten bits if we need more we continue to do the same this is called",
    "start": "492960",
    "end": "499199"
  },
  {
    "text": "squeezing all right make sense ready to sponge we absorb our message and then we squeeze it to get an output and that's",
    "start": "499199",
    "end": "506759"
  },
  {
    "text": "really all there is to shattering so we have a paper proof a mathematical proof",
    "start": "506759",
    "end": "511949"
  },
  {
    "text": "that this word this is secure as long as the permutation at its core is secure",
    "start": "511949",
    "end": "518630"
  },
  {
    "text": "how do we know that the permutation at the core is secure well we don't really have a good way of doing that the best",
    "start": "518630",
    "end": "524250"
  },
  {
    "text": "way we know of is just just to try to break it so that's why the competition lasted for five years is just people",
    "start": "524250",
    "end": "530459"
  },
  {
    "text": "trying to break it using linear cryptanalysis differential cryptanalysis bunch of other kryptonite is trying to",
    "start": "530459",
    "end": "536889"
  },
  {
    "text": "invent new attacks just to try to break it after quite some time we get more confidence in the function and we we say",
    "start": "536889",
    "end": "544299"
  },
  {
    "text": "it's secure or we know how to play with the parameters all right so that's a",
    "start": "544299",
    "end": "549579"
  },
  {
    "text": "three and know that I got that out of the way I'm going to explain strobe all",
    "start": "549579",
    "end": "556749"
  },
  {
    "text": "right so I'm going to use this de-spawn thing to build more than that so going",
    "start": "556749",
    "end": "563410"
  },
  {
    "text": "back to that slide so remember I absorb my input and then I squeeze it to create",
    "start": "563410",
    "end": "568989"
  },
  {
    "text": "an output but what if I don't stop here and I just continue and then I start absorbing again and then I squeeze again",
    "start": "568989",
    "end": "576160"
  },
  {
    "text": "and then I absorb again and then I squeeze again is that possible well the kid Shack team said yes it's possible",
    "start": "576160",
    "end": "582129"
  },
  {
    "text": "and they came up with a new construction called a duplex construction and basically that's what happens here you",
    "start": "582129",
    "end": "587889"
  },
  {
    "text": "absorb your input your squeeze you absorb your squeeze you absorb your squeeze all right that's interesting",
    "start": "587889",
    "end": "594309"
  },
  {
    "text": "what can we do with that can we do anything useful with this well one thing",
    "start": "594309",
    "end": "599860"
  },
  {
    "start": "598000",
    "end": "869000"
  },
  {
    "text": "we can do that is interesting is that we can absorb a key right we XOR a key with our public part and when we absorb a key",
    "start": "599860",
    "end": "607509"
  },
  {
    "text": "is very different from hashing is usually you hash public stuff and here we hash a key right we absorb a key so",
    "start": "607509",
    "end": "614649"
  },
  {
    "text": "it's a key mode when we use a key keeping the secret parts private is very",
    "start": "614649",
    "end": "620529"
  },
  {
    "text": "important if you leak the secret part somehow I don't know some memory disclosure then the attacker might have",
    "start": "620529",
    "end": "627759"
  },
  {
    "text": "the entire state right the public part and the secret part and now the attacker can reverse all the",
    "start": "627759",
    "end": "633730"
  },
  {
    "text": "permutations there is there is only one here but if there was multiple permutation you could reverse all the permutation to go back to the key",
    "start": "633730",
    "end": "640619"
  },
  {
    "text": "remember I said a permutation is basically like AES with a non key that means if you have the ciphertext or the",
    "start": "640619",
    "end": "646959"
  },
  {
    "text": "output you can get the plaintext or the input right so you can reverse this thing so really when you're using a key",
    "start": "646959",
    "end": "653589"
  },
  {
    "text": "when you're in key mode you really want to keep that secret part secret anyway we absorb icky we permute so we get",
    "start": "653589",
    "end": "661119"
  },
  {
    "text": "something kind of random you get the ID how can we encrypt from that I really",
    "start": "661119",
    "end": "667480"
  },
  {
    "text": "absorb icky we permute we get maybe here five beats five random bits how can we encrypt something like that",
    "start": "667480",
    "end": "673710"
  },
  {
    "text": "well very simply if you think of one-time pads or stream ciphers or things like that you just X or your",
    "start": "673710",
    "end": "680560"
  },
  {
    "text": "plaintext what you want to encrypt with this bit string this random bit string and you get your ciphertext and to",
    "start": "680560",
    "end": "688030"
  },
  {
    "text": "decrypt you do the inverse you generate the same thing yeah the absorption of",
    "start": "688030",
    "end": "693670"
  },
  {
    "text": "the key and you make sure that with the ciphertext and you get back back the plaintext right its encryption 101 okay but if you",
    "start": "693670",
    "end": "703000"
  },
  {
    "text": "know about encryption probably you know that we never just sin we never just encrypt and send the ciphertext like",
    "start": "703000",
    "end": "708880"
  },
  {
    "text": "that just because if there is an attacker in the middle the attacker in the middle can tamper with the",
    "start": "708880",
    "end": "714220"
  },
  {
    "text": "ciphertext and after when we receive the ciphertext after decryption the plant X",
    "start": "714220",
    "end": "719500"
  },
  {
    "text": "will be tampered with so usually we want to protect the integrity of the ciphertext by generating something out",
    "start": "719500",
    "end": "726910"
  },
  {
    "text": "of that ciphertext that we can append to the ciphertext and like that we can make",
    "start": "726910",
    "end": "732760"
  },
  {
    "text": "sure that nobody modified it right usually you use something like a ES GCM that takes care of that",
    "start": "732760",
    "end": "738300"
  },
  {
    "text": "so here a very simple way we can just absorb the plaintext permute exactly",
    "start": "738300",
    "end": "743920"
  },
  {
    "text": "like we did for hashing right and we create basically a hash out of that plaintext and out of the key because we",
    "start": "743920",
    "end": "749350"
  },
  {
    "text": "absorb everything so the the thing here in the public parts will be generated",
    "start": "749350",
    "end": "754540"
  },
  {
    "text": "via everything that was absord okay so on the other side when we receive the",
    "start": "754540",
    "end": "759790"
  },
  {
    "text": "ciphertext and the tag we decrypt the ciphertext by doing this little dance then we absorb the plant X that we",
    "start": "759790",
    "end": "765970"
  },
  {
    "text": "decrypted and if we generate something different then we know that someone modified the message but these are",
    "start": "765970",
    "end": "772090"
  },
  {
    "text": "details you don't have to understand everything here but this is what we can use this top likes construction for what",
    "start": "772090",
    "end": "780100"
  },
  {
    "text": "if we want to encrypt again well we can just continue here and permit again do this little dance to encrypt and then do",
    "start": "780100",
    "end": "785890"
  },
  {
    "text": "this little dance to generate an authentication tag to authenticate the ciphertext and it works we didn't set up",
    "start": "785890",
    "end": "792190"
  },
  {
    "text": "any nonces and encounters any IVs it just works the second cool thing here is",
    "start": "792190",
    "end": "798220"
  },
  {
    "text": "that when I generate this tag number two I don't only authenticate this ciphertext here but I also attenti",
    "start": "798220",
    "end": "805670"
  },
  {
    "text": "Kate this one here that I absorbed and the key so basically whenever I authenticate",
    "start": "805670",
    "end": "810819"
  },
  {
    "text": "something our authenticate the whole session not just the last ciphertext the",
    "start": "810819",
    "end": "816439"
  },
  {
    "text": "whole session so this is a very cool property to have for protocol because",
    "start": "816439",
    "end": "822079"
  },
  {
    "text": "like that you can make sure that you have consistency on both side of the connection nobody has reordered messages",
    "start": "822079",
    "end": "827779"
  },
  {
    "text": "replied messages inserted things or drop things both side of the connections are",
    "start": "827779",
    "end": "833269"
  },
  {
    "text": "seeing the same thing strobe so the",
    "start": "833269",
    "end": "838879"
  },
  {
    "text": "point of my second part is a protocol framework that gives you access to the duplex construction so you have all",
    "start": "838879",
    "end": "843889"
  },
  {
    "text": "these functions here and you have what they do on the duplex construction so it don't look too much at that it's just a",
    "start": "843889",
    "end": "849980"
  },
  {
    "text": "nice diagram but basically that what strobe is it really gives you access to this state and every time you do some",
    "start": "849980",
    "end": "857899"
  },
  {
    "text": "operation you're continuously muted that states influencing new things that",
    "start": "857899",
    "end": "863810"
  },
  {
    "text": "you're going to do in the future and being influenced by what happened previously so before I get too much into",
    "start": "863810",
    "end": "870860"
  },
  {
    "start": "869000",
    "end": "974000"
  },
  {
    "text": "the details I just want to give you an overview of how you would use that as a developer so a very simple example okay",
    "start": "870860",
    "end": "877459"
  },
  {
    "text": "what does it mean to use the strobe protocol framework so we're going to",
    "start": "877459",
    "end": "884209"
  },
  {
    "text": "build a protocol and I have two devices I want to encrypt communications between them what I will do is that I",
    "start": "884209",
    "end": "889879"
  },
  {
    "text": "instantiate the strobe objects via this function and a string so for example my website would come or my protocol or",
    "start": "889879",
    "end": "896779"
  },
  {
    "text": "something like that then I absorb or shared secrets so I absorb it with a",
    "start": "896779",
    "end": "902959"
  },
  {
    "text": "function called ad that strobe give us gives us authentication authenticated data and I do that on both side right so",
    "start": "902959",
    "end": "911029"
  },
  {
    "text": "shared secret so both devices have this shared secret I know I have a secret in place so I can encrypt so I can use the",
    "start": "911029",
    "end": "916819"
  },
  {
    "text": "same encrypt command to encrypt the get request for example right makes sense I'm sending some encryption encrypted",
    "start": "916819",
    "end": "922790"
  },
  {
    "text": "data of course I want to authenticate what I just sent so I use the send Mac for message authentication code with a",
    "start": "922790",
    "end": "929769"
  },
  {
    "text": "16 byte mark and I send that and on the other side I receive it so I do the",
    "start": "929769",
    "end": "935269"
  },
  {
    "text": "inverse operation to decrypt receive ank and I use receive Mack to verify the tag if it's incorrect it",
    "start": "935269",
    "end": "943710"
  },
  {
    "text": "means that somebody must have tampered with the connection so I can just abort the connection a very simple protocol",
    "start": "943710",
    "end": "950700"
  },
  {
    "text": "right I just use these functions on both sides of the connection and I encrypt my data now if I want to continue",
    "start": "950700",
    "end": "956850"
  },
  {
    "text": "encrypting I will just continue to use the sent ank and send mac to encrypt and authenticate and I will never have to",
    "start": "956850",
    "end": "963690"
  },
  {
    "text": "figure out how to create some non C's or some IVs and every time I authenticate",
    "start": "963690",
    "end": "968760"
  },
  {
    "text": "I authenticate the whole session not just the last thing I sent so Straub is",
    "start": "968760",
    "end": "974820"
  },
  {
    "start": "974000",
    "end": "1079000"
  },
  {
    "text": "first and foremost this thing it's a flexible framework to build some",
    "start": "974820",
    "end": "979920"
  },
  {
    "text": "protocols it's more than that though since you have access to all these commands to all these functions you can",
    "start": "979920",
    "end": "986730"
  },
  {
    "text": "kind of mix and match them to create just simple cryptographic operations",
    "start": "986730",
    "end": "992390"
  },
  {
    "text": "what do I mean by that well imagine you want to hash you have the code of stroke",
    "start": "992390",
    "end": "997800"
  },
  {
    "text": "because you're using it to I don't know build your protocol so you can just use drug to instantiate it as a hash",
    "start": "997800",
    "end": "1003080"
  },
  {
    "text": "function and here I call my hash function david wong hash it's my hash i absorbed the message i want to hash with",
    "start": "1003080",
    "end": "1009500"
  },
  {
    "text": "the same ad function and then i use another function PRF to get an output and here i want a 32 byte hash so here I",
    "start": "1009500",
    "end": "1017720"
  },
  {
    "text": "just use the same code the same code base to just use it as a hash function so it's very interesting because you get",
    "start": "1017720",
    "end": "1024380"
  },
  {
    "text": "not only this this protocol framework but you also get a cryptographic library for free all of that relies on the",
    "start": "1024380",
    "end": "1033170"
  },
  {
    "text": "shatori standard it uses the permutation in size of shatori so the security comes",
    "start": "1033170",
    "end": "1038329"
  },
  {
    "text": "from somewhere it's not just roll here on crypto and since it only relies on",
    "start": "1038329",
    "end": "1043400"
  },
  {
    "text": "sherry it's very very very small it's only a thousand lines of code for the reference implementation in C there is a",
    "start": "1043400",
    "end": "1050510"
  },
  {
    "text": "Python implementation there is I made a goal and implementation it's also a thousand lines of code so it's very",
    "start": "1050510",
    "end": "1056600"
  },
  {
    "text": "small it's very good for embedded devices and all that stuff so if you want to look at the specification it's",
    "start": "1056600",
    "end": "1062420"
  },
  {
    "text": "on strobe dot sourceforge.net by Mike hammer",
    "start": "1062420",
    "end": "1068800"
  },
  {
    "text": "and it's alpha so it's it's still experimental but it's it's so it's built",
    "start": "1068800",
    "end": "1075280"
  },
  {
    "text": "on solid foundations all right so that's",
    "start": "1075280",
    "end": "1081070"
  },
  {
    "start": "1079000",
    "end": "1299000"
  },
  {
    "text": "basically what a stroke is just this kind of protocol framework built on top of sha-3 so now I'm going to talk about noise so",
    "start": "1081070",
    "end": "1089260"
  },
  {
    "text": "I if you kind of lost track of what I'm talking about I'm really taking a break from sherry so you can get back into the",
    "start": "1089260",
    "end": "1094870"
  },
  {
    "text": "talk now what is noise now this is a protocol framework to build stuff like",
    "start": "1094870",
    "end": "1100540"
  },
  {
    "text": "TLS so I'm going to be talking about TLS first just a recap so what is TLS tillis",
    "start": "1100540",
    "end": "1108280"
  },
  {
    "text": "is the de facto standard for encrypting communications right we have other standards like SSH or IPSec etc but GLS",
    "start": "1108280",
    "end": "1115929"
  },
  {
    "text": "is really the most popular one right it's a very complex specification I",
    "start": "1115929",
    "end": "1121750"
  },
  {
    "text": "don't know if you've tried to read the specification of TLS it's called a request for RFC record request for",
    "start": "1121750",
    "end": "1132090"
  },
  {
    "text": "request for what request for comment thank you our secrets for comments it's",
    "start": "1132420",
    "end": "1137980"
  },
  {
    "text": "a lot of them actually you have SSL version I don't know what TLS 1.0 TLS 121 tell us 1.2 so depending",
    "start": "1137980",
    "end": "1145480"
  },
  {
    "text": "on what you want to support you have to read several ones and also a bunch of these I've been broken in the past so",
    "start": "1145480",
    "end": "1151900"
  },
  {
    "text": "there is that it's not just one specification it's also if you start",
    "start": "1151900",
    "end": "1157120"
  },
  {
    "text": "reading one of them you have to read a bunch of them so there are a bunch of them for certificates if you want to use",
    "start": "1157120",
    "end": "1162970"
  },
  {
    "text": "certificates and a public key infrastructure they're a bunch of them if you want to use different cryptographic primitives there are bunch",
    "start": "1162970",
    "end": "1169870"
  },
  {
    "text": "of them depending of the extensions you want to use of course certificates have their own extensions and it's a lot to",
    "start": "1169870",
    "end": "1178330"
  },
  {
    "text": "digest if it carries a lot of legacy decisions",
    "start": "1178330",
    "end": "1183790"
  },
  {
    "text": "a lot of things are done to really support older versions so if you look at TLS 1.3 you will see that a lot of",
    "start": "1183790",
    "end": "1190480"
  },
  {
    "text": "messages really look like older versions of TLS or SSL just because otherwise nobody knows how to parse these messages",
    "start": "1190480",
    "end": "1197530"
  },
  {
    "text": "and it breaks the internet so it's kind of ugly and because of legacy",
    "start": "1197530",
    "end": "1202580"
  },
  {
    "text": "and of course if you want to use it you have this huge and scary libraries I'll just mention OpenSSL but basically",
    "start": "1202580",
    "end": "1209660"
  },
  {
    "text": "OpenSSL is so scary that people have 42 make it better so you have like boring",
    "start": "1209660",
    "end": "1216020"
  },
  {
    "text": "SSL or libras to sell etc if you want to use it it's not that simple so you have",
    "start": "1216020",
    "end": "1222230"
  },
  {
    "text": "to configure it and the documentation is not very clear usually so you have to read these books but then these books",
    "start": "1222230",
    "end": "1228380"
  },
  {
    "text": "are pretty old so it doesn't really work for the new versions and so I'm a",
    "start": "1228380",
    "end": "1233390"
  },
  {
    "text": "security consultant and I often look at clients using open SSL and most of the time they forget to use the right",
    "start": "1233390",
    "end": "1239120"
  },
  {
    "text": "function - I don't know verify certificates or verified the hostname in a certificate orders just verify the",
    "start": "1239120",
    "end": "1245510"
  },
  {
    "text": "return value of a function and then you have a an open fill so it's quite tricky",
    "start": "1245510",
    "end": "1251000"
  },
  {
    "text": "to use now if you want to implement it yourself first don't even try to do that",
    "start": "1251000",
    "end": "1256070"
  },
  {
    "text": "it's not it's impossible right so that's something I tend to look at also as part",
    "start": "1256070",
    "end": "1261680"
  },
  {
    "text": "of my work and it's always riddled with bugs so that makes my job more fun but",
    "start": "1261680",
    "end": "1266690"
  },
  {
    "text": "don't try to do it yourself if all these libraries have had their share of",
    "start": "1266690",
    "end": "1272060"
  },
  {
    "text": "problems right you have a lot of vulnerabilities file every day not every day but you have a lot of programs it's",
    "start": "1272060",
    "end": "1277940"
  },
  {
    "text": "not because there are bad developers is really because TLS is very complex it's complex to implement so that's bad and",
    "start": "1277940",
    "end": "1286100"
  },
  {
    "text": "worse the kind of thing I see sometimes are reinvented protocols proprietary protocols that are influenced by TLS so",
    "start": "1286100",
    "end": "1293960"
  },
  {
    "text": "that's usually that's completely broken so don't even try so here the problem is",
    "start": "1293960",
    "end": "1299030"
  },
  {
    "start": "1299000",
    "end": "1337000"
  },
  {
    "text": "that complexity is the enemy of security TLS is way too complex to use or implement it's it's it's hard it's it's",
    "start": "1299030",
    "end": "1305990"
  },
  {
    "text": "not easy people make mistakes but it's not their fault this this thing is not easy to use so do we have an alternative if we want",
    "start": "1305990",
    "end": "1313790"
  },
  {
    "text": "to use something else than TLS what is out there well the nice protocol framework is exactly that was invented",
    "start": "1313790",
    "end": "1321380"
  },
  {
    "text": "by Trevor Perrin the inventor of signal the signal protocols and it's it's a",
    "start": "1321380",
    "end": "1326660"
  },
  {
    "text": "framework so it's exactly like the strobe protocol framework it's not something you can use out of the box it's something that you can use to build",
    "start": "1326660",
    "end": "1333140"
  },
  {
    "text": "a protocol something they can use to build something like TLS so for example Telus most of the time",
    "start": "1333140",
    "end": "1341510"
  },
  {
    "start": "1337000",
    "end": "1452000"
  },
  {
    "text": "you will use certificates or a public key infrastructure and if you don't want to use these it's it's tricky it's very",
    "start": "1341510",
    "end": "1348050"
  },
  {
    "text": "tricky in noise you can just use plain Keys we don't have to use these certificates and if you don't want to",
    "start": "1348050",
    "end": "1353990"
  },
  {
    "text": "use a public infrastructure if you already know the public in Advent for example if you have some shared secret or something like that you can do that",
    "start": "1353990",
    "end": "1360800"
  },
  {
    "text": "as well entry it's very easy to do that so noise is actually a lot of different",
    "start": "1360800",
    "end": "1366350"
  },
  {
    "text": "handshakes a lot of different ways to do things that you can choose from it's very flexible so if you look at the",
    "start": "1366350",
    "end": "1373250"
  },
  {
    "text": "specification you will see that maybe like maybe not half of it but a large part of the specification spends a lot",
    "start": "1373250",
    "end": "1379040"
  },
  {
    "text": "of time analyzing all these handshakes and telling you what kind of security you get for what kind of handshake",
    "start": "1379040",
    "end": "1384830"
  },
  {
    "text": "you're choosing once you know what you want to use for your specific setup it's",
    "start": "1384830",
    "end": "1389990"
  },
  {
    "text": "very straightforward to implement it's around 2,000 lines of code if you want",
    "start": "1389990",
    "end": "1395060"
  },
  {
    "text": "to implement the whole of noise and usually you just want to implement one part you don't have to implement it",
    "start": "1395060",
    "end": "1401840"
  },
  {
    "text": "yourself of course you already have libraries in all major languages to use it so you just use these libraries and",
    "start": "1401840",
    "end": "1408050"
  },
  {
    "text": "you build your own protocol out of that and once you have what you want there is a minimal configuration or zero",
    "start": "1408050",
    "end": "1415280"
  },
  {
    "text": "configuration and it just works it's not just a weird protocol that I'm telling",
    "start": "1415280",
    "end": "1421400"
  },
  {
    "text": "you about today it's used by whatsapp which is by slack by the beacon lighting Network it's used I've heard by",
    "start": "1421400",
    "end": "1427010"
  },
  {
    "text": "governments but I don't have any insight into that it's used by a lot of people so it's it's not it's not just a weird",
    "start": "1427010",
    "end": "1436340"
  },
  {
    "text": "spec so bottom line if you have a good",
    "start": "1436340",
    "end": "1441680"
  },
  {
    "text": "excuse not to use TLS noises the answer not anything else alright so I'm going",
    "start": "1441680",
    "end": "1447260"
  },
  {
    "text": "to spend a few slides trying to explain to you how noise works so when he is",
    "start": "1447260",
    "end": "1454460"
  },
  {
    "start": "1452000",
    "end": "1503000"
  },
  {
    "text": "noise first you have to choose what cryptographic functions you want to use they are not so many and you don't negotiate which one you want you just",
    "start": "1454460",
    "end": "1460970"
  },
  {
    "text": "have to choose in the beginning and then you have to use these ones you cannot change so for the key exchange you can",
    "start": "1460970",
    "end": "1466490"
  },
  {
    "text": "use curve two five five one nine or curve for free eight there pretty famous actually curve 448 was",
    "start": "1466490",
    "end": "1473139"
  },
  {
    "text": "invented by Trevor by Mike Hamburg the creator of the Straub protocol framework",
    "start": "1473139",
    "end": "1479940"
  },
  {
    "text": "anyway if you want to encrypt you can you stretch out 20 point 1305 or AES GTM",
    "start": "1479940",
    "end": "1484950"
  },
  {
    "text": "one is fast in software the other one is fast if you have a hardware support and finally if you want to use a hash you",
    "start": "1484950",
    "end": "1492009"
  },
  {
    "text": "can use black 2 or chateau so remember this Blake was in the shaft 3 competition and you can also realize",
    "start": "1492009",
    "end": "1498219"
  },
  {
    "text": "that there is no shot 3 in there we're really far away from shattering alright",
    "start": "1498219",
    "end": "1504719"
  },
  {
    "start": "1503000",
    "end": "1578000"
  },
  {
    "text": "so you have a client you have a server you want to encrypt that out so first you do a handshake if you know TLS it",
    "start": "1504719",
    "end": "1510489"
  },
  {
    "text": "should be pretty straightforward if you don't know then it's going to be protocol 101 for you so here a client on",
    "start": "1510489",
    "end": "1516700"
  },
  {
    "text": "a server exchange what they call ephemeral keys keys data are generated only for this session right those are",
    "start": "1516700",
    "end": "1523059"
  },
  {
    "text": "not long-term study keys once they exchange these keys they can do a quick change they can do what we call detail",
    "start": "1523059",
    "end": "1529719"
  },
  {
    "text": "man-cakes change and then they get some shared secrets that they can use to encrypt sin what we call a post",
    "start": "1529719",
    "end": "1536619"
  },
  {
    "text": "handshake phase so here's just application data whatever you want to encrypt it's a really protocol 101 here",
    "start": "1536619",
    "end": "1544209"
  },
  {
    "text": "this most simple kind of key exchange you can do now is called ephemeral keys",
    "start": "1544209",
    "end": "1550329"
  },
  {
    "text": "e a token e and when you do a deal medications with two or more keys you",
    "start": "1550329",
    "end": "1556269"
  },
  {
    "text": "will call that e e that's how noise works and then noise right this kind of",
    "start": "1556269",
    "end": "1562599"
  },
  {
    "text": "handshake by just writing it with this syntax where you send a client a formal key and then the server sends his a for",
    "start": "1562599",
    "end": "1570070"
  },
  {
    "text": "monkey and then they do an D filmin cake change on both of these keys so that's the notation you will see if you look at",
    "start": "1570070",
    "end": "1575769"
  },
  {
    "text": "the specification there are other tokens there is a stokin for static keys long term keys and since there are there's",
    "start": "1575769",
    "end": "1583359"
  },
  {
    "start": "1578000",
    "end": "1629000"
  },
  {
    "text": "another kind of key you can do different kind of D film and key exchange where you need an F remote key of the client",
    "start": "1583359",
    "end": "1589119"
  },
  {
    "text": "and the one of the server or the inverse or you do a development exchange with both study key and if you have already",
    "start": "1589119",
    "end": "1596859"
  },
  {
    "text": "pre shared key or pre shared secrets you can you can do that kind of key exchange as well",
    "start": "1596859",
    "end": "1602980"
  },
  {
    "text": "so reading a lot of tokens and these tokens are used to build a lot of different protocols a lot of different",
    "start": "1602980",
    "end": "1609279"
  },
  {
    "text": "handshakes you really and they have names and you really have different handshakes for every situation if you",
    "start": "1609279",
    "end": "1615850"
  },
  {
    "text": "want to authenticate the server if you have public infrastructure you can if you already know the public key of the",
    "start": "1615850",
    "end": "1621370"
  },
  {
    "text": "client you can authenticate the client like that if you have a pre-shot secret you can use that a lot a lot this is not",
    "start": "1621370",
    "end": "1626590"
  },
  {
    "text": "an exhaustive list you have a lot of them but today for this talk I'm just",
    "start": "1626590",
    "end": "1631750"
  },
  {
    "start": "1629000",
    "end": "1787000"
  },
  {
    "text": "going to focus on the NX handshake the first n means that the client is not",
    "start": "1631750",
    "end": "1637200"
  },
  {
    "text": "authenticated the second letter X means that the server sends its study key as",
    "start": "1637200",
    "end": "1643630"
  },
  {
    "text": "part of the handshake so that means that my rings ring a bell if you know how FCPS work that's exactly",
    "start": "1643630",
    "end": "1651309"
  },
  {
    "text": "the web browser web server scenario right when you go on HTTPS google.com",
    "start": "1651309",
    "end": "1657029"
  },
  {
    "text": "the browser doesn't send a key doesn't send a certificate but google.com really sends you a certificate right so that's",
    "start": "1657029",
    "end": "1664000"
  },
  {
    "text": "exactly what's happening here so I chose this handshake pattern so I got if you don't tell us you know HTTPS you can",
    "start": "1664000",
    "end": "1670450"
  },
  {
    "text": "understand and can follow more easily all right so let's read the first token there it's an e token that means that",
    "start": "1670450",
    "end": "1677049"
  },
  {
    "text": "the client has to send an a formal public key has to generate one and to send it and now the client is done there",
    "start": "1677049",
    "end": "1684070"
  },
  {
    "text": "is nothing more so the client can send a payload can be anything can be hey I",
    "start": "1684070",
    "end": "1689110"
  },
  {
    "text": "want to talk to that server now that server or it can be the name of the client can be anything but it's not encrypted now is the server's turn right",
    "start": "1689110",
    "end": "1698340"
  },
  {
    "text": "so the server has to generate his own public key ephemeral public key and send",
    "start": "1698340",
    "end": "1703659"
  },
  {
    "text": "it and I call that re for remotes a ephemeral no we have two kids we",
    "start": "1703659",
    "end": "1709059"
  },
  {
    "text": "exchanged two public keys so we can do a different key exchange on both of these ephemeral keys which I'll put a shared",
    "start": "1709059",
    "end": "1718389"
  },
  {
    "text": "secret which we can use to encrypt the next token the next token is a static key and so here I call it rs4 remote",
    "start": "1718389",
    "end": "1725320"
  },
  {
    "text": "static encrypted we can decrypt it and we know we have a new key to study key",
    "start": "1725320",
    "end": "1730840"
  },
  {
    "text": "of the server that we can use to do this es which is a D filmin connections between the ephemeral key of the client",
    "start": "1730840",
    "end": "1736820"
  },
  {
    "text": "and the study key of the server and then it's the end of the handshake pattern so",
    "start": "1736820",
    "end": "1742519"
  },
  {
    "text": "the server can send a payload as well and encrypt it with a new key derived from that last key exchange that payload",
    "start": "1742519",
    "end": "1750350"
  },
  {
    "text": "can contain whatever the client the server wants to send probably here a signature over its public key from some",
    "start": "1750350",
    "end": "1756649"
  },
  {
    "text": "certificate authority or some pointer so that's that's about it that's what noise",
    "start": "1756649",
    "end": "1762590"
  },
  {
    "text": "does or when you do an NX handshake right you exchange some public key some",
    "start": "1762590",
    "end": "1767870"
  },
  {
    "text": "ephemeral public keys some static public keys you do different key exchange and then you can encrypt simpler that all",
    "start": "1767870",
    "end": "1777230"
  },
  {
    "text": "right so I'm going to be talking about that more I'm going to go through that key exchange one more time but this time",
    "start": "1777230",
    "end": "1784279"
  },
  {
    "text": "I'm going to be more specific I'm going to show you the internals of noise",
    "start": "1784279",
    "end": "1789350"
  },
  {
    "start": "1787000",
    "end": "2068000"
  },
  {
    "text": "what's happening under the surface and this is my most complicated slide so",
    "start": "1789350",
    "end": "1794779"
  },
  {
    "text": "time to focus again and it's quite heavy and basically here you only have the",
    "start": "1794779",
    "end": "1800299"
  },
  {
    "text": "view of the clients just because I don't have enough space to put the view of the server as well on top you have three",
    "start": "1800299",
    "end": "1807230"
  },
  {
    "text": "different states they don't matter too much to our dress structures where you can store some values if you kind of",
    "start": "1807230",
    "end": "1814820"
  },
  {
    "text": "know noise you can follow along otherwise you can just ignore them so the first thing you do when you go",
    "start": "1814820",
    "end": "1820460"
  },
  {
    "text": "through a noise hand check is that you initialize both the client and the server what they're going to do is that",
    "start": "1820460",
    "end": "1827000"
  },
  {
    "text": "they're going to hash this string and here this is the name of my protocol this is noise underscore NX my hand",
    "start": "1827000",
    "end": "1833179"
  },
  {
    "text": "check pattern underscore two five five one nine my key exchange algorithm then",
    "start": "1833179",
    "end": "1838759"
  },
  {
    "text": "ASG cm and shadow 56 I'm pretty conservative I'm choosing these algorithms I hash that and I store that",
    "start": "1838759",
    "end": "1845210"
  },
  {
    "text": "into value called H more on that later I also store that into a value called CK",
    "start": "1845210",
    "end": "1852289"
  },
  {
    "text": "for chaining key again I'm not going to explain that yet so now remember the",
    "start": "1852289",
    "end": "1857929"
  },
  {
    "text": "client sends the net ephemeral public key right so first the client has to",
    "start": "1857929",
    "end": "1863570"
  },
  {
    "text": "generate it and store it somewhere and now we're going to do something weird",
    "start": "1863570",
    "end": "1868970"
  },
  {
    "text": "we're going to hash public-key that we sang with the previous age value and it's going to",
    "start": "1868970",
    "end": "1874460"
  },
  {
    "text": "give us a new edge value all right know it's time for the client to send a",
    "start": "1874460",
    "end": "1880760"
  },
  {
    "text": "payload whatever the client wants can be empty and we're going to do the same thing with the payload we're going to",
    "start": "1880760",
    "end": "1886190"
  },
  {
    "text": "hash the payload with the previous H value that we just cut from that previous thing and we get a new edge",
    "start": "1886190",
    "end": "1894169"
  },
  {
    "text": "value and this kind of looks like I'm absorbing everything I'm sending or you",
    "start": "1894169",
    "end": "1899450"
  },
  {
    "text": "will see letter receiving so you can see this is kind of a hint as to what I'm",
    "start": "1899450",
    "end": "1905150"
  },
  {
    "text": "going to do later I'll change these parts by this just by",
    "start": "1905150",
    "end": "1910700"
  },
  {
    "text": "absorbing it but this is pretty much what the H value is it's an absorption of every message we send and receive so",
    "start": "1910700",
    "end": "1918799"
  },
  {
    "text": "it's the same thing on both the client and the server now the server it is turn sends and remote ephemeral public key so",
    "start": "1918799",
    "end": "1926720"
  },
  {
    "text": "we store that somewhere and we absorb that now we can do a DPL man-cakes",
    "start": "1926720",
    "end": "1934070"
  },
  {
    "text": "change and we put the output into h KD F which is a key derivation function with",
    "start": "1934070",
    "end": "1939440"
  },
  {
    "text": "the C key value this chaining key it gives us the next chaining key and a key",
    "start": "1939440",
    "end": "1944690"
  },
  {
    "text": "that we can use to encrypt and so you can see here the chaining key is really used to generate encryption keys now",
    "start": "1944690",
    "end": "1952340"
  },
  {
    "text": "that we have a key we can decrypt stuff it's good because the server is sending us an encrypted static key so we can use",
    "start": "1952340",
    "end": "1959840"
  },
  {
    "text": "the key we just generated to decrypt it and here if you know AES GCM you know that there is an authenticated data part",
    "start": "1959840",
    "end": "1966410"
  },
  {
    "text": "that we can use to actually authenticate anything we want so here we are authenticated this edge value and by",
    "start": "1966410",
    "end": "1973070"
  },
  {
    "text": "doing that we authenticate the whole transcript we authenticate the whole handshake we make sure that the server",
    "start": "1973070",
    "end": "1978770"
  },
  {
    "text": "is saying the same thing we're saying the same sequence of messages so it's a",
    "start": "1978770",
    "end": "1983870"
  },
  {
    "text": "very good property of noise of course we",
    "start": "1983870",
    "end": "1989240"
  },
  {
    "text": "absorbed the cipher text we just received and now we have a new key to",
    "start": "1989240",
    "end": "1994280"
  },
  {
    "text": "study key of the server so we can do a new D filmin cake change we put that into H KDF with the chaining key to",
    "start": "1994280",
    "end": "1999559"
  },
  {
    "text": "derive a new key and a new training key finally oops we receive a final payload",
    "start": "1999559",
    "end": "2010030"
  },
  {
    "text": "the server is done we can decrypt it with the new key we created we can",
    "start": "2010030",
    "end": "2015100"
  },
  {
    "text": "authenticate the edge value so we make sure that the handshake looks the same on both side and we absorbed this",
    "start": "2015100",
    "end": "2023110"
  },
  {
    "text": "ciphertext and all the handshake is done so what we do finally is that we put the last ck the last training key into HK D",
    "start": "2023110",
    "end": "2029890"
  },
  {
    "text": "F again it gives us two keys one key to encrypt from the client to the server one key to encrypt from the server to",
    "start": "2029890",
    "end": "2035919"
  },
  {
    "text": "the client so it's like TLS all right that's that's quite tricky right it's it's kind of dense I don't",
    "start": "2035919",
    "end": "2042400"
  },
  {
    "text": "know if you could follow that if you're watching the video on YouTube then that's better because you can rewind",
    "start": "2042400",
    "end": "2048010"
  },
  {
    "text": "right but yeah that one of the point of that slide is really that it's complicated it's not it's way less",
    "start": "2048010",
    "end": "2054128"
  },
  {
    "text": "complicated than TLS fortunately but it's still kind of dense so what I'm",
    "start": "2054129",
    "end": "2060700"
  },
  {
    "text": "going to do is that I'm going to simplify that and that's really the part the the the last part of my talk which",
    "start": "2060700",
    "end": "2069700"
  },
  {
    "start": "2068000",
    "end": "2243000"
  },
  {
    "text": "is called disco which is a merger of noise and strobe I make sense again maestro disco and I'm just going to",
    "start": "2069700",
    "end": "2077230"
  },
  {
    "text": "simplify because when I looked at noise I was like I can simplify that using strobe I can make it more elegant more",
    "start": "2077230",
    "end": "2083350"
  },
  {
    "text": "smaller easier to implement and all this stuff and I'm going to show you how I",
    "start": "2083350",
    "end": "2089408"
  },
  {
    "text": "did it so going through the same handshake one more time so a third time",
    "start": "2089409",
    "end": "2096070"
  },
  {
    "text": "now but this time using strobe so I initialize it and this time I've brought",
    "start": "2096070",
    "end": "2102580"
  },
  {
    "text": "a ESG cm and shout 256 actually throughout also HKD F&H Mac that are",
    "start": "2102580",
    "end": "2108160"
  },
  {
    "text": "used in noise I throw out a lot of this symmetric cryptographic algorithm and I just replace it with strobe so that your",
    "start": "2108160",
    "end": "2115270"
  },
  {
    "text": "cut base is now much smaller much simpler and I use this in each strobe",
    "start": "2115270",
    "end": "2121390"
  },
  {
    "text": "function that shrub gives me to instantiate strobe objects now remember",
    "start": "2121390",
    "end": "2126760"
  },
  {
    "text": "I have to send a public key as the clients I have to generate the public key first nothing changed and now I can",
    "start": "2126760",
    "end": "2133600"
  },
  {
    "text": "absorb the public key in my state with this and clear function makes sense right",
    "start": "2133600",
    "end": "2138970"
  },
  {
    "text": "we're sending something clear we're sending a payload now well I can just",
    "start": "2138970",
    "end": "2143980"
  },
  {
    "text": "use this send clear function to you send my payload and absorb it in my state all",
    "start": "2143980",
    "end": "2149230"
  },
  {
    "text": "right the server's turn we receive a public key that we store using the receive",
    "start": "2149230",
    "end": "2154840"
  },
  {
    "text": "clear function right we receive it in clear makes sense now we have two",
    "start": "2154840",
    "end": "2160600"
  },
  {
    "text": "ephemeral public keys we can do a check change detail man between these two keys and we absorb the result with this ad",
    "start": "2160600",
    "end": "2166240"
  },
  {
    "text": "function that strobe gives us now we",
    "start": "2166240",
    "end": "2171250"
  },
  {
    "text": "receive an encrypted study key we can just risk decrypt it and also",
    "start": "2171250",
    "end": "2177670"
  },
  {
    "text": "authenticate the whole hand check everything that we have absorbed so far",
    "start": "2177670",
    "end": "2182800"
  },
  {
    "text": "via this receive a a G function which is really receive encryption and receive mark now we can do a new detail man with",
    "start": "2182800",
    "end": "2191380"
  },
  {
    "text": "that static key that we just received and we absorb it with this ad function and I will receive a payload that we can",
    "start": "2191380",
    "end": "2197710"
  },
  {
    "text": "decrypt with this receive a EAD function and that's about it that's the same",
    "start": "2197710",
    "end": "2203620"
  },
  {
    "text": "handshake that I went through previously simplified by stroke if you had to",
    "start": "2203620",
    "end": "2209260"
  },
  {
    "text": "implement that it looks easier right compared to the previous diagram and",
    "start": "2209260",
    "end": "2215190"
  },
  {
    "text": "much more simple and here at the end if I want to separate two states one for the client to encrypt and one for the",
    "start": "2215190",
    "end": "2221560"
  },
  {
    "text": "server to encrypt I can just call my state and kind of differentiate them into two different states and I can use",
    "start": "2221560",
    "end": "2226870"
  },
  {
    "text": "one for the client one for the server and here I can just continue to encrypt and continue to decrypt I don't set up",
    "start": "2226870",
    "end": "2233650"
  },
  {
    "text": "nonsense or IVs or counters and every time I authenticate something I authenticate everything starting from",
    "start": "2233650",
    "end": "2239500"
  },
  {
    "text": "the handshake I want to go through the",
    "start": "2239500",
    "end": "2244840"
  },
  {
    "text": "same handshake one last time but to show you exactly what's happening with that double x instruction and this is",
    "start": "2244840",
    "end": "2252010"
  },
  {
    "text": "something I really couldn't have done with AES DCM and shout 256 and HK D F and and H Mac but I can do it because",
    "start": "2252010",
    "end": "2258490"
  },
  {
    "text": "it's so simple and so against that I can actually show you what's happening under the surface so here when I initialize",
    "start": "2258490",
    "end": "2265510"
  },
  {
    "text": "what I'm doing is that I absorb this string by exerting it with my public parts so remember",
    "start": "2265510",
    "end": "2270850"
  },
  {
    "text": "the diagram that I had on sherry I had the public part on top here I just",
    "start": "2270850",
    "end": "2276130"
  },
  {
    "text": "rotate it and my public part is on the right my secret parties on the left so to absorb the string I just XOR it with",
    "start": "2276130",
    "end": "2281800"
  },
  {
    "text": "the public part no need to send a public key I generate it and I just XOR it in",
    "start": "2281800",
    "end": "2288040"
  },
  {
    "text": "my public part if I reach the end of the public part I can just permute and start",
    "start": "2288040",
    "end": "2293470"
  },
  {
    "text": "again on a new block right exactly what what I was doing when I was hashing with sherry I sent a payload what do I do",
    "start": "2293470",
    "end": "2301540"
  },
  {
    "text": "I ignore it in the public part now I receive a public key I'm just gonna",
    "start": "2301540",
    "end": "2307570"
  },
  {
    "text": "absorb it all so I'm just gonna going to XXR it in the public part it's pretty easy right it's pretty elegant no I'm",
    "start": "2307570",
    "end": "2315490"
  },
  {
    "text": "doing a detail man between the two keys I just saw it in the public part now I",
    "start": "2315490",
    "end": "2321190"
  },
  {
    "text": "receive the encryption of the study key and a tag I do this little dance where I permutes and I generate some random bits",
    "start": "2321190",
    "end": "2327610"
  },
  {
    "text": "out of everything that I have absorbed including the key exchange and I can decrypt the payload and then I can",
    "start": "2327610",
    "end": "2335350"
  },
  {
    "text": "permute again to generate some tag verify that it's the same one that I received otherwise somebody's man in the",
    "start": "2335350",
    "end": "2341920"
  },
  {
    "text": "middling me and I can cancel the handshake no I can do a new DPhil man",
    "start": "2341920",
    "end": "2347410"
  },
  {
    "text": "with the new static key that I absorb in my public parts by exploring it and finally I receive a payload encrypted so",
    "start": "2347410",
    "end": "2354820"
  },
  {
    "text": "I can do this little dance again to decrypt it and to generate an attack that I can verify and that's it",
    "start": "2354820",
    "end": "2360940"
  },
  {
    "text": "the handshake that noise is doing or rather now we can we can call it disco",
    "start": "2360940",
    "end": "2367000"
  },
  {
    "text": "is this thing it's pretty simple right we're just ignoring stuff and sometimes",
    "start": "2367000",
    "end": "2373660"
  },
  {
    "text": "we're permuting compared to the previous diagram it's pretty elegant so disco is",
    "start": "2373660",
    "end": "2380850"
  },
  {
    "text": "on disco crypto come pretty easy to remember and what is it it's a draft",
    "start": "2380850",
    "end": "2387940"
  },
  {
    "text": "specification it's an extension of noise that noise protocol framework right still drafts still experimental from",
    "start": "2387940",
    "end": "2397090"
  },
  {
    "text": "that I made a library called lead disco so it's a plug and play protocol so it",
    "start": "2397090",
    "end": "2402550"
  },
  {
    "text": "allows you to do something like noise where you can encrypt communications between two devices or more but since I'm using",
    "start": "2402550",
    "end": "2409450"
  },
  {
    "text": "strobe it's also a cryptographic library to derive keys to hash and and so on so",
    "start": "2409450",
    "end": "2415930"
  },
  {
    "text": "it's a protocol analyzer it's written in golang it's available at the same",
    "start": "2415930",
    "end": "2421450"
  },
  {
    "text": "address so the specification and the library are Disko crypto comm so you can go on it today and the whole lot is only a",
    "start": "2421450",
    "end": "2429430"
  },
  {
    "text": "thousand lines of code if you don't count the primitives the cryptographic primitives so if you want to audit disco",
    "start": "2429430",
    "end": "2435640"
  },
  {
    "text": "live disco it's very very short it's very small of course it's not very",
    "start": "2435640",
    "end": "2440920"
  },
  {
    "text": "useful if you don't have the cryptographic primitives so if you want strobe strobe it's very small right it's",
    "start": "2440920",
    "end": "2446320"
  },
  {
    "text": "only a thousand lines of code so the total is two thousand lines of code finally if you want to use the protocol",
    "start": "2446320",
    "end": "2454630"
  },
  {
    "text": "you need some key exchange algorithm curve two five five one nine is two thousand lines of code so you have to",
    "start": "2454630",
    "end": "2460900"
  },
  {
    "text": "add that so the entirety of the library we strobe the cryptographic library and",
    "start": "2460900",
    "end": "2466150"
  },
  {
    "text": "the protocol is the same amount of lines of code as curve two five five one nine so it's extremely small if you want to",
    "start": "2466150",
    "end": "2472570"
  },
  {
    "text": "look at the code and make sure it's secure yourself you can do it right it's not gonna take you that long it's based",
    "start": "2472570",
    "end": "2478990"
  },
  {
    "text": "on noise which is let's say a stable draft at this point sitting in it's being used I mean what's up use it for I",
    "start": "2478990",
    "end": "2485349"
  },
  {
    "text": "don't know how many many users strobe is alpha but I suspect it's being used by",
    "start": "2485349",
    "end": "2490960"
  },
  {
    "text": "Rambis other moments since it's been developed there disco nabisco are",
    "start": "2490960",
    "end": "2496210"
  },
  {
    "text": "completely experimental so I came here today to give you a glimpse of what we have what new things we have in the",
    "start": "2496210",
    "end": "2504160"
  },
  {
    "text": "applied crypto world and what it's going to change the landscape of the applied crypto but it's going to take some years",
    "start": "2504160",
    "end": "2509910"
  },
  {
    "text": "now I came here also to hype some people adding more eyes more testing and at",
    "start": "2509910",
    "end": "2516070"
  },
  {
    "text": "some point down the line we might have something that is very small and Wireless carried on TLS to encrypt our",
    "start": "2516070",
    "end": "2522670"
  },
  {
    "text": "communications so that's about it the",
    "start": "2522670",
    "end": "2527920"
  },
  {
    "text": "whole disco stuff again disco crypto calm I write a lot about crypto on my",
    "start": "2527920",
    "end": "2533470"
  },
  {
    "text": "blog cryptology dotnet I write about security technical articles or less technical so",
    "start": "2533470",
    "end": "2540360"
  },
  {
    "text": "come take a look there and you can follow me on Twitter user one underscore David that used to be my city in France",
    "start": "2540360",
    "end": "2546870"
  },
  {
    "text": "and of course I work at NCC group so if you need some someone to look at your",
    "start": "2546870",
    "end": "2553120"
  },
  {
    "text": "crypto call me give me a call if you're a consultant or if you're in the app SEC",
    "start": "2553120",
    "end": "2558640"
  },
  {
    "text": "team of your of your company or anything like that you can also talk to me I'd be happy to help you or or talk to you",
    "start": "2558640",
    "end": "2564130"
  },
  {
    "text": "about crypto or security in general so yeah I'll be here or at the conference if you need me thanks some questions there's a mic",
    "start": "2564130",
    "end": "2582370"
  },
  {
    "text": "hi so I didn't see in a protocol the",
    "start": "2582370",
    "end": "2589360"
  },
  {
    "text": "presence of static private key how do",
    "start": "2589360",
    "end": "2594730"
  },
  {
    "text": "you verify who you communicate with so",
    "start": "2594730",
    "end": "2599890"
  },
  {
    "text": "like I said noise NX is pretty much like the web browser web server scenario so",
    "start": "2599890",
    "end": "2609060"
  },
  {
    "text": "alright I have to go through that again but basically remember I said that you",
    "start": "2609060",
    "end": "2614170"
  },
  {
    "text": "can send a payload at the end of a turn right the client sends a payload at the end of its turn and here the server can",
    "start": "2614170",
    "end": "2622570"
  },
  {
    "text": "send a payload at the end of his turn so that's the point where you can include",
    "start": "2622570",
    "end": "2628620"
  },
  {
    "text": "parameters which verify you're communicating partner exactly you know",
    "start": "2628620",
    "end": "2635650"
  },
  {
    "text": "the next probably you would include a signature from some authority right the client trusts I understand thank you",
    "start": "2635650",
    "end": "2643360"
  },
  {
    "text": "sure another question next question",
    "start": "2643360",
    "end": "2649500"
  },
  {
    "text": "question here",
    "start": "2651690",
    "end": "2655050"
  },
  {
    "text": "thank you for a nice presentation I really appreciate it DLS is going to be",
    "start": "2656940",
    "end": "2662740"
  },
  {
    "text": "extinguished hopefully but still yesterday there was a talk that we",
    "start": "2662740",
    "end": "2667750"
  },
  {
    "text": "shouldn't put all our trust in like one cryptographic primitive because in case",
    "start": "2667750",
    "end": "2673000"
  },
  {
    "text": "this shown that it becomes broken or backdoored then we are kind of screwed right and here what you're doing is",
    "start": "2673000",
    "end": "2679869"
  },
  {
    "text": "basically using sha free for everything right so in case there's a vulnerability",
    "start": "2679869",
    "end": "2685180"
  },
  {
    "text": "or weakness or backdoor into free that means that all of this is broken as well",
    "start": "2685180",
    "end": "2691440"
  },
  {
    "text": "right so so there are two different schools of thoughts I would say there",
    "start": "2691440",
    "end": "2698230"
  },
  {
    "text": "are the people who think you shouldn't put all your eggs in one basket and have as many cryptographic permits that that",
    "start": "2698230",
    "end": "2704619"
  },
  {
    "text": "we can have for example TrueCrypt you can choose what what you want to use to encrypt tell us you can choose your",
    "start": "2704619",
    "end": "2710349"
  },
  {
    "text": "primitive the other school of thought is that we've had a lot of things broken in the past and this cryptographic agility",
    "start": "2710349",
    "end": "2717550"
  },
  {
    "text": "is kind of a mess in TLS so we must it's better to make sure that one thing works",
    "start": "2717550",
    "end": "2723970"
  },
  {
    "text": "well and just use this thing for everything else so like that if you want to audit your system you have just this",
    "start": "2723970",
    "end": "2730150"
  },
  {
    "text": "I don't know the thousand lines of code actually shatter is even less it's like maybe 200 300 she gone Twitter there is",
    "start": "2730150",
    "end": "2738430"
  },
  {
    "text": "a Twitter account called tweet Pheebs - or - it's 9 tweets if you concatenate all the tweets together it's an",
    "start": "2738430",
    "end": "2744220"
  },
  {
    "text": "implementation of chattering but it's very very small so it's better to have one thing to edit and then make sure",
    "start": "2744220",
    "end": "2751690"
  },
  {
    "text": "it's secure and like that everything else relies on that and you don't have many threads running around now if one",
    "start": "2751690",
    "end": "2759670"
  },
  {
    "text": "day we realized that the permutation of chatter is broken we can just replace it and it should work because we have",
    "start": "2759670",
    "end": "2766330"
  },
  {
    "text": "proved that the construction on top of it works right so so does that answer",
    "start": "2766330",
    "end": "2771550"
  },
  {
    "text": "your question all right another question where I we",
    "start": "2771550",
    "end": "2779170"
  },
  {
    "text": "still have to mean it so if you have any question just ask",
    "start": "2779170",
    "end": "2784050"
  },
  {
    "text": "thanks for the talk very nice I had the question use with you steel rely on",
    "start": "2785860",
    "end": "2792630"
  },
  {
    "text": "isometric keys to prove the identity of the other party you communicating with",
    "start": "2792630",
    "end": "2799290"
  },
  {
    "text": "so so you don't have to this is one example this is nice annex you have",
    "start": "2799290",
    "end": "2805300"
  },
  {
    "text": "other handshakes where you can just use a pre-shared key so some so no public",
    "start": "2805300",
    "end": "2810640"
  },
  {
    "text": "key well you still do the ephemeral public key parts but you rely on that shared secret so not on a static key",
    "start": "2810640",
    "end": "2817810"
  },
  {
    "text": "long-term study key I'm asking that because I so talked recently talking",
    "start": "2817810",
    "end": "2825130"
  },
  {
    "text": "about quantum computing and how it could affect the trust we have in a symmetric",
    "start": "2825130",
    "end": "2833140"
  },
  {
    "text": "keys is there a solution you have in mind for this kind of problem also so",
    "start": "2833140",
    "end": "2840190"
  },
  {
    "text": "for quantum crypto pretty much all the symmetric crypto we have should we stand",
    "start": "2840190",
    "end": "2846100"
  },
  {
    "text": "whatever quantum computers we have one day we have any when it comes to public",
    "start": "2846100",
    "end": "2851170"
  },
  {
    "text": "key cryptography so here curve 2 5 5 1 9 or curve 48 probably it would be more",
    "start": "2851170",
    "end": "2856270"
  },
  {
    "text": "difficult so right now we have a nice kind of open thing it's not a",
    "start": "2856270",
    "end": "2862510"
  },
  {
    "text": "competition where a lot of people have submitted designs for signatures for key exchanges that are secured against",
    "start": "2862510",
    "end": "2870940"
  },
  {
    "text": "quantum computers I think it was over like 2 days ago or something like that so research is ongoing this is not",
    "start": "2870940",
    "end": "2878650"
  },
  {
    "text": "something that we have now or rather we don't have confidence in these algorithms now but in the future it may",
    "start": "2878650",
    "end": "2885100"
  },
  {
    "text": "be in 5 years 10 years will have solid post quantum crypto please another thing",
    "start": "2885100",
    "end": "2891520"
  },
  {
    "text": "I can tell you about that also Google Chrome made some experiments they included post quantum key exchange but",
    "start": "2891520",
    "end": "2900010"
  },
  {
    "text": "since they were not sure it was secure because hasn't received the same amount of cryptanalysis they also included a",
    "start": "2900010",
    "end": "2907090"
  },
  {
    "text": "normal creation so something like 255 1:9 and what they would do is that they would do two key exchange in parallel",
    "start": "2907090",
    "end": "2913060"
  },
  {
    "text": "one with an algorithm that we know that we're fond of that we think is secure",
    "start": "2913060",
    "end": "2919780"
  },
  {
    "text": "and one with the post quantum cryptography and then they would export the results to use that as a key so like that if the post quantum crypto turns",
    "start": "2919780",
    "end": "2927430"
  },
  {
    "text": "out not to be secure you can use the other one you can rely on the other one if one day we have post quantum",
    "start": "2927430",
    "end": "2932560"
  },
  {
    "text": "computers you can rely on the post quantum crypto algorithm so so do they are called hybrid schemes where they mix",
    "start": "2932560",
    "end": "2938560"
  },
  {
    "text": "both algorithms together like that you can rely on both of them I just allow",
    "start": "2938560",
    "end": "2958420"
  },
  {
    "text": "myself to add for the google chrome experiment because I was busy with this",
    "start": "2958420",
    "end": "2964050"
  },
  {
    "text": "it was the New Hope algorithm right and they embedded it into an ECC because a",
    "start": "2964050",
    "end": "2973540"
  },
  {
    "text": "signature was not included the algorithm itself is secure and it's used by infini",
    "start": "2973540",
    "end": "2982870"
  },
  {
    "text": "Infineon Infineon now for new contact contactless chips they produce these",
    "start": "2982870",
    "end": "2990310"
  },
  {
    "text": "chips already are you talking about the post quantum algorithm yes okay new hope right yeah they prepare themselves for",
    "start": "2990310",
    "end": "2998260"
  },
  {
    "text": "connected car infrastructure so that there was no hope but what I said that they did was to do that hybrid scheme",
    "start": "2998260",
    "end": "3005190"
  },
  {
    "text": "where they would use new hope as well as together exactly that's what they did",
    "start": "3005190",
    "end": "3010530"
  },
  {
    "text": "they embedded new hope in in a ECC elliptic curve scheme right but New Hope",
    "start": "3010530",
    "end": "3019860"
  },
  {
    "text": "has no signature integrated so that's why they did it right it's quite",
    "start": "3019860",
    "end": "3025620"
  },
  {
    "text": "interesting and I believe that this is not in chrome anymore so that was just a",
    "start": "3025620",
    "end": "3030630"
  },
  {
    "text": "test and they removed the test but they were just testing all right more",
    "start": "3030630",
    "end": "3037890"
  },
  {
    "text": "questions I guess we can call it yeah",
    "start": "3037890",
    "end": "3046850"
  },
  {
    "text": "all right thank you [Applause]",
    "start": "3046850",
    "end": "3055499"
  }
]