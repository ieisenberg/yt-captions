[
  {
    "text": "I'd like to introduce our speaker this morning for giving us a talk on",
    "start": "0",
    "end": "5069"
  },
  {
    "text": "network-attached shell nasty systems that store network accessible shells we've got Jacob Holcomb hello how are",
    "start": "5069",
    "end": "13860"
  },
  {
    "text": "you guys doing okay so I guess an issue",
    "start": "13860",
    "end": "21180"
  },
  {
    "text": "I'm having my wireless card I'll deal with when we get to the actual demonstrations so as you were just",
    "start": "21180",
    "end": "28470"
  },
  {
    "text": "informed my I talk is network-attached show nasty systems I store network accessible shells the purpose of this",
    "start": "28470",
    "end": "35399"
  },
  {
    "text": "talk is to discuss the insecurities of network storage systems hence storing",
    "start": "35399",
    "end": "41640"
  },
  {
    "text": "network accessible shells we're going to talk today about several things but basically the insecurities of these",
    "start": "41640",
    "end": "48270"
  },
  {
    "text": "devices and how they can be compromised so really quick Who am I I'm Jacob",
    "start": "48270",
    "end": "53340"
  },
  {
    "text": "Holcomb I'm a security analyst at independent security evaluators I",
    "start": "53340",
    "end": "59030"
  },
  {
    "text": "exploit software why because I love doing it's my hobby I get to do it for a",
    "start": "59030",
    "end": "64350"
  },
  {
    "text": "job it's like the best thing in the world okay so is this really important",
    "start": "64350",
    "end": "70250"
  },
  {
    "text": "well well yes it is and why a hundred percent of the devices that I've",
    "start": "70250",
    "end": "75930"
  },
  {
    "text": "evaluated are vulnerable to some form of exploitation in most cases the",
    "start": "75930",
    "end": "80970"
  },
  {
    "text": "exploitation led to a full route compromise and storage systems are not",
    "start": "80970",
    "end": "87180"
  },
  {
    "text": "the only embedded device that have gaping holes or system deficiencies as",
    "start": "87180",
    "end": "95060"
  },
  {
    "text": "demonstrated by Craig Hefner last year here at black cap he talked about IP cameras and how they were incredibly",
    "start": "95060",
    "end": "101610"
  },
  {
    "text": "vulnerable to attack I also put out a substantial research last year to",
    "start": "101610",
    "end": "106829"
  },
  {
    "text": "discussing the insecurities of Soho routers where I published 56 CBE numbers",
    "start": "106829",
    "end": "113850"
  },
  {
    "text": "for various vulnerabilities across like 12 devices so really quick about the",
    "start": "113850",
    "end": "119969"
  },
  {
    "text": "company I work for I work for ISC independent security evaluators we are a",
    "start": "119969",
    "end": "125130"
  },
  {
    "text": "computer science firm we specialize in security we are customers are basically",
    "start": "125130",
    "end": "132510"
  },
  {
    "text": "fortune 500 companies and they hire us to assess third-party software products and these",
    "start": "132510",
    "end": "140610"
  },
  {
    "text": "products are normally used within their organization and they bring us in to say hey as this a secure piece of software",
    "start": "140610",
    "end": "146730"
  },
  {
    "text": "to deploy on a network another like primary note is that our perspective is",
    "start": "146730",
    "end": "153270"
  },
  {
    "text": "white box so a lot of time when you hear pen test you're thinking like network engagements and just attacking you know",
    "start": "153270",
    "end": "159450"
  },
  {
    "text": "a network seeing how an attacker could get in from the outside but we like to delve dive deeper into the systems and",
    "start": "159450",
    "end": "165690"
  },
  {
    "text": "actually look all the way down to the source code level and try and uncover bugs that you may not find in a normal",
    "start": "165690",
    "end": "171330"
  },
  {
    "text": "pen test so yeah that's that alright topics so what are we going to cover",
    "start": "171330",
    "end": "177510"
  },
  {
    "text": "today we're going to talk about storage devices what are they the name is kind of obvious but will will just briefly",
    "start": "177510",
    "end": "184350"
  },
  {
    "text": "cover it the key players in the market system functionality so what these",
    "start": "184350",
    "end": "190800"
  },
  {
    "text": "devices are the purpose for them and what functionality they offer end-users the exploit research and development so",
    "start": "190800",
    "end": "198030"
  },
  {
    "text": "the process of finding vulnerabilities and then exploiting these vulnerabilities to assume full control",
    "start": "198030",
    "end": "203130"
  },
  {
    "text": "of the device we will then talk about the absence of security from other embedded electronics with some",
    "start": "203130",
    "end": "209610"
  },
  {
    "text": "demonstrations as well and then some steps for remediation okay so subject",
    "start": "209610",
    "end": "216720"
  },
  {
    "text": "background what our network storage devices well as the name suggests they are devices that store data these",
    "start": "216720",
    "end": "224340"
  },
  {
    "text": "devices are widely used in businesses for a multitude of purposes some of",
    "start": "224340",
    "end": "229650"
  },
  {
    "text": "which are to support the infrastructure of let's say virtual desktops or you",
    "start": "229650",
    "end": "235410"
  },
  {
    "text": "know other like file-sharing databases who are users of these devices anybody",
    "start": "235410",
    "end": "242910"
  },
  {
    "text": "from the small home users all the way to the large enterprises and something that I'll talk about here that I find rather",
    "start": "242910",
    "end": "249900"
  },
  {
    "text": "unique is these manufacturers as they create the software for these devices they're basically creating one package",
    "start": "249900",
    "end": "257250"
  },
  {
    "text": "and they're deploying it across their low-grade devices all the way up to their high grade devices so you could",
    "start": "257250",
    "end": "263490"
  },
  {
    "text": "have a five-hundred-dollar device running the same software as let's say at 25 dollar device that's a problem",
    "start": "263490",
    "end": "271150"
  },
  {
    "text": "especially when we're familiar with the trends of Soho devices being updated by",
    "start": "271150",
    "end": "276800"
  },
  {
    "text": "the manufacturer all right so some key players here are some manufacturers of",
    "start": "276800",
    "end": "283430"
  },
  {
    "text": "devices that we but I assess or did not assess but there are some of the big names in the field and then the",
    "start": "283430",
    "end": "289580"
  },
  {
    "text": "consumers we've just talked about briefly you know like home consumers small businesses large enterprises",
    "start": "289580",
    "end": "294770"
  },
  {
    "text": "things of that nature so here's a quick list of the products that I evaluated",
    "start": "294770",
    "end": "302000"
  },
  {
    "text": "during this assessment or during this research project and actually I'm still",
    "start": "302000",
    "end": "307610"
  },
  {
    "text": "in the middle of uncovering and going through all the software there there is a lot of attack surface to look at in",
    "start": "307610",
    "end": "315110"
  },
  {
    "text": "these devices and a lot of extraneous services that aren't necessarily needed but I mean that's up for debate but here",
    "start": "315110",
    "end": "323000"
  },
  {
    "text": "the devices that I looked at every one of these devices is vulnerable to some",
    "start": "323000",
    "end": "328760"
  },
  {
    "text": "form of remote compromise and when I say remote the it's a network-based attack",
    "start": "328760",
    "end": "336050"
  },
  {
    "text": "so me being either on the same network as the device or being able to communicate with the device over the",
    "start": "336050",
    "end": "341540"
  },
  {
    "text": "internet could compromise these devices all right system functionality so these",
    "start": "341540",
    "end": "351520"
  },
  {
    "text": "these devices I have a couple of them up here are essentially like file servers but even up to like the mid-range",
    "start": "351520",
    "end": "358670"
  },
  {
    "text": "business device they offer functionality that isn't necessarily needed the",
    "start": "358670",
    "end": "364700"
  },
  {
    "text": "primary purpose like we've discussed already is to store data and facilitate the access to the store data these",
    "start": "364700",
    "end": "374120"
  },
  {
    "text": "devices offer a multitude of ways to configure them some of which are telnet",
    "start": "374120",
    "end": "380180"
  },
  {
    "text": "SSH or HTTP and the unnecessary services",
    "start": "380180",
    "end": "385250"
  },
  {
    "text": "the the key service that I'm going to point out here is the cough cloud cough a lot of these devices including the",
    "start": "385250",
    "end": "392570"
  },
  {
    "text": "d-link offer a service called my d-link which essentially is a cloud service",
    "start": "392570",
    "end": "397730"
  },
  {
    "text": "that takes the content on your device and allows you to to sit anywhere except instead of you",
    "start": "397730",
    "end": "404060"
  },
  {
    "text": "performing like NAT on your router and having access to it over the Internet having to worry about a static IP address d-link is the facilitator for",
    "start": "404060",
    "end": "410840"
  },
  {
    "text": "the service so you would connect a d-link and then d-link would connect to your device and they do that through a",
    "start": "410840",
    "end": "416830"
  },
  {
    "text": "some form of a dynamic dns and then",
    "start": "416830",
    "end": "423380"
  },
  {
    "text": "application repository so these devices are essentially all running linux and",
    "start": "423380",
    "end": "429440"
  },
  {
    "text": "they they have repositories of software that you the end-user have the ability",
    "start": "429440",
    "end": "434450"
  },
  {
    "text": "to install you can either install blog software you can install file sharing",
    "start": "434450",
    "end": "439700"
  },
  {
    "text": "music sharing software etc so pretty much you turn this simple one purpose",
    "start": "439700",
    "end": "445970"
  },
  {
    "text": "storage device access my content into this large hole on your network will",
    "start": "445970",
    "end": "452510"
  },
  {
    "text": "call it alright so exploit research and development you know we'll quickly talk",
    "start": "452510",
    "end": "459200"
  },
  {
    "text": "about the summary of the results and as I stated I'm in the midst of performance research so what I talk about here is in",
    "start": "459200",
    "end": "465980"
  },
  {
    "text": "no way conclusive and throughout the year I will continue to release more research and more vulnerabilities and",
    "start": "465980",
    "end": "473480"
  },
  {
    "text": "exploits for those vulnerabilities we're going to talk about the testing methodology used just really quick you",
    "start": "473480",
    "end": "480110"
  },
  {
    "text": "know scanning an enumeration how we figured out how I figured out what was running on these devices the discovery",
    "start": "480110",
    "end": "486140"
  },
  {
    "text": "of vulnerabilities and then the exploitation of said vulnerabilities and then of course we will have various",
    "start": "486140",
    "end": "492830"
  },
  {
    "text": "demos I will be performing three live demos against three storage devices one",
    "start": "492830",
    "end": "498830"
  },
  {
    "text": "against a another form of embedded electronic and then I have one video for a device that weighed in itself about 30",
    "start": "498830",
    "end": "505550"
  },
  {
    "text": "pounds so there was no way for me to bring it to this event and then we'll talk about mass exploitation so",
    "start": "505550",
    "end": "512840"
  },
  {
    "text": "preliminary results a staggering 100 percent of devices are susceptible to compromise there there wasn't one device",
    "start": "512840",
    "end": "521120"
  },
  {
    "text": "that I looked at that I literally could not take over at least fifty percent of",
    "start": "521120",
    "end": "527750"
  },
  {
    "text": "those devices can be taken over without authentication meaning that there there's some form of dedication",
    "start": "527750",
    "end": "534140"
  },
  {
    "text": "bypass or the device for whatever reason has missing function level access",
    "start": "534140",
    "end": "539270"
  },
  {
    "text": "control and you know doesn't perform authentication checks that number will grow over time but like i said i'm in",
    "start": "539270",
    "end": "546530"
  },
  {
    "text": "the middle perform our research this is a statistic i have right now currently i have 22 cve numbers assigned but new you",
    "start": "546530",
    "end": "554660"
  },
  {
    "text": "have followed the research that I put out in the past year it would I put out a 56 different vulnerabilities and Soho",
    "start": "554660",
    "end": "564710"
  },
  {
    "text": "routers and had 56 cve numbers assigned for them I can tell you these devices are going to surpass that by the end of",
    "start": "564710",
    "end": "571250"
  },
  {
    "text": "the year they're terrible okay so",
    "start": "571250",
    "end": "576560"
  },
  {
    "text": "testing methodology scanning an enumeration vulnerability discovery and then the vulnerability exploitation so",
    "start": "576560",
    "end": "583970"
  },
  {
    "text": "really quick really simple scanning an enumeration who's familiar with",
    "start": "583970",
    "end": "589690"
  },
  {
    "text": "determining what's running on the network and how you may go about doing that I using tools such as n Matt okay",
    "start": "589690",
    "end": "596270"
  },
  {
    "text": "so this is an imperative step to any assessment whether you're you know hired",
    "start": "596270",
    "end": "602060"
  },
  {
    "text": "and your on-site performing a network penetration test or you're just performing an assessment you know",
    "start": "602060",
    "end": "607100"
  },
  {
    "text": "independent research like I am presenting to you today so you would first need to understand what the device",
    "start": "607100",
    "end": "613130"
  },
  {
    "text": "is running by default and you can do that using a series of tools my favorite",
    "start": "613130",
    "end": "618770"
  },
  {
    "text": "at probably the most robust is net and map and I have n my output for actually",
    "start": "618770",
    "end": "626180"
  },
  {
    "text": "a router verizon fios actiontec in the top left and map basically will",
    "start": "626180",
    "end": "634930"
  },
  {
    "text": "determine if a port is open through various methods for both tcp and UDP if",
    "start": "634930",
    "end": "640790"
  },
  {
    "text": "a port is then open if you told it to check what service is running on the port it will attempt to fingerprint at",
    "start": "640790",
    "end": "646640"
  },
  {
    "text": "the port assuming that the data sent back from the device or standing meets",
    "start": "646640",
    "end": "652040"
  },
  {
    "text": "the internal fingerprint database of nmap it'll give you a best guess as to",
    "start": "652040",
    "end": "657500"
  },
  {
    "text": "what service is running additionally you'll want to confirm each of the",
    "start": "657500",
    "end": "663680"
  },
  {
    "text": "ports reported by nmap with another tool and a great tool for doing that is",
    "start": "663680",
    "end": "668990"
  },
  {
    "text": "netcat to where you can just basically manually connect to the port send it data and observe the response and I have",
    "start": "668990",
    "end": "676630"
  },
  {
    "text": "netcat output below on the bottom right making a get request to a web server so",
    "start": "676630",
    "end": "687290"
  },
  {
    "text": "a vulnerability discovery alright so assuming that you have this list of services you may or may not know what",
    "start": "687290",
    "end": "693740"
  },
  {
    "text": "they are you now need to investigate them so you need to look at the types of",
    "start": "693740",
    "end": "699680"
  },
  {
    "text": "services that are running like SSH SMB SNMP anything else that may be on the",
    "start": "699680",
    "end": "705950"
  },
  {
    "text": "device any you know obscure port that you may not necessarily know what it is",
    "start": "705950",
    "end": "711130"
  },
  {
    "text": "and trying to understand what it's speaking or what its purpose is if port",
    "start": "711130",
    "end": "718970"
  },
  {
    "text": "80 or 80 80 or 443 was open you basically if you determine that a port was in a web server you're going to want",
    "start": "718970",
    "end": "726290"
  },
  {
    "text": "to actually access that port and see what type of application if any is actually being served if there is a web",
    "start": "726290",
    "end": "733279"
  },
  {
    "text": "application you're going to need to analyze the web application and in order to do that you're going to need to know",
    "start": "733279",
    "end": "738410"
  },
  {
    "text": "you know simple details like okay what type of application am i dealing with is it PHP is to ask you know dotnet is it",
    "start": "738410",
    "end": "746480"
  },
  {
    "text": "Ruby on Rails you also then need to be familiar with the languages using the",
    "start": "746480",
    "end": "751790"
  },
  {
    "text": "client side obviously HTML CSS JavaScript once you've compiled this data and it's been aggregated you then",
    "start": "751790",
    "end": "759500"
  },
  {
    "text": "can actually step back and look at the whole picture and determine how you're going to move forward in your assessment",
    "start": "759500",
    "end": "765350"
  },
  {
    "text": "a source code review this is critical if",
    "start": "765350",
    "end": "771709"
  },
  {
    "text": "you're ever doing an assessment on anything any software product and you have the ability to look at source code",
    "start": "771709",
    "end": "778520"
  },
  {
    "text": "or look at poor part of source code you know like if you had header files that were available take that information you",
    "start": "778520",
    "end": "785180"
  },
  {
    "text": "need to gather as much information as possible and understand how the application is working you know in the",
    "start": "785180",
    "end": "791420"
  },
  {
    "text": "back end so I can't stress this enough source codes available get",
    "start": "791420",
    "end": "797070"
  },
  {
    "text": "you'll be amazed at the types of things that you'll find you'll essentially could you know start looking through the",
    "start": "797070",
    "end": "802710"
  },
  {
    "text": "source code realize that they perform authentication checks on 9 out of 10",
    "start": "802710",
    "end": "807990"
  },
  {
    "text": "pages but page number 10 you can access without authentication it's great and then dynamic analysis this is fuzzing",
    "start": "807990",
    "end": "815820"
  },
  {
    "text": "are you guys familiar with fuzzing yeah those things a lot of fun basically it's just sending a bunch of peculiar input",
    "start": "815820",
    "end": "823140"
  },
  {
    "text": "to an application and observing the response now you can't just do like dev you random I've redirected into an",
    "start": "823140",
    "end": "829620"
  },
  {
    "text": "application you actually have to speak its protocol and understand the underlying mechanisms of its speech so",
    "start": "829620",
    "end": "837360"
  },
  {
    "text": "to speak or style it ok so the types of vulnerabilities that I've discovered so",
    "start": "837360",
    "end": "843630"
  },
  {
    "text": "far during my research are on the screen the most prevalent would be command",
    "start": "843630",
    "end": "849150"
  },
  {
    "text": "injection most of these devices you literally can execute system commands",
    "start": "849150",
    "end": "854660"
  },
  {
    "text": "and depending on the Avenue in which you can execute them you could just take",
    "start": "854660",
    "end": "859950"
  },
  {
    "text": "over the device excuse me cross-site request forgery this was something that",
    "start": "859950",
    "end": "864990"
  },
  {
    "text": "I talked about a lot with routers basically this is a great hammer attack against web applications if you for",
    "start": "864990",
    "end": "872130"
  },
  {
    "text": "whatever reason can't access the application directly or if the application has is enforcing you know",
    "start": "872130",
    "end": "878820"
  },
  {
    "text": "authentication and authorization you can try and leverage an attack against the",
    "start": "878820",
    "end": "883890"
  },
  {
    "text": "client to you know perform some action for you information disclosure for the",
    "start": "883890",
    "end": "891300"
  },
  {
    "text": "most part this is probably a pretty benign vulnerability but the information",
    "start": "891300",
    "end": "896400"
  },
  {
    "text": "disclosed by these devices already device for that matter can normally lead to a more successful attack and",
    "start": "896400",
    "end": "903810"
  },
  {
    "text": "compromised you may gain further insight into the inner workings of the device that you're attacking you may determine",
    "start": "903810",
    "end": "910680"
  },
  {
    "text": "that there are some additional services that are running that you can't directly interface with but there's some other",
    "start": "910680",
    "end": "916440"
  },
  {
    "text": "protocol or some other port you can back doors so back doors are pretty common in",
    "start": "916440",
    "end": "923400"
  },
  {
    "text": "embedded electronics as we've discovered over the years within the past year",
    "start": "923400",
    "end": "928980"
  },
  {
    "text": "there's been several published from various manufacturers and routers and they're definitely our backdoors and",
    "start": "928980",
    "end": "935850"
  },
  {
    "text": "these devices as well which we will briefly discuss poor session management",
    "start": "935850",
    "end": "942050"
  },
  {
    "text": "deterministic cookie generation so I'll show here that there is one device that",
    "start": "942050",
    "end": "947640"
  },
  {
    "text": "actually has a 16-byte cookie but that cookie is generated in a way that is",
    "start": "947640",
    "end": "953339"
  },
  {
    "text": "ultimately deterministic and by looking at various cookies and determining the",
    "start": "953339",
    "end": "960300"
  },
  {
    "text": "pattern of the cookies and using some reverse engineering we're able to do develop attack that can determine a",
    "start": "960300",
    "end": "966990"
  },
  {
    "text": "currently active cookie and then directory traversal so here's another",
    "start": "966990",
    "end": "972779"
  },
  {
    "text": "common one among these devices I mean these devices are here to share and facilitate access to data so it doesn't",
    "start": "972779",
    "end": "980970"
  },
  {
    "text": "surprise me that there are tons of directory traversal vulnerabilities and with these vulnerabilities I've",
    "start": "980970",
    "end": "986400"
  },
  {
    "text": "demonstrated that an attacker would have the ability to upload files to arbitrary locations in the file system or download",
    "start": "986400",
    "end": "993120"
  },
  {
    "text": "them that means getting sensitive configuration files that may contain passwords that means putting your web",
    "start": "993120",
    "end": "998279"
  },
  {
    "text": "show you know are some executable of on the device and then having the device executed we won't be I won't be",
    "start": "998279",
    "end": "1006290"
  },
  {
    "text": "demonstrating any of those today but in the coming weeks or months I will definitely put out some exploits for",
    "start": "1006290",
    "end": "1014000"
  },
  {
    "text": "these types of vulnerabilities that I found so a one back door that will talk",
    "start": "1014000",
    "end": "1019880"
  },
  {
    "text": "about today is a backdoor account that was found in the Seagate device which I",
    "start": "1019880",
    "end": "1027380"
  },
  {
    "text": "don't have here but once I compromise the device through command injection we",
    "start": "1027380",
    "end": "1033410"
  },
  {
    "text": "were running as root as you can see there was an undocumented account here and if you've noticed within this file",
    "start": "1033410",
    "end": "1040428"
  },
  {
    "text": "the encryption use for the password is the old des crypt so this account you",
    "start": "1040429",
    "end": "1046910"
  },
  {
    "text": "could crack the password and then gain access to the device yeah like this is",
    "start": "1046910",
    "end": "1053960"
  },
  {
    "text": "some nasty stuff and the account is in some form of leet speak if any of you guys have any idea what they're trying",
    "start": "1053960",
    "end": "1060620"
  },
  {
    "text": "to say and the leet speak please tell me I've been trying to figure it out for a while now it's been a heavy conversation around",
    "start": "1060620",
    "end": "1067850"
  },
  {
    "text": "the office okay so your support session management vulnerability that I was",
    "start": "1067850",
    "end": "1074330"
  },
  {
    "text": "talking about there's actually quite a few really in hindsight the session",
    "start": "1074330",
    "end": "1080270"
  },
  {
    "text": "management used by this shoe store device is stronger than some of the others which I'll talk about later but",
    "start": "1080270",
    "end": "1085400"
  },
  {
    "text": "this is definitely a large vulnerability so on the left and the black terminal",
    "start": "1085400",
    "end": "1092030"
  },
  {
    "text": "you'll see various cookies and I've highlighted a couple of bites of the cookie and as you can see they are",
    "start": "1092030",
    "end": "1097940"
  },
  {
    "text": "pretty repetitive using burp I was I",
    "start": "1097940",
    "end": "1103310"
  },
  {
    "text": "used its built-in sequencer tool to look at the effective entropy pool and try",
    "start": "1103310",
    "end": "1109220"
  },
  {
    "text": "and determine what character set these cookies were using and how often those characters change and verb estimates",
    "start": "1109220",
    "end": "1116750"
  },
  {
    "text": "that it's effective entropy is around 2 bits which is very poor so as you can",
    "start": "1116750",
    "end": "1123650"
  },
  {
    "text": "see here we have 16 characters and characters 0 through 13 are have very",
    "start": "1123650",
    "end": "1134210"
  },
  {
    "text": "poor entropy meaning they're there they're pretty much static or they change very seldomly but the last two",
    "start": "1134210",
    "end": "1140030"
  },
  {
    "text": "character has changed frequently well if you think about how random values can be generated if you were thinking about",
    "start": "1140030",
    "end": "1145790"
  },
  {
    "text": "like I don't know let's say Rand or s Rand and see and how you might see that a very bad pool of entropy it would be",
    "start": "1145790",
    "end": "1153110"
  },
  {
    "text": "to use the current time time is sequential and you can determine every",
    "start": "1153110",
    "end": "1159350"
  },
  {
    "text": "subsequent part of time which as you can see here on the last two parts that are",
    "start": "1159350",
    "end": "1164870"
  },
  {
    "text": "changing so it's very plausible that they were using time generate this cookie which we show here so here's some",
    "start": "1164870",
    "end": "1172610"
  },
  {
    "text": "very simple C code all we're doing here is declaring a struct time of type time",
    "start": "1172610",
    "end": "1180920"
  },
  {
    "text": "bell and this is going to we're going to use this to get access to the current time since epoch we're then calling get",
    "start": "1180920",
    "end": "1189080"
  },
  {
    "text": "time of day with the address of the struct and that not worrying about any of the times down specific stuff hence",
    "start": "1189080",
    "end": "1195440"
  },
  {
    "text": "the second argument no we're then going to print this seconds and the microseconds so if you",
    "start": "1195440",
    "end": "1200559"
  },
  {
    "text": "guys remember from up here the first bites being five 3df once we run that",
    "start": "1200559",
    "end": "1207129"
  },
  {
    "text": "code we compile it which means to see we run it the seconds the first part of it is 53 DF so already with this",
    "start": "1207129",
    "end": "1215379"
  },
  {
    "text": "information we know that they're creating these cookies based off of time so further analysis in this device it's",
    "start": "1215379",
    "end": "1222610"
  },
  {
    "text": "a sister device tells us that sessions will only last up to 60 minutes meaning",
    "start": "1222610",
    "end": "1227860"
  },
  {
    "text": "that from any point if we can determine cookies if we can determine all the cookies you know within 60 minutes",
    "start": "1227860",
    "end": "1233950"
  },
  {
    "text": "there's a very high probability that we could guess the currently active session and then assume control of the device",
    "start": "1233950",
    "end": "1240519"
  },
  {
    "text": "you know just by essentially brute-forcing cookies so this is a severe vulnerability all right so I",
    "start": "1240519",
    "end": "1249580"
  },
  {
    "text": "guess now we'll get into some of the exploitation details what we'll talk about specific vulnerabilities command",
    "start": "1249580",
    "end": "1257110"
  },
  {
    "text": "injection cross-site request forgery missing function level access control and those types of issues are normally",
    "start": "1257110",
    "end": "1264279"
  },
  {
    "text": "authentication bypasses or failure to perform authorization checks and then a stack-based buffer overflow yeah so",
    "start": "1264279",
    "end": "1275590"
  },
  {
    "text": "command injection without reading the my definition on the slides who's familiar",
    "start": "1275590",
    "end": "1283240"
  },
  {
    "text": "with command injection like who's actually exploited it you know or as you know worked with some form of command",
    "start": "1283240",
    "end": "1289210"
  },
  {
    "text": "injection a couple of you okay so as my slide says command injection is a type",
    "start": "1289210",
    "end": "1295570"
  },
  {
    "text": "of vulnerability that allows a an attacker or an adversarial user to take",
    "start": "1295570",
    "end": "1301330"
  },
  {
    "text": "operating specific commands operating system specific commands and inject them",
    "start": "1301330",
    "end": "1306549"
  },
  {
    "text": "into the application and this is achieved by the application taking the input from the user they then don't",
    "start": "1306549",
    "end": "1314529"
  },
  {
    "text": "perform any sanitization or validation of set input they put it right into a",
    "start": "1314529",
    "end": "1320799"
  },
  {
    "text": "call to like system or exec and it gets executed by a shell interpreter and if",
    "start": "1320799",
    "end": "1329409"
  },
  {
    "text": "you for whatever reason are able to inject you know she'll metacharacters such as back ticks or dollar signs parenthesis",
    "start": "1329409",
    "end": "1337600"
  },
  {
    "text": "anything that you know will perform standard command substitution or chain commands together ampersand semicolons",
    "start": "1337600",
    "end": "1343480"
  },
  {
    "text": "you would then have the ability to escape the confinement of that current currently executing command and execute",
    "start": "1343480",
    "end": "1350470"
  },
  {
    "text": "a command of your choice this can be very severe or is a very severe neck can't that's not can so really quick",
    "start": "1350470",
    "end": "1358919"
  },
  {
    "text": "developers because I know there's probably some developers out here who develop secure software or try if you're",
    "start": "1358919",
    "end": "1365649"
  },
  {
    "text": "if you're whatever reason you need to interface with the operating system you should try to avoid calling shell",
    "start": "1365649",
    "end": "1374649"
  },
  {
    "text": "commands and to do that you can basically either roll your own which I",
    "start": "1374649",
    "end": "1379659"
  },
  {
    "text": "don't recommend or use a library that contains the functionality you're trying to achieve an example that I like to use",
    "start": "1379659",
    "end": "1387610"
  },
  {
    "text": "that I used last year my talk about routers was getting the current",
    "start": "1387610",
    "end": "1392919"
  },
  {
    "text": "directory listing of a directory and if for whatever reason a developer chose to",
    "start": "1392919",
    "end": "1399899"
  },
  {
    "text": "call system and then LS and then a variable that's controlled by the user",
    "start": "1399899",
    "end": "1405399"
  },
  {
    "text": "they could execute arbitrary commands but a safe way to do that would be to call the Lister method that's available",
    "start": "1405399",
    "end": "1414309"
  },
  {
    "text": "in the oos module and that will essentially only list the contents of a",
    "start": "1414309",
    "end": "1420250"
  },
  {
    "text": "directory specified by the argument and you don't have the ability to execute commands because they're handling it in",
    "start": "1420250",
    "end": "1426879"
  },
  {
    "text": "a safe way across that request forgery like I said this is kind of a a staple",
    "start": "1426879",
    "end": "1434200"
  },
  {
    "text": "attack it's like a hammer go-getter and essentially this is an attack that",
    "start": "1434200",
    "end": "1440519"
  },
  {
    "text": "tricks a unsuspecting user into performing an action of the attackers",
    "start": "1440519",
    "end": "1446620"
  },
  {
    "text": "choosing and this is done by against web applications and is performed by a an",
    "start": "1446620",
    "end": "1453009"
  },
  {
    "text": "attacker hosting malicious code on an attacker controlled web server that e then tricks the user into visiting or",
    "start": "1453009",
    "end": "1459129"
  },
  {
    "text": "compromising some other website and then somehow having the victim visit that website and what",
    "start": "1459129",
    "end": "1464900"
  },
  {
    "text": "happens is the victim visits the malicious website malicious code is then",
    "start": "1464900",
    "end": "1470840"
  },
  {
    "text": "returned to the browser of the victim and that code is then rendered in the",
    "start": "1470840",
    "end": "1476870"
  },
  {
    "text": "browser and and then a request is sent to the web application server and any",
    "start": "1476870",
    "end": "1484010"
  },
  {
    "text": "authenticated session information whether it be a cookie or HTTP basic",
    "start": "1484010",
    "end": "1489770"
  },
  {
    "text": "basic auth will be forwarded to that server and if the end user has permission to carry out the request then",
    "start": "1489770",
    "end": "1497720"
  },
  {
    "text": "it's going to happen and the attacker wins so some countermeasures for",
    "start": "1497720",
    "end": "1503690"
  },
  {
    "text": "cross-site request forgery log out of web applications when you're done doing whatever you're doing with its banking",
    "start": "1503690",
    "end": "1509780"
  },
  {
    "text": "email whatever log out if they if the",
    "start": "1509780",
    "end": "1514910"
  },
  {
    "text": "developers implemented session management correctly when you click the logout you're currently authenticated",
    "start": "1514910",
    "end": "1520280"
  },
  {
    "text": "session cookie should be invalidated meaning you should no longer be able to use it to access the page of course",
    "start": "1520280",
    "end": "1526430"
  },
  {
    "text": "there is the chance that they you know did this wrong and you could still reuse that cookie and do not save credentials",
    "start": "1526430",
    "end": "1532700"
  },
  {
    "text": "in your browser something I should know is if application is using basic",
    "start": "1532700",
    "end": "1537830"
  },
  {
    "text": "authentication just logging out doesn't get rid of that information you actually need to clear clear the cache and",
    "start": "1537830",
    "end": "1546650"
  },
  {
    "text": "history and all those settings within your browser to actually have it remove those cached credentials otherwise an",
    "start": "1546650",
    "end": "1555380"
  },
  {
    "text": "attacker will be able to leverage the fact that they still exist in your browser ok and then developers implement",
    "start": "1555380",
    "end": "1563150"
  },
  {
    "text": "anti-sea SERP tokens and essentially all these are our is a secret nonce that an",
    "start": "1563150",
    "end": "1568310"
  },
  {
    "text": "attacker has it is unknown to the attacker and they're included in as a",
    "start": "1568310",
    "end": "1573980"
  },
  {
    "text": "hidden form value in a form both the name and the value are random so there's",
    "start": "1573980",
    "end": "1579170"
  },
  {
    "text": "two values that an attacker is unaware of and those values are then validated",
    "start": "1579170",
    "end": "1584360"
  },
  {
    "text": "on the server once a request is sent and then HTTP refer checking essentially",
    "start": "1584360",
    "end": "1590540"
  },
  {
    "text": "what this does is checks the refer of the request coming from a client",
    "start": "1590540",
    "end": "1597480"
  },
  {
    "text": "if that refer is outside of the origin of the current application it'll deny",
    "start": "1597480",
    "end": "1603120"
  },
  {
    "text": "the request now in the past yeah there have been ways to bypass this you were able to use things such as Adobe Flash",
    "start": "1603120",
    "end": "1610440"
  },
  {
    "text": "and two or I guess even Silverlight to basically forge the referer header but",
    "start": "1610440",
    "end": "1618390"
  },
  {
    "text": "for a couple of years now that hasn't been possible because the referer header is now on a disallowed list of headers",
    "start": "1618390",
    "end": "1627090"
  },
  {
    "text": "that can be modified and then if you're feeling ambitious have the end user real",
    "start": "1627090",
    "end": "1632130"
  },
  {
    "text": "authentic cape before performing any action that performs a state change all",
    "start": "1632130",
    "end": "1640260"
  },
  {
    "text": "right sorry guys I'm getting over a cold I apologize the next thing we're going",
    "start": "1640260",
    "end": "1645480"
  },
  {
    "text": "to talk about here is missing function level access control so this picture pretty much explains it you have a road",
    "start": "1645480",
    "end": "1652919"
  },
  {
    "text": "with the gate but people just kind of go around the gate like who cares I don't care and basically this one er ability",
    "start": "1652919",
    "end": "1659460"
  },
  {
    "text": "is just the absence of server-side authentication and authorization checks meaning that you may be able to access",
    "start": "1659460",
    "end": "1665640"
  },
  {
    "text": "restricted content with that authentication or maybe you're authenticated but let's say as a a",
    "start": "1665640",
    "end": "1673590"
  },
  {
    "text": "regular user a que a non administrative user but that regular user then has the",
    "start": "1673590",
    "end": "1678900"
  },
  {
    "text": "ability to call the rest api that may be used by the admin user and carry out",
    "start": "1678900",
    "end": "1684770"
  },
  {
    "text": "administrative functions again that could be detrimental to the integrity of",
    "start": "1684770",
    "end": "1690120"
  },
  {
    "text": "the application so really the biggest thing here for countermeasures is to",
    "start": "1690120",
    "end": "1697590"
  },
  {
    "text": "perform these checks any any action that is sensitive within the source code you",
    "start": "1697590",
    "end": "1704910"
  },
  {
    "text": "should be checking to see if the user currently logged in user has permission to access it or perform it and if they",
    "start": "1704910",
    "end": "1711570"
  },
  {
    "text": "do allow them to do it pretty straightforward all right buffer",
    "start": "1711570",
    "end": "1719190"
  },
  {
    "text": "overflow so this is my favorite type of vulnerability I love memory corruption vulnerabilities like every time I find",
    "start": "1719190",
    "end": "1725669"
  },
  {
    "text": "one and it looks like it's going to be exploitable I get giddy like a little girl no that's it's it's amazing and these",
    "start": "1725669",
    "end": "1733940"
  },
  {
    "text": "vulnerabilities essentially are catastrophic in the sense that they will",
    "start": "1733940",
    "end": "1741860"
  },
  {
    "text": "allow you to execute any code that you want you can call directly into the operating system it's it's phenomenal",
    "start": "1741860",
    "end": "1746930"
  },
  {
    "text": "and they happen because excuse me",
    "start": "1746930",
    "end": "1751990"
  },
  {
    "text": "developers will trust the input supplied by the application which essentially was",
    "start": "1751990",
    "end": "1757870"
  },
  {
    "text": "supplied by the end user and then they take that input and they copy it into a",
    "start": "1757870",
    "end": "1763760"
  },
  {
    "text": "I fixed size buffer and if you can copy more into that buffer than what was",
    "start": "1763760",
    "end": "1770120"
  },
  {
    "text": "allocated you're going to corrupt adjacent memory and by virtue of how applications work how membrane CPUs",
    "start": "1770120",
    "end": "1778220"
  },
  {
    "text": "execute instructions blah blah you'll overwrite sensitive values and data structures and ultimately influence the",
    "start": "1778220",
    "end": "1786580"
  },
  {
    "text": "execution flow of the program so here I just have a screenshot of a our",
    "start": "1786580",
    "end": "1792920"
  },
  {
    "text": "vulnerability that I'm debugging and as",
    "start": "1792920",
    "end": "1798410"
  },
  {
    "text": "you can see we had a cig sec b which is a segmentation fault and 44 44 44 44",
    "start": "1798410",
    "end": "1804590"
  },
  {
    "text": "that's four DS so we are essentially able to control program counter which an",
    "start": "1804590",
    "end": "1809780"
  },
  {
    "text": "arm is equivalent to you eip and x86 and this will now allow us to alter the flow",
    "start": "1809780",
    "end": "1817400"
  },
  {
    "text": "of the program and go where we want memory execute what we want so it's great stuff so countermeasures",
    "start": "1817400",
    "end": "1828310"
  },
  {
    "text": "developers don't use unsafe functions so if you're developing and see you really",
    "start": "1828310",
    "end": "1833390"
  },
  {
    "text": "have to worry about this if you're developing in Java you don't have to worry about this but if you are let's",
    "start": "1833390",
    "end": "1838400"
  },
  {
    "text": "say using Jay and I to whether it is native code or various C code you should",
    "start": "1838400",
    "end": "1844460"
  },
  {
    "text": "have worried about those underlying libraries or even the virtual machine that is running your interpreted",
    "start": "1844460",
    "end": "1850550"
  },
  {
    "text": "language perform bounds checking bounds checking is the action of checking the",
    "start": "1850550",
    "end": "1856970"
  },
  {
    "text": "length of the input that was sent by the user before copying it to a location",
    "start": "1856970",
    "end": "1863140"
  },
  {
    "text": "Murray this effectively will eliminate buffer overflows in the sense that",
    "start": "1863140",
    "end": "1868150"
  },
  {
    "text": "you're always going to copy just the right amount of bytes to fill that buffer and no more and then some",
    "start": "1868150",
    "end": "1877300"
  },
  {
    "text": "mitigations that can be used like a defense-in-depth our compile and linking",
    "start": "1877300",
    "end": "1884020"
  },
  {
    "text": "protections and you should definitely perform these things such as like canary",
    "start": "1884020",
    "end": "1890260"
  },
  {
    "text": "and stack cookies and what that does here is basically any string bass function it'll take a value that's in",
    "start": "1890260",
    "end": "1900520"
  },
  {
    "text": "the dot data section of memory and put it into the the prologue and this value",
    "start": "1900520",
    "end": "1906160"
  },
  {
    "text": "will eventually be pushed on the stack and if it's corrupted the program will",
    "start": "1906160",
    "end": "1913000"
  },
  {
    "text": "terminate and that value is checked in the epilogue of the function so if you overflowed the stack and you over wrote",
    "start": "1913000",
    "end": "1921220"
  },
  {
    "text": "this value once the function got to the epilogue and perform this check it's going to crash because the value state",
    "start": "1921220",
    "end": "1927160"
  },
  {
    "text": "has been altered aslr which is address space layout randomization it's",
    "start": "1927160",
    "end": "1933550"
  },
  {
    "text": "essentially making your code position independent and what's that what's that what that is doing is basically saying",
    "start": "1933550",
    "end": "1940390"
  },
  {
    "text": "hey this program can run anywhere memory and that's achieved by basically calculate the calculation of offsets in",
    "start": "1940390",
    "end": "1948220"
  },
  {
    "text": "memory so no matter what the address is where you want to go in memory is always going to be at a specific offset so it's",
    "start": "1948220",
    "end": "1956320"
  },
  {
    "text": "okay for the addresses to change because you know that your code that you want to execute will be at set off set and then",
    "start": "1956320",
    "end": "1964720"
  },
  {
    "text": "depth / n X which is non excuse stack by default GCC you compile a program this",
    "start": "1964720",
    "end": "1972040"
  },
  {
    "text": "stack is not executable meaning that if shellcode or some code was placing the stack and then you jump to it you will",
    "start": "1972040",
    "end": "1978640"
  },
  {
    "text": "not be able to execute it'll cause a an error and the program will essentially crash now if there are other types of",
    "start": "1978640",
    "end": "1987100"
  },
  {
    "text": "vulnerabilities or regions within memory that are not marked executable or you're able to use like Rob you could call",
    "start": "1987100",
    "end": "1994270"
  },
  {
    "text": "functions such as M protect to mark a region within memory as executable again so it is possible to bypass these types",
    "start": "1994270",
    "end": "2001590"
  },
  {
    "text": "of restrictions same with a SLR but we're not going to talk about that today so the first case study that will talk",
    "start": "2001590",
    "end": "2008520"
  },
  {
    "text": "about with demonstration is d-link the model dns 345 as i said and we are going",
    "start": "2008520",
    "end": "2016590"
  },
  {
    "text": "to exploit to vulnerabilities a command injection and authentication bypass if you recall authentication bypass was a",
    "start": "2016590",
    "end": "2023850"
  },
  {
    "text": "subset of the missing function level access control so what we're able to do here is basically take AC program that i",
    "start": "2023850",
    "end": "2030480"
  },
  {
    "text": "wrote and point at this d-link device and become root gain a root shell",
    "start": "2030480",
    "end": "2036560"
  },
  {
    "text": "something that was kind of neat about this vulnerability however this exploit I guess was the fact that there was no",
    "start": "2036560",
    "end": "2044580"
  },
  {
    "text": "interactive shell meaning that if we executed let's say tell MIT or netcat",
    "start": "2044580",
    "end": "2052440"
  },
  {
    "text": "and we wanted to have the argument program be like bin slash we were unable",
    "start": "2052440",
    "end": "2061200"
  },
  {
    "text": "to do so the the device had a underlying shell that would interpret opera",
    "start": "2061200",
    "end": "2066889"
  },
  {
    "text": "operating system commands if the web application or the device the nest",
    "start": "2066890",
    "end": "2072060"
  },
  {
    "text": "device told it to do so but if we try to interact with the interactively it",
    "start": "2072060",
    "end": "2077580"
  },
  {
    "text": "wouldn't work it would essentially just hang well so if I have the ability to execute commands how am I going to you",
    "start": "2077580",
    "end": "2084990"
  },
  {
    "text": "know have an interactive show remotely the answer to that is shell scripts so",
    "start": "2084990",
    "end": "2090870"
  },
  {
    "text": "read read it's very great takes data from a file descriptor and puts it into a variable if you have data in a",
    "start": "2090870",
    "end": "2097320"
  },
  {
    "text": "variable that was coming from let's say standard in which is what you're going to file descriptor you're going to be",
    "start": "2097320",
    "end": "2102450"
  },
  {
    "text": "sending data into if you're at a terminal and then executing lat with the",
    "start": "2102450",
    "end": "2107910"
  },
  {
    "text": "shell interpreter you essentially have a shell right yeah absolutely so that's what we're going to be doing here oops",
    "start": "2107910",
    "end": "2114810"
  },
  {
    "text": "so now i'm going to go over to ah my virtual machine and so we will own this",
    "start": "2114810",
    "end": "2123710"
  },
  {
    "text": "netgear device so really quick I need to just determine the IP address let's go",
    "start": "2123710",
    "end": "2129520"
  },
  {
    "text": "always forget it one dot 34 it's a pain",
    "start": "2129520",
    "end": "2136420"
  },
  {
    "text": "when I to 168 1 234 we're golden great so we'll go over some of the source code",
    "start": "2136420",
    "end": "2142570"
  },
  {
    "text": "really quick oops not a binary can you",
    "start": "2142570",
    "end": "2148330"
  },
  {
    "text": "guys read that Oh cares and you'd be a little bit bigger all right I'm going to assume it's okay no complaints okay so",
    "start": "2148330",
    "end": "2157560"
  },
  {
    "text": "essentially what we're doing here we have all our function declarations we're",
    "start": "2157560",
    "end": "2164080"
  },
  {
    "text": "really going to be making a web request to the web server to this page system on",
    "start": "2164080",
    "end": "2170530"
  },
  {
    "text": "a score mg r dot CGI and within this variable this HTML HTTP parameter",
    "start": "2170530",
    "end": "2179020"
  },
  {
    "text": "underscore sundar we're going to execute a series of commands well we're going to",
    "start": "2179020",
    "end": "2184630"
  },
  {
    "text": "make a couple of requests to basically create the shell script on the fly and",
    "start": "2184630",
    "end": "2189970"
  },
  {
    "text": "then pass it to telnet d you tell matt diaz the login program so when we login",
    "start": "2189970",
    "end": "2195790"
  },
  {
    "text": "our shell script will then be executed and upon execution will be able to supply data to standard input which is",
    "start": "2195790",
    "end": "2202600"
  },
  {
    "text": "what r e is waiting for that will then be stored in CMD and then we are going",
    "start": "2202600",
    "end": "2210460"
  },
  {
    "text": "to execute it with show with us age so",
    "start": "2210460",
    "end": "2216250"
  },
  {
    "text": "we have our post request here which is going to send this to the router or to",
    "start": "2216250",
    "end": "2222190"
  },
  {
    "text": "the nass device with the post data that I showed you up here and for each",
    "start": "2222190",
    "end": "2229450"
  },
  {
    "text": "request we are going to send one command so as you can see here we're just",
    "start": "2229450",
    "end": "2237300"
  },
  {
    "text": "creating our socket and connecting to the device and using all of our fancy",
    "start": "2237300",
    "end": "2243360"
  },
  {
    "text": "cumbersome see to create these various web requests and once once we're done we",
    "start": "2243360",
    "end": "2253120"
  },
  {
    "text": "are going to connect to the root shell so we're here we're going to call system",
    "start": "2253120",
    "end": "2262560"
  },
  {
    "text": "check the show and show up was at the top and all it is is tell Matt and then",
    "start": "2262560",
    "end": "2269930"
  },
  {
    "text": "the argument which is going to be the IP address that we provide it on the command line so if we come over here and",
    "start": "2269930",
    "end": "2278850"
  },
  {
    "text": "we run this puppy it's going to ask us for the IP address in the port well we determine that that was 192 168 34 and",
    "start": "2278850",
    "end": "2287150"
  },
  {
    "text": "just to confirm we are on port 80 so when I go back over here to 80 actually",
    "start": "2287150",
    "end": "2295680"
  },
  {
    "text": "right before we send this let me just show you that we can't tell them that to",
    "start": "2295680",
    "end": "2302460"
  },
  {
    "text": "the device one or two and 680 134 oops 34c connection refused so we're going to",
    "start": "2302460",
    "end": "2312510"
  },
  {
    "text": "send a couple of requests now we're creating that shell script now then",
    "start": "2312510",
    "end": "2319710"
  },
  {
    "text": "we're connected to show we're dropped in the show and as you can see you ID root so sending for request I allowed us to",
    "start": "2319710",
    "end": "2327480"
  },
  {
    "text": "become root on this device so now we essentially own this device anything that's on it whatever we want to do it's",
    "start": "2327480",
    "end": "2332880"
  },
  {
    "text": "ours so just because you have various",
    "start": "2332880",
    "end": "2339120"
  },
  {
    "text": "restrictions and the types of software that's provided on these embedded devices does it mean that you can't",
    "start": "2339120",
    "end": "2345510"
  },
  {
    "text": "leverage a vulnerability into performing a full compromise it just means you have to as people like to say think outside",
    "start": "2345510",
    "end": "2352170"
  },
  {
    "text": "the box really any time somebody says that to me I always like to ask well how big is the box so yeah we're going to",
    "start": "2352170",
    "end": "2360900"
  },
  {
    "text": "move on to our next case study now and this is the netgear and it's this device",
    "start": "2360900",
    "end": "2365970"
  },
  {
    "text": "right here we just exploited this d-link doesn't really matter this netgear is a",
    "start": "2365970",
    "end": "2372300"
  },
  {
    "text": "readiness within the past year I believe somebody from tripwire found an",
    "start": "2372300",
    "end": "2379160"
  },
  {
    "text": "unauthenticated command injection vulnerability and the login page with the password reset page well netgear",
    "start": "2379160",
    "end": "2384810"
  },
  {
    "text": "actually passed this vulnerability but like the idiots that they are no offense",
    "start": "2384810",
    "end": "2390330"
  },
  {
    "text": "neck here if anybody works at netgear in the audience they basically fixed the",
    "start": "2390330",
    "end": "2396000"
  },
  {
    "text": "one ability but they failed to audit the rest of their source code and little did you know there are a handful more of",
    "start": "2396000",
    "end": "2402029"
  },
  {
    "text": "command injection vulnerabilities ridiculous at this moment of time I",
    "start": "2402029",
    "end": "2408089"
  },
  {
    "text": "don't have an authentication bypass for it but this device is susceptible to cross-site request forgery so basically",
    "start": "2408089",
    "end": "2414539"
  },
  {
    "text": "I'm going to demonstrate how an attacker can can leverage cross-site request",
    "start": "2414539",
    "end": "2420480"
  },
  {
    "text": "forgery to execute commands in the system and I'm going to launch this from",
    "start": "2420480",
    "end": "2427049"
  },
  {
    "text": "my browser so it's basically just simulating the attack we're not actually going to be on separate network segments",
    "start": "2427049",
    "end": "2433309"
  },
  {
    "text": "and what this will do is open up an HTML file the code will load and it's going",
    "start": "2433309",
    "end": "2439650"
  },
  {
    "text": "to submit a bunch of XML to the one on the netgear device and execute a command we will then receive a reverse shell on",
    "start": "2439650",
    "end": "2448049"
  },
  {
    "text": "a port that we are listening on now cross-site request forgery is",
    "start": "2448049",
    "end": "2453299"
  },
  {
    "text": "essentially pretty easy to develop an exploit for and the simplest of cases",
    "start": "2453299",
    "end": "2460829"
  },
  {
    "text": "you're essentially just calling the REST API so you're basically forging an HTML",
    "start": "2460829",
    "end": "2465960"
  },
  {
    "text": "form that would be on the application it becomes more tricky if you start having to deal with things like XML or JSON",
    "start": "2465960",
    "end": "2474059"
  },
  {
    "text": "data X you have to start worrying about specific content types and XML you",
    "start": "2474059",
    "end": "2479430"
  },
  {
    "text": "actually have to format the form values differently so you have to look at look",
    "start": "2479430",
    "end": "2485250"
  },
  {
    "text": "for specific delimiting characters within the XML see how you can put them within the form and then make sure that",
    "start": "2485250",
    "end": "2492089"
  },
  {
    "text": "the request that gets sent by the victims browser is a properly well formatted XML request and I'll and I'll",
    "start": "2492089",
    "end": "2498990"
  },
  {
    "text": "briefly discuss that when I pull up the source code here so the only challenge",
    "start": "2498990",
    "end": "2504150"
  },
  {
    "text": "here is tricking an unsuspecting user into viewing your code and we've discussed a few ways in which you could",
    "start": "2504150",
    "end": "2510390"
  },
  {
    "text": "do that sending them a link getting them to go browse to your web server where your code is hosted at that point they",
    "start": "2510390",
    "end": "2516480"
  },
  {
    "text": "would be owned if they were logged in this device is using basic authentication so there are no session",
    "start": "2516480",
    "end": "2522720"
  },
  {
    "text": "cookies the authentication value is the user name colon password base64 and then",
    "start": "2522720",
    "end": "2529019"
  },
  {
    "text": "put to a verizon header in the HTTP request so let's go let's go on this device all",
    "start": "2529019",
    "end": "2540610"
  },
  {
    "text": "right okay so first of all we will look",
    "start": "2540610",
    "end": "2548050"
  },
  {
    "text": "at the code here so this is a big blob and it essentially as XML data make it a",
    "start": "2548050",
    "end": "2555490"
  },
  {
    "text": "little bit bigger so you guys you can see and literally all we have just an",
    "start": "2555490",
    "end": "2561100"
  },
  {
    "text": "HTML document but what's really important here is the form and then the",
    "start": "2561100",
    "end": "2566440"
  },
  {
    "text": "script so first we'll talk about the form which is just going to send I request to DB broker over HTTPS which",
    "start": "2566440",
    "end": "2574930"
  },
  {
    "text": "this is the only device that I've looked at that enforces HTTPS so while I was hating on netgear I'm also going to give",
    "start": "2574930",
    "end": "2580690"
  },
  {
    "text": "them props at the same time I mean that's that's outstanding it's very shocking but anyways back to you the XML",
    "start": "2580690",
    "end": "2588640"
  },
  {
    "text": "blob so remember what I was saying about having a well formatted XML request so",
    "start": "2588640",
    "end": "2594010"
  },
  {
    "text": "you within a form you have a couple of things the type the name and the value of the form the name could be like XML",
    "start": "2594010",
    "end": "2601060"
  },
  {
    "text": "data and the value could be the entire XML blob but the problem is is when that's submitted to the server it's",
    "start": "2601060",
    "end": "2607180"
  },
  {
    "text": "going to be it won't be well-formed there'll be some extra unnecessary characters that were created and put",
    "start": "2607180",
    "end": "2613360"
  },
  {
    "text": "there by the HTML form so you actually have to break these break the request up",
    "start": "2613360",
    "end": "2620850"
  },
  {
    "text": "the extra character would be an equal sign so you have to break the XML data up on a deliberating character where",
    "start": "2620850",
    "end": "2627910"
  },
  {
    "text": "there's an equal sign and you can do that under the xml version so as you see",
    "start": "2627910",
    "end": "2633490"
  },
  {
    "text": "here we have name xml version there is no equal sign why because when a form is",
    "start": "2633490",
    "end": "2639310"
  },
  {
    "text": "submitted you'll have the value of the form value and there the name of the",
    "start": "2639310",
    "end": "2644530"
  },
  {
    "text": "form value equals and the value so when that is concatenated with the rest of the XML blob we will have a well-formed",
    "start": "2644530",
    "end": "2651280"
  },
  {
    "text": "piece of XML so let's that's a neat little trick so we have xml version and",
    "start": "2651280",
    "end": "2656530"
  },
  {
    "text": "then value 1 point 0 and we're extending this blob you see my email address in there",
    "start": "2656530",
    "end": "2661970"
  },
  {
    "text": "but right here under server we have a",
    "start": "2661970",
    "end": "2667040"
  },
  {
    "text": "command that we're executing and we are basically going to execute netcat connect back to us on port 3 1337 and",
    "start": "2667040",
    "end": "2674810"
  },
  {
    "text": "upon doing so we are going to execute bend / uh so with that said a couple of",
    "start": "2674810",
    "end": "2682640"
  },
  {
    "text": "things here first of all we are going to actually I'll just exit out of this we will exit out of the code yeah we will",
    "start": "2682640",
    "end": "2689180"
  },
  {
    "text": "do neck cat listen verbose Leon port 3 1 through 37 before we do that let me just",
    "start": "2689180",
    "end": "2694310"
  },
  {
    "text": "show you my IP address okay as you can",
    "start": "2694310",
    "end": "2700430"
  },
  {
    "text": "see one dot 77 so nut cat listen we're",
    "start": "2700430",
    "end": "2706760"
  },
  {
    "text": "bhosle on port three 1337 my voice is starting to go crap okay we will come",
    "start": "2706760",
    "end": "2714619"
  },
  {
    "text": "over to our browser now and I believe my web server is running which it is so we",
    "start": "2714619",
    "end": "2721580"
  },
  {
    "text": "have that readiness that HTML file before we click on this this is going to",
    "start": "2721580",
    "end": "2727250"
  },
  {
    "text": "simulate the cross-site request forgery attack we're basically going to request from the malicious attacker web server",
    "start": "2727250",
    "end": "2732589"
  },
  {
    "text": "the HTML code comes down to the browser the JavaScript and the script tags will submit that form that I showed with the",
    "start": "2732589",
    "end": "2739339"
  },
  {
    "text": "XML blob to the d-link device the d-link device will then process it and we will execute commands but in order to do that",
    "start": "2739339",
    "end": "2746660"
  },
  {
    "text": "we need to be authenticated so let's ensure that we are uneducated which it",
    "start": "2746660",
    "end": "2752839"
  },
  {
    "text": "appears we are not so we'll click through the certificate warning and we",
    "start": "2752839",
    "end": "2759080"
  },
  {
    "text": "will now authenticate to the device",
    "start": "2759080",
    "end": "2762339"
  },
  {
    "text": "just to make sure all right so we're educated we're fine and dandy wait where",
    "start": "2767290",
    "end": "2773750"
  },
  {
    "text": "to go we do have our listener 3 1 through 37 so I guess let's just let's",
    "start": "2773750",
    "end": "2781190"
  },
  {
    "text": "just make this window smaller so you can see it it should come in at the bottom so we're going to click this and as you",
    "start": "2781190",
    "end": "2787940"
  },
  {
    "text": "can see we received a connection from the netgear well well do we know where route so we now have another root shell",
    "start": "2787940",
    "end": "2796100"
  },
  {
    "text": "and this time instead of being able to send a request directly to the device bypassing authentication we've leveraged",
    "start": "2796100",
    "end": "2803840"
  },
  {
    "text": "we piggybacked on the authenticated user and said hey you know what you're going to give me the root shell and little did",
    "start": "2803840",
    "end": "2811010"
  },
  {
    "text": "did they know upon navigating to our page they executed a command so we used",
    "start": "2811010",
    "end": "2818060"
  },
  {
    "text": "a cross-site request forgery vulnerability to take advantage of a unauthenticated command injection",
    "start": "2818060",
    "end": "2823820"
  },
  {
    "text": "vulnerability and by virtue we assume full control of this device no questions asked it's it's own so yeah we could do",
    "start": "2823820",
    "end": "2833210"
  },
  {
    "text": "anything else that we want but that's alright onward alright so case study",
    "start": "2833210",
    "end": "2843680"
  },
  {
    "text": "Buffalo this is the terastation 5600 this is a big device has like eight drives in it and we're exporting to",
    "start": "2843680",
    "end": "2852440"
  },
  {
    "text": "vulnerabilities here again another command injection and you guys notice the theme here remember how I said the most prevalent vulnerability command",
    "start": "2852440",
    "end": "2858320"
  },
  {
    "text": "injection all these demonstrations are command injection it's terrible I think I had a couple of routers with command",
    "start": "2858320",
    "end": "2864170"
  },
  {
    "text": "injection not every single one and the second vulnerability will be or is a an",
    "start": "2864170",
    "end": "2871940"
  },
  {
    "text": "unauthorized API call and it's just a missing check so again this is a subset",
    "start": "2871940",
    "end": "2877340"
  },
  {
    "text": "of the missing function level access control vulnerability to where we are actually going to be an authenticated",
    "start": "2877340",
    "end": "2884660"
  },
  {
    "text": "user but we are going to call administrative functionality and this",
    "start": "2884660",
    "end": "2889790"
  },
  {
    "text": "one's really great because this cow hat of this device has two built-in accounts admin for administrating the device and",
    "start": "2889790",
    "end": "2896570"
  },
  {
    "text": "gay and the guest account is used for allowing people to access publicly",
    "start": "2896570",
    "end": "2901790"
  },
  {
    "text": "shared files well little did they know that they messed up so this one isn't a",
    "start": "2901790",
    "end": "2908119"
  },
  {
    "text": "live demo it's actually a video and as the videos playing I will narrate and try and describe what's going on I tried",
    "start": "2908119",
    "end": "2915890"
  },
  {
    "text": "to make it as clear as possible but I'm sure that there will be some uncertainties so we'll see and that",
    "start": "2915890",
    "end": "2923690"
  },
  {
    "text": "challenges actually is a mistake that should not be there okay so what we're",
    "start": "2923690",
    "end": "2942020"
  },
  {
    "text": "doing here is we're actually logging into the device and by logging into this",
    "start": "2942020",
    "end": "2947119"
  },
  {
    "text": "device I'm just demonstrating that we have an administrator account and then",
    "start": "2947119",
    "end": "2953060"
  },
  {
    "text": "I'm showing the the SID value which is a cookie and this is a unique value that",
    "start": "2953060",
    "end": "2959480"
  },
  {
    "text": "is used supposed to be used for authentication which we will find that it isn't and then also used within the",
    "start": "2959480",
    "end": "2967220"
  },
  {
    "text": "JSON RPC call so we log in this device",
    "start": "2967220",
    "end": "2972980"
  },
  {
    "text": "was a little bit slow I try to cut out some of the dead space so we now logged",
    "start": "2972980",
    "end": "2979880"
  },
  {
    "text": "out we're going to specify user name we're going to login as the guest user",
    "start": "2979880",
    "end": "2988180"
  },
  {
    "text": "any day Buffalo alright so we're logged",
    "start": "2993180",
    "end": "3001799"
  },
  {
    "text": "in and notice on the screen it says user ID 20 every user has a user ID and every",
    "start": "3001799",
    "end": "3008519"
  },
  {
    "text": "created user will have user idea it's like a thousand one thousand two etc you know very similar to the underlying unix",
    "start": "3008519",
    "end": "3016019"
  },
  {
    "text": "system well it is identical actually because they though the accounts come from that file so as you can see we have",
    "start": "3016019",
    "end": "3022529"
  },
  {
    "text": "a CID file are set a value and I attempted to tell them out to the device",
    "start": "3022529",
    "end": "3028259"
  },
  {
    "text": "we were unable to do so so we have a series of requests as you can see i have a CID value here this method that we're",
    "start": "3028259",
    "end": "3036450"
  },
  {
    "text": "actually calling is user dot edit user ID 52 which is the admin user remember the guest account was 20 and then we're",
    "start": "3036450",
    "end": "3043109"
  },
  {
    "text": "going to change the password so just clicking go without updating that value I demonstrated that demonstrated that uh",
    "start": "3043109",
    "end": "3055160"
  },
  {
    "text": "we were unable to accept before execute the action what I'll be a really holy",
    "start": "3055609",
    "end": "3064890"
  },
  {
    "text": "cow guys I'm terribly sorry I completely talk too much I guess I'm were actually out of time I was I was not paying",
    "start": "3064890",
    "end": "3070349"
  },
  {
    "text": "attention so I guess that we're gonna definitely gonna have to cut this short yeah I actually have an elapsed time",
    "start": "3070349",
    "end": "3077539"
  },
  {
    "text": "here as well do we know have any q 8 i'm normally okay okay alright so we",
    "start": "3077539",
    "end": "3085619"
  },
  {
    "text": "actually got to cut this short so yep that's it I guess",
    "start": "3085619",
    "end": "3090559"
  }
]