[
  {
    "text": "[Music]",
    "start": "2720",
    "end": "9139"
  },
  {
    "text": "[Music]",
    "start": "22010",
    "end": "25069"
  },
  {
    "text": "[Music]",
    "start": "35860",
    "end": "42400"
  },
  {
    "text": "um took a little bit longer i guess we um give it about 5 minutes before we",
    "start": "45440",
    "end": "50640"
  },
  {
    "text": "start is that okay with you it's not too much to cover so and I can have a cigarette um I guess",
    "start": "50640",
    "end": "58399"
  },
  {
    "text": "we're starting hello everyone um for those who",
    "start": "58399",
    "end": "63840"
  },
  {
    "text": "don't know me I'm FX um of Finolit which is note not a company but a hacker group",
    "start": "63840",
    "end": "69840"
  },
  {
    "text": "um I'm going to talk about more embedded systems this is pretty much a sequel of the speech last year um and covers a",
    "start": "69840",
    "end": "78799"
  },
  {
    "text": "little bit different stuff but it goes in the same direction and well with like most of sequels it's going to be not",
    "start": "78799",
    "end": "86159"
  },
  {
    "text": "that cool but I hope it is enjoyable so what we're going to cover first of all",
    "start": "86159",
    "end": "92799"
  },
  {
    "text": "um there seems to be an increasing interest in hacking the matrix and finding out if you're in the matrix so",
    "start": "92799",
    "end": "99759"
  },
  {
    "text": "um I thought okay let's just find out what the matrix is and when we found",
    "start": "99759",
    "end": "105119"
  },
  {
    "text": "that out um how we hacked that then we're going to cover um GSM 3G and 2.5",
    "start": "105119",
    "end": "114119"
  },
  {
    "text": "basics so well GSM is in use in Europe for quite a while and it's yeah shortly",
    "start": "114119",
    "end": "120560"
  },
  {
    "text": "becoming um quite well used here in the states so I thought before we um",
    "start": "120560",
    "end": "127360"
  },
  {
    "text": "actually look at attacking embedded systems that hang off GSM namely mobile phones um we might actually look at how",
    "start": "127360",
    "end": "134239"
  },
  {
    "text": "GSM works and while doing that um well we can actually cover some of the",
    "start": "134239",
    "end": "139840"
  },
  {
    "text": "attacks you can do in a GSM backbone then we will actually um do a little bit",
    "start": "139840",
    "end": "146440"
  },
  {
    "text": "HTTP which is usually used for um breaking into systems and um hacking",
    "start": "146440",
    "end": "154640"
  },
  {
    "text": "embedded systems but in this case we actually found a way to do HTTP anonymous which is good for those of you",
    "start": "154640",
    "end": "161360"
  },
  {
    "text": "guys who do pentesting without having a contract with this company",
    "start": "161360",
    "end": "166840"
  },
  {
    "text": "uh then of course we um look at embedded systems in terms of mobile phones um",
    "start": "166840",
    "end": "173120"
  },
  {
    "text": "this is not a throughout research of the whole area of mobile phones we don't have like tons of mobile phones lying",
    "start": "173120",
    "end": "179599"
  },
  {
    "text": "around at home um so we basically picked the one we had and um yeah tried to do",
    "start": "179599",
    "end": "186159"
  },
  {
    "text": "some things with it um and of course this being a phenol speech we're going",
    "start": "186159",
    "end": "191920"
  },
  {
    "text": "to cover the usual Cisco o day exploit and share codes and whatnot hacking the matrix um actually",
    "start": "191920",
    "end": "199519"
  },
  {
    "text": "found a device that's called the matrix it's built by Interosis um they used to be Cableron",
    "start": "199519",
    "end": "207519"
  },
  {
    "text": "actually so what is it it's actually a switch router um some of you um guys",
    "start": "207519",
    "end": "213599"
  },
  {
    "text": "probably know the old Cableron switch router thingies um that's the next",
    "start": "213599",
    "end": "219200"
  },
  {
    "text": "generation whatever of it so you can basically define um ports on the switch",
    "start": "219200",
    "end": "224959"
  },
  {
    "text": "and say okay those ports are router and everything else is a switch now we were looking at um possible vulnerabilities",
    "start": "224959",
    "end": "232840"
  },
  {
    "text": "there the thing is as with most embedded systems if you remember the speech last",
    "start": "232840",
    "end": "238239"
  },
  {
    "text": "year um it's big chunk of code running on this machine not really be called an",
    "start": "238239",
    "end": "245120"
  },
  {
    "text": "operating system and one of the side effects here is you don't have forking or threading so um they kind of like",
    "start": "245120",
    "end": "252560"
  },
  {
    "text": "screwed it up totally uh which means if you connect about 10 times to the management interfaces like SSH or TNET",
    "start": "252560",
    "end": "260239"
  },
  {
    "text": "and leave the connection open that is it nobody else is going to tail net to the thing nobody else's SSH to the",
    "start": "260239",
    "end": "267479"
  },
  {
    "text": "thing in the same pattern um if you complete TCP handshakes with open ports",
    "start": "267479",
    "end": "273759"
  },
  {
    "text": "on the device and you basically send yeah soon get a act back send the final",
    "start": "273759",
    "end": "280320"
  },
  {
    "text": "act and then you stop doing anything the device will keep this connection open",
    "start": "280320",
    "end": "286560"
  },
  {
    "text": "not revalidated not timeout nothing it just keeps it open and well you have the",
    "start": "286560",
    "end": "292320"
  },
  {
    "text": "same effect so you don't need 10 netcats running on your box on the switch ports this is a modern",
    "start": "292320",
    "end": "300320"
  },
  {
    "text": "router okay this is not like ages old but on the switch ports if you do port",
    "start": "300320",
    "end": "305840"
  },
  {
    "text": "scanning with the famous end map um it will actually tell you this is a 64k",
    "start": "305840",
    "end": "312160"
  },
  {
    "text": "rule for ISN generation now why is that bad of course um in the default",
    "start": "312160",
    "end": "317680"
  },
  {
    "text": "configuration it is not a router it's just a switch so when people tail net to it or HTTP to it or whatever you can",
    "start": "317680",
    "end": "325120"
  },
  {
    "text": "easily hijack the connections and well there is another",
    "start": "325120",
    "end": "331520"
  },
  {
    "text": "very funny case um of the inability to read RFC's here in this device because OPF um",
    "start": "331520",
    "end": "340880"
  },
  {
    "text": "as some of you might know have different states for the neighbors so you start",
    "start": "340880",
    "end": "346639"
  },
  {
    "text": "saying hello I'm OPF neighbor then it starts talking to you established kind",
    "start": "346639",
    "end": "351680"
  },
  {
    "text": "of relationship and then it will tell anyone everyone else that there is a new",
    "start": "351680",
    "end": "357280"
  },
  {
    "text": "neighbor and you got new information well those guys kind of like didn't read",
    "start": "357280",
    "end": "362639"
  },
  {
    "text": "the RFC correctly so as soon as you send hello they say cool got a new neighbor tell anyone else which is pretty bad",
    "start": "362639",
    "end": "370160"
  },
  {
    "text": "because well you start um flooding the thing with neighbor announcements and",
    "start": "370160",
    "end": "376000"
  },
  {
    "text": "you start saying hello I'm a new neighbor hello there's the next new neighbor and after a while it will",
    "start": "376000",
    "end": "382400"
  },
  {
    "text": "actually say yeah good now it's time for me to say hello to everyone else in the whole OPF area and I will actually",
    "start": "382400",
    "end": "389600"
  },
  {
    "text": "include the information how many new neighbors I got and what they are called so um what you do is you flood the",
    "start": "389600",
    "end": "397039"
  },
  {
    "text": "router with hello messages and the router will take care to um basically tear down your whole",
    "start": "397039",
    "end": "402759"
  },
  {
    "text": "backbone which is quite good and as usual I mean some might remember HTTP",
    "start": "402759",
    "end": "410160"
  },
  {
    "text": "things as soon as you got open port 80 on an embedded system you can bet your",
    "start": "410160",
    "end": "415520"
  },
  {
    "text": "ass it's vulnerable so the same here um you got a HTTP server um which is the",
    "start": "415520",
    "end": "424160"
  },
  {
    "text": "primary management interface because the command line interface sucks badly and",
    "start": "424160",
    "end": "429360"
  },
  {
    "text": "so you do a post unauthenticated of course with a content length um of like",
    "start": "429360",
    "end": "434639"
  },
  {
    "text": "minus one or minus whatever seven and it will crash the device being a embedded",
    "start": "434639",
    "end": "442000"
  },
  {
    "text": "system it will crash the whole device okay back from the matrix um",
    "start": "442000",
    "end": "450000"
  },
  {
    "text": "something more serious GSM the global system for mobile communication um well",
    "start": "450000",
    "end": "456160"
  },
  {
    "text": "is now finally also well known here and the authentication in GSM is based on",
    "start": "456160",
    "end": "465039"
  },
  {
    "text": "key material that's found on the SIM important here is the fact that um when",
    "start": "465039",
    "end": "471120"
  },
  {
    "text": "GSM was first specified it was made absolutely clear that there is no close",
    "start": "471120",
    "end": "477840"
  },
  {
    "text": "relation between the phone and the SIM card so basically what you authenticate",
    "start": "477840",
    "end": "483680"
  },
  {
    "text": "with is always the SIM card the phone or as those um standard making people call",
    "start": "483680",
    "end": "489199"
  },
  {
    "text": "it the terminal equipment um has pretty much nothing to do with",
    "start": "489199",
    "end": "494639"
  },
  {
    "text": "your ability to place calls or receive calls the GSM network identifies you",
    "start": "494639",
    "end": "502080"
  },
  {
    "text": "through um the authentication taking place with the key material on the SIM",
    "start": "502080",
    "end": "507520"
  },
  {
    "text": "and um looks you up in something that's called the home location register",
    "start": "507520",
    "end": "513120"
  },
  {
    "text": "and um when you're roaming somewhere like me being in the states here um",
    "start": "513120",
    "end": "518800"
  },
  {
    "text": "you're authenticated via a visitor location register which is basically just a proxy and um going to the home",
    "start": "518800",
    "end": "525680"
  },
  {
    "text": "location register and finding out if I'm really who I say I am so and it was",
    "start": "525680",
    "end": "532880"
  },
  {
    "text": "tried very often and um I'm not entirely sure if it never succeeded but it never",
    "start": "532880",
    "end": "538640"
  },
  {
    "text": "really took off um you cannot really spoof your identity here so this all",
    "start": "538640",
    "end": "544800"
  },
  {
    "text": "looks pretty good doesn't it now we're introducing new things in",
    "start": "544800",
    "end": "549959"
  },
  {
    "text": "GSM we're introducing gener packet radio services called GPRS what we got now is",
    "start": "549959",
    "end": "557760"
  },
  {
    "text": "actually um packet based data transfer gsm is now going from um like we had in",
    "start": "557760",
    "end": "566560"
  },
  {
    "text": "the networking world when we had link based or yeah switched um connections",
    "start": "566560",
    "end": "573440"
  },
  {
    "text": "that are like I'm sitting on one side of the link and the other one is sitting on the other side of the link and then it",
    "start": "573440",
    "end": "579200"
  },
  {
    "text": "started to be packet based now GSM is doing the same thing right now um and it",
    "start": "579200",
    "end": "585440"
  },
  {
    "text": "is like the internet so consequently the whole backbone is TCP IP based",
    "start": "585440",
    "end": "592480"
  },
  {
    "text": "and it is TCP IP version 4 well one could have said \"Yeah that's new so we",
    "start": "592480",
    "end": "599680"
  },
  {
    "text": "go for V6.\" But for whatever reason V6 never gets used the authentication is actually",
    "start": "599680",
    "end": "607120"
  },
  {
    "text": "comparable to um using a modem what you do is um you either have authenticated",
    "start": "607120",
    "end": "615040"
  },
  {
    "text": "um because of the GSM credentials and your caller ID and that is comparable to",
    "start": "615040",
    "end": "623120"
  },
  {
    "text": "like calling a router or yeah calling a access device with your modem and having",
    "start": "623120",
    "end": "629440"
  },
  {
    "text": "an access device configured so it does caller ID screening and as soon as you got the right caller ID you're in you",
    "start": "629440",
    "end": "636880"
  },
  {
    "text": "also can do um authentication based on APNS which is the access point name and",
    "start": "636880",
    "end": "643760"
  },
  {
    "text": "then you basically supply an access point name uh which you can compare to a web address and optionally it will do",
    "start": "643760",
    "end": "651440"
  },
  {
    "text": "authentication um username password of a PPP we come to that in a minute the",
    "start": "651440",
    "end": "657360"
  },
  {
    "text": "important thing here is APNs are actually like URLs and many of them",
    "start": "657360",
    "end": "663680"
  },
  {
    "text": "actually do look like URLs because they use the URL of let's say the company main web page um as",
    "start": "663680",
    "end": "671240"
  },
  {
    "text": "APN so um you can compare that really to surfing the internet and um hitting web",
    "start": "671240",
    "end": "678959"
  },
  {
    "text": "servers that either let you in or ask you for username and password",
    "start": "678959",
    "end": "685040"
  },
  {
    "text": "now I got this all in color again um this is how a typical GPRS 3G backbone",
    "start": "685040",
    "end": "691760"
  },
  {
    "text": "looks like um quite simplified of course you got the mobile phone in this case",
    "start": "691760",
    "end": "696880"
  },
  {
    "text": "the guy with the blackhead here um you got the home location register hanging",
    "start": "696880",
    "end": "701920"
  },
  {
    "text": "off the whole show and that's basically a big Oracle database of them um this is",
    "start": "701920",
    "end": "709120"
  },
  {
    "text": "the PLMN they got of course they got new names for everything we already know so",
    "start": "709120",
    "end": "714800"
  },
  {
    "text": "we have to learn new names this is the public land mobile network basically that's everything that's not wired um",
    "start": "714800",
    "end": "723360"
  },
  {
    "text": "you got an SGSN and you got a GGSN now those things are quite critical the SGSN",
    "start": "723360",
    "end": "730720"
  },
  {
    "text": "is the serving GPRS support node uh which you can compare to a core router",
    "start": "730720",
    "end": "736560"
  },
  {
    "text": "the GTSn is the gateway GPS support node that's the one interfacing with other",
    "start": "736560",
    "end": "743000"
  },
  {
    "text": "networks and here you got um things like a W gateway which we yeah come to in a",
    "start": "743000",
    "end": "749600"
  },
  {
    "text": "minute um that is basically used to enable your mobile phone to surf the",
    "start": "749600",
    "end": "755920"
  },
  {
    "text": "internet or actually serve web pages and as you see down here um the SGSN are",
    "start": "755920",
    "end": "762959"
  },
  {
    "text": "actually connected to each other to allow roaming so what we got now is",
    "start": "762959",
    "end": "768639"
  },
  {
    "text": "mobile phone providers having IP networks fully matched around the globe in",
    "start": "768639",
    "end": "775639"
  },
  {
    "text": "IPv4 and of course we got the GGSN facing the",
    "start": "775639",
    "end": "781040"
  },
  {
    "text": "internet okay enough of the theory um what are the actual attack points here",
    "start": "781560",
    "end": "788160"
  },
  {
    "text": "well first of all the GGSN is just another um IPv4 should I say embedded system um",
    "start": "788160",
    "end": "796240"
  },
  {
    "text": "that's facing the internet and well can be attacked as well shortly shown um by",
    "start": "796240",
    "end": "803839"
  },
  {
    "text": "at stake they actually found a vulnerability in the Nokia was it Nokia yeah in the",
    "start": "803839",
    "end": "810399"
  },
  {
    "text": "Nokia um GGSN um where you had a weird TCP option and that would actually crash",
    "start": "810399",
    "end": "816560"
  },
  {
    "text": "the device now the scary part is Cisco also does",
    "start": "816560",
    "end": "822279"
  },
  {
    "text": "GGSN um the APN on the other side is quite important why because it is not",
    "start": "822279",
    "end": "829760"
  },
  {
    "text": "considered a secret you would not consider your web page or um the URL for",
    "start": "829760",
    "end": "835279"
  },
  {
    "text": "that a secret so this is just because it looks like a URL it's dealt with the",
    "start": "835279",
    "end": "841279"
  },
  {
    "text": "same way but the difference here is very very significant",
    "start": "841279",
    "end": "847279"
  },
  {
    "text": "you basically access um mobile networks um mobile packet networks that are not",
    "start": "847279",
    "end": "854519"
  },
  {
    "text": "necessarily public via the APN so you often have the case of companies doing",
    "start": "854519",
    "end": "862079"
  },
  {
    "text": "um GPS for their wireless services let's say you got someone um transporting",
    "start": "862079",
    "end": "870079"
  },
  {
    "text": "stuff from A to B pretty much like UPS or FedEx or whoever um most of them",
    "start": "870079",
    "end": "876959"
  },
  {
    "text": "actually use GPS for transferring the data from those little well I call them",
    "start": "876959",
    "end": "882959"
  },
  {
    "text": "major Game Boy devices um where you have to sign on this often works simply by the device",
    "start": "882959",
    "end": "890880"
  },
  {
    "text": "saying \"Okay I want to use the APN of transportme.upfs.com or whatever and",
    "start": "890880",
    "end": "897839"
  },
  {
    "text": "have an access to the private internal IP network of this company.\"",
    "start": "897839",
    "end": "903440"
  },
  {
    "text": "So what about war oping the only thing you have to do is figure out the APN and",
    "start": "903440",
    "end": "911519"
  },
  {
    "text": "that's something quite trivial and well if you know someone in the phone company",
    "start": "911519",
    "end": "916720"
  },
  {
    "text": "you basically pull it down their internal phone book you can filter APNS in the",
    "start": "916720",
    "end": "924440"
  },
  {
    "text": "HLR but the problem here is this is implemented the wrong way it is",
    "start": "924440",
    "end": "930000"
  },
  {
    "text": "implemented by saying okay for this specific user or to be more precise for",
    "start": "930000",
    "end": "935920"
  },
  {
    "text": "this specific SIM card you can have either star which is whatever APN you",
    "start": "935920",
    "end": "942720"
  },
  {
    "text": "want or a list of allowed APNs now guess what that's a pain in the ass to um",
    "start": "942720",
    "end": "949199"
  },
  {
    "text": "manage if you got like 20 22 million users in your mobile network which is an",
    "start": "949199",
    "end": "955360"
  },
  {
    "text": "average size mobile network well you can't really go ahead and say okay update all the users and tell them they",
    "start": "955360",
    "end": "961839"
  },
  {
    "text": "can do internet they can do this and that service we are offering um and only",
    "start": "961839",
    "end": "967839"
  },
  {
    "text": "those and those users can do VPN so I have to see one mobile company actually",
    "start": "967839",
    "end": "973920"
  },
  {
    "text": "doing that it's unfeasible and so what they do is actually say instar you can",
    "start": "973920",
    "end": "980160"
  },
  {
    "text": "connect to whatever APN you want now in reality when I tried that I just",
    "start": "980160",
    "end": "988320"
  },
  {
    "text": "sat down and um opened APNS and asked for common company names big companies",
    "start": "988320",
    "end": "995360"
  },
  {
    "text": "in Germany and I ended up having about like 10 20 matches so you ask for a big",
    "start": "995360",
    "end": "1002240"
  },
  {
    "text": "company name and it goes like yes I know what that is here is your IP address and",
    "start": "1002240",
    "end": "1007519"
  },
  {
    "text": "sometimes it well didn't ask for authentication and sometimes it did but",
    "start": "1007519",
    "end": "1012639"
  },
  {
    "text": "well this is one authentication so it often had something like user test",
    "start": "1012639",
    "end": "1018639"
  },
  {
    "text": "password test welcome to the network backbone attacks",
    "start": "1018639",
    "end": "1027319"
  },
  {
    "text": "um if you have only one single computer somewhere in the network of a mobile",
    "start": "1027319",
    "end": "1034000"
  },
  {
    "text": "phone provider you got real power which is",
    "start": "1034000",
    "end": "1039438"
  },
  {
    "text": "often underestimated the GPRS tunneling protocol GTP is designed to transport",
    "start": "1039439",
    "end": "1047120"
  },
  {
    "text": "user and control data via IPv4 in GPRS and in UMTS backbones",
    "start": "1047120",
    "end": "1054960"
  },
  {
    "text": "so it will be here for a while um it's standardized by the ETSI um those are",
    "start": "1054960",
    "end": "1061200"
  },
  {
    "text": "the guys who do all the GSM stuff and this protocol can control pretty much",
    "start": "1061200",
    "end": "1066720"
  },
  {
    "text": "everything in the whole network and the way the network operates",
    "start": "1066720",
    "end": "1072080"
  },
  {
    "text": "this includes setting up and modifying tunnels um connections data transfer",
    "start": "1072080",
    "end": "1077520"
  },
  {
    "text": "path um VPN access to an active subscriber roaming not roaming and of",
    "start": "1077520",
    "end": "1085120"
  },
  {
    "text": "course billing so both of the control connections and the user data are run",
    "start": "1085120",
    "end": "1092400"
  },
  {
    "text": "over GTP the standard actually specifies that any",
    "start": "1092400",
    "end": "1098240"
  },
  {
    "text": "GSN device like GGSN SGSN dealing with GTP has to support the protocol version",
    "start": "1098240",
    "end": "1106280"
  },
  {
    "text": "zero or more what does that mean well if they finally get around and figure out",
    "start": "1106280",
    "end": "1113280"
  },
  {
    "text": "that GDP wasn't so brilliantly designed they will do GDP1 but since the standard",
    "start": "1113280",
    "end": "1119679"
  },
  {
    "text": "says you have to do GTP0 as well it doesn't help you anything so they can",
    "start": "1119679",
    "end": "1125760"
  },
  {
    "text": "improve the protocol as often as they want it will stay vulnerable and they standardize",
    "start": "1125760",
    "end": "1132799"
  },
  {
    "text": "that so what's so cool about it why do I mention all that crap here well the",
    "start": "1134200",
    "end": "1140320"
  },
  {
    "text": "protocol has some disadvantages uh when you look at it from a security angle it",
    "start": "1140320",
    "end": "1146240"
  },
  {
    "text": "runs over UDP it has no authentication you can create update or",
    "start": "1146240",
    "end": "1153919"
  },
  {
    "text": "delete user contextes which is the user being locked in or not in one",
    "start": "1153919",
    "end": "1160440"
  },
  {
    "text": "packet you can reroute and redirect traffic to your own Lightning in one",
    "start": "1160440",
    "end": "1165799"
  },
  {
    "text": "packet you modify or remove billing information in one packet",
    "start": "1165799",
    "end": "1171679"
  },
  {
    "text": "you can even invite active people surfing the internet via web into a",
    "start": "1171679",
    "end": "1178440"
  },
  {
    "text": "VPN just by telling the GGSN look this guy no longer is in this context but",
    "start": "1178440",
    "end": "1184320"
  },
  {
    "text": "there is a context change he's now surfing Visa well and the one thing I",
    "start": "1184320",
    "end": "1192799"
  },
  {
    "text": "don't understand is it has a very good security issue in terms of business",
    "start": "1192799",
    "end": "1198160"
  },
  {
    "text": "because you can force users to roam Now I was actually thinking about",
    "start": "1198160",
    "end": "1204000"
  },
  {
    "text": "becoming a mobile provider and having just one SGSN the only thing you have to do is",
    "start": "1204000",
    "end": "1209440"
  },
  {
    "text": "tell all the other SGSN's that the user should roam over your",
    "start": "1209440",
    "end": "1215919"
  },
  {
    "text": "network i'm not entirely sure if that was planned",
    "start": "1216520",
    "end": "1222120"
  },
  {
    "text": "this one is quite scary because that's from the actual standard standardizing",
    "start": "1223600",
    "end": "1230840"
  },
  {
    "text": "GTP it basically says well GTP is something that runs over IP we are ETSI",
    "start": "1230840",
    "end": "1237440"
  },
  {
    "text": "we don't deal with IP ip security is someone else's problem",
    "start": "1237440",
    "end": "1243799"
  },
  {
    "text": "so something more practical something to do tomorrow",
    "start": "1247120",
    "end": "1252480"
  },
  {
    "text": "night and on yeah how much hardware do you need to do",
    "start": "1253080",
    "end": "1258720"
  },
  {
    "text": "um for GTP well you need a device that is capable of sending IPv4 UDP packets",
    "start": "1258720",
    "end": "1266919"
  },
  {
    "text": "so um more practical anonymous HTTP lots of people always dreamed about doing",
    "start": "1270559",
    "end": "1277679"
  },
  {
    "text": "HTTP totally anonymous which is quite hard because it's based on TCP you have to do a handshake so you have to have an",
    "start": "1277679",
    "end": "1285039"
  },
  {
    "text": "IP address which is trackable blah blah blah that's bad now um there are lots of",
    "start": "1285039",
    "end": "1292240"
  },
  {
    "text": "attacks in based on HTTP that can carry it out with one query or yeah",
    "start": "1292240",
    "end": "1300520"
  },
  {
    "text": "one how's it called one method um on the web server like you do a get with uni",
    "start": "1300520",
    "end": "1307039"
  },
  {
    "text": "code on some well-known web servers um or some overflows in the host tag you",
    "start": "1307039",
    "end": "1313200"
  },
  {
    "text": "have the is a um xyz that kind of like",
    "start": "1313200",
    "end": "1318320"
  },
  {
    "text": "doesn't have enough buffer space to store a long host name you know all that",
    "start": "1318320",
    "end": "1323600"
  },
  {
    "text": "and you want to do that totally anonymous what you do is you use your mobile phone and W",
    "start": "1323600",
    "end": "1331919"
  },
  {
    "text": "because W um hangs basically off UDP now",
    "start": "1331919",
    "end": "1337280"
  },
  {
    "text": "this itself is good for us because we can spoof UDP packets w contains um actually two",
    "start": "1337280",
    "end": "1345200"
  },
  {
    "text": "protocols it's WTP the transport protocol and WSP the session",
    "start": "1345200",
    "end": "1352200"
  },
  {
    "text": "protocol now the transport protocol is just used for making sure packets are",
    "start": "1352200",
    "end": "1358320"
  },
  {
    "text": "getting from A to B you can set some flags but it's more or less just an additional header um the session",
    "start": "1358320",
    "end": "1367000"
  },
  {
    "text": "protocol is something like um really setting up continuous sessions",
    "start": "1367000",
    "end": "1373919"
  },
  {
    "text": "over UDP this is done via um ids that are comparable to sequence numbers or",
    "start": "1373919",
    "end": "1380400"
  },
  {
    "text": "actually you can compare them better to DNS ids in DNS queries",
    "start": "1380400",
    "end": "1387080"
  },
  {
    "text": "the thing is here usually those connections those virtual connections",
    "start": "1387280",
    "end": "1393440"
  },
  {
    "text": "over UDP are protected by setting up the session having sequence numbers and",
    "start": "1393440",
    "end": "1399840"
  },
  {
    "text": "stuff in place to prevent people from taking it over to prevent spoofing to",
    "start": "1399840",
    "end": "1405919"
  },
  {
    "text": "actually prevent losing packets as well but there is also a less known way which",
    "start": "1405919",
    "end": "1414159"
  },
  {
    "text": "is connectionless WSP this basically says you do it all in",
    "start": "1414159",
    "end": "1420000"
  },
  {
    "text": "one packet and you can even tag this packet and say I don't want any acknowledged about what I did i want to",
    "start": "1420000",
    "end": "1428640"
  },
  {
    "text": "have everything in this single packet and please whatever happens don't tell",
    "start": "1428640",
    "end": "1434960"
  },
  {
    "text": "me what happened now this is not sent to the web server because most web servers",
    "start": "1434960",
    "end": "1440000"
  },
  {
    "text": "don't talk UDP on port 9,100 um it is sent to the web gateway",
    "start": "1440000",
    "end": "1445600"
  },
  {
    "text": "the web gateway's job usually is pull down um WML pages from any given web",
    "start": "1445600",
    "end": "1451799"
  },
  {
    "text": "server compile them into something they call binary um it's not really binary",
    "start": "1451799",
    "end": "1457919"
  },
  {
    "text": "it's just um reducing the length of a tag to one bite so to not transfer too",
    "start": "1457919",
    "end": "1463520"
  },
  {
    "text": "much over the um air connection and well send that over what you do is you send a",
    "start": "1463520",
    "end": "1469600"
  },
  {
    "text": "full HTTP request in one UDP packet of course with a spoofed IP address to be",
    "start": "1469600",
    "end": "1476000"
  },
  {
    "text": "anonymous um to the web gateway a good side effect of that is if you spoof the",
    "start": "1476000",
    "end": "1481679"
  },
  {
    "text": "IP address of someone else who's online which you usually can find out with this complicated ICMP sending program called",
    "start": "1481679",
    "end": "1488679"
  },
  {
    "text": "ping um if you do that with an active user",
    "start": "1488679",
    "end": "1493760"
  },
  {
    "text": "he's going to pay for it so you got not only anonymous HTTP attacking capabilities but they're also for",
    "start": "1493760",
    "end": "1502400"
  },
  {
    "text": "free this is actually the how to do it um you take a GPS W APN or you can also",
    "start": "1502760",
    "end": "1511840"
  },
  {
    "text": "use an open W gateway in the internet there are some companies providing free web gateways um so you don't necessarily",
    "start": "1511840",
    "end": "1519360"
  },
  {
    "text": "need a mobile phone to do that you send the HTTP request to web gateway using",
    "start": "1519360",
    "end": "1524720"
  },
  {
    "text": "someone else's IP address should be capable of doing that um the destination",
    "start": "1524720",
    "end": "1529840"
  },
  {
    "text": "port is UDP 9,200 in contrast at of um",
    "start": "1529840",
    "end": "1535720"
  },
  {
    "text": "9,2001 which is the sessionbased um WSP port and well enjoy the good",
    "start": "1535720",
    "end": "1544080"
  },
  {
    "text": "thing is you can also automate that if you got a web server um reconfigure your logging um so it will actually log the",
    "start": "1544080",
    "end": "1551520"
  },
  {
    "text": "HTTP um header element called X forwarded 4",
    "start": "1551520",
    "end": "1557360"
  },
  {
    "text": "this is filled in by the web gateways so if you got a website up somewhere and somewhere serves your website um you",
    "start": "1557360",
    "end": "1565360"
  },
  {
    "text": "could like hang off a CGI in there and have grab off this X4 which contains the",
    "start": "1565360",
    "end": "1571840"
  },
  {
    "text": "original IP address of the mobile phone and use that for",
    "start": "1571840",
    "end": "1576799"
  },
  {
    "text": "spoofing well there is more to it unfortunately um yeah I was hit by",
    "start": "1577080",
    "end": "1584400"
  },
  {
    "text": "something that's called an NDA dan I",
    "start": "1584400",
    "end": "1589640"
  },
  {
    "text": "just should be able to relatively",
    "start": "1589640",
    "end": "1593840"
  },
  {
    "text": "quickly basically just spoof your",
    "start": "1594919",
    "end": "1600120"
  },
  {
    "text": "source all the control",
    "start": "1600120",
    "end": "1606720"
  },
  {
    "text": "yes",
    "start": "1606720",
    "end": "1609720"
  },
  {
    "text": "okay but there is even more to it yeah so",
    "start": "1614000",
    "end": "1622400"
  },
  {
    "text": "after we looked at um how we can use and misuse um the backbone functionality of",
    "start": "1622400",
    "end": "1628320"
  },
  {
    "text": "mobile phone networks um we actually started looking at this little mobile",
    "start": "1628320",
    "end": "1633760"
  },
  {
    "text": "phone we concentrated on that one first of all because we had it and second um there",
    "start": "1633760",
    "end": "1641279"
  },
  {
    "text": "are all kinds of attacks going on and um job deas is well known for um doing very",
    "start": "1641279",
    "end": "1647919"
  },
  {
    "text": "good attacks on those um more advanced systems like um running on Symbian or",
    "start": "1647919",
    "end": "1654159"
  },
  {
    "text": "running on Palm or whatever but most people still have those half stupid",
    "start": "1654159",
    "end": "1660799"
  },
  {
    "text": "phones they're built to be normal phones but they have additional capabilities",
    "start": "1660799",
    "end": "1667440"
  },
  {
    "text": "and so the question we asked ourselves simply was how secure is that i found",
    "start": "1667440",
    "end": "1672799"
  },
  {
    "text": "out yesterday by someone telling me that there are even more vulnerabilities than I'm presenting here but this is what we",
    "start": "1672799",
    "end": "1679960"
  },
  {
    "text": "found first Bluetooth lots of people are talking about Bluetooth um there are",
    "start": "1679960",
    "end": "1686559"
  },
  {
    "text": "concepts and attacks developed and currently there is",
    "start": "1686559",
    "end": "1691919"
  },
  {
    "text": "lots of research going on um I expect lots of fun with Bluetooth in the future",
    "start": "1691919",
    "end": "1697120"
  },
  {
    "text": "but here we have a very interesting side effect you can pair this device to death",
    "start": "1697120",
    "end": "1702880"
  },
  {
    "text": "what you do is you basically ping it in Bluetooth you can ping something on layer 2 it's called L2 ping and every",
    "start": "1702880",
    "end": "1711360"
  },
  {
    "text": "connection you create for such a ping request will make this device show a little yeah",
    "start": "1711360",
    "end": "1720559"
  },
  {
    "text": "message box saying do you want to pair with this other device talking to you the fun part is you continue doing that",
    "start": "1720559",
    "end": "1727200"
  },
  {
    "text": "and it's continue to do message boxes well this not being windows they're all",
    "start": "1727200",
    "end": "1732480"
  },
  {
    "text": "on top of each other so you dismiss one and it's still there well it is another",
    "start": "1732480",
    "end": "1737760"
  },
  {
    "text": "one but you don't see it you don't see the difference and of course um if you",
    "start": "1737760",
    "end": "1743039"
  },
  {
    "text": "do that extensively it is not going to do anything else because it will exhaust all the connection resources it got",
    "start": "1743039",
    "end": "1750720"
  },
  {
    "text": "which means if someone is sitting in your Bluetooth range and you do that and",
    "start": "1750720",
    "end": "1755919"
  },
  {
    "text": "you got a Bluetooth headset he's not going to hear anything anymore all you need is L2 ping the",
    "start": "1755919",
    "end": "1763840"
  },
  {
    "text": "other thing is on Bluetooth um and that's a fun thing to do in airport lounges",
    "start": "1763840",
    "end": "1770480"
  },
  {
    "text": "um the S55 accepts any file sent to it via Bluetooth now it puts it in a",
    "start": "1771320",
    "end": "1778080"
  },
  {
    "text": "directory and says \"Okay here are all the files I got via Bluetooth.\" It never asks the user if it's supposed to do",
    "start": "1778080",
    "end": "1785679"
  },
  {
    "text": "that you can't even turn that off except for turning off Bluetooth entirely now",
    "start": "1785679",
    "end": "1790960"
  },
  {
    "text": "sending 2,100 files is definitely possible and quite a fast process",
    "start": "1790960",
    "end": "1796480"
  },
  {
    "text": "unfortunately deleting 2,100 files is not because they got a button for saying",
    "start": "1796480",
    "end": "1803360"
  },
  {
    "text": "delete all but the counter that they consider for all seems to be a normal",
    "start": "1803360",
    "end": "1809440"
  },
  {
    "text": "bite well a bite cannot hold 2,100 numbers so it's quite a pain in the ass",
    "start": "1809440",
    "end": "1816320"
  },
  {
    "text": "and the fastest way is actually to format the device java i love Java i love Java java",
    "start": "1816320",
    "end": "1825840"
  },
  {
    "text": "is great java is portable and it's so usable to waste your CPU cycles and",
    "start": "1825840",
    "end": "1831200"
  },
  {
    "text": "crash mobile phones generally JVMs are supposed to be",
    "start": "1831200",
    "end": "1836440"
  },
  {
    "text": "stable jvms are supposed to handle exceptional cases called an",
    "start": "1836440",
    "end": "1842279"
  },
  {
    "text": "exception gracefully and handle them in a way that will not disrupt the whole",
    "start": "1842279",
    "end": "1848240"
  },
  {
    "text": "device for whatever reason semens decided to screw up at this cruy point and say the",
    "start": "1848240",
    "end": "1856080"
  },
  {
    "text": "handling of null pointer exceptions is toast so what you get is as you see here",
    "start": "1856080",
    "end": "1863360"
  },
  {
    "text": "what we call the white screen of death because every time the JVM encounters a null pointer exception",
    "start": "1863360",
    "end": "1871520"
  },
  {
    "text": "it will actually make the phone look as it is displayed here so it's white you",
    "start": "1871520",
    "end": "1878120"
  },
  {
    "text": "can um actually make the phone work again by holding the red button for a",
    "start": "1878120",
    "end": "1884640"
  },
  {
    "text": "long time but it's not documented so most people actually don't",
    "start": "1884640",
    "end": "1889840"
  },
  {
    "text": "know what to do the same thing happens with Jot file parsing jut files um are Java",
    "start": "1889840",
    "end": "1897440"
  },
  {
    "text": "application descriptions correct me if I'm wrong i guess that's the case it's pretty much like an INI file in Windows",
    "start": "1897440",
    "end": "1904799"
  },
  {
    "text": "and when you um serve w and you want to download the java application um you",
    "start": "1904799",
    "end": "1910320"
  },
  {
    "text": "first download the jut file and it tells you how the application is called um where to get it from how big it is so on",
    "start": "1910320",
    "end": "1917039"
  },
  {
    "text": "so on so if you leave some of the information out of this jut file the same thing happens",
    "start": "1917039",
    "end": "1923440"
  },
  {
    "text": "now um the other thing that's quite funny is if you have in this jut file a",
    "start": "1923440",
    "end": "1929360"
  },
  {
    "text": "long name for this Java application called a midl um for yeah for this Java",
    "start": "1929360",
    "end": "1936399"
  },
  {
    "text": "application you got a long name and the user kind of like I don't know has",
    "start": "1936399",
    "end": "1942799"
  },
  {
    "text": "sticky fingers or doesn't read correctly and doesn't notice all the A's in the display um and he says yeah I want to",
    "start": "1942799",
    "end": "1950399"
  },
  {
    "text": "have this file you get an buffer overflow in the file",
    "start": "1950399",
    "end": "1955799"
  },
  {
    "text": "system this is how it looks like normally you say midlet name test so it",
    "start": "1955799",
    "end": "1962399"
  },
  {
    "text": "will actually um download the um thing and put it into",
    "start": "1962399",
    "end": "1968960"
  },
  {
    "text": "the file system under java jam whatever the midlight name is",
    "start": "1968960",
    "end": "1975320"
  },
  {
    "text": "thing.jar so it ends up being test thing.jar now if you do a long long",
    "start": "1975320",
    "end": "1981519"
  },
  {
    "text": "midlet name it will end up and overwrite the file name with the directory entry",
    "start": "1981519",
    "end": "1988480"
  },
  {
    "text": "which is unfortunately impossible to delete this is the reason why this phone",
    "start": "1988480",
    "end": "1994159"
  },
  {
    "text": "here only knows one ringtone anymore which is the hard-coded one in the firmware because we had to reformat it",
    "start": "1994159",
    "end": "2000640"
  },
  {
    "text": "so often now we can do more with Java this",
    "start": "2000640",
    "end": "2007120"
  },
  {
    "text": "is what I call spy.jar jar um usually Java applications um just use the um",
    "start": "2007120",
    "end": "2014240"
  },
  {
    "text": "Java X classes that were designed to run on small devices and mobile phones",
    "start": "2014240",
    "end": "2020200"
  },
  {
    "text": "um but every vendor as we know has its own classes for Seammens the com seemens",
    "start": "2020200",
    "end": "2027600"
  },
  {
    "text": "classes um support some interesting features they support getting your",
    "start": "2027600",
    "end": "2034880"
  },
  {
    "text": "missed call list this can be critical information who tried to call",
    "start": "2034880",
    "end": "2040200"
  },
  {
    "text": "you and of course you can get the IMEI which is the identifier of the",
    "start": "2040200",
    "end": "2046120"
  },
  {
    "text": "phone so that both would be not too bad because most phones if a Java",
    "start": "2046120",
    "end": "2051599"
  },
  {
    "text": "application tries to connect something in the internet and um send information",
    "start": "2051599",
    "end": "2056800"
  },
  {
    "text": "there um would actually ask you if you want to allow this because it's going to cost you money seemens doesn't the only",
    "start": "2056800",
    "end": "2064560"
  },
  {
    "text": "thing it does is a slight little beep that's it well at the time it does beep",
    "start": "2064560",
    "end": "2071760"
  },
  {
    "text": "it already send your missed call list to some web server you never heard",
    "start": "2071760",
    "end": "2077679"
  },
  {
    "text": "of but there are other issues with that",
    "start": "2078200",
    "end": "2083440"
  },
  {
    "text": "um usually sending data out is bad enough but it would be cool to actually",
    "start": "2083440",
    "end": "2089118"
  },
  {
    "text": "send short messages or placing calls to value while value added service numbers",
    "start": "2089119",
    "end": "2095280"
  },
  {
    "text": "now this is something um even seammens figured out is bad so they usually go",
    "start": "2095280",
    "end": "2100720"
  },
  {
    "text": "ahead and say this Java application wants to place a call which is going to terminate the Java application by the",
    "start": "2100720",
    "end": "2107200"
  },
  {
    "text": "way um do you want to do that now as it",
    "start": "2107200",
    "end": "2113119"
  },
  {
    "text": "says here this permission is obtained by a dialogue but unfortunately they got a",
    "start": "2113119",
    "end": "2118400"
  },
  {
    "text": "timing issue when you do fill the screen with stuff before you want to place the",
    "start": "2118400",
    "end": "2125119"
  },
  {
    "text": "call um the Java virtual machine will actually be not fast enough to do the",
    "start": "2125119",
    "end": "2132160"
  },
  {
    "text": "actual display on the screen so at the time the dialogue is displayed later on",
    "start": "2132160",
    "end": "2138480"
  },
  {
    "text": "the Java engine goes ahead and says oops yeah there was something about filling the screen with data and graphics and",
    "start": "2138480",
    "end": "2144720"
  },
  {
    "text": "stuff oh so I'm going to do that before um I validate this dialogue input how",
    "start": "2144720",
    "end": "2149920"
  },
  {
    "text": "that looks like is this would be the normal question do you want to allow to",
    "start": "2149920",
    "end": "2155200"
  },
  {
    "text": "send an SMS to this and that number well you can do it",
    "start": "2155200",
    "end": "2161480"
  },
  {
    "text": "otherwise so people are answering questions that are actually absolutely",
    "start": "2161480",
    "end": "2166640"
  },
  {
    "text": "not related to placing calls and as you know there are value added services",
    "start": "2166640",
    "end": "2172320"
  },
  {
    "text": "where sending one SMS can actually cost you up to four bucks which is good if you have this in",
    "start": "2172320",
    "end": "2179359"
  },
  {
    "text": "a little game because SMS's do not terminate a Java application so every",
    "start": "2179359",
    "end": "2184640"
  },
  {
    "text": "time um you do that in a game and I would recommend something um that uses",
    "start": "2184640",
    "end": "2191520"
  },
  {
    "text": "the left and right button for moving left and",
    "start": "2191520",
    "end": "2197040"
  },
  {
    "text": "right it's going to be a costy",
    "start": "2198760",
    "end": "2203040"
  },
  {
    "text": "game well it also the new phones also do",
    "start": "2204760",
    "end": "2210160"
  },
  {
    "text": "MMS mms is very nice you can finally send those annoying short messages with",
    "start": "2210160",
    "end": "2217040"
  },
  {
    "text": "full pictures and sound so of course to do MMS they need to interpret graphic",
    "start": "2217040",
    "end": "2224599"
  },
  {
    "text": "formats this is GIF and JPEG now GIF actually has a little",
    "start": "2224599",
    "end": "2231280"
  },
  {
    "text": "problem on the seammens and not only on a seammens um we call it the GIF attack",
    "start": "2231280",
    "end": "2237920"
  },
  {
    "text": "um the GIF format defines what they call a virtual screen section because you can",
    "start": "2237920",
    "end": "2244000"
  },
  {
    "text": "have animated GIFs and multiple frames in a GIF um you first define a virtual",
    "start": "2244000",
    "end": "2249119"
  },
  {
    "text": "screen where you say how big the whole thing is",
    "start": "2249119",
    "end": "2254320"
  },
  {
    "text": "going to be during the animation and for every single frame in the GIF you say",
    "start": "2254320",
    "end": "2260640"
  },
  {
    "text": "where it is on the virtual screen now if you take one of the frames and change",
    "start": "2260640",
    "end": "2266320"
  },
  {
    "text": "the offset and say this is a little bit to the right and a little bit to the uh to",
    "start": "2266320",
    "end": "2273200"
  },
  {
    "text": "bottom um of the virtual screen without actually saying anything about the virtual screen in the main header it the",
    "start": "2273200",
    "end": "2280720"
  },
  {
    "text": "seammens and some others will do that which of course results um in having the",
    "start": "2280720",
    "end": "2286880"
  },
  {
    "text": "image written somewhere totally else so um sending someone an MMS with",
    "start": "2286880",
    "end": "2293599"
  },
  {
    "text": "animated GIF where the last frame has this special feature will turn off his phone due to a critical exception in the",
    "start": "2293599",
    "end": "2301720"
  },
  {
    "text": "CPU placing this picture as a background renders the device",
    "start": "2301720",
    "end": "2308599"
  },
  {
    "text": "unusable the guy has to go to the shop and get a new",
    "start": "2308599",
    "end": "2313880"
  },
  {
    "text": "phone since I said we only have one type of phone this to test um I'm running",
    "start": "2313880",
    "end": "2321760"
  },
  {
    "text": "around and finding people who actually have different phones that can do GIF",
    "start": "2321760",
    "end": "2326800"
  },
  {
    "text": "and I keep sending them those um things via um infrared and see what happens",
    "start": "2326800",
    "end": "2333280"
  },
  {
    "text": "some phones actually do blue screen and that is literally kernel exception in a little",
    "start": "2333280",
    "end": "2341040"
  },
  {
    "text": "blue window and that's the last thing you saw some can actually deal with it um",
    "start": "2341040",
    "end": "2348079"
  },
  {
    "text": "others do totally crazy stuff um depending on what you overwrite now the",
    "start": "2348079",
    "end": "2354480"
  },
  {
    "text": "obvious question is um is that possibly exploitable and I cannot command on it",
    "start": "2354480",
    "end": "2362839"
  },
  {
    "text": "but testing in um the emulator provided by Zmens showed that you can actually",
    "start": "2362839",
    "end": "2370640"
  },
  {
    "text": "format the GIF correctly so it contains arbitrary data of course and by choosing",
    "start": "2370640",
    "end": "2377200"
  },
  {
    "text": "the offsets correctly um override very interesting parts of the",
    "start": "2377200",
    "end": "2383838"
  },
  {
    "text": "memory well and now for something totally different i personally find this",
    "start": "2384680",
    "end": "2390720"
  },
  {
    "text": "mobile phone stuff quite boring so I turned around and looked at Cisco",
    "start": "2390720",
    "end": "2397160"
  },
  {
    "text": "here this wasn't planned to be in a presentation but recent developments",
    "start": "2397160",
    "end": "2403119"
  },
  {
    "text": "um kind of like made me include that what I call the death on arrival",
    "start": "2403119",
    "end": "2409160"
  },
  {
    "text": "bug which is the um by now probably well-known queueing bug in case you do",
    "start": "2409160",
    "end": "2414880"
  },
  {
    "text": "not have email there is a bug in Cisco Systems IOS um that allows you to fill",
    "start": "2414880",
    "end": "2421680"
  },
  {
    "text": "the input queue with packets that are never to taken off the input",
    "start": "2421680",
    "end": "2427079"
  },
  {
    "text": "queue and well this is because the packets have an expired TTL that's why I",
    "start": "2427079",
    "end": "2433839"
  },
  {
    "text": "call it death on arrival now on some mailing lists there was the question about exploitability",
    "start": "2433839",
    "end": "2442640"
  },
  {
    "text": "my counter question is when you're stuck in traffic jam does that mean you control the traffic",
    "start": "2442640",
    "end": "2448119"
  },
  {
    "text": "light no it doesn't the attack um to make it like to compare to something",
    "start": "2448119",
    "end": "2454640"
  },
  {
    "text": "else is you go send 75 people downstairs here to Caesars to check in and then",
    "start": "2454640",
    "end": "2461119"
  },
  {
    "text": "basically go to the counter and um kill the person behind it does that mean that you get the money",
    "start": "2461119",
    "end": "2468160"
  },
  {
    "text": "from the casino no it's not related you just filled the",
    "start": "2468160",
    "end": "2474240"
  },
  {
    "text": "queue so I guess that ends it so what's the problem here the problem is iOS is",
    "start": "2474280",
    "end": "2480720"
  },
  {
    "text": "interrupt messaged driven which means if something happens it kicks on some",
    "start": "2480720",
    "end": "2485839"
  },
  {
    "text": "different part of code and says here go ahead handle that the processes",
    "start": "2485839",
    "end": "2491359"
  },
  {
    "text": "themselves are responsible for draining the cues so if you send something um and",
    "start": "2491359",
    "end": "2496480"
  },
  {
    "text": "there is a process that is supposed to deal with that he is supposed to take it off the queue if he doesn't nobody else",
    "start": "2496480",
    "end": "2502880"
  },
  {
    "text": "is going to do it and at least in the older versions",
    "start": "2502880",
    "end": "2508960"
  },
  {
    "text": "that I looked at the reverse um assembly the processes seem to do their own IP",
    "start": "2508960",
    "end": "2515760"
  },
  {
    "text": "parsing every single process seems to do his own IP parsing which means that if",
    "start": "2515760",
    "end": "2522560"
  },
  {
    "text": "you got 100 processors dealing with 100 protocols all hanging off IP 99 can",
    "start": "2522560",
    "end": "2529359"
  },
  {
    "text": "parse IP correctly and you might actually find the one that",
    "start": "2529359",
    "end": "2535119"
  },
  {
    "text": "doesn't cover a minute but so what are the effects on um the",
    "start": "2535160",
    "end": "2543040"
  },
  {
    "text": "death on arrival bug except for the possibility of taking down the internet the bug was found by Cisco",
    "start": "2543040",
    "end": "2550680"
  },
  {
    "text": "internal and hereby greetings to the stat team that was a nice",
    "start": "2550680",
    "end": "2556119"
  },
  {
    "text": "one cisco actually did the right thing they informed the backbone providers um",
    "start": "2556119",
    "end": "2562160"
  },
  {
    "text": "and told them look something is going on here go filter this crap out so people",
    "start": "2562160",
    "end": "2567920"
  },
  {
    "text": "cannot send it around the globe and kill someone else's Cisco but the question is what if the",
    "start": "2567920",
    "end": "2574079"
  },
  {
    "text": "next one is found externally which of course leads to the question can we expect more of this",
    "start": "2574079",
    "end": "2581520"
  },
  {
    "text": "despite the fact that Cisco has kind of like history in not parsing packets correctly um the thing is that the bug",
    "start": "2581520",
    "end": "2589520"
  },
  {
    "text": "itself was caused by a core design failure as I see it because the",
    "start": "2589520",
    "end": "2594800"
  },
  {
    "text": "operating system should have a way to kick stuff out of the input queue if it's laying around there for too",
    "start": "2594800",
    "end": "2601640"
  },
  {
    "text": "long ios 12.3 is out and it's already deferred so we got other problems",
    "start": "2601640",
    "end": "2608520"
  },
  {
    "text": "obviously and there are specific protocols that are handled with higher",
    "start": "2608520",
    "end": "2613720"
  },
  {
    "text": "priorities and um by different ways than just draining the queue so I guess yes",
    "start": "2613720",
    "end": "2620880"
  },
  {
    "text": "we can expect more of this back to the original presentation",
    "start": "2620880",
    "end": "2627359"
  },
  {
    "text": "and to the topic of Cisco IOS processes parsing their IP packets themselves now",
    "start": "2627359",
    "end": "2634880"
  },
  {
    "text": "we've got a small bug here cisco iOS 11 and below you got a UDP echo service now",
    "start": "2634880",
    "end": "2642880"
  },
  {
    "text": "Nessus tells you for ages that UDP echo is bad because it can do UDP ping",
    "start": "2642880",
    "end": "2649240"
  },
  {
    "text": "pong i guess that's not all of it the thing with UDP echo in Cisco is if",
    "start": "2649240",
    "end": "2657440"
  },
  {
    "text": "you send a UDP packet saying in a header it was about 1K big and actually putting",
    "start": "2657440",
    "end": "2664319"
  },
  {
    "text": "in one single character it will echo the 1k now what is it filling the rest of",
    "start": "2664319",
    "end": "2671920"
  },
  {
    "text": "the packet with with transmit buffers it's a classic pure memory leak for",
    "start": "2671920",
    "end": "2678480"
  },
  {
    "text": "interesting reasons you can actually increase this number above the size of an IP packet so what we're talking about",
    "start": "2678480",
    "end": "2687680"
  },
  {
    "text": "here is about 19k byte of memory leak for one UDP echo",
    "start": "2687680",
    "end": "2693880"
  },
  {
    "text": "request now this is IO memory that means it leaks IO memory",
    "start": "2693880",
    "end": "2700400"
  },
  {
    "text": "header information it leaks um actual packet data and that is not just ours",
    "start": "2700400",
    "end": "2709119"
  },
  {
    "text": "and on the topic of iOS 11 being not an interesting uh thing in a talk because",
    "start": "2709119",
    "end": "2715200"
  },
  {
    "text": "it's no longer supported and stuff this is an actual router found by Skoozi um",
    "start": "2715200",
    "end": "2720480"
  },
  {
    "text": "live and working and look at the version number it's running iOS 9 this is not",
    "start": "2720480",
    "end": "2726480"
  },
  {
    "text": "even possible to find on a Cisco FTP server anymore it was compiled in",
    "start": "2726480",
    "end": "2732040"
  },
  {
    "text": "93 so people do update their routers yes",
    "start": "2732040",
    "end": "2738040"
  },
  {
    "text": "so what can we do with this um echo memory leak first of all something very",
    "start": "2738319",
    "end": "2743359"
  },
  {
    "text": "very useful for exploitation is fingerprinting so we get the leaked IO",
    "start": "2743359",
    "end": "2750079"
  },
  {
    "text": "memory and that contains block headers some of you might have seen the other",
    "start": "2750079",
    "end": "2755760"
  },
  {
    "text": "presentation doing heap overflows on iOS block headers are quite important",
    "start": "2755760",
    "end": "2761119"
  },
  {
    "text": "contain a lot of information and a lot of overhead so what we get here is",
    "start": "2761119",
    "end": "2767119"
  },
  {
    "text": "addresses who allocated the block address of the allocation function which",
    "start": "2767119",
    "end": "2772400"
  },
  {
    "text": "changes per iOS image address ranges that change per platform and what it",
    "start": "2772400",
    "end": "2778240"
  },
  {
    "text": "results in totally reliable remote iOS fingerprinting so we get the model and",
    "start": "2778240",
    "end": "2784480"
  },
  {
    "text": "the exact image it is running how does that look in detail",
    "start": "2784480",
    "end": "2790160"
  },
  {
    "text": "okay so we got this echo data back we got um server receive buffers",
    "start": "2790160",
    "end": "2796599"
  },
  {
    "text": "here that just happened to be at the memory after the receive buffer that",
    "start": "2796599",
    "end": "2802560"
  },
  {
    "text": "handled our echo request now in one of those buffers we got the whole memory",
    "start": "2802560",
    "end": "2809040"
  },
  {
    "text": "management header here with the magic the pit and all that crap the allocation",
    "start": "2809040",
    "end": "2814480"
  },
  {
    "text": "PC is image specific those pointers here are platform specific and well we got",
    "start": "2814480",
    "end": "2821200"
  },
  {
    "text": "all kinds of other crap including the ring buffer information the Ethernet header and the IP packet well the",
    "start": "2821200",
    "end": "2828160"
  },
  {
    "text": "question is could we yes we can we do remote IOS sniffing we don't",
    "start": "2828160",
    "end": "2836240"
  },
  {
    "text": "even need an account or anything we just need UDP echo the leaked IO memory contains",
    "start": "2836240",
    "end": "2842079"
  },
  {
    "text": "packet in receive buffers so what I did as a side effect of the actual research",
    "start": "2842079",
    "end": "2847599"
  },
  {
    "text": "showed later is I wrote io sniff it's repeatedly sending um uh UDP echo",
    "start": "2847599",
    "end": "2855480"
  },
  {
    "text": "requests getting the memory leak back identifying the memory blocks identifying packet offsets um do the",
    "start": "2855480",
    "end": "2863520"
  },
  {
    "text": "packet decoding and well do a little bit caching because those packets tend to stay in those buffers for some time",
    "start": "2863520",
    "end": "2870480"
  },
  {
    "text": "depending on the load of the router um so you don't have duplicates this is how it looks like",
    "start": "2870480",
    "end": "2876480"
  },
  {
    "text": "when you do that remotely now you know people say always",
    "start": "2876480",
    "end": "2881760"
  },
  {
    "text": "well CDP should be turned off but well it's layer 2 it's not getting out of our",
    "start": "2881760",
    "end": "2887040"
  },
  {
    "text": "network you know it's not routed now you got CDP in its full glory and since",
    "start": "2887040",
    "end": "2894480"
  },
  {
    "text": "those are the receive buffers you get what people enter when they tell it to the device so what do they enter",
    "start": "2894480",
    "end": "2902920"
  },
  {
    "text": "first the password this is an actual this is what",
    "start": "2902920",
    "end": "2908640"
  },
  {
    "text": "you get when you run the tool it will be released like um the next days when we got stable",
    "start": "2908640",
    "end": "2915599"
  },
  {
    "text": "secure internet access so in contrast to the BGP presentation we're going to",
    "start": "2915599",
    "end": "2921520"
  },
  {
    "text": "release all the tools we're presenting another iOS bug",
    "start": "2921520",
    "end": "2928880"
  },
  {
    "text": "the iOS has as most devices an HTTP demon and as I said earlier if you got",
    "start": "2928880",
    "end": "2935280"
  },
  {
    "text": "an embedded system and you got a port 80 open it is",
    "start": "2935280",
    "end": "2940440"
  },
  {
    "text": "vulnerable same holds true for iOS there is actually an integer",
    "start": "2940440",
    "end": "2948079"
  },
  {
    "text": "overflow so now lots of people including very",
    "start": "2948079",
    "end": "2953599"
  },
  {
    "text": "well-known and respected people in the security community say integer overflows are not that",
    "start": "2953599",
    "end": "2959720"
  },
  {
    "text": "bad because you would never be able to trigger them when it comes to amount of",
    "start": "2959720",
    "end": "2965960"
  },
  {
    "text": "traffic well yes you have to send 2 GB of data but with a normal fast Ethernet",
    "start": "2965960",
    "end": "2973280"
  },
  {
    "text": "link that doesn't even take an hour now I did a little um survey on real",
    "start": "2973280",
    "end": "2980800"
  },
  {
    "text": "black hats and asked them look um if you have to transfer 2 gigabyte um to",
    "start": "2980800",
    "end": "2987440"
  },
  {
    "text": "actually trigger an exploit would that be still feasible or is it and",
    "start": "2987440",
    "end": "2992720"
  },
  {
    "text": "they were like well even if I have to wait two weeks when I got root afterwards what's the",
    "start": "2992720",
    "end": "2998680"
  },
  {
    "text": "problem now what we got here is an integer overflow that leads to a",
    "start": "2998680",
    "end": "3004000"
  },
  {
    "text": "stackbased buffer overflow so I'm correcting myself there are STbased",
    "start": "3004000",
    "end": "3009359"
  },
  {
    "text": "buffer overflows in iOS exploitation issues in the",
    "start": "3009359",
    "end": "3015800"
  },
  {
    "text": "past um whoever has seen the presentation last year heap overflows",
    "start": "3015800",
    "end": "3021599"
  },
  {
    "text": "are interesting they proved it can be done but they're a pain in the ass even to get running in a lab leave alone in",
    "start": "3021599",
    "end": "3028400"
  },
  {
    "text": "the wild so we need a lot of information we need the image the configuration the",
    "start": "3028400",
    "end": "3036079"
  },
  {
    "text": "exact previous pointer we need the size um value for IO memory exploitation we",
    "start": "3036079",
    "end": "3042640"
  },
  {
    "text": "need the ST location um where we overwrite the pointer um we need the",
    "start": "3042640",
    "end": "3047760"
  },
  {
    "text": "location of our own code basically what we need is already having enable access on a",
    "start": "3047760",
    "end": "3053880"
  },
  {
    "text": "device well these requirements as I said made reliable remote exploitation pretty",
    "start": "3053880",
    "end": "3060240"
  },
  {
    "text": "bad what we got now is we combine the two",
    "start": "3060240",
    "end": "3065920"
  },
  {
    "text": "we've got a UDP echo memory leak so we see the ATE provided data which is in",
    "start": "3065920",
    "end": "3071119"
  },
  {
    "text": "the echo packet we have live iOS memory addresses so we can fingerprint the",
    "start": "3071119",
    "end": "3077680"
  },
  {
    "text": "whole thing and we actually see where it is and we have the ability to fill",
    "start": "3077680",
    "end": "3083040"
  },
  {
    "text": "multiple buffers because we're talking about the receive buffers and those receive buffers are ringing buffer so",
    "start": "3083040",
    "end": "3089839"
  },
  {
    "text": "sending multiple echo requests will fill all the ring buffer elements so we got",
    "start": "3089839",
    "end": "3095160"
  },
  {
    "text": "multiple positions of our code that we can actually see on the other hand on the HTTP side",
    "start": "3095160",
    "end": "3103839"
  },
  {
    "text": "we got a direct frame pointer and return address overwrite straightforward textbook",
    "start": "3103839",
    "end": "3111520"
  },
  {
    "text": "so what we can do now is we can send full binary shell code in the UDP echo",
    "start": "3111520",
    "end": "3117920"
  },
  {
    "text": "packet because UDP echo doesn't have any limitations on what to send we can",
    "start": "3117920",
    "end": "3123119"
  },
  {
    "text": "calculate the address of the code using the IO memory block headers that we already got we got the echo data then we",
    "start": "3123119",
    "end": "3131119"
  },
  {
    "text": "got the first block header which gives us an indication on where the next one is this is what the next pointer is for",
    "start": "3131119",
    "end": "3137440"
  },
  {
    "text": "then we got the next block header so we can actually calculate the difference",
    "start": "3137440",
    "end": "3142559"
  },
  {
    "text": "and see where our code ended up so we can reliably calculate where the code",
    "start": "3142559",
    "end": "3149720"
  },
  {
    "text": "is um the shell code is not going to be",
    "start": "3149720",
    "end": "3155240"
  },
  {
    "text": "modified in some cases of course the router is doing something else than waiting for us to exploit it um in this",
    "start": "3155240",
    "end": "3163440"
  },
  {
    "text": "case we have to be very careful on which of the ring buffers we are selecting because it will contain other packets it",
    "start": "3163440",
    "end": "3171440"
  },
  {
    "text": "forwarded those packets to someone right so um but when we selected the right",
    "start": "3171440",
    "end": "3177920"
  },
  {
    "text": "buffer we can directly redirect code execution via a classic return address",
    "start": "3177920",
    "end": "3184960"
  },
  {
    "text": "overwrite into our shell code and basically own the box so combined what we do is um we send",
    "start": "3184960",
    "end": "3194160"
  },
  {
    "text": "the maximum URL length allowed by iOS which was a pain in the ass to find out",
    "start": "3194160",
    "end": "3199520"
  },
  {
    "text": "experimentally but I finally succeeded we send 2 GB of",
    "start": "3199520",
    "end": "3205480"
  },
  {
    "text": "crab actually this crab has to be correctly formatted and as you can imagine with devices that got um only a",
    "start": "3205480",
    "end": "3213520"
  },
  {
    "text": "10 megabit interface it takes quite a while to find that out um we do after",
    "start": "3213520",
    "end": "3220599"
  },
  {
    "text": "that the UDP memory leak to get all the information we want and to see where the",
    "start": "3220599",
    "end": "3226240"
  },
  {
    "text": "shell code ended up actually putting the shell code into the echo packet we make",
    "start": "3226240",
    "end": "3232079"
  },
  {
    "text": "an intelligent decision on which address to use we complete the overflow and gain",
    "start": "3232079",
    "end": "3237559"
  },
  {
    "text": "control now here's that in color again send the HTTP connect and do a",
    "start": "3237559",
    "end": "3245920"
  },
  {
    "text": "legal sized URL get sent two gigabytes of A's",
    "start": "3245920",
    "end": "3252000"
  },
  {
    "text": "recommendation um you might actually want to substitute it with B's because I have seen multiple pieces of software",
    "start": "3252000",
    "end": "3259760"
  },
  {
    "text": "matching for long strings of A's we send the shell code in the UDP",
    "start": "3259760",
    "end": "3268599"
  },
  {
    "text": "echo we get back the leaked memory 19K of it",
    "start": "3268599",
    "end": "3275040"
  },
  {
    "text": "we repeat until happy we complete the HTTP overflow and",
    "start": "3275040",
    "end": "3281599"
  },
  {
    "text": "that's it now this is way more reliable than the heap overflow",
    "start": "3281599",
    "end": "3289079"
  },
  {
    "text": "stuff some problems here cisco's HTTP doesn't like all characters the obvious",
    "start": "3289079",
    "end": "3295359"
  },
  {
    "text": "ones zeros um line feeds carriage returns obviously bad for HTTP some",
    "start": "3295359",
    "end": "3303200"
  },
  {
    "text": "others are also considered not so good but of course it has to support",
    "start": "3303200",
    "end": "3309599"
  },
  {
    "text": "HTTP encoding the thing where you have percent XY that is the hex",
    "start": "3309599",
    "end": "3315319"
  },
  {
    "text": "representation of the SQ character that is supported what I actually found out",
    "start": "3315319",
    "end": "3321440"
  },
  {
    "text": "in the disassembly is that the decoding takes place in the exact same buffer so",
    "start": "3321440",
    "end": "3327599"
  },
  {
    "text": "we can basically encode whatever address we want into HTTP encoding and have no",
    "start": "3327599",
    "end": "3334640"
  },
  {
    "text": "limitations on which addresses to use so we can use the return address encode it",
    "start": "3334640",
    "end": "3340960"
  },
  {
    "text": "in HTTP send it over it will get used now I said we need an intelligent",
    "start": "3340960",
    "end": "3348559"
  },
  {
    "text": "way of um making a decision on which address of the ring buffers to use",
    "start": "3348559",
    "end": "3354079"
  },
  {
    "text": "because they are in use for other things and yeah like forwarding packets and",
    "start": "3354079",
    "end": "3359920"
  },
  {
    "text": "other stuff Cisco routers sometimes do we tested server strategies the last",
    "start": "3359920",
    "end": "3366240"
  },
  {
    "text": "address obtained seemed to be something feasible because it has the um smallest",
    "start": "3366240",
    "end": "3372079"
  },
  {
    "text": "chance of getting reused if it were a rear ring buffer for some reason even",
    "start": "3372079",
    "end": "3378400"
  },
  {
    "text": "the best documentation found um does not explain why the ring buffer is quite",
    "start": "3378400",
    "end": "3383680"
  },
  {
    "text": "arbitrarily used and not in a ring so that had about 50% chance which is not",
    "start": "3383680",
    "end": "3389839"
  },
  {
    "text": "good enough randomly selected addresses were about the same",
    "start": "3389839",
    "end": "3394920"
  },
  {
    "text": "chances using the highest memory location we ever obtained was a real bad move as you see in the values",
    "start": "3394920",
    "end": "3402880"
  },
  {
    "text": "using the lowest memory address we ever obtained in contrast was a real good move and you can also try to have the",
    "start": "3402880",
    "end": "3410880"
  },
  {
    "text": "most frequently seen address um well that kind of like didn't pan out so good",
    "start": "3410880",
    "end": "3416799"
  },
  {
    "text": "but it still can be used now we need shell code the typical",
    "start": "3416799",
    "end": "3423520"
  },
  {
    "text": "problem you got the overflow you got everything together now you need shell code ends up being a pain in the ass if",
    "start": "3423520",
    "end": "3428640"
  },
  {
    "text": "you exploit Windows uh it's not so bad with Cisco what we had in the past was um we",
    "start": "3428640",
    "end": "3435440"
  },
  {
    "text": "had a share code that transported the new configuration piggy pack with itself",
    "start": "3435440",
    "end": "3441680"
  },
  {
    "text": "and once running on the box took the new configuration and wrote it to NVRAM now",
    "start": "3441680",
    "end": "3447280"
  },
  {
    "text": "this has some disadvantages mainly that you have to know a lot of stuff about",
    "start": "3447280",
    "end": "3452480"
  },
  {
    "text": "the box you have to know what interfaces are in there you have to better put a",
    "start": "3452480",
    "end": "3457839"
  },
  {
    "text": "return route in there so when you finally own it it still knows how to reach you um and well you have to take",
    "start": "3457839",
    "end": "3464960"
  },
  {
    "text": "care about some other things as well um the information in the original",
    "start": "3464960",
    "end": "3472319"
  },
  {
    "text": "config is also gone because it's overwritten so you lose passwords and keys you you lose routing information",
    "start": "3472319",
    "end": "3480880"
  },
  {
    "text": "and the stuff that's used to calculate the MD5 hashes of the packets um for OPF",
    "start": "3480880",
    "end": "3487040"
  },
  {
    "text": "and BGP of course you lose the access list information which is quite interesting if you want to find out how",
    "start": "3487040",
    "end": "3493200"
  },
  {
    "text": "cool the guys are that actually owned the Cisco before you started playing with it and you lose all the logging",
    "start": "3493200",
    "end": "3501119"
  },
  {
    "text": "information now we started researching binary um",
    "start": "3501119",
    "end": "3508400"
  },
  {
    "text": "shell code and binary iOS and tried to find out if there are ways to actually",
    "start": "3508400",
    "end": "3514880"
  },
  {
    "text": "mess around with the running binary instead of writing into NVRAM cisco supports serial",
    "start": "3514880",
    "end": "3523000"
  },
  {
    "text": "GDB it doesn't work good let me say that you can try you can use the serial um",
    "start": "3523000",
    "end": "3529839"
  },
  {
    "text": "GDB debugging protocol by hanging off the console tell the Cisco to do GDB",
    "start": "3529839",
    "end": "3535040"
  },
  {
    "text": "it's in everyone's undocumented iOS command list um you find it on the",
    "start": "3535040",
    "end": "3540880"
  },
  {
    "text": "internet no problem and if you got a GDB configured correctly you can actually",
    "start": "3540880",
    "end": "3546240"
  },
  {
    "text": "remote debug via the serial console it's a pain in the ass well GDP GDB isn't",
    "start": "3546240",
    "end": "3552000"
  },
  {
    "text": "known for being user friendly and Cisco isn't the combination is worse the other",
    "start": "3552000",
    "end": "3558720"
  },
  {
    "text": "thing is that the ROM monitor actually allows limited debugging and the good",
    "start": "3558720",
    "end": "3565440"
  },
  {
    "text": "thing here is that you can still use the Cisco on command line um with the",
    "start": "3565440",
    "end": "3571359"
  },
  {
    "text": "correct setting in the configuration register you can actually break out of",
    "start": "3571359",
    "end": "3576640"
  },
  {
    "text": "code execution into Rammon um do whatever Rammon supports and continue",
    "start": "3576640",
    "end": "3583720"
  },
  {
    "text": "operation so you can actually debug and disassemble now it turned out that um",
    "start": "3583720",
    "end": "3590480"
  },
  {
    "text": "first it looked like identifying the piece of code in those four megabytes of data um that will actually do something",
    "start": "3590480",
    "end": "3597760"
  },
  {
    "text": "you're interested in will be very very difficult we don't have debug information in the binary it doesn't",
    "start": "3597760",
    "end": "3605200"
  },
  {
    "text": "tell us please set breakpoint here to find out how we do this um so we better",
    "start": "3605200",
    "end": "3611040"
  },
  {
    "text": "find a way to do that it turned out to be totally simple because for some reason I don't know",
    "start": "3611040",
    "end": "3617040"
  },
  {
    "text": "what they did to their compiler but for some reason the strings used in a",
    "start": "3617040",
    "end": "3622400"
  },
  {
    "text": "function are actually stored before the function right before the function in the text segment so what you do is you",
    "start": "3622400",
    "end": "3629440"
  },
  {
    "text": "turn on all possible debugging and the string the debug string that shows up at",
    "start": "3629440",
    "end": "3634880"
  },
  {
    "text": "the position at the um moment that you're interested in you use that one",
    "start": "3634880",
    "end": "3641839"
  },
  {
    "text": "find it in the binary find it on the running box and disassemble whatever comes after that that's the function",
    "start": "3641839",
    "end": "3648480"
  },
  {
    "text": "you're dealing with so which functions are we dealing",
    "start": "3648480",
    "end": "3654079"
  },
  {
    "text": "with we built a next generation shell code what we do instead of overriding",
    "start": "3654079",
    "end": "3660720"
  },
  {
    "text": "the configuration on the NVRAM and destroy all the juicy stuff we runtime patch the",
    "start": "3660720",
    "end": "3667839"
  },
  {
    "text": "iOS we kind of like teach it to not do the things that annoy us so what is the",
    "start": "3668119",
    "end": "3675119"
  },
  {
    "text": "stuff that annoys us checking passwords now what we found out when we first",
    "start": "3675119",
    "end": "3681599"
  },
  {
    "text": "researched that is that obviously they probably had issues in the past where",
    "start": "3681599",
    "end": "3686880"
  },
  {
    "text": "some of their code went totally bunkers and started writing into the text segment and modifying um actual code",
    "start": "3686880",
    "end": "3694119"
  },
  {
    "text": "executed so there is somewhere a process doing um text segment checksum",
    "start": "3694119",
    "end": "3702000"
  },
  {
    "text": "calculation it calculates the checksum of the text segment all the time um and",
    "start": "3702000",
    "end": "3707359"
  },
  {
    "text": "verifies that the text segment is still okay and it's still the iOS code well of course this one will raise an exception",
    "start": "3707359",
    "end": "3714079"
  },
  {
    "text": "and drop you back into ROM so first time we saw it was actually um we dropped",
    "start": "3714079",
    "end": "3720160"
  },
  {
    "text": "back into Rammon and it was right deposition that we needed to change so it doesn't do that",
    "start": "3720160",
    "end": "3727240"
  },
  {
    "text": "anymore then of course you're interested in things like the password stuff so um",
    "start": "3727240",
    "end": "3732960"
  },
  {
    "text": "we patched the authentication requirement for incoming TDY connections instead of doing this annoying um user",
    "start": "3732960",
    "end": "3740400"
  },
  {
    "text": "access verification it will drop you right to into your user shell then the",
    "start": "3740400",
    "end": "3746000"
  },
  {
    "text": "next thing of course is um to patch the function that deals with enable mode",
    "start": "3746000",
    "end": "3751440"
  },
  {
    "text": "when you say enable it asks you for a password it will still do that unfortunately it the function will",
    "start": "3751440",
    "end": "3759440"
  },
  {
    "text": "always return true so what can we do in the future well",
    "start": "3759440",
    "end": "3766559"
  },
  {
    "text": "this concept to implement the whole thing didn't take more than a day so you",
    "start": "3766559",
    "end": "3772160"
  },
  {
    "text": "can of course identify things like BGP session tracking neighbor checking um",
    "start": "3772160",
    "end": "3777680"
  },
  {
    "text": "access list matching whatever you feel like the problem here is after you did",
    "start": "3777680",
    "end": "3785040"
  },
  {
    "text": "that you have to keep iOS running well usually if we exploit a Cisco for those",
    "start": "3785040",
    "end": "3791040"
  },
  {
    "text": "who missed the talk last year um you can't you exploit a Cisco you run your",
    "start": "3791040",
    "end": "3799119"
  },
  {
    "text": "own code and then it will sooner or later reboot because everything is totally corrupt and broken well if it",
    "start": "3799119",
    "end": "3806599"
  },
  {
    "text": "reboots all your nice patching is toast now you could go ahead and say well I",
    "start": "3806599",
    "end": "3813359"
  },
  {
    "text": "could actually patch the binary on the flash device that has several disadvantages first um accessing the",
    "start": "3813359",
    "end": "3820720"
  },
  {
    "text": "flash is very very platform dependent and a fairly complicated process I did",
    "start": "3820720",
    "end": "3826960"
  },
  {
    "text": "not figure out how to do yet and second those images got checksums as well so",
    "start": "3826960",
    "end": "3833440"
  },
  {
    "text": "when you patch the image you would have to actually calculate the correct check",
    "start": "3833440",
    "end": "3838880"
  },
  {
    "text": "sum of the new image again which is going to be quite a lot of code so let's see if we can keep iOS",
    "start": "3838880",
    "end": "3846760"
  },
  {
    "text": "running the overflow in our case destroys a significant amount of ST due",
    "start": "3846760",
    "end": "3852480"
  },
  {
    "text": "to HTTP encoding you got like 24 characters",
    "start": "3852480",
    "end": "3858640"
  },
  {
    "text": "um in this HTTP encoding that end up to be eight",
    "start": "3858640",
    "end": "3864119"
  },
  {
    "text": "bytes so that doesn't really work but we",
    "start": "3864119",
    "end": "3870720"
  },
  {
    "text": "have the Motorola chord structure the Motorola chord structure uses frame pointers those frame pointers are for",
    "start": "3870720",
    "end": "3878960"
  },
  {
    "text": "those who don't know Motorola are put into one register that's A6 but often in",
    "start": "3878960",
    "end": "3884720"
  },
  {
    "text": "a debugger it's already called the frame pointer and the saved stack pointer goes",
    "start": "3884720",
    "end": "3890960"
  },
  {
    "text": "to the stack so moving the stack pointer before",
    "start": "3890960",
    "end": "3896160"
  },
  {
    "text": "the saved SP of any given function on the stack um and returning will restore",
    "start": "3896160",
    "end": "3904480"
  },
  {
    "text": "the whole show so what we do is actually we search the stack upward um upward in",
    "start": "3904480",
    "end": "3912160"
  },
  {
    "text": "terms of calling functions for the return address of a desired function we",
    "start": "3912160",
    "end": "3918400"
  },
  {
    "text": "set the SP right before that and we execute the function post amble that was",
    "start": "3918400",
    "end": "3924880"
  },
  {
    "text": "supposed to be executed unlink A6",
    "start": "3924880",
    "end": "3930400"
  },
  {
    "text": "return this is how you do that in code you see it's not a lot of code you",
    "start": "3930440",
    "end": "3937119"
  },
  {
    "text": "basically just go forward until you find what you're looking for um then you",
    "start": "3937119",
    "end": "3943280"
  },
  {
    "text": "subtract subtract four which I found out actually um can be done easier so those",
    "start": "3943280",
    "end": "3949680"
  },
  {
    "text": "um might actually be shorter and well you return which means",
    "start": "3949680",
    "end": "3956720"
  },
  {
    "text": "um since we did a clear D0 here um you're returning false now you're",
    "start": "3956720",
    "end": "3964720"
  },
  {
    "text": "looking at a function and well there is only one thing returning true or false",
    "start": "3964720",
    "end": "3970640"
  },
  {
    "text": "we found out that false was the right thing here so that iOS actually thought the",
    "start": "3970640",
    "end": "3976079"
  },
  {
    "text": "whole HTTP thing about doing a request doing this doing that was bad it was a bad request so we don't care about the",
    "start": "3976079",
    "end": "3983440"
  },
  {
    "text": "data we got we just return to normal operation well it is not quite normal",
    "start": "3983440",
    "end": "3991599"
  },
  {
    "text": "the advantages of iOS patching um of course the router stays online",
    "start": "3991599",
    "end": "3997520"
  },
  {
    "text": "overflowing does no longer mean killing a router it just means taking it over",
    "start": "3997520",
    "end": "4003839"
  },
  {
    "text": "the configuration is preserved you didn't change anything on your configuration you still got all the juicy stuff like the password which they",
    "start": "4003839",
    "end": "4011839"
  },
  {
    "text": "are probably using on more than one device and which is still encrypted in",
    "start": "4011839",
    "end": "4017680"
  },
  {
    "text": "this highly secret and very secure encryption mode called password 7 um and of course what we basically do",
    "start": "4017680",
    "end": "4026720"
  },
  {
    "text": "is back to our iOS runtime code so to answer a question Nico asked a year ago",
    "start": "4026720",
    "end": "4031839"
  },
  {
    "text": "yes it can be done the disadvantages of course there are disadvantages it is",
    "start": "4031839",
    "end": "4037839"
  },
  {
    "text": "again depending on the image it's not a biggie here because we can do 100% correct fingerprinting but well it's",
    "start": "4037839",
    "end": "4045359"
  },
  {
    "text": "still lots of images as far as I know we got about 22,000 images currently sitting on",
    "start": "4045359",
    "end": "4052319"
  },
  {
    "text": "Cisco's FTP server so you would need um addresses for each and every one of them",
    "start": "4052319",
    "end": "4061079"
  },
  {
    "text": "so what you need is a target list and of course you got this annoying",
    "start": "4061280",
    "end": "4066640"
  },
  {
    "text": "check some error message on the console because we didn't bother to patch that one",
    "start": "4066640",
    "end": "4073720"
  },
  {
    "text": "out so the Flet HTTP exploit um we",
    "start": "4073720",
    "end": "4078960"
  },
  {
    "text": "actually named it um Cisco Kazumst for those who are fluent in Latin um what we",
    "start": "4078960",
    "end": "4086160"
  },
  {
    "text": "do is reliable remote iOS exploitation address calculation in the",
    "start": "4086160",
    "end": "4091760"
  },
  {
    "text": "shell code and um a well address calculation and shell code placement in",
    "start": "4091760",
    "end": "4097838"
  },
  {
    "text": "the UDP echo um the address selection using the second or actually this is not",
    "start": "4097839",
    "end": "4104238"
  },
  {
    "text": "quite right um using the third smallest address um because for 11.2 two serious",
    "start": "4104239",
    "end": "4111278"
  },
  {
    "text": "iOSs it turned out that the third smallest adus is the best one to use don't ask me why there are about three",
    "start": "4111279",
    "end": "4117679"
  },
  {
    "text": "four guys from Cisco sitting here so ask them um runtime iOS patching disable vty and",
    "start": "4117679",
    "end": "4125359"
  },
  {
    "text": "enable mode password verification and be happy and this is how it looks",
    "start": "4125359",
    "end": "4132040"
  },
  {
    "text": "like enjoy yourself",
    "start": "4132040",
    "end": "4136520"
  },
  {
    "text": "so what so what's the whole point of this guy talking about it didn't we mention last year if you remember you",
    "start": "4137920",
    "end": "4146560"
  },
  {
    "text": "shouldn't run unneeded services including UDP UDP",
    "start": "4146560",
    "end": "4152679"
  },
  {
    "text": "echo you should protect your infrastructure it's not something to drop on the floor power up and forget",
    "start": "4152679",
    "end": "4162640"
  },
  {
    "text": "about it and of course you should not copy data into buffers that are not large enough to hold",
    "start": "4162640",
    "end": "4168600"
  },
  {
    "text": "it this includes you should not use counter that have a signed",
    "start": "4168600",
    "end": "4174440"
  },
  {
    "text": "bit well the problem here is iOS actually moves forward why is that a problem um recent talk some of you might",
    "start": "4174440",
    "end": "4182400"
  },
  {
    "text": "have catched it legal interception is built into iOS so we got legal interception",
    "start": "4182400",
    "end": "4188199"
  },
  {
    "text": "capabilities now what does that mean i once made a joke to Ja Belaloo who's um",
    "start": "4188199",
    "end": "4193758"
  },
  {
    "text": "going to talk on um legal interception here at Blackhead um I once joked my",
    "start": "4193759",
    "end": "4201360"
  },
  {
    "text": "other computer is your legal interception system this is going to be true people are going to exploit Cisco's",
    "start": "4201360",
    "end": "4209199"
  },
  {
    "text": "and make them do legal interception quite",
    "start": "4209199",
    "end": "4214520"
  },
  {
    "text": "unle well and if your infrastructure is owned you cannot defend your computers",
    "start": "4214520",
    "end": "4220000"
  },
  {
    "text": "you cannot defend your systems holding the data well other people do iOS",
    "start": "4220000",
    "end": "4226560"
  },
  {
    "text": "exploitation as well the only difference is we do it in public why do I say",
    "start": "4226560",
    "end": "4231880"
  },
  {
    "text": "that i got a book that was actually a gift for uh to birthday from a friend of",
    "start": "4231880",
    "end": "4239080"
  },
  {
    "text": "mine Body of Secrets it was actually quite interesting to",
    "start": "4239080",
    "end": "4245040"
  },
  {
    "text": "have one single page in this book about the NSA completely talking about that",
    "start": "4245040",
    "end": "4250480"
  },
  {
    "text": "they got people with the primary single and only task to find ways to own",
    "start": "4250480",
    "end": "4256760"
  },
  {
    "text": "Cisco well those guys have an easy",
    "start": "4256760",
    "end": "4261519"
  },
  {
    "text": "job defense how do we defend well for the mobile phones it's obvious turn the crap",
    "start": "4262679",
    "end": "4269760"
  },
  {
    "text": "off do not run Java code that you downloaded from here is",
    "start": "4269760",
    "end": "4276440"
  },
  {
    "text": "thecoolcode.com when receiving files delete them directly do not first look",
    "start": "4276440",
    "end": "4282400"
  },
  {
    "text": "at them this would be a good idea to not look at them if you do you might",
    "start": "4282400",
    "end": "4289840"
  },
  {
    "text": "actually have unwanted side effects it's pretty much like using your",
    "start": "4289840",
    "end": "4295600"
  },
  {
    "text": "Outlook if anyone in here still uses Microsoft Outlook this is the same way you should",
    "start": "4295600",
    "end": "4302080"
  },
  {
    "text": "deal with your mobile phone well keep your phone firmware up to date is more like a joke because for",
    "start": "4302080",
    "end": "4310719"
  },
  {
    "text": "most phones you actually have to go to the shop and tell them \"Please update.\"",
    "start": "4310719",
    "end": "4316800"
  },
  {
    "text": "My experience is that you might actually go to like five shops till you find one",
    "start": "4316800",
    "end": "4322880"
  },
  {
    "text": "guy who actually knows what it firmware is and how to update it and for companies do yourself a favor",
    "start": "4322880",
    "end": "4331040"
  },
  {
    "text": "do not use GPS-based VPNs defense",
    "start": "4331040",
    "end": "4337800"
  },
  {
    "text": "Cisco well first of all do not trust devices just because they're in a black box it doesn't mean they're more",
    "start": "4337800",
    "end": "4344159"
  },
  {
    "text": "insecure it mostly means they're less secure keep your iOS up to date and make",
    "start": "4344159",
    "end": "4350080"
  },
  {
    "text": "Cisco happy by buying new RAM because the new IOS needs twice as much as RAM as the last one",
    "start": "4350080",
    "end": "4355880"
  },
  {
    "text": "did if possible and that is a general rule you should block direct communication to your infrastructure",
    "start": "4355880",
    "end": "4362400"
  },
  {
    "text": "devices there is absolutely no reason that Joey um dial up IP will communicate",
    "start": "4362400",
    "end": "4369679"
  },
  {
    "text": "with your router the router is supposed to forward packets not eat them so have an access list and saying",
    "start": "4369679",
    "end": "4377600"
  },
  {
    "text": "if someone is talking to my router and this someone is not the administrator take the packet and",
    "start": "4377600",
    "end": "4384000"
  },
  {
    "text": "convert it to heat do not run unneeded services on",
    "start": "4384000",
    "end": "4389600"
  },
  {
    "text": "routers the presentation yesterday um by Cisco about HTTP um about the BGP things also",
    "start": "4389600",
    "end": "4398800"
  },
  {
    "text": "showed that in the widespread scan they found what was that about 11,000 routers",
    "start": "4398800",
    "end": "4403840"
  },
  {
    "text": "or 16,000 routers doing HTTP there is absolutely no reason to",
    "start": "4403840",
    "end": "4408960"
  },
  {
    "text": "have HTTP running on a Cisco first of all it's vulnerable second of all it's hard to use it's not even good turn it",
    "start": "4408960",
    "end": "4416960"
  },
  {
    "text": "off prefer out of bend management goes hand inhand with block direct communication",
    "start": "4416960",
    "end": "4423920"
  },
  {
    "text": "to the device if you need to manage the thing well if you got a big router invest a little bit more money for an",
    "start": "4423920",
    "end": "4431440"
  },
  {
    "text": "additional interface and put a little sticker on it management that's the one talking to the router everyone else",
    "start": "4431440",
    "end": "4438440"
  },
  {
    "text": "shouldn't and well it's probably a good idea to include your routers in the IDS watch list and do not do IDS correlation",
    "start": "4438440",
    "end": "4446080"
  },
  {
    "text": "the way that you take out routers and printers as first not a good",
    "start": "4446080",
    "end": "4451159"
  },
  {
    "text": "idea so I guess you survived it um thanks a lot i think I got plenty of",
    "start": "4451159",
    "end": "4457679"
  },
  {
    "text": "time for questions due to a lack of content um so go",
    "start": "4457679",
    "end": "4463880"
  },
  {
    "text": "ahead any questions Dan",
    "start": "4463880",
    "end": "4470040"
  },
  {
    "text": "so similar to Well there was a buck along those lines",
    "start": "4474320",
    "end": "4480800"
  },
  {
    "text": "with um SAF that actually did the same thing so",
    "start": "4480800",
    "end": "4486800"
  },
  {
    "text": "you can do the same with SAF and uh Cisco Express forwarding",
    "start": "4486800",
    "end": "4494360"
  },
  {
    "text": "no silence any more questions i guess everyone is",
    "start": "4495199",
    "end": "4501600"
  },
  {
    "text": "just hungry and wants to go food food food i",
    "start": "4501600",
    "end": "4507360"
  },
  {
    "text": "know it's very small number",
    "start": "4509239",
    "end": "4515158"
  },
  {
    "text": "well I didn't try others no but all you need basically is something that leaks",
    "start": "4518640",
    "end": "4525280"
  },
  {
    "text": "more than the packet you send plus um about 40 bytes which is the next memory",
    "start": "4525280",
    "end": "4532280"
  },
  {
    "text": "header then you got full life addresses and you can reliably exploit it yes to",
    "start": "4532280",
    "end": "4538880"
  },
  {
    "text": "summarize the to questions yes I'm sure there are more memory leaks in iOS and",
    "start": "4538880",
    "end": "4544239"
  },
  {
    "text": "this is why I presented that because that is the way to do reliable exploitation",
    "start": "4544239",
    "end": "4550600"
  },
  {
    "text": "since nobody is here anymore I guess that's it thank you [Applause]",
    "start": "4551120",
    "end": "4566368"
  }
]