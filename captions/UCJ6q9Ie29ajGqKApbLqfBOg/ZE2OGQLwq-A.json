[
  {
    "text": "hello everybody we're very very very excited to be here today also because I almost didn't make it I was stuck in",
    "start": "2600",
    "end": "8679"
  },
  {
    "text": "Dubai for like 32 hours on the way over um we're going to talk about the firmware modification attack and remote",
    "start": "8679",
    "end": "15440"
  },
  {
    "text": "debugger we developed for the Simmons S7 plc's and before we begin I just want to say thank you to Professor Ellie bam Dr",
    "start": "15440",
    "end": "22640"
  },
  {
    "text": "SAR ban and alone dner for the joint work and also a very special thank you to Dr Marina croil and Dr Ali Abasi for",
    "start": "22640",
    "end": "29640"
  },
  {
    "text": "the dedic ated mentorship so I'm Ron seml I'm Al seml",
    "start": "29640",
    "end": "36160"
  },
  {
    "text": "and as you can see we're brothers we' been collaborating for almost 25 years together um I'm a software I'm a",
    "start": "36160",
    "end": "43480"
  },
  {
    "text": "software engineer at Microsoft and also a security researcher at Theon and I'm a security researcher at",
    "start": "43480",
    "end": "49960"
  },
  {
    "text": "Theon so we're not the first to research Simmons plc's many people have done it before us so our first topic will focus",
    "start": "49960",
    "end": "56600"
  },
  {
    "text": "on previous research so we can build a strong foundation for the rest of our talk we're going to talk about the runtime",
    "start": "56600",
    "end": "62199"
  },
  {
    "text": "manipulation of Simmons S7 PLC firmware and how we leveraged it to develop a remote debugger for the Simmons S7 plc's",
    "start": "62199",
    "end": "69920"
  },
  {
    "text": "and finally a video demonstration and conclusions so can anybody here imagine",
    "start": "69920",
    "end": "76439"
  },
  {
    "text": "life without water transportation food or even our Amazon",
    "start": "76439",
    "end": "82079"
  },
  {
    "text": "shipments so today our lives Necessities are made accessible via highly automated",
    "start": "82079",
    "end": "88520"
  },
  {
    "text": "industrial control systems and these systems include wastewater treatment plants that purify our",
    "start": "88520",
    "end": "93960"
  },
  {
    "text": "drinking water our traffic is managed using complex signaling systems even our food is grown using",
    "start": "93960",
    "end": "101479"
  },
  {
    "text": "Automatic Irrigation Systems and our online purchases are managed in automated",
    "start": "101479",
    "end": "107240"
  },
  {
    "text": "warehouses and these Smart Control Systems include Mass integration of iot devices extensive Cloud communication",
    "start": "107240",
    "end": "114360"
  },
  {
    "text": "and smart automation but all these cool features come with a lot of risks",
    "start": "114360",
    "end": "120719"
  },
  {
    "text": "and cyber attacks on critical infrastructure can be devastating for",
    "start": "120719",
    "end": "125880"
  },
  {
    "text": "example the Triton malware was specifically designed to disable safety systems which can prevent industrial",
    "start": "125880",
    "end": "132400"
  },
  {
    "text": "accidents it was first discovered in a Saudi petrochemical plant just think how deadly this kind of attack can be and",
    "start": "132400",
    "end": "140519"
  },
  {
    "text": "due to these consequences we have a great responsibility in securing these",
    "start": "140519",
    "end": "146840"
  },
  {
    "text": "systems now a PLC is a very rugged computer used in Industrial Automation",
    "start": "146840",
    "end": "152319"
  },
  {
    "text": "and it's the core component of an industrial control system it reads input data from field devices such as sensors",
    "start": "152319",
    "end": "159519"
  },
  {
    "text": "and then it triggers outputs based on pre-programmed code so you can kind of think of it as a bridge between the virtual and the physical",
    "start": "159519",
    "end": "167239"
  },
  {
    "text": "world now a little off topic here we're from Israel it's very very hot over",
    "start": "167239",
    "end": "172599"
  },
  {
    "text": "there kind of like here and you can just imagine yourselves like walking down the streets in the summer 100% humidity",
    "start": "172599",
    "end": "178000"
  },
  {
    "text": "everybody's always sweating it's sticky so we love ice cream but the problem is they all here would always finish my ice",
    "start": "178000",
    "end": "183720"
  },
  {
    "text": "cream going up so at a very early age we understood that ice cream factories are critical infrastructure that must be",
    "start": "183720",
    "end": "191040"
  },
  {
    "text": "protected and here's an example of how an industrial control system would work in an ice cream",
    "start": "191040",
    "end": "196560"
  },
  {
    "text": "factory so the factory has these industrial tubs which the ice cream is prepared in and each tub is connected to",
    "start": "196560",
    "end": "202879"
  },
  {
    "text": "a PLC and the PLC gathers data from the top during runtime such as its",
    "start": "202879",
    "end": "208040"
  },
  {
    "text": "temperature and then based on that data it can change the tub's behavior for example it can tell it the stop",
    "start": "208040",
    "end": "215159"
  },
  {
    "text": "Additionally the statuses of the tubs can be viewed remotely in an engineering workstation and the plc's custom control",
    "start": "215159",
    "end": "222640"
  },
  {
    "text": "logic can be updated remotely from it and here's some very important and",
    "start": "222640",
    "end": "228920"
  },
  {
    "text": "relevant previous research regarding Simmons plcs the doors of Curr team discovered a",
    "start": "228920",
    "end": "234760"
  },
  {
    "text": "special access feature to the Simmons s7200 plc's boot loader which was exposed via the UR interface and using",
    "start": "234760",
    "end": "242560"
  },
  {
    "text": "this special access feature they were able to upload firmware directly to the firmware Flash and thus bypass all the",
    "start": "242560",
    "end": "247760"
  },
  {
    "text": "Integrity checks the Rogue 7 team discovered that all the Simmons S7 plcs",
    "start": "247760",
    "end": "253360"
  },
  {
    "text": "of the same model share a single hardcoded private Keys used for",
    "start": "253360",
    "end": "258600"
  },
  {
    "text": "communication and this motivated team 82 at Clarity to actually discover these keys and once they did Simmons updated",
    "start": "258600",
    "end": "265880"
  },
  {
    "text": "their communication protocol TLS and Colin think and Tom Dorman show that even a decade after stocket and all",
    "start": "265880",
    "end": "273199"
  },
  {
    "text": "the security improvements that came with it that the Simmons S7 plcs are still an attackers heaven and we'll show you",
    "start": "273199",
    "end": "281680"
  },
  {
    "text": "why and because plcs are the main target of attacks on critical infrastructure we",
    "start": "281680",
    "end": "287199"
  },
  {
    "text": "focused on the largest PLC vendue which is Simmons and also because they invest the most in securing their",
    "start": "287199",
    "end": "293280"
  },
  {
    "text": "products more specifically we focused on the Simmons et200sp open controller which is a Next",
    "start": "293280",
    "end": "300080"
  },
  {
    "text": "Generation PLC it was specifically designed to match the growing needs of Industry 4.0 and it serves as",
    "start": "300080",
    "end": "307800"
  },
  {
    "text": "a platform for modern software applications it overw some serious design changes which open it up to new",
    "start": "307800",
    "end": "314320"
  },
  {
    "text": "attack vectors and methods and it also runs on standard Hardware uh in this",
    "start": "314320",
    "end": "319440"
  },
  {
    "text": "case it runs on Intel atom CPU with four cores and it's one of the leading plcs in the market it also includes a built-in",
    "start": "319440",
    "end": "327240"
  },
  {
    "text": "software P which is called the s 1500 software controller and basically",
    "start": "327240",
    "end": "333240"
  },
  {
    "text": "it's a software application that simulates the functionality of a traditional Hardware pills and just to",
    "start": "333240",
    "end": "339039"
  },
  {
    "text": "be concise throughout the talk we'll call it the S SW CPU now for years Simmons has kept the",
    "start": "339039",
    "end": "346440"
  },
  {
    "text": "firmware of their S7 plc's a secret and they also invested a lot a lot of",
    "start": "346440",
    "end": "353120"
  },
  {
    "text": "resources in protecting their intellectual property for example the Simmons s7200 PLC self-destructs if a",
    "start": "353120",
    "end": "361919"
  },
  {
    "text": "watchdog discovers that one of the cores was halted via the JTAG interface and this was first discovered by Thomas",
    "start": "361919",
    "end": "367720"
  },
  {
    "text": "Weber in 2019 and reproduced by Ali Abasi in 2020 Additionally the software PLC we",
    "start": "367720",
    "end": "374319"
  },
  {
    "text": "talked about earlier is encrypted on the open controller and this was discovered by the soft 17 in",
    "start": "374319",
    "end": "381800"
  },
  {
    "text": "2022 now we introduced a revolution in the research of these Simmons S7 plcs",
    "start": "381800",
    "end": "387880"
  },
  {
    "text": "and for the first time an S7 PLC history we remove from these plcs their many",
    "start": "387880",
    "end": "393440"
  },
  {
    "text": "layers of obscurity we introduce a powerful remote tool to dynamically",
    "start": "393440",
    "end": "398680"
  },
  {
    "text": "analyze their firmware and we can easily expose secrets that have been kept secret for years and as a byproduct of",
    "start": "398680",
    "end": "406240"
  },
  {
    "text": "all this we manag to install persistent malware on the PLC which can communicate with the remote command and control",
    "start": "406240",
    "end": "414440"
  },
  {
    "text": "server so at the lowest level of this PLC we have a bare hypervisor and it",
    "start": "415440",
    "end": "421199"
  },
  {
    "text": "launches two guest operating systems the first operating system is the software PLC and its main responsibility is to",
    "start": "421199",
    "end": "428840"
  },
  {
    "text": "communicate with the field devices like the industrial tub in our example the second operating system is the windows",
    "start": "428840",
    "end": "434879"
  },
  {
    "text": "embedded operating system and its main responsibility is to communicate with engineering workstation and Cloud",
    "start": "434879",
    "end": "440560"
  },
  {
    "text": "platform and naturally these two operating systems communicate between each other using inter OS",
    "start": "440560",
    "end": "446800"
  },
  {
    "text": "communication and the isolation between these two operating systems provided by",
    "start": "446800",
    "end": "452840"
  },
  {
    "text": "the virtualization is a very important security layer and this is because if",
    "start": "452840",
    "end": "458080"
  },
  {
    "text": "the Windows operating system is compromised we still want the field devices controlled by the software PLC",
    "start": "458080",
    "end": "464759"
  },
  {
    "text": "to remain safe the boot process is fairly simple",
    "start": "464759",
    "end": "470319"
  },
  {
    "text": "of this open control we have a bios which loads the BR boot loader which loads vmm first stage and it's the first",
    "start": "470319",
    "end": "476960"
  },
  {
    "text": "part of the hypervisor it's mainly responsible for setting different configurations vmm first stage loads vmm",
    "start": "476960",
    "end": "483360"
  },
  {
    "text": "second stage which acts as the brains of the hypervisor it loads the windows embedded operating system and also",
    "start": "483360",
    "end": "490000"
  },
  {
    "text": "decrypts the encrypted software PLC and loads it into",
    "start": "490000",
    "end": "495440"
  },
  {
    "text": "memory now our research continues where the soft 7 research ended and that's",
    "start": "495440",
    "end": "500560"
  },
  {
    "text": "black hat USA 22 remember that in the previous slide we showed you that the hypervisor encrypts the encrypted",
    "start": "500560",
    "end": "507039"
  },
  {
    "text": "software PLC and loads it into memory the soft 7 team managed to extract the",
    "start": "507039",
    "end": "512518"
  },
  {
    "text": "pl text software PLC file so now we could start studying its assembly",
    "start": "512519",
    "end": "518640"
  },
  {
    "text": "code and additionally but also very very surprisingly they discovered that the",
    "start": "518640",
    "end": "524839"
  },
  {
    "text": "hypervisor and software PLC firmware files can be easily accessed from the Windows File system which means that",
    "start": "524839",
    "end": "532240"
  },
  {
    "text": "these two operating systems aren't that isolated if the files of one can be accessed from the other and by simply",
    "start": "532240",
    "end": "539839"
  },
  {
    "text": "dragging and dropping we can easily replace these files as a side note replacing the hypervisor is easier than",
    "start": "539839",
    "end": "546839"
  },
  {
    "text": "the software PC but we'll touch up on that later for now just a video demonstration of how we replace the",
    "start": "546839",
    "end": "554560"
  },
  {
    "text": "hyper so here on the left we can see the original sorry the modified soft",
    "start": "554560",
    "end": "561959"
  },
  {
    "text": "hypervisor and on the right we can see the original one and as you could see by simply dragging and dropping and giving",
    "start": "562760",
    "end": "568800"
  },
  {
    "text": "admin privileg is we can easily replace the original hypervisor and when the PLC reboots the",
    "start": "568800",
    "end": "575880"
  },
  {
    "text": "the modified hypervisor will be the one that's loaded and they leverage this new",
    "start": "575880",
    "end": "582760"
  },
  {
    "text": "capability to crash debug the hypervisor and what do I mean by this so for example how could they know who calls",
    "start": "582760",
    "end": "589720"
  },
  {
    "text": "this function they started by overriding an instruction in the hypervisor with the",
    "start": "589720",
    "end": "595079"
  },
  {
    "text": "N3 command so in our case they overr the first instruction of the function",
    "start": "595079",
    "end": "600720"
  },
  {
    "text": "within3 they then replaced the original hypervisor with the modified version",
    "start": "600720",
    "end": "606200"
  },
  {
    "text": "using the drag and drop method we showed you in the previous slide and finally when in3 executes a crash dump will be",
    "start": "606200",
    "end": "612839"
  },
  {
    "text": "produced and this is kind of a hidden feature of this PS if we look at the top we see the PLC and on the bottom we see",
    "start": "612839",
    "end": "619399"
  },
  {
    "text": "the crash dump and if we zoom into the crash dump we can see the hypervisors registers and stack if we look at the",
    "start": "619399",
    "end": "626320"
  },
  {
    "text": "top of the stack we can see the functions return address and that's how they discovered who calls this",
    "start": "626320",
    "end": "633440"
  },
  {
    "text": "function now before we continue to the rest of the talk just a quick recap the",
    "start": "633440",
    "end": "638920"
  },
  {
    "text": "soft 7 research enabled us to study the software plc's assembly code easily",
    "start": "638920",
    "end": "644040"
  },
  {
    "text": "modify the hypervisor via the Windows File system and crash debug the hypervisor and going forward we'll be",
    "start": "644040",
    "end": "650079"
  },
  {
    "text": "presenting our contributions and what will we show you",
    "start": "650079",
    "end": "655160"
  },
  {
    "text": "so we'll show you how a bad actor or Nation St could persistently install malware on the PLC how to set up",
    "start": "655160",
    "end": "661760"
  },
  {
    "text": "communication with a remote C2 server how to remotely and dynamically inject",
    "start": "661760",
    "end": "666880"
  },
  {
    "text": "commands to the software PLC how to exfiltrate data from it and if you're a",
    "start": "666880",
    "end": "672519"
  },
  {
    "text": "researcher like us we'll show you how to read runtime information from the software PC how to get a better",
    "start": "672519",
    "end": "679440"
  },
  {
    "text": "understanding of the code fluid and finally this will all expedite your research process",
    "start": "679440",
    "end": "686440"
  },
  {
    "text": "exponentially now our research process was kind of like robbing a bank because it had kind of many steps and challenges",
    "start": "686720",
    "end": "692600"
  },
  {
    "text": "so took a gaming approach into doing it and that's why we developed a game called bank heist and we'll be playing",
    "start": "692600",
    "end": "698519"
  },
  {
    "text": "it throughout the talk so I hope you enjoy it and now we can actually start to talk about the runtime manipulation of the",
    "start": "698519",
    "end": "705720"
  },
  {
    "text": "software PLC which leads us to the first level of our game which is to gather intelligence",
    "start": "705720",
    "end": "711720"
  },
  {
    "text": "about the bank or in our case research the firmware but we encountered a slight",
    "start": "711720",
    "end": "717959"
  },
  {
    "text": "bump in in the road so remember that earlier we showed you that the soft 17 was able to easily modify the hypervisor",
    "start": "717959",
    "end": "724160"
  },
  {
    "text": "and run it we wanted to do the same to the software PC but the problem was that",
    "start": "724160",
    "end": "729519"
  },
  {
    "text": "the software PLC is encrypted on the open controller and the soft 7 team",
    "start": "729519",
    "end": "735519"
  },
  {
    "text": "didn't discover the decryption method or key so after we would modify the pl tech",
    "start": "735519",
    "end": "741279"
  },
  {
    "text": "software PLC we didn't know how to re-encrypt it to Max the hypervisor decryptor and if we were to just replace",
    "start": "741279",
    "end": "748959"
  },
  {
    "text": "the encrypted software PLC with the pl text version it should just crash right",
    "start": "748959",
    "end": "754320"
  },
  {
    "text": "so what we did is we started by reverse engineering the code in the hypervisor that loads the software PLC and we",
    "start": "754320",
    "end": "761760"
  },
  {
    "text": "discovered that the hypervisor can load any elf any arbitrary L file as a software PLC which is crazy it shouldn't",
    "start": "761760",
    "end": "767800"
  },
  {
    "text": "be this way and it kind of looks like a back door on the code let's take a look here on the bottom we can see the",
    "start": "767800",
    "end": "774800"
  },
  {
    "text": "if clause which loads the encrypted software PLC file it just checks for a specific magic number at the beginning",
    "start": "774800",
    "end": "781079"
  },
  {
    "text": "of the file magic string but here on the top we can see the vulnerable if clause which enables any L file to be loaded",
    "start": "781079",
    "end": "788440"
  },
  {
    "text": "just checks for the Elf Magic stream at the beginning this if Clause shouldn't be here and let's take a visual look at",
    "start": "788440",
    "end": "796639"
  },
  {
    "text": "this any admin user on the Windows operating system can easily replace the",
    "start": "796639",
    "end": "802199"
  },
  {
    "text": "original software PLC file with the modifi version using the drag and drop method we showed you at the beginning",
    "start": "802199",
    "end": "808480"
  },
  {
    "text": "and when the pl C reboots the hypervisor will load the modified version without",
    "start": "808480",
    "end": "814120"
  },
  {
    "text": "checking for authenticity and this undermines one of the key advantages of virtualization",
    "start": "814120",
    "end": "821240"
  },
  {
    "text": "which is isolation this can be done remotely if an attacker gains admin privileges to",
    "start": "821240",
    "end": "827480"
  },
  {
    "text": "the Windows operating system and the changes are persistent so it will withstand a power",
    "start": "827480",
    "end": "833399"
  },
  {
    "text": "outage now as a side note we own the PLC that we researching so obviously we had an admin user we could which we could",
    "start": "833399",
    "end": "839680"
  },
  {
    "text": "use to run all the experiments we needed that required admin privileges and that's how we gained the",
    "start": "839680",
    "end": "845480"
  },
  {
    "text": "first point of our game which is very exciting it was the first V vulnerability we found and we were ready to",
    "start": "845480",
    "end": "851240"
  },
  {
    "text": "continue and now that we could exploit this uh vulnerability we can modify the software PLC to our liking what should",
    "start": "851240",
    "end": "858040"
  },
  {
    "text": "we make it do so I like money I wanted to make it mind Bitcoin they all's a little more",
    "start": "858040",
    "end": "864440"
  },
  {
    "text": "ethical than me he wanted to modify so he can better understand internal logic unfortunately want with this approach",
    "start": "864440",
    "end": "871920"
  },
  {
    "text": "and to better understand how the software PLC works during runtime we needed basic runtime information like",
    "start": "871920",
    "end": "877959"
  },
  {
    "text": "its registers and step but how could we do it so what we did is we began with a",
    "start": "877959",
    "end": "885320"
  },
  {
    "text": "very very naive and simple approach and we continue to improve and build on top of it throughout our research process so",
    "start": "885320",
    "end": "892199"
  },
  {
    "text": "remember that earlier we showed you that the soft 17 was able to easily generate a crash d by injecting an in3 command",
    "start": "892199",
    "end": "898399"
  },
  {
    "text": "into the hypervisor what if we could do the same to the software PLC what if by simply injecting",
    "start": "898399",
    "end": "904240"
  },
  {
    "text": "an in3 command into its code we could generate a crash that way we'll see its registers",
    "start": "904240",
    "end": "910600"
  },
  {
    "text": "instead but obviously this didn't work it was just too easy always has to be hard but it was a good starting point to",
    "start": "910600",
    "end": "918000"
  },
  {
    "text": "build on top of and we looked for ways to improve this",
    "start": "918000",
    "end": "923440"
  },
  {
    "text": "approach as a reminder the hypervisor launches the software PLC and during runtime control is shifted back and",
    "start": "923440",
    "end": "930160"
  },
  {
    "text": "forth between them there are many context switches and we started to ask ourselves what does an M3 command",
    "start": "930160",
    "end": "936040"
  },
  {
    "text": "actually do when it executes in the software PLC the previous slide we thought it generates a crash T but",
    "start": "936040",
    "end": "942199"
  },
  {
    "text": "obviously that was wrong but after a lot of research we actually discovered that it shifts control back to the",
    "start": "942199",
    "end": "949079"
  },
  {
    "text": "hypervisor and that's when we asked ourselves the following fundamental question can we leak software PLC",
    "start": "949079",
    "end": "956519"
  },
  {
    "text": "runtime information to the hyperv is CFT and here's a visual",
    "start": "956519",
    "end": "962600"
  },
  {
    "text": "explanation while running within the software PLC will shift control back to",
    "start": "962600",
    "end": "967920"
  },
  {
    "text": "the hypervisor using an in3 command and after the context switch the hypervisor",
    "start": "967920",
    "end": "974519"
  },
  {
    "text": "registers will be identical to the software plc's registers and this is because the hypervisor is a bare metal",
    "start": "974519",
    "end": "980920"
  },
  {
    "text": "hypervisor which means that it shares its physical registers with all of its guest operating systems afterwards will",
    "start": "980920",
    "end": "988600"
  },
  {
    "text": "crack the hypervisor using another in3 command and the registers in the crash",
    "start": "988600",
    "end": "993720"
  },
  {
    "text": "Dum will be identical to the software plc's registers that's how we found a cool way to actually leak runtime",
    "start": "993720",
    "end": "1000000"
  },
  {
    "text": "information from the software PLC to the hypervisor craft and let's actually take a deep",
    "start": "1000000",
    "end": "1007199"
  },
  {
    "text": "dive into the code we injected to make this happen so let's begin by looking at a snippet of code of the software PS",
    "start": "1007199",
    "end": "1014800"
  },
  {
    "text": "when looking at this code we asked ourselves what function is called here which basically means what's the value",
    "start": "1014800",
    "end": "1020759"
  },
  {
    "text": "of Rax nobody here knows what it is because it's only determined during runtime so we couldn't really follow the",
    "start": "1020759",
    "end": "1026400"
  },
  {
    "text": "flow of the code what we could do is inject these commands dead beef is a magic number we",
    "start": "1026400",
    "end": "1033600"
  },
  {
    "text": "chose to tell the hypervisor that it's actually time to crash and in3 shifts",
    "start": "1033600",
    "end": "1039319"
  },
  {
    "text": "control back to the hypervisor like we explained earlier and after in3 executes",
    "start": "1039319",
    "end": "1044640"
  },
  {
    "text": "and control is shifted back to the hypervisor we end up on this line of code and this is the code that we injected",
    "start": "1044640",
    "end": "1051919"
  },
  {
    "text": "basically what we do is we first check if edx is equal to dead beef the same",
    "start": "1051919",
    "end": "1057160"
  },
  {
    "text": "dead beef we placed in it earlier and if so we'll crash the hypervisor using another N3 command but otherwise we'll",
    "start": "1057160",
    "end": "1064120"
  },
  {
    "text": "just resume the normal flow and that's how we actually discover the value of Rax in the crash as we can",
    "start": "1064120",
    "end": "1069679"
  },
  {
    "text": "see here on the left now this was a tremendous",
    "start": "1069679",
    "end": "1075679"
  },
  {
    "text": "tremendous breakthrough for us because For the First Time in our research process process and probably all the research process of this software PLC",
    "start": "1075679",
    "end": "1082880"
  },
  {
    "text": "you could actually see what goes on inside during runtime and up until this point we could all we could do was",
    "start": "1082880",
    "end": "1088799"
  },
  {
    "text": "statically reverse engineer the assembly code but it was very very frustrating",
    "start": "1088799",
    "end": "1093840"
  },
  {
    "text": "because for some reason stopped working at some parts of the code like it work here work there in random places it",
    "start": "1093840",
    "end": "1099520"
  },
  {
    "text": "stopped working so we tried to actually pinpoint the point of failure see where this",
    "start": "1099520",
    "end": "1105120"
  },
  {
    "text": "stopped working and using binary search attempted to crash the software PLC until we actually found the point of",
    "start": "1105120",
    "end": "1111480"
  },
  {
    "text": "failure and the point of failure turned out to be this LT command which modifies",
    "start": "1111480",
    "end": "1116600"
  },
  {
    "text": "the IDT the interrupt descriptor table what is this IDT anyways it's a",
    "start": "1116600",
    "end": "1122960"
  },
  {
    "text": "kernel structure pointed to by the idtr register and each entry points to a",
    "start": "1122960",
    "end": "1128559"
  },
  {
    "text": "different interrupt handle so in our case when N3 is executed the in3 Handler",
    "start": "1128559",
    "end": "1135039"
  },
  {
    "text": "shifts control from the software PLC back to the hypervisor but if the IDT is changed and the",
    "start": "1135039",
    "end": "1141640"
  },
  {
    "text": "Handler is changed it can prevent control from shifting back so we overcame this by replacing",
    "start": "1141640",
    "end": "1148679"
  },
  {
    "text": "the N3 instruction with the VM call instruction basically VM call does the same it shifts control back to the",
    "start": "1148679",
    "end": "1155280"
  },
  {
    "text": "hypervisor without going through the ID te so before our break point used to look like this like in the example we",
    "start": "1155280",
    "end": "1161679"
  },
  {
    "text": "showed you well we changed it to use VM call instead of",
    "start": "1161679",
    "end": "1166600"
  },
  {
    "text": "N3 and that's how we gained another point in our game and actually leveled up and we were ready to continue to the",
    "start": "1167360",
    "end": "1173480"
  },
  {
    "text": "next part of our research but just before we continue let's do a quick recap of what we managed to do up until",
    "start": "1173480",
    "end": "1179120"
  },
  {
    "text": "this point so first via a vulnerability in the hypervisor that we found we were",
    "start": "1179120",
    "end": "1186200"
  },
  {
    "text": "able to easily modify the software PLC using the drag and drop method we showed you in the",
    "start": "1186200",
    "end": "1192360"
  },
  {
    "text": "beginning and by modifying the hypervisor software PLC we were able to leak runtime information",
    "start": "1192360",
    "end": "1199480"
  },
  {
    "text": "from the software PLC and this expedited the next part of our research a lot now",
    "start": "1199480",
    "end": "1206440"
  },
  {
    "text": "I'll be handing the mic over to explain how we leverage this thank you so you might be wondering",
    "start": "1206440",
    "end": "1214400"
  },
  {
    "text": "how did this runtime information actually expedite our research so during our research we found out that static",
    "start": "1214400",
    "end": "1221200"
  },
  {
    "text": "analysis can't always be enough for instance at one point we wanted to see which files were open during runtime so",
    "start": "1221200",
    "end": "1229640"
  },
  {
    "text": "we did use static analysis in order to find the offis skated cisal table and map out several of its functions but it",
    "start": "1229640",
    "end": "1236760"
  },
  {
    "text": "was still hard to see which files were always opened only through the assembly code so what we did is Hook the open CIS",
    "start": "1236760",
    "end": "1243880"
  },
  {
    "text": "call such that the file name will be copied to the registers and then a crash dump will be initiated so as you can see",
    "start": "1243880",
    "end": "1251080"
  },
  {
    "text": "in the example here this file name is aski encoded and saved in the registers in the picture and that's how we could",
    "start": "1251080",
    "end": "1258240"
  },
  {
    "text": "extract back the file name that was opened so for future researchers here's",
    "start": "1258240",
    "end": "1264360"
  },
  {
    "text": "the offis skated CIS call table that we found with several of the functions that we mapped",
    "start": "1264360",
    "end": "1270039"
  },
  {
    "text": "out now these were really tough times because each of these crashes took about",
    "start": "1270039",
    "end": "1275360"
  },
  {
    "text": "5 to six minutes to reproduce they were extremely aone and very tedious but they",
    "start": "1275360",
    "end": "1281360"
  },
  {
    "text": "were crucial for allowing us to debug our debugger as we built",
    "start": "1281360",
    "end": "1286480"
  },
  {
    "text": "it so now we'll get into the actual implementation of our debugger now in order to build a",
    "start": "1286480",
    "end": "1293159"
  },
  {
    "text": "debugger we need a couple of things first of all we need to be able to send debug commands to the software PLC and",
    "start": "1293159",
    "end": "1300880"
  },
  {
    "text": "then we also need to be able to get debug information from the software PLC",
    "start": "1300880",
    "end": "1306360"
  },
  {
    "text": "now a lot of you might be thinking this sounds a lot like a C2 server and you'd be right that's exactly what we're going",
    "start": "1306360",
    "end": "1312240"
  },
  {
    "text": "to do we're going to build a C2 server so that leads us to level two of our game which is breaching The Vault or",
    "start": "1312240",
    "end": "1319720"
  },
  {
    "text": "injecting data to the software PLC so like most people we do our best",
    "start": "1319720",
    "end": "1326880"
  },
  {
    "text": "to avoid hard work but developing a C2 server is extremely hard it would",
    "start": "1326880",
    "end": "1332039"
  },
  {
    "text": "require a lot more research and development like re like finding more CIS calls in the CIS call table but what",
    "start": "1332039",
    "end": "1338520"
  },
  {
    "text": "if I told you that the PLC comes with a C2 server pre-installed that would save us a lot",
    "start": "1338520",
    "end": "1344120"
  },
  {
    "text": "of development time and it even comes with a nice goey so let me introduce you to the plc's web",
    "start": "1344120",
    "end": "1352400"
  },
  {
    "text": "server now the PLC exposes a web server via the software PLC and this makes a",
    "start": "1352400",
    "end": "1357880"
  },
  {
    "text": "lot of sense and has legitimate purposes for instance a technician can connect to it via his cell phone during",
    "start": "1357880",
    "end": "1364559"
  },
  {
    "text": "maintenance but how can we use this into in order to inject data to the software",
    "start": "1364559",
    "end": "1371640"
  },
  {
    "text": "PLC so we'll show you here on the top we have our web client and on the bottom we",
    "start": "1371640",
    "end": "1377039"
  },
  {
    "text": "have the plc now the web client can request any file from the web server",
    "start": "1377039",
    "end": "1382520"
  },
  {
    "text": "including non-existing Pages for instance dbg 7 hello which obviously",
    "start": "1382520",
    "end": "1387919"
  },
  {
    "text": "isn't a real file but when that request gets sent to the web server the web server will attempt to open this",
    "start": "1387919",
    "end": "1394200"
  },
  {
    "text": "socalled file and when that happens that will hit our open hook so our open hook",
    "start": "1394200",
    "end": "1401000"
  },
  {
    "text": "will check if the so-called file name starts with a DB G7 prefix and if so",
    "start": "1401000",
    "end": "1406159"
  },
  {
    "text": "will we will save it in the memory for later use and otherwise we'll just continue with the normal open Flow and retain its",
    "start": "1406159",
    "end": "1412600"
  },
  {
    "text": "original functionality so this might have seemed easy but we just gained a point and",
    "start": "1412600",
    "end": "1419640"
  },
  {
    "text": "leveled up and for the first time ever we could now inject data to the software",
    "start": "1419640",
    "end": "1425360"
  },
  {
    "text": "PLC and we're basically halfway through implementing our C2 server which leads",
    "start": "1425360",
    "end": "1431520"
  },
  {
    "text": "us to level three escaping the bank without getting caught or exfiltrating",
    "start": "1431520",
    "end": "1437000"
  },
  {
    "text": "data from the software our PLC so once again we have our web client on the",
    "start": "1437000",
    "end": "1442880"
  },
  {
    "text": "top and the PLC on the bottom now the web client in this case",
    "start": "1442880",
    "end": "1448600"
  },
  {
    "text": "will request the homepage which is the legitimate page and when this happens several CSS files will be read as well",
    "start": "1448600",
    "end": "1456320"
  },
  {
    "text": "and that's where our hook on the read CIS call will come into action our hook will check if the file",
    "start": "1456320",
    "end": "1462440"
  },
  {
    "text": "that's being read is the Mini web CSS file and if so instead of returning its original contents we'll return the data",
    "start": "1462440",
    "end": "1469120"
  },
  {
    "text": "that we saved earlier into the memory and then after that happens this",
    "start": "1469120",
    "end": "1474200"
  },
  {
    "text": "modified CSS file will be sent to the web client and just like before if it",
    "start": "1474200",
    "end": "1480039"
  },
  {
    "text": "isn't the minu web CSS file will just return will just return its original contents in order to retain the original",
    "start": "1480039",
    "end": "1487279"
  },
  {
    "text": "functionality so here are the results on the left we can see that the Min web CSS file is open in the browser and on the",
    "start": "1487279",
    "end": "1494120"
  },
  {
    "text": "right we can see its contents which is dbg 7 hello which obviously is isn't its original",
    "start": "1494120",
    "end": "1501039"
  },
  {
    "text": "contents so we just leveled up and we got an extra point and we just built a",
    "start": "1501039",
    "end": "1507919"
  },
  {
    "text": "C2 server for the PLC but we're not done yet because we",
    "start": "1507919",
    "end": "1513600"
  },
  {
    "text": "need to finish the final level of the game which is defeating the boss we need",
    "start": "1513600",
    "end": "1519200"
  },
  {
    "text": "to build our debugger so now we'll get into the implementation so first of all in order",
    "start": "1519200",
    "end": "1526799"
  },
  {
    "text": "to build a debugger we need to be able to add our own code and data without interrupting the normal flow so here is",
    "start": "1526799",
    "end": "1534520"
  },
  {
    "text": "the basic layout of any L file or most L files including the software plc's L",
    "start": "1534520",
    "end": "1540039"
  },
  {
    "text": "file and what we did is add a whole new malicious section to it we called that",
    "start": "1540039",
    "end": "1545320"
  },
  {
    "text": "section Hooks and we gave it read write and execute privileges so now we could add our own code and data and manage our",
    "start": "1545320",
    "end": "1552559"
  },
  {
    "text": "own memory during runtime we also wanted to give right privileges to the tech SE",
    "start": "1552559",
    "end": "1558880"
  },
  {
    "text": "so that we could add a break point during runtime but lucky for us the text section was already writable which",
    "start": "1558880",
    "end": "1566000"
  },
  {
    "text": "obviously is a huge security flow so now we'll get into the",
    "start": "1566000",
    "end": "1572279"
  },
  {
    "text": "implementation and the architecture of the debugger so once again we have the web client on the top and the PLC on the",
    "start": "1572279",
    "end": "1579120"
  },
  {
    "text": "bottom now this time the web client will request this funky looking file name",
    "start": "1579120",
    "end": "1584320"
  },
  {
    "text": "which obviously isn't a real file it's a debug command and when this debug command getss sent",
    "start": "1584320",
    "end": "1590440"
  },
  {
    "text": "to the PLC it will hit our open hook and our open hook will take this debug",
    "start": "1590440",
    "end": "1596520"
  },
  {
    "text": "command and send it over to our Command parer the command personer will identify that this is a debug string that this is",
    "start": "1596520",
    "end": "1603000"
  },
  {
    "text": "a debug command thanks to the DB G7 prefix who identify the type of the",
    "start": "1603000",
    "end": "1608039"
  },
  {
    "text": "command thanks to the type's character which in this case is a capital R indicating a read string command now the",
    "start": "1608039",
    "end": "1614880"
  },
  {
    "text": "read string command has only one parameter the address from which to read the string so now thanks to the thanks",
    "start": "1614880",
    "end": "1621600"
  },
  {
    "text": "to the type the appropriate handle will be invoked with the parameters and in this case the read Handler will read the",
    "start": "1621600",
    "end": "1627919"
  },
  {
    "text": "string from that address and save it into the new section that we added for later use and then after this happens",
    "start": "1627919",
    "end": "1635520"
  },
  {
    "text": "the web client will request the homepage and just like earlier we will leak that information through the CSS file to the",
    "start": "1635520",
    "end": "1642760"
  },
  {
    "text": "web client so that's basically how our debugger works the right Handler",
    "start": "1642760",
    "end": "1648919"
  },
  {
    "text": "operates in a very similar fashion to the read Handler and the breakpoint Handler simply copies all the registers",
    "start": "1648919",
    "end": "1654640"
  },
  {
    "text": "and any other information that you'd want to the CSS file sends it to the web client and then continues with a normal",
    "start": "1654640",
    "end": "1661440"
  },
  {
    "text": "flow so now we we'll show you a video demonstration of our debugger so here is the plc's web server on the left we can",
    "start": "1661440",
    "end": "1668720"
  },
  {
    "text": "see that the Min web CSS file is selected and on the right we can see its contents right now it's empty because we",
    "start": "1668720",
    "end": "1676320"
  },
  {
    "text": "didn't write anything to our memory yet now we'll go to our second tab where we'll enter our commands we will start",
    "start": "1676320",
    "end": "1683159"
  },
  {
    "text": "with the read string command that we can see in the URL we can see that the type is R indicating a read string command",
    "start": "1683159",
    "end": "1690480"
  },
  {
    "text": "this command has one parameter the address from which to read the string now we will go back to the web server",
    "start": "1690480",
    "end": "1696760"
  },
  {
    "text": "refresh the page check the contents of minu web CSS and see that test ring appears just like it does in the",
    "start": "1696760",
    "end": "1703600"
  },
  {
    "text": "software PLC back to our commands tab we'll run a right string command this time we're",
    "start": "1703600",
    "end": "1710200"
  },
  {
    "text": "going to overwrite the previous string with phoned after this we will reread",
    "start": "1710200",
    "end": "1715279"
  },
  {
    "text": "the previous string and go back to the homepage now after we refresh the",
    "start": "1715279",
    "end": "1720760"
  },
  {
    "text": "homepage we can see that it's pwned now we will enter a breakpoint",
    "start": "1720760",
    "end": "1726600"
  },
  {
    "text": "command we can see that the type is indicated by the letter b and that we entered the breakpoints",
    "start": "1726600",
    "end": "1733799"
  },
  {
    "text": "address now we will run the software PLC so that the breako will be hit",
    "start": "1733799",
    "end": "1740039"
  },
  {
    "text": "we will refh the homepage and we can see of all the registers and that the PLC",
    "start": "1744440",
    "end": "1750080"
  },
  {
    "text": "continued with",
    "start": "1750080",
    "end": "1753360"
  },
  {
    "text": "flow so the audio got cut out a bit in the end but we just refreshed the homepage and we can see that all the",
    "start": "1759159",
    "end": "1764600"
  },
  {
    "text": "data in the registers appear in the Min web CSS F",
    "start": "1764600",
    "end": "1772240"
  },
  {
    "text": "to so finally after a lot of work and a lot of effort and as you can see a",
    "start": "1774279",
    "end": "1780000"
  },
  {
    "text": "little bit of shooting we finally defeated the boss and we won our little game here and we finally developed our",
    "start": "1780000",
    "end": "1787880"
  },
  {
    "text": "debugger but this little game has real implications on the real world and this",
    "start": "1787880",
    "end": "1793960"
  },
  {
    "text": "must be mitigated so what can be done in order to mitigate what we showed you here",
    "start": "1793960",
    "end": "1799279"
  },
  {
    "text": "today so first of all just some common good practice security mitigations should be instated such as using an aslr",
    "start": "1799279",
    "end": "1806720"
  },
  {
    "text": "in not allowing the text section to be writable Additionally the hypervisor",
    "start": "1806720",
    "end": "1812000"
  },
  {
    "text": "should be an ironclad wall between the two guest operating systems yes Simmons gave us an elegant back door that",
    "start": "1812000",
    "end": "1818440"
  },
  {
    "text": "allowed us to modify the software PLC via the Windows operating system this",
    "start": "1818440",
    "end": "1823480"
  },
  {
    "text": "so-called feature must be removed and as a matter of fact Simmons did attempt to",
    "start": "1823480",
    "end": "1828640"
  },
  {
    "text": "remove it what they did is release a new version of the hypervisor that doesn't allow any unencrypted L file to run as",
    "start": "1828640",
    "end": "1835080"
  },
  {
    "text": "the software PLC but rather only encrypted ones but the only problem is that we can use the same Dragon drop",
    "start": "1835080",
    "end": "1841519"
  },
  {
    "text": "method we showed you earlier to perform a downgrade attack on the hypervisor and use the hypervisor that we used in the",
    "start": "1841519",
    "end": "1847880"
  },
  {
    "text": "in the example here which means that effectively this doesn't really stop any",
    "start": "1847880",
    "end": "1853120"
  },
  {
    "text": "attacker which leads us to our next point there must be a secure boot chain",
    "start": "1853120",
    "end": "1858440"
  },
  {
    "text": "because a secure boot chain is the only real way to prevent from a firmer modification attack on the",
    "start": "1858440",
    "end": "1865440"
  },
  {
    "text": "PLC so what is the impact for future researchers so you may not have noticed",
    "start": "1865440",
    "end": "1871320"
  },
  {
    "text": "but we just entered a whole new age of PLC research and for the first time ever",
    "start": "1871320",
    "end": "1876639"
  },
  {
    "text": "the software PLC can be dynamically debugged and researchers can thoroughly examine and investigate the software",
    "start": "1876639",
    "end": "1883559"
  },
  {
    "text": "plc's firmware but that's not all because all of sim sematic S7 product",
    "start": "1883559",
    "end": "1889559"
  },
  {
    "text": "line share most of their code which means that all of Simmons's latest and newest plc's are now much more",
    "start": "1889559",
    "end": "1898639"
  },
  {
    "text": "vulnerable and what is the security impact of what we showed you here so we",
    "start": "1898639",
    "end": "1904320"
  },
  {
    "text": "showed you how a persistent Trojan Horse could be developed for one of the leading plcs in the market this meler is",
    "start": "1904320",
    "end": "1911880"
  },
  {
    "text": "persistent it can withstand a reboot and it can't easily be detected and we know",
    "start": "1911880",
    "end": "1917960"
  },
  {
    "text": "for a fact that bad actors such as the actors in The Triton attack have been seeking these kinds of capabilities and",
    "start": "1917960",
    "end": "1925240"
  },
  {
    "text": "we now know that it's possible the longer the industry fails to properly secure plc's the greater the",
    "start": "1925240",
    "end": "1933200"
  },
  {
    "text": "risk there are already many plcs out in the wild that are vulnerable to what we",
    "start": "1933200",
    "end": "1938240"
  },
  {
    "text": "showed you here today but they can't be updated since they operate critical infrastructure and they can't afford any",
    "start": "1938240",
    "end": "1945399"
  },
  {
    "text": "downtime so you might want to ask yourselves how safe do you really",
    "start": "1945399",
    "end": "1951880"
  },
  {
    "text": "feel you shouldn't feel safe what you should do is demand secure products and",
    "start": "1951880",
    "end": "1957480"
  },
  {
    "text": "ensure that our modern world stays safe and secure thank you all for your time",
    "start": "1957480",
    "end": "1963080"
  },
  {
    "text": "and if you have any further questions please feel free to contact us or step right up to the microphone",
    "start": "1963080",
    "end": "1969620"
  },
  {
    "text": "[Applause]",
    "start": "1969620",
    "end": "1978350"
  },
  {
    "text": "um thank you thank you for the information um so so critical as you said 7 PLC being worldwide and so much",
    "start": "1978519",
    "end": "1985399"
  },
  {
    "text": "critical plants PL being used uh one question here this when you mentioned this secure boot chain is it a formare",
    "start": "1985399",
    "end": "1992440"
  },
  {
    "text": "Integrity check if it have done in the beginning this should have this uh have made difficult for you to uh extract",
    "start": "1992440",
    "end": "1998880"
  },
  {
    "text": "that content uh I'm not sure if I understood it fully the formare Integrity check during boot time so now",
    "start": "1998880",
    "end": "2005200"
  },
  {
    "text": "there isn't a there isn't a secure boild yeah the secure boot is there now no there is there isn't a secure boot okay",
    "start": "2005200",
    "end": "2011200"
  },
  {
    "text": "okay because usually when this kind of plcs or intelligent devices during in the Boating the for at least if not a",
    "start": "2011200",
    "end": "2018240"
  },
  {
    "text": "secur secure secure boat at least they will former Integrity check they will do the code signing and the formare code",
    "start": "2018240",
    "end": "2024519"
  },
  {
    "text": "signing and then check the code sign before booting um maybe it's not there",
    "start": "2024519",
    "end": "2029760"
  },
  {
    "text": "now um uh that's why you were able to crack that you were able to put that dummy code in the malware the second",
    "start": "2029760",
    "end": "2036360"
  },
  {
    "text": "thing is have you got any c for this you published this thing and got",
    "start": "2036360",
    "end": "2042120"
  },
  {
    "text": "cve so we did contact Simmons and they did patch the hypervisor like we said",
    "start": "2042120",
    "end": "2047360"
  },
  {
    "text": "like they all also said it didn't doesn't really fix it I'm still not sure if there's a cve we're waiting for them",
    "start": "2047360",
    "end": "2053599"
  },
  {
    "text": "to get back to us on that okay now usually the responsibility of the the like researchers like you to publicly",
    "start": "2053599",
    "end": "2060520"
  },
  {
    "text": "apply for an CVS and get CVS from it then then then uh tell to the vendor",
    "start": "2060520",
    "end": "2066480"
  },
  {
    "text": "saying that okay this we are publish the CV it would help the industry like they will get to know because once the CVS",
    "start": "2066480",
    "end": "2072118"
  },
  {
    "text": "are there it's publish nvds at least the the customers will get to know okay there are new CVS are come in the PLC",
    "start": "2072119",
    "end": "2078079"
  },
  {
    "text": "that that create awareness in the the public world we did uh go through a responsible disclosure process yeah I'm",
    "start": "2078079",
    "end": "2084720"
  },
  {
    "text": "just not sure yet if a CV has been thank you yeah",
    "start": "2084720",
    "end": "2091000"
  },
  {
    "text": "published uh hi thank you interesting very interesting work uh frightening",
    "start": "2095480",
    "end": "2100760"
  },
  {
    "text": "work um so what's the current State of Affair and what is your policy with",
    "start": "2100760",
    "end": "2106359"
  },
  {
    "text": "respect to the tool you have done so is it now available to external researchers and how long do you think seans would",
    "start": "2106359",
    "end": "2114839"
  },
  {
    "text": "reasonably take in order to do anything to secure their S7 um so we won't be",
    "start": "2114839",
    "end": "2120400"
  },
  {
    "text": "publishing our tool because we think that it may be dangerous right now to send it out to the world okay and uh",
    "start": "2120400",
    "end": "2125680"
  },
  {
    "text": "regarding uh Simmons I think you should uh ask your questions directly to them they'll probably know better than",
    "start": "2125680",
    "end": "2130960"
  },
  {
    "text": "us no but but you said in your last slide that you have we have opened a new",
    "start": "2130960",
    "end": "2136680"
  },
  {
    "text": "era where it's going to be available to all the researchers to blah blah blah but if the tool is not available that",
    "start": "2136680",
    "end": "2142680"
  },
  {
    "text": "there is no new era right so the tool isn't available but we believe that people can develop it we don't want to",
    "start": "2142680",
    "end": "2149160"
  },
  {
    "text": "give it just like out to everyone we want to show like we want to make PLC safer so we did publish our research um",
    "start": "2149160",
    "end": "2156160"
  },
  {
    "text": "but we still don't want to give the tool right write out to everyone cuz that would still be dangerous right um you could still probably develop it we",
    "start": "2156160",
    "end": "2162040"
  },
  {
    "text": "showed you you have just shown to those who have the right resources that it's",
    "start": "2162040",
    "end": "2167079"
  },
  {
    "text": "possible just do it this way in particular the people behind Triton right yeah but we also showed it",
    "start": "2167079",
    "end": "2173800"
  },
  {
    "text": "Simmons and TR oh it's fine I mean I'm it's it's uh I'm not taking position here I'm just asking what what what is",
    "start": "2173800",
    "end": "2181070"
  },
  {
    "text": "[Laughter] yours as as a policy of our research lab",
    "start": "2181070",
    "end": "2186160"
  },
  {
    "text": "it really depends but as a general policy we don't release code um yes like you said we know that it can be easily",
    "start": "2186160",
    "end": "2193319"
  },
  {
    "text": "reproduced so I think it's kind of like a balance of actually displaying This research so action can be taken because",
    "start": "2193319",
    "end": "2200000"
  },
  {
    "text": "if nobody knows about this it won't be fixed because it's really hard to fix it's really hard to patch this kind of",
    "start": "2200000",
    "end": "2205960"
  },
  {
    "text": "uh bug even if a secure boot chain is initiated and developed for future",
    "start": "2205960",
    "end": "2212560"
  },
  {
    "text": "plc's I don't really see how this can be updated in current plcs in the wild because it requires physical access to",
    "start": "2212560",
    "end": "2219240"
  },
  {
    "text": "the plcs and like installing you know the keys and everything um but still yeah we should I",
    "start": "2219240",
    "end": "2226480"
  },
  {
    "text": "Believe In This research so at least people know what they're are because maybe some of this attacks already exist in the wild and it's better to to know",
    "start": "2226480",
    "end": "2232319"
  },
  {
    "text": "it I know okay thank",
    "start": "2232319",
    "end": "2236359"
  },
  {
    "text": "you okay thank you everybody",
    "start": "2237680",
    "end": "2242119"
  }
]