[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "this session is reverse engineering the Supra ibox exploitation of a Harden MSP 430 based device and your speaker today",
    "start": "120",
    "end": "8360"
  },
  {
    "text": "is Braden Thomas so with",
    "start": "8360",
    "end": "12678"
  },
  {
    "text": "that take it away uh hello everyone and welcome to reverse engineering the super",
    "start": "13400",
    "end": "22039"
  },
  {
    "text": "ibox uh my name is Braden Thomas I'm a senior research scientist at acuant uh where mainly I these days",
    "start": "24160",
    "end": "31920"
  },
  {
    "text": "focus on embedded devices reverse engineering and exploit development",
    "start": "31920",
    "end": "36960"
  },
  {
    "text": "prior to acuant I worked at Apple product security so I have a very software based perspective on Hardware",
    "start": "36960",
    "end": "44079"
  },
  {
    "text": "attacks today we're going to talk about the super ibox so I'll show you what the",
    "start": "44079",
    "end": "49120"
  },
  {
    "text": "ibox is uh we'll talk about the Android app that uh accompanies the device uh",
    "start": "49120",
    "end": "55079"
  },
  {
    "text": "I'll show you how to open the device uh perform firmware extraction which techniques I use used and and which",
    "start": "55079",
    "end": "60760"
  },
  {
    "text": "techniques I tried to use uh we'll cover the findings and then I'll show you a couple",
    "start": "60760",
    "end": "66240"
  },
  {
    "text": "demos but before we get into all that let's talk about why this is interesting uh with Kickstarter and The",
    "start": "66240",
    "end": "73280"
  },
  {
    "text": "Internet of Things uh you're seeing a lot more devices being created there's just a massive proliferation of embedded",
    "start": "73280",
    "end": "79840"
  },
  {
    "text": "devices uh but at the same time there's this increased scrutiny on security uh",
    "start": "79840",
    "end": "85040"
  },
  {
    "text": "and with you know these devices being created on a shoestring budget",
    "start": "85040",
    "end": "90640"
  },
  {
    "text": "um they're they want to incorporate Security in some sort of you know cryptographic protocol and exchange but",
    "start": "90640",
    "end": "97360"
  },
  {
    "text": "they're storing you know manufacturers are storing secrets in general purpose microcontrollers uh which is super cheap",
    "start": "97360",
    "end": "104000"
  },
  {
    "text": "and easy but it's not necessarily the best idea uh and the eyebox uh is a",
    "start": "104000",
    "end": "109240"
  },
  {
    "text": "great case study of why that is and finally uh because when you perform",
    "start": "109240",
    "end": "114560"
  },
  {
    "text": "these attacks you can hack into houses and that's just inherently cool",
    "start": "114560",
    "end": "120399"
  },
  {
    "start": "120000",
    "end": "120000"
  },
  {
    "text": "so what is the eyebox it's a real estate physical key container uh if you've ever",
    "start": "120399",
    "end": "126240"
  },
  {
    "text": "bought a house you've most likely seen one of these as it's number one in the market the competition is central lock",
    "start": "126240",
    "end": "133239"
  },
  {
    "text": "basically when you're selling a house you put your keys inside and you hang it on your door and uh other agents can",
    "start": "133239",
    "end": "138840"
  },
  {
    "text": "come up they can open the eyebox with uh with their smartphones there's three models uh",
    "start": "138840",
    "end": "144959"
  },
  {
    "text": "currently on the market there's the older ibox uh which has been around for a long time it's IR based only there's",
    "start": "144959",
    "end": "151200"
  },
  {
    "text": "the newer Bluetooth eye box uh which uses uh Legacy Bluetooth and then there's the the Bluetooth LE model which",
    "start": "151200",
    "end": "157760"
  },
  {
    "text": "just came out this past year now to actually open one of these devices you're going to need a key and",
    "start": "157760",
    "end": "163879"
  },
  {
    "text": "the traditional key was called the active key it incorporates a cell radio inside of it uh but almost everyone",
    "start": "163879",
    "end": "170920"
  },
  {
    "text": "these days uses e key which is an IOS and Android app uh because it's you know you don't have to pay for an extra cell",
    "start": "170920",
    "end": "177239"
  },
  {
    "text": "radio plan um now you're most likely also going to be using a dongle or a key fob",
    "start": "177239",
    "end": "183319"
  },
  {
    "text": "uh dongle if uh you're using an iPhone for example and you're trying to communicate over Legacy Bluetooth uh or",
    "start": "183319",
    "end": "189280"
  },
  {
    "text": "a key fob if you're trying to communicate over uh IR so they have these Bluetooth to IR uh key",
    "start": "189280",
    "end": "197440"
  },
  {
    "text": "fobs so first the Android app uh you know I went after the Android app because it's it's obviously super easy",
    "start": "197440",
    "end": "203280"
  },
  {
    "start": "201000",
    "end": "201000"
  },
  {
    "text": "to decompile and reverse engineer I focused on their authentication algorithm to open the key box and what",
    "start": "203280",
    "end": "209879"
  },
  {
    "text": "immediately discovered is that each key has a serial number and a CIS code is what they call it now CIS code is just",
    "start": "209879",
    "end": "215360"
  },
  {
    "text": "an integer that uh represents the geographical Market that the uh that the key can be used in uh for example I'm",
    "start": "215360",
    "end": "222840"
  },
  {
    "text": "from Atlanta and Atlanta has a single CIS code um and some larger metropolitan",
    "start": "222840",
    "end": "228920"
  },
  {
    "text": "areas might have multiple CIS codes like Southern California is obviously huge so they have a few uh and the very first",
    "start": "228920",
    "end": "235720"
  },
  {
    "text": "thing the Eek app needs when you run it is that serial number and CIS code uh it asked for it in the form of an obus",
    "start": "235720",
    "end": "242120"
  },
  {
    "text": "skated blob that you have to provide uh presumably you get that from your MLS",
    "start": "242120",
    "end": "248760"
  },
  {
    "text": "Association once uh the app has the serial number in CIS code it uses that as a credential to speak to their",
    "start": "250959",
    "end": "256639"
  },
  {
    "text": "back-end web service it's actually the only credential used uh the web service will provide it with authentication",
    "start": "256639",
    "end": "263040"
  },
  {
    "text": "cookies and that's what they call them they're just binary Blobs of data when you're attempting to open the",
    "start": "263040",
    "end": "269000"
  },
  {
    "text": "ibox the app will then transmit those cookies to the ibox over Bluetooth or IR",
    "start": "269000",
    "end": "274479"
  },
  {
    "text": "uh now the key to their security is that the agent must uh provide a pin code",
    "start": "274479",
    "end": "280240"
  },
  {
    "text": "okay in addition to these cookies and that PIN code is associated with their serial number or CIS code up in super",
    "start": "280240",
    "end": "286919"
  },
  {
    "text": "server somewhere uh and that's required to open the actual",
    "start": "286919",
    "end": "292159"
  },
  {
    "text": "lot uh the other thing I discovered when I reversed the app was that there's two authentication modes programmed and",
    "start": "292520",
    "end": "298960"
  },
  {
    "start": "293000",
    "end": "293000"
  },
  {
    "text": "deprogrammed authentication now deprogrammed is is rarely used it's only used like if a lock is moving between",
    "start": "298960",
    "end": "305520"
  },
  {
    "text": "CIS codes uh and uh if you're actually out in the wild and you're opening a house uh you're going to be using",
    "start": "305520",
    "end": "311840"
  },
  {
    "text": "programmed off uh programmed off is very complex and there's a lot of uh",
    "start": "311840",
    "end": "317440"
  },
  {
    "text": "cryptography involved in it uh but from a very high level what it looks like is you're going to be sending a cookie",
    "start": "317440",
    "end": "323680"
  },
  {
    "text": "called the identity cookie then you're going to be sending the configuration cookie then you're sending an obtained",
    "start": "323680",
    "end": "328720"
  },
  {
    "text": "key message uh that uh that incorporates the PIN code that user pin code uh then",
    "start": "328720",
    "end": "334400"
  },
  {
    "text": "you're sending a kioo cookie and then finally you're sending the device open message and at that point if all those",
    "start": "334400",
    "end": "341000"
  },
  {
    "text": "cookies and messages pass a lot of different validations then the device will actually open and uh this this",
    "start": "341000",
    "end": "348360"
  },
  {
    "text": "can't be replayed uh additionally all those cookies contain uh AES Max so you cannot",
    "start": "348360",
    "end": "356160"
  },
  {
    "text": "modify them successfully um on top of that the uh the Eek app also",
    "start": "356160",
    "end": "362600"
  },
  {
    "text": "sends what they call update bytes uh with every attempt to open a lock and those change every single day and the",
    "start": "362600",
    "end": "368880"
  },
  {
    "text": "only way to even get them is from Super server and they are themselves in as Mac",
    "start": "368880",
    "end": "374120"
  },
  {
    "text": "uh additionally um while the E key is in a CIS code uh and has a serial number",
    "start": "374120",
    "end": "380199"
  },
  {
    "text": "every ibox also has a serial number in CIS code and to open a particular eyebox",
    "start": "380199",
    "end": "385240"
  },
  {
    "text": "for the most part those CIS codes must match so it's getting pretty clear that",
    "start": "385240",
    "end": "391160"
  },
  {
    "start": "391000",
    "end": "391000"
  },
  {
    "text": "uh we're going to have to access that I had to access the firmware of the ibox to figure out anything else uh for one",
    "start": "391160",
    "end": "397560"
  },
  {
    "text": "as an attacker I don't have a valid serial number or CIS code because I'm not a real estate",
    "start": "397560",
    "end": "402759"
  },
  {
    "text": "agent even if I were able to obtain one via social engineering uh I most likely",
    "start": "402759",
    "end": "408240"
  },
  {
    "text": "wouldn't be able to obtain the PIN code as well I'm not a very good social",
    "start": "408240",
    "end": "413919"
  },
  {
    "text": "engineer uh and finally I don't want to communicate with super server to obtain those off cookies because then and you",
    "start": "413919",
    "end": "420039"
  },
  {
    "text": "know I'll be leaving a trace that that I was hacking and and they'll come after",
    "start": "420039",
    "end": "427039"
  },
  {
    "text": "me so let's get the device open uh to open an eyebox the first",
    "start": "427039",
    "end": "433360"
  },
  {
    "start": "432000",
    "end": "432000"
  },
  {
    "text": "thing you need to do is cut off this uh hard plastic shell that uh surrounds the",
    "start": "433360",
    "end": "438599"
  },
  {
    "text": "eyebox and you'll be left with just the the metal underneath it you'll need to",
    "start": "438599",
    "end": "443639"
  },
  {
    "text": "remove a couple of hex screws uh the next part's a little tricky CU you got to open the key",
    "start": "443639",
    "end": "449240"
  },
  {
    "text": "container container uh the only way to do that is either use a legitimate e key or an exploit and obviously I haven't",
    "start": "449240",
    "end": "454800"
  },
  {
    "text": "told you any exploits yet so you'll just have to trust me that's possible uh now if you're opening an",
    "start": "454800",
    "end": "460639"
  },
  {
    "text": "eyebox Bluetooth uh it's a little trickier you got to also cut off the shackle and you have to pop two rivets",
    "start": "460639",
    "end": "467639"
  },
  {
    "text": "on the back and it's just a huge pain you got to primy them up with a screwdriver and saw the tops off I've",
    "start": "467639",
    "end": "473479"
  },
  {
    "text": "done it a few times and it's amazing I still have all my fingers",
    "start": "473479",
    "end": "478759"
  },
  {
    "text": "when you can finally access the board this is what you will see uh the eyebox uh is on the top and bottom is on the",
    "start": "479560",
    "end": "486360"
  },
  {
    "start": "480000",
    "end": "480000"
  },
  {
    "text": "left and the eyebox Bluetooth uh top and bottom is on the right as you can see",
    "start": "486360",
    "end": "491639"
  },
  {
    "text": "they both have a a fairly large microcontroller uh on the top that's the MSP the the Bluetooth LE is basically",
    "start": "491639",
    "end": "499000"
  },
  {
    "text": "identical to the Bluetooth except uh the the Bluetooth chip is swapped out with a",
    "start": "499000",
    "end": "504159"
  },
  {
    "text": "Bluetooth El chip so uh those MSP",
    "start": "504159",
    "end": "509960"
  },
  {
    "start": "507000",
    "end": "507000"
  },
  {
    "text": "uh what you saw in the eyebox it's a 147 which is in TI's one series of msps",
    "start": "509960",
    "end": "515518"
  },
  {
    "text": "pretty old uh the Bluetooth upgrades to an MSP in the two series uh they both have a Serial uh IR",
    "start": "515519",
    "end": "524279"
  },
  {
    "text": "transceiver which is actually bit banged um though the Bluetooth also has a SD",
    "start": "524279",
    "end": "530680"
  },
  {
    "text": "micro Electronics Bluetooth serial module now they both have eoms as well and the only thing really stored in the",
    "start": "530680",
    "end": "536880"
  },
  {
    "text": "eom is the visitor log so every time you um you open a house uh",
    "start": "536880",
    "end": "544279"
  },
  {
    "text": "the device will store that a particular key opened this key box in that visitor",
    "start": "544279",
    "end": "549920"
  },
  {
    "text": "log in the eom so this was my my steps that I",
    "start": "549920",
    "end": "555399"
  },
  {
    "start": "553000",
    "end": "553000"
  },
  {
    "text": "decided to take to reverse engineer the device uh first I decided to focus on the eyebox the traditional eyebox and",
    "start": "555399",
    "end": "562640"
  },
  {
    "text": "the reason I did that is because for one that board is super easy to obtain you know I don't need to pop those rivets",
    "start": "562640",
    "end": "568720"
  },
  {
    "text": "and potentially lose fingers as everyone here knows older software is much more likely to be",
    "start": "568720",
    "end": "574440"
  },
  {
    "text": "insecure so it's a better Target for that reason and the the important part",
    "start": "574440",
    "end": "579839"
  },
  {
    "text": "is that the cryptographic material on both devices or on all those models is identical the same e key is used to open",
    "start": "579839",
    "end": "587240"
  },
  {
    "text": "the older eyebox as is used to open the the brand new uh Bluetooth LE so if I",
    "start": "587240",
    "end": "592360"
  },
  {
    "text": "can compromise the old eyebox I can open a brand new La so my process was first map out test",
    "start": "592360",
    "end": "599800"
  },
  {
    "text": "pads and and you can see I created this image as as my own reference uh and",
    "start": "599800",
    "end": "605000"
  },
  {
    "text": "that's just via simple continuity testing and a data sheet find debugging interfaces and perform firmware",
    "start": "605000",
    "end": "610920"
  },
  {
    "text": "extraction through those debugging",
    "start": "610920",
    "end": "614160"
  },
  {
    "start": "616000",
    "end": "616000"
  },
  {
    "text": "interfaces now generally if you're going to perform firmware extraction against an MSP you have two options you have",
    "start": "616240",
    "end": "622839"
  },
  {
    "text": "JTAG first and there's four wire and two wire uh variants of JTAG though the 147",
    "start": "622839",
    "end": "629519"
  },
  {
    "text": "which was my target only supports four wire and the first thing you notice when you hook it up is that the JTAG security",
    "start": "629519",
    "end": "635760"
  },
  {
    "text": "fuse is blown so JTAG is entirely prohibited and that leaves us with",
    "start": "635760",
    "end": "642040"
  },
  {
    "text": "BSL a BSL is TI's bootstrap loader protocol it's a Serial interface that",
    "start": "642040",
    "end": "647800"
  },
  {
    "start": "643000",
    "end": "643000"
  },
  {
    "text": "permits read write access to flash memory now BSL is actually implemented using Code that is stored in a special",
    "start": "647800",
    "end": "654440"
  },
  {
    "text": "readon uh for this uh line of chips in a special readon memory uh region of Flash",
    "start": "654440",
    "end": "661680"
  },
  {
    "text": "the problem with BSL is that nearly all access to BSL is restricted with a password and cleverly TI used the",
    "start": "661680",
    "end": "669279"
  },
  {
    "text": "interrupt Vector table uh it's a 32 by uh password from the interrupt Vector table which is inherently unique and",
    "start": "669279",
    "end": "676560"
  },
  {
    "text": "secret it's Unique because uh every software project has different code so they're going to have different",
    "start": "676560",
    "end": "682600"
  },
  {
    "text": "interrupt Vector addresses and it's secret because I don't know your code I'm trying to figure out what your code",
    "start": "682600",
    "end": "688839"
  },
  {
    "text": "is so obviously I don't know what your interrupt Vector addresses are as well there's only one command that you",
    "start": "688839",
    "end": "695279"
  },
  {
    "text": "can perform uh when you uh don't have that password and that's a mass erase",
    "start": "695279",
    "end": "700800"
  },
  {
    "text": "and that'll erase all of Flash and it'll reset that interrupt Vector table back to all fs and then it's a default",
    "start": "700800",
    "end": "706680"
  },
  {
    "text": "password and you can you can connect over BSL but you you've lost all",
    "start": "706680",
    "end": "712040"
  },
  {
    "start": "712000",
    "end": "712000"
  },
  {
    "text": "flash so in 2008 Travis Goodspeed released a white paper called uh",
    "start": "712040",
    "end": "717079"
  },
  {
    "text": "practical attacks against the msp430 BS L uh where he described uh two two",
    "start": "717079",
    "end": "722920"
  },
  {
    "text": "attacks the first was a voltage glitching attack and the second was a BSL password comparison timing",
    "start": "722920",
    "end": "730880"
  },
  {
    "text": "attack so I first attempted to perform the voltage glitching attack and I had a good fet 22 kind of lying around and",
    "start": "730880",
    "end": "737920"
  },
  {
    "start": "732000",
    "end": "732000"
  },
  {
    "text": "that has an adg 1634 on it which is a digitally controlled analog switch uh it",
    "start": "737920",
    "end": "743560"
  },
  {
    "text": "allows you to switch between uh two analog inputs using a digital line I",
    "start": "743560",
    "end": "748760"
  },
  {
    "text": "used the onboard Dack on the good fet which is the digital to analog converter to Define sort of the high and low",
    "start": "748760",
    "end": "754120"
  },
  {
    "text": "voltages uh to glitch between uh during the the authentication check I removed the chip from the board",
    "start": "754120",
    "end": "761240"
  },
  {
    "text": "to eliminate any kind of electrical interference like a capacitor and I step down the power on all the data lines",
    "start": "761240",
    "end": "766680"
  },
  {
    "text": "because the MSP runs on such low power that a full power data line will actually prevent glitching now I should",
    "start": "766680",
    "end": "773440"
  },
  {
    "text": "note that this attack is only feasible against BSL 1.x because in BSL 2.x they",
    "start": "773440",
    "end": "778920"
  },
  {
    "text": "add did a mass erase on the incorrect password um so obviously if you're",
    "start": "778920",
    "end": "784279"
  },
  {
    "text": "glitching you're going to need to be performing lots of attempts at sending the incorrect password and then",
    "start": "784279",
    "end": "789959"
  },
  {
    "text": "glitching um and if it erases all a flash on the very first attempt then you",
    "start": "789959",
    "end": "795320"
  },
  {
    "text": "know you're kind of screwed but uh luckily for me the 147 runs BSL",
    "start": "795320",
    "end": "801360"
  },
  {
    "text": "1.1 this attack was a failure uh so I when I attempted this device either",
    "start": "801760",
    "end": "807240"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "continued running undeterred or died all Al together and I brute forced uh the",
    "start": "807240",
    "end": "812680"
  },
  {
    "text": "every possible low voltage uh to determine if there was a sweet spot between those two states where it would",
    "start": "812680",
    "end": "818959"
  },
  {
    "text": "glitch and uh I did not find one and my conclusion is that the MSP 430 in the",
    "start": "818959",
    "end": "824440"
  },
  {
    "text": "good fet 22 is actually too slow to glitch another MSP uh BSL runs around 1 MHz and the",
    "start": "824440",
    "end": "831079"
  },
  {
    "text": "good fet uh you can clock it up to 16 MHz but I still think that uh it it's",
    "start": "831079",
    "end": "836920"
  },
  {
    "text": "too slow to do glitching using that adg so I moved on next to the BSL timing",
    "start": "836920",
    "end": "843120"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "attack and what Travis discovered is that the password by comparison has a single clock cycle difference between",
    "start": "843120",
    "end": "849240"
  },
  {
    "text": "the correct and incorrect paths um if you look at this code here uh I'm not",
    "start": "849240",
    "end": "854480"
  },
  {
    "text": "sure if you're going to if you can see it but uh basically the code reads the uh interrupt Vector table uh address or",
    "start": "854480",
    "end": "862240"
  },
  {
    "text": "gets it and then it receives a bite and every time it receives a bite it Compares that received bite to what the",
    "start": "862240",
    "end": "867959"
  },
  {
    "text": "correct expected bite is is if they're not the same then it takes an extra clock cycle uh oring a knack into a",
    "start": "867959",
    "end": "875519"
  },
  {
    "text": "global or will s Knack is what I call it into the global state so what Travis's approach was was",
    "start": "875519",
    "end": "883160"
  },
  {
    "text": "to send every possible bite so like 000000 32 times uh 0 1 0 1 01 32 times",
    "start": "883160",
    "end": "890360"
  },
  {
    "text": "fffff 32 times uh and send each so that's 256 attempts okay and uh for each",
    "start": "890360",
    "end": "897639"
  },
  {
    "text": "possible bite measure the number of clock Cycles the device takes to process each of those and from there you can",
    "start": "897639",
    "end": "904199"
  },
  {
    "text": "determine what the bite makeup of the password is so what you would expect to see is um all the bites that don't",
    "start": "904199",
    "end": "910279"
  },
  {
    "text": "appear in the password would have like a baseline uh amount of time that it takes",
    "start": "910279",
    "end": "916040"
  },
  {
    "text": "and then any bite that appeared once would be like one clock cycle longer or twice take two clock Cycles longer and",
    "start": "916040",
    "end": "921880"
  },
  {
    "text": "on and on now since the device receives the bite in between each of these you really",
    "start": "921880",
    "end": "929600"
  },
  {
    "start": "925000",
    "end": "925000"
  },
  {
    "text": "need to think about what uh the communication looks like on the wire uh now it's I said I mentioned it's serial",
    "start": "929600",
    "end": "935920"
  },
  {
    "text": "so there's one start bit eight data bits a parody bit and a stop bit it's bitbang by BSL",
    "start": "935920",
    "end": "941759"
  },
  {
    "text": "code now the problem that the the most significant problem is that between the bytes between the the stop bit of one",
    "start": "941759",
    "end": "949079"
  },
  {
    "text": "bite and the start bit of the next bite the device will wait for that start bit to go low before uh before doing its",
    "start": "949079",
    "end": "957399"
  },
  {
    "text": "bite re receive routine and that's a busy weight so it just says is the line low no do that again um and",
    "start": "957399",
    "end": "966720"
  },
  {
    "text": "as soon as you've let it go through that Loop more than just one single time you've destroyed all prior timing",
    "start": "966720",
    "end": "973040"
  },
  {
    "text": "information because then the the processor or the microcontroller has busy waited for some indeterminate",
    "start": "973040",
    "end": "979480"
  },
  {
    "text": "number of clock cycles and we have no idea you know how many clock Cycles were taken in the",
    "start": "979480",
    "end": "984519"
  },
  {
    "text": "past additionally the device will check that the line is high after the stop bit",
    "start": "984519",
    "end": "990440"
  },
  {
    "text": "um and if it's not it'll cause an error so let's look at this graphically you see b n minus one stop",
    "start": "990440",
    "end": "997120"
  },
  {
    "text": "bit and then uh the The Next Bite start bit um and you see where the device checks and then uh where all timing",
    "start": "997120",
    "end": "1004560"
  },
  {
    "text": "information is destroyed if that start bit line is not low the time between those the the stop",
    "start": "1004560",
    "end": "1011880"
  },
  {
    "text": "bit and the start bit I call the inby timing and obviously we're going to want to calculate or determine what the ideal",
    "start": "1011880",
    "end": "1019360"
  },
  {
    "text": "in bite timing is so that we can perform this attack now it's easy just to say the",
    "start": "1019360",
    "end": "1025038"
  },
  {
    "text": "ideal in bite timing is the number of instructions run times the clock speed uh but what you quickly discover is that",
    "start": "1025039",
    "end": "1031400"
  },
  {
    "text": "both the clock speed is highly inconsistent and that's because BSL uses the software based clock the dco clock",
    "start": "1031400",
    "end": "1038199"
  },
  {
    "text": "uh you can't force it to use a crystal because it's running its own code but also the number of instructions that",
    "start": "1038199",
    "end": "1044280"
  },
  {
    "text": "actually run Vari due to the timing vulnerability itself so you could have",
    "start": "1044280",
    "end": "1049640"
  },
  {
    "text": "you have no idea one or more or fewer uh instructions ran additionally any mistakes you make",
    "start": "1049640",
    "end": "1057640"
  },
  {
    "text": "with a non- ideal inner bite timing will be multiplied by 34 times because you",
    "start": "1057640",
    "end": "1062880"
  },
  {
    "text": "have 32 bytes plus a two by check Su so again looking at it graphically uh",
    "start": "1062880",
    "end": "1071679"
  },
  {
    "text": "assume that the default state has a very large inite timing and so uh in the default in normal serial timing uh the",
    "start": "1071679",
    "end": "1079280"
  },
  {
    "text": "inite timing is too large and the device will wake up before the start bit and it'll busy wait until it sees that start",
    "start": "1079280",
    "end": "1085400"
  },
  {
    "text": "bit uh now in in our case since we're performing attack we that'll give us bad",
    "start": "1085400",
    "end": "1090559"
  },
  {
    "text": "data because all that timing info is destroyed now we're going to slowly decrease the in bite timing to try to",
    "start": "1090559",
    "end": "1096880"
  },
  {
    "text": "find the ideal but say we take it too far uh that there's a couple bad things",
    "start": "1096880",
    "end": "1102880"
  },
  {
    "text": "that could happen uh for one uh it could check that the start the stop bit is uh",
    "start": "1102880",
    "end": "1108799"
  },
  {
    "text": "is high when it's really still low and that'll cause an error or the device could wake up after the start bit",
    "start": "1108799",
    "end": "1114600"
  },
  {
    "text": "entirely and that's a giant disaster because then it'll it'll busy weit all the way until data bit one and it'll",
    "start": "1114600",
    "end": "1120440"
  },
  {
    "text": "think that's the start bit and all serial communication will be bit shifted by one it's a big",
    "start": "1120440",
    "end": "1126520"
  },
  {
    "text": "mess if you're attempting to perform this attack on the target ship itself",
    "start": "1127520",
    "end": "1132600"
  },
  {
    "text": "which you don't know the password for uh or rather if you're attempting to to determine the ideal inner bite timing",
    "start": "1132600",
    "end": "1138840"
  },
  {
    "text": "kind of screwed first of all the uh you don't know the password and you don't",
    "start": "1138840",
    "end": "1145039"
  },
  {
    "text": "know what the timing is so if you if you get the timing wrong if the device wakes up too early or something you're going",
    "start": "1145039",
    "end": "1151559"
  },
  {
    "text": "to get a knack but since the password is inherently wrong you're also going to get a knack so there's no good way to",
    "start": "1151559",
    "end": "1157640"
  },
  {
    "text": "determine the the ideal in bite timing when you don't know the password you're always going to get a",
    "start": "1157640",
    "end": "1163960"
  },
  {
    "start": "1164000",
    "end": "1164000"
  },
  {
    "text": "knack therefore my game plan was to test this attack uh on a same model chip",
    "start": "1164039",
    "end": "1169840"
  },
  {
    "text": "where the BSL password is known to find that ideal timing uh I used an external",
    "start": "1169840",
    "end": "1175240"
  },
  {
    "text": "Crystal on my good fet so I knew there were no attacker side problems uh and I slowly decreased the in bite timing",
    "start": "1175240",
    "end": "1182000"
  },
  {
    "text": "until the uh the correct password is no longer act uh when I find the overall run with",
    "start": "1182000",
    "end": "1188640"
  },
  {
    "text": "the lowest overall time I know I've eliminated all those busy weight Cycles uh I know that it was still act so I",
    "start": "1188640",
    "end": "1194840"
  },
  {
    "text": "didn't go too far uh I found the ideal in bite time and then I can take that in bite time and I can use it against the",
    "start": "1194840",
    "end": "1201200"
  },
  {
    "text": "target chip and perform the timing attack this is what I got so as you can",
    "start": "1201200",
    "end": "1207000"
  },
  {
    "start": "1206000",
    "end": "1206000"
  },
  {
    "text": "see uh along the x- axis I'm slowly uh decreasing the in bite timing by a certain amount and then on the y- axis",
    "start": "1207000",
    "end": "1214159"
  },
  {
    "text": "you see the total overall time it takes and it's a linear decrease because I'm I'm just linearly removing busy weight",
    "start": "1214159",
    "end": "1220640"
  },
  {
    "text": "Cycles until we reach a minimum and at that point the correct password is no longer acknowledged and we found the",
    "start": "1220640",
    "end": "1227480"
  },
  {
    "text": "ideal in bite time so that looks really good at the macro",
    "start": "1227480",
    "end": "1234600"
  },
  {
    "text": "level the problem is it's wildly inconsistent when you get down to the micro level the overall time it takes",
    "start": "1234600",
    "end": "1240960"
  },
  {
    "text": "that to process the password varies by thousands of attacker clock Cycles which is obviously just crazy um keeping in",
    "start": "1240960",
    "end": "1249679"
  },
  {
    "text": "mind that the the attacker clock is running 16 times faster than the victim clock but still that's crazy uh so the",
    "start": "1249679",
    "end": "1256280"
  },
  {
    "text": "first thing I did was I attempted to modify BS C to expose the time at which it's actually testing the line by",
    "start": "1256280",
    "end": "1263480"
  },
  {
    "text": "twiddling the RX line by doing this I was able to confirm that you know I'm finding the ideal inner bite time uh and",
    "start": "1263480",
    "end": "1271120"
  },
  {
    "text": "it all looks you know pretty good um but what I discovered is that",
    "start": "1271120",
    "end": "1277120"
  },
  {
    "text": "um regardless of that uh the timing is still super",
    "start": "1277120",
    "end": "1282559"
  },
  {
    "text": "inconsistent and I believe this was mostly due to the dco clock so I tried just focusing on the",
    "start": "1282559",
    "end": "1288799"
  },
  {
    "text": "very last bite of the password and and with the last bite of the password if you just focus on getting that one bite",
    "start": "1288799",
    "end": "1294720"
  },
  {
    "text": "correctly then you only have to worry about the inner bite times that come after that so you only have to worry about uh those three inner bite times",
    "start": "1294720",
    "end": "1302000"
  },
  {
    "text": "for the last bite and the two bite check some this was my",
    "start": "1302000",
    "end": "1307600"
  },
  {
    "start": "1305000",
    "end": "1305000"
  },
  {
    "text": "result so this is with an ideal in bite time okay I ran 10,000 times every",
    "start": "1307600",
    "end": "1314919"
  },
  {
    "text": "possible bite uh guessing at that last bite of the password and I measured the overall time it took about 24 hours what",
    "start": "1314919",
    "end": "1323440"
  },
  {
    "text": "you would expect to see in an ideal world is the overall time taking to process that password is a flat line for",
    "start": "1323440",
    "end": "1330880"
  },
  {
    "text": "every possible guest bite except for one the correct bite and that bite would be a single clock cycle lower but instead",
    "start": "1330880",
    "end": "1338039"
  },
  {
    "text": "we have this the attack was obviously a failure I believe it was a failure due",
    "start": "1338039",
    "end": "1345400"
  },
  {
    "start": "1341000",
    "end": "1341000"
  },
  {
    "text": "to the bsl's dco clock that software clock has inconsistencies during what it",
    "start": "1345400",
    "end": "1351120"
  },
  {
    "text": "calls the tear routine so uh the way BSL determines the timing for seral is it",
    "start": "1351120",
    "end": "1357440"
  },
  {
    "text": "measures the number of clock cycles that occur during its very first serial bit",
    "start": "1357440",
    "end": "1362640"
  },
  {
    "text": "received and it uses that timing that number of clock Cycles to determine the timing for uh the rest of the serial",
    "start": "1362640",
    "end": "1369279"
  },
  {
    "text": "communication effectively the length of the sleeps in its serial communication now if there's any",
    "start": "1369279",
    "end": "1375799"
  },
  {
    "text": "inconsistencies in that number of clock cycles that it measures that that inconsistency will be",
    "start": "1375799",
    "end": "1381159"
  },
  {
    "text": "multiplied for every single bit that it receives so that those errors will be vastly multiplied and they don't appear",
    "start": "1381159",
    "end": "1388159"
  },
  {
    "text": "to average out on the short term so at this point I was super frustrated I had failed to perform both of the attacks",
    "start": "1388159",
    "end": "1394159"
  },
  {
    "text": "that Travis uh describe publicly uh but fortunately there's a third attack the",
    "start": "1394159",
    "end": "1399720"
  },
  {
    "text": "paparazzi attack now this is a firmware extraction technique Travis goodp told",
    "start": "1399720",
    "end": "1405840"
  },
  {
    "text": "me about it uh and it permits bypassing the JTAG security fuse uh and it's due",
    "start": "1405840",
    "end": "1411960"
  },
  {
    "text": "to the photoelectric effect now if you look at the JTAG security fuse uh on MSP 430s it splits",
    "start": "1411960",
    "end": "1419600"
  },
  {
    "start": "1415000",
    "end": "1415000"
  },
  {
    "text": "into two categories the first is the one two and four series of the msps and",
    "start": "1419600",
    "end": "1424880"
  },
  {
    "text": "those use a physical fuse and to blow it or program it as they call it in their",
    "start": "1424880",
    "end": "1429960"
  },
  {
    "text": "documentation you physically blow it up um by pumping a bunch of current into",
    "start": "1429960",
    "end": "1435000"
  },
  {
    "text": "the chip in a certain State now the five and six series of the the chips use an electronic fuse uh and that's just a",
    "start": "1435000",
    "end": "1441600"
  },
  {
    "text": "region in Flash uh that uh you write to it's just a 4 by address at 17 FC um and",
    "start": "1441600",
    "end": "1449200"
  },
  {
    "text": "this attack does not succeed against these these chips so focusing on the the chips where",
    "start": "1449200",
    "end": "1455559"
  },
  {
    "start": "1454000",
    "end": "1454000"
  },
  {
    "text": "the attack actually succeeds the way you physically perform the fuse check is you",
    "start": "1455559",
    "end": "1460919"
  },
  {
    "text": "toggle the TMS line while you keep the TDI line High and the chip measures",
    "start": "1460919",
    "end": "1466320"
  },
  {
    "text": "current that's pumping in through that TDI line across that physical fuse and if it sees current passing across that",
    "start": "1466320",
    "end": "1473159"
  },
  {
    "text": "physical fuse it knows the fuse is intact and it remembers that hey we're going to permit jtac to",
    "start": "1473159",
    "end": "1480799"
  },
  {
    "text": "occur to perform this uh the paparazzi attack first thing you have to do is Decap the chip you're obviously going to",
    "start": "1480799",
    "end": "1487120"
  },
  {
    "text": "want to keep your bonding wires intact because you're going to be um you're going to be doing electrical testing so",
    "start": "1487120",
    "end": "1492960"
  },
  {
    "text": "uh you might need to do jet etching for that um I don't play with acid so I I",
    "start": "1492960",
    "end": "1498159"
  },
  {
    "text": "don't I'm not really sure I just send it off to a lab it cost less than 100 bucks uh and it's so it's cheap and easy so why",
    "start": "1498159",
    "end": "1505600"
  },
  {
    "text": "not next you're going to write a uh you're going to run a tight JTAG Loop uh",
    "start": "1505600",
    "end": "1510679"
  },
  {
    "text": "on the reset tap and fuse check operations uh and for that I use a good fet firmware",
    "start": "1510679",
    "end": "1516960"
  },
  {
    "text": "application uh now every 200 iterations of that Loop you're going to attempt uh an authenticated action uh now when I",
    "start": "1516960",
    "end": "1524799"
  },
  {
    "text": "say an authenticated action I mean an action uh a Comm command that uh that",
    "start": "1524799",
    "end": "1530240"
  },
  {
    "text": "requires the fuse to be intact uh so what I just do is I just read the first address in BSL memory space and the",
    "start": "1530240",
    "end": "1536799"
  },
  {
    "text": "first word in BSL is at c00 and it's a pointer to the entry point of uh BSL",
    "start": "1536799",
    "end": "1542720"
  },
  {
    "text": "code which is at C02 so if I get anything from that that memory read that is C02 I know I've succeeded I bypassed",
    "start": "1542720",
    "end": "1549799"
  },
  {
    "text": "this fuse while you're running this tight JTAG Loop you're going to expose the die",
    "start": "1549799",
    "end": "1555640"
  },
  {
    "text": "and you're going to hit it with a camera flash it's probably going to take a few",
    "start": "1555640",
    "end": "1561559"
  },
  {
    "text": "times when you get valid data you've succeeded and by valid data I mean",
    "start": "1561799",
    "end": "1567919"
  },
  {
    "text": "C02 at this point do not power the chip down or flip the reset line uh obviously",
    "start": "1567919",
    "end": "1573520"
  },
  {
    "text": "this requires a good fet software modification because it likes to reset the chip all the time uh I recommend",
    "start": "1573520",
    "end": "1579320"
  },
  {
    "text": "that you power the chip externally during this attack don't use the good fet uh to power it because uh it tends",
    "start": "1579320",
    "end": "1585520"
  },
  {
    "text": "to use a lot of current for some reason when you hit it with the Flash do not expect the chip to be in a normal",
    "start": "1585520",
    "end": "1591320"
  },
  {
    "text": "State this should be fairly obvious um what I just do is I just read the BSL password and then reset the Chip And",
    "start": "1591320",
    "end": "1597480"
  },
  {
    "text": "then I just do everything over BSL because it eliminates any uh kind of crazy stuff that can occur after you",
    "start": "1597480",
    "end": "1602840"
  },
  {
    "text": "perform this attack if you want you can just dump the whole firmware flash it to another chip",
    "start": "1602840",
    "end": "1608520"
  },
  {
    "text": "uh that uh doesn't have the security fuse blown and you're good to",
    "start": "1608520",
    "end": "1613840"
  },
  {
    "start": "1615000",
    "end": "1615000"
  },
  {
    "text": "go so why does this work um now the JTAG fuse check as I mentioned works by",
    "start": "1615000",
    "end": "1620960"
  },
  {
    "text": "measuring current that's passing across that physical fuse the photoelectric effect is an effect where transistors",
    "start": "1620960",
    "end": "1627600"
  },
  {
    "text": "when they're struck by photons release electrons I believe that the uh high",
    "start": "1627600",
    "end": "1634440"
  },
  {
    "text": "energy photons that are coming from the Xenon flash on a camera this is just standard digital camera are causing",
    "start": "1634440",
    "end": "1640600"
  },
  {
    "text": "current to appear to pass across that fuse now I've heard an alternate theory that perhaps um the UV radiation",
    "start": "1640600",
    "end": "1648720"
  },
  {
    "text": "uh in in the flash is causing the memory cell to get erased uh where the JTAG",
    "start": "1648720",
    "end": "1653880"
  },
  {
    "text": "state is stored like Bunny's attack on the pck microcontroller if you've seen that but I think that's inaccurate because a digital camera flash produces",
    "start": "1653880",
    "end": "1660840"
  },
  {
    "text": "minimal UV and this attack is instantaneous when it when it works whereas a UV you generally need to",
    "start": "1660840",
    "end": "1666200"
  },
  {
    "text": "expose it to UV for a lengthy period of time like minutes let's see a demo",
    "start": "1666200",
    "end": "1675398"
  },
  {
    "text": "so first I'm going to plug in uh my chip I have a 3vt power adapter",
    "start": "1687080",
    "end": "1693880"
  },
  {
    "text": "here okay so the good fet started up it attempted to perform JTAG and it got the JTAG ID which is 89 so we know that that",
    "start": "1701000",
    "end": "1708519"
  },
  {
    "text": "it's connected the Chip's behaving as normal and it's prepared to do",
    "start": "1708519",
    "end": "1713760"
  },
  {
    "text": "JTAG next it's going to uh do this thing where it uh you read a certain register",
    "start": "1713840",
    "end": "1719760"
  },
  {
    "text": "and uh if you get 555 back you know that the JTAG fuse is blown and so generally",
    "start": "1719760",
    "end": "1725240"
  },
  {
    "text": "at this point any other JTAG stuff would fail now the next thing we're going to do is start with that uh that Loop",
    "start": "1725240",
    "end": "1732679"
  },
  {
    "text": "and sometimes this works pretty much instantly sometimes it it it work takes a long time so hopefully we'll get lucky",
    "start": "1732679",
    "end": "1739440"
  },
  {
    "text": "and it'll work instantly but uh cross your fingers I am on stage",
    "start": "1739440",
    "end": "1745720"
  },
  {
    "text": "so that wasn't too bad I've seen worse um so you see we've read out the BSL",
    "start": "1773880",
    "end": "1778919"
  },
  {
    "text": "password 32 bytes at this point you can pass that uh to BSL and you can dump",
    "start": "1778919",
    "end": "1786440"
  },
  {
    "text": "firmware so uh let's talk about what I found when I actually dumped the firmware uh a couple notes on uh",
    "start": "1796120",
    "end": "1803120"
  },
  {
    "start": "1800000",
    "end": "1800000"
  },
  {
    "text": "reversing MSP 430 firmware uh the calling convention I saw was arg1 and R12 ar2 and R14 and remaining arguments",
    "start": "1803120",
    "end": "1810440"
  },
  {
    "text": "are pushed to the stack uh the return value uh is in R12 uh but if it's a",
    "start": "1810440",
    "end": "1815919"
  },
  {
    "text": "32-bit return it'll also use r13 because it's a 16-bit processor the only really interesting",
    "start": "1815919",
    "end": "1822799"
  },
  {
    "text": "thing that was that I discovered in the the actual process of reversing was that",
    "start": "1822799",
    "end": "1828960"
  },
  {
    "text": "uh they do do this thing where if it's a sparse index switch statement uh they call this common helper function and",
    "start": "1828960",
    "end": "1835760"
  },
  {
    "text": "that reads the return address off of the stack where the call routine pushed it and then it goes there and it finds this",
    "start": "1835760",
    "end": "1842519"
  },
  {
    "text": "data structure that defines uh where you're going to jump and so that's useful because Ida otherwise will will",
    "start": "1842519",
    "end": "1849840"
  },
  {
    "text": "not know what to do with that data another surprising thing I found is that about 25% of the firmware was",
    "start": "1849840",
    "end": "1856880"
  },
  {
    "start": "1853000",
    "end": "1853000"
  },
  {
    "text": "actually dedicated to RDA and I didn't really know a lot about irda before this um the Supra bit bangs the",
    "start": "1856880",
    "end": "1865080"
  },
  {
    "text": "irda it's basically just serial but it has a short pulse width so you have a long normally in serial you would you",
    "start": "1865080",
    "end": "1871039"
  },
  {
    "text": "would have a large bit width but in this case the pulse width is smaller than the bitwidth now you can actually uh connect",
    "start": "1871039",
    "end": "1877799"
  },
  {
    "text": "to a test pad on the ibox board and you can sniff the raw uh IR electrical",
    "start": "1877799",
    "end": "1884039"
  },
  {
    "text": "signals uh and then you can uh read those with logic if you have a SL uh it's easy to write a custom plugin to",
    "start": "1884039",
    "end": "1890600"
  },
  {
    "text": "decode them you can you can export them uh and post-process them into a pcap and",
    "start": "1890600",
    "end": "1895919"
  },
  {
    "text": "when you do that wire shark if you set the right data type will open that peap pcap up and it'll decode everything",
    "start": "1895919",
    "end": "1901720"
  },
  {
    "text": "above the the link layer uh layer which is just terrific and super",
    "start": "1901720",
    "end": "1907480"
  },
  {
    "text": "useful let's talk about what I found in the firmware so I found four things the",
    "start": "1907480",
    "end": "1912559"
  },
  {
    "start": "1909000",
    "end": "1909000"
  },
  {
    "text": "first was I I discovered how the super crypto really works you I had uh some kind of idea after reversing the app but",
    "start": "1912559",
    "end": "1919080"
  },
  {
    "text": "you know I I didn't really know exactly how it works the second thing I found is there's actually three authentication",
    "start": "1919080",
    "end": "1924760"
  },
  {
    "text": "modes I mentioned programed deprogram before there's a third third I found a hardware back door",
    "start": "1924760",
    "end": "1931880"
  },
  {
    "text": "and fourth uh I discovered that the memory read WR command which I knew about uh because the app uses it uh is",
    "start": "1931880",
    "end": "1939600"
  },
  {
    "text": "is a command that's sent over IR or Bluetooth and it it only typically reads",
    "start": "1939600",
    "end": "1944960"
  },
  {
    "text": "the eom which is where that visitor log is stored but I discovered there's a hidden mode to it that per permits",
    "start": "1944960",
    "end": "1950880"
  },
  {
    "text": "reading and writing a small segment of Flash and you'll see why that's interesting so first um all the crypto",
    "start": "1950880",
    "end": "1960039"
  },
  {
    "start": "1957000",
    "end": "1957000"
  },
  {
    "text": "that I saw in the initial protocol um there's a bunch of keys but it turns out",
    "start": "1960039",
    "end": "1965559"
  },
  {
    "text": "that they're all either derived from or encrypted with two keys two aes128",
    "start": "1965559",
    "end": "1971039"
  },
  {
    "text": "keys the first key I call the device key um and it's actually rarely used in the",
    "start": "1971039",
    "end": "1976200"
  },
  {
    "text": "field and if you do use it you get a very high level of",
    "start": "1976200",
    "end": "1981760"
  },
  {
    "text": "access with this key you can deprogram a device um to move it to another CIS code",
    "start": "1981760",
    "end": "1987039"
  },
  {
    "text": "I I'll talk about this a bit more in a little bit but the most important key on",
    "start": "1987039",
    "end": "1992120"
  },
  {
    "text": "the device is called the CIS code key now the CIS code key is the root of trust for all those normal operations",
    "start": "1992120",
    "end": "1997639"
  },
  {
    "text": "that you're doing opening the device uh and most interestingly it's",
    "start": "1997639",
    "end": "2003200"
  },
  {
    "text": "shared among all those devices within the same CIS code within a geographical region",
    "start": "2003200",
    "end": "2008720"
  },
  {
    "text": "and cleverly uh Supra ensured that these keys were never accessible to the E key app there's no way to get access to them",
    "start": "2008720",
    "end": "2015039"
  },
  {
    "text": "in the E key app and they're not accessible via any of their remote commands um so it's impossible to",
    "start": "2015039",
    "end": "2023799"
  },
  {
    "text": "extract them via their command structure I was expecting to find some sort of back door to read out the keys but I",
    "start": "2023799",
    "end": "2029480"
  },
  {
    "text": "didn't so when I saw the Supra uh so the CIS code key when it's provisioned into",
    "start": "2029480",
    "end": "2035360"
  },
  {
    "start": "2030000",
    "end": "2030000"
  },
  {
    "text": "the device it's via some I believe unknown process that happens at the MLS office uh I don't know much about that",
    "start": "2035360",
    "end": "2042679"
  },
  {
    "text": "but the device must be in a deprogram mode to do it um and I assume they have some sort of authenticated uh channel to",
    "start": "2042679",
    "end": "2050079"
  },
  {
    "text": "get access to those CIS code Keys um anyway once it's provisioned uh a Mac",
    "start": "2050079",
    "end": "2055760"
  },
  {
    "text": "key and an encryption key are derived from it and those keys are used uh for example to validate cookie Integrity the",
    "start": "2055760",
    "end": "2062520"
  },
  {
    "text": "Mac key and to decrypt any ephemeral Keys any session keys that are transmitted",
    "start": "2062520",
    "end": "2069158"
  },
  {
    "text": "respectively if you compromise this key it's sort of the the Keys of the Kingdom",
    "start": "2069159",
    "end": "2074320"
  },
  {
    "text": "because uh you can generate fake authentication cookies you don't need to contact super server to do that you can",
    "start": "2074320",
    "end": "2080398"
  },
  {
    "text": "open up any lock in the entire geographical region um which means you're not leaving",
    "start": "2080399",
    "end": "2086398"
  },
  {
    "text": "a trace the next thing I discovered the",
    "start": "2086399",
    "end": "2092280"
  },
  {
    "start": "2090000",
    "end": "2090000"
  },
  {
    "text": "third off mode um so this third off mode is uh permits access to the visitor log",
    "start": "2092280",
    "end": "2099400"
  },
  {
    "text": "in eom only that's all it permits access to uh but uh obviously that's only",
    "start": "2099400",
    "end": "2105440"
  },
  {
    "text": "useful if the device has been opened before because if there's nothing in the visitor log it's it's useless to you now",
    "start": "2105440",
    "end": "2112000"
  },
  {
    "text": "the key to this is that it requires no off cookies to access it you just walk up you say hey I want to use that third",
    "start": "2112000",
    "end": "2118000"
  },
  {
    "text": "off mode and it says here's your visitor log uh have fun uh the important thing",
    "start": "2118000",
    "end": "2123040"
  },
  {
    "text": "about the visitor log is it not only contains like contact information about the uh the people who own the keys that",
    "start": "2123040",
    "end": "2129359"
  },
  {
    "text": "that uh connected and open the lock it also contains their serial number and CIS code and before we were saying you",
    "start": "2129359",
    "end": "2136119"
  },
  {
    "text": "know an attacker doesn't have a valid serial number in CIS code he's not a real estate agent now he has one um but",
    "start": "2136119",
    "end": "2143000"
  },
  {
    "text": "the problem is you still don't have the PIN code associated with that key let's talk a bit about brute force a pin code",
    "start": "2143000",
    "end": "2150319"
  },
  {
    "start": "2149000",
    "end": "2149000"
  },
  {
    "text": "is only four digits now the device has Brute Force protection okay if you try to Brute",
    "start": "2150319",
    "end": "2156400"
  },
  {
    "text": "Force the PIN code Lo uh it'll lock you out for 10 minutes every 10 attempts okay so I did a little",
    "start": "2156400",
    "end": "2163119"
  },
  {
    "text": "napkin math and that came to like about a week if you're waiting for those lockouts the problem is that they're",
    "start": "2163119",
    "end": "2168200"
  },
  {
    "text": "storing the lockout counter in the eom so you could build a device if you have physical access to the board that",
    "start": "2168200",
    "end": "2174720"
  },
  {
    "text": "attempts to authenticate with a uh authentication cookie that you got using a serial number in CIS code and then uh",
    "start": "2174720",
    "end": "2181160"
  },
  {
    "text": "you can do an online brute force of that PIN code erasing the eom every 10 attempts and you could very quickly get",
    "start": "2181160",
    "end": "2186680"
  },
  {
    "text": "a PIN code at that point you've effectively cloned an e key you you can spoof a real estate",
    "start": "2186680",
    "end": "2193119"
  },
  {
    "text": "agent however you still need to contact supr server every day so it's not an",
    "start": "2193119",
    "end": "2198640"
  },
  {
    "text": "ideal attack so the hardware back door um I",
    "start": "2198640",
    "end": "2204640"
  },
  {
    "start": "2202000",
    "end": "2202000"
  },
  {
    "text": "mentioned deprogrammed off before uh and I and I call it that because the Android app only uses that authentication mode",
    "start": "2204640",
    "end": "2211720"
  },
  {
    "text": "if the device is deprogrammed when I open when I reversed the firmware I discovered that you can actually perform that uh authentication",
    "start": "2211720",
    "end": "2219440"
  },
  {
    "text": "mechanism when the device is programmed but you need to know that super secret device key when you know that device key",
    "start": "2219440",
    "end": "2226280"
  },
  {
    "text": "which is unique per device uh you get the highest access mode and you can do things like deprogram the device uh you",
    "start": "2226280",
    "end": "2232079"
  },
  {
    "text": "can you can overwrite Keys um and it's likely only used by the MLS office um uh",
    "start": "2232079",
    "end": "2238560"
  },
  {
    "text": "they must have some kind of secure channel to get access to those device Keys which I don't know anything about",
    "start": "2238560",
    "end": "2244079"
  },
  {
    "text": "uh however the implementation of this off mode contains the hardware back door what it looks like in code is you",
    "start": "2244079",
    "end": "2251200"
  },
  {
    "text": "see peripheral 3.1 go high and then the very next uh instruction peripheral 3.2",
    "start": "2251200",
    "end": "2256560"
  },
  {
    "text": "is tested if it's still low that is if those peripherals are not at the same level then the back door is in effect",
    "start": "2256560",
    "end": "2263800"
  },
  {
    "text": "and the actual authentication part of that authentication mode is",
    "start": "2263800",
    "end": "2269240"
  },
  {
    "text": "skipped and that's cuz they're connected through a resistor um you can desolder that",
    "start": "2269720",
    "end": "2275280"
  },
  {
    "text": "resistor if you have board level access and you get uh you can bypass that per device off you get that highle access",
    "start": "2275280",
    "end": "2282200"
  },
  {
    "text": "mode it turns out you can also destroy the resistor with a single drill hole in the back of uh an eyebox if you know the",
    "start": "2282200",
    "end": "2289359"
  },
  {
    "text": "exact right location uh and then after that you can open it up easily with deprogrammed",
    "start": "2289359",
    "end": "2296560"
  },
  {
    "text": "off so at this point we've discovered how to uh clone a key but we still need",
    "start": "2296560",
    "end": "2302760"
  },
  {
    "text": "to talk to Super server we figured out how to uh open up one particular box if",
    "start": "2302760",
    "end": "2308359"
  },
  {
    "text": "we have it in front of us using a physical attack but we haven't really achieved all our goals of being able to",
    "start": "2308359",
    "end": "2313960"
  },
  {
    "text": "open up all the eye boxes um with uh in in the geographical region without",
    "start": "2313960",
    "end": "2321119"
  },
  {
    "text": "contacting super server and that's where the flash right plus erase attack comes in so the keys",
    "start": "2321119",
    "end": "2329480"
  },
  {
    "start": "2325000",
    "end": "2325000"
  },
  {
    "text": "they're obviously these secret keys are obviously not stored in the eom because they would be trivial to read out uh",
    "start": "2329480",
    "end": "2334760"
  },
  {
    "text": "they're stored in information memory which is a segment in in Flash it's a small",
    "start": "2334760",
    "end": "2339800"
  },
  {
    "text": "segment um and that segment is erased by the BSL Mass erase so you can't just",
    "start": "2339800",
    "end": "2345040"
  },
  {
    "text": "perform the trivial attack of mass erasing the device and reading that segment because it it'll be",
    "start": "2345040",
    "end": "2350480"
  },
  {
    "text": "gone uh additionally generally when these devices are performing um when",
    "start": "2350480",
    "end": "2356680"
  },
  {
    "text": "when they're writing to flash you have to erase flash between those wres and the way they do that is so say you send",
    "start": "2356680",
    "end": "2363000"
  },
  {
    "text": "a memory write command using that hidden mode that allows you to write to flash uh it allows you to write to the same",
    "start": "2363000",
    "end": "2368720"
  },
  {
    "text": "segment and the way it does that is it takes that segment as it reads it from flash it copies it to a buffer on the",
    "start": "2368720",
    "end": "2375400"
  },
  {
    "text": "stack it then erases the segment of flash it modifies the buffer on the stack however you requested and then it",
    "start": "2375400",
    "end": "2382599"
  },
  {
    "text": "writes it back and it turns out that since the stack is in Ram of of the",
    "start": "2382599",
    "end": "2389520"
  },
  {
    "text": "microcontroller uh RAM is not actually erased by the BSL Mass erase",
    "start": "2389520",
    "end": "2395520"
  },
  {
    "text": "command so here's our attack uh first we use the hardware back door",
    "start": "2395520",
    "end": "2400880"
  },
  {
    "text": "to authenticate uh and that gives us the high level of access that we need to do a memory right command uh we can do a",
    "start": "2400880",
    "end": "2408640"
  },
  {
    "text": "memory right command to the information page at an unused location we'll just twiddle a bite at somewhere that's not",
    "start": "2408640",
    "end": "2414000"
  },
  {
    "text": "used now when we do that the device will take uh that page copy it to a stack",
    "start": "2414000",
    "end": "2419200"
  },
  {
    "text": "buffer modify it you know twit L bite and then write it back to flash very quickly before the stack gets",
    "start": "2419200",
    "end": "2426640"
  },
  {
    "text": "changed to significantly we're going to reset that device we're going to perform a mass erase of flash via BSL and as I",
    "start": "2426640",
    "end": "2433599"
  },
  {
    "text": "said before Mass erase is the only thing that you can do without access to the password and then we're going to read",
    "start": "2433599",
    "end": "2439839"
  },
  {
    "text": "Ram using BSL since the password has now been uh reverted back to the default",
    "start": "2439839",
    "end": "2445599"
  },
  {
    "text": "password when I attempted this it was great success um so I wrote a special",
    "start": "2445599",
    "end": "2451640"
  },
  {
    "text": "good fed application that counts clock Cycles uh so that the stack didn't get modified uh I run that application right",
    "start": "2451640",
    "end": "2458440"
  },
  {
    "text": "before sending um the memory right command I send the memory right command uh and that app resets the device puts",
    "start": "2458440",
    "end": "2464720"
  },
  {
    "text": "it into BSL mode and at this point at my leisure I can um Mass erase the device",
    "start": "2464720",
    "end": "2471319"
  },
  {
    "text": "uh and read out Ram um obviously you can only perform this attack once because",
    "start": "2471319",
    "end": "2476920"
  },
  {
    "text": "it's destructive you've destroyed that device uh but it doesn't matter because you've extracted the CIS code key and",
    "start": "2476920",
    "end": "2483240"
  },
  {
    "text": "you can now just go through your your city or your neighborhood and just go watch",
    "start": "2483240",
    "end": "2489240"
  },
  {
    "text": "uh so I'm going to show you a demo I'm actually going to show you a demo of the hardware attack uh because the flash",
    "start": "2489720",
    "end": "2495920"
  },
  {
    "text": "right and erase attack does not demo very well this is a uh super ibox uh it",
    "start": "2495920",
    "end": "2501480"
  },
  {
    "text": "is programmed uh I purchased it on eBay someone probably I don't know how they got it",
    "start": "2501480",
    "end": "2507680"
  },
  {
    "text": "but they they they sell these things all over eBay and they're cheap and you can pick them up um and as you can see it's",
    "start": "2507680",
    "end": "2514359"
  },
  {
    "text": "locked can't get access to it and you can also see well you can't but there's a very small drill hole in the back",
    "start": "2514359",
    "end": "2523040"
  },
  {
    "text": "okay so uh this uses Bluetooth to communicate with this Bluetooth to IR",
    "start": "2535200",
    "end": "2541319"
  },
  {
    "text": "proxy device uh which translates the IR to the device um so by Bluetooth turned on",
    "start": "2541319",
    "end": "2550400"
  },
  {
    "text": "yes okay so as you can see this device just did a very simple uh the",
    "start": "2560040",
    "end": "2568359"
  },
  {
    "text": "deprogrammed off and it succeeded and as a result the lock opens right",
    "start": "2568359",
    "end": "2573839"
  },
  {
    "text": "up um",
    "start": "2573839",
    "end": "2577839"
  },
  {
    "text": "at this point uh if you remove this hex screw which I put in for purposes of demonstration the entire lock would",
    "start": "2580640",
    "end": "2585880"
  },
  {
    "text": "actually fall apart and you'd have access to the circuit board and at that point you can perform any kind of uh",
    "start": "2585880",
    "end": "2590960"
  },
  {
    "text": "like the flash right and eras",
    "start": "2590960",
    "end": "2594160"
  },
  {
    "text": "attack okay um conclusion Solutions uh we discussed these issues with Supra in",
    "start": "2599599",
    "end": "2605559"
  },
  {
    "start": "2602000",
    "end": "2602000"
  },
  {
    "text": "June they were very receptive uh to us and they've been working on these issues since and they tell us they're planning",
    "start": "2605559",
    "end": "2612319"
  },
  {
    "text": "to uh deploy a solution in less than 60 days uh if you're a manufacturer of another device that's doing something",
    "start": "2612319",
    "end": "2619040"
  },
  {
    "text": "similar um I would probably recommend that you avoid storing your cryptographic secrets in general purpose",
    "start": "2619040",
    "end": "2624960"
  },
  {
    "text": "microcontrollers flash memory because these microcontrollers they have a ton of debug interfaces and very often uh",
    "start": "2624960",
    "end": "2633040"
  },
  {
    "text": "what you think are the um the sort of the ways to lock those down there might",
    "start": "2633040",
    "end": "2639000"
  },
  {
    "text": "be ways to bypass them if you have tons of physical access to them uh thanks to few guys on my team",
    "start": "2639000",
    "end": "2646119"
  },
  {
    "text": "who help me out with various parts and uh obviously thanks to Travis Goodspeed for his uh tremendous prior work on",
    "start": "2646119",
    "end": "2652880"
  },
  {
    "text": "this so that's it and any time for",
    "start": "2652880",
    "end": "2657279"
  },
  {
    "text": "questions yes do you well do make uh secure storage",
    "start": "2662480",
    "end": "2669000"
  },
  {
    "text": "devices like atmail makes a a Secure Storage uh eom where you can you can",
    "start": "2669000",
    "end": "2674280"
  },
  {
    "text": "keep keys in there and they're intended to be protected against physical attacks and then you can actually do the",
    "start": "2674280",
    "end": "2679839"
  },
  {
    "text": "decryption of data on that chip itself how",
    "start": "2679839",
    "end": "2686680"
  },
  {
    "text": "many uh I bought probably by at this point I probably bought like eight of these devices um the the ibox the",
    "start": "2686680",
    "end": "2694480"
  },
  {
    "text": "traditional ibox is pretty cheap on eBay they're like about 30 bucks the ibox Bluetooth and the L's are a little more",
    "start": "2694480",
    "end": "2701400"
  },
  {
    "text": "expensive but it's not that bad",
    "start": "2701400",
    "end": "2705558"
  },
  {
    "text": "yes",
    "start": "2711599",
    "end": "2714599"
  },
  {
    "text": "uhhuh really",
    "start": "2717880",
    "end": "2721880"
  },
  {
    "text": "no I didn't that's interesting and if you didn't hear what he said he said that you can calculate the uh exact",
    "start": "2733200",
    "end": "2738520"
  },
  {
    "text": "current that's being released if you know the material that the fuse is made",
    "start": "2738520",
    "end": "2743760"
  },
  {
    "text": "of and okay yes",
    "start": "2745880",
    "end": "2752520"
  },
  {
    "text": "uh no um I mean so the very first message so the question is what about replay um the very first message that uh",
    "start": "2765599",
    "end": "2773079"
  },
  {
    "text": "you send to the device is like connection start and you send it the off mode that you're going to use so if",
    "start": "2773079",
    "end": "2778200"
  },
  {
    "text": "you're using standard programmed off uh the very first thing it responds back to you with is a challenge a random",
    "start": "2778200",
    "end": "2784119"
  },
  {
    "text": "Challenge and that challenge uh it's not actually well it's interesting what it actually is is they take the um the a",
    "start": "2784119",
    "end": "2793319"
  },
  {
    "text": "number of different timers on the device uh and uh they encrypt it with the",
    "start": "2793319",
    "end": "2799480"
  },
  {
    "text": "device key which is kind of interesting any other",
    "start": "2799480",
    "end": "2805400"
  },
  {
    "text": "questions how how much time did I work on this uh a long",
    "start": "2807119",
    "end": "2812200"
  },
  {
    "text": "time as you can see I went through a lot of failures uh and I was obviously working on this in like side time so it",
    "start": "2812200",
    "end": "2818920"
  },
  {
    "text": "took a long time yes uh in the",
    "start": "2818920",
    "end": "2823720"
  },
  {
    "text": "back I'm sorry oh so uh the attack the only one",
    "start": "2825200",
    "end": "2831640"
  },
  {
    "text": "I've actually performed this attack on is the one series uh that 147 um but I",
    "start": "2831640",
    "end": "2838960"
  },
  {
    "text": "believe that it would work against uh the one two or four but you know that's that's my belief um now I did test it",
    "start": "2838960",
    "end": "2846559"
  },
  {
    "text": "against Five series to confirm that it's not affected uh which it was a BGA chip",
    "start": "2846559",
    "end": "2851760"
  },
  {
    "text": "it was a huge pain to solder onto those onto those little balls but anyway um so",
    "start": "2851760",
    "end": "2857800"
  },
  {
    "text": "that's the only one I've really performed this against any other",
    "start": "2857800",
    "end": "2864440"
  },
  {
    "text": "questions all right great thank you for your time",
    "start": "2864440",
    "end": "2869880"
  },
  {
    "text": "[Music]",
    "start": "2869960",
    "end": "2873070"
  }
]