[
  {
    "text": "32 bytes part for data is freed and then another page is allocated to store uh to",
    "start": "160",
    "end": "6680"
  },
  {
    "text": "store the new value of the variable so with fre 32 by Str when do we change the",
    "start": "6680",
    "end": "12599"
  },
  {
    "text": "variable's value so if the Malo implementation needs to have a PG infr structure it will simply go into the",
    "start": "12599",
    "end": "19880"
  },
  {
    "text": "foral value of the variable this way we have many of pages containing Shell Code",
    "start": "19880",
    "end": "25439"
  },
  {
    "text": "data and that are contigous so we don't need the exact address of the Shell Code we can jump in a random page in in the",
    "start": "25439",
    "end": "32800"
  },
  {
    "text": "middle of these pages and hopefully there will be Shell Code [Music]",
    "start": "32800",
    "end": "40810"
  },
  {
    "text": "there then yes the J name variable the famous variable that may be fre several",
    "start": "43600",
    "end": "50280"
  },
  {
    "text": "times a simple thing to do is to put many bytes in this variable in fact uh",
    "start": "50280",
    "end": "56280"
  },
  {
    "text": "16 memory Pages we make this variable 16 16 memory pages so that it handles a",
    "start": "56280",
    "end": "63320"
  },
  {
    "text": "large a very large buffer and when when we will free it and when Malo will need",
    "start": "63320",
    "end": "68600"
  },
  {
    "text": "again to have a large a large area we will simply have to free this variable",
    "start": "68600",
    "end": "74280"
  },
  {
    "text": "and Malo will put the data precisely in this area so we first uh we then get rid of",
    "start": "74280",
    "end": "81640"
  },
  {
    "text": "empty pages we may have holes in the hip we may have gaps something so we li some some memory so that there are no gaps in",
    "start": "81640",
    "end": "89240"
  },
  {
    "text": "the Hep and um create a few 64 by gaps but this",
    "start": "89240",
    "end": "95240"
  },
  {
    "text": "does not really matter and then we can freeze the large buffer we",
    "start": "95240",
    "end": "100640"
  },
  {
    "text": "have put in the J name variable so we have a continuous set of 16 memory pages",
    "start": "100640",
    "end": "106759"
  },
  {
    "text": "that are unused and force the CVS server to allocate these Pages again and to do",
    "start": "106759",
    "end": "112840"
  },
  {
    "text": "something particular in these Pages a simple way to do so is to Simply send",
    "start": "112840",
    "end": "118079"
  },
  {
    "text": "much data on the network a very very long line such that the Cs server has",
    "start": "118079",
    "end": "123680"
  },
  {
    "text": "not enough buffers to store this line in its available buffers it needs to allocate uh a new set of pages so it",
    "start": "123680",
    "end": "132200"
  },
  {
    "text": "will allocate a 16 uh it will allocate 16 memory pages to store the new",
    "start": "132200",
    "end": "138360"
  },
  {
    "text": "incoming data from the network and it will choose these Pages precisely where the Jour name variable was so we can",
    "start": "138360",
    "end": "145879"
  },
  {
    "text": "force the fraying of these Pages simply by fraying the Jour name variable but CVS believes these pages are safe",
    "start": "145879",
    "end": "153959"
  },
  {
    "text": "and it handles these pages in its uh Linker list of available Pages the CVS",
    "start": "153959",
    "end": "159760"
  },
  {
    "text": "server uses its own buffers and um it has a list of available buffers which",
    "start": "159760",
    "end": "165720"
  },
  {
    "text": "will reference these pages so if we free these Pages we may have other data there",
    "start": "165720",
    "end": "171080"
  },
  {
    "text": "and CVS will still overwrite this data with network",
    "start": "171080",
    "end": "176239"
  },
  {
    "text": "data uh that is what is done here check everything went well so ref free the J",
    "start": "176760",
    "end": "184560"
  },
  {
    "text": "name variable again so that the 16 memory pages that have been located by",
    "start": "184560",
    "end": "190360"
  },
  {
    "text": "the CVS server to store network data are are free for Malo Malo believes they are",
    "start": "190360",
    "end": "195760"
  },
  {
    "text": "free then we force the allocation of 32 bytes chunks memory page simply by by",
    "start": "195760",
    "end": "201519"
  },
  {
    "text": "setting memory variables CVS variables and we create some 32 bytes",
    "start": "201519",
    "end": "208080"
  },
  {
    "text": "gaps precisely in this page in these pages so that when CVS will need to",
    "start": "208080",
    "end": "213560"
  },
  {
    "text": "allocate some memory to store a new PG infrastructure this structure will be in one of those gaps and we know where it",
    "start": "213560",
    "end": "220560"
  },
  {
    "text": "is and how to overwrite it then three 2 kiloby chunks are",
    "start": "220560",
    "end": "226360"
  },
  {
    "text": "located so that we are certain two PG infrastructures um yes two PG",
    "start": "226360",
    "end": "231439"
  },
  {
    "text": "infrastructures are located in our gaps and um with free one of the chunks",
    "start": "231439",
    "end": "240319"
  },
  {
    "text": "one of these 2 kiloby chunks this creates a gap in the in the list of 2",
    "start": "240319",
    "end": "248200"
  },
  {
    "text": "kiloby chunks and we can overwrite the PG infrastructure the corresponding PG",
    "start": "248200",
    "end": "255759"
  },
  {
    "text": "infrastructure uh with data coming from the network we just have to send a very long string CVS will store the string in",
    "start": "255759",
    "end": "263440"
  },
  {
    "text": "the buffer that it believes to be free but that is not and overwrite uh 132",
    "start": "263440",
    "end": "268680"
  },
  {
    "text": "bytes structur describing a 2 kiloby chunk page so next call to maloc on a 2",
    "start": "268680",
    "end": "275400"
  },
  {
    "text": "kiloby chunk will return whatever we want if we have properly set fake PG",
    "start": "275400",
    "end": "281160"
  },
  {
    "text": "infr structures the rest is quite easy we just have to override the stack or",
    "start": "281160",
    "end": "287080"
  },
  {
    "text": "something the stack or the go the problem with the go is that its addice is not well known but the stack address",
    "start": "287080",
    "end": "294320"
  },
  {
    "text": "is well known so we can write 2 kiloby of data on the stock or wherever we want",
    "start": "294320",
    "end": "300240"
  },
  {
    "text": "then we just have to jump into the Shell Code and it's [Music]",
    "start": "300240",
    "end": "307600"
  },
  {
    "text": "over so thank you for listening to me if you have any",
    "start": "307600",
    "end": "314160"
  },
  {
    "text": "questions yes Ste",
    "start": "316240",
    "end": "322600"
  },
  {
    "text": "mention about a memory uh or information week in his advisor and",
    "start": "322600",
    "end": "330919"
  },
  {
    "text": "may I understand that not no I did not I I I did I did not uh I did not use his",
    "start": "330919",
    "end": "339080"
  },
  {
    "text": "method he has used a completely different method and I did not use the same method of than that he",
    "start": "339080",
    "end": "346479"
  },
  {
    "text": "did what are the total of special numbers that I have to know to to use",
    "start": "346479",
    "end": "352720"
  },
  {
    "text": "this method you need the stack address so the top of the stack and uh um The",
    "start": "352720",
    "end": "360840"
  },
  {
    "text": "Hip address because the shell code is in the hip so you need the bottom of the hip address but you can lck many many",
    "start": "360840",
    "end": "366759"
  },
  {
    "text": "shell codes so you don't have to know it precisely same thing for the top of the stack you don't have to know it",
    "start": "366759",
    "end": "372160"
  },
  {
    "text": "precisely because you can override it with 2 kiloby chunks so this should be in my case",
    "start": "372160",
    "end": "380080"
  },
  {
    "text": "almost perfectly relable I hope so",
    "start": "380080",
    "end": "385400"
  },
  {
    "text": "can you analyze this other P overflow to certain Heap overflows yes I",
    "start": "390800",
    "end": "398960"
  },
  {
    "text": "I did not exploit basic H overflows and BSD because I did not have a vulnerability for this but it can be",
    "start": "398960",
    "end": "407080"
  },
  {
    "text": "generalized for other flows for many of other flows but the problem is that most of the time you will need a memory leak",
    "start": "407080",
    "end": "414120"
  },
  {
    "text": "to be a available to set um to set memory to to leak memory pages to place",
    "start": "414120",
    "end": "420039"
  },
  {
    "text": "32 bytes chunks most of the time we will need to have also memory L and I don't",
    "start": "420039",
    "end": "426560"
  },
  {
    "text": "know yet because uh exploitation of BSD hip corruption is is still a young",
    "start": "426560",
    "end": "432720"
  },
  {
    "text": "technique but I believe you will also need an information leak to have some magic [Music]",
    "start": "432720",
    "end": "441110"
  },
  {
    "text": "numbers most of the time you won't know where the PX cach is for example if you need to override some PG free structures",
    "start": "441199",
    "end": "448199"
  },
  {
    "text": "so you will have to move the p ex Cas which is quite complicated so why would",
    "start": "448199",
    "end": "455680"
  },
  {
    "text": "that sorry why",
    "start": "455680",
    "end": "460440"
  },
  {
    "text": "that because we we first have a sort of memory leak we have a kind of memory",
    "start": "461800",
    "end": "469120"
  },
  {
    "text": "leak so we can place buffer wherever we want and the second reason is that a",
    "start": "469120",
    "end": "474560"
  },
  {
    "text": "double fre is much more easy to to exploit in particular when uh CVS handles its own um its own buffers you",
    "start": "474560",
    "end": "482599"
  },
  {
    "text": "know it has a different buer buffer handling from Meo so it is really easy",
    "start": "482599",
    "end": "488479"
  },
  {
    "text": "to have a difference between what what Malo believes and what CVS believes so we can place buffer align",
    "start": "488479",
    "end": "495639"
  },
  {
    "text": "them uh in particular CVS using uses very large buffers so we don't have to",
    "start": "495639",
    "end": "502319"
  },
  {
    "text": "to guess where the buffers are because we know it they are aligned on on the beginning of a",
    "start": "502319",
    "end": "508000"
  },
  {
    "text": "page yes how should BSD fix it m allocation and the",
    "start": "508000",
    "end": "513399"
  },
  {
    "text": "allocation to avoid this to fix the memory location algorithm yeah should they should they",
    "start": "513399",
    "end": "520640"
  },
  {
    "text": "share the pages when they cre them so that there's no nothing left in the [Music]",
    "start": "520640",
    "end": "527330"
  },
  {
    "text": "memory uh it may work",
    "start": "527560",
    "end": "533399"
  },
  {
    "text": "well I'm not sure it would work if you clear the memory pages",
    "start": "533399",
    "end": "540120"
  },
  {
    "text": "the problem is we we override the data um we we override with new data and then",
    "start": "540120",
    "end": "545880"
  },
  {
    "text": "we do another Zoro location we do not call free uh after the override but",
    "start": "545880",
    "end": "551160"
  },
  {
    "text": "effectively it may corrupt the PG infrastructure um which will probably",
    "start": "551160",
    "end": "557160"
  },
  {
    "text": "cause the cious server to say to to or something before we can overwrite it",
    "start": "557160",
    "end": "562200"
  },
  {
    "text": "it may work it may work and uh you may do this with an environment variable uh",
    "start": "562200",
    "end": "567880"
  },
  {
    "text": "to configure the locator to right Freight data with junk data I think it",
    "start": "567880",
    "end": "573360"
  },
  {
    "text": "would work but I'm not",
    "start": "573360",
    "end": "576200"
  },
  {
    "text": "sure I think a better method would be to use an allocator which uh uh which uses",
    "start": "580160",
    "end": "587120"
  },
  {
    "text": "structures Malo structures that are located in another region of the hip maybe another map region or something",
    "start": "587120",
    "end": "594000"
  },
  {
    "text": "not with user chunks but it may be complicated to write and uh it may be",
    "start": "594000",
    "end": "599440"
  },
  {
    "text": "very slow you may have cash [Music]",
    "start": "599440",
    "end": "612450"
  },
  {
    "text": "[Applause]",
    "start": "612450",
    "end": "621619"
  },
  {
    "text": "problems I",
    "start": "628320",
    "end": "632320"
  },
  {
    "text": "okay I",
    "start": "688240",
    "end": "692279"
  },
  {
    "text": "now",
    "start": "735279",
    "end": "738279"
  },
  {
    "text": "[Music]",
    "start": "743190",
    "end": "746389"
  },
  {
    "text": "oh I",
    "start": "778120",
    "end": "782160"
  },
  {
    "text": "you",
    "start": "812240",
    "end": "815240"
  },
  {
    "text": "you",
    "start": "839440",
    "end": "841600"
  },
  {
    "text": "could it has no",
    "start": "846199",
    "end": "849639"
  },
  {
    "text": "way running",
    "start": "854480",
    "end": "857839"
  },
  {
    "text": "bgp there this is based on the whole internet the internet is built on this Assumption of trust if we hand somebody",
    "start": "867399",
    "end": "874440"
  },
  {
    "text": "a packet they're going to send it along the proper direction if you're a service",
    "start": "874440",
    "end": "880120"
  },
  {
    "text": "provider if you're a transit atonic system you may put this stuff on the slowest link possible but you will based",
    "start": "880120",
    "end": "887199"
  },
  {
    "text": "on this trust mechanism send it off eventually to its end destination we may pass it off to you know the slowest",
    "start": "887199",
    "end": "893639"
  },
  {
    "text": "Network you can to like maybe AOL five eastern Time or something so um but",
    "start": "893639",
    "end": "900480"
  },
  {
    "text": "eventually you'll get it along its way now this trust can be violated we could sit in between and",
    "start": "900480",
    "end": "907279"
  },
  {
    "text": "watch traffic as go goes by and and do a whole whole bunch of nasty things if you violate that trust and there it's really",
    "start": "907279",
    "end": "914279"
  },
  {
    "text": "hard to you know if I'm a bank or if I'm a you know pharmaceutical company or a c",
    "start": "914279",
    "end": "920759"
  },
  {
    "text": "company any industry I set up Security on my end to make sure that people are getting in nobody can get in it isn't",
    "start": "920759",
    "end": "927560"
  },
  {
    "text": "allowed my employees can get outbounds they got firewall they got IDs they got all these security tools what can I do",
    "start": "927560",
    "end": "933920"
  },
  {
    "text": "about some autonomous system way off in the distance that's taking all my traffic and dropping off to a fake",
    "start": "933920",
    "end": "940839"
  },
  {
    "text": "wer how do I stop that well SSL who care they own the web server SSL doesn't",
    "start": "940839",
    "end": "946920"
  },
  {
    "text": "matter they can set up their own certificate from Berry sign or something like that so we have this issue with the",
    "start": "946920",
    "end": "954920"
  },
  {
    "text": "trust me now the current version of EGP uh there na sitting up at Cisco's",
    "start": "954920",
    "end": "960839"
  },
  {
    "text": "headquarters in s it was actually drawn up by a whole bunch of people that sat there at the cafe that Drew up that be",
    "start": "960839",
    "end": "966959"
  },
  {
    "text": "somethings for bgp version 4 and that's what we're running right now it's kind of cool because it's like one of the PE",
    "start": "966959",
    "end": "972040"
  },
  {
    "text": "protocols they actually did they wrote it all out they went back and putot it all and then they made the",
    "start": "972040",
    "end": "977199"
  },
  {
    "text": "R so all right uh other things here several",
    "start": "977199",
    "end": "983399"
  },
  {
    "text": "things happen with uh within bgp uh commonly we end up with what I'm terming as administrative denal attack or",
    "start": "983399",
    "end": "991240"
  },
  {
    "text": "oops uh this is one you pretty much dos attack your network um even though you don't need to there's plenty of uh other",
    "start": "991240",
    "end": "1000279"
  },
  {
    "text": "types of Doss acts there's a few you know a couple of them I thought about then you can do with",
    "start": "1000279",
    "end": "1006440"
  },
  {
    "text": "bvp uh and the other issue with this and you know the problem I have with it because",
    "start": "1006440",
    "end": "1012560"
  },
  {
    "text": "bvp is a global protocol we're having this problem of deciding what to do to",
    "start": "1012560",
    "end": "1018000"
  },
  {
    "text": "secure they all everybody agrees and everybody who's talked about this agrees",
    "start": "1018000",
    "end": "1023519"
  },
  {
    "text": "that ggb needs to be fixed it needs to be secure but nobody likes any of the solutions so we just sit and we wait and",
    "start": "1023519",
    "end": "1030280"
  },
  {
    "text": "we wait and we wait until something finally is going to happen and then I don't know we're going so and the",
    "start": "1030280",
    "end": "1037760"
  },
  {
    "text": "security mechanism we have right now with PP is md5 you can create MP5 P",
    "start": "1037760",
    "end": "1043798"
  },
  {
    "text": "between G the some of the nice things about BP is that that there are some functions",
    "start": "1043799",
    "end": "1050440"
  },
  {
    "text": "that will help you I md5 will make it relatively difficult to get in between and do anything really nasty um but if",
    "start": "1050440",
    "end": "1058039"
  },
  {
    "text": "you're a service provider and you have say 3,000 customers how you going to",
    "start": "1058039",
    "end": "1063919"
  },
  {
    "text": "handle with keil if 3,000 customers they all have",
    "start": "1063919",
    "end": "1070240"
  },
  {
    "text": "different caring points so either you manage to change your sell and every single month have to tell your customer",
    "start": "1070240",
    "end": "1076280"
  },
  {
    "text": "to change our key which would be a night although your customer manag the piece himself which is still in",
    "start": "1076280",
    "end": "1083000"
  },
  {
    "text": "that so a lot of large IPS won't and can",
    "start": "1083000",
    "end": "1088960"
  },
  {
    "text": "handle the can currently F so still we end up with more",
    "start": "1088960",
    "end": "1096240"
  },
  {
    "text": "problems all right so Basics with bgp things I'm going to be throwing out here so I just better Define you right now",
    "start": "1096240",
    "end": "1102080"
  },
  {
    "text": "and over so uh prefix that's an pgp anything that's a subnet or a network or",
    "start": "1102080",
    "end": "1109039"
  },
  {
    "text": "get uh any kind of route to show up in the pg2 routing table when refer to us a pref P2 uh autonomous systems I",
    "start": "1109039",
    "end": "1116159"
  },
  {
    "text": "mentioned here a couple times that's your domain of administrative Authority right that's your network you own it you",
    "start": "1116159",
    "end": "1121960"
  },
  {
    "text": "control all the routers within that Network you control the Trap what once it comes into your autonomous system",
    "start": "1121960",
    "end": "1127120"
  },
  {
    "text": "it's yours until you get rid of it and hand it off to somebody else you also don't have the ability to control",
    "start": "1127120",
    "end": "1132480"
  },
  {
    "text": "somebody else's autonomous system and you can ask nicely please will you send the traffic in this direction",
    "start": "1132480",
    "end": "1138799"
  },
  {
    "text": "essentially what uh multi-exit discriminators do U I can send to a",
    "start": "1138799",
    "end": "1143880"
  },
  {
    "text": "provider and tell them look here's my you know here's my best path into my autonomous system please use this they",
    "start": "1143880",
    "end": "1149799"
  },
  {
    "text": "can just simply ignore it because it's a uh PG G in uh pgp is a optional",
    "start": "1149799",
    "end": "1156640"
  },
  {
    "text": "non-transitive attribute meaning it's optional only some providers support it although most do a non-transitive",
    "start": "1156640",
    "end": "1163360"
  },
  {
    "text": "meaning I can just throw it away and ignore it and I'm not get to bother with it some some ISP will simply filter your",
    "start": "1163360",
    "end": "1170760"
  },
  {
    "text": "M just because they don't want to look at it now the as path is that hop count",
    "start": "1170760",
    "end": "1177000"
  },
  {
    "text": "that every time you go through a rouse traverses an autonomous system it prepends the autonomous system that",
    "start": "1177000",
    "end": "1183320"
  },
  {
    "text": "passes through as a a route back to the m advertised so if you create if you're",
    "start": "1183320",
    "end": "1188679"
  },
  {
    "text": "given route space and you're advertising it with DGP you advertise it as it exits",
    "start": "1188679",
    "end": "1194320"
  },
  {
    "text": "your autonomous system you put your autonomous system on on it as it exits the next aut system they put their",
    "start": "1194320",
    "end": "1200400"
  },
  {
    "text": "number ahead of yours and it continues on through the internet it's also uses a loop prevention mechanism because if we",
    "start": "1200400",
    "end": "1206799"
  },
  {
    "text": "get something back that has our own non consistent number on it we know there's a loop and we drop it sign we ignore",
    "start": "1206799",
    "end": "1214320"
  },
  {
    "text": "that all right as far as bgp size is concerned um $12,000 currently running",
    "start": "1214919",
    "end": "1223440"
  },
  {
    "text": "BP now not all of them are running the entire routing information base um of",
    "start": "1223440",
    "end": "1229080"
  },
  {
    "text": "something around I mean I put 130 in the uh in the book I since modified it down to",
    "start": "1229080",
    "end": "1234559"
  },
  {
    "text": "125,000 routes but that number fluctuates by somewhere around",
    "start": "1234559",
    "end": "1240200"
  },
  {
    "text": "10,000 on any given day or so it will fluctuate from time to time and me know when you're looking at",
    "start": "1240200",
    "end": "1246360"
  },
  {
    "text": "it uh so with that we have 65 uh 6500 different autonomous system",
    "start": "1246360",
    "end": "1255320"
  },
  {
    "text": "numbers out there some of them don't deserve the trust we give me this is you know some of them are specifically set",
    "start": "1255320",
    "end": "1262400"
  },
  {
    "text": "up as to systems so they can set out spam and that's their whole purpose or",
    "start": "1262400",
    "end": "1267880"
  },
  {
    "text": "you know put put material or questionable material up on the internet that you know you don't want to do it",
    "start": "1267880",
    "end": "1273360"
  },
  {
    "text": "with yourself or your kids or anybody else looking at we certainly don't trust them but they could they could be",
    "start": "1273360",
    "end": "1278960"
  },
  {
    "text": "transit for your traffic uh you look at it comes down to",
    "start": "1278960",
    "end": "1286320"
  },
  {
    "text": "somewhere around 18,000 Pounds most of those paths are going to be three to four autonomous systems that'll be 5% 5%",
    "start": "1286320",
    "end": "1295159"
  },
  {
    "text": "of 125,000 maybe longer than",
    "start": "1295159",
    "end": "1299520"
  },
  {
    "text": "5 DGP operates on the premise of no hierarchy we couldn't really do that",
    "start": "1301520",
    "end": "1307640"
  },
  {
    "text": "with you wi because it's it's design it's original design from you know the",
    "start": "1307640",
    "end": "1313320"
  },
  {
    "text": "US Department of Defense when they they funded the project for this is we don't want you know based on really TCP",
    "start": "1313320",
    "end": "1320840"
  },
  {
    "text": "thought TCP IDE its whole you know creation was based on a nuclear attack like if we have a single point of",
    "start": "1320840",
    "end": "1327720"
  },
  {
    "text": "failure where all the communication starts at this one point and that point gets hit by a bomb and everything",
    "start": "1327720",
    "end": "1334559"
  },
  {
    "text": "everything can't communicate so we need a network that's going to heal itself and won't require any kind of hierarchy",
    "start": "1334559",
    "end": "1340480"
  },
  {
    "text": "while bgps again buil on that principle with no hierarchy now OSF or Isis",
    "start": "1340480",
    "end": "1346720"
  },
  {
    "text": "requires you to build a form of hierarchy within your network",
    "start": "1346720",
    "end": "1352360"
  },
  {
    "text": "so again several differences uh here hear me refer to uh ibgp and",
    "start": "1352360",
    "end": "1360039"
  },
  {
    "text": "edgp as they're almost separate uh",
    "start": "1360039",
    "end": "1365080"
  },
  {
    "text": "really very different ways of handling bgp ibgp runs inside of your Economist",
    "start": "1365080",
    "end": "1370440"
  },
  {
    "text": "system has lots and lots of rules on how it handles the traffic and curing between neighbors and evgt operates",
    "start": "1370440",
    "end": "1377440"
  },
  {
    "text": "external to your network that would be your appearing between your economic system and somebody else's economic",
    "start": "1377440",
    "end": "1384039"
  },
  {
    "text": "system uh the rule for that fine not I'm here to talk",
    "start": "1384039",
    "end": "1389720"
  },
  {
    "text": "about all right so updates again remember bgp is designed for building",
    "start": "1389720",
    "end": "1395679"
  },
  {
    "text": "routing table not for forwarding user track once the routing information base is built in place you've got to provider",
    "start": "1395679",
    "end": "1402960"
  },
  {
    "text": "then you have the ability to forward traffic to the econom systems and you have the ability to manipulate the PTP",
    "start": "1402960",
    "end": "1408080"
  },
  {
    "text": "table uh as you desire to determine what your real best half is load balance uh Lo",
    "start": "1408080",
    "end": "1414600"
  },
  {
    "text": "load share really that with PVP um let's",
    "start": "1414600",
    "end": "1422039"
  },
  {
    "text": "see any kind of change made with PVP are done with updates as you drop a link",
    "start": "1422039",
    "end": "1428080"
  },
  {
    "text": "somewhere in your network network disappears they'll send an update out saying hey this network come long available um those updates are not sent",
    "start": "1428080",
    "end": "1437200"
  },
  {
    "text": "like a typical routing all the way uh for instance RI every 30 seconds is going to be setting up that would make a",
    "start": "1437200",
    "end": "1443240"
  },
  {
    "text": "whole lot of sense if you every 30 seconds here's 130,000 RS 30 seconds later here's another 130,000 RS I don't",
    "start": "1443240",
    "end": "1451200"
  },
  {
    "text": "think we get through 130,000 RS of train before we you know have to send next one",
    "start": "1451200",
    "end": "1457440"
  },
  {
    "text": "so what it'll do is those updates",
    "start": "1457440",
    "end": "1461960"
  },
  {
    "text": "so what I'll do during those updates is there's a lot of stuff stuff to have to batch the information together all",
    "start": "1474320",
    "end": "1482000"
  },
  {
    "text": "right all right so major major flaws again this trust meage the",
    "start": "1482000",
    "end": "1489080"
  },
  {
    "text": "Assumption of how bdp is going to work we're going to assume",
    "start": "1489080",
    "end": "1495200"
  },
  {
    "text": "that you're going to advertise only the prefixes that given to you right or",
    "start": "1495200",
    "end": "1502440"
  },
  {
    "text": "errand give you a network you or your provider give you a network if you can use adverti",
    "start": "1502440",
    "end": "1508760"
  },
  {
    "text": "gvp it's your job to advertise your networks and nobody else's Network it's",
    "start": "1508760",
    "end": "1514039"
  },
  {
    "text": "also your job to make sure you filter the people you're connected to so they only advertising the network that can",
    "start": "1514039",
    "end": "1519720"
  },
  {
    "text": "give to them that's an important big step because if I decide to advertise",
    "start": "1519720",
    "end": "1526200"
  },
  {
    "text": "somebody else's m and as a provider I felt filter that",
    "start": "1526200",
    "end": "1532840"
  },
  {
    "text": "information then we have a problem a big problem this happens",
    "start": "1532840",
    "end": "1540080"
  },
  {
    "text": "frequently maybe not as frequently as the LA will admit but it does happen frequently there was a you know",
    "start": "1540320",
    "end": "1545720"
  },
  {
    "text": "condition down with a uh uh an ISP in Georgia and Florida that few years ago",
    "start": "1545720",
    "end": "1553320"
  },
  {
    "text": "they decided to use redistribution take a whole bunch of Ms take from one provid",
    "start": "1553320",
    "end": "1558399"
  },
  {
    "text": "put those into OSF carry them around their Network and then redistribute them out bgp to another",
    "start": "1558399",
    "end": "1565159"
  },
  {
    "text": "provider and when you bring it in OSF it drops all the MP Nets you s it back out",
    "start": "1565159",
    "end": "1570960"
  },
  {
    "text": "it's like hey these are all my RS I own them all so every single sl14 that was out",
    "start": "1570960",
    "end": "1577279"
  },
  {
    "text": "there all of a sudden disappeared they all went to this one common system that wasn't holding so it basically black",
    "start": "1577279",
    "end": "1583640"
  },
  {
    "text": "hold every single sl4 handle not good",
    "start": "1583640",
    "end": "1589520"
  },
  {
    "text": "made a lot of providers really aware of the fact that they had to filter everything that being said the filtering",
    "start": "1589520",
    "end": "1596760"
  },
  {
    "text": "mechanisms you know if they're not carefully updated and they have to be manually updated uh we're going to find",
    "start": "1596760",
    "end": "1604000"
  },
  {
    "text": "places with something as big as bgp running but there are ways you can add routes in or simply make a phone call",
    "start": "1604000",
    "end": "1610640"
  },
  {
    "text": "and say hey we just got this Mo out you can please update your Buri a little bit of social engineering and I can now",
    "start": "1610640",
    "end": "1615960"
  },
  {
    "text": "advertise somebody else's Network [Music]",
    "start": "1615960",
    "end": "1625440"
  },
  {
    "text": "all right so with an autonomous system path I mentioned how the hot count works the first autonomous system listing",
    "start": "1625440",
    "end": "1631720"
  },
  {
    "text": "listed is the originary autonomous system now to manipulate that it' be",
    "start": "1631720",
    "end": "1637120"
  },
  {
    "text": "really difficult to manipulate uh ebgp ebgp works by",
    "start": "1637120",
    "end": "1643080"
  },
  {
    "text": "connecting your router to an external nebor and usually 9 909 times out of 100",
    "start": "1643080",
    "end": "1649840"
  },
  {
    "text": "they're directly connected there something we could do with t mop and there's possibly some ways you could",
    "start": "1649840",
    "end": "1656080"
  },
  {
    "text": "have done it before but a lot of people are using now the uh the TTL 2 255 pack",
    "start": "1656080",
    "end": "1662720"
  },
  {
    "text": "uh so it's much much more difficult to get in between that uh in IP though you",
    "start": "1662720",
    "end": "1668640"
  },
  {
    "text": "don't have the rule of being having to be directly connected you can have one router sitting in Amsterdam another",
    "start": "1668640",
    "end": "1675159"
  },
  {
    "text": "router running bgp sitting in Denver and the rest of your network is tra is",
    "start": "1675159",
    "end": "1680720"
  },
  {
    "text": "sending your bgp messages between the two somebody got a hold of somewhere of your network that could see that traffic",
    "start": "1680720",
    "end": "1687279"
  },
  {
    "text": "and possibly could grab it add in a piece of text really add in a system",
    "start": "1687279",
    "end": "1692799"
  },
  {
    "text": "number or change the originating Theon system number of that pgp have that fure",
    "start": "1692799",
    "end": "1697919"
  },
  {
    "text": "we have an issue right so ibgp becomes much more",
    "start": "1697919",
    "end": "1704120"
  },
  {
    "text": "much more important to protect just because of the fact that you can't get in between the traffic with evg but it's",
    "start": "1704120",
    "end": "1711320"
  },
  {
    "text": "a lot more likely get in between with an [Music] i um it's because of all of these",
    "start": "1711320",
    "end": "1718399"
  },
  {
    "text": "assumptions that we end up with a possibility of black Co traffic or",
    "start": "1718399",
    "end": "1724519"
  },
  {
    "text": "simply grabbing uh grabbing a whole bunch of stuff and you know advertising",
    "start": "1724519",
    "end": "1731080"
  },
  {
    "text": "cantly going know creating a den service for you know some Network way far away",
    "start": "1731080",
    "end": "1737320"
  },
  {
    "text": "or POS even a global level type scenario if a lot of the fil broke know how",
    "start": "1737320",
    "end": "1743679"
  },
  {
    "text": "possible is that I don't know but it could happen or we can simply watch traffic",
    "start": "1743679",
    "end": "1749200"
  },
  {
    "text": "and go through our econom system or send traffic off to another econ system I talked to somebody who uh within their",
    "start": "1749200",
    "end": "1755279"
  },
  {
    "text": "company they found out that a whole bunch of their traffic was all of a sudden being sent off to China and then",
    "start": "1755279",
    "end": "1761640"
  },
  {
    "text": "back to this case you noticed a little bit of laty so started get some C drafts to figure out what was going on her",
    "start": "1761640",
    "end": "1766840"
  },
  {
    "text": "draft was alling we rather all get sent back seemingly unmolested but really",
    "start": "1766840",
    "end": "1772120"
  },
  {
    "text": "going to China for some reason maybe you know why upate being sent and",
    "start": "1772120",
    "end": "1781039"
  },
  {
    "text": "say because a router is running DGP it makes it vulnerable to any single bug",
    "start": "1785360",
    "end": "1791320"
  },
  {
    "text": "atically be running on that router now most times that's going to be a Cisco router and I'll agree Cisco has you",
    "start": "1791320",
    "end": "1798120"
  },
  {
    "text": "pretty high majority of the router out there but there's others Juniper even Bay or you could be running",
    "start": "1798120",
    "end": "1805880"
  },
  {
    "text": "this on a Linux box um but any kind of vulnerability that we have OS",
    "start": "1805880",
    "end": "1812510"
  },
  {
    "text": "[Music] bug design by cont or programming by",
    "start": "1812510",
    "end": "1819080"
  },
  {
    "text": "contract that's uh pretty much the key word yeah all right take this running again",
    "start": "1819080",
    "end": "1826720"
  },
  {
    "text": "so what comp do these days I was very very annoyed at GCC 3 CU I buil the",
    "start": "1826720",
    "end": "1831919"
  },
  {
    "text": "entire translation engine and thought I was very happy with it and then ran it against some other like GCC PR compiled",
    "start": "1831919",
    "end": "1837440"
  },
  {
    "text": "binaries and completely screwed up and then I looked at the binary and was like what is this because GCC has decided",
    "start": "1837440",
    "end": "1844840"
  },
  {
    "text": "that it is no longer necessary to push arguments on the stack it's somebody in the team must have thought that it's",
    "start": "1844840",
    "end": "1851000"
  },
  {
    "text": "faster to subtract from the stack pointer and then move through the stack with positive",
    "start": "1851000",
    "end": "1856240"
  },
  {
    "text": "offsets um which is like only four times as large in the code and definitely not",
    "start": "1856240",
    "end": "1861399"
  },
  {
    "text": "good packaging but apparently they do this and um they seem to like it or not",
    "start": "1861399",
    "end": "1867720"
  },
  {
    "text": "so um all of a sudden my translation didn't need only to translate like pushes to stores to Output registers but",
    "start": "1867720",
    "end": "1873840"
  },
  {
    "text": "moves to a positive upset from the snack pointer that was really annoying and um",
    "start": "1873840",
    "end": "1880120"
  },
  {
    "text": "I sincerely doubt that it gives any performance benefits I had a conversation with theod recently and he",
    "start": "1880120",
    "end": "1885480"
  },
  {
    "text": "demanded that we build compilers which r used to optimize because optimization has gone",
    "start": "1885480",
    "end": "1892200"
  },
  {
    "text": "NS all right the other Madness is merging exit blocks of functions um this",
    "start": "1892200",
    "end": "1898080"
  },
  {
    "text": "is how a flow graph of a function might look if you ENC to one of these um actually this is a technique",
    "start": "1898080",
    "end": "1904720"
  },
  {
    "text": "that Whatcom C++ did in the old days and I think it was declared as stupid back then but somebody decided that old don't",
    "start": "1904720",
    "end": "1912519"
  },
  {
    "text": "die should reimplement it it's an attempt at building more complex not more complex code basically the idea is",
    "start": "1912519",
    "end": "1920039"
  },
  {
    "text": "hey there's many functions which have similar code why not merge all the code blocks which are in similar",
    "start": "1920039",
    "end": "1925639"
  },
  {
    "text": "function they have sharing now the problem with this is you can very easily",
    "start": "1925639",
    "end": "1931639"
  },
  {
    "text": "share a block of function in a function but the then problem is you can't like",
    "start": "1931639",
    "end": "1937600"
  },
  {
    "text": "decide from which function is p to this B the Press place so you can't just merge blocks in the middle of this",
    "start": "1937600",
    "end": "1942880"
  },
  {
    "text": "program you can only merge at the very end assuming all other blocks Beyond this are ident",
    "start": "1942880",
    "end": "1948679"
  },
  {
    "text": "now the only effect this has is that the abog from functions are to one which say",
    "start": "1948679",
    "end": "1954200"
  },
  {
    "text": "says probably like H I don't know 400 byes in total not bad and um yeah so uh",
    "start": "1954200",
    "end": "1963360"
  },
  {
    "text": "it's a really stupid idea somebody must have invested quite some time to merging all these things and um I then was",
    "start": "1963360",
    "end": "1970720"
  },
  {
    "text": "forced to invest the time to separate those things again which sucks",
    "start": "1970720",
    "end": "1977919"
  },
  {
    "text": "okay now um I mentioned before that I must know the number of arguments for every call this might be a bit",
    "start": "1978080",
    "end": "1984240"
  },
  {
    "text": "problematic for um variable argument function like Sprint and so on for everything else I've typed an IA and I I",
    "start": "1984240",
    "end": "1991039"
  },
  {
    "text": "can infer from the spe frint how many arguments I have but um well for far art",
    "start": "1991039",
    "end": "1996440"
  },
  {
    "text": "functions I'm screwed so my translation engine is annotation influenced um big word for something",
    "start": "1996440",
    "end": "2003399"
  },
  {
    "text": "very simple you see down here that you have a Sprint um",
    "start": "2003399",
    "end": "2008559"
  },
  {
    "text": "bad example let's see whether we have a better one",
    "start": "2008559",
    "end": "2013639"
  },
  {
    "text": "somewhere oh yeah R printer here and obviously we do not know how",
    "start": "2013639",
    "end": "2019960"
  },
  {
    "text": "many well how many arguments this call takes so if I remove this comment",
    "start": "2019960",
    "end": "2026440"
  },
  {
    "text": "here wa and run the translation engine",
    "start": "2026440",
    "end": "2034799"
  },
  {
    "text": "and look at the call which is at [Music]",
    "start": "2052440",
    "end": "2064618"
  },
  {
    "text": "42159 okay",
    "start": "2066480",
    "end": "2069720"
  },
  {
    "text": "you see this call down here and you can see that all these",
    "start": "2071960",
    "end": "2078118"
  },
  {
    "text": "argument pushes which you can see in the exq here push Le like Lea something push",
    "start": "2078119",
    "end": "2084638"
  },
  {
    "text": "it Lea something push it have not been translated to moves to Output registers because the translation engine could not",
    "start": "2084639",
    "end": "2090638"
  },
  {
    "text": "know how many arguments Sprint it to so um this translation is broken and will",
    "start": "2090639",
    "end": "2096200"
  },
  {
    "text": "break any data FL but if you annotate it as we had before",
    "start": "2096200",
    "end": "2101480"
  },
  {
    "text": "call arcs six call arcs and then translate",
    "start": "2101480",
    "end": "2109000"
  },
  {
    "text": "again you can now see that all those t00 Z here have been converted to",
    "start": "2110040",
    "end": "2115240"
  },
  {
    "text": "O's uh I know it was a subtle change um should I repeat it I guess I'll just",
    "start": "2115240",
    "end": "2122160"
  },
  {
    "text": "gooll so the annotations have to be user generated or script generated so",
    "start": "2122160",
    "end": "2129640"
  },
  {
    "text": "bar yeah if the human makes a mistake you're screw yes what about the adjusting of",
    "start": "2134280",
    "end": "2141000"
  },
  {
    "text": "snack well you can use the adjusting of the snack for example by a script but the problem with this is that multiple",
    "start": "2141000",
    "end": "2147599"
  },
  {
    "text": "like some compilers um adjust the snack for multiple functions at once so they do push push push call push push push",
    "start": "2147599",
    "end": "2153640"
  },
  {
    "text": "call push push push call and then add make one big addition so you can't really infer the the arguments from",
    "start": "2153640",
    "end": "2159400"
  },
  {
    "text": "there so you need annotations um I mean that's the old concept of Ida the program is going to screw up anyhow so",
    "start": "2159400",
    "end": "2166319"
  },
  {
    "text": "we make it like we design it in a way that the user can work with it and fix the bugs you see the output registers",
    "start": "2166319",
    "end": "2171680"
  },
  {
    "text": "here and without The annotation it's temporary registers which have been assigned by the translation engine",
    "start": "2171680",
    "end": "2177200"
  },
  {
    "text": "whereas with The annotation",
    "start": "2177200",
    "end": "2180960"
  },
  {
    "text": "you have output purchases",
    "start": "2189760",
    "end": "2194400"
  },
  {
    "text": "right so um you can of course Auto automate the generation of these",
    "start": "2195359",
    "end": "2200440"
  },
  {
    "text": "annotations by writing IDC scripts or doing whatever and it's really not that much work like you you spend probably",
    "start": "2200440",
    "end": "2206520"
  },
  {
    "text": "half an hour on a mediumsized application perhaps like 40 minutes and afterwards you can pretty much translate",
    "start": "2206520",
    "end": "2212640"
  },
  {
    "text": "word all right um one of the big problems which I have with my translation right now it's not provably",
    "start": "2212640",
    "end": "2218440"
  },
  {
    "text": "correct now in order for it to be provably correct there would need to be a soal bjective mapping between all the",
    "start": "2218440",
    "end": "2224319"
  },
  {
    "text": "CPU States on one CPU and the CPU stats on the other CPU now as the mcpu is supposed to be like the superet like",
    "start": "2224319",
    "end": "2231079"
  },
  {
    "text": "Encompass the functionality of many other CPUs I would have to have a projective mapping between every single",
    "start": "2231079",
    "end": "2237680"
  },
  {
    "text": "CPU and my met CPU now I just told you before that many single single CPUs have",
    "start": "2237680",
    "end": "2243920"
  },
  {
    "text": "very very stupid ideas built into them and that would like make my met you the collection of all really stupid",
    "start": "2243920",
    "end": "2250280"
  },
  {
    "text": "ideas now um I don't want this so I've um refuse to to build the translation",
    "start": "2250280",
    "end": "2257480"
  },
  {
    "text": "and a proly complete yeah",
    "start": "2257480",
    "end": "2263200"
  },
  {
    "text": "sorry complete C and complete what do you mean by this oh um",
    "start": "2263200",
    "end": "2271200"
  },
  {
    "text": "[Music]",
    "start": "2273990",
    "end": "2283400"
  },
  {
    "text": "y okay oh yeah so the basic idea behind this is ASD maps maps all functionality",
    "start": "2283400",
    "end": "2289800"
  },
  {
    "text": "which the X6 has like all arithmetic all pointer and so on um it of course has",
    "start": "2289800",
    "end": "2297240"
  },
  {
    "text": "the same true Inc completeness as the x86 so therefore it must be assuming you",
    "start": "2297240",
    "end": "2302560"
  },
  {
    "text": "can prove that the X6 is turn complete um but the the important part",
    "start": "2302560",
    "end": "2308359"
  },
  {
    "text": "is not so much whether you can do any calculations the important part is whether the translation which you get is",
    "start": "2308359",
    "end": "2314960"
  },
  {
    "text": "provably like means the same as the original program because that's the really we if I try to prove anything on",
    "start": "2314960",
    "end": "2320920"
  },
  {
    "text": "the meta CD right now and my translation is broken the proof is invalid but that's something I have to live with I",
    "start": "2320920",
    "end": "2327079"
  },
  {
    "text": "guess um because I'm too stupid to get prove of Inc correct translation and all",
    "start": "2327079",
    "end": "2332119"
  },
  {
    "text": "of the stuff about it being a super set of bad ideas is just the excuse I made up for me not being",
    "start": "2332119",
    "end": "2337960"
  },
  {
    "text": "capable of doing this so um you just have to trust",
    "start": "2337960",
    "end": "2343440"
  },
  {
    "text": "me all right um things which I would like to add in the future at some point",
    "start": "2343760",
    "end": "2349079"
  },
  {
    "text": "we have seen that one instruction gets translated to multiple instructions like the the move e EVP plus something gets",
    "start": "2349079",
    "end": "2355680"
  },
  {
    "text": "translated to separate instructions so um the code is being expanded gets larger and larger and larger and some",
    "start": "2355680",
    "end": "2362079"
  },
  {
    "text": "redundancies is being introduced by this translation so in the long run as I've already given up the idea of of provably",
    "start": "2362079",
    "end": "2368480"
  },
  {
    "text": "correct translation um it would be good to have a PE Optimizer which goes over the translated code and like optimizes",
    "start": "2368480",
    "end": "2374280"
  },
  {
    "text": "it to make it like more reduce the redundancy another thing is it would be",
    "start": "2374280",
    "end": "2379520"
  },
  {
    "text": "really useful to have an automated tool to find any mistakes in the translation now for this the obvious CH choice would",
    "start": "2379520",
    "end": "2385720"
  },
  {
    "text": "be an emulator you take an application you translate parts of it and you run them in the emulator instead of the",
    "start": "2385720",
    "end": "2390760"
  },
  {
    "text": "original application um that would be really really useful not only for the stuff",
    "start": "2390760",
    "end": "2397000"
  },
  {
    "text": "leing for copy protection for example as well um but then again my day has um a",
    "start": "2397000",
    "end": "2403359"
  },
  {
    "text": "relatively limited set of hours of which I have to waste a good amount on stuff like food and sleep and uh if anybody",
    "start": "2403359",
    "end": "2410880"
  },
  {
    "text": "wants to volunteer writing an emulator for my CPU go ahead you'll get one beer but",
    "start": "2410880",
    "end": "2417480"
  },
  {
    "text": "you right example of the translation um here we have a very simple hello world",
    "start": "2417480",
    "end": "2422720"
  },
  {
    "text": "program pushes EB EVP saves the frame pointer pushes the offset of world called print and the translation looks",
    "start": "2422720",
    "end": "2430079"
  },
  {
    "text": "very similar you store the frame Point into a temporary register I don't do the when you push something on the stack to",
    "start": "2430079",
    "end": "2435800"
  },
  {
    "text": "save a thing I have so many registers I can just store it away um well you store",
    "start": "2435800",
    "end": "2441000"
  },
  {
    "text": "the stack pointer into the frame pointer move ESP is the same as store SP to FP",
    "start": "2441000",
    "end": "2447359"
  },
  {
    "text": "then you push the or you store the offset of this string over here from the op register and invoke the printed",
    "start": "2447359",
    "end": "2454560"
  },
  {
    "text": "function um then you just well restore the frame pointer equivalent instruction",
    "start": "2454560",
    "end": "2462800"
  },
  {
    "text": "we do not need a stack correction as we're not pushing so this one like Falls away completely and then we return very",
    "start": "2462800",
    "end": "2469440"
  },
  {
    "text": "very simple now um more AR code can get translated as well here we have a piece",
    "start": "2469440",
    "end": "2475400"
  },
  {
    "text": "of code that um basically does a look up in an array of of handles closes the handle overrides it with a no bind and",
    "start": "2475400",
    "end": "2482640"
  },
  {
    "text": "then calls end thread here you have the index coming in up there as",
    "start": "2482640",
    "end": "2488240"
  },
  {
    "text": "around here then the Base address of the table is being loaded into ECX",
    "start": "2488240",
    "end": "2493280"
  },
  {
    "text": "here the index is being multiplied by the size of a pointer or that is being",
    "start": "2493280",
    "end": "2498800"
  },
  {
    "text": "pushed close handle is being called well the the stuff at the location of the",
    "start": "2498800",
    "end": "2503920"
  },
  {
    "text": "table plus the index * 4 is being pushed close handle is called um a zero is",
    "start": "2503920",
    "end": "2509520"
  },
  {
    "text": "written to the same location over here in these three instructions zero is pushed as the the exit value for the",
    "start": "2509520",
    "end": "2516240"
  },
  {
    "text": "thread and end thread is called now the translation is gotten slightly larger because we do away with",
    "start": "2516240",
    "end": "2524119"
  },
  {
    "text": "all these crazy news of all these map things you have the index being stored",
    "start": "2524119",
    "end": "2530000"
  },
  {
    "text": "into the general register zero you have the um wait a",
    "start": "2530000",
    "end": "2535720"
  },
  {
    "text": "second oh yeah you have the stuff at this location being loaded into go1 you multiply the index with four",
    "start": "2535720",
    "end": "2544079"
  },
  {
    "text": "which we just had in the other instruction you add both things together load stuff from the memory",
    "start": "2544079",
    "end": "2549760"
  },
  {
    "text": "location into the general register Zero Store it into the output register which is equivalent to pushing the handle from",
    "start": "2549760",
    "end": "2555440"
  },
  {
    "text": "the table call like load the address who sorry load the address of close handle",
    "start": "2555440",
    "end": "2563160"
  },
  {
    "text": "or close handle call it store the input register like the index into g00 load",
    "start": "2563160",
    "end": "2569520"
  },
  {
    "text": "Base address of the table um multiply by four add it together store the zero into",
    "start": "2569520",
    "end": "2577839"
  },
  {
    "text": "the location which we just read the handle from store zero in an output register and call n thread so that's",
    "start": "2577839",
    "end": "2585359"
  },
  {
    "text": "pretty much or fairly [Music] obvious so um yeah I have some very bad",
    "start": "2585359",
    "end": "2593240"
  },
  {
    "text": "habit when speaking it's so M and yum all right",
    "start": "2593240",
    "end": "2598760"
  },
  {
    "text": "um I mentioned before that the abstract CPU does not have a red instruction prefix so we need to translate",
    "start": "2599960",
    "end": "2607680"
  },
  {
    "text": "the Reps into a real artificial Loop so we need to restructure the control",
    "start": "2607680",
    "end": "2613440"
  },
  {
    "text": "flow um this expands the code length significantly because rep is just one",
    "start": "2613440",
    "end": "2618640"
  },
  {
    "text": "bite and we will need a loop which increases the value Compares it and then branches so we need a whole bunch of",
    "start": "2618640",
    "end": "2625640"
  },
  {
    "text": "instructions um it's quite interesting though because it clarifies the true extent of the loopiness of a certain",
    "start": "2625640",
    "end": "2630800"
  },
  {
    "text": "function because in x86 code you often have loops where you don't really realize they're there um",
    "start": "2630800",
    "end": "2638079"
  },
  {
    "text": "this is an example this isuse the x86 code and like the phph of the x86 code",
    "start": "2638079",
    "end": "2645160"
  },
  {
    "text": "which has one long block of instructions then a branch where they skip one block and then the rest of the the function",
    "start": "2645160",
    "end": "2651599"
  },
  {
    "text": "and this is what it looks like the structur it has a whole bunch of tiny tiny new copying",
    "start": "2651599",
    "end": "2657400"
  },
  {
    "text": "memory I'll show this an [Music]",
    "start": "2657400",
    "end": "2662959"
  },
  {
    "text": "8 so this the flow graph and when we scroll",
    "start": "2664559",
    "end": "2672319"
  },
  {
    "text": "closer we see all those rep move SDS over",
    "start": "2672319",
    "end": "2679370"
  },
  {
    "text": "[Music] here and if we restructure the graph",
    "start": "2679370",
    "end": "2685880"
  },
  {
    "text": "appropriately we can see all those reped move SDS being nicely restructured into small",
    "start": "2685880",
    "end": "2692280"
  },
  {
    "text": "Loops which decrease the counter right here wa I'll zoom in further",
    "start": "2692280",
    "end": "2698079"
  },
  {
    "text": "which decrease a counter right here and then Branch with it it's not zero like Loop until the counter is",
    "start": "2698079",
    "end": "2704559"
  },
  {
    "text": "zero all",
    "start": "2704559",
    "end": "2707760"
  },
  {
    "text": "right any questions concerning the translation so far",
    "start": "2711319",
    "end": "2718839"
  },
  {
    "text": "[Music] yes I made it up what have been smarter",
    "start": "2719450",
    "end": "2725200"
  },
  {
    "text": "to use new rgl or use address notation or something similar but all the solutions which i' seen didn't quite",
    "start": "2725200",
    "end": "2731400"
  },
  {
    "text": "satisfy me in terms of well Aesthetics and um I know it's a crazy",
    "start": "2731400",
    "end": "2737760"
  },
  {
    "text": "thing to say IL had built an intermediate language into AA which was not officially there you could trigger",
    "start": "2737760",
    "end": "2744520"
  },
  {
    "text": "it using shift f11 or something but um that did not abstract the stepway and",
    "start": "2744520",
    "end": "2749599"
  },
  {
    "text": "that was really really geared towards decompilation and um the problems which I'm trying to solve are really not",
    "start": "2749599",
    "end": "2755359"
  },
  {
    "text": "decompilation related so I end up with a very very different",
    "start": "2755359",
    "end": "2760440"
  },
  {
    "text": "design would be smart well it would have been really smart to use the GCC Intermediate Language which they",
    "start": "2760440",
    "end": "2766079"
  },
  {
    "text": "generate because I could adjust then well yeah GCC do and then like GCC",
    "start": "2766079",
    "end": "2772640"
  },
  {
    "text": "source code into the Intermediate Language and then analyze both the binary and the 3C code but then again I'm not that smart and I can always like",
    "start": "2772640",
    "end": "2779760"
  },
  {
    "text": "compile it to the very end the disassemble then translat doesn't really make that much of a",
    "start": "2779760",
    "end": "2785559"
  },
  {
    "text": "difference all right so data analysis the topic of this speech or at least the topic which I",
    "start": "2785559",
    "end": "2792440"
  },
  {
    "text": "officially said it would be I just tested whether my keyboard is truly spil",
    "start": "2792440",
    "end": "2797720"
  },
  {
    "text": "Pro all right um so what is data flow analysis really for first off it's",
    "start": "2797720",
    "end": "2804520"
  },
  {
    "text": "really useful for clarifying variable interdependence like which variable affects which other variable um it's",
    "start": "2804520",
    "end": "2811720"
  },
  {
    "text": "Prime applications or the application where I first stumbled across data from analysis was structure and constru",
    "start": "2811720",
    "end": "2817599"
  },
  {
    "text": "because you need some way to find high level data structures or understand what they're doing how they're laid out and so on so um that was the the first place",
    "start": "2817599",
    "end": "2826839"
  },
  {
    "text": "where I stumbled across them then I tried to build my my precondition verification engine I noticed that in",
    "start": "2826839",
    "end": "2832440"
  },
  {
    "text": "order to like verify this value is smaller than a constant um I had to do",
    "start": "2832440",
    "end": "2838200"
  },
  {
    "text": "inverse data for to find out all variables which could have like impacted this variable at any point in time and",
    "start": "2838200",
    "end": "2845200"
  },
  {
    "text": "um the other important use of of data for analysis is the propagation of type information we have all seen either this",
    "start": "2845200",
    "end": "2852680"
  },
  {
    "text": "beautiful type craft that they loaded from the the header parts or from the type system now it would be very very",
    "start": "2852680",
    "end": "2858839"
  },
  {
    "text": "useful if this would propagate through like all variables so yeah a size team",
    "start": "2858839",
    "end": "2864119"
  },
  {
    "text": "which gets assigned to another variable so it propagates it to the other variable and so on this would make assembly a very strongly type system and",
    "start": "2864119",
    "end": "2870880"
  },
  {
    "text": "would be very useful for many things um in the long run data FL analysis is in my opinion the way to find bu",
    "start": "2870880",
    "end": "2877119"
  },
  {
    "text": "automatically and find B of them and um the interesting part is if you can keep",
    "start": "2877119",
    "end": "2882200"
  },
  {
    "text": "the data flow provably complete you can prove absence of bugs um yeah but it's a big",
    "start": "2882200",
    "end": "2891480"
  },
  {
    "text": "gi thought about it and I've discarded it the the main point is um runtime can",
    "start": "2899839",
    "end": "2906359"
  },
  {
    "text": "be hard runtime is always fuzzy so it's not proof and therefore it's a Well",
    "start": "2906359",
    "end": "2912720"
  },
  {
    "text": "weing insult to the Singaporean guy and secondly",
    "start": "2912720",
    "end": "2918440"
  },
  {
    "text": "um this thing is supposed to find bugs in embedded code in devices where I can't get access to the thing at all run",
    "start": "2918440",
    "end": "2924079"
  },
  {
    "text": "a debugger or whatever and then again there's so many people playing with the the dynamic stuff but at some point I",
    "start": "2924079",
    "end": "2929960"
  },
  {
    "text": "decide hey um if you want to differentiate yourself from them in some way you just go for static all the way",
    "start": "2929960",
    "end": "2936000"
  },
  {
    "text": "it's BEC some kind of a religious issue for me because um last like whenever I go to a conference people talk to me",
    "start": "2936000",
    "end": "2941720"
  },
  {
    "text": "about their cool Dynamic analysis tools about hey and we hope this in this in this API if we see this and in this pass",
    "start": "2941720",
    "end": "2947240"
  },
  {
    "text": "by then and um well it's all very interesting it's very good work but",
    "start": "2947240",
    "end": "2953520"
  },
  {
    "text": "sometimes it's just everybody seems to be very fond of debuggers and writing debuggers and using debuggers and hey it",
    "start": "2953520",
    "end": "2960119"
  },
  {
    "text": "got to be different in some way all right different types of data",
    "start": "2960119",
    "end": "2965599"
  },
  {
    "text": "though um kind of the obvious slide there's forwards and there's backwards data flow",
    "start": "2965599",
    "end": "2971200"
  },
  {
    "text": "or inverse data flow so there's the question please find me all the all the",
    "start": "2971200",
    "end": "2976559"
  },
  {
    "text": "locations where this value goes to or this pointer goes to and then there's the other question please find me all",
    "start": "2976559",
    "end": "2982119"
  },
  {
    "text": "the locations where stuff that influenced the current value came from they're different but very closely",
    "start": "2982119",
    "end": "2988200"
  },
  {
    "text": "related problems because we need one to solve the other it's a bit like building a card H the right like right side first",
    "start": "2988200",
    "end": "2994799"
  },
  {
    "text": "and then building the left side afterwards if you want to program something like this because the right side will not work until the left side",
    "start": "2994799",
    "end": "3000359"
  },
  {
    "text": "is done all right now an obvious problem is the representation of indirection how do",
    "start": "3000359",
    "end": "3006359"
  },
  {
    "text": "I do stuff like hey the programmer puts this pointer into a structure and then takes a pointer through the structure",
    "start": "3006359",
    "end": "3012000"
  },
  {
    "text": "and puts it into another structure then to takes a pointer to that other structure and passes on to a sub",
    "start": "3012000",
    "end": "3017280"
  },
  {
    "text": "function and the sub function reads out the pointer to the structure which contains my value somewhere so all this",
    "start": "3017280",
    "end": "3023760"
  },
  {
    "text": "PO terization and putting stuff into one location taking was right before it and so on it's really",
    "start": "3023760",
    "end": "3030280"
  },
  {
    "text": "really some type way of representing this interaction so um the trick is that",
    "start": "3030280",
    "end": "3036680"
  },
  {
    "text": "almost or well every non-global variable in a given program can be represented by a base register plus an",
    "start": "3036680",
    "end": "3043359"
  },
  {
    "text": "offset um this might not be immediately obvious but every plus you knowes a memory reference so um you can represent",
    "start": "3043359",
    "end": "3051640"
  },
  {
    "text": "structures and pointers to pointers to pointers to pointers to pointers and pointers to structures and so on very easy",
    "start": "3051640",
    "end": "3057960"
  },
  {
    "text": "um it doesn't make sense at all for you right now therefore we look at a few examples if we have a structure member",
    "start": "3057960",
    "end": "3064920"
  },
  {
    "text": "um and the general register zero what the pointer to the structure it's very easy if we store a",
    "start": "3064920",
    "end": "3072400"
  },
  {
    "text": "value into the structure member then this value is at g0 plus the offset of",
    "start": "3072400",
    "end": "3077680"
  },
  {
    "text": "the structure member simple if you have a local variable it's that frame pointer plus variable like the offset of",
    "start": "3077680",
    "end": "3084880"
  },
  {
    "text": "variable now if the the pointer to the structure is not in the register but on the stack as a local variable it's just",
    "start": "3084880",
    "end": "3091839"
  },
  {
    "text": "the pointer to the structure as FP plus offset of the local variable plus the offset of the",
    "start": "3091839",
    "end": "3097880"
  },
  {
    "text": "member and uh yeah is that clear very good and well if you have a",
    "start": "3097880",
    "end": "3104799"
  },
  {
    "text": "situation where you store the structure U well a structure structure number a in",
    "start": "3104799",
    "end": "3110240"
  },
  {
    "text": "some structure which is pointed to by a member of structure B and A poter to B",
    "start": "3110240",
    "end": "3116640"
  },
  {
    "text": "is stored in a local variable we have the local variable",
    "start": "3116640",
    "end": "3121720"
  },
  {
    "text": "here and then the point INF structure [Music]",
    "start": "3121720",
    "end": "3127359"
  },
  {
    "text": "B and then the offset for",
    "start": "3127359",
    "end": "3131838"
  },
  {
    "text": "a what do you mean by Footprints you may have like",
    "start": "3141200",
    "end": "3148519"
  },
  {
    "text": "[Music]",
    "start": "3152850",
    "end": "3156070"
  },
  {
    "text": "we just be a cross references a cross reference from the call to the",
    "start": "3161160",
    "end": "3166400"
  },
  {
    "text": "pointer yes yes and tell the situation where you",
    "start": "3169880",
    "end": "3176200"
  },
  {
    "text": "have [Music]",
    "start": "3176200",
    "end": "3183629"
  },
  {
    "text": "um that is solved as well and you will see [Music] that all right um another example of",
    "start": "3189520",
    "end": "3197480"
  },
  {
    "text": "indirection we have a point structure structure a we M it we have structure B",
    "start": "3197480",
    "end": "3204040"
  },
  {
    "text": "which is a pointed to the structure we M structure and then we store the variable which we triy to track into a structure member at",
    "start": "3204040",
    "end": "3212040"
  },
  {
    "text": "offset 10 into structure a and then we store the point to structure a into the member at offset 20 of structure",
    "start": "3212040",
    "end": "3218960"
  },
  {
    "text": "B so now the the variable to track can be represented as frame parenter plus",
    "start": "3218960",
    "end": "3226400"
  },
  {
    "text": "30 we've just said that stru b is a local variable at offset",
    "start": "3226400",
    "end": "3232400"
  },
  {
    "text": "30 plus 20 for the 20th member plus 10 for the variable to",
    "start": "3232400",
    "end": "3239599"
  },
  {
    "text": "track so you can get like solve fairly sophisticated indirection things",
    "start": "3239599",
    "end": "3247640"
  },
  {
    "text": "here coming to aling are there any questions concerning this this indirection stuff",
    "start": "3248319",
    "end": "3255880"
  },
  {
    "text": "yes um well because I have to add the offset",
    "start": "3257559",
    "end": "3263000"
  },
  {
    "text": "and then reference [Music] you do well Oh you mean get another",
    "start": "3263000",
    "end": "3271160"
  },
  {
    "text": "arrow well I mean it's just a matter the data structure doesn't have a plus in it",
    "start": "3271160",
    "end": "3276200"
  },
  {
    "text": "it's just a data structure so for the slide it was a plus and in my notes it was a plus when I came up with this so",
    "start": "3276200",
    "end": "3282880"
  },
  {
    "text": "um yeah aliasing leasing is the Big Boon to to Pro proability of um data FL",
    "start": "3282880",
    "end": "3291079"
  },
  {
    "text": "whenever you say prove the data FL somebody says everything and it's screw um so",
    "start": "3291079",
    "end": "3296839"
  },
  {
    "text": "the we have to have some solution to theing problem what is the aing problem the aing problem is um basically if I",
    "start": "3296839",
    "end": "3306280"
  },
  {
    "text": "store something in some memory location how do I know nobody has gotten well the",
    "start": "3306280",
    "end": "3311760"
  },
  {
    "text": "programmer has not gotten app pointer to that memory location at some other point in time or has gotten a pointer to a",
    "start": "3311760",
    "end": "3317240"
  },
  {
    "text": "location right before my location adds to it and uses that to to read from my my memory later on so um yeah that will",
    "start": "3317240",
    "end": "3326680"
  },
  {
    "text": "screw me majorly because the programmer can all of a sudden read stuff which I well he had written to a memory location",
    "start": "3326680",
    "end": "3332839"
  },
  {
    "text": "without me noticing so I need to find a way to like make sure I have all the pointers to this memory",
    "start": "3332839",
    "end": "3341039"
  },
  {
    "text": "region um an aling example here is we have some structure pointer and um some structure so we take",
    "start": "3341160",
    "end": "3350039"
  },
  {
    "text": "the address of the structure into the structure pointer and now the variable which we're tracking is being stored",
    "start": "3350039",
    "end": "3356359"
  },
  {
    "text": "into the structure and a sub function is called with the point Mo the structure which we have taken beforehand so if I",
    "start": "3356359",
    "end": "3363240"
  },
  {
    "text": "had an aling unsa data phone out this I'd stand right here and Trace downwards",
    "start": "3363240",
    "end": "3368280"
  },
  {
    "text": "and never see this so what happens here is um once it",
    "start": "3368280",
    "end": "3373880"
  },
  {
    "text": "is being stored I need to know where the structure like the the memory at this pointer was defined Trace backwards and",
    "start": "3373880",
    "end": "3380319"
  },
  {
    "text": "then Trace forward um to illustrate this I have about nine",
    "start": "3380319",
    "end": "3385920"
  },
  {
    "text": "slides which are really boring and triy so um yeah good",
    "start": "3385920",
    "end": "3391000"
  },
  {
    "text": "luck so here's the the translation of the the function which we just had the",
    "start": "3391000",
    "end": "3396359"
  },
  {
    "text": "Met CPU go backwards one and um the variable tracking is in",
    "start": "3396359",
    "end": "3404079"
  },
  {
    "text": "the input register zero right here now we Trace downwards",
    "start": "3404079",
    "end": "3409880"
  },
  {
    "text": "in the code until we reach this instruction over here here uh the store",
    "start": "3409880",
    "end": "3417720"
  },
  {
    "text": "store I to go7 so now the VAR variable which we're tracking is in go7 and",
    "start": "3417720",
    "end": "3426119"
  },
  {
    "text": "I all right then we have it being stored to memory here go7 is being stored to",
    "start": "3426119",
    "end": "3433640"
  },
  {
    "text": "to2 so now it's at I D7 and to2 plus 0",
    "start": "3433640",
    "end": "3440640"
  },
  {
    "text": "the plus while indicating a memory reference now of course we need to find all El is 2",
    "start": "3440640",
    "end": "3448319"
  },
  {
    "text": "T2 so we do the inverse and forward analysis and we get first of all FP Plus",
    "start": "3448319",
    "end": "3453559"
  },
  {
    "text": "8 because to2 here was loed as an addition to eight",
    "start": "3453559",
    "end": "3459039"
  },
  {
    "text": "by well this line addition 8 to the frame pointer and we get FP + 0 + 4",
    "start": "3459039",
    "end": "3467280"
  },
  {
    "text": "because up here we see that FP + 4 has been stored at FP plus 0 so FP",
    "start": "3467280",
    "end": "3474799"
  },
  {
    "text": "Plus 8 would be the stuff that has been stored here",
    "start": "3474799",
    "end": "3482520"
  },
  {
    "text": "here plus four that's why we have this FP plus 0 + 4 so now we have all the",
    "start": "3482520",
    "end": "3488359"
  },
  {
    "text": "aases to to this memory location and we continue the for",
    "start": "3488359",
    "end": "3493400"
  },
  {
    "text": "analysis as Next Step um FP is being stored in t00 so all aliases",
    "start": "3493400",
    "end": "3500920"
  },
  {
    "text": "with FP as a base register have to be duplicated with a new base register",
    "start": "3500920",
    "end": "3507558"
  },
  {
    "text": "and then the memory at t0 is being loaded into output register Z here as we",
    "start": "3508880",
    "end": "3516760"
  },
  {
    "text": "know t0 0 contained well as we know at P plus 0 + 4 was um a",
    "start": "3516760",
    "end": "3525359"
  },
  {
    "text": "pointer to the stuff we trting we now have 00 plus 4 containing well containing our",
    "start": "3525359",
    "end": "3534440"
  },
  {
    "text": "variable as well because t0 + 0 + 4 now you had a load from t0 plus 0 which Cuts",
    "start": "3534440",
    "end": "3542680"
  },
  {
    "text": "this way into o00 so now we have all these elas um yes I know that's quite a few",
    "start": "3542680",
    "end": "3549960"
  },
  {
    "text": "aliases for a really short bit of PR but like for us we now have a sub function invocation right here and all the",
    "start": "3549960",
    "end": "3557760"
  },
  {
    "text": "registers and all the Alias is marked in red will not survive the call in terms",
    "start": "3557760",
    "end": "3562920"
  },
  {
    "text": "of they will not be accessible in the subfunction the subun fun can only access access Global registers and",
    "start": "3562920",
    "end": "3569359"
  },
  {
    "text": "output registers it canot cannot access either temporary registers nor the frame",
    "start": "3569359",
    "end": "3574960"
  },
  {
    "text": "pointer so all this is gone here we are in the sub function and",
    "start": "3574960",
    "end": "3581400"
  },
  {
    "text": "we have these two ales go7 and i00 plus4",
    "start": "3581400",
    "end": "3587720"
  },
  {
    "text": "so um go7 gets started into to1 so we have to track to1 as",
    "start": "3587720",
    "end": "3594200"
  },
  {
    "text": "well and now um I gets stored into go7 so this",
    "start": "3594200",
    "end": "3601280"
  },
  {
    "text": "I so this L yes to be duplicate with the",
    "start": "3601799",
    "end": "3606880"
  },
  {
    "text": "new base register in the next step like this okay and now four is being added to",
    "start": "3606880",
    "end": "3616200"
  },
  {
    "text": "go7 like this and that means that we have to well",
    "start": "3616200",
    "end": "3623760"
  },
  {
    "text": "Force the add to go7 and the result is being stored in to2 so it was7 +",
    "start": "3623760",
    "end": "3630000"
  },
  {
    "text": "4 and now you add four which means you subtract four from this offset here I have to do this with my hand otherwise",
    "start": "3630000",
    "end": "3636000"
  },
  {
    "text": "I'm bline um now this might not be really clear right now um the trick is we know",
    "start": "3636000",
    "end": "3644920"
  },
  {
    "text": "the memory location at g07 + 4 contains the value which we are",
    "start": "3644920",
    "end": "3652200"
  },
  {
    "text": "tracking somebody loads to2 with with g07 + 4 so now we know to2",
    "start": "3652200",
    "end": "3660400"
  },
  {
    "text": "directly points to the memory location in which the value we are tracking is it's really really really simple um if I",
    "start": "3660400",
    "end": "3667839"
  },
  {
    "text": "know that I don't know FP plus 40 there's a volue which to keep tabs on",
    "start": "3667839",
    "end": "3673960"
  },
  {
    "text": "and somebody adds 40 to FP I know that now FP points to the value it's really",
    "start": "3673960",
    "end": "3681440"
  },
  {
    "text": "it looks very complicated but it really isn't so um",
    "start": "3681440",
    "end": "3686720"
  },
  {
    "text": "should I go over this again or is this clear uh like raise a hand if this is",
    "start": "3686720",
    "end": "3693240"
  },
  {
    "text": "clear raise your hand if you want me to go over it again",
    "start": "3693240",
    "end": "3698640"
  },
  {
    "text": "okay so I will not go over it again all right um then we know that at",
    "start": "3698640",
    "end": "3706039"
  },
  {
    "text": "T2 +0 the value which we're ATT tracking is being being stored so we have a load",
    "start": "3706039",
    "end": "3712599"
  },
  {
    "text": "memory from this location so we see that now as T2 + 0",
    "start": "3712599",
    "end": "3719039"
  },
  {
    "text": "contains the value which we are tracking and the value of T2 to2 is being stored into",
    "start": "3719039",
    "end": "3724359"
  },
  {
    "text": "g0 we now have the value which we're tracking in g0 and now we're pretty much done we've",
    "start": "3724359",
    "end": "3730599"
  },
  {
    "text": "solved the alling problem here and correctly track the variable because now g z or we have another slide here which",
    "start": "3730599",
    "end": "3737520"
  },
  {
    "text": "is of no importance now we at the end of the function and g0 gets returned so we",
    "start": "3737520",
    "end": "3743680"
  },
  {
    "text": "go back with a bunch of slides [Music]",
    "start": "3743680",
    "end": "3750949"
  },
  {
    "text": "and we have now successfully tracked the aling of this structure into the pointer",
    "start": "3752160",
    "end": "3758200"
  },
  {
    "text": "into the sub function and the returning of the member which we were tracking from the sub function we have not lost",
    "start": "3758200",
    "end": "3765000"
  },
  {
    "text": "track which we would have lost track like we would have lost track if we had blindly G forwards but since we we took",
    "start": "3765000",
    "end": "3771039"
  },
  {
    "text": "care of finding all leases to a certain memory location we had no problem did",
    "start": "3771039",
    "end": "3776119"
  },
  {
    "text": "not lose track and successfully went through here and this is actually provably complete in terms of um if you",
    "start": "3776119",
    "end": "3784039"
  },
  {
    "text": "make the basic assumption that programmer needs to Define memory before he uses it either by allocating stack",
    "start": "3784039",
    "end": "3789520"
  },
  {
    "text": "space or by allocating memory there's no way for him to to fool you in assembly",
    "start": "3789520",
    "end": "3794720"
  },
  {
    "text": "Assuming he's writing C code and not by screwing with your translation engine on a handwritten assembly level",
    "start": "3794720",
    "end": "3803440"
  },
  {
    "text": "so I know this was a bit rough",
    "start": "3803640",
    "end": "3807760"
  },
  {
    "text": "okay going back to data FL I'm not going to bore you much longer with data flow because it's really really a Hur hurry",
    "start": "3811160",
    "end": "3816760"
  },
  {
    "text": "subject and there's many many other problems in which you can Lear um originally I had um thought that I would",
    "start": "3816760",
    "end": "3823720"
  },
  {
    "text": "add some slides on the Ping up problem and the dealing with recursion problem but then I saw my slides I was like okay",
    "start": "3823720",
    "end": "3830720"
  },
  {
    "text": "no you're not that sistic so um I'll just skip this and probably talk about",
    "start": "3830720",
    "end": "3836559"
  },
  {
    "text": "it next year so um data flow is really really not",
    "start": "3836559",
    "end": "3842160"
  },
  {
    "text": "interesting for you unless you have a severe graph fetish and um next year I will hopefully",
    "start": "3842160",
    "end": "3849240"
  },
  {
    "text": "have solved all the problems which I run into and um be able to explain them in a very short concise and easy to",
    "start": "3849240",
    "end": "3854839"
  },
  {
    "text": "understand manner um right now I think I'll go back to something more entertaining like how can we use these",
    "start": "3854839",
    "end": "3862119"
  },
  {
    "text": "graphs now first off it's possible to regenerate mathematical exper from a data progile which means we can generate",
    "start": "3862119",
    "end": "3869440"
  },
  {
    "text": "nice equation systems to find out whether bugs are triggerable or not so as an example let's assume we have a",
    "start": "3869440",
    "end": "3875480"
  },
  {
    "text": "memory allocator which is broken for the values like the repress sizes of 087 f",
    "start": "3875480",
    "end": "3881480"
  },
  {
    "text": "F9 or to 087 F to the end and we want to try to find out",
    "start": "3881480",
    "end": "3888799"
  },
  {
    "text": "whether we can trigger this but if we have code like this where we have a function a which allocates an array of",
    "start": "3888799",
    "end": "3896559"
  },
  {
    "text": "structures and you're given the size of the structure and the number of the structures basically here and just P",
    "start": "3896559",
    "end": "3904319"
  },
  {
    "text": "size times count plus 12 bytes for management internal data management whatever and then you have a function",
    "start": "3904319",
    "end": "3911119"
  },
  {
    "text": "called get structure array which takes a user Supply count value and passes this along with the",
    "start": "3911119",
    "end": "3918359"
  },
  {
    "text": "size into Fun a to allocate this array of structures now um question is if the",
    "start": "3918359",
    "end": "3925920"
  },
  {
    "text": "size of the structure Str a is 384 bytes can we trigger the P bu just allocating",
    "start": "3925920",
    "end": "3933680"
  },
  {
    "text": "less memory due to multiplicative drround is cheating so that doesn't count question is can we trigger this",
    "start": "3933680",
    "end": "3939279"
  },
  {
    "text": "value now how would you find out it will probably take you a while if",
    "start": "3939279",
    "end": "3945079"
  },
  {
    "text": "you did this manually and um if you have a data flow graph for count you can like",
    "start": "3945079",
    "end": "3951480"
  },
  {
    "text": "for the value coming into the pet itself you can generate an",
    "start": "3951480",
    "end": "3957119"
  },
  {
    "text": "expression and then try to have maple Solve IT Maple might be known to some people it's used in universities not for",
    "start": "3957119",
    "end": "3963760"
  },
  {
    "text": "doing your homework or helping you with your homework depends on on the",
    "start": "3963760",
    "end": "3970039"
  },
  {
    "text": "appliation so what we do is we generate these equations and feed them into a maple um",
    "start": "3970039",
    "end": "3976880"
  },
  {
    "text": "which is like the user Supply input times the size of the structure plus the 12 btes and they're supposed to be equal",
    "start": "3976880",
    "end": "3983319"
  },
  {
    "text": "to 7 f f FF 7 f f FF -1 7 F f-2 and so",
    "start": "3983319",
    "end": "3989200"
  },
  {
    "text": "on and um all this has to be modular 2 to the^ of 32 because we only have 30",
    "start": "3989200",
    "end": "3994720"
  },
  {
    "text": "registers and it'll wrap around after every four bilon or so so let's start",
    "start": "3994720",
    "end": "4001720"
  },
  {
    "text": "May oh we already have started which means I have to contr this",
    "start": "4001720",
    "end": "4009079"
  },
  {
    "text": "ah okay",
    "start": "4009079",
    "end": "4013079"
  },
  {
    "text": "thousand mathemati uh one second please need to find my",
    "start": "4015680",
    "end": "4024240"
  },
  {
    "text": "slide all right here we are so we take this",
    "start": "4024920",
    "end": "4031079"
  },
  {
    "text": "oops take this equation here go over to",
    "start": "4031359",
    "end": "4036440"
  },
  {
    "text": "Maple and see where it has a solution does not doesn't for the next",
    "start": "4036440",
    "end": "4042540"
  },
  {
    "text": "[Music] value doesn't for the next next value doesn't for the next",
    "start": "4042540",
    "end": "4050640"
  },
  {
    "text": "value doesn't for the next value doesn't for the next",
    "start": "4050640",
    "end": "4056520"
  },
  {
    "text": "value and does not for the last value so we know in this particular location although the pet is buggy there's no way",
    "start": "4056520",
    "end": "4063720"
  },
  {
    "text": "in hell that we can ever trigger this bug now the interesting part is um",
    "start": "4063720",
    "end": "4069200"
  },
  {
    "text": "structure sizes affect these equations now if the structure gets a",
    "start": "4069200",
    "end": "4074400"
  },
  {
    "text": "new structure member for example by me submitting a nice patch adding a result field for further like later",
    "start": "4074400",
    "end": "4080039"
  },
  {
    "text": "usage um the structure sizes changes to 388 now if the structure size is",
    "start": "4080039",
    "end": "4087599"
  },
  {
    "text": "388 we have to well do our calculations again we go",
    "start": "4087599",
    "end": "4093640"
  },
  {
    "text": "back first one doesn't have a solution second one",
    "start": "4093640",
    "end": "4100120"
  },
  {
    "text": "doesn't third one doesn't third fourth one does have",
    "start": "4100120",
    "end": "4105798"
  },
  {
    "text": "Solutions so now the bu is triggerable and uh yeah you can crop the heat",
    "start": "4105799",
    "end": "4111719"
  },
  {
    "text": "Bo so this opens up completely new",
    "start": "4111719",
    "end": "4117238"
  },
  {
    "text": "possibilities for malicious patching of Open Source software Drive the around nuts submit patches adding Reser",
    "start": "4117239",
    "end": "4122960"
  },
  {
    "text": "structure meths seriously he love it um well yeah so you can the the thing is",
    "start": "4122960",
    "end": "4130838"
  },
  {
    "text": "that most people don't realize that sizes of structures sizes of data structures in impact bugs as well it's",
    "start": "4130839",
    "end": "4136880"
  },
  {
    "text": "not only code it's not only code paths there's more there's sizes and so on so",
    "start": "4136880",
    "end": "4142480"
  },
  {
    "text": "um yeah you can do like play very very interesting tricks with",
    "start": "4142480",
    "end": "4148120"
  },
  {
    "text": "this um okay now skipping all over the the complicated parts to the really simple one there's a product called bu",
    "start": "4148120",
    "end": "4154960"
  },
  {
    "text": "scan which is apparently an appliance running Ida um which generates you very interesting reports which almost have",
    "start": "4154960",
    "end": "4161719"
  },
  {
    "text": "the same functionality as some Ida scripts which I've seen in 2000 from what I can tell it doesn't do",
    "start": "4161719",
    "end": "4167560"
  },
  {
    "text": "anything um like object or structure reconstruction so it doesn't do um much of buiz arithmetics either and um well H",
    "start": "4167560",
    "end": "4177838"
  },
  {
    "text": "the reason why I release my scripts is because well back in the days I thought they were not usable or not useful to",
    "start": "4177839",
    "end": "4184278"
  },
  {
    "text": "anybody and um somebody's offering a product now I'm a good good disciple of",
    "start": "4184279",
    "end": "4190960"
  },
  {
    "text": "economics if somebody's offering something there's a market therefore my original assumption that the scripts are",
    "start": "4190960",
    "end": "4196159"
  },
  {
    "text": "useless is not true therefore my original decision to not release them was wrong therefore I have to release",
    "start": "4196159",
    "end": "4202040"
  },
  {
    "text": "them if there's a product so um there is a product on Source Forge now or a project on Source",
    "start": "4202040",
    "end": "4208520"
  },
  {
    "text": "Forge called box scan which is open source GPL and um it's a nice um or it's a of",
    "start": "4208520",
    "end": "4214920"
  },
  {
    "text": "IDC scripts which will generate you nice HTML reports I Qui quickly have to start them because IDC is slow as hell",
    "start": "4214920",
    "end": "4224000"
  },
  {
    "text": "so these scripts have pretty much nothing to do with my talk at all um except that there the contents of my",
    "start": "4230000",
    "end": "4235520"
  },
  {
    "text": "slides two years ago slightly refreshed um but I needed to have some",
    "start": "4235520",
    "end": "4241560"
  },
  {
    "text": "sort of Hands-On and like relevant stuff for security or for for everybody here",
    "start": "4241560",
    "end": "4247040"
  },
  {
    "text": "um in this presentation because up to now the presentation has been all theoretical and all um very very little",
    "start": "4247040",
    "end": "4252880"
  },
  {
    "text": "handson and so on and so on so um yeah there a bunch of Ida scripts which will",
    "start": "4252880",
    "end": "4258000"
  },
  {
    "text": "generate nice HTML reports you can modify them very easily to generate lat or Tech compatible output which means",
    "start": "4258000",
    "end": "4264440"
  },
  {
    "text": "you can have automatic white paper generation that is really important um if you want to you can",
    "start": "4264440",
    "end": "4270800"
  },
  {
    "text": "actually start piping the output into mail like a ma output thing and then send it to back track",
    "start": "4270800",
    "end": "4276880"
  },
  {
    "text": "immediately that's going to be very very useful so um it has really really highly",
    "start": "4276880",
    "end": "4281960"
  },
  {
    "text": "Advanced binary auditing capabilities we won even speak about data flowers anything that um involves something",
    "start": "4281960",
    "end": "4287760"
  },
  {
    "text": "complicated such as a high level data structure it does buffer size arithmetics um yeah so it tells you hey",
    "start": "4287760",
    "end": "4294280"
  },
  {
    "text": "the target buffer is smaller than the source buffer and it takes full advantage of the published object",
    "start": "4294280",
    "end": "4299400"
  },
  {
    "text": "reconstructor and structure reconstructor so you can actually like use the OB Constructor and then run bu",
    "start": "4299400",
    "end": "4305080"
  },
  {
    "text": "scan and import bu scan sorry um run bu scan it'll take around sh um it is still",
    "start": "4305080",
    "end": "4311480"
  },
  {
    "text": "very stupid it's limited to adding like to auditing string copies and sprints and um yeah I haven't really touched",
    "start": "4311480",
    "end": "4318600"
  },
  {
    "text": "many of the strings since early 2001 so they might smell a",
    "start": "4318600",
    "end": "4323719"
  },
  {
    "text": "little and it can be useful it was useful in my class two days ago where um",
    "start": "4323719",
    "end": "4330040"
  },
  {
    "text": "well it reduces a lot of the stuff you have to do when you a buying gap for example something like um a mail server",
    "start": "4330040",
    "end": "4336400"
  },
  {
    "text": "or whatever which calls St copy like I don't know a thousand times you really",
    "start": "4336400",
    "end": "4342120"
  },
  {
    "text": "want don't want to go through the the application a thousand times and see how the source and tets look so it does this",
    "start": "4342120",
    "end": "4347920"
  },
  {
    "text": "for you um what it doesn't do is data FL tracking so it will lose track of CH",
    "start": "4347920",
    "end": "4353000"
  },
  {
    "text": "pointers very very easily um the beauty of it is it's really really easy to be",
    "start": "4353000",
    "end": "4358080"
  },
  {
    "text": "extended so it takes like H I know the people in my class had not used Ida yet",
    "start": "4358080",
    "end": "4363920"
  },
  {
    "text": "but they were able to write extensions for it to check for another Library thing so everybody's invited to submit",
    "start": "4363920",
    "end": "4369800"
  },
  {
    "text": "extensions to the ne open source project and I hope that uh okay",
    "start": "4369800",
    "end": "4375840"
  },
  {
    "text": "yeah in the background you can see it working um I hope had hope that it would be done by the time I reach like the",
    "start": "4375840",
    "end": "4381080"
  },
  {
    "text": "last slide uh it will be done in a minute so we go back to the last slide and ask whe there are any questions",
    "start": "4381080",
    "end": "4386639"
  },
  {
    "text": "right now",
    "start": "4386639",
    "end": "4390360"
  },
  {
    "text": "[Music] yes first off I'm going to write it so everything else comes",
    "start": "4393250",
    "end": "4401960"
  },
  {
    "text": "afterwards any other questions yes",
    "start": "4401960",
    "end": "4407000"
  },
  {
    "text": "uh they're not in the B project because they're not",
    "start": "4409120",
    "end": "4412760"
  },
  {
    "text": "GPL with going to the IL and the analys that way what's The",
    "start": "4414639",
    "end": "4421880"
  },
  {
    "text": "Rao going to to",
    "start": "4423239",
    "end": "4427079"
  },
  {
    "text": "which yeah what like positive to negative things like that",
    "start": "4428360",
    "end": "4435840"
  },
  {
    "text": "well it really can't be compared as I'm I'm not scanning for string copies anymore so um it's a very very different",
    "start": "4435840",
    "end": "4444360"
  },
  {
    "text": "ball",
    "start": "4444360",
    "end": "4446638"
  },
  {
    "text": "game oh oh this is triggerable yeah yeah so Tri so what's the ratio well it pretty much eliminates",
    "start": "4451000",
    "end": "4458120"
  },
  {
    "text": "false positives well first of it doesn't have false negatives because it's be complete",
    "start": "4458120",
    "end": "4465960"
  },
  {
    "text": "sorry assum you got the contract right assuming that I got the contract right and that I got the translation right so",
    "start": "4465960",
    "end": "4472960"
  },
  {
    "text": "um there's no false negatives and um considering the false",
    "start": "4472960",
    "end": "4478679"
  },
  {
    "text": "positives um you will probably have many false positives coming from the fact that the bugs which you find are not",
    "start": "4478679",
    "end": "4484800"
  },
  {
    "text": "triggerable by an attacker something like overflows in configuration file",
    "start": "4484800",
    "end": "4490120"
  },
  {
    "text": "housing you'll find many many of these and those are the fal false positives which we still have",
    "start": "4490120",
    "end": "4497000"
  },
  {
    "text": "um cuz I never made a decision about the license really except that it's still my",
    "start": "4501960",
    "end": "4507120"
  },
  {
    "text": "code so um yeah every was GPL nobody would be able to incorporate this into",
    "start": "4507120",
    "end": "4512280"
  },
  {
    "text": "commercial products oh we had conversation",
    "start": "4512280",
    "end": "4519880"
  },
  {
    "text": "how yeah it's the same it's the same well it's it's always like I write something and as long as I WR like it",
    "start": "4519880",
    "end": "4525480"
  },
  {
    "text": "it's mine and I get Bor of it and I publish it so um I can predict you when",
    "start": "4525480",
    "end": "4532159"
  },
  {
    "text": "my or if my program ever gets done it will be mine for a while and yeah I mean why would I be",
    "start": "4532159",
    "end": "4538760"
  },
  {
    "text": "writing this if I was it's it's a you know as a child I didn't have enough toys so I want this to be mine first I",
    "start": "4538760",
    "end": "4546360"
  },
  {
    "text": "hope that this this analysis in the background is soon done uh it itates over about 1,780 or so calls to Sprint",
    "start": "4546360",
    "end": "4554280"
  },
  {
    "text": "of string called train cut and so on and um we'll hopefully soon be done and",
    "start": "4554280",
    "end": "4560000"
  },
  {
    "text": "output as a nice report um yes so um this off by",
    "start": "4560000",
    "end": "4568800"
  },
  {
    "text": "one [Music] it's um I mean an print which does no",
    "start": "4570440",
    "end": "4579199"
  },
  {
    "text": "termination after the L modifier no I mean like so uh so you see",
    "start": "4579199",
    "end": "4585320"
  },
  {
    "text": "that the size of like the um destination bumper is actually see the size of the",
    "start": "4585320",
    "end": "4590719"
  },
  {
    "text": "scen whatever same and so the way works highly",
    "start": "4590719",
    "end": "4597440"
  },
  {
    "text": "consistent you have to figure out get to figure",
    "start": "4597440",
    "end": "4602760"
  },
  {
    "text": "outy size or not so common take that people",
    "start": "4602760",
    "end": "4610800"
  },
  {
    "text": "use well welln copy cannot off by one as it just doesn't",
    "start": "4612080",
    "end": "4618239"
  },
  {
    "text": "terminate um SN printed depends on the compiler whether it terminates off by",
    "start": "4618239",
    "end": "4623639"
  },
  {
    "text": "one or not so if you write an a small IDC script which asks hey is the target",
    "start": "4623639",
    "end": "4629199"
  },
  {
    "text": "buffer as large as the length specifier plus one then I'll detect it assuming Ida has",
    "start": "4629199",
    "end": "4637639"
  },
  {
    "text": "properly reconstructed the size on the stack and um secondly while assuming",
    "start": "4637639",
    "end": "4643920"
  },
  {
    "text": "that this the size modifier is not dynamically calculated because the script doesn't do data for analysis",
    "start": "4643920",
    "end": "4650040"
  },
  {
    "text": "therefore can't find any dynamically calculated values oh it's done [Music]",
    "start": "4650040",
    "end": "4660360"
  },
  {
    "text": "yeah uh no I will but uh I might have mentioned before that my time is uh yeah",
    "start": "4660360",
    "end": "4668719"
  },
  {
    "text": "I wish I had a 48 hour day okay report is finished",
    "start": "4668719",
    "end": "4675790"
  },
  {
    "text": "[Music]",
    "start": "4675790",
    "end": "4683140"
  },
  {
    "text": "um so we can see that um well yeah the the scripts have",
    "start": "4685239",
    "end": "4690600"
  },
  {
    "text": "eliminated about a th about a th000 library calls and we have 837 left where the",
    "start": "4690600",
    "end": "4699280"
  },
  {
    "text": "scripts are either unable to determine the sizes incorrectly determined the sizes or they're actually dangerous",
    "start": "4699280",
    "end": "4705400"
  },
  {
    "text": "so you see a bunch of string copies here for example where you have a Target buffer",
    "start": "4705400",
    "end": "4711080"
  },
  {
    "text": "of 1,24 byes uh 1,524 and S about",
    "start": "4711080",
    "end": "4716639"
  },
  {
    "text": "248 and then the script will warn you hey this is very dangerous it tells you the severity eight you can put 20 there",
    "start": "4716639",
    "end": "4723080"
  },
  {
    "text": "too it depends on how you write the scripts and how dangerous you think you are and well down here you can see that",
    "start": "4723080",
    "end": "4729880"
  },
  {
    "text": "I was unable to figure out the size of the destination buffer this happens when the PO to destination bu was dynamically",
    "start": "4729880",
    "end": "4735960"
  },
  {
    "text": "calculated there's a whole bunch of string copy auditing it's still a very large report",
    "start": "4735960",
    "end": "4743360"
  },
  {
    "text": "but we have made good experiences with this during the trainings found as a new bug in in",
    "start": "4743360",
    "end": "4750280"
  },
  {
    "text": "imil which the the previous extensive fuzzing of imail had missed because it involved opening an angular brackets",
    "start": "4750280",
    "end": "4757239"
  },
  {
    "text": "than specifying the doain like f domain name colon than the username closing angular bracket which is apparently SMTP",
    "start": "4757239",
    "end": "4764719"
  },
  {
    "text": "valel like RFC valel protocol but only send mail understands it and nobody really implements it and nobody really",
    "start": "4764719",
    "end": "4770080"
  },
  {
    "text": "knows that you can send mail instead of mail to username at domain you can do",
    "start": "4770080",
    "end": "4775120"
  },
  {
    "text": "stuff like mail to Ang bracket open at domain colod username Ang bracket close so it can be useful at times what's what",
    "start": "4775120",
    "end": "4783239"
  },
  {
    "text": "I found to be relatively useful is the the Sprint scanning where it goes through the format string and finds",
    "start": "4783239",
    "end": "4788400"
  },
  {
    "text": "every person s and then expands the perc s to the length of the corresponding bu on the stack so because many times you",
    "start": "4788400",
    "end": "4794520"
  },
  {
    "text": "have something like um this here",
    "start": "4794520",
    "end": "4799639"
  },
  {
    "text": "Whits badle Let's see we have something",
    "start": "4804560",
    "end": "4811239"
  },
  {
    "text": "nicer oh yeah here okay where you have a Target buffer",
    "start": "4811760",
    "end": "4820360"
  },
  {
    "text": "of 1,24 bytes and formance string of percent s perc",
    "start": "4820360",
    "end": "4829239"
  },
  {
    "text": "s h a those are all pointers damn it okay what I'm aiming at for which I",
    "start": "4832880",
    "end": "4838719"
  },
  {
    "text": "don't have an example right now is something like somebody does um this may came from colon percent s and the buffer",
    "start": "4838719",
    "end": "4846440"
  },
  {
    "text": "to be expended in the perc s has the same size as to talk about it they don't account for for stuff like um yeah this",
    "start": "4846440",
    "end": "4854639"
  },
  {
    "text": "string the format string itself has a certain length and that gets added to the length and then they do funny stuff like they take a charm bu of like three",
    "start": "4854639",
    "end": "4861000"
  },
  {
    "text": "or four bytes Sprint up a number into it without checking bounds and so on and so on all right so bu scan is on Source",
    "start": "4861000",
    "end": "4868360"
  },
  {
    "text": "porch um the other stuff will hopefully sometime in the very far future are",
    "start": "4868360",
    "end": "4874440"
  },
  {
    "text": "there any other questions we need to go over",
    "start": "4874440",
    "end": "4879280"
  },
  {
    "text": "[Music]",
    "start": "4884840",
    "end": "4888219"
  },
  {
    "text": "if you build a converter from the interpreted B code language to the Intermediate Language to the",
    "start": "4893080",
    "end": "4898840"
  },
  {
    "text": "intermediate assembly um the analysis layer should work fine but then how many compilers do",
    "start": "4898840",
    "end": "4904960"
  },
  {
    "text": "you know that compile C code inter and intermediate B code",
    "start": "4904960",
    "end": "4911000"
  },
  {
    "text": "y great um I any other",
    "start": "4922440",
    "end": "4929600"
  },
  {
    "text": "questions thanks next well back the summer back",
    "start": "4929600",
    "end": "4937480"
  },
  {
    "text": "adoped",
    "start": "4943520",
    "end": "4946520"
  },
  {
    "text": "I",
    "start": "4973440",
    "end": "4976440"
  },
  {
    "text": "I",
    "start": "5003440",
    "end": "5006440"
  },
  {
    "text": "I",
    "start": "5033440",
    "end": "5036440"
  },
  {
    "text": "I",
    "start": "5063320",
    "end": "5066320"
  },
  {
    "text": "I",
    "start": "5093320",
    "end": "5096320"
  },
  {
    "text": "I",
    "start": "5123320",
    "end": "5126320"
  },
  {
    "text": "I",
    "start": "5153239",
    "end": "5156239"
  },
  {
    "text": "I",
    "start": "5183239",
    "end": "5186239"
  },
  {
    "text": "e",
    "start": "5213239",
    "end": "5216239"
  },
  {
    "text": "I",
    "start": "5243119",
    "end": "5246119"
  },
  {
    "text": "I",
    "start": "5273119",
    "end": "5276119"
  },
  {
    "text": "I",
    "start": "5303119",
    "end": "5306119"
  },
  {
    "text": "I",
    "start": "5333040",
    "end": "5336040"
  },
  {
    "text": "I",
    "start": "5363040",
    "end": "5366040"
  },
  {
    "text": "I",
    "start": "5393040",
    "end": "5396040"
  },
  {
    "text": "I",
    "start": "5422960",
    "end": "5425960"
  },
  {
    "text": "I",
    "start": "5452920",
    "end": "5455920"
  },
  {
    "text": "I",
    "start": "5482920",
    "end": "5485920"
  },
  {
    "text": "I I",
    "start": "5512840",
    "end": "5516880"
  },
  {
    "text": "I",
    "start": "5544199",
    "end": "5547199"
  }
]