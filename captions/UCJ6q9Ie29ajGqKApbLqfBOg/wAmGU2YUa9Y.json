[
  {
    "text": "welcome to my talk you shall not pass analyzing an NSO spy",
    "start": "2600",
    "end": "8920"
  },
  {
    "text": "sample um it's a pleasure it's and it's an honor for me to be able to stand here on the stage at black hat my name is",
    "start": "8920",
    "end": "16358"
  },
  {
    "text": "Matias freeling and I'm the VP of research at the company I verify my main research uh directories are iOS maver",
    "start": "16359",
    "end": "23560"
  },
  {
    "text": "and mobile device Security in General on September 7th in 2023 Apple",
    "start": "23560",
    "end": "30480"
  },
  {
    "text": "released a kind of emergency patch for iOS 16.6 do1 closing two specific vulnerabilities",
    "start": "30480",
    "end": "37559"
  },
  {
    "text": "which have both been exploited in the world one of those vulnerabilities the first one got pretty famous just a",
    "start": "37559",
    "end": "44039"
  },
  {
    "text": "couple of days later and it was called the webp vulnerability on the same day citizen",
    "start": "44039",
    "end": "50320"
  },
  {
    "text": "lab published the latest research about the Pegasus blast pass export chain on",
    "start": "50320",
    "end": "56199"
  },
  {
    "text": "this specific sample NSO used a pasket attachment which was delivered over",
    "start": "56199",
    "end": "61680"
  },
  {
    "text": "iMessage to INF fact iPhones with a zero click export chain the specific Target",
    "start": "61680",
    "end": "67400"
  },
  {
    "text": "here was a person working for a Washington DC based Civil Society organization and the exploit was found",
    "start": "67400",
    "end": "74439"
  },
  {
    "text": "during a routine forensic analysis that has been done on the specific device the attribution was made to",
    "start": "74439",
    "end": "82079"
  },
  {
    "text": "NSO there is a couple of other blast press reports which are available um our",
    "start": "82079",
    "end": "87240"
  },
  {
    "text": "own blog which is featuring a preview for this specific specific talk and then once again there is also another report",
    "start": "87240",
    "end": "94479"
  },
  {
    "text": "which has been done by Amnesty International about the sample",
    "start": "94479",
    "end": "100560"
  },
  {
    "text": "today I'm not going to reveal any more zero days and I'm also not going to leak",
    "start": "100560",
    "end": "106119"
  },
  {
    "text": "any weaponized sample of this export chain but we're going to go on a journey",
    "start": "106119",
    "end": "112079"
  },
  {
    "text": "on how we've discovered and analyzed the latest sample of nso's pigasus exploit",
    "start": "112079",
    "end": "117840"
  },
  {
    "text": "chain what I want you to remember about today is that detecting iOS M with",
    "start": "117840",
    "end": "122920"
  },
  {
    "text": "forensic analysis is possible and I'm going to show you the step which are necessary to unveil the final payload of",
    "start": "122920",
    "end": "129840"
  },
  {
    "text": "the sample and we're going discuss some more specific indicators of compromise for the specific sample which haven't",
    "start": "129840",
    "end": "135599"
  },
  {
    "text": "been discussed in public before so this means we're starting right now here on this little map and",
    "start": "135599",
    "end": "142959"
  },
  {
    "text": "the only thing that we have is our knowledge about this Blas sample last year in October customer",
    "start": "142959",
    "end": "150440"
  },
  {
    "text": "reached out to us and they told us that they found a potentially compromised",
    "start": "150440",
    "end": "156040"
  },
  {
    "text": "device so if a customer reaches out we're usually trying to do a forensic analysis on the specific devices so that",
    "start": "156040",
    "end": "163120"
  },
  {
    "text": "means the customer gave us some data sources in this particular case we got access to crash locks an iTunes backup",
    "start": "163120",
    "end": "171080"
  },
  {
    "text": "and some Telemetry data then you're using normally a couple of tools um for crash logs you have",
    "start": "171080",
    "end": "178159"
  },
  {
    "text": "manual scripts that you can do there is not a wellknown tool already available",
    "start": "178159",
    "end": "183440"
  },
  {
    "text": "but for an iTunes backup you can Resort back to mvt which is your mobile verification toolkit which is developed",
    "start": "183440",
    "end": "190080"
  },
  {
    "text": "by amnesty and the defa facto standard for analyzing iTunes backups for compromises and for toet data you will",
    "start": "190080",
    "end": "196440"
  },
  {
    "text": "run back to scripts but what are we trying to do with this data sources so in the essence",
    "start": "196440",
    "end": "202840"
  },
  {
    "text": "we're looking for examples of suspicious activities this could be a process which",
    "start": "202840",
    "end": "208480"
  },
  {
    "text": "is starting from private temp it could be a process that is Doing Network calls or a process that is",
    "start": "208480",
    "end": "214920"
  },
  {
    "text": "running with elevated PR privileges such as root um additional indicators of compromise of files that have been",
    "start": "214920",
    "end": "221680"
  },
  {
    "text": "Wroten to disk or if a process is crashes repeatedly and the first Glimpse that",
    "start": "221680",
    "end": "227400"
  },
  {
    "text": "I'm normally doing is I just scroll through the list of available crash locks and then in this particular case",
    "start": "227400",
    "end": "234360"
  },
  {
    "text": "there was one pattern which was pretty obvious so we had a couple of Home de",
    "start": "234360",
    "end": "240519"
  },
  {
    "text": "crashes which were about 25 times then there was a little break and then",
    "start": "240519",
    "end": "246280"
  },
  {
    "text": "afterwards we had 35 messages blasor service crashes and messages blasor is",
    "start": "246280",
    "end": "251799"
  },
  {
    "text": "in particular interest here because the S the citizen app report was named blast",
    "start": "251799",
    "end": "257799"
  },
  {
    "text": "pass and messages blast door is the service which is responsible for unpacking IMS attachments and to make",
    "start": "257799",
    "end": "264320"
  },
  {
    "text": "sure that those are rendered safely so this is suspicious so and that means",
    "start": "264320",
    "end": "272120"
  },
  {
    "text": "we should take a a little bit deeper look so if we're looking at the first home de crash what we can see is um of",
    "start": "272120",
    "end": "279720"
  },
  {
    "text": "course the name of the process we can see this particular device is running IO 16.6 and 16.6 was still vulnerable for",
    "start": "279720",
    "end": "286520"
  },
  {
    "text": "blast pass um and then we could see also that this process is just crashing with",
    "start": "286520",
    "end": "292280"
  },
  {
    "text": "a with a normal s board at this time I was believing that this particular crash",
    "start": "292280",
    "end": "297759"
  },
  {
    "text": "was actually not um part of this exploit chain but it resolved to another exploit",
    "start": "297759",
    "end": "303400"
  },
  {
    "text": "chain which is called Pia home which was valid until iOS",
    "start": "303400",
    "end": "309120"
  },
  {
    "text": "16.12 so it looked to me pretty obvious that the attacker might have been just tried to use an old exploit this failed",
    "start": "309120",
    "end": "315440"
  },
  {
    "text": "at first and then they change to the new exploits so not burning any new chains if we're looking into the",
    "start": "315440",
    "end": "321960"
  },
  {
    "text": "messages blast or service crashes we can see that the Exum type is already much",
    "start": "321960",
    "end": "327120"
  },
  {
    "text": "more severe because this is a bad access and it's a protection failure at a specific memory address so something was",
    "start": "327120",
    "end": "333800"
  },
  {
    "text": "clearly going wrong if we're looking into the threat that actually crashed",
    "start": "333800",
    "end": "339440"
  },
  {
    "text": "what we can see here is um that on line 67 we started to see that there's an an",
    "start": "339440",
    "end": "346000"
  },
  {
    "text": "archo which was decoding a couple of objects and if we're scrolling down on this one we can see that this goes up to",
    "start": "346000",
    "end": "352400"
  },
  {
    "text": "line 510 so this has to be a very very large key ariver which has been unived",
    "start": "352400",
    "end": "359960"
  },
  {
    "text": "um or maybe something is clearly wrong with the sample for me that's suspicious as well",
    "start": "359960",
    "end": "366840"
  },
  {
    "text": "so I had a couple of crashes which were all going on on specific time frames",
    "start": "366840",
    "end": "372280"
  },
  {
    "text": "this is a perfect starting point if you want to look into an iTunes backup for further analysis and if you're quickly checking",
    "start": "372280",
    "end": "379560"
  },
  {
    "text": "the backup at this specific point in time we also saw that there is a couple of that there is a process I am transfer",
    "start": "379560",
    "end": "386840"
  },
  {
    "text": "agent which did a couple of network calls this process is responsible for downloading iMessage attachments so this",
    "start": "386840",
    "end": "393960"
  },
  {
    "text": "makes sense if we have a messages blast or crash and we have a process which is downloading an attachment",
    "start": "393960",
    "end": "399440"
  },
  {
    "text": "before but the question is can we also see that specific attachment in the data",
    "start": "399440",
    "end": "405800"
  },
  {
    "text": "and yes we can we can see that there is a sample. PK pass file which has been",
    "start": "405800",
    "end": "410919"
  },
  {
    "text": "downloaded eight times it could be all the same sample it could be different samples that have been downloaded we",
    "start": "410919",
    "end": "416840"
  },
  {
    "text": "don't know that yet but we do know we have this specific mention in three times this is very suspicious as",
    "start": "416840",
    "end": "425160"
  },
  {
    "text": "well but the golden question are those files actually in the",
    "start": "425160",
    "end": "430840"
  },
  {
    "text": "backup and yes they are so at this point we're mostly done",
    "start": "430840",
    "end": "438840"
  },
  {
    "text": "with a certain state of forensic analysis because we've already found a specific sample that is interesting for",
    "start": "438840",
    "end": "444319"
  },
  {
    "text": "us so what we're doing next is now trying to figure out what is a PK pass",
    "start": "444319",
    "end": "450120"
  },
  {
    "text": "sample first um and there's an expert that we since probably last year can always ask",
    "start": "450120",
    "end": "457560"
  },
  {
    "text": "which is always a good choice We just asked gen GPT and the the actual response that we",
    "start": "457560",
    "end": "463879"
  },
  {
    "text": "get here is not that all that that off or wrong so it tells us at the the second paragraph at the bottom that a PK",
    "start": "463879",
    "end": "470479"
  },
  {
    "text": "pass file is actually or essentially a zip archive uh and it contains a couple of Json",
    "start": "470479",
    "end": "476440"
  },
  {
    "text": "files well of course we always should validate so let's check it with file and what we can see here yes indeed it's a",
    "start": "476440",
    "end": "482720"
  },
  {
    "text": "zip archive and the zip archive is roughly 175 kiloby",
    "start": "482720",
    "end": "488120"
  },
  {
    "text": "large so let's uncov it and see what's inside of this if we look inside we find",
    "start": "488120",
    "end": "494840"
  },
  {
    "text": "a couple of Json files as predicted but we also find file which is a logo. PNG that's directly stands out and that's",
    "start": "494840",
    "end": "502039"
  },
  {
    "text": "not only because it has like 5.8 megabytes of a size which is quite a",
    "start": "502039",
    "end": "507479"
  },
  {
    "text": "lot so that logo is definitely huge um if we file again then we can see",
    "start": "507479",
    "end": "515320"
  },
  {
    "text": "that this logo is actually not a PNG file it's a vbp file and this is where",
    "start": "515320",
    "end": "522159"
  },
  {
    "text": "it gets really interesting because this ties us back to the vbp vulnerability that we've talked in the very",
    "start": "522159",
    "end": "527920"
  },
  {
    "text": "beginning um this particular vulnerability is not really solved yet",
    "start": "527920",
    "end": "533320"
  },
  {
    "text": "and there's already a lot of talks that have been going on here and I'm not going to add any more details to the",
    "start": "533320",
    "end": "538519"
  },
  {
    "text": "specific vulnerability today but I I do want to make at least a little bit of note that there is an upcoming talk by",
    "start": "538519",
    "end": "544839"
  },
  {
    "text": "Ian be who is probably going to talk a lot about the specific vulnerability and it's uncovering a couple of the like",
    "start": "544839",
    "end": "550839"
  },
  {
    "text": "unknown questions at the moment now let's take a closer look at",
    "start": "550839",
    "end": "556079"
  },
  {
    "text": "the sample and what is usually the best tool for V analysis this is very obvious of course",
    "start": "556079",
    "end": "561760"
  },
  {
    "text": "it's strings so if we run strings on this um what we only get is a couple of A's so",
    "start": "561760",
    "end": "569120"
  },
  {
    "text": "that's not really helping but maybe we should have started to look at the very beginning of this file and if we look at",
    "start": "569120",
    "end": "574480"
  },
  {
    "text": "the strings here there's a there's two things that directly stood out to me the one is there's a binary P list which is",
    "start": "574480",
    "end": "580160"
  },
  {
    "text": "embedded in this file and the other one is there's a couple of function function functions in the bottom and of course",
    "start": "580160",
    "end": "585640"
  },
  {
    "text": "there has a couple of different strings like an NS call stke array like DL open M Copy so on and so forth that you would",
    "start": "585640",
    "end": "591160"
  },
  {
    "text": "never expect to see in a PNG file or even in a webp file okay so we",
    "start": "591160",
    "end": "596760"
  },
  {
    "text": "definitely need to investigate further it's this stage I could have gone multiple ways so I could have decided to",
    "start": "596760",
    "end": "602800"
  },
  {
    "text": "look more into the vbp vulnerability how it was constructed off but I was more interested in in getting to that stage",
    "start": "602800",
    "end": "608680"
  },
  {
    "text": "where the NS expression is and um working on this binary pist file so",
    "start": "608680",
    "end": "614200"
  },
  {
    "text": "let's extract this B pist file um it took me a little bit of try",
    "start": "614200",
    "end": "620880"
  },
  {
    "text": "and error to get this actually fully extracted and it was not fully clear if the binary P list is actually just starting somewhere in the file and it",
    "start": "620880",
    "end": "627160"
  },
  {
    "text": "goes to the to to the complete end or there's um some some other part at the end which is not belonging to that but",
    "start": "627160",
    "end": "633920"
  },
  {
    "text": "at the end if you do it with DD it works pretty well and you get to a BP list now",
    "start": "633920",
    "end": "640120"
  },
  {
    "text": "what's a BP list and how can we read it and once again Chad GPT is a very good help here we have two two tools which",
    "start": "640120",
    "end": "647160"
  },
  {
    "text": "are very good for that let's start with PLU um if we start here directly at the",
    "start": "647160",
    "end": "654079"
  },
  {
    "text": "beginning of the file um what we can see is once again another like a lot of a",
    "start": "654079",
    "end": "660800"
  },
  {
    "text": "um and then if we go to the bottom we can see that this specific BP list has like 113,000",
    "start": "660800",
    "end": "668040"
  },
  {
    "text": "entries this is not really helpful for analysis so let's",
    "start": "668040",
    "end": "673320"
  },
  {
    "text": "see if pis body itself does any better uh here we can already see that there's",
    "start": "673320",
    "end": "679399"
  },
  {
    "text": "a couple of dictionaries and NS Aries which are contained in the specific pist file um but there's a lot of unprintable",
    "start": "679399",
    "end": "686279"
  },
  {
    "text": "data as well and at the very bottom of the file we can see there's even more of that this is not going to help us here",
    "start": "686279",
    "end": "694839"
  },
  {
    "text": "we need to understand this a little bit better so binary pists are very often",
    "start": "694839",
    "end": "701600"
  },
  {
    "text": "something which is called an nsq dyo and this is a concept which has been used in iOS and Macos very frequently and this",
    "start": "701600",
    "end": "708720"
  },
  {
    "text": "is essentially a method of serialization and deserialization of data um an NSP",
    "start": "708720",
    "end": "715000"
  },
  {
    "text": "archiverse they will always start at a root object and at this root object you have a couple of objects which are lying",
    "start": "715000",
    "end": "721480"
  },
  {
    "text": "like basically uh in line below it those objects can be an array a dictionary an",
    "start": "721480",
    "end": "728680"
  },
  {
    "text": "integer a string or any other kind of complex object structure and those",
    "start": "728680",
    "end": "734279"
  },
  {
    "text": "objects itself can then include other arrays other dictionaries or other objects but all of those objects are",
    "start": "734279",
    "end": "741240"
  },
  {
    "text": "essentially back reference back to those first object that we have in line so",
    "start": "741240",
    "end": "746519"
  },
  {
    "text": "this makes it actually very easy for us in this particular ular analysis because the only thing that we need to care",
    "start": "746519",
    "end": "751880"
  },
  {
    "text": "about is all those top level objects and that means it's time for",
    "start": "751880",
    "end": "758279"
  },
  {
    "text": "some python magic so what we essentially want to do is import your favorite NSK ke arival",
    "start": "758279",
    "end": "765000"
  },
  {
    "text": "lip read and understand security a little bit sa to on break points and essentially just replace array objects",
    "start": "765000",
    "end": "771360"
  },
  {
    "text": "and dictionaries with their top level keys and do not recursively go through the file and at the end you print the",
    "start": "771360",
    "end": "778199"
  },
  {
    "text": "result and it should be all so if we do this",
    "start": "778199",
    "end": "783240"
  },
  {
    "text": "what we're getting back is essentially a structure which looks like that so we can see a couple of the objects and if",
    "start": "783240",
    "end": "790480"
  },
  {
    "text": "we go to the end we already see that we're down to passing objects which is",
    "start": "790480",
    "end": "795600"
  },
  {
    "text": "like at the end of reference 263 so are we better off here yes we are",
    "start": "795600",
    "end": "802000"
  },
  {
    "text": "because we're down to 264 individual objects that we need to analyze and then afterwards we can figure out the",
    "start": "802000",
    "end": "807880"
  },
  {
    "text": "structure so so let's look at a couple of those uh and one of the first ones",
    "start": "807880",
    "end": "813040"
  },
  {
    "text": "which is in particular interest is object reference eight and this one starts with a reference to nine then you",
    "start": "813040",
    "end": "820240"
  },
  {
    "text": "have a lot of references to 10 which are repeated then you have 15 times object",
    "start": "820240",
    "end": "825279"
  },
  {
    "text": "reference 11 10 again um 11 10 11 and",
    "start": "825279",
    "end": "830360"
  },
  {
    "text": "then at the end go Z so 11 seems to be important so let's give this a closer",
    "start": "830360",
    "end": "836079"
  },
  {
    "text": "look and inside of 11 we can actually see that we once again see our NS",
    "start": "836079",
    "end": "841480"
  },
  {
    "text": "expression the function function function function okay this is good um",
    "start": "841480",
    "end": "846959"
  },
  {
    "text": "that's our payload essentially at the end if we're looking at some of the other interesting ones we can already",
    "start": "846959",
    "end": "852959"
  },
  {
    "text": "see here that we have another object reference to a lot of A's and then we have another one for a little bit less a",
    "start": "852959",
    "end": "860199"
  },
  {
    "text": "still quite a lot um what makes it a little bit interesting here is that because you have all those",
    "start": "860199",
    "end": "866279"
  },
  {
    "text": "A's um and this is something which has been used in every single basic exploitation class if you're trying to",
    "start": "866279",
    "end": "872920"
  },
  {
    "text": "exploit a buffer overflow you fill it up with Ace until you know that you can essentially compromise the stack pointer",
    "start": "872920",
    "end": "879800"
  },
  {
    "text": "um or the return pointer and then you know where you are on memories so this is whatever you people tell you at first",
    "start": "879800",
    "end": "885120"
  },
  {
    "text": "always put this Ace on um so it seems to be that the people who are roing this export for nsos are still sticking to",
    "start": "885120",
    "end": "891680"
  },
  {
    "text": "this primitive they could have used some whatever random string they didn't have to use Ace but apparently this is still",
    "start": "891680",
    "end": "898240"
  },
  {
    "text": "the same so essentially you could have detected the samples if you would have unpacked it and just looked for 15 20 25",
    "start": "898240",
    "end": "905160"
  },
  {
    "text": "or even 250 a in common and probably this is not the last time we're going to see this even in weaponized",
    "start": "905160",
    "end": "912639"
  },
  {
    "text": "exploits um object reference 259 then contained another time the",
    "start": "912639",
    "end": "917880"
  },
  {
    "text": "payload so if we sum this up our payload 11 um was used Two Times by objects uh 8",
    "start": "917880",
    "end": "925040"
  },
  {
    "text": "and 259 259 was referenced by 242 and then it gets back to the top level so",
    "start": "925040",
    "end": "931560"
  },
  {
    "text": "this is great so we only know that the only object reference that we need to take care of is essentially object 11 so",
    "start": "931560",
    "end": "939560"
  },
  {
    "text": "let's inspect that payload the payload itself is structured and I'm making this very easy here is",
    "start": "939560",
    "end": "948440"
  },
  {
    "text": "you have some binary data at the very beginning which is a couple of bytes then you have a couple of bites and then",
    "start": "948440",
    "end": "954440"
  },
  {
    "text": "you have the embedded strings that we've already seen this is followed by the NS expression",
    "start": "954440",
    "end": "960399"
  },
  {
    "text": "um some bytes later and some strings again and then at the end it closes with a lot of null bytes and then everything",
    "start": "960399",
    "end": "966959"
  },
  {
    "text": "else just repeats exactly like the first half but of course the remaining questions are what do all these sections",
    "start": "966959",
    "end": "974600"
  },
  {
    "text": "actually do and what I focused on here is once again the NS",
    "start": "974600",
    "end": "980959"
  },
  {
    "text": "expression so we've uncovered the payload right now until the specific Z",
    "start": "980959",
    "end": "986600"
  },
  {
    "text": "and once again of course we can go into different branches and I took the branch of just looking at the NS expression but what is an NS",
    "start": "986600",
    "end": "993800"
  },
  {
    "text": "expression itself and if we're looking at Apple's documentation we can see that apple is",
    "start": "993800",
    "end": "1000800"
  },
  {
    "text": "designing this essentially as a function this is allows you to to filter arrays",
    "start": "1000800",
    "end": "1007880"
  },
  {
    "text": "or searches or sorts um the overall or like the larger category of that is",
    "start": "1007880",
    "end": "1013519"
  },
  {
    "text": "called an NS a predicate and those NS predicate can have those NS Expressions which allow you to execute certain logic",
    "start": "1013519",
    "end": "1020519"
  },
  {
    "text": "operations so essentially you have this function call then you have a receiver a selector name and an argument and let's",
    "start": "1020519",
    "end": "1027438"
  },
  {
    "text": "look at an example so you can have a string which is developer tools o test",
    "start": "1027439",
    "end": "1032918"
  },
  {
    "text": "and then you have the selector which should which is named last pass component and this should resolve then",
    "start": "1032919",
    "end": "1038720"
  },
  {
    "text": "into o test which is the last pass component of the string and that's in a very essential",
    "start": "1038720",
    "end": "1045319"
  },
  {
    "text": "how those nness expressions are built up um if we're looking at the structure of",
    "start": "1045319",
    "end": "1051640"
  },
  {
    "text": "this payload and I'm a bit sorry because this is so small but it's going to get better what we can see here is we have a",
    "start": "1051640",
    "end": "1057760"
  },
  {
    "text": "couple of casts casts to NS thre and the NS thread. class um then we have a",
    "start": "1057760",
    "end": "1064000"
  },
  {
    "text": "couple of references to um an dictionary where different parts of payloads are",
    "start": "1064000",
    "end": "1069480"
  },
  {
    "text": "going to be stored and I'm calling those payload CS payload C and pilot X because",
    "start": "1069480",
    "end": "1074600"
  },
  {
    "text": "they are stored in the keys for the dictionaries x c and CS and at the very",
    "start": "1074600",
    "end": "1079840"
  },
  {
    "text": "bottom we have a a larger payload which is the one that is executed first but",
    "start": "1079840",
    "end": "1085880"
  },
  {
    "text": "there's a first question that we need to answer why is this still possible and I honestly don't know in iOS 15.1 Apple",
    "start": "1085880",
    "end": "1093840"
  },
  {
    "text": "introduced a mitigation that should prevent any of those specific casts for",
    "start": "1093840",
    "end": "1100080"
  },
  {
    "text": "for classes like NS Fred to still be able to execute um IB already introduced in a",
    "start": "1100080",
    "end": "1106440"
  },
  {
    "text": "talk about NS expression um that those mitigations are only implemented by a",
    "start": "1106440",
    "end": "1112240"
  },
  {
    "text": "specific flag which is had like to Falls in memory so that means if NSO found a way to set this flag back in memory with",
    "start": "1112240",
    "end": "1119120"
  },
  {
    "text": "a memory corruption back to one they can execute those classes again um but I haven't found any specific evidence on",
    "start": "1119120",
    "end": "1125600"
  },
  {
    "text": "this export chample sample yet but I like I said I didn't go in much detail about the specific corruption that has",
    "start": "1125600",
    "end": "1131400"
  },
  {
    "text": "been going on um if you're looking at the slide",
    "start": "1131400",
    "end": "1136679"
  },
  {
    "text": "deck when you're downloading it later on you will find a lot more references to NS expressions and how they have been",
    "start": "1136679",
    "end": "1141960"
  },
  {
    "text": "abused in certain exploits before because it's not the first time we've seen that in for entry there was another",
    "start": "1141960",
    "end": "1147960"
  },
  {
    "text": "NSO exploit who which used already NS expression then there is a great talk by",
    "start": "1147960",
    "end": "1153080"
  },
  {
    "text": "andb at last year's obts um about a Sandbox escape and webkit which used this as well and there is a great talk",
    "start": "1153080",
    "end": "1160280"
  },
  {
    "text": "um by Austin EMT at last year's blackhead about how you can use NS expression for exploitation and I don't",
    "start": "1160280",
    "end": "1167000"
  },
  {
    "text": "think this is going to get away so it's a perfect time if you're interested in that just looking some of this",
    "start": "1167000",
    "end": "1173440"
  },
  {
    "text": "up okay so let's get back to it and let's talk about this first executed",
    "start": "1173440",
    "end": "1179200"
  },
  {
    "text": "payload and let's look at it in a little bit more detail so the structure that we can see here is that this is essentially",
    "start": "1179200",
    "end": "1187159"
  },
  {
    "text": "a large base 64 encoded string and so why don't we be naive and just try to do",
    "start": "1187159",
    "end": "1195280"
  },
  {
    "text": "this and this is not working and why because I've overlooked that this",
    "start": "1195280",
    "end": "1204039"
  },
  {
    "text": "specific sample is still using a little bit of compression methods um so we need to do this decom first and we need to",
    "start": "1204039",
    "end": "1210600"
  },
  {
    "text": "understand how this works until we can actually decode it and let's not be naive too so we",
    "start": "1210600",
    "end": "1217280"
  },
  {
    "text": "already used our expert for a couple of things and why don't we try to do this once again with an NS expression and",
    "start": "1217280",
    "end": "1224080"
  },
  {
    "text": "here's the interesting thing because large language models are very great at at taking languages and translating it",
    "start": "1224080",
    "end": "1230159"
  },
  {
    "text": "into other structured languages this is a good opportunity to just try this out if they can actually turn an NS",
    "start": "1230159",
    "end": "1236400"
  },
  {
    "text": "expression and turn it back into Objective C code so I just basically cut out the payload I put the all NS",
    "start": "1236400",
    "end": "1243080"
  },
  {
    "text": "expression in and I put it into tgpt and ask it if it could transform it and yeah it did a pretty pretty good First",
    "start": "1243080",
    "end": "1251600"
  },
  {
    "text": "Response it wasn't perfect but the only question that remains is does it",
    "start": "1251600",
    "end": "1257159"
  },
  {
    "text": "work and yes it does so if we're looking at the and decompressed string what",
    "start": "1257159",
    "end": "1262880"
  },
  {
    "text": "we're getting back to is essentially a l another very very large n expression and this was so large that it",
    "start": "1262880",
    "end": "1270400"
  },
  {
    "text": "was just not easy readable if you just tried to go through it so it's time again for some more python",
    "start": "1270400",
    "end": "1277240"
  },
  {
    "text": "magic and if we do this we result to a nicely formatted NS expression that we",
    "start": "1277240",
    "end": "1282760"
  },
  {
    "text": "can start to go through um this one had actually 2,5 13 line lines of formatt NS",
    "start": "1282760",
    "end": "1292159"
  },
  {
    "text": "expression this is going to be fun okay let's look at a couple of the",
    "start": "1292159",
    "end": "1298279"
  },
  {
    "text": "first lines that we're seeing here um what's the first one of the first thing that this NS expression did is actually",
    "start": "1298279",
    "end": "1304720"
  },
  {
    "text": "load another uh framework and they're loading a framework which is called the office import framework and this office",
    "start": "1304720",
    "end": "1311320"
  },
  {
    "text": "import framework contains a very specific object which is called an OC mapper and this OC mapper has a very",
    "start": "1311320",
    "end": "1318279"
  },
  {
    "text": "nice functionality because it has always a mapper for the current thread so that",
    "start": "1318279",
    "end": "1323480"
  },
  {
    "text": "means this object is always going to be the same if you're still executing this in the the same",
    "start": "1323480",
    "end": "1329360"
  },
  {
    "text": "threat and this is perfect if you want to store something and use variables and",
    "start": "1329360",
    "end": "1334679"
  },
  {
    "text": "NS Expressions NS Expressions itself doesn't allow you to do any kind of variables to do Computing but if you",
    "start": "1334679",
    "end": "1340919"
  },
  {
    "text": "have a dictionary that you can always refer to you can store something in this dictionary with a key and then you can get it back and you can do computations",
    "start": "1340919",
    "end": "1347440"
  },
  {
    "text": "on it and we're going to see that in in every part of the specific NS",
    "start": "1347440",
    "end": "1352919"
  },
  {
    "text": "expression um you can see the store value at the very bottom um and you can see that this is used again um on the",
    "start": "1352919",
    "end": "1360760"
  },
  {
    "text": "next lines for computations um to be able to add or substract something they're going to use",
    "start": "1360760",
    "end": "1366520"
  },
  {
    "text": "something which is called NS predicate utilities which allow you to do some very very basic",
    "start": "1366520",
    "end": "1372440"
  },
  {
    "text": "calculations and then directly in the next lines what we can already see is that they're starting to decoding some",
    "start": "1372440",
    "end": "1378120"
  },
  {
    "text": "of those other payloads that we have seen on the first slide um so this one",
    "start": "1378120",
    "end": "1383200"
  },
  {
    "text": "seems to be once again A B 64 encoded string and then they're storing this one",
    "start": "1383200",
    "end": "1389159"
  },
  {
    "text": "in in another variable in the dictionary and then afterwards they",
    "start": "1389159",
    "end": "1394720"
  },
  {
    "text": "using pist deserialization to get to the um to get to the unpacked part okay so",
    "start": "1394720",
    "end": "1402240"
  },
  {
    "text": "that also means that payload CS is a pist that's interesting so let's try to",
    "start": "1402240",
    "end": "1407880"
  },
  {
    "text": "decode it once again and that didn't",
    "start": "1407880",
    "end": "1414159"
  },
  {
    "text": "work we forgot something and if you look back again at the overall structure um",
    "start": "1414159",
    "end": "1423440"
  },
  {
    "text": "of the payload CS in the very first slide what we can see here is that this payload is basic4 decoded but it also",
    "start": "1423440",
    "end": "1430919"
  },
  {
    "text": "has something which is called a cut de compression and then once again it uses some a um Bas 64 decoding",
    "start": "1430919",
    "end": "1439279"
  },
  {
    "text": "I have no clue what this is so what's a to Bas 64 decoded",
    "start": "1439279",
    "end": "1444400"
  },
  {
    "text": "data and this time I didn't rever to chat GPT but I just wanted to find out if Google knows anything about this and",
    "start": "1444400",
    "end": "1451799"
  },
  {
    "text": "they don't so second try what about cut",
    "start": "1451799",
    "end": "1457200"
  },
  {
    "text": "decompressed data Maybe we're a little bit more lucky here and we are so we can",
    "start": "1457200",
    "end": "1463080"
  },
  {
    "text": "already see that we have one specific head which is on GitHub in the core Foundation framework okay that's good",
    "start": "1463080",
    "end": "1470880"
  },
  {
    "text": "why don't we just try this and once again and let's search on GitHub all the 4 AF to basic4 decoded",
    "start": "1470880",
    "end": "1477960"
  },
  {
    "text": "data and if we do this um we get a couple more hits and which once again",
    "start": "1477960",
    "end": "1483799"
  },
  {
    "text": "refers to to another framework that is used I could have made my life so much",
    "start": "1483799",
    "end": "1488880"
  },
  {
    "text": "easier at this specific point because think about it the specific NS expression is executing in a process so",
    "start": "1488880",
    "end": "1495880"
  },
  {
    "text": "that means that this specific NS expression is only able to execute functions which are available in this",
    "start": "1495880",
    "end": "1502640"
  },
  {
    "text": "process so that means if I would have just taken the a messages blast sample U blast service process and I would have",
    "start": "1502640",
    "end": "1509880"
  },
  {
    "text": "looked at all the libraries which are potentially loaded into it I could have very easily just found one of the",
    "start": "1509880",
    "end": "1515039"
  },
  {
    "text": "potential libraries where this is it and just inspect those okay but why go the easy way if you can do it",
    "start": "1515039",
    "end": "1522360"
  },
  {
    "text": "hard okay now let's import this Frameworks and let's try again and and then we're getting to the",
    "start": "1522360",
    "end": "1529799"
  },
  {
    "text": "binary P list we can already see there's a couple of text inside of that which is",
    "start": "1529799",
    "end": "1534880"
  },
  {
    "text": "very nice and then we can have a very closer look at the specific pist file and if we we also do the property",
    "start": "1534880",
    "end": "1543480"
  },
  {
    "text": "list the serialization we're getting to a very nicely structured dictionary",
    "start": "1543480",
    "end": "1548760"
  },
  {
    "text": "where we can actually see that there is like an iPhone model there's a couple of references and on those references then",
    "start": "1548760",
    "end": "1554880"
  },
  {
    "text": "you have a couple of variables with some integer vales to it okay so this integer values look like",
    "start": "1554880",
    "end": "1562559"
  },
  {
    "text": "some kind of help for computation or some potential memory offsets um and some of the interesting things here is",
    "start": "1562559",
    "end": "1568960"
  },
  {
    "text": "what we could see is there's no reference to any kind of iPads so either this exploit is not valid for iPads at",
    "start": "1568960",
    "end": "1575559"
  },
  {
    "text": "all or they have a completely different exploit and it's also only valid between",
    "start": "1575559",
    "end": "1581080"
  },
  {
    "text": "iOS 16.4.1 and 16.6 so anything uh later",
    "start": "1581080",
    "end": "1586279"
  },
  {
    "text": "is actually not in this conflict file this is great now we have two of those",
    "start": "1586279",
    "end": "1593399"
  },
  {
    "text": "payloads already done and we have two to go so let's look for payload C and we",
    "start": "1593399",
    "end": "1599760"
  },
  {
    "text": "can see that payload C is mentioning in our um first initial payload in in lines",
    "start": "1599760",
    "end": "1605000"
  },
  {
    "text": "99 uh 119 sorry in lines 99 to 115 it's using a slightly different",
    "start": "1605000",
    "end": "1612080"
  },
  {
    "text": "compression MTH format and it's also once again uses property list serialization",
    "start": "1612080",
    "end": "1619360"
  },
  {
    "text": "so this should be pretty easy um to decode that and we can also see in the overall structure at the very beginning",
    "start": "1619360",
    "end": "1625840"
  },
  {
    "text": "that it's using the same kind of AF and cut decompressed and once again AF compression method that the previous",
    "start": "1625840",
    "end": "1633080"
  },
  {
    "text": "sample pilot has used so if we're decoding this um then",
    "start": "1633080",
    "end": "1638679"
  },
  {
    "text": "we get once again a property list and this contains another NS expression and this another NS expression has another",
    "start": "1638679",
    "end": "1646120"
  },
  {
    "text": "payload which is inside the payload C okay so we have a compressed payload",
    "start": "1646120",
    "end": "1652640"
  },
  {
    "text": "which is inside compressed payload C if we decompress this compressed payload inside compressed payload C we're",
    "start": "1652640",
    "end": "1658840"
  },
  {
    "text": "getting into compressed payload inside compressed payload inside compressed payload C and if we do this once again",
    "start": "1658840",
    "end": "1665200"
  },
  {
    "text": "we're getting into compressed payload inside compressed payload inside compressed payload inside compressed payload C but then actually it stops so",
    "start": "1665200",
    "end": "1673600"
  },
  {
    "text": "after we have decompressed the last one we actually down to a very very end where we only have like one remaining NS",
    "start": "1673600",
    "end": "1682000"
  },
  {
    "text": "expression right three are down one to go but there is no mentioning of payload",
    "start": "1682000",
    "end": "1690039"
  },
  {
    "text": "X in neither payload or in any of the payload C's and the subsequent payloads",
    "start": "1690039",
    "end": "1695799"
  },
  {
    "text": "in it we probably forgot something and what we forgot is that there is another",
    "start": "1695799",
    "end": "1701880"
  },
  {
    "text": "payload which is inside our initial payload at the very very bottom of this file um the the compression for it is",
    "start": "1701880",
    "end": "1709360"
  },
  {
    "text": "something that we we already know about so we just have more payloads to do but",
    "start": "1709360",
    "end": "1714519"
  },
  {
    "text": "hopefully this one gets a little bit easier and yes indeed um if we decompress this we just get one very",
    "start": "1714519",
    "end": "1722880"
  },
  {
    "text": "nicely structured NS expression and what we can see here is there's a mentioning of payload X at the very very bottom of",
    "start": "1722880",
    "end": "1730799"
  },
  {
    "text": "it right this is perfect unfortunately not at all because",
    "start": "1730799",
    "end": "1737640"
  },
  {
    "text": "this specific spefic payload is AES encrypted and even though there is the",
    "start": "1737640",
    "end": "1743360"
  },
  {
    "text": "variable which is in the key which has a specific entry in our dictionary if we",
    "start": "1743360",
    "end": "1748480"
  },
  {
    "text": "trying to follow this variable through the whole NS expression we don't have any specific mentioning of the key so",
    "start": "1748480",
    "end": "1754840"
  },
  {
    "text": "there's no key in clear site probably the key is somewhere else in this whole",
    "start": "1754840",
    "end": "1760200"
  },
  {
    "text": "payload or maybe the key is downloaded from the internet I don't know this",
    "start": "1760200",
    "end": "1766519"
  },
  {
    "text": "yet this leaves to a part where we did some part of the payload analysis",
    "start": "1766519",
    "end": "1771880"
  },
  {
    "text": "already but we reached a point where we're not able to progress any further",
    "start": "1771880",
    "end": "1778159"
  },
  {
    "text": "so NSO just hit Ro block for us is this the",
    "start": "1778159",
    "end": "1784159"
  },
  {
    "text": "end maybe because there's a lot more to discover in this specific",
    "start": "1784159",
    "end": "1790000"
  },
  {
    "text": "sample we still have the home de crashes where my initial assumption was that",
    "start": "1790000",
    "end": "1795880"
  },
  {
    "text": "this has been another export chain but amnesty also found and their forensic investigation of this specific sample um",
    "start": "1795880",
    "end": "1804559"
  },
  {
    "text": "that there was also a call and invitation so maybe this is a first part of the chain and we also have a couple",
    "start": "1804559",
    "end": "1811120"
  },
  {
    "text": "of the other things not really accounted for so where is the nest expression",
    "start": "1811120",
    "end": "1816720"
  },
  {
    "text": "bypass if there's another sandbox Escape is there's a pack bypass in all of those",
    "start": "1816720",
    "end": "1823880"
  },
  {
    "text": "um is our encrypted structure really the implant or is there any other mentioning of a command and control structure that",
    "start": "1823880",
    "end": "1829919"
  },
  {
    "text": "we haven't figured out yet so what I can already tell you is the story for this sample is not over and it's going to be",
    "start": "1829919",
    "end": "1836799"
  },
  {
    "text": "to continued all right let's summarize what we did today",
    "start": "1836799",
    "end": "1844120"
  },
  {
    "text": "we started with a couple of messages blast or service crashes and those led us to investigate the backup and in the",
    "start": "1844120",
    "end": "1852320"
  },
  {
    "text": "backup we found that at this particular point in time there was an IM transfer agent process which was downloading a",
    "start": "1852320",
    "end": "1859080"
  },
  {
    "text": "couple of IM attachments which were our sample. PK pass",
    "start": "1859080",
    "end": "1864880"
  },
  {
    "text": "files if we investigated the sample. PK pass files we found the logo.png was",
    "start": "1864880",
    "end": "1870480"
  },
  {
    "text": "which was actually a vbp file and it was not a PNG file this contained a binary pist and",
    "start": "1870480",
    "end": "1878080"
  },
  {
    "text": "this binary pist is if we de archived it contained an object at reference 11",
    "start": "1878080",
    "end": "1883480"
  },
  {
    "text": "which contained an NS expression which then once again had a couple of",
    "start": "1883480",
    "end": "1888720"
  },
  {
    "text": "different payloads on the first payload we had a reference to those payload CS",
    "start": "1888720",
    "end": "1895720"
  },
  {
    "text": "which contained a config file and another reference to payload C which",
    "start": "1895720",
    "end": "1901159"
  },
  {
    "text": "then contained another of payloads subsequently which we all decompressed and then it contained",
    "start": "1901159",
    "end": "1907799"
  },
  {
    "text": "another payload and this other payload did have the reference finally to Pilot X which is",
    "start": "1907799",
    "end": "1915159"
  },
  {
    "text": "our encrypted sample now this is already it's a good starting",
    "start": "1915159",
    "end": "1922720"
  },
  {
    "text": "point of course the analysis is not done but the great thing about this is we have a we now have a couple of very",
    "start": "1922720",
    "end": "1928799"
  },
  {
    "text": "interesting sample points where we can already have a couple of ioc's based on",
    "start": "1928799",
    "end": "1934480"
  },
  {
    "text": "that so the repeating messages blast or service crashes are definitely an interesting sign and they're definitely",
    "start": "1934480",
    "end": "1941080"
  },
  {
    "text": "suspicious it's not a clear ioc for the specific sample but it's always worth",
    "start": "1941080",
    "end": "1946120"
  },
  {
    "text": "investigating the specific sample. PK pass file it's definitely I ioc that you can easily check within mvt and",
    "start": "1946120",
    "end": "1953559"
  },
  {
    "text": "automatically alert on then for a couple of times now we have seen that attackers",
    "start": "1953559",
    "end": "1960159"
  },
  {
    "text": "are using file extensions but the actual file type is not matching those extension so once again this is not a",
    "start": "1960159",
    "end": "1966720"
  },
  {
    "text": "perfect indicator but it's a good starting point for in investigation then if you look inside",
    "start": "1966720",
    "end": "1972880"
  },
  {
    "text": "the P list you will see all those A's and this is also a very very clear clear",
    "start": "1972880",
    "end": "1978080"
  },
  {
    "text": "indicator so even even just taking those a is probably a good starting point to",
    "start": "1978080",
    "end": "1983200"
  },
  {
    "text": "just investigate this particular file a little bit further um and what I can tell you is if",
    "start": "1983200",
    "end": "1988720"
  },
  {
    "text": "you ever find an iMessage attachment which should be a picture which contains a couple of strings which are just",
    "start": "1988720",
    "end": "1994039"
  },
  {
    "text": "called function function function function function this is most likely malicious I haven't seen a single case",
    "start": "1994039",
    "end": "2000240"
  },
  {
    "text": "um where this is not true so just taking those particular samples like the A and",
    "start": "2000240",
    "end": "2005639"
  },
  {
    "text": "the function and if Apple would have just imp imped a function of looking into any iMessage attachment just trying",
    "start": "2005639",
    "end": "2011840"
  },
  {
    "text": "to search for this and alerting on that they probably could have found a lot of exploits already um just by doing this and",
    "start": "2011840",
    "end": "2018440"
  },
  {
    "text": "probably not so much of a performance cost and then of course we have seen the specific payload which are also very",
    "start": "2018440",
    "end": "2025399"
  },
  {
    "text": "visible and clear text uh even just by running strings on the sample and those are very very clear",
    "start": "2025399",
    "end": "2032840"
  },
  {
    "text": "iocs all right a is this slide a one of you will ever get into the situation",
    "start": "2034399",
    "end": "2039960"
  },
  {
    "text": "that you're receiving an specific Apple thread notification or if you believe your iPhone is compromised and you want",
    "start": "2039960",
    "end": "2046320"
  },
  {
    "text": "help in doing the analysis or even protecting you further please contact us at info@",
    "start": "2046320",
    "end": "2052320"
  },
  {
    "text": "ay. reach out to a couple of other sources like Amnesty International citizen lab access now or feel free to",
    "start": "2052320",
    "end": "2059158"
  },
  {
    "text": "contact me directly on Twitter or on LinkedIn okay what I want you to",
    "start": "2059159",
    "end": "2066720"
  },
  {
    "text": "remember from this talk is Iowa forensic investigation works but",
    "start": "2066720",
    "end": "2072158"
  },
  {
    "text": "we need much much more scale we are doing way to less forensic investigations on particular sample",
    "start": "2072159",
    "end": "2078480"
  },
  {
    "text": "which is an advantage for attackers and then also if we're looking at IA vulnerability mitigation such as the",
    "start": "2078480",
    "end": "2085200"
  },
  {
    "text": "mitigation iOS 15.1 those mitigations are just bypassed with even more",
    "start": "2085200",
    "end": "2090520"
  },
  {
    "text": "vulnerabilities so I'm not completely sure if this approach is always going to be the best in trying to tackle the",
    "start": "2090520",
    "end": "2096839"
  },
  {
    "text": "specific problem of mercenary spyware and what we could also see here is that spyware vendors tend to reuse very very",
    "start": "2096839",
    "end": "2103960"
  },
  {
    "text": "complex exploitation Frameworks so there's a very high upfront cost in developing those but if you can just",
    "start": "2103960",
    "end": "2110560"
  },
  {
    "text": "reuse those over time this makes the whole exploitation process a lot easier for them but it also makes it a lot",
    "start": "2110560",
    "end": "2116560"
  },
  {
    "text": "better for us as Defenders because then if we can find the same pattern of behavior again and now if we just search",
    "start": "2116560",
    "end": "2123079"
  },
  {
    "text": "for every NS expression inside of an iMessage attachment we have a very very good starting .4",
    "start": "2123079",
    "end": "2129560"
  },
  {
    "text": "inis thank you very much for listening to me today and now we have a couple of minutes left if you have any",
    "start": "2129560",
    "end": "2137599"
  },
  {
    "text": "questions yes please",
    "start": "2143760",
    "end": "2148000"
  },
  {
    "text": "uh yes so the question was if we know if the sample executed correctly um I",
    "start": "2159640",
    "end": "2164760"
  },
  {
    "text": "honestly can't tell you I tried executing the sample on my own and I observed that there was at least a",
    "start": "2164760",
    "end": "2171280"
  },
  {
    "text": "couple of those crashes which were resulting as well but I also observed that there was a couple of behavior on",
    "start": "2171280",
    "end": "2177040"
  },
  {
    "text": "my phone but I couldn't really tell you if this sample executed correctly or not",
    "start": "2177040",
    "end": "2182319"
  },
  {
    "text": "because we probably missed the first stage of the exploit that set up the stage correctly for this NS expression",
    "start": "2182319",
    "end": "2189560"
  },
  {
    "text": "yes yes um so the question was how how much time did it take me to do the work",
    "start": "2204079",
    "end": "2209200"
  },
  {
    "text": "of decompressing those NS Expressions uh one of the first Ro blacks of course was this cut decompression which took me a",
    "start": "2209200",
    "end": "2215440"
  },
  {
    "text": "couple of days to figure this out um and then I probably spent two or three weeks",
    "start": "2215440",
    "end": "2221319"
  },
  {
    "text": "like in full of trying to to get a very first understanding of this one and then I unfortunately had to stop but the",
    "start": "2221319",
    "end": "2227560"
  },
  {
    "text": "investigation is still",
    "start": "2227560",
    "end": "2230480"
  },
  {
    "text": "continuing yeah so the question was because uh we haven't seen it for the first time that attackers use NS",
    "start": "2245680",
    "end": "2251000"
  },
  {
    "text": "expressions and people are trying to do the tedious work of decompressing it um and if it would be good to develop a",
    "start": "2251000",
    "end": "2257160"
  },
  {
    "text": "framework or a tool to do this um yeah absolutely I started doing this a very",
    "start": "2257160",
    "end": "2262560"
  },
  {
    "text": "little bit on myself and maybe it's time to release some of that and try to do it in a more General approach but I also",
    "start": "2262560",
    "end": "2268640"
  },
  {
    "text": "know that I think I be already did that so maybe we just try to reach out if we",
    "start": "2268640",
    "end": "2274240"
  },
  {
    "text": "can like disclose a tool for that or like make it open source",
    "start": "2274240",
    "end": "2279440"
  },
  {
    "text": "uh the question was if I know the mechanism that triggered the execution of the NS expression in this particular",
    "start": "2287119",
    "end": "2292640"
  },
  {
    "text": "case um no this is still an open question to me but I very much have hope that Ian is going to disclose more about",
    "start": "2292640",
    "end": "2299680"
  },
  {
    "text": "this in his talks that is upcoming does this work okay thank you",
    "start": "2299680",
    "end": "2305720"
  },
  {
    "text": "for the excellent talk I really enjoyed a quick question about like you show like multiple really multiple layers of",
    "start": "2305720",
    "end": "2312040"
  },
  {
    "text": "uh compression and encoding what's the logical explanation why do they need so many layers are those different",
    "start": "2312040",
    "end": "2318880"
  },
  {
    "text": "components glued together or what's the purpose or just to complicate your life I have no clue about this",
    "start": "2318880",
    "end": "2327000"
  },
  {
    "text": "one um so if you look at it you will see that there's a couple of of ternary",
    "start": "2327000",
    "end": "2332359"
  },
  {
    "text": "operators which essentially are like if Clauses and you can see that um the",
    "start": "2332359",
    "end": "2337440"
  },
  {
    "text": "example is trying to calculate also how long it took to calculate certain things and if if some of the parts before that",
    "start": "2337440",
    "end": "2343319"
  },
  {
    "text": "are ready or not um maybe it's because they chained together certain elements",
    "start": "2343319",
    "end": "2348599"
  },
  {
    "text": "and build that in in like an exploitation framework or maybe they just wanted to make the the work of",
    "start": "2348599",
    "end": "2354440"
  },
  {
    "text": "export researchers harder I don't really know for at the moment so if they change",
    "start": "2354440",
    "end": "2359800"
  },
  {
    "text": "together that means they probably on the every level they have multiple other components to to be chained",
    "start": "2359800",
    "end": "2364839"
  },
  {
    "text": "alternatively so that just gives a bit of scale of their um other",
    "start": "2364839",
    "end": "2371800"
  },
  {
    "text": "capabilities is is that what you're saying yeah so what it looks like um that this is pretty much very modular in",
    "start": "2371800",
    "end": "2379560"
  },
  {
    "text": "state so you have a phase where you have this config file which is used then you have another phase where you check if",
    "start": "2379560",
    "end": "2385400"
  },
  {
    "text": "the config is actually existing and if it doesn't exist then you're just um you're exiting and you're not executing",
    "start": "2385400",
    "end": "2392359"
  },
  {
    "text": "anymore and you're also having a phase where you're then loading like the additional encrypted um payload and I've",
    "start": "2392359",
    "end": "2399280"
  },
  {
    "text": "also seen that they're doing xbc communication to other processes even though we haven't fully figured this out",
    "start": "2399280",
    "end": "2405680"
  },
  {
    "text": "yet so it's definitely a very very modular approach all right thank you very much all right I think we're at the end",
    "start": "2405680",
    "end": "2413359"
  },
  {
    "text": "once again thank you very much to listen to me and I do hope you will have a wonderful black hats",
    "start": "2413359",
    "end": "2420760"
  }
]