[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "welcome to black hat Windows 2K security held February 14th through the 15 2011",
    "start": "18760",
    "end": "24519"
  },
  {
    "start": "19000",
    "end": "19000"
  },
  {
    "text": "in Las Vegas Nevada the following videotape was recorded live at the conference and produced by the of",
    "start": "24519",
    "end": "30320"
  },
  {
    "text": "knowledge Incorporated this is videotape number eight more technical track konel mode",
    "start": "30320",
    "end": "36760"
  },
  {
    "text": "rootkits stealth and subversion of",
    "start": "36760",
    "end": "41120"
  },
  {
    "text": "trust in kernel mode such as a loadable module yeah those are those are more",
    "start": "44559",
    "end": "51399"
  },
  {
    "text": "rare um I good point how do you go exactly I",
    "start": "51399",
    "end": "56680"
  },
  {
    "text": "was just going to ask how did if you're willing to tell me did uh how did you detect it somebody raise your hand back",
    "start": "56680",
    "end": "64239"
  },
  {
    "text": "there no comment um there are probably a lot of ways to",
    "start": "64239",
    "end": "70520"
  },
  {
    "text": "detect a root kit but almost any if it's kernel mode but almost anything that you can do to detect it it probably can undo",
    "start": "70520",
    "end": "75880"
  },
  {
    "text": "somehow and what you're going to do is play a game of chess hoping that the root kit that's installed if it's in kernel mode hasn't done some patch",
    "start": "75880",
    "end": "82400"
  },
  {
    "text": "somewhere that you're expecting to be able to get to see",
    "start": "82400",
    "end": "86479"
  },
  {
    "text": "it um the fellow in the audience said that he found it because the uh attacker I",
    "start": "88840",
    "end": "95000"
  },
  {
    "text": "guess had been sloppy and left some files lying around in the in the drive um I was talking to someone earlier uh",
    "start": "95000",
    "end": "101680"
  },
  {
    "text": "yesterday and they were telling me about the number of times they've seen people who've hacked into boxes and they catch FTP sessions going out to technotronic",
    "start": "101680",
    "end": "108399"
  },
  {
    "text": "so they can download the latest lrk and put it on the machine there's a difference between a user mode rout kit",
    "start": "108399",
    "end": "113960"
  },
  {
    "text": "and a kernel mode rot kit and it's very simple to understand a a user mode rot",
    "start": "113960",
    "end": "119000"
  },
  {
    "text": "kit is uh kind of originally what was around a couple years ago uh actually",
    "start": "119000",
    "end": "124240"
  },
  {
    "text": "probably way before that actually and it's a trojan horse program that replaces one of the existing programs on",
    "start": "124240",
    "end": "130000"
  },
  {
    "text": "your system so maybe I have a new version of Ls that conveniently doesn't display certain directories or certain",
    "start": "130000",
    "end": "137120"
  },
  {
    "text": "files um or Ps it doesn't uh display certain processes running on my system",
    "start": "137120",
    "end": "142879"
  },
  {
    "text": "or maybe if config has been replaced but the problem with this approach is if you're running a program an Integrity",
    "start": "142879",
    "end": "148760"
  },
  {
    "text": "Checker system on your hard drive say like trip wire or something like that uh",
    "start": "148760",
    "end": "154000"
  },
  {
    "text": "somebody replaces a file you're going to know about it because the hash is going to change the check some is different um",
    "start": "154000",
    "end": "159879"
  },
  {
    "text": "the goal of a the primary goal and the reason a kernel mode rot kit exists is for one reason stealth the kernel uh has",
    "start": "159879",
    "end": "169200"
  },
  {
    "text": "complete control over the system clearly so anything you can do to detect something if you've got a guy in there",
    "start": "169200",
    "end": "175080"
  },
  {
    "text": "who's modified the kernel he can make uh Provisions to make it so you can't detect some something so let's say I",
    "start": "175080",
    "end": "181680"
  },
  {
    "text": "actually do replace LS or put some Trojan directory into the system a",
    "start": "181680",
    "end": "186920"
  },
  {
    "text": "kernel mode rot kit can actually patch the system calls which are responsible for showing any program on the system no",
    "start": "186920",
    "end": "193200"
  },
  {
    "text": "matter what program it it is uh the contents of that directory so you are no",
    "start": "193200",
    "end": "198400"
  },
  {
    "text": "longer left in the position if you're an attacker having to replace LS instead any program that the querious director",
    "start": "198400",
    "end": "204319"
  },
  {
    "text": "doesn't matter where it is the original LS everything else is all subject to this kind of choke point in the kernel where you actually done your",
    "start": "204319",
    "end": "211040"
  },
  {
    "text": "patch now all the hackers in the audience can start arguing with me about various new ways they could detect the",
    "start": "211040",
    "end": "216920"
  },
  {
    "text": "existence of the directory and then that's becomes a game of chess that we could play all day",
    "start": "216920",
    "end": "222439"
  },
  {
    "text": "long so I'm I guess that's my slide there I'm trying to describe the difference between user and kernel mode",
    "start": "223200",
    "end": "229439"
  },
  {
    "text": "um kernel mode an object in kernel mode has the opportunity to play with any",
    "start": "229439",
    "end": "236319"
  },
  {
    "text": "system structure that's been created um it also has the opportun Unity to play Man INE middle to any important system",
    "start": "236319",
    "end": "243640"
  },
  {
    "text": "call or device driver access or anything that you're doing from",
    "start": "243640",
    "end": "249120"
  },
  {
    "text": "userland also um and just as simple to do the kernel mode can play man- inthe",
    "start": "249120",
    "end": "254720"
  },
  {
    "text": "middle to other kernel mode components assuming that they're using the standard apis so a a hook will still work for uh",
    "start": "254720",
    "end": "262919"
  },
  {
    "text": "whether or not the know thing you're trying to subvert is in user mode or kernel mode so hooking system calls uh",
    "start": "262919",
    "end": "269800"
  },
  {
    "text": "is one of the areas I'm going to focus on first um because it's very simple to understand um You probably all of you",
    "start": "269800",
    "end": "275960"
  },
  {
    "text": "probably have already got an idea of what it means um the kernel mode root kit that we distribute off the website",
    "start": "275960",
    "end": "283360"
  },
  {
    "text": "only has two uh well it has several patches but it has two primary system call Patches which enable it to hide",
    "start": "283360",
    "end": "289360"
  },
  {
    "text": "directories files and processes on the system and just as easily it could hide itself our currently released version",
    "start": "289360",
    "end": "296120"
  },
  {
    "text": "does not hide itself in the driver list but it could very easily so here's the essential",
    "start": "296120",
    "end": "302880"
  },
  {
    "text": "problem you guys like my flash animations I got rid of PowerPoint and went to",
    "start": "302880",
    "end": "310240"
  },
  {
    "text": "flash a user mode process to do anything on the system even talk to other user mode processes has to go through kernel",
    "start": "311080",
    "end": "318120"
  },
  {
    "text": "space so it usually does this via system call um it can do it uh through other",
    "start": "318120",
    "end": "323199"
  },
  {
    "text": "methods too like an uh an ioctl or something like that but um the system call is the primary mode of",
    "start": "323199",
    "end": "328720"
  },
  {
    "text": "communication between user mode in kernel space this is usually handled through an interrupt uh under Linux I",
    "start": "328720",
    "end": "334759"
  },
  {
    "text": "believe the interrupt is 80 and the uh hex 80 and then the uh under n would be",
    "start": "334759",
    "end": "342960"
  },
  {
    "text": "2E and then in kernel mode uh a kernel mode process of course doesn't have to use a system call to communicate with",
    "start": "344120",
    "end": "349639"
  },
  {
    "text": "other kernel mode processes so it's all within the kernel mode",
    "start": "349639",
    "end": "354720"
  },
  {
    "text": "space so communication thus I don't remember my thinking here oh yes security check um so when I make a call",
    "start": "354720",
    "end": "362759"
  },
  {
    "text": "into kernel mode from user mode I have an opportunity to do a security check on the uh security descriptor or the access",
    "start": "362759",
    "end": "368240"
  },
  {
    "text": "that's been granted to the process is trying to make the call but in kernel mode that security check does not take",
    "start": "368240",
    "end": "373919"
  },
  {
    "text": "place in the case of Windows NT um I'm thinking of one particular system call uh SC access check which actually has a",
    "start": "373919",
    "end": "379960"
  },
  {
    "text": "Boolean flag that determines whether or not the call was made from kernel mode or user mode and if the call was made",
    "start": "379960",
    "end": "385000"
  },
  {
    "text": "from the konel uh it doesn't even bother checking the access it just ignores it and says you're okay okay so Security",
    "start": "385000",
    "end": "391240"
  },
  {
    "text": "check no security check so if I'm in the kernel with a root kit I have no security being",
    "start": "391240",
    "end": "397199"
  },
  {
    "text": "imposed upon me I can do whatever I want so let's take the example of a",
    "start": "397199",
    "end": "402319"
  },
  {
    "text": "host-based intrusion detection software um I want to uh run this little program",
    "start": "402319",
    "end": "409759"
  },
  {
    "text": "on my computer and I want to tell me important things about like other files or processes or things that are",
    "start": "409759",
    "end": "414840"
  },
  {
    "text": "happening on the computer to do that it has to of course communicate through kernel mode so let's say it wants to",
    "start": "414840",
    "end": "420160"
  },
  {
    "text": "know about other processes in user space to do that of course first has to communicate into kernel space and then",
    "start": "420160",
    "end": "426840"
  },
  {
    "text": "the component that it talks to will communicate out to the user processes",
    "start": "426840",
    "end": "431919"
  },
  {
    "text": "that it's trying to get information on and then it gives the data back now from",
    "start": "431919",
    "end": "437800"
  },
  {
    "text": "Kel space I'm trying to remember what this slide is yes if I want to know information about uh other components in",
    "start": "437800",
    "end": "443199"
  },
  {
    "text": "the kernel the same applies here I communicate through to a kernel mode component and then it can contacts the",
    "start": "443199",
    "end": "448240"
  },
  {
    "text": "other kernel mode components and so forth so you're seeing that there's a choke point here if we can patch or",
    "start": "448240",
    "end": "455160"
  },
  {
    "text": "control the access through this kind of boundary here there's almost nothing we cannot hide or subvert or you know",
    "start": "455160",
    "end": "461680"
  },
  {
    "text": "change the image of to this host based intrusion detection software has anybody here heard of",
    "start": "461680",
    "end": "468199"
  },
  {
    "text": "execute redirection execute redirection is a very very powerful concept and it states",
    "start": "468199",
    "end": "475479"
  },
  {
    "text": "simply that you're going to open this file and I'm going to show it to you I'm going to show you the real f file but if",
    "start": "475479",
    "end": "480840"
  },
  {
    "text": "you try to execute this file I'm going to execute a Trojan file instead it completely defeats user mode Integrity",
    "start": "480840",
    "end": "486919"
  },
  {
    "text": "assessment tools uh if I have a program on my system that's going through and doing file hashes of all my files that's",
    "start": "486919",
    "end": "494000"
  },
  {
    "text": "great but it doesn't work against execute redirection the kernel mode R kit that we distribute for Windows 2000 and NT",
    "start": "494000",
    "end": "500720"
  },
  {
    "text": "has execute redirection built in it's hardcoded to execute calculator. XE when",
    "start": "500720",
    "end": "507280"
  },
  {
    "text": "you attempt to open a file that starts with sore root underscore there's a Linux root kit",
    "start": "507280",
    "end": "513959"
  },
  {
    "text": "kernel mode root kit I believe it's called narc if any of you know it if I'm wrong correct me but I think it's called",
    "start": "513959",
    "end": "519200"
  },
  {
    "text": "n that does exactly the same thing um so they're very real and if you haven't run",
    "start": "519200",
    "end": "524519"
  },
  {
    "text": "into one you might so it's good to understand it at the very least so um",
    "start": "524519",
    "end": "530360"
  },
  {
    "text": "user mode Integrity assessment tools don't work um they don't work at all",
    "start": "530360",
    "end": "536320"
  },
  {
    "text": "actually I think that you really have to have a presence in the kernel to do something right to have a host-based intrusion detection or intrusion",
    "start": "536320",
    "end": "542680"
  },
  {
    "text": "prevention system that system needs to live in the kernel and talk to the kernel and the problem of course with",
    "start": "542680",
    "end": "548360"
  },
  {
    "text": "that is it has the possibility of breaking windows or your or your Linux or you know Solaris or whatever it is",
    "start": "548360",
    "end": "554000"
  },
  {
    "text": "you're using uh there was a company a long time ago I don't know too much about but I heard some things about them",
    "start": "554000",
    "end": "560920"
  },
  {
    "text": "uh I think they were called MCO and they were very invasive into the kernel space and kind of this in this context and um",
    "start": "560920",
    "end": "570240"
  },
  {
    "text": "I think that it's very hard to probably make a commercial piece of software that does this right um I'm not about to try",
    "start": "570240",
    "end": "577320"
  },
  {
    "text": "so so kernel space kernel space can communicate freely with",
    "start": "577320",
    "end": "582399"
  },
  {
    "text": "itself and part of the place where uh the kernel plays a part is in external interfaces such as uh the network when",
    "start": "582399",
    "end": "589959"
  },
  {
    "text": "packets arrive on my ethernet card they go immediately to a driver in kernel mode at ring zero and they're handled",
    "start": "589959",
    "end": "597680"
  },
  {
    "text": "and they're processed in a variety of way ways the problem with this of course is if I have a colonel mod R kit I can",
    "start": "597680",
    "end": "603760"
  },
  {
    "text": "communicate freely on the network without any host Bas intrusion detection software being able to detect this of",
    "start": "603760",
    "end": "609240"
  },
  {
    "text": "course if you've got a sniffer there you might see some weird traffic going to to and fro the network can communicate freely",
    "start": "609240",
    "end": "615680"
  },
  {
    "text": "with another kernel mode component and the host based ingent detection software cannot see this it's",
    "start": "615680",
    "end": "621079"
  },
  {
    "text": "completely it's in the",
    "start": "621079",
    "end": "624560"
  },
  {
    "text": "dark oh yes it's a flash sorry",
    "start": "626120",
    "end": "631040"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "does does that kind of make sense for everybody up to this point Okay because I'm going to start talking a little bit about in specific file",
    "start": "631640",
    "end": "639800"
  },
  {
    "text": "format yes sir",
    "start": "640120",
    "end": "647320"
  },
  {
    "text": "nothing can you technically load something into the carel onty without",
    "start": "647320",
    "end": "653560"
  },
  {
    "text": "Mach uh yes there's several ways uh sorry I didn't repeat the question the",
    "start": "653560",
    "end": "658800"
  },
  {
    "text": "question was are there ways to load things into the kernel under n without rebooting the machine the answer is yes",
    "start": "658800",
    "end": "664519"
  },
  {
    "text": "um as you know uh the kernel uh when the in Boots it loads a series of drivers",
    "start": "664519",
    "end": "670360"
  },
  {
    "text": "and they they load in actually a certain order but it's possible to also load a driver dynamically um or kernel mode",
    "start": "670360",
    "end": "678399"
  },
  {
    "text": "image and execute it dynamically and off the top of my head there are a couple ways to do that um system calls are",
    "start": "678399",
    "end": "684560"
  },
  {
    "text": "provided in load driver um there is also",
    "start": "684560",
    "end": "690519"
  },
  {
    "text": "a facility um there is a system called called ZW set system information which has a",
    "start": "690519",
    "end": "697720"
  },
  {
    "text": "perimeter that you can pass to that called um system load and call image and",
    "start": "697720",
    "end": "702920"
  },
  {
    "text": "that will dynamically load and run uh an executable in kernel uh immediately and",
    "start": "702920",
    "end": "708240"
  },
  {
    "text": "I don't know the details of it's this additional way to do it but um a friend of mine a code developer actually on the",
    "start": "708240",
    "end": "714519"
  },
  {
    "text": "rootkit project uh has found a way and he has not described it to me in detail so I won't be able to describe it to you",
    "start": "714519",
    "end": "720399"
  },
  {
    "text": "but he said there is an undocumented call in NS kernel called K allocate selector where you allocate a memory",
    "start": "720399",
    "end": "726240"
  },
  {
    "text": "selector you put the root kit into that and then you can execute it so there's multiple paths to get a rootkit to load",
    "start": "726240",
    "end": "732200"
  },
  {
    "text": "and execute in the kernel one of the areas that is kind of",
    "start": "732200",
    "end": "738680"
  },
  {
    "text": "un unexplored by anybody I know doesn't mean that people haven't done it yet but it's the world of printer drivers and",
    "start": "738680",
    "end": "745000"
  },
  {
    "text": "buffer overflows in kernel mode HP printer drivers there's lots of them right probably hundreds and hundreds of",
    "start": "745000",
    "end": "750560"
  },
  {
    "text": "different printer drivers and it's possible that there are buffer overflows in these drivers and we could load code",
    "start": "750560",
    "end": "756600"
  },
  {
    "text": "into the kernel through that through a trusted mechanism communication between the program that's trying to print and",
    "start": "756600",
    "end": "761959"
  },
  {
    "text": "the printer printer driver itself so there are plenty of",
    "start": "761959",
    "end": "768199"
  },
  {
    "text": "opportunities um all the files that are running all of the executable images that are running in the NT kernel follow",
    "start": "768880",
    "end": "775440"
  },
  {
    "text": "the same format as any executable image and they follow the portable executable format PE format um if you're not",
    "start": "775440",
    "end": "780760"
  },
  {
    "text": "familiar with this it's kind of like a way to structure a file on disk so that it can uh have information in it like",
    "start": "780760",
    "end": "787079"
  },
  {
    "text": "where are my exported functions what are my resources what things am I importing from other DLS etc etc so all the same",
    "start": "787079",
    "end": "795279"
  },
  {
    "text": "rules that kind of apply to PE based viruses all apply to any kind",
    "start": "795279",
    "end": "801440"
  },
  {
    "text": "of Kernel mode component as well it's completely feasible that you could get a virus that goes and infects the um let's",
    "start": "801440",
    "end": "809639"
  },
  {
    "text": "say null. Cy driver and next time you reboot the machine you've got a rot kit a virus uh in ring",
    "start": "809639",
    "end": "818279"
  },
  {
    "text": "zero and I probably won't go into heavy amounts of detail on the different ways you can get into a PE file but there's",
    "start": "818880",
    "end": "825240"
  },
  {
    "text": "plenty of ways to do it and it's well documented and it's available um I'm going to go over the",
    "start": "825240",
    "end": "830759"
  },
  {
    "text": "actual uh driver itself and how it's structured a little bit here uh because the rootkit is a driver and there's no",
    "start": "830759",
    "end": "838839"
  },
  {
    "text": "black magic going on it's doing something it's very easy to understand it's just very powerful uh every driver",
    "start": "838839",
    "end": "844800"
  },
  {
    "text": "has a driver entry it's just like main you know if you've programmed before you know there's a main function that gets called first uh the driver has one it's",
    "start": "844800",
    "end": "851600"
  },
  {
    "text": "called driver entry at least that's you know typically what it would be called unless you've changed",
    "start": "851600",
    "end": "856839"
  },
  {
    "text": "it a driver can register things inside the system and this is kind of normal almost every driver uh for NT will do",
    "start": "856839",
    "end": "864000"
  },
  {
    "start": "857000",
    "end": "857000"
  },
  {
    "text": "this they're called device objects so like if I have four keyboards hooked to my computer my keyboard driver might",
    "start": "864000",
    "end": "870199"
  },
  {
    "text": "create four device objects one for each keyboard uh if I have 10 hard drives it might create 10 device objects for all",
    "start": "870199",
    "end": "877440"
  },
  {
    "text": "the hard drives etc etc so device objects are kind of important to understand because we do use them in the",
    "start": "877440",
    "end": "883199"
  },
  {
    "text": "root kit to do one thing keyboard sniffing and I want to explain that to you um so a device object is just a",
    "start": "883199",
    "end": "890440"
  },
  {
    "text": "logical object which can be created by the driver and bound to other things out there in the",
    "start": "890440",
    "end": "897040"
  },
  {
    "text": "system driver entry gets called it gets past an object which says here I'm a I'm",
    "start": "897040",
    "end": "903160"
  },
  {
    "text": "your driver object you need to create me I'm not done being created",
    "start": "903160",
    "end": "909320"
  },
  {
    "text": "yet in the driver entry routine I have the opportunity to create Ser a series of device objects so like for the root",
    "start": "909839",
    "end": "916279"
  },
  {
    "text": "kit that we have currently it'll create a device object which is intended to be slipped into the keyboard and start do",
    "start": "916279",
    "end": "921959"
  },
  {
    "text": "some keyboard sniffing you can create device objects",
    "start": "921959",
    "end": "927800"
  },
  {
    "text": "to filter data that's being passed around the system",
    "start": "927800",
    "end": "933720"
  },
  {
    "text": "um provide intermediate processing um like a keyboard handle Handler NTFS file system Handler maybe a",
    "start": "933720",
    "end": "941759"
  },
  {
    "text": "network stack um inline encryption of the hard drive might be implemented this",
    "start": "941759",
    "end": "949000"
  },
  {
    "text": "way the driver object registers a call back routine when the driver entry routine is",
    "start": "949240",
    "end": "955880"
  },
  {
    "text": "called and pass the driver object and I have to register what are called major functions and I'm not going to get into",
    "start": "955880",
    "end": "961079"
  },
  {
    "text": "all the details of this but there's something called an IO request packet which get passed around in the kernel and those can be routed in various ways",
    "start": "961079",
    "end": "967759"
  },
  {
    "text": "when I register this these major functions in this device object what I'm actually doing is making a call back",
    "start": "967759",
    "end": "974759"
  },
  {
    "text": "function so everything that gets passed to my driver gets passed through this one dispatch routine that I've",
    "start": "974759",
    "end": "980639"
  },
  {
    "text": "defined the dispatch routine is one of the primary ways a user mode component would communicate with a kernel mode",
    "start": "980639",
    "end": "987360"
  },
  {
    "text": "component like if I were to call open file WR file read file those things get converted into these her packets and",
    "start": "987360",
    "end": "993800"
  },
  {
    "text": "pass into my dispatch rtin the only reason this matters for this discussion is because this is one of the areas",
    "start": "993800",
    "end": "999680"
  },
  {
    "text": "where we're going to be patching and and seeing keyboard traffic in my call back um I received",
    "start": "999680",
    "end": "1008160"
  },
  {
    "text": "the device object that I wanted to buy you know that I was working with so I actually can if I've created 10 device",
    "start": "1008160",
    "end": "1015040"
  },
  {
    "text": "objects I still have the same dispatch routine and I can look at the device object and use that to switch out and",
    "start": "1015040",
    "end": "1020480"
  },
  {
    "text": "determine where I am which one created the event that I'm interested in this is all getting kind of tangental to the",
    "start": "1020480",
    "end": "1027120"
  },
  {
    "start": "1026000",
    "end": "1026000"
  },
  {
    "text": "whole Ruka discussion though so I'm going to kind of stop there think of these things as just chains of objects",
    "start": "1027120",
    "end": "1032480"
  },
  {
    "text": "out there and they kind of do this they pass information along one to",
    "start": "1032480",
    "end": "1037558"
  },
  {
    "text": "another so I've got a device object it passes information to the next device object in the chain etc etc so if I've",
    "start": "1037559",
    "end": "1044720"
  },
  {
    "text": "got one inserted in there it makes sense that I could capture traffic right that's being passed around in the",
    "start": "1044720",
    "end": "1050799"
  },
  {
    "text": "system so in my dispatch if I've got one in the chain I get my dispatch and I can look at the information that's that's",
    "start": "1050799",
    "end": "1057400"
  },
  {
    "text": "being passed down to this device object um I can not only snip it but I",
    "start": "1057400",
    "end": "1064120"
  },
  {
    "text": "could also alter the data in transit this is also very important so if I patch every single fast IO call in the",
    "start": "1064120",
    "end": "1069840"
  },
  {
    "text": "file system I can alter all the data being passed to the hard driver back up from the hard drive um so being in the",
    "start": "1069840",
    "end": "1075960"
  },
  {
    "text": "middle gives us the opportunity to not only sniff but also alter the data in transit and that's very important to understand now of course we're not",
    "start": "1075960",
    "end": "1081679"
  },
  {
    "text": "altering the keyboard making a p into a q or anything like that we're just trying to sniff the the data going",
    "start": "1081679",
    "end": "1088440"
  },
  {
    "start": "1088000",
    "end": "1088000"
  },
  {
    "text": "through now what I just described to you was device objects um typically device objects are",
    "start": "1088440",
    "end": "1094400"
  },
  {
    "text": "visible to user mode so they're not very good for stealth but of course AI could probably do some things to prevent you from seeing them um I went through this",
    "start": "1094400",
    "end": "1102679"
  },
  {
    "text": "whole device object thing because there is something called a keyboard hook that we have in there and it uses this method it is a method that can be used us for",
    "start": "1102679",
    "end": "1108799"
  },
  {
    "text": "all kinds of things it can be used to hook your audio video subsystem it could be used to hook your mouse or your",
    "start": "1108799",
    "end": "1114039"
  },
  {
    "text": "serial Port anything your USB devices um but there are many techniques",
    "start": "1114039",
    "end": "1121039"
  },
  {
    "text": "which do not require the device object and I'm going to go through those too file and process and directory",
    "start": "1121039",
    "end": "1127159"
  },
  {
    "text": "hiding are one of the things that don't require a device object in any way what about your smart card that's attached by USB or something",
    "start": "1127159",
    "end": "1135039"
  },
  {
    "text": "um the question was what about a smart card or anything that's attached by a USB USP or smart",
    "start": "1135039",
    "end": "1141840"
  },
  {
    "text": "deach um if the smart the question is you know would this violate a smart card I guess um that that's a hard question",
    "start": "1141840",
    "end": "1149720"
  },
  {
    "text": "answer because the smart card itself may have some Hardware based encryption maybe the encryption and decryption or",
    "start": "1149720",
    "end": "1155520"
  },
  {
    "text": "things that it's doing is taking place entirely on the card so to truly hack that system you've got to get into the",
    "start": "1155520",
    "end": "1160679"
  },
  {
    "text": "card perhaps but is just store private keys if that data goes uh if the private",
    "start": "1160679",
    "end": "1165960"
  },
  {
    "text": "key goes over that bus then yes the could theoretically create a device object hook itself into the chain and",
    "start": "1165960",
    "end": "1171720"
  },
  {
    "text": "and intercept that data um it would be 100%",
    "start": "1171720",
    "end": "1177720"
  },
  {
    "text": "possible you can the you're still you're still above and",
    "start": "1181360",
    "end": "1188919"
  },
  {
    "text": "below exactly um exactly the the question or the statement was the data",
    "start": "1188919",
    "end": "1194120"
  },
  {
    "text": "is still going by and so you still have the opportunity to uh alter it in",
    "start": "1194120",
    "end": "1199520"
  },
  {
    "text": "transit or snipp it keep in mind anything you attach to a computer has to have its software",
    "start": "1199520",
    "end": "1205200"
  },
  {
    "text": "component to help it interface with the rest of the operating system and when you're at ring zero all of those",
    "start": "1205200",
    "end": "1210240"
  },
  {
    "text": "components are available to you you can get involved in them now that doesn't",
    "start": "1210240",
    "end": "1215720"
  },
  {
    "text": "mean that you can you can subvert a hardware based authentication scheme that handles everything in the hardware",
    "start": "1215720",
    "end": "1221000"
  },
  {
    "text": "itself but it does mean that you can subvert The View that that Hardware",
    "start": "1221000",
    "end": "1226280"
  },
  {
    "text": "device has to the rest of the operating system or any other piece of software or component that wants to talk to it and",
    "start": "1226280",
    "end": "1231520"
  },
  {
    "text": "if that's all you need then you probably won if it sends back a yes or a no I can change it to a yes regardless of what",
    "start": "1231520",
    "end": "1238000"
  },
  {
    "text": "got sent down the wire because I've intercepted it or you could use it to authenticate yourself",
    "start": "1238000",
    "end": "1245080"
  },
  {
    "text": "Services the statement was you could use it to authenticate yourself for Network Services Etc",
    "start": "1245080",
    "end": "1252039"
  },
  {
    "text": "exactly okay so I'm going to go I think I have my next slides are over some of the techniques which don't require a",
    "start": "1252039",
    "end": "1257320"
  },
  {
    "text": "device object uh yes so system calls hooking system calls this is the first thing that the",
    "start": "1257320",
    "end": "1263799"
  },
  {
    "text": "rootkit ever did um it's a Well documented uh technique um it's been",
    "start": "1263799",
    "end": "1270000"
  },
  {
    "start": "1270000",
    "end": "1270000"
  },
  {
    "text": "around for years hooking any kind of function call uh it's it's not meant",
    "start": "1270000",
    "end": "1275159"
  },
  {
    "text": "necessarily to be subversive it's actually quite useful if you're trying to add features to something and you don't perhaps have the source code or",
    "start": "1275159",
    "end": "1280960"
  },
  {
    "text": "you can't recompile it um system calls as I already explained",
    "start": "1280960",
    "end": "1287200"
  },
  {
    "text": "are the primary mode of communication what I'm going to show you is how the root kit hooks those system calls primarily two of them uh to hide any",
    "start": "1287200",
    "end": "1296080"
  },
  {
    "text": "file or directory on the system and also to hide any process on the system um but",
    "start": "1296080",
    "end": "1301880"
  },
  {
    "text": "I will explain some of the extents of this and how it could be applied to many other things there there are system calls that can be hooked for almost uh",
    "start": "1301880",
    "end": "1309000"
  },
  {
    "text": "well let's see I want to make an event log entry I could hook that and make the event log stop working for certain entries I could uh make the rootkit",
    "start": "1309000",
    "end": "1316440"
  },
  {
    "text": "itself not visible when you query the system information to find out what the loaded modules are it doesn't do that today you can see the root kit loaded I",
    "start": "1316440",
    "end": "1323640"
  },
  {
    "text": "don't think we're planning on making it hide itself in that way but it would be trivial to add that system call in",
    "start": "1323640",
    "end": "1329919"
  },
  {
    "start": "1330000",
    "end": "1330000"
  },
  {
    "text": "there n kernel exports a base address of",
    "start": "1331520",
    "end": "1336880"
  },
  {
    "text": "an array of function pointers and this is known as the service descriptor table",
    "start": "1336880",
    "end": "1342600"
  },
  {
    "text": "every single system service has an index number so there's like system call one system call call two system call 75 and",
    "start": "1342600",
    "end": "1350440"
  },
  {
    "text": "they all are specific this scriptor table is how the call number is converted into an actual function so",
    "start": "1350440",
    "end": "1356159"
  },
  {
    "text": "that you can actually make the call so here's how it basically",
    "start": "1356159",
    "end": "1362120"
  },
  {
    "text": "works the service descriptor table comes out of the uh is it's an array of function pointers and you Dilly off down",
    "start": "1362120",
    "end": "1368480"
  },
  {
    "text": "into the offset that you want and you grab the function pointer and that function pointer points",
    "start": "1368480",
    "end": "1374880"
  },
  {
    "text": "into the kernel or whatever component X exported that function our goal is to",
    "start": "1374880",
    "end": "1380919"
  },
  {
    "text": "change that little white box there that function pointer to point into the root kit and then the root kit in turn points",
    "start": "1380919",
    "end": "1388720"
  },
  {
    "text": "to the kernel so we're now playing man in the middle has everybody kind of get this",
    "start": "1388720",
    "end": "1394679"
  },
  {
    "text": "idea it's actually quite simple so the call Hook when we do this we actually",
    "start": "1394679",
    "end": "1400520"
  },
  {
    "text": "have an opportunity to alter all of the incoming parameters to the call that means the call that Eric Schultz there",
    "start": "1400520",
    "end": "1406679"
  },
  {
    "text": "sent to the system call when he made the call we can also alter the response",
    "start": "1406679",
    "end": "1413799"
  },
  {
    "text": "going back out to Eric's cool program sorry I'm picking on you um so",
    "start": "1413799",
    "end": "1421480"
  },
  {
    "text": "we can get you coming in we can get you coming out the reason this is important is maybe the call is supposed to set up",
    "start": "1421480",
    "end": "1427000"
  },
  {
    "text": "an event maybe it's supposed to for instance make an event log entry or it's supposed to set off an alarm or do something that's going to set some State",
    "start": "1427000",
    "end": "1433159"
  },
  {
    "text": "inside the system so if we can alter the perimeters before the Call's actually made we can change them so so that that",
    "start": "1433159",
    "end": "1438279"
  },
  {
    "text": "state doesn't do anything that we don't want it to do in the return data coming",
    "start": "1438279",
    "end": "1445320"
  },
  {
    "text": "back let's like making like say a directory listing and we want to snip out one of the entries so you don't see",
    "start": "1445320",
    "end": "1451720"
  },
  {
    "text": "it so coming out we can do",
    "start": "1451720",
    "end": "1456278"
  },
  {
    "text": "that oops um I'm going to go over Z ZW query",
    "start": "1458919",
    "end": "1465919"
  },
  {
    "start": "1461000",
    "end": "1461000"
  },
  {
    "text": "directory file this is a system call uh it's actually exported out of the kernel it's a it's what's called a",
    "start": "1465919",
    "end": "1471480"
  },
  {
    "text": "native a native API call has anybody here uh gone to system internals system internals yeah there's a complete list",
    "start": "1471480",
    "end": "1478159"
  },
  {
    "text": "of native API there there's a really really good book if you're interested in this you need to go get it um called the",
    "start": "1478159",
    "end": "1484039"
  },
  {
    "text": "native API reference by Gary nebit it's the best book I've seen on this subject",
    "start": "1484039",
    "end": "1489159"
  },
  {
    "text": "and it just goes through every single native API call all the uh all the parameters he reverse whoever he got the",
    "start": "1489159",
    "end": "1496200"
  },
  {
    "text": "information from whether it it's him or some of his his buds they did an incredible amount of reverse engineering into the code uh process structures all",
    "start": "1496200",
    "end": "1503720"
  },
  {
    "text": "kinds of stuff so it's very very useful the last Gary nebit uh the book is called native API",
    "start": "1503720",
    "end": "1510399"
  },
  {
    "text": "reference and I don't remember the Publisher's name actually I don't remember the publisher I know exactly what the book looks like though I can",
    "start": "1510399",
    "end": "1516520"
  },
  {
    "text": "picture it in my mind that's yeah no it's not one of those",
    "start": "1516520",
    "end": "1521880"
  },
  {
    "text": "it's not it's not an O'Reilly book uh it might be McMillan publishing but I'm not sure about that",
    "start": "1521880",
    "end": "1529600"
  },
  {
    "text": "okay so the purpose of this particular call is to return a directory listing for a volume so C backlash I want to see",
    "start": "1529600",
    "end": "1537000"
  },
  {
    "text": "all the files and directories that are in there so here's how it works because we've hooked the call we",
    "start": "1537000",
    "end": "1542919"
  },
  {
    "text": "get called first we don't care about the parameters we're going to go ahead and pass those un un unhindered but when we",
    "start": "1542919",
    "end": "1549039"
  },
  {
    "text": "get the response back that's where we're going to start playing with it the response is sent back as an array",
    "start": "1549039",
    "end": "1555880"
  },
  {
    "text": "of structures the structures say this is a file and it's named blah blah blah this is a directory this is named blah blah blah etc etc etc and they're all",
    "start": "1555880",
    "end": "1563080"
  },
  {
    "text": "linked together via a little offset field that's at the beginning of each structure so each structure tells you",
    "start": "1563080",
    "end": "1568840"
  },
  {
    "text": "how far you need to jump forward to get to the next one so obviously we can do some little manipulations in that field",
    "start": "1568840",
    "end": "1575200"
  },
  {
    "text": "and snip out an entry everybody see that normal snipped normal snipped very",
    "start": "1575200",
    "end": "1582440"
  },
  {
    "text": "simple Boom the little white box now can't be displayed that doesn't mean it didn't get the data the program that",
    "start": "1582440",
    "end": "1587799"
  },
  {
    "text": "made the query is still going to get this data but it's when it's doing its calculations and parsing through the array it's going to miss that",
    "start": "1587799",
    "end": "1594240"
  },
  {
    "text": "one so it wouldn't work on a really clever programmer who is like examining everything but it'll work on",
    "start": "1594240",
    "end": "1601000"
  },
  {
    "text": "explorer.exe cmd.exe when you type you know dir it works on all that and that's pretty",
    "start": "1601000",
    "end": "1607120"
  },
  {
    "text": "useful although I had somebody tell me recently excuse me it might not work on",
    "start": "1607120",
    "end": "1612480"
  },
  {
    "text": "a directory share I haven't tested that yet I have not tested that yet so that's an unknown",
    "start": "1612480",
    "end": "1619600"
  },
  {
    "start": "1619000",
    "end": "1619000"
  },
  {
    "text": "now that entire demonstration I gave you is exactly the same when we're talking",
    "start": "1619720",
    "end": "1624840"
  },
  {
    "text": "about hiding processes and threads and drivers there's a call ZW query system",
    "start": "1624840",
    "end": "1630640"
  },
  {
    "text": "information that returns an array of structures but they say this is a process and it's named blah blah blah",
    "start": "1630640",
    "end": "1636679"
  },
  {
    "text": "this is a thread in that process it's named blah blah blah and so forth and it's the same trip but you can snip out",
    "start": "1636679",
    "end": "1642320"
  },
  {
    "text": "an entry and it disappears out of the task manager or Ps or whatever",
    "start": "1642320",
    "end": "1649520"
  },
  {
    "start": "1649000",
    "end": "1649000"
  },
  {
    "text": "I have the root kit installed here on this little box and um I'll show you the",
    "start": "1654640",
    "end": "1660880"
  },
  {
    "text": "process hiding in a moment um the question was what's the",
    "start": "1660880",
    "end": "1666399"
  },
  {
    "text": "website uh it's www.ro.com and the full source code everything is available um there are",
    "start": "1666399",
    "end": "1673559"
  },
  {
    "text": "some there is some new stuff that I'm going to show you today that is not yet available but it will be very very soon",
    "start": "1673559",
    "end": "1678760"
  },
  {
    "text": "um I've got it working on my laptop here but I haven't had a time to um actually get it up on the website yet but I'll go",
    "start": "1678760",
    "end": "1684519"
  },
  {
    "text": "through that also today um so I was talking earlier about",
    "start": "1684519",
    "end": "1689640"
  },
  {
    "text": "software interrupts uh as a way to make a system call software interrupts are used for all kinds of things in in the",
    "start": "1689640",
    "end": "1696159"
  },
  {
    "text": "software and Hardware interrupts are used for all kinds of things in the system it's also possible to hook those",
    "start": "1696159",
    "end": "1701799"
  },
  {
    "text": "so we can get involved very very low level does everybody remember back way back in the Dos days when you had virus",
    "start": "1701799",
    "end": "1707679"
  },
  {
    "text": "that hooked I think it was interrupt nine to get to the keyboard is that right n nine so it was a it was a",
    "start": "1707679",
    "end": "1718200"
  },
  {
    "text": "an interrupt hooked into uh for nine that would enable you to sniff keystrokes now that's the old school",
    "start": "1718200",
    "end": "1724039"
  },
  {
    "text": "stuff now we just do it this device object way here in this particular rot kit but the idea of hooking software",
    "start": "1724039",
    "end": "1729440"
  },
  {
    "text": "interrupts is uh very very strong and it's fully supported in the room kit we have code in there that can allow you to",
    "start": "1729440",
    "end": "1735120"
  },
  {
    "text": "hook any software interrupt um we took out the the actual hook on",
    "start": "1735120",
    "end": "1740960"
  },
  {
    "text": "the system call interrupt 2E because we didn't need it to do we were already",
    "start": "1740960",
    "end": "1746240"
  },
  {
    "text": "doing it the other way by hooking all the API calls but we we could have just hooked interrupt 2E all the code is in there it's just if Deft",
    "start": "1746240",
    "end": "1754000"
  },
  {
    "text": "out so why why the interrupts fire somebody wants some attention from the",
    "start": "1754000",
    "end": "1759120"
  },
  {
    "text": "system um it could be a system call from user mode program it could be some debug",
    "start": "1759120",
    "end": "1764519"
  },
  {
    "text": "information going across the system uh it could be the hardware bus say saying hey look you know I got another packet",
    "start": "1764519",
    "end": "1770679"
  },
  {
    "text": "waiting on the uh um you know the network card it could be",
    "start": "1770679",
    "end": "1776240"
  },
  {
    "text": "uh interrupt could be due to an exception or a page fault the program barfed uh you know JD glosser just fired",
    "start": "1776240",
    "end": "1782760"
  },
  {
    "text": "a buff rlow at my computer in my bedroom and it crashed and fired you know a segmentation violation that would be an",
    "start": "1782760",
    "end": "1789000"
  },
  {
    "text": "interrupt um everybody here know what you know paging is you have a big giant page file so you have all this memory",
    "start": "1789000",
    "end": "1795200"
  },
  {
    "text": "that's supposedly accessible but it's clearly not all in memory at a time if you try to access memory that's",
    "start": "1795200",
    "end": "1800320"
  },
  {
    "text": "currently paged out to disc that causes an interrupt so interrupts are very important they're used quite quite a lot",
    "start": "1800320",
    "end": "1805919"
  },
  {
    "text": "I'm going to tell you how they work an interrupt descriptor table exists it's very similar to uh the previous example",
    "start": "1805919",
    "end": "1812760"
  },
  {
    "text": "I gave you of a series of calls uh that are in an array the interrupted scriptor",
    "start": "1812760",
    "end": "1818279"
  },
  {
    "text": "table um has function addresses a function that's meant to be called if a particular interrupt",
    "start": "1818279",
    "end": "1825519"
  },
  {
    "text": "fires so I'm going to introduce an instruction here uh store interrupt descriptor table",
    "start": "1826240",
    "end": "1833240"
  },
  {
    "text": "sidt it's an Intel instruction assembly instruction uh there's another one Li and I don't know why I wrote it here",
    "start": "1833240",
    "end": "1839039"
  },
  {
    "text": "because you don't need to use it to do this um sidt uh can only be run from a root kit in kernel mode it could never",
    "start": "1839039",
    "end": "1845240"
  },
  {
    "text": "be run from ring three because that would cause a a violation and actually another interrupt would fire saying there's an exception here this is an",
    "start": "1845240",
    "end": "1851120"
  },
  {
    "text": "invalid instruction so I fire",
    "start": "1851120",
    "end": "1856240"
  },
  {
    "text": "um I fire excuse me S does not mean store",
    "start": "1856240",
    "end": "1861480"
  },
  {
    "text": "oh it does mean store I think it does mean store I can't remember yes it does mean store but uh what it does is it",
    "start": "1861480",
    "end": "1866760"
  },
  {
    "text": "gives me the Base address of the interrupted scriptor table so I fire off S to the processor and it tells me hey look this is the address boom so I get",
    "start": "1866760",
    "end": "1874880"
  },
  {
    "text": "the address and now I know where the base of the interrupted scripture table is I then have to disable all interrupts",
    "start": "1874880",
    "end": "1882200"
  },
  {
    "text": "if I'm going to start monkeying around with the interrupt scripture table because it would really really suck if an interrupt fire GL was halfway riding",
    "start": "1882200",
    "end": "1888159"
  },
  {
    "text": "through the entry so CLI again it's a privilege instruction you can't run it from user mode cuts off all interrupts",
    "start": "1888159",
    "end": "1895320"
  },
  {
    "text": "on the processor until I reenable them then I offset to the interrupt number I want to",
    "start": "1895320",
    "end": "1901399"
  },
  {
    "text": "modify and put in my new value points to my hook and then STI to",
    "start": "1901399",
    "end": "1909000"
  },
  {
    "text": "release the lock off the interrupts and I'm good and strong that is already",
    "start": "1909000",
    "end": "1914399"
  },
  {
    "text": "implemented in the root kit although we're not using interrupts interrupt hooks for anything subversive it's just",
    "start": "1914399",
    "end": "1919799"
  },
  {
    "text": "it's just in there if you wanted to get involved with that level of",
    "start": "1919799",
    "end": "1924120"
  },
  {
    "text": "thinking one thing that you might think about is that there are a number of interrupts on your system which aren't",
    "start": "1925679",
    "end": "1931360"
  },
  {
    "text": "used let's say we have some malware running on the system and we want to",
    "start": "1931360",
    "end": "1936720"
  },
  {
    "text": "create a kind of a covert channel to communicate with the root kit well from user so one way to do that is to use one",
    "start": "1936720",
    "end": "1943519"
  },
  {
    "text": "of the unused interrupts and allow the root kit to respond to say interrupt 20 or 22 through 29 which I believe are all",
    "start": "1943519",
    "end": "1952200"
  },
  {
    "text": "unused so registering your own um interrupt can become a communication",
    "start": "1954080",
    "end": "1959279"
  },
  {
    "text": "path between user mode and kernel mode and I have heard about Linux based floatable modules that actually do",
    "start": "1959279",
    "end": "1966480"
  },
  {
    "text": "this um you can also hook Hardware interrupts but I'm not going to augur on",
    "start": "1966480",
    "end": "1971519"
  },
  {
    "start": "1971000",
    "end": "1971000"
  },
  {
    "text": "that now have any of you taken a look at the root kit and seen the sniffer code that's all packaged in there originally",
    "start": "1971519",
    "end": "1979519"
  },
  {
    "text": "the rootkit was uh some code that I had written to be an indis layer",
    "start": "1979519",
    "end": "1984840"
  },
  {
    "text": "sniffer back in the day when you couldn't get snippers that worked very well for NT so I was working on that",
    "start": "1984840",
    "end": "1990000"
  },
  {
    "text": "project quite a lot and that's kind of what led up to the root kit being developed in the first place was all that work in kernel mode so we actually",
    "start": "1990000",
    "end": "1997120"
  },
  {
    "text": "can sniff any packet uh going over the wire and send anything we want raw to the wire from the root kit",
    "start": "1997120",
    "end": "2003440"
  },
  {
    "text": "itself this all operates over an API known as uh",
    "start": "2003440",
    "end": "2008720"
  },
  {
    "text": "Network device interface specification I believe indis so there's there's actually a library exposed kind of like",
    "start": "2008720",
    "end": "2014760"
  },
  {
    "text": "windlock but for kernel mode I mean think about it in kind of a lower layer where I can get back information if a",
    "start": "2014760",
    "end": "2020720"
  },
  {
    "text": "packet arrives or send information so that means the rootkit doesn't have to worry about the kind of network card that you have all it has to do is talk",
    "start": "2020720",
    "end": "2026679"
  },
  {
    "text": "to indis so it'll work ubiquitously with any network card so to do this in the root kit we're",
    "start": "2026679",
    "end": "2033880"
  },
  {
    "text": "going to get back into some code again here for small moment we have to call indis register protocol",
    "start": "2033880",
    "end": "2039440"
  },
  {
    "text": "to say hey look you know we have this protocol we want to bind to and then",
    "start": "2039440",
    "end": "2044519"
  },
  {
    "text": "indis open adapter to open the underlying adapter and then we do an indis request which is an",
    "start": "2044519",
    "end": "2051679"
  },
  {
    "text": "I octyl that puts it in promiscuous mode so we can sniff everything and we do that via indis",
    "start": "2051679",
    "end": "2057520"
  },
  {
    "text": "request which is another API call and that's all handled in there and I'm not going to delve into the details of how the code gets called and at that point",
    "start": "2057520",
    "end": "2064638"
  },
  {
    "text": "we begin to receive packets in our packet call back function all packets that we sniff so",
    "start": "2064639",
    "end": "2071520"
  },
  {
    "text": "some of things we could do we're not currently doing this but one of the things you could think about that could be done is that I could look at a",
    "start": "2071520",
    "end": "2078358"
  },
  {
    "text": "particular offset in any packet and see if it's set to you know heximal value",
    "start": "2078359",
    "end": "2083800"
  },
  {
    "text": "29a and then if it is then look at another offset and if it's set to you",
    "start": "2083800",
    "end": "2089040"
  },
  {
    "text": "know 400 then that's like a secret signal to the root kit to do something kind of a covert channel that would be",
    "start": "2089040",
    "end": "2095320"
  },
  {
    "text": "extremely difficult to Det detect uh with a sniffer or an intrusion detection",
    "start": "2095320",
    "end": "2100359"
  },
  {
    "text": "system just that sort of one way I'm going to send you a secret covert signal and you're going to do something that would be very hard to",
    "start": "2100359",
    "end": "2106440"
  },
  {
    "text": "detect in the root kit that we have on the site there's a very kind of hack need tcpip stack in it now so you can",
    "start": "2106440",
    "end": "2113560"
  },
  {
    "text": "actually tell that to it now it will spoof an IP address of some machine that doesn't actually exist on your network",
    "start": "2113560",
    "end": "2120400"
  },
  {
    "text": "it'll use its own special Mac address that doesn't exist really on your network so if you did sniff that it",
    "start": "2120400",
    "end": "2126599"
  },
  {
    "text": "would look like a machine that's completely ghost if I was if this was the sniffer here and this little box",
    "start": "2126599",
    "end": "2132320"
  },
  {
    "text": "here had the root kit it wouldn't look like data going to the root kit it would look like data going to somewhere else and I'd have no idea you it would",
    "start": "2132320",
    "end": "2138720"
  },
  {
    "text": "probably be you after enough digging around you'd figure it out but you couldn't base a current rot kit you",
    "start": "2138720",
    "end": "2143960"
  },
  {
    "text": "couldn't base that on the IP",
    "start": "2143960",
    "end": "2147078"
  },
  {
    "text": "address oh yes so I'm going to show off my cool Elite Flash animation skills here um so we can both send and receive",
    "start": "2151000",
    "end": "2158680"
  },
  {
    "text": "raw packets um let's say we want to load the driver in a way that makes it impossible",
    "start": "2158680",
    "end": "2164599"
  },
  {
    "start": "2161000",
    "end": "2161000"
  },
  {
    "text": "to unload that's trivial in fact to do under NT you just do not register what's called an unload routine um I've heard",
    "start": "2164599",
    "end": "2172920"
  },
  {
    "text": "it talked about in the root kit circles uh both in Unix and and the n one that you know let's try to make it so you",
    "start": "2172920",
    "end": "2178920"
  },
  {
    "text": "can't unload it as kind of a way to make it harder for the administrator to deal with if they find it at that point",
    "start": "2178920",
    "end": "2184280"
  },
  {
    "text": "they've really got to remove anything out of the Reg that may loaded automatically and reboot and I can't",
    "start": "2184280",
    "end": "2189480"
  },
  {
    "text": "think of any way to force and unload safely it wouldn't blue screen your box so it's actually you know quite it's",
    "start": "2189480",
    "end": "2196280"
  },
  {
    "text": "kind of harder to make it unload properly a very um sloppy way to ride a",
    "start": "2196280",
    "end": "2201560"
  },
  {
    "text": "driers is to not actually put the unload routine in there so uh when I implemented uh the unload routine for",
    "start": "2201560",
    "end": "2207040"
  },
  {
    "text": "The Rook kit there were all kinds of problems I had to solve because there's all these call backs coming back and",
    "start": "2207040",
    "end": "2212200"
  },
  {
    "text": "they're waiting out there and if I unload the rot kit and the call back occurs it's going to call back into no no nowhere no mansl and it's going to",
    "start": "2212200",
    "end": "2218560"
  },
  {
    "text": "cause a blue screen of death so actually it does unload and load safely and repeatedly uh but there are some tricks",
    "start": "2218560",
    "end": "2224440"
  },
  {
    "text": "in there that I had to implement to make that work properly so making an unload routine is an entire chapter in N device",
    "start": "2224440",
    "end": "2231920"
  },
  {
    "text": "driver uh manual um and I just Des grabed all the",
    "start": "2231920",
    "end": "2238520"
  },
  {
    "start": "2236000",
    "end": "2236000"
  },
  {
    "text": "pain there uh I don't want to get into the details but just think about it I have pending things out there that are",
    "start": "2238520",
    "end": "2243640"
  },
  {
    "text": "going to come back to me so in the unload routine I actually have to wait to make sure everything that's pending comes back and then I can unload that's",
    "start": "2243640",
    "end": "2249599"
  },
  {
    "text": "just basically the trick uh those pending things are called IO request packets hers and I have to",
    "start": "2249599",
    "end": "2256119"
  },
  {
    "text": "track them and and then I have to unbind all those little device objects from the lower layer drivers or",
    "start": "2256119",
    "end": "2263240"
  },
  {
    "text": "devices",
    "start": "2263240",
    "end": "2266240"
  },
  {
    "text": "okay I already talked a little bit about ZW query system information that's one of the uh system calls that might be",
    "start": "2269079",
    "end": "2276000"
  },
  {
    "text": "used to detect a loaded module it would be incredibly trivial to use that snipping technique to hide the root kit",
    "start": "2276000",
    "end": "2282640"
  },
  {
    "text": "from from that query but there's other ways you could try to detect something in your system like a root",
    "start": "2282640",
    "end": "2289040"
  },
  {
    "text": "kit um query system information we could hook",
    "start": "2289040",
    "end": "2294359"
  },
  {
    "text": "that yes that's the snip trick if I did a driver query and I and",
    "start": "2295520",
    "end": "2301520"
  },
  {
    "start": "2298000",
    "end": "2298000"
  },
  {
    "text": "there was a snip trick I could also just examine the entire buffer that was sent back to me from a user mode program see",
    "start": "2301520",
    "end": "2306800"
  },
  {
    "text": "if something got snipped because structures have certain well structures to them and I could go through and look",
    "start": "2306800",
    "end": "2313240"
  },
  {
    "text": "for particular values and see oh look this is very suspicious this looks like a snipped entry so you could make a bit",
    "start": "2313240",
    "end": "2319760"
  },
  {
    "text": "better driver query in an attempt to kind of detect this this kind of corny Behavior but",
    "start": "2319760",
    "end": "2325760"
  },
  {
    "text": "again that's not a very good approach because then a r kit could just re uh allocate the entire buffer and remove the thing entirely I mean so you're",
    "start": "2325760",
    "end": "2332800"
  },
  {
    "text": "again playing a game of chess against the computer",
    "start": "2332800",
    "end": "2338160"
  },
  {
    "start": "2335000",
    "end": "2335000"
  },
  {
    "text": "the root kit could watch for memory reads say to Dev FSM which is kind of uh",
    "start": "2338160",
    "end": "2345440"
  },
  {
    "text": "synonymous with like Dev Dev km I think it's SL device physical memory actually",
    "start": "2345440",
    "end": "2351760"
  },
  {
    "text": "um but under Unix you've heard of Dev km there's a device which is mapped as a I think as a like a file handle so you can",
    "start": "2351760",
    "end": "2357640"
  },
  {
    "text": "attach to it and uh scan through memory uh if you're the administrator or root you can do that you could certainly do",
    "start": "2357640",
    "end": "2363880"
  },
  {
    "text": "that to try to detect a loaded root kit the root k itself then could of course then watch memory reads and if it sees",
    "start": "2363880",
    "end": "2369480"
  },
  {
    "text": "something coming towards it it could try to subvert that it could do that by perhaps modifying the page permissions",
    "start": "2369480",
    "end": "2375640"
  },
  {
    "text": "the memory pages so that it would throw an exception if you tried to read or something like that I have not thought",
    "start": "2375640",
    "end": "2381560"
  },
  {
    "start": "2381000",
    "end": "2381000"
  },
  {
    "text": "through all those tricks very extensively if I have a obviously I'll need a file on the system so if I get",
    "start": "2381560",
    "end": "2388680"
  },
  {
    "text": "rebooted I want the rot kit to go back up in the memory um one of the ways that the rot Kit's currently being packaged",
    "start": "2388680",
    "end": "2394560"
  },
  {
    "text": "is is as the driver null CYS which is shipped on every ENT box and runs by",
    "start": "2394560",
    "end": "2399800"
  },
  {
    "text": "default so um there's a replacement n. CYS which is actually rid uh. CIS but",
    "start": "2399800",
    "end": "2406400"
  },
  {
    "text": "the original null. CYS is still there and packaged away with the whole sort of execute redirection trick so that if you",
    "start": "2406400",
    "end": "2412880"
  },
  {
    "text": "go and try to read it you get the real null. CIS and you don't realize anything is going on so that's you got another",
    "start": "2412880",
    "end": "2419240"
  },
  {
    "text": "way you could try to hide the kit um if it has file system components like the fellow in the audience was stating",
    "start": "2419240",
    "end": "2424440"
  },
  {
    "text": "earlier a hacker had left a bunch of f laying around on the system um the rootkit could say hide a particular",
    "start": "2424440",
    "end": "2431400"
  },
  {
    "text": "directory and then you could put all your trash files in that directory and then hopefully the admin would never see them",
    "start": "2431400",
    "end": "2438319"
  },
  {
    "start": "2438000",
    "end": "2438000"
  },
  {
    "text": "there that's all the current rootkit technology but I wrote some information",
    "start": "2438400",
    "end": "2444480"
  },
  {
    "text": "for Frack magazine about a year ago on uh runtime kernel patching to remove the",
    "start": "2444480",
    "end": "2450560"
  },
  {
    "text": "functionality of SC access check and that actually still works the",
    "start": "2450560",
    "end": "2456920"
  },
  {
    "text": "4 byte patch that I wrote about in my paper was corrected someone sent a hacker sent me some email and said hey",
    "start": "2456920",
    "end": "2463119"
  },
  {
    "text": "dude uh it was really cool what you did but I figured out how to do it in one bite in fact I looked at the bite that he gave me for the patch and it was only",
    "start": "2463119",
    "end": "2469960"
  },
  {
    "text": "one bit different than the previous bite that was already there and I was like so was actually a one bit change in the",
    "start": "2469960",
    "end": "2475920"
  },
  {
    "text": "system that removed all the uh All Access Control checks the reason this",
    "start": "2475920",
    "end": "2481319"
  },
  {
    "text": "worked is because his patch actually was a patch in the check of the flight that",
    "start": "2481319",
    "end": "2486640"
  },
  {
    "text": "indicated whether or not the call came from colel mode so if obviously it thought it came from Colonel mode it",
    "start": "2486640",
    "end": "2492040"
  },
  {
    "text": "wouldn't bother doing the check it would just say okay you can access the the file or whatever object you",
    "start": "2492040",
    "end": "2497960"
  },
  {
    "text": "want runtime Colonel patching um let's imagine a situation",
    "start": "2497960",
    "end": "2503839"
  },
  {
    "text": "where I have Dev physical memory um and I can write to it I could go in there",
    "start": "2503839",
    "end": "2509720"
  },
  {
    "text": "scan through memory find where ntos kernel sits in memory and then go",
    "start": "2509720",
    "end": "2515599"
  },
  {
    "text": "through its PE e format find the particular offset of the function that I want to patch I could go in find that",
    "start": "2515599",
    "end": "2522119"
  },
  {
    "text": "function and alter it directly the function itself or I could alter the export or Import in a particular image",
    "start": "2522119",
    "end": "2529720"
  },
  {
    "text": "so that it hooks to my file function somewhere else in memory etc etc there's all kinds of extra space in a PE uh",
    "start": "2529720",
    "end": "2537920"
  },
  {
    "text": "formatted file because it has to land on page boundaries so at the end of every",
    "start": "2537920",
    "end": "2543319"
  },
  {
    "text": "Chunk in cor Chunk in the PE file you find those dead space and um I've heard",
    "start": "2543319",
    "end": "2549960"
  },
  {
    "text": "uh it's a new term for me someone here at black hat called it caving i' never",
    "start": "2549960",
    "end": "2555240"
  },
  {
    "text": "heard it called that but it's a trick that's been used a long time we have this little extra Dead Space let's put our virus in there and we won't change",
    "start": "2555240",
    "end": "2562200"
  },
  {
    "text": "the file size that way of course it would change the hash but um the",
    "start": "2562200",
    "end": "2567280"
  },
  {
    "text": "important thing to realize when you're doing runtime kernel patching in hot memory is that maybe we don't want to be riding around writing stuff randomly in",
    "start": "2567280",
    "end": "2574839"
  },
  {
    "text": "weird locations where we might end up getting crashed because that area might be useful for something but we do know",
    "start": "2574839",
    "end": "2580079"
  },
  {
    "text": "that these Extra Spaces are safe zones we can go in there and add some code in there and we know that all right that's",
    "start": "2580079",
    "end": "2586000"
  },
  {
    "text": "a safe area I can patch some stuff into that and I know the colonel is not going to fault on me because it's not trying to use that so I can add an extra",
    "start": "2586000",
    "end": "2592400"
  },
  {
    "text": "function in there and then hook it so those tricks might work on like a",
    "start": "2592400",
    "end": "2598440"
  },
  {
    "text": "Dev C or Dev physical memory I think there's a tool for Unix",
    "start": "2598440",
    "end": "2604240"
  },
  {
    "text": "called K km Thief it does something like that another runtime kernel patching",
    "start": "2604240",
    "end": "2611200"
  },
  {
    "start": "2607000",
    "end": "2607000"
  },
  {
    "text": "trick actually not kernel patching but runtime system patching trick would be to search for process",
    "start": "2611200",
    "end": "2617680"
  },
  {
    "text": "structures uh say let's find the security descriptor we'll go through memory until we find a security",
    "start": "2617680",
    "end": "2623040"
  },
  {
    "text": "descriptor for something and change it so that it's somebody else maybe it was a user mode process and now it's into",
    "start": "2623040",
    "end": "2628280"
  },
  {
    "text": "Authority system so the patches don't have to be on functions they can also be on",
    "start": "2628280",
    "end": "2633599"
  },
  {
    "text": "structures I guess is my point so everybody kind of understand how that would",
    "start": "2633599",
    "end": "2638799"
  },
  {
    "text": "work you'd be amazed some people just don't get it so I want to make sure everybody's on the same page",
    "start": "2643359",
    "end": "2649359"
  },
  {
    "start": "2649000",
    "end": "2649000"
  },
  {
    "text": "here so I was just talking about hot patching that's that's a dead subject I just went through that pretty",
    "start": "2649359",
    "end": "2655200"
  },
  {
    "start": "2655000",
    "end": "2655000"
  },
  {
    "text": "well one of the things you might want to do is make a function call completely and totally nonfunctional so you could",
    "start": "2655200",
    "end": "2661960"
  },
  {
    "text": "actually instead of making a hook you could just go to where the function code exists and alter it overwriting the",
    "start": "2661960",
    "end": "2667119"
  },
  {
    "text": "actual code that was there with your own code I've done some things where the code that was there was longer because",
    "start": "2667119",
    "end": "2674079"
  },
  {
    "text": "of the things it was doing than the code I wanted to implement so I actually could uh noop 9990 the entire region and",
    "start": "2674079",
    "end": "2680520"
  },
  {
    "text": "then paste in my own because it was smaller of course if if it was bigger I would override into something else and that would be bad so it would only work",
    "start": "2680520",
    "end": "2687160"
  },
  {
    "text": "if what you want to put in there is smaller than what's there um a simple return patch is just making the function",
    "start": "2687160",
    "end": "2693119"
  },
  {
    "text": "return with say some code you always always wanted to throw back this particular error code and have it do",
    "start": "2693119",
    "end": "2698599"
  },
  {
    "text": "nothing else so throwing a return patch is a very very short amount of code required to do",
    "start": "2698599",
    "end": "2705078"
  },
  {
    "text": "that I could also search for kernel symbols look for ntdll etc etc change",
    "start": "2706760",
    "end": "2712240"
  },
  {
    "text": "exported symbols I've already kind of talked about that um this is an interesting trick key sear",
    "start": "2712240",
    "end": "2717599"
  },
  {
    "text": "chain let's say that I don't have the function I want to patch is not exported so I can't look through the PE",
    "start": "2717599",
    "end": "2724119"
  },
  {
    "text": "header to find it but but I do know that a particular function makes a function",
    "start": "2724119",
    "end": "2729319"
  },
  {
    "text": "call to the one I want to patch so let's say that I know that it does six things",
    "start": "2729319",
    "end": "2734440"
  },
  {
    "text": "right before it makes the call so I go through and I look for this string of like you know 30 bytes that leads up to",
    "start": "2734440",
    "end": "2740559"
  },
  {
    "text": "the call that's my key I get there I find the call and then the next four",
    "start": "2740559",
    "end": "2745800"
  },
  {
    "text": "bytes is the actual address of the function so using key searching I can actually find places where the code",
    "start": "2745800",
    "end": "2751119"
  },
  {
    "text": "makes the call and it kind of gives me the address for free so it's another trick that you can use of course of course if the function or the key were",
    "start": "2751119",
    "end": "2757599"
  },
  {
    "text": "to change say in a different Service Pack then that would cease to work you would have to have multiple Keys one for each Service",
    "start": "2757599",
    "end": "2764240"
  },
  {
    "start": "2766000",
    "end": "2766000"
  },
  {
    "text": "Pack I don't know how to do this but apparently it's possible is to actually write your module into kernel space uh",
    "start": "2770319",
    "end": "2778680"
  },
  {
    "text": "using like the dev physical memory and somehow you're able to make that work via um I actually don't know how to make",
    "start": "2778680",
    "end": "2786040"
  },
  {
    "text": "it load but one way I could picture you might do it is you'd make a call Patch say to one of the commonly called",
    "start": "2786040",
    "end": "2792720"
  },
  {
    "text": "functions in the kernel that did the rest of the work of getting the image to load so you could load the image into",
    "start": "2792720",
    "end": "2798319"
  },
  {
    "text": "memory via km or phys device physical memory and then you could get it to run by a small patch on something else you",
    "start": "2798319",
    "end": "2805160"
  },
  {
    "start": "2805000",
    "end": "2805000"
  },
  {
    "text": "can patch the system structures keep track",
    "start": "2805160",
    "end": "2812359"
  },
  {
    "text": "of and then next time",
    "start": "2812359",
    "end": "2817800"
  },
  {
    "text": "it will reach the new function would would that actually load the module and initialize it it's just",
    "start": "2818079",
    "end": "2827319"
  },
  {
    "text": "speculation yeah theems you have horrible race",
    "start": "2827319",
    "end": "2834920"
  },
  {
    "text": "conditions this the statement is you could you could modify perhaps you could modify a system structure that has all",
    "start": "2835680",
    "end": "2841359"
  },
  {
    "text": "the loaded modules and add in your module there um I think there's probably some initialization",
    "start": "2841359",
    "end": "2846559"
  },
  {
    "text": "issues there that would have to be taken care of",
    "start": "2846559",
    "end": "2850280"
  },
  {
    "text": "though and I just described that the bootstrap code I could load it in there but it's not actually running and I put",
    "start": "2852760",
    "end": "2857800"
  },
  {
    "text": "some bootstrap code somewhere so I can get it to call load image um another way to do it would be to patch the kernel on",
    "start": "2857800",
    "end": "2864720"
  },
  {
    "text": "dis the actual file itself with the code changes that you want the problem with this is that there's actually an",
    "start": "2864720",
    "end": "2870480"
  },
  {
    "text": "Integrity check on the Kernel it won't run if it's been patched so you'd also have to patch into Lo so that it didn't",
    "start": "2870480",
    "end": "2876720"
  },
  {
    "text": "look at the file properly anymore um and I don't know if n loader is subject to",
    "start": "2876720",
    "end": "2882480"
  },
  {
    "text": "another check some check somewhere else but there's basically a boot sequence you'd have to get involved in if you",
    "start": "2882480",
    "end": "2887920"
  },
  {
    "text": "wanted to actually patch the kernel on dis otherwise it wouldn't load so I just described that um n. cyst",
    "start": "2887920",
    "end": "2896160"
  },
  {
    "text": "that's kind of what I already talked about we put the rootkit uh that's you can put it in n. CYS right now and have",
    "start": "2896160",
    "end": "2902559"
  },
  {
    "text": "it load um and you could redirect accesses and all that St so you wouldn't be able to detect it with an Integrity",
    "start": "2902559",
    "end": "2908680"
  },
  {
    "text": "checking program excuse me yeah um I think that's an interesting idea what if you delete the say worried about that",
    "start": "2908680",
    "end": "2916480"
  },
  {
    "start": "2911000",
    "end": "2911000"
  },
  {
    "text": "kind of part of your process delete the what um the question was what would the",
    "start": "2916480",
    "end": "2923520"
  },
  {
    "text": "effect of deleting null. CYS have on the rootkit um if it was a version of the",
    "start": "2923520",
    "end": "2929319"
  },
  {
    "text": "root kit that was compiled to replace n. CIS um it would be deleted of course",
    "start": "2929319",
    "end": "2936680"
  },
  {
    "text": "but the thing is it could be anything you don't have to use n. Cy you could replace a printer driver or something",
    "start": "2936680",
    "end": "2942559"
  },
  {
    "text": "else with it pro concept like this I consider",
    "start": "2942559",
    "end": "2947680"
  },
  {
    "text": "something want to download at the signature and try you're just",
    "start": "2947680",
    "end": "2953040"
  },
  {
    "text": "talking right this could be anything yes it could be anything it could be any CIS file it could be infected um it could be",
    "start": "2953040",
    "end": "2959680"
  },
  {
    "text": "a legitimate CIS file too that was infected like as if it were a virus um also remember if the is already running",
    "start": "2959680",
    "end": "2966799"
  },
  {
    "text": "and you're trying to delete the file now it's a whole different story because the r kid can see oh look he's trying to see the file and it'll pretend like it",
    "start": "2966799",
    "end": "2972160"
  },
  {
    "text": "deleted it and when in fact it didn't so someone had a question",
    "start": "2972160",
    "end": "2978760"
  },
  {
    "text": "okay uh oh yes I wanted to talk a little bit about this um again it's something I haven't actually gotten to work or",
    "start": "2978760",
    "end": "2984720"
  },
  {
    "text": "played around too extensively with but um the fact is there probably are many",
    "start": "2984720",
    "end": "2989839"
  },
  {
    "text": "many buffer overflows in kernel mode components there are so many uh third",
    "start": "2989839",
    "end": "2995640"
  },
  {
    "text": "party kernel drivers and stuff that's used I'm sure there are and the fact is",
    "start": "2995640",
    "end": "3002720"
  },
  {
    "text": "if you can do a buffer overflow into the kernel object you can probably get some code to execute and you could get a rot kid into kernel mode that way the issue",
    "start": "3002720",
    "end": "3010440"
  },
  {
    "text": "would be getting that to happen without blue screening the Box a buffer overflow can be kind of nasty to everything",
    "start": "3010440",
    "end": "3015799"
  },
  {
    "text": "around it and I can only speculate right now the various tricks I might try to",
    "start": "3015799",
    "end": "3021040"
  },
  {
    "text": "use to prevent the buffer overflow itself from just completely blowing the Box up and therefore you know subverting",
    "start": "3021040",
    "end": "3026280"
  },
  {
    "text": "all of the activi trying to get a root kid in there and and furthermore alerting the administrator that something horrible is going on on the",
    "start": "3026280",
    "end": "3034400"
  },
  {
    "text": "box I guess you're right you might you might not consider it very",
    "start": "3038480",
    "end": "3043640"
  },
  {
    "start": "3046000",
    "end": "3046000"
  },
  {
    "text": "abnormal one way to do that might be to install an exception Handler so that the if there was a segv or something that",
    "start": "3047880",
    "end": "3053359"
  },
  {
    "text": "was captured properly another one might be to Force the graceful shutdown of the particular driver that you attacked or",
    "start": "3053359",
    "end": "3059200"
  },
  {
    "text": "disabling the driver somehow by putting it into a loop or some kind of bad State the problem of course with all of",
    "start": "3059200",
    "end": "3065480"
  },
  {
    "start": "3062000",
    "end": "3062000"
  },
  {
    "text": "this is that there's always this and it's the same problem with the unload routine there's all these pending things coming back and like a pending her IO",
    "start": "3065480",
    "end": "3073000"
  },
  {
    "text": "request packet if it comes flying back for its completion routine and I've gracefully shut down the driver it's no longer a graceful shut down it's now a",
    "start": "3073000",
    "end": "3078960"
  },
  {
    "text": "blue screen of death one way to stop a root kit I'm",
    "start": "3078960",
    "end": "3086880"
  },
  {
    "start": "3083000",
    "end": "3083000"
  },
  {
    "text": "going to go over some of the ideas that I've seen is to do um Integrity checking of every single system module that's",
    "start": "3086880",
    "end": "3092960"
  },
  {
    "text": "loaded in memory and N already has support for driver signing if you're using that to the extent and power that",
    "start": "3092960",
    "end": "3098920"
  },
  {
    "text": "that it offers you would not be able to load a root kit because it's clearly not assed object it's clearly not good code",
    "start": "3098920",
    "end": "3104000"
  },
  {
    "text": "it's not something that you want running on your system um there is something called an Integrity protection driver by",
    "start": "3104000",
    "end": "3111200"
  },
  {
    "text": "some I can't remember what software group puts it out but it's kind of an anti-root K and when you load it it",
    "start": "3111200",
    "end": "3116599"
  },
  {
    "text": "prevents any more system modules from being loaded the day they released it a",
    "start": "3116599",
    "end": "3121680"
  },
  {
    "text": "couple weeks later the rootkit team released system load and call Image an alternative way to get it to load which completely subverted",
    "start": "3121680",
    "end": "3127640"
  },
  {
    "text": "ipd well then ipd came out with a patch so stop that particular one but that doesn't stop the dev physical memory one",
    "start": "3127640",
    "end": "3133480"
  },
  {
    "text": "so they put a patch in to stop Dev physical memory from being written to and so then you know I brought up the",
    "start": "3133480",
    "end": "3138559"
  },
  {
    "text": "whole or actually one of the other rootkit developers brought up the whole ke allocate selector method and again this a new way to do it which it",
    "start": "3138559",
    "end": "3144559"
  },
  {
    "text": "currently isn't stopped in the Integrity protection driver but it could be so again we're just playing this game of",
    "start": "3144559",
    "end": "3150160"
  },
  {
    "text": "chess and eventually you're probably going to minimize the amount of way something can get into the kernel and that's a good way to stop a root kit",
    "start": "3150160",
    "end": "3156079"
  },
  {
    "text": "from getting into your system the only problem is of course you might need to load drivers from time to",
    "start": "3156079",
    "end": "3162280"
  },
  {
    "text": "time and if you have something in there like that it's going to pose a big",
    "start": "3162280",
    "end": "3167319"
  },
  {
    "text": "problem uh something that was suggested to me is actually something that came from the world of Linux kernel modules",
    "start": "3168119",
    "end": "3174559"
  },
  {
    "start": "3171000",
    "end": "3171000"
  },
  {
    "text": "uh was to put some sort of password protection or authentication scheme so when you want to actually load something instead of just saying no it challenges",
    "start": "3174559",
    "end": "3181040"
  },
  {
    "text": "you to say TR make me trust you and then you could allow it to load so that's another",
    "start": "3181040",
    "end": "3186160"
  },
  {
    "start": "3185000",
    "end": "3185000"
  },
  {
    "text": "option at the very least it's probably a good idea to log all things that are going into kernel mode um audit you know",
    "start": "3186160",
    "end": "3194720"
  },
  {
    "text": "audit audit audit another idea is to have some Hardware based protection that would be",
    "start": "3194720",
    "end": "3201160"
  },
  {
    "text": "the best having Hardware based protection for this would be uh very very very hard to",
    "start": "3201160",
    "end": "3206480"
  },
  {
    "text": "circumvent you still need the driver well let's assume you have boot",
    "start": "3206480",
    "end": "3211520"
  },
  {
    "text": "protection in the hardware where it does an Integrity check of the boot loader the master boot record and all that and",
    "start": "3211520",
    "end": "3217280"
  },
  {
    "text": "then it does an Integrity check on the NT loader and then the N loader you know is safe so it's not going to let load a",
    "start": "3217280",
    "end": "3223160"
  },
  {
    "text": "bad kernel so the kernel is not modified and then you have it go through and do a driver signing on all the loaded drivers",
    "start": "3223160",
    "end": "3229000"
  },
  {
    "text": "so now you've got this trusted boot sequence from the moment you turn on the computer if you can make that work I think you've nailed that one dead it's",
    "start": "3229000",
    "end": "3236079"
  },
  {
    "text": "very very hard to get something into the kernel at that point one of the things people don't realize is that one of the places to",
    "start": "3236079",
    "end": "3243559"
  },
  {
    "text": "place malicious code on the computer have run during boot time and uh not be",
    "start": "3243559",
    "end": "3250200"
  },
  {
    "text": "detected is in very fi flash I'm sorry I didn't hear that I I",
    "start": "3250200",
    "end": "3255680"
  },
  {
    "text": "can flash your model to contain a war I Oh you mean store store it in the memory",
    "start": "3255680",
    "end": "3261680"
  },
  {
    "text": "of the device and that runs time before your system starts buing and I'm",
    "start": "3261680",
    "end": "3271880"
  },
  {
    "text": "there of of course you have to get that code to run in the first place which is kind of the problem",
    "start": "3272920",
    "end": "3279839"
  },
  {
    "text": "obviously IDE is right it always assumes entered once",
    "start": "3279839",
    "end": "3287680"
  },
  {
    "text": "right that's not right",
    "start": "3287680",
    "end": "3291680"
  },
  {
    "start": "3294000",
    "end": "3294000"
  },
  {
    "text": "exactly um there there's another possibility you could actually have a kernel space uh uh driver up there just",
    "start": "3294079",
    "end": "3300680"
  },
  {
    "text": "kind of doing basically virus scanning in the kernel memory looking for the root kit and have it based in the kernel so hopefully it hasn't been patched it",
    "start": "3300680",
    "end": "3307079"
  },
  {
    "text": "can look at the um the system call table to make sure it hasn't been patched or modified you can",
    "start": "3307079",
    "end": "3313520"
  },
  {
    "text": "look at the interrupt table to make sure it's still good and all of a sudden we're talking about the whole virus industry all over again is this is",
    "start": "3313520",
    "end": "3319240"
  },
  {
    "text": "exactly all the same tricks that the old virus scanners used to work for work in and Doss used do all all these tricks",
    "start": "3319240",
    "end": "3324520"
  },
  {
    "text": "and you know of course if we're signature-based scanning we're going to have all the same problems that we've always had with polymorphic viruses and self- modifying code and all that crazy",
    "start": "3324520",
    "end": "3331039"
  },
  {
    "text": "stuff so it you know it it's a hard problem to solve uh you could go to the level of",
    "start": "3331039",
    "end": "3337559"
  },
  {
    "text": "just scanning physical memory from user mode uh and hope that the root kit that's on there doesn't you know the one",
    "start": "3337559",
    "end": "3342839"
  },
  {
    "text": "we deploy doesn't do this but hopefully the one that's if it's there it doesn't have some sort of patch on",
    "start": "3342839",
    "end": "3348400"
  },
  {
    "text": "that um it course a kit and monitor itself to see if you're trying to read it um it can watch the CIS call tables",
    "start": "3348400",
    "end": "3354760"
  },
  {
    "start": "3353000",
    "end": "3353000"
  },
  {
    "text": "you can you can watch the CST call tables to see if they've been modified um alter alter memory page",
    "start": "3354760",
    "end": "3360640"
  },
  {
    "text": "permissions and Etc to make sure you're not going to get modified you could go and look at all",
    "start": "3360640",
    "end": "3366039"
  },
  {
    "text": "the major all the loaded modules and their import export tables and make sure those haven't been",
    "start": "3366039",
    "end": "3371720"
  },
  {
    "text": "patched I'm going to show you the rootkit now um and some of the features that we",
    "start": "3371720",
    "end": "3378680"
  },
  {
    "text": "have all these protection things that I just mentioned are just just stuff I'm think thinking of you know it's it's not",
    "start": "3380319",
    "end": "3386319"
  },
  {
    "text": "something that we have a tool that can stop it um I do think that the Integrity protection driver is probably you know",
    "start": "3386319",
    "end": "3391960"
  },
  {
    "text": "an interesting way to try to do it I also kind of think in my mind that any any sort of remote hack on an an box",
    "start": "3391960",
    "end": "3399200"
  },
  {
    "text": "is a root hack any anybody who gets in Via I user or I you know iwam or any of",
    "start": "3399200",
    "end": "3404960"
  },
  {
    "text": "those accounts is probably going to be able to elevate their privilege and get a rootkit onto the box so it's it is a",
    "start": "3404960",
    "end": "3410400"
  },
  {
    "text": "very serious threat on this screen screen over here",
    "start": "3410400",
    "end": "3415760"
  },
  {
    "text": "I've got um my C drive and I've got some files that start",
    "start": "3415760",
    "end": "3421520"
  },
  {
    "text": "with the letters underscore root uncore uh One Directory and two",
    "start": "3421520",
    "end": "3427319"
  },
  {
    "text": "files what I'm going to do is go ahead and start the rootkit on this machine",
    "start": "3427319",
    "end": "3433160"
  },
  {
    "text": "and then show you how it can hide these",
    "start": "3433160",
    "end": "3436760"
  },
  {
    "text": "files I have the rot kit installed as a normal driver so it's very simple to",
    "start": "3443640",
    "end": "3449160"
  },
  {
    "text": "start and stop okay the root kit is now running on this machine now the root kit has",
    "start": "3449160",
    "end": "3459038"
  },
  {
    "text": "a little kind of hacking tcpip stack so I'm going to go ahead and tell that to",
    "start": "3459240",
    "end": "3465760"
  },
  {
    "text": "it and I should get a prompt okay there's my little prompt up there you",
    "start": "3466319",
    "end": "3472119"
  },
  {
    "text": "see that okay so I'm I now have a kernel mode shell the rootkit has seen a packet",
    "start": "3472119",
    "end": "3479160"
  },
  {
    "text": "destined for the IP address that it's spoofing and it has responded to the TCP 3-way handshake and is now ready to",
    "start": "3479160",
    "end": "3486119"
  },
  {
    "text": "begin accepting commands from the remote user which is this laptop over here one of the commands I implemented right off",
    "start": "3486119",
    "end": "3492480"
  },
  {
    "text": "the bat was PS I just run a list of the running processes on the system the reason I did this is because it's a very",
    "start": "3492480",
    "end": "3498559"
  },
  {
    "text": "simple uh Native API call now remember anything that's happening here is happening completely in kernel mode",
    "start": "3498559",
    "end": "3504240"
  },
  {
    "text": "there is no use user mode component at all so PS to get the process list I",
    "start": "3504240",
    "end": "3510400"
  },
  {
    "text": "didn't use a win32 API call to do that what I used was an native API call",
    "start": "3510400",
    "end": "3515839"
  },
  {
    "text": "exported out of the kernel or ntdll um which queried system information to",
    "start": "3515839",
    "end": "3522280"
  },
  {
    "text": "get the list of running",
    "start": "3522280",
    "end": "3525119"
  },
  {
    "text": "processes type what oh I know where you're going with",
    "start": "3528000",
    "end": "3534280"
  },
  {
    "text": "that little a or big",
    "start": "3534280",
    "end": "3539559"
  },
  {
    "text": "a this machine has very little Ram so takes a while to",
    "start": "3542039",
    "end": "3547520"
  },
  {
    "text": "respond um is your goal to find a listening Port this is",
    "start": "3547520",
    "end": "3552720"
  },
  {
    "text": "interesting the machine which has the root kit infected has no listening ports for the root kit it doesn't matter if I",
    "start": "3552720",
    "end": "3559440"
  },
  {
    "text": "tnet or I netcat or whatever because the rot kit doesn't care about the destination support of the syn packet",
    "start": "3559440",
    "end": "3567319"
  },
  {
    "text": "that it receives it could have been for 666 it could have been for 10,000 it could have been for you know 65555",
    "start": "3567319",
    "end": "3574640"
  },
  {
    "text": "whatever um because it doesn't actually look at that field so if multiple people",
    "start": "3574640",
    "end": "3579680"
  },
  {
    "text": "were attempting to tell it to this at the same time multiple ports whatever it would actually get pretty funny looking real quick it only can support one",
    "start": "3579680",
    "end": "3586359"
  },
  {
    "text": "connected user at a time really reliably in the lab we've done multiple",
    "start": "3586359",
    "end": "3591480"
  },
  {
    "text": "users and it's kind of half worked the other screen get gets the results from my query etc",
    "start": "3591480",
    "end": "3597559"
  },
  {
    "text": "etc um the system used to determine whether or not I want to respond from",
    "start": "3597559",
    "end": "3603039"
  },
  {
    "text": "the root kit is is the destination IP address in the packet uh the IP address",
    "start": "3603039",
    "end": "3609319"
  },
  {
    "text": "that I think I want to spoof in which case in this in this example is 10.0.0 166 obviously if I actually had a",
    "start": "3609319",
    "end": "3615960"
  },
  {
    "text": "machine on my network that was real that had that IP address we would have a small conflict between the r kit and the",
    "start": "3615960",
    "end": "3621079"
  },
  {
    "text": "other machine and frankly the other machine might win but might blue screen this box in the process of trying to win",
    "start": "3621079",
    "end": "3626960"
  },
  {
    "text": "I don't know um the series of events that occur are",
    "start": "3626960",
    "end": "3632000"
  },
  {
    "text": "um if I see an ARP request for 10.00.01 166 the rootkit will respond with a fake Mac address all further Communications",
    "start": "3632000",
    "end": "3638920"
  },
  {
    "text": "if they are destined for that fake Mac address are responded to that is the series of events so the triggering event",
    "start": "3638920",
    "end": "3644000"
  },
  {
    "text": "is the correct IP address and then once that is set the precedent is set via the MAC",
    "start": "3644000",
    "end": "3649480"
  },
  {
    "text": "address I can tell n to this box from anywhere on the internet it doesn't work only locally just because I'm using the",
    "start": "3649480",
    "end": "3655440"
  },
  {
    "text": "MAC address remember I fooled the router Upstream from the box if I've done this trick just as easily I fooled any other",
    "start": "3655440",
    "end": "3660720"
  },
  {
    "text": "machine so it would route me it has to be a routable IP obviously but it would route to this box and it would",
    "start": "3660720",
    "end": "3666960"
  },
  {
    "text": "GOC be able sense the differences in Mac addresses on the same IP address um",
    "start": "3669200",
    "end": "3675319"
  },
  {
    "text": "there's no multiple Macs per IP remember this is spoofing 10.0.0 166 trying to",
    "start": "3675319",
    "end": "3682440"
  },
  {
    "text": "you're trying to comp with an act that's on a sof oh yeah that would be highly abnormal traffic and it would definitely",
    "start": "3682440",
    "end": "3688400"
  },
  {
    "text": "tip you off if there's something wild going on um I don't remember the hard-coded MAC address for this for the",
    "start": "3688400",
    "end": "3694880"
  },
  {
    "text": "rot kit right now but if you see it going over your network you better start weing I'm getting worried uh I think it starts with Kaka",
    "start": "3694880",
    "end": "3702680"
  },
  {
    "text": "caca um so okay so I was actually going to show you",
    "start": "3705119",
    "end": "3710720"
  },
  {
    "text": "um I've got the shell running over here um so I'm going to going to go in and I have a Little Help",
    "start": "3711039",
    "end": "3718000"
  },
  {
    "text": "menu um and I want to hide processes hide now keep in mind when I do this I'm",
    "start": "3718359",
    "end": "3725960"
  },
  {
    "text": "going to patch ZW cery instr information the rootkit will do this and begin to snip those entries like I showed you in",
    "start": "3725960",
    "end": "3732160"
  },
  {
    "text": "the slides for any sort of directory query now watch over on the screen we have underscore root underscore uh test",
    "start": "3732160",
    "end": "3738680"
  },
  {
    "text": "and a couple of files that are named that way okay so oh",
    "start": "3738680",
    "end": "3745680"
  },
  {
    "text": "it was already on by default so I guess I just have to refresh the screen oh where' they go they're gone",
    "start": "3745680",
    "end": "3754319"
  },
  {
    "text": "now I'll turn it off and show it to you again now I'll process uh prefix hiding is now off and I'll refresh again",
    "start": "3754319",
    "end": "3764000"
  },
  {
    "text": "oops that should have come they should have came back this was working this morning I'm sorry say",
    "start": "3764640",
    "end": "3773200"
  },
  {
    "text": "again just by guessing the directory name if you knew the directory name and uh precisely uh you would use an open",
    "start": "3773359",
    "end": "3780599"
  },
  {
    "text": "call perhaps to get to it and that's not patched in this way so you would actually be able to open it remember this is only changing the um response to",
    "start": "3780599",
    "end": "3787160"
  },
  {
    "text": "a directory query you",
    "start": "3787160",
    "end": "3790640"
  },
  {
    "text": "know uh I don't think it would",
    "start": "3794160",
    "end": "3799880"
  },
  {
    "text": "actually okay so the same trick I'm sniffing uh ALS applies to processes so",
    "start": "3800319",
    "end": "3805920"
  },
  {
    "text": "I'm going to show you that now have you messed with the timal data streams with this uh certainly you could it's not",
    "start": "3805920",
    "end": "3813359"
  },
  {
    "text": "it's not doing that now but um these are NTFS data structures you have complete access to those in fact in the G Net's",
    "start": "3813359",
    "end": "3819760"
  },
  {
    "text": "book there's a complete chapter on NTFS on dis structures you could get very low level with it if you wanted",
    "start": "3819760",
    "end": "3825359"
  },
  {
    "text": "to and the card has to be promiscuous uh it would have to yes have",
    "start": "3825359",
    "end": "3831880"
  },
  {
    "text": "to be promiscuous mode to to get the T net session up to",
    "start": "3831880",
    "end": "3836720"
  },
  {
    "text": "it I haven't tried anti sniff against you to see if it detects it it",
    "start": "3839839",
    "end": "3846440"
  },
  {
    "text": "might we don't do any sort of D ask",
    "start": "3851599",
    "end": "3855839"
  },
  {
    "text": "queries so let me get a task man up",
    "start": "3857119",
    "end": "3861519"
  },
  {
    "text": "here",
    "start": "3863200",
    "end": "3866200"
  },
  {
    "text": "okay now notice I have a process running here um I just renamed CMD toore roore",
    "start": "3873599",
    "end": "3881119"
  },
  {
    "text": "CMD so that it will match the profile and uh I'll go ahead and start the rot kit",
    "start": "3881119",
    "end": "3888000"
  },
  {
    "text": "again oh oh by the way just to show you task manager shows shows it there",
    "start": "3888319",
    "end": "3895240"
  },
  {
    "text": "okay so let me get the",
    "start": "3895240",
    "end": "3898720"
  },
  {
    "text": "going go back to the window oh it's gone",
    "start": "3902400",
    "end": "3909720"
  },
  {
    "text": "um uh you mean my uh my interactive session the desktop is as",
    "start": "3910760",
    "end": "3917599"
  },
  {
    "text": "administrator is that what you okay",
    "start": "3917599",
    "end": "3923079"
  },
  {
    "text": "us a normal user wouldn't be able to type like net start and net stop I don't",
    "start": "3923079",
    "end": "3929200"
  },
  {
    "text": "believe yeah okay so uh we're hiding",
    "start": "3929200",
    "end": "3934318"
  },
  {
    "text": "processes oh yes okay root kit uh root command is",
    "start": "3935039",
    "end": "3942880"
  },
  {
    "text": "back because I turned off process prefix hiding hide proc uh shoot hide proc I'll",
    "start": "3942880",
    "end": "3949520"
  },
  {
    "text": "turn it back on and itop disappears so it's very simple uh what",
    "start": "3949520",
    "end": "3954839"
  },
  {
    "text": "it's doing it's just snipping and of course that fools task manager and would fool almost any other program that uses",
    "start": "3954839",
    "end": "3960039"
  },
  {
    "text": "the standard way of determining the list of running processes the memory us didn't change does it actually go",
    "start": "3960039",
    "end": "3965960"
  },
  {
    "text": "through count those things the memory usage column uh",
    "start": "3965960",
    "end": "3973520"
  },
  {
    "text": "that's I'm sorry I don't know where oh memory usage oh yes uh that may reflect the loaded module remember we're just",
    "start": "3974200",
    "end": "3980559"
  },
  {
    "text": "snipping the entry so that the list that appears here um subverted but we haven't we haven't",
    "start": "3980559",
    "end": "3986559"
  },
  {
    "text": "snipped like all the other performance counters that might indicate the existence of threads and things like that yes sir you're process was doing",
    "start": "3986559",
    "end": "3993200"
  },
  {
    "text": "something that used 40% of the CPU it would still appear as 40% of the CPU the question was would if the root kit",
    "start": "3993200",
    "end": "3998880"
  },
  {
    "text": "started an infinite Loop and started like just chewing the machine apart of course that would be obvious the machine would be chewing uh you would be able to",
    "start": "3998880",
    "end": "4005039"
  },
  {
    "text": "see it in the performance counters everything else you could make the rot kit patch all that data but you realize that's going to be a lot of work because",
    "start": "4005039",
    "end": "4010960"
  },
  {
    "text": "then we've got to make the rot kit go to like you know 30 different places and do 30 different things so basically the Su",
    "start": "4010960",
    "end": "4017119"
  },
  {
    "text": "ofp us may not be 100 the is",
    "start": "4017119",
    "end": "4023640"
  },
  {
    "text": "running uh I would no what I'm I think this particular calculation CPU usage",
    "start": "4025000",
    "end": "4031559"
  },
  {
    "text": "along the bottom uh or in the performance tab now this I'm speculating because I have not reversed engineered",
    "start": "4031559",
    "end": "4037799"
  },
  {
    "text": "uh task man to know how it does but I'm just thinking out loud this maybe uh is calculated from the uh either a",
    "start": "4037799",
    "end": "4045240"
  },
  {
    "text": "performance counter in which case it would reflect the rot kit or it may be uh calculated based upon the return data",
    "start": "4045240",
    "end": "4052160"
  },
  {
    "text": "in the process structures in which case if that's calculated it would be missing the r kit data that",
    "start": "4052160",
    "end": "4058760"
  },
  {
    "text": "wouldent of structuresa here that",
    "start": "4067720",
    "end": "4072920"
  },
  {
    "text": "get",
    "start": "4072920",
    "end": "4075920"
  },
  {
    "text": "so 1 2 3 yes",
    "start": "4079000",
    "end": "4085920"
  },
  {
    "text": "um yeah one of the areas the question was if you're snipping stuff out can you detect it as being snipped because you",
    "start": "4085920",
    "end": "4092480"
  },
  {
    "text": "know it goes one two four and where did three go um I think that there's some probably a lot of examples where that",
    "start": "4092480",
    "end": "4098679"
  },
  {
    "text": "would probably be the case I'm trying to think uh that the registry queries might be one of those areas is and if I start",
    "start": "4098679",
    "end": "4104480"
  },
  {
    "text": "snipping registry entries out of the return data it would uh because they're index you reference them by index and uh",
    "start": "4104480",
    "end": "4111080"
  },
  {
    "text": "so yeah that might be quite obvious um I have some more little",
    "start": "4111080",
    "end": "4116719"
  },
  {
    "text": "demos uh so that's hiding processes in directories let's show you the keyboard",
    "start": "4116719",
    "end": "4123719"
  },
  {
    "text": "sniffer um again that goes to the device objects that I showed you what it's going to do is bind to the keyboard",
    "start": "4123719",
    "end": "4129199"
  },
  {
    "text": "based class driver keyboard class zero I think it's what it's called um it'll bind to that and and it will now begin",
    "start": "4129199",
    "end": "4134640"
  },
  {
    "text": "intercepting all keystrokes and then um we I'll just go and print them on the",
    "start": "4134640",
    "end": "4140080"
  },
  {
    "text": "screen in our little uh shell here so they can see them is this the keyboard C file your uh the file that contains this",
    "start": "4140080",
    "end": "4147640"
  },
  {
    "text": "code would be rkor keyboard. C and RK keyboard uh",
    "start": "4147640",
    "end": "4155199"
  },
  {
    "text": "H by the way uh I don't I didn't mention this and I probably made the assumption that it was obvious but it's not you",
    "start": "4155199",
    "end": "4161440"
  },
  {
    "text": "can't compile the root kit unless you have the windows ddk um the rot kit will compile on both the Windows NT ddk",
    "start": "4161440",
    "end": "4168560"
  },
  {
    "text": "version 4.0 for NT 4.0 and the Windows 2000 ddk um I just received some changes",
    "start": "4168560",
    "end": "4174199"
  },
  {
    "text": "from one of the Rook kit developers um making some changes to the way uh the",
    "start": "4174199",
    "end": "4180040"
  },
  {
    "text": "the sources file looked and some other things for the r2k or for the wind 2K um ddk um so those will be released on the",
    "start": "4180040",
    "end": "4186758"
  },
  {
    "text": "site um also it is version specific the rot kit will work on both wind 2K and",
    "start": "4186759",
    "end": "4192199"
  },
  {
    "text": "windows int 4.0 but the way we patch the calls is a little different for each one because the system call numbers all",
    "start": "4192199",
    "end": "4198440"
  },
  {
    "text": "changed for version for for each Service Pack etc etc so there is some operating specific checking in the rot kit the",
    "start": "4198440",
    "end": "4204760"
  },
  {
    "text": "moment it starts to determine what it needs to do um so again it probably hasn't been tested on every single",
    "start": "4204760",
    "end": "4210080"
  },
  {
    "text": "version and Service Pack and I have blue screened some boxes by putting it on something that hadn't been tested so um",
    "start": "4210080",
    "end": "4216640"
  },
  {
    "text": "I do know that it works on win2k Service Pack 1 and NT 4.0 Service Pack",
    "start": "4216640",
    "end": "4222239"
  },
  {
    "text": "3 uh what was was I going to do oh yes key strokes so I believe all I have to do is",
    "start": "4222239",
    "end": "4227400"
  },
  {
    "text": "type sniff keys and the sniffer on and unfortunately at the bottom of the",
    "start": "4227400",
    "end": "4232560"
  },
  {
    "text": "screen here so let me get it up now if I start typing I should see",
    "start": "4232560",
    "end": "4239600"
  },
  {
    "text": "these reboot",
    "start": "4240719",
    "end": "4244199"
  },
  {
    "text": "what oh yeah sure um the key sniffer that that would",
    "start": "4247360",
    "end": "4253760"
  },
  {
    "text": "be hard to do yeah actually that would work you could because the r Kit's active you could get the key snipper running prior to the log on",
    "start": "4253760",
    "end": "4260320"
  },
  {
    "text": "right you should be a yeah but these are actually my machines and you get my",
    "start": "4260320",
    "end": "4265800"
  },
  {
    "text": "actual admin password and I don't want you to do that so con right",
    "start": "4265800",
    "end": "4273040"
  },
  {
    "text": "there okay we'll do that actually let me go through all the things and then we'll try to set up that test that's kind of",
    "start": "4273040",
    "end": "4278280"
  },
  {
    "text": "cool um okay so obviously the key sniffing is running there and then I hit a key and it's key is back",
    "start": "4278280",
    "end": "4285719"
  },
  {
    "text": "off now this is the new stuff that's not released yet on the website but one of",
    "start": "4285719",
    "end": "4292840"
  },
  {
    "text": "our Ruka developers just delivered me some code uh yesterday that enables the execution of any process any win32",
    "start": "4292840",
    "end": "4299560"
  },
  {
    "text": "process from kernel mode and this is very cool so I'm trying to remember exactly",
    "start": "4299560",
    "end": "4305679"
  },
  {
    "text": "how to type this because it is uh using the um object manager to find the",
    "start": "4305679",
    "end": "4312080"
  },
  {
    "text": "particular thing is trying to run so try this and this isn't very well tested so",
    "start": "4312080",
    "end": "4319520"
  },
  {
    "text": "if it blue screens it's not my fault so let me just see if I can spawn",
    "start": "4319520",
    "end": "4325480"
  },
  {
    "text": "another copy of CMD so it would be exec and then the full qualified path you via object",
    "start": "4325480",
    "end": "4332080"
  },
  {
    "text": "manager style it should",
    "start": "4332080",
    "end": "4338360"
  },
  {
    "text": "okay now that's non-trivial when you see the source code that makes this work",
    "start": "4340280",
    "end": "4345360"
  },
  {
    "text": "your head's going to split it's very very difficult to do and",
    "start": "4345360",
    "end": "4350719"
  },
  {
    "text": "I can tell you it involved reverse engineering local procedure calls to csrss and among all kinds of other weird",
    "start": "4350719",
    "end": "4357600"
  },
  {
    "text": "tricks to steel or parasite environments from other processes that we're currently running to get this one to",
    "start": "4357600",
    "end": "4363440"
  },
  {
    "text": "boot properly so what does that what's that what does",
    "start": "4363440",
    "end": "4368840"
  },
  {
    "text": "that um it would depend on the I think it would I think it would I don't know I",
    "start": "4368840",
    "end": "4374440"
  },
  {
    "text": "could just run it again and look process as well yeah it's probably running as in Authority system but it",
    "start": "4374440",
    "end": "4381520"
  },
  {
    "text": "may have been parasited from some lowly user land process I don't know how it was initialized to be perfectly honest",
    "start": "4381520",
    "end": "4387239"
  },
  {
    "text": "because I did not write this code it was another developer on the RIT team so let me just I'm as curious as",
    "start": "4387239",
    "end": "4393960"
  },
  {
    "text": "you are actually so let's run it and",
    "start": "4393960",
    "end": "4398198"
  },
  {
    "text": "see uh it would uh that's a very good",
    "start": "4402360",
    "end": "4408000"
  },
  {
    "text": "question I can speculate I'm only speculating though because I've never tried it so it might end up on a desktop uh you know how you have you know if you",
    "start": "4408000",
    "end": "4414719"
  },
  {
    "text": "remember the windows desktops how you have the different Windows stations it might end up on the Windows station that",
    "start": "4414719",
    "end": "4419840"
  },
  {
    "text": "wind log on sitting on it might I don't know just pop up",
    "start": "4419840",
    "end": "4425120"
  },
  {
    "text": "there uh yeah I don't have the oh shoot",
    "start": "4428400",
    "end": "4434560"
  },
  {
    "text": "I don't think I have the little uh process dump routine that tells me the owner of the process on this box does",
    "start": "4434560",
    "end": "4440960"
  },
  {
    "text": "anybody know how to do that without having like an extra tool that I don't does who am I",
    "start": "4440960",
    "end": "4448360"
  },
  {
    "text": "work who am I yeah how I always do it is I use Mark",
    "start": "4449159",
    "end": "4455520"
  },
  {
    "text": "Ric's tool from CIS internals to dump the owner of the process that's how I've always done it so I don't know any other way to do it so if someone knows feel",
    "start": "4455520",
    "end": "4462080"
  },
  {
    "text": "free to tell me because I'd like to know not not on this laptop",
    "start": "4462080",
    "end": "4468840"
  },
  {
    "text": "unfortunately who is the",
    "start": "4492280",
    "end": "4497080"
  },
  {
    "text": "owner",
    "start": "4502080",
    "end": "4505080"
  },
  {
    "text": "Jesus so we don't know whether it's your process or",
    "start": "4508400",
    "end": "4513800"
  },
  {
    "text": "whether I believe it did actually I'm I was introduced to the code very recently so um I do know that it parasites the",
    "start": "4515960",
    "end": "4522719"
  },
  {
    "text": "environment for the process it's going to create from another one so it must have just grabbed an administrator one it's I'm again only speculating I don't",
    "start": "4522719",
    "end": "4528320"
  },
  {
    "text": "know for sure so um but you know we'll figure all that out this is going to be released very shortly it just needs to",
    "start": "4528320",
    "end": "4534080"
  },
  {
    "text": "be make sure I need to go through it and make sure it doesn't you know blue screen everything so because it's all",
    "start": "4534080",
    "end": "4540320"
  },
  {
    "text": "very new um so let's actually do something a little bit more exciting let's create a file uh actually on the",
    "start": "4540320",
    "end": "4546639"
  },
  {
    "text": "hard drive using cmd.exe again but let's actually pass some parameters to it",
    "start": "4546639",
    "end": "4555199"
  },
  {
    "text": "I don't know where it'll end up but we'll see I have no idea where that went let",
    "start": "4574440",
    "end": "4581000"
  },
  {
    "text": "me try it one more time",
    "start": "4581000",
    "end": "4585120"
  },
  {
    "text": "Sy yeah probably that's you're probably right but since I got this window open I'll just do this",
    "start": "4598920",
    "end": "4605239"
  },
  {
    "text": "again uh oh come back oh hello there's the file so clearly I could use that",
    "start": "4606360",
    "end": "4611639"
  },
  {
    "text": "trick to spawn anything on the system in like FTP or something and grab another file not that I'd need to now that I",
    "start": "4611639",
    "end": "4617080"
  },
  {
    "text": "have the root kit on there um one of the things that we are working on and will be released is we're attempting to bind",
    "start": "4617080",
    "end": "4622239"
  },
  {
    "text": "the standard in standard out handles of this process to the rot kit shell so you actually could get the command shell and",
    "start": "4622239",
    "end": "4627639"
  },
  {
    "text": "you'd have a c prompt and then you could Escape out of that control to year whatever and You' be back at the r kit prompt that's one of the things we're",
    "start": "4627639",
    "end": "4632920"
  },
  {
    "text": "trying to make work again it's a non-trivial problem to solve effectively so wait and see attitude on",
    "start": "4632920",
    "end": "4639719"
  },
  {
    "text": "that um I think that's all the cool stuff now um oh wait one more thing uh",
    "start": "4639719",
    "end": "4644760"
  },
  {
    "text": "execute redirection I need to show you this because this is um very",
    "start": "4644760",
    "end": "4649840"
  },
  {
    "text": "important encryption is one of the things that one of the other Rook kit developers is trying to work on it's a blowfish encryption and we actually have",
    "start": "4653040",
    "end": "4659920"
  },
  {
    "text": "the code it's just not integrated into the root kit it's like a separate file that's never been plugged in so the code is there it's just a matter of",
    "start": "4659920",
    "end": "4666840"
  },
  {
    "text": "time to uh the the deal is to try to encrypt the session to the root kit so",
    "start": "4666840",
    "end": "4671880"
  },
  {
    "text": "that if you can't just sniff the the guy typing away um let's see to make the execute",
    "start": "4671880",
    "end": "4677880"
  },
  {
    "text": "redirection work I've got to oh yes this is very important let me",
    "start": "4677880",
    "end": "4684520"
  },
  {
    "text": "show you this this is cool here let me stop the root kit for a moment this is before execute",
    "start": "4684520",
    "end": "4690000"
  },
  {
    "text": "redirection um the stealth that the rootkit applies",
    "start": "4690000",
    "end": "4696480"
  },
  {
    "text": "does not apply to processes that start with underscore root underscore so let me start taskman a special version of",
    "start": "4696480",
    "end": "4701920"
  },
  {
    "text": "taskman it starts with underscore roore come on so there it is see the special",
    "start": "4701920",
    "end": "4707560"
  },
  {
    "text": "task man got to kill the original one so go away",
    "start": "4707560",
    "end": "4712679"
  },
  {
    "text": "okay uh so I have root task man now and that's actually the one we're in so this is actually a different copy of it but",
    "start": "4712679",
    "end": "4718000"
  },
  {
    "text": "it's just named differently and then I'll go back and start the rootkit and hide the processes",
    "start": "4718000",
    "end": "4723960"
  },
  {
    "text": "again and VOA does not apply to this window because",
    "start": "4728600",
    "end": "4734040"
  },
  {
    "text": "it starts with underscore root underscore so that there's an exception applied to processes that have this prefix and the same would apply to um",
    "start": "4734040",
    "end": "4742440"
  },
  {
    "text": "like this command window down here that starts with underscore root command notice how Explorer if I do a refresh",
    "start": "4742440",
    "end": "4750040"
  },
  {
    "text": "should yeah see all the little entries are gone now like the directory but the",
    "start": "4750040",
    "end": "4755239"
  },
  {
    "text": "rotor command should still be able to see them look for any anything that starts if the process is named that it",
    "start": "4755239",
    "end": "4761840"
  },
  {
    "text": "does not apply to stealth so here you can see that um in the root command window I can see root command root",
    "start": "4761840",
    "end": "4767400"
  },
  {
    "text": "taskman and the directory root test but in the Explorer window I cannot because the Explorer window of course doesn't",
    "start": "4767400",
    "end": "4773159"
  },
  {
    "text": "start with well does that mean that if I suspect KS on there I copy if you suspect someone has copied our code",
    "start": "4773159",
    "end": "4779440"
  },
  {
    "text": "directly off the website and done nothing to it and installed it yes you could probably use this trick that's a dangerous",
    "start": "4779440",
    "end": "4786840"
  },
  {
    "text": "assumption um so execute redirection is very simple uh see I'm running the root kit",
    "start": "4791400",
    "end": "4797600"
  },
  {
    "text": "right now if I run it's all hardcoded this is not controllable from the from",
    "start": "4797600",
    "end": "4803320"
  },
  {
    "text": "the shell if you try to run a program when the root kit is running and the program you're trying to run or starts",
    "start": "4803320",
    "end": "4810199"
  },
  {
    "text": "with underscore root underscore remember I had these two running before I started the root kit so they're exam they're",
    "start": "4810199",
    "end": "4815840"
  },
  {
    "text": "already running but now that I've got the rot kit running it'll apply the execute redirection and so if I just go",
    "start": "4815840",
    "end": "4821239"
  },
  {
    "text": "ahead and try to start up another Comm shell it",
    "start": "4821239",
    "end": "4826679"
  },
  {
    "text": "should oh where am I oh I'm in the wrong hold",
    "start": "4826679",
    "end": "4833760"
  },
  {
    "text": "on calculator oh that's very strange I thought that was the root command so execute redirection um if I open the",
    "start": "4837880",
    "end": "4845920"
  },
  {
    "text": "file to analyze it in an Integrity Assessment program I see the command shell program but when I run it I get",
    "start": "4845920",
    "end": "4852159"
  },
  {
    "text": "something complet completely different if that's an f file you still get yeah",
    "start": "4852159",
    "end": "4858040"
  },
  {
    "text": "what happens is the root kit opens up and Maps into memory the PE for",
    "start": "4858040",
    "end": "4863120"
  },
  {
    "text": "calculator and holds it there and waits until it sees an actual execute for the",
    "start": "4863120",
    "end": "4868960"
  },
  {
    "text": "one the Trojan file and it swaps the file handle it's literally four bytes swapped right before the call and it",
    "start": "4868960",
    "end": "4874760"
  },
  {
    "text": "actually executes this one instead the handle to the image the mapped image for the create process",
    "start": "4874760",
    "end": "4881639"
  },
  {
    "text": "call so that's execute redirection now let's try that trick you you wanted to do um so once again I want to leave the",
    "start": "4881639",
    "end": "4888320"
  },
  {
    "text": "root kit running log off and log back in okay yeah I haven't tried this so it",
    "start": "4888320",
    "end": "4895639"
  },
  {
    "text": "would be very interesting if it work I got to get this key sniffer running so let's see if this",
    "start": "4895639",
    "end": "4901840"
  },
  {
    "text": "happens how this en I told you a different rot kid",
    "start": "4901840",
    "end": "4908480"
  },
  {
    "text": "developer gave me that code I don't know exactly what happens um you can't create the you have to create",
    "start": "4908480",
    "end": "4915120"
  },
  {
    "text": "the environment from scratch to launch the process and there's information which is specific to the uh running",
    "start": "4915120",
    "end": "4920400"
  },
  {
    "text": "environment which you need to I mean the best way to get it is just get it from another process that's already running",
    "start": "4920400",
    "end": "4925719"
  },
  {
    "text": "so uh the trick as far as I've been looking at the source code so far is that um state is set in the root kit to",
    "start": "4925719",
    "end": "4934320"
  },
  {
    "text": "say hey wait we want to launch something but we need to have a real process to parasite from you can't do that from the",
    "start": "4934320",
    "end": "4940080"
  },
  {
    "text": "system process or from kernel mode you have to wait till I user mode process is in context so you can grab it well that",
    "start": "4940080",
    "end": "4946000"
  },
  {
    "text": "kind of poses a problem so what we're doing right now is we patched the ZW",
    "start": "4946000",
    "end": "4951840"
  },
  {
    "text": "close uh API call and it just sits there and waits until it gets a good user process and if it has that state set",
    "start": "4951840",
    "end": "4957880"
  },
  {
    "text": "that thing says hey do this for me it grabs it in the ZW close because that's in the context it's in passive level",
    "start": "4957880",
    "end": "4963000"
  },
  {
    "text": "grabs the environment copies it over and shoots it off so it could be made to run with some",
    "start": "4963000",
    "end": "4968320"
  },
  {
    "text": "with some process run it probably could uh it's a it's a very hard that's a very",
    "start": "4968320",
    "end": "4974320"
  },
  {
    "text": "hard thing to make work so and I don't you're if you get really technical with me I'm going to fall because I don't",
    "start": "4974320",
    "end": "4979800"
  },
  {
    "text": "understand all the things that are going on in this particular trick why it simply simulate code to create process I",
    "start": "4979800",
    "end": "4986040"
  },
  {
    "text": "tried all of that actually I hack need so much code in there to try to get a process to create and I couldn't get it",
    "start": "4986040",
    "end": "4991280"
  },
  {
    "text": "to start I could create the process um I could create the thread but I couldn't",
    "start": "4991280",
    "end": "4996600"
  },
  {
    "text": "get the thread to start and uh it all came down eventually to actually forging",
    "start": "4996600",
    "end": "5001920"
  },
  {
    "text": "an LPC packet to the csrss subsystem to tell hey look this is real make it go now um and I just kind of put it on hold",
    "start": "5001920",
    "end": "5010159"
  },
  {
    "text": "and fortunately we had another developer who picked up the the workload later and uh frankly he's he's a lot better at the",
    "start": "5010159",
    "end": "5017080"
  },
  {
    "text": "colonel than I am so he set me straight and said hey look what I did and I was just amazed I was like wow so when we",
    "start": "5017080",
    "end": "5022600"
  },
  {
    "text": "bind the handles uh that's even going to be much more powerful uh binding the standard in standard output to the Shell",
    "start": "5022600",
    "end": "5028600"
  },
  {
    "text": "itself and then you've got a very serious uh Power because you have command you can just do whatever command I'll let you do um so yes",
    "start": "5028600",
    "end": "5037638"
  },
  {
    "text": "uh oh I'm still logged in I believe I won't lose the login even if I log out over here so I'll just is that just",
    "start": "5038080",
    "end": "5043440"
  },
  {
    "text": "based on session the system reboots does it know that it's still uh the root kit doesn't know",
    "start": "5043440",
    "end": "5049520"
  },
  {
    "text": "somebody's logged in it's just got a kernel patch so it should still keep going just",
    "start": "5049520",
    "end": "5055719"
  },
  {
    "text": "fine it is I'm getting the response you sto see look PS it's still working it's",
    "start": "5058400",
    "end": "5065719"
  },
  {
    "text": "loaded I stopped it so I could get the root command XE up without the XE redirection getting in my way and then I",
    "start": "5065719",
    "end": "5070880"
  },
  {
    "text": "restarted it immediately afterwards so you must have just missed that part it is running right now the rot kit is",
    "start": "5070880",
    "end": "5076920"
  },
  {
    "text": "active I can turn it on and off it will so I can I can log off then turn it",
    "start": "5076920",
    "end": "5082280"
  },
  {
    "text": "on and then we start",
    "start": "5082280",
    "end": "5086158"
  },
  {
    "text": "okay let's just re on",
    "start": "5087800",
    "end": "5094360"
  },
  {
    "text": "this is all very exciting I haven't tried this",
    "start": "5097600",
    "end": "5101000"
  },
  {
    "text": "yet I should still have my session up here so when you do the key snip you",
    "start": "5104320",
    "end": "5109400"
  },
  {
    "text": "only see the what's under the keyboard you don't see any like clicks and so on",
    "start": "5109400",
    "end": "5114960"
  },
  {
    "text": "uh no although getting uh the question was do you see any of the mouse movement or any the other things with the keyboard uh Sni sniffer and the answer",
    "start": "5114960",
    "end": "5121639"
  },
  {
    "text": "is no because the keyboard sniffer has hooked the keyboard device object to sniff uh clicks on the mouse you would",
    "start": "5121639",
    "end": "5127280"
  },
  {
    "text": "have to hook the sniffer or excuse me hook the device object for the for the mouse control all delete you remove that",
    "start": "5127280",
    "end": "5135280"
  },
  {
    "text": "did I miss that uh no I didn't actually no this is my default log on for this M",
    "start": "5135280",
    "end": "5141040"
  },
  {
    "text": "for this box no wait no I guess I did I must have there had to be in a",
    "start": "5141040",
    "end": "5146800"
  },
  {
    "text": "secure attention sequence in there somewhere you can have that so is is",
    "start": "5146800",
    "end": "5152320"
  },
  {
    "text": "that a registry entry Cory thanks so it must be set that way okay so I did not do the secure attention um so let me",
    "start": "5152320",
    "end": "5159800"
  },
  {
    "text": "just type blah in here oh sniff Keys yes okay let me just see if I",
    "start": "5159800",
    "end": "5166119"
  },
  {
    "text": "can yep sure",
    "start": "5166119",
    "end": "5170040"
  },
  {
    "text": "enough that that's it that's the root kit uh the control delete I'll type it",
    "start": "5175840",
    "end": "5183520"
  },
  {
    "text": "and listening what comes out but um keep in mind I'm not capturing a g or a k or an F I'm capturing scan codes and I have",
    "start": "5183520",
    "end": "5190800"
  },
  {
    "text": "a little table in there that's converting them and rest assured control alt and delete are not being converted to a displayable",
    "start": "5190800",
    "end": "5197880"
  },
  {
    "text": "character so let me go ahead and just yeah see when I hit control and ALT I just get this kind of space filler",
    "start": "5197880",
    "end": "5204800"
  },
  {
    "text": "character that you're seeing there and that would probably apply to delete as well there's a f",
    "start": "5204800",
    "end": "5211199"
  },
  {
    "text": "yeah so control it to",
    "start": "5211199",
    "end": "5215080"
  },
  {
    "text": "wait oh yes let's try that very cool let's try that",
    "start": "5217080",
    "end": "5222360"
  },
  {
    "text": "um",
    "start": "5222360",
    "end": "5225360"
  },
  {
    "text": "so yeah oh hope I didn't just munge",
    "start": "5231600",
    "end": "5237480"
  },
  {
    "text": "it oh I just put it in a very bad State oh okay we're",
    "start": "5241119",
    "end": "5248400"
  },
  {
    "text": "back okay let's try again",
    "start": "5248400",
    "end": "5254719"
  },
  {
    "text": "yes okay I need to drink of water sorry the pressure the",
    "start": "5257320",
    "end": "5264678"
  },
  {
    "text": "pressure let kind of a good QA test I guess here",
    "start": "5271119",
    "end": "5277600"
  },
  {
    "text": "okay let's try again next thing the back no it's forward slash right all the way across",
    "start": "5277600",
    "end": "5283239"
  },
  {
    "text": "or back slash all the way across okay thank",
    "start": "5283239",
    "end": "5286920"
  },
  {
    "text": "you see what happens that'd be so cool if it popped up",
    "start": "5297000",
    "end": "5304040"
  },
  {
    "text": "uh it did it did execute it's probably running too I just don't know where the",
    "start": "5304920",
    "end": "5311678"
  },
  {
    "text": "where I made the mistake of installing all the special Sony VIO drivers so every time I reboot it gives me like 10",
    "start": "5329840",
    "end": "5336400"
  },
  {
    "text": "errors so I'll have to get through",
    "start": "5336400",
    "end": "5340280"
  },
  {
    "text": "those oh yes that's what you the other one the other one I was like what are you talking about oh",
    "start": "5341840",
    "end": "5350239"
  },
  {
    "text": "thanks so it is running but question is where is the",
    "start": "5350800",
    "end": "5355678"
  },
  {
    "text": "window it's probably bound to like the the default window station but then I thought that would pop up on the main",
    "start": "5356000",
    "end": "5361679"
  },
  {
    "text": "window do you have teral do I have what terminal no",
    "start": "5361679",
    "end": "5369158"
  },
  {
    "text": "no yeah that's probably right I get control delete on this",
    "start": "5373600",
    "end": "5382040"
  },
  {
    "text": "one hold on it's got to go through its death throw",
    "start": "5382040",
    "end": "5386600"
  },
  {
    "text": "here there's food downstairs oh yeah food downstairs um I just wanted to mention",
    "start": "5390920",
    "end": "5398600"
  },
  {
    "text": "really quick also if you have the black hat CD the root kit source code is on that so you can just get busy tonight if",
    "start": "5398600",
    "end": "5405360"
  },
  {
    "text": "you want to play around on your laptop or whatever all right thank you",
    "start": "5405360",
    "end": "5413239"
  },
  {
    "text": "guys",
    "start": "5420840",
    "end": "5423840"
  },
  {
    "text": "e",
    "start": "5450840",
    "end": "5453840"
  },
  {
    "text": "e",
    "start": "5480760",
    "end": "5483760"
  },
  {
    "text": "e",
    "start": "5510760",
    "end": "5513760"
  },
  {
    "text": "e",
    "start": "5540679",
    "end": "5543679"
  }
]