[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "without any further ado I'd like to",
    "start": "0",
    "end": "1949"
  },
  {
    "text": "introduce the speakers for today we're",
    "start": "1949",
    "end": "6899"
  },
  {
    "text": "going to do monsters and middleboxes",
    "start": "6899",
    "end": "8610"
  },
  {
    "text": "I'm introducing Gabby and Luke from",
    "start": "8610",
    "end": "10620"
  },
  {
    "text": "CloudFlare so please give them a warm",
    "start": "10620",
    "end": "13080"
  },
  {
    "text": "welcome thank you thanks for the little",
    "start": "13080",
    "end": "23820"
  },
  {
    "text": "introduction and thank you to everyone",
    "start": "23820",
    "end": "25590"
  },
  {
    "text": "for sticking with us throughout the a/v",
    "start": "25590",
    "end": "27300"
  },
  {
    "text": "setup turns out it takes a lot of",
    "start": "27300",
    "end": "29099"
  },
  {
    "text": "engineers to make AV work and with that",
    "start": "29099",
    "end": "32910"
  },
  {
    "text": "let's get started so hi everyone thanks",
    "start": "32910",
    "end": "36090"
  },
  {
    "text": "for joining us today and we're excited",
    "start": "36090",
    "end": "38430"
  },
  {
    "text": "to share our work on detecting HTTP",
    "start": "38430",
    "end": "41219"
  },
  {
    "text": "interception and to show you the tools",
    "start": "41219",
    "end": "43230"
  },
  {
    "text": "that we've built to detect the monsters",
    "start": "43230",
    "end": "45149"
  },
  {
    "text": "in the middle we observe on cloud",
    "start": "45149",
    "end": "46680"
  },
  {
    "text": "players network so hi everybody I'm Rick",
    "start": "46680",
    "end": "50640"
  },
  {
    "start": "48000",
    "end": "544000"
  },
  {
    "text": "valensa I'm a recent PhD graduate from",
    "start": "50640",
    "end": "52980"
  },
  {
    "text": "the University of Pennsylvania and I'm",
    "start": "52980",
    "end": "54960"
  },
  {
    "text": "now a systems engineer on the cloud",
    "start": "54960",
    "end": "56760"
  },
  {
    "text": "player cryptography team and I'm Gabi",
    "start": "56760",
    "end": "59190"
  },
  {
    "text": "Fisher I'm a recent masters graduate",
    "start": "59190",
    "end": "61230"
  },
  {
    "text": "from Stanford University and I'm also",
    "start": "61230",
    "end": "63210"
  },
  {
    "text": "now systems engineer at CloudFlare on",
    "start": "63210",
    "end": "65040"
  },
  {
    "text": "the workers team so today's talk will",
    "start": "65040",
    "end": "69390"
  },
  {
    "text": "start with an overview of what HTTP",
    "start": "69390",
    "end": "71640"
  },
  {
    "text": "interception is in common sources of",
    "start": "71640",
    "end": "74100"
  },
  {
    "text": "monster in the middle activity next",
    "start": "74100",
    "end": "76740"
  },
  {
    "text": "we'll cover a technique that we use the",
    "start": "76740",
    "end": "78540"
  },
  {
    "text": "detect HTTP interception on inbound",
    "start": "78540",
    "end": "81210"
  },
  {
    "text": "traffic to cloud players network and",
    "start": "81210",
    "end": "83040"
  },
  {
    "text": "then we'll end our talk by sharing the",
    "start": "83040",
    "end": "85770"
  },
  {
    "text": "tools that we built to detect HTTP",
    "start": "85770",
    "end": "87960"
  },
  {
    "text": "interception and observe these",
    "start": "87960",
    "end": "89610"
  },
  {
    "text": "interception patterns on our global",
    "start": "89610",
    "end": "91530"
  },
  {
    "text": "network to make sure everyone is on the",
    "start": "91530",
    "end": "95369"
  },
  {
    "text": "same page let's quickly do an overview",
    "start": "95369",
    "end": "97200"
  },
  {
    "text": "of how a monster in the middle could",
    "start": "97200",
    "end": "99210"
  },
  {
    "text": "intercept HTTP traffic let's start with",
    "start": "99210",
    "end": "102270"
  },
  {
    "text": "the default case that a lot of us are",
    "start": "102270",
    "end": "103829"
  },
  {
    "text": "familiar with a normal HTTP connection",
    "start": "103829",
    "end": "106579"
  },
  {
    "text": "here a client first performs a TLS",
    "start": "106579",
    "end": "109380"
  },
  {
    "text": "handshake with a server negotiates a",
    "start": "109380",
    "end": "111450"
  },
  {
    "text": "shared symmetric key and then transmits",
    "start": "111450",
    "end": "113700"
  },
  {
    "text": "HTTP encrypted contents using the",
    "start": "113700",
    "end": "116729"
  },
  {
    "text": "symmetric key before the client performs",
    "start": "116729",
    "end": "119670"
  },
  {
    "text": "a TLS handshake",
    "start": "119670",
    "end": "120719"
  },
  {
    "text": "the server must prove its identity",
    "start": "120719",
    "end": "122430"
  },
  {
    "text": "through the client by presenting its",
    "start": "122430",
    "end": "124320"
  },
  {
    "text": "certificate which is issued using the",
    "start": "124320",
    "end": "127020"
  },
  {
    "text": "root certificate of a widely trusted",
    "start": "127020",
    "end": "128940"
  },
  {
    "text": "certificate authority",
    "start": "128940",
    "end": "132080"
  },
  {
    "text": "now let's see what happens when a TLS",
    "start": "132780",
    "end": "134880"
  },
  {
    "text": "connection between a client and a server",
    "start": "134880",
    "end": "136740"
  },
  {
    "text": "goes through a third party this third",
    "start": "136740",
    "end": "140400"
  },
  {
    "text": "party in the middle is either Hardware",
    "start": "140400",
    "end": "141930"
  },
  {
    "text": "called a middle box or software called",
    "start": "141930",
    "end": "144390"
  },
  {
    "text": "middleware it sits between the client",
    "start": "144390",
    "end": "146880"
  },
  {
    "text": "and the server proxying traffic between",
    "start": "146880",
    "end": "149250"
  },
  {
    "text": "a client and its intended destination in",
    "start": "149250",
    "end": "151380"
  },
  {
    "text": "this case example.com the middle box",
    "start": "151380",
    "end": "154709"
  },
  {
    "text": "cannot read encrypted HTTP traffic",
    "start": "154709",
    "end": "156870"
  },
  {
    "text": "between the clients and the server",
    "start": "156870",
    "end": "158520"
  },
  {
    "text": "since this traffic is encrypted with the",
    "start": "158520",
    "end": "160350"
  },
  {
    "text": "symmetric key that only the client and",
    "start": "160350",
    "end": "162450"
  },
  {
    "text": "server know because they are the only",
    "start": "162450",
    "end": "164040"
  },
  {
    "text": "two to have negotiated it during the TLS",
    "start": "164040",
    "end": "166230"
  },
  {
    "text": "handshake if someone wanted to set up a",
    "start": "166230",
    "end": "171570"
  },
  {
    "text": "middle box or middleware to intercept",
    "start": "171570",
    "end": "173610"
  },
  {
    "text": "HTTP traffic the following setup is",
    "start": "173610",
    "end": "176220"
  },
  {
    "text": "necessary first the middle box needs its",
    "start": "176220",
    "end": "179790"
  },
  {
    "text": "own root certificate so it can issue its",
    "start": "179790",
    "end": "181920"
  },
  {
    "text": "own certificates if the interceptor",
    "start": "181920",
    "end": "184560"
  },
  {
    "text": "wants to intercept traffic from the",
    "start": "184560",
    "end": "186030"
  },
  {
    "text": "client to the example.com server the",
    "start": "186030",
    "end": "188670"
  },
  {
    "text": "Interceptor can present its own issued",
    "start": "188670",
    "end": "190560"
  },
  {
    "text": "certificate for example.com and try to",
    "start": "190560",
    "end": "192900"
  },
  {
    "text": "trick the client into thinking that its",
    "start": "192900",
    "end": "195120"
  },
  {
    "text": "certificate corresponds to the real one",
    "start": "195120",
    "end": "197430"
  },
  {
    "text": "for example.com",
    "start": "197430",
    "end": "199549"
  },
  {
    "text": "the client would hypothetically perform",
    "start": "199549",
    "end": "201930"
  },
  {
    "text": "a TLS handshake with the Interceptor not",
    "start": "201930",
    "end": "204120"
  },
  {
    "text": "the end server such that the Interceptor",
    "start": "204120",
    "end": "206400"
  },
  {
    "text": "could negotiate a symmetric key with the",
    "start": "206400",
    "end": "208950"
  },
  {
    "text": "client and then be able to decrypt the",
    "start": "208950",
    "end": "210840"
  },
  {
    "text": "clients traffic this approach fails",
    "start": "210840",
    "end": "213269"
  },
  {
    "text": "however because the client will not",
    "start": "213269",
    "end": "214980"
  },
  {
    "text": "trust the interceptors root certificate",
    "start": "214980",
    "end": "216900"
  },
  {
    "text": "by default instead a client would likely",
    "start": "216900",
    "end": "220230"
  },
  {
    "text": "receive a warning which says that the",
    "start": "220230",
    "end": "222360"
  },
  {
    "text": "certificate that the middle box",
    "start": "222360",
    "end": "223530"
  },
  {
    "text": "presented was not issued by a trusted",
    "start": "223530",
    "end": "226079"
  },
  {
    "text": "root certificate like that of a",
    "start": "226079",
    "end": "227700"
  },
  {
    "text": "certificate authority to prevent this",
    "start": "227700",
    "end": "231930"
  },
  {
    "text": "morning from happening something seeking",
    "start": "231930",
    "end": "233940"
  },
  {
    "text": "to someone seeking to intercept HTTP",
    "start": "233940",
    "end": "236130"
  },
  {
    "text": "traffic must make the client trust the",
    "start": "236130",
    "end": "238680"
  },
  {
    "text": "interceptors root certificate this",
    "start": "238680",
    "end": "241260"
  },
  {
    "text": "practice of getting the clients a trust",
    "start": "241260",
    "end": "243480"
  },
  {
    "text": "and install the interceptors root",
    "start": "243480",
    "end": "245430"
  },
  {
    "text": "certificate is the crux of most HTTP",
    "start": "245430",
    "end": "248430"
  },
  {
    "text": "interception practices now the",
    "start": "248430",
    "end": "252329"
  },
  {
    "text": "interceptors self issued certificate for",
    "start": "252329",
    "end": "254310"
  },
  {
    "text": "example.com appears to be trustworthy",
    "start": "254310",
    "end": "256650"
  },
  {
    "text": "and the client will perform a TLS",
    "start": "256650",
    "end": "258810"
  },
  {
    "text": "handshake with the Interceptor meaning",
    "start": "258810",
    "end": "261090"
  },
  {
    "text": "that the Interceptor can decrypt the",
    "start": "261090",
    "end": "263039"
  },
  {
    "text": "clients HTTPS content",
    "start": "263039",
    "end": "265490"
  },
  {
    "text": "the Interceptor typically then Rhian",
    "start": "265490",
    "end": "268020"
  },
  {
    "text": "crypts the clients content by performing",
    "start": "268020",
    "end": "270180"
  },
  {
    "text": "a TLS handshake with the real server and",
    "start": "270180",
    "end": "272099"
  },
  {
    "text": "re encrypting the clients HTTP content",
    "start": "272099",
    "end": "274620"
  },
  {
    "text": "when sending it to the server now the",
    "start": "274620",
    "end": "278219"
  },
  {
    "text": "middle box can inspect and modify the",
    "start": "278219",
    "end": "279990"
  },
  {
    "text": "inner HTTP content between the client",
    "start": "279990",
    "end": "282240"
  },
  {
    "text": "and the server with the out errors",
    "start": "282240",
    "end": "283919"
  },
  {
    "text": "showing up on either end now that we",
    "start": "283919",
    "end": "288930"
  },
  {
    "text": "know what HTTP interception looks like",
    "start": "288930",
    "end": "290819"
  },
  {
    "text": "we're going to cover a few examples of",
    "start": "290819",
    "end": "292710"
  },
  {
    "text": "these monsters in the middle commonly",
    "start": "292710",
    "end": "294419"
  },
  {
    "text": "seen on the Internet",
    "start": "294419",
    "end": "295550"
  },
  {
    "text": "our first monster in the middle is this",
    "start": "295550",
    "end": "297930"
  },
  {
    "text": "rather bureaucratic looking one it",
    "start": "297930",
    "end": "299969"
  },
  {
    "text": "represents proxies like antivirus",
    "start": "299969",
    "end": "301710"
  },
  {
    "text": "software in corporate or government",
    "start": "301710",
    "end": "303240"
  },
  {
    "text": "proxies these proxies of several goals",
    "start": "303240",
    "end": "306870"
  },
  {
    "text": "including protecting clients by",
    "start": "306870",
    "end": "308759"
  },
  {
    "text": "detecting malware or command and control",
    "start": "308759",
    "end": "310650"
  },
  {
    "text": "traffic or protecting a corporation by",
    "start": "310650",
    "end": "313349"
  },
  {
    "text": "detecting and preventing data",
    "start": "313349",
    "end": "314759"
  },
  {
    "text": "exfiltration these types of proxy is",
    "start": "314759",
    "end": "317610"
  },
  {
    "text": "also have a nefarious side and can be",
    "start": "317610",
    "end": "319560"
  },
  {
    "text": "used to censor or spy on clients even",
    "start": "319560",
    "end": "324539"
  },
  {
    "text": "when these middle boxes are meant to",
    "start": "324539",
    "end": "325949"
  },
  {
    "text": "improve the security of connections they",
    "start": "325949",
    "end": "327840"
  },
  {
    "text": "can increase the attack surface of an",
    "start": "327840",
    "end": "329370"
  },
  {
    "text": "HTTP connection some examples of this",
    "start": "329370",
    "end": "332430"
  },
  {
    "text": "are vulnerabilities and Kaspersky",
    "start": "332430",
    "end": "334349"
  },
  {
    "text": "antivirus software and blue code one of",
    "start": "334349",
    "end": "337110"
  },
  {
    "text": "the most popular corporate proxies these",
    "start": "337110",
    "end": "340409"
  },
  {
    "text": "proxies can also be used for malicious",
    "start": "340409",
    "end": "341789"
  },
  {
    "text": "means in recent news the Kazakh",
    "start": "341789",
    "end": "343919"
  },
  {
    "text": "government forced the Kazakh ISP to make",
    "start": "343919",
    "end": "347159"
  },
  {
    "text": "clients install root certificates so",
    "start": "347159",
    "end": "349289"
  },
  {
    "text": "that they could intercept HTTP traffic",
    "start": "349289",
    "end": "351810"
  },
  {
    "text": "to social media websites like Facebook",
    "start": "351810",
    "end": "354469"
  },
  {
    "text": "cosmic ISPs encouraged users to install",
    "start": "354469",
    "end": "357330"
  },
  {
    "text": "this root certificate by saying it would",
    "start": "357330",
    "end": "358979"
  },
  {
    "text": "protect them from fraud or hacking",
    "start": "358979",
    "end": "360689"
  },
  {
    "text": "attempts or illegal content but really",
    "start": "360689",
    "end": "362879"
  },
  {
    "text": "the set up allows the Kazakh government",
    "start": "362879",
    "end": "364770"
  },
  {
    "text": "to potentially spy on citizens is",
    "start": "364770",
    "end": "367500"
  },
  {
    "text": "everyday online activity our next",
    "start": "367500",
    "end": "372419"
  },
  {
    "text": "monster in the middle is this grifter",
    "start": "372419",
    "end": "374069"
  },
  {
    "text": "over here it represents adware or",
    "start": "374069",
    "end": "376259"
  },
  {
    "text": "malware and these intercept HTTP",
    "start": "376259",
    "end": "379349"
  },
  {
    "text": "connections to inject ads into webpages",
    "start": "379349",
    "end": "381569"
  },
  {
    "text": "or even try to steal and exploit private",
    "start": "381569",
    "end": "384240"
  },
  {
    "text": "data one example of this is search",
    "start": "384240",
    "end": "389279"
  },
  {
    "text": "awesome adware especially a well-known",
    "start": "389279",
    "end": "391680"
  },
  {
    "text": "example of adware is superfish whose",
    "start": "391680",
    "end": "393750"
  },
  {
    "text": "root certificate was shipped by default",
    "start": "393750",
    "end": "395430"
  },
  {
    "text": "with many Lenovo devices",
    "start": "395430",
    "end": "398930"
  },
  {
    "text": "the third class of interceptors are",
    "start": "400170",
    "end": "402730"
  },
  {
    "text": "poorly implemented and often unnecessary",
    "start": "402730",
    "end": "405240"
  },
  {
    "text": "proxies that increase a connections",
    "start": "405240",
    "end": "407470"
  },
  {
    "text": "attack surface strap there we go so an",
    "start": "407470",
    "end": "416680"
  },
  {
    "text": "example of this I find really oops this",
    "start": "416680",
    "end": "421300"
  },
  {
    "text": "is what happened to me of av troubles",
    "start": "421300",
    "end": "422830"
  },
  {
    "text": "right before you give a talk but it will",
    "start": "422830",
    "end": "424390"
  },
  {
    "text": "be fine",
    "start": "424390",
    "end": "425280"
  },
  {
    "text": "cool so a third class of interceptors",
    "start": "425280",
    "end": "430390"
  },
  {
    "text": "are poorly implemented and often",
    "start": "430390",
    "end": "431830"
  },
  {
    "text": "unnecessary proxies that increase a",
    "start": "431830",
    "end": "433780"
  },
  {
    "text": "connections attack surface any TLS",
    "start": "433780",
    "end": "436690"
  },
  {
    "text": "terminating forward proxy whether it's",
    "start": "436690",
    "end": "438700"
  },
  {
    "text": "well-intentioned or not risks leaving",
    "start": "438700",
    "end": "440920"
  },
  {
    "text": "private information and opens the door",
    "start": "440920",
    "end": "442840"
  },
  {
    "text": "the spoofing an example of this if I",
    "start": "442840",
    "end": "446500"
  },
  {
    "text": "really interesting is Sennheiser",
    "start": "446500",
    "end": "448300"
  },
  {
    "text": "headphones whose head setup software",
    "start": "448300",
    "end": "450490"
  },
  {
    "text": "installed a root certificate on",
    "start": "450490",
    "end": "452050"
  },
  {
    "text": "computers as part of a syncing protocol",
    "start": "452050",
    "end": "454300"
  },
  {
    "text": "between headphones a computer the",
    "start": "454300",
    "end": "459190"
  },
  {
    "text": "private key for this root start was",
    "start": "459190",
    "end": "460750"
  },
  {
    "text": "weakly protected using the passphrase",
    "start": "460750",
    "end": "462040"
  },
  {
    "text": "sign Heiser CC so guessing it was almost",
    "start": "462040",
    "end": "465130"
  },
  {
    "text": "as easy as 1-2-3 and literally rhymes",
    "start": "465130",
    "end": "467770"
  },
  {
    "text": "with it if an attacker learned this",
    "start": "467770",
    "end": "470260"
  },
  {
    "text": "passphrase",
    "start": "470260",
    "end": "471040"
  },
  {
    "text": "they could use the root certificates",
    "start": "471040",
    "end": "472870"
  },
  {
    "text": "private key to issue fraudulent",
    "start": "472870",
    "end": "474910"
  },
  {
    "text": "certificates for any web site so these",
    "start": "474910",
    "end": "477760"
  },
  {
    "text": "headphones is bad software dramatically",
    "start": "477760",
    "end": "479770"
  },
  {
    "text": "increase the attack surface of a",
    "start": "479770",
    "end": "481540"
  },
  {
    "text": "customer's computer a final type of HTTP",
    "start": "481540",
    "end": "486760"
  },
  {
    "text": "interception is through reverse proxies",
    "start": "486760",
    "end": "488820"
  },
  {
    "text": "unlike other forms of proxies reverse",
    "start": "488820",
    "end": "491440"
  },
  {
    "text": "proxies don't require a client to",
    "start": "491440",
    "end": "493360"
  },
  {
    "text": "install a new root certificate",
    "start": "493360",
    "end": "495100"
  },
  {
    "text": "since clients connect directly to the",
    "start": "495100",
    "end": "497020"
  },
  {
    "text": "reverse proxy reverse proxies are",
    "start": "497020",
    "end": "499840"
  },
  {
    "text": "usually deployed to improve the security",
    "start": "499840",
    "end": "501700"
  },
  {
    "text": "performance the reliability of their",
    "start": "501700",
    "end": "504220"
  },
  {
    "text": "customers and sites by providing",
    "start": "504220",
    "end": "506110"
  },
  {
    "text": "features like load balancing and modern",
    "start": "506110",
    "end": "508330"
  },
  {
    "text": "TLS however they're not also immune to",
    "start": "508330",
    "end": "513219"
  },
  {
    "text": "of ulnar abilities as examples over",
    "start": "513220",
    "end": "515260"
  },
  {
    "text": "recent years have shown cloud beat",
    "start": "515260",
    "end": "517719"
  },
  {
    "text": "against CloudFlare was one incident that",
    "start": "517720",
    "end": "519400"
  },
  {
    "text": "had the potential to expose private",
    "start": "519400",
    "end": "521260"
  },
  {
    "text": "customer data and other major CD ends",
    "start": "521260",
    "end": "523570"
  },
  {
    "text": "like Akamai and f5 have had their own",
    "start": "523570",
    "end": "525970"
  },
  {
    "text": "share",
    "start": "525970",
    "end": "526350"
  },
  {
    "text": "of incidents now that we have a good",
    "start": "526350",
    "end": "530430"
  },
  {
    "text": "sense of the different types of monsters",
    "start": "530430",
    "end": "531780"
  },
  {
    "text": "in the middle on the internet and the",
    "start": "531780",
    "end": "533820"
  },
  {
    "text": "risks that they pose Luke was going to",
    "start": "533820",
    "end": "535860"
  },
  {
    "text": "explain how we actually can detect when",
    "start": "535860",
    "end": "537630"
  },
  {
    "text": "HTTPS interception occurs so that will",
    "start": "537630",
    "end": "540930"
  },
  {
    "text": "hand us over great so now we'll describe",
    "start": "540930",
    "end": "546690"
  },
  {
    "text": "how a server can detect when an incoming",
    "start": "546690",
    "end": "548580"
  },
  {
    "text": "client connection may have been",
    "start": "548580",
    "end": "550230"
  },
  {
    "text": "intercepted using a technique described",
    "start": "550230",
    "end": "552720"
  },
  {
    "text": "by tumeric and others into 2017 paper so",
    "start": "552720",
    "end": "556710"
  },
  {
    "text": "in this example we have a chrome client",
    "start": "556710",
    "end": "558780"
  },
  {
    "text": "connecting through a middle box to the",
    "start": "558780",
    "end": "560550"
  },
  {
    "text": "server and the middle box is using open",
    "start": "560550",
    "end": "562650"
  },
  {
    "text": "SSL as their TLS library to intercept",
    "start": "562650",
    "end": "566010"
  },
  {
    "text": "the connection and read the plaintext",
    "start": "566010",
    "end": "567480"
  },
  {
    "text": "HTTP content the middle box acts as a",
    "start": "567480",
    "end": "570090"
  },
  {
    "text": "server and terminates the TLS connection",
    "start": "570090",
    "end": "571860"
  },
  {
    "text": "from the chrome client and then it",
    "start": "571860",
    "end": "575010"
  },
  {
    "text": "establishes a new TLS connection using",
    "start": "575010",
    "end": "577260"
  },
  {
    "text": "open SSL to re-encrypt the HTTP traffic",
    "start": "577260",
    "end": "579750"
  },
  {
    "text": "to the server the first thing to note is",
    "start": "579750",
    "end": "582570"
  },
  {
    "text": "the chrome CLS library leaves",
    "start": "582570",
    "end": "584430"
  },
  {
    "text": "differently than open SSL does so from",
    "start": "584430",
    "end": "587340"
  },
  {
    "text": "the server's perspective it looks like",
    "start": "587340",
    "end": "589020"
  },
  {
    "text": "an open SSL client is connecting to it",
    "start": "589020",
    "end": "591440"
  },
  {
    "text": "however the inner HTTP contains a user",
    "start": "591440",
    "end": "594780"
  },
  {
    "text": "agent header claiming that the traffic",
    "start": "594780",
    "end": "596370"
  },
  {
    "text": "is originating from a Chrome browser so",
    "start": "596370",
    "end": "601170"
  },
  {
    "text": "if the server sees a chrome user agent",
    "start": "601170",
    "end": "602880"
  },
  {
    "text": "paired with an open SSL TLS connection",
    "start": "602880",
    "end": "604580"
  },
  {
    "text": "the this is an indication that the",
    "start": "604580",
    "end": "606990"
  },
  {
    "text": "connection might have been intercepted",
    "start": "606990",
    "end": "609980"
  },
  {
    "text": "so let's dive into these mismatched user",
    "start": "609980",
    "end": "612450"
  },
  {
    "text": "agent headers and TLS parameters",
    "start": "612450",
    "end": "614370"
  },
  {
    "text": "in-depth so we can easily fingerprint",
    "start": "614370",
    "end": "616890"
  },
  {
    "text": "HTTP clients by reading and parsing the",
    "start": "616890",
    "end": "619290"
  },
  {
    "text": "user agent HTTP header so in this",
    "start": "619290",
    "end": "622020"
  },
  {
    "text": "example the user agent header indicates",
    "start": "622020",
    "end": "624210"
  },
  {
    "text": "that the connection is from Chrome",
    "start": "624210",
    "end": "626280"
  },
  {
    "text": "version 75 generated generated from Mac",
    "start": "626280",
    "end": "629310"
  },
  {
    "text": "OSX Mojave well this header can be",
    "start": "629310",
    "end": "632310"
  },
  {
    "text": "spoofed by bots or or other browsers",
    "start": "632310",
    "end": "635640"
  },
  {
    "text": "most popular browsers can be identified",
    "start": "635640",
    "end": "637770"
  },
  {
    "text": "with this header",
    "start": "637770",
    "end": "640330"
  },
  {
    "text": "[Music]",
    "start": "640330",
    "end": "642560"
  },
  {
    "text": "mmm-hmm identifying the tls client",
    "start": "642560",
    "end": "645030"
  },
  {
    "text": "behind a connection is a bit more",
    "start": "645030",
    "end": "646470"
  },
  {
    "text": "challenging since there's no fuel than",
    "start": "646470",
    "end": "648450"
  },
  {
    "text": "TOS that identifies the library however",
    "start": "648450",
    "end": "651330"
  },
  {
    "text": "there's been a great deal of work over",
    "start": "651330",
    "end": "652830"
  },
  {
    "text": "the past decade and doing TLS",
    "start": "652830",
    "end": "654570"
  },
  {
    "text": "fingerprinting based on the TLS client",
    "start": "654570",
    "end": "656610"
  },
  {
    "text": "hello message so ristic started looking",
    "start": "656610",
    "end": "661110"
  },
  {
    "text": "at finger at TLS fingerprinting a decade",
    "start": "661110",
    "end": "663360"
  },
  {
    "text": "ago and the state of the art has been",
    "start": "663360",
    "end": "665580"
  },
  {
    "text": "improving sense so in 2015 Lee brother",
    "start": "665580",
    "end": "668700"
  },
  {
    "text": "s'en collected and published hundreds of",
    "start": "668700",
    "end": "670770"
  },
  {
    "text": "key last fingerprints for various CLS",
    "start": "670770",
    "end": "672720"
  },
  {
    "text": "clients Blake Anderson and others at",
    "start": "672720",
    "end": "675420"
  },
  {
    "text": "Cisco have done some really great work",
    "start": "675420",
    "end": "676980"
  },
  {
    "text": "in automatically generating TLS",
    "start": "676980",
    "end": "678630"
  },
  {
    "text": "fingerprints from data observed on",
    "start": "678630",
    "end": "680340"
  },
  {
    "text": "Cisco's networks and as of 2019",
    "start": "680340",
    "end": "683190"
  },
  {
    "text": "they've started publishing a subset of",
    "start": "683190",
    "end": "684990"
  },
  {
    "text": "their observed fingerprints weekly the",
    "start": "684990",
    "end": "688890"
  },
  {
    "text": "ja3 project from Salesforce developed a",
    "start": "688890",
    "end": "691350"
  },
  {
    "text": "TLS fingerprint there was succinct",
    "start": "691350",
    "end": "692910"
  },
  {
    "text": "enough to fit inside a tweet and the TLS",
    "start": "692910",
    "end": "695640"
  },
  {
    "text": "fingerprint project collects and",
    "start": "695640",
    "end": "697560"
  },
  {
    "text": "publishes fingerprints from TLS clients",
    "start": "697560",
    "end": "699660"
  },
  {
    "text": "connecting to the UC Boulder campus",
    "start": "699660",
    "end": "701850"
  },
  {
    "text": "network and they provide an easy",
    "start": "701850",
    "end": "703650"
  },
  {
    "text": "interface for tracking clusters of",
    "start": "703650",
    "end": "705540"
  },
  {
    "text": "fingerprints so let's look at all at how",
    "start": "705540",
    "end": "710610"
  },
  {
    "text": "all these methods fingerprint TLS",
    "start": "710610",
    "end": "712290"
  },
  {
    "text": "clients so RFC 52:46 describes the",
    "start": "712290",
    "end": "716160"
  },
  {
    "text": "typical TLS 1.2 handshake so the client",
    "start": "716160",
    "end": "719760"
  },
  {
    "text": "starts the handshake by sending the",
    "start": "719760",
    "end": "721650"
  },
  {
    "text": "client hello message which advertises",
    "start": "721650",
    "end": "723930"
  },
  {
    "text": "the list of parameters that it supports",
    "start": "723930",
    "end": "725580"
  },
  {
    "text": "and is willing to negotiate for the",
    "start": "725580",
    "end": "727080"
  },
  {
    "text": "connection the server responds with the",
    "start": "727080",
    "end": "729630"
  },
  {
    "text": "server hello message indicating which",
    "start": "729630",
    "end": "731640"
  },
  {
    "text": "parameters it chooses along with its",
    "start": "731640",
    "end": "733710"
  },
  {
    "text": "certificate and key exchange value the",
    "start": "733710",
    "end": "736530"
  },
  {
    "text": "client responds with its key exchange",
    "start": "736530",
    "end": "738030"
  },
  {
    "text": "value and the finished message and then",
    "start": "738030",
    "end": "740640"
  },
  {
    "text": "both sides can send an encrypted",
    "start": "740640",
    "end": "741750"
  },
  {
    "text": "application data so we're interested in",
    "start": "741750",
    "end": "744780"
  },
  {
    "text": "TLS fingerprinting based on the client",
    "start": "744780",
    "end": "746700"
  },
  {
    "text": "hello message so let's see how that's",
    "start": "746700",
    "end": "748640"
  },
  {
    "text": "structured so this message contains",
    "start": "748640",
    "end": "752910"
  },
  {
    "text": "fields including the clients protocol",
    "start": "752910",
    "end": "754680"
  },
  {
    "text": "version the set of cipher Suites and",
    "start": "754680",
    "end": "756480"
  },
  {
    "text": "cryptographic algorithms that is willing",
    "start": "756480",
    "end": "758220"
  },
  {
    "text": "to negotiate as well as various",
    "start": "758220",
    "end": "759990"
  },
  {
    "text": "extensions so while some fields of the",
    "start": "759990",
    "end": "763860"
  },
  {
    "text": "client hello are random like the session",
    "start": "763860",
    "end": "765660"
  },
  {
    "text": "ID and the client random nonce many are",
    "start": "765660",
    "end": "768210"
  },
  {
    "text": "static and they're never changed for a",
    "start": "768210",
    "end": "769890"
  },
  {
    "text": "particular version of a TLS library so",
    "start": "769890",
    "end": "773460"
  },
  {
    "text": "we can use these fields to a fingerprint",
    "start": "773460",
    "end": "775200"
  },
  {
    "text": "implementation",
    "start": "775200",
    "end": "777480"
  },
  {
    "text": "so let's take a look at the fields of",
    "start": "777480",
    "end": "779710"
  },
  {
    "text": "two client hello messages one generated",
    "start": "779710",
    "end": "782020"
  },
  {
    "text": "by Chrome and the other by open SSL so",
    "start": "782020",
    "end": "785140"
  },
  {
    "text": "if we look at the list of ciphers which",
    "start": "785140",
    "end": "786400"
  },
  {
    "text": "sent sent by you to client we can see",
    "start": "786400",
    "end": "788950"
  },
  {
    "text": "the chrome sends 17 cipher Suites in",
    "start": "788950",
    "end": "791350"
  },
  {
    "text": "open SSL sends 48 the list of supported",
    "start": "791350",
    "end": "795190"
  },
  {
    "text": "groups that they send are almost the",
    "start": "795190",
    "end": "796930"
  },
  {
    "text": "same but chrome sends this extra value",
    "start": "796930",
    "end": "799180"
  },
  {
    "text": "the grease value at the start of the",
    "start": "799180",
    "end": "800890"
  },
  {
    "text": "list a grease value is also prevented",
    "start": "800890",
    "end": "803710"
  },
  {
    "text": "prepended to the start of the list of",
    "start": "803710",
    "end": "805600"
  },
  {
    "text": "cyprus tweets you notice so chrome sends",
    "start": "805600",
    "end": "808420"
  },
  {
    "text": "these grease ciphers which don't",
    "start": "808420",
    "end": "809740"
  },
  {
    "text": "actually represent valid algorithms to",
    "start": "809740",
    "end": "812620"
  },
  {
    "text": "ensure that servers and middle boxes",
    "start": "812620",
    "end": "814480"
  },
  {
    "text": "don't break when they come across values",
    "start": "814480",
    "end": "816310"
  },
  {
    "text": "as they don't recognize so if we see a",
    "start": "816310",
    "end": "819660"
  },
  {
    "text": "client hello message with these 17",
    "start": "819660",
    "end": "822010"
  },
  {
    "text": "cipher suites in this exact order along",
    "start": "822010",
    "end": "824680"
  },
  {
    "text": "with this set of groups and extensions",
    "start": "824680",
    "end": "826240"
  },
  {
    "text": "with the grease cipher suite prevented",
    "start": "826240",
    "end": "827980"
  },
  {
    "text": "to each list then we can reasonably",
    "start": "827980",
    "end": "829720"
  },
  {
    "text": "assume that it was generated by Chrome's",
    "start": "829720",
    "end": "831580"
  },
  {
    "text": "TLS library and not by open SSL so now",
    "start": "831580",
    "end": "838150"
  },
  {
    "text": "that we know how to LS fingerprinting",
    "start": "838150",
    "end": "839680"
  },
  {
    "text": "works we can get to the HTTP",
    "start": "839680",
    "end": "841600"
  },
  {
    "text": "interception detection process so the",
    "start": "841600",
    "end": "845620"
  },
  {
    "text": "first step is the constructed database",
    "start": "845620",
    "end": "847660"
  },
  {
    "text": "of known browser fingerprints these can",
    "start": "847660",
    "end": "850150"
  },
  {
    "text": "be constructed manually by operating",
    "start": "850150",
    "end": "851830"
  },
  {
    "text": "both a client and a server and then",
    "start": "851830",
    "end": "853750"
  },
  {
    "text": "logging the connection parameters",
    "start": "853750",
    "end": "855100"
  },
  {
    "text": "including the HTTP user agent and the",
    "start": "855100",
    "end": "857650"
  },
  {
    "text": "TLS fingerprint next for an incoming",
    "start": "857650",
    "end": "862420"
  },
  {
    "text": "request from a client we can check if",
    "start": "862420",
    "end": "864430"
  },
  {
    "text": "the user agent matches anything in our",
    "start": "864430",
    "end": "865959"
  },
  {
    "text": "database if not then we can't say",
    "start": "865959",
    "end": "868390"
  },
  {
    "text": "anything about whether or not the",
    "start": "868390",
    "end": "869500"
  },
  {
    "text": "connection is intercepted and we should",
    "start": "869500",
    "end": "871060"
  },
  {
    "text": "collect more fingerprints if we do have",
    "start": "871060",
    "end": "873550"
  },
  {
    "text": "a match then we can compare the TLS",
    "start": "873550",
    "end": "876130"
  },
  {
    "text": "fingerprint of the requests to the",
    "start": "876130",
    "end": "877750"
  },
  {
    "text": "expected fingerprint in our database if",
    "start": "877750",
    "end": "879760"
  },
  {
    "text": "they match then it's unlikely that we",
    "start": "879760",
    "end": "882130"
  },
  {
    "text": "have a monster in the middle here",
    "start": "882130",
    "end": "883380"
  },
  {
    "text": "however if the fingerprints don't match",
    "start": "883380",
    "end": "885610"
  },
  {
    "text": "then it's likely that either our",
    "start": "885610",
    "end": "887529"
  },
  {
    "text": "fingerprint database is incomplete or",
    "start": "887529",
    "end": "889300"
  },
  {
    "text": "outdated or the connection was indeed",
    "start": "889300",
    "end": "891640"
  },
  {
    "text": "intercepted so we have a likely monster",
    "start": "891640",
    "end": "893560"
  },
  {
    "text": "in the middle we can go a few steps",
    "start": "893560",
    "end": "896290"
  },
  {
    "text": "further and actually try to identify the",
    "start": "896290",
    "end": "898330"
  },
  {
    "text": "responsible middle box too so we're",
    "start": "898330",
    "end": "903550"
  },
  {
    "text": "finally ready to talk about the tools",
    "start": "903550",
    "end": "904780"
  },
  {
    "text": "that we've built a cloud player for",
    "start": "904780",
    "end": "906430"
  },
  {
    "text": "doing HTTP interception detection",
    "start": "906430",
    "end": "908540"
  },
  {
    "text": "so we built an open-source library",
    "start": "908540",
    "end": "911060"
  },
  {
    "text": "written and go for this purpose which we",
    "start": "911060",
    "end": "913160"
  },
  {
    "text": "call monster in the middle engine some",
    "start": "913160",
    "end": "915920"
  },
  {
    "text": "of the initial goals we had when",
    "start": "915920",
    "end": "917180"
  },
  {
    "text": "developing this project are first for it",
    "start": "917180",
    "end": "919190"
  },
  {
    "text": "to be maintainable so fingerprints in",
    "start": "919190",
    "end": "921380"
  },
  {
    "text": "the database quickly go stale as",
    "start": "921380",
    "end": "922970"
  },
  {
    "text": "browsers are updated and it's time",
    "start": "922970",
    "end": "925310"
  },
  {
    "text": "consuming to generate and vet new",
    "start": "925310",
    "end": "926900"
  },
  {
    "text": "fingerprints manually so we hope to be",
    "start": "926900",
    "end": "929660"
  },
  {
    "text": "able to automatically generate and",
    "start": "929660",
    "end": "931210"
  },
  {
    "text": "fingerprints that we trust from",
    "start": "931210",
    "end": "932930"
  },
  {
    "text": "connections observed from cloud floors",
    "start": "932930",
    "end": "934490"
  },
  {
    "text": "network much like cisco is doing now we",
    "start": "934490",
    "end": "938360"
  },
  {
    "text": "also wanted the fingerprint format that",
    "start": "938360",
    "end": "939800"
  },
  {
    "text": "we use to be flexible to model a variety",
    "start": "939800",
    "end": "941660"
  },
  {
    "text": "of browser behavior for instance some",
    "start": "941660",
    "end": "944600"
  },
  {
    "text": "implementations change the order of",
    "start": "944600",
    "end": "945980"
  },
  {
    "text": "cipher suites based on available",
    "start": "945980",
    "end": "947390"
  },
  {
    "text": "hardware on the device so we'd like to",
    "start": "947390",
    "end": "949670"
  },
  {
    "text": "capture that we also plan to support",
    "start": "949670",
    "end": "952250"
  },
  {
    "text": "alternative static TLS fingerprint",
    "start": "952250",
    "end": "954170"
  },
  {
    "text": "formats like jaw 3 and TLS fingerprint",
    "start": "954170",
    "end": "956570"
  },
  {
    "text": "that are already widely adopted in the",
    "start": "956570",
    "end": "958850"
  },
  {
    "text": "community and we also wanted the library",
    "start": "958850",
    "end": "963170"
  },
  {
    "text": "to be fast so performance was a priority",
    "start": "963170",
    "end": "965360"
  },
  {
    "text": "so we wanted to be able to deploy it at",
    "start": "965360",
    "end": "967670"
  },
  {
    "text": "scale so and we actually showed that we",
    "start": "967670",
    "end": "970610"
  },
  {
    "text": "can do this by deploying it on a 5%",
    "start": "970610",
    "end": "972710"
  },
  {
    "text": "sample of TLS client hellos on",
    "start": "972710",
    "end": "974720"
  },
  {
    "text": "CloudFlare so this probably makes you",
    "start": "974720",
    "end": "980030"
  },
  {
    "start": "978000",
    "end": "1029000"
  },
  {
    "text": "wonder ok what is clouds are seeing when",
    "start": "980030",
    "end": "982550"
  },
  {
    "text": "it comes to https interception on the",
    "start": "982550",
    "end": "984650"
  },
  {
    "text": "public Internet",
    "start": "984650",
    "end": "986360"
  },
  {
    "text": "so aggregating data from this 5% traffic",
    "start": "986360",
    "end": "989000"
  },
  {
    "text": "sample we've also exposed a public",
    "start": "989000",
    "end": "991160"
  },
  {
    "text": "dashboard that gives insight into the",
    "start": "991160",
    "end": "993470"
  },
  {
    "text": "practice of HTTP interception as",
    "start": "993470",
    "end": "995600"
  },
  {
    "text": "observed by our network this dashboard",
    "start": "995600",
    "end": "998210"
  },
  {
    "text": "is called Malcolm which technically",
    "start": "998210",
    "end": "1000010"
  },
  {
    "text": "stands for measuring active listeners",
    "start": "1000010",
    "end": "1001930"
  },
  {
    "text": "connection observers legitimate monitors",
    "start": "1001930",
    "end": "1004420"
  },
  {
    "text": "but really this is Loki a chance for us",
    "start": "1004420",
    "end": "1006760"
  },
  {
    "text": "to reference our favorite favorite",
    "start": "1006760",
    "end": "1008170"
  },
  {
    "text": "2000's family sitcom and Bryan Cranston",
    "start": "1008170",
    "end": "1011280"
  },
  {
    "text": "this dashboard allows for filtering over",
    "start": "1011280",
    "end": "1014740"
  },
  {
    "text": "a number of fields including browser",
    "start": "1014740",
    "end": "1016360"
  },
  {
    "text": "operating system and the type of HTTP",
    "start": "1016360",
    "end": "1019510"
  },
  {
    "text": "interception tool out of those that",
    "start": "1019510",
    "end": "1022000"
  },
  {
    "text": "we've been able to identify so let's see",
    "start": "1022000",
    "end": "1024550"
  },
  {
    "text": "some examples of this dashboard in",
    "start": "1024550",
    "end": "1026470"
  },
  {
    "text": "action",
    "start": "1026470",
    "end": "1028980"
  },
  {
    "start": "1029000",
    "end": "1085000"
  },
  {
    "text": "so here we show the overall HTTP",
    "start": "1029240",
    "end": "1032250"
  },
  {
    "text": "interception rates from the traffic",
    "start": "1032250",
    "end": "1033928"
  },
  {
    "text": "sample over a 30 day period so the",
    "start": "1033929",
    "end": "1036808"
  },
  {
    "text": "orange shows a percentage of traffic",
    "start": "1036809",
    "end": "1038130"
  },
  {
    "text": "that we do believe has been intercepted",
    "start": "1038130",
    "end": "1039750"
  },
  {
    "text": "based on our heuristic so this shows",
    "start": "1039750",
    "end": "1042418"
  },
  {
    "text": "that just about 17% of traffic has been",
    "start": "1042419",
    "end": "1044760"
  },
  {
    "text": "flattened the green shows traffic that",
    "start": "1044760",
    "end": "1047788"
  },
  {
    "text": "we do not believe to be intercepted and",
    "start": "1047789",
    "end": "1049740"
  },
  {
    "text": "the blue shows traffic that we're not",
    "start": "1049740",
    "end": "1052410"
  },
  {
    "text": "sure about because their fingerprint",
    "start": "1052410",
    "end": "1053789"
  },
  {
    "text": "database is incomplete or out-of-date so",
    "start": "1053789",
    "end": "1056669"
  },
  {
    "text": "you might be wondering about this large",
    "start": "1056669",
    "end": "1058260"
  },
  {
    "text": "spike that you see here so this is",
    "start": "1058260",
    "end": "1061140"
  },
  {
    "text": "actually from when I updated the",
    "start": "1061140",
    "end": "1062309"
  },
  {
    "text": "reference browser fingerprints that are",
    "start": "1062309",
    "end": "1064140"
  },
  {
    "text": "we're using in our production database",
    "start": "1064140",
    "end": "1066140"
  },
  {
    "text": "and then the gradual increase of the",
    "start": "1066140",
    "end": "1068730"
  },
  {
    "text": "blue bar as time progresses shows that",
    "start": "1068730",
    "end": "1072179"
  },
  {
    "text": "our fingerprint database is going out of",
    "start": "1072179",
    "end": "1074460"
  },
  {
    "text": "date so we have more and more unknown so",
    "start": "1074460",
    "end": "1077039"
  },
  {
    "text": "making these updates automatic is a big",
    "start": "1077039",
    "end": "1078720"
  },
  {
    "text": "to-do for this project so that we plan",
    "start": "1078720",
    "end": "1080700"
  },
  {
    "text": "to do soon our dashboard also allows for",
    "start": "1080700",
    "end": "1086789"
  },
  {
    "start": "1085000",
    "end": "1126000"
  },
  {
    "text": "filtering by fields like browser and",
    "start": "1086789",
    "end": "1089010"
  },
  {
    "text": "operating system so here in this video",
    "start": "1089010",
    "end": "1091260"
  },
  {
    "text": "we're gonna first filter by traffic that",
    "start": "1091260",
    "end": "1093539"
  },
  {
    "text": "we do believe to be intercepted and then",
    "start": "1093539",
    "end": "1096390"
  },
  {
    "text": "we'll see the breakdown of intercepted",
    "start": "1096390",
    "end": "1098490"
  },
  {
    "text": "connections with a chrome user agent we",
    "start": "1098490",
    "end": "1101549"
  },
  {
    "text": "see that out of all the chrome traffic",
    "start": "1101549",
    "end": "1103200"
  },
  {
    "text": "Android and Windows phones tend to be to",
    "start": "1103200",
    "end": "1106440"
  },
  {
    "text": "have the most intercepted traffic and",
    "start": "1106440",
    "end": "1109919"
  },
  {
    "text": "you can also clear the filters and",
    "start": "1109919",
    "end": "1111480"
  },
  {
    "text": "started into an investigation of HTTPS",
    "start": "1111480",
    "end": "1113460"
  },
  {
    "text": "and reception so we encourage you to",
    "start": "1113460",
    "end": "1115289"
  },
  {
    "text": "check out the dashboard and we plan to",
    "start": "1115289",
    "end": "1117990"
  },
  {
    "text": "add more features to the dashboard soon",
    "start": "1117990",
    "end": "1119580"
  },
  {
    "text": "like filtering by country so you can",
    "start": "1119580",
    "end": "1121710"
  },
  {
    "text": "examine Kazakhstan and in depth if you",
    "start": "1121710",
    "end": "1124049"
  },
  {
    "text": "want to so let's conclude with some",
    "start": "1124049",
    "end": "1129179"
  },
  {
    "start": "1126000",
    "end": "1186000"
  },
  {
    "text": "takeaways from the talk the first",
    "start": "1129179",
    "end": "1131010"
  },
  {
    "text": "takeaway is that TLS terminated up",
    "start": "1131010",
    "end": "1133169"
  },
  {
    "text": "terminating middleboxes pose serious",
    "start": "1133169",
    "end": "1134970"
  },
  {
    "text": "threats to network security even if",
    "start": "1134970",
    "end": "1137220"
  },
  {
    "text": "they're not inherently malicious the",
    "start": "1137220",
    "end": "1139440"
  },
  {
    "text": "best case for Enda and connections",
    "start": "1139440",
    "end": "1140909"
  },
  {
    "text": "security is to avoid HTTP interception",
    "start": "1140909",
    "end": "1143700"
  },
  {
    "text": "altogether",
    "start": "1143700",
    "end": "1144270"
  },
  {
    "text": "whether you're ality the reality is that",
    "start": "1144270",
    "end": "1147210"
  },
  {
    "text": "it's sometimes unavoidable in these",
    "start": "1147210",
    "end": "1149610"
  },
  {
    "text": "cases middleboxes",
    "start": "1149610",
    "end": "1151020"
  },
  {
    "text": "performing interception should be held",
    "start": "1151020",
    "end": "1152789"
  },
  {
    "text": "at the same security standards as",
    "start": "1152789",
    "end": "1154559"
  },
  {
    "text": "browsers the second takeaway from the",
    "start": "1154559",
    "end": "1157650"
  },
  {
    "text": "talk is that heuristics based on HTTP",
    "start": "1157650",
    "end": "1159840"
  },
  {
    "text": "and TLS fingerprints can be effective at",
    "start": "1159840",
    "end": "1162600"
  },
  {
    "text": "protecting HTTPS interception detecting",
    "start": "1162600",
    "end": "1165960"
  },
  {
    "text": "women exception occurs is the first step",
    "start": "1165960",
    "end": "1167700"
  },
  {
    "text": "to holding middleboxes accountable this",
    "start": "1167700",
    "end": "1170490"
  },
  {
    "text": "is especially important for clients who",
    "start": "1170490",
    "end": "1172110"
  },
  {
    "text": "may not even know that their connection",
    "start": "1172110",
    "end": "1173580"
  },
  {
    "text": "is being intercepted as in the case of",
    "start": "1173580",
    "end": "1176220"
  },
  {
    "text": "the citizens of Kazakhstan finally we",
    "start": "1176220",
    "end": "1181260"
  },
  {
    "text": "encourage feedback and feature requests",
    "start": "1181260",
    "end": "1183059"
  },
  {
    "text": "for our open source tool in public",
    "start": "1183059",
    "end": "1184470"
  },
  {
    "text": "dashboard so please check them out",
    "start": "1184470",
    "end": "1186299"
  },
  {
    "start": "1186000",
    "end": "1617000"
  },
  {
    "text": "PRS are welcome PR is welcomed and with",
    "start": "1186299",
    "end": "1190559"
  },
  {
    "text": "that we can take any questions and feel",
    "start": "1190559",
    "end": "1193440"
  },
  {
    "text": "free to ask us in person or to tweet at",
    "start": "1193440",
    "end": "1195419"
  },
  {
    "text": "us thank you",
    "start": "1195419",
    "end": "1198350"
  },
  {
    "text": "[Applause]",
    "start": "1199660",
    "end": "1206259"
  },
  {
    "text": "how our questions handle here do we just",
    "start": "1208250",
    "end": "1210510"
  },
  {
    "text": "pick them do we choose your audience oh",
    "start": "1210510",
    "end": "1212360"
  },
  {
    "text": "yeah and I guess we have a mic everyone",
    "start": "1212360",
    "end": "1215340"
  },
  {
    "text": "should go up to a mic and line up and",
    "start": "1215340",
    "end": "1217260"
  },
  {
    "text": "ask questions there hear me yeah",
    "start": "1217260",
    "end": "1220710"
  },
  {
    "text": "a question like let's say you have a",
    "start": "1220710",
    "end": "1222299"
  },
  {
    "text": "like a Firefox browser right and it has",
    "start": "1222299",
    "end": "1224610"
  },
  {
    "text": "got all the root certificates already",
    "start": "1224610",
    "end": "1226320"
  },
  {
    "text": "stored in the binary and it can be",
    "start": "1226320",
    "end": "1227970"
  },
  {
    "text": "modified so in that case when you have a",
    "start": "1227970",
    "end": "1230299"
  },
  {
    "text": "how do you how can you exploit this MIT",
    "start": "1230299",
    "end": "1234690"
  },
  {
    "text": "M if all the well-known certificates",
    "start": "1234690",
    "end": "1238350"
  },
  {
    "text": "already in the binary and you can't add",
    "start": "1238350",
    "end": "1240720"
  },
  {
    "text": "anymore you can't go and add above in",
    "start": "1240720",
    "end": "1242820"
  },
  {
    "text": "our root certificate or something like",
    "start": "1242820",
    "end": "1244620"
  },
  {
    "text": "that",
    "start": "1244620",
    "end": "1244890"
  },
  {
    "text": "so then as long as people get CS and",
    "start": "1244890",
    "end": "1247950"
  },
  {
    "text": "certificates so how can the attacker",
    "start": "1247950",
    "end": "1250500"
  },
  {
    "text": "still like to MIT M understood this if a",
    "start": "1250500",
    "end": "1258059"
  },
  {
    "text": "binary has a preset list of trusted root",
    "start": "1258059",
    "end": "1260820"
  },
  {
    "text": "certificates like that of certificate",
    "start": "1260820",
    "end": "1262530"
  },
  {
    "text": "authorities how could an interceptor",
    "start": "1262530",
    "end": "1264630"
  },
  {
    "text": "encourage a client to install a new root",
    "start": "1264630",
    "end": "1267690"
  },
  {
    "text": "certificate that can issue fraudulent",
    "start": "1267690",
    "end": "1269669"
  },
  {
    "text": "certificates was that the question is",
    "start": "1269669",
    "end": "1271710"
  },
  {
    "text": "that let's say you don't take any other",
    "start": "1271710",
    "end": "1273990"
  },
  {
    "text": "set of care so Firefox would only look",
    "start": "1273990",
    "end": "1276330"
  },
  {
    "text": "at its own certificates and then the",
    "start": "1276330",
    "end": "1278400"
  },
  {
    "text": "roots are decayed list we do not look at",
    "start": "1278400",
    "end": "1280260"
  },
  {
    "text": "any other place in that case somebody",
    "start": "1280260",
    "end": "1282960"
  },
  {
    "text": "cannot just claim to be example.com",
    "start": "1282960",
    "end": "1284730"
  },
  {
    "text": "right because it has to be signed by a",
    "start": "1284730",
    "end": "1286860"
  },
  {
    "text": "well-known CA",
    "start": "1286860",
    "end": "1289640"
  },
  {
    "text": "tastes like on browsers like operating",
    "start": "1290060",
    "end": "1292970"
  },
  {
    "text": "systems you can actually just change",
    "start": "1292970",
    "end": "1294470"
  },
  {
    "text": "whatever root certificates you trust and",
    "start": "1294470",
    "end": "1296930"
  },
  {
    "text": "you can actually add your own and",
    "start": "1296930",
    "end": "1298420"
  },
  {
    "text": "typically applications will follow that",
    "start": "1298420",
    "end": "1300680"
  },
  {
    "text": "trusted root certificate list that is",
    "start": "1300680",
    "end": "1303800"
  },
  {
    "text": "implemented as part of the operating",
    "start": "1303800",
    "end": "1305570"
  },
  {
    "text": "system so it's derived from that ok next",
    "start": "1305570",
    "end": "1309200"
  },
  {
    "text": "question over there so in this case I",
    "start": "1309200",
    "end": "1315410"
  },
  {
    "text": "think you are to talk to an interception",
    "start": "1315410",
    "end": "1316850"
  },
  {
    "text": "between browsers and servers so how",
    "start": "1316850",
    "end": "1320240"
  },
  {
    "text": "about server-to-server communication how",
    "start": "1320240",
    "end": "1323150"
  },
  {
    "text": "do you detect that that's a really good",
    "start": "1323150",
    "end": "1325790"
  },
  {
    "text": "question",
    "start": "1325790",
    "end": "1326270"
  },
  {
    "text": "so detecting server to server HTTP",
    "start": "1326270",
    "end": "1329150"
  },
  {
    "text": "interception yeah so you should be able",
    "start": "1329150",
    "end": "1332810"
  },
  {
    "text": "to do something similar if it's a TLS",
    "start": "1332810",
    "end": "1334580"
  },
  {
    "text": "connection then then one side has to",
    "start": "1334580",
    "end": "1337580"
  },
  {
    "text": "operate as a client and one as the",
    "start": "1337580",
    "end": "1339260"
  },
  {
    "text": "server beginning if you gather",
    "start": "1339260",
    "end": "1341150"
  },
  {
    "text": "fingerprints for the client in that case",
    "start": "1341150",
    "end": "1344390"
  },
  {
    "text": "and you should be able to do something",
    "start": "1344390",
    "end": "1345500"
  },
  {
    "text": "similar if it's yeah if they're using",
    "start": "1345500",
    "end": "1349120"
  },
  {
    "text": "yeah if it's HTTP yeah okay thanks okay",
    "start": "1349120",
    "end": "1354290"
  },
  {
    "text": "I'm gonna go in this order so is there",
    "start": "1354290",
    "end": "1356810"
  },
  {
    "text": "someone at the mic over there you're",
    "start": "1356810",
    "end": "1358610"
  },
  {
    "text": "good hi yeah is there a client ad in",
    "start": "1358610",
    "end": "1362510"
  },
  {
    "text": "front of the browser so the user can",
    "start": "1362510",
    "end": "1364400"
  },
  {
    "text": "detect that their connection that's been",
    "start": "1364400",
    "end": "1365960"
  },
  {
    "text": "man-in-the-middle so so this this could",
    "start": "1365960",
    "end": "1370940"
  },
  {
    "text": "be I mean one easy thing to do in the",
    "start": "1370940",
    "end": "1373400"
  },
  {
    "text": "browser would be to to just say okay",
    "start": "1373400",
    "end": "1377270"
  },
  {
    "text": "we're seeing a certificate signed by",
    "start": "1377270",
    "end": "1379220"
  },
  {
    "text": "something that isn't in our default list",
    "start": "1379220",
    "end": "1381710"
  },
  {
    "text": "of root certificates sort of display a",
    "start": "1381710",
    "end": "1384230"
  },
  {
    "text": "warning then so that would be that would",
    "start": "1384230",
    "end": "1386300"
  },
  {
    "text": "be one thing or the server after it does",
    "start": "1386300",
    "end": "1388550"
  },
  {
    "text": "this this detection could send something",
    "start": "1388550",
    "end": "1391910"
  },
  {
    "text": "back to the client",
    "start": "1391910",
    "end": "1393140"
  },
  {
    "text": "but right now yes so there there are",
    "start": "1393140",
    "end": "1396140"
  },
  {
    "text": "some ways to do this we also have a site",
    "start": "1396140",
    "end": "1399080"
  },
  {
    "text": "called man in the MIT MDOT watch that a",
    "start": "1399080",
    "end": "1402230"
  },
  {
    "text": "client can connect to and just and then",
    "start": "1402230",
    "end": "1404210"
  },
  {
    "text": "the server displays whether or not it",
    "start": "1404210",
    "end": "1406430"
  },
  {
    "text": "believes intercept or the connection has",
    "start": "1406430",
    "end": "1408140"
  },
  {
    "text": "been intercepted thank you yeah hi",
    "start": "1408140",
    "end": "1412070"
  },
  {
    "text": "where should we deploy the detection",
    "start": "1412070",
    "end": "1414140"
  },
  {
    "text": "tool",
    "start": "1414140",
    "end": "1415330"
  },
  {
    "text": "I mean I feel like we're we out at least",
    "start": "1415330",
    "end": "1418570"
  },
  {
    "text": "okay the question for small ism where",
    "start": "1418570",
    "end": "1420220"
  },
  {
    "text": "should we deploy the detection tool that",
    "start": "1420220",
    "end": "1421630"
  },
  {
    "text": "we built at least for us where we",
    "start": "1421630",
    "end": "1423940"
  },
  {
    "text": "deployed it was in our infrastructure",
    "start": "1423940",
    "end": "1427510"
  },
  {
    "text": "that collects like a basically a sample",
    "start": "1427510",
    "end": "1430060"
  },
  {
    "text": "of all of the requests inbound to our",
    "start": "1430060",
    "end": "1431440"
  },
  {
    "text": "network we use it for internal research",
    "start": "1431440",
    "end": "1432960"
  },
  {
    "text": "and like anonymize it of course but we",
    "start": "1432960",
    "end": "1436090"
  },
  {
    "text": "use that we actually use the library",
    "start": "1436090",
    "end": "1437830"
  },
  {
    "text": "there if it detects any patterns that",
    "start": "1437830",
    "end": "1440050"
  },
  {
    "text": "could correspond to inbound connections",
    "start": "1440050",
    "end": "1441760"
  },
  {
    "text": "to cloud players Network being monstered",
    "start": "1441760",
    "end": "1444970"
  },
  {
    "text": "in the middle so something that you",
    "start": "1444970",
    "end": "1447430"
  },
  {
    "text": "could use it for us if you'd like to see",
    "start": "1447430",
    "end": "1448960"
  },
  {
    "text": "what inbound traffic to your server",
    "start": "1448960",
    "end": "1450610"
  },
  {
    "text": "looks like and identify if it's ever",
    "start": "1450610",
    "end": "1452770"
  },
  {
    "text": "been intercepted that could be a useful",
    "start": "1452770",
    "end": "1454360"
  },
  {
    "text": "place for using this tool and I think",
    "start": "1454360",
    "end": "1456400"
  },
  {
    "text": "this tool is best used in a data",
    "start": "1456400",
    "end": "1457930"
  },
  {
    "text": "analysis context right and just just add",
    "start": "1457930",
    "end": "1460630"
  },
  {
    "text": "so caddy server which is an open-source",
    "start": "1460630",
    "end": "1462700"
  },
  {
    "text": "server implementation has a version of",
    "start": "1462700",
    "end": "1465250"
  },
  {
    "text": "this man in the middle detection built",
    "start": "1465250",
    "end": "1467920"
  },
  {
    "text": "into it so it's different from the",
    "start": "1467920",
    "end": "1469630"
  },
  {
    "text": "library that we built but it's an",
    "start": "1469630",
    "end": "1471970"
  },
  {
    "text": "earlier version based off the same",
    "start": "1471970",
    "end": "1473260"
  },
  {
    "text": "research paper so so if you're deploying",
    "start": "1473260",
    "end": "1476320"
  },
  {
    "text": "caddy server you can enable this this",
    "start": "1476320",
    "end": "1478600"
  },
  {
    "text": "feature as well so hopefully we'll we'll",
    "start": "1478600",
    "end": "1481120"
  },
  {
    "text": "develop this tool to the point where",
    "start": "1481120",
    "end": "1482350"
  },
  {
    "text": "it's just easy to incorporate into",
    "start": "1482350",
    "end": "1483840"
  },
  {
    "text": "normal server software Thanks",
    "start": "1483840",
    "end": "1487710"
  },
  {
    "text": "next question do we have anyone left",
    "start": "1487710",
    "end": "1491140"
  },
  {
    "text": "microphone over there okay so if this",
    "start": "1491140",
    "end": "1493720"
  },
  {
    "text": "microphone first off congratulations on",
    "start": "1493720",
    "end": "1495970"
  },
  {
    "text": "graduating loop high so the graphs that",
    "start": "1495970",
    "end": "1503230"
  },
  {
    "text": "you showed about percentage of",
    "start": "1503230",
    "end": "1505330"
  },
  {
    "text": "interception was the denominator",
    "start": "1505330",
    "end": "1506950"
  },
  {
    "text": "connections or devices and assuming that",
    "start": "1506950",
    "end": "1511180"
  },
  {
    "text": "it was connections do you think that",
    "start": "1511180",
    "end": "1514440"
  },
  {
    "text": "that's more or less or equivalent",
    "start": "1514440",
    "end": "1517600"
  },
  {
    "text": "li-like interesting two devices like do",
    "start": "1517600",
    "end": "1519190"
  },
  {
    "text": "we know if the behavior of the devices",
    "start": "1519190",
    "end": "1521080"
  },
  {
    "text": "that are being intercepted leads to",
    "start": "1521080",
    "end": "1522790"
  },
  {
    "text": "perhaps more TLS connection so it's",
    "start": "1522790",
    "end": "1524560"
  },
  {
    "text": "really like a small number of devices",
    "start": "1524560",
    "end": "1526330"
  },
  {
    "text": "that accounts for a large amount of",
    "start": "1526330",
    "end": "1528310"
  },
  {
    "text": "bandwidth or so so you're so you're",
    "start": "1528310",
    "end": "1533830"
  },
  {
    "text": "asking if if we think the the breakdown",
    "start": "1533830",
    "end": "1536470"
  },
  {
    "text": "of connections is is for like of all",
    "start": "1536470",
    "end": "1539080"
  },
  {
    "text": "they're all the requests that we get",
    "start": "1539080",
    "end": "1540460"
  },
  {
    "text": "yeah well where the graphs was their",
    "start": "1540460",
    "end": "1542710"
  },
  {
    "text": "breakdown of connections or a breakdown",
    "start": "1542710",
    "end": "1544330"
  },
  {
    "text": "of devices like what's your denominator",
    "start": "1544330",
    "end": "1545980"
  },
  {
    "text": "at that graph",
    "start": "1545980",
    "end": "1546740"
  },
  {
    "text": "oh it's breakdown over total connections",
    "start": "1546740",
    "end": "1548990"
  },
  {
    "text": "yeah over total connections is assuming",
    "start": "1548990",
    "end": "1551809"
  },
  {
    "text": "that do you think that the devices that",
    "start": "1551809",
    "end": "1555440"
  },
  {
    "text": "are being intercepted have basically",
    "start": "1555440",
    "end": "1557840"
  },
  {
    "text": "similar number of connections to non",
    "start": "1557840",
    "end": "1560480"
  },
  {
    "text": "interception devices or is this perhaps",
    "start": "1560480",
    "end": "1562250"
  },
  {
    "text": "inflating or deflating the relative",
    "start": "1562250",
    "end": "1565010"
  },
  {
    "text": "actual like amount of devices or people",
    "start": "1565010",
    "end": "1568220"
  },
  {
    "text": "being intercepted by looking at it at",
    "start": "1568220",
    "end": "1569840"
  },
  {
    "text": "connections instead of devices yes it",
    "start": "1569840",
    "end": "1573080"
  },
  {
    "text": "does",
    "start": "1573080",
    "end": "1574070"
  },
  {
    "text": "yeah correct me if I'm wrong yeah it",
    "start": "1574070",
    "end": "1575870"
  },
  {
    "text": "does it does look like certain devices",
    "start": "1575870",
    "end": "1577640"
  },
  {
    "text": "are intercepted more than others there's",
    "start": "1577640",
    "end": "1581330"
  },
  {
    "text": "a lot of variants here and you can you",
    "start": "1581330",
    "end": "1582740"
  },
  {
    "text": "can check it out on the dashboard we",
    "start": "1582740",
    "end": "1583970"
  },
  {
    "text": "haven't we haven't done a lot of digging",
    "start": "1583970",
    "end": "1588320"
  },
  {
    "text": "to see exactly which devices are the",
    "start": "1588320",
    "end": "1591110"
  },
  {
    "text": "Moose intercepted and stuff so that's",
    "start": "1591110",
    "end": "1592940"
  },
  {
    "text": "some future future stuff that we think",
    "start": "1592940",
    "end": "1595970"
  },
  {
    "text": "would be really interesting thank you we",
    "start": "1595970",
    "end": "1601100"
  },
  {
    "text": "have connections in all three",
    "start": "1601100",
    "end": "1602120"
  },
  {
    "text": "microphones so go on this cue again are",
    "start": "1602120",
    "end": "1605420"
  },
  {
    "text": "you asking so please come find his",
    "start": "1605420",
    "end": "1610730"
  },
  {
    "text": "absolute tweet of us talk to us to be",
    "start": "1610730",
    "end": "1612500"
  },
  {
    "text": "happy to answer them in person thank you",
    "start": "1612500",
    "end": "1613960"
  },
  {
    "text": "thank you",
    "start": "1613960",
    "end": "1616060"
  },
  {
    "text": "[Applause]",
    "start": "1616060",
    "end": "1619760"
  }
]