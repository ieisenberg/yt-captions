[
  {
    "text": "hello everyone we are and here from t Security un laboratory we are senior",
    "start": "5400",
    "end": "12040"
  },
  {
    "text": "security engineers in the lab and we are very honored to have an opportunity to speak at blackhe hat our planation is",
    "start": "12040",
    "end": "19520"
  },
  {
    "text": "titled Cod also a powerful B an analysis",
    "start": "19520",
    "end": "25080"
  },
  {
    "text": "engine the intire presentation is divided into two parts the first part I",
    "start": "25080",
    "end": "30640"
  },
  {
    "text": "will give you some each di of the fundamental of and the second part my",
    "start": "30640",
    "end": "36640"
  },
  {
    "text": "colleag will use Le how to intend code to support binary analysis the outline is displayed here",
    "start": "36640",
    "end": "44280"
  },
  {
    "text": "we will first introduce static analysis and what code then introduce his called",
    "start": "44280",
    "end": "51360"
  },
  {
    "text": "technical points including architecture and and the query language and you plan",
    "start": "51360",
    "end": "59120"
  },
  {
    "text": "how to make it to support binary analysis in order to achieve this goal",
    "start": "59120",
    "end": "64239"
  },
  {
    "text": "we are developed a dedicated debugger finally they will show a",
    "start": "64239",
    "end": "69759"
  },
  {
    "text": "demonstration here we go The Story begins with static program analysis",
    "start": "69759",
    "end": "76080"
  },
  {
    "text": "statical analysis is a key technology in the field of security is very interesting but also very challenging",
    "start": "76080",
    "end": "83479"
  },
  {
    "text": "static Pro program analysis is the art of reading about the behavior of",
    "start": "83479",
    "end": "89240"
  },
  {
    "text": "computer programs without actually running them and and analys is a pro",
    "start": "89240",
    "end": "95799"
  },
  {
    "text": "program that Reas about the behavior of other pro programs you can see that WR a program",
    "start": "95799",
    "end": "102880"
  },
  {
    "text": "to read about other program but without running it it cannot be an easy task for",
    "start": "102880",
    "end": "109600"
  },
  {
    "text": "several decad many US should have be resed but but many pro problems still",
    "start": "109600",
    "end": "115640"
  },
  {
    "text": "left precision and efficiency are the two big problem Pro are the two Bigg",
    "start": "115640",
    "end": "123000"
  },
  {
    "text": "problems in a long period of time many amazing technologies have been developed",
    "start": "123000",
    "end": "128119"
  },
  {
    "text": "for example type reference and Abstract interpret and Abstract interpretation in",
    "start": "128119",
    "end": "136519"
  },
  {
    "text": "the real world or BR are constantly making abstract interpretations uh data and control flow",
    "start": "136519",
    "end": "144760"
  },
  {
    "text": "analysis P analysis pass sensitive and content sensitive analysis conf soling",
    "start": "144760",
    "end": "151040"
  },
  {
    "text": "and sing execution at the same time some amazing",
    "start": "151040",
    "end": "157400"
  },
  {
    "text": "tools have been developed here is a table they is some of the most popular",
    "start": "157400",
    "end": "162440"
  },
  {
    "text": "and famous tools but this is what is c car it was a",
    "start": "162440",
    "end": "170000"
  },
  {
    "text": "Regal it was a research project at Oxford University founded in 206 and",
    "start": "170000",
    "end": "176560"
  },
  {
    "text": "acquired by kab in 2090 as you know GitHub was acquired by Microsoft so C is",
    "start": "176560",
    "end": "183640"
  },
  {
    "text": "not belong to Microsoft is partly open source but the call part for example the is not open",
    "start": "183640",
    "end": "191239"
  },
  {
    "text": "source Cod basic working mode you to SC code make database and run query logic",
    "start": "191239",
    "end": "197840"
  },
  {
    "text": "find code patterns so Cod made the code analysis to code property",
    "start": "197840",
    "end": "204560"
  },
  {
    "text": "query okay let's take a look at architecture of cod cod is a collection",
    "start": "204560",
    "end": "211040"
  },
  {
    "text": "of components theor database qu qu language",
    "start": "211040",
    "end": "218360"
  },
  {
    "text": "compiler call and a lot of libraries the E can be regarded as a language fent so",
    "start": "218360",
    "end": "226080"
  },
  {
    "text": "it's language depends It cast code and make act analysis and stock code",
    "start": "226080",
    "end": "231360"
  },
  {
    "text": "properties to database databased stock cold information can be shared and reused kod introduced a c language the",
    "start": "231360",
    "end": "240079"
  },
  {
    "text": "QR is related with Q Logic but not related with the code that buing",
    "start": "240079",
    "end": "245120"
  },
  {
    "text": "analysis so this language as notic C has developed a material and comprehensive",
    "start": "245120",
    "end": "251599"
  },
  {
    "text": "library that can perform various deta flow analysis such as the classic T",
    "start": "251599",
    "end": "257120"
  },
  {
    "text": "analysis the kind the call engine can be regarded as a database evaluate",
    "start": "257120",
    "end": "264080"
  },
  {
    "text": "engine that's the architecture now let's see how it works this is the Comm",
    "start": "264080",
    "end": "270600"
  },
  {
    "text": "this command to create a database from cumu Project we that cumu is WR in C",
    "start": "270600",
    "end": "276360"
  },
  {
    "text": "language so it need to compare for compare the language the illustrator and",
    "start": "276360",
    "end": "281720"
  },
  {
    "text": "the comper will work in parallel the illustrator mon comp RS field then the",
    "start": "281720",
    "end": "288360"
  },
  {
    "text": "process will B otherwise it inter it",
    "start": "288360",
    "end": "293400"
  },
  {
    "text": "inter compin and add more parameters equ can treat our new to know",
    "start": "293400",
    "end": "300160"
  },
  {
    "text": "the parameters of the comper because it had to know which header FMS and the",
    "start": "300160",
    "end": "306199"
  },
  {
    "text": "library FMS should be included and which FMS will be compared in the left this is",
    "start": "306199",
    "end": "312600"
  },
  {
    "text": "a snapshot taken during compilation showing each TR process working at the",
    "start": "312600",
    "end": "318680"
  },
  {
    "text": "same time its parameters are very similar to the to to of the comper",
    "start": "318680",
    "end": "325960"
  },
  {
    "text": "process but how does exor interrupt the comper it is some revers on code this C and is",
    "start": "325960",
    "end": "334720"
  },
  {
    "text": "written in Java so it's not very difficult to do some reverse engineer we can see that at the beginning of the",
    "start": "334720",
    "end": "341120"
  },
  {
    "text": "compiler process we can see that at the beginning of the compilation process Cod car",
    "start": "341120",
    "end": "347120"
  },
  {
    "text": "launched a preload twer process we also do some RSE and of that",
    "start": "347120",
    "end": "352800"
  },
  {
    "text": "process this assembling code shows that preload twer will inject something into",
    "start": "352800",
    "end": "358479"
  },
  {
    "text": "L preload and GDB told us is injected",
    "start": "358479",
    "end": "365000"
  },
  {
    "text": "lio2 L prod so every newly created",
    "start": "365000",
    "end": "370759"
  },
  {
    "text": "process will load the LI treaser modu lier modu detect whether",
    "start": "370759",
    "end": "378199"
  },
  {
    "text": "the host process is a comp process if so lach an process use the parameters of",
    "start": "378199",
    "end": "384160"
  },
  {
    "text": "the comper process and add some more parameters the parameter observation",
    "start": "384160",
    "end": "390680"
  },
  {
    "text": "added to e Trad process are obtained from a configuration film The the",
    "start": "390680",
    "end": "396319"
  },
  {
    "text": "configuration film is name the compiler treating pack this is the whole",
    "start": "396319",
    "end": "403319"
  },
  {
    "text": "L now let's talk about the database in Factor generate a Trav F firstly then",
    "start": "403319",
    "end": "410400"
  },
  {
    "text": "convert it convert the Trav F to the final database but not generate a database directly here we have to",
    "start": "410400",
    "end": "418000"
  },
  {
    "text": "mention another important f DB scheme DB scheme is a guard doent for the content",
    "start": "418000",
    "end": "425680"
  },
  {
    "text": "extraction exra extracts information according to the F first of all let's map all the F",
    "start": "425680",
    "end": "433160"
  },
  {
    "text": "together and see an example the left diagram is a soft code we do Thum test",
    "start": "433160",
    "end": "439680"
  },
  {
    "text": "the central diagram is the to Thum and the right diagram is DB scan file ex SC",
    "start": "439680",
    "end": "446440"
  },
  {
    "text": "code extract informations described in DB scheme and the code information",
    "start": "446440",
    "end": "452400"
  },
  {
    "text": "tracked all will be placed at TR FM TR FM is a Tex f is not convenient for",
    "start": "452400",
    "end": "458599"
  },
  {
    "text": "further process and it will be ConEd to a stred DB",
    "start": "458599",
    "end": "463759"
  },
  {
    "text": "fil let's use Pro the DB SK file take a look at the left backround functions is",
    "start": "463759",
    "end": "471360"
  },
  {
    "text": "a collection of all function it has a unical name label as function can be",
    "start": "471360",
    "end": "477520"
  },
  {
    "text": "referenced by this name and uh it also have two Fields name and C we can see",
    "start": "477520",
    "end": "484159"
  },
  {
    "text": "that name is string and C is in K one means is a normal function and a two",
    "start": "484159",
    "end": "489800"
  },
  {
    "text": "means a Constructor uh another example is a little is a little complicated is a",
    "start": "489800",
    "end": "498159"
  },
  {
    "text": "statement it's reference name is atmt it has two Fields kind and the location",
    "start": "498159",
    "end": "504680"
  },
  {
    "text": "kind means means kind of the statement and the location position of the statement in the source code it has the",
    "start": "504680",
    "end": "513360"
  },
  {
    "text": "line start column take notice location is a reference to another",
    "start": "513360",
    "end": "520440"
  },
  {
    "text": "t uh now let's use part the t f in the left diagram function recall all the",
    "start": "520440",
    "end": "527080"
  },
  {
    "text": "function defined in test say and 193 the index it recalls the",
    "start": "527080",
    "end": "534480"
  },
  {
    "text": "function name and each name is the streaming as open is kind is one which",
    "start": "534480",
    "end": "540800"
  },
  {
    "text": "means is a normal function another example is a statement it's kind is six",
    "start": "540800",
    "end": "546720"
  },
  {
    "text": "which means a return statement and the location is 16",
    "start": "546720",
    "end": "551920"
  },
  {
    "text": "3611 if we take take that that location in at test c s found is really is really",
    "start": "551920",
    "end": "560000"
  },
  {
    "text": "return statement so as we said before theed Cod information are all St",
    "start": "560000",
    "end": "566839"
  },
  {
    "text": "into the TR F and remember is a test F how does the tri FM be converted to a",
    "start": "566839",
    "end": "574040"
  },
  {
    "text": "data FM database FM is a key operation the function of the function name of open",
    "start": "574040",
    "end": "582279"
  },
  {
    "text": "will go through some encoding and become a number value then other informations about the function will also go through",
    "start": "582279",
    "end": "588920"
  },
  {
    "text": "a similar encoding process and and the entire function will auta become an in",
    "start": "588920",
    "end": "595240"
  },
  {
    "text": "tub the tub will be written to a database finally look at the I FMS",
    "start": "595240",
    "end": "601200"
  },
  {
    "text": "that's the real database FM and take a look at content I have C it see are the",
    "start": "601200",
    "end": "607480"
  },
  {
    "text": "he format of the function information mentioned earlier so so the in value in",
    "start": "607480",
    "end": "613079"
  },
  {
    "text": "t Pro can be regarded as the index to the actual results but how to locate the actual results from index is a complex",
    "start": "613079",
    "end": "621279"
  },
  {
    "text": "and delicious process and we will not go into further details",
    "start": "621279",
    "end": "626920"
  },
  {
    "text": "here okay now it's time to about C language the C language is a declarative",
    "start": "626920",
    "end": "633440"
  },
  {
    "text": "logic programming language with class and O is target language independent",
    "start": "633440",
    "end": "639120"
  },
  {
    "text": "which means you should only focus on cre logic but not the target language Tab",
    "start": "639120",
    "end": "644519"
  },
  {
    "text": "and also for has developed many buildin libraries such as most the common data",
    "start": "644519",
    "end": "650279"
  },
  {
    "text": "flow analysis T analysis the diagram on the left shows the layer of the c c language firstly",
    "start": "650279",
    "end": "658839"
  },
  {
    "text": "the query language V the query language code will be",
    "start": "658839",
    "end": "664079"
  },
  {
    "text": "detered and converted to data log language in COD is named the D then the",
    "start": "664079",
    "end": "670680"
  },
  {
    "text": "compiler will do some optim optims and lowering the converted to I the I is",
    "start": "670680",
    "end": "678600"
  },
  {
    "text": "used commonly in circle language and qr2 Dr is first the",
    "start": "678600",
    "end": "685519"
  },
  {
    "text": "lowering pH the first diagram is a simple QR code example it's very simple it list",
    "start": "685519",
    "end": "692320"
  },
  {
    "text": "all the functions that will call Dr open function it will be compared to Dr and",
    "start": "692320",
    "end": "698440"
  },
  {
    "text": "at the same time some of the DB scale FS will also be compared to Dr codes so as",
    "start": "698440",
    "end": "703800"
  },
  {
    "text": "a thought it's a lowering process high level user friendly language compared to Mo friendly language in Q sour code we",
    "start": "703800",
    "end": "712320"
  },
  {
    "text": "can see select from bear after compare this kind of high level P language",
    "start": "712320",
    "end": "718320"
  },
  {
    "text": "converted to table queries and po calcul",
    "start": "718320",
    "end": "723839"
  },
  {
    "text": "calculus the second lower pH is Dr to I is the Contin lowering data",
    "start": "723839",
    "end": "730880"
  },
  {
    "text": "logic had been compared to I operations in I code we can see classic drawing un",
    "start": "730880",
    "end": "738279"
  },
  {
    "text": "operations and we can see R1 R2 R3 is not register us we can regard it as a",
    "start": "738279",
    "end": "745600"
  },
  {
    "text": "temporary results I operations are already very low level set low level set operations and B",
    "start": "745600",
    "end": "753920"
  },
  {
    "text": "hyper okay the final call component is",
    "start": "753920",
    "end": "760920"
  },
  {
    "text": "the evolution engine I called are executed by this engine but I code is",
    "start": "760920",
    "end": "767440"
  },
  {
    "text": "not executed one by one a set of logic related a set of a set of logic Rel",
    "start": "767440",
    "end": "774320"
  },
  {
    "text": "together and cannot be separated this set of I ORS called a qu tree the engine",
    "start": "774320",
    "end": "780560"
  },
  {
    "text": "will consume a tree at a time the I operations listed on the left diagram is a qu tree it will be executed from",
    "start": "780560",
    "end": "787920"
  },
  {
    "text": "bottom to up the eny of cod supports recursion eval evaluations after this",
    "start": "787920",
    "end": "796199"
  },
  {
    "text": "evaluation are fa example a DL open function the will be",
    "start": "796199",
    "end": "802399"
  },
  {
    "text": "done okay it's time to sum all things up code has has sever long FS",
    "start": "802399",
    "end": "810480"
  },
  {
    "text": "asor Cod information to analysis and information to database code implemented",
    "start": "810480",
    "end": "817040"
  },
  {
    "text": "a data log query language to query code property code properties as database and",
    "start": "817040",
    "end": "824079"
  },
  {
    "text": "regard code analysis as database curing after introduced so many",
    "start": "824079",
    "end": "829920"
  },
  {
    "text": "implementation details about C they can figure out the advance of CLS approach",
    "start": "829920",
    "end": "837120"
  },
  {
    "text": "the architectural design is a very ENT highly modular and separated the front end and back",
    "start": "837120",
    "end": "843320"
  },
  {
    "text": "end is a phable Implement of databased Technology conver code analysis to data",
    "start": "843320",
    "end": "849800"
  },
  {
    "text": "cery well designed Cy language focus on code pattern or semantic Magic One C",
    "start": "849800",
    "end": "855920"
  },
  {
    "text": "language can handle many other code language s to a unified C language the",
    "start": "855920",
    "end": "861959"
  },
  {
    "text": "same logic for different analysis tasks can be reused on large scale in the",
    "start": "861959",
    "end": "867160"
  },
  {
    "text": "second part my col will continue to introduce all to",
    "start": "867160",
    "end": "873240"
  },
  {
    "text": "support Banis I hand off the T game hello everyone my name is John let",
    "start": "873240",
    "end": "881040"
  },
  {
    "text": "me introduce Cod care for binary to you all and cod care is a tool with excellent architecture design that",
    "start": "881040",
    "end": "887959"
  },
  {
    "text": "supports multiple programming language during the use of cool care we had an",
    "start": "887959",
    "end": "893480"
  },
  {
    "text": "idea of reverse engineer it through reverse enging we discovered that that",
    "start": "893480",
    "end": "898959"
  },
  {
    "text": "we could make a support binary file analysis and the existing close Source",
    "start": "898959",
    "end": "904880"
  },
  {
    "text": "engine that turn into a universal analysis platform for both sour code and",
    "start": "904880",
    "end": "911480"
  },
  {
    "text": "b f to achieve this idea we made some modifications to Cod car's components",
    "start": "911480",
    "end": "918240"
  },
  {
    "text": "firstly we redesigned and developed a DB scheme for bar is to better adapt to the",
    "start": "918240",
    "end": "925759"
  },
  {
    "text": "characteristics of boundary funds secondly we inut the extractor to",
    "start": "925759",
    "end": "931720"
  },
  {
    "text": "correctly extract key information from boundary F finally we developer a q",
    "start": "931720",
    "end": "937040"
  },
  {
    "text": "library for binary files so that users can perform more in-depth binary",
    "start": "937040",
    "end": "942199"
  },
  {
    "text": "analysis use code Q with",
    "start": "942199",
    "end": "949120"
  },
  {
    "text": "this with this modifications and improve improvements good care for bar has",
    "start": "949120",
    "end": "955240"
  },
  {
    "text": "become powerful for that c for analysis of of both source code and body fils",
    "start": "955240",
    "end": "961519"
  },
  {
    "text": "this involes developers and secret experts to comprehensively review and",
    "start": "961519",
    "end": "967199"
  },
  {
    "text": "evaluate the security and the reliability of software whether is s",
    "start": "967199",
    "end": "973199"
  },
  {
    "text": "called auditing or one ability analysis of bar files Cod care for bar can",
    "start": "973199",
    "end": "979279"
  },
  {
    "text": "provide strong support and convenience our design principle is as",
    "start": "979279",
    "end": "985880"
  },
  {
    "text": "follows start F architecture string and function info of the binary St the",
    "start": "985880",
    "end": "992959"
  },
  {
    "text": "information of instruction registers and basical block inside the function start",
    "start": "992959",
    "end": "999440"
  },
  {
    "text": "the use and Dev information of register inside the function start the",
    "start": "999440",
    "end": "1004680"
  },
  {
    "text": "information of global variables and pointers uh store the memory layout",
    "start": "1004680",
    "end": "1010279"
  },
  {
    "text": "information address section Etc uh this section is about some",
    "start": "1010279",
    "end": "1017880"
  },
  {
    "text": "details of DB SC design which determines what information the extractor needs to",
    "start": "1017880",
    "end": "1024120"
  },
  {
    "text": "extract from the binary file and what metadata the Q Library need to provide a",
    "start": "1024120",
    "end": "1029558"
  },
  {
    "text": "complex functionality the current version of the DB scheme start file",
    "start": "1029559",
    "end": "1034720"
  },
  {
    "text": "information which mean allows us to create relationships between multiple files in addition there is some basical",
    "start": "1034720",
    "end": "1042959"
  },
  {
    "text": "information such as export functions import functions functions instruction",
    "start": "1042959",
    "end": "1049320"
  },
  {
    "text": "redist and STS to support SSA and data flow analysis in the Q Library we also",
    "start": "1049320",
    "end": "1057200"
  },
  {
    "text": "saw information about the use and DEP of instructions the story of this",
    "start": "1057200",
    "end": "1062679"
  },
  {
    "text": "information is crucial for the normal operation of extraor and",
    "start": "1062679",
    "end": "1067799"
  },
  {
    "text": "theate as it provides necessary context and",
    "start": "1067799",
    "end": "1073200"
  },
  {
    "text": "metadata and currently there are already very much DEC completion for on the",
    "start": "1073200",
    "end": "1079039"
  },
  {
    "text": "market which means we don't have to develop a similar tool from scratch in",
    "start": "1079039",
    "end": "1084159"
  },
  {
    "text": "this project we use Ad Pro as our extractor the advantage of Ad Pro is",
    "start": "1084159",
    "end": "1089919"
  },
  {
    "text": "that it's both a wide range of file formats and architectures and provides a",
    "start": "1089919",
    "end": "1095600"
  },
  {
    "text": "very rich API this means that we only need to extract information from buyer",
    "start": "1095600",
    "end": "1101240"
  },
  {
    "text": "files based on the DB schem or without having to write our own pass another",
    "start": "1101240",
    "end": "1107880"
  },
  {
    "text": "advantage of using a pro as an extractor is that it has been widely used and",
    "start": "1107880",
    "end": "1113559"
  },
  {
    "text": "tested so we can reli easily integrate it into our workflow in short use met",
    "start": "1113559",
    "end": "1121240"
  },
  {
    "text": "complication tool can greatly improve our work efficiency and accuracy",
    "start": "1121240",
    "end": "1126559"
  },
  {
    "text": "allowing us to analyze and understand the information in barning files more",
    "start": "1126559",
    "end": "1133799"
  },
  {
    "text": "quickly the B has complete the creation of two most important key components for",
    "start": "1134320",
    "end": "1141159"
  },
  {
    "text": "creating a database now they need to be integrated into the Cod care dat",
    "start": "1141159",
    "end": "1147000"
  },
  {
    "text": "creation workflow below is how we support supplement the configuration",
    "start": "1147000",
    "end": "1152480"
  },
  {
    "text": "file needed for the workflow through Dynamic debugging we have configured and",
    "start": "1152480",
    "end": "1158240"
  },
  {
    "text": "register a new language operation since we are doing B analysis there is no need",
    "start": "1158240",
    "end": "1165120"
  },
  {
    "text": "to configure a compile however the Cod engine internally check for this file so we",
    "start": "1165120",
    "end": "1173039"
  },
  {
    "text": "need to create an empty B finally we need to create a Stace file use the code",
    "start": "1173039",
    "end": "1179880"
  },
  {
    "text": "data metri command and the main task of aut",
    "start": "1179880",
    "end": "1186120"
  },
  {
    "text": "build.sh is collect and compress the Trap file generated by the add Pro",
    "start": "1186120",
    "end": "1191320"
  },
  {
    "text": "plugin and copy to the corresponding database directory or for the code care",
    "start": "1191320",
    "end": "1197320"
  },
  {
    "text": "engine to read and generate the database this process ensure that we can",
    "start": "1197320",
    "end": "1203640"
  },
  {
    "text": "effectively use the date generate by either Pro plug in and integrate it into",
    "start": "1203640",
    "end": "1209200"
  },
  {
    "text": "the analysis follow of the Cal engine in this way we can better utilize autobuild",
    "start": "1209200",
    "end": "1216240"
  },
  {
    "text": "script to generate database that can be used for COD",
    "start": "1216240",
    "end": "1222559"
  },
  {
    "text": "analysis the current version of the code care library is still its early stages",
    "start": "1223400",
    "end": "1230520"
  },
  {
    "text": "but it already provides some basical functionality for query binary file",
    "start": "1230520",
    "end": "1235960"
  },
  {
    "text": "information this offers users a convenient way to orig the required data",
    "start": "1235960",
    "end": "1241720"
  },
  {
    "text": "and however we also recognize the need for provider Advantage features such as",
    "start": "1241720",
    "end": "1247880"
  },
  {
    "text": "control flow analysis data flow analysis tin analysis as well as support for SSA",
    "start": "1247880",
    "end": "1255559"
  },
  {
    "text": "and cphs our initial idea was to pting feature from other languages into B St",
    "start": "1255559",
    "end": "1262840"
  },
  {
    "text": "analysis and however during the pting process we discover that the information",
    "start": "1262840",
    "end": "1268480"
  },
  {
    "text": "in source code is more comprehensive than that in binary FS therefore some po",
    "start": "1268480",
    "end": "1274640"
  },
  {
    "text": "modifications can be directly used and we must be developed a new functionality",
    "start": "1274640",
    "end": "1281080"
  },
  {
    "text": "specifically for boundary features also",
    "start": "1281080",
    "end": "1286159"
  },
  {
    "text": "the current version has some limit misss we we can continuously work to expand",
    "start": "1286159",
    "end": "1292640"
  },
  {
    "text": "and optimize the C lary our goal is making it powerful and comprehensive",
    "start": "1292640",
    "end": "1298200"
  },
  {
    "text": "tool that can meet various need in bistic analysis we are well of the expected",
    "start": "1298200",
    "end": "1305679"
  },
  {
    "text": "users have full functionality so we will continue to invest resource and E",
    "start": "1305679",
    "end": "1311640"
  },
  {
    "text": "efforts to improve the Q Library if that it meet users requirements and provide",
    "start": "1311640",
    "end": "1318919"
  },
  {
    "text": "richer and more com comprehensive features we believe that over time the C",
    "start": "1318919",
    "end": "1324600"
  },
  {
    "text": "library will become improv tool offering users more value and",
    "start": "1324600",
    "end": "1331480"
  },
  {
    "text": "convenience and the usage of library in B file is similar to that of libraries",
    "start": "1331640",
    "end": "1337760"
  },
  {
    "text": "in other language this simple example use the export function type provide by",
    "start": "1337760",
    "end": "1343400"
  },
  {
    "text": "the binary Q library to query the name of all exported",
    "start": "1343400",
    "end": "1349600"
  },
  {
    "text": "functions below is a example of writing a complex compation query using the",
    "start": "1349600",
    "end": "1355640"
  },
  {
    "text": "binary Q Library uh we want to",
    "start": "1355640",
    "end": "1361520"
  },
  {
    "text": "debug U to help us better understand the library of C language also code has",
    "start": "1361520",
    "end": "1368080"
  },
  {
    "text": "provided a relevant documentation the code volume in code library is large use",
    "start": "1368080",
    "end": "1373840"
  },
  {
    "text": "many syntatic sugar and reading and understand the algorithm implementation",
    "start": "1373840",
    "end": "1380279"
  },
  {
    "text": "is very time consumed and the implementation inal can be for and SCH",
    "start": "1380279",
    "end": "1386799"
  },
  {
    "text": "therefore we de an I level Dynamic similar to a tradition tradition black",
    "start": "1386799",
    "end": "1392880"
  },
  {
    "text": "box assembly divers our devor can treat the details of Co programmers we use",
    "start": "1392880",
    "end": "1399760"
  },
  {
    "text": "vest as a front end and in Tech with jdb and jdb control some key functions with",
    "start": "1399760",
    "end": "1406880"
  },
  {
    "text": "reverse Reverse engering by attaching to the DVM in this way we developer a debuger",
    "start": "1406880",
    "end": "1414200"
  },
  {
    "text": "without source code have as speci understand Q language and some some bus",
    "start": "1414200",
    "end": "1420960"
  },
  {
    "text": "inting in developing Q Library this is where we find the Ed",
    "start": "1420960",
    "end": "1427840"
  },
  {
    "text": "point for run I after clear language is compile into a is not executed in order",
    "start": "1427840",
    "end": "1436080"
  },
  {
    "text": "of the orange code but rather by calculating the dependency relationship",
    "start": "1436080",
    "end": "1441159"
  },
  {
    "text": "between increasing the first two run are tables directly reference in followed by",
    "start": "1441159",
    "end": "1448120"
  },
  {
    "text": "the intermediate tables generated after operation in on Dat tables and finally",
    "start": "1448120",
    "end": "1455520"
  },
  {
    "text": "the operations or results obtained from the these intermediate tables this entry",
    "start": "1455520",
    "end": "1461880"
  },
  {
    "text": "point not only allow me to control the execution and the path of I but also op",
    "start": "1461880",
    "end": "1469200"
  },
  {
    "text": "the dist Sim of run a which is simply the development workload of our",
    "start": "1469200",
    "end": "1477960"
  },
  {
    "text": "B the previous discussion mentioned the execution all all inclusing and I but",
    "start": "1478799",
    "end": "1485559"
  },
  {
    "text": "didn't elaborate on how they are organized and executed in fact is",
    "start": "1485559",
    "end": "1492000"
  },
  {
    "text": "inclosing organizes some R in a tree structure in memory this r can be",
    "start": "1492000",
    "end": "1498279"
  },
  {
    "text": "queries felting agregation Etc and they are organized together according to",
    "start": "1498279",
    "end": "1505399"
  },
  {
    "text": "their dependences from I Tre when the I is",
    "start": "1505399",
    "end": "1510520"
  },
  {
    "text": "executed they are converted into corresponding P for actual competition",
    "start": "1510520",
    "end": "1516320"
  },
  {
    "text": "and operation this conversion process is accompl accomplished by calculating the",
    "start": "1516320",
    "end": "1523279"
  },
  {
    "text": "dependences between inclosing and the specific conversion relationship is",
    "start": "1523279",
    "end": "1529799"
  },
  {
    "text": "showing about this Tre structure organization and conversion relationship",
    "start": "1529799",
    "end": "1536320"
  },
  {
    "text": "design makes the execution of I efficient and convergent for the buing",
    "start": "1536320",
    "end": "1542279"
  },
  {
    "text": "and the optimization after being converted to a",
    "start": "1542279",
    "end": "1548080"
  },
  {
    "text": "PO I evaluate method we are regressively call a node the above hold call the",
    "start": "1548080",
    "end": "1557039"
  },
  {
    "text": "right internal method of abstract relationship problem which retries the",
    "start": "1557039",
    "end": "1563200"
  },
  {
    "text": "content of specifical con table according to the requirement of",
    "start": "1563200",
    "end": "1570120"
  },
  {
    "text": "a each table is abstract as a p relation for storage during ex execution each no",
    "start": "1570120",
    "end": "1578840"
  },
  {
    "text": "corresponds to a p relation and the the N are connected by data streams in",
    "start": "1578840",
    "end": "1585399"
  },
  {
    "text": "actual operation hpg is loaded into memory for",
    "start": "1585399",
    "end": "1591840"
  },
  {
    "text": "processing we have learned how to use jdb to control the running of the code",
    "start": "1593360",
    "end": "1599520"
  },
  {
    "text": "engine I and obing the de compile test of the run now let's explore how to find",
    "start": "1599520",
    "end": "1605640"
  },
  {
    "text": "the Ed point of H table storage by the Cod engine the Cod engine s the table",
    "start": "1605640",
    "end": "1612640"
  },
  {
    "text": "generated by reading the local database and evaluting the inclose in form of",
    "start": "1612640",
    "end": "1618880"
  },
  {
    "text": "page relation to a map therefore we need we only need to read according to the",
    "start": "1618880",
    "end": "1625080"
  },
  {
    "text": "storage for format of tabl in t page relation use jdb and the form of relation is shown as",
    "start": "1625080",
    "end": "1633600"
  },
  {
    "text": "the bottom in addition there is spe specific impation in our C",
    "start": "1633600",
    "end": "1642080"
  },
  {
    "text": "debugger finally we made a modification to the c l parameters so that",
    "start": "1642320",
    "end": "1648320"
  },
  {
    "text": "it could be all low jdb connections at the user system and turning perameters",
    "start": "1648320",
    "end": "1654640"
  },
  {
    "text": "that are not publicly available in COD care documentation in this parameters",
    "start": "1654640",
    "end": "1661640"
  },
  {
    "text": "all the Cod care engine to recall the engin execution state in test form this",
    "start": "1661640",
    "end": "1668080"
  },
  {
    "text": "help us to this help us to use Dynamic divider to view previous R encoders so",
    "start": "1668080",
    "end": "1676399"
  },
  {
    "text": "that I don't have to use jdb to implement TR",
    "start": "1676399",
    "end": "1682440"
  },
  {
    "text": "functionality we have already talked about a lot of theoretical knowledge and",
    "start": "1682880",
    "end": "1688399"
  },
  {
    "text": "now through the following demonstration video you can more intely understand how",
    "start": "1688399",
    "end": "1694240"
  },
  {
    "text": "to use C divider and how to divide QR",
    "start": "1694240",
    "end": "1699559"
  },
  {
    "text": "code U firstly use code QR debugger to start",
    "start": "1700960",
    "end": "1706120"
  },
  {
    "text": "the QR test to be debed and use the logd",
    "start": "1706120",
    "end": "1711640"
  },
  {
    "text": "perameter to configure the D directory where the TR file will be",
    "start": "1711640",
    "end": "1718600"
  },
  {
    "text": "placed and next use the default configuration to attach the process",
    "start": "1718760",
    "end": "1724840"
  },
  {
    "text": "start by GD",
    "start": "1724840",
    "end": "1728158"
  },
  {
    "text": "me okay is stop on",
    "start": "1732799",
    "end": "1738480"
  },
  {
    "text": "and the global s all of all of the PO relation C record the running in closing",
    "start": "1738480",
    "end": "1745960"
  },
  {
    "text": "and you can view the I code of this",
    "start": "1745960",
    "end": "1751158"
  },
  {
    "text": "inclosing um we can see the current running I and step through",
    "start": "1752919",
    "end": "1760240"
  },
  {
    "text": "it uh with for previous inclosing to uh execution and exract a specific table",
    "start": "1760360",
    "end": "1769480"
  },
  {
    "text": "from database wait and",
    "start": "1769480",
    "end": "1774799"
  },
  {
    "text": "okay this are inclosing of scan",
    "start": "1774799",
    "end": "1780799"
  },
  {
    "text": "functions and you can see the value in pation uh through",
    "start": "1782960",
    "end": "1789880"
  },
  {
    "text": "watch this is value",
    "start": "1793880",
    "end": "1799320"
  },
  {
    "text": "okay next step uh you can find the previously",
    "start": "1800679",
    "end": "1808159"
  },
  {
    "text": "running eyes through the log and the check",
    "start": "1808159",
    "end": "1813440"
  },
  {
    "text": "um and check relation between the input and out output T of um preceding in",
    "start": "1813640",
    "end": "1822640"
  },
  {
    "text": "closing after running",
    "start": "1822640",
    "end": "1828200"
  },
  {
    "text": "now we can see the our log",
    "start": "1828200",
    "end": "1832120"
  },
  {
    "text": "file we can check the input table and out",
    "start": "1842399",
    "end": "1848200"
  },
  {
    "text": "table",
    "start": "1856240",
    "end": "1859240"
  },
  {
    "text": "and the out table will be displayed in log",
    "start": "1863440",
    "end": "1868679"
  },
  {
    "text": "file okay continue after compilation we can see",
    "start": "1868679",
    "end": "1873880"
  },
  {
    "text": "the query result and that's all all for",
    "start": "1873880",
    "end": "1882600"
  },
  {
    "text": "demonstration uh we will be open source it soon so stay",
    "start": "1884399",
    "end": "1890159"
  },
  {
    "text": "tuned oh",
    "start": "1890159",
    "end": "1893440"
  },
  {
    "text": "thanks",
    "start": "1896519",
    "end": "1899519"
  }
]