[
  {
    "text": "yeah all right everyone we're GNA get started here the talk is Ozone hit or",
    "start": "40120",
    "end": "46120"
  },
  {
    "text": "hips unbreakable Windows uh if you guys have cell phones can you either turn them off or put them on vibrate now",
    "start": "46120",
    "end": "53000"
  },
  {
    "text": "everyone if you want double check at least that's always nice um this is Eugene he's going to be giv the talk um",
    "start": "53000",
    "end": "59320"
  },
  {
    "text": "enjoy thanks CH can everyone hear me all right",
    "start": "59320",
    "end": "64439"
  },
  {
    "text": "so uh my name is Eugene and I'm going to talk about ozen hips on breakable windows I apologize for the for the",
    "start": "64439",
    "end": "70799"
  },
  {
    "text": "subject it's a bit tongue and cheek but I figur no one else would come if just going to be yet another Windows talk so",
    "start": "70799",
    "end": "78240"
  },
  {
    "text": "um there were quite a few talks on Windows uh especially in the zero day attack so uh you probably know there is",
    "start": "78240",
    "end": "84920"
  },
  {
    "text": "no such thing as as unbreakable Windows even if your machine is Windows box is",
    "start": "84920",
    "end": "90079"
  },
  {
    "text": "unplugged from the network all you need really is just a USB drive uh or USB stick come up to it and",
    "start": "90079",
    "end": "97399"
  },
  {
    "text": "uh and you got Kel zero so uh I'm going to talk about ozen hips which is a system that I developed last year which",
    "start": "97399",
    "end": "104200"
  },
  {
    "text": "uh lcks down U windows boxes Windows 2000 and up um so what is hips so hips is uh is",
    "start": "104200",
    "end": "113880"
  },
  {
    "text": "this new new kit in the blog um I guess it stands for a host intrusion prevention system",
    "start": "113880",
    "end": "120119"
  },
  {
    "text": "um so some of you might have heard of you know it's you know it all started cover with IDs and network IDs and then",
    "start": "120119",
    "end": "125399"
  },
  {
    "text": "we have Network IPS and then we have host IPS so what what's a host IPS well",
    "start": "125399",
    "end": "132360"
  },
  {
    "text": "a host IPS is I mean it's basically any piece of software running on an end",
    "start": "132360",
    "end": "137560"
  },
  {
    "text": "system on on on on a server or your desktop which protects the underlying system uh so it's is as easy as that um",
    "start": "137560",
    "end": "145680"
  },
  {
    "text": "in Enterprise develop uh deployments hips would be an agent running on a",
    "start": "145680",
    "end": "151000"
  },
  {
    "text": "machine be a server or desktop uh you would have a centralized Management console which collects a logs which",
    "start": "151000",
    "end": "156400"
  },
  {
    "text": "pushes out updates stuff like that so all the security enforcement is done from from from the end point uh and",
    "start": "156400",
    "end": "162800"
  },
  {
    "text": "management usually done elsewhere uh usually in some central place so I'm only going to talk about the interesting",
    "start": "162800",
    "end": "168280"
  },
  {
    "text": "stuff uh which is the enforcement on the on the endpoint n none of the management um talks so we're going to talk about a",
    "start": "168280",
    "end": "175440"
  },
  {
    "text": "variety of things that ozen does uh it it does quite a few things uh um or tries to do quite a few things at least",
    "start": "175440",
    "end": "182920"
  },
  {
    "text": "uh tries to protect against various memory attacks uh buffer flows formula bugs all that good stuff uh it tries to",
    "start": "182920",
    "end": "190440"
  },
  {
    "text": "protect uh processes themselves the application uh using sandboxing we're",
    "start": "190440",
    "end": "195560"
  },
  {
    "text": "going to talk about more about that protects the underlying system so the windows uh hardens the operating system",
    "start": "195560",
    "end": "202280"
  },
  {
    "text": "uh it it protects itself and uh we'll see why and I'm going to show you a little demo at the end about how how it",
    "start": "202280",
    "end": "208920"
  },
  {
    "text": "all comes together so since ozen's quite a few things I",
    "start": "208920",
    "end": "214319"
  },
  {
    "text": "mean let's let's try to understand uh what are we doing and and why so when ozen was designed when I designed ozen I",
    "start": "214319",
    "end": "221040"
  },
  {
    "text": "tried to address most of the attack vectors so from remote execution to local privilege escalation to hiding",
    "start": "221040",
    "end": "226640"
  },
  {
    "text": "attracts Etc so I try to think in generally what are the attack vectors um that are out there today and how can we",
    "start": "226640",
    "end": "233480"
  },
  {
    "text": "prevent them so as probably most of you are familiar with uh when an attacker tries to gain access to your system and",
    "start": "233480",
    "end": "240560"
  },
  {
    "text": "let's assume a service system in this case and you know we're not concerned with emailing uh some some executables",
    "start": "240560",
    "end": "247760"
  },
  {
    "text": "to uh to to a clueless person we talk about attacking remote system is usually achieved by means of remote buffer flow",
    "start": "247760",
    "end": "254599"
  },
  {
    "text": "um so you have a system you analyze what services are running on it you find an",
    "start": "254599",
    "end": "259600"
  },
  {
    "text": "exploit you write an exploit whatever um and you own a machine so it can be a",
    "start": "259600",
    "end": "264880"
  },
  {
    "text": "buff overflow a forma bug uh Heap stack Overflow it doesn't really matter so to address this this particular TCH Vector",
    "start": "264880",
    "end": "271560"
  },
  {
    "text": "we have to protect against a variety of memory memory attacks uh so it will be a buff Ral protection as well as some of",
    "start": "271560",
    "end": "277080"
  },
  {
    "text": "the sand boxing can also help so once someone owns your machine",
    "start": "277080",
    "end": "282160"
  },
  {
    "text": "or you own someone machine you would usually try to had you try to hide yourself um so you would clean the logs",
    "start": "282160",
    "end": "289440"
  },
  {
    "text": "you would Cho in the binaries you would load kernel modules you do all kind of nasty things that will allow you to",
    "start": "289440",
    "end": "294840"
  },
  {
    "text": "first of all to hide yourself and then give yourself later access without trying to exploit uh the service again",
    "start": "294840",
    "end": "301919"
  },
  {
    "text": "so to to do that we do you know we lock down Windows we disallow tempering with system resources we disallow loading of",
    "start": "301919",
    "end": "308320"
  },
  {
    "text": "authorized code uh user land kernel land and and and all that good stuff so let's",
    "start": "308320",
    "end": "313360"
  },
  {
    "text": "start with uh stage one let's start with uh memory attacks so the production layer um is",
    "start": "313360",
    "end": "320199"
  },
  {
    "text": "responsible for guarding against a variety of attacks which we classify as memory corruption attacks uh and these",
    "start": "320199",
    "end": "326919"
  },
  {
    "text": "include you know buffer overflow stack keep form of bugs overwriting function pointers overwriting anything that will",
    "start": "326919",
    "end": "334120"
  },
  {
    "text": "essentially give you control in the end so it can be even you know it can be",
    "start": "334120",
    "end": "339800"
  },
  {
    "text": "even some attack vectors we're not familiar with today but if they rely on overriding and doing something funny in",
    "start": "339800",
    "end": "345199"
  },
  {
    "text": "memory and then trans control we should be able to stop those so the memory corruption attacks",
    "start": "345199",
    "end": "352160"
  },
  {
    "text": "even though they're very different in terms of how they get exploited they're quite similar in terms of how they actually work underneath so first of all",
    "start": "352160",
    "end": "359160"
  },
  {
    "text": "you inject a malicious payload so you send a very long string uh or you send",
    "start": "359160",
    "end": "364840"
  },
  {
    "text": "uh an integer some some a very very large integer or you send a percent sign",
    "start": "364840",
    "end": "370160"
  },
  {
    "text": "n to a format as a format string so you inject the payload U that's one two once",
    "start": "370160",
    "end": "376400"
  },
  {
    "text": "you injected the payload you want something to happen most likely you want your code to run so you need to transfer",
    "start": "376400",
    "end": "383000"
  },
  {
    "text": "control uh to your payload that's step two there's nothing we can do to prevent",
    "start": "383000",
    "end": "388680"
  },
  {
    "text": "payload injection or there is very little we can do we uh we can't stop you know string copies",
    "start": "388680",
    "end": "395240"
  },
  {
    "text": "from overwriting um your buffers unless we want to instrument code but without",
    "start": "395240",
    "end": "400639"
  },
  {
    "text": "code instrumentation we can't fig your bugs the PG the bug's always going to be there so even though we can't fix the",
    "start": "400639",
    "end": "406919"
  },
  {
    "text": "bugs what we can try to is to stop those bugs from being exploitable",
    "start": "406919",
    "end": "412880"
  },
  {
    "text": "so how do we prevent you know how do other people prevent uh bugs from being",
    "start": "412880",
    "end": "418319"
  },
  {
    "text": "exploitable uh there are a lot of solutions um some of the most pop more",
    "start": "418319",
    "end": "423919"
  },
  {
    "text": "popular ones are are in this slide these are all software uh based Solutions",
    "start": "423919",
    "end": "429160"
  },
  {
    "text": "there's also some Hardware stuff like NX uh which can be bypassed with some of the techniques that are being bypassed",
    "start": "429160",
    "end": "435560"
  },
  {
    "text": "for example rideable page execution uh if you saw talk my talk last year about once again hips but then I was talking",
    "start": "435560",
    "end": "441720"
  },
  {
    "text": "about breaking hips um then you saw a demo where you know about 15 lines of assembly code where used to bypass the",
    "start": "441720",
    "end": "448520"
  },
  {
    "text": "varable page execution ution um the way this works is very very similar to returning into lipy where you um set up",
    "start": "448520",
    "end": "456960"
  },
  {
    "text": "a fake stack frame um and you know your hips basically doesn't realize the extra",
    "start": "456960",
    "end": "463160"
  },
  {
    "text": "running code of a stack or a hip um because because the addresses look fine",
    "start": "463160",
    "end": "469520"
  },
  {
    "text": "um the way this works is you would hook a bunch of apis or at least how these products work you can do it other",
    "start": "469520",
    "end": "474680"
  },
  {
    "text": "different ways uh you would hook a bunch of apis and then you would check whether the apis are running from a rable page",
    "start": "474680",
    "end": "480440"
  },
  {
    "text": "and the rable page is uh can be a stack it can be Heap um but it's probably not",
    "start": "480440",
    "end": "486639"
  },
  {
    "text": "going to be text segment so when you when you exploit a buffer overflow for example you inject into a rideable page",
    "start": "486639",
    "end": "492080"
  },
  {
    "text": "because you need to be able to write to memory so you get injected into stacker into a hip and so when you check where",
    "start": "492080",
    "end": "497360"
  },
  {
    "text": "the code is executing from uh if it's going to be a rable page stack or hip you your your process is going to get",
    "start": "497360",
    "end": "503240"
  },
  {
    "text": "killed now like I said you know you can set up a a fake stack frame that tells",
    "start": "503240",
    "end": "508960"
  },
  {
    "text": "intercept you're not running from from hip you're running from elsewhere when you're not and so it's it's pretty",
    "start": "508960",
    "end": "514839"
  },
  {
    "text": "trivial to bypass if you just came back from the NX talk then you can use similar s s similar return into lips",
    "start": "514839",
    "end": "522039"
  },
  {
    "text": "technique to bypass Hardway based U attacks as well so if you get a 6 64-bit",
    "start": "522039",
    "end": "527920"
  },
  {
    "text": "Ops run and you enable this stuff and you go to bad happy then you know maybe",
    "start": "527920",
    "end": "534080"
  },
  {
    "text": "you shouldn't be um the other pretty popular solution which is pretty good",
    "start": "534080",
    "end": "539640"
  },
  {
    "text": "for for what it tries to do is compiler based solution uh these are staggard on Linux propolis and openbsd visual studio",
    "start": "539640",
    "end": "546839"
  },
  {
    "text": "and windows uh they all work in the same way more or less they set up U some random number canary on stack when they",
    "start": "546839",
    "end": "554160"
  },
  {
    "text": "return in the functioning epilog that they make sure that the random number that's on stack is still the same random",
    "start": "554160",
    "end": "559240"
  },
  {
    "text": "number that is it's not being overwritten if it was then you probably overwrote um the return address which is",
    "start": "559240",
    "end": "564920"
  },
  {
    "text": "a bad thing um so these are not not as easy to bypass as a right over page",
    "start": "564920",
    "end": "571240"
  },
  {
    "text": "execution um but at the same time they don't cover a lot of the tag vectors they're good at stack overflows they're",
    "start": "571240",
    "end": "577680"
  },
  {
    "text": "not so good at Heap or you know some or form of bugs um finally there is address",
    "start": "577680",
    "end": "582800"
  },
  {
    "text": "bace randomization uh there's packs on Unix there's oone and witness there's some other products that do this as well",
    "start": "582800",
    "end": "589200"
  },
  {
    "text": "um so I'm going to talk a bit in more details about um Ed space randomization which is which is what I",
    "start": "589200",
    "end": "594800"
  },
  {
    "text": "implemented so what's what's as ASR or aslr it's a more commonly know well it's",
    "start": "594800",
    "end": "601920"
  },
  {
    "text": "the basic idea is you randomize the addresses in memory so you hide um where",
    "start": "601920",
    "end": "608920"
  },
  {
    "text": "your code lives where your stack lives where your hip lives and the reason for that is if you look at the typical",
    "start": "608920",
    "end": "614640"
  },
  {
    "text": "exploit you will realize that they have some most of them have some built-in dependencies and those dependencies are",
    "start": "614640",
    "end": "620880"
  },
  {
    "text": "in static addresses so if you change an address the exploits stop working it's",
    "start": "620880",
    "end": "626079"
  },
  {
    "text": "as simple as that uh the way this works in Windows the major jity of exploits you would override a stack uh when you",
    "start": "626079",
    "end": "632760"
  },
  {
    "text": "override a stack uh you usually corrupt some registers and the registers would have the address um address of your",
    "start": "632760",
    "end": "639720"
  },
  {
    "text": "payload so your buffer um so then you overwrite the return address with an",
    "start": "639720",
    "end": "645200"
  },
  {
    "text": "with a with an address of an instruction which will call that register and that will transfer payload that will transfer control to your",
    "start": "645200",
    "end": "651240"
  },
  {
    "text": "payload um so that's that's a critical point there is a built there is a static address in the majority of upflow",
    "start": "651240",
    "end": "656959"
  },
  {
    "text": "exploits in Windows so you look at blast you look at Slammer you look at all the",
    "start": "656959",
    "end": "662279"
  },
  {
    "text": "big you know big nasty worms and there is a single address that's being used in",
    "start": "662279",
    "end": "667600"
  },
  {
    "text": "those machines and the reason why they've been so successful is because the majority of windows boxes look very similar you know the dll is going to be",
    "start": "667600",
    "end": "675079"
  },
  {
    "text": "loaded in the same place on the same you know the same across your entire um",
    "start": "675079",
    "end": "680279"
  },
  {
    "text": "server form the addresses do diff do change between various Serv backs and Hut fixes",
    "start": "680279",
    "end": "687079"
  },
  {
    "text": "but there are some addresses that are being used you know if you look at for example at M Floyd they found some",
    "start": "687079",
    "end": "692399"
  },
  {
    "text": "addresses that are very common across multiple service packs so you have a single address that works on every single Windows 2000 box that's pretty",
    "start": "692399",
    "end": "699360"
  },
  {
    "text": "powerful I mean you can write a warm that will work reliably on every single Windows 2000 machine in the world and we",
    "start": "699360",
    "end": "705600"
  },
  {
    "text": "know that works you know if you look at Blaster I mean that took down half half well I don't a lot of Windows machines",
    "start": "705600",
    "end": "712079"
  },
  {
    "text": "and that's because they all look the same absolutely the same there's no diversity so address Bas randomization",
    "start": "712079",
    "end": "717360"
  },
  {
    "text": "solves that problem by randomizing addresses so every single machine looks different your machine a has address a",
    "start": "717360",
    "end": "722720"
  },
  {
    "text": "the next one has X Y and Z so when you try to run the same exploit it's not going to work or rather it's going to ex",
    "start": "722720",
    "end": "728480"
  },
  {
    "text": "work in one in you know a million chance so if you have 4 million machines one of them will get owned that's pretty good",
    "start": "728480",
    "end": "735360"
  },
  {
    "text": "so we randomize all the addresses that you know that that are used in exploits stack he addresses where our libraries",
    "start": "735360",
    "end": "742240"
  },
  {
    "text": "are loaded everything that can be used to in in in an exploit we randomize and so like I said as address",
    "start": "742240",
    "end": "749320"
  },
  {
    "text": "SL out of each inen application is different your exploits are not going to work or they're not going to work",
    "start": "749320",
    "end": "754360"
  },
  {
    "text": "reliably which is good enough so here's a here's an illustration basically we",
    "start": "754360",
    "end": "760160"
  },
  {
    "text": "let's say a notepad we start notepad once and then we start notepad twice and it can be the same machine could be",
    "start": "760160",
    "end": "765480"
  },
  {
    "text": "different machines but the point is they all look different if this was on a non-modified system they look the same",
    "start": "765480",
    "end": "771120"
  },
  {
    "text": "absolutely the same they have the same built and address in every single machine and every you know Windows 2000",
    "start": "771120",
    "end": "776800"
  },
  {
    "text": "XP will look absolutely the same but with that rization they look different and they look different enough for",
    "start": "776800",
    "end": "782480"
  },
  {
    "text": "exploits to Simply stop working so the way I've implemented um",
    "start": "782480",
    "end": "789720"
  },
  {
    "text": "I've actually there's some um wrong information in the slide which which I'll correct but um the second he",
    "start": "789720",
    "end": "797079"
  },
  {
    "text": "rization uh this is a very very easy to do I mean it is so easy that I think it",
    "start": "797079",
    "end": "802240"
  },
  {
    "text": "should be included in in a basically a stock operating system it has no overhead literally there is no there is",
    "start": "802240",
    "end": "807399"
  },
  {
    "text": "zero overhead at runtime static anything like that uh it's it's free um and it doesn't provide actually 16 bit of it it",
    "start": "807399",
    "end": "814000"
  },
  {
    "text": "I think it provides more like 30 bits so that means that your stack can be in two to the 30 locations which is about uh a",
    "start": "814000",
    "end": "822279"
  },
  {
    "text": "billion different combinations which is pretty good which means that now when you're run the exploit and relies on the",
    "start": "822279",
    "end": "828040"
  },
  {
    "text": "address of your stack it's not going to work because your stack is going to be all over the place and there's no way you can predict it so that's that's the",
    "start": "828040",
    "end": "834839"
  },
  {
    "text": "most important bit when I talk about entropy that's one of the one of the ways that people at attack address based",
    "start": "834839",
    "end": "840000"
  },
  {
    "text": "randomization um uh solutions they try to predict where stuff is so they try to",
    "start": "840000",
    "end": "846800"
  },
  {
    "text": "predict to Brute Force where stack heads there's been some papers published for example in using security last year with",
    "start": "846800",
    "end": "853560"
  },
  {
    "text": "I believe they attack pxs because there was not enough entropy that' been able to Brute Force um address basically got",
    "start": "853560",
    "end": "859519"
  },
  {
    "text": "lucky enough to get that one address so with 30 bit of entropy is not that easy I mean you can run for hours",
    "start": "859519",
    "end": "865920"
  },
  {
    "text": "and you know when you try to own the Internet it's simply not going to work the stack and hip randomization randomizes stack and H application that",
    "start": "865920",
    "end": "871759"
  },
  {
    "text": "does not break any applications at all I mean I have run dozens and dozens of different applications in my system and",
    "start": "871759",
    "end": "878240"
  },
  {
    "text": "I've never seen anything them break because a say windows stud 2 application doesn't need to know where stack is or",
    "start": "878240",
    "end": "884560"
  },
  {
    "text": "hip is if you have a dependency and an address there it's broken so the D randomization is more",
    "start": "884560",
    "end": "891839"
  },
  {
    "text": "important than second Heap because the D address addresses are is what usually used in the exploits so if you remember",
    "start": "891839",
    "end": "899120"
  },
  {
    "text": "mentioned that you override your return address with the address of instruction that will call you register well those",
    "start": "899120",
    "end": "904959"
  },
  {
    "text": "those addresses you usually live in DS uh it can be colel 32 dll or it can be",
    "start": "904959",
    "end": "910079"
  },
  {
    "text": "ntdll it's going to be one of those system DLS which which don't change much across different Windows instances so",
    "start": "910079",
    "end": "916000"
  },
  {
    "text": "randomizing DS is is essential uh D ration is a little bit",
    "start": "916000",
    "end": "922279"
  },
  {
    "text": "more difficult to implement uh the way I've done it it's it has upfront CPU cost which is the time to relocate the",
    "start": "922279",
    "end": "928199"
  },
  {
    "text": "actual dll and there's some memory overhead because you because you DLS loaded in different places you can't",
    "start": "928199",
    "end": "934680"
  },
  {
    "text": "share virtual memory anymore which is um uh which is a loss now in terms of",
    "start": "934680",
    "end": "939759"
  },
  {
    "text": "enty once again it's about 30 bits maybe 29 certainly not 14 so once again your dll can be all over the place uh if if",
    "start": "939759",
    "end": "947160"
  },
  {
    "text": "you're familiar with uh the process layout on Windows you get two get the first two gigabytes are for userland",
    "start": "947160",
    "end": "953639"
  },
  {
    "text": "processing and there the next two gigabytes are for kernel um and the way it usually works in Windows there is",
    "start": "953639",
    "end": "959759"
  },
  {
    "text": "uh at the end of the two userland uh 2 gabt all of the DS usually get loaded",
    "start": "959759",
    "end": "965440"
  },
  {
    "text": "there well when I you know when I load the in my system that can get loaded anywhere anywhere in the 2 gigabyte",
    "start": "965440",
    "end": "970959"
  },
  {
    "text": "space so once again you can't predict where the co ebx instruction is going to be uh and and the oranization is a",
    "start": "970959",
    "end": "978120"
  },
  {
    "text": "little bit more uh intrusive but it can be still pre- reliable it does it might break certain applications but in most",
    "start": "978120",
    "end": "984480"
  },
  {
    "text": "of the cases it works reliably enough so",
    "start": "984480",
    "end": "990000"
  },
  {
    "text": "so what are some of the challenges doing SLR and windows well",
    "start": "990000",
    "end": "995199"
  },
  {
    "text": "there are actually quite a few I mean first of course the fact that window is a close Source operating system uh I",
    "start": "995199",
    "end": "1000720"
  },
  {
    "text": "don't we don't have the source and we have some documentation about how it works but you know I guess window you",
    "start": "1000720",
    "end": "1007759"
  },
  {
    "text": "know Microsoft prefer for us not to know it so simply implementing something as intrusive as randomizing the locations",
    "start": "1007759",
    "end": "1013480"
  },
  {
    "text": "of stack and hip and DLS on Windows is already you know difficult enough",
    "start": "1013480",
    "end": "1019079"
  },
  {
    "text": "because you don't know how things work or the only way you'll find out you can disassemble the loader you can",
    "start": "1019079",
    "end": "1024520"
  },
  {
    "text": "disassemble the kernel that that takes quite a bit of time so I was stupid enough to do that and I've you know",
    "start": "1024520",
    "end": "1030918"
  },
  {
    "text": "spent a lot of time on on very low level code um just you",
    "start": "1030919",
    "end": "1037280"
  },
  {
    "text": "know putting together a number of hacks that work together to provide the type of randomization we're talking about so",
    "start": "1037280",
    "end": "1043199"
  },
  {
    "text": "for example Windows loaded doesn't allow you to randomize cor 32d so Windows",
    "start": "1043199",
    "end": "1048480"
  },
  {
    "text": "assumes the your colel 32 D is going to be loaded at the same location for every single application um so when you try to rebase",
    "start": "1048480",
    "end": "1056120"
  },
  {
    "text": "the thing the loader will come back and say no and the reason for that is because colel 32l string is embedded in",
    "start": "1056120",
    "end": "1061600"
  },
  {
    "text": "the extra loader uh so it's it's being treated specially and the reason for for that is is pretty technical uh basically",
    "start": "1061600",
    "end": "1068280"
  },
  {
    "text": "when you call a create process API it assumes that the process that it just created it has the same layout so it",
    "start": "1068280",
    "end": "1075520"
  },
  {
    "text": "assumes that kernel 32 the delay is going to be loaded in the same place which of course it's not for our systems",
    "start": "1075520",
    "end": "1080640"
  },
  {
    "text": "so not only did I have to trick the window Windows loader to be able to rebase Kernel 32d I also had to trick",
    "start": "1080640",
    "end": "1088320"
  },
  {
    "text": "the create process um API to load your application to from from the correct",
    "start": "1088320",
    "end": "1095799"
  },
  {
    "text": "place so there are multiple things that have to be done to be able to carry that out and TD is another special place uh",
    "start": "1095799",
    "end": "1102280"
  },
  {
    "text": "another special dll in the sense that it's loaded at boot time uh it's loaded before a single user Lo service is",
    "start": "1102280",
    "end": "1107960"
  },
  {
    "text": "created before most the drivers are even loaded and after it's loaded it's it's it's mapped into every single process",
    "start": "1107960",
    "end": "1113520"
  },
  {
    "text": "and there's no way you can rebase that because it's very pre-loaded before you even before the windows even even boots",
    "start": "1113520",
    "end": "1118679"
  },
  {
    "text": "up so runtime ndl rization is a lot harder if you want to randomize it you",
    "start": "1118679",
    "end": "1123760"
  },
  {
    "text": "have to do it before Windows is even loaded so you have to do it at boot time you can of course randomize the ls statically you know you can run rebase",
    "start": "1123760",
    "end": "1130159"
  },
  {
    "text": "that axz and randomize the LLS that that will work but if you want something at runtime you have to you have to you have",
    "start": "1130159",
    "end": "1137520"
  },
  {
    "text": "to do some tricks uh one thing I should not uh I should mention is that there are some products",
    "start": "1137520",
    "end": "1144120"
  },
  {
    "text": "um out there that do various virtual memory optimization that's what they call it and basically what they do is they Rend they they rebase the LLS so",
    "start": "1144120",
    "end": "1151120"
  },
  {
    "text": "that there are no collisions and the reason for that is like I said when when you load a dll uh in a process in two",
    "start": "1151120",
    "end": "1157600"
  },
  {
    "text": "different processes you only have one instance actually in memory and it's it's being um it's being shared across",
    "start": "1157600",
    "end": "1163880"
  },
  {
    "text": "through different processes instances so you save memory that way U so there are products out there who don't who who",
    "start": "1163880",
    "end": "1169360"
  },
  {
    "text": "rebase the ls but the reason why they rebase them is to get you know quote unquote virtual memory optimization they don't do it for security but of course",
    "start": "1169360",
    "end": "1176480"
  },
  {
    "text": "when you say dlll you get the same idea so you can take the products that are out there to do virtual M optimization",
    "start": "1176480",
    "end": "1182600"
  },
  {
    "text": "it'll get the same you'll get the same result you'll get random random DL so that's one way to do it we do it our run",
    "start": "1182600",
    "end": "1188919"
  },
  {
    "text": "time which is slightly different and a lot more complicated um I'm not sure you know which one is which one is",
    "start": "1188919",
    "end": "1196039"
  },
  {
    "text": "better not only that but but once again there there there are more challenges on",
    "start": "1196480",
    "end": "1201799"
  },
  {
    "text": "way so first of all the windows 32 compilers do not include relocation information for executables so the",
    "start": "1201799",
    "end": "1207039"
  },
  {
    "text": "reason why you can load a dll at a different address is because Windows know where some of your addresses some",
    "start": "1207039",
    "end": "1212600"
  },
  {
    "text": "of the static addresses live and so you can rep patch them at runtime the executables don't have this information",
    "start": "1212600",
    "end": "1217679"
  },
  {
    "text": "because when a winess loader loads an executable it assumes that address space is empty which it is uh when the when",
    "start": "1217679",
    "end": "1224440"
  },
  {
    "text": "when the exe is being mapped into the address space there is nothing else that that lives in space so you know that",
    "start": "1224440",
    "end": "1230200"
  },
  {
    "text": "you'll never have a collision so you can always assume that you know you can load it there and so you can drop the relocation information and make your",
    "start": "1230200",
    "end": "1236080"
  },
  {
    "text": "binary smaller DLS on the other hand you can make that assumption even though you do have a base address Base address is",
    "start": "1236080",
    "end": "1241760"
  },
  {
    "text": "only used as optimization it's not essential you can re you can load DLS at different addresses all the time but",
    "start": "1241760",
    "end": "1247600"
  },
  {
    "text": "it's going to be slower so executables in the other hand don't have this so this means the tech segments are not",
    "start": "1247600",
    "end": "1253240"
  },
  {
    "text": "randomized or that they're not being randomized by ozen today which is an issue in a sense that that if you find a",
    "start": "1253240",
    "end": "1259280"
  },
  {
    "text": "call BX instruction in your text segment you can just replace that with you you can just use that us and it'll still",
    "start": "1259280",
    "end": "1265159"
  },
  {
    "text": "work uh which is a problem so the how do we what do we do about this well we can",
    "start": "1265159",
    "end": "1271000"
  },
  {
    "text": "try to force compilers to include relocation information but since we interested in protecting commercial products to which we don't have source",
    "start": "1271000",
    "end": "1277159"
  },
  {
    "text": "code that's not an option we can try to relocate and rewrite banies at runtime",
    "start": "1277159",
    "end": "1282279"
  },
  {
    "text": "that will certainly work but it's very very intrusive um so I'm not sure whether",
    "start": "1282279",
    "end": "1287360"
  },
  {
    "text": "people are interested in going to the depth of of of of doing that and finally the important point is that yes aslr",
    "start": "1287360",
    "end": "1294880"
  },
  {
    "text": "stops buffer of flows but it doesn't you know it might not be accepted for applications because what aslr does it",
    "start": "1294880",
    "end": "1301320"
  },
  {
    "text": "prevents buffer flows by training them into Deni of service because when you replace an address which is a kbx with",
    "start": "1301320",
    "end": "1308159"
  },
  {
    "text": "with an address which doesn't which which actually doesn't point to anything your application is going to",
    "start": "1308159",
    "end": "1313360"
  },
  {
    "text": "crash so which is certainly better than getting a shell in a machine but it still might be acceptable for some companies for some applications let's",
    "start": "1313360",
    "end": "1320559"
  },
  {
    "text": "say you're amazon.com and you lose about a million dollars of an hour Dawn time you you",
    "start": "1320559",
    "end": "1328480"
  },
  {
    "text": "might be you know you might make a decision where you would rather run your service and when you're owned rather than running a service uh",
    "start": "1328480",
    "end": "1336240"
  },
  {
    "text": "rather than having a service down but not being owned you know so that's",
    "start": "1336240",
    "end": "1341600"
  },
  {
    "text": "that's something to think about so as a conclusion for as law part",
    "start": "1341600",
    "end": "1348320"
  },
  {
    "text": "it's it's address B randomization randomizes the base addresses of various memory regions such as stack Heap",
    "start": "1348320",
    "end": "1355080"
  },
  {
    "text": "dlls um it doesn't provide 100% guarantee but it does prevent most of the exploits because they rely on static",
    "start": "1355080",
    "end": "1361279"
  },
  {
    "text": "addresses uh stacking here randomization has no overhead and it doesn't break any applications so I don't see why it can't",
    "start": "1361279",
    "end": "1366919"
  },
  {
    "text": "be included in most of the stock operating systems in fact if you run Linux I can't I don't know what distributions you get this already uh",
    "start": "1366919",
    "end": "1374120"
  },
  {
    "text": "openbsd provides this already uh Windows doesn't yet and I don't think it the future versions do it either but in",
    "start": "1374120",
    "end": "1380799"
  },
  {
    "text": "terms of stacking her anization I'm pretty sure when Microsoft can include it and it'll still work so are there any",
    "start": "1380799",
    "end": "1387000"
  },
  {
    "text": "questions um any questions about aslr stuff before we go into",
    "start": "1387000",
    "end": "1392360"
  },
  {
    "text": "sandboxing",
    "start": "1392360",
    "end": "1395360"
  },
  {
    "text": "yeah the question is can you can't you use a knob sled to increase the chances",
    "start": "1401640",
    "end": "1407840"
  },
  {
    "text": "um the knob slat is not the nlat is used",
    "start": "1407840",
    "end": "1413520"
  },
  {
    "text": "to I mean when you random when you have 30 bits of entropy your knob slide have to have to be 2 gbes for this to work uh",
    "start": "1415080",
    "end": "1421960"
  },
  {
    "text": "and of course you know your Hep is not 2 gbes your buffers are small right so at some point you're going to run into R",
    "start": "1421960",
    "end": "1428400"
  },
  {
    "text": "into a region which is you know you possibly get killed so you only have about I don't know 4K of data to play",
    "start": "1428400",
    "end": "1433919"
  },
  {
    "text": "with before you run into memory which is uh right protected and you get killed so you know since we're talking about 30",
    "start": "1433919",
    "end": "1439840"
  },
  {
    "text": "bits of entropy unless you can inject 2 gabt of knops it's probably not going to work so so so we're safe",
    "start": "1439840",
    "end": "1449440"
  },
  {
    "text": "yeah",
    "start": "1453200",
    "end": "1456200"
  },
  {
    "text": "yeah yeah true um well in most of the",
    "start": "1459480",
    "end": "1465120"
  },
  {
    "text": "the way that those system yes you you when you use systems that do virtual memory optimization you get them to",
    "start": "1465120",
    "end": "1470320"
  },
  {
    "text": "randomize it per machine which is good enough because you know when we're talking about protecting let's say 4",
    "start": "1470320",
    "end": "1475640"
  },
  {
    "text": "billion machines in the internet as long as each machine is different you're fine if you have some malicious user in your",
    "start": "1475640",
    "end": "1480840"
  },
  {
    "text": "machine well you probably own anyway but it's not going to protect you when",
    "start": "1480840",
    "end": "1486480"
  },
  {
    "text": "you're when you're running a local exploit because you can you can find out what your address bace looks like but since we only care about the fact that",
    "start": "1486480",
    "end": "1492720"
  },
  {
    "text": "we have diversity in our Network that our server from looks different enough uh you know our 100 servers don't have the same addresses that's fine but",
    "start": "1492720",
    "end": "1501398"
  },
  {
    "text": "yeah I'm sorry say it again how do the system coexist with F",
    "start": "1503320",
    "end": "1509840"
  },
  {
    "text": "this file protection um they probably disable it um there's no other way because",
    "start": "1509840",
    "end": "1516159"
  },
  {
    "text": "otherwise of course well different systems work differently right some of the systems actually what they do one of",
    "start": "1516159",
    "end": "1521840"
  },
  {
    "text": "the systems that I know of uh it rebases you a dll and it stores it in an alternative data stream and so with but",
    "start": "1521840",
    "end": "1528480"
  },
  {
    "text": "then it modifies the 132 loader and so when you load it it checks whether the data alternative data stream exists and",
    "start": "1528480",
    "end": "1533919"
  },
  {
    "text": "it loads it straight from your binary which exists which is just a different uh data stream which you know still",
    "start": "1533919",
    "end": "1540480"
  },
  {
    "text": "modifies the binary but you know there are different ways to do it some uh the other system the way it works is you",
    "start": "1540480",
    "end": "1545919"
  },
  {
    "text": "would take a dll you rebase it and you put in a different directory uh like a cash directory and and you win 32 loader",
    "start": "1545919",
    "end": "1552159"
  },
  {
    "text": "then is hacked to load your DLS from that directory and this way you don't even modify the the the system binaries",
    "start": "1552159",
    "end": "1557880"
  },
  {
    "text": "which is a pretty good idea so if You' screwed up and you and you reboot then",
    "start": "1557880",
    "end": "1563159"
  },
  {
    "text": "um you can load from you know you can load without any issues",
    "start": "1563159",
    "end": "1568960"
  },
  {
    "text": "so that's a very good point um the question was well what happens when you allocate a hip uh let's say a megabyte",
    "start": "1579799",
    "end": "1586360"
  },
  {
    "text": "before you run out of userland and this case you well you're pretty much guaranteed the application is going to",
    "start": "1586360",
    "end": "1591760"
  },
  {
    "text": "die because if you hit let's say gross to a gigabyte then you make you need to make sure that your hip is below 1 GB",
    "start": "1591760",
    "end": "1598440"
  },
  {
    "text": "Mark that's that's a very good point so you can obviously control you know stack doesn't doesn't usually go over 4",
    "start": "1598440",
    "end": "1604039"
  },
  {
    "text": "megabytes so you can make sure that stack is uh you know can live there but you can you can play some artificial",
    "start": "1604039",
    "end": "1609279"
  },
  {
    "text": "binaries in for example where hiap is loaded so you can push it down a little bit so but yeah that's that's a good",
    "start": "1609279",
    "end": "1615880"
  },
  {
    "text": "point have",
    "start": "1615880",
    "end": "1619880"
  },
  {
    "text": "uh the question was do you need to all your DS need to be loaded at page boundaries yeah you need to preserve the alignment so for example when I",
    "start": "1621080",
    "end": "1626399"
  },
  {
    "text": "randomize when I randomize stack I preserve the 8 by boundary and when you load DLS you cannot load them in the",
    "start": "1626399",
    "end": "1631840"
  },
  {
    "text": "middle of something they always on a 4K boundary so yeah when you randomize you actually the reason why it's not 30 30",
    "start": "1631840",
    "end": "1638039"
  },
  {
    "text": "bits for DLS that's a good point it's 30 bits minus the 4K which is 12 bits so you get about 18 bits so so yeah you",
    "start": "1638039",
    "end": "1645880"
  },
  {
    "text": "need to be you need to preserve alignment otherwise um not going to work so let's move on to process",
    "start": "1645880",
    "end": "1652080"
  },
  {
    "text": "protection",
    "start": "1652080",
    "end": "1655080"
  },
  {
    "text": "okay so the the question was about the memory overhead uh the memory overhead comes from the fact that when you load a",
    "start": "1658480",
    "end": "1664880"
  },
  {
    "text": "dll uh the text segment is essentially can be shared across multiple processes right so let's say you start a notepad",
    "start": "1664880",
    "end": "1671120"
  },
  {
    "text": "and notepad loads colel 32 D the kernel 32 is not going to get loaded 10 times well it is going to get loaded but it's",
    "start": "1671120",
    "end": "1676960"
  },
  {
    "text": "going to get mapped only once so in memory you only have one instance of your colonel 32. in even though you have",
    "start": "1676960",
    "end": "1682440"
  },
  {
    "text": "multiple processes running so because text segment doesn't change in the execut well doesn't change most of the",
    "start": "1682440",
    "end": "1687760"
  },
  {
    "text": "time you can do that but when you when you when you rebase your dll you",
    "start": "1687760",
    "end": "1693360"
  },
  {
    "text": "relocate the stuff so you have some hardcoded addresses in your DLS you need to patch those so you rewrite the text",
    "start": "1693360",
    "end": "1699840"
  },
  {
    "text": "segment of a dll and because you rewrote the text segment to point to one set of addresses the next process is not going",
    "start": "1699840",
    "end": "1705799"
  },
  {
    "text": "to have the same set of addresses so it's not sharable anymore more so when you have 10 notepads you actually have 10 notepads loaded uh sorry 10 uh copies",
    "start": "1705799",
    "end": "1714120"
  },
  {
    "text": "of colel 32 that they loaded so you've just you know if k2l is about 1 Megabyte you've just wasted 9 megabytes not",
    "start": "1714120",
    "end": "1721000"
  },
  {
    "text": "wasted but you know it's an overhead of of 9 megabytes so what you can do is you have",
    "start": "1721000",
    "end": "1727240"
  },
  {
    "text": "to make sure if you don't have the overhead you have to make sure that you random you all of your randomized uh rebased DS still have the same",
    "start": "1727240",
    "end": "1734440"
  },
  {
    "text": "address so that way you don't get the overhead the m overhead or this or the C overhead so it's it's possible to do it",
    "start": "1734440",
    "end": "1741559"
  },
  {
    "text": "without this overhead it's just a slightly different implementation so uh let's talk about",
    "start": "1741559",
    "end": "1747279"
  },
  {
    "text": "the process protection stuff this is the the sandbox um the part so whilst the aslr does prevent some of the attacks",
    "start": "1747279",
    "end": "1754360"
  },
  {
    "text": "you know we can't rely simply on SLR to stop all the attacks in addition there are other types of attacks that cannot",
    "start": "1754360",
    "end": "1759399"
  },
  {
    "text": "be prevented um simply by randomizing stuff so the next layer which which um",
    "start": "1759399",
    "end": "1765880"
  },
  {
    "text": "sits on top of memory production layer is the process protection uh and basically the process protection is a",
    "start": "1765880",
    "end": "1771080"
  },
  {
    "text": "Sandbox which executes all processes um in a sandbox and what what's a Sandbox",
    "start": "1771080",
    "end": "1776360"
  },
  {
    "text": "the sandbox is is a piece of software which mediates mediates all accesses to",
    "start": "1776360",
    "end": "1781559"
  },
  {
    "text": "to system resources so when you're process tries to open a file before it actually touches the operating system",
    "start": "1781559",
    "end": "1787679"
  },
  {
    "text": "the sandbox kicks in and checks verifies that the file you're allowed to touch the file so sandbox enforces well my",
    "start": "1787679",
    "end": "1794399"
  },
  {
    "text": "implementation of sandbox enforces all the pro all the rules from kernel mode so you can it cannot be bypassed so you",
    "start": "1794399",
    "end": "1800519"
  },
  {
    "text": "can't you know bypass the the sandbox and hit the operating system directly you always go through the sandbox first",
    "start": "1800519",
    "end": "1806039"
  },
  {
    "text": "so the sandbox always gets a chance to deny you know access to a file registry or whatever and the the sandbox that are",
    "start": "1806039",
    "end": "1813039"
  },
  {
    "text": "implemented mediates access to all system resources and then there by 20 different types and by system resources I mean uh it can be a file it can be a",
    "start": "1813039",
    "end": "1820559"
  },
  {
    "text": "registry key it can be a network connection it can be a directory it can be you know process execution I'll show",
    "start": "1820559",
    "end": "1827039"
  },
  {
    "text": "I'll show you some more examples but pretty much anything that you can put a name on you can control from a",
    "start": "1827039",
    "end": "1833519"
  },
  {
    "text": "Sandbox so how do how how's how's all this stuff defined well there's a policy agent and the policy agent parses and",
    "start": "1833519",
    "end": "1839880"
  },
  {
    "text": "and and and deals with those sandboxes which are described by policy files so a policy file is just a collection of",
    "start": "1839880",
    "end": "1845559"
  },
  {
    "text": "rules specified in a text file so each application gets a policy which is which is a collection of of resources that are",
    "start": "1845559",
    "end": "1854120"
  },
  {
    "text": "um that are listed in that policy so let me give you some examples uh of of a",
    "start": "1854120",
    "end": "1859559"
  },
  {
    "text": "policy well the first rule I mean first of all you can probably read this stuff and understand what it does without even",
    "start": "1859559",
    "end": "1865039"
  },
  {
    "text": "me explaining anything if you work with Cy tray you can definitely read this um so this is pretty pretty",
    "start": "1865039",
    "end": "1871279"
  },
  {
    "text": "self-describing um the rule starts with with the resource type so a file or registry then it has some actions so for",
    "start": "1871279",
    "end": "1877919"
  },
  {
    "text": "example you can read a file you can write a file you can execute a process you can create a connection so you you",
    "start": "1877919",
    "end": "1883279"
  },
  {
    "text": "define a resource and you define what are you trying to do with the resource and then you specify an action so deny",
    "start": "1883279",
    "end": "1888799"
  },
  {
    "text": "an action you can see you can deny an action you can log an action um stuff like that uh you can also be a little",
    "start": "1888799",
    "end": "1894559"
  },
  {
    "text": "bit more uh specific so instead of just saying deny old driver loads you can name you can say uh be more explicit and",
    "start": "1894559",
    "end": "1901120"
  },
  {
    "text": "say a specify file name or driver you're talking about so for example the first rule says all operation all file",
    "start": "1901120",
    "end": "1908200"
  },
  {
    "text": "operations on a particular file name should be denied okay so the file name",
    "start": "1908200",
    "end": "1913519"
  },
  {
    "text": "is a special file name and it it identifies a soft eyes in a system a soft eyes is a kernel debugger and",
    "start": "1913519",
    "end": "1919120"
  },
  {
    "text": "windows which I use for develop for kernel code development uh unfortunately some third party software doesn't like S",
    "start": "1919120",
    "end": "1926000"
  },
  {
    "text": "soft TI being loaded because you know you can use soft TI to disassemble their um their code and you know find out how",
    "start": "1926000",
    "end": "1931639"
  },
  {
    "text": "it works so they check for for soft di on your system and the way they check for soft di is they check whether the",
    "start": "1931639",
    "end": "1938240"
  },
  {
    "text": "the the the driver for soft di exists which calls SI iwv ID so if they can't",
    "start": "1938240",
    "end": "1944120"
  },
  {
    "text": "find the device they assume that it's not loaded okay so I run iTunes and",
    "start": "1944120",
    "end": "1949559"
  },
  {
    "text": "Skype which don't like soft eyes with soft eyes on my system so when iTunes loaded my policy say deny access to a",
    "start": "1949559",
    "end": "1955960"
  },
  {
    "text": "softt device iTunes try to open it it fails it assumes it's not there and loads up so if I can now if I want to",
    "start": "1955960",
    "end": "1961880"
  },
  {
    "text": "now disassemble iTunes of Skype I can do it so the protection that those systems",
    "start": "1961880",
    "end": "1966960"
  },
  {
    "text": "use are are are not very good so you can do so the next rule let's let's move on",
    "start": "1966960",
    "end": "1973200"
  },
  {
    "text": "let's let's look at the next rule it basically says uh a register re so if you try to read a register key which",
    "start": "1973200",
    "end": "1978840"
  },
  {
    "text": "ends in uh in secret uh then quietly deny this without logging so a star star",
    "start": "1978840",
    "end": "1983919"
  },
  {
    "text": "basically match the entire path a single star is going only match um something",
    "start": "1983919",
    "end": "1989200"
  },
  {
    "text": "between two two slashes uh the next rule basically says load all attempts to load a",
    "start": "1989200",
    "end": "1994639"
  },
  {
    "text": "dlll pretty self-explanatory uh the driver load deny will deny all attempts",
    "start": "1994639",
    "end": "2000159"
  },
  {
    "text": "to load a kernel driver uh process execute rule states that if you try to execute a process",
    "start": "2000159",
    "end": "2005960"
  },
  {
    "text": "which is called okay that exe then allow it you usually have to specify the entire path but this is just an example",
    "start": "2005960",
    "end": "2011320"
  },
  {
    "text": "so if you're on okay to okay that AE you're okay it's allowed to go through",
    "start": "2011320",
    "end": "2016519"
  },
  {
    "text": "similarly if you try to connect a TCP connection uh to IP address",
    "start": "2016519",
    "end": "2021919"
  },
  {
    "text": "1271 then allow it so you can do that finally you can say uh Network all",
    "start": "2021919",
    "end": "2028679"
  },
  {
    "text": "ask U this is this this going to basically act as a personal firewall so if you use if you use uh what's it",
    "start": "2028679",
    "end": "2034519"
  },
  {
    "text": "called Zone Labs you can get this functionality with a single r which is pretty cool you have different policy",
    "start": "2034519",
    "end": "2040559"
  },
  {
    "text": "highers you know you can specify rules that apply to all users all applications then you start getting more granular you",
    "start": "2040559",
    "end": "2046360"
  },
  {
    "text": "have uh policies that apply to a specific process you go down one level you have process policies that apply to",
    "start": "2046360",
    "end": "2051599"
  },
  {
    "text": "a specific user so you can specify multiple levels they there's a you know some some rules can override each other",
    "start": "2051599",
    "end": "2058440"
  },
  {
    "text": "um but you can you can create various policies um which which which interact with each other different ways",
    "start": "2058440",
    "end": "2065720"
  },
  {
    "text": "so there are also different policy types U and this is a this is a logical",
    "start": "2065720",
    "end": "2071240"
  },
  {
    "text": "concept uh and if you ever worked with you know firewalls then they will look very similar uh the policy type say deny",
    "start": "2071240",
    "end": "2077560"
  },
  {
    "text": "all and and allow all which is pretty self-explanatory right uh if you have a configur firewall you say block all",
    "start": "2077560",
    "end": "2084158"
  },
  {
    "text": "connections but allow the folding to to go through or you can say allow connections to go through except for the",
    "start": "2084159",
    "end": "2089599"
  },
  {
    "text": "known bad IPS so same thing here you can say um deny all access to a spe to a",
    "start": "2089599",
    "end": "2096720"
  },
  {
    "text": "specific resource except for the known good ones that's a denial policy so if you for example know that your outlook",
    "start": "2096720",
    "end": "2103040"
  },
  {
    "text": "that exist only supposed to single execute a single process and you say process execute name of that process",
    "start": "2103040",
    "end": "2109320"
  },
  {
    "text": "then permit and then say process execute deny so your outlook will now be allowed to execute a single application so if",
    "start": "2109320",
    "end": "2115480"
  },
  {
    "text": "you try to run you know kunova ex. VBS it will fail um on the other hand if you",
    "start": "2115480",
    "end": "2122720"
  },
  {
    "text": "know that you know Outlook supposed to run all these different processes but it's not to run not supposed to run VB",
    "start": "2122720",
    "end": "2127880"
  },
  {
    "text": "scripts or not supposed to run a single executable that you know is bad you can do that as well you can say process execute bad that ex you deny everything",
    "start": "2127880",
    "end": "2134680"
  },
  {
    "text": "else goes through so it's up to you to decide which which policy type you can create so how do you go about creating",
    "start": "2134680",
    "end": "2141440"
  },
  {
    "text": "those policies well there are two different ways of doing you can do it manually or you can do it automatically so the manual process is well you open a",
    "start": "2141440",
    "end": "2148440"
  },
  {
    "text": "notepad and you enter the rules uh and it's okay for creating allowable policies because you know what you need",
    "start": "2148440",
    "end": "2153760"
  },
  {
    "text": "to allow access to so you know that you know you know that bad that axz is",
    "start": "2153760",
    "end": "2159000"
  },
  {
    "text": "shouldn't be allowed to but everything else is okay on the other hand if you try to",
    "start": "2159000",
    "end": "2164760"
  },
  {
    "text": "create a policy for a complicated uh application or you simply don't know what application does then you obviously",
    "start": "2164760",
    "end": "2170920"
  },
  {
    "text": "can't specify all the different resources because you simply don't know what they are and so to simplify that process that I've developed that the O",
    "start": "2170920",
    "end": "2177119"
  },
  {
    "text": "and comes with little um little application which will monitor the application for you and then dump out",
    "start": "2177119",
    "end": "2183240"
  },
  {
    "text": "all the resources in a policy format so you run your application you use it as you would normally then you say stop",
    "start": "2183240",
    "end": "2189440"
  },
  {
    "text": "training it's called a training process and it creates a policy for you and so from there on you can use this um as a",
    "start": "2189440",
    "end": "2196040"
  },
  {
    "text": "template for your process so then you you know what it's supposed to do um and",
    "start": "2196040",
    "end": "2201440"
  },
  {
    "text": "that's done automatically so what are some of the challenges uh with with doing",
    "start": "2201440",
    "end": "2207640"
  },
  {
    "text": "sandboxes in Windows well the first one is host applications uh such as service host and",
    "start": "2207640",
    "end": "2213839"
  },
  {
    "text": "dll host uh those are special um processes with",
    "start": "2213839",
    "end": "2219000"
  },
  {
    "text": "which don't actually do any work but they do the work on behalf of of of other policies so for example service",
    "start": "2219000",
    "end": "2224560"
  },
  {
    "text": "host which is uh which starts up a lot of services and when you go into Services menu and your windows you know they're about I don't know let's say 50",
    "start": "2224560",
    "end": "2231280"
  },
  {
    "text": "different types well 25 of those run in context of service host so your service host can run as alerter it can run as a",
    "start": "2231280",
    "end": "2237520"
  },
  {
    "text": "messenger you could all these different thing all these different things and they all execute in a single service host that AZ process address space so",
    "start": "2237520",
    "end": "2244040"
  },
  {
    "text": "when you create a policy when you try to create a policy for service host that axe you actually have to accommodate all",
    "start": "2244040",
    "end": "2250400"
  },
  {
    "text": "those different resources which runs in inside this you know in in that context which is pretty difficult so without",
    "start": "2250400",
    "end": "2256560"
  },
  {
    "text": "actually knowing which you know what instance of a service host it is you can't actually do anything you can lock",
    "start": "2256560",
    "end": "2262000"
  },
  {
    "text": "them down because they do so many things Internet Explorer is very similar I mean the policy for Internet Explorer is",
    "start": "2262000",
    "end": "2267599"
  },
  {
    "text": "protection all off you know end of story Internet Explorer can do everything it can connect to every single website it",
    "start": "2267599",
    "end": "2273880"
  },
  {
    "text": "can read every single it can read every single file in your systems it's integrated so tightly that it's supposed",
    "start": "2273880",
    "end": "2279560"
  },
  {
    "text": "to do everything you know when you use Windows update it overrides you know it overrides your system binaries you know",
    "start": "2279560",
    "end": "2286200"
  },
  {
    "text": "it's all in the you know in in in the job spec for Internet Explorer so protecting Internet Explorer is very",
    "start": "2286200",
    "end": "2292200"
  },
  {
    "text": "very difficult or at least with not with a deny all policy it must be allow all where you basically deny the bad stuff",
    "start": "2292200",
    "end": "2298359"
  },
  {
    "text": "because Internet Explorer can just do too many things another one I have a screenshot here which which shows the",
    "start": "2298359",
    "end": "2304359"
  },
  {
    "text": "dlls uh that are loaded inside of acrob data EX so I was doing some work um and for some",
    "start": "2304359",
    "end": "2311880"
  },
  {
    "text": "reason I I was I was debugging acrobat and I was looking at the DLS that are loaded inside of uh of of the process",
    "start": "2311880",
    "end": "2319359"
  },
  {
    "text": "and I was pretty surprised I mean can you guys name can you can you look at the screenshot and tell me what are the",
    "start": "2319359",
    "end": "2324720"
  },
  {
    "text": "two things that are that are that are obviously wrong what's this yes Yahoo messager so",
    "start": "2324720",
    "end": "2332119"
  },
  {
    "text": "like I said it's acz and it has at the bottom if you look at it it has two Yahoo messenger DLS",
    "start": "2332119",
    "end": "2339000"
  },
  {
    "text": "loaded in it I mean what is that all about well my guess is that Yahoo",
    "start": "2339000",
    "end": "2344160"
  },
  {
    "text": "messenger tries to find figure out when you're idle if you look at this idol. dll so it hooks the process to find out",
    "start": "2344160",
    "end": "2349920"
  },
  {
    "text": "what's going on what's going on in it and it does this for pretty much not for every process but for most of them so",
    "start": "2349920",
    "end": "2356760"
  },
  {
    "text": "that's the type of complexity we're talking about in a Windows system you have applications running inside of all",
    "start": "2356760",
    "end": "2362520"
  },
  {
    "text": "the applications for example I have an antivirus running in my machine and I've noticed that ant antivirus actually some",
    "start": "2362520",
    "end": "2368720"
  },
  {
    "text": "of the code of antivirus run inside of the inside of my process so when you run acrobat thexz you actually have code of",
    "start": "2368720",
    "end": "2374480"
  },
  {
    "text": "antivirus code running inside of that code so you have these code I mean",
    "start": "2374480",
    "end": "2381000"
  },
  {
    "text": "coming from all the different places loaded up and it's just it's just it's it's a jungle uh you can't say you know",
    "start": "2381000",
    "end": "2387640"
  },
  {
    "text": "on on Unix sand boxing works pretty well right so you set up Cy trays you say your Milla is allowed to run from user",
    "start": "2387640",
    "end": "2394119"
  },
  {
    "text": "bin Milla and allowed to read your home directory and you run it and it works on Windows you do the same thing and you",
    "start": "2394119",
    "end": "2399319"
  },
  {
    "text": "figure out that it doesn't work and why oh well Yahoo messenger failed to load and it screws it up and then antivirus",
    "start": "2399319",
    "end": "2405160"
  },
  {
    "text": "is trying to open a file and it screws it up and then something else and then something else uh it's just very very",
    "start": "2405160",
    "end": "2411720"
  },
  {
    "text": "complicated and another thing to notice on the same slide is the order order is basically the number of DL so if you",
    "start": "2411720",
    "end": "2417640"
  },
  {
    "text": "look at the bottom it's 100 so when you open an acrobat DX and you open a PDF you read a PDF you've just loaded 100",
    "start": "2417640",
    "end": "2425160"
  },
  {
    "text": "DLS Okay so that's just to read a PDF file I recently had to develop some code",
    "start": "2425160",
    "end": "2430480"
  },
  {
    "text": "we which is reading a CPU count I had to find out what was the load on my machine and I've noticed that when whenever I",
    "start": "2430480",
    "end": "2435800"
  },
  {
    "text": "try to read for the first time the counter using the 132 pdh the DL API it takes a long time a long time I mean 3",
    "start": "2435800",
    "end": "2442240"
  },
  {
    "text": "seconds I would run an app and to get the first reading it takes it takes 3 seconds I thought well that's kind of",
    "start": "2442240",
    "end": "2447400"
  },
  {
    "text": "weird that's pretty slow what's going on so I did the same thing I look at the DLS and I've noticed when I try to read a counter it loads up about 50 D well",
    "start": "2447400",
    "end": "2455440"
  },
  {
    "text": "maybe not 50 but about 20 to 30 d just to get a CPU counter it pulls in the entire NET Framework it pulls in ASP",
    "start": "2455440",
    "end": "2462960"
  },
  {
    "text": "asp.net DLS this is to get the CPU counter on your machine okay if you don't believe me and you have a Windows",
    "start": "2462960",
    "end": "2469000"
  },
  {
    "text": "XP box just attached to you know attached to Tas manager and see what's going on it's it's it's insane so this",
    "start": "2469000",
    "end": "2474960"
  },
  {
    "text": "is the types of complexity we're talking about in Windows it's not clearcut you know on on on Unix you know it's you",
    "start": "2474960",
    "end": "2480280"
  },
  {
    "text": "going be five libraries they're going to do a very specific things and you're done it works it it works well on Windows it's going to end up with 250",
    "start": "2480280",
    "end": "2487599"
  },
  {
    "text": "dlls which hijacked your apis you know many times over and you just don't know what's going on very complicated to do",
    "start": "2487599",
    "end": "2494599"
  },
  {
    "text": "sandboxing properly in Windows so there's a conclusion for the sandbox bit the processes are run in the",
    "start": "2494599",
    "end": "2501319"
  },
  {
    "text": "sandbox it runs from kernel mode so you can't bypass it the sandbox control access to all resources from files to",
    "start": "2501319",
    "end": "2507520"
  },
  {
    "text": "processes everything everything is controlled and they described using policy files which is just a list a list",
    "start": "2507520",
    "end": "2513240"
  },
  {
    "text": "of rules uh for a particular application",
    "start": "2513240",
    "end": "2517640"
  },
  {
    "text": "so besides sandboxing and memory protection which is already pretty good and you you know you can't get this you",
    "start": "2519400",
    "end": "2525000"
  },
  {
    "text": "know you can't go to source forge.com and download this stuff you know simply it's not there um sandboxing proc",
    "start": "2525000",
    "end": "2532000"
  },
  {
    "text": "already provides some some significant advantages but you know there are the",
    "start": "2532000",
    "end": "2537160"
  },
  {
    "text": "things you can do the system protection layer uh was designed to harden their in L operating system like I said Windows",
    "start": "2537160",
    "end": "2542839"
  },
  {
    "text": "is a very complicated Beast they can do a lot of things but you know those that functionality is not necessarily need to",
    "start": "2542839",
    "end": "2548119"
  },
  {
    "text": "be there so for example your secretary probably does need doesn't need to debug applications but you can okay so you can",
    "start": "2548119",
    "end": "2555720"
  },
  {
    "text": "disable a lot of the functionality without actually losing any features so most of the people don't need to use",
    "start": "2555720",
    "end": "2560960"
  },
  {
    "text": "features such as debugging or do6 emulation you can disable functionality that that's that's that's used by",
    "start": "2560960",
    "end": "2566680"
  },
  {
    "text": "keyboard loggers and you know most certainly your secretary won't be loaded in your kernel drivers so you can disable that and finally the system",
    "start": "2566680",
    "end": "2573079"
  },
  {
    "text": "protection layer also uh includes access to removal media so we can control access the media so you can come up with",
    "start": "2573079",
    "end": "2579240"
  },
  {
    "text": "a USB stick you can stick it in and you can configure that it's read only it's nonexecutable whatever you can also it",
    "start": "2579240",
    "end": "2585000"
  },
  {
    "text": "also comes under the hardening of of the system so here are some examples I mean these are this are some of the rules so",
    "start": "2585000",
    "end": "2590720"
  },
  {
    "text": "for example protection debugging uh turns out protection which disables debugging so if you know that your",
    "start": "2590720",
    "end": "2597359"
  },
  {
    "text": "company doesn't use debugging you know you you you're not a software company you can probably disable debugging and not lose anything similarly why do you",
    "start": "2597359",
    "end": "2604400"
  },
  {
    "text": "need do 16 ulation on your machine un unless you use debug. comom or edit. axz",
    "start": "2604400",
    "end": "2610000"
  },
  {
    "text": "which you probably don't you don't need it interestingly enough if you remember EI published a remote sorry local ring",
    "start": "2610000",
    "end": "2617200"
  },
  {
    "text": "zero um attack last year this relied on some of the docine emulation on some of",
    "start": "2617200",
    "end": "2622480"
  },
  {
    "text": "the LTD manipulation um I already ozen was already developed by that time I",
    "start": "2622480",
    "end": "2627640"
  },
  {
    "text": "already I I I analyzed all the system calls and windows and I figured well who's going to be using this this this do6 emulation looks way too dodgy and I",
    "start": "2627640",
    "end": "2635160"
  },
  {
    "text": "was right you know several months later I read an EI advisory which is basically ring zero attack but no one ever uses",
    "start": "2635160",
    "end": "2642240"
  },
  {
    "text": "the doc system emulation so it's it's you don't need it you can disable it the keyboard stuff will disable keyboard",
    "start": "2642240",
    "end": "2647760"
  },
  {
    "text": "logs which use Global hooks uh you can also things like you can disable time change right so if someone owns you they",
    "start": "2647760",
    "end": "2653760"
  },
  {
    "text": "can change the times and logs and to roll it back hide themselves you can do that um the token mod modifier you can",
    "start": "2653760",
    "end": "2660280"
  },
  {
    "text": "disable uh this is basically to prevent attackers from escalating the local privileges and as I mentioned you can",
    "start": "2660280",
    "end": "2666079"
  },
  {
    "text": "for example make your media so USB uh sticks read only so these are some of the examples",
    "start": "2666079",
    "end": "2671839"
  },
  {
    "text": "of what you can do to log down the system without actually losing any of the functionality you will not you will not",
    "start": "2671839",
    "end": "2677319"
  },
  {
    "text": "notice um any side effects some of the challenges include",
    "start": "2677319",
    "end": "2683240"
  },
  {
    "text": "the fact that once again when this is when this is complicated you know don't be surprised if you find out that your X",
    "start": "2683240",
    "end": "2689280"
  },
  {
    "text": "actually loads kernel drivers don't be surprised at all so there are some legiate applications that require loading of Kernel code drivers I'm not",
    "start": "2689280",
    "end": "2695319"
  },
  {
    "text": "even talking about system user processes which do this I'm talking about normal applications which do funny stuff so you",
    "start": "2695319",
    "end": "2701720"
  },
  {
    "text": "can simply say don't allow the loading of Kernel driers and of story because you will break application so you have",
    "start": "2701720",
    "end": "2707079"
  },
  {
    "text": "to be specific you have to say this process is not allowed or this process is allowed only to exe to load a specific kernel driver so it's not it's",
    "start": "2707079",
    "end": "2713960"
  },
  {
    "text": "not that clearcut uh another thing is when you're locking down the system let's say you created a rule which disallows right",
    "start": "2713960",
    "end": "2720240"
  },
  {
    "text": "access to Windows system 32 directory well which is great I mean you can't you know people can't install you know can",
    "start": "2720240",
    "end": "2727079"
  },
  {
    "text": "install rootkits or you know modify your binaries but the problem is you just killed your your your patching process",
    "start": "2727079",
    "end": "2733359"
  },
  {
    "text": "right if you ever use update your patches which you should then then you've just broke that so you can't say",
    "start": "2733359",
    "end": "2739880"
  },
  {
    "text": "don't write don't disallow All rights to win this system the2 directory because you'll break things you know Internet",
    "start": "2739880",
    "end": "2746359"
  },
  {
    "text": "Explorer will load it will download a bunch of binaries you'll run them and they'll override your kernel files and",
    "start": "2746359",
    "end": "2751520"
  },
  {
    "text": "it's it's okay it happens in Windows every week every Tuesday as a matter of fact you know your binaries get overwritten and everyone goes on so you",
    "start": "2751520",
    "end": "2758559"
  },
  {
    "text": "have to be careful you can't just loog down the system well you can but you'll break things so you have to be careful about how you lock it down because there",
    "start": "2758559",
    "end": "2764599"
  },
  {
    "text": "are some challenges so quick summary the we lock",
    "start": "2764599",
    "end": "2771200"
  },
  {
    "text": "down the underly operating system by uh protecting the core resources the core files register resources and we also try",
    "start": "2771200",
    "end": "2778119"
  },
  {
    "text": "to reduce the attack surface this is the main point we reduce attack surface we remove debugging we remove dust ex",
    "start": "2778119",
    "end": "2783319"
  },
  {
    "text": "ulations remove the stuff that can be exploited but it's not used a 99% of the machines so finally before I give the",
    "start": "2783319",
    "end": "2790839"
  },
  {
    "text": "demo and another important point is self- protection you know if you saw the demo that I gave last year you know you",
    "start": "2790839",
    "end": "2796520"
  },
  {
    "text": "can some of the hip system that are on the market they're not very secure you know not only I can bypass their buffer",
    "start": "2796520",
    "end": "2802960"
  },
  {
    "text": "for protection my shell cut can call Nat stop you know hip stud exd driver and it",
    "start": "2802960",
    "end": "2808040"
  },
  {
    "text": "will stop it and it's okay you know you can disable it so if you don't protect itself and you only protect other stuff",
    "start": "2808040",
    "end": "2814680"
  },
  {
    "text": "you know let's say you missed some kind of attack and get owned if if the next thing that happens you know your your",
    "start": "2814680",
    "end": "2820839"
  },
  {
    "text": "your system gets disabled and then it get root Ked well what good is that so you have to protect itself you know ozen",
    "start": "2820839",
    "end": "2826760"
  },
  {
    "text": "has to protect itself so you can't for example the way it does this it prevents uh everyone from disabling it you can't",
    "start": "2826760",
    "end": "2833680"
  },
  {
    "text": "stop the user line service you cannot disable for example you cannot stop the the colonel driver you simply cannot",
    "start": "2833680",
    "end": "2839040"
  },
  {
    "text": "unload it end of story in addition you can't load any well we try to prevent people from loading kernel Cod because",
    "start": "2839040",
    "end": "2844640"
  },
  {
    "text": "if you couldn't you know if you can if you can load kernel code then you can just disable us from there it's it's too",
    "start": "2844640",
    "end": "2850359"
  },
  {
    "text": "simple and as I mentioned you know everything is everything is reinforcement curl mode so it's it's",
    "start": "2850359",
    "end": "2856240"
  },
  {
    "text": "it's hard for us to attack us directly because because they they're in user",
    "start": "2856240",
    "end": "2861480"
  },
  {
    "text": "we're in kernel so we're the master and the under slave so as a as a conclusion you know",
    "start": "2861480",
    "end": "2868200"
  },
  {
    "text": "you know as you all probably know if you if you go down to fries and you buy your Windows XP and you go home and you plug",
    "start": "2868200",
    "end": "2874000"
  },
  {
    "text": "into DSL line and you go to Windows stop then you try to download Patches by the time youve done downloading the patches you're owned it is that",
    "start": "2874000",
    "end": "2881200"
  },
  {
    "text": "bad a brand new laptop if it's not patched will get own in probably under 10",
    "start": "2881200",
    "end": "2887359"
  },
  {
    "text": "minutes and there are a lot of attacks out there you know you know there are buffo flows there are local privilege escalations there are nasty emails",
    "start": "2887359",
    "end": "2894040"
  },
  {
    "text": "there's all kind of stuff all kind of stuff so to address you know this this huge is the ozom design was Secret in",
    "start": "2894040",
    "end": "2900520"
  },
  {
    "text": "depth in mind so we took a bunch of attack vectors we looked you know I looked at them and said well how can we stop them you know how can we prevent",
    "start": "2900520",
    "end": "2906480"
  },
  {
    "text": "them and I try to you oen tries to give you the tools which you can use to lock it down because today I mean to be",
    "start": "2906480",
    "end": "2911760"
  },
  {
    "text": "honest with you Windows security consists of consist of putting your windows box behind a firewall running an",
    "start": "2911760",
    "end": "2917680"
  },
  {
    "text": "antivirus and updating the signatures on it every 15 minutes and and patching patching every",
    "start": "2917680",
    "end": "2924079"
  },
  {
    "text": "Tuesday that's that's how people do security on Windows today I mean that's bad I mean that is really bad you know",
    "start": "2924079",
    "end": "2929799"
  },
  {
    "text": "if you go to any company to any any big Enterprise and you ask where the windows machines are they they're hidden away I",
    "start": "2929799",
    "end": "2936119"
  },
  {
    "text": "mean I don't know I don't know single Enterprise which allows I mean some Enterprises disallow Windows machines and DMZ altogether",
    "start": "2936119",
    "end": "2943400"
  },
  {
    "text": "others just file them off you know don't allow on your connection so people don't trust windows and you know you can",
    "start": "2943400",
    "end": "2949240"
  },
  {
    "text": "understand that you know until you know until Windows 2003 I mean Windows was swiss cheese I mean it was really bad I",
    "start": "2949240",
    "end": "2954760"
  },
  {
    "text": "mean if you go back a couple years ago you know Windows 2000 with is-5 I mean you might as well just give",
    "start": "2954760",
    "end": "2960640"
  },
  {
    "text": "out your admin password I mean same thing so always consist of multiple layers which stop a variety of attack",
    "start": "2960640",
    "end": "2966839"
  },
  {
    "text": "vectors you know I talked about stopping memory based attacks which is based on randomizing the DS I talked about",
    "start": "2966839",
    "end": "2971920"
  },
  {
    "text": "locking down the processes by running in a sandbox I talked about the hardening the underlying operating system without",
    "start": "2971920",
    "end": "2977480"
  },
  {
    "text": "breaking anything and also protecting itself so are there any questions before",
    "start": "2977480",
    "end": "2983720"
  },
  {
    "text": "uh before I give the demo or should I give the demo and then do questions let's do the demo first so let me show",
    "start": "2983720",
    "end": "2990520"
  },
  {
    "text": "you I mean this is not Vapor dream honestly and my okay here we go",
    "start": "2990520",
    "end": "2998640"
  },
  {
    "text": "so let's talk about let's start with memory protection okay let's start with memory protection let me show you what",
    "start": "2999119",
    "end": "3005280"
  },
  {
    "text": "I'm talking about when I'm talking about randomizing so I have a little program here which prints out which prints out",
    "start": "3005280",
    "end": "3011359"
  },
  {
    "text": "addresses of a stack Heap in n dll and if you run this program on a normal system on a Windows system it'll show",
    "start": "3011359",
    "end": "3016520"
  },
  {
    "text": "you the same addresses in fact you can run it on different machines on a different Windows machine it will get the same addresses across the entire",
    "start": "3016520",
    "end": "3023319"
  },
  {
    "text": "Enterprise it is that similar so let me disable the stack protection for this",
    "start": "3023319",
    "end": "3028599"
  },
  {
    "text": "particular process to show you what I'm talking about so the program is called stack",
    "start": "3028599",
    "end": "3034160"
  },
  {
    "text": "that XZ and here are all the list of all the policies and as I mentioned it's just a text file which you can",
    "start": "3034160",
    "end": "3040680"
  },
  {
    "text": "modify and so what I'm going to do is I'm going to disable it so I'm going to say protection is all protection is off",
    "start": "3040680",
    "end": "3046319"
  },
  {
    "text": "so we're not we're not doing anything with this process I'm going to run it so it's called stack XZ and I modifi",
    "start": "3046319",
    "end": "3053319"
  },
  {
    "text": "stack XZ policy so if you can see this I mean the main point you don't need to concentrate on addresses but the main",
    "start": "3053319",
    "end": "3060280"
  },
  {
    "text": "point is as I run it the addresses are the same it's going to be the same on this machine and it's probably the same",
    "start": "3060280",
    "end": "3066680"
  },
  {
    "text": "in your machine or if it's not the same it's it's slightly different okay so this is the same for",
    "start": "3066680",
    "end": "3072160"
  },
  {
    "text": "every single machine on the internet if I enable protection that is",
    "start": "3072160",
    "end": "3079559"
  },
  {
    "text": "I enable the memory protection stuff and I run it again the picture changes",
    "start": "3079559",
    "end": "3084680"
  },
  {
    "text": "considerably so if you look at the two instances here",
    "start": "3084680",
    "end": "3089799"
  },
  {
    "text": "once again the address is not very important but you've all a said of notice the addresses all over the place",
    "start": "3089799",
    "end": "3095520"
  },
  {
    "text": "you know one instance is in you know at 100 megabytes the other is at 200 the other is at 300 so they're all over the",
    "start": "3095520",
    "end": "3102040"
  },
  {
    "text": "place so this is what I'm talking about so if you try to not run an exploit let me show you I have a little exploit that",
    "start": "3102040",
    "end": "3107960"
  },
  {
    "text": "I wrote and it's basically all it does it you know straight up M Copy overes the return address which which which",
    "start": "3107960",
    "end": "3113880"
  },
  {
    "text": "then uh prints out the message box which is owned the way this this would",
    "start": "3113880",
    "end": "3119760"
  },
  {
    "text": "work uh let's see if I have the the thing",
    "start": "3119760",
    "end": "3126599"
  },
  {
    "text": "here the program is called overflow and if I might if I if I tell Turnal",
    "start": "3128480",
    "end": "3135079"
  },
  {
    "text": "protection off then you will see it you'll see that it's going to get owned so so let's turn off memory",
    "start": "3135079",
    "end": "3142839"
  },
  {
    "text": "production stuff and run the program so overflow you run it and you get a little",
    "start": "3142839",
    "end": "3149200"
  },
  {
    "text": "message box which which says your own and like I said I override the return address and the return address points to",
    "start": "3149200",
    "end": "3155559"
  },
  {
    "text": "a function which says your owned you know in a real exploit this would be pointing back into payload which does",
    "start": "3155559",
    "end": "3161440"
  },
  {
    "text": "which does things now if I run it again it'll work again if I run it again it'll",
    "start": "3161440",
    "end": "3167160"
  },
  {
    "text": "work again the reason for that is because addresses don't change the thing here if you look at this this binary",
    "start": "3167160",
    "end": "3172599"
  },
  {
    "text": "junk this is a built-in address and this address doesn't change it's it's it's the same it'll probably the same in your",
    "start": "3172599",
    "end": "3178079"
  },
  {
    "text": "system so if I give you this program you run it you will get owned or rather you know you will see the message that you're own because it's the",
    "start": "3178079",
    "end": "3185240"
  },
  {
    "text": "same but if I enable the protection if I say protection overflow oops protection",
    "start": "3186440",
    "end": "3192720"
  },
  {
    "text": "overflow is on the address is not going to be the same anymore it's going to be very very different and if I run it well",
    "start": "3192720",
    "end": "3198559"
  },
  {
    "text": "nothing's going to happen the reason for that is because the program basically goes away it dies because the address that I overwrote it with doesn't exist",
    "start": "3198559",
    "end": "3205319"
  },
  {
    "text": "anymore it just points into to void so window simply kills the process and this is what I'm talking about you're not",
    "start": "3205319",
    "end": "3212000"
  },
  {
    "text": "owned but your process probably went away most of the most of the service will just restart which is good but is",
    "start": "3212000",
    "end": "3217640"
  },
  {
    "text": "also bad because he can be brute forced but that's that's how it is today um so",
    "start": "3217640",
    "end": "3222760"
  },
  {
    "text": "you know like I said you know this is the policy file you can read it you know it's it's English",
    "start": "3222760",
    "end": "3231240"
  },
  {
    "text": "oops you can probably understand what it says so let me let me show you some more specific policies let's say",
    "start": "3231240",
    "end": "3238440"
  },
  {
    "text": "let's say a commanded exit the policy so let's say you want to",
    "start": "3238599",
    "end": "3243680"
  },
  {
    "text": "say you have a rule that says you can't access a file called 1",
    "start": "3243680",
    "end": "3251079"
  },
  {
    "text": "1234 okay if I open command and I try to do",
    "start": "3251079",
    "end": "3256880"
  },
  {
    "text": "it if I try to access the file which is go 1 2 3 4 it'll fail it'll fail again",
    "start": "3256880",
    "end": "3262040"
  },
  {
    "text": "and again and there's no way I can bypass is because this is running from Colonel Len",
    "start": "3262040",
    "end": "3268079"
  },
  {
    "text": "and what you should also not is I guess this is the important bit is that I'm running as administrator okay so I'm an admin on",
    "start": "3268079",
    "end": "3274280"
  },
  {
    "text": "this box but it still works the reason for this is because they coming from userland so I don't care who you are you know you're ading",
    "start": "3274280",
    "end": "3280839"
  },
  {
    "text": "your system whatever the policy is being enforced in you anyway so if you have is which runs with assistant privileges it is metal it",
    "start": "3280839",
    "end": "3287839"
  },
  {
    "text": "still work so another policy I mentioned there's a global policy which applies to",
    "start": "3287839",
    "end": "3292880"
  },
  {
    "text": "all users and all commands and let's live in computer.",
    "start": "3292880",
    "end": "3298319"
  },
  {
    "text": "policy and there if you specify a rule you'll apply to every single process every single command you run you'll do",
    "start": "3298319",
    "end": "3303720"
  },
  {
    "text": "it so for example I have a rule that says time change deny right I mean it's pretty clear I can change the time so if",
    "start": "3303720",
    "end": "3309839"
  },
  {
    "text": "I if I now go and try to change the time as administrator which you obviously can it's it's not going to work so if",
    "start": "3309839",
    "end": "3315760"
  },
  {
    "text": "someone hacks you and tries to change the time to roll back the logs you won't be able to do it if you have this rule turned",
    "start": "3315760",
    "end": "3321440"
  },
  {
    "text": "on so I'm running as administrator but it doesn't matter",
    "start": "3321440",
    "end": "3327160"
  },
  {
    "text": "so let's say I want to say it's go back to minutes and clean the",
    "start": "3327720",
    "end": "3333520"
  },
  {
    "text": "logs so I say apply and if you look at back here it's still 0110 it silently fails it you",
    "start": "3333520",
    "end": "3340680"
  },
  {
    "text": "can't change the time uh let me show another example uh for",
    "start": "3340680",
    "end": "3347200"
  },
  {
    "text": "example I have a rule which says you can't inject DLS okay you can't inject random DLS into processes which which is",
    "start": "3348359",
    "end": "3356359"
  },
  {
    "text": "being used uh for example it can be used by various exploits so there was an exploit published um a while ago",
    "start": "3356359",
    "end": "3363000"
  },
  {
    "text": "actually and what it does is it injects a dlll into a system process and then it",
    "start": "3363000",
    "end": "3368760"
  },
  {
    "text": "steals your password hashes okay password hash is supposed to be protected you know the stort in a registry in a registry Hive where you",
    "start": "3368760",
    "end": "3375520"
  },
  {
    "text": "can't access it but by injecting the DL you can bypass it so if you try to run",
    "start": "3375520",
    "end": "3381599"
  },
  {
    "text": "PW Dum 2 you should be able to get the hatches which is equivalent to to to your pass passwords so I have to make",
    "start": "3381599",
    "end": "3387760"
  },
  {
    "text": "sure that for example the policy doesn't disallow",
    "start": "3387760",
    "end": "3391880"
  },
  {
    "text": "so the is a bit slow so if I run find out run PW",
    "start": "3397000",
    "end": "3406599"
  },
  {
    "text": "temp2 it's going to give me my password hashes you there's well there should be no either way for you to get them uh on",
    "start": "3407359",
    "end": "3414400"
  },
  {
    "text": "Windows except this way right right so this is bad this is this is like me stealing a password more or less and the",
    "start": "3414400",
    "end": "3420920"
  },
  {
    "text": "way like I said the way this works is this program will inject the DL into system process and just dumps it off straight from there now there is no need",
    "start": "3420920",
    "end": "3428000"
  },
  {
    "text": "for anyone to eject the dll in your system process okay it just doesn't happen so as a rule you would have a",
    "start": "3428000",
    "end": "3433720"
  },
  {
    "text": "policy a global computer policy which says you cannot inject DS into your system process okay so when you run the",
    "start": "3433720",
    "end": "3439520"
  },
  {
    "text": "same thing as administrator it get failed to open lsas 5 five means X is denied so that's that's another example",
    "start": "3439520",
    "end": "3447000"
  },
  {
    "text": "so there are many many many different things you can do um but I guess I'll I'll take the",
    "start": "3447000",
    "end": "3453079"
  },
  {
    "text": "questions now",
    "start": "3453079",
    "end": "3455920"
  },
  {
    "text": "yeah well in only works on Windows 2000 on XP and up Center",
    "start": "3461200",
    "end": "3467880"
  },
  {
    "text": "yeah so the question is uh what type of performance you have on Sandbox um the questions that the",
    "start": "3468520",
    "end": "3475440"
  },
  {
    "text": "performance is the performance hit is quite minimal right what basically happens when you",
    "start": "3475440",
    "end": "3480640"
  },
  {
    "text": "try to let's say you're trying to copy a file somewhere so what you do is you open a file you get a handle and then",
    "start": "3480640",
    "end": "3486839"
  },
  {
    "text": "you copy it over we only intercept the only time ozone interferes is when you open a file once you open your file",
    "start": "3486839",
    "end": "3493280"
  },
  {
    "text": "right you can copy your megabytes and megabytes of data and you never touch ozone code so you run at full speed so you only you only hit the only initial",
    "start": "3493280",
    "end": "3500000"
  },
  {
    "text": "performance here is when you open the file and that's pretty fast and to open a file it's a performance overhead of",
    "start": "3500000",
    "end": "3505640"
  },
  {
    "text": "you know which it might be high it might be like double what it would be to open open a normal file but if you look at",
    "start": "3505640",
    "end": "3511280"
  },
  {
    "text": "the actual action of copying a file or reading a file it's it's talking about like two or 3% of the over the overall",
    "start": "3511280",
    "end": "3518480"
  },
  {
    "text": "life of of that",
    "start": "3518480",
    "end": "3521520"
  },
  {
    "text": "object right I mean filon uh does it hook registry uh sorry uh syst calls",
    "start": "3523680",
    "end": "3530640"
  },
  {
    "text": "because I thought itd use filter drivers but anyway it's it's it's reasonable",
    "start": "3530640",
    "end": "3538039"
  },
  {
    "text": "yeah uh you can't as a normal user go straight to the ports because",
    "start": "3549319",
    "end": "3555000"
  },
  {
    "text": "um because because you're not allowed um right so the the direct Port access",
    "start": "3555000",
    "end": "3560119"
  },
  {
    "text": "would be disallowed uh in ring three uh unless you have some iopl stuff set up",
    "start": "3560119",
    "end": "3566480"
  },
  {
    "text": "so we don't I don't protect against direct system Port access but Windows does because if it didn't it would be",
    "start": "3566480",
    "end": "3573240"
  },
  {
    "text": "owned so I I actually don't need to do anything extra on that Windows does good enough of a job for that particular",
    "start": "3573240",
    "end": "3578799"
  },
  {
    "text": "piece um iopl is a system um probably but I",
    "start": "3578799",
    "end": "3587400"
  },
  {
    "text": "guess well it it depends how you set up I mean you can't deny it to system as well so it it it it",
    "start": "3587400",
    "end": "3594480"
  },
  {
    "text": "varies yes",
    "start": "3594480",
    "end": "3598039"
  },
  {
    "text": "yeah",
    "start": "3603280",
    "end": "3606280"
  },
  {
    "text": "yeah so you talking about fragmentation of virtual address space uh well the way",
    "start": "3620079",
    "end": "3626119"
  },
  {
    "text": "do it is all once you um all the initial DS loaded straight up in linear fashion the same way as Windows does but at a",
    "start": "3626119",
    "end": "3632280"
  },
  {
    "text": "different base right so if your all your DLS used to be loaded at the end of userland and I randomize you to let's",
    "start": "3632280",
    "end": "3638359"
  },
  {
    "text": "say to the first gigabyte all of your DS instead of getting loaded there will get loaded at the first gigabyte in a linear",
    "start": "3638359",
    "end": "3643960"
  },
  {
    "text": "fashion so you don't get fragmentation as bad",
    "start": "3643960",
    "end": "3649200"
  },
  {
    "text": "in yes it doesn't have to be that way but yeah it's in the same motor at this point so same way as Windows would do",
    "start": "3649200",
    "end": "3655039"
  },
  {
    "text": "normally",
    "start": "3655039",
    "end": "3657920"
  },
  {
    "text": "yes is it possible to uh get around the sandbox Mech using com objects uh if you",
    "start": "3663440",
    "end": "3669079"
  },
  {
    "text": "use inoc com objects then the com object is going to be loaded in the same address space so you loaded you're going",
    "start": "3669079",
    "end": "3674280"
  },
  {
    "text": "to be uh subject to the same sandbox rules if you use outut of ProCom object then",
    "start": "3674280",
    "end": "3680319"
  },
  {
    "text": "it's potentially possible if you know if we don't restrict that so since most is is is in proc it",
    "start": "3680319",
    "end": "3687680"
  },
  {
    "text": "applies you have the same problem oh sorry it applies the same way so Inc",
    "start": "3687680",
    "end": "3692799"
  },
  {
    "text": "which is the majority of them will will be subject to the same sandbox",
    "start": "3692799",
    "end": "3698359"
  },
  {
    "text": "mechanism the way the allocations will work when you talk about proberbly create section is that um",
    "start": "3708880",
    "end": "3716760"
  },
  {
    "text": "they will yeah I think that that gets randomized as well BEC unless you of course specify that when you create a",
    "start": "3716760",
    "end": "3722440"
  },
  {
    "text": "create a section you you can specify if you want to load a specific address if you don't specify windows will take",
    "start": "3722440",
    "end": "3727599"
  },
  {
    "text": "whatever address I think the address will get randomized as well",
    "start": "3727599",
    "end": "3733240"
  },
  {
    "text": "so I'm sorry yeah yeah go ahead",
    "start": "3734400",
    "end": "3740318"
  },
  {
    "text": "please uh say it again do we hook open",
    "start": "3742200",
    "end": "3747838"
  },
  {
    "text": "thread we open process for sure I canot remember open thread",
    "start": "3749359",
    "end": "3754920"
  },
  {
    "text": "why say it",
    "start": "3757240",
    "end": "3760520"
  },
  {
    "text": "again yeah yeah we try to prevent that stuff yeah so for example like PW T to well I mean that's that's process ofen",
    "start": "3765160",
    "end": "3771240"
  },
  {
    "text": "but it's very similar right um where you just try to inject stuff into into your address space you not supposed to so",
    "start": "3771240",
    "end": "3779160"
  },
  {
    "text": "yeah yes say it",
    "start": "3779160",
    "end": "3785359"
  },
  {
    "text": "again do we do anything against BR Force um no uh we don't we don't protect",
    "start": "3787920",
    "end": "3793839"
  },
  {
    "text": "against boot Force attacks I mean it's possible to say you know if your process is getting respawned 100,000 times in a",
    "start": "3793839",
    "end": "3799839"
  },
  {
    "text": "minute then then stop it but we don't do it I mean it's it's it's possible um but",
    "start": "3799839",
    "end": "3805319"
  },
  {
    "text": "I think it's be done by like a separate processor or a separate module",
    "start": "3805319",
    "end": "3810640"
  },
  {
    "text": "um I mean I'm sure pretty sure your logs will get filled up pretty quickly as well so we don't do it I mean it's",
    "start": "3810640",
    "end": "3817119"
  },
  {
    "text": "possible we haven't decided okay do you have 10 minutes okay",
    "start": "3817119",
    "end": "3823520"
  },
  {
    "text": "so more questions yeah",
    "start": "3823520",
    "end": "3827640"
  },
  {
    "text": "yeah yeah that's a good question as a matter of fact you know when I said the the question was well can't you you know",
    "start": "3840520",
    "end": "3845920"
  },
  {
    "text": "intercept some of those crashes yes you can when aslr changes the address that's one of the things I meant to do but I",
    "start": "3845920",
    "end": "3851559"
  },
  {
    "text": "didn't is I want to look at when um aslr when you when you have an exception",
    "start": "3851559",
    "end": "3858319"
  },
  {
    "text": "I can catch the exception for you and see where the exception landed right so if I see the exception is being landed",
    "start": "3858319",
    "end": "3863520"
  },
  {
    "text": "in your Colonel 32 or what was supposed to be CRI the 2dl and I know it's not there anymore that I can I can be pretty",
    "start": "3863520",
    "end": "3870079"
  },
  {
    "text": "sure that it's an exploit that uses static address which means I can log the fact and kill the thread so yeah that's definitely possible one of the things I",
    "start": "3870079",
    "end": "3876200"
  },
  {
    "text": "want to do yeah that's a good one",
    "start": "3876200",
    "end": "3880838"
  },
  {
    "text": "yeah is it the question was Is it feasible to add time based policy",
    "start": "3882119",
    "end": "3888359"
  },
  {
    "text": "um um or is it too much overhead it's it's feasible it's not done would it be too",
    "start": "3888359",
    "end": "3894559"
  },
  {
    "text": "much overhead no it wouldn't it would it would be almost no Warhead whatsoever so yeah",
    "start": "3894559",
    "end": "3900760"
  },
  {
    "text": "it's definitely feasible I just haven't done it but there's there's nowh in doing",
    "start": "3900760",
    "end": "3905799"
  },
  {
    "text": "that ASR ASR what's my source of entropy uh the system clock no I'm just",
    "start": "3905799",
    "end": "3913319"
  },
  {
    "text": "kidding um I've looked at how the windows kernel",
    "start": "3913319",
    "end": "3918799"
  },
  {
    "text": "uses some C generation they basically take uh I take like all this performance counters which are some crazy numbers I",
    "start": "3918799",
    "end": "3925480"
  },
  {
    "text": "take the the actual system clock but not the time but the the the number of ticks",
    "start": "3925480",
    "end": "3931119"
  },
  {
    "text": "um that's that's got loaded I take some thread and process ID I mix it all up um this is pretty much how it was done by",
    "start": "3931119",
    "end": "3937119"
  },
  {
    "text": "some windows people as well for for seating so it's it's pretty difficult but you know nice",
    "start": "3937119",
    "end": "3944720"
  },
  {
    "text": "try yes how do I protect my policy files that's a good question uh I mean you can",
    "start": "3944880",
    "end": "3951680"
  },
  {
    "text": "say right access to a you know your policy directory is forbidden which means you can't modify them",
    "start": "3951680",
    "end": "3957319"
  },
  {
    "text": "anymore right um that's fine you can do that but means well if you need to change it what do you do well you need",
    "start": "3957319",
    "end": "3962720"
  },
  {
    "text": "to reboot the box now because as you remember there's no way you can override the rules okay so you need to reboot the Box in a safe mode and change it so",
    "start": "3962720",
    "end": "3969000"
  },
  {
    "text": "that's not very acceptable so one of the things you can do is you can say you can create a global policy rule which says",
    "start": "3969000",
    "end": "3974240"
  },
  {
    "text": "denies access to all users if you remember there's multiple hierarchies so you can create a computer Global policy",
    "start": "3974240",
    "end": "3979480"
  },
  {
    "text": "which says deny rule to the policy files except for except for a specific user except for a specific application except",
    "start": "3979480",
    "end": "3986000"
  },
  {
    "text": "for specific application running by user so you can create you could say some weird user running notepad is allowed to",
    "start": "3986000",
    "end": "3991799"
  },
  {
    "text": "change that file for example um so you can do that or you can just deny them all together right it's it's up to you",
    "start": "3991799",
    "end": "3997000"
  },
  {
    "text": "to to make that decision because in some environments it might not be acceptable for for change at all so you actually",
    "start": "3997000",
    "end": "4002799"
  },
  {
    "text": "need to reboot the box to do it for this of course it's not very manageable so you create you know quote unquote little loopholes which allow you to do that but",
    "start": "4002799",
    "end": "4009359"
  },
  {
    "text": "you know it's a very narrow process a specific user a specific process doing a specific thing is allowed to modify",
    "start": "4009359",
    "end": "4014599"
  },
  {
    "text": "policy file and nothing else you can do that as well because obviously it's up to you to create the grand",
    "start": "4014599",
    "end": "4020799"
  },
  {
    "text": "new uh the question was can we do I only do the file name well it's the path name versus the the hashes yeah I I haven't",
    "start": "4026240",
    "end": "4033240"
  },
  {
    "text": "done the hash stuff I mean it's trivial to do um I haven't done it but you can do it you know you can do it",
    "start": "4033240",
    "end": "4040240"
  },
  {
    "text": "on certificates you can do it on on on hashes I haven't done it but I mean it's it is very easy to do it is very easy to",
    "start": "4040240",
    "end": "4048400"
  },
  {
    "text": "do how often the policy files R um every time at this right now every time you",
    "start": "4050119",
    "end": "4056279"
  },
  {
    "text": "rest start a process is where read so if you modify the process sorry the policy and restart the process it will",
    "start": "4056279",
    "end": "4061359"
  },
  {
    "text": "automatically pick it up uh if it didn't modify it will still",
    "start": "4061359",
    "end": "4067119"
  },
  {
    "text": "reload it I mean you can add a time stump U I just haven't done it um because once again overall it's it's",
    "start": "4067119",
    "end": "4073079"
  },
  {
    "text": "it's pretty cheap to pars a policy versus the create process which is very very expensive",
    "start": "4073079",
    "end": "4078520"
  },
  {
    "text": "yes what point process what point at the booth process is loaded uh we load",
    "start": "4078520",
    "end": "4086319"
  },
  {
    "text": "before we load very early um there okay",
    "start": "4086319",
    "end": "4091760"
  },
  {
    "text": "when you do uh there's a value in the driver which says when when to load the first one is zero and zero means at boot",
    "start": "4091760",
    "end": "4097560"
  },
  {
    "text": "time and at boot time there's nothing has been created I mean I think only NTS Kel was loaded and that's it so that's",
    "start": "4097560",
    "end": "4103838"
  },
  {
    "text": "one point we loaded the next at the next point where some of the driveways were loaded but I'm thinking bumping it up to",
    "start": "4103839",
    "end": "4109318"
  },
  {
    "text": "where it's loaded even before before anything is done before a single driver is loaded before anything so it's anos",
    "start": "4109319",
    "end": "4114440"
  },
  {
    "text": "kernel and and that's it so we load before single process created before single driver is loaded before anything",
    "start": "4114440",
    "end": "4120600"
  },
  {
    "text": "has happened so we control the entire thing from the moment it boots up to the moment it's shut",
    "start": "4120600",
    "end": "4126758"
  },
  {
    "text": "down yes",
    "start": "4126759",
    "end": "4131520"
  },
  {
    "text": "are I so the question was are we doing any checks on",
    "start": "4134159",
    "end": "4139600"
  },
  {
    "text": "um on the device physical memory yeah the question is yes question",
    "start": "4139600",
    "end": "4146080"
  },
  {
    "text": "is yes and I'll I'll show you how it is I mean I it's not a specific thing I just created a rule and it does it which",
    "start": "4146080",
    "end": "4152560"
  },
  {
    "text": "is pretty cool um so the physical memory if you do a search for physical memory in a global policy I have it running",
    "start": "4152560",
    "end": "4159199"
  },
  {
    "text": "here sectional if name is equal device physical memory then deny uh you have to",
    "start": "4159199",
    "end": "4164600"
  },
  {
    "text": "be careful with this because for some reason oh I I I remember now I when I when I first",
    "start": "4164600",
    "end": "4170640"
  },
  {
    "text": "enabled this uh and this was the night before I was supposed to give a presentation I rebooted my machine it didn't boot up or it booted up and it",
    "start": "4170640",
    "end": "4177480"
  },
  {
    "text": "gave me the you know it gave me the access of I was supposed to activate my windows so it basically would not wouldn't allow me to log in and force me",
    "start": "4177480",
    "end": "4183600"
  },
  {
    "text": "to activate the user uh to activate Windows and I panicked of course you know it's midnight I'm supposed to give the presentation next morning um I was",
    "start": "4183600",
    "end": "4190400"
  },
  {
    "text": "wondering what what was going on the problem is what's going on is that when log on on Windows",
    "start": "4190400",
    "end": "4196199"
  },
  {
    "text": "uses device physical memory to do some magic stuff to find out whether it's legitimate copy so if you're going to do",
    "start": "4196199",
    "end": "4202520"
  },
  {
    "text": "the rule which says section all nameable physical device memory you have to be careful to make sure wind log and still have access to physical memory because",
    "start": "4202520",
    "end": "4208719"
  },
  {
    "text": "otherwise you're hosed so just be careful",
    "start": "4208719",
    "end": "4215679"
  },
  {
    "text": "yeah very good question the question is uh what's the impact on a developer when the randomization is turned on I learned",
    "start": "4217760",
    "end": "4223880"
  },
  {
    "text": "it the hard way uh I was I was like wow I I was I was I",
    "start": "4223880",
    "end": "4229000"
  },
  {
    "text": "was reverse engineering this um olal before I started I was I I was",
    "start": "4229000",
    "end": "4235239"
  },
  {
    "text": "reverse engineering this uh protection scheme which was used by by some program and and I've noticed",
    "start": "4235239",
    "end": "4242360"
  },
  {
    "text": "it was loading DLS at random addresses and it was really it was really difficult because I had to you know I I",
    "start": "4242360",
    "end": "4247920"
  },
  {
    "text": "was attaching it with soft Dice and all the addresses were all over the place and I'm like my God they make it really hard because I had to calculate the",
    "start": "4247920",
    "end": "4254120"
  },
  {
    "text": "offset you know calculate run time I was like this is a really you know this is a  these guys are",
    "start": "4254120",
    "end": "4262000"
  },
  {
    "text": "good and then I'm like hold on a second I forgot to turn off my randomization rules which made reverse",
    "start": "4262000",
    "end": "4268400"
  },
  {
    "text": "engineering very very difficult so yes if you doing the need bugging you probably want to disable it because they'll make it very difficult if you're",
    "start": "4268400",
    "end": "4274239"
  },
  {
    "text": "if you're if you're reverse engineering something you might want to disassemble it as well because otherwise you get too much credit to people who implemented it",
    "start": "4274239",
    "end": "4279920"
  },
  {
    "text": "because they haven't done anything like that which which they could have but which they but they didn't so so yeah",
    "start": "4279920",
    "end": "4285480"
  },
  {
    "text": "you might want to disable",
    "start": "4285480",
    "end": "4288480"
  },
  {
    "text": "that do you think the reversing the the the protection vendor ship Shi their",
    "start": "4291120",
    "end": "4296400"
  },
  {
    "text": "product with symbols they weren't that bad you know yeah when you're biking your own",
    "start": "4296400",
    "end": "4302800"
  },
  {
    "text": "car yeah it's it's symbols yeah it makes no difference because it does in runtime so you can load at any time but you know",
    "start": "4302800",
    "end": "4309120"
  },
  {
    "text": "sometimes it it can screw it can screw with you I suppose yes",
    "start": "4309120",
    "end": "4315280"
  },
  {
    "text": "yeah the question is can we do we res kernel links yeah that's very important because obviously you can do you can do lots of different stuff um there are no",
    "start": "4316800",
    "end": "4324199"
  },
  {
    "text": "symbolics such in Windows well there are but there kind people don't know about them but you can do things like uh Subs",
    "start": "4324199",
    "end": "4330320"
  },
  {
    "text": "right if you ever use Subs you can create my f drive you can say C Windows System Theory 2 is my f Drive okay so if",
    "start": "4330320",
    "end": "4336320"
  },
  {
    "text": "you only look at the path name without resolving the name you'll be screwed because you said well f is not a system window system 32 right so what you",
    "start": "4336320",
    "end": "4343400"
  },
  {
    "text": "actually do is you open the object start resolving and the thing is there are multiple symbolic links in kernel space so you have to do it over and over and",
    "start": "4343400",
    "end": "4349320"
  },
  {
    "text": "over again until you actually get the name so yeah it's a to do but yeah we do it in the",
    "start": "4349320",
    "end": "4356719"
  },
  {
    "text": "end say it",
    "start": "4362520",
    "end": "4365840"
  },
  {
    "text": "again says who yeah I know I know that I know that",
    "start": "4370440",
    "end": "4376560"
  },
  {
    "text": "how you do it right but okay the question was you know the",
    "start": "4376560",
    "end": "4382800"
  },
  {
    "text": "there's SCM API in Windows which can which loads the dlll the kernel drivers amongst other things like Services uh",
    "start": "4382800",
    "end": "4389639"
  },
  {
    "text": "yes that's we hooked that as well so that we hook multiple points because there are multiple ways of loading a driver but that's one of them so if you",
    "start": "4389639",
    "end": "4396639"
  },
  {
    "text": "want to disable the ACMI API you you can uh how do you disable it",
    "start": "4396639",
    "end": "4406440"
  },
  {
    "text": "always the SCM when you load um it's the service that dxz actually doesn't load",
    "start": "4414280",
    "end": "4420239"
  },
  {
    "text": "colel drivers or rather when you do the SCM",
    "start": "4420239",
    "end": "4425120"
  },
  {
    "text": "I uh well I mean if you can tell to service 3xz only",
    "start": "4427239",
    "end": "4433239"
  },
  {
    "text": "to load good only known good colal drivers right if you know there's a specific colel driver you need to load you say it's okay to load this and but",
    "start": "4433239",
    "end": "4439880"
  },
  {
    "text": "deny everything",
    "start": "4439880",
    "end": "4442560"
  },
  {
    "text": "else I don't know I haven't looked at that I are you so basically you're saying AC pii will load a colel driver",
    "start": "4445639",
    "end": "4452760"
  },
  {
    "text": "in the context of service to that exz then in that case I guess it's not",
    "start": "4452760",
    "end": "4458560"
  },
  {
    "text": "as granular as doing an a per process it's kind of either you're allowed it to control drive or you're not end of story so that's the GR you get to system",
    "start": "4458560",
    "end": "4469080"
  },
  {
    "text": "yeah yeah so system drivers you enumerate them and say it's fine and as a matter of fact uh the service that they exit let me check when you boot up",
    "start": "4469080",
    "end": "4475159"
  },
  {
    "text": "a normal system uh when you when you boot up Windows it won't service that exit I don't believe loads any kernel",
    "start": "4475159",
    "end": "4480560"
  },
  {
    "text": "drivers the only Cel dri is loaded by SMS SMS SS that exe so services that exe",
    "start": "4480560",
    "end": "4486120"
  },
  {
    "text": "so I'm going to see if there are any kernel drivers loaded if there are none then then I know you can put up a Windows without service at axz one sec",
    "start": "4486120",
    "end": "4493400"
  },
  {
    "text": "it'll come up and I'll tell you got for one more",
    "start": "4493400",
    "end": "4498480"
  },
  {
    "text": "question so one more question while notepad is",
    "start": "4498480",
    "end": "4503360"
  },
  {
    "text": "opening all right I might as I might as well finish answering your question before I answer your next question",
    "start": "4504120",
    "end": "4510480"
  },
  {
    "text": "Jamie it's at system call level but can can you K can can you repeat your question I'm not sure I got all of",
    "start": "4521560",
    "end": "4528880"
  },
  {
    "text": "it correct correct yeah I mean we hook at multiple places right you can't hook",
    "start": "4535000",
    "end": "4541960"
  },
  {
    "text": "Network stuff in in Windows that's another thing you can't hook Network stack in Windows using system calls",
    "start": "4541960",
    "end": "4547239"
  },
  {
    "text": "there are no system calls so there is no connect system call okay the the network",
    "start": "4547239",
    "end": "4552320"
  },
  {
    "text": "architecture is completely different so there are multiple things there are multip places where we hook but for resources like files it is at system",
    "start": "4552320",
    "end": "4560520"
  },
  {
    "text": "uh uh at system C Level so to answer your question about the kernel drivers",
    "start": "4560520",
    "end": "4565639"
  },
  {
    "text": "if you look at the policy uh service that the exit does not load any uh any kernel drivers in a normal boot",
    "start": "4565639",
    "end": "4572679"
  },
  {
    "text": "up you would say no no it's not you would say driver load name equal driver. blah. CIS then",
    "start": "4573600",
    "end": "4581719"
  },
  {
    "text": "permit the rest driver load deny that's it you're",
    "start": "4581719",
    "end": "4588280"
  },
  {
    "text": "done does that answer your question okay well come talk to me after",
    "start": "4588280",
    "end": "4594199"
  },
  {
    "text": "after all right last",
    "start": "4594199",
    "end": "4597840"
  },
  {
    "text": "question partially yes partially but of course it's running on VMware uh there",
    "start": "4608000",
    "end": "4613800"
  },
  {
    "text": "are some this is running the reason why it's running vanw I'm running ozone in this system as well so for example",
    "start": "4613800",
    "end": "4619120"
  },
  {
    "text": "talking about Skype see I've got Skype running here and I've got soft ice on this machine as well so I'm running this",
    "start": "4619120",
    "end": "4625080"
  },
  {
    "text": "on this machine and as you see it's pretty Snappy right um there I'm running some development funny stuff in on that",
    "start": "4625080",
    "end": "4632400"
  },
  {
    "text": "VMware box so uh so yeah it's not that slow all right I believe that's all the",
    "start": "4632400",
    "end": "4639080"
  },
  {
    "text": "time that I have thank you",
    "start": "4639080",
    "end": "4644159"
  }
]