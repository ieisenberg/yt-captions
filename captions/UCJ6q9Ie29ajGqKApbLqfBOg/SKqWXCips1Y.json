[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14320"
  },
  {
    "text": "hi everyone welcome to our talk how are you jason digitalization zero day to steal money on the blockchain i'm",
    "start": "14320",
    "end": "20640"
  },
  {
    "text": "rolling and my co-speaker uzokai will be present at part two we are from tencent security shin lab our resource fields",
    "start": "20640",
    "end": "27599"
  },
  {
    "text": "include android web iot browser blockchain etc and our xeon lab offers",
    "start": "27599",
    "end": "32719"
  },
  {
    "text": "many outstanding achievements that are bad channel here is outline of our talk",
    "start": "32719",
    "end": "39120"
  },
  {
    "text": "first of all i will introduce first jason briefly for jason is a widely used open source",
    "start": "39120",
    "end": "45600"
  },
  {
    "text": "json password with 23 thousand hundred thousand stars on github it's known for faster",
    "start": "45600",
    "end": "51920"
  },
  {
    "text": "passing speed there are 3600 artifacts using",
    "start": "51920",
    "end": "57520"
  },
  {
    "text": "subjection on the movement as a basic model of countless jail web service it serves hundreds of millions of users",
    "start": "57520",
    "end": "66560"
  },
  {
    "start": "65000",
    "end": "170000"
  },
  {
    "text": "in this part i will detail the digitalization process and security check in the frustration and the",
    "start": "66560",
    "end": "71680"
  },
  {
    "text": "vulnerability to bypass this hike first of all there is a demo for json serializer and",
    "start": "71680",
    "end": "79040"
  },
  {
    "text": "deserializer first of all there is a demo for json",
    "start": "79040",
    "end": "84320"
  },
  {
    "text": "serialize and deserialize using first json at the left side there is a java",
    "start": "84320",
    "end": "89840"
  },
  {
    "text": "being named user with a stream field name name and the getter and center for name on",
    "start": "89840",
    "end": "96000"
  },
  {
    "text": "the right new user object and set name to using method json.jstring",
    "start": "96000",
    "end": "102560"
  },
  {
    "text": "with flag serializer feature dot red class name to serialize",
    "start": "102560",
    "end": "108000"
  },
  {
    "text": "the user object to json stream and you can see the output json the key ad type has value user that is",
    "start": "108000",
    "end": "114799"
  },
  {
    "text": "the class name of the object and the following is the field name and then",
    "start": "114799",
    "end": "120719"
  },
  {
    "text": "use method set auto types file to enable our type feature then using",
    "start": "120719",
    "end": "126520"
  },
  {
    "text": "json.pass method to deserialize this json string to a user",
    "start": "126520",
    "end": "132560"
  },
  {
    "text": "object with name 4. take note of this line of code of code",
    "start": "132560",
    "end": "138400"
  },
  {
    "text": "password config set auto type spot auto tab is a very important feature of fascism digitalization",
    "start": "138400",
    "end": "144720"
  },
  {
    "text": "it's the flag about whether physician can destroy any non-principled",
    "start": "144720",
    "end": "152000"
  },
  {
    "text": "non-presupposed classes automatically without",
    "start": "152000",
    "end": "157120"
  },
  {
    "text": "other configuration it's false if default if you don't enable auto type message",
    "start": "157120",
    "end": "162959"
  },
  {
    "text": "json path will also adjust an exception about auto type ignore support where you'll pass to json with x type user",
    "start": "162959",
    "end": "169599"
  },
  {
    "text": "class next i will detail the visualization process inside the first json",
    "start": "169599",
    "end": "176879"
  },
  {
    "start": "170000",
    "end": "395000"
  },
  {
    "text": "when the scanner catches the token key i type the serialized process will be started",
    "start": "176879",
    "end": "183599"
  },
  {
    "text": "first the target class name will be checked by the method check auto type if the check is passed",
    "start": "183599",
    "end": "191040"
  },
  {
    "text": "method get digitalizer will written the digitalization constructor the digitalizer will be selected by the",
    "start": "191040",
    "end": "196879"
  },
  {
    "text": "target type and finally use the method create instance of the object digitalizer to get object from json",
    "start": "196879",
    "end": "203760"
  },
  {
    "text": "fields next let's focus on the default method",
    "start": "203760",
    "end": "209040"
  },
  {
    "text": "check auto type and how to bypass it to visualize archery classes",
    "start": "209040",
    "end": "214879"
  },
  {
    "text": "the message check auto tab has three perma parameters parameter type name is the target class you want to",
    "start": "214879",
    "end": "220879"
  },
  {
    "text": "decentralize the you can you can specify it",
    "start": "220879",
    "end": "226040"
  },
  {
    "text": "explicitly in the json for example i'll type user the parameter expect class is the super",
    "start": "226040",
    "end": "233200"
  },
  {
    "text": "class or interface of the tagged class and again it can be none and the last parameter feature in the",
    "start": "233200",
    "end": "241040"
  },
  {
    "text": "serialized flag it always defaults before we start detailing the check process inside the check auto type we",
    "start": "241040",
    "end": "248239"
  },
  {
    "text": "need to know how to input a parameter of type class as the second parameter expect class",
    "start": "248239",
    "end": "256000"
  },
  {
    "text": "as we said the express class means inheritance there are two forms of inheritance in",
    "start": "256000",
    "end": "262320"
  },
  {
    "text": "the first json the first one is is is explicit inheritance",
    "start": "262320",
    "end": "268479"
  },
  {
    "text": "you can start adjusting object string with two edge type key the first attack value is the express class and the",
    "start": "268479",
    "end": "275280"
  },
  {
    "text": "second one following is the subclass which inherits from the express class and the third following are the",
    "start": "275280",
    "end": "282160"
  },
  {
    "text": "properties of the subclass another form is implicit inheritance",
    "start": "282160",
    "end": "288880"
  },
  {
    "text": "there is a demo class user had a field id with interface 4 and the class 4 import implements the",
    "start": "288880",
    "end": "296800"
  },
  {
    "text": "interface form so you can set the id to adjust an object with tab",
    "start": "296800",
    "end": "302080"
  },
  {
    "text": "tab 4 import that will trigger the implicit inheritance the interface 4 is the",
    "start": "302080",
    "end": "310160"
  },
  {
    "text": "expect class and the full import in the subclass",
    "start": "310160",
    "end": "315680"
  },
  {
    "text": "go back to the check auto type this section i will detail the control flow of the method check auto tab and",
    "start": "315759",
    "end": "321600"
  },
  {
    "text": "show you how to bypass it the first layer is the function prototype first if the target class is",
    "start": "321600",
    "end": "328240"
  },
  {
    "text": "in the waitlist or in the digitalizer cache",
    "start": "328240",
    "end": "333280"
  },
  {
    "text": "all has the json annotation json type it will be it will pass the check the",
    "start": "333919",
    "end": "341199"
  },
  {
    "text": "target class will be returned and saved to the digitalizer cache next if not if the target class is in the blacklist or",
    "start": "341199",
    "end": "349520"
  },
  {
    "text": "inherit from json circle rule site data source or",
    "start": "349520",
    "end": "354560"
  },
  {
    "text": "class loader the method will also error and exit",
    "start": "354560",
    "end": "361520"
  },
  {
    "text": "if not if the incoming in parameter expect class is not now and it's not those tabs object uh serializable clones",
    "start": "362000",
    "end": "370319"
  },
  {
    "text": "ball uh a clone ball closeable event listener collection and the target",
    "start": "370319",
    "end": "377520"
  },
  {
    "text": "class is assembled from expect class it will pass the check return and cache",
    "start": "377520",
    "end": "384160"
  },
  {
    "text": "if not finally it can't pass the check unless the global flag auto type support",
    "start": "384160",
    "end": "389600"
  },
  {
    "text": "is true but is always false in the default configuration",
    "start": "389600",
    "end": "395720"
  },
  {
    "start": "395000",
    "end": "539000"
  },
  {
    "text": "to intuitively observe the kisses passed auto type check",
    "start": "396800",
    "end": "402000"
  },
  {
    "text": "i list them as follows first enable the auto type support flag",
    "start": "402000",
    "end": "407759"
  },
  {
    "text": "is a rare situation next classes with an analytician just in type",
    "start": "407759",
    "end": "415440"
  },
  {
    "text": "those classes in non-universal we can't use them anywhere next classes in the waitlist what is",
    "start": "415440",
    "end": "422400"
  },
  {
    "text": "initialized as a final static hashcode list with about 60 classes which are mainly",
    "start": "422400",
    "end": "429520"
  },
  {
    "text": "related to java abstract window toolkit and spring framework",
    "start": "429520",
    "end": "434639"
  },
  {
    "text": "those classes in weightless and at high level which are not easy to be",
    "start": "434639",
    "end": "439840"
  },
  {
    "text": "exceeding to be extended so the first three cases are not our",
    "start": "439840",
    "end": "446560"
  },
  {
    "text": "first choice for bypass next classes in the visualization",
    "start": "446560",
    "end": "453440"
  },
  {
    "text": "in the digitalizer cache the last one the second parameter of check auto type expect class and the",
    "start": "453440",
    "end": "460479"
  },
  {
    "text": "subclass of it especially note that the expect class is",
    "start": "460479",
    "end": "466000"
  },
  {
    "text": "a parameter with tab class instead of type of string that means the expat class has already passed the autotype",
    "start": "466000",
    "end": "473039"
  },
  {
    "text": "check is converted from string type name to a target class so the source the",
    "start": "473039",
    "end": "479280"
  },
  {
    "text": "source of express class are the classes in the workplace and the digitalizer cache",
    "start": "479280",
    "end": "487198"
  },
  {
    "text": "so we focus on the distributor cache the cache is named tab utils mappings",
    "start": "489360",
    "end": "495360"
  },
  {
    "text": "it's initialized in the method type utils and base class mappings for preloading the digitalizer of basic tabs",
    "start": "495360",
    "end": "502879"
  },
  {
    "text": "at the right it's a part of source code you can see the class byte into boolean early class object and interface clone",
    "start": "502879",
    "end": "509840"
  },
  {
    "text": "ball are added to the cache mappings although there are many low level class",
    "start": "509840",
    "end": "516880"
  },
  {
    "text": "and database in the cache the tabs have their own specified visualizer for example",
    "start": "516880",
    "end": "523919"
  },
  {
    "text": "class is exception and the class error will handle by syllable digitalizer a",
    "start": "523919",
    "end": "530560"
  },
  {
    "text": "class hash map and hash table will be handled by map digitalizer",
    "start": "530560",
    "end": "535760"
  },
  {
    "text": "but except the two types java util bitsight and java long auto",
    "start": "535760",
    "end": "542399"
  },
  {
    "start": "539000",
    "end": "639000"
  },
  {
    "text": "cloudable but json will create a default java industrializer for them so",
    "start": "542399",
    "end": "550399"
  },
  {
    "text": "any classes extend beside our auto cloud board can",
    "start": "550560",
    "end": "556000"
  },
  {
    "text": "bypass the auto type check and create an instance friendly so we can inherit from those classes to",
    "start": "556000",
    "end": "562720"
  },
  {
    "text": "bypass the autotype check and auto cloudball is a very low level interface says jdk7",
    "start": "562720",
    "end": "569040"
  },
  {
    "text": "it's the super interface of the most of stream classes channel classes and the connection classes etc the picture at",
    "start": "569040",
    "end": "577040"
  },
  {
    "text": "the bottom is the sub interfaces and implementing classes listed in the jdk",
    "start": "577040",
    "end": "583680"
  },
  {
    "text": "document those classes provide us with a broad search space",
    "start": "583680",
    "end": "588720"
  },
  {
    "text": "to derive our guidance chain so finally we bypass the auto tape check by java",
    "start": "588720",
    "end": "594880"
  },
  {
    "text": "long auto close evo",
    "start": "594880",
    "end": "598000"
  },
  {
    "text": "this is a port for the bug adjacent string with two f keys the first one is the expect class auto type",
    "start": "601120",
    "end": "607440"
  },
  {
    "text": "auto close ball and the second one is the target class java io reader because reader is higher",
    "start": "607440",
    "end": "614560"
  },
  {
    "text": "from auto close ball so it will pass the check",
    "start": "614560",
    "end": "619839"
  },
  {
    "text": "in the previous section i detailed how to bypass the security check by auto",
    "start": "620000",
    "end": "625360"
  },
  {
    "text": "crossbow in the next section i will detail how to find some interesting guides to achievement",
    "start": "625360",
    "end": "631519"
  },
  {
    "text": "to achieve remote code executed execute and more",
    "start": "631519",
    "end": "639120"
  },
  {
    "start": "639000",
    "end": "683000"
  },
  {
    "text": "now we need to find out which classes we can derive and what we can do about those classes the second question can be",
    "start": "640640",
    "end": "646640"
  },
  {
    "text": "described as which method can be called during visualization",
    "start": "646640",
    "end": "652000"
  },
  {
    "text": "we call those methods magic magic method the method create java being",
    "start": "652000",
    "end": "657519"
  },
  {
    "text": "deteriorated in the main process of visualization and inside it",
    "start": "657519",
    "end": "662880"
  },
  {
    "text": "the main method of creating digitalizer is java being infobuilt",
    "start": "662880",
    "end": "668480"
  },
  {
    "text": "the parameter is the target class and type first in this method it will select the",
    "start": "668480",
    "end": "674399"
  },
  {
    "text": "contracture by the two method get default constructor and the get creator constructor the order of choosing",
    "start": "674399",
    "end": "680800"
  },
  {
    "text": "constructor is as following after constructor publishation will",
    "start": "680800",
    "end": "687920"
  },
  {
    "start": "683000",
    "end": "778000"
  },
  {
    "text": "iterate and call all the central messages of the target class and next",
    "start": "687920",
    "end": "693200"
  },
  {
    "text": "there are some gator methods will be called automatically during initialization depends on the return",
    "start": "693200",
    "end": "699200"
  },
  {
    "text": "type now we can answer the first question about derivation",
    "start": "699200",
    "end": "705519"
  },
  {
    "text": "except directly inherit from the interface autocrossboard there are four cases that classes will be added to the",
    "start": "705519",
    "end": "712320"
  },
  {
    "text": "cache during the digitalization first the class itself second the tabs",
    "start": "712320",
    "end": "718880"
  },
  {
    "text": "of the selected constructors parameters next the types of the parameters of the",
    "start": "718880",
    "end": "726079"
  },
  {
    "text": "center message including the types of public fields and the last a part of written types of getters",
    "start": "726079",
    "end": "734399"
  },
  {
    "text": "there is a very flexible feature named json pass in the first json you can use",
    "start": "734399",
    "end": "740880"
  },
  {
    "text": "it as an object query language and what's even more amazing is that you can",
    "start": "740880",
    "end": "746399"
  },
  {
    "text": "use it in the digitalization by the token key dollar reference following is a demo json the key username has a value",
    "start": "746399",
    "end": "754079"
  },
  {
    "text": "with key reference which is dollar dot user object dot name the dollar means",
    "start": "754079",
    "end": "759600"
  },
  {
    "text": "the root element is the in intelligence object itself so your user object is the",
    "start": "759600",
    "end": "765839"
  },
  {
    "text": "first key and the name is the field name in the use object it will",
    "start": "765839",
    "end": "772320"
  },
  {
    "text": "call the get method get name to get the value from the used object",
    "start": "772320",
    "end": "778320"
  },
  {
    "start": "778000",
    "end": "916000"
  },
  {
    "text": "so jsonpath not only allows us to get actually getters",
    "start": "779440",
    "end": "785680"
  },
  {
    "text": "to call actually getters but also allows us to cross-reference and access their properties on multiple generate",
    "start": "785680",
    "end": "793600"
  },
  {
    "text": "instances when dura when contracting objects during json passing",
    "start": "793600",
    "end": "800160"
  },
  {
    "text": "this feature greatly expands our magic method space",
    "start": "800160",
    "end": "807120"
  },
  {
    "text": "there are some conditions for gadget classes first it must be derived it must be",
    "start": "807360",
    "end": "816480"
  },
  {
    "text": "derived from autoclausable second it must have default constructor or constructor with symbols otherwise it",
    "start": "816480",
    "end": "823680"
  },
  {
    "text": "can't be in extension it clicked correctly",
    "start": "823680",
    "end": "829680"
  },
  {
    "text": "and third it must not in the blacklist",
    "start": "829680",
    "end": "834160"
  },
  {
    "text": "in addition to the necessary conditions we also have some quality requirements for gadgets the gate instrument called",
    "start": "835040",
    "end": "842240"
  },
  {
    "text": "rce actually fail read and write or other high risk",
    "start": "842240",
    "end": "848320"
  },
  {
    "text": "effects and the dependence of goddess should be in native jdk or in the widely used",
    "start": "848320",
    "end": "855279"
  },
  {
    "text": "third party libraries there are almost hundreds of third-party packages used",
    "start": "855279",
    "end": "862240"
  },
  {
    "text": "widely used in the java ee and we need to search get it in nearly a million classes it's impossible to peel",
    "start": "862240",
    "end": "870079"
  },
  {
    "text": "to pure manual search so i write a tool based on the reflection to search",
    "start": "870079",
    "end": "876160"
  },
  {
    "text": "the derivation of classic space i rewrite the fabrication digitalization",
    "start": "876160",
    "end": "881760"
  },
  {
    "text": "process to check the derivation conditions and create a graph about derivation relations between classes",
    "start": "881760",
    "end": "889279"
  },
  {
    "text": "it's helpful when you reverse the chart from the sync class and in addition the tool can search",
    "start": "889279",
    "end": "896800"
  },
  {
    "text": "available guidance classes in the jdk and the specified set of jazz and i crawl and i",
    "start": "896800",
    "end": "904480"
  },
  {
    "text": "crawl common third party libraries from women",
    "start": "904480",
    "end": "909839"
  },
  {
    "text": "from [Music] as input",
    "start": "909839",
    "end": "916319"
  },
  {
    "start": "916000",
    "end": "1005000"
  },
  {
    "text": "there is a video shows how it gen generates almost five thousand classes",
    "start": "917440",
    "end": "922880"
  },
  {
    "text": "from the interface autoclave at the beginning the yellow node is the interface autoclavable and the green",
    "start": "922880",
    "end": "929440"
  },
  {
    "text": "node is class jdk natural url reader the oral and lan means derivation",
    "start": "929440",
    "end": "935680"
  },
  {
    "text": "relation and you can see the url reader inherit from auto global",
    "start": "935680",
    "end": "941199"
  },
  {
    "text": "and then start searching there are many colors of nodes",
    "start": "941199",
    "end": "946959"
  },
  {
    "text": "different colors represent different types the green node",
    "start": "946959",
    "end": "952880"
  },
  {
    "text": "is class the blue node is interface the peak node is",
    "start": "952880",
    "end": "958000"
  },
  {
    "text": "abstract class the proper node is member class",
    "start": "958000",
    "end": "962800"
  },
  {
    "text": "here are some high-risk gadgets we found in the third party in packages by the",
    "start": "966560",
    "end": "971600"
  },
  {
    "text": "tool such as use the circle connector to rce",
    "start": "971600",
    "end": "977120"
  },
  {
    "text": "use a patch comp io to read and write files you'll get jetty to ssri etc",
    "start": "977120",
    "end": "983279"
  },
  {
    "text": "i will detail the gadget's comments i o read and write files in the next section about exploited the block channels",
    "start": "983279",
    "end": "991199"
  },
  {
    "text": "there are some fertilizing pillows to your json connector to rce due to the difference between versions",
    "start": "991199",
    "end": "997360"
  },
  {
    "text": "and the limitation of blacklist you need to use different gadgets of our different method conversions",
    "start": "997360",
    "end": "1005120"
  },
  {
    "start": "1005000",
    "end": "1096000"
  },
  {
    "text": "now we can control many important websites and affect millions of users by",
    "start": "1006560",
    "end": "1012800"
  },
  {
    "text": "the json vulnerability let's make more let's let's make leg makes things more",
    "start": "1012800",
    "end": "1018639"
  },
  {
    "text": "interesting we found that this fascism vulnerability affect a public child with multi-billion dollar",
    "start": "1018639",
    "end": "1025678"
  },
  {
    "text": "market value and we are detailed i see on the sovereign nodes of blockchain tron is next",
    "start": "1025679",
    "end": "1032400"
  },
  {
    "text": "torn is a public blockchain with a little crypto currency known as trx the max value of",
    "start": "1032400",
    "end": "1040798"
  },
  {
    "text": "trx is 5 billion dollars and it have 14 million holders besides",
    "start": "1040799",
    "end": "1047319"
  },
  {
    "text": "1400 of the apps are on the troll network with a daily transaction",
    "start": "1047319",
    "end": "1052640"
  },
  {
    "text": "over volume of over 12 million dollars",
    "start": "1052640",
    "end": "1057840"
  },
  {
    "text": "and the java trend is the java implementation of the public blockchain protocol launched by tron it analyzes",
    "start": "1057840",
    "end": "1065039"
  },
  {
    "text": "all the decentralized applications in the torrent ecosystem",
    "start": "1065039",
    "end": "1070480"
  },
  {
    "text": "it's an open source java application with two services that's on github java torrent can enable html service on",
    "start": "1070480",
    "end": "1077840"
  },
  {
    "text": "the torrent nodes to allow users and developers to interact with the blockchain",
    "start": "1077840",
    "end": "1084480"
  },
  {
    "text": "we will detail the java troll in the next section in this section we just need to know",
    "start": "1084480",
    "end": "1089840"
  },
  {
    "text": "its http service using facilitation to pass json post data",
    "start": "1089840",
    "end": "1097120"
  },
  {
    "start": "1096000",
    "end": "1266000"
  },
  {
    "text": "now we have a vulnerability can see or read and write any file on the",
    "start": "1097360",
    "end": "1102799"
  },
  {
    "text": "on some conditions but those conditions are not always made first of all there is no remote jdbc driver in the java",
    "start": "1102799",
    "end": "1110480"
  },
  {
    "text": "toronto so we can't use the gadget's message connector and there are some problems",
    "start": "1110480",
    "end": "1115600"
  },
  {
    "text": "need to be sold for exploited by read and write file",
    "start": "1115600",
    "end": "1120799"
  },
  {
    "text": "gadgets the javascript is an independent spring boot factor",
    "start": "1120799",
    "end": "1126320"
  },
  {
    "text": "so we can't write a web shell directly we should think about what to write",
    "start": "1126320",
    "end": "1131360"
  },
  {
    "text": "and the jar can run with actual uh upfront user with",
    "start": "1131360",
    "end": "1136720"
  },
  {
    "text": "network permission so we should think about where are readable paths",
    "start": "1136720",
    "end": "1141840"
  },
  {
    "text": "and the java turn using fast json to decode the post in the http api request",
    "start": "1141840",
    "end": "1147919"
  },
  {
    "text": "however there is no direct response by http but broadcast on p2p network the",
    "start": "1147919",
    "end": "1154240"
  },
  {
    "text": "http response just only shows the state of the state of api request so",
    "start": "1154240",
    "end": "1160480"
  },
  {
    "text": "if we read read files from server node how to get contents written",
    "start": "1160480",
    "end": "1167440"
  },
  {
    "text": "furthermore the blockchain is decentralized is decentralized it is decentralized",
    "start": "1168799",
    "end": "1175200"
  },
  {
    "text": "that means you take over models you get more control of the blockchain so our exploit should rely on",
    "start": "1175200",
    "end": "1182160"
  },
  {
    "text": "as few preconditions as possible there are some common uh there are some",
    "start": "1182160",
    "end": "1188480"
  },
  {
    "text": "common ways to get shell on the spring foot put faster when you can read fill a red file",
    "start": "1188480",
    "end": "1196880"
  },
  {
    "text": "for example you can override system leaves or write class",
    "start": "1196880",
    "end": "1202480"
  },
  {
    "text": "file in the gvm class path such as a charset gel",
    "start": "1202480",
    "end": "1208400"
  },
  {
    "text": "but as i said above root formation is not required those fill those files can only be already",
    "start": "1208400",
    "end": "1216400"
  },
  {
    "text": "or written by root the operating system or jvm lab is",
    "start": "1216400",
    "end": "1221679"
  },
  {
    "text": "dangerous without the exact version there is a feature of gni in the",
    "start": "1221679",
    "end": "1229600"
  },
  {
    "text": "java package the binary library files this should be released to the file",
    "start": "1229600",
    "end": "1235280"
  },
  {
    "text": "system before it can be loaded this operation is usually in the static",
    "start": "1235280",
    "end": "1240400"
  },
  {
    "text": "block triggered when the class is loaded for the first time and the binary library is always",
    "start": "1240400",
    "end": "1246320"
  },
  {
    "text": "released to the directory uh specified by the system property",
    "start": "1246320",
    "end": "1251919"
  },
  {
    "text": "java io type directory and the java method system load will load the gi iso",
    "start": "1251919",
    "end": "1257840"
  },
  {
    "text": "file by function dr open so or writing the gene iso file will be the first",
    "start": "1257840",
    "end": "1263440"
  },
  {
    "text": "choice",
    "start": "1263440",
    "end": "1265840"
  },
  {
    "start": "1266000",
    "end": "1363000"
  },
  {
    "text": "java trolling used level db as the local storage driver for blockchain data",
    "start": "1268720",
    "end": "1276159"
  },
  {
    "text": "ldb is the first key value storage library and is used by bitcoin therefore",
    "start": "1276159",
    "end": "1282159"
  },
  {
    "text": "it's inherited by many public chain level dbc with a block chain metadata",
    "start": "1282159",
    "end": "1288400"
  },
  {
    "text": "with which needed to pull in frequently for reading and writing",
    "start": "1288400",
    "end": "1293919"
  },
  {
    "text": "so javatron use the gi driver other side jfile needs to extract",
    "start": "1293919",
    "end": "1301039"
  },
  {
    "text": "to extract gene elaborate level dbgi extracts the iso library in the method",
    "start": "1301039",
    "end": "1307120"
  },
  {
    "text": "library extract and load and it drags the gene iso file to with a random",
    "start": "1307120",
    "end": "1313840"
  },
  {
    "text": "suffix to the temp directory so",
    "start": "1313840",
    "end": "1319200"
  },
  {
    "text": "if we want to override the jni iso at runtime we need to get random",
    "start": "1319200",
    "end": "1325600"
  },
  {
    "text": "file name extracted by the java the motor directory of the most direct",
    "start": "1325600",
    "end": "1333039"
  },
  {
    "text": "way is to list the temp directory but we don't want those information to be",
    "start": "1333039",
    "end": "1338320"
  },
  {
    "text": "broadcast on the p2p network and the last problem is that we need to",
    "start": "1338320",
    "end": "1344880"
  },
  {
    "text": "write binary bytes instead of a string with coding there are two",
    "start": "1344880",
    "end": "1350159"
  },
  {
    "text": "things called can called coding confusion the input json is read as a",
    "start": "1350159",
    "end": "1355840"
  },
  {
    "text": "string with encoding instead of byte and the output stream and the fill writer should use base",
    "start": "1355840",
    "end": "1363440"
  },
  {
    "start": "1363000",
    "end": "1515000"
  },
  {
    "text": "we finally solved those problems by the gadgets of patch commons io this gadget chain can be combined with other classes",
    "start": "1364080",
    "end": "1372480"
  },
  {
    "text": "to not only write but also read file let's start with red file get this red",
    "start": "1372480",
    "end": "1379039"
  },
  {
    "text": "file gadget is more clear look at the left side the class comes i",
    "start": "1379039",
    "end": "1384400"
  },
  {
    "text": "will input boom input stream inherit from autoclavable so it can bypass the",
    "start": "1384400",
    "end": "1390240"
  },
  {
    "text": "autotype check it has three parameters in the constructor input stream delegate",
    "start": "1390240",
    "end": "1395440"
  },
  {
    "text": "boolean input include and a wearable parameters of class type order mark",
    "start": "1395440",
    "end": "1402880"
  },
  {
    "text": "booms there is a getter method for field boom in the",
    "start": "1402880",
    "end": "1408240"
  },
  {
    "text": "bomb input stream get bomb will call the delegate read we can set the field delegate to the",
    "start": "1408240",
    "end": "1415520"
  },
  {
    "text": "class commons io input t input stream the method read of t input stream will",
    "start": "1415520",
    "end": "1422880"
  },
  {
    "text": "write the input bytes to the field branch the field branch can be set to an output stream in the constructor",
    "start": "1422880",
    "end": "1431520"
  },
  {
    "text": "so using the class com i o input commands i o boom input stream we can",
    "start": "1431520",
    "end": "1437760"
  },
  {
    "text": "choose proper input and output stream classes to achieve red red file for writing",
    "start": "1437760",
    "end": "1445360"
  },
  {
    "text": "encoding string we can follow those gadgets just in the comments arrow package",
    "start": "1445360",
    "end": "1451120"
  },
  {
    "text": "set the source input stream field input to charging",
    "start": "1451120",
    "end": "1456799"
  },
  {
    "text": "chart synchronous input stream and set the field cs to the input stream which you want to write to fail",
    "start": "1456799",
    "end": "1465039"
  },
  {
    "text": "and set the output stream failed field branch to [Music]",
    "start": "1466000",
    "end": "1471840"
  },
  {
    "text": "output stream with class failure with encoding",
    "start": "1471840",
    "end": "1477679"
  },
  {
    "text": "as for writing binary bytes besides a patch com io we need to use two other",
    "start": "1477679",
    "end": "1483520"
  },
  {
    "text": "packages in the geotron set the field input of in t input stream",
    "start": "1483520",
    "end": "1489919"
  },
  {
    "text": "to call to apache commons codec binary uh",
    "start": "1489919",
    "end": "1494960"
  },
  {
    "text": "basically a base 6 for input stream which input of red in string and output",
    "start": "1494960",
    "end": "1500640"
  },
  {
    "text": "advice and set the third branch of boom input stream to eclipse internal",
    "start": "1500640",
    "end": "1508440"
  },
  {
    "text": "low-cost.file upstream which is from expect joy",
    "start": "1508440",
    "end": "1515000"
  },
  {
    "start": "1515000",
    "end": "1675000"
  },
  {
    "text": "next this is how to use a patch combs i o to read files the",
    "start": "1516000",
    "end": "1521039"
  },
  {
    "text": "entry of guided is also the class boom input stream and it's getting messed up getting boom",
    "start": "1521039",
    "end": "1527679"
  },
  {
    "text": "it costs it cause methyl matches in the gut bone",
    "start": "1527679",
    "end": "1532799"
  },
  {
    "text": "the methodic matches will iterate the filled bones and compare every bone with",
    "start": "1532799",
    "end": "1538799"
  },
  {
    "text": "the bite with the base read from the input stream delegate if there is one",
    "start": "1538799",
    "end": "1545440"
  },
  {
    "text": "boom is same as the best read from delegate it will return the symbol otherwise it will it's none",
    "start": "1545440",
    "end": "1551919"
  },
  {
    "text": "so that so that will let us get the read content according to the different",
    "start": "1551919",
    "end": "1559360"
  },
  {
    "text": "written states it's a way of blend read there is a pillow for reading the temp",
    "start": "1559360",
    "end": "1566559"
  },
  {
    "text": "directory to get random file name first look at the number one at the right side",
    "start": "1566559",
    "end": "1572000"
  },
  {
    "text": "we use the class jdk natural url reader as the input stream the parameter url a",
    "start": "1572000",
    "end": "1577919"
  },
  {
    "text": "support file scheme for a folder and listing directory the number three",
    "start": "1577919",
    "end": "1583600"
  },
  {
    "text": "the field boom is set to multiple bias blocks to be compared with reader output",
    "start": "1583600",
    "end": "1590320"
  },
  {
    "text": "and the number four you just pass reference dollar dot abc dot boom to",
    "start": "1590320",
    "end": "1596640"
  },
  {
    "text": "call the gather message get bomb of the object abc which is the first field",
    "start": "1596640",
    "end": "1603520"
  },
  {
    "text": "in the json with the class bomb input stream as number five let this reference",
    "start": "1603520",
    "end": "1609840"
  },
  {
    "text": "reference value be the field address and send this json post data to the java",
    "start": "1609840",
    "end": "1615600"
  },
  {
    "text": "training api wallet while data address and if the address is",
    "start": "1615600",
    "end": "1620799"
  },
  {
    "text": "known it will read nothing if the address is bad format it will return well it is a failed message",
    "start": "1620799",
    "end": "1627760"
  },
  {
    "text": "so we can use apache comsio to read the temp directory by byte and finally get",
    "start": "1627760",
    "end": "1633520"
  },
  {
    "text": "the random file name of gn library now we can all read",
    "start": "1633520",
    "end": "1638840"
  },
  {
    "text": "the gni library at runtime the last question is how to hijack",
    "start": "1638840",
    "end": "1644000"
  },
  {
    "text": "pointer the gel channel will register a timer task for level db red right on",
    "start": "1644000",
    "end": "1651840"
  },
  {
    "text": "initialization the message dbright will call the gene and method",
    "start": "1651840",
    "end": "1657919"
  },
  {
    "text": "little buffer gene and malloc so we can inject shellcode to the outside address of gmaillog when the",
    "start": "1657919",
    "end": "1665120"
  },
  {
    "text": "timer test winder when the timer task is a executed pun",
    "start": "1665120",
    "end": "1673679"
  },
  {
    "text": "this is the fun process of exploit and the last step is recovering",
    "start": "1678240",
    "end": "1683520"
  },
  {
    "text": "the program contest to prevent the crash and for the sixth step",
    "start": "1683520",
    "end": "1689760"
  },
  {
    "text": "in post penetration for real money return to michael speaker with a kai",
    "start": "1689760",
    "end": "1697840"
  },
  {
    "text": "next i will introduce a post-penetration exploit method that affects the security",
    "start": "1699200",
    "end": "1704559"
  },
  {
    "text": "of blockchain user size after we successfully rce on toronto's",
    "start": "1704559",
    "end": "1710159"
  },
  {
    "start": "1707000",
    "end": "2032000"
  },
  {
    "text": "http node we need to test whether it will cut losses to the user's size",
    "start": "1710159",
    "end": "1716960"
  },
  {
    "text": "for the blockchain the first approach we think of is a 51 percent tag a 51 percent tag is attack or blockchain",
    "start": "1717039",
    "end": "1725039"
  },
  {
    "text": "by a group of minors who control more than fifty percent of the network's many hashtags",
    "start": "1725039",
    "end": "1730720"
  },
  {
    "text": "attackers with with majority control of the network can interrupt the recording of new blocks by preventing other",
    "start": "1730720",
    "end": "1737360"
  },
  {
    "text": "manners from completing blocks and joint use the super representative",
    "start": "1737360",
    "end": "1742799"
  },
  {
    "text": "mechanism any account can apply to become a super representative candidate",
    "start": "1742799",
    "end": "1748880"
  },
  {
    "text": "every account can vote for super representative candidates the top 27 candidates with the most",
    "start": "1748880",
    "end": "1755039"
  },
  {
    "text": "awards are super representative super representatives generate blocks",
    "start": "1755039",
    "end": "1760480"
  },
  {
    "text": "package transactions and get blocked and voting rewards therefore we need to rce and at least",
    "start": "1760480",
    "end": "1767120"
  },
  {
    "text": "one half of the super representative nodes to cover 51 percent tag",
    "start": "1767120",
    "end": "1773279"
  },
  {
    "text": "but actual rotation is somewhat unexpected not all nodes have a http service",
    "start": "1773279",
    "end": "1778720"
  },
  {
    "text": "enabled in other words we can't attack owners of tron this picture shows the location ip of",
    "start": "1778720",
    "end": "1786080"
  },
  {
    "text": "all the nodes of the troll network this date is provided by the",
    "start": "1786080",
    "end": "1791799"
  },
  {
    "text": "trussgun.org website as shown by choicegun.org",
    "start": "1791799",
    "end": "1797840"
  },
  {
    "text": "trolling has 1332 nodes in total with guns of ips and found that only a",
    "start": "1797840",
    "end": "1804720"
  },
  {
    "text": "quarter of the nodes can be accessed through the http service therefore",
    "start": "1804720",
    "end": "1810159"
  },
  {
    "text": "there is no guarantee that more than half of the super representatives have enabled http service",
    "start": "1810159",
    "end": "1817279"
  },
  {
    "text": "unfortunately we can't use this vulnerability to cost of 51 percent tag of the troll network",
    "start": "1817279",
    "end": "1823760"
  },
  {
    "text": "we need to find another way now let's focus on the h2on http node",
    "start": "1823760",
    "end": "1828799"
  },
  {
    "text": "itself a study with those http node placed in the short network",
    "start": "1828799",
    "end": "1835200"
  },
  {
    "text": "the trolling http node has a variety of api cards to allow users to interact with the blockchain",
    "start": "1835679",
    "end": "1842480"
  },
  {
    "text": "some of the api cards serve as standalone requests to getting wider pieces of information",
    "start": "1842480",
    "end": "1848399"
  },
  {
    "text": "the most important thing is that there are also many api cards which modify the user trs wallet resulting a need to sign",
    "start": "1848399",
    "end": "1856880"
  },
  {
    "text": "and broadcast transaction remaining we mainly focus on the second",
    "start": "1856880",
    "end": "1862320"
  },
  {
    "text": "type of of api this apis will be used on user trade of",
    "start": "1862320",
    "end": "1868480"
  },
  {
    "text": "blockchain the user wants to send some trx tokens",
    "start": "1868480",
    "end": "1874080"
  },
  {
    "text": "to other users in the tool network three steps are required first of all the user needs to make a",
    "start": "1874080",
    "end": "1881600"
  },
  {
    "text": "transaction and conquer the wallet create transaction api to compare the website",
    "start": "1881600",
    "end": "1888240"
  },
  {
    "text": "the http node will return a low transaction in json format the fixed step is to find the",
    "start": "1888240",
    "end": "1894399"
  },
  {
    "text": "transaction the user can call the wallet get transaction sign api the ap the http node will use the",
    "start": "1894399",
    "end": "1901360"
  },
  {
    "text": "private key provided by the user to find the raw transaction the last step is to broadcast the",
    "start": "1901360",
    "end": "1907200"
  },
  {
    "text": "transaction the user can call the wallet broadcast transaction api the http node will broadcast the defined",
    "start": "1907200",
    "end": "1914880"
  },
  {
    "text": "transaction to the blockchain therefore after we are the http node",
    "start": "1914880",
    "end": "1920559"
  },
  {
    "text": "if the user use http node to make a transaction we can return a folder transaction",
    "start": "1920559",
    "end": "1926799"
  },
  {
    "text": "which will be execute executed after the user science and broadcast calculate",
    "start": "1926799",
    "end": "1932880"
  },
  {
    "text": "if the user use the http node to find the transaction we can steal the user's private key",
    "start": "1932880",
    "end": "1939360"
  },
  {
    "text": "if user only use http nodes to broadcast the transaction it seems that we can only prevent",
    "start": "1939360",
    "end": "1945519"
  },
  {
    "text": "transactions from being broadcast to cast us obviously stealing private keys is more",
    "start": "1945519",
    "end": "1952399"
  },
  {
    "text": "harmful than photo transactions and further transactions are more helpful than dof",
    "start": "1952399",
    "end": "1958799"
  },
  {
    "text": "in the short network almost all users use wallet programs for transactions",
    "start": "1958799",
    "end": "1964640"
  },
  {
    "text": "channelling is firstly launched as choice official website and backed by",
    "start": "1964640",
    "end": "1970080"
  },
  {
    "text": "foundation it is the wallet with most users",
    "start": "1970080",
    "end": "1975360"
  },
  {
    "text": "channeling has three versions including chrome voltage extension ls and android",
    "start": "1975360",
    "end": "1980880"
  },
  {
    "text": "among them cumulative extension alone has more than 300 000 users",
    "start": "1980880",
    "end": "1987760"
  },
  {
    "text": "after testing the three versions of troll link wallet we found that all three",
    "start": "1989039",
    "end": "1994720"
  },
  {
    "text": "wallets use http nodes to broadcast the transactions in addition current knowledge extension",
    "start": "1994720",
    "end": "2000880"
  },
  {
    "text": "also used http nodes to make traffic actions and directly find and broadcast",
    "start": "2000880",
    "end": "2006320"
  },
  {
    "text": "the transaction without checking the return to draw transaction so we can try to attack the wallet by",
    "start": "2006320",
    "end": "2013120"
  },
  {
    "text": "return link for the transactions when the wireless sender requests to",
    "start": "2013120",
    "end": "2019039"
  },
  {
    "text": "make a transaction to the http node control we return our further transaction",
    "start": "2019039",
    "end": "2025440"
  },
  {
    "text": "then the validator finds the transaction locally and finally broadcasters send the transaction to the blockchain",
    "start": "2025440",
    "end": "2032960"
  },
  {
    "text": "we recorded a video to demonstrate it with my active attack method",
    "start": "2032960",
    "end": "2040600"
  },
  {
    "text": "first selection shift normally and are less than 100 urs tokens to bob",
    "start": "2056879",
    "end": "2064520"
  },
  {
    "text": "after that the attacker actually exploits program",
    "start": "2091520",
    "end": "2096800"
  },
  {
    "text": "and successfully rc is http node",
    "start": "2099680",
    "end": "2103838"
  },
  {
    "text": "and run some leisure's program of the port",
    "start": "2106320",
    "end": "2111119"
  },
  {
    "text": "select him with transaction okay",
    "start": "2114960",
    "end": "2119480"
  },
  {
    "text": "and the attacker returned the first row transaction",
    "start": "2132400",
    "end": "2137880"
  },
  {
    "text": "finally the tiger received qrx tokens instead of bob",
    "start": "2154560",
    "end": "2161119"
  },
  {
    "text": "the tag is not over yet let's think about it why can't wallet extension have different behavior from ls and android",
    "start": "2168960",
    "end": "2177040"
  },
  {
    "text": "after analyzing the source code of chromolytic extension we found that it used the tone wipe library",
    "start": "2177040",
    "end": "2184320"
  },
  {
    "text": "tone wipe is to deliver a unified seamless development experience in",
    "start": "2184320",
    "end": "2189760"
  },
  {
    "text": "experience influenced by ethereum's web three implementation turn live use the troll live",
    "start": "2189760",
    "end": "2196240"
  },
  {
    "text": "trans transaction builders builder those center x method to make transactions",
    "start": "2196240",
    "end": "2202400"
  },
  {
    "text": "which will request http nodes as you can see in the source code when",
    "start": "2202400",
    "end": "2207680"
  },
  {
    "text": "calling this method the wallet transaction api of the http node will be requested to make a transaction",
    "start": "2207680",
    "end": "2215920"
  },
  {
    "text": "we realized that the total web library would be a key point so we investigated a very variety of",
    "start": "2215920",
    "end": "2222720"
  },
  {
    "text": "tolerance related applications and made some new discoveries we found that in addition to channeling",
    "start": "2222720",
    "end": "2228960"
  },
  {
    "text": "chrome volatility extension some multi-currency voltage and index also use the tone wipe library",
    "start": "2228960",
    "end": "2235839"
  },
  {
    "text": "and we also didn't check the raw transaction returned by the http node",
    "start": "2235839",
    "end": "2242320"
  },
  {
    "text": "multi-currency wallet is a wallet that supports multiple crypto currency transactions",
    "start": "2242320",
    "end": "2248480"
  },
  {
    "text": "m token is a multi multi-currency wallet that supports a choice m token has 12 million users and is your",
    "start": "2248480",
    "end": "2255280"
  },
  {
    "text": "search on web library after testing we found that when i'm",
    "start": "2255280",
    "end": "2260560"
  },
  {
    "text": "token knowledge generates choice related perfections it does request the",
    "start": "2260560",
    "end": "2266720"
  },
  {
    "text": "http node as you can see in the picture we've carefully first returned",
    "start": "2266720",
    "end": "2272160"
  },
  {
    "text": "transaction replacing to a drive with another address and then find and",
    "start": "2272160",
    "end": "2277200"
  },
  {
    "text": "broadcast the photo transaction that is a computer application that runs",
    "start": "2277200",
    "end": "2283359"
  },
  {
    "text": "on a distributed computing system like blockchain as of december 17 2020 1400",
    "start": "2283359",
    "end": "2291440"
  },
  {
    "text": "steps have been created on strong network with a daily transaction volume of over 12 million dollars",
    "start": "2291440",
    "end": "2298400"
  },
  {
    "text": "for developer depth is a combination of front end smart contrast john pro has 12 wires for front-end",
    "start": "2298400",
    "end": "2306560"
  },
  {
    "text": "developer take a poll next step as an example",
    "start": "2306560",
    "end": "2312160"
  },
  {
    "text": "winterized token absent in this step it will request hdp notes to make a",
    "start": "2312160",
    "end": "2318079"
  },
  {
    "text": "transaction we also successfully for the return transaction replacing two address with",
    "start": "2318079",
    "end": "2323839"
  },
  {
    "text": "another address and then signed and broadcasted for the transaction",
    "start": "2323839",
    "end": "2328960"
  },
  {
    "text": "in summary the trolling link chrome wallet extension with more than 300 thousand users",
    "start": "2328960",
    "end": "2335280"
  },
  {
    "text": "the total the trolling part of the mem token multi-currency knowledge with 12",
    "start": "2335280",
    "end": "2340640"
  },
  {
    "text": "million users and the death with a daily transaction volume of over 12 million",
    "start": "2340640",
    "end": "2346480"
  },
  {
    "text": "will all be affected finally we make conclusion",
    "start": "2346480",
    "end": "2352560"
  },
  {
    "text": "also distributed and decentralized structure improves the gravity credibility and fault tolerance of the",
    "start": "2352560",
    "end": "2359440"
  },
  {
    "text": "system blockchain is notable bullet proof to securely vulnerability",
    "start": "2359440",
    "end": "2365520"
  },
  {
    "text": "and we hope our work our work can notify blockchain developers and users to more careful",
    "start": "2365520",
    "end": "2371599"
  },
  {
    "text": "about security our research on the future of blockchain security will include",
    "start": "2371599",
    "end": "2378000"
  },
  {
    "text": "traditional web security cloud and age computing and the poster penetration exploit",
    "start": "2378000",
    "end": "2384800"
  },
  {
    "text": "here is a vulnerability timeline special thanks to songkai told you your",
    "start": "2384800",
    "end": "2391920"
  },
  {
    "text": "women in the uil thanks",
    "start": "2391920",
    "end": "2397160"
  }
]