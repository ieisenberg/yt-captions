[
  {
    "text": "good afternoon and uh Welcome to our topic and this topic is present by me",
    "start": "80",
    "end": "5680"
  },
  {
    "text": "and I am H and uh tday one we are all from the pangu team okay so uh iess",
    "start": "5680",
    "end": "14320"
  },
  {
    "text": "guess all the all the guys come here are interested in the a security uh in fact uh uh in the in the past few years uh a",
    "start": "14320",
    "end": "22080"
  },
  {
    "text": "lot of security researchers already researched the uh security of the iOS",
    "start": "22080",
    "end": "27560"
  },
  {
    "text": "and a lot of attack surface has already exposed and but in this topic uh we will",
    "start": "27560",
    "end": "34320"
  },
  {
    "text": "talk about some uh neglected attack surface in ours 8 and uh we were show",
    "start": "34320",
    "end": "40559"
  },
  {
    "text": "that uh based on the previous work and uh we uh put some improve improved the",
    "start": "40559",
    "end": "48640"
  },
  {
    "text": "previous work we could still find some new BRS and also there are some uh",
    "start": "48640",
    "end": "54320"
  },
  {
    "text": "results in this uh talk um that there",
    "start": "54320",
    "end": "59359"
  },
  {
    "text": "some Maybe zero days and some bars are fixed actually this topic we prepared is",
    "start": "59359",
    "end": "65198"
  },
  {
    "text": "about two months ago at that time the the version is about uh RS 8.2 so all",
    "start": "65199",
    "end": "72159"
  },
  {
    "text": "the BS uh we disced here as uh I promise",
    "start": "72159",
    "end": "77200"
  },
  {
    "text": "to to on that version of iOS okay so the uh so the agenda today",
    "start": "77200",
    "end": "85079"
  },
  {
    "text": "uh it's uh just basic knowledge of the our security background and uh we review",
    "start": "85079",
    "end": "91280"
  },
  {
    "text": "some old attack Services uh list of some BS used in the",
    "start": "91280",
    "end": "96640"
  },
  {
    "text": "past year break and then we focus on the Kernel part first see what what more we",
    "start": "96640",
    "end": "102399"
  },
  {
    "text": "could F in the kernel and after that we uh for the for the users user l space uh",
    "start": "102399",
    "end": "108960"
  },
  {
    "text": "we focus on talking about the xpc service fuzzing uh because of the actually due to the time of this",
    "start": "108960",
    "end": "116360"
  },
  {
    "text": "presentation uh we will focus on some point of the uh neglected Tax Service",
    "start": "116360",
    "end": "122680"
  },
  {
    "text": "and finally that's conclusion so as security I just list some word here I",
    "start": "122680",
    "end": "128840"
  },
  {
    "text": "think uh we already familiar with this um security mechanism and the sandbox",
    "start": "128840",
    "end": "135200"
  },
  {
    "text": "the code sign signature uh a lot of exploit medications and uh the data",
    "start": "135200",
    "end": "141319"
  },
  {
    "text": "protection to protect your personal information and um maybe in the next",
    "start": "141319",
    "end": "146720"
  },
  {
    "text": "major uh version of I it's I 99 maybe the Apple will and uh introduce the",
    "start": "146720",
    "end": "155400"
  },
  {
    "text": "hypervisor uh to uh for the security of Kernel",
    "start": "155400",
    "end": "161480"
  },
  {
    "text": "maybe okay so let's go to the first part and review the uh old attack surface uh",
    "start": "161480",
    "end": "168680"
  },
  {
    "text": "first to introduce the uh userland attack surface okay so we divided the",
    "start": "168680",
    "end": "174120"
  },
  {
    "text": "user landex service into two big categories uh local and remote",
    "start": "174120",
    "end": "180480"
  },
  {
    "text": "and also in local there's a two two kind of attacks um the first is the through",
    "start": "180480",
    "end": "186519"
  },
  {
    "text": "the USB cable that means you connected your iOS devices to your laptop and the",
    "start": "186519",
    "end": "192319"
  },
  {
    "text": "other is uh you installed applications for for example for App Store from some",
    "start": "192319",
    "end": "198159"
  },
  {
    "text": "Enterprise certificate sign application so for the first uh first",
    "start": "198159",
    "end": "203920"
  },
  {
    "text": "type the through the US USB cable that uh apple apple in enables you to manage",
    "start": "203920",
    "end": "211799"
  },
  {
    "text": "your iPhone uh in through through iTunes so there's a lot of attack based on the",
    "start": "211799",
    "end": "218200"
  },
  {
    "text": "iTunes protoc protocol and U Apple uh supplied some features like the FC the",
    "start": "218200",
    "end": "226000"
  },
  {
    "text": "file access interface and you can ma up and restore your iPhone the interface",
    "start": "226000",
    "end": "232280"
  },
  {
    "text": "and also you could just install the install application in iTunes so they",
    "start": "232280",
    "end": "238079"
  },
  {
    "text": "have the install D and and another if you have developed the uh I applications",
    "start": "238079",
    "end": "244599"
  },
  {
    "text": "uh you could just de the uh application on the iOS devices at the wrong time",
    "start": "244599",
    "end": "250519"
  },
  {
    "text": "that this is uh provided by the X code also for the uh uh uh for the",
    "start": "250519",
    "end": "258639"
  },
  {
    "text": "installed application we get two examples here and uh the first is the",
    "start": "258639",
    "end": "263880"
  },
  {
    "text": "jco application this is also released be uh released by our team member team uh",
    "start": "263880",
    "end": "270080"
  },
  {
    "text": "in two uh 2013 at the use NX security uh this this",
    "start": "270080",
    "end": "276240"
  },
  {
    "text": "application is a special application that use the private uh API in the",
    "start": "276240",
    "end": "282039"
  },
  {
    "text": "application but it still pass the review of the uh Apple and uploaded to the",
    "start": "282039",
    "end": "287360"
  },
  {
    "text": "Apple Store so you can say that the review of Apple can guarantee that all",
    "start": "287360",
    "end": "293320"
  },
  {
    "text": "applications in app store is security and another example here is the",
    "start": "293320",
    "end": "300039"
  },
  {
    "text": "attacks uh this is the uh public this year by firei research uh actually this",
    "start": "300039",
    "end": "306800"
  },
  {
    "text": "problem is that uh you uh you could just write an application and uh set Bango ID",
    "start": "306800",
    "end": "314240"
  },
  {
    "text": "to the exactly same as some other applications and then you can just",
    "start": "314240",
    "end": "319400"
  },
  {
    "text": "replace the original one that enables you maybe to do like fish something",
    "start": "319400",
    "end": "325680"
  },
  {
    "text": "attack yeah actually the the attacks through the USB is widely used by the pr",
    "start": "325680",
    "end": "333319"
  },
  {
    "text": "jbre so that's a lot of for example in the recent jabre and they they are able",
    "start": "333319",
    "end": "340319"
  },
  {
    "text": "to mount the their own fake and DDI to the on the device and then can easily",
    "start": "340319",
    "end": "348440"
  },
  {
    "text": "get the roots privileg on the device okay so the for the remote attex",
    "start": "348440",
    "end": "355880"
  },
  {
    "text": "service and actually is a NN network connection ctions between uh uh in your",
    "start": "355880",
    "end": "361840"
  },
  {
    "text": "phone can be an attack service and the obvious Target is the browser so for for",
    "start": "361840",
    "end": "368599"
  },
  {
    "text": "iOS the browser is the mobile software and uh this is also uh where attacked",
    "start": "368599",
    "end": "374440"
  },
  {
    "text": "for example the uh jabber Me by Comics he used the used the BR in software and",
    "start": "374440",
    "end": "380599"
  },
  {
    "text": "also uh in Mobile PTO own and they can uh they can attack your uh devices and",
    "start": "380599",
    "end": "388680"
  },
  {
    "text": "uh collect your contact information or get your photos Okay so another uh attex is",
    "start": "388680",
    "end": "396400"
  },
  {
    "text": "message uh through the first the first message I Tech is introduced in 2009 by",
    "start": "396400",
    "end": "402440"
  },
  {
    "text": "Charlie M and uh we are surprised to uh to see that there's actually in this",
    "start": "402440",
    "end": "408440"
  },
  {
    "text": "year there also uh an a bar about the message if you uh send a a special uni",
    "start": "408440",
    "end": "415560"
  },
  {
    "text": "code uh message to some device they can just cause the",
    "start": "415560",
    "end": "420840"
  },
  {
    "text": "reboot and the system Network demos this program is actually exist in resolving",
    "start": "420840",
    "end": "427160"
  },
  {
    "text": "the um configuration profile network configuration profile and the demo were",
    "start": "427160",
    "end": "432919"
  },
  {
    "text": "crashed and your system is just uh just unresponsible unresponded okay so this",
    "start": "432919",
    "end": "440840"
  },
  {
    "text": "uh is also released today or this year sorry okay so after the user L pass uh",
    "start": "440840",
    "end": "447879"
  },
  {
    "text": "let's have a look at the uh k attack services so basically the any",
    "start": "447879",
    "end": "454759"
  },
  {
    "text": "communication between the user space and kernel space could be an attack surface",
    "start": "454759",
    "end": "460400"
  },
  {
    "text": "and uh uh there's two ways to trap into the kernel from user space uh the first",
    "start": "460400",
    "end": "466360"
  },
  {
    "text": "is the uh BSD system course uh like open right read and the another is a Mac trap",
    "start": "466360",
    "end": "474319"
  },
  {
    "text": "uh this is very uh special for our device",
    "start": "474319",
    "end": "479599"
  },
  {
    "text": "so uh actually we we are able to uh divide this uh into some small",
    "start": "479599",
    "end": "486199"
  },
  {
    "text": "categories I just listen here for example the I control this API",
    "start": "486199",
    "end": "492599"
  },
  {
    "text": "this AP API actually is very very powerful uh it's able to uh control some",
    "start": "492599",
    "end": "499800"
  },
  {
    "text": "system variables read or write some system variables inside kernel and the",
    "start": "499800",
    "end": "505960"
  },
  {
    "text": "file system of course you if you want to mount uh uh image the the kernel must to",
    "start": "505960",
    "end": "511800"
  },
  {
    "text": "resolve the F system and the device uh actually the kernel will provide some",
    "start": "511800",
    "end": "518479"
  },
  {
    "text": "function functional devices in the slash d slash and uh another big part is IIT uh",
    "start": "518479",
    "end": "527160"
  },
  {
    "text": "most uh uh most function is provided in by this IIT",
    "start": "527160",
    "end": "533760"
  },
  {
    "text": "interfaces and another one is the Mig system we will uh discuss this later",
    "start": "533760",
    "end": "541040"
  },
  {
    "text": "here okay so after that uh we will see in the past uh in the past a lot of",
    "start": "541040",
    "end": "546440"
  },
  {
    "text": "Kernel bars already uh used in the in the past jail brakes we have a look at",
    "start": "546440",
    "end": "552560"
  },
  {
    "text": "them so for so to attack the the F system uh actually in jbre M3 and the",
    "start": "552560",
    "end": "561160"
  },
  {
    "text": "the kernel bark is that it's a very very basic uh stack Overflow that's actually",
    "start": "561160",
    "end": "567519"
  },
  {
    "text": "no check of the and HFS Legacy volume name so cause the problem this a basic",
    "start": "567519",
    "end": "573760"
  },
  {
    "text": "stack Overflow and also this uh in Corona for iOS 5 this uh this explor",
    "start": "573760",
    "end": "582160"
  },
  {
    "text": "should be right by the P 2G and uh he claim that this is HFS heap of",
    "start": "582160",
    "end": "590920"
  },
  {
    "text": "flow and uh for uh for uh system cost there's a some B in Pro SP and the",
    "start": "591240",
    "end": "599920"
  },
  {
    "text": "in this in this function it incorrectly checks the action data and CA the part",
    "start": "599920",
    "end": "606360"
  },
  {
    "text": "actually this part is also exploited uh in the jabre for hour",
    "start": "606360",
    "end": "612959"
  },
  {
    "text": "6.1.3 okay let's have a look at the I control powerful uh API uh that's B",
    "start": "613720",
    "end": "620360"
  },
  {
    "text": "called packet filter kernel exploit actually In This Very Special Handler",
    "start": "620360",
    "end": "625519"
  },
  {
    "text": "there uh the inside this Handler it don't cor initialize the me uh member of",
    "start": "625519",
    "end": "632360"
  },
  {
    "text": "our data structure so that cause you could uh just uh pass Kern address",
    "start": "632360",
    "end": "638880"
  },
  {
    "text": "inside and at the end of function it will decrete the value of uh the address",
    "start": "638880",
    "end": "644680"
  },
  {
    "text": "that means you are able to decrete uh the value of any kernel address so you",
    "start": "644680",
    "end": "650040"
  },
  {
    "text": "can change the kernel address data this part is used in lamino and green poison",
    "start": "650040",
    "end": "656800"
  },
  {
    "text": "for I point I 4 one okay so",
    "start": "656800",
    "end": "663120"
  },
  {
    "text": "devices uh there also a lot of uh attack to devices and there's a very famous uh",
    "start": "663120",
    "end": "669600"
  },
  {
    "text": "B Ed it's used in the uh evasion 7 for the I 7 uh jailbreak uh in this PTM X",
    "start": "669600",
    "end": "679320"
  },
  {
    "text": "get IO control Handler functions uh this Handler didn't check the input parameter",
    "start": "679320",
    "end": "686760"
  },
  {
    "text": "one input parameter is the uh actually the minor number of the PTM X device and",
    "start": "686760",
    "end": "693440"
  },
  {
    "text": "that calls that out of B memory access",
    "start": "693440",
    "end": "698079"
  },
  {
    "text": "bar okay so the last part is the out kit actually there's so so many BS in in",
    "start": "698480",
    "end": "705360"
  },
  {
    "text": "this out kit so I just um list some name of",
    "start": "705360",
    "end": "711959"
  },
  {
    "text": "them and uh actually in recent jbre and all the Ks are exist in the",
    "start": "711959",
    "end": "721760"
  },
  {
    "text": "kit okay so after after we have looked at some some PR attack services and what",
    "start": "722839",
    "end": "729120"
  },
  {
    "text": "will we talk today uh two parts for the for the kernel part we will talk about",
    "start": "729120",
    "end": "735760"
  },
  {
    "text": "first um how to there some some small uh tips to improve your IIT fuzing and uh",
    "start": "735760",
    "end": "744680"
  },
  {
    "text": "and beside that we introduce some more part to F in I kit and uh and after all",
    "start": "744680",
    "end": "751560"
  },
  {
    "text": "uh after that I introduce the M system and uh and this actually this might be",
    "start": "751560",
    "end": "758040"
  },
  {
    "text": "this is not well Fred in the past and for user space I will will",
    "start": "758040",
    "end": "763560"
  },
  {
    "text": "focus on the xpc fings and uh we were introduce the work uh we do actually",
    "start": "763560",
    "end": "770639"
  },
  {
    "text": "that is uh some difference from the the work from the Google project zero uh as",
    "start": "770639",
    "end": "776680"
  },
  {
    "text": "we know they also released the some box for the uh for the user user l",
    "start": "776680",
    "end": "783959"
  },
  {
    "text": "space okay so let's go to the first part it's the con",
    "start": "783959",
    "end": "789360"
  },
  {
    "text": "part uh uh basically we we see that uh um the AL kit contains more code so",
    "start": "790199",
    "end": "798399"
  },
  {
    "text": "there's more possibility that we may find the vulnerabilities in IIT part so",
    "start": "798399",
    "end": "805560"
  },
  {
    "text": "we think that the Alit is really the best Target for kind of fing you you you",
    "start": "805560",
    "end": "811199"
  },
  {
    "text": "it's it's it's not so hard for you to find some results in this part and uh",
    "start": "811199",
    "end": "816320"
  },
  {
    "text": "actually two years ago uh also there's a topic from pangu Team present by me and",
    "start": "816320",
    "end": "821519"
  },
  {
    "text": "uh uh sh Bon we talked about how to do the our kit fuzing so we don't give some",
    "start": "821519",
    "end": "828320"
  },
  {
    "text": "basic information uh in this talk uh we just uh give some tips how to improve",
    "start": "828320",
    "end": "834279"
  },
  {
    "text": "the uh fuzzing okay so the first is that uh we all the most alocate fathers will",
    "start": "834279",
    "end": "840959"
  },
  {
    "text": "focus on calling this function I connect call method yeah this this is the power",
    "start": "840959",
    "end": "847000"
  },
  {
    "text": "of functions to um do all the other the tunnels but um but if you look inside",
    "start": "847000",
    "end": "854399"
  },
  {
    "text": "this function actually this is not the mo the the lowest function actually",
    "start": "854399",
    "end": "860079"
  },
  {
    "text": "actually this is just a wrapper this function called iore connectcore method",
    "start": "860079",
    "end": "866480"
  },
  {
    "text": "function and this and that function actually is the lowlevel function it",
    "start": "866480",
    "end": "872000"
  },
  {
    "text": "just called Mac Mac message to trap into kernel so what the what did the the RPP",
    "start": "872000",
    "end": "879040"
  },
  {
    "text": "function do actually the they they did a very very simple thing they check the uh",
    "start": "879040",
    "end": "885959"
  },
  {
    "text": "size of the input and output structure to uh determine if if the size is very",
    "start": "885959",
    "end": "892880"
  },
  {
    "text": "large uh larger than the 4 kiloby uh it will the kernel you should use an",
    "start": "892880",
    "end": "899639"
  },
  {
    "text": "iio memory descriptor to map this userland memory so you can access it",
    "start": "899639",
    "end": "905639"
  },
  {
    "text": "otherwise if this if the buffer is small uh you just you can just call Copy in",
    "start": "905639",
    "end": "911880"
  },
  {
    "text": "and copy out to access the memory uh this is obviously for the performance",
    "start": "911880",
    "end": "919279"
  },
  {
    "text": "considerations okay this is the snapshot of the code you can see obviously here",
    "start": "919320",
    "end": "924800"
  },
  {
    "text": "and that there's two size check here and in different in different branch and",
    "start": "924800",
    "end": "930440"
  },
  {
    "text": "they will pass pass different parameters to the lowlevel",
    "start": "930440",
    "end": "936079"
  },
  {
    "text": "function so the idea to improve the previous iate fuzing is that you should",
    "start": "937519",
    "end": "943759"
  },
  {
    "text": "not call IO connect method uh it's it is good it is a better choice to call the",
    "start": "943759",
    "end": "951600"
  },
  {
    "text": "iore connect and score method the more lowlevel functions and that gives you",
    "start": "951600",
    "end": "957240"
  },
  {
    "text": "the power to bypass the size restrictions and since uh since uh some",
    "start": "957240",
    "end": "964079"
  },
  {
    "text": "some IIT drivers uh were uh uh for for",
    "start": "964079",
    "end": "969240"
  },
  {
    "text": "different uh different input and for for example the coping or for our memory",
    "start": "969240",
    "end": "975440"
  },
  {
    "text": "descriptor they will go to different branch of code so uh by called the low",
    "start": "975440",
    "end": "980480"
  },
  {
    "text": "level function you can f more parts of the code and there's an example here",
    "start": "980480",
    "end": "988040"
  },
  {
    "text": "this CV actually this is used in the past year break and uh uh this",
    "start": "988040",
    "end": "993639"
  },
  {
    "text": "vulnerability code exist in the branch of uh the driver to deal with a large",
    "start": "993639",
    "end": "1000880"
  },
  {
    "text": "output structure uh so but but the problem is if you want to exploit this",
    "start": "1000880",
    "end": "1008160"
  },
  {
    "text": "bark you want to exploit this bark you you should do some hip spray and Heap",
    "start": "1008160",
    "end": "1013360"
  },
  {
    "text": "fun r that make that means you need to put the put the memory into a smaller",
    "start": "1013360",
    "end": "1018959"
  },
  {
    "text": "Zone not not larger than four 4 kilobytes must must in a smaller K zone",
    "start": "1018959",
    "end": "1026400"
  },
  {
    "text": "so so if you call the uh I connect call method function you will not be able to",
    "start": "1026400",
    "end": "1032640"
  },
  {
    "text": "check the bar so you need to call the low Lev function you can check B and you can bypass the size restriction so you",
    "start": "1032640",
    "end": "1040160"
  },
  {
    "text": "can explod the bar okay so another um tips is that",
    "start": "1040160",
    "end": "1049280"
  },
  {
    "text": "actually the the info information leak parts are are really important these days because if you want to write a",
    "start": "1049280",
    "end": "1056240"
  },
  {
    "text": "working exploit you need to bypass the uh mitigations and the most uh important",
    "start": "1056240",
    "end": "1062520"
  },
  {
    "text": "mitigations is always the ASR so uh what what do we do in our F",
    "start": "1062520",
    "end": "1069080"
  },
  {
    "text": "actually we check all the uh possible kernel addresses in all the output of",
    "start": "1069080",
    "end": "1076159"
  },
  {
    "text": "our fing results so uh uh this is this is useful because in uh we actually we",
    "start": "1076159",
    "end": "1083919"
  },
  {
    "text": "found a information Le bar and use that bar in the past pangu",
    "start": "1083919",
    "end": "1091440"
  },
  {
    "text": "break so besides the call besides the to improve uh the F by calling a lowlevel",
    "start": "1092039",
    "end": "1099799"
  },
  {
    "text": "function we we still introduce some new parts to to FR for IIT this is the Shar",
    "start": "1099799",
    "end": "1106840"
  },
  {
    "text": "memory and the IIT traps so uh we look at the share the",
    "start": "1106840",
    "end": "1113840"
  },
  {
    "text": "memory first the share the memory uh is that the ACT Alit drivers is able to",
    "start": "1113840",
    "end": "1119720"
  },
  {
    "text": "share um memory directly with the user space applications and it assumed that",
    "start": "1119720",
    "end": "1126600"
  },
  {
    "text": "the user applications user application already know the the structure uh I mean",
    "start": "1126600",
    "end": "1132320"
  },
  {
    "text": "what what what kind of data you put in this shared memory uh so the user space",
    "start": "1132320",
    "end": "1138240"
  },
  {
    "text": "if1 to open the shared memory it's quite easy just call one API name the io",
    "start": "1138240",
    "end": "1144120"
  },
  {
    "text": "connect map memory after your success opening",
    "start": "1144120",
    "end": "1150080"
  },
  {
    "text": "devices uh there the definition of this function and the this interesting",
    "start": "1150080",
    "end": "1156480"
  },
  {
    "text": "parameter we should pay attention is the memory type uh this this flag uh is",
    "start": "1156480",
    "end": "1162919"
  },
  {
    "text": "Meaningful to for some iate extensions",
    "start": "1162919",
    "end": "1168720"
  },
  {
    "text": "uh we we see how hand how K handle this so if some IIT wants to share memory",
    "start": "1170240",
    "end": "1176760"
  },
  {
    "text": "with user space applications they they need to override this function client memory for type and",
    "start": "1176760",
    "end": "1185159"
  },
  {
    "text": "this is as a simple uh simple example code uh for the uh hiid event service",
    "start": "1185159",
    "end": "1192320"
  },
  {
    "text": "user client and uh you can see it's uh uh all the all the things to do is to",
    "start": "1192320",
    "end": "1199400"
  },
  {
    "text": "return an i memory descript object then the kernel will know uh which memory",
    "start": "1199400",
    "end": "1204840"
  },
  {
    "text": "should be mapped into the user space and but uh actually if you look to other",
    "start": "1204840",
    "end": "1210559"
  },
  {
    "text": "some some other alut extensions as I said before some some functions some override",
    "start": "1210559",
    "end": "1217799"
  },
  {
    "text": "functions we dealing with the the second parameter is type this is the this what",
    "start": "1217799",
    "end": "1224400"
  },
  {
    "text": "this memory type passed into the kernel and you must input the correct type to",
    "start": "1224400",
    "end": "1231360"
  },
  {
    "text": "successfully open the me open the memory okay so the idea to improve the",
    "start": "1231360",
    "end": "1238640"
  },
  {
    "text": "fuzzing so you try to open the share the memory of an ioc and uh you can",
    "start": "1238640",
    "end": "1244960"
  },
  {
    "text": "randomly you can randomly feel the sh memory while fuzzing the io connect call",
    "start": "1244960",
    "end": "1251000"
  },
  {
    "text": "method because some datas uh in this sh memory is used the used by some internal",
    "start": "1251000",
    "end": "1258799"
  },
  {
    "text": "functions so we should combine combine these two",
    "start": "1258799",
    "end": "1264120"
  },
  {
    "text": "together there are several examples and the the formal to of the Box in our data",
    "start": "1264120",
    "end": "1270480"
  },
  {
    "text": "C is reported by uh Google project zero and uh the third one is the uh KOB use",
    "start": "1270480",
    "end": "1277400"
  },
  {
    "text": "the in the pangu break uh so we think the the problem in this scenar is that",
    "start": "1277400",
    "end": "1284159"
  },
  {
    "text": "the kernel actually should not trusted memory data um maybe Modified by user",
    "start": "1284159",
    "end": "1291279"
  },
  {
    "text": "applications you see we we we Shar the K Shar his it memory to the user space and",
    "start": "1291279",
    "end": "1297600"
  },
  {
    "text": "use the data from the user space then you should U more more restruction and",
    "start": "1297600",
    "end": "1302960"
  },
  {
    "text": "more check on these datas and not easily trust them okay so another another fun uh part",
    "start": "1302960",
    "end": "1311320"
  },
  {
    "text": "we talk here is the traps uh the out uh the traps can be uh triggered by user",
    "start": "1311320",
    "end": "1317799"
  },
  {
    "text": "Space by uh calling the I connect trap the six functions and finally they all call the",
    "start": "1317799",
    "end": "1323440"
  },
  {
    "text": "I kit user C trap uh the input is quite easy there's only one index that's a",
    "start": "1323440",
    "end": "1329720"
  },
  {
    "text": "like selector of function and then um besides that there's a maybe uh there's",
    "start": "1329720",
    "end": "1336240"
  },
  {
    "text": "a up to six parameters input quite a lot okay so how how can of handle this so uh",
    "start": "1336240",
    "end": "1345880"
  },
  {
    "text": "the if we see the function we can we can see that the kernel will first get the",
    "start": "1345880",
    "end": "1351279"
  },
  {
    "text": "get an structure called the I external trap according to the index we input",
    "start": "1351279",
    "end": "1357840"
  },
  {
    "text": "okay and if it successfully get structure and will then it will directly call the function point in this",
    "start": "1357840",
    "end": "1365000"
  },
  {
    "text": "structure and there's no more",
    "start": "1365000",
    "end": "1369080"
  },
  {
    "text": "checks if the FML out kit extension wants to uh provide this feature and",
    "start": "1370159",
    "end": "1377480"
  },
  {
    "text": "they may override functions but uh but if you look inside uh you will see that",
    "start": "1377480",
    "end": "1382919"
  },
  {
    "text": "most uh most drivers choose to override the get Target and track for index",
    "start": "1382919",
    "end": "1390679"
  },
  {
    "text": "functions so how to First this part actually uh first you to locate all the",
    "start": "1390799",
    "end": "1397600"
  },
  {
    "text": "overriden functions and in the functions you could determine the range of the index so and then you can you can do a",
    "start": "1397600",
    "end": "1405799"
  },
  {
    "text": "FR because there's no more size check you just can put six",
    "start": "1405799",
    "end": "1411760"
  },
  {
    "text": "parameters but the problem is that uh if you if you find some bug and you analyze",
    "start": "1411760",
    "end": "1417240"
  },
  {
    "text": "it you will find the find out the I external trap this structure the the",
    "start": "1417240",
    "end": "1422360"
  },
  {
    "text": "definition of this structure actually is different from the word in the xn source code uh there's a there's another member",
    "start": "1422360",
    "end": "1430159"
  },
  {
    "text": "at the end of the structure we we C the it flag here at the s word uh actually",
    "start": "1430159",
    "end": "1437600"
  },
  {
    "text": "if the if the flag equals zero that means the second member function is what",
    "start": "1437600",
    "end": "1444000"
  },
  {
    "text": "as is what as we think it's a real function address point but if the flag",
    "start": "1444000",
    "end": "1450360"
  },
  {
    "text": "is is one not zero that means the function uh the function member is the",
    "start": "1450360",
    "end": "1457320"
  },
  {
    "text": "uh offset uh of the function in the uh in the object V",
    "start": "1457320",
    "end": "1464600"
  },
  {
    "text": "table so uh and uh uh after the after I talk about the alocate traps we move to",
    "start": "1465360",
    "end": "1472520"
  },
  {
    "text": "another part is the Mig system uh the Mig system actually basically is very",
    "start": "1472520",
    "end": "1478440"
  },
  {
    "text": "very uh lowlevel API called called Mark message",
    "start": "1478440",
    "end": "1484600"
  },
  {
    "text": "or uh actually a lot of apis finally called this one to trap into kernel and",
    "start": "1484600",
    "end": "1491320"
  },
  {
    "text": "uh dispatch the messages in the kernel and this there is an simple example here",
    "start": "1491320",
    "end": "1497679"
  },
  {
    "text": "is uh uh I Service close and you can see that it's directly called mac message and",
    "start": "1497679",
    "end": "1504080"
  },
  {
    "text": "send message to Kernel but we have to P here is that there the uh the message",
    "start": "1504080",
    "end": "1511760"
  },
  {
    "text": "ID uh this set a very specific message ID so how the kernel handle",
    "start": "1511760",
    "end": "1518559"
  },
  {
    "text": "this uh autom ma messages into uh kernel space were dispatched by IPC object uh",
    "start": "1518559",
    "end": "1525559"
  },
  {
    "text": "server function and this function find the uh M has structure in Mbox foral",
    "start": "1525559",
    "end": "1533320"
  },
  {
    "text": "according to the message ID okay and then it will do some check and call the",
    "start": "1533320",
    "end": "1539240"
  },
  {
    "text": "call the routing of this in this structure so if you want to know all the",
    "start": "1539240",
    "end": "1545080"
  },
  {
    "text": "functions you need to locate the m brackets and uh if you find this in the",
    "start": "1545080",
    "end": "1551760"
  },
  {
    "text": "ex Source where you saw uh this this data actually is initialized in m init",
    "start": "1551760",
    "end": "1558679"
  },
  {
    "text": "function and in in meit function it's just uh read all the data from the m e",
    "start": "1558679",
    "end": "1566399"
  },
  {
    "text": "variable and store them into this uh M brackets so take a look at M okay so",
    "start": "1566399",
    "end": "1573919"
  },
  {
    "text": "this uh this defines a lot of subsystems here so each subsystem will have",
    "start": "1573919",
    "end": "1580760"
  },
  {
    "text": "different function but you can't find definition in the ex source code so we go to Ida and reverse the K catch of the",
    "start": "1580760",
    "end": "1587480"
  },
  {
    "text": "iOS device and uh uh you can locate it m variable and find a lot of subsystems",
    "start": "1587480",
    "end": "1595080"
  },
  {
    "text": "here and uh uh if we we take an example here is the um uh Mark VM subsystem and",
    "start": "1595080",
    "end": "1604120"
  },
  {
    "text": "uh uh at beginning this is the the minimal message and the minimal routine",
    "start": "1604120",
    "end": "1610039"
  },
  {
    "text": "number actually this is the uh message ID uh set in the mark message function",
    "start": "1610039",
    "end": "1616480"
  },
  {
    "text": "and also there's maximum after there's an array of the uh",
    "start": "1616480",
    "end": "1623519"
  },
  {
    "text": "functions so after after location all of this uh variables you will know what you",
    "start": "1624720",
    "end": "1631320"
  },
  {
    "text": "will know all the valid uh message IDs so when you get these IDs it's possible",
    "start": "1631320",
    "end": "1637279"
  },
  {
    "text": "for you to roughly fuzzing all the all the uh subsystem functions uh but uh the",
    "start": "1637279",
    "end": "1644880"
  },
  {
    "text": "result maybe not so good so in our view I think maybe more accurately fuzzing",
    "start": "1644880",
    "end": "1652039"
  },
  {
    "text": "and must must be used to F the M system that means uh for each functions for",
    "start": "1652039",
    "end": "1659480"
  },
  {
    "text": "different functions you need to look inside functions and figure out what the structure inside this message so that",
    "start": "1659480",
    "end": "1666919"
  },
  {
    "text": "you can really fast this functions uh anyway I think we we think",
    "start": "1666919",
    "end": "1674880"
  },
  {
    "text": "that the M Mig subsystems is not wear fast in the in in in the previous work",
    "start": "1674880",
    "end": "1681640"
  },
  {
    "text": "so maybe in future there may be some BS found in this and but today we just give",
    "start": "1681640",
    "end": "1686919"
  },
  {
    "text": "a give an example of the uh the result of our fathers this bar is exists in the",
    "start": "1686919",
    "end": "1694480"
  },
  {
    "text": "Alit traps actually uh for uh I stream user client uh override the get Target",
    "start": "1694480",
    "end": "1701360"
  },
  {
    "text": "and trap for index function and uh there's a uh you can see in this",
    "start": "1701360",
    "end": "1707679"
  },
  {
    "text": "function uh actually the A3 is the uh input parameter this is index okay so the",
    "start": "1707679",
    "end": "1716320"
  },
  {
    "text": "function restrict the index uh to uh",
    "start": "1716320",
    "end": "1721720"
  },
  {
    "text": "restrict the index must less or than two but but uh we we take a look into the uh",
    "start": "1721720",
    "end": "1730880"
  },
  {
    "text": "the the variable here return actually there's only two two elements in this array that means in next zero and index",
    "start": "1730880",
    "end": "1739120"
  },
  {
    "text": "one but rest but if you want if you set the index equals two there's an out of",
    "start": "1739120",
    "end": "1745679"
  },
  {
    "text": "bound access memory back here yes actually this I think this is a very low level mistake for for for a programmer",
    "start": "1745679",
    "end": "1753960"
  },
  {
    "text": "um anyway this code is just unbelievable yes and and this Market is still not fixed in the 84 8.4",
    "start": "1753960",
    "end": "1763559"
  },
  {
    "text": "version okay so next I pass to t one and talk about the user l",
    "start": "1764880",
    "end": "1771640"
  },
  {
    "text": "space hello hi I'm tan I'm going to take over the second part in this part I will",
    "start": "1771640",
    "end": "1778840"
  },
  {
    "text": "uh present how we find and exploore V abilities in xpc services so you may ask",
    "start": "1778840",
    "end": "1786919"
  },
  {
    "text": "what does xpc means so in short xpc is a kind of interprocess communication",
    "start": "1786919",
    "end": "1793760"
  },
  {
    "text": "mechanisms on Mac OS if you look at the applications running on iOS very likely",
    "start": "1793760",
    "end": "1800360"
  },
  {
    "text": "they are confined by the stand boox that means these uh applications have very",
    "start": "1800360",
    "end": "1806480"
  },
  {
    "text": "limited access to the whole system so to to complete the a lot of fancy jobs they",
    "start": "1806480",
    "end": "1814000"
  },
  {
    "text": "have to communicate with a lot of system services so that they can finish the job",
    "start": "1814000",
    "end": "1819320"
  },
  {
    "text": "do a lot of useful stuff uh the design of IPC interprocess",
    "start": "1819320",
    "end": "1824720"
  },
  {
    "text": "communication is very good for security because the design mix is possible to separate",
    "start": "1824720",
    "end": "1831399"
  },
  {
    "text": "different functionalities into different process and then the system could apply different permissions and also send box",
    "start": "1831399",
    "end": "1838159"
  },
  {
    "text": "profiles to different process in that case the system doesn't have to mess up everything together and",
    "start": "1838159",
    "end": "1844840"
  },
  {
    "text": "that would be very terrible for security and but the potential problem for IPC is",
    "start": "1844840",
    "end": "1850760"
  },
  {
    "text": "that IPC would introduce extra data processing for example the client side",
    "start": "1850760",
    "end": "1855960"
  },
  {
    "text": "has to prepare the request and send the request to the server server means some system service and the server side has",
    "start": "1855960",
    "end": "1863480"
  },
  {
    "text": "to pass the request and make a response if necessary so there is a some extra",
    "start": "1863480",
    "end": "1869159"
  },
  {
    "text": "dat processing apparently such a kind of dat processing forms a new attack a",
    "start": "1869159",
    "end": "1874799"
  },
  {
    "text": "potential attack surface and on Mac OS and iOS actually you can find a number",
    "start": "1874799",
    "end": "1881799"
  },
  {
    "text": "of uh IPC mechanisms such as the socet or distributed Orit",
    "start": "1881799",
    "end": "1889039"
  },
  {
    "text": "and among these two of the most uh most commonly used is uh ma message and",
    "start": "1889039",
    "end": "1896639"
  },
  {
    "text": "xpc so for mac message is the fundamental of all ipcs it's implemented",
    "start": "1896639",
    "end": "1902840"
  },
  {
    "text": "through the Mac track called mac message override trap it's a fundamental of all",
    "start": "1902840",
    "end": "1908360"
  },
  {
    "text": "the ipcs and as a result if you look at the history a lot of very good pre",
    "start": "1908360",
    "end": "1915080"
  },
  {
    "text": "previous working there for example the the talks I listed in this slide they",
    "start": "1915080",
    "end": "1920760"
  },
  {
    "text": "dis discussed the inter the detail internal details of Mac Mage and also",
    "start": "1920760",
    "end": "1928000"
  },
  {
    "text": "introduced how to find V abilities in ma m message based uh",
    "start": "1928000",
    "end": "1934120"
  },
  {
    "text": "service and uh compared to compared with SMC message xpc is a relatively new uh",
    "start": "1934120",
    "end": "1942679"
  },
  {
    "text": "IPC mechanisms on Mac OS and iOS it was firstly introduced in Mac OS 10.7 and",
    "start": "1942679",
    "end": "1950720"
  },
  {
    "text": "iOS 5 in 2011 and actually xpc is built on top of",
    "start": "1950720",
    "end": "1956760"
  },
  {
    "text": "mac message it's just kind of R of Mac Mac message but it it significantly simp",
    "start": "1956760",
    "end": "1963000"
  },
  {
    "text": "uh simplified the lowlevel details of IPC so in other words xpc xpc apis",
    "start": "1963000",
    "end": "1970919"
  },
  {
    "text": "provide very simple interface to look to look up the services or connect to the services only by the name and uh these",
    "start": "1970919",
    "end": "1979440"
  },
  {
    "text": "APS are very you very easy to use to like send all receive strongly type",
    "start": "1979440",
    "end": "1986240"
  },
  {
    "text": "messages so you world it's very easy to use uh kind of framework to do the uh",
    "start": "1986240",
    "end": "1993440"
  },
  {
    "text": "IPC so I'm going to use two pieces of code to to demonstrate how to run a uh",
    "start": "1993440",
    "end": "2001000"
  },
  {
    "text": "xpc Thor and also uh xpc client on iOS so this slide shows the the code for",
    "start": "2001000",
    "end": "2008960"
  },
  {
    "text": "Soros side and iOS uh the most common",
    "start": "2008960",
    "end": "2014559"
  },
  {
    "text": "way is to use this API uh xpc connection create Mac service to set up the the the",
    "start": "2014559",
    "end": "2022559"
  },
  {
    "text": "the server and the first parameter is the name of service which has to be",
    "start": "2022559",
    "end": "2027840"
  },
  {
    "text": "reserved in the Mac Services of the system P files that means basically only",
    "start": "2027840",
    "end": "2033279"
  },
  {
    "text": "the built-in binaries could use API to to launch to set the builtin services",
    "start": "2033279",
    "end": "2039760"
  },
  {
    "text": "they are not open to third party applications and one important parameter",
    "start": "2039760",
    "end": "2045399"
  },
  {
    "text": "is the third line so basically the same API can also be used by the client site",
    "start": "2045399",
    "end": "2050800"
  },
  {
    "text": "to connect to the service the only difference oh sorry the only difference is the uh",
    "start": "2050800",
    "end": "2058280"
  },
  {
    "text": "third parameter and here there is a macro the value it value is one it",
    "start": "2058280",
    "end": "2064638"
  },
  {
    "text": "indicates it's a server and for a server that means it's very common to handle",
    "start": "2064639",
    "end": "2070398"
  },
  {
    "text": "multiple connections at the same time so you may you may want to have a connection Handler that means you want",
    "start": "2070399",
    "end": "2076599"
  },
  {
    "text": "to dispatch a connection or specify the connection context or whatever so you",
    "start": "2076599",
    "end": "2082000"
  },
  {
    "text": "you want to you can use this API like xpc connection set even Handler first",
    "start": "2082000",
    "end": "2087398"
  },
  {
    "text": "for the first time you can set up the connection dispenser here and the",
    "start": "2087399",
    "end": "2093040"
  },
  {
    "text": "given uh connection you can call the API again but this time you will set the",
    "start": "2093040",
    "end": "2099079"
  },
  {
    "text": "message Handler and for the message Handler now you are able to get each",
    "start": "2099079",
    "end": "2105480"
  },
  {
    "text": "piece of message and actually the xpc message is uh is in the tie of xpc I",
    "start": "2105480",
    "end": "2112839"
  },
  {
    "text": "will show you later and but basically that's how the Soro side uh",
    "start": "2112839",
    "end": "2118680"
  },
  {
    "text": "runs and let's move to the client site and as I mentioned the same API is used",
    "start": "2118680",
    "end": "2125960"
  },
  {
    "text": "for client side to connect to the service and the first parameter is the",
    "start": "2125960",
    "end": "2131359"
  },
  {
    "text": "name of the Ser service you want to connect to and the only difference is the third one so now you use zero that",
    "start": "2131359",
    "end": "2138880"
  },
  {
    "text": "indicates it's a client rather than a server and now it's time to prepare the message",
    "start": "2138880",
    "end": "2146160"
  },
  {
    "text": "and send it to the server and basically you just create a xpc dictionary it's a",
    "start": "2146160",
    "end": "2153640"
  },
  {
    "text": "key when you pair container this structure you can insert other xpc",
    "start": "2153640",
    "end": "2158920"
  },
  {
    "text": "objects into the dictionary with a key and the value for example now in this",
    "start": "2158920",
    "end": "2164800"
  },
  {
    "text": "example I insert M it name is one1 its real value is 1.0 in the type of D and",
    "start": "2164800",
    "end": "2173920"
  },
  {
    "text": "now we can send it to a thorough and get a reply so it's pry easy to use",
    "start": "2173920",
    "end": "2180079"
  },
  {
    "text": "and this slide summarizes the DAT flow along the xpc uh channel so from the S",
    "start": "2180079",
    "end": "2189200"
  },
  {
    "text": "part V uh point of view you prepare a xpc dictionary and uh seriz it into a",
    "start": "2189200",
    "end": "2196839"
  },
  {
    "text": "mac message send it to the other process and from the receiver point of view okay",
    "start": "2196839",
    "end": "2203400"
  },
  {
    "text": "you receive the mac message and deize it into xpc dictionary and uh given the",
    "start": "2203400",
    "end": "2210599"
  },
  {
    "text": "dictionary you extract the xpc objects and for each xpc object you can further",
    "start": "2210599",
    "end": "2218040"
  },
  {
    "text": "extract the retrieve the raw data the value and process the value so we",
    "start": "2218040",
    "end": "2223760"
  },
  {
    "text": "believe all these three steps I mean the distalization object the reference uh",
    "start": "2223760",
    "end": "2229960"
  },
  {
    "text": "dat uh the reference could be attacked so here I have to mention the the",
    "start": "2229960",
    "end": "2235079"
  },
  {
    "text": "independent work from uh ambir research and Google Project Arrow",
    "start": "2235079",
    "end": "2242400"
  },
  {
    "text": "in in this work he find a lot of vulnerabilities in the object the reference part the a lot of TP",
    "start": "2242400",
    "end": "2249880"
  },
  {
    "text": "confusions and this piece of code demonstrates the root cause of the TP confusion basically the thorite receives",
    "start": "2249880",
    "end": "2257359"
  },
  {
    "text": "some untrusted message and the thorite also presume the type of some M objects",
    "start": "2257359",
    "end": "2264599"
  },
  {
    "text": "in the message for example in the code you can say sorry I",
    "start": "2264599",
    "end": "2269839"
  },
  {
    "text": "only have one letter here so you have the message and it tries to retrieve the",
    "start": "2269839",
    "end": "2277079"
  },
  {
    "text": "retrieve the object using the key and for the return object there's",
    "start": "2277079",
    "end": "2283880"
  },
  {
    "text": "new type of validation and the server side continue to just believe it's a xpc",
    "start": "2283880",
    "end": "2291480"
  },
  {
    "text": "type data and the reference data because different xpc object has different",
    "start": "2291480",
    "end": "2296520"
  },
  {
    "text": "internal data structures if you don't put the if you don't don't perform the type validation it would cause some",
    "start": "2296520",
    "end": "2303920"
  },
  {
    "text": "security problems you could refer to n's work for more details about exploit and",
    "start": "2303920",
    "end": "2310800"
  },
  {
    "text": "uh but Apple made a very good response",
    "start": "2310800",
    "end": "2315839"
  },
  {
    "text": "so what Apple did is it introduced a lot of type checks in all the xpc GS family",
    "start": "2315839",
    "end": "2323640"
  },
  {
    "text": "that family of apis so basically in the low level and the low level apis Apple",
    "start": "2323640",
    "end": "2330359"
  },
  {
    "text": "performs a lot of type validations if the type mismatch just it will quickly",
    "start": "2330359",
    "end": "2335680"
  },
  {
    "text": "return zero so it Mally fixed all these kind of type confusions and actually",
    "start": "2335680",
    "end": "2343119"
  },
  {
    "text": "independently we find a lot of type confusions in on iOS platform but unfortunately we find Apple already",
    "start": "2343119",
    "end": "2349599"
  },
  {
    "text": "fixed these kind of vulnerabilities so we made a step further and we focus on the data der",
    "start": "2349599",
    "end": "2357240"
  },
  {
    "text": "reference part so so given the the raw data how the Soros side handles this",
    "start": "2357240",
    "end": "2362760"
  },
  {
    "text": "data that will that int introduce security problems",
    "start": "2362760",
    "end": "2368920"
  },
  {
    "text": "so basically we want to do some fuzzing and it's easy way to to to to test a lot",
    "start": "2368920",
    "end": "2374640"
  },
  {
    "text": "of service and basically we have two uh fing policies the first one is passive",
    "start": "2374640",
    "end": "2381240"
  },
  {
    "text": "fing that means we just select a targeted services and we by hooking the",
    "start": "2381240",
    "end": "2388440"
  },
  {
    "text": "explicit connection that hand function we are able to get the message Handler",
    "start": "2388440",
    "end": "2394000"
  },
  {
    "text": "we know which this function will handle all the in com in xpc messages and we",
    "start": "2394000",
    "end": "2400319"
  },
  {
    "text": "further hook that handlers and then we can mutate all the all the receive the",
    "start": "2400319",
    "end": "2405880"
  },
  {
    "text": "XP dictionaries and see whether the the service would crash and then we can",
    "start": "2405880",
    "end": "2411240"
  },
  {
    "text": "analyze the crash and we also want to do some proactive fing that means we want to",
    "start": "2411240",
    "end": "2418079"
  },
  {
    "text": "proactively construct the xpc message and send it to the all the services we",
    "start": "2418079",
    "end": "2423760"
  },
  {
    "text": "can connect in that case we may trigger more Crush of find more vulnerabilities so now the question is",
    "start": "2423760",
    "end": "2431200"
  },
  {
    "text": "how can we find the services we we can connect you know I mentioned the s box",
    "start": "2431200",
    "end": "2436440"
  },
  {
    "text": "in the beginning so a lot of services you may not be able to connect so what we did is first we they compiled they we",
    "start": "2436440",
    "end": "2446240"
  },
  {
    "text": "first we they compiled the container s box and uh find all the connectable Mac",
    "start": "2446240",
    "end": "2453240"
  },
  {
    "text": "Lookout names so basically uh the this snapshot shows a part of the services",
    "start": "2453240",
    "end": "2460520"
  },
  {
    "text": "you are the all the apps uh you downloaded from App Store they are able",
    "start": "2460520",
    "end": "2466079"
  },
  {
    "text": "to connect and but some of some of the",
    "start": "2466079",
    "end": "2471800"
  },
  {
    "text": "these services are still using mac message we we want to xpc FKS the fing",
    "start": "2471800",
    "end": "2480119"
  },
  {
    "text": "so what we did is we first uh grab this API and in that case we are able to n n",
    "start": "2480119",
    "end": "2487839"
  },
  {
    "text": "the targets and we can find okay these are the services we are able to connect",
    "start": "2487839",
    "end": "2494040"
  },
  {
    "text": "even with the app running in the container through xpc apis and the the more harder thing is",
    "start": "2494040",
    "end": "2501880"
  },
  {
    "text": "the much harder thing is how to construct the message because you know the th side only retrieve the objects",
    "start": "2501880",
    "end": "2508319"
  },
  {
    "text": "using the keys the keys is kind of predefined if you don't know the keys",
    "start": "2508319",
    "end": "2514200"
  },
  {
    "text": "the thoro side would process access your message so the",
    "start": "2514200",
    "end": "2519880"
  },
  {
    "text": "good news is xpc apis they provide a set of retrieving retrieve apis for getting",
    "start": "2519880",
    "end": "2527359"
  },
  {
    "text": "the objects by using through the keys so we just Implement a very simple adap R",
    "start": "2527359",
    "end": "2534640"
  },
  {
    "text": "Pyon script and which will find all the code reference to such apis like excit",
    "start": "2534640",
    "end": "2541839"
  },
  {
    "text": "dictionary get this family apis and we just analyze the the second meter which",
    "start": "2541839",
    "end": "2548000"
  },
  {
    "text": "are the keys of the objects so we are able to retrieve all the keys that the",
    "start": "2548000",
    "end": "2553640"
  },
  {
    "text": "the Soros would like to accept we we put them in the single big very very large",
    "start": "2553640",
    "end": "2560880"
  },
  {
    "text": "dictionary and send it to the Sor side so we join the further iOS",
    "start": "2560880",
    "end": "2569040"
  },
  {
    "text": "8.2 which was the latest wording at that moment and surprisingly we find a lot of",
    "start": "2569040",
    "end": "2575160"
  },
  {
    "text": "Crash even the the the father is very dump and uh some of the CR we I will",
    "start": "2575160",
    "end": "2582720"
  },
  {
    "text": "show you might be fixed in iOS 8 point four but we are not sure and uh we",
    "start": "2582720",
    "end": "2590319"
  },
  {
    "text": "Analyze This crushes and in general we classify the mean to three categories",
    "start": "2590319",
    "end": "2596960"
  },
  {
    "text": "and we will go through each one by one the most typical case is now po",
    "start": "2596960",
    "end": "2602200"
  },
  {
    "text": "reference so the root course is the S side just presume the existence of the the certain case in the message so it",
    "start": "2602200",
    "end": "2609720"
  },
  {
    "text": "just tries to retrieve the object but doesn't check whether the the pointer is zero or not and continue to use and",
    "start": "2609720",
    "end": "2616200"
  },
  {
    "text": "pointer definitely that will trigger the crash and in this page you will see uh",
    "start": "2616200",
    "end": "2622559"
  },
  {
    "text": "this is a piece of De decompiled code and this is the pass of the uh",
    "start": "2622559",
    "end": "2628520"
  },
  {
    "text": "executable and in the in the uh below you you can see the PC code to trigger",
    "start": "2628520",
    "end": "2634559"
  },
  {
    "text": "the crash and now point the reference it's not big deal but for the for the IPC scenario is a little different so",
    "start": "2634559",
    "end": "2642000"
  },
  {
    "text": "because for if this program if this application is kind of malicious it can",
    "start": "2642000",
    "end": "2647040"
  },
  {
    "text": "crush the some services that means even all other banan applications are not",
    "start": "2647040",
    "end": "2652640"
  },
  {
    "text": "able to use any services for example if I if I can crush the some very important",
    "start": "2652640",
    "end": "2658359"
  },
  {
    "text": "service in your iPhone let me trigger some kind of you know",
    "start": "2658359",
    "end": "2664800"
  },
  {
    "text": "surface and uh the let's move to the out Bond memory",
    "start": "2665240",
    "end": "2672240"
  },
  {
    "text": "rate there's a program called uh okay I just show you some typical example actually we find a lot of similar",
    "start": "2672240",
    "end": "2678880"
  },
  {
    "text": "problems and this is the CVM C program is a component of open",
    "start": "2678880",
    "end": "2684640"
  },
  {
    "text": "GS and in this in this page you can see at beginning the S SI tries to retrieve",
    "start": "2684640",
    "end": "2691720"
  },
  {
    "text": "the object using the uh using the key ax which will return is supposed return a",
    "start": "2691720",
    "end": "2698160"
  },
  {
    "text": "binary AR just a raw AR but the program doesn't perform any lens check and the",
    "start": "2698160",
    "end": "2704839"
  },
  {
    "text": "directly pass the barer to another function inside of this function you can see it tries to Der reference the the",
    "start": "2704839",
    "end": "2712160"
  },
  {
    "text": "the value with offset eight and 12 so for example you just pass the a r with",
    "start": "2712160",
    "end": "2718599"
  },
  {
    "text": "length of like four definitely if you want to access the the offset like eight",
    "start": "2718599",
    "end": "2723800"
  },
  {
    "text": "or 12 it will trigger the out bones read and then you can also find the PC code",
    "start": "2723800",
    "end": "2729599"
  },
  {
    "text": "here and besides the memory read errors we also find a lot of memory errors in",
    "start": "2729599",
    "end": "2736800"
  },
  {
    "text": "the in this Library uh you can find the source code of this library and Google",
    "start": "2736800",
    "end": "2742000"
  },
  {
    "text": "sorry and Apple's website and let's quickly go through the source code you",
    "start": "2742000",
    "end": "2747480"
  },
  {
    "text": "can easily understand why they made the mistake so basically uh this API is used",
    "start": "2747480",
    "end": "2753079"
  },
  {
    "text": "to get get the DNS configuration through x uh xpc services",
    "start": "2753079",
    "end": "2760520"
  },
  {
    "text": "and basically the DAT D is retrieved from the xpc message and uh it there's",
    "start": "2760520",
    "end": "2768760"
  },
  {
    "text": "some data propagation but it doesn't matter finally the data is passed in pass to the the function named expand",
    "start": "2768760",
    "end": "2776200"
  },
  {
    "text": "configure but the code totally trust the the value inside the message and for",
    "start": "2776200",
    "end": "2781480"
  },
  {
    "text": "example it directly use in underscore attributes as a index",
    "start": "2781480",
    "end": "2787760"
  },
  {
    "text": "if you are able to control the message you can set up a super large value here definitely using the the this and the",
    "start": "2787760",
    "end": "2794599"
  },
  {
    "text": "index it will trigger the memory error and finally I want to share a remot",
    "start": "2794599",
    "end": "2802640"
  },
  {
    "text": "remot code execution bu you a program called IPA I AP transport D program and",
    "start": "2802640",
    "end": "2809839"
  },
  {
    "text": "it's very kind of surprising back to us and let's go through the code quickly",
    "start": "2809839",
    "end": "2816559"
  },
  {
    "text": "again and basically the th side tries to retrieve the object using the key PO ID",
    "start": "2816559",
    "end": "2824880"
  },
  {
    "text": "and it will this API will returns an integer and but the serite",
    "start": "2824880",
    "end": "2832200"
  },
  {
    "text": "simply use the integer as a object pointer here you can see it tries to",
    "start": "2832200",
    "end": "2838800"
  },
  {
    "text": "make a virtual function call but the object pointer is passed from the client",
    "start": "2838800",
    "end": "2844280"
  },
  {
    "text": "side so basically you just construct the the the the value and send it to the",
    "start": "2844280",
    "end": "2849319"
  },
  {
    "text": "third side if we trigger some memory crash but for this bu it's very easy to",
    "start": "2849319",
    "end": "2856720"
  },
  {
    "text": "exploit why so the key the key point is how to control how to control the uh",
    "start": "2856720",
    "end": "2863440"
  },
  {
    "text": "this expression so the short answer is to use the PIP ring you can refer to 's",
    "start": "2863440",
    "end": "2870079"
  },
  {
    "text": "work to uh to say how easily you can send a very super large xpc message and",
    "start": "2870079",
    "end": "2877000"
  },
  {
    "text": "affect the Heap layout so basically it's it's very easy and for the second",
    "start": "2877000",
    "end": "2882440"
  },
  {
    "text": "problem is you because of the code signing mechanism and the DP mechanism",
    "start": "2882440",
    "end": "2888000"
  },
  {
    "text": "you are not able to jump into the injected share code you have to leverate existing code that means you have to use",
    "start": "2888000",
    "end": "2894760"
  },
  {
    "text": "R like Ro like technique to to implement share code and the good news is all the",
    "start": "2894760",
    "end": "2901480"
  },
  {
    "text": "dynamic libraries are mged into a same catch file which is shared among all the process so if you find a gadget in your",
    "start": "2901480",
    "end": "2908599"
  },
  {
    "text": "own process space that means you can find the exactly same address in other process so RP just super easy and let's",
    "start": "2908599",
    "end": "2918440"
  },
  {
    "text": "talk about the impact of the B okay so first this this uh service is",
    "start": "2918440",
    "end": "2924920"
  },
  {
    "text": "connectable by any applications running in the container s box so that means any",
    "start": "2924920",
    "end": "2930079"
  },
  {
    "text": "application you downloaded from the App Store is able to explore theability and the second consequence says you know",
    "start": "2930079",
    "end": "2938040"
  },
  {
    "text": "for the apps you downloaded from App Store is confined as the S sandbox it cannot touch a lot of system files or",
    "start": "2938040",
    "end": "2946200"
  },
  {
    "text": "private informations but the the program the app if it's malicious it can export",
    "start": "2946200",
    "end": "2952599"
  },
  {
    "text": "V ability in the previous in the program in the system service and then it can",
    "start": "2952599",
    "end": "2957880"
  },
  {
    "text": "easily bypass the S boox and gain more access to your system so we believe it's",
    "start": "2957880",
    "end": "2962920"
  },
  {
    "text": "pretty ders back and uh so let me conclude the talk",
    "start": "2962920",
    "end": "2968760"
  },
  {
    "text": "quickly uh we reviewed the tank surface in ios8 and we demonstrate how to improv",
    "start": "2968760",
    "end": "2975040"
  },
  {
    "text": "of fuzing to find abilities so generally fuzing is not new IC fuzing is not new",
    "start": "2975040",
    "end": "2982480"
  },
  {
    "text": "but if you combine some combine this previous techniques with new improvements with some new trick tricks",
    "start": "2982480",
    "end": "2990319"
  },
  {
    "text": "it's not surpris to find new liabilities and more fundings and also we believe that Apple put more effort on improving",
    "start": "2990319",
    "end": "2997760"
  },
  {
    "text": "the whole security AR architecture rather than fixing individual bus like",
    "start": "2997760",
    "end": "3002920"
  },
  {
    "text": "what xpc but if you make a step further maybe you can find you can still find",
    "start": "3002920",
    "end": "3008920"
  },
  {
    "text": "vulnerabilities and because X code has a very long history we we believe that",
    "start": "3008920",
    "end": "3015480"
  },
  {
    "text": "review all the old very old source code is very helpful to security okay thank",
    "start": "3015480",
    "end": "3022200"
  },
  {
    "text": "you for your attention we are GL to answer your question",
    "start": "3022200",
    "end": "3028200"
  },
  {
    "text": "[Applause]",
    "start": "3028340",
    "end": "3031070"
  }
]