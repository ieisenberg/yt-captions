[
  {
    "text": "[Music]",
    "start": "60",
    "end": "3169"
  },
  {
    "text": "[Music]",
    "start": "9630",
    "end": "39689"
  },
  {
    "text": "so I think we should start there is nobody left outside and I guess they're all at Honey net so um we just go on",
    "start": "41280",
    "end": "49360"
  },
  {
    "text": "here yeah Welcome to our speech at blackhead ladies and gentlemen um I'm FX",
    "start": "49360",
    "end": "55280"
  },
  {
    "text": "this is my co-speaker Kimo and we're talking about attacking networked embedded systems we're covering all",
    "start": "55280",
    "end": "62280"
  },
  {
    "text": "kinds of stuff and hope you enjoy the talk and now I pass it on to",
    "start": "62280",
    "end": "67798"
  },
  {
    "text": "Kimo okay can everybody hear me yeah y okay um as FX said we're going to talk",
    "start": "68320",
    "end": "75439"
  },
  {
    "text": "about uh attacking Network embedded systems and specifically I'll be covering some design failures in",
    "start": "75439",
    "end": "82280"
  },
  {
    "text": "embedded systems um and then walk through exploitation of some Divine Design",
    "start": "82280",
    "end": "89000"
  },
  {
    "text": "failures and then then when I'm finished FX will take over and he'll talk about software he'll cover vulnerabilities in",
    "start": "89000",
    "end": "95320"
  },
  {
    "text": "software and then actually do a walkth through of taking advantage of a software vulnerability in a commonly",
    "start": "95320",
    "end": "102119"
  },
  {
    "text": "used embedded system um first before we start we have",
    "start": "102119",
    "end": "108719"
  },
  {
    "text": "to Define embedded systems lots of people have their their own definitions for the purpose of this talk FX and I",
    "start": "108719",
    "end": "114640"
  },
  {
    "text": "are going to say an embedded system is some type of computer computer in a small electronic device this can be a",
    "start": "114640",
    "end": "122000"
  },
  {
    "text": "Coke machine that lets the warehouse know when it's out of coke it can be your 7 series BMW that that tells you",
    "start": "122000",
    "end": "127920"
  },
  {
    "text": "where you have to take the left turn or how many miles until you run out of gas or it can be a dedicated uh traditional",
    "start": "127920",
    "end": "134000"
  },
  {
    "text": "computer type device um such as a firewall that that has one sole",
    "start": "134000",
    "end": "139599"
  },
  {
    "text": "purpose um usually the embedded systems run a customized operating system that",
    "start": "139599",
    "end": "145440"
  },
  {
    "text": "is either designed specifically for whatever purpose it is that the device is doing or it is a commonly used",
    "start": "145440",
    "end": "153440"
  },
  {
    "text": "operating system that's been heavily modified in the case of uh the medical care industry a lot of um stuff like",
    "start": "153440",
    "end": "161480"
  },
  {
    "text": "heart lung machines and stuff like that run on NT um it's it's been ripped apart really hard but it's it's actually NT at",
    "start": "161480",
    "end": "170440"
  },
  {
    "text": "the core um a lot of times there's no separation between the actual components",
    "start": "170440",
    "end": "178800"
  },
  {
    "text": "and the different access levels of the device something you you see in a normal computer you've got different access",
    "start": "178800",
    "end": "184560"
  },
  {
    "text": "levels and privileges for different types of of things that the device will do in embedded systems usually this is",
    "start": "184560",
    "end": "191280"
  },
  {
    "text": "not the case um it's it's got a single purpose and there's there's an access level not plural and and that's it um",
    "start": "191280",
    "end": "200360"
  },
  {
    "text": "also they're difficult to upgrade um we're talking like firmware style upgrades or an actual changing out of of",
    "start": "200360",
    "end": "207840"
  },
  {
    "text": "chips or or however the device is designed um if it's the hard disk or whatever the actual upgrade May entail",
    "start": "207840",
    "end": "214680"
  },
  {
    "text": "removing the hard disk and replacing it with an up updated",
    "start": "214680",
    "end": "220239"
  },
  {
    "text": "version yeah okay um things that we've seen as",
    "start": "222640",
    "end": "230480"
  },
  {
    "text": "design failures um that we're going to cover here is items like undocumented functionality uh standards that are",
    "start": "230480",
    "end": "237200"
  },
  {
    "text": "totally ignored or uh an uncontrolled complexity of the actual device um",
    "start": "237200",
    "end": "243959"
  },
  {
    "text": "things like ignored standards there we're talking um if anybody uses finger on a Cisco device you know you finger",
    "start": "243959",
    "end": "250439"
  },
  {
    "text": "the The Cisco and it'll turn around and tell you what sessions are active and that's it and it closes a connection",
    "start": "250439",
    "end": "255640"
  },
  {
    "text": "that is not the way that finger is supposed to function according to the protocol the the standard itself it's",
    "start": "255640",
    "end": "262040"
  },
  {
    "text": "it's supposed to do other things um developer back doors a lot of times a piece of software gets developed and",
    "start": "262040",
    "end": "267440"
  },
  {
    "text": "rolled out maybe some big customer whoever uses it tests it the developers have back doors in there so they can get",
    "start": "267440",
    "end": "273120"
  },
  {
    "text": "in and do software maintenance and then uh down the road 10 years the company's been sold two or three times the",
    "start": "273120",
    "end": "279560"
  },
  {
    "text": "developer's gone and those back doors are still in there every once in a while everybody reads bug track you see some",
    "start": "279560",
    "end": "284720"
  },
  {
    "text": "of these back doors coming to light um that's just a a natural occurrence be",
    "start": "284720",
    "end": "291000"
  },
  {
    "text": "because of yeah a loss of control of the development or or whatever it is but",
    "start": "291000",
    "end": "296880"
  },
  {
    "text": "it's something that happens actually quite often also Legacy function something that was needed uh way back",
    "start": "296880",
    "end": "303840"
  },
  {
    "text": "say 10 years ago that's that's not needed anymore today because today nobody uses whatever it is as a",
    "start": "303840",
    "end": "310160"
  },
  {
    "text": "function um complexity um I think everybody here knows about marketing and",
    "start": "310160",
    "end": "315680"
  },
  {
    "text": "how everybody wants to be first to Market and we're going to add this new functionality we're going to make it",
    "start": "315680",
    "end": "320720"
  },
  {
    "text": "Bluetooth accessible or or whatever it is and everybody adds this it gets added really quick a lot of times when people",
    "start": "320720",
    "end": "326960"
  },
  {
    "text": "do this they don't pay attention to the original design and the way the the",
    "start": "326960",
    "end": "332039"
  },
  {
    "text": "device itself was designed and the way access was set up on it and this gets ignored and they add this new piece to",
    "start": "332039",
    "end": "338160"
  },
  {
    "text": "it and it doesn't fit in and that's where you start running into",
    "start": "338160",
    "end": "344280"
  },
  {
    "text": "problems that's um the first one we're going to talk about um is the Lucent brick this",
    "start": "344280",
    "end": "350319"
  },
  {
    "text": "is a National Security Agency approved firewall it's a Layer Two Fire wall also certified by",
    "start": "350319",
    "end": "356160"
  },
  {
    "text": "NCSA um It suffers what we think are a few design failures in the design of the",
    "start": "356160",
    "end": "362600"
  },
  {
    "text": "the ARP cache itself um first off it will forward Arps regardless of the rules that you set up",
    "start": "362600",
    "end": "369039"
  },
  {
    "text": "in the firewall it really doesn't care it will forward the Arps so you can do",
    "start": "369039",
    "end": "374440"
  },
  {
    "text": "like an ARP sweep instead of a ping scan to identify other devices in the area um another problem is ARP reply",
    "start": "374440",
    "end": "384319"
  },
  {
    "text": "poisoning um do you want to hit the first one um if you look down in the corner",
    "start": "384319",
    "end": "389840"
  },
  {
    "text": "there the arery pie poisoning the cloud we're we're just going to say that's the the internet or the area outside the",
    "start": "389840",
    "end": "395360"
  },
  {
    "text": "firewall um at that point an attacker can sit there and just send an ARP reply",
    "start": "395360",
    "end": "401039"
  },
  {
    "text": "with a spoofed IP address of the lsms management server that um is a management station for the brick it uses",
    "start": "401039",
    "end": "407599"
  },
  {
    "text": "this LS SMS server to control the firewall you log to the lsms server um",
    "start": "407599",
    "end": "412639"
  },
  {
    "text": "you can control globally you can control a 100 different firewalls across your",
    "start": "412639",
    "end": "417919"
  },
  {
    "text": "your Enterprise Network with this L SMS server um The Brick knows who its",
    "start": "417919",
    "end": "424680"
  },
  {
    "text": "management server is however if you reply with an RP reply and spoof the IP",
    "start": "424680",
    "end": "430120"
  },
  {
    "text": "address of the management server and send a different Mac address for example",
    "start": "430120",
    "end": "435280"
  },
  {
    "text": "yours or whoevers it doesn't really matter it will stop speaking to its management server this means the",
    "start": "435280",
    "end": "441400"
  },
  {
    "text": "firewall just stopped logging and the firewall team can't access their own firewall they've got to like physically",
    "start": "441400",
    "end": "448080"
  },
  {
    "text": "go find it and and have somebody power cycle it or whatever um you cut it off",
    "start": "448080",
    "end": "454319"
  },
  {
    "text": "okay wait wait wait wait um another thing is the no go back go back the ARP",
    "start": "454319",
    "end": "460599"
  },
  {
    "text": "cache won't time out um this isn't usually a problem however in the case of the brick if you",
    "start": "460599",
    "end": "466960"
  },
  {
    "text": "fill up the table with Arps the brick will crash it gives you a life nice blue",
    "start": "466960",
    "end": "474400"
  },
  {
    "text": "screen background it's not Windows based but it'll give you a blue screen and crash it dumps",
    "start": "474400",
    "end": "480319"
  },
  {
    "text": "right there um this is supposed to be fixed so you know the vendor has been in contact with",
    "start": "480319",
    "end": "486840"
  },
  {
    "text": "us it's supposed to be fixed in the current version that's coming out right now I believe they start advertising it",
    "start": "486840",
    "end": "492440"
  },
  {
    "text": "last week so you might want to upgrade um the next example we're going",
    "start": "492440",
    "end": "500280"
  },
  {
    "text": "to use is this end router what we're talking about here is devices that run the Taos operating system Taos not the",
    "start": "500280",
    "end": "507240"
  },
  {
    "text": "max TNT this device doesn't run towels um we're talking about Maxes though",
    "start": "507240",
    "end": "513240"
  },
  {
    "text": "we're talking about the DSL Terminators the cell pipes that whole line of",
    "start": "513240",
    "end": "518599"
  },
  {
    "text": "products um the Ascend routers use an undocumented Discovery protocol um it",
    "start": "518599",
    "end": "525200"
  },
  {
    "text": "runs over the discard Port you send a specially formed packet and the device tells you who it is what it is what",
    "start": "525200",
    "end": "532080"
  },
  {
    "text": "cards it has in it if it's got IP set cards if it's got T1 cards whatever it'll give you all kinds of information",
    "start": "532080",
    "end": "538279"
  },
  {
    "text": "about it that it's listed up up there um you can also reset the IP address and the name using this",
    "start": "538279",
    "end": "545360"
  },
  {
    "text": "undocumented Discovery protocol with an SNMP WR um you just give it its new name",
    "start": "545360",
    "end": "552480"
  },
  {
    "text": "and IP address and it says thank you and changes so um that's what we consider a",
    "start": "552480",
    "end": "560200"
  },
  {
    "text": "less than ideal reaction from something that has a T1 card in",
    "start": "560200",
    "end": "566000"
  },
  {
    "text": "it next one okay HP printers we're going to move",
    "start": "566000",
    "end": "571079"
  },
  {
    "text": "on to HP printers I think everybody's seen those and everybody has them generally speaking I'm going to be",
    "start": "571079",
    "end": "576480"
  },
  {
    "text": "talking about the networked HP printers however some of this stuff applies to",
    "start": "576480",
    "end": "581519"
  },
  {
    "text": "all HP printers and some applies to other printers um I'll mention that when it",
    "start": "581519",
    "end": "587200"
  },
  {
    "text": "when it occurs um dhp Network printers you can access as most people know they have a web interface a lot of the nice",
    "start": "587200",
    "end": "592800"
  },
  {
    "text": "bigger ones have web interfaces you can surf right into them and I'm sure a lot of you have probably wondered about the security there so did we",
    "start": "592800",
    "end": "600120"
  },
  {
    "text": "um you can also taet into them you can FTP to them you can play tricks with them with SNMP Etc there are access",
    "start": "600120",
    "end": "607440"
  },
  {
    "text": "restrictions or IP based access restrictions on these devices their password set for the pgl security",
    "start": "607440",
    "end": "614320"
  },
  {
    "text": "password for example pjl is the printer job language um there is password set there there's",
    "start": "614320",
    "end": "621800"
  },
  {
    "text": "ways to restrict access via IP and there's actual admin passwords on the device using the different access",
    "start": "621800",
    "end": "628040"
  },
  {
    "text": "methods the problem that we found is these are inconsistent extremely inconsistent you can take an",
    "start": "628040",
    "end": "634959"
  },
  {
    "text": "SNMP read and snatch the web-based admin password off the device it's just in HEX",
    "start": "634959",
    "end": "642079"
  },
  {
    "text": "I think the address is up there that's that's where you've got it it's in HEX so just take the I the Via SNMP snatch",
    "start": "642079",
    "end": "649880"
  },
  {
    "text": "the webbased password once you have that you just surf to the device and you own it you just log in as as username",
    "start": "649880",
    "end": "657720"
  },
  {
    "text": "LaserJet not admin we tried that over and over and over that doesn't work the username is",
    "start": "657720",
    "end": "663399"
  },
  {
    "text": "LaserJet um once you're in you own the device you control this",
    "start": "663399",
    "end": "669480"
  },
  {
    "text": "device yeah yeah [Music] right um important here is that is that",
    "start": "677160",
    "end": "685200"
  },
  {
    "text": "you can see because of the different levels of of passwords and IP restrictions and everything",
    "start": "685200",
    "end": "690240"
  },
  {
    "text": "somebody actually thought about security and somebody thought about easy use and different ways you can get in unfortunately the the we imagine the two",
    "start": "690240",
    "end": "697440"
  },
  {
    "text": "developer groups didn't talk with one another so what you end is end up with is complex different levels of access",
    "start": "697440",
    "end": "704440"
  },
  {
    "text": "that are different from one another and one can be used to break all of",
    "start": "704440",
    "end": "709720"
  },
  {
    "text": "them okay pgl printer job language I mentioned this just a few minutes ago it",
    "start": "709720",
    "end": "715160"
  },
  {
    "text": "operates on Port 90100 and this gives you access to the configuration this is like the part where you tell it take",
    "start": "715160",
    "end": "721360"
  },
  {
    "text": "paper from tray one or print it in best quality or in cheap quality or or whatever this is what gives you that",
    "start": "721360",
    "end": "728600"
  },
  {
    "text": "access um the security for this re relies all on a on a single password the",
    "start": "728600",
    "end": "734279"
  },
  {
    "text": "password is a number between 1 and 65,535 so it'll take you about 6 hours",
    "start": "734279",
    "end": "741360"
  },
  {
    "text": "to brute fors at worst that's the worst case so that security we don't feel is",
    "start": "741360",
    "end": "747120"
  },
  {
    "text": "is is all that good go ahead okay next pjl",
    "start": "747120",
    "end": "754639"
  },
  {
    "text": "um what is this this gives you access to the actual file system on the printer",
    "start": "754639",
    "end": "760720"
  },
  {
    "text": "think of the printer now like a Unix system if you will okay it's got a file",
    "start": "760720",
    "end": "766079"
  },
  {
    "text": "system um this is where the spool jobs are kept this is where macros are kept",
    "start": "766079",
    "end": "771880"
  },
  {
    "text": "if you've got like a legal office you've got the little headers for for the letter head for everything you can",
    "start": "771880",
    "end": "777320"
  },
  {
    "text": "actually do PCL macros for that type of stuff and store that in there that's where all of this stuff is kept um in",
    "start": "777320",
    "end": "784399"
  },
  {
    "text": "the newer models of the printers there's a lot more file system content you've got your web server so you've got like web pages you've got all your content um",
    "start": "784399",
    "end": "792079"
  },
  {
    "text": "you've got all the subsystem stuff is all located there it's an actual file system that you can go into you want to",
    "start": "792079",
    "end": "798560"
  },
  {
    "text": "flip it real quick and it it is a file server using a tool that we've developed",
    "start": "798560",
    "end": "804600"
  },
  {
    "text": "this is a shot of the actual file system and you can see there's two volumes volume zero up top and then volume one",
    "start": "804600",
    "end": "812079"
  },
  {
    "text": "and you can actually see the the content there there's directories identified by a D um that was real hard to figure out",
    "start": "812079",
    "end": "818240"
  },
  {
    "text": "there's there's text files there's logs there's objects you've got subdirectories for different different",
    "start": "818240",
    "end": "823959"
  },
  {
    "text": "items the spools Down Below on a different volume",
    "start": "823959",
    "end": "830199"
  },
  {
    "text": "okay okay so we figured we've got this pjl so we'll develop a tool to make it",
    "start": "830199",
    "end": "835759"
  },
  {
    "text": "easier to use cuz tell netting in over Port 9100 and trying to figure out how to work everything is is kind of a pain",
    "start": "835759",
    "end": "841759"
  },
  {
    "text": "so we figured we make it a little bit easier some of our goals um we want to make it easy to use we want to be able",
    "start": "841759",
    "end": "848399"
  },
  {
    "text": "to read and modify all the content on on this file system um so we want full access um we",
    "start": "848399",
    "end": "856880"
  },
  {
    "text": "decided we'd add in something to to break the passwords because why should I use my laptop to break the password when",
    "start": "856880",
    "end": "862560"
  },
  {
    "text": "I can use your printer to break your own password it's easier that way",
    "start": "862560",
    "end": "868040"
  },
  {
    "text": "um you can change the messages which created a lot of frustration for the",
    "start": "868040",
    "end": "874199"
  },
  {
    "text": "company where we work at because they kept going up to the printer and it said please insert coin in the display and was flashing flashing our names instead",
    "start": "874199",
    "end": "882160"
  },
  {
    "text": "of printer ready so uh you can you can have a lot of fun with this thing so",
    "start": "882160",
    "end": "887639"
  },
  {
    "text": "that was part of the the background of this we wanted it to be easy to use um",
    "start": "887639",
    "end": "893079"
  },
  {
    "text": "one member of the group FTR he'll be speaking later at Defcon he actually wrote a guey that wraps up up this and",
    "start": "893079",
    "end": "900040"
  },
  {
    "text": "it's PFT the printer frustration tool this is the main menu here we've blocked out the IP addresses because you",
    "start": "900040",
    "end": "906279"
  },
  {
    "text": "wouldn't believe how many printers HP printers you can find on the internet if you just happen to accidentally surf",
    "start": "906279",
    "end": "911320"
  },
  {
    "text": "Port 9100 and see how many you can find out there there's a lot of printers that",
    "start": "911320",
    "end": "916639"
  },
  {
    "text": "at that high level aren't blocked um next we've got a interface to the actual",
    "start": "916639",
    "end": "924040"
  },
  {
    "text": "like a file browser if you will a Windows Explorer to make it easy like you have your exploit and you want to upload it so you want it to look like",
    "start": "924040",
    "end": "930040"
  },
  {
    "text": "Windows Explorer right so you just grab it and click and move your exploit up onto the printer device um and then",
    "start": "930040",
    "end": "935880"
  },
  {
    "text": "we've got access to the actual environment variables and this is where you can play with stuff like if the CEO sends a print job uh send it somewhere",
    "start": "935880",
    "end": "942839"
  },
  {
    "text": "else or print it in reverse colors or give the secretary 35,000 copies of every document she prints and it's good",
    "start": "942839",
    "end": "950160"
  },
  {
    "text": "way to test printer memory um okay moving on something else",
    "start": "950160",
    "end": "956160"
  },
  {
    "text": "that we picked up on chai VM chai VM is a Java virtual machine developed by hulet",
    "start": "956160",
    "end": "962560"
  },
  {
    "text": "Packard it's used not just by HP now it's used by other vendors as well um",
    "start": "962560",
    "end": "968560"
  },
  {
    "text": "this actually runs on embedded systems and it's it's a fully functional Java",
    "start": "968560",
    "end": "973880"
  },
  {
    "text": "virtual machine um we've listed some of the printers that we found it on that that run it and",
    "start": "973880",
    "end": "981000"
  },
  {
    "text": "support it fully um when it's installed on a printer like some of these ones",
    "start": "981000",
    "end": "986160"
  },
  {
    "text": "listed here it comes fully functional it comes with all the objects the populated web server the whole nine yards it's",
    "start": "986160",
    "end": "992079"
  },
  {
    "text": "really cool it's it's already loaded for you on the printer um and all of this stuff lives on that file system that we",
    "start": "992079",
    "end": "998000"
  },
  {
    "text": "showed you before it's all there and so you can like surf to it and change it whatever way you want um this is a statement from the HP",
    "start": "998000",
    "end": "1005519"
  },
  {
    "text": "website and something that we found interesting was the last three lines these appliances are powered by hpch",
    "start": "1005519",
    "end": "1012199"
  },
  {
    "text": "embedded software it doesn't say these printers it says these appliances and",
    "start": "1012199",
    "end": "1017560"
  },
  {
    "text": "some people are real proud that this this virtual machine runs on lots of different devices um we found it on a",
    "start": "1017560",
    "end": "1023759"
  },
  {
    "text": "few but we've only tested it on printers at this point um so how does it work okay first",
    "start": "1023759",
    "end": "1030640"
  },
  {
    "text": "your printer will come with a standard loader service it's called this. loader that's an actual I mean you can see it's",
    "start": "1030640",
    "end": "1035918"
  },
  {
    "text": "a web address on your printer you just go there and that's it it's this. loader that's the original one the idea was it",
    "start": "1035919",
    "end": "1042438"
  },
  {
    "text": "supposed to validate the jar signatures when when you upload stuff it didn't work real good it it's it's like really",
    "start": "1042439",
    "end": "1048558"
  },
  {
    "text": "bad and so HP developed something new and it's called easy loader this itself this easy loader is a",
    "start": "1048559",
    "end": "1056880"
  },
  {
    "text": "signed jar itself and once this is uploaded and executed on the printer you",
    "start": "1056880",
    "end": "1062240"
  },
  {
    "text": "can upload other jars without worrying about the signatures which is real important in a few minutes here um",
    "start": "1062240",
    "end": "1070160"
  },
  {
    "text": "there's that's the easy way to do it the other way is accessing through the printer itself just going",
    "start": "1070160",
    "end": "1077120"
  },
  {
    "text": "directly to the services um you see the path there that volume zero with cs config that config is",
    "start": "1077120",
    "end": "1084600"
  },
  {
    "text": "actually just a flat file that's a config file like something you'd find in the ETC directory that you can take and",
    "start": "1084600",
    "end": "1090159"
  },
  {
    "text": "play with any way you want and change it to do whatever you want um if you have a question hp's website has lots of",
    "start": "1090159",
    "end": "1096679"
  },
  {
    "text": "information they'll teach you how to how to work all that stuff and do everything you can just download it all um so the",
    "start": "1096679",
    "end": "1104000"
  },
  {
    "text": "goal getting our code onto our printer",
    "start": "1104000",
    "end": "1109400"
  },
  {
    "text": "um the first thing you have to do you've got this loader which isn't ideal we want easy loader on there so we upload",
    "start": "1109400",
    "end": "1115600"
  },
  {
    "text": "easy loader once we've got easy loader uploaded and executed we're good we can upload our",
    "start": "1115600",
    "end": "1122919"
  },
  {
    "text": "jar because it's not going to check the signatures anymore of the future jars so that's it that's all there is to",
    "start": "1122919",
    "end": "1128799"
  },
  {
    "text": "it this is the easy way the manual way if you if you don't have like the",
    "start": "1128799",
    "end": "1134440"
  },
  {
    "text": "printer frustration tool or or or an an easier way just surfing into it and up loading with the web interface that HP",
    "start": "1134440",
    "end": "1140760"
  },
  {
    "text": "has you can manually upload all your class files to the printer onto the",
    "start": "1140760",
    "end": "1146440"
  },
  {
    "text": "volume just upload them download the Cs config file that we showed modify that edit it to do whatever you want upload",
    "start": "1146440",
    "end": "1153320"
  },
  {
    "text": "it again and force the printer to reload and that's it your changes are effective so that's that's all there is",
    "start": "1153320",
    "end": "1160960"
  },
  {
    "text": "to it it's it's actually pretty simple um things that we noticed chai VM is",
    "start": "1160960",
    "end": "1166600"
  },
  {
    "text": "very unstable um if you get too many threads it just dies it just it just",
    "start": "1166600",
    "end": "1172720"
  },
  {
    "text": "dies our secretary I can't tell you how many times our secretary got a call and late in the afternoon could you please",
    "start": "1172720",
    "end": "1178679"
  },
  {
    "text": "go over and power cycle the printer again it was it was testing was really because we don't have like these huge printers at home to to play with um if",
    "start": "1178679",
    "end": "1187559"
  },
  {
    "text": "you send a connect to an unreachable host or a service that's unreachable on a port the device will also crash um it",
    "start": "1187559",
    "end": "1195880"
  },
  {
    "text": "just it just dies it doesn't always give you an exception sometimes it's just gone sometimes it'll throw an exception",
    "start": "1195880",
    "end": "1202159"
  },
  {
    "text": "and and terminate halfway decently um it it's really unstable in that respect and",
    "start": "1202159",
    "end": "1208320"
  },
  {
    "text": "we haven't been able to figure out what and we haven't been able to reproduce it",
    "start": "1208320",
    "end": "1213840"
  },
  {
    "text": "effectively um to determine why it's why it's doing what it's doing um HP has a",
    "start": "1213840",
    "end": "1221159"
  },
  {
    "text": "simulation environment which is cool that you can download it's for developers and whatnot you can go to their website or at least two weeks ago",
    "start": "1221159",
    "end": "1227280"
  },
  {
    "text": "it was still there they're probably taking it off the site right now but you can download the simulation environment",
    "start": "1227280",
    "end": "1233640"
  },
  {
    "text": "unfortunately the simulation environment doesn't work like the actual devices the devices are extremely unstable and the",
    "start": "1233640",
    "end": "1240039"
  },
  {
    "text": "simulation environment is real cool and never crashes and it's it's real nice um if you try this at home you'll need that",
    "start": "1240039",
    "end": "1246760"
  },
  {
    "text": "last line it's in your speak in your notes too that they gave you um because you'll end up having to resent the",
    "start": "1246760",
    "end": "1252000"
  },
  {
    "text": "printer quite often and that's what you need to to do to to reset the device",
    "start": "1252000",
    "end": "1257600"
  },
  {
    "text": "itself [Music] um okay so we can get code on the",
    "start": "1257600",
    "end": "1263120"
  },
  {
    "text": "printer but we didn't have any code to put on the printer that would run on an HP so we wrote some we've got a port",
    "start": "1263120",
    "end": "1271400"
  },
  {
    "text": "scanner you can upload to your printer and use your printer to port scan the network right",
    "start": "1271400",
    "end": "1277520"
  },
  {
    "text": "um it's web based to make it really easy just point and click it goes with the with the PFT tool that we wrote um chai",
    "start": "1277520",
    "end": "1284679"
  },
  {
    "text": "crack what I mentioned earlier to let the printer do the cracking for you you shouldn't have to waste your laptop CPU",
    "start": "1284679",
    "end": "1289840"
  },
  {
    "text": "power when you can use their printers to crack passwords for you um you can write your own back door servers install them",
    "start": "1289840",
    "end": "1296240"
  },
  {
    "text": "on the printer and have it sitting there listening for you um you can do anything you want",
    "start": "1296240",
    "end": "1303000"
  },
  {
    "text": "anything you can normally do in Java you can try and hey try it it's cool all you have to do you may have to reset your",
    "start": "1303000",
    "end": "1309159"
  },
  {
    "text": "printer right that's it so just try it if nothing else go over and power cycle a printer or issue a reset this is a",
    "start": "1309159",
    "end": "1316320"
  },
  {
    "text": "screenshot from the crack um tool that was developed to run on the",
    "start": "1316320",
    "end": "1322360"
  },
  {
    "text": "printers go ahead um I'm going to close it up here",
    "start": "1322360",
    "end": "1327840"
  },
  {
    "text": "one thing that we notice is that all these chai Services trust each other they're they're all interrelated",
    "start": "1327840",
    "end": "1334400"
  },
  {
    "text": "and they they they fully trust each other and it's real scary because there's a lot of other services that HP",
    "start": "1334400",
    "end": "1340679"
  },
  {
    "text": "has we've listed a few of them here um there's a neat um service it will",
    "start": "1340679",
    "end": "1348720"
  },
  {
    "text": "notify you when something interesting happens like the CEO is there after 6:00 and sends a print job cool I want to",
    "start": "1348720",
    "end": "1354039"
  },
  {
    "text": "know about that cuz like if maybe the company's not do doing good that could have serious effect and it'll notify you",
    "start": "1354039",
    "end": "1360520"
  },
  {
    "text": "it can like send you an email which is a neat function um",
    "start": "1360520",
    "end": "1365960"
  },
  {
    "text": "another email function that we found extremely scary is the last one there that you see this uh chai mail it's",
    "start": "1365960",
    "end": "1372520"
  },
  {
    "text": "specifically designed to to work effectively with firewalls your printer will p pull a pop",
    "start": "1372520",
    "end": "1379039"
  },
  {
    "text": "mail account outside the firewall you get into your printer you configure it to pull your Pop Mail account and then",
    "start": "1379039",
    "end": "1385480"
  },
  {
    "text": "you send your Pop Mail account p uh commands you is your commands to your your printer by sending mail to an",
    "start": "1385480",
    "end": "1392240"
  },
  {
    "text": "account outside the firewall the printer checks mail finds a command and executes it w which is real cool um this is it",
    "start": "1392240",
    "end": "1402880"
  },
  {
    "text": "it you really need to pay attention to layered security this is where where where those people that really have",
    "start": "1402880",
    "end": "1409039"
  },
  {
    "text": "heavy layered Security will do better than the rest of the people because it it goes right",
    "start": "1409039",
    "end": "1415520"
  },
  {
    "text": "through the firewall okay um if you want the source",
    "start": "1415520",
    "end": "1421120"
  },
  {
    "text": "it it is open source of course if you want the source or any of the tools they're available at that",
    "start": "1421120",
    "end": "1426559"
  },
  {
    "text": "URL um there's no links right now I don't think on the website but if you go to",
    "start": "1426559",
    "end": "1431880"
  },
  {
    "text": "that URL you'll find the stuff it's it's live there on the website now and with that I'm going to turn it over to FX and",
    "start": "1431880",
    "end": "1438480"
  },
  {
    "text": "he's going to go in deeper now into some of the issues related to software okay thank",
    "start": "1438480",
    "end": "1444870"
  },
  {
    "text": "[Applause] you you burn too much 20 minutes",
    "start": "1444870",
    "end": "1451880"
  },
  {
    "text": "yeah okay so after the fun part we're going to be bit more serious in software",
    "start": "1451880",
    "end": "1458480"
  },
  {
    "text": "vulnerabilities um let's talk a little bit about it some um actually the same",
    "start": "1458480",
    "end": "1464760"
  },
  {
    "text": "classes of vulnerabilities are found in embedded systems that you usually defined in normal operating systems of",
    "start": "1464760",
    "end": "1471880"
  },
  {
    "text": "course you have the classic input validation issues um I personally saw",
    "start": "1471880",
    "end": "1477600"
  },
  {
    "text": "format string issues in like next to every embedded system that does logging",
    "start": "1477600",
    "end": "1482960"
  },
  {
    "text": "um buffer overflows are real common and of course they were shown on back trck several times um got released and yes",
    "start": "1482960",
    "end": "1491480"
  },
  {
    "text": "you can do cross-site scripting on embedded systems actually the HP printers we just talked about are",
    "start": "1491480",
    "end": "1496679"
  },
  {
    "text": "affected you can do cross-site scripting on them scary is most of the embedded HTTP",
    "start": "1496679",
    "end": "1502799"
  },
  {
    "text": "demons I played with have vulnerabilities and that's all simple stuff like over long Uris and like um",
    "start": "1502799",
    "end": "1510440"
  },
  {
    "text": "long CGI parameters that just crashed the device and because of embedded",
    "start": "1510440",
    "end": "1517120"
  },
  {
    "text": "systems being normally a bit smaller than normal computers um Engineers try to save every bite and that's normally",
    "start": "1517120",
    "end": "1524520"
  },
  {
    "text": "deciding against additional security or sanity checks so um here are some",
    "start": "1524520",
    "end": "1531720"
  },
  {
    "text": "examples of buffer overflows we found um first the zidia routers today called",
    "start": "1531720",
    "end": "1536799"
  },
  {
    "text": "locen access points is one example of these vulnerable HTTP demons it's an excellent router actually I really like",
    "start": "1536799",
    "end": "1543799"
  },
  {
    "text": "it but if you like go there and do a get request with like 4,000 characters it just dies so that's not real good um the",
    "start": "1543799",
    "end": "1553520"
  },
  {
    "text": "brother Network printers um they have a comparable issue that basically you have",
    "start": "1553520",
    "end": "1559520"
  },
  {
    "text": "the web interface and it asks you for a password you put in like some 100 characters and the printer",
    "start": "1559520",
    "end": "1566399"
  },
  {
    "text": "crashes HP Pro switch have a neat little issue with SNMP stuff because um",
    "start": "1566399",
    "end": "1573000"
  },
  {
    "text": "normally you can do a lot of stuff with SNMP ride but um if you put in that",
    "start": "1573000",
    "end": "1578279"
  },
  {
    "text": "specific variable over here like 85 characters the device doesn't crash right now it crashes next time the admin",
    "start": "1578279",
    "end": "1585200"
  },
  {
    "text": "tries to access it that's pretty neat and even totally small devices with the",
    "start": "1585200",
    "end": "1592960"
  },
  {
    "text": "size of a cigarette pack um for all these non-smoking Americans that's the size of a cigarette pack um even these W",
    "start": "1592960",
    "end": "1600320"
  },
  {
    "text": "have today like web service and all kinds of stuff and even these are vulnerable to totally simple overflow",
    "start": "1600320",
    "end": "1607200"
  },
  {
    "text": "attacks um that's that strange German um print device we're talking about and",
    "start": "1607200",
    "end": "1612559"
  },
  {
    "text": "it's pretty nice because it hangs off the printer centronics port and as soon as that device crashes um your printer",
    "start": "1612559",
    "end": "1620080"
  },
  {
    "text": "crashes common misconceptions when it comes to exploitation of embedded systems well um",
    "start": "1620080",
    "end": "1628799"
  },
  {
    "text": "most people think it's harder to do than a multipurpose operating system and um",
    "start": "1628799",
    "end": "1634919"
  },
  {
    "text": "yeah you don't have like the classic concept of a shell so what are you going to do with your code even if you get it",
    "start": "1634919",
    "end": "1641320"
  },
  {
    "text": "running on the system you don't know how that all works internally you don't know where the",
    "start": "1641320",
    "end": "1646640"
  },
  {
    "text": "chips are you don't know what s CS are that's always a problem and anyway I",
    "start": "1646640",
    "end": "1652520"
  },
  {
    "text": "mean the worst thing that can happen is like your device crashes",
    "start": "1652520",
    "end": "1659200"
  },
  {
    "text": "well well we would like to show that this is not a good reason none of it um",
    "start": "1659200",
    "end": "1666000"
  },
  {
    "text": "to yeah not try it and you might even be successful as an example we pick the",
    "start": "1666000",
    "end": "1672480"
  },
  {
    "text": "Cisco inter Network operating system or iOS um running on The Cisco routers",
    "start": "1672480",
    "end": "1679399"
  },
  {
    "text": "the goal here is actually that you have a single vulnerability and the goal is to show that actually a single",
    "start": "1679399",
    "end": "1685519"
  },
  {
    "text": "vulnerability can indeed lead to full exploitation of the device so some general things we have to",
    "start": "1685519",
    "end": "1692000"
  },
  {
    "text": "keep in mind here first the world thing is one big piece of software so as soon as something feels unhappy it going to",
    "start": "1692000",
    "end": "1699120"
  },
  {
    "text": "crash and everyone who has Cisco routers knows that the iOS is aable for all kinds of different platforms so we",
    "start": "1699120",
    "end": "1706120"
  },
  {
    "text": "should look into something that's General that applies to like all of them",
    "start": "1706120",
    "end": "1711880"
  },
  {
    "text": "and of course it's not open source so you can't just like serve to ios. sourceforge.net and check out how it",
    "start": "1711880",
    "end": "1718760"
  },
  {
    "text": "looks like um you have to do that bit",
    "start": "1718760",
    "end": "1724559"
  },
  {
    "text": "different so according to Cisco the by far most common problem in iOS is",
    "start": "1724840",
    "end": "1730480"
  },
  {
    "text": "related to memory Corruptions that's how they say that so why there many",
    "start": "1730480",
    "end": "1736799"
  },
  {
    "text": "different ways of memory eruptions um we can safely assume that a vulnerability with something put in that's too big um",
    "start": "1736799",
    "end": "1745279"
  },
  {
    "text": "is probably the characteristic of a heap overflow so well of course you always",
    "start": "1745279",
    "end": "1751000"
  },
  {
    "text": "need the vulnerability to research something like that and yeah so we",
    "start": "1751000",
    "end": "1756039"
  },
  {
    "text": "figured we use that tfdp one here um it's not widely used so initial exposure",
    "start": "1756039",
    "end": "1761960"
  },
  {
    "text": "should be minimal the issue here if you go tftp server on iOS and you request a file and",
    "start": "1761960",
    "end": "1769880"
  },
  {
    "text": "you have like a huge file name it crashes and that's down here",
    "start": "1769880",
    "end": "1775000"
  },
  {
    "text": "unfortunately I can't laser point um that's basically one snap of what's shown on the console when it crashes so",
    "start": "1775000",
    "end": "1783159"
  },
  {
    "text": "let's just check out what we can do with that oh yeah that's fun part um The",
    "start": "1783159",
    "end": "1790039"
  },
  {
    "text": "Cisco tftp advisory by the way not having any credits for us um just to",
    "start": "1790039",
    "end": "1796919"
  },
  {
    "text": "quote that even they think the worst thing that can happen is your Cisco crashes",
    "start": "1796919",
    "end": "1803120"
  },
  {
    "text": "well understanding the memory layout um with a huge chunk of binary",
    "start": "1803120",
    "end": "1809679"
  },
  {
    "text": "data like the iOS images you can just like disassemble it and of course that",
    "start": "1809679",
    "end": "1815159"
  },
  {
    "text": "would be illegal and we don't want to do that so um what you do is one way is you",
    "start": "1815159",
    "end": "1822480"
  },
  {
    "text": "put debug output memory dumps and core files together and um yeah other sources",
    "start": "1822480",
    "end": "1830320"
  },
  {
    "text": "of information as Cisco's troubleshooting web pages and yeah from the crash output of the console we",
    "start": "1830320",
    "end": "1837600"
  },
  {
    "text": "showed before we can already see something quite interesting we have a",
    "start": "1837600",
    "end": "1843519"
  },
  {
    "text": "block Magic that like tells you okay here Begins the memory block um this two",
    "start": "1843519",
    "end": "1849360"
  },
  {
    "text": "over here is probably the process idea of the thing that died then another pointer block higher up in memory um",
    "start": "1849360",
    "end": "1858720"
  },
  {
    "text": "that actually if you look at that memory place also has that block Magic it's probably the next block",
    "start": "1858720",
    "end": "1866200"
  },
  {
    "text": "so the following is probably the previous block good assumption and then",
    "start": "1866200",
    "end": "1871760"
  },
  {
    "text": "we have that size field over here um that has a quite funny most significant",
    "start": "1871760",
    "end": "1877480"
  },
  {
    "text": "bit set and so educated gas is that this most significant bit is used for like",
    "start": "1877480",
    "end": "1884360"
  },
  {
    "text": "this memory block is in use so to make sense of it um we have to",
    "start": "1884360",
    "end": "1891960"
  },
  {
    "text": "check the memory addresses commonly used in the devices again we serve to Cisco's web page and um we use some normal",
    "start": "1891960",
    "end": "1900399"
  },
  {
    "text": "commands like show proc CPU show M allocating process stuff like that and",
    "start": "1900399",
    "end": "1905679"
  },
  {
    "text": "one can easily validate that these are correct or not and of course the most interesting part for us is the nvram",
    "start": "1905679",
    "end": "1912679"
  },
  {
    "text": "address because that's where the juicy part is stored",
    "start": "1912679",
    "end": "1918440"
  },
  {
    "text": "so what we know so far is this we have that magic number as described on The Cisco web page we have the P ID some",
    "start": "1918440",
    "end": "1926080"
  },
  {
    "text": "pointers we don't actually know what they are used for um the address of the string used um for show M allocating",
    "start": "1926080",
    "end": "1933880"
  },
  {
    "text": "process the next pointer the previous pointer the size field with that assumed",
    "start": "1933880",
    "end": "1939000"
  },
  {
    "text": "usage bit um a field called R fcnt for me that sounds like reference count and",
    "start": "1939000",
    "end": "1946760"
  },
  {
    "text": "of course the red zone um which is used as a canery and yeah to check if you actually have memory",
    "start": "1946760",
    "end": "1955600"
  },
  {
    "text": "problems now here's what we plan to do we filled a memory block that is used to",
    "start": "1956080",
    "end": "1961799"
  },
  {
    "text": "store our legitimate data and since we're literally sitting in there um we call it the host block he's friendly to",
    "start": "1961799",
    "end": "1968960"
  },
  {
    "text": "host us um we pend the made up block header to it and write this one over the",
    "start": "1968960",
    "end": "1976240"
  },
  {
    "text": "original block header of the next block and that's how it is supposed to work",
    "start": "1976240",
    "end": "1981880"
  },
  {
    "text": "now we try to make iOS use this Header information and hope for something that has a comparable Behavior to like Malo",
    "start": "1981880",
    "end": "1989200"
  },
  {
    "text": "free exploits on line the desired result of course is writing to arbitrary memory",
    "start": "1989200",
    "end": "1997278"
  },
  {
    "text": "addresses during our research we found the following about these blocks when",
    "start": "1998559",
    "end": "2004120"
  },
  {
    "text": "iOS free memory block the element is removed from it's from a linked list so",
    "start": "2004120",
    "end": "2010600"
  },
  {
    "text": "actually there is a pointer exchange taking place over here and that's",
    "start": "2010600",
    "end": "2015919"
  },
  {
    "text": "basically how it looks like the previous next pointer um now points to the next",
    "start": "2015919",
    "end": "2022159"
  },
  {
    "text": "memory block and the next previous pointer um points to the next pointer of",
    "start": "2022159",
    "end": "2028799"
  },
  {
    "text": "the previous block basically I think the the graphic is way better than my explanation um this is basically what we",
    "start": "2028799",
    "end": "2036440"
  },
  {
    "text": "are looking for so so um yeah maybe we can use that for",
    "start": "2036440",
    "end": "2041679"
  },
  {
    "text": "something now to some tricky part that really required some time um find out what is required what does iOS really",
    "start": "2041679",
    "end": "2049240"
  },
  {
    "text": "check um the magic is checked the P ID and these strange other memory addresses",
    "start": "2049240",
    "end": "2055398"
  },
  {
    "text": "are not surprisingly the next pointer is not checked um the previous pointer on the",
    "start": "2055399",
    "end": "2063118"
  },
  {
    "text": "other hand has to be 100% correct this I field um is checked and",
    "start": "2063119",
    "end": "2070919"
  },
  {
    "text": "should not contain any bogus values like huge values or something then of course",
    "start": "2070919",
    "end": "2076638"
  },
  {
    "text": "iOS will not like it and of course that red zone is checked because that's what it is",
    "start": "2076639",
    "end": "2082520"
  },
  {
    "text": "for so question is what's checking that there is a process on iOS called check",
    "start": "2082520",
    "end": "2088520"
  },
  {
    "text": "heaps which actually makes sure that everything still looks the way it should be and if not um you just hit a software",
    "start": "2088520",
    "end": "2096118"
  },
  {
    "text": "forced crash so on top of that for these fields um some of them are actually",
    "start": "2096119",
    "end": "2102119"
  },
  {
    "text": "checked during allocation and freeing for of memory blocks so if unhappy iOS",
    "start": "2102119",
    "end": "2107800"
  },
  {
    "text": "crashes usually Behavior but hey I mean from that picture uh we can overflow up",
    "start": "2107800",
    "end": "2114320"
  },
  {
    "text": "to the next pointer actually and so we can influence one of two pointers using",
    "start": "2114320",
    "end": "2120400"
  },
  {
    "text": "in a pointer exchange which leads us to the next slide let's take the first victim Cisco",
    "start": "2120400",
    "end": "2129599"
  },
  {
    "text": "2500 allows direct rights to the NV RAM memory which is quite",
    "start": "2129599",
    "end": "2135359"
  },
  {
    "text": "nice we simply place the address of the NV Ram in an X pointer um doing the",
    "start": "2135359",
    "end": "2141440"
  },
  {
    "text": "Overflow and since we're doing a spring overflow we don't actually append these",
    "start": "2141440",
    "end": "2147119"
  },
  {
    "text": "red zeros over there um and the last two bites are just what's left over from the",
    "start": "2147119",
    "end": "2152880"
  },
  {
    "text": "old pointer so we just hope it's not a high number and yeah for the pointer",
    "start": "2152880",
    "end": "2158359"
  },
  {
    "text": "exchange it takes place the link list removal takes place and this unknown",
    "start": "2158359",
    "end": "2164240"
  },
  {
    "text": "previous pointer is directly written into the NV Ram which has a nice effect because what",
    "start": "2164240",
    "end": "2172160"
  },
  {
    "text": "happens is this we sent that little fake block thing over there um then the nvam",
    "start": "2172160",
    "end": "2180240"
  },
  {
    "text": "checkon is no longer valid so um first it figures oops memory problem reboots",
    "start": "2180240",
    "end": "2188280"
  },
  {
    "text": "um after the reboot it realizes oops and vram no longer valid so it goes out asks",
    "start": "2188280",
    "end": "2194319"
  },
  {
    "text": "on the network for a configuration and of course we're going to happily provide",
    "start": "2194319",
    "end": "2199440"
  },
  {
    "text": "one here we go you just own the Cisco router let's review what we have done",
    "start": "2199440",
    "end": "2206240"
  },
  {
    "text": "here um we've used the buffer overflow and a fairly common method I mean that's not black magic um to invalidate the NV",
    "start": "2206240",
    "end": "2214160"
  },
  {
    "text": "Ram so the attack has some disadvantages of for the N vrm is only directly viable",
    "start": "2214160",
    "end": "2219880"
  },
  {
    "text": "on the 2500 and of course the attacker has to be in the same subnet to provide that",
    "start": "2219880",
    "end": "2226160"
  },
  {
    "text": "config um or of course own the tftp server um but the attack has also some",
    "start": "2226160",
    "end": "2233359"
  },
  {
    "text": "advantages you don't need any specific knowledge other than the Overflow length um everything else is well known and a",
    "start": "2233359",
    "end": "2240480"
  },
  {
    "text": "techer doesn't need Shell Code at all I mean there are no limitations um on what to do and the config can be as big as",
    "start": "2240480",
    "end": "2247599"
  },
  {
    "text": "you want so far so good so of course um if you feel like it you",
    "start": "2247599",
    "end": "2253880"
  },
  {
    "text": "can use that as a nice permanent remote Deni of service attack but who wants to do that",
    "start": "2253880",
    "end": "2261040"
  },
  {
    "text": "anyway okay to get us any further um we have to deal with this previous pointer issue the iOS detects the memory issues",
    "start": "2261040",
    "end": "2268400"
  },
  {
    "text": "when checking our host block not the one we have writing on so to test um the test seems to check",
    "start": "2268400",
    "end": "2276680"
  },
  {
    "text": "if the previous pointer of the next block points back to where iOS obtained its address from in the first",
    "start": "2276680",
    "end": "2284400"
  },
  {
    "text": "place this is hard to come by but what we can do is we can put the system in a",
    "start": "2284400",
    "end": "2289520"
  },
  {
    "text": "fairly predictable state by crashing it once so after the reboot it is fairly",
    "start": "2289520",
    "end": "2296079"
  },
  {
    "text": "predictable um and if we can get hold of some crash information sent to a cslog",
    "start": "2296079",
    "end": "2301240"
  },
  {
    "text": "host like by means of interception protocol based attacks or just owning the SS loog host itself",
    "start": "2301240",
    "end": "2308280"
  },
  {
    "text": "um we can actually get these pointer values so we are safe on that",
    "start": "2308280",
    "end": "2313359"
  },
  {
    "text": "side in another issue we're facing for exploitation of other Cisco devices is",
    "start": "2314200",
    "end": "2320560"
  },
  {
    "text": "that size field um that bit 31 marks usage or no usage as we already figured",
    "start": "2320560",
    "end": "2328280"
  },
  {
    "text": "out these zero bytes in there prevent us from using the real or close to real",
    "start": "2328280",
    "end": "2333839"
  },
  {
    "text": "value values because we're doing a string overflow and everyone knows zero bytes and a string are really",
    "start": "2333839",
    "end": "2340520"
  },
  {
    "text": "bad but um if we take the minimum value for the use block um we had a fairly",
    "start": "2340520",
    "end": "2347440"
  },
  {
    "text": "High number this one over here and it doesn't really make sense to iOS so iOS",
    "start": "2347440",
    "end": "2352960"
  },
  {
    "text": "will about it but funny enough if we put that 7 FFF stuff in there iOS",
    "start": "2352960",
    "end": "2360560"
  },
  {
    "text": "does not complain obviously some 32bit calculation is used here and yeah",
    "start": "2360560",
    "end": "2366520"
  },
  {
    "text": "everything is fine now now so we got rid of that one since that sze field trick um",
    "start": "2366520",
    "end": "2374760"
  },
  {
    "text": "doesn't have the most significant bit set um we should look a bit into the",
    "start": "2374760",
    "end": "2380240"
  },
  {
    "text": "free blocks because that's what we are claiming to be a free Block so after the already discussed overhead there is some",
    "start": "2380240",
    "end": "2387079"
  },
  {
    "text": "more um for free memory addresses there is another magic called",
    "start": "2387079",
    "end": "2392880"
  },
  {
    "text": "Dead beef um another address in codespace somewhere p in more padding",
    "start": "2392880",
    "end": "2399160"
  },
  {
    "text": "talk about effective coding um another next pointer we call it the free NEX",
    "start": "2399160",
    "end": "2404359"
  },
  {
    "text": "pointer since it's only existing in free blocks and another previous pointer",
    "start": "2404359",
    "end": "2409640"
  },
  {
    "text": "which we obviously called free pref these two pointers point at other",
    "start": "2409640",
    "end": "2414880"
  },
  {
    "text": "blocks that are free so one can suspect they're used the same way as the previously discussed um next and",
    "start": "2414880",
    "end": "2420760"
  },
  {
    "text": "previous pointers um just in a linked list for some memory organization and",
    "start": "2420760",
    "end": "2426720"
  },
  {
    "text": "stuff so hey like we were asking for it these",
    "start": "2426720",
    "end": "2431880"
  },
  {
    "text": "two pointers are not checked at all so a pointer exchange similar to the one we",
    "start": "2431880",
    "end": "2436920"
  },
  {
    "text": "had before takes place um that one is probably used to merge",
    "start": "2436920",
    "end": "2442680"
  },
  {
    "text": "free blocks but yeah who cares the value of the free next is written directly to",
    "start": "2442680",
    "end": "2448280"
  },
  {
    "text": "the place free previous is pointing to um the value of free previous is written",
    "start": "2448280",
    "end": "2453640"
  },
  {
    "text": "to where um free next plus 20 bytes is pointing to so here's our way to write arbitrary",
    "start": "2453640",
    "end": "2460560"
  },
  {
    "text": "pointers to arbitrary memory addresses in iOS of course it is required that both",
    "start": "2460560",
    "end": "2466680"
  },
  {
    "text": "values also represent varable um memory otherwise you hit exis errors or",
    "start": "2466680",
    "end": "2474440"
  },
  {
    "text": "right protect errors how does that come from",
    "start": "2474440",
    "end": "2480400"
  },
  {
    "text": "okay so let's go on so where could we put these pointers I mean we need like a",
    "start": "2480480",
    "end": "2487040"
  },
  {
    "text": "good place to put them um there is a memory block in every iOS that's called",
    "start": "2487040",
    "end": "2493119"
  },
  {
    "text": "process array hello it is an obvious array of memory addresses and has",
    "start": "2493119",
    "end": "2499040"
  },
  {
    "text": "exactly the same number of elements as you have number of processes on your device H each address has some kind of",
    "start": "2499040",
    "end": "2507440"
  },
  {
    "text": "process record sitting in it's like a huge block of data um and contains all",
    "start": "2507440",
    "end": "2513640"
  },
  {
    "text": "kinds of values but the first value in that block um is the same thing you see",
    "start": "2513640",
    "end": "2519800"
  },
  {
    "text": "when you do show memory allocating process um that stays out and says process stack uhhuh so the second value",
    "start": "2519800",
    "end": "2528520"
  },
  {
    "text": "actually is inside that block so the assumption is pretty good the second value is the stack",
    "start": "2528520",
    "end": "2534079"
  },
  {
    "text": "pointer these values do not change per iOS image so if you have an iOS image",
    "start": "2534079",
    "end": "2540760"
  },
  {
    "text": "these pointers these addresses will be static",
    "start": "2540760",
    "end": "2546119"
  },
  {
    "text": "perfect now we have some pretty good idea where to put these pointers we use in a pointer exchange so",
    "start": "2546119",
    "end": "2553680"
  },
  {
    "text": "what we do obviously we take the processor the memory management using",
    "start": "2553680",
    "end": "2558720"
  },
  {
    "text": "our pointers um is allowed to write to the stack good the stack contains the",
    "start": "2558720",
    "end": "2564839"
  },
  {
    "text": "saved stack pointer thank you the stack also contains the return address",
    "start": "2564839",
    "end": "2572920"
  },
  {
    "text": "excellent we can use I mean now we have like huge list of choices we can use the",
    "start": "2575200",
    "end": "2581720"
  },
  {
    "text": "stack of the process um that's currently not active or not very active but",
    "start": "2581720",
    "end": "2587839"
  },
  {
    "text": "hopefully becomes active in the future and we just hit the return address right away and take the CPU or we override the",
    "start": "2587839",
    "end": "2596200"
  },
  {
    "text": "stack pointer on the stack and provide a new stack we overwrite the stack pointer",
    "start": "2596200",
    "end": "2601760"
  },
  {
    "text": "and or the ST segment in a process block or we right away over write the process",
    "start": "2601760",
    "end": "2608520"
  },
  {
    "text": "array entry and create like a total new um process record with all the",
    "start": "2608520",
    "end": "2613680"
  },
  {
    "text": "information in it unfortunately we don't really know what to put in",
    "start": "2613680",
    "end": "2618760"
  },
  {
    "text": "there so well at this point um we got some more problems",
    "start": "2618760",
    "end": "2625559"
  },
  {
    "text": "unfortunately when we do our overflow um a free which we are using here actually",
    "start": "2625920",
    "end": "2633599"
  },
  {
    "text": "cleans the memory it's freeing oops so that's not a place to leave buffer code",
    "start": "2633599",
    "end": "2639680"
  },
  {
    "text": "or anything else but the content of the fake block we're providing is considered",
    "start": "2639680",
    "end": "2645599"
  },
  {
    "text": "already clean so here's where the exploit buffer is and the best is for a",
    "start": "2645599",
    "end": "2652839"
  },
  {
    "text": "specific vulnerability this offset is",
    "start": "2652839",
    "end": "2658079"
  },
  {
    "text": "static so taking all these little facts together we came up with an example for the Cisco 1600 series it runs on a um",
    "start": "2659119",
    "end": "2667520"
  },
  {
    "text": "Motorola CPU which really got me because I didn't know about Motorola assembly",
    "start": "2667520",
    "end": "2673200"
  },
  {
    "text": "before at all um this CPU supports R protected memory that is the reason why",
    "start": "2673200",
    "end": "2679880"
  },
  {
    "text": "we can just put the NV Ram address in the next pointer and do that local",
    "start": "2679880",
    "end": "2685680"
  },
  {
    "text": "attack um but this protection according to the",
    "start": "2685680",
    "end": "2691280"
  },
  {
    "text": "Motorola manual um is actually set in some base register and we found that",
    "start": "2691280",
    "end": "2696640"
  },
  {
    "text": "base register at the address you're seeing here on the third Point um only",
    "start": "2696640",
    "end": "2702640"
  },
  {
    "text": "thing we have to do is we modifi bid one to be zero instead of one which means",
    "start": "2702640",
    "end": "2707880"
  },
  {
    "text": "not right protected um and MVM is no longer right protected then and we just",
    "start": "2707880",
    "end": "2713839"
  },
  {
    "text": "write some crap in there this is basically how the share",
    "start": "2713839",
    "end": "2719280"
  },
  {
    "text": "code looks like if you want to call it share Cod you see it's fairly small",
    "start": "2719280",
    "end": "2725359"
  },
  {
    "text": "um the first two lines WR enable the nvram the next two lines trick the nvram",
    "start": "2725359",
    "end": "2732400"
  },
  {
    "text": "address which is um Oxo e and a bunch of zeros which is bad for the Overflow um",
    "start": "2732400",
    "end": "2739280"
  },
  {
    "text": "into the A1 register um and the last line writes something into the NV Ram now um we did",
    "start": "2739280",
    "end": "2747319"
  },
  {
    "text": "the more complicated approach by um put in the pointers this way that um",
    "start": "2747319",
    "end": "2754359"
  },
  {
    "text": "the free actually would write into our shell code um the line that funny move",
    "start": "2754359",
    "end": "2761640"
  },
  {
    "text": "over there that goes to D1 um is actually the place where the second",
    "start": "2761640",
    "end": "2766760"
  },
  {
    "text": "pointer is going to be stored and I just wanted to show um how to do that and how",
    "start": "2766760",
    "end": "2772760"
  },
  {
    "text": "to get rid of some data written directly into your exploit code um you just have",
    "start": "2772760",
    "end": "2777839"
  },
  {
    "text": "some up code which uses that as an argument and do some innocent thing with",
    "start": "2777839",
    "end": "2784280"
  },
  {
    "text": "it to summarize it that's that's how you get to 1600 um you overflow once so it",
    "start": "2784680",
    "end": "2791880"
  },
  {
    "text": "reboots you overflow again this time with the correct previous pointer this is a hard part um that funny size field",
    "start": "2791880",
    "end": "2800520"
  },
  {
    "text": "um the pointer FreeX pointing to your code the pointer free preview pointing",
    "start": "2800520",
    "end": "2805599"
  },
  {
    "text": "to the return address of some process on a stack for example what we use is like um the load meter process because it's",
    "start": "2805599",
    "end": "2812440"
  },
  {
    "text": "nice it's kicked off once a minute um and you just put your code in",
    "start": "2812440",
    "end": "2817680"
  },
  {
    "text": "a buffer to unlock the NV Ram basically that's what you get it goes like ouch",
    "start": "2817680",
    "end": "2825319"
  },
  {
    "text": "crashs reboots um figures and vram invalid cries for help and you provide",
    "start": "2825319",
    "end": "2833480"
  },
  {
    "text": "[Applause]",
    "start": "2835150",
    "end": "2842599"
  },
  {
    "text": "it okay to go further actually we need need some more info on iOS that's not",
    "start": "2842599",
    "end": "2849640"
  },
  {
    "text": "well known it uses some kind of Cooperative multitasking actually it looks more like",
    "start": "2849640",
    "end": "2856839"
  },
  {
    "text": "a huge program um that kicks off parts of it um using interrupts all the time",
    "start": "2856839",
    "end": "2863480"
  },
  {
    "text": "it really relies on interrupts um and this nvram checkm that's always invalid",
    "start": "2863480",
    "end": "2869480"
  },
  {
    "text": "when when the device reboots um is actually a 16bit checkum a once",
    "start": "2869480",
    "end": "2875040"
  },
  {
    "text": "complement checkum as found in I P so it's not too hard to calculate that one it also contains like the size of the",
    "start": "2875040",
    "end": "2882400"
  },
  {
    "text": "config and information on why the system crashed last time including stack traces",
    "start": "2882400",
    "end": "2887640"
  },
  {
    "text": "and all kinds of stuff so the config is basically a long string for iOS it's",
    "start": "2887640",
    "end": "2894240"
  },
  {
    "text": "terminated by that well-known end keyword and a zerobyte and that's pretty much",
    "start": "2894240",
    "end": "2901960"
  },
  {
    "text": "it so equipped with all that information we can just as well write a Shell Code",
    "start": "2902160",
    "end": "2907920"
  },
  {
    "text": "that enables us to take remote devices all we have to do is carry the",
    "start": "2907920",
    "end": "2913680"
  },
  {
    "text": "config with us in the backpack of the Shell Code we disable the interrupt so",
    "start": "2913680",
    "end": "2919200"
  },
  {
    "text": "nobody interrupts us we unprotect nvram calculate the nvram checkm the new one",
    "start": "2919200",
    "end": "2926400"
  },
  {
    "text": "and just write the config and just to be nice we do a clean reset of the device",
    "start": "2926400",
    "end": "2933480"
  },
  {
    "text": "afterwards so we have these typical Shell Code issues here first of all",
    "start": "2933480",
    "end": "2939040"
  },
  {
    "text": "these annoying zerob bytes uh we basically took the total classic approach of self modifying code um the",
    "start": "2939040",
    "end": "2946400"
  },
  {
    "text": "poot strap code does not contain any zerob bytes um and basically decodes the",
    "start": "2946400",
    "end": "2952960"
  },
  {
    "text": "rest of the code and the config and for this particular vulnerability you shouldn't use the classic um checker",
    "start": "2952960",
    "end": "2960799"
  },
  {
    "text": "board um 55 hex um pattern because that creates some colons and and Colones are",
    "start": "2960799",
    "end": "2967559"
  },
  {
    "text": "used as separation in the tftp fin and that screws your exploit",
    "start": "2967559",
    "end": "2974799"
  },
  {
    "text": "[Music] um back in game so we got around that",
    "start": "2981810",
    "end": "2989839"
  },
  {
    "text": "annoyance um we have another one because these NV",
    "start": "2989839",
    "end": "2995720"
  },
  {
    "text": "RAM chips aren't really fast I mean they're real slow you can't just write a big bunch of data to it and the manual",
    "start": "2995720",
    "end": "3003440"
  },
  {
    "text": "for that funny one here we found in the 1600 after unscrewing it and finding the right ship um is actually saying you",
    "start": "3003440",
    "end": "3012440"
  },
  {
    "text": "should keep the address line straight and pull that data register that tells you if the data is actually written or",
    "start": "3012440",
    "end": "3018920"
  },
  {
    "text": "not but hey I don't know where that is and um you can just as well do the",
    "start": "3018920",
    "end": "3025520"
  },
  {
    "text": "simple solution and delay after write and just figure out a good number for it",
    "start": "3025520",
    "end": "3031280"
  },
  {
    "text": "and that's what we did so this is how it finally looks like um you have your overflow you have the",
    "start": "3031280",
    "end": "3039119"
  },
  {
    "text": "fake block bootstrap code exort code new config um for the code we release you",
    "start": "3039119",
    "end": "3046119"
  },
  {
    "text": "just specify the IP address and um a new config file in the command line um add a",
    "start": "3046119",
    "end": "3052040"
  },
  {
    "text": "good previous Point while you fire it off and yeah you have your new comp config uploaded to the",
    "start": "3052040",
    "end": "3058400"
  },
  {
    "text": "router that's basically how that looks you see no more crying for help it just",
    "start": "3058400",
    "end": "3063599"
  },
  {
    "text": "did a clean reboot all happy about it um you see the new config was a bit smaller",
    "start": "3063599",
    "end": "3069640"
  },
  {
    "text": "because yeah it is all surprised to find a BRI interface on a 1600 and yeah then you just tet to it",
    "start": "3069640",
    "end": "3077960"
  },
  {
    "text": "and of course you provided a password so there's your [Music]",
    "start": "3077960",
    "end": "3083610"
  },
  {
    "text": "[Applause] router [Music] [Applause]",
    "start": "3083610",
    "end": "3090079"
  },
  {
    "text": "so here's some simple snipplet from the code actually that's the fake block we're using here um it looks horrible",
    "start": "3090079",
    "end": "3097559"
  },
  {
    "text": "but it's not if you look at it like three times you actually know how that works um it has that Red Zone over here",
    "start": "3097559",
    "end": "3105960"
  },
  {
    "text": "to terminate the last block have the M magic um have some P it's never checked",
    "start": "3105960",
    "end": "3112720"
  },
  {
    "text": "um next and previous pointer don't really matter here um you have that funny size field again and all kinds of",
    "start": "3112720",
    "end": "3119839"
  },
  {
    "text": "stuff and at the end you have the two pointers um that point to code and stack um that's a snipplet of the code",
    "start": "3119839",
    "end": "3126760"
  },
  {
    "text": "that's actually the part that decodes um everything behind it so that's the self modification part it has again some self",
    "start": "3126760",
    "end": "3134880"
  },
  {
    "text": "modification in the self modification code um because unfortunately the branch op code for Motorola does contain zero",
    "start": "3134880",
    "end": "3142640"
  },
  {
    "text": "bytes so we had to fix that here and yeah that's how to cleanly reset a 1600",
    "start": "3142640",
    "end": "3149599"
  },
  {
    "text": "or for that matter every device running on that processor but of course I mean that's",
    "start": "3149599",
    "end": "3156400"
  },
  {
    "text": "not as reliable as a too SSH exploit so there's still a lot of work to do on it",
    "start": "3156400",
    "end": "3163839"
  },
  {
    "text": "we especially need to compare the workings here with other Cisco heat-based um vulnerabilities and see",
    "start": "3163839",
    "end": "3170839"
  },
  {
    "text": "how they differ um we also need a way to deliver stable external buffers but one",
    "start": "3170839",
    "end": "3178160"
  },
  {
    "text": "can imagine that in a backpack of any protocol message picked up by the Cisco um that shouldn't be a big",
    "start": "3178160",
    "end": "3185200"
  },
  {
    "text": "problem um the previous pointer is still the biggest problem we have and um has",
    "start": "3185200",
    "end": "3190440"
  },
  {
    "text": "still to be solved completely because I'm not happy with that reboot method and yeah we're working on it stay tuned",
    "start": "3190440",
    "end": "3199200"
  },
  {
    "text": "um what's yeah we need a list of Stack addresses per iOS image of course",
    "start": "3199200",
    "end": "3204960"
  },
  {
    "text": "because as I said they're St per image but there are tons of images out there so yeah you have to find that out and um",
    "start": "3204960",
    "end": "3213000"
  },
  {
    "text": "we also need some Shell Code but that's easy um that's writing to flash cards or",
    "start": "3213000",
    "end": "3218880"
  },
  {
    "text": "um actually removing traces like stack traces so the forensic sky has a real",
    "start": "3218880",
    "end": "3223920"
  },
  {
    "text": "bad day um or just real time modifi the configuration I mean you can just um",
    "start": "3223920",
    "end": "3230240"
  },
  {
    "text": "have a shell code that removes all access list bindings replaces the password and reboots the device so far",
    "start": "3230240",
    "end": "3237680"
  },
  {
    "text": "we still have to prove actually that this exploitation method um works on all",
    "start": "3237680",
    "end": "3243559"
  },
  {
    "text": "ios's up to 12.2 um due to a lack of a vulnerability",
    "start": "3243559",
    "end": "3248960"
  },
  {
    "text": "for 12.2 we couldn't prove that [Music]",
    "start": "3248960",
    "end": "3254160"
  },
  {
    "text": "yet yeah yet again a summarization of the what we did and",
    "start": "3254160",
    "end": "3259319"
  },
  {
    "text": "what we tested here um the 1,000 series um is actually even simpler to exploit",
    "start": "3259319",
    "end": "3265720"
  },
  {
    "text": "because it's nice enough to let you write directly into the exception Handler so as soon as the device finds",
    "start": "3265720",
    "end": "3272160"
  },
  {
    "text": "out that something is screwed up it will execute your code um sounds a bit like the windows exploits actually um The",
    "start": "3272160",
    "end": "3279520"
  },
  {
    "text": "Cisco 1600 and 2600 are easily exploitable while the 2600 runs a power",
    "start": "3279520",
    "end": "3286839"
  },
  {
    "text": "processor so you're not going to use that Shell Code here and the 2500 is not exploitable",
    "start": "3286839",
    "end": "3294799"
  },
  {
    "text": "remotely that way because we still have um your code actually ends up in low",
    "start": "3294799",
    "end": "3300079"
  },
  {
    "text": "memory addresses that have tons of zeros in there but if you have an overflow",
    "start": "3300079",
    "end": "3305720"
  },
  {
    "text": "that is not string based you can take the 2500 to and from what one can see from the",
    "start": "3305720",
    "end": "3312440"
  },
  {
    "text": "different memory Maps most of the cisos are exploitable this [Music]",
    "start": "3312440",
    "end": "3319280"
  },
  {
    "text": "way yeah for everyone who didn't get it yet um there are many buffer overflows",
    "start": "3319280",
    "end": "3326039"
  },
  {
    "text": "in iOS and on any platform using such a heap override with a fake block you can",
    "start": "3326039",
    "end": "3333079"
  },
  {
    "text": "remotely exploit them there are various different possible attack methods and",
    "start": "3333079",
    "end": "3339680"
  },
  {
    "text": "attack vectors here you can like inject it via protocols um debug based um",
    "start": "3339680",
    "end": "3346039"
  },
  {
    "text": "exploitation is good and yeah the big problem here is that the network infrastructure still has not gotten",
    "start": "3346039",
    "end": "3353160"
  },
  {
    "text": "enough attention from the security folks the nvram still contains your original",
    "start": "3353160",
    "end": "3359559"
  },
  {
    "text": "config I mean um for the local network attack where you invalidate the nvram",
    "start": "3359559",
    "end": "3365440"
  },
  {
    "text": "the attacker doesn't just get the router he also gets your config including all the passwords all the routes all the",
    "start": "3365440",
    "end": "3371920"
  },
  {
    "text": "settings all the juicy stuff and of course you can modify the share code to just copy the original config back in",
    "start": "3371920",
    "end": "3379000"
  },
  {
    "text": "nvram because normally you have plenty of space for that and calculate the right check some and here you go um you",
    "start": "3379000",
    "end": "3386280"
  },
  {
    "text": "expected after you took the router oh and by the way that also um",
    "start": "3386280",
    "end": "3393599"
  },
  {
    "text": "breaks that no servers password recovery stuff so if you get locked out of a router and make sure you have tftp",
    "start": "3393599",
    "end": "3401839"
  },
  {
    "text": "running um here's a real bad scenario on that one um an ataker takes a branch off",
    "start": "3401839",
    "end": "3407480"
  },
  {
    "text": "his router this is what we did here um then the attacker builds himself an IP",
    "start": "3407480",
    "end": "3413440"
  },
  {
    "text": "sect tunel back um to protect the innocent um so he's not seen by the IDS and all",
    "start": "3413440",
    "end": "3419720"
  },
  {
    "text": "these people running honeypots and yeah then he goes takes over your company VI",
    "start": "3419720",
    "end": "3426319"
  },
  {
    "text": "his encrypted [Music] hunel so the question of course is how",
    "start": "3426319",
    "end": "3433160"
  },
  {
    "text": "do you protect yourself against it in general do not rely on one type of equipment for your protection if",
    "start": "3433160",
    "end": "3439799"
  },
  {
    "text": "everything on your DMZ and outside perameter say Cisco that's not good",
    "start": "3439799",
    "end": "3445680"
  },
  {
    "text": "assume that a vulnerability in your networked equipment or embedded system will sooner or later be exploited to the",
    "start": "3445680",
    "end": "3452799"
  },
  {
    "text": "fullest extent we just wanted to show that it is possible it doesn't stop anyone from doing remote overflows",
    "start": "3452799",
    "end": "3460440"
  },
  {
    "text": "unlike your printer use all protection an operating",
    "start": "3460440",
    "end": "3466160"
  },
  {
    "text": "system gives you like if you have something where you can set a password set a password and please not the",
    "start": "3466160",
    "end": "3471480"
  },
  {
    "text": "default password um and don't just Overlook simple and small devices",
    "start": "3471480",
    "end": "3476880"
  },
  {
    "text": "sooner or later they will fall victim to someone and yeah basically if you think",
    "start": "3476880",
    "end": "3482440"
  },
  {
    "text": "about how to manage all your devices um remember to do it as secure as",
    "start": "3482440",
    "end": "3488079"
  },
  {
    "text": "possible read don't use [Music] tet so for HP printers um check the",
    "start": "3488079",
    "end": "3495799"
  },
  {
    "text": "following did you assign an admin password did you change the SNMP communities both of them did you enable",
    "start": "3495799",
    "end": "3502880"
  },
  {
    "text": "PGA protection um actually that that gives you just a bit of time but it's okay use",
    "start": "3502880",
    "end": "3509920"
  },
  {
    "text": "the IP address filter um and only allow like Print Service to talk to the device",
    "start": "3509920",
    "end": "3514960"
  },
  {
    "text": "if you send a job to the print server first anyway there is no reason your computer has to talk to the printer",
    "start": "3514960",
    "end": "3520640"
  },
  {
    "text": "directly and for critical printers like finance department um you might consider",
    "start": "3520640",
    "end": "3526280"
  },
  {
    "text": "them putting behind IP filter devices or honestly just connected to the lpt port",
    "start": "3526280",
    "end": "3532599"
  },
  {
    "text": "that's what that is for I mean you don't have to say on the network if only one",
    "start": "3532599",
    "end": "3537720"
  },
  {
    "text": "guy is printing on it for the Cisco routers the following",
    "start": "3537720",
    "end": "3543599"
  },
  {
    "text": "are additional measures to be taken um for yeah to prevent your RS to be",
    "start": "3543599",
    "end": "3550359"
  },
  {
    "text": "exploited um of course you should do the normal CIS hardening anyway keep the iOS up to date I mean",
    "start": "3550359",
    "end": "3557680"
  },
  {
    "text": "it's painful I know and it might even requir some money because yeah you have to buy new RAM for every new version of",
    "start": "3557680",
    "end": "3564880"
  },
  {
    "text": "iOS um but this is basically the best way to protect yourself turn off these unneeded",
    "start": "3564880",
    "end": "3571720"
  },
  {
    "text": "Services I mean that's like one of the oldest message in the security Community but it's still not gotten through on",
    "start": "3571720",
    "end": "3578839"
  },
  {
    "text": "like routers um use the signat over here to tell your network-based IDs um how Cisco",
    "start": "3578839",
    "end": "3586559"
  },
  {
    "text": "Heap overflow looks like um you can use the command debug",
    "start": "3586559",
    "end": "3591680"
  },
  {
    "text": "sanity which is by the way undocumented um to increase the validation of the memory structures it",
    "start": "3591680",
    "end": "3599240"
  },
  {
    "text": "actually just um prevents like less experienced attackers from doing it because the exploitation still works it",
    "start": "3599240",
    "end": "3605760"
  },
  {
    "text": "catches afterwards and of course M make perfectly sure that your logging data",
    "start": "3605760",
    "end": "3612240"
  },
  {
    "text": "doesn't go anywhere all right and that config register trick over here is",
    "start": "3612240",
    "end": "3618559"
  },
  {
    "text": "pretty good but makes maintenance pain in the ass um if you said that in a config the reboot will not work it will",
    "start": "3618559",
    "end": "3625440"
  },
  {
    "text": "hang in the rommon um which is good to protect yourself from exploitation but",
    "start": "3625440",
    "end": "3631760"
  },
  {
    "text": "is bad because yeah I mean if you have to reboot it it will",
    "start": "3631760",
    "end": "3637520"
  },
  {
    "text": "hang r one and you better have a console cable with you and really I cannot",
    "start": "3637520",
    "end": "3642640"
  },
  {
    "text": "resist saying that but if you have no vulnerabilities in iOS the presented",
    "start": "3642640",
    "end": "3647799"
  },
  {
    "text": "exploitation method is not going to pose a risk at",
    "start": "3647799",
    "end": "3653000"
  },
  {
    "text": "all so that was pretty much it good um hope you enjoyed",
    "start": "3653720",
    "end": "3661000"
  },
  {
    "text": "it any questions go [Music]",
    "start": "3667319",
    "end": "3673760"
  },
  {
    "text": "on",
    "start": "3673760",
    "end": "3676760"
  },
  {
    "text": "again yeah I was thinking about that too but you're quite Limited in the um Java",
    "start": "3681000",
    "end": "3686160"
  },
  {
    "text": "VM so far um so I couldn't see a way to do that but I ain't no Java coder so if",
    "start": "3686160",
    "end": "3693440"
  },
  {
    "text": "you know someone who does the coffee stuff ask",
    "start": "3693440",
    "end": "3698079"
  },
  {
    "text": "him no more questions okay so thanks",
    "start": "3698680",
    "end": "3707318"
  },
  {
    "text": "again",
    "start": "3714839",
    "end": "3717839"
  },
  {
    "text": "e",
    "start": "3744839",
    "end": "3747839"
  },
  {
    "text": "e",
    "start": "3774839",
    "end": "3777839"
  },
  {
    "text": "e",
    "start": "3804760",
    "end": "3807760"
  },
  {
    "text": "e",
    "start": "3834720",
    "end": "3837720"
  },
  {
    "text": "e",
    "start": "3864720",
    "end": "3867720"
  },
  {
    "text": "e",
    "start": "3894640",
    "end": "3897640"
  },
  {
    "text": "e",
    "start": "3924640",
    "end": "3927640"
  },
  {
    "text": "e",
    "start": "3954640",
    "end": "3957640"
  },
  {
    "text": "e",
    "start": "3984559",
    "end": "3987559"
  },
  {
    "text": "e",
    "start": "4014520",
    "end": "4017520"
  },
  {
    "text": "e",
    "start": "4044520",
    "end": "4047520"
  },
  {
    "text": "e",
    "start": "4074440",
    "end": "4077440"
  },
  {
    "text": "e",
    "start": "4104440",
    "end": "4107440"
  },
  {
    "text": "e",
    "start": "4134440",
    "end": "4137440"
  },
  {
    "text": "e",
    "start": "4164359",
    "end": "4167359"
  },
  {
    "text": "e",
    "start": "4194320",
    "end": "4197320"
  },
  {
    "text": "e",
    "start": "4224320",
    "end": "4227320"
  },
  {
    "text": "e",
    "start": "4254239",
    "end": "4257239"
  },
  {
    "text": "e",
    "start": "4284239",
    "end": "4287239"
  },
  {
    "text": "e",
    "start": "4314239",
    "end": "4317239"
  },
  {
    "text": "e",
    "start": "4344159",
    "end": "4347159"
  }
]