[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "thank you for attending my presentation so we're going to talk about proxy SG from Blue Cod but before I dig into the",
    "start": "120",
    "end": "7799"
  },
  {
    "text": "subject I'll just tell you a bit about uh who I am and what I'm doing so I work for Airbus group Innovations uh which is",
    "start": "7799",
    "end": "15320"
  },
  {
    "text": "the R&D Department of the Airbus Group which is known for making planes and also security uh so we are a small",
    "start": "15320",
    "end": "22560"
  },
  {
    "text": "research team we're about 12 uh and we mostly work internally uh both on",
    "start": "22560",
    "end": "28160"
  },
  {
    "text": "avionic and regular it stuff and we do security um some of you may have heard",
    "start": "28160",
    "end": "35719"
  },
  {
    "text": "that this talk was supposed to happen in San back in March where it was cancel so",
    "start": "35719",
    "end": "41200"
  },
  {
    "text": "before you ask the question basically uh the cant is exactly the same as it was",
    "start": "41200",
    "end": "46440"
  },
  {
    "text": "in siscan with a few little modifications but nothing was censored or nothing was removed from the",
    "start": "46440",
    "end": "52039"
  },
  {
    "text": "presentation from sisan so now a peek under the blue code so the goal today is",
    "start": "52039",
    "end": "59239"
  },
  {
    "start": "57000",
    "end": "93000"
  },
  {
    "text": "to give you view of the work we did reverse engineering and analyzing the proc CSG uh we're going to follow the",
    "start": "59239",
    "end": "65760"
  },
  {
    "text": "way we actually worked on it so we will start low level with the file system",
    "start": "65760",
    "end": "70960"
  },
  {
    "text": "storage and registry and we go up the layers until we reach application security so we'll give a look get get a",
    "start": "70960",
    "end": "78320"
  },
  {
    "text": "look into binaries then the kernel and Os mechanisms then a way to dig into the",
    "start": "78320",
    "end": "84520"
  },
  {
    "text": "internals how we did get into the internals and then we'll see how the Global Security of the system is handled",
    "start": "84520",
    "end": "91360"
  },
  {
    "text": "and conclude about that so first what's a blue cut proxy uh so it's an",
    "start": "91360",
    "end": "97399"
  },
  {
    "start": "93000",
    "end": "212000"
  },
  {
    "text": "Enterprise proxy web proxy uh which is one of the most deployed in big companies so if you're working in a",
    "start": "97399",
    "end": "103759"
  },
  {
    "text": "company with tens of thousands of people accessing the web there is quite a good chance that you're going through a blue",
    "start": "103759",
    "end": "110280"
  },
  {
    "text": "cat Pro CSG uh it's mainly used for URL categorization to filter your access to",
    "start": "110280",
    "end": "116920"
  },
  {
    "text": "YouTube uh outside of the lunch break uh but it's also able to do way more people",
    "start": "116920",
    "end": "123439"
  },
  {
    "text": "don't know that but it's also cap capable of intercepting and re-encoding",
    "start": "123439",
    "end": "128679"
  },
  {
    "text": "video streaming it's also capable of doing a mapi and SMB proxy it's very",
    "start": "128679",
    "end": "134879"
  },
  {
    "text": "very very complex it has a lot of features and what's really interesting is that it's running a proprietary OS",
    "start": "134879",
    "end": "141040"
  },
  {
    "text": "it's not as most appliances running on Linux or FreeBSD or whatever it's actually running their own operating",
    "start": "141040",
    "end": "147879"
  },
  {
    "text": "system which is called sgos so why at herbus group did we research proxy SG",
    "start": "147879",
    "end": "153400"
  },
  {
    "text": "doesn't seem like very obvious uh well it's actually widely used in the group so it's the most uh common way to access",
    "start": "153400",
    "end": "161239"
  },
  {
    "text": "the internet from from from inside and well since it's at the edge of the of",
    "start": "161239",
    "end": "167319"
  },
  {
    "text": "the between the the web and the the internal Network it's very interesting Target for malicious actors because if",
    "start": "167319",
    "end": "172879"
  },
  {
    "text": "you can get into a proy SG and take over uh take over you can bypass logging you",
    "start": "172879",
    "end": "178120"
  },
  {
    "text": "can well maybe compromis it from the internet if you have a really good exploit you can also probably man the",
    "start": "178120",
    "end": "184319"
  },
  {
    "text": "middle TLS connections because While Blue prox SG is also well known for being able to man man in the middle TS",
    "start": "184319",
    "end": "191720"
  },
  {
    "text": "connections well it's a very interesting Target and there is no known previous",
    "start": "191720",
    "end": "197200"
  },
  {
    "text": "research public research on the proxy so we didn't really know if it was Secure",
    "start": "197200",
    "end": "202239"
  },
  {
    "text": "or not and if you look at the security built-ins published by blue coat you just have open SSL issues and web web",
    "start": "202239",
    "end": "209480"
  },
  {
    "text": "inter face Administration bugs nothing really interesting so the goal of the study was",
    "start": "209480",
    "end": "214519"
  },
  {
    "start": "212000",
    "end": "307000"
  },
  {
    "text": "really to assess the Global Security level of the proxy SG so we could now if we had to remove them on that uh also to",
    "start": "214519",
    "end": "222599"
  },
  {
    "text": "help the it guys by writing recommendations for secure deployment based on the findings we had and also be",
    "start": "222599",
    "end": "228519"
  },
  {
    "text": "prepared for forensics if we ever know that proxy was compromised knowing about the internal three helps to do a",
    "start": "228519",
    "end": "234879"
  },
  {
    "text": "forensics investigation then okay why should we publish about proxis because we could do",
    "start": "234879",
    "end": "240959"
  },
  {
    "text": "the research to keep the results internal well we really thought uh that's the first public information we",
    "start": "240959",
    "end": "246760"
  },
  {
    "text": "publishing here but definitely not the first research on Pro CSG I guess some three Lors agencies B based in the US",
    "start": "246760",
    "end": "253319"
  },
  {
    "text": "have probably some um interesting work done on proxy SG and so our goal is to",
    "start": "253319",
    "end": "259359"
  },
  {
    "text": "Foster research and get researcher look into proxy SG maybe find bugs and then",
    "start": "259359",
    "end": "264600"
  },
  {
    "text": "publish them so they can get fixed and in the end herur gets a better security",
    "start": "264600",
    "end": "269880"
  },
  {
    "text": "from proxy SG so today's presentation is going to focus on the RO technical results and also on the way we did it to",
    "start": "269880",
    "end": "277720"
  },
  {
    "text": "acquire them and so as I said we're going to go from the low level to the high level and that's what we did we",
    "start": "277720",
    "end": "284960"
  },
  {
    "text": "also here here everything I'm going to talk about is going to apply to all the current Pro CSG models that are running",
    "start": "284960",
    "end": "291280"
  },
  {
    "text": "version six up to quarter 1 2015 because since we started talking with blue code",
    "start": "291280",
    "end": "297520"
  },
  {
    "text": "they made a few changes to the RS and improve security so I'm going to tell you about the changes but mostly this",
    "start": "297520",
    "end": "304560"
  },
  {
    "text": "applies up well last year so if you want to run a proxy SG",
    "start": "304560",
    "end": "310720"
  },
  {
    "start": "307000",
    "end": "429000"
  },
  {
    "text": "you have two choices either you buy an appliance which is basically a a wable",
    "start": "310720",
    "end": "316199"
  },
  {
    "text": "server running Intel CPUs with of the Shelf components hdds Ram nothing very",
    "start": "316199",
    "end": "322039"
  },
  {
    "text": "special or you can buy a VMware appliance that you put on es6 and run it other way basically the way the two are",
    "start": "322039",
    "end": "328919"
  },
  {
    "text": "really the same running the same operating system there is no difference between the two um it's also very interesting that",
    "start": "328919",
    "end": "336240"
  },
  {
    "text": "it's running on commodity Hardware but it's running a proprietary OS and there is nothing published about it so I don't",
    "start": "336240",
    "end": "342840"
  },
  {
    "text": "know why the common versions that you could you can find in the wild uh are 5.5 it should be uh over by now but some",
    "start": "342840",
    "end": "351080"
  },
  {
    "text": "older older Hardware don't support six so you may have found some 5.5 I'm not going to talk about 5.5 it's rehall and",
    "start": "351080",
    "end": "357960"
  },
  {
    "text": "some of the security measures that we have insect don't apply to 5.5 uh the one you're probably going to find in the",
    "start": "357960",
    "end": "364360"
  },
  {
    "text": "world is 6.2 which is the previous long-term release which is now deprecated so you should move to 6.5",
    "start": "364360",
    "end": "370280"
  },
  {
    "text": "which is the latest long-term re release that blue codes uh blue code recommends running so we we worked on both hardware",
    "start": "370280",
    "end": "380160"
  },
  {
    "text": "and uh VMware appliances VMware is really easier to work with but we wanted to make sure that the results that we",
    "start": "380160",
    "end": "387199"
  },
  {
    "text": "had also appli to hardware so first you want to get a look at the",
    "start": "387199",
    "end": "392560"
  },
  {
    "text": "binaries you want to know what code is running in in the blue code so you have to access the file system um we started",
    "start": "392560",
    "end": "399520"
  },
  {
    "text": "with older version um of version six uh which is based on a fully proprietary",
    "start": "399520",
    "end": "406160"
  },
  {
    "text": "disk partitioning format so you take the disc of the blue cat you look at it and you're like uh this is not fat this is",
    "start": "406160",
    "end": "412080"
  },
  {
    "text": "nothing I know the partition scheme is not standard so you start from nothing",
    "start": "412080",
    "end": "417240"
  },
  {
    "text": "fortunately from 6.4 uh they started to move to a small flat 32 partition that",
    "start": "417240",
    "end": "422720"
  },
  {
    "text": "then contains propriatary F system we'll we'll see that later so it's easier to start with something like",
    "start": "422720",
    "end": "428479"
  },
  {
    "text": "6.4 so how do we get into the file system I just give you a small",
    "start": "428479",
    "end": "433960"
  },
  {
    "start": "429000",
    "end": "559000"
  },
  {
    "text": "introduction on how the the hardware works so the basic architecture is that you have three discs uh which is we can",
    "start": "433960",
    "end": "441560"
  },
  {
    "text": "have more but that's the minimum of this you can have and so usually have a small compact flash or SSD uh which is used",
    "start": "441560",
    "end": "448599"
  },
  {
    "text": "for the openings operating system itself and then you have two or more drives that are used to store everything else",
    "start": "448599",
    "end": "454879"
  },
  {
    "text": "that's mostly uh configuration data and also of course the cage file for the",
    "start": "454879",
    "end": "460160"
  },
  {
    "text": "proxy and all the user data that that is stored in the propri file system so",
    "start": "460160",
    "end": "465720"
  },
  {
    "text": "there are two types of file systems that you can find in the blue coat uh besides the fat 32 that is not really used uh",
    "start": "465720",
    "end": "473319"
  },
  {
    "text": "you have the static read only file system that is used to store the operating system files that's called",
    "start": "473319",
    "end": "478800"
  },
  {
    "text": "bcfs and you will find there the binaries and also static configuration put on by Blue",
    "start": "478800",
    "end": "485840"
  },
  {
    "text": "Cod regarding the kernel and everything we go back into that later uh then you have the catch engine which is so the",
    "start": "485840",
    "end": "492840"
  },
  {
    "text": "where the data is stored mostly the web data uh which is based on hash tables uh",
    "start": "492840",
    "end": "500720"
  },
  {
    "text": "the most complete documentation if you can call that the legal that you can find patents well there is the patent",
    "start": "500720",
    "end": "507159"
  },
  {
    "text": "that describes the principle of the CFS but it's not really easy to read and you",
    "start": "507159",
    "end": "512880"
  },
  {
    "text": "also have even though it's not really a file system you also have the registry which is store which is storing the settings which is stor into",
    "start": "512880",
    "end": "520080"
  },
  {
    "text": "CFS and so we don't really know we I tried researching CFS but it's really",
    "start": "520080",
    "end": "526120"
  },
  {
    "text": "really complex and so I don't know how it's stored on dis itself so we didn't",
    "start": "526120",
    "end": "531320"
  },
  {
    "text": "really go into that way to of research it's kind of uh a shame because the logs",
    "start": "531320",
    "end": "537959"
  },
  {
    "text": "are stored in CFS so if you want to do forensics and extract the logs you have to understand CFS correctly if you don't",
    "start": "537959",
    "end": "544000"
  },
  {
    "text": "want to use the interface but it's so complex we didn't have the time in uh to to to dig into it so today I'm going to",
    "start": "544000",
    "end": "551200"
  },
  {
    "text": "present only bcfs which is the static file system storing storing the file",
    "start": "551200",
    "end": "557959"
  },
  {
    "text": "system files banies so where do you get into bcfs so if you look at the fat 32 partitions you",
    "start": "557959",
    "end": "565079"
  },
  {
    "text": "have several files uh at least I mean only five of them and two of them start",
    "start": "565079",
    "end": "570720"
  },
  {
    "text": "a and system one are using bcfs it's very interesting because they actually rro bootloader which is based on their",
    "start": "570720",
    "end": "578160"
  },
  {
    "text": "proprietary OS so when you're starting you're starting the bootloader starter. which is a small six well small for boot",
    "start": "578160",
    "end": "584880"
  },
  {
    "text": "loader not really but it's a 6 megab binary containing a basic sgos with a",
    "start": "584880",
    "end": "590959"
  },
  {
    "text": "uniprocessor kernel and some drivers but no applications its goal is just to look up on the dis look for the available",
    "start": "590959",
    "end": "597959"
  },
  {
    "text": "systems that you can boot and then it displays a grub like boot menu that where you can choose which version of",
    "start": "597959",
    "end": "603279"
  },
  {
    "text": "the OS you want to start once you selected or just let the default start",
    "start": "603279",
    "end": "609320"
  },
  {
    "text": "it boots one of the systems so by default you only have one which is system one which is the real operating",
    "start": "609320",
    "end": "615519"
  },
  {
    "text": "system where you have a file over 200 megabytes which contains everything the multiprocessor kernel the UI the",
    "start": "615519",
    "end": "622680"
  },
  {
    "text": "applications everything so to summarize the boot sequence you put the BIOS then",
    "start": "622680",
    "end": "628160"
  },
  {
    "start": "624000",
    "end": "689000"
  },
  {
    "text": "the MBR the BR checks the boot sector then it boots boot. exe which is found",
    "start": "628160",
    "end": "634000"
  },
  {
    "text": "by hardcoded sector number the boot. exe starts kernel. exe which is stored in",
    "start": "634000",
    "end": "640360"
  },
  {
    "text": "starter. which is the first file entry we'll see there then it starts sequencer",
    "start": "640360",
    "end": "645480"
  },
  {
    "text": "exi uh which is the second entry install SI which is really interesting because it's actually a scrip parer and there",
    "start": "645480",
    "end": "652680"
  },
  {
    "text": "are a few configuration files in the roots of the file system uh of the pcfs file system where you can find well the",
    "start": "652680",
    "end": "659519"
  },
  {
    "text": "main. CFG script which is basically the init script and will load of all the",
    "start": "659519",
    "end": "665200"
  },
  {
    "text": "drivers and applications and then at the end um main. CFG start load starters.",
    "start": "665200",
    "end": "671760"
  },
  {
    "text": "exe which displays the boot menu and then started exe loads the selected system so an interes interesting boot",
    "start": "671760",
    "end": "679680"
  },
  {
    "text": "sequence which was kind of hard to get to because you had to reverse we had to reverse engineer every step and",
    "start": "679680",
    "end": "686360"
  },
  {
    "text": "understand how it it came in the end so I just give you an overview of the bcfs",
    "start": "686360",
    "end": "691720"
  },
  {
    "start": "689000",
    "end": "793000"
  },
  {
    "text": "F format I'm not going to explain everything because it's not the goal here uh this slide is going to be a",
    "start": "691720",
    "end": "697480"
  },
  {
    "text": "reference if you want to dig into the fast system you will have all the structures and if you look into an exad",
    "start": "697480",
    "end": "702720"
  },
  {
    "text": "decimal editor and take a look at this it will make sense immediately but",
    "start": "702720",
    "end": "708079"
  },
  {
    "text": "what's really interesting is if you if you look at the way it's stored uh you have several entries we you have a",
    "start": "708079",
    "end": "713839"
  },
  {
    "text": "string table here um a CPI table which basically is table with all the upsets",
    "start": "713839",
    "end": "720839"
  },
  {
    "text": "and size for files so if you want to unpack the file system which is read",
    "start": "720839",
    "end": "726480"
  },
  {
    "text": "only you just look for the tables you match the string names with the of set",
    "start": "726480",
    "end": "731839"
  },
  {
    "text": "and size and then you can extract all the file system and the strings contain the full path so the string you will",
    "start": "731839",
    "end": "737680"
  },
  {
    "text": "have uh boot slash sgos SL whatever so you have the full file system stored",
    "start": "737680",
    "end": "744360"
  },
  {
    "text": "linear linearly in in the file itself the thing is with this form you cannot",
    "start": "744360",
    "end": "749920"
  },
  {
    "text": "really change the size if you want to modify the system you cannot really change the F size of the files because",
    "start": "749920",
    "end": "755519"
  },
  {
    "text": "they're next to each other in the F content block so if you want to change the size you really have to rebuild the",
    "start": "755519",
    "end": "761480"
  },
  {
    "text": "world structure so we don't really do that um you also have something that you",
    "start": "761480",
    "end": "766760"
  },
  {
    "text": "must pay attention to in the header you have a CRC until 6.4 and starting from",
    "start": "766760",
    "end": "773199"
  },
  {
    "text": "6.5 you also have a hmac which is supposed to guarantee the Integrity of the pl system",
    "start": "773199",
    "end": "780079"
  },
  {
    "text": "um that's it it's qu kind of easy in once once you understood how it's stored it's kind of easy to to extract the data",
    "start": "780079",
    "end": "787639"
  },
  {
    "text": "um you also have something called the cpv uh which I will talk about later",
    "start": "787639",
    "end": "792760"
  },
  {
    "text": "right now so the cpv are the system image configuration variables uh which",
    "start": "792760",
    "end": "797959"
  },
  {
    "start": "793000",
    "end": "876000"
  },
  {
    "text": "is basically like a basically like a k kernel boot command line on Linux or the",
    "start": "797959",
    "end": "804519"
  },
  {
    "text": "BCD on Windows it stores uh the low-level uh settings for the the kernel",
    "start": "804519",
    "end": "810320"
  },
  {
    "text": "so here you have the structure it's not really interesting uh what's really interesting is that you have the",
    "start": "810320",
    "end": "815880"
  },
  {
    "text": "variable names which are referenced actually by section and number so we don't have the names in the file system",
    "start": "815880",
    "end": "822000"
  },
  {
    "text": "itself but if you look into sequence or EXA you have all the correspondence between the numbers and the variable",
    "start": "822000",
    "end": "828360"
  },
  {
    "text": "names unfortunately I discovered that like when I was writing the slides for the talk so I just had to reverse and",
    "start": "828360",
    "end": "836000"
  },
  {
    "text": "get the meaning from the quote and not from the names uh some interesting variables are the",
    "start": "836000",
    "end": "842040"
  },
  {
    "text": "section four kernel and the four four comma Zer variables which is the flags",
    "start": "842040",
    "end": "848320"
  },
  {
    "text": "where you you can enable very interesting stuff like a kernel de log a",
    "start": "848320",
    "end": "853360"
  },
  {
    "text": "GDB a gdbd stub has for n that startup",
    "start": "853360",
    "end": "858639"
  },
  {
    "text": "you can also change with 4 command three the console speed so by default it's 9,600 so it's very slow so you can",
    "start": "858639",
    "end": "865480"
  },
  {
    "text": "change that and have a faster console so it's quite useful so that's one of the",
    "start": "865480",
    "end": "871240"
  },
  {
    "text": "things you can find in the in the bcfs uh file system which is read only now I",
    "start": "871240",
    "end": "876680"
  },
  {
    "start": "876000",
    "end": "938000"
  },
  {
    "text": "say a few words about the CFS to the catch engine which is the veritable one we don't know really about uh as I said",
    "start": "876680",
    "end": "883279"
  },
  {
    "text": "before it's a hash table based uh it's it's really interesting because you by default you have no guarantee that the",
    "start": "883279",
    "end": "890120"
  },
  {
    "text": "files that you store into this file system are going to be permanently here they can get evicted if there is no",
    "start": "890120",
    "end": "896920"
  },
  {
    "text": "space and if your entry is tooo old they it would get evicted if you need space",
    "start": "896920",
    "end": "902639"
  },
  {
    "text": "so that's kind of weird because they actually use that file system to store the real settings so you don't want the",
    "start": "902639",
    "end": "908000"
  },
  {
    "text": "settings to disappear because you're starting to use all the dis space so they have some kind of regular files",
    "start": "908000",
    "end": "914399"
  },
  {
    "text": "that they have with this prefix so if you store a file in this file system using this prefix you will get the",
    "start": "914399",
    "end": "919560"
  },
  {
    "text": "guarantee that it's going to be treated like a regular file and not get deleted if the space is going low so if you just",
    "start": "919560",
    "end": "926360"
  },
  {
    "text": "look for legacy cach engine in the B is you get a few interesting thing strings",
    "start": "926360",
    "end": "931959"
  },
  {
    "text": "like authoriz key SNMP dolog and registr XML which is used to store the settings",
    "start": "931959",
    "end": "938519"
  },
  {
    "start": "938000",
    "end": "1019000"
  },
  {
    "text": "so the registry is a truee structure a bit like the Windows registry except",
    "start": "938519",
    "end": "943839"
  },
  {
    "text": "that it's stored on an XML file on the CFS and if you look into the code the",
    "start": "943839",
    "end": "949040"
  },
  {
    "text": "the entries are referenced by strings separated by uh columns so config column",
    "start": "949040",
    "end": "954639"
  },
  {
    "text": "authenticator column local users will get you all the local users the proxy SG",
    "start": "954639",
    "end": "959759"
  },
  {
    "text": "from the registry so from from the usual web interface you can get an access to the",
    "start": "959759",
    "end": "966519"
  },
  {
    "text": "almost complete registry as long as you have an admin access to the to the blue code so if you use the these URLs you",
    "start": "966519",
    "end": "973959"
  },
  {
    "text": "can access the registry unfortunately the the interface sensors some some of",
    "start": "973959",
    "end": "979399"
  },
  {
    "text": "the entries so we get like passwords hashes or sensored and if you want to access them well you want you might want",
    "start": "979399",
    "end": "986480"
  },
  {
    "text": "to audit the passwords then you have to use the CLI extensions that are here and",
    "start": "986480",
    "end": "991839"
  },
  {
    "text": "I I will talk about the CLI extensions later so to Summit about the storage you",
    "start": "991839",
    "end": "997480"
  },
  {
    "text": "have a fact partition which contains a static file system called bcfs which",
    "start": "997480",
    "end": "1002639"
  },
  {
    "text": "contains all the binaries the file Sy for for the OS and the web interface and everything and then you have CFS which",
    "start": "1002639",
    "end": "1008399"
  },
  {
    "text": "is the varable storage which contains the web data and also the registry so once we managed to extract everything of",
    "start": "1008399",
    "end": "1015480"
  },
  {
    "text": "course we dig up into binaries we want you to know how the OS Brands so the binary is you can find them deep into",
    "start": "1015480",
    "end": "1023079"
  },
  {
    "start": "1019000",
    "end": "1242000"
  },
  {
    "text": "the our the the tree of the file system that's not really interesting but in the end you have the the strip directory",
    "start": "1023079",
    "end": "1029000"
  },
  {
    "text": "where you have all the libraries and programs and you can also find the kernel and drivers in the RO of the file",
    "start": "1029000",
    "end": "1035360"
  },
  {
    "text": "system as I said before you have a configur configuration files that are interpreted by sequencer AE when you",
    "start": "1035360",
    "end": "1041600"
  },
  {
    "text": "start the system it's kind of the innate system which set up some variables and also starts binaries so if you go back",
    "start": "1041600",
    "end": "1048120"
  },
  {
    "text": "into strip you have all the all the binaries the binaries are Elf files",
    "start": "1048120",
    "end": "1054120"
  },
  {
    "text": "everything is in elf files so the extensions are kind of weird because the",
    "start": "1054120",
    "end": "1060240"
  },
  {
    "text": "AL F with.ex exe doso andso um I guess it's because version",
    "start": "1060240",
    "end": "1066000"
  },
  {
    "text": "five was not using elf but using PE I don't know why they changed from PE to elf probably some word reason um so you",
    "start": "1066000",
    "end": "1074000"
  },
  {
    "text": "can either have 32 or 64 bits version of the operating systems",
    "start": "1074000",
    "end": "1079520"
  },
  {
    "text": "uh it's mostly depending on the hardware so if you have a hardware with small uh",
    "start": "1079520",
    "end": "1084600"
  },
  {
    "text": "a small amount of ram about 2 GB then you get a 32 Bits And if you have more",
    "start": "1084600",
    "end": "1089679"
  },
  {
    "text": "than four 4 gbes you will get a 64 bits version we'll see why later so all the",
    "start": "1089679",
    "end": "1095600"
  },
  {
    "text": "code written by Blue code is in C++ compared with d++ with a custom Target",
    "start": "1095600",
    "end": "1101360"
  },
  {
    "text": "so there is uh all the binaries taken together are amount to between 70 and 80",
    "start": "1101360",
    "end": "1107280"
  },
  {
    "text": "megabytes so you can imagine besides the open source libraries everything in C++ you have around 50 or 60 megabytes of",
    "start": "1107280",
    "end": "1114760"
  },
  {
    "text": "C++ code to reverse engineer so it's terrible uh fortunately the banner is",
    "start": "1114760",
    "end": "1122440"
  },
  {
    "text": "are not just C++ Mt things you have a lot of unit tests so every binary every",
    "start": "1122440",
    "end": "1129000"
  },
  {
    "text": "libraries uh every Library integrates unit tests that you can trigger from uh",
    "start": "1129000",
    "end": "1134919"
  },
  {
    "text": "the web interface so you can make sure everything works correctly using the in unit test which is very good for the",
    "start": "1134919",
    "end": "1140679"
  },
  {
    "text": "reverse engineer because there is a lot of debug information in the unit test I mean debug strings so you can get",
    "start": "1140679",
    "end": "1147600"
  },
  {
    "text": "insights of what's going on just by looking and running the unit tests also",
    "start": "1147600",
    "end": "1153159"
  },
  {
    "text": "you have a few well 2,600 source file names that are referenced in the code",
    "start": "1153159",
    "end": "1158600"
  },
  {
    "text": "sometimes uh to display debug strings sometimes to uh for back trace or",
    "start": "1158600",
    "end": "1163880"
  },
  {
    "text": "whatever so you have also information from the source file names",
    "start": "1163880",
    "end": "1169159"
  },
  {
    "text": "unfortunately everything is stripped so you don't have the intern internal names or variables or whatever but since there",
    "start": "1169159",
    "end": "1175919"
  },
  {
    "text": "are a lot of libraries a lot of uh Dynamic libraries you have a lot of external symbols so for example lib HTTP",
    "start": "1175919",
    "end": "1184760"
  },
  {
    "text": "a.so has several thousands of exports so it gives you an idea of what's going on",
    "start": "1184760",
    "end": "1191200"
  },
  {
    "text": "in every function because they are mostly called from external binaries but there are then they are using C++ and",
    "start": "1191200",
    "end": "1197960"
  },
  {
    "text": "templates so that's an actual symbol that you can find uh in the binary so",
    "start": "1197960",
    "end": "1203360"
  },
  {
    "text": "when you look at that you just I don't want to see that and of course to make things even worse uh in the 2 bits",
    "start": "1203360",
    "end": "1210360"
  },
  {
    "text": "they're not using the usual AB where the parameters for to function that pass through the stock they recompiled",
    "start": "1210360",
    "end": "1217159"
  },
  {
    "text": "probably with M pal uh settings from GCC which passes the arguments through",
    "start": "1217159",
    "end": "1223520"
  },
  {
    "text": "registers instead of Stack which is very annoying because II is then lost doesn't",
    "start": "1223520",
    "end": "1228960"
  },
  {
    "text": "know how to track the types uh of the arguments from function to function and 64 bits they're using the system by IBM",
    "start": "1228960",
    "end": "1237840"
  },
  {
    "text": "so the first look is really oh um what am I going to do then you look for of",
    "start": "1237840",
    "end": "1244840"
  },
  {
    "start": "1242000",
    "end": "1306000"
  },
  {
    "text": "course open source libraries because you know that people are taking open source libraries because it's less work so I",
    "start": "1244840",
    "end": "1251280"
  },
  {
    "text": "just took a look and tried to find everything that was available open source uh the first thing that was",
    "start": "1251280",
    "end": "1257880"
  },
  {
    "text": "really interesting the the numbers are from 6.5 a bit more than one year ago is there a memory memory indicator they use",
    "start": "1257880",
    "end": "1264720"
  },
  {
    "text": "called B was a published in 72 so I was",
    "start": "1264720",
    "end": "1270400"
  },
  {
    "text": "okay so it's an open source one it's actually very good very simple but uh it's kind of surprising uh they are",
    "start": "1270400",
    "end": "1276360"
  },
  {
    "text": "mostly using very old versions of the libraries so I was kind of uh concerned that they they were full of holes but uh",
    "start": "1276360",
    "end": "1285440"
  },
  {
    "text": "in conference called Blue Cod stated that they actually back for P the fixes regularly without necessarily changing",
    "start": "1285440",
    "end": "1291720"
  },
  {
    "text": "the version string so take the word I don't know uh so some some of them are",
    "start": "1291720",
    "end": "1297440"
  },
  {
    "text": "really old but yeah so we have the binaries then we want you to know about the kernel uh and of security security",
    "start": "1297440",
    "end": "1304919"
  },
  {
    "text": "mechanism that you can have so how does it work well the current in practice is very small uh it's 800 kilobytes and",
    "start": "1304919",
    "end": "1312360"
  },
  {
    "start": "1306000",
    "end": "1446000"
  },
  {
    "text": "it's just handling basic Primitives like like you would expect from a c like inter and except handling semaphor like",
    "start": "1312360",
    "end": "1320240"
  },
  {
    "text": "message ping passing through processes drivers and as as you would do in",
    "start": "1320240",
    "end": "1326360"
  },
  {
    "text": "Windows or Linux with the lipy and kernel 32.dll the kernel is not called",
    "start": "1326360",
    "end": "1332480"
  },
  {
    "text": "directly from the binaries it's abstracted to lip Library lip can API so",
    "start": "1332480",
    "end": "1339039"
  },
  {
    "text": "if you want to know what's going on and what CS are called you just reverse engineer the the API",
    "start": "1339039",
    "end": "1346480"
  },
  {
    "text": "Library the something really interesting to is uh the colonel provides uh at a",
    "start": "1346480",
    "end": "1352440"
  },
  {
    "text": "fixed address a structure a pointer to a structure which is kind of like the thread environment block on Windows",
    "start": "1352440",
    "end": "1358600"
  },
  {
    "text": "which contains the P ID the name of the task the parent PID uh some some of the",
    "start": "1358600",
    "end": "1364000"
  },
  {
    "text": "internal stuff that the process might want to know about so the kernel is very small but it",
    "start": "1364000",
    "end": "1370360"
  },
  {
    "text": "provides a bit more than 100 cisal uh and it's really nice because in the kernel you have a nice table with the",
    "start": "1370360",
    "end": "1378640"
  },
  {
    "text": "cisal number and next to it the cisal name so you don't even have to reverse engineering every cisal to get what it's",
    "start": "1378640",
    "end": "1385960"
  },
  {
    "text": "doing you just look at the name and and that's it uh so we didn't spend that",
    "start": "1385960",
    "end": "1391400"
  },
  {
    "text": "much time looking at the kernel but we wanted to know about the the way the Cs",
    "start": "1391400",
    "end": "1396919"
  },
  {
    "text": "are done so you have two ways to call the the the kernel either in 32 bits and",
    "start": "1396919",
    "end": "1402159"
  },
  {
    "text": "64 bits they're really the same you just call a callgate uh which is the fixed",
    "start": "1402159",
    "end": "1407720"
  },
  {
    "text": "address and you pass a structure pointed by ax where you have way basic stuff a",
    "start": "1407720",
    "end": "1414240"
  },
  {
    "text": "return code will be stored when you get back from the Cal and then you have four arguments and the cull number nothing",
    "start": "1414240",
    "end": "1420559"
  },
  {
    "text": "really special exactly the same for 64 bits except the address of course is different different and the structure is",
    "start": "1420559",
    "end": "1427320"
  },
  {
    "text": "64 bits variables instead of 32 but that's that's not the most",
    "start": "1427320",
    "end": "1433400"
  },
  {
    "text": "interesting thing about colel you just guessed that you have CIS and everything we really wanted to know about the",
    "start": "1433400",
    "end": "1438760"
  },
  {
    "text": "memory organization and the way tasks are",
    "start": "1438760",
    "end": "1443830"
  },
  {
    "text": "[Applause] separated well that was really",
    "start": "1443830",
    "end": "1448840"
  },
  {
    "start": "1446000",
    "end": "1557000"
  },
  {
    "text": "surprising basically everything runs in ring zero everything so all the task the",
    "start": "1448840",
    "end": "1455440"
  },
  {
    "text": "konel everything in the ring zero so I didn't believe it at first I was like",
    "start": "1455440",
    "end": "1460679"
  },
  {
    "text": "okay we're back to the '90s that's kind of weird uh so I spent really a few days",
    "start": "1460679",
    "end": "1466720"
  },
  {
    "text": "to make sure I wasn't mistaken and even if you look at the older",
    "start": "1466720",
    "end": "1471799"
  },
  {
    "text": "Hardware in in 32 bits you even sometimes have almost perfect mapping",
    "start": "1471799",
    "end": "1477240"
  },
  {
    "text": "between virtual addresses and physical addresses so when you access a virtual address you have a 99% chance you",
    "start": "1477240",
    "end": "1483480"
  },
  {
    "text": "actually addressing the physical address which is really really impressive so I",
    "start": "1483480",
    "end": "1489200"
  },
  {
    "text": "think it was for performance because they mentioned it in their patent that dates from the '90s but well so every",
    "start": "1489200",
    "end": "1495760"
  },
  {
    "text": "task can write everywhere no protection protection from from",
    "start": "1495760",
    "end": "1500880"
  },
  {
    "text": "anything uh also the operating system is a bit special uh it's not like Windows",
    "start": "1500880",
    "end": "1506080"
  },
  {
    "text": "or Linux you cannot execute binaries you cannot load a binary onto the system and",
    "start": "1506080",
    "end": "1511320"
  },
  {
    "text": "run it you only have one choice is you put your binary in the readly bcfs image",
    "start": "1511320",
    "end": "1518919"
  },
  {
    "text": "and then when the kernel boots it will load every binary from the image and relocate them so you only have then you",
    "start": "1518919",
    "end": "1526000"
  },
  {
    "text": "only have one choice if you want to execute something it has to be first in the image and it has to register an",
    "start": "1526000",
    "end": "1533640"
  },
  {
    "text": "entry point that is referenced by the kernel that you can call so basically",
    "start": "1533640",
    "end": "1539279"
  },
  {
    "text": "everything has to be there at boot if you want to run something or you have to find a way to execute code but you cannot just do and put your exit file",
    "start": "1539279",
    "end": "1547240"
  },
  {
    "text": "and run it so when when we did this research we we also want wanted a way to",
    "start": "1547240",
    "end": "1553039"
  },
  {
    "text": "get into the internals easily and not have to do everything statically so we looked into things to",
    "start": "1553039",
    "end": "1559480"
  },
  {
    "start": "1557000",
    "end": "1639000"
  },
  {
    "text": "make our job easier so first we developed a few tools uh which we are",
    "start": "1559480",
    "end": "1565399"
  },
  {
    "text": "not going to release I'm saying right now but it's to give you an idea uh so a",
    "start": "1565399",
    "end": "1570559"
  },
  {
    "text": "few idea plugins to just help from the things I said before uh rename the CIS automatically get the function names",
    "start": "1570559",
    "end": "1577240"
  },
  {
    "text": "from the debug logs get the source file names from the debug logs and also uh in",
    "start": "1577240",
    "end": "1582520"
  },
  {
    "text": "the code you you can find uh all the CLI commands that you could type as an administrator",
    "start": "1582520",
    "end": "1588480"
  },
  {
    "text": "uh that are stored in very nice structure and so we wanted to make sure everything was documented of course some",
    "start": "1588480",
    "end": "1595240"
  },
  {
    "text": "some of the command weren't documented then it's interesting to get them uh the most most important tool to to develop",
    "start": "1595240",
    "end": "1602720"
  },
  {
    "text": "when you're working with a blue code Pro is to have a way to modify the fight system very easily so we developed a",
    "start": "1602720",
    "end": "1609799"
  },
  {
    "text": "fuse tool to mount the system images with r right access without enabling",
    "start": "1609799",
    "end": "1616000"
  },
  {
    "text": "size change because it was to to to complex to implement and to also to change the system variables uh so and of",
    "start": "1616000",
    "end": "1623880"
  },
  {
    "text": "course when you un unmount the file system it fixes the CRC and hmac so if you want to change something some some",
    "start": "1623880",
    "end": "1629960"
  },
  {
    "text": "code some variables some some whatever you just have to mount it to change it and mount and then you can boot it into",
    "start": "1629960",
    "end": "1636559"
  },
  {
    "text": "your VMware machine for example so some useful tricks also to",
    "start": "1636559",
    "end": "1641919"
  },
  {
    "start": "1639000",
    "end": "1740000"
  },
  {
    "text": "get more information out of your pro CSG is to enable debug information so you",
    "start": "1641919",
    "end": "1647120"
  },
  {
    "text": "need to modify the system image that you're going to boot so you need either physical access or maybe remote code",
    "start": "1647120",
    "end": "1652640"
  },
  {
    "text": "execution so you can if you change the flags for the C you can enable a printk",
    "start": "1652640",
    "end": "1657960"
  },
  {
    "text": "a debut log when you the system starts it will output a lot of information about what it's doing by default it just",
    "start": "1657960",
    "end": "1665360"
  },
  {
    "text": "tells you nothing and most importantly if you change one variable called",
    "start": "1665360",
    "end": "1670720"
  },
  {
    "text": "customer release in a main cr. CFG so if you set customer release to zero",
    "start": "1670720",
    "end": "1676080"
  },
  {
    "text": "basically you're changing your proc CSG to a developer mode which gives you",
    "start": "1676080",
    "end": "1681120"
  },
  {
    "text": "access to lot of debug commands and information uh which is not possible by default so when you enable the debug",
    "start": "1681120",
    "end": "1687440"
  },
  {
    "text": "mode you have access to more than 200 uh CLI extensions the one that mentioned to access the registry for example and you",
    "start": "1687440",
    "end": "1695919"
  },
  {
    "text": "you can have they allow you to access all the internals of the user L components of the proxy so you have to",
    "start": "1695919",
    "end": "1703880"
  },
  {
    "text": "everything to Dum your configuration uh show the the Advent URL for managements",
    "start": "1703880",
    "end": "1709919"
  },
  {
    "text": "show the state of all the services if you want to see what's listening on what port by default you cannot check that so",
    "start": "1709919",
    "end": "1716080"
  },
  {
    "text": "you you you might want to enable the bug log and the most important feature is that for almost every component that",
    "start": "1716080",
    "end": "1722799"
  },
  {
    "text": "that is running almost every application you can um enable a very varable debug",
    "start": "1722799",
    "end": "1728919"
  },
  {
    "text": "log that will get you a lot of internal information same for the policy with the",
    "start": "1728919",
    "end": "1734919"
  },
  {
    "text": "policy debug Trac on so once you enable the dbug mod have access to a lot of",
    "start": "1734919",
    "end": "1740320"
  },
  {
    "start": "1740000",
    "end": "1754000"
  },
  {
    "text": "information so that's just an example of uh the CAG uh command and and Al also",
    "start": "1740320",
    "end": "1747039"
  },
  {
    "text": "you can D the World Registry without uh the sensor censorship for the passwords",
    "start": "1747039",
    "end": "1752360"
  },
  {
    "text": "using one of those commands also very interesting the kernel provides a GB GDB stub so when",
    "start": "1752360",
    "end": "1760000"
  },
  {
    "start": "1754000",
    "end": "1905000"
  },
  {
    "text": "you look at the code of the kernel it's very obvious that there is a GDB stub because you have a string like GDB monitor running unfortunately it's not",
    "start": "1760000",
    "end": "1768440"
  },
  {
    "text": "standard so I was like okay I got GDB enabled it's telling me at the beginning okay GDB monitor starting and then it",
    "start": "1768440",
    "end": "1775399"
  },
  {
    "text": "took me weeks maybe one or two to get into it because in theory you can access",
    "start": "1775399",
    "end": "1781799"
  },
  {
    "text": "it through the come one console but that's the console that is used by the administrator to administrate the the",
    "start": "1781799",
    "end": "1787799"
  },
  {
    "text": "pro CSG so by default when you type in commands it's just like you're logging",
    "start": "1787799",
    "end": "1792919"
  },
  {
    "text": "into the the proxy SG so GDB would send uh commands to the stub but they would get interpreted by the login prompt or",
    "start": "1792919",
    "end": "1800159"
  },
  {
    "text": "the just the interpretor so I discovered that you have to get an exception so",
    "start": "1800159",
    "end": "1805640"
  },
  {
    "text": "that the GDB stop gets um starts listening on come one and then you have to send a magic sequence of two bytes 18",
    "start": "1805640",
    "end": "1813159"
  },
  {
    "text": "and 14 on come one and then the kernel starts paring the commands as GDB",
    "start": "1813159",
    "end": "1818200"
  },
  {
    "text": "commands and not as usual Administration commands so once you done that okay you can send GDB commands but then they are",
    "start": "1818200",
    "end": "1825840"
  },
  {
    "text": "not using the standard GDB remote protocol so you have to make sure that either you patch your client or you use",
    "start": "1825840",
    "end": "1832080"
  },
  {
    "text": "a special command to disable the paging because paging is not hand all on the client side as as usual but on the sver",
    "start": "1832080",
    "end": "1838039"
  },
  {
    "text": "side so uh you would get like the first 80 80 lines and then it would stop",
    "start": "1838039",
    "end": "1843519"
  },
  {
    "text": "waiting for a command to continue and you would had to reboot your proxy SG so",
    "start": "1843519",
    "end": "1849320"
  },
  {
    "text": "you have GDB so you can debug that's really cool and you also have something really interesting and that I didn't know about before is that you can have",
    "start": "1849320",
    "end": "1856279"
  },
  {
    "text": "something called monitor extension so GDB can send commands to the kernel and so if you type for example monitor KNL",
    "start": "1856279",
    "end": "1864159"
  },
  {
    "text": "processes which is the one there uh it will send the string to the kernel and",
    "start": "1864159",
    "end": "1869519"
  },
  {
    "text": "the kernel will give you the results and so everything is implemented in the kernel and so you have like 30 commands",
    "start": "1869519",
    "end": "1876240"
  },
  {
    "text": "that you can run and that will display all the kernel internals so you have one to display all the active processes once",
    "start": "1876240",
    "end": "1882840"
  },
  {
    "text": "if you want to have the details of one process you can show the process descriptor using PD you can can also",
    "start": "1882840",
    "end": "1888320"
  },
  {
    "text": "list all the images running on the all the health images running on the prox CSG with their address and everything so",
    "start": "1888320",
    "end": "1894200"
  },
  {
    "text": "you don't even have to reverse engineer of the kernel to find out the structures the comments give you everything that's",
    "start": "1894200",
    "end": "1901399"
  },
  {
    "text": "nice so if you want to get for a practical understanding of the proxy SG one thing you might want to check is the",
    "start": "1901399",
    "end": "1907480"
  },
  {
    "text": "way it PES uh HTTP requests because that that might might be the the easiest to",
    "start": "1907480",
    "end": "1913799"
  },
  {
    "text": "access uh to an attacker that's the attack surface an attacker would go to because you just have to do an HTTP",
    "start": "1913799",
    "end": "1921399"
  },
  {
    "text": "request to the proxd if you have a vulnerability to to get remote code execution so in practice if if you want",
    "start": "1921399",
    "end": "1927799"
  },
  {
    "text": "to check how it works well you just activate the debug log you make a",
    "start": "1927799",
    "end": "1932840"
  },
  {
    "text": "request through the proxy get the log and fortunately you get all the function names in the log so you just have to",
    "start": "1932840",
    "end": "1939039"
  },
  {
    "text": "grab the binaries and look for lib htpx so and look for the cross reference for",
    "start": "1939039",
    "end": "1944399"
  },
  {
    "text": "the string and you got your function so that's just an extract from the log and",
    "start": "1944399",
    "end": "1949840"
  },
  {
    "text": "there is this function that is apparently very interesting if you want to look for vulnerabilities pass request",
    "start": "1949840",
    "end": "1955399"
  },
  {
    "text": "in cool but then you go into into",
    "start": "1955399",
    "end": "1960440"
  },
  {
    "text": "that so that's the CFG for pass request uh the function is about 16",
    "start": "1960440",
    "end": "1967159"
  },
  {
    "text": "kilobytes so and of course it's C++ so when you you're like okay I really have",
    "start": "1967159",
    "end": "1973600"
  },
  {
    "text": "to dig into this it's terrible uh but then you realize no part paring is actually done by this function that's",
    "start": "1973600",
    "end": "1980159"
  },
  {
    "text": "just the logic of the parsing and there they are calls to C++ object to do the parsing so you don't just have to look",
    "start": "1980159",
    "end": "1986760"
  },
  {
    "text": "at 16 kilobytes you have to look at like 50 or 60 kilobytes of code in C++ as well and of course it's threaded it's",
    "start": "1986760",
    "end": "1994080"
  },
  {
    "text": "not just easy to do so you want to debug you and not just do static reverse",
    "start": "1994080",
    "end": "1999919"
  },
  {
    "text": "engineering so you just look for the image base using the GDB monitor extension you relocate the binary in Ida",
    "start": "1999919",
    "end": "2007600"
  },
  {
    "text": "and you set a breakpoint using the CLI in proxy SD and then you can connect unfortunately stepping doesn't really",
    "start": "2007600",
    "end": "2013360"
  },
  {
    "text": "work so you have to make sure and put all your break points by hand I don't know why right so even though you have",
    "start": "2013360",
    "end": "2020200"
  },
  {
    "text": "access to the code it's not really easy but well so I've I've told you about",
    "start": "2020200",
    "end": "2027159"
  },
  {
    "text": "what we did and I'm now going to give you a few bit of information about the",
    "start": "2027159",
    "end": "2032440"
  },
  {
    "text": "security of the product itself so first um",
    "start": "2032440",
    "end": "2038720"
  },
  {
    "start": "2035000",
    "end": "2214000"
  },
  {
    "text": "aware application application security we the overall goal was to get a global",
    "start": "2038720",
    "end": "2045039"
  },
  {
    "text": "assessment of the security of the proxy not just the kernel and the internals so",
    "start": "2045039",
    "end": "2050118"
  },
  {
    "text": "if you check the higher levels for authentication for example uh by default",
    "start": "2050119",
    "end": "2055919"
  },
  {
    "text": "local password are hashed with FreeBSD md5 it's not that bad it also supports",
    "start": "2055919",
    "end": "2060960"
  },
  {
    "text": "Blowfish uh the code is there but I I don't know how to trigger the hashing of",
    "start": "2060960",
    "end": "2066638"
  },
  {
    "text": "passwords using both fish it's too bad and you have also a way to authenticate",
    "start": "2066639",
    "end": "2072638"
  },
  {
    "text": "with everything that exists on the planet to manage authentication ad all",
    "start": "2072639",
    "end": "2077839"
  },
  {
    "text": "the identity management things that you can imagine Oracle whatever well think",
    "start": "2077839",
    "end": "2083760"
  },
  {
    "text": "authentication is not that bad uh also by default when you just buy a new box",
    "start": "2083760",
    "end": "2089520"
  },
  {
    "text": "all the only protocols that are enabled are htps and SSH so you don't have tet",
    "start": "2089520",
    "end": "2094800"
  },
  {
    "text": "or PL Tes protocol that's good um fortunately for access control control you have only two types of accounts so",
    "start": "2094800",
    "end": "2101640"
  },
  {
    "text": "you either have full admin access or you have a readon account and you cannot have uh fine grain Access Control to",
    "start": "2101640",
    "end": "2108320"
  },
  {
    "text": "different variables or type of configuration so read only is interesting if you want to just monitor",
    "start": "2108320",
    "end": "2114240"
  },
  {
    "text": "the configuration or if you want to give people access to audit or take the",
    "start": "2114240",
    "end": "2120079"
  },
  {
    "text": "configuration regarding uh Boot and Trust in the operating system uh the",
    "start": "2120079",
    "end": "2125560"
  },
  {
    "text": "first interesting thing is updates are signed correctly so you cannot",
    "start": "2125560",
    "end": "2130800"
  },
  {
    "text": "compromise and back door a proy SG by F doing an update with a back door and",
    "start": "2130800",
    "end": "2135880"
  },
  {
    "text": "pushing it uh they checked correctly the code is okay uh unfortunately",
    "start": "2135880",
    "end": "2141920"
  },
  {
    "text": "unfortunately local images so the one that are started when you boot are not really uh trust trustable because before",
    "start": "2141920",
    "end": "2149839"
  },
  {
    "text": "6.5 it was only a CRC for integrated checks and form 6.5 they creating they",
    "start": "2149839",
    "end": "2156119"
  },
  {
    "text": "Chang in put an HM shape K one well uh it took me less than 2 hours to get the",
    "start": "2156119",
    "end": "2161240"
  },
  {
    "text": "key so wasn't really an efficient protection well I'll talk about talk",
    "start": "2161240",
    "end": "2166400"
  },
  {
    "text": "about that later again and also when you want to check application security you want to check that the crypto is done",
    "start": "2166400",
    "end": "2172480"
  },
  {
    "text": "correctly uh almost everything is based on op SSL and they get the lasers verion",
    "start": "2172480",
    "end": "2178800"
  },
  {
    "text": "so open SSL is not the best one maybe but at least it's not their own custom crypto that they run and they make sure",
    "start": "2178800",
    "end": "2185440"
  },
  {
    "text": "that they patch it patch it regularly and everything that is critical",
    "start": "2185440",
    "end": "2190520"
  },
  {
    "text": "regarding to security regarding grandom for example generating private keys or or whatever",
    "start": "2190520",
    "end": "2198480"
  },
  {
    "text": "is needing random security uh is using open SSL and they are using an entropy",
    "start": "2198480",
    "end": "2204440"
  },
  {
    "text": "generator that seems pretty well so crypto is good so basically application",
    "start": "2204440",
    "end": "2209560"
  },
  {
    "text": "security is not that bad apparently uh if if you look at the at the",
    "start": "2209560",
    "end": "2214720"
  },
  {
    "start": "2214000",
    "end": "2353000"
  },
  {
    "text": "administration interface you have two different flavors uh the new one is The Flash",
    "start": "2214720",
    "end": "2220119"
  },
  {
    "text": "interface it's nice and well it's flash uh but then you get worse you got",
    "start": "2220119",
    "end": "2227920"
  },
  {
    "text": "the real inter interface the one you can do everything with is you know that's the kind of interface you have your",
    "start": "2227920",
    "end": "2235040"
  },
  {
    "text": "special Windows XVM with io6 and a Java 6 plugin uh that you don't want to",
    "start": "2235040",
    "end": "2240560"
  },
  {
    "text": "connect to the internet that's the kind of interface we're talking about so everything is running in Java and it",
    "start": "2240560",
    "end": "2246480"
  },
  {
    "text": "it's opinion what um but what's really interesting is that",
    "start": "2246480",
    "end": "2251920"
  },
  {
    "text": "both interfaces work by actually posting CLI commands to to to an URL so there",
    "start": "2251920",
    "end": "2258280"
  },
  {
    "text": "are just front ends to the CLI uh and if you remember there are two types of accounts there are readon",
    "start": "2258280",
    "end": "2265000"
  },
  {
    "text": "accounts and admin accounts and even for readonly users they are posting commands",
    "start": "2265000",
    "end": "2270280"
  },
  {
    "text": "to an enable shell so like read only enable what could possibly go wrong",
    "start": "2270280",
    "end": "2277079"
  },
  {
    "text": "actually they fixed security vulnerabilities a few years ago where it was really easy to do a privilege",
    "start": "2277079",
    "end": "2282920"
  },
  {
    "text": "escalation using that this but then they added restricted command so in theory uh",
    "start": "2282920",
    "end": "2288880"
  },
  {
    "text": "you shouldn't be able to modify the configuration because they restrict you to a set of commands but I guess I",
    "start": "2288880",
    "end": "2295280"
  },
  {
    "text": "didn't really look into it but I guess it well it can probably go wrong also",
    "start": "2295280",
    "end": "2301480"
  },
  {
    "text": "the Java interface has something really special they have a RPC mechanism which is not really interesting but uh instead",
    "start": "2301480",
    "end": "2307359"
  },
  {
    "text": "of of using the https connection from the browser actually do a a new",
    "start": "2307359",
    "end": "2313160"
  },
  {
    "text": "connection using the Java stack and to connect to the and post the commands I don't know why they don't use the one",
    "start": "2313160",
    "end": "2319280"
  },
  {
    "text": "for the browser so you have two SSL stack that connect to the same thing that don't have the same security",
    "start": "2319280",
    "end": "2325680"
  },
  {
    "text": "properties what could possibly what could possibly go wrong so just an example uh if you want to when you go to",
    "start": "2325680",
    "end": "2332880"
  },
  {
    "text": "the Java interface uh it shows you the version and it's actually sending this request to the server and you have the",
    "start": "2332880",
    "end": "2339800"
  },
  {
    "text": "show version command and then you have the reply there there that is you don't even have the the proy SG promt and you",
    "start": "2339800",
    "end": "2347359"
  },
  {
    "text": "get the command in the result which is pared so interesting so if you want to",
    "start": "2347359",
    "end": "2352720"
  },
  {
    "text": "summarize about the system level security what you saw before uh well",
    "start": "2352720",
    "end": "2358319"
  },
  {
    "text": "some bad things first uh the code is compiled with GCC but they didn't uh",
    "start": "2358319",
    "end": "2364000"
  },
  {
    "text": "enable the stack protector so no stack canies if you have a stack buffer overflow game over nolr so game over",
    "start": "2364000",
    "end": "2373319"
  },
  {
    "text": "everything in ring Zero game over K Cate fix that risk game",
    "start": "2373319",
    "end": "2378640"
  },
  {
    "text": "over but not everything is bad actually uh you have NX enabled on most platforms",
    "start": "2378640",
    "end": "2385079"
  },
  {
    "text": "uh and actually since the latest versions you have NX enabled everywhere",
    "start": "2385079",
    "end": "2390200"
  },
  {
    "text": "uh the Big E from the 7s they actually have nice hazards so they compile their",
    "start": "2390200",
    "end": "2396440"
  },
  {
    "text": "hazards in and you don't have the way to to do classical unlink attacks like back",
    "start": "2396440",
    "end": "2403440"
  },
  {
    "text": "in the days with gpy um actually if you're running version five they they",
    "start": "2403440",
    "end": "2408720"
  },
  {
    "text": "don't have the asserts so if you if you're running version five move to 6.5 also well the read only fun system",
    "start": "2408720",
    "end": "2416400"
  },
  {
    "text": "for binaries the bcfs makes it way harder to back door the OS because even",
    "start": "2416400",
    "end": "2421599"
  },
  {
    "text": "if you get remote code execution if you want to modify one binary or if you want to to make something purchas assistant",
    "start": "2421599",
    "end": "2427640"
  },
  {
    "text": "on the on the on the code side well you really have to implement your own parer for the file",
    "start": "2427640",
    "end": "2435040"
  },
  {
    "text": "system and make sure you can modify it patch the CRC or hmac so it's not like you can W get a back door and running",
    "start": "2435040",
    "end": "2443760"
  },
  {
    "text": "run it as a route it's not really easy and so basically you need code exec or",
    "start": "2443760",
    "end": "2448839"
  },
  {
    "text": "physical access to change the system image because well the updates are signed so the only way is to modify on",
    "start": "2448839",
    "end": "2453960"
  },
  {
    "text": "the dis so that's not that bad and if you want to look specifically into",
    "start": "2453960",
    "end": "2459040"
  },
  {
    "start": "2458000",
    "end": "2581000"
  },
  {
    "text": "exploitability uh so well what do we have that facilitate exploits well you",
    "start": "2459040",
    "end": "2464599"
  },
  {
    "text": "have the previous slides where ring zero aslr and everything of course it's C++ so you have vtables everywhere you have",
    "start": "2464599",
    "end": "2471400"
  },
  {
    "text": "function pointers everywhere where you can overwrite and get access to to to code execution if you have a buff of",
    "start": "2471400",
    "end": "2477160"
  },
  {
    "text": "overflow and also it's running C++ code so it's not like it's running a script",
    "start": "2477160",
    "end": "2482240"
  },
  {
    "text": "language where it's B usually safer regarding memory corruption",
    "start": "2482240",
    "end": "2488079"
  },
  {
    "text": "but then you have some things that are really a pain if you want to run an",
    "start": "2488079",
    "end": "2493240"
  },
  {
    "text": "exploit uh because first your ring zero so you don't have any protection against",
    "start": "2493240",
    "end": "2498920"
  },
  {
    "text": "memory access or bad memory access uh because you can just for example byass NX by changing the pts or whatever but",
    "start": "2498920",
    "end": "2506640"
  },
  {
    "text": "then if you fail well you reboot the system so it's kind of obvious uh you",
    "start": "2506640",
    "end": "2512560"
  },
  {
    "text": "don't have aslr but then remember the binaries are mapped at the beginning of the boot so it takes all the binaries",
    "start": "2512560",
    "end": "2519359"
  },
  {
    "text": "from the system and Maps them into memories continuously so every version",
    "start": "2519359",
    "end": "2525800"
  },
  {
    "text": "has a different uh starting address for binaries because if you change one binary the size changes then the",
    "start": "2525800",
    "end": "2532720"
  },
  {
    "text": "positioning memory will change so you don't have a a fixed address like in a PE that would get loaded at the 40 0000",
    "start": "2532720",
    "end": "2541040"
  },
  {
    "text": "on windows so you you would have to have a very precise fingerprint of the bluet",
    "start": "2541040",
    "end": "2547200"
  },
  {
    "text": "code Pro CSG to make sure you have the right addresses but if you have it then you have no islr so that's it of course",
    "start": "2547200",
    "end": "2554520"
  },
  {
    "text": "then well that's obvious but uh you have a custom OS so you're not going to use",
    "start": "2554520",
    "end": "2560359"
  },
  {
    "text": "metalit or meta pror on proxy SG you have to write your own custom pad to",
    "start": "2560359",
    "end": "2565599"
  },
  {
    "text": "make a back door at accounts or whatever so it takes some sometimes and also apparently I didn't see it myself but",
    "start": "2565599",
    "end": "2572160"
  },
  {
    "text": "blue code told me that they have guard Pages somewhere uh so it might be a hurdle for",
    "start": "2572160",
    "end": "2578800"
  },
  {
    "text": "exploitation so if we want to conclude uh about the security of the proy SG",
    "start": "2578800",
    "end": "2586000"
  },
  {
    "start": "2581000",
    "end": "2736000"
  },
  {
    "text": "well I think what's really interesting is uh we analyzed an completely unusual",
    "start": "2586000",
    "end": "2592160"
  },
  {
    "text": "and entirely propriatary o design which is even though the security is kind of",
    "start": "2592160",
    "end": "2598440"
  },
  {
    "text": "dated you you feel the design of the '90s the kernel the code and the the",
    "start": "2598440",
    "end": "2604000"
  },
  {
    "text": "operating system itself is actually very well designed for For What It's meant for performance and web caging so they",
    "start": "2604000",
    "end": "2611280"
  },
  {
    "text": "didn't really uh upgrade it to nowadays security standards not yet um but it's",
    "start": "2611280",
    "end": "2619559"
  },
  {
    "text": "really good design the the guys know what they're talking about uh also well no kernel user isolation or exploit",
    "start": "2619559",
    "end": "2627000"
  },
  {
    "text": "hardening was kind of really unsuspected the ring zero I was really surprised uh",
    "start": "2627000",
    "end": "2633000"
  },
  {
    "text": "I guess it in the end at the beginning was really for performance because uh 20 years ago or maybe 15 years ago the",
    "start": "2633000",
    "end": "2639440"
  },
  {
    "text": "performance of the hardware was really uh not as good as today so they didn't",
    "start": "2639440",
    "end": "2644839"
  },
  {
    "text": "really change and evaluate the impact now uh also I didn't really look for",
    "start": "2644839",
    "end": "2650839"
  },
  {
    "text": "vulnerabilities per se I just took a quick look at a few functions but I didn't find any obvious ver so that's",
    "start": "2650839",
    "end": "2658680"
  },
  {
    "text": "not bad but then if you look at the release notes uh every new version they",
    "start": "2658680",
    "end": "2664839"
  },
  {
    "text": "document a few software restart s and so if you look into the details it's like",
    "start": "2664839",
    "end": "2670160"
  },
  {
    "text": "yeah so if you send this kind of request there is uh a boundary that is not",
    "start": "2670160",
    "end": "2676440"
  },
  {
    "text": "really respected so you have well ring zero fold reboot so I guess you can",
    "start": "2676440",
    "end": "2681720"
  },
  {
    "text": "probably find a few exploitable bugs in the code so well recommendations for uh",
    "start": "2681720",
    "end": "2689720"
  },
  {
    "text": "better security with proxy SG they are kind of OB obvious but well use a dedicated vean or land for",
    "start": "2689720",
    "end": "2696079"
  },
  {
    "text": "administration but by default you don't have a way to do that easily so you have really have to dig into the documentation you don't want to expose",
    "start": "2696079",
    "end": "2702920"
  },
  {
    "text": "your Java stuff to to to the to the net uh you just really want to monitor the",
    "start": "2702920",
    "end": "2709160"
  },
  {
    "text": "event log mostly to investigate reboots because if you get a reboot a kind of weird reboot on your proxy SG may be",
    "start": "2709160",
    "end": "2715920"
  },
  {
    "text": "well that someone tried to do and run an exploit and it so you want to check that also since you don't have any secure",
    "start": "2715920",
    "end": "2722800"
  },
  {
    "text": "boot mechanism yet uh you want to physically protect your appliances to avoid someone putting back door into",
    "start": "2722800",
    "end": "2728880"
  },
  {
    "text": "your RS and of course well use secure passwords so that's the",
    "start": "2728880",
    "end": "2734520"
  },
  {
    "text": "recommendations so a new slide that didn't exist in my original presentation that was meant for SI scan is uh the",
    "start": "2734520",
    "end": "2741240"
  },
  {
    "start": "2736000",
    "end": "2860000"
  },
  {
    "text": "security enhancement in proxy SD uh so we had quite a few discussions with uh",
    "start": "2741240",
    "end": "2747359"
  },
  {
    "text": "blue coat on what they could do to what they can do uh to improve the security",
    "start": "2747359",
    "end": "2752960"
  },
  {
    "text": "so they they made sure recently that NX support was added in every version of",
    "start": "2752960",
    "end": "2758359"
  },
  {
    "text": "support Pro CSG that is supported right now uh they also changed thing one thing that is really interesting is they Chang",
    "start": "2758359",
    "end": "2765119"
  },
  {
    "text": "the boot chain in system image validation so you don't they didn't really change the mechanism but they",
    "start": "2765119",
    "end": "2770280"
  },
  {
    "text": "publish the hash of every version the of proxy SD they released so you you can",
    "start": "2770280",
    "end": "2777400"
  },
  {
    "text": "check and type uh a command to have the the hash of every system image that is",
    "start": "2777400",
    "end": "2782520"
  },
  {
    "text": "on your prox and check them against uh the the ashes on public by Blue code so",
    "start": "2782520",
    "end": "2787800"
  },
  {
    "text": "it's not a perfect security measure because if someone has a remote code",
    "start": "2787800",
    "end": "2792920"
  },
  {
    "text": "execution and a back door they can change the hashes but if you have an update they have to keep up with all the",
    "start": "2792920",
    "end": "2798480"
  },
  {
    "text": "updates so that's not the best but it's it's a star and they're actually working",
    "start": "2798480",
    "end": "2804599"
  },
  {
    "text": "on secure boot uh right now and it should be available in in a future",
    "start": "2804599",
    "end": "2810000"
  },
  {
    "text": "release so that's good and of course they removed everything that was debug related so you don't have any DB stuff",
    "start": "2810000",
    "end": "2817559"
  },
  {
    "text": "or CLI commands anymore in the latest version so if you want to research proy",
    "start": "2817559",
    "end": "2822599"
  },
  {
    "text": "I really recommend you to go on the older image versions where you still have the debug information and uh GDB",
    "start": "2822599",
    "end": "2830640"
  },
  {
    "text": "support and we are still discussing with blueo and uh they they really consider",
    "start": "2830640",
    "end": "2836800"
  },
  {
    "text": "um implementing the separation between user and supervisor user Kel super separation because their kernel actually",
    "start": "2836800",
    "end": "2843520"
  },
  {
    "text": "supports that it's just a configuration variable they have to change compile time so they just have to recompile with",
    "start": "2843520",
    "end": "2850119"
  },
  {
    "text": "ring zero ring three separation and make sure the performance is still good with the current Hardware so I really hope",
    "start": "2850119",
    "end": "2856359"
  },
  {
    "text": "they are going to do that uh soon well that concludes the talk uh thank you",
    "start": "2856359",
    "end": "2862000"
  },
  {
    "start": "2860000",
    "end": "2911000"
  },
  {
    "text": "very much for attending and uh if you have any question I'd be happy to",
    "start": "2862000",
    "end": "2867079"
  },
  {
    "text": "[Applause]",
    "start": "2869820",
    "end": "2874250"
  },
  {
    "text": "answer yep how long did it take you to analyze it oh yeah so how long did it",
    "start": "2875640",
    "end": "2880680"
  },
  {
    "text": "take me I forgot to say um so a bit more than two months full-time uh but Stefan",
    "start": "2880680",
    "end": "2886839"
  },
  {
    "text": "duver one of my colleagues did actually work on the file system a few years before so I think if we take everything",
    "start": "2886839",
    "end": "2893559"
  },
  {
    "text": "into account is probably like 3 months full-time so kind of long but not too",
    "start": "2893559",
    "end": "2900160"
  },
  {
    "text": "long another question yeah you said that the Java does its own to",
    "start": "2900160",
    "end": "2908760"
  },
  {
    "start": "2911000",
    "end": "2959000"
  },
  {
    "text": "yes um I didn't really have the time to check",
    "start": "2912400",
    "end": "2917839"
  },
  {
    "text": "that you you might want to check yeah oh oh yes that's well uh one of the",
    "start": "2918000",
    "end": "2925240"
  },
  {
    "text": "things blue Cod told me when at first I was like yeah but you know you have access to Blue Cod it's not really easy to get one um $200 on",
    "start": "2925240",
    "end": "2934920"
  },
  {
    "text": "eBay okay it's old one it's a small one but you get you get the code and at some",
    "start": "2935280",
    "end": "2940760"
  },
  {
    "text": "point you could Google for the right string and get access to your public FTP server where you had a few images with",
    "start": "2940760",
    "end": "2947520"
  },
  {
    "text": "very recent versions they kind of deleted them since but don't know why uh",
    "start": "2947520",
    "end": "2954920"
  },
  {
    "text": "but yeah no getting access to Blue is not really hard if you and well you can get access to some appliances if you",
    "start": "2954920",
    "end": "2960920"
  },
  {
    "start": "2959000",
    "end": "3007000"
  },
  {
    "text": "know people it's quite easy any other question",
    "start": "2960920",
    "end": "2967960"
  },
  {
    "text": "yep to feed",
    "start": "2975160",
    "end": "2978838"
  },
  {
    "text": "data I did no I didn't really try feeding um did mostly reverse",
    "start": "2980480",
    "end": "2986720"
  },
  {
    "text": "engineering to get an overview of everything but we didn't try fing fizzing or looking for for stuff so",
    "start": "2986720",
    "end": "2997319"
  },
  {
    "text": "any other question well thank you very much",
    "start": "2997319",
    "end": "3004360"
  },
  {
    "text": "[Applause]",
    "start": "3004360",
    "end": "3009659"
  }
]