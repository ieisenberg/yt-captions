[
  {
    "text": "[Music]",
    "start": "1180",
    "end": "14720"
  },
  {
    "text": "hello everyone welcome to our talk i'm leo from tungsten security shower lab",
    "start": "16240",
    "end": "23760"
  },
  {
    "text": "now i am my colleague user kai will share our research on different behavior",
    "start": "23760",
    "end": "29760"
  },
  {
    "text": "optimizations in lvm",
    "start": "29760",
    "end": "34480"
  },
  {
    "text": "we are researchers from tencent security shelf lab to better understand the right landscape",
    "start": "35280",
    "end": "42000"
  },
  {
    "text": "and protect our user data and infrastructure our lab focus",
    "start": "42000",
    "end": "47039"
  },
  {
    "text": "on applied research in both software and software this work is conducted by usakai the way",
    "start": "47039",
    "end": "56840"
  },
  {
    "text": "myanmar all of us are members of foundational security search team",
    "start": "56840",
    "end": "62079"
  },
  {
    "text": "intensive security shangri-la okay let's start here is a quiz",
    "start": "62079",
    "end": "70159"
  },
  {
    "text": "the read function cause the internal rate function to get the content of the internal array",
    "start": "70159",
    "end": "77759"
  },
  {
    "text": "there is an array bond check in function internal read",
    "start": "77840",
    "end": "82880"
  },
  {
    "text": "a known point will be returned if the bond check failed but the rate",
    "start": "82880",
    "end": "88880"
  },
  {
    "text": "function doesn't check the return value of internal rate function",
    "start": "88880",
    "end": "94320"
  },
  {
    "text": "it should trigger a non-point reference on event behavior if we try to read out about",
    "start": "94320",
    "end": "102799"
  },
  {
    "text": "now we compiled a program with clan and they crashed as expected",
    "start": "103200",
    "end": "109680"
  },
  {
    "text": "however if we compile the same program with high optimization level",
    "start": "109680",
    "end": "116240"
  },
  {
    "text": "surprisingly the program will not crash",
    "start": "116240",
    "end": "121758"
  },
  {
    "text": "and were even offered an auto boundary result what happened",
    "start": "121920",
    "end": "129119"
  },
  {
    "text": "to better understand it let's enter a world of undefined behavior and see the magic",
    "start": "129119",
    "end": "135599"
  },
  {
    "text": "of airbn",
    "start": "135599",
    "end": "138560"
  },
  {
    "text": "era's talk we will first introduce backgrounds of undefined behavior in rvn",
    "start": "140640",
    "end": "147520"
  },
  {
    "text": "then we will discuss how to detect uneven behavior and analyze and",
    "start": "147520",
    "end": "153680"
  },
  {
    "text": "analyze some of the bugs we found we will demonstrate our exploit on",
    "start": "153680",
    "end": "159840"
  },
  {
    "text": "chromium using a non-pointy reference undefined behavior bug at last we'll give our suggestions and",
    "start": "159840",
    "end": "167440"
  },
  {
    "text": "make a conclusion what's undefined behavior according to",
    "start": "167440",
    "end": "174239"
  },
  {
    "text": "the c standard its behavior upon use of non-portable",
    "start": "174239",
    "end": "179280"
  },
  {
    "text": "or inaudible program construct or uranium state the standard imposes",
    "start": "179280",
    "end": "186720"
  },
  {
    "text": "no requirements for undefined behavior the c and c plus class has a lots of",
    "start": "186720",
    "end": "194480"
  },
  {
    "text": "unifying behavior true hunger 211 different behaviors",
    "start": "194480",
    "end": "199519"
  },
  {
    "text": "appear in c 17 standard and more new undefined behaviors will be",
    "start": "199519",
    "end": "206239"
  },
  {
    "text": "added in the near future",
    "start": "206239",
    "end": "212239"
  },
  {
    "text": "here are some common undefined behaviors such as non-pointed reference",
    "start": "212239",
    "end": "218319"
  },
  {
    "text": "divided by zero array index other boundary excess oversized shift",
    "start": "218319",
    "end": "225360"
  },
  {
    "text": "initialized usage spine injury flow most of them are typical security",
    "start": "225360",
    "end": "232720"
  },
  {
    "text": "issues what is lvm airbn is a popular",
    "start": "232720",
    "end": "240319"
  },
  {
    "text": "compiler infrastructure it provides look language independent and",
    "start": "240319",
    "end": "247040"
  },
  {
    "text": "talking independent intermediate per representations it gives us",
    "start": "247040",
    "end": "253200"
  },
  {
    "text": "high quality libraries including optimizations analysis code generators",
    "start": "253200",
    "end": "261040"
  },
  {
    "text": "profiling and debugging most of us may be more familiar with",
    "start": "261040",
    "end": "267280"
  },
  {
    "text": "their support some project products such as clan the lvm nation compiler it",
    "start": "267280",
    "end": "275360"
  },
  {
    "text": "builds a large number of products including chromium firefox android framework and rs kernel",
    "start": "275360",
    "end": "285680"
  },
  {
    "text": "the rvm also has undefined behaviors they form into three categories first of",
    "start": "286080",
    "end": "292160"
  },
  {
    "text": "them are true undefined behavior it represents serious errors like dividing by zero or",
    "start": "292160",
    "end": "299360"
  },
  {
    "text": "illegal memory access the second are called on depth they",
    "start": "299360",
    "end": "304800"
  },
  {
    "text": "usually come from initialized value a third kind of poison",
    "start": "304800",
    "end": "311039"
  },
  {
    "text": "they are introduced by compilers themselves they are used to support speculative",
    "start": "311039",
    "end": "317440"
  },
  {
    "text": "executions we will discuss on finding true",
    "start": "317440",
    "end": "322639"
  },
  {
    "text": "undefined behaviors in a speech",
    "start": "322639",
    "end": "326960"
  },
  {
    "text": "what's the consequence of executing undefined behavior actually",
    "start": "328000",
    "end": "334639"
  },
  {
    "text": "anything is possible maybe nothing wrong happens the program",
    "start": "334639",
    "end": "341120"
  },
  {
    "text": "works as expected or it may fail to compile",
    "start": "341120",
    "end": "346560"
  },
  {
    "text": "or can output an unpredictable or nonsensical result",
    "start": "346560",
    "end": "353600"
  },
  {
    "text": "or even it will crash",
    "start": "353600",
    "end": "357520"
  },
  {
    "text": "sometimes crash means a security probability occurs for example undefined behavior such as",
    "start": "360319",
    "end": "368319"
  },
  {
    "text": "array index outbound error will be to memory corrections directory",
    "start": "368319",
    "end": "375919"
  },
  {
    "text": "a normal console sequence thread is more hidden sending chats",
    "start": "375919",
    "end": "381199"
  },
  {
    "text": "may be removed if it contains undifferent behavioral code so we need to find ways to detect",
    "start": "381199",
    "end": "389120"
  },
  {
    "text": "the undefined behavior next part we'll discuss the detections",
    "start": "389120",
    "end": "398479"
  },
  {
    "text": "existing detections methods can be classified into two categories",
    "start": "400080",
    "end": "406800"
  },
  {
    "text": "static analysis under dynamic analysis",
    "start": "406800",
    "end": "411680"
  },
  {
    "text": "dynamic analysis are usually fuzzy various standard titles help a lot",
    "start": "411840",
    "end": "418240"
  },
  {
    "text": "for instance undefined behavior sanitizer can detect shift errors sent into flow",
    "start": "418240",
    "end": "426400"
  },
  {
    "text": "non-point the reference and so on address and titles can detect other",
    "start": "426400",
    "end": "432880"
  },
  {
    "text": "bound excess memory corrections memories and titles can detect",
    "start": "432880",
    "end": "438080"
  },
  {
    "text": "initialized usage but these tools require appropriate",
    "start": "438080",
    "end": "445759"
  },
  {
    "text": "test cases to trigger a box",
    "start": "445759",
    "end": "450880"
  },
  {
    "text": "as presidential analysis compilers will output warnings for definite undefined behavior with",
    "start": "450880",
    "end": "458560"
  },
  {
    "text": "double error flag we can stop compiling when undefined behavior has been detected",
    "start": "458560",
    "end": "465039"
  },
  {
    "text": "static analysis trolls like cleanstack and allies and coverity has a lot of checkers",
    "start": "465039",
    "end": "472639"
  },
  {
    "text": "to scan the specific undefined behavior",
    "start": "472639",
    "end": "478160"
  },
  {
    "text": "but these tools only detect a fraction of undefined behavior and they don't",
    "start": "478160",
    "end": "484560"
  },
  {
    "text": "make the best use of compilers analysis on programs",
    "start": "484560",
    "end": "492560"
  },
  {
    "text": "is there any simple but effective way to detect undefined behavior",
    "start": "492560",
    "end": "499680"
  },
  {
    "text": "let's come back to quiz for inspiration i december look executable and fine",
    "start": "500319",
    "end": "508319"
  },
  {
    "text": "there are no bunch of branches in functioning at all",
    "start": "508319",
    "end": "514800"
  },
  {
    "text": "the outdoor read value has already been fetched we are still very",
    "start": "514959",
    "end": "521518"
  },
  {
    "text": "confused what happened we dumped the lvm intermediate",
    "start": "521519",
    "end": "528760"
  },
  {
    "text": "representations to take a deep look we found the above checking",
    "start": "528760",
    "end": "534000"
  },
  {
    "text": "instruction is missing in function read even before it is in line to function",
    "start": "534000",
    "end": "539839"
  },
  {
    "text": "main so we should focus on function read",
    "start": "539839",
    "end": "545760"
  },
  {
    "text": "after comparing oil of the two different optimization process",
    "start": "545760",
    "end": "552800"
  },
  {
    "text": "with front line the bond checking instructions are removed in optimization",
    "start": "552800",
    "end": "559760"
  },
  {
    "text": "path called combining redundant instructions",
    "start": "559760",
    "end": "565600"
  },
  {
    "text": "this path is used to remove redundant instructions",
    "start": "566720",
    "end": "573360"
  },
  {
    "text": "when loading address which comes from a select instruction the non-point",
    "start": "573519",
    "end": "580560"
  },
  {
    "text": "branch will be abandoned rpm from the list undefined behavior bar",
    "start": "580560",
    "end": "588080"
  },
  {
    "text": "when analyzing the program but they don't tell you",
    "start": "588080",
    "end": "594800"
  },
  {
    "text": "let's simply fold it what's the words an outer bound excess vulnerability",
    "start": "595920",
    "end": "604000"
  },
  {
    "text": "appears due to less optimizations",
    "start": "604000",
    "end": "608880"
  },
  {
    "text": "what do we learn from the quiz the key point is the mvm actually the undefined behavior",
    "start": "610399",
    "end": "620160"
  },
  {
    "text": "but they don't just don't tell the programmers they tend to optimize ultima only find",
    "start": "620160",
    "end": "628160"
  },
  {
    "text": "behavior called themselves and sometimes even create security vulnerabilities",
    "start": "628160",
    "end": "636000"
  },
  {
    "text": "since erie is capable to find lots of unfair behavior why not",
    "start": "636880",
    "end": "643120"
  },
  {
    "text": "just use its fundings",
    "start": "643120",
    "end": "647839"
  },
  {
    "text": "let's go back to the combined redundant instruction optimization parts",
    "start": "648560",
    "end": "654720"
  },
  {
    "text": "we can add hooks here so that we can check we only five behavior happens",
    "start": "654720",
    "end": "662720"
  },
  {
    "text": "we can use local clan to compile the program and find the undefined behavior",
    "start": "663120",
    "end": "669920"
  },
  {
    "text": "box you can try to mean that this detection",
    "start": "669920",
    "end": "675360"
  },
  {
    "text": "is a little limited as only a non-point reference in select",
    "start": "675360",
    "end": "681360"
  },
  {
    "text": "instruction can be found so we should add more hooks is a little",
    "start": "681360",
    "end": "689279"
  },
  {
    "text": "bit challenging to locate where to do instrumentations lvm has a large code base of",
    "start": "689279",
    "end": "697040"
  },
  {
    "text": "over 6 million lines it's hard to read them all another",
    "start": "697040",
    "end": "704720"
  },
  {
    "text": "problem is that the different kinds of undefined behavior are mixed up together",
    "start": "704720",
    "end": "710880"
  },
  {
    "text": "we have to distinguish the true undefined behavior that has securities with impact",
    "start": "710880",
    "end": "719600"
  },
  {
    "text": "our method is to combine sorcery with manual experiments",
    "start": "723040",
    "end": "730160"
  },
  {
    "text": "we focus on finding undefined behavior that has secrets thread it can be",
    "start": "730160",
    "end": "736160"
  },
  {
    "text": "divided into two categories the first kind of box",
    "start": "736160",
    "end": "742839"
  },
  {
    "text": "appears when program schematics are changed incorrectly",
    "start": "742839",
    "end": "748639"
  },
  {
    "text": "the second kind are securing verbiage themselves",
    "start": "748639",
    "end": "754720"
  },
  {
    "text": "we start with the first case inspired by the previous increase",
    "start": "755040",
    "end": "762959"
  },
  {
    "text": "we first focus on select instructions these are some cosmetics where",
    "start": "762959",
    "end": "770240"
  },
  {
    "text": "undefined behavior will be folded in select instructions",
    "start": "770240",
    "end": "775680"
  },
  {
    "text": "listing optimizations will change the control flow graph by removing undefined behavioral",
    "start": "775680",
    "end": "784160"
  },
  {
    "text": "instructions branch instruction is similar to select",
    "start": "784839",
    "end": "789920"
  },
  {
    "text": "instruction if a branch contains undefined behavior it will be removed",
    "start": "789920",
    "end": "797120"
  },
  {
    "text": "if a deleting branch is used for extension check it will lead to your security box",
    "start": "797120",
    "end": "804560"
  },
  {
    "text": "another approach is to find undefined behavior but that are security vulnerabilities than",
    "start": "804959",
    "end": "811279"
  },
  {
    "text": "sales you first think of a reindeer",
    "start": "811279",
    "end": "816560"
  },
  {
    "text": "underground box they have powerful but they need to",
    "start": "816560",
    "end": "823680"
  },
  {
    "text": "precise a static analysis and a hard model we can choose other appropriate",
    "start": "823680",
    "end": "830560"
  },
  {
    "text": "type of undefined behavior such as individual flow and uninitialized usage",
    "start": "830560",
    "end": "839120"
  },
  {
    "text": "it will have difficulties in locating events on different behavior handling code",
    "start": "839120",
    "end": "845120"
  },
  {
    "text": "we can write one of the vulnerable test cases to help us understand ovm's code",
    "start": "845120",
    "end": "854079"
  },
  {
    "text": "for example in function test we write an integral flow station check",
    "start": "855120",
    "end": "863360"
  },
  {
    "text": "while the comparison cont contains undefined behavior if clan compile it in default",
    "start": "863360",
    "end": "871199"
  },
  {
    "text": "configuration the sentence check works",
    "start": "871199",
    "end": "876480"
  },
  {
    "text": "but in a higher occupation optimization level the control flow graph of the program",
    "start": "877199",
    "end": "884079"
  },
  {
    "text": "has changed the integral flow will be removed",
    "start": "884079",
    "end": "891199"
  },
  {
    "text": "how does this happen in rpm when x plus y will be",
    "start": "892480",
    "end": "900320"
  },
  {
    "text": "integral flow undefined behavior the comparison between x plus y and",
    "start": "900320",
    "end": "908880"
  },
  {
    "text": "x can be simplified to comparisons between y and zero",
    "start": "908880",
    "end": "917519"
  },
  {
    "text": "if we added instrumentation here we can find potential integral flow bugs",
    "start": "917519",
    "end": "927040"
  },
  {
    "text": "this is a normal initial flowcast the function test will compute the shift",
    "start": "927040",
    "end": "935279"
  },
  {
    "text": "results of inputs in constants logical result should be zero when the",
    "start": "935279",
    "end": "942079"
  },
  {
    "text": "input is there x and y are both zero",
    "start": "942079",
    "end": "947600"
  },
  {
    "text": "but if we perform level three optimizations the output is nonzero",
    "start": "948880",
    "end": "957519"
  },
  {
    "text": "if we observe the program more carefully we will find there is this an oversized",
    "start": "958720",
    "end": "966639"
  },
  {
    "text": "shift undefined behavior we can check binary operations of on",
    "start": "966639",
    "end": "974240"
  },
  {
    "text": "depth to find the potential overflow",
    "start": "974240",
    "end": "979759"
  },
  {
    "text": "in addition the arithmetic operations based on depth sometimes returns",
    "start": "979759",
    "end": "986160"
  },
  {
    "text": "abnormal values and it may cause on the basis too",
    "start": "986160",
    "end": "997680"
  },
  {
    "text": "we can use the similar method to find our vm's handling code instrumentation",
    "start": "997680",
    "end": "1004800"
  },
  {
    "text": "here help us find unplanned behavior folded in binary instructions",
    "start": "1004800",
    "end": "1012639"
  },
  {
    "text": "after sharing our detection method you may wonder the false positive rate",
    "start": "1015680",
    "end": "1022000"
  },
  {
    "text": "of the log we can automatically filter false",
    "start": "1022000",
    "end": "1027678"
  },
  {
    "text": "positives brought by poison undefined behavior and select the cases where we can",
    "start": "1027679",
    "end": "1035199"
  },
  {
    "text": "control input to trigger the ongoing behavior side effect",
    "start": "1035199",
    "end": "1041839"
  },
  {
    "text": "then most of the output should be the true undefined behavior we anticipate",
    "start": "1041839",
    "end": "1049839"
  },
  {
    "text": "okay let me sum up our detection approach first we dig into our vm internals",
    "start": "1051600",
    "end": "1059919"
  },
  {
    "text": "to figure out lvm's undefined behavior handling code and add instrumentations",
    "start": "1059919",
    "end": "1067280"
  },
  {
    "text": "to lock the undefined behavior invert found by rpm then",
    "start": "1067280",
    "end": "1074799"
  },
  {
    "text": "we can use hooked clan to compile programs to scan the undefined behavior",
    "start": "1074799",
    "end": "1081840"
  },
  {
    "text": "box after filtering false positives we can start",
    "start": "1081840",
    "end": "1087200"
  },
  {
    "text": "to construct proper concept to trigger the bugs",
    "start": "1087200",
    "end": "1092480"
  },
  {
    "text": "we have to use all tools to scan chromium and under frameworks and for lots of bugs",
    "start": "1092480",
    "end": "1100640"
  },
  {
    "text": "now i will hand it over to the hero share the detection result with us",
    "start": "1100640",
    "end": "1109840"
  },
  {
    "text": "third i will analyze several typical vulnerabilities from biology",
    "start": "1111200",
    "end": "1118720"
  },
  {
    "text": "cve 20204 file 2 is about in live dfi",
    "start": "1120240",
    "end": "1127440"
  },
  {
    "text": "which is the library to add psii file in this function it will check",
    "start": "1127440",
    "end": "1135039"
  },
  {
    "text": "whether the set of variable e plus size of a final shot would overflow the check works well",
    "start": "1135039",
    "end": "1143360"
  },
  {
    "text": "in multiple wires but lrvm thinks it is a defined behavior it will",
    "start": "1143360",
    "end": "1150320"
  },
  {
    "text": "be simplified to our comparison between find out a fan shot on the vehicle",
    "start": "1150320",
    "end": "1155919"
  },
  {
    "text": "which is always true as a result the pharmacy check is",
    "start": "1155919",
    "end": "1161919"
  },
  {
    "text": "removed and it gave rise to hip overflow in memory cooking function",
    "start": "1161919",
    "end": "1169760"
  },
  {
    "text": "this theory is not an isolated there are many similar history effects",
    "start": "1171120",
    "end": "1177440"
  },
  {
    "text": "in the same library as shown in figure the root task of this",
    "start": "1177440",
    "end": "1183600"
  },
  {
    "text": "cv is conducting sanity check and define behavioral code llvm",
    "start": "1183600",
    "end": "1191360"
  },
  {
    "text": "will remove them as a result none of the effective affinity checks",
    "start": "1191360",
    "end": "1197280"
  },
  {
    "text": "will take effect photoshop using any fun behavior to do",
    "start": "1197280",
    "end": "1205679"
  },
  {
    "text": "sanity check set to be a popular programming paradigm on the works while many of the",
    "start": "1205679",
    "end": "1212080"
  },
  {
    "text": "competitors but they need two vulnerabilities in modern family of",
    "start": "1212080",
    "end": "1217120"
  },
  {
    "text": "mind commanders thanks a lot more importantly this old library",
    "start": "1217120",
    "end": "1223600"
  },
  {
    "text": "labs are few weather deals for instance live exi was first released",
    "start": "1223600",
    "end": "1230720"
  },
  {
    "text": "in 2002 but is still integrated in android media",
    "start": "1230720",
    "end": "1236080"
  },
  {
    "text": "from work now okay let's here these are called team",
    "start": "1236080",
    "end": "1244000"
  },
  {
    "text": "leaders here a popular open source two-dimensional graphic level here is the integer overflow in",
    "start": "1244000",
    "end": "1252080"
  },
  {
    "text": "multiplication we found this part in transient content",
    "start": "1252080",
    "end": "1257120"
  },
  {
    "text": "the volume of undefined behavior the overflow the set",
    "start": "1257120",
    "end": "1262320"
  },
  {
    "text": "is used to allocate password which leads to a hit buffer overflow availability",
    "start": "1262320",
    "end": "1270080"
  },
  {
    "text": "roomba one zero seven one three 1 1 is also is here it is similar to the",
    "start": "1272240",
    "end": "1278960"
  },
  {
    "text": "fifth the set function is the return value of the internal graph function to do an r operation the internal gas",
    "start": "1278960",
    "end": "1287679"
  },
  {
    "text": "function a non-pointer will be returned into the bottle check file",
    "start": "1287679",
    "end": "1293600"
  },
  {
    "text": "non-pointer directions is the undefined behavior lrvm will remove the watch so that the",
    "start": "1293600",
    "end": "1301120"
  },
  {
    "text": "check will take effect we can cause a lot of impact to trigger an auto spawn right",
    "start": "1301120",
    "end": "1309679"
  },
  {
    "text": "groombap107638 silence is in blink the rendering engine useful by premium",
    "start": "1313480",
    "end": "1320240"
  },
  {
    "text": "is a conjunction of a jl camera query est it will use the return value observer",
    "start": "1320240",
    "end": "1327600"
  },
  {
    "text": "function to target document function in canvas",
    "start": "1327600",
    "end": "1332640"
  },
  {
    "text": "function it will check the host type for design to return non-pointer",
    "start": "1332640",
    "end": "1338320"
  },
  {
    "text": "or cut the host to html convert alignment and return its address",
    "start": "1338320",
    "end": "1346080"
  },
  {
    "text": "call from now pointer is a defined behavior llvm will remove the branch so that we",
    "start": "1346080",
    "end": "1353600"
  },
  {
    "text": "can confuse or screen canvas with html thermos",
    "start": "1353600",
    "end": "1358840"
  },
  {
    "text": "alignment to diamond treated the experience the life of undivided behavior",
    "start": "1358840",
    "end": "1365600"
  },
  {
    "text": "we select one of those vulnerabilities to run on flight we successfully achieve",
    "start": "1365600",
    "end": "1373440"
  },
  {
    "text": "remote code exclusion on chrome browser with a single undefined behavior",
    "start": "1373440",
    "end": "1381440"
  },
  {
    "text": "this is phone back 1 076 three phase five shared in the previous",
    "start": "1384559",
    "end": "1390640"
  },
  {
    "text": "slide an offspring canvas is incorrectly passed to html terms alignment",
    "start": "1390640",
    "end": "1399200"
  },
  {
    "text": "here is the desirable port of this function once object is html current limit",
    "start": "1399200",
    "end": "1407440"
  },
  {
    "text": "rx minus 9 0 refers to its mic",
    "start": "1407440",
    "end": "1412480"
  },
  {
    "text": "the screen canvas is smaller than html terminal alignment when the type of",
    "start": "1412480",
    "end": "1418799"
  },
  {
    "text": "confusion occurs rx minus 900 will skip it and pointing to the memory foam",
    "start": "1418799",
    "end": "1427360"
  },
  {
    "text": "after tab combine occurs thinking correctly factor value will be passed to form",
    "start": "1429200",
    "end": "1435120"
  },
  {
    "text": "instruction so we can control oip",
    "start": "1435120",
    "end": "1440158"
  },
  {
    "text": "the detailed relationship is shown on the fly to control the value of vb",
    "start": "1442240",
    "end": "1449600"
  },
  {
    "text": "we should be able to set the value of y at first that's the job of hip function",
    "start": "1449600",
    "end": "1458880"
  },
  {
    "text": "of green canvas is a garbage reflected objects in blink link use oil plant magnitude of",
    "start": "1458880",
    "end": "1466159"
  },
  {
    "text": "implanted objects in oil paint objects are divided into",
    "start": "1466159",
    "end": "1471919"
  },
  {
    "text": "four categories they go to different batteries depending on your size",
    "start": "1471919",
    "end": "1479039"
  },
  {
    "text": "the screen canvas is located in the normal page areas",
    "start": "1479039",
    "end": "1486720"
  },
  {
    "text": "the size of of string canvas is c0 so we have to find objects located at",
    "start": "1486720",
    "end": "1493440"
  },
  {
    "text": "the 64 to 128 bytes but hit",
    "start": "1493440",
    "end": "1498960"
  },
  {
    "text": "smallmouth analysis another requirement if the value of y can be controlled",
    "start": "1498960",
    "end": "1507679"
  },
  {
    "text": "how to fund it we can use color2l to find objects located in the red membrane track",
    "start": "1509120",
    "end": "1517520"
  },
  {
    "text": "then we have to review the source code to confirm whether the value of white white can be",
    "start": "1517520",
    "end": "1523679"
  },
  {
    "text": "controlled fortunately we found the idb",
    "start": "1523679",
    "end": "1530559"
  },
  {
    "text": "open db request object that made this requirement the version number of",
    "start": "1530559",
    "end": "1537679"
  },
  {
    "text": "the object is at the right division assembly controlled",
    "start": "1537679",
    "end": "1543600"
  },
  {
    "text": "when we specifically occupy the memory the ras radiator can be successfully",
    "start": "1543600",
    "end": "1550799"
  },
  {
    "text": "controlled but to control rip we still need to mix the heat layout",
    "start": "1550799",
    "end": "1559520"
  },
  {
    "text": "we can try to inspire the 32-bit tool 32-bit room has a smaller memory address",
    "start": "1559520",
    "end": "1567360"
  },
  {
    "text": "space if great technique can make it easier to control eip",
    "start": "1567360",
    "end": "1574799"
  },
  {
    "text": "the idb open db requests objects under 32 bit no longer with our request",
    "start": "1576640",
    "end": "1584240"
  },
  {
    "text": "we need to find the new filterable object in 32-bit cool using the theme13 method",
    "start": "1584240",
    "end": "1593679"
  },
  {
    "text": "response of live audio contact object the last number of the object is either",
    "start": "1593679",
    "end": "1601279"
  },
  {
    "text": "the red position and can be controlled but the one offline audio contact is",
    "start": "1601279",
    "end": "1608320"
  },
  {
    "text": "created another audio handler object will be created with conjunction the following graph",
    "start": "1608320",
    "end": "1617279"
  },
  {
    "text": "should memory layout audio handler is a terrorism object",
    "start": "1617279",
    "end": "1624840"
  },
  {
    "text": "called",
    "start": "1624840",
    "end": "1627840"
  },
  {
    "text": "so we can create an object of the same site as offline audio",
    "start": "1634000",
    "end": "1640320"
  },
  {
    "text": "content next to also screen convert",
    "start": "1640320",
    "end": "1645440"
  },
  {
    "text": "phrase and now this memory is managed by the free list create",
    "start": "1645440",
    "end": "1652320"
  },
  {
    "text": "offline audio content it will use the previously phrased memory",
    "start": "1652320",
    "end": "1659600"
  },
  {
    "text": "we found the media theme object with the same site as offline audio context",
    "start": "1660880",
    "end": "1668399"
  },
  {
    "text": "after his function we can successfully control the value of eax reduction",
    "start": "1668399",
    "end": "1676158"
  },
  {
    "text": "after that we can use his drive technique to control eip the object are drive",
    "start": "1677440",
    "end": "1684960"
  },
  {
    "text": "under 32 bit extreme the spread structure is shown as in the",
    "start": "1684960",
    "end": "1691360"
  },
  {
    "text": "figure after traveling the what the relative",
    "start": "1691360",
    "end": "1696799"
  },
  {
    "text": "the value of rx reactor will be sleeve then it will be dereferenced and go back",
    "start": "1696799",
    "end": "1704000"
  },
  {
    "text": "to slip so that we can smoothly change the ip",
    "start": "1704000",
    "end": "1709200"
  },
  {
    "text": "whatever value we want next step is to do rop but it needs another but",
    "start": "1709200",
    "end": "1716960"
  },
  {
    "text": "to leave base address of promote.data can we find our approach to a field code",
    "start": "1716960",
    "end": "1724240"
  },
  {
    "text": "in memory without help of equality vulnerabilities",
    "start": "1724240",
    "end": "1729919"
  },
  {
    "text": "g8 is varying certain ones just protection of aslr and eup by exploiting",
    "start": "1730720",
    "end": "1738240"
  },
  {
    "text": "the behavior of just in time convention the purpose of git is to produce a few",
    "start": "1738240",
    "end": "1745440"
  },
  {
    "text": "volumes the input program typically contains numerous",
    "start": "1745440",
    "end": "1751200"
  },
  {
    "text": "content values that can be uranically difficult as code",
    "start": "1751200",
    "end": "1758240"
  },
  {
    "text": "for example we write such a piece of js code",
    "start": "1759520",
    "end": "1765120"
  },
  {
    "text": "when it is compiled into assembly called ign it will look like this",
    "start": "1765120",
    "end": "1772960"
  },
  {
    "text": "if we jump to git code without fact the code will become weird some of the",
    "start": "1772960",
    "end": "1780399"
  },
  {
    "text": "dates will be filled with f code this means that we can control the activities code",
    "start": "1780399",
    "end": "1787200"
  },
  {
    "text": "by changing the date now let's make some changes to the",
    "start": "1787200",
    "end": "1794240"
  },
  {
    "text": "original df code you can see the generated assembly code",
    "start": "1794240",
    "end": "1799840"
  },
  {
    "text": "is as follows after we add our site to this code",
    "start": "1799840",
    "end": "1806840"
  },
  {
    "text": "a8 and the three five are merged into a al-35 structure",
    "start": "1806840",
    "end": "1814000"
  },
  {
    "text": "the following three nine zero is treated as three knob instructions this means",
    "start": "1814000",
    "end": "1821440"
  },
  {
    "text": "that three bytes in every file fast can be used in coding structure",
    "start": "1821440",
    "end": "1827360"
  },
  {
    "text": "we can use those instructions to construct a child code in this way our shell code is",
    "start": "1827360",
    "end": "1834799"
  },
  {
    "text": "located at the curfew memory area it has created saturated constructs into",
    "start": "1834799",
    "end": "1841440"
  },
  {
    "text": "the memory and changes the eip radiator to the address then we can expose our gel tool",
    "start": "1841440",
    "end": "1851840"
  },
  {
    "text": "there are many tricks in git screen be careful of the encoding of s4",
    "start": "1852480",
    "end": "1858640"
  },
  {
    "text": "operation xor ex instructions only need one bite",
    "start": "1858640",
    "end": "1864399"
  },
  {
    "text": "it's a perfect guide as all other relief curves only",
    "start": "1864399",
    "end": "1870640"
  },
  {
    "text": "two bites but can't be used as shell coat we can change the format of xor",
    "start": "1870640",
    "end": "1877919"
  },
  {
    "text": "statements to select the suitable widget",
    "start": "1877919",
    "end": "1883039"
  },
  {
    "text": "here are the dynamo weights by the probe of table version",
    "start": "1885039",
    "end": "1890559"
  },
  {
    "text": "79.",
    "start": "1890840",
    "end": "1893840"
  },
  {
    "text": "we successfully appealed a unified behavior path to achieve remote productivity",
    "start": "1921440",
    "end": "1929039"
  },
  {
    "text": "finally its conclusions firstly we have some suggestions for",
    "start": "1931600",
    "end": "1937600"
  },
  {
    "text": "programmer to understand and defend behavior and residents and defend behavior",
    "start": "1937600",
    "end": "1944640"
  },
  {
    "text": "for compiler developers to provide more accurate and useful undefined",
    "start": "1944640",
    "end": "1950080"
  },
  {
    "text": "behavioral warnings to programmers for fund hunters",
    "start": "1950080",
    "end": "1955840"
  },
  {
    "text": "you've got more useful and defined behavioral informed from camaro",
    "start": "1955840",
    "end": "1963519"
  },
  {
    "text": "in this talk firstly we illustrate how to utilize competitors ability",
    "start": "1963519",
    "end": "1970000"
  },
  {
    "text": "to fund unifying behavior paths then we find several birthday parts",
    "start": "1970000",
    "end": "1976320"
  },
  {
    "text": "captured by a different behavior finally sharing anyone's room",
    "start": "1976320",
    "end": "1981360"
  },
  {
    "text": "exploration techniques",
    "start": "1981360",
    "end": "1984960"
  },
  {
    "text": "special sense to feel medio and electronics",
    "start": "1987279",
    "end": "1992080"
  },
  {
    "text": "thanks",
    "start": "1993480",
    "end": "1996480"
  }
]