[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hello everyone you are an Islander FG and welcome to API induced SSR F how",
    "start": "0",
    "end": "7500"
  },
  {
    "text": "applepay scattered vulnerabilities across the web by Joshua Maddux if you'll give me just a moment I have some",
    "start": "7500",
    "end": "13650"
  },
  {
    "text": "announcements that you should visit the blackhat Arsenal and which is in the business hall inside of Oceanside and",
    "start": "13650",
    "end": "19890"
  },
  {
    "text": "the shoreline ballrooms in this hotel if you would please silence your phones I",
    "start": "19890",
    "end": "24990"
  },
  {
    "text": "would appreciate that as well and also lunch is in Bayside ad from 1:00 to 2:30 and with that give us a round of",
    "start": "24990",
    "end": "32610"
  },
  {
    "text": "applause for Josh romantics please [Applause]",
    "start": "32610",
    "end": "39240"
  },
  {
    "start": "34000",
    "end": "514000"
  },
  {
    "text": "alright so I'm going to lay something on the table right now this talk is about software architecture that I'm not",
    "start": "39469",
    "end": "45750"
  },
  {
    "text": "apologizing for it now you may be wondering how in the world does this guy get in here software talks of boring and I would",
    "start": "45750",
    "end": "52140"
  },
  {
    "text": "kind of agree with you I used to be a software engineer and sort of still AM architecture talks are especially boring",
    "start": "52140",
    "end": "57539"
  },
  {
    "text": "but most of those are on the positive side you build something it scales it makes money and so now you're an expert",
    "start": "57539",
    "end": "64619"
  },
  {
    "text": "but I'm going to look at the negative side weird is Sark written software architecture go horribly wrong obviously",
    "start": "64619",
    "end": "70530"
  },
  {
    "text": "when it scatters vulnerabilities across the web so first a bit about me I'm",
    "start": "70530",
    "end": "76590"
  },
  {
    "text": "Joshua Maddux I have a math degree but I've been a web developer for a while then I got started with bug bounties and",
    "start": "76590",
    "end": "82560"
  },
  {
    "text": "that shifted me towards security now at pkc I've been doing a lot of security work for clients we're located in",
    "start": "82560",
    "end": "88590"
  },
  {
    "text": "Huntington Beach about a four-hour drive from here you can visit us at PK CEO all",
    "start": "88590",
    "end": "98549"
  },
  {
    "text": "right so now for an overview be able to talk first I'll go over a couple of terms combines two for my criticism of",
    "start": "98549",
    "end": "104520"
  },
  {
    "text": "Apple pay then I'll do some demos the focus is on finding a large number of",
    "start": "104520",
    "end": "109770"
  },
  {
    "text": "easy to exploit bugs so the demos will be quick and pre-recorded these demos are all against my own redeployments of",
    "start": "109770",
    "end": "115950"
  },
  {
    "text": "open source stuff that has already been fixed I won't be attacking any live ecommerce systems since most of my",
    "start": "115950",
    "end": "121110"
  },
  {
    "text": "disclosures to those are still private lastly I'll have some general principles for designing better api's like you may",
    "start": "121110",
    "end": "127409"
  },
  {
    "text": "have picked up I'm going to go pretty hard on an architectural decision made by Apple here in discussing the security of software",
    "start": "127409",
    "end": "133340"
  },
  {
    "text": "architecture people tend to bring up vague principles and notions of who's responsible for what but I'm going to",
    "start": "133340",
    "end": "138350"
  },
  {
    "text": "back myself up with concrete examples better yet these examples should be educational sing if you want to start",
    "start": "138350",
    "end": "145640"
  },
  {
    "text": "testing SSR F yourself so on two definitions so there's this existing",
    "start": "145640",
    "end": "152000"
  },
  {
    "text": "concept of a class break it's the idea that software tends to be vulnerable in multiple places at once past research",
    "start": "152000",
    "end": "158720"
  },
  {
    "text": "has focused on cases where you might have a single weak piece of code say sequel injection in the CMS plugin or",
    "start": "158720",
    "end": "163820"
  },
  {
    "text": "heartbleed it gets built and deployed to a lot of places and when it's discovered there's this huge rush to get your",
    "start": "163820",
    "end": "169190"
  },
  {
    "text": "instance patched you could frame a lot of the talks at this conference as hard as class breaks and currently there's a",
    "start": "169190",
    "end": "175280"
  },
  {
    "text": "lot of tooling to help companies stay on top of this but there's another level",
    "start": "175280",
    "end": "180650"
  },
  {
    "text": "I've that I've seen a lot of this year it's not new but is becoming more common a company will create an API or spec at",
    "start": "180650",
    "end": "187490"
  },
  {
    "text": "this top level that isn't itself vulnerable but in some way induces several people to write vulnerable code",
    "start": "187490",
    "end": "193270"
  },
  {
    "text": "some familiar examples maybe the JWT none algorithm or the problems that have",
    "start": "193270",
    "end": "198320"
  },
  {
    "text": "popped up in recent sam'l implementations so if you're looking for sheer volume of vulnerabilities thinking at this top level can be a lucrative",
    "start": "198320",
    "end": "204530"
  },
  {
    "text": "place to start I couldn't find an existing general term for this upper",
    "start": "204530",
    "end": "209630"
  },
  {
    "text": "level so I'm going to call it an inductive weakness and here's the definition it's a design flaw that",
    "start": "209630",
    "end": "215120"
  },
  {
    "text": "encourages multiple parties to write vulnerable code with a similar exploit pattern across differing software sets",
    "start": "215120",
    "end": "220670"
  },
  {
    "text": "for example we may say an API induces SS rfv vulnerabilities or that an API has",
    "start": "220670",
    "end": "226880"
  },
  {
    "text": "an inductive S or surahs' weakness this is wordy it might not seem entirely justified right now that should make",
    "start": "226880",
    "end": "233300"
  },
  {
    "text": "sense once we get to them demos and now for a refresher of the other term SS or",
    "start": "233300",
    "end": "239480"
  },
  {
    "text": "F it's been the run for a while and stands for server-side request forgery a lot of people confuse this term with",
    "start": "239480",
    "end": "244880"
  },
  {
    "text": "CSRF client-side request forgery in practice very different bugs aiming",
    "start": "244880",
    "end": "251360"
  },
  {
    "text": "similarity is kind of unfortunate SS RF is a bit of a hot topic right now because it's a lot easier to exploit",
    "start": "251360",
    "end": "258290"
  },
  {
    "text": "than it used to be we'll see why towards the end of this section so start off",
    "start": "258290",
    "end": "264919"
  },
  {
    "text": "with say this attacker on the top left wants to interact with an internal facing server on the bottom right but the",
    "start": "264919",
    "end": "271610"
  },
  {
    "text": "attacker doesn't have direct access they can only go through the public facing server displayed in the middle the",
    "start": "271610",
    "end": "278090"
  },
  {
    "text": "attacker then tries to find some weakness in that public facing server in the past people have taken the URL and",
    "start": "278090",
    "end": "283849"
  },
  {
    "text": "put it somewhere like the host header or the body of some XML in order to get the server to hit the desired location there",
    "start": "283849",
    "end": "290060"
  },
  {
    "text": "are a lot of different ways that you can go about trying to get that URL and try to get the server to edit but the goal",
    "start": "290060",
    "end": "295490"
  },
  {
    "text": "is to relay a request through the server in the middle as if it were a proxy typically we only call it s s or F if",
    "start": "295490",
    "end": "301880"
  },
  {
    "text": "the attacker can use the proxy like behavior to access or harm something internal if you can get stuff back it's",
    "start": "301880",
    "end": "311810"
  },
  {
    "text": "easier to exploit and called transparent s SRF otherwise it's called blind SSRS the exploit ability is tied to how",
    "start": "311810",
    "end": "318620"
  },
  {
    "text": "permissive the target server is and how much sensitive stuff is available internally there at the bottom right so",
    "start": "318620",
    "end": "324050"
  },
  {
    "text": "what can you do with this pattern turns out it's quite powerful right now because of the defaults in popular cloud",
    "start": "324050",
    "end": "330530"
  },
  {
    "text": "environments this has been the pro most fruitful approach for me so far Google Cloud and a TBS of both exposed",
    "start": "330530",
    "end": "337389"
  },
  {
    "text": "credentials by default on 169.254 dot 169.254 depending on the permission is",
    "start": "337389",
    "end": "343759"
  },
  {
    "text": "assigned to the instance this token can often access private storage buckets or other stuff it's basically allows you to",
    "start": "343759",
    "end": "349490"
  },
  {
    "text": "if you can hit this and get the token you can act as if you are that instance there's even been some pretty credible",
    "start": "349490",
    "end": "355550"
  },
  {
    "text": "speculation that the AWS equivalent of this endpoint was the first step that enabled the recent capital 1 breach but",
    "start": "355550",
    "end": "361759"
  },
  {
    "text": "I never go that far I just stop here and report it the other thing to note is that on screen you see a curl command",
    "start": "361759",
    "end": "367969"
  },
  {
    "text": "that in itself isn't demonstrative vulnerability because I'm already inside the box in this case it's when you can",
    "start": "367969",
    "end": "373969"
  },
  {
    "text": "externally tell the server to hit a URL and give you back the token that or something else sensitive or cause some",
    "start": "373969",
    "end": "380870"
  },
  {
    "text": "harm that it becomes SSRS also to the name of them straight this slide is also",
    "start": "380870",
    "end": "386210"
  },
  {
    "text": "not an inductive weakness AWS and GCP aren't causing people to write weak code they're just widening the consequences",
    "start": "386210",
    "end": "392000"
  },
  {
    "text": "that people do but what this slide does demonstrate is that if you want to do s srf on someone using AWS or GCE right",
    "start": "392000",
    "end": "398839"
  },
  {
    "text": "now you have a very easy payload to start with so what are some other easy things",
    "start": "398839",
    "end": "404090"
  },
  {
    "text": "to try with SSRS people have already criticized abs and google cloud a lot for providing Yui Center you saw in the",
    "start": "404090",
    "end": "409790"
  },
  {
    "text": "previous slide there have even been some rumors AWS is in the process of improving things in response to the capital one breach so I won't dwell on",
    "start": "409790",
    "end": "416510"
  },
  {
    "text": "that criticism too much follow URLs or another interesting thing to try especially on older sacks",
    "start": "416510",
    "end": "421630"
  },
  {
    "text": "the other interesting thing is that if you can proxy through get requests you can do reflected XSS you just have to",
    "start": "421630",
    "end": "427160"
  },
  {
    "text": "point to a URL with some malicious HTML and JavaScript though then it's technically not necessary because the",
    "start": "427160",
    "end": "433490"
  },
  {
    "text": "attacks are an area is different it is a fun thing to keep in mind though because if you're trying to get true SS or F and",
    "start": "433490",
    "end": "439850"
  },
  {
    "text": "you're just like not getting through on anything but it's on a get request you still have this other option if you want to then you know try to submit for a bug",
    "start": "439850",
    "end": "446390"
  },
  {
    "text": "bounty or something but aside from these the general first step is just to try a bunch of ports and different payloads",
    "start": "446390",
    "end": "452090"
  },
  {
    "text": "and see if you could try something that couch DB or memcached running internally there's even I believe I didn't link to",
    "start": "452090",
    "end": "457730"
  },
  {
    "text": "it in the slides but there is a there's an F they're a bunch of s cheat sheets out there that you can run through but what",
    "start": "457730",
    "end": "465440"
  },
  {
    "text": "if you want to dig deeper there's been a lot of past work on cross protocol attacks via SSRS gopher URLs are",
    "start": "465440",
    "end": "470840"
  },
  {
    "text": "interesting because you can inject a wide range of characters that will eventually go into the CCP stream so you",
    "start": "470840",
    "end": "475910"
  },
  {
    "text": "have a lot of room for interacting with other protocols like TCP or SMTP there are a lot of different ways to get there though sometimes it might be necessary",
    "start": "475910",
    "end": "482900"
  },
  {
    "text": "to set up a server that redirects the protocol you want other times you might just go with an HTTP URL and exploit a",
    "start": "482900",
    "end": "488480"
  },
  {
    "text": "bug and the URL parser probably the coolest work on this is the orange site awk a new era of SSRS however libraries",
    "start": "488480",
    "end": "495290"
  },
  {
    "text": "are getting stricter and a lot of the easy stuff has been fixed this is a really fun area of research flow and I expect there will be additional changes",
    "start": "495290",
    "end": "500600"
  },
  {
    "text": "discovered in the future but for now in case there were any gaps in my explanations does anyone have any",
    "start": "500600",
    "end": "506510"
  },
  {
    "text": "questions on s Seraph there are microphones ok so now we'll get on to",
    "start": "506510",
    "end": "516020"
  },
  {
    "start": "514000",
    "end": "649000"
  },
  {
    "text": "the meat of the talk we'll combine our tube term suits describe the applepay web before diving",
    "start": "516020",
    "end": "523370"
  },
  {
    "text": "in it's important to note that Apple pay is composed of three different technologies under one brand you may be",
    "start": "523370",
    "end": "529010"
  },
  {
    "text": "familiar with a bio with Apple pay button which appears on both in app and Apple pay web there's also the upcoming Apple pay card",
    "start": "529010",
    "end": "535130"
  },
  {
    "text": "but I have no idea whether that's into all of this but I'm only criticizing",
    "start": "535130",
    "end": "543530"
  },
  {
    "text": "Apple pay web since it has some problematic requirements for merchants so say you have an online store within",
    "start": "543530",
    "end": "551120"
  },
  {
    "text": "nomenclature we would call you a merchant what does your website need to do to support Apple pay web when the",
    "start": "551120",
    "end": "557270"
  },
  {
    "text": "user clicks to buy with Apple pay button Safari spits out a validation URL which is on one of about 30 apple.com",
    "start": "557270",
    "end": "563060"
  },
  {
    "text": "subdomains then in your client-side JavaScript you have to send the",
    "start": "563060",
    "end": "568430"
  },
  {
    "text": "validation URL to your back-end you might be able to see where this is going then your server needs to grab an",
    "start": "568430",
    "end": "574730"
  },
  {
    "text": "exception from that validation URL and return it to the client this is all a bit wordy though and it's much better is",
    "start": "574730",
    "end": "580310"
  },
  {
    "text": "a diagram luckily I already have one so this should look familiar following the typical flow as a merchant",
    "start": "580310",
    "end": "587420"
  },
  {
    "text": "your server in the middle would take in that URL to know which apple server to connect to to grab a merchant session",
    "start": "587420",
    "end": "594130"
  },
  {
    "text": "but depending on your infrastructure if you implement in the way apple originally documented or deployed there",
    "start": "594130",
    "end": "599960"
  },
  {
    "text": "are example code by default this is a really dangerous functionalities bad the",
    "start": "599960",
    "end": "605510"
  },
  {
    "text": "employee isn't ideal for an attacker who wants to SS or since the validation URL is user-supplied they're basically doing",
    "start": "605510",
    "end": "611810"
  },
  {
    "text": "their load balancing in the user's browser I've asked Apple for some justification of this requirement and after several",
    "start": "611810",
    "end": "617750"
  },
  {
    "text": "months I have no idea why it is still there in the original WWDC talk there's a vague explanation of handling the case",
    "start": "617750",
    "end": "625010"
  },
  {
    "text": "where merchant is compromised but that doesn't explain why they allow the client-side to choose between validation",
    "start": "625010",
    "end": "630080"
  },
  {
    "text": "URLs instead of having just one and ultimately they're providing a whole new way for a merchant for attackers to",
    "start": "630080",
    "end": "636410"
  },
  {
    "text": "compromise merchants instead of protecting them Google pays certainly doesn't do this some merchants were",
    "start": "636410",
    "end": "643580"
  },
  {
    "text": "safer one reason or another that we'll get some allegations later right now it's time for a demo so these demos are",
    "start": "643580",
    "end": "655490"
  },
  {
    "start": "649000",
    "end": "958000"
  },
  {
    "text": "not particularly deep attack pains but besides demonstrating breadth of attack surface they should be illuminating if",
    "start": "655490",
    "end": "661790"
  },
  {
    "text": "you're interested in testing us or after yourself just please if you try this at home only try it against sites",
    "start": "661790",
    "end": "667190"
  },
  {
    "text": "you have permission and report what you find don't go snooping against the private storage buckets so this first",
    "start": "667190",
    "end": "674210"
  },
  {
    "text": "demo is against the Google Chrome labs project that was deployed publicly via App Engine but not in the production environment",
    "start": "674210",
    "end": "679700"
  },
  {
    "text": "I don't point this out to shame Google or the developer instead I want to demonstrate that even talented qualified",
    "start": "679700",
    "end": "686690"
  },
  {
    "text": "people on modern South force acts were affected by the Apple pay design flaw so",
    "start": "686690",
    "end": "696980"
  },
  {
    "text": "here's my own redeployment of this project so we can see what I did against Google's appointment as you can see has",
    "start": "696980",
    "end": "704450"
  },
  {
    "text": "a bye with Apple pay oops",
    "start": "704450",
    "end": "708160"
  },
  {
    "text": "okay so as you can see it has a bi with Apple pay button so it's getting an",
    "start": "723750",
    "end": "728970"
  },
  {
    "text": "error because my deployment isn't Floy configured but our attack will still",
    "start": "728970",
    "end": "734310"
  },
  {
    "text": "work so if we go to the network tab this is a fairly basic way of attacking this",
    "start": "734310",
    "end": "741689"
  },
  {
    "text": "but if we go to the network tab click it again we can see the requests going out to this endpoint gulp validate it's",
    "start": "741689",
    "end": "747329"
  },
  {
    "text": "pretty small there but it's in red it's getting an error but we can still use it to attack this site so normally you",
    "start": "747329",
    "end": "754170"
  },
  {
    "text": "attack might attack this with something like burp or MIT and proxy but I'm going to go old school with curl first we",
    "start": "754170",
    "end": "759209"
  },
  {
    "text": "clean up some headers then we modify the valide from URL just so we can see",
    "start": "759209",
    "end": "764250"
  },
  {
    "text": "conveniently replay different values so first I'll try something basic I'll just",
    "start": "764250",
    "end": "770009"
  },
  {
    "text": "try to hit example comm to see if we can proxy through the endpoint I'm hitting it'll take a couple tries here so just",
    "start": "770009",
    "end": "782910"
  },
  {
    "text": "practicing out to example comm like this isn't necessary but it is a useful first step in testing",
    "start": "782910",
    "end": "788430"
  },
  {
    "text": "this stuff and now for the actual SSRS let's try to hit the instance metadata",
    "start": "788430",
    "end": "795149"
  },
  {
    "text": "server and remember this is deployed as is very similarly to how it was so it",
    "start": "795149",
    "end": "801120"
  },
  {
    "text": "looks like we're getting through on a Google Cloud box and then by feeding and metadata at Google about internal we can",
    "start": "801120",
    "end": "808620"
  },
  {
    "text": "confirm that that's the case so from here it's just a matter of browsing directories and seeing what works who",
    "start": "808620",
    "end": "814649"
  },
  {
    "text": "are whatever reason /v 1 beta 1 is less strict about headers and /v 1 I have no",
    "start": "814649",
    "end": "819660"
  },
  {
    "text": "idea why that is but we can keep browsing and now we're in the directory",
    "start": "819660",
    "end": "826050"
  },
  {
    "text": "at the gooey Center we can see what permissions sbox has access to and even",
    "start": "826050",
    "end": "835170"
  },
  {
    "text": "retrieve a working token for whatever reason I put a black box on part of it but it is expired by now and that",
    "start": "835170",
    "end": "841259"
  },
  {
    "text": "instance is offline so for the next demo we'll be attacking my own deployment of",
    "start": "841259",
    "end": "846899"
  },
  {
    "text": "a page that was on WebKit org the issue was fixed but I deployed the vulnerable version form a few months ago on wkj",
    "start": "846899",
    "end": "853319"
  },
  {
    "text": "maddox calm for the purposes of the sim oh don't worry though might have is offline right now importantly just",
    "start": "853319",
    "end": "859990"
  },
  {
    "text": "like the previous demo the code on web katorga was written by a well qualified developer at a large tech company this",
    "start": "859990",
    "end": "865870"
  },
  {
    "text": "may even be more convincing because it demonstrates that even developers Apple were not immune and the original POC I",
    "start": "865870",
    "end": "871690"
  },
  {
    "text": "sent to Apple I just grabbed an ABS so can I have this employed on Google cloud though so it'll be a chance to try",
    "start": "871690",
    "end": "876790"
  },
  {
    "text": "something a little bit different instead of just instance metadata all right so",
    "start": "876790",
    "end": "882790"
  },
  {
    "text": "here you can see my own deployment of the page that was on the code that used to be on would be a org I love this art",
    "start": "882790",
    "end": "888940"
  },
  {
    "text": "that this button here looks promising to so it turns out we can see I also see a",
    "start": "888940",
    "end": "895240"
  },
  {
    "text": "merchant validation requests happening here once we open up the network tab it's different code from the previous",
    "start": "895240",
    "end": "900940"
  },
  {
    "text": "example you can see merchant validation dot PHP instead of the note input from the other one but the attack will be",
    "start": "900940",
    "end": "907540"
  },
  {
    "text": "similar because of the requirements imposed by Apple for this Apple pay in point so we'll proceed much like we did",
    "start": "907540",
    "end": "914589"
  },
  {
    "text": "with previous one",
    "start": "914589",
    "end": "917459"
  },
  {
    "text": "okay so we can try to hit and system at it but we're not gonna have any luck",
    "start": "923990",
    "end": "931389"
  },
  {
    "text": "because the request methods aren't lining it with might in our favor this is something you'll probably encounter if you try to if you test us for",
    "start": "931540",
    "end": "938150"
  },
  {
    "text": "yourself but we can see that we do get proxying out to example comm so this is still promising and point to try it so",
    "start": "938150",
    "end": "944540"
  },
  {
    "text": "at this point it's just a matter of trying different payloads it turns out",
    "start": "944540",
    "end": "950570"
  },
  {
    "text": "that because of this is just a classic an old-school PHP F just a classic file URL will work so this is a pretty deeply",
    "start": "950570",
    "end": "958850"
  },
  {
    "start": "958000",
    "end": "1174000"
  },
  {
    "text": "seeded architectural problem and I reported it to Apple back in February but what has Apple done to mitigate this",
    "start": "958850",
    "end": "964340"
  },
  {
    "text": "so far just documentation changes importantly the documentation used to pretty much walk you through the process",
    "start": "964340",
    "end": "970340"
  },
  {
    "text": "of adding a vulnerability to your website now the documentation has this little warning box they seem really",
    "start": "970340",
    "end": "976820"
  },
  {
    "text": "optimistic about how many developers actually read those however if you do it",
    "start": "976820",
    "end": "985250"
  },
  {
    "text": "happen across these warning boxes and read them carefully the instructions are now valid but for the existing clients I",
    "start": "985250",
    "end": "991190"
  },
  {
    "text": "can't imagine too many developers or constantly visiting the documentation to check what warnings were added so and",
    "start": "991190",
    "end": "997460"
  },
  {
    "text": "here's the disclosure timeline there's not much here the main thing is that I reported this back in February and",
    "start": "997460",
    "end": "1002830"
  },
  {
    "text": "haven't seen any meaningful architectural changes my original proposal I asked for Apple to deprecated",
    "start": "1002830",
    "end": "1008050"
  },
  {
    "text": "the current API and face in a new version that didn't have these problems but they haven't engaged with me on any discussion on that they've just updated",
    "start": "1008050",
    "end": "1014890"
  },
  {
    "text": "documentation and removed their bad example code a couple of weeks ago I even gave them a heads up to say hey I'm",
    "start": "1014890",
    "end": "1020710"
  },
  {
    "text": "speaking at black hat and DEF CON can you give merchants a heads up but again ghosted so we'll get back to this later",
    "start": "1020710",
    "end": "1027430"
  },
  {
    "text": "but for now how would you mitigate this my favorite mitigation so far has been",
    "start": "1027430",
    "end": "1032560"
  },
  {
    "text": "to just remove Apple pay support entirely this probably won't work for everyone though but for everyone else",
    "start": "1032560",
    "end": "1039670"
  },
  {
    "text": "it's important to manually parse the validation you're all and check the host against apples list it's kind of ugly to",
    "start": "1039670",
    "end": "1045699"
  },
  {
    "text": "copy and paste 30 domains into some config file but that's pretty much what you have to do a couple of payment",
    "start": "1045700",
    "end": "1051280"
  },
  {
    "text": "providers have to do this out of the box though so far I'm just aware of stripe and Braintree so if you're using one of those two",
    "start": "1051280",
    "end": "1056950"
  },
  {
    "text": "you're safe that's been a fairly big hurdle and trying to claim boundaries on this stuff is that a lot of sites use rep and",
    "start": "1056950",
    "end": "1062019"
  },
  {
    "text": "Braintree and then it's stripe and Braintree handling the validation but it really depends on the payment process or",
    "start": "1062019",
    "end": "1067389"
  },
  {
    "text": "some payment processors leave this up to individual ecommerce sites to decide how to do but what if you want to defend",
    "start": "1067389",
    "end": "1076149"
  },
  {
    "text": "more broadly against s asura for my experience very few people are protecting egress traffic but when they do it provides a pretty big speed bump",
    "start": "1076149",
    "end": "1082450"
  },
  {
    "text": "that may make more or less sense depending on the size of your organization and just how your network",
    "start": "1082450",
    "end": "1087820"
  },
  {
    "text": "is laid out Netflix has also done some great work and proactively defended against the gooey Center in AWS there's",
    "start": "1087820",
    "end": "1094600"
  },
  {
    "text": "I believe a blog post they talked at blackhat recently and there's a lot of",
    "start": "1094600",
    "end": "1100179"
  },
  {
    "text": "good things to look into there but in general though it's just good to look take a look at what ports are open locally on your servers and add",
    "start": "1100179",
    "end": "1105820"
  },
  {
    "text": "passwords even though the network layer is theoretically protecting them but on",
    "start": "1105820",
    "end": "1111610"
  },
  {
    "text": "the other hand here's some stuff I've seen that has some holes in it reg exes are tricky and I wouldn't recommend them as a mitigation for this issue that",
    "start": "1111610",
    "end": "1122799"
  },
  {
    "text": "besides the point in the slide I would also discourage against relying on a check to start at Apple comm because",
    "start": "1122799",
    "end": "1128230"
  },
  {
    "text": "then if there is an open redirect anywhere on any Apple comm sub-domain an attacker can use the open redirects to",
    "start": "1128230",
    "end": "1134200"
  },
  {
    "text": "circumvent your check narrowing the check to specifically allow the 30 Apple pay related subdomains is better there's",
    "start": "1134200",
    "end": "1141610"
  },
  {
    "text": "no way of getting around it really if you have to support Apple way pay web you really should go to apples up the data documentation and read through the",
    "start": "1141610",
    "end": "1147610"
  },
  {
    "text": "warnings they've added the architecture is still bad but at least the documentation doesn't walk you through the process of adding of vulnerability",
    "start": "1147610",
    "end": "1153970"
  },
  {
    "text": "to your website so that wraps up the specific specifics on Apple pay web in",
    "start": "1153970",
    "end": "1159610"
  },
  {
    "text": "our first inductive weakness I'll have more to say on Apple towards the end of this talk but in the next section I'll",
    "start": "1159610",
    "end": "1164799"
  },
  {
    "text": "move on to another pattern that can induce vulnerabilities but for now does anyone have any questions nope okay so",
    "start": "1164799",
    "end": "1174909"
  },
  {
    "start": "1174000",
    "end": "1314000"
  },
  {
    "text": "move on to web hooks so a lot of people are creating web hooks right now weapons are they're becoming a fairly",
    "start": "1174909",
    "end": "1181059"
  },
  {
    "text": "comment in the useful way to tie the web together there are a lot of them out there right now and nobody seems to agree on how they should be implemented",
    "start": "1181059",
    "end": "1187110"
  },
  {
    "text": "so what's a web book here's an example from Twilio it's a way of telling us your service a",
    "start": "1187110",
    "end": "1194500"
  },
  {
    "text": "service to call your URL as soon as an event happens here you can see I have",
    "start": "1194500",
    "end": "1199540"
  },
  {
    "text": "Jay Maddux comm / SMS registry so Twilio will send me an HTTP request every time",
    "start": "1199540",
    "end": "1204850"
  },
  {
    "text": "it has a new SMS message so how have people been exploiting web hooks so far",
    "start": "1204850",
    "end": "1210550"
  },
  {
    "text": "they've gone after the sender of the web hook in this case Twilio it's pretty",
    "start": "1210550",
    "end": "1215950"
  },
  {
    "text": "similar to how I would test Apple pay instead of entering your own server as the URL you put the instance method you",
    "start": "1215950",
    "end": "1221230"
  },
  {
    "text": "put the AWS instance metadata IP or try to preview some cross protocol stuff this is just a general challenge of",
    "start": "1221230",
    "end": "1227110"
  },
  {
    "text": "implementing web hooks and it's not an inductive weakness because there's no central party inducing this pattern web",
    "start": "1227110",
    "end": "1232870"
  },
  {
    "text": "hooks are just really useful for a lot of businesses luckily lots of people have already exploited web hooks in this",
    "start": "1232870",
    "end": "1238030"
  },
  {
    "text": "way and you can find a lot of bug bounty write-ups where people who did exactly this I haven't done much of this though",
    "start": "1238030",
    "end": "1243580"
  },
  {
    "text": "I've done something a little bit different what have I been doing I applied the same inductive weakness",
    "start": "1243580",
    "end": "1249400"
  },
  {
    "text": "model that worked with Apple pay instead of going after the sender I look for an attack surface the sender might be inducing in the listeners and it turns",
    "start": "1249400",
    "end": "1261610"
  },
  {
    "text": "out for Twilio this approach works it works well how do you how do the receivers of the web hooks know that the",
    "start": "1261610",
    "end": "1267400"
  },
  {
    "text": "message is coming from phileo coolio provides an H Mac similarly to how most web hooks are done they call it a",
    "start": "1267400",
    "end": "1273400"
  },
  {
    "text": "signature and that probably will make the cryptographers in the room cringe but conceptually it does kind of help to think of it as a signature assuming that",
    "start": "1273400",
    "end": "1281380"
  },
  {
    "text": "the receivers actually check it it's not too bad but when I took a look most related open source projects failed to",
    "start": "1281380",
    "end": "1287800"
  },
  {
    "text": "look at the H Mac so add these unauthenticated endpoints lying around once I started poking around it became",
    "start": "1287800",
    "end": "1293740"
  },
  {
    "text": "apparent why two of those examples didn't check the HTML either and setting it aside the bad example code this seems",
    "start": "1293740",
    "end": "1300610"
  },
  {
    "text": "to indicate an architectural problem I argued that since the easiest way to receive an HM ACK authenticated web hook",
    "start": "1300610",
    "end": "1305890"
  },
  {
    "text": "is to disregard the H Mac that is this is a design flaw and specific kind would",
    "start": "1305890",
    "end": "1311260"
  },
  {
    "text": "would obviously be inductive weakness and now for a demo so this demo is",
    "start": "1311260",
    "end": "1317140"
  },
  {
    "start": "1314000",
    "end": "1648000"
  },
  {
    "text": "slightly different in that the example code was not on a public facing server so I didn't get any credentials from tolya themselves or any bounties",
    "start": "1317140",
    "end": "1324450"
  },
  {
    "text": "but it is still worth showing because it was copied and pasted elsewhere so here's where I started just looking at",
    "start": "1324450",
    "end": "1331139"
  },
  {
    "text": "the repo for Twilio example code on the readme there's no a warning to protect your webhooks but it turns out the example code still",
    "start": "1331139",
    "end": "1337379"
  },
  {
    "text": "doesn't do that even further yeah we can",
    "start": "1337379",
    "end": "1344940"
  },
  {
    "text": "see dem go down there and check that there's no authentication but going even",
    "start": "1344940",
    "end": "1350399"
  },
  {
    "text": "further it takes in this media URL parameter and that looks promising no way knowing what we know the example web",
    "start": "1350399",
    "end": "1356730"
  },
  {
    "text": "book is even quite generous because it fetches the contents of that URL and puts them in a public facing directory",
    "start": "1356730",
    "end": "1362369"
  },
  {
    "text": "so you might be able to guess where this is going alright so in this next tab",
    "start": "1362369",
    "end": "1367710"
  },
  {
    "text": "we'll have the code deployed as is on the Google cloud instance it tells us to send a text message but we don't need to",
    "start": "1367710",
    "end": "1374279"
  },
  {
    "text": "do that this one book is unaffiliated so we use the snippet I have on the right and pretend we're Twilio sending over to",
    "start": "1374279",
    "end": "1380399"
  },
  {
    "text": "CSV attachment but because of the URL we sent the server dumps an access token",
    "start": "1380399",
    "end": "1386100"
  },
  {
    "text": "into that public directory and by the way this access token also expired long",
    "start": "1386100",
    "end": "1391980"
  },
  {
    "text": "ago so here's the disclosure timeline fairly similar to the Apple pay one but",
    "start": "1391980",
    "end": "1401639"
  },
  {
    "text": "you might be wondering our toilet those competitors doing any better or worse because it in general when you look at",
    "start": "1401639",
    "end": "1408359"
  },
  {
    "text": "when you try to say oh this has a design flaw here it's good to look at what else",
    "start": "1408359",
    "end": "1414210"
  },
  {
    "text": "what else is out there but turns out with no it's much worse not only is the",
    "start": "1414210",
    "end": "1420029"
  },
  {
    "text": "architecture similar we have to contact support to even get them to send you an H Mac and even if you do contact support",
    "start": "1420029",
    "end": "1425909"
  },
  {
    "text": "some of the roads don't have that option I don't have much to say about this it's pretty much beyond hope so let's move on",
    "start": "1425909",
    "end": "1432809"
  },
  {
    "text": "to another web hook so get lab does something similar to Twilio but with the",
    "start": "1432809",
    "end": "1438539"
  },
  {
    "text": "static token instead of an H Mac so the implementation is a bit different but the same level of optimism is there I",
    "start": "1438539",
    "end": "1444690"
  },
  {
    "text": "don't have the static token pasted here because it's just simply a value that could be used to configure with good lab",
    "start": "1444690",
    "end": "1449820"
  },
  {
    "text": "and listen to you but here I have the body of the advances that they send over",
    "start": "1449820",
    "end": "1455059"
  },
  {
    "text": "and here's the here's just the body of it neighborhood so you might be able to",
    "start": "1455059",
    "end": "1464279"
  },
  {
    "text": "imagine what I did I simply found a server that was receiving this book as usual they were not validating that",
    "start": "1464279",
    "end": "1471179"
  },
  {
    "text": "it was coming from gitlab I won't name names but it's a web book I can't imagine that what I found was the only",
    "start": "1471179",
    "end": "1476309"
  },
  {
    "text": "unauthenticated one and this in this case I'm trying to make the case for",
    "start": "1476309",
    "end": "1481999"
  },
  {
    "text": "that this is actually a design flaw in the way get live is sending Web books or",
    "start": "1481999",
    "end": "1488009"
  },
  {
    "text": "in just the general architecture that web hooks are being sent by a lot of parties right now but in any case I",
    "start": "1488009",
    "end": "1495149"
  },
  {
    "text": "decided to tweak the sample push event and send it over right off the bat I was able to modify the repository URL and",
    "start": "1495149",
    "end": "1501389"
  },
  {
    "text": "trigger extra builds for arbitrary repos I didn't have any success to playing arbitrary code but I did find one nasty",
    "start": "1501389",
    "end": "1507719"
  },
  {
    "text": "consequence it turned out I could store XSS payloads the script would execute whenever someone clicked a particular",
    "start": "1507719",
    "end": "1514109"
  },
  {
    "text": "button on their build bottom page and you don't need to login to anything to do this attack so this really epitomizes",
    "start": "1514109",
    "end": "1519719"
  },
  {
    "text": "the point that I want to make so far we've been asking what vulnerabilities are in the software but an equally important question is what",
    "start": "1519719",
    "end": "1525629"
  },
  {
    "text": "vulnerabilities is a software create once you start asking this question you can find lots of stuff and this is yeah",
    "start": "1525629",
    "end": "1536989"
  },
  {
    "text": "all right so these next few slides are gonna be a bit text-heavy but I am making an aggressive claim here that",
    "start": "1536989",
    "end": "1542639"
  },
  {
    "text": "nearly everyone is doing web hooks wrong so it's necessary to lay out some alternatives this is probably the",
    "start": "1542639",
    "end": "1547859"
  },
  {
    "text": "coolest of the least practical one you can encrypt your Web books your outgoing web hooks with an authenticated cipher the upside is that in the act of",
    "start": "1547859",
    "end": "1555389"
  },
  {
    "text": "trying to use the information you send them people will inevitably be authenticating it but the downside is there aren't a lot of good libraries for",
    "start": "1555389",
    "end": "1561899"
  },
  {
    "text": "authenticating this especially when you look at what's available across different programming languages so this",
    "start": "1561899",
    "end": "1567570"
  },
  {
    "text": "isn't very practical right now but we can always dream so going a little more",
    "start": "1567570",
    "end": "1576029"
  },
  {
    "text": "practical you can do it platen Square do if you limit your web bug payload to an event ID and expect the receiver to",
    "start": "1576029",
    "end": "1581999"
  },
  {
    "text": "fetch it you're really not inducing much attack surface the downside is that this does require an extra request for the",
    "start": "1581999",
    "end": "1587789"
  },
  {
    "text": "listener to you you do also have to worry about path traversal if that idea Ximena you are segment this a lot of people will forget",
    "start": "1587789",
    "end": "1594090"
  },
  {
    "text": "the encode data they inject into URLs but it is probably a good middle ground especially if you're just if your API",
    "start": "1594090",
    "end": "1601649"
  },
  {
    "text": "just doesn't have a whole lot of attack surface in general yeah",
    "start": "1601649",
    "end": "1607909"
  },
  {
    "text": "but the least aggressive approach this is probably the most practical it works for all four existing web books it's",
    "start": "1607909",
    "end": "1613740"
  },
  {
    "text": "just to be more proactive about making sure people use the H Mac most web books already do one testing request to ensure",
    "start": "1613740",
    "end": "1619980"
  },
  {
    "text": "the URL being registered is publicly reachable so it's not a huge change to do two requests instead it's then a",
    "start": "1619980",
    "end": "1627330"
  },
  {
    "text": "matter of policy to decide what you do if the URL appears on authenticated even if you just warn your customer that",
    "start": "1627330",
    "end": "1632970"
  },
  {
    "text": "still miles ahead of what other books are currently doing I'd really like to see what web hooks start doing this",
    "start": "1632970",
    "end": "1638760"
  },
  {
    "text": "since it's low risk and backwards compatible in a lot of cases all right",
    "start": "1638760",
    "end": "1648210"
  },
  {
    "text": "so a lot of this so far has been negative and then intentionally so but",
    "start": "1648210",
    "end": "1653340"
  },
  {
    "text": "there is an upside by designing an API to be defensive from the ground up you have a lot of ability to prevent vulnerable code from being written so",
    "start": "1653340",
    "end": "1660450"
  },
  {
    "text": "let's look at an API one API that didn't and one that did so Salesforce and",
    "start": "1660450",
    "end": "1666360"
  },
  {
    "text": "DynamoDB are very different products but there is an interesting area where they overlap they both have had to act as a",
    "start": "1666360",
    "end": "1672539"
  },
  {
    "text": "source of truth with some complicated business requirements piled on to the point that each had to influent a custom sequel like dialect but they went about",
    "start": "1672539",
    "end": "1679559"
  },
  {
    "text": "that in very different ways if you've ever contested a web app that uses Salesforce somewhere on the back",
    "start": "1679559",
    "end": "1685320"
  },
  {
    "text": "end hopefully this has been on your radar it's I've definitely gotten a lot of mileage out of it sometimes user",
    "start": "1685320",
    "end": "1691350"
  },
  {
    "text": "input propagates out to a place where you can inject into this API call much like you would do a sequel so how a",
    "start": "1691350",
    "end": "1697320"
  },
  {
    "text": "Salesforce try to mitigate this more documentation this is becoming a theme",
    "start": "1697320",
    "end": "1703730"
  },
  {
    "text": "at first this might seem to be inevitable given what Salesforce is required to do but when Amazon tackled",
    "start": "1704179",
    "end": "1710309"
  },
  {
    "text": "this they did something interesting demoed DynamoDB forces you to parameterize your precondition",
    "start": "1710309",
    "end": "1715620"
  },
  {
    "text": "expressions if you try to concatenate or I'll type in there it's treated as invalid syntax you have to put it into",
    "start": "1715620",
    "end": "1721500"
  },
  {
    "text": "the expression attribute values object there are other ways you can go about attacking these calls but they're a lot more limited than if",
    "start": "1721500",
    "end": "1727680"
  },
  {
    "text": "you could inject into the syntax itself this call is kind of cumbersome but I think it's a worthy trade-off given the",
    "start": "1727680",
    "end": "1733050"
  },
  {
    "text": "strength and protection this provides alright so now we'll get back to Apple",
    "start": "1733050",
    "end": "1744770"
  },
  {
    "start": "1737000",
    "end": "1983000"
  },
  {
    "text": "since they're probably the worst offender in this talk after two months of silence they came back with this as justification for their architecture",
    "start": "1744770",
    "end": "1751220"
  },
  {
    "text": "developers are responsible for implementing whatever security and networking best practices makes the most",
    "start": "1751220",
    "end": "1756690"
  },
  {
    "text": "sense for this environment and when you see this you think oh that's that is a perfectly reasonable statement and this",
    "start": "1756690",
    "end": "1762930"
  },
  {
    "text": "this is all true but the implication is that Apple has no culpability in this and that the responsibility is should",
    "start": "1762930",
    "end": "1771900"
  },
  {
    "text": "all be sifted on the developers but luckily I've got another great book if you've built a chaos Factory you can't",
    "start": "1771900",
    "end": "1778080"
  },
  {
    "text": "dodge responsibility for the chaos and you might be able to see the name there but both of these statements are right",
    "start": "1778080",
    "end": "1785000"
  },
  {
    "text": "developers should not introduce vulnerabilities but when you expect people to add an endpoint somewhere you",
    "start": "1785000",
    "end": "1791010"
  },
  {
    "text": "have some level of responsibility for the attack surface you create so but",
    "start": "1791010",
    "end": "1796800"
  },
  {
    "text": "that's a purely ethical argument and might not do a appeal to a lot of people so let's look at some of the financial",
    "start": "1796800",
    "end": "1802980"
  },
  {
    "text": "aspects of inductive weaknesses once research researchers start hunting for this stuff I imagine there will be a",
    "start": "1802980",
    "end": "1808290"
  },
  {
    "text": "large financial incentive for API designers to start thinking about it I got some nice bounties out of the Apple",
    "start": "1808290",
    "end": "1813870"
  },
  {
    "text": "pay issue and none of my work needed very different payloads and also none of those bounties were from Apple so I",
    "start": "1813870",
    "end": "1819810"
  },
  {
    "text": "think it's fair to assume that once the stock is over some people are going to start applying my approach also think of",
    "start": "1819810",
    "end": "1826200"
  },
  {
    "text": "where the new bounty hunters are going to report stuff you're seeing the most",
    "start": "1826200",
    "end": "1831450"
  },
  {
    "text": "embarrassing consequence here but what if my talk hadn't been accepted in any conferences there was a lot of private embarrassment as well Apple thing didn't",
    "start": "1831450",
    "end": "1839610"
  },
  {
    "text": "seem to think that SS Ark was much of an issue but the most websites are reported to did I wouldn't be surprised if the if",
    "start": "1839610",
    "end": "1845970"
  },
  {
    "text": "they held that against Apple for another angle in software I'll do them if",
    "start": "1845970",
    "end": "1851520"
  },
  {
    "text": "there's this concept of technical debt it's the idea that cutting corners early on has costs that accumulate as a project grows with regular tech debt the",
    "start": "1851520",
    "end": "1859500"
  },
  {
    "text": "fix is residing own code base so the interest rate is tied to the growth of your own code base both inductive weaknesses the fixes are",
    "start": "1859500",
    "end": "1866850"
  },
  {
    "text": "in your clients code and it's deployed all all sorts of different places so the interest rate is tied to how much",
    "start": "1866850",
    "end": "1872669"
  },
  {
    "text": "adoption your API sees at a certain point if you want to pay down the debt you can't just put push out an update to",
    "start": "1872669",
    "end": "1878429"
  },
  {
    "text": "your own code you have to contact your customers probably push out a braking braking change to your own API and then",
    "start": "1878429",
    "end": "1885750"
  },
  {
    "text": "tell your customers they have an API that they have a vulnerability because they chose you but here's really what",
    "start": "1885750",
    "end": "1892289"
  },
  {
    "text": "I'm asking for and it should be pretty cheap if you think about this stuff early I'd really like to like people to",
    "start": "1892289",
    "end": "1898890"
  },
  {
    "text": "start scrutinizing their example code because it gets deployed a lot more often than you'd think I mentioned in",
    "start": "1898890",
    "end": "1905309"
  },
  {
    "text": "response to the Apple pay issue one of the steps Apple took was just simply remove example code from their website",
    "start": "1905309",
    "end": "1911000"
  },
  {
    "text": "but I did see that example code deployed in various forms across different places",
    "start": "1911000",
    "end": "1916279"
  },
  {
    "text": "but in the process of scrutinizing your example code you may even discover inductive weaknesses if Apple had done",
    "start": "1916279",
    "end": "1922710"
  },
  {
    "text": "so I wouldn't had much to talk about also keep in mind that a lot of developers don't realize quite how",
    "start": "1922710",
    "end": "1928230"
  },
  {
    "text": "dangerous it is to hit an externally provided URL but if there's one thing I want people to take away from this talk",
    "start": "1928230",
    "end": "1933480"
  },
  {
    "text": "it's that documentation is no excuse for bad architecture and here are the long",
    "start": "1933480",
    "end": "1939149"
  },
  {
    "text": "form takeaways you can find a lot of vulnerabilities and owned by looking at an API finding a flaw and seeing who",
    "start": "1939149",
    "end": "1945510"
  },
  {
    "text": "integrates with it we need to place more security more scrutiny on security weaknesses that induce others to write",
    "start": "1945510",
    "end": "1951510"
  },
  {
    "text": "vulnerable code and while there's been a lot of recent work in unnecessary the software developer has a long way to go",
    "start": "1951510",
    "end": "1957450"
  },
  {
    "text": "and defensively coating around URLs all right here the adnan fence I'd like to",
    "start": "1957450",
    "end": "1962850"
  },
  {
    "text": "thank Jonathan pkc for asking some the initial questions here Arte at pkc for pointing me to the mexico stuff canopy",
    "start": "1962850",
    "end": "1969510"
  },
  {
    "text": "casey for helping with the presentation and Andrew at the FF for legal assistance all right and thank you does",
    "start": "1969510",
    "end": "1975480"
  },
  {
    "text": "anyone have any questions you",
    "start": "1975480",
    "end": "1981460"
  }
]