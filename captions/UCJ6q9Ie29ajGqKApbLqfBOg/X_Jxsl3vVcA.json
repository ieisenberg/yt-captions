[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "without further Ado I turn it over to Corey Kellenberg and Zeno kova for their",
    "start": "160",
    "end": "6600"
  },
  {
    "text": "demonstration okay thank you so yes I'm Corey callenberg audio okay everyone can hear me good okay next to me I have Zeno",
    "start": "6680",
    "end": "12559"
  },
  {
    "text": "kova my colleague and today we'll be talking about extreme privilege escalation on Windows 8 ufi systems and",
    "start": "12559",
    "end": "17680"
  },
  {
    "text": "you're probably asking yourselves what qualifies as extreme well you will find out in this presentation so who we are we work for",
    "start": "17680",
    "end": "24519"
  },
  {
    "start": "23000",
    "end": "40000"
  },
  {
    "text": "the miter corporation which is essentially a company that manages several federally funded research Development Centers uh our primary",
    "start": "24519",
    "end": "30240"
  },
  {
    "text": "customer is the US government you've probably heard of us through things like cve and things of that nature but we're part of a team that's done a lot of BIOS",
    "start": "30240",
    "end": "36760"
  },
  {
    "text": "research in the past year or two so maybe F us do that all right outline for what you'll",
    "start": "36760",
    "end": "42840"
  },
  {
    "start": "40000",
    "end": "113000"
  },
  {
    "text": "be exposed to today the agony of ring three yes we can get to administrator",
    "start": "42840",
    "end": "48239"
  },
  {
    "text": "ring 3 command prompts and Windows 8 but there are further places we can go more extreme lands better things we can do",
    "start": "48239",
    "end": "54520"
  },
  {
    "text": "and we're going to talk about what that is and where we can go and so forth and so on uh we'll talk about why we' want to go beyond just privileged ring 3 um",
    "start": "54520",
    "end": "62120"
  },
  {
    "text": "we'll be talking about some exploits that we found in ufi which is running underneath the operating system that allowed us to go to these strange new",
    "start": "62120",
    "end": "68080"
  },
  {
    "text": "extreme places um what we waren discussion as well which is pretty interesting is that these",
    "start": "68080",
    "end": "74240"
  },
  {
    "text": "vulnerabilities we found in ufi that we exploited the BIOS ecosystem wasn't really well prepared to deal with bios",
    "start": "74240",
    "end": "80880"
  },
  {
    "text": "vulnerabilities at the time because it just there hadn't been a lot of BIOS vulnerabilities period",
    "start": "80880",
    "end": "86119"
  },
  {
    "text": "so what happened and what unfolded due to our disclosure kind of Warr discussion we'll talk about that as well",
    "start": "86119",
    "end": "92280"
  },
  {
    "text": "we'll talk about what we can establish in these other privileged domains like system management mode and in the firmware which uh can do good things",
    "start": "92280",
    "end": "98960"
  },
  {
    "text": "from an attacker's perspective and then finally we'll introduce or not introduce but sort of reemphasize a free tool we",
    "start": "98960",
    "end": "105360"
  },
  {
    "text": "have out there that can check if you've been attacked at this firmware level it can go and read your firmware and see if anyone's been um trying to attack you at",
    "start": "105360",
    "end": "111479"
  },
  {
    "text": "this level okay so yes we are administrator",
    "start": "111479",
    "end": "116719"
  },
  {
    "start": "113000",
    "end": "139000"
  },
  {
    "text": "Windows 8 command prompt uh most researchers at this point would typeal Etc it would pop up and they'd say okay great I won I'm the winner collect your",
    "start": "116719",
    "end": "123600"
  },
  {
    "text": "bug Bounty that's it game over but what you don't see is you are still Bond",
    "start": "123600",
    "end": "128920"
  },
  {
    "text": "bonded by chains chains because you are in ring three there are places you cannot go memory you cannot read",
    "start": "128920",
    "end": "135400"
  },
  {
    "text": "instructions you cannot execute these are the things we want to [Music] pursue as attackers obviously we always",
    "start": "135400",
    "end": "142319"
  },
  {
    "text": "want more persistence more power more stealth and there are limits to these things in ring three even as an",
    "start": "142319",
    "end": "148599"
  },
  {
    "text": "administrator so we have to go beyond ring three into the unknown into these extreme lands that we're going to talk",
    "start": "148599",
    "end": "155840"
  },
  {
    "text": "about now at this point I'm sort of done with my introduction and some of you are probably wondering do I want to stay for this talk is it going to be interesting",
    "start": "155840",
    "end": "161800"
  },
  {
    "text": "is it going to be boring maybe I should have gone to the Bitcoin talk but I will tell you you definitely want to stay because this talk is going to be 11 out",
    "start": "161800",
    "end": "167400"
  },
  {
    "text": "of 10 awesome would bu again you don't even have to trust me you can trust the authority figure on this subject snare",
    "start": "167400",
    "end": "172760"
  },
  {
    "text": "himself because in this slide from one of his presentations he said if we can reflash the firmware that would be 11",
    "start": "172760",
    "end": "178400"
  },
  {
    "text": "out of 10 A++ would again super awesome that's great and that's exactly what we're going to do in this talk we're going to reflash the firmware despite",
    "start": "178400",
    "end": "184760"
  },
  {
    "text": "signed bias enforcement by exploiting a generic ufi vulnerability from a ring 3 Windows 8",
    "start": "184760",
    "end": "192239"
  },
  {
    "start": "191000",
    "end": "258000"
  },
  {
    "text": "process so this General attack model that I personally like to explore is what I refer to is a post exploitation",
    "start": "192440",
    "end": "198560"
  },
  {
    "text": "privilege escalation so once you're um most people would consider once you have the Administrator Command prop the",
    "start": "198560",
    "end": "204440"
  },
  {
    "text": "exploitation phase is over but there are other places you can go that require exploits to get to and the most common",
    "start": "204440",
    "end": "210239"
  },
  {
    "text": "one that has been explored by other researchers is escalation into ring zero so even on um even from an administrator",
    "start": "210239",
    "end": "217480"
  },
  {
    "text": "account on Windows 8 or on later versions of Windows you can't just arbitrarily get into the kernel you can't get into ring zero and this is due",
    "start": "217480",
    "end": "224040"
  },
  {
    "text": "to the signed bios uh signed driver requirement it won't just load any uh driver into the kernel it has to be",
    "start": "224040",
    "end": "229640"
  },
  {
    "text": "signed with an authentic code certificate now there are things you can do in this attack model has been explored juru has an excellent series of",
    "start": "229640",
    "end": "236239"
  },
  {
    "text": "articles about how you can get into ring Zero from administrator ring 3 rala back in the Windows Vista days has talked",
    "start": "236239",
    "end": "242040"
  },
  {
    "text": "about how you can load a known vulnerable but signed driver and just exploit that to get into the kernel so",
    "start": "242040",
    "end": "247439"
  },
  {
    "text": "yes this is um probably the most typical post exploitation privilege escalation and we don't want to talk about typical",
    "start": "247439",
    "end": "254000"
  },
  {
    "text": "we want to talk about extreme because that's in the title of this presentation so let's proceed now we do have some other",
    "start": "254000",
    "end": "260680"
  },
  {
    "start": "258000",
    "end": "284000"
  },
  {
    "text": "options for what we can do where we can go after we have uh finish the exploitation phase and after we have",
    "start": "260680",
    "end": "266280"
  },
  {
    "text": "Administrator Command Prompt so one thing you you often see is that you can bootkit the system or you can um you",
    "start": "266280",
    "end": "273680"
  },
  {
    "text": "know make a bios rootkit or just jump into system management mode and so forth and so on and in recent history maybe 5",
    "start": "273680",
    "end": "280120"
  },
  {
    "text": "10 years ago all of these options were completely possible nothing stopped you from doing this unfortunately we live in a dark",
    "start": "280120",
    "end": "287160"
  },
  {
    "start": "284000",
    "end": "336000"
  },
  {
    "text": "world now from an attacker perspective anyway and we can't explore these new lands we can't go to these new places",
    "start": "287160",
    "end": "292919"
  },
  {
    "text": "because there are barriers in place for instance from administrator ring 3 we can't boot K the system because of",
    "start": "292919",
    "end": "298199"
  },
  {
    "text": "secure boot secure boot will sort of prevent you from doing that um you can't get into the platform firmware because",
    "start": "298199",
    "end": "304039"
  },
  {
    "text": "of signed bios requirement all of your rights the the BIOS have to be signed and um you can't get into system",
    "start": "304039",
    "end": "310039"
  },
  {
    "text": "management mode because the memory controller Hub is just going to block you from doing that non smmm accesses are not permitted Access smm Memory you",
    "start": "310039",
    "end": "316680"
  },
  {
    "text": "cannot even read smm from ring zero code so it's a dark place we live in today",
    "start": "316680",
    "end": "322080"
  },
  {
    "text": "lucky you are here at this talk and we have extreme privilege escalation which is exactly escalation from privileged",
    "start": "322080",
    "end": "329280"
  },
  {
    "text": "ring you do have to be administrator all the way to the platform firmware using only a special Windows 8",
    "start": "329280",
    "end": "336280"
  },
  {
    "start": "336000",
    "end": "378000"
  },
  {
    "text": "API and what's nice about this is on this diagram it's essentially organized as what's lower on the chart is less",
    "start": "336880",
    "end": "343759"
  },
  {
    "text": "privileged and what's higher is more privileged so the privileged domains highest on the chart is the firmware",
    "start": "343759",
    "end": "350479"
  },
  {
    "text": "because that is responsible for um configuring the platform it is the very first code to run so it's really the",
    "start": "350479",
    "end": "355759"
  },
  {
    "text": "most powerful code that can execute on the CPU and any anything higher on this list can essentially compromise things",
    "start": "355759",
    "end": "362280"
  },
  {
    "text": "lower on this list so if we could get into the platform firmware then it's totally possible for us to just snake our way down corrupt the operating",
    "start": "362280",
    "end": "368880"
  },
  {
    "text": "system get into system management mode uh bypass secure Boot and so forth and so on and we could like corrupt a",
    "start": "368880",
    "end": "374039"
  },
  {
    "text": "hypervisor in there too if I had that included that in the",
    "start": "374039",
    "end": "378280"
  },
  {
    "start": "378000",
    "end": "384000"
  },
  {
    "text": "diagram all right so our Target of",
    "start": "379120",
    "end": "383800"
  },
  {
    "start": "384000",
    "end": "638000"
  },
  {
    "text": "attack pretty much every new Windows 8 System you'll go out and buy today has ufi firmware running underneath the",
    "start": "384599",
    "end": "391520"
  },
  {
    "text": "operating system um UEFI is sort of the replacement for conventional bios it's",
    "start": "391520",
    "end": "396960"
  },
  {
    "text": "kind of become popular in the past few years because Windows 8 is basically required that you have to have UEFI to get the Windows 8 sticker so that's",
    "start": "396960",
    "end": "403720"
  },
  {
    "text": "really caused a large migration from Legacy bias to Windows 8 now this is the obligatory UEFI",
    "start": "403720",
    "end": "410759"
  },
  {
    "text": "diagram that every low-level researcher is going to put in their presentation uh the main responsibility of the UEFI",
    "start": "410759",
    "end": "416039"
  },
  {
    "text": "firmware or firmware in general is to configure the platform find theer system and then transfer control to the",
    "start": "416039",
    "end": "421520"
  },
  {
    "text": "operating system and what you have here is time goes uh starts on the left and goes to the right so left on the diagram",
    "start": "421520",
    "end": "427879"
  },
  {
    "text": "is earlier and the most important thing to take away from this slide is that it's always advantageous really to",
    "start": "427879",
    "end": "434199"
  },
  {
    "text": "execute earlier on the platform more early more power because on the left um",
    "start": "434199",
    "end": "440639"
  },
  {
    "text": "the platform is less locked down essentially what the BIOS does as the budha of the platform continues more and",
    "start": "440639",
    "end": "446000"
  },
  {
    "text": "more locks are applied more things are configured uh there are less things you can do because the bias is going to set",
    "start": "446000",
    "end": "451199"
  },
  {
    "text": "locks that can't be unset until the next reset of the system so it's advantageous as an attacker for us to be as left as",
    "start": "451199",
    "end": "457120"
  },
  {
    "text": "possible on this diagram now with Windows 8 they've",
    "start": "457120",
    "end": "462280"
  },
  {
    "text": "introduced this new API called set firmware environment set firmware environment variable which allows the",
    "start": "462280",
    "end": "468240"
  },
  {
    "text": "operating system to interact with these uh UEFI configuration variables that are stored on the flash chip now these",
    "start": "468240",
    "end": "474000"
  },
  {
    "text": "variables do a number of things they're usually responsible responsible for things like the boot order the platform",
    "start": "474000",
    "end": "479960"
  },
  {
    "text": "language um they also have a lot of weird proprietary uses like things with S3 sleep and so forth and so on they're",
    "start": "479960",
    "end": "485800"
  },
  {
    "text": "used for all kinds of crazy things basically just think of them as like environment variables and",
    "start": "485800",
    "end": "492240"
  },
  {
    "text": "Unix so with that analogy in mind um my main responsibility on the BIOS team is",
    "start": "492680",
    "end": "498759"
  },
  {
    "text": "sort of vulnerability research and exploitation and since we wanted to look at UEFI from an attacker's perspective I",
    "start": "498759",
    "end": "504039"
  },
  {
    "text": "thought okay how am I going to go about attacking this thing well I know that from the Windows 8 command prompt from",
    "start": "504039",
    "end": "509720"
  },
  {
    "text": "Windows 8 administrator I can get access to these UEFI environment variables that it's going to use in pars and so forth",
    "start": "509720",
    "end": "515479"
  },
  {
    "text": "and so on and um that got me thinking back to the old 2000's days where we had lots of these Unix style privilege",
    "start": "515479",
    "end": "522120"
  },
  {
    "text": "escalation vulnerabilities where you would do something like set term equals a time a million then you would run some",
    "start": "522120",
    "end": "528279"
  },
  {
    "text": "you know privileged application and it would parse the the variable in question and you could escalate from non-root to",
    "start": "528279",
    "end": "534959"
  },
  {
    "text": "root everyone remembers this type of attack right I was very popular back then and I was definitely the Forefront of my mind when I started exploiting",
    "start": "534959",
    "end": "541519"
  },
  {
    "text": "when I started attacking UEFI I thought okay I can control these variables so let's definitely um look at it from that",
    "start": "541519",
    "end": "548680"
  },
  {
    "text": "perspective many of these variables have like pretty complex contents um they're like over a thousand bytes in size",
    "start": "548680",
    "end": "554279"
  },
  {
    "text": "they're completely proprietary they obviously have pointers integers things that you typically find in memory",
    "start": "554279",
    "end": "560279"
  },
  {
    "text": "corruption vulnerability type parsing things so one of the most important takeaways from this presentation that I",
    "start": "560279",
    "end": "566640"
  },
  {
    "text": "want everyone to get is that this UEFI variable interface is essentially a conduit by which a by which a less",
    "start": "566640",
    "end": "572720"
  },
  {
    "text": "privileged domain admin ring 3 can transmit data for more privileged domain",
    "start": "572720",
    "end": "578160"
  },
  {
    "text": "the platform firmware to consume so this is the attack surface where you usually want to explore you want to go from less",
    "start": "578160",
    "end": "583440"
  },
  {
    "text": "privileged to more privileged or here's your interface right here now we've already looked a little",
    "start": "583440",
    "end": "589720"
  },
  {
    "text": "bit at this interface um earlier this year we co-discovered a vulnerability uh that allowed the bypassing of secure",
    "start": "589720",
    "end": "595519"
  },
  {
    "text": "Boot and it had to do with essentially ibv independent bio vender OEM",
    "start": "595519",
    "end": "601040"
  },
  {
    "text": "implementation mistake with the way they were using one variable that allowed people to bypass secure boot which",
    "start": "601040",
    "end": "606320"
  },
  {
    "text": "prevents boot kits of course but um maybe this vulnerability",
    "start": "606320",
    "end": "612120"
  },
  {
    "text": "was only like a five out of 10 on the awesomeness snare awesomeness scale because it only let you bypass the Cure boot you could use it in weird ways to",
    "start": "612120",
    "end": "618399"
  },
  {
    "text": "break the system as well but it wasn't present on all UEFI systems it was only on a subset of system is basically OEM",
    "start": "618399",
    "end": "624760"
  },
  {
    "text": "or ibvs that had done something a little bit wrong so we thought okay we're not satisfied at five out of of 10 we definitely want 10 out of 10 or 11 out",
    "start": "624760",
    "end": "631279"
  },
  {
    "text": "of 10 on the snare awesomeness scale so we are going to go straight for the gold and try to find a generic UEFI vulnerability that lets us reflash the",
    "start": "631279",
    "end": "639360"
  },
  {
    "start": "638000",
    "end": "714000"
  },
  {
    "text": "firmware now in order to do this it's important to talk about the BIOS um or the firmware development ecosystem and",
    "start": "639360",
    "end": "645959"
  },
  {
    "text": "this is sort of an idealized view of how it works but it sort of serves the purposes just to illustrate how this",
    "start": "645959",
    "end": "651160"
  },
  {
    "text": "generally works so at the top of the pyramid we have the UEFI reference implementation which is some open source",
    "start": "651160",
    "end": "656639"
  },
  {
    "text": "code that Intel provides that has just like a skeleton for this is how ufi is supposed to be be programmed and so",
    "start": "656639",
    "end": "662839"
  },
  {
    "text": "forth now one step lower on the pyramid you have the independent bios Spenders",
    "start": "662839",
    "end": "668160"
  },
  {
    "text": "like you've probably heard the term Phoenix American megatrends inside Etc and theoretically those ibvs will take",
    "start": "668160",
    "end": "675160"
  },
  {
    "text": "the UEFI reference implementation use it to develop their own firmware development kit and then they will sell",
    "start": "675160",
    "end": "681480"
  },
  {
    "text": "that firmware development kit to oems like Dell and HP and Asus Etc who will then use the ibv development kits to",
    "start": "681480",
    "end": "687519"
  },
  {
    "text": "make the BIOS or the UF firmware for the models they actually go out there and",
    "start": "687519",
    "end": "693399"
  },
  {
    "text": "sell so this is idealized we'll talk a little bit more about how it's actually crazier in this in in the long run but",
    "start": "693399",
    "end": "699800"
  },
  {
    "text": "the point is if we could find a vulnerability in the UEFI reference implementation that Intel provides it",
    "start": "699800",
    "end": "705440"
  },
  {
    "text": "would proliferate down to all these other entities and we would have a widespread vulnerability that affected all these other people like American",
    "start": "705440",
    "end": "711800"
  },
  {
    "text": "megatrends HP Etc now what's nice is auditing UEFI",
    "start": "711800",
    "end": "718880"
  },
  {
    "start": "714000",
    "end": "784000"
  },
  {
    "text": "with this sort of um attack methodology is quite easy because it's open source you can go and just SVN check out uh",
    "start": "718880",
    "end": "724800"
  },
  {
    "text": "UEFI and then go to work on trying to find vulnerabilities or whatever and anyone in here that's a",
    "start": "724800",
    "end": "732440"
  },
  {
    "text": "veteran source code auditor will know well where's the first place you start obviously you want to identify what is attacker Control Data what is where is",
    "start": "732440",
    "end": "739000"
  },
  {
    "text": "the more privileged domain the firmware consumed data from the less privileged domain basically anything that's not the",
    "start": "739000",
    "end": "744440"
  },
  {
    "text": "firmware um and as I've already mentioned to you one very obvious domain",
    "start": "744440",
    "end": "749600"
  },
  {
    "text": "is um the UEFI variables we know that these could be controlled by the operating system and that many of them",
    "start": "749600",
    "end": "755000"
  },
  {
    "text": "would be consumed by the UEFI firmware so this was definitely an attack surface where a more privileged entity the",
    "start": "755000",
    "end": "760760"
  },
  {
    "text": "firmware was consuming data from the less privileged entity the operating system now last year we presented an",
    "start": "760760",
    "end": "767160"
  },
  {
    "text": "exploit against um the Dell bios update process which essentially allowed us to bypass the sign driver signed bios",
    "start": "767160",
    "end": "773920"
  },
  {
    "text": "requirement on a number of Dell models by finding a memory corruption vulnerability in the Dell bios update routine",
    "start": "773920",
    "end": "780079"
  },
  {
    "text": "and so we we had some experience with attacking bios update routines and so",
    "start": "780079",
    "end": "786000"
  },
  {
    "start": "784000",
    "end": "833000"
  },
  {
    "text": "with that in mind when we were looking at the UEFI specification there's a generic way to update your firmware in",
    "start": "786000",
    "end": "791320"
  },
  {
    "text": "UEFI called capsule update and um it's not directly callable by ring 3 code you",
    "start": "791320",
    "end": "797480"
  },
  {
    "text": "can't just call the ring the capsule update process from even from administrator in there but it can",
    "start": "797480",
    "end": "803680"
  },
  {
    "text": "inadvertently be started by the creation of a special UEFI variable essentially",
    "start": "803680",
    "end": "809240"
  },
  {
    "text": "creating a u a specific UE UEFI variable would inadvertently start the capsule update process so this was um",
    "start": "809240",
    "end": "816440"
  },
  {
    "text": "interesting because it was a nice intersection between things we had experience with firmware updates and",
    "start": "816440",
    "end": "821600"
  },
  {
    "text": "things that we were interested in UEFI variables so we said okay capsule update is a great Target let's go about trying",
    "start": "821600",
    "end": "828040"
  },
  {
    "text": "to um exploit UEFI via its cap capsule update",
    "start": "828040",
    "end": "833279"
  },
  {
    "start": "833000",
    "end": "870000"
  },
  {
    "text": "interface all right so just to uh before we start how are we attacking it just a general description of how it works you",
    "start": "833800",
    "end": "839959"
  },
  {
    "text": "have this firmware capsule on the left which will do something like update your firmware that's kind of what it looks like there's a number of uh envelopes",
    "start": "839959",
    "end": "845880"
  },
  {
    "text": "encapsulating the capsule the operating system does something interesting with these capsules and that it scatter wres",
    "start": "845880",
    "end": "851720"
  },
  {
    "text": "the capsule to the address space and that's because the capsule might be pretty large and the uh resources might",
    "start": "851720",
    "end": "857880"
  },
  {
    "text": "be constrained on the OS so you might not have a large physically contiguous Gap in your address bace so the OS can",
    "start": "857880",
    "end": "864440"
  },
  {
    "text": "um you know fragment the the capsule update and just put it all over the the address bace",
    "start": "864440",
    "end": "871040"
  },
  {
    "start": "870000",
    "end": "897000"
  },
  {
    "text": "now what actually kicks off this capsule update process is the existence of this capsule update data variable so this is",
    "start": "872079",
    "end": "878880"
  },
  {
    "text": "essentially a pointer to a scatter gather list and when the UEFI when the",
    "start": "878880",
    "end": "884040"
  },
  {
    "text": "when the platform reboots UEFI will check if this capsule update data variable exists and if it does it'll",
    "start": "884040",
    "end": "890079"
  },
  {
    "text": "automatically initiate the the capsule update process and try to parse the scatter gather list and coales the",
    "start": "890079",
    "end": "898040"
  },
  {
    "start": "897000",
    "end": "934000"
  },
  {
    "text": "capsule so yeah coalescing looks something like this ufi parses the list it goes and he finds all the fragments",
    "start": "898040",
    "end": "903519"
  },
  {
    "text": "and then at the end you end up with the the complete reconstituted capsule image that you originally started",
    "start": "903519",
    "end": "910360"
  },
  {
    "text": "with and then once you have that reconstructed image UEFI is going to parse the envelopes of the capsule it's",
    "start": "910360",
    "end": "916399"
  },
  {
    "text": "going to verify that it's been its contents have been cryptographically signed it shouldn't be the case that you",
    "start": "916399",
    "end": "921560"
  },
  {
    "text": "can just throw unsigned capsules at the firmware and the firmware will process them that would be just like a design flaw because all of your updates to the",
    "start": "921560",
    "end": "928040"
  },
  {
    "text": "The Flash have to be signed so yeah there is some verification going on here that the capsule is signed by the",
    "start": "928040",
    "end": "935040"
  },
  {
    "start": "934000",
    "end": "946000"
  },
  {
    "text": "OEM but what's interesting is that the um the individual fragments are unsigned and there are a number of these",
    "start": "935040",
    "end": "941079"
  },
  {
    "text": "envelopes that are parsed before the cryptographic verification occurs so there is a tax surface you can",
    "start": "941079",
    "end": "946759"
  },
  {
    "start": "946000",
    "end": "1053000"
  },
  {
    "text": "hit so yeah after everything's been cryptographically verified it's going to run the contents of the capsule and this",
    "start": "946759",
    "end": "952959"
  },
  {
    "text": "is actually more of a generic capability it's not necessarily just for firmware updates I've seen proposals as well for",
    "start": "952959",
    "end": "958279"
  },
  {
    "text": "using this for like running Mau independent of the operating system but yeah I think the main idea was to use it",
    "start": "958279",
    "end": "963560"
  },
  {
    "text": "for to uh securely update the firmware on your",
    "start": "963560",
    "end": "968600"
  },
  {
    "text": "system so with all that in mind how this generally works we identified three places we we could potentially go after",
    "start": "968639",
    "end": "975040"
  },
  {
    "text": "the UEFI capsule update process one we could go after the coalescing phase because that definitely occurs before",
    "start": "975040",
    "end": "980800"
  },
  {
    "text": "any any signature check occurs for you guys in the back too there's plenty of room on the right just so you know",
    "start": "980800",
    "end": "987120"
  },
  {
    "text": "monitors over there want everyone to be able to see um so yeah coalescing phase that's definitely a tack surface parsing",
    "start": "987120",
    "end": "993839"
  },
  {
    "text": "of the capsule envelopes as I mentioned before there were several envelopes that have to be pared before the cryptographic verification can occur any",
    "start": "993839",
    "end": "1000120"
  },
  {
    "text": "memory corruption vulnerabilities in there could potentially be used to hijack control of the instruction pointer in the context of UEFI and then",
    "start": "1000120",
    "end": "1006639"
  },
  {
    "text": "the uh the third option was potentially parsing unside content embedded within the capsule or the firmware update and",
    "start": "1006639",
    "end": "1012480"
  },
  {
    "text": "what's interesting as this last option was actually where the first exploit against the BIOS was presented in 2009",
    "start": "1012480",
    "end": "1018000"
  },
  {
    "text": "invisible things labs presented an attack against Intel bios where um they found that you could embed a special",
    "start": "1018000",
    "end": "1024038"
  },
  {
    "text": "splash screen into a signed Intel bios update and uh that was to like customize",
    "start": "1024039",
    "end": "1029400"
  },
  {
    "text": "your your boot up splash screen if you wanted to put your organization's logo on there and uh they found that there",
    "start": "1029400",
    "end": "1035280"
  },
  {
    "text": "was basically a memory corruption vulnerability in the parsing of the splash screen and that allowed them to reflash the BIOS with an arbitrary image",
    "start": "1035280",
    "end": "1041038"
  },
  {
    "text": "despite the presence of this signed bios requirement on the Intel bios so that was the first one that's interesting um",
    "start": "1041039",
    "end": "1047079"
  },
  {
    "text": "we actually chose to go after the first to really uh and yeah we found bugs and Road exploits for both of those",
    "start": "1047079",
    "end": "1054559"
  },
  {
    "start": "1053000",
    "end": "1085000"
  },
  {
    "text": "phases so yeah I don't want to bore people with the details but we spent about a week auditing the open source",
    "start": "1054559",
    "end": "1059679"
  },
  {
    "text": "reference implementation and we found a lot of bugs um a lot of them what's interesting is took the form of like",
    "start": "1059679",
    "end": "1065600"
  },
  {
    "text": "integer overflow 101 don't do this any veteran source code auditor would have spotted these very quickly um so yeah we",
    "start": "1065600",
    "end": "1072280"
  },
  {
    "text": "found bugs both in the coalescing phase and in the envelope parsing phase for UEFI people in here or people that might",
    "start": "1072280",
    "end": "1078840"
  },
  {
    "text": "might know about ufi um the coalescing was in the Pei phase and the envelope",
    "start": "1078840",
    "end": "1084559"
  },
  {
    "text": "parsing was in the Dixie phase and we called well first of all Zeno and I are big nerds obviously because we you know",
    "start": "1084559",
    "end": "1090320"
  },
  {
    "text": "we do bio stuff you got to be a nerd to like bio stuff and uh by way of being nerds we also like chess a lot so we",
    "start": "1090320",
    "end": "1095760"
  },
  {
    "text": "started calling all of our attacks after like chess openings so we called the um the envelope parsing one the king's",
    "start": "1095760",
    "end": "1102400"
  },
  {
    "text": "gamut and the the queen gamut one is the coalescing vulnerability so when I refer to those in later slides that is what",
    "start": "1102400",
    "end": "1108840"
  },
  {
    "text": "I'm talking about Queen's gambut is the exploit in the vulnerabilities in the coalescing phase and King's gambut is in",
    "start": "1108840",
    "end": "1114799"
  },
  {
    "text": "the envelope parsing and what's known as the Dixie phase um so what's interesting is all these vulnerabilities they occur",
    "start": "1114799",
    "end": "1121320"
  },
  {
    "text": "very early in the platform so remember I said the earlier you can execute the better well it turns out that both of these ex both of these vulnerabilities",
    "start": "1121320",
    "end": "1127799"
  },
  {
    "text": "the code occurs very early in the boot up process when the platform is still relatively unlocked so if you can leverage them to get control the",
    "start": "1127799",
    "end": "1133679"
  },
  {
    "text": "instruction pointer the platform is still in an unlocked state where you can do really crazy things",
    "start": "1133679",
    "end": "1140320"
  },
  {
    "start": "1138000",
    "end": "1200000"
  },
  {
    "text": "now just to reemphasize what's interesting is that this UEFI code this reference implementation is completely",
    "start": "1140559",
    "end": "1146280"
  },
  {
    "text": "open source so it's very easy to audit um and it's obviously security critical this is the code that is responsible for",
    "start": "1146280",
    "end": "1152360"
  },
  {
    "text": "making sure that our firmware can't be corrupted we can't get bios root kit so forth and so on but these vulnerabilities were very easy to find",
    "start": "1152360",
    "end": "1158440"
  },
  {
    "text": "so we're forced to conclude that not many people are actually looking in this space is anyone else actually auditing",
    "start": "1158440",
    "end": "1163600"
  },
  {
    "text": "the ufi code obviously not because other people would have found these vulnerabilities and the other funny thing is in the UEFI code I found like",
    "start": "1163600",
    "end": "1170720"
  },
  {
    "text": "um lots of little comments that said like well you can see here more reliabilities checkup we'll do later and",
    "start": "1170720",
    "end": "1175919"
  },
  {
    "text": "things like should add sanity checks here things where clearly the developers know that there could be issues could be vulnerabilities but um yeah the",
    "start": "1175919",
    "end": "1182960"
  },
  {
    "text": "vulnerabilities were just waiting there waiting there to be fixed and since they were in the reference implementation they proliferated down to other entities",
    "start": "1182960",
    "end": "1189720"
  },
  {
    "text": "like oems and ibvs that were pulling code from the reference implementation so more people need to be",
    "start": "1189720",
    "end": "1195640"
  },
  {
    "text": "looking there for other vulnerability researchers in the audience go and look at the ufi",
    "start": "1195640",
    "end": "1200840"
  },
  {
    "start": "1200000",
    "end": "1292000"
  },
  {
    "text": "code now the vulnerabilities were easy to find they took the form of integer overflow 101 don't do this don't do math",
    "start": "1200840",
    "end": "1208400"
  },
  {
    "text": "and arithmetic right before you do an allocation and so forth and so on that's always a red flag when you're looking at code like just to go back yeah you can",
    "start": "1208400",
    "end": "1215880"
  },
  {
    "text": "see like memory size less than arithmetic that's definitely not good multiplication before allocation you",
    "start": "1215880",
    "end": "1222320"
  },
  {
    "text": "know definitely don't do that if you're a Bug Hunter you'll definitely zero win on that and be like that could definitely be problematic so yeah pretty",
    "start": "1222320",
    "end": "1228880"
  },
  {
    "text": "easy to spot now what's uh what's good from an attacker's perspective too is the bugs are easy to spot and actually",
    "start": "1228880",
    "end": "1234960"
  },
  {
    "text": "this code runs in an environment that is read write execute for the most part",
    "start": "1234960",
    "end": "1240320"
  },
  {
    "text": "it's a flat protected mode with paging disabled and since memory protections are typically applied at the paging",
    "start": "1240320",
    "end": "1246440"
  },
  {
    "text": "level um things like your no execute stack and so forth since paging is disabled these mitigations don't exist",
    "start": "1246440",
    "end": "1252320"
  },
  {
    "text": "in fact there's really no mitigations in this space at all uh for the most part things are predictable addresses and and",
    "start": "1252320",
    "end": "1259520"
  },
  {
    "text": "yeah so from an attacker's perspective this is like the 9s when you're trying to go after bugs and there's no mitigations however despite all these",
    "start": "1259520",
    "end": "1265440"
  },
  {
    "text": "things that are good for an attacker it turned out that exploiting these bugs was actually very complex uh because of the strange environment we were working",
    "start": "1265440",
    "end": "1271919"
  },
  {
    "text": "in and and so forth and so on so yeah it took us a week to look at",
    "start": "1271919",
    "end": "1277480"
  },
  {
    "text": "all these bugs but just to uh give you an idea of the timeline it took me probably a month to develop each exploit so both the King's gambut and the",
    "start": "1277480",
    "end": "1283400"
  },
  {
    "text": "Queen's gambut took me about a month each to exploit even though it only took me a week to found the bugs um",
    "start": "1283400",
    "end": "1289080"
  },
  {
    "text": "now previously when I've come up here and given presentations I've like gone",
    "start": "1289080",
    "end": "1294159"
  },
  {
    "start": "1292000",
    "end": "1331000"
  },
  {
    "text": "line by line through Ida assembly and here this is the memory map and then I moved this here and this is the return oriented programming payload after like",
    "start": "1294159",
    "end": "1300480"
  },
  {
    "text": "10 minutes of that the audience was totally asleep so I'm not going to do that to you guys cuz probably the majority of you would totally hate that",
    "start": "1300480",
    "end": "1306760"
  },
  {
    "text": "and it would not be entertaining so instead I'm going to show you this cryptic diagram and other",
    "start": "1306760",
    "end": "1312200"
  },
  {
    "text": "vulnerabilities researchers in the audience I hope this will entice you to go and read the white paper I made the white paper like very detail oriented",
    "start": "1312200",
    "end": "1318880"
  },
  {
    "text": "it's 20 Pages it'll totally put you to sleep with details but if you want to know the details of how we exploited",
    "start": "1318880",
    "end": "1323919"
  },
  {
    "text": "these please please please go put the read the white paper because I put a ton of effort into it and uh yeah the",
    "start": "1323919",
    "end": "1329279"
  },
  {
    "text": "exploitation process was pretty pretty interesting but this is right here is the queen gamut this is in the Pei coing",
    "start": "1329279",
    "end": "1334960"
  },
  {
    "start": "1331000",
    "end": "1357000"
  },
  {
    "text": "phase and yeah crazy multi-stage stuff going on but at the end of the day what's interesting and noteworthy about this is we ended up with an with a um",
    "start": "1334960",
    "end": "1342840"
  },
  {
    "text": "very reliable surgical right what wear primitive so if you can get right what wear when you're developing an exploit",
    "start": "1342840",
    "end": "1348200"
  },
  {
    "text": "that's pretty pretty much the holy grail and um once you have that sort of primitive then you you know everything",
    "start": "1348200",
    "end": "1353520"
  },
  {
    "text": "else falls down um so yep that's good for Pei coal lesing now this is the Dixie phase V",
    "start": "1353520",
    "end": "1360559"
  },
  {
    "start": "1357000",
    "end": "1451000"
  },
  {
    "text": "building how I exploited it this one was especially crazy please go read the white paper so what was interesting",
    "start": "1360559",
    "end": "1366799"
  },
  {
    "text": "about the Dixie vulnerability the uh the envelope parsing vulnerability was I would essentially end up when I caused",
    "start": "1366799",
    "end": "1372720"
  },
  {
    "text": "the memory corruption I ended up in a non-terminating loop that would overwrite the whole 4 GB address space",
    "start": "1372720",
    "end": "1378159"
  },
  {
    "text": "with semi-controlled values so how can I possibly escape this non-terminating Loop of Doom well with paging disabled",
    "start": "1378159",
    "end": "1386000"
  },
  {
    "text": "and so forth basically the only thing that I could think of to do was to overwrite the non-terminating loop",
    "start": "1386000",
    "end": "1392200"
  },
  {
    "text": "itself so overr have the non-terminating loop that's overwriting everything actually overwrite its own code override",
    "start": "1392200",
    "end": "1397480"
  },
  {
    "text": "its own Loop code and you can see here in the diagram I have the basic block it's maybe hard to read and that's the",
    "start": "1397480",
    "end": "1402720"
  },
  {
    "text": "loop that's just totally clobbering the address space and um as I mentioned the values that were being written r",
    "start": "1402720",
    "end": "1408799"
  },
  {
    "text": "semi-controlled so I had to write a crazy python Brute Force script that would just like brute force all the ways",
    "start": "1408799",
    "end": "1413960"
  },
  {
    "text": "I could set this up and what that would end up overwriting the non-terminating loop with and eventually it came up with",
    "start": "1413960",
    "end": "1419880"
  },
  {
    "text": "a a way I could set things up where it would overwrite the top the non-terminating loop basic block with a jump away instruction that would jump to",
    "start": "1419880",
    "end": "1427080"
  },
  {
    "text": "a part of the address Bas that hadn't been corrupted and was controllable by the operating system so this would let us get control of the instruction",
    "start": "1427080",
    "end": "1433120"
  },
  {
    "text": "pointer in the context of the ufi firmware with arbitrary operating system Shell Code um",
    "start": "1433120",
    "end": "1439559"
  },
  {
    "text": "but it's not quite as reliable as the the other vulnerability that I just showed you it's and um it corrupts a lot",
    "start": "1439559",
    "end": "1445480"
  },
  {
    "text": "of the address bace so it destabilizes the system but still it was kind of entertaining to try to explain so read",
    "start": "1445480",
    "end": "1450640"
  },
  {
    "text": "the white paper all right so the summary here was that",
    "start": "1450640",
    "end": "1457200"
  },
  {
    "start": "1451000",
    "end": "1817000"
  },
  {
    "text": "um yeah like I just said read the white paper for the super nitty Gerty details I don't want to put people to sleep with",
    "start": "1457200",
    "end": "1462240"
  },
  {
    "text": "the whole memory map and this and that and so on um but yeah capsule coalescing exploit was very reliable we could explo",
    "start": "1462240",
    "end": "1468559"
  },
  {
    "text": "it using only that special Windows 88 EFI variable API and part of the thing we had to overcome was how do we stage",
    "start": "1468559",
    "end": "1476600"
  },
  {
    "text": "things at reliable physical addresses from ring 3 userland well it turns out",
    "start": "1476600",
    "end": "1481760"
  },
  {
    "text": "that we could further abuse the Windows 8 ufi variable interface and just create a whole bunch of EFI variables and the",
    "start": "1481760",
    "end": "1488840"
  },
  {
    "text": "contents of these EFI variables were actually written to the flash chip and the contents of the flashship were",
    "start": "1488840",
    "end": "1493919"
  },
  {
    "text": "mapped to physical memory so by you abusing this this interface and doing what's like a heap spray in the UEFI",
    "start": "1493919",
    "end": "1501039"
  },
  {
    "text": "world so like variable spray we could end up with operating system ring 3 controlled contents at predictable",
    "start": "1501039",
    "end": "1507399"
  },
  {
    "text": "physical addresses now so yeah that's all good that was the coalescing one the capsule envelope vulnerability and",
    "start": "1507399",
    "end": "1514480"
  },
  {
    "text": "exploit um destabilize the system we could control the instruction pointer and reflash the firmware but the system",
    "start": "1514480",
    "end": "1520919"
  },
  {
    "text": "was unstabilized and we did have to rely on a crutch a third party driver to Stage things at certain physical",
    "start": "1520919",
    "end": "1526840"
  },
  {
    "text": "addresses uh we could couldn't find a way to do that with just the EFI variable AP API so not quite as good",
    "start": "1526840",
    "end": "1532159"
  },
  {
    "text": "maybe just like nine out of 10 on the snare scale but definitely the first one is low than out of 10 on this near awesomeness",
    "start": "1532159",
    "end": "1539240"
  },
  {
    "text": "scale okay how's everyone doing totally boring what's going on what's Cory talking about I have no idea well it's",
    "start": "1539679",
    "end": "1546559"
  },
  {
    "text": "like yeah I know it's kind of hard to conceptualize these types of attacks because it's u a lot of people haven't",
    "start": "1546559",
    "end": "1551799"
  },
  {
    "text": "done these sort of things it's sort of a new new kind of attack going after the firmware and these these these capsules and so forth and so on so let me help",
    "start": "1551799",
    "end": "1557880"
  },
  {
    "text": "illustrate what is going on well we have our dark Jedi Sith Lord who is not",
    "start": "1557880",
    "end": "1563600"
  },
  {
    "text": "satisfied with the constraints of ring3 administrator he must grow his power he",
    "start": "1563600",
    "end": "1568720"
  },
  {
    "text": "must learn more get more power he must explore New Dimensions so he's unimpressed great",
    "start": "1568720",
    "end": "1574919"
  },
  {
    "text": "Administrator Command Prompt let's go elsewhere well first thing he does is he creates a bunch of these EFI variables",
    "start": "1574919",
    "end": "1581399"
  },
  {
    "text": "using a special set firmware and variable interface he sprays The Flash ship using this variable spray technique",
    "start": "1581399",
    "end": "1587640"
  },
  {
    "text": "and after he just created variable created variable created variable created variable he knows that beyond a shadow of a doubt at address FF",
    "start": "1587640",
    "end": "1595799"
  },
  {
    "text": "f910 he will have attacker controlled contents there which essentially breaks down to Shell Code and an evil scatter",
    "start": "1595799",
    "end": "1602880"
  },
  {
    "text": "gather list that will get control of the instruction pointer so just like he spray but in the ufi context using this variable",
    "start": "1602880",
    "end": "1609559"
  },
  {
    "text": "interface next our dark Jedi creates the capsule update data variable which is",
    "start": "1609559",
    "end": "1614679"
  },
  {
    "text": "automatically parsed by UEFI upon reset and he points it at the uh the payload that I just sprayed all over the flash",
    "start": "1614679",
    "end": "1621559"
  },
  {
    "text": "ship next a platform reset occurs so I'm going to have to wave my hands a little bit because this is actually",
    "start": "1621559",
    "end": "1626720"
  },
  {
    "text": "implementation specific in most cases this means S3 sleep um but it could be",
    "start": "1626720",
    "end": "1632679"
  },
  {
    "text": "different if you look at the UEFI reference supplementation the platform reset a warm reset will essentially turn",
    "start": "1632679",
    "end": "1638039"
  },
  {
    "text": "into like an S3 sleep with immediate wake um but it could be different and I'm going to have to um when we actually",
    "start": "1638039",
    "end": "1644520"
  },
  {
    "text": "demo some of these attacks talk about what is actually going on and what we're having to do but from an Administrator Command propt you can cause this to",
    "start": "1644520",
    "end": "1651080"
  },
  {
    "text": "occur by messing with powerc conf. dll there's special parameters you can pass it and it will put the system into the",
    "start": "1651080",
    "end": "1657240"
  },
  {
    "text": "needed state to initiate this capsule process if you have created that special capsule update data",
    "start": "1657240",
    "end": "1664159"
  },
  {
    "text": "variable okay so the platform reset occurs now UEFI has gained control again EIP is pointing at UEFI UEFI code and",
    "start": "1664159",
    "end": "1672200"
  },
  {
    "text": "it's uh it's doing its thing it very early checks does capsule update data exist if it does it automatically tries",
    "start": "1672200",
    "end": "1677960"
  },
  {
    "text": "to parts that scatter gather the list and uhoh our dark Jedi has placed the evil payload there and it will be",
    "start": "1677960",
    "end": "1683440"
  },
  {
    "text": "consumed and bad things will happen so yep UEFI will begin to coales",
    "start": "1683440",
    "end": "1689600"
  },
  {
    "text": "the evil capsule that will cause the vulnerability to occur and will allow us to get control the instruction",
    "start": "1689600",
    "end": "1695880"
  },
  {
    "text": "pointer and then at this point the UEFI code will become",
    "start": "1695880",
    "end": "1700760"
  },
  {
    "text": "corrupted and what's nice is the attacker can now deflect the instruction",
    "start": "1700960",
    "end": "1706480"
  },
  {
    "text": "pointer to the contents of his is Shell Code which is stored in one of those sprayed variables and at this point the",
    "start": "1706480",
    "end": "1712080"
  },
  {
    "text": "platform is completely unlocked so remember I was saying that on Modern systems by the time you get to the OS the platform is very locked down uh",
    "start": "1712080",
    "end": "1718919"
  },
  {
    "text": "there there's a lot of things you can't do well in this part and Pei very early in the boot up the platform is completely unlocked you can pretty much",
    "start": "1718919",
    "end": "1725799"
  },
  {
    "text": "go anywhere do anything that the CPU can possibly do you can copy yourself into system management mode you can reflash",
    "start": "1725799",
    "end": "1732559"
  },
  {
    "text": "the firmware I mean anything the CPU CPU can do you can pretty much do at this point if you really want to",
    "start": "1732559",
    "end": "1740039"
  },
  {
    "text": "now once the attackers established themselves in system management mode once they've escalated themselves from",
    "start": "1740320",
    "end": "1745799"
  },
  {
    "text": "admin ring 3 all the way to system management mode of the platform firmware there's a lot of different things they can do this is just sort of a summary of",
    "start": "1745799",
    "end": "1751159"
  },
  {
    "text": "results that other people have presented they can brick the platform obviously by just writing zero to the firmware they",
    "start": "1751159",
    "end": "1756399"
  },
  {
    "text": "can defeat secure boot because secure boot code is um is stored on the flashship as well UEFI Implement secure",
    "start": "1756399",
    "end": "1763720"
  },
  {
    "text": "boot so if you can change UEFI obviously you can defeat secure boot uh you can have an undetectable smm rootkit ah you",
    "start": "1763720",
    "end": "1769360"
  },
  {
    "text": "don't believe me but you totally can we have presented work last year at black hat we presented a bios chamany work",
    "start": "1769360",
    "end": "1776159"
  },
  {
    "text": "about undetectable bios rootkits we also talked about undetectable smm rootkits at canc West this previous year so yeah",
    "start": "1776159",
    "end": "1782360"
  },
  {
    "text": "you can do all kinds of crazy things I encourage you to check out those slides if you don't believe me you can subvert hypervisors because according to um the",
    "start": "1782360",
    "end": "1790159"
  },
  {
    "text": "negative ring scale hypervisors are ring negative 1 and system management mode is ring negative -2 so if you can get into smm which you can with this attack you",
    "start": "1790159",
    "end": "1796760"
  },
  {
    "text": "can subvert hyper hypervisors you can also on most systems subvert txt late",
    "start": "1796760",
    "end": "1802120"
  },
  {
    "text": "lodged hypervisor so no not even txt can save you here because smm transfer monitors basically do not exist and",
    "start": "1802120",
    "end": "1808320"
  },
  {
    "text": "without smm transfer monitors you are totally doomed if there is a bios level attacker and yeah there's all kinds of",
    "start": "1808320",
    "end": "1813519"
  },
  {
    "text": "other crazy things you can do once you're in the Bios and smm the world is your oyster now we're going to start um so I",
    "start": "1813519",
    "end": "1821760"
  },
  {
    "start": "1817000",
    "end": "1933000"
  },
  {
    "text": "want to say before we begin actually normally Zeno and I just use like videos because videos are safe maybe some people complain about that so you see",
    "start": "1821760",
    "end": "1828279"
  },
  {
    "text": "all this crazy stuff up here we are going to attempt a live demo of ufi exploitation from ring 3 and installing",
    "start": "1828279",
    "end": "1833720"
  },
  {
    "text": "an agent to the BIOS is going to be totally crazy don't know if it's going to work maybe 50/50 so everyone pray to Papa legba the god of hhan voodoo that",
    "start": "1833720",
    "end": "1841000"
  },
  {
    "text": "uh yes please Papa legba Hear My Call make our demo",
    "start": "1841000",
    "end": "1845880"
  },
  {
    "text": "work okay oh oh yeah yeah yeah so I forgot go",
    "start": "1848840",
    "end": "1854240"
  },
  {
    "text": "ahead and run the exploit Zeno very easy all right so what just happened is you can see the creation of all these",
    "start": "1854240",
    "end": "1859639"
  },
  {
    "text": "UEFI variables like variable spray zero variable spray one this is just filling up the contents of The Flash chip with",
    "start": "1859639",
    "end": "1865360"
  },
  {
    "text": "our Shell Code with our evil scatter gather list so that we can get things at a predictable physical address after a",
    "start": "1865360",
    "end": "1870639"
  },
  {
    "text": "while you can see it says airor after a while Zen know what basically it said error just because it had run out of um",
    "start": "1870639",
    "end": "1877360"
  },
  {
    "text": "the variable range had been exceeded there was no more space it could possibly consume so then it said I can't create anymore your spray is over and it",
    "start": "1877360",
    "end": "1884360"
  },
  {
    "text": "also seated that evil capsule update data variable into into the um into the variable space okay one",
    "start": "1884360",
    "end": "1893360"
  },
  {
    "text": "thing I'm going to have to wave my hands on a little bit here you would be able to instantiate the vulnerability just from the command line on an enterprise",
    "start": "1893360",
    "end": "1899880"
  },
  {
    "text": "system by using power config and stuff like that we're actually having to do something a little bit different on",
    "start": "1899880",
    "end": "1905200"
  },
  {
    "text": "these minnow boards you can see them up on stage of these little development systems and the reason is there basically aren't drivers for the The",
    "start": "1905200",
    "end": "1911880"
  },
  {
    "text": "Minnow board this development system we're using to run Windows 8 on they're not really even supposed to use Windows 8 we disliked them because they had tag",
    "start": "1911880",
    "end": "1918279"
  },
  {
    "text": "support and they're small and easy to move around but the point is since there weren't drivers for them it Windows 8 doesn't really know how to put the",
    "start": "1918279",
    "end": "1924399"
  },
  {
    "text": "system into S3 sleep so we're actually having to boot to the EFI shell to then",
    "start": "1924399",
    "end": "1929840"
  },
  {
    "text": "do a warm reset which will put it into S3 sleep so normally we could totally do this just from the Administrator Command",
    "start": "1929840",
    "end": "1935200"
  },
  {
    "start": "1933000",
    "end": "2137000"
  },
  {
    "text": "prop please believe me I know I'm waving my hands but we're having to actually initiate the warm reset from um the",
    "start": "1935200",
    "end": "1941880"
  },
  {
    "text": "command prompt do we get the right address good 42 yeah so yeah we are just basically",
    "start": "1941880",
    "end": "1950000"
  },
  {
    "text": "seeing if our demo is going to work we see that FFF 940 C2 that's an address that we've determined we can reliably",
    "start": "1950000",
    "end": "1956360"
  },
  {
    "text": "put stuff at since I see that address I'm feeling pretty confident the demo is going to work but we'll see and yeah we",
    "start": "1956360",
    "end": "1962399"
  },
  {
    "text": "just did reset W and what this does is it puts this the platform into S3 sleep with immediate wake and we couldn't do",
    "start": "1962399",
    "end": "1967919"
  },
  {
    "text": "that from Windows 8 because we didn't have drivers for the minnow board um we didn't have Windows 8 driver to the men",
    "start": "1967919",
    "end": "1973159"
  },
  {
    "text": "Port so we had to use the EFI shell so normally this could all just be done seamlessly from the windows uh",
    "start": "1973159",
    "end": "1978480"
  },
  {
    "text": "Administrator Command Prompt but we are having to do this little crazy shim thing here so it's still cool I",
    "start": "1978480",
    "end": "1984600"
  },
  {
    "text": "promise okay oh oh okay okay so one interesting",
    "start": "1984600",
    "end": "1990240"
  },
  {
    "text": "thing is happening here um when you put the minow board into this warm reset",
    "start": "1990240",
    "end": "1995880"
  },
  {
    "text": "sometimes it takes a while to restart like sometimes it's immediate and sometimes it takes like a",
    "start": "1995880",
    "end": "2001360"
  },
  {
    "text": "minute so we're going to um wait a second and hopefully eventually you'll",
    "start": "2001360",
    "end": "2006840"
  },
  {
    "text": "see like running from SP by flash which means that it is booting off the firmware and then we'll get to the point where actually uh in state chaining the",
    "start": "2006840",
    "end": "2013240"
  },
  {
    "text": "vulnerabilities and corrupting ufi so let's see let's let's cross our",
    "start": "2013240",
    "end": "2019398"
  },
  {
    "text": "fingers okay while we're waiting does anyone have any",
    "start": "2019760",
    "end": "2024039"
  },
  {
    "text": "questions repeat the question so his question was why wouldn't we transfer the exploit for to normal Windows",
    "start": "2032320",
    "end": "2038559"
  },
  {
    "text": "machine uh we actually did that in a in the white paper um so if you want to",
    "start": "2038559",
    "end": "2044440"
  },
  {
    "text": "know the details of how well we did that in the white paper then yeah you can look at that so why are we not exploting",
    "start": "2044440",
    "end": "2050480"
  },
  {
    "text": "that on stage today I guess is the question is because uh it was the exploit was basically just proof of",
    "start": "2050480",
    "end": "2056480"
  },
  {
    "text": "concept and we disc corrupt the address base and stuff on the real enterprise system um and because we didn't have JTAG access we didn't go so far as to",
    "start": "2056480",
    "end": "2063440"
  },
  {
    "text": "weaponize the exploit on the enterprise system but the the system we actually exploit in the white paper was an HP",
    "start": "2063440",
    "end": "2068960"
  },
  {
    "text": "Elite book and we actually have a representative from HP coming on stage later today to talk about their response to this issue so in terms of exploiting",
    "start": "2068960",
    "end": "2076079"
  },
  {
    "text": "real Enterprise systems all those details are on the white paper is that sufficiently answer to the question",
    "start": "2076079",
    "end": "2082800"
  },
  {
    "text": "yeah did it go okay uh Zeno's just kind of manually try to reset again since sometimes it",
    "start": "2082800",
    "end": "2089040"
  },
  {
    "text": "just doesn't want to uh to reset y so it's still there",
    "start": "2089040",
    "end": "2095599"
  },
  {
    "text": "yeah we'll see there we go so this time it worked I don't know why so at this point the",
    "start": "2100400",
    "end": "2106880"
  },
  {
    "text": "firmware is um consuming that evil capsule and at this point we've probably",
    "start": "2106880",
    "end": "2114880"
  },
  {
    "text": "gained control of the instruction pointer and it's using our Shell Code which is making rights to the Spy flash",
    "start": "2114880",
    "end": "2120520"
  },
  {
    "text": "on the system which normally you absolutely cannot do normally by the time the operating system gets control you can't make rights arbitrary rights",
    "start": "2120520",
    "end": "2126599"
  },
  {
    "text": "to this spy Flash but since we got control with our Shell Code very early in the system we're able to arbitrarily modify the contents of the platform",
    "start": "2126599",
    "end": "2135079"
  },
  {
    "start": "2137000",
    "end": "2244000"
  },
  {
    "text": "firmware so yeah what Zeno has here is actually he's connected an eprom programmer to The Minnow board another reason we like to use this has really",
    "start": "2138520",
    "end": "2144839"
  },
  {
    "text": "easy eprom access so we can just show that yes we have actually made changes to the the Spy flash",
    "start": "2144839",
    "end": "2151800"
  },
  {
    "text": "chip what were the is that just the variables or",
    "start": "2155960",
    "end": "2161359"
  },
  {
    "text": "whatever AV people do you care if we uh if we reset the screen resolution is that going to throw everything off can I",
    "start": "2161359",
    "end": "2168560"
  },
  {
    "text": "get a thumbs up or thumbs down is that going to mess it up not you",
    "start": "2168560",
    "end": "2174520"
  },
  {
    "text": "AV people all well they're not saying anything so we're going to try it anyways just to show like the actual",
    "start": "2174520",
    "end": "2181240"
  },
  {
    "text": "payload installed we're just going to change the resolution because this tool is not uh",
    "start": "2181240",
    "end": "2188119"
  },
  {
    "text": "not great at other resolutions Windows too",
    "start": "2188119",
    "end": "2195000"
  },
  {
    "text": "small okay yeah you're good all right so just wanted to show",
    "start": "2196599",
    "end": "2202720"
  },
  {
    "text": "like concretely you know exactly where we put it uh 3F d",
    "start": "2202720",
    "end": "2208640"
  },
  {
    "text": "e0 right so this is the actual exploit payload so originally it was a bunch of",
    "start": "2208640",
    "end": "2213760"
  },
  {
    "text": "FS right we just picked a place in the p in the in the Flash ship where there's a bunch of FS we said okay we're going to",
    "start": "2213760",
    "end": "2220280"
  },
  {
    "text": "Stage our attacker code there this is basically the back door which is being installed we'll talk about that a little later but this means the exploit has",
    "start": "2220280",
    "end": "2227319"
  },
  {
    "text": "actually run it has gained control it has then run code which knows how to flash stuff to the to the SPI flash chip",
    "start": "2227319",
    "end": "2234440"
  },
  {
    "text": "and now we have an attacker back door just sitting around in Flash chip waiting to be executed on next boot of",
    "start": "2234440",
    "end": "2239680"
  },
  {
    "text": "the system it's going to be invisible we'll talk about it a little later anything else I think that's it all",
    "start": "2239680",
    "end": "2246119"
  },
  {
    "start": "2244000",
    "end": "2332000"
  },
  {
    "text": "right so we're going to talk a little a little bit about the vulnerability disclosure process before we come back",
    "start": "2246119",
    "end": "2251240"
  },
  {
    "text": "to that so right this shows that our exploit actually worked uh we were able to reflash arbitrary contents into this",
    "start": "2251240",
    "end": "2258160"
  },
  {
    "text": "flash chip let it live forever and uh and so yeah basically we",
    "start": "2258160",
    "end": "2264760"
  },
  {
    "text": "already alluded to this fact when we found these vulnerabilities um you know",
    "start": "2264760",
    "end": "2270200"
  },
  {
    "text": "we were you know we're doing defensive security research we're uh we're looking at the source code we're trying to find",
    "start": "2270200",
    "end": "2276480"
  },
  {
    "text": "vulnerabilities because we know that like architecturally if attacker gets in at these earliest phases then they",
    "start": "2276480",
    "end": "2282400"
  },
  {
    "text": "control the system they own the system and uh we don't want other people doing that so we want to squash bugs find",
    "start": "2282400",
    "end": "2287839"
  },
  {
    "text": "vulnerabilities and let people know about it yeah can you do",
    "start": "2287839",
    "end": "2293000"
  },
  {
    "text": "Linux so we told Intel about these problems because Intel sort of maintains",
    "start": "2293000",
    "end": "2298400"
  },
  {
    "text": "the open source reference implementation and we told them about the problems back in November December um and we said that",
    "start": "2298400",
    "end": "2304800"
  },
  {
    "text": "we would do our typical uh thing with sort of month vulnerability disclosure so we when we find vulnerabilities we",
    "start": "2304800",
    "end": "2311319"
  },
  {
    "text": "tell the vendors about it and then we say Okay 6 months from now we'll make these public because if we don't have",
    "start": "2311319",
    "end": "2316359"
  },
  {
    "text": "some six-month or whatever deadline then you know bios Engineers are busy they got a whole lot of other stuff that they",
    "start": "2316359",
    "end": "2321920"
  },
  {
    "text": "got to do and you know maybe these vulnerabilities are not going to make it to the top of their priority list so uh",
    "start": "2321920",
    "end": "2327599"
  },
  {
    "text": "so we we use that to help incentivize things people who don't have deadlines don't get stuff done so Intel turned",
    "start": "2327599",
    "end": "2334359"
  },
  {
    "start": "2332000",
    "end": "2450000"
  },
  {
    "text": "around and uh fixed the bugs relatively quickly in uh January of the following year they fixed the open source",
    "start": "2334359",
    "end": "2340560"
  },
  {
    "text": "reference implementation and then most recently in March they rolled a new sort of uh uifi stable version the udk uifi",
    "start": "2340560",
    "end": "2348880"
  },
  {
    "text": "developers kit and that's sort of the stable build of uifi where they just slap it snapshot it and say okay bios",
    "start": "2348880",
    "end": "2355640"
  },
  {
    "text": "vendors start building new bioses from this right so so that's patched in that",
    "start": "2355640",
    "end": "2361520"
  },
  {
    "text": "and U and then Intel we sort of asked Intel to do coordination to tell all the various ibvs independent bios vendors",
    "start": "2361520",
    "end": "2369000"
  },
  {
    "text": "and oems about these vulnerabilities to find out like who's affected which systems are affected and so forth and so",
    "start": "2369000",
    "end": "2375480"
  },
  {
    "text": "Intel went and had meetings with the the BIOS vendors told them about it and uh you know answered their questions and so",
    "start": "2375480",
    "end": "2381839"
  },
  {
    "text": "forth but when they went to say okay well so dear bios vendors dear oems which systems are actually vulnerable",
    "start": "2381839",
    "end": "2388400"
  },
  {
    "text": "which contained the exploitable vulnerability and when are they going to be patched and you know where are you",
    "start": "2388400",
    "end": "2393599"
  },
  {
    "text": "going to put the patch information Intel didn't really hear anything back from a lot of people people on that and",
    "start": "2393599",
    "end": "2398680"
  },
  {
    "text": "similarly then we didn't hear anything and around June we started to get a little nervous we said look you know we",
    "start": "2398680",
    "end": "2405000"
  },
  {
    "text": "told you up front it's going to be public uh you know in the black hat time frame so where are we standing like",
    "start": "2405000",
    "end": "2411359"
  },
  {
    "text": "who's fixing things where are the patch lists and stuff like that and so what we basically got was a taste of the bad old",
    "start": "2411359",
    "end": "2417599"
  },
  {
    "text": "days where uh people just don't reply people don't uh indicate which things",
    "start": "2417599",
    "end": "2423040"
  },
  {
    "text": "are actually patched um some information was shared with Intel under NDA and so we don't know that either um and so yeah",
    "start": "2423040",
    "end": "2430760"
  },
  {
    "text": "basically then we had to when we found out that this information wasn't getting back to us so that we could give you",
    "start": "2430760",
    "end": "2435960"
  },
  {
    "text": "information about which bioses you need to patch uh which things are vulnerable it wasn't getting back to us so we did",
    "start": "2435960",
    "end": "2441720"
  },
  {
    "text": "like sort of an aggressive last minute followup and um we'll share the results of that here in a second but basically",
    "start": "2441720",
    "end": "2447040"
  },
  {
    "text": "the point is bios vendors uh not really used to having to deal with you know vulnerability disclosure they're you",
    "start": "2447040",
    "end": "2453359"
  },
  {
    "text": "know a decade decade and a half behind the OS vendors who've been getting hammered on this for quite a while all",
    "start": "2453359",
    "end": "2459240"
  },
  {
    "text": "right so this is our basic current understanding uh Intel obviously patched it a while back Phoenix insight and Ami",
    "start": "2459240",
    "end": "2464960"
  },
  {
    "text": "they're all independent bios vendors uh they they were either vulnerable and fixed it or they believed that they're",
    "start": "2464960",
    "end": "2470200"
  },
  {
    "text": "non-vulnerable we have their official responses on the next slide uh HP as was mentioned we we just had an HP system",
    "start": "2470200",
    "end": "2477319"
  },
  {
    "text": "sitting around we investigated we said okay did the vulnerable reference implementation code actually make its",
    "start": "2477319",
    "end": "2482560"
  },
  {
    "text": "way into a real shipping bios and we found that it did and then the white paper describes you know how we ly",
    "start": "2482560",
    "end": "2487599"
  },
  {
    "text": "identified it and proved it so HP was vulnerable they've fixed things we'll bring a HP representative up here in a",
    "start": "2487599",
    "end": "2493760"
  },
  {
    "text": "second to talk a little bit about uh what they did how they coordinated how you can disclose vulnerabilities to them",
    "start": "2493760",
    "end": "2498960"
  },
  {
    "text": "in the future Dell we did an investigation we found that their code was in the bioses but uh the current uh",
    "start": "2498960",
    "end": "2505880"
  },
  {
    "text": "evidence is that it's not actually being invoked so it's just dead code off to the side and they're going to remove",
    "start": "2505880",
    "end": "2511119"
  },
  {
    "text": "that in the future and so unofficially um Lenova didn't give us an official statement but unofficially they",
    "start": "2511119",
    "end": "2517720"
  },
  {
    "text": "coordinating with their independent bios vendor as is Panasonic and other vendors we don't know because we've been trying to get uh contact information for those",
    "start": "2517720",
    "end": "2524720"
  },
  {
    "text": "vendors and we haven't been given it so Phoenix Ami and inside you can read this later but that's their responses with",
    "start": "2524720",
    "end": "2531400"
  },
  {
    "text": "two out of three saying they're vulnerable but fixed and one of them saying we didn't include that code so how coordination can be done",
    "start": "2531400",
    "end": "2538480"
  },
  {
    "text": "sort of in the future better I think that um you know C is you know computer Emergency Response Team or Readiness",
    "start": "2538480",
    "end": "2544920"
  },
  {
    "text": "team or whatever um you know there are neutral independent organization their whole job is just doing coordinations on",
    "start": "2544920",
    "end": "2551400"
  },
  {
    "text": "vulnerabilities and that kind of thing and uh and so originally we asked Intel to coordinate the vulnerability because",
    "start": "2551400",
    "end": "2557400"
  },
  {
    "text": "obviously they work with bios vendors very closely and uh consequently they have a lot of BIOS vendor contacts um",
    "start": "2557400",
    "end": "2564960"
  },
  {
    "text": "and so the problem with Intel doing it is that at the end of the day bios vendors are um they customers of Intel",
    "start": "2564960",
    "end": "2572640"
  },
  {
    "text": "right so they buy chips from Intel and Intel can recommend things but Intel can't tell them to do things and there's",
    "start": "2572640",
    "end": "2578760"
  },
  {
    "text": "certainly plenty of guidance out there that Intel gives them that they aren't necessarily following so the one uh Ray",
    "start": "2578760",
    "end": "2584359"
  },
  {
    "text": "of Hope here is that the ufi Forum has moved away from being just a um standard",
    "start": "2584359",
    "end": "2590000"
  },
  {
    "text": "specification type organization and uh actually being proactive now and setting up a security response team it's set to",
    "start": "2590000",
    "end": "2596640"
  },
  {
    "text": "go live on uh September 1st and they will handle the sort of coordination within the ufi",
    "start": "2596640",
    "end": "2602839"
  },
  {
    "start": "2602000",
    "end": "2635000"
  },
  {
    "text": "ecosystem so we already talked about how these source code level vulnerabilities sort of trickled down and made their way",
    "start": "2602839",
    "end": "2608480"
  },
  {
    "text": "into real systems miter we're you know independent organization we're not commercial organization we're sort of",
    "start": "2608480",
    "end": "2614000"
  },
  {
    "text": "neutral in here we just attacked an HP system because we had an HP system laying around just like last year we attacked a Dell system because we had a",
    "start": "2614000",
    "end": "2620319"
  },
  {
    "text": "Dell system laying around so uh we wanted to just like last year we wanted to have a Dell U we wanted to have an HP",
    "start": "2620319",
    "end": "2626000"
  },
  {
    "text": "rep come up give some contact information talk a little bit about what they're doing in biocurity and then after he's done then we'll go on to talk",
    "start": "2626000",
    "end": "2632160"
  },
  {
    "text": "about like what does the back door actually do now that we've installed it so um if you could come",
    "start": "2632160",
    "end": "2639160"
  },
  {
    "start": "2635000",
    "end": "2909000"
  },
  {
    "text": "up that's live thanks for the opportunity to speak uh I apologize UPF front I've been",
    "start": "2639160",
    "end": "2645880"
  },
  {
    "text": "battling a horrible cold all week and so far I'm not winning so I will do my best",
    "start": "2645880",
    "end": "2652480"
  },
  {
    "text": "to power through this uh my name is Jim Waldren I'm a senior technologist for",
    "start": "2652480",
    "end": "2657800"
  },
  {
    "text": "the division of HP that builds and sells business focused computers that's",
    "start": "2657800",
    "end": "2664760"
  },
  {
    "text": "desktops notebooks uh and T first off uh I want to say that HP uh",
    "start": "2664760",
    "end": "2672119"
  },
  {
    "text": "wants to acknowledge the very real value provided by miter and the important role",
    "start": "2672119",
    "end": "2677680"
  },
  {
    "text": "they play in securing the devices that we all depend upon uh each day to do our",
    "start": "2677680",
    "end": "2683160"
  },
  {
    "text": "work um their information and disclosures on vulnerabilities allow us",
    "start": "2683160",
    "end": "2688440"
  },
  {
    "text": "to do mitigations uh that otherwise might be exploited by you know bad people to do",
    "start": "2688440",
    "end": "2694920"
  },
  {
    "text": "bad things and some of you know who who you are",
    "start": "2694920",
    "end": "2701280"
  },
  {
    "text": "uh uh in addition however miter is not the only uh research facility out there",
    "start": "2701280",
    "end": "2707440"
  },
  {
    "text": "and uh we encourage anybody who discovers any security issues with our stuff to let us know we take all",
    "start": "2707440",
    "end": "2714240"
  },
  {
    "text": "security information very seriously uh if you wish to report a security issue",
    "start": "2714240",
    "end": "2719520"
  },
  {
    "text": "to HP please contact our software security Response Team you can reach",
    "start": "2719520",
    "end": "2724760"
  },
  {
    "text": "them at security-- alert at h p.com uh as far as this specific",
    "start": "2724760",
    "end": "2731559"
  },
  {
    "text": "vulnerability and its use on an HP 2540p Elite book uh just to put it in context",
    "start": "2731559",
    "end": "2738359"
  },
  {
    "text": "the uh system uh the elite book uh 2540p first shipped in March of",
    "start": "2738359",
    "end": "2746079"
  },
  {
    "text": "2010 uh to give you an idea of what that kind of means in computer years uh it's",
    "start": "2746079",
    "end": "2751400"
  },
  {
    "text": "very likely that the designers who put this system together had never heard of Windows 8 at that time uh that said um",
    "start": "2751400",
    "end": "2759079"
  },
  {
    "text": "this is a real vulnerability and we have provided a fix so um there is a location",
    "start": "2759079",
    "end": "2765000"
  },
  {
    "text": "where you can uh get a updated bios that contains uh the resolution of the issues",
    "start": "2765000",
    "end": "2771240"
  },
  {
    "text": "discussed um by miter in this briefing uh and you can get it at the support",
    "start": "2771240",
    "end": "2776880"
  },
  {
    "text": "drivers and downloads page for the 2540p uh at hp.com uh if you have additional",
    "start": "2776880",
    "end": "2783720"
  },
  {
    "text": "questions about this vulnerability I'm not going to answer a bunch of questions here these guys need to get on with their demo um but we do have a HP",
    "start": "2783720",
    "end": "2791760"
  },
  {
    "text": "security bulletin available and we've provided a link here where you can download that PDF and uh get additional",
    "start": "2791760",
    "end": "2799800"
  },
  {
    "text": "information now we all know that there's no actual Magic Bullet to get rid of all",
    "start": "2799800",
    "end": "2805160"
  },
  {
    "text": "vulnerabilities in a system it's particularly challenging for bios Engineers who have a hard time",
    "start": "2805160",
    "end": "2812240"
  },
  {
    "text": "anticipating the tools and techniques that might be used by attackers as many as four or five years into the future",
    "start": "2812240",
    "end": "2819400"
  },
  {
    "text": "when they design their systems that said HP believes that security of the BIOS is",
    "start": "2819400",
    "end": "2824599"
  },
  {
    "text": "a very important area and we're putting a lot of research and effort into Technologies to help in this area uh we",
    "start": "2824599",
    "end": "2832520"
  },
  {
    "text": "started rolling out a new technology called sh in 2013 uh to our Elite uh level of",
    "start": "2832520",
    "end": "2840520"
  },
  {
    "text": "computers uh the shart system leverages an additional separate route of trust",
    "start": "2840520",
    "end": "2846119"
  },
  {
    "text": "for measurement that can independently measure the BIOS and ensure that it hasn't been modified",
    "start": "2846119",
    "end": "2853119"
  },
  {
    "text": "when it detects a modification it can also restore that bios to a known good",
    "start": "2853119",
    "end": "2858880"
  },
  {
    "text": "safe State and it can do this All automatically depending on the security",
    "start": "2858880",
    "end": "2864480"
  },
  {
    "text": "policy settings in the configuration it's possible for it to completely restore the system before the first line",
    "start": "2864480",
    "end": "2870960"
  },
  {
    "text": "of BIOS code ever runs and without any interaction by a user or administrator",
    "start": "2870960",
    "end": "2876359"
  },
  {
    "text": "so we believe believe that sh start and other similar technologies will be a more and more important part of security",
    "start": "2876359",
    "end": "2883000"
  },
  {
    "text": "in the PC ecosystem going forward so I appreciate uh your attention and I'll",
    "start": "2883000",
    "end": "2888119"
  },
  {
    "text": "give it back to the minor guys who have more cool demos to show you all right",
    "start": "2888119",
    "end": "2893359"
  },
  {
    "text": "thanks Jim so yeah we just wanted to give a hint to that you know there are increasing biocurity techniques coming",
    "start": "2893359",
    "end": "2898680"
  },
  {
    "text": "down the line and people need to sort of be aware of them and what they can do so all right we're going to just power",
    "start": "2898680",
    "end": "2903960"
  },
  {
    "text": "through this right we already had you know this is good because this told me you know who the tourists are and who the people are that actually care so uh",
    "start": "2903960",
    "end": "2911800"
  },
  {
    "text": "we have a little proof of concept here so the exploit the Queen's Gambit exploit which we ran installed a back",
    "start": "2911800",
    "end": "2917280"
  },
  {
    "text": "door into the BIOS this back door is going to run at every system boot it's going to install itself into system",
    "start": "2917280",
    "end": "2923599"
  },
  {
    "text": "management mode we call this proof of concept The Watcher if I had more time I would tell you all the comic book",
    "start": "2923599",
    "end": "2928839"
  },
  {
    "start": "2925000",
    "end": "2949000"
  },
  {
    "text": "analogy relevance and so forth but the the key point is the Watcher lives in system management mode which is a",
    "start": "2928839",
    "end": "2935359"
  },
  {
    "text": "location where it can see everyone's memory but no one can see its memory so you can never directly inspect the",
    "start": "2935359",
    "end": "2941960"
  },
  {
    "text": "system and see that the Watcher is actually installed you can only sort of side side inspect that the BIOS is",
    "start": "2941960",
    "end": "2948319"
  },
  {
    "text": "actually you know intact so here's how The Watcher basically works so it's sitting there in system management mode",
    "start": "2948319",
    "end": "2954520"
  },
  {
    "start": "2949000",
    "end": "3132000"
  },
  {
    "text": "and all it does is it sits there and it watches it has no it's extremely tiny",
    "start": "2954520",
    "end": "2960079"
  },
  {
    "text": "because it doesn't like build in all the capability in the world it just tries to find capability sitting somewhere in",
    "start": "2960079",
    "end": "2965920"
  },
  {
    "text": "memory right so all it has to do is know how to scan memory and if it scans memory finds a magic signature then it",
    "start": "2965920",
    "end": "2972359"
  },
  {
    "text": "will execute as code whatever is after the magic signature so some controller",
    "start": "2972359",
    "end": "2977559"
  },
  {
    "text": "puts something into your memory somehow there's many different ways you can use your imagination they can send stuff",
    "start": "2977559",
    "end": "2983359"
  },
  {
    "text": "over the network they can you can open up a document they can control your webpage rendering whatever somehow an attacker gets some",
    "start": "2983359",
    "end": "2991359"
  },
  {
    "text": "memory set a particular way on your system The Watcher is already installed it's always watching it's it's always",
    "start": "2991359",
    "end": "2997559"
  },
  {
    "text": "waiting and it's continuing to scan memory and it finds bam there's a magic signature there's some code that I",
    "start": "2997559",
    "end": "3004319"
  },
  {
    "text": "should execute now and when it executes that code it does whatever the attacker wanted it to do so this is why we sort",
    "start": "3004319",
    "end": "3009960"
  },
  {
    "text": "of say attackers can do anything they can do every single type of attack",
    "start": "3009960",
    "end": "3015480"
  },
  {
    "text": "that's possible later on the system because this most privileged execution domain can just pull in arbitrary code",
    "start": "3015480",
    "end": "3021559"
  },
  {
    "text": "and execute it for the attacker so can do whatever so in the comics The Watcher is SW never to interfere but he's always",
    "start": "3021559",
    "end": "3028440"
  },
  {
    "text": "interfering anyways so uh the most famous thing is tells the humans that uh",
    "start": "3028440",
    "end": "3033960"
  },
  {
    "text": "the devour of Worlds is coming so we wanted to make it clear that we just did the exploit from Windows but um the smm",
    "start": "3033960",
    "end": "3042760"
  },
  {
    "text": "agent is sitting there below the operating system below the hypervisor it sits there it lives forever it's persistent so we just booted the system",
    "start": "3042760",
    "end": "3049000"
  },
  {
    "text": "the same Windows system into Linux and uh and now we're going to show that The Watcher is still sitting around waiting",
    "start": "3049000",
    "end": "3055240"
  },
  {
    "text": "and watching waiting for some uh payload to actually be installed into memory and",
    "start": "3055240",
    "end": "3060799"
  },
  {
    "text": "then if it finds it it'll execute it so uh this is just simple thing we have a",
    "start": "3060799",
    "end": "3066640"
  },
  {
    "text": "little IO application it's going to cause a system management interrupt it's going to wake up the Watcher so we can either have the Watcher running all the",
    "start": "3066640",
    "end": "3072240"
  },
  {
    "text": "time or we can only have The Watcher run on demand we're just for Simplicity we're making the Watcher run on Demand right here so I have a little",
    "start": "3072240",
    "end": "3078319"
  },
  {
    "text": "application it's going to wake up the Watcher and in this case if I pass argument 8 it woke up the Watcher and",
    "start": "3078319",
    "end": "3083760"
  },
  {
    "text": "The Watcher didn't find any payload because we didn't put any payload in memory so I do this I8 a bunch of times",
    "start": "3083760",
    "end": "3088880"
  },
  {
    "text": "The Watcher is waking up scanning all memory and not finding anything but if I do io9 this application will now create",
    "start": "3088880",
    "end": "3096480"
  },
  {
    "text": "a magic payload just stick it in memory wherever and then it'll wake up the Watcher The Watcher will find it and",
    "start": "3096480",
    "end": "3103480"
  },
  {
    "text": "then it'll go actually execute the payload so there you go The Watcher is waiting hiding executing stuff so the",
    "start": "3103480",
    "end": "3110640"
  },
  {
    "text": "Watcher printed out though I'm forbidden to interfere maybe just this one time and then the payload there that's",
    "start": "3110640",
    "end": "3116160"
  },
  {
    "text": "actually the assembly code that it found in memory so all that assembly does is it's just gets a address for print",
    "start": "3116160",
    "end": "3123240"
  },
  {
    "text": "function and passes the arguments into print so the key point is payloads can do anything and everything and uh and if",
    "start": "3123240",
    "end": "3131680"
  },
  {
    "text": "we had more time we'd show all sorts of more fun stuff so now we're going to go with our like our last thing just uh",
    "start": "3131680",
    "end": "3137119"
  },
  {
    "start": "3132000",
    "end": "3173000"
  },
  {
    "text": "50/50 chance it works in the comic books ultimate nullifier powerful weapon most powerful",
    "start": "3137119",
    "end": "3142359"
  },
  {
    "text": "weapon in the universe can destroy the universe well in BIOS world and with the the breaking system world or in the",
    "start": "3142359",
    "end": "3149480"
  },
  {
    "text": "braking systems world we care about if you can corrupt the entry Vector of the",
    "start": "3149480",
    "end": "3154559"
  },
  {
    "text": "BIOS if you corrupt the very first instruction that ever executes on the BIOS there's no error handling at that",
    "start": "3154559",
    "end": "3160480"
  },
  {
    "text": "point there's no recovery from that so if the first instruction is an error there's nothing you can do about it you",
    "start": "3160480",
    "end": "3165760"
  },
  {
    "text": "can't boot the system you can't boot from a boot CD and reimage the system right you're just dead in the water the",
    "start": "3165760",
    "end": "3171680"
  },
  {
    "text": "system will never ever uh run again so we're going to try this we had like a 50/50 chance that it'll actually work",
    "start": "3171680",
    "end": "3177359"
  },
  {
    "start": "3173000",
    "end": "3193000"
  },
  {
    "text": "we're going to send in this payload through ping packets over the network so that's we just want to make the point",
    "start": "3177359",
    "end": "3182640"
  },
  {
    "text": "that like look any way that the attacker can get stuff into memory so this thing is not really like listening or caring",
    "start": "3182640",
    "end": "3188160"
  },
  {
    "text": "it's just the Ping packets show up in a memory buffer and The Watcher if it finds it uh will go ahead and execute it",
    "start": "3188160",
    "end": "3195359"
  },
  {
    "start": "3193000",
    "end": "3337000"
  },
  {
    "text": "so I need to okay so I'm going to manually configure that you talk about uh what we're doing here",
    "start": "3195359",
    "end": "3203559"
  },
  {
    "text": "so so essentially yeah what what we're have with this with this particular proof of concept is that um Zeno is",
    "start": "3204200",
    "end": "3210119"
  },
  {
    "text": "manually causing the smis there is a way to program the chipset to like periodically generate SMI so that we can",
    "start": "3210119",
    "end": "3215480"
  },
  {
    "text": "have the Watcher running like all the time but in this case one it was um we're kind of working on getting the",
    "start": "3215480",
    "end": "3221160"
  },
  {
    "text": "Watcher done late into the evening last night and it was hard to implement the periodic smis uh and make sure",
    "start": "3221160",
    "end": "3226200"
  },
  {
    "text": "everything else is working and just so you can see that we're manually like initiating the The Watcher through generating an SMI through the support IO",
    "start": "3226200",
    "end": "3232599"
  },
  {
    "text": "but yeah when we have the whole finished weaponized thing working and it will be running on its own all in the background",
    "start": "3232599",
    "end": "3238559"
  },
  {
    "text": "so Zeno just set up the uh the Mac to start pinging the system we're going to cross our fingers and see if it finds",
    "start": "3238559",
    "end": "3243640"
  },
  {
    "text": "the payload there are some buffering issues but finally it reads the the bites coming in off the icmp packet",
    "start": "3243640",
    "end": "3250640"
  },
  {
    "text": "which is just to break the system so you can see right there it did actually just find these uh these bites it was looking",
    "start": "3250640",
    "end": "3256440"
  },
  {
    "text": "for in the icmp packet and um the system is actually bricked right now like if we",
    "start": "3256440",
    "end": "3262000"
  },
  {
    "text": "try to reset it will just be dead because we've overwritten the reset Vector with zero all right so yeah like",
    "start": "3262000",
    "end": "3267079"
  },
  {
    "text": "you said we saw the Watcher print out we didn't see any like payload print because all this payload does is it overwrites the very first instruction",
    "start": "3267079",
    "end": "3274480"
  },
  {
    "text": "that the CPU ever executes so we can show that like at this point if I reboot the system it'll just you know never",
    "start": "3274480",
    "end": "3280240"
  },
  {
    "text": "come up again I powered it off powered it on there's no like magic like booting up kind of thing and then just to show",
    "start": "3280240",
    "end": "3285920"
  },
  {
    "text": "that a little further we're going to show that this was just sort of a surgical 4 byte right at the reset",
    "start": "3285920",
    "end": "3291599"
  },
  {
    "text": "instruction and uh and now you can no longer boot your system so reason we",
    "start": "3291599",
    "end": "3296720"
  },
  {
    "text": "obviously care about this kind of thing is that if you have uh oops I just programmed it to overwrite what I was",
    "start": "3296720",
    "end": "3302599"
  },
  {
    "text": "doing CRA cancel all right I don't know if this is going to work now because I just",
    "start": "3302599",
    "end": "3308079"
  },
  {
    "text": "overwrote maybe what I was doing but let's try it anyways read it and then uh",
    "start": "3308079",
    "end": "3313799"
  },
  {
    "text": "see what we can find that's definitely brick now yeah yeah yeah it's definitely",
    "start": "3313799",
    "end": "3319000"
  },
  {
    "text": "brick at this point all right recognize my thing so Zeno was basically pointing",
    "start": "3319000",
    "end": "3325280"
  },
  {
    "text": "out that the idea here is is that you want to have some agent listening in the background and if hostilities break out with another country that uh the enemy",
    "start": "3325280",
    "end": "3332119"
  },
  {
    "text": "country could just send a bunch of packets to your systems just like remotely break them once they have this agent installed by exploiting your firmware so that was sort of the idea we",
    "start": "3332119",
    "end": "3339000"
  },
  {
    "start": "3337000",
    "end": "3353000"
  },
  {
    "text": "had behind this proof of concept all right so basically like I",
    "start": "3339000",
    "end": "3344240"
  },
  {
    "text": "said so the reset Vector on flash chips it always the flash chip gets mapped to the highest memory address FFF F0 is",
    "start": "3344240",
    "end": "3351200"
  },
  {
    "text": "where you always will the CPU will always pull in the first instruction from fffff and so if we go there F on this",
    "start": "3351200",
    "end": "3358440"
  },
  {
    "start": "3353000",
    "end": "3379000"
  },
  {
    "text": "chip it's 3 f f f F0",
    "start": "3358440",
    "end": "3363720"
  },
  {
    "text": "then well yeah I accidentally started overwriting it but there you go it won't",
    "start": "3363720",
    "end": "3368920"
  },
  {
    "text": "break it won't run anymore this would have just been like four bytes of zeros in order to show it if I hadn't accidentally started rewriting it all",
    "start": "3368920",
    "end": "3375880"
  },
  {
    "text": "right so we're over time so we're just going to skip to our conclusion slide",
    "start": "3375880",
    "end": "3381240"
  },
  {
    "text": "right so the point is well yeah so also cernus SC the slides we have you know",
    "start": "3381240",
    "end": "3387640"
  },
  {
    "text": "you can actually detect this we have a tool out there which checks the BIOS flash finds out whether there's any back",
    "start": "3387640",
    "end": "3393280"
  },
  {
    "text": "doors installed into it but uh yeah basically cernus the king's Gambit",
    "start": "3393280",
    "end": "3399760"
  },
  {
    "text": "Queen's Gambit this is part of a growing managerie of uh many different attacks down at this level and if you're not",
    "start": "3399760",
    "end": "3404880"
  },
  {
    "text": "paying attention to these uh you're going to get burned so with that we're",
    "start": "3404880",
    "end": "3409920"
  },
  {
    "text": "done no time for questions we'll catch you in the uh outside yeah thank you very much um I questions out in the hall",
    "start": "3409920",
    "end": "3418720"
  },
  {
    "text": "and uh enjoy the rest of the show",
    "start": "3418720",
    "end": "3422078"
  }
]