[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "[Music]",
    "start": "1180",
    "end": "14730"
  },
  {
    "text": "hello everyone today we will talk about how to hide c2 traffic when fantastic",
    "start": "16640",
    "end": "23039"
  },
  {
    "text": "people may hear about domain fronting which uses cdn as a redirector and protector for situ traffic",
    "start": "23039",
    "end": "30480"
  },
  {
    "text": "nowadays the main fronting is not well support supported by serial",
    "start": "30480",
    "end": "35600"
  },
  {
    "text": "vendors and easy to detect today we will upgrade the main fronting",
    "start": "35600",
    "end": "41200"
  },
  {
    "text": "to domain boring we will show some tricks we found in some syrian meditations and turn them",
    "start": "41200",
    "end": "47600"
  },
  {
    "text": "together to borrow a validated gps certificate to hide our c2 traffic",
    "start": "47600",
    "end": "55120"
  },
  {
    "text": "i'm joining focus on web security and contesting i have spoken at multiple",
    "start": "56160",
    "end": "61920"
  },
  {
    "text": "security conferences and my work meets tinder he does web security research and threat teaming",
    "start": "61920",
    "end": "69439"
  },
  {
    "text": "he found multiple vulnerabilities in microsoft and safari we are all from tencent security xiaomi",
    "start": "69439",
    "end": "76240"
  },
  {
    "text": "lab we will first see how previous people",
    "start": "76240",
    "end": "83280"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "hiding the city traffic using domain fronting and domain hiding and then we will show how https cdn",
    "start": "83280",
    "end": "91520"
  },
  {
    "text": "works and how we use some features incident implementation to break the",
    "start": "91520",
    "end": "97200"
  },
  {
    "text": "workflow and hide our c2 traffic you will know what the month boring is",
    "start": "97200",
    "end": "104399"
  },
  {
    "text": "and how it works finally we will provide some detection",
    "start": "104399",
    "end": "110240"
  },
  {
    "text": "methods and mitigations one more thing there are some rules in palo alto",
    "start": "110240",
    "end": "116799"
  },
  {
    "text": "firewall that can be used to detect and block the membrane theoretically",
    "start": "116799",
    "end": "123680"
  },
  {
    "text": "we will use a demo to show how we bypass the to firewall rules",
    "start": "123680",
    "end": "130239"
  },
  {
    "text": "back to the year of 2015 researchers first proposed human form",
    "start": "132319",
    "end": "138160"
  },
  {
    "text": "domain fronting the idea is simple cdn acts like a rewards proxy",
    "start": "138160",
    "end": "144959"
  },
  {
    "text": "cdnvent is resource based on the http host header from the client's request",
    "start": "144959",
    "end": "150560"
  },
  {
    "text": "and has nothing to do with the tr connection so the client first make a tr connection",
    "start": "150560",
    "end": "157440"
  },
  {
    "text": "with the cdn server using a lot.com certificate and",
    "start": "157440",
    "end": "162879"
  },
  {
    "text": "the http request inside of the trs connection use a verbatim.com host",
    "start": "162879",
    "end": "169200"
  },
  {
    "text": "the cdn will route back to the origin based on the forbidden.com rather than allow.com",
    "start": "169200",
    "end": "175680"
  },
  {
    "text": "so if there is no https decryption device hacking like a",
    "start": "175680",
    "end": "181680"
  },
  {
    "text": "firewall the traffic looks like communicating with the law.com and the cheese the",
    "start": "181680",
    "end": "187440"
  },
  {
    "text": "firewall there are some limitations of domain",
    "start": "187440",
    "end": "192480"
  },
  {
    "start": "190000",
    "end": "190000"
  },
  {
    "text": "fronting asymmetric attack shows the way to detect domain fronting is",
    "start": "192480",
    "end": "198560"
  },
  {
    "text": "decrypting the http as traffic and check if sni is equal to the host header",
    "start": "198560",
    "end": "206319"
  },
  {
    "text": "some cdm windows such as google amazon cloudflare have already stopped",
    "start": "206319",
    "end": "212560"
  },
  {
    "text": "supporting the moon fronting last year at defcon",
    "start": "212560",
    "end": "218879"
  },
  {
    "text": "eric proposed a new concept customer hiding the main idea is using a feature of",
    "start": "218879",
    "end": "226159"
  },
  {
    "text": "cloudflare to hide traffic cloud players post trs 1.3 with yes and",
    "start": "226159",
    "end": "232640"
  },
  {
    "text": "line which is currently an ieft draft",
    "start": "232640",
    "end": "238560"
  },
  {
    "text": "yes i will encrypt the ethernet so that the firewall does not know what domain",
    "start": "238879",
    "end": "244799"
  },
  {
    "text": "the client established connection to as attacker can",
    "start": "244799",
    "end": "250319"
  },
  {
    "text": "also attack account upon a fake ethernet to for the firewall",
    "start": "250319",
    "end": "256079"
  },
  {
    "text": "this works because most of the firewalls do not support the ethernet and cloud",
    "start": "256079",
    "end": "261359"
  },
  {
    "text": "flare allows the existence of both ether and yasen",
    "start": "261359",
    "end": "266800"
  },
  {
    "start": "266000",
    "end": "266000"
  },
  {
    "text": "the hiding has some limitations too for now color flare will refuse https",
    "start": "267680",
    "end": "275280"
  },
  {
    "text": "connections if the client hello has both the s9 and s9",
    "start": "275280",
    "end": "280880"
  },
  {
    "text": "and the esi is not well supported as it is only only a draft",
    "start": "280880",
    "end": "287440"
  },
  {
    "text": "some enterprise environments districts countries have blocked or want to block",
    "start": "287440",
    "end": "293520"
  },
  {
    "text": "either we can see either domain fronting or",
    "start": "293520",
    "end": "299840"
  },
  {
    "start": "296000",
    "end": "296000"
  },
  {
    "text": "domain hiding there are some limitations an ideal c2 must have following features",
    "start": "299840",
    "end": "306800"
  },
  {
    "text": "there are a large number of ip addresses for c2 c2 traffic is encrypted",
    "start": "306800",
    "end": "314960"
  },
  {
    "text": "establishing connections using high reputation domains with validate tdpi",
    "start": "315199",
    "end": "320560"
  },
  {
    "text": "certificates these are already features of domain fronting or domain hiding but we want",
    "start": "320560",
    "end": "327199"
  },
  {
    "text": "more the work the network traffic looks like",
    "start": "327199",
    "end": "332479"
  },
  {
    "text": "normal https traffic especially ethanol is equal to the host",
    "start": "332479",
    "end": "337600"
  },
  {
    "text": "even decrypted and the traffic should not be blocked in some districts",
    "start": "337600",
    "end": "343840"
  },
  {
    "text": "so there comes domain borrowing next we will talk about what domain",
    "start": "343840",
    "end": "350800"
  },
  {
    "text": "borrowing is and how it works let's begin with how https cdn works",
    "start": "350800",
    "end": "358120"
  },
  {
    "start": "354000",
    "end": "354000"
  },
  {
    "text": "http works like a mac in the middle it needs a private keys or custom domains",
    "start": "358120",
    "end": "364240"
  },
  {
    "text": "to decrypt https traffic and then rows to the origin",
    "start": "364240",
    "end": "370400"
  },
  {
    "text": "so first website admin should upload certificates and private key to cdn and",
    "start": "370400",
    "end": "376720"
  },
  {
    "text": "make the domain cname record points to cdn",
    "start": "376720",
    "end": "382160"
  },
  {
    "text": "a normal client request goes like this first",
    "start": "384000",
    "end": "389280"
  },
  {
    "text": "the client try to resolve the domain name and get one ipo of the cdn edge",
    "start": "389280",
    "end": "394560"
  },
  {
    "text": "server then this the client sends https client hello",
    "start": "394560",
    "end": "400639"
  },
  {
    "text": "with cdn.example.com to the iep the cdn finds the certificate of",
    "start": "400639",
    "end": "408199"
  },
  {
    "text": "syrian.example.com and establishes https connection",
    "start": "408199",
    "end": "414000"
  },
  {
    "text": "after establishing connection with cn.example.com staffing certificates",
    "start": "414800",
    "end": "421199"
  },
  {
    "text": "the client sends https encrypted data to the ceiling server the cdn server decrypts the data and",
    "start": "421199",
    "end": "429280"
  },
  {
    "text": "routes the request to origin server based on the http host header in the my",
    "start": "429280",
    "end": "436319"
  },
  {
    "text": "fronting the http headset domain name differs from the https the http host",
    "start": "436319",
    "end": "443120"
  },
  {
    "text": "header then it behaves like communicating with random but actually forward the request",
    "start": "443120",
    "end": "451520"
  },
  {
    "text": "to another the workflow of cdma be very familiar to",
    "start": "451520",
    "end": "458720"
  },
  {
    "start": "454000",
    "end": "454000"
  },
  {
    "text": "people but i have some questions does the client really need to do a dns",
    "start": "458720",
    "end": "464960"
  },
  {
    "text": "query actually if you already have an ipo of the cdns ad server you can set",
    "start": "464960",
    "end": "472080"
  },
  {
    "text": "sni in cloud hello and directly connect to it",
    "start": "472080",
    "end": "478520"
  },
  {
    "text": "even the client can use another cdn domain for dna resolution",
    "start": "479120",
    "end": "484720"
  },
  {
    "text": "if we have cdn.a.com and syrian.be.com",
    "start": "484720",
    "end": "490240"
  },
  {
    "text": "in the same serial number mostly the two domains shares the same cdna servers",
    "start": "490240",
    "end": "498960"
  },
  {
    "text": "so we can use cdn.8.com resolved ip to establish connection with",
    "start": "498960",
    "end": "506000"
  },
  {
    "text": "syrian.b.com another question is can we register a",
    "start": "506000",
    "end": "513760"
  },
  {
    "text": "arbitrary domain syrian first registering a domain incident does not mean we",
    "start": "513760",
    "end": "520240"
  },
  {
    "text": "control that domain we can only add an root rule in the syrian we cannot modify the",
    "start": "520240",
    "end": "527440"
  },
  {
    "text": "domains in domains dns record for example we can register blah.com",
    "start": "527440",
    "end": "534640"
  },
  {
    "text": "incident when we skip the dnc resolution and",
    "start": "534640",
    "end": "539839"
  },
  {
    "text": "force to make connections to the cdna server we can set blackhead.com in the",
    "start": "539839",
    "end": "545360"
  },
  {
    "text": "http request codes header and the cdn will route back to our uwo already",
    "start": "545360",
    "end": "550959"
  },
  {
    "text": "server we found the most sending windows that",
    "start": "550959",
    "end": "557440"
  },
  {
    "text": "doesn't have domain validation when people register a new domain",
    "start": "557440",
    "end": "564240"
  },
  {
    "text": "some top selling winners will validate domain ownership azure and cloudflare use dsc name or ns",
    "start": "564720",
    "end": "572959"
  },
  {
    "text": "to validate the domain names aws cloudfront use https",
    "start": "572959",
    "end": "579040"
  },
  {
    "text": "certificate to validate users often or authorization to domain names",
    "start": "579040",
    "end": "586000"
  },
  {
    "text": "other cities such as factory stackpath they doesn't have any domain validation",
    "start": "586000",
    "end": "595279"
  },
  {
    "start": "595000",
    "end": "595000"
  },
  {
    "text": "as you can see in the slides we registered many famous domains faster than selectpath",
    "start": "596480",
    "end": "602560"
  },
  {
    "text": "like google github twitter and so on",
    "start": "602560",
    "end": "608560"
  },
  {
    "start": "610000",
    "end": "610000"
  },
  {
    "text": "practice domain in cdn seems useless because we do not have the corresponding",
    "start": "611600",
    "end": "617760"
  },
  {
    "text": "certificate once cdn can't find the certificate most cities will send the default search to",
    "start": "617760",
    "end": "625120"
  },
  {
    "text": "the client some cities will send tcp reset to the",
    "start": "625120",
    "end": "630480"
  },
  {
    "text": "client we can see firstly returns the default",
    "start": "630480",
    "end": "635680"
  },
  {
    "text": "certificate with common name that default.fastlay.net",
    "start": "635680",
    "end": "641399"
  },
  {
    "start": "644000",
    "end": "644000"
  },
  {
    "text": "so until now we can borrow our arbitrary domain syria we have sni equal to cost which can",
    "start": "644560",
    "end": "651839"
  },
  {
    "text": "bypass domain fronting detection but we still do not have a cracked hdtv",
    "start": "651839",
    "end": "658839"
  },
  {
    "text": "certificate because the cdn do not have the search and private keys",
    "start": "658839",
    "end": "665200"
  },
  {
    "text": "we should set to verify either the outset to force to make a connection",
    "start": "665200",
    "end": "671440"
  },
  {
    "text": "there comes the question how to obtain a valid http search",
    "start": "671440",
    "end": "677040"
  },
  {
    "text": "hackers can do it by hacking we can either steal a validated tdpr",
    "start": "677040",
    "end": "684160"
  },
  {
    "start": "681000",
    "end": "681000"
  },
  {
    "text": "certificate or apply for a new one if we get a web show or we find an",
    "start": "684160",
    "end": "690000"
  },
  {
    "text": "arbitrary file download vulnerability we can read the certificate and the pro then the private key directly",
    "start": "690000",
    "end": "697839"
  },
  {
    "text": "if we can write arbitrary file to the web server or we can take our subdomain",
    "start": "697839",
    "end": "703440"
  },
  {
    "text": "we can apply for a new https certificate with http based validation",
    "start": "703440",
    "end": "709839"
  },
  {
    "text": "cloud storage is a perfect place to get a http asset with common name of a cloud",
    "start": "709839",
    "end": "715600"
  },
  {
    "text": "vendor microsoft do not consider supplementary",
    "start": "715600",
    "end": "723440"
  },
  {
    "text": "takeover is a security issue so we use it as an example",
    "start": "723440",
    "end": "729279"
  },
  {
    "text": "a friend of mine found a microsoft supplementary cure and we",
    "start": "729279",
    "end": "734320"
  },
  {
    "text": "applied for a https cert and product key for that domain",
    "start": "734320",
    "end": "739360"
  },
  {
    "text": "we can see now the subdomain is not vulnerable at all but the certificate is still valid",
    "start": "739360",
    "end": "747120"
  },
  {
    "start": "748000",
    "end": "748000"
  },
  {
    "text": "we upload the valid certificate to aws cloudfront and pass the cloudfront validation",
    "start": "748800",
    "end": "758680"
  },
  {
    "text": "finally we can register pbe.verified.microsoft.com",
    "start": "760000",
    "end": "764519"
  },
  {
    "text": "in ews cloudfront and use it for",
    "start": "765120",
    "end": "770079"
  },
  {
    "text": "rc2 here's the demo we used an open source c to call carbonate",
    "start": "770839",
    "end": "777120"
  },
  {
    "text": "we wrote a custom implement implant tablet we use the domain block",
    "start": "777120",
    "end": "785040"
  },
  {
    "text": "we use the domain that is blogs.aws.amazon.com",
    "start": "785040",
    "end": "790200"
  },
  {
    "text": "to get the ipo cdns server in the c2 traffic",
    "start": "790399",
    "end": "795600"
  },
  {
    "text": "sni is equal to the host and we have a valid certificate let's",
    "start": "795600",
    "end": "801440"
  },
  {
    "text": "see how it works",
    "start": "801440",
    "end": "804399"
  },
  {
    "text": "we can see we have microsoft domain in cloudfront",
    "start": "807360",
    "end": "814120"
  },
  {
    "text": "and here is our c2 you can see the dragon ethanol is the",
    "start": "821920",
    "end": "827279"
  },
  {
    "text": "same and there is no online",
    "start": "827279",
    "end": "832560"
  },
  {
    "text": "we generate the binary and",
    "start": "832959",
    "end": "839519"
  },
  {
    "text": "run it in a windows machine",
    "start": "839519",
    "end": "843560"
  },
  {
    "text": "we can see the at the http host is microsoft subdomain",
    "start": "849040",
    "end": "856399"
  },
  {
    "text": "and the ethernet in the clan halo is the same with the http host",
    "start": "856399",
    "end": "863760"
  },
  {
    "text": "and the third is valid",
    "start": "863760",
    "end": "867560"
  },
  {
    "text": "excuse us command and we can see the city works well",
    "start": "877040",
    "end": "885560"
  },
  {
    "text": "okay people may ask how to obtain a validated tdps certificate without",
    "start": "888000",
    "end": "893440"
  },
  {
    "text": "hacking let tienda give you the answers",
    "start": "893440",
    "end": "899040"
  },
  {
    "text": "hi i'm chancelling next i'm going to talk about how to obtain valid gdpr certificates without",
    "start": "899040",
    "end": "907360"
  },
  {
    "text": "hacking firstly let's dive into how cdn",
    "start": "907360",
    "end": "913040"
  },
  {
    "start": "909000",
    "end": "909000"
  },
  {
    "text": "distribute https certificates we found there are two ways to distribute certificates",
    "start": "913040",
    "end": "919600"
  },
  {
    "text": "the correct way goes like this the client wants to establish https",
    "start": "919600",
    "end": "926079"
  },
  {
    "text": "connection with the cdn register so you send screen hello to the cdn and",
    "start": "926079",
    "end": "933279"
  },
  {
    "text": "the sni is set to cn.example.com then the steering looks out of the",
    "start": "933279",
    "end": "938720"
  },
  {
    "text": "certificate in its database to the enquiry database select a",
    "start": "938720",
    "end": "944639"
  },
  {
    "text": "certificate from the database where domain name is equal to student.example.com",
    "start": "944639",
    "end": "951440"
  },
  {
    "text": "let's know that the actual cdn database are more complex",
    "start": "951440",
    "end": "956560"
  },
  {
    "text": "we only use this table to demonstrate the workflow apparently the first line of database",
    "start": "956560",
    "end": "963680"
  },
  {
    "text": "meets the condition which shows the certificate of study of",
    "start": "963680",
    "end": "969560"
  },
  {
    "text": "cdn.example.com is start for example the content search",
    "start": "969560",
    "end": "974720"
  },
  {
    "text": "and then the cdn will send a certificate back to the class in https server hello",
    "start": "974959",
    "end": "981839"
  },
  {
    "text": "finally the clients can use this certificate to complete the https communication",
    "start": "981839",
    "end": "988959"
  },
  {
    "text": "and this is the correct https certificate distribution process",
    "start": "988959",
    "end": "995800"
  },
  {
    "text": "however we found that sounds limiters doesn't correctly implement",
    "start": "997040",
    "end": "1003360"
  },
  {
    "text": "worldcat certificate distribution process",
    "start": "1003360",
    "end": "1008320"
  },
  {
    "text": "let's talk about the improper implementation and what attackers can do with this feature",
    "start": "1008399",
    "end": "1015199"
  },
  {
    "text": "an attacker can register static.example.com on cdn",
    "start": "1015199",
    "end": "1021199"
  },
  {
    "text": "and that need to upload the certificate of static.example.com",
    "start": "1021279",
    "end": "1026600"
  },
  {
    "text": "this then will add a new line in database like this",
    "start": "1026640",
    "end": "1031438"
  },
  {
    "text": "when the client use static.example.com to communicate with the student",
    "start": "1034319",
    "end": "1041038"
  },
  {
    "text": "the setting will query the database we will select the certificate from the database where certificate matches",
    "start": "1041039",
    "end": "1048400"
  },
  {
    "text": "static.example.com please know that",
    "start": "1048400",
    "end": "1053440"
  },
  {
    "text": "it's not that the query here is different from the correct one we discussed earlier",
    "start": "1053440",
    "end": "1061919"
  },
  {
    "text": "the world card certificate star for example the complexity in a search",
    "start": "1065280",
    "end": "1071280"
  },
  {
    "text": "matches the static.example.com in the first line of the database",
    "start": "1071280",
    "end": "1076880"
  },
  {
    "text": "but this certificate was uploaded by alice yes",
    "start": "1076880",
    "end": "1082240"
  },
  {
    "text": "this is the point the certificate owned by alice matches",
    "start": "1082240",
    "end": "1087360"
  },
  {
    "text": "the domain registered by the attacker",
    "start": "1087360",
    "end": "1092320"
  },
  {
    "text": "and then the city will send the certificate which is on the alice back to the client",
    "start": "1093039",
    "end": "1100320"
  },
  {
    "text": "as a result clients can use static.example.com to establish a valid",
    "start": "1100320",
    "end": "1105600"
  },
  {
    "text": "https connection with the student in other words",
    "start": "1105600",
    "end": "1110880"
  },
  {
    "text": "in other words attackers attacker the attacker borrows",
    "start": "1110880",
    "end": "1116880"
  },
  {
    "text": "the world card certificate from alice",
    "start": "1116880",
    "end": "1122280"
  },
  {
    "text": "so with this feature attacker attackers can register",
    "start": "1122559",
    "end": "1129440"
  },
  {
    "text": "subdomains and borrow wildcard https certificates from other steering users",
    "start": "1129440",
    "end": "1137240"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "we found that the stackpass cdn and cdn77 does help the future",
    "start": "1138480",
    "end": "1145679"
  },
  {
    "text": "so we can borrow worldcat https certificates are uploaded by other users",
    "start": "1145679",
    "end": "1151840"
  },
  {
    "text": "on staffa cd and cdn 77 we found there are some well-known",
    "start": "1151840",
    "end": "1159039"
  },
  {
    "text": "domains with wild-card https certificates on star pass and stin77",
    "start": "1159039",
    "end": "1166519"
  },
  {
    "text": "stack path is the syrian supporter of gs foundation so",
    "start": "1167360",
    "end": "1172960"
  },
  {
    "text": "there are some popular projects of js foundation like bootstrap and food also",
    "start": "1172960",
    "end": "1178400"
  },
  {
    "text": "post their static assets on that stair pasty and",
    "start": "1178400",
    "end": "1183840"
  },
  {
    "text": "sapa siding these front-end projects are widely used",
    "start": "1183840",
    "end": "1190160"
  },
  {
    "text": "in top person websites",
    "start": "1190160",
    "end": "1195120"
  },
  {
    "text": "there are also some interesting websites on this video like x videos",
    "start": "1195919",
    "end": "1201360"
  },
  {
    "text": "attackers can borrow their subdomains and valid https certificates to help to",
    "start": "1201360",
    "end": "1207200"
  },
  {
    "text": "hide city traffic useful drops in a column as an example",
    "start": "1207200",
    "end": "1216400"
  },
  {
    "text": "we register and uh we can register any sub domain so",
    "start": "1216400",
    "end": "1222559"
  },
  {
    "text": "bootstraps the intercom even non-existent domain like study or",
    "start": "1222559",
    "end": "1227840"
  },
  {
    "text": "bootstrap skin.com and when clients use static double",
    "start": "1227840",
    "end": "1233120"
  },
  {
    "text": "straps in.com as the snli in the https connection the screen will return the worldcard",
    "start": "1233120",
    "end": "1239760"
  },
  {
    "text": "certificates start.star.cdn.com to the cloud",
    "start": "1239760",
    "end": "1247200"
  },
  {
    "text": "then the clients can get a valid https connection which looks like a normal connection",
    "start": "1247200",
    "end": "1253520"
  },
  {
    "text": "output struct in this slide you can see we have",
    "start": "1253520",
    "end": "1260159"
  },
  {
    "text": "successfully registered text static double swap cdn.com",
    "start": "1260159",
    "end": "1267280"
  },
  {
    "text": "on start stackpass division",
    "start": "1267280",
    "end": "1271440"
  },
  {
    "text": "and static.draftstudent.com is an is a",
    "start": "1274480",
    "end": "1280640"
  },
  {
    "text": "non-existent domain you can see in the left screen i stick to query the dns records or",
    "start": "1280640",
    "end": "1288320"
  },
  {
    "text": "static double strategy static.strategin.com the result shows that the domain doesn't",
    "start": "1288320",
    "end": "1294240"
  },
  {
    "text": "have any dns record the wheels curved for static",
    "start": "1294240",
    "end": "1299799"
  },
  {
    "text": "bootstrapstion.com to resolve to ifco pass the image server and send the gtbs",
    "start": "1299799",
    "end": "1305840"
  },
  {
    "text": "request to the server it turns out that the staff has dna",
    "start": "1305840",
    "end": "1311200"
  },
  {
    "text": "server sends their certificates start double stop scn.com back to us",
    "start": "1311200",
    "end": "1317039"
  },
  {
    "text": "apparently their certificate is not uploaded by us and it doesn't belong to us",
    "start": "1317039",
    "end": "1324799"
  },
  {
    "text": "but we can borrow the world card certificate from other users who uploaded it",
    "start": "1324799",
    "end": "1333000"
  },
  {
    "text": "here's the demo shows how we use static.bootstrassdn.com in our situations here we use colonize ctos",
    "start": "1333360",
    "end": "1341039"
  },
  {
    "text": "before and write a custom implant template this register",
    "start": "1341039",
    "end": "1347320"
  },
  {
    "text": "started.bootstrasdean.com on starbuston the stop at the",
    "start": "1347320",
    "end": "1354200"
  },
  {
    "text": "www.sapa.com is a domain on staffordshire our situations use this",
    "start": "1354200",
    "end": "1359360"
  },
  {
    "text": "domain for dslr cup sni and host in the city traffic are",
    "start": "1359360",
    "end": "1365440"
  },
  {
    "text": "both static both strategies.com with a valid certificate start.dn.com",
    "start": "1365440",
    "end": "1372600"
  },
  {
    "text": "let's see how it works we have registered",
    "start": "1374080",
    "end": "1380158"
  },
  {
    "text": "we have registered a static bootstrap student.com on starbuzz",
    "start": "1380400",
    "end": "1387960"
  },
  {
    "text": "let's add the origin to our colonizer",
    "start": "1394640",
    "end": "1400080"
  },
  {
    "text": "lesson i said to static.slashdn.com in stator code and then we generate a studio agent",
    "start": "1401200",
    "end": "1408960"
  },
  {
    "text": "download the battery copy it to our windows machine",
    "start": "1408960",
    "end": "1416520"
  },
  {
    "text": "and execute it",
    "start": "1419039",
    "end": "1422000"
  },
  {
    "text": "you can see the host handler in the gdp request is steady double slotsdn.com",
    "start": "1425679",
    "end": "1432320"
  },
  {
    "text": "and then we're shocked lesson i implant hello is static double strappsdeen.com2",
    "start": "1432320",
    "end": "1439320"
  },
  {
    "text": "and the certificate is a valid broadcast certificate",
    "start": "1440559",
    "end": "1445840"
  },
  {
    "text": "the situation is online now the way is killed a shock mount to",
    "start": "1448640",
    "end": "1455039"
  },
  {
    "text": "public calculator",
    "start": "1455039",
    "end": "1458440"
  },
  {
    "text": "and it seems the pseudo agent works well",
    "start": "1460559",
    "end": "1464640"
  },
  {
    "text": "so what is domain boring we gave a definition here firstly",
    "start": "1466559",
    "end": "1472799"
  },
  {
    "text": "attackers register high reputations of domains on syria",
    "start": "1472799",
    "end": "1478880"
  },
  {
    "text": "secondly borrow valid https certificates attackers can borrow certificates from",
    "start": "1478880",
    "end": "1485600"
  },
  {
    "text": "vulnerable websites or wildcard certificates from other student users",
    "start": "1485600",
    "end": "1492159"
  },
  {
    "text": "then combine them to hide civil traffic",
    "start": "1492159",
    "end": "1497200"
  },
  {
    "text": "and circumvent sacrament listenership",
    "start": "1497200",
    "end": "1503760"
  },
  {
    "start": "1506000",
    "end": "1506000"
  },
  {
    "text": "we did a commemoration between the membori the fronting and the hiding",
    "start": "1508320",
    "end": "1514960"
  },
  {
    "text": "they can also use they can all use a higher reputation as a",
    "start": "1514960",
    "end": "1520240"
  },
  {
    "text": "and valid https certificate to communicate with",
    "start": "1520240",
    "end": "1525919"
  },
  {
    "text": "cdn by contrast the advantage of",
    "start": "1526840",
    "end": "1532320"
  },
  {
    "text": "the membering is sni can be same as the host",
    "start": "1532320",
    "end": "1538320"
  },
  {
    "text": "and the boring balance rely on not wildly supported https features",
    "start": "1538320",
    "end": "1545120"
  },
  {
    "text": "such as esra and this make the traffic looks like normal https",
    "start": "1545120",
    "end": "1552159"
  },
  {
    "text": "traffic next we will introduce some metals to",
    "start": "1552159",
    "end": "1560000"
  },
  {
    "text": "detect and mitigate the membrane domain boring",
    "start": "1560000",
    "end": "1565200"
  },
  {
    "start": "1565000",
    "end": "1565000"
  },
  {
    "text": "an important signature of the moon boring is that the clients abandon the answers resolution",
    "start": "1567279",
    "end": "1575120"
  },
  {
    "text": "before connecting to the student age server therefore for blue teams you can compare",
    "start": "1575120",
    "end": "1581440"
  },
  {
    "text": "the destination address of https connection with the dns local",
    "start": "1581440",
    "end": "1586960"
  },
  {
    "text": "results of the sni in the fieldwork for example",
    "start": "1586960",
    "end": "1592799"
  },
  {
    "text": "the clients use cdn.exemple.com ni to connect to ipc 1.1.1.1",
    "start": "1592799",
    "end": "1601960"
  },
  {
    "text": "the file will raise the s9 from the http client hello",
    "start": "1603440",
    "end": "1609039"
  },
  {
    "text": "and to dns lookup with it i guess the iv address of cn is dot",
    "start": "1609039",
    "end": "1615279"
  },
  {
    "text": "examine.com 2.2.2.2 which is not equal to the target of",
    "start": "1615279",
    "end": "1621679"
  },
  {
    "text": "address of the https connection 1.1.1.1",
    "start": "1621679",
    "end": "1626679"
  },
  {
    "text": "therefore the firewall can treat this https connection as a domain boring behavior",
    "start": "1626960",
    "end": "1633840"
  },
  {
    "text": "and close the connection there are also some suggestions to",
    "start": "1633840",
    "end": "1641919"
  },
  {
    "start": "1637000",
    "end": "1637000"
  },
  {
    "text": "mitigate domain boring for student vendors and website admins",
    "start": "1641919",
    "end": "1647600"
  },
  {
    "text": "the boring uses many features of cdn so for student vendors the best way is to",
    "start": "1647600",
    "end": "1654640"
  },
  {
    "text": "disable its features cd inventors can validate the custom",
    "start": "1654640",
    "end": "1660080"
  },
  {
    "text": "domain structurally to avoid attackers borrowing high reputation domains",
    "start": "1660080",
    "end": "1666799"
  },
  {
    "text": "distributed well while college interviews certificates correctly can also prevent attackers from borrowing",
    "start": "1667760",
    "end": "1674159"
  },
  {
    "text": "valid certificates from other student users",
    "start": "1674159",
    "end": "1678799"
  },
  {
    "text": "oversight means if your website was hacked and now you'll not only have to remove",
    "start": "1680000",
    "end": "1687120"
  },
  {
    "text": "backdoors but also check whether your https certificates have been abused",
    "start": "1687120",
    "end": "1693840"
  },
  {
    "text": "you can revoke your certificates and query whether the attacker applied for new certificates or your domain",
    "start": "1693840",
    "end": "1702559"
  },
  {
    "text": "so certificate transparency",
    "start": "1702559",
    "end": "1708000"
  },
  {
    "text": "next we will show demo for bypassing plus auto firewall with domain boring",
    "start": "1709679",
    "end": "1717520"
  },
  {
    "text": "we use the latest plug auto pan vm",
    "start": "1717520",
    "end": "1722600"
  },
  {
    "text": "10.0.4 as a demo nvm 10.0.4 is a next generation and https",
    "start": "1722600",
    "end": "1731679"
  },
  {
    "text": "decryption file and it supports https decryption from",
    "start": "1731679",
    "end": "1737279"
  },
  {
    "text": "ssl 3.0 to trs 1.3",
    "start": "1737279",
    "end": "1742960"
  },
  {
    "text": "we will also enable the https decryption in our demo",
    "start": "1742960",
    "end": "1750559"
  },
  {
    "text": "when we tested with plato firewall we found the plow auto firewall has",
    "start": "1751600",
    "end": "1756799"
  },
  {
    "text": "signatures called anti-spyware eviction signatures which has",
    "start": "1756799",
    "end": "1762240"
  },
  {
    "text": "two following rules the the http evasion checks if the",
    "start": "1762240",
    "end": "1767679"
  },
  {
    "text": "result of dns loophole post is equal to the destination of the address of https",
    "start": "1767679",
    "end": "1774000"
  },
  {
    "text": "connection the trs division checks if the result of dns lookup s i is",
    "start": "1774000",
    "end": "1781600"
  },
  {
    "text": "equal to exponential address of https connection",
    "start": "1781600",
    "end": "1788799"
  },
  {
    "text": "and we set the policy of these two rows to a large power in our demo you see",
    "start": "1788799",
    "end": "1793919"
  },
  {
    "text": "here any https connection matches this rules",
    "start": "1793919",
    "end": "1799200"
  },
  {
    "text": "the allow the firewall will a lot",
    "start": "1799200",
    "end": "1802960"
  },
  {
    "text": "anti-spyware division signatures can theoretically detected detect the membrane but",
    "start": "1807760",
    "end": "1815360"
  },
  {
    "text": "only theoretically because of the improper implementation",
    "start": "1815360",
    "end": "1822600"
  },
  {
    "start": "1821000",
    "end": "1821000"
  },
  {
    "text": "there is a feature of any spyware edition signatures if plot auto firewall cannot resolve the",
    "start": "1823039",
    "end": "1830080"
  },
  {
    "text": "domain in sni or host the connection will pass the forward",
    "start": "1830080",
    "end": "1835600"
  },
  {
    "text": "check for the memory the sni and host can be",
    "start": "1835600",
    "end": "1841600"
  },
  {
    "text": "any domain even a non-existent domain so we can bypass the anti-spyware",
    "start": "1841600",
    "end": "1848240"
  },
  {
    "text": "evasion signatures",
    "start": "1848240",
    "end": "1851640"
  },
  {
    "text": "we use the following configuration in our demo",
    "start": "1856880",
    "end": "1862080"
  },
  {
    "text": "we use uh community c2s as before",
    "start": "1862559",
    "end": "1867760"
  },
  {
    "text": "the staging of awesome.com is the domain of the phone",
    "start": "1867760",
    "end": "1873279"
  },
  {
    "text": "awesome project and it's on start pass cd city agents use this domain for dns",
    "start": "1873279",
    "end": "1879840"
  },
  {
    "text": "lookup to find the eyepiece of the engine servers and the civil agent is that both sni and",
    "start": "1879840",
    "end": "1887440"
  },
  {
    "text": "host to image.com and borrow",
    "start": "1887440",
    "end": "1892640"
  },
  {
    "text": "the valid https certificate start the font awesome dot com from star position",
    "start": "1892640",
    "end": "1901039"
  },
  {
    "text": "as the picture shows the image of awesome.com",
    "start": "1901840",
    "end": "1907360"
  },
  {
    "text": "is a non-existent domain which doesn't have which doesn't has any dna dns recall",
    "start": "1907360",
    "end": "1918039"
  },
  {
    "text": "here's the demo on the left screen is the auto firewall",
    "start": "1921120",
    "end": "1928080"
  },
  {
    "text": "nvm on the right on the right screen is the",
    "start": "1928080",
    "end": "1933279"
  },
  {
    "text": "windows machine where we are around our situations our interlacer",
    "start": "1933279",
    "end": "1939039"
  },
  {
    "text": "you can see you create a decryption policy named equipped r with rtr services versions",
    "start": "1944000",
    "end": "1951840"
  },
  {
    "text": "enabled ando creates anti-survivor policy it has underscore",
    "start": "1951840",
    "end": "1960320"
  },
  {
    "text": "aviation signatures enabled",
    "start": "1960320",
    "end": "1963840"
  },
  {
    "text": "this is red page now it's empty",
    "start": "1976080",
    "end": "1980320"
  },
  {
    "text": "this is the red page now it's it's is empathy there is no online store agent",
    "start": "1986559",
    "end": "1994158"
  },
  {
    "text": "listen i said to staging.com on the way secured the situations on the windows machine",
    "start": "1994559",
    "end": "2002880"
  },
  {
    "text": "you can see the host is image default awesome.com",
    "start": "2002880",
    "end": "2008799"
  },
  {
    "text": "we execute a command proper calculator",
    "start": "2011600",
    "end": "2016080"
  },
  {
    "text": "which shows the city agent works well",
    "start": "2017039",
    "end": "2022880"
  },
  {
    "text": "and we go back to the threat page there is no alert log this means we",
    "start": "2024880",
    "end": "2030080"
  },
  {
    "text": "successfully bypass auto firewall and in the decryption page we can see",
    "start": "2030080",
    "end": "2036080"
  },
  {
    "text": "our city traffic the sni is image the photoawesome.com and the certificate",
    "start": "2036080",
    "end": "2041919"
  },
  {
    "text": "is a valid certificate start.followusam.com and the traffic looks like normal",
    "start": "2041919",
    "end": "2049040"
  },
  {
    "text": "traffic or awesome",
    "start": "2049040",
    "end": "2053000"
  },
  {
    "text": "we will release the carbonite implant template after the conference",
    "start": "2060720",
    "end": "2067679"
  },
  {
    "text": "and thank you for listening",
    "start": "2067679",
    "end": "2072280"
  }
]