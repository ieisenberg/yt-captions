[
  {
    "text": "hello good morning I hope you all had a good breakfast and you're having a great",
    "start": "2300",
    "end": "8580"
  },
  {
    "text": "conference so we'll we'll briefly introduce ourselves we're we're going to talk about breaking into managed data",
    "start": "8580",
    "end": "14880"
  },
  {
    "text": "services so my name is joab and I'm the CTO at Orca security and I've been a security",
    "start": "14880",
    "end": "19980"
  },
  {
    "text": "researcher for the past 15 years my name is Zach I'm a security",
    "start": "19980",
    "end": "25980"
  },
  {
    "text": "researcher at Orca security and I'm doing security for around six years and",
    "start": "25980",
    "end": "31439"
  },
  {
    "text": "would also like to mention yanil was a key security researcher in the research",
    "start": "31439",
    "end": "36719"
  },
  {
    "text": "we're going to present and he couldn't join us today we'd like to start our lecture with a",
    "start": "36719",
    "end": "43920"
  },
  {
    "text": "history lesson a quick history lesson if we're talking about severe Cloud vulnerabilities by year and I'm talking about high and",
    "start": "43920",
    "end": "51539"
  },
  {
    "text": "critical severity vulnerabilities affecting millions and millions of customers",
    "start": "51539",
    "end": "57059"
  },
  {
    "text": "the year of 2020 had four of these and this data is based on cloudformdb.org",
    "start": "57059",
    "end": "64100"
  },
  {
    "text": "and if we're going at over 2021 we have double that we have eight vulnerabilities and 2022",
    "start": "64100",
    "end": "72780"
  },
  {
    "text": "14 Cloud vulnerabilities each affecting millions and millions of companies",
    "start": "72780",
    "end": "79200"
  },
  {
    "text": "one reason why this incline or this rise was so dramatic we're going to figure",
    "start": "79200",
    "end": "85500"
  },
  {
    "text": "out by the end of this presentation so what are we going to talk about today first of all we're going to introduce",
    "start": "85500",
    "end": "91439"
  },
  {
    "text": "some of you who may be less familiar to the cloud and to the key security Concepts then we're going to Define what our",
    "start": "91439",
    "end": "98040"
  },
  {
    "text": "managed data services we're going to show you how we hacked some of these with video demonstrations",
    "start": "98040",
    "end": "104520"
  },
  {
    "text": "show you the recipe we have for cross-tenant vulnerabilities hacking managed data services and conclusions",
    "start": "104520",
    "end": "111360"
  },
  {
    "text": "but first we do need to become Cloud experts and we only have five minutes for the",
    "start": "111360",
    "end": "118259"
  },
  {
    "text": "intro this isn't happening but we do need to understand the basics",
    "start": "118259",
    "end": "124920"
  },
  {
    "text": "so the most important thing to understand about the cloud I would say is there is no cloud",
    "start": "124920",
    "end": "130679"
  },
  {
    "text": "there's no such thing the cloud provider has their own setups and data centers and computers and they write their own",
    "start": "130679",
    "end": "137340"
  },
  {
    "text": "software to provide the services I need as a customer it's not magic it's software",
    "start": "137340",
    "end": "143640"
  },
  {
    "text": "and as every software has potential flaws and bugs but what cloud are we talking about",
    "start": "143640",
    "end": "150260"
  },
  {
    "text": "we're not talking just about the internet we're talking about specific Cloud providers the major ones that your",
    "start": "150260",
    "end": "157200"
  },
  {
    "text": "company probably is using AWS Azure Google Cloud Etc and",
    "start": "157200",
    "end": "162500"
  },
  {
    "text": "we want to talk about why these as an introduction why these even exist what",
    "start": "162500",
    "end": "168660"
  },
  {
    "text": "problem does the cloud even intend to solve so let's say I want to build an AI application",
    "start": "168660",
    "end": "174900"
  },
  {
    "text": "I want to build an AI application for pets that's my goal that's my life mission",
    "start": "174900",
    "end": "180599"
  },
  {
    "text": "call it kgpt now what do I need to do right I need to",
    "start": "180599",
    "end": "186300"
  },
  {
    "text": "have storage I need to have networking and high uptime and I want to have the",
    "start": "186300",
    "end": "191879"
  },
  {
    "text": "best security probably right so basically what I need to do before even starting to program I need to build a",
    "start": "191879",
    "end": "197760"
  },
  {
    "text": "data center myself but me I just have a dream kgpt I want to talk to cats and I",
    "start": "197760",
    "end": "204300"
  },
  {
    "text": "can't do this right now because I need to build all uh this data center",
    "start": "204300",
    "end": "210300"
  },
  {
    "text": "so the benefits of the cloud it lets you focus on what you need to focus if I",
    "start": "210300",
    "end": "215459"
  },
  {
    "text": "want to develop my app I can write the logic and I can deploy it and it will just work and three main benefits are",
    "start": "215459",
    "end": "221659"
  },
  {
    "text": "the cloud is scalable meaning if I'm talking about a virtual machine for example I can start one and I can start",
    "start": "221659",
    "end": "227819"
  },
  {
    "text": "a thousand in a second it's cost effective meaning I don't pay Upfront for the hardware and the equipment I'm",
    "start": "227819",
    "end": "234360"
  },
  {
    "text": "using I only pay for as much as I use as I go and the third thing is it's",
    "start": "234360",
    "end": "240720"
  },
  {
    "text": "reliable has high uptime it has backup so even if a data center goes on fire",
    "start": "240720",
    "end": "246360"
  },
  {
    "text": "there's another backup for my uh for my app and",
    "start": "246360",
    "end": "251879"
  },
  {
    "text": "it has good security the cloud itself one thing is also important to",
    "start": "251879",
    "end": "257100"
  },
  {
    "text": "understand the cloud itself is built on services what usually would happen is me as a",
    "start": "257100",
    "end": "262680"
  },
  {
    "text": "customer would go from my account say to AWS and would make an API call assigned API call the sign mean meaning",
    "start": "262680",
    "end": "269580"
  },
  {
    "text": "it's authorized as my account and then I could access any service I want ec2 is the virtual machine service the",
    "start": "269580",
    "end": "276360"
  },
  {
    "text": "bucket is S3 which is a storage service and then I could use them let's say occasionally I would want to use a more",
    "start": "276360",
    "end": "283259"
  },
  {
    "text": "complex service say cloud formation it's not very important to understand exactly what cloudformation does but I will say",
    "start": "283259",
    "end": "289440"
  },
  {
    "text": "it takes template files and it deploys them as resources in your account so it could have a file mentioning hey please",
    "start": "289440",
    "end": "296940"
  },
  {
    "text": "start five virtual machines and it will start five virtual machines so when I make an API call to AWS AWS",
    "start": "296940",
    "end": "304259"
  },
  {
    "text": "will tell cloudformation okay go fetch that template from S3 or go uh deploy this in ec2",
    "start": "304259",
    "end": "312120"
  },
  {
    "text": "cloudformation would also need to use cloud services",
    "start": "312120",
    "end": "317400"
  },
  {
    "text": "so cloud formation itself would make an API call to AWS and ask to use ec2 and S3",
    "start": "317400",
    "end": "325080"
  },
  {
    "text": "Etc what this means is cloud formation and some services in AWS I would say",
    "start": "325080",
    "end": "330240"
  },
  {
    "text": "most of them have Cloud accounts themselves the same way I have an AWS account",
    "start": "330240",
    "end": "336300"
  },
  {
    "text": "so does cloud formation internally have a normal AWS account if I could access that account this",
    "start": "336300",
    "end": "343500"
  },
  {
    "text": "would probably be very very interesting but to normal customers this isn't very",
    "start": "343500",
    "end": "349020"
  },
  {
    "text": "interesting right this is for the researcher mine the customer's responsibility when you're talking about security and what",
    "start": "349020",
    "end": "355259"
  },
  {
    "text": "the customer needs to worry about there is a security model called the shared responsibility model",
    "start": "355259",
    "end": "360960"
  },
  {
    "text": "in this model it says everything that the cloud customer can configure it's",
    "start": "360960",
    "end": "366060"
  },
  {
    "text": "his responsibility to make sure it's secure take a virtual machine operating system and up the files the permissions",
    "start": "366060",
    "end": "372419"
  },
  {
    "text": "the passwords making sure they're secure everything revolving that is the customer responsibility but everything",
    "start": "372419",
    "end": "379380"
  },
  {
    "text": "that the customer cannot control for example the low level networking the hardware the building where the data",
    "start": "379380",
    "end": "386520"
  },
  {
    "text": "center is stored so no one breaks into the building physically that's the cloud provider responsibility",
    "start": "386520",
    "end": "393419"
  },
  {
    "text": "most of the research in the world today is done around where the customer can misconfigure things",
    "start": "393419",
    "end": "400139"
  },
  {
    "text": "which is interesting but only affects a handful of customers",
    "start": "400139",
    "end": "405419"
  },
  {
    "text": "we rather focus on where the cloud provider fails and when you find the flow in the cloud",
    "start": "405419",
    "end": "411240"
  },
  {
    "text": "provider it affects every single customer of that cloud provider especially using the service that you",
    "start": "411240",
    "end": "417600"
  },
  {
    "text": "target now the key principle to understand this entire presentation would be the key",
    "start": "417600",
    "end": "423240"
  },
  {
    "text": "security principle of the cloud tenant isolation what is a tenant let's say every company",
    "start": "423240",
    "end": "429000"
  },
  {
    "text": "is a tenant Oracle security is a tenant your your company in the cloud probably has their own tenant and maybe even a",
    "start": "429000",
    "end": "436979"
  },
  {
    "text": "few in AWS it will be an account in Azure it will be called tenants in Google Cloud might be projects doesn't",
    "start": "436979",
    "end": "442919"
  },
  {
    "text": "matter the name the key uh idea is tenant isolation meaning a user from",
    "start": "442919",
    "end": "450479"
  },
  {
    "text": "company a would only be able to access whatever he has permissions into but only in company a",
    "start": "450479",
    "end": "458819"
  },
  {
    "text": "the scenario we would like the trigger is what happens if user a",
    "start": "458819",
    "end": "464280"
  },
  {
    "text": "from company a will be able to access Company B",
    "start": "464280",
    "end": "469740"
  },
  {
    "text": "this will be called a cross tenant vulnerability and this is",
    "start": "469740",
    "end": "474960"
  },
  {
    "text": "as a researchers are Holy Grail and the cloud provider's biggest nightmare",
    "start": "474960",
    "end": "482340"
  },
  {
    "text": "our goal in finding these is first of all to secure the public Cloud because we're good people we want to make sure",
    "start": "482340",
    "end": "488039"
  },
  {
    "text": "uh the cloud is safe to use we want to discover a method and a pattern to find these again and again so we can still",
    "start": "488039",
    "end": "494940"
  },
  {
    "text": "report them to the cloud provider fix it and make the cloud more secure but let's be serious the really big reason that we",
    "start": "494940",
    "end": "503280"
  },
  {
    "text": "want to find these vulnerabilities is to lecture at Black Cat Asia",
    "start": "503280",
    "end": "508520"
  },
  {
    "text": "so why is this interesting right let's wear the black hat for a second",
    "start": "509400",
    "end": "514919"
  },
  {
    "text": "millions in companies and their data stored in the cloud we could also infiltrate other companies",
    "start": "514919",
    "end": "522180"
  },
  {
    "text": "networks which are also part at least in the cloud and if we",
    "start": "522180",
    "end": "527580"
  },
  {
    "text": "take over a service we have infinite harm and data potential that we can do so it is very interesting",
    "start": "527580",
    "end": "534480"
  },
  {
    "text": "but why is it hard we talked about separation tenant isolation this is the Cloud's main security promise they say",
    "start": "534480",
    "end": "541680"
  },
  {
    "text": "move to the cloud it's more comfortable it's more secure move to the cloud share resources with other people but your",
    "start": "541680",
    "end": "547560"
  },
  {
    "text": "data will stay private if we can prove or we can show that your data would not stay private and you're",
    "start": "547560",
    "end": "553620"
  },
  {
    "text": "actually risking yourself that's a very big problem for the cloud provider and it's also very hard because they have a",
    "start": "553620",
    "end": "561300"
  },
  {
    "text": "huge attack surface most of it without source code in Azure and AWS they have over 200",
    "start": "561300",
    "end": "568080"
  },
  {
    "text": "fully featured services but to start our story and to show you how we found the pattern and how we",
    "start": "568080",
    "end": "574920"
  },
  {
    "text": "hacked cloud services we only need to hack one of these and this led us to all",
    "start": "574920",
    "end": "580260"
  },
  {
    "text": "of this pattern and the methodology I let you off take you through the first vulnerability",
    "start": "580260",
    "end": "586880"
  },
  {
    "text": "thank you sir so I'll take you for the first vulnerability which is called super glue",
    "start": "587640",
    "end": "593220"
  },
  {
    "text": "it was the first ever public AWS service takeover but this is the end we'll start from the",
    "start": "593220",
    "end": "600420"
  },
  {
    "text": "beginning where we did entirely different research when I say we did I mean did he basically started",
    "start": "600420",
    "end": "607640"
  },
  {
    "text": "investigating the serialization mechanism in AWS and he started getting error messages in Java that hinted to us",
    "start": "607640",
    "end": "615600"
  },
  {
    "text": "that there are jar files um again corresponding with those errors",
    "start": "615600",
    "end": "621000"
  },
  {
    "text": "so we did what every good researcher does which is we took the jar file names that we found and we searched on Google",
    "start": "621000",
    "end": "627680"
  },
  {
    "text": "and to our surprise we usually get no hints we got a hit and those hits led us",
    "start": "627680",
    "end": "634440"
  },
  {
    "text": "to believe that they're in the the Java files we're looking for are found in in a service called AWS glue",
    "start": "634440",
    "end": "640680"
  },
  {
    "text": "so for those of you who don't know AWS glue that's okay he is not one of the most famous services but it's a",
    "start": "640680",
    "end": "647519"
  },
  {
    "text": "serverless data integration platform which basically means that you can take data usually from S3 or other data",
    "start": "647519",
    "end": "653880"
  },
  {
    "text": "sources run jobs which basically take the data transform it in some way using",
    "start": "653880",
    "end": "659519"
  },
  {
    "text": "what they call a job script or a transform script and put the data in somewhere else this is called ETL and",
    "start": "659519",
    "end": "666420"
  },
  {
    "text": "the most important thing to remember here is that the transform scripts are on a serverlessly serverless usually",
    "start": "666420",
    "end": "673620"
  },
  {
    "text": "means someone else's computer again so the base the first thing we want to",
    "start": "673620",
    "end": "679440"
  },
  {
    "text": "do is try to run scripts there and when you try to run scripts they put you they send you to the development endpoint",
    "start": "679440",
    "end": "685740"
  },
  {
    "text": "which is which is basically a machine that you can SSH into and to test your",
    "start": "685740",
    "end": "691500"
  },
  {
    "text": "scripts it's a developer feature and the first thing that we did we SSH into the machine but we we tried to see",
    "start": "691500",
    "end": "699779"
  },
  {
    "text": "where the ec2 is running from because uh we ran the describe instances which lists all the instances in the account",
    "start": "699779",
    "end": "705779"
  },
  {
    "text": "and basically the instance were not there so we concluded or we hope that this",
    "start": "705779",
    "end": "711600"
  },
  {
    "text": "instance that we have an SSH do is not in our account if you if you're ever this is a pro tip",
    "start": "711600",
    "end": "718620"
  },
  {
    "text": "if you were ever dropped into an a shell with on a cloud instance uh you the",
    "start": "718620",
    "end": "724500"
  },
  {
    "text": "first thing you try to pin is the instance metadata service which is basically a magic HTTP server running on",
    "start": "724500",
    "end": "730800"
  },
  {
    "text": "your VM that is always accessible on Port on IP 169 254 169 254 and you get a",
    "start": "730800",
    "end": "739980"
  },
  {
    "text": "metadata about your instance which basically it's really useful for it for",
    "start": "739980",
    "end": "745200"
  },
  {
    "text": "think about it if you're running a generic script and you want to fill the gaps and but it's also used by all Cloud",
    "start": "745200",
    "end": "751380"
  },
  {
    "text": "providers to provide credentials into the system so for example you don't want to upload Keys into instances you want",
    "start": "751380",
    "end": "758579"
  },
  {
    "text": "to associate permissions with viewer resource that's the way the credentials get into the machine",
    "start": "758579",
    "end": "765300"
  },
  {
    "text": "so we did what we we we talked about we tried to access the MDS server and what",
    "start": "765300",
    "end": "770519"
  },
  {
    "text": "we expected to get was the response on the left but we what we got is this thing which is really weird and we",
    "start": "770519",
    "end": "776940"
  },
  {
    "text": "understood that this is basically it's a trap no it was it's not a trap but the",
    "start": "776940",
    "end": "782519"
  },
  {
    "text": "probably a fake local server which is supposed to to not give us the right uh response",
    "start": "782519",
    "end": "788459"
  },
  {
    "text": "probably using iptables to block us and Route us to a different uh Ms server so",
    "start": "788459",
    "end": "794700"
  },
  {
    "text": "what we we did we tried to flush the tables but we didn't have any root access on the machine so we tried to",
    "start": "794700",
    "end": "800519"
  },
  {
    "text": "previous escalate we used my studio minor cell to use to list all the binaries that we can run as a root and",
    "start": "800519",
    "end": "807660"
  },
  {
    "text": "we found that there was one binary that's called update spark defaults which is a python script and we get the",
    "start": "807660",
    "end": "815339"
  },
  {
    "text": "keep end directive keep M for those of you who don't know allows me to inject environment variables to to sudo file to",
    "start": "815339",
    "end": "822000"
  },
  {
    "text": "sudo binaries a python tab controls where python loads its module so I can",
    "start": "822000",
    "end": "827579"
  },
  {
    "text": "run a python script and tell it where to load its module uh one plus one equals privilege escalation and in that case we",
    "start": "827579",
    "end": "834720"
  },
  {
    "text": "just created a module called stat we ran the script and we got root nothing surprising here",
    "start": "834720",
    "end": "840779"
  },
  {
    "text": "the next phase is we we go we want to go ahead and flush the IP tables Flash the",
    "start": "840779",
    "end": "846660"
  },
  {
    "text": "IP tables and we got to the real imds service which is uh which is really cool and it confirmed our suspicion we're",
    "start": "846660",
    "end": "853500"
  },
  {
    "text": "running not within our accounts this Dev endpoint is running in in a cloud provider managed account",
    "start": "853500",
    "end": "859200"
  },
  {
    "text": "but also we were able to get Cloud credentials those credentials were belonging to the cloud account belonging",
    "start": "859200",
    "end": "865740"
  },
  {
    "text": "to the glue service we were really excited at this point and we did what every good hacker does we enumerated",
    "start": "865740",
    "end": "871800"
  },
  {
    "text": "privileges we ran it we ran it we ran it and we got nothing",
    "start": "871800",
    "end": "877079"
  },
  {
    "text": "so yeah but if you if you remember uh we we",
    "start": "877079",
    "end": "883199"
  },
  {
    "text": "were looking for jar files we were this was like a side quest we were just trying to find the jar files to to",
    "start": "883199",
    "end": "890040"
  },
  {
    "text": "advance our research so we've researched the system we couldn't find jar files and then we",
    "start": "890040",
    "end": "895440"
  },
  {
    "text": "decided to run the glue script on the on the serverless engine to see if we can",
    "start": "895440",
    "end": "901320"
  },
  {
    "text": "find your files there we listed all the all the files in the system and we were",
    "start": "901320",
    "end": "906360"
  },
  {
    "text": "expecting to get the jar files to our surprise we got we didn't get one jar files we got a lot of Jar files it was",
    "start": "906360",
    "end": "911940"
  },
  {
    "text": "like jars is everywhere and and we started looking through the",
    "start": "911940",
    "end": "917220"
  },
  {
    "text": "for the jar files and we found there they were referencing uh some of them were public a real known uh jars but",
    "start": "917220",
    "end": "924360"
  },
  {
    "text": "some of them references internal AWS services and and one of them one of those was called glue Jes",
    "start": "924360",
    "end": "931860"
  },
  {
    "text": "us it is a job executor service it's an internal service we couldn't find any",
    "start": "931860",
    "end": "937440"
  },
  {
    "text": "public documentation about that and um and we we tried to uh to talk to the",
    "start": "937440",
    "end": "943139"
  },
  {
    "text": "API the SDK the internal Java files basically had sdks calling to an internal API so we try to call this get",
    "start": "943139",
    "end": "950880"
  },
  {
    "text": "EMR credentials which is one of the internal apis and we kept getting access denied no matter which privileges we got",
    "start": "950880",
    "end": "957480"
  },
  {
    "text": "we gave the the principle we couldn't get it to work but at some point we said wait we have",
    "start": "957480",
    "end": "963300"
  },
  {
    "text": "those internal credentials with with no permissions let's try this and instead of getting access denied we got wrong",
    "start": "963300",
    "end": "969600"
  },
  {
    "text": "ec2 instance which is not access denied which is better but it basically means",
    "start": "969600",
    "end": "975000"
  },
  {
    "text": "we're passing the wrong parameters but we basically bypass the permission check which got us a bit excited",
    "start": "975000",
    "end": "981300"
  },
  {
    "text": "and so we kept digging around and we found a and we found a Smithy schema for",
    "start": "981300",
    "end": "987240"
  },
  {
    "text": "those of you who don't know AWS has an internal language for to describe all their apis and it's called Smitty and",
    "start": "987240",
    "end": "994560"
  },
  {
    "text": "it's a public it's an open source project you can look at it and all the public documentation sdks are generated",
    "start": "994560",
    "end": "999779"
  },
  {
    "text": "from it uh but we found midi schema also for the the code that we found that was",
    "start": "999779",
    "end": "1005540"
  },
  {
    "text": "generated but also for apis that were not listed in the SDK at all and one of them was the get jobs API when we ran",
    "start": "1005540",
    "end": "1013339"
  },
  {
    "text": "the get jobs API we got a job that was running in the internal account so I",
    "start": "1013339",
    "end": "1019459"
  },
  {
    "text": "want to point to focus your attention on two things about this job we got one job back",
    "start": "1019459",
    "end": "1024500"
  },
  {
    "text": "one is the script location which is basically on S3 and the other one is a",
    "start": "1024500",
    "end": "1030199"
  },
  {
    "text": "row basically if we can the jobs are running from that script and running with that role so we",
    "start": "1030199",
    "end": "1038418"
  },
  {
    "text": "said okay we can list the jobs but can we maybe can we create a job",
    "start": "1038419",
    "end": "1043819"
  },
  {
    "text": "so we found that there is an API for that called create job which receives a a path to uh to F3 and an IM role to do",
    "start": "1043819",
    "end": "1051740"
  },
  {
    "text": "to to X to assume so we created a bucket we uploaded the script we created a job",
    "start": "1051740",
    "end": "1058820"
  },
  {
    "text": "and we got a reverse shell and at this point we were really really really excited so",
    "start": "1058820",
    "end": "1066260"
  },
  {
    "text": "we went ahead and enumerated permissions we enumerated permissions and we rated",
    "start": "1066260",
    "end": "1071840"
  },
  {
    "text": "and we waited and we got nothing at this point it's important to note if",
    "start": "1071840",
    "end": "1078919"
  },
  {
    "text": "you haven't heard from the accent that we're Israelis and this this means that we don't have an AWS region close to",
    "start": "1078919",
    "end": "1085520"
  },
  {
    "text": "home um so we usually use one of the European data centers which are closest by by",
    "start": "1085520",
    "end": "1092539"
  },
  {
    "text": "distance and one of the things that we discovered looking through the internal jars is that AWS regions for example if",
    "start": "1092539",
    "end": "1100640"
  },
  {
    "text": "you use like the glue service in some region it's going to One account and if",
    "start": "1100640",
    "end": "1105860"
  },
  {
    "text": "you're going to a different region it goes to a different account each region is actually hosted in a different AWS",
    "start": "1105860",
    "end": "1112520"
  },
  {
    "text": "account they use it to separate the the to make sure that if one account goes",
    "start": "1112520",
    "end": "1118220"
  },
  {
    "text": "down not all the regions go down so each account basically has a different account number so we figured wait maybe",
    "start": "1118220",
    "end": "1126919"
  },
  {
    "text": "different accounts are managed by different devops team maybe they have different jobs",
    "start": "1126919",
    "end": "1132919"
  },
  {
    "text": "so we we went we decided to brute force all the regions and the first one is USD Swan and we use the USS one and instead",
    "start": "1132919",
    "end": "1139520"
  },
  {
    "text": "of getting one uh one job we got like hundreds of jobs and one of them had a",
    "start": "1139520",
    "end": "1145100"
  },
  {
    "text": "really cool role called AWS glue service role default sounds really promising it has a default name and we did the same",
    "start": "1145100",
    "end": "1153140"
  },
  {
    "text": "thing we created a job we uploaded the script we were in the reverse shell but this time we we had an administrator",
    "start": "1153140",
    "end": "1160160"
  },
  {
    "text": "access privileges on this account uh not just any account but the clue",
    "start": "1160160",
    "end": "1167059"
  },
  {
    "text": "service account so we basically have an admin credentials in the account that",
    "start": "1167059",
    "end": "1172280"
  },
  {
    "text": "the glue service runs from which is insane",
    "start": "1172280",
    "end": "1177320"
  },
  {
    "text": "so what can we do with this administrator access for the whole glue service account so the first thing is",
    "start": "1177320",
    "end": "1183020"
  },
  {
    "text": "that we can use the trust that this glue service has for all other AWS customers",
    "start": "1183020",
    "end": "1188780"
  },
  {
    "text": "so for example if you have a policy that trusts the glue account uses the glue Amazon AWS we were able to assume to",
    "start": "1188780",
    "end": "1196520"
  },
  {
    "text": "that role we were basically able to access your account on the behalf of the glue account and while we're accessing your account",
    "start": "1196520",
    "end": "1204380"
  },
  {
    "text": "on behalf of glue we could also access your data so I'll go with a quick video",
    "start": "1204380",
    "end": "1210740"
  },
  {
    "text": "demo to show you what we did so the first thing is the exploit which we I discovered now we are running as the",
    "start": "1210740",
    "end": "1217400"
  },
  {
    "text": "glue service at this point we are you can see that we are have a full admin on the glue",
    "start": "1217400",
    "end": "1224539"
  },
  {
    "text": "service account and we're switching to a victim account where we have a default role with that",
    "start": "1224539",
    "end": "1232940"
  },
  {
    "text": "has a trust to the glue service meaning only the glue service can access this role",
    "start": "1232940",
    "end": "1238100"
  },
  {
    "text": "we are trying to assume this role and we successfully done so and now we will try",
    "start": "1238100",
    "end": "1243860"
  },
  {
    "text": "uh to use this role to access the victim's data in that case so we see",
    "start": "1243860",
    "end": "1251299"
  },
  {
    "text": "there's a bucket called my secret data always a good bucket name to have and it has the data file in it",
    "start": "1251299",
    "end": "1259720"
  },
  {
    "text": "and since this is recorded I can tell you it's going to work and we got data from different accounts",
    "start": "1260960",
    "end": "1269320"
  },
  {
    "text": "so uh what I'll do a quick recap because we talked about a lot of things here but",
    "start": "1270740",
    "end": "1276020"
  },
  {
    "text": "the first thing is we started from our tenant we went and we got an RC which was",
    "start": "1276020",
    "end": "1281419"
  },
  {
    "text": "basically a feature using the SSH to a shared restricted runtime",
    "start": "1281419",
    "end": "1286940"
  },
  {
    "text": "from that point we were able to privilege escalate and get a role in a",
    "start": "1286940",
    "end": "1292760"
  },
  {
    "text": "in a restricted account and from there we were able to research",
    "start": "1292760",
    "end": "1297980"
  },
  {
    "text": "the internal API and get access to the internal service which allowed us to get",
    "start": "1297980",
    "end": "1304159"
  },
  {
    "text": "a role and assume to other tenants so basically basically this this entire",
    "start": "1304159",
    "end": "1310640"
  },
  {
    "text": "thing is is a pattern and we see it again and again we call this pattern manage data services and it has a few",
    "start": "1310640",
    "end": "1317179"
  },
  {
    "text": "characteristics the first one is that the service usually involves data ingestions import",
    "start": "1317179",
    "end": "1322640"
  },
  {
    "text": "processes of user data the workload is serverless or managed by a or a compute",
    "start": "1322640",
    "end": "1329000"
  },
  {
    "text": "that is not under our tenant and sometimes as a bonus the compute is even shared between templates",
    "start": "1329000",
    "end": "1335600"
  },
  {
    "text": "and the all of these characteristics are the criteria that we use to search for",
    "start": "1335600",
    "end": "1341659"
  },
  {
    "text": "new services to research and I'll pass it back to Zach to talk about more instances of this issue and how we found",
    "start": "1341659",
    "end": "1348559"
  },
  {
    "text": "our next vulnerability thank you",
    "start": "1348559",
    "end": "1353600"
  },
  {
    "text": "so we did find a pattern and we did find correct characteristics for services that might be vulnerable to",
    "start": "1353600",
    "end": "1360440"
  },
  {
    "text": "this pattern we call them manage data services and the pattern was this again the tenant you do an RC on a shared",
    "start": "1360440",
    "end": "1367580"
  },
  {
    "text": "restricted runtime you make it less restricted by privileges collision and then with internal API you could",
    "start": "1367580",
    "end": "1374059"
  },
  {
    "text": "probably access other tenants this was our assumption and the first step if we want to apply this pattern in another",
    "start": "1374059",
    "end": "1380919"
  },
  {
    "text": "service or another cloud provider would be finding the shared restricted runtime we need to find a runtime that is not",
    "start": "1380919",
    "end": "1388159"
  },
  {
    "text": "under our tenant and that is a feature by a service we tried to look for the same pattern in",
    "start": "1388159",
    "end": "1393500"
  },
  {
    "text": "Azure and this led to this syn Labs it's a service take or Takeover",
    "start": "1393500",
    "end": "1399799"
  },
  {
    "text": "in Azure synapse the service is called Azure synapse analytics it is an ETL service ETL means",
    "start": "1399799",
    "end": "1406640"
  },
  {
    "text": "extract transform and load it takes data from wherever you want it has over 90",
    "start": "1406640",
    "end": "1411740"
  },
  {
    "text": "plus Services you can import data from then you can use SQL Apache spark you",
    "start": "1411740",
    "end": "1417860"
  },
  {
    "text": "could use many programming languages to process the data and you can output it into Azure in whatever format you'd like",
    "start": "1417860",
    "end": "1424700"
  },
  {
    "text": "and if you remember the definition of a managed data service the first thing is data ingestion meaning it either Imports",
    "start": "1424700",
    "end": "1431360"
  },
  {
    "text": "processes and exports user data we have all of them I say check how do you",
    "start": "1431360",
    "end": "1437000"
  },
  {
    "text": "import data there's a feature called linked Services just go to the user interface you can click on you you have 90 plus again",
    "start": "1437000",
    "end": "1444080"
  },
  {
    "text": "services that you can connect to let's say MySQL server you put the IP of the server you put the port it's running on",
    "start": "1444080",
    "end": "1450200"
  },
  {
    "text": "and you put the credentials user and password makes sense and then you can import the",
    "start": "1450200",
    "end": "1456140"
  },
  {
    "text": "table from your MySQL server into Azure synapse Analytics one thing you also need to do is to",
    "start": "1456140",
    "end": "1462860"
  },
  {
    "text": "choose choose an integration runtime there's a default one called Auto resolve integration runtime and then you",
    "start": "1462860",
    "end": "1468380"
  },
  {
    "text": "can also create some of yours what are these integration runtimes",
    "start": "1468380",
    "end": "1474440"
  },
  {
    "text": "compute infrastructure used by Azure synapse and Azure data Factory which is another service",
    "start": "1474440",
    "end": "1479539"
  },
  {
    "text": "and they have two types either Azure integration runtime or a self-hosted integration runtime",
    "start": "1479539",
    "end": "1486140"
  },
  {
    "text": "the self-hosted integration runtime meaning running on my computer I can just install it and use it to connect to",
    "start": "1486140",
    "end": "1492620"
  },
  {
    "text": "services the Azure integration runtime is called the serverless uh",
    "start": "1492620",
    "end": "1498440"
  },
  {
    "text": "the serverless option and obviously as we said earlier serverless doesn't really mean there's no server it just",
    "start": "1498440",
    "end": "1504740"
  },
  {
    "text": "means there's a server but not under my account which if we talk about it the workload is performed to some degree on",
    "start": "1504740",
    "end": "1511159"
  },
  {
    "text": "a compute that is not under our tenant this seems like a check",
    "start": "1511159",
    "end": "1517000"
  },
  {
    "text": "we want it from here to go on to start researching how the integration runtime works and for that we have the",
    "start": "1517039",
    "end": "1522559"
  },
  {
    "text": "self-hosted integration runtime once we can install the software on our computer which has the same logic as the",
    "start": "1522559",
    "end": "1529220"
  },
  {
    "text": "serverless one this turns it into not a black box research meaning we have executables we",
    "start": "1529220",
    "end": "1536360"
  },
  {
    "text": "can reverse engineer understand how they work and potentially find a bug or a vulnerability that we might be able to",
    "start": "1536360",
    "end": "1542720"
  },
  {
    "text": "exploit one thing is worth mentioning about this it can be on premise meaning you don't have to even install it on",
    "start": "1542720",
    "end": "1548360"
  },
  {
    "text": "your Cloud VM you can install it on your computer at home and has over 95 connectors installed it",
    "start": "1548360",
    "end": "1555140"
  },
  {
    "text": "looks like this always fun to look at pretty user interface",
    "start": "1555140",
    "end": "1560440"
  },
  {
    "text": "and we found an RC one of these 95 connectors actually a",
    "start": "1560440",
    "end": "1566539"
  },
  {
    "text": "few but one of them was relevant for here uh had a shell injection",
    "start": "1566539",
    "end": "1571580"
  },
  {
    "text": "meaning if we input certain credentials a username and a password and a port in",
    "start": "1571580",
    "end": "1576919"
  },
  {
    "text": "a specific way we can actually instead of having the integration on time connect to that data source it would",
    "start": "1576919",
    "end": "1584360"
  },
  {
    "text": "actually just run code on itself seems like a pretty cool feature and you should note this is an RC on the",
    "start": "1584360",
    "end": "1591500"
  },
  {
    "text": "self-hosted integration runtime which is as the name says self-hosted it's not very interesting to run code on my own",
    "start": "1591500",
    "end": "1598159"
  },
  {
    "text": "computer but because we said the logic is probably the same the same connectors are supported",
    "start": "1598159",
    "end": "1605120"
  },
  {
    "text": "then this means probably the RC on the cell phone integration",
    "start": "1605120",
    "end": "1610279"
  },
  {
    "text": "runtime would be the same as a shared integration runtime but what should we even try to run we try to sell injection",
    "start": "1610279",
    "end": "1617419"
  },
  {
    "text": "with who am I we don't even know if it will work if we run it on our computer we would just get",
    "start": "1617419",
    "end": "1624020"
  },
  {
    "text": "uh service permissions like in the windows service right with not very interesting permissions but when we try",
    "start": "1624020",
    "end": "1631220"
  },
  {
    "text": "to run it on the serverless uh Azure solution called Azure integration",
    "start": "1631220",
    "end": "1637460"
  },
  {
    "text": "runtime we waited for a few seconds and we got this into our server",
    "start": "1637460",
    "end": "1644539"
  },
  {
    "text": "the IP address coming from the machine and we are running as empty Authority",
    "start": "1644539",
    "end": "1649640"
  },
  {
    "text": "system meaning we can do pretty much anything in that Windows machine we took",
    "start": "1649640",
    "end": "1655520"
  },
  {
    "text": "this RC we ran it again and again and again and we got the same IP and we ran",
    "start": "1655520",
    "end": "1660980"
  },
  {
    "text": "it from another account and we also got the same IP address meaning it it's running on the same machine so we",
    "start": "1660980",
    "end": "1666260"
  },
  {
    "text": "started thinking to ourselves maybe this machine is also shared between different accounts so this machine might have the",
    "start": "1666260",
    "end": "1672799"
  },
  {
    "text": "data of another customer as well so the first thing we did we wanted to search for the process that connects to",
    "start": "1672799",
    "end": "1679880"
  },
  {
    "text": "the data sources and contains the credentials and we took a memory dump",
    "start": "1679880",
    "end": "1685059"
  },
  {
    "text": "I would just say there were plenty and plenty of plain usernames and passwords",
    "start": "1686299",
    "end": "1691880"
  },
  {
    "text": "just there for grabs you also had API tokens and tokens into Azure this one",
    "start": "1691880",
    "end": "1697520"
  },
  {
    "text": "obviously censored is a token used by Microsoft it's",
    "start": "1697520",
    "end": "1703159"
  },
  {
    "text": "Microsoft company uses this token to access their an internal platform",
    "start": "1703159",
    "end": "1710980"
  },
  {
    "text": "so we're running a system we have the memory dump ability to extract passwords from that instance and if we're going to",
    "start": "1711200",
    "end": "1718760"
  },
  {
    "text": "our checklist we talked about the bonus fact that said compute is shared between more than one tenant I would say",
    "start": "1718760",
    "end": "1725059"
  },
  {
    "text": "check we found the file that is a client certificate that is",
    "start": "1725059",
    "end": "1732260"
  },
  {
    "text": "used to being able to authorize in front of an internal management server",
    "start": "1732260",
    "end": "1738020"
  },
  {
    "text": "that internal management server has API definitions that you could just look at in the file system",
    "start": "1738020",
    "end": "1743179"
  },
  {
    "text": "and it mentions all of the apis that you can call and with these apis you can query other",
    "start": "1743179",
    "end": "1748760"
  },
  {
    "text": "customers workspaces you can query their runtimes and you can even do the",
    "start": "1748760",
    "end": "1753980"
  },
  {
    "text": "following you can tell a runtime any customer's runtime doesn't matter you can tell it to connect to your own",
    "start": "1753980",
    "end": "1761000"
  },
  {
    "text": "data source and if we're doing a recap we just said we found in one of the connectors in rce",
    "start": "1761000",
    "end": "1767299"
  },
  {
    "text": "and this led us to everything so this means we can use our shell injection",
    "start": "1767299",
    "end": "1773260"
  },
  {
    "text": "tell any run time hey please connect to this server instead of connecting to the",
    "start": "1773419",
    "end": "1779659"
  },
  {
    "text": "server we will exploit their connector we will run code on that runtime we'll",
    "start": "1779659",
    "end": "1784760"
  },
  {
    "text": "do it again and again until we run code on every single runtime owned by every single tenant in Azure synapse Analytics",
    "start": "1784760",
    "end": "1794059"
  },
  {
    "text": "and then we can use our memory dump to leak plain credentials let's just see it",
    "start": "1794059",
    "end": "1799460"
  },
  {
    "text": "in action in this video demonstration you can see",
    "start": "1799460",
    "end": "1804620"
  },
  {
    "text": "a customer the customer simply enters the username and a password for an HTTP server the attacker us we can just",
    "start": "1804620",
    "end": "1812600"
  },
  {
    "text": "access and query the synapse workspace find the name and with our exploit that we wrote",
    "start": "1812600",
    "end": "1820100"
  },
  {
    "text": "we can simply run code on that machine take a memory dump",
    "start": "1820100",
    "end": "1825740"
  },
  {
    "text": "and get plain credentials",
    "start": "1825740",
    "end": "1830658"
  },
  {
    "text": "now the pattern applies here too we take from other R tenant and rce in this case it wasn't the feature we just",
    "start": "1831620",
    "end": "1837500"
  },
  {
    "text": "needed to find an exploit into that shared integration runtime then proved escalation what is that we were running",
    "start": "1837500",
    "end": "1843860"
  },
  {
    "text": "as system uh once we found the client certificate and we understood how the internal API",
    "start": "1843860",
    "end": "1849380"
  },
  {
    "text": "works we could just access the internal service and with our previous exploit we",
    "start": "1849380",
    "end": "1854600"
  },
  {
    "text": "were able to go into other tenants either way this research took a lot of",
    "start": "1854600",
    "end": "1861200"
  },
  {
    "text": "time and it was very complex this one and also the uh super glue that we introduced earlier but I would want to",
    "start": "1861200",
    "end": "1867980"
  },
  {
    "text": "mention that not always taking over a service and even this pattern has to be this complex and I'll pass it to you",
    "start": "1867980",
    "end": "1874820"
  },
  {
    "text": "after show you how simple it can be sometimes pretty scary",
    "start": "1874820",
    "end": "1880059"
  },
  {
    "text": "thank you sir so when we as Chuck mentioned not everything has to be hard and sometimes",
    "start": "1880460",
    "end": "1886580"
  },
  {
    "text": "you get you get to see all the pattern in action and we have a few simple steps",
    "start": "1886580",
    "end": "1892039"
  },
  {
    "text": "and for that we'll talk about Azure automation Azure automation is a service that runs Powershell and Python scripts",
    "start": "1892039",
    "end": "1898880"
  },
  {
    "text": "for you as a managed service they usually use to ingest data and do some",
    "start": "1898880",
    "end": "1903980"
  },
  {
    "text": "sort of transformation or work According to some sort of events for example a timer event or some event on the system",
    "start": "1903980",
    "end": "1911899"
  },
  {
    "text": "the scripts themselves are running on a shared sandbox or a hybrid workers and",
    "start": "1911899",
    "end": "1917539"
  },
  {
    "text": "it has support for managed identities which means that you can take a you can give the the scripts permission to",
    "start": "1917539",
    "end": "1923779"
  },
  {
    "text": "access Azure resources and okay so if we go to our qualifications data ingestion",
    "start": "1923779",
    "end": "1930620"
  },
  {
    "text": "check it uses it parses data and the workload is shared to some",
    "start": "1930620",
    "end": "1936140"
  },
  {
    "text": "degree and not to some degree they say it's a shared workers which is great and",
    "start": "1936140",
    "end": "1941240"
  },
  {
    "text": "and again the compute is not only not ours but it's also shared and so the first thing we did when we",
    "start": "1941240",
    "end": "1947840"
  },
  {
    "text": "looked at this automation API service we asked ourselves wait wait this thing has",
    "start": "1947840",
    "end": "1953179"
  },
  {
    "text": "access to Azure identities uh how do the Azure identities get from the service",
    "start": "1953179",
    "end": "1958520"
  },
  {
    "text": "into the script there's some has to be some sort of pipe that takes it from A to B",
    "start": "1958520",
    "end": "1963740"
  },
  {
    "text": "so apparently it's a it's like everything in the cloud it's an HTTP server but apparently there is a when",
    "start": "1963740",
    "end": "1971000"
  },
  {
    "text": "you start your your script there is a job starting there's a server running in the background and which allows you as",
    "start": "1971000",
    "end": "1978320"
  },
  {
    "text": "your script to go ahead and request your managed identities which basically is a curl command that you ask for your",
    "start": "1978320",
    "end": "1984559"
  },
  {
    "text": "managed identities now I want you to really really focus on this thing do you see the the weird",
    "start": "1984559",
    "end": "1991159"
  },
  {
    "text": "thing I'll help you do you see the weird thing okay so Port 40 0008 is a really really",
    "start": "1991159",
    "end": "2000279"
  },
  {
    "text": "strange port to have to a local server that has no problem with ports so but so",
    "start": "2000279",
    "end": "2006880"
  },
  {
    "text": "we googled Port 40 40 0008 and of course there is a other usages for the ports",
    "start": "2006880",
    "end": "2013539"
  },
  {
    "text": "like the brothers in arms online service uh but uh we we estimated that this",
    "start": "2013539",
    "end": "2020620"
  },
  {
    "text": "automation service is not probably serving the brothers in arm's owner uh what do we what are what we",
    "start": "2020620",
    "end": "2026679"
  },
  {
    "text": "speculated and our spidey sense were stingling that there is probably other they they wanted to use the port 40 000",
    "start": "2026679",
    "end": "2033640"
  },
  {
    "text": "which is around nice support but someone was already taking the sport so they had",
    "start": "2033640",
    "end": "2039039"
  },
  {
    "text": "to go to the next one and the next one and the next one and we got forty thousand and eight apparently there were",
    "start": "2039039",
    "end": "2044620"
  },
  {
    "text": "seven other people with their port already taken so we have decided to do a",
    "start": "2044620",
    "end": "2050440"
  },
  {
    "text": "really really complex exploit which basically goes starts getting poured from Port 40 000 and goes up a thousand",
    "start": "2050440",
    "end": "2057580"
  },
  {
    "text": "ports and just tries to request from those those servers the token to",
    "start": "2057580",
    "end": "2062800"
  },
  {
    "text": "yourself and we said no way no way this was going to work but to our surprise",
    "start": "2062800",
    "end": "2069700"
  },
  {
    "text": "and amazement we started getting like tokens a lot of tokens from our machines",
    "start": "2069700",
    "end": "2074980"
  },
  {
    "text": "and these tokens were actually for other tenants that are running that were by",
    "start": "2074980",
    "end": "2081220"
  },
  {
    "text": "mistake scheduled to run on the same machine as ours so we basically just requested another attendance keys and we",
    "start": "2081220",
    "end": "2088480"
  },
  {
    "text": "got them which is pretty fun now one of the things that an automation service allows you to do is to automate so we we",
    "start": "2088480",
    "end": "2095740"
  },
  {
    "text": "automated this exploit running it over and over again and just extracting from the token the tenant ID so we will know",
    "start": "2095740",
    "end": "2102220"
  },
  {
    "text": "how many different tenants were dealing with and we got to a thousands of tenants and",
    "start": "2102220",
    "end": "2107380"
  },
  {
    "text": "for companies were for billions of billions of dollars we had like 50 of the S P 500 companies in there",
    "start": "2107380",
    "end": "2114160"
  },
  {
    "text": "so uh circling back and talking about again about our father",
    "start": "2114160",
    "end": "2119560"
  },
  {
    "text": "so from this time we didn't have we didn't need an RC it was a feature we",
    "start": "2119560",
    "end": "2124720"
  },
  {
    "text": "didn't need a p it was kept we did a request to an internal server which",
    "start": "2124720",
    "end": "2130540"
  },
  {
    "text": "basically gave us credentials to all other tenants uh which which was which is really",
    "start": "2130540",
    "end": "2136599"
  },
  {
    "text": "really cool so what's the takeaways from that or",
    "start": "2136599",
    "end": "2141700"
  },
  {
    "text": "what what what are we learning uh first thing is shared tenancy is really fun for us researcher but it's really tricky",
    "start": "2141700",
    "end": "2149320"
  },
  {
    "text": "it's one of those places where you try to have it both ways share and unshare",
    "start": "2149320",
    "end": "2155020"
  },
  {
    "text": "you you want to have isolation and sharing in the same time and this makes the the cloud providers work here very",
    "start": "2155020",
    "end": "2162520"
  },
  {
    "text": "very tricky the second thing is that you you as a researcher don't want to find one bug",
    "start": "2162520",
    "end": "2169119"
  },
  {
    "text": "one one issue those are there if you open any any bug Bounty program there",
    "start": "2169119",
    "end": "2175119"
  },
  {
    "text": "are millions of issues the the idea is you go ahead and you try to find patterns because patterns lead you to",
    "start": "2175119",
    "end": "2180760"
  },
  {
    "text": "find more and more instances of the issue and that way you can basically scale your efforts and and be able to be",
    "start": "2180760",
    "end": "2187420"
  },
  {
    "text": "much more effective as a researcher uh one more ticket we'd like to mention is a bit about the double edged uh",
    "start": "2187420",
    "end": "2194560"
  },
  {
    "text": "security being pretty much in the cloud which means we didn't talk about patching process here at all but we",
    "start": "2194560",
    "end": "2201040"
  },
  {
    "text": "would say the cloud security teams were very professional when we reported the vulnerabilities and most of the time",
    "start": "2201040",
    "end": "2206140"
  },
  {
    "text": "they close it within days and the good thing about the security there is once",
    "start": "2206140",
    "end": "2211420"
  },
  {
    "text": "the patch was deployed it affects everyone meaning no one needs to patch it manually no one needs to install any",
    "start": "2211420",
    "end": "2217720"
  },
  {
    "text": "update it just works the problem and the reason why it's double edged is because",
    "start": "2217720",
    "end": "2223000"
  },
  {
    "text": "once there is a vulnerability it doesn't have to do with versions with your firewall rules with nothing once you",
    "start": "2223000",
    "end": "2229060"
  },
  {
    "text": "have a vulnerability in a cloud service it also affects everyone so that's a problem and we'd like to thank you very",
    "start": "2229060",
    "end": "2236200"
  },
  {
    "text": "much for having us and if you have any questions we're here to take them [Applause]",
    "start": "2236200",
    "end": "2248440"
  },
  {
    "text": "okay if you have questions you if you ah great there's a mic there's a microphone",
    "start": "2248440",
    "end": "2253480"
  },
  {
    "text": "yeah hi um it seems that you finished your",
    "start": "2253480",
    "end": "2260920"
  },
  {
    "text": "work in today's presentation uh day back into December 2021",
    "start": "2260920",
    "end": "2267880"
  },
  {
    "text": "uh after these four um 16 months uh do",
    "start": "2267880",
    "end": "2273099"
  },
  {
    "text": "you find them they fix the problem so that you cannot redo it today my second",
    "start": "2273099",
    "end": "2279940"
  },
  {
    "text": "question is are there any other surveys you described there is 200 surface for",
    "start": "2279940",
    "end": "2285460"
  },
  {
    "text": "these two cloud service provider are there any other surfaces that you are",
    "start": "2285460",
    "end": "2291339"
  },
  {
    "text": "wear that you are progressing in doing the same methodology to find out the data uh",
    "start": "2291339",
    "end": "2299320"
  },
  {
    "text": "legal through either the oauth token or the data you can access from the other",
    "start": "2299320",
    "end": "2305140"
  },
  {
    "text": "tenants thank you so for the first question uh we we found more issues and",
    "start": "2305140",
    "end": "2310720"
  },
  {
    "text": "if you go to to the to our blog you can find more we only have 40 minutes which is not a lot of time to talk about",
    "start": "2310720",
    "end": "2316180"
  },
  {
    "text": "everything uh the second question is whether there are particular services or Cloud",
    "start": "2316180",
    "end": "2322480"
  },
  {
    "text": "providers that are more affected by this issue and it's not I say that all Cloud",
    "start": "2322480",
    "end": "2328720"
  },
  {
    "text": "providers are world class really really really good at what they're doing like uh within their scaling complexity uh",
    "start": "2328720",
    "end": "2336940"
  },
  {
    "text": "nobody I believe in this room can do better like it's it's really really uh",
    "start": "2336940",
    "end": "2342640"
  },
  {
    "text": "hard and they're doing amazing in in what they do they're not immune but",
    "start": "2342640",
    "end": "2347980"
  },
  {
    "text": "they're doing really really great and I and if you ask me whether I would put",
    "start": "2347980",
    "end": "2353140"
  },
  {
    "text": "all my company's data in the cloud or put it in a Data Center on-prem and the answer is really really easy like uh on",
    "start": "2353140",
    "end": "2359859"
  },
  {
    "text": "the cloud every single time",
    "start": "2359859",
    "end": "2363240"
  },
  {
    "text": "okay great thank you for having us",
    "start": "2367119",
    "end": "2371578"
  }
]