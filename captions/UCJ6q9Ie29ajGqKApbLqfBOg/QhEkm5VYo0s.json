[
  {
    "text": "good morning uh welcome to the Apple disco party talk uh if you like Mac OS",
    "start": "2480",
    "end": "10000"
  },
  {
    "text": "or fire system vulnerabilities you are at the right place um my name is Chaba",
    "start": "10000",
    "end": "15120"
  },
  {
    "text": "fitel I'm working at country as a principal m security researcher I used",
    "start": "15120",
    "end": "22160"
  },
  {
    "text": "to work for offc uh writing a me exploitation training there even before",
    "start": "22160",
    "end": "27640"
  },
  {
    "text": "that I used to be uh red and blue team uh and I do a lot of Mac bug hunting I'm",
    "start": "27640",
    "end": "34160"
  },
  {
    "text": "close to 100 CVS now married have two kids and I'm really into uh TR running",
    "start": "34160",
    "end": "41000"
  },
  {
    "text": "uh the agenda uh there is a lot to cover so it will be a quite fastpaced uh talk",
    "start": "41000",
    "end": "47879"
  },
  {
    "text": "so first of all I will talk about the disc arbitration service what it what it is why it's uh good for us or",
    "start": "47879",
    "end": "55039"
  },
  {
    "text": "interesting uh and then I will just cover seven different vulnerabilities",
    "start": "55039",
    "end": "60199"
  },
  {
    "text": "most of them associated with um this service uh so let's start what is disc",
    "start": "60199",
    "end": "67040"
  },
  {
    "text": "aration D Service uh it's a systemwide service uh on Macos defined in the coma",
    "start": "67040",
    "end": "73479"
  },
  {
    "text": "discard bation the uh pist and it uh does offer mock service",
    "start": "73479",
    "end": "80040"
  },
  {
    "text": "globally uh under the same name uh mock service is basically a service service",
    "start": "80040",
    "end": "86079"
  },
  {
    "text": "which can be reached uh over Muk uh inter process communication from other",
    "start": "86079",
    "end": "91439"
  },
  {
    "text": "processes and the meor for this service is basically managing disk mounting and",
    "start": "91439",
    "end": "97280"
  },
  {
    "text": "unmounting uh you can also use this service to register a callback for mounting and then you can approve or",
    "start": "97280",
    "end": "104159"
  },
  {
    "text": "reject um these operations for the user um but eventually this uh service",
    "start": "104159",
    "end": "111960"
  },
  {
    "text": "will call the mount and unmount commands uh binaries under the hood uh to perform",
    "start": "111960",
    "end": "118360"
  },
  {
    "text": "its operation but uh the idea is that it basically masks um the difficulties of",
    "start": "118360",
    "end": "124039"
  },
  {
    "text": "the mount operation from you but uh why we like it as as security researchers so",
    "start": "124039",
    "end": "130920"
  },
  {
    "text": "first of all it runes root so it's a quite a privilege uh process it runs",
    "start": "130920",
    "end": "136640"
  },
  {
    "text": "unsend booxed um so it's also good uh it kind of has full disk access rights",
    "start": "136640",
    "end": "143440"
  },
  {
    "text": "which comes through the com apple Private Security Storage exempt heritable",
    "start": "143440",
    "end": "148720"
  },
  {
    "text": "entitlement um food disk access is basically uh a very wide uh",
    "start": "148720",
    "end": "156040"
  },
  {
    "text": "privacy um privilege uh on Mac OS that you can access basically all of the",
    "start": "156040",
    "end": "161760"
  },
  {
    "text": "users uh all of the user private data and the max service it offers uh is",
    "start": "161760",
    "end": "169080"
  },
  {
    "text": "reachable from the application sandbox so basically we can potentially also use it to escape the sandbox uh because we",
    "start": "169080",
    "end": "176159"
  },
  {
    "text": "can reach it from there and additionally it's also open source so it's one of the",
    "start": "176159",
    "end": "181480"
  },
  {
    "text": "open source packages from Apple so it's easier to audit uh the code base of this service than other close Source",
    "start": "181480",
    "end": "189640"
  },
  {
    "text": "ones uh so actually the the mock service trans it's actually running on top of",
    "start": "189640",
    "end": "195440"
  },
  {
    "text": "Mack and not xpc which is more widely used nowadays um on Mac OS and the mock",
    "start": "195440",
    "end": "202480"
  },
  {
    "text": "interface is generated by MC the mock interface generator uh which basically",
    "start": "202480",
    "end": "207920"
  },
  {
    "text": "simplifies the uh the interface but we don't even need to deal with that",
    "start": "207920",
    "end": "213280"
  },
  {
    "text": "because there is a public dis arbitration framework where there is a function for every single uh Mig routine",
    "start": "213280",
    "end": "220920"
  },
  {
    "text": "and we can just call them uh so this is a basic call flow of",
    "start": "220920",
    "end": "226519"
  },
  {
    "text": "uh the mount operation so when this cartion D receives um a request to mount",
    "start": "226519",
    "end": "232200"
  },
  {
    "text": "something this is the call Flow it will go through so every single request uh",
    "start": "232200",
    "end": "237920"
  },
  {
    "text": "not just for mound but as on counting and everything else will arrive in the da server session Q request this is",
    "start": "237920",
    "end": "245319"
  },
  {
    "text": "probably the most important function uh in the entire demon it will do all the permissions",
    "start": "245319",
    "end": "252040"
  },
  {
    "text": "check uh for privilege for sandbox it will also perform authorizations and so",
    "start": "252040",
    "end": "257680"
  },
  {
    "text": "on this is very important because if like an unprivileged application uh calls this service it needs to ensure",
    "start": "257680",
    "end": "265040"
  },
  {
    "text": "that um uh it conforms with the other application r",
    "start": "265040",
    "end": "270520"
  },
  {
    "text": "to basically to prevent privilege escalations or sandbox escapes uh once",
    "start": "270520",
    "end": "276320"
  },
  {
    "text": "it's done with all the checks it will go through a bunch of uh internal function eventually arrive to the uh DFI system",
    "start": "276320",
    "end": "285080"
  },
  {
    "text": "Mount fit arguments where it will build up um the external Mount command",
    "start": "285080",
    "end": "291600"
  },
  {
    "text": "options and eventually it will call Da command execute which will call poone",
    "start": "291600",
    "end": "297120"
  },
  {
    "text": "and it will just run Mount command uh with a bunch of options uh so with that let's jump into",
    "start": "297120",
    "end": "303919"
  },
  {
    "text": "the vulnerabilities uh so the first one is a Sandbox Escape um this output was taken from",
    "start": "303919",
    "end": "312160"
  },
  {
    "text": "another exploit uh the end result of an exploit where I dropped a DMG file like",
    "start": "312160",
    "end": "318720"
  },
  {
    "text": "a dis image uh from a Sandbox and mounted it with dis arbitration D now",
    "start": "318720",
    "end": "324080"
  },
  {
    "text": "there is a problem with this uh Mount um and which I didn't spot at that",
    "start": "324080",
    "end": "331080"
  },
  {
    "text": "time and the main problem is that the Curtin flag is missing from this um",
    "start": "331080",
    "end": "338680"
  },
  {
    "text": "Mount Point why it's a problem because if there is no current extended attribute",
    "start": "338680",
    "end": "345000"
  },
  {
    "text": "uh the files will not be quarantined uh on the on the mounted",
    "start": "345000",
    "end": "351199"
  },
  {
    "text": "file system if the files are not qued on the mounted file system then there will",
    "start": "351199",
    "end": "356680"
  },
  {
    "text": "be no gatekeeper checks um uh on the applications we try to run technically",
    "start": "356680",
    "end": "362639"
  },
  {
    "text": "there is a gatekeeper check but it will only ensure that the code signature is valid for the application uh but it will",
    "start": "362639",
    "end": "369520"
  },
  {
    "text": "not check like notarization approv developers and so on so basically we can",
    "start": "369520",
    "end": "374680"
  },
  {
    "text": "just run any application we want uh from the uh image and if we can launch any",
    "start": "374680",
    "end": "381120"
  },
  {
    "text": "application it means we can launch like an un sandbox application and and then",
    "start": "381120",
    "end": "387319"
  },
  {
    "text": "escape the sandbox so if we can manage to mount a dis image without the current",
    "start": "387319",
    "end": "392560"
  },
  {
    "text": "flag we can use it for sandbox Escape now what was the actual issue here like uh beyond the current a flag",
    "start": "392560",
    "end": "401000"
  },
  {
    "text": "missing why it was missing um so we see this citation D",
    "start": "401000",
    "end": "406560"
  },
  {
    "text": "didn't add the flag uh during the mounting which was weird at first side because in this citation D there is",
    "start": "406560",
    "end": "413160"
  },
  {
    "text": "actually a function which will query the io registry for the disk device",
    "start": "413160",
    "end": "420120"
  },
  {
    "text": "if the device has the quain flex set and the device did have the quain flex set",
    "start": "420120",
    "end": "427560"
  },
  {
    "text": "to yes yet this cartion D didn't apply the current flag uh for the mounted file",
    "start": "427560",
    "end": "434440"
  },
  {
    "text": "system uh so I was wondering why why it's happening and it turned out there are two call flows there were two call",
    "start": "434440",
    "end": "441240"
  },
  {
    "text": "flows inside uh this carburation D the first one is when we call open command",
    "start": "441240",
    "end": "446960"
  },
  {
    "text": "on a disk image or when we double click on that image uh in that case it will call Dad create",
    "start": "446960",
    "end": "453919"
  },
  {
    "text": "from IO media which call the io registry search and we look up the Curran flag",
    "start": "453919",
    "end": "460919"
  },
  {
    "text": "but if we already have a dis image uh sorry not a dis image but like a Dev device uh which is a result of a mounted",
    "start": "460919",
    "end": "469039"
  },
  {
    "text": "uh dis image uh and if you try to mount that device even if it has a quantin flag",
    "start": "469039",
    "end": "476440"
  },
  {
    "text": "there will be no check so if we just call Dads create from BSD name name like",
    "start": "476440",
    "end": "481800"
  },
  {
    "text": "Dev disk and it will just call the mount uh operation without that",
    "start": "481800",
    "end": "488199"
  },
  {
    "text": "flag uh so how so let's say we are in the sbox how can we get a Dev disk",
    "start": "488199",
    "end": "495199"
  },
  {
    "text": "device on the system because a DMG file is not a dep disk device and to create a",
    "start": "495199",
    "end": "502599"
  },
  {
    "text": "disk device uh that's done by the Disk Management demon which is not",
    "start": "502599",
    "end": "508560"
  },
  {
    "text": "reachable from the send box but uh the trick we can do is that we drop a DMG on",
    "start": "508560",
    "end": "513680"
  },
  {
    "text": "the file system and we run open DMG that we result the system opening the DMG",
    "start": "513680",
    "end": "521039"
  },
  {
    "text": "creating the dev device and mounting it in a default location now in at that",
    "start": "521039",
    "end": "527760"
  },
  {
    "text": "moment the dev dis device will be created and it will be also mounted",
    "start": "527760",
    "end": "533240"
  },
  {
    "text": "which we don't want because uh first in this case it will have the quantin uh",
    "start": "533240",
    "end": "538920"
  },
  {
    "text": "Flex set two we want to mount it somewhere else luckily from the sandbox we can unmount",
    "start": "538920",
    "end": "545040"
  },
  {
    "text": "this dis uh using the dis arbitration D API and then just remount",
    "start": "545040",
    "end": "550760"
  },
  {
    "text": "it uh using the other function uh with this arbitration D so basically that's",
    "start": "550760",
    "end": "556240"
  },
  {
    "text": "how we get a dis uh device and can play with that later how Apple",
    "start": "556240",
    "end": "562640"
  },
  {
    "text": "fixed it uh basically they moved the quantin flag assignment down to the Kel",
    "start": "562640",
    "end": "570880"
  },
  {
    "text": "and this IO regist lookup will have happen every time we try to mount the file system and the carna will enforce uh the",
    "start": "570880",
    "end": "579160"
  },
  {
    "text": "current flag uh on the file system now before we go into the other",
    "start": "579160",
    "end": "584839"
  },
  {
    "text": "vulnerabilities I want to go through a couple of call flows because these will",
    "start": "584839",
    "end": "590000"
  },
  {
    "text": "be more and more complicated as we go and we need to understand the basics so",
    "start": "590000",
    "end": "596399"
  },
  {
    "text": "Mount only call we have a caller like our application which runs as the user route",
    "start": "596399",
    "end": "603040"
  },
  {
    "text": "whatever might be sbox and it calls the mount command in that case the mount command will run with the same",
    "start": "603040",
    "end": "609079"
  },
  {
    "text": "privileges as the caller the mount command will call into the kernel through the mount system call",
    "start": "609079",
    "end": "615360"
  },
  {
    "text": "and the Kel will check the classic posix permissions like if the user have",
    "start": "615360",
    "end": "620399"
  },
  {
    "text": "privileges over the directory they want to mount and it will also do the Mac uh",
    "start": "620399",
    "end": "625640"
  },
  {
    "text": "the mandatory Access Control framework callouts for sandbox verifications and",
    "start": "625640",
    "end": "631040"
  },
  {
    "text": "so on so let's see an example I'm the user try to mount over a directory which",
    "start": "631040",
    "end": "637839"
  },
  {
    "text": "is owned by root and the disk owner is as root uh the disk ownership will be important later so I just keep uh it",
    "start": "637839",
    "end": "645320"
  },
  {
    "text": "being listed I call the mount command it will run again as user and when it hits",
    "start": "645320",
    "end": "650440"
  },
  {
    "text": "the canel it will fail because the user doesn't have privileges over the root own",
    "start": "650440",
    "end": "655959"
  },
  {
    "text": "directory now let's see how the mount operation happens when we have this arbitration the uh in the",
    "start": "655959",
    "end": "662600"
  },
  {
    "text": "pipeline so now we have the caller again running as x with some privileges which",
    "start": "662600",
    "end": "668560"
  },
  {
    "text": "calls into the disc arbitration D now that runs as root and unsend box and it",
    "start": "668560",
    "end": "673760"
  },
  {
    "text": "will do two checks one a Sandbox check two it will check if the calling user ID",
    "start": "673760",
    "end": "679560"
  },
  {
    "text": "is the same as the disk owner ID this is because it will call the mount command",
    "start": "679560",
    "end": "684760"
  },
  {
    "text": "with the disk owner uh privileges and then the mount command again gos",
    "start": "684760",
    "end": "691480"
  },
  {
    "text": "into the kernel so again let's see an example for this I'm the user want to mount over uh directory which is owned",
    "start": "691480",
    "end": "699480"
  },
  {
    "text": "by root and the disc corner is also root once I get to this cartion D that will fail because the user is not the same as",
    "start": "699480",
    "end": "706560"
  },
  {
    "text": "root uh again the dis ownership is being checked okay so let's try to mount a dis",
    "start": "706560",
    "end": "712560"
  },
  {
    "text": "which is owned by the user again over a directory which is um own by root I I",
    "start": "712560",
    "end": "719320"
  },
  {
    "text": "get to this cation D I get a pass it will say okay you can go on and it will",
    "start": "719320",
    "end": "725000"
  },
  {
    "text": "call the mount command with the Privileges of the dis so the mount operation privilege will be the user and",
    "start": "725000",
    "end": "732600"
  },
  {
    "text": "once it gets to the kernel uh this will again fail so this",
    "start": "732600",
    "end": "738000"
  },
  {
    "text": "is basically how we Ure uh PES um in this case so let's see another",
    "start": "738000",
    "end": "744120"
  },
  {
    "text": "example uh try to attack this arbitration D with a symbolic link uh which was possible in the past uh but",
    "start": "744120",
    "end": "751600"
  },
  {
    "text": "now it's fixed so let's say uh I'm the user and I have a symbolic link pointing",
    "start": "751600",
    "end": "757519"
  },
  {
    "text": "to Temp MNT that directory is owned by the user the disc corner is the user everyone is the user we just have a",
    "start": "757519",
    "end": "763760"
  },
  {
    "text": "symbolic link gets to this arbitration the pass privileges all fine it will",
    "start": "763760",
    "end": "770360"
  },
  {
    "text": "call Mount but I didn't say before that the mount will have the dash K options which means it tells the Kel to not",
    "start": "770360",
    "end": "777839"
  },
  {
    "text": "follow any symbolic Link in the in the entire pass of the",
    "start": "777839",
    "end": "782880"
  },
  {
    "text": "target uh so it will call into the kernel and basically it will fail",
    "start": "782880",
    "end": "788199"
  },
  {
    "text": "because there is a symbolic link uh on the target so although privilege wise this would work uh but because of having",
    "start": "788199",
    "end": "796320"
  },
  {
    "text": "a Sim Link in the actual operation this will fail and actually this is a very very very important step in in a",
    "start": "796320",
    "end": "803760"
  },
  {
    "text": "mitigation uh so with that let's go to the uh second CV",
    "start": "803760",
    "end": "809920"
  },
  {
    "text": "which was both a Sandbox escape and local privilege escalation uh on this cation",
    "start": "809920",
    "end": "816440"
  },
  {
    "text": "D so this cartion D supports two types of file system one which is backed by",
    "start": "816440",
    "end": "823519"
  },
  {
    "text": "Kel extension which are like Cal drivers and ones which are are backed by uh user",
    "start": "823519",
    "end": "830079"
  },
  {
    "text": "based file systems so like user drivers now the problem was is the",
    "start": "830079",
    "end": "835720"
  },
  {
    "text": "siming check is not enforced on user FS Mound so here on the source code on the",
    "start": "835720",
    "end": "842759"
  },
  {
    "text": "right we can see that uh in case of user FS when this cration they put together",
    "start": "842759",
    "end": "849800"
  },
  {
    "text": "the mount command options the dash K was missing so this was the first problem",
    "start": "849800",
    "end": "858000"
  },
  {
    "text": "second problem was that this arbitration D called into FS k d which was running",
    "start": "858000",
    "end": "863880"
  },
  {
    "text": "as root and Fs k d called the mount command as root every single time",
    "start": "863880",
    "end": "870199"
  },
  {
    "text": "regardless of um the disk owner or the caller user ID whatever so it was",
    "start": "870199",
    "end": "876839"
  },
  {
    "text": "running as rot and no sim link uh check enforcement were",
    "start": "876839",
    "end": "882079"
  },
  {
    "text": "happening uh again this is just a summary uh of what I just described so",
    "start": "882079",
    "end": "888360"
  },
  {
    "text": "how we could exploit this uh I'm the user I created a mount Point called link",
    "start": "888360",
    "end": "895519"
  },
  {
    "text": "and pointed to like an place which is okay from privilege perspective I call",
    "start": "895519",
    "end": "900959"
  },
  {
    "text": "into this citation D it passes the check this citation D calls into FS D and that",
    "start": "900959",
    "end": "907800"
  },
  {
    "text": "moment I will spe swap the link to a place which is like not okay which is",
    "start": "907800",
    "end": "913600"
  },
  {
    "text": "maybe own by root or allows me to escape the sandbox and so on fskd we're calling",
    "start": "913600",
    "end": "922320"
  },
  {
    "text": "um the mount command as root so it's running as root and I still have the link and because there is no K option uh",
    "start": "922320",
    "end": "930560"
  },
  {
    "text": "the carel will don't will not care and just follow the symbolic link for the",
    "start": "930560",
    "end": "938240"
  },
  {
    "text": "mount so how we can weaponize this um Mount attack because what we",
    "start": "942759",
    "end": "949920"
  },
  {
    "text": "achieve here is we can mount a dis over a directory as root but",
    "start": "949920",
    "end": "956519"
  },
  {
    "text": "how we actually get code execution as rout uh Apple is very good in locking",
    "start": "956519",
    "end": "963399"
  },
  {
    "text": "down weaponization methods so many of the the default ideas are now protected",
    "start": "963399",
    "end": "969759"
  },
  {
    "text": "by TCC the Privacy demon so you cannot Mount over many many directories but one which is",
    "start": "969759",
    "end": "976639"
  },
  {
    "text": "still open uh and I guess it will be closed soon uh is mounting over the ETC",
    "start": "976639",
    "end": "982560"
  },
  {
    "text": "cups uh directory so we Mount over the ETC cups directory the cups is the",
    "start": "982560",
    "end": "989720"
  },
  {
    "text": "uh Unix printing service and we drop a CS files.com file",
    "start": "989720",
    "end": "996240"
  },
  {
    "text": "and this in in this file we set the error log option to etc.",
    "start": "996240",
    "end": "1002720"
  },
  {
    "text": "DLP or or any file and we can also set the log file permission to",
    "start": "1002720",
    "end": "1008240"
  },
  {
    "text": "777 which means that it's anyone can modify and write this file and we also",
    "start": "1008240",
    "end": "1014440"
  },
  {
    "text": "add some junk uh to the configuration file in order to actually",
    "start": "1014440",
    "end": "1019839"
  },
  {
    "text": "trigger an error logging so this file will be created with 777 permissions",
    "start": "1019839",
    "end": "1026038"
  },
  {
    "text": "then we call cctl which will trigger the CBS demon and this file will be created",
    "start": "1026039",
    "end": "1033839"
  },
  {
    "text": "at that point uh we have the sud DLP file created with 7 s permissions and we",
    "start": "1033839",
    "end": "1041400"
  },
  {
    "text": "can edit it and we will add the staff all all no passwords all line which",
    "start": "1041400",
    "end": "1046798"
  },
  {
    "text": "basically means anyone can run pseudo uh without providing a password and anyone",
    "start": "1046799",
    "end": "1053720"
  },
  {
    "text": "everyone will be elevated to root uh without a password but because",
    "start": "1053720",
    "end": "1059480"
  },
  {
    "text": "the permissions are so wide Pudo will ignore uh this configuration file at",
    "start": "1059480",
    "end": "1065120"
  },
  {
    "text": "this point so what we need to do is again change the cops files.com file and",
    "start": "1065120",
    "end": "1071400"
  },
  {
    "text": "now set the log file permission to 70 which means only the root can um edit",
    "start": "1071400",
    "end": "1077559"
  },
  {
    "text": "and read this uh configuration file we call cctl again uh again it will produce",
    "start": "1077559",
    "end": "1083880"
  },
  {
    "text": "some error locks and it will reset the file permissions and then we can call sud sudo Su although there will be some",
    "start": "1083880",
    "end": "1091000"
  },
  {
    "text": "junk lines in this file sud Sudo is just nice enough to ignore all of",
    "start": "1091000",
    "end": "1096120"
  },
  {
    "text": "these okay so this was for privilege escalation how we can actually utilize",
    "start": "1096120",
    "end": "1101400"
  },
  {
    "text": "the mount operation for Escaping The Sandbox so one idea is to mount over the",
    "start": "1101400",
    "end": "1107640"
  },
  {
    "text": "library preferences directory which stores all sorts of um configuration for",
    "start": "1107640",
    "end": "1113520"
  },
  {
    "text": "many applications and drop a terminal configuration file and in terminal we can set a common",
    "start": "1113520",
    "end": "1121360"
  },
  {
    "text": "string configuration which is basically a share command which will be executed upon opening terminal now terminal runs",
    "start": "1121360",
    "end": "1130360"
  },
  {
    "text": "un send boox so whatever we put here will be run on sendbox",
    "start": "1130360",
    "end": "1136000"
  },
  {
    "text": "um the command I put in is basically basically uh a link to the sh script",
    "start": "1136000",
    "end": "1142280"
  },
  {
    "text": "which will be in the same directory and this sh script will achieve the previously described",
    "start": "1142280",
    "end": "1150120"
  },
  {
    "text": "LP uh so here's a demo showing this so I",
    "start": "1150120",
    "end": "1155960"
  },
  {
    "text": "open Terminal I show that I'm a low privilege user and I have an application",
    "start": "1155960",
    "end": "1161159"
  },
  {
    "text": "which is sandboxed the da user and I cannot do sudo so it asks for",
    "start": "1161159",
    "end": "1168080"
  },
  {
    "text": "password and nothing interesting is mounted uh at this stage and now I start",
    "start": "1168080",
    "end": "1174120"
  },
  {
    "text": "the app and it drops the DMG um with the open command again we need a device",
    "start": "1174120",
    "end": "1180679"
  },
  {
    "text": "unmounts it and now starts the race condition attack uh we escaped the",
    "start": "1180679",
    "end": "1186200"
  },
  {
    "text": "sandbox uh we open Terminal and now it's running the lp",
    "start": "1186200",
    "end": "1193399"
  },
  {
    "text": "script uh it takes some time because cop CTL",
    "start": "1193440",
    "end": "1198840"
  },
  {
    "text": "is is a bit slow to trigger uh so we need to wait always 10 seconds uh",
    "start": "1198840",
    "end": "1205200"
  },
  {
    "text": "approximately 10 seconds to um ensure that the files are created like the",
    "start": "1205200",
    "end": "1210840"
  },
  {
    "text": "error lock file is created permission set and and everything uh we already mounted our Etc",
    "start": "1210840",
    "end": "1217039"
  },
  {
    "text": "cups trigger cups C for the first um waiting a bit Yeah and and that's it now",
    "start": "1217039",
    "end": "1225039"
  },
  {
    "text": "we are rout and unsend box uh because it's all in",
    "start": "1225039",
    "end": "1232158"
  },
  {
    "text": "terminal so how Apper fix this uh now the no follow option the- K is basically",
    "start": "1234000",
    "end": "1240159"
  },
  {
    "text": "enforced on every Mount including user FS file system and the FSD now gets the",
    "start": "1240159",
    "end": "1245880"
  },
  {
    "text": "original request or ID and we execute the mount command uh with that",
    "start": "1245880",
    "end": "1253200"
  },
  {
    "text": "user okay uh the next one was a Sandbox escape and a TCC bypass using directory",
    "start": "1255640",
    "end": "1263200"
  },
  {
    "text": "traversa so again we have the same setup uh with this citation",
    "start": "1263200",
    "end": "1270200"
  },
  {
    "text": "D um okay my screen is changing a bit slow here um so what happens is when we",
    "start": "1270200",
    "end": "1278840"
  },
  {
    "text": "call into dis arbitration D using the disc arbitration API uh there is a DA disk mount with",
    "start": "1278840",
    "end": "1285960"
  },
  {
    "text": "arguments common uh function which uses the real pass and the CF URL create from",
    "start": "1285960",
    "end": "1291720"
  },
  {
    "text": "file system presentation uh apis to basically",
    "start": "1291720",
    "end": "1296919"
  },
  {
    "text": "resolve um the path which will resolve any symbolic links uh obviously we can",
    "start": "1296919",
    "end": "1303200"
  },
  {
    "text": "change that later and it will also remove any dot dot slash in the pass so",
    "start": "1303200",
    "end": "1309200"
  },
  {
    "text": "when I call into this citation D I cannot basically pass a do do slash because it will be removed at the",
    "start": "1309200",
    "end": "1316159"
  },
  {
    "text": "framework uh inside arbitration D when it does all the privileg checks and the",
    "start": "1316159",
    "end": "1321640"
  },
  {
    "text": "sandbox check it will also do some resolutions but only for the time of",
    "start": "1321640",
    "end": "1328200"
  },
  {
    "text": "verification that resolution is not permanent so that resolution is not passed to the",
    "start": "1328200",
    "end": "1333919"
  },
  {
    "text": "kernel uh but eventually the Kel will do all the final uh resolutions but the",
    "start": "1333919",
    "end": "1339520"
  },
  {
    "text": "important thing here is that the pass we pass to this arbitration D is unchanged",
    "start": "1339520",
    "end": "1345960"
  },
  {
    "text": "basically from the moment it leaves us till it gets to the kernel uh and if you have a siming there",
    "start": "1345960",
    "end": "1353200"
  },
  {
    "text": "it will basically fail at the kernel but because this API is happening",
    "start": "1353200",
    "end": "1360559"
  },
  {
    "text": "on our side on the caller side um we have control over that and what we can",
    "start": "1360559",
    "end": "1367240"
  },
  {
    "text": "do is retain any dot do slash we don't have to call the provided API we can",
    "start": "1367240",
    "end": "1374279"
  },
  {
    "text": "reimplement it ourself especially that it's open source it's pretty easy so we can just copy the function remove the",
    "start": "1374279",
    "end": "1381000"
  },
  {
    "text": "real pass resolution and the other resolution and just pass the same call and then do slash will remain in the",
    "start": "1381000",
    "end": "1388640"
  },
  {
    "text": "call so let's see how we can exploit this so we set the target to private Tam",
    "start": "1388640",
    "end": "1396480"
  },
  {
    "text": "do do do do/ users Etc com apple TCC com",
    "start": "1396480",
    "end": "1402159"
  },
  {
    "text": "apple TCC is the directory where the uh TCC database is stored with all the uh",
    "start": "1402159",
    "end": "1410279"
  },
  {
    "text": "privacy privileges set um for the user basically and we also have a symbolic",
    "start": "1410279",
    "end": "1416880"
  },
  {
    "text": "link on deer pointing to private temp 123 we send it to this citation",
    "start": "1416880",
    "end": "1424760"
  },
  {
    "text": "d uh when it will call sandbox check sandbox check would ensure that I cannot",
    "start": "1424760",
    "end": "1430400"
  },
  {
    "text": "Mount overcome Apple TCC if we resolve this pass um for the",
    "start": "1430400",
    "end": "1437640"
  },
  {
    "text": "time of check and it will give a pass because the resolution is private temp users Etc",
    "start": "1437640",
    "end": "1445679"
  },
  {
    "text": "that's not in the users's home directory it's fine to mount over this",
    "start": "1445679",
    "end": "1451360"
  },
  {
    "text": "directory now we the mount command is passed and we delete the symbolic link",
    "start": "1451360",
    "end": "1459720"
  },
  {
    "text": "and replace it with a regular directory and when it hits the kernel",
    "start": "1459720",
    "end": "1465240"
  },
  {
    "text": "again we don't have a SIM link anymore so it will not fade and the private temp deer Etc resolution",
    "start": "1465240",
    "end": "1472720"
  },
  {
    "text": "will be users crab library application support com TCC which will go to",
    "start": "1472720",
    "end": "1480880"
  },
  {
    "text": "pass and here's a quick video showing this so we have uh again an application",
    "start": "1482039",
    "end": "1490039"
  },
  {
    "text": "uh which is sandbox we can see that there are no permissions for files and folders in",
    "start": "1490039",
    "end": "1496880"
  },
  {
    "text": "TCC and just to ensure I also don't have anything um mounted",
    "start": "1496880",
    "end": "1503600"
  },
  {
    "text": "here and now we start the um the sandbox uh",
    "start": "1503600",
    "end": "1510639"
  },
  {
    "text": "application and it's done so it could run commands from the terminal which is on send boox and now we can see that",
    "start": "1523640",
    "end": "1530080"
  },
  {
    "text": "terminal has some extra privacy preferences it can access the desktop documents downloads",
    "start": "1530080",
    "end": "1535840"
  },
  {
    "text": "folder so hper fixed it now there is no resolution happening on the caller side",
    "start": "1535840",
    "end": "1541000"
  },
  {
    "text": "at all all that resolution was moved into the disc arbitration the",
    "start": "1541000",
    "end": "1546320"
  },
  {
    "text": "demon uh which is good but there is more to this um",
    "start": "1546320",
    "end": "1552039"
  },
  {
    "text": "actually there is there are two call flows now inside this cration d uh it's we'll check if the dayis mount",
    "start": "1552039",
    "end": "1560840"
  },
  {
    "text": "option no follow option is Set uh on the mount operation and if not set it will",
    "start": "1560840",
    "end": "1566640"
  },
  {
    "text": "resolve the pass and then do everything normally now you could think that okay",
    "start": "1566640",
    "end": "1573399"
  },
  {
    "text": "if we set this option then no resolution is happening so we could retain the dot slash um uh pass items which is through",
    "start": "1573399",
    "end": "1582840"
  },
  {
    "text": "however the sandbox check also got an update and basically it will disallow any symbolic links and do/ in the pass",
    "start": "1582840",
    "end": "1591880"
  },
  {
    "text": "uh the reason Apple had to do these two call flows uh we will understand from",
    "start": "1591880",
    "end": "1597480"
  },
  {
    "text": "the next exploits uh so the next one is an RP",
    "start": "1597480",
    "end": "1603000"
  },
  {
    "text": "through storage kit uh we have some new players here uh to complicate the call",
    "start": "1603000",
    "end": "1610799"
  },
  {
    "text": "Flow now instead of calling into this arbitration D directly we can call this",
    "start": "1610799",
    "end": "1616399"
  },
  {
    "text": "qil uh this can can also Mount this images but this H instead of calling",
    "start": "1616399",
    "end": "1621559"
  },
  {
    "text": "this cartion D it calls into storage kit D storage kit D calls into this",
    "start": "1621559",
    "end": "1626720"
  },
  {
    "text": "arbitration and so on now storage krons as root and unand box and it also have",
    "start": "1626720",
    "end": "1632760"
  },
  {
    "text": "kind of whole dis access uh permissions and it does a Sandbox check but it never",
    "start": "1632760",
    "end": "1638679"
  },
  {
    "text": "did a privilege check uh and it's it's a problem because",
    "start": "1638679",
    "end": "1645679"
  },
  {
    "text": "from this arbitration the point of view the caller is not us or dis util is",
    "start": "1645679",
    "end": "1652880"
  },
  {
    "text": "storage kitd who runs as rout so what",
    "start": "1652880",
    "end": "1661320"
  },
  {
    "text": "happens um my screen again a bit late with that so we have the operation",
    "start": "1662399",
    "end": "1671799"
  },
  {
    "text": "we are the user we want to mount um over a directory which is owned by root and",
    "start": "1671799",
    "end": "1677640"
  },
  {
    "text": "the dis owner is also root that's like a local apfs volume we call this Cil it",
    "start": "1677640",
    "end": "1682840"
  },
  {
    "text": "transfers the user uh again we call into storage kitd uh we got a pass because there is",
    "start": "1682840",
    "end": "1689399"
  },
  {
    "text": "no privilege check Happening Here storage KD we call into this cartion D",
    "start": "1689399",
    "end": "1695200"
  },
  {
    "text": "but now the privilege like the caller privilege is root because storage kit D runs as root and now what this card",
    "start": "1695200",
    "end": "1702440"
  },
  {
    "text": "vation de Compares is the privilege route and the dis owner which is also",
    "start": "1702440",
    "end": "1708840"
  },
  {
    "text": "root and they are equal so it will get a we will get a pass and it will call Mount as root because the dis owner is",
    "start": "1708840",
    "end": "1715559"
  },
  {
    "text": "root everything is root the can will just say okay you can mount it so",
    "start": "1715559",
    "end": "1721640"
  },
  {
    "text": "basically we can trivial Mount uh with dis U",
    "start": "1721640",
    "end": "1727799"
  },
  {
    "text": "any uh any dis which is owned by rout over any directory uh which is own by",
    "start": "1727799",
    "end": "1733840"
  },
  {
    "text": "root so we can play the same privilege escalation trick uh with the ETC cups uh",
    "start": "1733840",
    "end": "1740960"
  },
  {
    "text": "there is not even a raise condition here so if we run this uh we",
    "start": "1740960",
    "end": "1746840"
  },
  {
    "text": "create a new apfs Forum uh you can do that as as the user and again we mount",
    "start": "1746840",
    "end": "1752840"
  },
  {
    "text": "it over Etc cups and we need just need to wait uh for the trigger twice 10",
    "start": "1752840",
    "end": "1761000"
  },
  {
    "text": "seconds and then it's done",
    "start": "1761000",
    "end": "1765799"
  },
  {
    "text": "yeah you can see the error messages print uh printed by pseudo but again sud sudo doesn't really",
    "start": "1768360",
    "end": "1775559"
  },
  {
    "text": "care okay so Apper fixed this um unfortunately it wasn't good uh at first",
    "start": "1775559",
    "end": "1783320"
  },
  {
    "text": "so we could utilize uh it again for privilege escalation but now also for TCC",
    "start": "1783320",
    "end": "1789200"
  },
  {
    "text": "bypass uh so what happens is inside storage kitd now they",
    "start": "1789200",
    "end": "1796640"
  },
  {
    "text": "added uh a free check uh but if you recall when you when",
    "start": "1796640",
    "end": "1803000"
  },
  {
    "text": "we call this arbitration the through the dis arbitration API there will be a pass",
    "start": "1803000",
    "end": "1809159"
  },
  {
    "text": "resolution so what we can do is play a Sim link attack with alternating a Sim",
    "start": "1809159",
    "end": "1815360"
  },
  {
    "text": "link so when we call uh and we can play the same uh",
    "start": "1815360",
    "end": "1821640"
  },
  {
    "text": "trick not only with the privilege check but also with the the sandbox",
    "start": "1821640",
    "end": "1826679"
  },
  {
    "text": "check so what happens is we are the user and we want to mount temp",
    "start": "1826679",
    "end": "1835159"
  },
  {
    "text": "link when it gets to storage kit d uh we point that link to Temp MNT and that's",
    "start": "1835159",
    "end": "1841519"
  },
  {
    "text": "owned by the user the Privileges user so storage kit D will will say okay you got a pass we quickly swep the symbolic link",
    "start": "1841519",
    "end": "1850799"
  },
  {
    "text": "and storage kit D we resolve it again when it calls out to this arbitration D",
    "start": "1850799",
    "end": "1856320"
  },
  {
    "text": "and that point it will point to Etc cups where the owner is root but now the",
    "start": "1856320",
    "end": "1861679"
  },
  {
    "text": "privilege is root and again uh all the privilage checks by this cation D and",
    "start": "1861679",
    "end": "1868720"
  },
  {
    "text": "the Kel will get a pass so basically could we could raise",
    "start": "1868720",
    "end": "1874639"
  },
  {
    "text": "the the privilege check uh inside storage",
    "start": "1874639",
    "end": "1879638"
  },
  {
    "text": "kitd I will skip this video because uh time is",
    "start": "1880000",
    "end": "1886039"
  },
  {
    "text": "running so so this is why this fixed for needed uh whenever storage so let's say",
    "start": "1886639",
    "end": "1893799"
  },
  {
    "text": "we have a normal user we we follow the normal call Flow so we get to this",
    "start": "1893799",
    "end": "1898960"
  },
  {
    "text": "arbitration lead there will be a pass resolution and everything will go as normal but when the request is coming",
    "start": "1898960",
    "end": "1906279"
  },
  {
    "text": "from storage kit D there shouldn't be a part resolution happening because if",
    "start": "1906279",
    "end": "1911480"
  },
  {
    "text": "there was a pass resolution happening it would mean that we could",
    "start": "1911480",
    "end": "1916840"
  },
  {
    "text": "um play the same race condition so it's really really important that when the request comes in",
    "start": "1916840",
    "end": "1923399"
  },
  {
    "text": "from Storage kitd the pass is retain as it was checked by storage kit D so",
    "start": "1923399",
    "end": "1931120"
  },
  {
    "text": "storage kit D will set this da disk Mount option no follow uh option and",
    "start": "1931120",
    "end": "1937200"
  },
  {
    "text": "then there will be no pass resolution and if there is a dot dot SL or Sim Link in the past then the send b check will",
    "start": "1937200",
    "end": "1944679"
  },
  {
    "text": "um drop the request okay so this was disc cartion D and",
    "start": "1944679",
    "end": "1952399"
  },
  {
    "text": "storage kit d uh but there are two more more lightweight uh",
    "start": "1952399",
    "end": "1958519"
  },
  {
    "text": "items uh the first one is bypassing time machine uh data protection with uh",
    "start": "1958519",
    "end": "1965159"
  },
  {
    "text": "apfs so time machine backups are protected by TCC the Privacy framework",
    "start": "1965159",
    "end": "1970919"
  },
  {
    "text": "uh on Apple this is because time machine backups by default contain all of your private data desktop documents conts",
    "start": "1970919",
    "end": "1978480"
  },
  {
    "text": "messages everything uh so it's very important that people attackers cannot access this data and if you have full",
    "start": "1978480",
    "end": "1986399"
  },
  {
    "text": "disk access permissions then you can access time machine um but if you have",
    "start": "1986399",
    "end": "1991519"
  },
  {
    "text": "full disk access permissions you can also access uh any other file as well so",
    "start": "1991519",
    "end": "1997760"
  },
  {
    "text": "that's that's fine now the way the time machine uh",
    "start": "1997760",
    "end": "2004039"
  },
  {
    "text": "backup dis is set there are apfs dis cows defined by the apfs file system and",
    "start": "2004039",
    "end": "2010200"
  },
  {
    "text": "one of the roles is backup time machine uh role and if we list the uh",
    "start": "2010200",
    "end": "2019039"
  },
  {
    "text": "the volume disc scroll for our time machine backup we can see that it has",
    "start": "2019039",
    "end": "2024320"
  },
  {
    "text": "the backup role also if you check the sandbox platform profile this is like a",
    "start": "2024320",
    "end": "2031960"
  },
  {
    "text": "deomi uh subset of the sendbox profile we can see that the is like a file",
    "start": "2031960",
    "end": "2038679"
  },
  {
    "text": "attribute time machine device or time machine backup it will assign uh it to the time",
    "start": "2038679",
    "end": "2046960"
  },
  {
    "text": "machine storage class which means that it will be",
    "start": "2046960",
    "end": "2052800"
  },
  {
    "text": "protected by basically by TCC uh but what we could do is we could",
    "start": "2052800",
    "end": "2060638"
  },
  {
    "text": "change the volume we could clear the backup roll from this volume so once we",
    "start": "2060639",
    "end": "2066480"
  },
  {
    "text": "cleared it then we unmount the disk we remount the disk and because it doesn't",
    "start": "2066480",
    "end": "2071919"
  },
  {
    "text": "have the backup R anymore we can just access all the files uh on the drive and",
    "start": "2071919",
    "end": "2077720"
  },
  {
    "text": "basically get access to all of the user private data uh the fix v. uh we can no",
    "start": "2077720",
    "end": "2084000"
  },
  {
    "text": "longer change uh or clear APF dis RS and the last one is dis utility uh",
    "start": "2084000",
    "end": "2091919"
  },
  {
    "text": "preeg escalation ASR is a command line utility",
    "start": "2091919",
    "end": "2097880"
  },
  {
    "text": "in uh Mac OS it's the Apple software restore utility and it's used to basically restore dis images uh or dis",
    "start": "2097880",
    "end": "2107800"
  },
  {
    "text": "um uh on the device this is like a bit copy restore so we can take a DMG a dis",
    "start": "2107800",
    "end": "2113839"
  },
  {
    "text": "image file and restore it to the volume or take another one volume and restore it to the other volume uh if you call it",
    "start": "2113839",
    "end": "2120680"
  },
  {
    "text": "from the command line we have to call it as root other files it will not run but we can also call ASR",
    "start": "2120680",
    "end": "2128320"
  },
  {
    "text": "as an xpc Service uh so through IPC communication through the com apple ASR",
    "start": "2128320",
    "end": "2135320"
  },
  {
    "text": "uh service handle but to reach it through xpc we have to have the com",
    "start": "2135320",
    "end": "2140760"
  },
  {
    "text": "Apper private ASR entitlement now this entitlement is dis utility the the GUI",
    "start": "2140760",
    "end": "2147079"
  },
  {
    "text": "utility uh does have this entitlement but you cannot assign this entit uh",
    "start": "2147079",
    "end": "2152400"
  },
  {
    "text": "entitlement to yourself because it's a private entitlement",
    "start": "2152400",
    "end": "2157839"
  },
  {
    "text": "but because this utility has it uh we can use dis utility to restore a DMG",
    "start": "2157839",
    "end": "2163920"
  },
  {
    "text": "file which has a suid binary embedded inside we can prepare this DMG offline",
    "start": "2163920",
    "end": "2171000"
  },
  {
    "text": "and because this utility doesn't ask for the password we can use the GUI to",
    "start": "2171000",
    "end": "2176800"
  },
  {
    "text": "basically uh drop a su file on the system run it",
    "start": "2176800",
    "end": "2182560"
  },
  {
    "text": "and get uh root shell now this is like a",
    "start": "2182560",
    "end": "2187720"
  },
  {
    "text": "GUI heavy um exploit so we need GUI",
    "start": "2187720",
    "end": "2193079"
  },
  {
    "text": "access uh for this so it's kind of limited uh use but let's say you have an",
    "start": "2193079",
    "end": "2199560"
  },
  {
    "text": "unattended workstation in an Enterprise then it's a good way to escalate",
    "start": "2199560",
    "end": "2205000"
  },
  {
    "text": "privileges to root uh from that user if you don't know the password uh so this",
    "start": "2205000",
    "end": "2210400"
  },
  {
    "text": "is how it works uh in this utility we just create a new volume",
    "start": "2210400",
    "end": "2216839"
  },
  {
    "text": "and into that volume we say we restore it and we restore it from our dis",
    "start": "2220359",
    "end": "2226319"
  },
  {
    "text": "image this dis image has a suid binary restore is done and now we can go uh to terminal",
    "start": "2226319",
    "end": "2236400"
  },
  {
    "text": "and uh we can see we cannot run sto um",
    "start": "2236400",
    "end": "2242280"
  },
  {
    "text": "but we have a suid binary uh on this newly mounted volume",
    "start": "2242280",
    "end": "2249520"
  },
  {
    "text": "uh sorry restore volume we can run it and now we are",
    "start": "2249680",
    "end": "2254800"
  },
  {
    "text": "root conclusion well this cation D has a very long",
    "start": "2258359",
    "end": "2265040"
  },
  {
    "text": "history of vulnerabilities this is just the new ones uh I found in the last one",
    "start": "2265040",
    "end": "2271839"
  },
  {
    "text": "year uh but it's a demon that keeps giving um",
    "start": "2271839",
    "end": "2279119"
  },
  {
    "text": "so that's all uh I still have two minutes uh if there are any questions we",
    "start": "2279119",
    "end": "2284960"
  },
  {
    "text": "have two minutes for that or you can find me after the talk thank [Applause]",
    "start": "2284960",
    "end": "2298659"
  },
  {
    "text": "you ah there is a question sorry can you come to the microphone uh so everyone",
    "start": "2300160",
    "end": "2305880"
  },
  {
    "text": "hears it",
    "start": "2305880",
    "end": "2309200"
  },
  {
    "text": "so it seems like this notion of the Privileges of discs whether it's through cups or through restore is kind of an",
    "start": "2311680",
    "end": "2319040"
  },
  {
    "text": "inherent problem with the system and not something that's just popped up once it seems like something that continues to",
    "start": "2319040",
    "end": "2324760"
  },
  {
    "text": "be an issue in system design do you think it might be possible to apply some kind of formal methods or model checking",
    "start": "2324760",
    "end": "2331000"
  },
  {
    "text": "approach to demonstrate that the way that these permissions are set up doesn't have issues um or how do you",
    "start": "2331000",
    "end": "2337240"
  },
  {
    "text": "think we can create a system that's more resilient so we don't have this like continue to come back over and",
    "start": "2337240",
    "end": "2343079"
  },
  {
    "text": "over um I think the the problem is not with the actual ownership of the dis",
    "start": "2343079",
    "end": "2348640"
  },
  {
    "text": "images because if you are a user and just open a DMG that will be owned by the user and not the system it's",
    "start": "2348640",
    "end": "2354680"
  },
  {
    "text": "basically I think it's very hard to handle these call flows when you um want",
    "start": "2354680",
    "end": "2361160"
  },
  {
    "text": "to mount something and you need to cross several demons uh to do",
    "start": "2361160",
    "end": "2367880"
  },
  {
    "text": "something and you need to have ensure that you check everything at every s",
    "start": "2367880",
    "end": "2373880"
  },
  {
    "text": "every single component and if there is error in any point of time uh basically",
    "start": "2373880",
    "end": "2382079"
  },
  {
    "text": "you have a problem uh so if I'm designing a system that has different permissions and all these layers of",
    "start": "2382079",
    "end": "2388800"
  },
  {
    "text": "complexity is there some advice that you would give to avoid introducing these",
    "start": "2388800",
    "end": "2394599"
  },
  {
    "text": "kinds of problems or if I already have a system is there way that you can I don't know have some guarantee that these",
    "start": "2394599",
    "end": "2400880"
  },
  {
    "text": "things won't arise in the future um I don't know uh but I do think this",
    "start": "2400880",
    "end": "2406920"
  },
  {
    "text": "is a hard engineering problem uh to solve even when I submitted some of",
    "start": "2406920",
    "end": "2412119"
  },
  {
    "text": "these vulnerabilities um I actually literally had to think",
    "start": "2412119",
    "end": "2417400"
  },
  {
    "text": "myself how would I fix this across multiple components uh I think there",
    "start": "2417400",
    "end": "2423119"
  },
  {
    "text": "should be like um not just like let's say apple has one",
    "start": "2423119",
    "end": "2429440"
  },
  {
    "text": "person developing this citation D and another person developing storage kit D there should be someone or some",
    "start": "2429440",
    "end": "2436200"
  },
  {
    "text": "engineering team overseeing the entire process uh and Engineering the",
    "start": "2436200",
    "end": "2441319"
  },
  {
    "text": "entire core flow across end to end uh basically and not just probably not just",
    "start": "2441319",
    "end": "2447560"
  },
  {
    "text": "here but if there are other similar um places then there as well",
    "start": "2447560",
    "end": "2453680"
  },
  {
    "text": "thank you thank you uh sorry of time but if you have questions you can find me uh here thank",
    "start": "2453680",
    "end": "2461079"
  },
  {
    "text": "you [Applause]",
    "start": "2461079",
    "end": "2466250"
  }
]