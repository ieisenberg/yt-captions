[
  {
    "text": "hello everyone my name is Quinn this is G our topic today is many birds one",
    "start": "0",
    "end": "9330"
  },
  {
    "text": "stone exploiting a single cycle I'd Varner ability across multiple software",
    "start": "9330",
    "end": "15799"
  },
  {
    "text": "it's the first time for us to be presenting at playhead so let me do some",
    "start": "21560",
    "end": "28470"
  },
  {
    "text": "self introduction we are security researchers from Shaitan security shade",
    "start": "28470",
    "end": "33960"
  },
  {
    "text": "and Tech it's a company from China providing pen testing service and",
    "start": "33960",
    "end": "39530"
  },
  {
    "text": "enterprise products we are in the security research team in the company",
    "start": "39530",
    "end": "44930"
  },
  {
    "text": "the team name is trading security research lab we pawned four targets in",
    "start": "44930",
    "end": "52829"
  },
  {
    "text": "this year's Pantone contest and the bugs we will talk today are used in the",
    "start": "52829",
    "end": "60000"
  },
  {
    "text": "contest we also did ps4 jailbreak",
    "start": "60000",
    "end": "65630"
  },
  {
    "text": "Android rooting in keep on a smart device opponent contest from China",
    "start": "65630",
    "end": "73880"
  },
  {
    "text": "we are city of players we were in the team blue last year and won the second",
    "start": "73880",
    "end": "81060"
  },
  {
    "text": "place at DEFCON CTF 2016 next satirist",
    "start": "81060",
    "end": "86820"
  },
  {
    "text": "are the main topic by introducing circulate",
    "start": "86820",
    "end": "91490"
  },
  {
    "text": "how everyone I'm CG I think most of you have heard or used the sicko light it's",
    "start": "99700",
    "end": "106490"
  },
  {
    "text": "an in process library that implements self content high reliability zero",
    "start": "106490",
    "end": "113420"
  },
  {
    "text": "configuration and transactional secure database engine it is widely used as a",
    "start": "113420",
    "end": "119330"
  },
  {
    "text": "embedded database software for local or a client storage in the applications",
    "start": "119330",
    "end": "126170"
  },
  {
    "text": "like the browsers and mobile applications this project starts in 2000",
    "start": "126170",
    "end": "134209"
  },
  {
    "text": "is 17 years old and it's too old to be secure if we find any new attack surface",
    "start": "134209",
    "end": "141620"
  },
  {
    "text": "or new vulnerability in psycho lights many projects built on security will be affected there are some previously",
    "start": "141620",
    "end": "152230"
  },
  {
    "text": "researched about attacking psycho light the database engine it suffers from",
    "start": "152230",
    "end": "158180"
  },
  {
    "text": "psycho injection here are some extreme examples of the psycho light tricks",
    "start": "158180",
    "end": "164450"
  },
  {
    "text": "taken from the psycho light injection cheat sheet if you are familiar with",
    "start": "164450",
    "end": "169870"
  },
  {
    "text": "suku injection you will understand these attacks immediately basically circulate",
    "start": "169870",
    "end": "176840"
  },
  {
    "text": "reads and writes directly to ordinary files if you can attach any file and as",
    "start": "176840",
    "end": "183799"
  },
  {
    "text": "a new database and write your web show and there's also a special function a",
    "start": "183799",
    "end": "190400"
  },
  {
    "text": "lot extension it can be used to allowed shared libraries these two methods give",
    "start": "190400",
    "end": "197570"
  },
  {
    "text": "you a shell or your remote shared directory however they are usually if",
    "start": "197570",
    "end": "205160"
  },
  {
    "text": "restricted in real-world cases so we are more interested in memory corruption",
    "start": "205160",
    "end": "212600"
  },
  {
    "text": "bugs in psycho light now we are going to reveal some public circulatory abilities",
    "start": "212600",
    "end": "219049"
  },
  {
    "text": "in history as we know security database",
    "start": "219049",
    "end": "225100"
  },
  {
    "text": "has some tables indexes triggers or wheels",
    "start": "225100",
    "end": "230750"
  },
  {
    "text": "and they are all contained in a single disk file the database file format is",
    "start": "230750",
    "end": "238190"
  },
  {
    "text": "cross-platform that means you can copy the same database file between 32 bits",
    "start": "238190",
    "end": "246950"
  },
  {
    "text": "and 46 a 64 piece system or move between",
    "start": "246950",
    "end": "253520"
  },
  {
    "text": "the big-endian little-endian architectures these features makes it",
    "start": "253520",
    "end": "259850"
  },
  {
    "text": "quite a popular choice for the application application format but they",
    "start": "259850",
    "end": "266180"
  },
  {
    "text": "also bring a lot of troubles into a psycho light as we know it's very hard",
    "start": "266180",
    "end": "272720"
  },
  {
    "text": "to write a perfect parser for most five four months hmm it's same for SiC light",
    "start": "272720",
    "end": "281890"
  },
  {
    "text": "as you see these are 2cv in recent years they are describing some issues when",
    "start": "281890",
    "end": "289070"
  },
  {
    "text": "passing the malformed database file and they can cause some hip issues well in",
    "start": "289070",
    "end": "295730"
  },
  {
    "text": "the real world I think the risk of hip overflow during parsing the static database file is really low I think",
    "start": "295730",
    "end": "306320"
  },
  {
    "text": "these two case are not very likely exploitable in the real world but",
    "start": "306320",
    "end": "314480"
  },
  {
    "text": "luckily in most cases single light works as an interpreter it runs security statements from the",
    "start": "314480",
    "end": "322340"
  },
  {
    "text": "user interactively this provides a more flexible way for the hackers to trigger",
    "start": "322340",
    "end": "329090"
  },
  {
    "text": "an explosion or ability for example you can you can set up a control environment",
    "start": "329090",
    "end": "336169"
  },
  {
    "text": "before triggering any hip overflow this these two box is triggered in normal",
    "start": "336169",
    "end": "346370"
  },
  {
    "text": "statement of sicklied there the first one is using select statement the second",
    "start": "346370",
    "end": "352040"
  },
  {
    "text": "is happening in create a table statement but these two are using some weird",
    "start": "352040",
    "end": "360169"
  },
  {
    "text": "grammar to trigger the bug that gives us the idea how to find this bug you if you have",
    "start": "360169",
    "end": "366500"
  },
  {
    "text": "enough weird gramma we can easily fast the cigarette and get",
    "start": "366500",
    "end": "373340"
  },
  {
    "text": "some bucks actually a fr FL works where",
    "start": "373340",
    "end": "379430"
  },
  {
    "text": "we are on cig light these pages scrapping the previous work of another",
    "start": "379430",
    "end": "384440"
  },
  {
    "text": "hacker the the author of AFL uses cigarette as the his experiment target",
    "start": "384440",
    "end": "394960"
  },
  {
    "text": "it was two years ago he ran FL for 30 minutes and found 22 unique crashes",
    "start": "394960",
    "end": "400990"
  },
  {
    "text": "including some usage of only initialized pointers invite the freeze or heap or",
    "start": "400990",
    "end": "408889"
  },
  {
    "text": "stack buffer overflows now the developers of FL are also using FL in",
    "start": "408889",
    "end": "417500"
  },
  {
    "text": "the testing strategy the following example is CV in last page is very",
    "start": "417500",
    "end": "425389"
  },
  {
    "text": "simple and needs finished in three lines of secure statements it cost invalid",
    "start": "425389",
    "end": "431840"
  },
  {
    "text": "free but I think if you want some random",
    "start": "431840",
    "end": "438469"
  },
  {
    "text": "bucks and report them for silly numbers you can just run FL use about fun many",
    "start": "438469",
    "end": "444949"
  },
  {
    "text": "random crushes well if you want to exploit some real word software you will",
    "start": "444949",
    "end": "451099"
  },
  {
    "text": "need deeper vulnerability and better knowledge of your target this is the",
    "start": "451099",
    "end": "457789"
  },
  {
    "text": "main topic of our our presentation now",
    "start": "457789",
    "end": "464090"
  },
  {
    "text": "we are going to learn some basics about the secret implementation details every",
    "start": "464090",
    "end": "471529"
  },
  {
    "text": "value in chico light has one of the five fundamental data types they are in",
    "start": "471529",
    "end": "477229"
  },
  {
    "text": "integers floating point number string probe and newer they are very simple and",
    "start": "477229",
    "end": "485029"
  },
  {
    "text": "there's also we should table McKenzie in circle I'd a vegetable is an object that",
    "start": "485029",
    "end": "492770"
  },
  {
    "text": "is registered with any open secure ID database connection",
    "start": "492770",
    "end": "499210"
  },
  {
    "text": "there are Quebec methods for the witch table they are invoked on the object",
    "start": "499210",
    "end": "504229"
  },
  {
    "text": "when you operate the own vegetable this",
    "start": "504229",
    "end": "510110"
  },
  {
    "text": "mechanism can be used for representing the in memory death structures or they",
    "start": "510110",
    "end": "515659"
  },
  {
    "text": "provide a view of the data that is not to collide format for example they provide the view of Jason or C erased",
    "start": "515659",
    "end": "523300"
  },
  {
    "text": "and they are they are more dynamic they",
    "start": "523300",
    "end": "529339"
  },
  {
    "text": "can be used for computing the content of the application on demand there are many",
    "start": "529339",
    "end": "537200"
  },
  {
    "text": "features in secure right the features are introduced extensions",
    "start": "537200",
    "end": "542829"
  },
  {
    "text": "most of them are just implemented as version table there are two interesting",
    "start": "542829",
    "end": "548930"
  },
  {
    "text": "buddha tables FCS 5 or 3 is for full text search indexing and art free module",
    "start": "548930",
    "end": "557870"
  },
  {
    "text": "archery is special index is designed for doing range Curie's we will discuss them",
    "start": "557870",
    "end": "565790"
  },
  {
    "text": "later now you might find the problem of select some extensions like FES 3 or our",
    "start": "565790",
    "end": "574520"
  },
  {
    "text": "three modules require complex data structure they have some internal data",
    "start": "574520",
    "end": "579529"
  },
  {
    "text": "is there are stored in the same database",
    "start": "579529",
    "end": "584589"
  },
  {
    "text": "as we know there are only five types of the fundamental data so the internal",
    "start": "584589",
    "end": "591890"
  },
  {
    "text": "data can only be stored as The Blob type now here's the questions how can we how",
    "start": "591890",
    "end": "599270"
  },
  {
    "text": "can we know the original type of the blob data and should we trust the short",
    "start": "599270",
    "end": "604430"
  },
  {
    "text": "probe data in the database actually we can find the answers by reading the",
    "start": "604430",
    "end": "611270"
  },
  {
    "text": "source code from reading the source code we learned that the developers of",
    "start": "611270",
    "end": "617959"
  },
  {
    "text": "circulat don't like checking the types in comments or the documents they just",
    "start": "617959",
    "end": "625190"
  },
  {
    "text": "assume a variable with special names is always associated with special types",
    "start": "625190",
    "end": "632330"
  },
  {
    "text": "they just trust the Colin name or the function argument name and everything",
    "start": "632330",
    "end": "638310"
  },
  {
    "text": "else from the database now we are going to review fds three related bug in",
    "start": "638310",
    "end": "647310"
  },
  {
    "text": "psycho light it's reported two years ago and but not so many people researching",
    "start": "647310",
    "end": "654510"
  },
  {
    "text": "on it it's a bug in FPS three actually I don't",
    "start": "654510",
    "end": "661710"
  },
  {
    "text": "think most people using secure I will use the extension they are modules not",
    "start": "661710",
    "end": "669000"
  },
  {
    "text": "that allow user to perform full-text searches on setup documents from my",
    "start": "669000",
    "end": "678210"
  },
  {
    "text": "understanding they just provide the algorithm framework and you have to use your your own tokenizer to process the",
    "start": "678210",
    "end": "686760"
  },
  {
    "text": "documents or you can just use the default organizer is called simple they also provide audit organizers FGS",
    "start": "686760",
    "end": "695310"
  },
  {
    "text": "provides an interface for the developers to implement their custom colonisers",
    "start": "695310",
    "end": "701940"
  },
  {
    "text": "which is written in c the FDS does not",
    "start": "701940",
    "end": "708090"
  },
  {
    "text": "provide a c function to allow user to register the colonisers instead you have",
    "start": "708090",
    "end": "716880"
  },
  {
    "text": "to encode your pointer to your own organizer in globe that is just a raw",
    "start": "716880",
    "end": "725190"
  },
  {
    "text": "data then you can pass the globe to the",
    "start": "725190",
    "end": "733080"
  },
  {
    "text": "engines through the secure statement you need to use a special scars function",
    "start": "733080",
    "end": "738840"
  },
  {
    "text": "that is fds straight organizer after street organizer except one or two",
    "start": "738840",
    "end": "745620"
  },
  {
    "text": "arguments the first one is the string of your tag natives name the second one is",
    "start": "745620",
    "end": "752310"
  },
  {
    "text": "a bloap which is used as a pointer to organize a module if there's only one",
    "start": "752310",
    "end": "759420"
  },
  {
    "text": "argument the curie returns the address of the registered",
    "start": "759420",
    "end": "765060"
  },
  {
    "text": "tokenizer which is in blob if there are two arguments the Curie registers a new",
    "start": "765060",
    "end": "773550"
  },
  {
    "text": "kite organizer with given parameters actually there's no guarantee for the",
    "start": "773550",
    "end": "779820"
  },
  {
    "text": "type of the blob in the circle statement so it could be very dangerous if you",
    "start": "779820",
    "end": "785520"
  },
  {
    "text": "just pass and dereference a pointer in circle Curie's here's the POC of the out",
    "start": "785520",
    "end": "793920"
  },
  {
    "text": "bug it's very simple and elegant the first security leaks a pointer to",
    "start": "793920",
    "end": "801320"
  },
  {
    "text": "internal structure it's the tokenizer simple the second",
    "start": "801320",
    "end": "808230"
  },
  {
    "text": "curate registers a newt organizer with some render address neutral neither is",
    "start": "808230",
    "end": "814410"
  },
  {
    "text": "my tokenizer later we can create a",
    "start": "814410",
    "end": "819930"
  },
  {
    "text": "Witcher table using a ps3 might organizer and they were used the email",
    "start": "819930",
    "end": "826350"
  },
  {
    "text": "address to look for some invalid callbacks that's memory corruption the",
    "start": "826350",
    "end": "831990"
  },
  {
    "text": "third curate shows that we have successfully registered mute organizer",
    "start": "831990",
    "end": "837240"
  },
  {
    "text": "and it's a stored in the database to",
    "start": "837240",
    "end": "844590"
  },
  {
    "text": "summary the back its back it's a very powerful bug and first it gives us",
    "start": "844590",
    "end": "851220"
  },
  {
    "text": "ability to leaks the address information it returns the buting tokenizer and it",
    "start": "851220",
    "end": "862170"
  },
  {
    "text": "leaks the base address of the sicklied module it also and do you reference any",
    "start": "862170",
    "end": "869100"
  },
  {
    "text": "untrusted pointer it's a very powerful memory corruption the misuse of FPS rate",
    "start": "869100",
    "end": "875820"
  },
  {
    "text": "organizer can help us to bypass SAR and the reference untrusted ponder that's",
    "start": "875820",
    "end": "882780"
  },
  {
    "text": "enough for most exploitation as I said no one will hear a Spectre has better",
    "start": "882780",
    "end": "890160"
  },
  {
    "text": "quality than any other previous secret box and it can be exploited through browsers",
    "start": "890160",
    "end": "897260"
  },
  {
    "text": "before putting the bug two brothers we have to know how to use it in the",
    "start": "898889",
    "end": "905740"
  },
  {
    "text": "browsers basically there's a API web",
    "start": "905740",
    "end": "912040"
  },
  {
    "text": "secure database it's a web page API for storing the data in database that can be",
    "start": "912040",
    "end": "920399"
  },
  {
    "text": "pureed through the secret language actually the specification has been",
    "start": "920399",
    "end": "929769"
  },
  {
    "text": "stopped maintaining since seven years ago but many modern browsers like Google",
    "start": "929769",
    "end": "937720"
  },
  {
    "text": "Chrome Safari Opera have an implementation based on secure light as",
    "start": "937720",
    "end": "942790"
  },
  {
    "text": "a back-end of web cycle tell base here's",
    "start": "942790",
    "end": "947860"
  },
  {
    "text": "an example of using secure in the browser so you are just writing circle",
    "start": "947860",
    "end": "954899"
  },
  {
    "text": "in JavaScript from the the colored text",
    "start": "954899",
    "end": "961779"
  },
  {
    "text": "you can learn how to use the web circle basically you open a database with your",
    "start": "961779",
    "end": "969309"
  },
  {
    "text": "name and version and memory limit and you start a transaction and doing a put",
    "start": "969309",
    "end": "976269"
  },
  {
    "text": "a callback in the transaction and execute your secure statements then you",
    "start": "976269",
    "end": "981819"
  },
  {
    "text": "also have another callback handles the result of the secure light a secure cool",
    "start": "981819",
    "end": "988089"
  },
  {
    "text": "wrist but the obstacle statements can be",
    "start": "988089",
    "end": "994480"
  },
  {
    "text": "exit in the browser for example this is a code from the WebKit web kid has a",
    "start": "994480",
    "end": "1000240"
  },
  {
    "text": "secure database authorized to check if you are you are allowed to perform",
    "start": "1000240",
    "end": "1005730"
  },
  {
    "text": "certain circle statements for example if",
    "start": "1005730",
    "end": "1013829"
  },
  {
    "text": "you want to create a virtual table they will check the module name of your",
    "start": "1013829",
    "end": "1018860"
  },
  {
    "text": "statement owning FTS s3 is allowed which a table in WebKit and there are more",
    "start": "1018860",
    "end": "1028438"
  },
  {
    "text": "restrictions for functions they are so widely supporter of the functions every time",
    "start": "1028439",
    "end": "1035040"
  },
  {
    "text": "you invoke a function they will check if you are if it's a whitelist function for",
    "start": "1035040",
    "end": "1041310"
  },
  {
    "text": "example FPS rate organizer the target function is not on the white list but we",
    "start": "1041310",
    "end": "1049110"
  },
  {
    "text": "have another bug to bypass the restriction actually this CV is reported",
    "start": "1049110",
    "end": "1058590"
  },
  {
    "text": "with the previous one to Xillia at the same time the idea is very simple for",
    "start": "1058590",
    "end": "1069810"
  },
  {
    "text": "the world well circulate it does not check the default value of an initialized oh : we could create a table",
    "start": "1069810",
    "end": "1078240"
  },
  {
    "text": "with expressions like f guess recognize a simple they caused the privilege of",
    "start": "1078240",
    "end": "1085740"
  },
  {
    "text": "the functions the expression is evaluated when we insert a new record",
    "start": "1085740",
    "end": "1090810"
  },
  {
    "text": "into the table then we can read the result back from the database so in this",
    "start": "1090810",
    "end": "1100470"
  },
  {
    "text": "example the read read texts are where we",
    "start": "1100470",
    "end": "1105810"
  },
  {
    "text": "could insert the privileged call to the dangerous functions from this code we",
    "start": "1105810",
    "end": "1114750"
  },
  {
    "text": "can lick the base address of circulate module in browsers now exporting the bug",
    "start": "1114750",
    "end": "1124620"
  },
  {
    "text": "in the browser is kind of trivial ASR is or it's already bypassed you need just",
    "start": "1124620",
    "end": "1131010"
  },
  {
    "text": "you just need to spray a lot memory and dereference and jump to your option",
    "start": "1131010",
    "end": "1137270"
  },
  {
    "text": "actually we use the bug in our private ps4 jailbreak because they are using",
    "start": "1137270",
    "end": "1144060"
  },
  {
    "text": "WebKit and we exploit it blindly",
    "start": "1144060",
    "end": "1150140"
  },
  {
    "text": "now we are going to discuss exploring the bug in PHP",
    "start": "1150330",
    "end": "1155420"
  },
  {
    "text": "for many case if you have a website on web shell on some website you want to",
    "start": "1156240",
    "end": "1163490"
  },
  {
    "text": "get you but you may find the admin set",
    "start": "1163490",
    "end": "1169950"
  },
  {
    "text": "the disable functions to restrict your ability for future pentesting this",
    "start": "1169950",
    "end": "1177270"
  },
  {
    "text": "decimal functions are restrictions in PHP if you have the native code",
    "start": "1177270",
    "end": "1183300"
  },
  {
    "text": "execution the then you are not in a real",
    "start": "1183300",
    "end": "1188670"
  },
  {
    "text": "sandbox you can get a share by exporting the back in circulate there are more",
    "start": "1188670",
    "end": "1195540"
  },
  {
    "text": "details exploding in the back because Lee Phe and live circulatory is not the",
    "start": "1195540",
    "end": "1201690"
  },
  {
    "text": "same library you might need to reconstruct same the same environment",
    "start": "1201690",
    "end": "1208890"
  },
  {
    "text": "from with the remote server you can use the leaked information from PHP info and",
    "start": "1208890",
    "end": "1215400"
  },
  {
    "text": "build same same environment and test your exploit there are more details",
    "start": "1215400",
    "end": "1225180"
  },
  {
    "text": "about exploiting PHP basically you will trigger some callbacks in the faked",
    "start": "1225180",
    "end": "1231080"
  },
  {
    "text": "structure we found as a callback X open that takes one argument from the sucrose",
    "start": "1231080",
    "end": "1240300"
  },
  {
    "text": "statements then you can find a gadget that points to P open or a system that",
    "start": "1240300",
    "end": "1247830"
  },
  {
    "text": "can directly jump a return a share for you or there are many other tricks you",
    "start": "1247830",
    "end": "1253350"
  },
  {
    "text": "can see we know cigarette is processing",
    "start": "1253350",
    "end": "1258630"
  },
  {
    "text": "a database file if you open the pass with : memory : then all operations are done in the same",
    "start": "1258630",
    "end": "1266130"
  },
  {
    "text": "memory you can use that to spray your structure now we are talking about the",
    "start": "1266130",
    "end": "1277710"
  },
  {
    "text": "reactions of the other vendors actually Android has a custom branch of sicklied",
    "start": "1277710",
    "end": "1286500"
  },
  {
    "text": "and the Android team has noticed the of FDS recognizer and they disable it",
    "start": "1286500",
    "end": "1293320"
  },
  {
    "text": "three years ago it's happening it's happened before the report of the",
    "start": "1293320",
    "end": "1298870"
  },
  {
    "text": "previous bug and the the developers",
    "start": "1298870",
    "end": "1304000"
  },
  {
    "text": "obstacle I'd also noticed the risk of the circular the tokenizer you have to",
    "start": "1304000",
    "end": "1311259"
  },
  {
    "text": "compile cigarette with a special option before using it this Web kid Ian also",
    "start": "1311259",
    "end": "1320590"
  },
  {
    "text": "has its own patch fallback they have a black tee a blacklister of the dangerous",
    "start": "1320590",
    "end": "1328750"
  },
  {
    "text": "functions the blacklist prevents hackers from calling the pad functions even if",
    "start": "1328750",
    "end": "1335470"
  },
  {
    "text": "they have bypass of the whitelist the patch will be us more interesting",
    "start": "1335470",
    "end": "1341620"
  },
  {
    "text": "functions there are functions our tree node and the archery depth that is even",
    "start": "1341620",
    "end": "1349870"
  },
  {
    "text": "uncommon than the FDS recognizer it tells us where to find interesting",
    "start": "1349870",
    "end": "1355299"
  },
  {
    "text": "functions in secret source so this is the source of the our tree node function",
    "start": "1355299",
    "end": "1362399"
  },
  {
    "text": "it takes two arguments the first date describes the dimension of the our tree",
    "start": "1362399",
    "end": "1369370"
  },
  {
    "text": "node the second argument is just the our tree node value there's no check in the",
    "start": "1369370",
    "end": "1377230"
  },
  {
    "text": "function and it can be used for out-of-bounds access and it's not as dangerous as the FPS recognizer",
    "start": "1377230",
    "end": "1385769"
  },
  {
    "text": "but now we know we should find more bugs in archery module so here's the freezer day for you",
    "start": "1385769",
    "end": "1395970"
  },
  {
    "text": "in the function deserialized geometry a bloap in a special structure",
    "start": "1395970",
    "end": "1405610"
  },
  {
    "text": "is used as operand of the match expression the developers knows that the",
    "start": "1405610",
    "end": "1411789"
  },
  {
    "text": "OP if you operate on invalid probes could cause a segfault",
    "start": "1411789",
    "end": "1418119"
  },
  {
    "text": "and then he wrote the idea in the code to solve the problem he used a mask",
    "start": "1418119",
    "end": "1424510"
  },
  {
    "text": "value in the beginning of the block if all the sanity checks passed a function",
    "start": "1424510",
    "end": "1430720"
  },
  {
    "text": "of the point function pointer will be locked from the block that is the P",
    "start": "1430720",
    "end": "1436720"
  },
  {
    "text": "bloap the the text is in yellow it's pre people CB x geometry you can have piece",
    "start": "1436720",
    "end": "1449230"
  },
  {
    "text": "of control in three lines first you create a widget table in our tree and these are some values into it then",
    "start": "1449230",
    "end": "1456750"
  },
  {
    "text": "perform must select statements and using the match expression the the line starts",
    "start": "1456750",
    "end": "1464200"
  },
  {
    "text": "with X is means it's a probe now a p45",
    "start": "1464200",
    "end": "1469300"
  },
  {
    "text": "one two eight nine is just a match number in source code and if you run",
    "start": "1469300",
    "end": "1476170"
  },
  {
    "text": "those three lines you will get directly PC control and RDI control did you take",
    "start": "1476170",
    "end": "1484390"
  },
  {
    "text": "the picture this page is not available in the public sites okay",
    "start": "1484390",
    "end": "1490960"
  },
  {
    "text": "you should remember the the artery which your table is not available in browser",
    "start": "1490960",
    "end": "1497700"
  },
  {
    "text": "the only one is allowed in browser it's ft s3 which table we prefer the",
    "start": "1497700",
    "end": "1503860"
  },
  {
    "text": "explosion box in browser so we start looking for bugs in FDS 3 if we check",
    "start": "1503860",
    "end": "1512740"
  },
  {
    "text": "the function whitelist we can find some functions that is rarely used but it's",
    "start": "1512740",
    "end": "1519010"
  },
  {
    "text": "still in in a whitelist for example the optimize is a function that is for",
    "start": "1519010",
    "end": "1527710"
  },
  {
    "text": "special FPS 3 operation I don't think any of you knowledge about how to use",
    "start": "1527710",
    "end": "1533980"
  },
  {
    "text": "the function in the code it extracts the",
    "start": "1533980",
    "end": "1539650"
  },
  {
    "text": "FD a--'s 3 cursor barbra from the first argument it costs the FG s3 function",
    "start": "1539650",
    "end": "1547840"
  },
  {
    "text": "Agha in its code in black",
    "start": "1547840",
    "end": "1552750"
  },
  {
    "text": "the code F ds3 function argh that's very simple job secret value type and returns",
    "start": "1553150",
    "end": "1562750"
  },
  {
    "text": "the type of the value it has to be a blob Siculus revalue bytes returns the",
    "start": "1562750",
    "end": "1568870"
  },
  {
    "text": "length of the value is not the size of a pointer if these checks are passed then",
    "start": "1568870",
    "end": "1578260"
  },
  {
    "text": "the blob will be parsed as ft s3 cursor",
    "start": "1578260",
    "end": "1583740"
  },
  {
    "text": "now let's have a quick review of which table mechanism the widget a work I have",
    "start": "1583740",
    "end": "1590440"
  },
  {
    "text": "a custom method X column to find the value of the nth column of Karen roe",
    "start": "1590440",
    "end": "1600330"
  },
  {
    "text": "insecure in ft s3 which a table it accepts the table name as a color name",
    "start": "1600330",
    "end": "1607680"
  },
  {
    "text": "some functions like optimize take the table name as the first argument",
    "start": "1607680",
    "end": "1613770"
  },
  {
    "text": "basically what you should do is just select optimize T from T where T is T or",
    "start": "1613770",
    "end": "1622630"
  },
  {
    "text": "F ps3 version table during the x-ray exclusion : T stores the current FPS",
    "start": "1622630",
    "end": "1630490"
  },
  {
    "text": "with cursor in execution of circulate",
    "start": "1630490",
    "end": "1635980"
  },
  {
    "text": "the secret statement is prepared and compiled into bytecode and then evaluate",
    "start": "1635980",
    "end": "1642300"
  },
  {
    "text": "bicycle and engine for this case the type information of the colon is already",
    "start": "1642300",
    "end": "1649060"
  },
  {
    "text": "lost and the interpreter can never know the required type of this column now",
    "start": "1649060",
    "end": "1655780"
  },
  {
    "text": "this is a nother POC trader which a",
    "start": "1655780",
    "end": "1661210"
  },
  {
    "text": "table in a and it has only one column F ds3 the owning column is P then if we",
    "start": "1661210",
    "end": "1671530"
  },
  {
    "text": "select hex a from a using the take the",
    "start": "1671530",
    "end": "1676870"
  },
  {
    "text": "table name as a column it leaks the address of a of a heap structure that is",
    "start": "1676870",
    "end": "1685060"
  },
  {
    "text": "the original FG s recourse if you optimize be from a then B is used",
    "start": "1685060",
    "end": "1692529"
  },
  {
    "text": "as the FT 3/4 which costs the type of",
    "start": "1692529",
    "end": "1699070"
  },
  {
    "text": "confusion and okay now we are thinking",
    "start": "1699070",
    "end": "1706090"
  },
  {
    "text": "about how to exploit in the back now now when we all teach us how to explore the",
    "start": "1706090",
    "end": "1713799"
  },
  {
    "text": "back",
    "start": "1713799",
    "end": "1715980"
  },
  {
    "text": "with the exciting bugs in hand it's time to think about how to exploit them let's",
    "start": "1722970",
    "end": "1730230"
  },
  {
    "text": "take optimize function as an example the source code of the function is on the",
    "start": "1730230",
    "end": "1735870"
  },
  {
    "text": "Left P cursor is a pointer of struct FTS",
    "start": "1735870",
    "end": "1742800"
  },
  {
    "text": "precursor the function f ds3 functioning Ark will resolve the first argument of",
    "start": "1742800",
    "end": "1748620"
  },
  {
    "text": "optimize and fill the result into P cursor with the type confusion bug in",
    "start": "1748620",
    "end": "1756660"
  },
  {
    "text": "FPS re functioning Ark we can specify absolute value for P cursor so that we",
    "start": "1756660",
    "end": "1763200"
  },
  {
    "text": "can dereference the struct FPS rate cursor in sum up 3 address like in the",
    "start": "1763200",
    "end": "1771600"
  },
  {
    "text": "pew see in this slide the P cursor will be T referenced at 4 1 4 1 4 1 4 2 4 2 4",
    "start": "1771600",
    "end": "1778980"
  },
  {
    "text": "2 so that is to say if we can control memory in some known address we can fake",
    "start": "1778980",
    "end": "1786810"
  },
  {
    "text": "a ft s3 cursor there from the code lines",
    "start": "1786810",
    "end": "1792990"
  },
  {
    "text": "color with blue P is derived from P cursor and points to struct FTS 3 table",
    "start": "1792990",
    "end": "1800420"
  },
  {
    "text": "so this F at T s3 table can also be constructed in controlled memory the",
    "start": "1800420",
    "end": "1809700"
  },
  {
    "text": "following function Siculus 3fg s3 optimized to handle the fake instance of",
    "start": "1809700",
    "end": "1815430"
  },
  {
    "text": "ft s3 table ft f3 table is a complex",
    "start": "1815430",
    "end": "1821610"
  },
  {
    "text": "tract with members of pointers and substructures so we started to do more",
    "start": "1821610",
    "end": "1828660"
  },
  {
    "text": "code review to see if we can achieve memory read/write primitive or pc",
    "start": "1828660",
    "end": "1834120"
  },
  {
    "text": "control through some code path",
    "start": "1834120",
    "end": "1838040"
  },
  {
    "text": "so here is the summary of our exploitation strategy in most of the",
    "start": "1843230",
    "end": "1848570"
  },
  {
    "text": "modern browsers and operating systems we can still use Papes rate to have memory",
    "start": "1848570",
    "end": "1854539"
  },
  {
    "text": "control in some hard-coded address for example by allocating a lot of array",
    "start": "1854539",
    "end": "1861200"
  },
  {
    "text": "buffer objects we can fake FPS re cursor FPS rate table and other related stuff",
    "start": "1861200",
    "end": "1867950"
  },
  {
    "text": "structures those vulnerable virtual",
    "start": "1867950",
    "end": "1874340"
  },
  {
    "text": "table helper functions like optimize offsets match info will handle our",
    "start": "1874340",
    "end": "1881600"
  },
  {
    "text": "construct taste drugs through some specific code paths we have memory",
    "start": "1881600",
    "end": "1887690"
  },
  {
    "text": "rewrite and PC control so in the following slides we will show some",
    "start": "1887690",
    "end": "1893110"
  },
  {
    "text": "exploitation paths that we used but it's also possible to find other code paths",
    "start": "1893110",
    "end": "1899389"
  },
  {
    "text": "to achieve the same results so on this diagram in a demonstrate one path for",
    "start": "1899389",
    "end": "1907220"
  },
  {
    "text": "actually rewrite primitive in the last function it is siculus for VDB mem share",
    "start": "1907220",
    "end": "1914870"
  },
  {
    "text": "screen this function is basically just doing string copy which control the",
    "start": "1914870",
    "end": "1919909"
  },
  {
    "text": "source and destination but using this function if we just do copy data from",
    "start": "1919909",
    "end": "1927740"
  },
  {
    "text": "some control location to any other address that is just doing memory write",
    "start": "1927740",
    "end": "1934120"
  },
  {
    "text": "on the other hand if we use this function to copy data from some any",
    "start": "1934120",
    "end": "1941059"
  },
  {
    "text": "other address to some controlled location that we can read back and it's",
    "start": "1941059",
    "end": "1946669"
  },
  {
    "text": "just doing memory read",
    "start": "1946669",
    "end": "1949898"
  },
  {
    "text": "so since is a long path in the previous diagram we're gonna to take you go",
    "start": "1952630",
    "end": "1958990"
  },
  {
    "text": "through it to show how we constructed odd structures on the right side there",
    "start": "1958990",
    "end": "1964750"
  },
  {
    "text": "is a diagram showing how we construct the structures and their members",
    "start": "1964750",
    "end": "1970230"
  },
  {
    "text": "currently we have constructed a FDS three cursor and added a ft3 table in it",
    "start": "1970230",
    "end": "1978630"
  },
  {
    "text": "the next step is to see what the highlighted function cyclized three FDS reoptimize does and how we continue to",
    "start": "1978630",
    "end": "1986890"
  },
  {
    "text": "build the FPS rate table in the diagram",
    "start": "1986890",
    "end": "1992490"
  },
  {
    "text": "inside sicklied 3 FPS 3 optimized it",
    "start": "1993240",
    "end": "1998440"
  },
  {
    "text": "will invoke sicklied exact if psycho light ok is returned then it will take",
    "start": "1998440",
    "end": "2006750"
  },
  {
    "text": "the if the end branch and execute a lot of code but our interested function is",
    "start": "2006750",
    "end": "2013920"
  },
  {
    "text": "the highlighted one cycle i 3 FPS three segments closed so there is nothing to",
    "start": "2013920",
    "end": "2020310"
  },
  {
    "text": "do with the if-then branch so it's so we",
    "start": "2020310",
    "end": "2025860"
  },
  {
    "text": "want to try something to make sick like exact not returns to collide okay by",
    "start": "2025860",
    "end": "2033840"
  },
  {
    "text": "looking at the code of siculus react we can see that if DB equals to zero the",
    "start": "2033840",
    "end": "2040770"
  },
  {
    "text": "function on the right side cyclize three safety check okay would return zero and",
    "start": "2040770",
    "end": "2046370"
  },
  {
    "text": "their circulatory exact will return sequel I miss you speak apt it's not",
    "start": "2046370",
    "end": "2052200"
  },
  {
    "text": "sick like okay so our goal is achieved so in the in this diagram we are showing",
    "start": "2052200",
    "end": "2058290"
  },
  {
    "text": "the construction procedure for structures we stat DB in mgs3 table to",
    "start": "2058290",
    "end": "2063629"
  },
  {
    "text": "zero in this step now let's move on to",
    "start": "2063630",
    "end": "2069300"
  },
  {
    "text": "the function supplies three FDA three segments close it's calling sick life",
    "start": "2069300",
    "end": "2075389"
  },
  {
    "text": "three blob close and passing PP segments PV stack meds point to a strap incra",
    "start": "2075390",
    "end": "2083250"
  },
  {
    "text": "blob so we also added this drug to F at ts3",
    "start": "2083250",
    "end": "2088800"
  },
  {
    "text": "table in the function circulatory blog close to most drugs are referenced look",
    "start": "2088800",
    "end": "2096120"
  },
  {
    "text": "at the first one the variable DB color is purple it's a struct of siculus",
    "start": "2096120",
    "end": "2105240"
  },
  {
    "text": "rhee-soo Claire is a type for describing database connections so we add a",
    "start": "2105240",
    "end": "2112500"
  },
  {
    "text": "synchronized read to inquiry blob and there's the function cyclist remote X",
    "start": "2112500",
    "end": "2118920"
  },
  {
    "text": "enter for synchronization by steady mode",
    "start": "2118920",
    "end": "2124470"
  },
  {
    "text": "X to zero we can survive all those no text related functions the second news",
    "start": "2124470",
    "end": "2132120"
  },
  {
    "text": "truck added here is pp statement color is green it's a struct of V DB e really",
    "start": "2132120",
    "end": "2141870"
  },
  {
    "text": "is a type for describing SQL virtual machine so we also add it here because",
    "start": "2141870",
    "end": "2152010"
  },
  {
    "text": "the sicklied finalized function will handle our constructed V DB e",
    "start": "2152010",
    "end": "2158840"
  },
  {
    "text": "the left side is the source of circulatory finalized the interesting",
    "start": "2165930",
    "end": "2171420"
  },
  {
    "text": "function here is synchronized through VDB finalized to reach the function we",
    "start": "2171420",
    "end": "2179610"
  },
  {
    "text": "have to survive the other function calls like VD be safety check profile callback",
    "start": "2179610",
    "end": "2187610"
  },
  {
    "text": "I'm omitting some details here because it's not very hard you can just set some",
    "start": "2187610",
    "end": "2194730"
  },
  {
    "text": "members of V DB and then you can survive all these functions so let's move on to",
    "start": "2194730",
    "end": "2201540"
  },
  {
    "text": "the function on the right side synchronize 3 V DB finalized by just by",
    "start": "2201540",
    "end": "2207030"
  },
  {
    "text": "setting P magic to really be magic hot now we can reach the interesting",
    "start": "2207030",
    "end": "2212730"
  },
  {
    "text": "functions equalize 3 really be reset so for the moment we have built five",
    "start": "2212730",
    "end": "2219750"
  },
  {
    "text": "structures and they are connected as the way showing in the picture the condition",
    "start": "2219750",
    "end": "2225600"
  },
  {
    "text": "highlighted with green is added in the last step let's move further in",
    "start": "2225600",
    "end": "2234870"
  },
  {
    "text": "circulatory VDB reset the very base member PC is examined for different",
    "start": "2234870",
    "end": "2240330"
  },
  {
    "text": "branches we set PC to zero so that we can take the first branch and go into",
    "start": "2240330",
    "end": "2247470"
  },
  {
    "text": "the functioning circulatory VDB transfer error so in the diagram we added the new",
    "start": "2247470",
    "end": "2254400"
  },
  {
    "text": "condition PC greater or equal to zero",
    "start": "2254400",
    "end": "2260569"
  },
  {
    "text": "now in this slide the functioning circulatory VDB transfer error will call",
    "start": "2261200",
    "end": "2266820"
  },
  {
    "text": "secure line three value of set string and then call synchronized through video mmm set string this function is the",
    "start": "2266820",
    "end": "2275420"
  },
  {
    "text": "aforementioned string copy so we are close to winning looking at the function",
    "start": "2275420",
    "end": "2282120"
  },
  {
    "text": "called synchronized three Veloz a string there are two important argument the red tbp error and the green PD error message",
    "start": "2282120",
    "end": "2293360"
  },
  {
    "text": "DB p error is a new struct so we create",
    "start": "2293750",
    "end": "2299190"
  },
  {
    "text": "created PD error message is simply a safe stealth stream pop say style stream",
    "start": "2299190",
    "end": "2305670"
  },
  {
    "text": "pointer according to the check in the if statement we should specify a nonzero",
    "start": "2305670",
    "end": "2312330"
  },
  {
    "text": "value here so in the last line of the code we can tell that both DBP error and",
    "start": "2312330",
    "end": "2318630"
  },
  {
    "text": "P the error message will be handled in the function cyclist really be master",
    "start": "2318630",
    "end": "2323850"
  },
  {
    "text": "string this function exposes all the secrets of upstream read/write primitive",
    "start": "2323850",
    "end": "2331130"
  },
  {
    "text": "the key function of doing string copy is mem copy let's pay attention to the mem",
    "start": "2331130",
    "end": "2341040"
  },
  {
    "text": "copy the source of mem copy is they which is highlighted with green they",
    "start": "2341040",
    "end": "2348600"
  },
  {
    "text": "come from the VD bees the error message the green the error message the is just",
    "start": "2348600",
    "end": "2361140"
  },
  {
    "text": "a safe style stream pointer so we could specify any address to be the source of",
    "start": "2361140",
    "end": "2366840"
  },
  {
    "text": "mem copy for mem copy destination is P",
    "start": "2366840",
    "end": "2374970"
  },
  {
    "text": "mm day PM m is a struct of man which comes from DB s-- member piero we also",
    "start": "2374970",
    "end": "2383940"
  },
  {
    "text": "mentioned this in the previous slide the red one the struct man also can be",
    "start": "2383940",
    "end": "2392810"
  },
  {
    "text": "constructed so that we could control destination pointer P mem day but pay",
    "start": "2392810",
    "end": "2401820"
  },
  {
    "text": "attention to the function circulatory VDB mem clear and resize this function",
    "start": "2401820",
    "end": "2408440"
  },
  {
    "text": "will assign P mem date to the value of P",
    "start": "2408440",
    "end": "2414780"
  },
  {
    "text": "mm the Malik so in the final man cup",
    "start": "2414780",
    "end": "2420360"
  },
  {
    "text": "copies destination is controlled by P mm dialog in orange",
    "start": "2420360",
    "end": "2429260"
  },
  {
    "text": "the copy lens is analog analog equals 2n",
    "start": "2429819",
    "end": "2435079"
  },
  {
    "text": "bite and M bite equals to the length of day which is the soft string so that's",
    "start": "2435079",
    "end": "2443029"
  },
  {
    "text": "why we say siculus reveal EB MEMS gesturing is basically doing string copy",
    "start": "2443029",
    "end": "2450818"
  },
  {
    "text": "to conclude by constructing the six structures with proper members we could",
    "start": "2450849",
    "end": "2456829"
  },
  {
    "text": "achieve up three string copy primitive which is equivalent to read/write",
    "start": "2456829",
    "end": "2462289"
  },
  {
    "text": "primitive the source of string copy could be specified in the malloc and the",
    "start": "2462289",
    "end": "2470119"
  },
  {
    "text": "destination can be specified in the error message so arriving at this point",
    "start": "2470119",
    "end": "2477699"
  },
  {
    "text": "we with up three rewrites we almost can say we are done because",
    "start": "2477699",
    "end": "2483890"
  },
  {
    "text": "it's being well studied to play with JavaScript objects with read/write",
    "start": "2483890",
    "end": "2488930"
  },
  {
    "text": "primitive but if we want to remove platform dependency as much as possible",
    "start": "2488930",
    "end": "2497199"
  },
  {
    "text": "we better find some way to execute code we seek light because the",
    "start": "2497199",
    "end": "2504849"
  },
  {
    "text": "implementations of JavaScript in different browsers are different luckily",
    "start": "2504849",
    "end": "2512599"
  },
  {
    "text": "it's not very hard if you dig into structures in the source code of Saku",
    "start": "2512599",
    "end": "2517609"
  },
  {
    "text": "light you could find many callbacks the remaining code paths from vulnerable function that ends with callbacks",
    "start": "2517609",
    "end": "2524989"
  },
  {
    "text": "invoking we used this pass in the",
    "start": "2524989",
    "end": "2530239"
  },
  {
    "text": "diagram to have PC control the last function is invoked profile callback",
    "start": "2530239",
    "end": "2535569"
  },
  {
    "text": "this function will invoke many callbacks like X profile X trace X current time X",
    "start": "2535569",
    "end": "2541279"
  },
  {
    "text": "current time in 64 this car pass can all be controlled in the structures that we",
    "start": "2541279",
    "end": "2547789"
  },
  {
    "text": "built in sprite memory so in this invoke",
    "start": "2547789",
    "end": "2554900"
  },
  {
    "text": "profile callback function it will first call siculus Rio s current time in 64",
    "start": "2554900",
    "end": "2561980"
  },
  {
    "text": "this function will invoke X current time callbacks and then X profile and M X",
    "start": "2561980",
    "end": "2570350"
  },
  {
    "text": "trace will be invoked we prefer to use",
    "start": "2570350",
    "end": "2576980"
  },
  {
    "text": "the callback of X profile here because we can also control two arguments here",
    "start": "2576980",
    "end": "2584480"
  },
  {
    "text": "by controlling DB p profile art and the",
    "start": "2584480",
    "end": "2589820"
  },
  {
    "text": "sequel but to reach X profile we should",
    "start": "2589820",
    "end": "2596359"
  },
  {
    "text": "survive the functions equalizer EOS current time in 64 but this is easy just",
    "start": "2596359",
    "end": "2603260"
  },
  {
    "text": "kept this just can be done by simply notify the X current time callbacks in",
    "start": "2603260",
    "end": "2609640"
  },
  {
    "text": "DB p VF s structure so this diagram is showing how we create the structures to",
    "start": "2609640",
    "end": "2616270"
  },
  {
    "text": "achieve up three function call PC is controlling X profile and the two",
    "start": "2616270",
    "end": "2623600"
  },
  {
    "text": "arguments are controlled in P profile arc and de Cicco so it's time for us to",
    "start": "2623600",
    "end": "2633020"
  },
  {
    "text": "defeat a SLR SRS everywhere in modern targets let's reveal the information",
    "start": "2633020",
    "end": "2641800"
  },
  {
    "text": "disclosure but we could use it here because by this bug we can leak the",
    "start": "2641800",
    "end": "2649910"
  },
  {
    "text": "address of some FPS rate cursor struct by digging into the details of the",
    "start": "2649910",
    "end": "2658250"
  },
  {
    "text": "struct we find that the first member is pointing to a global variable in CQ",
    "start": "2658250",
    "end": "2663800"
  },
  {
    "text": "light is called FPS ray module so by Reed primitive we could read the address",
    "start": "2663800",
    "end": "2669830"
  },
  {
    "text": "of apt III module and leaked address of Sakhalin library in some targets you",
    "start": "2669830",
    "end": "2675020"
  },
  {
    "text": "collide is statically linked together with other libraries so that we could use more gadgets and functions as with",
    "start": "2675020",
    "end": "2684650"
  },
  {
    "text": "Shou code execution we could use function called primitive to invoke method like and protect to have",
    "start": "2684650",
    "end": "2691420"
  },
  {
    "text": "executable memory you can also use long jump to turn function call",
    "start": "2691420",
    "end": "2698779"
  },
  {
    "text": "primitive into rub because we can change the RSP and long jump gadget so in in",
    "start": "2698779",
    "end": "2710809"
  },
  {
    "text": "this slide these are some numbers that we could hit by using the stone of Seco",
    "start": "2710809",
    "end": "2718249"
  },
  {
    "text": "light bugs",
    "start": "2718249",
    "end": "2722289"
  },
  {
    "text": "so it brings some demo here",
    "start": "2729220",
    "end": "2734010"
  },
  {
    "text": "he's Imperia me",
    "start": "2775120",
    "end": "2778230"
  },
  {
    "text": "Jeremy",
    "start": "2781740",
    "end": "2784430"
  },
  {
    "text": "so this is demonstration of bypassing PHP security restrictions by using the",
    "start": "2789390",
    "end": "2796830"
  },
  {
    "text": "bug of tokenizer with remote PHP code execution we can use the vulnerability",
    "start": "2796830",
    "end": "2805800"
  },
  {
    "text": "to execute arbitrary code and get a reverse shell",
    "start": "2805800",
    "end": "2811910"
  },
  {
    "text": "the second demo is a pond to own style exploitation targeting suffrage by using",
    "start": "2820320",
    "end": "2829560"
  },
  {
    "text": "the new bugs of sick light can get remote route by visiting some malicious",
    "start": "2829560",
    "end": "2835410"
  },
  {
    "text": "website",
    "start": "2835410",
    "end": "2837950"
  },
  {
    "text": "and now we have root so due to some",
    "start": "2849010",
    "end": "2854609"
  },
  {
    "text": "timing problem we will escape the two demos targeting WeChat and Alipay",
    "start": "2854609",
    "end": "2861340"
  },
  {
    "text": "because they are just similar with the browser attack so it's time for QA",
    "start": "2861340",
    "end": "2869970"
  },
  {
    "text": "sorry I cannot hear click really are you",
    "start": "2879910",
    "end": "2885000"
  },
  {
    "text": "because we use another sandbox bypass to get a root yes they say exploitation is combined with",
    "start": "2886710",
    "end": "2893079"
  },
  {
    "text": "another bug",
    "start": "2893079",
    "end": "2896250"
  },
  {
    "text": "so no questions thank you guys [Applause]",
    "start": "2907650",
    "end": "2912990"
  },
  {
    "text": "[Music]",
    "start": "2912990",
    "end": "2915940"
  }
]