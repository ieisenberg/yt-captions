[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "[Music] foreign",
    "start": "1730",
    "end": "6720"
  },
  {
    "text": "thank you okay so welcome to my session as already mentioned my name is Mo Rubin",
    "start": "10019",
    "end": "15960"
  },
  {
    "text": "and I am a senior security associate Microsoft I'm mostly interested in finding new attack vectors in the",
    "start": "15960",
    "end": "21720"
  },
  {
    "text": "on-prem cloud and which are mostly related to networking so we",
    "start": "21720",
    "end": "27240"
  },
  {
    "text": "and in this session we are going to show a new way to perform lateral movement which involves a bit of on-prem a bit of",
    "start": "27240",
    "end": "34920"
  },
  {
    "text": "cloud and mostly networking so the agenda for today we will first go over the introduction to the key terms we'll",
    "start": "34920",
    "end": "42780"
  },
  {
    "text": "go over some things that you might already know just to make sure we are all on the same page later on this",
    "start": "42780",
    "end": "49140"
  },
  {
    "text": "information will help us understand a bit more about the main topic for today which is negox which is the new",
    "start": "49140",
    "end": "55680"
  },
  {
    "text": "Authentication Protocol for Azure ID joint devices later on we will see a",
    "start": "55680",
    "end": "61320"
  },
  {
    "text": "couple of attacks that allow us to perform lateral movement to another devices then we will demo one of the",
    "start": "61320",
    "end": "68040"
  },
  {
    "text": "attacks and see how we can hand follow them and finish with takeaways from this",
    "start": "68040",
    "end": "73560"
  },
  {
    "text": "session so let's start with the technical background our first topic will be Azure ID joint",
    "start": "73560",
    "end": "79799"
  },
  {
    "start": "74000",
    "end": "229000"
  },
  {
    "text": "device as you may already know Azure Edition device is a device which is connected directly to Azure ID and it's",
    "start": "79799",
    "end": "86460"
  },
  {
    "text": "managed by Azure ID in the case of azure ID join device only Azure ID accounts can log into this",
    "start": "86460",
    "end": "93600"
  },
  {
    "text": "device and there are no local users by default",
    "start": "93600",
    "end": "98820"
  },
  {
    "text": "you can obviously add them but by default they does not exist on the account on the computer so only Azure",
    "start": "98820",
    "end": "105060"
  },
  {
    "text": "the accounts can log in and the main two differences between the",
    "start": "105060",
    "end": "110880"
  },
  {
    "text": "on-prem Azure active directory joined and to Azure active directory join first",
    "start": "110880",
    "end": "117299"
  },
  {
    "text": "the how you query the organization and active directory you mostly use ldap to",
    "start": "117299",
    "end": "123600"
  },
  {
    "text": "query the domain controller to get information about the entities and groups and so on in the in the active",
    "start": "123600",
    "end": "130440"
  },
  {
    "text": "directory while in Azure active directory you'll mostly use graph API or rest API calls to query Azure for",
    "start": "130440",
    "end": "138480"
  },
  {
    "text": "information about your organization the second main difference is the authentication protocols while in active",
    "start": "138480",
    "end": "144780"
  },
  {
    "text": "director with authentication Protocols are known ntlm and Kerberos in Android",
    "start": "144780",
    "end": "149840"
  },
  {
    "text": "Authentication Protocol saml or what open ID and networks which will be your",
    "start": "149840",
    "end": "155459"
  },
  {
    "text": "main topic for today a side note I am going to I'm not going",
    "start": "155459",
    "end": "160500"
  },
  {
    "text": "to talk about hybrid devices are connected to both Azure ID and to the",
    "start": "160500",
    "end": "166500"
  },
  {
    "text": "on-prem everything I'm going to show is applicable to iBall devices too but since it's the same and you already know",
    "start": "166500",
    "end": "174239"
  },
  {
    "text": "how to perform lateral movement in a domain environment then I will not talk directly about hybrid but only to Azure",
    "start": "174239",
    "end": "180480"
  },
  {
    "text": "ID join devices so when talking about Azure ID join device it's important to understand the",
    "start": "180480",
    "end": "186720"
  },
  {
    "text": "authenticated connections we have two main scenarios the first scenario is when you want to",
    "start": "186720",
    "end": "192420"
  },
  {
    "text": "authenticate to SAS application in this case we will use something called a PLT so for example when we want to",
    "start": "192420",
    "end": "198540"
  },
  {
    "text": "authenticate to SharePoint online we will use the PLT to exchange for an",
    "start": "198540",
    "end": "204239"
  },
  {
    "text": "access token and get access to the specific application and the second scenario is where we are sitting on an",
    "start": "204239",
    "end": "210659"
  },
  {
    "text": "Azure ID join device and we want to authenticate to another Azure ID join device in this case we will use",
    "start": "210659",
    "end": "216540"
  },
  {
    "text": "something new which called P2P certificate or peer-to-peer certificate this certificate is issued by using the",
    "start": "216540",
    "end": "224099"
  },
  {
    "text": "PLT and we will show a bit later how we can get this one",
    "start": "224099",
    "end": "229860"
  },
  {
    "text": "so first let's understand what the probability is reality as I mentioned is a primary refresh token and this is a",
    "start": "229860",
    "end": "237959"
  },
  {
    "text": "Json web token which contains claim on both the device and the user it was issued for it means that if a user is",
    "start": "237959",
    "end": "244620"
  },
  {
    "text": "connected to two devices then every device for this same session of the user",
    "start": "244620",
    "end": "250620"
  },
  {
    "text": "every device will have a different PLT and same four devices if two device two users are connected to the same device",
    "start": "250620",
    "end": "256859"
  },
  {
    "text": "same will be a here and we will have two different plts even though it's the same",
    "start": "256859",
    "end": "261900"
  },
  {
    "text": "device and this PRT can be compared to TGT the",
    "start": "261900",
    "end": "267000"
  },
  {
    "text": "cadient ticket in the on them well if you have the PLT and the session",
    "start": "267000",
    "end": "272040"
  },
  {
    "text": "key bound to the specific PRT it means that you are authenticated and this session key which is bound to the",
    "start": "272040",
    "end": "278699"
  },
  {
    "text": "Penalty proves that you have the authentication material and you don't need to authenticate again so",
    "start": "278699",
    "end": "284880"
  },
  {
    "text": "it's the same as digital way that TGT is being used to exchange for ticket for",
    "start": "284880",
    "end": "290400"
  },
  {
    "text": "the results in TGs and the penalties can be exchanged for an access token to access the specific",
    "start": "290400",
    "end": "296580"
  },
  {
    "text": "application or in our case it will be used to get a P2P certificate which will",
    "start": "296580",
    "end": "302639"
  },
  {
    "text": "be used to access another Azure Edition device so",
    "start": "302639",
    "end": "307800"
  },
  {
    "text": "I already mentioned a couple of times so P2P actually this certificate is a special certificate which is issued by",
    "start": "307800",
    "end": "314639"
  },
  {
    "text": "Azure as you can see the the issuer is azure ID",
    "start": "314639",
    "end": "322100"
  },
  {
    "text": "it's Ms organization P2P access so it means that it's only Azure ID the one",
    "start": "322100",
    "end": "328440"
  },
  {
    "text": "who can issue the issue those certificates and it's issued for a specific user and the user is the one",
    "start": "328440",
    "end": "335699"
  },
  {
    "text": "who the PRT is related to so I cannot use PLT to get a certificate for another",
    "start": "335699",
    "end": "342600"
  },
  {
    "text": "user but only to the user which is bound to the specific parity and this parity",
    "start": "342600",
    "end": "348000"
  },
  {
    "text": "is valid for one hour only and is used to access any Azure ID device",
    "start": "348000",
    "end": "353960"
  },
  {
    "text": "in case only if you have permission obviously and you once your device is joined to",
    "start": "353960",
    "end": "360720"
  },
  {
    "text": "Azure ID by default it will be configured to request a new certificate every time it's needed so you don't",
    "start": "360720",
    "end": "366900"
  },
  {
    "text": "really have to do anything every time you want to access another Azure ID device a new P2P certificate will be",
    "start": "366900",
    "end": "373380"
  },
  {
    "text": "issued for you so now that we have a good understanding of the authentication materials let's dive into the authentication protocols",
    "start": "373380",
    "end": "380340"
  },
  {
    "start": "377000",
    "end": "549000"
  },
  {
    "text": "that will help us and be used later in Network's protocol so our first protocol",
    "start": "380340",
    "end": "385560"
  },
  {
    "text": "is cable speaking so a couple of words about cables as you may already know cables is an Authentication Protocol in",
    "start": "385560",
    "end": "392160"
  },
  {
    "text": "the on-prem which uses tickets for authentication and it have six steps the",
    "start": "392160",
    "end": "397199"
  },
  {
    "text": "first step is the as request in this step the client you send something called pre-authentication data which is",
    "start": "397199",
    "end": "404220"
  },
  {
    "text": "a timestamp lobe encrypted by the hash password of the user",
    "start": "404220",
    "end": "409319"
  },
  {
    "text": "this this data is later checked by the DC and by the KDC with the key",
    "start": "409319",
    "end": "415080"
  },
  {
    "text": "distribution center which verifies the timestamp log it decrypts it using the",
    "start": "415080",
    "end": "420600"
  },
  {
    "text": "hash password which stores and in its database and if it's accurate then the",
    "start": "420600",
    "end": "425759"
  },
  {
    "text": "KDC will provide a TGT the academic ticket and the session key",
    "start": "425759",
    "end": "431460"
  },
  {
    "text": "and later on those TGT and session key will be used in a tgsa quest together",
    "start": "431460",
    "end": "436860"
  },
  {
    "text": "with the resource you want to access to and the KDC will validate them again and will issue a TGs which is a ticket",
    "start": "436860",
    "end": "443220"
  },
  {
    "text": "granting server service with a new session key which allows you to now access to your specific resource that",
    "start": "443220",
    "end": "449819"
  },
  {
    "text": "you wanted to access using a cables AP request and later on the client the resource you",
    "start": "449819",
    "end": "456360"
  },
  {
    "text": "access to will responds with the cables AP response with an arrow or successful",
    "start": "456360",
    "end": "461460"
  },
  {
    "text": "Authentication and in cable speaker unit the main difference is in the two first messages",
    "start": "461460",
    "end": "468000"
  },
  {
    "text": "in the cable sales request and there is response the this this extension allows",
    "start": "468000",
    "end": "474419"
  },
  {
    "text": "you to use certificates to authenticate to another to your domain instead of",
    "start": "474419",
    "end": "479940"
  },
  {
    "text": "using the old hashed password so in this case the pre-authentication data in the S request will be changed in a way that",
    "start": "479940",
    "end": "486660"
  },
  {
    "text": "instead of using your hash password to to encrypt the the timestamp instead you",
    "start": "486660",
    "end": "493259"
  },
  {
    "text": "will use your certificate your private key to sign a specific blob which called",
    "start": "493259",
    "end": "498900"
  },
  {
    "text": "the PK authenticator and you will send it to the DC the DC will validate the certificate Authority and",
    "start": "498900",
    "end": "506759"
  },
  {
    "text": "everything about the certificate including that it's still valid and we'll try to verify the signed data if",
    "start": "506759",
    "end": "514560"
  },
  {
    "text": "it's a if it's verified using the public key then the KDC will now return a",
    "start": "514560",
    "end": "519719"
  },
  {
    "text": "ticket and the news in a session key and now the session key different from the normal cables can be all a session key",
    "start": "519719",
    "end": "527220"
  },
  {
    "text": "generated by the KDC and encrypted using the by the public key or it could be",
    "start": "527220",
    "end": "533399"
  },
  {
    "text": "derived by the defailment parameters which will send by the a in the AC Quest and I'll send back in the as response to",
    "start": "533399",
    "end": "541440"
  },
  {
    "text": "so we have two options for the session key and this is the main difference between cables and cable speaking and",
    "start": "541440",
    "end": "549000"
  },
  {
    "start": "549000",
    "end": "627000"
  },
  {
    "text": "the next Authentication Protocol is PKU to you which is public key user to user",
    "start": "549000",
    "end": "554700"
  },
  {
    "text": "and this protocol allows us to use cables messages for a authentication without the KDC so",
    "start": "554700",
    "end": "562140"
  },
  {
    "text": "it means that we can now access a performer peer-to-peer authentication without the KDC so instead of going to",
    "start": "562140",
    "end": "568860"
  },
  {
    "text": "the KDC and requesting tickets every time we want to authenticate how to access the specific results we will now",
    "start": "568860",
    "end": "575519"
  },
  {
    "text": "go directly to the resource itself and ask for a ticket from him",
    "start": "575519",
    "end": "581399"
  },
  {
    "text": "so it's put out the KDC from the equation and let you go walk directly",
    "start": "581399",
    "end": "586980"
  },
  {
    "text": "against your whistles and work with cables tickets without doing any change and in this case it will instead of",
    "start": "586980",
    "end": "593760"
  },
  {
    "text": "using the hash password you will be able to use cables because APK in it which allows you to use the certificate",
    "start": "593760",
    "end": "601680"
  },
  {
    "text": "and our last Authentication Protocol it's already familiar GSS API or sspi",
    "start": "601680",
    "end": "607440"
  },
  {
    "text": "which is a security support provider interface which allows you to add an authenticity layer for your protocol so",
    "start": "607440",
    "end": "614820"
  },
  {
    "text": "for example over LPC or SMB you will be able to add cables or ntlm authentication and it will allow you to",
    "start": "614820",
    "end": "621480"
  },
  {
    "text": "perform this authentication on top of your protocol so how it all mixed out together in Lego",
    "start": "621480",
    "end": "628620"
  },
  {
    "start": "627000",
    "end": "723000"
  },
  {
    "text": "X so networks as I mentioned is the Authentication Protocol on for",
    "start": "628620",
    "end": "634380"
  },
  {
    "text": "authenticating to Azure Edition devices and so and it and it works with the GSS API",
    "start": "634380",
    "end": "643320"
  },
  {
    "text": "and cables npku to you messages so how it works and it's that when you",
    "start": "643320",
    "end": "649500"
  },
  {
    "text": "want to authenticate over assembly for example you will use GSS API to provide",
    "start": "649500",
    "end": "654720"
  },
  {
    "text": "an interface for negox and over networks you will send PKU to your messages to",
    "start": "654720",
    "end": "660360"
  },
  {
    "text": "authenticate to the client so negroex is an Authentication Protocol as",
    "start": "660360",
    "end": "666660"
  },
  {
    "text": "I mentioned in which is enabled by default on every Azure ID join device from I think a very previous version of",
    "start": "666660",
    "end": "675660"
  },
  {
    "text": "Windows 10 and by default on every Windows 11 and once you're when you're once your",
    "start": "675660",
    "end": "682320"
  },
  {
    "text": "machine is onboarded to is joined to Azure ID then only two Protocols are provided for authentication and ntlm and",
    "start": "682320",
    "end": "689760"
  },
  {
    "text": "networks as I mentioned before ntlm will not work since you by default will not",
    "start": "689760",
    "end": "695940"
  },
  {
    "text": "have local accounts so only negro X left to perform any authentication to another",
    "start": "695940",
    "end": "701640"
  },
  {
    "text": "Azure ID joint device and this protocol have three",
    "start": "701640",
    "end": "706860"
  },
  {
    "text": "three main stages the first stage is the initiating messages later on the next",
    "start": "706860",
    "end": "714240"
  },
  {
    "text": "stage is the authentication messages and the last step is the verification messages let's dive quickly over the",
    "start": "714240",
    "end": "720420"
  },
  {
    "text": "messages see how they work and how this protocol work so the first message is sent from the",
    "start": "720420",
    "end": "726600"
  },
  {
    "start": "723000",
    "end": "828000"
  },
  {
    "text": "client to the server and this message called initiator nego in case of negox",
    "start": "726600",
    "end": "732120"
  },
  {
    "text": "the terms have been changed a bit and client is now called the initiator or but I will call it as a client because",
    "start": "732120",
    "end": "739680"
  },
  {
    "text": "it's easier for us and the server is called accepto it's the same it just a",
    "start": "739680",
    "end": "744720"
  },
  {
    "text": "change in the world so the initial tone nego have only one purpose and it's to contain random this",
    "start": "744720",
    "end": "751980"
  },
  {
    "text": "random will identify this specific session and it will be used later for checksum in the verify in the",
    "start": "751980",
    "end": "758459"
  },
  {
    "text": "verification part which is the last part of the authentication in Lego X",
    "start": "758459",
    "end": "763500"
  },
  {
    "text": "the second message which is also sent from the client to the server is the initiator metadata which contains",
    "start": "763500",
    "end": "769800"
  },
  {
    "text": "metadata on the authentication materials that are going to be used so in this case you can see that in the extent we",
    "start": "769800",
    "end": "776399"
  },
  {
    "text": "have token signing public key it means that we are going to use a certificate and Ms organization P2P access this is",
    "start": "776399",
    "end": "783240"
  },
  {
    "text": "the certificate Authority which we are going to be used and this is azure dptp",
    "start": "783240",
    "end": "789000"
  },
  {
    "text": "certificate this is the certificate that is being used in language and then once the server receives those",
    "start": "789000",
    "end": "796200"
  },
  {
    "text": "two messages it will respond with the same two messages but now they will be called acceptonego and accept Omega data",
    "start": "796200",
    "end": "804120"
  },
  {
    "text": "and they will be the same messages they accept all negro will contain a different random from the initiative one",
    "start": "804120",
    "end": "810660"
  },
  {
    "text": "and the acceptable metadata will contain the same metadata information which is generated from jss Square metadata",
    "start": "810660",
    "end": "818880"
  },
  {
    "text": "and this is the initiating part of Network's protocol it doesn't really do anything you can just send anything you",
    "start": "818880",
    "end": "826200"
  },
  {
    "text": "want as long as it's value and the second part is the authentication part this file the the",
    "start": "826200",
    "end": "832800"
  },
  {
    "start": "828000",
    "end": "991000"
  },
  {
    "text": "first message which is being sent from the client to the server is the API request it's not a cable or say it's a",
    "start": "832800",
    "end": "838560"
  },
  {
    "text": "request but the nego X AP request it's a new message type",
    "start": "838560",
    "end": "843839"
  },
  {
    "text": "and this message type contains the exchange data which contains inside of",
    "start": "843839",
    "end": "849120"
  },
  {
    "text": "it a pkutu part and pkutu part in the First AP request in the in this first",
    "start": "849120",
    "end": "855480"
  },
  {
    "text": "message will contain cable was PK unit as a quest and this request as I mentioned before",
    "start": "855480",
    "end": "861420"
  },
  {
    "text": "will be cable speaker in it with the certificate of the client",
    "start": "861420",
    "end": "867660"
  },
  {
    "text": "of the Azure ID P2P certificate and in this case the session key will be",
    "start": "867660",
    "end": "873000"
  },
  {
    "text": "generated by the filament parameters so it's important to us to know later on",
    "start": "873000",
    "end": "878820"
  },
  {
    "text": "because we will use it in one vertex the fact that we cannot add the session key",
    "start": "878820",
    "end": "884399"
  },
  {
    "text": "and the next message is being sent back from the server to the client after the",
    "start": "884399",
    "end": "889560"
  },
  {
    "text": "AP request was sent and this is called The Challenge message this message again contains a pkutu part",
    "start": "889560",
    "end": "897420"
  },
  {
    "text": "but in this case the PKU to your part is PK init cable speaker unit is response",
    "start": "897420",
    "end": "903540"
  },
  {
    "text": "and in this case you can see that the server responds with ticket and this",
    "start": "903540",
    "end": "909300"
  },
  {
    "text": "ticket contains a realm which is which is well known PKU to you it's not the same as the domain but it's a default",
    "start": "909300",
    "end": "916079"
  },
  {
    "text": "one for every every server and every resource you will contact",
    "start": "916079",
    "end": "921120"
  },
  {
    "text": "and again as I mentioned it will contain the default the filament parameters which will be extracted by the client",
    "start": "921120",
    "end": "928199"
  },
  {
    "text": "and will be used later to generate the shared session key and once this message is being sent to",
    "start": "928199",
    "end": "934800"
  },
  {
    "text": "the client the client Forge another IP request with the ticket with the ticket",
    "start": "934800",
    "end": "940260"
  },
  {
    "text": "received from the server but in this case the AP request it's the same name but the PK YouTube product is different",
    "start": "940260",
    "end": "947339"
  },
  {
    "text": "it will now contain an AP request a normal cable CP request with the message",
    "start": "947339",
    "end": "952980"
  },
  {
    "text": "with the ticket and you will be performing the authentication in this part and then the server will respond",
    "start": "952980",
    "end": "960000"
  },
  {
    "text": "with another challenge message which is now the PQ to report of cables AP response again",
    "start": "960000",
    "end": "966839"
  },
  {
    "text": "and in this step if everything works then the authentication in the in this",
    "start": "966839",
    "end": "973139"
  },
  {
    "text": "part is successful or fail but even if it's successful it doesn't mean that the",
    "start": "973139",
    "end": "980100"
  },
  {
    "text": "successful authentication of negox is established but it only means that the",
    "start": "980100",
    "end": "986120"
  },
  {
    "text": "this part is established so we have another part and the part is called a",
    "start": "986120",
    "end": "991980"
  },
  {
    "start": "991000",
    "end": "1100000"
  },
  {
    "text": "verify it's the way this is the last part of the authentication in networks and this is the verify message",
    "start": "991980",
    "end": "998699"
  },
  {
    "text": "and the verify message contains check checksum over the previous set of messages in this case you can see that",
    "start": "998699",
    "end": "1005959"
  },
  {
    "text": "the sequence number of this message is 7 and since we started form 0 then it means that we are going to perform a",
    "start": "1005959",
    "end": "1012500"
  },
  {
    "text": "checksum here over the last seven messages the messages are the initiate Omega initiative",
    "start": "1012500",
    "end": "1018880"
  },
  {
    "text": "metadata AP request Challenge and another IP request there all will be",
    "start": "1018880",
    "end": "1023899"
  },
  {
    "text": "checksum and the checksum will be provided in the verify message and in",
    "start": "1023899",
    "end": "1029058"
  },
  {
    "text": "this step this is a verify message which is sent from the client to the server and the server will verify the checksum",
    "start": "1029059",
    "end": "1036558"
  },
  {
    "text": "and if it's if it's accurate then it will respond to another checksum and",
    "start": "1036559",
    "end": "1042260"
  },
  {
    "text": "with another verified message which contains a checksum but in this case the checksum will be different because it",
    "start": "1042260",
    "end": "1048199"
  },
  {
    "text": "will perform a checksum over a different set of messages so not only those seven",
    "start": "1048199",
    "end": "1055160"
  },
  {
    "text": "and the check something key is a bit special special you cannot understand what how these checks and key generated",
    "start": "1055160",
    "end": "1062720"
  },
  {
    "text": "by using the documentation and in this step you need to what I did",
    "start": "1062720",
    "end": "1068960"
  },
  {
    "text": "to find out what to check some key is to debug the Elsas while using networks and",
    "start": "1068960",
    "end": "1074000"
  },
  {
    "text": "performing an authentication and then I figure out that the checksum key is sent by the client or by the server depends",
    "start": "1074000",
    "end": "1081559"
  },
  {
    "text": "on who is sending the verify message and the checksum case gen is sent in the",
    "start": "1081559",
    "end": "1086720"
  },
  {
    "text": "cables AP request or Asus AP response and it's being used for the check the",
    "start": "1086720",
    "end": "1092720"
  },
  {
    "text": "checksum so if you cannot open the cables messages you cannot get the checksum key",
    "start": "1092720",
    "end": "1099320"
  },
  {
    "text": "so this was the negox protocol and now that we have a good understanding of networks protocol let's",
    "start": "1099320",
    "end": "1106220"
  },
  {
    "start": "1100000",
    "end": "1438000"
  },
  {
    "text": "see what we can do with it to perform some attacks that will allow you us to perform lateral movement to another",
    "start": "1106220",
    "end": "1112460"
  },
  {
    "text": "Azure ID join device so first take it's probably sound very similar because it is very similar it's",
    "start": "1112460",
    "end": "1119900"
  },
  {
    "text": "called negro X and it's similar to obviously ntlm relay and this attack relies on the fact that",
    "start": "1119900",
    "end": "1127220"
  },
  {
    "text": "again the server and the client does not verify each other so you can just say I'm the server or I'm the client if you",
    "start": "1127220",
    "end": "1135020"
  },
  {
    "text": "made a if you enabled and spoof or anything else and then since you can",
    "start": "1135020",
    "end": "1141679"
  },
  {
    "text": "perform any relay that you want there relay will be the same as in ntlm well",
    "start": "1141679",
    "end": "1147140"
  },
  {
    "text": "you will just relay the messages from one side to another but again it's not the same protocol as",
    "start": "1147140",
    "end": "1155539"
  },
  {
    "text": "ntlm so let's see how it works and what we can do differently or what we should do differently",
    "start": "1155539",
    "end": "1161480"
  },
  {
    "text": "so as I mentioned before the two and the first part is the initiating messages so those messages are just being sent I",
    "start": "1161480",
    "end": "1168919"
  },
  {
    "text": "will not go over them because they have no real meaning we don't really need them in this attack",
    "start": "1168919",
    "end": "1175760"
  },
  {
    "text": "so just relate them as is and continue and in this case we are starting the",
    "start": "1175760",
    "end": "1181400"
  },
  {
    "text": "authentication path and we have two two scenarios the first scenario is where we",
    "start": "1181400",
    "end": "1187220"
  },
  {
    "text": "receive the AP request from the client and we choose the way light as is if we",
    "start": "1187220",
    "end": "1193100"
  },
  {
    "text": "choose to relate as is as you can see in the cables request body there is a special field called the address which",
    "start": "1193100",
    "end": "1199940"
  },
  {
    "text": "contains the client name and by default this field will be",
    "start": "1199940",
    "end": "1205100"
  },
  {
    "text": "will contain the client name of the machine initiated the and generated this IP request",
    "start": "1205100",
    "end": "1211700"
  },
  {
    "text": "so if you will choose to realize this it's okay it will work we will just relay to the server and the server will",
    "start": "1211700",
    "end": "1218360"
  },
  {
    "text": "validate a question response with the challenge message the challenge message which will be",
    "start": "1218360",
    "end": "1225860"
  },
  {
    "text": "again relate to the client because we cannot open it because we don't have the session key since as I mentioned it",
    "start": "1225860",
    "end": "1232039"
  },
  {
    "text": "generated by develman and we cannot generate or find the key so we'll just",
    "start": "1232039",
    "end": "1237679"
  },
  {
    "text": "relate to the client and in the second scenario we want to be a bit more sophisticated and we want to",
    "start": "1237679",
    "end": "1244340"
  },
  {
    "text": "change the client name to avoid some detections assuming that someone is detecting it",
    "start": "1244340",
    "end": "1249679"
  },
  {
    "text": "and what we'll do is to change the client name because if someone sees the original client name and the attacker IP",
    "start": "1249679",
    "end": "1256280"
  },
  {
    "text": "it can easily understand that this is not a matching and we will be seen",
    "start": "1256280",
    "end": "1264140"
  },
  {
    "text": "so in this case we can modify the AP request and relate as is add to the server and the same process will happen",
    "start": "1264140",
    "end": "1270559"
  },
  {
    "text": "we will get the challenge and relay to the client and the next step is the AP request and the verify message which are",
    "start": "1270559",
    "end": "1277400"
  },
  {
    "text": "being sent from the client to the server and in this case we don't need to modify",
    "start": "1277400",
    "end": "1282980"
  },
  {
    "text": "the API request in the first scenario we did not modified anything so we again regulate as this the server verifies the",
    "start": "1282980",
    "end": "1290059"
  },
  {
    "text": "verify message and the AP request and if it's okay then server will respond with the",
    "start": "1290059",
    "end": "1296179"
  },
  {
    "text": "challenge message and a verify message and in this case if it's okay the session will be already established",
    "start": "1296179",
    "end": "1302299"
  },
  {
    "text": "between the attacker and the server and since we are attackers and we don't need those two messages we can just drop them",
    "start": "1302299",
    "end": "1308960"
  },
  {
    "text": "close the session with the client and we have an established connection with the server and in the second case",
    "start": "1308960",
    "end": "1316220"
  },
  {
    "text": "in the second scenario we chose to change the client name in the previous message so now we will have the verify",
    "start": "1316220",
    "end": "1323840"
  },
  {
    "text": "message which contains the checksum but now the checksum will not be accurate since we changed one of the messages",
    "start": "1323840",
    "end": "1330980"
  },
  {
    "text": "so in this case if we will send it to the server we will get an invalid parameter error and negox invalue",
    "start": "1330980",
    "end": "1337280"
  },
  {
    "text": "parameter also we will not be able to use it and the session will be closed so",
    "start": "1337280",
    "end": "1342380"
  },
  {
    "text": "in this case what we are going to use to do is to force the clan to authenticate to us again",
    "start": "1342380",
    "end": "1348320"
  },
  {
    "text": "and if the client will authenticate to us again to the initiating messages will be sent",
    "start": "1348320",
    "end": "1354799"
  },
  {
    "text": "to a to the server and we will relay them as is and then since we since the client already have a",
    "start": "1354799",
    "end": "1362600"
  },
  {
    "text": "ticket for us and as you know in Cabos client tickets are stored on the client",
    "start": "1362600",
    "end": "1368299"
  },
  {
    "text": "and if the client remember that you have a ticket for the server then you will",
    "start": "1368299",
    "end": "1374000"
  },
  {
    "text": "not request a new one so we will use that and since we initiate another a",
    "start": "1374000",
    "end": "1379100"
  },
  {
    "text": "session and the client already have a ticket to the attacker then the client",
    "start": "1379100",
    "end": "1384260"
  },
  {
    "text": "will directly use it instead of asking a new ticket so in this case the client will go",
    "start": "1384260",
    "end": "1390320"
  },
  {
    "text": "directly to the second set of messages the AP request and the verify in this case the AP request is the cableos AP",
    "start": "1390320",
    "end": "1397520"
  },
  {
    "text": "request in the PK YouTube part and the verify message will contain a checksum which is made over those four messages",
    "start": "1397520",
    "end": "1404600"
  },
  {
    "text": "and this AP request and as you saw we did not made any modification so the",
    "start": "1404600",
    "end": "1410900"
  },
  {
    "text": "verify message is now our QA and the AP request is also accurate because it's generated by the ticket using the",
    "start": "1410900",
    "end": "1417799"
  },
  {
    "text": "session key which is known to the client so if we will relay them to the server",
    "start": "1417799",
    "end": "1423860"
  },
  {
    "text": "then the server will validate everything and we will establish a connection because all the messages are accurate so",
    "start": "1423860",
    "end": "1430760"
  },
  {
    "text": "in this case we managed to bypass the validation part of networks without knowing any session key or without",
    "start": "1430760",
    "end": "1436700"
  },
  {
    "text": "knowing any Secret so let's demo this this one real quick",
    "start": "1436700",
    "end": "1443600"
  },
  {
    "start": "1438000",
    "end": "1746000"
  },
  {
    "text": "let's hope it will work",
    "start": "1443600",
    "end": "1446860"
  },
  {
    "text": "so it takes a couple of seconds due to Wi-Fi",
    "start": "1457340",
    "end": "1462580"
  },
  {
    "text": "it's connecting remote into Israel so it takes time in the meantime I will just say if it",
    "start": "1476240",
    "end": "1483320"
  },
  {
    "text": "will not work I will show a demo which I already prepared in events but I will",
    "start": "1483320",
    "end": "1488780"
  },
  {
    "text": "say that for now that I have I'm going to show and I will have three machines one of them will be my taco machine and",
    "start": "1488780",
    "end": "1495799"
  },
  {
    "text": "the oh it works so here it is I have a client 6 which is my attacker machine and which is going",
    "start": "1495799",
    "end": "1502520"
  },
  {
    "text": "to want the relay server client 7 is azure ID join device and it's going to",
    "start": "1502520",
    "end": "1507980"
  },
  {
    "text": "be my Victim machine and client 8 is going to be my target my target machine so it means that client 7 is going to",
    "start": "1507980",
    "end": "1515299"
  },
  {
    "text": "authenticate to client 6 and client 6 is the attacker machine and it's going to",
    "start": "1515299",
    "end": "1520580"
  },
  {
    "text": "authenticate to client 8. so from client 6 I will start my relay",
    "start": "1520580",
    "end": "1527720"
  },
  {
    "text": "server and I will choose to modify the name as I just showed I will just choose",
    "start": "1527720",
    "end": "1533000"
  },
  {
    "text": "a random name okay so choosing a random name",
    "start": "1533000",
    "end": "1541279"
  },
  {
    "text": "and I will start the server and then I will also start a whale shark",
    "start": "1541279",
    "end": "1548240"
  },
  {
    "text": "this is a special version of wireless shelf which I made a modification to to pass the PKU to your messages this is",
    "start": "1548240",
    "end": "1555500"
  },
  {
    "text": "why I'm using a negro XS filter right now I think it will not work in a",
    "start": "1555500",
    "end": "1560840"
  },
  {
    "text": "regular Wireshark if you're tying it yourself and then instead of spoofing I will",
    "start": "1560840",
    "end": "1566059"
  },
  {
    "text": "directly authenticate to my attacking machine from the from the Victor machine",
    "start": "1566059",
    "end": "1573200"
  },
  {
    "text": "and let's take a look on a on the server so as you can see we",
    "start": "1573200",
    "end": "1581360"
  },
  {
    "text": "managed to dump some ashes and in this case the hash is will not give me",
    "start": "1581360",
    "end": "1587900"
  },
  {
    "text": "anything because as I mentioned it's a device without local accounts but it",
    "start": "1587900",
    "end": "1594559"
  },
  {
    "text": "just proved that we have an authenticated connection and since we're having sufficient privilege to the",
    "start": "1594559",
    "end": "1600320"
  },
  {
    "text": "victim machine we managed to dump those ashes similar to anti-lam relay and let's take a look real quick on the",
    "start": "1600320",
    "end": "1607279"
  },
  {
    "text": "traffic so if we will open the traffic and we",
    "start": "1607279",
    "end": "1613640"
  },
  {
    "text": "will see the AP request which contains the cable ospk unit as request",
    "start": "1613640",
    "end": "1619820"
  },
  {
    "text": "and we'll open everything and we will go directly to the request",
    "start": "1619820",
    "end": "1627020"
  },
  {
    "text": "body and to the others field now we can see that this is client seven this is what we have received from the original",
    "start": "1627020",
    "end": "1633620"
  },
  {
    "text": "a client and then what we relate is the new name that I just wrote",
    "start": "1633620",
    "end": "1640940"
  },
  {
    "text": "and if I will follow this a stream of packets we will say that I've relayed it",
    "start": "1640940",
    "end": "1646880"
  },
  {
    "text": "as is without modifying the verify message and I've received an l",
    "start": "1646880",
    "end": "1652760"
  },
  {
    "text": "so what I did next is to force the client to authenticate again to me as a tackle and this gave me",
    "start": "1652760",
    "end": "1661120"
  },
  {
    "text": "as I showed you let's follow this",
    "start": "1661120",
    "end": "1665860"
  },
  {
    "text": "and now we can see that in the new session we have received the two initiating messages we this is the only",
    "start": "1666860",
    "end": "1674960"
  },
  {
    "text": "part of the regular I'm not showing a the client side but only to the server side and we see that we just went",
    "start": "1674960",
    "end": "1681260"
  },
  {
    "text": "directly into the AP request and the verify and then the session is established and we managed to",
    "start": "1681260",
    "end": "1687679"
  },
  {
    "text": "authenticate so we managed to very fast the validation part and let's see how it",
    "start": "1687679",
    "end": "1694220"
  },
  {
    "text": "looks on a the target device",
    "start": "1694220",
    "end": "1699100"
  },
  {
    "text": "so we can see in the Target device that we have a Windows 4624 of successful",
    "start": "1699559",
    "end": "1704779"
  },
  {
    "text": "authentication and we have the account name with the domain of azure ID and you can see the full European of my account",
    "start": "1704779",
    "end": "1711559"
  },
  {
    "text": "and if we will go to the authentication package we can see that the it was being used in with nego extender and now we",
    "start": "1711559",
    "end": "1719539"
  },
  {
    "text": "can see that the workstation name is what I just thought and the IP is my tackle machine IP and not the client so",
    "start": "1719539",
    "end": "1726679"
  },
  {
    "text": "we managed to perform a successful authentication to the machine even though we made modification to the",
    "start": "1726679",
    "end": "1733520"
  },
  {
    "text": "cables messages which are being protected by the networks verify message",
    "start": "1733520",
    "end": "1738580"
  },
  {
    "text": "so we still managed to very fast them we pass the verification file so",
    "start": "1738580",
    "end": "1745039"
  },
  {
    "text": "nice for us and let's go back to the next attack",
    "start": "1745039",
    "end": "1750400"
  },
  {
    "start": "1746000",
    "end": "1860000"
  },
  {
    "text": "okay so the next stack it's not really a tech yet it's the preparation for the attack in this case we will use the",
    "start": "1751100",
    "end": "1757100"
  },
  {
    "text": "primary refresh token the PLT to get a P2P Azure ID certificate so how it will",
    "start": "1757100",
    "end": "1762679"
  },
  {
    "text": "do it we will first generate a CSR which is a certificate signing request for this specific user",
    "start": "1762679",
    "end": "1769399"
  },
  {
    "text": "which the PRT is bound to and then we will attach both the CSR and the primary",
    "start": "1769399",
    "end": "1774980"
  },
  {
    "text": "refresh token to a JWT a Json web token and we will assign this Json web token",
    "start": "1774980",
    "end": "1780740"
  },
  {
    "text": "with the session key bound to the specific priority once we have it",
    "start": "1780740",
    "end": "1785899"
  },
  {
    "text": "once we signed it we can send this JWT to Azure ID and then we will receive",
    "start": "1785899",
    "end": "1793600"
  },
  {
    "text": "the certificate in the x5c section and we will received an Azure ID P2P",
    "start": "1793600",
    "end": "1799760"
  },
  {
    "text": "certificate which is going to be valid for the next one hour and since we have",
    "start": "1799760",
    "end": "1805039"
  },
  {
    "text": "a valid P2P certificate what we will do we will just simulate everything and",
    "start": "1805039",
    "end": "1810080"
  },
  {
    "text": "pass this certificate to another machine and as long as we will have permissions we will be able to simulate the SMB",
    "start": "1810080",
    "end": "1816980"
  },
  {
    "text": "messages and perform the Network's authentication and authenticate to another machine",
    "start": "1816980",
    "end": "1822500"
  },
  {
    "text": "this will allow us to jump to another machine get certificates and we can dump",
    "start": "1822500",
    "end": "1828980"
  },
  {
    "text": "those certificates from the local machines though because they are by default stored in the machine store or",
    "start": "1828980",
    "end": "1834980"
  },
  {
    "text": "we can dump the plts or we can do anything else we can also add Rogue Azure ID join devices",
    "start": "1834980",
    "end": "1841820"
  },
  {
    "text": "and which will allow us to get constantly ability and get the new Azure",
    "start": "1841820",
    "end": "1847760"
  },
  {
    "text": "ID certificates and it will allow us to move to another machines every time we want and harvest",
    "start": "1847760",
    "end": "1854419"
  },
  {
    "text": "some more and more prts and certificates and move to another machine every time",
    "start": "1854419",
    "end": "1861020"
  },
  {
    "text": "so now we saw a couple of attacks that allow us to move laterally between devices let's see how we can unfold",
    "start": "1861020",
    "end": "1867799"
  },
  {
    "text": "those attacks our first option is to use Windows Event we can use Windows event for six to four or four six two five and",
    "start": "1867799",
    "end": "1875240"
  },
  {
    "text": "to hunt for a successful or failed authentication for 64 successful",
    "start": "1875240",
    "end": "1880399"
  },
  {
    "text": "authentication while four six to five is for failed authentications and as I showed in the demo we will have the",
    "start": "1880399",
    "end": "1887120"
  },
  {
    "text": "Azure ID account in the domain and the full UPN and authentication package is Network",
    "start": "1887120",
    "end": "1893600"
  },
  {
    "text": "standard it's important to know and then we will have the workstation name and the IP as I mentioned and in this case I",
    "start": "1893600",
    "end": "1901279"
  },
  {
    "text": "have attached a screenshot from a real machine so in this case the attacker did",
    "start": "1901279",
    "end": "1907399"
  },
  {
    "text": "not modify the name so if you see and have a mapping between the workstation",
    "start": "1907399",
    "end": "1912520"
  },
  {
    "text": "workstation names and doing IPS you can easily understand that this is a malicious connection because the IP does",
    "start": "1912520",
    "end": "1919279"
  },
  {
    "text": "not match to the name so it's easy to a hand for suspicious",
    "start": "1919279",
    "end": "1924740"
  },
  {
    "text": "logins with or also you can find a world authentication from another devices with",
    "start": "1924740",
    "end": "1931640"
  },
  {
    "text": "users that are not supposed to be connected to those devices the second option is to use the traffic analysis",
    "start": "1931640",
    "end": "1938240"
  },
  {
    "text": "and there are plenty of Open Source traffic analysis or anything else and you can use them to pass the PK YouTube",
    "start": "1938240",
    "end": "1944960"
  },
  {
    "text": "part and if you plug the PK YouTube part you can extract the serial number and the",
    "start": "1944960",
    "end": "1950059"
  },
  {
    "text": "subject this will allow you to find cases where the same serial number have been used from two devices and in the",
    "start": "1950059",
    "end": "1956840"
  },
  {
    "text": "case of the real attack or in case of someone stealing the the P2P certificate",
    "start": "1956840",
    "end": "1963080"
  },
  {
    "text": "from the machine you will be able to see that this serial number was being used from two different devices and not even",
    "start": "1963080",
    "end": "1971059"
  },
  {
    "text": "in the same time it could be in frame of one hour because this is the time the certificate is valid and it will help",
    "start": "1971059",
    "end": "1978080"
  },
  {
    "text": "you find some more suspicious attempts and the mitigation parts",
    "start": "1978080",
    "end": "1983840"
  },
  {
    "text": "as you may know you cannot mitigate someone stealing your credentials PRT",
    "start": "1983840",
    "end": "1989840"
  },
  {
    "text": "and Azure ID P2P certificates are the same as your password so if someone",
    "start": "1989840",
    "end": "1995960"
  },
  {
    "text": "still your password I cannot really do anything and you cannot really protect your device you can obviously patch the",
    "start": "1995960",
    "end": "2003100"
  },
  {
    "text": "device it will be other for tools like mimikats to harvest the PRT but there is",
    "start": "2003100",
    "end": "2009100"
  },
  {
    "text": "no other way and the second option to mitigate the networks relay when it's done over SMB you can you can enable the",
    "start": "2009100",
    "end": "2017320"
  },
  {
    "text": "SMB signing this will force the attacker to use to sign the SMB messages and",
    "start": "2017320",
    "end": "2023080"
  },
  {
    "text": "since the attacker does not have the session key and it cannot get the session key because the first session",
    "start": "2023080",
    "end": "2029140"
  },
  {
    "text": "key is generated from the filament then the attacker will not be able to sign the messages and the relay will still",
    "start": "2029140",
    "end": "2037240"
  },
  {
    "text": "work the attacker will still be able to authenticate to the device but the attacker will not be able to do anything",
    "start": "2037240",
    "end": "2044380"
  },
  {
    "text": "on the device itself so it will force him to close the connection",
    "start": "2044380",
    "end": "2050560"
  },
  {
    "text": "so the tools have been used are the networks relay which I just demoed and second tool is the Azure ID Certificate",
    "start": "2050560",
    "end": "2057398"
  },
  {
    "text": "request tool which is the Purity to certificate the third tool the last tool is the pass the certificate",
    "start": "2057399",
    "end": "2064118"
  },
  {
    "text": "authentication tool with Azure ID certificate and for research I've used wild shark I modified Wireshark to edit",
    "start": "2064119",
    "end": "2071980"
  },
  {
    "text": "the sector for the PKU to report over negro X and allow you to find Network's",
    "start": "2071980",
    "end": "2077378"
  },
  {
    "text": "messages easier and then I also modified Zeke to pass",
    "start": "2077379",
    "end": "2083440"
  },
  {
    "text": "jss API networks over the jss API to extract the PKU to your messages the",
    "start": "2083440",
    "end": "2089500"
  },
  {
    "text": "serial numbers and everything from the certificate itself it's all available in GitHub and so you can download it and",
    "start": "2089500",
    "end": "2097720"
  },
  {
    "text": "use it to find an research on your own and the last takeaways from this session",
    "start": "2097720",
    "end": "2104099"
  },
  {
    "text": "as I mentioned since the some part is dealing your certificates or anything else then",
    "start": "2104099",
    "end": "2111760"
  },
  {
    "text": "patching is not really enough it will not protect you from everything but",
    "start": "2111760",
    "end": "2117160"
  },
  {
    "text": "it still May mandatory to use the SMB signing since this is the thing that",
    "start": "2117160",
    "end": "2122380"
  },
  {
    "text": "will protect you against the relay as I mentioned it's something new I did",
    "start": "2122380",
    "end": "2128560"
  },
  {
    "text": "not I don't know if someone is using it right now but it's a new way to perform",
    "start": "2128560",
    "end": "2133839"
  },
  {
    "text": "lateral movement and since we all know that domain lateral movement is being used for yields then I assume that it",
    "start": "2133839",
    "end": "2142480"
  },
  {
    "text": "will also be used we already know that attackers are joining new device to",
    "start": "2142480",
    "end": "2148240"
  },
  {
    "text": "Azure ID so since they are already joining new device it means that they can get a P2P certificate so there are",
    "start": "2148240",
    "end": "2155920"
  },
  {
    "text": "one step from authenticating to your device and the last thing is hunting is I said",
    "start": "2155920",
    "end": "2163000"
  },
  {
    "text": "it's it's a new tax office and so it's very important to drag and search if",
    "start": "2163000",
    "end": "2168820"
  },
  {
    "text": "there are successful authentication since there are no and not enough research in this area so it's extremely",
    "start": "2168820",
    "end": "2175660"
  },
  {
    "text": "important and that's it thank you [Music]",
    "start": "2175660",
    "end": "2183449"
  },
  {
    "text": "[Music]",
    "start": "2187290",
    "end": "2190380"
  }
]