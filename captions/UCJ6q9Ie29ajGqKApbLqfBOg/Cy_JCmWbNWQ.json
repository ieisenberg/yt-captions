[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14320"
  },
  {
    "start": "12000",
    "end": "12000"
  },
  {
    "text": "hello blackett usa 2021 uh today we're going to talk about mfang",
    "start": "14320",
    "end": "19760"
  },
  {
    "text": "dan mfabel protecting off system core secrets so thank you for being here my",
    "start": "19760",
    "end": "24800"
  },
  {
    "text": "name is tal berry and i'm co-founder for xango and i'm families and i'm a",
    "start": "24800",
    "end": "30800"
  },
  {
    "text": "cryptography researcher at xango okay so xango is a easy and secure crypto",
    "start": "30800",
    "end": "37200"
  },
  {
    "text": "experience a mobile application you can download from your mobile stores",
    "start": "37200",
    "end": "43440"
  },
  {
    "text": "and the special thing about xango we are operating and putting to use some",
    "start": "43440",
    "end": "49600"
  },
  {
    "text": "advanced cryptographic protocols uh novel ones that are very",
    "start": "49600",
    "end": "55920"
  },
  {
    "text": "much relevant to the topic of this talk and we'll show you how so what are we going to talk about today",
    "start": "55920",
    "end": "62320"
  },
  {
    "text": "we'll start with sunburst incident give some context to it and then move quickly to the",
    "start": "62320",
    "end": "68880"
  },
  {
    "text": "golden summer persistent attack will start don't worry if you don't know",
    "start": "68880",
    "end": "73920"
  },
  {
    "text": "how someone works we will talk about that you will know how someone works and then we'll talk about how attackers can",
    "start": "73920",
    "end": "80799"
  },
  {
    "text": "abuse that uh summon functionality to create the golden samuel persistent attack then",
    "start": "80799",
    "end": "87759"
  },
  {
    "text": "we'll talk about solving golder summer we'll start with the detailing",
    "start": "87759",
    "end": "93119"
  },
  {
    "text": "the mfa multi-factor authentication which we think is a good reference for a good",
    "start": "93119",
    "end": "98240"
  },
  {
    "text": "solution we will great we'll show the current solution for the problem and",
    "start": "98240",
    "end": "103360"
  },
  {
    "text": "they'll talk about their limitation and then suggest our novel solution based on that advanced cryptographic techniques",
    "start": "103360",
    "end": "110479"
  },
  {
    "text": "that we use in our crypto wallet then matan will show you our exact solution including a demo so stay for that and",
    "start": "110479",
    "end": "116960"
  },
  {
    "text": "we'll conclude with some takeaway and q a so sunburst it seems like every year it has its flagship bridge security",
    "start": "116960",
    "end": "124640"
  },
  {
    "start": "119000",
    "end": "119000"
  },
  {
    "text": "incident so this year this was sunburst and in sunburst and an advanced",
    "start": "124640",
    "end": "130959"
  },
  {
    "start": "129000",
    "end": "129000"
  },
  {
    "text": "persistent threat according to white house russian intelligence services targeted high-profile u.s government agency",
    "start": "130959",
    "end": "138239"
  },
  {
    "text": "while most focus on the advanced aspect of the of this attack the a in apt the supply",
    "start": "138239",
    "end": "145440"
  },
  {
    "text": "chain compromise on a solar winds that gave the attack its name sunburst want",
    "start": "145440",
    "end": "150800"
  },
  {
    "text": "to focus on another aspect of it of it being persistent so what does it mean persistence uh we",
    "start": "150800",
    "end": "158080"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "often think only of the attacker is persistent this is the p in apt however",
    "start": "158080",
    "end": "164319"
  },
  {
    "text": "often apt attackers meet apt target at one persistent target both sides are",
    "start": "164319",
    "end": "169519"
  },
  {
    "text": "advanced they have the budget they have the knowledge and both sides are",
    "start": "169519",
    "end": "174640"
  },
  {
    "text": "persistent uh for all the foreseeable future we can assume that",
    "start": "174640",
    "end": "180239"
  },
  {
    "text": "russian services will continue to be interested in what certain u.s government agencies are doing and the",
    "start": "180239",
    "end": "186480"
  },
  {
    "text": "youth government agencies the same one are aware that there are some attackers targeting them",
    "start": "186480",
    "end": "193519"
  },
  {
    "text": "but they need to keep on working and need to find these intrusions and deflect them",
    "start": "193519",
    "end": "200319"
  },
  {
    "text": "and this game of catamounts goes on and on the game is never over",
    "start": "200319",
    "end": "205840"
  },
  {
    "text": "and so what does it mean for the attacker they know from the get-go that they're going to be exposed yet they",
    "start": "205840",
    "end": "212319"
  },
  {
    "start": "206000",
    "end": "206000"
  },
  {
    "text": "need to return to the same target and mitra defined this",
    "start": "212319",
    "end": "217840"
  },
  {
    "text": "persistence as a tactic a higher hierarchy that includes all kind of",
    "start": "217840",
    "end": "224560"
  },
  {
    "text": "techniques so persistence consists of techniques that other cells use to keep access to system and a popular way for",
    "start": "224560",
    "end": "230879"
  },
  {
    "text": "attackers to maintain that persistence is by targeting the targets long-term",
    "start": "230879",
    "end": "236239"
  },
  {
    "text": "secrets so in the past was mostly single factor password because attackers",
    "start": "236239",
    "end": "243040"
  },
  {
    "text": "while they're installing malware on the infected on the victim environment they try to grab",
    "start": "243040",
    "end": "248879"
  },
  {
    "text": "also plaintext password because they know that when they get discovered the",
    "start": "248879",
    "end": "254400"
  },
  {
    "text": "malware will be wiped out it could be that the password will would remain so this enables them maybe to get access",
    "start": "254400",
    "end": "261440"
  },
  {
    "text": "again because they can use the remote access of that company let's say they have vpn to get back or even if it's not",
    "start": "261440",
    "end": "268400"
  },
  {
    "text": "possible once the attackers regain a foothold within that environment they",
    "start": "268400",
    "end": "273759"
  },
  {
    "text": "are able to return quickly return to the assets that they once had the access to",
    "start": "273759",
    "end": "279120"
  },
  {
    "text": "and not start from a square one using this password however",
    "start": "279120",
    "end": "284479"
  },
  {
    "text": "this attack vector was largely mitigated by the use of the multi-factor",
    "start": "284479",
    "end": "290400"
  },
  {
    "text": "authentication again it's not present in every victim but we can assume that in",
    "start": "290400",
    "end": "295919"
  },
  {
    "text": "advances target that or they already deployed mfa",
    "start": "295919",
    "end": "300960"
  },
  {
    "text": "and as a result this is no longer a valid persistent",
    "start": "300960",
    "end": "306240"
  },
  {
    "text": "method for the attacker so they need to come up with something more sophisticated and of course because they're advanced and persistent they do",
    "start": "306240",
    "end": "312960"
  },
  {
    "text": "and so such so they target keys you that are used by the victim to generate",
    "start": "312960",
    "end": "318479"
  },
  {
    "text": "access token so one example is the kerberos captivity and the golden ticket attack and another",
    "start": "318479",
    "end": "324400"
  },
  {
    "text": "example that we are going to focus on today is the summer private key and the golden summon attack so let's talk about",
    "start": "324400",
    "end": "330160"
  },
  {
    "text": "golden summer and before we talk about golden summon we have to understand how summer works",
    "start": "330160",
    "end": "335600"
  },
  {
    "start": "331000",
    "end": "331000"
  },
  {
    "text": "so modern corporate environment are comprised of many web services served by different vendors for example we use",
    "start": "335600",
    "end": "342160"
  },
  {
    "text": "github for to manage our code and we use jira to manage our project and g suite",
    "start": "342160",
    "end": "347840"
  },
  {
    "text": "for email and so on and so forth and each service has its own authentication solution which creates a huge a headache",
    "start": "347840",
    "end": "355440"
  },
  {
    "text": "for the id and security department because let's say we have 20 different services so for every new user",
    "start": "355440",
    "end": "362240"
  },
  {
    "text": "it has to uh to create 20 different accounts in every",
    "start": "362240",
    "end": "367919"
  },
  {
    "text": "service and then create passwords so you will create a unique password or we reuse password",
    "start": "367919",
    "end": "375199"
  },
  {
    "text": "both options and has their own limitation what happens if we want to update someone someone changed it all or",
    "start": "375199",
    "end": "382160"
  },
  {
    "text": "got fired etc so it's a big headache and in order to solve that problem uh",
    "start": "382160",
    "end": "389440"
  },
  {
    "text": "organization had to agree on a standard called saml which is security assertion",
    "start": "389440",
    "end": "395280"
  },
  {
    "text": "markup language that enables to extract that functionality of user",
    "start": "395280",
    "end": "401199"
  },
  {
    "text": "management out of the service providers the sps for example as we said jira",
    "start": "401199",
    "end": "406560"
  },
  {
    "text": "github and g suite and so on and put in a centralized place in an identity",
    "start": "406560",
    "end": "412479"
  },
  {
    "text": "provider and just to give you a test of some analogies i hope it will be",
    "start": "412479",
    "end": "418639"
  },
  {
    "text": "helpful maybe you are aware as a user of the signing with functionality that",
    "start": "418639",
    "end": "424720"
  },
  {
    "text": "enables you for example instead of creating a new account in for a new service you can just reuse",
    "start": "424720",
    "end": "430880"
  },
  {
    "text": "your credentials from from google and sign in with a google or",
    "start": "430880",
    "end": "437520"
  },
  {
    "text": "facebook and so on so this is it's not the same standard it's different standard but kind of the same motivation",
    "start": "437520",
    "end": "444960"
  },
  {
    "text": "or if you're coming from a it security and on-prem security and i.t you can",
    "start": "444960",
    "end": "450479"
  },
  {
    "text": "think of saml as the web version of kerberos so i hope one of these analogies work for you but if not let's",
    "start": "450479",
    "end": "456479"
  },
  {
    "text": "explain explicitly what is summer so let's say we have someone configured",
    "start": "456479",
    "end": "462000"
  },
  {
    "start": "458000",
    "end": "458000"
  },
  {
    "text": "and i'm i use my corporate email talentzengo.com",
    "start": "462000",
    "end": "467759"
  },
  {
    "text": "in order to log into github so because of my it administrator i'd already",
    "start": "467759",
    "end": "473840"
  },
  {
    "text": "configured summer for a github then github recognized that i'm coming from a",
    "start": "473840",
    "end": "480319"
  },
  {
    "text": "from xango based on my domain and instead of showing me",
    "start": "480319",
    "end": "486000"
  },
  {
    "text": "the password text box it uh it goes to the summer definitions uh",
    "start": "486000",
    "end": "495360"
  },
  {
    "text": "that my administrator had pre-configured it also",
    "start": "495360",
    "end": "500400"
  },
  {
    "text": "pre-configured a public key that we'll talk about and that now redirects my browser directly to my idp my identity",
    "start": "500400",
    "end": "507120"
  },
  {
    "start": "507000",
    "end": "507000"
  },
  {
    "text": "provider so in the database provider it can take decisions about my authentication based",
    "start": "507120",
    "end": "514560"
  },
  {
    "text": "on the rules that the it administrator had created for example let's say github is",
    "start": "514560",
    "end": "520159"
  },
  {
    "text": "a very sensitive system so i need to do a three factor authentication however it sees that i just connected",
    "start": "520159",
    "end": "527120"
  },
  {
    "text": "two minutes ago to jira and performed that mfa as a three factor",
    "start": "527120",
    "end": "532240"
  },
  {
    "text": "authentication so maybe i can it can be reused and i don't need to do it anyway once i pass the",
    "start": "532240",
    "end": "539040"
  },
  {
    "text": "authentication phase the idp generates sml token which is a fancy name for xml with security",
    "start": "539040",
    "end": "545120"
  },
  {
    "text": "assertion that will show you some screenshots of it on the next slide and it includes all kind of details uh about",
    "start": "545120",
    "end": "552480"
  },
  {
    "text": "my name my email oh and the roles i use everything that the sp the service",
    "start": "552480",
    "end": "558399"
  },
  {
    "text": "provider needs in order to show me the site correctly and then the idp signs the summer with",
    "start": "558399",
    "end": "565920"
  },
  {
    "text": "its private key to prove it on authenticity and we'll talk about that in detail in the rest of this uh talk",
    "start": "565920",
    "end": "573600"
  },
  {
    "text": "then send the summon token to the user or more exactly precisely to",
    "start": "573600",
    "end": "578800"
  },
  {
    "text": "my browser and redirect me back to the sp back to github and so before i go to github i'll just",
    "start": "578800",
    "end": "585680"
  },
  {
    "start": "584000",
    "end": "584000"
  },
  {
    "text": "show you some xml examples or this this summer as you can see it's an xml something it's there the upper",
    "start": "585680",
    "end": "592320"
  },
  {
    "text": "screenshot is the signature and the low part is some attributes on my user for",
    "start": "592320",
    "end": "597440"
  },
  {
    "text": "example i'm a member and student in some system and when github the service provider",
    "start": "597440",
    "end": "603200"
  },
  {
    "start": "601000",
    "end": "601000"
  },
  {
    "text": "gets back that summer served by my browser then it first verifies the",
    "start": "603200",
    "end": "609120"
  },
  {
    "text": "signature based on the pre-configured public key of my domain and then acts according to the",
    "start": "609120",
    "end": "615279"
  },
  {
    "text": "security assertion let's say i'm a student and i'm a member so in a high level let's sum it up a",
    "start": "615279",
    "end": "622000"
  },
  {
    "text": "summer token can be likened to a permit and the idp has a stamp and one is once",
    "start": "622000",
    "end": "627519"
  },
  {
    "text": "it stems the that permit then as a user i can present it to my",
    "start": "627519",
    "end": "634800"
  },
  {
    "text": "sps my service providers and get access to and as we saw like",
    "start": "634800",
    "end": "640640"
  },
  {
    "start": "638000",
    "end": "638000"
  },
  {
    "text": "what enables saml to do all this good stuff it's the decoupling of removing",
    "start": "640640",
    "end": "646800"
  },
  {
    "text": "some certain functionality out of sps and putting it in in the idp that enable us single sign-on",
    "start": "646800",
    "end": "654560"
  },
  {
    "text": "multi-factor authentication mfa user details in one place so it can be easily",
    "start": "654560",
    "end": "659680"
  },
  {
    "text": "updateable and also sp and idp do not talk directly only via the user browser",
    "start": "659680",
    "end": "665680"
  },
  {
    "text": "so again less coupling we can change each of them in a very easy way",
    "start": "665680",
    "end": "671120"
  },
  {
    "text": "and the only thing that glues sps and idp together is is the keeper",
    "start": "671120",
    "end": "677519"
  },
  {
    "text": "the private key that is hold in held in the idp and",
    "start": "677519",
    "end": "683360"
  },
  {
    "text": "the private key in the idp and the public key in the service provider so what happens if attackers steal the",
    "start": "683360",
    "end": "689040"
  },
  {
    "text": "private key so in one sentence bad things happen very bad things so if",
    "start": "689040",
    "end": "694640"
  },
  {
    "start": "691000",
    "end": "691000"
  },
  {
    "text": "attacker is able to attack the idp and steal the private key now they become a rogue idp and they can",
    "start": "694640",
    "end": "702480"
  },
  {
    "text": "sign permits and stamp them however they want so they can log into any service",
    "start": "702480",
    "end": "708240"
  },
  {
    "text": "services that the victim is using any sps as any role as any user but it's not",
    "start": "708240",
    "end": "714880"
  },
  {
    "text": "just stopping there it also there are some more subtle advantages for the attackers in doing so",
    "start": "714880",
    "end": "721200"
  },
  {
    "text": "by doing so they totally bypass the original idp security policies so they but effectively they bypassed mfa",
    "start": "721200",
    "end": "728720"
  },
  {
    "text": "and all of the fancy mfa we have to stop attackers are not are rendered pretty",
    "start": "728720",
    "end": "734880"
  },
  {
    "text": "much useless because this permit issuance happens after that stage so",
    "start": "734880",
    "end": "742000"
  },
  {
    "text": "all these fancy ub keys fingerprint scanning useless to stop the attackers",
    "start": "742000",
    "end": "747120"
  },
  {
    "text": "and also the compensating controls such as access monitoring uh",
    "start": "747120",
    "end": "753200"
  },
  {
    "text": "if we if as defenders we use the idp logs to see who connected to where when",
    "start": "753200",
    "end": "759120"
  },
  {
    "text": "and finally is there we wouldn't see the attacker activity at all there because",
    "start": "759120",
    "end": "764160"
  },
  {
    "text": "it's done after the idp so the idp is completely blind to it so it adds stealthness to the attacker's",
    "start": "764160",
    "end": "771519"
  },
  {
    "text": "attack and the term from this attack golden summer was coined by cybora",
    "start": "771519",
    "end": "777600"
  },
  {
    "text": "almost four years ago however sunburst is the first publicly known use of the technique in the world",
    "start": "777600",
    "end": "785360"
  },
  {
    "text": "so let's move on to solving golden summer before we start solving we have to be",
    "start": "785360",
    "end": "791279"
  },
  {
    "start": "789000",
    "end": "789000"
  },
  {
    "text": "very crisp about the problem definition we want to solve go that summer which is a persistent technique want to solve the",
    "start": "791279",
    "end": "797680"
  },
  {
    "text": "offline use of the idp private key in which attacker gets a time limited",
    "start": "797680",
    "end": "802800"
  },
  {
    "text": "access to idp and but gets a long term access to a",
    "start": "802800",
    "end": "807839"
  },
  {
    "text": "victim services by creating some rock sample token with",
    "start": "807839",
    "end": "813519"
  },
  {
    "text": "this private key what is autoscope is solving online integ on idp",
    "start": "813519",
    "end": "819519"
  },
  {
    "text": "if there is currently a malware on your idp or attacker's head has some hands-on",
    "start": "819519",
    "end": "826560"
  },
  {
    "text": "keyboard on on that in fact it's an easier problem that should be solved with our usual bag of tricks to treat",
    "start": "826560",
    "end": "833680"
  },
  {
    "text": "such kind of problem all kinds of endpoint security xdr process whitelist and so on so forth",
    "start": "833680",
    "end": "841360"
  },
  {
    "start": "841000",
    "end": "841000"
  },
  {
    "text": "and as lazy engineers and and the lazy engineer is a good engineer",
    "start": "841360",
    "end": "848000"
  },
  {
    "text": "when we are facing a new problem we try to find like a reference for it a good reference for",
    "start": "848000",
    "end": "854560"
  },
  {
    "text": "it a good solution that work and as we saw earlier mfa largely solved password",
    "start": "854560",
    "end": "859680"
  },
  {
    "text": "as persistent mechanism if we want we can believe in microsoft research they said it solves 99",
    "start": "859680",
    "end": "866800"
  },
  {
    "text": "99.9 of account compromise with password or we can just take a look at apta",
    "start": "866800",
    "end": "872320"
  },
  {
    "text": "action and see if they are bothered enough with mfa that they need to find a way some ways to bypass it for example",
    "start": "872320",
    "end": "878639"
  },
  {
    "text": "golden summer so what made mfa a good solution we think there are four different elements first is the",
    "start": "878639",
    "end": "884639"
  },
  {
    "text": "composability password is no longer a single point of failure secondly the orthogonality the extra",
    "start": "884639",
    "end": "891839"
  },
  {
    "text": "factors are actually different if mfa was like let's to do",
    "start": "891839",
    "end": "897600"
  },
  {
    "text": "two passwords or three passwords it would be just more of the same and it wouldn't be effective scalability",
    "start": "897600",
    "end": "903760"
  },
  {
    "text": "because we know the attackers will keep coming back we need a way to set the degree of difficulty and set it higher",
    "start": "903760",
    "end": "909440"
  },
  {
    "text": "if we like so mfa is not about a single factor we can as defenders we can add",
    "start": "909440",
    "end": "915120"
  },
  {
    "text": "multiple factors multiple different factors so if one additional is not enough we can do two or three or change",
    "start": "915120",
    "end": "922560"
  },
  {
    "text": "them so this is scalability and also short-lived the de facto",
    "start": "922560",
    "end": "927600"
  },
  {
    "text": "value keeps rotating for example if we take totp like you have in google authenticator or rsscq id then",
    "start": "927600",
    "end": "936079"
  },
  {
    "text": "this code it changes every 30 seconds so even if attacker gets a hold of it it gets access for 30 seconds",
    "start": "936079",
    "end": "943600"
  },
  {
    "text": "and no more so can we apply this mfa principle to solve the golden summer can we mfa the un mfabel",
    "start": "943600",
    "end": "952240"
  },
  {
    "text": "as the title of our talk says but we before we go into the solu the good",
    "start": "952240",
    "end": "959839"
  },
  {
    "start": "955000",
    "end": "955000"
  },
  {
    "text": "solution that we propose let's uh consider current solution so sisa the cyber security agency",
    "start": "959839",
    "end": "967279"
  },
  {
    "text": "in their advisory about uh detecting such abuse",
    "start": "967279",
    "end": "973759"
  },
  {
    "text": "directly uh as a result of a sunburst attack and the recommendation was",
    "start": "973759",
    "end": "979759"
  },
  {
    "text": "to install an h7 to say an hsm and cursively updated makes it very difficult for actors who have",
    "start": "979759",
    "end": "985199"
  },
  {
    "text": "compromised the system to steal the private key and use them outside of the network so in theory hsn can solve that",
    "start": "985199",
    "end": "991360"
  },
  {
    "text": "because hsm can sign our summer token so it works yet prevent",
    "start": "991360",
    "end": "998800"
  },
  {
    "text": "direct access to the private key there is no api to get to get the key it's buried in in the",
    "start": "998800",
    "end": "1006639"
  },
  {
    "text": "hardware in theory attackers cannot take that and use that in an offline manner so let's grade that",
    "start": "1006639",
    "end": "1013759"
  },
  {
    "start": "1013000",
    "end": "1013000"
  },
  {
    "text": "solution based on the criteria we derived from mfa so composability private key is still a single point",
    "start": "1013759",
    "end": "1020560"
  },
  {
    "text": "of failure and if attacker steals that from the hardware they again become a",
    "start": "1020560",
    "end": "1026640"
  },
  {
    "text": "rogue idp and nothing can stop them autogonality",
    "start": "1026640",
    "end": "1031678"
  },
  {
    "text": "well that's how they were residing in the same compromise environment as the idp provide enough resistance",
    "start": "1031679",
    "end": "1038720"
  },
  {
    "text": "even cisa don't truly believe that they say you have to aggressively update",
    "start": "1038720",
    "end": "1044880"
  },
  {
    "text": "your hsm system because advanced attackers living in the same environment",
    "start": "1044880",
    "end": "1050080"
  },
  {
    "text": "as your hsn solution we'll see that the solution and probably will find vulnerabilities in in that as ledger",
    "start": "1050080",
    "end": "1057679"
  },
  {
    "text": "showed in blackhead just two years ago scalability the solution does not scale",
    "start": "1057679",
    "end": "1063919"
  },
  {
    "text": "uh if with move the uh the secret the private key from",
    "start": "1063919",
    "end": "1069600"
  },
  {
    "text": "software to hardware okay this is a good step but if what if it's",
    "start": "1069600",
    "end": "1075840"
  },
  {
    "text": "not enough what would be our next step is the how the world yeah i don't think so so it's",
    "start": "1075840",
    "end": "1081600"
  },
  {
    "text": "kind of one and done and it's not suitable for this cat and mouse games that we have between",
    "start": "1081600",
    "end": "1087679"
  },
  {
    "text": "attackers and the defenders and shortly still this is the same",
    "start": "1087679",
    "end": "1092799"
  },
  {
    "text": "private key as before so it's as long lived as it was before so it didn't help with that so i would rate this solution",
    "start": "1092799",
    "end": "1100240"
  },
  {
    "text": "as a barely passing solution it's it's a",
    "start": "1100240",
    "end": "1105840"
  },
  {
    "text": "it's an improvement but it's not where we want to be so what would be an ideal solution what if we can have multiple",
    "start": "1105840",
    "end": "1111919"
  },
  {
    "start": "1109000",
    "end": "1109000"
  },
  {
    "text": "signals where each token needs to be signed by multiple parties and these parties will be orthogonal for example",
    "start": "1111919",
    "end": "1119120"
  },
  {
    "text": "one is in the customer network and the other one in a third-party vendor that there is no access between this",
    "start": "1119120",
    "end": "1125200"
  },
  {
    "text": "environment and so let's talk examine that from the same success criteria we defined",
    "start": "1125200",
    "end": "1131840"
  },
  {
    "text": "so compassibility there is no single point of failure even if attacker steals one of the private key",
    "start": "1131840",
    "end": "1137919"
  },
  {
    "text": "does not have access to the others autogonality environments are totally orthogonal they are not connected",
    "start": "1137919",
    "end": "1144799"
  },
  {
    "text": "scalability at scales if one if two parties are not enough we can",
    "start": "1144799",
    "end": "1150000"
  },
  {
    "text": "extend to three parties four parties we can set the degree of difficulty the way we want it short-lived well we didn't do",
    "start": "1150000",
    "end": "1157919"
  },
  {
    "text": "much in that but if it was the only problem then this was a would have been a good solution however there is a",
    "start": "1157919",
    "end": "1164480"
  },
  {
    "text": "problem and the problem is that that change requires changes so of course changing",
    "start": "1164480",
    "end": "1170480"
  },
  {
    "text": "requiring requires changes however we want the changes to be limited only for the idp why because in the idp we have",
    "start": "1170480",
    "end": "1178320"
  },
  {
    "text": "as defenders we have a way to upgrade it it only depends on us so we",
    "start": "1178320",
    "end": "1184000"
  },
  {
    "text": "can invest in the resources and we have the motivation to do so however if we change a",
    "start": "1184000",
    "end": "1191200"
  },
  {
    "text": "from a single server to multiple signers it means we need to change the standard and modules importantly",
    "start": "1191200",
    "end": "1197280"
  },
  {
    "text": "make every service provider respect this new version of the standard which will take probably many years so it's not",
    "start": "1197280",
    "end": "1204159"
  },
  {
    "text": "a practical solution so the question is we have that great theoretical solution",
    "start": "1204159",
    "end": "1209840"
  },
  {
    "text": "can we have that solution but change only the idp and here comes uh some",
    "start": "1209840",
    "end": "1217039"
  },
  {
    "start": "1215000",
    "end": "1215000"
  },
  {
    "text": "with modern cryptography magic with threshold signature scheme tss we can do",
    "start": "1217039",
    "end": "1222159"
  },
  {
    "text": "that so in tss private key is created in a truly distributed manner and something is done in truly distributed manner and",
    "start": "1222159",
    "end": "1228320"
  },
  {
    "text": "when i say a truly distributed manner what i mean it means that we're not creating the key in one single place and",
    "start": "1228320",
    "end": "1236080"
  },
  {
    "text": "then sending it splitting it and setting it to the multiple parties and when they need to sign they send it back again and reunite",
    "start": "1236080",
    "end": "1243280"
  },
  {
    "text": "because this wouldn't help because in certain point of time the private key",
    "start": "1243280",
    "end": "1248480"
  },
  {
    "text": "will be in one place and attacker can steal that from that from that place truly distributed manner means that each",
    "start": "1248480",
    "end": "1255600"
  },
  {
    "text": "party create their own secret their own share in tss lingo and never send it outside of that",
    "start": "1255600",
    "end": "1263760"
  },
  {
    "text": "environment so uh kegen is probably key generation is truly distributed and also",
    "start": "1263760",
    "end": "1269360"
  },
  {
    "text": "signing is done with some kind of interactive protocol between the parties that does not involve them",
    "start": "1269360",
    "end": "1275840"
  },
  {
    "text": "revealing the secrets to one another and the magic here is although that we",
    "start": "1275840",
    "end": "1281520"
  },
  {
    "text": "change key generation assigning the public in single verification remains the same so",
    "start": "1281520",
    "end": "1287200"
  },
  {
    "text": "we achieved our goal we only need to upgrade the idp to support tss however sps remains the same and we don't need",
    "start": "1287200",
    "end": "1294640"
  },
  {
    "text": "to change no not this the standard neither the",
    "start": "1294640",
    "end": "1299919"
  },
  {
    "text": "sps implementation and to explain how it's actually done in the cryptography",
    "start": "1299919",
    "end": "1305760"
  },
  {
    "text": "level tss for ecdsa which is the uh elliptical digital signal signature algorithm that",
    "start": "1305760",
    "end": "1313520"
  },
  {
    "text": "we use in saml and also in our cryptocurrency wallet this will take",
    "start": "1313520",
    "end": "1319039"
  },
  {
    "text": "a few more blackett talks so i included some reference there for your future for",
    "start": "1319039",
    "end": "1324799"
  },
  {
    "text": "future reading if you like uh however i wanted to",
    "start": "1324799",
    "end": "1329840"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "give you some taste and this is inspired by the late dan kaminsky so i want to mention him he passed away just a few",
    "start": "1329840",
    "end": "1337919"
  },
  {
    "text": "months ago in april and dan kaminski was a prominent security researcher that most of you",
    "start": "1337919",
    "end": "1343760"
  },
  {
    "text": "know a lot of contribution to dns security also but also bitcoin security and other things and that really",
    "start": "1343760",
    "end": "1350799"
  },
  {
    "text": "load bearing analogies and specifically the analogy that i'm going to present to you so i hope it will be helpful for you",
    "start": "1350799",
    "end": "1357120"
  },
  {
    "text": "and if not well this one is for you then so let's talk about easy dlp elliptic",
    "start": "1357120",
    "end": "1362640"
  },
  {
    "text": "curve discrete discrete log problem because every asymmetric cryptosystem",
    "start": "1362640",
    "end": "1367679"
  },
  {
    "text": "requires a heart problem what we mean in half problem how to solve without the private key the sk",
    "start": "1367679",
    "end": "1373280"
  },
  {
    "text": "easy to solve with the private key it can be verified with the public key so this is ideal for signing because if we",
    "start": "1373280",
    "end": "1381280"
  },
  {
    "text": "somehow tie our message to that a hub problem designer can",
    "start": "1381280",
    "end": "1387200"
  },
  {
    "text": "solve the problem because they have the private key and everybody can verify",
    "start": "1387200",
    "end": "1393120"
  },
  {
    "text": "that because they have the public key however no one else can solve that problem because they don't have the",
    "start": "1393120",
    "end": "1398799"
  },
  {
    "text": "private key and this problem is called the elliptic curve discrete log problem",
    "start": "1398799",
    "end": "1404240"
  },
  {
    "text": "and in the formula for it is public key equals a secret key cross product g where g is",
    "start": "1404240",
    "end": "1412240"
  },
  {
    "text": "a point on the curve let's try to give that intuition that",
    "start": "1412240",
    "end": "1417840"
  },
  {
    "start": "1415000",
    "end": "1415000"
  },
  {
    "text": "load bearing analogy so nick sullivan from cloudflare likened the",
    "start": "1417840",
    "end": "1425520"
  },
  {
    "text": "crypt a elliptical algebra to be a weird bizarre billiards game because as you",
    "start": "1425520",
    "end": "1432799"
  },
  {
    "text": "see in the gif on the right hand side uh when we add point a to bond b it's",
    "start": "1432799",
    "end": "1438720"
  },
  {
    "text": "like a billiards game in which we start shoot the put the ball on point a shoot",
    "start": "1438720",
    "end": "1444000"
  },
  {
    "text": "towards point b and where it hits the curve it bounces back from the edges of this",
    "start": "1444000",
    "end": "1451039"
  },
  {
    "text": "billiard table of the elliptic curve and where it hits the curve again this is the result",
    "start": "1451039",
    "end": "1457120"
  },
  {
    "text": "and so we can think so to take this analogy forward icdlp can be considered",
    "start": "1457120",
    "end": "1462960"
  },
  {
    "text": "as a bizarre billiards game the ball is placed on point g and the ball is shot sk time private key",
    "start": "1462960",
    "end": "1468640"
  },
  {
    "text": "times and ends on point p and the hardness of the problem uh assures that no one can tell how many",
    "start": "1468640",
    "end": "1475360"
  },
  {
    "text": "times the ball was shot the secret key sk the private key although",
    "start": "1475360",
    "end": "1480400"
  },
  {
    "text": "everyone knows the starting point g and the end point p so the question here is can we",
    "start": "1480400",
    "end": "1486480"
  },
  {
    "text": "make it this problem to be distributed can we have two players or three players",
    "start": "1486480",
    "end": "1491840"
  },
  {
    "text": "uh in this game and the answer we can make it a doubles game how we make a",
    "start": "1491840",
    "end": "1498080"
  },
  {
    "start": "1494000",
    "end": "1494000"
  },
  {
    "text": "bizarro uh elliptical periodic game doubles game so we start",
    "start": "1498080",
    "end": "1504480"
  },
  {
    "text": "as in before the ball is placed on point g the ball shot sk one times and ends on point the p1 so up until this point it",
    "start": "1504480",
    "end": "1513120"
  },
  {
    "text": "is exactly the same now enters the second player and the second because this is a hard problem the",
    "start": "1513120",
    "end": "1519679"
  },
  {
    "text": "second player cannot know what is sk1 although we see the static point and the ending point and then this player starts",
    "start": "1519679",
    "end": "1527039"
  },
  {
    "text": "shooting from that point onward sk2 time and as we can see in this formula it",
    "start": "1527039",
    "end": "1532960"
  },
  {
    "text": "actually comes down that now the new public ep is actually equals",
    "start": "1532960",
    "end": "1539360"
  },
  {
    "text": "sk1 times sk2 cost product with a g",
    "start": "1539360",
    "end": "1544640"
  },
  {
    "text": "which effectively means that each party each player has their own private",
    "start": "1544640",
    "end": "1550159"
  },
  {
    "text": "key however we have equivalent private key private key",
    "start": "1550159",
    "end": "1556559"
  },
  {
    "text": "sk that is the multiplication of sk1 and sk2",
    "start": "1556559",
    "end": "1561679"
  },
  {
    "text": "and i hope you are convinced the or you have the intuition why acdrp is still",
    "start": "1561679",
    "end": "1566960"
  },
  {
    "text": "out of a multiple player and we can get a very nice feature out of this",
    "start": "1566960",
    "end": "1573039"
  },
  {
    "text": "construction because now sk is not atomic is the multiplication of",
    "start": "1573039",
    "end": "1578720"
  },
  {
    "text": "these two sure sk1 and sk2 so as defenders we can change sk1 for example",
    "start": "1578720",
    "end": "1584000"
  },
  {
    "text": "multiply it by factor of a and multiply uh the second fact the second chart sk2 by",
    "start": "1584000",
    "end": "1590320"
  },
  {
    "text": "the inverse of it and still maintain the same equivalent private key and the same",
    "start": "1590320",
    "end": "1596080"
  },
  {
    "text": "equivalent of course publicly however the representation of this shares are changed so if attackers",
    "start": "1596080",
    "end": "1604159"
  },
  {
    "text": "get a hold of sk1 once we rotate it's no longer valid",
    "start": "1604159",
    "end": "1610159"
  },
  {
    "text": "within the system so the secrets become short-lived",
    "start": "1610159",
    "end": "1615600"
  },
  {
    "text": "and how do we know that all of this works and it's not just you know crypto theory we know that because it's backed",
    "start": "1615600",
    "end": "1622559"
  },
  {
    "text": "in into a product that is used by hundreds of thousands of users every day to send millions of dollars off of",
    "start": "1622559",
    "end": "1629200"
  },
  {
    "text": "cryptocurrency and we've been doing that for the last uh three years and that enablers are used",
    "start": "1629200",
    "end": "1635200"
  },
  {
    "text": "to buy stock trade than our crypto in a tab so we know it works we know it work well well it works securely and",
    "start": "1635200",
    "end": "1641679"
  },
  {
    "text": "we know it's efficient and we are in the construction of our wallet uh",
    "start": "1641679",
    "end": "1646880"
  },
  {
    "start": "1643000",
    "end": "1643000"
  },
  {
    "text": "because as you know cryptocurrency requires uh that each",
    "start": "1646880",
    "end": "1653120"
  },
  {
    "text": "new customer of the wallet has its own private key and so we created in the tss",
    "start": "1653120",
    "end": "1658880"
  },
  {
    "text": "threshold signature way in which one share is created on the customer device and the other share is",
    "start": "1658880",
    "end": "1665679"
  },
  {
    "text": "cut is created on our own server and we solve all the practical uh solution",
    "start": "1665679",
    "end": "1671200"
  },
  {
    "text": "around that and it worked perfectly for the last three years so to sum up summer",
    "start": "1671200",
    "end": "1676559"
  },
  {
    "text": "flow original summer flow is one step on a permit that is provided to service",
    "start": "1676559",
    "end": "1683200"
  },
  {
    "text": "providers now with tss we were able to distribute that stamp into multiple stamps however",
    "start": "1683200",
    "end": "1691120"
  },
  {
    "start": "1684000",
    "end": "1684000"
  },
  {
    "text": "the result the signatures looks the same to the outside world to sp so we can have multiple signers without changing",
    "start": "1691120",
    "end": "1697520"
  },
  {
    "text": "the standard and without changing the sps only the idp so let's give a score to our solution so",
    "start": "1697520",
    "end": "1704159"
  },
  {
    "start": "1700000",
    "end": "1700000"
  },
  {
    "text": "composability private key becomes decentralized and no longer a single point of failure",
    "start": "1704159",
    "end": "1709200"
  },
  {
    "text": "orthogonality it shall reside on a totally different environment scalability number of parts is scalable",
    "start": "1709200",
    "end": "1714559"
  },
  {
    "text": "if two are not enough for you why not three or four we can set the difficulty",
    "start": "1714559",
    "end": "1720159"
  },
  {
    "text": "the way we like it and shortly because shares can be rotated without changing the main secret they become short-lived",
    "start": "1720159",
    "end": "1725679"
  },
  {
    "text": "so this is indeed an excellent solution in the sense of the criteria we are",
    "start": "1725679",
    "end": "1731200"
  },
  {
    "text": "derived from mfa so with that i want to invite matan to stay to show you the",
    "start": "1731200",
    "end": "1737279"
  },
  {
    "text": "exact solution and the demo for it so matan the floor is yours thank you dal",
    "start": "1737279",
    "end": "1743520"
  },
  {
    "text": "so thank you dal for uh introducing the problem and the solution for the problem uh what i would like to",
    "start": "1743520",
    "end": "1750640"
  },
  {
    "text": "do next is present you the actual demo that implements the suggested solution",
    "start": "1750640",
    "end": "1756480"
  },
  {
    "text": "great so the demo architecture is composed of three parts well the first part is the identity provider and the",
    "start": "1756480",
    "end": "1762480"
  },
  {
    "text": "second part is the service provider that is agnostic practically to the tss",
    "start": "1762480",
    "end": "1767679"
  },
  {
    "text": "nature of the signature and the last part will be our implementation of the threshold",
    "start": "1767679",
    "end": "1773279"
  },
  {
    "text": "signature for the ecdsa signature great so the first two parts we are just were",
    "start": "1773279",
    "end": "1780399"
  },
  {
    "text": "just taken out of the simple saml php project which as its name suggests just",
    "start": "1780399",
    "end": "1786799"
  },
  {
    "text": "implements the saml protocol with the php language um",
    "start": "1786799",
    "end": "1792799"
  },
  {
    "text": "great so what we contributed to its code base was supporting the ecdsa sha-256",
    "start": "1792799",
    "end": "1799120"
  },
  {
    "text": "algorithm for the signature algorithm xml element",
    "start": "1799120",
    "end": "1804320"
  },
  {
    "text": "in the idp code base now the handler for this signature algorithm at the idp calls for the multi-party",
    "start": "1804320",
    "end": "1811919"
  },
  {
    "text": "signing routine when uh when we try to generate a signature for the",
    "start": "1811919",
    "end": "1817679"
  },
  {
    "text": "assertion and the idp and the sp will actually in our demo run in two different containers",
    "start": "1817679",
    "end": "1825279"
  },
  {
    "text": "each running its own copy of the simple sample php code base each with its appropriate configuration",
    "start": "1825279",
    "end": "1832799"
  },
  {
    "text": "great so with that being said the next part is the threshold signature ecdsa implementation",
    "start": "1832799",
    "end": "1839440"
  },
  {
    "text": "implemented by xango x team on github you can check it out",
    "start": "1839440",
    "end": "1844880"
  },
  {
    "text": "more specifically we use the three out of three signature scheme in our demo and the signature scheme used is called",
    "start": "1844880",
    "end": "1852720"
  },
  {
    "text": "uh by after a general engulfed known as a gg18",
    "start": "1852720",
    "end": "1859760"
  },
  {
    "text": "so in our demo as said each signer will in the threshold the signature scheme",
    "start": "1859760",
    "end": "1865279"
  },
  {
    "text": "will run on a separate container uh and each con one of those containers of",
    "start": "1865279",
    "end": "1871120"
  },
  {
    "text": "the cosigners is controlled by the idp the rest of them are assumed to be independent and thus uh add value to the",
    "start": "1871120",
    "end": "1878720"
  },
  {
    "text": "orthogonality measure as mentioned by ital it's important to mention that while on",
    "start": "1878720",
    "end": "1885120"
  },
  {
    "text": "the demo we run all the containers on the same pc a real demo a real world implementation",
    "start": "1885120",
    "end": "1891360"
  },
  {
    "text": "of this will compose different cosigners running in different orthogonal independent environments so",
    "start": "1891360",
    "end": "1898880"
  },
  {
    "text": "just that being said the demo actually includes also the distributed key generation",
    "start": "1898880",
    "end": "1906159"
  },
  {
    "text": "as part of of our code contribution great",
    "start": "1906159",
    "end": "1911279"
  },
  {
    "start": "1910000",
    "end": "1910000"
  },
  {
    "text": "so the demo is composed of two parts the first part is the setup phase",
    "start": "1911279",
    "end": "1917039"
  },
  {
    "text": "and the second part would be an actual signing phase so in the setup phase we start all the signing containers each of",
    "start": "1917039",
    "end": "1924080"
  },
  {
    "text": "them will take part in our distributed key generation algorithm for creating a",
    "start": "1924080",
    "end": "1929279"
  },
  {
    "text": "three out of three private key for the ecdsa threshold signature scheme",
    "start": "1929279",
    "end": "1936640"
  },
  {
    "text": "out of the generated public key one of the one of the cosigners will",
    "start": "1936640",
    "end": "1942799"
  },
  {
    "text": "also generate an a certificate that will be automatically transferred",
    "start": "1942799",
    "end": "1948880"
  },
  {
    "text": "to the service provider in our demo so with that certificate the service provider can actually verify the signed",
    "start": "1948880",
    "end": "1955919"
  },
  {
    "text": "assertions being correct uh great so",
    "start": "1955919",
    "end": "1961360"
  },
  {
    "start": "1960000",
    "end": "1960000"
  },
  {
    "text": "this is just uh like uh the the part of uh explaining how",
    "start": "1961360",
    "end": "1968320"
  },
  {
    "text": "the signing phase works in diagram so the first uh part of signing is",
    "start": "1968320",
    "end": "1975039"
  },
  {
    "text": "the user agent requesting the service provider a certain service at this point the",
    "start": "1975039",
    "end": "1980799"
  },
  {
    "text": "service provider will discover an idp in our case in our demo what will happen is",
    "start": "1980799",
    "end": "1986320"
  },
  {
    "text": "that the user will manually just pick an idp the single idp in our demo the second part will be redirecting the",
    "start": "1986320",
    "end": "1993600"
  },
  {
    "text": "demo redirecting the user to the single sign on service which is the",
    "start": "1993600",
    "end": "1998720"
  },
  {
    "text": "idp when the user will be redirected to the idp it will request the idp to be identified",
    "start": "1998720",
    "end": "2007760"
  },
  {
    "text": "and input some sort of credentials in a form given by the idp at that point when the verification",
    "start": "2007760",
    "end": "2014399"
  },
  {
    "text": "succeeds and the the idp verifies that",
    "start": "2014399",
    "end": "2019919"
  },
  {
    "text": "the credentials provided by the user are actually correct uh a new uh signature will be generated for the",
    "start": "2019919",
    "end": "2027200"
  },
  {
    "text": "assertion that the user was verified alongside some of the attributes of that user and at this point the attributes",
    "start": "2027200",
    "end": "2033519"
  },
  {
    "text": "will be returned back to the user with the signed assertion and the user will",
    "start": "2033519",
    "end": "2039760"
  },
  {
    "text": "be redirected back to the service provider giving him the",
    "start": "2039760",
    "end": "2045200"
  },
  {
    "text": "signed assertion and signing in to the requested service",
    "start": "2045200",
    "end": "2051440"
  },
  {
    "text": "great so let's take a look at our demo great",
    "start": "2051440",
    "end": "2057839"
  },
  {
    "text": "i'll just turn that on wait so i'm just starting running the demo and",
    "start": "2059520",
    "end": "2065760"
  },
  {
    "text": "at this point you can see that many of the containers are firing up",
    "start": "2065760",
    "end": "2072240"
  },
  {
    "text": "when they finish firing up at the right side of the screen you will see three sub-windows three panes",
    "start": "2072240",
    "end": "2078000"
  },
  {
    "text": "each of them is one of the co-signers at the left side of the terminal you will see",
    "start": "2078000",
    "end": "2083440"
  },
  {
    "text": "an output of the certificate for the idp which will be moved later on to the service provider",
    "start": "2083440",
    "end": "2089440"
  },
  {
    "text": "great so the containers are up and on the right side as i said you can see the three cosigners",
    "start": "2089440",
    "end": "2095440"
  },
  {
    "text": "so if you take a look at what the first cosigner does it basically",
    "start": "2095440",
    "end": "2100960"
  },
  {
    "text": "starts our key generation client which distributively generates a private key",
    "start": "2100960",
    "end": "2106880"
  },
  {
    "text": "um and sen sets up a server with which all of the parties communicate",
    "start": "2106880",
    "end": "2114160"
  },
  {
    "text": "this enables us to securely transfer messages between the parties",
    "start": "2114160",
    "end": "2119359"
  },
  {
    "text": "as you can see we have three parties and a threshold of two which means that we need more than two",
    "start": "2119359",
    "end": "2124960"
  },
  {
    "text": "cosigners to generate a signature so this is the first cosigner joining the",
    "start": "2124960",
    "end": "2130480"
  },
  {
    "text": "party and down below you can see all the transferred messages in the key generation algorithm",
    "start": "2130480",
    "end": "2137200"
  },
  {
    "text": "and when the key generation is done we move to generating a certificate",
    "start": "2137200",
    "end": "2142560"
  },
  {
    "text": "and when the this certificate is later on moved to the service provider",
    "start": "2142560",
    "end": "2150480"
  },
  {
    "text": "great so the second the cosigner does practically the same thing",
    "start": "2154320",
    "end": "2159520"
  },
  {
    "text": "it joins the co-signing event ceremony with the",
    "start": "2159520",
    "end": "2165599"
  },
  {
    "text": "server and exchanges multiple messages",
    "start": "2165599",
    "end": "2171359"
  },
  {
    "text": "and gains its own share of the private key and without going too much detail the",
    "start": "2171359",
    "end": "2176960"
  },
  {
    "text": "third cosigner does exactly the same if you take a look at the generated certificate",
    "start": "2176960",
    "end": "2183040"
  },
  {
    "text": "you can see multiple properties well the first is that the certificate is generated for",
    "start": "2183040",
    "end": "2189200"
  },
  {
    "text": "idp xango saml which is the domain of our idp",
    "start": "2189200",
    "end": "2194240"
  },
  {
    "text": "certificate is generated for the ecdsa shuttle 56 algorithm over the secp 256",
    "start": "2194240",
    "end": "2199920"
  },
  {
    "text": "k1 elliptic curve great so let's move into actually",
    "start": "2199920",
    "end": "2207520"
  },
  {
    "text": "browsing our service provider which is sb.xengo.summon since this is a self-signed certificate",
    "start": "2207520",
    "end": "2213440"
  },
  {
    "text": "we get this warning message and this is our service provider wait so",
    "start": "2213440",
    "end": "2218640"
  },
  {
    "text": "we press the authentication tab",
    "start": "2218640",
    "end": "2222559"
  },
  {
    "text": "and we select our demo idp at this point we are redirected to the idp xango saml website",
    "start": "2224320",
    "end": "2232240"
  },
  {
    "text": "we are given a form to input our credentials",
    "start": "2232240",
    "end": "2237560"
  },
  {
    "text": "we hit login and when we'll hit login you can see on the right that multiple cosigners will take part of the",
    "start": "2242960",
    "end": "2250320"
  },
  {
    "text": "signature generation algorithm they all wait for an incoming message at",
    "start": "2250320",
    "end": "2255599"
  },
  {
    "text": "this point so let's hit login and you can see them",
    "start": "2255599",
    "end": "2262880"
  },
  {
    "text": "actually working on generating the signature",
    "start": "2262880",
    "end": "2266800"
  },
  {
    "text": "and when they're done we are redirected back to the service provider with a message that notifies us of the success",
    "start": "2268640",
    "end": "2274800"
  },
  {
    "text": "of our login and as you can see down the page we have the assertion",
    "start": "2274800",
    "end": "2280880"
  },
  {
    "text": "that was generated by the idp with some of the attributes of the sign-in",
    "start": "2280880",
    "end": "2286880"
  },
  {
    "text": "users such as member and student great so",
    "start": "2286880",
    "end": "2292480"
  },
  {
    "text": "this is the end of our demo back to utah",
    "start": "2292480",
    "end": "2299040"
  },
  {
    "text": "so thank you matan yeah you can stay it's like we have two slides",
    "start": "2299040",
    "end": "2304480"
  },
  {
    "text": "so let's conclude with some takeaways so",
    "start": "2304480",
    "end": "2309520"
  },
  {
    "text": "apgs are targeting long-term secrets for persistence for example condensable advantages target",
    "start": "2309520",
    "end": "2316480"
  },
  {
    "text": "muscle current hardware solutions are not perfect as we showed but using modern",
    "start": "2316480",
    "end": "2322440"
  },
  {
    "text": "cryptography tss threshold signature we together with it's very important to",
    "start": "2322440",
    "end": "2327920"
  },
  {
    "text": "know that with the relevant architecture because threshold signatures by themselves are not enough we need to",
    "start": "2327920",
    "end": "2333359"
  },
  {
    "text": "build also these orthogonal vendors that will be the parties in the tss in",
    "start": "2333359",
    "end": "2340400"
  },
  {
    "text": "the distributed designing process but these two together another much better",
    "start": "2340400",
    "end": "2347119"
  },
  {
    "text": "solution and i think there's even a greater lesson more general lesson that infosec",
    "start": "2347119",
    "end": "2352800"
  },
  {
    "text": "should love cryptocurrency because cryptocurrency are solving high security problems",
    "start": "2352800",
    "end": "2358000"
  },
  {
    "text": "and the infosec community should embrace that and i think it was",
    "start": "2358000",
    "end": "2363119"
  },
  {
    "text": "greatly expressed in dino daisovi tweet about the importance of the",
    "start": "2363119",
    "end": "2369359"
  },
  {
    "text": "security community community to take a look at what's on the all the innovation",
    "start": "2369359",
    "end": "2374400"
  },
  {
    "text": "that's happening in cryptocurrency project so with that we conclude and",
    "start": "2374400",
    "end": "2380000"
  },
  {
    "text": "thank you for your time and if you have questions now is the time thank you",
    "start": "2380000",
    "end": "2386599"
  }
]