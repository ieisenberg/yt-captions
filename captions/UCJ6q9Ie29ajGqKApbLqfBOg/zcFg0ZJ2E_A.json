[
  {
    "text": "[Music] foreign",
    "start": "1740",
    "end": "6720"
  },
  {
    "text": "thank you to be here for this talk hello also to the people that are watching",
    "start": "9080",
    "end": "14099"
  },
  {
    "text": "this talk remotely so I'm Roman Tomas I'm security engineer",
    "start": "14099",
    "end": "19800"
  },
  {
    "text": "at UL where I perform security evaluation on mobile banking app",
    "start": "19800",
    "end": "26720"
  },
  {
    "text": "and I enjoy dealing with reverse engineering and obfuscation mostly for",
    "start": "26720",
    "end": "34140"
  },
  {
    "text": "our Mobile in mobile application and I'm also the author of leaf which is",
    "start": "34140",
    "end": "40079"
  },
  {
    "text": "library that can be used to manipulate the executable formats but today I will",
    "start": "40079",
    "end": "45840"
  },
  {
    "text": "I will talk about Swift net which is a component developed by Google to check",
    "start": "45840",
    "end": "52260"
  },
  {
    "text": "the Integrity of the device Android device and basically they need to de-wrap that",
    "start": "52260",
    "end": "59879"
  },
  {
    "text": "because on Android you can access to the root privileged",
    "start": "59879",
    "end": "65338"
  },
  {
    "text": "quite easily compared to iOS where you have to somehow find a vulnerability to",
    "start": "65339",
    "end": "71220"
  },
  {
    "text": "have a Jailbreak on Android the system unable to get root as long as you",
    "start": "71220",
    "end": "77520"
  },
  {
    "text": "disable some security feature like the bootloaders of secure boot",
    "start": "77520",
    "end": "84020"
  },
  {
    "text": "so it brings some concern about for developer about knowing whether they are",
    "start": "84020",
    "end": "92340"
  },
  {
    "text": "running their application on a trusted environment and that's why Google developed its own",
    "start": "92340",
    "end": "99180"
  },
  {
    "text": "solution named safety net which aim at checking the Integrity of the device so",
    "start": "99180",
    "end": "106560"
  },
  {
    "text": "when we talk about integrity we talk about detecting whether the device has",
    "start": "106560",
    "end": "111899"
  },
  {
    "text": "been rooted whether the the system is a custom firmware or even if it's an",
    "start": "111899",
    "end": "119520"
  },
  {
    "text": "emulator and basically when you are a developer you might want to know if you can trust",
    "start": "119520",
    "end": "126719"
  },
  {
    "text": "the device on which the application will run because for instance for the video",
    "start": "126719",
    "end": "132480"
  },
  {
    "text": "game industry they don't want to run their game on a device that has been",
    "start": "132480",
    "end": "138180"
  },
  {
    "text": "rooted because maybe it could enable to easily cheat the application",
    "start": "138180",
    "end": "143840"
  },
  {
    "text": "also in the bank industry they they are not allowed to run the banking app on a",
    "start": "143840",
    "end": "151440"
  },
  {
    "text": "device that has been rooted for instance and it's not about whether the developer would support the",
    "start": "151440",
    "end": "158640"
  },
  {
    "text": "device or not it's a certification that said you can't run the application on a rooted device so that's why they create",
    "start": "158640",
    "end": "165300"
  },
  {
    "text": "a safety net to check the Integrity of the Android device because it's easy to get food on Android device",
    "start": "165300",
    "end": "172200"
  },
  {
    "text": "so from a developer point of view you have basically to provide two",
    "start": "172200",
    "end": "177480"
  },
  {
    "text": "information uh one is the API key of safety net which is used to identify the",
    "start": "177480",
    "end": "184739"
  },
  {
    "text": "developer and the other parameter is a numps which is used basically to avoid",
    "start": "184739",
    "end": "190920"
  },
  {
    "text": "some kind of attack like replay attack and when the developer provides these",
    "start": "190920",
    "end": "196980"
  },
  {
    "text": "two information it will get the result of the safety net attestation to one",
    "start": "196980",
    "end": "202739"
  },
  {
    "text": "callback I mean to call back if there is a failure but mostly one in the case",
    "start": "202739",
    "end": "208200"
  },
  {
    "text": "where it's a success and safety net will provide information about whether the",
    "start": "208200",
    "end": "213959"
  },
  {
    "text": "device can be considered as safe or not so why doing this torque uh at bracket",
    "start": "213959",
    "end": "222540"
  },
  {
    "text": "Asia so because basically in 2017 there were already a torque at black at Europe",
    "start": "222540",
    "end": "227879"
  },
  {
    "text": "about safety net and Colleen and John presented some uh inner work of how",
    "start": "227879",
    "end": "234180"
  },
  {
    "text": "safety net is designed and they mentioned also a component Droid guard",
    "start": "234180",
    "end": "239220"
  },
  {
    "text": "but they did not explain a lot about how it is used and how it works",
    "start": "239220",
    "end": "244519"
  },
  {
    "text": "and by the time there were also magisk which is the routing solution for",
    "start": "244519",
    "end": "251519"
  },
  {
    "text": "Android and that enabled to easily bypass theft net so it's very well",
    "start": "251519",
    "end": "256919"
  },
  {
    "text": "designed and they they find some tricks to basically enable to bypass theft net",
    "start": "256919",
    "end": "262260"
  },
  {
    "text": "like just by enabler a setting in the in the in the application so it's very easy",
    "start": "262260",
    "end": "268380"
  },
  {
    "text": "to actually it was actually very easy to to bypass the net thanks to Magics and",
    "start": "268380",
    "end": "274199"
  },
  {
    "text": "Magic sky and Google did some improvement because of this routing solution where basically",
    "start": "274199",
    "end": "281880"
  },
  {
    "text": "they improved that net with some kind of Hardware attestation which",
    "start": "281880",
    "end": "288320"
  },
  {
    "text": "leverage some Hardware feature of the device uh to know whether the bootloader",
    "start": "288320",
    "end": "294479"
  },
  {
    "text": "has been unlocked or not which is which can be a sign of a rooted device",
    "start": "294479",
    "end": "301040"
  },
  {
    "text": "and um safety net will will provide two flag basically to determine whether the",
    "start": "301040",
    "end": "307740"
  },
  {
    "text": "devices is safe or not the fourth one is basic integrity and the second one is the CTF profile match here are the",
    "start": "307740",
    "end": "315540"
  },
  {
    "text": "descriptions that are available on the Google Website but basically the basic",
    "start": "315540",
    "end": "321120"
  },
  {
    "text": "Integrity check will determine whether the device is rooted if it's an emulator and if there are some presence of API",
    "start": "321120",
    "end": "329580"
  },
  {
    "text": "hooking like Freda and on the other end CTF CTS profile match will do the same",
    "start": "329580",
    "end": "335460"
  },
  {
    "text": "more or less the same check as basic Integrity but it will also detect if",
    "start": "335460",
    "end": "341160"
  },
  {
    "text": "your workloader is unlocked which is one step to get food on an Android device",
    "start": "341160",
    "end": "347400"
  },
  {
    "text": "but the important Point here is that CTF profile match will be set to false if",
    "start": "347400",
    "end": "353580"
  },
  {
    "text": "the device did not pass the Google certification so it can bring some full",
    "start": "353580",
    "end": "359100"
  },
  {
    "text": "positive uh in the attestation and back in January of this year the",
    "start": "359100",
    "end": "367320"
  },
  {
    "text": "main developer of magisk join Google and because of some conflict of interest I",
    "start": "367320",
    "end": "374820"
  },
  {
    "text": "guess he decided to remove Magic's guide from the release 24. so now in the",
    "start": "374820",
    "end": "382500"
  },
  {
    "text": "latest version of magic there is no magic Island we can't use it to bypass",
    "start": "382500",
    "end": "387680"
  },
  {
    "text": "the the root detection of 30 net and other rasp solution",
    "start": "387680",
    "end": "394259"
  },
  {
    "text": "so now if we go back to the snippet that show how to use a safety net from a",
    "start": "394259",
    "end": "400560"
  },
  {
    "text": "developer point of view now from a system perspective a safety net the developer will will",
    "start": "400560",
    "end": "408419"
  },
  {
    "text": "trigger a safety net request through the safety net SDK that takes place in the",
    "start": "408419",
    "end": "414180"
  },
  {
    "text": "blue area the safety net SDK will will craft a",
    "start": "414180",
    "end": "421620"
  },
  {
    "text": "message that will contain basic information about the application that ask for the request it will forward this",
    "start": "421620",
    "end": "429060"
  },
  {
    "text": "information through an intent to DMS car GMS car on Android is is a component",
    "start": "429060",
    "end": "436680"
  },
  {
    "text": "that contains all the Google logic uh on the device this component GMS score will",
    "start": "436680",
    "end": "443520"
  },
  {
    "text": "perform some very classical root check on the device so if we check if for",
    "start": "443520",
    "end": "449699"
  },
  {
    "text": "instance the Su binary is present and it will start also to create a",
    "start": "449699",
    "end": "456120"
  },
  {
    "text": "protobuf message that will contain the information about the Integrity of the device",
    "start": "456120",
    "end": "461880"
  },
  {
    "text": "then GMS score will call Droid guard which is another component that runs in",
    "start": "461880",
    "end": "468660"
  },
  {
    "text": "another process but that is very close in terms of communication I would say to",
    "start": "468660",
    "end": "475020"
  },
  {
    "text": "a GMS Curve droidguard will perform the AV check to determine whether your",
    "start": "475020",
    "end": "480900"
  },
  {
    "text": "device is is safe or not I mean if the device has been rooted if it's an emulator and so on so most of the check",
    "start": "480900",
    "end": "488460"
  },
  {
    "text": "of setting net are done through Droid gel then Droid guard will send the razor",
    "start": "488460",
    "end": "495240"
  },
  {
    "text": "to GMS curve that would throw up the the information to the Google backend and",
    "start": "495240",
    "end": "500940"
  },
  {
    "text": "the Google backend will decide which flag to set to false or true",
    "start": "500940",
    "end": "506580"
  },
  {
    "text": "so here is uh the protobuf message that is created by",
    "start": "506580",
    "end": "513060"
  },
  {
    "text": "um by GMS score so in The Orange Box you",
    "start": "513060",
    "end": "519180"
  },
  {
    "text": "have the basic information about the application that ask for the attestation",
    "start": "519180",
    "end": "524580"
  },
  {
    "text": "you have also uh some information about the small and easy checkfruit and else LC",
    "start": "524580",
    "end": "534420"
  },
  {
    "text": "Linux status so here it's just about Java check so it's not obfuscated it's I",
    "start": "534420",
    "end": "540779"
  },
  {
    "text": "mean you have to reverse the GMS APK but it's very straightforward to notify and",
    "start": "540779",
    "end": "547080"
  },
  {
    "text": "on the other end uh Droid guard the result of Joy gut will be happen to this",
    "start": "547080",
    "end": "552600"
  },
  {
    "text": "message and will it contains some a blob of data which looks like a blob of data that it",
    "start": "552600",
    "end": "559740"
  },
  {
    "text": "actually contains a lot of information about the statues of the device",
    "start": "559740",
    "end": "564959"
  },
  {
    "text": "this protograph message is sent to the Google backend that will do some",
    "start": "564959",
    "end": "570360"
  },
  {
    "text": "computation to determine the results of the safety net request so the goal of this talk is mostly to",
    "start": "570360",
    "end": "579000"
  },
  {
    "text": "present Droid guard which is a heavy model that contain different kind of",
    "start": "579000",
    "end": "584880"
  },
  {
    "text": "different layer of obfuscation and in particular the normal of this talk is not to present a new technique",
    "start": "584880",
    "end": "591120"
  },
  {
    "text": "to bypassive net because it's not a verb proportion just to provide a description of how it works",
    "start": "591120",
    "end": "599160"
  },
  {
    "text": "so the question now is how this value generated through Joy",
    "start": "599160",
    "end": "605820"
  },
  {
    "text": "guard is actually generated and what kind of information it contains",
    "start": "605820",
    "end": "611820"
  },
  {
    "text": "so as I said quickly uh just before Droid Garner run in a different process",
    "start": "611820",
    "end": "618680"
  },
  {
    "text": "than GMS score so the name of the process is com Android Google GMS",
    "start": "618680",
    "end": "625680"
  },
  {
    "text": "unstable and it's associated with an APK that is located in the data partition of",
    "start": "625680",
    "end": "635040"
  },
  {
    "text": "the of the application actually this APK is dynamically downloaded from the Google server so",
    "start": "635040",
    "end": "641700"
  },
  {
    "text": "it's not an APK that is already installed on the system it's an APK that is updated every two weeks and that",
    "start": "641700",
    "end": "648660"
  },
  {
    "text": "contain a small Java layer and a native Library written in C plus plus that",
    "start": "648660",
    "end": "655320"
  },
  {
    "text": "Implement somehow a VM and this VM is heavily obfuscated with",
    "start": "655320",
    "end": "663600"
  },
  {
    "text": "different kind of different layers that I will describe a bit later and it contained all the logic of the the",
    "start": "663600",
    "end": "671220"
  },
  {
    "text": "drawing card so just to summarize a bit of the the process of Joy guard so first GMS score",
    "start": "671220",
    "end": "680279"
  },
  {
    "text": "will trigger an event that will start Droid guard then drill guard will run uh",
    "start": "680279",
    "end": "687779"
  },
  {
    "text": "the bike provided by the Java layer so as I said Droid guard Implement a VM and",
    "start": "687779",
    "end": "695640"
  },
  {
    "text": "to use the VM you have to provide a bytecode and this bytecode is actually downloaded for each other station",
    "start": "695640",
    "end": "704220"
  },
  {
    "text": "so Droid guard starts with the Java layer that you just choose to bridge uh",
    "start": "704220",
    "end": "710399"
  },
  {
    "text": "with a native layer that is located in the native Library this native library is obfuscated with MDA with on CD",
    "start": "710399",
    "end": "719640"
  },
  {
    "text": "burgundy hooking all the buffer on Kodi I mean you have",
    "start": "719640",
    "end": "724680"
  },
  {
    "text": "different kind of layer of obscation Droid guard also download the bytecode",
    "start": "724680",
    "end": "730019"
  },
  {
    "text": "for each attestation which means that each time the developer asks for an",
    "start": "730019",
    "end": "736860"
  },
  {
    "text": "attestation Droid guard will download a dedicated bytecode for the site station",
    "start": "736860",
    "end": "742800"
  },
  {
    "text": "so remember you have this APK that is updated every two weeks",
    "start": "742800",
    "end": "748380"
  },
  {
    "text": "and the bytecode running through this VM is downloaded each time",
    "start": "748380",
    "end": "753959"
  },
  {
    "text": "for each attestation and of course there are some small modification for each",
    "start": "753959",
    "end": "759120"
  },
  {
    "text": "bytecode which can be difficult to analyze because first when you reverse",
    "start": "759120",
    "end": "764700"
  },
  {
    "text": "the APK you have to be somehow quick because every two weeks it change I mean",
    "start": "764700",
    "end": "769860"
  },
  {
    "text": "some part of the VM change and the bytecode is downloaded each time then",
    "start": "769860",
    "end": "775139"
  },
  {
    "text": "the bad gun sorry the bite could run through the VM",
    "start": "775139",
    "end": "780240"
  },
  {
    "text": "the bite cut contain actually all the check to determine if it's an emulator if it's uh if the device is rooted if",
    "start": "780240",
    "end": "787920"
  },
  {
    "text": "there are some uh hint about hooking from Rock and sun",
    "start": "787920",
    "end": "793079"
  },
  {
    "text": "it will also generate the token name Droid guard this token will be sent back",
    "start": "793079",
    "end": "799500"
  },
  {
    "text": "to the Droid guard main class uh in the the APK and then it will be sent to GMS",
    "start": "799500",
    "end": "807540"
  },
  {
    "text": "score that will add this value to the product message and that will be eventually sent",
    "start": "807540",
    "end": "813240"
  },
  {
    "text": "to the Google backend so if we want to understand how certain",
    "start": "813240",
    "end": "819300"
  },
  {
    "text": "Network we basically need to understand how the VM is designed and how the byte",
    "start": "819300",
    "end": "824940"
  },
  {
    "text": "code what kind of info what kind of action are done through this bytecode so",
    "start": "824940",
    "end": "830220"
  },
  {
    "text": "is a 40 minute turns and it's outlined a month of research so I will just",
    "start": "830220",
    "end": "836279"
  },
  {
    "text": "describe some feature of the VM and you can find more details in the white paper so basically the VM is designed with a",
    "start": "836279",
    "end": "845120"
  },
  {
    "text": "256 registers that can contain a typed",
    "start": "845120",
    "end": "850500"
  },
  {
    "text": "value I mean register it's a virtual register so it's basically a simple Express structure that contains a type",
    "start": "850500",
    "end": "857100"
  },
  {
    "text": "and a value and the type can be a pointer can be a double can be a gni",
    "start": "857100",
    "end": "862920"
  },
  {
    "text": "object it can be also a string and so on and uh for each new version of uh Droid",
    "start": "862920",
    "end": "870899"
  },
  {
    "text": "guard they are changing the layout of Android ID of this register which means",
    "start": "870899",
    "end": "877620"
  },
  {
    "text": "that basically if you manage to be notify that in the version a of droid guard an integer is associated with one",
    "start": "877620",
    "end": "885380"
  },
  {
    "text": "or three in the next version the integer type will be associated with one",
    "start": "885380",
    "end": "893399"
  },
  {
    "text": "so that's one of the challenge when reverse engineering Droid here is an example that perform a right",
    "start": "893399",
    "end": "901019"
  },
  {
    "text": "operation in the VM so basically here is the the function that we just write a",
    "start": "901019",
    "end": "907079"
  },
  {
    "text": "value uh in the VM register so on the top you have a mixed Boolean arithmetic",
    "start": "907079",
    "end": "915360"
  },
  {
    "text": "expression which is used basically to encode or to decode a register value",
    "start": "915360",
    "end": "920459"
  },
  {
    "text": "because in the joygard VM all the value of the register are encoded which means",
    "start": "920459",
    "end": "925860"
  },
  {
    "text": "that if somehow you manage to dump all the register value you won't be able to",
    "start": "925860",
    "end": "931740"
  },
  {
    "text": "see what their what value they are actually because all the value are encoded and they are encoded through MBA",
    "start": "931740",
    "end": "938760"
  },
  {
    "text": "and the MBA are changing every two weeks because of the VM update so here you",
    "start": "938760",
    "end": "944579"
  },
  {
    "text": "have the decoding part of the the register value then here you have uh",
    "start": "944579",
    "end": "951120"
  },
  {
    "text": "basically the STD string Destructor because as I said Droid guard is written",
    "start": "951120",
    "end": "957420"
  },
  {
    "text": "in simplest groups and there are some optimizations that are done through STD string and here it's the aligning of the",
    "start": "957420",
    "end": "965579"
  },
  {
    "text": "destructor of STD string here you have on the right hand side Diablo education",
    "start": "965579",
    "end": "972060"
  },
  {
    "text": "of your dni object because basically when you want to write a value in a",
    "start": "972060",
    "end": "977459"
  },
  {
    "text": "register of the VM you have to disallocate the previous value so here they are safely removing the",
    "start": "977459",
    "end": "984959"
  },
  {
    "text": "produce value and then on the bottom you have a MBA that will encode the actual",
    "start": "984959",
    "end": "990779"
  },
  {
    "text": "value so here just to give you an idea of how it can looks like to reverse engineering",
    "start": "990779",
    "end": "997740"
  },
  {
    "text": "so basically in the drawing Gap VM you have a dedicated Handler that can be",
    "start": "997740",
    "end": "1003860"
  },
  {
    "text": "used to perform Cisco to perform arithmetical operation to perform gni",
    "start": "1003860",
    "end": "1009259"
  },
  {
    "text": "called and so on and here is a basic block that will initialize the the",
    "start": "1009259",
    "end": "1015620"
  },
  {
    "text": "different Handler so basically they are storing a pointer into the VM object",
    "start": "1015620",
    "end": "1022399"
  },
  {
    "text": "so now regarding the execution of the by code you have basically a sequence of VM",
    "start": "1022399",
    "end": "1029720"
  },
  {
    "text": "Handler that are used to perform some computation or some check on the device",
    "start": "1029720",
    "end": "1035240"
  },
  {
    "text": "so the first Handler is used to read the for instance a register then you will",
    "start": "1035240",
    "end": "1043160"
  },
  {
    "text": "you will reserve the symbol that is associated with a buffer clock get time",
    "start": "1043160",
    "end": "1048679"
  },
  {
    "text": "and so on and basically all the sequence is used to detect uh whether the device",
    "start": "1048679",
    "end": "1056480"
  },
  {
    "text": "is sorry whether the application is under debugging because basically you",
    "start": "1056480",
    "end": "1062240"
  },
  {
    "text": "can compute the time between you the first call to clock get time and the second call to block date time you can",
    "start": "1062240",
    "end": "1069080"
  },
  {
    "text": "determine whether it takes too much time on it so here you have a sequence of Handler and you have the same for",
    "start": "1069080",
    "end": "1075860"
  },
  {
    "text": "instance with the cooking or to detect to detect a root on the device",
    "start": "1075860",
    "end": "1082840"
  },
  {
    "text": "now about what kind of check are done to",
    "start": "1082840",
    "end": "1088039"
  },
  {
    "text": "detect food so once we manage somehow to identify the different Handler and we notify uh",
    "start": "1088039",
    "end": "1095960"
  },
  {
    "text": "how the byte code Works within the VM we can try to Analyze This bytecode",
    "start": "1095960",
    "end": "1102559"
  },
  {
    "text": "so here is an example of a sequence of of the die cut so actually",
    "start": "1102559",
    "end": "1109100"
  },
  {
    "text": "it's just a representation it's I mean it's from reverse engineering Dynamic analysis and so on but basically",
    "start": "1109100",
    "end": "1116000"
  },
  {
    "text": "there is an example where they are checking whether the data local x-bin",
    "start": "1116000",
    "end": "1121280"
  },
  {
    "text": "exists so first they are calling the read buffer VM Handler that decode the",
    "start": "1121280",
    "end": "1129200"
  },
  {
    "text": "string data local xbin and then they are calling the cool function Handler that",
    "start": "1129200",
    "end": "1135559"
  },
  {
    "text": "will be used to perform a ciscal associated with f access at so actually",
    "start": "1135559",
    "end": "1141020"
  },
  {
    "text": "F access at is not hard coded in the in the in the VM it's just a result of the",
    "start": "1141020",
    "end": "1148880"
  },
  {
    "text": "execution of the bytecode so among the different Czech to detect",
    "start": "1148880",
    "end": "1154700"
  },
  {
    "text": "uh if it's a rooted device we have the classical one so data locality and PS3",
    "start": "1154700",
    "end": "1159740"
  },
  {
    "text": "and so on so nothing very fancy I will say on this point uh same you have some",
    "start": "1159740",
    "end": "1166280"
  },
  {
    "text": "system property check so did just some yeah some strings that can notify",
    "start": "1166280",
    "end": "1172900"
  },
  {
    "text": "and basically to determine whether there are some presence of a happy eye looking",
    "start": "1172900",
    "end": "1179720"
  },
  {
    "text": "they are checking if some libraries are present in the memory space of a Droid",
    "start": "1179720",
    "end": "1185240"
  },
  {
    "text": "gout so here is an example where they are the checking if",
    "start": "1185240",
    "end": "1190419"
  },
  {
    "text": "they expose is present so you have the same for free that I",
    "start": "1190539",
    "end": "1196400"
  },
  {
    "text": "learned for lips and organ and so on the interesting point that I found when",
    "start": "1196400",
    "end": "1202580"
  },
  {
    "text": "reverse engineering this die cut is that basically they are also able to detect uh whether the device has been infected",
    "start": "1202580",
    "end": "1210020"
  },
  {
    "text": "with Pegasus so there is some kind of iuc to detect if there are some presence",
    "start": "1210020",
    "end": "1215299"
  },
  {
    "text": "of pages which is can be quite rare because it's not like the normal way of",
    "start": "1215299",
    "end": "1221240"
  },
  {
    "text": "rooting your device but they are able to detect it in addition to this check they are doing",
    "start": "1221240",
    "end": "1227660"
  },
  {
    "text": "some kind of telemetry to collect information about the device and about the environment and to send this",
    "start": "1227660",
    "end": "1235160"
  },
  {
    "text": "information to the Google backend that will perform some Advent check and based",
    "start": "1235160",
    "end": "1240320"
  },
  {
    "text": "on this information so it's a kind of trade-off to find between checking if for instance this Library",
    "start": "1240320",
    "end": "1247580"
  },
  {
    "text": "are present during the execution where you get basically a Boolean value true or false and collecting information",
    "start": "1247580",
    "end": "1255400"
  },
  {
    "text": "about the environment of the device so they are collecting information about",
    "start": "1255400",
    "end": "1261140"
  },
  {
    "text": "for instance the zygote process they are",
    "start": "1261140",
    "end": "1266240"
  },
  {
    "text": "collecting information about the system properties related to the bootloader",
    "start": "1266240",
    "end": "1271840"
  },
  {
    "text": "they are also collecting information about kernel info and so on but they",
    "start": "1271840",
    "end": "1276919"
  },
  {
    "text": "need to find a trade-off between collecting everything which can be which",
    "start": "1276919",
    "end": "1282500"
  },
  {
    "text": "can cause a lot of data to send and doing Boolean checked that can be",
    "start": "1282500",
    "end": "1288020"
  },
  {
    "text": "somehow easy to bypass because basically if you manage to bypass the c-score that's that's done so here you don't",
    "start": "1288020",
    "end": "1295760"
  },
  {
    "text": "know actually how it is really used in the Google backend which is near mine",
    "start": "1295760",
    "end": "1301640"
  },
  {
    "text": "the basic integrity and the CTS profile match so here is another list of information",
    "start": "1301640",
    "end": "1309520"
  },
  {
    "text": "on the top here you have also the certificate chain that is used to",
    "start": "1309520",
    "end": "1315320"
  },
  {
    "text": "perform the hardware attestation so the hardware decision is not something very magic in that net it's come from a",
    "start": "1315320",
    "end": "1323360"
  },
  {
    "text": "public API that developer can also use and they are basically sending the world",
    "start": "1323360",
    "end": "1329840"
  },
  {
    "text": "certificate certification chain to the Google backend that check that the chain",
    "start": "1329840",
    "end": "1335480"
  },
  {
    "text": "is is valid and has not been corrupted and that helps the bootloader is log or",
    "start": "1335480",
    "end": "1340640"
  },
  {
    "text": "not uh so to summarize uh Droid guard collect different information about the",
    "start": "1340640",
    "end": "1347659"
  },
  {
    "text": "device by running a dedicated bytecode uh in a VM that is updated every two",
    "start": "1347659",
    "end": "1354500"
  },
  {
    "text": "weeks and this final token is compiled from Boolean check that verify whether",
    "start": "1354500",
    "end": "1362600"
  },
  {
    "text": "this file is present or not or if the library is present in memory or not and",
    "start": "1362600",
    "end": "1368360"
  },
  {
    "text": "from Telemetry data that basically are a collection of",
    "start": "1368360",
    "end": "1374360"
  },
  {
    "text": "information about the device and you don't know exactly how it is used by the",
    "start": "1374360",
    "end": "1379820"
  },
  {
    "text": "Google backend to to to check the Integrity of the",
    "start": "1379820",
    "end": "1385039"
  },
  {
    "text": "device foreign actually safety net and",
    "start": "1385039",
    "end": "1391960"
  },
  {
    "text": "use a design on a VM and a bygone but actually Google",
    "start": "1391960",
    "end": "1399200"
  },
  {
    "text": "use this design to run different kind of backgrounds so when I analyze the safety",
    "start": "1399200",
    "end": "1405620"
  },
  {
    "text": "net I was focused on a byte code that aim at checking the Integrity of the",
    "start": "1405620",
    "end": "1411260"
  },
  {
    "text": "device but they are also able to run a dedicated by God for instance to check",
    "start": "1411260",
    "end": "1418100"
  },
  {
    "text": "during the device enrollment with your Google account whether you are a bot or",
    "start": "1418100",
    "end": "1424640"
  },
  {
    "text": "not for instance and there are there are different byte code dedicated for different action on the device so Droid",
    "start": "1424640",
    "end": "1432799"
  },
  {
    "text": "guard provide all the design to run Google back Google by code on your",
    "start": "1432799",
    "end": "1439940"
  },
  {
    "text": "device with different layer of obfuscation now when one question is how much uh",
    "start": "1439940",
    "end": "1448580"
  },
  {
    "text": "what is the cost for it of this kind of reverse engineering so definitely is very difficult and I took several months",
    "start": "1448580",
    "end": "1455900"
  },
  {
    "text": "to it so I won't say it's very easy and it's just a matter of two days no it takes months and you have to deal with",
    "start": "1455900",
    "end": "1462679"
  },
  {
    "text": "the update you have to deal with different layer of application so it's not very easy and so I had to develop",
    "start": "1462679",
    "end": "1470620"
  },
  {
    "text": "some tools to do that I also use a pre-bit tool like like qbdl for",
    "start": "1470620",
    "end": "1477679"
  },
  {
    "text": "simplifying the the MBR also use msint",
    "start": "1477679",
    "end": "1483159"
  },
  {
    "text": "that that is very efficient for simplifying the MDA uh and I also",
    "start": "1483159",
    "end": "1489740"
  },
  {
    "text": "developed some dedicated tool for instance to uh do some kind of code lifting so instead of reverse",
    "start": "1489740",
    "end": "1496520"
  },
  {
    "text": "engineering a complex function I just extract the piece of code that I",
    "start": "1496520",
    "end": "1502039"
  },
  {
    "text": "were interesting and I just run it outside of dry garden doing so I was not",
    "start": "1502039",
    "end": "1507980"
  },
  {
    "text": "uh I did not have to reverse every instruction basically I just have to run the quite piece of code",
    "start": "1507980",
    "end": "1515960"
  },
  {
    "text": "so in terms of how many days weeks or months it takes so I'm I did that on my",
    "start": "1515960",
    "end": "1522740"
  },
  {
    "text": "spare time during weekend and quite early in the morning but if I would have",
    "start": "1522740",
    "end": "1528020"
  },
  {
    "text": "to give a number of weeks I would say that just to get an overview of the VM",
    "start": "1528020",
    "end": "1534679"
  },
  {
    "text": "and to be able to to to to play with the buy card it took me",
    "start": "1534679",
    "end": "1541279"
  },
  {
    "text": "more or less five weeks and on the top of that you can add two weeks for",
    "start": "1541279",
    "end": "1546500"
  },
  {
    "text": "developing your tool set and then once you have everything ready",
    "start": "1546500",
    "end": "1552760"
  },
  {
    "text": "in the end uh I managed to reverse a new version of the VM in a couple of hours",
    "start": "1552760",
    "end": "1561880"
  },
  {
    "text": "so safety net is well designed well protected and it's difficult to reverse",
    "start": "1562960",
    "end": "1569620"
  },
  {
    "text": "but I manage to bypass the basic integrative flag without my disk hide",
    "start": "1569620",
    "end": "1577720"
  },
  {
    "text": "regarding the CTF profile it involves the bootloader statues and it's out it",
    "start": "1577720",
    "end": "1583340"
  },
  {
    "text": "was out of scope of my research but uh now what are the limit of the",
    "start": "1583340",
    "end": "1590179"
  },
  {
    "text": "design of this net first off the Droid guard run in a",
    "start": "1590179",
    "end": "1596720"
  },
  {
    "text": "dedicated process that is different from the application",
    "start": "1596720",
    "end": "1602080"
  },
  {
    "text": "that ask for the request which means that when they are saying",
    "start": "1602080",
    "end": "1608059"
  },
  {
    "text": "that they are able to detect a happy eye hooking that's true but that's only true",
    "start": "1608059",
    "end": "1614840"
  },
  {
    "text": "in the process of droid guard they are not able to detect for instance if an",
    "start": "1614840",
    "end": "1621799"
  },
  {
    "text": "attacker is running Freda in the hub developer so all the check are done in a",
    "start": "1621799",
    "end": "1628940"
  },
  {
    "text": "dedicated process that is different from the original process of the of the",
    "start": "1628940",
    "end": "1635000"
  },
  {
    "text": "application that's why when you are enabling enabling the magic",
    "start": "1635000",
    "end": "1641659"
  },
  {
    "text": "ID you just have to Target Two processed by passive net the first one is GMS car",
    "start": "1641659",
    "end": "1648140"
  },
  {
    "text": "and the second one is the one that ends with unstable and that is actually drag",
    "start": "1648140",
    "end": "1654200"
  },
  {
    "text": "out and that's these two process that needs to be targeted because actually Droid guard does not check the Integrity",
    "start": "1654200",
    "end": "1661460"
  },
  {
    "text": "of the original process they are doing all the check within the dedicated",
    "start": "1661460",
    "end": "1667220"
  },
  {
    "text": "process associated with dwayegar so just uh there are some kind of Easter",
    "start": "1667220",
    "end": "1674120"
  },
  {
    "text": "eggs when you are reverse engineering the the bike card which are associated",
    "start": "1674120",
    "end": "1679820"
  },
  {
    "text": "with Drury guard hello and you have fancy message but basically if you are",
    "start": "1679820",
    "end": "1685400"
  },
  {
    "text": "the ID after the email is unique so it means that each time you are running the",
    "start": "1685400",
    "end": "1691940"
  },
  {
    "text": "bytecode there are the different email address which means that they will be able to notify your device when you send",
    "start": "1691940",
    "end": "1699679"
  },
  {
    "text": "an email to this address so that's why I actually did not send an email to this",
    "start": "1699679",
    "end": "1706580"
  },
  {
    "text": "other resume even though I I contacted Google to to share this different",
    "start": "1706580",
    "end": "1712400"
  },
  {
    "text": "research last World about the hardware attestation so actually as I said at the",
    "start": "1712400",
    "end": "1720320"
  },
  {
    "text": "beginning Google introduced Hardware decision to to to",
    "start": "1720320",
    "end": "1725919"
  },
  {
    "text": "improve uh the way of how setting Network because basically otherwise it",
    "start": "1725919",
    "end": "1732380"
  },
  {
    "text": "can be more or less easy to bypass and actually automatic station is nothing uh",
    "start": "1732380",
    "end": "1737419"
  },
  {
    "text": "so it's not something magic it's just this kind of code that is running",
    "start": "1737419",
    "end": "1744200"
  },
  {
    "text": "through the different Handler of the VM but in the end the important point is",
    "start": "1744200",
    "end": "1750520"
  },
  {
    "text": "key star get certification which return a certification that is likely signed by",
    "start": "1750520",
    "end": "1758539"
  },
  {
    "text": "a trusted component and more precisely true Zone that contains the status of",
    "start": "1758539",
    "end": "1764480"
  },
  {
    "text": "the bootloader so the statues of the book reader is signed on the hardware part and is actually collected through",
    "start": "1764480",
    "end": "1773360"
  },
  {
    "text": "get certification that is a part of the Telemetry data so thank you for your attention I",
    "start": "1773360",
    "end": "1781039"
  },
  {
    "text": "uploaded some samples of the VM and the bytecode on gay Tab and now I would be",
    "start": "1781039",
    "end": "1787940"
  },
  {
    "text": "very happy to to answer your question if you have some thank you",
    "start": "1787940",
    "end": "1794200"
  },
  {
    "text": "[Music]",
    "start": "1794230",
    "end": "1797299"
  },
  {
    "text": "[Music]",
    "start": "1801140",
    "end": "1804229"
  }
]