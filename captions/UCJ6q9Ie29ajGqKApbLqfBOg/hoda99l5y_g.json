[
  {
    "text": "welcome to the uh next session uh one reminder as you're leaving the session",
    "start": "160",
    "end": "5359"
  },
  {
    "text": "you can B uh scan your badge at these pods that are at the doors in order to be able to provide us with some",
    "start": "5359",
    "end": "10759"
  },
  {
    "text": "evaluation on the way out on uh on Jason's presentation so at that point I will let uh Jason rber give his",
    "start": "10759",
    "end": "18199"
  },
  {
    "text": "presentation on Virtual decator okay so um yes as you said my",
    "start": "18199",
    "end": "27080"
  },
  {
    "text": "name is Jason rabber with the hex effect and today I want to go over an automation technique to remove virtual",
    "start": "27080",
    "end": "33960"
  },
  {
    "text": "ausc from malware so here's a quick overview um",
    "start": "33960",
    "end": "41800"
  },
  {
    "text": "what the heck is this type of uh software protection why we even care what is kind of the state-ofthe-art",
    "start": "41800",
    "end": "47520"
  },
  {
    "text": "what's been done my solution some uh potential future work with this product",
    "start": "47520",
    "end": "53559"
  },
  {
    "text": "and where to get the source code any questions you have so what is virtualization",
    "start": "53559",
    "end": "60000"
  },
  {
    "text": "confiscation it's a type of software protection focused mainly on um anti-reverse engineering so there's lots",
    "start": "60000",
    "end": "66640"
  },
  {
    "text": "of different protections out there from encryption to anti-debugging to anti-tamper but this one's focused just",
    "start": "66640",
    "end": "73400"
  },
  {
    "text": "on anti-reverse engineering and how it basically works is the virtual machine will create the",
    "start": "73400",
    "end": "80560"
  },
  {
    "text": "bik code from the original code okay and then with the current Technologies out there they'll actually randomize it so",
    "start": "80560",
    "end": "87479"
  },
  {
    "text": "each time there's a protection it's a different virtual machine so the op code or the buy code that's generated from the original code is going to change",
    "start": "87479",
    "end": "94200"
  },
  {
    "text": "each time so as you see a lot of times they'll even pick a risk type",
    "start": "94200",
    "end": "100799"
  },
  {
    "text": "architecture so I've looked at this in the past when working with the Air Force or working with some um defense",
    "start": "100799",
    "end": "107159"
  },
  {
    "text": "contractors and looking at malware and finding these types of protections and one thing that is you",
    "start": "107159",
    "end": "113079"
  },
  {
    "text": "know if if you play around with the protection is the original binary is lost at that point so like you know if",
    "start": "113079",
    "end": "118799"
  },
  {
    "text": "you're dealing with encryption or something along those lines and you have a stealthy way to probe memory and dump the memory you can reverse engineer out",
    "start": "118799",
    "end": "125759"
  },
  {
    "text": "the original binary into this semi C code or whatever it was originally but",
    "start": "125759",
    "end": "131239"
  },
  {
    "text": "with this one it's a lot tougher okay so again why do we care is",
    "start": "131239",
    "end": "138560"
  },
  {
    "text": "cuz in looking at it it's a really tough one I mean really tough so um if you do",
    "start": "138560",
    "end": "145519"
  },
  {
    "text": "like from a static analysis perspective only when you disassemble it of course if you got bite code the disassembler",
    "start": "145519",
    "end": "151440"
  },
  {
    "text": "doesn't understand that bite code right especially if it's randomized each each and every time so it's hard to find that",
    "start": "151440",
    "end": "157920"
  },
  {
    "text": "b code and you have to spend re time to go find it then from there if you want to take the dynamic and static you can",
    "start": "157920",
    "end": "165000"
  },
  {
    "text": "start looking at the run trce from it problem with that is um you got a vast number of instructions and it's hard to",
    "start": "165000",
    "end": "171920"
  },
  {
    "text": "figure out where the virtual machine is versus the actual interpretation of those bite",
    "start": "171920",
    "end": "178400"
  },
  {
    "text": "Cod uh and case in point um on this project um one of the project or one of",
    "start": "178400",
    "end": "184440"
  },
  {
    "text": "the programs that I used was the and I took one instruction and I turned up the",
    "start": "184440",
    "end": "189720"
  },
  {
    "text": "VM completely with all its bells and whistles and it went and generated a run",
    "start": "189720",
    "end": "195000"
  },
  {
    "text": "trace for that one instruction of around 3 gig so that's pretty hard to go through 3 gig and try to figure out what",
    "start": "195000",
    "end": "201799"
  },
  {
    "text": "it's doing [Applause] right",
    "start": "201799",
    "end": "206799"
  },
  {
    "text": "so uh I've done it in the past is essentially slogged which that means",
    "start": "208319",
    "end": "214040"
  },
  {
    "text": "start reverse engineering it pull up Dynamic static find the bike code once you find The Bu code start reversing the",
    "start": "214040",
    "end": "220879"
  },
  {
    "text": "VM so that you can create your own little disassembler which is fairly fast but still it could take a while",
    "start": "220879",
    "end": "226920"
  },
  {
    "text": "depending on how complex the VM is itself and how complex the B code is and then what I found out you know a",
    "start": "226920",
    "end": "234560"
  },
  {
    "text": "long time ago when I was looking at this stuff is that the disassembly that I created and the work that I put into",
    "start": "234560",
    "end": "240239"
  },
  {
    "text": "creating it and breaking at one particular protection I was given another protection and it wasn't the",
    "start": "240239",
    "end": "246040"
  },
  {
    "text": "same and that's what I come back to where it's jittered each and every time so breake ons break everywhere doesn't",
    "start": "246040",
    "end": "251360"
  },
  {
    "text": "work so I started thinking about you know some sort of an automation technique would be",
    "start": "251360",
    "end": "257078"
  },
  {
    "text": "nice okay so um here's some of the state-of-the-art work that's been done",
    "start": "260680",
    "end": "265800"
  },
  {
    "text": "out there I could spend an hour on each one of these um so I put it on this slide just so to give you some reference",
    "start": "265800",
    "end": "271759"
  },
  {
    "text": "you can go check it out and read up on it if you're really interested and they've had some pretty good success but",
    "start": "271759",
    "end": "277320"
  },
  {
    "text": "what I was trying to come up with was a solution that I keep getting the wrong thing it would have more Automation and",
    "start": "277320",
    "end": "284960"
  },
  {
    "text": "be complete so I came up with this virtual the off skater and what it does is it",
    "start": "284960",
    "end": "290759"
  },
  {
    "text": "use a run trace from a debugger obviously and filters out the virtual",
    "start": "290759",
    "end": "296000"
  },
  {
    "text": "machine interpretation okay and what you're left with is the sem Antics and syntax of the original bite code as it's",
    "start": "296000",
    "end": "302479"
  },
  {
    "text": "been translated and executed and I also wanted to be architecture agnostic so doesn't matter",
    "start": "302479",
    "end": "310240"
  },
  {
    "text": "how many uh jittering of the virtual machine there is it'll still work on all",
    "start": "310240",
    "end": "316160"
  },
  {
    "text": "and all the different products too that are out there and of course the way it works is through recursive clustering and I came",
    "start": "316160",
    "end": "323080"
  },
  {
    "text": "up with a people optimization I'll talk more about that as we come to it so here's kind of a flow of how it works",
    "start": "323080",
    "end": "329520"
  },
  {
    "text": "right right so again create the parse uh create the run trace then feed it into the virtual Dey Gator it'll",
    "start": "329520",
    "end": "335960"
  },
  {
    "text": "create a uh it'll parse it and create a little database it'll start clustering it'll recursively cluster until it",
    "start": "335960",
    "end": "341600"
  },
  {
    "text": "cannot find anymore okay then the idea is you assemble it which is part of the",
    "start": "341600",
    "end": "347440"
  },
  {
    "text": "repackaging of the binary and then I'm going to run a little poo optimization the reason I say poo optimization is I",
    "start": "347440",
    "end": "353280"
  },
  {
    "text": "used to write compilers for Texas Instruments way back when and in the code generator some times in the",
    "start": "353280",
    "end": "360160"
  },
  {
    "text": "compiler you have to punt on certain things you just don't understand so at the last phase of the code generator is",
    "start": "360160",
    "end": "366039"
  },
  {
    "text": "a people Optimizer in case you end up with instructions like uh move zero eax",
    "start": "366039",
    "end": "372280"
  },
  {
    "text": "or something like that and then repeated and it's like why would the compiler do that well that's a whole another talk",
    "start": "372280",
    "end": "377639"
  },
  {
    "text": "but we have a people optimization to go through and my theory was taking a CIS",
    "start": "377639",
    "end": "382919"
  },
  {
    "text": "architecture and converting over to a risk architecture there's going to be some instructions that the risk doesn't",
    "start": "382919",
    "end": "388440"
  },
  {
    "text": "have a one toone so it's going to generate some bloat and so that was the whole idea between that or for that so",
    "start": "388440",
    "end": "395720"
  },
  {
    "text": "talking about the parser I picked a couple common ones out there oi one and two one and two immunity and wind debug",
    "start": "395720",
    "end": "403880"
  },
  {
    "text": "the idea is you know when it parses it in it creat creates an XML parser or XML",
    "start": "403880",
    "end": "409680"
  },
  {
    "text": "database and for python there's a nice little XML parser so I can use in reference pull out instructions or as",
    "start": "409680",
    "end": "416240"
  },
  {
    "text": "you're looking at run traces you're looking at register effects and what the results are those types of things then",
    "start": "416240",
    "end": "421479"
  },
  {
    "text": "the other idea is you know with the source code being available um if you have your own custom hypervisor Hardware",
    "start": "421479",
    "end": "426919"
  },
  {
    "text": "emulator once upon a time I had one when I was in the Air Force and they're pretty useful but they're pretty",
    "start": "426919",
    "end": "432400"
  },
  {
    "text": "expensive so you can customize them this slide again you know what XML",
    "start": "432400",
    "end": "437840"
  },
  {
    "text": "looks like here's kind of the format um the point that I want to talk about is when I was developing this project I",
    "start": "437840",
    "end": "444000"
  },
  {
    "text": "really wanted a way of testing so I created this flag called DHT for verify",
    "start": "444000",
    "end": "450560"
  },
  {
    "text": "and what that means is after I've parsed it in as an XML file you can run this- T and what it does is it reverses it so",
    "start": "450560",
    "end": "457319"
  },
  {
    "text": "then you'll create recreate the run trace and then the recreated run trace is going to be verify txt and you can",
    "start": "457319",
    "end": "463800"
  },
  {
    "text": "diff it with your original so if you're adding your own debugger to this thing",
    "start": "463800",
    "end": "468840"
  },
  {
    "text": "and you want to test it that's one way of doing it and you'll see where I talk about back tracing I also it's it's",
    "start": "468840",
    "end": "474840"
  },
  {
    "text": "again more testing in ways of verifying you're not screwing anything up it Sav things a lot of time",
    "start": "474840",
    "end": "482680"
  },
  {
    "text": "oops um hang on a",
    "start": "483960",
    "end": "491560"
  },
  {
    "text": "sec so the clustering this is kind of the con High Lev conceptual idea that I was coming up",
    "start": "492039",
    "end": "497919"
  },
  {
    "text": "with when I proposed this project was so over on the far left hand side you see",
    "start": "497919",
    "end": "503240"
  },
  {
    "text": "before the the P one that's your run trace okay so you got all these instructions so I come up with a unique",
    "start": "503240",
    "end": "509039"
  },
  {
    "text": "way come to that in another slide about how I identify what a cluster is okay",
    "start": "509039",
    "end": "514640"
  },
  {
    "text": "and from there the idea is like say the first pass I create these clusters that are based on very small Snippets of",
    "start": "514640",
    "end": "520800"
  },
  {
    "text": "assembly code and if I see those same Snippets of assembly code repeated I",
    "start": "520800",
    "end": "526040"
  },
  {
    "text": "rename I I name them the same one so in this case think of you see cluster B where it's got the move and the compare",
    "start": "526040",
    "end": "532320"
  },
  {
    "text": "and the call everywhere that those exact same structions come up again in the run trace I label it as B and of course you",
    "start": "532320",
    "end": "539760"
  },
  {
    "text": "see a so then when we go to the next phase or the next pass of the clustering",
    "start": "539760",
    "end": "544880"
  },
  {
    "text": "I start taking those A and B and find if there's any others so if in Python basically I",
    "start": "544880",
    "end": "551399"
  },
  {
    "text": "create a hash table and from that hash table I just look and see if it's being duplicated you know so if I look at the",
    "start": "551399",
    "end": "558640"
  },
  {
    "text": "Key of ab and say it was AB being repeated any anywhere else if it is I",
    "start": "558640",
    "end": "563880"
  },
  {
    "text": "have a cluster so I'll create ABAB the idea is as you can see on the fourth path",
    "start": "563880",
    "end": "570600"
  },
  {
    "text": "is that um the large clusters are going to be my virtual machine okay and so I can just",
    "start": "570600",
    "end": "577640"
  },
  {
    "text": "weed those out and get rid of them and not paying any attention and what's left is d& which is what I believe is going",
    "start": "577640",
    "end": "583120"
  },
  {
    "text": "to be the translated bik code and then that's the part that I want to reverse engineering I'm interested in",
    "start": "583120",
    "end": "591279"
  },
  {
    "text": "right okay and I already kind of walked you through clustering okay so again if you pull",
    "start": "592560",
    "end": "598120"
  },
  {
    "text": "down the source code and you start playing with this guy here's the nomenclature um there might be a better",
    "start": "598120",
    "end": "604040"
  },
  {
    "text": "way of doing it but this is what made sense to me at the time um I use the alphabet to represent the round of",
    "start": "604040",
    "end": "610839"
  },
  {
    "text": "clustering so in this case I'm on the third round that's C uh two is just a",
    "start": "610839",
    "end": "616240"
  },
  {
    "text": "unique identifier so you're going to have c 1 2 3 4 5 all the way up until we run out um we're going to run out of",
    "start": "616240",
    "end": "623959"
  },
  {
    "text": "numbers but so then the depth is um it's a visual clue as to when you look at the",
    "start": "623959",
    "end": "630399"
  },
  {
    "text": "final results what I wanted to do was show not depth is in rounds but more in depth in how many cluster or how many",
    "start": "630399",
    "end": "637279"
  },
  {
    "text": "instructions are under one cluster and I don't make more sense when I showed you like code virtualizer or VM protect and",
    "start": "637279",
    "end": "644279"
  },
  {
    "text": "eight represents how many Instructions make up this particular cluster right so we're on round three this is the number",
    "start": "644279",
    "end": "652079"
  },
  {
    "text": "the second cluster in round three and it has eight instructions in that cluster",
    "start": "652079",
    "end": "659279"
  },
  {
    "text": "okay so as part of the project I said well before I run off and start looking at VM protect or any malware or anything",
    "start": "659560",
    "end": "665639"
  },
  {
    "text": "along those lines that has these types of protections I created a very simple test case to verify and test the whole",
    "start": "665639",
    "end": "672360"
  },
  {
    "text": "clustering idea so it's two two Loops two nested loops and as you can see from",
    "start": "672360",
    "end": "678240"
  },
  {
    "text": "the logic that this instruction is only going to execute once the move eax dead beef",
    "start": "678240",
    "end": "685600"
  },
  {
    "text": "right um this slide you know I put it on here I got a lot of notes underneath it",
    "start": "685600",
    "end": "692240"
  },
  {
    "text": "so I'm going to put this presentation up on GitHub you can download it with the source code read those notes and you'll",
    "start": "692240",
    "end": "697440"
  },
  {
    "text": "kind of understand again it's a diagnostic for me there's a lot of this that will fly across the screen for each",
    "start": "697440",
    "end": "703240"
  },
  {
    "text": "round of clustering you're going to see all this type of stuff but it's easy to track what files are being generated if",
    "start": "703240",
    "end": "708920"
  },
  {
    "text": "something happens wrong or you're debugging your code this could save you so the end result of that little",
    "start": "708920",
    "end": "715680"
  },
  {
    "text": "short example you can see you know we only got down to f um as far as",
    "start": "715680",
    "end": "721079"
  },
  {
    "text": "clustering rounds go and you can see F jumps out at you as a it's got 47 instructions and it's being repeated you",
    "start": "721079",
    "end": "727240"
  },
  {
    "text": "could see down a little bit uh below again and with the larger ones that we're looking at real protections",
    "start": "727240",
    "end": "733639"
  },
  {
    "text": "there's going to be a ton of them right but again this is not protected this is just a loop but really what I wanted to see was would the clustering would it",
    "start": "733639",
    "end": "739920"
  },
  {
    "text": "pull out the move eax dead beef is a unique instruction and it did so then",
    "start": "739920",
    "end": "746160"
  },
  {
    "text": "that said well okay it's time for something a little more interesting so what I did was I wrote about 30 or 40",
    "start": "746160",
    "end": "752279"
  },
  {
    "text": "different assembly instructions here's one of them called or ax c0 A1 the idea",
    "start": "752279",
    "end": "759199"
  },
  {
    "text": "is whatever's in the ax when it does this operation it'll become dead it's easy to debug so when I ran it through the code",
    "start": "759199",
    "end": "766800"
  },
  {
    "text": "virtualizer I can't even remember how many instructions it generated but you can see that it clustered K7 and K8 and",
    "start": "766800",
    "end": "774040"
  },
  {
    "text": "in that cluster there's 358 instructions and then the other one",
    "start": "774040",
    "end": "779199"
  },
  {
    "text": "is 3,196 this was kind of the theory that I had this would actually work right so",
    "start": "779199",
    "end": "784839"
  },
  {
    "text": "the virtual machine would be detectable and we' be able to weed it out and what would be left is what we're interested",
    "start": "784839",
    "end": "790360"
  },
  {
    "text": "in and so when I did a little reing there a little bit of code off youc here but you can see at 49d",
    "start": "790360",
    "end": "798760"
  },
  {
    "text": "064 I have no mouse that's cool um you'll see that there's an equivalent or",
    "start": "798760",
    "end": "804079"
  },
  {
    "text": "instruction and if you debug it you will see that uh uh what's on the stack becomes dead",
    "start": "804079",
    "end": "809500"
  },
  {
    "text": "[Music] okay so I wanted to take a little bit of a deeper dive it's I think fairly simple",
    "start": "809500",
    "end": "817680"
  },
  {
    "text": "uh understanding how the clustering works and stuff but so the idea is the very first and and I had to kind of",
    "start": "817680",
    "end": "823639"
  },
  {
    "text": "figure out my window size and honestly when I started this project when I wrote The Proposal I said I have no idea how",
    "start": "823639",
    "end": "830079"
  },
  {
    "text": "I'm going to Cluster exactly but as I dive into it I'll figure it out and that's exactly what happened so when I I",
    "start": "830079",
    "end": "836759"
  },
  {
    "text": "created a hash table on all the uh virtual addresses okay so what's worth",
    "start": "836759",
    "end": "842440"
  },
  {
    "text": "explaining here is do you see where it says 41 3d5 d8 DB all right we look at",
    "start": "842440",
    "end": "848600"
  },
  {
    "text": "those line numbers what that means is that line number is the line number it is in the run trace so 44 77 115 148",
    "start": "848600",
    "end": "858600"
  },
  {
    "text": "again that's where it's that that exact instruction is being executed in the run trace of course d8 and DB follow that",
    "start": "858600",
    "end": "866320"
  },
  {
    "text": "right but what's interesting is look at De it also has sequential numbers except it",
    "start": "866320",
    "end": "871880"
  },
  {
    "text": "starts with a 14 so I thought I wonder if that's a basic block right A change in a basic",
    "start": "871880",
    "end": "878040"
  },
  {
    "text": "block and when I disassembled it you can see that de is a new basic block so I",
    "start": "878040",
    "end": "884920"
  },
  {
    "text": "said well my first pass on this guy I'm going to create this uh part of my",
    "start": "884920",
    "end": "890399"
  },
  {
    "text": "algorithm is is compressing basic blocks from the Run trce Okay so that same",
    "start": "890399",
    "end": "896120"
  },
  {
    "text": "example we see up above okay you see how it's got three instructions and they're all sequential and they're the same",
    "start": "896120",
    "end": "902079"
  },
  {
    "text": "length all right so then what I do is I say well that's a cluster that's the very first cluster in this example right",
    "start": "902079",
    "end": "908600"
  },
  {
    "text": "so a16 pound 3 is saying that you know for round one a right this is the 16th",
    "start": "908600",
    "end": "916040"
  },
  {
    "text": "cluster because this is actually a real example so I just copied and paste uh and it has three instructions in it",
    "start": "916040",
    "end": "921920"
  },
  {
    "text": "right so that's the very first pass is this compressing of basic blocks to to get it faster right and so then once I'm",
    "start": "921920",
    "end": "928720"
  },
  {
    "text": "done with compressing basic blocks I move into the second phase of the clustering which is the recursion where",
    "start": "928720",
    "end": "934279"
  },
  {
    "text": "I just do this greedy clustering it's really pretty simple actually cuz I create another frequency graph from the",
    "start": "934279",
    "end": "940440"
  },
  {
    "text": "next round of clustering right so I can see A1 pound 2 A2B 3 okay I look in my",
    "start": "940440",
    "end": "949160"
  },
  {
    "text": "hash table and I say is that ever being repeated and in this case it is right",
    "start": "949160",
    "end": "955040"
  },
  {
    "text": "follow you know directly underneath it so I say I got a new cluster which is round two which is B1 and then pound",
    "start": "955040",
    "end": "960959"
  },
  {
    "text": "five pound five being there's two instructions and three instructions simple addition now I've got my five",
    "start": "960959",
    "end": "966560"
  },
  {
    "text": "instructions underneath right so and and this just kind of repeats until again I can't find any",
    "start": "966560",
    "end": "973490"
  },
  {
    "text": "[Music] more now this step here you can comment",
    "start": "973490",
    "end": "979199"
  },
  {
    "text": "this code out if you wanted to make it really fast but I did it because again what I was talking about verification",
    "start": "979199",
    "end": "985600"
  },
  {
    "text": "this has saved my butt a number of times when looking at it if I wrote some code that was bad and I'm trying to",
    "start": "985600",
    "end": "990800"
  },
  {
    "text": "troubleshoot it sometimes debugging python code or running through a gig run trace is not easy just pinpointing where",
    "start": "990800",
    "end": "997680"
  },
  {
    "text": "I made a logic mistake so what I do is I do this back tracing which is which I reverse the process so whatever round",
    "start": "997680",
    "end": "1004160"
  },
  {
    "text": "I'm in if I'm deepen like four or five or six rounds I start decompressing it",
    "start": "1004160",
    "end": "1009399"
  },
  {
    "text": "and putting it back as in you can see right here if we were doing two rounds if you were to look at the files that",
    "start": "1009399",
    "end": "1016319"
  },
  {
    "text": "are generated it's actually like B under _ backra aorb trace.txt you look at you",
    "start": "1016319",
    "end": "1023399"
  },
  {
    "text": "see a 55 lb 2 is made up of two instructions at these two virtual addresses right so if you go to B up",
    "start": "1023399",
    "end": "1030798"
  },
  {
    "text": "above you'll see it's made up of clusters right so at the very end when",
    "start": "1030799",
    "end": "1035839"
  },
  {
    "text": "it's all done it creates a new file called final back trace and that final back Trace is the cluster so remember",
    "start": "1035839",
    "end": "1042520"
  },
  {
    "text": "that big long cluster I said K7 and it had 3,000 instructions in it",
    "start": "1042520",
    "end": "1048600"
  },
  {
    "text": "it will actually decompose it so it has all the virtual addresses and from there",
    "start": "1048600",
    "end": "1054240"
  },
  {
    "text": "I'll generate a final back Trace that will be the recreated run trace and I",
    "start": "1054240",
    "end": "1059320"
  },
  {
    "text": "can diff the two and say did I make a mistake if they match then my logic was",
    "start": "1059320",
    "end": "1064440"
  },
  {
    "text": "correct if they don't match then it's easy for me to find out where it went off into the",
    "start": "1064440",
    "end": "1070320"
  },
  {
    "text": "wheat and so one of the last steps is creating the new cluster that's kind of",
    "start": "1070320",
    "end": "1076159"
  },
  {
    "text": "obvious and then the very very last step is is I create a file called final assembly. txt that's the file is a",
    "start": "1076159",
    "end": "1083120"
  },
  {
    "text": "reverse engineer you want to analyze okay so when I showed you that example",
    "start": "1083120",
    "end": "1088159"
  },
  {
    "text": "of code virtualizer right that's the file you're looking at and you're looking at these big clusters so back to",
    "start": "1088159",
    "end": "1093880"
  },
  {
    "text": "our very simple example you see the move eax dead be standing out and that's the area that you're interested in right if",
    "start": "1093880",
    "end": "1101000"
  },
  {
    "text": "you want to not look at assembly code for whatever reason then you can also just look at the last round and the last",
    "start": "1101000",
    "end": "1107320"
  },
  {
    "text": "round is not going to have that but you'll see the virtual address and it'll stand out it become [Music]",
    "start": "1107320",
    "end": "1112400"
  },
  {
    "text": "obvious if anybody is a VI editor uh guy like myself then I put in some extra",
    "start": "1112400",
    "end": "1119919"
  },
  {
    "text": "help that's what this formatting is so in some of the examples above I didn't put it in because I want to",
    "start": "1119919",
    "end": "1126280"
  },
  {
    "text": "clutter up the the presentation but it's worth noting that you see K2 this is",
    "start": "1126280",
    "end": "1132039"
  },
  {
    "text": "again a real example K2 it's got 3,000 whatever uh it's on line 15 and 990 so",
    "start": "1132039",
    "end": "1138400"
  },
  {
    "text": "in at final assembly. txt file you're looking at so if you just want to go to",
    "start": "1138400",
    "end": "1144000"
  },
  {
    "text": "that line real quick you can do that and in the next number is the 15 which tells me what my offset is currently of course",
    "start": "1144000",
    "end": "1150280"
  },
  {
    "text": "you can in Vim look down and see what line you're currently on and then the",
    "start": "1150280",
    "end": "1155919"
  },
  {
    "text": "5,807 if you want to find out where that cluster begins in your run trace you can bring up your original run trace go to",
    "start": "1155919",
    "end": "1162559"
  },
  {
    "text": "that line and that's where it begins and then of course you can copy the",
    "start": "1162559",
    "end": "1167720"
  },
  {
    "text": "3,226 from there and then you have it but I actually make that a little bit easier cuz I created",
    "start": "1167720",
    "end": "1173760"
  },
  {
    "text": "chunking so when you're running it through at the very last when it's done and created the final. txt um file",
    "start": "1173760",
    "end": "1180520"
  },
  {
    "text": "creates a directory called chunk cluster what it does it takes all those clusters it puts these files in there so you know",
    "start": "1180520",
    "end": "1187720"
  },
  {
    "text": "the the big long clusters and look at this example here you see F34 pound 173",
    "start": "1187720",
    "end": "1192880"
  },
  {
    "text": "right so those 173 instructions I might be interested in not going and finding",
    "start": "1192880",
    "end": "1198840"
  },
  {
    "text": "offset in the run trace and figuring out where it is and copy and paste if I want to assemble it or something along those",
    "start": "1198840",
    "end": "1204000"
  },
  {
    "text": "lines so if I just want to do a static or any kind of a static analysis I can just go to that file and see it the",
    "start": "1204000",
    "end": "1210440"
  },
  {
    "text": "underscore 19 that's just the file offset in your final assembly. txt that",
    "start": "1210440",
    "end": "1215799"
  },
  {
    "text": "you're looking at what I wanted to also point out is I put ASM just because I get color",
    "start": "1215799",
    "end": "1220919"
  },
  {
    "text": "syntaxing and I like that but you can't really assemble it why because if you",
    "start": "1220919",
    "end": "1226440"
  },
  {
    "text": "know Oli debug puts offset or it uses things in its instructions that the",
    "start": "1226440",
    "end": "1232159"
  },
  {
    "text": "assembler doesn't like so then I what what I wanted to do eventually or I want",
    "start": "1232159",
    "end": "1238159"
  },
  {
    "text": "to get to the repackaging phase which means I want to assemble the final results right but I want to remove the",
    "start": "1238159",
    "end": "1244000"
  },
  {
    "text": "virtual machine and just assemble what's the good stuff right so I can start reverse engineering so then what I did",
    "start": "1244000",
    "end": "1250280"
  },
  {
    "text": "was I created a new flag called- s the concept behind that is is look at this ex this real example you say K2 and K3",
    "start": "1250280",
    "end": "1258600"
  },
  {
    "text": "clearly that's the virtual machine at work right cuz it's huge it's a cluster it found it it's repeated on multiple",
    "start": "1258600",
    "end": "1264679"
  },
  {
    "text": "lines but all that from E2 e32 to E64 all that cheddar is what you're",
    "start": "1264679",
    "end": "1270520"
  },
  {
    "text": "interested in right so I created another file if you do- s and put a some sort of",
    "start": "1270520",
    "end": "1276880"
  },
  {
    "text": "size limit what you're saying is any in any clusters that fit within a certain",
    "start": "1276880",
    "end": "1282600"
  },
  {
    "text": "range of this offset or this size put it in one file so look at K2 we're at",
    "start": "1282600",
    "end": "1291480"
  },
  {
    "text": "3,265 if I put 1300 anything that's less than or at 1300 it's going to start",
    "start": "1291480",
    "end": "1298279"
  },
  {
    "text": "creating a new file and it does that until it hits something that's larger than 1300 does that make sense so e32",
    "start": "1298279",
    "end": "1306600"
  },
  {
    "text": "and E64 and all those clusters in between get put into a file called 23.",
    "start": "1306600",
    "end": "1312039"
  },
  {
    "text": "ASM and that file is all the instructions within that range just to make it easier right cuz eventually want",
    "start": "1312039",
    "end": "1318720"
  },
  {
    "text": "to assemble that but as I started to assemble that as I said before didn't really work and I I'll come I cut",
    "start": "1318720",
    "end": "1325559"
  },
  {
    "text": "another slide to describe how I got that to work so at this point I'm using Thea",
    "start": "1325559",
    "end": "1332799"
  },
  {
    "text": "code virtualizer VM protect I'm looking at all of them and the results are great but it's like well I want something a",
    "start": "1332799",
    "end": "1338960"
  },
  {
    "text": "little more juicy than some handcrafted assembly code so I used this a program I",
    "start": "1338960",
    "end": "1345200"
  },
  {
    "text": "found called a blood alcohol calculator that tells you how many Dr drinks you need to have before you're legally drunk",
    "start": "1345200",
    "end": "1351679"
  },
  {
    "text": "so that was 77 instructions when I ran it through VM protect and code",
    "start": "1351679",
    "end": "1357000"
  },
  {
    "text": "virtualizer it was around 255,000 instructions that was the bloat when I",
    "start": "1357000",
    "end": "1362760"
  },
  {
    "text": "ran virtual de offu skater on it I was left with 40,000 instructions pretty sweet right 85% reduction but as I'm",
    "start": "1362760",
    "end": "1370880"
  },
  {
    "text": "looking at it I'm like well I really wanted it to be 77 or something similar right maybe 100 120 what the heck is",
    "start": "1370880",
    "end": "1377640"
  },
  {
    "text": "40,000 that's a lot of work right so when I started looking at it I realized",
    "start": "1377640",
    "end": "1382840"
  },
  {
    "text": "that they interleaved code ausc in with the virtual ausc so it's a it's a nested",
    "start": "1382840",
    "end": "1390000"
  },
  {
    "text": "protection and then my Poole Optimizer and it was I was thankful that I was fast on this project and was able to",
    "start": "1390000",
    "end": "1396159"
  },
  {
    "text": "meet my Milestones early because now instead of writing a simple people Optimizer I had to write a codeus de",
    "start": "1396159",
    "end": "1403640"
  },
  {
    "text": "ausc type utility right so you know here's a couple little small examples but believe me there was",
    "start": "1403640",
    "end": "1410120"
  },
  {
    "text": "I don't know literally 100 I'd say a 100 different ones what was interesting though is looking at the three different",
    "start": "1410120",
    "end": "1416679"
  },
  {
    "text": "products they were using a lot of the same things of course with x86 I mean how many kind of random code off cations",
    "start": "1416679",
    "end": "1423080"
  },
  {
    "text": "could you really come up with and these are again very simple ridiculous easy things to",
    "start": "1423080",
    "end": "1428960"
  },
  {
    "text": "do so okay so back to repackaging I use nzm I looked at masm 32 but just to",
    "start": "1428960",
    "end": "1435840"
  },
  {
    "text": "assemble a noop you had to include stuff and that didn't make sense to me so I did a",
    "start": "1435840",
    "end": "1441520"
  },
  {
    "text": "little more research and I found this one it was quite nice but again there's some massaging has to happen so the",
    "start": "1441520",
    "end": "1447880"
  },
  {
    "text": "virtual decator does that and takes out some of these key words or massages it so that it fits or makes sense so",
    "start": "1447880",
    "end": "1456000"
  },
  {
    "text": "remember I was telling about like the sections and you can assemble that whole section well that's great but it's still",
    "start": "1456000",
    "end": "1461320"
  },
  {
    "text": "more work so what I did was in the virtual Deo it creates a final file called final assembly unor n m. ASM and",
    "start": "1461320",
    "end": "1470799"
  },
  {
    "text": "that is all the formatted all the sections that fit within your range all in one file and so then you can just",
    "start": "1470799",
    "end": "1477600"
  },
  {
    "text": "assemble that guy and throw it in olly which then leads me to my people Optimizer I don't even know if that's",
    "start": "1477600",
    "end": "1483679"
  },
  {
    "text": "the right word anymore because it's not that it's another code ver you know Deus type",
    "start": "1483679",
    "end": "1489320"
  },
  {
    "text": "tool so um anyways that one's called vdor peopleo and it it's part of the",
    "start": "1489320",
    "end": "1495200"
  },
  {
    "text": "source code package you can download it but it's pretty self-explained mandatory you load up the binary you run this guy",
    "start": "1495200",
    "end": "1501640"
  },
  {
    "text": "and it'll pull out all the code off you station and leave you with something good so back to our blood alcohol",
    "start": "1501640",
    "end": "1509559"
  },
  {
    "text": "example here's five instructions that were the original instructions that were protected after removing the virtual",
    "start": "1509559",
    "end": "1515760"
  },
  {
    "text": "machine there was still 3,329 and just to represent these five instructions and all that was code offc",
    "start": "1515760",
    "end": "1523399"
  },
  {
    "text": "after running the the peole guy I got it down 359 the reality is I could probably",
    "start": "1523399",
    "end": "1528760"
  },
  {
    "text": "get it even tighter but I was running out of time so it was good enough but the point was I was able to reverse",
    "start": "1528760",
    "end": "1534279"
  },
  {
    "text": "those 359 really quick and say it was equivalent to these instructions so I'm",
    "start": "1534279",
    "end": "1539720"
  },
  {
    "text": "having a good time at that point so okay as part of the project I said well it's great handcrafted stuff but I need to",
    "start": "1539720",
    "end": "1545840"
  },
  {
    "text": "look at something real real you know what's out there so I grabbed the first one on offensive Computing which I think",
    "start": "1545840",
    "end": "1551960"
  },
  {
    "text": "is now called open malware called win32 clone AF and as soon as I disassembled",
    "start": "1551960",
    "end": "1557880"
  },
  {
    "text": "it I saw a recognizable section called BM P0 and I ran it of course on the virtu",
    "start": "1557880",
    "end": "1565919"
  },
  {
    "text": "of De skater I've got a lot more information I'm going to spend a lot of time talking about what this malware did",
    "start": "1565919",
    "end": "1571120"
  },
  {
    "text": "if you're interested go to the website and where the source code is and read all to your heart's content point is",
    "start": "1571120",
    "end": "1577080"
  },
  {
    "text": "though within a couple hours I was able to look at my run trace filter out the virtual machine and pull out these",
    "start": "1577080",
    "end": "1583520"
  },
  {
    "text": "little nuggets that told me exactly what it was doing which was the whole intent of the project remember this this is a a",
    "start": "1583520",
    "end": "1589200"
  },
  {
    "text": "tool not for an idiot but for a reverse engineer that can run it and then get",
    "start": "1589200",
    "end": "1594279"
  },
  {
    "text": "down and dirty without spending a lot of time fing with the",
    "start": "1594279",
    "end": "1599640"
  },
  {
    "text": "protection move on go go okay oh I skipped",
    "start": "1600760",
    "end": "1607159"
  },
  {
    "text": "one I'll just let's see if I can't well anyways that's where you can get it from",
    "start": "1607159",
    "end": "1613640"
  },
  {
    "text": "and that's the disclaimer I got to put on there and I can't get to the other slide but really it was just future work",
    "start": "1613640",
    "end": "1619520"
  },
  {
    "text": "the idea was you know when I saw those code off youc I thought man it would be neat cuz I mean if I'm clustering all",
    "start": "1619520",
    "end": "1625919"
  },
  {
    "text": "this kind of stuff couldn't I not feed that into the clustering part of the algorithm and tweak it a bit cuz if you",
    "start": "1625919",
    "end": "1632200"
  },
  {
    "text": "look at code offc machine code offc you'll find that it's repeated patterns all over the place right but I just kind",
    "start": "1632200",
    "end": "1638600"
  },
  {
    "text": "of ran out of time so I was like uh Johnny on the spot I just started writing code and start writing patterns",
    "start": "1638600",
    "end": "1643799"
  },
  {
    "text": "to remove the stuff so it's something worth thinking about the other cool concept I think is by accident but it",
    "start": "1643799",
    "end": "1650480"
  },
  {
    "text": "makes sense I ran a upx on this guy uh you know from a protection just packing",
    "start": "1650480",
    "end": "1655840"
  },
  {
    "text": "and I found an original entry point which makes sense think about Packers right what are they tight Loops",
    "start": "1655840",
    "end": "1661760"
  },
  {
    "text": "repeated you know so what are we as reversers really interested in pulling",
    "start": "1661760",
    "end": "1667039"
  },
  {
    "text": "in analyzing malware is finding original entry point right so I don't think there'd be a whole lot of lifting here",
    "start": "1667039",
    "end": "1673039"
  },
  {
    "text": "on this guy to make it work with lots of different Packers like I said I tried on upx and it was of course that's pretty",
    "start": "1673039",
    "end": "1679799"
  },
  {
    "text": "easy but it would be interesting to try like a wind license or something a little more juicy um and pull out the",
    "start": "1679799",
    "end": "1685799"
  },
  {
    "text": "original entry point or have it a little more automated so it just says Hey here it is instead of you you know digging",
    "start": "1685799",
    "end": "1690960"
  },
  {
    "text": "through it so that's it any [Music]",
    "start": "1690960",
    "end": "1700640"
  },
  {
    "text": "questions yes is it available immedately or yes you should be able to go to the",
    "start": "1700640",
    "end": "1705760"
  },
  {
    "text": "site and pull it down it's got some again more documentation um I think I",
    "start": "1705760",
    "end": "1711039"
  },
  {
    "text": "documented pretty well at least that's what I was told uh you know yeah",
    "start": "1711039",
    "end": "1717919"
  },
  {
    "text": "so it's tempting to go reapply the same technique to the stations that",
    "start": "1717919",
    "end": "1725600"
  },
  {
    "text": "we conru seen well I mentioned the the other",
    "start": "1726720",
    "end": "1733640"
  },
  {
    "text": "techniques that were used um they did not do that um I did when I saw the code off eation I went",
    "start": "1733640",
    "end": "1741000"
  },
  {
    "text": "out to Woodman and pulled down some I found a decent one but it it it only",
    "start": "1741000",
    "end": "1746720"
  },
  {
    "text": "removed like one or two code off youc from the machine code off eation perspective it only removed two so I was",
    "start": "1746720",
    "end": "1752440"
  },
  {
    "text": "like uh I didn't have time I was really running out of time so I just wrote it myself but I did look I spent like a",
    "start": "1752440",
    "end": "1758120"
  },
  {
    "text": "half a day and of course before I actually started doing this you know wrote up their proposal I had to go read",
    "start": "1758120",
    "end": "1763200"
  },
  {
    "text": "essentially what everybody else did make sure that um my idea wasn't you know ripped anybody off or anything along",
    "start": "1763200",
    "end": "1769399"
  },
  {
    "text": "those lines so else yeah sorry",
    "start": "1769399",
    "end": "1776840"
  },
  {
    "text": "you oh yeah I about",
    "start": "1776840",
    "end": "1780840"
  },
  {
    "text": "that that's great hang on",
    "start": "1783720",
    "end": "1789480"
  },
  {
    "text": "[Music]",
    "start": "1792450",
    "end": "1797758"
  },
  {
    "text": "how's that no good let",
    "start": "1798600",
    "end": "1805559"
  },
  {
    "text": "me can't I",
    "start": "1806080",
    "end": "1812960"
  },
  {
    "text": "uh I could change like the or what's that home all right help me out",
    "start": "1814840",
    "end": "1822320"
  },
  {
    "text": "here here just make it do what",
    "start": "1822799",
    "end": "1828080"
  },
  {
    "text": "it was R this one yeah all right oh that's",
    "start": "1828080",
    "end": "1834159"
  },
  {
    "text": "background oh no only weak oh",
    "start": "1834159",
    "end": "1840930"
  },
  {
    "text": "[Music] God I got it hold",
    "start": "1840930",
    "end": "1846320"
  },
  {
    "text": "on I was going to but I think we got a winner here oh",
    "start": "1846320",
    "end": "1851840"
  },
  {
    "text": "God all right let's just do this yes",
    "start": "1851840",
    "end": "1859750"
  },
  {
    "text": "[Music] that's what I'm going to [Music]",
    "start": "1859750",
    "end": "1866919"
  },
  {
    "text": "do where how about this we should",
    "start": "1866919",
    "end": "1874679"
  },
  {
    "text": "decide there you read that all right excellent I see another",
    "start": "1874840",
    "end": "1882639"
  },
  {
    "text": "hand I didn't bring it now sorry I it's all up on GitHub though I mean",
    "start": "1884679",
    "end": "1890279"
  },
  {
    "text": "where you go to that thing you pull it down and yes how does it deal with",
    "start": "1890279",
    "end": "1895519"
  },
  {
    "text": "conditional control flow is you know in a certain run trace you know you're going to have diver control flow do you",
    "start": "1895519",
    "end": "1901639"
  },
  {
    "text": "do anything like try",
    "start": "1901639",
    "end": "1904960"
  },
  {
    "text": "to no I didn't really do that um I wasn't what I was interested is identifying the virtual machine you know",
    "start": "1907440",
    "end": "1915200"
  },
  {
    "text": "if you if you kind of dig through the virtual machine you realize that they're doing like a risk pipeline where they do",
    "start": "1915200",
    "end": "1921080"
  },
  {
    "text": "a a prefetch fetch access you know decode and execute so what is happening",
    "start": "1921080",
    "end": "1926679"
  },
  {
    "text": "is right is this grabbing a bite at a time and eventually then it executes it but that virtual machine is doing a a",
    "start": "1926679",
    "end": "1932440"
  },
  {
    "text": "ton of heavy lifting right so at the end of the day I didn't really care cuz the Clusters found it and I removed it and",
    "start": "1932440",
    "end": "1938679"
  },
  {
    "text": "so what was left was what I was interested in right",
    "start": "1938679",
    "end": "1943919"
  },
  {
    "text": "so anybody else yes so if I understand correctly the final output right now is",
    "start": "1944000",
    "end": "1950200"
  },
  {
    "text": "just an assembly listing uh is that is that correct yes um a lot of us in uh in",
    "start": "1950200",
    "end": "1957200"
  },
  {
    "text": "this community have gotten spoiled over the last few years with heex RS and uh",
    "start": "1957200",
    "end": "1962279"
  },
  {
    "text": "is there any plan or or how hard would it be to take the current final output",
    "start": "1962279",
    "end": "1968200"
  },
  {
    "text": "of your tool and I guess compile it into executable and texr then decompile for",
    "start": "1968200",
    "end": "1973519"
  },
  {
    "text": "us to so we more efficiently analyze what the look yeah I I didn't real spending time looking at it or yeah I",
    "start": "1973519",
    "end": "1979960"
  },
  {
    "text": "mean I kind of ran out of time as it as the project wore on but yeah there was some ideas that I had that we could",
    "start": "1979960",
    "end": "1985360"
  },
  {
    "text": "possibly do with that talking about Dynamics right oh no I'm just talking about making it into an executable again",
    "start": "1985360",
    "end": "1991760"
  },
  {
    "text": "that you can load into Ida then you can well that was part of the I'm sorry that was part of the repackaging phase right",
    "start": "1991760",
    "end": "1996840"
  },
  {
    "text": "so I use nasm so the idea is you know with that you put your your range you say okay well clearly the Clusters are",
    "start": "1996840",
    "end": "2003760"
  },
  {
    "text": "that I'm interested is within this range and the virtual machine is you know know 3,000 or 5,000 or whatever so if you use",
    "start": "2003760",
    "end": "2011279"
  },
  {
    "text": "that- S and put that range there it will create a final file that's just those",
    "start": "2011279",
    "end": "2016559"
  },
  {
    "text": "clusters then you feed that into nasm and then you disassemble it and put it in idpr oh so you can yeah yeah yeah",
    "start": "2016559",
    "end": "2024000"
  },
  {
    "text": "mhm I sorry yeah um shh oh no what did I do hang on",
    "start": "2024000",
    "end": "2034700"
  },
  {
    "text": "[Applause] [Music] yeah so the Poole again I don't like",
    "start": "2034700",
    "end": "2042360"
  },
  {
    "text": "that name anymore but it is what it is the Poole Optimizer was",
    "start": "2042360",
    "end": "2049079"
  },
  {
    "text": "um it's a python plugin for Ido because I didn't want to you know originally",
    "start": "2049079",
    "end": "2055560"
  },
  {
    "text": "wrote up the project I said oh I'll do the Poo optimization first then I'll repackage it and you put it in ID Pro",
    "start": "2055560",
    "end": "2060839"
  },
  {
    "text": "and you look at it it's all great but then when I saw all those code off youc like man I don't want to write a whole disassembler and you know so I'll use",
    "start": "2060839",
    "end": "2068000"
  },
  {
    "text": "all the nice pneumonic handling and parsing that Ido does so that's kind of",
    "start": "2068000",
    "end": "2073919"
  },
  {
    "text": "why I changed the ordering of of but yeah here's the uh the repackager right",
    "start": "2073919",
    "end": "2079000"
  },
  {
    "text": "so I use nasm and I do a little bit of massaging on the virtual deop skoter because nasm",
    "start": "2079000",
    "end": "2084599"
  },
  {
    "text": "doesn't like like offset or whatever like the immunity will spit out so I did",
    "start": "2084599",
    "end": "2090599"
  },
  {
    "text": "that to make it nice and then yeah so thanks yeah so I wasn't clear is your uh",
    "start": "2090599",
    "end": "2097000"
  },
  {
    "text": "is your Cod the Clusters does it understand x86 assembly or is it just no it doesn't so it could be arm it could",
    "start": "2097000",
    "end": "2102680"
  },
  {
    "text": "be anything so I see these many strings in a row yes sir I mean it's really based off kind of virtual address and it",
    "start": "2102680",
    "end": "2108640"
  },
  {
    "text": "does look at the instructions but it's looking more from so you know polymorphic code or something along",
    "start": "2108640",
    "end": "2113720"
  },
  {
    "text": "those lines or you know certain protections could put like encryption and then execute that you know do some",
    "start": "2113720",
    "end": "2119720"
  },
  {
    "text": "jit and then clean out that memory and put some other code there so it does look at the virtual address and look at the instruction but not from a parsing",
    "start": "2119720",
    "end": "2126480"
  },
  {
    "text": "of a it's a string compar just says does this instruction match this one later okay great then it's the same",
    "start": "2126480",
    "end": "2131920"
  },
  {
    "text": "instruction does that make sense so yeah it work on arm mips or whatever architecture you wanted to apply it to I",
    "start": "2131920",
    "end": "2138760"
  },
  {
    "text": "don't know that they're doing that yet but who knows anything",
    "start": "2138760",
    "end": "2144640"
  },
  {
    "text": "else all right well thank you",
    "start": "2144640",
    "end": "2149359"
  }
]