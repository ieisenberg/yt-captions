[
  {
    "text": "hey everyone thank you so much for being",
    "start": "3080",
    "end": "4920"
  },
  {
    "text": "here breaking into adus accounts is a",
    "start": "4920",
    "end": "7799"
  },
  {
    "text": "topic that's near and dear to my heart",
    "start": "7799",
    "end": "10000"
  },
  {
    "text": "and I'm sure for many of you as well but",
    "start": "10000",
    "end": "13480"
  },
  {
    "text": "I think if we're being honest with",
    "start": "13480",
    "end": "14759"
  },
  {
    "text": "ourselves the traditional methods for",
    "start": "14759",
    "end": "17119"
  },
  {
    "text": "gaining access to adus environments are",
    "start": "17119",
    "end": "20279"
  },
  {
    "text": "boring if we were to pull the audience",
    "start": "20279",
    "end": "22560"
  },
  {
    "text": "for real world breaches involving AWS",
    "start": "22560",
    "end": "25560"
  },
  {
    "text": "environments I guarantee 95% of",
    "start": "25560",
    "end": "28560"
  },
  {
    "text": "scenarios will fall in to one of three",
    "start": "28560",
    "end": "31520"
  },
  {
    "text": "categories they were either caused by a",
    "start": "31520",
    "end": "33960"
  },
  {
    "text": "leaked axis key an exposed S3 bucket or",
    "start": "33960",
    "end": "37120"
  },
  {
    "text": "an exploited ec2 instance these are the",
    "start": "37120",
    "end": "40680"
  },
  {
    "text": "stereotypical ways that adversaries gain",
    "start": "40680",
    "end": "43280"
  },
  {
    "text": "access to AWS environments and to be",
    "start": "43280",
    "end": "45640"
  },
  {
    "text": "clear these are very real risks that we",
    "start": "45640",
    "end": "47920"
  },
  {
    "text": "do have to contend with but at the same",
    "start": "47920",
    "end": "50480"
  },
  {
    "text": "time they're remarkably boring what",
    "start": "50480",
    "end": "53359"
  },
  {
    "text": "we're going to be doing instead is",
    "start": "53359",
    "end": "54840"
  },
  {
    "text": "taking a look at more novel approaches",
    "start": "54840",
    "end": "57000"
  },
  {
    "text": "to gain access to AWS environments we're",
    "start": "57000",
    "end": "60000"
  },
  {
    "text": "going to be kicking in the door to the",
    "start": "60000",
    "end": "61039"
  },
  {
    "text": "cloud by exploiting vulnerabilities in",
    "start": "61039",
    "end": "63280"
  },
  {
    "text": "AWS Services directly particularly",
    "start": "63280",
    "end": "66240"
  },
  {
    "text": "taking advantage of preexisting trust",
    "start": "66240",
    "end": "69880"
  },
  {
    "text": "what I mean by that is a common design",
    "start": "69880",
    "end": "71840"
  },
  {
    "text": "pattern within AWS is to have IEM roles",
    "start": "71840",
    "end": "75000"
  },
  {
    "text": "in your account that have a trust",
    "start": "75000",
    "end": "76720"
  },
  {
    "text": "relationship back to some AWS service",
    "start": "76720",
    "end": "80400"
  },
  {
    "text": "this enables that service to perform",
    "start": "80400",
    "end": "82880"
  },
  {
    "text": "functionality and do things in your",
    "start": "82880",
    "end": "85360"
  },
  {
    "text": "account in this session we're going to",
    "start": "85360",
    "end": "87280"
  },
  {
    "text": "take a look at some vulnerabilities that",
    "start": "87280",
    "end": "89000"
  },
  {
    "text": "would allow us to abuse that trust",
    "start": "89000",
    "end": "91240"
  },
  {
    "text": "relationship and hijack that access to",
    "start": "91240",
    "end": "93960"
  },
  {
    "text": "gain access to vulnerable AWS accounts",
    "start": "93960",
    "end": "96799"
  },
  {
    "text": "so that from there we can escalate",
    "start": "96799",
    "end": "98479"
  },
  {
    "text": "privileges access resources move",
    "start": "98479",
    "end": "100799"
  },
  {
    "text": "laterally and more in this session we'll",
    "start": "100799",
    "end": "103439"
  },
  {
    "text": "talk a little bit about how this trust",
    "start": "103439",
    "end": "104960"
  },
  {
    "text": "is established between imem roles and",
    "start": "104960",
    "end": "107560"
  },
  {
    "text": "AWS services and that will dive deep on",
    "start": "107560",
    "end": "110040"
  },
  {
    "text": "two vulnerabilities as well as a more",
    "start": "110040",
    "end": "112119"
  },
  {
    "text": "General misconfiguration that would",
    "start": "112119",
    "end": "113880"
  },
  {
    "text": "allow us to take advantage of this and",
    "start": "113880",
    "end": "116360"
  },
  {
    "text": "finally we'll talk about prevention",
    "start": "116360",
    "end": "118000"
  },
  {
    "text": "options in the absolute worst wor case",
    "start": "118000",
    "end": "120280"
  },
  {
    "text": "scenario of an adversary having a cross",
    "start": "120280",
    "end": "122399"
  },
  {
    "text": "tenant zero in AWS what options do we",
    "start": "122399",
    "end": "125240"
  },
  {
    "text": "have to try and mitigate some of these",
    "start": "125240",
    "end": "127399"
  },
  {
    "text": "attacks it's important to note all of",
    "start": "127399",
    "end": "129679"
  },
  {
    "text": "the vulnerabilities we're going to be",
    "start": "129679",
    "end": "130800"
  },
  {
    "text": "talking about today have since been",
    "start": "130800",
    "end": "132840"
  },
  {
    "text": "fixed by AWS so think of this more from",
    "start": "132840",
    "end": "135720"
  },
  {
    "text": "the perspective of what can we learn",
    "start": "135720",
    "end": "137360"
  },
  {
    "text": "from these vulnerabilities that we can",
    "start": "137360",
    "end": "138959"
  },
  {
    "text": "apply to better attack and defend Cloud",
    "start": "138959",
    "end": "142160"
  },
  {
    "text": "environments with all that out of the",
    "start": "142160",
    "end": "144040"
  },
  {
    "text": "way to get us started on the topic of",
    "start": "144040",
    "end": "146280"
  },
  {
    "text": "abusing pre-existing trust we should",
    "start": "146280",
    "end": "148480"
  },
  {
    "text": "probably talk a little bit about how",
    "start": "148480",
    "end": "150000"
  },
  {
    "text": "that trust is",
    "start": "150000",
    "end": "151319"
  },
  {
    "text": "established in a AWS every IEM role is",
    "start": "151319",
    "end": "155160"
  },
  {
    "text": "going to have a role trust policy and",
    "start": "155160",
    "end": "158360"
  },
  {
    "text": "this policy determines who or what is",
    "start": "158360",
    "end": "161080"
  },
  {
    "text": "permitted to assume an IEM role where I",
    "start": "161080",
    "end": "164400"
  },
  {
    "text": "think Ro trust policies are the most",
    "start": "164400",
    "end": "166080"
  },
  {
    "text": "interesting are when they're tied to an",
    "start": "166080",
    "end": "167920"
  },
  {
    "text": "AWS service to demonstrate this we're",
    "start": "167920",
    "end": "170879"
  },
  {
    "text": "going to use Lambda as an example what",
    "start": "170879",
    "end": "173959"
  },
  {
    "text": "you see on the right side of this slide",
    "start": "173959",
    "end": "176200"
  },
  {
    "text": "is the default out-of-the-box Ro trust",
    "start": "176200",
    "end": "179120"
  },
  {
    "text": "policy associated with a role used by",
    "start": "179120",
    "end": "181720"
  },
  {
    "text": "Lambda if you were to create a function",
    "start": "181720",
    "end": "183720"
  },
  {
    "text": "today a role would be created for you",
    "start": "183720",
    "end": "186080"
  },
  {
    "text": "that would have this trust policy the",
    "start": "186080",
    "end": "188640"
  },
  {
    "text": "way this works in practice is every time",
    "start": "188640",
    "end": "190840"
  },
  {
    "text": "your Lambda function is executed the",
    "start": "190840",
    "end": "193319"
  },
  {
    "text": "Lambda service will assume that role in",
    "start": "193319",
    "end": "195360"
  },
  {
    "text": "your account and do whatever it is that",
    "start": "195360",
    "end": "197799"
  },
  {
    "text": "you want it to do now this behavior is",
    "start": "197799",
    "end": "201000"
  },
  {
    "text": "interesting when we start asking",
    "start": "201000",
    "end": "203000"
  },
  {
    "text": "questions like okay since this is the",
    "start": "203000",
    "end": "205640"
  },
  {
    "text": "default trust policy and theoretically",
    "start": "205640",
    "end": "207760"
  },
  {
    "text": "the overwhelming majority of roles using",
    "start": "207760",
    "end": "210439"
  },
  {
    "text": "Lambda would have it and since we",
    "start": "210439",
    "end": "212599"
  },
  {
    "text": "already described that the trust policy",
    "start": "212599",
    "end": "214080"
  },
  {
    "text": "determines who can assume a role in this",
    "start": "214080",
    "end": "216400"
  },
  {
    "text": "case allowing the Lambda service could I",
    "start": "216400",
    "end": "218640"
  },
  {
    "text": "do something like this by creating a",
    "start": "218640",
    "end": "221040"
  },
  {
    "text": "Lambda function in my own attacker",
    "start": "221040",
    "end": "222879"
  },
  {
    "text": "controlled account but pointing to or",
    "start": "222879",
    "end": "225120"
  },
  {
    "text": "referencing a role in a different ews",
    "start": "225120",
    "end": "227599"
  },
  {
    "text": "account preferably one that I don't have",
    "start": "227599",
    "end": "229840"
  },
  {
    "text": "legitimate access to could I cause the",
    "start": "229840",
    "end": "232439"
  },
  {
    "text": "Lambda service to assume that role and",
    "start": "232439",
    "end": "235000"
  },
  {
    "text": "perform API calls on my behalf well the",
    "start": "235000",
    "end": "238840"
  },
  {
    "text": "good news or bad news depending on your",
    "start": "238840",
    "end": "240439"
  },
  {
    "text": "perspective is there is something that",
    "start": "240439",
    "end": "242079"
  },
  {
    "text": "stops this and that's called pass roll",
    "start": "242079",
    "end": "245120"
  },
  {
    "text": "anytime you are providing an imem role",
    "start": "245120",
    "end": "247959"
  },
  {
    "text": "to an AWS service so that it can be",
    "start": "247959",
    "end": "250079"
  },
  {
    "text": "assumed you are interacting with pass",
    "start": "250079",
    "end": "252640"
  },
  {
    "text": "roll one of the core tenants of which is",
    "start": "252640",
    "end": "254920"
  },
  {
    "text": "that you can only pass a role within the",
    "start": "254920",
    "end": "257600"
  },
  {
    "text": "same AWS account if you try to pass a",
    "start": "257600",
    "end": "260400"
  },
  {
    "text": "role outside of it you'll get the error",
    "start": "260400",
    "end": "262040"
  },
  {
    "text": "message access denied cross account pass",
    "start": "262040",
    "end": "264400"
  },
  {
    "text": "roll is not allowed now this is a very",
    "start": "264400",
    "end": "267680"
  },
  {
    "text": "important security boundary in AWS",
    "start": "267680",
    "end": "269880"
  },
  {
    "text": "because without it we could just",
    "start": "269880",
    "end": "271840"
  },
  {
    "text": "arbitrarily assume roll into anybody",
    "start": "271840",
    "end": "273520"
  },
  {
    "text": "else's account and access whatever",
    "start": "273520",
    "end": "275440"
  },
  {
    "text": "resources are associated with those",
    "start": "275440",
    "end": "277000"
  },
  {
    "text": "roles so this will be our first goal of",
    "start": "277000",
    "end": "279400"
  },
  {
    "text": "the session today trying to find a way",
    "start": "279400",
    "end": "282120"
  },
  {
    "text": "to bypass this filter and specify",
    "start": "282120",
    "end": "284520"
  },
  {
    "text": "arbitrary IEM roles for a given AWS",
    "start": "284520",
    "end": "287360"
  },
  {
    "text": "service because with this we can move",
    "start": "287360",
    "end": "289759"
  },
  {
    "text": "laterally into victim AWS accounts and",
    "start": "289759",
    "end": "292280"
  },
  {
    "text": "access all the resources that they have",
    "start": "292280",
    "end": "294039"
  },
  {
    "text": "access to and so the first vulnerability",
    "start": "294039",
    "end": "296120"
  },
  {
    "text": "we're we're going to be covering today",
    "start": "296120",
    "end": "297880"
  },
  {
    "text": "is a confused vulner uh confused Deputy",
    "start": "297880",
    "end": "300000"
  },
  {
    "text": "vulnerability in AWS appsync if you're",
    "start": "300000",
    "end": "303120"
  },
  {
    "text": "not familiar with appsync appsync is a",
    "start": "303120",
    "end": "305160"
  },
  {
    "text": "managed graphql service offered by AWS",
    "start": "305160",
    "end": "308600"
  },
  {
    "text": "it allows you to quickly and easily",
    "start": "308600",
    "end": "310600"
  },
  {
    "text": "build graphql",
    "start": "310600",
    "end": "312600"
  },
  {
    "text": "apis the way that it works is very",
    "start": "312600",
    "end": "314880"
  },
  {
    "text": "similar to what I describe with Lambda",
    "start": "314880",
    "end": "316840"
  },
  {
    "text": "you first create an appsync API in your",
    "start": "316840",
    "end": "318880"
  },
  {
    "text": "account you configure it set your schema",
    "start": "318880",
    "end": "320960"
  },
  {
    "text": "and so on and then as a part of setting",
    "start": "320960",
    "end": "322960"
  },
  {
    "text": "your data source a role will be created",
    "start": "322960",
    "end": "325319"
  },
  {
    "text": "for you that by default will have a",
    "start": "325319",
    "end": "327319"
  },
  {
    "text": "trust policy back to the Apps sync",
    "start": "327319",
    "end": "329280"
  },
  {
    "text": "service",
    "start": "329280",
    "end": "330479"
  },
  {
    "text": "then every time your function runs the",
    "start": "330479",
    "end": "332800"
  },
  {
    "text": "apping service will assume the role in",
    "start": "332800",
    "end": "334479"
  },
  {
    "text": "your account and do whatever it's meant",
    "start": "334479",
    "end": "336319"
  },
  {
    "text": "to do and also similar to Lambda if you",
    "start": "336319",
    "end": "339039"
  },
  {
    "text": "try to pass a roll outside of your",
    "start": "339039",
    "end": "340560"
  },
  {
    "text": "account you get the error message cross",
    "start": "340560",
    "end": "342520"
  },
  {
    "text": "account pass roll is not allowed now you",
    "start": "342520",
    "end": "345160"
  },
  {
    "text": "might be trying to think of some ways",
    "start": "345160",
    "end": "346400"
  },
  {
    "text": "that we could bypass this control things",
    "start": "346400",
    "end": "348840"
  },
  {
    "text": "like weird encoding schemes maybe",
    "start": "348840",
    "end": "351120"
  },
  {
    "text": "something like HTP request smuggling or",
    "start": "351120",
    "end": "353319"
  },
  {
    "text": "perhaps something even more exotic these",
    "start": "353319",
    "end": "355560"
  },
  {
    "text": "are all great ideas and I strongly",
    "start": "355560",
    "end": "357039"
  },
  {
    "text": "encourage you to pursue them in your own",
    "start": "357039",
    "end": "358400"
  },
  {
    "text": "time but we actually found a much",
    "start": "358400",
    "end": "360560"
  },
  {
    "text": "simpler way to bypass this control",
    "start": "360560",
    "end": "363080"
  },
  {
    "text": "through the power of SpongeBob memes see",
    "start": "363080",
    "end": "366440"
  },
  {
    "text": "under normal circumstances the adus API",
    "start": "366440",
    "end": "369199"
  },
  {
    "text": "is typically case sensitive what we mean",
    "start": "369199",
    "end": "371800"
  },
  {
    "text": "by that is whenever you provide a",
    "start": "371800",
    "end": "373639"
  },
  {
    "text": "parameter to the API it expects it to be",
    "start": "373639",
    "end": "375960"
  },
  {
    "text": "in a very particular casing so long as",
    "start": "375960",
    "end": "378800"
  },
  {
    "text": "you match that expectation things work",
    "start": "378800",
    "end": "380960"
  },
  {
    "text": "normally so as a completely unrelated",
    "start": "380960",
    "end": "384080"
  },
  {
    "text": "API just to demonstrate this Behavior",
    "start": "384080",
    "end": "386599"
  },
  {
    "text": "here we're performing the secrets",
    "start": "386599",
    "end": "387840"
  },
  {
    "text": "manager create secret API I call and",
    "start": "387840",
    "end": "390479"
  },
  {
    "text": "that expects a name parameter with a",
    "start": "390479",
    "end": "392520"
  },
  {
    "text": "capital N so long as you meet this",
    "start": "392520",
    "end": "395120"
  },
  {
    "text": "expectation you get a 200 okay",
    "start": "395120",
    "end": "397599"
  },
  {
    "text": "everything worked normally you",
    "start": "397599",
    "end": "399120"
  },
  {
    "text": "successfully created a secret but if you",
    "start": "399120",
    "end": "402360"
  },
  {
    "text": "were to change that casing in any way in",
    "start": "402360",
    "end": "404960"
  },
  {
    "text": "this case to all uppercase and you try",
    "start": "404960",
    "end": "407120"
  },
  {
    "text": "to send it to the API you actually get",
    "start": "407120",
    "end": "409720"
  },
  {
    "text": "an error uh 400 bad request member must",
    "start": "409720",
    "end": "412560"
  },
  {
    "text": "not be null the reason for this is well",
    "start": "412560",
    "end": "415240"
  },
  {
    "text": "we didn't actually send the parameter it",
    "start": "415240",
    "end": "416960"
  },
  {
    "text": "was looking for it might have been the",
    "start": "416960",
    "end": "418639"
  },
  {
    "text": "right alphabetic characters but it's not",
    "start": "418639",
    "end": "421080"
  },
  {
    "text": "the specific one and it rightfully so",
    "start": "421080",
    "end": "423639"
  },
  {
    "text": "returns an error while this may seem",
    "start": "423639",
    "end": "425879"
  },
  {
    "text": "like a somewhat obvious thing to point",
    "start": "425879",
    "end": "427560"
  },
  {
    "text": "out the reason this mattered is that by",
    "start": "427560",
    "end": "429800"
  },
  {
    "text": "comparison the appsync API was an oddity",
    "start": "429800",
    "end": "432840"
  },
  {
    "text": "it was not case sensitive we could pass",
    "start": "432840",
    "end": "436000"
  },
  {
    "text": "arbitrary parameters of mixed case and",
    "start": "436000",
    "end": "438280"
  },
  {
    "text": "it would take it completely normally",
    "start": "438280",
    "end": "440919"
  },
  {
    "text": "presumably somewhere on the back end it",
    "start": "440919",
    "end": "442479"
  },
  {
    "text": "was normalizing these values in some way",
    "start": "442479",
    "end": "445800"
  },
  {
    "text": "now the parameter you would use to pass",
    "start": "445800",
    "end": "448080"
  },
  {
    "text": "a role to the absin service was called",
    "start": "448080",
    "end": "450479"
  },
  {
    "text": "service Ro RN capital r capital A if you",
    "start": "450479",
    "end": "454000"
  },
  {
    "text": "try to pass a ro outside of your account",
    "start": "454000",
    "end": "456199"
  },
  {
    "text": "well again cross pass roll is not",
    "start": "456199",
    "end": "458879"
  },
  {
    "text": "allowed but if we change the casing of",
    "start": "458879",
    "end": "462319"
  },
  {
    "text": "that parameter in any way in this case",
    "start": "462319",
    "end": "465240"
  },
  {
    "text": "to all lowercase and we passed a role",
    "start": "465240",
    "end": "468199"
  },
  {
    "text": "outside of our AWS account for some",
    "start": "468199",
    "end": "470840"
  },
  {
    "text": "unknown reason whatever filtering or",
    "start": "470840",
    "end": "472879"
  },
  {
    "text": "checking that was supposed to occur",
    "start": "472879",
    "end": "474720"
  },
  {
    "text": "either didn't happen or completely",
    "start": "474720",
    "end": "476479"
  },
  {
    "text": "failed and so with this method we now",
    "start": "476479",
    "end": "479120"
  },
  {
    "text": "had a way of assigning arbitrary IEM",
    "start": "479120",
    "end": "481759"
  },
  {
    "text": "rules for the appsync service to assume",
    "start": "481759",
    "end": "485479"
  },
  {
    "text": "so we were able to break a major",
    "start": "485479",
    "end": "487360"
  },
  {
    "text": "security boundary in AWS through",
    "start": "487360",
    "end": "489599"
  },
  {
    "text": "SpongeBob",
    "start": "489599",
    "end": "490879"
  },
  {
    "text": "memes with this capability we could now",
    "start": "490879",
    "end": "493479"
  },
  {
    "text": "offer arbitrary roles to the service and",
    "start": "493479",
    "end": "495639"
  },
  {
    "text": "try to have it assume it put another way",
    "start": "495639",
    "end": "498720"
  },
  {
    "text": "any legitimate role that used the",
    "start": "498720",
    "end": "501199"
  },
  {
    "text": "appsync service in any aw account was",
    "start": "501199",
    "end": "504639"
  },
  {
    "text": "now a target for us to assume into and",
    "start": "504639",
    "end": "506960"
  },
  {
    "text": "access whatever resources were",
    "start": "506960",
    "end": "508759"
  },
  {
    "text": "associated with with that role this is",
    "start": "508759",
    "end": "511240"
  },
  {
    "text": "an example of a cross service confused",
    "start": "511240",
    "end": "513839"
  },
  {
    "text": "Deputy attack where a lower privileg",
    "start": "513839",
    "end": "515760"
  },
  {
    "text": "entity in this case us was able to trick",
    "start": "515760",
    "end": "518640"
  },
  {
    "text": "or coers a higher pillage entity in this",
    "start": "518640",
    "end": "521159"
  },
  {
    "text": "case the absin service to do something",
    "start": "521159",
    "end": "523200"
  },
  {
    "text": "on our behalf and in this scenario that",
    "start": "523200",
    "end": "525600"
  },
  {
    "text": "was assuming a role in the victim",
    "start": "525600",
    "end": "527320"
  },
  {
    "text": "account and carrying out whatever API",
    "start": "527320",
    "end": "529959"
  },
  {
    "text": "operation we wanted it to perform it's",
    "start": "529959",
    "end": "532600"
  },
  {
    "text": "important to note the thing that enabled",
    "start": "532600",
    "end": "534920"
  },
  {
    "text": "this attack the thing that made this all",
    "start": "534920",
    "end": "536760"
  },
  {
    "text": "possible was that pre-existing Trust",
    "start": "536760",
    "end": "539800"
  },
  {
    "text": "between that IM Ro and the app sync",
    "start": "539800",
    "end": "542680"
  },
  {
    "text": "service because the role trusted the",
    "start": "542680",
    "end": "544800"
  },
  {
    "text": "service and because we weaponized the",
    "start": "544800",
    "end": "546640"
  },
  {
    "text": "service against it we now had an Avenue",
    "start": "546640",
    "end": "548800"
  },
  {
    "text": "to assume these roles for a practical",
    "start": "548800",
    "end": "552240"
  },
  {
    "text": "example of how we would exploit this",
    "start": "552240",
    "end": "553920"
  },
  {
    "text": "step by step we would first create an",
    "start": "553920",
    "end": "556279"
  },
  {
    "text": "appsync API from our own attacker",
    "start": "556279",
    "end": "558760"
  },
  {
    "text": "controlled account we'd set the schema",
    "start": "558760",
    "end": "561120"
  },
  {
    "text": "configure it and so on determine what",
    "start": "561120",
    "end": "562680"
  },
  {
    "text": "API call we wanted to make we would then",
    "start": "562680",
    "end": "564880"
  },
  {
    "text": "perform that pass roll bypass to specify",
    "start": "564880",
    "end": "567240"
  },
  {
    "text": "the role in the victim account that we",
    "start": "567240",
    "end": "568800"
  },
  {
    "text": "wanted to assume and then finally we",
    "start": "568800",
    "end": "571399"
  },
  {
    "text": "would run our API under normal",
    "start": "571399",
    "end": "573920"
  },
  {
    "text": "circumstances the appsync service would",
    "start": "573920",
    "end": "575920"
  },
  {
    "text": "assume the role in our account but",
    "start": "575920",
    "end": "578720"
  },
  {
    "text": "because of this vulnerability it instead",
    "start": "578720",
    "end": "580720"
  },
  {
    "text": "assumes the role in the victim account",
    "start": "580720",
    "end": "582800"
  },
  {
    "text": "and carries out whatever API operation",
    "start": "582800",
    "end": "585040"
  },
  {
    "text": "we want it to perform and so that allows",
    "start": "585040",
    "end": "587880"
  },
  {
    "text": "us to do things uh like you see in this",
    "start": "587880",
    "end": "589720"
  },
  {
    "text": "this screenshot where we're actually",
    "start": "589720",
    "end": "591120"
  },
  {
    "text": "dumping the contents of a Dynamo DB",
    "start": "591120",
    "end": "593120"
  },
  {
    "text": "table cross tenant in AWS by having it",
    "start": "593120",
    "end": "596000"
  },
  {
    "text": "perform the Dynamo DB scan operation",
    "start": "596000",
    "end": "600000"
  },
  {
    "text": "if You' like to learn more about this",
    "start": "600000",
    "end": "601079"
  },
  {
    "text": "vulnerability AWS did release a security",
    "start": "601079",
    "end": "603880"
  },
  {
    "text": "bulletin about it and additionally we",
    "start": "603880",
    "end": "605839"
  },
  {
    "text": "have a blog post linked there with a ton",
    "start": "605839",
    "end": "607640"
  },
  {
    "text": "of additional information on carrying",
    "start": "607640",
    "end": "609560"
  },
  {
    "text": "out confused Deputy attacks in",
    "start": "609560",
    "end": "612200"
  },
  {
    "text": "AWS before we get to our second",
    "start": "612200",
    "end": "614320"
  },
  {
    "text": "vulnerability of the day we need to",
    "start": "614320",
    "end": "615959"
  },
  {
    "text": "learn a little bit about AUM roll with",
    "start": "615959",
    "end": "618120"
  },
  {
    "text": "web identity up until this point we've",
    "start": "618120",
    "end": "621120"
  },
  {
    "text": "been talking about pling assume roll and",
    "start": "621120",
    "end": "623880"
  },
  {
    "text": "this is typically used for AWS to AWS",
    "start": "623880",
    "end": "627279"
  },
  {
    "text": "role assumption now while this is great",
    "start": "627279",
    "end": "630360"
  },
  {
    "text": "it does have a bit of a limitation and",
    "start": "630360",
    "end": "632360"
  },
  {
    "text": "that is that it requires the entity",
    "start": "632360",
    "end": "634440"
  },
  {
    "text": "doing the role assumption to originate",
    "start": "634440",
    "end": "636959"
  },
  {
    "text": "from AWS and unfortunately there's a",
    "start": "636959",
    "end": "639600"
  },
  {
    "text": "variety of use cases in which you might",
    "start": "639600",
    "end": "641639"
  },
  {
    "text": "want to have some identity uh be able to",
    "start": "641639",
    "end": "644079"
  },
  {
    "text": "assume a role from outside the cloud how",
    "start": "644079",
    "end": "646639"
  },
  {
    "text": "do you deal with this well that's where",
    "start": "646639",
    "end": "648240"
  },
  {
    "text": "assume RO with web identity comes in the",
    "start": "648240",
    "end": "650760"
  },
  {
    "text": "sort of core premise here is that you",
    "start": "650760",
    "end": "652760"
  },
  {
    "text": "offload the responsibility of",
    "start": "652760",
    "end": "654519"
  },
  {
    "text": "authorizing that role assumption to an",
    "start": "654519",
    "end": "656760"
  },
  {
    "text": "identity provider of your choosing this",
    "start": "656760",
    "end": "659360"
  },
  {
    "text": "can be a private identity provider one",
    "start": "659360",
    "end": "661360"
  },
  {
    "text": "that you or your organization own and",
    "start": "661360",
    "end": "663120"
  },
  {
    "text": "maintain or it can be a public identity",
    "start": "663120",
    "end": "665519"
  },
  {
    "text": "provider think things like Facebook",
    "start": "665519",
    "end": "667440"
  },
  {
    "text": "Google Amazon GitHub and so on the",
    "start": "667440",
    "end": "670920"
  },
  {
    "text": "external identities whether they be",
    "start": "670920",
    "end": "672399"
  },
  {
    "text": "human or machine will interact with that",
    "start": "672399",
    "end": "674600"
  },
  {
    "text": "identity provider generate a token and",
    "start": "674600",
    "end": "676720"
  },
  {
    "text": "then use that to authenticate in the",
    "start": "676720",
    "end": "678480"
  },
  {
    "text": "assume RO with web identity call to",
    "start": "678480",
    "end": "680639"
  },
  {
    "text": "assume that role in your account now",
    "start": "680639",
    "end": "683519"
  },
  {
    "text": "before we get to this next part I really",
    "start": "683519",
    "end": "685120"
  },
  {
    "text": "have to stress that this is a general",
    "start": "685120",
    "end": "687160"
  },
  {
    "text": "design pattern a variety of services",
    "start": "687160",
    "end": "689720"
  },
  {
    "text": "will use it including some that are",
    "start": "689720",
    "end": "691160"
  },
  {
    "text": "native to AWS and some that are",
    "start": "691160",
    "end": "693079"
  },
  {
    "text": "completely unrelated we're going to be",
    "start": "693079",
    "end": "695040"
  },
  {
    "text": "taking a look at GitHub actions which is",
    "start": "695040",
    "end": "697480"
  },
  {
    "text": "a common use case for this type of thing",
    "start": "697480",
    "end": "699560"
  },
  {
    "text": "but again really want to stress that",
    "start": "699560",
    "end": "701160"
  },
  {
    "text": "there are a variety of services and",
    "start": "701160",
    "end": "702839"
  },
  {
    "text": "technologies that will do the very same",
    "start": "702839",
    "end": "705240"
  },
  {
    "text": "thing now like I mentioned before every",
    "start": "705240",
    "end": "708560"
  },
  {
    "text": "IEM role has a role trust policy what",
    "start": "708560",
    "end": "712360"
  },
  {
    "text": "you see here on the slide is the most",
    "start": "712360",
    "end": "714519"
  },
  {
    "text": "basic barebones simple trust policy you",
    "start": "714519",
    "end": "717399"
  },
  {
    "text": "could have had to be usable by the",
    "start": "717399",
    "end": "720040"
  },
  {
    "text": "GitHub Action Service and what this",
    "start": "720040",
    "end": "723200"
  },
  {
    "text": "trust policy says is that we're going to",
    "start": "723200",
    "end": "725560"
  },
  {
    "text": "allow the GitHub action identity",
    "start": "725560",
    "end": "727680"
  },
  {
    "text": "provider the ability to assume role in",
    "start": "727680",
    "end": "729639"
  },
  {
    "text": "web identity in this role in our account",
    "start": "729639",
    "end": "732600"
  },
  {
    "text": "and if we think about that that's a bit",
    "start": "732600",
    "end": "734600"
  },
  {
    "text": "of a terrifying thought because what",
    "start": "734600",
    "end": "736720"
  },
  {
    "text": "that policy does is it just trusts the",
    "start": "736720",
    "end": "738480"
  },
  {
    "text": "identity provider and if we think about",
    "start": "738480",
    "end": "740440"
  },
  {
    "text": "it that identity provider is public it's",
    "start": "740440",
    "end": "743639"
  },
  {
    "text": "Global there's nothing stopping an",
    "start": "743639",
    "end": "745800"
  },
  {
    "text": "adversary from creating their own GitHub",
    "start": "745800",
    "end": "747720"
  },
  {
    "text": "account creating their own GitHub action",
    "start": "747720",
    "end": "749560"
  },
  {
    "text": "to generate a token signed by that very",
    "start": "749560",
    "end": "751959"
  },
  {
    "text": "same identity provider and using that in",
    "start": "751959",
    "end": "754560"
  },
  {
    "text": "the assume r with web identity call and",
    "start": "754560",
    "end": "756839"
  },
  {
    "text": "being able to assume that role in your",
    "start": "756839",
    "end": "759320"
  },
  {
    "text": "account that is why anytime you use",
    "start": "759320",
    "end": "762160"
  },
  {
    "text": "assume role with web identity with an",
    "start": "762160",
    "end": "764000"
  },
  {
    "text": "identity provider that is public or",
    "start": "764000",
    "end": "766199"
  },
  {
    "text": "Global in a sense you need to have a",
    "start": "766199",
    "end": "768519"
  },
  {
    "text": "condition which restricts who",
    "start": "768519",
    "end": "770320"
  },
  {
    "text": "specifically is permitted to assume that",
    "start": "770320",
    "end": "772519"
  },
  {
    "text": "role again assumer with web identity is",
    "start": "772519",
    "end": "775320"
  },
  {
    "text": "a general design pattern the specific",
    "start": "775320",
    "end": "777880"
  },
  {
    "text": "condition that you need with will depend",
    "start": "777880",
    "end": "779680"
  },
  {
    "text": "on the scenario to continue using GitHub",
    "start": "779680",
    "end": "782279"
  },
  {
    "text": "actions as an example you need to",
    "start": "782279",
    "end": "784000"
  },
  {
    "text": "restrict which GitHub organization or",
    "start": "784000",
    "end": "786720"
  },
  {
    "text": "which GitHub repo is allowed to assume",
    "start": "786720",
    "end": "789360"
  },
  {
    "text": "the role now the attack I just described",
    "start": "789360",
    "end": "792639"
  },
  {
    "text": "was very much in Vogue last year a",
    "start": "792639",
    "end": "795000"
  },
  {
    "text": "number of security researchers including",
    "start": "795000",
    "end": "796600"
  },
  {
    "text": "my own colleague Kristoff identified",
    "start": "796600",
    "end": "798680"
  },
  {
    "text": "this potential misconfiguration and",
    "start": "798680",
    "end": "800560"
  },
  {
    "text": "sounded the alarm about it if You' like",
    "start": "800560",
    "end": "802639"
  },
  {
    "text": "to learn more there we have a blog post",
    "start": "802639",
    "end": "804360"
  },
  {
    "text": "with a ton of additional details now to",
    "start": "804360",
    "end": "807320"
  },
  {
    "text": "aws's credit they actually did did",
    "start": "807320",
    "end": "809279"
  },
  {
    "text": "something about it in response to this",
    "start": "809279",
    "end": "811639"
  },
  {
    "text": "increased awareness they actually made",
    "start": "811639",
    "end": "813480"
  },
  {
    "text": "changes to am so that you can no longer",
    "start": "813480",
    "end": "816199"
  },
  {
    "text": "create a vulnerable policy like this one",
    "start": "816199",
    "end": "819240"
  },
  {
    "text": "if you try to you'll actually get an",
    "start": "819240",
    "end": "821040"
  },
  {
    "text": "error and it will reject it they made a",
    "start": "821040",
    "end": "823639"
  },
  {
    "text": "once optional condition now mandatory",
    "start": "823639",
    "end": "827399"
  },
  {
    "text": "now this is great fantastic really",
    "start": "827399",
    "end": "830079"
  },
  {
    "text": "appreciate that AWS but if we were to",
    "start": "830079",
    "end": "833079"
  },
  {
    "text": "nitpick it it's really important to",
    "start": "833079",
    "end": "835079"
  },
  {
    "text": "stress that they only did this for the",
    "start": "835079",
    "end": "837199"
  },
  {
    "text": "GitHub identity provider and any of the",
    "start": "837199",
    "end": "839759"
  },
  {
    "text": "other services that are similarly",
    "start": "839759",
    "end": "841680"
  },
  {
    "text": "impacted were SL are still vulnerable",
    "start": "841680",
    "end": "844600"
  },
  {
    "text": "and for this reason if you're a heavy",
    "start": "844600",
    "end": "846040"
  },
  {
    "text": "AWS user I strongly encourage you to",
    "start": "846040",
    "end": "848199"
  },
  {
    "text": "audit your imem roles that use aumr with",
    "start": "848199",
    "end": "851040"
  },
  {
    "text": "web identity and look for this",
    "start": "851040",
    "end": "852720"
  },
  {
    "text": "misconfiguration because if it's present",
    "start": "852720",
    "end": "855360"
  },
  {
    "text": "anybody could just assume your",
    "start": "855360",
    "end": "857399"
  },
  {
    "text": "roles now speaking of services that were",
    "start": "857399",
    "end": "860480"
  },
  {
    "text": "similarly impacted I wanted to take a",
    "start": "860480",
    "end": "862399"
  },
  {
    "text": "look at Amazon Cognito if you're not",
    "start": "862399",
    "end": "864920"
  },
  {
    "text": "familiar Amazon Cognito is a sign in as",
    "start": "864920",
    "end": "867440"
  },
  {
    "text": "a service offering from aw us if you",
    "start": "867440",
    "end": "870360"
  },
  {
    "text": "want to store user credentials but you",
    "start": "870360",
    "end": "872320"
  },
  {
    "text": "don't want to deal with the hassle of",
    "start": "872320",
    "end": "874000"
  },
  {
    "text": "hashing salting password reset flows and",
    "start": "874000",
    "end": "876279"
  },
  {
    "text": "so on you can pay Amazon a fee and",
    "start": "876279",
    "end": "878320"
  },
  {
    "text": "they'll take care of that for you one of",
    "start": "878320",
    "end": "880480"
  },
  {
    "text": "the core features of Cognito is",
    "start": "880480",
    "end": "882240"
  },
  {
    "text": "something called an identity pool and an",
    "start": "882240",
    "end": "884639"
  },
  {
    "text": "identity pool is a resource you can",
    "start": "884639",
    "end": "886160"
  },
  {
    "text": "create in your account that allows you",
    "start": "886160",
    "end": "888199"
  },
  {
    "text": "to uh to distribute short-lived IEM",
    "start": "888199",
    "end": "891600"
  },
  {
    "text": "credentials to your users so for example",
    "start": "891600",
    "end": "894199"
  },
  {
    "text": "say you're building a web application",
    "start": "894199",
    "end": "895880"
  },
  {
    "text": "and you want your users to be able to",
    "start": "895880",
    "end": "897560"
  },
  {
    "text": "upload content to S3 or perhaps invoke",
    "start": "897560",
    "end": "900040"
  },
  {
    "text": "an API Gateway using ioth the way you",
    "start": "900040",
    "end": "902480"
  },
  {
    "text": "could achieve this is by creating a",
    "start": "902480",
    "end": "904120"
  },
  {
    "text": "Cognito identity pool in your account",
    "start": "904120",
    "end": "906160"
  },
  {
    "text": "your users will interact with it and",
    "start": "906160",
    "end": "907600"
  },
  {
    "text": "authenticate so they can then assume the",
    "start": "907600",
    "end": "909720"
  },
  {
    "text": "role in your account now the good news",
    "start": "909720",
    "end": "912320"
  },
  {
    "text": "when it comes to Cognito is that out of",
    "start": "912320",
    "end": "914279"
  },
  {
    "text": "the box they seem to have considered",
    "start": "914279",
    "end": "916639"
  },
  {
    "text": "this very same attack I just described",
    "start": "916639",
    "end": "918560"
  },
  {
    "text": "with GitHub actions specifically by",
    "start": "918560",
    "end": "921360"
  },
  {
    "text": "default there is a condition which",
    "start": "921360",
    "end": "923720"
  },
  {
    "text": "restricts which identity pool is",
    "start": "923720",
    "end": "926680"
  },
  {
    "text": "permitted to assume a role and this",
    "start": "926680",
    "end": "928720"
  },
  {
    "text": "would effectively mitigate the attack",
    "start": "928720",
    "end": "931759"
  },
  {
    "text": "however if that condition wasn't present",
    "start": "931759",
    "end": "933920"
  },
  {
    "text": "and we're going to be talking about some",
    "start": "933920",
    "end": "935000"
  },
  {
    "text": "reasons why it wasn't present in just a",
    "start": "935000",
    "end": "936480"
  },
  {
    "text": "little bit anyone in the world would be",
    "start": "936480",
    "end": "938839"
  },
  {
    "text": "able to assume this role the specific",
    "start": "938839",
    "end": "942360"
  },
  {
    "text": "way that they would do it is by creating",
    "start": "942360",
    "end": "944440"
  },
  {
    "text": "their own Cognito identity pool in their",
    "start": "944440",
    "end": "946360"
  },
  {
    "text": "own attacker controlled account by",
    "start": "946360",
    "end": "948399"
  },
  {
    "text": "authenticating it or by interacting with",
    "start": "948399",
    "end": "950199"
  },
  {
    "text": "that they could get that token and pass",
    "start": "950199",
    "end": "952000"
  },
  {
    "text": "that into the assume role with web",
    "start": "952000",
    "end": "953399"
  },
  {
    "text": "identity call so for our purposes today",
    "start": "953399",
    "end": "956240"
  },
  {
    "text": "we'll refer to this as the variant one",
    "start": "956240",
    "end": "959160"
  },
  {
    "text": "vulnerable policy a policy that trusts",
    "start": "959160",
    "end": "961880"
  },
  {
    "text": "Cognito service but doesn't limit which",
    "start": "961880",
    "end": "964279"
  },
  {
    "text": "specific identity pool is permitted to",
    "start": "964279",
    "end": "966639"
  },
  {
    "text": "assume it the reason we're referring to",
    "start": "966639",
    "end": "968880"
  },
  {
    "text": "this as variant one is because there's a",
    "start": "968880",
    "end": "970680"
  },
  {
    "text": "variant two as well you might have",
    "start": "970680",
    "end": "972720"
  },
  {
    "text": "noticed when I showed the default trust",
    "start": "972720",
    "end": "974639"
  },
  {
    "text": "policy there's actually two conditions",
    "start": "974639",
    "end": "977160"
  },
  {
    "text": "this second one is the AMR condition or",
    "start": "977160",
    "end": "979759"
  },
  {
    "text": "the authentication methods references",
    "start": "979759",
    "end": "982399"
  },
  {
    "text": "and you might wonder could we assume a",
    "start": "982399",
    "end": "984319"
  },
  {
    "text": "role that had this condition set and it",
    "start": "984319",
    "end": "986360"
  },
  {
    "text": "turns out we absolutely could all all",
    "start": "986360",
    "end": "989079"
  },
  {
    "text": "this condition is doing is checking that",
    "start": "989079",
    "end": "991000"
  },
  {
    "text": "you are authenticated to an identity",
    "start": "991000",
    "end": "993079"
  },
  {
    "text": "pool not that you are authenticated to a",
    "start": "993079",
    "end": "995560"
  },
  {
    "text": "specific identity pool and because we",
    "start": "995560",
    "end": "998040"
  },
  {
    "text": "can just create our own identity pool we",
    "start": "998040",
    "end": "1000120"
  },
  {
    "text": "can configure it however we like and so",
    "start": "1000120",
    "end": "1001959"
  },
  {
    "text": "we can set up that authentication piece",
    "start": "1001959",
    "end": "1003720"
  },
  {
    "text": "to satisfy this condition so for our",
    "start": "1003720",
    "end": "1006160"
  },
  {
    "text": "purposes today we're going to refer to",
    "start": "1006160",
    "end": "1008040"
  },
  {
    "text": "this as the variant 2 vulnerable",
    "start": "1008040",
    "end": "1010959"
  },
  {
    "text": "policy now you might have noticed I",
    "start": "1010959",
    "end": "1013680"
  },
  {
    "text": "refer to these as misconfigurations and",
    "start": "1013680",
    "end": "1016399"
  },
  {
    "text": "that's because they are everything we've",
    "start": "1016399",
    "end": "1018360"
  },
  {
    "text": "talked about so far when it comes to",
    "start": "1018360",
    "end": "1019839"
  },
  {
    "text": "assume RO with web identity has been a",
    "start": "1019839",
    "end": "1022639"
  },
  {
    "text": "misconfiguration the get of action stuff",
    "start": "1022639",
    "end": "1024918"
  },
  {
    "text": "Cognito stuff any of the other",
    "start": "1024919",
    "end": "1026600"
  },
  {
    "text": "Technologies and services that have this",
    "start": "1026600",
    "end": "1028360"
  },
  {
    "text": "very same issue they're all miscon fix",
    "start": "1028360",
    "end": "1031120"
  },
  {
    "text": "and so at this point you're probably",
    "start": "1031120",
    "end": "1032240"
  },
  {
    "text": "wondering well Nick I was promised a",
    "start": "1032240",
    "end": "1033918"
  },
  {
    "text": "second vulnerability you're telling me",
    "start": "1033919",
    "end": "1035319"
  },
  {
    "text": "this is a misconfiguration what gives",
    "start": "1035319",
    "end": "1037839"
  },
  {
    "text": "well this is where things get weird and",
    "start": "1037839",
    "end": "1040038"
  },
  {
    "text": "we dive into the second vulnerability",
    "start": "1040039",
    "end": "1041959"
  },
  {
    "text": "the AWS amplify service exposing IEM",
    "start": "1041959",
    "end": "1045038"
  },
  {
    "text": "roles to take over see earlier this year",
    "start": "1045039",
    "end": "1047880"
  },
  {
    "text": "when we noticed this potential",
    "start": "1047880",
    "end": "1049600"
  },
  {
    "text": "misconfiguration in cognito one of the",
    "start": "1049600",
    "end": "1051960"
  },
  {
    "text": "first questions we had was okay cool I",
    "start": "1051960",
    "end": "1054480"
  },
  {
    "text": "wonder how common this misconfiguration",
    "start": "1054480",
    "end": "1056640"
  },
  {
    "text": "is and because it can be used for",
    "start": "1056640",
    "end": "1058799"
  },
  {
    "text": "initial access literally just like",
    "start": "1058799",
    "end": "1060480"
  },
  {
    "text": "assume rolling into victim accounts we",
    "start": "1060480",
    "end": "1062520"
  },
  {
    "text": "wanted to know if we could use publicly",
    "start": "1062520",
    "end": "1064320"
  },
  {
    "text": "available data to find vulnerable roles",
    "start": "1064320",
    "end": "1067039"
  },
  {
    "text": "and notify their owners so that they",
    "start": "1067039",
    "end": "1068520"
  },
  {
    "text": "could be fixed to do this we used a tool",
    "start": "1068520",
    "end": "1070840"
  },
  {
    "text": "called Source graph one of the free",
    "start": "1070840",
    "end": "1072880"
  },
  {
    "text": "features of which is essentially a",
    "start": "1072880",
    "end": "1074880"
  },
  {
    "text": "Google search but for public GitHub",
    "start": "1074880",
    "end": "1076840"
  },
  {
    "text": "repos we wrote a regular pression to",
    "start": "1076840",
    "end": "1079440"
  },
  {
    "text": "find I roll ARS threw that into Source",
    "start": "1079440",
    "end": "1081919"
  },
  {
    "text": "graph got back results D duplicated them",
    "start": "1081919",
    "end": "1084640"
  },
  {
    "text": "removed like clearly placeholder RS and",
    "start": "1084640",
    "end": "1086840"
  },
  {
    "text": "so on and that left us with a little",
    "start": "1086840",
    "end": "1088880"
  },
  {
    "text": "over 8,000 results from there we then",
    "start": "1088880",
    "end": "1092320"
  },
  {
    "text": "tried to assume each rle twice once",
    "start": "1092320",
    "end": "1095280"
  },
  {
    "text": "authenticated once unauthenticated we",
    "start": "1095280",
    "end": "1097799"
  },
  {
    "text": "let our automation run and pretty much",
    "start": "1097799",
    "end": "1099919"
  },
  {
    "text": "immediately it was clear that something",
    "start": "1099919",
    "end": "1101400"
  },
  {
    "text": "was terribly wrong remember this was",
    "start": "1101400",
    "end": "1104200"
  },
  {
    "text": "across basically all of public GitHub",
    "start": "1104200",
    "end": "1106640"
  },
  {
    "text": "across teams organizations individuals",
    "start": "1106640",
    "end": "1109240"
  },
  {
    "text": "and companies so why was it then that",
    "start": "1109240",
    "end": "1112080"
  },
  {
    "text": "the overwhelming majority of roles that",
    "start": "1112080",
    "end": "1114240"
  },
  {
    "text": "we found to be vulnerable all had this",
    "start": "1114240",
    "end": "1116960"
  },
  {
    "text": "weirdly specific naming convention uh",
    "start": "1116960",
    "end": "1119679"
  },
  {
    "text": "what you see here on the slide are a",
    "start": "1119679",
    "end": "1121280"
  },
  {
    "text": "handful of real roles that we found in",
    "start": "1121280",
    "end": "1123200"
  },
  {
    "text": "the wild that were vulnerable that we've",
    "start": "1123200",
    "end": "1124960"
  },
  {
    "text": "slightly modified the names of so as to",
    "start": "1124960",
    "end": "1126880"
  },
  {
    "text": "respect the anonymity of their owners",
    "start": "1126880",
    "end": "1129640"
  },
  {
    "text": "now what made these roles so strange was",
    "start": "1129640",
    "end": "1131760"
  },
  {
    "text": "that they all ended in either offr or",
    "start": "1131760",
    "end": "1134600"
  },
  {
    "text": "unoth Ru and additionally they had",
    "start": "1134600",
    "end": "1137000"
  },
  {
    "text": "timestamps dating back to either 2018 or",
    "start": "1137000",
    "end": "1139679"
  },
  {
    "text": "2019 or they would have a six digigit",
    "start": "1139679",
    "end": "1142919"
  },
  {
    "text": "integer presumably these were the newer",
    "start": "1142919",
    "end": "1145480"
  },
  {
    "text": "ones to make things even more strange we",
    "start": "1145480",
    "end": "1148120"
  },
  {
    "text": "actually found three roles that were",
    "start": "1148120",
    "end": "1150039"
  },
  {
    "text": "vulnerable that belonged to AWS",
    "start": "1150039",
    "end": "1152600"
  },
  {
    "text": "themselves and so at this point it",
    "start": "1152600",
    "end": "1154400"
  },
  {
    "text": "wasn't clear what was going on was this",
    "start": "1154400",
    "end": "1156640"
  },
  {
    "text": "some sort of tutorial or demo gone wrong",
    "start": "1156640",
    "end": "1159200"
  },
  {
    "text": "where somebody was demonstrating how to",
    "start": "1159200",
    "end": "1160679"
  },
  {
    "text": "do this but didn't realize it was",
    "start": "1160679",
    "end": "1162720"
  },
  {
    "text": "vulnerable using Source graph we were",
    "start": "1162720",
    "end": "1164840"
  },
  {
    "text": "able to see the names of the files where",
    "start": "1164840",
    "end": "1167760"
  },
  {
    "text": "the majority of these rules were being",
    "start": "1167760",
    "end": "1169320"
  },
  {
    "text": "found and again the overwhelming",
    "start": "1169320",
    "end": "1171799"
  },
  {
    "text": "majority were found in a file called",
    "start": "1171799",
    "end": "1173679"
  },
  {
    "text": "team provider info. Json and this",
    "start": "1173679",
    "end": "1177480"
  },
  {
    "text": "ultimately L us led us to the culprit",
    "start": "1177480",
    "end": "1179919"
  },
  {
    "text": "who was causing these roles to be",
    "start": "1179919",
    "end": "1181520"
  },
  {
    "text": "vulnerable it was AWS amplify normally",
    "start": "1181520",
    "end": "1185440"
  },
  {
    "text": "when we're talking about a",
    "start": "1185440",
    "end": "1186320"
  },
  {
    "text": "misconfiguration in the cloud we're",
    "start": "1186320",
    "end": "1188200"
  },
  {
    "text": "talking about mistakes misunderstanding",
    "start": "1188200",
    "end": "1191039"
  },
  {
    "text": "developers moving a little bit too",
    "start": "1191039",
    "end": "1192440"
  },
  {
    "text": "quickly in Breaking something or not",
    "start": "1192440",
    "end": "1194280"
  },
  {
    "text": "realizing that something is as exposed",
    "start": "1194280",
    "end": "1196480"
  },
  {
    "text": "as it actually is this is a rare",
    "start": "1196480",
    "end": "1199000"
  },
  {
    "text": "circumstance in which an AWS service",
    "start": "1199000",
    "end": "1201320"
  },
  {
    "text": "itself was exposing IM IM roles such",
    "start": "1201320",
    "end": "1204200"
  },
  {
    "text": "that anyone in the world would be able",
    "start": "1204200",
    "end": "1205799"
  },
  {
    "text": "to assume them and unfortunately they",
    "start": "1205799",
    "end": "1208120"
  },
  {
    "text": "didn't just do it once they actually did",
    "start": "1208120",
    "end": "1209880"
  },
  {
    "text": "it twice if you're not familiar with",
    "start": "1209880",
    "end": "1211880"
  },
  {
    "text": "amplify the sort of core idea behind it",
    "start": "1211880",
    "end": "1214440"
  },
  {
    "text": "is that it's a framework for building",
    "start": "1214440",
    "end": "1216080"
  },
  {
    "text": "web and mobile applications by using",
    "start": "1216080",
    "end": "1218919"
  },
  {
    "text": "amplify uh your developers can focus on",
    "start": "1218919",
    "end": "1221159"
  },
  {
    "text": "writing code and amplify will abstract",
    "start": "1221159",
    "end": "1223799"
  },
  {
    "text": "away a lot of the underlying",
    "start": "1223799",
    "end": "1225720"
  },
  {
    "text": "infrastructure so for example uh if you",
    "start": "1225720",
    "end": "1228679"
  },
  {
    "text": "want to build a web application and",
    "start": "1228679",
    "end": "1230080"
  },
  {
    "text": "allow your users to be able to create",
    "start": "1230080",
    "end": "1232159"
  },
  {
    "text": "accounts sign up change their passwords",
    "start": "1232159",
    "end": "1234159"
  },
  {
    "text": "and so on uh your developers don't even",
    "start": "1234159",
    "end": "1237400"
  },
  {
    "text": "need to know what Cognito is they can",
    "start": "1237400",
    "end": "1239600"
  },
  {
    "text": "simply add authentication and amplify",
    "start": "1239600",
    "end": "1242240"
  },
  {
    "text": "will go in create those Cognito",
    "start": "1242240",
    "end": "1244080"
  },
  {
    "text": "resources configure them and so on key",
    "start": "1244080",
    "end": "1246840"
  },
  {
    "text": "emphasis amplify configures those",
    "start": "1246840",
    "end": "1249320"
  },
  {
    "text": "Cognito resources Now One Challenge we",
    "start": "1249320",
    "end": "1252440"
  },
  {
    "text": "often have as Cloud security researchers",
    "start": "1252440",
    "end": "1254919"
  },
  {
    "text": "is that it's not clear why certain",
    "start": "1254919",
    "end": "1257159"
  },
  {
    "text": "vulner vulnerable behaviors are",
    "start": "1257159",
    "end": "1258880"
  },
  {
    "text": "introduced if we compare this to the",
    "start": "1258880",
    "end": "1260640"
  },
  {
    "text": "first vulnerability we found today for",
    "start": "1260640",
    "end": "1262520"
  },
  {
    "text": "some remarkably strange reason changing",
    "start": "1262520",
    "end": "1264760"
  },
  {
    "text": "the casing on a Json parameter let us",
    "start": "1264760",
    "end": "1266600"
  },
  {
    "text": "break a major security boundary in AWS",
    "start": "1266600",
    "end": "1269280"
  },
  {
    "text": "so you run into these scenarios where",
    "start": "1269280",
    "end": "1271080"
  },
  {
    "text": "it's clearly not good behavior but it's",
    "start": "1271080",
    "end": "1273799"
  },
  {
    "text": "not sure why it's occurring the",
    "start": "1273799",
    "end": "1276360"
  },
  {
    "text": "Amplified vulnerability is actually one",
    "start": "1276360",
    "end": "1278000"
  },
  {
    "text": "of the rare circumstances in which we're",
    "start": "1278000",
    "end": "1279840"
  },
  {
    "text": "able to know definitively not only how",
    "start": "1279840",
    "end": "1281679"
  },
  {
    "text": "this in was introduced but when and",
    "start": "1281679",
    "end": "1284240"
  },
  {
    "text": "that's because the amplifi CLI written",
    "start": "1284240",
    "end": "1286760"
  },
  {
    "text": "by ews is actually open source and by",
    "start": "1286760",
    "end": "1289960"
  },
  {
    "text": "digging through the commit history we",
    "start": "1289960",
    "end": "1292159"
  },
  {
    "text": "can see how and when these",
    "start": "1292159",
    "end": "1294240"
  },
  {
    "text": "vulnerabilities were introduced and",
    "start": "1294240",
    "end": "1296279"
  },
  {
    "text": "that's how I can tell you that on around",
    "start": "1296279",
    "end": "1298640"
  },
  {
    "text": "July 3rd 2018 the variant 2 vulnerable",
    "start": "1298640",
    "end": "1302159"
  },
  {
    "text": "trust policy was introduced to both the",
    "start": "1302159",
    "end": "1304400"
  },
  {
    "text": "amplify CLI and the",
    "start": "1304400",
    "end": "1306640"
  },
  {
    "text": "studio what was happening was anytime",
    "start": "1306640",
    "end": "1309440"
  },
  {
    "text": "you created an amplify project two roles",
    "start": "1309440",
    "end": "1311960"
  },
  {
    "text": "would be created by default in your",
    "start": "1311960",
    "end": "1313679"
  },
  {
    "text": "account in AU and unauth like we saw",
    "start": "1313679",
    "end": "1317039"
  },
  {
    "text": "previously unfortunately as a part of",
    "start": "1317039",
    "end": "1319320"
  },
  {
    "text": "this commit the default trust policy for",
    "start": "1319320",
    "end": "1321919"
  },
  {
    "text": "these roles out of the box was the",
    "start": "1321919",
    "end": "1324120"
  },
  {
    "text": "variant to vulnerable policy simply",
    "start": "1324120",
    "end": "1327559"
  },
  {
    "text": "creating an amplified project using the",
    "start": "1327559",
    "end": "1329480"
  },
  {
    "text": "service completely normally as you would",
    "start": "1329480",
    "end": "1330919"
  },
  {
    "text": "expect would introduce two roles in your",
    "start": "1330919",
    "end": "1332840"
  },
  {
    "text": "account that could be assumed by anyone",
    "start": "1332840",
    "end": "1334960"
  },
  {
    "text": "so if you thought you were building a",
    "start": "1334960",
    "end": "1336760"
  },
  {
    "text": "private internal only application uh",
    "start": "1336760",
    "end": "1339320"
  },
  {
    "text": "that you were requiring authentication",
    "start": "1339320",
    "end": "1340760"
  },
  {
    "text": "for and gatekeeping who could create",
    "start": "1340760",
    "end": "1342480"
  },
  {
    "text": "accounts so that you could protect",
    "start": "1342480",
    "end": "1343840"
  },
  {
    "text": "whatever resources were associated with",
    "start": "1343840",
    "end": "1345360"
  },
  {
    "text": "them well unfortunately no you weren't",
    "start": "1345360",
    "end": "1347960"
  },
  {
    "text": "any anybody could have just assumed",
    "start": "1347960",
    "end": "1349400"
  },
  {
    "text": "those roles in your account and accessed",
    "start": "1349400",
    "end": "1351320"
  },
  {
    "text": "any resources associated with them like",
    "start": "1351320",
    "end": "1354120"
  },
  {
    "text": "I said that was introduced on July 3rd",
    "start": "1354120",
    "end": "1356360"
  },
  {
    "text": "2018 a little over a year later on",
    "start": "1356360",
    "end": "1359159"
  },
  {
    "text": "August 8th 2019 AWS seemingly",
    "start": "1359159",
    "end": "1362600"
  },
  {
    "text": "unintentionally fixed this behavior in",
    "start": "1362600",
    "end": "1365320"
  },
  {
    "text": "particular they set the new default",
    "start": "1365320",
    "end": "1367520"
  },
  {
    "text": "effect on that trust policy to deny and",
    "start": "1367520",
    "end": "1370360"
  },
  {
    "text": "they remove the condition entirely and",
    "start": "1370360",
    "end": "1372400"
  },
  {
    "text": "this is actually the same default trust",
    "start": "1372400",
    "end": "1374240"
  },
  {
    "text": "policy that you would see today if you",
    "start": "1374240",
    "end": "1376039"
  },
  {
    "text": "were to create an amplified project now",
    "start": "1376039",
    "end": "1378600"
  },
  {
    "text": "it's really important to stress that",
    "start": "1378600",
    "end": "1380159"
  },
  {
    "text": "when we say fixed what we mean by that",
    "start": "1380159",
    "end": "1382480"
  },
  {
    "text": "is that no future roles would become",
    "start": "1382480",
    "end": "1384799"
  },
  {
    "text": "misconfigured any that had already been",
    "start": "1384799",
    "end": "1387440"
  },
  {
    "text": "created were still vulnerable and could",
    "start": "1387440",
    "end": "1389640"
  },
  {
    "text": "be assumed by an external adversary",
    "start": "1389640",
    "end": "1391919"
  },
  {
    "text": "that's how we were able to assume them",
    "start": "1391919",
    "end": "1394000"
  },
  {
    "text": "in",
    "start": "1394000",
    "end": "1395440"
  },
  {
    "text": "20124 next on July 22nd 2020 the variant",
    "start": "1395440",
    "end": "1399600"
  },
  {
    "text": "1 was introduced to the amplify CLI in",
    "start": "1399600",
    "end": "1402200"
  },
  {
    "text": "studio and this one was a bit more",
    "start": "1402200",
    "end": "1404039"
  },
  {
    "text": "complicated than the previous one um",
    "start": "1404039",
    "end": "1406600"
  },
  {
    "text": "like I said before you can add",
    "start": "1406600",
    "end": "1408480"
  },
  {
    "text": "authentication to amplify projects if at",
    "start": "1408480",
    "end": "1411559"
  },
  {
    "text": "any time you chose to remove that",
    "start": "1411559",
    "end": "1413480"
  },
  {
    "text": "authentication component for any reason",
    "start": "1413480",
    "end": "1415679"
  },
  {
    "text": "that would introduce the variant one",
    "start": "1415679",
    "end": "1417360"
  },
  {
    "text": "vulnerable trust policy in speaking to",
    "start": "1417360",
    "end": "1419840"
  },
  {
    "text": "developers who were impacted by this",
    "start": "1419840",
    "end": "1421320"
  },
  {
    "text": "issue it seems the most common reasoning",
    "start": "1421320",
    "end": "1423279"
  },
  {
    "text": "for this to occur was situations where",
    "start": "1423279",
    "end": "1425919"
  },
  {
    "text": "an amplified project started with the",
    "start": "1425919",
    "end": "1428000"
  },
  {
    "text": "built-in Cognito resources and then at a",
    "start": "1428000",
    "end": "1430640"
  },
  {
    "text": "later time moved to Cognito outside of",
    "start": "1430640",
    "end": "1432840"
  },
  {
    "text": "amplify or to just a different identity",
    "start": "1432840",
    "end": "1435159"
  },
  {
    "text": "provider entirely regardless of your",
    "start": "1435159",
    "end": "1437440"
  },
  {
    "text": "reason why what occurred was that a",
    "start": "1437440",
    "end": "1439679"
  },
  {
    "text": "cloud formation template would run that",
    "start": "1439679",
    "end": "1441840"
  },
  {
    "text": "would originally set the trust policy to",
    "start": "1441840",
    "end": "1443760"
  },
  {
    "text": "what you see here on the slide which is",
    "start": "1443760",
    "end": "1445440"
  },
  {
    "text": "totally fine this is the secure policy",
    "start": "1445440",
    "end": "1448400"
  },
  {
    "text": "however under the condition for the",
    "start": "1448400",
    "end": "1450840"
  },
  {
    "text": "deletion of the authentication resources",
    "start": "1450840",
    "end": "1453120"
  },
  {
    "text": "there was a line to delete the condition",
    "start": "1453120",
    "end": "1455480"
  },
  {
    "text": "off of the trust policy and when that",
    "start": "1455480",
    "end": "1457880"
  },
  {
    "text": "happened all that she were left with was",
    "start": "1457880",
    "end": "1459720"
  },
  {
    "text": "the variant one vulnerable policy",
    "start": "1459720",
    "end": "1462400"
  },
  {
    "text": "allowing anyone in the world the ability",
    "start": "1462400",
    "end": "1464400"
  },
  {
    "text": "to assume that role crucially when this",
    "start": "1464400",
    "end": "1467600"
  },
  {
    "text": "exposure occurs whatever identity",
    "start": "1467600",
    "end": "1469720"
  },
  {
    "text": "policies were associated with your role",
    "start": "1469720",
    "end": "1472159"
  },
  {
    "text": "it still had access to and additionally",
    "start": "1472159",
    "end": "1475640"
  },
  {
    "text": "unfortunately developers love to over",
    "start": "1475640",
    "end": "1478159"
  },
  {
    "text": "privilege their identities when we were",
    "start": "1478159",
    "end": "1480279"
  },
  {
    "text": "reacting to this vulnerability and",
    "start": "1480279",
    "end": "1481720"
  },
  {
    "text": "notifying customers so it could be",
    "start": "1481720",
    "end": "1483200"
  },
  {
    "text": "mitigated we found a number of customers",
    "start": "1483200",
    "end": "1485120"
  },
  {
    "text": "who had highly privileged imem roles",
    "start": "1485120",
    "end": "1487399"
  },
  {
    "text": "including some with S3 fil axis Kinesis",
    "start": "1487399",
    "end": "1490039"
  },
  {
    "text": "fil axis and more unfortunately as a",
    "start": "1490039",
    "end": "1492720"
  },
  {
    "text": "part of this vulnerability introduced by",
    "start": "1492720",
    "end": "1494600"
  },
  {
    "text": "amplify now anyone else would have those",
    "start": "1494600",
    "end": "1497240"
  },
  {
    "text": "very same level of privileges",
    "start": "1497240",
    "end": "1498919"
  },
  {
    "text": "in their",
    "start": "1498919",
    "end": "1500080"
  },
  {
    "text": "account um so like I said that was",
    "start": "1500080",
    "end": "1502080"
  },
  {
    "text": "introduced in July of 2020 we eventually",
    "start": "1502080",
    "end": "1504919"
  },
  {
    "text": "uh identified this and disclosed to AWS",
    "start": "1504919",
    "end": "1507159"
  },
  {
    "text": "on January 9th of 2024 uh in response",
    "start": "1507159",
    "end": "1510360"
  },
  {
    "text": "AWS has fixed this issue and in",
    "start": "1510360",
    "end": "1513120"
  },
  {
    "text": "particular they've gone a little bit",
    "start": "1513120",
    "end": "1514559"
  },
  {
    "text": "above and beyond what they did with",
    "start": "1514559",
    "end": "1516039"
  },
  {
    "text": "GitHub actions they did the same thing",
    "start": "1516039",
    "end": "1518240"
  },
  {
    "text": "where you can no longer create a",
    "start": "1518240",
    "end": "1519760"
  },
  {
    "text": "vulnerable trust policy in this way so",
    "start": "1519760",
    "end": "1521720"
  },
  {
    "text": "variant one or Varian 2 can't make it",
    "start": "1521720",
    "end": "1523600"
  },
  {
    "text": "anymore however they also made changes",
    "start": "1523600",
    "end": "1526120"
  },
  {
    "text": "to STS itself so that even if there was",
    "start": "1526120",
    "end": "1529080"
  },
  {
    "text": "a vulnerable role an external account",
    "start": "1529080",
    "end": "1531399"
  },
  {
    "text": "can no longer assume that role in your",
    "start": "1531399",
    "end": "1534559"
  },
  {
    "text": "account if you'd like to learn more",
    "start": "1534559",
    "end": "1536440"
  },
  {
    "text": "about this vulnerability AWS did release",
    "start": "1536440",
    "end": "1538480"
  },
  {
    "text": "a security bulletin for it and",
    "start": "1538480",
    "end": "1540320"
  },
  {
    "text": "additionally we have a blog post with a",
    "start": "1540320",
    "end": "1541919"
  },
  {
    "text": "ton of additional details on how we",
    "start": "1541919",
    "end": "1543440"
  },
  {
    "text": "found this issue and other similar types",
    "start": "1543440",
    "end": "1545640"
  },
  {
    "text": "of attacks you can do in",
    "start": "1545640",
    "end": "1547520"
  },
  {
    "text": "AWS with the time we have left I wanted",
    "start": "1547520",
    "end": "1549840"
  },
  {
    "text": "to talk a little bit about what we can",
    "start": "1549840",
    "end": "1551880"
  },
  {
    "text": "do to prevent cross tenant attacks to be",
    "start": "1551880",
    "end": "1554480"
  },
  {
    "text": "clear your time is probably much better",
    "start": "1554480",
    "end": "1556039"
  },
  {
    "text": "spent doing things like deleting I IM",
    "start": "1556039",
    "end": "1557960"
  },
  {
    "text": "user cleaning up old access Keys",
    "start": "1557960",
    "end": "1560240"
  },
  {
    "text": "following lease privilege and so on but",
    "start": "1560240",
    "end": "1562640"
  },
  {
    "text": "if you're already doing all that or you",
    "start": "1562640",
    "end": "1564520"
  },
  {
    "text": "have the technology and processes in",
    "start": "1564520",
    "end": "1566080"
  },
  {
    "text": "place this might be something that you",
    "start": "1566080",
    "end": "1568399"
  },
  {
    "text": "consider one of the neat tools that ads",
    "start": "1568399",
    "end": "1571159"
  },
  {
    "text": "provides us are a number of condition",
    "start": "1571159",
    "end": "1573000"
  },
  {
    "text": "keys that can restrict where an attacker",
    "start": "1573000",
    "end": "1575679"
  },
  {
    "text": "can be coming from sort of similar to",
    "start": "1575679",
    "end": "1577720"
  },
  {
    "text": "what we saw with the assume RO with web",
    "start": "1577720",
    "end": "1579279"
  },
  {
    "text": "identity conditions earlier uh these",
    "start": "1579279",
    "end": "1581799"
  },
  {
    "text": "allow you to restrict what arm what",
    "start": "1581799",
    "end": "1584000"
  },
  {
    "text": "account or what AWS organization is",
    "start": "1584000",
    "end": "1586760"
  },
  {
    "text": "permitted to assume a particular role to",
    "start": "1586760",
    "end": "1589360"
  },
  {
    "text": "be clear these are not included by",
    "start": "1589360",
    "end": "1591080"
  },
  {
    "text": "default when you create a trust policy",
    "start": "1591080",
    "end": "1592960"
  },
  {
    "text": "you would have to manually attach these",
    "start": "1592960",
    "end": "1595039"
  },
  {
    "text": "to each Ro and more importantly make",
    "start": "1595039",
    "end": "1597799"
  },
  {
    "text": "sure that the service that you're using",
    "start": "1597799",
    "end": "1599919"
  },
  {
    "text": "is uh is compatible with these condition",
    "start": "1599919",
    "end": "1602520"
  },
  {
    "text": "keys from some nominal testing it",
    "start": "1602520",
    "end": "1604559"
  },
  {
    "text": "appears that ec2 Lambda and appsync all",
    "start": "1604559",
    "end": "1607120"
  },
  {
    "text": "work totally fine but again strongly",
    "start": "1607120",
    "end": "1609399"
  },
  {
    "text": "encourage you to test this before you",
    "start": "1609399",
    "end": "1610760"
  },
  {
    "text": "push it into production as an example of",
    "start": "1610760",
    "end": "1613600"
  },
  {
    "text": "how this can protect your roles we'll",
    "start": "1613600",
    "end": "1615760"
  },
  {
    "text": "use Source account as an example",
    "start": "1615760",
    "end": "1617679"
  },
  {
    "text": "alongside the first vulnerability we",
    "start": "1617679",
    "end": "1619360"
  },
  {
    "text": "talked about today a confused Deputy vul",
    "start": "1619360",
    "end": "1621480"
  },
  {
    "text": "in AWS appsync with this particular",
    "start": "1621480",
    "end": "1624440"
  },
  {
    "text": "attack an adversary would be able to",
    "start": "1624440",
    "end": "1626039"
  },
  {
    "text": "weaponize the absenc service to assume a",
    "start": "1626039",
    "end": "1628240"
  },
  {
    "text": "role in a victim account however if we",
    "start": "1628240",
    "end": "1631159"
  },
  {
    "text": "added a condition on that trust policy",
    "start": "1631159",
    "end": "1634240"
  },
  {
    "text": "to restrict what account is permitted to",
    "start": "1634240",
    "end": "1636640"
  },
  {
    "text": "assume it we can actually successfully",
    "start": "1636640",
    "end": "1639039"
  },
  {
    "text": "block an external adversary and the",
    "start": "1639039",
    "end": "1641559"
  },
  {
    "text": "reason we know this is back when that",
    "start": "1641559",
    "end": "1643200"
  },
  {
    "text": "vulnerability was still present we were",
    "start": "1643200",
    "end": "1644919"
  },
  {
    "text": "able to test this for ourselves and see",
    "start": "1644919",
    "end": "1646880"
  },
  {
    "text": "that by setting this condition we could",
    "start": "1646880",
    "end": "1648760"
  },
  {
    "text": "successfully block an adversary so even",
    "start": "1648760",
    "end": "1651520"
  },
  {
    "text": "in that worst case scenario of somebody",
    "start": "1651520",
    "end": "1653600"
  },
  {
    "text": "weaponizing a AWS service against",
    "start": "1653600",
    "end": "1655880"
  },
  {
    "text": "customers you could actually defend your",
    "start": "1655880",
    "end": "1658039"
  },
  {
    "text": "organization from that type of attack",
    "start": "1658039",
    "end": "1660600"
  },
  {
    "text": "additionally another reason I like this",
    "start": "1660600",
    "end": "1662760"
  },
  {
    "text": "is It's a form of Defense in depth if",
    "start": "1662760",
    "end": "1665200"
  },
  {
    "text": "pass role States under no circumstance",
    "start": "1665200",
    "end": "1667640"
  },
  {
    "text": "should someone be able to assume a role",
    "start": "1667640",
    "end": "1669200"
  },
  {
    "text": "cross tenant in AWS great we beat that",
    "start": "1669200",
    "end": "1672080"
  },
  {
    "text": "with SpongeBob memes so the next time",
    "start": "1672080",
    "end": "1673919"
  },
  {
    "text": "someone gets around that let's have an",
    "start": "1673919",
    "end": "1675679"
  },
  {
    "text": "additional layer of Defense to block",
    "start": "1675679",
    "end": "1677840"
  },
  {
    "text": "this type of activity so in conclusion",
    "start": "1677840",
    "end": "1681120"
  },
  {
    "text": "we took a look today at how confused",
    "start": "1681120",
    "end": "1682679"
  },
  {
    "text": "depy attacks can weaponize cloud",
    "start": "1682679",
    "end": "1684720"
  },
  {
    "text": "services against us we took a look at",
    "start": "1684720",
    "end": "1687120"
  },
  {
    "text": "assumer with web identity in a very",
    "start": "1687120",
    "end": "1689159"
  },
  {
    "text": "important misconfiguration that could",
    "start": "1689159",
    "end": "1690679"
  },
  {
    "text": "lead your roles to be vulnerable again",
    "start": "1690679",
    "end": "1692960"
  },
  {
    "text": "if you're a heavy AWS user I strongly",
    "start": "1692960",
    "end": "1695000"
  },
  {
    "text": "encourage you to audit your roles",
    "start": "1695000",
    "end": "1696600"
  },
  {
    "text": "looking for this type of",
    "start": "1696600",
    "end": "1698320"
  },
  {
    "text": "misconfiguration it's an easy one to",
    "start": "1698320",
    "end": "1700039"
  },
  {
    "text": "make so easy in fact AWS actually made",
    "start": "1700039",
    "end": "1702399"
  },
  {
    "text": "it twice additionally we took a look at",
    "start": "1702399",
    "end": "1705279"
  },
  {
    "text": "how uh condition statements and",
    "start": "1705279",
    "end": "1707279"
  },
  {
    "text": "condition keys can potentially defend us",
    "start": "1707279",
    "end": "1709880"
  },
  {
    "text": "from confused Deputy attacks in AWS if",
    "start": "1709880",
    "end": "1713039"
  },
  {
    "text": "you enjoyed this talk you can find more",
    "start": "1713039",
    "end": "1714440"
  },
  {
    "text": "of our research at security labs.",
    "start": "1714440",
    "end": "1715960"
  },
  {
    "text": "datadog hq.com uh my name is Nick verett",
    "start": "1715960",
    "end": "1719200"
  },
  {
    "text": "if you have any questions feel free to",
    "start": "1719200",
    "end": "1720679"
  },
  {
    "text": "follow me to the wrap-up room or feel",
    "start": "1720679",
    "end": "1722480"
  },
  {
    "text": "free to reach out over social media",
    "start": "1722480",
    "end": "1724240"
  },
  {
    "text": "thank you all so much",
    "start": "1724240",
    "end": "1727799"
  }
]