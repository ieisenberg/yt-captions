[
  {
    "text": "good afternoon welcome to periscope an",
    "start": "30",
    "end": "3060"
  },
  {
    "text": "effective probing and fuzzing network",
    "start": "3060",
    "end": "5700"
  },
  {
    "text": "for hardware for the Hardware OS",
    "start": "5700",
    "end": "7890"
  },
  {
    "text": "boundary we're in the Jasmine room the",
    "start": "7890",
    "end": "11490"
  },
  {
    "text": "speaker this afternoon is doc young song",
    "start": "11490",
    "end": "15410"
  },
  {
    "text": "and a couple of notes before we begin",
    "start": "15410",
    "end": "18529"
  },
  {
    "text": "please stop by the business hall it's",
    "start": "18529",
    "end": "21000"
  },
  {
    "text": "located in a Mandalay Bay Oceanside and",
    "start": "21000",
    "end": "23279"
  },
  {
    "text": "shoreline ballrooms and level 2 you can",
    "start": "23279",
    "end": "26039"
  },
  {
    "text": "stop by during the day and then this",
    "start": "26039",
    "end": "28019"
  },
  {
    "text": "evening there's the Welcome Reception of",
    "start": "28019",
    "end": "29580"
  },
  {
    "text": "5:30",
    "start": "29580",
    "end": "30330"
  },
  {
    "text": "also the blackhat Arsenal is in the",
    "start": "30330",
    "end": "33180"
  },
  {
    "text": "business hall on level 2 finally join us",
    "start": "33180",
    "end": "36690"
  },
  {
    "text": "for the pony Awards in the lagoon JKL",
    "start": "36690",
    "end": "39210"
  },
  {
    "text": "and at 18:30 just out of courtesy to",
    "start": "39210",
    "end": "44670"
  },
  {
    "text": "your fellow attendees please put your",
    "start": "44670",
    "end": "46829"
  },
  {
    "text": "phone on vibrate and if you have",
    "start": "46829",
    "end": "49920"
  },
  {
    "text": "questions at the end of the session",
    "start": "49920",
    "end": "51420"
  },
  {
    "text": "there are microphones located on either",
    "start": "51420",
    "end": "53670"
  },
  {
    "text": "side so please use the microphones to",
    "start": "53670",
    "end": "56430"
  },
  {
    "text": "ask any questions and with that I'd like",
    "start": "56430",
    "end": "58680"
  },
  {
    "text": "to invite up to the stage thank you for",
    "start": "58680",
    "end": "68130"
  },
  {
    "text": "the introduction I'm talking song I'm a",
    "start": "68130",
    "end": "70170"
  },
  {
    "text": "PhD student at UC Irvine I'm gonna",
    "start": "70170",
    "end": "73650"
  },
  {
    "text": "present our work periscope",
    "start": "73650",
    "end": "75540"
  },
  {
    "text": "an effective probing and fuzzing",
    "start": "75540",
    "end": "77430"
  },
  {
    "text": "framework for the Hardware OS boundary",
    "start": "77430",
    "end": "79530"
  },
  {
    "text": "so this work is a joint work with my",
    "start": "79530",
    "end": "82229"
  },
  {
    "text": "collaborators from UC Irvine T Oberlin",
    "start": "82229",
    "end": "84869"
  },
  {
    "text": "Missy Santa Barbara and ko Lubin",
    "start": "84869",
    "end": "87590"
  },
  {
    "text": "so today the security of peripheral",
    "start": "87590",
    "end": "90600"
  },
  {
    "text": "devices remains questionable as has been",
    "start": "90600",
    "end": "93240"
  },
  {
    "text": "demonstrated by security researchers",
    "start": "93240",
    "end": "95299"
  },
  {
    "text": "peripheral chips such as Wi-Fi chips or",
    "start": "95299",
    "end": "98549"
  },
  {
    "text": "basement chips that expose an interface",
    "start": "98549",
    "end": "101130"
  },
  {
    "text": "to the external world can be compromised",
    "start": "101130",
    "end": "103439"
  },
  {
    "text": "over-the-air by just sending maliciously",
    "start": "103439",
    "end": "106170"
  },
  {
    "text": "crafted packets to the device so all",
    "start": "106170",
    "end": "109140"
  },
  {
    "text": "that was needed was proximity with the",
    "start": "109140",
    "end": "111720"
  },
  {
    "text": "victim device that has its Wi-Fi or",
    "start": "111720",
    "end": "114240"
  },
  {
    "text": "cellular network enabled so let me give",
    "start": "114240",
    "end": "117750"
  },
  {
    "text": "you a couple of examples here so a",
    "start": "117750",
    "end": "120240"
  },
  {
    "text": "prominent example of a porifera TAC is",
    "start": "120240",
    "end": "123210"
  },
  {
    "text": "it is the broadband attack presented",
    "start": "123210",
    "end": "125939"
  },
  {
    "text": "here at blackhat two years ago the",
    "start": "125939",
    "end": "128940"
  },
  {
    "text": "attack demonstrated what they call is a",
    "start": "128940",
    "end": "131280"
  },
  {
    "text": "fully remote exploit fully remote in",
    "start": "131280",
    "end": "134130"
  },
  {
    "text": "that they do not require any user",
    "start": "134130",
    "end": "137790"
  },
  {
    "text": "interaction at all",
    "start": "137790",
    "end": "138960"
  },
  {
    "text": "so the vulnerability triggered and",
    "start": "138960",
    "end": "141510"
  },
  {
    "text": "Exploited here is in the association",
    "start": "141510",
    "end": "143550"
  },
  {
    "text": "process of the Wi-Fi protocol that does",
    "start": "143550",
    "end": "146940"
  },
  {
    "text": "not require any user interaction nor",
    "start": "146940",
    "end": "148800"
  },
  {
    "text": "authentication so with arbitrary code",
    "start": "148800",
    "end": "153150"
  },
  {
    "text": "execution on the Wi-Fi chip this",
    "start": "153150",
    "end": "155460"
  },
  {
    "text": "specific attack demonstrated a worm",
    "start": "155460",
    "end": "157890"
  },
  {
    "text": "attack that surprised across different",
    "start": "157890",
    "end": "159960"
  },
  {
    "text": "devices nearby and this slide shows a",
    "start": "159960",
    "end": "163320"
  },
  {
    "text": "vulnerability that was used in a",
    "start": "163320",
    "end": "165570"
  },
  {
    "text": "baseband exploit at demonstrated at",
    "start": "165570",
    "end": "168810"
  },
  {
    "text": "mobile point to home and it was",
    "start": "168810",
    "end": "171000"
  },
  {
    "text": "demonstrated that this vulnerability",
    "start": "171000",
    "end": "172530"
  },
  {
    "text": "allows arbitrary code execution and",
    "start": "172530",
    "end": "175110"
  },
  {
    "text": "arbitrary code execution was",
    "start": "175110",
    "end": "177300"
  },
  {
    "text": "demonstrated by writing a file to a file",
    "start": "177300",
    "end": "179730"
  },
  {
    "text": "system that the baseband chip had access",
    "start": "179730",
    "end": "182460"
  },
  {
    "text": "to so what these attacks have in common",
    "start": "182460",
    "end": "185130"
  },
  {
    "text": "is that they compromised peripheral",
    "start": "185130",
    "end": "187590"
  },
  {
    "text": "devices without coming to physical",
    "start": "187590",
    "end": "190500"
  },
  {
    "text": "contact with the peripheral device when",
    "start": "190500",
    "end": "193920"
  },
  {
    "text": "you think about other peripheral attacks",
    "start": "193920",
    "end": "195780"
  },
  {
    "text": "like USB attacks they depend on the",
    "start": "195780",
    "end": "199890"
  },
  {
    "text": "victim plugging in the malicious DSP",
    "start": "199890",
    "end": "202350"
  },
  {
    "text": "devices people actually do plug them in",
    "start": "202350",
    "end": "206010"
  },
  {
    "text": "unfortunately but still remote",
    "start": "206010",
    "end": "208500"
  },
  {
    "text": "peripheral attacks are probably more",
    "start": "208500",
    "end": "210360"
  },
  {
    "text": "dangerous because they are more stealthy",
    "start": "210360",
    "end": "213740"
  },
  {
    "text": "so with a peripheral compromise how can",
    "start": "213740",
    "end": "217140"
  },
  {
    "text": "the attacker can compromise the",
    "start": "217140",
    "end": "219510"
  },
  {
    "text": "operating system running on the main",
    "start": "219510",
    "end": "221160"
  },
  {
    "text": "processor after compromising peripheral",
    "start": "221160",
    "end": "224160"
  },
  {
    "text": "device the attacker is faced with what's",
    "start": "224160",
    "end": "226650"
  },
  {
    "text": "called Hardware West interface just like",
    "start": "226650",
    "end": "230550"
  },
  {
    "text": "iOS kernels protect themselves from user",
    "start": "230550",
    "end": "232890"
  },
  {
    "text": "space processes at the boundary of the",
    "start": "232890",
    "end": "235320"
  },
  {
    "text": "system call interface at this boundary",
    "start": "235320",
    "end": "237660"
  },
  {
    "text": "of the Hardware OS interface they",
    "start": "237660",
    "end": "239700"
  },
  {
    "text": "protect from peripheral devices that",
    "start": "239700",
    "end": "244170"
  },
  {
    "text": "could potentially turn malicious so",
    "start": "244170",
    "end": "247560"
  },
  {
    "text": "among others there are two mechanisms of",
    "start": "247560",
    "end": "251640"
  },
  {
    "text": "implementing the hardware os interface",
    "start": "251640",
    "end": "253740"
  },
  {
    "text": "or the devices attached to the PCI bus",
    "start": "253740",
    "end": "257209"
  },
  {
    "text": "memory mapped i/o and direct memory",
    "start": "257209",
    "end": "259829"
  },
  {
    "text": "access so in memory mapped i/o the",
    "start": "259830",
    "end": "262560"
  },
  {
    "text": "device and the driver communicate with",
    "start": "262560",
    "end": "264419"
  },
  {
    "text": "each other",
    "start": "264419",
    "end": "264990"
  },
  {
    "text": "by writing to and reading from device",
    "start": "264990",
    "end": "267060"
  },
  {
    "text": "memory and in the case of direct memory",
    "start": "267060",
    "end": "269490"
  },
  {
    "text": "access the communication medium is",
    "start": "269490",
    "end": "271620"
  },
  {
    "text": "memory pages in the main memory so by",
    "start": "271620",
    "end": "274860"
  },
  {
    "text": "compromising this Hardware West",
    "start": "274860",
    "end": "276900"
  },
  {
    "text": "interface the attacker can effectively",
    "start": "276900",
    "end": "279330"
  },
  {
    "text": "turn a peripheral compromised into a",
    "start": "279330",
    "end": "282030"
  },
  {
    "text": "full operating system compromised so",
    "start": "282030",
    "end": "285030"
  },
  {
    "text": "given the importance of this hardware",
    "start": "285030",
    "end": "287130"
  },
  {
    "text": "with the interface as well as the real",
    "start": "287130",
    "end": "289380"
  },
  {
    "text": "threat posed by recent attacks in our",
    "start": "289380",
    "end": "292800"
  },
  {
    "text": "work we aim to analyze the security of",
    "start": "292800",
    "end": "295950"
  },
  {
    "text": "this Hardware of Hardware OS interface",
    "start": "295950",
    "end": "300210"
  },
  {
    "text": "operating under the following threat",
    "start": "300210",
    "end": "301979"
  },
  {
    "text": "model so we assume that the attacker has",
    "start": "301979",
    "end": "305220"
  },
  {
    "text": "compromised the device and can write",
    "start": "305220",
    "end": "307430"
  },
  {
    "text": "malicious values in both MMA oh and DMA",
    "start": "307430",
    "end": "311070"
  },
  {
    "text": "mappings so our goal by analyzing this",
    "start": "311070",
    "end": "314850"
  },
  {
    "text": "Hardware OS interface is to discover",
    "start": "314850",
    "end": "317479"
  },
  {
    "text": "vulnerabilities in the driver in the",
    "start": "317479",
    "end": "319710"
  },
  {
    "text": "kernel which can be triggered and",
    "start": "319710",
    "end": "322020"
  },
  {
    "text": "exploited by an attacker on a",
    "start": "322020",
    "end": "323940"
  },
  {
    "text": "compromised device let me take a step",
    "start": "323940",
    "end": "327960"
  },
  {
    "text": "back here a bit to provide you with a",
    "start": "327960",
    "end": "329970"
  },
  {
    "text": "more complete and detailed picture of",
    "start": "329970",
    "end": "332310"
  },
  {
    "text": "the OS kernel attack surface so as we",
    "start": "332310",
    "end": "335460"
  },
  {
    "text": "all know besides the hardware west",
    "start": "335460",
    "end": "337680"
  },
  {
    "text": "boundary there is a more conventional",
    "start": "337680",
    "end": "339300"
  },
  {
    "text": "attack surface which is the system call",
    "start": "339300",
    "end": "341789"
  },
  {
    "text": "boundary and speaking of Android these",
    "start": "341789",
    "end": "344700"
  },
  {
    "text": "days there are a diverse set of sand",
    "start": "344700",
    "end": "348000"
  },
  {
    "text": "boxes deployed to narrow down this",
    "start": "348000",
    "end": "350520"
  },
  {
    "text": "system called attack surface exposed to",
    "start": "350520",
    "end": "353280"
  },
  {
    "text": "user space adversaries for example apps",
    "start": "353280",
    "end": "355950"
  },
  {
    "text": "are strongly sandbox the discretionary",
    "start": "355950",
    "end": "359010"
  },
  {
    "text": "and mandatory access control and",
    "start": "359010",
    "end": "360950"
  },
  {
    "text": "potentially more dangerous code such as",
    "start": "360950",
    "end": "364860"
  },
  {
    "text": "JavaScript code runs in a stronger",
    "start": "364860",
    "end": "367860"
  },
  {
    "text": "sandbox and most of our kernel drivers",
    "start": "367860",
    "end": "370860"
  },
  {
    "text": "are behind the hardware abstraction",
    "start": "370860",
    "end": "373080"
  },
  {
    "text": "layer and accesses to IO devices are",
    "start": "373080",
    "end": "376950"
  },
  {
    "text": "mediated through the slightly more",
    "start": "376950",
    "end": "379710"
  },
  {
    "text": "privileged user space daemons which",
    "start": "379710",
    "end": "382229"
  },
  {
    "text": "means that you need to first compromise",
    "start": "382229",
    "end": "384270"
  },
  {
    "text": "those demons to even start talking to an",
    "start": "384270",
    "end": "387300"
  },
  {
    "text": "IO kernel driver Hardware OS boundary on",
    "start": "387300",
    "end": "391410"
  },
  {
    "text": "the other hand does have an isolation",
    "start": "391410",
    "end": "393990"
  },
  {
    "text": "mechanism iommu and basically iommu",
    "start": "393990",
    "end": "397200"
  },
  {
    "text": "limits the memory regions that can be",
    "start": "397200",
    "end": "399690"
  },
  {
    "text": "asked",
    "start": "399690",
    "end": "400040"
  },
  {
    "text": "by a peripheral device to only those",
    "start": "400040",
    "end": "402590"
  },
  {
    "text": "regions that are explicitly mapped by",
    "start": "402590",
    "end": "405440"
  },
  {
    "text": "the operating system but still with",
    "start": "405440",
    "end": "409550"
  },
  {
    "text": "iommu a peripheral device basically",
    "start": "409550",
    "end": "412610"
  },
  {
    "text": "still talks directly to the kernel",
    "start": "412610",
    "end": "415700"
  },
  {
    "text": "driver with the running with the kernel",
    "start": "415700",
    "end": "418550"
  },
  {
    "text": "privilege on the main processor at least",
    "start": "418550",
    "end": "421160"
  },
  {
    "text": "in the monolithic mainstream operating",
    "start": "421160",
    "end": "423350"
  },
  {
    "text": "system kernels and there are two ways to",
    "start": "423350",
    "end": "427310"
  },
  {
    "text": "reach these OS kernel attack surfaces",
    "start": "427310",
    "end": "429560"
  },
  {
    "text": "our first is it through user space",
    "start": "429560",
    "end": "432890"
  },
  {
    "text": "processes and all and the second is",
    "start": "432890",
    "end": "434990"
  },
  {
    "text": "through a pray for our farming so how",
    "start": "434990",
    "end": "437600"
  },
  {
    "text": "difficult would it be given a memory",
    "start": "437600",
    "end": "439400"
  },
  {
    "text": "error to exploit to compromise either",
    "start": "439400",
    "end": "443570"
  },
  {
    "text": "user space processes or prefer a form",
    "start": "443570",
    "end": "446450"
  },
  {
    "text": "where if you look at memory exploit",
    "start": "446450",
    "end": "449060"
  },
  {
    "text": "mitigations deployed and to protect user",
    "start": "449060",
    "end": "451400"
  },
  {
    "text": "space processes and to protect a",
    "start": "451400",
    "end": "453620"
  },
  {
    "text": "peripheral form where the differences",
    "start": "453620",
    "end": "455570"
  },
  {
    "text": "are quite significant so in fact one of",
    "start": "455570",
    "end": "458540"
  },
  {
    "text": "the major enabling regions for for",
    "start": "458540",
    "end": "460490"
  },
  {
    "text": "peripheral compromise is that peripheral",
    "start": "460490",
    "end": "462710"
  },
  {
    "text": "devices are typically resource",
    "start": "462710",
    "end": "465110"
  },
  {
    "text": "constrained and they lack basic memory",
    "start": "465110",
    "end": "467870"
  },
  {
    "text": "exploit mitigation mechanisms such as",
    "start": "467870",
    "end": "469730"
  },
  {
    "text": "data execution prevention or address",
    "start": "469730",
    "end": "473210"
  },
  {
    "text": "space layout randomization so peripheral",
    "start": "473210",
    "end": "476000"
  },
  {
    "text": "farmer runs on microcontrollers which",
    "start": "476000",
    "end": "478970"
  },
  {
    "text": "often black MMU or user mode supervisor",
    "start": "478970",
    "end": "483260"
  },
  {
    "text": "mode separation for example the Broadcom",
    "start": "483260",
    "end": "486380"
  },
  {
    "text": "Wi-Fi chip that was targeted in the",
    "start": "486380",
    "end": "489110"
  },
  {
    "text": "broad on attack for example had its",
    "start": "489110",
    "end": "491690"
  },
  {
    "text": "entire ram read write executable in",
    "start": "491690",
    "end": "495800"
  },
  {
    "text": "contrast user space programs in android",
    "start": "495800",
    "end": "498200"
  },
  {
    "text": "running on the capable arm v8 main",
    "start": "498200",
    "end": "500960"
  },
  {
    "text": "processor have all the commodity",
    "start": "500960",
    "end": "503420"
  },
  {
    "text": "mitigation mechanisms turned on control",
    "start": "503420",
    "end": "505760"
  },
  {
    "text": "flow integrity ASR RDP and secure",
    "start": "505760",
    "end": "508940"
  },
  {
    "text": "hardened heap allocator and so on",
    "start": "508940",
    "end": "511010"
  },
  {
    "text": "so it makes sense for an attacker",
    "start": "511010",
    "end": "513159"
  },
  {
    "text": "looking to compromise an operating",
    "start": "513160",
    "end": "516200"
  },
  {
    "text": "system to turn to peripheral attack",
    "start": "516200",
    "end": "518570"
  },
  {
    "text": "surface so for these two peripheral for",
    "start": "518570",
    "end": "525290"
  },
  {
    "text": "these two attack surfaces two OS kernel",
    "start": "525290",
    "end": "527270"
  },
  {
    "text": "there are many analysis tools available",
    "start": "527270",
    "end": "530420"
  },
  {
    "text": "already",
    "start": "530420",
    "end": "531950"
  },
  {
    "text": "examples include sis color the popular",
    "start": "531950",
    "end": "534320"
  },
  {
    "text": "kernel buzzer that primarily targets the",
    "start": "534320",
    "end": "537020"
  },
  {
    "text": "system call interface which now has the",
    "start": "537020",
    "end": "539240"
  },
  {
    "text": "USB fuzzing support here we add our tool",
    "start": "539240",
    "end": "542870"
  },
  {
    "text": "periscope that can complement existing",
    "start": "542870",
    "end": "545540"
  },
  {
    "text": "approaches that can analyze hardware",
    "start": "545540",
    "end": "547250"
  },
  {
    "text": "West interface now let me get back to",
    "start": "547250",
    "end": "550460"
  },
  {
    "text": "our focus Hardware OS boundary and",
    "start": "550460",
    "end": "552680"
  },
  {
    "text": "explain in more detail what existing",
    "start": "552680",
    "end": "556010"
  },
  {
    "text": "approaches are and how periscope can be",
    "start": "556010",
    "end": "558410"
  },
  {
    "text": "useful in light of these existing",
    "start": "558410",
    "end": "560240"
  },
  {
    "text": "approaches so the first approach we find",
    "start": "560240",
    "end": "562790"
  },
  {
    "text": "is a device of that patient approach",
    "start": "562790",
    "end": "564800"
  },
  {
    "text": "that adapts or reprograms the device",
    "start": "564800",
    "end": "567770"
  },
  {
    "text": "such that it can send arbitrary values",
    "start": "567770",
    "end": "571490"
  },
  {
    "text": "to the driver and examines drivers",
    "start": "571490",
    "end": "574340"
  },
  {
    "text": "response while not interested and can be",
    "start": "574340",
    "end": "577640"
  },
  {
    "text": "always independent the effort is device",
    "start": "577640",
    "end": "580550"
  },
  {
    "text": "specific which needs to be duplicated",
    "start": "580550",
    "end": "582740"
  },
  {
    "text": "for each and individual device which",
    "start": "582740",
    "end": "585440"
  },
  {
    "text": "does not scale given a large number of",
    "start": "585440",
    "end": "588010"
  },
  {
    "text": "proprietary devices that are out there",
    "start": "588010",
    "end": "590390"
  },
  {
    "text": "it has also it has limited visibility",
    "start": "590390",
    "end": "593630"
  },
  {
    "text": "into the drivers behavior the second",
    "start": "593630",
    "end": "596210"
  },
  {
    "text": "approach we find is the dynamic approach",
    "start": "596210",
    "end": "599980"
  },
  {
    "text": "the second approach we find is a virtual",
    "start": "600490",
    "end": "603380"
  },
  {
    "text": "machine based approach where the analyst",
    "start": "603380",
    "end": "605510"
  },
  {
    "text": "runs the entire system including the",
    "start": "605510",
    "end": "607790"
  },
  {
    "text": "device and the driver on a virtualized",
    "start": "607790",
    "end": "610010"
  },
  {
    "text": "environment while virtual machine",
    "start": "610010",
    "end": "612890"
  },
  {
    "text": "provides convenient mechanisms to",
    "start": "612890",
    "end": "615350"
  },
  {
    "text": "interpose the execution of its guests it",
    "start": "615350",
    "end": "618590"
  },
  {
    "text": "requires either emulated device or",
    "start": "618590",
    "end": "621140"
  },
  {
    "text": "hardware virtualization support this can",
    "start": "621140",
    "end": "623600"
  },
  {
    "text": "be problematic because in many cases",
    "start": "623600",
    "end": "625840"
  },
  {
    "text": "emulated device implementation is not",
    "start": "625840",
    "end": "628010"
  },
  {
    "text": "available and in some platforms",
    "start": "628010",
    "end": "630670"
  },
  {
    "text": "hypervisor level access is not exposed",
    "start": "630670",
    "end": "633740"
  },
  {
    "text": "and users for example in production",
    "start": "633740",
    "end": "636290"
  },
  {
    "text": "smartphones the third approach we find",
    "start": "636290",
    "end": "639830"
  },
  {
    "text": "is a symbolic execution based approach",
    "start": "639830",
    "end": "641750"
  },
  {
    "text": "which removes the need for devices",
    "start": "641750",
    "end": "643880"
  },
  {
    "text": "altogether and instead it replaces IO",
    "start": "643880",
    "end": "646940"
  },
  {
    "text": "mappings with symbolic unconstrained",
    "start": "646940",
    "end": "649310"
  },
  {
    "text": "symbolic variables so but inherits",
    "start": "649310",
    "end": "653330"
  },
  {
    "text": "inherits though the downside of symbolic",
    "start": "653330",
    "end": "655790"
  },
  {
    "text": "execution it may not scale well to a",
    "start": "655790",
    "end": "658360"
  },
  {
    "text": "real-world large device driver because",
    "start": "658360",
    "end": "661700"
  },
  {
    "text": "of for example constrain solving cost",
    "start": "661700",
    "end": "666040"
  },
  {
    "text": "our approach is an internal dynamic",
    "start": "666040",
    "end": "669830"
  },
  {
    "text": "approach which does not require any",
    "start": "669830",
    "end": "671720"
  },
  {
    "text": "change on the device side nor does it",
    "start": "671720",
    "end": "674180"
  },
  {
    "text": "require any new card require the system",
    "start": "674180",
    "end": "677240"
  },
  {
    "text": "to run in a virtualized environment what",
    "start": "677240",
    "end": "680270"
  },
  {
    "text": "it in cell requires because it's an",
    "start": "680270",
    "end": "682220"
  },
  {
    "text": "internal approach is recompilation of",
    "start": "682220",
    "end": "684740"
  },
  {
    "text": "the kernel as long as the kernel can get",
    "start": "684740",
    "end": "687170"
  },
  {
    "text": "recompiled and can be flashed periscope",
    "start": "687170",
    "end": "691400"
  },
  {
    "text": "can be useful in many existing testing",
    "start": "691400",
    "end": "694130"
  },
  {
    "text": "environments regardless of whether the",
    "start": "694130",
    "end": "697490"
  },
  {
    "text": "underlying device is Hardware",
    "start": "697490",
    "end": "699560"
  },
  {
    "text": "virtualized emulated or running on bare",
    "start": "699560",
    "end": "702080"
  },
  {
    "text": "metal so based on the observation that",
    "start": "702080",
    "end": "706070"
  },
  {
    "text": "both mm IO and DMA are memory based",
    "start": "706070",
    "end": "709510"
  },
  {
    "text": "communication at least from the",
    "start": "709510",
    "end": "711320"
  },
  {
    "text": "perspective of the main processor we",
    "start": "711320",
    "end": "713750"
  },
  {
    "text": "take a page v page fault based",
    "start": "713750",
    "end": "716090"
  },
  {
    "text": "monitoring approach to interpose the",
    "start": "716090",
    "end": "718160"
  },
  {
    "text": "interactions between the device and the",
    "start": "718160",
    "end": "720110"
  },
  {
    "text": "driver this allows us to examine and",
    "start": "720110",
    "end": "724760"
  },
  {
    "text": "potentially to influence the traffic",
    "start": "724760",
    "end": "727280"
  },
  {
    "text": "between the device and the driver at a",
    "start": "727280",
    "end": "730010"
  },
  {
    "text": "very fine grain grain granularity",
    "start": "730010",
    "end": "732860"
  },
  {
    "text": "basically at the level of individual",
    "start": "732860",
    "end": "734720"
  },
  {
    "text": "memory accesses and all within the",
    "start": "734720",
    "end": "738380"
  },
  {
    "text": "kernel so here is the overview of how",
    "start": "738380",
    "end": "741620"
  },
  {
    "text": "periscope works first when the device",
    "start": "741620",
    "end": "743750"
  },
  {
    "text": "driver allocates either mmio",
    "start": "743750",
    "end": "745970"
  },
  {
    "text": "and DMA mappings periscope marks these",
    "start": "745970",
    "end": "749300"
  },
  {
    "text": "allocated pages as not present by",
    "start": "749300",
    "end": "751850"
  },
  {
    "text": "modifying the corresponding page table",
    "start": "751850",
    "end": "753890"
  },
  {
    "text": "entries in the page table we do so by",
    "start": "753890",
    "end": "756740"
  },
  {
    "text": "hooking into the kernels anime oh and",
    "start": "756740",
    "end": "759410"
  },
  {
    "text": "DMA allocation api's and when the device",
    "start": "759410",
    "end": "763370"
  },
  {
    "text": "driver later accesses these Mme oh and",
    "start": "763370",
    "end": "766460"
  },
  {
    "text": "DMA mappings page fault exceptions will",
    "start": "766460",
    "end": "768980"
  },
  {
    "text": "be triggered and control flows into the",
    "start": "768980",
    "end": "773020"
  },
  {
    "text": "kernels page fault handler we hook into",
    "start": "773020",
    "end": "776120"
  },
  {
    "text": "this kernel page fault handler to call",
    "start": "776120",
    "end": "778490"
  },
  {
    "text": "our page fault handler in which we",
    "start": "778490",
    "end": "780950"
  },
  {
    "text": "examine the fault and call user",
    "start": "780950",
    "end": "783590"
  },
  {
    "text": "registered hooks that can be implemented",
    "start": "783590",
    "end": "786320"
  },
  {
    "text": "by the analyst for a wide variety of",
    "start": "786320",
    "end": "788710"
  },
  {
    "text": "analysis purposes and then periscope",
    "start": "788710",
    "end": "792020"
  },
  {
    "text": "transfers the control back to the device",
    "start": "792020",
    "end": "795140"
  },
  {
    "text": "driver to resume its normal execution",
    "start": "795140",
    "end": "798500"
  },
  {
    "text": "so on top of this framework we designed",
    "start": "798500",
    "end": "801560"
  },
  {
    "text": "and implemented paraquad's a father that",
    "start": "801560",
    "end": "804020"
  },
  {
    "text": "enables adversarial analysis of the",
    "start": "804020",
    "end": "806600"
  },
  {
    "text": "Hardware OS boundary so the goal of para",
    "start": "806600",
    "end": "809330"
  },
  {
    "text": "fuss as I mentioned is to find",
    "start": "809330",
    "end": "811640"
  },
  {
    "text": "vulnerabilities in the in the driver",
    "start": "811640",
    "end": "813830"
  },
  {
    "text": "they can be triggered and potentially",
    "start": "813830",
    "end": "816650"
  },
  {
    "text": "exploited by an attacker on a",
    "start": "816650",
    "end": "818810"
  },
  {
    "text": "compromised device so there are four",
    "start": "818810",
    "end": "821570"
  },
  {
    "text": "peripherals for these drivers read",
    "start": "821570",
    "end": "823970"
  },
  {
    "text": "accesses to MMM IO and DMA mappings",
    "start": "823970",
    "end": "827750"
  },
  {
    "text": "because the values being read by the",
    "start": "827750",
    "end": "831050"
  },
  {
    "text": "device driver can be under the attackers",
    "start": "831050",
    "end": "833090"
  },
  {
    "text": "control under our threat model to this",
    "start": "833090",
    "end": "837110"
  },
  {
    "text": "and para files implements a custom hook",
    "start": "837110",
    "end": "840140"
  },
  {
    "text": "that is registered with the periscope",
    "start": "840140",
    "end": "842630"
  },
  {
    "text": "framework so the winner whenever a",
    "start": "842630",
    "end": "845120"
  },
  {
    "text": "driver makes a read access to an IO",
    "start": "845120",
    "end": "848480"
  },
  {
    "text": "netting the hook requests fuzzing that",
    "start": "848480",
    "end": "851570"
  },
  {
    "text": "read access that's being made so the",
    "start": "851570",
    "end": "854540"
  },
  {
    "text": "injector component of para fuss receives",
    "start": "854540",
    "end": "857270"
  },
  {
    "text": "an input generated by the phaser running",
    "start": "857270",
    "end": "860240"
  },
  {
    "text": "in user space and injects the fodder",
    "start": "860240",
    "end": "863300"
  },
  {
    "text": "supplied value to the destination",
    "start": "863300",
    "end": "865970"
  },
  {
    "text": "register of defaulting instruction and",
    "start": "865970",
    "end": "868780"
  },
  {
    "text": "it resumes drivers execution from the",
    "start": "868780",
    "end": "872660"
  },
  {
    "text": "instruction that immediately follows",
    "start": "872660",
    "end": "874760"
  },
  {
    "text": "defaulting instruction because now the",
    "start": "874760",
    "end": "877730"
  },
  {
    "text": "faulting instruction has now been",
    "start": "877730",
    "end": "879230"
  },
  {
    "text": "emulated or fast so the same procedure",
    "start": "879230",
    "end": "882980"
  },
  {
    "text": "repeats for each drivers read access",
    "start": "882980",
    "end": "885740"
  },
  {
    "text": "until the injected value leads to any",
    "start": "885740",
    "end": "889070"
  },
  {
    "text": "observable error such as a second",
    "start": "889070",
    "end": "891590"
  },
  {
    "text": "segmentation fault before explaining our",
    "start": "891590",
    "end": "894800"
  },
  {
    "text": "fuzzing in more detail",
    "start": "894800",
    "end": "896720"
  },
  {
    "text": "let me quickly review our threat model",
    "start": "896720",
    "end": "899240"
  },
  {
    "text": "in more detail since peripheral devices",
    "start": "899240",
    "end": "902600"
  },
  {
    "text": "and device drivers on the main processor",
    "start": "902600",
    "end": "904880"
  },
  {
    "text": "each runs on a separate processor",
    "start": "904880",
    "end": "907790"
  },
  {
    "text": "operating on their own clock the",
    "start": "907790",
    "end": "910880"
  },
  {
    "text": "attacker cannot only write any value to",
    "start": "910880",
    "end": "914270"
  },
  {
    "text": "the i/o mapping but also at any time",
    "start": "914270",
    "end": "917060"
  },
  {
    "text": "even multiple times and potentially in",
    "start": "917060",
    "end": "920180"
  },
  {
    "text": "between drivers read accesses so this",
    "start": "920180",
    "end": "923990"
  },
  {
    "text": "adversarial capability creates a",
    "start": "923990",
    "end": "926480"
  },
  {
    "text": "possibility of double fetch box in",
    "start": "926480",
    "end": "928700"
  },
  {
    "text": "drivers handling IO",
    "start": "928700",
    "end": "931010"
  },
  {
    "text": "mappings so double fetch bugs are a",
    "start": "931010",
    "end": "933440"
  },
  {
    "text": "class of time of check - time of use",
    "start": "933440",
    "end": "935930"
  },
  {
    "text": "race conditions and let me give you a",
    "start": "935930",
    "end": "938240"
  },
  {
    "text": "concrete example of a double fetch bug",
    "start": "938240",
    "end": "940490"
  },
  {
    "text": "here so on the right hand side of the",
    "start": "940490",
    "end": "942500"
  },
  {
    "text": "slide the driver is about to fetch two",
    "start": "942500",
    "end": "945530"
  },
  {
    "text": "bites from an i/o mapping and checks if",
    "start": "945530",
    "end": "948200"
  },
  {
    "text": "the fetched value is less than FF",
    "start": "948200",
    "end": "950770"
  },
  {
    "text": "because the fetched value is indeed less",
    "start": "950770",
    "end": "953870"
  },
  {
    "text": "than FF the track passes and the control",
    "start": "953870",
    "end": "956510"
  },
  {
    "text": "flows into the basic block that's",
    "start": "956510",
    "end": "958760"
  },
  {
    "text": "protected by the track and at this point",
    "start": "958760",
    "end": "962660"
  },
  {
    "text": "the driver of the peripheral device",
    "start": "962660",
    "end": "965060"
  },
  {
    "text": "makes a malicious update of the same",
    "start": "965060",
    "end": "967280"
  },
  {
    "text": "exact bites that were just fetched by",
    "start": "967280",
    "end": "970100"
  },
  {
    "text": "the driver and then the driver fetches",
    "start": "970100",
    "end": "972560"
  },
  {
    "text": "the same two bytes again at this point",
    "start": "972560",
    "end": "976640"
  },
  {
    "text": "the fact that the driver has passed this",
    "start": "976640",
    "end": "979790"
  },
  {
    "text": "if condition track is no longer valid",
    "start": "979790",
    "end": "982130"
  },
  {
    "text": "and subsequent uses of this value might",
    "start": "982130",
    "end": "985520"
  },
  {
    "text": "cause the driver to perform an",
    "start": "985520",
    "end": "987470"
  },
  {
    "text": "unintended or potentially exploitable",
    "start": "987470",
    "end": "990170"
  },
  {
    "text": "operations such as buffer overflow in",
    "start": "990170",
    "end": "992750"
  },
  {
    "text": "this example so with this in mind with",
    "start": "992750",
    "end": "996110"
  },
  {
    "text": "we design the following further input",
    "start": "996110",
    "end": "998900"
  },
  {
    "text": "consumption model so the idea is here is",
    "start": "998900",
    "end": "1002410"
  },
  {
    "text": "that to sequentially consume the bites",
    "start": "1002410",
    "end": "1005590"
  },
  {
    "text": "in the photo generated input to provide",
    "start": "1005590",
    "end": "1009250"
  },
  {
    "text": "a different value to each fetch",
    "start": "1009250",
    "end": "1012310"
  },
  {
    "text": "regardless of whether it is overlapping",
    "start": "1012310",
    "end": "1015010"
  },
  {
    "text": "with any of the previous patches or not",
    "start": "1015010",
    "end": "1019140"
  },
  {
    "text": "so let me give you an example given a",
    "start": "1019140",
    "end": "1022720"
  },
  {
    "text": "photo generated input the driver fetches",
    "start": "1022720",
    "end": "1025720"
  },
  {
    "text": "two bytes from an i/o mapping and",
    "start": "1025720",
    "end": "1027459"
  },
  {
    "text": "peripherals consumes the first avail two",
    "start": "1027459",
    "end": "1030610"
  },
  {
    "text": "available bytes from the photo generated",
    "start": "1030610",
    "end": "1033310"
  },
  {
    "text": "input and if there is an overlapping",
    "start": "1033310",
    "end": "1036130"
  },
  {
    "text": "fetch peripherals consumes the next to",
    "start": "1036130",
    "end": "1040089"
  },
  {
    "text": "available bytes in the fodder generated",
    "start": "1040089",
    "end": "1042490"
  },
  {
    "text": "input non-overlapping fetches of course",
    "start": "1042490",
    "end": "1045220"
  },
  {
    "text": "also consumes the next to available",
    "start": "1045220",
    "end": "1047980"
  },
  {
    "text": "bytes in the photo generated input so to",
    "start": "1047980",
    "end": "1052570"
  },
  {
    "text": "explain how all of this fits into a",
    "start": "1052570",
    "end": "1054910"
  },
  {
    "text": "bigger picture and eventually form a",
    "start": "1054910",
    "end": "1057370"
  },
  {
    "text": "fuzzing loop let me quickly explain how",
    "start": "1057370",
    "end": "1060340"
  },
  {
    "text": "device interrupts are typically handled",
    "start": "1060340",
    "end": "1062470"
  },
  {
    "text": "in operating system kernels so the Linux",
    "start": "1062470",
    "end": "1065290"
  },
  {
    "text": "Paige Europe and Link can be subdivided",
    "start": "1065290",
    "end": "1067750"
  },
  {
    "text": "into top half and bottom half and link",
    "start": "1067750",
    "end": "1070750"
  },
  {
    "text": "of interrupts the top half interrupt",
    "start": "1070750",
    "end": "1073090"
  },
  {
    "text": "handler mostly it's just acknowledges",
    "start": "1073090",
    "end": "1075400"
  },
  {
    "text": "the interrupts and queues up the data",
    "start": "1075400",
    "end": "1077170"
  },
  {
    "text": "associated with that interrupts to be",
    "start": "1077170",
    "end": "1079510"
  },
  {
    "text": "later processed by the device driver",
    "start": "1079510",
    "end": "1083850"
  },
  {
    "text": "because most of the work is done by",
    "start": "1083850",
    "end": "1086320"
  },
  {
    "text": "bottom half handlers we aligned each",
    "start": "1086320",
    "end": "1088750"
  },
  {
    "text": "iteration of the fuzzing loop to one of",
    "start": "1088750",
    "end": "1091510"
  },
  {
    "text": "the bottom half handler mechanisms",
    "start": "1091510",
    "end": "1093280"
  },
  {
    "text": "called a software interrupt handler or",
    "start": "1093280",
    "end": "1096310"
  },
  {
    "text": "soft irq so at various points in time",
    "start": "1096310",
    "end": "1099730"
  },
  {
    "text": "that the kernel finds it convenient the",
    "start": "1099730",
    "end": "1102580"
  },
  {
    "text": "kernel calls the one of the bottom half",
    "start": "1102580",
    "end": "1106150"
  },
  {
    "text": "handlers registered by the device driver",
    "start": "1106150",
    "end": "1108340"
  },
  {
    "text": "a single execution of a software",
    "start": "1108340",
    "end": "1111640"
  },
  {
    "text": "interrupt handler corresponds to a",
    "start": "1111640",
    "end": "1113530"
  },
  {
    "text": "single iteration of the fuzzing loop and",
    "start": "1113530",
    "end": "1115930"
  },
  {
    "text": "in each iteration the Jacobites",
    "start": "1115930",
    "end": "1119080"
  },
  {
    "text": "in the in a single photo generated input",
    "start": "1119080",
    "end": "1122230"
  },
  {
    "text": "or consecutively consumed according to",
    "start": "1122230",
    "end": "1125440"
  },
  {
    "text": "our father' input consumption model so",
    "start": "1125440",
    "end": "1129010"
  },
  {
    "text": "we hope to do so we hope the entrance",
    "start": "1129010",
    "end": "1131740"
  },
  {
    "text": "and the exit of the software in our",
    "start": "1131740",
    "end": "1133870"
  },
  {
    "text": "handler and we switch the fuzzy input",
    "start": "1133870",
    "end": "1136450"
  },
  {
    "text": "after each exit of software in our",
    "start": "1136450",
    "end": "1139960"
  },
  {
    "text": "handler and we based our prototype",
    "start": "1139960",
    "end": "1144490"
  },
  {
    "text": "implementation on Linux kernel version",
    "start": "1144490",
    "end": "1147180"
  },
  {
    "text": "4.4 for armed p8 architecture which",
    "start": "1147180",
    "end": "1150580"
  },
  {
    "text": "reported to loose kernel version 3.1 and",
    "start": "1150580",
    "end": "1154300"
  },
  {
    "text": "we used AFL as our fuzzing front-end in",
    "start": "1154300",
    "end": "1158710"
  },
  {
    "text": "our experiment we targeted to Wi-Fi",
    "start": "1158710",
    "end": "1161980"
  },
  {
    "text": "drivers running inside popular to",
    "start": "1161980",
    "end": "1165520"
  },
  {
    "text": "popular smartphones the Qualcomm Wi-Fi",
    "start": "1165520",
    "end": "1167950"
  },
  {
    "text": "driver running in Google pixel 2 and the",
    "start": "1167950",
    "end": "1170560"
  },
  {
    "text": "Broadcom Wi-Fi driver running some in",
    "start": "1170560",
    "end": "1172870"
  },
  {
    "text": "Samsung's Galaxy s6 let me quickly",
    "start": "1172870",
    "end": "1177370"
  },
  {
    "text": "highlight some of the characteristics of",
    "start": "1177370",
    "end": "1179710"
  },
  {
    "text": "these targets too and to explain the",
    "start": "1179710",
    "end": "1182860"
  },
  {
    "text": "challenges that these targets pose on",
    "start": "1182860",
    "end": "1185530"
  },
  {
    "text": "any analysis efforts",
    "start": "1185530",
    "end": "1187450"
  },
  {
    "text": "first of all these drivers are one of",
    "start": "1187450",
    "end": "1190000"
  },
  {
    "text": "the largest in terms of the number of",
    "start": "1190000",
    "end": "1191740"
  },
  {
    "text": "source lines of code both drivers",
    "start": "1191740",
    "end": "1194320"
  },
  {
    "text": "consists of more than hundreds of",
    "start": "1194320",
    "end": "1196180"
  },
  {
    "text": "thousands of lines of code which is",
    "start": "1196180",
    "end": "1197740"
  },
  {
    "text": "beyond",
    "start": "1197740",
    "end": "1199140"
  },
  {
    "text": "beyond the effort of like many beyond",
    "start": "1199140",
    "end": "1202050"
  },
  {
    "text": "the manual effort and they also they're",
    "start": "1202050",
    "end": "1205830"
  },
  {
    "text": "also highly concurrent making heavy use",
    "start": "1205830",
    "end": "1207870"
  },
  {
    "text": "of kernel threads and bottom-up",
    "start": "1207870",
    "end": "1209940"
  },
  {
    "text": "interrupt handlers to maximize the",
    "start": "1209940",
    "end": "1213120"
  },
  {
    "text": "concurrency and responsiveness of the",
    "start": "1213120",
    "end": "1215340"
  },
  {
    "text": "system and lots of code run in a",
    "start": "1215340",
    "end": "1219180"
  },
  {
    "text": "interrupts context or kernel thread",
    "start": "1219180",
    "end": "1220950"
  },
  {
    "text": "context which means that existing system",
    "start": "1220950",
    "end": "1223650"
  },
  {
    "text": "called folders may not be used to",
    "start": "1223650",
    "end": "1226170"
  },
  {
    "text": "directly reach those basic blocks also",
    "start": "1226170",
    "end": "1230160"
  },
  {
    "text": "note emulation emulated device",
    "start": "1230160",
    "end": "1232530"
  },
  {
    "text": "implementation is available to our",
    "start": "1232530",
    "end": "1234660"
  },
  {
    "text": "knowledge and the production smartphones",
    "start": "1234660",
    "end": "1237420"
  },
  {
    "text": "do not expose the el2 privilege level to",
    "start": "1237420",
    "end": "1240900"
  },
  {
    "text": "users so hypervisor based of course",
    "start": "1240900",
    "end": "1243210"
  },
  {
    "text": "cannot be easily applied at least these",
    "start": "1243210",
    "end": "1248940"
  },
  {
    "text": "are the results in total by applying our",
    "start": "1248940",
    "end": "1251970"
  },
  {
    "text": "tools we found 15 vulnerabilities 9 of",
    "start": "1251970",
    "end": "1255420"
  },
  {
    "text": "which were previously unknown and 8 new",
    "start": "1255420",
    "end": "1258240"
  },
  {
    "text": "series were assigned we found not just",
    "start": "1258240",
    "end": "1261780"
  },
  {
    "text": "most common types of vulnerabilities",
    "start": "1261780",
    "end": "1264210"
  },
  {
    "text": "like buffer ovaries or over rights but",
    "start": "1264210",
    "end": "1267330"
  },
  {
    "text": "also double fetch issues and also kernel",
    "start": "1267330",
    "end": "1271830"
  },
  {
    "text": "address disclosure to the peripheral",
    "start": "1271830",
    "end": "1274920"
  },
  {
    "text": "device let me discuss these three bugs",
    "start": "1274920",
    "end": "1279030"
  },
  {
    "text": "in the next slide so let me start with",
    "start": "1279030",
    "end": "1282900"
  },
  {
    "text": "this simple buffer overflow are found in",
    "start": "1282900",
    "end": "1285840"
  },
  {
    "text": "in the core common Wi-Fi driver so the",
    "start": "1285840",
    "end": "1288930"
  },
  {
    "text": "problem here was a driver the driver",
    "start": "1288930",
    "end": "1291840"
  },
  {
    "text": "used a value read from an i/o mapping as",
    "start": "1291840",
    "end": "1295470"
  },
  {
    "text": "an index into an array without",
    "start": "1295470",
    "end": "1297930"
  },
  {
    "text": "validating the the size of the buffer",
    "start": "1297930",
    "end": "1300980"
  },
  {
    "text": "which is now patched by adding a",
    "start": "1300980",
    "end": "1304800"
  },
  {
    "text": "validation check before the use of index",
    "start": "1304800",
    "end": "1308990"
  },
  {
    "text": "and let me describe the table fetch",
    "start": "1308990",
    "end": "1313140"
  },
  {
    "text": "issue we found in the Broadcom Wi-Fi",
    "start": "1313140",
    "end": "1316230"
  },
  {
    "text": "driver so the double fetch bug started",
    "start": "1316230",
    "end": "1319470"
  },
  {
    "text": "with the driver initially fetching a",
    "start": "1319470",
    "end": "1321840"
  },
  {
    "text": "message from an i/o mapping for an",
    "start": "1321840",
    "end": "1324930"
  },
  {
    "text": "integrity check that verifies the",
    "start": "1324930",
    "end": "1327000"
  },
  {
    "text": "checksum of the entire message only if",
    "start": "1327000",
    "end": "1329760"
  },
  {
    "text": "the message",
    "start": "1329760",
    "end": "1331470"
  },
  {
    "text": "test this integrity check the driver",
    "start": "1331470",
    "end": "1333870"
  },
  {
    "text": "starts to process the message",
    "start": "1333870",
    "end": "1336710"
  },
  {
    "text": "unfortunately the driver performs an",
    "start": "1336710",
    "end": "1339120"
  },
  {
    "text": "overlapping fetch from the i/o mapping",
    "start": "1339120",
    "end": "1341520"
  },
  {
    "text": "at which point the integrity of the",
    "start": "1341520",
    "end": "1344010"
  },
  {
    "text": "message can no longer be guaranteed when",
    "start": "1344010",
    "end": "1347700"
  },
  {
    "text": "this value was being read by the device",
    "start": "1347700",
    "end": "1350130"
  },
  {
    "text": "driver from the i/o mapping our our",
    "start": "1350130",
    "end": "1352200"
  },
  {
    "text": "fuzzer",
    "start": "1352200",
    "end": "1352770"
  },
  {
    "text": "was the value and the first value was",
    "start": "1352770",
    "end": "1355650"
  },
  {
    "text": "used as an index into an array leading",
    "start": "1355650",
    "end": "1358740"
  },
  {
    "text": "the system to crash",
    "start": "1358740",
    "end": "1361610"
  },
  {
    "text": "let me also describe the kernel address",
    "start": "1362900",
    "end": "1365970"
  },
  {
    "text": "leak or disclosure we found so the",
    "start": "1365970",
    "end": "1368460"
  },
  {
    "text": "symptom of this book as we encountered",
    "start": "1368460",
    "end": "1370710"
  },
  {
    "text": "was a kernel crash caused by directly",
    "start": "1370710",
    "end": "1373340"
  },
  {
    "text": "referencing a value provided our fuzzer",
    "start": "1373340",
    "end": "1377039"
  },
  {
    "text": "as a pointer after our investigation we",
    "start": "1377039",
    "end": "1382770"
  },
  {
    "text": "found that a kernel pointer was being",
    "start": "1382770",
    "end": "1384780"
  },
  {
    "text": "disclosed in the first in the first",
    "start": "1384780",
    "end": "1386669"
  },
  {
    "text": "place to the peripheral device in the",
    "start": "1386669",
    "end": "1389250"
  },
  {
    "text": "name of cookie the device internally",
    "start": "1389250",
    "end": "1393090"
  },
  {
    "text": "uses these cookie values and writes them",
    "start": "1393090",
    "end": "1396360"
  },
  {
    "text": "back to another io mapping which is",
    "start": "1396360",
    "end": "1398880"
  },
  {
    "text": "subsequently read and D referenced by",
    "start": "1398880",
    "end": "1401400"
  },
  {
    "text": "the kernel driver so our father forced",
    "start": "1401400",
    "end": "1405179"
  },
  {
    "text": "the cookie value when the drip and the",
    "start": "1405179",
    "end": "1407460"
  },
  {
    "text": "driver was reading the value from the",
    "start": "1407460",
    "end": "1409950"
  },
  {
    "text": "i/o mapping and led the kernel to crash",
    "start": "1409950",
    "end": "1412740"
  },
  {
    "text": "so this vulnerability could have been",
    "start": "1412740",
    "end": "1414990"
  },
  {
    "text": "used by an attacker to bypass Kasr R so",
    "start": "1414990",
    "end": "1420720"
  },
  {
    "text": "this is the performance of our fuzzer",
    "start": "1420720",
    "end": "1423000"
  },
  {
    "text": "so the fuzzing throughput ranged about",
    "start": "1423000",
    "end": "1426350"
  },
  {
    "text": "seven to twenty four inputs per second",
    "start": "1426350",
    "end": "1430110"
  },
  {
    "text": "depending on the nature of the i/o",
    "start": "1430110",
    "end": "1431700"
  },
  {
    "text": "mapping we've reversed and it primarily",
    "start": "1431700",
    "end": "1436860"
  },
  {
    "text": "depends on the number of page faults",
    "start": "1436860",
    "end": "1439010"
  },
  {
    "text": "triggered in each iteration for example",
    "start": "1439010",
    "end": "1441840"
  },
  {
    "text": "50 page faults per iteration gives",
    "start": "1441840",
    "end": "1444330"
  },
  {
    "text": "around 20 20 inputs per second although",
    "start": "1444330",
    "end": "1450570"
  },
  {
    "text": "it cannot be directly compared we also",
    "start": "1450570",
    "end": "1453870"
  },
  {
    "text": "ran this color on the same device on",
    "start": "1453870",
    "end": "1456720"
  },
  {
    "text": "pixel two and we found that it achieved",
    "start": "1456720",
    "end": "1459120"
  },
  {
    "text": "about on average 24 programs executions",
    "start": "1459120",
    "end": "1462809"
  },
  {
    "text": "per second with a Mac",
    "start": "1462809",
    "end": "1464040"
  },
  {
    "text": "around 60 with that I'd like to conclude",
    "start": "1464040",
    "end": "1469020"
  },
  {
    "text": "with three key takeaways so colonel",
    "start": "1469020",
    "end": "1472080"
  },
  {
    "text": "drivers are vulnerable as evidenced by",
    "start": "1472080",
    "end": "1474090"
  },
  {
    "text": "the number of vulnerabilities we found",
    "start": "1474090",
    "end": "1476400"
  },
  {
    "text": "in our fuzzing campaign so combined with",
    "start": "1476400",
    "end": "1479309"
  },
  {
    "text": "remote prefer compromise it poses",
    "start": "1479309",
    "end": "1481500"
  },
  {
    "text": "serious threat to OS kernel security and",
    "start": "1481500",
    "end": "1484850"
  },
  {
    "text": "vulnerabilities that occur along the",
    "start": "1484850",
    "end": "1486960"
  },
  {
    "text": "Hardware OS boundary can be subtle not",
    "start": "1486960",
    "end": "1489720"
  },
  {
    "text": "just memory corruption vulnerabilities",
    "start": "1489720",
    "end": "1492410"
  },
  {
    "text": "but also other kernel address disclosure",
    "start": "1492410",
    "end": "1496049"
  },
  {
    "text": "or leak and double fetch issues and our",
    "start": "1496049",
    "end": "1499830"
  },
  {
    "text": "tools can be effective at exposing and",
    "start": "1499830",
    "end": "1502620"
  },
  {
    "text": "finding these vulnerabilities along the",
    "start": "1502620",
    "end": "1504960"
  },
  {
    "text": "hardware responder the the top the",
    "start": "1504960",
    "end": "1510390"
  },
  {
    "text": "content of the talk was based on a paper",
    "start": "1510390",
    "end": "1513390"
  },
  {
    "text": "pulley published earlier this year at",
    "start": "1513390",
    "end": "1515580"
  },
  {
    "text": "NDS s so if you are interested you can",
    "start": "1515580",
    "end": "1518610"
  },
  {
    "text": "have a look with that I'd like to thank",
    "start": "1518610",
    "end": "1522030"
  },
  {
    "text": "you all for your attention and happy I'm",
    "start": "1522030",
    "end": "1524700"
  },
  {
    "text": "happy to take any questions",
    "start": "1524700",
    "end": "1526820"
  },
  {
    "text": "[Applause]",
    "start": "1526820",
    "end": "1534799"
  },
  {
    "text": "so for the Wi-Fi bugs where you really",
    "start": "1557130",
    "end": "1560970"
  },
  {
    "text": "speaking the protocol or just fuzzing",
    "start": "1560970",
    "end": "1564830"
  },
  {
    "text": "locally like could be remotely",
    "start": "1564830",
    "end": "1568440"
  },
  {
    "text": "exploitable oh yeah it was not actually",
    "start": "1568440",
    "end": "1572280"
  },
  {
    "text": "related to the Wi-Fi protocol but more",
    "start": "1572280",
    "end": "1574860"
  },
  {
    "text": "of a like proprietary implementation",
    "start": "1574860",
    "end": "1578210"
  },
  {
    "text": "between the interaction of the",
    "start": "1578210",
    "end": "1581880"
  },
  {
    "text": "interaction between the device and the",
    "start": "1581880",
    "end": "1583200"
  },
  {
    "text": "driver like low-level management of",
    "start": "1583200",
    "end": "1585179"
  },
  {
    "text": "buffers green buffers those store of",
    "start": "1585179",
    "end": "1587910"
  },
  {
    "text": "things",
    "start": "1587910",
    "end": "1590179"
  },
  {
    "text": "thank you",
    "start": "1613140",
    "end": "1615390"
  },
  {
    "text": "[Applause]",
    "start": "1615390",
    "end": "1621739"
  }
]