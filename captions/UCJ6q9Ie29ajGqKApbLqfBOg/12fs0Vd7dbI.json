[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "hi good afternoon everyone today I will present a topic about iOS and Mac OS",
    "start": "0",
    "end": "6660"
  },
  {
    "text": "kernel security the title is internal war in x and y o connell objects I will",
    "start": "6660",
    "end": "14460"
  },
  {
    "text": "not only discuss the the attack techniques but also the defense",
    "start": "14460",
    "end": "21890"
  },
  {
    "text": "mechanism as well so let's start our talk",
    "start": "21890",
    "end": "29180"
  },
  {
    "text": "firstly let me brief introduce myself and my teammates my name is Min Jung",
    "start": "30529",
    "end": "37860"
  },
  {
    "text": "you can call me spark I'm a security expert at Alibaba I caught my PhD in the",
    "start": "37860",
    "end": "45030"
  },
  {
    "text": "CEO HK and I'm a member of Blue Lotus and inside labs I presented my",
    "start": "45030",
    "end": "51629"
  },
  {
    "text": "researches at ice a black head desk on each ITB is a exception my teammates is",
    "start": "51629",
    "end": "59280"
  },
  {
    "text": "showing they also worked for Alibaba he is a PhD from Shanghai University and he",
    "start": "59280",
    "end": "66689"
  },
  {
    "text": "published papers on big fall ok let's",
    "start": "66689",
    "end": "72600"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "start our talk we know that jailbreaking in general means breaking the device out",
    "start": "72600",
    "end": "79200"
  },
  {
    "text": "of its Jill and Apple devices most famous chilled devices among the world",
    "start": "79200",
    "end": "86990"
  },
  {
    "text": "iOS Mac OS watch OS and TV iOS operating systems developed by Apple and using",
    "start": "86990",
    "end": "95850"
  },
  {
    "text": "Apple devices all about systems they",
    "start": "95850",
    "end": "102810"
  },
  {
    "text": "deploy a sim hybrid kernel structure called axon you unfortunately as",
    "start": "102810",
    "end": "109560"
  },
  {
    "text": "fighting and analyzing techniques advanced the number of vulnerabilities",
    "start": "109560",
    "end": "114570"
  },
  {
    "text": "in X nu has increased rapidly in recent years there are cases that the kana",
    "start": "114570",
    "end": "123600"
  },
  {
    "text": "vulnerabilities have been used to escalate the privilege of attack",
    "start": "123600",
    "end": "130369"
  },
  {
    "text": "attackers and get a full control of the system for example jailbreak the device",
    "start": "130370",
    "end": "136520"
  },
  {
    "text": "accordingly ever have developed and deployed multi security mechanism that",
    "start": "136520",
    "end": "143819"
  },
  {
    "text": "can make the exploitation of the device harder for instance Apple deployed DEP",
    "start": "143819",
    "end": "153989"
  },
  {
    "start": "149000",
    "end": "149000"
  },
  {
    "text": "as known as theta exclusion prevention and ksar as known as kernel addressed",
    "start": "153989",
    "end": "161970"
  },
  {
    "text": "base layout randomization for iOS 6 and Mac OS 10.8 so what is DP it is a system",
    "start": "161970",
    "end": "171810"
  },
  {
    "text": "level memory protection feature which enables the system to mark relevant",
    "start": "171810",
    "end": "177239"
  },
  {
    "text": "piece of memory as 9x cutable to prevent code injection attack to brick this",
    "start": "177239",
    "end": "184829"
  },
  {
    "text": "protection code reuse attacks were proposed for example our peer",
    "start": "184829",
    "end": "191239"
  },
  {
    "text": "return-oriented programming attackers could find gadgets in the memory and let",
    "start": "191239",
    "end": "196860"
  },
  {
    "text": "the PC jump to them to make this to make this our . r s is hard to protect ksar",
    "start": "196860",
    "end": "207060"
  },
  {
    "text": "memory protection recognized the location of virus memory sec segments",
    "start": "207060",
    "end": "214769"
  },
  {
    "text": "for example code code segment and its date segment to buy back to bypass key",
    "start": "214769",
    "end": "221250"
  },
  {
    "text": "our attackers you really need to leverage information information linkage",
    "start": "221250",
    "end": "227880"
  },
  {
    "text": "box or corrupt some kernel objects to obtain the addresses of gadgets in the",
    "start": "227880",
    "end": "233940"
  },
  {
    "text": "memory in previous by using memory",
    "start": "233940",
    "end": "241590"
  },
  {
    "start": "237000",
    "end": "237000"
  },
  {
    "text": "corruption box it is possible to disclose the information of adjacent",
    "start": "241590",
    "end": "247200"
  },
  {
    "text": "objects in the zoom of this in esteem object size in the previous version of x",
    "start": "247200",
    "end": "254730"
  },
  {
    "text": "and you the free list that contains all the friedkin objects inside a zone",
    "start": "254730",
    "end": "260400"
  },
  {
    "text": "uses the LIFO last year first out policy",
    "start": "260400",
    "end": "265950"
  },
  {
    "text": "hence the layout of Cana objects in the same size zone is predictable to make",
    "start": "265950",
    "end": "272190"
  },
  {
    "text": "the adjacent objects hard to predict ever deployed mitigation called freely",
    "start": "272190",
    "end": "278850"
  },
  {
    "text": "stir randomization in iOS 9.2 and Mac OS 10 point 11 point 2",
    "start": "278850",
    "end": "286190"
  },
  {
    "text": "well Colonel object is freed the X and you will read only choose the first or",
    "start": "286190",
    "end": "292860"
  },
  {
    "text": "last position of the free list to store the freed element in this case it is",
    "start": "292860",
    "end": "298320"
  },
  {
    "text": "hard for attackers to corrupt the connect in a zoom in a predictable way I",
    "start": "298320",
    "end": "306920"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "like the free operations in user space for example the free function that only",
    "start": "308690",
    "end": "315240"
  },
  {
    "text": "need one parameter which is the address of the buffer to be freed thrilling",
    "start": "315240",
    "end": "322230"
  },
  {
    "text": "freely in a buffer in cosby's require Eric requires an extra parameter which",
    "start": "322230",
    "end": "329460"
  },
  {
    "text": "is the size of the buffer this is because the free buffering needs to be",
    "start": "329460",
    "end": "336300"
  },
  {
    "text": "returned to the zoom wins it was allocated for example a keylock 256 song",
    "start": "336300",
    "end": "345740"
  },
  {
    "text": "attacker can use a buffer of low vulnerability to change the size value",
    "start": "345740",
    "end": "350760"
  },
  {
    "text": "of vmf copy object to a random for example 512 soon the Eric he can invoke",
    "start": "350760",
    "end": "361200"
  },
  {
    "text": "Mac Mac message to free this object of that the attacker can allocate a new can",
    "start": "361200",
    "end": "368190"
  },
  {
    "text": "objects through Mac message with the change size into the original zone by",
    "start": "368190",
    "end": "374190"
  },
  {
    "text": "using this random free attack attackers can safely manipulate adjacent objects",
    "start": "374190",
    "end": "380280"
  },
  {
    "text": "without triggering memory creep corruption parks for multi time to",
    "start": "380280",
    "end": "386100"
  },
  {
    "text": "mitigate this attack ever added a new zone metadata region structure for each",
    "start": "386100",
    "end": "393480"
  },
  {
    "text": "zooming iOS and Mac OS 10 point 11",
    "start": "393480",
    "end": "398820"
  },
  {
    "text": "this structural records allocation and free status for each for each object in",
    "start": "398820",
    "end": "404910"
  },
  {
    "text": "eurozone and gas panic between and get panic when it detects the in in",
    "start": "404910",
    "end": "413280"
  },
  {
    "text": "conference in constants in constancy between the extra size of an object and",
    "start": "413280",
    "end": "419820"
  },
  {
    "text": "the size used the ins of free function",
    "start": "419820",
    "end": "424400"
  },
  {
    "start": "425000",
    "end": "425000"
  },
  {
    "text": "the main goal for the attackers to obtain multi is to obtain motive",
    "start": "427250",
    "end": "433880"
  },
  {
    "text": "primitives to read write kernel memory and execute arbitrary code even in case",
    "start": "433880",
    "end": "441480"
  },
  {
    "text": "that all mitigations are deployed in a system but ever deployed too many",
    "start": "441480",
    "end": "447420"
  },
  {
    "text": "medications to crop the older color object is very hard",
    "start": "447420",
    "end": "453780"
  },
  {
    "text": "therefore attackers try to find a new color object which can be easily",
    "start": "453780",
    "end": "460340"
  },
  {
    "text": "compromised so this new target is is the",
    "start": "460340",
    "end": "466800"
  },
  {
    "text": "mark port so what is Mac thought a Mac products in you is a kernel controlled",
    "start": "466800",
    "end": "473040"
  },
  {
    "text": "communication channel it provides it",
    "start": "473040",
    "end": "478290"
  },
  {
    "text": "provides basic operations to pass messages between stress and it can be",
    "start": "478290",
    "end": "484710"
  },
  {
    "text": "used to represent resources services let's provide objects dialog says to",
    "start": "484710",
    "end": "493200"
  },
  {
    "text": "these obstructions in user space macros",
    "start": "493200",
    "end": "498420"
  },
  {
    "text": "are integer numbers like handlers for IPC protocol objects in the kernel a",
    "start": "498420",
    "end": "508470"
  },
  {
    "start": "505000",
    "end": "505000"
  },
  {
    "text": "mock pod is represented by a pointer to an IPC pore structure there are 40 types",
    "start": "508470",
    "end": "515400"
  },
  {
    "text": "of IPC paul objects in X in you and i/o bytes field defines the type of it io",
    "start": "515400",
    "end": "522810"
  },
  {
    "text": "references field counts the reference number of the object locking related the",
    "start": "522810",
    "end": "528960"
  },
  {
    "text": "data is stored in the IO lock data field Simar field is a pointer that points to",
    "start": "528960",
    "end": "536390"
  },
  {
    "text": "point two receivers IPC space for example IPC space Colonel IP key object",
    "start": "536390",
    "end": "543210"
  },
  {
    "text": "the field points to a con or data structure according to the kernel object type as we mentioned before the main",
    "start": "543210",
    "end": "555390"
  },
  {
    "start": "551000",
    "end": "551000"
  },
  {
    "text": "goal for the attacker is to obtain multiple primitives to read write kernel",
    "start": "555390",
    "end": "561540"
  },
  {
    "text": "memory and try to execute the kernel code even in case that multiple mitigations are deployed in the system",
    "start": "561540",
    "end": "569040"
  },
  {
    "text": "so attackers leverage especially no object which is IP support to obtain",
    "start": "569040",
    "end": "575900"
  },
  {
    "text": "multiple primitives by issuing system calls in user mode since the proposed",
    "start": "575900",
    "end": "582540"
  },
  {
    "text": "the method is mainly based on the IP support cannot object we call it Mac pod",
    "start": "582540",
    "end": "588060"
  },
  {
    "text": "oriented programming as known as pupae note that puget technique was not",
    "start": "588060",
    "end": "594300"
  },
  {
    "text": "created by us we saw it in many public exploits and then summarizes koduri user",
    "start": "594300",
    "end": "600510"
  },
  {
    "text": "text for systematically study most of",
    "start": "600510",
    "end": "606390"
  },
  {
    "text": "you peep parameter of primitives mig",
    "start": "606390",
    "end": "611550"
  },
  {
    "text": "messages luckily xnu is open sourced so we can download the source code and",
    "start": "611550",
    "end": "616850"
  },
  {
    "text": "analyze the usage and the behavior of each system call to exploit the",
    "start": "616850",
    "end": "628470"
  },
  {
    "start": "624000",
    "end": "624000"
  },
  {
    "text": "connoisseur pupae primitives we need to figure out some addresses and offsets in",
    "start": "628470",
    "end": "634650"
  },
  {
    "text": "the first place so you can use either or cheat hall to analyze the color cache and help us to get the offsets after",
    "start": "634650",
    "end": "648089"
  },
  {
    "text": "analyzing the xnu source code and the kernel cash we divided the pub primitives into four",
    "start": "648089",
    "end": "655830"
  },
  {
    "text": "categories the first category is general-purpose primitives we know that",
    "start": "655830",
    "end": "661170"
  },
  {
    "text": "mark subsystem reacts and you cannot is a server that serves the virus spots this server receives",
    "start": "661170",
    "end": "669700"
  },
  {
    "text": "incoming mock messages and process them by performing the required operations to",
    "start": "669700",
    "end": "675190"
  },
  {
    "text": "multiple resources such as processors tasks and stress consequently by using",
    "start": "675190",
    "end": "681700"
  },
  {
    "text": "Marc system calls according to the designers original intention attacker",
    "start": "681700",
    "end": "689020"
  },
  {
    "text": "can still achieve general and useful primitives without hijacking the control",
    "start": "689020",
    "end": "694750"
  },
  {
    "text": "flow that we summarized this type of mark system cottage as general-purpose",
    "start": "694750",
    "end": "700900"
  },
  {
    "text": "primitive for example mark represents",
    "start": "700900",
    "end": "707320"
  },
  {
    "start": "703000",
    "end": "703000"
  },
  {
    "text": "the over overall computer system as a host object through hosts the related",
    "start": "707320",
    "end": "714850"
  },
  {
    "text": "system caused a user's based app can retrieve information or set primitives",
    "start": "714850",
    "end": "721390"
  },
  {
    "text": "or set properties for hosts mover wizards in the right to host the pre",
    "start": "721390",
    "end": "728220"
  },
  {
    "text": "privileged pot and related system code for example hosts the process set",
    "start": "728220",
    "end": "734770"
  },
  {
    "text": "privileged attacker can King sin rights to the two other powerful pots for",
    "start": "734770",
    "end": "741820"
  },
  {
    "text": "example the process set pot these pots are very powerful that can be used to",
    "start": "741820",
    "end": "747940"
  },
  {
    "text": "exploit and control the whole system",
    "start": "747940",
    "end": "752610"
  },
  {
    "start": "755000",
    "end": "755000"
  },
  {
    "text": "besides xnu provides a powerful set of routines mach vm related system caused to user",
    "start": "756060",
    "end": "764680"
  },
  {
    "text": "space app for manipulating trust memory spaces giving approach giving",
    "start": "764680",
    "end": "774870"
  },
  {
    "text": "appropriate privileges when process can perform operating on another processors",
    "start": "774870",
    "end": "782530"
  },
  {
    "text": "memory space identically to its own note that Marc Marc VM religious it's called",
    "start": "782530",
    "end": "789370"
  },
  {
    "text": "require the target processes task pod as an argument in general or",
    "start": "789370",
    "end": "795370"
  },
  {
    "text": "process only have the privilege to get its own tasks and memory space however with an",
    "start": "795370",
    "end": "802780"
  },
  {
    "text": "information link vulnerability or an arbitrary cannot memory read primitive the attacker could retrieve other tasks",
    "start": "802780",
    "end": "810880"
  },
  {
    "text": "map pointers and craft fig tasks to manage other processors memory space yes",
    "start": "810880",
    "end": "819280"
  },
  {
    "text": "especially for the kernel memory space",
    "start": "819280",
    "end": "823530"
  },
  {
    "start": "824000",
    "end": "824000"
  },
  {
    "text": "this is another type of primitive clearing primitives it has a character",
    "start": "826680",
    "end": "833290"
  },
  {
    "text": "and characteristic that the return value of the system call could be used to link",
    "start": "833290",
    "end": "838510"
  },
  {
    "text": "kernel information for example speculatin executed kanakas the code",
    "start": "838510",
    "end": "844510"
  },
  {
    "text": "pattern of clear in primitive mode model includes decision-making States and the",
    "start": "844510",
    "end": "851170"
  },
  {
    "text": "return value assist assignments for example mark pod key object is a system",
    "start": "851170",
    "end": "858190"
  },
  {
    "text": "call that retrieves the type of addresses of kana object it has some",
    "start": "858190",
    "end": "863860"
  },
  {
    "text": "logic partners to calculate some type of IPC pod object which help attackers to",
    "start": "863860",
    "end": "870640"
  },
  {
    "text": "figure out the address of the objects in the kernel for example post penguin",
    "start": "870640",
    "end": "877150"
  },
  {
    "text": "Teddy geo brick used it to brick ksara in iOS 6 and 8 and whoever removed the",
    "start": "877150",
    "end": "886120"
  },
  {
    "text": "address clearing hoodie in the released version some global context for example",
    "start": "886120",
    "end": "895050"
  },
  {
    "text": "Mac system clock initialized the during the system voting and stored in a fixed",
    "start": "895050",
    "end": "901720"
  },
  {
    "text": "place in kernel memory in addition clock sleep trap is a system call expecting his first argument to be",
    "start": "901720",
    "end": "909190"
  },
  {
    "text": "as in the right to the global system clock and it will return cannot success if the pond name is correct",
    "start": "909190",
    "end": "916770"
  },
  {
    "text": "therefore if the attacker can manipulate an IPC cone object and change is key",
    "start": "916770",
    "end": "922420"
  },
  {
    "text": "object field a side channel attack could be launched the two brick keys are",
    "start": "922420",
    "end": "929370"
  },
  {
    "start": "930000",
    "end": "930000"
  },
  {
    "text": "Cyril memory inter inter operation primitives and type confuse attack we",
    "start": "933759",
    "end": "940699"
  },
  {
    "text": "can leverage some system cost to copy sensitive data between Kronos B's and the euro space specific is parallelism",
    "start": "940699",
    "end": "950439"
  },
  {
    "text": "memory in her operation primitives are not used for the original intention of",
    "start": "950439",
    "end": "956239"
  },
  {
    "text": "the design of the design for for example PID for task is a such a system call",
    "start": "956239",
    "end": "962989"
  },
  {
    "text": "which returns the PID number corresponding to a particular mark task",
    "start": "962989",
    "end": "972970"
  },
  {
    "text": "the function first calls the port name to task to get a marked hazard object",
    "start": "974170",
    "end": "980209"
  },
  {
    "text": "then invokes get yes the task info to get the BST info of the mach task after",
    "start": "980209",
    "end": "987199"
  },
  {
    "text": "getting BST info the function calls prog Piatti to get PID number of the map task",
    "start": "987199",
    "end": "993049"
  },
  {
    "text": "and a used copy outage who transmitted the PID number to use user space however",
    "start": "993049",
    "end": "998509"
  },
  {
    "text": "the function doesn't check the validator of the task and it directly returns the",
    "start": "998509",
    "end": "1003610"
  },
  {
    "text": "value of task BST in for PID to the Euro space after calling the PID for task of",
    "start": "1003610",
    "end": "1010089"
  },
  {
    "text": "system call another example is limited",
    "start": "1010089",
    "end": "1018939"
  },
  {
    "text": "kernel memory read and write just like Donnellan thoughts just like dangling",
    "start": "1018939",
    "end": "1025870"
  },
  {
    "text": "pointer a pot before referring to a freed IPC pole object is called a",
    "start": "1025870",
    "end": "1033520"
  },
  {
    "text": "toggling pod system calls like Mark said I'll get mach port card on god some",
    "start": "1033520",
    "end": "1043329"
  },
  {
    "text": "api's they can be used to read and write the memo field of the IPC pod object by",
    "start": "1043329",
    "end": "1050830"
  },
  {
    "text": "default IP contact field in the IP C pod object is used to associate a user space",
    "start": "1050830",
    "end": "1057639"
  },
  {
    "text": "pointer with a pod however by using this API",
    "start": "1057639",
    "end": "1064440"
  },
  {
    "text": "- a tunneling pod the attacker can retrieve instead instead 60 64 bytes",
    "start": "1064440",
    "end": "1073500"
  },
  {
    "text": "value in the Colossus the last primitive",
    "start": "1073500",
    "end": "1080760"
  },
  {
    "start": "1077000",
    "end": "1077000"
  },
  {
    "text": "is arbitrary code exclusion primitive this type of primitive can be used to",
    "start": "1080760",
    "end": "1086760"
  },
  {
    "text": "execute kernel code for example a rope chain or kernel function in arbitrary",
    "start": "1086760",
    "end": "1093059"
  },
  {
    "text": "addresses for example clock get attributes is a system call to get is a",
    "start": "1093059",
    "end": "1103350"
  },
  {
    "text": "system call to get attributes of a target clock object however an attacker",
    "start": "1103350",
    "end": "1109139"
  },
  {
    "text": "can change the global function pointers or just the fig object to hijack the",
    "start": "1109139",
    "end": "1115320"
  },
  {
    "text": "control flow to achieve arbitrary code execution this technique would use the",
    "start": "1115320",
    "end": "1121500"
  },
  {
    "text": "in the precursors apt attack in iOS 9.3 point 3 besides our kid is an",
    "start": "1121500",
    "end": "1131760"
  },
  {
    "text": "object-oriented device driver framework in X in you that you D is a subset of",
    "start": "1131760",
    "end": "1138440"
  },
  {
    "text": "C++ as its language therefore is object",
    "start": "1138440",
    "end": "1143669"
  },
  {
    "text": "contains of virtual table as Noah as variable structure in user space in user",
    "start": "1143669",
    "end": "1152070"
  },
  {
    "text": "space abs can communicate with I ok the user client which IP support cannot",
    "start": "1152070",
    "end": "1158490"
  },
  {
    "text": "object with our kid connection type consequently if the attacker has the",
    "start": "1158490",
    "end": "1164010"
  },
  {
    "text": "kernel right primitives he can change the via table entry of al-qaeda you",
    "start": "1164010",
    "end": "1169470"
  },
  {
    "text": "declined to hijack the control flow through the address of a rope edit to",
    "start": "1169470",
    "end": "1174750"
  },
  {
    "text": "achieve arbitrary kernel called excursion primitive",
    "start": "1174750",
    "end": "1180409"
  },
  {
    "start": "1187000",
    "end": "1187000"
  },
  {
    "text": "okay let's take a look at a real pupae exploit in the world yahoo exploit this",
    "start": "1188140",
    "end": "1198020"
  },
  {
    "text": "exploit UD is a hip buffer flow to achieve a job Rick in OS 10 the one the",
    "start": "1198020",
    "end": "1207289"
  },
  {
    "text": "cool the vulnerable code exists seeing the mock water extract attribute recipe",
    "start": "1207289",
    "end": "1213890"
  },
  {
    "text": "trap this function first the cop is four bytes from the euro space pointer which",
    "start": "1213890",
    "end": "1219980"
  },
  {
    "text": "is really precise to the SD to the SD",
    "start": "1219980",
    "end": "1225230"
  },
  {
    "text": "value of that it called key log SD to allocate a hip buffer with SD size",
    "start": "1225230",
    "end": "1231380"
  },
  {
    "text": "however the function is in code copying to copy recipe size size the data from",
    "start": "1231380",
    "end": "1237919"
  },
  {
    "text": "the user space to the kernel hit buffer note that recipe size is a us-based",
    "start": "1237919",
    "end": "1243860"
  },
  {
    "text": "pointer which could be a very large number but the buffer could be very",
    "start": "1243860",
    "end": "1250039"
  },
  {
    "text": "small because it's only as the size consequently it will cause a buffer",
    "start": "1250039",
    "end": "1255860"
  },
  {
    "text": "overflow by using this vulnerability it",
    "start": "1255860",
    "end": "1264830"
  },
  {
    "text": "is easy for us to overflow pointers of IPC post object inside an arrow mark",
    "start": "1264830",
    "end": "1271909"
  },
  {
    "text": "message the exploit overflow those",
    "start": "1271909",
    "end": "1278929"
  },
  {
    "text": "pointers and modify where IPC object pointer to point to a fig IPC object in",
    "start": "1278929",
    "end": "1285409"
  },
  {
    "text": "user mode the exploit creates a fig task in user mode for the fig port as well as",
    "start": "1285409",
    "end": "1292610"
  },
  {
    "text": "Earth after that the exploit chain called clock sleep trap system code who",
    "start": "1292610",
    "end": "1298909"
  },
  {
    "text": "brought forth the address of global system call and brick the key is our new",
    "start": "1298909",
    "end": "1308929"
  },
  {
    "text": "additionally the exploit says I hope ice of the fig IPC object to i2 i qo t",
    "start": "1308929",
    "end": "1318180"
  },
  {
    "text": "and craft a fake task for the fake port by setting the value at the fake task",
    "start": "1318180",
    "end": "1323910"
  },
  {
    "text": "plus yes each task offset attacker could read arbitrary 20 32 bytes color",
    "start": "1323910",
    "end": "1335880"
  },
  {
    "text": "memories through PID for tasks without using any rope gadget the after",
    "start": "1335880",
    "end": "1348480"
  },
  {
    "text": "disassembling the cannot catch we can find that the function doesn't check the",
    "start": "1348480",
    "end": "1353520"
  },
  {
    "text": "validity of the task and the trust the returns the value under specified offset",
    "start": "1353520",
    "end": "1358770"
  },
  {
    "text": "to the euro space finally the attacker",
    "start": "1358770",
    "end": "1364440"
  },
  {
    "text": "attempts the chronology object and cannot ask and they get take a school or",
    "start": "1364440",
    "end": "1371340"
  },
  {
    "text": "task for through Colonel conspirator system call after getting the cannot",
    "start": "1371340",
    "end": "1381690"
  },
  {
    "text": "have bought the Kim it over because Colonel because the attacker can use mach vm system code to do Africana",
    "start": "1381690",
    "end": "1389970"
  },
  {
    "text": "memory read and write through the cannot has fought to prevent the attacker from",
    "start": "1389970",
    "end": "1401910"
  },
  {
    "start": "1397000",
    "end": "1397000"
  },
  {
    "text": "abusing the cannot ask iOS 11 added a new mitigation that only the kernel",
    "start": "1401910",
    "end": "1408240"
  },
  {
    "text": "carries resolved the colors task pod so we cannot use the kernel task can spell",
    "start": "1408240",
    "end": "1415500"
  },
  {
    "text": "report trick RS 11 however I'm beer",
    "start": "1415500",
    "end": "1423000"
  },
  {
    "start": "1420000",
    "end": "1420000"
  },
  {
    "text": "proposed mitigation bypass in a sink week exploit that the attacker can copy",
    "start": "1423000",
    "end": "1429390"
  },
  {
    "text": "reference pointer of Knaus VM to the fig task now the fig pot has a simcha no",
    "start": "1429390",
    "end": "1437070"
  },
  {
    "text": "address as the cannot has pot is enough for the attacker to do arbitrary Connery",
    "start": "1437070",
    "end": "1443460"
  },
  {
    "text": "than writes remark VM related system calls",
    "start": "1443460",
    "end": "1448730"
  },
  {
    "start": "1450000",
    "end": "1450000"
  },
  {
    "text": "so note that most of exploit techniques we discussed in this presentation can",
    "start": "1451820",
    "end": "1458220"
  },
  {
    "text": "still be used in the latest acts and you however lots of companies for example",
    "start": "1458220",
    "end": "1464400"
  },
  {
    "text": "our company Alibaba / / Mac books as well computers to their employees there",
    "start": "1464400",
    "end": "1472140"
  },
  {
    "text": "are some problems firstly Mac OS is not not forced up grid forced to upgrade",
    "start": "1472140",
    "end": "1479130"
  },
  {
    "text": "like iOS secondly there are less Hardware piece the protections on",
    "start": "1479130",
    "end": "1485070"
  },
  {
    "text": "netbooks certainly Mac OS has less security sandbox rules than RS",
    "start": "1485070",
    "end": "1493280"
  },
  {
    "text": "consequently it is hard for the work computers to defend against apt and",
    "start": "1493280",
    "end": "1498450"
  },
  {
    "text": "these computers need a more secure system to mitigate the ABT and the pupae",
    "start": "1498450",
    "end": "1513960"
  },
  {
    "start": "1506000",
    "end": "1506000"
  },
  {
    "text": "attack we proposed a framework called X and you cannot object protector as no as",
    "start": "1513960",
    "end": "1520800"
  },
  {
    "text": "a kewpie the basic idea is to lead to",
    "start": "1520800",
    "end": "1526320"
  },
  {
    "text": "load econo extension to the system the kernel extension implements in life working for specific system calls and",
    "start": "1526320",
    "end": "1534060"
  },
  {
    "text": "deploy integrity check for IPC protocol objects in addition it could bring new",
    "start": "1534060",
    "end": "1541020"
  },
  {
    "text": "mitigations to old Mac OS systems the",
    "start": "1541020",
    "end": "1551100"
  },
  {
    "start": "1547000",
    "end": "1547000"
  },
  {
    "text": "integrity check the integrity check for the IPC pod is implemented through the",
    "start": "1551100",
    "end": "1558890"
  },
  {
    "text": "exam examiner functions therefore our system need to find reliable code points",
    "start": "1558890",
    "end": "1565710"
  },
  {
    "text": "that the examiners could be excute chaos the kernel subsystem exports a key ayah",
    "start": "1565710",
    "end": "1573690"
  },
  {
    "text": "that allows third-party developers to authorize actions within the kernel",
    "start": "1573690",
    "end": "1578880"
  },
  {
    "text": "however the operation set is very limited make functions",
    "start": "1578880",
    "end": "1583980"
  },
  {
    "text": "is the operation set is very limited we can't use it to do a lot of things on",
    "start": "1583980",
    "end": "1593429"
  },
  {
    "text": "the other hand neck framework is private and can only be used by Apple in",
    "start": "1593429",
    "end": "1600540"
  },
  {
    "text": "addition the rules are hard-coded in the code of the axon you Colonel if we want",
    "start": "1600540",
    "end": "1605730"
  },
  {
    "text": "to use meth we need to recompile the kernel so finally we truth in life hooking here",
    "start": "1605730",
    "end": "1614730"
  },
  {
    "text": "is the architecture of in life hooking based on the examiners xqp replace the",
    "start": "1614730",
    "end": "1621630"
  },
  {
    "text": "original code entry of the target system call into a trampoline the traveling",
    "start": "1621630",
    "end": "1627990"
  },
  {
    "text": "terms to the exam or studying the xqp cano extension that the examiner",
    "start": "1627990",
    "end": "1634620"
  },
  {
    "text": "verifies the integrity of the target cannot object there are four examiner's",
    "start": "1634620",
    "end": "1645270"
  },
  {
    "start": "1641000",
    "end": "1641000"
  },
  {
    "text": "are deployed in our framework the first one is cannot object address",
    "start": "1645270",
    "end": "1650970"
  },
  {
    "text": "checker we know that IPC broad object is a con object which means it could not be",
    "start": "1650970",
    "end": "1658380"
  },
  {
    "text": "in the user space address so we check that the address of Konoe of the con",
    "start": "1658380",
    "end": "1666150"
  },
  {
    "text": "object in some specific system cause it's just like SM ap for all the devices",
    "start": "1666150",
    "end": "1675350"
  },
  {
    "text": "the second chakra is object type examiner's for example in this case in",
    "start": "1675350",
    "end": "1683520"
  },
  {
    "text": "the CAD PST it has the info function the event should appear real real PSD tasks",
    "start": "1683520",
    "end": "1690980"
  },
  {
    "text": "infrastructure with a very D ID number if the examiner finds the PID is the",
    "start": "1690980",
    "end": "1698669"
  },
  {
    "text": "invalidate it will cause a warning or panic according to the user",
    "start": "1698669",
    "end": "1704179"
  },
  {
    "text": "configuration the clocks is sleep trap",
    "start": "1704179",
    "end": "1712620"
  },
  {
    "text": "is a system code that can be used to guess the address of global clock",
    "start": "1712620",
    "end": "1717720"
  },
  {
    "text": "object through brute force attack but when when the attacker to do the brute",
    "start": "1717720",
    "end": "1726390"
  },
  {
    "text": "force attack he needed to get a lot of error returns in order to get the",
    "start": "1726390",
    "end": "1733170"
  },
  {
    "text": "address of the clock object therefore we implement clearing",
    "start": "1733170",
    "end": "1739590"
  },
  {
    "text": "examiner's which count the error returns in a window time and is in warning the",
    "start": "1739590",
    "end": "1745710"
  },
  {
    "text": "user or panic of the system according to the configuration the last examiners is",
    "start": "1745710",
    "end": "1756920"
  },
  {
    "text": "cannot ask for examiner cannot ask is examiner the first the brains the task",
    "start": "1756920",
    "end": "1765020"
  },
  {
    "text": "conversion Evo mitigation to order a macro air systems that can only the",
    "start": "1765020",
    "end": "1770130"
  },
  {
    "text": "kernel can resolve the connote task pod",
    "start": "1770130",
    "end": "1774710"
  },
  {
    "text": "after that it will check the tasks VM object if the color process do not",
    "start": "1776660",
    "end": "1785450"
  },
  {
    "text": "belong to the kernel and the target errs IP teapot object has the same map",
    "start": "1785450",
    "end": "1791580"
  },
  {
    "text": "structure with the kernel which means which means it has a same speed memory",
    "start": "1791580",
    "end": "1799020"
  },
  {
    "text": "with the kernel the examiner will trigger an error return or panic because",
    "start": "1799020",
    "end": "1804420"
  },
  {
    "text": "only the kernel can modify its kernel space the users based application should",
    "start": "1804420",
    "end": "1811620"
  },
  {
    "text": "not have any permission to do that",
    "start": "1811620",
    "end": "1815660"
  },
  {
    "start": "1817000",
    "end": "1817000"
  },
  {
    "text": "for evaluation we selected for Colonel vulnerabilities and available exploit to",
    "start": "1822750",
    "end": "1830440"
  },
  {
    "text": "evaluate the effectiveness of our system we firstly ensure that exploits work on",
    "start": "1830440",
    "end": "1838690"
  },
  {
    "text": "the corresponding systems and as only deploys a xqp framework and around the",
    "start": "1838690",
    "end": "1845830"
  },
  {
    "text": "exploits again to check whether our system detects and blocks the attack as",
    "start": "1845830",
    "end": "1855000"
  },
  {
    "text": "we mentioned as we showed in the pictures the experimental result shows",
    "start": "1855000",
    "end": "1863110"
  },
  {
    "text": "that xqp provides deterministic protection for everyone or BT and block",
    "start": "1863110",
    "end": "1870190"
  },
  {
    "text": "each attempt to exploit the system for",
    "start": "1870190",
    "end": "1875470"
  },
  {
    "text": "example the Yalu exploit the AU's PID for task 2 to do the kernel memory",
    "start": "1875470",
    "end": "1884100"
  },
  {
    "text": "africana memory read first they use pod name to task to get a big task but our",
    "start": "1884100",
    "end": "1892900"
  },
  {
    "text": "examiner's find this task is not in the Kalos is not in the crosspiece it was",
    "start": "1892900",
    "end": "1899680"
  },
  {
    "text": "created in the user space so it will show a warning to the user but after",
    "start": "1899680",
    "end": "1908590"
  },
  {
    "text": "that it used a ID for task to get address in an arbitrary cano address but",
    "start": "1908590",
    "end": "1915790"
  },
  {
    "text": "the PID is is invalid it's it's a very big number but the actual PID we're not",
    "start": "1915790",
    "end": "1925900"
  },
  {
    "text": "as big as this number so our examiner's will check the melody ID number and get",
    "start": "1925900",
    "end": "1935980"
  },
  {
    "text": "and warning the user that and the examiners find a real pupae attack",
    "start": "1935980",
    "end": "1945660"
  },
  {
    "start": "1946000",
    "end": "1946000"
  },
  {
    "text": "unfortunately our framework cannot mitigate all kinds of pukey primitives",
    "start": "1946530",
    "end": "1953260"
  },
  {
    "text": "for firstly for the clearing primitive which uses error return values to gain",
    "start": "1953260",
    "end": "1960740"
  },
  {
    "text": "an extra source of information which is very similar to the side channel attack",
    "start": "1960740",
    "end": "1968230"
  },
  {
    "text": "for the side channel attack it is an attack based on information gained from",
    "start": "1968350",
    "end": "1973880"
  },
  {
    "text": "the implementation of a computer system rather than the weakness in the",
    "start": "1973880",
    "end": "1980440"
  },
  {
    "text": "implemented algorithm itself so it's very hard to protect such attack",
    "start": "1980440",
    "end": "1989470"
  },
  {
    "text": "secondly we didn't implement any protections for Africa execution the",
    "start": "1991450",
    "end": "1999110"
  },
  {
    "text": "reason is without hardware support software piece to see if I am limitation",
    "start": "1999110",
    "end": "2004480"
  },
  {
    "text": "can be very expensive in addition modern kernel could be",
    "start": "2004480",
    "end": "2010270"
  },
  {
    "text": "patched by pure data which means kernel memory read and write primitives are",
    "start": "2010270",
    "end": "2015880"
  },
  {
    "text": "enough for the attackers to accomplish the in last but not least though we may",
    "start": "2015880",
    "end": "2023559"
  },
  {
    "text": "miss some potential vulnerabilities that can bypass a kewpie protection as",
    "start": "2023559",
    "end": "2030390"
  },
  {
    "text": "imperfect as an imperfect perfect solution our system suppose extensible",
    "start": "2030390",
    "end": "2038320"
  },
  {
    "text": "Examiners to prevent a new threads in the first place so here is a conclusion",
    "start": "2038320",
    "end": "2048128"
  },
  {
    "start": "2046000",
    "end": "2046000"
  },
  {
    "text": "of my talk firstly we discussed the mitigation techniques in the x and y",
    "start": "2048129",
    "end": "2054310"
  },
  {
    "text": "o'connell which is the kernel of iOS and Mac OS and how these mitigations make",
    "start": "2054310",
    "end": "2060580"
  },
  {
    "text": "the traditional exploit techniques in effective the only summarize a new kind",
    "start": "2060580",
    "end": "2067658"
  },
  {
    "text": "of attack called pukey that leverage multiple IP c-pod cannot objects to",
    "start": "2067659",
    "end": "2074408"
  },
  {
    "text": "bypass these mitigations before besides",
    "start": "2074409",
    "end": "2079589"
  },
  {
    "text": "in this talk we not only discuss attack techniques also we propose a",
    "start": "2079589",
    "end": "2088190"
  },
  {
    "text": "defense mechanism called xqp to protect the integrity of the color object yet in",
    "start": "2088190",
    "end": "2095330"
  },
  {
    "text": "you so if you have last last but not",
    "start": "2095330",
    "end": "2101270"
  },
  {
    "text": "least if you have any questions you can you can follow me are we brand twitter",
    "start": "2101270",
    "end": "2107510"
  },
  {
    "text": "and ask me questions so here is some materials for this talk it's very useful",
    "start": "2107510",
    "end": "2117410"
  },
  {
    "start": "2112000",
    "end": "2112000"
  },
  {
    "text": "and that's all for my talk thank you for listening then our quest questions so",
    "start": "2117410",
    "end": "2137230"
  },
  {
    "text": "have you played about with fuse first in userspace well an implementing you know",
    "start": "2137230",
    "end": "2147160"
  },
  {
    "text": "similar solar system on the fuse because I can see that the similarity is here",
    "start": "2147160",
    "end": "2153710"
  },
  {
    "text": "and I can see where they would be exploited similarly similarly to you",
    "start": "2153710",
    "end": "2163670"
  },
  {
    "text": "know fuse feels you yummy memory feels all file system in userspace",
    "start": "2163670",
    "end": "2170240"
  },
  {
    "text": "a file system that's yes yeah it's basically an implementation of the yet",
    "start": "2170240",
    "end": "2177530"
  },
  {
    "text": "the system call interface if you like but it yes but our system only protects",
    "start": "2177530",
    "end": "2182600"
  },
  {
    "text": "the portal related objects collaborative you can still do copying and copy out",
    "start": "2182600",
    "end": "2187640"
  },
  {
    "text": "via via fuse you can I'm not sure all",
    "start": "2187640",
    "end": "2197150"
  },
  {
    "text": "about that you can talk talk with me later after",
    "start": "2197150",
    "end": "2202930"
  },
  {
    "text": "okay oh thank you",
    "start": "2218410",
    "end": "2223170"
  }
]