[
  {
    "text": "okay so welcome to our talk and um in this talk uh we present Unicon the Next",
    "start": "120",
    "end": "6560"
  },
  {
    "text": "Generation CPU emulator framework can see the rest of",
    "start": "6560",
    "end": "12240"
  },
  {
    "text": "the uh website our tune on the",
    "start": "12240",
    "end": "17320"
  },
  {
    "text": "screen okay share intruction my name is Queen I'm a security researcher and um",
    "start": "17320",
    "end": "24720"
  },
  {
    "text": "mostly I work on some very low level Stu like operating system virtual machine",
    "start": "24720",
    "end": "30480"
  },
  {
    "text": "byis and um FR so on and I'm the found",
    "start": "30480",
    "end": "35840"
  },
  {
    "text": "of the cstone dis assembly B",
    "start": "35840",
    "end": "41559"
  },
  {
    "text": "hello hello hello hello can you hear",
    "start": "41559",
    "end": "49198"
  },
  {
    "text": "me hello may speak here so um my name is W I'm currently a PhD student in CS and",
    "start": "50239",
    "end": "59719"
  },
  {
    "text": "I um I work on security for funds um I'm a",
    "start": "59719",
    "end": "66000"
  },
  {
    "text": "member of V security which is um Vietnamese security Resource Group um",
    "start": "66000",
    "end": "71840"
  },
  {
    "text": "the longest and um strongest Resource Group in Vietnam uh often I play CTF",
    "start": "71840",
    "end": "77520"
  },
  {
    "text": "with Ds and Rise some exploit um the most notable one is the um G um exploit",
    "start": "77520",
    "end": "86280"
  },
  {
    "text": "that I published in the their PL page um also contribute to security open source",
    "start": "86280",
    "end": "91880"
  },
  {
    "text": "projects the two most notable one is Capstone and Peta um Capstone is um",
    "start": "91880",
    "end": "97680"
  },
  {
    "text": "Queen's products of for uh this sampler you guys should know about him already",
    "start": "97680",
    "end": "104159"
  },
  {
    "text": "and Peta is um the GDB um supported script that help you to um deu and",
    "start": "104159",
    "end": "112240"
  },
  {
    "text": "develop your exploit okay so here's agenda my our",
    "start": "112240",
    "end": "117960"
  },
  {
    "text": "talks first we introduce the B on the CPU emulator what it is and what is the",
    "start": "117960",
    "end": "123360"
  },
  {
    "text": "problems on the existing CPU CPU emulators now and because uh there are",
    "start": "123360",
    "end": "128479"
  },
  {
    "text": "so many problems you try to fix it and we come up with unicorn engine so the next part we introduce the goals of",
    "start": "128479",
    "end": "134840"
  },
  {
    "text": "unicorn framework after that we go into the detail and the implementation and",
    "start": "134840",
    "end": "140760"
  },
  {
    "text": "show you how to write application on top of unicorn and there's some live demo after",
    "start": "140760",
    "end": "146360"
  },
  {
    "text": "that and hopefully you you guys can enjoy it and the conclusion",
    "start": "146360",
    "end": "151840"
  },
  {
    "text": "okay first part cpor so what is cpor C is a sofware so you",
    "start": "152400",
    "end": "159680"
  },
  {
    "text": "can emulate the physical Shu in sofware only and here not that we just focus on",
    "start": "159680",
    "end": "167159"
  },
  {
    "text": "CPU operation we don't want to do full system emulation but only CPU and that's why Eon is just CPU emulators",
    "start": "167159",
    "end": "176000"
  },
  {
    "text": "Frameworks um there many application of edor emulator first point you need spor",
    "start": "176000",
    "end": "182599"
  },
  {
    "text": "to emulate go without needing a real SP so you can",
    "start": "182599",
    "end": "188239"
  },
  {
    "text": "run your go on the imator and you don't need the real physical machine for that",
    "start": "188239",
    "end": "194159"
  },
  {
    "text": "and for Security application we can use a CPU ulator to",
    "start": "194159",
    "end": "199560"
  },
  {
    "text": "analyze the mle first of all on most of the AV antivirus has some CPU emulator",
    "start": "199560",
    "end": "207720"
  },
  {
    "text": "inside to analyze the mle so they run the MEO inside cator but they don't",
    "start": "207720",
    "end": "213680"
  },
  {
    "text": "really run it on the physical machine which is dangerous for your machine right and you can also use a simor to",
    "start": "213680",
    "end": "220200"
  },
  {
    "text": "verify the Cod sematics when you reverse the Cod here's one example is it can you see",
    "start": "220200",
    "end": "228959"
  },
  {
    "text": "that okay Zoom it so see that the two go left side and right",
    "start": "228959",
    "end": "234040"
  },
  {
    "text": "side actually this go do exactly the same thing but the go on size much more",
    "start": "234040",
    "end": "240159"
  },
  {
    "text": "simple and easy to understand but the left the go left side is very hard to",
    "start": "240159",
    "end": "247000"
  },
  {
    "text": "understand very complicated and actually the code left side is exed",
    "start": "247000",
    "end": "252480"
  },
  {
    "text": "by the mware they transform the code the right side to the Cod on left side so as a maror analyst it's very hard to",
    "start": "252480",
    "end": "258759"
  },
  {
    "text": "analyze right so the question is how to understand the go on the left side when it's actually very shle so of course you",
    "start": "258759",
    "end": "266040"
  },
  {
    "text": "can use a pencil paper choice to analyze a go yourself but it take a lot of time",
    "start": "266040",
    "end": "273039"
  },
  {
    "text": "so uh one good uh method is that you give the code the left side to the cpor",
    "start": "273039",
    "end": "280240"
  },
  {
    "text": "and give the CPU context the register value the memory uh set up and after",
    "start": "280240",
    "end": "286680"
  },
  {
    "text": "that the Sor run the Cod left side for you and at output you have",
    "start": "286680",
    "end": "292000"
  },
  {
    "text": "the so you can understand what the go on the left side does so that's one a very",
    "start": "292000",
    "end": "299000"
  },
  {
    "text": "good application of sh",
    "start": "299000",
    "end": "302199"
  },
  {
    "text": "and okay how the C Works inside so given the input go in binary",
    "start": "307600",
    "end": "314720"
  },
  {
    "text": "form the emor will decod the binary into injection for your architecture you you",
    "start": "314720",
    "end": "321880"
  },
  {
    "text": "you choose and after that for each injection it emulate those injection to",
    "start": "321880",
    "end": "327560"
  },
  {
    "text": "do exactly what this injection D on the physical CPU physic machine so you need",
    "start": "327560",
    "end": "334919"
  },
  {
    "text": "uh this step you need to reference the injection set",
    "start": "334919",
    "end": "341600"
  },
  {
    "text": "manual the architecture that you try to emulate you need to handle the memory access IO and Etc and after each",
    "start": "341600",
    "end": "349400"
  },
  {
    "text": "injection you emulate it you need to update the CPU context every time you imate every",
    "start": "349400",
    "end": "356199"
  },
  {
    "text": "injection so we are few point for point on uh Intel 32bit given the input is",
    "start": "356199",
    "end": "365440"
  },
  {
    "text": "5050 the ulator indal this one into push injection and after that it see this",
    "start": "365440",
    "end": "372520"
  },
  {
    "text": "action you need to First you need to load ex in ex reg",
    "start": "372520",
    "end": "380360"
  },
  {
    "text": "after that it copy ex into the St bottom and finally it decre the St poter by",
    "start": "380360",
    "end": "386280"
  },
  {
    "text": "four and update it back right there example if you see C 01 D1 you deal this",
    "start": "386280",
    "end": "394160"
  },
  {
    "text": "one into eight injection and after that it load e ebx register in eight them",
    "start": "394160",
    "end": "402400"
  },
  {
    "text": "together and copy the result into ex and finally it need to update on the flag",
    "start": "402400",
    "end": "409039"
  },
  {
    "text": "resistor so you can see just on the work that simulator",
    "start": "409039",
    "end": "415120"
  },
  {
    "text": "[Music] CPU okay so now you want to build simulator is not easy at all because",
    "start": "415220",
    "end": "423280"
  },
  {
    "text": "there are a lot of works you need to do first you need to have very good understanding of CPU architecture right",
    "start": "423280",
    "end": "429680"
  },
  {
    "text": "after that you need to understand on the injection provided by the your CPU",
    "start": "429680",
    "end": "437520"
  },
  {
    "text": "because you want to emulate everything and suction has a lot of virus a lot of",
    "start": "437520",
    "end": "443479"
  },
  {
    "text": "vir a lot of sh effects and sometimes some injection even not not",
    "start": "443479",
    "end": "449680"
  },
  {
    "text": "really documented like first Intel they don't document all the instruction so",
    "start": "449680",
    "end": "455080"
  },
  {
    "text": "it's very hard to really emulate those",
    "start": "455080",
    "end": "460159"
  },
  {
    "text": "instruction so you can see it's very hard and a lot of Works to build super",
    "start": "460440",
    "end": "465479"
  },
  {
    "text": "emulator yourself so the question now is what a",
    "start": "465479",
    "end": "470560"
  },
  {
    "text": "good emulator so you set some targets Andy what is good good one first one",
    "start": "470560",
    "end": "478039"
  },
  {
    "text": "because now we work with it's very common to open own c architectures not only uh Intel right so a good emor",
    "start": "478039",
    "end": "486360"
  },
  {
    "text": "should support many architectures you support should support6 of course AR M",
    "start": "486360",
    "end": "492520"
  },
  {
    "text": "64 lies power PC spark and so on it should work on all the platform not only",
    "start": "492520",
    "end": "499759"
  },
  {
    "text": "windows but all Unix Mark Android now",
    "start": "499759",
    "end": "504960"
  },
  {
    "text": "iOS third is very important it should be updated because",
    "start": "504960",
    "end": "510319"
  },
  {
    "text": "the CPU vendor they keep updating they keep adding new injection all the time I",
    "start": "510319",
    "end": "516440"
  },
  {
    "text": "in they add new injection C extension every year so the good emitor should",
    "start": "516440",
    "end": "523080"
  },
  {
    "text": "keep updated so support even the latest injection the",
    "start": "523080",
    "end": "530120"
  },
  {
    "text": "next one a good emor should be independent which mean you can use this",
    "start": "530120",
    "end": "537600"
  },
  {
    "text": "C to build your tunes on top of that so your T just depend on on on this",
    "start": "537600",
    "end": "547680"
  },
  {
    "text": "Ador and finally uh a good emitor should have good performance so actually there",
    "start": "547680",
    "end": "554839"
  },
  {
    "text": "two c way to build aor the first one easy is interpretor interpretor works",
    "start": "554839",
    "end": "561800"
  },
  {
    "text": "this way whenever on instruction it decco it and after that it call some",
    "start": "561800",
    "end": "568040"
  },
  {
    "text": "function link with that instuction next time you see that instruction again it go that function okay so each",
    "start": "568040",
    "end": "574600"
  },
  {
    "text": "instruction has one function all right so it's easy to to build the",
    "start": "574600",
    "end": "579720"
  },
  {
    "text": "interpretor but it's slow the other way which is way faster",
    "start": "579720",
    "end": "585680"
  },
  {
    "text": "technically is a just in time compar so way that when you see some we do not",
    "start": "585680",
    "end": "593839"
  },
  {
    "text": "just Cod inator on a rejection but you comp by on those go and you cat it and",
    "start": "593839",
    "end": "599160"
  },
  {
    "text": "after that we run the machine C that we just compile and next time when you see the C again we get it from the C and run",
    "start": "599160",
    "end": "606040"
  },
  {
    "text": "it again we don't need to compile okay and that's why that's same time",
    "start": "606040",
    "end": "611279"
  },
  {
    "text": "compor using Z technique is much faster but the part that is it's it's very hard",
    "start": "611279",
    "end": "617360"
  },
  {
    "text": "to do that because you have to view the",
    "start": "617360",
    "end": "622480"
  },
  {
    "text": "compiler okay so looking at on the existing shors you can find out you can see that all of them have many",
    "start": "622839",
    "end": "631200"
  },
  {
    "text": "problems so relist some very popular one here Le",
    "start": "631200",
    "end": "637279"
  },
  {
    "text": "Leo ID x86 CPU so you can see that all of them only support x86 and nothing",
    "start": "637279",
    "end": "645600"
  },
  {
    "text": "else one exception is Liu which is designed to support old tees but the",
    "start": "645600",
    "end": "652600"
  },
  {
    "text": "project is die like it was last updated like I think four years ago no more",
    "start": "652600",
    "end": "658079"
  },
  {
    "text": "devopment after that so l i list it here but actually nothing works with that",
    "start": "658079",
    "end": "664680"
  },
  {
    "text": "project updated nothing updated why because no single emitor you can see",
    "start": "664680",
    "end": "672120"
  },
  {
    "text": "here support inity for which is very common very important architecture now",
    "start": "672120",
    "end": "678079"
  },
  {
    "text": "right independent Le emu is build to detect um Windows sh so stick with",
    "start": "678079",
    "end": "685720"
  },
  {
    "text": "Windows only p is build in Python which mean you need to write your code in",
    "start": "685720",
    "end": "691680"
  },
  {
    "text": "Python so it's not really dependent it's not really independent right you cannot write C and code P ID X6 is a good PL",
    "start": "691680",
    "end": "701440"
  },
  {
    "text": "for Ida but it's for you need IDE to run is not independent",
    "start": "701440",
    "end": "707639"
  },
  {
    "text": "right this C is independent but because it's like independent project writing in",
    "start": "707639",
    "end": "714240"
  },
  {
    "text": "C plus plus but it dies can you can use it",
    "start": "714240",
    "end": "719760"
  },
  {
    "text": "just in time compiler nothing is that so everything is slow on on those are very",
    "start": "719760",
    "end": "725480"
  },
  {
    "text": "slow so we dream to have a wood emor which have check check check check in",
    "start": "725480",
    "end": "731240"
  },
  {
    "text": "every SL you can see here you want know wood one one that support multiple",
    "start": "731240",
    "end": "738360"
  },
  {
    "text": "architectures always updated independent so you can view your tools on top of",
    "start": "738360",
    "end": "743440"
  },
  {
    "text": "that and using z c Techni so it's fast",
    "start": "743440",
    "end": "750440"
  },
  {
    "text": "so yeah we want a good one because everything we have now are not good enough you want a good aor which support",
    "start": "750920",
    "end": "758600"
  },
  {
    "text": "multiple architectures on the popular one you want multi platforms tring on",
    "start": "758600",
    "end": "765360"
  },
  {
    "text": "Windows Unix MK androidos and so on everything you want need to be updated",
    "start": "765360",
    "end": "771680"
  },
  {
    "text": "support the latest instuction on every architectures you want independent TS so",
    "start": "771680",
    "end": "778760"
  },
  {
    "text": "you can be uh our Tes on top of that so it's best",
    "start": "778760",
    "end": "784279"
  },
  {
    "text": "to have a good emitor writing in C PC and after that on top that support",
    "start": "784279",
    "end": "790480"
  },
  {
    "text": "multiple Bing language like python Ruby and so on the good one should have good",
    "start": "790480",
    "end": "796360"
  },
  {
    "text": "performance using it and finally a good emitor should allow you to instrument at",
    "start": "796360",
    "end": "803079"
  },
  {
    "text": "every level like you can do single step with that you can instrument at this",
    "start": "803079",
    "end": "808120"
  },
  {
    "text": "injection this Junction and you can intercept on the memory access and so on",
    "start": "808120",
    "end": "813959"
  },
  {
    "text": "so all kind instrumentation you should be able to do so problem is that until now 20",
    "start": "813959",
    "end": "823079"
  },
  {
    "text": "2015 we don't have a single reasonable one and apparently nobody want to fix it",
    "start": "823079",
    "end": "830000"
  },
  {
    "text": "and you don't see any good future",
    "start": "830000",
    "end": "835639"
  },
  {
    "text": "right so until in but you decide to jum in and",
    "start": "835639",
    "end": "840959"
  },
  {
    "text": "show the problems ourself because nobody does",
    "start": "840959",
    "end": "845720"
  },
  {
    "text": "that okay so next part we introduce in the Next Generation CPU",
    "start": "846240",
    "end": "853000"
  },
  {
    "text": "ulator so the go like I show in the last uh few slides want unicorn to support",
    "start": "853000",
    "end": "859480"
  },
  {
    "text": "multiple architectures running multiple platforms always",
    "start": "859480",
    "end": "865399"
  },
  {
    "text": "updated the core Inon should be be PC and support multiple language on top of that so can",
    "start": "865399",
    "end": "872240"
  },
  {
    "text": "you can you can write your go using Inon in Python it be and so on you should",
    "start": "872240",
    "end": "879199"
  },
  {
    "text": "have good performance using zit comp techniques it allow instrumentation at various",
    "start": "879199",
    "end": "885920"
  },
  {
    "text": "levels okay so if we do that we realize our Dream to have very good emulator",
    "start": "886720",
    "end": "893279"
  },
  {
    "text": "that check check check check in all those things that we we think that's important m updated independent and",
    "start": "893279",
    "end": "903600"
  },
  {
    "text": "fast the problem is that it's very hard to BU in the court",
    "start": "904240",
    "end": "910240"
  },
  {
    "text": "that our that's our Dream but there all lot works first there are too many Ares",
    "start": "910240",
    "end": "915519"
  },
  {
    "text": "X6 only might take you like few years if you do from scratch but now you see that",
    "start": "915519",
    "end": "921079"
  },
  {
    "text": "you want to do everything not only ex6 and each after teer has many",
    "start": "921079",
    "end": "928199"
  },
  {
    "text": "instruction for example Intel the latest version has like 1,500 instruction you",
    "start": "928199",
    "end": "934480"
  },
  {
    "text": "want to emulate everything it take a lot of time and in action might has many side effects so it's very hard and take",
    "start": "934480",
    "end": "941920"
  },
  {
    "text": "time to properly emulate them and finally we have very limited",
    "start": "941920",
    "end": "949040"
  },
  {
    "text": "resour because unicor started as my personal project I can only do",
    "start": "949040",
    "end": "955600"
  },
  {
    "text": "this in my spare time so you can see that how is it",
    "start": "955600",
    "end": "962360"
  },
  {
    "text": "push next part is a des",
    "start": "962360",
    "end": "966680"
  },
  {
    "text": "Inon hello can you hear me",
    "start": "967720",
    "end": "972839"
  },
  {
    "text": "okay so by now you guys would be already very curious about how we actually um",
    "start": "972839",
    "end": "978759"
  },
  {
    "text": "end up finishing this project not finishing but started up this project to the state is today so I'm going to talk",
    "start": "978759",
    "end": "986000"
  },
  {
    "text": "to you about um our idea and um the challenges when we are building",
    "start": "986000",
    "end": "994240"
  },
  {
    "text": "this so um just to repeat what quing said we want to have all of those um",
    "start": "994240",
    "end": "1002040"
  },
  {
    "text": "wonderful features but we want it fast not like spending years working on it",
    "start": "1002040",
    "end": "1007800"
  },
  {
    "text": "and then we get more just like uh the lip CPU things so luckily we learned a lessons",
    "start": "1007800",
    "end": "1016120"
  },
  {
    "text": "um on um Capstone uh as wings and authors that in order to do this C thing",
    "start": "1016120",
    "end": "1022839"
  },
  {
    "text": "we should stand on the sers of the Zion meanings we should choose some existing",
    "start": "1022839",
    "end": "1028798"
  },
  {
    "text": "um platforms or existing softwares and try to um take advantage of it just like",
    "start": "1028799",
    "end": "1036319"
  },
  {
    "text": "Capstone take advantage of um llvm and the second thing is that we",
    "start": "1036319",
    "end": "1041558"
  },
  {
    "text": "need to open source these things so more people can um get involved and help us",
    "start": "1041559",
    "end": "1048400"
  },
  {
    "text": "to improve the products so we're looking for various",
    "start": "1048400",
    "end": "1055280"
  },
  {
    "text": "places various um emulators existing emulators and something that look like",
    "start": "1055280",
    "end": "1061400"
  },
  {
    "text": "emulators we even think about using Capstone to build this thing because Capstone has a very good disass sampler",
    "start": "1061400",
    "end": "1069320"
  },
  {
    "text": "um but the thing with Capstone that it has um it's lacking of semantics so um",
    "start": "1069320",
    "end": "1075280"
  },
  {
    "text": "it's hard to um you can get instruction out but you need to to understand the instruction what it does like on C Flex",
    "start": "1075280",
    "end": "1082480"
  },
  {
    "text": "it chains um how it access memory and so on so forth and that thing is also um a",
    "start": "1082480",
    "end": "1087919"
  },
  {
    "text": "lot of work so this our idea we use",
    "start": "1087919",
    "end": "1096480"
  },
  {
    "text": "qmu um so for those of you who um don't know about this project um it's a open",
    "start": "1098320",
    "end": "1104360"
  },
  {
    "text": "source project for building a system emulators it's been around for more than",
    "start": "1104360",
    "end": "1109600"
  },
  {
    "text": "10 years with a lot of community involved and it's um this is updated",
    "start": "1109600",
    "end": "1116880"
  },
  {
    "text": "like almost every weeks and as we look at their repository so it's highly active it's",
    "start": "1116880",
    "end": "1124760"
  },
  {
    "text": "support multiple acts so in total we CS is total 18 architectures so it's a huge",
    "start": "1124760",
    "end": "1132480"
  },
  {
    "text": "set of cod if you just run some slot cows in their repositories like few",
    "start": "1132480",
    "end": "1138960"
  },
  {
    "text": "Millions live cods so it's a hug project it's work on multiple platform",
    "start": "1138960",
    "end": "1145360"
  },
  {
    "text": "they build their um um Mac 5 system so that it can compile in Linux can compile",
    "start": "1145360",
    "end": "1151640"
  },
  {
    "text": "in iOS can compile on Windows using cross compiling Tunes so it sounds like",
    "start": "1151640",
    "end": "1157240"
  },
  {
    "text": "a very good candidate um however Kimu as I mentioned",
    "start": "1157240",
    "end": "1165000"
  },
  {
    "text": "is a system emulators it has on capting in there it has um emulation for iOS for",
    "start": "1165000",
    "end": "1174039"
  },
  {
    "text": "peripheral models memory some Hardware you can plug in it have some debuging",
    "start": "1174039",
    "end": "1180440"
  },
  {
    "text": "tunes that are texes and everything's mixed together like spaghetti so um it's quite",
    "start": "1180440",
    "end": "1188320"
  },
  {
    "text": "challenging so why we choose C on those is Sims to be",
    "start": "1188320",
    "end": "1194000"
  },
  {
    "text": "Overkill we see that this have this is the only tune that um have all the",
    "start": "1194000",
    "end": "1201520"
  },
  {
    "text": "features that we need to support all the C architectures and very updated it's already in C so writing Unicon on top of",
    "start": "1201520",
    "end": "1209360"
  },
  {
    "text": "it um is okay um it has chit in their",
    "start": "1209360",
    "end": "1215039"
  },
  {
    "text": "CPU emulator so it's quite fast it's also have optimization on top of so",
    "start": "1215039",
    "end": "1221320"
  },
  {
    "text": "we can make use of them um you know as our feature as well",
    "start": "1221320",
    "end": "1228720"
  },
  {
    "text": "but so are we done can we just like check that thing out and that's it can",
    "start": "1229960",
    "end": "1235720"
  },
  {
    "text": "we just for doors and that's it um the",
    "start": "1235720",
    "end": "1240840"
  },
  {
    "text": "answer is no if you ever work on Capstone at the initial State you",
    "start": "1240840",
    "end": "1245919"
  },
  {
    "text": "understand that um refactoring code and taking out things is a huge problems so",
    "start": "1245919",
    "end": "1252520"
  },
  {
    "text": "we need a lot of um thing to do we need to understand the code and if you look at their CES it's like three million",
    "start": "1252520",
    "end": "1259600"
  },
  {
    "text": "Live code is really difficult so there's def some challenges that we want to",
    "start": "1259600",
    "end": "1266799"
  },
  {
    "text": "solve so uh let me list some of the most challenging um problem that we found",
    "start": "1266840",
    "end": "1273200"
  },
  {
    "text": "while building unicor on top of uh qmu so the first challenge is that as I",
    "start": "1273200",
    "end": "1279320"
  },
  {
    "text": "mentioned qmu code base um is large it has everything in",
    "start": "1279320",
    "end": "1285919"
  },
  {
    "text": "there and the thing that we want is only actually this um",
    "start": "1285919",
    "end": "1292760"
  },
  {
    "text": "little um thread box you can see uh we want the emulator simulator on top it",
    "start": "1292760",
    "end": "1299960"
  },
  {
    "text": "and um some component that can help us to emulate the memory access that is the",
    "start": "1299960",
    "end": "1305600"
  },
  {
    "text": "software mmu so our job is that we want to keep",
    "start": "1305600",
    "end": "1311720"
  },
  {
    "text": "this CPU emulation code and remove everything else we need to understand on",
    "start": "1311720",
    "end": "1316960"
  },
  {
    "text": "the codes and just take out what we need and hopefully the part that remainings is",
    "start": "1316960",
    "end": "1323159"
  },
  {
    "text": "easy to understand and easy to work with um we need to keep to support all",
    "start": "1323159",
    "end": "1329279"
  },
  {
    "text": "the subsystem that they have uh that already um really um integrated deep",
    "start": "1329279",
    "end": "1335400"
  },
  {
    "text": "inside each architectures like the Q objects um it's just like emulating some",
    "start": "1335400",
    "end": "1342559"
  },
  {
    "text": "C++ class and then we need to rewrite some of the components to keep this",
    "start": "1342559",
    "end": "1348679"
  },
  {
    "text": "component code intch why because we want to like update to the",
    "start": "1348679",
    "end": "1355320"
  },
  {
    "text": "Upstream which is C code whenever it release the new versions or like whenever there's a box",
    "start": "1355320",
    "end": "1362000"
  },
  {
    "text": "in Kimu we want to fix it in our code as well and on the on the other hand any",
    "start": "1362000",
    "end": "1368360"
  },
  {
    "text": "bugs that we file in our library we can report upstream and then help them to",
    "start": "1368360",
    "end": "1375440"
  },
  {
    "text": "fix so the Second Challenge that came a set of emulators they have on cap",
    "start": "1376000",
    "end": "1382400"
  },
  {
    "text": "architectures but they compile into individual um uh binary so each binary",
    "start": "1382400",
    "end": "1389080"
  },
  {
    "text": "can only be used to simulate one architectures um this is decided the",
    "start": "1389080",
    "end": "1395760"
  },
  {
    "text": "compile time so after you compile you have no way to emulate um other",
    "start": "1395760",
    "end": "1401000"
  },
  {
    "text": "architectures so what we want is that we have want to have a single um simulators",
    "start": "1401000",
    "end": "1406400"
  },
  {
    "text": "um API framework that can support on cap ARs and uh we should allow uh the user",
    "start": "1406400",
    "end": "1412760"
  },
  {
    "text": "to choose what cap RS they wants in their code um just like Capstone like you just put in the Mac files like I",
    "start": "1412760",
    "end": "1419200"
  },
  {
    "text": "want this x86 only or you want just arm only or you want arm x86 this if you",
    "start": "1419200",
    "end": "1426279"
  },
  {
    "text": "think about it this is um the application is uh very simple like you have just a bunch of bannery you don't",
    "start": "1426279",
    "end": "1432520"
  },
  {
    "text": "know what it does what what kind of artist want to run on you can just run the emulator and on different art and",
    "start": "1432520",
    "end": "1438840"
  },
  {
    "text": "see um what they do on different Arts so we isolated also um because Kimu",
    "start": "1438840",
    "end": "1447000"
  },
  {
    "text": "has only individual binary they reuse the variables everywhere they reuse um",
    "start": "1447000",
    "end": "1453120"
  },
  {
    "text": "data structures everywhere so this is not good because it's not",
    "start": "1453120",
    "end": "1458400"
  },
  {
    "text": "threat safe if you just run multiple instant it just reuse the global State and therefore um you got conflict and so",
    "start": "1458400",
    "end": "1465600"
  },
  {
    "text": "on so we isolate all of this variables structures to ensure our IPI is um",
    "start": "1465600",
    "end": "1473559"
  },
  {
    "text": "threed by Design we also refractors to allow multiple instance um of unicorn at",
    "start": "1473559",
    "end": "1480360"
  },
  {
    "text": "the same time so you can just spawn a lot of threat Runnings um unicorns or uh",
    "start": "1480360",
    "end": "1485720"
  },
  {
    "text": "you can create the different um unicorn inst stand that can emulate for different ARS in the same",
    "start": "1485720",
    "end": "1491480"
  },
  {
    "text": "B also we modify the B system to support multiple ason",
    "start": "1491480",
    "end": "1496600"
  },
  {
    "text": "demands so the the third um challenge is that um Kimu has no",
    "start": "1496600",
    "end": "1503840"
  },
  {
    "text": "instrumentations actually it has instrumentations but is come as a static",
    "start": "1503840",
    "end": "1509559"
  },
  {
    "text": "um static Tunes it means that if you want to instrument some instruction you",
    "start": "1509559",
    "end": "1515279"
  },
  {
    "text": "have to add your code at um compile times you to add your code and then they",
    "start": "1515279",
    "end": "1520480"
  },
  {
    "text": "will compile into the binary and from the binary you can execute your instumentation",
    "start": "1520480",
    "end": "1526000"
  },
  {
    "text": "code and also Che open up optimize um is very bad it's used on the tricks on C",
    "start": "1526000",
    "end": "1532279"
  },
  {
    "text": "tricks it's um cleaning the code is um like do dead code eliminations uh that's",
    "start": "1532279",
    "end": "1538799"
  },
  {
    "text": "kind of things so if we just insert our instructions and then the CH optimization clean it out um we won't be",
    "start": "1538799",
    "end": "1546480"
  },
  {
    "text": "able to work with it so in this aspect we WR our um instrumentation layers from",
    "start": "1546480",
    "end": "1555000"
  },
  {
    "text": "scrap we support like single step um we support instrumenting on memory access",
    "start": "1555000",
    "end": "1560960"
  },
  {
    "text": "like R and dry you can detect whenever memory is R and D and executes your",
    "start": "1560960",
    "end": "1566480"
  },
  {
    "text": "combat we can change the res dynamically at run times um mean emulation run times",
    "start": "1566480",
    "end": "1572799"
  },
  {
    "text": "and we also be able to handle exceptions like interrupt system con like if the if",
    "start": "1572799",
    "end": "1579440"
  },
  {
    "text": "the mware code EV um con some interrupt to execute um system call um the user",
    "start": "1579440",
    "end": "1586840"
  },
  {
    "text": "can capture that and executes um their comb",
    "start": "1586840",
    "end": "1592520"
  },
  {
    "text": "back so the fourth challenge here is that came is licking memory like crazy",
    "start": "1592760",
    "end": "1599200"
  },
  {
    "text": "it's like when we look at a course we say okay this memory was op my locks here but there's no close there's no",
    "start": "1599200",
    "end": "1605640"
  },
  {
    "text": "free so if you just run a simple vanr over kimus there'll be tons of memory",
    "start": "1605640",
    "end": "1611200"
  },
  {
    "text": "lick but this is 54 Tunes as a kimy because you just run it once and then",
    "start": "1611200",
    "end": "1616840"
  },
  {
    "text": "you just close it and that's it um but for for framework we need to fix",
    "start": "1616840",
    "end": "1622520"
  },
  {
    "text": "it um because we want the user to be able to run it multiple times and maybe still uh stay in the memory for a long",
    "start": "1622520",
    "end": "1629039"
  },
  {
    "text": "time and running on demand code that was pass in so we need to fix on this so we",
    "start": "1629039",
    "end": "1634799"
  },
  {
    "text": "we we fix most of it until now and we also refactors on of the subsystem so we",
    "start": "1634799",
    "end": "1640760"
  },
  {
    "text": "can keep track of this pointer from where they allock and clean up um on the",
    "start": "1640760",
    "end": "1646159"
  },
  {
    "text": "lingering pointer when uh we finish so to summarize we F Kimu but we already",
    "start": "1646159",
    "end": "1655919"
  },
  {
    "text": "on Far Beyond it it has become an independent framework is much more um",
    "start": "1655919",
    "end": "1662840"
  },
  {
    "text": "smaller in size so right now we have only two 2 two 200,000 La code compared",
    "start": "1662840",
    "end": "1669840"
  },
  {
    "text": "to few million SL code it's like we in memory we just keep those that we need and we clean up the memory it's threat",
    "start": "1669840",
    "end": "1677240"
  },
  {
    "text": "safe we can use mul Arts the same times it has good interface for instrumentations and we can because it's",
    "start": "1677240",
    "end": "1684519"
  },
  {
    "text": "our on code we can build on top of it is more resistant to",
    "start": "1684519",
    "end": "1689880"
  },
  {
    "text": "exploitations this is more secure so um this is slightly overs say but because",
    "start": "1689880",
    "end": "1696399"
  },
  {
    "text": "what we fig out in practice that um there's a lot of CH exploitations on the",
    "start": "1696399",
    "end": "1702159"
  },
  {
    "text": "CV that we file but one of them is like um is peripheral part the hardware that",
    "start": "1702159",
    "end": "1708919"
  },
  {
    "text": "attached to kuu but the C CPU emulator actually is never exploited and on the",
    "start": "1708919",
    "end": "1714760"
  },
  {
    "text": "other hand because we write as API you can write unit test for each individual components you can write interation test",
    "start": "1714760",
    "end": "1721080"
  },
  {
    "text": "on C test you can f it like furer is on R nowadays so it's very easy to test",
    "start": "1721080",
    "end": "1729120"
  },
  {
    "text": "very test friendly so now I pass back to quen so",
    "start": "1729120",
    "end": "1735559"
  },
  {
    "text": "he can um show you how to write go and unicor okay so unicor we have framework",
    "start": "1735559",
    "end": "1742120"
  },
  {
    "text": "right now you want to view your own application on top of unicorn and we have a set of API",
    "start": "1742120",
    "end": "1749600"
  },
  {
    "text": "provided by newon it's very simple and clean and easy to understand you can see",
    "start": "1749600",
    "end": "1755120"
  },
  {
    "text": "that later and the C unicorn provides IPI in C so with IPI you can open and close",
    "start": "1755120",
    "end": "1763760"
  },
  {
    "text": "unicorn instance you can start and stop emulation you can start emulation and time until it hit some",
    "start": "1763760",
    "end": "1771279"
  },
  {
    "text": "injection you can run until it like some",
    "start": "1771279",
    "end": "1776399"
  },
  {
    "text": "amount of time is uh is happen and or you can run until a",
    "start": "1776399",
    "end": "1783720"
  },
  {
    "text": "certain number injection is is here and API allow you to read and write to",
    "start": "1783720",
    "end": "1789919"
  },
  {
    "text": "memory of the imator it allow you to read and write to",
    "start": "1789919",
    "end": "1795399"
  },
  {
    "text": "registers it has some memory memory management function you can H you can",
    "start": "1795399",
    "end": "1800600"
  },
  {
    "text": "hook memory events so you can find for exle when some invalid memory access",
    "start": "1800600",
    "end": "1806000"
  },
  {
    "text": "happen so you can act accordingly and you has has some API so",
    "start": "1806000",
    "end": "1812640"
  },
  {
    "text": "you can d d dynamically map memory at one time if you want that so can handle",
    "start": "1812640",
    "end": "1817840"
  },
  {
    "text": "an invalid or missing memory and you have some API so you can Define the user conb so you can",
    "start": "1817840",
    "end": "1825799"
  },
  {
    "text": "instrument at instruction level you can do single step you can intercept all memory event read and",
    "start": "1825799",
    "end": "1832679"
  },
  {
    "text": "right and on top of that on top of the C API you build python Bing python Bing is",
    "start": "1832679",
    "end": "1837919"
  },
  {
    "text": "available now you can use that to build your tools so here's one shampo call",
    "start": "1837919",
    "end": "1846240"
  },
  {
    "text": "C I just briefly introduce we have UC open to initialize",
    "start": "1847840",
    "end": "1854760"
  },
  {
    "text": "the engine so here you can see that I want to have an engine for x86 32 bit right",
    "start": "1854760",
    "end": "1865240"
  },
  {
    "text": "later I have another function you see M map to map memory inside the",
    "start": "1865240",
    "end": "1871480"
  },
  {
    "text": "emulator after that you see M right can used to write the code you want toate",
    "start": "1871480",
    "end": "1878559"
  },
  {
    "text": "into that memory you just you just map after that you see R right you can",
    "start": "1878559",
    "end": "1885399"
  },
  {
    "text": "be you can use to right some value to the registor inside your",
    "start": "1885399",
    "end": "1891039"
  },
  {
    "text": "emulator and finally you can start emulation with UC start here for you see",
    "start": "1891039",
    "end": "1897919"
  },
  {
    "text": "that I can R I decide to ulate my",
    "start": "1897919",
    "end": "1903240"
  },
  {
    "text": "Cod of this size and it should run in infinite time and I don't care about",
    "start": "1903240",
    "end": "1910360"
  },
  {
    "text": "number injection run until finish and after that",
    "start": "1910360",
    "end": "1918080"
  },
  {
    "text": "after emu start we finish emulation and after that I print out I read out the",
    "start": "1918159",
    "end": "1924399"
  },
  {
    "text": "own register and print out with UC Rec read PR now later and you have on",
    "start": "1924399",
    "end": "1930880"
  },
  {
    "text": "function to read from memory UC see mem so you can see that I can read from the memory of the",
    "start": "1930880",
    "end": "1938080"
  },
  {
    "text": "emulator okay the same code but written is in Pon",
    "start": "1940760",
    "end": "1946440"
  },
  {
    "text": "which I think much easier shorter easier to understand shorter see see here that",
    "start": "1946440",
    "end": "1953000"
  },
  {
    "text": "I initialize the engine so I open the engine in x86 and 32bit after that I M",
    "start": "1953000",
    "end": "1960919"
  },
  {
    "text": "memory in 2 megab after that I Rise the machine code to be emed to the memory",
    "start": "1960919",
    "end": "1968440"
  },
  {
    "text": "mem after that I set up the resistor here I set up ECX DX",
    "start": "1968440",
    "end": "1976480"
  },
  {
    "text": "regist after that that I run the emulation and this one stop until this",
    "start": "1976480",
    "end": "1982600"
  },
  {
    "text": "arrest is hit finally I read on the resistor out",
    "start": "1982600",
    "end": "1989159"
  },
  {
    "text": "ECX and edx out and print out so you can see how the resistor changed after the",
    "start": "1989159",
    "end": "1995120"
  },
  {
    "text": "emulation and finally I read for memory two bu and prer that's it simple",
    "start": "1995120",
    "end": "2004158"
  },
  {
    "text": "that okay so I have some light demo here so I can see how it",
    "start": "2005360",
    "end": "2012320"
  },
  {
    "text": "works okay says is on simple go in Python you can see that so here the",
    "start": "2030080",
    "end": "2036600"
  },
  {
    "text": "program is that I have one Bunch instruction that I don't know what",
    "start": "2036600",
    "end": "2043080"
  },
  {
    "text": "it does it's from some sh I got on the internet here some bu and other question is how to know",
    "start": "2043080",
    "end": "2051000"
  },
  {
    "text": "what this shell Cod does so the idea is that I use unicor to write this script",
    "start": "2051000",
    "end": "2057118"
  },
  {
    "text": "and here you can see that I did exactly what",
    "start": "2057119",
    "end": "2064280"
  },
  {
    "text": "I show before I initialize my uh emulator in X6",
    "start": "2064280",
    "end": "2070079"
  },
  {
    "text": "32bit M memory in Rise the shell go into",
    "start": "2070079",
    "end": "2076040"
  },
  {
    "text": "memory after that I set up the stack ESP stack resistor to. to somewhere that",
    "start": "2076040",
    "end": "2083919"
  },
  {
    "text": "I already some memor already set up and after that because uh the sh May con",
    "start": "2083919",
    "end": "2090158"
  },
  {
    "text": "some interrupt which in in the Linux case is a interrupt at right so I need",
    "start": "2090159",
    "end": "2096118"
  },
  {
    "text": "to hook the interrupt so I can get notify whenever the shell",
    "start": "2096119",
    "end": "2101200"
  },
  {
    "text": "cone the interrupt so I see what it try to do and after that I I run the",
    "start": "2101200",
    "end": "2108839"
  },
  {
    "text": "emulation so you can see here what",
    "start": "2108839",
    "end": "2114599"
  },
  {
    "text": "my uh interrup hook",
    "start": "2114599",
    "end": "2119320"
  },
  {
    "text": "does so the idea is that when the interupt is gone on Linux the interupt",
    "start": "2119720",
    "end": "2125520"
  },
  {
    "text": "number is 80 and when the inter is called it set up the",
    "start": "2125520",
    "end": "2130880"
  },
  {
    "text": "function for inter for IF function is one that is exit and the function number",
    "start": "2130880",
    "end": "2137240"
  },
  {
    "text": "of the interrup is defin inside the E register so I can when I handle the interupt I read out the E here so when",
    "start": "2137240",
    "end": "2144560"
  },
  {
    "text": "the function is three that is read from sham find the system when the function",
    "start": "2144560",
    "end": "2151200"
  },
  {
    "text": "is four that's Circle try to write something right so now here uh I tell",
    "start": "2151200",
    "end": "2158200"
  },
  {
    "text": "I show you what this uh shle does I run the script I I just show you",
    "start": "2158200",
    "end": "2165240"
  },
  {
    "text": "we try to emulate the Sho see you can see here that this Sho tried",
    "start": "2165240",
    "end": "2173280"
  },
  {
    "text": "to create a circuit nwor circuit and uh connect to",
    "start": "2173280",
    "end": "2178520"
  },
  {
    "text": "somewhere some uh machine somewhere on the internet at this arest 12",
    "start": "2178520",
    "end": "2185200"
  },
  {
    "text": "12711 one at B 1 2 3 4 5 and after that",
    "start": "2185200",
    "end": "2191000"
  },
  {
    "text": "it duplicate the the the handle of this U this circuit and after that this sh go",
    "start": "2191000",
    "end": "2200720"
  },
  {
    "text": "open the ETC password file see and next it did out everything which is",
    "start": "2200720",
    "end": "2207839"
  },
  {
    "text": "64k just I think enough to read everything inside the password file and finally it Rite to",
    "start": "2207839",
    "end": "2215319"
  },
  {
    "text": "the fter which is a circuit which",
    "start": "2215319",
    "end": "2221119"
  },
  {
    "text": "mean z try to write the content of",
    "start": "2221119",
    "end": "2226359"
  },
  {
    "text": "password file to the S and it can send it to somewhere on the internet so in",
    "start": "2226359",
    "end": "2233800"
  },
  {
    "text": "short this uh this sh try to steal the password file and send it to",
    "start": "2233800",
    "end": "2239520"
  },
  {
    "text": "somewhere uh outside the internet and after that it exit so you can see that",
    "start": "2239520",
    "end": "2245079"
  },
  {
    "text": "it's very easy to emulate the sh go and see what he does using a very short and",
    "start": "2245079",
    "end": "2250520"
  },
  {
    "text": "very sh script using p using using Python and um using unicorn like that so",
    "start": "2250520",
    "end": "2257000"
  },
  {
    "text": "you can say that okay I can if I given the same script and the same same binal",
    "start": "2257000",
    "end": "2262319"
  },
  {
    "text": "I can just throw into the Ida Pro and see what this circle does but it's not",
    "start": "2262319",
    "end": "2267400"
  },
  {
    "text": "that simple because if the CLE if the circle is shell modification technique",
    "start": "2267400",
    "end": "2272520"
  },
  {
    "text": "which mean the circle can generate some go around time and excute the the C that is just",
    "start": "2272520",
    "end": "2279839"
  },
  {
    "text": "regenerated you cannot just throw the the shle inside the Ida because Ida only handle the static Anis right you cannot",
    "start": "2279839",
    "end": "2286640"
  },
  {
    "text": "handle shell modation go that's only generated at time but in this case uh",
    "start": "2286640",
    "end": "2293800"
  },
  {
    "text": "Inon works very well because we really emulate the sh go and we run it so we",
    "start": "2293800",
    "end": "2299800"
  },
  {
    "text": "can see what happen at run time so that's the first",
    "start": "2299800",
    "end": "2305040"
  },
  {
    "text": "demote thanks Queen so que asked me to write some um fun things for you guys um",
    "start": "2305040",
    "end": "2312480"
  },
  {
    "text": "because we on live funds so uh the first thing is that um so if you guys ever",
    "start": "2312480",
    "end": "2319280"
  },
  {
    "text": "play CTF uh you you uh already know Defcon so there's",
    "start": "2319280",
    "end": "2324359"
  },
  {
    "text": "um problem in descon named um K queston which ask us to like they provide a b",
    "start": "2324359",
    "end": "2332599"
  },
  {
    "text": "and also the initial state of the register in um x86 forbit and ask us to",
    "start": "2332599",
    "end": "2339359"
  },
  {
    "text": "emulate that code and then return um like the ending um values of H the",
    "start": "2339359",
    "end": "2345400"
  },
  {
    "text": "register at the end of um the runs um so um a lot of teams um play in this",
    "start": "2345400",
    "end": "2352440"
  },
  {
    "text": "Challenge and they have um some pry up I think still have his",
    "start": "2352440",
    "end": "2358599"
  },
  {
    "text": "online so a lot of pry up they just um",
    "start": "2358599",
    "end": "2364119"
  },
  {
    "text": "you know they try to hear in this particular case um they put it in their own",
    "start": "2364119",
    "end": "2371920"
  },
  {
    "text": "assembly code and then compile it in an real X 64bit run that code and print out",
    "start": "2371920",
    "end": "2379240"
  },
  {
    "text": "the results for them so when I play this challenge what I do is I find x86",
    "start": "2379240",
    "end": "2384760"
  },
  {
    "text": "machines I write some GDB script and then you know um I change the r variable",
    "start": "2384760",
    "end": "2392200"
  },
  {
    "text": "during the booking time and then let it run for a while but um during times uh",
    "start": "2392200",
    "end": "2399000"
  },
  {
    "text": "we already starting to use unicorn so I decided to also write um some code in",
    "start": "2399000",
    "end": "2404440"
  },
  {
    "text": "unicor that do the same things um but it's look uh I think it's",
    "start": "2404440",
    "end": "2410079"
  },
  {
    "text": "more um intuitive you just the same thing as queenr we initialize it memory",
    "start": "2410079",
    "end": "2416960"
  },
  {
    "text": "map it um R some register that provided to us by the challenge Draw it to um set",
    "start": "2416960",
    "end": "2424240"
  },
  {
    "text": "up the stacks draw it to our address and then emulate and finally just print out",
    "start": "2424240",
    "end": "2430839"
  },
  {
    "text": "a reg at the end so let's just try run see whether",
    "start": "2430839",
    "end": "2437240"
  },
  {
    "text": "it's really work yeah so it's done it's print out",
    "start": "2437240",
    "end": "2443480"
  },
  {
    "text": "results at the end so this is this first demo this this look like all the consoles is um it's not very intuitive",
    "start": "2443480",
    "end": "2451440"
  },
  {
    "text": "to see so qu also asked me to write some um fun Cotes",
    "start": "2451440",
    "end": "2458599"
  },
  {
    "text": "so we so we we go to the internet and see there's a guys that Dy and emulators",
    "start": "2458599",
    "end": "2466040"
  },
  {
    "text": "in the browsers and try to emulate code in the browser and you know display the",
    "start": "2466040",
    "end": "2471760"
  },
  {
    "text": "things during um you know you can click and then see how the RIS change that's really cool so we just want to make",
    "start": "2471760",
    "end": "2478280"
  },
  {
    "text": "something similar and I just write it up for a couple of days ago and hopefully still",
    "start": "2478280",
    "end": "2484800"
  },
  {
    "text": "work okay so this is the interface we just",
    "start": "2484800",
    "end": "2491520"
  },
  {
    "text": "reuse the interface that enar is Tun that build on top of um Capstone to this",
    "start": "2491520",
    "end": "2497720"
  },
  {
    "text": "assembly so let me put some code in",
    "start": "2497720",
    "end": "2503160"
  },
  {
    "text": "the resolution is bad but you can see that we um we can um dis assemble the",
    "start": "2525440",
    "end": "2531880"
  },
  {
    "text": "code here for you to see what the C is is very simple you just move some values",
    "start": "2531880",
    "end": "2536920"
  },
  {
    "text": "to the resor um move it to the stacks move it back to the rest and then add them",
    "start": "2536920",
    "end": "2544079"
  },
  {
    "text": "together so let me just single step you can see um this instruction move one",
    "start": "2544079",
    "end": "2550720"
  },
  {
    "text": "to um the restor rcx and change here U",
    "start": "2550720",
    "end": "2556160"
  },
  {
    "text": "the RP also um Chang to the next instruction which ro7 as you can see it",
    "start": "2556160",
    "end": "2562200"
  },
  {
    "text": "highlighted and we just emulate",
    "start": "2562200",
    "end": "2566880"
  },
  {
    "text": "emulate and finally it's add um IX and",
    "start": "2567839",
    "end": "2573280"
  },
  {
    "text": "RBX together so you also see um number four here here yes so you can emulate",
    "start": "2573280",
    "end": "2581880"
  },
  {
    "text": "again um you can change the values at run times because it's supported by",
    "start": "2581880",
    "end": "2587160"
  },
  {
    "text": "unicorn for example in this case um RX and ibx um is two so we can just change to",
    "start": "2587160",
    "end": "2597839"
  },
  {
    "text": "something yeah it's maybe it's too",
    "start": "2600319",
    "end": "2605720"
  },
  {
    "text": "easy yeah correct well good so um",
    "start": "2605720",
    "end": "2613240"
  },
  {
    "text": "thanks so we have um a demo with s modifying code as well but",
    "start": "2613240",
    "end": "2619280"
  },
  {
    "text": "um um but I'm not sure we have time so I just quickly saw an um test",
    "start": "2619280",
    "end": "2627480"
  },
  {
    "text": "so so the same code but this is arm architectures just emulate is changing",
    "start": "2640920",
    "end": "2649200"
  },
  {
    "text": "because the PC is always um R15 Plus 8",
    "start": "2649200",
    "end": "2654240"
  },
  {
    "text": "so nice can see it there is a chance it's move 10 to R2 and so on so forth so the",
    "start": "2654240",
    "end": "2662400"
  },
  {
    "text": "same idea work across multiple architectures we can also solve memory",
    "start": "2662400",
    "end": "2667480"
  },
  {
    "text": "here but I'm lack of time so that's it for demo things",
    "start": "2667480",
    "end": "2675319"
  },
  {
    "text": "um so um let me quickly go to the end of the slide and then we go to the",
    "start": "2675319",
    "end": "2681160"
  },
  {
    "text": "questions so right now the start the work is that we support um",
    "start": "2681160",
    "end": "2688119"
  },
  {
    "text": "eight ni architectures yeah seven architectures we have python biing is",
    "start": "2688200",
    "end": "2693599"
  },
  {
    "text": "based on Kimu 2.3 so our future will is that we want to support on the rest of",
    "start": "2693599",
    "end": "2698960"
  },
  {
    "text": "architecture that Kimu support we has spun on how how to move Cod from Kimu to our Cod so this would be fast we want to",
    "start": "2698960",
    "end": "2705920"
  },
  {
    "text": "stripping out more utility cost from Kimu um for example we want to improve",
    "start": "2705920",
    "end": "2711079"
  },
  {
    "text": "the their the sampler maybe there's some integration with Capstone for the one that they support we want more Bings um",
    "start": "2711079",
    "end": "2719000"
  },
  {
    "text": "this is Promised by Community the same way as Capstone um we want to synchronize with",
    "start": "2719000",
    "end": "2724480"
  },
  {
    "text": "2.4 when it's released and the point is that the future of unicor is guaranteed because um people are",
    "start": "2724480",
    "end": "2731680"
  },
  {
    "text": "still working on kuse so in conclusion here's a summary",
    "start": "2731680",
    "end": "2737559"
  },
  {
    "text": "of uh our unicor Frameworks you can read the slide um we serious about committing",
    "start": "2737559",
    "end": "2743800"
  },
  {
    "text": "time to this project and make it the best se you so we hope that after we release um we can have um help from the",
    "start": "2743800",
    "end": "2751640"
  },
  {
    "text": "community just like capson and we we can make this become the best emulator and",
    "start": "2751640",
    "end": "2757119"
  },
  {
    "text": "on the other hand if we make this the best emulator Kimu um also benefit from it they can um we can report Upstream",
    "start": "2757119",
    "end": "2764640"
  },
  {
    "text": "singing this to out code and make it the best system emulators",
    "start": "2764640",
    "end": "2769720"
  },
  {
    "text": "so that's it for",
    "start": "2769720",
    "end": "2774400"
  },
  {
    "text": "um okay so that's any",
    "start": "2774920",
    "end": "2778799"
  },
  {
    "text": "questions yeah",
    "start": "2780000",
    "end": "2784000"
  },
  {
    "text": "uh sorry I cannot hear mixed",
    "start": "2787839",
    "end": "2793119"
  },
  {
    "text": "injuction in M yeah yeah yeah of",
    "start": "2793119",
    "end": "2798440"
  },
  {
    "text": "course so whatever you can run on the physical you can do that inside",
    "start": "2798440",
    "end": "2804759"
  },
  {
    "text": "c yeah so can you hear me yeah yeah okay so um",
    "start": "2806599",
    "end": "2814240"
  },
  {
    "text": "you know how you initialize it with 32 bck 64 a bit what if the shell code is like mix mode oh that's only the initial",
    "start": "2814240",
    "end": "2822240"
  },
  {
    "text": "phase after that you can switch inside this is no problem okay over",
    "start": "2822240",
    "end": "2831079"
  },
  {
    "text": "here yes so uh on your on your M map you don't appear to support memory uh page",
    "start": "2831079",
    "end": "2836839"
  },
  {
    "text": "permissions does uh is it supported do you intend to support it can you generate faults when you try to execute",
    "start": "2836839",
    "end": "2843960"
  },
  {
    "text": "out of a non- execute page and so on yes definitely it's um it's on our gr",
    "start": "2843960",
    "end": "2850160"
  },
  {
    "text": "map that is will be support very soon when we Del this yeah okay this because uh quick Kimu has system for handling",
    "start": "2850160",
    "end": "2857319"
  },
  {
    "text": "permissions we we just use the default one so we can change it okay and what's your process for making sure you stay",
    "start": "2857319",
    "end": "2864119"
  },
  {
    "text": "synchronized with all the qmu changes that that go on you just constantly coming through their patches and pulling",
    "start": "2864119",
    "end": "2869920"
  },
  {
    "text": "them over or how's that work how long do we update uh you mean how long what we",
    "start": "2869920",
    "end": "2875960"
  },
  {
    "text": "update to the uh it should should I think it's it's",
    "start": "2875960",
    "end": "2881160"
  },
  {
    "text": "not very hard so it should take L time to do that",
    "start": "2881160",
    "end": "2887359"
  },
  {
    "text": "okay okay hello okay so how how far are you",
    "start": "2890400",
    "end": "2897960"
  },
  {
    "text": "from uh doing symbolic execution instead of concrete execution the way you're doing it can can you get to a point",
    "start": "2897960",
    "end": "2904119"
  },
  {
    "text": "where where you can just leave a reg undefined and then go through the operations that happened on that",
    "start": "2904119",
    "end": "2911319"
  },
  {
    "text": "register can you repeat question I can hear everything I've seen here uh is",
    "start": "2911319",
    "end": "2916359"
  },
  {
    "text": "concrete execution so you give registers a value and then you run through the binary yes uh do you have in mind uh",
    "start": "2916359",
    "end": "2923400"
  },
  {
    "text": "well do you have any plans to implement some kind of symbolic execution on this so instead of giving it a value just",
    "start": "2923400",
    "end": "2929960"
  },
  {
    "text": "seeing what happens execution oh yeah that should be another project right",
    "start": "2929960",
    "end": "2935520"
  },
  {
    "text": "because this project just focus on CPU emulation so everything else it should be on top that and we don't intend to do",
    "start": "2935520",
    "end": "2942680"
  },
  {
    "text": "that in this project okay it's only about superation but yeah there are a lot of",
    "start": "2942680",
    "end": "2948160"
  },
  {
    "text": "appliation you can be on top with that",
    "start": "2948160",
    "end": "2954640"
  },
  {
    "text": "yeah hello I'm asking about the possible blue pill and red pill blue pill",
    "start": "2957680",
    "end": "2964119"
  },
  {
    "text": "detection and red pill H do you am ulate CPU side effects like as misses",
    "start": "2964119",
    "end": "2970880"
  },
  {
    "text": "performance counters of computation so okay that's a good question because",
    "start": "2970880",
    "end": "2978200"
  },
  {
    "text": "actually now we just take whatever Q does whatever Q has so if Q doesn't do",
    "start": "2978200",
    "end": "2985520"
  },
  {
    "text": "what you want which mean we don't do that but after this pH I think we can",
    "start": "2985520",
    "end": "2990680"
  },
  {
    "text": "look at the problems that can cannot do and see what we should do to improve that on top of that so yeah so far",
    "start": "2990680",
    "end": "2999680"
  },
  {
    "text": "whatever problem you see in CU we also have that but in the future we look",
    "start": "2999680",
    "end": "3005240"
  },
  {
    "text": "forward to improving",
    "start": "3005240",
    "end": "3008319"
  },
  {
    "text": "it hi um do you expose in your API the ability to set the length of the",
    "start": "3010359",
    "end": "3017119"
  },
  {
    "text": "instruction decoding pipeline uh no so so far you can see",
    "start": "3017119",
    "end": "3022960"
  },
  {
    "text": "that um the API is very simple it only allow you to um evate the Cod that's it",
    "start": "3022960",
    "end": "3032160"
  },
  {
    "text": "and we try to keep it very simple and for more complicated things I think you",
    "start": "3032160",
    "end": "3037480"
  },
  {
    "text": "can see how we can extend that but so far maybe not okay thank",
    "start": "3037480",
    "end": "3043960"
  },
  {
    "text": "you but because it should be open source anyway so we can extend it to do",
    "start": "3046040",
    "end": "3051359"
  },
  {
    "text": "whatever you want and if you think that is suitable for for in we can put it",
    "start": "3051359",
    "end": "3057799"
  },
  {
    "text": "back aswi you can f it and do whatever you want any any other",
    "start": "3057799",
    "end": "3065680"
  },
  {
    "text": "questions so the final question is that people can ask where you can get the",
    "start": "3067480",
    "end": "3073000"
  },
  {
    "text": "soci score so the problem is that still we have some issue that you try to fix",
    "start": "3073000",
    "end": "3078400"
  },
  {
    "text": "now so we want to play unicorn just contact us so if officially",
    "start": "3078400",
    "end": "3086119"
  },
  {
    "text": "open beta test for today so if you can help if you can go you want to test",
    "start": "3086119",
    "end": "3092640"
  },
  {
    "text": "contact us uh in those address on the screen and uh we we we get back to you",
    "start": "3092640",
    "end": "3099280"
  },
  {
    "text": "and after the beta test F finished we officially release everything to the",
    "start": "3099280",
    "end": "3106119"
  },
  {
    "text": "public and this license of inor will be in",
    "start": "3106119",
    "end": "3111040"
  },
  {
    "text": "zpl I think that's it for presentation thank you very",
    "start": "3114680",
    "end": "3120040"
  },
  {
    "text": "much thank you you can stay for us as question if you like",
    "start": "3120839",
    "end": "3127880"
  }
]