[
  {
    "text": "uh hello everyone my nickname is Wick V and I'm excited to share my research",
    "start": "2879",
    "end": "8360"
  },
  {
    "text": "finding with you all uh let's dive into our topic un building the cracks in",
    "start": "8360",
    "end": "13639"
  },
  {
    "text": "virtualization mastering the host system Das whenw workstation",
    "start": "13639",
    "end": "19840"
  },
  {
    "text": "Escape first let me introduce myself uh here is my Twitter account I'm from",
    "start": "19840",
    "end": "26560"
  },
  {
    "text": "cyber kunun a company with several worldclass security researchers I mainly F I mainly focus on",
    "start": "26560",
    "end": "33920"
  },
  {
    "text": "binary security research I completed whenw workstation Escape three times in",
    "start": "33920",
    "end": "39360"
  },
  {
    "text": "the competition of T cup I ranked in top three of msrc leader board for Q3 Q4",
    "start": "39360",
    "end": "47320"
  },
  {
    "text": "last year and also I'm the second top two of this year",
    "start": "47320",
    "end": "53199"
  },
  {
    "text": "q1 uh I also shared my security research at zerom and hit B in 2021 one I",
    "start": "53199",
    "end": "60680"
  },
  {
    "text": "completed a hyperv Escape uh in addition of security uh",
    "start": "60680",
    "end": "67439"
  },
  {
    "text": "work work station security research I also found several well-known products in uh I also found several critical or",
    "start": "67439",
    "end": "75640"
  },
  {
    "text": "important Security boxs in several well-known",
    "start": "75640",
    "end": "81280"
  },
  {
    "text": "products now let's Briefly summarize the topics we will cover first I will",
    "start": "81280",
    "end": "87159"
  },
  {
    "text": "introduce some basic information about virtual ization to help those who haven't encountered virtualization",
    "start": "87159",
    "end": "94360"
  },
  {
    "text": "Escape before next I will discuss historic box in",
    "start": "94360",
    "end": "100560"
  },
  {
    "text": "uhci and both discovered by others and by me after that I will use two",
    "start": "100560",
    "end": "107640"
  },
  {
    "text": "vulnerabilities I used at 10th cup 2023 as a case study to explain how to",
    "start": "107640",
    "end": "114680"
  },
  {
    "text": "exploit virtualization Escape finally I will summarize my",
    "start": "114680",
    "end": "120360"
  },
  {
    "text": "content to reinforce your understanding let's get started part one virtualization basic",
    "start": "120360",
    "end": "129720"
  },
  {
    "text": "info when it comes to virtualization Escape there are three key",
    "start": "129720",
    "end": "134840"
  },
  {
    "text": "questions uh we need to understand first how is the virtual machine",
    "start": "134840",
    "end": "140680"
  },
  {
    "text": "constructed next how is data transmitted between the guest system and the virtual",
    "start": "140680",
    "end": "147280"
  },
  {
    "text": "device then what is rization escape to address these questions one by one uh",
    "start": "147280",
    "end": "155160"
  },
  {
    "text": "let's start with the first question how is virtual machine constructed a virtual machine typically consists of a",
    "start": "155160",
    "end": "162120"
  },
  {
    "text": "hypervisor and uh many virtual Hardware devices uh for whenw workstation a part",
    "start": "162120",
    "end": "169800"
  },
  {
    "text": "of of its hypervisor is run in the kernel and some parts are wrong in the",
    "start": "169800",
    "end": "176040"
  },
  {
    "text": "user mode process most of its virtual Hardware devices are implemented in the",
    "start": "176040",
    "end": "181599"
  },
  {
    "text": "same user mode process so this diagram illustrates the",
    "start": "181599",
    "end": "187000"
  },
  {
    "text": "software architecture of when we're workstation we can see a hypervisor with",
    "start": "187000",
    "end": "193000"
  },
  {
    "text": "a multiple of virtual Hardware devices here the focus of our discussion today",
    "start": "193000",
    "end": "199080"
  },
  {
    "text": "is the USB controller next let's address the second",
    "start": "199080",
    "end": "206640"
  },
  {
    "text": "question how is data transmitted between the GU system and the virtual Hardware",
    "start": "206640",
    "end": "214480"
  },
  {
    "text": "devices one there are two methods one is by directly reading and writing guest's",
    "start": "214480",
    "end": "221000"
  },
  {
    "text": "physical memory the other is through I operations here let's n the first",
    "start": "221000",
    "end": "229879"
  },
  {
    "text": "method the entire guest physical memory is mapped as a segment of virtual memory",
    "start": "229879",
    "end": "236920"
  },
  {
    "text": "space of WX process guest virtual address short for gva is",
    "start": "236920",
    "end": "244799"
  },
  {
    "text": "the address needed by programs in the guest virtual guest virtual machine in",
    "start": "244799",
    "end": "250799"
  },
  {
    "text": "guest programs use gva assess its physical memory before being passed to",
    "start": "250799",
    "end": "258000"
  },
  {
    "text": "vmx process we need to get the guess physical address of",
    "start": "258000",
    "end": "265360"
  },
  {
    "text": "GV in the vmx process it use host a process virtual",
    "start": "265360",
    "end": "271919"
  },
  {
    "text": "address short for HV or GPA to assess guest guest with physical",
    "start": "271919",
    "end": "279120"
  },
  {
    "text": "memory the process of converting GPA to hva is complemented in the wmx",
    "start": "279120",
    "end": "286960"
  },
  {
    "text": "process and guest guest system and wex process can assess the same memory at",
    "start": "286960",
    "end": "294080"
  },
  {
    "text": "the same time this is really important our operation is the second",
    "start": "294080",
    "end": "301880"
  },
  {
    "text": "method basically almost all virtual Hardware devices are implemented in the",
    "start": "301880",
    "end": "307160"
  },
  {
    "text": "user mode process so the interaction between the guest system and the virtual",
    "start": "307160",
    "end": "312639"
  },
  {
    "text": "Hardware devices is an interaction with the wmx",
    "start": "312639",
    "end": "317759"
  },
  {
    "text": "process they can directly transfer data through I ports and I memory for I ports",
    "start": "317759",
    "end": "325080"
  },
  {
    "text": "these CPU instructions are used for I memory it can be mapped to guest the",
    "start": "325080",
    "end": "331080"
  },
  {
    "text": "virtual address for directly read and write in guest",
    "start": "331080",
    "end": "336720"
  },
  {
    "text": "system our operations are fast but transfer less data so for large data the",
    "start": "336720",
    "end": "343360"
  },
  {
    "text": "address converion operation from the previous page is generally",
    "start": "343360",
    "end": "349160"
  },
  {
    "text": "used next let's tangle the last question what is virtualization scape let's make",
    "start": "350000",
    "end": "356199"
  },
  {
    "text": "a comparison with remote code execution virtualization escape and remote code",
    "start": "356199",
    "end": "362840"
  },
  {
    "text": "execution have many similarities in the exploitation of remote code execution attacker sends",
    "start": "362840",
    "end": "370720"
  },
  {
    "text": "data to the server and crack a structure of server process then get leak data",
    "start": "370720",
    "end": "378479"
  },
  {
    "text": "from receiving messages over Network then it sends another data to",
    "start": "378479",
    "end": "384880"
  },
  {
    "text": "server and control server process IP then run R to get code",
    "start": "384880",
    "end": "392440"
  },
  {
    "text": "execution so for virtualization escape the the most difference is our",
    "start": "392440",
    "end": "399039"
  },
  {
    "text": "transmission is uh our transmission of messages is facilitated through the",
    "start": "399039",
    "end": "405440"
  },
  {
    "text": "guest physical memory and I",
    "start": "405440",
    "end": "410360"
  },
  {
    "text": "operation so to complete a virtualization Escape arbitr address",
    "start": "411560",
    "end": "417759"
  },
  {
    "text": "read and write are often",
    "start": "417759",
    "end": "422120"
  },
  {
    "text": "required after addressing the key questions let's begin to explore USB controller so far whenw has implemented",
    "start": "422840",
    "end": "430720"
  },
  {
    "text": "three USB controller USB one series known as UHC USB 2.0 known as ehci usb3",
    "start": "430720",
    "end": "439840"
  },
  {
    "text": "series known as xhci perhaps in the future we can see the implementation of",
    "start": "439840",
    "end": "445479"
  },
  {
    "text": "ucp4 series uh these are some public known",
    "start": "445479",
    "end": "451360"
  },
  {
    "text": "numbers for whenw that can be escaped so interested parties can look into them",
    "start": "451360",
    "end": "459479"
  },
  {
    "text": "later this slide shows the device information of xhci and uhci in a Linux",
    "start": "459800",
    "end": "466879"
  },
  {
    "text": "virtual machine as you can see xhci use IO memory for data transmitting while",
    "start": "466879",
    "end": "475199"
  },
  {
    "text": "iort while uhci use iort 20c",
    "start": "475199",
    "end": "481440"
  },
  {
    "text": "Z this is the device relationship diagram of the uhci controller the uhci",
    "start": "481919",
    "end": "488360"
  },
  {
    "text": "controller has two default ports when a device is connected to one port a hub is",
    "start": "488360",
    "end": "495479"
  },
  {
    "text": "needed to expand for new USB devices this is a USB architecture",
    "start": "495479",
    "end": "503800"
  },
  {
    "text": "diagram in uh when we workstation installed Windows 10 GU system",
    "start": "503800",
    "end": "510240"
  },
  {
    "text": "by default a virtual Bluetooth and a virtual USB hub are mounted under your",
    "start": "510240",
    "end": "516039"
  },
  {
    "text": "HCI a virtual bluetoo a virtual USB mouse is mounted under",
    "start": "516039",
    "end": "522518"
  },
  {
    "text": "xhci so uh and there is no device mounted under ehci and uh specifically virtual",
    "start": "522519",
    "end": "530440"
  },
  {
    "text": "Bluetooth required host enable Bluetooth so if you are doing research",
    "start": "530440",
    "end": "537200"
  },
  {
    "text": "on a desktop you may may not find my box",
    "start": "537200",
    "end": "542480"
  },
  {
    "text": "in the further",
    "start": "542480",
    "end": "546199"
  },
  {
    "text": "presentation and if we reject xhci in",
    "start": "548079",
    "end": "553640"
  },
  {
    "text": "the guas system the USB mouse will be mounted under USB",
    "start": "553640",
    "end": "561480"
  },
  {
    "text": "hub here is the relationship diagram of message structure transmitted to the",
    "start": "565760",
    "end": "572160"
  },
  {
    "text": "uhci controller the device driver passes the guest physical address of frame list",
    "start": "572160",
    "end": "580640"
  },
  {
    "text": "to the virtual device through ey operations",
    "start": "580640",
    "end": "585880"
  },
  {
    "text": "the uh the device uh the frame list is the area each member stores the guess",
    "start": "585880",
    "end": "593880"
  },
  {
    "text": "physical address of first Q structure the Q structure has two G GPA",
    "start": "593880",
    "end": "600720"
  },
  {
    "text": "addresses uh pointing to the next q structure or TD structure the last two",
    "start": "600720",
    "end": "607040"
  },
  {
    "text": "bits indicates whether GPA points to a qh or",
    "start": "607040",
    "end": "614560"
  },
  {
    "text": "TD if the GPA is zero and the last bit is one it means this is the end of the",
    "start": "614560",
    "end": "621920"
  },
  {
    "text": "list the TD structure first four bytes is a gpa2 in points to the next TD",
    "start": "621920",
    "end": "628800"
  },
  {
    "text": "structure and the rest of TD structure are data here is a simple example of a TD",
    "start": "628800",
    "end": "636680"
  },
  {
    "text": "structure DML log is a function to allocate continuous physical",
    "start": "636680",
    "end": "643200"
  },
  {
    "text": "memory that returns gva to TD and",
    "start": "643200",
    "end": "648839"
  },
  {
    "text": "assigns gets the physical address to the second parameter the frame list array stores",
    "start": "648839",
    "end": "655480"
  },
  {
    "text": "the GPA of TD structure and sets the last bit to one",
    "start": "655480",
    "end": "661079"
  },
  {
    "text": "here is the TD structure the TD structure first integer is set to",
    "start": "661079",
    "end": "667680"
  },
  {
    "text": "one it means this is the last TD structure and here it sets divice ID end",
    "start": "667680",
    "end": "675160"
  },
  {
    "text": "point ID lens of extra buffer and the TD structures type through bit shifting",
    "start": "675160",
    "end": "682160"
  },
  {
    "text": "operation and it sets the last uh integer with buffer of GPA a",
    "start": "682160",
    "end": "690560"
  },
  {
    "text": "GPA of buffer so when we start to explore a",
    "start": "690560",
    "end": "699320"
  },
  {
    "text": "Target we usually Begin by understanding its architecture and its",
    "start": "699320",
    "end": "704360"
  },
  {
    "text": "implementation now that we have already understood its architecture I will take",
    "start": "704360",
    "end": "709600"
  },
  {
    "text": "everyone near historic bu inspired by this historic bu I find a way to bypass",
    "start": "709600",
    "end": "716680"
  },
  {
    "text": "some restriction and uh create a new bug after further exploration I find",
    "start": "716680",
    "end": "724240"
  },
  {
    "text": "more bus here let me introduce a historic bu",
    "start": "724240",
    "end": "731839"
  },
  {
    "text": "CV 2019 5519 it's a time of check time of use bu it was found byat and Richard",
    "start": "731839",
    "end": "739279"
  },
  {
    "text": "Drew they used they us it at p on the purple area is a d map structure",
    "start": "739279",
    "end": "747279"
  },
  {
    "text": "in vmx process it stores the hvv of TD",
    "start": "747279",
    "end": "753399"
  },
  {
    "text": "structure in the uhcs thread it reads the lens field of TD structure by H and",
    "start": "753399",
    "end": "762120"
  },
  {
    "text": "calculates the total length of TT of TD structures then it allocates urb",
    "start": "762120",
    "end": "769600"
  },
  {
    "text": "structure by count lens and uh read the lens field of ttic structure by hva",
    "start": "769600",
    "end": "777720"
  },
  {
    "text": "again so the SG thread is the implementation of",
    "start": "777720",
    "end": "782800"
  },
  {
    "text": "virtual graphics card in wex process it can assess gu physical memory at the",
    "start": "782800",
    "end": "789079"
  },
  {
    "text": "same time if we use SG threat to modify the lens field of TD structure at the",
    "start": "789079",
    "end": "796880"
  },
  {
    "text": "same time then after the uhci thread has finished counting",
    "start": "796880",
    "end": "804399"
  },
  {
    "text": "lens it uh when the UHS thread assess the TD structure structure second time",
    "start": "804399",
    "end": "811240"
  },
  {
    "text": "it will read the modified lens so we cuse a heap",
    "start": "811240",
    "end": "817760"
  },
  {
    "text": "overflow so after analyzing their buxs I start to reproduce their box and do more",
    "start": "818760",
    "end": "826040"
  },
  {
    "text": "review of uhci inspired by them I realized I could",
    "start": "826040",
    "end": "832399"
  },
  {
    "text": "bypass a restriction and create a new one bit let's see how I did",
    "start": "832399",
    "end": "839440"
  },
  {
    "text": "line one to three is a while loop line two is a while loop two if this function",
    "start": "839440",
    "end": "845000"
  },
  {
    "text": "return returns non z r it will increase variable I and continue the loop here is",
    "start": "845000",
    "end": "852240"
  },
  {
    "text": "the implementation of that function first the it gets frame index",
    "start": "852240",
    "end": "858880"
  },
  {
    "text": "by frame star field and the parameter index then it reads the first Q",
    "start": "858880",
    "end": "866680"
  },
  {
    "text": "structures GPA by reading get physical memory then it sets the return value R",
    "start": "866680",
    "end": "875639"
  },
  {
    "text": "by frame index value here is the while",
    "start": "875639",
    "end": "880720"
  },
  {
    "text": "loop it gets the DMM map structure by",
    "start": "880720",
    "end": "886440"
  },
  {
    "text": "GPA if the GPA has been converted before this condition will hold so it will skip",
    "start": "886440",
    "end": "893839"
  },
  {
    "text": "the further operations here it gets the the endpoint",
    "start": "893839",
    "end": "899639"
  },
  {
    "text": "structure by device ID and endpoint ID of TD structure if endpoint structure",
    "start": "899639",
    "end": "906320"
  },
  {
    "text": "type is one it will allocate an ARA to store each TD structures data and it use",
    "start": "906320",
    "end": "914440"
  },
  {
    "text": "parameter index as are index here if index is smaller than 4 Z",
    "start": "914440",
    "end": "921360"
  },
  {
    "text": "or 4 z z it will set red to one so it's obviously when the index is",
    "start": "921360",
    "end": "929319"
  },
  {
    "text": "smaller than 4 this while loop will not",
    "start": "929319",
    "end": "934759"
  },
  {
    "text": "stop when the index reach to four 4 z z",
    "start": "934759",
    "end": "940680"
  },
  {
    "text": "if we set frame start to 3 FF the frame index will be 3 FF",
    "start": "940680",
    "end": "950040"
  },
  {
    "text": "again this condition will hold so the rate will be",
    "start": "950040",
    "end": "955560"
  },
  {
    "text": "one however because frame index start repeat so the frame list the GPA of",
    "start": "955560",
    "end": "962639"
  },
  {
    "text": "frame list will start repeat and this condition will hold it will skip further",
    "start": "962639",
    "end": "968880"
  },
  {
    "text": "operations so we can't overflow map",
    "start": "968880",
    "end": "974000"
  },
  {
    "text": "area so if we compete to modify the value of frame",
    "start": "975759",
    "end": "983600"
  },
  {
    "text": "list then it will get different value at a second time so we can overflow map",
    "start": "983600",
    "end": "991720"
  },
  {
    "text": "area now because this restrict will not",
    "start": "991720",
    "end": "999839"
  },
  {
    "text": "hold so in the f one ability research we discovered an information leak in",
    "start": "1000639",
    "end": "1008279"
  },
  {
    "text": "2021 where we're going to use it at 10 Cup 2022",
    "start": "1008279",
    "end": "1013759"
  },
  {
    "text": "however uh the competition was postponed and cancelled",
    "start": "1013759",
    "end": "1019480"
  },
  {
    "text": "and at p on 2023 star laabs use it so it was patched",
    "start": "1019480",
    "end": "1027558"
  },
  {
    "text": "what a Pity all right let's see what the bu is here is the urb structure the C",
    "start": "1027559",
    "end": "1038000"
  },
  {
    "text": "field in uh indicates that the size of data the guest can read from urb's",
    "start": "1038000",
    "end": "1046000"
  },
  {
    "text": "buffer and the this field is pointing to the buffer with some",
    "start": "1046000",
    "end": "1053639"
  },
  {
    "text": "ofet the urp structure is allocated through this function and the buffer size is decided",
    "start": "1054240",
    "end": "1062919"
  },
  {
    "text": "by this parameter the U structure is allocated by Malo so the information of",
    "start": "1062919",
    "end": "1069799"
  },
  {
    "text": "U buffer is not initialized here is the",
    "start": "1069799",
    "end": "1076480"
  },
  {
    "text": "function TD structure is is being get out from the map area if TD structures",
    "start": "1076480",
    "end": "1084200"
  },
  {
    "text": "type is set up and U has not been allocated it will allocate a u structure",
    "start": "1084200",
    "end": "1091720"
  },
  {
    "text": "with controllable size and set size to the count L count size field the count",
    "start": "1091720",
    "end": "1098600"
  },
  {
    "text": "size field is a field here if TD structure type is output it will copy",
    "start": "1098600",
    "end": "1106080"
  },
  {
    "text": "data from extra buffer of TD structure CH the urb's buffer if TD structures type is input it",
    "start": "1106080",
    "end": "1114720"
  },
  {
    "text": "will do nothing so if all TD structures type is",
    "start": "1114720",
    "end": "1120600"
  },
  {
    "text": "input except for the first one then TD structures buffer will not",
    "start": "1120600",
    "end": "1127720"
  },
  {
    "text": "be initialized at all in the first",
    "start": "1127720",
    "end": "1133039"
  },
  {
    "text": "operation the virtual Bluetooth device process the U structure and it assigns",
    "start": "1133039",
    "end": "1140039"
  },
  {
    "text": "the value of a field to the C field directly and it won't change it in the",
    "start": "1140039",
    "end": "1146360"
  },
  {
    "text": "further operations so the guest can read and",
    "start": "1146360",
    "end": "1151640"
  },
  {
    "text": "initialize the memory from U's buffer and here is a patch they add",
    "start": "1151640",
    "end": "1160200"
  },
  {
    "text": "codes Under This operations they set number eight to see field for spe",
    "start": "1160200",
    "end": "1167720"
  },
  {
    "text": "specific the conditions and it's obviously they don't understand",
    "start": "1167720",
    "end": "1175799"
  },
  {
    "text": "what is wrong this should reset the memory of yourb",
    "start": "1175799",
    "end": "1181720"
  },
  {
    "text": "buffer so we can trick this B in the virtual",
    "start": "1181720",
    "end": "1186840"
  },
  {
    "text": "Mouse device and I use it at T cup",
    "start": "1186840",
    "end": "1192360"
  },
  {
    "text": "2023 so after discovering so many bugs I filled certain that there must be more",
    "start": "1194200",
    "end": "1200600"
  },
  {
    "text": "bugs in this module and uh uping that it was possible",
    "start": "1200600",
    "end": "1207720"
  },
  {
    "text": "to remove xhci withing the guest I found this",
    "start": "1207720",
    "end": "1214799"
  },
  {
    "text": "bug it's a UF bu in this function itth takes out the",
    "start": "1214799",
    "end": "1222400"
  },
  {
    "text": "next pointer from uhci main structures link if it's not the beginning of the",
    "start": "1222400",
    "end": "1229919"
  },
  {
    "text": "link it gets the endpoint structure by substracting variable next then it",
    "start": "1229919",
    "end": "1236400"
  },
  {
    "text": "obtains the next member of the link later it handles the control type",
    "start": "1236400",
    "end": "1242520"
  },
  {
    "text": "end point in the further operations in the implementation of virtual Hub it can reset the devices",
    "start": "1242520",
    "end": "1251440"
  },
  {
    "text": "mounted under it the reset operation will free all endpoint structures of",
    "start": "1251440",
    "end": "1259240"
  },
  {
    "text": "mounted devices and reapply a new control endpoint structure to",
    "start": "1259240",
    "end": "1266080"
  },
  {
    "text": "it uh remember the basic UHC architecture we mentioned before when we",
    "start": "1266760",
    "end": "1274000"
  },
  {
    "text": "remove xhci a virtual Mouse is mounted under",
    "start": "1274000",
    "end": "1279360"
  },
  {
    "text": "USB hub so if the endpoint here is the",
    "start": "1279360",
    "end": "1285440"
  },
  {
    "text": "control endpoint of virtual Hub and the next is the ENT point of virtual",
    "start": "1285440",
    "end": "1292120"
  },
  {
    "text": "Mouse if we reset the mounted devices of",
    "start": "1292120",
    "end": "1297520"
  },
  {
    "text": "virtual Hub in the further operation the end point of mouse will be",
    "start": "1297520",
    "end": "1304520"
  },
  {
    "text": "fre so the Reel NEX will become a dangling",
    "start": "1304520",
    "end": "1309679"
  },
  {
    "text": "pointer thus we we caus an uaf",
    "start": "1309679",
    "end": "1315880"
  },
  {
    "text": "bu so after finding us for bugs how should we exploit it through",
    "start": "1315919",
    "end": "1323039"
  },
  {
    "text": "this practical example you must be able to exploit bugs more",
    "start": "1323039",
    "end": "1329399"
  },
  {
    "text": "smoothly in white paper what stri out when where the mention the component for",
    "start": "1330080",
    "end": "1335360"
  },
  {
    "text": "exploiting vulnerabilities in the SJ device there's a surface structure a surface combind to",
    "start": "1335360",
    "end": "1343520"
  },
  {
    "text": "a mob structure and the mob structure saves the hway of",
    "start": "1343520",
    "end": "1351039"
  },
  {
    "text": "GPA in addition the surface can bind to a backend structor too and the backend",
    "start": "1351039",
    "end": "1357200"
  },
  {
    "text": "structure can apply a backend Hep if we let the back Heap and backend",
    "start": "1357200",
    "end": "1365240"
  },
  {
    "text": "structure into a same lfh segment if the back hip can overflow",
    "start": "1365240",
    "end": "1372320"
  },
  {
    "text": "right if we are lucky we can overflow the backend structure and change the",
    "start": "1372320",
    "end": "1378039"
  },
  {
    "text": "pointer of backend hip so through SJ",
    "start": "1378039",
    "end": "1383120"
  },
  {
    "text": "commment it's possible to copy data between two surface so we have the ability to read",
    "start": "1383120",
    "end": "1390559"
  },
  {
    "text": "and write arbitary of wmx process",
    "start": "1390559",
    "end": "1397039"
  },
  {
    "text": "heap if we want to use this component we just need to find a bug that can",
    "start": "1397640",
    "end": "1403840"
  },
  {
    "text": "construct an auto bounds right the bad news that this method is",
    "start": "1403840",
    "end": "1411360"
  },
  {
    "text": "no long no longer effective because the official saw their report so they put",
    "start": "1411360",
    "end": "1418039"
  },
  {
    "text": "the backend structure into another process named MKS s box so this method",
    "start": "1418039",
    "end": "1424679"
  },
  {
    "text": "is not valid again in my speech break out script of",
    "start": "1424679",
    "end": "1431840"
  },
  {
    "text": "West world we propos a new method if the converging size of mob is",
    "start": "1431840",
    "end": "1439200"
  },
  {
    "text": "1,000 when the mobile tries to convert GPA to HV if the converion fails it will",
    "start": "1439200",
    "end": "1447279"
  },
  {
    "text": "apply a hep with size 1,000 as",
    "start": "1447279",
    "end": "1452640"
  },
  {
    "text": "H through SJ commments it's possible to copy data between two mobs",
    "start": "1452640",
    "end": "1460039"
  },
  {
    "text": "so we have the same ability again if we exploit the one bit to",
    "start": "1460039",
    "end": "1466440"
  },
  {
    "text": "overflow the lens field of surface then we can out the BNS read and",
    "start": "1466440",
    "end": "1473480"
  },
  {
    "text": "write this Hep with some memory",
    "start": "1473480",
    "end": "1479279"
  },
  {
    "text": "arrangement we can overflow more of structure and CH change the hva value so",
    "start": "1479279",
    "end": "1487880"
  },
  {
    "text": "we can achieve arit address read and write again and of course we can overflow mob",
    "start": "1487880",
    "end": "1495000"
  },
  {
    "text": "structure directly because we don't know we don't know and address a wmx process",
    "start": "1495000",
    "end": "1503559"
  },
  {
    "text": "related unless you have a information",
    "start": "1503559",
    "end": "1508000"
  },
  {
    "text": "leak however this method also be blocked in when were workstation 17 they no",
    "start": "1509039",
    "end": "1515080"
  },
  {
    "text": "longer apply for oneone Hep for the mob structure and the mob structure was also put into a large Vector making making it",
    "start": "1515080",
    "end": "1524279"
  },
  {
    "text": "more hard to modify for I finally find a way to achieve arbitr",
    "start": "1524279",
    "end": "1531720"
  },
  {
    "text": "address writing which is in the function of uhci for reading data from urb I cut down",
    "start": "1531720",
    "end": "1539360"
  },
  {
    "text": "unimportant codes A2 is the endpoint structure the first gets the urb",
    "start": "1539360",
    "end": "1547279"
  },
  {
    "text": "structure then gets the endpoint structure again from the urb structure later it gets a pointer from",
    "start": "1547279",
    "end": "1556000"
  },
  {
    "text": "the endpoint structure and gets a value from V8 if this condition is okay a four",
    "start": "1556000",
    "end": "1564279"
  },
  {
    "text": "byte assignment will follow so if we can control an endpoint",
    "start": "1564279",
    "end": "1570880"
  },
  {
    "text": "structure or urb structure we can fake V8 then we can achieve arrate address",
    "start": "1570880",
    "end": "1579520"
  },
  {
    "text": "right the drawback is we must know the value of Target address because of this",
    "start": "1579520",
    "end": "1587840"
  },
  {
    "text": "condition the good news is that I have one information leak and through uaf I can",
    "start": "1587840",
    "end": "1595840"
  },
  {
    "text": "control endpoint structure so with the idea and the vulnerability let's start the",
    "start": "1595840",
    "end": "1603799"
  },
  {
    "text": "exploitation in this picture we use SJ Shader structure to do Heap spray and we",
    "start": "1605159",
    "end": "1613000"
  },
  {
    "text": "leave a gap for normal urb structure and put a gap in front of the normal",
    "start": "1613000",
    "end": "1620360"
  },
  {
    "text": "urb then we fre normal urb and the Gap",
    "start": "1620360",
    "end": "1626039"
  },
  {
    "text": "structure so they will merge after that we apply for Mouse urb",
    "start": "1626039",
    "end": "1634320"
  },
  {
    "text": "again making it just right to apply to the merg",
    "start": "1634320",
    "end": "1639799"
  },
  {
    "text": "memory so with the leaking back we can leak the UN initialized memory of mouse",
    "start": "1639799",
    "end": "1647840"
  },
  {
    "text": "you B so we can leak the normal urb structures data then we can get a urb",
    "start": "1647840",
    "end": "1656799"
  },
  {
    "text": "hep related address by this field and the wmx process related address by this",
    "start": "1656799",
    "end": "1665799"
  },
  {
    "text": "field because endpoint structure is a dangling pointer and belongs to the lfh",
    "start": "1667279",
    "end": "1673440"
  },
  {
    "text": "Hep I compete to modify the value of end point The Illustrated method first",
    "start": "1673440",
    "end": "1681559"
  },
  {
    "text": "extend the size of lfh segment to the maximum which is 41",
    "start": "1681559",
    "end": "1688799"
  },
  {
    "text": "ff0 then prepare as many virtual Hub control comments as",
    "start": "1688799",
    "end": "1695039"
  },
  {
    "text": "possible each command resetting the endpoint structure of virtual",
    "start": "1695039",
    "end": "1702120"
  },
  {
    "text": "Mouse we use this way to expand the competition time Gap",
    "start": "1702120",
    "end": "1708880"
  },
  {
    "text": "at the same time we use SVG thread to submit commments to allocate and release",
    "start": "1708880",
    "end": "1716080"
  },
  {
    "text": "the same size Hep in this way when the uhcs",
    "start": "1716080",
    "end": "1722080"
  },
  {
    "text": "thread assess the dangling pointer it's likely to point to the endpoint",
    "start": "1722080",
    "end": "1728000"
  },
  {
    "text": "structure that we control thus we can achieve up",
    "start": "1728000",
    "end": "1734480"
  },
  {
    "text": "right the failure possibility of this step is one in",
    "start": "1734480",
    "end": "1739600"
  },
  {
    "text": "40 because the lfh",
    "start": "1739600",
    "end": "1744320"
  },
  {
    "text": "feature so with arbitr writing we modify the current buff field of urb structure",
    "start": "1745159",
    "end": "1755279"
  },
  {
    "text": "let it point to the Mob table the mob the mob Table stores the mob structures",
    "start": "1755279",
    "end": "1763799"
  },
  {
    "text": "pointer and once again we use UF buug modify the mob",
    "start": "1763799",
    "end": "1770640"
  },
  {
    "text": "table uh here why we we let it point to mob",
    "start": "1770640",
    "end": "1776120"
  },
  {
    "text": "table because the arit writing need to know the value of Target",
    "start": "1776120",
    "end": "1781840"
  },
  {
    "text": "address uh then here uh we once again we use UF vity modify the mob table to",
    "start": "1781840",
    "end": "1790159"
  },
  {
    "text": "point to SG Global buffer M table is that uh now we can",
    "start": "1790159",
    "end": "1798159"
  },
  {
    "text": "modify the content of SJ Global buffers so SJ",
    "start": "1798159",
    "end": "1804320"
  },
  {
    "text": "commments to fake a mob structure then once again we leveraging",
    "start": "1804320",
    "end": "1812760"
  },
  {
    "text": "the power of mob structure to achieve arbitr arbitr address read and",
    "start": "1812760",
    "end": "1819320"
  },
  {
    "text": "write then you can find a function pointer of wex process and leak wi ex EC",
    "start": "1819320",
    "end": "1828080"
  },
  {
    "text": "function address and you can use wi ex EA to bypass CFG so you can execute any",
    "start": "1828080",
    "end": "1836080"
  },
  {
    "text": "comments you want here is the demo first I check the vering in the",
    "start": "1836080",
    "end": "1844000"
  },
  {
    "text": "guess system and the verion of when work station is",
    "start": "1844000",
    "end": "1850360"
  },
  {
    "text": "17.5 then I run a program in the guest here is a process tree in the host",
    "start": "1850360",
    "end": "1858440"
  },
  {
    "text": "of wex",
    "start": "1858440",
    "end": "1861278"
  },
  {
    "text": "process as you can see a c program popped out under wex process tree so we",
    "start": "1866519",
    "end": "1874720"
  },
  {
    "text": "can run anything in host",
    "start": "1874720",
    "end": "1878960"
  },
  {
    "text": "now finally let's summarize the knowledge points the knowledge points",
    "start": "1884039",
    "end": "1889320"
  },
  {
    "text": "mentioned earlier first vulnerability mining time",
    "start": "1889320",
    "end": "1896360"
  },
  {
    "text": "of check and time of use the data of hvv can compete you should pay attention on",
    "start": "1896360",
    "end": "1903880"
  },
  {
    "text": "this when you do virtualization security research next uaf notice reset",
    "start": "1903880",
    "end": "1912679"
  },
  {
    "text": "operations you can check a similar bu CV 2020 for Z",
    "start": "1912679",
    "end": "1919840"
  },
  {
    "text": "4 second exploitation techniques first use urb structure to leak information",
    "start": "1920080",
    "end": "1927480"
  },
  {
    "text": "you want even if you don't have an information leak bu you can overflow U",
    "start": "1927480",
    "end": "1932919"
  },
  {
    "text": "structures first field and get a hip get a information leak",
    "start": "1932919",
    "end": "1940679"
  },
  {
    "text": "back next use endpoint structure to achieve arbitrary right with the power",
    "start": "1940679",
    "end": "1946799"
  },
  {
    "text": "of mob structure you can achieve arit read and write",
    "start": "1946799",
    "end": "1953440"
  },
  {
    "text": "again and uh finally how to defend against virtualization scape first",
    "start": "1953960",
    "end": "1961240"
  },
  {
    "text": "remove unnecessary devices such as USB controller sound cards CD",
    "start": "1961240",
    "end": "1967919"
  },
  {
    "text": "room and disable unnecessary features such as SJ",
    "start": "1967919",
    "end": "1973080"
  },
  {
    "text": "3D the component I use for Mob structure may need SJ",
    "start": "1973080",
    "end": "1981360"
  },
  {
    "text": "3D and last keep your software newest this way it's likely to avoid",
    "start": "1981440",
    "end": "1988080"
  },
  {
    "text": "virtualization Escape you may think oh I use that old version so they can't",
    "start": "1988080",
    "end": "1995039"
  },
  {
    "text": "attack me actually the old R has more Escape box so don't use older",
    "start": "1995039",
    "end": "2002799"
  },
  {
    "text": "version and uh thank you for your listening welcome to your questions",
    "start": "2002799",
    "end": "2009760"
  },
  {
    "text": "[Applause]",
    "start": "2010530",
    "end": "2016099"
  },
  {
    "text": "okay uh hello uh thank you for our presentation and I would like to hear",
    "start": "2026799",
    "end": "2032039"
  },
  {
    "text": "more about uh I see that uh two people are working on finding",
    "start": "2032039",
    "end": "2038600"
  },
  {
    "text": "buck in your case you and your colleague right and I would like to know the strategy like how you approach uh to",
    "start": "2038600",
    "end": "2046360"
  },
  {
    "text": "find the bux uh to to escape the",
    "start": "2046360",
    "end": "2052598"
  },
  {
    "text": "virtualization uh fun PX um like my",
    "start": "2052720",
    "end": "2058040"
  },
  {
    "text": "question are you fuzzing a lot or it's more about code review or when you two people working on the uh",
    "start": "2058040",
    "end": "2066398"
  },
  {
    "text": "to find the bu uh yes they found back",
    "start": "2066399",
    "end": "2071520"
  },
  {
    "text": "in uh the main part of here",
    "start": "2071520",
    "end": "2077679"
  },
  {
    "text": "is do research in different environment it's very very important we lost the",
    "start": "2077679",
    "end": "2086760"
  },
  {
    "text": "bugs I mentioned here the the first history bug because we do research in",
    "start": "2086760",
    "end": "2093599"
  },
  {
    "text": "desktop PC they don't H it don't have it doesn't have uh Bluetooth so that uh",
    "start": "2093599",
    "end": "2103160"
  },
  {
    "text": "preed function we can't go in so we ignore it so we lost the two",
    "start": "2103160",
    "end": "2110000"
  },
  {
    "text": "bux and try try do anything unnormal for example",
    "start": "2110000",
    "end": "2117880"
  },
  {
    "text": "I remove xhci in guest it's really unnormal if I didn't do this I don't",
    "start": "2117880",
    "end": "2124599"
  },
  {
    "text": "know USB mouse can mounted on their virtual Hub so the UF bu won't be",
    "start": "2124599",
    "end": "2131920"
  },
  {
    "text": "triggered in default environment and",
    "start": "2131920",
    "end": "2137160"
  },
  {
    "text": "uh to review as much as you can uh first n historic box then",
    "start": "2137160",
    "end": "2146920"
  },
  {
    "text": "understand uh Hardware architecture by manual uhci Intel Intel has a manual so",
    "start": "2146920",
    "end": "2155760"
  },
  {
    "text": "you can read how the they handle data from guest driver and uh how uh how they",
    "start": "2155760",
    "end": "2163920"
  },
  {
    "text": "should do in the first operation so we you and uh you can learn this by guest",
    "start": "2163920",
    "end": "2171359"
  },
  {
    "text": "driver in Linux system too uh they will implement the uh manual",
    "start": "2171359",
    "end": "2179800"
  },
  {
    "text": "in the guest driver so you can Nar from it too uh you you should n the guest",
    "start": "2179800",
    "end": "2186480"
  },
  {
    "text": "driver first before be before digging boxs in hard",
    "start": "2186480",
    "end": "2192800"
  },
  {
    "text": "virtual Hardware uh I think is that solve your",
    "start": "2192800",
    "end": "2197960"
  },
  {
    "text": "problem yeah yeah of course okay thank you and",
    "start": "2197960",
    "end": "2205800"
  },
  {
    "text": "question okay that's all thank you",
    "start": "2210520",
    "end": "2216880"
  }
]