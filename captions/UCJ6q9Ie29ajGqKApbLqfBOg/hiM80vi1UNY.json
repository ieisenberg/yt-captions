[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "good morning everyone and welcome to Mandalay Bay GH that's the name of the room and the name of the talk is",
    "start": "40",
    "end": "6279"
  },
  {
    "text": "subverting Apple Graphics practical approaches to remotely gaining root got some very good information here from the",
    "start": "6279",
    "end": "12200"
  },
  {
    "text": "team at Keen security lab before we begin though some quick notes uh the business Hall in Bayside AB throughout",
    "start": "12200",
    "end": "20160"
  },
  {
    "text": "the day will have all kinds of great vendor Expo sort of things going on there's also a welcome reception there",
    "start": "20160",
    "end": "27119"
  },
  {
    "text": "tonight from 5:30 until 7 right now uh happening all day today I",
    "start": "27119",
    "end": "32840"
  },
  {
    "text": "believe is the black hat Arsenal that can be found upstairs in the Palm foyer and then tonight at 6:30 are the",
    "start": "32840",
    "end": "40719"
  },
  {
    "text": "pony Awards and that's in manderlay Bay room BCD which is just down the hall and",
    "start": "40719",
    "end": "45879"
  },
  {
    "text": "then one final note please make sure that any mobile devices phones iPads laptop computers whatever you've",
    "start": "45879",
    "end": "52600"
  },
  {
    "text": "got is on some kind of Silent or vibrate mode just to make sure we don't disturb the the presentation so that's it and uh please",
    "start": "52600",
    "end": "60280"
  },
  {
    "text": "give a good welcome to the talk thank",
    "start": "60280",
    "end": "64559"
  },
  {
    "start": "62000",
    "end": "125000"
  },
  {
    "text": "you uh thanks David so uh I will begin our talk so our talk uh uh uh our talk",
    "start": "67400",
    "end": "75600"
  },
  {
    "text": "today is about sub subverting Apple Graphics PR practical approaches to",
    "start": "75600",
    "end": "81119"
  },
  {
    "text": "remotely gaining root so we use this title because actually we pwned uh OSX",
    "start": "81119",
    "end": "87640"
  },
  {
    "text": "uh with root privileges uh twice uh this year and uh from the uh year",
    "start": "87640",
    "end": "93880"
  },
  {
    "text": "2014 we actually also got sand boox bypass and successfully P the OSX",
    "start": "93880",
    "end": "100439"
  },
  {
    "text": "remotely uh in uh Pon 201 uh 14 uh but",
    "start": "100439",
    "end": "106119"
  },
  {
    "text": "three uh I think uh as most of you knows that uh three of our privilege",
    "start": "106119",
    "end": "112680"
  },
  {
    "text": "escalation buxs are relating to Apple Graphics so uh today we will introduce",
    "start": "112680",
    "end": "119039"
  },
  {
    "text": "Apple graphics and uh explain why it is a very good attack surface and why it is",
    "start": "119039",
    "end": "125079"
  },
  {
    "start": "125000",
    "end": "170000"
  },
  {
    "text": "dangerous so about us so everyone knows that we are currently uh tensent King",
    "start": "125079",
    "end": "130920"
  },
  {
    "text": "secret lab uh which is previously known as king team and in three years actually",
    "start": "130920",
    "end": "137599"
  },
  {
    "text": "we uh got eight uh Pon winner titles and this year we ped OSX twice with uh root",
    "start": "137599",
    "end": "146160"
  },
  {
    "text": "privilege escalations and one of the Box got a pony Awards uh uh best of uh",
    "start": "146160",
    "end": "152920"
  },
  {
    "text": "privilege escalation Nom nominations uh this year so uh today we hope we can win",
    "start": "152920",
    "end": "158480"
  },
  {
    "text": "it but with very little possibility maybe okay so under this year we also uh",
    "start": "158480",
    "end": "165120"
  },
  {
    "text": "tensent security team got uh master of P titles this year so uh let's begin uh our talk so uh",
    "start": "165120",
    "end": "173879"
  },
  {
    "start": "170000",
    "end": "207000"
  },
  {
    "text": "in this talk I will first introduce Apple graphics and then uh we will introduce user lab and uh attack surface",
    "start": "173879",
    "end": "181519"
  },
  {
    "text": "with uh CV 2013 180404 and uh uh we will uh do a demo",
    "start": "181519",
    "end": "189519"
  },
  {
    "text": "about that and then uh flanco will talk about the kernel attack service and Marco will talk about uh uh the bug",
    "start": "189519",
    "end": "198440"
  },
  {
    "text": "exploitation and uh uh uh also uh the to will be wrap up with life de uh video",
    "start": "198440",
    "end": "206879"
  },
  {
    "text": "demo okay so uh Apple graph actually contains two parts which is the user",
    "start": "206879",
    "end": "212920"
  },
  {
    "start": "207000",
    "end": "317000"
  },
  {
    "text": "length and the kernel length so for a Sandbox AP usually you call some IPC uh",
    "start": "212920",
    "end": "220239"
  },
  {
    "text": "uh interface to the Windows Server uh Ser uh server service which is a demo uh",
    "start": "220239",
    "end": "226519"
  },
  {
    "text": "and the Windows Server service demon will actually call the io kit uh which",
    "start": "226519",
    "end": "231680"
  },
  {
    "text": "is in IO accelerator family uh uh class and uh which is and this uh class is",
    "start": "231680",
    "end": "239120"
  },
  {
    "text": "actually implemented by Nvidia and Intel graphics and uh for some APS like Safari",
    "start": "239120",
    "end": "245840"
  },
  {
    "text": "or Chrome or some other uh browser uh because of the performance consideration",
    "start": "245840",
    "end": "252720"
  },
  {
    "text": "then uh the Cent box uh profile actually allows directly calling to the kernel",
    "start": "252720",
    "end": "258040"
  },
  {
    "text": "this is for for example currently you need a uh webg or something like that so",
    "start": "258040",
    "end": "264000"
  },
  {
    "text": "you need a better performance so you can uh call them directly also so if if you look at the sendbox",
    "start": "264000",
    "end": "270880"
  },
  {
    "text": "profile on OSX or iOS you will find that both in the user mode and the kernel",
    "start": "270880",
    "end": "276840"
  },
  {
    "text": "mode the Apple Graphics component are allowed to call so from the user mode it",
    "start": "276840",
    "end": "282080"
  },
  {
    "text": "is on OSX it's a Windows server. Active and uh in the kernel mode it's actually",
    "start": "282080",
    "end": "288479"
  },
  {
    "text": "done by IO kit connection IO accelerator and you can see that IO uh accelerator",
    "start": "288479",
    "end": "295600"
  },
  {
    "text": "is actually a IO service and I kit connection actually means that you can",
    "start": "295600",
    "end": "301080"
  },
  {
    "text": "open all the io uh IO kit client user client which uh whose uh IO service is",
    "start": "301080",
    "end": "307919"
  },
  {
    "text": "IO accelerator which is very good that means you can open up to uh almost 10 uh",
    "start": "307919",
    "end": "314280"
  },
  {
    "text": "or more uh user clients so uh now I will introduce the",
    "start": "314280",
    "end": "319759"
  },
  {
    "start": "317000",
    "end": "321000"
  },
  {
    "text": "userland TX surface so uh you can see that uh the userland test Service uh the Apple",
    "start": "319759",
    "end": "327039"
  },
  {
    "text": "Graphics is implemented by uh most by the Mig and the Mig is Apple's uh IPC",
    "start": "327039",
    "end": "335319"
  },
  {
    "text": "implementation and uh the implementation is no more interesting than some other",
    "start": "335319",
    "end": "340440"
  },
  {
    "text": "modern uh OS uh o OS like Windows or like Android uh and uh the",
    "start": "340440",
    "end": "348000"
  },
  {
    "text": "implementation is uh two things that you need to remember one thing is that it is",
    "start": "348000",
    "end": "353680"
  },
  {
    "text": "uh done by calling Mark message and the second thing that uh it contains not",
    "start": "353680",
    "end": "359120"
  },
  {
    "text": "only the simple message but also some complex message because you know uh sometimes you you need to not only uh uh",
    "start": "359120",
    "end": "366440"
  },
  {
    "text": "send some uh simple message but also you need to send something like send a port",
    "start": "366440",
    "end": "372000"
  },
  {
    "text": "to another process or sometimes you need to send a a pointer to another process",
    "start": "372000",
    "end": "377319"
  },
  {
    "text": "so that kernel have to be in involved to do the uh address mapping or the port",
    "start": "377319",
    "end": "383319"
  },
  {
    "start": "383000",
    "end": "432000"
  },
  {
    "text": "mapping so uh from the uh parameter of Mark message you can find that there is",
    "start": "383319",
    "end": "389319"
  },
  {
    "text": "a Mark header bits which the highest bit if it equals to zero it means it's a",
    "start": "389319",
    "end": "396520"
  },
  {
    "text": "very simple message uh and one means it is a comp complex message which involves",
    "start": "396520",
    "end": "402919"
  },
  {
    "text": "port or o or something like that so actually uh there are four type of uh",
    "start": "402919",
    "end": "408199"
  },
  {
    "text": "messages one is simple message which is very easy to understand and the three other type of uh descriptor one is Port",
    "start": "408199",
    "end": "416120"
  },
  {
    "text": "descriptor when you want to send a port and the o descriptor when you want to",
    "start": "416120",
    "end": "421440"
  },
  {
    "text": "send a pointer and the O Port descriptor when you want to send to uh send a",
    "start": "421440",
    "end": "426879"
  },
  {
    "text": "pointer contains containing a array of ports to the remote",
    "start": "426879",
    "end": "432400"
  },
  {
    "start": "432000",
    "end": "466000"
  },
  {
    "text": "process so uh let's have a look at the Windows Server so it has two uh Pro",
    "start": "432400",
    "end": "438639"
  },
  {
    "text": "private framework and uh you can see most browsers allows to open one of them",
    "start": "438639",
    "end": "444720"
  },
  {
    "text": "which is app uh Windows server. Active Service uh this service is actually",
    "start": "444720",
    "end": "450520"
  },
  {
    "text": "implemented by a core Graphics framework and the core uh another framework called",
    "start": "450520",
    "end": "457160"
  },
  {
    "text": "core is not allowed by uh Safari sandbox by default but uh later on I will",
    "start": "457160",
    "end": "462840"
  },
  {
    "text": "explain more detailedly and you will find something interesting and there are two sets of",
    "start": "462840",
    "end": "469039"
  },
  {
    "text": "apis one is a CLI side API and another is server side API uh you can find it uh",
    "start": "469039",
    "end": "476360"
  },
  {
    "text": "uh distinguish them very clearly by the name uh the the CL side starts with CGS and",
    "start": "476360",
    "end": "484800"
  },
  {
    "text": "the server side starts with underscore X and uh by uh by its feature you can",
    "start": "484800",
    "end": "491520"
  },
  {
    "text": "categorize them into several uh SE several ones for example window uh",
    "start": "491520",
    "end": "498000"
  },
  {
    "text": "majorly doing some um window creation window grouping or something like that",
    "start": "498000",
    "end": "503639"
  },
  {
    "text": "and for sessions it is a session management if you think uh it as a",
    "start": "503639",
    "end": "510000"
  },
  {
    "start": "507000",
    "end": "535000"
  },
  {
    "text": "hacker uh you may uh for me I think as this way because uh before OSX line that",
    "start": "510000",
    "end": "517518"
  },
  {
    "text": "there is no apple sand box and uh but uh at that time Windows server has a long history than uh the sand box and after",
    "start": "517519",
    "end": "525040"
  },
  {
    "text": "that we we may think of after the sent box is introduced there may be some uh flow or",
    "start": "525040",
    "end": "531080"
  },
  {
    "text": "something uh that Apple failed to consider so uh we begin to syn it for",
    "start": "531080",
    "end": "537320"
  },
  {
    "start": "535000",
    "end": "562000"
  },
  {
    "text": "for example if we need to bypass send box the first thing we think is that",
    "start": "537320",
    "end": "542640"
  },
  {
    "text": "move the mouse plus click if we can simulate this operation then it means bypass sent box because we can move the",
    "start": "542640",
    "end": "549760"
  },
  {
    "text": "mouse to the calculator icon and then uh perform a double click and also we may",
    "start": "549760",
    "end": "555800"
  },
  {
    "text": "uh do some uh set hotkey operation to set up our own uh customized",
    "start": "555800",
    "end": "562000"
  },
  {
    "text": "hotkey so uh let's uh do the real exam to see how uh they can be done uh but uh",
    "start": "562000",
    "end": "569480"
  },
  {
    "text": "we find that we are wrong because apple is not that bad uh if we see see the mo",
    "start": "569480",
    "end": "576079"
  },
  {
    "text": "Mouse operation it is still allowed from a Sandbox AP but if we do a click then",
    "start": "576079",
    "end": "582360"
  },
  {
    "text": "you can find it a check some for some uh entitlement and most Center box in uh AP",
    "start": "582360",
    "end": "588240"
  },
  {
    "text": "doesn't have a hiid control entitlement so it is block and also uh the same",
    "start": "588240",
    "end": "593560"
  },
  {
    "text": "situation for set key and also we may need to think about",
    "start": "593560",
    "end": "599399"
  },
  {
    "start": "596000",
    "end": "662000"
  },
  {
    "text": "some uh window related API because uh in on Windows system Microsoft Windows we",
    "start": "599399",
    "end": "605079"
  },
  {
    "text": "actually have a lot of uaf issues relating to window for example you can set up a callback to free a window and",
    "start": "605079",
    "end": "612360"
  },
  {
    "text": "after that it is used again but uh maybe uh on OSX there are similar box but uh",
    "start": "612360",
    "end": "619440"
  },
  {
    "text": "when we perform the code audit we found that many of them has some check like uh",
    "start": "619440",
    "end": "625040"
  },
  {
    "text": "uh connection holds right on window check this this check actually uh only allows the window Creator or the window",
    "start": "625040",
    "end": "632800"
  },
  {
    "text": "owner to hold U hold this permission and if you are not then you you are blocked",
    "start": "632800",
    "end": "639000"
  },
  {
    "text": "by this check and uh in history I think there are many tricks to bypass this",
    "start": "639000",
    "end": "645320"
  },
  {
    "text": "check but now it's harder and uh another uh thinking is that many other AP of the",
    "start": "645320",
    "end": "652639"
  },
  {
    "text": "window related API does doesn't have that check so it is very worthwhile for",
    "start": "652639",
    "end": "657839"
  },
  {
    "text": "further uh code auditing or fing to find a more interesting bug and uh uh we need to also uh uh",
    "start": "657839",
    "end": "666600"
  },
  {
    "start": "662000",
    "end": "785000"
  },
  {
    "text": "emphasize that why we choose Windows Server because is it running in root of course not is it running in user account",
    "start": "666600",
    "end": "674680"
  },
  {
    "text": "of course not as well so uh what's uh the account for uh for Windows Server",
    "start": "674680",
    "end": "681680"
  },
  {
    "text": "actually it's nothing you you are find this account has very little permission but Windows server is",
    "start": "681680",
    "end": "688279"
  },
  {
    "text": "actually a privilege comedian it can change privilage and I will illustrate it by three uh bugs the",
    "start": "688279",
    "end": "695880"
  },
  {
    "text": "first bug uh is actually the bug we use it as at Pon",
    "start": "695880",
    "end": "701120"
  },
  {
    "text": "2014 at that time uh we audit API called X create uh session and the this is a",
    "start": "701120",
    "end": "708480"
  },
  {
    "text": "server side session which allows you to create a new loog login session and in",
    "start": "708480",
    "end": "714000"
  },
  {
    "text": "this new login session it will by default to FOC process which is loging",
    "start": "714000",
    "end": "719320"
  },
  {
    "text": "window and then set the uh uid of that process to the current users process so",
    "start": "719320",
    "end": "725160"
  },
  {
    "text": "it's very good and the that AP allows uh you allows the user to customize that",
    "start": "725160",
    "end": "731959"
  },
  {
    "text": "pass so so that it means you can by pass the send box and the run a sub process",
    "start": "731959",
    "end": "738079"
  },
  {
    "text": "on the uh arbitary uh pass and the file and with the uh with the users contest",
    "start": "738079",
    "end": "745360"
  },
  {
    "text": "which is perfect and after p 2014 actually uh",
    "start": "745360",
    "end": "751720"
  },
  {
    "text": "Apple did some check uh for the fix uh they fixed that by at a Sandbox check",
    "start": "751720",
    "end": "757360"
  },
  {
    "text": "API uh for all sendbox uh AP so you uh from a Sandbox AP you are not able to",
    "start": "757360",
    "end": "764360"
  },
  {
    "text": "call this function again it's very effective and we cannot bypass it and uh",
    "start": "764360",
    "end": "770639"
  },
  {
    "text": "for now you can see that this API happens to uh everywhere and uh make me",
    "start": "770639",
    "end": "776880"
  },
  {
    "text": "very tired and it is very V that Apple realized is dangerous in apple uh in",
    "start": "776880",
    "end": "783360"
  },
  {
    "text": "core graphics and now we need to explore another private framework which is cost",
    "start": "783360",
    "end": "790399"
  },
  {
    "start": "785000",
    "end": "815000"
  },
  {
    "text": "core C Core uh offers more complex uh operations like animation or multiplayer",
    "start": "790399",
    "end": "797720"
  },
  {
    "text": "handling so uh but uh the sad thing is that Safari sandbox doesn't have that uh",
    "start": "797720",
    "end": "805040"
  },
  {
    "text": "that rule so that you cannot open it directly but is it that it does that",
    "start": "805040",
    "end": "810680"
  },
  {
    "text": "mean that you cannot open it actually the answer is no because uh because as",
    "start": "810680",
    "end": "816680"
  },
  {
    "start": "815000",
    "end": "857000"
  },
  {
    "text": "we just mentioned there is a method called uh there is a message uh the type",
    "start": "816680",
    "end": "822639"
  },
  {
    "text": "is Port descript message it allows you to send a IPC to the remote process and",
    "start": "822639",
    "end": "829639"
  },
  {
    "text": "maybe the remote process will have the privilege to open that port and then it",
    "start": "829639",
    "end": "835800"
  },
  {
    "text": "will create that message to send the port back to your process so that you",
    "start": "835800",
    "end": "841279"
  },
  {
    "text": "duplicate that Port into your process yeah and in OSX uh the API exists which",
    "start": "841279",
    "end": "848600"
  },
  {
    "text": "is CGS create layer context and if you call it you will get a port Mark Port uh",
    "start": "848600",
    "end": "856040"
  },
  {
    "text": "for C cor and from now on you actually can call every apis in C cor and you",
    "start": "856040",
    "end": "862639"
  },
  {
    "text": "will find it's very good because uh you find a lot of logical issues like uh you",
    "start": "862639",
    "end": "868560"
  },
  {
    "start": "865000",
    "end": "889000"
  },
  {
    "text": "can set uh you call this set message file uh to append some uh content into arbitr file",
    "start": "868560",
    "end": "876639"
  },
  {
    "text": "with uh arbitary uh pass uh but the the privilege have to be Windows server but",
    "start": "876639",
    "end": "883519"
  },
  {
    "text": "if you uh check this bag on iOS you will find something interesting I will not",
    "start": "883519",
    "end": "888880"
  },
  {
    "text": "mention it here and uh for now we got two uh box one uh uh make you uh to",
    "start": "888880",
    "end": "896160"
  },
  {
    "start": "889000",
    "end": "906000"
  },
  {
    "text": "escalate to the current uh users context and another makes you to be a a Windows",
    "start": "896160",
    "end": "902880"
  },
  {
    "text": "Server privilege and now I want to be root so uh in this year we use cve",
    "start": "902880",
    "end": "910279"
  },
  {
    "start": "906000",
    "end": "996000"
  },
  {
    "text": "2016 1804 which is got Pony award uh nomination and the the bug actually",
    "start": "910279",
    "end": "918759"
  },
  {
    "text": "exists in set Global Force config API which uh did two uh CF release operation",
    "start": "918759",
    "end": "926440"
  },
  {
    "text": "very close uh which is double free bu but uh let's think about whether it",
    "start": "926440",
    "end": "932880"
  },
  {
    "text": "is exploitable so uh if you want to exploit this P several problems May uh",
    "start": "932880",
    "end": "938880"
  },
  {
    "text": "must to be solved one is that uh you have to fill in the data into two uh cf3",
    "start": "938880",
    "end": "947240"
  },
  {
    "text": "this is f first problem and second problem is that uh you have to do a very",
    "start": "947240",
    "end": "953160"
  },
  {
    "text": "effective hip spray in 64bit process and also there is other thing like ASL",
    "start": "953160",
    "end": "960720"
  },
  {
    "text": "drop it looks like very hard to exploit because uh the two frees are very close",
    "start": "960720",
    "end": "966399"
  },
  {
    "text": "to each other there is the L time window and another thing is that you can see all core Graphics apci actually runs in",
    "start": "966399",
    "end": "974600"
  },
  {
    "text": "a single threat in the uh in a server Loop so uh you cannot use any of those",
    "start": "974600",
    "end": "980560"
  },
  {
    "text": "uh core Graphics API to fill in the data and also uh actually we give up this bug",
    "start": "980560",
    "end": "987079"
  },
  {
    "text": "for several days because we think uh the race successful rate is very low but uh",
    "start": "987079",
    "end": "993279"
  },
  {
    "text": "it depends on uh uh uh uh something which is that uh it's a very Legacy",
    "start": "993279",
    "end": "1001079"
  },
  {
    "start": "996000",
    "end": "1026000"
  },
  {
    "text": "double free problem if you free two me uh free a memory twice will will the",
    "start": "1001079",
    "end": "1007000"
  },
  {
    "text": "process crash immediately the answer is yes in uh if you use Mac Myck API but if",
    "start": "1007000",
    "end": "1014759"
  },
  {
    "text": "you use the CF uh the core Foundation version of API aloc and free actually",
    "start": "1014759",
    "end": "1021279"
  },
  {
    "text": "that's a totally different story it doesn't crash so we can change off uh",
    "start": "1021279",
    "end": "1027240"
  },
  {
    "text": "change our strategy we can make two threat one is uh because uh we just",
    "start": "1027240",
    "end": "1032798"
  },
  {
    "text": "mentioned that we have another uh framework called C call which runs at",
    "start": "1032799",
    "end": "1037959"
  },
  {
    "text": "another threat so we can uh uh make the new strategy which is we can uh do uh in",
    "start": "1037959",
    "end": "1045400"
  },
  {
    "text": "in uh thread one we try to trigger the bug again and again and in thre two we",
    "start": "1045400",
    "end": "1050600"
  },
  {
    "text": "try to allocate memory with the same size and if it failed nothing happened",
    "start": "1050600",
    "end": "1056559"
  },
  {
    "text": "but if it succeeds then we may got code execution which is very good but the API must meet the following",
    "start": "1056559",
    "end": "1064360"
  },
  {
    "text": "criteria for example uh the the data you fill have to be uh 0x 30 bytes and the",
    "start": "1064360",
    "end": "1072200"
  },
  {
    "text": "other that the every bite at least uh the first eight bite of that structure",
    "start": "1072200",
    "end": "1077720"
  },
  {
    "text": "must be ConEd so uh what kind of message we can think of to try to fill of course",
    "start": "1077720",
    "end": "1084200"
  },
  {
    "text": "o message is the best option because Port descriptor of course not and the",
    "start": "1084200",
    "end": "1089640"
  },
  {
    "text": "simple message it hard to find a very good",
    "start": "1089640",
    "end": "1095320"
  },
  {
    "text": "candidate and you have uh another bad news which is there is only one o",
    "start": "1095440",
    "end": "1101280"
  },
  {
    "text": "descript message under C cor API which is X register uh client options only one",
    "start": "1101280",
    "end": "1109080"
  },
  {
    "text": "so that's very bad and uh uh let's audit this API",
    "start": "1109080",
    "end": "1114559"
  },
  {
    "text": "actually this API uh uh accept a serialized proper list because uh",
    "start": "1114559",
    "end": "1120679"
  },
  {
    "text": "sometimes you need to send a very uh complex message from process a to",
    "start": "1120679",
    "end": "1125760"
  },
  {
    "text": "process B so for performance uh consideration it actually to uh",
    "start": "1125760",
    "end": "1130799"
  },
  {
    "text": "serialize uh to uh make a CF dictionary to uh pist binary uh format and send to",
    "start": "1130799",
    "end": "1139159"
  },
  {
    "text": "the Target process and in this uh uh process you actually uh some uh comp",
    "start": "1139159",
    "end": "1145360"
  },
  {
    "text": "complex operation will be uh handled so you will find something very",
    "start": "1145360",
    "end": "1151240"
  },
  {
    "start": "1151000",
    "end": "1192000"
  },
  {
    "text": "interesting and the first thinking we are uh we are considering is that uh we",
    "start": "1151240",
    "end": "1156799"
  },
  {
    "text": "we want to send uh try to fill in with CF data CF string or CF uh blah blah",
    "start": "1156799",
    "end": "1163080"
  },
  {
    "text": "blah but we find that is not feedable because when uh you send that those",
    "start": "1163080",
    "end": "1169120"
  },
  {
    "text": "messages to the Target process actually uh those are cons considered as as a con",
    "start": "1169120",
    "end": "1176400"
  },
  {
    "text": "constant which is that uh The Meta data uh the the the real data is actually in",
    "start": "1176400",
    "end": "1182400"
  },
  {
    "text": "LED in that uh struct which means that first eight byte is also always the",
    "start": "1182400",
    "end": "1188520"
  },
  {
    "text": "metadata of those CF message which is very bad so our last hope is the process",
    "start": "1188520",
    "end": "1196760"
  },
  {
    "start": "1192000",
    "end": "1223000"
  },
  {
    "text": "itself of the uh seral deserialize so uh you can uh try to find uh try to audit",
    "start": "1196760",
    "end": "1204120"
  },
  {
    "text": "this function and maybe in this function there is some internal struct which create it and then free it IM",
    "start": "1204120",
    "end": "1210960"
  },
  {
    "text": "immediately so for this kind of operation it is also uh also useful",
    "start": "1210960",
    "end": "1216400"
  },
  {
    "text": "because we don't rely on the persistent data but just some temp data is okay and",
    "start": "1216400",
    "end": "1223559"
  },
  {
    "text": "then we try to uh audit this function and finally we found if we pass the uh",
    "start": "1223559",
    "end": "1229960"
  },
  {
    "text": "uni code string then we will have this kind of operation like in this line it",
    "start": "1229960",
    "end": "1236440"
  },
  {
    "text": "try to allocate a memory uh with uh the bytes that you can control and then uh",
    "start": "1236440",
    "end": "1242840"
  },
  {
    "text": "it copied the content of the unic code uh string into that buffer and then free",
    "start": "1242840",
    "end": "1248919"
  },
  {
    "text": "it so with this primitive actually we have a uh controlled well controlled",
    "start": "1248919",
    "end": "1255000"
  },
  {
    "text": "buffer with controlled size and even it is is freed the content of that buffer",
    "start": "1255000",
    "end": "1261679"
  },
  {
    "text": "Remains the Same so it's a perfect so we can uh change our uh uh adjust our",
    "start": "1261679",
    "end": "1269159"
  },
  {
    "text": "strategy uh to uh use this logic and finally we got uh uh the control of one",
    "start": "1269159",
    "end": "1276640"
  },
  {
    "text": "register which is good and the next thing we are thinking about is the hip spray so we do a simple test on OSX and",
    "start": "1276640",
    "end": "1285400"
  },
  {
    "start": "1278000",
    "end": "1311000"
  },
  {
    "text": "we found that uh the uh the memory is very random which we need maybe uh 1,000",
    "start": "1285400",
    "end": "1292720"
  },
  {
    "text": "uh gigabyte one TV to uh to for a reliable hip spray which is very bad but",
    "start": "1292720",
    "end": "1300080"
  },
  {
    "text": "when we try a bigger allocation then we find the uh address is less randomized",
    "start": "1300080",
    "end": "1307400"
  },
  {
    "text": "so uh in this case spraying will be very reliable and uh we need to think of the",
    "start": "1307400",
    "end": "1313679"
  },
  {
    "start": "1311000",
    "end": "1369000"
  },
  {
    "text": "following criteria when uh spraying one thing is that the memory have to be",
    "start": "1313679",
    "end": "1319320"
  },
  {
    "text": "persistent in memory and also you need a very large block of memory because large",
    "start": "1319320",
    "end": "1325000"
  },
  {
    "text": "memory allocation is less randomized in O OSX and also you need a o message",
    "start": "1325000",
    "end": "1331799"
  },
  {
    "text": "because only o message allows you to do this kind of operation so fin finally we",
    "start": "1331799",
    "end": "1337799"
  },
  {
    "text": "got a very good uh candidate which is cgx set connection property so in this",
    "start": "1337799",
    "end": "1343840"
  },
  {
    "text": "AP you can find that it checks whether a global uh dictionary uh exist and if it",
    "start": "1343840",
    "end": "1351120"
  },
  {
    "text": "doesn't uh exist it will create a new one otherwise it will uh set up the",
    "start": "1351120",
    "end": "1356799"
  },
  {
    "text": "value and the key here and the key can be unique and the memory will keep",
    "start": "1356799",
    "end": "1363360"
  },
  {
    "text": "growing you can call uh this function again and again until the memory",
    "start": "1363360",
    "end": "1369039"
  },
  {
    "start": "1369000",
    "end": "1403000"
  },
  {
    "text": "grows and uh uh the last thing we we think about is aslr uh but aslr in this",
    "start": "1369039",
    "end": "1375640"
  },
  {
    "text": "case is very easy because it in OS it share with Safari process the Base",
    "start": "1375640",
    "end": "1382400"
  },
  {
    "text": "address of most Frameworks are the same so uh uh because we start uh start it",
    "start": "1382400",
    "end": "1390240"
  },
  {
    "text": "from uh remote Safari exploit so ASL is not a problem and the code of execution",
    "start": "1390240",
    "end": "1396279"
  },
  {
    "text": "is also not a problem uh for more information you can refer to this",
    "start": "1396279",
    "end": "1403159"
  },
  {
    "start": "1403000",
    "end": "1451000"
  },
  {
    "text": "link and the last thing uh whether uh this buug can be a root privilege",
    "start": "1403159",
    "end": "1409440"
  },
  {
    "text": "escalation the answer is yes because uh when you check this process actually the",
    "start": "1409440",
    "end": "1414919"
  },
  {
    "text": "uid is always root but Windows server is just just it's uh just its EU ID so uh",
    "start": "1414919",
    "end": "1423279"
  },
  {
    "text": "considering that you have a remote code execution you can execute arbitary",
    "start": "1423279",
    "end": "1428600"
  },
  {
    "text": "memory uh arbitary code then uh you can just call set u ID to zero to send uh",
    "start": "1428600",
    "end": "1436240"
  },
  {
    "text": "set its EU ID back to uh route so I call this kind of mechanism mechanism uh",
    "start": "1436240",
    "end": "1444200"
  },
  {
    "text": "privilege Chum which is very good so we got three different box and three",
    "start": "1444200",
    "end": "1449919"
  },
  {
    "text": "different Privileges and lastly I will handle it over to QB for a demo",
    "start": "1449919",
    "end": "1458840"
  },
  {
    "start": "1451000",
    "end": "1634000"
  },
  {
    "text": "okay I will show a demo about this um window s explored I use in so P this",
    "start": "1486080",
    "end": "1496720"
  },
  {
    "text": "year um the target we attacked in this video is a wish",
    "start": "1496960",
    "end": "1504320"
  },
  {
    "text": "machine about with the late latest OS",
    "start": "1504320",
    "end": "1509679"
  },
  {
    "text": "version at that moment and uh the whole process contains",
    "start": "1509679",
    "end": "1516960"
  },
  {
    "text": "two parts one is Windows server explorat and another one is Safari explorator",
    "start": "1516960",
    "end": "1525919"
  },
  {
    "text": "and now our Ser is listening and preparing to send the payload for the",
    "start": "1535080",
    "end": "1540520"
  },
  {
    "text": "windows Ser since the web content process",
    "start": "1540520",
    "end": "1546840"
  },
  {
    "text": "will try to field in the double free field and Trigger the UF again and again",
    "start": "1546840",
    "end": "1554279"
  },
  {
    "text": "uh once we success so we count see any change on",
    "start": "1554279",
    "end": "1559520"
  },
  {
    "text": "the screen so we select to show with a remote",
    "start": "1559520",
    "end": "1566480"
  },
  {
    "text": "show and okay finally we got our loot sh so next uh franker we talk about the",
    "start": "1569480",
    "end": "1579240"
  },
  {
    "text": "kernel attack service",
    "start": "1579240",
    "end": "1583000"
  },
  {
    "text": "check okay hello everyone and first I need to apologize because I found that",
    "start": "1597000",
    "end": "1602360"
  },
  {
    "text": "Shanghai is much more uh hotter it's much hotter than vas so i c a code",
    "start": "1602360",
    "end": "1608399"
  },
  {
    "text": "unfortunately uh so but I will try my best to explain this presentation in a",
    "start": "1608399",
    "end": "1613679"
  },
  {
    "text": "clear way and uh Leon and kby has explained and demonstrate our usland",
    "start": "1613679",
    "end": "1618840"
  },
  {
    "text": "exploit on the Windows ser and now I will do an introduction and Analysis of",
    "start": "1618840",
    "end": "1624399"
  },
  {
    "text": "another our Cel exploit with the uh with the B from the Safari sandbox so that we",
    "start": "1624399",
    "end": "1630640"
  },
  {
    "text": "can get a complete control of the system the Cal attack surface we",
    "start": "1630640",
    "end": "1636080"
  },
  {
    "start": "1634000",
    "end": "1704000"
  },
  {
    "text": "research sh is mainly the a accelator surface family the exelator family surface family is an important uh uh",
    "start": "1636080",
    "end": "1643640"
  },
  {
    "text": "class or important uh service in the Apple Graphics kernel driver system and",
    "start": "1643640",
    "end": "1648799"
  },
  {
    "text": "uh this interface is involved in almost every uh rendering operation that I will",
    "start": "1648799",
    "end": "1654120"
  },
  {
    "text": "create a window in the OSX if you like create a uh you want to render some",
    "start": "1654120",
    "end": "1660159"
  },
  {
    "text": "video and then theator surface is a m for your operation but the interface as",
    "start": "1660159",
    "end": "1666600"
  },
  {
    "text": "Le has described in previous slides that uh in the ancient times uh there are",
    "start": "1666600",
    "end": "1671840"
  },
  {
    "text": "only Windows Server who will uh invoke or cause the I accelator surface",
    "start": "1671840",
    "end": "1676919"
  },
  {
    "text": "function from user space but after Apple opens opens up inter this interface for for other uh sandbox",
    "start": "1676919",
    "end": "1685399"
  },
  {
    "text": "applications uh there may be some problems and luckily we found one and which is the cve 20161 1815 The Bard",
    "start": "1685399",
    "end": "1693960"
  },
  {
    "text": "which we use the to escape the sa sand boox of to gain a colel",
    "start": "1693960",
    "end": "1699080"
  },
  {
    "text": "privilege the iOS Service uh actually exports many interfaces through the",
    "start": "1699080",
    "end": "1705120"
  },
  {
    "start": "1704000",
    "end": "1844000"
  },
  {
    "text": "external method function and there are actually we use about six or seven uh",
    "start": "1705120",
    "end": "1711039"
  },
  {
    "text": "external external method to complete our exploitation and there are the first four uh key functions in this our Ser",
    "start": "1711039",
    "end": "1718440"
  },
  {
    "text": "surface the first is set ID mode and the second is surface control and the the",
    "start": "1718440",
    "end": "1723679"
  },
  {
    "text": "third is the surface lock options and the four is the surface Flash the SAT mode is responsible for the",
    "start": "1723679",
    "end": "1729600"
  },
  {
    "text": "initialization of the accelator surface and the user mode applications provide a",
    "start": "1729600",
    "end": "1736240"
  },
  {
    "text": "presentation type which is an teer and will be uh will be interpreted in a",
    "start": "1736240",
    "end": "1741760"
  },
  {
    "text": "bitwise format by the kernel driver and when you call set ID mode on the newly",
    "start": "1741760",
    "end": "1747120"
  },
  {
    "text": "created I exor surface the buffers are allocated on the relevant frame buffers",
    "start": "1747120",
    "end": "1752440"
  },
  {
    "text": "connected with surface are also reserved this interface must be called prior to",
    "start": "1752440",
    "end": "1757600"
  },
  {
    "text": "all other our surface external methods to ensure that you got valid our surface",
    "start": "1757600",
    "end": "1764080"
  },
  {
    "text": "to work on and uh another important function is the surface control function the surface Control Function uh it gets",
    "start": "1764080",
    "end": "1771559"
  },
  {
    "text": "the input from user space and the user space can specify basic attributes for the current surface the most interesting",
    "start": "1771559",
    "end": "1778440"
  },
  {
    "text": "one or the most important one or you can see also the most basic one fundamental one is the rectangle of the current",
    "start": "1778440",
    "end": "1785039"
  },
  {
    "text": "surface that uh you want to you want to draw how big a surface and how like how large surface and the coordinate of the",
    "start": "1785039",
    "end": "1791279"
  },
  {
    "text": "surface on the on the screen on the display physical display screen and the",
    "start": "1791279",
    "end": "1796440"
  },
  {
    "text": "surface lock options is also important function because that if you want to submit your surface uh to rendering you",
    "start": "1796440",
    "end": "1803120"
  },
  {
    "text": "must lock it first and the surface lock options the external method in the our surface to receive some lock options uh",
    "start": "1803120",
    "end": "1810880"
  },
  {
    "text": "to specify the lock behavior of the our surface and finally there's another",
    "start": "1810880",
    "end": "1816480"
  },
  {
    "text": "function named the surface flush uh it is related to a double double buffering and the triple buffering of the graphics",
    "start": "1816480",
    "end": "1823799"
  },
  {
    "text": "Pipeline and if you car surface flush on a double buffer uh double double buffer",
    "start": "1823799",
    "end": "1829760"
  },
  {
    "text": "back the surface then it will exchange the backup and the current buffer and some surfaces have triple buffering",
    "start": "1829760",
    "end": "1836799"
  },
  {
    "text": "support so if you call surface flush they are more complex process and we will not elaborate about detail here and",
    "start": "1836799",
    "end": "1844039"
  },
  {
    "start": "1844000",
    "end": "1876000"
  },
  {
    "text": "also after this four basic function we also have a basic rendering unit uh which is in the not only in the ior",
    "start": "1844039",
    "end": "1852120"
  },
  {
    "text": "surface but also in the I accelerator sub system is a 8 by rectangle structure with a field specified in the surface",
    "start": "1852120",
    "end": "1860000"
  },
  {
    "text": "Control Function uh actually it's not hard to understand that to specify a",
    "start": "1860000",
    "end": "1865039"
  },
  {
    "text": "rectangle to uh uniquely identify its location and its size you must provide the x coordinate the y coordinate and",
    "start": "1865039",
    "end": "1872519"
  },
  {
    "text": "the wi s hit of the current rectangle uh for typical Graphics",
    "start": "1872519",
    "end": "1877919"
  },
  {
    "text": "Pipeline and uh I'm I'm referring to the picture of the open G Pipeline and you",
    "start": "1877919",
    "end": "1883000"
  },
  {
    "text": "can see that first uh inclin Supply a Vertex data and the vertex data goes through vertex Shader and it is roriz",
    "start": "1883000",
    "end": "1890880"
  },
  {
    "text": "and and then goes to goes through rization and finally it goes through fragment Shader to get his color get",
    "start": "1890880",
    "end": "1897679"
  },
  {
    "text": "some beautiful colors to uh to paint and finally it's drawn on frame buffer the",
    "start": "1897679",
    "end": "1903240"
  },
  {
    "text": "OSX kernel uh Graphics pipeline is not so complex as the open Jr ones but there",
    "start": "1903240",
    "end": "1908799"
  },
  {
    "text": "are still some critical comp critical steps and one of which is the rization step uh the rization step contains the",
    "start": "1908799",
    "end": "1916480"
  },
  {
    "text": "bleed operation and the uh the pl operation actually contains the varability we",
    "start": "1916480",
    "end": "1922840"
  },
  {
    "text": "found and also I would like to introduce another additional surface that is also relevant to this uh exploitation in",
    "start": "1922840",
    "end": "1929960"
  },
  {
    "text": "oural surface the first one is s skill and the second one is submit swap set skill actually provides the end users",
    "start": "1929960",
    "end": "1938120"
  },
  {
    "text": "under clients in the user space to specify a skill factor so that you can scale your window from for example you",
    "start": "1938120",
    "end": "1945240"
  },
  {
    "text": "are to you you would like the window to be two side twice the big as the original size or twice the size smaller",
    "start": "1945240",
    "end": "1952399"
  },
  {
    "text": "and you can call the set scale function to specify a scale factor and the surface holding joint region will be",
    "start": "1952399",
    "end": "1959039"
  },
  {
    "text": "scale can be scaled with original rectangle region to form a rectangle pair and in the AL",
    "start": "1959039",
    "end": "1967000"
  },
  {
    "text": "surface it is contained in a structure named the rectangle pair T and uh an",
    "start": "1967000",
    "end": "1973120"
  },
  {
    "text": "interesting uh observation is that uh originally with with SP ify we Supply",
    "start": "1973120",
    "end": "1979159"
  },
  {
    "text": "the the surface rectangle size at the in 16 integer format but after surface",
    "start": "1979159",
    "end": "1984679"
  },
  {
    "text": "control is called after s skill is called and when when we call surface control uh this this rectangle is",
    "start": "1984679",
    "end": "1992159"
  },
  {
    "text": "transformed to representation in the i e 754 format which is a float number and",
    "start": "1992159",
    "end": "1998639"
  },
  {
    "text": "finally after this steps this is we will provide rectangles from your space and",
    "start": "1998639",
    "end": "2004480"
  },
  {
    "text": "the rectangles are scaled and combined to form a pair and finally we cause Summit swap to to Summit the surface and",
    "start": "2004480",
    "end": "2011559"
  },
  {
    "text": "the summit swap will uh do additionally a normalization on this which is uh the",
    "start": "2011559",
    "end": "2018080"
  },
  {
    "text": "bleed operation or actually what the bleed operation does and it will finally",
    "start": "2018080",
    "end": "2024120"
  },
  {
    "text": "submitted to the GPU uh an an important parameter for the",
    "start": "2024120",
    "end": "2030919"
  },
  {
    "start": "2027000",
    "end": "2077000"
  },
  {
    "text": "for the ble operation which is the function bleed 3D submit commands is a bleed param T the bleed param T is",
    "start": "2030919",
    "end": "2037440"
  },
  {
    "text": "actually a a very big structure I believe has hundreds of bites and uh uh",
    "start": "2037440",
    "end": "2043679"
  },
  {
    "text": "we we use reverse engineering to to deduce some fields and the most",
    "start": "2043679",
    "end": "2049079"
  },
  {
    "text": "interesting to is the the two in at offset 14 and offset 34 which is the",
    "start": "2049079",
    "end": "2055520"
  },
  {
    "text": "target surface the target surface is us the physical surface of the of the",
    "start": "2055520",
    "end": "2061960"
  },
  {
    "text": "hardware and the target surface wi and hit and the pair we mentioned before",
    "start": "2061960",
    "end": "2067560"
  },
  {
    "text": "that is a rectangle rectangle par T and the bleed par T will be submitted uh from submit swap to the",
    "start": "2067560",
    "end": "2075240"
  },
  {
    "text": "bleed 3D submit commands the B sub 3D submit commands is an implementation in the Intel Graphics",
    "start": "2075240",
    "end": "2082520"
  },
  {
    "start": "2077000",
    "end": "2157000"
  },
  {
    "text": "to do the ble operation and uh as we as we have see before that uh user space",
    "start": "2082520",
    "end": "2089200"
  },
  {
    "text": "applications can provide a different different logical surfaces and the this",
    "start": "2089200",
    "end": "2094358"
  },
  {
    "text": "function need to normalize them to normalize them as a valid rectangle to be this to be processed by the GPU so it",
    "start": "2094359",
    "end": "2102480"
  },
  {
    "text": "will uh crop and resize different incoming surfaces to match what the GPU",
    "start": "2102480",
    "end": "2108480"
  },
  {
    "text": "is happy with and after normalization two flashing rectangles will be submitted to GPU where the b r list",
    "start": "2108480",
    "end": "2116160"
  },
  {
    "text": "function so there is Overflow in this B 3D submit commands and as we know that",
    "start": "2116160",
    "end": "2122160"
  },
  {
    "text": "from reverse Eng we found that the OSX Graphics calling system it only accepts",
    "start": "2122160",
    "end": "2127720"
  },
  {
    "text": "rectangle in a Range like 0 0 4 4,000 4,000 in a he format to draw the",
    "start": "2127720",
    "end": "2133720"
  },
  {
    "text": "physical screen however as we have seen before a logical screen has a field of",
    "start": "2133720",
    "end": "2139119"
  },
  {
    "text": "intersecting format and it is a ass signed integer so that actually it can",
    "start": "2139119",
    "end": "2144160"
  },
  {
    "text": "represent numbers at a range like negative 8,000 to positive 7 ffff so the",
    "start": "2144160",
    "end": "2150240"
  },
  {
    "text": "bleed function need to scale this logic rectangle to fit in the spal range or the GPU will not be happy with this",
    "start": "2150240",
    "end": "2156359"
  },
  {
    "text": "rectangle so now now let's dive into the deom the dis disassembly and the decomil code of",
    "start": "2156359",
    "end": "2163599"
  },
  {
    "start": "2157000",
    "end": "2238000"
  },
  {
    "text": "this 3D submit commands and first we can see that it checked for the current surface which is a logic surface White",
    "start": "2163599",
    "end": "2170640"
  },
  {
    "text": "and the target surface hit and if either of them is larger than 4,000 so at Houston we need to scale the rectangles",
    "start": "2170640",
    "end": "2177480"
  },
  {
    "text": "now to to be accepted by the GPU and first it allocates a temporary buffer",
    "start": "2177480",
    "end": "2182599"
  },
  {
    "text": "which is a vector uh the size is decided by a hit uh divide 4,000",
    "start": "2182599",
    "end": "2188079"
  },
  {
    "text": "it and it help to store the process normalized rectangles in this vector and",
    "start": "2188079",
    "end": "2194000"
  },
  {
    "text": "the target surface Vector as I had stated before that it comes from a full screen resource uh it is uh which means",
    "start": "2194000",
    "end": "2200760"
  },
  {
    "text": "that is decided by the physical screen resolution for a non-retinal Macbook it has a resolution of 1440 multiplies 900",
    "start": "2200760",
    "end": "2209240"
  },
  {
    "text": "and so for this MacBook be model is hit is 9 900 but as we know that even for",
    "start": "2209240",
    "end": "2216839"
  },
  {
    "text": "retina Mac retin Max do not have a resolution screen resolution that have a",
    "start": "2216839",
    "end": "2222680"
  },
  {
    "text": "larger heit than 4,000 and even for 4K screens it heit is still smaller than",
    "start": "2222680",
    "end": "2229319"
  },
  {
    "text": "4,000 in HEX format so we can see that the it the vector array allocated here",
    "start": "2229319",
    "end": "2235040"
  },
  {
    "text": "always has a lens that is fixed to one and these two figures actually",
    "start": "2235040",
    "end": "2240079"
  },
  {
    "text": "illustrates how a normalization occurs and the the the r uh the re rectangle is",
    "start": "2240079",
    "end": "2246079"
  },
  {
    "text": "the target surface to be drawn on and the green rectangle and the blue rectangle are two logical surfaces that",
    "start": "2246079",
    "end": "2252440"
  },
  {
    "text": "is provided by user and it will be normalized to be drawn on the on the",
    "start": "2252440",
    "end": "2257640"
  },
  {
    "text": "target region which is the target surface and then let's let's go through",
    "start": "2257640",
    "end": "2263440"
  },
  {
    "text": "uh this split 3D submit command function and uh we found this holy bun sheet and",
    "start": "2263440",
    "end": "2268720"
  },
  {
    "start": "2265000",
    "end": "2337000"
  },
  {
    "text": "uh it is because that there are many floating instruction involved in this in",
    "start": "2268720",
    "end": "2274280"
  },
  {
    "text": "this function as we know that because you have called the set skill to convert",
    "start": "2274280",
    "end": "2279599"
  },
  {
    "text": "the uh rectangles attribute to a float number so there are many float in floating instruction involved here and",
    "start": "2279599",
    "end": "2285839"
  },
  {
    "text": "Ida hyres actually cannot properly handle this the punal things so we we go",
    "start": "2285839",
    "end": "2292400"
  },
  {
    "text": "through this disb code and we re we rewrite the algorithm to a more like a",
    "start": "2292400",
    "end": "2298200"
  },
  {
    "text": "clear format but you can see it's still uh not very short but uh uh long words",
    "start": "2298200",
    "end": "2304920"
  },
  {
    "text": "but uh actually uh if you understand this algorithm the thing it did the thing it does is actually not very",
    "start": "2304920",
    "end": "2311920"
  },
  {
    "text": "complex it just to uh for example we have we have stated that there are two",
    "start": "2311920",
    "end": "2319160"
  },
  {
    "text": "rectangles two logical rectangles that is supplied by the uer space that one is the original one and the other one is",
    "start": "2319160",
    "end": "2325760"
  },
  {
    "text": "the scaled one the two rectangles uh the the place 3D submit command function will calculate that it need to decide on",
    "start": "2325760",
    "end": "2334040"
  },
  {
    "text": "the scale factor so that the two rectangles as you can see this two like",
    "start": "2334040",
    "end": "2339359"
  },
  {
    "start": "2337000",
    "end": "2505000"
  },
  {
    "text": "a green rectangle and a blue rectangle they need to both be be normalized into",
    "start": "2339359",
    "end": "2345040"
  },
  {
    "text": "this physical region so they need to be normalized using using a same scale factor and if the two rectangles are uh",
    "start": "2345040",
    "end": "2354440"
  },
  {
    "text": "already in screen as you can see in the first if uh statement then it will not",
    "start": "2354440",
    "end": "2360079"
  },
  {
    "text": "do normalize I just prove this preserve this rectangle but if have have a right",
    "start": "2360079",
    "end": "2365839"
  },
  {
    "text": "boundary or left boundary AO screen and we will do some substantial options but forour for back and uh we",
    "start": "2365839",
    "end": "2374839"
  },
  {
    "text": "can see that in at line one it allocates it access it access it Vector based on",
    "start": "2374839",
    "end": "2381880"
  },
  {
    "text": "index that is calculated by divide rectangle the second rectangle x",
    "start": "2381880",
    "end": "2387839"
  },
  {
    "text": "coordinate to 4,000 hex format but as we can as we remember that the vector the",
    "start": "2387839",
    "end": "2395599"
  },
  {
    "text": "vector array only have a size of fix one but the x coordinate of the second",
    "start": "2395599",
    "end": "2401760"
  },
  {
    "text": "rectangle is can be decided by the uter space so there is an obvious OB access",
    "start": "2401760",
    "end": "2408880"
  },
  {
    "text": "condition here that the vector is retrieved and accessed after and we can see that this rectangle",
    "start": "2408880",
    "end": "2416440"
  },
  {
    "text": "is access is is retried access here that we can see that the vector at function",
    "start": "2416440",
    "end": "2422040"
  },
  {
    "text": "call and the rectangles attributes is is combined to a pair and the vector IG",
    "start": "2422040",
    "end": "2429319"
  },
  {
    "text": "Vector ad function is called on this OB location so as a conclusion that this",
    "start": "2429319",
    "end": "2435599"
  },
  {
    "text": "code implicitly assume that if the Y is smaller than 4,000 then the incoming surface heit will also be 4,000 and this",
    "start": "2435599",
    "end": "2442960"
  },
  {
    "text": "is true for Windows Server I believe because Windows server is also written by Apple uh programmers but not for",
    "start": "2442960",
    "end": "2448960"
  },
  {
    "text": "funky clients like us for example uh we can supply a surface with a rectangle",
    "start": "2448960",
    "end": "2454839"
  },
  {
    "text": "with a second rectangle X coordinat set to value larger than 4,000 so the line one will goes out of bound just after",
    "start": "2454839",
    "end": "2462119"
  },
  {
    "text": "this uh Vector that it access the second vector and uh then IG Vector fun add",
    "start": "2462119",
    "end": "2468640"
  },
  {
    "text": "function will be called on it OB location and after some testing we choose to use this uh four attributes",
    "start": "2468640",
    "end": "2475680"
  },
  {
    "text": "that 4141 4141 FF FF FF FF as as a rectangle and uh it will be uh",
    "start": "2475680",
    "end": "2482839"
  },
  {
    "text": "normalized to uh y coordinate 1 6 70 5 and X Co 3 to 1 and H and L hit and",
    "start": "2482839",
    "end": "2491240"
  },
  {
    "text": "length both to1 and the trigger one o be right and then it will bu out in this in",
    "start": "2491240",
    "end": "2497160"
  },
  {
    "text": "the well condition so we have an OB right on this IG Vector ad but what does the IG what",
    "start": "2497160",
    "end": "2503560"
  },
  {
    "text": "is IG vector and what does IG Vector add does we need to revisit the IG Vector structure the IG Vector structure is",
    "start": "2503560",
    "end": "2510520"
  },
  {
    "start": "2505000",
    "end": "2580000"
  },
  {
    "text": "actually 24 bytes structure with three Fields one is the vector's size and one",
    "start": "2510520",
    "end": "2516119"
  },
  {
    "text": "the vector's capability capacity and the the the third attribute is the vector's",
    "start": "2516119",
    "end": "2522640"
  },
  {
    "text": "backing storage pointer and if when the vulnerability occurs we can see that the",
    "start": "2522640",
    "end": "2527760"
  },
  {
    "text": "vulnerable allocation is in the 40 the kog 48 Zone and the first uh 0 0x 28 is",
    "start": "2527760",
    "end": "2537000"
  },
  {
    "text": "the size of this allocation as we can see that the new operator is called and the new operator will store the size and",
    "start": "2537000",
    "end": "2543480"
  },
  {
    "text": "the metadata at the head of this allocation and the one uh it deduce that",
    "start": "2543480",
    "end": "2549359"
  },
  {
    "text": "the vector the new uh the new operator new array operator allocates array of",
    "start": "2549359",
    "end": "2555160"
  },
  {
    "text": "size one and finally the three size capability capacity and storage pointers",
    "start": "2555160",
    "end": "2560480"
  },
  {
    "text": "follows after this metadata and this is the B and valid AG Vector but",
    "start": "2560480",
    "end": "2565599"
  },
  {
    "text": "unfortunately when the OB occurs it just go it goes right behind this beny IG",
    "start": "2565599",
    "end": "2571559"
  },
  {
    "text": "vector and the de beef and the blue rectangles are blue regions are",
    "start": "2571559",
    "end": "2576640"
  },
  {
    "text": "interpreted as another F fake IG vector and the IG Vector at function",
    "start": "2576640",
    "end": "2582599"
  },
  {
    "text": "actually we can see that we can utilize this function to achieve like an",
    "start": "2582599",
    "end": "2587960"
  },
  {
    "text": "orbitary the orbitary right anywhere but the value is not is constrained and we",
    "start": "2587960",
    "end": "2594160"
  },
  {
    "text": "cannot write arbitrary value as we can see that rcx is written to the RX plus",
    "start": "2594160",
    "end": "2601160"
  },
  {
    "text": "RSI plus 18 and and 10 and the vice versa and the the but rcx is retrieved",
    "start": "2601160",
    "end": "2608520"
  },
  {
    "text": "from R14 which is the rectangles which is the rectangle attribute and uh if if",
    "start": "2608520",
    "end": "2613640"
  },
  {
    "text": "you remember what I've said in the previous slides it is a floating",
    "start": "2613640",
    "end": "2619160"
  },
  {
    "text": "number so uh we got an OB right and uh in this kog 48 Zone and we need to do a",
    "start": "2619160",
    "end": "2626520"
  },
  {
    "text": "hip fun to ensure that what follows after this benai block is content that",
    "start": "2626520",
    "end": "2632880"
  },
  {
    "text": "we can stabilize we can stable and we can stabilize control it",
    "start": "2632880",
    "end": "2639039"
  },
  {
    "text": "uh previous methods uh like uh VM map copy and the open service extend dat are",
    "start": "2639079",
    "end": "2644599"
  },
  {
    "text": "known methods to prepare the OSX and iOS Cal memory but there is a problem for",
    "start": "2644599",
    "end": "2651400"
  },
  {
    "text": "our exploitation because we are we are dancing in the K 48 Zone and there is a",
    "start": "2651400",
    "end": "2657280"
  },
  {
    "text": "very annoying thing called iak Port I Mar Port is also have a size of uh 48",
    "start": "2657280",
    "end": "2663960"
  },
  {
    "text": "and it will for in also in this Zone and when need to get rid of it to get a stable Heap",
    "start": "2663960",
    "end": "2669880"
  },
  {
    "text": "control but previous methods have their fullbacks and the O message spray which",
    "start": "2669880",
    "end": "2675920"
  },
  {
    "text": "uh construct vmf copy in the kernel hip uh the head 18 bytes is not controllable",
    "start": "2675920",
    "end": "2681480"
  },
  {
    "text": "but we definitely need control of the eight bites at the head uh eight byes of",
    "start": "2681480",
    "end": "2686520"
  },
  {
    "text": "set position and I open service extended have a massive set effect in this uh kog",
    "start": "2686520",
    "end": "2692319"
  },
  {
    "text": "4 Zone because it will produce an i Mark port in every open uh service",
    "start": "2692319",
    "end": "2698839"
  },
  {
    "text": "connection so we are we are presenting a new method called I catalog Sy data and",
    "start": "2698839",
    "end": "2705160"
  },
  {
    "text": "I will not talk about the detail here and if you are interested you can refer to our blog post due to the time limitation uh but to uh to use this",
    "start": "2705160",
    "end": "2712720"
  },
  {
    "text": "method uh you can just pass in an XML and uh prepare your spread content in",
    "start": "2712720",
    "end": "2718040"
  },
  {
    "text": "this array like in OS string OS data format the good thing the good thing for",
    "start": "2718040",
    "end": "2723800"
  },
  {
    "text": "our Catal and data is that it will not cause side effect in the K 48 Zone and",
    "start": "2723800",
    "end": "2729520"
  },
  {
    "text": "you can just use the master port to spray to prepare your memory content in",
    "start": "2729520",
    "end": "2734680"
  },
  {
    "text": "the Cur and you can control all content of the of the OS using OS string OS",
    "start": "2734680",
    "end": "2742079"
  },
  {
    "text": "data so finally we come up this following steps in the K 48 Zone first",
    "start": "2742079",
    "end": "2748160"
  },
  {
    "text": "we spray about 8,000 combination 148 by V map copy and the uh 40 and 40 OS",
    "start": "2748160",
    "end": "2755319"
  },
  {
    "text": "strings in one catalog catalog send data in location and the content which is",
    "start": "2755319",
    "end": "2761440"
  },
  {
    "text": "prepared and controlled by us and then we free we free the wmap copies in one SE to two SE parts so that we can dig",
    "start": "2761440",
    "end": "2768720"
  },
  {
    "text": "hes in the allocation and finally we trigger this uh trigger the vulnerability in the B 3D submit",
    "start": "2768720",
    "end": "2774599"
  },
  {
    "text": "commands and the vulnerable allocation will fall in the hole with previous left so these figures I think will illustrate",
    "start": "2774599",
    "end": "2781319"
  },
  {
    "text": "more clearly illustrate the steps more clearly first we have the O message and",
    "start": "2781319",
    "end": "2786559"
  },
  {
    "text": "the control blocks specified by the Catalin data and then we kick out o",
    "start": "2786559",
    "end": "2792200"
  },
  {
    "text": "messages and so that we can leave host in this in this content and then we",
    "start": "2792200",
    "end": "2797240"
  },
  {
    "text": "trigger this SP 3D submit commands and it will allocate buffers uh in the free",
    "start": "2797240",
    "end": "2802880"
  },
  {
    "text": "in the fre uh address uh due to the nature of the OSX kernel Al zone",
    "start": "2802880",
    "end": "2809319"
  },
  {
    "text": "allocator so that uh we need to ensure that what follows after this 40 48 block",
    "start": "2809319",
    "end": "2815599"
  },
  {
    "text": "uh what what uh is filled after this IG Vector is cont we can control and so",
    "start": "2815599",
    "end": "2822400"
  },
  {
    "text": "that we spray more we spray like a 50 controlled blocks so that uh we we hope that I Mar portal will not fall right",
    "start": "2822400",
    "end": "2829400"
  },
  {
    "text": "after the vector array to break our exploitation and if you spray more blocks and less chance that I Mark",
    "start": "2829400",
    "end": "2836200"
  },
  {
    "text": "portal will appear right in the head of this controlled blocks and we use this",
    "start": "2836200",
    "end": "2841440"
  },
  {
    "text": "approach to uh appro to to get about 100 stability 100% stability of this K 48",
    "start": "2841440",
    "end": "2850400"
  },
  {
    "text": "function uh so after this steps you get an stable OB right in the K 40 48 Zone",
    "start": "2850400",
    "end": "2858280"
  },
  {
    "text": "and you can use this OB to overwrite arbitrary address in the curle but the value you you have write what but the",
    "start": "2858280",
    "end": "2865559"
  },
  {
    "text": "value you can write is the constraint to a flow number and also in a range in a Range that is not very big uh so you",
    "start": "2865559",
    "end": "2873800"
  },
  {
    "text": "still need additional work to turn into to uh RP control and info leak and this",
    "start": "2873800",
    "end": "2879559"
  },
  {
    "text": "figure will give you an overview of what we do next and uh uh actually we have",
    "start": "2879559",
    "end": "2884800"
  },
  {
    "text": "presented in the Recon slides so we will not talk about very much of about detail here but michco will give you a brief",
    "start": "2884800",
    "end": "2890760"
  },
  {
    "text": "introduction on this thank",
    "start": "2890760",
    "end": "2894680"
  },
  {
    "start": "2896000",
    "end": "2944000"
  },
  {
    "text": "you so um like flanker said uh we will give a brief uh introduction for",
    "start": "2896079",
    "end": "2902800"
  },
  {
    "text": "exploitation so we have a arbitrary right where primitive but but our our",
    "start": "2902800",
    "end": "2908359"
  },
  {
    "text": "value value that we write is constrained to be a float and U so we use this uh",
    "start": "2908359",
    "end": "2914800"
  },
  {
    "text": "arbitrary 4 byte of right to to write this uh value BF",
    "start": "2914800",
    "end": "2920720"
  },
  {
    "text": "8000000 which is a valid float to overwrite the less significant 4 byte of",
    "start": "2920720",
    "end": "2927680"
  },
  {
    "text": "U service pointer of IO user client so as you can see at the bottom there is",
    "start": "2927680",
    "end": "2933599"
  },
  {
    "text": "the the this pointer before and after overwrite and uh uh after the override this",
    "start": "2933599",
    "end": "2939799"
  },
  {
    "text": "pointer will point to our uh controlled hip location so uh like uh um many people",
    "start": "2939799",
    "end": "2949839"
  },
  {
    "start": "2944000",
    "end": "3023000"
  },
  {
    "text": "may know uh on OSX there is Kernel aslr so we need to bypass it uh so we will",
    "start": "2949839",
    "end": "2957559"
  },
  {
    "text": "abuse some external method of igxl video context which is a iio user client for",
    "start": "2957559",
    "end": "2964079"
  },
  {
    "text": "graphic to bypass kslr and then gain uh instruction pointer",
    "start": "2964079",
    "end": "2969559"
  },
  {
    "text": "control so we choose to overwrite the accelerator field which is at offset uh",
    "start": "2969559",
    "end": "2975599"
  },
  {
    "text": "528 uh remember this number because uh we will use it again and uh we'll point",
    "start": "2975599",
    "end": "2981960"
  },
  {
    "text": "it to our controlled location and then after we abuse this external method get",
    "start": "2981960",
    "end": "2987960"
  },
  {
    "text": "Hardware settings to leak one by uh at a time to user space and uh first we read",
    "start": "2987960",
    "end": "2994079"
  },
  {
    "text": "the V table and then we follow the be able to uh read the uh OS object release",
    "start": "2994079",
    "end": "3001000"
  },
  {
    "text": "uh text address and in this way we can obtain the kslr",
    "start": "3001000",
    "end": "3006359"
  },
  {
    "text": "slide so uh as you can see here there is some de compiled code from the method and the accelerator is pointing to our",
    "start": "3006359",
    "end": "3013799"
  },
  {
    "text": "our location and the H H array is actually returned to user space so we we",
    "start": "3013799",
    "end": "3020880"
  },
  {
    "text": "get one bite of infol so this is a diagram of the",
    "start": "3020880",
    "end": "3028319"
  },
  {
    "start": "3028000",
    "end": "3062000"
  },
  {
    "text": "infol and uh uh now that we have kslr slide we can uh uh rebase our R chain",
    "start": "3028319",
    "end": "3034599"
  },
  {
    "text": "and we can start executing Kel so at the end of our R chain we we'll invoke this",
    "start": "3034599",
    "end": "3040839"
  },
  {
    "text": "uh nice OSX method which is K UNC execute which is communicating with a",
    "start": "3040839",
    "end": "3046799"
  },
  {
    "text": "user space uh demon and uh it allow you to execute arbitrary binary as root so",
    "start": "3046799",
    "end": "3053760"
  },
  {
    "text": "in this way we can bypass map map and the Sip and uh spawn a root OSX",
    "start": "3053760",
    "end": "3062720"
  },
  {
    "start": "3062000",
    "end": "3089000"
  },
  {
    "text": "calculator uh so the last piece missing is uh gaining a instruction pointer",
    "start": "3062720",
    "end": "3067880"
  },
  {
    "text": "control um again we will abuse another external method of IG Axel video context",
    "start": "3067880",
    "end": "3074680"
  },
  {
    "text": "in particular of his super class IO Axel context two and uh this method is called",
    "start": "3074680",
    "end": "3081400"
  },
  {
    "text": "context finish and as you recall we over overwrite a pointer at of at 0x",
    "start": "3081400",
    "end": "3089119"
  },
  {
    "start": "3089000",
    "end": "3104000"
  },
  {
    "text": "528 so here it's uh the disassembly of the method so",
    "start": "3089119",
    "end": "3094760"
  },
  {
    "text": "basically the the pointer at the offset 528 is taken and then we do this virtual",
    "start": "3094760",
    "end": "3101599"
  },
  {
    "text": "method call and we start execute so uh for time constraint uh we",
    "start": "3101599",
    "end": "3108640"
  },
  {
    "start": "3104000",
    "end": "3205000"
  },
  {
    "text": "have to leave the details for the white paper uh but we can do a cool demo and",
    "start": "3108640",
    "end": "3113920"
  },
  {
    "text": "uh uh interestingly um you cannot launch a OSX calculator uh with with pseudo so",
    "start": "3113920",
    "end": "3121400"
  },
  {
    "text": "if you see a root calculator on your system you have being",
    "start": "3121400",
    "end": "3126359"
  },
  {
    "text": "pwn I play a video and the uh the video self it's quite self expl",
    "start": "3131839",
    "end": "3141280"
  },
  {
    "text": "oh credits to Han Zimmer for this background music",
    "start": "3148760",
    "end": "3154160"
  },
  {
    "text": "okay thank you for watching the [Applause]",
    "start": "3187599",
    "end": "3195078"
  },
  {
    "text": "video okay okay so because time is is tight so",
    "start": "3199799",
    "end": "3207200"
  },
  {
    "start": "3205000",
    "end": "3244000"
  },
  {
    "text": "we have to stop here so before we finish we would like to thank the following guys uh the first one is who is the head",
    "start": "3207200",
    "end": "3216359"
  },
  {
    "text": "of King security lab and the second is wind no uh who from pangu and Luca is",
    "start": "3216359",
    "end": "3222680"
  },
  {
    "text": "very famous on Twitter and we discussed a lot in the website in the Twitter and",
    "start": "3222680",
    "end": "3229319"
  },
  {
    "text": "the UFO Talent is a friend of flanker and he give us a lot of advice about",
    "start": "3229319",
    "end": "3236440"
  },
  {
    "text": "about how to uh reverse engineering the graphics shet okay lastly thank you",
    "start": "3236440",
    "end": "3243910"
  },
  {
    "text": "[Applause]",
    "start": "3243910",
    "end": "3246359"
  }
]