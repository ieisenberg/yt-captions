[
  {
    "text": "we're going to be talking about titled network defender archaeology walking through some offensive stuff with decom",
    "start": "60",
    "end": "6210"
  },
  {
    "text": "as well as our research which is primarily defensive on top of that now before we get going my name is Justin",
    "start": "6210",
    "end": "12179"
  },
  {
    "text": "Warner I'm on Twitter I go by a handle six dub I'm a principal security engineer at a company named gigamon I'm",
    "start": "12179",
    "end": "19710"
  },
  {
    "text": "primarily on our applied threat research team so I spend my days looking at lots of network data trying to find bad guys doing bad things",
    "start": "19710",
    "end": "25350"
  },
  {
    "text": "my background is pretty varied I spent a couple years in the US military doing defensive work and counterintelligence",
    "start": "25350",
    "end": "31170"
  },
  {
    "text": "work and then I got bored with that and decided I wanted to go break into places for a living did that for three or four years of the",
    "start": "31170",
    "end": "37469"
  },
  {
    "text": "small consulting company in the u.s. worked on some public tools PowerShell empire veil some of the other tools and",
    "start": "37469",
    "end": "44129"
  },
  {
    "text": "then after breaking into places using the same technique for three and a half years I decided I wanted to try to stop",
    "start": "44129",
    "end": "50399"
  },
  {
    "text": "it for once and so pivoted back to the blue side here I'm speaking with Alex here hi my",
    "start": "50399",
    "end": "56969"
  },
  {
    "text": "name is Alex sir I'm a security engineer at gigamon with the a PR team background not quite as exciting as Justin's yet I",
    "start": "56969",
    "end": "63629"
  },
  {
    "text": "was an intern with iceberg and later a security engineer and I recently graduated from the University of",
    "start": "63629",
    "end": "68700"
  },
  {
    "text": "Washington so with a lot of these",
    "start": "68700",
    "end": "74280"
  },
  {
    "text": "conference talks here it's really good to start out most research nowadays is always built on top of the research of other people so I like to start out",
    "start": "74280",
    "end": "80729"
  },
  {
    "text": "every conference talk and say thinks this research was really inspired and driven by all the people who came out on the offensive side and pioneered these",
    "start": "80729",
    "end": "86790"
  },
  {
    "text": "techniques and found them so a couple of folks are down below Casey Matt Phil and Joe big shout out to these guys our work",
    "start": "86790",
    "end": "93090"
  },
  {
    "text": "builds on top of it highly recommend following them or checking them out if you get the chance so we're gonna start with a little bit of a fun story so why",
    "start": "93090",
    "end": "99270"
  },
  {
    "text": "are we here today so it's the 90s let's take a step back some people might not even be born then Alex we have cool",
    "start": "99270",
    "end": "106829"
  },
  {
    "text": "movies like hackers that start to come out making this scene popular people start to realize this is a thing we have",
    "start": "106829",
    "end": "112619"
  },
  {
    "text": "really sexy computers these things are workhorses they never fail never break",
    "start": "112619",
    "end": "117810"
  },
  {
    "text": "really sexy operating systems you got Windows three one here that's really the powerhouse and then this operating",
    "start": "117810",
    "end": "123630"
  },
  {
    "text": "system starts to grow and it's built on top of old technologies but there's old technology stick along they have to be",
    "start": "123630",
    "end": "129840"
  },
  {
    "text": "there because people built things on Windows three one and they want them to work forever one of those technologies",
    "start": "129840",
    "end": "135050"
  },
  {
    "text": "happens to be a system called decom we're gonna be talking about but then when you pivot into the modern day with",
    "start": "135050",
    "end": "140480"
  },
  {
    "text": "all these youngsters you got Matt Nelson running around they're focused on breaking all these old sub systems so no",
    "start": "140480",
    "end": "145970"
  },
  {
    "text": "longer are they worried about using them for good things they're looking at them as a way to get in cyber reason has a",
    "start": "145970",
    "end": "151370"
  },
  {
    "text": "great blog detailing some of this guy named Bo hops does an awesome research into this these this technology is now",
    "start": "151370",
    "end": "157490"
  },
  {
    "text": "part of threat models and ways and document and methods that bad guys such as many of the Iranian threat groups are",
    "start": "157490",
    "end": "164120"
  },
  {
    "text": "using to get into networks so it all started with old technology and sexy operating systems and now we land in",
    "start": "164120",
    "end": "169970"
  },
  {
    "text": "despair in threats so let's what are we here to talk about we're here to talk about this so quick video really quick",
    "start": "169970",
    "end": "176690"
  },
  {
    "text": "demo purely using a protocol called decom in a language called powershell we're able to pop a calque on our remote",
    "start": "176690",
    "end": "182240"
  },
  {
    "text": "system yay calc it's the best thing to show and you'll see this is all the defensive telemetry we get with Zeke and",
    "start": "182240",
    "end": "189440"
  },
  {
    "text": "Suri you'll see it's a whole lot of mumbo-jumbo nothing even says the word decom nothing's logged and Suri using",
    "start": "189440",
    "end": "195980"
  },
  {
    "text": "popular open source free rulesets you don't see any massive alerts blowing up that a well-known and documented",
    "start": "195980",
    "end": "201709"
  },
  {
    "text": "technique was launched and so that's what we're here to talk about today how to how to improve and you'll see this is",
    "start": "201709",
    "end": "207440"
  },
  {
    "text": "another zoomin of that bro or Zeke log this is just a hot mess so you can",
    "start": "207440",
    "end": "213110"
  },
  {
    "text": "clearly see that it's very hard to discern what actually happened here so",
    "start": "213110",
    "end": "218510"
  },
  {
    "text": "we're here to talk about the fact that adversaries are using this technique red teams are using this technique it's been",
    "start": "218510",
    "end": "223730"
  },
  {
    "text": "around for a couple years yet nothing rarely addresses it so our challenge is to rise through the",
    "start": "223730",
    "end": "229519"
  },
  {
    "text": "occasion of understanding this technique understand the protocol which is a big enough challenge on its own understand",
    "start": "229519",
    "end": "234680"
  },
  {
    "text": "what makes it malicious and then author and adapt our tools to allow us to",
    "start": "234680",
    "end": "239720"
  },
  {
    "text": "detect it and we're going to focus primarily on the network so let's go ahead and get started this is one of",
    "start": "239720",
    "end": "246650"
  },
  {
    "text": "Justin's favorite slides actually early on we grabbed a sampling of books on decon and justin pointed out how a lot",
    "start": "246650",
    "end": "252680"
  },
  {
    "text": "of these books were older than I am so again just a little bit more perspective on how long this thing has been around for but before we can dive into decom we",
    "start": "252680",
    "end": "260570"
  },
  {
    "text": "want to talk a little bit more about calm or the component object model and this is a language independent model",
    "start": "260570",
    "end": "265990"
  },
  {
    "text": "allows applications to expose objects with functionality to a system so what",
    "start": "265990",
    "end": "272259"
  },
  {
    "text": "exactly does that mean it means that objects can be written in any language of a programmers choosing and then other",
    "start": "272259",
    "end": "278740"
  },
  {
    "text": "programmers can use that object also in any language of their choosing to gain functionality from it this is kind of a",
    "start": "278740",
    "end": "284319"
  },
  {
    "text": "big deal as it allowed things such as getting away from shared libraries being imported into projects and it also made",
    "start": "284319",
    "end": "290500"
  },
  {
    "text": "all these objects very first time and portable which was great these objects are identified using something called a",
    "start": "290500",
    "end": "296650"
  },
  {
    "text": "class identifier these are globally unique and so they'll be the same for the same object across all systems and",
    "start": "296650",
    "end": "302650"
  },
  {
    "text": "what this means is that you can use them to look up and correlate exactly what object is being used so for example when",
    "start": "302650",
    "end": "309400"
  },
  {
    "text": "something like Microsoft Word is being installed it'll install a couple objects and if any of those objects CLS IDs show",
    "start": "309400",
    "end": "316240"
  },
  {
    "text": "up in logs or over the network you can immediately go take that ID look it up",
    "start": "316240",
    "end": "321849"
  },
  {
    "text": "and immediately correlate what object was being used and you can start to get an idea of what's happening in an",
    "start": "321849",
    "end": "328120"
  },
  {
    "text": "environment and so we say on these slides that components are typically registered there are a couple ways to kind of get around this and use comm",
    "start": "328120",
    "end": "335050"
  },
  {
    "text": "objects' when they're not explicitly registered but for the purpose of this we're not going to get too far into that",
    "start": "335050",
    "end": "340590"
  },
  {
    "text": "we also say that components implement multiple interfaces and these interfaces",
    "start": "340590",
    "end": "346270"
  },
  {
    "text": "are purely for interoperability so these help to define and expose common",
    "start": "346270",
    "end": "351280"
  },
  {
    "text": "functionality to any component that decides to implement them and one of these interfaces of note is the I",
    "start": "351280",
    "end": "357069"
  },
  {
    "text": "dispatch interface and this helps to provide automation so that means that a client can interact with an object at",
    "start": "357069",
    "end": "363039"
  },
  {
    "text": "runtime the eye system activator interface is also pretty cool as that helps to work with the instantiation of",
    "start": "363039",
    "end": "369789"
  },
  {
    "text": "an object and it can either do this directly or through an AI class factory kind of pass through and so in our",
    "start": "369789",
    "end": "376569"
  },
  {
    "text": "bottom image here we show an example object you can see that it implements multiple interfaces and that can be any",
    "start": "376569",
    "end": "383710"
  },
  {
    "text": "interface that the programmer chooses however the one interface that it must implement which is defined by comm is the ion milling interface so every",
    "start": "383710",
    "end": "389979"
  },
  {
    "text": "common object must have the I unknown interface on the side here we have a breakdown of our MMC",
    "start": "389979",
    "end": "397040"
  },
  {
    "text": "- oh application class this is kind of used for command-line snap-ins and it's",
    "start": "397040",
    "end": "402950"
  },
  {
    "text": "default on windows in the bottom pane there you can see that it influenced a couple interfaces and among them is I",
    "start": "402950",
    "end": "409430"
  },
  {
    "text": "unknown and I dispatch so with comm out of the way we can talk about decom and",
    "start": "409430",
    "end": "415760"
  },
  {
    "text": "become simply is an extension of comm that allows objects be exposed and callable over a network in a distributed",
    "start": "415760",
    "end": "421370"
  },
  {
    "text": "manner hence its name distributed calm be calm uses RPC as its primary",
    "start": "421370",
    "end": "426800"
  },
  {
    "text": "transport protocol where RPC is the protocol that allows services or client",
    "start": "426800",
    "end": "433100"
  },
  {
    "text": "access services across the network on a remote machine and since RPC uses a",
    "start": "433100",
    "end": "438620"
  },
  {
    "text": "client-server model this means that code is executed on the remote server and so this is why comm works as a lateral",
    "start": "438620",
    "end": "444980"
  },
  {
    "text": "movement technique without this code execution on a remote server you're not going to get very far so this is why",
    "start": "444980",
    "end": "451220"
  },
  {
    "text": "again this is a workable protocol for lateral movement so within RPC there are",
    "start": "451220",
    "end": "459440"
  },
  {
    "text": "a couple different calls one of these is bind and this allows a comm interface to be attached and then you can use the",
    "start": "459440",
    "end": "465860"
  },
  {
    "text": "alter context call to kind of navigate between these bound interfaces and interact with the different methods that",
    "start": "465860",
    "end": "471530"
  },
  {
    "text": "that was exposed so those two calls will come up a little bit later as well and then after binding messages can then",
    "start": "471530",
    "end": "478070"
  },
  {
    "text": "be passed using very specific structures so this is how it's going to be seen on the wire so in the decom request we",
    "start": "478070",
    "end": "484550"
  },
  {
    "text": "start out with a simple RPC header followed by something called an RPC that this structure and in this structure",
    "start": "484550",
    "end": "490730"
  },
  {
    "text": "there are a few things such as the comm version being used any flags or extensions and something known as a CID",
    "start": "490730",
    "end": "497270"
  },
  {
    "text": "or a causality identifier this allows calls to kind of be related to each other and this is finished off by any",
    "start": "497270",
    "end": "503720"
  },
  {
    "text": "method arguments that there may be decon response looks pretty similar we have",
    "start": "503720",
    "end": "509510"
  },
  {
    "text": "another RPC header but instead this time we have in our QC that structure this is",
    "start": "509510",
    "end": "515450"
  },
  {
    "text": "pretty simplified and only contains the flags and extensions and this also ends with any method return arguments and",
    "start": "515450",
    "end": "522500"
  },
  {
    "text": "we're gonna be getting into a lot more detail about these method arguments later on",
    "start": "522500",
    "end": "528519"
  },
  {
    "text": "so now that you got a brief overview we wanted to give you another overview and focus more on the offensive side so",
    "start": "529240",
    "end": "535930"
  },
  {
    "text": "starting with calm broadly calm is an extremely useful functionality that",
    "start": "535930",
    "end": "541699"
  },
  {
    "text": "allows adversaries to accomplish different techniques or different tactics across their life cycle it's",
    "start": "541699",
    "end": "546769"
  },
  {
    "text": "beneficial for a number of reasons in general there's been the whole living off the land craze everyone's probably",
    "start": "546769",
    "end": "551899"
  },
  {
    "text": "heard about this kind of falls within that living off the land in the sense that it is native in the windows functionality you don't have to bring",
    "start": "551899",
    "end": "557540"
  },
  {
    "text": "anything along to use it therefore minimizing what you introduce to the environment which is always a good thing as a bad guy but even more so this has",
    "start": "557540",
    "end": "565310"
  },
  {
    "text": "beneficial because it's so legacy and so poorly documented that it's very hard for people who might stumble on the",
    "start": "565310",
    "end": "571699"
  },
  {
    "text": "during an investigation to understand it so it increases that cost of how people having to dive in and do your research",
    "start": "571699",
    "end": "577130"
  },
  {
    "text": "to do defense which is never a good thing you don't want to be in the middle of a VES investigation reading MSDN",
    "start": "577130",
    "end": "582860"
  },
  {
    "text": "articles it's a painful process so they can be used a couple different places as I mentioned a lot of the endpoint focus",
    "start": "582860",
    "end": "590000"
  },
  {
    "text": "talks and blogs out there such as the one by Casey and Matt at the bottom of the slide they focus a lot on the code",
    "start": "590000",
    "end": "595220"
  },
  {
    "text": "execution and persistence components of comm and so we're gonna let you go read dot has anyone read that hints yeah cool",
    "start": "595220",
    "end": "602509"
  },
  {
    "text": "all right so a couple people it's a very great talk I highly recommend it we're gonna focus on this middle category",
    "start": "602509",
    "end": "607540"
  },
  {
    "text": "which is lateral movement now most of you might know but you're enterprises",
    "start": "607540",
    "end": "613699"
  },
  {
    "text": "have calm objects that enable lateral movement all over them so all of these",
    "start": "613699",
    "end": "619040"
  },
  {
    "text": "allow lateral movement pretty much the entire Microsoft Office package enables",
    "start": "619040",
    "end": "624170"
  },
  {
    "text": "calm objects in the local Windows System that exposed abilities to run command lines or load dll's same thing with the MMC object which is",
    "start": "624170",
    "end": "630949"
  },
  {
    "text": "built into systems so this this is a problem and it's just about everywhere so we'll start with the demos and the",
    "start": "630949",
    "end": "637130"
  },
  {
    "text": "demo is to walk through how to find an abusable object so how our researchers finding these first I want to show that",
    "start": "637130",
    "end": "642889"
  },
  {
    "text": "on this system in my demo my default implicit privilege or permission is set",
    "start": "642889",
    "end": "648439"
  },
  {
    "text": "to administrators to allow comm launching so with that assumption that administrators implicitly cannot launch",
    "start": "648439",
    "end": "653990"
  },
  {
    "text": "comm we can go in here we can search for all comm objects using a tool called Ollie view net for anywhere",
    "start": "653990",
    "end": "661220"
  },
  {
    "text": "launch permission is not set on the common object what that means is administrators are allowed to run these objects implicitly you can see the MMC",
    "start": "661220",
    "end": "668269"
  },
  {
    "text": "application is in fact allowed allows administrators to run it through the implicit permission so remotely if I'm",
    "start": "668269",
    "end": "674870"
  },
  {
    "text": "an administrator I can use it that's not always the case now exploring this object can be quite simple you can just",
    "start": "674870",
    "end": "680389"
  },
  {
    "text": "load up the object using something like PowerShell and simply use the help documentation the best way to understand",
    "start": "680389",
    "end": "685670"
  },
  {
    "text": "a lot of these objects is just reading the help so I'm using git member here's a command to essentially lift the help and I'm exploring the object and listing",
    "start": "685670",
    "end": "692930"
  },
  {
    "text": "the different functions involved in listing what's in play so with that in mind let's take the next step let's use",
    "start": "692930",
    "end": "699439"
  },
  {
    "text": "that object that we just explored which we know can be launched by an administrator maliciously so in this demo we essentially are going to do the",
    "start": "699439",
    "end": "706160"
  },
  {
    "text": "first command which is get type from program ID essentially activating and loading that object I'm sorry it's it's",
    "start": "706160",
    "end": "712639"
  },
  {
    "text": "Stan shading an object to the object and we're gonna create instance which actually activates it that's when the network protocols begin and then we're",
    "start": "712639",
    "end": "719389"
  },
  {
    "text": "gonna use a function that was exposed by that object simple function named execute shell command pre blinding in",
    "start": "719389",
    "end": "724970"
  },
  {
    "text": "the face and we're gonna run a calculator on the remote host again calculator could be anything from",
    "start": "724970",
    "end": "730250"
  },
  {
    "text": "PowerShell to any other executable you want to run any of the law bins and other things so three lines of code",
    "start": "730250",
    "end": "737120"
  },
  {
    "text": "native windows functionality code execution requires an administrator like most of lateral movement techniques a",
    "start": "737120",
    "end": "742639"
  },
  {
    "text": "little bit more of a fun one is Excel so Excel actually allows you through decom to load up Excel L plugins which are",
    "start": "742639",
    "end": "749629"
  },
  {
    "text": "essentially a Microsoft Office plugin in Excel so in this case you're not spawning any command-line arguments necessarily like you would be in the",
    "start": "749629",
    "end": "756439"
  },
  {
    "text": "previous case in this case you're gonna plant the DLL on the remote system using I don't SMB and then you're gonna have",
    "start": "756439",
    "end": "762139"
  },
  {
    "text": "Excel forcibly load that DLL and the DLL is just a standard like standard export",
    "start": "762139",
    "end": "768889"
  },
  {
    "text": "standard DLL it can have any functionality you want doesn't have to be formatted specifically and when you load it you can have it do whatever you",
    "start": "768889",
    "end": "775490"
  },
  {
    "text": "want so in this case we pop calcs and again the loading the DLL kind of gets around that command line stuff of having to use",
    "start": "775490",
    "end": "782029"
  },
  {
    "text": "like execute shell command anytime you can force your defenders this crazy to",
    "start": "782029",
    "end": "787550"
  },
  {
    "text": "post-it notes and printouts to do protocol re you succeeded as an attacker",
    "start": "787550",
    "end": "792740"
  },
  {
    "text": "so this is after a a month of diving in on the protocol and trying to write parsers for it Alex had literally gone",
    "start": "792740",
    "end": "799490"
  },
  {
    "text": "mad and wearing tinfoil hats and post-it notes on paper it was the best way he",
    "start": "799490",
    "end": "805040"
  },
  {
    "text": "could find to figure a lot of this out so that we can get into a bit of the behavioral analysis of decom",
    "start": "805040",
    "end": "812500"
  },
  {
    "text": "so justin kind of walked through a little bit an example of how to find abusable objects we're going to talk a",
    "start": "812500",
    "end": "818209"
  },
  {
    "text": "little bit more about what exactly we're looking for in those he mentioned the launch permission detail that's nice as",
    "start": "818209",
    "end": "824779"
  },
  {
    "text": "it can kind of allow an attacker to have a bit more of a broader scope on the user's they target so instead of",
    "start": "824779",
    "end": "830420"
  },
  {
    "text": "targeting a very specific user who's allowed to access an object they can target general administrators with the",
    "start": "830420",
    "end": "835819"
  },
  {
    "text": "lack of launch permission but by far the most important detail is that the objects must have functionality to load",
    "start": "835819",
    "end": "841370"
  },
  {
    "text": "or execute code without it again you're not going to get very far so looking for those specific functions that allow",
    "start": "841370",
    "end": "847639"
  },
  {
    "text": "either you know DOL execution or you know straight command line execution",
    "start": "847639",
    "end": "852829"
  },
  {
    "text": "that's what attackers are going to be looking for and in general there are a couple different ways for people who are",
    "start": "852829",
    "end": "858500"
  },
  {
    "text": "just curious to be looking for these there are a few different ways to do it obviously justin showed off all you view",
    "start": "858500",
    "end": "864980"
  },
  {
    "text": "net that was a great tool for us it's what a lot of the initial researchers on decom used to explore this kind of thing",
    "start": "864980",
    "end": "871220"
  },
  {
    "text": "but for an adversary they're not going to want to go ahead and you know start dropping that so they can use a couple",
    "start": "871220",
    "end": "876410"
  },
  {
    "text": "different methods one of them is remote registration so they can remotely query the registry on a remote system to kind",
    "start": "876410",
    "end": "883160"
  },
  {
    "text": "of start a numerating and understanding what objects they have on that system what objects they may want to target",
    "start": "883160",
    "end": "888459"
  },
  {
    "text": "also there's an awesome class in WMI called win32 decom application this can",
    "start": "888459",
    "end": "894709"
  },
  {
    "text": "be used to help enumerate all of the D column arguments or objects on a system",
    "start": "894709",
    "end": "901509"
  },
  {
    "text": "so when it comes to D comms network behavior there are three main phases there's the activation phase and this is",
    "start": "902430",
    "end": "908070"
  },
  {
    "text": "where an object is instantiated on the remote host there's a series of optional",
    "start": "908070",
    "end": "913380"
  },
  {
    "text": "type operations this is basically where the client resolves any function information understand a little bit more",
    "start": "913380",
    "end": "919080"
  },
  {
    "text": "about how to call these functions and then there's the execution phase where",
    "start": "919080",
    "end": "924450"
  },
  {
    "text": "they're selected execution or they're selected function is then executed so",
    "start": "924450",
    "end": "930060"
  },
  {
    "text": "we're gonna go into depth on each of these phases a bit more we're gonna use our MMC - oh application object within",
    "start": "930060",
    "end": "936990"
  },
  {
    "text": "powershell as our primary example so what justin demoed earlier and so when",
    "start": "936990",
    "end": "942420"
  },
  {
    "text": "it comes to the activation phase these were the network functions that occurred so first there are these i oxidant",
    "start": "942420",
    "end": "949140"
  },
  {
    "text": "operations and this is where the client binds to the remote RPC server then",
    "start": "949140",
    "end": "954510"
  },
  {
    "text": "there is a series of authentication and authorization requests making sure the client is good to go once that gets the",
    "start": "954510",
    "end": "959820"
  },
  {
    "text": "thumbs up PowerShell in this case since that's what we're using issues and I",
    "start": "959820",
    "end": "965610"
  },
  {
    "text": "system activator remote get class object requests and this basically will provide",
    "start": "965610",
    "end": "970890"
  },
  {
    "text": "a handle to a class factory that will create that will eventually be creating",
    "start": "970890",
    "end": "975930"
  },
  {
    "text": "the object that they requested and so this occurs within the AI class factory operations so that's where the at the",
    "start": "975930",
    "end": "981660"
  },
  {
    "text": "object itself is actually fully instantiated and ready to use and then another handle is passed back so that",
    "start": "981660",
    "end": "987000"
  },
  {
    "text": "the client can begin to operate with it and so each step here actually creates a",
    "start": "987000",
    "end": "992250"
  },
  {
    "text": "whole bunch of network chatter back and forth so these are kind of generic overview phases but within each of these",
    "start": "992250",
    "end": "997590"
  },
  {
    "text": "you could have anywhere from two to eight packets back and forth for the RPC",
    "start": "997590",
    "end": "1003080"
  },
  {
    "text": "requests and responses so quite a bit of network chatter involved during this phase yeah so a lot of this is pretty loud a lot of this is pretty easy to",
    "start": "1003080",
    "end": "1009890"
  },
  {
    "text": "take a look at and detect so here's a screenshot of Wireshark specifically a",
    "start": "1009890",
    "end": "1016490"
  },
  {
    "text": "remote gate class object the request so this is what the client is sending to the server saying hey I want this object",
    "start": "1016490",
    "end": "1022850"
  },
  {
    "text": "to be instantiated within the stub data as you can see specifically at offset hex 0 1 EI we",
    "start": "1022850",
    "end": "1030380"
  },
  {
    "text": "have a CLS ID so this is the object that the client is asking the server to",
    "start": "1030380",
    "end": "1035510"
  },
  {
    "text": "create for them and so once we kind of ungentle it there's some interesting formatting for",
    "start": "1035510",
    "end": "1040900"
  },
  {
    "text": "the clsid so once you piece that back together we get down at the bottom there so again since this is a well-known clsid we can",
    "start": "1040900",
    "end": "1048250"
  },
  {
    "text": "take it to the web and try and figure out what was created again for this example we're using the application",
    "start": "1048250",
    "end": "1053860"
  },
  {
    "text": "object so of course that's what shows up and you can see the CLS ID matches exactly that within the packet so this",
    "start": "1053860",
    "end": "1061000"
  },
  {
    "text": "is a great option for when you want to understand kind of what's going on in your environment you can take these you",
    "start": "1061000",
    "end": "1066010"
  },
  {
    "text": "can collect these and then start to get a baseline of what of what objects are being used and furthermore what objects",
    "start": "1066010",
    "end": "1072580"
  },
  {
    "text": "may have execution capabilities so now",
    "start": "1072580",
    "end": "1078580"
  },
  {
    "text": "there's this series of I type info operations and the I type info is an interface that allows a client to start",
    "start": "1078580",
    "end": "1084700"
  },
  {
    "text": "to query and understand how functions need to be called so since this is happening at runtime they need to get",
    "start": "1084700",
    "end": "1090460"
  },
  {
    "text": "things such as they need to understand how a function needs to be called on the",
    "start": "1090460",
    "end": "1095590"
  },
  {
    "text": "server and this is provided automatically through I dispatch so there's gonna be three functions that",
    "start": "1095590",
    "end": "1101230"
  },
  {
    "text": "we're going to go through we're gonna go through get func desk which is for function resolution purposes we're going",
    "start": "1101230",
    "end": "1107170"
  },
  {
    "text": "to get names which is for property and function name resolution as well as get documentation which of course handles",
    "start": "1107170",
    "end": "1114160"
  },
  {
    "text": "any help documentation retrieval so here's a screen shot of what the I type",
    "start": "1114160",
    "end": "1119980"
  },
  {
    "text": "info operations look like in Wireshark as you can see it's kind of a mess it's pretty hard to understand exactly what's",
    "start": "1119980",
    "end": "1127000"
  },
  {
    "text": "going on here it actually took us a while to understand what these operations were we had to kind of tie it all the way back to at the I type info",
    "start": "1127000",
    "end": "1133420"
  },
  {
    "text": "interface and it's really only giving you a high-level so I can see okay",
    "start": "1133420",
    "end": "1138750"
  },
  {
    "text": "something's happening with I type info I don't know what and I also it's gonna be a real pain for me to understand at a",
    "start": "1138750",
    "end": "1145810"
  },
  {
    "text": "lower level what's going on here so this is something that we're gonna return to later when we talk about how we went on to wire to modify Wireshark to help",
    "start": "1145810",
    "end": "1153040"
  },
  {
    "text": "improve the parsing capability specifically for this interface so again",
    "start": "1153040",
    "end": "1158740"
  },
  {
    "text": "first function that we're going to talk about is get func test and this is used to allow a client to query for",
    "start": "1158740",
    "end": "1165430"
  },
  {
    "text": "information about how to call a specific function so if some of the returns to this are such as how many parameters of function",
    "start": "1165430",
    "end": "1172660"
  },
  {
    "text": "has what are their types so there are primitive types as well as any return",
    "start": "1172660",
    "end": "1177730"
  },
  {
    "text": "types and stuff like that so gives the client a good understanding of how to call this function so within the request",
    "start": "1177730",
    "end": "1186160"
  },
  {
    "text": "we provide what's known as a function index and this is kind of in the in the",
    "start": "1186160",
    "end": "1191440"
  },
  {
    "text": "peek apps you'll kind of see this counter rolling up as the clients like I'm curious about this function curious about this function hears about this",
    "start": "1191440",
    "end": "1197680"
  },
  {
    "text": "function and so on so in this one we're seeing a function index of hex 21 and this blue section right here these are",
    "start": "1197680",
    "end": "1204940"
  },
  {
    "text": "the method arguments that I was talking about before so pretty much you can think about anything above that is the previous decom like the RPC headers as",
    "start": "1204940",
    "end": "1213520"
  },
  {
    "text": "well as the RPC this structure but that blue part is the method arguments and",
    "start": "1213520",
    "end": "1218980"
  },
  {
    "text": "then when we get to the response from the server for this specific function again the blue is going to be the method",
    "start": "1218980",
    "end": "1224110"
  },
  {
    "text": "return arguments for the decom response we get a couple things we get the full function description which contains all",
    "start": "1224110",
    "end": "1230020"
  },
  {
    "text": "the stuff that I described before and a little bit more and we also get what's known as a member ID and this member ID",
    "start": "1230020",
    "end": "1236110"
  },
  {
    "text": "in this case is hex 36 and this is what we're going to be using in future calls to identify what function the client is",
    "start": "1236110",
    "end": "1242380"
  },
  {
    "text": "curious about and what's the query information for so the next function get",
    "start": "1242380",
    "end": "1247750"
  },
  {
    "text": "names and people generally prefer to call functions by name rather than some kind of you know weird hex number we're",
    "start": "1247750",
    "end": "1253780"
  },
  {
    "text": "you know whatnot names are always great for people so that's what this function helps to do so it'll resolve any",
    "start": "1253780",
    "end": "1259230"
  },
  {
    "text": "function names and parameter names for a client so in the request we're gonna",
    "start": "1259230",
    "end": "1264820"
  },
  {
    "text": "pass in that member ID that we got from that last function this case hex 36 and then the response is going to give us",
    "start": "1264820",
    "end": "1270880"
  },
  {
    "text": "just that so you may be able to make out in the hex dump on the side some ASCII",
    "start": "1270880",
    "end": "1276280"
  },
  {
    "text": "strings in there specifically we see execute shell command which is the command that we're interested in and we",
    "start": "1276280",
    "end": "1282880"
  },
  {
    "text": "also see the parameters that that command takes which are command directory parameters and window state so",
    "start": "1282880",
    "end": "1290530"
  },
  {
    "text": "again this can be consumed by a client and then presented to a user",
    "start": "1290530",
    "end": "1295690"
  },
  {
    "text": "and then finally we have to get documentation and this of course is",
    "start": "1295690",
    "end": "1300710"
  },
  {
    "text": "sometimes users need a little bit of help understanding what exactly a function does they want to check and",
    "start": "1300710",
    "end": "1305840"
  },
  {
    "text": "make sure that this is the right function that they want to execute this is you know get all that information so that's what this function helps to",
    "start": "1305840",
    "end": "1312260"
  },
  {
    "text": "provide specifically again in the request we're passing in our hex 36 member ID because that's the function",
    "start": "1312260",
    "end": "1318530"
  },
  {
    "text": "that we're interested in and we're also passing in a series of flags and this will tell the server what kind of help",
    "start": "1318530",
    "end": "1324260"
  },
  {
    "text": "documentation we're interested in in this case we're passing in saying that we want the help file and any docstrings",
    "start": "1324260",
    "end": "1330050"
  },
  {
    "text": "and again we get a full response from the server containing full ascii strings",
    "start": "1330050",
    "end": "1335750"
  },
  {
    "text": "that can then be consumed by a client presented to a user and this is typically going to be seen in scripting",
    "start": "1335750",
    "end": "1341809"
  },
  {
    "text": "languages so things like powershell are gonna use this and consume it and",
    "start": "1341809",
    "end": "1347570"
  },
  {
    "text": "present it to a user and now the final",
    "start": "1347570",
    "end": "1352610"
  },
  {
    "text": "phase is execution and so for execution we use the I dispatch invoke function",
    "start": "1352610",
    "end": "1357980"
  },
  {
    "text": "and this will invoke a given function on the remote server so again in the",
    "start": "1357980",
    "end": "1363050"
  },
  {
    "text": "request we're passing in our hex 36 member ID as that's the function we want to execute and we're also passing in any",
    "start": "1363050",
    "end": "1369260"
  },
  {
    "text": "relevant parameters that this function takes now remember from get func desk we now know what parameters the function is",
    "start": "1369260",
    "end": "1376040"
  },
  {
    "text": "expecting there types and whatnot so we have a good idea of how to call this you can see down in the hex dump of the",
    "start": "1376040",
    "end": "1382670"
  },
  {
    "text": "request you can make out an ASCII string that's a path to calc PXE so again you",
    "start": "1382670",
    "end": "1387800"
  },
  {
    "text": "can start to see within the package exactly where you might be able to pick out where potential adversaries might be",
    "start": "1387800",
    "end": "1393800"
  },
  {
    "text": "dropping their commands again calculate XC probably not that useful for an adversary so they can use whatever",
    "start": "1393800",
    "end": "1400370"
  },
  {
    "text": "whatever they want there in terms of the response it'll provide us any output",
    "start": "1400370",
    "end": "1406910"
  },
  {
    "text": "that that function has in this case this function does not provide any output so that's where that null string is coming",
    "start": "1406910",
    "end": "1412730"
  },
  {
    "text": "from but we do get provided a standard constant which will tell us whether or not function execution was even",
    "start": "1412730",
    "end": "1418700"
  },
  {
    "text": "successful in this case we get the Sok constant meaning that we would have achieved lateral movement had we or I",
    "start": "1418700",
    "end": "1425540"
  },
  {
    "text": "guess we popped calc exe in this case so drawing that all together here's kind",
    "start": "1425540",
    "end": "1430710"
  },
  {
    "text": "of a lot of you know going through Wireshark screenshots so pulling it all back together",
    "start": "1430710",
    "end": "1436050"
  },
  {
    "text": "we know that the member ID relates to a specific function that the client is interested in whether or not they're",
    "start": "1436050",
    "end": "1442140"
  },
  {
    "text": "executing it such as in this case or if they're querying for specific information such as in the previous eye",
    "start": "1442140",
    "end": "1447390"
  },
  {
    "text": "type info operations but that memory ID came from the get func desk of the eye",
    "start": "1447390",
    "end": "1453150"
  },
  {
    "text": "type info operation so you can kind of trace it all the way back and you can even go further so we know that all of",
    "start": "1453150",
    "end": "1458370"
  },
  {
    "text": "these operations are relating to a single function exposed by the object clsid that we requested in the very",
    "start": "1458370",
    "end": "1465750"
  },
  {
    "text": "first place so by chaining that all together we now have a full understanding of exactly what was",
    "start": "1465750",
    "end": "1470940"
  },
  {
    "text": "occurring because we can pass back we can even kind of replicate we can look at the get names we can understand what",
    "start": "1470940",
    "end": "1476070"
  },
  {
    "text": "function is being run what parameters are being passed and relate that all the way back to an object which is pretty",
    "start": "1476070",
    "end": "1482490"
  },
  {
    "text": "cool so with this behavioral analysis complete we can start to define some",
    "start": "1482490",
    "end": "1489450"
  },
  {
    "text": "criteria for detection and we're gonna do that with three different criteria sets we're going to talk about strict",
    "start": "1489450",
    "end": "1495030"
  },
  {
    "text": "criteria and these are components of an attack chain that are required to be present for the attack chain to even exist in the first place we also have",
    "start": "1495030",
    "end": "1502560"
  },
  {
    "text": "loose criteria and these are criteria that are in the adversaries control so for example we probably don't want to be",
    "start": "1502560",
    "end": "1508380"
  },
  {
    "text": "looking for the string calc dot exe right because an adversary could change that up they can change what they want",
    "start": "1508380",
    "end": "1513840"
  },
  {
    "text": "to run they can decide they have full control over these criteria and then",
    "start": "1513840",
    "end": "1519120"
  },
  {
    "text": "there's also exclusion criteria and these are things that appear to be part of a check chain at first but are actually benign so we want to exclude",
    "start": "1519120",
    "end": "1526080"
  },
  {
    "text": "exclude these so think kind of about detection tuning so you want to tune out kind of the noise to get to the real the",
    "start": "1526080",
    "end": "1533760"
  },
  {
    "text": "real bad and all of these kind of work together in boolean operations so you",
    "start": "1533760",
    "end": "1538770"
  },
  {
    "text": "can see in our diagram how we want to add together any strict criteria we have because we want to make sure that those exist every single time before detection",
    "start": "1538770",
    "end": "1545880"
  },
  {
    "text": "fires then we want to order together any loose criteria because these are things that could change but we want to make",
    "start": "1545880",
    "end": "1551880"
  },
  {
    "text": "sure that they're still included and then finally we want to not out any exclusion criteria because we want to disregard any of that criteria before we",
    "start": "1551880",
    "end": "1559710"
  },
  {
    "text": "decide to alert that detection so we're turning back to decom these are",
    "start": "1559710",
    "end": "1566050"
  },
  {
    "text": "our criteria analysis so in terms of strict criteria we know that activation must be done with a relevant Hewitt or",
    "start": "1566050",
    "end": "1572800"
  },
  {
    "text": "clsid so that must be present for the attack chain to exist and that that CL clsid",
    "start": "1572800",
    "end": "1578380"
  },
  {
    "text": "must relate to an object with code execution functionality because again if it doesn't you're not looking at much",
    "start": "1578380",
    "end": "1585760"
  },
  {
    "text": "lateral movement in terms of loose criteria we know that the clsid can vary",
    "start": "1585760",
    "end": "1590800"
  },
  {
    "text": "so Justin pointed out a couple different methods of how to obtain lateral movement and that was through various",
    "start": "1590800",
    "end": "1597190"
  },
  {
    "text": "different objects so that clsid will change and there may be I type info",
    "start": "1597190",
    "end": "1602230"
  },
  {
    "text": "operations depending on how the common object is explored so in our powershell example it would actually explore every",
    "start": "1602230",
    "end": "1607990"
  },
  {
    "text": "single function that an object had to offer we also tried weaponizing this in something like python and that only",
    "start": "1607990",
    "end": "1614230"
  },
  {
    "text": "explored the function that we decide to execute so it can vary depending on what",
    "start": "1614230",
    "end": "1619390"
  },
  {
    "text": "language the attacker decides to use there may also be a series of I dispatch",
    "start": "1619390",
    "end": "1624520"
  },
  {
    "text": "invoke depending on you know how many functions they want to run specifically like their commands and their parameters",
    "start": "1624520",
    "end": "1630430"
  },
  {
    "text": "are going to change and the objects instantiation can vary so in our example",
    "start": "1630430",
    "end": "1636100"
  },
  {
    "text": "I class factory create instance was used to kind of use a class Factory which the client then had to build the object off",
    "start": "1636100",
    "end": "1641980"
  },
  {
    "text": "of but I system activate here also offers remote create instance which will actually instantiate the object directly",
    "start": "1641980",
    "end": "1648970"
  },
  {
    "text": "and so actually in PowerShell as I mentioned it was using the AI class factory operation in Python it did it",
    "start": "1648970",
    "end": "1655210"
  },
  {
    "text": "directly so is going straight to AI system activator remote create instance so that's a case where you want to make",
    "start": "1655210",
    "end": "1661060"
  },
  {
    "text": "sure that you have multiple signatures that will pick up on both techniques and this really hammers home the importance",
    "start": "1661060",
    "end": "1667240"
  },
  {
    "text": "of doing a good behavioral analysis and testing a wide variety of tools and techniques because those little details",
    "start": "1667240",
    "end": "1672700"
  },
  {
    "text": "and artifacts are really what can break detection logic and detection scenarios in the real world exactly and then for",
    "start": "1672700",
    "end": "1678760"
  },
  {
    "text": "exclusions we want to get rid of any systems that may use D comm for normal",
    "start": "1678760",
    "end": "1684040"
  },
  {
    "text": "operations obviously we don't want to go up flagging benign systems that are",
    "start": "1684040",
    "end": "1689230"
  },
  {
    "text": "known to use decom in their standard day-to-day use and this is greatly aided",
    "start": "1689230",
    "end": "1694330"
  },
  {
    "text": "by data set so being able to look across an environment and say okay these are the systems that are using decon now these",
    "start": "1694330",
    "end": "1700810"
  },
  {
    "text": "are what objects are being used we can start to funnel those into exclusion criteria and say when we want to start",
    "start": "1700810",
    "end": "1706360"
  },
  {
    "text": "detecting bad we're gonna push those off to the side because we don't want to get many false positives off those systems",
    "start": "1706360",
    "end": "1711520"
  },
  {
    "text": "so lots of bits and bytes everyone's",
    "start": "1711520",
    "end": "1718270"
  },
  {
    "text": "hanging in there so now we're going to jump into the fun part actually catching the bad so I mentioned that I was a red team or like the like to do a lot about",
    "start": "1718270",
    "end": "1724660"
  },
  {
    "text": "this is this is what gets me excited now so before we go too deep into specifics on decon detection or NSM one of the",
    "start": "1724660",
    "end": "1731620"
  },
  {
    "text": "level sets some more detection concepts so if ever anyone's ever heard of Dave",
    "start": "1731620",
    "end": "1737470"
  },
  {
    "text": "Bianco's like pyramid of pain or you ever read any other recent stuff coming out with rich Balak or Rob early there's",
    "start": "1737470",
    "end": "1743320"
  },
  {
    "text": "various definitions over what defines an indicator or what like how how detection",
    "start": "1743320",
    "end": "1748630"
  },
  {
    "text": "logic should be authored think in general the the general acceptance is is there a wide array of indicators so what",
    "start": "1748630",
    "end": "1755110"
  },
  {
    "text": "what a lot of people who might not have deep threat intelligence experience would call an indicator would be like an",
    "start": "1755110",
    "end": "1760540"
  },
  {
    "text": "IP address or a domain like purely atomic indicators and that is an indicator it's one form of an indicator but when you start talking like reliable",
    "start": "1760540",
    "end": "1767620"
  },
  {
    "text": "detection you have to expand that mindset to understand there's a wide spectrum of indicators so that the",
    "start": "1767620",
    "end": "1773890"
  },
  {
    "text": "atomic indicators is one if you have what I generically call simple behavioral indicators so these would be like single singular events and rich",
    "start": "1773890",
    "end": "1781510"
  },
  {
    "text": "data on top of singular events you're really looking at a snapshot or point in time it's behavioral because it means",
    "start": "1781510",
    "end": "1788470"
  },
  {
    "text": "that something has happened it's event based not entity based but it's not quite difficult and this can be done",
    "start": "1788470",
    "end": "1794560"
  },
  {
    "text": "with things like Zika bro any Simms or event automation systems can do very",
    "start": "1794560",
    "end": "1800710"
  },
  {
    "text": "simple matching with queries and that's where this falls then you have complex behavioral indicators it's all the rage",
    "start": "1800710",
    "end": "1806230"
  },
  {
    "text": "nowadays you want fancy machine learning models it's really just statistics and you want to strap that on and know and",
    "start": "1806230",
    "end": "1812320"
  },
  {
    "text": "anomalies are occurring or when novelties have been introduced to the network and that starts getting into",
    "start": "1812320",
    "end": "1817960"
  },
  {
    "text": "multi event scenarios and when you start looking at multiple events having to chain those or understand behavior or",
    "start": "1817960",
    "end": "1823750"
  },
  {
    "text": "cross events that's that's a different form of indicator altogether and if for implementation these qualities or",
    "start": "1823750",
    "end": "1830440"
  },
  {
    "text": "these indicators will have various qualities as well so in general there's a very generalized statement which is",
    "start": "1830440",
    "end": "1835750"
  },
  {
    "text": "dangerous on a stage on camera but I think in general the average case",
    "start": "1835750",
    "end": "1840780"
  },
  {
    "text": "complex behavioral indicators are robust because they're very abstracted so they look at behaviors across events the",
    "start": "1840780",
    "end": "1848380"
  },
  {
    "text": "adversary would have to be a lot more careful across a longer lifecycle to be able to evade whereas atomic indicators",
    "start": "1848380",
    "end": "1854559"
  },
  {
    "text": "they can simply just buy a new server and change their IP or they can buy a new domain name for twenty nine cents on",
    "start": "1854559",
    "end": "1860530"
  },
  {
    "text": "Black Friday and Namecheap and just keep rolling these two to change up now that",
    "start": "1860530",
    "end": "1866200"
  },
  {
    "text": "does increase the cost of their operations but they're a little bit weaker on the other hand fidelity complex behavioral indicators are so",
    "start": "1866200",
    "end": "1872950"
  },
  {
    "text": "broad that it captures a wide array of activity including a lot of potentially system administrator activity and it's",
    "start": "1872950",
    "end": "1879190"
  },
  {
    "text": "also not generally not specific to an adversary a lot of times it's it's specific to some behavior that an",
    "start": "1879190",
    "end": "1885190"
  },
  {
    "text": "adversary is using that might be similar whereas atomic indicators at least for that small time period it's specific to",
    "start": "1885190",
    "end": "1891550"
  },
  {
    "text": "that bad guy generally obviously their shared hosting environments and many complications here",
    "start": "1891550",
    "end": "1896730"
  },
  {
    "text": "so one more concept to understand to do reliable detection specifically with",
    "start": "1896730",
    "end": "1902530"
  },
  {
    "text": "decom so imagine this dotted line burning of science II imagine this dotted line represents an adversaries",
    "start": "1902530",
    "end": "1909070"
  },
  {
    "text": "technique the attack surface so this is a two dimensional space which represents all the possible ways with many infinite",
    "start": "1909070",
    "end": "1915850"
  },
  {
    "text": "numbers of dots of all the possible ways that a bad guy could in percent implement a technique so we have dots",
    "start": "1915850",
    "end": "1921160"
  },
  {
    "text": "and those dots represent variations of that technique to be very applied in this case imagine weaponizing decom",
    "start": "1921160",
    "end": "1928540"
  },
  {
    "text": "attack and powershell and leveraging decon lateral movement python to variations they're both decon lateral movement",
    "start": "1928540",
    "end": "1935020"
  },
  {
    "text": "might air attack causing the same thing but they're different they have different artifacts and they fill this",
    "start": "1935020",
    "end": "1940360"
  },
  {
    "text": "attack space our goal as detection analysts is to form detections of many",
    "start": "1940360",
    "end": "1945580"
  },
  {
    "text": "types with many different specificities and broadness levels to fill this space we want to be able to capture every",
    "start": "1945580",
    "end": "1952150"
  },
  {
    "text": "technique one detection might cover multiple techniques very rarely does one detection cover all techniques so",
    "start": "1952150",
    "end": "1958120"
  },
  {
    "text": "there's a chance we might need multiple detection logic here and then even more fun if your detection",
    "start": "1958120",
    "end": "1963760"
  },
  {
    "text": "is too broad you start to get false positives you fall outside the box or too narrow you get white space and white",
    "start": "1963760",
    "end": "1968890"
  },
  {
    "text": "spaces false negatives those are bad things for detection analysts so this is kind of the science of where we want to",
    "start": "1968890",
    "end": "1974080"
  },
  {
    "text": "go and we want to use our entire technology stack to accomplish this for",
    "start": "1974080",
    "end": "1979419"
  },
  {
    "text": "NSM purposes which is where we live and breathe every day we're gonna focus on these ones there are three generic categories we like to talk about so rule",
    "start": "1979419",
    "end": "1986110"
  },
  {
    "text": "based IDs let's think of full packet content snorts or cata classic IDs",
    "start": "1986110",
    "end": "1992559"
  },
  {
    "text": "that's been around since the 90s these things look at network traffic injects and ingest that traffic and then they",
    "start": "1992559",
    "end": "1999040"
  },
  {
    "text": "based on some boolean logic or signature they output an alert so input is network",
    "start": "1999040",
    "end": "2004980"
  },
  {
    "text": "traffic output is an alert not contacts not packets just the fact that something happened and generally it's full text in",
    "start": "2004980",
    "end": "2012780"
  },
  {
    "text": "etc then you have metadata extraction based IDS's this is bro or Zeke I keep",
    "start": "2012780",
    "end": "2018600"
  },
  {
    "text": "saying bro Zeke for everyone don't know bros a metadata IDs that was recently renamed due to fun conflict in the name",
    "start": "2018600",
    "end": "2024440"
  },
  {
    "text": "and so this IDs it looks at all the",
    "start": "2024440",
    "end": "2029520"
  },
  {
    "text": "network data just like the rule based IDs but instead of just alerting when it sees something it takes the time to actually parse out any elements or",
    "start": "2029520",
    "end": "2036179"
  },
  {
    "text": "fields from within that network data essentially parsing metadata so elements",
    "start": "2036179",
    "end": "2042299"
  },
  {
    "text": "or fields it will not give you full packet content so the idea here is that you just feed all the events that are",
    "start": "2042299",
    "end": "2048450"
  },
  {
    "text": "occurring with they're important or critical data points the this starts to get a little bit better than rule based",
    "start": "2048450",
    "end": "2054600"
  },
  {
    "text": "IDs because it allows you to start doing time-based analysis and full context eventing so you can see everything happening versus only bad thing",
    "start": "2054600",
    "end": "2061378"
  },
  {
    "text": "happening obviously with more data comes more overhead so you start hitting storage concerns and how do you stream",
    "start": "2061379",
    "end": "2067950"
  },
  {
    "text": "this and how do you detect on and all this other stuff and then it gets even more complicated when you start introducing things like full content",
    "start": "2067950",
    "end": "2074270"
  },
  {
    "text": "fantastic capability every Network forensics person in the world will will swear by give me P cap or give me",
    "start": "2074270",
    "end": "2079980"
  },
  {
    "text": "nothing like it's the only thing that's worth it this is great it can be extremely tough to scale ask your",
    "start": "2079980",
    "end": "2086760"
  },
  {
    "text": "fortune five sort ends of the world how much throughput they have in their network on how long they can store that",
    "start": "2086760",
    "end": "2092010"
  },
  {
    "text": "if have a lot of money cuz they're a fortune five or ten maybe they're willing to shell for it but many time cases they're not willing to and quite",
    "start": "2092010",
    "end": "2098640"
  },
  {
    "text": "frankly the way that most people utilize this in a soccer and a defensive scenario is they just run a metadata",
    "start": "2098640",
    "end": "2104220"
  },
  {
    "text": "parser over all the pcap anyway and so the primary thing they're working with is metadata similar to Bro or Zeke and",
    "start": "2104220",
    "end": "2110100"
  },
  {
    "text": "they really only go back to that full pcap in a limited fashion sometimes it's even hard to go recall that full pcap",
    "start": "2110100",
    "end": "2116940"
  },
  {
    "text": "depending on the system so let's start with Brewers Noir let's look at a",
    "start": "2116940",
    "end": "2122190"
  },
  {
    "text": "detection scenario for that MMC application object so here's an example signature in the white paper were",
    "start": "2122190",
    "end": "2128070"
  },
  {
    "text": "releasing with this talk we actually provide a number of these they're fairly plug-and-play this is meant to be whack",
    "start": "2128070",
    "end": "2133800"
  },
  {
    "text": "Amole kind of you're basically looking for the known bad or known common CL IDs that attackers use and so in this case",
    "start": "2133800",
    "end": "2140520"
  },
  {
    "text": "we're looking for optimum number three now Optum number three depends on what",
    "start": "2140520",
    "end": "2146270"
  },
  {
    "text": "can be used across our PC so autom number three specifically for the MMC",
    "start": "2146270",
    "end": "2151380"
  },
  {
    "text": "object represents remote key class object the eye system activator in this",
    "start": "2151380",
    "end": "2157710"
  },
  {
    "text": "packet we're also looking for the characteristic meow I kind of just put it in there because I like saying it on stage a lot of fun I don't know why this",
    "start": "2157710",
    "end": "2163710"
  },
  {
    "text": "thing is in there I'm sure it represents something but it's always in the activations so it makes a really good thing to include to help weed out any",
    "start": "2163710",
    "end": "2170130"
  },
  {
    "text": "potential matches and then the last one the content is essentially the the hex string looking for that clsid we know",
    "start": "2170130",
    "end": "2176400"
  },
  {
    "text": "for so take this take all the list of all the objects that people are abusing and plug and play class IDs and you",
    "start": "2176400",
    "end": "2182160"
  },
  {
    "text": "start to get a little bit context when these are used we've had this deployed these rules deployed in enterprises now",
    "start": "2182160",
    "end": "2188640"
  },
  {
    "text": "so we work in a SAS platforms we got lots of data to play with and it actually is a very confident signature",
    "start": "2188640",
    "end": "2194040"
  },
  {
    "text": "very simple not rocket science but with the understanding the protocol it gives you that context we actually had a true",
    "start": "2194040",
    "end": "2199800"
  },
  {
    "text": "positive detection on this recently with this exact signature so it's reliable",
    "start": "2199800",
    "end": "2205230"
  },
  {
    "text": "it's it's proven it's worth so diving in the next one a little bit more about",
    "start": "2205230",
    "end": "2210600"
  },
  {
    "text": "Zeke or bro who's used it see your car bro all right a little bit more in the audience and a sim people great so",
    "start": "2210600",
    "end": "2216000"
  },
  {
    "text": "metadata parser it has three key components that allow it to do what it does first it ingest data on the network",
    "start": "2216000",
    "end": "2222300"
  },
  {
    "text": "those full packets then go to the eventing engine the eventing engine in bro essentially",
    "start": "2222300",
    "end": "2228140"
  },
  {
    "text": "leverages a binary protocol specification called bin pack these are",
    "start": "2228140",
    "end": "2233150"
  },
  {
    "text": "files that define structures of what network traffic looks like so it's a very high-level way to define a decom",
    "start": "2233150",
    "end": "2240530"
  },
  {
    "text": "request packet looks like this a decom response packet looks like this so the eventing engine uses these bin",
    "start": "2240530",
    "end": "2246860"
  },
  {
    "text": "packs to take these protocols and then parse them into fields when it parses",
    "start": "2246860",
    "end": "2253610"
  },
  {
    "text": "those fields it then generates an internal bro event that's internal to the engines and then it has a scripting",
    "start": "2253610",
    "end": "2260120"
  },
  {
    "text": "subsystem that allows you to attach to events so I can say if the decom request happened run my script on all of that",
    "start": "2260120",
    "end": "2267620"
  },
  {
    "text": "data it's called a bro script or a Zeke script and these are handled by these event handlers basically consume all",
    "start": "2267620",
    "end": "2272960"
  },
  {
    "text": "these events and then do things by default what you see the normal functionality of bro is a whole bunch of built in scripts that just emit logs so",
    "start": "2272960",
    "end": "2280340"
  },
  {
    "text": "you're just getting raw log data of all the fields that happen so quite honestly",
    "start": "2280340",
    "end": "2286580"
  },
  {
    "text": "looking at this when we first ran into this attack scenario we are seeing this",
    "start": "2286580",
    "end": "2292520"
  },
  {
    "text": "attack in the wild and we're like well we obviously need to detect this let's see if anything detects it and we ran it through a bro we were kind of",
    "start": "2292520",
    "end": "2298310"
  },
  {
    "text": "dumbfounded that like nothing stuck out same thing with Wireshark same thing with snort it blew our minds that this was a thing and it wasn't correctly",
    "start": "2298310",
    "end": "2305270"
  },
  {
    "text": "parsing it so we dived in we tried to identify why why weren't we getting the data that we expected from these open",
    "start": "2305270",
    "end": "2310880"
  },
  {
    "text": "source tools and why are many people running these open source tools and probably not doing this individual unit",
    "start": "2310880",
    "end": "2315950"
  },
  {
    "text": "testing being robbed of this experience and frankly bro and Zeke's an open source project and so anyone can",
    "start": "2315950",
    "end": "2322250"
  },
  {
    "text": "contribute to and they rely on that they like community contribution so when we the first object that we saw or the",
    "start": "2322250",
    "end": "2328430"
  },
  {
    "text": "first problem we saw was that our PC which is the supported protocol by",
    "start": "2328430",
    "end": "2333710"
  },
  {
    "text": "default and the current bro version is a very high level protocol it's a Swiss Army knife there's many things that",
    "start": "2333710",
    "end": "2339080"
  },
  {
    "text": "happen over RPC everything from the service controller language to the remote registry like all of everything",
    "start": "2339080",
    "end": "2344360"
  },
  {
    "text": "you do on the Windows command line remotely is all mostly over RPC including decom and so there are many",
    "start": "2344360",
    "end": "2350600"
  },
  {
    "text": "different forms or subsystems within this generic protocol and so what",
    "start": "2350600",
    "end": "2355910"
  },
  {
    "text": "is currently implemented in the version of Zeke is a the high-level generic piece it's the",
    "start": "2355910",
    "end": "2361140"
  },
  {
    "text": "RPC component so it's the headers and the in point and operation that's called but nothing specific to that operation",
    "start": "2361140",
    "end": "2367740"
  },
  {
    "text": "so a little bit more of an abstracted not related example let's say I want to",
    "start": "2367740",
    "end": "2372810"
  },
  {
    "text": "do a service controller action across the network I do a create service the only thing that's logged in Zeke is the",
    "start": "2372810",
    "end": "2378210"
  },
  {
    "text": "fact that the create service happened not the service name not the return value not this other stuff it's its RPC",
    "start": "2378210",
    "end": "2384540"
  },
  {
    "text": "it's not the service controller language the other piece that was really important to understand and was was",
    "start": "2384540",
    "end": "2391380"
  },
  {
    "text": "important to Pete pick out was the fact that there's entire functionality in Zeke that's commented out in the RPC",
    "start": "2391380",
    "end": "2397500"
  },
  {
    "text": "parser like it was attempted to be implemented but it didn't get all the way there I'm sure the developer likes",
    "start": "2397500",
    "end": "2402510"
  },
  {
    "text": "this is a difficult language I'm sure he struggled and wanted to get this out but at the time alter context completely",
    "start": "2402510",
    "end": "2407820"
  },
  {
    "text": "commented out which means that if decom which it does often jumps between interface context every time you makes a",
    "start": "2407820",
    "end": "2415140"
  },
  {
    "text": "jump using alter context every log after that's actually not just emitted it's wrong it's completely wrong it's logging",
    "start": "2415140",
    "end": "2421380"
  },
  {
    "text": "the wrong end points to the wrong operations because state tracking is performed only on the binds not alter",
    "start": "2421380",
    "end": "2427349"
  },
  {
    "text": "context so important to know that if you're using this right now you might not be seeing the accurate logs you want",
    "start": "2427349",
    "end": "2433500"
  },
  {
    "text": "to check your version of Z so what we try to do for the purpose of proof of",
    "start": "2433500",
    "end": "2439109"
  },
  {
    "text": "concept here to show how we could be done as we took the easiest road we could not necessarily the most performant or reliable and we took every",
    "start": "2439109",
    "end": "2445440"
  },
  {
    "text": "RPC request and said for every request we're gonna pass the stub so we're gonna pass the stub along to the requests and",
    "start": "2445440",
    "end": "2452130"
  },
  {
    "text": "so now I'm this is not performance I this is alpha 3 alpha extra state on",
    "start": "2452130",
    "end": "2457200"
  },
  {
    "text": "Sage I'm a researcher not an engineer locally and so this basically allows me to take scripts and do whatever I want",
    "start": "2457200",
    "end": "2464160"
  },
  {
    "text": "with that stub so I can say if this is an SVC control operation parse this bury",
    "start": "2464160",
    "end": "2469859"
  },
  {
    "text": "this area and the stub and this is the new field I want to emit and so we get to the point where I can write scripts",
    "start": "2469859",
    "end": "2475800"
  },
  {
    "text": "like this which basically say if this is a remote gate class object call parse these parts of the stub and call that",
    "start": "2475800",
    "end": "2482040"
  },
  {
    "text": "the remote class ID so I can start to parse out individual field within our PC",
    "start": "2482040",
    "end": "2488050"
  },
  {
    "text": "what this allows us to do let's rerun this attack real quick we're gonna run the MMC application attack what this",
    "start": "2488050",
    "end": "2494570"
  },
  {
    "text": "allows us to do is very quickly get in and start to see when things have gone bad so you can see here I just ran that",
    "start": "2494570",
    "end": "2502730"
  },
  {
    "text": "attack and my magic zoom in I got the class ID of what went across the network this is slightly improved from what I",
    "start": "2502730",
    "end": "2509720"
  },
  {
    "text": "had beginning and I also get my sir cata alert that it recognized the same class ID so it's a little bit better it's not",
    "start": "2509720",
    "end": "2517010"
  },
  {
    "text": "perfect but better we can start to get telemetry over which decom objects are being used in networks so we can get at",
    "start": "2517010",
    "end": "2522710"
  },
  {
    "text": "least a basic IDs indication of known bad or suspicious and really the goal here is to empower detection that's",
    "start": "2522710",
    "end": "2529220"
  },
  {
    "text": "specific with sir cotta and Zeke is empower detection and power forensics and so in this case I can do one of a",
    "start": "2529220",
    "end": "2535280"
  },
  {
    "text": "couple things I can just look for all the new and bad that's the easy one you just cross that off your list I can sit down in 20 minutes",
    "start": "2535280",
    "end": "2540650"
  },
  {
    "text": "knock that out but then you can start to do more fun things like I can start to introduce statistical modeling on all of",
    "start": "2540650",
    "end": "2546470"
  },
  {
    "text": "the decom data in the network and look for abnormalities I can start to do anomaly detection I can start to do",
    "start": "2546470",
    "end": "2552380"
  },
  {
    "text": "first observes like the first time I ever see a decom network up here in the network why is it there and then I",
    "start": "2552380",
    "end": "2557990"
  },
  {
    "text": "always thought a fun project this is sort of a sidebar but I always thought a really fun project would be to leverage",
    "start": "2557990",
    "end": "2563150"
  },
  {
    "text": "all of this decom eventing data to try to statistically represent human",
    "start": "2563150",
    "end": "2568190"
  },
  {
    "text": "interaction with be calm versus programmatic or machine interaction we be calm so like if I'm a PowerShell guy",
    "start": "2568190",
    "end": "2573950"
  },
  {
    "text": "and I'm like in PowerShell querying all the help Docs and going back and forth between functions that's gonna look a",
    "start": "2573950",
    "end": "2579290"
  },
  {
    "text": "lot different with the I type info operations then if I'm a script that simply runs one function so being able",
    "start": "2579290",
    "end": "2585680"
  },
  {
    "text": "to pick out like hey human is using V converse as a program is might be a really interesting problem set to use",
    "start": "2585680",
    "end": "2590870"
  },
  {
    "text": "that data for so when it comes to pcap analysis Wireshark is to go to tool for",
    "start": "2590870",
    "end": "2596570"
  },
  {
    "text": "most people I pretty much use it daily it's one of my favourite tools and of course it's used extensively in",
    "start": "2596570",
    "end": "2601820"
  },
  {
    "text": "forensics and response situations for its protocol parsing it has two main components that help it along one our",
    "start": "2601820",
    "end": "2609200"
  },
  {
    "text": "dissectors and these are built directly into the Wireshark binary and kind of it early iteratively take data parse it and",
    "start": "2609200",
    "end": "2616070"
  },
  {
    "text": "hand it off to other dissectors so that they can add more information that eventually makes it to the end user",
    "start": "2616070",
    "end": "2621890"
  },
  {
    "text": "they're also plugins and these are external components to Wireshark written in Lua so these can be added in at any time and they just generally extend wire",
    "start": "2621890",
    "end": "2629030"
  },
  {
    "text": "sharks functionality and these can include protocol dissection as well so",
    "start": "2629030",
    "end": "2636590"
  },
  {
    "text": "again we're going to return to our screenshot of the I type info operations again quite a mess very high-level we",
    "start": "2636590",
    "end": "2644120"
  },
  {
    "text": "struggled for a couple hours to kind of work through and understand what was going on here when we first started looking at these peak apps so Wireshark",
    "start": "2644120",
    "end": "2651470"
  },
  {
    "text": "handle law they're classic decom operations properly I type info completely unemployment 'add and then a couple",
    "start": "2651470",
    "end": "2657530"
  },
  {
    "text": "other endpoints and operations lacked full dissections so if you recall back to the gate class object it parsed out",
    "start": "2657530",
    "end": "2663740"
  },
  {
    "text": "its name and stuff but it left the stub there so we had to kind of dig through and find that class ID within the byte",
    "start": "2663740",
    "end": "2669380"
  },
  {
    "text": "stream so to fix this we decided to go ahead and add on to be Conner two wire",
    "start": "2669380",
    "end": "2675560"
  },
  {
    "text": "sharks existing decom dissector so it exists as a dye sector not a plug-in so we added a couple things to that and",
    "start": "2675560",
    "end": "2682850"
  },
  {
    "text": "then also added our type info that sector along with it and so this took a lot of protocol reverse engineering and",
    "start": "2682850",
    "end": "2689750"
  },
  {
    "text": "of course learning how to actually write Wireshark dissectors and this was my first time doing this as you saw from",
    "start": "2689750",
    "end": "2695840"
  },
  {
    "text": "Justin's slide I started to go a little bit crazy in terms of how I was taking apart this protocol so here are a couple",
    "start": "2695840",
    "end": "2703310"
  },
  {
    "text": "tips for anyone who's interested in maybe getting started in protocol reverse engineering or want to try and contribute back to Wireshark the first",
    "start": "2703310",
    "end": "2710330"
  },
  {
    "text": "thing is that the existing tech sectors and plugins were incredible for helping",
    "start": "2710330",
    "end": "2715640"
  },
  {
    "text": "me understand exactly what should be occurring within them so they helped to provide a structure as well as show off",
    "start": "2715640",
    "end": "2721460"
  },
  {
    "text": "any functions that already existed for certain operations so it saved me a bunch of time also using official",
    "start": "2721460",
    "end": "2727280"
  },
  {
    "text": "documentation specifically for the protocols so things like RFC's and in this case MSDN articles were incredibly",
    "start": "2727280",
    "end": "2733790"
  },
  {
    "text": "helpful as they outline exactly what a structure should look like so things like properties and their associated",
    "start": "2733790",
    "end": "2739880"
  },
  {
    "text": "types so you can begin to pick out where things need to be within or what things should exist within a series of bytes",
    "start": "2739880",
    "end": "2746660"
  },
  {
    "text": "and then by using multiple variations of an attack so changing up parameters or I",
    "start": "2746660",
    "end": "2752240"
  },
  {
    "text": "even implemented a custom comma or decom object so that I could change like the number of",
    "start": "2752240",
    "end": "2757310"
  },
  {
    "text": "parameters I had the types of the parameters you can start to pick out known properties so you can say okay",
    "start": "2757310",
    "end": "2763100"
  },
  {
    "text": "these are probably the parameters this is probably an array showing all the parameters here this is the length of",
    "start": "2763100",
    "end": "2768110"
  },
  {
    "text": "the array at such-and-such and this is the result so now you can see that the I",
    "start": "2768110",
    "end": "2773810"
  },
  {
    "text": "type info operations are fully parsed and dissected not only can you tell exactly what operation is occurring but",
    "start": "2773810",
    "end": "2780200"
  },
  {
    "text": "also you get a full breakdown of what's occurring within them and this is something I'm going to be trying to",
    "start": "2780200",
    "end": "2785240"
  },
  {
    "text": "contribute and make a pull request to Wireshark when we get back so we're",
    "start": "2785240",
    "end": "2790910"
  },
  {
    "text": "network people we obviously sit up on the stage a bunch talk to all about the network but we'd be silly to not mention end point simple fact of the matter is",
    "start": "2790910",
    "end": "2797360"
  },
  {
    "text": "is bad guys evade just like they know that people are watching they try to evade so let's say they're focusing",
    "start": "2797360",
    "end": "2802520"
  },
  {
    "text": "purely on evading the network anyone who's doing detection on the enterprise scale really needs to rely on both your network data and your endpoint data and",
    "start": "2802520",
    "end": "2809180"
  },
  {
    "text": "your application logs and the whole mix of that and so we'd be negligent to not talk at least I slide about endpoint do",
    "start": "2809180",
    "end": "2815480"
  },
  {
    "text": "you know that there are ways for adversaries to evade alter context is an obvious one given the current implementation packet privacy you can",
    "start": "2815480",
    "end": "2822230"
  },
  {
    "text": "actually force the packet contents of RPC to be encrypted so we miss all the underlying decom stuff well note here",
    "start": "2822230",
    "end": "2827570"
  },
  {
    "text": "though that in most networks I'd say almost all the ones we monitor like this isn't a thing yet it's coming but it's",
    "start": "2827570",
    "end": "2833180"
  },
  {
    "text": "not a thing so if you start implementing packet privacy as an adversary it's actually an indicator like you turning on encryption stands out to me because",
    "start": "2833180",
    "end": "2839450"
  },
  {
    "text": "it's not normally there it's not the default domain setting so command line is king for endpoint on this stuff I'll",
    "start": "2839450",
    "end": "2845390"
  },
  {
    "text": "note that when any time you launch a decom process so let's say we're using an outlet comm object it spawns over SVC",
    "start": "2845390",
    "end": "2851240"
  },
  {
    "text": "it spawns under the decom Launch SVC host it is very easy to say which decom mob",
    "start": "2851240",
    "end": "2857240"
  },
  {
    "text": "or which processes are spawning under this host and which ones should be and should not be so like Outlook probably",
    "start": "2857240",
    "end": "2862790"
  },
  {
    "text": "shouldn't be spawning random become services all the time and then another one is a lot of the office applications",
    "start": "2862790",
    "end": "2868190"
  },
  {
    "text": "have command line parameters - embedding or / automation for their decom objects when they start up so it could be a good",
    "start": "2868190",
    "end": "2873440"
  },
  {
    "text": "thing to go look for and this is this is implemented by the actual underlying services themselves so we'll run in",
    "start": "2873440",
    "end": "2880100"
  },
  {
    "text": "short on time big takeaways we want you to walk away with the detection the repeatable and resection process to",
    "start": "2880100",
    "end": "2886250"
  },
  {
    "text": "evaluate your tools emulate that adversary look at those components that are involved conducting analysis to identify",
    "start": "2886250",
    "end": "2892710"
  },
  {
    "text": "strict and loose components build detection criteria around that test it out deploy and gain advantage if your",
    "start": "2892710",
    "end": "2899099"
  },
  {
    "text": "tools don't allow you to do it better the tools that's what they're there for in many of the open source cases in the",
    "start": "2899099",
    "end": "2904319"
  },
  {
    "text": "non decomp specific take away is kind of that raw mission like we're there to",
    "start": "2904319",
    "end": "2909510"
  },
  {
    "text": "detect bad guys on the defensive side and if you're a red team or a pen tester you're there to help us detect bad guys so it's it's all a big happy community",
    "start": "2909510",
    "end": "2916079"
  },
  {
    "text": "work together understand the threats and figure out how to stop them understanding is a key component that",
    "start": "2916079",
    "end": "2921329"
  },
  {
    "text": "you have to start with you have to understand the protocols you have to understand the threats so I think we have one minute so we might be able to",
    "start": "2921329",
    "end": "2927150"
  },
  {
    "text": "get a question and luckily only one question yes or you guys are holding",
    "start": "2927150",
    "end": "2934589"
  },
  {
    "text": "back appreciate that",
    "start": "2934589",
    "end": "2937520"
  },
  {
    "text": "Oh",
    "start": "2941600",
    "end": "2943600"
  },
  {
    "text": "[Music]",
    "start": "2946620",
    "end": "2952500"
  },
  {
    "text": "that's a great question the question was how do you implement this in a cloud environment TLDR like you know you have",
    "start": "2956610",
    "end": "2962050"
  },
  {
    "text": "to worry about other people's environments too so two answers to that or one explanation there are network",
    "start": "2962050",
    "end": "2969520"
  },
  {
    "text": "monitoring capabilities that are in cloud native capabilities but they're mostly their flow so you don't get not only do you not get RPC level data",
    "start": "2969520",
    "end": "2976150"
  },
  {
    "text": "you're not getting Beacom data you're not getting any of the bottom neath you could look at port numbers you could look at flow behaviors most of these",
    "start": "2976150",
    "end": "2981730"
  },
  {
    "text": "cloud environments our server lands and so like should your servers be even exposing this do you see connections to",
    "start": "2981730",
    "end": "2987490"
  },
  {
    "text": "them etc that's a very Wild West approach in practice I would say that'd be very difficult flow data is actually",
    "start": "2987490",
    "end": "2993640"
  },
  {
    "text": "very hard to do not reliable detecting around there's another approach which is many vendors I will not do too much",
    "start": "2993640",
    "end": "2999850"
  },
  {
    "text": "vendor pitching many vendors sell technology that would get you full pcap data on in the cloud environments there are pluses and minuses to that in",
    "start": "2999850",
    "end": "3006870"
  },
  {
    "text": "throughput and bandwidth and processing power and stuff but there is ways there are ways to gain full pcap contents",
    "start": "3006870",
    "end": "3012660"
  },
  {
    "text": "inside the cloud environments you might be something you select on your crown jewel servers my honor on a small subset",
    "start": "3012660",
    "end": "3017730"
  },
  {
    "text": "but we've seen success with that technique and gaining some visibility and that is it for me I am up on time",
    "start": "3017730",
    "end": "3025410"
  },
  {
    "text": "thank you guys for attending [Applause]",
    "start": "3025410",
    "end": "3030630"
  }
]