[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "this session is pivoting in Amazon clouds with Andres Ariane Cho as your",
    "start": "30",
    "end": "5040"
  },
  {
    "text": "speaker and thank you and please enjoy the rest of the blackhat briefings for 2014 thank you all right thanks",
    "start": "5040",
    "end": "19560"
  },
  {
    "text": "everybody so today I'm going to tell you a story this is the story of how during",
    "start": "19560",
    "end": "27930"
  },
  {
    "text": "a web application penetration test I discovered different vulnerabilities",
    "start": "27930",
    "end": "33719"
  },
  {
    "text": "and weaknesses in how this application was set up in the Amazon Cloud this",
    "start": "33719",
    "end": "41879"
  },
  {
    "text": "session is going to go through different misconfigurations and issues that you guys need to know",
    "start": "41879",
    "end": "48559"
  },
  {
    "text": "when deploying something in the Amazon tap so let's get started with the first",
    "start": "48559",
    "end": "57629"
  },
  {
    "text": "thing that I found the first vulnerability and the only one that's",
    "start": "57629",
    "end": "62670"
  },
  {
    "text": "not related with a Mis configuration in Amazon and I found this very simple",
    "start": "62670",
    "end": "71729"
  },
  {
    "start": "69000",
    "end": "207000"
  },
  {
    "text": "vulnerability this is an HTTP request products and vulnerability I am sure",
    "start": "71729",
    "end": "77939"
  },
  {
    "text": "that most of you guys have already seen this but the basic idea is that if you",
    "start": "77939",
    "end": "84869"
  },
  {
    "text": "perform an HTTP request like in the first line that you see there than me",
    "start": "84869",
    "end": "91579"
  },
  {
    "text": "highlight in the first line you perform an HTTP request to URL that has a URL",
    "start": "91579",
    "end": "99810"
  },
  {
    "text": "parameter and as you see there the reboot of a web application is going to",
    "start": "99810",
    "end": "106799"
  },
  {
    "text": "kind of forward that HTTP request and",
    "start": "106799",
    "end": "112040"
  },
  {
    "text": "return the response so it works like this I'm at this workstation I perform",
    "start": "112040",
    "end": "119909"
  },
  {
    "text": "the first HTTP request the target because it's vulnerable and it has some",
    "start": "119909",
    "end": "125700"
  },
  {
    "text": "issues it's going to perform a different HTTP request to a URL that I can't",
    "start": "125700",
    "end": "132660"
  },
  {
    "text": "alright then the response from this request arise to the target web",
    "start": "132660",
    "end": "138540"
  },
  {
    "text": "application and comes back to me the initial in the initial HTTP request",
    "start": "138540",
    "end": "145680"
  },
  {
    "text": "this is very simple so I found this and",
    "start": "145680",
    "end": "150960"
  },
  {
    "text": "I said okay what can I do I tried different paths in some cases",
    "start": "150960",
    "end": "160710"
  },
  {
    "text": "for example what you can do there is replace the URL parameter with something",
    "start": "160710",
    "end": "166680"
  },
  {
    "text": "that says file in file colon slash slash and you try to read a file from the file",
    "start": "166680",
    "end": "174990"
  },
  {
    "text": "system where the vulnerable application lives and it wasn't working and it's",
    "start": "174990",
    "end": "181200"
  },
  {
    "text": "very different tests nothing was really interesting",
    "start": "181200",
    "end": "186420"
  },
  {
    "text": "until I thought hey this is deployed in",
    "start": "186420",
    "end": "191810"
  },
  {
    "text": "Amazon this is an application that lives in ec2 instance in the Amazon Cloud so",
    "start": "191810",
    "end": "200910"
  },
  {
    "text": "what can I do with that I have that information I want to use it so I tried",
    "start": "200910",
    "end": "207780"
  },
  {
    "start": "207000",
    "end": "257000"
  },
  {
    "text": "something I try to replace the URL parameter that you see there with that",
    "start": "207780",
    "end": "213770"
  },
  {
    "text": "strange URL the one that starts with 169.254 and in response I got that",
    "start": "213770",
    "end": "227310"
  },
  {
    "text": "little piece of information am i something something example alright and",
    "start": "227310",
    "end": "234090"
  },
  {
    "text": "I was really really happy and who knows",
    "start": "234090",
    "end": "240810"
  },
  {
    "text": "what's in that IP address hence wonder G all right",
    "start": "240810",
    "end": "246980"
  },
  {
    "text": "argentinian guy 1 let's go yeah alright so the very p address is the instance",
    "start": "246980",
    "end": "260329"
  },
  {
    "start": "257000",
    "end": "348000"
  },
  {
    "text": "metadata so when you start any ec2 instance",
    "start": "260330",
    "end": "265900"
  },
  {
    "text": "in Amazon you're going to have an easy to metadata server attached to that",
    "start": "265900",
    "end": "274460"
  },
  {
    "text": "instance it's going to simply be listening on that IP address and each",
    "start": "274460",
    "end": "281810"
  },
  {
    "text": "easy to instance has that same IP address you can only access that IP",
    "start": "281810",
    "end": "289759"
  },
  {
    "text": "address and the metadata that it stores from that individual instance",
    "start": "289759",
    "end": "295280"
  },
  {
    "text": "so from instance a you cannot access the metadata from instance P but in this",
    "start": "295280",
    "end": "301789"
  },
  {
    "text": "case and because of the vulnerability of the HTTP proxy I was allowed to access",
    "start": "301789",
    "end": "307460"
  },
  {
    "text": "the metadata from anywhere in the world alright because we have a vulnerable",
    "start": "307460",
    "end": "313849"
  },
  {
    "text": "application living in that ec2 instance so what's stored in that instance",
    "start": "313849",
    "end": "322009"
  },
  {
    "text": "metadata there are many different things that are stored there we are going to go",
    "start": "322009",
    "end": "327410"
  },
  {
    "text": "through a couple of dates and the first one that I showed you was AMI and a",
    "start": "327410",
    "end": "335150"
  },
  {
    "text": "number so as you can see here the instance metadata is ordered in",
    "start": "335150",
    "end": "342080"
  },
  {
    "text": "different paths inside that HTTP server and one of the things is the a my ID the",
    "start": "342080",
    "end": "351139"
  },
  {
    "start": "348000",
    "end": "421000"
  },
  {
    "text": "a my ID is basically an identifier for that ec2 instance operating system image",
    "start": "351139",
    "end": "362509"
  },
  {
    "text": "and stuff like that so some emails are public and if you are an attacker and",
    "start": "362509",
    "end": "369169"
  },
  {
    "text": "you know the ami you go you search it and you might if that ami is public you",
    "start": "369169",
    "end": "375500"
  },
  {
    "text": "might be able to identify which operating system is running and with which configuration so that's good",
    "start": "375500",
    "end": "382909"
  },
  {
    "text": "information to have something else that's stored in the metadata is a private IP address the",
    "start": "382909",
    "end": "390470"
  },
  {
    "text": "instance type how many cores memory and stuff like that and where it lives",
    "start": "390470",
    "end": "397280"
  },
  {
    "text": "in which region in which data center from Amazon that instance leads so this",
    "start": "397280",
    "end": "405470"
  },
  {
    "text": "is how from an attacker perspective this is how it looked for me at that point I",
    "start": "405470",
    "end": "411920"
  },
  {
    "text": "was able to forward HTTP traffic to that metadata server and access information",
    "start": "411920",
    "end": "418550"
  },
  {
    "text": "from there all right I knew that the",
    "start": "418550",
    "end": "427880"
  },
  {
    "start": "421000",
    "end": "578000"
  },
  {
    "text": "metadata server stored a lot of information not only there four or five",
    "start": "427880",
    "end": "433100"
  },
  {
    "text": "things that I already mentioned and I also knew that there are different tools",
    "start": "433100",
    "end": "439510"
  },
  {
    "text": "that usually are used by developers which know all the different paths were",
    "start": "439510",
    "end": "447590"
  },
  {
    "text": "that information is stored and it's kind of not that trivial to know and to kind",
    "start": "447590",
    "end": "454550"
  },
  {
    "text": "of calculate the paths because in some cases one path depends on information",
    "start": "454550",
    "end": "460580"
  },
  {
    "text": "that you get one path depends on information that you get from a",
    "start": "460580",
    "end": "466520"
  },
  {
    "text": "different path so I wanted to programmatically access that information",
    "start": "466520",
    "end": "471890"
  },
  {
    "text": "and I'm a Python guy so I wanted to use",
    "start": "471890",
    "end": "476930"
  },
  {
    "text": "the bottle library so I did it right so",
    "start": "476930",
    "end": "484040"
  },
  {
    "text": "I I wanted to access that remote instance metadata using boto but Bato",
    "start": "484040",
    "end": "491210"
  },
  {
    "text": "only knows about accessing that local IP address that 169 IP address so I",
    "start": "491210",
    "end": "498169"
  },
  {
    "text": "modified bottle a little bit using something that in Python we call monkey",
    "start": "498169",
    "end": "505370"
  },
  {
    "text": "patching in order to fake those connections and instead of those",
    "start": "505370",
    "end": "511130"
  },
  {
    "text": "connections going from my workstation directly to the 169 IP address which",
    "start": "511130",
    "end": "516260"
  },
  {
    "text": "doesn't make sense because it's not even routed and stuff like that I notified that in order to forward that HTTP",
    "start": "516260",
    "end": "524990"
  },
  {
    "text": "traffic through the vulnerability that I found in the first",
    "start": "524990",
    "end": "530640"
  },
  {
    "text": "slide and this is kind of a the simplified code of that were I monkey",
    "start": "530640",
    "end": "539580"
  },
  {
    "text": "patch the axis as I was saying and I just forwarded in in that line that says",
    "start": "539580",
    "end": "548420"
  },
  {
    "text": "request dot get and the mangled URL that's the original URL that boto tries",
    "start": "548420",
    "end": "556680"
  },
  {
    "text": "to access and I change it with this pattern in order to forward it through",
    "start": "556680",
    "end": "563820"
  },
  {
    "text": "the vulnerable side so with this simple monkey patching trick I was able to",
    "start": "563820",
    "end": "570720"
  },
  {
    "text": "access in a problematical way all the information that was stored in the",
    "start": "570720",
    "end": "576000"
  },
  {
    "text": "remote instance metadata server okay and I wrote a couple of tools I'm going to",
    "start": "576000",
    "end": "585090"
  },
  {
    "start": "578000",
    "end": "680000"
  },
  {
    "text": "show you mostly one of those and then I'm going to do a summary of the other one the first one that I wrote is called",
    "start": "585090",
    "end": "593610"
  },
  {
    "text": "nimbostratus and it has these tricks for accessing metadata and for doing some",
    "start": "593610",
    "end": "600450"
  },
  {
    "text": "other post exploitation things in the Amazon Cloud so nimbostratus is going to",
    "start": "600450",
    "end": "608810"
  },
  {
    "text": "dump all the ec2 metadata using that",
    "start": "608810",
    "end": "613920"
  },
  {
    "text": "mangled function that we were looking for as you can see there you have the",
    "start": "613920",
    "end": "619380"
  },
  {
    "text": "nimbostratus command you have dump ec2 metadata which is the sub command inside",
    "start": "619380",
    "end": "624540"
  },
  {
    "text": "nimbostratus and you need to provide this is open source you can download it",
    "start": "624540",
    "end": "629640"
  },
  {
    "text": "later and you need to provide the function that's going to mangle those requests in order to fool both alright",
    "start": "629640",
    "end": "638210"
  },
  {
    "text": "we'll run this and as you can see there it's requesting different things",
    "start": "638210",
    "end": "645360"
  },
  {
    "text": "different paths and afterwards you get the information in this case nothing",
    "start": "645360",
    "end": "652110"
  },
  {
    "text": "really interesting other than knowing that there is a security group which is",
    "start": "652110",
    "end": "659130"
  },
  {
    "text": "kind of a funny role in Amazon Cloud and something else that says usually the",
    "start": "659130",
    "end": "667830"
  },
  {
    "text": "script was reading to use a datum alright so this simple tool was able to",
    "start": "667830",
    "end": "674700"
  },
  {
    "text": "dump all the information from that Fremont instance metadata but what is",
    "start": "674700",
    "end": "683730"
  },
  {
    "start": "680000",
    "end": "913000"
  },
  {
    "text": "user data you know that the last line that we saw there what's that and I was",
    "start": "683730",
    "end": "690210"
  },
  {
    "text": "learning while I was doing this hand test I was learning as a result from the",
    "start": "690210",
    "end": "698460"
  },
  {
    "text": "pen test I wrote the tools but I didn't have any of these tools when when I was starting",
    "start": "698460",
    "end": "705180"
  },
  {
    "text": "with the pandas and I had a little bit of knowledge about Amazon but not a lot",
    "start": "705180",
    "end": "711780"
  },
  {
    "text": "so I had to kind of do some research and learn when you google user data Amazon",
    "start": "711780",
    "end": "722940"
  },
  {
    "text": "you're going to find that when you want to start an instance one of the ways of",
    "start": "722940",
    "end": "730140"
  },
  {
    "text": "configuring that instance and there are different ways Amazon is really flexible",
    "start": "730140",
    "end": "736050"
  },
  {
    "text": "but one of the ways of doing that of configuring an instance is providing a",
    "start": "736050",
    "end": "742980"
  },
  {
    "text": "use of data script something that you need to keep in mind in cloud",
    "start": "742980",
    "end": "748290"
  },
  {
    "text": "architectures is that they need to scale and they need to scale in an automated",
    "start": "748290",
    "end": "756090"
  },
  {
    "text": "way that means that at some point you're going to have three servers answering",
    "start": "756090",
    "end": "763740"
  },
  {
    "text": "HTTP requests and at some other time you're going to have five and some other",
    "start": "763740",
    "end": "769830"
  },
  {
    "text": "time you are going to have only one and those web servers need to know for",
    "start": "769830",
    "end": "777300"
  },
  {
    "text": "example the domain that they are going to be serving they need to know which a",
    "start": "777300",
    "end": "784020"
  },
  {
    "text": "web application they are going to be running the Apache configuration and a",
    "start": "784020",
    "end": "789030"
  },
  {
    "text": "lot of things and when you start an instance one of the ways of configuring",
    "start": "789030",
    "end": "794460"
  },
  {
    "text": "that instance is using user data user data script is just",
    "start": "794460",
    "end": "801570"
  },
  {
    "text": "basically you take an instance that's kind of by default Ubuntu 12 or 4 and you get a user data",
    "start": "801570",
    "end": "813100"
  },
  {
    "text": "script you merge those and you get a configured instance that can receive",
    "start": "813100",
    "end": "818140"
  },
  {
    "text": "HTTP traffic right so user data scripts have good information they need to know",
    "start": "818140",
    "end": "828220"
  },
  {
    "text": "from where to retrieve the source code of the web application they need to run",
    "start": "828220",
    "end": "834430"
  },
  {
    "text": "some steps and we were able to download the user data straight for that were",
    "start": "834430",
    "end": "842440"
  },
  {
    "text": "application that we are rendered and in",
    "start": "842440",
    "end": "850390"
  },
  {
    "text": "my case I was very lucky it's not always like this I found that the user data",
    "start": "850390",
    "end": "857410"
  },
  {
    "text": "script had a lot of information they said that the script is just a script in",
    "start": "857410",
    "end": "863020"
  },
  {
    "text": "any language and in my case it was something similar to this it had a",
    "start": "863020",
    "end": "869800"
  },
  {
    "text": "repository where the world application lived the private keys and the public",
    "start": "869800",
    "end": "875980"
  },
  {
    "text": "keys to access that repository and done of the source code and different",
    "start": "875980",
    "end": "883390"
  },
  {
    "text": "functions for actually getting the source code configuring Apache configuring I know nginx different",
    "start": "883390",
    "end": "891340"
  },
  {
    "text": "things so with this I had access to the",
    "start": "891340",
    "end": "898750"
  },
  {
    "text": "source code of the web application that was running and I was trying to ten",
    "start": "898750",
    "end": "904570"
  },
  {
    "text": "tests I had access to the source code which was really good I had the keys to",
    "start": "904570",
    "end": "915700"
  },
  {
    "start": "913000",
    "end": "960000"
  },
  {
    "text": "that web application at that point usually in kind of a regular pen test",
    "start": "915700",
    "end": "924190"
  },
  {
    "text": "what do you continue to do is you download the source code you analyze it you find on the road",
    "start": "924190",
    "end": "930339"
  },
  {
    "text": "by doing source code review and you test those vulnerabilities in the live",
    "start": "930339",
    "end": "935620"
  },
  {
    "text": "production system but that's kind of",
    "start": "935620",
    "end": "941829"
  },
  {
    "text": "boring doing source code review is a",
    "start": "941829",
    "end": "947370"
  },
  {
    "text": "lengthy process takes time takes effort and I started to think hey why is this",
    "start": "947370",
    "end": "956319"
  },
  {
    "text": "running on Amazon usually when you run on the Amazon Cloud it's because you",
    "start": "956319",
    "end": "963160"
  },
  {
    "start": "960000",
    "end": "1043000"
  },
  {
    "text": "want not only to use an ec2 instance or an ec2 instances it's because you want",
    "start": "963160",
    "end": "971319"
  },
  {
    "text": "to use different services from Amazon you want to use s3 you want to use",
    "start": "971319",
    "end": "977680"
  },
  {
    "text": "dynamodb you want to use different things so let's say that you want to build an Instagram clone you're going to",
    "start": "977680",
    "end": "985360"
  },
  {
    "text": "for example store the images in an s3 bucket and you're going to store the",
    "start": "985360",
    "end": "992949"
  },
  {
    "text": "metadata about those images like who owns which image in a no sequel database",
    "start": "992949",
    "end": "998470"
  },
  {
    "text": "such as dynamo DVD and that's great it's",
    "start": "998470",
    "end": "1004079"
  },
  {
    "text": "a great architecture something that you need to note is that in order for the",
    "start": "1004079",
    "end": "1011100"
  },
  {
    "text": "web server to be able to store the images on s3 it needs to have some kind",
    "start": "1011100",
    "end": "1018179"
  },
  {
    "text": "of credentials it needs to know kind of they it's not username and password but",
    "start": "1018179",
    "end": "1024360"
  },
  {
    "text": "it needs to know the username and password for accessing that bucket and storing the user images on s3 and the",
    "start": "1024360",
    "end": "1032100"
  },
  {
    "text": "same goes for dynamodb or any other amazon service in the web server needs",
    "start": "1032100",
    "end": "1040140"
  },
  {
    "text": "to have those credentials and there are",
    "start": "1040140",
    "end": "1045178"
  },
  {
    "start": "1043000",
    "end": "1228000"
  },
  {
    "text": "different ways of providing credentials to your instances in the Amazon tell one",
    "start": "1045179",
    "end": "1053520"
  },
  {
    "text": "of those ways is to simply hard-code they use the those credentials you can",
    "start": "1053520",
    "end": "1059909"
  },
  {
    "text": "hard code them in your application you could in the source code say access",
    "start": "1059909",
    "end": "1067260"
  },
  {
    "text": "key equals something access key secret equals something else and there you go",
    "start": "1067260",
    "end": "1076250"
  },
  {
    "text": "that's not a good practice so Amazon provides you with something called",
    "start": "1076250",
    "end": "1082460"
  },
  {
    "text": "instance profits instance profiles are a",
    "start": "1082460",
    "end": "1087510"
  },
  {
    "text": "way in which an ec2 instance can in a",
    "start": "1087510",
    "end": "1093140"
  },
  {
    "text": "kind of automated way get credentials from the metadata server and using those",
    "start": "1093140",
    "end": "1101190"
  },
  {
    "text": "credentials access the different services okay so all of this you need to",
    "start": "1101190",
    "end": "1108930"
  },
  {
    "text": "configure it's not kind of magic you need to do it we need to configure it but once you have instance profiles",
    "start": "1108930",
    "end": "1117240"
  },
  {
    "text": "applied to an ec2 instance and from that ec2 instance you want to access s3 for",
    "start": "1117240",
    "end": "1124260"
  },
  {
    "text": "example the the code running in that instance for example the code in Ruby if",
    "start": "1124260",
    "end": "1133650"
  },
  {
    "text": "you use Ruby you're going to be using something called a library called fog",
    "start": "1133650",
    "end": "1138870"
  },
  {
    "text": "if you use Python you're going to use both oh so those libraries running in",
    "start": "1138870",
    "end": "1144120"
  },
  {
    "text": "that ec2 instance will know how to retrieve the credentials from the",
    "start": "1144120",
    "end": "1150350"
  },
  {
    "text": "instance profile credentials from the instance metadata they're going to simply know how to do it so if you want",
    "start": "1150350",
    "end": "1160620"
  },
  {
    "text": "to access s3 the code is going to go to the metadata server retrieve the",
    "start": "1160620",
    "end": "1167220"
  },
  {
    "text": "credentials and then go to s3 and do whatever you need to the good thing for",
    "start": "1167220",
    "end": "1175620"
  },
  {
    "text": "us was that the instance profile",
    "start": "1175620",
    "end": "1180900"
  },
  {
    "text": "credentials are stored in the metadata server and we have read access to the",
    "start": "1180900",
    "end": "1188670"
  },
  {
    "text": "metadata server so we could read those credentials from any location and",
    "start": "1188670",
    "end": "1196020"
  },
  {
    "text": "because of the initial we read credentials for that ec2 instance and we can impersonate that",
    "start": "1196020",
    "end": "1204009"
  },
  {
    "text": "instance with any other service from the Amazon Club okay are you following me",
    "start": "1204009",
    "end": "1211690"
  },
  {
    "text": "yeah all right I know there are kind of many names and different things that",
    "start": "1211690",
    "end": "1219340"
  },
  {
    "text": "you're not aware of but I try to be gentle with my introductions okay so we",
    "start": "1219340",
    "end": "1228580"
  },
  {
    "start": "1228000",
    "end": "1266000"
  },
  {
    "text": "have access to those credentials so I wrote a simple tool called dumb",
    "start": "1228580",
    "end": "1236470"
  },
  {
    "text": "credentials that you can use to get those credentials from the remote server",
    "start": "1236470",
    "end": "1243240"
  },
  {
    "text": "you get the access key secret key and a token if you configure those in your",
    "start": "1243240",
    "end": "1249490"
  },
  {
    "text": "local workstation and you access Amazon services you're going to be",
    "start": "1249490",
    "end": "1255399"
  },
  {
    "text": "impersonating and you are going to have the same permissions then the ec2",
    "start": "1255399",
    "end": "1260919"
  },
  {
    "text": "instance that you're attacking and from where you retrieve those credentials but",
    "start": "1260919",
    "end": "1268179"
  },
  {
    "start": "1266000",
    "end": "1344000"
  },
  {
    "text": "the first thing is that you only have three strings that don't tell you",
    "start": "1268179",
    "end": "1274960"
  },
  {
    "text": "anything they don't tell you were or which service you can access so I wrote",
    "start": "1274960",
    "end": "1283480"
  },
  {
    "text": "a different tool called dump permissions which is going to perform different",
    "start": "1283480",
    "end": "1289809"
  },
  {
    "text": "steps in order to access the different endpoints of the Amazon Cloud and test",
    "start": "1289809",
    "end": "1297820"
  },
  {
    "text": "using those credentials test if you have access if you have permission to run",
    "start": "1297820",
    "end": "1303370"
  },
  {
    "text": "those API functions after running this I",
    "start": "1303370",
    "end": "1308889"
  },
  {
    "text": "found that the permissions that this tool was able to enumerate it's not kind",
    "start": "1308889",
    "end": "1315429"
  },
  {
    "text": "of there the whole permission set but only the ones that were we were able to enumerate excuse me the permissions were",
    "start": "1315429",
    "end": "1326500"
  },
  {
    "text": "those that where it says statement action excuse a fact hello resource star at",
    "start": "1326500",
    "end": "1337580"
  },
  {
    "text": "that point I said what is the excuse I don't know what it is",
    "start": "1337580",
    "end": "1343840"
  },
  {
    "text": "after a small Google search I found out that list Q's was a function in the sqs",
    "start": "1343840",
    "end": "1357250"
  },
  {
    "start": "1344000",
    "end": "1492000"
  },
  {
    "text": "api from Amazon SQS is basically a queue",
    "start": "1357280",
    "end": "1363490"
  },
  {
    "text": "when you're developing a web application and you want to run tasks that are going",
    "start": "1363490",
    "end": "1371810"
  },
  {
    "text": "to consume some time like processing video or something like that from the",
    "start": "1371810",
    "end": "1378140"
  },
  {
    "text": "front-end web application you put a task in the queue and then you have different",
    "start": "1378140",
    "end": "1384350"
  },
  {
    "text": "workers which are going to be consuming those tasks and storing the result",
    "start": "1384350",
    "end": "1389630"
  },
  {
    "text": "somewhere so SQS I have credentials to",
    "start": "1389630",
    "end": "1396170"
  },
  {
    "text": "access sqs perfect so I started Python",
    "start": "1396170",
    "end": "1402520"
  },
  {
    "text": "open a shell a Python 3 a Python shell and connected to sqs using the",
    "start": "1402520",
    "end": "1411170"
  },
  {
    "text": "credentials just like you can see there and I said for that connection get me",
    "start": "1411170",
    "end": "1418400"
  },
  {
    "text": "all the kills a lot of present and for that Amazon user and for those",
    "start": "1418400",
    "end": "1425000"
  },
  {
    "text": "credentials give me all the cues so I",
    "start": "1425000",
    "end": "1430130"
  },
  {
    "text": "found a queue there that's called nimbostratus salary and then what I did",
    "start": "1430130",
    "end": "1437360"
  },
  {
    "text": "was all right give me one of the messages that someone stored in that",
    "start": "1437360",
    "end": "1443180"
  },
  {
    "text": "cube I get one of the messages I expect the body and I find two different",
    "start": "1443180",
    "end": "1450440"
  },
  {
    "text": "interesting things first content type application x python serialized and the",
    "start": "1450440",
    "end": "1457820"
  },
  {
    "text": "second interesting thing was routing key salary perfect",
    "start": "1457820",
    "end": "1463580"
  },
  {
    "text": "who knows what salary is alright we don't have many developers here okay",
    "start": "1463580",
    "end": "1473090"
  },
  {
    "text": "I had sqs access and I wanted to also",
    "start": "1473090",
    "end": "1478580"
  },
  {
    "text": "check if I could write a message to the sq sq I tried that and it worked I was",
    "start": "1478580",
    "end": "1487160"
  },
  {
    "text": "able to write and to read from that s qsq perfect but while it's salary I",
    "start": "1487160",
    "end": "1495430"
  },
  {
    "start": "1492000",
    "end": "1532000"
  },
  {
    "text": "don't know I googled salary and this is what I found this is basically a way of",
    "start": "1495430",
    "end": "1501800"
  },
  {
    "text": "abstracting the task of sending a message to the queue serializing it in",
    "start": "1501800",
    "end": "1509750"
  },
  {
    "text": "some way sending it to the queue and this in realizing that message and processing it on a different server",
    "start": "1509750",
    "end": "1516380"
  },
  {
    "text": "right suddenly it's just an abstraction for doing that it does much more but",
    "start": "1516380",
    "end": "1522560"
  },
  {
    "text": "it's a good explanation and it's used usually used for Python web applications",
    "start": "1522560",
    "end": "1530060"
  },
  {
    "text": "it's really really popular so you know",
    "start": "1530060",
    "end": "1535450"
  },
  {
    "text": "from an attacker standpoint this is how it looked all right",
    "start": "1535450",
    "end": "1541310"
  },
  {
    "text": "I had one front-end or potentially more",
    "start": "1541310",
    "end": "1547550"
  },
  {
    "text": "front end servers sending tasks to sqs and because how celery works and how sqs",
    "start": "1547550",
    "end": "1559100"
  },
  {
    "text": "works I assumed and actually was correct",
    "start": "1559100",
    "end": "1564290"
  },
  {
    "text": "that there were and workers consuming those tasks right something interesting",
    "start": "1564290",
    "end": "1572240"
  },
  {
    "text": "to note here is that if you take a look at this diagram you will see that it",
    "start": "1572240",
    "end": "1581630"
  },
  {
    "text": "seems that the sq sq is outside of the",
    "start": "1581630",
    "end": "1587150"
  },
  {
    "text": "reach of any attacker but actually sending a message to the SQL skill is",
    "start": "1587150",
    "end": "1595810"
  },
  {
    "text": "not controlled by if I roll or anything like that you just initiate a new sqs connection and in",
    "start": "1595810",
    "end": "1604390"
  },
  {
    "text": "this sqs connection object you're going to have an API endpoint for sqs which is",
    "start": "1604390",
    "end": "1611200"
  },
  {
    "text": "going to be something like SQ s dot amazon.com all right so it might seem",
    "start": "1611200",
    "end": "1619510"
  },
  {
    "text": "here that it's protected but it's actually not you can access it if you",
    "start": "1619510",
    "end": "1624880"
  },
  {
    "text": "have the right credentials you can access it from anywhere okay so it",
    "start": "1624880",
    "end": "1630280"
  },
  {
    "text": "looked like this I was kind of I'm a graphical guy so I always draw what I'm",
    "start": "1630280",
    "end": "1638290"
  },
  {
    "text": "doing our Panthers so salary I wanted to keep gaining",
    "start": "1638290",
    "end": "1652300"
  },
  {
    "text": "access into this system into this application so I wanted to know more",
    "start": "1652300",
    "end": "1659050"
  },
  {
    "text": "about salary when I went to the salary documentation I found this very",
    "start": "1659050",
    "end": "1667960"
  },
  {
    "text": "interesting comment the default pico sterilizer is convenient because it",
    "start": "1667960",
    "end": "1674110"
  },
  {
    "text": "supports arbitrary Python objects whereas other serializers only work with",
    "start": "1674110",
    "end": "1681310"
  },
  {
    "text": "a restricted set of types if I'm a developer I stopped reading there it's",
    "start": "1681310",
    "end": "1688300"
  },
  {
    "text": "the default and it's more convenient so that's it but if you're a security guy",
    "start": "1688300",
    "end": "1696310"
  },
  {
    "text": "you read the next line but for the same reasons the pickle serializer is",
    "start": "1696310",
    "end": "1702900"
  },
  {
    "text": "inherently insecure and it had some link there and should be avoided whenever",
    "start": "1702900",
    "end": "1709690"
  },
  {
    "text": "clients are untrusted or unauthenticated ok that was interesting so in the",
    "start": "1709690",
    "end": "1720040"
  },
  {
    "text": "initial architecture that the developers defined for for this service that I was",
    "start": "1720040",
    "end": "1727120"
  },
  {
    "text": "pen testing in the initial architecture the clients for the sqs q were",
    "start": "1727120",
    "end": "1734950"
  },
  {
    "text": "authenticated and were trusted but now we stole those credentials for accessing",
    "start": "1734950",
    "end": "1742970"
  },
  {
    "text": "the sq sq so that's not true anymore right and that's also investigate a",
    "start": "1742970",
    "end": "1750320"
  },
  {
    "text": "little bit more about what people say serializer actually is this is how",
    "start": "1750320",
    "end": "1758150"
  },
  {
    "start": "1755000",
    "end": "1822000"
  },
  {
    "text": "people works in Python because it's a way of sterilizing objects you take an",
    "start": "1758150",
    "end": "1766000"
  },
  {
    "text": "arbitrary Python object you go through pickle and you get a string and then you",
    "start": "1766000",
    "end": "1776480"
  },
  {
    "text": "can take that string go through pickle again and you get the same object or",
    "start": "1776480",
    "end": "1782919"
  },
  {
    "text": "almost the same object but there is a vulnerability in the way that pickle",
    "start": "1782919",
    "end": "1790549"
  },
  {
    "text": "works which if you control the string that's going to be death I realized you",
    "start": "1790549",
    "end": "1799640"
  },
  {
    "text": "can execute arbitrary commands in that system were your death serializing the",
    "start": "1799640",
    "end": "1807950"
  },
  {
    "text": "string that's what you see there right so pickle dot low the string and you",
    "start": "1807950",
    "end": "1816200"
  },
  {
    "text": "load an arbitrary string and you execute comments so going back to our target",
    "start": "1816200",
    "end": "1828289"
  },
  {
    "text": "system we know that we can write things",
    "start": "1828289",
    "end": "1834710"
  },
  {
    "text": "to the sqs queue and we know that the",
    "start": "1834710",
    "end": "1839929"
  },
  {
    "text": "workers are going to deserialize whatever we send to the sqs queue",
    "start": "1839929",
    "end": "1847640"
  },
  {
    "text": "because that's how thoroughly celery works and we know that it's using pickle",
    "start": "1847640",
    "end": "1857049"
  },
  {
    "text": "because we saw it somewhere like there",
    "start": "1857049",
    "end": "1862179"
  },
  {
    "text": "X Python serialized if you died if I did a bit into the celery source code you're",
    "start": "1862179",
    "end": "1867490"
  },
  {
    "text": "going to find that it's pickle so perfect if I write something in a custom",
    "start": "1867490",
    "end": "1876789"
  },
  {
    "text": "format to the sq sq which I can do this",
    "start": "1876789",
    "end": "1881919"
  },
  {
    "text": "guy is going to deserialize it and if it's in the right format I'm going to be",
    "start": "1881919",
    "end": "1887950"
  },
  {
    "text": "executing arbitrary comments in the worker perfect so I did it and it wasn't",
    "start": "1887950",
    "end": "1898889"
  },
  {
    "start": "1896000",
    "end": "1951000"
  },
  {
    "text": "hard was actually pretty easy I wrote a way of automating this salary",
    "start": "1898889",
    "end": "1907570"
  },
  {
    "text": "pickle exploit you pass the credentials and you say I want a reverse shell to",
    "start": "1907570",
    "end": "1915690"
  },
  {
    "text": "this IP address and this port and I want",
    "start": "1915690",
    "end": "1920860"
  },
  {
    "text": "you to write the very specific arbitrary kind of salary looking message to this Q",
    "start": "1920860",
    "end": "1931059"
  },
  {
    "text": "and this Q lives in this region is Amazon region so you run this on a",
    "start": "1931059",
    "end": "1941259"
  },
  {
    "text": "different console in the correct server you listen for productions and what",
    "start": "1941259",
    "end": "1947169"
  },
  {
    "text": "you're executing arbitrary commands in one of the workers that's really good",
    "start": "1947169",
    "end": "1956259"
  },
  {
    "start": "1951000",
    "end": "1986000"
  },
  {
    "text": "and it's interesting to notice that we are we gain access to the first server",
    "start": "1956259",
    "end": "1964809"
  },
  {
    "text": "that we gained real access is one server that's kind of two or three kind of",
    "start": "1964809",
    "end": "1973659"
  },
  {
    "text": "architecture steps behind the front end all right so we can access through a",
    "start": "1973659",
    "end": "1981999"
  },
  {
    "text": "really strange access",
    "start": "1981999",
    "end": "1988770"
  },
  {
    "start": "1986000",
    "end": "2246000"
  },
  {
    "text": "alright are you guys following me cook",
    "start": "1988770",
    "end": "1996510"
  },
  {
    "text": "so we now have access to this server to",
    "start": "1997170",
    "end": "2002430"
  },
  {
    "text": "this worker and we know for a fact that it will be running salary it will be",
    "start": "2002430",
    "end": "2009690"
  },
  {
    "text": "running it will be kind of retrieving tasks from the queue and for returning",
    "start": "2009690",
    "end": "2018720"
  },
  {
    "text": "tasks from the queue it will need credentials right because that's the way it works so I started to look and to",
    "start": "2018720",
    "end": "2028170"
  },
  {
    "text": "kind of prose the source code and to try to identify if that worker had an",
    "start": "2028170",
    "end": "2035760"
  },
  {
    "text": "instance profile and different things but actually what I found is that the",
    "start": "2035760",
    "end": "2040770"
  },
  {
    "text": "credentials were hard-coded in this case the users were hard code so I got the",
    "start": "2040770",
    "end": "2050100"
  },
  {
    "text": "credentials for the worker and I did the",
    "start": "2050100",
    "end": "2055409"
  },
  {
    "text": "same trick as before I dumped the permissions for those credentials",
    "start": "2055410",
    "end": "2060929"
  },
  {
    "text": "because finishes are just strings they don't tell you anything if you dump the",
    "start": "2060930",
    "end": "2066659"
  },
  {
    "text": "credentials you see something like this in the second section you see sqs star",
    "start": "2066660",
    "end": "2074899"
  },
  {
    "text": "allow on any resource which makes kind of sense because you need to access sqs",
    "start": "2074900",
    "end": "2081659"
  },
  {
    "text": "you're a worker you need a way of accessing the queue in order to run",
    "start": "2081660",
    "end": "2086730"
  },
  {
    "text": "those tasks but there is a Miss configuration there someone at some",
    "start": "2086730",
    "end": "2093000"
  },
  {
    "text": "point made a mistake in this permission set up and put something like I am star",
    "start": "2093000",
    "end": "2102960"
  },
  {
    "text": "allow on any resource and that's truly",
    "start": "2102960",
    "end": "2108690"
  },
  {
    "text": "not good let me explain why I'm going to spend",
    "start": "2108690",
    "end": "2115920"
  },
  {
    "text": "that actually in the next time also when I was telling you about the",
    "start": "2115920",
    "end": "2122010"
  },
  {
    "text": "dissolute texture I said usually workers",
    "start": "2122010",
    "end": "2127890"
  },
  {
    "text": "what they do is they take a task they process it it takes some time to process that task and they store information",
    "start": "2127890",
    "end": "2135510"
  },
  {
    "text": "they said the result of the task is stored somewhere in this case that somewhere was in my sequel database",
    "start": "2135510",
    "end": "2144270"
  },
  {
    "text": "which was hosted also in the Amazon",
    "start": "2144270",
    "end": "2150990"
  },
  {
    "text": "Cloud for this Amazon music and how did I know that because if you take a look",
    "start": "2150990",
    "end": "2159000"
  },
  {
    "text": "there for the configuration for this worker it says that the hosts were this",
    "start": "2159000",
    "end": "2167369"
  },
  {
    "text": "my sequel database is it says something like yeah yeah era dot RDS dot amazona",
    "start": "2167369",
    "end": "2176010"
  },
  {
    "text": "Web Services dot-com that means that that my sequel database is part of something called RDS RDS is a",
    "start": "2176010",
    "end": "2185369"
  },
  {
    "text": "managed database that Amazon provides I",
    "start": "2185369",
    "end": "2191269"
  },
  {
    "text": "tested this as you can see the user here is no root and the password is some",
    "start": "2191540",
    "end": "2199680"
  },
  {
    "text": "random passport I tried to dump that",
    "start": "2199680",
    "end": "2204930"
  },
  {
    "text": "database I was unable to do it kind of I tried to connect to the database I was",
    "start": "2204930",
    "end": "2211770"
  },
  {
    "text": "able to do it but the information that was there wasn't really interesting",
    "start": "2211770",
    "end": "2217260"
  },
  {
    "text": "it was logs about the tasks that were run by those workers and it was kind of",
    "start": "2217260",
    "end": "2226440"
  },
  {
    "text": "no root access was kind of boring so",
    "start": "2226440",
    "end": "2232099"
  },
  {
    "text": "this is how it looks now my worker has access to all my sequel database that my",
    "start": "2232099",
    "end": "2238770"
  },
  {
    "text": "sequel database is hosted in our tears and my worker also has access to something called I am let's understand",
    "start": "2238770",
    "end": "2249240"
  },
  {
    "start": "2246000",
    "end": "2315000"
  },
  {
    "text": "what I am actually means I am is access management in Amazon",
    "start": "2249240",
    "end": "2254920"
  },
  {
    "text": "Cloud that means that if you want to define an instance profile you want to",
    "start": "2254920",
    "end": "2259990"
  },
  {
    "text": "the final user you want to define permissions groups enough that you go to",
    "start": "2259990",
    "end": "2266170"
  },
  {
    "text": "I am in your Amazon dashboard and you do",
    "start": "2266170",
    "end": "2271900"
  },
  {
    "text": "it there the information and the",
    "start": "2271900",
    "end": "2277569"
  },
  {
    "text": "configuration that you said there is also accessible through an API and you",
    "start": "2277569",
    "end": "2284050"
  },
  {
    "text": "can grant users access to that API here by mistake and this is totally the fault",
    "start": "2284050",
    "end": "2293470"
  },
  {
    "text": "of the guy configuring the permissions",
    "start": "2293470",
    "end": "2298530"
  },
  {
    "text": "we have access because of this here",
    "start": "2298680",
    "end": "2306930"
  },
  {
    "text": "because of this I am star allow on any",
    "start": "2306930",
    "end": "2312309"
  },
  {
    "text": "resource we have access to performing any action in the I am API and that's",
    "start": "2312309",
    "end": "2323500"
  },
  {
    "start": "2315000",
    "end": "2340000"
  },
  {
    "text": "actually interesting because if we have",
    "start": "2323500",
    "end": "2328900"
  },
  {
    "text": "that access we can actually create a different user and assign any",
    "start": "2328900",
    "end": "2335549"
  },
  {
    "text": "permissions to that new user so let's do",
    "start": "2335549",
    "end": "2340900"
  },
  {
    "start": "2340000",
    "end": "2501000"
  },
  {
    "text": "it why not so we create a wrote a small script that",
    "start": "2340900",
    "end": "2348490"
  },
  {
    "text": "does that create I am user if you provide the right",
    "start": "2348490",
    "end": "2353559"
  },
  {
    "text": "credentials it will be able to do it and it will create a random user with a",
    "start": "2353559",
    "end": "2358960"
  },
  {
    "text": "random name with all the privileges that means that that new user will be able to",
    "start": "2358960",
    "end": "2366069"
  },
  {
    "text": "send any request to any of the a Amazon",
    "start": "2366069",
    "end": "2371530"
  },
  {
    "text": "API and it will succeed okay so that's",
    "start": "2371530",
    "end": "2378160"
  },
  {
    "text": "kind of getting root on the Amazon Cloud for one user",
    "start": "2378160",
    "end": "2384140"
  },
  {
    "text": "if you have this if you have all the iron permissions you are root for that",
    "start": "2384140",
    "end": "2390940"
  },
  {
    "text": "Amazon Cloud okay so this is important",
    "start": "2390940",
    "end": "2398260"
  },
  {
    "text": "just to verify I dumped the permissions for the new access keys and secret keys",
    "start": "2398260",
    "end": "2404450"
  },
  {
    "text": "and it says yes you have everything you can do whatever you so I got root and",
    "start": "2404450",
    "end": "2413930"
  },
  {
    "text": "that Amazon Cloud that was great and I",
    "start": "2413930",
    "end": "2419930"
  },
  {
    "text": "thought what else kind of I was able to get access to the source code of the",
    "start": "2419930",
    "end": "2427130"
  },
  {
    "text": "front-end web application I was able to get remote code execution on the scan",
    "start": "2427130",
    "end": "2434180"
  },
  {
    "text": "workers I was able to access the my sequel database but with a restricted",
    "start": "2434180",
    "end": "2440990"
  },
  {
    "text": "permission set so I said I want I want I",
    "start": "2440990",
    "end": "2448340"
  },
  {
    "text": "want all the information that's stored in that database not only the one that I can access with it no root user as we",
    "start": "2448340",
    "end": "2457370"
  },
  {
    "text": "said before that my sequel was running or yeah what's running on RDS and now I",
    "start": "2457370",
    "end": "2468050"
  },
  {
    "text": "can manage because of this privilege escalation I can manage that my sequel",
    "start": "2468050",
    "end": "2475550"
  },
  {
    "text": "database through RDS not only connect to it using the my sequel protocol but I",
    "start": "2475550",
    "end": "2481100"
  },
  {
    "text": "can also at a higher level I can manage that database one of the functions that",
    "start": "2481100",
    "end": "2488330"
  },
  {
    "text": "Amazon provides you when you have your my sequel in RDS is for you to run",
    "start": "2488330",
    "end": "2497710"
  },
  {
    "text": "backup of that database so we could",
    "start": "2497710",
    "end": "2503600"
  },
  {
    "start": "2501000",
    "end": "2568000"
  },
  {
    "text": "create a snapshot we could restore that snapshot with a different name",
    "start": "2503600",
    "end": "2508880"
  },
  {
    "text": "also in RDS and then we can set because RDS also provides you with that API and",
    "start": "2508880",
    "end": "2515930"
  },
  {
    "text": "then we could set the root password for that restored snapshot",
    "start": "2515930",
    "end": "2521960"
  },
  {
    "text": "which has all the information of the Orient of the original one we could set",
    "start": "2521960",
    "end": "2527990"
  },
  {
    "text": "the password there and connect to it and I'm just doing this kind of snapshot and",
    "start": "2527990",
    "end": "2536300"
  },
  {
    "text": "restore because I didn't want to change the root password of the original my",
    "start": "2536300",
    "end": "2543860"
  },
  {
    "text": "sequel database because that could break things right if someone is actually",
    "start": "2543860",
    "end": "2549320"
  },
  {
    "text": "using the root user for something some application is using it and I change it",
    "start": "2549320",
    "end": "2554660"
  },
  {
    "text": "the whole thing breaks down so I created a snapshot restore the",
    "start": "2554660",
    "end": "2560720"
  },
  {
    "text": "snapshot in an RDS again new RDS database instance and then I changed the",
    "start": "2560720",
    "end": "2566630"
  },
  {
    "text": "password and I automated that pretty simple you pass the credentials and the",
    "start": "2566630",
    "end": "2575090"
  },
  {
    "text": "new password the name of the instance that you want to clone the region world",
    "start": "2575090",
    "end": "2582650"
  },
  {
    "text": "lives it runs and after some time you're able to connect to it with the new",
    "start": "2582650",
    "end": "2591860"
  },
  {
    "text": "password but containing all the same information that we have in the original",
    "start": "2591860",
    "end": "2598400"
  },
  {
    "text": "database I did it I connected to it I found some important",
    "start": "2598400",
    "end": "2604850"
  },
  {
    "text": "database which I was unable to access before with some new information and I",
    "start": "2604850",
    "end": "2614510"
  },
  {
    "text": "was kind of rocking the cloud at that point and it was really happy I was",
    "start": "2614510",
    "end": "2622520"
  },
  {
    "text": "happy that I was able to do all this I was happy that the learning process",
    "start": "2622520",
    "end": "2629840"
  },
  {
    "text": "behind it was so interesting and my",
    "start": "2629840",
    "end": "2636230"
  },
  {
    "text": "conclusions here are rather simple when",
    "start": "2636230",
    "end": "2642440"
  },
  {
    "text": "I asked you guys a couple of questions about the Amazon Cloud and I asked you",
    "start": "2642440",
    "end": "2649040"
  },
  {
    "text": "to raise your hands not many of you raise your head and I'm",
    "start": "2649040",
    "end": "2655320"
  },
  {
    "text": "a little bit disappointed a lot of developers are storing and are hosting",
    "start": "2655320",
    "end": "2663240"
  },
  {
    "text": "their applications on Amazon or on different clouds if you're interested in",
    "start": "2663240",
    "end": "2672150"
  },
  {
    "text": "security if you're somehow in charge of",
    "start": "2672150",
    "end": "2678150"
  },
  {
    "text": "the security of those applications you need to know all this the developers are",
    "start": "2678150",
    "end": "2684660"
  },
  {
    "text": "leading the way and we need to help them secure the they",
    "start": "2684660",
    "end": "2690990"
  },
  {
    "text": "Amazon architecture that they use so you should learn about Amazon or you should",
    "start": "2690990",
    "end": "2698520"
  },
  {
    "text": "learn about any other cloud provider that your development teams are used in",
    "start": "2698520",
    "end": "2704910"
  },
  {
    "text": "this specific case Amazon provides a free tier kind of licensing which you",
    "start": "2704910",
    "end": "2712560"
  },
  {
    "text": "could use for learning it's for free you should use it most modern abilities here",
    "start": "2712560",
    "end": "2721440"
  },
  {
    "text": "are misconfigurations are kind of small things where the",
    "start": "2721440",
    "end": "2730020"
  },
  {
    "text": "developers working on this application made mistakes it's my impression that",
    "start": "2730020",
    "end": "2738440"
  },
  {
    "text": "this is not Amazon's fault right this is the the way in which they build things",
    "start": "2738440",
    "end": "2746640"
  },
  {
    "text": "in this specific case all right",
    "start": "2746640",
    "end": "2753900"
  },
  {
    "start": "2751000",
    "end": "2903000"
  },
  {
    "text": "source code I told you that we had two",
    "start": "2753900",
    "end": "2759720"
  },
  {
    "text": "different were two different repositories or applications one is",
    "start": "2759720",
    "end": "2765800"
  },
  {
    "text": "nimbostratus nimbostratus is a tool that i showed you during this",
    "start": "2765800",
    "end": "2771000"
  },
  {
    "text": "presentation it's a kind of",
    "start": "2771000",
    "end": "2776770"
  },
  {
    "text": "complex to to use because you need to be in an environment where you already have",
    "start": "2776770",
    "end": "2783160"
  },
  {
    "text": "some kind of access to that Amazon instance set up it's a post exploitation",
    "start": "2783160",
    "end": "2791530"
  },
  {
    "text": "tool you are not going to just use it like nmap you just run it against the",
    "start": "2791530",
    "end": "2797230"
  },
  {
    "text": "server I get results it's manual labor but it's really good it's well coated",
    "start": "2797230",
    "end": "2805470"
  },
  {
    "text": "you should test the second tool that I",
    "start": "2805470",
    "end": "2811089"
  },
  {
    "text": "wrote is kind of a hack MacLeod",
    "start": "2811089",
    "end": "2816490"
  },
  {
    "text": "it's nimbostratus target so because I",
    "start": "2816490",
    "end": "2821500"
  },
  {
    "text": "know that not many of you have the time to set up an environment to play with",
    "start": "2821500",
    "end": "2827920"
  },
  {
    "text": "nimbostratus I wrote the script which if",
    "start": "2827920",
    "end": "2833290"
  },
  {
    "text": "you just provide your Amazon credentials for the free tier you provide those",
    "start": "2833290",
    "end": "2838990"
  },
  {
    "text": "credentials you run the script and it's going to create in your Amazon Cloud",
    "start": "2838990",
    "end": "2844690"
  },
  {
    "text": "it's going to create the same exactly the same environment that we saw during the presentation so you run that script",
    "start": "2844690",
    "end": "2852040"
  },
  {
    "text": "you wait for let's say 10 minutes and the amazon does all the magic and you",
    "start": "2852040",
    "end": "2857710"
  },
  {
    "text": "have all the same environment running there and then you can use nimbostratus",
    "start": "2857710",
    "end": "2863470"
  },
  {
    "text": "to attack it to learn to modify it and to do whatever you got one small hint",
    "start": "2863470",
    "end": "2874410"
  },
  {
    "text": "and warning of mostly is that if you ran nimbostratus target is going to start",
    "start": "2874410",
    "end": "2881770"
  },
  {
    "text": "different instances in the Amazon Cloud and when you finish kind of playing with",
    "start": "2881770",
    "end": "2889119"
  },
  {
    "text": "it shut down all the instances because if you just keep them running there you're going to start seeing kind of",
    "start": "2889119",
    "end": "2897430"
  },
  {
    "text": "charges in your Amazon bill all right ok",
    "start": "2897430",
    "end": "2904420"
  },
  {
    "start": "2903000",
    "end": "2935000"
  },
  {
    "text": "so this is me follow me on Twitter",
    "start": "2904420",
    "end": "2909849"
  },
  {
    "text": "send me an email and the recent myself I have been working on a new project",
    "start": "2909849",
    "end": "2916690"
  },
  {
    "text": "called thank you thank you is a software-as-a-service for scanning web applications which is easily integrated",
    "start": "2916690",
    "end": "2924069"
  },
  {
    "text": "with the SDLC I've been working on that so subscribe tested hopefully you will",
    "start": "2924069",
    "end": "2934599"
  },
  {
    "text": "like it questions we have like almost ten",
    "start": "2934599",
    "end": "2939999"
  },
  {
    "start": "2935000",
    "end": "3370000"
  },
  {
    "text": "minutes for questions there's a microphone there don't run away yes microphone guy they",
    "start": "2939999",
    "end": "2953829"
  },
  {
    "text": "microphone hello so the the tool that you wrote the enumerates the privileges",
    "start": "2953829",
    "end": "2960099"
  },
  {
    "text": "the given access keys have or it tries out like rape and all the different",
    "start": "2960099",
    "end": "2966660"
  },
  {
    "text": "sorry I'm not treating you well but you sorry the tool that you wrote that enumerates the privileges based on and",
    "start": "2966660",
    "end": "2974499"
  },
  {
    "text": "just trying out the api's and saying what works do you know what that leads traces and cloud trails for the failures",
    "start": "2974499",
    "end": "2981759"
  },
  {
    "text": "yeah if you the question was if the I",
    "start": "2981759",
    "end": "2987400"
  },
  {
    "text": "suppose the damn permission tool leaves traces yes if the the service is",
    "start": "2987400",
    "end": "2997329"
  },
  {
    "text": "well configured it will leave traces of all the failures in in the accesses by",
    "start": "2997329",
    "end": "3004229"
  },
  {
    "text": "default I believe no love is stored for failure to access and API resource okay",
    "start": "3004229",
    "end": "3012359"
  },
  {
    "text": "not even in Clara's sorry not even in cloud trails I don't know okay",
    "start": "3012359",
    "end": "3020869"
  },
  {
    "text": "besides the catastrophic flow of putting the credentials into the anit file it",
    "start": "3023210",
    "end": "3029160"
  },
  {
    "text": "seems that the second biggest problem that you encountered was that they had opened up all the security groups",
    "start": "3029160",
    "end": "3034920"
  },
  {
    "text": "because for you to be able to run that shell since Amazon starts all the security groups as not open was that",
    "start": "3034920",
    "end": "3042570"
  },
  {
    "text": "something also that you discovered through the metadata or was it in the question was about the security group",
    "start": "3042570",
    "end": "3049770"
  },
  {
    "text": "and how I was able to connect to the",
    "start": "3049770",
    "end": "3055980"
  },
  {
    "text": "worker the answer there is that I use a reverse Connect so the worker actually",
    "start": "3055980",
    "end": "3062880"
  },
  {
    "text": "started a connection but to my server so",
    "start": "3062880",
    "end": "3069710"
  },
  {
    "text": "usually and I just I'm generalizing usually security groups only restrict",
    "start": "3069710",
    "end": "3076430"
  },
  {
    "text": "inbound connections to the servers so they see two instances and in this case",
    "start": "3076430",
    "end": "3084240"
  },
  {
    "text": "I was using outgoing traffic so it's it",
    "start": "3084240",
    "end": "3089520"
  },
  {
    "text": "worked because it worked and I believe that usually it will work does that",
    "start": "3089520",
    "end": "3097320"
  },
  {
    "text": "answer your question well I was wondering if you'd actually gone into the admin console once you have the credentials and change that because by",
    "start": "3097320",
    "end": "3103290"
  },
  {
    "text": "default they're actually not open outbound or inbound you actually have to set that up as an admin you're asking if",
    "start": "3103290",
    "end": "3111750"
  },
  {
    "text": "I if I enter the admin console sorry no so the security groups by default aren't opens I was just wondering if you",
    "start": "3111750",
    "end": "3118020"
  },
  {
    "text": "discovered that you could actually get out of the security group from the worker node that was monitoring the SQS",
    "start": "3118020",
    "end": "3124610"
  },
  {
    "text": "to have your your shell session started",
    "start": "3124610",
    "end": "3130100"
  },
  {
    "text": "why do you say that the security groups by default aren't open what does that",
    "start": "3130100",
    "end": "3135300"
  },
  {
    "text": "mean because as an admin you have to set those up in AWS to allow any protocol in",
    "start": "3135300",
    "end": "3141720"
  },
  {
    "text": "or out there default deny by by default yes but by default outgoing is alive",
    "start": "3141720",
    "end": "3150510"
  },
  {
    "text": "even even the Machine sits within the security group it has somebody has to give it the the port and are you sure",
    "start": "3150510",
    "end": "3157170"
  },
  {
    "text": "that outgoing outgoing connections are denied by default all right that's new",
    "start": "3157170",
    "end": "3162720"
  },
  {
    "text": "for me that's good to know in this case in the case of the",
    "start": "3162720",
    "end": "3170700"
  },
  {
    "text": "application that I was pen testing and in the case of the nimbostratus target and they both have outgoing connections",
    "start": "3170700",
    "end": "3178200"
  },
  {
    "text": "enabled for the workers okay I still",
    "start": "3178200",
    "end": "3183930"
  },
  {
    "text": "believe that outgoing connections is a very common in security groups but I",
    "start": "3183930",
    "end": "3190830"
  },
  {
    "text": "will double-check it it's interesting information and were able to pull the",
    "start": "3190830",
    "end": "3196530"
  },
  {
    "text": "application code as well as the database or did you try the what sorry I don't",
    "start": "3196530",
    "end": "3202680"
  },
  {
    "text": "hear the worker code itself did you actually go into the the worker application area pull source code as",
    "start": "3202680",
    "end": "3208980"
  },
  {
    "text": "well well I have access to the kind of remote",
    "start": "3208980",
    "end": "3214740"
  },
  {
    "text": "command execution in the worker so for example the credentials that I got to access the RDS database they might see",
    "start": "3214740",
    "end": "3221580"
  },
  {
    "text": "what otherwise to those an RDS was hard code that there in the source code so I was reading through that source code but",
    "start": "3221580",
    "end": "3229140"
  },
  {
    "text": "only mostly doing greps on it okay thank you",
    "start": "3229140",
    "end": "3235430"
  },
  {
    "text": "hi this one's mostly for clarification so forgive me if I'm wasting anybody's time but I'm just curious you mentioned",
    "start": "3236690",
    "end": "3243710"
  },
  {
    "text": "early on that you the credentials were in the user data scripts to access the",
    "start": "3243710",
    "end": "3250730"
  },
  {
    "text": "AWS cloud but you had mentioned on another point there might be common practice to access the metadata server for those credentials",
    "start": "3250730",
    "end": "3256849"
  },
  {
    "text": "I might just misunderstanding or had you would you have been able to access those credentials directly do the metadata",
    "start": "3256849",
    "end": "3262790"
  },
  {
    "text": "server by proxy in that request all right there are two different sets of",
    "start": "3262790",
    "end": "3268540"
  },
  {
    "text": "credentials in in that front-end ec2",
    "start": "3268540",
    "end": "3273890"
  },
  {
    "text": "instance maybe I didn't explain myself well but the basic idea is that in the",
    "start": "3273890",
    "end": "3280280"
  },
  {
    "text": "user data script you have credentials for pulling the source code from some",
    "start": "3280280",
    "end": "3285800"
  },
  {
    "text": "repository and you have a different set of credentials that's stored in the",
    "start": "3285800",
    "end": "3291619"
  },
  {
    "text": "instance profile and those credentials stored in the incidence profile is in",
    "start": "3291619",
    "end": "3298940"
  },
  {
    "text": "the metadata server also just like the user data is in the metadata server but",
    "start": "3298940",
    "end": "3304940"
  },
  {
    "text": "those instance profile credentials are for accessing different services within",
    "start": "3304940",
    "end": "3310730"
  },
  {
    "text": "that Amazon Cloud right so there are two different sets of credentials they don't",
    "start": "3310730",
    "end": "3316040"
  },
  {
    "text": "have anything okay the only common thing is that they are stored in the metadata",
    "start": "3316040",
    "end": "3322099"
  },
  {
    "text": "server but in different paths between in that matter I deserve gotcha so the",
    "start": "3322099",
    "end": "3328579"
  },
  {
    "text": "execution path that you took was to get through to the you just access the web",
    "start": "3328579",
    "end": "3333680"
  },
  {
    "text": "application so various choice code using that link and that's where you got additional information did I skip a step",
    "start": "3333680",
    "end": "3342859"
  },
  {
    "text": "I read the AWS credentials from the instance profile for the front-end web",
    "start": "3342859",
    "end": "3351020"
  },
  {
    "text": "application and I used that to gain access to the sqs cute gadget right",
    "start": "3351020",
    "end": "3356329"
  },
  {
    "text": "excellent perfect thank you any other questions",
    "start": "3356329",
    "end": "3362090"
  },
  {
    "text": "No all right thank you so much",
    "start": "3362090",
    "end": "3367400"
  }
]