[
  {
    "text": "foreign",
    "start": "1979",
    "end": "4159"
  },
  {
    "text": "thank you so much for being here my name is Sophia Sally and I'm a cryptography researcher at Brave and I'm joined today",
    "start": "10820",
    "end": "17820"
  },
  {
    "text": "with Martin Opera Professor from Royal Holloway University of London Dan Jones a PhD student from Royal Holloway",
    "start": "17820",
    "end": "25619"
  },
  {
    "text": "University of London and Benjamin darling a lecturer from Sheffield University and today we're going to be",
    "start": "25619",
    "end": "32758"
  },
  {
    "text": "talking about our paper and research practical practically exploitable cryptographic vulnerabilities in Matrix",
    "start": "32759",
    "end": "39059"
  },
  {
    "text": "and if you want to learn more about the research and our Associated paper you can go to the link that is listed into",
    "start": "39059",
    "end": "45540"
  },
  {
    "text": "this slide okay",
    "start": "45540",
    "end": "50820"
  },
  {
    "text": "um so just to give you a limit of an outline of our talk uh first we're going to be introducing what is secure",
    "start": "50820",
    "end": "56100"
  },
  {
    "text": "messaging and also why it's important in the context of Matrix then we're going to talk about the cryptography in The",
    "start": "56100",
    "end": "62100"
  },
  {
    "text": "Matrix Matrix protocol then we go forward with our attacks and then we leave you with some take-home messages",
    "start": "62100",
    "end": "67560"
  },
  {
    "text": "and some lessons today also next slide so what is Matrix uh Matrix is basically",
    "start": "67560",
    "end": "75360"
  },
  {
    "text": "uh this protocol that is used for secure messaging and why is important is because secure messaging nowadays is",
    "start": "75360",
    "end": "81540"
  },
  {
    "text": "really vital for our societies because it provides security and privacy properties for end users that use it and",
    "start": "81540",
    "end": "87600"
  },
  {
    "text": "it's really vital to look into this protocols and really attest to the security and privacy properties that",
    "start": "87600",
    "end": "92820"
  },
  {
    "text": "they provide so we can we give Assurance to the end users and indeed their conversations are predicted and that",
    "start": "92820",
    "end": "99479"
  },
  {
    "text": "they are not sent in plain text next slide so as I said what is Matrix Matrix is a",
    "start": "99479",
    "end": "106259"
  },
  {
    "text": "standard for very Federated decentralized group message and they also have encryption enabled by default",
    "start": "106259",
    "end": "113280"
  },
  {
    "text": "the flagship client is element which is the one that the majority of people use",
    "start": "113280",
    "end": "119460"
  },
  {
    "text": "basically they have a threat model in which of course they are working over the end-to-end encryption in which the",
    "start": "119460",
    "end": "125759"
  },
  {
    "text": "home servers are considered as not a trusted entities but we will see next",
    "start": "125759",
    "end": "131099"
  },
  {
    "text": "that maybe this assumption was not taken rightly from the developers of the",
    "start": "131099",
    "end": "136200"
  },
  {
    "text": "Matrix protocol and if you want to contracts with other applications there's of course a slack",
    "start": "136200",
    "end": "141239"
  },
  {
    "text": "Microsoft teams so Lipa matmos which indeed provides some end-to-end secure messaging Properties or some",
    "start": "141239",
    "end": "146580"
  },
  {
    "text": "decentralized properties but none of them provide all of the properties that Matrix aims to provide",
    "start": "146580",
    "end": "152099"
  },
  {
    "text": "next Supply so why would we looked at Matrix into our research press because it is widely",
    "start": "152099",
    "end": "158280"
  },
  {
    "text": "used a city listed on the slide element has over 60 million uses and some of the uses of Matrix include for example the",
    "start": "158280",
    "end": "165360"
  },
  {
    "text": "French government with an application instant messaging application called teacher and also the German healthcare",
    "start": "165360",
    "end": "171900"
  },
  {
    "text": "system which has adopted Matrix so as you can see from this slides Matrix is widely used the second one we looked at",
    "start": "171900",
    "end": "178680"
  },
  {
    "text": "it is because of what I said because Matrix occupies a unique Niche place on",
    "start": "178680",
    "end": "184379"
  },
  {
    "text": "the market because it's one of the few secure messaging protocols that works also over a decentralized system and the",
    "start": "184379",
    "end": "191400"
  },
  {
    "text": "third one is because many standardizations protocols such as the IDF are currently looking at actually",
    "start": "191400",
    "end": "196500"
  },
  {
    "text": "standardized secure messaging in a group chat setting with for example MLS and they're also looking at the standardized",
    "start": "196500",
    "end": "202680"
  },
  {
    "text": "interoperable secure message in which Matrix can be an actual candidate for",
    "start": "202680",
    "end": "207900"
  },
  {
    "text": "that and just to give you a little bit of my overview how the architecture of Matrix",
    "start": "207900",
    "end": "213599"
  },
  {
    "text": "works you have basically three big entities of Matrix you have devices uses",
    "start": "213599",
    "end": "219000"
  },
  {
    "text": "and you have the Home Server so Matrix is user is is associated with a list of devices so set devices could be for",
    "start": "219000",
    "end": "225959"
  },
  {
    "text": "example the laptop a tablet or any kinds of computers and the usage registers",
    "start": "225959",
    "end": "231000"
  },
  {
    "text": "those lists of devices with the Home Server this Home Server is the entities that server but basically acts as the",
    "start": "231000",
    "end": "237840"
  },
  {
    "text": "entity the relays messages in a room between the different uses and it's also the one that has the list of the devices",
    "start": "237840",
    "end": "244019"
  },
  {
    "text": "that the user controls um next home service are the ones that maintain the link between a user account",
    "start": "244019",
    "end": "250680"
  },
  {
    "text": "and its devices and lastly a room is a collection of devices of the devices the different users calls and they are the",
    "start": "250680",
    "end": "256979"
  },
  {
    "text": "ones who are actually trying to communicate with each other in a group set so next slide and now we go for the",
    "start": "256979",
    "end": "263460"
  },
  {
    "text": "cryptography in Matrix hi uh thank you very much Sofia so now we're moving over to the cryptography",
    "start": "263460",
    "end": "270419"
  },
  {
    "text": "that's used in Matrix and I'm going to give you a really high level very quick uh overview of how these functionalities",
    "start": "270419",
    "end": "276720"
  },
  {
    "text": "come together so Matrix has a set of what we called core functionalities essentially three",
    "start": "276720",
    "end": "281940"
  },
  {
    "text": "subparticles that are going to be used to actually enable group messaging within Matrix on the left hand side here",
    "start": "281940",
    "end": "288600"
  },
  {
    "text": "we have device and entity authentication where users and their devices generate public keys and then use the",
    "start": "288600",
    "end": "294900"
  },
  {
    "text": "cross-siding framework in order to authenticate those public keys to each other once you have authenticated those",
    "start": "294900",
    "end": "301259"
  },
  {
    "text": "public Keys you are assured that Bob owns the public key that you expect we then move over to session establishment",
    "start": "301259",
    "end": "307440"
  },
  {
    "text": "so if you're familiar with signal sender Keys architecture this is going to sound very very familiar to you what happens",
    "start": "307440",
    "end": "313860"
  },
  {
    "text": "is Alice and all of the devices that are communicating within her room establish pairwise own channels you can think of",
    "start": "313860",
    "end": "321240"
  },
  {
    "text": "these as roughly similar to Signal channels being established between Alice and her devices and all other devices in",
    "start": "321240",
    "end": "327419"
  },
  {
    "text": "the room once you've established those own pairwise channels you're going to use that to actually communicate the",
    "start": "327419",
    "end": "333539"
  },
  {
    "text": "keying material used to encrypt messages from Alice's device to all all other devices in the room enabling",
    "start": "333539",
    "end": "340160"
  },
  {
    "text": "unidirectional group communication through the composition of these Mega ohm channels so once you've established",
    "start": "340160",
    "end": "347160"
  },
  {
    "text": "these home channels you send across some keying material using them and then we go into actual session communication",
    "start": "347160",
    "end": "353100"
  },
  {
    "text": "using the ohm sub protocol so let's dive into these a little bit more so the cross signing framework",
    "start": "353100",
    "end": "359880"
  },
  {
    "text": "essentially allows you to establish a web of trust what happens is each user is going to set up an account with a",
    "start": "359880",
    "end": "365940"
  },
  {
    "text": "particular Home Server which allocates that user a user identifier the user",
    "start": "365940",
    "end": "371280"
  },
  {
    "text": "then generates a set of what we call cross signing Secrets or user secrets and these are going to be used to",
    "start": "371280",
    "end": "377340"
  },
  {
    "text": "authenticate lots of different public keys in order to establish own channels so we have our master key which serves",
    "start": "377340",
    "end": "384600"
  },
  {
    "text": "as the long-term identity of Alice and is also essentially the root of trust from Alice everything flows from this",
    "start": "384600",
    "end": "391800"
  },
  {
    "text": "master key this master key is going to be used to sign two other public Keys a",
    "start": "391800",
    "end": "397919"
  },
  {
    "text": "user sign-in key so the user signing key is going to be used when Alice and Bob get together and verify their Master",
    "start": "397919",
    "end": "403919"
  },
  {
    "text": "public keys so now that Alice knows that Bob's Master public key is actually owned by Bob she's going to use her user",
    "start": "403919",
    "end": "410220"
  },
  {
    "text": "signing key to sign Bob's master key then later when you meet up with Alice you're going to be able to verify not",
    "start": "410220",
    "end": "416940"
  },
  {
    "text": "just Alice's Master public key but through this root of authentication you're going to be able to verify Bob's",
    "start": "416940",
    "end": "422400"
  },
  {
    "text": "Master public key as well finally Alice generates a self-signing key and this is going to be used to sign",
    "start": "422400",
    "end": "429120"
  },
  {
    "text": "per device public keys so Matrix is a device oriented group",
    "start": "429120",
    "end": "435120"
  },
  {
    "text": "messaging protocol so how is this established well whenever Alice has a new device that she wants to be able to",
    "start": "435120",
    "end": "441060"
  },
  {
    "text": "communicate with other users in her room she's going to log on to the Home Server with its account credentials and this is",
    "start": "441060",
    "end": "447840"
  },
  {
    "text": "important the Home Server is going to allocate that device a device identifier that's going to be used as a vector in",
    "start": "447840",
    "end": "453240"
  },
  {
    "text": "one of our attacks then the device generates per device keys and registers those with the Home",
    "start": "453240",
    "end": "458699"
  },
  {
    "text": "Server these are the long-term device Keys these are the things that are being signed by Alice's self-signing key and",
    "start": "458699",
    "end": "465660"
  },
  {
    "text": "also the omkey bundle and this is going to be used to establish per device pairwise channels",
    "start": "465660",
    "end": "472500"
  },
  {
    "text": "using the ohm protocol so how does that work so once Alice has established these",
    "start": "472500",
    "end": "479220"
  },
  {
    "text": "these omkey bundle she's going to upload that o key bundle to the Home Server and",
    "start": "479220",
    "end": "484259"
  },
  {
    "text": "then later at some point Bob's going to want to communicate with her so Bob's going to retrieve that public key bundle",
    "start": "484259",
    "end": "489539"
  },
  {
    "text": "from the Home Server and then use that to establish some shared symmetric key that's going to be used to encrypt",
    "start": "489539",
    "end": "495479"
  },
  {
    "text": "messages from Bob to Alice importantly this isn't going to be used to encrypt application layer messages messages that",
    "start": "495479",
    "end": "502440"
  },
  {
    "text": "are actually seen by the user and typed by the user but this is instead going to be used to communicate session State",
    "start": "502440",
    "end": "508740"
  },
  {
    "text": "this Mega ohm session state is actually what's going to be used to encrypt messages from Alice to the rest of the",
    "start": "508740",
    "end": "516360"
  },
  {
    "text": "members of her group so Bob does triple Divi Hellman he dubs double ratchet to",
    "start": "516360",
    "end": "522060"
  },
  {
    "text": "derive a message key and then he's going to use that message key to encrypt the mega arm session state",
    "start": "522060",
    "end": "529140"
  },
  {
    "text": "so the mega room session state is actually what's going to be used to encrypt messages from Alice to the rest",
    "start": "529140",
    "end": "534360"
  },
  {
    "text": "of her room so what is this actually consisting of so this Mega room session",
    "start": "534360",
    "end": "540060"
  },
  {
    "text": "state which is encrypted using these ohm pairwise channels consists of the message index how many times Alice has",
    "start": "540060",
    "end": "547320"
  },
  {
    "text": "tried to use this particular state to encrypt messages to the rest of her group the internal ratchet state which is this",
    "start": "547320",
    "end": "554640"
  },
  {
    "text": "keying material that's going to be used for derived message keys and encrypt actual messages and the group signing",
    "start": "554640",
    "end": "560700"
  },
  {
    "text": "key this group signing key is going to be used to authenticate ciphertext between Alice and the rest of our group",
    "start": "560700",
    "end": "566420"
  },
  {
    "text": "so the idea here is this internal ratchet state is some symmetric keying material which means that everyone else",
    "start": "566420",
    "end": "573120"
  },
  {
    "text": "in the room knows this so everyone else in the room can encrypt messages as if they were Alice this group signing key",
    "start": "573120",
    "end": "579180"
  },
  {
    "text": "prevents that sort of within the group Insider impersonation attack uh this can be split up into outbound",
    "start": "579180",
    "end": "586680"
  },
  {
    "text": "and inbound sessions where the outbound session contains the actual signing key used to authenticate messages from Alice",
    "start": "586680",
    "end": "592920"
  },
  {
    "text": "to the rest of our room and then the inbound session which contains the public key used to authenticate those",
    "start": "592920",
    "end": "599459"
  },
  {
    "text": "so on a high level that's the mega ohm session State that's what's actually being communicated via these own pairwise channels so what is this",
    "start": "599459",
    "end": "607320"
  },
  {
    "text": "internal ratchet state at its core Mega room is a symmetric ratcheting protocol similar to the",
    "start": "607320",
    "end": "613500"
  },
  {
    "text": "signal symmetric ratcheting protocol used within the double ratchet scheme so the idea here is that every time you",
    "start": "613500",
    "end": "619800"
  },
  {
    "text": "want to encrypt a new message between Alice and the rest of our group she's going to ratchet forward her State go",
    "start": "619800",
    "end": "625560"
  },
  {
    "text": "from I minus 1 to I and then she's going to use a key derivation function to",
    "start": "625560",
    "end": "630600"
  },
  {
    "text": "derive a message key used for encryption then she's going to ratchet the ratchet",
    "start": "630600",
    "end": "636240"
  },
  {
    "text": "stay forward again going from I to I plus one the next time she wants to encrypt a message she takes that",
    "start": "636240",
    "end": "641640"
  },
  {
    "text": "ratcheting state uses a key derivation function and derives a new message key for encryption this gets us two",
    "start": "641640",
    "end": "647399"
  },
  {
    "text": "properties the first one is it allows us to drive a new key for each individual message",
    "start": "647399",
    "end": "652920"
  },
  {
    "text": "and secondly it means that the compromise of Alice's current state let's say she's at stage I plus one",
    "start": "652920",
    "end": "658140"
  },
  {
    "text": "doesn't impact the security of keys derived beforehand so you can't roll",
    "start": "658140",
    "end": "664079"
  },
  {
    "text": "back that ratchet state from I plus 1 to I in order to derive the same key Ki and",
    "start": "664079",
    "end": "670740"
  },
  {
    "text": "decrypt previous messages so we've looked at what the ratchet is we looked at what the session State",
    "start": "670740",
    "end": "676800"
  },
  {
    "text": "communicated between these devices are how do you actually use this to encrypt",
    "start": "676800",
    "end": "681839"
  },
  {
    "text": "a message so the sender generates a fresh symmetric key from the ratcheting State as we saw in the previous slide we",
    "start": "681839",
    "end": "688140"
  },
  {
    "text": "encrypt that message under that key and then we sign it using the group signing key that's a single ciphertext and a",
    "start": "688140",
    "end": "694920"
  },
  {
    "text": "single signature that is then communicated to the Home Server and in that Home Server distributes out to the",
    "start": "694920",
    "end": "700860"
  },
  {
    "text": "rest of the devices within the room then this fan out way similar to Signal Center keys",
    "start": "700860",
    "end": "708000"
  },
  {
    "text": "okay so that's the core functionality of Matrix what about the backup functionality so Matrix is interesting",
    "start": "708000",
    "end": "714300"
  },
  {
    "text": "it allows you to be able to recover from device loss by backing up your secrets",
    "start": "714300",
    "end": "719339"
  },
  {
    "text": "and as we saw before there are essentially two big sets of Secrets there's the user secrets that enables",
    "start": "719339",
    "end": "724740"
  },
  {
    "text": "the web of trust and then there's the mega ohm session secrets that enable",
    "start": "724740",
    "end": "730140"
  },
  {
    "text": "um actual group communication within um the the room and so for user secrets we have user",
    "start": "730140",
    "end": "737279"
  },
  {
    "text": "Secrets backup via the secure secret storage and sharing protocol this is",
    "start": "737279",
    "end": "742380"
  },
  {
    "text": "fairly straightforward the user generates a backup key usually from a user passphrase and then they use that",
    "start": "742380",
    "end": "749160"
  },
  {
    "text": "to encrypt the master public key the user signing key and the self-signing",
    "start": "749160",
    "end": "754380"
  },
  {
    "text": "key and then upload that ciphertext to the Home Server later if they lose that",
    "start": "754380",
    "end": "759600"
  },
  {
    "text": "device and they want to be able to get those user Secrets again they regenerate that user backup key retrieve the",
    "start": "759600",
    "end": "766079"
  },
  {
    "text": "ciphertext from the Home Server and then decrypt it locally thus allowing them to recover the user the user signing Keys",
    "start": "766079",
    "end": "773700"
  },
  {
    "text": "the master public Keys sorry you can use the secret keys and the self-signing key",
    "start": "773700",
    "end": "779459"
  },
  {
    "text": "so that's for the user secret backup what about Mega ohm the the lowest level",
    "start": "779459",
    "end": "784680"
  },
  {
    "text": "of of sessions well in that case Matrix actually has two distinct protocols for",
    "start": "784680",
    "end": "789899"
  },
  {
    "text": "doing this one in an online setting and one in an offline setting so in the online setting this is enabled by what",
    "start": "789899",
    "end": "795959"
  },
  {
    "text": "we call the key request protocol and it looks very similar to the way that session initialization or session",
    "start": "795959",
    "end": "801600"
  },
  {
    "text": "establishment Works using ohm so let's assume that we have two devices both owned by Alice device one and device two",
    "start": "801600",
    "end": "808200"
  },
  {
    "text": "device one has been participating in all of these Mega ROM sessions and device two is a brand new device and wants to",
    "start": "808200",
    "end": "814560"
  },
  {
    "text": "be able to participate in those sessions from this point onwards so device 2 triggers the Home Server in prompting a",
    "start": "814560",
    "end": "822480"
  },
  {
    "text": "key request to device one that device is going to do a series of checks is device 2 actually owned by",
    "start": "822480",
    "end": "828720"
  },
  {
    "text": "Alice have I verified this device things like that and if all of these checks go through then it's going okay fine and",
    "start": "828720",
    "end": "835800"
  },
  {
    "text": "that's going to send the mega ohm session state to device 2 via the OM",
    "start": "835800",
    "end": "840899"
  },
  {
    "text": "pairwise Channel shared between the two devices and so this allows the user's device to share Mega ROM session",
    "start": "840899",
    "end": "846480"
  },
  {
    "text": "information with each other but what happens if both of these devices can't be online at the same time Matrix",
    "start": "846480",
    "end": "853740"
  },
  {
    "text": "provides for you in this case by doing offline session recovery via server-side Mega ohm backups it's kind of a hybrid",
    "start": "853740",
    "end": "860639"
  },
  {
    "text": "of the two approaches that we just saw the idea is that I as the user generates a recovery public key and I authenticate",
    "start": "860639",
    "end": "868079"
  },
  {
    "text": "using some secrets that I own I'm going to upload that recovery public key to",
    "start": "868079",
    "end": "873180"
  },
  {
    "text": "the Home Server at some point let's say a second device of mine wants to be able to back up the",
    "start": "873180",
    "end": "878880"
  },
  {
    "text": "mega arm sessions and so they're going to download or retrieve that recovery public key encrypt the mega room",
    "start": "878880",
    "end": "884940"
  },
  {
    "text": "sessions under that recovery public key and then upload that ciphertext back to the Home Server so at some point later I",
    "start": "884940",
    "end": "891540"
  },
  {
    "text": "can download that and recover the mega room sessions and what's important to note here is that while the recovery",
    "start": "891540",
    "end": "898079"
  },
  {
    "text": "public key is authenticated the actual ciphertext the actual backup is not and that's going to be another point of",
    "start": "898079",
    "end": "904380"
  },
  {
    "text": "contention that we're going to use in our attacks and speaking of attacks I'm going to pass it over to our resident",
    "start": "904380",
    "end": "909899"
  },
  {
    "text": "PhD student Dan Jones Matrix um why it's interesting and",
    "start": "909899",
    "end": "917519"
  },
  {
    "text": "um sort of how how the cryptography and it works we get to show you some of the attacks we found whilst we were studying",
    "start": "917519",
    "end": "923639"
  },
  {
    "text": "it um so the first two attacks we're going to talk about really what they're exploiting is",
    "start": "923639",
    "end": "931019"
  },
  {
    "text": "um too much trust being given to the Home Server when organizing and kind of",
    "start": "931019",
    "end": "936240"
  },
  {
    "text": "controlling the metadata around groups so in the first case and we're going to",
    "start": "936240",
    "end": "941339"
  },
  {
    "text": "look at group membership which is mostly managed through events so like Alice might say oh hey I'd like to invite Bob",
    "start": "941339",
    "end": "947760"
  },
  {
    "text": "and then Bob replies yeah great I'd like to join the group and these are sent via",
    "start": "947760",
    "end": "952980"
  },
  {
    "text": "messages in the group but those messages are not authenticated in any way there's",
    "start": "952980",
    "end": "958740"
  },
  {
    "text": "no cryptographic control over them so a Home Server if it's malicious can just",
    "start": "958740",
    "end": "964199"
  },
  {
    "text": "fake this message exchange and sneak in um a user that's maybe under its control",
    "start": "964199",
    "end": "970380"
  },
  {
    "text": "to eavesdrop on the messages so you don't really need to do any kind of cryptographic breaks here but it's just",
    "start": "970380",
    "end": "977040"
  },
  {
    "text": "um too much trust that's given in the Home Server to the Home Server similarly there's another attack where",
    "start": "977040",
    "end": "984779"
  },
  {
    "text": "as we described earlier there are users and each user has many devices and when you want to send a message to a user",
    "start": "984779",
    "end": "991860"
  },
  {
    "text": "you need to figure out their list of devices and the primary source of like",
    "start": "991860",
    "end": "997339"
  },
  {
    "text": "source of this list comes from the Home Server and the Home Server can forge it and they can even sneak in devices that",
    "start": "997339",
    "end": "1004459"
  },
  {
    "text": "are under their control and those devices will be included in groups that the user is a part of and allow to kind",
    "start": "1004459",
    "end": "1010880"
  },
  {
    "text": "of read the message the messages that they send and just to impersonates that user to an extent",
    "start": "1010880",
    "end": "1018380"
  },
  {
    "text": "um so in both of these attacks um there's quite a bit of damage you know like attackers can eavesdrop on",
    "start": "1018380",
    "end": "1023839"
  },
  {
    "text": "your conversations um but you do end up with some kind of indication in the user interface that",
    "start": "1023839",
    "end": "1030558"
  },
  {
    "text": "it's that this attack is happening um you can see as a user that like oh",
    "start": "1030559",
    "end": "1035959"
  },
  {
    "text": "there's an actual user in this group that probably shouldn't be there um and I think that's the main kind of",
    "start": "1035959",
    "end": "1042079"
  },
  {
    "text": "rationale behind this feature in the first place because um it was almost like a a design Choice",
    "start": "1042079",
    "end": "1049040"
  },
  {
    "text": "initially um you know and the idea was that well element shows the list of users so it's",
    "start": "1049040",
    "end": "1054140"
  },
  {
    "text": "up to the the user to figure this out and to inspect it and to be sufficiently eagle-eyed but we argued that kind of",
    "start": "1054140",
    "end": "1060980"
  },
  {
    "text": "this is a bit burdensome on users and it's not necessary like there are solutions we can use to solve it",
    "start": "1060980",
    "end": "1067460"
  },
  {
    "text": "and that's what Matrix are doing so they're working on a fix for this where they're going to sign these group membership messages",
    "start": "1067460",
    "end": "1075220"
  },
  {
    "text": "cool so our take-home message that we'd really like to push here is that you can't really get confidentiality without",
    "start": "1075860",
    "end": "1082160"
  },
  {
    "text": "authentication and what we mean by this is like it doesn't matter if you're",
    "start": "1082160",
    "end": "1088460"
  },
  {
    "text": "encrypting messages when you're sending the or Distributing",
    "start": "1088460",
    "end": "1093500"
  },
  {
    "text": "the decryption keys to anyone who asks you've got to like you've got show you and you just speak the decryption keys",
    "start": "1093500",
    "end": "1099679"
  },
  {
    "text": "to um to the people you want otherwise yeah there's no point encrypting them",
    "start": "1099679",
    "end": "1105440"
  },
  {
    "text": "um our next attack is on the out of band verification in Matrix and this is that",
    "start": "1105440",
    "end": "1111080"
  },
  {
    "text": "bit um in Ben slides earlier where the two where the two users sign each other's Keys it's called like kind of the Cross",
    "start": "1111080",
    "end": "1117679"
  },
  {
    "text": "signing um and the idea of outer band verification is that um you know we're doing end-to-end",
    "start": "1117679",
    "end": "1123080"
  },
  {
    "text": "encryption so we're trying quite hard to not trust the server but one thing that",
    "start": "1123080",
    "end": "1128660"
  },
  {
    "text": "is often we often need to trust the server for is to introduce two users so say like that at some point the server",
    "start": "1128660",
    "end": "1136039"
  },
  {
    "text": "has to say oh by the way this is Alice and this is her like cryptographic identity and suddenly like this is Bob",
    "start": "1136039",
    "end": "1141980"
  },
  {
    "text": "and this is Bob's cryptographic I don't see at this point they can make a um kind of a secure channel that the server",
    "start": "1141980",
    "end": "1148400"
  },
  {
    "text": "can't can't play with but um what if the server just makes up fake cryptographic identities and distributes",
    "start": "1148400",
    "end": "1154880"
  },
  {
    "text": "them well they can do kind of this active processing attack this Mallory in the Middle where I just proxy all the",
    "start": "1154880",
    "end": "1162140"
  },
  {
    "text": "messages using these fake cryptographic identities and get control of you know things like um the messages that I sent",
    "start": "1162140",
    "end": "1168980"
  },
  {
    "text": "get to read them get to impersonate so that's not very good and that's the problem out of band verification is",
    "start": "1168980",
    "end": "1174020"
  },
  {
    "text": "trying to solve the short authentication string protocol is one of the ways Matrix solves this",
    "start": "1174020",
    "end": "1179840"
  },
  {
    "text": "essentially the way it works is that the two um Alice and Bob will set up some",
    "start": "1179840",
    "end": "1185840"
  },
  {
    "text": "kind of like secure Channel between the two of them and they're then going to construct the special string",
    "start": "1185840",
    "end": "1193220"
  },
  {
    "text": "and it that encodes their view of the secret Channel and it's a special string",
    "start": "1193220",
    "end": "1199280"
  },
  {
    "text": "because if they have different views of the secret Channel such that it's been tampered with then these strings won't",
    "start": "1199280",
    "end": "1206120"
  },
  {
    "text": "match so what they can do is well in this protocol they get encoded as a nice",
    "start": "1206120",
    "end": "1211700"
  },
  {
    "text": "little string of emojis and you can maybe phone someone up or meet in person and you can kind of check that they",
    "start": "1211700",
    "end": "1217640"
  },
  {
    "text": "match and if they don't match then you know the Channel's been tampered above if they if they do match well now you've",
    "start": "1217640",
    "end": "1223580"
  },
  {
    "text": "got a secure channel that you know hasn't been tampered with so you can send your long-term cryptographic identities over that",
    "start": "1223580",
    "end": "1230299"
  },
  {
    "text": "and you will end up with kind of like you've cemented a real root of trust that you know the server has",
    "start": "1230299",
    "end": "1236120"
  },
  {
    "text": "um no control over in our attack we was able to trick devices to into",
    "start": "1236120",
    "end": "1243080"
  },
  {
    "text": "instead of sharing in that final step instead of sharing the cryptographic identity they created they accidentally",
    "start": "1243080",
    "end": "1250100"
  },
  {
    "text": "share one of the Home Server controls so I'm just going to detail how that trick works how do you trick devices into",
    "start": "1250100",
    "end": "1256880"
  },
  {
    "text": "doing this well there are two types of verification sometimes there are two users verifying",
    "start": "1256880",
    "end": "1263179"
  },
  {
    "text": "each other like we spoke about before but other times um two there are two devices maybe I've",
    "start": "1263179",
    "end": "1268940"
  },
  {
    "text": "logged in on my laptop and I'm already logged in on my mobile phone I need to do some kind of verification to make",
    "start": "1268940",
    "end": "1274580"
  },
  {
    "text": "sure their their connection isn't tampered with to distinguish these two cases they have",
    "start": "1274580",
    "end": "1280160"
  },
  {
    "text": "a key identifier field in that message that's sent in the final step of the SAS protocol",
    "start": "1280160",
    "end": "1286760"
  },
  {
    "text": "in this key identifier field in the first case when it's two users they you they send the user's",
    "start": "1286760",
    "end": "1293059"
  },
  {
    "text": "cryptographic identity but in the second case when there's two devices they send the users I mean the device's device",
    "start": "1293059",
    "end": "1299360"
  },
  {
    "text": "identifier and this is this is um worrying because it's controlled by the Home Server and",
    "start": "1299360",
    "end": "1306440"
  },
  {
    "text": "the Home Server can and this is what they do in this attack generate their own fake cryptographic identity for a",
    "start": "1306440",
    "end": "1312140"
  },
  {
    "text": "user and allocate it as the device identifier and now when that user does a",
    "start": "1312140",
    "end": "1317659"
  },
  {
    "text": "when that device does a verification it'll send its device identifier and the receiving party will interpret that as a",
    "start": "1317659",
    "end": "1325100"
  },
  {
    "text": "user's cryptographic identity at the end of this process and will now instead of trusting that device they trust the the",
    "start": "1325100",
    "end": "1332780"
  },
  {
    "text": "cryptographic identity that the Home Server controls and this enables a complete break of the protocol",
    "start": "1332780",
    "end": "1340580"
  },
  {
    "text": "um attack at the attacker can eavesdrop on the conversations they can impersonate users and there's no",
    "start": "1340580",
    "end": "1346820"
  },
  {
    "text": "indication in the user interface other than a slightly funky looking device identifier if you if you look look",
    "start": "1346820",
    "end": "1353480"
  },
  {
    "text": "closely um so it's a pretty pretty damaging uh attack a complete break so we should",
    "start": "1353480",
    "end": "1360860"
  },
  {
    "text": "probably try to avoid it um and how should we do like how should we do that well",
    "start": "1360860",
    "end": "1366559"
  },
  {
    "text": "the key problem here was that these device identifiers and these cryptographic identities share the same",
    "start": "1366559",
    "end": "1373520"
  },
  {
    "text": "like space it's hard to distinguish the two you can make a valid device identifier that is also a valid",
    "start": "1373520",
    "end": "1380059"
  },
  {
    "text": "cryptographic identity and that's kind of bad you want to separate these domains and this is our kind of the",
    "start": "1380059",
    "end": "1385460"
  },
  {
    "text": "take-home message we're pushing for here it's like uh domain separates everything you can",
    "start": "1385460",
    "end": "1391700"
  },
  {
    "text": "um yes cool so the next three attacks kind of iteratively build upon each",
    "start": "1391700",
    "end": "1397460"
  },
  {
    "text": "other starting with a like an impersonation attack then we kind of strengthen the",
    "start": "1397460",
    "end": "1403460"
  },
  {
    "text": "impersonation attack a little bit more and that allows us to break the confidentiality of the protocol as well",
    "start": "1403460",
    "end": "1409159"
  },
  {
    "text": "so to start with our first impersonation attack so earlier Ben was talking about the key request protocol and how it's",
    "start": "1409159",
    "end": "1416900"
  },
  {
    "text": "important that when you're sending Secrets you're sending these decryption keys to your other devices you check",
    "start": "1416900",
    "end": "1423860"
  },
  {
    "text": "that you actually trust this device by checking this kind of web of trust and checking that it's been verified",
    "start": "1423860",
    "end": "1431120"
  },
  {
    "text": "but it's also super important um that when you accept secrets you only",
    "start": "1431120",
    "end": "1436580"
  },
  {
    "text": "accept your decryption keys from devices that you trust as well and this was the",
    "start": "1436580",
    "end": "1442039"
  },
  {
    "text": "implementation mistake that Matrix had made they'd only implemented the verification on the sending side and not",
    "start": "1442039",
    "end": "1447740"
  },
  {
    "text": "on the receiving side so a device a malicious device can generate a new session and send via this key request",
    "start": "1447740",
    "end": "1455659"
  },
  {
    "text": "protocol a message to Alice to say oh hey by the way um I like",
    "start": "1455659",
    "end": "1461059"
  },
  {
    "text": "um oh by the way like uh this is Bob's decryption Keys the decryption keys for",
    "start": "1461059",
    "end": "1467059"
  },
  {
    "text": "Bob session and then later on um Alice will just say yeah great thanks and I'll assign anything that decrypts",
    "start": "1467059",
    "end": "1473240"
  },
  {
    "text": "any messages that decrypt from that session as coming from Bob even though they came from the attacker",
    "start": "1473240",
    "end": "1479720"
  },
  {
    "text": "and we do this on the mega ohm level so there's like a lowest group message group messaging layer",
    "start": "1479720",
    "end": "1486320"
  },
  {
    "text": "um so yeah what's the damage well yeah you can get some kind of impersonation but importantly",
    "start": "1486320",
    "end": "1492919"
  },
  {
    "text": "um the messages that are decrypted using keys that are sent by this key request",
    "start": "1492919",
    "end": "1499039"
  },
  {
    "text": "protocol end up with a little flag in the user interface quite often that says like you should probably trust us a",
    "start": "1499039",
    "end": "1504440"
  },
  {
    "text": "little bit less than normal and we would really like to do better than that so that's what our next impression",
    "start": "1504440",
    "end": "1510500"
  },
  {
    "text": "impersonation attack does uh the key idea behind this impersonation attack is that whilst key",
    "start": "1510500",
    "end": "1518059"
  },
  {
    "text": "requests messages sent via these key request protocol are flagged as kind of",
    "start": "1518059",
    "end": "1523700"
  },
  {
    "text": "like slightly less trustworthy if they if the session came from like a normal Mega ohm session setup",
    "start": "1523700",
    "end": "1531500"
  },
  {
    "text": "from the person who actually owns the session they are not flagged they're",
    "start": "1531500",
    "end": "1536659"
  },
  {
    "text": "kind of they've seen as fully trusted um but we've already gotten the First Nation attack on that person so what we",
    "start": "1536659",
    "end": "1543740"
  },
  {
    "text": "can do is we can simulate we can pretend that we're that person using our previous impersonation attack to start a",
    "start": "1543740",
    "end": "1550880"
  },
  {
    "text": "new session not using the key request protocol but using the simulating the normal session setup",
    "start": "1550880",
    "end": "1557900"
  },
  {
    "text": "um and this kind of works and it's great but there's one roadblock and that's that our previous impersonation only",
    "start": "1557900",
    "end": "1564020"
  },
  {
    "text": "worked on the mega ohm level this lowest level but um it's expected that uh Mega",
    "start": "1564020",
    "end": "1570919"
  },
  {
    "text": "ohm sessions are initiated using the own protocol that's like what the specification says",
    "start": "1570919",
    "end": "1576200"
  },
  {
    "text": "um luckily for us this wasn't uh there was there were no checks so we",
    "start": "1576200",
    "end": "1583520"
  },
  {
    "text": "could just do the attackers the scribes simulate this session setup and this",
    "start": "1583520",
    "end": "1588980"
  },
  {
    "text": "gives you a full impersonation that provides no kind of evidence to the user that it should be slightly less",
    "start": "1588980",
    "end": "1594080"
  },
  {
    "text": "trustworthy so now that we've got a nice strong impersonation attack our next step is to",
    "start": "1594080",
    "end": "1600679"
  },
  {
    "text": "try to convert this into a confidentiality attack so",
    "start": "1600679",
    "end": "1605840"
  },
  {
    "text": "um we were talking about these Mega ohm backups earlier and the way this works is that you kind of you've got these",
    "start": "1605840",
    "end": "1612140"
  },
  {
    "text": "Keys you want to back them up to the server so you encrypt them using a symmetric key and you share them between",
    "start": "1612140",
    "end": "1617419"
  },
  {
    "text": "your trusted devices cool so",
    "start": "1617419",
    "end": "1623179"
  },
  {
    "text": "but we just got an impersonation attack so potentially",
    "start": "1623179",
    "end": "1629000"
  },
  {
    "text": "what you could do is maybe like just ask them whilst you're sharing these",
    "start": "1629000",
    "end": "1635900"
  },
  {
    "text": "encryption Keys these backup keys you can use your impersonation attack to share share a key that you control and",
    "start": "1635900",
    "end": "1642080"
  },
  {
    "text": "so that's what happens the attacker using the previous impersonation attacks says oh hey by the way we're using this",
    "start": "1642080",
    "end": "1649520"
  },
  {
    "text": "new encryption key now let's upload our um our backups using that and they all",
    "start": "1649520",
    "end": "1655760"
  },
  {
    "text": "go oh great you're a trusted device because it's a we've done the impersonation attack and they will",
    "start": "1655760",
    "end": "1662059"
  },
  {
    "text": "upload their keys straight to the set to the server using",
    "start": "1662059",
    "end": "1667760"
  },
  {
    "text": "um the encryption key that the attacker controls and that this gives them access to all the messages so this combine",
    "start": "1667760",
    "end": "1674179"
  },
  {
    "text": "these three attacks give us a complete break of the confidentiality and authentication that protocol we can read",
    "start": "1674179",
    "end": "1679640"
  },
  {
    "text": "and we can impersonate users and the take-home message just to drill it down again as the same as before there is no",
    "start": "1679640",
    "end": "1686539"
  },
  {
    "text": "confidentiality without authentication and in this case we saw how an authentication break these impersonation",
    "start": "1686539",
    "end": "1692779"
  },
  {
    "text": "attacks let us eventually break the confidentiality of the protocol as well",
    "start": "1692779",
    "end": "1698740"
  },
  {
    "text": "um we have one final little um attack that we found and this is a theoretical attack where",
    "start": "1698840",
    "end": "1704360"
  },
  {
    "text": "um I kind of being the Integrity of this initialization Vector in the AES",
    "start": "1704360",
    "end": "1710299"
  },
  {
    "text": "encryption for for backups wasn't um wasn't protected and this leaves this",
    "start": "1710299",
    "end": "1716600"
  },
  {
    "text": "means that this the scheme is not indcca secure um this is like a theoretical break",
    "start": "1716600",
    "end": "1723140"
  },
  {
    "text": "of the confidentiality that you get from a lack of Integrity protection but in",
    "start": "1723140",
    "end": "1728179"
  },
  {
    "text": "kind of importantly um whilst it's through theoretically only a theoretical break it was",
    "start": "1728179",
    "end": "1734179"
  },
  {
    "text": "dangerously close to being a practical attack as well um so again this take-home message",
    "start": "1734179",
    "end": "1739279"
  },
  {
    "text": "similar to the ones before is you can't get um like good real confidentiality",
    "start": "1739279",
    "end": "1744440"
  },
  {
    "text": "without Integrity um and these like these security properties were intertwined",
    "start": "1744440",
    "end": "1750500"
  },
  {
    "text": "so just to recap um we came up with a bunch of attacks that all",
    "start": "1750500",
    "end": "1755600"
  },
  {
    "text": "um work with different parts of the protocol",
    "start": "1755600",
    "end": "1760700"
  },
  {
    "text": "um some that are more kind of implementation focused some are more on the design",
    "start": "1760700",
    "end": "1765940"
  },
  {
    "text": "attack just the the fundamental design of the of the protocol but overall",
    "start": "1765940",
    "end": "1772820"
  },
  {
    "text": "they've primarily been fixed importantly attacks two to five we were able to",
    "start": "1772820",
    "end": "1778220"
  },
  {
    "text": "develop proof of concept code for all of them so like they certainly definitely do work and we were able to get these",
    "start": "1778220",
    "end": "1784880"
  },
  {
    "text": "breaks in practice um but luckily for us they've all been well",
    "start": "1784880",
    "end": "1791179"
  },
  {
    "text": "the vast majority of them have been mitigated by matrix and you can kind of read more about that in our CD their CDs",
    "start": "1791179",
    "end": "1799640"
  },
  {
    "text": "um I'll pass on to Martin all right so Dan already gave you a few",
    "start": "1799640",
    "end": "1806179"
  },
  {
    "text": "kind of take-home messages but I want to leave you with one bigger take-home message from this work",
    "start": "1806179",
    "end": "1813320"
  },
  {
    "text": "and the first thing uh kind of to appreciate here is like maybe that came across it's like this is a complex",
    "start": "1813320",
    "end": "1819559"
  },
  {
    "text": "protocol right there's a lot of different subprotocols and what Matrix is trying to do here is really hard",
    "start": "1819559",
    "end": "1825799"
  },
  {
    "text": "right this is a hard problem that they're trying to solve they're trying to do secure group messaging in a",
    "start": "1825799",
    "end": "1831559"
  },
  {
    "text": "Multi-Device setting there's also scalable to thousands of devices in a single group right that in itself is a",
    "start": "1831559",
    "end": "1837919"
  },
  {
    "text": "daunting task they also say like we want backups we want history sharing right because we you know think that this is",
    "start": "1837919",
    "end": "1844279"
  },
  {
    "text": "what users expect of a chat protocol they want authentication identity verification right and but you don't",
    "start": "1844279",
    "end": "1850520"
  },
  {
    "text": "want to kind of verify every device so they want to build like some infrastructure that makes this somewhat easy somewhat seamless to use once I've",
    "start": "1850520",
    "end": "1857600"
  },
  {
    "text": "verified that you are you I can chat to all of your devices when you get a new phone it's fine",
    "start": "1857600",
    "end": "1863840"
  },
  {
    "text": "they also and this really sets them apart I want to do this in a Federated setting right so in the same way as",
    "start": "1863840",
    "end": "1869179"
  },
  {
    "text": "email kind of back in the old days kind of was a Federated protocol uh now it's",
    "start": "1869179",
    "end": "1874220"
  },
  {
    "text": "no let me not go there um they want to do that the same for chat right so you have these different",
    "start": "1874220",
    "end": "1879380"
  },
  {
    "text": "home servers they talk to each other and they want to support a variety of clients across many platforms this is a",
    "start": "1879380",
    "end": "1885200"
  },
  {
    "text": "complex problem to solve right so let's just appreciate and then in some sense you could say it's a hard problem to",
    "start": "1885200",
    "end": "1890539"
  },
  {
    "text": "solve some mistakes are unaptable okay fine",
    "start": "1890539",
    "end": "1895419"
  },
  {
    "text": "so the standard response so we've been around the block a few times kind of with some attacks and like the standard",
    "start": "1895820",
    "end": "1901700"
  },
  {
    "text": "response that people give when you know these sort of cryptographic attacks are published are don't roll your own crypto",
    "start": "1901700",
    "end": "1908179"
  },
  {
    "text": "or crypto's heart this is not the take-home message that we want to leave you with this is not what we want to say",
    "start": "1908179",
    "end": "1914659"
  },
  {
    "text": "of course cryptography is hard like is any other signs or any other area of computer science or engineering like yes",
    "start": "1914659",
    "end": "1922039"
  },
  {
    "text": "hard problems are hard this doesn't set cryptography apart from any other of the",
    "start": "1922039",
    "end": "1927260"
  },
  {
    "text": "heart problems that all of us all people solve all day the re we have to tackle with a lot of",
    "start": "1927260",
    "end": "1934460"
  },
  {
    "text": "complexity here but the science of cryptography gives us the tools to do that right so yes there are many",
    "start": "1934460",
    "end": "1941179"
  },
  {
    "text": "different protocols and how do they interact how do you reason about that and modern cryptography gives us the",
    "start": "1941179",
    "end": "1946820"
  },
  {
    "text": "tools of doing precisely that that is we can reason about cryptographic protocols",
    "start": "1946820",
    "end": "1951980"
  },
  {
    "text": "we can say like if you have an attack against this protocol then you have also solved like some computationally hard",
    "start": "1951980",
    "end": "1958039"
  },
  {
    "text": "problem such as factoring big numbers for example right so we have and these are formal proofs we can write theorems",
    "start": "1958039",
    "end": "1964640"
  },
  {
    "text": "and we can prove like if an attacker can do that they can also do this other thing that the internet runs on right so",
    "start": "1964640",
    "end": "1970580"
  },
  {
    "text": "Matrix being broken is not my concern but if there's an attack here then it will be really big news and we have",
    "start": "1970580",
    "end": "1976279"
  },
  {
    "text": "bigger fish to fry so that is something that the science of cryptography gives you so what you should say in the future",
    "start": "1976279",
    "end": "1983659"
  },
  {
    "text": "whenever you see such an attack as cryptography needs security models and proofs that is really the number one",
    "start": "1983659",
    "end": "1989899"
  },
  {
    "text": "take-home message we want to leave here as much fun as it is to give a black hat talk ideally we wouldn't have to be here",
    "start": "1989899",
    "end": "1996140"
  },
  {
    "text": "and in that fact we don't have to be here because we have tools to prevent these sorts of attacks from happening by",
    "start": "1996140",
    "end": "2003340"
  },
  {
    "text": "doing formal proofs and formal theorems Thomas Patrick put this very eloquently",
    "start": "2003340",
    "end": "2009820"
  },
  {
    "text": "on Twitter I'm just going to leave that hanging here for a second right and I feel seen",
    "start": "2009820",
    "end": "2016059"
  },
  {
    "text": "all right so that is all we wanted to talk to you about",
    "start": "2016059",
    "end": "2022240"
  },
  {
    "text": "um we have time about five minutes for some questions so please line up on the kind of in-room microphones if you have",
    "start": "2022240",
    "end": "2028120"
  },
  {
    "text": "any questions thank you for your attention [Applause]",
    "start": "2028120",
    "end": "2034660"
  },
  {
    "text": "[Music]",
    "start": "2034660",
    "end": "2037769"
  },
  {
    "text": "[Music]",
    "start": "2041610",
    "end": "2044720"
  }
]