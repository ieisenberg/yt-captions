[
  {
    "text": "welcome to http 2 and quick teaching good protocols to do bad things",
    "start": "0",
    "end": "7919"
  },
  {
    "text": "Kate Pierce and Carl Vinson are going to tell us about it and you are in South Seas Abe if that's not where you intend",
    "start": "7919",
    "end": "16020"
  },
  {
    "text": "to be the dorser in the back before we start a couple of notes",
    "start": "16020",
    "end": "21180"
  },
  {
    "text": "first stop by the business Hall which is located in Bayside a b during the day and for the welcome resection from 15 30",
    "start": "21180",
    "end": "29460"
  },
  {
    "text": "that's 5 30 for Americans to 1900 or 7 o'clock P.M tonight",
    "start": "29460",
    "end": "35160"
  },
  {
    "text": "the black hat Arsenal is on the palm foyer on level three join us also for the pony Awards in",
    "start": "35160",
    "end": "42360"
  },
  {
    "text": "Mandalay Bay BCD at 16 30. that's 6 30 pm",
    "start": "42360",
    "end": "49520"
  },
  {
    "text": "sorry 1830",
    "start": "49980",
    "end": "55160"
  },
  {
    "text": "right it's morning good morning have some coffee",
    "start": "55980",
    "end": "61800"
  },
  {
    "text": "thank you in advance for putting your phone on vibrate and for taking that gentle Hint it makes",
    "start": "61800",
    "end": "67799"
  },
  {
    "text": "it easier for the rest of us to ignore the ringing while you wait for your voicemail to pick it up and without further miscalculation of",
    "start": "67799",
    "end": "75840"
  },
  {
    "text": "times okay",
    "start": "75840",
    "end": "78859"
  },
  {
    "text": "starting with our own introduction rather than so I'm Kate Pierce um secret on Twitter",
    "start": "84060",
    "end": "89640"
  },
  {
    "text": "feel free to yell at me people often do at conferences I am a senior security consultant at",
    "start": "89640",
    "end": "94799"
  },
  {
    "text": "Cisco customer focused as a security consultant so the usual break-in report",
    "start": "94799",
    "end": "100740"
  },
  {
    "text": "uh coaching the builders and research of course um and with me some distinguishing",
    "start": "100740",
    "end": "107220"
  },
  {
    "text": "features loud yellow or maybe that's just a loud yellow uh because I show",
    "start": "107220",
    "end": "113100"
  },
  {
    "text": "everyone this I'm never going to get a better photo taken in my life at a conference so don't expect to beat this one",
    "start": "113100",
    "end": "121259"
  },
  {
    "text": "it's just the most ridiculously awesome photo and virus um",
    "start": "121259",
    "end": "126540"
  },
  {
    "text": "hi uh I can learn how to use this Clicker my name is Carl uh I break things for",
    "start": "126540",
    "end": "133980"
  },
  {
    "text": "Cisco I'm a security consultant uh",
    "start": "133980",
    "end": "139040"
  },
  {
    "text": "uh yeah this most of this talk is really some carryover research from stuff that Kate had in the past and kind of the",
    "start": "139080",
    "end": "145920"
  },
  {
    "text": "story behind it is she walked up to me one day and said hey I've got this idea for something scary can you build it",
    "start": "145920",
    "end": "151580"
  },
  {
    "text": "and and I guess I kind of did so I mean really she's gonna do most of the rambling about the internals of insanity",
    "start": "151580",
    "end": "158580"
  },
  {
    "text": "that that led up to the final product but I will hit buttons and make things shiny thanks okay and so to start with that",
    "start": "158580",
    "end": "165959"
  },
  {
    "text": "I'm just going to start with a teaser highly contrived of course nothing particularly interesting",
    "start": "165959",
    "end": "171300"
  },
  {
    "text": "I was sitting there one day at home and I was saying what should I do how about I look at the news what have we got I",
    "start": "171300",
    "end": "176819"
  },
  {
    "text": "apologize for the local news headlines this was literally what was there that day and it's not my fault",
    "start": "176819",
    "end": "183019"
  },
  {
    "text": "um okay and after a while nah it's nothing I really feel like doing for some reason I go back again sorry about",
    "start": "183120",
    "end": "190379"
  },
  {
    "text": "the word Hitler all right what's on YouTube maybe I can find something on YouTube to look at",
    "start": "190379",
    "end": "195480"
  },
  {
    "text": "scroll down what can I find anything that takes my fancy oh oh what about that that looks that's the latest bag",
    "start": "195480",
    "end": "201659"
  },
  {
    "text": "yes yes look so let's look into Pokemon go and actually no I want to hear a Pokemon",
    "start": "201659",
    "end": "207180"
  },
  {
    "text": "go not some guy walking down the street all right so I'm going in a couple of weeks to this place in Vegas Mandalay",
    "start": "207180",
    "end": "213659"
  },
  {
    "text": "Bay let's uh let's look that up",
    "start": "213659",
    "end": "217280"
  },
  {
    "text": "okay and that's where we are right now but how do I get there and more importantly",
    "start": "218760",
    "end": "224640"
  },
  {
    "text": "how do I get there from somewhere I'm not because as I say to us I was sitting in Wellington New Zealand so I'm",
    "start": "224640",
    "end": "230340"
  },
  {
    "text": "thinking just put on a random place this is what in Spain and see how I get there from Spain and again Google Maps nothing",
    "start": "230340",
    "end": "237599"
  },
  {
    "text": "particularly interesting so I think well actually I do want to go to the Mandalay maybe I should make some",
    "start": "237599",
    "end": "243000"
  },
  {
    "text": "arrangements so go to the email I go to sign in",
    "start": "243000",
    "end": "247640"
  },
  {
    "text": "and then I remember something I did earlier",
    "start": "248220",
    "end": "252620"
  },
  {
    "text": "something which should have stopped all of this functioning at all",
    "start": "254400",
    "end": "259400"
  },
  {
    "text": "I blocked all TCP traffic at my firewall this is an unmodified virtual machine",
    "start": "260400",
    "end": "268199"
  },
  {
    "text": "running an unmodified Chrome browser this is all stock there is nothing I",
    "start": "268199",
    "end": "273900"
  },
  {
    "text": "have done here I have not got anything in the middle and yet with TCP blocked",
    "start": "273900",
    "end": "281280"
  },
  {
    "text": "it's functioning this is not a canary build this is a",
    "start": "281280",
    "end": "286919"
  },
  {
    "text": "standard build so what's going on here if the firewall was blocking or TCP what",
    "start": "286919",
    "end": "293580"
  },
  {
    "text": "was it talking UDP specifically quick",
    "start": "293580",
    "end": "300900"
  },
  {
    "text": "which I'll get to a bit later on so to give you another demonstration",
    "start": "300900",
    "end": "307020"
  },
  {
    "text": "which will be so quick again why are sharks think so notice what it is it's got all these headers",
    "start": "307020",
    "end": "312780"
  },
  {
    "text": "so to give another demonstration if I move on to some other traffic I was looking at again pretty standard",
    "start": "312780",
    "end": "318360"
  },
  {
    "text": "what's that well it looks somewhat like HTTP but also not",
    "start": "318360",
    "end": "324240"
  },
  {
    "text": "if I look on the wire well that doesn't make any sense if I decrypt used to sell still doesn't make much sense and then",
    "start": "324240",
    "end": "331380"
  },
  {
    "text": "there's this thing called a decompressed header which is where I start to see things which look reminiscent",
    "start": "331380",
    "end": "337500"
  },
  {
    "text": "of http but definitely not http",
    "start": "337500",
    "end": "343460"
  },
  {
    "text": "so what's going on here what are these things so what we're here to talk about today is some upcoming I'm sorry some",
    "start": "345120",
    "end": "351419"
  },
  {
    "text": "recent web transport protocols they're already upon us",
    "start": "351419",
    "end": "357780"
  },
  {
    "text": "so why is the world exploding this should be pretty obvious to most of you in the room we've got increasing scale",
    "start": "357780",
    "end": "363720"
  },
  {
    "text": "everything connection count connection size all of our websites are doing a lot more than they used to it is now",
    "start": "363720",
    "end": "369539"
  },
  {
    "text": "impossible to browse the web on a 56k motor in fact it's almost impossible on one megabit sometimes everything is using",
    "start": "369539",
    "end": "376320"
  },
  {
    "text": "more data more connections more domains more of everything when I dump it from the HTTP archive you",
    "start": "376320",
    "end": "382500"
  },
  {
    "text": "see this trend where everything is scaling up just Google bigquery with HTTP archive",
    "start": "382500",
    "end": "387660"
  },
  {
    "text": "data it's really handy for trending but that's not what I'm here to talk about so again number of domains contacted",
    "start": "387660",
    "end": "393479"
  },
  {
    "text": "number of total requests going up roughly doubling in the last five years",
    "start": "393479",
    "end": "400080"
  },
  {
    "text": "why is all of this happening this is all happening because network communication there's capabilities for the world we're",
    "start": "400080",
    "end": "405960"
  },
  {
    "text": "living in today that it wasn't designed for initially acdp approaches those to Multiplex",
    "start": "405960",
    "end": "413340"
  },
  {
    "text": "within TCP to simplify and quick",
    "start": "413340",
    "end": "418860"
  },
  {
    "text": "does not use TCP but it brings its own UDP transport protocol",
    "start": "418860",
    "end": "424880"
  },
  {
    "text": "and as I alluded to with the teasers this fundamentally changed the way your network behaves if you're expecting it",
    "start": "427380",
    "end": "434460"
  },
  {
    "text": "to behave like what you've seen in the past as for why you care for some of you this",
    "start": "434460",
    "end": "440819"
  },
  {
    "text": "will be obvious some familiar problems things which we've seen before technology shifts that are opaque",
    "start": "440819",
    "end": "446340"
  },
  {
    "text": "technologies that we cannot make sense of or understand and also there are some new problems",
    "start": "446340",
    "end": "453599"
  },
  {
    "text": "there's some new fragmentation attacks and your network security",
    "start": "453599",
    "end": "460139"
  },
  {
    "text": "may not be able to deal with those so similar to what we have with the mptcp um",
    "start": "460139",
    "end": "465660"
  },
  {
    "text": "we'll get to that in a moment so to be clear and this is a personal opinion not a company opinion",
    "start": "465660",
    "end": "471000"
  },
  {
    "text": "that's Cisco is a separate thing I like these protocols they're more of a",
    "start": "471000",
    "end": "476880"
  },
  {
    "text": "culture show up than a direct vulnerability this is not something coming in to break you this is a culture shock this is something that is doing its own",
    "start": "476880",
    "end": "483960"
  },
  {
    "text": "thing and you're coming in with your assumptions about how the world how Society how your network works that do",
    "start": "483960",
    "end": "489660"
  },
  {
    "text": "not fit I like them I want them to succeed they're really really good from the",
    "start": "489660",
    "end": "496199"
  },
  {
    "text": "usability and the user experience perspective our tools and our people in this",
    "start": "496199",
    "end": "502199"
  },
  {
    "text": "industry are pretty much completely not ready and because I have to point this out I'm",
    "start": "502199",
    "end": "508860"
  },
  {
    "text": "covering two protocols in 30 minutes don't expect detail go and read the RFC",
    "start": "508860",
    "end": "514260"
  },
  {
    "text": "all right background not just why is this happening but how do we get here so",
    "start": "514260",
    "end": "520260"
  },
  {
    "text": "previous work we did a couple of years ago was on multi-path TCP which was taking TCP connections binding them",
    "start": "520260",
    "end": "527160"
  },
  {
    "text": "together into one logical data flow which introduced some of these same sort of issues",
    "start": "527160",
    "end": "533880"
  },
  {
    "text": "and this is an offshoot from that in some ways but I'll",
    "start": "533880",
    "end": "539160"
  },
  {
    "text": "there was many some lessons for us lessons were that anything that requires the OS is going to be slow moving",
    "start": "539160",
    "end": "546240"
  },
  {
    "text": "that it requires operating systems to be Rewritten to be rolled out and sometimes there's nothing you can do about older",
    "start": "546240",
    "end": "552000"
  },
  {
    "text": "systems and anything in the way any metal boxes any routers anything that's trying to",
    "start": "552000",
    "end": "557880"
  },
  {
    "text": "understand it and makes incorrect assumptions",
    "start": "557880",
    "end": "562820"
  },
  {
    "text": "will result in really bizarre behaviors and and this is really what I think is a",
    "start": "563000",
    "end": "570779"
  },
  {
    "text": "key thing here is this is chicken and egg deployment problem no one wants to put support for a protocol on their product",
    "start": "570779",
    "end": "576300"
  },
  {
    "text": "until people are using it no one wants to use it until it's supported",
    "start": "576300",
    "end": "582540"
  },
  {
    "text": "now that this is far from the first technology to be affected by that multi-path PCP plenty of other things",
    "start": "582540",
    "end": "588600"
  },
  {
    "text": "have had this problem until you can get that large enough critical mass for a network effect no one wants to use it",
    "start": "588600",
    "end": "596459"
  },
  {
    "text": "and so the reason multibath TCP came about in the first place was because TCP doesn't",
    "start": "596459",
    "end": "602880"
  },
  {
    "text": "really do some use cases we need today high availability or link aggregation multi-homing so if you're moving around",
    "start": "602880",
    "end": "610200"
  },
  {
    "text": "and your mobility and your Mesh networking TCP doesn't do those because it goes from an IP and a port to an IP",
    "start": "610200",
    "end": "617040"
  },
  {
    "text": "and a port anything that changes any of those four things you've got to start a new session",
    "start": "617040",
    "end": "623040"
  },
  {
    "text": "and that's a problem when your system is moving around very very often between different networks different ases",
    "start": "623040",
    "end": "629820"
  },
  {
    "text": "between different Nets or it's getting its address shifted on a net and",
    "start": "629820",
    "end": "635160"
  },
  {
    "text": "a key motivator is TCP is really chatty it really wants to make sure that you get on before it continues",
    "start": "635160",
    "end": "642120"
  },
  {
    "text": "you bring an SSL and it's like hi hi hi great hi hi hi and that takes a long",
    "start": "642120",
    "end": "648180"
  },
  {
    "text": "time particularly if we're in New Zealand and physics are annoying if I have to do it with 200 millisecond round trips",
    "start": "648180",
    "end": "654240"
  },
  {
    "text": "it gets really annoying so not just as a chatty but it can't do",
    "start": "654240",
    "end": "661440"
  },
  {
    "text": "anything until it's finished its introductions and that could be a real problem when",
    "start": "661440",
    "end": "666660"
  },
  {
    "text": "that handshake slows you down and when that handshake blocks the rest of your communication from proceeding",
    "start": "666660",
    "end": "672600"
  },
  {
    "text": "modified TCP tried to deal with those top four HTTP 2 and quick deal with the bottom",
    "start": "672600",
    "end": "678959"
  },
  {
    "text": "two and there's some cheddar and various um bodies to bring some of those",
    "start": "678959",
    "end": "684660"
  },
  {
    "text": "capabilities to quick",
    "start": "684660",
    "end": "687620"
  },
  {
    "text": "and if that happens things get really interesting however and I alluded to this why there",
    "start": "689880",
    "end": "696360"
  },
  {
    "text": "are reasons you do want to change TCP there are some reasons that that might actually be the wrong solution",
    "start": "696360",
    "end": "702240"
  },
  {
    "text": "so TCP has some characteristics that tend",
    "start": "702240",
    "end": "708000"
  },
  {
    "text": "to make it much more difficult to change so it's got a handshake design that by and large is a mutable at this point",
    "start": "708000",
    "end": "714720"
  },
  {
    "text": "it's outside user space as I said earlier the operating system has to be involved you can make a user mode TCP stack I",
    "start": "714720",
    "end": "721260"
  },
  {
    "text": "played with that I tried to build one I don't recommend that it's a horrible weekend month",
    "start": "721260",
    "end": "726779"
  },
  {
    "text": "sockets are a terrible thing across operating systems sockets are a terrible thing across operating systems yes they",
    "start": "726779",
    "end": "732720"
  },
  {
    "text": "really are especially when they're not always yeah different conceptualizations in different os's and end-of-line",
    "start": "732720",
    "end": "739140"
  },
  {
    "text": "blocking TCP if your window is full until it's got the stuff at the start it's not going to keep sending data and",
    "start": "739140",
    "end": "745560"
  },
  {
    "text": "that's a real problem if you've got a noisy Channel or your window size is wrong",
    "start": "745560",
    "end": "750600"
  },
  {
    "text": "but if you can't change TCP then what do you do well some talk in the past with sctp",
    "start": "750600",
    "end": "758160"
  },
  {
    "text": "um did well in some spaces didn't exactly take off in the consumer space",
    "start": "758160",
    "end": "764100"
  },
  {
    "text": "and and so like multiple TCP it had similar problems just it required rewriting everything",
    "start": "764100",
    "end": "771240"
  },
  {
    "text": "and that was not desirable application layer Solutions yeah and that's what HTTP 2 and it's what Speedy",
    "start": "771240",
    "end": "777720"
  },
  {
    "text": "do and you also have UDP",
    "start": "777720",
    "end": "782820"
  },
  {
    "text": "what UDP doesn't do anything that's exactly the point",
    "start": "782820",
    "end": "788040"
  },
  {
    "text": "most network devices treat UDP pretty much as just packets traversing a",
    "start": "788040",
    "end": "795000"
  },
  {
    "text": "network they don't try and do any State Management in most cases UDP just",
    "start": "795000",
    "end": "800279"
  },
  {
    "text": "blindly sins and lives everything to the application which is why quick uses it",
    "start": "800279",
    "end": "807060"
  },
  {
    "text": "is it traverses networks and it gives you a lot of freedom to do what you want to do so there are two Journeys here to",
    "start": "807060",
    "end": "812880"
  },
  {
    "text": "understand two simplified Journeys TCP multi-path TCP quick",
    "start": "812880",
    "end": "821720"
  },
  {
    "text": "they influ TCP there was a shift to multi-path TCP for various reasons that wasn't followed in a large space in a",
    "start": "821940",
    "end": "829860"
  },
  {
    "text": "large deployment space and quick came along which took many of those lessons and has applied them",
    "start": "829860",
    "end": "836519"
  },
  {
    "text": "for its own solutions to achieve many of the same goals HTTP 2 HTTP HTTP one one",
    "start": "836519",
    "end": "845040"
  },
  {
    "text": "Speedy H2 speedy and H2",
    "start": "845040",
    "end": "850870"
  },
  {
    "text": "[Music] very very similar but basically the key Journey To Remember",
    "start": "850870",
    "end": "856980"
  },
  {
    "text": "here is http11 too speedy and then Speedy is what HTTP",
    "start": "856980",
    "end": "862800"
  },
  {
    "text": "2 was built from TCP mptc quick",
    "start": "862800",
    "end": "869279"
  },
  {
    "text": "HTTP Speedy http 2. so what",
    "start": "869279",
    "end": "875760"
  },
  {
    "text": "yeah have you seriously looked at how many security tools support these",
    "start": "875760",
    "end": "880700"
  },
  {
    "text": "you probably be going to a compository scotch afterwards",
    "start": "883560",
    "end": "889680"
  },
  {
    "text": "there aren't many I would make a joke here about not many if any but only kiwis would get it",
    "start": "889680",
    "end": "896339"
  },
  {
    "text": "and nobody laughed so I guess I'm stuck with Aussies",
    "start": "896339",
    "end": "901279"
  },
  {
    "text": "yeah it's really unfortunate how few things support these protocols so in ptcp I said it took off and then",
    "start": "903980",
    "end": "911220"
  },
  {
    "text": "the deployment sort of flattened out quick is rocketed quick as enormously",
    "start": "911220",
    "end": "917220"
  },
  {
    "text": "out there it's already a new as I alluded to in the intro Google properties right now it's",
    "start": "917220",
    "end": "923220"
  },
  {
    "text": "probably several percent of your traffic if you are allowing outbound UDP also every instance of Chrome on Earth",
    "start": "923220",
    "end": "930839"
  },
  {
    "text": "pretty much every instance of Chrome on Earth yeah and that is if you're wanting to know what's",
    "start": "930839",
    "end": "936660"
  },
  {
    "text": "traversing your network that could be a problem but H2 has become real world even faster",
    "start": "936660",
    "end": "943760"
  },
  {
    "text": "both of these things come along fast simply TCP you've got a good number of servers an okay number of clients",
    "start": "943920",
    "end": "950940"
  },
  {
    "text": "probably actually higher than that and it's only used for a couple of things well quick",
    "start": "950940",
    "end": "957240"
  },
  {
    "text": "a whole lot more servers again I'm just sort of guesstimating from Showdown over a billion clients",
    "start": "957240",
    "end": "965420"
  },
  {
    "text": "well over a billion Chrome Duo Google properties and likely depending what the Google",
    "start": "965579",
    "end": "973079"
  },
  {
    "text": "goes and the ATF decide likely a lot more but H2 that is h2's deployment",
    "start": "973079",
    "end": "980699"
  },
  {
    "text": "just of the Alexa top one million websites that the start of their graph is January",
    "start": "980699",
    "end": "987480"
  },
  {
    "text": "5th 2015. we start at about ten thousand but today",
    "start": "987480",
    "end": "993959"
  },
  {
    "text": "over let's call it 15 of the Alexa top million websites are using this",
    "start": "993959",
    "end": "1000699"
  },
  {
    "text": "that's a lot of websites that's huge that's billions of clients hundreds of",
    "start": "1001459",
    "end": "1009380"
  },
  {
    "text": "thousands of servers if you didn't know this exists you're",
    "start": "1009380",
    "end": "1015079"
  },
  {
    "text": "going to have a really bad time and those are just the legit ones that you know about",
    "start": "1015079",
    "end": "1021279"
  },
  {
    "text": "and yeah not not what Shady characters have put into their things",
    "start": "1021279",
    "end": "1028160"
  },
  {
    "text": "so again top 20 Alexa websites of which I got 19. nine of them support it",
    "start": "1028160",
    "end": "1035360"
  },
  {
    "text": "so in this case Facebook Google Twitter Wikipedia Yahoo YouTube Instagram",
    "start": "1035360",
    "end": "1042620"
  },
  {
    "text": "the last technology companies are pushing these because they they give them a lot of benefits too",
    "start": "1042620",
    "end": "1049600"
  },
  {
    "text": "anyway what are these protocols enough talk around them what are they so they have the goals of improving performance",
    "start": "1050360",
    "end": "1057020"
  },
  {
    "text": "they have goals of improving latency and in many ways because they're",
    "start": "1057020",
    "end": "1062720"
  },
  {
    "text": "multiplexed their goal is to use a single connection rather than opening up a whole lot of different connections",
    "start": "1062720",
    "end": "1069740"
  },
  {
    "text": "that's what a multiplexing protocol is and the reason I'm talking about these",
    "start": "1069740",
    "end": "1075320"
  },
  {
    "text": "two together is because right now there is a they're basically intertwined there's a",
    "start": "1075320",
    "end": "1080539"
  },
  {
    "text": "lot of goal and use case overlap and if you understand them together it helps you to understand them",
    "start": "1080539",
    "end": "1085640"
  },
  {
    "text": "independently somewhat better there are some common features multiplexing is I keep saying",
    "start": "1085640",
    "end": "1092960"
  },
  {
    "text": "you have prioritized requests so not only is it multiplexing but it's not multiplication naively it's",
    "start": "1092960",
    "end": "1100039"
  },
  {
    "text": "saying you're sending this down this I'll get to the structure in a moment it's prioritizing and it's compressing",
    "start": "1100039",
    "end": "1107780"
  },
  {
    "text": "to give this a visual example which um it's pretty",
    "start": "1107780",
    "end": "1113780"
  },
  {
    "text": "right now if you want five resources in parallel you have to have five connections that's what we do in TCP what actually",
    "start": "1113780",
    "end": "1120559"
  },
  {
    "text": "happens across the wire is more like this it breaks it down into chunks",
    "start": "1120559",
    "end": "1125720"
  },
  {
    "text": "using time division multiplexing well why would you use multiple connections when you can just do that that is multiplexing",
    "start": "1125720",
    "end": "1133700"
  },
  {
    "text": "chucking it and sending chunks across that is exactly what all of our protocols do so what are all of our packet switching protocols do a single",
    "start": "1133700",
    "end": "1140419"
  },
  {
    "text": "connection contains some number of streams",
    "start": "1140419",
    "end": "1145000"
  },
  {
    "text": "now to bring that down to these protocols with HTTP one if you want a connection over TLS you open up H1 diver",
    "start": "1145460",
    "end": "1153799"
  },
  {
    "text": "TLS over TCP because there'll be a wire and you have to do that again if you want multiple things in parallel",
    "start": "1153799",
    "end": "1161840"
  },
  {
    "text": "the way H2 does it is if you open up all those connections it says a common connection state",
    "start": "1161840",
    "end": "1168980"
  },
  {
    "text": "which goes over one TLS session and one TCP connection",
    "start": "1168980",
    "end": "1174080"
  },
  {
    "text": "that is multiplexing in action",
    "start": "1174080",
    "end": "1177700"
  },
  {
    "text": "why use multiple carriers to the same endpoint why is multiple connections when you can just use one and achieve",
    "start": "1179240",
    "end": "1185780"
  },
  {
    "text": "the same thing and Asian so HTTP is 20 years old",
    "start": "1185780",
    "end": "1191299"
  },
  {
    "text": "uniplex Tech space runs over TCP should be pretty obvious stuff to you but what H2 does is it encapsulates it to add",
    "start": "1191299",
    "end": "1198559"
  },
  {
    "text": "binary framing it's not not human readable anymore",
    "start": "1198559",
    "end": "1203740"
  },
  {
    "text": "multiplexing so it's not linear anymore prioritized so you can't even predict",
    "start": "1203740",
    "end": "1210080"
  },
  {
    "text": "what order things are coming through and compressed so you have to decode it",
    "start": "1210080",
    "end": "1218840"
  },
  {
    "text": "statefully it's a stateful compression and server for streams so you can get",
    "start": "1218840",
    "end": "1224120"
  },
  {
    "text": "resources sent that you never asked for also mandatory encryption and mandatory encryption which for some",
    "start": "1224120",
    "end": "1230059"
  },
  {
    "text": "reason isn't on here yeah there are upgrades Messier but generally yeah",
    "start": "1230059",
    "end": "1236120"
  },
  {
    "text": "mandatory encryption yeah Disney implementation not the RFC",
    "start": "1236120",
    "end": "1243760"
  },
  {
    "text": "yes what's writers were simplify because but it's mandatory over quick so if you're using HTTP",
    "start": "1244280",
    "end": "1249760"
  },
  {
    "text": "you still have to use it yeah yeah and most implementations it will be",
    "start": "1249760",
    "end": "1256100"
  },
  {
    "text": "encrypted",
    "start": "1256100",
    "end": "1259100"
  },
  {
    "text": "yeah so the way two is structured again simplified you have a transport layer",
    "start": "1261440",
    "end": "1266480"
  },
  {
    "text": "which has frames each of those frames has a header and a payload and you have multiple frames",
    "start": "1266480",
    "end": "1271580"
  },
  {
    "text": "over your transport layer again for details and look at the rfcs",
    "start": "1271580",
    "end": "1277460"
  },
  {
    "text": "and the way that and then if you layer that up some more your frame payload itself",
    "start": "1277460",
    "end": "1283820"
  },
  {
    "text": "contains other headers",
    "start": "1283820",
    "end": "1287740"
  },
  {
    "text": "so it nests at another layer but the way that that actually breaks",
    "start": "1288919",
    "end": "1295640"
  },
  {
    "text": "down on the wire logically is you have a transport layer which has a string starting with one a",
    "start": "1295640",
    "end": "1302059"
  },
  {
    "text": "stream has some number of bi-directional it's about a racial Communications Channel",
    "start": "1302059",
    "end": "1307159"
  },
  {
    "text": "which communicates via frames with all of that stuff I just zoomed through frames going in both directions",
    "start": "1307159",
    "end": "1314539"
  },
  {
    "text": "and you have a lot of streams",
    "start": "1314539",
    "end": "1318460"
  },
  {
    "text": "so a connection is comprised of streams streams communicate with frames",
    "start": "1322340",
    "end": "1329980"
  },
  {
    "text": "binary framing anyway H2 one connection per origin with the",
    "start": "1331820",
    "end": "1338120"
  },
  {
    "text": "number of bi-directional binary frame streams conduct per connection pretty much what I said and the identifiers per stream are integers",
    "start": "1338120",
    "end": "1345799"
  },
  {
    "text": "31 bit unsigned a couple of key things to know about those if you're ever playing around with",
    "start": "1345799",
    "end": "1351020"
  },
  {
    "text": "an implementation they're never used they are always increasing",
    "start": "1351020",
    "end": "1356059"
  },
  {
    "text": "they are always odd for a client always even for a server",
    "start": "1356059",
    "end": "1361059"
  },
  {
    "text": "if you break that you'll get really bizarre protocol errors which is a nightmare debug isn't it virus I have no",
    "start": "1361820",
    "end": "1369380"
  },
  {
    "text": "idea what you're talking about I blame Google oh",
    "start": "1369380",
    "end": "1375320"
  },
  {
    "text": "gloves are off yeah so on that uh it's interesting to look at",
    "start": "1375320",
    "end": "1381500"
  },
  {
    "text": "connection setup and this is where you should start to see some of this if you have no prior knowledge you have an",
    "start": "1381500",
    "end": "1388039"
  },
  {
    "text": "upgrade here if you have no prior knowledge and you speak h11 you have an upgrade hitter",
    "start": "1388039",
    "end": "1394299"
  },
  {
    "text": "in this case the h2c clear text if it's coming from",
    "start": "1394580",
    "end": "1400100"
  },
  {
    "text": "um a non-encrypted HTTP session there will be H2 if it was over an https session",
    "start": "1400100",
    "end": "1406460"
  },
  {
    "text": "or if you have no prior knowledge and this is what you'll probably see you have alpn which is an SSL header",
    "start": "1406460",
    "end": "1412820"
  },
  {
    "text": "extension header which will give you an H2 as the application layer protocol it wants to negotiate",
    "start": "1412820",
    "end": "1419000"
  },
  {
    "text": "I recommend you don't use npn anymore because it doesn't work so if you're looking at npn again you're",
    "start": "1419000",
    "end": "1425000"
  },
  {
    "text": "going to have a better time yeah so as mentioned H2 is the encrypted",
    "start": "1425000",
    "end": "1430760"
  },
  {
    "text": "variant h2c is a clear text variant generally you're going to ch2 not h2c",
    "start": "1430760",
    "end": "1437600"
  },
  {
    "text": "now if you do have prior knowledge it gets a little more interesting",
    "start": "1437600",
    "end": "1443179"
  },
  {
    "text": "and this comes down to what I gave in the teaser you have this prism header",
    "start": "1443179",
    "end": "1448280"
  },
  {
    "text": "Price Star HTTP 2 rnrn smrnrn",
    "start": "1448280",
    "end": "1453860"
  },
  {
    "text": "it's really funny reading the mailing list for why they chose prism but that's a I leave that as an exercise to the reader",
    "start": "1453980",
    "end": "1461020"
  },
  {
    "text": "yeah so if you see price starts to be two inside a connection that's the start",
    "start": "1462559",
    "end": "1468679"
  },
  {
    "text": "of HTTP 2 session connection sorry I mentioned those frames earlier",
    "start": "1468679",
    "end": "1476240"
  },
  {
    "text": "they have their own header structure",
    "start": "1476240",
    "end": "1480460"
  },
  {
    "text": "which is variable length and it has various types again not going",
    "start": "1482780",
    "end": "1489980"
  },
  {
    "text": "to the details here because trying to introduce them the key ones you're going to want to know about out of this are the headers",
    "start": "1489980",
    "end": "1496760"
  },
  {
    "text": "data so headers as we using your HTTP 2 headers data is where you send your",
    "start": "1496760",
    "end": "1503900"
  },
  {
    "text": "request and response data uh what other ones",
    "start": "1503900",
    "end": "1509500"
  },
  {
    "text": "you probably want to know about reset stream which kills a stream and go away which is the equivalent of a",
    "start": "1509600",
    "end": "1517340"
  },
  {
    "text": "an mptcp Connection close or a TCP reset it just shuts down the whole thing",
    "start": "1517340",
    "end": "1523820"
  },
  {
    "text": "and the servers and the clients that are implementing this are already starting to vary in the way that they implement",
    "start": "1523820",
    "end": "1529940"
  },
  {
    "text": "the handling for different frame types so insert insert drama with the same",
    "start": "1529940",
    "end": "1536419"
  },
  {
    "text": "drama we had with TCP being around for years and different flags coming back as different stuff what we found this last",
    "start": "1536419",
    "end": "1541640"
  },
  {
    "text": "night we were optimizing for one implementation and it didn't work with another implementation which is because",
    "start": "1541640",
    "end": "1548179"
  },
  {
    "text": "we changed the URL returns URL and so it changed one of them was sending as a pig and the other",
    "start": "1548179",
    "end": "1553340"
  },
  {
    "text": "one was sending us a settings frame and it's a it's a protocol so you need to treat it as a protocol you can't pretend",
    "start": "1553340",
    "end": "1558559"
  },
  {
    "text": "it's linear anymore compression whole other standard of its own the HPA",
    "start": "1558559",
    "end": "1565820"
  },
  {
    "text": "compression stuff really really fascinating static table of common entries so anything you'll see regularly",
    "start": "1565820",
    "end": "1571700"
  },
  {
    "text": "any methods any common paths user agents all sorts of things from the",
    "start": "1571700",
    "end": "1578539"
  },
  {
    "text": "aesthetic table basically why would you repeat something you're going to say a thousand times there's also a dynamic table and this is",
    "start": "1578539",
    "end": "1584779"
  },
  {
    "text": "where it gets a little more interesting because that Dynamic table is made up of your previous requests and response bodies and",
    "start": "1584779",
    "end": "1590900"
  },
  {
    "text": "that said it used to see that dictionary that will change",
    "start": "1590900",
    "end": "1596059"
  },
  {
    "text": "it's got a cap on its size so you can't go inflating it too much anyway pitfalls connection reuse is a",
    "start": "1596059",
    "end": "1603260"
  },
  {
    "text": "fun one um the short of it is if you have multiple",
    "start": "1603260",
    "end": "1610640"
  },
  {
    "text": "fqdns resolving to the same IP using the same cert it won't bother opening a",
    "start": "1610640",
    "end": "1616520"
  },
  {
    "text": "connection to each different domain it will just open one connection and talk to them all",
    "start": "1616520",
    "end": "1624279"
  },
  {
    "text": "which is interesting if you're not expecting it also with",
    "start": "1624440",
    "end": "1629659"
  },
  {
    "text": "HTTP to push this makes uh pure domain origin enforcement fundamentally",
    "start": "1629659",
    "end": "1636740"
  },
  {
    "text": "impossible without going into the application layer because you can fundamentally connect to a different",
    "start": "1636740",
    "end": "1642020"
  },
  {
    "text": "domain via a push request and the browser has no way of telling the difference between a push request from a",
    "start": "1642020",
    "end": "1648919"
  },
  {
    "text": "domain that is quote unquote valid or a personal request that isn't because it's pushed by Nature so",
    "start": "1648919",
    "end": "1654640"
  },
  {
    "text": "the browser which is super push",
    "start": "1655159",
    "end": "1660559"
  },
  {
    "text": "those are some things which in particular I think if people treat them naively they're going to be in really big trouble",
    "start": "1660559",
    "end": "1667419"
  },
  {
    "text": "so quit takes those things and pushes them all the way down to the network layer it combines encryption and its",
    "start": "1668240",
    "end": "1674240"
  },
  {
    "text": "connection handshakes into one it doesn't negotiate them independently",
    "start": "1674240",
    "end": "1678879"
  },
  {
    "text": "basically read the documents on that there are a lot of them they are scattered they are fascinating",
    "start": "1680299",
    "end": "1686960"
  },
  {
    "text": "they change a lot because it's application layer because it's ITF because you've got different",
    "start": "1686960",
    "end": "1692179"
  },
  {
    "text": "source code is often the best documentation unfortunately for certain",
    "start": "1692179",
    "end": "1697400"
  },
  {
    "text": "aspects sadly the only source code out there to read is Google's quick implementation and I pity the fools that attempt to",
    "start": "1697400",
    "end": "1705380"
  },
  {
    "text": "read that yeah we might have done that okay so I said earlier that H2 basically",
    "start": "1705380",
    "end": "1712760"
  },
  {
    "text": "takes the common transport layer well quick does that",
    "start": "1712760",
    "end": "1718220"
  },
  {
    "text": "much the same on the top bet but it pushes down the quick connection which",
    "start": "1718220",
    "end": "1723500"
  },
  {
    "text": "has let's call it TLS in this case depending on which version you read integrated in",
    "start": "1723500",
    "end": "1729200"
  },
  {
    "text": "it and over UDP and it pushes the HTTP two streams and",
    "start": "1729200",
    "end": "1735200"
  },
  {
    "text": "Frames right the way down it handles the framing and streams and the sitting",
    "start": "1735200",
    "end": "1740419"
  },
  {
    "text": "across the network it doesn't just throw them into a transport now",
    "start": "1740419",
    "end": "1745299"
  },
  {
    "text": "this makes far more sense in a packet capture than it does conceptually it's really elegant in a packet capture",
    "start": "1746000",
    "end": "1752120"
  },
  {
    "text": "so yeah quick manages the streams if it's the transform this is what I mean when I say they are intertwined at present if you're using h2ev equip",
    "start": "1752120",
    "end": "1759679"
  },
  {
    "text": "The Logical separation is not as clean as it is in other spaces",
    "start": "1759679",
    "end": "1765940"
  },
  {
    "text": "so quick which I should have defined earlier a quick UDP internet connections that makes me really terrible as an",
    "start": "1766220",
    "end": "1771919"
  },
  {
    "text": "academic I'm not an academic so I'm okay as a UDP transport protocol as say it again and again and again",
    "start": "1771919",
    "end": "1779419"
  },
  {
    "text": "a Google Champion success at a speedy latency optimized",
    "start": "1779419",
    "end": "1785419"
  },
  {
    "text": "Quick's thing is all about latency reliable multiplexed even though it's",
    "start": "1785419",
    "end": "1792020"
  },
  {
    "text": "over UDP it is reliable it's always encrypted",
    "start": "1792020",
    "end": "1798340"
  },
  {
    "text": "open source user space",
    "start": "1800659",
    "end": "1805940"
  },
  {
    "text": "because it's user space there's no operating system requirement it's incredibly fast evolving",
    "start": "1805940",
    "end": "1812659"
  },
  {
    "text": "yeah the big one there is that while you can restrict ports and all the usual places",
    "start": "1812659",
    "end": "1818440"
  },
  {
    "text": "to build a fully coherent quick session you don't need to use a socket like you do with any TCP connection even under",
    "start": "1818440",
    "end": "1824659"
  },
  {
    "text": "TCP if you're doing fancy stuff where you're dropping raw packets on the wire you still need to open a socket port to",
    "start": "1824659",
    "end": "1829700"
  },
  {
    "text": "do that with the way that quick is implemented none of that is necessary so that makes it harder from identification",
    "start": "1829700",
    "end": "1835820"
  },
  {
    "text": "on a host yeah quick packet has frame packets and each frame packet contains some number of frames",
    "start": "1835820",
    "end": "1842179"
  },
  {
    "text": "so it could be the same sort of diagram of quick UDP which has a quick header",
    "start": "1842179",
    "end": "1849919"
  },
  {
    "text": "public header so that's readable but it's also authenticated and authenticated and encrypted data after",
    "start": "1849919",
    "end": "1855559"
  },
  {
    "text": "that and so that authenticated encrypted data you have a private header a frame packet",
    "start": "1855559",
    "end": "1860779"
  },
  {
    "text": "which has some number of frames you can read the UDP and the public headers but they are authenticated",
    "start": "1860779",
    "end": "1868279"
  },
  {
    "text": "the public here is authenticated you cannot read that without the key",
    "start": "1868279",
    "end": "1873100"
  },
  {
    "text": "so there's not a lot of metadata to look at compared to some other protocols quicker setup similar http",
    "start": "1874700",
    "end": "1881240"
  },
  {
    "text": "2 with some headers your old service header or your alternate protocol header which again you shouldn't be using",
    "start": "1881240",
    "end": "1886760"
  },
  {
    "text": "anyway that's not why you're here walking into nefarious actor do why are these interesting or dangerous well",
    "start": "1886760",
    "end": "1892159"
  },
  {
    "text": "always encrypted binary forever so a couple of things way more complex state",
    "start": "1892159",
    "end": "1898220"
  },
  {
    "text": "many many side channels uh quick as encrypted verify back to previous connections and user space and",
    "start": "1898220",
    "end": "1904520"
  },
  {
    "text": "all that however we're not talking about implementation flaws",
    "start": "1904520",
    "end": "1910460"
  },
  {
    "text": "they may this probably is a heap of them that's not what we had to talk about we had to talk about the effect this has on Networks",
    "start": "1910460",
    "end": "1917899"
  },
  {
    "text": "there's probably all sorts of fun things to find in there and I'm not totally saying that without knowledge",
    "start": "1917899",
    "end": "1923840"
  },
  {
    "text": "and insert a typical speech about binary person so bad so bad it's a really really",
    "start": "1923840",
    "end": "1931340"
  },
  {
    "text": "complex protocol with a really really complex implementation requirements and if you're doing that on low level or unmanaged languages",
    "start": "1931340",
    "end": "1937399"
  },
  {
    "text": "you've got to do it right so anyway if we're using these protocols today",
    "start": "1937399",
    "end": "1942860"
  },
  {
    "text": "how does that work when we come across approx you're an IDs well and this is",
    "start": "1942860",
    "end": "1948320"
  },
  {
    "text": "our first demo okay um",
    "start": "1948320",
    "end": "1953419"
  },
  {
    "text": "I apologize for all the screen copying in advance some joke about Linux and",
    "start": "1953419",
    "end": "1958700"
  },
  {
    "text": "multiple desktops uh so what the slide that you just saw",
    "start": "1958700",
    "end": "1964640"
  },
  {
    "text": "showed the purpose of this demo is to produce effectively a tube so we have H1",
    "start": "1964640",
    "end": "1970039"
  },
  {
    "text": "and a standard server context on one end and we have H2 in between slash quick in",
    "start": "1970039",
    "end": "1976159"
  },
  {
    "text": "between and then H1 on the other end so you can have a client that makes a request it gets quickified and then the",
    "start": "1976159",
    "end": "1982340"
  },
  {
    "text": "request comes out standard on the other side and the idea is that if we were a nefarious actor and we're doing data exfiltration or if our piping in this",
    "start": "1982340",
    "end": "1989240"
  },
  {
    "text": "case the example is going to be in return shell or anything else that we assume that we don't want a knock or sock to see nothing reads this protocol",
    "start": "1989240",
    "end": "1995960"
  },
  {
    "text": "in the first place so I don't have to rely on the concept of perfect TLS because in this case my traffic isn't",
    "start": "1995960",
    "end": "2002679"
  },
  {
    "text": "opaque it's just invisible um I know so uh",
    "start": "2002679",
    "end": "2008200"
  },
  {
    "text": "here's my Victim VM which I downloaded off the intertubes for my standard Microsoft place",
    "start": "2008200",
    "end": "2014919"
  },
  {
    "text": "um and",
    "start": "2014919",
    "end": "2019840"
  },
  {
    "text": "just so I can show what IP it's on uh so everybody knows where I'm gonna",
    "start": "2020200",
    "end": "2025539"
  },
  {
    "text": "call um and now all this code will be public at some fashion as soon as",
    "start": "2025539",
    "end": "2032860"
  },
  {
    "text": "Cisco and our wonderful corporate overlords figure out how they want us to release it um",
    "start": "2032860",
    "end": "2037960"
  },
  {
    "text": "but so this is the first half of the tube which is an H1 to quick",
    "start": "2037960",
    "end": "2043480"
  },
  {
    "text": "up Repro and the two arguments that you see past um this this is the dial back Port which",
    "start": "2043480",
    "end": "2051220"
  },
  {
    "text": "means that all the connections that it receives are going to get sent back over uh this quick socket as it were but I",
    "start": "2051220",
    "end": "2059200"
  },
  {
    "text": "use that term euphemistically because quick doesn't have a literal socket and then the listener which is going to be",
    "start": "2059200",
    "end": "2064480"
  },
  {
    "text": "in this case the catcher for our interpreter shell so our interpreter shell is going to call home to this listener and it's going to dial out over",
    "start": "2064480",
    "end": "2070480"
  },
  {
    "text": "that port and now the other half of our tube no it's not that there we go",
    "start": "2070480",
    "end": "2078520"
  },
  {
    "text": "um so this you know you have to as we said earlier there is no implementation of quick that currently does not support",
    "start": "2078520",
    "end": "2084099"
  },
  {
    "text": "crypto and there never will be at least as far as the spec is concerned so you have to give it a key uh for the purpose",
    "start": "2084099",
    "end": "2090878"
  },
  {
    "text": "of this example I've uh installed the keys as a trusted root cert so that I",
    "start": "2090879",
    "end": "2096760"
  },
  {
    "text": "don't have all the error messages that usually pop up on deployment but the implementations that are public if you",
    "start": "2096760",
    "end": "2102220"
  },
  {
    "text": "use SSL three does insecure skip verify for you so that's kind of the cheat code if you don't want to deal with SSL stuff",
    "start": "2102220",
    "end": "2109500"
  },
  {
    "text": "and then I have my same same topology where I have a dial back and I have a",
    "start": "2109500",
    "end": "2115720"
  },
  {
    "text": "listener and the dial back in this case is just going back to my Metasploit instance so if I Mouse over here to",
    "start": "2115720",
    "end": "2123940"
  },
  {
    "text": "where'd it go there we go so here's my Metasploit terminal see I've got a bunch of listeners of a",
    "start": "2123940",
    "end": "2130300"
  },
  {
    "text": "bunch of different types and we're just going to use a standard",
    "start": "2130300",
    "end": "2135520"
  },
  {
    "text": "PS exec sorry try to put that on one group the password and stuff you saw earlier",
    "start": "2135520",
    "end": "2143320"
  },
  {
    "text": "and again this is just going to call back to our the beginning of that tube",
    "start": "2143320",
    "end": "2148660"
  },
  {
    "text": "um so it's not going to call back to the direct listener it's going to get quickified on the way in so",
    "start": "2148660",
    "end": "2154599"
  },
  {
    "text": "I'm gonna fire up Wireshark here if my computer will stop freaking out",
    "start": "2154599",
    "end": "2161619"
  },
  {
    "text": "because the demo got to take me",
    "start": "2161619",
    "end": "2165359"
  },
  {
    "text": "all right and now we're gonna go and punch up exploit",
    "start": "2178599",
    "end": "2187200"
  },
  {
    "text": "so it executes our payload and then we get a session open immediately so I'm gonna pause my my packet capture",
    "start": "2189820",
    "end": "2199180"
  },
  {
    "text": "and if you see we scroll up here past all the noise that my computer is making and all we",
    "start": "2199180",
    "end": "2205480"
  },
  {
    "text": "see is a bunch of UDP and you'll also note that since the port on these is non-standard Wireshark has",
    "start": "2205480",
    "end": "2211300"
  },
  {
    "text": "no idea what it is this goes all the way down to any of the pcap implementations that are out there right now while there",
    "start": "2211300",
    "end": "2216880"
  },
  {
    "text": "is relatively good support for dissecting this stuff in the wild there's almost no support for detecting it strictly because of parsing issues",
    "start": "2216880",
    "end": "2223680"
  },
  {
    "text": "and now in this implementation that I built here which was a ton of work this",
    "start": "2223680",
    "end": "2228760"
  },
  {
    "text": "session is borderline unusable only because the way that interpreter works it requires what effectively reduces to",
    "start": "2228760",
    "end": "2235119"
  },
  {
    "text": "an HTTP one keep alive session which it is possible to implement in puic but almost impossible to implement with the",
    "start": "2235119",
    "end": "2241720"
  },
  {
    "text": "code that is publicly available there's only really two libraries that are robust enough to build this if I wanted",
    "start": "2241720",
    "end": "2247300"
  },
  {
    "text": "to build it in C I would have had to build an HTTP server and client with full multiplexing entirely in C and so",
    "start": "2247300",
    "end": "2253900"
  },
  {
    "text": "for time I attempted to use their go Fork because Google has been blessed with us enough to provide a go export of",
    "start": "2253900",
    "end": "2260380"
  },
  {
    "text": "their C implementation unfortunately the people who wrote it clearly don't write a lot to go because all they did was use sigo to export as much as they as much",
    "start": "2260380",
    "end": "2268000"
  },
  {
    "text": "stuff as they had to from C to use it and none of that stuff is accessible from the developer without changing core",
    "start": "2268000",
    "end": "2273160"
  },
  {
    "text": "fundamentals of the library and it is not idiomatic and the way that go is supposed to handle web traffic at all so",
    "start": "2273160",
    "end": "2280000"
  },
  {
    "text": "a word word to the you know warning to those out there who decide to start playing with the stuff there be dragons",
    "start": "2280000",
    "end": "2287680"
  },
  {
    "text": "viruses soapbox is filled with ghost stickers it's true",
    "start": "2287680",
    "end": "2293820"
  },
  {
    "text": "but yeah so if we I'm sorry I'm I don't have dual screens or reading slides uh",
    "start": "2294099",
    "end": "2303940"
  },
  {
    "text": "B streams so first we're going to isolate this stream and I'm not going to do it here just",
    "start": "2304500",
    "end": "2311140"
  },
  {
    "text": "because it actually takes a while for uh the CPU to decode all the traffic but even if I were to explicitly tell",
    "start": "2311140",
    "end": "2316480"
  },
  {
    "text": "Wireshark that this is quick you don't really get anything more than this on a live session because since The",
    "start": "2316480",
    "end": "2322180"
  },
  {
    "text": "Interpreter web request even though it's legit it's so foreign to the H2 decoder as an example of how bad most of these",
    "start": "2322180",
    "end": "2328240"
  },
  {
    "text": "parsers are it doesn't really get any better than this you just get encrypted compressed garbage with kind of sort of",
    "start": "2328240",
    "end": "2333940"
  },
  {
    "text": "little handshake Nubs in there if you know anything about the protocol but even when you tell it exactly what it is you get a little bit of extra metadata",
    "start": "2333940",
    "end": "2340119"
  },
  {
    "text": "but no real information all right",
    "start": "2340119",
    "end": "2347160"
  },
  {
    "text": "there we go",
    "start": "2347980",
    "end": "2351240"
  },
  {
    "text": "huge Liberty music",
    "start": "2363160",
    "end": "2366359"
  },
  {
    "text": "so that is what virus was just showing local H2 proxy quick H2O",
    "start": "2371820",
    "end": "2379000"
  },
  {
    "text": "um skip some for time feel free to come talk to us later so multiplexing as I",
    "start": "2379000",
    "end": "2384640"
  },
  {
    "text": "said earlier does this you can also when you put a multi-path you get multi-connection",
    "start": "2384640",
    "end": "2390760"
  },
  {
    "text": "with that multiplexing is a whole other bundle of fun to try and decode and if we combine them we get something like that",
    "start": "2390760",
    "end": "2398700"
  },
  {
    "text": "now I've done this already I talked about this last year you can do this with even HTTP one",
    "start": "2399460",
    "end": "2405880"
  },
  {
    "text": "however if you do with http1 what you get is you actually get that because it's simply breaking out between",
    "start": "2405880",
    "end": "2412300"
  },
  {
    "text": "the two paths with HTTP 2 because you can Multiplex you have chunks of your data flying",
    "start": "2412300",
    "end": "2417760"
  },
  {
    "text": "across different paths and if your IDs doesn't get seeing and correlating all of them how do you make sense of that",
    "start": "2417760",
    "end": "2423400"
  },
  {
    "text": "particularly if you have a shared cryptographic State across them all in which case you miss it on one channel",
    "start": "2423400",
    "end": "2429940"
  },
  {
    "text": "and you start not being able to make sense of any of them FYI we haven't found an IDs yet that",
    "start": "2429940",
    "end": "2435400"
  },
  {
    "text": "we'll catch that it's an architectural thing how do you inspect traffic you cannot observe or",
    "start": "2435400",
    "end": "2442540"
  },
  {
    "text": "cannot even see the metadata or flow data for I don't know and so that's you know the cross path fragmentation",
    "start": "2442540",
    "end": "2448060"
  },
  {
    "text": "splitting it up agility bouncing between paths and you get the multi-stream which is not just bouncing between paths but",
    "start": "2448060",
    "end": "2454359"
  },
  {
    "text": "within each uh connection bouncing between streams within that and then agility which is not just",
    "start": "2454359",
    "end": "2460780"
  },
  {
    "text": "bouncing between them but also killing some of them as you go and a lot of little noise you can bring in RF",
    "start": "2460780",
    "end": "2465940"
  },
  {
    "text": "techniques to these multiplexings and things get really really messy Ford",
    "start": "2465940",
    "end": "2470980"
  },
  {
    "text": "era correction was another fun one for now it's been removed from chrome so I'm not going to talk about it",
    "start": "2470980",
    "end": "2476020"
  },
  {
    "text": "but if you have FEC you can inject fake packets you can drop or corrupt packets",
    "start": "2476020",
    "end": "2481599"
  },
  {
    "text": "anyway what do you do if you see all of this what do you do if you want to understand or to block it for some",
    "start": "2481599",
    "end": "2488320"
  },
  {
    "text": "reason if you want to know client traffic look for the alpn largely look for the",
    "start": "2488320",
    "end": "2493660"
  },
  {
    "text": "upgrade headers if you want to see the quick traffic it's much the same you look for",
    "start": "2493660",
    "end": "2498880"
  },
  {
    "text": "UDP 80 and 443 outbound that will only get standards compliance stuff that follows",
    "start": "2498880",
    "end": "2505480"
  },
  {
    "text": "the current paradigms it won't get people like virus doing UDP interpreters",
    "start": "2505480",
    "end": "2510579"
  },
  {
    "text": "Timely bi-directional patterns of communication this stuff does not look like",
    "start": "2510579",
    "end": "2517119"
  },
  {
    "text": "most UDP traffic it has different flows",
    "start": "2517119",
    "end": "2522640"
  },
  {
    "text": "there is no static identifier in the header you have to pass it",
    "start": "2522640",
    "end": "2528339"
  },
  {
    "text": "there is no magic there is no magic set of bytes you have to understand this protocol to",
    "start": "2528339",
    "end": "2533500"
  },
  {
    "text": "be able to make sense of it and posting this because of the variable lengths is actually relatively difficult so this is",
    "start": "2533500",
    "end": "2538660"
  },
  {
    "text": "why arguably the best defense strategy right now if you're looking at deploying an APS IDs in a web environment where",
    "start": "2538660",
    "end": "2544780"
  },
  {
    "text": "you can almost guarantee that you're only going to get HTTP traffic is to actually just back proxy everything to http one yeah so we have a quick",
    "start": "2544780",
    "end": "2551740"
  },
  {
    "text": "detector which we can demonstrate during questions for now I'm going to skip to make sure we don't run out of time",
    "start": "2551740",
    "end": "2556900"
  },
  {
    "text": "so the other thing you can do is going to take servers if you want to take the H2 server make a request to it with alpn",
    "start": "2556900",
    "end": "2562240"
  },
  {
    "text": "see if it connects over H2 stiff it answers with upgrade headers if you want to look for quick server traffic",
    "start": "2562240",
    "end": "2568480"
  },
  {
    "text": "you want to see inbound traffic on 80 and 443 um",
    "start": "2568480",
    "end": "2573880"
  },
  {
    "text": "quick scanner I don't think there's any of them out there nothing that will just interrogate do you speak quick yeah the",
    "start": "2573880",
    "end": "2580480"
  },
  {
    "text": "ones that are barely look at checksums I'm pretty sure if we've written the best quick scanner that exists and it's like nine lines of code",
    "start": "2580480",
    "end": "2586780"
  },
  {
    "text": "and if you want to block out then of course if you want to block H2 terminate it I personally would don't think you",
    "start": "2586780",
    "end": "2592119"
  },
  {
    "text": "should block it because the Market's against you but if you want to protect your environment and you think these are a threat",
    "start": "2592119",
    "end": "2597760"
  },
  {
    "text": "transparent proxies and termination just start support outbound uh the upgrade hit us you want to deal",
    "start": "2597760",
    "end": "2605079"
  },
  {
    "text": "to those but if you can't miss them ever because the browsers cached them so if you miss",
    "start": "2605079",
    "end": "2610420"
  },
  {
    "text": "them once or if they talk to another path you're in trouble",
    "start": "2610420",
    "end": "2616180"
  },
  {
    "text": "you want to look for them on non-standard ports which is Again difficult so quick",
    "start": "2616180",
    "end": "2622680"
  },
  {
    "text": "93 of uh networks right now let this through",
    "start": "2622780",
    "end": "2627880"
  },
  {
    "text": "outbound on 80 and 443 you could block that",
    "start": "2627880",
    "end": "2633359"
  },
  {
    "text": "that's a policy decision if you have Chrome which is the main",
    "start": "2633700",
    "end": "2639099"
  },
  {
    "text": "thing using this you can deploy a policy to it that'll tell it not to use this that is probably the simplest way to",
    "start": "2639099",
    "end": "2644740"
  },
  {
    "text": "deal with this in most cases and then if you do see it you know it's not something you're managing look that doesn't take mobile into",
    "start": "2644740",
    "end": "2651339"
  },
  {
    "text": "account though that doesn't make mobile on Twitter yeah you can fingerprint",
    "start": "2651339",
    "end": "2656400"
  },
  {
    "text": "a demo but again time's a bit tight so anyway you can analyze these uh H2 as I",
    "start": "2658119",
    "end": "2665619"
  },
  {
    "text": "demonstrated at the start with the SSL key log file is really good to do in yshark Chrome it's all better assuming it's on",
    "start": "2665619",
    "end": "2672460"
  },
  {
    "text": "a port that Wireshark expects and assuming you can tell it what it is otherwise even if you tell it it will have no idea what it's absolutely",
    "start": "2672460",
    "end": "2679000"
  },
  {
    "text": "Chrome Dev tools are good for H2 and quick you have h2i which is a fun little tool",
    "start": "2679000",
    "end": "2685119"
  },
  {
    "text": "and go that enables you to send arbitrary commands to arbitrary streams NG HTTP which for some reason has been",
    "start": "2685119",
    "end": "2691720"
  },
  {
    "text": "clipped by my image there's a lot of tools out there to support this just not so much security tools well with one",
    "start": "2691720",
    "end": "2697240"
  },
  {
    "text": "exception curl has HTTP 2 support but that's not the exception the exception is MIT and",
    "start": "2697240",
    "end": "2702339"
  },
  {
    "text": "proxy which supports H2 now quick again Chrome your best friend on",
    "start": "2702339",
    "end": "2708099"
  },
  {
    "text": "this right now it has all your alternate protocol app engine alternate service mappings cached",
    "start": "2708099",
    "end": "2714160"
  },
  {
    "text": "it's a few from one of my browsers why shock is a quick dissector t-shock",
    "start": "2714160",
    "end": "2719800"
  },
  {
    "text": "supports this if you give it the filters",
    "start": "2719800",
    "end": "2724079"
  },
  {
    "text": "if you want to inspect it H2 is doable and it'll be especially durable when vendors support it quick",
    "start": "2725859",
    "end": "2732520"
  },
  {
    "text": "yeah that'll take a while okay I'd say it's going to be a long time until most vendors are supporting quirk",
    "start": "2732520",
    "end": "2738940"
  },
  {
    "text": "at least an inspection and I'd say there's probably a good chance that that will be seen as",
    "start": "2738940",
    "end": "2745780"
  },
  {
    "text": "against the private use case of it and measures will be made to prevent that because the things that we do to protect",
    "start": "2745780",
    "end": "2752500"
  },
  {
    "text": "our traffic or to inspect their traffic are the same things people do to harm users",
    "start": "2752500",
    "end": "2759040"
  },
  {
    "text": "anyway conclusions future work other protocols webrtc over quick is a fun one",
    "start": "2759040",
    "end": "2765160"
  },
  {
    "text": "extending the multiplexing stuff some more multi-path Quirk error correction and",
    "start": "2765160",
    "end": "2770380"
  },
  {
    "text": "quirk but tools have to keep up they're not I've talked to people about this they're",
    "start": "2770380",
    "end": "2776500"
  },
  {
    "text": "like but no one's using it oh really here's the stats oh if tools can't keep up",
    "start": "2776500",
    "end": "2782680"
  },
  {
    "text": "you need to at least know to look for this and if tools and people are away play time is over",
    "start": "2782680",
    "end": "2789900"
  },
  {
    "text": "and that slide is way too small you know what I'll leave that up and we'll shift to questions",
    "start": "2790599",
    "end": "2796599"
  },
  {
    "text": "or we can go to Carl's demos if people would prefer to see more demos we should go to questions",
    "start": "2796599",
    "end": "2802420"
  },
  {
    "text": "it is any questions",
    "start": "2802420",
    "end": "2809500"
  },
  {
    "text": "Sergey microphone",
    "start": "2809500",
    "end": "2815200"
  },
  {
    "text": "so the question was uh do any of the parsers look auto-generated absolutely not uh I have not seen any auto generated",
    "start": "2821680",
    "end": "2828819"
  },
  {
    "text": "parsers in fact the best parser that we've seen that will actually dissect a single quick packet without being told that it's a quick bucket in advance is",
    "start": "2828819",
    "end": "2835240"
  },
  {
    "text": "actually end top believe it or not and the scanner that we ended up building is literally I took",
    "start": "2835240",
    "end": "2840819"
  },
  {
    "text": "the C from ntop emulator didn't go in a few lines and then added some extra checks because I know how the protocol works and as I'm aware nobody else even",
    "start": "2840819",
    "end": "2847180"
  },
  {
    "text": "has that level of detection three",
    "start": "2847180",
    "end": "2854500"
  },
  {
    "text": "so the question was how deeply are the structures nested that depends on what layer of protocol encapsulation we're",
    "start": "2855040",
    "end": "2861220"
  },
  {
    "text": "talking about HTTP 2 the slide with the black streams",
    "start": "2861220",
    "end": "2866980"
  },
  {
    "text": "that's all you're looking at it's just TCP and TLS over the top of that as soon as you start talking about quick it gets",
    "start": "2866980",
    "end": "2872140"
  },
  {
    "text": "weird because while the current implementations just take HTTP take H2 frames and basically just turn them into",
    "start": "2872140",
    "end": "2878440"
  },
  {
    "text": "Quick frames the spec doesn't say that that has to happen and if you throw dual layers of TLS crypto and you know stream",
    "start": "2878440",
    "end": "2886540"
  },
  {
    "text": "muxing and multiplexing in between that's a nightmare to Parts even for the",
    "start": "2886540",
    "end": "2892180"
  },
  {
    "text": "best of parsers it's it's a lot nested to be technical yeah",
    "start": "2892180",
    "end": "2898680"
  },
  {
    "text": "okay what's up I'm curious",
    "start": "2902280",
    "end": "2907079"
  },
  {
    "text": "their Windows there are windows per stream and there is also there are settings to look oh does the protocol",
    "start": "2913900",
    "end": "2920859"
  },
  {
    "text": "specify a maximum number of frames per connection or stream",
    "start": "2920859",
    "end": "2927280"
  },
  {
    "text": "so there there is two to the 31 available stream identifiers you can't use them all so there's a",
    "start": "2927280",
    "end": "2934060"
  },
  {
    "text": "number of streams the number you can limit the number of concurrent streams in your settings in most cases that's",
    "start": "2934060",
    "end": "2940960"
  },
  {
    "text": "100. uh as for how many frames go through to the 64.",
    "start": "2940960",
    "end": "2946960"
  },
  {
    "text": "so it's it's a protocol then when you add multiplexing you can mix streams and connections so even those limits are",
    "start": "2946960",
    "end": "2953200"
  },
  {
    "text": "kind of irrelevant from an application perspective it's a lot of state to deal with",
    "start": "2953200",
    "end": "2961440"
  },
  {
    "text": "so you uh so you mentioned the prior knowledge headers uh can you you do you",
    "start": "2961540",
    "end": "2967540"
  },
  {
    "text": "see ways to use that fingerprint clients you could",
    "start": "2967540",
    "end": "2974079"
  },
  {
    "text": "okay yeah yeah I assuming assuming that the client isn't lying to",
    "start": "2974079",
    "end": "2979119"
  },
  {
    "text": "you yes they also have a very short lifetime in most cases so they could be a super",
    "start": "2979119",
    "end": "2986020"
  },
  {
    "text": "cookie within a certain length of time I think the thing which I would argue is",
    "start": "2986020",
    "end": "2991960"
  },
  {
    "text": "more likely to be it is actually going to be the alternate service hitters and the domain associated with him which is",
    "start": "2991960",
    "end": "2998200"
  },
  {
    "text": "not a great deal different to what we do with various tracking right now yeah just sort of hand wavy how long do they",
    "start": "2998200",
    "end": "3005220"
  },
  {
    "text": "end up caching those values do the clients cashed out about 24 hours yeah yeah about a day I",
    "start": "3005220",
    "end": "3011460"
  },
  {
    "text": "mean it your mileage may vary there's already been some binary Parts where bugs released in H2 and some of the",
    "start": "3011460",
    "end": "3017280"
  },
  {
    "text": "major browsers that have been patched but I guarantee you that's not all of them and I'm sure as the implementation bugs come so will the attention and so",
    "start": "3017280",
    "end": "3023280"
  },
  {
    "text": "will the patch times decrease yeah the usual insecurity it has to get worse before it gets better so and another",
    "start": "3023280",
    "end": "3030300"
  },
  {
    "text": "thing which we didn't mention which is because this is application layer because the code is available",
    "start": "3030300",
    "end": "3036000"
  },
  {
    "text": "you could put this in any application You're Building only for good of course",
    "start": "3036000",
    "end": "3043578"
  },
  {
    "text": "Demo's notwithstanding and I hear the Snickers so people know my point if you get if you get application layer",
    "start": "3044280",
    "end": "3050940"
  },
  {
    "text": "transport protocols and malware we're in real trouble",
    "start": "3050940",
    "end": "3055040"
  },
  {
    "text": "but the internet was designed there the internet was designed end to end we've deluded ourselves that it's not",
    "start": "3056280",
    "end": "3064160"
  },
  {
    "text": "is that it we're done is it everyone [Applause]",
    "start": "3064740",
    "end": "3074650"
  }
]