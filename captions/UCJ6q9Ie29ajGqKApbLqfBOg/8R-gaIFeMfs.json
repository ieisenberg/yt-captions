[
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14690"
  },
  {
    "text": "all right let's start the presentation thank you for attending my talk i am xung han and very pleased to share my",
    "start": "14960",
    "end": "21840"
  },
  {
    "text": "research at black usa in this presentation i'm going to talk",
    "start": "21840",
    "end": "26960"
  },
  {
    "text": "about my new tool alcatraz that prevents escapes from the kvm qemu and kvm based",
    "start": "26960",
    "end": "33600"
  },
  {
    "text": "micro vms i am a senior skill researcher at the affiliated institute of etri",
    "start": "33600",
    "end": "40559"
  },
  {
    "text": "i'm a review board member of blackhead asia and kimchicon conference i was a speaker at several conferences",
    "start": "40559",
    "end": "47360"
  },
  {
    "text": "like eugenic security like acr and europe again the boxing conference and",
    "start": "47360",
    "end": "52480"
  },
  {
    "text": "more additionally i'm a debian linux maintainer and have been taking care of packages",
    "start": "52480",
    "end": "58879"
  },
  {
    "text": "related to cpu and advanced configuration and power interface",
    "start": "58879",
    "end": "64400"
  },
  {
    "text": "i have contributed several linux kernel patches too",
    "start": "64400",
    "end": "69360"
  },
  {
    "text": "goal of this talk is that i present escape paths of kvm qmu and kvm based",
    "start": "69439",
    "end": "77920"
  },
  {
    "text": "micro vms kvm based hypervisors are widely used from vms to containers but",
    "start": "77920",
    "end": "85759"
  },
  {
    "text": "kvm has higher privilege than the corner and the attacker can use it for its case",
    "start": "85759",
    "end": "92960"
  },
  {
    "text": "so i made a new tool alcatraz and introduced it to prevent escapes it",
    "start": "92960",
    "end": "98640"
  },
  {
    "text": "downgrades kvm's privilege to the guest hypervisor it makes a sandbox for",
    "start": "98640",
    "end": "105680"
  },
  {
    "text": "the kpm and monitored system course to prevent escapes such as unauthorized",
    "start": "105680",
    "end": "111200"
  },
  {
    "text": "process creation counter code modification and privilege escalation [Music]",
    "start": "111200",
    "end": "117680"
  },
  {
    "text": "before the talk i would like to tell you a short story related to this presentation and",
    "start": "117680",
    "end": "123439"
  },
  {
    "text": "research once upon a time there was a young skit researcher",
    "start": "123439",
    "end": "128640"
  },
  {
    "text": "uh i said just young secret researcher that means he was not ceo or cto",
    "start": "128640",
    "end": "136160"
  },
  {
    "text": "and not even new cso or managers yeah he was just a young secret",
    "start": "136160",
    "end": "143520"
  },
  {
    "text": "researcher so he was over there and just enjoyed his hacking life",
    "start": "143520",
    "end": "150160"
  },
  {
    "text": "in those days all cloud platforms were based on virtual machine technology",
    "start": "150160",
    "end": "155599"
  },
  {
    "text": "however devops and serverless architectures immersed and the cloud platforms had to",
    "start": "155599",
    "end": "163440"
  },
  {
    "text": "support new container based technology to meet these needs amazon microsoft",
    "start": "163440",
    "end": "169680"
  },
  {
    "text": "google provided container services and service functions like amazon lambda azure function and google",
    "start": "169680",
    "end": "177200"
  },
  {
    "text": "cloud function wow it seemed like a new era of cloud",
    "start": "177200",
    "end": "183920"
  },
  {
    "text": "platform had come so he thought the container would load the flat pump soon",
    "start": "183920",
    "end": "191920"
  },
  {
    "text": "wait a second but how maybe we need to check virtual machine",
    "start": "193200",
    "end": "198560"
  },
  {
    "text": "architecture and container architecture before we go further to history",
    "start": "198560",
    "end": "203680"
  },
  {
    "text": "the wrapped site is a virtual motion architecture it has a hypervisor and hypervisor max",
    "start": "203680",
    "end": "210080"
  },
  {
    "text": "vms make their they have their own os as well as",
    "start": "210080",
    "end": "216159"
  },
  {
    "text": "guest os applications learn on it in contrast the container architecture",
    "start": "216159",
    "end": "223360"
  },
  {
    "text": "only has supporting files and long time for each container applications loan on them with a shared",
    "start": "223360",
    "end": "230400"
  },
  {
    "text": "link scanner the differences are available one thing is the isolation",
    "start": "230400",
    "end": "236720"
  },
  {
    "text": "technique the other is the execution environment",
    "start": "236720",
    "end": "242000"
  },
  {
    "text": "let's see more details vm architecture uses virtual motion monitor as well as",
    "start": "242000",
    "end": "248400"
  },
  {
    "text": "a high provider vm architecture provides strong isolation with the hypervisor however",
    "start": "248400",
    "end": "255840"
  },
  {
    "text": "full operating system is needed and performance overhead is high it also has its own execution",
    "start": "255840",
    "end": "262479"
  },
  {
    "text": "environment such as corner and airspace in contrast container architecture uses",
    "start": "262479",
    "end": "268960"
  },
  {
    "text": "namespace and c group features of linux corner container architecture provides",
    "start": "268960",
    "end": "274479"
  },
  {
    "text": "weak isolation so just supporting files are needed and performance overhead is low",
    "start": "274479",
    "end": "282240"
  },
  {
    "text": "it means that if an attacker has a counter pre control",
    "start": "282240",
    "end": "287360"
  },
  {
    "text": "vulnerability he or she can escape from the container",
    "start": "287360",
    "end": "292880"
  },
  {
    "text": "and also separate the hosts and other containers",
    "start": "292880",
    "end": "298880"
  },
  {
    "text": "all right let's go back to history cloud vendors and researchers including",
    "start": "298880",
    "end": "305039"
  },
  {
    "text": "him also knew the problem of container technology but containers were",
    "start": "305039",
    "end": "310720"
  },
  {
    "text": "indispensable and strong isolation was needed to prevent escapes",
    "start": "310720",
    "end": "317520"
  },
  {
    "text": "to overcome the problem they mixed container technology and hypervisor then",
    "start": "318080",
    "end": "324800"
  },
  {
    "text": "new things were born they were containers but had a hypervisor",
    "start": "324800",
    "end": "330880"
  },
  {
    "text": "it meant they were some hybrid things",
    "start": "330880",
    "end": "336080"
  },
  {
    "text": "the young and poor security searcher was confused and",
    "start": "336080",
    "end": "341360"
  },
  {
    "text": "even he didn't know how to call them correctly",
    "start": "341360",
    "end": "346720"
  },
  {
    "text": "he thought about it all day and night and he finally found out that",
    "start": "346720",
    "end": "354159"
  },
  {
    "text": "to be a container or not to be a container",
    "start": "355759",
    "end": "361360"
  },
  {
    "text": "that's not the question the real question is",
    "start": "361360",
    "end": "366400"
  },
  {
    "text": "how can we prevent this case",
    "start": "366400",
    "end": "370800"
  },
  {
    "text": "after that he started his long and painful journey to find the answer as you guess",
    "start": "371600",
    "end": "378240"
  },
  {
    "text": "the skill researcher is me and this is my",
    "start": "378240",
    "end": "384080"
  },
  {
    "text": "exciting journey this is content",
    "start": "384319",
    "end": "390479"
  },
  {
    "text": "and background before explaining my new tool alcatraz",
    "start": "390479",
    "end": "395919"
  },
  {
    "text": "let's check the hybrid technology the first one is kata container kata container has a simple architecture it",
    "start": "395919",
    "end": "403199"
  },
  {
    "text": "uses vms to make secure containers it learns a container on the vm so it has",
    "start": "403199",
    "end": "409919"
  },
  {
    "text": "strong isolation and high performance overhead cutter container can support various vms",
    "start": "409919",
    "end": "417440"
  },
  {
    "text": "such as qemu amazon firecracker and inter-cloud hypervisor",
    "start": "417440",
    "end": "423199"
  },
  {
    "text": "the important point is that kvm is the core amazons firecracker is a new open source",
    "start": "423199",
    "end": "430800"
  },
  {
    "text": "hypervisor specialized for servers workloads and containers it replaces qem",
    "start": "430800",
    "end": "437360"
  },
  {
    "text": "new and makes a new type vm called micro vm micro vm has its own device model and",
    "start": "437360",
    "end": "445680"
  },
  {
    "text": "has minimal setup the customized corner and loot bar system",
    "start": "445680",
    "end": "451680"
  },
  {
    "text": "as you see firecracker also leverages kvm google gfixers is an application corner",
    "start": "451680",
    "end": "458560"
  },
  {
    "text": "for containers it limits the host corner surface accessible to the application",
    "start": "458560",
    "end": "465599"
  },
  {
    "text": "g by just corner sentry provides corner services to the application but it runs",
    "start": "465599",
    "end": "472080"
  },
  {
    "text": "as a user process and has many more setup corner and fire services",
    "start": "472080",
    "end": "478720"
  },
  {
    "text": "gvisor uses kbm to intercept system core requests of the application",
    "start": "478720",
    "end": "486000"
  },
  {
    "text": "as i mentioned before all hybrid architectures are leveraged kvm and this",
    "start": "486000",
    "end": "491599"
  },
  {
    "text": "is the architecture there are some strange points like",
    "start": "491599",
    "end": "498319"
  },
  {
    "text": "host corner has link zero privilege however kvm has a ring minus one",
    "start": "498319",
    "end": "503440"
  },
  {
    "text": "privilege and it means kvm has more power than the corner even though it is",
    "start": "503440",
    "end": "510000"
  },
  {
    "text": "a corner module the more important point is kvm connects",
    "start": "510000",
    "end": "515599"
  },
  {
    "text": "with vm software directly because of supporting vm services but vms can be",
    "start": "515599",
    "end": "521518"
  },
  {
    "text": "subverted by attacker if they lend or purchase the vms from the cloud vendors",
    "start": "521519",
    "end": "529440"
  },
  {
    "text": "so i felt something suspicious yeah totally something suspicious",
    "start": "529440",
    "end": "537519"
  },
  {
    "text": "the hybrid technology leveraged kvm as a hypervisor to get strong isolation",
    "start": "537519",
    "end": "542959"
  },
  {
    "text": "however kvm attaches vms tightly and has ring minus a privilege",
    "start": "542959",
    "end": "549760"
  },
  {
    "text": "it means that the attacker can still escape from the vm with the kvm vulnerability and",
    "start": "549760",
    "end": "556560"
  },
  {
    "text": "subvert the system fortunately i was not the only one who",
    "start": "556560",
    "end": "562240"
  },
  {
    "text": "was worried about the excessive privilege of a high provider yeah",
    "start": "562240",
    "end": "567760"
  },
  {
    "text": "there were some researchers and previous workers that were already worried about it",
    "start": "567760",
    "end": "574720"
  },
  {
    "text": "these works are related to tracking hypervisor integrity of our hypervisor",
    "start": "574720",
    "end": "579839"
  },
  {
    "text": "modulator hypersensory hyperguard deepwatch and hypersec",
    "start": "579839",
    "end": "585600"
  },
  {
    "text": "and here are their core architectures because of the time limit i should",
    "start": "585600",
    "end": "590720"
  },
  {
    "text": "explain them freely hypercentric used a system management",
    "start": "590720",
    "end": "596399"
  },
  {
    "text": "mode of formula and baseboard management controller to check the integrity of hypervisor because the attacker could",
    "start": "596399",
    "end": "603680"
  },
  {
    "text": "subvert it hyperguard also used smm to monitor the",
    "start": "603680",
    "end": "609279"
  },
  {
    "text": "integrity of the hypervisor deepwatch was slightly uh different from",
    "start": "609279",
    "end": "614399"
  },
  {
    "text": "others it aimed to detect hypervisor level malware and used an embedded",
    "start": "614399",
    "end": "619680"
  },
  {
    "text": "controller and its formula however it was worried about the excessive privilege of a hypervisor like others",
    "start": "619680",
    "end": "627600"
  },
  {
    "text": "hyperset retrofitted kvm arm to enhance the security of kvm",
    "start": "627600",
    "end": "633760"
  },
  {
    "text": "it aimed to reduce geotech surface of kvm arm as you know formula multiplication",
    "start": "633760",
    "end": "640320"
  },
  {
    "text": "required special devices and signing keys hypervisor retrofit didn't need them but",
    "start": "640320",
    "end": "648160"
  },
  {
    "text": "i didn't want to reinvent the field so i realized that i have i had no",
    "start": "648160",
    "end": "655600"
  },
  {
    "text": "friends like me so i have to find a more more practical",
    "start": "655600",
    "end": "662480"
  },
  {
    "text": "solution after considering various architectures and mechanisms i finally got the",
    "start": "662480",
    "end": "669600"
  },
  {
    "text": "solution however unlike others i don't take a higher ground instead i downgrade",
    "start": "669600",
    "end": "676880"
  },
  {
    "text": "the kvm's privilege to a guest hypervisor and make a center box with my",
    "start": "676880",
    "end": "682720"
  },
  {
    "text": "pico hypervisor hyperbox hyperbox protects host corner and kvm it also",
    "start": "682720",
    "end": "689279"
  },
  {
    "text": "emulates virtual motion extensions or vmx instructions of kvm so escapes can",
    "start": "689279",
    "end": "696079"
  },
  {
    "text": "be prevented like this after getting the solution i named it",
    "start": "696079",
    "end": "701600"
  },
  {
    "text": "alcatraz the rock sensor and the c are mean hyperbox that prevents escapes",
    "start": "701600",
    "end": "709360"
  },
  {
    "text": "the prison means a sandbox that monitors kvm analysis of critical paths of",
    "start": "709360",
    "end": "716720"
  },
  {
    "text": "escape this case here are cves related to",
    "start": "716720",
    "end": "723920"
  },
  {
    "text": "kvm and qnu since 2013. there were more than 200 including code",
    "start": "723920",
    "end": "730800"
  },
  {
    "text": "executions privileges collisions denial of services and",
    "start": "730800",
    "end": "736240"
  },
  {
    "text": "information leaks but i filtered out those and information links because they were not related to",
    "start": "736240",
    "end": "743680"
  },
  {
    "text": "ice caves i'd like to explain them one by one for you however if then you might be",
    "start": "743680",
    "end": "751120"
  },
  {
    "text": "confused unfortunately i and unfortunately i have not enough",
    "start": "751120",
    "end": "756880"
  },
  {
    "text": "time for that so i categorized cves into four parts",
    "start": "756880",
    "end": "763210"
  },
  {
    "text": "[Music] the first one is called execution with a kvm vulnerability",
    "start": "763210",
    "end": "768800"
  },
  {
    "text": "it executes called outside of a vm smart shortcut is used for creating a",
    "start": "768800",
    "end": "775920"
  },
  {
    "text": "load process of a host and escalating privileges",
    "start": "775920",
    "end": "781120"
  },
  {
    "text": "it is also possible to modify color or kvm code but disabling security features",
    "start": "781120",
    "end": "786720"
  },
  {
    "text": "are needed the second one is called execution with a vm software vulnerability it also",
    "start": "786720",
    "end": "793920"
  },
  {
    "text": "executes code outside of a vm a vm software",
    "start": "793920",
    "end": "799120"
  },
  {
    "text": "has lots of code for services and hardware emulations",
    "start": "799120",
    "end": "804160"
  },
  {
    "text": "especially for featured vms like qemu has a large codebase",
    "start": "804160",
    "end": "810399"
  },
  {
    "text": "others have smaller ones but it doesn't mean vulnerability free",
    "start": "810399",
    "end": "816639"
  },
  {
    "text": "summer shortcut is used for creating a user process of a host the third one is privilege escalation",
    "start": "816639",
    "end": "823920"
  },
  {
    "text": "with a kvm vulnerability it elevates the privilege of a vm a vm",
    "start": "823920",
    "end": "831120"
  },
  {
    "text": "is a process and learns in the cast privilege of a host but",
    "start": "831120",
    "end": "836399"
  },
  {
    "text": "in proper handling such as page table interrupts and registers give host",
    "start": "836399",
    "end": "842800"
  },
  {
    "text": "privilege to the vm it is possible to create a load process of a",
    "start": "842800",
    "end": "848959"
  },
  {
    "text": "host and modify color code the last one is local privilege",
    "start": "848959",
    "end": "854160"
  },
  {
    "text": "escalation with a kvm and vm software vulnerability it elevates the privilege",
    "start": "854160",
    "end": "860240"
  },
  {
    "text": "of a local process some kvm vulnerabilities can be exploited through",
    "start": "860240",
    "end": "866959"
  },
  {
    "text": "the kvm and used for escalation some vm software vulnerabilities also",
    "start": "866959",
    "end": "874079"
  },
  {
    "text": "can be used for privilege escalation if the vm or related demons learning soft",
    "start": "874079",
    "end": "880079"
  },
  {
    "text": "loot privilege but vm usually learns in user privilege",
    "start": "880079",
    "end": "885920"
  },
  {
    "text": "first reasons as you know for now let's check the previous works",
    "start": "885920",
    "end": "892240"
  },
  {
    "text": "and where they did focus these are well-known researches",
    "start": "892240",
    "end": "897519"
  },
  {
    "text": "and they concentrate on vm software vulnerabilities",
    "start": "897519",
    "end": "903120"
  },
  {
    "text": "maybe several reasons for that i guess vm software has a huge",
    "start": "903120",
    "end": "908560"
  },
  {
    "text": "code base and user level are more familiar than the corner level",
    "start": "908560",
    "end": "914320"
  },
  {
    "text": "research it means we still have the chance to be a black",
    "start": "914320",
    "end": "919839"
  },
  {
    "text": "speaker with kvm vulnerabilities all right let's summarize four cases for",
    "start": "919839",
    "end": "927440"
  },
  {
    "text": "escapes kvm vulnerabilities can be used for code",
    "start": "927440",
    "end": "932560"
  },
  {
    "text": "execution vm to host privilege escalation and local privilege escalation",
    "start": "932560",
    "end": "938839"
  },
  {
    "text": "right code execution can do vm to host process creation",
    "start": "938839",
    "end": "945040"
  },
  {
    "text": "host corner called modification and host user to root privilege escalation",
    "start": "945040",
    "end": "951839"
  },
  {
    "text": "vm to host previous escalation also can do all three behaviors",
    "start": "951839",
    "end": "958399"
  },
  {
    "text": "local privilege escalation only can do host user through root privilege escalation",
    "start": "958399",
    "end": "964399"
  },
  {
    "text": "in contrast vm software vulnerability can be used for code execution and local",
    "start": "964399",
    "end": "970000"
  },
  {
    "text": "privilege escalation code execution of the vm software vulnerability only can do process",
    "start": "970000",
    "end": "977519"
  },
  {
    "text": "creation because it has a user privilege local",
    "start": "977519",
    "end": "983839"
  },
  {
    "text": "privilege escalation is possible to host privilege escalation",
    "start": "983839",
    "end": "989600"
  },
  {
    "text": "as you know the left side is about a vulnerability disclosure so no one knows",
    "start": "989600",
    "end": "995040"
  },
  {
    "text": "until the vulnerability is revealed or you have to find it before somebody",
    "start": "995040",
    "end": "1000720"
  },
  {
    "text": "exploits it however the right side is a result or",
    "start": "1000720",
    "end": "1006079"
  },
  {
    "text": "aim of exploitation fortunately it has apparent symptoms and",
    "start": "1006079",
    "end": "1012800"
  },
  {
    "text": "we can detect them with monitoring system course yes right i got the answer finally",
    "start": "1012800",
    "end": "1021040"
  },
  {
    "text": "from now i will show you how i design and implement the mechanisms [Music]",
    "start": "1021040",
    "end": "1028000"
  },
  {
    "text": "design and implementation of alcatraz what is alcatraz ecatres is a practical",
    "start": "1028000",
    "end": "1034959"
  },
  {
    "text": "hypervisor sandbox to prevent this case it doesn't need smm",
    "start": "1034959",
    "end": "1040480"
  },
  {
    "text": "or and retrofits of the hypervisor it downgrades kvm's privilege and makes a",
    "start": "1040480",
    "end": "1046880"
  },
  {
    "text": "sandbox with intel vt mac address consists of hyperbox and",
    "start": "1046880",
    "end": "1052000"
  },
  {
    "text": "tailored linux scanner hyperbox is a peak hypervisor made from scratch and",
    "start": "1052000",
    "end": "1057600"
  },
  {
    "text": "has core mechanisms for preventing escapes tailored in scanner has only one system",
    "start": "1057600",
    "end": "1064160"
  },
  {
    "text": "called interface for x64 and the narrowest geotech surface and monitoring",
    "start": "1064160",
    "end": "1070320"
  },
  {
    "text": "points hyperbox makes a center box with the memory",
    "start": "1070320",
    "end": "1075600"
  },
  {
    "text": "and laser protection technique it reverses the extended page table or ept of intel",
    "start": "1075600",
    "end": "1083360"
  },
  {
    "text": "vt if it translates guest physical address to host physical address and can prevent",
    "start": "1083360",
    "end": "1091039"
  },
  {
    "text": "code and read-only data modifications it also protects security related fields",
    "start": "1091039",
    "end": "1096799"
  },
  {
    "text": "of control registers such as light protect of cr0 and supervisor mode",
    "start": "1096799",
    "end": "1104240"
  },
  {
    "text": "execution protection of cr4 hyperbox monitors system cores and",
    "start": "1104240",
    "end": "1109360"
  },
  {
    "text": "prevents unauthorized behaviors it sets hardware break points to the",
    "start": "1109360",
    "end": "1114720"
  },
  {
    "text": "system currently point work exit and credit functions",
    "start": "1114720",
    "end": "1120160"
  },
  {
    "text": "it prevents unusualized behaviors with them hyperbox emulates vmx instructions for",
    "start": "1120160",
    "end": "1128320"
  },
  {
    "text": "nested virtualization it downgrades kvn's privilege to our guest hypervisor so it has to",
    "start": "1128320",
    "end": "1136480"
  },
  {
    "text": "emulate vmx instructions of kvm because ring zero cannot execute them however",
    "start": "1136480",
    "end": "1143520"
  },
  {
    "text": "matrices the methods is a performance overhead hyperbox uses vt features to reduce",
    "start": "1143520",
    "end": "1150320"
  },
  {
    "text": "performance overhead it uses virtual motion control structure or vmcs",
    "start": "1150320",
    "end": "1156559"
  },
  {
    "text": "shadowing vmcs shadowing allows a gas hypervisor to execute vmx instruction",
    "start": "1156559",
    "end": "1162320"
  },
  {
    "text": "direct directly so emulations or interventions are",
    "start": "1162320",
    "end": "1167440"
  },
  {
    "text": "reduced while nested virtualization it also uses a virtual process id or",
    "start": "1167440",
    "end": "1174240"
  },
  {
    "text": "ppid vpid gives unique id to voter cpu and",
    "start": "1174240",
    "end": "1179600"
  },
  {
    "text": "translation leukocyte buffer or tlb vpid prevents tlp flosses when vm access",
    "start": "1179600",
    "end": "1187360"
  },
  {
    "text": "occurs and reduces performance overhead",
    "start": "1187360",
    "end": "1193000"
  },
  {
    "text": "wow i know that the architecture of alcatraz is so complicated and you may feel a",
    "start": "1194240",
    "end": "1201600"
  },
  {
    "text": "little dizzy or confused so i prepared additional slides for you",
    "start": "1201600",
    "end": "1209120"
  },
  {
    "text": "and they are full of diagrams not the text i hope you like it",
    "start": "1209120",
    "end": "1214480"
  },
  {
    "text": "let's move on to the next page this page shows how to prevent and",
    "start": "1214480",
    "end": "1219679"
  },
  {
    "text": "authorize code modification if it is the core of preventing another light's called modification",
    "start": "1219679",
    "end": "1226080"
  },
  {
    "text": "hyperbox makes a center box for the corner and the kvm with intel feed",
    "start": "1226080",
    "end": "1231679"
  },
  {
    "text": "technology it means the corner uses cast logical address and guest physical",
    "start": "1231679",
    "end": "1237200"
  },
  {
    "text": "address not the host address and the guest physical pages are mapped",
    "start": "1237200",
    "end": "1242640"
  },
  {
    "text": "linearly to the host physical pages with evd table the important point is ept",
    "start": "1242640",
    "end": "1249840"
  },
  {
    "text": "table has its own access rights and the hypervisor protects them",
    "start": "1249840",
    "end": "1255679"
  },
  {
    "text": "so if an attacker changes the page table of the sandbox",
    "start": "1255679",
    "end": "1261280"
  },
  {
    "text": "he or she can in fact called page 1 like this however if it still has read-only and",
    "start": "1261280",
    "end": "1269200"
  },
  {
    "text": "executable access light so the code modification attack is prevented",
    "start": "1269200",
    "end": "1275440"
  },
  {
    "text": "this page shows how to prevent unauthorized process creation the stock marks are hardware breakpoints",
    "start": "1275440",
    "end": "1283039"
  },
  {
    "text": "in normal process creation an application or a",
    "start": "1283039",
    "end": "1288320"
  },
  {
    "text": "vm cores4 system core then vm axis occurs",
    "start": "1288320",
    "end": "1294400"
  },
  {
    "text": "at the system entry point because of the hardware breakpoint then hyperbox handles uh the vm exit events and save a",
    "start": "1294400",
    "end": "1302960"
  },
  {
    "text": "system call number with pid it also checks if the privileges of",
    "start": "1302960",
    "end": "1309039"
  },
  {
    "text": "corner and hyper box are the same and reasons system could process",
    "start": "1309039",
    "end": "1315520"
  },
  {
    "text": "the rings corner continues to execute the fork system core and vm exit events",
    "start": "1315520",
    "end": "1320640"
  },
  {
    "text": "occurs again because of the hardware break point hyperbox handles the event and it checks",
    "start": "1320640",
    "end": "1328480"
  },
  {
    "text": "this is the system called number is fork in this case the system called was work",
    "start": "1328480",
    "end": "1335679"
  },
  {
    "text": "so process information is created in hyper box and",
    "start": "1335679",
    "end": "1340799"
  },
  {
    "text": "the corner also creates a process uh this page shows a preventative",
    "start": "1340799",
    "end": "1348640"
  },
  {
    "text": "process creation if the attacker tries to exploit with io",
    "start": "1348640",
    "end": "1354880"
  },
  {
    "text": "controller vmx is occurs and hyperbox save system",
    "start": "1354880",
    "end": "1360159"
  },
  {
    "text": "call number io control with pid then it checks the privileges and resumes the",
    "start": "1360159",
    "end": "1368240"
  },
  {
    "text": "dio control system core while processing io control the attacker",
    "start": "1368240",
    "end": "1373360"
  },
  {
    "text": "hijacks the control flow and cause fork function to escape",
    "start": "1373360",
    "end": "1379520"
  },
  {
    "text": "when fork function is executed vm exit occurs while by the hardware breaker",
    "start": "1379520",
    "end": "1385200"
  },
  {
    "text": "point and hyperbox checks the sabred seasonal number",
    "start": "1385200",
    "end": "1391600"
  },
  {
    "text": "as you know the second number was io controller not fork so the escape is",
    "start": "1391600",
    "end": "1396640"
  },
  {
    "text": "detected and prevented this page also shows preventing unusualized process creation but in this",
    "start": "1396640",
    "end": "1404080"
  },
  {
    "text": "case i assume that the attacker detoured my checkpoints and created a malicious",
    "start": "1404080",
    "end": "1410480"
  },
  {
    "text": "process successfully but as you know the system is the air",
    "start": "1410480",
    "end": "1416320"
  },
  {
    "text": "for applications and there is no exception for malware",
    "start": "1416320",
    "end": "1421600"
  },
  {
    "text": "random malware pid 102 occurs socket or some other system cores",
    "start": "1421600",
    "end": "1428320"
  },
  {
    "text": "hyperbox intercepts it through vm exit then it finds out that",
    "start": "1428320",
    "end": "1436480"
  },
  {
    "text": "it doesn't have information about pid 102 because moderator detoured the",
    "start": "1436480",
    "end": "1441840"
  },
  {
    "text": "hardware breakpoint so this case is also prevented",
    "start": "1441840",
    "end": "1448240"
  },
  {
    "text": "this is an additional page about a preventing process creation this page",
    "start": "1448240",
    "end": "1453279"
  },
  {
    "text": "has only guide information so please check it with my presentation file later",
    "start": "1453279",
    "end": "1460880"
  },
  {
    "text": "from now i will show you how to prevent an authorized privilege escalation",
    "start": "1460880",
    "end": "1466799"
  },
  {
    "text": "in normal case an application or a vm vm cores",
    "start": "1466799",
    "end": "1472880"
  },
  {
    "text": "senuid or related system cores to change privilege",
    "start": "1472880",
    "end": "1478320"
  },
  {
    "text": "then vm exit occurs and hyperbox saves the standard number with pid",
    "start": "1478320",
    "end": "1485279"
  },
  {
    "text": "compares probabilities and resumes the system core",
    "start": "1485279",
    "end": "1490400"
  },
  {
    "text": "while processing nu id commit class function is called",
    "start": "1490400",
    "end": "1495919"
  },
  {
    "text": "vm access occurs again after that hyperbox checks if the system call number is previously related and",
    "start": "1495919",
    "end": "1505679"
  },
  {
    "text": "it updates effective uid in it and resumes then the suspended system core",
    "start": "1505679",
    "end": "1513360"
  },
  {
    "text": "is resumed and update effective uid",
    "start": "1513360",
    "end": "1518640"
  },
  {
    "text": "this is normal case and there is no abnormal behaviors",
    "start": "1518640",
    "end": "1524159"
  },
  {
    "text": "in this case the attacker tries to exploit and escalate privilege",
    "start": "1524159",
    "end": "1530720"
  },
  {
    "text": "the attacker calls io controller to exploit then vmaxis occurs and hyperbox saves io",
    "start": "1530720",
    "end": "1538000"
  },
  {
    "text": "control with pid compares privileges and resumes the",
    "start": "1538000",
    "end": "1543039"
  },
  {
    "text": "system core while processing io control the attacker",
    "start": "1543039",
    "end": "1548159"
  },
  {
    "text": "hijacks the control flow and executes comic class function or for",
    "start": "1548159",
    "end": "1554080"
  },
  {
    "text": "previous escalation then vmx is occurred again and hyperbox",
    "start": "1554080",
    "end": "1560240"
  },
  {
    "text": "checks to save the system call number the number was io controller not senior",
    "start": "1560240",
    "end": "1565760"
  },
  {
    "text": "id or related system force so the escape is prevented",
    "start": "1565760",
    "end": "1571679"
  },
  {
    "text": "as i mentioned before my checkpoints can be detoured and the attacker can get",
    "start": "1571679",
    "end": "1577360"
  },
  {
    "text": "loot privilege successfully however",
    "start": "1577360",
    "end": "1582720"
  },
  {
    "text": "hyperbox has all process information and can detect and prevent it",
    "start": "1582720",
    "end": "1589360"
  },
  {
    "text": "when the malware pid 101 calls socket or summary system cores",
    "start": "1589360",
    "end": "1595520"
  },
  {
    "text": "hyperbox handles it with vmax it then it checks privileges and",
    "start": "1595520",
    "end": "1603120"
  },
  {
    "text": "finds the the abnormal privilege escalation like this",
    "start": "1603120",
    "end": "1609039"
  },
  {
    "text": "from this page i would like to show you a nested virtualization feature",
    "start": "1609120",
    "end": "1614480"
  },
  {
    "text": "without hyperbox kvm can do anything related to vms like creating vmcs vlogs",
    "start": "1614480",
    "end": "1622000"
  },
  {
    "text": "or and executing vmx instructions and so on so when kvm executes vmx on",
    "start": "1622000",
    "end": "1629919"
  },
  {
    "text": "the privilege of the corner and kvn changes to ring -1",
    "start": "1629919",
    "end": "1634960"
  },
  {
    "text": "then kvm executes vmx instructions to create vmcs connecting with vm1",
    "start": "1634960",
    "end": "1643520"
  },
  {
    "text": "when vmx is occurs from vm1 kvm handles it",
    "start": "1643520",
    "end": "1650720"
  },
  {
    "text": "yeah vm2 is the same it's very simple and clear right",
    "start": "1651039",
    "end": "1657840"
  },
  {
    "text": "the problem starts here hyperbox starts ahead of kvm and makes a",
    "start": "1657840",
    "end": "1663840"
  },
  {
    "text": "sandbox with vmcs 0 for the corner and the kvm from now vmcs0 controls corner",
    "start": "1663840",
    "end": "1671279"
  },
  {
    "text": "and kvn and the host machine works like guest machine because of it the",
    "start": "1671279",
    "end": "1677600"
  },
  {
    "text": "privilege of kvm is also downgraded to ring zero and kvm can't execute vmx",
    "start": "1677600",
    "end": "1684720"
  },
  {
    "text": "instructions directly when kvm executes vmx on",
    "start": "1684720",
    "end": "1690880"
  },
  {
    "text": "vm access occurs and hyperbox handles it instead after resuming the sandbox kvm executes",
    "start": "1690880",
    "end": "1698320"
  },
  {
    "text": "vmx instructions to create vm1 and hyperbox emulates all vmx instructions",
    "start": "1698320",
    "end": "1704640"
  },
  {
    "text": "with vm exit then on vm1",
    "start": "1704640",
    "end": "1710640"
  },
  {
    "text": "vm2 is the same the key point is that hyperbox hooks a",
    "start": "1710640",
    "end": "1715919"
  },
  {
    "text": "vm hall start ip and rsp to hyperboxes once i'm going to tell you",
    "start": "1715919",
    "end": "1723279"
  },
  {
    "text": "the reason on the next page when vm access occurs the event is",
    "start": "1723279",
    "end": "1729840"
  },
  {
    "text": "handled by hyperbox because vm hosts rip and rsp were hooked by it",
    "start": "1729840",
    "end": "1737360"
  },
  {
    "text": "then hyperbox retrieves original rsv and rip",
    "start": "1737360",
    "end": "1742480"
  },
  {
    "text": "from the data list and changes vmcs 0's guest rip and rsp",
    "start": "1742480",
    "end": "1750240"
  },
  {
    "text": "finally hyperbox learns a center box with vmcs 0 and kvm's vmx the handler",
    "start": "1750240",
    "end": "1757120"
  },
  {
    "text": "handles dband of vm2 this is the reason why i hooked host rip",
    "start": "1757120",
    "end": "1762720"
  },
  {
    "text": "and rsp as you know the center box is made by hyperbox",
    "start": "1762720",
    "end": "1767840"
  },
  {
    "text": "uh if vm2's vm exit event goes to kvm directly the center box is unavailable",
    "start": "1767840",
    "end": "1775520"
  },
  {
    "text": "so all vm access exits have to be handled the hyperbox",
    "start": "1775520",
    "end": "1782000"
  },
  {
    "text": "first and then hyperbox has to run the center box",
    "start": "1782000",
    "end": "1787519"
  },
  {
    "text": "but the mechanisms has a problem",
    "start": "1787840",
    "end": "1793120"
  },
  {
    "text": "that is performance overhead let's see what happened while vmx instructions are executed",
    "start": "1793120",
    "end": "1799679"
  },
  {
    "text": "whenever vm kvm learns then hyperbox intercepts them",
    "start": "1799679",
    "end": "1805520"
  },
  {
    "text": "and tlb is flushed and here is the burst period",
    "start": "1805520",
    "end": "1811919"
  },
  {
    "text": "to handle a vm vm read and vm write are frequently needed",
    "start": "1811919",
    "end": "1817520"
  },
  {
    "text": "after that rpm runs and this flows is limited until the vm shuts",
    "start": "1817520",
    "end": "1823520"
  },
  {
    "text": "down however this overhead can be reduced by",
    "start": "1823520",
    "end": "1829279"
  },
  {
    "text": "enabling vmcs shadowing and vpid features after enabling them there is no tlb",
    "start": "1829279",
    "end": "1836480"
  },
  {
    "text": "flashing when vm exit occurs and if vmcs link vtr is set like this",
    "start": "1836480",
    "end": "1843840"
  },
  {
    "text": "there is no burst period and others are the same as previous",
    "start": "1843840",
    "end": "1851840"
  },
  {
    "text": "wow it's really amazing right the only differences are ppid value and",
    "start": "1852480",
    "end": "1859840"
  },
  {
    "text": "vmcs link ptr value they make hyperbox more complicated",
    "start": "1859840",
    "end": "1866720"
  },
  {
    "text": "complicated or sorry complicated uh but it is worth using them",
    "start": "1866720",
    "end": "1873200"
  },
  {
    "text": "i implemented extras following the design hyperbox is a lot of kernel modules so it can be loaded any time",
    "start": "1873200",
    "end": "1880880"
  },
  {
    "text": "before you start vms tailored linux kernel is just a recompiled",
    "start": "1880880",
    "end": "1886399"
  },
  {
    "text": "version and i removed some options so there is no",
    "start": "1886399",
    "end": "1891440"
  },
  {
    "text": "system core interface for legacies",
    "start": "1891440",
    "end": "1896000"
  },
  {
    "text": "evaluations and demo for benchmarks i prepared the server environment like",
    "start": "1896559",
    "end": "1903519"
  },
  {
    "text": "this this is a micro benchmark result the values are normalized",
    "start": "1903519",
    "end": "1910720"
  },
  {
    "text": "and they are various from 1.27 to",
    "start": "1910720",
    "end": "1917200"
  },
  {
    "text": "8.1 it looks like performance overhead is so",
    "start": "1917519",
    "end": "1924480"
  },
  {
    "text": "high but it is natural because this is just a micro benchmark and",
    "start": "1924480",
    "end": "1932320"
  },
  {
    "text": "hyperbox intercepts or system cores let's see the real-world benchmark",
    "start": "1932320",
    "end": "1939440"
  },
  {
    "text": "this result shows a color compare benchmark the values are",
    "start": "1939679",
    "end": "1946720"
  },
  {
    "text": "also normalized or ecotrade although ecatras has about",
    "start": "1946720",
    "end": "1951799"
  },
  {
    "text": "800 percent overhead in the micro benchmark however it has only",
    "start": "1951799",
    "end": "1958320"
  },
  {
    "text": "10 overhead in the corner compilation benchmark and",
    "start": "1958320",
    "end": "1963919"
  },
  {
    "text": "in the case of a cast machine it has only one percent overhead so i can say",
    "start": "1963919",
    "end": "1970799"
  },
  {
    "text": "it has reasonable overhead all right demo time",
    "start": "1970799",
    "end": "1976720"
  },
  {
    "text": "i prepared a short demo for you",
    "start": "1976720",
    "end": "1980720"
  },
  {
    "text": "the first case is an escape from a kvm vulnerability the operating system is open to 20.4 and",
    "start": "1985039",
    "end": "1992559"
  },
  {
    "text": "the control version is 5.8.18.",
    "start": "1992559",
    "end": "1996600"
  },
  {
    "text": "monitoring system loads",
    "start": "1999440",
    "end": "2003480"
  },
  {
    "text": "and starting is operative vm",
    "start": "2005519",
    "end": "2010880"
  },
  {
    "text": "the attacker is trying to exploit and backdoor is open",
    "start": "2015440",
    "end": "2022399"
  },
  {
    "text": "the attacker got loot like this",
    "start": "2026240",
    "end": "2031480"
  },
  {
    "text": "all right let's start extras",
    "start": "2036320",
    "end": "2040840"
  },
  {
    "text": "and starting i separated vm again",
    "start": "2047200",
    "end": "2052639"
  },
  {
    "text": "the article is trying to exploit but alcatraz prevented it",
    "start": "2053760",
    "end": "2060320"
  },
  {
    "text": "there is no response from the shell",
    "start": "2060320",
    "end": "2064720"
  },
  {
    "text": "the second case is an escape from vm software vulnerability",
    "start": "2066000",
    "end": "2071919"
  },
  {
    "text": "monitoring logs starting a separated vm",
    "start": "2071919",
    "end": "2078720"
  },
  {
    "text": "attacker is trying to exploit yeah factory is opened",
    "start": "2081599",
    "end": "2089240"
  },
  {
    "text": "the attacker cut user privilege",
    "start": "2092320",
    "end": "2098000"
  },
  {
    "text": "like this let's start echo trace",
    "start": "2098000",
    "end": "2105359"
  },
  {
    "text": "starting the separated vm again the attacker is trying to exploit again",
    "start": "2109520",
    "end": "2117359"
  },
  {
    "text": "and then",
    "start": "2117359",
    "end": "2119838"
  },
  {
    "text": "alcatraz prevented it there is no response",
    "start": "2122400",
    "end": "2129320"
  },
  {
    "text": "like this the last one is privilege escalation",
    "start": "2132880",
    "end": "2139760"
  },
  {
    "text": "with a kvm vulnerability monitoring system logs",
    "start": "2139760",
    "end": "2147838"
  },
  {
    "text": "starting as opportunity and",
    "start": "2148640",
    "end": "2152960"
  },
  {
    "text": "qem new has a user level",
    "start": "2154000",
    "end": "2158760"
  },
  {
    "text": "but now because of the exploit qm has loot",
    "start": "2170560",
    "end": "2178160"
  },
  {
    "text": "let's start the echo dress",
    "start": "2183760",
    "end": "2187640"
  },
  {
    "text": "starting the separate vm again",
    "start": "2192480",
    "end": "2196240"
  },
  {
    "text": "the attacker is trying to exploit then",
    "start": "2199280",
    "end": "2205680"
  },
  {
    "text": "yeah i could rest prevented it like this",
    "start": "2205839",
    "end": "2213160"
  },
  {
    "text": "conclusion and black sound divide firstly container",
    "start": "2216079",
    "end": "2221839"
  },
  {
    "text": "containers vms and micro vms suffer from escapes the hypervisor can provide strong",
    "start": "2221839",
    "end": "2228640"
  },
  {
    "text": "isolation but it has the excessive privilege and connects with vms tightly",
    "start": "2228640",
    "end": "2235440"
  },
  {
    "text": "secondly taking a higher ground is not always the answer",
    "start": "2235440",
    "end": "2241119"
  },
  {
    "text": "the higher privilege we get the more constraints we have lastly",
    "start": "2241119",
    "end": "2247599"
  },
  {
    "text": "ecatras is a practical hypervisor center box to prevent escapes it downgrades kvm's",
    "start": "2247599",
    "end": "2255200"
  },
  {
    "text": "privilege and makers and bugs it also has reasonable overhead so",
    "start": "2255200",
    "end": "2260400"
  },
  {
    "text": "please try it alright this is the last page of my presentation",
    "start": "2260400",
    "end": "2268160"
  },
  {
    "text": "as you know there was a skill researcher and nothing has changed except he became a speaker",
    "start": "2268160",
    "end": "2274800"
  },
  {
    "text": "at black usa oh i heard one thing",
    "start": "2274800",
    "end": "2280480"
  },
  {
    "text": "that he moved to another place near the ceo because he became a senior skate",
    "start": "2280480",
    "end": "2286320"
  },
  {
    "text": "researcher well here are my first link and in my other",
    "start": "2286320",
    "end": "2291760"
  },
  {
    "text": "address uh so source code source code and demos are in the link",
    "start": "2291760",
    "end": "2298640"
  },
  {
    "text": "and if you have any questions please contact me with them thank you for listening and thank you",
    "start": "2298640",
    "end": "2304720"
  },
  {
    "text": "for your precious time",
    "start": "2304720",
    "end": "2308520"
  }
]