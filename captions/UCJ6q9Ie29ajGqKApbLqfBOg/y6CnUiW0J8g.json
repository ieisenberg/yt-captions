[
  {
    "text": "so this is now fees so today we're gonna see how I can use JavaScript's inbuilt",
    "start": "30",
    "end": "7799"
  },
  {
    "text": "inherent security features to attack its own security implementations and bypass",
    "start": "7799",
    "end": "15269"
  },
  {
    "text": "a few restrictions right so just to check how many of you here are like",
    "start": "15269",
    "end": "20970"
  },
  {
    "text": "JavaScript developers have developed web applications as in JavaScript all right",
    "start": "20970",
    "end": "26939"
  },
  {
    "text": "so so yeah this is how today's agenda is",
    "start": "26939",
    "end": "33450"
  },
  {
    "text": "going to look like we will start with why javascript is all important and we will talk specifically about the objects",
    "start": "33450",
    "end": "40170"
  },
  {
    "text": "and what the javascript standard has to talk about it the ACMA script 5 standards which came",
    "start": "40170",
    "end": "46649"
  },
  {
    "text": "up very recently and then we will talk about a certain design pattern and then",
    "start": "46649",
    "end": "51870"
  },
  {
    "text": "we will take a specific example a library called OSC as part of God and we'll talk about how to find these kind",
    "start": "51870",
    "end": "59190"
  },
  {
    "text": "of vulnerabilities going forward in your penetration testing so how you can as a developer try to try and fix them so",
    "start": "59190",
    "end": "66630"
  },
  {
    "text": "just setting the expectations as I said it's about trying to attack",
    "start": "66630",
    "end": "72380"
  },
  {
    "text": "implementations in JavaScript and the overseer set up that story and again another thing called Dom problem has any",
    "start": "72380",
    "end": "79860"
  },
  {
    "text": "of you heard about DOM clobbering before all right so that's good and this is not",
    "start": "79860",
    "end": "86400"
  },
  {
    "text": "about the regular cross-site scripting or what a cross-site request forgery attack or the usual stuff you hear in a",
    "start": "86400",
    "end": "92130"
  },
  {
    "text": "JavaScript security context which is like do not use global variables stuff",
    "start": "92130",
    "end": "97560"
  },
  {
    "text": "like that so Who am I as I said no fees so I work as a security engineer for",
    "start": "97560",
    "end": "104159"
  },
  {
    "text": "Citrix in Bangalore I have some interest in web and networks specifically in the",
    "start": "104159",
    "end": "110520"
  },
  {
    "text": "client side part of it I believe that you know defending and building secure systems are much harder than attacking",
    "start": "110520",
    "end": "116670"
  },
  {
    "text": "because you know in the first place you need to attack before you go ahead and",
    "start": "116670",
    "end": "122090"
  },
  {
    "text": "defend them or build them properly and this stuff does not represent any of my",
    "start": "122090",
    "end": "127110"
  },
  {
    "text": "employers opinions ok so javascript javascript is something",
    "start": "127110",
    "end": "133080"
  },
  {
    "text": "which is everywhere all the mobile phones that you use all the devices that we see it's",
    "start": "133080",
    "end": "138770"
  },
  {
    "text": "as long as you have a browser it's the only way to script the browser so it's out there and it is becoming more",
    "start": "138770",
    "end": "145730"
  },
  {
    "text": "relevant as we go forward right so do anyone Fe know about the mean stack heard of the main stack any",
    "start": "145730",
    "end": "151670"
  },
  {
    "text": "developers right so mean stack is a complete web application stack where you",
    "start": "151670",
    "end": "157400"
  },
  {
    "text": "can build a web application using javascript only so if you have heard about MongoDB",
    "start": "157400",
    "end": "163850"
  },
  {
    "text": "it's the database it's a no sequel database which completely works you interface it using javascript so that's",
    "start": "163850",
    "end": "171260"
  },
  {
    "text": "the M in the mean and Express Express layers is an odious web server written",
    "start": "171260",
    "end": "177440"
  },
  {
    "text": "by TJ Holloway check if you know him so it's a very famous webserver framework",
    "start": "177440",
    "end": "182480"
  },
  {
    "text": "in node.js which is again based sort of JavaScript and then you have the angular JS which is a client-side MVC framework",
    "start": "182480",
    "end": "189200"
  },
  {
    "text": "by Google and then you have the node.js again which is the server-side JavaScript platform that's pretty",
    "start": "189200",
    "end": "197450"
  },
  {
    "text": "amazing like so you just learn one language and you can write a complete web stack which is not not the case which we used to have before yeah so",
    "start": "197450",
    "end": "207760"
  },
  {
    "text": "just a little bit of JavaScript primer javascript is fundamentally a very",
    "start": "207760",
    "end": "213500"
  },
  {
    "text": "dynamic language everything is loosely typed it's very flexible you can do a lot of things which you cannot do in",
    "start": "213500",
    "end": "218570"
  },
  {
    "text": "other languages because of the amount of flexibility that it provides to you it can go a little bit deeper and change",
    "start": "218570",
    "end": "224150"
  },
  {
    "text": "the original implementations which is part of what we will talk about today and which is completely object based",
    "start": "224150",
    "end": "229940"
  },
  {
    "text": "everything is created as an object and and of course citizen of functions are",
    "start": "229940",
    "end": "235760"
  },
  {
    "text": "first class citizens in the sense like your functions can also act as a variable which indeed is a object so",
    "start": "235760",
    "end": "241630"
  },
  {
    "text": "when we talk about objects we have two different types of them so it's the",
    "start": "241630",
    "end": "246980"
  },
  {
    "text": "native objects so the native objects are the ones which are provided by the Java",
    "start": "246980",
    "end": "253340"
  },
  {
    "text": "scripts specifications itself right something like your primitive types like",
    "start": "253340",
    "end": "258709"
  },
  {
    "text": "the number array and even the object so this object over there is the mother of all objects in JavaScript so you can",
    "start": "258709",
    "end": "265280"
  },
  {
    "text": "inherit everything else from there is four assemble this array object this is a native object can be inherited from the",
    "start": "265280",
    "end": "271870"
  },
  {
    "text": "main object and then you have something which is the host objects so this is",
    "start": "271870",
    "end": "278260"
  },
  {
    "text": "something which we need to really understand before we try to take a look at how the different JavaScript",
    "start": "278260",
    "end": "283480"
  },
  {
    "text": "implementations work so as it would be very obvious from the name itself host objects are something which you normally",
    "start": "283480",
    "end": "290620"
  },
  {
    "text": "use to interface your JavaScript engine with your platform for example most of",
    "start": "290620",
    "end": "300250"
  },
  {
    "text": "you would be aware of the v8 JavaScript engine by Google you interface that with",
    "start": "300250",
    "end": "306370"
  },
  {
    "text": "the browser using the Dom host object and you have a complete Java Script working environment you interface the",
    "start": "306370",
    "end": "312460"
  },
  {
    "text": "same thing with the v8 engine with libye or invented i/o and all that and you",
    "start": "312460",
    "end": "318910"
  },
  {
    "text": "have no J's right so for the browsers your host objects or the Dom which is a",
    "start": "318910",
    "end": "325090"
  },
  {
    "text": "document object model and for things like nodejs or other platforms whatever your JavaScript implementation",
    "start": "325090",
    "end": "331930"
  },
  {
    "text": "doesn't give by default you just implement it is it using the host object so for no J's well it's going to be the",
    "start": "331930",
    "end": "337510"
  },
  {
    "text": "high C D P DNS TCP all these protocols okay so let's shift gears a little bit",
    "start": "337510",
    "end": "344920"
  },
  {
    "text": "and try and see ACMA script so ECMO",
    "start": "344920",
    "end": "350500"
  },
  {
    "text": "script it's it's another name for JavaScript there there's been a whole lot of you know philosophy and",
    "start": "350500",
    "end": "355780"
  },
  {
    "text": "historically a lot of political reasons involved behind the names of JavaScript and Eggman script but the standard name",
    "start": "355780",
    "end": "362500"
  },
  {
    "text": "according to the specification is ACMA script so if you want to implement a JavaScript engine or parcel you",
    "start": "362500",
    "end": "368890"
  },
  {
    "text": "basically go and look at the ACMA script definitions right so currently all the browser's are complying with the ACMA",
    "start": "368890",
    "end": "375460"
  },
  {
    "text": "script five specifications and echo script five specifications they gave few",
    "start": "375460",
    "end": "382350"
  },
  {
    "text": "few additions to how an object would actually be treated right so if you have",
    "start": "382350",
    "end": "390040"
  },
  {
    "text": "an object say a point so this is in the JavaScript world this is how you define an object you have a point and you have",
    "start": "390040",
    "end": "396220"
  },
  {
    "text": "a as a property and its values one be a propagating ideas too so if they have a",
    "start": "396220",
    "end": "403340"
  },
  {
    "text": "if you have an object how can you tamper proof it so one of the editions of",
    "start": "403340",
    "end": "409480"
  },
  {
    "text": "Maastricht 5 is something on this object or defined property so you can basically",
    "start": "409480",
    "end": "414770"
  },
  {
    "text": "take an object and its property and define whatever you want whatever it's get around center wants to do so if",
    "start": "414770",
    "end": "420620"
  },
  {
    "text": "you've been using javascript for quite some time you already know about getters and setters it's pretty famous in JavaScript shows its power as well but",
    "start": "420620",
    "end": "427130"
  },
  {
    "text": "nowadays you use you do them using the object or define property as a standard so this specific function over here",
    "start": "427130",
    "end": "433840"
  },
  {
    "text": "tries to have an object point and have its property a and whenever you call the",
    "start": "433840",
    "end": "439310"
  },
  {
    "text": "getter of it which is to say point out a is the cater of this object it always returns some value which you define so",
    "start": "439310",
    "end": "446840"
  },
  {
    "text": "even if you said something like Oh point dot a is equal to 200 it's whenever you",
    "start": "446840",
    "end": "452570"
  },
  {
    "text": "ask for pointer day the Gator is always going to return you the always fake value so ok now how can you lock it down",
    "start": "452570",
    "end": "462160"
  },
  {
    "text": "there is something known as object or prevent extensions so if you give a if",
    "start": "462160",
    "end": "468080"
  },
  {
    "text": "you do prevent extension on an object it's basically going to make sure that you cannot set another property or add",
    "start": "468080",
    "end": "475670"
  },
  {
    "text": "anything it's step or extend something to it so if you say point or Co point or D and try to say that it's not going to",
    "start": "475670",
    "end": "481820"
  },
  {
    "text": "work you'll see all these implementations in curve quite a bit so object or C again is whatever your",
    "start": "481820",
    "end": "490340"
  },
  {
    "text": "object dot provide extensions would do in addition you cannot delete something else so for example if you have pointed",
    "start": "490340",
    "end": "496250"
  },
  {
    "text": "a already being defined you cannot go and say delete point on a which which wouldn't do it which wouldn't allow you",
    "start": "496250",
    "end": "501950"
  },
  {
    "text": "to do it so and again object dot freeze this is the last one of the ACMA script five properties that we're going to see",
    "start": "501950",
    "end": "507770"
  },
  {
    "text": "today so object dot freeze does everything what object dot sealed us in",
    "start": "507770",
    "end": "513500"
  },
  {
    "text": "addition it tries to make sure that you cannot change the property of existing",
    "start": "513500",
    "end": "518919"
  },
  {
    "text": "you cannot change the value of the existing properties right so if you have 0.08 set to some 500 and you cannot",
    "start": "518919",
    "end": "526040"
  },
  {
    "text": "allow someone else to change the value so all these have different different use cases depending upon the way you",
    "start": "526040",
    "end": "532460"
  },
  {
    "text": "implement your JavaScript client-side for example in a browser",
    "start": "532460",
    "end": "537680"
  },
  {
    "text": "right so if you're if you're a jQuery you would basically go and say I would define something I know it'd make sure",
    "start": "537680",
    "end": "543589"
  },
  {
    "text": "that it's being frozen object dot freeze of let's say array dot prototype and nobody would be able to change that",
    "start": "543589",
    "end": "550130"
  },
  {
    "text": "array dot prototype implementation so that throughout the code your array dot prototype is going to remain the same",
    "start": "550130",
    "end": "555980"
  },
  {
    "text": "you know in a sense to say even if you load let's say some other library you",
    "start": "555980",
    "end": "561440"
  },
  {
    "text": "have jQuery and some of the library loaded again after that that is not going to redefine what what you had from",
    "start": "561440",
    "end": "567399"
  },
  {
    "text": "object what you had from jQuery right so it's it's a very legitimate use case that you want to use it for so let's",
    "start": "567399",
    "end": "575029"
  },
  {
    "text": "take a look at it how things go so let's say we have a point I'm just going to run through the examples again just to",
    "start": "575029",
    "end": "580490"
  },
  {
    "text": "show how it really works just bear with me so we have this point which has the",
    "start": "580490",
    "end": "590149"
  },
  {
    "text": "object in want so let's try and say object or define property of they want",
    "start": "590149",
    "end": "599600"
  },
  {
    "text": "to say I want to do the point and want to redefine the Gator off let's say the",
    "start": "599600",
    "end": "606860"
  },
  {
    "text": "property be a property a now it's say something like this",
    "start": "606860",
    "end": "612699"
  },
  {
    "text": "okay so even though we had points so",
    "start": "623490",
    "end": "630829"
  },
  {
    "text": "whatever you say point dots let's say point out is 33 even if you say point out is four you're still going to 44 you",
    "start": "630829",
    "end": "639720"
  },
  {
    "text": "is still going to get point or a as 33 so even though internally your point",
    "start": "639720",
    "end": "645089"
  },
  {
    "text": "naught is defined as something else you try to set set it to something else you",
    "start": "645089",
    "end": "651420"
  },
  {
    "text": "get to make sure that it's redefined to something else similarly you can do it for setters as",
    "start": "651420",
    "end": "656699"
  },
  {
    "text": "well you can change the way something is being said if someone tries to set a value for something you can always keep",
    "start": "656699",
    "end": "662279"
  },
  {
    "text": "changing that right so again object or prevent extensions will make sure that",
    "start": "662279",
    "end": "669629"
  },
  {
    "text": "you cannot add something so for example if this is your point you cannot make",
    "start": "669629",
    "end": "676139"
  },
  {
    "text": "sure you can make sure that point at C is not being set so all right doesn't",
    "start": "676139",
    "end": "681689"
  },
  {
    "text": "it's it's no point it's I know we can do something like object dot seal which if",
    "start": "681689",
    "end": "687119"
  },
  {
    "text": "you remember we can try to add we make we can make sure that you cannot delete something so if it's a delete point B",
    "start": "687119",
    "end": "698699"
  },
  {
    "text": "it's not going to work your B is still going to be set now just showing you so",
    "start": "698699",
    "end": "704040"
  },
  {
    "text": "that you know just be clear with it most of you have sometimes already be aware of it and you've used it so is there",
    "start": "704040",
    "end": "709529"
  },
  {
    "text": "anyone who have already used this in your programs or aware of it oh that's",
    "start": "709529",
    "end": "714569"
  },
  {
    "text": "great so again let's see object dot freeze for the last time we can go and",
    "start": "714569",
    "end": "721649"
  },
  {
    "text": "say I want to freeze the point object so no one can basically change so my value",
    "start": "721649",
    "end": "727259"
  },
  {
    "text": "of point not B is two if I say when it B is 40 for your point or B still remains the same no there is a fundamental",
    "start": "727259",
    "end": "734009"
  },
  {
    "text": "difference between this and the way we saw object or defined property define property changes the value which is",
    "start": "734009",
    "end": "739769"
  },
  {
    "text": "being shown to the console right which when you do a Gator it changes the value",
    "start": "739769",
    "end": "744899"
  },
  {
    "text": "but here it's not even allowing you to change the value right so there is a fun so the the internal implementation of",
    "start": "744899",
    "end": "752669"
  },
  {
    "text": "the variable still remains the same in the case of object or freeze but in the other case it just get us just",
    "start": "752669",
    "end": "759360"
  },
  {
    "text": "change it okay so enough of that let's come back to what we've been talking",
    "start": "759360",
    "end": "764820"
  },
  {
    "text": "about so with that being said let's shift here again and you know we'll just",
    "start": "764820",
    "end": "771420"
  },
  {
    "text": "merge these three things and come to a come to where we want to so the",
    "start": "771420",
    "end": "777390"
  },
  {
    "text": "principle of unobtrusive javascript so it's it's a pretty fancy name but most of you be already using this pattern",
    "start": "777390",
    "end": "782940"
  },
  {
    "text": "it's a design pattern on the client side and you want to say that you don't want to mix your design and your behavior",
    "start": "782940",
    "end": "790350"
  },
  {
    "text": "right so normally if you're going to do a in hand you know on inline event",
    "start": "790350",
    "end": "796440"
  },
  {
    "text": "handler you're going to say but an on-click equal to a lot of something like that instead you would basically",
    "start": "796440",
    "end": "802140"
  },
  {
    "text": "say just define the presentation and make your behavior everything inside",
    "start": "802140",
    "end": "808580"
  },
  {
    "text": "which is which is scriptable so you just add event listener just like this so you",
    "start": "808580",
    "end": "813930"
  },
  {
    "text": "have an event listener on click which you would do the stuff for you so that this is this is a pretty common standard",
    "start": "813930",
    "end": "820920"
  },
  {
    "text": "or design which is being suggested by all developers even for performance reason and even the security guys would",
    "start": "820920",
    "end": "827280"
  },
  {
    "text": "suggest you that because imagine one of the one of the biggest problems that",
    "start": "827280",
    "end": "833460"
  },
  {
    "text": "been haunting us for the past decade is cross-site scripting right so people have been trying to mitigate this in",
    "start": "833460",
    "end": "839010"
  },
  {
    "text": "various different ways try to bring in different mitigation strategies in coding libraries but still developers do",
    "start": "839010",
    "end": "845670"
  },
  {
    "text": "make mistakes so this is one of the design patterns people suggest so that you know you can reduce such mistakes",
    "start": "845670",
    "end": "851880"
  },
  {
    "text": "how about you have a completely static HTML page right and you do your dynamic",
    "start": "851880",
    "end": "857010"
  },
  {
    "text": "data or JavaScript and you need to make sure you filter your data only at the JavaScript level only on the client side",
    "start": "857010",
    "end": "863760"
  },
  {
    "text": "so so that all your stuff is being done all your dynamic data which is the root",
    "start": "863760",
    "end": "868830"
  },
  {
    "text": "cause of cross-site scripting it's going to come from until unless it's a persistent cross it scripting by the way it's going to come from you know your",
    "start": "868830",
    "end": "875670"
  },
  {
    "text": "reflected standard vanilla HSS is going to come from and it's going to only come from an xhr or JSON request in this in",
    "start": "875670",
    "end": "882690"
  },
  {
    "text": "this case and you can filter all of them at that level so again if you have heard",
    "start": "882690",
    "end": "887940"
  },
  {
    "text": "of corn and security policy it's it's basically one of the defense mitigations defense against",
    "start": "887940",
    "end": "894870"
  },
  {
    "text": "cross-site scripting one of the main use cases of that is to make sure that you code in such a way and use these these",
    "start": "894870",
    "end": "901340"
  },
  {
    "text": "standards of you know doing your client side code so that you're you are less",
    "start": "901340",
    "end": "909480"
  },
  {
    "text": "vulnerable to cross-site scripting attacks and this even suggests you that so why am I talking about all this",
    "start": "909480",
    "end": "914970"
  },
  {
    "text": "because this principle is something which is used you know you just want to do it from from a security point of view",
    "start": "914970",
    "end": "921330"
  },
  {
    "text": "and that would cost few problems I'll come to that so now we have a change in",
    "start": "921330",
    "end": "927780"
  },
  {
    "text": "the tradition if you have been into performance you'll be already knowing that you normally cache a javascript",
    "start": "927780",
    "end": "934440"
  },
  {
    "text": "file and leave the HTML pages alone right now it's going to change you're going to cache your high stable pages",
    "start": "934440",
    "end": "940050"
  },
  {
    "text": "and you're going to leave alone your JavaScript files because they're going to be dynamic depending upon the current",
    "start": "940050",
    "end": "945120"
  },
  {
    "text": "user or the current session interesting now with that being said if you think",
    "start": "945120",
    "end": "951090"
  },
  {
    "text": "about security where do you put your dynamic things or your secret artifacts so let's think about the problem of",
    "start": "951090",
    "end": "958080"
  },
  {
    "text": "cross-site request forgery today you implement a website using the principle of unobtrusive javascript where does",
    "start": "958080",
    "end": "964140"
  },
  {
    "text": "your CSRF token score and you and suppose that your HTML page is going to",
    "start": "964140",
    "end": "971520"
  },
  {
    "text": "be static it you naturally think in a few ways but it should naturally go into",
    "start": "971520",
    "end": "978870"
  },
  {
    "text": "your javascript file because that's where your dynamic stuff comes but we will see how one of the",
    "start": "978870",
    "end": "984390"
  },
  {
    "text": "industry-standard guys did that so any one of you're aware of us yeah of course",
    "start": "984390",
    "end": "992040"
  },
  {
    "text": "here any affair off there java csr of god framework so a lot of Java",
    "start": "992040",
    "end": "999630"
  },
  {
    "text": "frameworks actually Java web applications actually use this framework because of the simplicity and it's the",
    "start": "999630",
    "end": "1005270"
  },
  {
    "text": "kind of protection that it gives so it is one of the libraries which is completely compatible with the principle",
    "start": "1005270",
    "end": "1012590"
  },
  {
    "text": "of unobtrusive javascript that is to say you just you can't separate the accordant design easily so where do they",
    "start": "1012590",
    "end": "1019580"
  },
  {
    "text": "keep their tokens just like what we just saw so this is how they're implement",
    "start": "1019580",
    "end": "1024680"
  },
  {
    "text": "look like so you would have a script which say if you're good calm but who's",
    "start": "1024680",
    "end": "1030680"
  },
  {
    "text": "trying to use OS seus our guard you will say good calm slash or Celsius I've got and that code that script is going to",
    "start": "1030680",
    "end": "1037699"
  },
  {
    "text": "load something like this depending upon the current user so if you're logged in as a different session this token is",
    "start": "1037700",
    "end": "1043310"
  },
  {
    "text": "going to change so you have a dynamic content getting changed inside a JavaScript file now if you have been",
    "start": "1043310",
    "end": "1051560"
  },
  {
    "text": "into attacking webs web applications if you have been thinking about cross-site request forgery or HSS in general this",
    "start": "1051560",
    "end": "1058760"
  },
  {
    "text": "this kind of sounds not so good you can think that since the script tag since",
    "start": "1058760",
    "end": "1064730"
  },
  {
    "text": "the scripts can be loaded cross-domain as well script from let's say CDN dot Google comm can be loaded into your",
    "start": "1064730",
    "end": "1071780"
  },
  {
    "text": "website say facebook.com just a bad example but yeah so an attacker could",
    "start": "1071780",
    "end": "1077810"
  },
  {
    "text": "basically load this javascript file from a cross domain website say bad comm right he can reference inside bad",
    "start": "1077810",
    "end": "1085280"
  },
  {
    "text": "dot-com he can reference something like script SRC equal to good calm slash CSR of god / JS it's going to load now well",
    "start": "1085280",
    "end": "1096110"
  },
  {
    "text": "and basically the attacker can hijack the token and then it's game over here your CSR of goddess or your CSR of",
    "start": "1096110",
    "end": "1103220"
  },
  {
    "text": "protection is not anymore because an attacker could already Li read your CSRF token which is what you use to prevent",
    "start": "1103220",
    "end": "1109700"
  },
  {
    "text": "against the whole situation right now the others of OS seus are bad already thought about this a few years back",
    "start": "1109700",
    "end": "1115640"
  },
  {
    "text": "right and they say they have a function inside their javascript file which loads",
    "start": "1115640",
    "end": "1120950"
  },
  {
    "text": "it says which has a function called is valid domain of document or domain and if it's a good calm so the way it loads",
    "start": "1120950",
    "end": "1127970"
  },
  {
    "text": "is if you are using this framework for good calm as the domain then you have a",
    "start": "1127970",
    "end": "1134180"
  },
  {
    "text": "function which calls it checks between the current document domain and your good calm which is the current website",
    "start": "1134180",
    "end": "1141320"
  },
  {
    "text": "which is trying to protect now let's try to get into the East Valley domain and",
    "start": "1141320",
    "end": "1147080"
  },
  {
    "text": "what it tries to do okay so initially tries to check whether the",
    "start": "1147080",
    "end": "1152450"
  },
  {
    "text": "current value is sim is the same as a target which is if if good calm is being",
    "start": "1152450",
    "end": "1158270"
  },
  {
    "text": "loaded if this library is being loaded by good comm itself then yeah return true and that's and that's good and basically if",
    "start": "1158270",
    "end": "1165620"
  },
  {
    "text": "it returns true the if statement becomes true again and then you know the injection happens and your CSF guard",
    "start": "1165620",
    "end": "1171470"
  },
  {
    "text": "works now if if it's they have another case to check for subdomains so they",
    "start": "1171470",
    "end": "1177620"
  },
  {
    "text": "have a specific property called domain strict or something which when you turn it off you can actually load this from",
    "start": "1177620",
    "end": "1184639"
  },
  {
    "text": "subdomains so you can try to protect X dot good calm but just using this but by",
    "start": "1184639",
    "end": "1191509"
  },
  {
    "text": "just loading this from good com okay the picture right now very interestingly",
    "start": "1191509",
    "end": "1196600"
  },
  {
    "text": "when I was trying to actually go deep into the stack so you had something called as the current dot ends width of",
    "start": "1196600",
    "end": "1202309"
  },
  {
    "text": "this value so the start value is the value of which which your current",
    "start": "1202309",
    "end": "1207470"
  },
  {
    "text": "website is right so whenever this returns if I can make the result return always true then again it's the same as",
    "start": "1207470",
    "end": "1215149"
  },
  {
    "text": "you know if the check is bypassed and it's good now so the current ends with",
    "start": "1215149",
    "end": "1221600"
  },
  {
    "text": "is actually a custom implementation of the OS others which wish which which is",
    "start": "1221600",
    "end": "1228049"
  },
  {
    "text": "normally done by things like string dot prototype so you can basically prototype any objects in JavaScript and had an",
    "start": "1228049",
    "end": "1233690"
  },
  {
    "text": "implementation to it so they've actually added ends with prototype to the string which most of the modern-day browsers do",
    "start": "1233690",
    "end": "1241580"
  },
  {
    "text": "support so they just added so that something some things like ie doesn't support it so that it can cover every",
    "start": "1241580",
    "end": "1246950"
  },
  {
    "text": "ground right now what they do here is just they just do a match and they just",
    "start": "1246950",
    "end": "1252769"
  },
  {
    "text": "it's just known implementation and whatever this is says the code is going to believe it now since we have been",
    "start": "1252769",
    "end": "1260029"
  },
  {
    "text": "trying to load this from a cross domain website an attacker on it on his own can have his own implementation of string",
    "start": "1260029",
    "end": "1267830"
  },
  {
    "text": "dot prototype dot ends with if you think about it right but the problem is his",
    "start": "1267830",
    "end": "1274039"
  },
  {
    "text": "code has to load first and the the CSR of God Squad has to load second again",
    "start": "1274039",
    "end": "1279980"
  },
  {
    "text": "there's another problem if he if he initiates this own definition of ends with the definition of CSR or God is",
    "start": "1279980",
    "end": "1287990"
  },
  {
    "text": "going to replace it right so that's that I believe which which the others had few",
    "start": "1287990",
    "end": "1293180"
  },
  {
    "text": "years back when they implemented it but with like my script five we we had a new",
    "start": "1293180",
    "end": "1299330"
  },
  {
    "text": "feature called object dot freeze right so just by adding a new security feature you are actually trying to break",
    "start": "1299330",
    "end": "1305000"
  },
  {
    "text": "something which used to work very well before so this is the kind of attack which I was talking about so attacker",
    "start": "1305000",
    "end": "1310100"
  },
  {
    "text": "can have something like override Egeus and he can go and say string dot",
    "start": "1310100",
    "end": "1316190"
  },
  {
    "text": "prototype dot ends with is always going to return true and you can say object",
    "start": "1316190",
    "end": "1321590"
  },
  {
    "text": "got freeze of string dot prototype and he lost this code and he can go and say he loads this code on the top and then",
    "start": "1321590",
    "end": "1328430"
  },
  {
    "text": "he tries to load the CSR of God framework from the cross-domain website which is bad comm by the way now the",
    "start": "1328430",
    "end": "1335150"
  },
  {
    "text": "original implementation of custom string prototype by the other is going it's not",
    "start": "1335150",
    "end": "1340580"
  },
  {
    "text": "going to be replaced because it returns an error because of the object dot freeze which he attack again it's quite",
    "start": "1340580",
    "end": "1346820"
  },
  {
    "text": "natural so then again it's pretty straightforward you just inject your own",
    "start": "1346820",
    "end": "1352040"
  },
  {
    "text": "forms and steal the token so as far as OS CSRF God goes as long as you can try",
    "start": "1352040",
    "end": "1357650"
  },
  {
    "text": "and bypass the valid domain check you're pretty much secure you're pretty much",
    "start": "1357650",
    "end": "1364910"
  },
  {
    "text": "it's it's it's it's gone so there have been also other various variants of prototype overriding bypasses but this",
    "start": "1364910",
    "end": "1372440"
  },
  {
    "text": "one specifically is interesting because of the object or freeze functionality so",
    "start": "1372440",
    "end": "1378260"
  },
  {
    "text": "let's attempt to fix this right so so there was a fits which actually was",
    "start": "1378260",
    "end": "1384680"
  },
  {
    "text": "being pushed into the SAS I've got framework which uses something known as object dot is frozen ok so as you can",
    "start": "1384680",
    "end": "1393320"
  },
  {
    "text": "guess object or is frozen is going to say whether a given object is frozen or not and this is a native object which is",
    "start": "1393320",
    "end": "1400220"
  },
  {
    "text": "being native property which is given given by the ACMA script by definition a standard okay so it's it's not a custom",
    "start": "1400220",
    "end": "1405650"
  },
  {
    "text": "implementation it goes according to the standard so we can check if my object is already being redefined it's being",
    "start": "1405650",
    "end": "1412760"
  },
  {
    "text": "redefined and if it's frozen already then I can know that someone has tried to change a given object which is string dot prototype right and we push the fits",
    "start": "1412760",
    "end": "1421100"
  },
  {
    "text": "now the problem is javascript is too dynamic that even your object dot is frozen can",
    "start": "1421100",
    "end": "1427030"
  },
  {
    "text": "be spoofed okay so as you can see here an attacker can always return false for",
    "start": "1427030",
    "end": "1434380"
  },
  {
    "text": "object that is frozen right so uh so let's say that we have an object called",
    "start": "1434380",
    "end": "1441150"
  },
  {
    "text": "string got prototype string dot prototype is an object here now let's",
    "start": "1441150",
    "end": "1446350"
  },
  {
    "text": "try and say object or is frozen of string dot prototype it's going to of",
    "start": "1446350",
    "end": "1453580"
  },
  {
    "text": "course return false because no one has tried to freeze it let's try and freeze it okay so now if you say object that",
    "start": "1453580",
    "end": "1466300"
  },
  {
    "text": "it's frozen of string dot prototype it's going to return true because it's been predefined it's been frozen okay",
    "start": "1466300",
    "end": "1471580"
  },
  {
    "text": "so we thought we could believe in this check and unfortunately it doesn't work that way so someone can go and say",
    "start": "1471580",
    "end": "1477790"
  },
  {
    "text": "object dot is frozen and really find the function okay now if he goes and if",
    "start": "1477790",
    "end": "1491230"
  },
  {
    "text": "whoever does anything object ID is frozen of sorry we need to return it false I'm sorry because we need to say",
    "start": "1491230",
    "end": "1498160"
  },
  {
    "text": "is known as frozen it someone is going to say object is frozen of this even",
    "start": "1498160",
    "end": "1504370"
  },
  {
    "text": "though it's being frozen it doesn't matter it matter you know it just the problem is this is a very fundamental",
    "start": "1504370",
    "end": "1511170"
  },
  {
    "text": "object object that is frozen no you give a security feature try to check it but",
    "start": "1511170",
    "end": "1516610"
  },
  {
    "text": "ultimately that can be overridden as well now again that's the power of JavaScript but that can be very well",
    "start": "1516610",
    "end": "1522880"
  },
  {
    "text": "used in a lot of other cases as well for for the good you know you can use this to detect a lot of things you know hook",
    "start": "1522880",
    "end": "1528880"
  },
  {
    "text": "do some aspect-oriented programming kind of stuff with JavaScript but if you're going to try and do that in your",
    "start": "1528880",
    "end": "1535620"
  },
  {
    "text": "definition itself like in your something like a security feature and it's going",
    "start": "1535620",
    "end": "1540910"
  },
  {
    "text": "to be pretty bad so that's just you know we can do an object but I suppose in you",
    "start": "1540910",
    "end": "1546760"
  },
  {
    "text": "can really find it so the attacker just has to add object or it's frozen and return it falls always and the check is",
    "start": "1546760",
    "end": "1551770"
  },
  {
    "text": "always going to be bypassed and you're still hunky-dory it still works okay so",
    "start": "1551770",
    "end": "1557240"
  },
  {
    "text": "now let's try and do another way of doing it right so we just bypassed this",
    "start": "1557240",
    "end": "1565520"
  },
  {
    "text": "using we need to have the ins with to work this part to work for this to bypass rate so we need to have current",
    "start": "1565520",
    "end": "1572690"
  },
  {
    "text": "dot ends with this up to this level for this to work so that means the enable strict this has to always the false",
    "start": "1572690",
    "end": "1579440"
  },
  {
    "text": "equal to false has always has to match if the administrator of the OSF God has turned it to off then it wouldn't even",
    "start": "1579440",
    "end": "1586279"
  },
  {
    "text": "come to this condition right so this might not work always so let's try and go and find a way to completely bypass",
    "start": "1586279",
    "end": "1591649"
  },
  {
    "text": "it okay so we initially saw that the is",
    "start": "1591649",
    "end": "1597260"
  },
  {
    "text": "valid domain is also dependent upon the value of document or domain okay so as",
    "start": "1597260",
    "end": "1602360"
  },
  {
    "text": "you can see the whole security check is a second early I'm pretty sure you guys",
    "start": "1602360",
    "end": "1607820"
  },
  {
    "text": "are already guessing it but yeah document dot lie is a document or domain",
    "start": "1607820",
    "end": "1613250"
  },
  {
    "text": "is also a lie right you can redefine document or domain and you can make them say anything you as you want right so",
    "start": "1613250",
    "end": "1619220"
  },
  {
    "text": "something which most of most of us wouldn't have believed in the first place because we consider dot mono domain as a security value which cannot",
    "start": "1619220",
    "end": "1625429"
  },
  {
    "text": "be changed for example if you say document or domain equal to blah blah blah it wouldn't work but you can actually change object or define",
    "start": "1625429",
    "end": "1631429"
  },
  {
    "text": "property and say document or domain and change stuff just like this just to make it poor so here your document or domain",
    "start": "1631429",
    "end": "1639110"
  },
  {
    "text": "is blackened calm right I can go and say object or define property",
    "start": "1639110",
    "end": "1645490"
  },
  {
    "text": "I mean it's just to show uh you know it",
    "start": "1650880",
    "end": "1656400"
  },
  {
    "text": "just looks",
    "start": "1656400",
    "end": "1658850"
  },
  {
    "text": "let's take a difficult call oh wait second",
    "start": "1667880",
    "end": "1673610"
  },
  {
    "text": "it's a defined property document.domain yeah can't function return' folks yeah",
    "start": "1676250",
    "end": "1686760"
  },
  {
    "text": "so now if you say a document or domain",
    "start": "1686760",
    "end": "1690950"
  },
  {
    "text": "no it's going to be def calm so you're actually in the domain of blackhead calm and you're trying to check what is the",
    "start": "1692090",
    "end": "1698940"
  },
  {
    "text": "value of talking another domain and it's your own DOM is trying to fool you right",
    "start": "1698940",
    "end": "1704130"
  },
  {
    "text": "think about the situations in a lot of other scenarios you are you're using analytics library right so if an",
    "start": "1704130",
    "end": "1709679"
  },
  {
    "text": "analytics library is trying to check the value of the current domain by using document or domain the other would have",
    "start": "1709679",
    "end": "1714809"
  },
  {
    "text": "tried to fool the analytics by doing something else you could always try instead of a famous upside you could go",
    "start": "1714809",
    "end": "1721740"
  },
  {
    "text": "and have your own website and make it more popular things like that so what",
    "start": "1721740",
    "end": "1729120"
  },
  {
    "text": "does that mean that means that the same technique can be used and instead of",
    "start": "1729120",
    "end": "1734160"
  },
  {
    "text": "freezing and going with all those hard things you can just say object I define property of the document or domain and whatever the domain you want to bypass",
    "start": "1734160",
    "end": "1741090"
  },
  {
    "text": "and it's game over and it's a complete bypass of that no this this this this is",
    "start": "1741090",
    "end": "1749520"
  },
  {
    "text": "not a problem just for yourself god you know it of course it's a bad idea that they try to embed their co set of tokens",
    "start": "1749520",
    "end": "1755220"
  },
  {
    "text": "in the inside the JavaScript file which can be loaded cross domain but think of the scenarios where we use document or",
    "start": "1755220",
    "end": "1761220"
  },
  {
    "text": "domain every day just to check what the current value is right so how do we deal",
    "start": "1761220",
    "end": "1767640"
  },
  {
    "text": "with this try to protect this well we try to make sure that do not embed or",
    "start": "1767640",
    "end": "1773660"
  },
  {
    "text": "hard-code your tokens inside a javascript file okay it's pretty hard to",
    "start": "1773660",
    "end": "1779010"
  },
  {
    "text": "protect it as of today with the current specifications if we want to have if the",
    "start": "1779010",
    "end": "1785130"
  },
  {
    "text": "current Akmal script file specifications in the Dom if you want to have a secret precious something in your dorm and you",
    "start": "1785130",
    "end": "1791790"
  },
  {
    "text": "want to protect it the only way for you to protect it is by not using it at all if it's them anyway you're going to use",
    "start": "1791790",
    "end": "1798210"
  },
  {
    "text": "it then it's going to be somehow bypassed and someone can make make use of it right so you can do something like",
    "start": "1798210",
    "end": "1806010"
  },
  {
    "text": "what most of the websites like github does we can you need to have your website's HTML page being non-static and you know",
    "start": "1806010",
    "end": "1813809"
  },
  {
    "text": "have something and you cannot catch them and you can have put them inside your meta tags and find past the dorm and",
    "start": "1813809",
    "end": "1819360"
  },
  {
    "text": "walk the dorm and take this stuff or the best way is to still have a static website static page and in your",
    "start": "1819360",
    "end": "1825929"
  },
  {
    "text": "JavaScript send a fetch request instead of instead of hard-coding your CS secret",
    "start": "1825929",
    "end": "1832110"
  },
  {
    "text": "tokens just send another request just like what a pre-flight request just in the modern day course you can just send",
    "start": "1832110",
    "end": "1838409"
  },
  {
    "text": "another request and fetch the current token from a different end end point so that's how we try to fix es are bad as",
    "start": "1838409",
    "end": "1844919"
  },
  {
    "text": "well so from CSR guard 3.0 all versions of 3.0 or vulnerable tsofen 3.1 we try",
    "start": "1844919",
    "end": "1850620"
  },
  {
    "text": "to do in such a way that we send a post request and try to do it two in the second way you know you just take the",
    "start": "1850620",
    "end": "1856200"
  },
  {
    "text": "token and populating your variable okay so any questions so far with the java",
    "start": "1856200",
    "end": "1865289"
  },
  {
    "text": "scripts ACMA script 5 and all your only yep yep",
    "start": "1865289",
    "end": "1879590"
  },
  {
    "text": "yes yes yeah so here we are not talking",
    "start": "1882840",
    "end": "1894310"
  },
  {
    "text": "about a cross-site scripting okay we are talking about someone is having a JLS",
    "start": "1894310",
    "end": "1899410"
  },
  {
    "text": "J's file and we are talking about same origin policy because J's files can always be loaded cross-domain so you as an attacker can choose it to",
    "start": "1899410",
    "end": "1906940"
  },
  {
    "text": "put anywhere you want so you you decide the injection point here right so you do your injection scripts you do your you",
    "start": "1906940",
    "end": "1914830"
  },
  {
    "text": "know overriding scripts and then load the JavaScript file generally it's it's naturally a bad idea to have something",
    "start": "1914830",
    "end": "1921760"
  },
  {
    "text": "secret in a publicly accessible J's file you know because it can be loaded cross-domain that's obvious and this is",
    "start": "1921760",
    "end": "1929560"
  },
  {
    "text": "kind of reminiscent to the JavaScript hijacking attacks the array dot prototype attacks that we had previously",
    "start": "1929560",
    "end": "1935740"
  },
  {
    "text": "if you if you have heard about JSON hijacking before it's something similar to that but from a different perspective",
    "start": "1935740",
    "end": "1941950"
  },
  {
    "text": "that we use of ECMO script five as well you know to come into the party and have some fun yeah so okay so dump probably",
    "start": "1941950",
    "end": "1951750"
  },
  {
    "text": "this is not a completely new thing and this is the you know the last topic",
    "start": "1951750",
    "end": "1957250"
  },
  {
    "text": "that we're going to talk about today it's pretty funny as well so if you haven't heard this before this has been",
    "start": "1957250",
    "end": "1963940"
  },
  {
    "text": "being talked about for quite a while and a few people even talked about in Twitter you know come up with new Dom",
    "start": "1963940",
    "end": "1969820"
  },
  {
    "text": "problem techniques to bypass a whole lot of stuff so basically what it means is",
    "start": "1969820",
    "end": "1976420"
  },
  {
    "text": "the way the browser's implement that Dom is you know is to always help the developers okay so they do a very nasty",
    "start": "1976420",
    "end": "1984100"
  },
  {
    "text": "stuff which is you try to populate your JavaScript variables depending upon what",
    "start": "1984100",
    "end": "1991090"
  },
  {
    "text": "your form properties have so if you can have something like form name is equal to hello and you have a node called",
    "start": "1991090",
    "end": "1998560"
  },
  {
    "text": "input type is equal to text and name is world then in your JavaScript environment if you go and say hello that",
    "start": "1998560",
    "end": "2004200"
  },
  {
    "text": "world it will actually reference to the input node so if you have been developing you you know the stuff but",
    "start": "2004200",
    "end": "2010410"
  },
  {
    "text": "that's actually pretty nasty the the supported way it should have you should have been accessing this is basic",
    "start": "2010410",
    "end": "2015879"
  },
  {
    "text": "say have an ID or parser and Dom and try to reach form and then try to take that",
    "start": "2015879",
    "end": "2022869"
  },
  {
    "text": "take that node and then parse it again and take it but rather you just have a four hello dot world a form name dot a",
    "start": "2022869",
    "end": "2029849"
  },
  {
    "text": "child name will give you that so that can lead to pretty bad pretty bad stuff",
    "start": "2029849",
    "end": "2036249"
  },
  {
    "text": "so we are going to just see one ironic example here of how bad this can be so",
    "start": "2036249",
    "end": "2042539"
  },
  {
    "text": "you would have heard about Java Script frame Buster's before so javis can frame Buster's are just just just a funny",
    "start": "2042539",
    "end": "2049868"
  },
  {
    "text": "little script which is very ineffective against everything else what is trying to protect which says that table that",
    "start": "2049869",
    "end": "2056259"
  },
  {
    "text": "location is equal to cell tower location okay so when you're trying to I frame something so this JavaScript frame was",
    "start": "2056259",
    "end": "2062799"
  },
  {
    "text": "too severe already didn't know it's just trying to bust out of a current-i frame okay",
    "start": "2062799",
    "end": "2067929"
  },
  {
    "text": "if you iframe some website that is my let's say then you can have a core like this which would bust you out of it to",
    "start": "2067929",
    "end": "2073779"
  },
  {
    "text": "say the top is the pairing window and the self is your current window if both of them doesn't match that means you",
    "start": "2073779",
    "end": "2079720"
  },
  {
    "text": "have been you have been put inside someone else some other container right a child so that means I need to bust out",
    "start": "2079720",
    "end": "2085868"
  },
  {
    "text": "of it so you say top the location is equal to shelter location now this is",
    "start": "2085869",
    "end": "2090970"
  },
  {
    "text": "used to prevent you addressing attacks but people by passing in a lot of ways to use and by frames and wathcing techniques you know there's a - not for",
    "start": "2090970",
    "end": "2098140"
  },
  {
    "text": "content technique I'm not going to talk about that that itself is funny but here's something more funny so people",
    "start": "2098140",
    "end": "2105279"
  },
  {
    "text": "who still use the better way which is X frame options right to prevent to prevent something from being iframe you",
    "start": "2105279",
    "end": "2111730"
  },
  {
    "text": "use you use a response header called X frame options now what can happen here",
    "start": "2111730",
    "end": "2116980"
  },
  {
    "text": "is some people try to be you know a little bit more paranoid and they say",
    "start": "2116980",
    "end": "2122019"
  },
  {
    "text": "you know what I'll just go and use both because for some time some browsers didn't use to support its frame options then your your stupid frame busting code",
    "start": "2122019",
    "end": "2129579"
  },
  {
    "text": "used to be the second line of defense which is as good as it's not there right so the the thing is would you even",
    "start": "2129579",
    "end": "2136359"
  },
  {
    "text": "imagine that you can cause an XSS with a frame busting script so some some of the",
    "start": "2136359",
    "end": "2142660"
  },
  {
    "text": "filters normally allow you to basically inject HTML forms",
    "start": "2142660",
    "end": "2149150"
  },
  {
    "text": "not scripts okay it if you go in if you have a website which is protecting which",
    "start": "2149150",
    "end": "2155569"
  },
  {
    "text": "is being protected by a standard web and you have a code like this which is this",
    "start": "2155569",
    "end": "2161150"
  },
  {
    "text": "and you can basically have cross-site scripting with it so what an attacker can do is have a form with the name",
    "start": "2161150",
    "end": "2168349"
  },
  {
    "text": "itself and location is JavaScript code and a lot of phone as you know JavaScript code and a lot of on your address bar is going to pop out",
    "start": "2168349",
    "end": "2174349"
  },
  {
    "text": "JavaScript right so and you just iframe it okay and what happens is if topknot",
    "start": "2174349",
    "end": "2180440"
  },
  {
    "text": "equal to self your top dot location will become a cell floor location so because of Dom clobbering your self dot",
    "start": "2180440",
    "end": "2187099"
  },
  {
    "text": "locations value according to the JavaScript environment is actually JavaScript : a lot of one we just",
    "start": "2187099",
    "end": "2192740"
  },
  {
    "text": "replace the top okay we just replaced the self there location value right pretty interesting so it's kind of very",
    "start": "2192740",
    "end": "2200059"
  },
  {
    "text": "back to see that you can actually have cross-site scripting just by using just",
    "start": "2200059",
    "end": "2207529"
  },
  {
    "text": "by trying to defend with some other course some other piece of JavaScript code so this is actually part of a work",
    "start": "2207529",
    "end": "2214789"
  },
  {
    "text": "done by Gareth Hayes if anyone of you already know him so he calls the dawn SMS because of the fact that Dom DOM is",
    "start": "2214789",
    "end": "2221420"
  },
  {
    "text": "always Dom's can be troubled and he talks about various other funny techniques about how he can you know",
    "start": "2221420",
    "end": "2229160"
  },
  {
    "text": "trouble the DOM and do a lot of other stuff another thing which I haven't mentioned here as a part of the slides",
    "start": "2229160",
    "end": "2235010"
  },
  {
    "text": "but I would like to tell you is you can do Dom clobbering on a lot of other things as well right think about post message if you want",
    "start": "2235010",
    "end": "2241520"
  },
  {
    "text": "post message your origin right and if you're in a different a post mission post message origin all these things are",
    "start": "2241520",
    "end": "2247069"
  },
  {
    "text": "like very security sensitive in chrome if you try and if you can try it certain variant of Dom clobbering if you can",
    "start": "2247069",
    "end": "2253670"
  },
  {
    "text": "control the name of the iframe variables which is the properties in an iframe you",
    "start": "2253670",
    "end": "2259760"
  },
  {
    "text": "can basically change the way post messages behave in chrome so a lot of other stuffs so if that being said how",
    "start": "2259760",
    "end": "2269029"
  },
  {
    "text": "do we hunt down these kind of things especially the things which we talked about how did I find that even document or domain can be spoofed how do we go go",
    "start": "2269029",
    "end": "2276710"
  },
  {
    "text": "about it okay so there is something called as object or get on",
    "start": "2276710",
    "end": "2283069"
  },
  {
    "text": "the descriptor okay so object and property descriptor is going to tell you it's area and F my script five",
    "start": "2283069",
    "end": "2288499"
  },
  {
    "text": "specification it's going to tell you what the current objects descriptor is",
    "start": "2288499",
    "end": "2294589"
  },
  {
    "text": "like what's the configurability what's was it writable was it being frozen and things like that so you can try and see",
    "start": "2294589",
    "end": "2301789"
  },
  {
    "text": "or the object taught get on property descriptor of let's say document or",
    "start": "2301789",
    "end": "2310160"
  },
  {
    "text": "domain for instance and the important thing to note here is the",
    "start": "2310160",
    "end": "2315799"
  },
  {
    "text": "configurability property of that so Chrome Firefox and even IE tries to set",
    "start": "2315799",
    "end": "2322009"
  },
  {
    "text": "this to true except Safari so among the monitor processing only Safari sets this",
    "start": "2322009",
    "end": "2327019"
  },
  {
    "text": "to false so that means anything any property which you think is sensitive for your program for your code is going",
    "start": "2327019",
    "end": "2335390"
  },
  {
    "text": "if it's going to have a configurable value of true then it's going to be pretty tricky you're not you cannot",
    "start": "2335390",
    "end": "2341809"
  },
  {
    "text": "believe your own Dom for those values okay so that means let's try something",
    "start": "2341809",
    "end": "2347900"
  },
  {
    "text": "else how about location not hatched off sorry",
    "start": "2347900",
    "end": "2356170"
  },
  {
    "text": "so the location would hide chef the conformity is forced which means you can",
    "start": "2361490",
    "end": "2366770"
  },
  {
    "text": "always believe a location or hide stuff someone cannot spoof the value of location or hide stuff and give it to you how about a very very very specific",
    "start": "2366770",
    "end": "2375970"
  },
  {
    "text": "thing which is specific to Chrome so chrome has something honest document or location of origin which gives you the",
    "start": "2375970",
    "end": "2381680"
  },
  {
    "text": "current origin origin itself is it sits out there for security reason right now",
    "start": "2381680",
    "end": "2387380"
  },
  {
    "text": "the quantity ability of document dot location dot location dot origin is true which means you cannot believe the value",
    "start": "2387380",
    "end": "2394310"
  },
  {
    "text": "of location dot origin pretty bad it's the browser vendors they they just",
    "start": "2394310",
    "end": "2399560"
  },
  {
    "text": "implement it you know just out there sporadically I don't know what's happening we just try to discuss this in",
    "start": "2399560",
    "end": "2406220"
  },
  {
    "text": "the w3c mailing list and they had different different browsers have different philosophies of whether they should try and protect this or not",
    "start": "2406220",
    "end": "2412970"
  },
  {
    "text": "because the problem is that developers are always believing these values and the process can simply go ahead and just",
    "start": "2412970",
    "end": "2418010"
  },
  {
    "text": "make the config ability of these two faults but it's just not willing to do that so this is how chrome looks like so",
    "start": "2418010",
    "end": "2424970"
  },
  {
    "text": "can you see that so all those things which are in that red or can can be",
    "start": "2424970",
    "end": "2430099"
  },
  {
    "text": "spoofed so anything like protocol that host or host name everything can be spoofed you're not supposed to believe that the only thing which here which you",
    "start": "2430099",
    "end": "2437119"
  },
  {
    "text": "can use to know your current location is window dot location dot hide schref right now that is again funny because so",
    "start": "2437119",
    "end": "2445430"
  },
  {
    "text": "let's say that today I asked you to tell you that ok you have a script and you're",
    "start": "2445430",
    "end": "2450710"
  },
  {
    "text": "going to load this from a cross domain website you need to make sure that you exactly know what your current domain is",
    "start": "2450710",
    "end": "2456380"
  },
  {
    "text": "so you know that you're going to write a script which has location or hide stuff",
    "start": "2456380",
    "end": "2461660"
  },
  {
    "text": "rather than anything else because I want to do you already know document or domain and everything else can be spoofed now the problem is even if you",
    "start": "2461660",
    "end": "2468380"
  },
  {
    "text": "have that in mind you need to parse it very carefully you need to go according to the URI specifications you need to",
    "start": "2468380",
    "end": "2474710"
  },
  {
    "text": "make sure that because your location or hide stuff is going to give a long order your everything from your scheme",
    "start": "2474710",
    "end": "2480770"
  },
  {
    "text": "protocol till up until the hash for the URA location now you need to properly",
    "start": "2480770",
    "end": "2485869"
  },
  {
    "text": "parse them if you're just going to make a string match attacker can have bad good.com and still have a hash of bad or",
    "start": "2485869",
    "end": "2492109"
  },
  {
    "text": "comment take over you so the web and security sensitive features",
    "start": "2492109",
    "end": "2498410"
  },
  {
    "text": "are evolving in a way so that we cannot even develop very securely right so this is one very good example and and again",
    "start": "2498410",
    "end": "2508010"
  },
  {
    "text": "if you're trying to first different various different properties in your pen tests or your research you can do them",
    "start": "2508010",
    "end": "2515060"
  },
  {
    "text": "accordingly using the object dot gate on property descriptor and yeah so again if these guys talk a lot about",
    "start": "2515060",
    "end": "2523490"
  },
  {
    "text": "all of these stuffs more than I do actually so merio Gareth is Yosuke as you go over",
    "start": "2523490",
    "end": "2529130"
  },
  {
    "text": "this so any one of you actually know these guys yeah that's great so we just just go to Twitter just",
    "start": "2529130",
    "end": "2536630"
  },
  {
    "text": "follow these guys and just try to understand what they're trying to say you will actually learn a lot and do a lot of stuff with it and yeah so these",
    "start": "2536630",
    "end": "2544760"
  },
  {
    "text": "are the things I want to be share today any questions okay",
    "start": "2544760",
    "end": "2557590"
  },
  {
    "text": "alright then so thank you thanks for being here [Applause]",
    "start": "2571010",
    "end": "2578219"
  }
]