[
  {
    "text": "all right good afternoon everyone thank you for coming to our session and I know this second day so many people maybe",
    "start": "2480",
    "end": "7759"
  },
  {
    "text": "start leaving but thanks for stopping by so in this session we are going to talk about supply chain attack and our",
    "start": "7759",
    "end": "14360"
  },
  {
    "text": "approach to how to improve the supply chain security I'm Jong from IBM research and",
    "start": "14360",
    "end": "20039"
  },
  {
    "text": "I'm D kirat and we both are research scientist and AI supply chain security",
    "start": "20039",
    "end": "25080"
  },
  {
    "text": "and in our team we using a lot of the AI technique to improve supply chain security at at the same time we also",
    "start": "25080",
    "end": "30920"
  },
  {
    "text": "looking into security of the AI and those are issues we also looking into it so actually back in 2018 In This Very",
    "start": "30920",
    "end": "38600"
  },
  {
    "text": "stat we presented deep loer which is about how bad actors can use Ai and ml",
    "start": "38600",
    "end": "45399"
  },
  {
    "text": "to create U you know Advanced threats but today we'll be talking about how some of these you know Advanced attacks",
    "start": "45399",
    "end": "52120"
  },
  {
    "text": "can be detected using semii and ml technology is specifically in the uh",
    "start": "52120",
    "end": "57320"
  },
  {
    "text": "software supply chain scenarios all right so hope you guys enjoy our talk so let's jump in so suppose that I'm a",
    "start": "57320",
    "end": "65158"
  },
  {
    "text": "software supplier and I develop maybe a great toour because this is vacation season I create software to plan your",
    "start": "65159",
    "end": "72320"
  },
  {
    "text": "awesome summer vacation find the best deal and I maybe assign those binary with a valid certificate and provide all",
    "start": "72320",
    "end": "79600"
  },
  {
    "text": "the list of dependencies I use and develop this software and if I give to you maybe do you trust and use",
    "start": "79600",
    "end": "88079"
  },
  {
    "text": "it I already know the answer answer and it probably is highly likely depending on how much trust you have to me as a",
    "start": "88079",
    "end": "95880"
  },
  {
    "text": "software supplier and this question or this observation is not something new",
    "start": "95880",
    "end": "101360"
  },
  {
    "text": "and also it was highlighted by cam Thomson his famous touring about acture about the reflection of trusting trust",
    "start": "101360",
    "end": "108000"
  },
  {
    "text": "so basically unless you TR you create the software from the scratch by yourself including source code and",
    "start": "108000",
    "end": "114000"
  },
  {
    "text": "compiler and you cannot simply trust it so it's a matter about where we have our",
    "start": "114000",
    "end": "119320"
  },
  {
    "text": "trust in the software so most of the time that's why we rely on software Supply vendor and their reputation their",
    "start": "119320",
    "end": "125520"
  },
  {
    "text": "development history to trust software which is great but until that",
    "start": "125520",
    "end": "131640"
  },
  {
    "text": "break may be broken and that's why the supply chain are happening so you may remember solar winds that has hit all",
    "start": "131640",
    "end": "138599"
  },
  {
    "text": "the media and that affected a lot of organization and that has happened from malicious Cod injected in software",
    "start": "138599",
    "end": "144280"
  },
  {
    "text": "update process and also similarly in the Casia cases softare update process got",
    "start": "144280",
    "end": "149599"
  },
  {
    "text": "compl promise such that use to distribute a lot of the ransomware and this happen a lot of in commercial",
    "start": "149599",
    "end": "155599"
  },
  {
    "text": "sector but it also happening many of the open source project and you may remember there dependence confusion research",
    "start": "155599",
    "end": "161480"
  },
  {
    "text": "which is about stting and maybe same the package name present in private and also",
    "start": "161480",
    "end": "166560"
  },
  {
    "text": "public kind of the repository and there will be the dependency confusion so there maybe in the end you may use",
    "start": "166560",
    "end": "172840"
  },
  {
    "text": "incorrect packages not something you intend to use it and also protest to cases popular m packages in one day",
    "start": "172840",
    "end": "179879"
  },
  {
    "text": "maybe just turn into the wiper and then just destroy all your file and recently of course we all know about cross strike",
    "start": "179879",
    "end": "186640"
  },
  {
    "text": "this is not of sub cyber cyber cyber attack but that also highlighted vender",
    "start": "186640",
    "end": "192879"
  },
  {
    "text": "our trust on the software vendor and software update is broken that there will massive consequence happening and",
    "start": "192879",
    "end": "198840"
  },
  {
    "text": "that may affect our day-to-day life let me recap one of the most recent",
    "start": "198840",
    "end": "204440"
  },
  {
    "text": "example happening in open source sub Community which was quite quite major happening and we about back door about 4",
    "start": "204440",
    "end": "211360"
  },
  {
    "text": "months ago there was interesting observation was posted OS security and",
    "start": "211360",
    "end": "216760"
  },
  {
    "text": "there has been some unus suspicious activity High CPU happening SSH during",
    "start": "216760",
    "end": "222360"
  },
  {
    "text": "kind of the V grind kind of the deing and that trigger deeper investigation about this issue and it turns out that",
    "start": "222360",
    "end": "229799"
  },
  {
    "text": "there could be a back door in XC library that can lead to SSS compromise so this",
    "start": "229799",
    "end": "235640"
  },
  {
    "text": "trigger the whole investigation about this repository and then the they C discovered three two three years of poor",
    "start": "235640",
    "end": "242519"
  },
  {
    "text": "Supply gench happening very sophisticated and very interesting in many ways and to highlight the supply",
    "start": "242519",
    "end": "248280"
  },
  {
    "text": "chain attack happening in many of the popular software and if we don't know about XG which is kind of compression",
    "start": "248280",
    "end": "254360"
  },
  {
    "text": "decompression the rary and the tool the reason people have attention on this problem is that exip or Li lzma is part",
    "start": "254360",
    "end": "262880"
  },
  {
    "text": "of the dependency of the system D again system D is a dependency op at AG",
    "start": "262880",
    "end": "268280"
  },
  {
    "text": "meaning that if the batter actor has private correct private key they can full take control of your SSS server",
    "start": "268280",
    "end": "276080"
  },
  {
    "text": "remotely so sounds quite disaster so that could be major major impact and",
    "start": "276080",
    "end": "281479"
  },
  {
    "text": "during this investigation about exit back door it discovered many many interesting aspect of our supply chain",
    "start": "281479",
    "end": "287960"
  },
  {
    "text": "for example this bad actor created multiple identity such that they give",
    "start": "287960",
    "end": "293160"
  },
  {
    "text": "the pressure to the original maintainer because open source in some sense kind of voluntary work to make sure the",
    "start": "293160",
    "end": "299320"
  },
  {
    "text": "maintain and of course they have their day-to-day job and that's why maybe the patching releasing might be delayed and they",
    "start": "299320",
    "end": "306199"
  },
  {
    "text": "using that factor to pressure the original maintainer hey you guys slow so you need to accept this guy the new guy",
    "start": "306199",
    "end": "312240"
  },
  {
    "text": "as another maintainer so in the end this new Bad director become a maintainer now have a full control and over the time",
    "start": "312240",
    "end": "318919"
  },
  {
    "text": "this guy introduced a lot of the St technique to hide all a lot of the malicious code like obsc and then",
    "start": "318919",
    "end": "325280"
  },
  {
    "text": "multi-chain kind of the payload construction so if we look at the source code it may not be obvious to find all",
    "start": "325280",
    "end": "331000"
  },
  {
    "text": "this malicious code so this case and all other supply chain of tack highlighted there is clearly semantic gap between",
    "start": "331000",
    "end": "338319"
  },
  {
    "text": "actual the code we expect as of the behavior from the code and the metadata you get",
    "start": "338319",
    "end": "344280"
  },
  {
    "text": "it let's step back and look at maybe supply chain how the software Supply look like and 10,000 foot level",
    "start": "344280",
    "end": "350840"
  },
  {
    "text": "developer develop source code and build a source code build the compiled code and then deliver to the end user and end",
    "start": "350840",
    "end": "356919"
  },
  {
    "text": "user of they use it and there has been a lot of study research tool standard to",
    "start": "356919",
    "end": "362840"
  },
  {
    "text": "protect many aspect of S supply chain like finding the vulnerability to improve security and to ensure the",
    "start": "362840",
    "end": "369720"
  },
  {
    "text": "Integrity of the cicd pipeline and a lot of standard to provide Assurance about",
    "start": "369720",
    "end": "375039"
  },
  {
    "text": "the problems which is all great standard and there is a lot of the the research Community effort happening here but as a",
    "start": "375039",
    "end": "382919"
  },
  {
    "text": "security researcher we always need to think about what would be the worst case scenario what would be the what would be",
    "start": "382919",
    "end": "388360"
  },
  {
    "text": "the consequences so as highlighting solar wind X back door the development",
    "start": "388360",
    "end": "393400"
  },
  {
    "text": "development chain got compromised that can affect actual the relase and how about maybe compromise stor certificate",
    "start": "393400",
    "end": "400280"
  },
  {
    "text": "that happen main time in many highlighting many meteor and the reprodu build is great concept but is really",
    "start": "400280",
    "end": "406520"
  },
  {
    "text": "hard to execute in many cases and Al Sala is a great standard but Sala for po requires a lot of human effort and so as",
    "start": "406520",
    "end": "413360"
  },
  {
    "text": "sparm is providing ingredient but now it's important to the user to verify",
    "start": "413360",
    "end": "418440"
  },
  {
    "text": "complete incorrectness and also it's highlighted that L POS maybe some of you support during your vacation time maybe",
    "start": "418440",
    "end": "424639"
  },
  {
    "text": "that was three years ago so log POS when it happen we need a quick way to find out where this PO pce of code so this",
    "start": "424639",
    "end": "431080"
  },
  {
    "text": "all highlight there is still Gap there is room to improve in this supply chain and in this talk we are going to focus",
    "start": "431080",
    "end": "437160"
  },
  {
    "text": "on right hand side the supply chain because most of time user only get execut or binary and the only way to",
    "start": "437160",
    "end": "443840"
  },
  {
    "text": "trust EXC binary is they have to trust soft Bender but as I highlighted many of supply chain",
    "start": "443840",
    "end": "450120"
  },
  {
    "text": "if the trust is broken there could be the massive consequence happening so that's why we develop coome technique",
    "start": "450120",
    "end": "457319"
  },
  {
    "text": "and then using this and we want to help the user to help to improve supply chain",
    "start": "457319",
    "end": "462639"
  },
  {
    "text": "security and by without trusting the the software vendor but they can still trust",
    "start": "462639",
    "end": "467919"
  },
  {
    "text": "the software and I'm going to hand over to D so he's going to going to technical detail about coino all",
    "start": "467919",
    "end": "474479"
  },
  {
    "text": "right all right so thank you Jon so C genome what is this right so before before diving into the detail let me",
    "start": "474479",
    "end": "481400"
  },
  {
    "text": "quickly revisit uh the problem of unknown software right as we discussed",
    "start": "481400",
    "end": "486720"
  },
  {
    "text": "software usually comes with metadata along with the code a metadata what you",
    "start": "486720",
    "end": "491840"
  },
  {
    "text": "mean by that is simply the file name or more advanced like the hes or signatures",
    "start": "491840",
    "end": "498720"
  },
  {
    "text": "or S bombs and this basically tells you know what the software is and what it does right and we build trust by",
    "start": "498720",
    "end": "506199"
  },
  {
    "text": "verifying this metadata but the true behavior of the software",
    "start": "506199",
    "end": "512080"
  },
  {
    "text": "entirely depends on the code the supplied code not the metadata the metadata may say something the hashes",
    "start": "512080",
    "end": "519200"
  },
  {
    "text": "and you know signatures checks out but when you actually run the code it can do some completely different things so here",
    "start": "519200",
    "end": "526240"
  },
  {
    "text": "is this inherent semantic gap between metadata and code that I've been describing and this is the misplaced",
    "start": "526240",
    "end": "533480"
  },
  {
    "text": "trust in the metadata that actually one of the root cause of a lot of the problem in software supply chain so how",
    "start": "533480",
    "end": "539440"
  },
  {
    "text": "how can we bridge this Gap so the one option would be to actually look into the code if you you know are an expert",
    "start": "539440",
    "end": "546040"
  },
  {
    "text": "in that you can reverse engineer determine exactly what the code is doing and then realize whether it aligns with",
    "start": "546040",
    "end": "552200"
  },
  {
    "text": "the metadata or not that describes what the code is supposed to do but for average consumer it's not scalable it's",
    "start": "552200",
    "end": "559800"
  },
  {
    "text": "not practical and then what we're proposing is a differential analysis way",
    "start": "559800",
    "end": "565120"
  },
  {
    "text": "of solving this issue and what I mean by that is let's start from some good known",
    "start": "565120",
    "end": "570600"
  },
  {
    "text": "State maybe some previous version of the software that is known to be safe and the metadata is accurate so what we're",
    "start": "570600",
    "end": "577760"
  },
  {
    "text": "going to do is we're going to look into the code and whether they computationally their computational",
    "start": "577760",
    "end": "583880"
  },
  {
    "text": "semantic is the same right so that that's where the code genomes comes into",
    "start": "583880",
    "end": "589760"
  },
  {
    "text": "action so code genome framework allows us to extract meaningful semantically",
    "start": "589760",
    "end": "595839"
  },
  {
    "text": "meaningful fingerprint from this code uh that we are called code genome and then",
    "start": "595839",
    "end": "601480"
  },
  {
    "text": "we can compare these genes uh and then if they are all matches what that means is these two code are functionally",
    "start": "601480",
    "end": "608240"
  },
  {
    "text": "similar so with that we can also extrapolate that the metadata that is coming from The Trusted code uh can be",
    "start": "608240",
    "end": "615839"
  },
  {
    "text": "applied to this unknown code that just came in right so that's the high level idea and but if we look into this what",
    "start": "615839",
    "end": "624120"
  },
  {
    "text": "is happening here is we are building the chain of trust not by simply trusting the supplier not by simply trusting the",
    "start": "624120",
    "end": "630880"
  },
  {
    "text": "metadata but we're building the chain of trust by truly following the code",
    "start": "630880",
    "end": "636040"
  },
  {
    "text": "equivalency so this is we think is one of the ultimate way to brid this semantic Gap all right so how does the",
    "start": "636040",
    "end": "643920"
  },
  {
    "text": "Cod genum work right at high level so obviously we start from code that's what we get and uh of course we do the",
    "start": "643920",
    "end": "651480"
  },
  {
    "text": "disassembly to find it into uh individual functions so then we're going to lift it into IR intermediate",
    "start": "651480",
    "end": "657600"
  },
  {
    "text": "representation so I'm going to talk why we want to do this so once it's in the IR so we're going to do optimization and",
    "start": "657600",
    "end": "664760"
  },
  {
    "text": "generalization uh and what we're calling it the canonicalization process and ultimately we get this canonical IR",
    "start": "664760",
    "end": "671639"
  },
  {
    "text": "version of the function and after that we're going to apply you know there are multiple tools that can extract eding",
    "start": "671639",
    "end": "679079"
  },
  {
    "text": "from this canonical ir and the quom framework allows us to you know pick and",
    "start": "679079",
    "end": "684600"
  },
  {
    "text": "choose of you know different tools because each of these State there are multiple tools available some of them",
    "start": "684600",
    "end": "690600"
  },
  {
    "text": "are open source some of them are proprietary and based on the use cases some of them may work better in in",
    "start": "690600",
    "end": "695680"
  },
  {
    "text": "certain cases other tools may work better so the next we're going to uh look into you know how it's implemented",
    "start": "695680",
    "end": "702079"
  },
  {
    "text": "in our in our current form so first of course like we want to extract all the functions from the code that's the",
    "start": "702079",
    "end": "708720"
  },
  {
    "text": "disassembly and then the goal here is for each function we want to compute",
    "start": "708720",
    "end": "713880"
  },
  {
    "text": "this code genome that capture the essense of the functions what the the behavior of the function and turns out",
    "start": "713880",
    "end": "720160"
  },
  {
    "text": "usually you know that means the code of the function right but not just that it also depends on the data a lot of the",
    "start": "720160",
    "end": "727240"
  },
  {
    "text": "behavior of the function also depend on the data sometimes entirely depends on the data more than the code and also",
    "start": "727240",
    "end": "734040"
  },
  {
    "text": "there is you know sometimes the function calls other functions so these are also needs to be part of the Genome of that",
    "start": "734040",
    "end": "740240"
  },
  {
    "text": "particular function so with that uh what we concluded is as an ingredient for",
    "start": "740240",
    "end": "746040"
  },
  {
    "text": "individual Gene of a function we're going to take three components the actual code the data that it depends on",
    "start": "746040",
    "end": "753199"
  },
  {
    "text": "and the functions it calls but of course like if you include all the functions and its code it's not tractable so we",
    "start": "753199",
    "end": "759360"
  },
  {
    "text": "are only taking the definition of the function so after that as I said like",
    "start": "759360",
    "end": "764560"
  },
  {
    "text": "we're going to lift it into ir and in this case we are using this open source tool called retargetable de decompiler",
    "start": "764560",
    "end": "771399"
  },
  {
    "text": "so it's based on llvm IR so of course the IR the intermediate representation that we're using is in llvm IR format so",
    "start": "771399",
    "end": "778720"
  },
  {
    "text": "once we have this llvm so we're going to go ahead and do the Canon Equalization",
    "start": "778720",
    "end": "784240"
  },
  {
    "text": "process so this is implemented in the llvm paths so so basically there are",
    "start": "784240",
    "end": "790000"
  },
  {
    "text": "like two stages first is the optimization so here we're are leveraging the you know the large number",
    "start": "790000",
    "end": "797040"
  },
  {
    "text": "of research work that has been done in the past multiple decades on the uh compiler",
    "start": "797040",
    "end": "802560"
  },
  {
    "text": "optimization and this passes what it does is given a function it tries to",
    "start": "802560",
    "end": "807600"
  },
  {
    "text": "find and reduce the function into the essential components um that is needed to do the the computation that is",
    "start": "807600",
    "end": "815199"
  },
  {
    "text": "supposed to do maintaining the equivalency of the code so once we pass",
    "start": "815199",
    "end": "820279"
  },
  {
    "text": "through this optimization so there are also other passes that works on generalizing the code for example you",
    "start": "820279",
    "end": "827880"
  },
  {
    "text": "know first of course extracting all the dependencies global variables structures also consistently renaming and also",
    "start": "827880",
    "end": "835079"
  },
  {
    "text": "consistently sorting data that are dependent so in the end what happens is",
    "start": "835079",
    "end": "840440"
  },
  {
    "text": "that for each function we have this what we call the sadow module that is independent but complete in a sense it",
    "start": "840440",
    "end": "848120"
  },
  {
    "text": "contains all the things that is need that that for that particular function to uh to behave the way it's supposed to",
    "start": "848120",
    "end": "854480"
  },
  {
    "text": "behave and that is the component what we're calling the canonical ir and after",
    "start": "854480",
    "end": "860160"
  },
  {
    "text": "that we can use that uh as the starting point to extract the actual embeding or",
    "start": "860160",
    "end": "865480"
  },
  {
    "text": "feature vector or genome that we're calling so in this case we are using sigal so sigal is based on a signal",
    "start": "865480",
    "end": "872720"
  },
  {
    "text": "processing based um approach where the the canonical IR is converted into image",
    "start": "872720",
    "end": "878800"
  },
  {
    "text": "and then use some uh G filters to extract ultimately the feature vectors which is the ultimate Gene here so let's",
    "start": "878800",
    "end": "887560"
  },
  {
    "text": "take a quick look on the concrete example in the left so there is the machine code uh I'm showing also the",
    "start": "887560",
    "end": "894160"
  },
  {
    "text": "code so that you know you can have some comparison there but of course we start with the binary code uh but we can also",
    "start": "894160",
    "end": "901320"
  },
  {
    "text": "start with source and directly lift to the IR with the llvm so once it's lifted to IR we're",
    "start": "901320",
    "end": "907360"
  },
  {
    "text": "calling it raw IR so after that it goes through the Canon equalizing process that generalizes things it removes some",
    "start": "907360",
    "end": "914040"
  },
  {
    "text": "of the instruction that may be not needed or you know reduce some make it more optimized to the minimal form of",
    "start": "914040",
    "end": "920800"
  },
  {
    "text": "the function so once we have this canonical IR so we're going to convert it into bit code which is the binary",
    "start": "920800",
    "end": "926600"
  },
  {
    "text": "form of the IR and then since we are using Sigma in this pipeline so it converts into bit code image and then",
    "start": "926600",
    "end": "933279"
  },
  {
    "text": "extract this ining as a code Gene all right so with that pipeline",
    "start": "933279",
    "end": "939360"
  },
  {
    "text": "let's look at a simple example so here we have four binaries and assume that each binary has only one function and",
    "start": "939360",
    "end": "946680"
  },
  {
    "text": "there they look completely different at the binary form I'm also showing the um actual source code so that you can",
    "start": "946680",
    "end": "952519"
  },
  {
    "text": "inspect that as well but if you look at the you know the take the has they are different if you start doing you know a",
    "start": "952519",
    "end": "959399"
  },
  {
    "text": "pneumonic engram they they will be completely different but if we go through the pipeline that we just",
    "start": "959399",
    "end": "965000"
  },
  {
    "text": "described turns out they all generate the same gene what does that mean that",
    "start": "965000",
    "end": "970880"
  },
  {
    "text": "means the these all functions or these all binaries are computationally",
    "start": "970880",
    "end": "975959"
  },
  {
    "text": "equivalent and with that so let's assume that you know there is this metad data that is assigned to the smaller function",
    "start": "975959",
    "end": "982600"
  },
  {
    "text": "Maybe by actually looking at the code and verifying okay this metadata tells exactly what the code does the code",
    "start": "982600",
    "end": "988399"
  },
  {
    "text": "basically does does is you know given any argument it's just going to add 32 so with that and with the code",
    "start": "988399",
    "end": "995040"
  },
  {
    "text": "equivalency now we can apply the same metadata to all of the other binaries and the key fact here is that",
    "start": "995040",
    "end": "1002319"
  },
  {
    "text": "to be able to do that you don't have to you know reverse engineer all this complex code or complex binary you can",
    "start": "1002319",
    "end": "1008959"
  },
  {
    "text": "still you know confidently apply this metadata to all the other three U binaries with this process so that is",
    "start": "1008959",
    "end": "1017319"
  },
  {
    "text": "the idea of code genome here of course it looks good and but of",
    "start": "1017319",
    "end": "1022480"
  },
  {
    "text": "course there are like multiple advantage and also challenges the one of the main advantage especially using the llvm",
    "start": "1022480",
    "end": "1029199"
  },
  {
    "text": "based you know intermediate representation is that it can support multiple architectures multiple",
    "start": "1029199",
    "end": "1034438"
  },
  {
    "text": "compilers multiple optimization levels it can handle certain obfuscation for",
    "start": "1034439",
    "end": "1039880"
  },
  {
    "text": "example you know basic block um if you are sing the basic block it will represent differently in the in the",
    "start": "1039880",
    "end": "1046438"
  },
  {
    "text": "actual binary but once we go through the llv IR you can reduce it to the same gene but there's also challenges these",
    "start": "1046439",
    "end": "1053440"
  },
  {
    "text": "are coming from you know the classic challenges with any binary analysis like you know it's generally accepted that",
    "start": "1053440",
    "end": "1060120"
  },
  {
    "text": "this assembly is undecidable and because of that fact the function boundary recognition can be challenging sometimes",
    "start": "1060120",
    "end": "1066520"
  },
  {
    "text": "functions can you know overlap uh and also since we are moving into the the IR",
    "start": "1066520",
    "end": "1072960"
  },
  {
    "text": "there's also a loss of architecturally specific nuances that might be interesting or like important to",
    "start": "1072960",
    "end": "1078280"
  },
  {
    "text": "actually capture the uh Gene and finally the canonicalization process uh we're",
    "start": "1078280",
    "end": "1084320"
  },
  {
    "text": "trying to recover some kind of high level abstraction of the code and there are also some limitations how much we",
    "start": "1084320",
    "end": "1090159"
  },
  {
    "text": "can do with that so with that challenges in mind what we want to see next is how",
    "start": "1090159",
    "end": "1095679"
  },
  {
    "text": "it actually fares with the real uh real work challenges right and for that I'm",
    "start": "1095679",
    "end": "1100960"
  },
  {
    "text": "going to uh go and uh do the demo uh so the demo uh is about uncovering some",
    "start": "1100960",
    "end": "1107280"
  },
  {
    "text": "supplies and attack and as you might have guessed it's about the XG back door that Jong just explained and we saw that",
    "start": "1107280",
    "end": "1114960"
  },
  {
    "text": "to get to this back door the misant was you know spending many years and very",
    "start": "1114960",
    "end": "1120720"
  },
  {
    "text": "elaborate way to to introduce the back door but the fact of the matter is that",
    "start": "1120720",
    "end": "1126120"
  },
  {
    "text": "the back door has to be there in the final binary some way somehow some form",
    "start": "1126120",
    "end": "1132159"
  },
  {
    "text": "and in this demo you'll see we are we only care about that we don't care about how complex the whole process was I mean",
    "start": "1132159",
    "end": "1138080"
  },
  {
    "text": "it's very interesting it's a nice story but ultimately what it matters is the code needs to be there and we're looking",
    "start": "1138080",
    "end": "1143600"
  },
  {
    "text": "at the code to see that so what we're going to see in the demo is there are two binaries right so one I'm going to",
    "start": "1143600",
    "end": "1150280"
  },
  {
    "text": "compile from pulling the code from Source from the GitHub and the other binary is you know distributed in this",
    "start": "1150280",
    "end": "1156520"
  },
  {
    "text": "case Debian distribution so we're going to generate U you know genes from these",
    "start": "1156520",
    "end": "1161760"
  },
  {
    "text": "two binaries it's coming from the same source code at least it's supposed to be coming from the same source code it's",
    "start": "1161760",
    "end": "1166799"
  },
  {
    "text": "the same version uh so we gener two um you know gen sets of genes since these",
    "start": "1166799",
    "end": "1172200"
  },
  {
    "text": "genes are basically embedding vectors in high dimensional space so we're going to",
    "start": "1172200",
    "end": "1177320"
  },
  {
    "text": "project them into that high dimensional space and see where they land and then usually you know this gen will find the",
    "start": "1177320",
    "end": "1184440"
  },
  {
    "text": "pair but some of the genes might have no pair and some of the genes might be not",
    "start": "1184440",
    "end": "1190760"
  },
  {
    "text": "you know too close right so this is what we're looking for with this demo so",
    "start": "1190760",
    "end": "1195799"
  },
  {
    "text": "let's switch on to the demo",
    "start": "1195799",
    "end": "1199880"
  },
  {
    "text": "so here what we're seeing is in in the left is the co genome UI more specifically the Gen diff UI and in the",
    "start": "1200840",
    "end": "1208720"
  },
  {
    "text": "right I have like two sets of binaries so each set is representing one version",
    "start": "1208720",
    "end": "1214679"
  },
  {
    "text": "of the coming from the same source so one I'm compiling from the GitHub repo and one coming from the distribution",
    "start": "1214679",
    "end": "1221120"
  },
  {
    "text": "right so we can go ahead and drag and drop uh these two binary from first I'm",
    "start": "1221120",
    "end": "1227559"
  },
  {
    "text": "going to start with the older version which was the version is known before",
    "start": "1227559",
    "end": "1233600"
  },
  {
    "text": "the back door was introduced right so I dragged and it's processing it's in real",
    "start": "1233600",
    "end": "1238960"
  },
  {
    "text": "time so what's happening in the back end is basically going through the pipeline C genome pipeline lifting to uh",
    "start": "1238960",
    "end": "1245679"
  },
  {
    "text": "disassembling lifting to IR Canon Equalization generating Gene and comparing that and then yes now we have",
    "start": "1245679",
    "end": "1252919"
  },
  {
    "text": "the result and the result shows the more interesting part is it's 100% similar C",
    "start": "1252919",
    "end": "1259360"
  },
  {
    "text": "all the genes are similar and that is to be expected because the source is the same if I'm compiling myself and one is",
    "start": "1259360",
    "end": "1265799"
  },
  {
    "text": "coming from the uh distribution the hasset are different because they are compiled in a different",
    "start": "1265799",
    "end": "1272240"
  },
  {
    "text": "uh build environment but the genes are the same so let's try to do that the same thing with um the version that is",
    "start": "1272240",
    "end": "1280440"
  },
  {
    "text": "known to have back door all right so in this case I'm going to use Hollywood magic and I'm going to",
    "start": "1280440",
    "end": "1287320"
  },
  {
    "text": "speed it up but basically in in the left is the the GitHub version that I",
    "start": "1287320",
    "end": "1292400"
  },
  {
    "text": "compiled and then in the right is going to be the distributed version that came in the Deviant",
    "start": "1292400",
    "end": "1298240"
  },
  {
    "text": "package and it's it's processing and now we have the result and now the difference right so now you see the gene",
    "start": "1298240",
    "end": "1305559"
  },
  {
    "text": "similarity is only 70% there are quite a few identical genes uh some similar",
    "start": "1305559",
    "end": "1310679"
  },
  {
    "text": "genes but it also has like 101 additional genes and also some",
    "start": "1310679",
    "end": "1316279"
  },
  {
    "text": "mismatches and this UI allow us to also inspect inside each of these Gene pairs",
    "start": "1316279",
    "end": "1323120"
  },
  {
    "text": "uh for example we can look at some similar genes first to see how it looks like so I'm picking up the the first",
    "start": "1323120",
    "end": "1330000"
  },
  {
    "text": "pair and when we click the compare functions we can first see the the",
    "start": "1330000",
    "end": "1336760"
  },
  {
    "text": "actual binary so that is showing the um assembly there are quite a few",
    "start": "1336760",
    "end": "1341880"
  },
  {
    "text": "differences the Highlight by Red um and these are because of the result of the",
    "start": "1341880",
    "end": "1347960"
  },
  {
    "text": "you know intr ution introduction of uh the the code of the back door and that",
    "start": "1347960",
    "end": "1353279"
  },
  {
    "text": "is replacing some of the function relocation happening there and that is changing the actual code but the actual",
    "start": "1353279",
    "end": "1358760"
  },
  {
    "text": "computation that the function is supposed to do is exactly the same but it's also highlights if you only look at the binary they are quite different",
    "start": "1358760",
    "end": "1365880"
  },
  {
    "text": "right there are many many differences but once we look into the llvm IR version which is going through this",
    "start": "1365880",
    "end": "1372480"
  },
  {
    "text": "Canon Equalization process so it should only so very few only two differences",
    "start": "1372480",
    "end": "1378039"
  },
  {
    "text": "it's very minor differences it goes to show that the importance of doing the Canon Equalization to reduce the",
    "start": "1378039",
    "end": "1385200"
  },
  {
    "text": "functionality into um the minimum set so the next most interesting part is the",
    "start": "1385200",
    "end": "1390720"
  },
  {
    "text": "the mismatches right so I'm now filtering only the mismatch functions so there are quite a few mismatch functions",
    "start": "1390720",
    "end": "1396480"
  },
  {
    "text": "so one of them is actually has a low uh number I don't know if you can see but it's 95 so I'm going to check this out",
    "start": "1396480",
    "end": "1404000"
  },
  {
    "text": "so it's called the CRC 64 resolve so if you look at the comparison",
    "start": "1404000",
    "end": "1409840"
  },
  {
    "text": "so it's completely different so remember this is coming from the same source and you compile just the two different",
    "start": "1409840",
    "end": "1416279"
  },
  {
    "text": "environment and then the the functions are completely different turns out so this is the one of the key uh component",
    "start": "1416279",
    "end": "1424200"
  },
  {
    "text": "of the XZ back door that's utilizing this indirect function call in the GC to",
    "start": "1424200",
    "end": "1429720"
  },
  {
    "text": "you know serously change the behavior of the function and of course that also reflects in the LM IR version of this um",
    "start": "1429720",
    "end": "1437840"
  },
  {
    "text": "these functions so here this is the UI version of the tool but many of us in this room might",
    "start": "1437840",
    "end": "1444679"
  },
  {
    "text": "also appreciate you know having a command line tool so this is what we seeing like the same analysis doing with",
    "start": "1444679",
    "end": "1451000"
  },
  {
    "text": "the GM diff but through the command line and it generates the same result but now we have now we can you know go through",
    "start": "1451000",
    "end": "1457360"
  },
  {
    "text": "finding similar genes like mismatch genes and it's U outputting the text U",
    "start": "1457360",
    "end": "1463240"
  },
  {
    "text": "but this command line version has also some additional capability uh so that we can see for example you know changing",
    "start": "1463240",
    "end": "1469799"
  },
  {
    "text": "the threshold uh or changing the output format for example like Json file and",
    "start": "1469799",
    "end": "1476039"
  },
  {
    "text": "that might you can use to further down in the you know down Downstream task to do some detection or some cicd um",
    "start": "1476039",
    "end": "1485559"
  },
  {
    "text": "pipelines so so far we checked two versions of the binary right but what if",
    "start": "1485559",
    "end": "1492200"
  },
  {
    "text": "like we look into all the other versions there are like so many other versions what what would we see as as an Insight",
    "start": "1492200",
    "end": "1498120"
  },
  {
    "text": "so that's exactly what we did um and this is the graph so the y- AIS is",
    "start": "1498120",
    "end": "1504880"
  },
  {
    "text": "basically the gene similarity and then xaxis is all the versions that was released for the XG um library and as we",
    "start": "1504880",
    "end": "1512679"
  },
  {
    "text": "expected they are all 100% in the the early part but suddenly the version",
    "start": "1512679",
    "end": "1518080"
  },
  {
    "text": "5.6.0 which is the first version where the back door was introduced so suddenly we have a very low similarity score and",
    "start": "1518080",
    "end": "1525000"
  },
  {
    "text": "then the other version 5.6.1 has also so very low similarity and that was the one we saw in the demo",
    "start": "1525000",
    "end": "1532880"
  },
  {
    "text": "so this highlights to show that you know of course it's always you know obvious and easy to make this argument you know",
    "start": "1532880",
    "end": "1539880"
  },
  {
    "text": "after the fact but if we have been doing this analysis we would have detected this anomaly and to be honest this is",
    "start": "1539880",
    "end": "1546840"
  },
  {
    "text": "not too expensive you only do once for One release you know how many releases it's happening you know over the year",
    "start": "1546840",
    "end": "1554080"
  },
  {
    "text": "right so it's not uh super expensive and you can do this for all the uh important",
    "start": "1554080",
    "end": "1559840"
  },
  {
    "text": "open source project so that's what we um hope that it will happen and the other",
    "start": "1559840",
    "end": "1565720"
  },
  {
    "text": "thing I wanted to point out is it also uh shows that you know usability of reproducible build uh use case like we",
    "start": "1565720",
    "end": "1573720"
  },
  {
    "text": "are seeing 100% similarity even if the binaries are different um in the hes are",
    "start": "1573720",
    "end": "1579960"
  },
  {
    "text": "different because they're buil in a different build environment but you can still kind of guarantee that you know",
    "start": "1579960",
    "end": "1585520"
  },
  {
    "text": "they have the same functionality so that also so um this Cod genome can be used",
    "start": "1585520",
    "end": "1592679"
  },
  {
    "text": "so so this is a very unique case of you know introduction of um back door that was only present in the distributor bill",
    "start": "1592679",
    "end": "1599520"
  },
  {
    "text": "but what if it was present in also in the you know local bill that I was building so what about that right can we",
    "start": "1599520",
    "end": "1605320"
  },
  {
    "text": "cast that kind of uh changes so for that the other approach we we're proposing is",
    "start": "1605320",
    "end": "1611120"
  },
  {
    "text": "like we're going to do incremental ver version analysis meaning I'm going to compare the current version with the",
    "start": "1611120",
    "end": "1617600"
  },
  {
    "text": "previous version and how much could change so that's what we did and in this graph you can see the early version a",
    "start": "1617600",
    "end": "1625120"
  },
  {
    "text": "lot of changes and that's because it was coming from you know 2007 to 2009 these",
    "start": "1625120",
    "end": "1631120"
  },
  {
    "text": "are all Alpha and beta bills there were a lot of changes happening the probably the project was quite new but after",
    "start": "1631120",
    "end": "1638000"
  },
  {
    "text": "version five the the gene similarity is quite calm and is stable right for",
    "start": "1638000",
    "end": "1644080"
  },
  {
    "text": "decades and suddenly in 2024 there's a huge earthquake and now it's going up and down a lot of",
    "start": "1644080",
    "end": "1650480"
  },
  {
    "text": "changes happening and this is also we could have been used to detect some anomaly there and then of course we need",
    "start": "1650480",
    "end": "1656960"
  },
  {
    "text": "to inspect what's happening there but it's a clear clearly it's anomaly over the decades it was quite stable and",
    "start": "1656960",
    "end": "1662240"
  },
  {
    "text": "suddenly there's a lot of change and turns out like what caused this earthquake is a very simple Comet that",
    "start": "1662240",
    "end": "1670760"
  },
  {
    "text": "says adding some test files right so test file is not supposed to change your binary the final binary it's just for",
    "start": "1670760",
    "end": "1677399"
  },
  {
    "text": "test but somehow is's changing it and that's also another red flag we could have seen uh beforehand all right so so",
    "start": "1677399",
    "end": "1685919"
  },
  {
    "text": "far we see you know we're looking into individual binary or binary pairs to do analysis using C",
    "start": "1685919",
    "end": "1691760"
  },
  {
    "text": "genome but the actual software ecosystem is quite complex it comes with the packages and complex dependency chains",
    "start": "1691760",
    "end": "1699159"
  },
  {
    "text": "and then it's very hard to navigate the security problem in that space But what we believe is that the the fundamental",
    "start": "1699159",
    "end": "1706080"
  },
  {
    "text": "capability that the qu genum provides can be used to tackle some of the use cases there as well and Jong is going to",
    "start": "1706080",
    "end": "1712640"
  },
  {
    "text": "explain you know how we can do that next right thank you I hope we don't see what happened at the keynote so I hope we",
    "start": "1712640",
    "end": "1719240"
  },
  {
    "text": "have proper screen all right so as Dean walk through the technical detail",
    "start": "1719240",
    "end": "1724799"
  },
  {
    "text": "and demonstration so we believe the framework can help to improve the supply",
    "start": "1724799",
    "end": "1729840"
  },
  {
    "text": "chain security and supply chain the whole the pipeline that ecosystem and whenever we talk about",
    "start": "1729840",
    "end": "1735919"
  },
  {
    "text": "software supply chain of course one of the most important standard or popular standard people discuss is Asa software",
    "start": "1735919",
    "end": "1743039"
  },
  {
    "text": "build of material which was also highlighted by executive order so espam at high level is quite simple so it",
    "start": "1743039",
    "end": "1750159"
  },
  {
    "text": "provide all the list of ingredient or the list of component the developer you to build some some some software so",
    "start": "1750159",
    "end": "1757200"
  },
  {
    "text": "common analogy people doing is when you buy a cookie from the store when you back up the envelope you see the all the",
    "start": "1757200",
    "end": "1762679"
  },
  {
    "text": "list of ingredient they used to bake this cookie so similar concept for the software which is really great concept",
    "start": "1762679",
    "end": "1769279"
  },
  {
    "text": "so that they give the confidence for the end user okay I'm getting softare X but",
    "start": "1769279",
    "end": "1774360"
  },
  {
    "text": "the softare X using XY is or something internally so you know which version of Library using it or which license of",
    "start": "1774360",
    "end": "1780679"
  },
  {
    "text": "code being used to develop the software so you can do the maybe comp check security vulnerability management",
    "start": "1780679",
    "end": "1786399"
  },
  {
    "text": "there's a lot of the use case you can build on top of this but again the problem is that sbom is one of the",
    "start": "1786399",
    "end": "1793399"
  },
  {
    "text": "metadata and as we highight the multip time so if the break the the trust TR for the software vendor or metadata is",
    "start": "1793399",
    "end": "1800279"
  },
  {
    "text": "broken there could be a gap and issue and again that would be the case in esound so that's why we highlight it we",
    "start": "1800279",
    "end": "1806880"
  },
  {
    "text": "can we need to trust but at the same time we need a way to verify it's correctness and completeness because",
    "start": "1806880",
    "end": "1813360"
  },
  {
    "text": "each vendor will provide Asam in the end you may see some Json file XML file Asam",
    "start": "1813360",
    "end": "1818440"
  },
  {
    "text": "L all the ingredient but the user do they have the proper way to verify is",
    "start": "1818440",
    "end": "1823480"
  },
  {
    "text": "completeness correctness so what I mean by that is when you get the sbom it leads all the ingredient or the library",
    "start": "1823480",
    "end": "1829679"
  },
  {
    "text": "they use but what if the developer made a mistake so maybe instead of version one it says maybe version point9 or",
    "start": "1829679",
    "end": "1836279"
  },
  {
    "text": "maybe 1.5 or something so maybe the bz mismatch it or sometimes if the developer and this is something that",
    "start": "1836279",
    "end": "1842960"
  },
  {
    "text": "also highlight in the previous recet talk and some of the vendors is using the GPA license code and of course",
    "start": "1842960",
    "end": "1848880"
  },
  {
    "text": "clearly they have the motivation to hide the presence of the library to avoid any legal issues so they may intentionally",
    "start": "1848880",
    "end": "1856000"
  },
  {
    "text": "omit some of the library in the Asa so that's why there could be the issue of correctness and completing the esam so",
    "start": "1856000",
    "end": "1862639"
  },
  {
    "text": "that's why the user need a way to verify the correctness and complete of esam and",
    "start": "1862639",
    "end": "1868159"
  },
  {
    "text": "on the right hand side you see some of the two do simple doer file and we actually try some of the esam generation",
    "start": "1868159",
    "end": "1874279"
  },
  {
    "text": "tool on these two darker images and the one first one is quite simple UB to image you install WG and when you",
    "start": "1874279",
    "end": "1881360"
  },
  {
    "text": "inspect the sbam as expected it is the w g which is obvious but the the right",
    "start": "1881360",
    "end": "1887080"
  },
  {
    "text": "hand side the minus difference is that now we remove the D package database which is used by aptitude the meaning",
    "start": "1887080",
    "end": "1893679"
  },
  {
    "text": "that so now the aptitude doesn't have any information about the WG even though the doer image actually has the WG",
    "start": "1893679",
    "end": "1900440"
  },
  {
    "text": "binary so when we try the spam generation on this doer image surprisingly or unsurprisingly there is",
    "start": "1900440",
    "end": "1906880"
  },
  {
    "text": "no W get in ASA what does this tell us is the many of the tool they use the metadata in",
    "start": "1906880",
    "end": "1913559"
  },
  {
    "text": "this case the package database to generate the Asam the metadata is res source to boost to correct all the",
    "start": "1913559",
    "end": "1920039"
  },
  {
    "text": "ingredient all the information but that could not be the only the information you have to Delow so again we have to",
    "start": "1920039",
    "end": "1927000"
  },
  {
    "text": "trust but at the same time we need to wait to verify otherwise there could be the",
    "start": "1927000",
    "end": "1932720"
  },
  {
    "text": "Gap and that's why using the codium technology what we are doing is we are building large scale knowledge grab in",
    "start": "1932720",
    "end": "1939720"
  },
  {
    "text": "the cloud cloud infrastructure and where we are ingesting large scale of the software into the knowledge grab and",
    "start": "1939720",
    "end": "1946799"
  },
  {
    "text": "most of software of course when you Dean some comment St you get a package and inside the package of course is multiple",
    "start": "1946799",
    "end": "1953480"
  },
  {
    "text": "layer like you have the maybe multiple archive file could be some of them C some of them could be the data file and",
    "start": "1953480",
    "end": "1959480"
  },
  {
    "text": "inside the file as Z mentioned we are going all the way down to the function level to extractor genin so this process",
    "start": "1959480",
    "end": "1966080"
  },
  {
    "text": "we are doing all the file from the try sour and then building the knowledge graph so from the package we unpar the",
    "start": "1966080",
    "end": "1973120"
  },
  {
    "text": "onions to going into the archive file file to the H of the function and generated the or the gin and we do the",
    "start": "1973120",
    "end": "1979639"
  },
  {
    "text": "all this process all the incoming the packages and then we build the large scale of the knowledge gr and what we",
    "start": "1979639",
    "end": "1985559"
  },
  {
    "text": "can do is whenever we have a new packages with using the Gen similarity finding the matches and then using the",
    "start": "1985559",
    "end": "1992440"
  },
  {
    "text": "chain of trust which D highlighted we can find and we can identify which package which component inside of these",
    "start": "1992440",
    "end": "1999840"
  },
  {
    "text": "packages so by building the knowledge grab we can identify the software component and then we can use the",
    "start": "1999840",
    "end": "2005600"
  },
  {
    "text": "technique to verify it so the next part of the demo I'm going to briefly show how we can actually",
    "start": "2005600",
    "end": "2011399"
  },
  {
    "text": "generate it Asom from the unknown RPM packages which could be quite challenging because if the spom",
    "start": "2011399",
    "end": "2017799"
  },
  {
    "text": "generator simply rely on the metadata and we commonly observe we often observe",
    "start": "2017799",
    "end": "2022840"
  },
  {
    "text": "some of the tool they use exact hash of the RPM packages because when you go to the dean or maybe the sento those RPM or",
    "start": "2022840",
    "end": "2031240"
  },
  {
    "text": "the dean packages is quite stable so that's why they using the hash matching to identify what this package it which",
    "start": "2031240",
    "end": "2038480"
  },
  {
    "text": "is quite effective and quite fast but the Gap could be if someone give give you the custom RPM packages in this case",
    "start": "2038480",
    "end": "2045519"
  },
  {
    "text": "we create this random IPM package by mixing different binary and then see whether our actually can identify",
    "start": "2045519",
    "end": "2051679"
  },
  {
    "text": "inside the ingredient so that's I'm going to show in action all right so similar UI as ding",
    "start": "2051679",
    "end": "2058760"
  },
  {
    "text": "show so here we are going Tolo the unknown RPM I just mentioned and RPM",
    "start": "2058760",
    "end": "2064280"
  },
  {
    "text": "package unload and then this is unknown RPM in intentionally remain as unknown",
    "start": "2064280",
    "end": "2069320"
  },
  {
    "text": "because we don't want to give any metadata information to the system and then in the behind the scene it start",
    "start": "2069320",
    "end": "2075040"
  },
  {
    "text": "processing it and again hollyood magic I just speed up for the for the sake of time so what you see is of course high",
    "start": "2075040",
    "end": "2082440"
  },
  {
    "text": "level information F size file type but what is most interesting is when you unpeel the onions you find all the",
    "start": "2082440",
    "end": "2089280"
  },
  {
    "text": "layers like how many kind of files inside well some of them could be data file some of would the documentation",
    "start": "2089280",
    "end": "2095398"
  },
  {
    "text": "file but what we are interesting is in sarm on the right hand side you see the sarm Json format in this case this is a",
    "start": "2095399",
    "end": "2102359"
  },
  {
    "text": "cyon DX format one of the cyon DS spdx common format and this Json file we can",
    "start": "2102359",
    "end": "2108680"
  },
  {
    "text": "download and that can be used for any Downstream task integration so we just download it I'm",
    "start": "2108680",
    "end": "2115200"
  },
  {
    "text": "going to using that as second part of the demo and here so this is summary view about the list of the ingredient or",
    "start": "2115200",
    "end": "2121760"
  },
  {
    "text": "component we found from these packages you can see on each of the low highlight different binary that was identified",
    "start": "2121760",
    "end": "2127400"
  },
  {
    "text": "from this unknown IPM packages it show the verion size F Type and even package Ur and this is on open source from",
    "start": "2127400",
    "end": "2135280"
  },
  {
    "text": "Community from the dependence track where you can unload Asam in this case I'm going to try to unload Asam I just",
    "start": "2135280",
    "end": "2141000"
  },
  {
    "text": "download it and that can be unloaded to the system and then the nice part of the dependence track is you can manage many",
    "start": "2141000",
    "end": "2146800"
  },
  {
    "text": "of the software and their ingredient and another benefit is the this dependence",
    "start": "2146800",
    "end": "2152079"
  },
  {
    "text": "track comes with a lot of the data connector so for example you can connect to the cve and then you can find Maybe",
    "start": "2152079",
    "end": "2157760"
  },
  {
    "text": "if some of the component has a non vulnerability you can associate the CBE so that's how you can manage and",
    "start": "2157760",
    "end": "2164160"
  },
  {
    "text": "maintain all this the software so this is great capability and",
    "start": "2164160",
    "end": "2170280"
  },
  {
    "text": "but this is not the only the application we envisioning so by building Ras and",
    "start": "2170280",
    "end": "2176040"
  },
  {
    "text": "knowledge grab using C technology we trying to support many different use cases by following the chain of trust we",
    "start": "2176040",
    "end": "2183599"
  },
  {
    "text": "describe we can do a lot of very interesting use case we can support from the knowledge graphite so for example",
    "start": "2183599",
    "end": "2189920"
  },
  {
    "text": "maybe some new CV vulnerability find out we can find from the following chain of trust we can find other code they meure",
    "start": "2189920",
    "end": "2197119"
  },
  {
    "text": "the same type of vulnerability of course code similarity doesn't always guarantee this is bogy code because their B maybe",
    "start": "2197119",
    "end": "2203839"
  },
  {
    "text": "across many different file a lot of complex is happening but at least this could be give you early indication about",
    "start": "2203839",
    "end": "2210160"
  },
  {
    "text": "there could be potential issue maybe we want to priortize it and also as a highlighted as SP generation cases we",
    "start": "2210160",
    "end": "2215880"
  },
  {
    "text": "can also use that as a class ation or component identification and also by using the",
    "start": "2215880",
    "end": "2221560"
  },
  {
    "text": "similarity that has been many mware analis Community we can trying to find the back door so these are just few of",
    "start": "2221560",
    "end": "2228160"
  },
  {
    "text": "the Highlight example but you can imagine many of the other interesting use case using this",
    "start": "2228160",
    "end": "2233920"
  },
  {
    "text": "technology so as I it during the during the presentation We Believe coome n",
    "start": "2233920",
    "end": "2241280"
  },
  {
    "text": "graph can really help to improve software supply chain security that's why we decided to open source our C",
    "start": "2241280",
    "end": "2247280"
  },
  {
    "text": "frame workk so that we can work together and then we can also force a v collaboration across commune because",
    "start": "2247280",
    "end": "2254079"
  },
  {
    "text": "there's a lot of software out there when you look at open source it's huge huge and this not something a few people can",
    "start": "2254079",
    "end": "2260400"
  },
  {
    "text": "do it so that's why we on open source and invite other people to work together tackle this issue and by open sourcing",
    "start": "2260400",
    "end": "2266480"
  },
  {
    "text": "it we believe this can help the biger collaboration among the community and then start tackling the bigger issues in",
    "start": "2266480",
    "end": "2272400"
  },
  {
    "text": "supply chain security so about the open source so it's actually already out there public",
    "start": "2272400",
    "end": "2279079"
  },
  {
    "text": "uh it includes two major components the first one is the Cod genome framework itself and then the J audit which is",
    "start": "2279079",
    "end": "2285480"
  },
  {
    "text": "used for supporting you know jar files and Java files for the genome extraction so for the C genome framework we have",
    "start": "2285480",
    "end": "2292280"
  },
  {
    "text": "you know GFF that you saw earlier uh the basic knowledge graph that is needed some CLI tools in the UI and it supports",
    "start": "2292280",
    "end": "2299319"
  },
  {
    "text": "most of the common binary format and architectures and it also includes the optimized version of the uh Canon",
    "start": "2299319",
    "end": "2305119"
  },
  {
    "text": "Equalization so here is the link um please check it out it only requires you know after you gpol git clone only the",
    "start": "2305119",
    "end": "2312480"
  },
  {
    "text": "make start there one command and few few minutes you should have this UI you can",
    "start": "2312480",
    "end": "2318000"
  },
  {
    "text": "uh test with some of your you know use cases um so then for next we also want to support you know the packages like",
    "start": "2318000",
    "end": "2324960"
  },
  {
    "text": "RPM uh and others and also you know different archives that you saw in the",
    "start": "2324960",
    "end": "2330000"
  },
  {
    "text": "second demo which is already present uh in the cloud native version of the Cod genome so so that's also U that what we",
    "start": "2330000",
    "end": "2337440"
  },
  {
    "text": "we hope would be able to in open source so at the very last side we are going to give you QR code so don't worry about it",
    "start": "2337440",
    "end": "2343640"
  },
  {
    "text": "about the link so to conclude our talk these are the three key takeaways so as",
    "start": "2343640",
    "end": "2348920"
  },
  {
    "text": "we highlight in many of the supply chain attack so there is clear inheritance CTIC gap between the code and the",
    "start": "2348920",
    "end": "2355640"
  },
  {
    "text": "metadata and then now the open source qu and framework We Believe can help Bree that Gap so we believe by open sourcing",
    "start": "2355640",
    "end": "2363119"
  },
  {
    "text": "this framework and then using the Corum technology we can improve the supply chain security issue together so with",
    "start": "2363119",
    "end": "2369800"
  },
  {
    "text": "this we are going to conclude our talk and again this are the QR code to our repository and thank you for your",
    "start": "2369800",
    "end": "2375480"
  },
  {
    "text": "attention and due to the time limit I may invite the people to the r the room to discuss any offline conversation if",
    "start": "2375480",
    "end": "2381560"
  },
  {
    "text": "anyone has any follow question or interest to talk about the future collaboration we are happy to talk so",
    "start": "2381560",
    "end": "2387280"
  },
  {
    "text": "thank you for your attention thank you for coming thank you",
    "start": "2387280",
    "end": "2392160"
  }
]