[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "good afternoon welcome to the talk entitled access keys will kill you before you",
    "start": "80",
    "end": "7799"
  },
  {
    "text": "kill the password you are in Mandalay bayf if that's not where you intended to",
    "start": "7799",
    "end": "14879"
  },
  {
    "text": "be if you look behind you there are doors and you can change your location very",
    "start": "14879",
    "end": "19880"
  },
  {
    "text": "easily your speaker this afternoon is L Simon but before we begin a few brief",
    "start": "19880",
    "end": "26439"
  },
  {
    "text": "notes first be sure to stop by the business Hall located in Bayside AB",
    "start": "26439",
    "end": "32398"
  },
  {
    "text": "during the day and for the welcome reception from 1730 to 1900",
    "start": "32399",
    "end": "38160"
  },
  {
    "text": "tonight don't forget the black Haack Arsenal is on in the Palm foyer on level",
    "start": "38160",
    "end": "43920"
  },
  {
    "text": "three and last but not least join us for the pony Awards in Mandalay Bay BCD at",
    "start": "43920",
    "end": "53920"
  },
  {
    "text": "1830 housekeeping note thanks for putting your phone on vibrate",
    "start": "53920",
    "end": "60680"
  },
  {
    "text": "me telling you Thank you means that that's a hint you're supposed to do that it makes it easier for the rest of us to",
    "start": "60680",
    "end": "66640"
  },
  {
    "text": "ignore the ringing while you wait for your voicemail to pick it up because you would never answer your phone in a speaker's talk if you have questions at",
    "start": "66640",
    "end": "74000"
  },
  {
    "text": "the end look around there are six microphones around uh located in in the",
    "start": "74000",
    "end": "79439"
  },
  {
    "text": "back if you look around you and locate the microphone nearest you lights will not like light up around the on the",
    "start": "79439",
    "end": "85640"
  },
  {
    "text": "floor to direct you to the nearest microphone you have to use your own eyes uh if if you forget he'll L will repeat",
    "start": "85640",
    "end": "92040"
  },
  {
    "text": "the question but we'd rather have them recorded on the mics without further Ado L",
    "start": "92040",
    "end": "98840"
  },
  {
    "text": "Simon uh thanks right for the intro so uh welcome everyone to the um",
    "start": "101360",
    "end": "107640"
  },
  {
    "start": "102000",
    "end": "146000"
  },
  {
    "text": "presentation title access kill will kill you before you kill the password um my",
    "start": "107640",
    "end": "112680"
  },
  {
    "text": "name is l Simon I'm a principal security engineer with NCC group um been doing a",
    "start": "112680",
    "end": "119039"
  },
  {
    "text": "lot of um AWS related research uh as part of my work um been developing a",
    "start": "119039",
    "end": "125600"
  },
  {
    "text": "tool that allows um um configuration review for AWS environment called Scout 2 and I'm also",
    "start": "125600",
    "end": "132560"
  },
  {
    "text": "maintaining another GitHub repository called AWS recipes and um that contains",
    "start": "132560",
    "end": "139080"
  },
  {
    "text": "a variety of tools and I am policies um and a number of those will be um talked",
    "start": "139080",
    "end": "144480"
  },
  {
    "text": "about during that presentation so what is that all about um the goal is to present hardening",
    "start": "144480",
    "end": "150879"
  },
  {
    "start": "146000",
    "end": "187000"
  },
  {
    "text": "solution for AWS environments that I've been uh implementing and recommending to people um and also to demonstrate how",
    "start": "150879",
    "end": "158680"
  },
  {
    "text": "accessible those are even though most of the time I don't see them being implemented and",
    "start": "158680",
    "end": "163800"
  },
  {
    "text": "used um we first going to start with the uh talking about the security around",
    "start": "163800",
    "end": "170239"
  },
  {
    "text": "password and access keys in AWS specifically then uh we're gonna dig",
    "start": "170239",
    "end": "175280"
  },
  {
    "text": "into um I am policies and uh go through a few of those and finally I'll describe",
    "start": "175280",
    "end": "181560"
  },
  {
    "text": "a few tools that can be used to um improve your security if you're an adob guas",
    "start": "181560",
    "end": "187280"
  },
  {
    "start": "187000",
    "end": "258000"
  },
  {
    "text": "user so the security of password and uh access keys",
    "start": "187280",
    "end": "192879"
  },
  {
    "text": "so what to uh understand is that uh in the traditional data center on premises",
    "start": "192879",
    "end": "199000"
  },
  {
    "text": "word um security is um looks like that you have uh guards everywhere you have",
    "start": "199000",
    "end": "206400"
  },
  {
    "text": "fencing around uh the data center you have uh badges that um uh and you have",
    "start": "206400",
    "end": "213400"
  },
  {
    "text": "fingerprint readers Etc so you have a lot of physical security around your",
    "start": "213400",
    "end": "218799"
  },
  {
    "text": "data and your um servers however um in the cloud it looks more something like",
    "start": "218799",
    "end": "224200"
  },
  {
    "text": "that where you just go to the gate uh gives your password and uh you're uh allowed to uh be in and once you're in",
    "start": "224200",
    "end": "232360"
  },
  {
    "text": "uh it's important to understand that uh the credential gives you access to everything because you're managing your",
    "start": "232360",
    "end": "238840"
  },
  {
    "text": "infrastructure of web app um and so that uh web app which is uh in AWS the web",
    "start": "238840",
    "end": "245799"
  },
  {
    "text": "console gives you access to the store data datab bases application servers",
    "start": "245799",
    "end": "251280"
  },
  {
    "text": "firewall logging monitoring systems Etc and um so it's very important to secure",
    "start": "251280",
    "end": "257600"
  },
  {
    "text": "these um so even though the security model for on premises and Cloud are very",
    "start": "257600",
    "end": "264199"
  },
  {
    "start": "258000",
    "end": "288000"
  },
  {
    "text": "different there are strong access controls that exist for cloud um and I'm going to try to uh",
    "start": "264199",
    "end": "270360"
  },
  {
    "text": "talk about some of these today um for for example you can require MFA um",
    "start": "270360",
    "end": "275880"
  },
  {
    "text": "enforce short session timeouts uh have IP based restriction to access the apis",
    "start": "275880",
    "end": "281120"
  },
  {
    "text": "ETC and um this talk I'm mostly going to be talking about requiring MFA uh",
    "start": "281120",
    "end": "286600"
  },
  {
    "text": "consistently in AWS so when you authenticate with AWS",
    "start": "286600",
    "end": "291800"
  },
  {
    "text": "you essentially interact with two different Services the first is called identity and I am uh and access",
    "start": "291800",
    "end": "298199"
  },
  {
    "text": "management I am uh it's basically AWS directory where you manage your users",
    "start": "298199",
    "end": "303880"
  },
  {
    "text": "and uh groups it's also where you implement your access controls uh via the means of",
    "start": "303880",
    "end": "310199"
  },
  {
    "text": "policies and credentials um I am credentials are valid until a user",
    "start": "310199",
    "end": "315400"
  },
  {
    "text": "either deletes them or rotates them um as opposed to the security token service",
    "start": "315400",
    "end": "321400"
  },
  {
    "text": "which is um a service that issues temporary credentials where you can also uh",
    "start": "321400",
    "end": "327240"
  },
  {
    "text": "actually tie limited privileges to this credentials um and typically the validity uh goes between 15 minutes and",
    "start": "327240",
    "end": "334639"
  },
  {
    "text": "36 hours um so there are mostly two ways",
    "start": "334639",
    "end": "340720"
  },
  {
    "start": "336000",
    "end": "372000"
  },
  {
    "text": "people interact with AWS uh it's either via the web console where you provide your Ion ID username and password and",
    "start": "340720",
    "end": "347319"
  },
  {
    "text": "you have access to the web console uh and the other way is via the API uh and uh usually either using the",
    "start": "347319",
    "end": "355440"
  },
  {
    "text": "awli or other uh tools that rely on uh the the AWS API and access through those",
    "start": "355440",
    "end": "363560"
  },
  {
    "text": "is done using long lived I am credentials basically um an access key ID and the secret access key that",
    "start": "363560",
    "end": "369560"
  },
  {
    "text": "corresponds to that ID uh so if we look at the uh try to",
    "start": "369560",
    "end": "375120"
  },
  {
    "start": "372000",
    "end": "527000"
  },
  {
    "text": "compare the security of these two type of credentials password and access Keys um we uh so on the left I put a few type",
    "start": "375120",
    "end": "384319"
  },
  {
    "text": "of uh potential security issues or security features that exist um in both",
    "start": "384319",
    "end": "390560"
  },
  {
    "text": "uh or like in the traditional and uh Cloud word and uh I try to compare the",
    "start": "390560",
    "end": "396280"
  },
  {
    "text": "security of both type of credential so uh the use of unique and random values",
    "start": "396280",
    "end": "401520"
  },
  {
    "text": "for passwords um it's a maybe hopefully your uh administrators do that for",
    "start": "401520",
    "end": "406919"
  },
  {
    "text": "Access Keys it is because AWS generates that for you um sharing between users",
    "start": "406919",
    "end": "413360"
  },
  {
    "text": "it's so may be in both case where password and access key may actually be shared between multiple of uh several of",
    "start": "413360",
    "end": "419199"
  },
  {
    "text": "your employees um hard coding in source code for AWS passwords it's uh never the",
    "start": "419199",
    "end": "425000"
  },
  {
    "text": "case as far as I can tell because uh those there's no real good way to actually use your password and interact",
    "start": "425000",
    "end": "431280"
  },
  {
    "text": "with the API so most people don't use these credentials in source code however for Access Keys it's a really common",
    "start": "431280",
    "end": "437720"
  },
  {
    "text": "practice um storing on posted notes um it's a no no for every type it's uh",
    "start": "437720",
    "end": "444599"
  },
  {
    "text": "typically AWS administrator tend to be pretty good with that nowadays um storing in PL text files um does not",
    "start": "444599",
    "end": "451759"
  },
  {
    "text": "happen with passwords either however um for Access Keys it is done because that's how access keys are designed to",
    "start": "451759",
    "end": "458639"
  },
  {
    "text": "be used you actually have to write them in a specific file for the aw ssdk to look for these values um as far as",
    "start": "458639",
    "end": "466800"
  },
  {
    "text": "rotation goes um you uh have sometimes users who rotate their passwords um",
    "start": "466800",
    "end": "474080"
  },
  {
    "text": "typically access keys are not rotated and as far as uh enforcing rotation you actually can do that in AWS uh via the",
    "start": "474080",
    "end": "481639"
  },
  {
    "text": "console it's just a checkbox that you need to take however for Access ke you cannot do that and uh the last three uh",
    "start": "481639",
    "end": "490440"
  },
  {
    "text": "values are related to the uh availability of MFA in both cases MFA is",
    "start": "490440",
    "end": "496199"
  },
  {
    "text": "available um if you create an MFA token for a particular users um when the login",
    "start": "496199",
    "end": "504479"
  },
  {
    "text": "with their password MF is actually enforced and users are required to enter",
    "start": "504479",
    "end": "509599"
  },
  {
    "text": "an MFA code however it is not the case for using an access key and finally um",
    "start": "509599",
    "end": "516360"
  },
  {
    "text": "is there a way to enforce MFA consistently and easily in AWS right now um it's a no for both",
    "start": "516360",
    "end": "525040"
  },
  {
    "text": "cases um so the takeaway from that is that",
    "start": "525040",
    "end": "530800"
  },
  {
    "start": "527000",
    "end": "677000"
  },
  {
    "text": "usually AWS admins have descent password uh behaviors they use password manager",
    "start": "530800",
    "end": "536360"
  },
  {
    "text": "uh and they enable MFA um and access are actually the weakest link in your AWS",
    "start": "536360",
    "end": "541920"
  },
  {
    "text": "environment uh they typically are found everywhere uh in GitHub in internally",
    "start": "541920",
    "end": "547040"
  },
  {
    "text": "accessible configuration files on files are stored on every single of your dev's",
    "start": "547040",
    "end": "553160"
  },
  {
    "text": "laptop because they need that in order to actually do their work um and so",
    "start": "553160",
    "end": "560160"
  },
  {
    "text": "um what we recommend is that actually you require all human or employees in",
    "start": "560160",
    "end": "566360"
  },
  {
    "text": "your company to use MFA regardless of how they the API and so for password",
    "start": "566360",
    "end": "572720"
  },
  {
    "text": "base authentication you just need to enable MFA and they will be prompted for an MFA code however if they delete that",
    "start": "572720",
    "end": "579320"
  },
  {
    "text": "one token from their uh user configuration they will be authorized to log in again with MFA um with access key",
    "start": "579320",
    "end": "586320"
  },
  {
    "text": "based uh authentication you actually need to create a policy and attach the policy to the user or a group the user",
    "start": "586320",
    "end": "592800"
  },
  {
    "text": "belongs to um and using of that policy will actually address the problem uh",
    "start": "592800",
    "end": "598680"
  },
  {
    "text": "above uh you could pre deny them from deleting an MFA device and so uh you",
    "start": "598680",
    "end": "605040"
  },
  {
    "text": "could prevent the user from bypassing the need to have MFA so if we compare authentication in",
    "start": "605040",
    "end": "612160"
  },
  {
    "text": "AWS once you have MFA um in red is highlighted I highlighted the uh part",
    "start": "612160",
    "end": "617920"
  },
  {
    "text": "that change so for the web console you need to uh provide an extra MFA code when you authenticate um and when you",
    "start": "617920",
    "end": "625640"
  },
  {
    "text": "use a common line or a third party tool that read value use from the uh uh",
    "start": "625640",
    "end": "632040"
  },
  {
    "text": "configuration file you also need to uh make a call to the STS Service First uh",
    "start": "632040",
    "end": "638360"
  },
  {
    "text": "providing your MFA code and that SS service will return you a new access key",
    "start": "638360",
    "end": "643399"
  },
  {
    "text": "that actually starts with Asia as opposed to a k a for long L credentials",
    "start": "643399",
    "end": "649920"
  },
  {
    "text": "a new secret access key and a session token and those credentials issued by STS you'll be able to use to access any",
    "start": "649920",
    "end": "657720"
  },
  {
    "text": "other service in AWS so um in short you exchange your long",
    "start": "657720",
    "end": "664160"
  },
  {
    "text": "LIF credentials plus your MFA code to receive short LIF credentials which is um how uh both the console and uh tools",
    "start": "664160",
    "end": "673839"
  },
  {
    "text": "will work um once you have MFA in place so now that I H talked about the",
    "start": "673839",
    "end": "682279"
  },
  {
    "start": "677000",
    "end": "943000"
  },
  {
    "text": "um security of access keys and password I'm going to talk about the various IM am policies that I recommend to use in",
    "start": "682279",
    "end": "688240"
  },
  {
    "text": "order to actually use MFA for your environment so a quick reminder about",
    "start": "688240",
    "end": "696120"
  },
  {
    "text": "policies um a policy is a set of permissions that's defined as a list of statements and it's written in Json um a",
    "start": "696120",
    "end": "703760"
  },
  {
    "text": "statement is a rule and it's defined by a number of keys the most important are",
    "start": "703760",
    "end": "709560"
  },
  {
    "text": "done here first you have an effect that can be allow or deny you have an action",
    "start": "709560",
    "end": "714600"
  },
  {
    "text": "or a list of action resource that uh is the object that the action applies to",
    "start": "714600",
    "end": "720720"
  },
  {
    "text": "and finally you have a condition and what's very interesting is to actually combine the Deni effect with a condition",
    "start": "720720",
    "end": "729000"
  },
  {
    "text": "and that's what's going to give you the possibility to enforce MFA in your",
    "start": "729000",
    "end": "734199"
  },
  {
    "text": "environment so as a reminder on how IM policies are interpreted um for a given",
    "start": "734199",
    "end": "740959"
  },
  {
    "text": "user you start by evaluating all applicable policies so their user and",
    "start": "740959",
    "end": "747120"
  },
  {
    "text": "group policies and you first look for an explicit deny so if you have a deny statement for the action that is",
    "start": "747120",
    "end": "754279"
  },
  {
    "text": "required the final decision will be a deny if you do not have an explicit deny",
    "start": "754279",
    "end": "760040"
  },
  {
    "text": "you'll look for an explicit allow and if you find one the user will be allowed to",
    "start": "760040",
    "end": "765360"
  },
  {
    "text": "do the action and finally um if you don't find any uh deny or alow the",
    "start": "765360",
    "end": "771079"
  },
  {
    "text": "default decision will be a deny so the first policy uh will",
    "start": "771079",
    "end": "777240"
  },
  {
    "text": "actually use that deny effect we also deny all actions and we're going to use two conditions first we're going to",
    "start": "777240",
    "end": "784079"
  },
  {
    "text": "require that the multiactor of AG or multiactor or prison key exist and then",
    "start": "784079",
    "end": "790800"
  },
  {
    "text": "we're going to also set a limit on when the MFA authentication uh must have",
    "start": "790800",
    "end": "796160"
  },
  {
    "text": "happened uh otherwise the action will be uh denied so if you look at that policy",
    "start": "796160",
    "end": "802760"
  },
  {
    "text": "you can see that you have two statements the first statement up there um sets",
    "start": "802760",
    "end": "807839"
  },
  {
    "text": "that you deny all actions on all resources if the key multiactor of age",
    "start": "807839",
    "end": "814720"
  },
  {
    "text": "is not present and the second statement has uh",
    "start": "814720",
    "end": "820800"
  },
  {
    "text": "a requirement on the numeric value of that key and in that case uh it says that if the age of the authentication",
    "start": "820800",
    "end": "828720"
  },
  {
    "text": "was uh older than 8 hours uh you will also deny all actions and by taking that",
    "start": "828720",
    "end": "836279"
  },
  {
    "text": "action uh that policy and applying it to users you can uh achieve MFA protected",
    "start": "836279",
    "end": "842800"
  },
  {
    "text": "API access in your environment so how to use that policy um I like to recommend",
    "start": "842800",
    "end": "848680"
  },
  {
    "text": "the use of category groups uh and by category groups I mean uh this type of example all users all human users or",
    "start": "848680",
    "end": "856519"
  },
  {
    "text": "service users and so in that particular case you want to enforce MFA for all human users which means any IM am user",
    "start": "856519",
    "end": "864440"
  },
  {
    "text": "associated with uh a person either an employee or a contractor",
    "start": "864440",
    "end": "869759"
  },
  {
    "text": "um that works for you in your environment so you're going to create that all human User Group Place all your",
    "start": "869759",
    "end": "877920"
  },
  {
    "text": "IM users in that group and attach the policy to this group unfortunately if you do that you're going to be locked",
    "start": "877920",
    "end": "884519"
  },
  {
    "text": "out or most of your user will be locked out because it's going to be a very strict um policy most of or many of your",
    "start": "884519",
    "end": "891759"
  },
  {
    "text": "user may not have uh configured MFA already properly so um unfortunately",
    "start": "891759",
    "end": "898160"
  },
  {
    "text": "deploying MFA protected API access is a sort of requires uh a slower type of um",
    "start": "898160",
    "end": "905600"
  },
  {
    "text": "work so um that policy works but as I said it may be too restricted for some",
    "start": "905600",
    "end": "912120"
  },
  {
    "text": "AWS users um one of the drawback is that with that particular policy all I am",
    "start": "912120",
    "end": "918800"
  },
  {
    "text": "management all management of credential has to be done by users who have I am",
    "start": "918800",
    "end": "923880"
  },
  {
    "text": "admin permissions and the credentials are generated on a limited number of machines with correspond to the machines",
    "start": "923880",
    "end": "930160"
  },
  {
    "text": "used by these IM administrators so um you end up with a single point of",
    "start": "930160",
    "end": "936079"
  },
  {
    "text": "failure here where your IM ad Mees actually are become a very valid Target",
    "start": "936079",
    "end": "941360"
  },
  {
    "text": "U for a potential attack care so as a suggestion for a better workflow um we recommend to work as this",
    "start": "941360",
    "end": "949480"
  },
  {
    "start": "943000",
    "end": "1003000"
  },
  {
    "text": "which is the an i admin creates a new user uh that generate temporary password for them and share it um using their",
    "start": "949480",
    "end": "957959"
  },
  {
    "text": "favorite um messaging technology the user connects to the web console and is",
    "start": "957959",
    "end": "963680"
  },
  {
    "text": "required to change their password that then enroll with MFA on their own uh and",
    "start": "963680",
    "end": "971399"
  },
  {
    "text": "uh they cannot actually access any other service or any other action than uh the the change password and the enable MFA",
    "start": "971399",
    "end": "978920"
  },
  {
    "text": "actions until they authenticate with MFA so they will on the first time they use",
    "start": "978920",
    "end": "984319"
  },
  {
    "text": "the console they will actually have to log out and log back in in order to gain access to the rest of your",
    "start": "984319",
    "end": "990160"
  },
  {
    "text": "environment and so that provide Advantage is that your administrators actually never know your user",
    "start": "990160",
    "end": "996079"
  },
  {
    "text": "credentials um and you also lower their workload because users can manage their own credentials",
    "start": "996079",
    "end": "1002480"
  },
  {
    "text": "now so in order to get that better workflow in place you need two new policies the first one will allow users",
    "start": "1002480",
    "end": "1009240"
  },
  {
    "start": "1003000",
    "end": "1284000"
  },
  {
    "text": "to manage their own credentials and um you need to make sure that it's only valid for them and the third policy is a",
    "start": "1009240",
    "end": "1018160"
  },
  {
    "text": "policy that and force it MFA but it's going to be slightly looser than before",
    "start": "1018160",
    "end": "1023440"
  },
  {
    "text": "because we're not going to be denying every single action we're going to allow the change password and the enable MFA",
    "start": "1023440",
    "end": "1030000"
  },
  {
    "text": "action so that they can do that before MFA is in place so the uh second policy",
    "start": "1030000",
    "end": "1035918"
  },
  {
    "text": "to allow credential management um here you can uh see several uh things first",
    "start": "1035919",
    "end": "1042120"
  },
  {
    "text": "of all uh you see that the resource now is uh using a variable uh the dollar",
    "start": "1042120",
    "end": "1048558"
  },
  {
    "text": "sign followed by AWS usern name and that means that all the above actions can",
    "start": "1048559",
    "end": "1055000"
  },
  {
    "text": "only be performed on the user that is currently logged in um we have two",
    "start": "1055000",
    "end": "1060520"
  },
  {
    "text": "different resources because MFA um virtual devices are manag under MFA",
    "start": "1060520",
    "end": "1066120"
  },
  {
    "text": "slash and users are managed under user slash so depending on the action for MFA",
    "start": "1066120",
    "end": "1072320"
  },
  {
    "text": "devices you're going to have MFA slash as a resource and for users you're going",
    "start": "1072320",
    "end": "1078240"
  },
  {
    "text": "to have user SL for the resource for for users um we authorize them to uh do all",
    "start": "1078240",
    "end": "1087080"
  },
  {
    "text": "action for the access Keys all action on passwords all action on MFA devices and on their login profile and we also allow",
    "start": "1087080",
    "end": "1094960"
  },
  {
    "text": "them to create and delete virtual MFA devices um so um yeah for R I use Wild",
    "start": "1094960",
    "end": "1105280"
  },
  {
    "text": "Card uh but in practice I actually recommend to explicitly listing all actions so that you don't have uh a bad",
    "start": "1105280",
    "end": "1112880"
  },
  {
    "text": "um surprise where you realize that a particular sensitive or dangerous",
    "start": "1112880",
    "end": "1118320"
  },
  {
    "text": "actions have authorized uh without you uh realizing that um so the third policy which is the",
    "start": "1118320",
    "end": "1127200"
  },
  {
    "text": "the new version of the enforcement of MFA um still uses the deny effect",
    "start": "1127200",
    "end": "1132919"
  },
  {
    "text": "however now we use a not action um key as opposed to the action and what that",
    "start": "1132919",
    "end": "1139120"
  },
  {
    "text": "means is that we deny every action except those and so we still have the same two",
    "start": "1139120",
    "end": "1147240"
  },
  {
    "text": "conditions uh the uh existence of MFA and the maximum age of eight8 hours and",
    "start": "1147240",
    "end": "1152760"
  },
  {
    "text": "now we do have a list of actions that we allow to bypass the MFA requirement for",
    "start": "1152760",
    "end": "1158919"
  },
  {
    "text": "so if we have a closer look at the uh list of not actions um here is a",
    "start": "1158919",
    "end": "1164200"
  },
  {
    "text": "breakdown of how that works um you have the change password action which allows to change the temporary password upon",
    "start": "1164200",
    "end": "1170880"
  },
  {
    "text": "the first login you then allow MFA enrollment allowing the create virtual",
    "start": "1170880",
    "end": "1176280"
  },
  {
    "text": "MFA device and the enable MFA device um and uh for um convenience",
    "start": "1176280",
    "end": "1185480"
  },
  {
    "text": "depending on whether you work with CLI or the web console you're going to need some extra action that are authorized uh",
    "start": "1185480",
    "end": "1192000"
  },
  {
    "text": "you're going to either need the IM am gate user so that you know what the username is or if you work via the web",
    "start": "1192000",
    "end": "1197760"
  },
  {
    "text": "console you're going to have to authorize users to list users list",
    "start": "1197760",
    "end": "1203159"
  },
  {
    "text": "existing MFA devices and list virtual MFA devices so uh that policies uh works as",
    "start": "1203159",
    "end": "1210559"
  },
  {
    "text": "a trust on first use um um security scheme where uh you",
    "start": "1210559",
    "end": "1218120"
  },
  {
    "text": "require that that trans exchanging that one temporary password uh you hope that",
    "start": "1218120",
    "end": "1223559"
  },
  {
    "text": "it's secure and then the user chances it right away and once this is done you have trust that the user actually chose",
    "start": "1223559",
    "end": "1230720"
  },
  {
    "text": "a strong password and also enabled MFA um and um to prevent the fact that a",
    "start": "1230720",
    "end": "1239200"
  },
  {
    "text": "user may uh disable MF the MFA requirement actually you prevent um you",
    "start": "1239200",
    "end": "1246080"
  },
  {
    "text": "forbid users from deleting and disabling MFA devices uh that's a pretty frequent",
    "start": "1246080",
    "end": "1251120"
  },
  {
    "text": "request so we recommend that I am admins do that instead of users and by doing",
    "start": "1251120",
    "end": "1256280"
  },
  {
    "text": "that you actually get two appoint point where uh if a given user session was",
    "start": "1256280",
    "end": "1263039"
  },
  {
    "text": "compromised um the attacker would not be able to delete the MFA device create a",
    "start": "1263039",
    "end": "1268480"
  },
  {
    "text": "new one and then gain access to the user's um MFA device uh or like the the",
    "start": "1268480",
    "end": "1274679"
  },
  {
    "text": "new seed that is used to generate the MFA code because that will never be",
    "start": "1274679",
    "end": "1279880"
  },
  {
    "text": "authorized to be reset by the user itself so as far as tools goes uh I'm",
    "start": "1279880",
    "end": "1287279"
  },
  {
    "text": "going to be talking uh through three different tools the first one is uh a command line tool that uh created to",
    "start": "1287279",
    "end": "1293000"
  },
  {
    "text": "enable MFA uh you can have it by cloning that awsp g repo from GitHub and if you",
    "start": "1293000",
    "end": "1300320"
  },
  {
    "text": "just run the uh AWS am enable MFA uh tool giving the profile that you want to",
    "start": "1300320",
    "end": "1306760"
  },
  {
    "text": "use um is going to first create a new MFA device using making a c calls to",
    "start": "1306760",
    "end": "1313039"
  },
  {
    "text": "AWS then it's going to display the QR code in the console or in the browser depending on the users laptop",
    "start": "1313039",
    "end": "1319320"
  },
  {
    "text": "configuration uh then promp for two consecutive codes to enable MFA which is",
    "start": "1319320",
    "end": "1324440"
  },
  {
    "text": "what AWS requires and finally it's going to save the mfal device in the local",
    "start": "1324440",
    "end": "1329919"
  },
  {
    "text": "configuration file so if you were to look at your local configuration file before and after you run that you will",
    "start": "1329919",
    "end": "1337039"
  },
  {
    "start": "1330000",
    "end": "1361000"
  },
  {
    "text": "see that there's a new key that is created in into thews credentials uh file it's called",
    "start": "1337039",
    "end": "1345480"
  },
  {
    "text": "AWS smfs serial this value is not standard is not supported by the aw ssdk",
    "start": "1345480",
    "end": "1351960"
  },
  {
    "text": "but um add think that over there is uh makes it really helpful for running uh",
    "start": "1351960",
    "end": "1357799"
  },
  {
    "text": "call to SCS afterwards so now that you enable MF for",
    "start": "1357799",
    "end": "1363880"
  },
  {
    "start": "1361000",
    "end": "1415000"
  },
  {
    "text": "your users you want to allow them to easily initiate STS sessions and",
    "start": "1363880",
    "end": "1368919"
  },
  {
    "text": "configure um their local laptop to actually use the SCS credentials as",
    "start": "1368919",
    "end": "1375480"
  },
  {
    "text": "opposed to the Long Live credential that cannot do anything so um you're going to run this um tool that is called inits",
    "start": "1375480",
    "end": "1383720"
  },
  {
    "text": "sessions providing your profile name as well and what it's going to do it's going to prompt you for an MFA code um",
    "start": "1383720",
    "end": "1390240"
  },
  {
    "text": "and it's going to send um a request that was uh um sign using your secret key",
    "start": "1390240",
    "end": "1397559"
  },
  {
    "text": "your access key ID and uh it's going to also contain your MFA serial number and",
    "start": "1397559",
    "end": "1403320"
  },
  {
    "text": "that MFA code to the SCS API SCS will return new cred if everything's valid",
    "start": "1403320",
    "end": "1410400"
  },
  {
    "text": "and the tool is going to save those into your local aw/ credentials file so if we",
    "start": "1410400",
    "end": "1415559"
  },
  {
    "start": "1415000",
    "end": "1475000"
  },
  {
    "text": "look at the changes here um it's a lot bigger than before and the way it works",
    "start": "1415559",
    "end": "1420720"
  },
  {
    "text": "is that the initial long LIF credentials have been moved to a newly named profile",
    "start": "1420720",
    "end": "1427159"
  },
  {
    "text": "called um the original profile name- no MFA and all the STS crti should have",
    "start": "1427159",
    "end": "1433320"
  },
  {
    "text": "been stored under the uh the original profile name so now you have the new access key ID the new secret key and the",
    "start": "1433320",
    "end": "1440240"
  },
  {
    "text": "AWS session token as well and um now that you have this if",
    "start": "1440240",
    "end": "1446679"
  },
  {
    "text": "you were to run any call to the AWS apis that you have access to the uh for",
    "start": "1446679",
    "end": "1453600"
  },
  {
    "text": "example the AWS API uh CLI would fetch the SCS credentials and use these to",
    "start": "1453600",
    "end": "1459279"
  },
  {
    "text": "sign requests and everything will work fine because uh your STS credentials",
    "start": "1459279",
    "end": "1464760"
  },
  {
    "text": "have are valid and it's going to be good until the 8 hour uh threshold that you",
    "start": "1464760",
    "end": "1469799"
  },
  {
    "text": "set in your users policy um to start denying actions",
    "start": "1469799",
    "end": "1475360"
  },
  {
    "start": "1475000",
    "end": "1507000"
  },
  {
    "text": "again so um so as I said there are two profiles now uh one that contains the",
    "start": "1475360",
    "end": "1481080"
  },
  {
    "text": "long LIF credentials and one that has the STS credentials um the tool is smart",
    "start": "1481080",
    "end": "1486880"
  },
  {
    "text": "enough to know that if you need to renew your uh session it's going to use the uh long LIF credential stored under the DH",
    "start": "1486880",
    "end": "1493960"
  },
  {
    "text": "new MFA and um if necessary um you you need to make any sort of Calles using",
    "start": "1493960",
    "end": "1500120"
  },
  {
    "text": "these long LIF credentials they are accessible using the uh Dash no MFA",
    "start": "1500120",
    "end": "1505480"
  },
  {
    "text": "profile now and the final uh tool that I want to talk is not entirely related to MFA but",
    "start": "1505480",
    "end": "1512279"
  },
  {
    "start": "1507000",
    "end": "1587000"
  },
  {
    "text": "uh it's related to one of the uh security Gap that I mentioned earlier with access Keys the fact that they're",
    "start": "1512279",
    "end": "1518440"
  },
  {
    "text": "uh pretty much never rotated so um I created a new a third tool that's called",
    "start": "1518440",
    "end": "1524039"
  },
  {
    "text": "rotate my key and what happens is that when when you run that tool it BAS basically makes a call to AWS creates a",
    "start": "1524039",
    "end": "1530799"
  },
  {
    "text": "new key stores it in your file and uh deletes the old key that you used to",
    "start": "1530799",
    "end": "1535919"
  },
  {
    "text": "have in the event that you had MFA enabled it's actually going to verify that the new key is valid it's going to",
    "start": "1535919",
    "end": "1542120"
  },
  {
    "text": "prompt you for an MFA code uh receive new SCS tokens and use this token to",
    "start": "1542120",
    "end": "1547480"
  },
  {
    "text": "delete the uh previous key to make sure that your con seal only has one key and that next time you want to run that tool",
    "start": "1547480",
    "end": "1553799"
  },
  {
    "text": "is going to work fine so if we to look at uh",
    "start": "1553799",
    "end": "1559520"
  },
  {
    "text": "thews credentials file after that you can see that um so in that case I had",
    "start": "1559520",
    "end": "1565520"
  },
  {
    "text": "MFA enabled so uh the uh long LIF credentials under uh the access key ID",
    "start": "1565520",
    "end": "1572120"
  },
  {
    "text": "and the secret access key have changed and uh you can also see that the new um",
    "start": "1572120",
    "end": "1578399"
  },
  {
    "text": "actually the new key ID and the new uh secret access key under the short lft",
    "start": "1578399",
    "end": "1584039"
  },
  {
    "text": "credential have been uh changed as well so as takeaway from that talk I'd",
    "start": "1584039",
    "end": "1590279"
  },
  {
    "start": "1587000",
    "end": "1638000"
  },
  {
    "text": "like to highlight that in AWS en environment access keys are the root cause for many if not most incidents um",
    "start": "1590279",
    "end": "1598159"
  },
  {
    "text": "so it's very important to understand that um even though you have users that are well educated regarding uh the",
    "start": "1598159",
    "end": "1605120"
  },
  {
    "text": "security around passwords they do have uh plain Tex credential stored on their laptops and uh that's most of the time",
    "start": "1605120",
    "end": "1612440"
  },
  {
    "text": "overlooked by uh many users in AWS um it's important to know that you",
    "start": "1612440",
    "end": "1618240"
  },
  {
    "text": "you can actually enforce MFA for both API and web console access uh and uh you",
    "start": "1618240",
    "end": "1623840"
  },
  {
    "text": "can do that using the powerful Deni statements and creating special uh policies and there are also tools that",
    "start": "1623840",
    "end": "1631000"
  },
  {
    "text": "exist to allow seamless work when working with uh uh MFA enforc API access",
    "start": "1631000",
    "end": "1636960"
  },
  {
    "text": "in AWS so uh that's it for this uh talk and do you have any",
    "start": "1636960",
    "end": "1644039"
  },
  {
    "start": "1638000",
    "end": "1917000"
  },
  {
    "text": "question yeah",
    "start": "1644720",
    "end": "1648720"
  },
  {
    "text": "so the the question is uh do you the users have access to rotating their key and are they challenge prior to that um",
    "start": "1654279",
    "end": "1662240"
  },
  {
    "text": "if you attach that one policy that allows them to ro uh create and delete",
    "start": "1662240",
    "end": "1667760"
  },
  {
    "text": "keys they will be authorized to do that uh it depends on what privileges you give to the user as far as being",
    "start": "1667760",
    "end": "1674640"
  },
  {
    "text": "challenged before that um they are not if you enable uh MFA and that and run",
    "start": "1674640",
    "end": "1681120"
  },
  {
    "text": "that one tool it will prompt you for an MFA code to validate the new key but they are not challenge uh um there will",
    "start": "1681120",
    "end": "1689360"
  },
  {
    "text": "uh if you have a valid STS sessions you uh there will be authorized to rotate",
    "start": "1689360",
    "end": "1695000"
  },
  {
    "text": "their key if they did not initiate an SCS session before and you required MFA",
    "start": "1695000",
    "end": "1701000"
  },
  {
    "text": "they will be denied because the uh credentials used to rotate their key will not meet the requirements that you",
    "start": "1701000",
    "end": "1708399"
  },
  {
    "text": "require MF API access",
    "start": "1708399",
    "end": "1713880"
  },
  {
    "text": "yeah any other questions",
    "start": "1714240",
    "end": "1720840"
  },
  {
    "text": "yeah so the question is uh can you do a fa uh or can you work with that with",
    "start": "1735159",
    "end": "1741519"
  },
  {
    "text": "service account that are used by or configured on machines where there's no nobody to actually enter an MFA code or",
    "start": "1741519",
    "end": "1748960"
  },
  {
    "text": "do any sort of uh periodic work um you cannot the uh the right way to do that",
    "start": "1748960",
    "end": "1755880"
  },
  {
    "text": "on in AWS if you run code on an N2 instance is to attach an IAM roll to",
    "start": "1755880",
    "end": "1761000"
  },
  {
    "text": "that instance and by doing that the instance will be provided with valid STS",
    "start": "1761000",
    "end": "1767039"
  },
  {
    "text": "credentials automatic iws does that for you um and um so what",
    "start": "1767039",
    "end": "1772679"
  },
  {
    "text": "you need to do then is just uh use an SDK that knows where to read the STS",
    "start": "1772679",
    "end": "1778600"
  },
  {
    "text": "credentials on an N2 instance um most SDK do nowadays as long as you use an up",
    "start": "1778600",
    "end": "1784399"
  },
  {
    "text": "to-date version and uh and you will actually have no management to do uh AWS",
    "start": "1784399",
    "end": "1790559"
  },
  {
    "text": "will create this credentials for you and rotate them periodically for you so the instance will always have valid",
    "start": "1790559",
    "end": "1796720"
  },
  {
    "text": "credentials that you don't don't need to uh configure rotate or",
    "start": "1796720",
    "end": "1802640"
  },
  {
    "text": "anything yeah anything",
    "start": "1802640",
    "end": "1808559"
  },
  {
    "text": "else all right well thank you",
    "start": "1809679",
    "end": "1814000"
  },
  {
    "text": "[Applause] [Music]",
    "start": "1816170",
    "end": "1822440"
  },
  {
    "text": "out yeah",
    "start": "1822440",
    "end": "1826440"
  },
  {
    "text": "yeah so I've actually seen people do that um where calls that the de less sensitive",
    "start": "1829679",
    "end": "1836960"
  },
  {
    "text": "are required to uh have a requirement that is um 8 10 12 hours and for example",
    "start": "1836960",
    "end": "1844279"
  },
  {
    "text": "creating a new IM policy or attaching a new IM policy to a user require the user",
    "start": "1844279",
    "end": "1850480"
  },
  {
    "text": "to be authenticated within the next the last 3 hours or if you were really paranoid you could say that uh any in I",
    "start": "1850480",
    "end": "1858519"
  },
  {
    "text": "am especially creating or attaching policies has to be done with a reauthentication that is within the last",
    "start": "1858519",
    "end": "1864639"
  },
  {
    "text": "5 10 15 minutes depending on how paranoid and uh how paranoid you are and",
    "start": "1864639",
    "end": "1870279"
  },
  {
    "text": "I guess how often you need to do these changes to make sure that it does not become like too overwhelming for whoever",
    "start": "1870279",
    "end": "1877159"
  },
  {
    "text": "is in charge of that uh so to set that on a per action",
    "start": "1877159",
    "end": "1884039"
  },
  {
    "text": "you would have to either have uh a a larger po policy with two different statements and um each statement would",
    "start": "1884039",
    "end": "1891519"
  },
  {
    "text": "have different actions and a different condition or you could also create separate smaller policies and have one",
    "start": "1891519",
    "end": "1898760"
  },
  {
    "text": "policy that says um sensitive actions and uh in that case you would set the requirement to be",
    "start": "1898760",
    "end": "1905799"
  },
  {
    "text": "smaller y all right well thanks a lot and have a",
    "start": "1905799",
    "end": "1912200"
  },
  {
    "text": "good rest of your day",
    "start": "1912200",
    "end": "1915960"
  }
]