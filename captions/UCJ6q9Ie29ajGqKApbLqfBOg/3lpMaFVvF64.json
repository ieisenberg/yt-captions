[
  {
    "text": "thank you blackhe hat iser for providing this opportunity this is my fourth time",
    "start": "2879",
    "end": "8280"
  },
  {
    "text": "participating in black hat and I feel incredibly incredibly honored today I",
    "start": "8280",
    "end": "14200"
  },
  {
    "text": "will be sharing a presentation titled attacking debug models in the Android",
    "start": "14200",
    "end": "19600"
  },
  {
    "text": "ecosystem my name isi and I will be the speaker for this",
    "start": "19600",
    "end": "25160"
  },
  {
    "text": "session first let me introduce myself I'm currently working working at a",
    "start": "25160",
    "end": "30560"
  },
  {
    "text": "self-driving company in China called moku Auto am responsible for the implementation of the car to Road Cloud",
    "start": "30560",
    "end": "38320"
  },
  {
    "text": "integrated solution in China I oversee the management and Technical work of the",
    "start": "38320",
    "end": "44440"
  },
  {
    "text": "entire security team currently I'm leading the team to protect the security",
    "start": "44440",
    "end": "50320"
  },
  {
    "text": "of the car to Road Cloud integrated infrastructure and enhance the comp",
    "start": "50320",
    "end": "55680"
  },
  {
    "text": "company's Network and data security previously I gained five years",
    "start": "55680",
    "end": "61039"
  },
  {
    "text": "of work experience at Buu primarily focusing on mobile and iot security I",
    "start": "61039",
    "end": "67799"
  },
  {
    "text": "have submitted a significant number of security vulnerabilities to Google Android mediatech and uniso five",
    "start": "67799",
    "end": "75960"
  },
  {
    "text": "handroid CV vulnerabilities has been credit to me and I'm also the top one",
    "start": "75960",
    "end": "81320"
  },
  {
    "text": "Buck Hunter in the uniso product security acknowledgement in 20 in",
    "start": "81320",
    "end": "88640"
  },
  {
    "text": "2022 I was awarded the title of topb Hunter by Google I have I have",
    "start": "88640",
    "end": "95520"
  },
  {
    "text": "participated as a speaker in multiple industry security conferences sharing my knowledge and",
    "start": "95520",
    "end": "102520"
  },
  {
    "text": "insights I will present the topic in four sections background thre model case",
    "start": "102520",
    "end": "108079"
  },
  {
    "text": "study and summary in the background section I will Begin by introducing the",
    "start": "108079",
    "end": "113200"
  },
  {
    "text": "fragment fra fragmentation of the Android system next I will discuss the",
    "start": "113200",
    "end": "118479"
  },
  {
    "text": "native debugging architecture of Android furthermore I will delve into the",
    "start": "118479",
    "end": "124159"
  },
  {
    "text": "propriety debuging architectures developed by two major vendors I will",
    "start": "124159",
    "end": "129599"
  },
  {
    "text": "provide an overview of their unique debugging Frameworks tools and features in the three model section I",
    "start": "129599",
    "end": "138120"
  },
  {
    "text": "will focusing focus on conducting an attack surfaces surface analysis of debugging",
    "start": "138120",
    "end": "145440"
  },
  {
    "text": "models in the case study section I will provide practical EX examples of",
    "start": "145440",
    "end": "150680"
  },
  {
    "text": "vulnerability discovery that Al with the attack surface analysis conduct earlier",
    "start": "150680",
    "end": "156280"
  },
  {
    "text": "in this cases case study will illustrate real world incidents where vulnerabilites in debar models were were",
    "start": "156280",
    "end": "164440"
  },
  {
    "text": "identified and exploited by examining these cases we can gain insight into the",
    "start": "164440",
    "end": "170800"
  },
  {
    "text": "potential impact and the consequences of such vulnerabilites in the summary",
    "start": "170800",
    "end": "175959"
  },
  {
    "text": "section I will provide an overview of the key points discussed through out the presentation and offer recommendations",
    "start": "175959",
    "end": "182879"
  },
  {
    "text": "based on inside gain this section aims to summarize the importance of securing",
    "start": "182879",
    "end": "189599"
  },
  {
    "text": "debug models in the Android ecosystem and providing provide guidelines for developer security and",
    "start": "189599",
    "end": "198599"
  },
  {
    "text": "organizations the Android ecosystem is composed of several components as deped",
    "start": "200519",
    "end": "206840"
  },
  {
    "text": "in the diagram starting from the bottom we have the system on chip layer which",
    "start": "206840",
    "end": "213640"
  },
  {
    "text": "includes major s so Chip manufacturers such as quum medch uniso providing the",
    "start": "213640",
    "end": "220879"
  },
  {
    "text": "underlying hardware and Bard sport package capabilities the second layer is the",
    "start": "220879",
    "end": "227159"
  },
  {
    "text": "well-known Android open source project which not only provides capability at",
    "start": "227159",
    "end": "233799"
  },
  {
    "text": "the so level but also offers open source code for Upstream customization and",
    "start": "233799",
    "end": "240040"
  },
  {
    "text": "develop development the third layer consists of various products including smartphones",
    "start": "240040",
    "end": "247439"
  },
  {
    "text": "tablets inal and aiot devices the four the fourth layer",
    "start": "247439",
    "end": "254760"
  },
  {
    "text": "represents familiar OEM Brands such as Samsung xiaomi Huawei and Google",
    "start": "254760",
    "end": "260320"
  },
  {
    "text": "self-developed pixel devices this layered structure",
    "start": "260320",
    "end": "265919"
  },
  {
    "text": "contributes to the complexity of the supply chain and introduce fragmentation with the within the Android",
    "start": "265919",
    "end": "273440"
  },
  {
    "text": "ecosystem fragmentation is primarily manifested at three levels product frag",
    "start": "273440",
    "end": "280800"
  },
  {
    "text": "fragmentation wers customize their own lunches and operating systems such as",
    "start": "280800",
    "end": "287479"
  },
  {
    "text": "mui magic U and hary Os along with customer development at the system level",
    "start": "287479",
    "end": "294320"
  },
  {
    "text": "apps including debug models not notepads and device interconnect activity",
    "start": "294320",
    "end": "301400"
  },
  {
    "text": "features system fragmentation window perform customize the development as the",
    "start": "301400",
    "end": "307800"
  },
  {
    "text": "framework layer of USP to adapt to their Hardware",
    "start": "307800",
    "end": "313440"
  },
  {
    "text": "characteristics they also Implement lowlevel implementations at the hardware",
    "start": "313440",
    "end": "318720"
  },
  {
    "text": "abstraction layer to bridge the framework and the driver layers bsp",
    "start": "318720",
    "end": "325720"
  },
  {
    "text": "fragmentation wers customized their the hardware related driver models which are",
    "start": "325720",
    "end": "332199"
  },
  {
    "text": "reflected in video processing Wi-Fi Bluetooth G SS 4G and 5G audio",
    "start": "332199",
    "end": "338600"
  },
  {
    "text": "processing display acceleration and the security related components based on the analysis above",
    "start": "338600",
    "end": "347199"
  },
  {
    "text": "it is the fragmentation of the Android ecosystem that leads to a merit of security issues affecting various",
    "start": "347199",
    "end": "354080"
  },
  {
    "text": "aspects of the entire industry to address the security issues",
    "start": "354080",
    "end": "360520"
  },
  {
    "text": "introduced by fragmentation Google has implemented the following four",
    "start": "360520",
    "end": "366160"
  },
  {
    "text": "strategies introducing the window petition Google introduced the window petition in the Android over which is",
    "start": "366160",
    "end": "373639"
  },
  {
    "text": "especially designed to host to window specific uh bsp code this allows for",
    "start": "373639",
    "end": "379880"
  },
  {
    "text": "better management and isolation of window specific components Hardware abstraction layer Google is established",
    "start": "379880",
    "end": "387880"
  },
  {
    "text": "the hardware AB abstraction layer as a bridge between the user level and Driver level components Hardware abstraction",
    "start": "387880",
    "end": "395440"
  },
  {
    "text": "layer provides a standardized interface and abstraction layer enabling High",
    "start": "395440",
    "end": "401000"
  },
  {
    "text": "higher level applications to interact with underlying Hardware operations",
    "start": "401000",
    "end": "406680"
  },
  {
    "text": "without the direct dependence on the specific drivers security bulletin Google",
    "start": "406680",
    "end": "413280"
  },
  {
    "text": "published monthly Android security bulletin that include critical and high",
    "start": "413280",
    "end": "418440"
  },
  {
    "text": "severity vulnerability is reported by the window penners this ensures timely",
    "start": "418440",
    "end": "423879"
  },
  {
    "text": "disclosure and awareness of the security vulnerabilities presented present in",
    "start": "423879",
    "end": "429160"
  },
  {
    "text": "various wi specific implementations implementations Android chipset security",
    "start": "429160",
    "end": "435639"
  },
  {
    "text": "reward program in 2019 Google initialed the Android",
    "start": "435639",
    "end": "441400"
  },
  {
    "text": "chipset security reward program aimed at at identifying and reward rewarding",
    "start": "441400",
    "end": "447479"
  },
  {
    "text": "security vulnerabilities especially targeting s so's unfortunately as um as",
    "start": "447479",
    "end": "454800"
  },
  {
    "text": "as of May 2023 Google discontinued the acrp these strategies reflect Google's",
    "start": "454800",
    "end": "462680"
  },
  {
    "text": "efforts to en enhance Security in the Android ecosystem and magicat the risk case Associated the",
    "start": "462680",
    "end": "471319"
  },
  {
    "text": "fragmentation Androids native debugging architecture consists of various of components as deficit in the given St",
    "start": "471520",
    "end": "478919"
  },
  {
    "text": "standard Andro architecture diagram from top to bottom system APS Java API",
    "start": "478919",
    "end": "485240"
  },
  {
    "text": "framework native C and C++ library and WR time Hardware abstraction layer and",
    "start": "485240",
    "end": "490960"
  },
  {
    "text": "Linux kernel the standard uh debuging architecture in the Android serves three",
    "start": "490960",
    "end": "496840"
  },
  {
    "text": "main purpose log capture this includes capturing e log kernel log and subsystem",
    "start": "496840",
    "end": "503479"
  },
  {
    "text": "log for example modem DSP Wi-Fi Bluetooth these logs are captured to and",
    "start": "503479",
    "end": "509840"
  },
  {
    "text": "analyze and debug the behavior of of applications system components and",
    "start": "509840",
    "end": "515518"
  },
  {
    "text": "specific subsystems function verification this",
    "start": "515519",
    "end": "520880"
  },
  {
    "text": "involves validating the functionality of Mo of models such as the camera display",
    "start": "520880",
    "end": "527240"
  },
  {
    "text": "hardware and GPU rendering it ensures that these",
    "start": "527240",
    "end": "532279"
  },
  {
    "text": "components are working as expected Factory testing this refers to",
    "start": "532279",
    "end": "538480"
  },
  {
    "text": "the testing and validation of specific functionalities during the uh manufacturing and the verif verif",
    "start": "538480",
    "end": "544920"
  },
  {
    "text": "verification CA phase it often involves window specific tests to verify the",
    "start": "544920",
    "end": "551399"
  },
  {
    "text": "proper functioning of hardware and software",
    "start": "551399",
    "end": "556519"
  },
  {
    "text": "components when it comes to the Android debug architecture the first thing that come to mind is the developer options",
    "start": "556600",
    "end": "565000"
  },
  {
    "text": "the developer option provide the following basic fun functionalities which can also be found in the Android",
    "start": "565000",
    "end": "571720"
  },
  {
    "text": "standard development document General option this includes option such as",
    "start": "571720",
    "end": "578240"
  },
  {
    "text": "memory management error reporting and OEM unlocking debugging related options",
    "start": "578240",
    "end": "584959"
  },
  {
    "text": "this includes USB debugging and Android debug Bridge debuging which allows for",
    "start": "584959",
    "end": "590079"
  },
  {
    "text": "debugging and communication between a computer and an Android device Network",
    "start": "590079",
    "end": "595880"
  },
  {
    "text": "related options this includes options related to Wi and bluetooth settings",
    "start": "595880",
    "end": "601680"
  },
  {
    "text": "input related option this includes option for touch feedback and input settings session related options this",
    "start": "601680",
    "end": "609040"
  },
  {
    "text": "include the option to display layout boundaries which can be useful for Dearing and optimizing the user",
    "start": "609040",
    "end": "618079"
  },
  {
    "text": "interface here is the translation of the provided explanation about the debuging",
    "start": "618800",
    "end": "625360"
  },
  {
    "text": "process using Android debug Bridge as shown in the uh diagram from left to",
    "start": "625360",
    "end": "631200"
  },
  {
    "text": "right first the user enable enables USB debugging the action is performed in the",
    "start": "631200",
    "end": "638279"
  },
  {
    "text": "settings AP especially in the settings provider where the flag settings Point",
    "start": "638279",
    "end": "644959"
  },
  {
    "text": "global point it be enable it sets true at the framework layer there is a system",
    "start": "644959",
    "end": "651279"
  },
  {
    "text": "server called Android point thebug point I manager this service continuously",
    "start": "651279",
    "end": "657720"
  },
  {
    "text": "monitors the flag settings Point global point ADP enable when it detects that",
    "start": "657720",
    "end": "663399"
  },
  {
    "text": "the flag is set true it start the native Diamond adbd using the CTL Point start",
    "start": "663399",
    "end": "670000"
  },
  {
    "text": "method at this point the user can use debugging tools to connect to itbd for",
    "start": "670000",
    "end": "675839"
  },
  {
    "text": "theing purpose here is the translation of the provided explanation about lock",
    "start": "675839",
    "end": "682480"
  },
  {
    "text": "capturing in Android both Android art layers logs and Native layer logs are",
    "start": "682480",
    "end": "689519"
  },
  {
    "text": "involved through Java native interface and accessed where the Android system",
    "start": "689519",
    "end": "696440"
  },
  {
    "text": "Library called Li log Li log maintains continuously communication with the",
    "start": "696440",
    "end": "702680"
  },
  {
    "text": "native Diamond log D through Unix domain sockets allowing the output of",
    "start": "702680",
    "end": "708079"
  },
  {
    "text": "application Level logs to be sent to log D when using loog cat to capture logs it",
    "start": "708079",
    "end": "714920"
  },
  {
    "text": "also communicates with lockd through uni domain SS to rate the relevant log",
    "start": "714920",
    "end": "721480"
  },
  {
    "text": "outputs through the L as Linux rules of the log D we can see that logd itself",
    "start": "721480",
    "end": "728680"
  },
  {
    "text": "has permission to read chronal logs and system",
    "start": "728680",
    "end": "733519"
  },
  {
    "text": "files based on the analysis of the two aspects of Android debug architecture we",
    "start": "735199",
    "end": "740320"
  },
  {
    "text": "can draw the following conclusions the debug the debug model",
    "start": "740320",
    "end": "745720"
  },
  {
    "text": "involves complex IPC communication including Banner calls Unix domain socs",
    "start": "745720",
    "end": "752480"
  },
  {
    "text": "content providers Hardware inter how interface definition language and more",
    "start": "752480",
    "end": "760920"
  },
  {
    "text": "the data flow within the debug debug models is intricate user level data is",
    "start": "760920",
    "end": "767639"
  },
  {
    "text": "progressively passed to higher privileged native diamonds and",
    "start": "767639",
    "end": "773680"
  },
  {
    "text": "drivers after introducing the debug architecture of Android let's now shift",
    "start": "773680",
    "end": "779199"
  },
  {
    "text": "our Focus to the window debugging architecture firstly let's consider the",
    "start": "779199",
    "end": "785440"
  },
  {
    "text": "question why do winders need need to do the customize the the debugging I have",
    "start": "785440",
    "end": "792480"
  },
  {
    "text": "summarized the following three points lock capturing it is necessary to optain",
    "start": "792480",
    "end": "798680"
  },
  {
    "text": "debug logs from subsystems and have standardized the debu compatibilities",
    "start": "798680",
    "end": "803959"
  },
  {
    "text": "which include capturing debac information from all models such as",
    "start": "803959",
    "end": "809279"
  },
  {
    "text": "mediatech e and uniso yock fun function verification involves",
    "start": "809279",
    "end": "816440"
  },
  {
    "text": "Tech testing multiple Hardware related functionalities such as telepon connectivity hardware and",
    "start": "816440",
    "end": "823279"
  },
  {
    "text": "location Factory testing tools are used to perform basic checks on Hardware",
    "start": "823279",
    "end": "829000"
  },
  {
    "text": "components during the factory stage such as the screen and and",
    "start": "829000",
    "end": "836199"
  },
  {
    "text": "others let's take a look at the Lo capturing capabilities of v u in the",
    "start": "836199",
    "end": "842759"
  },
  {
    "text": "diagram from the left to right at the user level there is a system AP called",
    "start": "842759",
    "end": "848000"
  },
  {
    "text": "engineering mode exposed this AP can be accessed through two method a security",
    "start": "848000",
    "end": "856240"
  },
  {
    "text": "code and invocation from a third party AP within this engineering mode AP",
    "start": "856240",
    "end": "863279"
  },
  {
    "text": "multiple activities are introduced for example log management is used to",
    "start": "863279",
    "end": "868519"
  },
  {
    "text": "control Lo s Android lock control is used to control Android locks at command",
    "start": "868519",
    "end": "874639"
  },
  {
    "text": "control is used to test the effectiveness of AT commands and modem",
    "start": "874639",
    "end": "879880"
  },
  {
    "text": "loog config is used to conf configurate configure modem related loog loog",
    "start": "879880",
    "end": "888079"
  },
  {
    "text": "switches these various activity or applications communicate through IPC to",
    "start": "888240",
    "end": "894880"
  },
  {
    "text": "pass data flow to low level models such as native diamond and Hardware",
    "start": "894880",
    "end": "900839"
  },
  {
    "text": "abstraction layer service most of these lowlevel models are implemented in C++",
    "start": "900839",
    "end": "907759"
  },
  {
    "text": "and have system and root level permissions the diagram on the on the",
    "start": "907759",
    "end": "913839"
  },
  {
    "text": "right showcase the control status of various log subsystems by the debugging",
    "start": "913839",
    "end": "920120"
  },
  {
    "text": "AP the second case is about window M's debuging architecture it also features a",
    "start": "920120",
    "end": "927600"
  },
  {
    "text": "generic debuger UI as the entry point with various native diamonds and the",
    "start": "927600",
    "end": "934199"
  },
  {
    "text": "background communication between them is established through Unix domain socket",
    "start": "934199",
    "end": "939720"
  },
  {
    "text": "data flows gradually from the debuger UI to the native diamonds under go",
    "start": "939720",
    "end": "945319"
  },
  {
    "text": "processing and is then transmitted to the driver",
    "start": "945319",
    "end": "950519"
  },
  {
    "text": "later let's move on to the third case which involves wi use feature testing",
    "start": "950519",
    "end": "956120"
  },
  {
    "text": "and Factory testing tools the AP in question is a system AP called",
    "start": "956120",
    "end": "963240"
  },
  {
    "text": "SPD Auto SLT which is introduced by default in its bsp model this model can",
    "start": "963240",
    "end": "971160"
  },
  {
    "text": "be invoked by third party APS with within this system AP various testing",
    "start": "971160",
    "end": "977920"
  },
  {
    "text": "model are in included such as Wi-Fi test RF carry test RTC test backl test camera",
    "start": "977920",
    "end": "985199"
  },
  {
    "text": "test System warant test GPS Test Bluetooth test SIM card test otd test",
    "start": "985199",
    "end": "991319"
  },
  {
    "text": "and more behind each of these testing function negatives is an",
    "start": "991319",
    "end": "996880"
  },
  {
    "text": "APC mechanism that directly re reaches the lowlevel components for example the",
    "start": "996880",
    "end": "1003600"
  },
  {
    "text": "framework is involved through Banner core native diamonds are accessed to where Unix domain soet and system files",
    "start": "1003600",
    "end": "1011720"
  },
  {
    "text": "and read and are are read read using fail read",
    "start": "1011720",
    "end": "1016839"
  },
  {
    "text": "operations the diagram from the right demonstrates the presentation of the",
    "start": "1016839",
    "end": "1021880"
  },
  {
    "text": "final information results let's take a look at a real life",
    "start": "1021880",
    "end": "1027959"
  },
  {
    "text": "case OnePlus PHS are discovered to have a backd door vulnerability that could",
    "start": "1027959",
    "end": "1033880"
  },
  {
    "text": "allow direct rooting of the device the issue steamed from the inclusion of a",
    "start": "1033880",
    "end": "1040280"
  },
  {
    "text": "customized engineering mode AP by in the pH components attackers could",
    "start": "1040280",
    "end": "1046360"
  },
  {
    "text": "exploit the lency or in engineering mode system app to gain rout access to the",
    "start": "1046360",
    "end": "1052200"
  },
  {
    "text": "device this highlights the following two issues the first point is that the bsp",
    "start": "1052200",
    "end": "1058840"
  },
  {
    "text": "often includes Factory testing tools which can introduce highrisk s security",
    "start": "1058840",
    "end": "1065440"
  },
  {
    "text": "vulnerabilities these tools if not properly secured or removed before the device reaches the end user can be explo",
    "start": "1065440",
    "end": "1073280"
  },
  {
    "text": "by attackers to gain unauthorized access to or control over the device",
    "start": "1073280",
    "end": "1079440"
  },
  {
    "text": "the second point is that oems or odms often lack security awareness and fail",
    "start": "1079440",
    "end": "1085679"
  },
  {
    "text": "to remove debugging tools from their firmware package packages this this",
    "start": "1085679",
    "end": "1091760"
  },
  {
    "text": "oversight can leave leave devices vulnerable to exploration and the debugging tools may provide unauthorized",
    "start": "1091760",
    "end": "1099760"
  },
  {
    "text": "access or control over the device",
    "start": "1099760",
    "end": "1104080"
  },
  {
    "text": "functionalities this diagram illustrate the attack surfaces surface of the an",
    "start": "1105480",
    "end": "1111320"
  },
  {
    "text": "analysis thebug models which can be dived into four parts from the",
    "start": "1111320",
    "end": "1117480"
  },
  {
    "text": "perspective of system APS they are vulnerable to attacks from the Network and local attacks from third party APS",
    "start": "1117480",
    "end": "1125240"
  },
  {
    "text": "in terms of network attacks system APS May often concern Point ports",
    "start": "1125240",
    "end": "1133000"
  },
  {
    "text": "and and and accept abnormal parameters to perform High privileged operations",
    "start": "1133000",
    "end": "1139520"
  },
  {
    "text": "in terms in terms of local attacks system APS accept parameters through",
    "start": "1139520",
    "end": "1145000"
  },
  {
    "text": "exported interfaces such as activity service broadcast and provider since system APS have have high",
    "start": "1145000",
    "end": "1153799"
  },
  {
    "text": "privileged if they are compromised attack attackers can gain system level",
    "start": "1153799",
    "end": "1159240"
  },
  {
    "text": "access and Carry Out further privileged escalation attacks moving on to the framework later",
    "start": "1159240",
    "end": "1166720"
  },
  {
    "text": "parameters from the user space are re received through aidl if there are in efficient peration",
    "start": "1166720",
    "end": "1174480"
  },
  {
    "text": "checks in the debugging components in this layer it can lead to local privilege",
    "start": "1174480",
    "end": "1180799"
  },
  {
    "text": "escalation for Native diamonds they often receive data from the application",
    "start": "1180799",
    "end": "1186320"
  },
  {
    "text": "layer through Unix domain soet improper handling of the data can make them",
    "start": "1186320",
    "end": "1191520"
  },
  {
    "text": "vulnerable to attack Hardware abstraction layer service receive parameters through H IDL",
    "start": "1191520",
    "end": "1198960"
  },
  {
    "text": "and and drive and driver and drivers receive",
    "start": "1198960",
    "end": "1205039"
  },
  {
    "text": "parameters from a control if these parameters are not properly processed",
    "start": "1205039",
    "end": "1211520"
  },
  {
    "text": "the models can also become Target targets of",
    "start": "1211520",
    "end": "1217480"
  },
  {
    "text": "attack attacking debug debug uh attacking debug APS the attack path invol involves",
    "start": "1217600",
    "end": "1226000"
  },
  {
    "text": "invoking High privileged components of of the AP through a through a third party AP the targets of the uh attacks",
    "start": "1226000",
    "end": "1234799"
  },
  {
    "text": "are exported components of system APS which can lead to local privilege",
    "start": "1234799",
    "end": "1241360"
  },
  {
    "text": "escalation for information Le leakage additionally system APS May",
    "start": "1241360",
    "end": "1247840"
  },
  {
    "text": "listen on socket ports which can result in remote command execution the",
    "start": "1247840",
    "end": "1253360"
  },
  {
    "text": "following diagram illustrates two types of vulnerabilities found in real Life",
    "start": "1253360",
    "end": "1259360"
  },
  {
    "text": "Cases I will provide detailed expl explanation of these vulnerabilities in the subsequence case study",
    "start": "1259360",
    "end": "1266480"
  },
  {
    "text": "section attacking debug debug Diamonds the attack entry point is the Unix do",
    "start": "1266480",
    "end": "1273440"
  },
  {
    "text": "soet POS secate issu that can be triggered include include memory",
    "start": "1273440",
    "end": "1278799"
  },
  {
    "text": "corruption information leaks command in injection and so on attacking debug Hardware abstraction",
    "start": "1278799",
    "end": "1286279"
  },
  {
    "text": "layer Services the attack entry points are the unique domain socket or H IDL",
    "start": "1286279",
    "end": "1293240"
  },
  {
    "text": "possible security issues that can be triggered include memory corruption information leakage and command",
    "start": "1293240",
    "end": "1300279"
  },
  {
    "text": "injection attack attacking debu drivers the attack entry point is through the is",
    "start": "1300279",
    "end": "1306120"
  },
  {
    "text": "through fa operations possible issues that can be triggered include memory related problems such as memory",
    "start": "1306120",
    "end": "1312120"
  },
  {
    "text": "corruption and information leaks through vulnerability search on",
    "start": "1312120",
    "end": "1318960"
  },
  {
    "text": "thebag models we conducted in investigations on three popular windows",
    "start": "1318960",
    "end": "1324880"
  },
  {
    "text": "and discovered hundreds of security vulnerabilities earning 49 CV",
    "start": "1324880",
    "end": "1332559"
  },
  {
    "text": "credits let's take a look at cve 2",
    "start": "1332559",
    "end": "1337640"
  },
  {
    "text": "2022 2098 and information disclosure",
    "start": "1337640",
    "end": "1342799"
  },
  {
    "text": "vulnerability in the debug model of a certain win the affected debug model is",
    "start": "1342799",
    "end": "1349360"
  },
  {
    "text": "called a AED which is a debug debug debuging native Diamond the model",
    "start": "1349360",
    "end": "1357039"
  },
  {
    "text": "exposed a Unix domain soet named com point mtk point ae.",
    "start": "1357039",
    "end": "1364440"
  },
  {
    "text": "a64 the model accepts parameters from UDS among the parameters there is one",
    "start": "1364440",
    "end": "1371520"
  },
  {
    "text": "for transmitting any process ID which the E modu pressed the command pass",
    "start": "1371520",
    "end": "1378760"
  },
  {
    "text": "through the UDS it extracts the p and dumps the corresponding process memory",
    "start": "1378760",
    "end": "1384520"
  },
  {
    "text": "information resulting in information disclosure the diagram on the right shows the complete proof POC indicating",
    "start": "1384520",
    "end": "1393000"
  },
  {
    "text": "that the transmitted PID can be arbitrary this allows a malicous process",
    "start": "1393000",
    "end": "1398840"
  },
  {
    "text": "to gain unauthorized access to the memory information of other",
    "start": "1398840",
    "end": "1404400"
  },
  {
    "text": "processes ultimately leading to information disclosure",
    "start": "1404400",
    "end": "1410159"
  },
  {
    "text": "another issue related to information disclosure is a corresponding debug AP the AP logs various unique identifiers",
    "start": "1410159",
    "end": "1418279"
  },
  {
    "text": "of the devices such ASI MSI calling address and so",
    "start": "1418279",
    "end": "1424240"
  },
  {
    "text": "on let's take a look at cve 2 uh 2022",
    "start": "1424240",
    "end": "1431279"
  },
  {
    "text": "48382 a memory corruption issue the affected process is a debug",
    "start": "1431279",
    "end": "1437840"
  },
  {
    "text": "House service called window Point SPD Point Hardware point lock at",
    "start": "1437840",
    "end": "1443919"
  },
  {
    "text": "1.0 service the entry point of this process is the hidl common socket which",
    "start": "1443919",
    "end": "1451200"
  },
  {
    "text": "is a Unix Dom socket in the first image on the left there is a buffer flow",
    "start": "1451200",
    "end": "1456919"
  },
  {
    "text": "vulnerability it can be authorized that the vulnerable as represent the stack",
    "start": "1456919",
    "end": "1463360"
  },
  {
    "text": "space with a default size of two 4,096 bytes",
    "start": "1463360",
    "end": "1469240"
  },
  {
    "text": "the data passed into the function is received ex externally through UDS and",
    "start": "1469240",
    "end": "1474320"
  },
  {
    "text": "can have a vulnerable lens this vulnerability occurs when the length of",
    "start": "1474320",
    "end": "1479840"
  },
  {
    "text": "the inut exceeds 4,096 by resulting in the buffer",
    "start": "1479840",
    "end": "1487399"
  },
  {
    "text": "overflow the image on the right shows a PC which passing data with against of",
    "start": "1487399",
    "end": "1493320"
  },
  {
    "text": "10,000 b caus a crash in the affected debar House service",
    "start": "1493320",
    "end": "1500240"
  },
  {
    "text": "let's take a look at another memory corruption issues as the driver layer the problem is identified as CV 2022",
    "start": "1500240",
    "end": "1511039"
  },
  {
    "text": "39118 and the affected Dearing driver is SPD C stump the attack entry point is is",
    "start": "1511039",
    "end": "1518919"
  },
  {
    "text": "through fail operations the issue here is an auto bound right vulnerability",
    "start": "1518919",
    "end": "1524440"
  },
  {
    "text": "when writing and ex excessively long bite sequence it",
    "start": "1524440",
    "end": "1530240"
  },
  {
    "text": "triggers a panic in the kernel and the PC is shown in the image on the",
    "start": "1530240",
    "end": "1537639"
  },
  {
    "text": "right this case is a local privilege escalation vulnerability identified as",
    "start": "1537960",
    "end": "1544080"
  },
  {
    "text": "cve 2022 47339 the affected process is a root",
    "start": "1544080",
    "end": "1550840"
  },
  {
    "text": "privileged the debug diamond called CMD service the attack entry point is the",
    "start": "1550840",
    "end": "1556039"
  },
  {
    "text": "Unix St socet named the cmds KT by default CMD service is not enabled it",
    "start": "1556039",
    "end": "1562640"
  },
  {
    "text": "only starts when the property flag CMD Cy CS Point CMD service enable is is set",
    "start": "1562640",
    "end": "1571640"
  },
  {
    "text": "to enable CMD service accepts complex parameters through the Unix Dom soet SMD",
    "start": "1571640",
    "end": "1578159"
  },
  {
    "text": "SKT and eventually passes the parameter to PO open for command",
    "start": "1578159",
    "end": "1585278"
  },
  {
    "text": "execution this ultimately to command injection allowing for local",
    "start": "1585720",
    "end": "1590840"
  },
  {
    "text": "PR local privilege escalation and arbitary command execution with root",
    "start": "1590840",
    "end": "1597279"
  },
  {
    "text": "privileges the last case let's take a look at a complete vulnerability exploration",
    "start": "1597279",
    "end": "1606240"
  },
  {
    "text": "process this vulnerability is identified as cve",
    "start": "1606240",
    "end": "1611279"
  },
  {
    "text": "2022 27250 it is a recurring issue duplicated",
    "start": "1611279",
    "end": "1617640"
  },
  {
    "text": "issue that was initially discovered by the security company septo septo whereare the problem",
    "start": "1617640",
    "end": "1624960"
  },
  {
    "text": "occurs in the factory testing tool called spt AO SLT this AP accepts",
    "start": "1624960",
    "end": "1631200"
  },
  {
    "text": "various debugging components such as camera debugging phone debuging FM debuging Bluetooth debugging and",
    "start": "1631200",
    "end": "1638480"
  },
  {
    "text": "more the AP lens on point 7878 and",
    "start": "1638480",
    "end": "1643880"
  },
  {
    "text": "accepts com commands the command list include",
    "start": "1643880",
    "end": "1649440"
  },
  {
    "text": "ability to execute shell commands however the supported commands may vary",
    "start": "1649440",
    "end": "1656360"
  },
  {
    "text": "depending on the device by connecting to 7878 and sending arbitary share commands",
    "start": "1656360",
    "end": "1663960"
  },
  {
    "text": "we can remotely optain system level privileges the SC Linux context of the",
    "start": "1663960",
    "end": "1670120"
  },
  {
    "text": "AP is sp aut SLT AP let's further analysis cve 202 2",
    "start": "1670120",
    "end": "1679720"
  },
  {
    "text": "47339 this vulnerability allows avatary command execution with root privilege",
    "start": "1679720",
    "end": "1685640"
  },
  {
    "text": "but it has some limitations firstly enable the CMD service flag require the system level",
    "start": "1685640",
    "end": "1693080"
  },
  {
    "text": "permissions to set property ordinar ordinary shelles or AP or third party AP",
    "start": "1693080",
    "end": "1701320"
  },
  {
    "text": "cannot involve CMD service secondly the CMD service listens on Unix domain soet",
    "start": "1701320",
    "end": "1708559"
  },
  {
    "text": "named CMD SKT and connections are subjected to Linux restrictions not",
    "start": "1708559",
    "end": "1716600"
  },
  {
    "text": "every third party AP can connect to CD SKT and send commands we exam examed the",
    "start": "1716600",
    "end": "1723399"
  },
  {
    "text": "as NE policy for CD service and found that CD SKT can be accessed by the SC",
    "start": "1723399",
    "end": "1730360"
  },
  {
    "text": "Linux context of SPD Auto SLT AP therefore the attack pass is is clear",
    "start": "1730360",
    "end": "1737840"
  },
  {
    "text": "as shown in the in the image on the right the attacker initials a remote",
    "start": "1737840",
    "end": "1743320"
  },
  {
    "text": "attack to execute commands on S SPD Auto SLT gaining system level Privileges and",
    "start": "1743320",
    "end": "1750840"
  },
  {
    "text": "acquiring the S Linux context of SPD Auto SLT AP then with system level privileges the",
    "start": "1750840",
    "end": "1759080"
  },
  {
    "text": "attacker executes the set property command to launch the CD service process",
    "start": "1759080",
    "end": "1765360"
  },
  {
    "text": "finally due to the SC Linux security context of SPD Auto SLT AP the attackers",
    "start": "1765360",
    "end": "1772679"
  },
  {
    "text": "can directly send commands to CMD SKT and execute arit commands with root",
    "start": "1772679",
    "end": "1779519"
  },
  {
    "text": "privileges the end result is remote acquisition of root access of the device",
    "start": "1779519",
    "end": "1786519"
  },
  {
    "text": "it is worth nothing that that this root access is is within the SC in Linux",
    "start": "1786519",
    "end": "1793279"
  },
  {
    "text": "security context of CMD service but impact is",
    "start": "1793279",
    "end": "1800360"
  },
  {
    "text": "significant finally let's let's summarize the key points of the discussion firstly the debar model",
    "start": "1800519",
    "end": "1807880"
  },
  {
    "text": "models cover multiple layers of the system from the AP level to the driver level resulting in multiple attack",
    "start": "1807880",
    "end": "1814919"
  },
  {
    "text": "Services primarily Focus focused on interprocess communication secondly some",
    "start": "1814919",
    "end": "1822640"
  },
  {
    "text": "debug functionalities require ex executing High privileged commands",
    "start": "1822640",
    "end": "1828760"
  },
  {
    "text": "across processes in improper handling of these commands can lead to local prevage",
    "start": "1828760",
    "end": "1836519"
  },
  {
    "text": "escalation lastly Factory testing tools often invoke Wi-Fi Bluetooth and",
    "start": "1836519",
    "end": "1843159"
  },
  {
    "text": "telephony functionalities and handling of these tools can result in information",
    "start": "1843159",
    "end": "1848880"
  },
  {
    "text": "leakage such as exposing WiFi address Bluetooth address M numbers and other",
    "start": "1848880",
    "end": "1854760"
  },
  {
    "text": "sensitive sensitive information the security recommendations can be",
    "start": "1854760",
    "end": "1860799"
  },
  {
    "text": "summarized in the following three aspects for vendors some dear modules should should not release to Downstream",
    "start": "1860799",
    "end": "1867679"
  },
  {
    "text": "such as Factory testing for OEM and odms bsp models should be selectively",
    "start": "1867679",
    "end": "1874519"
  },
  {
    "text": "choosing based on specific needies and not accept in in their entirety for",
    "start": "1874519",
    "end": "1880480"
  },
  {
    "text": "users regular perform device security upgrades that concludes my presentation",
    "start": "1880480",
    "end": "1887360"
  },
  {
    "text": "thank you for for listening thank you",
    "start": "1887360",
    "end": "1892360"
  }
]