[
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14690"
  },
  {
    "text": "hey everyone today we present to you our research on the course account aws vulnerabilities",
    "start": "14719",
    "end": "21039"
  },
  {
    "text": "my name is jill and i lead the research in the research team at with the cloud security company with me on the stage is",
    "start": "21039",
    "end": "28240"
  },
  {
    "text": "amy ludwig the cto of wisdom thank you it's really great to be here",
    "start": "28240",
    "end": "33520"
  },
  {
    "text": "so just a bit of background about the risk research team so it's a team of highly experienced researchers many of",
    "start": "33520",
    "end": "40480"
  },
  {
    "text": "us coming from the microsoft cloud security group and the goal of the team is to do groundbreaking cloud research",
    "start": "40480",
    "end": "47280"
  },
  {
    "text": "focused on finding new and unknown vulnerabilities risks and attack vectors into cloud",
    "start": "47280",
    "end": "54079"
  },
  {
    "text": "environments so the goal of this research was to answer maybe one of the most basic",
    "start": "54079",
    "end": "60960"
  },
  {
    "text": "questions that any virtual system has when we build a virtual system we have multiple virtual instances running on",
    "start": "60960",
    "end": "67680"
  },
  {
    "text": "the same shared infra and one of the most basic premises of virtualization",
    "start": "67680",
    "end": "73680"
  },
  {
    "text": "is isolation and in the context of cloud environment the question is if i'm a user",
    "start": "73680",
    "end": "80320"
  },
  {
    "text": "with no permissions to the environment no network access to the environment can i learn anything about the",
    "start": "80320",
    "end": "87360"
  },
  {
    "text": "environment can i know what's being what services are being used maybe i can read data write data run code is",
    "start": "87360",
    "end": "95040"
  },
  {
    "text": "there any way to break the isolation of cloud environments specifically aws",
    "start": "95040",
    "end": "101200"
  },
  {
    "text": "environments that was the research question that we started from and before we dive into the details",
    "start": "101200",
    "end": "108000"
  },
  {
    "text": "let's look at the specific way that cloud is deployed just to",
    "start": "108000",
    "end": "113680"
  },
  {
    "text": "understand why isolation is so critical especially for those specific customers",
    "start": "113680",
    "end": "118719"
  },
  {
    "text": "that use the cloud in this manner so it's the deployment model that i wanted to",
    "start": "118719",
    "end": "124880"
  },
  {
    "text": "take a deeper look at is called cloud as an extension to the on-premise data",
    "start": "124880",
    "end": "130000"
  },
  {
    "text": "center in that deployment model the cloud is completely isolated from the",
    "start": "130000",
    "end": "135360"
  },
  {
    "text": "outside world the cloud environment has some kind of a vpn connection to their",
    "start": "135360",
    "end": "140400"
  },
  {
    "text": "own premise but the company didn't change their strategy there is a corporate",
    "start": "140400",
    "end": "146480"
  },
  {
    "text": "perimeter that is protected by a gateway and the concept and the basic security strategy",
    "start": "146480",
    "end": "152959"
  },
  {
    "text": "the company has is that all traffic going outside of the company must go",
    "start": "152959",
    "end": "158640"
  },
  {
    "text": "through the gateway and that is how they make sure that no one is able to leak data from the organization",
    "start": "158640",
    "end": "165680"
  },
  {
    "text": "imagine that this kind of company or the cloud is there but it's an isolated instance and they assume that there is",
    "start": "165680",
    "end": "172000"
  },
  {
    "text": "no way to leak data from the cloud what if we found a way to read data from that",
    "start": "172000",
    "end": "177040"
  },
  {
    "text": "environment that would think that that would allow an attacker to leak data to inextricate data from",
    "start": "177040",
    "end": "183120"
  },
  {
    "text": "the environment without actually going through the gateway essentially breaking their",
    "start": "183120",
    "end": "188879"
  },
  {
    "text": "security strategy so we wanted to look into a cloud-native",
    "start": "188879",
    "end": "194400"
  },
  {
    "text": "mechanism that may break that isolation obviously we started looking into identity",
    "start": "194400",
    "end": "201599"
  },
  {
    "text": "so we've been researching cloud identities for a long time now and we're familiar with most configurations aws",
    "start": "203440",
    "end": "210080"
  },
  {
    "text": "allow users to open cloud resources for identities within and outside the organization as well as various aws",
    "start": "210080",
    "end": "215519"
  },
  {
    "text": "services with a specific configuration any s3 bucket or aws lambda and dozen",
    "start": "215519",
    "end": "221680"
  },
  {
    "text": "further services can be accessed from different type of identities so three main type",
    "start": "221680",
    "end": "227040"
  },
  {
    "text": "and types of access one public sharing the resource can be publicly exposed and anyone on the",
    "start": "227040",
    "end": "233040"
  },
  {
    "text": "internet can use and access the resource the other option is to allow access to a specific user",
    "start": "233040",
    "end": "239519"
  },
  {
    "text": "resource or account this can be users or accounts of the same account and this can be users of",
    "start": "239519",
    "end": "246000"
  },
  {
    "text": "other accounts and the third option is to provide access to various aws services that can",
    "start": "246000",
    "end": "251680"
  },
  {
    "text": "perform relations on the resource in aws the mechanism the mechanism defining the",
    "start": "251680",
    "end": "256799"
  },
  {
    "text": "access permissions for cloud resources is called resource policy resource policy is a textual policy that",
    "start": "256799",
    "end": "262639"
  },
  {
    "text": "allows users to define who can access which resource and what action can be taken on them",
    "start": "262639",
    "end": "269840"
  },
  {
    "text": "in this research we focused on the flow that always integrate us what does it mean to grant permissions",
    "start": "269840",
    "end": "276639"
  },
  {
    "text": "to an aws service doesn't aws if all the access needs",
    "start": "276639",
    "end": "282400"
  },
  {
    "text": "does it matter what permissions i give in aws service can anything go wrong",
    "start": "282400",
    "end": "289600"
  },
  {
    "text": "it makes a lot of sense to grant permissions to internal aws services for those who aren't familiar with",
    "start": "290560",
    "end": "295680"
  },
  {
    "text": "cloudtrail this is a service that collects almost all platform events it is excellent for monitoring controlling",
    "start": "295680",
    "end": "301520"
  },
  {
    "text": "and securing the environment you can imagine that the amount of information that cloud will collect is",
    "start": "301520",
    "end": "306639"
  },
  {
    "text": "insane and users must export it to an srip storage bucket a user who wants to export cloudy lobs",
    "start": "306639",
    "end": "312960"
  },
  {
    "text": "to an s3 bucket can simply configure cloud to do so this saves a lot of code writing and many api calls",
    "start": "312960",
    "end": "319840"
  },
  {
    "text": "in this case as we see in the slide the s3 bucket must grant access to cloud rail for it to be able to write to the",
    "start": "319840",
    "end": "327039"
  },
  {
    "text": "bucket this configuration is defined within the bucket's resource policy",
    "start": "327039",
    "end": "332720"
  },
  {
    "text": "from that moment on cloudera will be able to write the logs to the s3 bucket without any user intervention",
    "start": "332720",
    "end": "339840"
  },
  {
    "text": "nowadays cloud users are taking a multi-account approach and managing multiple cloud accounts",
    "start": "340479",
    "end": "346560"
  },
  {
    "text": "for ease of management amazon allows some of its services to work course account this means that if i want to",
    "start": "346560",
    "end": "352240"
  },
  {
    "text": "collect logs for my entire environment instead of setting up a login bucket in each and each account cloud allows me to",
    "start": "352240",
    "end": "358800"
  },
  {
    "text": "export all logs from all accounts to one account for me as a cloud user",
    "start": "358800",
    "end": "366560"
  },
  {
    "text": "it's enough to set up one three bucket that cloud rail can lie to and now all my cloud well can export their logs to",
    "start": "366560",
    "end": "373360"
  },
  {
    "text": "my account and that's very cool this feature is great for large environments as it enables easy",
    "start": "373360",
    "end": "379280"
  },
  {
    "text": "management and improved centralized security but wait i learned from this behavior that",
    "start": "379280",
    "end": "385520"
  },
  {
    "text": "cloud12 can write to resources that are owned and managed in other accounts and",
    "start": "385520",
    "end": "392000"
  },
  {
    "text": "for me the security researcher trades a concern at this point i was very curious about",
    "start": "392000",
    "end": "397520"
  },
  {
    "text": "the cost account mechanism let's see how it works",
    "start": "397520",
    "end": "402000"
  },
  {
    "text": "this is how the default resource policy of their free bucket looks like the policies specified that cloud cell",
    "start": "402880",
    "end": "409520"
  },
  {
    "text": "service is allowed to perform put object operation as we can see in the principle and",
    "start": "409520",
    "end": "414560"
  },
  {
    "text": "action fields put object permission grant cloudtrail the ability to wide",
    "start": "414560",
    "end": "419759"
  },
  {
    "text": "objects to the bucket so this policy allows clutter to write objects yeah but",
    "start": "419759",
    "end": "425520"
  },
  {
    "text": "actually wait what we're seeing here is a very basic and simple resource",
    "start": "425520",
    "end": "431120"
  },
  {
    "text": "policy that we see all the time in aws right we see here a service cloud trade",
    "start": "431120",
    "end": "436800"
  },
  {
    "text": "that has access who dropped it into the bucket so if i want crowdfund right into my pocket makes sense that i would put",
    "start": "436800",
    "end": "443919"
  },
  {
    "text": "the principal cloud trail and the action put object but so what's missing here maybe we can let the",
    "start": "443919",
    "end": "450400"
  },
  {
    "text": "audience say think about it for for a second what's missing in this resource policy i gave the cloud thread service",
    "start": "450400",
    "end": "458000"
  },
  {
    "text": "access to my bucket what's the problem but i mean we said that you can it can write across",
    "start": "458000",
    "end": "464879"
  },
  {
    "text": "different accounts how how how does it how does it know if it's my account right into the bucket",
    "start": "464879",
    "end": "470960"
  },
  {
    "text": "or your account is right into the bucket i don't understand how this works",
    "start": "470960",
    "end": "477720"
  },
  {
    "text": "let's check it out so we log into our aws console",
    "start": "478240",
    "end": "484319"
  },
  {
    "text": "and we created a new trail and specify an s3 bucket of another account",
    "start": "484319",
    "end": "489759"
  },
  {
    "text": "we know that the s3 bucket was designed to store cloud records and the bucket granted cloudtrail write permissions",
    "start": "490560",
    "end": "498560"
  },
  {
    "text": "um you can see in the slide that cloudell keeps the records in the prefix aws logs",
    "start": "498639",
    "end": "504879"
  },
  {
    "text": "slash the account id we have no control of the over the path but it does not seems to be an issue",
    "start": "504879",
    "end": "511599"
  },
  {
    "text": "we clicked save and ready to see what happens it did not work no file is created in",
    "start": "511599",
    "end": "517518"
  },
  {
    "text": "the bucket and it remains empty in an attempt to understand why we went back to the resource policy",
    "start": "517519",
    "end": "525279"
  },
  {
    "text": "at a second look at the resource policy it can be seen that the bucket allows cloudville to write only to a very",
    "start": "526399",
    "end": "531600"
  },
  {
    "text": "specific path which is probably why our cloud fell to white to the target bucket",
    "start": "531600",
    "end": "537040"
  },
  {
    "text": "but wait we can bypass it easily when defining logs exporting cloud rail one",
    "start": "537040",
    "end": "542640"
  },
  {
    "text": "can specify a prefix to which the logs will be written maybe if we enter the permissioned path",
    "start": "542640",
    "end": "548640"
  },
  {
    "text": "in the policy it will be able to write so we went we went back to the console",
    "start": "548640",
    "end": "556320"
  },
  {
    "text": "and to the cultural console and specified the round path as in the policy into the prefix field",
    "start": "556320",
    "end": "561680"
  },
  {
    "text": "the aws logs slash the target account id now cloud must write our logs to the",
    "start": "561680",
    "end": "568399"
  },
  {
    "text": "correct path and it should work we click submit and yeah the logs were written to the",
    "start": "568399",
    "end": "574640"
  },
  {
    "text": "bucket we managed to get cloudtrail to write and to write to bucket of another account and this is really cool",
    "start": "574640",
    "end": "582320"
  },
  {
    "text": "in the slide you can see that you can see the outcomes of our actions a bucket owned by another account with",
    "start": "582320",
    "end": "589519"
  },
  {
    "text": "crowded records from our environment we were really excited about this find",
    "start": "589519",
    "end": "596080"
  },
  {
    "text": "we had no idea that it was possible to manipulate services in aws to perform operations on other accounts we wonder",
    "start": "596080",
    "end": "603519"
  },
  {
    "text": "if this is a unique unusual event or if there is a pattern here that can",
    "start": "603519",
    "end": "608640"
  },
  {
    "text": "be repeated with other services and if so what other services we could manipulate",
    "start": "608640",
    "end": "614800"
  },
  {
    "text": "and what we could get them to do so we continued the research",
    "start": "614800",
    "end": "619839"
  },
  {
    "text": "we discovered that aws config just like cloud can export findings to an s3",
    "start": "620240",
    "end": "625680"
  },
  {
    "text": "bucket aws config is a service that allows customers to assess and evaluate the configuration of the cloud resources and",
    "start": "625680",
    "end": "632880"
  },
  {
    "text": "just like cloud it also writes the configuration findings to an s3 bucket",
    "start": "632880",
    "end": "638079"
  },
  {
    "text": "with a path that can be changed with the prefix field the same vulnerability we found in cloudrail also worked for us in aws",
    "start": "638079",
    "end": "645360"
  },
  {
    "text": "config and allowed us to write service findings to buckets owned by other users",
    "start": "645360",
    "end": "652000"
  },
  {
    "text": "what other services what other services could be vulnerable can we find a service that will also",
    "start": "652000",
    "end": "657440"
  },
  {
    "text": "allow us to reap data we were looking for another services which support cross-account functionality which means",
    "start": "657440",
    "end": "664800"
  },
  {
    "text": "these services can accept resources from other accounts",
    "start": "664800",
    "end": "670560"
  },
  {
    "text": "while continuing the research we came across a service called serverless repository",
    "start": "671120",
    "end": "676399"
  },
  {
    "text": "serverless repository allow customers to manage serverless applications you can imagine a private library of",
    "start": "676399",
    "end": "682399"
  },
  {
    "text": "applications very similar to a private docker registry only that instead of",
    "start": "682399",
    "end": "687440"
  },
  {
    "text": "storing containers images it stores lambda functions at first glance it does not seems like a",
    "start": "687440",
    "end": "693760"
  },
  {
    "text": "service that performed course account operations but after using it for a bit we noticed",
    "start": "693760",
    "end": "699440"
  },
  {
    "text": "that creating a new repository in the service requires to supply the application as well as other resources",
    "start": "699440",
    "end": "705279"
  },
  {
    "text": "like redmi file and license file from an s3 bucket",
    "start": "705279",
    "end": "710720"
  },
  {
    "text": "for the service to load our application image in its readme license file it needs permission to death free bucket",
    "start": "711200",
    "end": "717440"
  },
  {
    "text": "the bucket must grant the service rate permissions and this is what the service resource policy looks like",
    "start": "717440",
    "end": "724880"
  },
  {
    "text": "this is the official policy from the amazon documentation it allows the serverless repository",
    "start": "725680",
    "end": "730720"
  },
  {
    "text": "service as we see in the principle field to perform get objects and basically read any object in the bucket",
    "start": "730720",
    "end": "737279"
  },
  {
    "text": "sure wait i know the audience here is a there are a lot of hackers here so i let them",
    "start": "737279",
    "end": "743680"
  },
  {
    "text": "think about the problem here knowing that we've already talked about the problem of culture a few minutes ago",
    "start": "743680",
    "end": "750399"
  },
  {
    "text": "so we have here again a resource policy that looks really great we have a service service repo we have an action",
    "start": "750399",
    "end": "757760"
  },
  {
    "text": "this time you get object it's more interesting actually because it allows us to read data right",
    "start": "757760",
    "end": "763600"
  },
  {
    "text": "so we have a bucket and we allow servers repo to read from our bracket",
    "start": "763600",
    "end": "768639"
  },
  {
    "text": "it's great but what's the problem what's missing and",
    "start": "768639",
    "end": "774399"
  },
  {
    "text": "it's a very similar problem to what we talked just a few minutes ago",
    "start": "774399",
    "end": "779600"
  },
  {
    "text": "i have a clue yeah maybe as we saw in the cloud rail policy",
    "start": "781360",
    "end": "787279"
  },
  {
    "text": "maybe it doesn't know which service is hiding which account is right",
    "start": "787279",
    "end": "793200"
  },
  {
    "text": "maybe anyone can use the server as repository service and make it perform little operations on",
    "start": "793200",
    "end": "800959"
  },
  {
    "text": "other customers or is this coping you're right like we don't see any scoping on this policy",
    "start": "800959",
    "end": "806160"
  },
  {
    "text": "how does it know how does the bucket know which service repo should be reading",
    "start": "806160",
    "end": "811279"
  },
  {
    "text": "from it and which should not it doesn't say can it be",
    "start": "811279",
    "end": "817519"
  },
  {
    "text": "so as we learned from the cloudtrail example there is no scoping or restriction conditions to scope which",
    "start": "817519",
    "end": "823519"
  },
  {
    "text": "account is authorized in fact serverless repository is authorized to access buckets of",
    "start": "823519",
    "end": "828800"
  },
  {
    "text": "thousands of customers who use the server repository service every user of the service must provided permission to",
    "start": "828800",
    "end": "834800"
  },
  {
    "text": "pull the application image from the market due to the nature of the service the buckets usually store",
    "start": "834800",
    "end": "841519"
  },
  {
    "text": "highly sensitive data such as source code artifacts and sometimes also",
    "start": "841519",
    "end": "846639"
  },
  {
    "text": "secrets and here we suspect",
    "start": "846639",
    "end": "851839"
  },
  {
    "text": "a malicious actor could take advantage of the service to access other users confidential files",
    "start": "851839",
    "end": "857760"
  },
  {
    "text": "so let's check it out we created a new repository called test",
    "start": "857760",
    "end": "864320"
  },
  {
    "text": "and we use the aws command line tool to update it and specify a new path from",
    "start": "864320",
    "end": "869760"
  },
  {
    "text": "which the readme file should be pulled as you can see in the slide we are asking the server's repository to pull",
    "start": "869760",
    "end": "876240"
  },
  {
    "text": "the readme file from another user's pocket serverless repo app number 10",
    "start": "876240",
    "end": "882079"
  },
  {
    "text": "is a isolated bucket owned by another account and we will try to read from it",
    "start": "882079",
    "end": "888480"
  },
  {
    "text": "let's go for a demo",
    "start": "888480",
    "end": "891440"
  },
  {
    "text": "so as you can see in my console using the aws command line tool",
    "start": "894160",
    "end": "900240"
  },
  {
    "text": "to perform update application operation on my repository",
    "start": "900240",
    "end": "905680"
  },
  {
    "text": "named test we will specify the ribbon url in which the serverless repo will pull",
    "start": "905680",
    "end": "913600"
  },
  {
    "text": "our redmi file and i will specify another bucket bucket that i don't own",
    "start": "913600",
    "end": "919519"
  },
  {
    "text": "called several slip-on app number 10 and we will try to fetch the config.yaml file",
    "start": "919519",
    "end": "927120"
  },
  {
    "text": "let's give it a try as you can see in the response the",
    "start": "927120",
    "end": "932959"
  },
  {
    "text": "operation succeed and now we have a readme file in our repository",
    "start": "932959",
    "end": "940079"
  },
  {
    "text": "that if everything works fine it was copied from our target bucket",
    "start": "940079",
    "end": "945279"
  },
  {
    "text": "let's use curl to fetch this file wow this is amazing we managed to read",
    "start": "945279",
    "end": "952720"
  },
  {
    "text": "the config yaml file from the target bucket and this is a cst file",
    "start": "952720",
    "end": "958560"
  },
  {
    "text": "that could contain sensitive information like this one which contains docker registry credentials",
    "start": "958560",
    "end": "965360"
  },
  {
    "text": "if we go to the buckets we will see this is the bucket in another account",
    "start": "965360",
    "end": "971519"
  },
  {
    "text": "we can see that the bucket objects are not public as aws states",
    "start": "971519",
    "end": "977120"
  },
  {
    "text": "and also all the block block public access features are turned",
    "start": "977120",
    "end": "982320"
  },
  {
    "text": "on the market also have the resource policy that allows serverless repo to perform get object on",
    "start": "982320",
    "end": "989920"
  },
  {
    "text": "the packet i enabled the logs and monitoring of the",
    "start": "989920",
    "end": "995040"
  },
  {
    "text": "bucket and pull it all to aws antenna",
    "start": "995040",
    "end": "1001199"
  },
  {
    "text": "here we can see the logs of our operations and as you can see",
    "start": "1001199",
    "end": "1006480"
  },
  {
    "text": "the serverless the requester of the operation was the serverless repository service",
    "start": "1006480",
    "end": "1012079"
  },
  {
    "text": "and it has no ip address which will be very hard to track it looks like a very innocent operation",
    "start": "1012079",
    "end": "1019360"
  },
  {
    "text": "and this is a very unique thing",
    "start": "1019360",
    "end": "1025160"
  },
  {
    "text": "so this is insane performing get object of get object operations on any serverless repository bucket is",
    "start": "1028959",
    "end": "1035038"
  },
  {
    "text": "definitely not intended and this proves that there is a pattern here a several supposedly buckets may contain",
    "start": "1035039",
    "end": "1042000"
  },
  {
    "text": "sensitive information that should never leave the organization source code leakage can expose intellectual property internal",
    "start": "1042000",
    "end": "1048558"
  },
  {
    "text": "architecture code vulnerabilities and sometimes even hard-coded secrets and password and the buckets may have other users",
    "start": "1048559",
    "end": "1054799"
  },
  {
    "text": "besides storing the serverless application and may contain other sensitive data however in order to exploit the",
    "start": "1054799",
    "end": "1061039"
  },
  {
    "text": "vulnerability on a real target the attacker will need to know the names of the objects they wanted to read the",
    "start": "1061039",
    "end": "1066480"
  },
  {
    "text": "names can be anything and requires pure knowledge of the target or to combine a vulnerability with",
    "start": "1066480",
    "end": "1071520"
  },
  {
    "text": "additional techniques there is a high risk of such vulnerabilities",
    "start": "1071520",
    "end": "1076880"
  },
  {
    "text": "that they allow exfiltration of data out of the organization without any incrementing in the",
    "start": "1076880",
    "end": "1082400"
  },
  {
    "text": "indicators as we've seen the logs the data exploration is done by the serverless repository itself and looks like a",
    "start": "1082400",
    "end": "1088960"
  },
  {
    "text": "routine and innocent activity everyone trusts amazon services and such an action will not be revealed even in",
    "start": "1088960",
    "end": "1095840"
  },
  {
    "text": "the most isolated organizations",
    "start": "1095840",
    "end": "1099760"
  },
  {
    "text": "so why we've seen so far basically we broke the isolation",
    "start": "1102960",
    "end": "1108480"
  },
  {
    "text": "we showed you here three vulnerabilities in three different services that we were able to write and read data and we have",
    "start": "1108480",
    "end": "1115360"
  },
  {
    "text": "several more vulnerabilities currently in disclosure process some of them even allowing to run code",
    "start": "1115360",
    "end": "1121039"
  },
  {
    "text": "now these are just the services that we looked at but this is just the tip of the iceberg there's hundreds of services",
    "start": "1121039",
    "end": "1127600"
  },
  {
    "text": "in address and many of them are getting more and more cross-account capabilities because cross-account is the main",
    "start": "1127600",
    "end": "1133919"
  },
  {
    "text": "strategy today for organizations using aws so the attack surface is just growing and what we understood is that",
    "start": "1133919",
    "end": "1141360"
  },
  {
    "text": "any service that performs cross-account actions might be in the risk to be manipulated",
    "start": "1141360",
    "end": "1147679"
  },
  {
    "text": "by an attacker to perform actions on the isolated customer account",
    "start": "1147679",
    "end": "1153280"
  },
  {
    "text": "so this is really in our view a new class of probabilities across account vulnerabilities that",
    "start": "1153280",
    "end": "1160240"
  },
  {
    "text": "there will be many many more in coming as we look into more services",
    "start": "1160240",
    "end": "1167919"
  },
  {
    "text": "so now i want to take you to the second part of this talk what we learned about the process of",
    "start": "1168880",
    "end": "1176160"
  },
  {
    "text": "fixing cloud vulnerabilities what works about it and what is completely problematic so let's take you through",
    "start": "1176160",
    "end": "1182080"
  },
  {
    "text": "the timeline let's start from the time we actually sent the report so this was around",
    "start": "1182080",
    "end": "1187200"
  },
  {
    "text": "november and address team worked with us fix this really quickly so around",
    "start": "1187200",
    "end": "1193360"
  },
  {
    "text": "generally all of the vulnerabilities were completely fixed and they responded they notified",
    "start": "1193360",
    "end": "1199120"
  },
  {
    "text": "customers everything went as planned basically they the rest in fixed and",
    "start": "1199120",
    "end": "1205200"
  },
  {
    "text": "completely closed aws config and cloud trail vulnerabilities how did they do it so we used a way to use the prefix in",
    "start": "1205200",
    "end": "1213360"
  },
  {
    "text": "order to bypass the aws logs and ability of a cloud trail to write into a",
    "start": "1213360",
    "end": "1219840"
  },
  {
    "text": "specific folder so what they did is basically they blocked the ability to have advanced logs inside this prefix",
    "start": "1219840",
    "end": "1227200"
  },
  {
    "text": "and that closes the vulnerability image was sent to customers and also notifications sent in a personal health",
    "start": "1227200",
    "end": "1234159"
  },
  {
    "text": "dashboard so seems like this vulnerability was completely closed there we should say it was closed only",
    "start": "1234159",
    "end": "1240880"
  },
  {
    "text": "for customers to really really go and actually take the documentation from aws",
    "start": "1240880",
    "end": "1246000"
  },
  {
    "text": "and do exactly as it says right because many customers close their vulnerability for this but",
    "start": "1246000",
    "end": "1252799"
  },
  {
    "text": "if they just did cloud trade and they gave access cloud turned to an entire packet what we've seen many customers",
    "start": "1252799",
    "end": "1258400"
  },
  {
    "text": "did it because again we trust cert awareness then they're still susceptible to this",
    "start": "1258400",
    "end": "1263840"
  },
  {
    "text": "vulnerability this is the kind of notifications abs",
    "start": "1263840",
    "end": "1269679"
  },
  {
    "text": "sent customers that this kind of a prefix at the best logs will not be available after this date",
    "start": "1269679",
    "end": "1276960"
  },
  {
    "text": "so now to the second one of it that was fixed that's even more interesting so everybody else did hear exactly what you",
    "start": "1276960",
    "end": "1283600"
  },
  {
    "text": "would expect the problem was coping so they added a scoping condition so you can actually say you can access",
    "start": "1283600",
    "end": "1291120"
  },
  {
    "text": "this bucket from servers repo but only from a specific source account that's great they also send users notifications",
    "start": "1291120",
    "end": "1298240"
  },
  {
    "text": "and they also send notifications in the personality of dashboard perfect and also the fix looks great this is exactly",
    "start": "1298240",
    "end": "1304960"
  },
  {
    "text": "what you would expect you would expect this now we have a condition that specifies the source target so if i am",
    "start": "1304960",
    "end": "1312240"
  },
  {
    "text": "using service repo i need to state exactly which account is allowed to access the bucket so",
    "start": "1312240",
    "end": "1319120"
  },
  {
    "text": "everything at this point looked great we found a few abilities edibles fixed them and we thought it's over",
    "start": "1319120",
    "end": "1325679"
  },
  {
    "text": "then what happened is that we looked after a few months in the",
    "start": "1325679",
    "end": "1331600"
  },
  {
    "text": "that we can survey and we try to see what is the current status and there we were completely surprised",
    "start": "1331600",
    "end": "1339440"
  },
  {
    "text": "five months after those vulnerabilities were closed majority of customers were still",
    "start": "1339440",
    "end": "1345600"
  },
  {
    "text": "vulnerable in fact the our server showed that 90 of the servers repository buckets were",
    "start": "1345600",
    "end": "1352080"
  },
  {
    "text": "still vulnerable to the vulnerability that we found 90 percent how can that be",
    "start": "1352080",
    "end": "1357280"
  },
  {
    "text": "it was all fixed the interesting act quickly send notifications how can that be that the vulnerability is still there",
    "start": "1357280",
    "end": "1364400"
  },
  {
    "text": "so we started thinking about it and the more we thought about it we understood that the entire process of",
    "start": "1364400",
    "end": "1371360"
  },
  {
    "text": "handling cloud vulnerabilities is completely broken we looked into that we looked at the environments what we",
    "start": "1371360",
    "end": "1377600"
  },
  {
    "text": "understood is that the users even though some of them got emails the users are",
    "start": "1377600",
    "end": "1382640"
  },
  {
    "text": "responsible to fix this vulnerability aws cannot fix it if they could they would have fixed it on their own but",
    "start": "1382640",
    "end": "1388640"
  },
  {
    "text": "they can't because they cannot know what was the source account that you made as a user so the",
    "start": "1388640",
    "end": "1395039"
  },
  {
    "text": "users need to fix this vulnerability and the problem is that they simply don't they're not they lack",
    "start": "1395039",
    "end": "1401840"
  },
  {
    "text": "awareness the security teams don't even know the vulnerability exists because the security teams are not getting those",
    "start": "1401840",
    "end": "1407760"
  },
  {
    "text": "emails imagine you are a security team and you have hundreds of different accounts usually you don't even have",
    "start": "1407760",
    "end": "1413200"
  },
  {
    "text": "permissions to the account how can you know there is an email waiting for one of the account managers and how many",
    "start": "1413200",
    "end": "1418240"
  },
  {
    "text": "emails are being sent how do you know this is an important fix to do and this is the reason that those fixes didn't",
    "start": "1418240",
    "end": "1424240"
  },
  {
    "text": "actually occur and the more we thought about it the more we understood this is a big big problem so",
    "start": "1424240",
    "end": "1431919"
  },
  {
    "text": "we had two main takeaways the first takeaway related to the research that we've done on across every",
    "start": "1431919",
    "end": "1438960"
  },
  {
    "text": "success is that service access is a new type of cloud",
    "start": "1438960",
    "end": "1444640"
  },
  {
    "text": "exposure risk whenever we give access to a service until now i thought it's okay i trusted",
    "start": "1444640",
    "end": "1451520"
  },
  {
    "text": "the gls so i trusted the web services so i can give them any access that they want",
    "start": "1451520",
    "end": "1456640"
  },
  {
    "text": "but that's not true if you give access to a service an attacker as we saw here and again we",
    "start": "1456640",
    "end": "1463039"
  },
  {
    "text": "saw just a few examples an attacker might be able to manipulate the service in order to access your resources so the",
    "start": "1463039",
    "end": "1469600"
  },
  {
    "text": "new way to think about service access is that service access is a type of cloud exposure and needs to be handled like",
    "start": "1469600",
    "end": "1475919"
  },
  {
    "text": "cloud exposure what permissions are we giving the service why can we scope it did we scope",
    "start": "1475919",
    "end": "1482480"
  },
  {
    "text": "it did we give any service access that wasn't supposed to be given now this is",
    "start": "1482480",
    "end": "1488080"
  },
  {
    "text": "great as a high level recommendation but the reality is this is really hard because each service has a different way",
    "start": "1488080",
    "end": "1494480"
  },
  {
    "text": "to scope as we saw cloudtrail is using a tef and srs report has the condition and",
    "start": "1494480",
    "end": "1500159"
  },
  {
    "text": "some services don't even support those conditions yet and what we saw is that it's not only",
    "start": "1500159",
    "end": "1506080"
  },
  {
    "text": "about the complexity of the services that some of the vulnerabilities we found they persisted because we actually",
    "start": "1506080",
    "end": "1512880"
  },
  {
    "text": "found github projects that still contain the code that was before the condition was added right so it's vulnerable code",
    "start": "1512880",
    "end": "1519679"
  },
  {
    "text": "and users keep using them so they the problem may arise from different",
    "start": "1519679",
    "end": "1525360"
  },
  {
    "text": "templates and code infrastructures score that you're using that still has vulnerable code it's even worse than",
    "start": "1525360",
    "end": "1530640"
  },
  {
    "text": "that every few weeks a new course account",
    "start": "1530640",
    "end": "1535919"
  },
  {
    "text": "service gets new permissions like you see different blogs by aws about cloud cloudtrade about glue and there was slew",
    "start": "1535919",
    "end": "1543200"
  },
  {
    "text": "getting cross-account access to kinesis or could be getting cross-account capabilities or scs getting",
    "start": "1543200",
    "end": "1549360"
  },
  {
    "text": "cross-counter capabilities any of these services a day before this was announced the same resource policy",
    "start": "1549360",
    "end": "1557600"
  },
  {
    "text": "was not vulnerable once it becomes pros account it becomes more of it how can i track",
    "start": "1557600",
    "end": "1563120"
  },
  {
    "text": "all of that so there's infrastructure as code there's new services there's different conditions it's impossible to",
    "start": "1563120",
    "end": "1568880"
  },
  {
    "text": "treat that how am i able to expect the users the security teams to track",
    "start": "1568880",
    "end": "1574480"
  },
  {
    "text": "all of those notifications and that led us to the second takeaway and i think",
    "start": "1574480",
    "end": "1580480"
  },
  {
    "text": "this takeaway is probably bigger than the specific research that we did",
    "start": "1580480",
    "end": "1586000"
  },
  {
    "text": "this is around cloud vulnerabilities the process is broken",
    "start": "1586000",
    "end": "1591279"
  },
  {
    "text": "even notifications are definitely not the solution we cannot expect a security",
    "start": "1591279",
    "end": "1597360"
  },
  {
    "text": "team that to track even notifications usually don't even get them and there is hundreds of changes in cloud providers",
    "start": "1597360",
    "end": "1604000"
  },
  {
    "text": "every day they don't even know the security implication how can we expect the security teams to trick that and",
    "start": "1604000",
    "end": "1610159"
  },
  {
    "text": "even more than that we are with a cloud security company we found a few",
    "start": "1610159",
    "end": "1615200"
  },
  {
    "text": "vulnerabilities and i want to notify customers what am i supposed to tell them hey you have share vulnerability",
    "start": "1615200",
    "end": "1620880"
  },
  {
    "text": "number one and share vulnerability number two but how do i tell them their vulnerability and even more than that i",
    "start": "1620880",
    "end": "1626400"
  },
  {
    "text": "want to share their abilities that we found with the industry with practitioners with other cloud security",
    "start": "1626400",
    "end": "1632080"
  },
  {
    "text": "companies how am i supposed to do that what's the format to do that it feels like there's a bigger problem",
    "start": "1632080",
    "end": "1638720"
  },
  {
    "text": "here that we need to fix there is a maturity problem here and as the more we looked into it the more we talked with",
    "start": "1638720",
    "end": "1644240"
  },
  {
    "text": "people from the industry we understood the same problem was already fixed",
    "start": "1644240",
    "end": "1650559"
  },
  {
    "text": "in a different domain 20 years ago in 1999",
    "start": "1650559",
    "end": "1655840"
  },
  {
    "text": "the cve system was born why did we invent the cve system cpe",
    "start": "1655840",
    "end": "1661440"
  },
  {
    "text": "was a way to identify and create a central database for all vulnerabilities",
    "start": "1661440",
    "end": "1666480"
  },
  {
    "text": "in code because before we had the cve system every vendor and every customer",
    "start": "1666480",
    "end": "1672080"
  },
  {
    "text": "were managing code vulnerabilities in their own separate databases so you could never understand exactly what",
    "start": "1672080",
    "end": "1678480"
  },
  {
    "text": "vulnerabilities you have and what workflow was fixed cbe system solved the",
    "start": "1678480",
    "end": "1683679"
  },
  {
    "text": "three key problems that we face today in california abilities number one identification",
    "start": "1683679",
    "end": "1690399"
  },
  {
    "text": "instead of having shear vulnerability number one and share vulnerability number two we should have cloud cve 2021",
    "start": "1690399",
    "end": "1697679"
  },
  {
    "text": "532 we should have a shared naming system so we can identify the vulnerabilities that we found and when",
    "start": "1697679",
    "end": "1703760"
  },
  {
    "text": "we found those vulnerabilities we should submit it to someone right and get a cve",
    "start": "1703760",
    "end": "1709520"
  },
  {
    "text": "a cloud cve id the second problem that the cbe system solves is the severity",
    "start": "1709520",
    "end": "1715279"
  },
  {
    "text": "today you get an email notification but you don't know how severe severe it is maybe shares vulnerabilities here would",
    "start": "1715279",
    "end": "1721760"
  },
  {
    "text": "get maybe a 6 out of ten because they're not easy to exploit and the impact is",
    "start": "1721760",
    "end": "1727120"
  },
  {
    "text": "limited right so once we have a clear severity mechanism it allows the the security",
    "start": "1727120",
    "end": "1733919"
  },
  {
    "text": "teams to prioritize or to fix and what is not and less urgent to fix so",
    "start": "1733919",
    "end": "1738960"
  },
  {
    "text": "identity prioritization and severity and the third which is not less important is",
    "start": "1738960",
    "end": "1744880"
  },
  {
    "text": "tracking systems tools that allow you to understand exactly what probabilities you have what you",
    "start": "1744880",
    "end": "1751360"
  },
  {
    "text": "don't have it cannot depend on the fact that hey in which we found three vulnerabilities and there's other",
    "start": "1751360",
    "end": "1757440"
  },
  {
    "text": "customer knows about two other vulnerabilities no we need a center database and we need tools that tell you",
    "start": "1757440",
    "end": "1762960"
  },
  {
    "text": "exactly which vulnerabilities and what severity you have just like we have when we scan container images and i get a",
    "start": "1762960",
    "end": "1768960"
  },
  {
    "text": "report and we get the same report from all tools these are the vulnerabilities you have these are critical these are",
    "start": "1768960",
    "end": "1774640"
  },
  {
    "text": "high these are medium and this is what you have to fix we should do that for cloud cvs as well",
    "start": "1774640",
    "end": "1782080"
  },
  {
    "text": "and we want to leverage this stock as a call for action to the industry we",
    "start": "1782080",
    "end": "1788080"
  },
  {
    "text": "believe this is the time for the cloud security to become more mature it's time to create the cloud cve",
    "start": "1788080",
    "end": "1796000"
  },
  {
    "text": "database and we twist in the cloud research team and the company we want to",
    "start": "1796000",
    "end": "1802399"
  },
  {
    "text": "cooperate with anyone with practitioners with other organizations that are",
    "start": "1802399",
    "end": "1807840"
  },
  {
    "text": "willing to build this cross cloud vulnerability database and again i'm saying cross cloud because this is not",
    "start": "1807840",
    "end": "1814399"
  },
  {
    "text": "an aws problem aws our security work with us they they fix their vulnerabilities they keep thinking about",
    "start": "1814399",
    "end": "1821440"
  },
  {
    "text": "new ways to notify customers they recently created the access analyzer",
    "start": "1821440",
    "end": "1826640"
  },
  {
    "text": "that will have this kind of notifications as well but this is not enough the problem is cross-cloud and this is",
    "start": "1826640",
    "end": "1833120"
  },
  {
    "text": "an industry problem and we need to solve it as an industry and i think it is time so we would love to partner with any",
    "start": "1833120",
    "end": "1839760"
  },
  {
    "text": "company organization or practitioner that wants to build this shared",
    "start": "1839760",
    "end": "1844880"
  },
  {
    "text": "availability database and for me this is the most important takeaway from this",
    "start": "1844880",
    "end": "1850480"
  },
  {
    "text": "talk",
    "start": "1850480",
    "end": "1852720"
  },
  {
    "text": "so and now i would like to talk about further research both on the other side and also",
    "start": "1857760",
    "end": "1863360"
  },
  {
    "text": "on the community side and mapping aws services that have consequent features takes a lot of time",
    "start": "1863360",
    "end": "1870480"
  },
  {
    "text": "and amazon has more than 200 services and it's very difficult to figure which service have crossed account",
    "start": "1870480",
    "end": "1875519"
  },
  {
    "text": "functionality and which not for us what worked best was to govern resource policies in our environment and",
    "start": "1875519",
    "end": "1881519"
  },
  {
    "text": "re-database documentations i want to encourage the research community to continue this research in parallel to us",
    "start": "1881519",
    "end": "1888240"
  },
  {
    "text": "and help the community uncover more problematic cost account functionality in addition we believe that cost account",
    "start": "1888240",
    "end": "1894000"
  },
  {
    "text": "vulnerabilities based on identity issues can also be found in other cloud providers and there is so much more",
    "start": "1894000",
    "end": "1900640"
  },
  {
    "text": "research to be done in the field those of you would like to research the subjects or in general anyone with",
    "start": "1900640",
    "end": "1908080"
  },
  {
    "text": "questions or idea please feel free to contact us we would love to hear from you thank you",
    "start": "1908080",
    "end": "1916200"
  }
]