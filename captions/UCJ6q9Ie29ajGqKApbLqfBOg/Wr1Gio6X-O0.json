[
  {
    "text": "my name is Shing and I'm the manager of Android red team um next to me is our",
    "start": "3080",
    "end": "8599"
  },
  {
    "text": "security Sur Shing so our story will be about the way to Android route",
    "start": "8599",
    "end": "13679"
  },
  {
    "text": "exploiting your GPU on smartphone our story starts back uh from",
    "start": "13679",
    "end": "18720"
  },
  {
    "text": "early this year when she decided to take a look at a corcom GPU",
    "start": "18720",
    "end": "23800"
  },
  {
    "text": "driver so we'll talk about how our discoveries and I think this will be benefit to everyone here",
    "start": "23800",
    "end": "30599"
  },
  {
    "text": "and also I really appreciate for everyone to stay up late here and being attending our sessions I know it's hard",
    "start": "30599",
    "end": "37280"
  },
  {
    "text": "with all the parties going around and one thing I want to mention",
    "start": "37280",
    "end": "43440"
  },
  {
    "text": "is that shiling did most of the technical work so big credit to shiling and also we have our uh Tech lead Eugene",
    "start": "43440",
    "end": "50199"
  },
  {
    "text": "rodov sitting in the front row he did a lots of contribution to the slides and to the demos really appreciate that",
    "start": "50199",
    "end": "56480"
  },
  {
    "text": "effort so before we dive into technical details",
    "start": "56480",
    "end": "62280"
  },
  {
    "text": "here's the brief intro of our team we are Android red team our goal is to increase Android and pixel security and",
    "start": "62280",
    "end": "69400"
  },
  {
    "text": "we do this by simulating adversary attacks um on Android key component and",
    "start": "69400",
    "end": "74759"
  },
  {
    "text": "the key features and our our work broke down into um a couple items first is that we",
    "start": "74759",
    "end": "82280"
  },
  {
    "text": "do offensive security research reviewing um design and implementations hoping to",
    "start": "82280",
    "end": "88720"
  },
  {
    "text": "verify all break security assumption that feature team has established and we also scale our work",
    "start": "88720",
    "end": "95920"
  },
  {
    "text": "through tool development for example continuous fuzing all static analysis once we find issues we'll try",
    "start": "95920",
    "end": "104040"
  },
  {
    "text": "um to develop proof concept hopefully to show The Real World impact just in case",
    "start": "104040",
    "end": "109439"
  },
  {
    "text": "some of the issues are not so easy to see what's a real impact and while we're exploiting the uh",
    "start": "109439",
    "end": "116399"
  },
  {
    "text": "the issues we're also assessing the efficacy of the security imp mitigations we've already have um basically the more",
    "start": "116399",
    "end": "124920"
  },
  {
    "text": "pain we suffer when we de when we develop exploit the more secure and the hour and the user",
    "start": "124920",
    "end": "132479"
  },
  {
    "text": "has so here's our agenda so we'll start with a little bit background and then",
    "start": "133920",
    "end": "138959"
  },
  {
    "text": "talk about the corcom orinal GPU architecture and then we'll go into the",
    "start": "138959",
    "end": "144319"
  },
  {
    "text": "CV 2024 2 Series 380 details uh explaining how it works and how uh",
    "start": "144319",
    "end": "150480"
  },
  {
    "text": "exploited to get root privilege from unrusted apps as conclusion we'll talk about our",
    "start": "150480",
    "end": "157080"
  },
  {
    "text": "methodologies and also the brainstorming of",
    "start": "157080",
    "end": "161800"
  },
  {
    "text": "mitigations so why uh Android GPU driver so compared to the Android ecosystem our",
    "start": "163840",
    "end": "170360"
  },
  {
    "text": "team is really tiny and that means we have very limited resources we want to spend our time into the most impactful",
    "start": "170360",
    "end": "178599"
  },
  {
    "text": "areas um before every engagement we start we need to give us justifications why we want to spend time in the Target",
    "start": "178599",
    "end": "185640"
  },
  {
    "text": "so for this target I think there are three reasons number one I think this is also most important one is that on Android",
    "start": "185640",
    "end": "193599"
  },
  {
    "text": "that unprivate applications doesn't need any special permissions to access GPU",
    "start": "193599",
    "end": "198799"
  },
  {
    "text": "driver on the right hand you can see a very simplified diagram showing how it",
    "start": "198799",
    "end": "204360"
  },
  {
    "text": "works the unpr unprivileged applications they talk to GPU through the user space",
    "start": "204360",
    "end": "209840"
  },
  {
    "text": "Library whether it's openg gr volcano anything and this driver will talk to",
    "start": "209840",
    "end": "215400"
  },
  {
    "text": "the GPU uh this this user space driver will talk to the GPU kernel driver um",
    "start": "215400",
    "end": "220920"
  },
  {
    "text": "directly inside of app's process this means app has to get access to the dpu",
    "start": "220920",
    "end": "226280"
  },
  {
    "text": "driver directly this is a big problem and this is also why um security researchers are",
    "start": "226280",
    "end": "234079"
  },
  {
    "text": "very interested in GPU drivers and also uh for performance",
    "start": "234079",
    "end": "239840"
  },
  {
    "text": "reasons GPU needs to be able to copy large amount of data between us space",
    "start": "239840",
    "end": "245200"
  },
  {
    "text": "and kernel space the regular M Copy doesn't work this way so they have to be able to manipulate in physical memories",
    "start": "245200",
    "end": "251360"
  },
  {
    "text": "directly and this is a very powerful primitive and attackers want",
    "start": "251360",
    "end": "257639"
  },
  {
    "text": "that lastly again also I think is because performance there's optimizations and this causes high",
    "start": "257639",
    "end": "264880"
  },
  {
    "text": "complexity in GPU driver the high complexity means it's really hard to",
    "start": "264880",
    "end": "270440"
  },
  {
    "text": "create bug free code and also it's not easy to fix a security",
    "start": "270440",
    "end": "277520"
  },
  {
    "text": "issue it's very common that when uh you fix the issue the issue is not completely fixed or even worse you",
    "start": "277520",
    "end": "283720"
  },
  {
    "text": "introduce new new security issues so all these makes GPU driver a",
    "start": "283720",
    "end": "289240"
  },
  {
    "text": "very good Target for security researchers and also attackers so why corcom G adrenal GPU",
    "start": "289240",
    "end": "296720"
  },
  {
    "text": "corcom is one of the most important smartphone s so vendor many devices are using corcom so and on",
    "start": "296720",
    "end": "303240"
  },
  {
    "text": "those S so's Ado is the GPU used most last one is also true for all the",
    "start": "303240",
    "end": "309759"
  },
  {
    "text": "other GPU devices is that GPU is a actively developing area because of",
    "start": "309759",
    "end": "316800"
  },
  {
    "text": "performance reasons uh Power consumptions there's constantly new architecture Evolutions happening new",
    "start": "316800",
    "end": "324120"
  },
  {
    "text": "Hardwares new softwares this new change means bug",
    "start": "324120",
    "end": "330560"
  },
  {
    "text": "and coincidently um recently there's a there's a there's a evolution in",
    "start": "330560",
    "end": "336440"
  },
  {
    "text": "architecture of adrenal GPU driver so we want to take a look into the uh into the change to see if there's anything",
    "start": "336440",
    "end": "343520"
  },
  {
    "text": "interesting and by the way all our research is based on open- Source GPU driver that qualcom hosted in their um",
    "start": "343520",
    "end": "351160"
  },
  {
    "text": "gitlab repo so there's no private information or any um Priory information",
    "start": "351160",
    "end": "356800"
  },
  {
    "text": "accessed during this engagement everything is",
    "start": "356800",
    "end": "361639"
  },
  {
    "text": "public so we looked into uh the security bulletins published by corcom and made",
    "start": "363840",
    "end": "370000"
  },
  {
    "text": "this chart it shows the number of security issues per each quarter I mean the the side of the bar chart might be a",
    "start": "370000",
    "end": "376919"
  },
  {
    "text": "little bit misleading the numbers are actually not not high it's single digit however what I want to see here is",
    "start": "376919",
    "end": "384680"
  },
  {
    "text": "that this looks like a constant rate of issues coming every quarter there's no",
    "start": "384680",
    "end": "391240"
  },
  {
    "text": "train of going down or going up so this gives us a little bit confidence that if",
    "start": "391240",
    "end": "396880"
  },
  {
    "text": "I look into the GPU drivers I will probably see",
    "start": "396880",
    "end": "402479"
  },
  {
    "text": "something and among all those security issues there are lots of high-profile",
    "start": "402479",
    "end": "407919"
  },
  {
    "text": "issues other security researchers has publicly closed all talked about there",
    "start": "407919",
    "end": "413240"
  },
  {
    "text": "are lots of writeups um really appreciate for their effort to share the details this is really great for us to",
    "start": "413240",
    "end": "420759"
  },
  {
    "text": "study and so that we can dive into an area we have never touched",
    "start": "420759",
    "end": "426360"
  },
  {
    "text": "before so now let's look back into just last three months here are all the",
    "start": "427680",
    "end": "433440"
  },
  {
    "text": "security issues reported to corcom in last three months well uh disclosed by corcom secured bulletin and as you can",
    "start": "433440",
    "end": "440599"
  },
  {
    "text": "see they all rated High most likely this means local privilege escalations with a little bit analysis",
    "start": "440599",
    "end": "448240"
  },
  {
    "text": "um we can see that most of the issues are focusing onu areas that means they",
    "start": "448240",
    "end": "454680"
  },
  {
    "text": "are trying to manipulating the physical memories and also about exploitability",
    "start": "454680",
    "end": "459800"
  },
  {
    "text": "uh this might be a little bit subjective and really up to Shan's uh explanation",
    "start": "459800",
    "end": "466080"
  },
  {
    "text": "basically most of them are exploitable with relatively easy",
    "start": "466080",
    "end": "471400"
  },
  {
    "text": "effort and more importantly once exploited the exploit is quite",
    "start": "471400",
    "end": "477759"
  },
  {
    "text": "stable this is also something that unique to the GPU",
    "start": "477759",
    "end": "483319"
  },
  {
    "text": "issues so during our activities uh she didn't identify nine plus",
    "start": "483400",
    "end": "489599"
  },
  {
    "text": "issues and uh today we're going to talk about cve 2024 23380 this is one of the",
    "start": "489599",
    "end": "496000"
  },
  {
    "text": "issue that we exploited we report the issue right after discovery to corcom and corcom",
    "start": "496000",
    "end": "502879"
  },
  {
    "text": "notified the customers with a patch around April 2024 and later the issue is published in corcom security Bulletin in",
    "start": "502879",
    "end": "509639"
  },
  {
    "text": "July uh 2024 uh you can check the security buleon and see if your device is affected and check your security patch",
    "start": "509639",
    "end": "516719"
  },
  {
    "text": "level if you see a security patch level of July or even later that means your device is already",
    "start": "516719",
    "end": "523000"
  },
  {
    "text": "fixed but we'll talk about the details of the issue and talk about how we explore this issue to gain root",
    "start": "523000",
    "end": "529399"
  },
  {
    "text": "privilege from untrusted apps okay from here I'll hand over to",
    "start": "529399",
    "end": "536560"
  },
  {
    "text": "shiling to talk about the details yes thank you sh so let's get a quick look",
    "start": "536560",
    "end": "543560"
  },
  {
    "text": "how cookon and GPU driver works so you can see in the middle it's an GPU driver",
    "start": "543560",
    "end": "550839"
  },
  {
    "text": "called kgssl driver it's a grou between the US space and Hardware so from the",
    "start": "550839",
    "end": "557160"
  },
  {
    "text": "user space perspective the we be a set of interface to control the drawer and",
    "start": "557160",
    "end": "562720"
  },
  {
    "text": "Hardware the first one is the context used to identify uh us space application",
    "start": "562720",
    "end": "568519"
  },
  {
    "text": "and also manages the GPU resources and of course we want to share memory to the",
    "start": "568519",
    "end": "575760"
  },
  {
    "text": "uh GPU Hardware so we have some memory interface uh we have basical memory and",
    "start": "575760",
    "end": "581519"
  },
  {
    "text": "US space memory DM memory and previously we also have this SP memory but now it's",
    "start": "581519",
    "end": "587200"
  },
  {
    "text": "not used anymore uh of course we also want to send the custom GP commands to",
    "start": "587200",
    "end": "593440"
  },
  {
    "text": "or the GPU Hardware so we will have uh command interface and also to",
    "start": "593440",
    "end": "598880"
  },
  {
    "text": "synchronize between the US space and the GPU Hardware we will have the synchronization mechanism so to uh",
    "start": "598880",
    "end": "607360"
  },
  {
    "text": "finish this tasks the driver will have a lot of features the first one is the",
    "start": "607360",
    "end": "613000"
  },
  {
    "text": "command que so this one is used to receive the command from the uh us space",
    "start": "613000",
    "end": "619120"
  },
  {
    "text": "and then the software dispatcher will get this command and then add a lary information to or all these commands and",
    "start": "619120",
    "end": "626839"
  },
  {
    "text": "send them to the rim buffer so there is a uh simple frameware in the hardware so",
    "start": "626839",
    "end": "633279"
  },
  {
    "text": "the frameware we are get the commands from the r Brer analyze them and then send them to the hardware so the",
    "start": "633279",
    "end": "640360"
  },
  {
    "text": "hardware can then run customer commands so uh this is the basic workflow of the",
    "start": "640360",
    "end": "647320"
  },
  {
    "text": "GPU driver and also there are some other other features like the global buffer",
    "start": "647320",
    "end": "653760"
  },
  {
    "text": "used uh used for all the contexts and also registers used to control the G",
    "start": "653760",
    "end": "659480"
  },
  {
    "text": "Hardware uh for memory management in the jav there will be a memory p and mmu to",
    "start": "659480",
    "end": "666200"
  },
  {
    "text": "control the use space uh page table and I you to control the GPU Hardware page",
    "start": "666200",
    "end": "672680"
  },
  {
    "text": "table so uh this is the basical architecture of the older uh GPU driver",
    "start": "672680",
    "end": "679720"
  },
  {
    "text": "uh here is a a new architecture so all the new features are in red color uh",
    "start": "679720",
    "end": "687680"
  },
  {
    "text": "here you can see the most important change is about the uh software dispatcher replaced by the hardware",
    "start": "687680",
    "end": "693760"
  },
  {
    "text": "scheder uh which means the uh command from the use space will not be sent to",
    "start": "693760",
    "end": "699600"
  },
  {
    "text": "the RAR directory by the draw uh in State uh the framework will take over so",
    "start": "699600",
    "end": "706360"
  },
  {
    "text": "the uh command from the US space will be sent to uh highi command q u then the FW",
    "start": "706360",
    "end": "713920"
  },
  {
    "text": "will do the job pre previously finished by the software dispatcher so the",
    "start": "713920",
    "end": "720399"
  },
  {
    "text": "framework we are do a lot of job here but because it's lot open source so we don't know what's what here doing so",
    "start": "720399",
    "end": "727480"
  },
  {
    "text": "what I guess is it's uh doing similar jobs uh similar to the previous software",
    "start": "727480",
    "end": "732680"
  },
  {
    "text": "dispatcher and get all the commands into the rim buffer so that's the most",
    "start": "732680",
    "end": "738360"
  },
  {
    "text": "important change here uh also there are some other changes along with this change for example we have the hardware",
    "start": "738360",
    "end": "745199"
  },
  {
    "text": "friend additional to the previous software friend here we a lot of new code and a new component the hardware",
    "start": "745199",
    "end": "753199"
  },
  {
    "text": "fence q and also the uh GP Hardware we be able to send back Hardware fence",
    "start": "753199",
    "end": "758560"
  },
  {
    "text": "event so this the new code will bring a lot of new attack services for the",
    "start": "758560",
    "end": "764519"
  },
  {
    "text": "memory management we will have a new which bu object and also we will have a",
    "start": "764519",
    "end": "771199"
  },
  {
    "text": "Quon own our Memu so to replace the previous AR IU so all this new uh tax",
    "start": "771199",
    "end": "779399"
  },
  {
    "text": "surface is very vulnerable so if you look into the recent uh security buing",
    "start": "779399",
    "end": "784880"
  },
  {
    "text": "you can find almost all the uh new vulnerability in these new features so if you want to find new issues uh these",
    "start": "784880",
    "end": "792160"
  },
  {
    "text": "new features are good starting point okay here I will quickly introduce",
    "start": "792160",
    "end": "797880"
  },
  {
    "text": "the basic memory management in the uh GPU Java the first one is the basic memory object so it's the basic one uh",
    "start": "797880",
    "end": "806199"
  },
  {
    "text": "almost used in most of the case when you want to share a memory between the user",
    "start": "806199",
    "end": "811360"
  },
  {
    "text": "space and the GPU you will call this our control with the parameter how many",
    "start": "811360",
    "end": "816959"
  },
  {
    "text": "pages you want to uh want to request so the driver will get this request and",
    "start": "816959",
    "end": "822320"
  },
  {
    "text": "then I a number of physical pages that you requested so you get this physical",
    "start": "822320",
    "end": "829519"
  },
  {
    "text": "Pages uh of course you will need a a GPU virtual address so the driver will help",
    "start": "829519",
    "end": "835600"
  },
  {
    "text": "you help you to Al the uh GPU virtual address and here and then uh the dver",
    "start": "835600",
    "end": "842320"
  },
  {
    "text": "will help you to creating create the maing between the physical address and the GPU virtual address so at this time",
    "start": "842320",
    "end": "849720"
  },
  {
    "text": "the GPU will be able to access to the physical address through this GPU virtual address in most of the case the",
    "start": "849720",
    "end": "857440"
  },
  {
    "text": "US space will also want to access to this uh physical address so the US space",
    "start": "857440",
    "end": "863839"
  },
  {
    "text": "can call memory map on this basic memory object then uh the driver will help the",
    "start": "863839",
    "end": "871320"
  },
  {
    "text": "US space to set up the mmu mapping so that this physical or page will be",
    "start": "871320",
    "end": "876800"
  },
  {
    "text": "mapping to the user space so that's the basic memory management uh you can see",
    "start": "876800",
    "end": "882519"
  },
  {
    "text": "the driver we are managing the back end of physical memory as well as all the C",
    "start": "882519",
    "end": "887959"
  },
  {
    "text": "objects so you can see is the where to address the mmu mapping the GPU virtual",
    "start": "887959",
    "end": "893880"
  },
  {
    "text": "address Mion all this is managed by the dver this is the basic memory object and",
    "start": "893880",
    "end": "899440"
  },
  {
    "text": "also the second type is the memory from the user space suppose the user space already have a memory with with this",
    "start": "899440",
    "end": "906600"
  },
  {
    "text": "back end the physical memory so U will not bother the driver to allocate the",
    "start": "906600",
    "end": "913199"
  },
  {
    "text": "new physical memory it's just tell the driver to import this memory so this is",
    "start": "913199",
    "end": "918320"
  },
  {
    "text": "the memory importing from the user space and here we have a new old type of",
    "start": "918320",
    "end": "925079"
  },
  {
    "text": "memory the virtual Brer object uh virtual Brer um means uh virtual so by",
    "start": "925079",
    "end": "932440"
  },
  {
    "text": "design it will not have any backend physical memory by itself so when you",
    "start": "932440",
    "end": "938120"
  },
  {
    "text": "this um memory you get this flag set up so the driver know it's virtual buffer",
    "start": "938120",
    "end": "943959"
  },
  {
    "text": "so the driver we are only allocate virtual GPU address so will allocate",
    "start": "943959",
    "end": "950319"
  },
  {
    "text": "this GPU address and then it will my uh d z page to this virtual address uh of",
    "start": "950319",
    "end": "958120"
  },
  {
    "text": "of course you can access this virtual address from the GPU Hardware but it's mapping to the data",
    "start": "958120",
    "end": "965480"
  },
  {
    "text": "page so whatever you write write or read it don't make any effect so it's the",
    "start": "965480",
    "end": "972720"
  },
  {
    "text": "virtual buffer uh how to use this virtual buffer you can actually bind a",
    "start": "972720",
    "end": "978959"
  },
  {
    "text": "basic memory object to this virtual buffer so suppose you already have two",
    "start": "978959",
    "end": "984120"
  },
  {
    "text": "uh two basic memory object both of them have the OWN back end the physical",
    "start": "984120",
    "end": "990360"
  },
  {
    "text": "memory so you call this control B the range then the D dver will do the Bing",
    "start": "990360",
    "end": "997560"
  },
  {
    "text": "so the first step the driver will remove existing mapping from the we so at this",
    "start": "997560",
    "end": "1003360"
  },
  {
    "text": "moment we have this zero page mapping to the virtual address so this mapping will be removed but if you you already B",
    "start": "1003360",
    "end": "1011440"
  },
  {
    "text": "other Bas memory object to this R this mapping will also be removed so this is",
    "start": "1011440",
    "end": "1017639"
  },
  {
    "text": "the first step removing the exist mapping from weo then we get a list of",
    "start": "1017639",
    "end": "1023199"
  },
  {
    "text": "physical page from the basic memory object here we get the physical page here go this page and connect it to the",
    "start": "1023199",
    "end": "1031400"
  },
  {
    "text": "weo so you can see here we have a connection between the B memory object and the",
    "start": "1031400",
    "end": "1038000"
  },
  {
    "text": "vbo then we can map the physical of of page to this wo at the specified offset",
    "start": "1038000",
    "end": "1046640"
  },
  {
    "text": "so we we have bed this basic memory object to this we and the driver will",
    "start": "1046640",
    "end": "1052200"
  },
  {
    "text": "repeat this step and all the uh basic memory object B to the webo so that's",
    "start": "1052200",
    "end": "1059600"
  },
  {
    "text": "how the uh webo working you can bend a basic memory object to the we build of",
    "start": "1059600",
    "end": "1065640"
  },
  {
    "text": "course you can also unband it so that's the virtual buff object it's very",
    "start": "1065640",
    "end": "1070880"
  },
  {
    "text": "powerful and very flexible but of course it's also very vulnerable so that's the",
    "start": "1070880",
    "end": "1077000"
  },
  {
    "text": "issue we found here uh 3 2024 2 38 Z",
    "start": "1077000",
    "end": "1082039"
  },
  {
    "text": "when we do the we bending we bending basical memory object to this R",
    "start": "1082039",
    "end": "1089280"
  },
  {
    "text": "we get get this vulnerability uh let's take a look at this code so you can see",
    "start": "1089280",
    "end": "1095640"
  },
  {
    "text": "uh when we do the bending we will get a connection between the basic memory object and the webo so we will insert",
    "start": "1095640",
    "end": "1103120"
  },
  {
    "text": "this uh we will insert this basic object into the interval tree so we call this",
    "start": "1103120",
    "end": "1109480"
  },
  {
    "text": "interval Tre insert and then we do the physical to Virtual mapping we map this",
    "start": "1109480",
    "end": "1116960"
  },
  {
    "text": "physical page to the we virtu address so we call this m map child",
    "start": "1116960",
    "end": "1123280"
  },
  {
    "text": "function uh of course there will be is some protection to protect the global",
    "start": "1123280",
    "end": "1128559"
  },
  {
    "text": "status you can see here we have a lock we have aex lock to protect the uh",
    "start": "1128559",
    "end": "1135080"
  },
  {
    "text": "interval tree so this is protected uh but the vulnerability here is you can",
    "start": "1135080",
    "end": "1141760"
  },
  {
    "text": "see this physical to Virtual mapping itself is lot protected so um it's",
    "start": "1141760",
    "end": "1147679"
  },
  {
    "text": "possible when we are doing the physical to Virtual mapping but this connection",
    "start": "1147679",
    "end": "1153280"
  },
  {
    "text": "between the basic memory object and the vbo is removed by another thread so",
    "start": "1153280",
    "end": "1158760"
  },
  {
    "text": "that's the vulnerability uh we can take a look at the fix the fix very simple you can see",
    "start": "1158760",
    "end": "1164640"
  },
  {
    "text": "we simply move this map child function in into the lock so this this operation",
    "start": "1164640",
    "end": "1173360"
  },
  {
    "text": "physical to Virtual mapping operation is protected so that's the fix and that's our",
    "start": "1173360",
    "end": "1180039"
  },
  {
    "text": "vulnerability uh so how to check this vulnerability uh we have to run two",
    "start": "1180039",
    "end": "1185640"
  },
  {
    "text": "straight one is doing the bending Bend uh basic memory object to the IBO and",
    "start": "1185640",
    "end": "1192840"
  },
  {
    "text": "another one is doing the unbending when we do bending uh we are getting into this function at the range this is the",
    "start": "1192840",
    "end": "1199200"
  },
  {
    "text": "function we just read you can see we have lock we have interval tree insert we have unlock and we have the map CH uh",
    "start": "1199200",
    "end": "1207640"
  },
  {
    "text": "when doing un mapping we are get into this function remove range so it's",
    "start": "1207640",
    "end": "1213200"
  },
  {
    "text": "similar it's just do the reverse operation it take a look and then the interval tree remove and then do do the",
    "start": "1213200",
    "end": "1220840"
  },
  {
    "text": "unlock uh so if we run the two threads uh like this we first get to thre a and",
    "start": "1220840",
    "end": "1228080"
  },
  {
    "text": "we lock insert to Global tree and then unlock then we get to thread B because the lock",
    "start": "1228080",
    "end": "1234720"
  },
  {
    "text": "is already released so thread come running and then we get the same lock we",
    "start": "1234720",
    "end": "1240640"
  },
  {
    "text": "remove the connection between this sorry basic memory object",
    "start": "1240640",
    "end": "1245960"
  },
  {
    "text": "and the we then we unlock and then we get back to the thread a then we do the",
    "start": "1245960",
    "end": "1253000"
  },
  {
    "text": "do the physical to Virtual Mion so if we can check this uh code sequence then we",
    "start": "1253000",
    "end": "1259120"
  },
  {
    "text": "can trigger the vulnerability uh let's take a a detailed look so we get to St a we acquir the",
    "start": "1259120",
    "end": "1268000"
  },
  {
    "text": "mutex and then we get this connection set up you can see we set up the basic",
    "start": "1268000",
    "end": "1273200"
  },
  {
    "text": "memory object connect to the vbo so from the jav perspective there is somebody",
    "start": "1273200",
    "end": "1279200"
  },
  {
    "text": "using this basic memory object so this object cannot be fre U then we get to",
    "start": "1279200",
    "end": "1286880"
  },
  {
    "text": "B we Act the mutex and then we remove this connection you can see the",
    "start": "1286880",
    "end": "1293360"
  },
  {
    "text": "connection here has been removed then we reled the",
    "start": "1293360",
    "end": "1299600"
  },
  {
    "text": "mutex at this point we get back to St a then St a continue running and set up",
    "start": "1299600",
    "end": "1306520"
  },
  {
    "text": "the physical to Virtual mapping so you can see this this connection set up um",
    "start": "1306520",
    "end": "1313279"
  },
  {
    "text": "however because there's no um no connection between the between the uh",
    "start": "1313279",
    "end": "1318600"
  },
  {
    "text": "basic memory object and the vbo so this Bas memory memory object could be freed",
    "start": "1318600",
    "end": "1324640"
  },
  {
    "text": "so we can free it and of course the back end physical memory will be freed so you",
    "start": "1324640",
    "end": "1330000"
  },
  {
    "text": "can see this page is also freed but the connection between the uh physical memory and the virtual memory is still",
    "start": "1330000",
    "end": "1337120"
  },
  {
    "text": "there so we can actually access to this fre the physical memory through this uh",
    "start": "1337120",
    "end": "1343799"
  },
  {
    "text": "GPU virtual address so that's the uh physical or page us threee so we can",
    "start": "1343799",
    "end": "1349880"
  },
  {
    "text": "read and right to this fre the C physical page from GPU virtual address",
    "start": "1349880",
    "end": "1355080"
  },
  {
    "text": "and of course this is rest condition issue we need a multiple threade to do bending and unbending to to the",
    "start": "1355080",
    "end": "1362559"
  },
  {
    "text": "vbo okay so to summarize we will have a physical page use up three we return",
    "start": "1362559",
    "end": "1369279"
  },
  {
    "text": "this physical physical to Virtual mapping and also this issue is very",
    "start": "1369279",
    "end": "1374720"
  },
  {
    "text": "special it's very stable so when we run the rest condition to trick the issue we",
    "start": "1374720",
    "end": "1380039"
  },
  {
    "text": "met fail but it doesn't matter if it it fails to trick then the system status is",
    "start": "1380039",
    "end": "1385120"
  },
  {
    "text": "actually in a good status so no bad things will happen so there's no con",
    "start": "1385120",
    "end": "1391000"
  },
  {
    "text": "right okay so we can try again and again to trigger this issue and also we have a",
    "start": "1391000",
    "end": "1397200"
  },
  {
    "text": "a method to get a feedback on whether this issue triggered or lot so we can know exactly how many",
    "start": "1397200",
    "end": "1405320"
  },
  {
    "text": "physical Pages we already controlled okay and this issue is very easy to",
    "start": "1405320",
    "end": "1411120"
  },
  {
    "text": "trick U so the success rate of tricking this issue is actually very high so",
    "start": "1411120",
    "end": "1416840"
  },
  {
    "text": "without any special techniques you you don't have to adjust adjust the priority of the ra you you don't have to add",
    "start": "1416840",
    "end": "1424679"
  },
  {
    "text": "check check to or add more this entries it's just very easy to check okay so now",
    "start": "1424679",
    "end": "1434240"
  },
  {
    "text": "we are going to explor this issue so um so far we have controlled lot of",
    "start": "1434240",
    "end": "1440840"
  },
  {
    "text": "physical pages so the exper is transferred to the following questions",
    "start": "1440840",
    "end": "1446080"
  },
  {
    "text": "so suppose we have already controlled a large amount of physical memory Pages",
    "start": "1446080",
    "end": "1451919"
  },
  {
    "text": "what are we going to do so I think there's lots of answers and solutions for this question for example we can and",
    "start": "1451919",
    "end": "1459600"
  },
  {
    "text": "do Heap spray We can spray lots of this struct create into the K hip and then to",
    "start": "1459600",
    "end": "1466240"
  },
  {
    "text": "override override the uidm the G and also we can use this famous Kos bace me",
    "start": "1466240",
    "end": "1473520"
  },
  {
    "text": "Ming cl to control the GPU page uh here we will introduce our",
    "start": "1473520",
    "end": "1480279"
  },
  {
    "text": "method it's a new method so we are spay in this uh struct kgsr memory",
    "start": "1480279",
    "end": "1487880"
  },
  {
    "text": "description structure so you can take a look at the structure to the right so uh when we",
    "start": "1487880",
    "end": "1495120"
  },
  {
    "text": "create a a GPU object we are this structure memory entry and it contains",
    "start": "1495120",
    "end": "1501520"
  },
  {
    "text": "this uh memory description and structure as we want and also it contains metadata",
    "start": "1501520",
    "end": "1508399"
  },
  {
    "text": "so take a look at this memory description it's very useful it have a",
    "start": "1508399",
    "end": "1514480"
  },
  {
    "text": "physical address and have a size and also have this",
    "start": "1514480",
    "end": "1519520"
  },
  {
    "text": "Ops so while we are spray in this this structure because the first reason is",
    "start": "1519520",
    "end": "1526520"
  },
  {
    "text": "very easy to spray we just call this AR control to the GPU driver then we can get a large amount of this structure in",
    "start": "1526520",
    "end": "1533320"
  },
  {
    "text": "the K and also it's easy to be found in the memory you can see here we have this",
    "start": "1533320",
    "end": "1540000"
  },
  {
    "text": "metad data this is actually fully controlled by the user space we can set",
    "start": "1540000",
    "end": "1545279"
  },
  {
    "text": "arbitary value to this metadata so by set unique metadata here we can find",
    "start": "1545279",
    "end": "1551120"
  },
  {
    "text": "this structure in the memory very easy and it's very easy and useful so you can",
    "start": "1551120",
    "end": "1556480"
  },
  {
    "text": "see we have the physical we have the size you can actually map this entry to",
    "start": "1556480",
    "end": "1563279"
  },
  {
    "text": "the user space and the mapping we use the physical address if we overwrite this physical address then we can um map",
    "start": "1563279",
    "end": "1570919"
  },
  {
    "text": "the specific uh Kel address to use space and also we can easily check whether our",
    "start": "1570919",
    "end": "1578520"
  },
  {
    "text": "mapping is success or not so by check the result of memory map then we know uh",
    "start": "1578520",
    "end": "1585360"
  },
  {
    "text": "whether our Expo works there's one extra bonus uh it's possible",
    "start": "1585360",
    "end": "1591799"
  },
  {
    "text": "to directly bypass the ksr using this method uh if not bypass the directory we",
    "start": "1591799",
    "end": "1598880"
  },
  {
    "text": "can bypass the cas in like 16 TRS we will explain this later okay uh suppose",
    "start": "1598880",
    "end": "1607080"
  },
  {
    "text": "we have already controlled a physical page and we find this page using the",
    "start": "1607080",
    "end": "1613039"
  },
  {
    "text": "metadata in the memory then we can find the address of this memory entry and and",
    "start": "1613039",
    "end": "1618600"
  },
  {
    "text": "of course this memory description we are going to overwrite so this memory description",
    "start": "1618600",
    "end": "1624200"
  },
  {
    "text": "contains the uh fields we we are interested the physical address the size",
    "start": "1624200",
    "end": "1630039"
  },
  {
    "text": "and the Ops um the Ops U original value of the offs is the page offs so um we",
    "start": "1630039",
    "end": "1638200"
  },
  {
    "text": "want to modify it to the continuous continuous offs this offs contains a special function is called real for so",
    "start": "1638200",
    "end": "1646039"
  },
  {
    "text": "when the US space uh do make memory map on this memory entry then the use space can visit this",
    "start": "1646039",
    "end": "1654960"
  },
  {
    "text": "uh virtual address this map address but because the physical to Virtual mapping",
    "start": "1654960",
    "end": "1660080"
  },
  {
    "text": "is not set up yet so this will get into the VM for the VM",
    "start": "1660080",
    "end": "1667559"
  },
  {
    "text": "for in jav we are trying to set up the physical to Virtual mapping so look look",
    "start": "1667559",
    "end": "1672960"
  },
  {
    "text": "at this function it's very simple it's just get the physical address we just modified you can see we modif find the",
    "start": "1672960",
    "end": "1678480"
  },
  {
    "text": "physical address and then the driver will set up the physical to Virtual",
    "start": "1678480",
    "end": "1684159"
  },
  {
    "text": "mapping so at this time the M mapping set up so the US space can get access to",
    "start": "1684159",
    "end": "1691519"
  },
  {
    "text": "this physical address so if we set set this address to the K physical address",
    "start": "1691519",
    "end": "1697200"
  },
  {
    "text": "then we can and access the K physical address so that's the",
    "start": "1697200",
    "end": "1702840"
  },
  {
    "text": "exploit okay uh to summarize we have this exploit we check the vulnerability",
    "start": "1702840",
    "end": "1709640"
  },
  {
    "text": "and we get a controlled physical page we repeat this step uh like a 200 times",
    "start": "1709640",
    "end": "1717039"
  },
  {
    "text": "then we control 200 physical Pages uh then we can force a system no",
    "start": "1717039",
    "end": "1723760"
  },
  {
    "text": "memory we can elect a lot of memory in the in the user space and for the system",
    "start": "1723760",
    "end": "1728880"
  },
  {
    "text": "get to low memory then all the C memory will be WR to the uh system of course",
    "start": "1728880",
    "end": "1734679"
  },
  {
    "text": "include our physical pages this uh physical pages will still all be",
    "start": "1734679",
    "end": "1741640"
  },
  {
    "text": "accessible accessible because we have this vulnerability so we can still",
    "start": "1741640",
    "end": "1746760"
  },
  {
    "text": "access this uh physical page then we can do the hip spray using",
    "start": "1746760",
    "end": "1753080"
  },
  {
    "text": "the structure we just described uh we use this Str structure so you can see uh",
    "start": "1753080",
    "end": "1758880"
  },
  {
    "text": "we spread a lot of this structure and if we are lucky some of them will be located in the controll",
    "start": "1758880",
    "end": "1765559"
  },
  {
    "text": "page in the physical page we controlled so we can scan the control physical page",
    "start": "1765559",
    "end": "1771279"
  },
  {
    "text": "and find the metad data and then find this uh memory description",
    "start": "1771279",
    "end": "1777320"
  },
  {
    "text": "structure and and you can see here is one trick in this structure we have the",
    "start": "1777320",
    "end": "1784360"
  },
  {
    "text": "Ops it's a pointer so actually using this pointer we read it out and then we",
    "start": "1784360",
    "end": "1790799"
  },
  {
    "text": "can bypass ksr at this point so we B Sr and then we overwrite this physical size",
    "start": "1790799",
    "end": "1799080"
  },
  {
    "text": "and set up a new Ops then we can map this description to to to the US",
    "start": "1799080",
    "end": "1807320"
  },
  {
    "text": "space then we can and OB read and right to the K of physical memory so that's",
    "start": "1807320",
    "end": "1814880"
  },
  {
    "text": "exper okay uh this one thing we can actually expand this method to a more",
    "start": "1814880",
    "end": "1822559"
  },
  {
    "text": "generic case so suppose you already have a hip bu overlow or race condition issue",
    "start": "1822559",
    "end": "1828159"
  },
  {
    "text": "it's possible you can also use this method to make your exploit",
    "start": "1828159",
    "end": "1835080"
  },
  {
    "text": "working uh it's like this you first spray a lot of this structure we just",
    "start": "1835080",
    "end": "1842240"
  },
  {
    "text": "described with spray lot of every discription structure and then you Trigg",
    "start": "1842240",
    "end": "1847519"
  },
  {
    "text": "your vulnerability for example you Trigg your hip po overflow you overflow from the top to to the botton and override",
    "start": "1847519",
    "end": "1855519"
  },
  {
    "text": "this Fields then you can try to do memory M on all the memory",
    "start": "1855519",
    "end": "1862480"
  },
  {
    "text": "description it might fail it doesn't matter if if it's fails then you can try again but is if the memory map succeed",
    "start": "1862480",
    "end": "1870080"
  },
  {
    "text": "then you can and do ab read and WR to the physical kernal physical memory",
    "start": "1870080",
    "end": "1876360"
  },
  {
    "text": "because you already map the whole kernel memory into the user space so that's how",
    "start": "1876360",
    "end": "1882480"
  },
  {
    "text": "we think we can expand this uh method to a more generical case so you can have a",
    "start": "1882480",
    "end": "1888639"
  },
  {
    "text": "try Okay uh you remember we have a bonus for",
    "start": "1888639",
    "end": "1893799"
  },
  {
    "text": "this method yes the bonus is we can bypass the ksr uh maybe directly so if",
    "start": "1893799",
    "end": "1901559"
  },
  {
    "text": "you look into uh the Overflow carefully you might notice that the lot of other",
    "start": "1901559",
    "end": "1908679"
  },
  {
    "text": "um points like the page table the host PTR the the both points and also have",
    "start": "1908679",
    "end": "1914440"
  },
  {
    "text": "the sdt you might think if I don't have a ksr so I have to point this address to",
    "start": "1914440",
    "end": "1922200"
  },
  {
    "text": "a digital address but in fact this points are lot used in most of case if",
    "start": "1922200",
    "end": "1928240"
  },
  {
    "text": "you don't don't call some special AR control by yourself then this uh points",
    "start": "1928240",
    "end": "1933639"
  },
  {
    "text": "will lot be used so you can actually U overwrite these uh points as you want",
    "start": "1933639",
    "end": "1941200"
  },
  {
    "text": "you can over write then to the G value it do matter so the only thing matter is",
    "start": "1941200",
    "end": "1947519"
  },
  {
    "text": "actually here the Ops so you overwrite to the Ops but uh look at the Ops",
    "start": "1947519",
    "end": "1956200"
  },
  {
    "text": "carefully you can see if the original value is CQ page Ops then the most most",
    "start": "1956200",
    "end": "1962519"
  },
  {
    "text": "of the bites are the same as the target of continuous office this is the target want to override to so because the ksr",
    "start": "1962519",
    "end": "1971000"
  },
  {
    "text": "page based so if the two functions are in the same page then you can overwrite",
    "start": "1971000",
    "end": "1976880"
  },
  {
    "text": "the uh low bite and ignore the H you just don't touch this High B then you you get your",
    "start": "1976880",
    "end": "1985159"
  },
  {
    "text": "expess working and for the low B for this z c and Z 6 they're already loow in",
    "start": "1985159",
    "end": "1992440"
  },
  {
    "text": "the K form so you actually is right over right from the top to or the lowest bite",
    "start": "1992440",
    "end": "1999000"
  },
  {
    "text": "over right to here then you got your exp working this is um working in most of",
    "start": "1999000",
    "end": "2005960"
  },
  {
    "text": "the case but sometimes the two functions maybe not near each other they're not in the same page but in the source code",
    "start": "2005960",
    "end": "2012279"
  },
  {
    "text": "they're near each other so u in in my it's just like this it's just",
    "start": "2012279",
    "end": "2019760"
  },
  {
    "text": "one uh one page it difference so you can see it's similar the high bites are the",
    "start": "2019760",
    "end": "2027039"
  },
  {
    "text": "same and then the low bites alone the only difference is this four bits for B",
    "start": "2027039",
    "end": "2032320"
  },
  {
    "text": "you can and just do Pro Force for six trials so you try 16",
    "start": "2032320",
    "end": "2038279"
  },
  {
    "text": "16 times then you get it your exper working so that's the bonus how by pass",
    "start": "2038279",
    "end": "2043559"
  },
  {
    "text": "the ks using this method okay so that's the export and let's get to the uh demo",
    "start": "2043559",
    "end": "2051599"
  },
  {
    "text": "uh we will start the export in the Shell of course we can use unprivileged",
    "start": "2051599",
    "end": "2058079"
  },
  {
    "text": "untrusted app so it doesn't make any difference the first step we do loot",
    "start": "2058079",
    "end": "2063358"
  },
  {
    "text": "here of course we will fail because we don't have loot prity then we start the the",
    "start": "2063359",
    "end": "2069040"
  },
  {
    "text": "exploit uh we will Tri the vulnerability and we control lots of physical Pages",
    "start": "2069040",
    "end": "2076560"
  },
  {
    "text": "now we we think we have controlled enough physical Pages then we can get to",
    "start": "2076560",
    "end": "2081919"
  },
  {
    "text": "the to the next step the next step is to Trigg a low system noow memory we all a",
    "start": "2081919",
    "end": "2087440"
  },
  {
    "text": "lot of memory in the US space then the system memory will be low and all the catch the memory will be returned to the",
    "start": "2087440",
    "end": "2093960"
  },
  {
    "text": "system system uh then we can and do Hep spray we create a lot of we",
    "start": "2093960",
    "end": "2100160"
  },
  {
    "text": "entries and we create lots of we entries some of",
    "start": "2100160",
    "end": "2105520"
  },
  {
    "text": "them will be located in the control physical page then we can um find the",
    "start": "2105520",
    "end": "2112680"
  },
  {
    "text": "kgsr memory descripion structure in this control physical page you can see we are",
    "start": "2112680",
    "end": "2118000"
  },
  {
    "text": "trying to find it here we we have find one inry we find",
    "start": "2118000",
    "end": "2124440"
  },
  {
    "text": "this controlled uh structure then we can patch this structure as we want we can",
    "start": "2124440",
    "end": "2130320"
  },
  {
    "text": "patch the Ops we just modify the Ops to continuous Ops and also the physical",
    "start": "2130320",
    "end": "2135760"
  },
  {
    "text": "address you can see uh A8 little one this is the Kel physical address and the",
    "start": "2135760",
    "end": "2141200"
  },
  {
    "text": "size Kel size then we can p this structure and then we do memory mapping in the in the user space then you can",
    "start": "2141200",
    "end": "2148520"
  },
  {
    "text": "see we have patched the pro version you know k k code and also we we have",
    "start": "2148520",
    "end": "2154839"
  },
  {
    "text": "patched the uh another another code to get loot so you",
    "start": "2154839",
    "end": "2160520"
  },
  {
    "text": "can see here we already successfully get loot uh that's uh",
    "start": "2160520",
    "end": "2166839"
  },
  {
    "text": "demo yeah yes thank you uh I'll transfer to",
    "start": "2166839",
    "end": "2173079"
  },
  {
    "text": "sh for the methodology and the B Discovery thank you thank you shil so uh",
    "start": "2173079",
    "end": "2179400"
  },
  {
    "text": "let's talk about methodology how we discover the issue um in short we discover the issue",
    "start": "2179400",
    "end": "2186000"
  },
  {
    "text": "by BR reviews um during the manual code review one important method we use patch analysis",
    "start": "2186000",
    "end": "2192599"
  },
  {
    "text": "this is uh very important for features like uh GPU um as I mentioned before um",
    "start": "2192599",
    "end": "2199440"
  },
  {
    "text": "for complex targets it's really hard to fix issue by one uh by one attempt",
    "start": "2199440",
    "end": "2207000"
  },
  {
    "text": "there's also ways to introduce new issues with with with new fix so uh with",
    "start": "2207000",
    "end": "2212400"
  },
  {
    "text": "u with um patch analysis it helps us to understand the hisor IAL issues and that",
    "start": "2212400",
    "end": "2219720"
  },
  {
    "text": "gives us hint where to look into and also we can confirm whether the patch",
    "start": "2219720",
    "end": "2224800"
  },
  {
    "text": "really solved the problems and uh also to discover new",
    "start": "2224800",
    "end": "2230960"
  },
  {
    "text": "similar issues it's actually very common and uh in the in in the research she",
    "start": "2230960",
    "end": "2236880"
  },
  {
    "text": "actually run into a case is that corcom was submitting a patch to patch internal",
    "start": "2236880",
    "end": "2242240"
  },
  {
    "text": "issue and someone looking into the patch found oh this one actually introduced a new issue",
    "start": "2242240",
    "end": "2248040"
  },
  {
    "text": "and then corcom fixed that issue and she didn't looked again look the new patch",
    "start": "2248040",
    "end": "2253359"
  },
  {
    "text": "and uh turned out there's another issue introduced so it's a very common way to discover new issues with a large um code",
    "start": "2253359",
    "end": "2261359"
  },
  {
    "text": "Bas like this patch analysis helps you um to find your",
    "start": "2261359",
    "end": "2267160"
  },
  {
    "text": "focus so in the past um red team employs uh fuzzy a lot to scale our effort",
    "start": "2267160",
    "end": "2275280"
  },
  {
    "text": "however um for GPU driver um fuzzing turns out to be really hard",
    "start": "2275280",
    "end": "2281119"
  },
  {
    "text": "we have quite some difficulties for example um EUR GPU driver has lots of",
    "start": "2281119",
    "end": "2286240"
  },
  {
    "text": "Hardware dependencies that means it's not easy to run our fuzzer at scale you",
    "start": "2286240",
    "end": "2293079"
  },
  {
    "text": "have to run on physical GPU and then you have like thousand of devices running",
    "start": "2293079",
    "end": "2298319"
  },
  {
    "text": "right it's not scalable and also in many of the GPU issues are misconfiguration of mmu those",
    "start": "2298319",
    "end": "2305640"
  },
  {
    "text": "issues they won't directly Trigg crash that means fuzzing cannot detect the issue unless you really um try to access",
    "start": "2305640",
    "end": "2313640"
  },
  {
    "text": "the misconfigured member regions which you don't know at the beginning and also the last two are",
    "start": "2313640",
    "end": "2321359"
  },
  {
    "text": "common problems for fuzzing first is complicated State machines uh GPU",
    "start": "2321359",
    "end": "2326440"
  },
  {
    "text": "requires lots of operations to get into a certain State and uh the traditional carage based fuzing is not good at",
    "start": "2326440",
    "end": "2333440"
  },
  {
    "text": "dealing with State machines and also um GPU deals lots of concurrency issues and",
    "start": "2333440",
    "end": "2340520"
  },
  {
    "text": "fuzzing is not good at this either of course there are solutions um for",
    "start": "2340520",
    "end": "2345720"
  },
  {
    "text": "example uh Hardware dependencies what we could do is try to simulate some of the",
    "start": "2345720",
    "end": "2350800"
  },
  {
    "text": "hardware functionalities trying to isolate the hyro dependent code from the",
    "start": "2350800",
    "end": "2355880"
  },
  {
    "text": "rest of the code and then we can probably run our further on cloud as",
    "start": "2355880",
    "end": "2362040"
  },
  {
    "text": "many instances as we want without the actual Hardware that can probably solve the um",
    "start": "2362040",
    "end": "2368319"
  },
  {
    "text": "dependency problem and uh for concurrencies um there are um",
    "start": "2368319",
    "end": "2373920"
  },
  {
    "text": "researchers talking about deterministic risk condition fuzzing and in our uh",
    "start": "2373920",
    "end": "2380240"
  },
  {
    "text": "this year's offensive count we talk about binder driver fuzzing we actually uh were experimenting some of the method",
    "start": "2380240",
    "end": "2387640"
  },
  {
    "text": "trying to fuss uh concurrency issues using deterministic uh Tech uh techniques um yeah so these are the",
    "start": "2387640",
    "end": "2394880"
  },
  {
    "text": "possible solutions but uh it would require lot of time to invest to uh to",
    "start": "2394880",
    "end": "2400000"
  },
  {
    "text": "get it work so it's hard to find issue and fix",
    "start": "2400000",
    "end": "2405480"
  },
  {
    "text": "them one by one so what about is there any ultimate Solutions well um if you recall at the beginning we talk about",
    "start": "2405480",
    "end": "2412319"
  },
  {
    "text": "the the problem of GPU one of the important thing is that GPU has inprocess Hall basically every process",
    "start": "2412319",
    "end": "2419800"
  },
  {
    "text": "has direct access to GPU drivers that that's why she didn't can issue particular I octos to the GPU driver um",
    "start": "2419800",
    "end": "2427520"
  },
  {
    "text": "what if we make that another obstruction layer and and make it Auto Pro process H",
    "start": "2427520",
    "end": "2432960"
  },
  {
    "text": "so basically that allows us sandbox the GP driver interface um well it might work but",
    "start": "2432960",
    "end": "2440079"
  },
  {
    "text": "there will be performance impact um I am not aware if there's any existing",
    "start": "2440079",
    "end": "2445400"
  },
  {
    "text": "studies looking into this approach and see what's the performance impact but that might be a way to solve this issue",
    "start": "2445400",
    "end": "2452480"
  },
  {
    "text": "uh from the root and also um back back work compatibility ISS use all the",
    "start": "2452480",
    "end": "2458119"
  },
  {
    "text": "existing games some of games may use weird optimizations that directly access",
    "start": "2458119",
    "end": "2463200"
  },
  {
    "text": "GPU drivers with i octos instead of using the user space libraries those ones might be",
    "start": "2463200",
    "end": "2470359"
  },
  {
    "text": "affected another um perspective is how about memory safety implementations rust",
    "start": "2470359",
    "end": "2476240"
  },
  {
    "text": "is popular everyone's talking about rust right it solves all issues well um I",
    "start": "2476240",
    "end": "2482200"
  },
  {
    "text": "wouldn't say it's a silver bullet it won't solve all the issues especially in this case we have the IO mmu problems",
    "start": "2482200",
    "end": "2490000"
  },
  {
    "text": "it's probably still require some work to get solved however I think rust at least can deal with risk conditions integer",
    "start": "2490000",
    "end": "2497520"
  },
  {
    "text": "overflows those shouldn't be a problem anymore but uh given the Steep curve learning curve of rust it's probably a",
    "start": "2497520",
    "end": "2505119"
  },
  {
    "text": "long way to go uh I learned there are some um research U publicly available I",
    "start": "2505119",
    "end": "2511680"
  },
  {
    "text": "think uh on internet some people are trying to rewrite some GPU drivers with rust I would love to see uh how it",
    "start": "2511680",
    "end": "2520079"
  },
  {
    "text": "goes yeah those are the brainstorming part of our um our session and that also",
    "start": "2520079",
    "end": "2527720"
  },
  {
    "text": "concludes um our uh talk here so um any",
    "start": "2527720",
    "end": "2533000"
  },
  {
    "text": "questions by the way we have our emails listed here so feel free to reach out after this session",
    "start": "2533000",
    "end": "2539799"
  }
]