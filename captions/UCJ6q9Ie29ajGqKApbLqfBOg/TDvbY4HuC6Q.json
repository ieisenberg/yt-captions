[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "so to start off the talk uh uh first of all let's talk briefly about what is a",
    "start": "40",
    "end": "5920"
  },
  {
    "text": "Sandbox right so fundamentally a Sandbox is an untrusted uh is an untrusted",
    "start": "5920",
    "end": "11840"
  },
  {
    "text": "environment which is designed to kind of contain untrusted content it's a environment is designed to contain and",
    "start": "11840",
    "end": "19520"
  },
  {
    "text": "ensure that uh you know you can have malicious code or exploits and and all",
    "start": "19520",
    "end": "24840"
  },
  {
    "text": "of that is contained within that environment it doesn't leak on to the host right uh and the idea is that uh",
    "start": "24840",
    "end": "31840"
  },
  {
    "text": "you know you can't detect enough malware or malicious stuff so you create this containers where you can isolate them",
    "start": "31840",
    "end": "38280"
  },
  {
    "text": "and hopefully contain them long enough so for this talk we'll actually focus on Windows based application",
    "start": "38280",
    "end": "46199"
  },
  {
    "text": "sandboxes and uh in this talk uh we are not finding out vulnerabilities in the",
    "start": "46199",
    "end": "52039"
  },
  {
    "text": "sandbox implementations rather what we are pointing out uh are rather",
    "start": "52039",
    "end": "57399"
  },
  {
    "text": "fundamental and Architectural limitations of uh sandboxes what we encountered in",
    "start": "57399",
    "end": "63559"
  },
  {
    "text": "our research and uh and we kind of mostly talk about the limitations in general in terms of from a security",
    "start": "63559",
    "end": "71320"
  },
  {
    "text": "standpoint so uh for for the sake of uh this talk we have divided uh sandboxes",
    "start": "71320",
    "end": "76880"
  },
  {
    "start": "72000",
    "end": "118000"
  },
  {
    "text": "into two types uh type one is the uh OS enhancement based sandbox which is uh",
    "start": "76880",
    "end": "84320"
  },
  {
    "text": "which includes sandboxes like sandboxy buffer zone Pro so these have been been",
    "start": "84320",
    "end": "90079"
  },
  {
    "text": "there for a while and they're quite popular as well uh along with malware uh",
    "start": "90079",
    "end": "95360"
  },
  {
    "text": "you know malware research teams and pros and then the second type is the Master Slave model uh which uh includes",
    "start": "95360",
    "end": "102479"
  },
  {
    "text": "sandboxes like uh adob Reader X and the famous Google Chrome browser the there a type three uh which",
    "start": "102479",
    "end": "110680"
  },
  {
    "text": "uh we have not really uh discussed here but I'll probably briefly talk about it at the end of the",
    "start": "110680",
    "end": "117240"
  },
  {
    "text": "discussion so uh before we uh go into uh sandboxes there's a some amount of",
    "start": "117240",
    "end": "123920"
  },
  {
    "start": "118000",
    "end": "172000"
  },
  {
    "text": "details on Windows OS internals right so as we all know Windows is uh divided",
    "start": "123920",
    "end": "131120"
  },
  {
    "text": "into two main components one is the user mode and the other is a curl mode and uh",
    "start": "131120",
    "end": "136440"
  },
  {
    "text": "U unknown to the average user uh you know every time you for example interact",
    "start": "136440",
    "end": "141480"
  },
  {
    "text": "with say a font file uh in a Word document you are actually making a lot of Kernel uh component accesses unknown",
    "start": "141480",
    "end": "149040"
  },
  {
    "text": "to the user so uh so fundamentally what I'm trying to say is that there's a large uh",
    "start": "149040",
    "end": "155080"
  },
  {
    "text": "exposure to colel interfaces uh in our day-to-day lives with when we when we",
    "start": "155080",
    "end": "160640"
  },
  {
    "text": "use Simple applications like internet browsers Word documents and so on and",
    "start": "160640",
    "end": "166599"
  },
  {
    "text": "that is kind of the attack surface which we are going to be focusing on today so uh uh so let's look at the",
    "start": "166599",
    "end": "174760"
  },
  {
    "start": "172000",
    "end": "252000"
  },
  {
    "text": "state of Kernel Security on Windows uh operating system today so uh",
    "start": "174760",
    "end": "181400"
  },
  {
    "text": "uh it's it's well it's well known that it's non-trivial to exploit a kernel",
    "start": "181400",
    "end": "186640"
  },
  {
    "text": "mold colel M vulnerability reliably and uh uh and then this kind of there's a",
    "start": "186640",
    "end": "192920"
  },
  {
    "text": "fact that know there there haven't been too much of curl mode malware uh found or discovered in the wild but things",
    "start": "192920",
    "end": "199239"
  },
  {
    "text": "have changed in the in the in the past few years for instance uh just in uh",
    "start": "199239",
    "end": "204400"
  },
  {
    "text": "2012 there were 25 CV items which were actually uh Windows colel patch from",
    "start": "204400",
    "end": "210200"
  },
  {
    "text": "Microsoft just last month there were 30 uh CV items uh in win32k.sys which is a",
    "start": "210200",
    "end": "217080"
  },
  {
    "text": "very uh critical kernel component in the operating system and so our question is to what",
    "start": "217080",
    "end": "224040"
  },
  {
    "text": "degree can a Sandbox limit uh uh the exposure to colel interfaces given that",
    "start": "224040",
    "end": "230680"
  },
  {
    "text": "yes uh it is not as trivial to exploit and uh reliably uh exploit col",
    "start": "230680",
    "end": "237000"
  },
  {
    "text": "vulnerabilities so uh and there have been cases of real targeted malware like",
    "start": "237000",
    "end": "242319"
  },
  {
    "text": "the Duku uh bug which was exploited U not too long back which was also",
    "start": "242319",
    "end": "248879"
  },
  {
    "text": "actually exping exploting a Windows colel vulnerability so how does it work right in inside a",
    "start": "248879",
    "end": "256400"
  },
  {
    "start": "252000",
    "end": "304000"
  },
  {
    "text": "Sandbox uh uh this is how it looks like so uh uh in terms of enforcing the",
    "start": "256400",
    "end": "262560"
  },
  {
    "text": "sandbox uh the sandbox application will say uh dear Colonel uh please open a",
    "start": "262560",
    "end": "268240"
  },
  {
    "text": "file for me and file name is at address X and the kernel points to allow file.",
    "start": "268240",
    "end": "276080"
  },
  {
    "text": "text uh and then and says okay here is the handle right and then the sandbox",
    "start": "276080",
    "end": "281440"
  },
  {
    "text": "says uh dear colel please open a file for me and the file is at address Y and",
    "start": "281440",
    "end": "286560"
  },
  {
    "text": "colel says okay uh here is the uh this file is secret. txe file and since you",
    "start": "286560",
    "end": "293840"
  },
  {
    "text": "are a Sandbox application I will not let you access the file so this is how a",
    "start": "293840",
    "end": "298960"
  },
  {
    "text": "sand typical sandbox interacts with the kernel to make decisions",
    "start": "298960",
    "end": "304320"
  },
  {
    "start": "304000",
    "end": "370000"
  },
  {
    "text": "right so now say for example I have a kernel exploit uh how it would work",
    "start": "304320",
    "end": "309560"
  },
  {
    "text": "right so the Sandbox app says Dear Colonel uh please draw the text hello",
    "start": "309560",
    "end": "314800"
  },
  {
    "text": "world uh for me using the true type font uh stored at address X and the colonel",
    "start": "314800",
    "end": "321440"
  },
  {
    "text": "says you are a Sandbox application but uh using a font is a benign operation",
    "start": "321440",
    "end": "327039"
  },
  {
    "text": "and uh which you need to do to function properly so what I'll do is uh I will let I will give you handle but let me",
    "start": "327039",
    "end": "333880"
  },
  {
    "text": "pass this font first right and while processing the font uh the colel",
    "start": "333880",
    "end": "339520"
  },
  {
    "text": "corrupts its own memory because the parcel code was buggy and because of the memory",
    "start": "339520",
    "end": "345319"
  },
  {
    "text": "corruption uh the colel starts executing code at X which allows the application",
    "start": "345319",
    "end": "350440"
  },
  {
    "text": "to do anything it wants because it has the same privilege as that of the colonel at this",
    "start": "350440",
    "end": "356520"
  },
  {
    "text": "point right so so this is like a a high level view of how pretty much every",
    "start": "356520",
    "end": "362479"
  },
  {
    "text": "sandbox uh works and how it interacts with the kernel right so let's talk",
    "start": "362479",
    "end": "367840"
  },
  {
    "text": "about uh the type one which is the OS enhancement based sandbox so in this case uh we took sandboxy which is uh a",
    "start": "367840",
    "end": "377199"
  },
  {
    "start": "370000",
    "end": "420000"
  },
  {
    "text": "very popular uh application as you can see there have been several downloads several people have passed reviews and a",
    "start": "377199",
    "end": "383800"
  },
  {
    "text": "lot of people use it uh for Mal analysis and so on so how it works is uh it's a",
    "start": "383800",
    "end": "389599"
  },
  {
    "text": "custom kernel driver which which modifies the windows Behavior to change",
    "start": "389599",
    "end": "395560"
  },
  {
    "text": "uh and ensure that certain parts of the protected system within the sandbox",
    "start": "395560",
    "end": "400680"
  },
  {
    "text": "context are protected and uh the use case is you know you can uh run arbitr",
    "start": "400680",
    "end": "406479"
  },
  {
    "text": "uh EXs you can run your browser you can use Internet Explorer Firefox inside",
    "start": "406479",
    "end": "412960"
  },
  {
    "text": "sandboxy and uh the idea is that it should be able to contain the exploits and the malware within the sandbox",
    "start": "412960",
    "end": "421120"
  },
  {
    "start": "420000",
    "end": "477000"
  },
  {
    "text": "so uh we got this diagram from uh from actually the the public sources it's not",
    "start": "421120",
    "end": "426400"
  },
  {
    "text": "an official sandboxing material but this is how it looks at a very high level you",
    "start": "426400",
    "end": "431639"
  },
  {
    "text": "know like the sandboxy driver basically intercepts and makes a decision whether it should it allow an activity or",
    "start": "431639",
    "end": "439560"
  },
  {
    "text": "not so uh so the problem is uh that uh",
    "start": "439560",
    "end": "444879"
  },
  {
    "text": "the sandbox code has direct access to pretty much all all OS",
    "start": "444879",
    "end": "450560"
  },
  {
    "text": "functionality uh which kind of could mean that if if the sandbox is compromised you can steal steal data and",
    "start": "450560",
    "end": "457199"
  },
  {
    "text": "so on and uh the biggest drawback is that almost all colel vulnerabilities can be",
    "start": "457199",
    "end": "463800"
  },
  {
    "text": "exploitable from within this sandbox and uh the sandbox has no means to uh to",
    "start": "463800",
    "end": "471680"
  },
  {
    "text": "contain the malicious code uh simply because they are running at the same privilege",
    "start": "471680",
    "end": "477400"
  },
  {
    "text": "level so uh having said that uh I'll hand over to uh Rafel to to run the",
    "start": "477400",
    "end": "484440"
  },
  {
    "text": "roulette and and see how it how he can bypass and boxy thank",
    "start": "484440",
    "end": "492199"
  },
  {
    "text": "you it's my turn to press the page down key and you see the roulette spinning",
    "start": "493319",
    "end": "498639"
  },
  {
    "text": "hooray so the first vulnerability we'll talk about today is patched in Microsoft",
    "start": "498639",
    "end": "505319"
  },
  {
    "start": "499000",
    "end": "704000"
  },
  {
    "text": "butin 1242 about not about a year ago a little",
    "start": "505319",
    "end": "510520"
  },
  {
    "text": "bit less and was titled user mode schedule memory corruption which is toally misleading but it's the way Microsoft titles the bulletins and the",
    "start": "510520",
    "end": "519120"
  },
  {
    "text": "root cause of the vulnerability was a bug in the kernel code responsible for returning to user mode from a system",
    "start": "519120",
    "end": "525399"
  },
  {
    "text": "code so it was in the core of the operating system and it's more details are not necessary",
    "start": "525399",
    "end": "533240"
  },
  {
    "text": "that the point is that this vulnerability allows to run arbitrary code in kernel mode even if the exploit",
    "start": "533240",
    "end": "539760"
  },
  {
    "text": "is run by an unprivileged process for instance in this case soundbox",
    "start": "539760",
    "end": "545880"
  },
  {
    "text": "process uh so if we try to run this exploit in a sandbox environment we'll",
    "start": "545880",
    "end": "551560"
  },
  {
    "text": "see it it just works you can take you know a public exploit for this vulnerability which is published in many",
    "start": "551560",
    "end": "557560"
  },
  {
    "text": "places like packet storm or whatever and this exploit will work just fine you will get a kind of code execution but uh",
    "start": "557560",
    "end": "566240"
  },
  {
    "text": "at at which stage the game is over basically right because uh adjusted code",
    "start": "566240",
    "end": "571519"
  },
  {
    "text": "gained code execution in the can the tiny catch or the tiny detail is what to",
    "start": "571519",
    "end": "577040"
  },
  {
    "text": "do with this unlimited power that Kel mode execution gives you because again",
    "start": "577040",
    "end": "582200"
  },
  {
    "text": "normally exploits like this published exploit uh all they do is uh Grant the",
    "start": "582200",
    "end": "588240"
  },
  {
    "text": "Coler the user mode process the highest possible uh privilege so the system",
    "start": "588240",
    "end": "594200"
  },
  {
    "text": "level privilege it it usually it's named token stealing so you steal the access",
    "start": "594200",
    "end": "599800"
  },
  {
    "text": "tokens from the system process assign it to the current process then magically the current process has system Ru so if",
    "start": "599800",
    "end": "606600"
  },
  {
    "text": "you do exactly that and the public exploit does exactly that it succeeds so if you run the exploit in sandboxy you",
    "start": "606600",
    "end": "613760"
  },
  {
    "text": "get a system shell but the fun part is that this system shell is still",
    "start": "613760",
    "end": "618880"
  },
  {
    "text": "contained by sandboxy it still cannot do anything really although being the system shell if you type who am I you",
    "start": "618880",
    "end": "624600"
  },
  {
    "text": "get anti Authority system still you cannot do overwrite in the system files you cannot terminate processes because",
    "start": "624600",
    "end": "630800"
  },
  {
    "text": "sandboxy is parallel or rather serial to the protection enforced by the kernel so even if it's a system process it's still",
    "start": "630800",
    "end": "637639"
  },
  {
    "text": "enforced so what we need to do is to use again this unlimited power of the K mode",
    "start": "637639",
    "end": "643160"
  },
  {
    "text": "to do something else first of all you can disable sandboxy driver completing because again we are in teral mode we",
    "start": "643160",
    "end": "649720"
  },
  {
    "text": "can uninstall all the hooks we can even override the body of the sandboxy driver we can do",
    "start": "649720",
    "end": "654880"
  },
  {
    "text": "anything uh but for that uh we would need to figure out the exact details how",
    "start": "654880",
    "end": "660440"
  },
  {
    "text": "s boxy operates and uh besides being a bit lazy it's not necessary there's a",
    "start": "660440",
    "end": "665920"
  },
  {
    "text": "better approach uh more generic one we can uh migrate to another process inject",
    "start": "665920",
    "end": "672360"
  },
  {
    "text": "code to another process this is that is not subject to sandboxy protection so",
    "start": "672360",
    "end": "677399"
  },
  {
    "text": "any any process that runs outside of the sandbox again we can do it because while we are we are in canel mode we can know",
    "start": "677399",
    "end": "684800"
  },
  {
    "text": "override any memory modify any cam structures etc etc so particularly it's",
    "start": "684800",
    "end": "690360"
  },
  {
    "text": "doable to inject fold into arbitrary process and that that migration trick is",
    "start": "690360",
    "end": "697839"
  },
  {
    "text": "uh the tiny required part to fully bypass the sbox as we will see in a",
    "start": "697839",
    "end": "705160"
  },
  {
    "start": "704000",
    "end": "1125000"
  },
  {
    "text": "moment yeah so uh one remark in all the demos that we will see",
    "start": "709519",
    "end": "717240"
  },
  {
    "text": "uh uh all all the boxes and run on unpatched Windows 7 service pack one so",
    "start": "717240",
    "end": "723399"
  },
  {
    "text": "we don't have any Windows kernel zero days we have to use exploit for an old vulnerab and that's that's why we run it",
    "start": "723399",
    "end": "729760"
  },
  {
    "text": "on uh old version of Windows again if someone finds a zero day he can use the",
    "start": "729760",
    "end": "736079"
  },
  {
    "text": "exact same mechanism just for illustration purposes we chose wellknown exploits and",
    "start": "736079",
    "end": "742560"
  },
  {
    "text": "vulnerabilities but on the other hand all of the all of the sand boxes are the latest version or they were at the time",
    "start": "742560",
    "end": "749480"
  },
  {
    "text": "when we did the research so uh there is we not exploiting a bug in in sandbox",
    "start": "749480",
    "end": "755040"
  },
  {
    "text": "implementation itself right it's not not it's not that that we found a back in in",
    "start": "755040",
    "end": "760480"
  },
  {
    "text": "an old version of sandbox and now we are exploiting no we exploiting the inherent weakness that the sandbox is reliant on",
    "start": "760480",
    "end": "766800"
  },
  {
    "text": "the Integrity of the operating system okay so let's see how it goes",
    "start": "766800",
    "end": "773120"
  },
  {
    "text": "um so this is this is the way how you can run arbitrary uh command in a in a",
    "start": "773120",
    "end": "779880"
  },
  {
    "text": "sandboxy shell so just run CMD exit to make it",
    "start": "779880",
    "end": "785399"
  },
  {
    "text": "most uh most convenient and now let's see that it's it's sandbox well there is",
    "start": "785399",
    "end": "790720"
  },
  {
    "text": "some visual uh indicator you see when when when you move mouse cursor over over the",
    "start": "790720",
    "end": "798600"
  },
  {
    "text": "title bar you see this Yellow Frame so it's it's supposed to be sandbox so if I",
    "start": "798600",
    "end": "806880"
  },
  {
    "text": "do for instance try to Shadow the machine uh it's it's denied and even I",
    "start": "807279",
    "end": "813839"
  },
  {
    "text": "get uh a message from from sandboxy that sandbox application try to do something",
    "start": "813839",
    "end": "819279"
  },
  {
    "text": "nasty right so that's that's nice other thing that we can try is to",
    "start": "819279",
    "end": "825440"
  },
  {
    "text": "start notepad so it's it's another application it's not sandbox and let's",
    "start": "825440",
    "end": "830920"
  },
  {
    "text": "see if we can and both CMD e and notepad runs as the same user right and let's",
    "start": "830920",
    "end": "838120"
  },
  {
    "text": "see what happens if you try to terminate this notep notepad",
    "start": "838120",
    "end": "843480"
  },
  {
    "text": "process so notepad is 5",
    "start": "843600",
    "end": "850600"
  },
  {
    "text": "96 so if you try to terminate it again you get XD9 so so that that should",
    "start": "858839",
    "end": "864639"
  },
  {
    "text": "convince you that indeed this this shell runs protected or are they find by by",
    "start": "864639",
    "end": "870320"
  },
  {
    "text": "the boxy and it cannot do anything that would damage the rest of the system okay",
    "start": "870320",
    "end": "876000"
  },
  {
    "text": "so what happens when we run the",
    "start": "876000",
    "end": "880160"
  },
  {
    "text": "exploit uh this xlit again is a bit non-trivial because it consists of two stages first you get to run arbitrary",
    "start": "883160",
    "end": "890320"
  },
  {
    "text": "code in Kel mode and then you have to inject code into another process that is not sandbox right I mentioned it already",
    "start": "890320",
    "end": "896920"
  },
  {
    "text": "so the first thing you do you have to find uh some non sandbox process uh which we can inject code to",
    "start": "896920",
    "end": "904120"
  },
  {
    "text": "we can use this notepad process but uh it's more generic um to use the win init process",
    "start": "904120",
    "end": "912759"
  },
  {
    "text": "has some nice properties",
    "start": "912759",
    "end": "918480"
  },
  {
    "text": "uh okay so when it is 360 and now let's",
    "start": "920519",
    "end": "925560"
  },
  {
    "text": "see what ports is are open in in",
    "start": "925560",
    "end": "932680"
  },
  {
    "text": "this in this process okay so when it is spit 360 and",
    "start": "932680",
    "end": "939120"
  },
  {
    "text": "it has open one port for probably from some RPC service and it happens to run a system and it runs outside of the",
    "start": "939120",
    "end": "945680"
  },
  {
    "text": "sandbox so now we just run the",
    "start": "945680",
    "end": "950639"
  },
  {
    "text": "exploit uh it might require full path",
    "start": "951759",
    "end": "957040"
  },
  {
    "text": "low yeah no Crush so it seems to work now what we have to do is to wake up this",
    "start": "957040",
    "end": "964680"
  },
  {
    "text": "process so we connect to this open part with netcut and it is only required",
    "start": "964680",
    "end": "972480"
  },
  {
    "text": "to wake up this this this process because how this code injection works",
    "start": "972480",
    "end": "977680"
  },
  {
    "text": "then uh when the process wakes up then the code gets injected so that that's why we have to wake it by connecting to",
    "start": "977680",
    "end": "983360"
  },
  {
    "text": "this to this port and now let's see what ports are open in this in it process you",
    "start": "983360",
    "end": "990560"
  },
  {
    "text": "can see there is one more 44444 and you have if you have ever used metas spit you probably already expected",
    "start": "990560",
    "end": "998399"
  },
  {
    "text": "that this is a usual bind Shell by metas so if you connect it connect to",
    "start": "998399",
    "end": "1006319"
  },
  {
    "text": "it you are greeted by the usual anti Authority",
    "start": "1006319",
    "end": "1012639"
  },
  {
    "text": "system shell again uh the point is that uh this this shell is exposed by the wi",
    "start": "1012639",
    "end": "1020360"
  },
  {
    "text": "whenn init process that is not sandboxed right and to convince you that it's not",
    "start": "1020360",
    "end": "1026280"
  },
  {
    "text": "sandbox we will try to kill kill",
    "start": "1026280",
    "end": "1034280"
  },
  {
    "text": "notepad what where is it ah here so this time let's try to",
    "start": "1034280",
    "end": "1043720"
  },
  {
    "text": "kill this notepad from this shell and you see this Ty it worked so",
    "start": "1043720",
    "end": "1049799"
  },
  {
    "text": "so really we are running outside of the sandboxy protection uh so again uh that",
    "start": "1049799",
    "end": "1055960"
  },
  {
    "text": "demonstrate the full compromise of the sandbox model not because of of the bug in the sandbox implementation itself but",
    "start": "1055960",
    "end": "1062720"
  },
  {
    "text": "because of the bug in the underlying operating system we started in an unprivileged shell confined by the",
    "start": "1062720",
    "end": "1070440"
  },
  {
    "text": "sandbox and then by exploiting a vulnerability in the operating system we are able to control arbitrary process",
    "start": "1070440",
    "end": "1077520"
  },
  {
    "text": "that does not is that does not run as sandbo so again it it means the complete",
    "start": "1077520",
    "end": "1083799"
  },
  {
    "text": "bypass of the security implemented by by",
    "start": "1083799",
    "end": "1088519"
  },
  {
    "text": "sandbo you want to stay here yeah okay that was uh there was the",
    "start": "1089200",
    "end": "1095559"
  },
  {
    "text": "first bypass",
    "start": "1095559",
    "end": "1100960"
  },
  {
    "text": "so and you need to release the focus crap yeah I",
    "start": "1103559",
    "end": "1110080"
  },
  {
    "text": "know change change the Kee can put here for the",
    "start": "1110080",
    "end": "1117919"
  },
  {
    "text": "yeah so the next uh this was the first sandbox bypass so the next one uh is uh",
    "start": "1117919",
    "end": "1127039"
  },
  {
    "start": "1125000",
    "end": "1167000"
  },
  {
    "text": "we we we are using a similar sandbox called buffer zone Pro this is also",
    "start": "1127039",
    "end": "1133200"
  },
  {
    "text": "another uh bypass and U another commonly used uh sandbox U available commercially",
    "start": "1133200",
    "end": "1140559"
  },
  {
    "text": "uh why we choose buffer zone Pro is not because you know it's significantly interesting but mainly to prove a point",
    "start": "1140559",
    "end": "1147120"
  },
  {
    "text": "that the first exploit was a generic architectural limitation and not a",
    "start": "1147120",
    "end": "1152480"
  },
  {
    "text": "sandboxy specific so what we do is that uh we use the same exploit and then we",
    "start": "1152480",
    "end": "1157840"
  },
  {
    "text": "try to bypass uh buffer Pro with the sister exploit so uh we have a demo for",
    "start": "1157840",
    "end": "1164240"
  },
  {
    "text": "that as [Applause] well so to be honest it was won't be anything new you have already",
    "start": "1164240",
    "end": "1171400"
  },
  {
    "start": "1167000",
    "end": "1407000"
  },
  {
    "text": "seen almost all of it the only difference is uh buffer zone",
    "start": "1171400",
    "end": "1179080"
  },
  {
    "text": "is Works a little bit differently uh so what we can do is open",
    "start": "1179080",
    "end": "1185200"
  },
  {
    "text": "Windows Explorer documents okay so you see uh we",
    "start": "1185200",
    "end": "1191600"
  },
  {
    "text": "have a secret file named secret file in the document folder if you just open it",
    "start": "1191600",
    "end": "1198840"
  },
  {
    "text": "message this is a secret file right now what we can do we we'll do the very",
    "start": "1198840",
    "end": "1205679"
  },
  {
    "text": "similar thing run CMD ex shell in a soundbox environment but this time it will be",
    "start": "1205679",
    "end": "1211880"
  },
  {
    "text": "buffable so you do open inside buff",
    "start": "1211880",
    "end": "1217080"
  },
  {
    "text": "Zone yes okay let's close it okay you see if",
    "start": "1217080",
    "end": "1222799"
  },
  {
    "text": "even even uh CMD ex cannot find all the system messages it's it's really sandbox",
    "start": "1222799",
    "end": "1228280"
  },
  {
    "text": "and if you you do for instance start see uh then if you navigate to the",
    "start": "1228280",
    "end": "1239200"
  },
  {
    "text": "uh the documents",
    "start": "1239200",
    "end": "1244120"
  },
  {
    "text": "folder uh documents here it is you see there are no remarks about The Secret",
    "start": "1244559",
    "end": "1249880"
  },
  {
    "text": "file this file is hidden from the sandbox process by the operating system so there again there is no way uh",
    "start": "1249880",
    "end": "1257200"
  },
  {
    "text": "soundbox process should be be able to get content of this F again assuming the",
    "start": "1257200",
    "end": "1262360"
  },
  {
    "text": "CER works properly and what we will do we'll just run exactly the same steps as",
    "start": "1262360",
    "end": "1269720"
  },
  {
    "text": "before you will see it exactly the",
    "start": "1269720",
    "end": "1274240"
  },
  {
    "text": "same so get the p uh only difference is you have to use start start Task Manager",
    "start": "1278320",
    "end": "1286200"
  },
  {
    "text": "I think to get the pedal when in it process what have so with in it is 372",
    "start": "1286200",
    "end": "1294120"
  },
  {
    "text": "on the",
    "start": "1294120",
    "end": "1296520"
  },
  {
    "text": "system and get the listening part it's it's happens to be the same part now run",
    "start": "1304960",
    "end": "1310919"
  },
  {
    "text": "the exploit 37",
    "start": "1310919",
    "end": "1317120"
  },
  {
    "text": "wake up the wind ined process",
    "start": "1318640",
    "end": "1325279"
  },
  {
    "text": "91 5 and it's it's all we need again now we",
    "start": "1325279",
    "end": "1334320"
  },
  {
    "text": "we have you can have a look again this wi within it process has been injected with shell code it has",
    "start": "1334320",
    "end": "1342120"
  },
  {
    "text": "opened uh open the listening port for us so again we can connect to this port",
    "start": "1342120",
    "end": "1349840"
  },
  {
    "text": "again this is highest privileged user mode process that you imagine and again",
    "start": "1353440",
    "end": "1359200"
  },
  {
    "text": "it runs outside of",
    "start": "1359200",
    "end": "1363840"
  },
  {
    "text": "sandbox yeah you can see this time we can see this file in in the listing I",
    "start": "1369120",
    "end": "1375679"
  },
  {
    "text": "can also type the contents so obviously this process runs outside",
    "start": "1375679",
    "end": "1381760"
  },
  {
    "text": "of the sandbox so again full bypass of the security promise implemented in the sandbox right we started in a",
    "start": "1381760",
    "end": "1388720"
  },
  {
    "text": "unprivileged fully contained shell contained by the sandbox and then",
    "start": "1388720",
    "end": "1394000"
  },
  {
    "text": "we end up with the system level process runic outside of the",
    "start": "1394000",
    "end": "1400240"
  },
  {
    "start": "1407000",
    "end": "1420000"
  },
  {
    "text": "S okay okay great so uh now that we have uh completely compromised the type one",
    "start": "1407240",
    "end": "1412919"
  },
  {
    "text": "sand boxes we'll go for the uh more interesting and the uh far more prevalent ones which is the type two so",
    "start": "1412919",
    "end": "1421120"
  },
  {
    "text": "uh type two sandboxes uh typically have two processes uh and we are calling it The Master and the slave and they",
    "start": "1421120",
    "end": "1428480"
  },
  {
    "text": "interact over an IPC Channel and the slave is confined using um OS operating",
    "start": "1428480",
    "end": "1435080"
  },
  {
    "text": "system Access Control facilities and the master mediates uh the access to the",
    "start": "1435080",
    "end": "1440440"
  },
  {
    "text": "resources and the best examples for uh of this type are the Google Chrome browser and Adobe Reader the sandbox",
    "start": "1440440",
    "end": "1448000"
  },
  {
    "text": "reader version and uh if you look at the high level architecture from the chromium",
    "start": "1448000",
    "end": "1454480"
  },
  {
    "start": "1449000",
    "end": "1461000"
  },
  {
    "text": "resources this is how uh you know the IPC interactions happens between the master and the",
    "start": "1454480",
    "end": "1461400"
  },
  {
    "start": "1461000",
    "end": "1478000"
  },
  {
    "text": "slave so uh the chromium sandbox uh runs with low privileges uh which which is",
    "start": "1461400",
    "end": "1468559"
  },
  {
    "text": "obviously controlled by the operating system which means that it has restricted tokens job objects uh desktop",
    "start": "1468559",
    "end": "1474880"
  },
  {
    "text": "object and the Integrity level so uh so then uh how exhaustive is",
    "start": "1474880",
    "end": "1481559"
  },
  {
    "start": "1478000",
    "end": "1520000"
  },
  {
    "text": "the uh OS based confinement uh according to the documentation uh so as per the",
    "start": "1481559",
    "end": "1486880"
  },
  {
    "text": "chromium documentation we found that uh for mounted fat and fat 32 volumes there",
    "start": "1486880",
    "end": "1493159"
  },
  {
    "text": "was no protection uh uh which was documented there is no protection for",
    "start": "1493159",
    "end": "1499320"
  },
  {
    "text": "tcpip uh and then access to most existing securable resources are denied",
    "start": "1499320",
    "end": "1506200"
  },
  {
    "text": "right so and and and this is fair enough you know this is uh this should be reasonably good enough to secure and",
    "start": "1506200",
    "end": "1512559"
  },
  {
    "text": "contain uh an exploit within the within the sandbox assuming that the kernel behaves",
    "start": "1512559",
    "end": "1519039"
  },
  {
    "text": "correctly right so uh this is how the Chrome sandbox would work uh as you can",
    "start": "1519039",
    "end": "1524320"
  },
  {
    "start": "1520000",
    "end": "1551000"
  },
  {
    "text": "see there's a the slave is 2856 and uh it's trying trying to access a file uh and then it sends an IPC call",
    "start": "1524320",
    "end": "1533080"
  },
  {
    "text": "to the master uh over a name type which is not visible here because process Explorer doesn't show you name pipe",
    "start": "1533080",
    "end": "1538760"
  },
  {
    "text": "activity but it sends a message to the master which is 2808 P ID and then the",
    "start": "1538760",
    "end": "1544360"
  },
  {
    "text": "master ultimately gives it the handle uh to basically access the file so the basically the idea is uh",
    "start": "1544360",
    "end": "1553760"
  },
  {
    "text": "that if you compromise the master uh it's game over because Master is the one with which decides uh all of the",
    "start": "1553760",
    "end": "1560360"
  },
  {
    "text": "activity of the sandbox so uh so far most of the research which you have seen",
    "start": "1560360",
    "end": "1566039"
  },
  {
    "text": "uh has to break the Chrome sandbox has been to break the master right uh and",
    "start": "1566039",
    "end": "1572360"
  },
  {
    "text": "there has been a lot of research lot of uh exploits have been have been written for that and",
    "start": "1572360",
    "end": "1578600"
  },
  {
    "text": "uh uh but the but the our question is how resistant is the operating system to a malicious slave uh and then we",
    "start": "1578600",
    "end": "1585720"
  },
  {
    "text": "actually focus on this aspect where where we assume that uh if we can compromise the slave leveraging a OS",
    "start": "1585720",
    "end": "1592279"
  },
  {
    "text": "vulnerability can the sandbox stand ground so uh in case of U Adobe Reader",
    "start": "1592279",
    "end": "1599679"
  },
  {
    "start": "1595000",
    "end": "1613000"
  },
  {
    "text": "you can observe that uh it has low Integrity level this is uh how the uh",
    "start": "1599679",
    "end": "1605600"
  },
  {
    "text": "how it looks in terms of the security properties for the sandbox and it denies you access to all the key",
    "start": "1605600",
    "end": "1613000"
  },
  {
    "start": "1613000",
    "end": "1644000"
  },
  {
    "text": "resources and uh there has been a lot of work done in terms of breaking the",
    "start": "1613000",
    "end": "1618840"
  },
  {
    "text": "master you know uh and in fact uh recently there was an exploit uh found",
    "start": "1618840",
    "end": "1623880"
  },
  {
    "text": "in the wild which broke uh or or breached the Adobe Reader sandbox and it",
    "start": "1623880",
    "end": "1629240"
  },
  {
    "text": "found uh it leveraged a bug in the master uh and it was like just last",
    "start": "1629240",
    "end": "1635559"
  },
  {
    "text": "month so uh the question is are colel vulnerabilities uh exploitable from",
    "start": "1635559",
    "end": "1641320"
  },
  {
    "text": "within the Adobe Reader uh sandbox and uh and then similarly the",
    "start": "1641320",
    "end": "1648760"
  },
  {
    "start": "1644000",
    "end": "1671000"
  },
  {
    "text": "Chrome browser which is based on the principles of of chromium both reader and Chrome browser uh you know uh has",
    "start": "1648760",
    "end": "1656200"
  },
  {
    "text": "slightly different implementation than uh Adobe Reader so for example you will see the untrusted Integrity level uh is",
    "start": "1656200",
    "end": "1664399"
  },
  {
    "text": "the is the is the least uh privileg level as opposed to uh adob Reader X where it's only",
    "start": "1664399",
    "end": "1670360"
  },
  {
    "text": "low similarly uh we found that uh uh uh",
    "start": "1670360",
    "end": "1675760"
  },
  {
    "start": "1671000",
    "end": "1696000"
  },
  {
    "text": "the access to Fat file system system is denied in Chrome in the Chrome browser",
    "start": "1675760",
    "end": "1682440"
  },
  {
    "text": "uh which is kind of interesting because uh it's not documented in the publicly available uh chromium resources so",
    "start": "1682440",
    "end": "1689399"
  },
  {
    "text": "obviously the the Google security team spent extra time and effort uh adding these additional features",
    "start": "1689399",
    "end": "1696360"
  },
  {
    "start": "1696000",
    "end": "1740000"
  },
  {
    "text": "there so uh and and we we know about the ponum contest the pwn own contest where",
    "start": "1696360",
    "end": "1703559"
  },
  {
    "text": "there have been successful attacks against the master and uh as we saw saw that uh each of these attacks were very",
    "start": "1703559",
    "end": "1711120"
  },
  {
    "text": "complex and non-trivial to exploit because uh fundamentally by Design the",
    "start": "1711120",
    "end": "1716480"
  },
  {
    "text": "master is a much smaller code base but the slave is a much larger code base because slave does all the rendering and",
    "start": "1716480",
    "end": "1723039"
  },
  {
    "text": "the processing and the idea is that to keep the master code base small enough so that it it has a lower attack surface",
    "start": "1723039",
    "end": "1729760"
  },
  {
    "text": "and hence it gets more and more difficult to attack the master and as we have seen you know people have jumped",
    "start": "1729760",
    "end": "1735080"
  },
  {
    "text": "through like several chains of exploits to break through the uh Chrome",
    "start": "1735080",
    "end": "1740480"
  },
  {
    "start": "1740000",
    "end": "1798000"
  },
  {
    "text": "sandbox so however uh uh uh if the slave",
    "start": "1740480",
    "end": "1745679"
  },
  {
    "text": "can exploit a Col vulnerability uh uh in the Chrome browser uh they have done some due diligence there as well like",
    "start": "1745679",
    "end": "1752360"
  },
  {
    "text": "for example uh it's still uh denies access for example if you need to create a process and if you need to alter",
    "start": "1752360",
    "end": "1759679"
  },
  {
    "text": "certain uh changes in the registry for example and the Adobe Reader X the Adobe",
    "start": "1759679",
    "end": "1765360"
  },
  {
    "text": "Reader sandbox is not so tight uh it is far more lack in like for example",
    "start": "1765360",
    "end": "1771240"
  },
  {
    "text": "registry control and so on however for the Chrome browser when",
    "start": "1771240",
    "end": "1776279"
  },
  {
    "text": "uh 32k CIS is pretty much fully exposed which means that it's a huge attack",
    "start": "1776279",
    "end": "1781600"
  },
  {
    "text": "surface and uh a vulnerability there can pretty much exploit and break out of the",
    "start": "1781600",
    "end": "1788159"
  },
  {
    "text": "Chrome sandbox and uh without the you know need to achieve uh you know uh the",
    "start": "1788159",
    "end": "1794720"
  },
  {
    "text": "ability to break through the master at all so uh so now let's uh try out our demo",
    "start": "1794720",
    "end": "1802600"
  },
  {
    "start": "1798000",
    "end": "1989000"
  },
  {
    "text": "uh as Rafael spins the rouette and see how Chrome sandbox and adob sandbox",
    "start": "1802600",
    "end": "1808600"
  },
  {
    "text": "stand to our exploits so another day another",
    "start": "1808600",
    "end": "1816080"
  },
  {
    "text": "vulnerability this time it will be the vulnerability related to True type from parsing fixed in Microsoft BL in 1275 so",
    "start": "1816080",
    "end": "1824600"
  },
  {
    "text": "not that long time ago about a half year half year ago and uh this will be a little bit",
    "start": "1824600",
    "end": "1831000"
  },
  {
    "text": "different uh than the other exploits for for a couple of reasons uh first of all we will not start with compromising the",
    "start": "1831000",
    "end": "1839000"
  },
  {
    "text": "slave this exploit does not require compromise the slave at all it's enough",
    "start": "1839000",
    "end": "1844200"
  },
  {
    "text": "to just open a crafted web page in a vulnerable version of the Chrome browser running on a vulnerable Windows version",
    "start": "1844200",
    "end": "1850480"
  },
  {
    "text": "and then you get memory corruption in in the Kel context and what we will show in",
    "start": "1850480",
    "end": "1857200"
  },
  {
    "text": "a while it will result in blue screen of death so uh you won't get code code",
    "start": "1857200",
    "end": "1862639"
  },
  {
    "text": "execution but it will be enough to I guess to convince you that uh it's possible to corrupt Kel",
    "start": "1862639",
    "end": "1868919"
  },
  {
    "text": "memory and uh everyone agrees who analyzes this vulnerability that it's possible to achieve code execution so",
    "start": "1868919",
    "end": "1876639"
  },
  {
    "text": "constructive exploit uh it's doable using this vulnerability and it's it's",
    "start": "1876639",
    "end": "1882039"
  },
  {
    "text": "much helpful if uh if an attacker gets the ability to run arbitrary code in the",
    "start": "1882039",
    "end": "1887120"
  },
  {
    "text": "slave first in the renderer first the reason is that uh then you have much more control over for instance the",
    "start": "1887120",
    "end": "1892480"
  },
  {
    "text": "layout of the memory used by the kernel you can do Heap spraying of the help of the kernel in a reliable manner etc etc",
    "start": "1892480",
    "end": "1900159"
  },
  {
    "text": "so again to sum up this vulnerability is exploitable to get code execution to get a full bypass of the soundbox but what",
    "start": "1900159",
    "end": "1906039"
  },
  {
    "text": "we'll show you in in a moment is just a crash of the windows kernel to prove that this vulnerability",
    "start": "1906039",
    "end": "1912480"
  },
  {
    "text": "exist and can be can be exploited at the browser level",
    "start": "1912480",
    "end": "1919000"
  },
  {
    "text": "um okay so we open the browser didn't",
    "start": "1920039",
    "end": "1928679"
  },
  {
    "text": "Shadow correctly interesting and we open some HTML file",
    "start": "1928679",
    "end": "1935440"
  },
  {
    "text": "from from the file system you see this is a file semicolon sl/ URL but it can",
    "start": "1935440",
    "end": "1940600"
  },
  {
    "text": "be know hosted on an n and website so uh clicking on random link is safe or not",
    "start": "1940600",
    "end": "1946200"
  },
  {
    "text": "we can try to find out and to click the link and the effect is um machine panics",
    "start": "1946200",
    "end": "1954039"
  },
  {
    "text": "right and you can see at the top of the of the of the screen you see with 32k this is this is the",
    "start": "1954039",
    "end": "1962600"
  },
  {
    "text": "culprit yeah so it's how longer",
    "start": "1962799",
    "end": "1967919"
  },
  {
    "text": "needed H",
    "start": "1968360",
    "end": "1972480"
  },
  {
    "text": "okay yeah we have already said it if you run this X exploit with debugger attached you can get a stack back trace",
    "start": "1974200",
    "end": "1981240"
  },
  {
    "text": "and you see that the functions related to ttf font handling are in in in a",
    "start": "1981240",
    "end": "1986440"
  },
  {
    "text": "stack TR uh okay but I guess you're not too excited with crushes so another day",
    "start": "1986440",
    "end": "1995320"
  },
  {
    "start": "1989000",
    "end": "2035000"
  },
  {
    "text": "another vulnerability and this is will be this this is going to be the the famous vulnerability exploited by the",
    "start": "1995320",
    "end": "2000960"
  },
  {
    "text": "Dooku fix in Microsoft buletin 1187 and again it's related to True type",
    "start": "2000960",
    "end": "2006559"
  },
  {
    "text": "font parsing again it was exploited in the Wild by by the real malware and it was distributed",
    "start": "2006559",
    "end": "2013880"
  },
  {
    "text": "by Microsoft Office documents uh so uh could we run the same",
    "start": "2013880",
    "end": "2019639"
  },
  {
    "text": "the same exploit in the context of uh the Chrome sandbox would it work would",
    "start": "2019639",
    "end": "2025360"
  },
  {
    "text": "the sandbox uh because of of its limited [Music]",
    "start": "2025360",
    "end": "2030760"
  },
  {
    "text": "privilege may turn out to be impossible to run such an exploit within a Sandbox so let's have a look",
    "start": "2030760",
    "end": "2039720"
  },
  {
    "start": "2035000",
    "end": "2152000"
  },
  {
    "text": "uh yeah here so now a few words about",
    "start": "2041360",
    "end": "2046960"
  },
  {
    "text": "methodology uh it's important to understand what's going on so uh if we",
    "start": "2046960",
    "end": "2052638"
  },
  {
    "text": "would like to show you a full exploit uh so it would again consist of two parts",
    "start": "2052639",
    "end": "2058079"
  },
  {
    "text": "first compromising the renderer compromising the slave so you would provide some crafted HTML page which",
    "start": "2058079",
    "end": "2064320"
  },
  {
    "text": "would for instance reference some uh crafted data structures like vector",
    "start": "2064320",
    "end": "2069358"
  },
  {
    "text": "markup language whatever whatever data structure that is passed by the slave and if we open this HTML page uh in the",
    "start": "2069359",
    "end": "2077800"
  },
  {
    "text": "in the Chrome browser then the slave would get compromised right because most of the input that that you pass to the",
    "start": "2077800",
    "end": "2084679"
  },
  {
    "text": "uh web page via the web page is passed by the by the slave and then uh once we",
    "start": "2084679",
    "end": "2090320"
  },
  {
    "text": "get code execution in the slave uh we are already present on the operating system and then we can run the exploit",
    "start": "2090320",
    "end": "2097000"
  },
  {
    "text": "against the operating system so that's that's not that's not going to happen",
    "start": "2097000",
    "end": "2102040"
  },
  {
    "text": "today uh we didn't want to waste time on developing exploit against the slave the",
    "start": "2102040",
    "end": "2108560"
  },
  {
    "text": "reason being that uh the whole purpose why you run the sandbox is that you",
    "start": "2108560",
    "end": "2114119"
  },
  {
    "text": "expect that this that the slave can be compromised can can be exploited and",
    "start": "2114119",
    "end": "2119920"
  },
  {
    "text": "this is the sole reason of having the S so we assume that again exploits against",
    "start": "2119920",
    "end": "2125200"
  },
  {
    "text": "the renderer are not that interesting so we Focus only on the second part that was supposed to be much more difficult",
    "start": "2125200",
    "end": "2132320"
  },
  {
    "text": "once you run code in the context of the renderer in the slave How Can You Escape",
    "start": "2132320",
    "end": "2138119"
  },
  {
    "text": "out to get full control of the system and that's exactly what what we're going to show you now uh so what we will do",
    "start": "2138119",
    "end": "2146520"
  },
  {
    "text": "maybe let's start with Adobe Reader",
    "start": "2146520",
    "end": "2150560"
  },
  {
    "text": "first so we just open some dummy PDF file it's you know the contents is totally irrelevant",
    "start": "2151640",
    "end": "2158359"
  },
  {
    "text": "uh the we open it only for one reason uh to get the render",
    "start": "2158359",
    "end": "2164319"
  },
  {
    "text": "running so if you run process Explorer and look at the process",
    "start": "2164319",
    "end": "2171599"
  },
  {
    "text": "karchy okay so the second one is uh the Slate the render process if you have a",
    "start": "2171599",
    "end": "2178839"
  },
  {
    "text": "look at it of course it runs as ordinary user and if you look at the security tab",
    "start": "2178839",
    "end": "2184960"
  },
  {
    "text": "you can see all the details on the restrictive tokens etc etc so so it looks like it's supposed to be and the",
    "start": "2184960",
    "end": "2192000"
  },
  {
    "text": "PID is 3760",
    "start": "2192000",
    "end": "2199480"
  },
  {
    "text": "3760 3 7 60 so what we'll do now uh we will simulate the first stage of a real",
    "start": "2203400",
    "end": "2210160"
  },
  {
    "text": "full exploit so getting instead of running passing some complex malformed",
    "start": "2210160",
    "end": "2216240"
  },
  {
    "text": "data structures to the Slate we just inject code into it directly by opening the process and writing the the process",
    "start": "2216240",
    "end": "2222640"
  },
  {
    "text": "memory so it won't be very typical dll injection because DL injection in it",
    "start": "2222640",
    "end": "2229400"
  },
  {
    "text": "vanilla form does not work at all against Chrome browser for instance but something closed so first we'll inject the library",
    "start": "2229400",
    "end": "2236560"
  },
  {
    "text": "that is responsible for handling eot format that embeds the true type font",
    "start": "2236560",
    "end": "2241920"
  },
  {
    "text": "and then the exploit itself okay so again this command",
    "start": "2241920",
    "end": "2247920"
  },
  {
    "text": "injects code into the slave we have noted that 3760 is the slave not the master so this command just simulates",
    "start": "2247920",
    "end": "2256520"
  },
  {
    "text": "running the exploit within the context of the slave okay so what what's going",
    "start": "2256520",
    "end": "2261560"
  },
  {
    "text": "to happen we have a calculator and usually calculator means that worked properly",
    "start": "2261560",
    "end": "2270760"
  },
  {
    "text": "now let's have a look uh at the process",
    "start": "2270760",
    "end": "2275119"
  },
  {
    "text": "karchy uh use see that calculator was started by the master the parent process",
    "start": "2275960",
    "end": "2282520"
  },
  {
    "text": "again we messed only with the injected code into the slave and somehow master",
    "start": "2282520",
    "end": "2287800"
  },
  {
    "text": "was persuaded to start a calculator and it was possible because again if you look at the slave now you see the user",
    "start": "2287800",
    "end": "2296760"
  },
  {
    "text": "it runs as it runs as anti Authority system so this this exploit that we have",
    "start": "2296760",
    "end": "2303520"
  },
  {
    "text": "injected resulted in the slave running as anti Authority system it totally",
    "start": "2303520",
    "end": "2310079"
  },
  {
    "text": "broke out of the restrictions imposed by the",
    "start": "2310079",
    "end": "2315640"
  },
  {
    "text": "sandbox uh yeah so again to sum up that that that demonstrate the total bypass",
    "start": "2315640",
    "end": "2322040"
  },
  {
    "text": "of the Adobe Reader sandbox once you have code execution in the in the slave",
    "start": "2322040",
    "end": "2327200"
  },
  {
    "text": "once you get code execution in the sandbox by using the underlying caral vulnerability you can totally break out",
    "start": "2327200",
    "end": "2332480"
  },
  {
    "text": "of the system of the of the S can run arbitrary programs",
    "start": "2332480",
    "end": "2338680"
  },
  {
    "text": "manipulate any processes and again the beauty of this",
    "start": "2338680",
    "end": "2344119"
  },
  {
    "text": "uh this approach is uh that ex again exactly the same",
    "start": "2344119",
    "end": "2351000"
  },
  {
    "text": "exploit code will work against uh Chrome",
    "start": "2351000",
    "end": "2356880"
  },
  {
    "text": "browser um the only thing that we should do is no because the side effect of running",
    "start": "2356880",
    "end": "2365359"
  },
  {
    "text": "this exploit is that it installs a permanent back door so let's remove",
    "start": "2365359",
    "end": "2370640"
  },
  {
    "text": "it yeah so you see that one of the processor was uh infected now it's clean",
    "start": "2370640",
    "end": "2377400"
  },
  {
    "text": "okay so that's again a clean state so again we'll do we'll do very similar actions this time with Google Chrome we",
    "start": "2377400",
    "end": "2384400"
  },
  {
    "text": "open some totally dummy page again it has no malicious content in it again the",
    "start": "2384400",
    "end": "2390680"
  },
  {
    "text": "whole purpose of running this is um to get a renderer process",
    "start": "2390680",
    "end": "2396119"
  },
  {
    "text": "running let's see what's the process IDE of the",
    "start": "2396119",
    "end": "2401040"
  },
  {
    "text": "renderer yeah it's 2 3 48 and again same it runs as normal user",
    "start": "2405560",
    "end": "2412960"
  },
  {
    "text": "uh in the security tab you can see that it's has a stricted token unrusted Integrity etc etc so everything is",
    "start": "2412960",
    "end": "2420000"
  },
  {
    "text": "normal to 348 and now again um",
    "start": "2420000",
    "end": "2428280"
  },
  {
    "text": "using exactly the same exploit 2 3",
    "start": "2428280",
    "end": "2434680"
  },
  {
    "text": "48 again we inject the code into the slave so our exploit again will be",
    "start": "2434680",
    "end": "2441599"
  },
  {
    "text": "executed in the context of the slave in the sandbox in the sandbox process and",
    "start": "2441599",
    "end": "2446760"
  },
  {
    "text": "again sometime you have to run it more than once again we have a calculator",
    "start": "2446760",
    "end": "2452839"
  },
  {
    "text": "which again usually means everything is fine and",
    "start": "2452839",
    "end": "2457920"
  },
  {
    "text": "uh if you look at the process karchy again it's very similar to what we have",
    "start": "2457920",
    "end": "2463440"
  },
  {
    "text": "seen before calculator was started by the master process again something",
    "start": "2463440",
    "end": "2468640"
  },
  {
    "text": "unusual and again the reason is the renderer Chrome process runs as system so again the slave sandbox process was",
    "start": "2468640",
    "end": "2476480"
  },
  {
    "text": "able to execute a caral expit vulnerability get the highest possible",
    "start": "2476480",
    "end": "2481520"
  },
  {
    "text": "privilege on on uh on in user mode and then it could instruct the master",
    "start": "2481520",
    "end": "2486839"
  },
  {
    "text": "process to do anything it wants so again it demonstrates the total compromise of of",
    "start": "2486839",
    "end": "2494319"
  },
  {
    "text": "uh of the sandbox implemented in Chrome browser again assuming that you can get",
    "start": "2494319",
    "end": "2501400"
  },
  {
    "text": "initial code execution in in a sandbox environment",
    "start": "2501400",
    "end": "2507960"
  },
  {
    "text": "uh okay so",
    "start": "2507960",
    "end": "2513359"
  },
  {
    "text": "now I think that's about it about constructive exploits okay we have",
    "start": "2513359",
    "end": "2520240"
  },
  {
    "text": "some more",
    "start": "2520240",
    "end": "2523640"
  },
  {
    "start": "2527000",
    "end": "2575000"
  },
  {
    "text": "time I think yeah that that we have already discussed this are a screenshot of",
    "start": "2527079",
    "end": "2533599"
  },
  {
    "text": "renderer slaves running as system and uh the final demonstration",
    "start": "2533599",
    "end": "2539960"
  },
  {
    "text": "that you will see uh because the two presentations were focused on on",
    "start": "2539960",
    "end": "2545480"
  },
  {
    "text": "true type fun vulnerability so again you don't get impression that the graphic sub subsystem is the only uh",
    "start": "2545480",
    "end": "2552040"
  },
  {
    "text": "layer of code that is exposed to the attacks let's have a look at another vulnerability this time fixed in",
    "start": "2552040",
    "end": "2558240"
  },
  {
    "text": "Microsoft buletin 1198 and it was titled Windows Kel exception Handler vulnerability which",
    "start": "2558240",
    "end": "2564119"
  },
  {
    "text": "frankly doesn't make sense again the vulnerability is in the core of of the operating system this time it was",
    "start": "2564119",
    "end": "2570240"
  },
  {
    "text": "related to handling local descriptor table uh",
    "start": "2570240",
    "end": "2575359"
  },
  {
    "start": "2575000",
    "end": "2680000"
  },
  {
    "text": "entries so uh this will be the final final",
    "start": "2575359",
    "end": "2582960"
  },
  {
    "text": "example so and again let's try to play with",
    "start": "2583960",
    "end": "2590760"
  },
  {
    "text": "Acrobat Reader this time so we don't have an impression that",
    "start": "2590760",
    "end": "2596838"
  },
  {
    "text": "it's something not applicable to acrat Tre there",
    "start": "2601040",
    "end": "2607240"
  },
  {
    "text": "uh okay this is vulnerability and we we will need the process",
    "start": "2607480",
    "end": "2614559"
  },
  {
    "text": "ID process ID of the renderer as",
    "start": "2616440",
    "end": "2621359"
  },
  {
    "text": "usual okay so this time the renderer is 1",
    "start": "2626040",
    "end": "2631599"
  },
  {
    "text": "04 so again what we do we inject code uh",
    "start": "2631760",
    "end": "2637160"
  },
  {
    "text": "in the one4 right in the context of the sandbox the exploit is run in the",
    "start": "2637160",
    "end": "2644839"
  },
  {
    "text": "context of of the sandbox process and this is a real exploit that",
    "start": "2644839",
    "end": "2651839"
  },
  {
    "text": "exploits this vulnerability unfortunately I'm I'm not sure how to",
    "start": "2651839",
    "end": "2657319"
  },
  {
    "text": "exploit it for code execution uh I'm not even sure it's it's it's exploitable I would need much much",
    "start": "2657319",
    "end": "2663680"
  },
  {
    "text": "more time to for development but again uh you will you will have a look at",
    "start": "2663680",
    "end": "2670440"
  },
  {
    "text": "the at the result at the result of of running this crude version of an exploit",
    "start": "2670559",
    "end": "2676079"
  },
  {
    "text": "is that if you run it in the context of the renderer again you see the crash so",
    "start": "2676079",
    "end": "2682880"
  },
  {
    "start": "2680000",
    "end": "2742000"
  },
  {
    "text": "again that proves the existence of the vulnerability and that it can be reached from within the",
    "start": "2682880",
    "end": "2689400"
  },
  {
    "text": "sandbox okay I think that's that's about it",
    "start": "2691280",
    "end": "2698359"
  },
  {
    "text": "so uh so basically we demonstrated bypassing all the uh common sandboxes",
    "start": "2701520",
    "end": "2707800"
  },
  {
    "text": "and I had as I had mentioned in in my first slide uh we uh didn't factor or",
    "start": "2707800",
    "end": "2714000"
  },
  {
    "text": "take into account one of the very widely used sandboxes any idea which I was talking about uh it's it's probably Java",
    "start": "2714000",
    "end": "2721960"
  },
  {
    "text": "uh so Java is also a Sandbox uh we decided to exclude it from uh from this",
    "start": "2721960",
    "end": "2727280"
  },
  {
    "text": "stock because it's I guess it's pretty widely exploited all the time you can just go to probably Mal domains.com for",
    "start": "2727280",
    "end": "2733720"
  },
  {
    "text": "the latest security updates on Java I guess so uh uh but yeah to come to the point of",
    "start": "2733720",
    "end": "2741040"
  },
  {
    "text": "the talk uh the final points uh uh many windows kernel",
    "start": "2741040",
    "end": "2748200"
  },
  {
    "start": "2742000",
    "end": "2798000"
  },
  {
    "text": "vulnerabilities have been discovered U and and this has been an interesting Trend uh in the in the in the past few",
    "start": "2748200",
    "end": "2755400"
  },
  {
    "text": "years and many more are expected to come because it's a huge attack surface and and there's a lot of new",
    "start": "2755400",
    "end": "2762400"
  },
  {
    "text": "interesting uh development happening in the exploitation scene of colel vulnerabilities as we can see so uh if a",
    "start": "2762400",
    "end": "2768960"
  },
  {
    "text": "Sandbox relies on Kernel Security u a certain suitable col 1ber can be used to",
    "start": "2768960",
    "end": "2775800"
  },
  {
    "text": "completely bypass the sandbox and in fact uh last week in the canc West ponum",
    "start": "2775800",
    "end": "2782280"
  },
  {
    "text": "contest pawntoon contest uh Apparently one colel OS 1body was used to breach",
    "start": "2782280",
    "end": "2789359"
  },
  {
    "text": "the Chrome uh browser so it's kind of something which is which we are likely to see more and more often going",
    "start": "2789359",
    "end": "2797440"
  },
  {
    "text": "forward and uh a final slide is uh there are alternatives to do more reliable",
    "start": "2797640",
    "end": "2803839"
  },
  {
    "start": "2798000",
    "end": "2849000"
  },
  {
    "text": "sandboxing and virtualization based sandbox is one uh uh one good option",
    "start": "2803839",
    "end": "2808920"
  },
  {
    "text": "because what it does is that it wraps the whole operating system inside a Sandbox which means that OS",
    "start": "2808920",
    "end": "2814920"
  },
  {
    "text": "vulnerabilities like these are going to be non-fatal and but uh uh do not forget",
    "start": "2814920",
    "end": "2821200"
  },
  {
    "text": "that the hypervisor and all the supporting environments are still in attack surface and for that you need to",
    "start": "2821200",
    "end": "2826640"
  },
  {
    "text": "have a customized hypervisor uh to limit the exposure and uh and still uh we feel",
    "start": "2826640",
    "end": "2834400"
  },
  {
    "text": "that the amount of functionality U exposed by hardened by a hardened hypervisor is still much much lesser",
    "start": "2834400",
    "end": "2841559"
  },
  {
    "text": "than that of a Sandbox which is relying on the OS kernel to make its decisions",
    "start": "2841559",
    "end": "2847400"
  },
  {
    "text": "basically so yeah I guess uh that's all we had to share and we are open for",
    "start": "2847400",
    "end": "2853319"
  },
  {
    "start": "2849000",
    "end": "3318000"
  },
  {
    "text": "questions now yeah so um basically when you're",
    "start": "2853319",
    "end": "2861040"
  },
  {
    "text": "saying that um reducing the attack surface and having a hypervisor or even the Master Slave model of a Chrome",
    "start": "2861040",
    "end": "2867680"
  },
  {
    "text": "browser of an Acrobat Reader there the attack surface so low uh so small and it's much more difficult to actually",
    "start": "2867680",
    "end": "2873920"
  },
  {
    "text": "break out through the normal mechanisms without attacking the isn't then the real solution not to work",
    "start": "2873920",
    "end": "2880400"
  },
  {
    "text": "around this kind of well nonworking operating system but",
    "start": "2880400",
    "end": "2885520"
  },
  {
    "text": "rather you know in the future make sure that the operating system attacks surface to the kernel is much much lower",
    "start": "2885520",
    "end": "2891280"
  },
  {
    "text": "I mean you know if we could do the same thing if the operating system would allow us to specify for render for",
    "start": "2891280",
    "end": "2897960"
  },
  {
    "text": "example that the the attacked surface the the kernel exposure is much much ler maybe only the renderer can only write",
    "start": "2897960",
    "end": "2904119"
  },
  {
    "text": "to a pipe or it can only write it can never to a file it can never read the registry it can never load a font the",
    "start": "2904119",
    "end": "2910640"
  },
  {
    "text": "only thing that we allow the renderer to do is to write a pipe maybe open a socket or something wouldn't that fix",
    "start": "2910640",
    "end": "2916760"
  },
  {
    "text": "the problem instead of you know patching a hypervisor around and you know working around the broken arest yeah I think the",
    "start": "2916760",
    "end": "2921880"
  },
  {
    "text": "fundamental point we we are we we talking about is that is the attack surface fundamentally as you said right",
    "start": "2921880",
    "end": "2927520"
  },
  {
    "text": "so hypervisor is one way of doing it uh but ultimately uh it's going to be non-trivial to make sure that the",
    "start": "2927520",
    "end": "2934599"
  },
  {
    "text": "exposure to the kernel interface uh is contained because it's a very wide",
    "start": "2934599",
    "end": "2939799"
  },
  {
    "text": "attack surface you know it's it's the winter it's the memory manager there's so many aspects about the kernel which",
    "start": "2939799",
    "end": "2945400"
  },
  {
    "text": "are going to be always vulnerable right so uh say from a browser Chrome point of",
    "start": "2945400",
    "end": "2950599"
  },
  {
    "text": "view you could limit the renderer access but say from a sandboxy a more generic sandbox is going to be very difficult",
    "start": "2950599",
    "end": "2957040"
  },
  {
    "text": "yeah yeah Microsoft needs to work on that so Microsoft I mean if if Microsoft Works on that uh I guess this would just",
    "start": "2957040",
    "end": "2962799"
  },
  {
    "text": "make a secure operating system first so um just as an example on Linux there are",
    "start": "2962799",
    "end": "2968240"
  },
  {
    "text": "efforts to have the second mode for example and second filter we can essentially say for child process you",
    "start": "2968240",
    "end": "2974480"
  },
  {
    "text": "can say or in the processing to specify that you can say this is only allowed to have the following uh CIS calls",
    "start": "2974480",
    "end": "2981359"
  },
  {
    "text": "available so the kernel is the same but it can only do you know this and",
    "start": "2981359",
    "end": "2987400"
  },
  {
    "text": "that even mentioned this BPA filter in the white saer with it okay yeah second",
    "start": "2987400",
    "end": "2993119"
  },
  {
    "text": "filter that's a good that's a very same approach to EXP itly limmit the exposure",
    "start": "2993119",
    "end": "2999520"
  },
  {
    "text": "but you can do it on Linux but what to do with Windows what first you would have to rip",
    "start": "2999520",
    "end": "3005880"
  },
  {
    "text": "out all the graphics of the Kel because on Windows the slaves must be able to",
    "start": "3005880",
    "end": "3011480"
  },
  {
    "text": "use the graphics right and it means it must access all this car c interfaces that deal with the graphics and this is",
    "start": "3011480",
    "end": "3017680"
  },
  {
    "text": "an inherent problem right on Linux it looks much better because again the graphics is is in different different",
    "start": "3017680",
    "end": "3023720"
  },
  {
    "text": "layers so that's that's much better and generally for instance from the security posture Linux can had a lot of",
    "start": "3023720",
    "end": "3029839"
  },
  {
    "text": "problems with can vulnerabilities like 7 years ago in 2006 but they probably did",
    "start": "3029839",
    "end": "3035000"
  },
  {
    "text": "their homework and and the problem is not that prevalent at the moment although by by itself Linux Canal is",
    "start": "3035000",
    "end": "3041440"
  },
  {
    "text": "also very large monolithic and exposes a lot of interfaces but at least from from the point of view how",
    "start": "3041440",
    "end": "3048480"
  },
  {
    "text": "many vulnerabilities are reported looks much better right so so if if if we can",
    "start": "3048480",
    "end": "3054440"
  },
  {
    "text": "all move to a different more secure system that could be a great solution but it's not going to",
    "start": "3054440",
    "end": "3061559"
  },
  {
    "text": "happen",
    "start": "3063319",
    "end": "3066319"
  },
  {
    "text": "doesn't after blocks sorry I I can't hear you sorry doesn't inter technology",
    "start": "3068680",
    "end": "3075319"
  },
  {
    "text": "supervisor remote execution PR reduce the tax after all it blocks",
    "start": "3075319",
    "end": "3081400"
  },
  {
    "text": "code execution from user mode page in ring z uh you're talking about the in",
    "start": "3081400",
    "end": "3087160"
  },
  {
    "text": "Intel s yeah s so yeah s uh has come I",
    "start": "3087160",
    "end": "3092760"
  },
  {
    "text": "think in Windows 8 is adopting uh yeah I think uh Intel IV",
    "start": "3092760",
    "end": "3098319"
  },
  {
    "text": "Bridge processors onwards uh they support yes uh uh that is a good uh uh",
    "start": "3098319",
    "end": "3105359"
  },
  {
    "text": "col mode uh anti exploitation but we already know that there are ways like",
    "start": "3105359",
    "end": "3110880"
  },
  {
    "text": "col mode Roop uh mechanism to bypass SN ep the fundamentally uh the the is that",
    "start": "3110880",
    "end": "3116960"
  },
  {
    "text": "if you have an anti- exploitation technology like mt or S it's focused on the exploitation Vector so if a new",
    "start": "3116960",
    "end": "3123799"
  },
  {
    "text": "exploitation Vector emerges you know it can bypass that technology so it's it's definitely a good step because as of now",
    "start": "3123799",
    "end": "3130119"
  },
  {
    "text": "on Windows 7 there's very limited col mode security for an anti exploitation but it's definitely a good step uh I",
    "start": "3130119",
    "end": "3137280"
  },
  {
    "text": "would say a good foot for Microsoft the right direction now was s SM",
    "start": "3137280",
    "end": "3144960"
  },
  {
    "text": "yes there's another one coming named smap it introduces even tighter control",
    "start": "3144960",
    "end": "3153559"
  },
  {
    "text": "on on how how Kel can interact with usern memory and it will be really killer if it's implemented but you know",
    "start": "3153559",
    "end": "3160400"
  },
  {
    "text": "maybe Windows 9 and Windows",
    "start": "3160400",
    "end": "3163838"
  },
  {
    "text": "10 you mentioned that on the DM and hypervisor that hypervisor should limit",
    "start": "3165440",
    "end": "3172440"
  },
  {
    "text": "the impact of those attacks did you experiment on um on basic",
    "start": "3172440",
    "end": "3178440"
  },
  {
    "text": "set on St right yeah so these attacks the attacks if we talking about the",
    "start": "3179200",
    "end": "3184960"
  },
  {
    "text": "kernel which are kind of getting more prevalent this can be prevented in a uh hypervisor based solution like a VM",
    "start": "3184960",
    "end": "3191599"
  },
  {
    "text": "because uh uh we you know we have basically the whole OS wrapped inside the sandbox which is the VM so even if",
    "start": "3191599",
    "end": "3197440"
  },
  {
    "text": "you you know the colel exploits it you have a new VM session and you know the host won't die basically so yes we have",
    "start": "3197440",
    "end": "3205000"
  },
  {
    "text": "tested several so basically the only way to bypass that would be to actually bypass the hypervisor uh which is uh and",
    "start": "3205000",
    "end": "3211839"
  },
  {
    "text": "the attack surface for the hypervisor is much much smaller than that of the OS kernel for instance if it is a good well",
    "start": "3211839",
    "end": "3218839"
  },
  {
    "text": "written hypervisor not the generally available hypervisor I would",
    "start": "3218839",
    "end": "3224119"
  },
  {
    "text": "say what why do you think that uh the Microsoft ever decided to do qu parsing",
    "start": "3227760",
    "end": "3233559"
  },
  {
    "text": "Ah that's that's a very good question is like too slow",
    "start": "3233559",
    "end": "3238599"
  },
  {
    "text": "to I I think probably it was to do with performance uh is what I suspect but uh",
    "start": "3238599",
    "end": "3244680"
  },
  {
    "text": "it's it just baffles why would you do font parsing in the kernel because it's a it's a you know it's it's a",
    "start": "3244680",
    "end": "3251319"
  },
  {
    "text": "architectural blender I would say and uh it's a huge hole uh and a huge attack",
    "start": "3251319",
    "end": "3257000"
  },
  {
    "text": "surface which is just uh yeah it's going to be and ttf font has been you know uh",
    "start": "3257000",
    "end": "3262440"
  },
  {
    "text": "something about you know people have been talking about it for so many years now it's not something new right but I",
    "start": "3262440",
    "end": "3267799"
  },
  {
    "text": "believe that the early versions of Windows ENT I think they did not have it implemented in the kernel is what I",
    "start": "3267799",
    "end": "3274200"
  },
  {
    "text": "believe I think Windows 3.51 had Graphics in user mode but it",
    "start": "3274200",
    "end": "3280640"
  },
  {
    "text": "was too slow the main reason to move to C mode was was to improve performance and there",
    "start": "3280640",
    "end": "3286799"
  },
  {
    "text": "are some very funny remarks from from from",
    "start": "3286799",
    "end": "3292319"
  },
  {
    "text": "Microsoft engineer that moving the graphic subsystem to the K improv per but did not affect stability in our",
    "start": "3292319",
    "end": "3300480"
  },
  {
    "text": "security okay uh that's all then thank you thank you very much",
    "start": "3307920",
    "end": "3315040"
  }
]