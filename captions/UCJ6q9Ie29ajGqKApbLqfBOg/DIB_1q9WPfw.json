[
  {
    "text": "[Music] um it's amazing to see you all here",
    "start": "6360",
    "end": "11679"
  },
  {
    "text": "uh thank you very much for coming and i cannot stress enough how it is wonderful to see everybody face to face of course",
    "start": "11679",
    "end": "18080"
  },
  {
    "text": "and it is amazing to be back on the black hat stage so who we are just quickly so my name is",
    "start": "18080",
    "end": "24240"
  },
  {
    "text": "marina crotofield basically i'm here in the role of the researcher so i'm specializing in cyber",
    "start": "24240",
    "end": "29920"
  },
  {
    "text": "physical security basically how do we cause physical impact by the means of cyber attacks",
    "start": "29920",
    "end": "36880"
  },
  {
    "text": "and i'm not an expert this will be talk on process control and i'm not an expert on",
    "start": "36880",
    "end": "41920"
  },
  {
    "text": "control engineering but i'm a hacker or let's say uh in a more intelligent terms uh",
    "start": "41920",
    "end": "48640"
  },
  {
    "text": "experience red team so i'm rick derbisher i'm a phd student at lancaster university um i actually",
    "start": "48640",
    "end": "55520"
  },
  {
    "text": "specialize in adversary centric risk assessment so i'm looking at the costs and adversary experiences when",
    "start": "55520",
    "end": "61199"
  },
  {
    "text": "performing attacks i occasionally do research on ics or ot such as this kind",
    "start": "61199",
    "end": "66320"
  },
  {
    "text": "of talk but yeah i'm almost finished the phd so if anyone's got any jobs to give out hit",
    "start": "66320",
    "end": "71760"
  },
  {
    "text": "me up yes and of course also first acknowledgement goes to other our",
    "start": "71760",
    "end": "78240"
  },
  {
    "text": "contributors to this research we were not alone here so we will start with a small",
    "start": "78240",
    "end": "83360"
  },
  {
    "text": "introduction into the industrial control system and to the motivation like why do we uh why are we giving this talk",
    "start": "83360",
    "end": "90400"
  },
  {
    "text": "so industrial control systems it's a obviously a computer network which typically minimum consists of two parts",
    "start": "90400",
    "end": "97200"
  },
  {
    "text": "it has a corporate or enterprise network and then it has industrial network and even though they have the same pcs",
    "start": "97200",
    "end": "103680"
  },
  {
    "text": "typically uh they are maintained by engineers because the content context in",
    "start": "103680",
    "end": "108720"
  },
  {
    "text": "which you maintain in those pcs is so much more important than pc",
    "start": "108720",
    "end": "113840"
  },
  {
    "text": "and of course the computers are basically when we maintain npcs we have a computer science you apply computer",
    "start": "113840",
    "end": "119040"
  },
  {
    "text": "science knowledge and then we have of course industrial processes which is the most important part in industrial control systems",
    "start": "119040",
    "end": "125360"
  },
  {
    "text": "which is you applying an engineering knowledge and in this mixture of all the you know different sciences and cultures",
    "start": "125360",
    "end": "131599"
  },
  {
    "text": "is of course missing and blending together creating of course a conflict but it's also creating a little bit of hurdles for the attacker because",
    "start": "131599",
    "end": "138640"
  },
  {
    "text": "in this system the ultimate goal of the attacker is to cause physical impact it is really frequently misunderstood that",
    "start": "138640",
    "end": "145520"
  },
  {
    "text": "once you got access or maybe exploited some vulnerability or got in that's it that's in the end of basically your",
    "start": "145520",
    "end": "151519"
  },
  {
    "text": "exploitation it's not it's just a beginning of this journey after that you still need to cause your physical damage",
    "start": "151519",
    "end": "157200"
  },
  {
    "text": "and the attacker has to possess this interdisciplinary knowledge in multiple disciplines in order to be able to con",
    "start": "157200",
    "end": "163599"
  },
  {
    "text": "compile this um payload which will achieve desired physical impact so if you think about",
    "start": "163599",
    "end": "169760"
  },
  {
    "text": "this attacker has its evil motivation and then he needs to compile cyber physical payload there are a lot of",
    "start": "169760",
    "end": "175280"
  },
  {
    "text": "steps that attacker needs to take to be able to compile that payload so the attacker is following the cyber physical",
    "start": "175280",
    "end": "181200"
  },
  {
    "text": "attack life cycle and do not mix it with the attack life cycle which is describe the intrusion here we're describing have",
    "start": "181200",
    "end": "187040"
  },
  {
    "text": "a physical attack life cycle or steps will take us to the physical damage and in the past like seven eight years i've",
    "start": "187040",
    "end": "193680"
  },
  {
    "text": "been researching two deaths every step for stage of this attack life cycle",
    "start": "193680",
    "end": "199040"
  },
  {
    "text": "including presenting many talks at blackhead and a lot of knowledge goes into each stage of this attack life",
    "start": "199040",
    "end": "205599"
  },
  {
    "text": "cycle it's just really a really a lot and this is again something what is not entirely understood how much effort goes",
    "start": "205599",
    "end": "212159"
  },
  {
    "text": "into compiling file and payload and at some point we've been like presented research where we took a",
    "start": "212159",
    "end": "218879"
  },
  {
    "text": "really very small unit of process and we took very trivial attack scenario and",
    "start": "218879",
    "end": "224879"
  },
  {
    "text": "just like literally getting from this simplistic scenario to finalize this really",
    "start": "224879",
    "end": "231200"
  },
  {
    "text": "looking simple uh attack scripts it takes a lot of efforts we barely could manage describing all",
    "start": "231200",
    "end": "238000"
  },
  {
    "text": "the steps and efforts until pages of a paper so the efforts of the of the",
    "start": "238000",
    "end": "243280"
  },
  {
    "text": "attack are really frequently misunderstood the most important component in cyber physical exploitation after all the",
    "start": "243280",
    "end": "249840"
  },
  {
    "text": "reconnaissance and understand familiarization of your of your victim is of course industrial controllers because in the end they are the final",
    "start": "249840",
    "end": "256560"
  },
  {
    "text": "elements which are interacting with field instrumentation sensors and valves and there are different types of",
    "start": "256560",
    "end": "261919"
  },
  {
    "text": "industrial controllers there are controllers as part of the dcs systems there are rtus there these plc's which",
    "start": "261919",
    "end": "268240"
  },
  {
    "text": "for example art using plcs like right now become elizabeth kind of looking the same and in this talk we will be focusing on",
    "start": "268240",
    "end": "274720"
  },
  {
    "text": "the plc's and plc surrounding control logic which is a key element in the whole ecosystem because after",
    "start": "274720",
    "end": "281199"
  },
  {
    "text": "engineers design the physical process then you write a program to control it or basically to manage it comes it can",
    "start": "281199",
    "end": "287199"
  },
  {
    "text": "be written in different languages and describe all the conditions which happen on the plc flags and everything it's even described",
    "start": "287199",
    "end": "294320"
  },
  {
    "text": "like basically you even configure how your infrastructure is for example if you can see here the modbus server with ip addresses everything is in that",
    "start": "294320",
    "end": "300880"
  },
  {
    "text": "controller so control logic is a software or user program which controls or manages",
    "start": "300880",
    "end": "306639"
  },
  {
    "text": "physical processes it defines what should or should not happen when in which sequence and under which",
    "start": "306639",
    "end": "312400"
  },
  {
    "text": "conditions so at the moment if you would like to analyze the control logic you would",
    "start": "312400",
    "end": "318000"
  },
  {
    "text": "basically first of all you need to be an expert in a specific language and a specific vendor and secondly you really need to do",
    "start": "318000",
    "end": "323919"
  },
  {
    "text": "manual work so there is been recently one work where if you are able to get your hands over the project file or",
    "start": "323919",
    "end": "330960"
  },
  {
    "text": "basically which is this which is stored on the engineering workstation that you cannot you can",
    "start": "330960",
    "end": "336960"
  },
  {
    "text": "perform like offline analysis in a more or less automated way however you need to have hold of that project file in our",
    "start": "336960",
    "end": "344479"
  },
  {
    "text": "case we are considering scenario whereas attacker on the network standing in front of the plcs and would like to understand what's happening on it so",
    "start": "344479",
    "end": "352240"
  },
  {
    "text": "basically they've been in the past two attacks which involved industrial controllers they have been stuxnet and",
    "start": "352240",
    "end": "357280"
  },
  {
    "text": "they've been in destroyer and they took completely polar examples of precision",
    "start": "357280",
    "end": "362639"
  },
  {
    "text": "of cyberphysical attacks if stuxnet was live laser sharp surgical precision attack industrial was literally fire and",
    "start": "362639",
    "end": "369840"
  },
  {
    "text": "forget it's just enumerate any controllable signal on the p on the controller and switch them off so",
    "start": "369840",
    "end": "375759"
  },
  {
    "text": "obviously there is no any intelligence on it so the approach which we will be describing in this talk is in the middle",
    "start": "375759",
    "end": "381199"
  },
  {
    "text": "actually so now let's go to uh showing to the main part like how can",
    "start": "381199",
    "end": "387840"
  },
  {
    "text": "we uh which attack surface or which design let's say specifics of the industrial controls",
    "start": "387840",
    "end": "393919"
  },
  {
    "text": "we're exploiting to actually understand what's happening with the control logic and compile automated cyber physical",
    "start": "393919",
    "end": "399600"
  },
  {
    "text": "payloads so some preliminaries so of course in the ot everything is standardized",
    "start": "399600",
    "end": "405840"
  },
  {
    "text": "anything what you need to know there will be standard about it so the standard ic6113",
    "start": "405840",
    "end": "411599"
  },
  {
    "text": "one is defining how the way how we're programming the plcs and describe for example programming languages which has",
    "start": "411599",
    "end": "417840"
  },
  {
    "text": "two part types graphical stacks based but it also describes which program um",
    "start": "417840",
    "end": "424160"
  },
  {
    "text": "program organizational units we use in the uh when uh compiling cyber uh when",
    "start": "424160",
    "end": "429280"
  },
  {
    "text": "writing a level uh control logic and there are programs which are the highest level of user program like it's in like",
    "start": "429280",
    "end": "436479"
  },
  {
    "text": "think of it as a main program when you start program in the normal world that you have functions which are kind of",
    "start": "436479",
    "end": "442400"
  },
  {
    "text": "standardized functionalities uh but more or less simplistic like for example editions or absolute stop start and so",
    "start": "442400",
    "end": "449120"
  },
  {
    "text": "on they don't have own memory for example but then there are also function blocks which is a reusable code which",
    "start": "449120",
    "end": "454960"
  },
  {
    "text": "frequently re reoccurring and complex functionalities for example the pid control which is one of the main",
    "start": "454960",
    "end": "460800"
  },
  {
    "text": "function and it has own memory uh which comes together with the function",
    "start": "460800",
    "end": "466000"
  },
  {
    "text": "block and then there are variable blocks which actually stored the values of those",
    "start": "466000",
    "end": "471520"
  },
  {
    "text": "variables used in the control logic and that is uh for example if you will try to google for example",
    "start": "471520",
    "end": "477919"
  },
  {
    "text": "several terms which we use in this talk you will have difficulty finding them on the internet why because for example",
    "start": "477919",
    "end": "483120"
  },
  {
    "text": "this variable blocks they are not even explicitly defined in the standard but that is actually what we are explicitly",
    "start": "483120",
    "end": "489520"
  },
  {
    "text": "exploiting in our approach so uh it has been zero days since last",
    "start": "489520",
    "end": "496160"
  },
  {
    "text": "research on the siemens plc it's just a favorite target the siemens just has to accept it we are no exclusion",
    "start": "496160",
    "end": "502800"
  },
  {
    "text": "so uh we are just jumping specifically um in the in this specific example although",
    "start": "502800",
    "end": "508319"
  },
  {
    "text": "the those principles which are described in the standards are applicable so this is how for example siemens is referring",
    "start": "508319",
    "end": "514800"
  },
  {
    "text": "to those um pou's in their ecosystem so there is organizational block there is",
    "start": "514800",
    "end": "522399"
  },
  {
    "text": "i cannot even read function blocks there is functions and data blocks so those variables blocks they call them data",
    "start": "522399",
    "end": "527680"
  },
  {
    "text": "blocks so remember we will be referring to it a lot and there is a global data block which stores variables which are",
    "start": "527680",
    "end": "533040"
  },
  {
    "text": "accessible throughout like by every function or function block and there are local data blocks as i",
    "start": "533040",
    "end": "540240"
  },
  {
    "text": "described which uh previously which generated together with the function block",
    "start": "540240",
    "end": "545519"
  },
  {
    "text": "and uh whenever you start basically because um writing those functions in function",
    "start": "545519",
    "end": "551440"
  },
  {
    "text": "blocks is extremely effortful and you require a lot of engineering knowledge therefore your control uh software is",
    "start": "551440",
    "end": "558160"
  },
  {
    "text": "coming already with predefined uh instruction sets so those function blocks they call for example the",
    "start": "558160",
    "end": "564560"
  },
  {
    "text": "reference in here as instructions uh and they already predefined you basically drag drag them and use in your",
    "start": "564560",
    "end": "570800"
  },
  {
    "text": "program so they already written for you there are also libraries where you can go and can for example download even",
    "start": "570800",
    "end": "577279"
  },
  {
    "text": "more global libraries so for example this is just very few examples of the function blocks for",
    "start": "577279",
    "end": "583600"
  },
  {
    "text": "example which you can find like there is a pid controller and as you can see like depending on which pid control you need",
    "start": "583600",
    "end": "589839"
  },
  {
    "text": "and if you go to the manual it will be almost three pages of exciting reading they are very very complex",
    "start": "589839",
    "end": "595760"
  },
  {
    "text": "uh functions there is here this opportunity to override something so we have got modules there is for example",
    "start": "595760",
    "end": "602959"
  },
  {
    "text": "safety door function from the safety plc motion control drive control and so on there is like",
    "start": "602959",
    "end": "609120"
  },
  {
    "text": "hundreds of those and they are all available to you so this is this function blocks is something what we will be actually targeting in our",
    "start": "609120",
    "end": "615760"
  },
  {
    "text": "approach because actually so this is like maybe i will recap so this is the main function",
    "start": "615760",
    "end": "621760"
  },
  {
    "text": "functionality of the control logic and this is what we actually want enumerate to understand what is this plc is doing",
    "start": "621760",
    "end": "627279"
  },
  {
    "text": "what it is controlling so the attack objective in general what the attacker wants to achieve of course in numerate function block we want to",
    "start": "627279",
    "end": "633680"
  },
  {
    "text": "know which function blocks are used we of course wants to extract variables because then we can if you extract the",
    "start": "633680",
    "end": "639279"
  },
  {
    "text": "variables we can understand how the process is configured and working and in general when we talk about variables we",
    "start": "639279",
    "end": "644800"
  },
  {
    "text": "should probably differentiate between at least like process configuration infrastructure configuration because",
    "start": "644800",
    "end": "650160"
  },
  {
    "text": "certain variables will be related to how you could uh configure your computational and communication infrastructure and how you configure",
    "start": "650160",
    "end": "656480"
  },
  {
    "text": "your like physical processing equipment and then after you perform the full reconnaissance of your infrastructure",
    "start": "656480",
    "end": "662320"
  },
  {
    "text": "you may wish of course to manipulate those variables and currently there are absolutely no",
    "start": "662320",
    "end": "668399"
  },
  {
    "text": "tools whatsoever to enumerate control logic in an automated way and this is what we will be offering in this talk",
    "start": "668399",
    "end": "676320"
  },
  {
    "text": "so um every function block as i say that it's each time you deploy a function block it",
    "start": "676320",
    "end": "683279"
  },
  {
    "text": "comes together with a data block and a user is offered with different legitimate means how to",
    "start": "683279",
    "end": "690560"
  },
  {
    "text": "actually read their uh in the content of the data block and by processing actually those uh what",
    "start": "690560",
    "end": "697279"
  },
  {
    "text": "you read from the data block you actually cannot identify to which function block it belongs",
    "start": "697279",
    "end": "703360"
  },
  {
    "text": "so for example you can query the method there are multiple ways exist how you can basically extract content of the",
    "start": "703360",
    "end": "709600"
  },
  {
    "text": "data block there are for example you can query the metadata with get block info at the top",
    "start": "709600",
    "end": "714880"
  },
  {
    "text": "and by processing the response you can actually identify to which function blocks it belongs there is for example",
    "start": "714880",
    "end": "721200"
  },
  {
    "text": "something which called bulk transfer for example it's byte upload you basically upload bytewise the whole function block",
    "start": "721200",
    "end": "728720"
  },
  {
    "text": "and again by parsing it and extracting certain information you can understand which data block it is but",
    "start": "728720",
    "end": "735440"
  },
  {
    "text": "these commands are very rare commands so they're easily detectable on the network so obviously well that's not very",
    "start": "735440",
    "end": "742480"
  },
  {
    "text": "reliable approach so we were thinking about how can we enumerate these function blocks in a very stealth manner",
    "start": "742480",
    "end": "748399"
  },
  {
    "text": "so that basically the modern security controls will not detect them and for example there is another way so read and",
    "start": "748399",
    "end": "754639"
  },
  {
    "text": "write a normal command's legitimate command on the network and they will mimic the normal traffic so you actually",
    "start": "754639",
    "end": "760959"
  },
  {
    "text": "can read the contents of the data block byte by byte with the read command so this is what you see at the bottom for",
    "start": "760959",
    "end": "767680"
  },
  {
    "text": "example you see we've read the baud rate and so on the other piece of information which we",
    "start": "767680",
    "end": "773279"
  },
  {
    "text": "need to know is that every variable in the data block so the memory is organized in a very static and",
    "start": "773279",
    "end": "778480"
  },
  {
    "text": "predictable way and every variable is allocated a very let's say predefined number of memory",
    "start": "778480",
    "end": "786240"
  },
  {
    "text": "and for example if you see at the bottom we have like a boolean variable which is uh request i guess",
    "start": "786240",
    "end": "793120"
  },
  {
    "text": "um and you can see it's boolean so it means it's just one bit but we allocated the whole byte",
    "start": "793120",
    "end": "798800"
  },
  {
    "text": "uh two bytes so the rest of the memory is just unused it's just there and if you just like go to the bottom",
    "start": "798800",
    "end": "804880"
  },
  {
    "text": "you will see that there are a lot of places where for example there definitely more memory allocated than",
    "start": "804880",
    "end": "810800"
  },
  {
    "text": "needed all of that memory is just unused and this creates actually a unique pattern for each data block that offset",
    "start": "810800",
    "end": "817600"
  },
  {
    "text": "and number of empty bits it's create a unique pattern for each data block which we actually can then use to identify",
    "start": "817600",
    "end": "823600"
  },
  {
    "text": "understand which data block it is so this is basically the visualization of what i was just talking about so if",
    "start": "823600",
    "end": "830000"
  },
  {
    "text": "you will basically enumerate for each data block this offset and empty memory",
    "start": "830000",
    "end": "835760"
  },
  {
    "text": "we can like really very reliably enumerate understand which data block it is and",
    "start": "835760",
    "end": "841040"
  },
  {
    "text": "this is represent this information leakage enviro vulnerability so",
    "start": "841040",
    "end": "846399"
  },
  {
    "text": "this empty memory is what allows us to determine the function block so this is the pattern so we basically",
    "start": "846399",
    "end": "852560"
  },
  {
    "text": "then um this is what's like previously i've been showing you modbus serial function block",
    "start": "852560",
    "end": "858399"
  },
  {
    "text": "and if you read byte by byte all then used memory uh and we know unknown location this is basically create as a",
    "start": "858399",
    "end": "865440"
  },
  {
    "text": "unique pattern of that function block uh so basically like if to recap so our",
    "start": "865440",
    "end": "872160"
  },
  {
    "text": "approach to the functional block enumeration first of all you would uh read by by the content of the data block",
    "start": "872160",
    "end": "878800"
  },
  {
    "text": "and actually a lot of them has a unique length so you already can identify data block by simply by knowing in length",
    "start": "878800",
    "end": "884720"
  },
  {
    "text": "then of course you perform the bit wise matching of zero patterns at expected offsets",
    "start": "884720",
    "end": "890560"
  },
  {
    "text": "and then you basically repeat step these two steps until you identify all the function blocks you need",
    "start": "890560",
    "end": "898160"
  },
  {
    "text": "so in a nutshell we actually our approach is very similar to the rainbow tables",
    "start": "898160",
    "end": "903279"
  },
  {
    "text": "which you use to crack uh uh passwords so you basically create your signature set for selected or all which function",
    "start": "903279",
    "end": "911040"
  },
  {
    "text": "blocks you know and you basically what it's actually very small because",
    "start": "911040",
    "end": "916160"
  },
  {
    "text": "everything what you need to store is just lengths offsets and number of empty bits and bytes that's it",
    "start": "916160",
    "end": "923839"
  },
  {
    "text": "so there are of course possible edge cases there are of course collisions we can avoid them so even though like in",
    "start": "923839",
    "end": "929360"
  },
  {
    "text": "majority almost all of them you can identify the unique way in that way but for example there are such h cases like",
    "start": "929360",
    "end": "934880"
  },
  {
    "text": "for example counter up and counter down they are identical they will have similar lengths and zero pattern like",
    "start": "934880",
    "end": "941839"
  },
  {
    "text": "but uh so if you want to understand which counter it is you just need to monitor like perform uh two times read",
    "start": "941839",
    "end": "948800"
  },
  {
    "text": "um like for example for the counter then you know if it is increasing then it is counter-up",
    "start": "948800",
    "end": "955120"
  },
  {
    "text": "so of course and the next thing which you want to do is the data block uh context uh content exfiltration you want",
    "start": "955120",
    "end": "961040"
  },
  {
    "text": "to know what as to what values those variables set and you actually do this with again with the",
    "start": "961040",
    "end": "966320"
  },
  {
    "text": "legitimate command read you so the offset for every variable is known because those very like all those",
    "start": "966320",
    "end": "973360"
  },
  {
    "text": "function blocks are available to you in the software so you know exactly where every variable is located so you can",
    "start": "973360",
    "end": "979199"
  },
  {
    "text": "basically literally do everything with a read command there is also such case like the long",
    "start": "979199",
    "end": "986240"
  },
  {
    "text": "variables for example this specific case for example plc can actually email like",
    "start": "986240",
    "end": "991440"
  },
  {
    "text": "for example status information or alerts to a certain email address so it has actually can have uh email address with",
    "start": "991440",
    "end": "998079"
  },
  {
    "text": "a password so for example so such long strings are actually stored in the global database and they are",
    "start": "998079",
    "end": "1004240"
  },
  {
    "text": "basically then what is stored in the local database is a pointer so you're extracting the",
    "start": "1004240",
    "end": "1009839"
  },
  {
    "text": "pointer then you need to reconstruct the pointer it's very simple construct plain text you can easily",
    "start": "1009839",
    "end": "1015680"
  },
  {
    "text": "like basically parse it and then with that pointer you go to the global database to extract the user name and",
    "start": "1015680",
    "end": "1021360"
  },
  {
    "text": "password and this is of course represent also very interesting information because you immediately can start like",
    "start": "1021360",
    "end": "1026640"
  },
  {
    "text": "is there any password reuse because typically we use one password for everything so what we can actually enumerate and",
    "start": "1026640",
    "end": "1033678"
  },
  {
    "text": "exfiltrate hundreds and hundreds of standard function blocks not only from the libraries from the vendors but from",
    "start": "1033679",
    "end": "1039918"
  },
  {
    "text": "the consultants company from the user for forums you can scoop the whole internet and create your comprehensive",
    "start": "1039919",
    "end": "1044959"
  },
  {
    "text": "data set and then of course also exfiltrate variables so the similar campaign whichever happened in the wild",
    "start": "1044959",
    "end": "1051679"
  },
  {
    "text": "was havocs in 2013 the only difference is that the attacker was targeting the opc so they were exfiltrating all tags",
    "start": "1051679",
    "end": "1059760"
  },
  {
    "text": "to enumerate all the field equipment connected to the industrial controllers so now of course we want to",
    "start": "1059760",
    "end": "1066559"
  },
  {
    "text": "uh manipulate the content and here there here could be a little bit more of edge cases so um it's still",
    "start": "1066559",
    "end": "1074400"
  },
  {
    "text": "possible uh but there could be interesting cases so default variables we can just",
    "start": "1074400",
    "end": "1080000"
  },
  {
    "text": "immediately um overwrite with uh yeah manipulate directly in the",
    "start": "1080000",
    "end": "1087120"
  },
  {
    "text": "like if the operator did not change them in the data block if there is like variables which are stored in the global",
    "start": "1087120",
    "end": "1092880"
  },
  {
    "text": "database uh just because they're coming from there and or basically directly assigned they",
    "start": "1092880",
    "end": "1100160"
  },
  {
    "text": "will be pushed in the local database every ten minutes like every cycle and basically for the attacker if you want",
    "start": "1100160",
    "end": "1105440"
  },
  {
    "text": "to overwrite it in the local data it will be race condition for you and basically if you will be if you will be",
    "start": "1105440",
    "end": "1110720"
  },
  {
    "text": "fast enough then this 10 milliseconds will depend of course how fast you can generate packets on the network or maybe even kill them",
    "start": "1110720",
    "end": "1117360"
  },
  {
    "text": "uh and um variables which are for example uh",
    "start": "1117360",
    "end": "1123760"
  },
  {
    "text": "uh which are signed in via the pointers can be directly manipulated in the global database so for example we can",
    "start": "1123760",
    "end": "1129039"
  },
  {
    "text": "change use uh user like password for the mail and plc cannot generate alerts and",
    "start": "1129039",
    "end": "1134640"
  },
  {
    "text": "alerts anymore so uh",
    "start": "1134640",
    "end": "1139039"
  },
  {
    "text": "right um so this is basically yes so this is an example of how for example we were",
    "start": "1140480",
    "end": "1145520"
  },
  {
    "text": "like changing the baud rate for the modbus and if you change the modbus uh baud",
    "start": "1145520",
    "end": "1151679"
  },
  {
    "text": "rate for example it will still stop communicate so there are of course also like for",
    "start": "1151679",
    "end": "1157200"
  },
  {
    "text": "example if you not easily manipulate the content for example because of the 10 second cycles there are also",
    "start": "1157200",
    "end": "1162799"
  },
  {
    "text": "alternatives for example for the count you can directly instead of for example if you won't just continuously reset the",
    "start": "1162799",
    "end": "1168559"
  },
  {
    "text": "counter and the reset function is already set by the uh programmer you can for example basically write a zero to",
    "start": "1168559",
    "end": "1174559"
  },
  {
    "text": "the counter to the output value directly so basically if you understand how those function blocks works you will find the",
    "start": "1174559",
    "end": "1181039"
  },
  {
    "text": "alternative how to achieve what you want because again with read and write commands",
    "start": "1181039",
    "end": "1186080"
  },
  {
    "text": "so in general you see like this is where you really need to grab your engineer because they like for",
    "start": "1186080",
    "end": "1192960"
  },
  {
    "text": "example what you see here is an example it's a block to",
    "start": "1192960",
    "end": "1198320"
  },
  {
    "text": "uh to integrate uh drive control from the abb and it has 300 variables only 26",
    "start": "1198320",
    "end": "1205120"
  },
  {
    "text": "of them inputs and outputs so that 270 variables are internal variables for",
    "start": "1205120",
    "end": "1210320"
  },
  {
    "text": "different functionality and calculations so if you grab an engineer they will definitely be able to tell you very",
    "start": "1210320",
    "end": "1215520"
  },
  {
    "text": "smart way which of those variables to manipulate to actually maybe even to achieve some interesting effects",
    "start": "1215520",
    "end": "1222240"
  },
  {
    "text": "so this the approach which we described here that's actually applicable to other models of the plcs which we verified but",
    "start": "1222240",
    "end": "1229039"
  },
  {
    "text": "it's also applicable you can enumerate also custom function blocks in the same way why because they will have the same",
    "start": "1229039",
    "end": "1235280"
  },
  {
    "text": "memory allocation so what are they in fact they're basically",
    "start": "1235280",
    "end": "1240880"
  },
  {
    "text": "the infection vector and attacker model for this so of course the prime vector victim for this approach is any plc",
    "start": "1240880",
    "end": "1246799"
  },
  {
    "text": "which is hanging on the internet if it is hanging on the internet you can use this approach and directly start enumerating and uh manipulating if you",
    "start": "1246799",
    "end": "1254559"
  },
  {
    "text": "are we are talking about plc located on the network then you need to be somewhere on the asset which is allowed",
    "start": "1254559",
    "end": "1260480"
  },
  {
    "text": "to speak to the plc network so of course like this approach is best use if you have c2 channel because human",
    "start": "1260480",
    "end": "1267200"
  },
  {
    "text": "in the loop is always better you can basically analyze the content of the variables and maybe design offline better damage scenario",
    "start": "1267200",
    "end": "1274080"
  },
  {
    "text": "but every single religious described this also completely can be a program in an automated payload",
    "start": "1274080",
    "end": "1280480"
  },
  {
    "text": "uh it's only that of course you will have to put a little bit more effort to design also your decision making logic",
    "start": "1280480",
    "end": "1286320"
  },
  {
    "text": "when you decide uh for which value you need to change the variable",
    "start": "1286320",
    "end": "1292240"
  },
  {
    "text": "i will pass over now to rick okay so we've performed reconnaissance on the",
    "start": "1292240",
    "end": "1299520"
  },
  {
    "text": "length and the zero byte offsets in the data blocks to enumerate the function block",
    "start": "1299520",
    "end": "1305760"
  },
  {
    "text": "and we can manipulate the uh the variables as well well there's a crucial thing there",
    "start": "1305760",
    "end": "1311440"
  },
  {
    "text": "there are zero by offsets that are unused in the plc how can we use them ourselves",
    "start": "1311440",
    "end": "1318799"
  },
  {
    "text": "so let's assume for an example that an attack has an objective similar to havex where the goal is kind of large scale",
    "start": "1318799",
    "end": "1325280"
  },
  {
    "text": "reconnaissance so they want to enumerate control logic the function blocks and",
    "start": "1325280",
    "end": "1330720"
  },
  {
    "text": "exfiltrate that data so the attacker can use a variety of",
    "start": "1330720",
    "end": "1337679"
  },
  {
    "text": "vectors for delivering the malware you can look at previous campaigns to see the creative and incredible ways that people have got",
    "start": "1337679",
    "end": "1343600"
  },
  {
    "text": "these pieces of malware physically onto networks but depending on the network",
    "start": "1343600",
    "end": "1349360"
  },
  {
    "text": "architecture of the operational technology the marwin might not actually be able to talk back to the",
    "start": "1349360",
    "end": "1354559"
  },
  {
    "text": "to the attacker infrastructure over the internet and deliver the exfiltrated data",
    "start": "1354559",
    "end": "1359679"
  },
  {
    "text": "this also makes human assisted process manipulation impossible too if the attacker can't then communicate with the",
    "start": "1359679",
    "end": "1365440"
  },
  {
    "text": "malware so the attacker needs to think of a different approach",
    "start": "1365440",
    "end": "1371520"
  },
  {
    "text": "so let's assume that the diagram down in the bottom right is some distributed architecture such as energy distribution",
    "start": "1371520",
    "end": "1379039"
  },
  {
    "text": "the hmi that you can see in the leftmost box that's the thing that even that the",
    "start": "1379039",
    "end": "1384240"
  },
  {
    "text": "attacker is affected with malware it can't speak to the internet and also can't speak to the back-end",
    "start": "1384240",
    "end": "1389280"
  },
  {
    "text": "infrastructure of the operational technology also compromising for example the scada",
    "start": "1389280",
    "end": "1395520"
  },
  {
    "text": "server it's not immediately useful either because that can't communicate to the hmi in our situation they are both",
    "start": "1395520",
    "end": "1401919"
  },
  {
    "text": "blocked from talking to one another however if the hmi and the scada server both",
    "start": "1401919",
    "end": "1408960"
  },
  {
    "text": "have a plc in common such as the one highlighted in red denoted plc-rtu",
    "start": "1408960",
    "end": "1414880"
  },
  {
    "text": "they can use that as a proxy to set up command and control so what we've done is we've created a",
    "start": "1414880",
    "end": "1422080"
  },
  {
    "text": "command and control that uses the plc memory to relay the control and the data",
    "start": "1422080",
    "end": "1428840"
  },
  {
    "text": "traffic now the client and the server enumerate the function blocks on the plc",
    "start": "1428840",
    "end": "1434159"
  },
  {
    "text": "and they establish common memory reasons that they can use as control and data channels",
    "start": "1434159",
    "end": "1439600"
  },
  {
    "text": "all this needs is two bytes on the plc the first byte is for synchronization",
    "start": "1439600",
    "end": "1446080"
  },
  {
    "text": "and control and you can see the the basic example that we did in our proof of concept down on the bottom left",
    "start": "1446080",
    "end": "1451919"
  },
  {
    "text": "and what this does is allow the client and the server to communicate when they should be talking when they shouldn't be",
    "start": "1451919",
    "end": "1456960"
  },
  {
    "text": "talking when they should be reading for example any other bytes that we have access to that are used on the plc",
    "start": "1456960",
    "end": "1463200"
  },
  {
    "text": "uh can then be used for data and now we can stress here that we can go as granular as using individual bits",
    "start": "1463200",
    "end": "1469679"
  },
  {
    "text": "however you've got to be very careful when doing that because certain variables within certain functions even",
    "start": "1469679",
    "end": "1474880"
  },
  {
    "text": "if they'll be only using one bit in the byte they'll check the entire byte and they'll throw a very big hissy fit if",
    "start": "1474880",
    "end": "1480320"
  },
  {
    "text": "you start start using that so what our c2 does is it enables the",
    "start": "1480320",
    "end": "1486000"
  },
  {
    "text": "execution of commands at a console or terminal level on the client and the only thing that restricts us here is the",
    "start": "1486000",
    "end": "1492960"
  },
  {
    "text": "permissions depend on the compromise client privileges so whatever the client malware has access to we can then send",
    "start": "1492960",
    "end": "1500320"
  },
  {
    "text": "commands to do so in our example",
    "start": "1500320",
    "end": "1505440"
  },
  {
    "text": "the plc will talk to the scada server which in our example is the c2 server it will take this over to the hmi which",
    "start": "1505440",
    "end": "1511600"
  },
  {
    "text": "in our example is a c2 client and then we can execute certain commands now i've got a video here um i have",
    "start": "1511600",
    "end": "1518480"
  },
  {
    "text": "absolutely no idea how well this will execute cool",
    "start": "1518480",
    "end": "1524400"
  },
  {
    "text": "so what we're doing here is we're checking the ip address you can see on the right that the",
    "start": "1524400",
    "end": "1530880"
  },
  {
    "text": "ip address was 172.21.1.5 unfortunately the attacker can't access",
    "start": "1530880",
    "end": "1536880"
  },
  {
    "text": "that so this is the same situation that we've just described what the attacker can do however is",
    "start": "1536880",
    "end": "1542240"
  },
  {
    "text": "start enumerating function blocks on the plc so the plc is the same ipad address apart from the last architectures 101",
    "start": "1542240",
    "end": "1548799"
  },
  {
    "text": "so we start enumerating function block 100 this will go through bite by byte and read every byte in this data block",
    "start": "1548799",
    "end": "1557840"
  },
  {
    "text": "this is basically what we've described on the read process throughout to enumerate the function block so",
    "start": "1558480",
    "end": "1564559"
  },
  {
    "text": "as a little spoiler this is 323 bytes long and i i don't know why we went with this",
    "start": "1564559",
    "end": "1570480"
  },
  {
    "text": "one because i haven't really planned much to say here um",
    "start": "1570480",
    "end": "1575600"
  },
  {
    "text": "so we've basically enumerated every single byte in this data block and here we can see",
    "start": "1575919",
    "end": "1582640"
  },
  {
    "text": "that this then matches to modbus serial but we want to check the bits as well so these zeros denote that the offsets",
    "start": "1582640",
    "end": "1589039"
  },
  {
    "text": "at zero are all correct we've set up the sync from the server and then we'll set up",
    "start": "1589039",
    "end": "1594480"
  },
  {
    "text": "the sync on the client this could be automated but for the proof of concept we didn't",
    "start": "1594480",
    "end": "1600480"
  },
  {
    "text": "so now both are synced together on the client we can then execute",
    "start": "1600480",
    "end": "1607279"
  },
  {
    "text": "an attack send the command the command comes through",
    "start": "1607279",
    "end": "1613600"
  },
  {
    "text": "executes on the client",
    "start": "1613600",
    "end": "1616640"
  },
  {
    "text": "eventually and there we go",
    "start": "1619279",
    "end": "1624000"
  },
  {
    "text": "you can upload now if you want thank you thank you",
    "start": "1624320",
    "end": "1630960"
  },
  {
    "text": "okay great job rtu c2 you did it and for any star wars nerds that are getting angry i",
    "start": "1631520",
    "end": "1637279"
  },
  {
    "text": "know r2 isn't on this so it doesn't quite fit with the joke but it's you gotta make a pretty cool picture",
    "start": "1637279",
    "end": "1643679"
  },
  {
    "text": "okay so getting a little bit more serious what we've described here",
    "start": "1643679",
    "end": "1650240"
  },
  {
    "text": "are a bunch of stealthy techniques through attack techniques and commanding control so we wanted to verify these against",
    "start": "1650240",
    "end": "1658159"
  },
  {
    "text": "prevention and detection best practice security controls so what we mean here is prevention as",
    "start": "1658159",
    "end": "1663840"
  },
  {
    "text": "firewalls between remote and local network segments and detection uh",
    "start": "1663840",
    "end": "1669200"
  },
  {
    "text": "as network monitoring for potentially malicious or anomalous traffic so we've got nine use cases here on the right",
    "start": "1669200",
    "end": "1675840"
  },
  {
    "text": "so t1 and t2 are enumeration via read and write which uh sort of manipulation",
    "start": "1675840",
    "end": "1680880"
  },
  {
    "text": "by right sorry which are the the stealthy techniques we described before t3 and t4 are setting up the client in",
    "start": "1680880",
    "end": "1687840"
  },
  {
    "text": "the server for command and control t5 and t5s are the server sending an nmap command to the client and the",
    "start": "1687840",
    "end": "1694320"
  },
  {
    "text": "client then performing the nmap uh top 20 port scan within the fieldsite network t6 and t7 are the less stealthy",
    "start": "1694320",
    "end": "1702799"
  },
  {
    "text": "get block info and upload techniques and finally t8 is a stage material session",
    "start": "1702799",
    "end": "1709120"
  },
  {
    "text": "on the hmi just kind of as a control variable versus our novel c2",
    "start": "1709120",
    "end": "1714320"
  },
  {
    "text": "these were all executed as well from untrusted and trusted devices so that we can kind of like get a good idea for",
    "start": "1714320",
    "end": "1720880"
  },
  {
    "text": "compromising a device versus inserting a device on the network that is unknown and this was all done in our ics lab",
    "start": "1720880",
    "end": "1728240"
  },
  {
    "text": "so prevention was it largely failed for trusted devices which was kind of expected",
    "start": "1728240",
    "end": "1735760"
  },
  {
    "text": "for untrusted devices most cases we had it uh correctly prevented i'm not going to go",
    "start": "1735760",
    "end": "1742399"
  },
  {
    "text": "into any of the cases that didn't and this is difficult because trusted devices sending legitimate traffic such",
    "start": "1742399",
    "end": "1749120"
  },
  {
    "text": "as read and write requests are really difficult to isolate and block many industrial firewalls don't really",
    "start": "1749120",
    "end": "1754159"
  },
  {
    "text": "offer any granular traffic filtering so they only base things on things such as ip address port and maybe high level",
    "start": "1754159",
    "end": "1760320"
  },
  {
    "text": "protocols such as s7 in certain circumstances next generation firewalls do offer more",
    "start": "1760320",
    "end": "1766080"
  },
  {
    "text": "granular traffic filtering rules however these are more like rare commands like get block info upload although they do",
    "start": "1766080",
    "end": "1772720"
  },
  {
    "text": "allow you to block read write however this completely stops the functionality of the network in some circumstances",
    "start": "1772720",
    "end": "1779279"
  },
  {
    "text": "which is it's it's too heavy in approach too heavy-handed",
    "start": "1779279",
    "end": "1784640"
  },
  {
    "text": "so for the detection of the tax we use the ot network monitoring solution clarity ctd",
    "start": "1785039",
    "end": "1790720"
  },
  {
    "text": "uh what this does is it creates a baseline of traffic and it detects any deviations from there and then it also",
    "start": "1790720",
    "end": "1796240"
  },
  {
    "text": "alerts on known malicious traffic or previously unseen devices on the network",
    "start": "1796240",
    "end": "1802720"
  },
  {
    "text": "caution needs to be required here when using things such as sending commands over the over the command and",
    "start": "1802720",
    "end": "1809279"
  },
  {
    "text": "control because if the client does things such as map clarity will definitely pick that up because that's",
    "start": "1809279",
    "end": "1814399"
  },
  {
    "text": "obviously known malicious traffic on the network so our attack techniques based on read",
    "start": "1814399",
    "end": "1820000"
  },
  {
    "text": "and write commands untrusted devices were only uh generating events what they",
    "start": "1820000",
    "end": "1825039"
  },
  {
    "text": "said was baseline deviation not risky change as you can see at the table in the bottom the um the the the approach",
    "start": "1825039",
    "end": "1832320"
  },
  {
    "text": "proposed to attack techniques with the intended way of using them um they only generated events",
    "start": "1832320",
    "end": "1838559"
  },
  {
    "text": "we can acknowledge that this is then creating forensic evidence and they are kind of being detected but not really",
    "start": "1838559",
    "end": "1843840"
  },
  {
    "text": "detected as anything particularly malicious so finally for the detection and prevention section i wanted to come up",
    "start": "1843840",
    "end": "1850240"
  },
  {
    "text": "with some takeaways so the the prevention controls we tested are really meant to promote perimeter defense so",
    "start": "1850240",
    "end": "1856799"
  },
  {
    "text": "because our techniques are often post exploitation activities inside the perimeter already",
    "start": "1856799",
    "end": "1862960"
  },
  {
    "text": "it it's not really they're not really geared up for our techniques and it's also not really feasible to put a",
    "start": "1862960",
    "end": "1868240"
  },
  {
    "text": "firewall with the packet inspection in front of each plc to try and start looking at these in more detail",
    "start": "1868240",
    "end": "1873440"
  },
  {
    "text": "and in general even if you could block read and write to specific addresses it's going to require extensive configuration it's going to require a",
    "start": "1873440",
    "end": "1880000"
  },
  {
    "text": "lot of precision and any mistakes in that precision really could pose a risk to operational functionality",
    "start": "1880000",
    "end": "1886159"
  },
  {
    "text": "and then finally with detection the network monitoring tools do offer some opportunity for defense",
    "start": "1886159",
    "end": "1891360"
  },
  {
    "text": "uh it would require a very granular configuration to alert uh read write requests to new addresses within the",
    "start": "1891360",
    "end": "1898080"
  },
  {
    "text": "data blocks and this then does create a precedent for having too many false positives and",
    "start": "1898080",
    "end": "1903679"
  },
  {
    "text": "create alert investigation fatigue and that's enough for me so i'll hand you back over to marina thank you very",
    "start": "1903679",
    "end": "1909200"
  },
  {
    "text": "much thank you rick well so what we can conclude from",
    "start": "1909200",
    "end": "1915840"
  },
  {
    "text": "this talk so quick recap by exploiting memory allocation and addressing on the",
    "start": "1915840",
    "end": "1921600"
  },
  {
    "text": "modern modern plcs these days plc's we develop an approach to enumerate and",
    "start": "1921600",
    "end": "1926640"
  },
  {
    "text": "manipulate function blocks uh or basically control logic on the plc it's applicable to an arbitrary",
    "start": "1926640",
    "end": "1933039"
  },
  {
    "text": "industrial environment so you can take it and basically you don't need to know anything about your target facility and",
    "start": "1933039",
    "end": "1938480"
  },
  {
    "text": "you will be successful using so basically all of that is done by using stealth techniques",
    "start": "1938480",
    "end": "1944559"
  },
  {
    "text": "uh which are undetectable with because they only use this read and write commands fully automated exploit of medium to",
    "start": "1944559",
    "end": "1951919"
  },
  {
    "text": "high targeting precision and can be also used for other purposes for example for setting up c2 so when i read all of this",
    "start": "1951919",
    "end": "1958880"
  },
  {
    "text": "it sounds like wow so amazing so great so so exploit",
    "start": "1958880",
    "end": "1964399"
  },
  {
    "text": "but in reality while the impact is really significant the techniques which we use they're so",
    "start": "1964399",
    "end": "1970640"
  },
  {
    "text": "simple they're so so simple it's just like 25 30 years old in the i.t world",
    "start": "1970640",
    "end": "1976799"
  },
  {
    "text": "so obviously you know like the design of the modern plc is not matching the current you know",
    "start": "1976799",
    "end": "1983440"
  },
  {
    "text": "threat landscape and in general that this plc software and do not mix it with",
    "start": "1983440",
    "end": "1988559"
  },
  {
    "text": "firmware because currently research is mostly focusing on the firmware like kind of firmware vulnerabilities communication stacks but we are talking",
    "start": "1988559",
    "end": "1995360"
  },
  {
    "text": "here about that plc software which runs on the plc it's largely under research",
    "start": "1995360",
    "end": "2000559"
  },
  {
    "text": "threat attack surface the research which we presented here is not still let's say complete and there is so much",
    "start": "2000559",
    "end": "2006240"
  },
  {
    "text": "more to research and the only like kind of similar line of work which we exist right now is top",
    "start": "2006240",
    "end": "2013360"
  },
  {
    "text": "20 secure plc coding practices you can check it out so uh there is not many device like",
    "start": "2013360",
    "end": "2020399"
  },
  {
    "text": "level mitigations for this type of vulnerability so for example if you are an asset owner you of",
    "start": "2020399",
    "end": "2025919"
  },
  {
    "text": "course can start basically set all of your variables all 300 variables on every function block you can populate",
    "start": "2025919",
    "end": "2032640"
  },
  {
    "text": "and use memory with random data you can monitor and use my memory you can perform consistency checks on certain",
    "start": "2032640",
    "end": "2038799"
  },
  {
    "text": "critical variables to make sure that they are not manipulated but all of this above is adds significant",
    "start": "2038799",
    "end": "2044640"
  },
  {
    "text": "overhead to the asset owner or basically plc programming and maintenance personnel so it's obviously not scalable",
    "start": "2044640",
    "end": "2051118"
  },
  {
    "text": "so we really need uh go to the kind of this production needs to be on the like kind of vendor",
    "start": "2051119",
    "end": "2057760"
  },
  {
    "text": "centric so and clearly hopefully it is what's understood that we really need to start redesigning",
    "start": "2057760",
    "end": "2064158"
  },
  {
    "text": "uh plc software like or designs and even hardware and the point is that we first",
    "start": "2064159",
    "end": "2070878"
  },
  {
    "text": "need to understand what's going wrong and what is attack surface in the current plc so that we shall take that",
    "start": "2070879",
    "end": "2076720"
  },
  {
    "text": "knowledge and learnings and take it into the new designs and even like some mitigation opportunities exist on their",
    "start": "2076720",
    "end": "2083760"
  },
  {
    "text": "current plcs and even in the more modern like recent model of the plc but each of them only offers only partial solution",
    "start": "2083760",
    "end": "2090720"
  },
  {
    "text": "only in certain certain conditions or circumstances it's nothing like you can literally turn it on and you're",
    "start": "2090720",
    "end": "2096960"
  },
  {
    "text": "protected so you could say almost like we don't have mitigations at the moment",
    "start": "2096960",
    "end": "2102079"
  },
  {
    "text": "so you probably like some of you may be thinking like hey is there anything will be on github",
    "start": "2102079",
    "end": "2107359"
  },
  {
    "text": "no the problem is that this is really something what we don't want this code to let to land in the hands of the",
    "start": "2107359",
    "end": "2115520"
  },
  {
    "text": "people with unclear uh intentions and especially script kiddies who will start",
    "start": "2115520",
    "end": "2120560"
  },
  {
    "text": "tomorrow will go on sedan find all the plc start enumerate and manipulate so in general our approach is",
    "start": "2120560",
    "end": "2127040"
  },
  {
    "text": "reconstructable with medium effort so if you know plc's following this logic you should be able to create own scripts and",
    "start": "2127040",
    "end": "2133359"
  },
  {
    "text": "if you do so please keep it for your uh consultancy work for maybe if you want to basically if you're an engineer",
    "start": "2133359",
    "end": "2140320"
  },
  {
    "text": "and your asset owner you can basically uh check your exposure uh to this type of",
    "start": "2140320",
    "end": "2146079"
  },
  {
    "text": "thread and the last note with which we wanted basically to leave you here and maybe this is also referenced into the",
    "start": "2146079",
    "end": "2152320"
  },
  {
    "text": "uh our panel which we had yesterday on the vulnerability disclosure like at the moment asset owner seems to be blamed if",
    "start": "2152320",
    "end": "2159280"
  },
  {
    "text": "you have an incident it's just like you did not secure your asset but you know like uh how can you secure",
    "start": "2159280",
    "end": "2165599"
  },
  {
    "text": "something what nah if the ass if the threat let's say attack surface is not even clearly known",
    "start": "2165599",
    "end": "2172960"
  },
  {
    "text": "or understood so this is representing a completely novel and large attack surface how can you protect about it",
    "start": "2172960",
    "end": "2178800"
  },
  {
    "text": "from it if you don't even know about that so i think vendors really need to start also carry certain types of",
    "start": "2178800",
    "end": "2184320"
  },
  {
    "text": "vulnera um liabilities for that and that was it from us thank you so much",
    "start": "2184320",
    "end": "2191480"
  },
  {
    "text": "[Music]",
    "start": "2196790",
    "end": "2199909"
  },
  {
    "text": "you",
    "start": "2202960",
    "end": "2205040"
  }
]