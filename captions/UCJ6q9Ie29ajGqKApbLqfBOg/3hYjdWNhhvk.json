[
  {
    "text": "good morning black hat uh welcome to Defender Pretender when Windows Defender updates become a security risk uh before",
    "start": "2520",
    "end": "10719"
  },
  {
    "text": "we begin I would like to invite you to join the speakers in the wrap-up room in Mandalay B Mandalay b as in bravo uh",
    "start": "10719",
    "end": "18840"
  },
  {
    "text": "following the session for continued discussions um and of course we thank",
    "start": "18840",
    "end": "24199"
  },
  {
    "text": "you for putting your phones on silence uh now it's my pleasure to Welcome to the stage Omar AAS and to",
    "start": "24199",
    "end": "34520"
  },
  {
    "text": "Bar good morning everybody and welcome to our talk I hope it will be super",
    "start": "39200",
    "end": "44480"
  },
  {
    "text": "interesting as we think it will be so we'll present ourselves first my name is",
    "start": "44480",
    "end": "50399"
  },
  {
    "text": "Tom bar and I'm the VP of security research at safebridge and actually this",
    "start": "50399",
    "end": "55640"
  },
  {
    "text": "is our 10th talk at black at USA I have 20 years of experience I presented at",
    "start": "55640",
    "end": "62320"
  },
  {
    "text": "many conferences around the world and this year I was qualified to speak three different talks at blacket and",
    "start": "62320",
    "end": "70320"
  },
  {
    "text": "defon hello my name is Omas I'm a security researcher at",
    "start": "70560",
    "end": "77080"
  },
  {
    "text": "safe my name is Omas I'm a security researcher at safebridge I have over six",
    "start": "77080",
    "end": "82880"
  },
  {
    "text": "years of experience in cyber security field especially in low level and",
    "start": "82880",
    "end": "88640"
  },
  {
    "text": "vulnerability research and I'm also a technology and science Enthusiast back to",
    "start": "88640",
    "end": "96398"
  },
  {
    "text": "you okay let's start we will introduce our research motivation and goal then we",
    "start": "96759",
    "end": "103600"
  },
  {
    "text": "will describe in details Defender update process and the vulnerability we",
    "start": "103600",
    "end": "109360"
  },
  {
    "text": "discovered we will demo different super interesting attack vectors and we will",
    "start": "109360",
    "end": "114840"
  },
  {
    "text": "finish our talk with important takeaways before leaving time for Q&A let's begin",
    "start": "114840",
    "end": "121759"
  },
  {
    "text": "so in this session we are going to walk you all through the process of how we",
    "start": "121759",
    "end": "127159"
  },
  {
    "text": "turn Defender to Defender Pretender and our motivation originated",
    "start": "127159",
    "end": "133319"
  },
  {
    "text": "from the flame marware used by aate sponsered actor and exploited the",
    "start": "133319",
    "end": "139120"
  },
  {
    "text": "Windows update process using a sophisticated men in the- Middle attack",
    "start": "139120",
    "end": "144760"
  },
  {
    "text": "flame was able to hijack the Windows update mechanism by posing as a",
    "start": "144760",
    "end": "150480"
  },
  {
    "text": "legitimate Microsoft update server allowing it to deliver malicious updates and maintain persistence on the target",
    "start": "150480",
    "end": "159080"
  },
  {
    "text": "system our goal was to achieve similar capabilities but running without admin",
    "start": "159080",
    "end": "166440"
  },
  {
    "text": "privileges without possessing a for certificate and with no prayer",
    "start": "166440",
    "end": "171519"
  },
  {
    "text": "requirements of men in the middle and still achieve full takeover on Defender walk",
    "start": "171519",
    "end": "178760"
  },
  {
    "text": "flow let's start to analyze Defender update",
    "start": "178760",
    "end": "184480"
  },
  {
    "text": "process and understand what happens locally during an update so Defender check with the",
    "start": "184480",
    "end": "191599"
  },
  {
    "text": "Microsoft update Center for new updates we found out that the updates are",
    "start": "191599",
    "end": "198239"
  },
  {
    "text": "returned as a single executable file the file full name is pretty long Microsoft",
    "start": "198239",
    "end": "204680"
  },
  {
    "text": "protection anti marware front end and we'll refer it to as Mom from now",
    "start": "204680",
    "end": "211360"
  },
  {
    "text": "on we download this ampam file analyze it and found it has a cab resource then",
    "start": "211360",
    "end": "218799"
  },
  {
    "text": "we manually extracted the cab resource and got six files two executables MP",
    "start": "218799",
    "end": "224840"
  },
  {
    "text": "engine and MP6 tub and four files with unfamiliar vdm",
    "start": "224840",
    "end": "231879"
  },
  {
    "text": "extension when we try to execute the mom file we observed that it executed the",
    "start": "231879",
    "end": "238000"
  },
  {
    "text": "MP6 dub as a CH file process using the mar common line after this execution we",
    "start": "238000",
    "end": "245239"
  },
  {
    "text": "saw the defender was updated so it seems like the Stop's role is to initiate the",
    "start": "245239",
    "end": "250720"
  },
  {
    "text": "update process the vdm files are loaded to Defenders main process as you can see",
    "start": "250720",
    "end": "257199"
  },
  {
    "text": "here and MP engine dll was also used by this process this dll exports",
    "start": "257199",
    "end": "264560"
  },
  {
    "text": "Defenders core functionality let's investigate a little bit more about this vdm files so the vdm",
    "start": "264560",
    "end": "272520"
  },
  {
    "text": "files are actually portable executable files however applications however they",
    "start": "272520",
    "end": "278360"
  },
  {
    "text": "cannot be executed as they have no coded logic at all so we assume that they are",
    "start": "278360",
    "end": "283840"
  },
  {
    "text": "special data files that contains the detection signatures furthermore we",
    "start": "283840",
    "end": "289560"
  },
  {
    "text": "observe that the two of them are labeled with the keyword base and the other two",
    "start": "289560",
    "end": "294759"
  },
  {
    "text": "are labeled with the keyword Delta with the main difference being their sizes",
    "start": "294759",
    "end": "300199"
  },
  {
    "text": "the base file are significantly larger than the Delta files so we speculate",
    "start": "300199",
    "end": "306240"
  },
  {
    "text": "that this is due to incremental updating for efficiency reason because you",
    "start": "306240",
    "end": "311479"
  },
  {
    "text": "probably don't want to send the entire database each time you need to update a",
    "start": "311479",
    "end": "318240"
  },
  {
    "text": "small update right and the base file has a major version of 391 and zero minor",
    "start": "318240",
    "end": "325720"
  },
  {
    "text": "version and the Delta file has the same major version and 3508 at that time as",
    "start": "325720",
    "end": "332319"
  },
  {
    "text": "the minor version and I'm telling you that because the Delta version represent the current version of The Defender",
    "start": "332319",
    "end": "339240"
  },
  {
    "text": "security intelligence so this may indicate that the Delta fi are related",
    "start": "339240",
    "end": "344479"
  },
  {
    "text": "to the signature data a quick check reveals that all six",
    "start": "344479",
    "end": "351400"
  },
  {
    "text": "files are digitally signed by Microsoft which probably indicates that the update",
    "start": "351400",
    "end": "357720"
  },
  {
    "text": "process was designed against tempering however let's continue to explore further before reaching a definitive",
    "start": "357720",
    "end": "365680"
  },
  {
    "text": "answer to this speculation to summarize the update process so far the empal file is fetched",
    "start": "365680",
    "end": "372639"
  },
  {
    "text": "from the internet and upon execution it triggers an update the following three",
    "start": "372639",
    "end": "378120"
  },
  {
    "text": "step occur mam extract the vdm file MP engine DL and MP6 tab from itself into",
    "start": "378120",
    "end": "385919"
  },
  {
    "text": "the update payload folder located at the temporary directory mom then execute the six tab in order to",
    "start": "385919",
    "end": "393840"
  },
  {
    "text": "perform the update the six tab takes the VM files and MP engine DL and use them",
    "start": "393840",
    "end": "401120"
  },
  {
    "text": "to update Windows Defender so easy right let's continue now we've gained high level",
    "start": "401120",
    "end": "407720"
  },
  {
    "text": "knowledge about the update process and we can start to play around with the",
    "start": "407720",
    "end": "413520"
  },
  {
    "text": "files involved if we will be able to modify MP engine to our own on dll it will be a",
    "start": "413520",
    "end": "421120"
  },
  {
    "text": "game over for Defender resulting in local privilege escalation right so let's try it we modified a valid update",
    "start": "421120",
    "end": "430039"
  },
  {
    "text": "payload that we have downloaded from the internet and replaced only the original",
    "start": "430039",
    "end": "435759"
  },
  {
    "text": "MP engine as you can see there with our own fake dll even though the DL was",
    "start": "435759",
    "end": "441680"
  },
  {
    "text": "digitally signed by Microsoft then we executed the stab with the appropriate common line and",
    "start": "441680",
    "end": "449919"
  },
  {
    "text": "of course we failed during a kernel debugging we got this exception that tells us that the dll is not signed and",
    "start": "449919",
    "end": "457960"
  },
  {
    "text": "this protection is implemented since the defender main process is a protected process a PPL process which cannot load",
    "start": "457960",
    "end": "465000"
  },
  {
    "text": "unsign DLS so we thought to ourself is this the end of our research lead and we",
    "start": "465000",
    "end": "472440"
  },
  {
    "text": "decided not to give up and focus on the vdm files what will happen if we'll",
    "start": "472440",
    "end": "477479"
  },
  {
    "text": "update Defender using and modifier older vdm file we decided to modify only the",
    "start": "477479",
    "end": "484479"
  },
  {
    "text": "file version making Defender believe it's a newer version but without",
    "start": "484479",
    "end": "489960"
  },
  {
    "text": "modifying any data without modifying the data itself this modification will turn",
    "start": "489960",
    "end": "496360"
  },
  {
    "text": "the VM file to be unsized because the file the file version are embedded in the file data but we decided to give it",
    "start": "496360",
    "end": "503639"
  },
  {
    "text": "a shot anyway for our surprise the update",
    "start": "503639",
    "end": "508800"
  },
  {
    "text": "attempt succeeded we actually updated an older version pretended to be a newer",
    "start": "508800",
    "end": "514640"
  },
  {
    "text": "version and most importantly using unsigned files with a low privilege user",
    "start": "514640",
    "end": "520839"
  },
  {
    "text": "so this was the first clue that something is fishy here but when we tried to modify",
    "start": "520839",
    "end": "528080"
  },
  {
    "text": "additional random bite in this vdm data itself and not just the file version and",
    "start": "528080",
    "end": "533560"
  },
  {
    "text": "execute a second update we got an error so we understood it won't be that simple",
    "start": "533560",
    "end": "539200"
  },
  {
    "text": "simple and we have to learn more about the update",
    "start": "539200",
    "end": "544839"
  },
  {
    "text": "process let's summarize what we accomplished so far we understood in high level Windows Defender update",
    "start": "544839",
    "end": "551360"
  },
  {
    "text": "process and have become familiar with the involved files we attempted to",
    "start": "551360",
    "end": "557120"
  },
  {
    "text": "modify MP engine to use our own fake dll but we're unsuccessful in doing so",
    "start": "557120",
    "end": "564000"
  },
  {
    "text": "however we did succeed in modifying an old payload to appear as a new pay load",
    "start": "564000",
    "end": "569760"
  },
  {
    "text": "by modifying the vdm files but finally got an error when we update using vdm",
    "start": "569760",
    "end": "575680"
  },
  {
    "text": "files with modified random data we left with the question how does",
    "start": "575680",
    "end": "583160"
  },
  {
    "text": "a low privilege user can replace the files managed by Defender protected",
    "start": "583160",
    "end": "588680"
  },
  {
    "text": "process that run in high privileges we began to analyze",
    "start": "588680",
    "end": "594040"
  },
  {
    "text": "MP6 after a bit of reversing we understood that MP6 communicat with msmp",
    "start": "594040",
    "end": "600519"
  },
  {
    "text": "engine which is the main process of Defender via RPC remote procedure calls",
    "start": "600519",
    "end": "606440"
  },
  {
    "text": "but at that point in time we were unable to find the specific RPC interface which",
    "start": "606440",
    "end": "612399"
  },
  {
    "text": "was used and the challenge was even more difficult since RPC tools that we all",
    "start": "612399",
    "end": "618240"
  },
  {
    "text": "used like RPC view could not display the RPC data due to the involv protected",
    "start": "618240",
    "end": "624160"
  },
  {
    "text": "process so we did the manual reverse engineering and found this RPC uid which",
    "start": "624160",
    "end": "630040"
  },
  {
    "text": "belongs to MP svcd and also we found out that the function number parameter was 42",
    "start": "630040",
    "end": "636720"
  },
  {
    "text": "corresponding to a function named server MP update engine signature function",
    "start": "636720",
    "end": "642600"
  },
  {
    "text": "which by its name indeed seems like the function we were looking for after the RPC is done the execution",
    "start": "642600",
    "end": "650560"
  },
  {
    "text": "will continue from Defender main process on the right and will reach init engine",
    "start": "650560",
    "end": "656399"
  },
  {
    "text": "context function which will start the update process by calling the r signal function in our MP engine",
    "start": "656399",
    "end": "664200"
  },
  {
    "text": "DL now we are ready for damic kernel debugging to understand the rest of the",
    "start": "664200",
    "end": "669920"
  },
  {
    "text": "execution flow as you can see the execution flow",
    "start": "669920",
    "end": "676600"
  },
  {
    "text": "is pretty long we will skip to the interesting part in low database",
    "start": "676600",
    "end": "681800"
  },
  {
    "text": "function which is called to each of the four vdm files so now we know for sure",
    "start": "681800",
    "end": "688800"
  },
  {
    "text": "that the vdm is indeed contains the update database because it's called Low database",
    "start": "688800",
    "end": "694279"
  },
  {
    "text": "right let's analyze the database format so we will be able to modify the data in",
    "start": "694279",
    "end": "700360"
  },
  {
    "text": "much smarter way than we did so far so as we mentioned the vdm file is a",
    "start": "700360",
    "end": "707160"
  },
  {
    "text": "Windows portable executable files with no code logic it includes a resource",
    "start": "707160",
    "end": "713160"
  },
  {
    "text": "section and the resource section contains compressed data that start with rmd magic",
    "start": "713160",
    "end": "721759"
  },
  {
    "text": "bytes the signature in both the base file and the Delta file are compressed",
    "start": "722040",
    "end": "727600"
  },
  {
    "text": "with zil but the zil magic bites are absent by simply adding these two magic",
    "start": "727600",
    "end": "734120"
  },
  {
    "text": "bites at the bottom and running this one line command it can be decompressed and",
    "start": "734120",
    "end": "739639"
  },
  {
    "text": "guess what we were very surprised to see that the signatures are not",
    "start": "739639",
    "end": "744920"
  },
  {
    "text": "encrypted in a bit brief look over the base file we probably could see where a",
    "start": "744920",
    "end": "750880"
  },
  {
    "text": "signature begin and ends and probably the actual unique strings defend of",
    "start": "750880",
    "end": "756880"
  },
  {
    "text": "Searchers in order to detect in this example the cony run",
    "start": "756880",
    "end": "762720"
  },
  {
    "text": "somewhere the Delta file format appears to be a bit more complex and we have",
    "start": "763880",
    "end": "769320"
  },
  {
    "text": "decided to prioritize it to later time so now we are going to focus on the",
    "start": "769320",
    "end": "776079"
  },
  {
    "text": "base files the base file as we assume contains most of the signature logic and",
    "start": "776079",
    "end": "782360"
  },
  {
    "text": "it seems easier to understand as we saw the slide before so let's see what we",
    "start": "782360",
    "end": "789120"
  },
  {
    "text": "discovered each signature has a 4 byte signature header which contains the signature type and",
    "start": "789120",
    "end": "796480"
  },
  {
    "text": "size the type is one byte long and the size is three by long the signature data",
    "start": "796480",
    "end": "803800"
  },
  {
    "text": "begins right after the signature ER so a simple struct instead of reversing each",
    "start": "803800",
    "end": "810639"
  },
  {
    "text": "signature type we search on Google for some relevant information and found this",
    "start": "810639",
    "end": "816079"
  },
  {
    "text": "comprehensive list of signature types so you can see a lot of them we'll use them",
    "start": "816079",
    "end": "822639"
  },
  {
    "text": "later each threat start with a signature type 5 C so you can see at the top a",
    "start": "823519",
    "end": "830199"
  },
  {
    "text": "threat is a collection of signatures this these signatures are simply unique strings or bite sequences",
    "start": "830199",
    "end": "837880"
  },
  {
    "text": "which belongs to the marware family and you can see several strings from Cony the collection of the signatures",
    "start": "837880",
    "end": "844800"
  },
  {
    "text": "always end up with threat and signature a 5D type as you can see at the",
    "start": "844800",
    "end": "851920"
  },
  {
    "text": "bottom the base file is actually a sequence of threat when one threat ends the next",
    "start": "851920",
    "end": "858959"
  },
  {
    "text": "threat begins and so on using this knowledge of this signature format we",
    "start": "858959",
    "end": "864839"
  },
  {
    "text": "were able to extract more than two and a half million signature from the base",
    "start": "864839",
    "end": "870680"
  },
  {
    "text": "file we figure out most of the member of this signature for example the threat",
    "start": "870680",
    "end": "876199"
  },
  {
    "text": "name its category and severity of the threat now we can conduct an experiment",
    "start": "876199",
    "end": "882639"
  },
  {
    "text": "in in order to verify if we can modify it in a more smarter way than we did",
    "start": "882639",
    "end": "888880"
  },
  {
    "text": "before so we extracted the string from the vdm file and copy them uh to a",
    "start": "888880",
    "end": "895600"
  },
  {
    "text": "Visual Studio and compile them but as you can see we only have the strings so",
    "start": "895600",
    "end": "901440"
  },
  {
    "text": "the main function at line 16 only contain a return so it's an empty function and after we compile it we copy",
    "start": "901440",
    "end": "909079"
  },
  {
    "text": "it to a VM with Defender and as we can see Defender immediately triggered and",
    "start": "909079",
    "end": "916680"
  },
  {
    "text": "even though there is no malicious code at all at our executable and as expected",
    "start": "916680",
    "end": "921720"
  },
  {
    "text": "the threat alert name is the name of the threat we investigated Cony so now we modify just the threat",
    "start": "921720",
    "end": "929680"
  },
  {
    "text": "name associated with the signature from Cony to something else and recompressed",
    "start": "929680",
    "end": "934839"
  },
  {
    "text": "the vdm file data and Tred to update Defender again using this unsigned",
    "start": "934839",
    "end": "940519"
  },
  {
    "text": "modified version but unfortunately the attempt was unsuccessful as well and",
    "start": "940519",
    "end": "946480"
  },
  {
    "text": "resulted in The Unexplained error as you can see on the bottom we assume that",
    "start": "946480",
    "end": "951560"
  },
  {
    "text": "this error is due to validation mechanism and Omer will speak about Defender",
    "start": "951560",
    "end": "957600"
  },
  {
    "text": "validation thank you thank you",
    "start": "957600",
    "end": "962680"
  },
  {
    "text": "so we went back to the drawing board and reverse engineer the update process with",
    "start": "962680",
    "end": "969160"
  },
  {
    "text": "the goal of identifying the point where the update failed and why it",
    "start": "969160",
    "end": "976040"
  },
  {
    "text": "failed so a quick reminder for each vdm file low database is called and then",
    "start": "976040",
    "end": "983600"
  },
  {
    "text": "checks the validity of the file and then calls to consume input compress",
    "start": "983600",
    "end": "990240"
  },
  {
    "text": "function consume input compress function is a huge function that perform a lot of",
    "start": "990240",
    "end": "996800"
  },
  {
    "text": "operations on the vdm file also we suspected the function to be the",
    "start": "996800",
    "end": "1003040"
  },
  {
    "text": "function that return the eral code we saw in the logs so we focus deeply on the internals",
    "start": "1003040",
    "end": "1010759"
  },
  {
    "text": "of these two function and specifically on consume input compress",
    "start": "1010759",
    "end": "1016959"
  },
  {
    "text": "function we did it by dynamically debugging the update execution so let's",
    "start": "1016959",
    "end": "1023240"
  },
  {
    "text": "see what we got from debugging the debugging led us to figure out two important structures that",
    "start": "1023240",
    "end": "1030520"
  },
  {
    "text": "contained in the vdm file the first one is the rmd ex Setter which appears in",
    "start": "1030520",
    "end": "1037079"
  },
  {
    "text": "the beginning of every vdm resource data one of the important members of the",
    "start": "1037079",
    "end": "1044160"
  },
  {
    "text": "rmd ex Setter is the data offset which points to a second header called zil",
    "start": "1044160",
    "end": "1052120"
  },
  {
    "text": "Data header which we can see marked in",
    "start": "1052120",
    "end": "1057200"
  },
  {
    "text": "blue the zil betterer actually contains the zil compressed data of the",
    "start": "1057200",
    "end": "1063679"
  },
  {
    "text": "vdm and also consist of two vs the second V suspected to be the CRC value",
    "start": "1063679",
    "end": "1072160"
  },
  {
    "text": "of the compressed data so we try to calculate the CRC",
    "start": "1072160",
    "end": "1077360"
  },
  {
    "text": "value of the compressed data but we didn't get the expected value so maybe",
    "start": "1077360",
    "end": "1083559"
  },
  {
    "text": "this is not a CRC we try to locate the point where",
    "start": "1083559",
    "end": "1088679"
  },
  {
    "text": "this value is accessed and discovered it compared to a variable calculated using",
    "start": "1088679",
    "end": "1096360"
  },
  {
    "text": "an algorithm similar to a CRC calculations so we searched on Google",
    "start": "1096360",
    "end": "1103840"
  },
  {
    "text": "and we found out that this is actually a specific Cal Alm that called Jam CRC",
    "start": "1103840",
    "end": "1112000"
  },
  {
    "text": "which is calculated by one minus the CRC",
    "start": "1112000",
    "end": "1117360"
  },
  {
    "text": "value so we were we were confident that we could modify the base vdm and fix the",
    "start": "1117400",
    "end": "1125120"
  },
  {
    "text": "expected CC value that appears in the ERS and by doing so the update would be",
    "start": "1125120",
    "end": "1131320"
  },
  {
    "text": "validated successfully and we would be able to take down",
    "start": "1131320",
    "end": "1137120"
  },
  {
    "text": "Defender but but the update was unsuccessful even though we fixed the",
    "start": "1137120",
    "end": "1143039"
  },
  {
    "text": "CRC of the compressed data likely there are additional",
    "start": "1143039",
    "end": "1148400"
  },
  {
    "text": "validation checks where do where do this validation",
    "start": "1148400",
    "end": "1153840"
  },
  {
    "text": "occurs and what do they validate so let's find them",
    "start": "1153840",
    "end": "1159120"
  },
  {
    "text": "out the modification was simple we just open up the base F and try to modify the",
    "start": "1159120",
    "end": "1166320"
  },
  {
    "text": "signatures after the modification we wrapped up the base file and tried to",
    "start": "1166320",
    "end": "1172039"
  },
  {
    "text": "update to do an update attempt but it turned out to be a quite",
    "start": "1172039",
    "end": "1177760"
  },
  {
    "text": "more complicated than we thought we completely ignored the Delta",
    "start": "1177760",
    "end": "1183559"
  },
  {
    "text": "file and we assume that the error we got related to the relationship between the",
    "start": "1183559",
    "end": "1189440"
  },
  {
    "text": "base file and the Delta file there are two pairs of vdms the",
    "start": "1189440",
    "end": "1196480"
  },
  {
    "text": "first pair contains the antivirus definition of Defender and the second pair contains",
    "start": "1196480",
    "end": "1203400"
  },
  {
    "text": "the spyware definitions each of these pairs is identical in terms of the format of the",
    "start": "1203400",
    "end": "1211120"
  },
  {
    "text": "signatures and the file so all the findings and conclusion we will show now",
    "start": "1211120",
    "end": "1218600"
  },
  {
    "text": "apply to each of these vdms okay as we mentioned earlier we",
    "start": "1218600",
    "end": "1226400"
  },
  {
    "text": "ignore the Delta but now it's time to focus on the purpose of the Delta",
    "start": "1226400",
    "end": "1232280"
  },
  {
    "text": "file during an update both the base and the Delta files",
    "start": "1232280",
    "end": "1237960"
  },
  {
    "text": "are involved the merge takes the base file and the Delta simply defines the changes",
    "start": "1237960",
    "end": "1245799"
  },
  {
    "text": "to be made to this base file the resulting output will represent",
    "start": "1245799",
    "end": "1252280"
  },
  {
    "text": "the update version from the Delta this update process is referred to as",
    "start": "1252280",
    "end": "1259280"
  },
  {
    "text": "incremental to modify the base signatures we need to supply a Delta",
    "start": "1259280",
    "end": "1264360"
  },
  {
    "text": "file that precisely precisely patches the base with the intended intended",
    "start": "1264360",
    "end": "1272200"
  },
  {
    "text": "changes but to do that we need to understand the entire merge process",
    "start": "1272200",
    "end": "1278520"
  },
  {
    "text": "internal and identify any other validation we encountered with so now we",
    "start": "1278520",
    "end": "1286720"
  },
  {
    "text": "will delve into the merge process we we've talked about the vdm",
    "start": "1286720",
    "end": "1294360"
  },
  {
    "text": "file format specifically the base file format which contains threats and their",
    "start": "1294360",
    "end": "1299440"
  },
  {
    "text": "signatures now let's look into the Delta format and how it combines with the base",
    "start": "1299440",
    "end": "1305159"
  },
  {
    "text": "file to create a new file with the new signatures so we went back to the",
    "start": "1305159",
    "end": "1311400"
  },
  {
    "text": "decompressed Delta file and we figured out that the Delta is a signature based",
    "start": "1311400",
    "end": "1317880"
  },
  {
    "text": "for file two we saw that the Delta always contains two",
    "start": "1317880",
    "end": "1324559"
  },
  {
    "text": "signatures the second signature is blob signature type and we ignore the blob",
    "start": "1324600",
    "end": "1330200"
  },
  {
    "text": "wre info signature as we assume all the essential data contained in the blob",
    "start": "1330200",
    "end": "1336840"
  },
  {
    "text": "signature so right after the signature header we have two number which we were",
    "start": "1336840",
    "end": "1342080"
  },
  {
    "text": "not sure about their purpose so we will call them unknown for now we will come",
    "start": "1342080",
    "end": "1347520"
  },
  {
    "text": "back to the later on so keep in mind the rest of the data right after",
    "start": "1347520",
    "end": "1353279"
  },
  {
    "text": "these numbers is actually the actions which Define the actions done by the",
    "start": "1353279",
    "end": "1358679"
  },
  {
    "text": "merge algorithm how do they Define the actions now we will answer this",
    "start": "1358679",
    "end": "1365919"
  },
  {
    "text": "question we spotted the point where Defender pars the actions this blog of",
    "start": "1365919",
    "end": "1372400"
  },
  {
    "text": "cod shows where actually the action part start by read by reading a d word from",
    "start": "1372400",
    "end": "1378400"
  },
  {
    "text": "the action stream and then check the MSB we reverse all the merge process and",
    "start": "1378400",
    "end": "1384279"
  },
  {
    "text": "figure out how the merge Works let's delve into the internals so we identified two action",
    "start": "1384279",
    "end": "1391919"
  },
  {
    "text": "types copy from Delta and copy from Bas copy from Delta used to copy size bites",
    "start": "1391919",
    "end": "1398480"
  },
  {
    "text": "from the Delta into the merge and copy from base used to copy size bites from",
    "start": "1398480",
    "end": "1404559"
  },
  {
    "text": "an offset within the Bas file into the merge file so let's exactly see the",
    "start": "1404559",
    "end": "1412080"
  },
  {
    "text": "format of each of these actions to parse the action we first need to read two bytes representing the",
    "start": "1412080",
    "end": "1419360"
  },
  {
    "text": "action header the first bit within the action header indicates the action",
    "start": "1419360",
    "end": "1424960"
  },
  {
    "text": "type zero for copy from Delta and one for a copy from base",
    "start": "1424960",
    "end": "1430600"
  },
  {
    "text": "section the rest of the action header is dependent on the action type so first",
    "start": "1430600",
    "end": "1436720"
  },
  {
    "text": "let's take a look on copy from Delta action so here we have an action example",
    "start": "1436720",
    "end": "1443400"
  },
  {
    "text": "and the first thing to do is to read the first two bytes and check the MSB to",
    "start": "1443400",
    "end": "1448840"
  },
  {
    "text": "identify which type of action is it the MSB here is zero means this action is",
    "start": "1448840",
    "end": "1456000"
  },
  {
    "text": "copy from Delta then it means that the next 15 bits represents the size",
    "start": "1456000",
    "end": "1464000"
  },
  {
    "text": "variable which tells us how many bytes to read the size variables is set to one",
    "start": "1464000",
    "end": "1471000"
  },
  {
    "text": "so we need to to read one bite right after the action Eder so in this example",
    "start": "1471000",
    "end": "1477440"
  },
  {
    "text": "we will read 5C and place it in into the new merge",
    "start": "1477440",
    "end": "1483159"
  },
  {
    "text": "file now that we understand how to parse copy from Delta action let's move on to",
    "start": "1483159",
    "end": "1488399"
  },
  {
    "text": "copy from base action so when we look at copy from base action we can see that",
    "start": "1488399",
    "end": "1493600"
  },
  {
    "text": "the MSB is on but in this case after verse engineer of consume input compress function we",
    "start": "1493600",
    "end": "1501080"
  },
  {
    "text": "found out that in this case the size variable calculated in the following way",
    "start": "1501080",
    "end": "1507039"
  },
  {
    "text": "firstly take the two bytes and turn off the MSB by end bitwise bitwise with 7 F",
    "start": "1507039",
    "end": "1515120"
  },
  {
    "text": "FF then we add six which results the size variable we now know how many btes",
    "start": "1515120",
    "end": "1522200"
  },
  {
    "text": "to read but the question is where we will read them from so copy from base action type",
    "start": "1522200",
    "end": "1530640"
  },
  {
    "text": "actually consists also the offset the next dword right after the",
    "start": "1530640",
    "end": "1536360"
  },
  {
    "text": "action header indicates the offset within the base file we should read the bytes",
    "start": "1536360",
    "end": "1542320"
  },
  {
    "text": "from so we in this example the size is equal to 8,055 bytes after the calculation we saw",
    "start": "1542320",
    "end": "1550120"
  },
  {
    "text": "and we should read them from the offset one of the base file and eventually",
    "start": "1550120",
    "end": "1556840"
  },
  {
    "text": "place them into to the merge file so to summarize the Delta file",
    "start": "1556840",
    "end": "1562720"
  },
  {
    "text": "contains compressed data and by decompressing this data we can extract The Blob signature The Blob contains the",
    "start": "1562720",
    "end": "1570440"
  },
  {
    "text": "action of the merge and the actions tells how to build the new updated file",
    "start": "1570440",
    "end": "1577039"
  },
  {
    "text": "depending on the current version of the base file and all this occurs in",
    "start": "1577039",
    "end": "1583039"
  },
  {
    "text": "memory so following our knowledge we developed a script that do the merge",
    "start": "1583039",
    "end": "1588919"
  },
  {
    "text": "between the base file and the Delta file we run our Cod and got a merge stream",
    "start": "1588919",
    "end": "1595360"
  },
  {
    "text": "that actually seems like base with signatures but with some",
    "start": "1595360",
    "end": "1601720"
  },
  {
    "text": "modifications here we can see a diff between base signature to a merge",
    "start": "1601720",
    "end": "1607240"
  },
  {
    "text": "signatures the bites that marked in yellow are the modified bites and the size of the data got bigger probably the",
    "start": "1607240",
    "end": "1615159"
  },
  {
    "text": "merge process added some new signatures and here things are starting to reveal a",
    "start": "1615159",
    "end": "1621279"
  },
  {
    "text": "clear image of what happening as we said before we will talk about the unnown",
    "start": "1621279",
    "end": "1626960"
  },
  {
    "text": "numbers we mentioned before we started to investigate the merge properties like the size of the",
    "start": "1626960",
    "end": "1633880"
  },
  {
    "text": "merge and the CRC of the data and we looked up for correlation to the Unown",
    "start": "1633880",
    "end": "1640480"
  },
  {
    "text": "numbers and a eure we got it the first number represents the size of the merge",
    "start": "1640480",
    "end": "1648440"
  },
  {
    "text": "and the second number is actually the CRC of the merge data these two numbers",
    "start": "1648440",
    "end": "1654480"
  },
  {
    "text": "are the expected values that Defenders Compares with the numbers are actually",
    "start": "1654480",
    "end": "1661240"
  },
  {
    "text": "one more layer of validations so I want to recap all the",
    "start": "1661240",
    "end": "1667080"
  },
  {
    "text": "three validations we discovered the first validation simply check if the zil",
    "start": "1667080",
    "end": "1672600"
  },
  {
    "text": "compressed data isn't change how does Defender check this by comparing the",
    "start": "1672600",
    "end": "1678640"
  },
  {
    "text": "expected CRC value within this zil data to the calculated CRC on the zip",
    "start": "1678640",
    "end": "1685200"
  },
  {
    "text": "compress data the next validation validations are",
    "start": "1685200",
    "end": "1690240"
  },
  {
    "text": "the ones we just mentioned merge size validation ensures",
    "start": "1690240",
    "end": "1695799"
  },
  {
    "text": "the size of the merge and merge CRC ensures the validates the CRC of the",
    "start": "1695799",
    "end": "1701720"
  },
  {
    "text": "data this checks confirms the success of the merge algorithm",
    "start": "1701720",
    "end": "1708440"
  },
  {
    "text": "so we wondered if now we have all the knowledge we need in order to fake an",
    "start": "1708440",
    "end": "1715200"
  },
  {
    "text": "update we try to change the Delta actions in such a way that the merge",
    "start": "1715200",
    "end": "1720320"
  },
  {
    "text": "will result with a difference and it worked we managed to",
    "start": "1720320",
    "end": "1725679"
  },
  {
    "text": "update Defender with a fake unsign database using unprivileged",
    "start": "1725679",
    "end": "1733120"
  },
  {
    "text": "user so let's see what we can do with this capability we will explain three",
    "start": "1733120",
    "end": "1739000"
  },
  {
    "text": "attack vectors okay we have developed a fully automatic to Tool called WD Pretender",
    "start": "1739000",
    "end": "1747840"
  },
  {
    "text": "which stands for Windows Defender Pretender this tool supports all the",
    "start": "1747840",
    "end": "1753120"
  },
  {
    "text": "attack vectors are going that we are going to present we will share the",
    "start": "1753120",
    "end": "1758840"
  },
  {
    "text": "gethub link at the end of the presentation so as we explained earlier",
    "start": "1758840",
    "end": "1764519"
  },
  {
    "text": "the signatures of Defender resulted from merging the Delta and the base",
    "start": "1764519",
    "end": "1771440"
  },
  {
    "text": "file the database file of Defender are composed of threats each threat has its",
    "start": "1771440",
    "end": "1777799"
  },
  {
    "text": "name and we can infer from its name the purpose of the",
    "start": "1777799",
    "end": "1783000"
  },
  {
    "text": "thread now what will happen if we will try to delete all the threads that",
    "start": "1783000",
    "end": "1789559"
  },
  {
    "text": "contain the keyword lasagna in their name we will show how delis of threats",
    "start": "1789559",
    "end": "1796440"
  },
  {
    "text": "resulting with bypass and with successful execution of lasagna tool so",
    "start": "1796440",
    "end": "1802600"
  },
  {
    "text": "let's see so now we check if we are unprivileged user and we can",
    "start": "1802600",
    "end": "1809600"
  },
  {
    "text": "see so we are we're running now we're trying to download lasagna tool which is",
    "start": "1810000",
    "end": "1817919"
  },
  {
    "text": "a malicious tool and this Defender immediately triggered and delete lasagna and now we",
    "start": "1817919",
    "end": "1825399"
  },
  {
    "text": "will run WD pretend in order to delete all the threads that related to lasagna",
    "start": "1825399",
    "end": "1831960"
  },
  {
    "text": "tool and all the threads deleted and the tool will export a new vdm files with",
    "start": "1831960",
    "end": "1838880"
  },
  {
    "text": "the deleted lasagna tool threads and we run",
    "start": "1838880",
    "end": "1844320"
  },
  {
    "text": "and update attempt and we can see that in a minute",
    "start": "1844320",
    "end": "1850399"
  },
  {
    "text": "that the update successful now we will try to download",
    "start": "1850399",
    "end": "1855519"
  },
  {
    "text": "again the the lasagna",
    "start": "1855519",
    "end": "1860159"
  },
  {
    "text": "tool bingo so we",
    "start": "1862600",
    "end": "1868880"
  },
  {
    "text": "actually we actually managed to buy pass Defender so back to you",
    "start": "1868880",
    "end": "1874600"
  },
  {
    "text": "to thank youo so ready for more demos okay let's",
    "start": "1874600",
    "end": "1881279"
  },
  {
    "text": "continue okay so one of the signature type seemed very interesting",
    "start": "1881279",
    "end": "1888279"
  },
  {
    "text": "Microsoft name it friendly file signature with an hash algorithm like",
    "start": "1888279",
    "end": "1894039"
  },
  {
    "text": "sha 256 as you can see on the left we wondered what do Microsoft means by",
    "start": "1894039",
    "end": "1901000"
  },
  {
    "text": "friendly files so by passing all the friendly file signatures from the VM",
    "start": "1901000",
    "end": "1906919"
  },
  {
    "text": "files revealed a very long sorted list of hashes the ash marked in green on the",
    "start": "1906919",
    "end": "1914399"
  },
  {
    "text": "right belongs to the Oracle virtual box runtime Library so we assume that this",
    "start": "1914399",
    "end": "1920519"
  },
  {
    "text": "signature is probably an allow list implementation probably to reduce false",
    "start": "1920519",
    "end": "1926519"
  },
  {
    "text": "positive caused for example by this Oracle executables and other",
    "start": "1926519",
    "end": "1933000"
  },
  {
    "text": "files so what will happen if we replace the ash value of Oracle file with the",
    "start": "1933039",
    "end": "1940399"
  },
  {
    "text": "known mimicet hash value without any modification will it be allowed to",
    "start": "1940399",
    "end": "1946159"
  },
  {
    "text": "execute can we create a friendly mimicet file let's",
    "start": "1946159",
    "end": "1952799"
  },
  {
    "text": "see okay so we are trying to download it and of course Defender detect it as",
    "start": "1954919",
    "end": "1961240"
  },
  {
    "text": "mimicet because it's the non mimicet right now we run our tool and we replace",
    "start": "1961240",
    "end": "1968519"
  },
  {
    "text": "the known I Ash of mimicet with some other friendly as of the Oracle file and",
    "start": "1968519",
    "end": "1974919"
  },
  {
    "text": "we'll run the updates look on the right you will see that the update was",
    "start": "1974919",
    "end": "1980000"
  },
  {
    "text": "successful now we'll show that at the logs as well it's successfully updated",
    "start": "1980000",
    "end": "1989200"
  },
  {
    "text": "and now we'll download it again from the same place the know mimicet let's see if",
    "start": "1990080",
    "end": "1995440"
  },
  {
    "text": "it's running yeah it's running but now let's see if it's working so let's try to extract all the user credentials and",
    "start": "1995440",
    "end": "2003760"
  },
  {
    "text": "it work well with the default Defender crazy",
    "start": "2003760",
    "end": "2010120"
  },
  {
    "text": "right but but this is not it our final demo is much more crazier we we are",
    "start": "2013000",
    "end": "2019840"
  },
  {
    "text": "going to force Defender to delete all the P files in the PC by modifying",
    "start": "2019840",
    "end": "2026039"
  },
  {
    "text": "existing emotet signature to include the Dos mod stop string which appears in all",
    "start": "2026039",
    "end": "2033120"
  },
  {
    "text": "of the portable executable in the world from the 80s right as a new meliss signature when Defender will find this",
    "start": "2033120",
    "end": "2040760"
  },
  {
    "text": "string this program cannot be run in DOS mode do familiar with it h in OS files",
    "start": "2040760",
    "end": "2046639"
  },
  {
    "text": "it will automatically delete all of them causing permanent deline of service do",
    "start": "2046639",
    "end": "2051679"
  },
  {
    "text": "you want to see it okay let's see it okay",
    "start": "2051679",
    "end": "2057679"
  },
  {
    "text": "so we are running our tool we generated an update file we are copying it to the",
    "start": "2057679",
    "end": "2063480"
  },
  {
    "text": "to the VM machine and we will run the update as unprivileged user you can see",
    "start": "2063480",
    "end": "2068638"
  },
  {
    "text": "that it only belongs to the user group let's let's run the update look on",
    "start": "2068639",
    "end": "2074398"
  },
  {
    "text": "the left we will see that the update was successful with unsigned",
    "start": "2074399",
    "end": "2079480"
  },
  {
    "text": "files now we'll wait a few seconds it's not edited and we don't have sounds but",
    "start": "2079480",
    "end": "2085679"
  },
  {
    "text": "Defender just triggered on many of DLS and C files and if I had sound it will",
    "start": "2085679",
    "end": "2093040"
  },
  {
    "text": "like got crazy here because there's a party of mimicet files and emoted files",
    "start": "2093040",
    "end": "2099560"
  },
  {
    "text": "and all of the drivers are like emoted marw and we'll run a scan a custom scan",
    "start": "2099560",
    "end": "2105000"
  },
  {
    "text": "only on the driver folders under system 32 and it will take like few seconds",
    "start": "2105000",
    "end": "2112000"
  },
  {
    "text": "let's wait for it uh to finish and Defender going crazy you need to restart",
    "start": "2112000",
    "end": "2117040"
  },
  {
    "text": "the computer you need to do something I cannot do anything you know and let's see what happened uh it will have a very",
    "start": "2117040",
    "end": "2124560"
  },
  {
    "text": "long list of all the files in the machine detected as oted marer and when",
    "start": "2124560",
    "end": "2130079"
  },
  {
    "text": "we'll try to restart and the attacker will do it uh believe me the operating system will not reboot anymore and this",
    "start": "2130079",
    "end": "2136960"
  },
  {
    "text": "computer is completely dead uh so believe me I won't I tried a lot of times but I will save time uh so let's",
    "start": "2136960",
    "end": "2145040"
  },
  {
    "text": "continue uh so this demo was recorded on an older version of Defender and the",
    "start": "2145040",
    "end": "2151079"
  },
  {
    "text": "newest version at the time of the recording it was 381 uh implement few additional checks",
    "start": "2151079",
    "end": "2158520"
  },
  {
    "text": "for example we had to remove all the signature type trusted publisher uh to",
    "start": "2158520",
    "end": "2164000"
  },
  {
    "text": "make Defender delete B9 drivers and Os executable so there are other defenses but they are bypassable as",
    "start": "2164000",
    "end": "2171839"
  },
  {
    "text": "well uh let's speak a little bit about future work uh we found out that the",
    "start": "2171839",
    "end": "2177200"
  },
  {
    "text": "signature database file also include 30,000 Lua scripts and Microsoft Ed a",
    "start": "2177200",
    "end": "2183880"
  },
  {
    "text": "modifi a modified Lua Adder for the them but we were able to overcome this",
    "start": "2183880",
    "end": "2189839"
  },
  {
    "text": "modification and to decompile all of them and extract the source code of all",
    "start": "2189839",
    "end": "2195079"
  },
  {
    "text": "the 30,000 luas scripts let's see an example for example Lua rule to detect",
    "start": "2195079",
    "end": "2200119"
  },
  {
    "text": "suspicious file masquerading as legit Windows File the rules is very basic it",
    "start": "2200119",
    "end": "2205160"
  },
  {
    "text": "simply checks if a file has the same name of an OS executable file but not in",
    "start": "2205160",
    "end": "2212079"
  },
  {
    "text": "the OS legit path so what will happen if we will change this rule code to run our",
    "start": "2212079",
    "end": "2218520"
  },
  {
    "text": "own code we tried to use Lua libraries but failed since Microsoft probably",
    "start": "2218520",
    "end": "2224400"
  },
  {
    "text": "limit the usage of these Lua libraries but we still think it might be possible to achieve LP local privileg escalation",
    "start": "2224400",
    "end": "2231640"
  },
  {
    "text": "using Microsoft remediation library that we saw used in some other of their Lu",
    "start": "2231640",
    "end": "2237400"
  },
  {
    "text": "scripts but we had not enough time to do it uh so we leave it to you and maybe",
    "start": "2237400",
    "end": "2243000"
  },
  {
    "text": "we'll do it uh so please update us if you were able to do that and let's think about the the takeaways",
    "start": "2243000",
    "end": "2250520"
  },
  {
    "text": "first one for us no one we are at blacket right uh so even the most reliable security controls might be used",
    "start": "2250520",
    "end": "2258079"
  },
  {
    "text": "as the loophole by the adversaries and their architecture and work processes should be checked and verified in",
    "start": "2258079",
    "end": "2264200"
  },
  {
    "text": "continuous security validation process the second one is using digitally signed files that's not always necessarily mean",
    "start": "2264200",
    "end": "2271680"
  },
  {
    "text": "Totally Secure security Windows should always verified in any step of the",
    "start": "2271680",
    "end": "2277319"
  },
  {
    "text": "process that the trust was not broken and finally signature update process of security control is probably a new pass",
    "start": "2277319",
    "end": "2284839"
  },
  {
    "text": "attack vector and we believe that further research is very important in this field we reported to Microsoft which",
    "start": "2284839",
    "end": "2292560"
  },
  {
    "text": "release a patch and assign this CV ID please make sure that you are using this",
    "start": "2292560",
    "end": "2299000"
  },
  {
    "text": "version of the marwel protection platform or above if not you are",
    "start": "2299000",
    "end": "2305520"
  },
  {
    "text": "vulnerable this is the windows Pretender GitHub QR code you can take a follow and",
    "start": "2305520",
    "end": "2311400"
  },
  {
    "text": "Link I will wait a few second somebody want to take a picture",
    "start": "2311400",
    "end": "2317280"
  },
  {
    "text": "yeah okay let's continue so these past researchers help us a lot and we built",
    "start": "2317280",
    "end": "2323560"
  },
  {
    "text": "our research based on their initial findings thank you very",
    "start": "2323560",
    "end": "2330010"
  },
  {
    "text": "[Applause] much",
    "start": "2330010",
    "end": "2336280"
  }
]