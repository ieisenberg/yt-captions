[
  {
    "start": "0",
    "end": "103000"
  },
  {
    "text": "my name is Andy Robbins this is will trader we're going to introduce ourselves a little more in-depth the title of our talk is an ace up the",
    "start": "0",
    "end": "6660"
  },
  {
    "text": "sleeve designing Active Directory dackel backdoors we're super excited about the",
    "start": "6660",
    "end": "11759"
  },
  {
    "text": "talk we hope that we hope that you enjoy the content this is our first time at blackhat our first time to act i blackhat have you got here super excited this is me",
    "start": "11759",
    "end": "19710"
  },
  {
    "text": "andy robbins also known as waldo i work inspector ops as the adversary resilience lead i'm a co-founder and",
    "start": "19710",
    "end": "26699"
  },
  {
    "text": "developer of the bloodhound project i've done training of done presentations and if you're a financial geek i would love",
    "start": "26699",
    "end": "33690"
  },
  {
    "text": "to talk to you about ACH and how awful that that whole platform is my name is",
    "start": "33690",
    "end": "40500"
  },
  {
    "text": "Louis trader my handle is harm joy I'm an offensive engineer with Andy at Specter ups I've",
    "start": "40500",
    "end": "45750"
  },
  {
    "text": "written a lot of code on the co-founder or developer on bail framework Empire",
    "start": "45750",
    "end": "51059"
  },
  {
    "text": "Power View powerup bloodhound on key thief a whole bunch of stuff I presented a few places been a trainer and a active",
    "start": "51059",
    "end": "58170"
  },
  {
    "text": "powersploit developer and I'm a Microsoft PowerShell MVP so somehow Microsoft doesn't hate me enough that",
    "start": "58170",
    "end": "63780"
  },
  {
    "text": "they decided to at least make me an MVP so okay so let's give you an idea of we're going to go so we're going to",
    "start": "63780",
    "end": "69630"
  },
  {
    "text": "start off by talking about decals and aces what these are how they work why they matter we're going to talk about",
    "start": "69630",
    "end": "75240"
  },
  {
    "text": "common misconfigurations and how those misconfigurations can be abused for privacy and for backdoors we're going to",
    "start": "75240",
    "end": "81840"
  },
  {
    "text": "do a demonstration of how to analyze these more easily using the bloodhound interface then we'll go through our case",
    "start": "81840",
    "end": "87450"
  },
  {
    "text": "studies of designing the the ACL based backdoors will show some examples of",
    "start": "87450",
    "end": "93509"
  },
  {
    "text": "some of the things that we've thought of and some of the things that other people may have thought of already and then at",
    "start": "93509",
    "end": "99030"
  },
  {
    "text": "the end we'll talk about defenses that you may be able to implement to find some of this stuff so a important",
    "start": "99030",
    "end": "104850"
  },
  {
    "start": "103000",
    "end": "103000"
  },
  {
    "text": "disclaimer we're not dropping O'Dea we're not talking about anything worthy of a CBE this is a way to abuse the",
    "start": "104850",
    "end": "111869"
  },
  {
    "text": "windows security model in a way that we think is pretty interesting secondly and",
    "start": "111869",
    "end": "117390"
  },
  {
    "text": "maybe more importantly is while it's while aces and Akal can be used for",
    "start": "117390",
    "end": "122670"
  },
  {
    "text": "elevating rights what we're talking about is post escalation and borrowing yourself into an Active Directory domain",
    "start": "122670",
    "end": "129750"
  },
  {
    "text": "once you have become domain admin and how you can implement malicious aces to have",
    "start": "129750",
    "end": "136320"
  },
  {
    "text": "long-term code execution lists persistence in an environment cool so",
    "start": "136320",
    "end": "144720"
  },
  {
    "start": "144000",
    "end": "144000"
  },
  {
    "text": "why should you care about this so there's a few really cool things that go along with this type of persistence",
    "start": "144720",
    "end": "151530"
  },
  {
    "text": "methodology in this type of approach so one it's often very difficult to determine that if you find an ace that",
    "start": "151530",
    "end": "157980"
  },
  {
    "text": "can provide elevated access or you know a you know additional access into the",
    "start": "157980",
    "end": "163709"
  },
  {
    "text": "future if you find these malicious aces it can be difficult to actually tell are they actually malicious or were they",
    "start": "163709",
    "end": "169350"
  },
  {
    "text": "implemented by accident either through some third-party installation or you know who knows also these types of backdoors have a",
    "start": "169350",
    "end": "176940"
  },
  {
    "text": "minimal forensic footprint it's difficult to even find them and we're going to make it even harder to actually",
    "start": "176940",
    "end": "182070"
  },
  {
    "text": "find them later in the deck they often survive operating system and domain functional level upgrades and they're",
    "start": "182070",
    "end": "187950"
  },
  {
    "text": "very subtle so this gives you an excellent chance for long long-term multi-year subtle domain persistence and",
    "start": "187950",
    "end": "194820"
  },
  {
    "text": "a big point here is these may have been in your environment for years which kind of terrifies me once we started thinking",
    "start": "194820",
    "end": "200730"
  },
  {
    "text": "about it because and I love this quote Mac raver used to be my boss about a year or so ago he spoke two years ago at",
    "start": "200730",
    "end": "207959"
  },
  {
    "text": "blackhat on W mine and he had this great quote saying as an offensive researcher if you can dream it",
    "start": "207959",
    "end": "213980"
  },
  {
    "text": "someone has likely already done it and that someone isn't the kind of person that comes and speaks at security",
    "start": "213980",
    "end": "220230"
  },
  {
    "text": "conferences so please keep this in mind once we actually get to the case studies we're going through this background and",
    "start": "220230",
    "end": "225690"
  },
  {
    "text": "everything so you have the understanding and then hopefully we will bring it all together and show you the really really cool things you can do creatively with",
    "start": "225690",
    "end": "232049"
  },
  {
    "text": "this type of stuff okay so let's do some background information and first of all we need to acknowledge some previous",
    "start": "232049",
    "end": "238079"
  },
  {
    "start": "237000",
    "end": "237000"
  },
  {
    "text": "work that came before us most importantly is this project from ANSI which is the French equivalent of the",
    "start": "238079",
    "end": "244170"
  },
  {
    "text": "NSA they have this project called active directory control paths they did the white paper regarding how aces can be",
    "start": "244170",
    "end": "251430"
  },
  {
    "text": "abused and they also used graph theory to map out the connections that can go",
    "start": "251430",
    "end": "258030"
  },
  {
    "text": "from any arbitrary place in the domain to another so they also served as initial inspiration for us when we were",
    "start": "258030",
    "end": "263430"
  },
  {
    "text": "developing bloodhound about a year and a half ago Luca boyo and a manual Gras we want to make sure",
    "start": "263430",
    "end": "269520"
  },
  {
    "text": "that we mentioned their names they're the ones who develop the Active Directory control pads project secondly",
    "start": "269520",
    "end": "275880"
  },
  {
    "text": "the ad Akal scanner we should acknowledge this work as well this is a GUI interface based on powershell script",
    "start": "275880",
    "end": "282330"
  },
  {
    "text": "that you can use for scanning Ackles in Active Directory it does things like CSV export CSE diffing some cool things like",
    "start": "282330",
    "end": "289620"
  },
  {
    "text": "that we also have a really great blog post there and again these slides will be public but they go into some details a lot of the control relationships that",
    "start": "289620",
    "end": "296100"
  },
  {
    "text": "we cover as well that's all that's a project that's a developed by robin Granberg at Microsoft next when we",
    "start": "296100",
    "end": "302730"
  },
  {
    "text": "started doing the initial research for like can we find an example where somebody has used ACLs for putting a",
    "start": "302730",
    "end": "309450"
  },
  {
    "text": "backdoor into Active Directory already we came up pretty empty-handed we couldn't find a whole lot of examples",
    "start": "309450",
    "end": "314790"
  },
  {
    "text": "this was the closest thing that we could find it's a Russian blog post from 2010",
    "start": "314790",
    "end": "319800"
  },
  {
    "text": "about how to use aces to obscure the existence of objects so it served as an",
    "start": "319800",
    "end": "326370"
  },
  {
    "text": "inspiration for our talk but we think we've built on what this blog post went into pretty well and when you're looking",
    "start": "326370",
    "end": "334350"
  },
  {
    "text": "at different ways to attack an environment if the only existing writing you can find is in Russian you're",
    "start": "334350",
    "end": "340530"
  },
  {
    "text": "probably on the right track yeah so we'll you know a little bit this",
    "start": "340530",
    "end": "346590"
  },
  {
    "text": "background what we mean by securable objects and decals and all that so securable objects in a Windows environment and Active Directory or on",
    "start": "346590",
    "end": "353010"
  },
  {
    "text": "the host are defined by objects that have a security descriptor this is a binary structure the stored it has",
    "start": "353010",
    "end": "359730"
  },
  {
    "text": "several different pieces so it has you know the primary group the owner shackles and decals we'll go over the all the terms here in a second this can",
    "start": "359730",
    "end": "366420"
  },
  {
    "text": "also be described as a security descriptor definition language strings ons DDL string but we're not really",
    "start": "366420",
    "end": "371760"
  },
  {
    "text": "going to cover that so the thing we care about here mostly is the deckle what we'll be covering so we a lot of people",
    "start": "371760",
    "end": "378120"
  },
  {
    "text": "use these terms interchangeably we use kind of Apple and deco interchangeably but the access control list is actually",
    "start": "378120",
    "end": "384120"
  },
  {
    "text": "the superset of the Sakhalin the deckle so dackel being the discretionary access control list and the SAC will be in the",
    "start": "384120",
    "end": "390150"
  },
  {
    "text": "system access control list these are it's a pointer to an ordered collection of access control entries or aces that",
    "start": "390150",
    "end": "397050"
  },
  {
    "text": "are stored for the object deckle is what actually defines who has what rights what principles who has what",
    "start": "397050",
    "end": "403600"
  },
  {
    "text": "rights over a particular object so it's just the access control model the Sako allows for auditing of success and",
    "start": "403600",
    "end": "409419"
  },
  {
    "text": "failure auditing on accesses to different components of the object but we're not really going to cover that in this presentation so aces include a",
    "start": "409419",
    "end": "418470"
  },
  {
    "text": "series of flags the control auditing a little bit of inheritance and they have the principal so the SID of the user",
    "start": "418470",
    "end": "426070"
  },
  {
    "text": "that has the right we care about that very much and we'll get into a why and it also has a 32 bit access mask and you",
    "start": "426070",
    "end": "432910"
  },
  {
    "text": "know we're not going to go and dive super deep in the access mask we actually have a 64 page white paper they'll be published by black hat that",
    "start": "432910",
    "end": "438760"
  },
  {
    "text": "goes into all this stuff and way way more debt than we have time for but the access mask actually controls you know",
    "start": "438760",
    "end": "444340"
  },
  {
    "text": "who has you know what are the rights that this person has it can be very very granular and will gain the extended",
    "start": "444340",
    "end": "450160"
  },
  {
    "text": "stuff here in a second but you know an a duck active directory using computers is what it looks like so the harms or user the principle that",
    "start": "450160",
    "end": "455800"
  },
  {
    "text": "be stored in the SID the the object itself is victim and the rights here is they have modified permissions and",
    "start": "455800",
    "end": "461290"
  },
  {
    "text": "modify owner there's one bit in the access mask we definitely care about",
    "start": "461290",
    "end": "466720"
  },
  {
    "start": "464000",
    "end": "464000"
  },
  {
    "text": "it's a DES control access it is a bit that grants privileges and the access mask or it's a bit in the access mask",
    "start": "466720",
    "end": "473919"
  },
  {
    "text": "that is used to demonstrate privileges that aren't easily expressed already in the access mask so it's a way to extend",
    "start": "473919",
    "end": "480460"
  },
  {
    "text": "how you can actually define this stuff so it's interpret this bit is interpreted two different ways if the",
    "start": "480460",
    "end": "485710"
  },
  {
    "text": "object ace type which is a good if the target of the ace is the confidential",
    "start": "485710",
    "end": "491200"
  },
  {
    "text": "property name so if it late if it's mapped back to a property that's marked as confidential for example laps then",
    "start": "491200",
    "end": "496600"
  },
  {
    "text": "flipping the DES control access pit well grant read access to the sensitive property alright so hopefully make sense",
    "start": "496600",
    "end": "503410"
  },
  {
    "text": "right no too crazy the second way is that the object ace type is a gooood",
    "start": "503410",
    "end": "508660"
  },
  {
    "text": "that's mapped to an existing extended right in the forest schema than a",
    "start": "508660",
    "end": "514900"
  },
  {
    "text": "specific granular right in Active Directory this is specific just active directory then a specific extended right",
    "start": "514900",
    "end": "521529"
  },
  {
    "text": "is granted for example I don't want complete control the object but I want the ability for helpdesk to force reset",
    "start": "521529",
    "end": "527350"
  },
  {
    "text": "the password but I don't want to give them any other rights right so that's not easily expressed in the exist",
    "start": "527350",
    "end": "532390"
  },
  {
    "text": "access math structure so they flip the control access fit that target gooood is going to map in the Active Directory",
    "start": "532390",
    "end": "538120"
  },
  {
    "text": "schema to you know user force change password also say DC sync rights like",
    "start": "538120",
    "end": "543820"
  },
  {
    "text": "replication rights which we'll get into in some of the demonstrations okay so we",
    "start": "543820",
    "end": "550540"
  },
  {
    "start": "548000",
    "end": "548000"
  },
  {
    "text": "have with tackle we have the Aces the the deckle is a collection of aces that are listed in what is called canonical",
    "start": "550540",
    "end": "555730"
  },
  {
    "text": "order so if you've ever looked at like a firewall Akal you know that the firewall",
    "start": "555730",
    "end": "561190"
  },
  {
    "text": "reads the Akal from the top down and from top down whatever rule is a plot is",
    "start": "561190",
    "end": "566200"
  },
  {
    "text": "relevant to the access that is being requested is the rule that hit in Active Directory it's very similar however",
    "start": "566200",
    "end": "572260"
  },
  {
    "text": "there is also inheritance and overriding permissions that you have to consider so",
    "start": "572260",
    "end": "579550"
  },
  {
    "text": "in the in a Windows security model the kernel mode security reference monitor is a part of the operating system that",
    "start": "579550",
    "end": "586930"
  },
  {
    "text": "actually evaluates the dackel in canonical order and it makes the access this decision of whether access will be",
    "start": "586930",
    "end": "593050"
  },
  {
    "text": "granted or denied this becomes important when we're talking about adding our own malicious aces because we can take",
    "start": "593050",
    "end": "599860"
  },
  {
    "text": "advantage of the order of inheritance and the order of evaluation that the SRM uses and we can abuse that in a way that",
    "start": "599860",
    "end": "607180"
  },
  {
    "text": "lets us do very very sneaky things we'll talk about in a second so let's talk about let's take a look at this example",
    "start": "607180",
    "end": "612280"
  },
  {
    "text": "we have this o u here called I T under there's a no you called help desk and",
    "start": "612280",
    "end": "617620"
  },
  {
    "text": "under there is a user called Robbie Winchester I'm going to put a deny at explicit deny on this I tou and explicit",
    "start": "617620",
    "end": "626710"
  },
  {
    "text": "deny for full control say for example that's going to inherit down to the O you under there and on the oh you there",
    "start": "626710",
    "end": "633580"
  },
  {
    "text": "it's going to be reflected as a inherited denied it's also going to inherit down to the user and it's also",
    "start": "633580",
    "end": "639370"
  },
  {
    "text": "going to show up there as an inherited deny what if I in the intermediary oh you on helpdesk if I said well wait a",
    "start": "639370",
    "end": "646690"
  },
  {
    "text": "minute I want to have an explicit allow that explicit allow is going to override the inherited deny because it explicitly",
    "start": "646690",
    "end": "654730"
  },
  {
    "text": "defined aces override inherited aces there's one final complication with this",
    "start": "654730",
    "end": "660610"
  },
  {
    "text": "so that explicit allow is also going to be inherited down to the Robbie Chester user now because the oh you",
    "start": "660610",
    "end": "669199"
  },
  {
    "text": "called help desk is generationally closer to the robbing user than the oh you called IT the a Siddhant inherits",
    "start": "669199",
    "end": "677600"
  },
  {
    "text": "from it's closer oh you parent is the one that is canonically higher in the",
    "start": "677600",
    "end": "682670"
  },
  {
    "text": "dackel finally if we if we define explicit aces those also override",
    "start": "682670",
    "end": "689389"
  },
  {
    "text": "inherited aces so what you wind up with is on the ravi winchester user at the",
    "start": "689389",
    "end": "694490"
  },
  {
    "text": "very top we have explicit denies that will override anything else with the exception of the object owner which",
    "start": "694490",
    "end": "700220"
  },
  {
    "text": "maintains full control then the explicit that's allow then the inherited allow",
    "start": "700220",
    "end": "705889"
  },
  {
    "text": "and then finally the inherited deny we're going to abuse this in further in",
    "start": "705889",
    "end": "713360"
  },
  {
    "text": "a talk I'm going to show you how to do that so let's take a look at some basic misconfigurations and how we abused",
    "start": "713360",
    "end": "718610"
  },
  {
    "text": "these before we took before we take a you know in-depth look at that one thing too to repeat is that we are focusing",
    "start": "718610",
    "end": "727339"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "this talk on persistence not escalation so everything that we're talking about",
    "start": "727339",
    "end": "732440"
  },
  {
    "text": "requires some kind of privilege to implement these malicious cases domain Abin is the easiest one because domain",
    "start": "732440",
    "end": "738649"
  },
  {
    "text": "Evan's control everything or you have control over the object that you're backdooring and in general we want to",
    "start": "738649",
    "end": "744139"
  },
  {
    "text": "chain a SACEUR build these in that you can go from lower less privileged objects or principals to higher",
    "start": "744139",
    "end": "749930"
  },
  {
    "text": "privilege one so we're going to go from a domain authenticated user up to domain admins or specific user that's not any",
    "start": "749930",
    "end": "755690"
  },
  {
    "text": "privileged groups allowing them elevated access to take back over so Active",
    "start": "755690",
    "end": "761060"
  },
  {
    "start": "761000",
    "end": "761000"
  },
  {
    "text": "Directory obviously we have different kinds of object classes one of those are users so if we have an ace against a",
    "start": "761060",
    "end": "767569"
  },
  {
    "text": "user that allows us to take over that user there are basically two options that we know of right now one the most",
    "start": "767569",
    "end": "774230"
  },
  {
    "text": "obvious is the ability to change that user's password without knowing its current value this is what you give",
    "start": "774230",
    "end": "779689"
  },
  {
    "text": "helpdesk people so that they can reset someone's password after they lock their account out the second one is targeted",
    "start": "779689",
    "end": "784759"
  },
  {
    "text": "Kerberos thing so if we can write a value to the SVM property on the user",
    "start": "784759",
    "end": "789769"
  },
  {
    "text": "object we can Kerberos that user from any domain user in the environment we",
    "start": "789769",
    "end": "795139"
  },
  {
    "text": "can get a Kerberos ticket back from the domain controller for that user we encrypted using the ntlm hash of that",
    "start": "795139",
    "end": "800730"
  },
  {
    "text": "users password then we're just cracking ntlm if we can do that we can recover the current clear-text value of that",
    "start": "800730",
    "end": "807839"
  },
  {
    "text": "user's password then we can reset it and the user is none the wiser so it's not destructive in that there's not there's",
    "start": "807839",
    "end": "813899"
  },
  {
    "text": "an indication that a property change but the end-user doesn't actually notice anything different secondly we have",
    "start": "813899",
    "end": "819180"
  },
  {
    "start": "819000",
    "end": "819000"
  },
  {
    "text": "group objects obviously so the primitive that we're looking at here is the ability to add an arbitrary object to",
    "start": "819180",
    "end": "825629"
  },
  {
    "text": "the members list of a group then we write the existing privilege that that group has either by security group",
    "start": "825629",
    "end": "832079"
  },
  {
    "text": "delegation or by that grouping for example a local admin on a computer we",
    "start": "832079",
    "end": "837600"
  },
  {
    "text": "can either have the ability to write to the members property or we can have the generic write privilege and that allows",
    "start": "837600",
    "end": "843540"
  },
  {
    "text": "us to do this and again all throughout this we actually have weaponization functions through Power View to actually",
    "start": "843540",
    "end": "848819"
  },
  {
    "text": "abuse all these takeover primitives yep in this instance it ad - domain group",
    "start": "848819",
    "end": "854189"
  },
  {
    "text": "member computer objects are unfortunately a little less sexy yeah so",
    "start": "854189",
    "end": "862519"
  },
  {
    "start": "856000",
    "end": "856000"
  },
  {
    "text": "computer objects we do now to take over these if laps is installed in the environment laps is the local local",
    "start": "862519",
    "end": "869009"
  },
  {
    "text": "admin password solution for Microsoft which you absolutely should have deployed laps changes a local admin",
    "start": "869009",
    "end": "875459"
  },
  {
    "text": "password for the computer and then puts the clear text value of that password as a protected attribute on the computer",
    "start": "875459",
    "end": "881040"
  },
  {
    "text": "object if we can read that attribute we have the local lab and password makes sense that's about as far as we know of",
    "start": "881040",
    "end": "889230"
  },
  {
    "text": "how to take over computer objects we are very interested in what others may have as far as ideas for how to do that that's one area for future research next",
    "start": "889230",
    "end": "898309"
  },
  {
    "start": "897000",
    "end": "897000"
  },
  {
    "text": "every active directory domain has a domain object that represents the domain",
    "start": "898309",
    "end": "903540"
  },
  {
    "text": "as a whole so the domain object itself if you have full control or if you have",
    "start": "903540",
    "end": "909180"
  },
  {
    "text": "des replication get changes and des replication get changes all then without",
    "start": "909180",
    "end": "914970"
  },
  {
    "text": "any other kind of privilege you can DC sync so let me say that one more time",
    "start": "914970",
    "end": "920910"
  },
  {
    "text": "without having a local admin on a DC without being a domain admin if I have",
    "start": "920910",
    "end": "925920"
  },
  {
    "text": "certain privileges on the domain object I can DC sync get NT hashes for any user in the environment that I want including",
    "start": "925920",
    "end": "932580"
  },
  {
    "text": "anything so again we care about right tackle which would allow us to modify the security information to then grant",
    "start": "932580",
    "end": "939029"
  },
  {
    "text": "ourselves that's right exactly so GPOs group policy objects the main takeover primitive for GPOs is involves",
    "start": "939029",
    "end": "946230"
  },
  {
    "text": "the right to edit the gpo itself so these group policy objects are collections of settings that are applied",
    "start": "946230",
    "end": "951959"
  },
  {
    "text": "to oh you sites and domains those are then filtered down through the inheritance and you talked about kind of",
    "start": "951959",
    "end": "957000"
  },
  {
    "text": "like aces and these settings are applied to users and computers out user and computer objects all the way kind of",
    "start": "957000",
    "end": "962910"
  },
  {
    "text": "down the chain so if you have the ability to edit a GPO there's a million-in-one ways to turn that into code execution on a computer is applied",
    "start": "962910",
    "end": "969600"
  },
  {
    "text": "to or to modify something about the user you can change reg entries you know schedule tasks there's a million one",
    "start": "969600",
    "end": "975540"
  },
  {
    "text": "things so for this what we care about is writing to all the properties are writing to GPC file system modify GPC",
    "start": "975540",
    "end": "986040"
  },
  {
    "text": "file suspicions are actually cloned down from what we can tell on to the file system insist fall or the group where",
    "start": "986040",
    "end": "992399"
  },
  {
    "text": "the GPO actually resides so modify it clung down and now I have the ability to actually edit the gpo",
    "start": "992399",
    "end": "997680"
  },
  {
    "text": "files that are actually on sis well then there's a few generic rights that",
    "start": "997680",
    "end": "1003800"
  },
  {
    "start": "1001000",
    "end": "1001000"
  },
  {
    "text": "applied to pretty much all the objects we talked about so those are kind of the object specific takeover rights these are the generic ones so generic all",
    "start": "1003800",
    "end": "1010070"
  },
  {
    "text": "grants us all rights pretty simple it also grants control rights which we're going to talk about on the next slide",
    "start": "1010070",
    "end": "1015250"
  },
  {
    "text": "generic right will allow us to modify all almost all properties everything but",
    "start": "1015250",
    "end": "1021620"
  },
  {
    "text": "confidential properties on the object everything except where the things that are protected by the IDS control access",
    "start": "1021620",
    "end": "1026780"
  },
  {
    "text": "bit and like that type of thing these are both abusable with set domain objects and these two rights again apply",
    "start": "1026780",
    "end": "1032688"
  },
  {
    "text": "to pretty much almost anything we talked about for takeover to get in the paper as more specific details so what do I",
    "start": "1032689",
    "end": "1039140"
  },
  {
    "start": "1038000",
    "end": "1038000"
  },
  {
    "text": "mean by control rights there are a couple of rights that will allow a trustee or principal to take control of",
    "start": "1039140",
    "end": "1046130"
  },
  {
    "text": "the object in a specific way instead of modifying you know the actual object itself so right deckle will grant us the",
    "start": "1046130",
    "end": "1052280"
  },
  {
    "text": "ability to modify the dackel right is a beautiful power view with ADD domain",
    "start": "1052280",
    "end": "1058250"
  },
  {
    "text": "object ACL and right owner grants us the ability to take ownership of the object",
    "start": "1058250",
    "end": "1063620"
  },
  {
    "text": "in Active Directory the reason care about this is that owners have implicitly complete rights",
    "start": "1063620",
    "end": "1068700"
  },
  {
    "text": "on the object even if there's an explicit deny even if we'll has complete denying Andy if I'm the owner then now",
    "start": "1068700",
    "end": "1075659"
  },
  {
    "text": "you have complete full access and this is abusable power view with set domain object owner okay so let's take a look",
    "start": "1075659",
    "end": "1084929"
  },
  {
    "start": "1084000",
    "end": "1084000"
  },
  {
    "text": "at how we can analyze this stuff with bloodhound unfortunately if you try to if your to audit aces in Active",
    "start": "1084929",
    "end": "1090899"
  },
  {
    "text": "Directory you go down the path of a very frustrating experience currently we think that we've done a",
    "start": "1090899",
    "end": "1098009"
  },
  {
    "text": "pretty good job with implementing these ace edges into bloodhound one thing I",
    "start": "1098009",
    "end": "1103049"
  },
  {
    "text": "notice we're only implementing the abusable aces we're not pulling in every",
    "start": "1103049",
    "end": "1108059"
  },
  {
    "text": "single ace on every single object it's also not 100% complete there's a few additional control relationships specifically GPOs that were in the",
    "start": "1108059",
    "end": "1114629"
  },
  {
    "text": "process of implementing so as for defenders we hope this is useful for finding malicious backdoors for",
    "start": "1114629",
    "end": "1121590"
  },
  {
    "text": "enforcing leaf privilege and for hopefully detecting some of the non stealthy tackle based best backdoors as",
    "start": "1121590",
    "end": "1129179"
  },
  {
    "text": "attackers we can use this for finding opportunities where if we have a user that is multiple degrees of separation",
    "start": "1129179",
    "end": "1135389"
  },
  {
    "text": "away from the object that we're actually interested in taking over we can backdoor this user which may not be as",
    "start": "1135389",
    "end": "1140970"
  },
  {
    "text": "interesting to the defenders and we have access to this other object which is we can also have an understanding of what",
    "start": "1140970",
    "end": "1147210"
  },
  {
    "text": "the current privilege maturity level is in the environment so that we know just",
    "start": "1147210",
    "end": "1152639"
  },
  {
    "text": "how well we can sneak in and blend in with the noise so we have a video that",
    "start": "1152639",
    "end": "1158009"
  },
  {
    "text": "we're going to show you this is the bloodhound interface that we're going to look at when you pull up the bloodhound",
    "start": "1158009",
    "end": "1164850"
  },
  {
    "text": "interface you see the members of the domain admins groups which we unroll out for you so if I click on the domain",
    "start": "1164850",
    "end": "1170580"
  },
  {
    "text": "admins I'm interested in seeing inbound object control so this was released with",
    "start": "1170580",
    "end": "1176490"
  },
  {
    "text": "a 1.3 update the explicit object controllers we can see that there are six groups that have some kind of control over the domain admins group",
    "start": "1176490",
    "end": "1182759"
  },
  {
    "text": "four of them are a generic all edge which is full control and one of them is",
    "start": "1182759",
    "end": "1187769"
  },
  {
    "text": "a right tackle edge meaning that I can take control of the domain admins group so the we have the exchange groups and",
    "start": "1187769",
    "end": "1194519"
  },
  {
    "text": "then we have this administrators group in a back up to there are users that belong to these groups",
    "start": "1194519",
    "end": "1199710"
  },
  {
    "text": "if we unroll that out we can see this is what the picture actually looks like and so all of these principles here actually",
    "start": "1199710",
    "end": "1205080"
  },
  {
    "text": "have control over the domain admins group via security of your delegation",
    "start": "1205080",
    "end": "1210200"
  },
  {
    "text": "the exchange trust of the subsystem is one of particular interest to us this",
    "start": "1210200",
    "end": "1215430"
  },
  {
    "text": "user here is a member of that group which is a member of that group which is a member of that group which is a member",
    "start": "1215430",
    "end": "1221820"
  },
  {
    "text": "of that group which has the right tackle privilege the domain admins group what we can also do is look at inbound",
    "start": "1221820",
    "end": "1228390"
  },
  {
    "text": "transitive object control so by only manipulating these aces or by executing",
    "start": "1228390",
    "end": "1233790"
  },
  {
    "text": "an apple only attack path who else in the domain can take over the domain admins group or any other group or any",
    "start": "1233790",
    "end": "1239850"
  },
  {
    "text": "other principle that we track in this instance we have a group that belongs to a group that has force Change Password",
    "start": "1239850",
    "end": "1246000"
  },
  {
    "text": "ability to this user called D Shofner and that user the part of the domain admins group slightly more interesting",
    "start": "1246000",
    "end": "1252750"
  },
  {
    "text": "attack path starting at this user we use it group delegation from this group to",
    "start": "1252750",
    "end": "1257880"
  },
  {
    "text": "the following group that gives us the ability to change the user password for this user here that user can then in",
    "start": "1257880",
    "end": "1264450"
  },
  {
    "text": "turn change that users password who belongs to this group to the right and that group has full control of the",
    "start": "1264450",
    "end": "1271080"
  },
  {
    "text": "domain admins group so it is one more one more little thing so we what we're",
    "start": "1271080",
    "end": "1277590"
  },
  {
    "text": "also interested in is outbound control so obviously domain admins is going to have control of everything or at least",
    "start": "1277590",
    "end": "1283440"
  },
  {
    "text": "they should we can also look at a supposedly low privileged user and find what its privileges are so our tailor",
    "start": "1283440",
    "end": "1289650"
  },
  {
    "text": "will look at the outbound object control section first degree object control is 0 so the user itself is not defined as a",
    "start": "1289650",
    "end": "1296280"
  },
  {
    "text": "control principle on any other objects by groups by security group delegation",
    "start": "1296280",
    "end": "1302280"
  },
  {
    "text": "it actually has the ability to change for different users passwords so because he's a member of this group and then a",
    "start": "1302280",
    "end": "1307440"
  },
  {
    "text": "member of the following group he can change these 4 years of passwords now outbound transitive object control what",
    "start": "1307440",
    "end": "1315510"
  },
  {
    "text": "principles can this user take over by executing an apple only attack path and",
    "start": "1315510",
    "end": "1321090"
  },
  {
    "text": "we follow that tree out as far as we can go and we're basically looking at every edge in the bloodhound database except",
    "start": "1321090",
    "end": "1327870"
  },
  {
    "text": "for admin rights to a computer or a user having a session on a system so again don't need code execution on any",
    "start": "1327870",
    "end": "1334229"
  },
  {
    "text": "additional system to run these types of attacks yeah all of this is just communicating with a domain controller and that's it that's it for the visual",
    "start": "1334229",
    "end": "1343549"
  },
  {
    "text": "all right so that brings us to section 4 designing these Active Directory database doors so what our objective is",
    "start": "1351320",
    "end": "1357960"
  },
  {
    "start": "1356000",
    "end": "1356000"
  },
  {
    "text": "here we want to implement a ACL based backdoor in Active Directory that allows",
    "start": "1357960",
    "end": "1363570"
  },
  {
    "text": "us to get access into the network at any time later in any user context and very",
    "start": "1363570",
    "end": "1369930"
  },
  {
    "text": "very quickly upgrade our rights to whatever privilege we want domain admin for example we want to either blend in",
    "start": "1369930",
    "end": "1376350"
  },
  {
    "text": "with existing ACL so that it's very hard to tell the difference between our malicious ones and quote-unquote good",
    "start": "1376350",
    "end": "1382770"
  },
  {
    "text": "ones and we also have other other primitives for making that very very",
    "start": "1382770",
    "end": "1388020"
  },
  {
    "text": "hard for an auditor to actually find the first of which is the ability to hide",
    "start": "1388020",
    "end": "1394560"
  },
  {
    "start": "1392000",
    "end": "1392000"
  },
  {
    "text": "the dackel from enumeration by an auditor so this requires two steps will",
    "start": "1394560",
    "end": "1400830"
  },
  {
    "text": "have me the point already that if if I am the owner of an object I retain all privileges regardless of what other what",
    "start": "1400830",
    "end": "1408150"
  },
  {
    "text": "other aces exist on that users tackle so we need to change the object owner away",
    "start": "1408150",
    "end": "1413490"
  },
  {
    "text": "from domain admins to some other principle and then I need to add a new explicit deny ace which is going to",
    "start": "1413490",
    "end": "1420120"
  },
  {
    "text": "override everything else remember that SR inheritance yep and what I'm going to do is the everyone",
    "start": "1420120",
    "end": "1426390"
  },
  {
    "text": "principle I'm going to say they are denied read permissions so now if you do like Adi Cole scanner or if you look in",
    "start": "1426390",
    "end": "1433410"
  },
  {
    "text": "a duct you're not going to be able to even read the dackel on the effected object this is what that looks like in",
    "start": "1433410",
    "end": "1440490"
  },
  {
    "text": "in a GUI so what I'm saying is that everyone is denied read permissions",
    "start": "1440490",
    "end": "1445770"
  },
  {
    "text": "against this user called Jeff Dimmick make sense what I can also do is I can",
    "start": "1445770",
    "end": "1451830"
  },
  {
    "text": "hide the existence of a principle this can be any principle this would be any object in Active Directory I can I can",
    "start": "1451830",
    "end": "1457710"
  },
  {
    "text": "hide the fact that it actually exists this is a little more complicated but it's basically three steps the first of",
    "start": "1457710",
    "end": "1464010"
  },
  {
    "text": "which is change the object owner to some of the principle either itself or a principle that we have control of or",
    "start": "1464010",
    "end": "1470430"
  },
  {
    "text": "that we can gain control of then grant explicit control of the principle to itself or some other control principle",
    "start": "1470430",
    "end": "1478430"
  },
  {
    "text": "then on the öyou that contains this principle",
    "start": "1478430",
    "end": "1483840"
  },
  {
    "text": "we're going to deny everyone the list contents privilege so in a duck via LDAP",
    "start": "1483840",
    "end": "1491549"
  },
  {
    "text": "with a net executable you're not going to be able to see that this user even exists I assure you that a user exists",
    "start": "1491549",
    "end": "1499260"
  },
  {
    "text": "in this oh you however running of the domain admin and looking at a duck we can't see it and",
    "start": "1499260",
    "end": "1504809"
  },
  {
    "text": "whether it's LDAP Power View a duck das query doesn't really matter right so to",
    "start": "1504809",
    "end": "1511140"
  },
  {
    "start": "1510000",
    "end": "1510000"
  },
  {
    "text": "sum that up we know how we can take over other objects in Active Directory by",
    "start": "1511140",
    "end": "1516149"
  },
  {
    "text": "abusing aces we know that we can control who can enumerate the dackel to find these backdoors that we're putting in",
    "start": "1516149",
    "end": "1521880"
  },
  {
    "text": "and we know that we can hide the principles that we're back dooring or otherwise from easy identification from",
    "start": "1521880",
    "end": "1528630"
  },
  {
    "text": "defenders okay that's all the you know that's all the background all the pieces all the LEGO pieces we're going to put",
    "start": "1528630",
    "end": "1534330"
  },
  {
    "text": "together so remember if you can dream it these are the five we're going to go over five case studies that we came up",
    "start": "1534330",
    "end": "1539820"
  },
  {
    "text": "with we have already have more ideas after you put the deck together there's infinite possibilities and how you could",
    "start": "1539820",
    "end": "1545130"
  },
  {
    "text": "design these chains of malicious aces so the very first one pretty easy I talked",
    "start": "1545130",
    "end": "1550830"
  },
  {
    "start": "1548000",
    "end": "1548000"
  },
  {
    "text": "about those DC sink privileges so what the attacker does to implement the backdoor is they add es replication get",
    "start": "1550830",
    "end": "1556890"
  },
  {
    "text": "changes and des replication get changes all to the domain objects itself where",
    "start": "1556890",
    "end": "1562169"
  },
  {
    "text": "they are the they are the principal or a user they controls the principal then",
    "start": "1562169",
    "end": "1567600"
  },
  {
    "text": "that user and that user our computer doesn't matter what it is does not have to be in any groups at all it doesn't",
    "start": "1567600",
    "end": "1572820"
  },
  {
    "text": "have to be in any privileged groups it doesn't have to be domain admins doesn't have to be anything you just leave it there then the attacker in the future",
    "start": "1572820",
    "end": "1579840"
  },
  {
    "text": "could be five years in the future ten years in the future regains access to that account and then can use DC sync",
    "start": "1579840",
    "end": "1586710"
  },
  {
    "text": "again written by Benjamin Delfy and Vincent Matoo thank you very much for DC sync they can synchronize the ntlm or",
    "start": "1586710",
    "end": "1593010"
  },
  {
    "text": "AES or whatever credential material from the domain controller so we'll show you",
    "start": "1593010",
    "end": "1598110"
  },
  {
    "text": "a demo neguin with all these case studies we're going to start off simple and we're going to get pretty crazy by the end okay",
    "start": "1598110",
    "end": "1606570"
  },
  {
    "text": "so walking through this all executed a CL base from one pivot point we're going to import Power View and we're going to",
    "start": "1606570",
    "end": "1613260"
  },
  {
    "text": "use this bad guy users or principle he's our attacker so first we're going to show that guarantee this bad guy user is a no",
    "start": "1613260",
    "end": "1619360"
  },
  {
    "text": "privilege groups each s in the domain users default group we're going to save off the SID of this bad guy and then",
    "start": "1619360",
    "end": "1625930"
  },
  {
    "text": "we're going to enumerate the current ACLs of the domain object filtering for that Sid just to show you there are no",
    "start": "1625930",
    "end": "1631300"
  },
  {
    "text": "explicit aces on the domain for that user now using Power View ad the main object",
    "start": "1631300",
    "end": "1636310"
  },
  {
    "text": "ACL we are going to grant bad guide the rights to DC sync on the domain object",
    "start": "1636310",
    "end": "1641380"
  },
  {
    "text": "and again you need domain admin rights to implement this backdoor we're going",
    "start": "1641380",
    "end": "1646420"
  },
  {
    "text": "to ensure the rights are set and now we're going to oh yet you see DF",
    "start": "1646420",
    "end": "1653320"
  },
  {
    "text": "replication get changes all that Sid matches so our attacker now has the rights to DC sync any account in the",
    "start": "1653320",
    "end": "1659740"
  },
  {
    "text": "entire domain I'm going to switch over and you see up here I have a context ocation right in the context of bad guy",
    "start": "1659740",
    "end": "1665140"
  },
  {
    "text": "I tried to DC sync previously I got nothing but now after I implement the backdoor I have the ability to get this",
    "start": "1665140",
    "end": "1671200"
  },
  {
    "text": "sensitive key material so kind of cool nothing too crazy yet alright so the",
    "start": "1671200",
    "end": "1681790"
  },
  {
    "text": "next one we won't go into all the detail for MSD holder but a quick summary is it essentially functions as a permission",
    "start": "1681790",
    "end": "1687790"
  },
  {
    "start": "1682000",
    "end": "1682000"
  },
  {
    "text": "template for sensitive accounts so the backdoor is an attacker grant either force change password generic all on the",
    "start": "1687790",
    "end": "1695050"
  },
  {
    "text": "admin SD holder object that's very special object in Active Directory then every 60 minutes a special process",
    "start": "1695050",
    "end": "1701140"
  },
  {
    "text": "called the security descriptor propagator process or SD prop will run and I'll take the permissions that are",
    "start": "1701140",
    "end": "1707260"
  },
  {
    "text": "on Aven SD holder and it'll take those and clone them to every single protected user and group in Active Directory",
    "start": "1707260",
    "end": "1713170"
  },
  {
    "text": "enterprise admin the counter operators domain admins you know things that are usually identified by admin count equals",
    "start": "1713170",
    "end": "1719830"
  },
  {
    "text": "one then the attacker hides their account their principal their own their own account using the methods described",
    "start": "1719830",
    "end": "1726190"
  },
  {
    "text": "so to execute the attacker just whenever they want five years from now force resets the password for any domain",
    "start": "1726190",
    "end": "1732460"
  },
  {
    "text": "administrator in the entire domain and the cool thing with that Mineski holder is if defenders find the you know that",
    "start": "1732460",
    "end": "1742030"
  },
  {
    "text": "backdoor r1 domain admin if they don't fix it on the MSD holder and they aren't aware of it then FC prop will just go",
    "start": "1742030",
    "end": "1747280"
  },
  {
    "text": "put the backdoor back in for you so again we're starting from a different use of",
    "start": "1747280",
    "end": "1752889"
  },
  {
    "text": "this time bag guy to load up our view do the same steps we're going to show the oh you location for the bad guys users",
    "start": "1752889",
    "end": "1758470"
  },
  {
    "text": "totes not evolve so this is so we can hide it later on from enumeration now we're going to grant the bad guy - all",
    "start": "1758470",
    "end": "1765369"
  },
  {
    "text": "rights generic all rights on to the admin SD holder object using again Power",
    "start": "1765369",
    "end": "1770679"
  },
  {
    "text": "View for ad domain object ACL then we're going to change the owner a bad guy - -",
    "start": "1770679",
    "end": "1776739"
  },
  {
    "text": "to himself so the first part was the backdoor and now we're going to hide the principle so change the owner we're",
    "start": "1776739",
    "end": "1781809"
  },
  {
    "text": "going to get some pointer basically some references the raw objects of the user and the owe you then we're going to add",
    "start": "1781809",
    "end": "1787960"
  },
  {
    "text": "a custom ace that did not I see everyone said s110 the right to enumerate the",
    "start": "1787960",
    "end": "1793179"
  },
  {
    "text": "object itself directly so if we do this and leave it now EE Nevins could still see the existence of the object in a dog",
    "start": "1793179",
    "end": "1799840"
  },
  {
    "text": "but they couldn't interact with it now we're going to deny everyone the right to list the children of the owe you that",
    "start": "1799840",
    "end": "1806350"
  },
  {
    "text": "the user is a part of so deny list children that same s110 we're going to",
    "start": "1806350",
    "end": "1812590"
  },
  {
    "text": "commit those changes we're going to wait 60 minutes for SD prop to run we're back",
    "start": "1812590",
    "end": "1818169"
  },
  {
    "text": "we're going to check if those rights propagated to a domain admin named EA we see okay we see the SID 1 173 now domain",
    "start": "1818169",
    "end": "1825850"
  },
  {
    "text": "admins could still enumerate the deckle on this but the domain admin cannot find",
    "start": "1825850",
    "end": "1832450"
  },
  {
    "text": "the bad guy to through LDAP searching it just it's not there now I'm the refresh",
    "start": "1832450",
    "end": "1837850"
  },
  {
    "text": "and a duck and that guy disappeared even though he's still there I can still log in as him and I still",
    "start": "1837850",
    "end": "1843070"
  },
  {
    "text": "have the ability now to use bad guy to to force reset the domain admin password using Power View again and now I can do",
    "start": "1843070",
    "end": "1850210"
  },
  {
    "text": "a run as for the DA and log back in and I can do this for any protected user in",
    "start": "1850210",
    "end": "1855879"
  },
  {
    "text": "the entire domain and then don't like you even try to resolve the SID though my name is can't even resolve the SID",
    "start": "1855879",
    "end": "1861700"
  },
  {
    "text": "for this in the principle kind of cool little little cool or right using some Mostel fremitus",
    "start": "1861700",
    "end": "1867960"
  },
  {
    "text": "all right that was expectation all right two laps we don't have a video for this one but lapses microsoft local",
    "start": "1871830",
    "end": "1878279"
  },
  {
    "text": "administrator password solution like Andy mentioned it's basically a set of client-side extension than schema extensions that allow the computer to",
    "start": "1878279",
    "end": "1885059"
  },
  {
    "text": "change its password to a writ local I'm and password to a random value every 30 days and then it stores that in that MS",
    "start": "1885059",
    "end": "1891830"
  },
  {
    "text": "MTS admin password attribute that's protected by des control access it's administered by these admin PWD PS",
    "start": "1891830",
    "end": "1899340"
  },
  {
    "text": "command lights there's a specific function that they provide called find Aven PWD extended rights which you can",
    "start": "1899340",
    "end": "1905370"
  },
  {
    "text": "audit who actually has these MS mcs so the problem is this command lit was",
    "start": "1905370",
    "end": "1911549"
  },
  {
    "text": "built to enumerate the typical ways these rights are delegated through normal processes and Active Directory",
    "start": "1911549",
    "end": "1917880"
  },
  {
    "text": "which makes sense it was not meant as a security audit type protection it was meant as oh you you ran through normal",
    "start": "1917880",
    "end": "1924539"
  },
  {
    "text": "delegation for laps and you found okay you know here here's who you actually delegate it to so here is actually the",
    "start": "1924539",
    "end": "1932029"
  },
  {
    "text": "not comprehensive list because we found some a little bit more after we submitted the slides and the white paper",
    "start": "1932029",
    "end": "1937679"
  },
  {
    "text": "actually is updated for it but these are most of the cases where someone has the ability to read the admin password you",
    "start": "1937679",
    "end": "1944220"
  },
  {
    "text": "have the ideas control access and there's several like inheritance cases generic all because that's going to",
    "start": "1944220",
    "end": "1949679"
  },
  {
    "text": "apply all these extended rights and then object control you know are you the owner can you modify the DAC own can you",
    "start": "1949679",
    "end": "1955440"
  },
  {
    "text": "modify the owner unfortunately the official command --let misses a couple",
    "start": "1955440",
    "end": "1960510"
  },
  {
    "text": "of things there's a couple logic flaws so des control access if it's there on the oh you once inherited if it's",
    "start": "1960510",
    "end": "1966840"
  },
  {
    "text": "inherited to all descendant objects instead of just computers that is not checked for the owner isn't checked for",
    "start": "1966840",
    "end": "1972779"
  },
  {
    "text": "then right dackel and right owner isn't checked for and also it only analyzes oh",
    "start": "1972779",
    "end": "1978419"
  },
  {
    "text": "use and optionally computer objects in those OU's it does not analyze the default container for users and",
    "start": "1978419",
    "end": "1984360"
  },
  {
    "text": "computers so you know those can still have labs installed so example a normal",
    "start": "1984360",
    "end": "1990870"
  },
  {
    "text": "user can't read the MSMC s admin password this is what we want this is normal so we had John Smith you know he",
    "start": "1990870",
    "end": "1997740"
  },
  {
    "text": "can't at the bottom there get the main computer for exchange he can't actually read the password and you see running that lapse command let define admin",
    "start": "1997740",
    "end": "2003980"
  },
  {
    "text": "password rights for servers you see under extended rightsholders we have system domain admins and server admins so that shows",
    "start": "2003980",
    "end": "2011190"
  },
  {
    "text": "that John is not part of server admins because he doesn't have that group delegated right now we had a malicious",
    "start": "2011190",
    "end": "2017970"
  },
  {
    "text": "ace entry and again this it's a lot of text we explain it step by step in the white paper we're going to add a",
    "start": "2017970",
    "end": "2023700"
  },
  {
    "text": "specifically crafted ace that exploits the inheritance flaw we're going to add this to the Oh you so this is going to",
    "start": "2023700",
    "end": "2030419"
  },
  {
    "text": "propagate down and now a domain user at the bottom there that same guy John",
    "start": "2030419",
    "end": "2035940"
  },
  {
    "start": "2032000",
    "end": "2032000"
  },
  {
    "text": "Smith can read the local laps password for any computer in that oh you but the",
    "start": "2035940",
    "end": "2041700"
  },
  {
    "text": "official commandlets don't actually show John Smith is actually showing up as a delegated you know access holder so you",
    "start": "2041700",
    "end": "2049618"
  },
  {
    "text": "could set this right to these computers that have laps installed and everyone thinks it's protected and your",
    "start": "2049619",
    "end": "2054720"
  },
  {
    "text": "administrator or your attacker account has the ability to read the local admin password Andrey compromised any of those",
    "start": "2054720",
    "end": "2060148"
  },
  {
    "text": "machines that will ok so I'm a little",
    "start": "2060149",
    "end": "2065220"
  },
  {
    "start": "2063000",
    "end": "2063000"
  },
  {
    "text": "bit biased but this is my favorite one this has my philosophy this has to do with some the exchange server",
    "start": "2065220",
    "end": "2071190"
  },
  {
    "text": "installation process which if you've ever done that you know how challenging that can potentially be especially the",
    "start": "2071190",
    "end": "2077579"
  },
  {
    "text": "upgrade process so when you install exchange server multiple things happen exchange as many security groups of the",
    "start": "2077579",
    "end": "2084839"
  },
  {
    "text": "domain it extends the Active Directory schema it adds properties to several different object classes in Active Directory and",
    "start": "2084839",
    "end": "2091908"
  },
  {
    "text": "it gives itself full control over several objects in Active Directory used",
    "start": "2091909",
    "end": "2098069"
  },
  {
    "text": "to be including the admin FC holder the domain object domain admins group etc",
    "start": "2098069",
    "end": "2103650"
  },
  {
    "text": "now with exchange 2016 with exchange 2013 and with exchange 2007 sp1 and",
    "start": "2103650",
    "end": "2111150"
  },
  {
    "text": "forward it's every object in the domain has it has full control over with the",
    "start": "2111150",
    "end": "2116220"
  },
  {
    "text": "exception of anything that has that admin count equals one so anything protected by a man SD hole right exactly yep so before 2007 sp1",
    "start": "2116220",
    "end": "2126960"
  },
  {
    "text": "Exchange gave itself right tackle to the domain object and we have seen in multiple real environments where these",
    "start": "2126960",
    "end": "2133920"
  },
  {
    "text": "groups have full control of everything including the domain object including admins group so here's how this backdoor",
    "start": "2133920",
    "end": "2142110"
  },
  {
    "text": "works what we're going to do we're going to ride the existing privilege that Exchange has and we're going to backdoor an object that has the same privilege",
    "start": "2142110",
    "end": "2149220"
  },
  {
    "text": "bike security of your delegation so this is going to be extremely hard to find first of all we're going to find one of",
    "start": "2149220",
    "end": "2155640"
  },
  {
    "text": "these non protected security groups that has local admin rights onto an exchange server the exchange servers when you",
    "start": "2155640",
    "end": "2162810"
  },
  {
    "text": "install exchange server in Active Directory they're added to a group called exchange secure the exchange",
    "start": "2162810",
    "end": "2168570"
  },
  {
    "text": "trusted the exchange trusted subsystem yeah the mouthful that group then will have",
    "start": "2168570",
    "end": "2174780"
  },
  {
    "text": "all of that control and active directory that of the numerating before we're going to grant authenticated users full",
    "start": "2174780",
    "end": "2181350"
  },
  {
    "text": "control over that security group that has admin rights to the exchange server we're going to change the owner of the",
    "start": "2181350",
    "end": "2188370"
  },
  {
    "text": "group to the exchange server and then we're going to deny read permissions on",
    "start": "2188370",
    "end": "2194010"
  },
  {
    "text": "that group to the everyone principle so nobody's going to be able to see what",
    "start": "2194010",
    "end": "2199500"
  },
  {
    "text": "the dackel is on this group that we just backdoored so how do we execute this first of all we're going to regain",
    "start": "2199500",
    "end": "2205410"
  },
  {
    "text": "access Active Directory we're going to and we can do this as any user we're",
    "start": "2205410",
    "end": "2210810"
  },
  {
    "text": "going to add ourselves to that backdoored security group then we're going to we're going to use our newfound",
    "start": "2210810",
    "end": "2216570"
  },
  {
    "text": "local admin rights on that exchange server to execute commands as the system",
    "start": "2216570",
    "end": "2221820"
  },
  {
    "text": "user on that computer which when you do that you have the same privileges that the computer object in",
    "start": "2221820",
    "end": "2227370"
  },
  {
    "text": "Active Directory has yeah so for any network traffic when you're running a system it's going to use the computer",
    "start": "2227370",
    "end": "2232770"
  },
  {
    "text": "account for the actual l-dub traffic executive directory and so like I said because many times the exchange trusted",
    "start": "2232770",
    "end": "2238170"
  },
  {
    "text": "subsystem has full control of everything that means that the exchange server itself can DC sync so we have a video of",
    "start": "2238170",
    "end": "2244410"
  },
  {
    "text": "this this one it's pretty cool there's",
    "start": "2244410",
    "end": "2249420"
  },
  {
    "text": "our last video all right so again here's here's the bloodhound interface and what we're going to do is we're going to find",
    "start": "2249420",
    "end": "2254610"
  },
  {
    "text": "the security group that we want to backdoor so the domain admins group we're going to look at transitive object",
    "start": "2254610",
    "end": "2260370"
  },
  {
    "text": "controllers and here we have the exchange trusted",
    "start": "2260370",
    "end": "2266760"
  },
  {
    "text": "subsystem which is populated with the exchange servers then we will select one",
    "start": "2266760",
    "end": "2272070"
  },
  {
    "text": "of those exchange servers and we're going to see who it is that has effective local admin rights against that box so we're going to we're going",
    "start": "2272070",
    "end": "2277920"
  },
  {
    "text": "to do exchange 0 0 1 again this is how bloodhound can be used to plan these types of backdoors we're going to look",
    "start": "2277920",
    "end": "2284190"
  },
  {
    "text": "at who the unrolled admins are against this box which there are seven users that have local admin rights going from",
    "start": "2284190",
    "end": "2291240"
  },
  {
    "text": "right to left that's the computer then there's a group that has Evan rights then you can see a group as belonging to",
    "start": "2291240",
    "end": "2297180"
  },
  {
    "text": "that group and then again there's a third group that belongs in this nested group structure this group here server",
    "start": "2297180",
    "end": "2304200"
  },
  {
    "text": "back up to here - this is the group that we're going to backdoor that's going to give us access to everything again we're",
    "start": "2304200",
    "end": "2310530"
  },
  {
    "text": "going to import Power View and we're doing this at the domain admin we're installing the backdoor we're going to",
    "start": "2310530",
    "end": "2315960"
  },
  {
    "text": "get the we're going to the raw directory entry for the object for the group we're",
    "start": "2315960",
    "end": "2321750"
  },
  {
    "text": "going to grant authenticated users full control of the security group then we're",
    "start": "2321750",
    "end": "2327869"
  },
  {
    "text": "going to change the the owner of the object to an exchange server just the same exchange server that we're going to",
    "start": "2327869",
    "end": "2333480"
  },
  {
    "text": "be targeting for our backdoor done and",
    "start": "2333480",
    "end": "2338510"
  },
  {
    "text": "then finally we're going to deny read permissions on this group of the everyone principles so this is an anti",
    "start": "2338510",
    "end": "2343890"
  },
  {
    "text": "audit measure that will make it difficult to find this backdoor now",
    "start": "2343890",
    "end": "2349890"
  },
  {
    "text": "that's it because I didn't hear yeah we come back a year later we're on the computer called Windows eight zero zero one as some user called Robbie",
    "start": "2349890",
    "end": "2356609"
  },
  {
    "text": "Winchester because we have full control of the server backup to your group we're going to add ourselves to that group",
    "start": "2356609",
    "end": "2362900"
  },
  {
    "text": "done now we're going to use PS exec and we're going to run mimic hats on the",
    "start": "2362900",
    "end": "2368280"
  },
  {
    "text": "remote system in the system user context there are obviously better offset ways to do this now we are running as a",
    "start": "2368280",
    "end": "2376079"
  },
  {
    "text": "system user on that exchange system and we're going to use that privilege to Kerber or to a DC sync the curb TDT",
    "start": "2376079",
    "end": "2382170"
  },
  {
    "text": "account and we're done now we have the NT hash of the curb TGT we can create a golden ticket we own the entire domain",
    "start": "2382170",
    "end": "2388740"
  },
  {
    "text": "it thanks again to Vincent and Benjamin yes sir Thank You Vince it lets you and Benjamin Delfy",
    "start": "2388740",
    "end": "2395299"
  },
  {
    "text": "all right so there's one last scenario that we don't have a video for because it's so kind of complex but I'll try to",
    "start": "2395460",
    "end": "2401430"
  },
  {
    "text": "talk through it so again you can do change of this stuff you can let your",
    "start": "2401430",
    "end": "2406530"
  },
  {
    "text": "imagination go wild so the back door for this is the attacker grants them his or",
    "start": "2406530",
    "end": "2411750"
  },
  {
    "text": "her self generic all to any user in the domain if that user doesn't have to be",
    "start": "2411750",
    "end": "2417270"
  },
  {
    "text": "privileged it can be anybody and then you grants that kind of patsy or proxy user right dackel on the",
    "start": "2417270",
    "end": "2424260"
  },
  {
    "text": "default domain controller CP oh that's the entire backdoor so this what I like",
    "start": "2424260",
    "end": "2429450"
  },
  {
    "text": "about this approach of using kind of a proxy or Apache user is that even if instant responders are you know domain",
    "start": "2429450",
    "end": "2437010"
  },
  {
    "text": "admins find the backdoor for the right tackle and domain controllers GPO they",
    "start": "2437010",
    "end": "2442410"
  },
  {
    "text": "would then have to walk back up saying oh is there actually a chained backdoor to this user which is what we have with",
    "start": "2442410",
    "end": "2447900"
  },
  {
    "text": "generic all you think about it you could go back seven levels right you get a force reset passwords in generic o all",
    "start": "2447900",
    "end": "2453450"
  },
  {
    "text": "the way down the line so you have to model the entire system in order to find",
    "start": "2453450",
    "end": "2458610"
  },
  {
    "text": "these types of things because we're basically building attack chains out and it's going to get harder and harder and harder because every time it's going to",
    "start": "2458610",
    "end": "2464520"
  },
  {
    "text": "branch out with possibilities and they would have to investigate every single option so for execution the attacker grant this proxy user or",
    "start": "2464520",
    "end": "2472650"
  },
  {
    "text": "they they force reset their password then they use that access to add a new",
    "start": "2472650",
    "end": "2478050"
  },
  {
    "text": "deckle to the GPO because they had that right back hold permission so they add a new dackel that grants the Patsy user",
    "start": "2478050",
    "end": "2484080"
  },
  {
    "text": "that GPC files this path modification so we're using we have the ability to",
    "start": "2484080",
    "end": "2489120"
  },
  {
    "text": "modify the access control information and we're using that to grant ourselves the right to actually modify the GPO",
    "start": "2489120",
    "end": "2495210"
  },
  {
    "text": "itself then the attacker uses that account to grant SC enabled delegation",
    "start": "2495210",
    "end": "2500640"
  },
  {
    "text": "privilege to the attacker and this is this is I wrote some stuff about this",
    "start": "2500640",
    "end": "2505650"
  },
  {
    "text": "and there's some other information about this for a constrained delegation type of tax don't have time to go into it but super super cool button result is with",
    "start": "2505650",
    "end": "2512850"
  },
  {
    "text": "that that GPO is pushed down the attacker user now has se delegation privilege on the domain controller and",
    "start": "2512850",
    "end": "2518280"
  },
  {
    "text": "it can modify the MS allowed to delegate to parameter and then they can use mimic",
    "start": "2518280",
    "end": "2524640"
  },
  {
    "text": "caps and kikyo to actually execute a constrained delegation attack and then DC sink or gained complete access",
    "start": "2524640",
    "end": "2531210"
  },
  {
    "text": "or you know to the entire domain andrey compromised a domain controller but again that's really subtle right it's just generic all you just need rights to",
    "start": "2531210",
    "end": "2537990"
  },
  {
    "text": "one user and then you chain this stuff back and then one person at the end of the chain actually has the modification",
    "start": "2537990",
    "end": "2543270"
  },
  {
    "text": "rights you care about so defenses all is not lost the you know I mentioned event log stuff",
    "start": "2543270",
    "end": "2550319"
  },
  {
    "start": "2547000",
    "end": "2547000"
  },
  {
    "text": "the difficulty is you have to have your event log tuned at the time the backdoor is actually implemented so if you find",
    "start": "2550319",
    "end": "2556619"
  },
  {
    "text": "these backdoors in your environment and you don't have you know five it was put in five years ago and you don't have historical information you're not going",
    "start": "2556619",
    "end": "2562650"
  },
  {
    "text": "to know who put it in even if you can tell it's malicious for example though you know tune up your domain controllers",
    "start": "2562650",
    "end": "2569970"
  },
  {
    "text": "now with event log logging we're actually going to put out some guidance on how to tune with shackles and event",
    "start": "2569970",
    "end": "2575339"
  },
  {
    "text": "logs for every single attack print if we talked about we're not bad guys we promise we want to give the full complete defensive information to bring",
    "start": "2575339",
    "end": "2581369"
  },
  {
    "text": "attention to this problem so that guidance will be out in the next couple of months but for example you know event",
    "start": "2581369",
    "end": "2586470"
  },
  {
    "text": "log four seven three eight a user account which change and then filtering by the property modified per se service principle name or something like that",
    "start": "2586470",
    "end": "2593390"
  },
  {
    "text": "also we've been diving into some replication metadata I have a post coming out in a couple week on this but",
    "start": "2593390",
    "end": "2598770"
  },
  {
    "start": "2594000",
    "end": "2594000"
  },
  {
    "text": "with domain controllers replicate data between each other you know there there's information that's kind of left",
    "start": "2598770",
    "end": "2604079"
  },
  {
    "text": "over this metadata that says hey these properties change so using this replication metadata you",
    "start": "2604079",
    "end": "2609990"
  },
  {
    "text": "can figure out when a property was modified and you can tell which domain controller the modification originated",
    "start": "2609990",
    "end": "2616109"
  },
  {
    "text": "on so you can use this to figure out oh crap there was you know something put in here and then go straight to that one",
    "start": "2616109",
    "end": "2621119"
  },
  {
    "text": "particular domain controller and if you have event log tuning you can figure out who did it so again point you in the right",
    "start": "2621119",
    "end": "2626190"
  },
  {
    "text": "direction but doesn't give you the full picture you have to have the event marks for it there's not really another way to do like kind of forensics on the NTDs it",
    "start": "2626190",
    "end": "2633710"
  },
  {
    "text": "also suckled so we didn't really cover these but the system access control lists they're aces that specify the",
    "start": "2633710",
    "end": "2640050"
  },
  {
    "text": "types of access attempts to generate audit records and security event log of domain controllers so basically you can build cycles that would produce",
    "start": "2640050",
    "end": "2646650"
  },
  {
    "text": "additional more granular events that say hey somebody modified or tried to modify these particular properties so a lot of",
    "start": "2646650",
    "end": "2654060"
  },
  {
    "text": "people think like oh there's just all we don't want to use sack holes because these have been around forever but almost no one we see uses them probably",
    "start": "2654060",
    "end": "2660750"
  },
  {
    "text": "because they think we have to saca lever ething and it's so much data and blah blah blah what we think is you can start building Sacco's",
    "start": "2660750",
    "end": "2666150"
  },
  {
    "text": "that actually target just the object takeover primitives so then you can generate just those events and you're",
    "start": "2666150",
    "end": "2671760"
  },
  {
    "text": "cutting down one to two orders of magnitude or more the actual data you're gathering so again we want to build a",
    "start": "2671760",
    "end": "2676830"
  },
  {
    "text": "complete guide on how to use tackle to actually detect everything we're talking about at least again that's for",
    "start": "2676830",
    "end": "2682260"
  },
  {
    "text": "modification it's the back doors already there that's much much harder to actually detect and there's a little",
    "start": "2682260",
    "end": "2688710"
  },
  {
    "text": "more information that bitly link and we're going to have a post out of the next few months future work we tried to",
    "start": "2688710",
    "end": "2693840"
  },
  {
    "start": "2692000",
    "end": "2692000"
  },
  {
    "text": "implement null tackles in that for Active Directory objects because we thought it'd be funny but um you know we",
    "start": "2693840",
    "end": "2699960"
  },
  {
    "text": "turn them in feel like that and also there's a bit in the header control bit SC deck will present the but any",
    "start": "2699960",
    "end": "2705900"
  },
  {
    "text": "attempts to modify the NT security descriptor in that way on an object remotely those bits are ignored from",
    "start": "2705900",
    "end": "2712230"
  },
  {
    "text": "what we can tell so we might be able to do it if you have codex a system on a DC but we can't actually do it remotely so what this works another local you",
    "start": "2712230",
    "end": "2719040"
  },
  {
    "text": "want to look into that we also want to research additional control relationships again we are not saying our control object takeover taxonomy is",
    "start": "2719040",
    "end": "2725850"
  },
  {
    "text": "complete we want to expand it so credits huge huge huge shout out to our work",
    "start": "2725850",
    "end": "2731250"
  },
  {
    "text": "mate inspector Lee Christensen TIFF can he really helped us with some the last research and you know reviewed the white",
    "start": "2731250",
    "end": "2737100"
  },
  {
    "text": "papers and all that jet Dimmick was awesome undoing content review everyone else's Specter out so our team you know",
    "start": "2737100",
    "end": "2743280"
  },
  {
    "text": "a huge amount we did not do this on our own by any means also Mac Raber who used to work with us he he did some great",
    "start": "2743280",
    "end": "2749370"
  },
  {
    "text": "review and did the kind of content feedback and everything so I think we have what maybe like three minutes or",
    "start": "2749370",
    "end": "2754440"
  },
  {
    "text": "something like that four minutes okay so we should have some time for a couple questions if anyone's",
    "start": "2754440",
    "end": "2759600"
  },
  {
    "text": "interested hopefully hopefully we scared you just a little bit but we want to bring attention to this whole thing No no questions if anybody is walking up",
    "start": "2759600",
    "end": "2767640"
  },
  {
    "text": "or thinking about walking up a few other people that I would just like to repeat are things for Lucario and Emmanuel",
    "start": "2767640",
    "end": "2774030"
  },
  {
    "text": "broth formerly from ANSI mark Gamache at",
    "start": "2774030",
    "end": "2779310"
  },
  {
    "text": "Microsoft Robin Granberg at Microsoft Vincent with - we can't think of enough all of us owe",
    "start": "2779310",
    "end": "2784470"
  },
  {
    "text": "him a lot Benjamin Delfy the list goes on and on and on but yeah it's on yeah thank you",
    "start": "2784470",
    "end": "2790290"
  },
  {
    "text": "um",
    "start": "2790290",
    "end": "2792770"
  }
]