[
  {
    "text": "[Music]",
    "start": "1910",
    "end": "30070"
  },
  {
    "text": "hi I'm uh Dave mayor uh can everybody hear me cool too loud not not loud enough",
    "start": "31000",
    "end": "38239"
  },
  {
    "text": "stop touching that uh you are in the Deep knowledge track trust no one not even yourself or",
    "start": "38239",
    "end": "44960"
  },
  {
    "text": "the weak link might be your build tools uh first of all let me start off a little bit I'm Dave mayor I'm from the",
    "start": "44960",
    "end": "53199"
  },
  {
    "text": "ISS export research and development group I have to preface by saying that uh although this speech uh appears to",
    "start": "53199",
    "end": "60760"
  },
  {
    "text": "have uh very malicious implications uh one of the one of the things that we do in the X force is",
    "start": "60760",
    "end": "67680"
  },
  {
    "text": "identify new security problems before they actually become security problems so uh that's actually one of",
    "start": "67680",
    "end": "75040"
  },
  {
    "text": "the reasons this came about is to shed light on a subject that hasn't had much pressure",
    "start": "75040",
    "end": "80520"
  },
  {
    "text": "discussion so without further Ado let's start off so one of the reasons why you might",
    "start": "80520",
    "end": "88560"
  },
  {
    "text": "want to think about something like this this is um simple security holes are becoming a thing in the past they're",
    "start": "88560",
    "end": "94280"
  },
  {
    "text": "getting harder and harder to find there's more protection being built into uh products uh developers in general are",
    "start": "94280",
    "end": "101119"
  },
  {
    "text": "getting better uh it's it's getting harder and harder to find simple problems that we all remember and love",
    "start": "101119",
    "end": "106399"
  },
  {
    "text": "so much like stir copy and get simple stack base overflows uh on the flip side the um the",
    "start": "106399",
    "end": "114719"
  },
  {
    "text": "increase in uh Heap overflows uh",
    "start": "114719",
    "end": "120119"
  },
  {
    "text": "is uh taking up some of slack but Heap overflows generally make a liability across platforms and service packs",
    "start": "120119",
    "end": "126600"
  },
  {
    "text": "somewhat hard and as I said before there's a lot more things like for instance uh stack protections being Shi",
    "start": "126600",
    "end": "132160"
  },
  {
    "text": "with a lot more links distributions now Microsoft's uh embracing it it's it's harder and harder to compromise things",
    "start": "132160",
    "end": "138080"
  },
  {
    "text": "in traditional way so now that they're uh so now that we've talked about the tools developers",
    "start": "138080",
    "end": "144200"
  },
  {
    "text": "themselves are becoming better more educated they're constantly bombarded with uh information about what what",
    "start": "144200",
    "end": "150319"
  },
  {
    "text": "makes bad code how to exploit it um a lot of information is becoming available",
    "start": "150319",
    "end": "156080"
  },
  {
    "text": "that hasn't been before uh to make actually uh to make developers better so",
    "start": "156080",
    "end": "161519"
  },
  {
    "text": "in addition to just not only the the built-in protection mechanisms uh the developers themselves are making code",
    "start": "161519",
    "end": "168319"
  },
  {
    "text": "safer so this isn't looking so good for people who want to compromise machines in addition that new security",
    "start": "168319",
    "end": "174879"
  },
  {
    "text": "Technologies are making it harder even with zero day exploits to reliably compromise uh uh",
    "start": "174879",
    "end": "181040"
  },
  {
    "text": "machines um IDs IPS firewall Gateway antivirus Technologies they're all being",
    "start": "181040",
    "end": "186159"
  },
  {
    "text": "deployed in record numbers now and it it it really makes uh like a single shot",
    "start": "186159",
    "end": "191360"
  },
  {
    "text": "exploit like if you had for instance a zero day send mail exploit it's it's",
    "start": "191360",
    "end": "196560"
  },
  {
    "text": "harder today to uh compromise a machine with it than uh than it would be like for instance four years ago the stateful",
    "start": "196560",
    "end": "203120"
  },
  {
    "text": "inspection and deep thread analys Technologies are becoming common place it's um It's kind",
    "start": "203120",
    "end": "211439"
  },
  {
    "text": "oh that means that um there's just better protection at borders of uh of a lot of",
    "start": "212159",
    "end": "218959"
  },
  {
    "text": "places um and remote attacks are becoming less likely to see even with zero days things like HTTP proxies May",
    "start": "218959",
    "end": "225840"
  },
  {
    "text": "connect back for Shell Code hard and believe me there's nothing worse than uh finding a a machine to compromise like",
    "start": "225840",
    "end": "231159"
  },
  {
    "text": "during a patient penetration test or something and uh launch and exploit it works but you can't get connect back",
    "start": "231159",
    "end": "236879"
  },
  {
    "text": "shell because the pro the the outgoing proxy is not allowing or something like that Gat is also another problem for",
    "start": "236879",
    "end": "242720"
  },
  {
    "text": "things like this reverse Nets and whatnot uh so",
    "start": "242720",
    "end": "248640"
  },
  {
    "text": "attackers sorry attackers have to start looking at at different places penetration testers and whatnot to start",
    "start": "248640",
    "end": "255319"
  },
  {
    "text": "looking at different places uh Overlook places uh in uh security architectures",
    "start": "255319",
    "end": "262079"
  },
  {
    "text": "of uh of companies uh last couple years a lot of people have been uh cutting",
    "start": "262079",
    "end": "267479"
  },
  {
    "text": "costs consolidating things a lot of people people are sharing resources that weren't being shared before and open",
    "start": "267479",
    "end": "273680"
  },
  {
    "text": "source projects are gaining a lot more popular popularity in uh Marketplace because of the low uh implementation",
    "start": "273680",
    "end": "279160"
  },
  {
    "text": "cost and the uh the relatively uh quick updates and whatnot to uh security",
    "start": "279160",
    "end": "284960"
  },
  {
    "text": "problems so uh th this actually presents a pretty interesting",
    "start": "284960",
    "end": "290720"
  },
  {
    "text": "um attack Avenue for somebody and that is uh attacking the compiler or Trojan",
    "start": "290720",
    "end": "298039"
  },
  {
    "text": "compiler so that as uh as software is being built something malicious is done",
    "start": "298039",
    "end": "303479"
  },
  {
    "text": "to it or backdoor is being done to it uh there's a couple questions that",
    "start": "303479",
    "end": "309479"
  },
  {
    "text": "when I propose this question to people I always got the first one was always can attackers really back to the code as it's being built there's no reason they",
    "start": "309479",
    "end": "316440"
  },
  {
    "text": "can't it's a it's a very simple thing actually uh well my answer of course is uh yes so this would be a boring speech",
    "start": "316440",
    "end": "324319"
  },
  {
    "text": "you guys look for it already will it be noticed well it depends you know remember does every was anybody here at",
    "start": "324319",
    "end": "330360"
  },
  {
    "text": "the keynote this morning and the guy kept uh making that strange noise so when you breathe straight down the mic",
    "start": "330360",
    "end": "335479"
  },
  {
    "text": "with your nose it makes that whapping noise I uh I just noticed that that's kind of",
    "start": "335479",
    "end": "341040"
  },
  {
    "text": "[Music] annoying will it be noticed well it depends on the payload what the attacker",
    "start": "341040",
    "end": "347840"
  },
  {
    "text": "is hoping to accomplish with this uh more than likely you're not going to uh",
    "start": "347840",
    "end": "353560"
  },
  {
    "text": "unless you're doing deep inspection of of your binary after you build it and I don't know anybody that's currently",
    "start": "353560",
    "end": "358759"
  },
  {
    "text": "doing that uh you probably won't won't find this it also depends on uh what",
    "start": "358759",
    "end": "364560"
  },
  {
    "text": "kind of file format you're attacking I mean if you add an extra 180 lines to a PE binary more than likely somebody's",
    "start": "364560",
    "end": "370919"
  },
  {
    "text": "not going to notice that when it gets built uh and subtle OS change is like somebody decides that",
    "start": "370919",
    "end": "376880"
  },
  {
    "text": "uh an offset's suddenly going to change in in a compiler whatnot you might break",
    "start": "376880",
    "end": "382400"
  },
  {
    "text": "it so the this has a couple of problems with the Heap overflow reliability issues but it's still uh pretty",
    "start": "382400",
    "end": "389599"
  },
  {
    "text": "interesting Avenue is it easy the short answer to that is no the long answer to",
    "start": "389599",
    "end": "395039"
  },
  {
    "text": "that is no it's a very complex attack it requires uh deep knowledge of the",
    "start": "395039",
    "end": "402000"
  },
  {
    "text": "compiler you're using of the file format Target and uh the operating system",
    "start": "402000",
    "end": "408840"
  },
  {
    "text": "itself originally the speech was designed to Encompass uh in-depth analysis of the L and uh PE binaries as",
    "start": "408840",
    "end": "416360"
  },
  {
    "text": "as well as the abis which application binary interface for the Target operating systems but",
    "start": "416360",
    "end": "422080"
  },
  {
    "text": "when I did the dry run of that speeches was somewhere near the neighborhood of 6 hours so I didn't think Jeff would like",
    "start": "422080",
    "end": "427120"
  },
  {
    "text": "that so I had to cut it down a little bit and those were the uh the PE and the elf spe uh uh in-depth stuff and the Avi",
    "start": "427120",
    "end": "433879"
  },
  {
    "text": "stuff had to go um but in order to even",
    "start": "433879",
    "end": "439000"
  },
  {
    "text": "think about undertaking something like this you really need to have a deep understanding of your target you in uh in addition to that",
    "start": "439000",
    "end": "446000"
  },
  {
    "text": "before you could hope to uh use this in a penetration test or uh similar Avenues you there's a couple things you need",
    "start": "446000",
    "end": "451960"
  },
  {
    "text": "first of all access to the build machine now a lot of people went originally POS this idea uh respond with who's going to",
    "start": "451960",
    "end": "459759"
  },
  {
    "text": "know you know who wouldn't notice you recompiling somebody's compiler uh on build machines often this requires just",
    "start": "459759",
    "end": "465560"
  },
  {
    "text": "replacing a single library or so a single file and a lot of times in a lot",
    "start": "465560",
    "end": "470639"
  },
  {
    "text": "of default like host space installations nobody really covers that that much they worry more about executables and things",
    "start": "470639",
    "end": "476960"
  },
  {
    "text": "like that they they kind of leave the libraries alone for some reason uh as I said you need expert",
    "start": "476960",
    "end": "482400"
  },
  {
    "text": "knowledge a compiler and output file format and expert creation of the payload this isn't quite just like",
    "start": "482400",
    "end": "488159"
  },
  {
    "text": "riding a reverse shell for Shell Cod or whatnot uh you have to be able to if you",
    "start": "488159",
    "end": "493680"
  },
  {
    "text": "want to remain undetectable you have to have a goal in mind you have to be able to execute the goal uh at the",
    "start": "493680",
    "end": "500720"
  },
  {
    "text": "appropriate time and then allow the program to continue operation without uh breaking the flow because the the",
    "start": "500720",
    "end": "507080"
  },
  {
    "text": "biggest uh way a person can detect this is is it SE uh your program 6vs with a a",
    "start": "507080",
    "end": "513640"
  },
  {
    "text": "strange error message and a part of code that doesn't even seem really seem to exist as a developer um and as I said the payload",
    "start": "513640",
    "end": "521880"
  },
  {
    "text": "uh I'm using payload as an the code that's being added uh at build time it can range from anything to Shell access",
    "start": "521880",
    "end": "528519"
  },
  {
    "text": "to the ability to remotely track these binaries wherever they go what can the uh what can results of an attack like",
    "start": "528519",
    "end": "535399"
  },
  {
    "text": "this Shield well it really depends on your imagination and um your technical competency but if you are if you have",
    "start": "535399",
    "end": "543160"
  },
  {
    "text": "access to the compiler you can pretty much make the source code do whatever you want when it builds and a couple",
    "start": "543160",
    "end": "548360"
  },
  {
    "text": "examples of this are Email encryption programs for instance if somebody were to Trojan uh build a pgp uh they can it",
    "start": "548360",
    "end": "556000"
  },
  {
    "text": "can actually uh automatically add a back door key or something like that uh or encrypt the uh the contents of the",
    "start": "556000",
    "end": "562880"
  },
  {
    "text": "message with a key other than the one intended or save a copy of the message",
    "start": "562880",
    "end": "568079"
  },
  {
    "text": "uh SSL a lot of deals with encryption because that that's actually one of the more scary Avenues because just because",
    "start": "568079",
    "end": "574200"
  },
  {
    "text": "it's encrypted people feel they're safe from it and an attack methodology like this kind of would uh would break that",
    "start": "574200",
    "end": "581440"
  },
  {
    "text": "not because it's weaken the encryption itself but other ways SSL you can weaken or change the server keys or you can",
    "start": "581440",
    "end": "587079"
  },
  {
    "text": "allow uh Local Host to uh sniff the SSL Communications banking applications",
    "start": "587079",
    "end": "593160"
  },
  {
    "text": "everybody loves those they keep our money safe they can also uh create secret stores of personal information or",
    "start": "593160",
    "end": "598800"
  },
  {
    "text": "transmit information about you to a third party Source or last but not least the kernel and if you are able to Chen a",
    "start": "598800",
    "end": "607000"
  },
  {
    "text": "compiler that's building a kernel for an operating system the sky is limit you can do whatever you pretty much want uh",
    "start": "607000",
    "end": "613240"
  },
  {
    "text": "in the binary how portable is it well it's not really and a lot of people are going to laugh at this the 132 versus Unix versus",
    "start": "613240",
    "end": "620519"
  },
  {
    "text": "uh Linux thing but I get this a lot uh especially with uh tools that do cross compulation uh a question often asked is",
    "start": "620519",
    "end": "628880"
  },
  {
    "text": "uh can you build a uh a PE binary with the same payload as the elf binary the short",
    "start": "628880",
    "end": "634519"
  },
  {
    "text": "answer is yes but you need to put a lot more work into it the long answer is I wouldn't really really really attempt",
    "start": "634519",
    "end": "640480"
  },
  {
    "text": "that and like I said it depends on the actual payload and I really wouldn't want to encourage that uh across file",
    "start": "640480",
    "end": "649480"
  },
  {
    "text": "formats PE versus L versus cough and I I know somebody might point out the uh PE is an evolution of cough and whatnot but",
    "start": "649480",
    "end": "656399"
  },
  {
    "text": "it uh there's still some operating systems I've come across that it just used the old golf format uh which is why",
    "start": "656399",
    "end": "662839"
  },
  {
    "text": "it's on here they're they're all very well PE versus elf are very different so",
    "start": "662839",
    "end": "668160"
  },
  {
    "text": "more than likely uh once again without constructing your compile uh basically",
    "start": "668160",
    "end": "673279"
  },
  {
    "text": "writing two completely different back do for the compiler you're not going to have really much much use for this and",
    "start": "673279",
    "end": "679720"
  },
  {
    "text": "uh it depends on where the payload is hidden we're going to talk about places to put your payload and things to do with it a little late a little later but",
    "start": "679720",
    "end": "686240"
  },
  {
    "text": "this is this is a lot like the 132 versus Linux versus debate it it it might be possible but I don't really see",
    "start": "686240",
    "end": "692360"
  },
  {
    "text": "why you'd want to do it and across architecture is risk versus cisk uh this",
    "start": "692360",
    "end": "698399"
  },
  {
    "text": "is a little more different this depends on how the payload is encoded the example that was originally brought up",
    "start": "698399",
    "end": "703680"
  },
  {
    "text": "was Windows uh Windows NT used to run on excuse me Alpha and also on um you know",
    "start": "703680",
    "end": "710399"
  },
  {
    "text": "s86 so if uh you try uh troen a compiler to build a",
    "start": "710399",
    "end": "716079"
  },
  {
    "text": "program uh that runs you know well on uh x86 will it still work on an alpha",
    "start": "716079",
    "end": "722839"
  },
  {
    "text": "platform uh the answer is no uh because first of all they they're comp different platforms this is similar to like",
    "start": "722839",
    "end": "729240"
  },
  {
    "text": "downloading RPMs for different uh for different architectures for like red hat or something trying to make them learn",
    "start": "729240",
    "end": "734680"
  },
  {
    "text": "they're they're compile for different architectures uh there's a lot of",
    "start": "734680",
    "end": "740240"
  },
  {
    "text": "differences in here like the way the stack rows word size things like that and that would make uh it working across",
    "start": "740240",
    "end": "745959"
  },
  {
    "text": "platforms not really that that possible so the first one we're going to look at",
    "start": "745959",
    "end": "751040"
  },
  {
    "text": "the first thing we're going to start off with is uh is GCC uh anybody in here use",
    "start": "751040",
    "end": "756680"
  },
  {
    "text": "GCC to develop code software nobody you heard of",
    "start": "756680",
    "end": "762959"
  },
  {
    "text": "GCC awesome uh GCC is pretty ubiquity in uh in our industry because it pretty",
    "start": "762959",
    "end": "768800"
  },
  {
    "text": "much comes with every distribution of Linux or any uh any open source",
    "start": "768800",
    "end": "773920"
  },
  {
    "text": "um any open source operating system uh where does it come from who writes it it",
    "start": "773920",
    "end": "779360"
  },
  {
    "text": "comes from the gnu Foundation the G the gnu Foundation was originally released",
    "start": "779360",
    "end": "784399"
  },
  {
    "text": "May 23rd 1987 and the current version as of this writing is 3.4.0 it's written um free",
    "start": "784399",
    "end": "792120"
  },
  {
    "text": "software Foundation what is it it's more of a sweet than uh than a single tool I",
    "start": "792120",
    "end": "797160"
  },
  {
    "text": "used to work for a major university before I worked for ISS so I got to deal with a lot of uh computer science",
    "start": "797160",
    "end": "802920"
  },
  {
    "text": "students and whatnot and a lot of them had the idea that GCC or g++ was a single tool",
    "start": "802920",
    "end": "809760"
  },
  {
    "text": "and that uh it it it had a specific prpose and it only did one thing and",
    "start": "809760",
    "end": "815720"
  },
  {
    "text": "then they were always amazed to find out that you know depending on the front end or the back end of the compiler it",
    "start": "815720",
    "end": "821160"
  },
  {
    "text": "pretty much compile any language and I'll put it in pretty much any file format uh if you're more interested in",
    "start": "821160",
    "end": "827600"
  },
  {
    "text": "like the back ends um the link the list all the back ends are currently",
    "start": "827600",
    "end": "833199"
  },
  {
    "text": "supported that that's actually something I completely ran over uh is everybody does anybody here familiar with comp",
    "start": "833199",
    "end": "839600"
  },
  {
    "text": "technology internals whatnot all right well a compiler is",
    "start": "839600",
    "end": "845399"
  },
  {
    "text": "generally separated into two pieces uh the the front end and the back end I'm",
    "start": "845399",
    "end": "850600"
  },
  {
    "text": "I'm going to talk about those a lot so I guess I should go over it now the front end uh for those who don't know is generally language dependent for",
    "start": "850600",
    "end": "857360"
  },
  {
    "text": "instance you'd have a for uh for GCC you have a c front end you have a C++ front",
    "start": "857360",
    "end": "862639"
  },
  {
    "text": "end uh Java objective whatever you have these fs and they're uh they're language",
    "start": "862639",
    "end": "867959"
  },
  {
    "text": "specific and what they do is turn the langu uh turn the the source file into a",
    "start": "867959",
    "end": "873560"
  },
  {
    "text": "metal language that can be interpreted then by the back end the back end then is more uh Hardware dependent you know",
    "start": "873560",
    "end": "880440"
  },
  {
    "text": "uh backends that support i386 or arm or whatnot so that's uh that's a flow from",
    "start": "880440",
    "end": "885560"
  },
  {
    "text": "the front to the back um generally most of these attacks will be dependent on the front end uh back end wouldn't",
    "start": "885560",
    "end": "893240"
  },
  {
    "text": "really uh depending on how it's implemented you can get to some pretty haury things I Ed use GCC can I be affected by",
    "start": "893240",
    "end": "900839"
  },
  {
    "text": "this the answer is yes what does GCC actually do to the code we're going to go to phases of compiling does anybody",
    "start": "900839",
    "end": "907120"
  },
  {
    "text": "have GCC here I mean you can follow along pretty simply just right quick hello program and uh you know printf",
    "start": "907120",
    "end": "912839"
  },
  {
    "text": "whatever and then you can run through uh the phases of compilation the first thing that happens when you uh invoke",
    "start": "912839",
    "end": "918240"
  },
  {
    "text": "GCC for instance GCC hello.c is the driver gets inv votes and the driver is actually the uh the brains",
    "start": "918240",
    "end": "926199"
  },
  {
    "text": "of The Suite it's going to uh invoke the proper tool at the proper time and uh",
    "start": "926199",
    "end": "931560"
  },
  {
    "text": "basically take you from creating from your source file to an actual binary file so your pre-processor and if you",
    "start": "931560",
    "end": "937959"
  },
  {
    "text": "want to see your pre-processor outputs you can just run GCC space capital e in your source file and see what it looks",
    "start": "937959",
    "end": "944279"
  },
  {
    "text": "like after pre-processor you can uh what that does is that goes through and find all your pound includes uh things like",
    "start": "944279",
    "end": "950680"
  },
  {
    "text": "that put those into your source file things like that then there's the actual compiler and if you want to uh create an",
    "start": "950680",
    "end": "958000"
  },
  {
    "text": "object file is the output of the uh the compiler you can just do GCC uh- C and",
    "start": "958000",
    "end": "963160"
  },
  {
    "text": "what this is this is actually the uh the the the compiled uh code before the",
    "start": "963160",
    "end": "969560"
  },
  {
    "text": "assembler and the Linker so you can run gc-c and uh see what it looks like uh",
    "start": "969560",
    "end": "975120"
  },
  {
    "text": "it's it's a binary format so you're going to need some tools to uh take a look at it um we're going to talk about those",
    "start": "975120",
    "end": "981800"
  },
  {
    "text": "tools later uh then GC I list Optimizer is a different step but the optimizer uh",
    "start": "981800",
    "end": "988399"
  },
  {
    "text": "part of the actual C compiler so it was broken out more uh more for late later",
    "start": "988399",
    "end": "994639"
  },
  {
    "text": "uh later applications uh then there's the assembler in GCC D capital S we show",
    "start": "994639",
    "end": "1000040"
  },
  {
    "text": "you the output of the uh the assembler format uh this is uh you're you're pretty you're close to uh the machine",
    "start": "1000040",
    "end": "1006519"
  },
  {
    "text": "code at this point you're uh you're assem assembly right now and the only stages you're really waiting for is uh",
    "start": "1006519",
    "end": "1012279"
  },
  {
    "text": "linking loading and uh the linin loader next points where GCC modifies the",
    "start": "1012279",
    "end": "1018079"
  },
  {
    "text": "original code of course are the pre-processor to compiler or Optimizer the Linker and I was going to go over",
    "start": "1018079",
    "end": "1023839"
  },
  {
    "text": "optimizations a little bit but the uh the general rule of thumb here is optimation optimization only will break",
    "start": "1023839",
    "end": "1029760"
  },
  {
    "text": "this Le try to avoid those in in the compilation process uh how can attack or",
    "start": "1029760",
    "end": "1035120"
  },
  {
    "text": "use this to their advantage best placees to attack if you've got a Linux machine with you right now go and take a look in",
    "start": "1035120",
    "end": "1040520"
  },
  {
    "text": "user lib and you'll see a couple files called CRT Z crti things like that uh",
    "start": "1040520",
    "end": "1046918"
  },
  {
    "text": "this is a funny question and a lot of people don't know this where does your",
    "start": "1046919",
    "end": "1052000"
  },
  {
    "text": "code actually start executing when you write a program a lot of people the first thing they say is main uh and",
    "start": "1052000",
    "end": "1058880"
  },
  {
    "text": "that's not actually true uh when you load a binary into memory uh uh begin uh",
    "start": "1058880",
    "end": "1066600"
  },
  {
    "text": "uh getting ready to actually call your code there's a lot of things that are done for you that you don't realize uh",
    "start": "1066600",
    "end": "1071960"
  },
  {
    "text": "memory structures are set up your HEAP and stacks are are initialized uh you parse your command line options uh get",
    "start": "1071960",
    "end": "1078440"
  },
  {
    "text": "it ready a lot of people it's funny didn't know where RC C and RCV come from they thought it was something magical",
    "start": "1078440",
    "end": "1085320"
  },
  {
    "text": "but uh it's it's all set for you ahead of time and uh most of this is done in",
    "start": "1085320",
    "end": "1090559"
  },
  {
    "text": "the underscore start function uh you can take a look at it from a Gip um you",
    "start": "1090559",
    "end": "1096280"
  },
  {
    "text": "actually need the source for GBC to take a look at this uh the start. S which is the assembly version of it it's going to",
    "start": "1096280",
    "end": "1102360"
  },
  {
    "text": "set up your initial environment variables uh combine line arguments and then it calls main uh now",
    "start": "1102360",
    "end": "1109480"
  },
  {
    "text": "if uh you want a nice soft easy target this is the best place to do it right after everything's set up and right",
    "start": "1109480",
    "end": "1115520"
  },
  {
    "text": "before main gets called uh when you're debugging the application generally if if you're going",
    "start": "1115520",
    "end": "1122200"
  },
  {
    "text": "to debug you'll set a break point for main initially like I said a lot of people",
    "start": "1122200",
    "end": "1127440"
  },
  {
    "text": "aren't realizing there's actually code ex before that so a lot of people would initially miss that uh it's a pretty",
    "start": "1127440",
    "end": "1133200"
  },
  {
    "text": "soft place you can put assembly or uh pretty much whatever you want well it just got to be assembly at this point",
    "start": "1133200",
    "end": "1139679"
  },
  {
    "text": "but you can put whatever you want in there to do uh various things scan command line options uh check for",
    "start": "1139679",
    "end": "1145919"
  },
  {
    "text": "certain information or if a token is present or whatnot um that that's probably one of the",
    "start": "1145919",
    "end": "1152039"
  },
  {
    "text": "easiest and uh safest places to uh to actually start this at the analysis of",
    "start": "1152039",
    "end": "1157679"
  },
  {
    "text": "the front end and backend for attack points the things to consider are breaking the program as I mentioned",
    "start": "1157679",
    "end": "1163080"
  },
  {
    "text": "earlier the uh the biggest thing you want to you want to keep in mind is uh",
    "start": "1163080",
    "end": "1168880"
  },
  {
    "text": "uh you don't want to break the program you want the program to be able to continue its normal operations or the",
    "start": "1168880",
    "end": "1174159"
  },
  {
    "text": "element of surprise you've gained by doing this completely lost also compatibility uh you don't want to build",
    "start": "1174159",
    "end": "1180440"
  },
  {
    "text": "a binary that's going to be then taken to another machine and ran which will make your payload break once again",
    "start": "1180440",
    "end": "1187360"
  },
  {
    "text": "that's going to point out the obvious that youve actually been in there at this point I had planned on showing you",
    "start": "1187360",
    "end": "1193760"
  },
  {
    "text": "uh the payload in C or in uh xa6 ASM and Shell Code however I can't get wireless",
    "start": "1193760",
    "end": "1199880"
  },
  {
    "text": "internet access up here so visualize it it's it's pretty cool",
    "start": "1199880",
    "end": "1205799"
  },
  {
    "text": "there's some brackets couple pointers it's",
    "start": "1205799",
    "end": "1211799"
  },
  {
    "text": "awesome and this is where I would actually do the examples of what you can do with GCC once again just going to",
    "start": "1211799",
    "end": "1218559"
  },
  {
    "text": "require some imagination because I can actually show you right now so the the the first uh the first example was I was",
    "start": "1218559",
    "end": "1225840"
  },
  {
    "text": "going to add a stub to start to jump to an object file that gets linked in automatically uh that that actually adds",
    "start": "1225840",
    "end": "1232840"
  },
  {
    "text": "socket code to your application that would generate a single UDP datagram and send it to a predetermined IP address",
    "start": "1232840",
    "end": "1239159"
  },
  {
    "text": "every time the program is ran um and it's kind of funny when you have a Hello World program and it's opening up",
    "start": "1239159",
    "end": "1244280"
  },
  {
    "text": "sockets a lot of people get kind of weird think that's kind of odd the other example was",
    "start": "1244280",
    "end": "1250840"
  },
  {
    "text": "U uh actually I got these confused the the other example was _ start uh",
    "start": "1250840",
    "end": "1256640"
  },
  {
    "text": "function that was going to to parse your command line options after they're set up and look for a a specific set of",
    "start": "1256640",
    "end": "1263520"
  },
  {
    "text": "flags and when those flags were uh were found you uh you Zea shell uh with the",
    "start": "1263520",
    "end": "1269240"
  },
  {
    "text": "uh uid and uh GID of the person that owns the binary um as you can imagine that that",
    "start": "1269240",
    "end": "1275360"
  },
  {
    "text": "wouldn't be too good if uh in charge with protecting this stuff any questions comments",
    "start": "1275360",
    "end": "1284320"
  },
  {
    "text": "suggestions Dan Kaminsky board my compiler is not open source I",
    "start": "1286840",
    "end": "1293640"
  },
  {
    "text": "must be safe right this is the uh second or third question I always get when I",
    "start": "1293640",
    "end": "1298799"
  },
  {
    "text": "talk about this well you can do this with GCC because it's open source thus proving open source is bad I use Visual",
    "start": "1298799",
    "end": "1304840"
  },
  {
    "text": "Studio I can't be attacked right the uh the answer that's no no you you can be attacked I'm actually for for for this",
    "start": "1304840",
    "end": "1312240"
  },
  {
    "text": "demo we were looking at Visual Studio 6 for a couple reasons I didn't want to uh go over uh N Stuff because that in",
    "start": "1312240",
    "end": "1320080"
  },
  {
    "text": "itself would be a whole another talk uh things you could do with net and Visual Studio 6 is pretty simple it's written",
    "start": "1320080",
    "end": "1325799"
  },
  {
    "text": "by Microsoft Visual Studio is an integrated development environment a lot of people know so it's not just a",
    "start": "1325799",
    "end": "1330880"
  },
  {
    "text": "compiler assembler and a Linker it's it's an IDE as well uh it's primarily used for Windows",
    "start": "1330880",
    "end": "1337360"
  },
  {
    "text": "development you don't really build a lot of Linux code with uh with Visual Studio although you",
    "start": "1337360",
    "end": "1343640"
  },
  {
    "text": "could uh I don't know why you'd want to uh weak links CRT Z you're going to",
    "start": "1343640",
    "end": "1349919"
  },
  {
    "text": "see the CRT stuff a lot CRT stands for C runtime so these are C runtime",
    "start": "1349919",
    "end": "1356679"
  },
  {
    "text": "libraries uh and if you uh actually look for CRT z.c on a uh machine with Visual",
    "start": "1356679",
    "end": "1362240"
  },
  {
    "text": "Studio installed you'll find these comments this is the actual startup routine for the apps it calls users main",
    "start": "1362240",
    "end": "1367640"
  },
  {
    "text": "routine uh main or W Main after performing C runtime Library initializations so this is pretty much",
    "start": "1367640",
    "end": "1374559"
  },
  {
    "text": "equivalent to what we were looking at before with GCC andore star",
    "start": "1374559",
    "end": "1379679"
  },
  {
    "text": "um it's in C it doesn't require that much assembly to craft a payload uh but one of the problems",
    "start": "1379679",
    "end": "1386159"
  },
  {
    "text": "is sorry about that one of the problems is",
    "start": "1386159",
    "end": "1391200"
  },
  {
    "text": "um actually getting it in the uh the library we're going we're going to talk about that in a little bit there's main",
    "start": "1391200",
    "end": "1397279"
  },
  {
    "text": "CRT startup uh if anybody has Ida you can grab a copy of that of actually when",
    "start": "1397279",
    "end": "1403559"
  },
  {
    "text": "you open up most binaries they're built with Visual Studio or whatnot you'll see that main CRT startup is what actually",
    "start": "1403559",
    "end": "1410640"
  },
  {
    "text": "does the underscore start stuff for uh PE it's going to go through and St your environment variables your command line",
    "start": "1410640",
    "end": "1416679"
  },
  {
    "text": "options this call Main interesting things in it this is pretty much the order it goes it",
    "start": "1416679",
    "end": "1422360"
  },
  {
    "text": "declares an integer called well I'm calling it R Val then it does uh initialization for the heat parse",
    "start": "1422360",
    "end": "1429000"
  },
  {
    "text": "command line uh then in it your Global variables then in it exception handling then you get R Val equal main which is",
    "start": "1429000",
    "end": "1435840"
  },
  {
    "text": "what actually calls the user written code so like I said when a lot of people start reverse engineering when not",
    "start": "1435840",
    "end": "1441720"
  },
  {
    "text": "they're somewhat surprised that their code doesn't start at Main um you can actually build a binary",
    "start": "1441720",
    "end": "1447400"
  },
  {
    "text": "in Visual Studio that doesn't use all the the CRT default libraries and this is pretty much how you do it but when",
    "start": "1447400",
    "end": "1453799"
  },
  {
    "text": "you build it you're going get a lot lot of unresolved externals uh because it's looking for stuff that's just not linked",
    "start": "1453799",
    "end": "1459000"
  },
  {
    "text": "in there and once again this is where I would show payload example is in C++ ASM",
    "start": "1459000",
    "end": "1465399"
  },
  {
    "text": "and uh how to add code before main or wind Main back visualization it's",
    "start": "1465399",
    "end": "1473000"
  },
  {
    "text": "cool all right um now we're we're pretty much at a portion um where we've talked",
    "start": "1473000",
    "end": "1480520"
  },
  {
    "text": "about two well-known compilers uh a lot of people use use one or the other we're",
    "start": "1480520",
    "end": "1487159"
  },
  {
    "text": "going to talk about LCC for a little a little bit LCC was is a free open source",
    "start": "1487159",
    "end": "1492480"
  },
  {
    "text": "compiler uh it's covered in book a retargetable SE uh building a retargetable SE compiler I I recommend",
    "start": "1492480",
    "end": "1497679"
  },
  {
    "text": "this book to anybody wants to know more about compiler technology or operations uh and I once overheard at a",
    "start": "1497679",
    "end": "1503360"
  },
  {
    "text": "party it's the new Dragon book don't ask what kind of party I was at where we were talking about compilers but it was",
    "start": "1503360",
    "end": "1509399"
  },
  {
    "text": "a pretty cool party uh it's popular in colleges for learning uh compiler internals because a",
    "start": "1509399",
    "end": "1516039"
  },
  {
    "text": "lot of people are somewhat uh intimidated by the Dragon book it's a great book LCC is a compiler that they",
    "start": "1516039",
    "end": "1521919"
  },
  {
    "text": "build throughout the book they actually build this compiler and uh as the chapters progress so not only will you",
    "start": "1521919",
    "end": "1528720"
  },
  {
    "text": "get to use LCC you have a pretty good understanding for it how does it po differ from Visual Studio or GCC it's",
    "start": "1528720",
    "end": "1534960"
  },
  {
    "text": "less popular I don't really think I've red too many other people that know it that well or anything it's it's not used",
    "start": "1534960",
    "end": "1541799"
  },
  {
    "text": "in businesses or environments like that that much and it also doesn't go over it doesn't include a lot of optimizations",
    "start": "1541799",
    "end": "1548600"
  },
  {
    "text": "uh it's pretty much uh your meat potatoes and compilers so the reason I'm including this is it's",
    "start": "1548600",
    "end": "1555240"
  },
  {
    "text": "uh this is a great compiler to take a look at to to uh use these",
    "start": "1555240",
    "end": "1561159"
  },
  {
    "text": "Concepts to to apply these Concepts so binary analysis uh best way",
    "start": "1561159",
    "end": "1567480"
  },
  {
    "text": "to learn about something is to use it so here is where I would show you the example of how I compile my amazingly",
    "start": "1567480",
    "end": "1573760"
  },
  {
    "text": "cool I love black hat hello world program with LCC uh it would produce a binary called",
    "start": "1573760",
    "end": "1580440"
  },
  {
    "text": "black hat do actually just black hat then we're going to take a we're going to use a a tool called NM anybody for",
    "start": "1580440",
    "end": "1588320"
  },
  {
    "text": "familiar with it I prefer to use the uh- P option uh nm- P will show uh uh everything in the",
    "start": "1588320",
    "end": "1597039"
  },
  {
    "text": "order it's encountered uh other rather than uh sorted so these are basically uh your",
    "start": "1597039",
    "end": "1602760"
  },
  {
    "text": "functions uh static strings oh not side strings functions um uh uh sections and",
    "start": "1602760",
    "end": "1609000"
  },
  {
    "text": "things like that uh in the binary I compiled uh with LCC so as you go",
    "start": "1609000",
    "end": "1616320"
  },
  {
    "text": "through it you can see that there's a lot of stuff in here that most people didn't uh you didn't write uh like undor",
    "start": "1616320",
    "end": "1624399"
  },
  {
    "text": "init undor start the the BSS start things like that and then you see down at a very low memory address main so you",
    "start": "1624399",
    "end": "1631960"
  },
  {
    "text": "have uh you have a whole lot of room to work with with this compiler here we uh we do uh obj dump DD uh the the that",
    "start": "1631960",
    "end": "1641480"
  },
  {
    "text": "actually produces a lot of output because what it's going to do is run through and do a disassembly on a binary",
    "start": "1641480",
    "end": "1646559"
  },
  {
    "text": "section by section um uh so the the image is like huge uh but try it take a",
    "start": "1646559",
    "end": "1652919"
  },
  {
    "text": "look at it it's pretty fun and shows you what what can be done so determine how to uh interpret your findings determine",
    "start": "1652919",
    "end": "1659919"
  },
  {
    "text": "what the compiler does to the code so you can go through the steps as I showed earlier with GCC with LCC and you can",
    "start": "1659919",
    "end": "1665880"
  },
  {
    "text": "stop after pre-processing after compilation phase uh after the assembly phase and uh of course after linking and",
    "start": "1665880",
    "end": "1672519"
  },
  {
    "text": "you can use uh various tools like NM obj dump and things like that to view what",
    "start": "1672519",
    "end": "1678360"
  },
  {
    "text": "has been done to your code as it goes through each step and that that that's uh it's very important to understand what comes next you want to look uh for",
    "start": "1678360",
    "end": "1685679"
  },
  {
    "text": "stuff that's generated by the compiler or stuff that you didn't right basically you're looking for things that you can add to without without breaking program",
    "start": "1685679",
    "end": "1693360"
  },
  {
    "text": "functionality or anything like that and uh finding out where the compiler stores its code a lot of what a compiler does",
    "start": "1693360",
    "end": "1701559"
  },
  {
    "text": "uh it links in libraries and whatnot so although the the the you might actually",
    "start": "1701559",
    "end": "1707200"
  },
  {
    "text": "not be attacking compiler itself but L of libraries that links in things like",
    "start": "1707200",
    "end": "1713080"
  },
  {
    "text": "that um thankfully there are only basic attacks uh aside from simple code",
    "start": "1713080",
    "end": "1719519"
  },
  {
    "text": "ejection what else going to be done so we're going to talk about uh briefly about Advanced attack methods things",
    "start": "1719519",
    "end": "1725000"
  },
  {
    "text": "like uh adding code to getop this would be similar to adding your own command line option you know d-0 WN or something",
    "start": "1725000",
    "end": "1731880"
  },
  {
    "text": "to spal show my favorite one here and a lot of people like this one is replacing safe functions with unsafe functions",
    "start": "1731880",
    "end": "1738799"
  },
  {
    "text": "uh one of the uh the demos I was supposed to run for you uh I do a stir",
    "start": "1738799",
    "end": "1743840"
  },
  {
    "text": "copy from command line into a buffer uh and I use Stir and copy and I only copy",
    "start": "1743840",
    "end": "1750000"
  },
  {
    "text": "the the amount the uh the buffer can hold uh my patch actually will go",
    "start": "1750000",
    "end": "1755120"
  },
  {
    "text": "through and replace stir and copy the stir copy and uh kick out the third arguments because it just needs two uh",
    "start": "1755120",
    "end": "1762600"
  },
  {
    "text": "this opens up a whole new uh uh area for things as we previously mentioned earlier these unsafe functions aren't",
    "start": "1762600",
    "end": "1769240"
  },
  {
    "text": "being seen as much however with uh within a type methodology like this you can add them back in or get rid of uh",
    "start": "1769240",
    "end": "1777200"
  },
  {
    "text": "get rid of balance checking all together one of the things that that uh that's great is uh doing dependent attacks a",
    "start": "1777200",
    "end": "1783600"
  },
  {
    "text": "lot of people will to find a debug or whatnot while it's in testing and then remove it for uh for uh actual",
    "start": "1783600",
    "end": "1791679"
  },
  {
    "text": "production and whatnot so uh one of the things you might want to think about is search and command line or uh uh command",
    "start": "1791679",
    "end": "1798440"
  },
  {
    "text": "line or uh options see if debug is defined other examples that uh work with",
    "start": "1798440",
    "end": "1803600"
  },
  {
    "text": "socket apps will only uh be included into binaries that are being built with socket code I mean you don't want to add",
    "start": "1803600",
    "end": "1809960"
  },
  {
    "text": "uh a socket you don't want to add a socket tro to something that doesn't have it I me talk that or uh attack only",
    "start": "1809960",
    "end": "1817519"
  },
  {
    "text": "if it's a set uid app you don't want to attack you don't want to do this to every binary it comes along you only",
    "start": "1817519",
    "end": "1822720"
  },
  {
    "text": "want to do it to things that I guess would give you a strategic advantage and uh you know cal. exe is",
    "start": "1822720",
    "end": "1828000"
  },
  {
    "text": "isn't going to do it for you uh so you might want to wait until something with elevated",
    "start": "1828000",
    "end": "1834399"
  },
  {
    "text": "Privileges and this is where I would do the buby balance checking uh just just visualize it it's it's such",
    "start": "1834399",
    "end": "1842039"
  },
  {
    "text": "a cool uh thing uh actually yes I can in the",
    "start": "1842039",
    "end": "1848000"
  },
  {
    "text": "pre-processing phase what this patch does is it looks for a list of safe functions and just simply replaces them",
    "start": "1848000",
    "end": "1855639"
  },
  {
    "text": "uh with unsafe functions like the biggest ones that looks for is Stir copy uh well stir and copy now uh since since",
    "start": "1855639",
    "end": "1863120"
  },
  {
    "text": "the function prototype off changes the the patch is smart enough to know what options it needs in the unsafe function",
    "start": "1863120",
    "end": "1869880"
  },
  {
    "text": "and take from the safe one that F",
    "start": "1869880",
    "end": "1876679"
  },
  {
    "text": "question thankfully they're only basic attacks tools the compilers work with and how they can turn against you uh so",
    "start": "1878639",
    "end": "1884440"
  },
  {
    "text": "more than just a compiler you got the Linker the assembler lib tool AR things for generating archives things like that",
    "start": "1884440",
    "end": "1890120"
  },
  {
    "text": "these are all Targets for uh this type of uh this type of attack it uh nothing",
    "start": "1890120",
    "end": "1897399"
  },
  {
    "text": "nothing's really uh really that hard to actually make do this sort of",
    "start": "1897399",
    "end": "1903000"
  },
  {
    "text": "behavior other than owning things is this useful uh Yes actually as as as uh",
    "start": "1903039",
    "end": "1910200"
  },
  {
    "text": "as I mentioned before uh you might actually want to do things like a good example of this is Honeypot technology",
    "start": "1910200",
    "end": "1916279"
  },
  {
    "text": "uh applying this to a honey poot would be something similar to you trojen the",
    "start": "1916279",
    "end": "1922120"
  },
  {
    "text": "compiler on a Linux machine that you set as a honey poot you wait for somebody compromise it uh either SCP SCP their uh",
    "start": "1922120",
    "end": "1929519"
  },
  {
    "text": "their binary or seource code in and build it uh then you can add like a unique hash to the uh the header whatnot",
    "start": "1929519",
    "end": "1936760"
  },
  {
    "text": "uh for tracking across where it goes in addition to that you can actually also uh choen several functions like map so",
    "start": "1936760",
    "end": "1943679"
  },
  {
    "text": "when uh the function gets mapped into memory to execute uh it can uh make a change to the actual binary on dis so it",
    "start": "1943679",
    "end": "1949960"
  },
  {
    "text": "doesn't really have to be a compiler to do this uh the great example of this is the UDP packet I was talking about",
    "start": "1949960",
    "end": "1956120"
  },
  {
    "text": "earlier that sends uh sends a UDP packet back uh to an arbitrary address so you",
    "start": "1956120",
    "end": "1962639"
  },
  {
    "text": "can track where this code goes across Network and whatnot that was built on your machine that's pretty",
    "start": "1962639",
    "end": "1968240"
  },
  {
    "text": "cool how do I detect this well this is kind of a funny thing",
    "start": "1968240",
    "end": "1974679"
  },
  {
    "text": "um it was easier to create the problem than the solution",
    "start": "1974919",
    "end": "1979840"
  },
  {
    "text": "um so sty back traces is a good way uh to detect this basically looking at what",
    "start": "1980039",
    "end": "1987919"
  },
  {
    "text": "uh what functions are called and from where what add address spaces things like that as uh generally building a",
    "start": "1987919",
    "end": "1995080"
  },
  {
    "text": "building a binary up until main or whatnot everything pretty much should be standard so if you're calling you know",
    "start": "1995080",
    "end": "2000559"
  },
  {
    "text": "strange functions from strange places you can uh you can pretty bet something strange going on there um I was going to",
    "start": "2000559",
    "end": "2008200"
  },
  {
    "text": "do a I wrote a tool for this actually called ice blast it does just that um basically what what it would do",
    "start": "2008200",
    "end": "2015320"
  },
  {
    "text": "is it would detect what GBC compiler version you have and from uh the beginning of execution up until the call",
    "start": "2015320",
    "end": "2022159"
  },
  {
    "text": "of Maine it will profile uh what's done and it knows what should be done and can",
    "start": "2022159",
    "end": "2027559"
  },
  {
    "text": "tell you when something strange is happening like a jump to a weird place in memory or a call that isn't anywhere",
    "start": "2027559",
    "end": "2034480"
  },
  {
    "text": "else uh other other things are a signature compiler operations Ida does this a lot with the flirt signatures and",
    "start": "2034480",
    "end": "2041320"
  },
  {
    "text": "this is pretty much uh similar to what we were talking about before um optimization standard function",
    "start": "2041320",
    "end": "2047720"
  },
  {
    "text": "step-by-step verification code at runtime it allows",
    "start": "2047720",
    "end": "2053480"
  },
  {
    "text": "U that allows a person at uh",
    "start": "2054480",
    "end": "2058760"
  },
  {
    "text": "EXC yeah that well that was a pretty fast speech actually",
    "start": "2062560",
    "end": "2069480"
  },
  {
    "text": "uh this speech was uh inspired originally by Ken Thompson's piece for the ACM Reflections on trusting trust uh",
    "start": "2069480",
    "end": "2077919"
  },
  {
    "text": "that's a URL where you can read it uh pretty much anything else and that flew",
    "start": "2077919",
    "end": "2085200"
  },
  {
    "text": "by does anyone have any questions Dan",
    "start": "2085200",
    "end": "2090800"
  },
  {
    "text": "not that I'm aware of that would that's a great thing to research though uh that was actually that would",
    "start": "2100040",
    "end": "2107800"
  },
  {
    "text": "be that would be a great thing to",
    "start": "2107800",
    "end": "2111000"
  },
  {
    "text": "research right that wouldn't be that difficult to do this would be uh similar to the uh the the the lexer the Lex",
    "start": "2126480",
    "end": "2133240"
  },
  {
    "text": "modification to replace stiring copy with stir copy and whatnot uh so it wouldn't actually be that hard to",
    "start": "2133240",
    "end": "2139160"
  },
  {
    "text": "accomplish it might be something uh to look forward to for the future any other questions Mr",
    "start": "2139160",
    "end": "2149040"
  },
  {
    "text": "ma no actually I've had some discussion Lance spitzner of the honey project about incorporating some of this",
    "start": "2155040",
    "end": "2160720"
  },
  {
    "text": "technology but at this time it's currently not oh I'm sorry uh um the question was",
    "start": "2160720",
    "end": "2168680"
  },
  {
    "text": "if this type of technology is currently being used in honeypots to fingerprint uh binaries built and transferred the",
    "start": "2168680",
    "end": "2175079"
  },
  {
    "text": "answer is uh no no it's not any other questions",
    "start": "2175079",
    "end": "2184400"
  },
  {
    "text": "oh I'm",
    "start": "2189280",
    "end": "2191560"
  },
  {
    "text": "sorry uh the question was uh since I've been working with this am I uh focusing",
    "start": "2207319",
    "end": "2212760"
  },
  {
    "text": "on system libraries for specific applications or if this is a methodology that works across generic",
    "start": "2212760",
    "end": "2220720"
  },
  {
    "text": "applications and for instance the uh the the modifications to underscore start",
    "start": "2231720",
    "end": "2237319"
  },
  {
    "text": "for GCC would work pretty much across the platform whether it's a gtk uh GUI",
    "start": "2237319",
    "end": "2243200"
  },
  {
    "text": "application or a uh CLI based uh Tool uh because that code is actually called",
    "start": "2243200",
    "end": "2248520"
  },
  {
    "text": "before main so basically any uh any out binary at this point will uh will work",
    "start": "2248520",
    "end": "2254880"
  },
  {
    "text": "for this I saw a hand",
    "start": "2254880",
    "end": "2260640"
  },
  {
    "text": "somewhere no maybe I'm hallucinating Neil",
    "start": "2260640",
    "end": "2268200"
  },
  {
    "text": "again yeah that was actually the the the part I I I ran over the step by",
    "start": "2272480",
    "end": "2277640"
  },
  {
    "text": "verification of code at runtime uh unless I'm mistaken howar flake is doing",
    "start": "2277640",
    "end": "2282680"
  },
  {
    "text": "some research with that and uh stepbystep verification uh well binary",
    "start": "2282680",
    "end": "2288000"
  },
  {
    "text": "diffing and whatnot that would uh that would be a useful tool for uh combating",
    "start": "2288000",
    "end": "2293319"
  },
  {
    "text": "uh an application attack at this layer",
    "start": "2293319",
    "end": "2297680"
  },
  {
    "text": "uh the the descriptions that we spoke about Target uh primarily the front",
    "start": "2307880",
    "end": "2312920"
  },
  {
    "text": "end um modifying the the the loader for the actual operating system might be a",
    "start": "2312920",
    "end": "2318440"
  },
  {
    "text": "little require more than a 75 minute discussion in the",
    "start": "2318440",
    "end": "2324800"
  },
  {
    "text": "back I'm sorry say again",
    "start": "2330040",
    "end": "2334599"
  },
  {
    "text": "um I'm of two minds on that subject uh the the initial thought is uh yes it' be",
    "start": "2341040",
    "end": "2347400"
  },
  {
    "text": "uh uh those type environments what his question was will this type of uh attack",
    "start": "2347400",
    "end": "2352920"
  },
  {
    "text": "be harder to realize in a managed code environment like net or uh Java uh the",
    "start": "2352920",
    "end": "2359000"
  },
  {
    "text": "the initial gut reaction uh I had on that was uh yes it's it's a lot harder to realize but actually after discovery",
    "start": "2359000",
    "end": "2366359"
  },
  {
    "text": "uh well actually after um evaluating these Technologies I think it's uh pretty much just as simple to",
    "start": "2366359",
    "end": "2373599"
  },
  {
    "text": "maliciously um divert whatever the whichever environment you're you're",
    "start": "2373599",
    "end": "2379200"
  },
  {
    "text": "referring to uh to do whatever you want because this this happens at a level",
    "start": "2379200",
    "end": "2384560"
  },
  {
    "text": "where no one's really looking for it so oh wait wait you don't mean it build",
    "start": "2384560",
    "end": "2390079"
  },
  {
    "text": "time you mean execution time oh yeah yeah yeah execution time would be a whole whole different story like for instance a Java security manager would",
    "start": "2390079",
    "end": "2396480"
  },
  {
    "text": "stop a lot of this from having happening as well as uh the net CLR stuff would uh",
    "start": "2396480",
    "end": "2401680"
  },
  {
    "text": "would pretty much preclude a lot of the uh strange things from happening like uh",
    "start": "2401680",
    "end": "2407040"
  },
  {
    "text": "socket code in the Hello World app U because it shouldn't be connected to the network I'm sorry I thought you meant",
    "start": "2407040",
    "end": "2412920"
  },
  {
    "text": "during the build and not during execution any other",
    "start": "2412920",
    "end": "2419599"
  },
  {
    "text": "questions cool well I'm sorry this the speech went so quickly but without my uh",
    "start": "2423119",
    "end": "2428480"
  },
  {
    "text": "my really cool demos it uh was kind of a short ow",
    "start": "2428480",
    "end": "2433599"
  },
  {
    "text": "kind of a short speech well I guess we're",
    "start": "2433599",
    "end": "2440599"
  },
  {
    "text": "[Applause]",
    "start": "2443080",
    "end": "2446239"
  },
  {
    "text": "done",
    "start": "2456240",
    "end": "2459240"
  },
  {
    "text": "e",
    "start": "2486240",
    "end": "2489240"
  },
  {
    "text": "e",
    "start": "2516240",
    "end": "2519240"
  },
  {
    "text": "e",
    "start": "2546119",
    "end": "2549119"
  },
  {
    "text": "e",
    "start": "2576119",
    "end": "2579119"
  },
  {
    "text": "e",
    "start": "2606119",
    "end": "2609119"
  },
  {
    "text": "e",
    "start": "2636040",
    "end": "2639040"
  },
  {
    "text": "e",
    "start": "2666040",
    "end": "2669040"
  },
  {
    "text": "e",
    "start": "2696040",
    "end": "2699040"
  },
  {
    "text": "e",
    "start": "2725960",
    "end": "2728960"
  },
  {
    "text": "e",
    "start": "2755920",
    "end": "2758920"
  },
  {
    "text": "e e",
    "start": "2785920",
    "end": "2789920"
  }
]