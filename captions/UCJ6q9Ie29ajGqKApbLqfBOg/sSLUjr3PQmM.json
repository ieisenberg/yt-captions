[
  {
    "text": "[Music]",
    "start": "1330",
    "end": "4879"
  },
  {
    "text": "thank you so hello everyone and welcome to my talk",
    "start": "7400",
    "end": "13019"
  },
  {
    "text": "real world detection of vision techniques in the cloud so let's kick off with some formalities",
    "start": "13019",
    "end": "19800"
  },
  {
    "text": "before we get started on the content for today",
    "start": "19800",
    "end": "24859"
  },
  {
    "text": "first of all I'm Matt Muir and I'm a threat intelligence researcher at Cado security",
    "start": "24960",
    "end": "31859"
  },
  {
    "text": "prior to working at cadill I was a Mac OS malware researcher and I've got a",
    "start": "31859",
    "end": "37020"
  },
  {
    "text": "background in devops digital forensics and operational cyber security",
    "start": "37020",
    "end": "43260"
  },
  {
    "text": "so you can follow me on Twitter at the handle on screen and that's if anyone else is actually still on Twitter of",
    "start": "43260",
    "end": "49320"
  },
  {
    "text": "course and the slides for the talk will also be available to download later today",
    "start": "49320",
    "end": "56460"
  },
  {
    "text": "so as part of Kato Labs kados threat research team I'm regularly involved in",
    "start": "56460",
    "end": "61980"
  },
  {
    "text": "researching new software threats affecting Cloud infrastructure as the name of the talk suggests I'm",
    "start": "61980",
    "end": "69180"
  },
  {
    "text": "here today to talk to you about detection evasion techniques we've observed in various Cloud native malware",
    "start": "69180",
    "end": "76140"
  },
  {
    "text": "campaigns the talk will focus on three specific campaigns all of which we've been",
    "start": "76140",
    "end": "83340"
  },
  {
    "text": "tracking over the last year or so so while the techniques described here",
    "start": "83340",
    "end": "88860"
  },
  {
    "text": "are not necessarily exclusive to the cloud they demonstrate a certain Ingenuity and",
    "start": "88860",
    "end": "96240"
  },
  {
    "text": "often review the attacker's knowledge of the incident response process",
    "start": "96240",
    "end": "102180"
  },
  {
    "text": "so without further Ado I'll first go over the agenda of the talk before diving into some real life examples of a",
    "start": "102180",
    "end": "110040"
  },
  {
    "text": "detection evasion techniques in the cloud",
    "start": "110040",
    "end": "113960"
  },
  {
    "text": "so kick off this presentation by providing some background around the current state of cloud security",
    "start": "115860",
    "end": "122520"
  },
  {
    "text": "and common infection vectors for cloud malware next we'll move on to the first malware",
    "start": "122520",
    "end": "129119"
  },
  {
    "text": "family coin Stomp as we'll see coinstomp is a cloud native",
    "start": "129119",
    "end": "134700"
  },
  {
    "text": "malware campaign that exhibits some interesting anti-forensics techniques",
    "start": "134700",
    "end": "140879"
  },
  {
    "text": "we'll then take a look at some recent activities from watchdog I name those of you who follow Cloud",
    "start": "140879",
    "end": "146879"
  },
  {
    "text": "security research will likely be familiar with before finally moving on to denonia a",
    "start": "146879",
    "end": "153599"
  },
  {
    "text": "malware family we discovered earlier this year which we believe may be the first publicly reported campaign to",
    "start": "153599",
    "end": "160379"
  },
  {
    "text": "specifically Target serverless environments finally I'll wrap up with some",
    "start": "160379",
    "end": "166560"
  },
  {
    "text": "considerations about the future of cloud malware and provide you with some references for further research",
    "start": "166560",
    "end": "174800"
  },
  {
    "text": "to begin I'd like to discuss something that I refer to as the cloud challenge",
    "start": "176040",
    "end": "181739"
  },
  {
    "text": "if anyone saw my talks at besides Vegas or gercon in Michigan they'll likely be",
    "start": "181739",
    "end": "187140"
  },
  {
    "text": "familiar with this concept already despite a sustained migration to the",
    "start": "187140",
    "end": "193319"
  },
  {
    "text": "cloud from companies across the globe organizations are increasingly susceptible to attacks which are",
    "start": "193319",
    "end": "199800"
  },
  {
    "text": "advancing in both severity and sophistication recent cloud-focused malware campaigns",
    "start": "199800",
    "end": "206459"
  },
  {
    "text": "have demonstrated that adversity groups possess an intimate knowledge of cloud Technologies and their security",
    "start": "206459",
    "end": "212580"
  },
  {
    "text": "mechanisms and not only that but they're using this to their advantage",
    "start": "212580",
    "end": "219319"
  },
  {
    "text": "Cloud compute environment should remain an obvious Target for such groups however we're now also beginning to see",
    "start": "219360",
    "end": "226560"
  },
  {
    "text": "a shift of focus towards serverless Computing and containers",
    "start": "226560",
    "end": "231920"
  },
  {
    "text": "on top of this the ease of which Cloud resources can be compromised has led to",
    "start": "231959",
    "end": "237299"
  },
  {
    "text": "adversity groups competing over potential targets now unfortunately Defenders haven't",
    "start": "237299",
    "end": "243299"
  },
  {
    "text": "adapted at the same pace which is a big reason why I'm here to talk to you today",
    "start": "243299",
    "end": "249299"
  },
  {
    "text": "there are a number of reasons for this with visibility into Cloud infrastructure being a commonly cited",
    "start": "249299",
    "end": "255120"
  },
  {
    "text": "one but it's an unavoidable fact that the campaigns I'm going to cover are both",
    "start": "255120",
    "end": "261120"
  },
  {
    "text": "successful in achieving their objectives and are widespread",
    "start": "261120",
    "end": "266880"
  },
  {
    "text": "clearly attackers in the cloud space are utilizing this to their advantage by",
    "start": "266880",
    "end": "272580"
  },
  {
    "text": "employing ttps aimed at evading detection foiling attribution and covering their attracts",
    "start": "272580",
    "end": "280580"
  },
  {
    "text": "with that in mind I'd like to take a moment to discuss some common Cloud infection vectors",
    "start": "282300",
    "end": "289020"
  },
  {
    "text": "people who follow Cloud malware research or deal with its remediation will likely",
    "start": "289020",
    "end": "294060"
  },
  {
    "text": "be unsurprised by this list as it doesn't really change very often",
    "start": "294060",
    "end": "299400"
  },
  {
    "text": "much like other forms of malware the most prolific Cloud native campaigns are",
    "start": "299400",
    "end": "304680"
  },
  {
    "text": "opportunistic and generally take advantage of misconvigorations in the Target environment",
    "start": "304680",
    "end": "311699"
  },
  {
    "text": "services like Docker and redis continue to be lucrative targets for these types of attacks",
    "start": "311699",
    "end": "318240"
  },
  {
    "text": "people seem to love exposing the docker engine API to the internet without authentication for some reason",
    "start": "318240",
    "end": "325560"
  },
  {
    "text": "similarly the developers of redis strongly recommend against exposing",
    "start": "325560",
    "end": "330780"
  },
  {
    "text": "their TCP port or Unix socket directly to the internet even after they went to the effort of",
    "start": "330780",
    "end": "336660"
  },
  {
    "text": "implementing a feature that provides optional authentication to the data store",
    "start": "336660",
    "end": "342240"
  },
  {
    "text": "despite this a cursory glance of showdown at the time of creating this presentation shows that almost 50 000",
    "start": "342240",
    "end": "349440"
  },
  {
    "text": "nodes have Port 6379 open to the world of course many of these will have",
    "start": "349440",
    "end": "356039"
  },
  {
    "text": "authentication enabled but several won't and I would imagine that they aren't honeypots either",
    "start": "356039",
    "end": "362960"
  },
  {
    "text": "more sophisticated today actors will make an effort to exfiltrate credentials post compromise",
    "start": "363360",
    "end": "369900"
  },
  {
    "text": "we've seen this from people like team TNT who are known to use aws's instance",
    "start": "369900",
    "end": "375780"
  },
  {
    "text": "metadata service to retrieve IAM role credentials",
    "start": "375780",
    "end": "381120"
  },
  {
    "text": "in the case of cloud compute instances we've also seen the contents of local credentials files being exfiltrated in a",
    "start": "381120",
    "end": "388139"
  },
  {
    "text": "similar manner now on this object of I am earlier this year unit 42 published",
    "start": "388139",
    "end": "395580"
  },
  {
    "text": "research on the state of permissions Management in the cloud they found that 99 of cloud identities",
    "start": "395580",
    "end": "402440"
  },
  {
    "text": "including users rules services and resources were granted excessive",
    "start": "402440",
    "end": "408360"
  },
  {
    "text": "permissions which were ultimately unused they also found that many built-in",
    "start": "408360",
    "end": "413699"
  },
  {
    "text": "provider policies were overly permissive by default and that these weren't being properly managed by users",
    "start": "413699",
    "end": "421380"
  },
  {
    "text": "this of course makes additional compromise of related resources easier and can serve as an infection Vector for",
    "start": "421380",
    "end": "427860"
  },
  {
    "text": "cloud malware finally many of the malicious scripts",
    "start": "427860",
    "end": "433199"
  },
  {
    "text": "and malware samples that we analyze rely on SSH for propagation which is an",
    "start": "433199",
    "end": "438240"
  },
  {
    "text": "obvious choice includes compute environments see your Cloud compute instance has a vulnerable service running and code",
    "start": "438240",
    "end": "444539"
  },
  {
    "text": "execution is achieved it's very easy for an attacker to enumerate the contents of known hosts",
    "start": "444539",
    "end": "450060"
  },
  {
    "text": "look for a relevant SSH key and propagate their malware to any nodes that they find",
    "start": "450060",
    "end": "456680"
  },
  {
    "text": "so after using cloud-specific knowledge to deliver malware via one of the",
    "start": "457680",
    "end": "463139"
  },
  {
    "text": "relatively technical infection vectors that we discussed on the previous slide what do Cloud threat actors actually do",
    "start": "463139",
    "end": "470340"
  },
  {
    "text": "with their access well the main cryptocurrency of course",
    "start": "470340",
    "end": "476520"
  },
  {
    "text": "and often not very much of it in many ways I wish this was more",
    "start": "476520",
    "end": "481919"
  },
  {
    "text": "exciting but the reality of the matter is that cryptojacking in the cloud is still an incredibly prevalent threat",
    "start": "481919",
    "end": "488880"
  },
  {
    "text": "despite it being low hanging fruit for many campaigns it doesn't seem to be hugely profitable for the attackers",
    "start": "488880",
    "end": "495720"
  },
  {
    "text": "this was evidenced by this story from all around this time last year",
    "start": "495720",
    "end": "501620"
  },
  {
    "text": "some of you may remember seeing this but this developer received an unexpected bill from AWS for forty five thousand",
    "start": "502800",
    "end": "510539"
  },
  {
    "text": "dollars it turns out that their AWS account had been compromised used to deploy some",
    "start": "510539",
    "end": "517080"
  },
  {
    "text": "lambdas which ran XM rig and ultimately mined a measly 800 worth of Monero",
    "start": "517080",
    "end": "524700"
  },
  {
    "text": "now this hardly seems worth the effort given the amount of stress that it likely caused this developer that is",
    "start": "524700",
    "end": "530820"
  },
  {
    "text": "supposed free money is good money and if you're doing this often enough you could certainly build up a large",
    "start": "530820",
    "end": "536519"
  },
  {
    "text": "payout fortunately this particular issue was settled with AWS and the fees were",
    "start": "536519",
    "end": "543060"
  },
  {
    "text": "eventually waived of course with access to Cloud resources there are a lot more nefarious things",
    "start": "543060",
    "end": "549779"
  },
  {
    "text": "you could do I'm sure everyone has heard of instances where companies have left S3 buckets",
    "start": "549779",
    "end": "555480"
  },
  {
    "text": "exposed to the internet and customer data has been exfiltrated we also often see Cloud campaigns making",
    "start": "555480",
    "end": "562920"
  },
  {
    "text": "use of malware such as tsunami which is used to connect infected machines to a botnet and has DDOS capabilities",
    "start": "562920",
    "end": "571940"
  },
  {
    "text": "so this shows that the impact of cloud breaches is wide ranging and that's unlikely to change",
    "start": "571980",
    "end": "578580"
  },
  {
    "text": "now as we'll see despite the penchant for crypto jacking Cloud today actors",
    "start": "578580",
    "end": "583620"
  },
  {
    "text": "invest significant effort into evading detection and ensuring their miners execute unimpeded",
    "start": "583620",
    "end": "591240"
  },
  {
    "text": "what should concerned Defenders is how we mitigate these attacks so that when",
    "start": "591240",
    "end": "596279"
  },
  {
    "text": "we do eventually see attackers becoming bored of cryptojacking we're able to detect and prevent more serious threats",
    "start": "596279",
    "end": "605060"
  },
  {
    "text": "on that note let's move on to discuss our first malware family coin stump",
    "start": "605640",
    "end": "612620"
  },
  {
    "text": "coin stomp is a crypto Jack in malware Campaign which exploits resources hosted primarily by Asian cloud service",
    "start": "613080",
    "end": "619440"
  },
  {
    "text": "providers so for example companies like tencent and Alibaba cloud",
    "start": "619440",
    "end": "625260"
  },
  {
    "text": "there have been a couple of theories about why these csvs are specifically targeted it could be the case that it's simply",
    "start": "625260",
    "end": "632279"
  },
  {
    "text": "due to location of the attackers and familiarity with the csps in their region",
    "start": "632279",
    "end": "638220"
  },
  {
    "text": "however I suspect that since many of these csps are newer than for example",
    "start": "638220",
    "end": "643260"
  },
  {
    "text": "AWS Google cloud and azure the security controls that are in place",
    "start": "643260",
    "end": "649019"
  },
  {
    "text": "are perhaps not as mature as other service providers making it more likely that instances",
    "start": "649019",
    "end": "655019"
  },
  {
    "text": "will be deployed in an insecure fashion now if you're someone that follows Cloud",
    "start": "655019",
    "end": "660240"
  },
  {
    "text": "security research you're probably bored to death at this point by a family of cryptojacking shell Scripts",
    "start": "660240",
    "end": "666120"
  },
  {
    "text": "but with coin stump we noticed some interesting techniques which hinted that the attacker's awareness of cloud",
    "start": "666120",
    "end": "672839"
  },
  {
    "text": "security measures and the incident response process these included the use of timestamp",
    "start": "672839",
    "end": "679079"
  },
  {
    "text": "manipulation otherwise known as time stamping an attempt to remove system",
    "start": "679079",
    "end": "684480"
  },
  {
    "text": "cryptographic policies in order to weaken the target system C2 communication via a reverse show",
    "start": "684480",
    "end": "692579"
  },
  {
    "text": "and a reference to a prior crypto jacking campaign potentially in an attempt to foil attribution",
    "start": "692579",
    "end": "700399"
  },
  {
    "text": "so the first thing that caught our eye when analyzing a Coinstar payload was the presence of this date time string",
    "start": "701100",
    "end": "707339"
  },
  {
    "text": "which you can see passed in as a parameter to the touch commands T option",
    "start": "707339",
    "end": "712440"
  },
  {
    "text": "now hopefully you can actually see that but I've highlighted the relevant section in the screenshot",
    "start": "712440",
    "end": "718260"
  },
  {
    "text": "so the function on screen here begins with an existence check for the file user bin mod user",
    "start": "718260",
    "end": "725399"
  },
  {
    "text": "if this isn't found the script then grips for a sequence of strings found in the true mod binary in",
    "start": "725399",
    "end": "731820"
  },
  {
    "text": "a subshell and uses grep's dash out option to return the file name only",
    "start": "731820",
    "end": "737339"
  },
  {
    "text": "we can see evidence of this on line 16. it then renames the chamod binary to mod",
    "start": "737339",
    "end": "744480"
  },
  {
    "text": "user and runs the touch command with Dash t and a date time string of 22-23",
    "start": "744480",
    "end": "750899"
  },
  {
    "text": "on the 20th of May 2019. now this may be common knowledge to some",
    "start": "750899",
    "end": "756959"
  },
  {
    "text": "people in the room but this is of course a pretty nice way to perform time stomping with a command that's virtually",
    "start": "756959",
    "end": "762839"
  },
  {
    "text": "ubiquitous across unix-like systems on line 21 we see the exact same",
    "start": "762839",
    "end": "770339"
  },
  {
    "text": "technique employed for the chatter or change attributes command except this time with a slightly",
    "start": "770339",
    "end": "777420"
  },
  {
    "text": "different date time string now why is the malware in this case",
    "start": "777420",
    "end": "782639"
  },
  {
    "text": "obfuscating usage of Charter entry mode in the first place well of course both of these commands",
    "start": "782639",
    "end": "788339"
  },
  {
    "text": "are specific to fail Access Control most Cloud native malware campaigns as",
    "start": "788339",
    "end": "793800"
  },
  {
    "text": "soon as assume that certain files of interest will be restricted for editing either via file attributes or",
    "start": "793800",
    "end": "799740"
  },
  {
    "text": "permissions using the chamod and chatter commands to overcome this is the most obvious way to",
    "start": "799740",
    "end": "807779"
  },
  {
    "text": "modify these permissions or attributes and this is why we see it in virtually all malicious shell scripts that we",
    "start": "807779",
    "end": "813839"
  },
  {
    "text": "analyze in this particular case the touch command updates both the modified and",
    "start": "813839",
    "end": "820320"
  },
  {
    "text": "access timestamps to the date time hard-coded in the shell script and we verified this later after",
    "start": "820320",
    "end": "826680"
  },
  {
    "text": "analyzing a machine with this malware running on it in cable however with this particular flag the",
    "start": "826680",
    "end": "833339"
  },
  {
    "text": "created time Still Remains correct it seems likely that this was an attempt",
    "start": "833339",
    "end": "838740"
  },
  {
    "text": "to obfuscate usage of the charter into mod command line tools as some forensics",
    "start": "838740",
    "end": "844800"
  },
  {
    "text": "tools may prioritize files recently accessed or executed when building a timeline of events",
    "start": "844800",
    "end": "851760"
  },
  {
    "text": "using a copy of these system binaries also avoids alerting admins who may have",
    "start": "851760",
    "end": "856800"
  },
  {
    "text": "set up monitoring for execution of things like chatter into mod",
    "start": "856800",
    "end": "862399"
  },
  {
    "text": "so this was another interesting technique employed by Coinstar for the purpose of evading detection at the",
    "start": "863639",
    "end": "869459"
  },
  {
    "text": "network level the function cuddle that you can see on screen here is used to retrieve",
    "start": "869459",
    "end": "875760"
  },
  {
    "text": "additional payloads and communicate information about the target back to a C2 server",
    "start": "875760",
    "end": "882360"
  },
  {
    "text": "on line four we can see a reverse shell connection being established via the dev TCP device file to a remote server at",
    "start": "882360",
    "end": "892160"
  },
  {
    "text": "106.53.115 0.114",
    "start": "892160",
    "end": "896160"
  },
  {
    "text": "now for those that don't know the dev TCP device file is a feature commonly",
    "start": "899519",
    "end": "904680"
  },
  {
    "text": "found in Linux distributions in combination with the exact command it allows you to specify a file descriptor",
    "start": "904680",
    "end": "911639"
  },
  {
    "text": "in this case three which can be used for read write operations via a socket to the specified",
    "start": "911639",
    "end": "918180"
  },
  {
    "text": "IP as you can imagine this is very useful for anyone wishing to implement a C2",
    "start": "918180",
    "end": "925260"
  },
  {
    "text": "Communications Channel and it's natively supported across Linux systems",
    "start": "925260",
    "end": "931740"
  },
  {
    "text": "in the example on screen the malware mixture support 443 which is of course",
    "start": "931740",
    "end": "937139"
  },
  {
    "text": "the port used for https traffic it's likely that this port was chosen as",
    "start": "937139",
    "end": "942480"
  },
  {
    "text": "it's commonly used and unlikely to be blocked by any outbound firewall rules in the Target environment",
    "start": "942480",
    "end": "949760"
  },
  {
    "text": "so this was an interesting and unexpected finding when analyzing the coinstorm payloads",
    "start": "950699",
    "end": "957000"
  },
  {
    "text": "Coinstar made use of KRON as a persistence mechanism and registered a crown job under the root user",
    "start": "957000",
    "end": "965100"
  },
  {
    "text": "other than using this persistence to launch or relaunch malicious payloads as most malware would",
    "start": "965100",
    "end": "971699"
  },
  {
    "text": "coinstom instead used the Crone job to kill the tail and mask scan utilities",
    "start": "971699",
    "end": "977399"
  },
  {
    "text": "the latter of which is often used in these types of campaigns to find vulnerable servers to Target",
    "start": "977399",
    "end": "984620"
  },
  {
    "text": "we noticed an interesting comment in line in this ground job which you may be able to make out on",
    "start": "984899",
    "end": "990420"
  },
  {
    "text": "line 243 at one point it seems as if the code hosting service and on Pastor was used",
    "start": "990420",
    "end": "997680"
  },
  {
    "text": "to host an additional payload for the coin stomp campaign we can see on line 243 that the URL for",
    "start": "997680",
    "end": "1005180"
  },
  {
    "text": "this provider is still added to the Crone job but it's commented out resulting in it having no effect on the",
    "start": "1005180",
    "end": "1012440"
  },
  {
    "text": "job itself when we visited the URL we found another URL pointing to the Anon DNS Anonymous",
    "start": "1012440",
    "end": "1020600"
  },
  {
    "text": "DNS provider this URL contains a couple of strings that we recognize from a prior campaign",
    "start": "1020600",
    "end": "1027558"
  },
  {
    "text": "the first of which was xanthu a crypto mining campaign discovered by Cisco Talos",
    "start": "1027559",
    "end": "1034100"
  },
  {
    "text": "furthermore one of the payloads in the Zante campaign that we'd analyzed was called fczyo",
    "start": "1034100",
    "end": "1040699"
  },
  {
    "text": "which is the same as the resource in the URL here",
    "start": "1040699",
    "end": "1045519"
  },
  {
    "text": "unfortunately the URL was down when we attempted to retrieve the FC YZ or",
    "start": "1045740",
    "end": "1051500"
  },
  {
    "text": "payload so we couldn't determine whether it was the same installation script as we'd seen in the Xanthi campaign",
    "start": "1051500",
    "end": "1058940"
  },
  {
    "text": "we also didn't notice any overlap of infrastructure between these campaigns or anything else that would suggest that",
    "start": "1058940",
    "end": "1064700"
  },
  {
    "text": "they were linked so this led us to conclude that the URL will likely contain those names in an",
    "start": "1064700",
    "end": "1070520"
  },
  {
    "text": "attempt to file attribution finally to round off our overview of",
    "start": "1070520",
    "end": "1077360"
  },
  {
    "text": "coinstomp we noticed this rather interesting and amusing spelling mistake when statically analyzing the custom",
    "start": "1077360",
    "end": "1084020"
  },
  {
    "text": "version of XM rig through the coin storm scripts dropped we're not sure if this is deliberate or",
    "start": "1084020",
    "end": "1089900"
  },
  {
    "text": "not but it was jokingly suggested that it could be a reference to British crime actor Jason Statham who may well have",
    "start": "1089900",
    "end": "1096080"
  },
  {
    "text": "had some involvement in this campaign so I've included a photo of them on the next slide for a visual reference",
    "start": "1096080",
    "end": "1103660"
  },
  {
    "text": "so let's move on now to discuss watchdog",
    "start": "1106520",
    "end": "1110980"
  },
  {
    "text": "Watchdog is a name that any follower of cloud security research will like will likely be familiar with",
    "start": "1111799",
    "end": "1118580"
  },
  {
    "text": "they are a cloud native adversity group known for conducting crypto jacking campaigns since at least 2019.",
    "start": "1118580",
    "end": "1127400"
  },
  {
    "text": "Watchdog are opportunistic and generally Target misconfigured services such as",
    "start": "1127400",
    "end": "1133220"
  },
  {
    "text": "Docker and redis as we discussed in the infection Vector slide",
    "start": "1133220",
    "end": "1138260"
  },
  {
    "text": "now they often meet use of Internet scanning utilities to conduct wide-ranging scans of the IP address",
    "start": "1138260",
    "end": "1144679"
  },
  {
    "text": "space searching for vulnerable servers to infect several of their ttps overlap with those",
    "start": "1144679",
    "end": "1152480"
  },
  {
    "text": "of Team TNT occasionally making attribution difficult",
    "start": "1152480",
    "end": "1158000"
  },
  {
    "text": "they've even gone as far as using team TNT ASCII art in some of their Scripts",
    "start": "1158000",
    "end": "1163340"
  },
  {
    "text": "and have included the team the TNT string and their naming conventions",
    "start": "1163340",
    "end": "1169460"
  },
  {
    "text": "similar to what we saw with the coin stump campaign Watchdog campaigns typically make use of",
    "start": "1169460",
    "end": "1175039"
  },
  {
    "text": "Linux specific knowledge and living off the land techniques to evade detection",
    "start": "1175039",
    "end": "1181179"
  },
  {
    "text": "so this was a fairly interesting technique that we discovered in a campaign attributed to Watchdog that",
    "start": "1182480",
    "end": "1188299"
  },
  {
    "text": "targeted our Honeypot infrastructure it utilizes a similar time stomping",
    "start": "1188299",
    "end": "1194059"
  },
  {
    "text": "technique as we saw in our overview of coin stock but and perhaps more interestingly we",
    "start": "1194059",
    "end": "1201140"
  },
  {
    "text": "can see the attackers implementing a very rudimentary albeit effective process either",
    "start": "1201140",
    "end": "1208059"
  },
  {
    "text": "first the binary for PS is copied to another file named PS lanigiro",
    "start": "1208100",
    "end": "1214580"
  },
  {
    "text": "a very simple shell script is then written to bin PS the sole purpose of which is to call the",
    "start": "1214580",
    "end": "1220580"
  },
  {
    "text": "renamed PS binary and pipe it through an inverse grip to filter out processes",
    "start": "1220580",
    "end": "1225679"
  },
  {
    "text": "with the strings ddns and scan in the name now as you might expect ddns and scan",
    "start": "1225679",
    "end": "1233059"
  },
  {
    "text": "are two malicious processes run by the malware amazingly this actually works and it's",
    "start": "1233059",
    "end": "1239240"
  },
  {
    "text": "perhaps the most Unity process Hider I've ever seen but more importantly this demonstrates",
    "start": "1239240",
    "end": "1245299"
  },
  {
    "text": "that you don't need fancy root kits to have effective detective evasion",
    "start": "1245299",
    "end": "1251140"
  },
  {
    "text": "so this was another very simple but effective technique employed by Watchdog for hiding artifacts on the target",
    "start": "1251419",
    "end": "1258020"
  },
  {
    "text": "system when analyzing their payloads we saw multiple references to paths containing",
    "start": "1258020",
    "end": "1264140"
  },
  {
    "text": "directories that were named with three full stops or an ellipsis",
    "start": "1264140",
    "end": "1269240"
  },
  {
    "text": "it turns out that this name is perfectly valid for files and directories on Linux systems and it has the added benefit of",
    "start": "1269240",
    "end": "1276559"
  },
  {
    "text": "looking similar to the two dot Alias for The Parent Directory in Long listings",
    "start": "1276559",
    "end": "1282559"
  },
  {
    "text": "so as you can see on the screen here the Ellipsis directory is hidden and could",
    "start": "1282559",
    "end": "1288140"
  },
  {
    "text": "easily be mistaken for The Parent Directory by an unsuspecting admin",
    "start": "1288140",
    "end": "1293840"
  },
  {
    "text": "now obviously this won't fool proper EDR Solutions but include compute instances or",
    "start": "1293840",
    "end": "1299539"
  },
  {
    "text": "containers where you may be manually investigating a breach this is the kind of thing that could be easily overlooked",
    "start": "1299539",
    "end": "1307539"
  },
  {
    "text": "so this technique seems to be a favorite amongst Cloud threat actors and we saw it in use during the coin stomp campaign",
    "start": "1312860",
    "end": "1319880"
  },
  {
    "text": "and several several other Cloud native campaigns in this screenshot we can see existence",
    "start": "1319880",
    "end": "1326480"
  },
  {
    "text": "checks for a file named cd1 now this is actually a version of Kuro that's been renamed in order to",
    "start": "1326480",
    "end": "1333260"
  },
  {
    "text": "obfuscate its usage the malware then sets an environment variable with a path to the renamed",
    "start": "1333260",
    "end": "1340100"
  },
  {
    "text": "version of Kuru so that any attempts to retrieve additional payloads make use of cd1 and not the coral binary itself",
    "start": "1340100",
    "end": "1349159"
  },
  {
    "text": "it's difficult to see just how effective this would be but I suppose if you're monitoring for",
    "start": "1349159",
    "end": "1354440"
  },
  {
    "text": "invocations of Karo then it's a way for an attacker to avoid generating an alert",
    "start": "1354440",
    "end": "1360679"
  },
  {
    "text": "this technique has also been observed when obfuscating usage of other data transfer utilities such as WK",
    "start": "1360679",
    "end": "1369039"
  },
  {
    "text": "now aside from the techniques we'd observed ourselves in the campaign against our Honeypot",
    "start": "1369260",
    "end": "1374960"
  },
  {
    "text": "they also heard about another detection evasion technique attributed to watchdog",
    "start": "1374960",
    "end": "1381340"
  },
  {
    "text": "now I'm sure everyone here is familiar with the concept of steganography if not then it can be briefly summarized",
    "start": "1386120",
    "end": "1393080"
  },
  {
    "text": "as the practice of concealing executable codes within another file when it comes to malware the other file",
    "start": "1393080",
    "end": "1399740"
  },
  {
    "text": "is typically an image file as these are usually considered benign and non-executable",
    "start": "1399740",
    "end": "1406100"
  },
  {
    "text": "this allows the embedded code to be delivered stealthily to the Target machine acting as an additional",
    "start": "1406100",
    "end": "1411799"
  },
  {
    "text": "malicious payload we encountered some interesting research from race work when uncovering",
    "start": "1411799",
    "end": "1418340"
  },
  {
    "text": "information about prior Watchdog campaigns they had found an example of a campaign",
    "start": "1418340",
    "end": "1424280"
  },
  {
    "text": "where watchdog had used this rather low resolution image of the 63 building in Seoul to",
    "start": "1424280",
    "end": "1431240"
  },
  {
    "text": "conceal an additional payload the first stage payload retrieved this",
    "start": "1431240",
    "end": "1436520"
  },
  {
    "text": "image and used the Unix DD utility to skip to the end of the file and extract",
    "start": "1436520",
    "end": "1441679"
  },
  {
    "text": "amblicious shell script sure enough when viewing the image fail",
    "start": "1441679",
    "end": "1447020"
  },
  {
    "text": "in a hex editor a malicious shell script had been appended to the end of the file starting after bytes representing the",
    "start": "1447020",
    "end": "1454460"
  },
  {
    "text": "letters i-e-n-d this of course denotes the end of a PNG file",
    "start": "1454460",
    "end": "1461240"
  },
  {
    "text": "so the script itself contains behaviors typical of Watchdog including disabling",
    "start": "1461240",
    "end": "1467000"
  },
  {
    "text": "of SC Linux and monitoring agents associated with Alibaba cloud",
    "start": "1467000",
    "end": "1472280"
  },
  {
    "text": "multiplication and deletion of iptables rules and of course the persistent",
    "start": "1472280",
    "end": "1477620"
  },
  {
    "text": "installation of XM rig for the purpose of illicitly minor Monero",
    "start": "1477620",
    "end": "1483340"
  },
  {
    "text": "steganography like this is somewhat rare on non-windows systems",
    "start": "1483340",
    "end": "1488659"
  },
  {
    "text": "although it's a technique as old as time when it comes to malware it demonstrates watchdog's willingness",
    "start": "1488659",
    "end": "1494900"
  },
  {
    "text": "to adapt and try out new techniques for a wedding detection",
    "start": "1494900",
    "end": "1500019"
  },
  {
    "text": "excuse me I know you enter a final malware family denonia",
    "start": "1501460",
    "end": "1508179"
  },
  {
    "text": "denonia was a malware family we encountered when hunting for samples that interacted with the AWS amds",
    "start": "1508640",
    "end": "1515600"
  },
  {
    "text": "endpoint it's notable due to it being the first publicly analyzed malware sample",
    "start": "1515600",
    "end": "1522580"
  },
  {
    "text": "specifically targeting AWS Lambda now Lambda is aws's serverless Computing",
    "start": "1522580",
    "end": "1529880"
  },
  {
    "text": "platform meaning that it's a service provided by AWS where users can execute codes in",
    "start": "1529880",
    "end": "1536720"
  },
  {
    "text": "response to events and the underlying infrastructure is managed by AWS themselves",
    "start": "1536720",
    "end": "1543799"
  },
  {
    "text": "the discovery of denonia suggests Cloud adversity groups are now beginning to",
    "start": "1543799",
    "end": "1549260"
  },
  {
    "text": "Target serverless environments which made this quite an interesting find",
    "start": "1549260",
    "end": "1555200"
  },
  {
    "text": "so the malware itself is delivered as an elf binary written in goal line",
    "start": "1555200",
    "end": "1561200"
  },
  {
    "text": "unfortunately it's yet another cryptojacking sample but it uses interesting address resolution",
    "start": "1561200",
    "end": "1567080"
  },
  {
    "text": "techniques for command and control it also includes other detection evasion",
    "start": "1567080",
    "end": "1573200"
  },
  {
    "text": "techniques which hint at the author's knowledge of cloud Technologies",
    "start": "1573200",
    "end": "1579100"
  },
  {
    "text": "so to give some background on our analysis of denonia we discovered an elf binary named python",
    "start": "1580220",
    "end": "1587140"
  },
  {
    "text": "which despite the name was actually written in gold static analysis of the binary revealed a",
    "start": "1587140",
    "end": "1594679"
  },
  {
    "text": "number of interesting packages including one named AWS Lambda goal",
    "start": "1594679",
    "end": "1601220"
  },
  {
    "text": "this turned out to be the official AWS package for writing Lambda functions in golang it included libraries samples and",
    "start": "1601220",
    "end": "1609380"
  },
  {
    "text": "tools",
    "start": "1609380",
    "end": "1611799"
  },
  {
    "text": "of course this immediately made us interested as it definitely seemed like this",
    "start": "1615080",
    "end": "1620840"
  },
  {
    "text": "malware was intended to be executed in Lambda",
    "start": "1620840",
    "end": "1625778"
  },
  {
    "text": "continuing with static analysis we found several references to xmrig",
    "start": "1625880",
    "end": "1631220"
  },
  {
    "text": "within the binary which turned out to be from an embedded customized version of The Miner",
    "start": "1631220",
    "end": "1638299"
  },
  {
    "text": "not only that but the miner itself appeared to be excreted in memory with a",
    "start": "1638299",
    "end": "1643700"
  },
  {
    "text": "config file written to slash temp and we'll come back to that later in the top",
    "start": "1643700",
    "end": "1649760"
  },
  {
    "text": "so with static analysis complete we moved on to executing the sample",
    "start": "1649760",
    "end": "1654860"
  },
  {
    "text": "itself shortly after execution the denonia process exited and we were greeted with",
    "start": "1654860",
    "end": "1662299"
  },
  {
    "text": "a log statement that you can see on the slide here this made us even more excited than we",
    "start": "1662299",
    "end": "1668360"
  },
  {
    "text": "were before as these environment variables referenced in the log statement are specific to Lambda",
    "start": "1668360",
    "end": "1676100"
  },
  {
    "text": "we soon knew that we were dealing with the first publicly disclosed malware sample to Target serverless environments",
    "start": "1676100",
    "end": "1684159"
  },
  {
    "text": "now in keeping with the theme of this talk we discovered a number of detection evasion techniques utilized by the",
    "start": "1684860",
    "end": "1691580"
  },
  {
    "text": "denonia Developers our work at the static analysis stage",
    "start": "1691580",
    "end": "1697279"
  },
  {
    "text": "had revealed a goal package named Doh go this of course turned out to be a",
    "start": "1697279",
    "end": "1703520"
  },
  {
    "text": "protocol implementing DNS over https in the go language",
    "start": "1703520",
    "end": "1709640"
  },
  {
    "text": "the package allows you to interact with Doh as a client from your go application and it supports providers such as",
    "start": "1709640",
    "end": "1716659"
  },
  {
    "text": "cloudflare Google quad 9 and dnsbod",
    "start": "1716659",
    "end": "1722299"
  },
  {
    "text": "for anyone that doesn't know DNS over https effectively allows you to send DNS",
    "start": "1722299",
    "end": "1727820"
  },
  {
    "text": "queries via the https protocol this means that the DNS queries are",
    "start": "1727820",
    "end": "1733400"
  },
  {
    "text": "encrypted in transit preventing them from being sent in plain text as they typically are when vanilla DNS",
    "start": "1733400",
    "end": "1739520"
  },
  {
    "text": "resolution occurs excuse me Yusuf denonia in malware is",
    "start": "1739520",
    "end": "1745820"
  },
  {
    "text": "relatively newsworthy in its own right while denonia isn't the first malware",
    "start": "1745820",
    "end": "1751039"
  },
  {
    "text": "discovered making use of it it certainly isn't a common occurrence",
    "start": "1751039",
    "end": "1756620"
  },
  {
    "text": "so what advantages does leveraging Doh give to the denonia authors",
    "start": "1756620",
    "end": "1762740"
  },
  {
    "text": "for one AWS would be unable to see the DNS lookups for the malicious domain",
    "start": "1762740",
    "end": "1768399"
  },
  {
    "text": "preventing the malware from triggering an alert and depending on how your VPC is",
    "start": "1768399",
    "end": "1775220"
  },
  {
    "text": "configured DNS requests from lambdas may be prevented",
    "start": "1775220",
    "end": "1780620"
  },
  {
    "text": "the screenshot you can see in the slide here demonstrates a Doh request that we observe the malware making",
    "start": "1780620",
    "end": "1788240"
  },
  {
    "text": "as you can see the requested domain includes the string denonia which is how",
    "start": "1788240",
    "end": "1793520"
  },
  {
    "text": "the malware got its name we can see the request is made to",
    "start": "1793520",
    "end": "1798700"
  },
  {
    "text": "dns.google.com and it's clear from the URL that's where the resolution is performed",
    "start": "1798700",
    "end": "1805600"
  },
  {
    "text": "once the request was made we observed the Doh server responding with some Json that included the IP that the domain",
    "start": "1806960",
    "end": "1813919"
  },
  {
    "text": "resolved to",
    "start": "1813919",
    "end": "1816460"
  },
  {
    "text": "you can see an example of this on the slide here so once denonia received this response",
    "start": "1819140",
    "end": "1825620"
  },
  {
    "text": "the IP was then written to a hidden file named xmrig.json under the slash team",
    "start": "1825620",
    "end": "1831500"
  },
  {
    "text": "directory this was interesting in a Lambda context because slash demp is the only directory",
    "start": "1831500",
    "end": "1838940"
  },
  {
    "text": "that you're permitted to write to we'd also observe the malware updating",
    "start": "1838940",
    "end": "1844159"
  },
  {
    "text": "the home environment variable to a value of Slash temp essentially setting the user's home",
    "start": "1844159",
    "end": "1849919"
  },
  {
    "text": "directory there it's likely this was to ensure the XM rig functioned as intended",
    "start": "1849919",
    "end": "1858279"
  },
  {
    "text": "with XM rig running in memory communication is established between the compromised Lambda and a custom",
    "start": "1859940",
    "end": "1866840"
  },
  {
    "text": "meaningful the meaning tool resided at the",
    "start": "1866840",
    "end": "1872260"
  },
  {
    "text": "ip116.203 0.4.0 and utilize Port 3333",
    "start": "1872260",
    "end": "1878840"
  },
  {
    "text": "the screenshot shows the Json request body for the initial mining pool request",
    "start": "1878840",
    "end": "1885519"
  },
  {
    "text": "the pill then responds with the status of the mining job as can be seen on this slide",
    "start": "1886520",
    "end": "1892840"
  },
  {
    "text": "so we touched on this already but as I'm sure many of you know the only file",
    "start": "1896000",
    "end": "1901580"
  },
  {
    "text": "system storage available for use by Lambda is the slash temp directory",
    "start": "1901580",
    "end": "1907100"
  },
  {
    "text": "data stored in slash Dent is preserved for the lifetime of the execution environment and can be reused by",
    "start": "1907100",
    "end": "1914659"
  },
  {
    "text": "multiple Lambda invocations given the ephemeral nature of Lambda",
    "start": "1914659",
    "end": "1920299"
  },
  {
    "text": "functions items stored in slash temp are probably the closest you can get to persistence",
    "start": "1920299",
    "end": "1926840"
  },
  {
    "text": "so this is beneficial to those behind denonia as Lambda functions are only granted a runtime of 50 minutes per",
    "start": "1926840",
    "end": "1933559"
  },
  {
    "text": "invocation obviously this isn't very useful for operating a minor",
    "start": "1933559",
    "end": "1939380"
  },
  {
    "text": "so having a config file processed across invocations allows multiple Lambda",
    "start": "1939380",
    "end": "1944720"
  },
  {
    "text": "functions to be run with the same minor configuration",
    "start": "1944720",
    "end": "1950059"
  },
  {
    "text": "this of course increases overall mining time which results in more Monero for the",
    "start": "1950059",
    "end": "1956240"
  },
  {
    "text": "attackers finally this was an interesting",
    "start": "1956240",
    "end": "1962539"
  },
  {
    "text": "discovery that we made during static analysis of the denonia binary and subsequent variants",
    "start": "1962539",
    "end": "1969260"
  },
  {
    "text": "the screenshot you can see in this slide shows a number of user agents and HTTP",
    "start": "1969260",
    "end": "1974720"
  },
  {
    "text": "request strings there were thousands of lines of these far more than indicated by the",
    "start": "1974720",
    "end": "1980600"
  },
  {
    "text": "screenshot at first we thought that this might be indicative of botnet or DDOS activity",
    "start": "1980600",
    "end": "1987700"
  },
  {
    "text": "but both static and dynamic analysis showed that they weren't actually used by the malware",
    "start": "1987700",
    "end": "1994460"
  },
  {
    "text": "we're now under the impression that these were used to pad the binary helping it to evade EDR and malware",
    "start": "1994460",
    "end": "2000399"
  },
  {
    "text": "analysis tools with file size limits since denonia is already written in Gold",
    "start": "2000399",
    "end": "2006460"
  },
  {
    "text": "the size of the boundaries is quite large adding this extra padding could be",
    "start": "2006460",
    "end": "2011679"
  },
  {
    "text": "enough to push it over a certain file size limits and defensive tools it could also be used to confuse eager",
    "start": "2011679",
    "end": "2019000"
  },
  {
    "text": "analysts like myself obscuring the true objectives of the malware",
    "start": "2019000",
    "end": "2025019"
  },
  {
    "text": "so to summarize we've looked at three distinct Cloud native malware campaigns all of which",
    "start": "2026860",
    "end": "2033820"
  },
  {
    "text": "employ interesting detection evasion techniques although all three of these campaigns",
    "start": "2033820",
    "end": "2040120"
  },
  {
    "text": "have the common objective of crypto jacking we've seen that the methods used to achieve this objective differ",
    "start": "2040120",
    "end": "2047740"
  },
  {
    "text": "Linux specific knowledge is evident in each of the campaigns we've discussed which is to be expected given that the",
    "start": "2047740",
    "end": "2055179"
  },
  {
    "text": "cloud essentially runs on Linux Cloud native attackers rely heavily on",
    "start": "2055179",
    "end": "2061060"
  },
  {
    "text": "living off the land techniques and use Simple Linux utilities to craft custom",
    "start": "2061060",
    "end": "2066158"
  },
  {
    "text": "process ideas and obfuscate their payloads most of the payloads we've seen are",
    "start": "2066159",
    "end": "2072280"
  },
  {
    "text": "shell script based which makes them easier to detect and analyze",
    "start": "2072280",
    "end": "2077800"
  },
  {
    "text": "but despite this the campaigns are widespread and effective",
    "start": "2077800",
    "end": "2083200"
  },
  {
    "text": "perhaps the most interesting example is denonia not only is it a binary payload but",
    "start": "2083200",
    "end": "2089800"
  },
  {
    "text": "we've seen the developers Target Lambda specifically potentially signaling a move to",
    "start": "2089800",
    "end": "2095020"
  },
  {
    "text": "serverless environments for these types of attacks we also saw the denonia developers make",
    "start": "2095020",
    "end": "2101020"
  },
  {
    "text": "use of relatively Advanced Techniques such as binary padding and memory execution and DNS over https",
    "start": "2101020",
    "end": "2109599"
  },
  {
    "text": "these techniques would be notable in regular Linux malware never mind malware specifically targeting Lambda",
    "start": "2109599",
    "end": "2116619"
  },
  {
    "text": "so that shows that will likely continue to see Cloud native campaigns mature",
    "start": "2116619",
    "end": "2121900"
  },
  {
    "text": "and develop in technical sophistication",
    "start": "2121900",
    "end": "2126119"
  },
  {
    "text": "now if you're interested to learn more about Cloud security then here are a list of references that we used when",
    "start": "2131619",
    "end": "2137260"
  },
  {
    "text": "conducting research for this talk I've included interesting blogs from netlab 360 unit 42 lace work and anomaly",
    "start": "2137260",
    "end": "2147880"
  },
  {
    "text": "these organizations are all well worth following if you're a fan of cloud security research or you work in this",
    "start": "2147880",
    "end": "2153579"
  },
  {
    "text": "area now here's a list of our own blogs that",
    "start": "2153579",
    "end": "2158800"
  },
  {
    "text": "we published about the malware families in this talk you can find these and many more in the",
    "start": "2158800",
    "end": "2164980"
  },
  {
    "text": "blog section of our website kadlescurity.com blogs",
    "start": "2164980",
    "end": "2170980"
  },
  {
    "text": "finally let me leave you with these three key takeaways from this talk",
    "start": "2171579",
    "end": "2177760"
  },
  {
    "text": "we're currently at an interesting point in Cloud malware research we're campaigns Target include infrastructure",
    "start": "2177760",
    "end": "2184839"
  },
  {
    "text": "are still lacking somewhat in technicality this is good news for Defenders as many",
    "start": "2184839",
    "end": "2192220"
  },
  {
    "text": "of the techniques used in these campaigns are easily mitigated and detectable",
    "start": "2192220",
    "end": "2197859"
  },
  {
    "text": "however the payloads themselves don't need to be hugely technical if they're",
    "start": "2197859",
    "end": "2203560"
  },
  {
    "text": "effective the example from Johnny Platt the developer that was unexpectedly built",
    "start": "2203560",
    "end": "2209980"
  },
  {
    "text": "forty five thousand dollars demonstrates that these types of campaigns are indeed effective and can",
    "start": "2209980",
    "end": "2216339"
  },
  {
    "text": "have a big impact which brings me to my next takeaway",
    "start": "2216339",
    "end": "2222160"
  },
  {
    "text": "the success of these campaigns depends heavily on mistakes made by customers of csps",
    "start": "2222160",
    "end": "2228280"
  },
  {
    "text": "with this I refer to the deployment of misconfigured services such as Docker and redis as we mentioned",
    "start": "2228280",
    "end": "2235480"
  },
  {
    "text": "automated scanners looking for security misconfigurations in these services are scanning the internet at a rapid rate",
    "start": "2235480",
    "end": "2243579"
  },
  {
    "text": "to illustrate this when we first deployed a redis in Docker Honeypot it was compromised in only 12",
    "start": "2243579",
    "end": "2250180"
  },
  {
    "text": "minutes so I'll leave you with this third point to finish off",
    "start": "2250180",
    "end": "2256180"
  },
  {
    "text": "cloud3 actors are becoming increasingly sophisticated and that's clear from the three",
    "start": "2256180",
    "end": "2261700"
  },
  {
    "text": "campaigns discussed today although payloads are typically delivered as shell Scripts we've seen",
    "start": "2261700",
    "end": "2268420"
  },
  {
    "text": "cases where Cloud threat actors have deployed more advanced Linux malware such as tsunami and Counting",
    "start": "2268420",
    "end": "2276040"
  },
  {
    "text": "this makes me suspect that eventually we'll start to see a shift away from cryptojacking and onto more nefarious",
    "start": "2276040",
    "end": "2282400"
  },
  {
    "text": "activities so I hope that everyone enjoyed my talk today and thanks a lot for coming to see",
    "start": "2282400",
    "end": "2288339"
  },
  {
    "text": "it I don't think we've quite got time for questions but please feel free to contact me on Twitter if you have any",
    "start": "2288339",
    "end": "2296079"
  },
  {
    "text": "I think you can also message me via the black cat vents app as well so I'm happy to answer any questions there",
    "start": "2296079",
    "end": "2302320"
  },
  {
    "text": "so thanks again and I hope you enjoy the rest of the conference [Applause]",
    "start": "2302320",
    "end": "2309040"
  },
  {
    "text": "[Music]",
    "start": "2309040",
    "end": "2312110"
  },
  {
    "text": "[Music]",
    "start": "2315960",
    "end": "2319059"
  }
]