[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "hello blackhat we are very happy to be here and showed you your late latest",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "research regarding compression side tunnel tags let us first introduce ourselves I'm",
    "start": "6029",
    "end": "13469"
  },
  {
    "text": "ever here is Genesis and Dimitri's where researchers at the University of Athens",
    "start": "13469",
    "end": "19260"
  },
  {
    "text": "in Greece and this is a collaborative work with professor Angela chaos with",
    "start": "19260",
    "end": "25500"
  },
  {
    "text": "share in cyber security and privacy at the University of Edinburgh as we assume",
    "start": "25500",
    "end": "33059"
  },
  {
    "text": "that most of you already know that a bridge broke HTTP and 34:8 back in 2033",
    "start": "33059",
    "end": "40250"
  },
  {
    "text": "13 people who break upgraded from stream ciphers to block ciphers to the ES and",
    "start": "40250",
    "end": "47969"
  },
  {
    "text": "so they were safe but rupture in 2016 attacked HTTPS with block ciphers what",
    "start": "47969",
    "end": "56670"
  },
  {
    "text": "we're going to show today is a generic defense for a compressor side-channel attacks we propose it it's the best",
    "start": "56670",
    "end": "65460"
  },
  {
    "text": "balance between compression and security regarding the other proposal and we will",
    "start": "65460",
    "end": "70920"
  },
  {
    "text": "launch today a number source implementation of our defense in many",
    "start": "70920",
    "end": "75960"
  },
  {
    "text": "popular web frameworks so we will talk about the next one our is the history of",
    "start": "75960",
    "end": "84420"
  },
  {
    "text": "compression side channel attacks and the attack vector and then we will move to",
    "start": "84420",
    "end": "89460"
  },
  {
    "text": "the city XD sense we will define the origin the secret and the cross",
    "start": "89460",
    "end": "94619"
  },
  {
    "text": "compression of the city XD sense the permutation we will discuss the CTX",
    "start": "94619",
    "end": "100770"
  },
  {
    "text": "architecture and then we will release our our new tool and to we'll talk about",
    "start": "100770",
    "end": "106619"
  },
  {
    "text": "future work so in 2012 crime was the",
    "start": "106619",
    "end": "111630"
  },
  {
    "text": "first attack to successful a attacks egg",
    "start": "111630",
    "end": "117750"
  },
  {
    "text": "it by in side channel compression it",
    "start": "117750",
    "end": "122969"
  },
  {
    "start": "122000",
    "end": "187000"
  },
  {
    "text": "targeted HTTP requests mostly headers to hijack sessions and steal cookies and",
    "start": "122969",
    "end": "129950"
  },
  {
    "text": "took advantages of the characteristics of the deflate algorithm which is the the most popular",
    "start": "129950",
    "end": "136440"
  },
  {
    "text": "compression algorithm of today it hinted at attacking responses although it",
    "start": "136440",
    "end": "143080"
  },
  {
    "text": "didn't implement it and after that crime was mitigated by disabling the",
    "start": "143080",
    "end": "148690"
  },
  {
    "text": "compression at the TLS level so no no side channel compression attacks for",
    "start": "148690",
    "end": "154920"
  },
  {
    "text": "HTTP requests were possible time 2013",
    "start": "154920",
    "end": "160799"
  },
  {
    "text": "exploited compression on HTTP requests it exploited compression by measuring",
    "start": "160799",
    "end": "167019"
  },
  {
    "text": "time time transmission instead of size payload and because of that there was no",
    "start": "167019",
    "end": "174549"
  },
  {
    "text": "need for money the middle-ages next with bridge again 2013 exploited HTTP",
    "start": "174549",
    "end": "182680"
  },
  {
    "text": "response body the main secret was some tokens some secret tokens",
    "start": "182680",
    "end": "188769"
  },
  {
    "text": "it has had stream ciphers and added some methods to bypass compression noise due",
    "start": "188769",
    "end": "196480"
  },
  {
    "text": "to the compression attack the admin pool",
    "start": "196480",
    "end": "202019"
  },
  {
    "text": "2015 rc4 is considering secure and that's why most website moved from",
    "start": "202319",
    "end": "208599"
  },
  {
    "text": "street side from stream ciphers to block ciphers and that's why now ESA es is the",
    "start": "208599",
    "end": "215109"
  },
  {
    "text": "industry standard Roger 2016 exploit compression against",
    "start": "215109",
    "end": "221260"
  },
  {
    "start": "216000",
    "end": "252000"
  },
  {
    "text": "HTTP responses it attacks block ciphers AES and in",
    "start": "221260",
    "end": "227230"
  },
  {
    "text": "order to achieve that it performs statistical analysis and bypasses a",
    "start": "227230",
    "end": "233019"
  },
  {
    "text": "noise and length hiding so even in the latest versions of TLS a 1.3 roger is",
    "start": "233019",
    "end": "240160"
  },
  {
    "text": "still is still possible roger is a production called framework which",
    "start": "240160",
    "end": "247780"
  },
  {
    "text": "automates the attack and makes the process much easier and the last was a",
    "start": "247780",
    "end": "254470"
  },
  {
    "text": "presenting black Satya USA 2016 it's heist which abuses the way responses are",
    "start": "254470",
    "end": "261849"
  },
  {
    "text": "sent of the TLS several level by changing the TCP window",
    "start": "261849",
    "end": "268020"
  },
  {
    "text": "and again like time there was no need for a money in the middle what agent so",
    "start": "268020",
    "end": "275380"
  },
  {
    "start": "275000",
    "end": "348000"
  },
  {
    "text": "uh let's go quickly through the attack methodology how compression attack works I want to ask the audience how many of",
    "start": "275380",
    "end": "283780"
  },
  {
    "text": "you have have seen any of the compression side channel attacks before like breach or crime or time by a raise",
    "start": "283780",
    "end": "290590"
  },
  {
    "text": "of hands okay so most of you have seen this I'll go through this real quick so the idea here is that we have about two",
    "start": "290590",
    "end": "298200"
  },
  {
    "text": "plaintext tests on our score test and test underscore Rand and if this",
    "start": "298200",
    "end": "304870"
  },
  {
    "text": "compresses this and we compress this as well then this will have a better",
    "start": "304870",
    "end": "310090"
  },
  {
    "text": "compression ratio than this one because here this some sort of repetition so if the plaintext is partially secret and",
    "start": "310090",
    "end": "317320"
  },
  {
    "text": "partially controlled by an adversary and it's taken through a compression function then the adversary by measuring",
    "start": "317320",
    "end": "322570"
  },
  {
    "text": "the length of the on on the network they can tell if they actually hit the",
    "start": "322570",
    "end": "327850"
  },
  {
    "text": "correct secret so that's the big idea of the this attack and the two components",
    "start": "327850",
    "end": "334240"
  },
  {
    "text": "these two two constitutes constituent components are the reflection this is a part of the plaintext controlled by the",
    "start": "334240",
    "end": "339310"
  },
  {
    "text": "adversary and then the secret is the part of the plaintext that is the target",
    "start": "339310",
    "end": "344440"
  },
  {
    "text": "of the adversary and so if we go to a diagram like this this is the adversary",
    "start": "344440",
    "end": "351340"
  },
  {
    "start": "348000",
    "end": "418000"
  },
  {
    "text": "they're targeting a victim on the network and then the victim hits an HTTP",
    "start": "351340",
    "end": "357160"
  },
  {
    "text": "website like Gmail and the attacker makes the victim make several requests",
    "start": "357160",
    "end": "362680"
  },
  {
    "text": "to Gmail for example by make it by using Java Script on some different website here they're injecting some code to do",
    "start": "362680",
    "end": "369730"
  },
  {
    "text": "that and then they measure the TLS encrypted responses on the network and extract the length from that because",
    "start": "369730",
    "end": "376270"
  },
  {
    "text": "length is preserved across encryption so that's the basic idea and if we look at Gmail a response for example you see",
    "start": "376270",
    "end": "382960"
  },
  {
    "text": "this exactly what's happening there is a this is a search page of Gmail and it",
    "start": "382960",
    "end": "388570"
  },
  {
    "text": "includes two different things here is the CSRF token if the adversary feels",
    "start": "388570",
    "end": "394030"
  },
  {
    "text": "that they can impersonate the victim and then if the attacker puts on the URL",
    "start": "394030",
    "end": "399250"
  },
  {
    "text": "some search curie this is like that in the HTML like this so if they search for this it's reflected and",
    "start": "399250",
    "end": "404969"
  },
  {
    "text": "then if these compressed together well then the attacker knows that they get the correct secret and they can do that",
    "start": "404969",
    "end": "411029"
  },
  {
    "text": "letter by letter so that's the basic idea and this is already what breach is doing in ruptures doing timewise okay so",
    "start": "411029",
    "end": "421050"
  },
  {
    "start": "418000",
    "end": "451000"
  },
  {
    "text": "at this point we'll introduce our defense which are and mitigates attacks",
    "start": "421050",
    "end": "428099"
  },
  {
    "text": "that use this vector so we will this is the CTX defense and what this defense",
    "start": "428099",
    "end": "434729"
  },
  {
    "text": "does is protect context by using a periodic manner in order to separate",
    "start": "434729",
    "end": "440460"
  },
  {
    "text": "secrets and avoid cross compression between secrets from different origins so this definition of whistle introduces",
    "start": "440460",
    "end": "448349"
  },
  {
    "text": "some notions that need to be explained firstly what is in origin so we say that",
    "start": "448349",
    "end": "454770"
  },
  {
    "start": "451000",
    "end": "511000"
  },
  {
    "text": "an origin is the party that generated the secret now this party can be either",
    "start": "454770",
    "end": "460770"
  },
  {
    "text": "the web publication or a user that uses this web service and we will say that",
    "start": "460770",
    "end": "466979"
  },
  {
    "text": "all secrets that were generated by the same origin will be compressed together and we will allow cross compression",
    "start": "466979",
    "end": "473610"
  },
  {
    "text": "whereas a to secret that were generated from different origins will not be",
    "start": "473610",
    "end": "478949"
  },
  {
    "text": "compressed together so for example if we have an inbox at Google in books we see",
    "start": "478949",
    "end": "485999"
  },
  {
    "text": "that we have some mails and the sender of the emails could be used as an origin",
    "start": "485999",
    "end": "493919"
  },
  {
    "text": "so the purple ones were generated by Ava which is one origin and the orange ones",
    "start": "493919",
    "end": "501689"
  },
  {
    "text": "were generated by Demeter's with who is the different origin so these all these",
    "start": "501689",
    "end": "508050"
  },
  {
    "text": "generated some secrets and these secrets well secrets in the HCP response can be",
    "start": "508050",
    "end": "514680"
  },
  {
    "start": "511000",
    "end": "604000"
  },
  {
    "text": "anything practic technically any part of the response which is encrypted can be",
    "start": "514680",
    "end": "520078"
  },
  {
    "text": "considered a secret but in general we'll say that the secret is any piece of",
    "start": "520079",
    "end": "527190"
  },
  {
    "text": "information in the response that can be accessed only when the user is loading",
    "start": "527190",
    "end": "532350"
  },
  {
    "text": "so this can either be some a financial data a SSL token some",
    "start": "532350",
    "end": "538410"
  },
  {
    "text": "private messages or emails or other sensitive data so for example in our",
    "start": "538410",
    "end": "544649"
  },
  {
    "text": "previous example we saw that Ava sent some emails and the body of those emails",
    "start": "544649",
    "end": "552180"
  },
  {
    "text": "can be configured and considered secret now all bodies of all the emails are",
    "start": "552180",
    "end": "557309"
  },
  {
    "text": "secrets because they are set its data go ahead for the user of the service but",
    "start": "557309",
    "end": "564439"
  },
  {
    "text": "different secrets we generate by different origin so the purple bodies of",
    "start": "564439",
    "end": "569670"
  },
  {
    "text": "emails were generated by Dimitri's and the by Ava sorry and the orange ones",
    "start": "569670",
    "end": "576660"
  },
  {
    "text": "will generate images so an orange email is a secret generated by a different",
    "start": "576660",
    "end": "585089"
  },
  {
    "text": "origin than a purple email and in that case we say that secrets like emails",
    "start": "585089",
    "end": "593759"
  },
  {
    "text": "that were generated from the same origin are allowed to compress together so all emails that were generated by Ava will",
    "start": "593759",
    "end": "601500"
  },
  {
    "text": "be compressed together whereas emails that were sent from a different page",
    "start": "601500",
    "end": "607860"
  },
  {
    "text": "people will not be compressed together so we will not allow cross compression and what is cross compression okay let's",
    "start": "607860",
    "end": "617279"
  },
  {
    "start": "615000",
    "end": "684000"
  },
  {
    "text": "say with two elements in plain text",
    "start": "617279",
    "end": "622649"
  },
  {
    "text": "we have element a you have a lemon B and if we allow cross compression then the",
    "start": "622649",
    "end": "630779"
  },
  {
    "text": "presence of a during compression will affect the compression of B so for",
    "start": "630779",
    "end": "636509"
  },
  {
    "text": "example if we're using lz77 algorithm for compression and we have plain text a",
    "start": "636509",
    "end": "643399"
  },
  {
    "text": "concatenated with B where a is secret one and B is secret too then when using",
    "start": "643399",
    "end": "650129"
  },
  {
    "text": "cross compression LC 77 will actually use a pointer for the second secret",
    "start": "650129",
    "end": "656970"
  },
  {
    "text": "string and it will so show to the first secret string so the compression will be",
    "start": "656970",
    "end": "664379"
  },
  {
    "text": "something like that this is an example of a course compare if we don't have our cross compression",
    "start": "664379",
    "end": "670110"
  },
  {
    "text": "then uh both of these plaintext a and B",
    "start": "670110",
    "end": "676080"
  },
  {
    "text": "would be a so l77",
    "start": "676080",
    "end": "682080"
  },
  {
    "text": "will not use a pointer and how can we in",
    "start": "682080",
    "end": "687480"
  },
  {
    "start": "684000",
    "end": "831000"
  },
  {
    "text": "general protect from our secrets from this side child they were proposed many",
    "start": "687480",
    "end": "695880"
  },
  {
    "text": "solutions for solving this problem and in previous papers which they proposed a",
    "start": "695880",
    "end": "704120"
  },
  {
    "text": "disabling compression altogether now this method obviously solves the problem",
    "start": "704120",
    "end": "709830"
  },
  {
    "text": "because compression is the side channel that allows this attack however the",
    "start": "709830",
    "end": "714900"
  },
  {
    "text": "performance penalty but will come from disabling compression altogether is in",
    "start": "714900",
    "end": "721770"
  },
  {
    "text": "real world terms unacceptable so we can't actually disable compression a second proposal would be to change the",
    "start": "721770",
    "end": "729120"
  },
  {
    "text": "compression function and change it in order to prevent cross compression",
    "start": "729120",
    "end": "736530"
  },
  {
    "text": "between secrets and reflection or adversary generic data in general but in",
    "start": "736530",
    "end": "744600"
  },
  {
    "text": "theory we are we're finding so far that",
    "start": "744600",
    "end": "750240"
  },
  {
    "text": "all good compression functions are vulnerable and we don't have a practical example of a compression function that",
    "start": "750240",
    "end": "757980"
  },
  {
    "text": "actually prevents side channels like the one we saw before so this also is so far",
    "start": "757980",
    "end": "765990"
  },
  {
    "text": "not a good solution I third solution could be to modify the web server and the compression module",
    "start": "765990",
    "end": "773940"
  },
  {
    "text": "that runs on the web server in order to [Music]",
    "start": "773940",
    "end": "779000"
  },
  {
    "text": "annotate different parts of the page and not compress these parts together but",
    "start": "779000",
    "end": "784730"
  },
  {
    "text": "this also has some problems because in this case we have to both change the web",
    "start": "784730",
    "end": "789870"
  },
  {
    "text": "server and the application level services and also this is this method",
    "start": "789870",
    "end": "796230"
  },
  {
    "text": "actually makes it really kind of hard to achieve good compression rate so",
    "start": "796230",
    "end": "801510"
  },
  {
    "text": "it's in a middle ground but it's not that easy to actually develop it and a",
    "start": "801510",
    "end": "807930"
  },
  {
    "text": "third solution would be to actually add some random data which prevent the",
    "start": "807930",
    "end": "814970"
  },
  {
    "text": "attacks from reducing easily what is a good compression and what is about",
    "start": "814970",
    "end": "821820"
  },
  {
    "text": "compression so when we run the different candidates in our attack adding random",
    "start": "821820",
    "end": "827190"
  },
  {
    "text": "padding would probably hide the fact",
    "start": "827190",
    "end": "832589"
  },
  {
    "start": "831000",
    "end": "888000"
  },
  {
    "text": "that good candidates compress better that bad context and this was actually implemented until s13 however in rapture",
    "start": "832589",
    "end": "839699"
  },
  {
    "text": "we are it showed that this method is also susceptible to alignment using",
    "start": "839699",
    "end": "847440"
  },
  {
    "text": "alignment alphabet to result in blocks in block alignment in the block ciphers",
    "start": "847440",
    "end": "853199"
  },
  {
    "text": "or it is also susceptible to statistical analysis so it is actually kind of a",
    "start": "853199",
    "end": "858990"
  },
  {
    "text": "half measure it doesn't solve the problem it just pushes it to the future our proposal is actually to change the",
    "start": "858990",
    "end": "866220"
  },
  {
    "text": "response blinded so this is in the",
    "start": "866220",
    "end": "871380"
  },
  {
    "text": "middle ground and we have implemented it in order to prevent these side-channel",
    "start": "871380",
    "end": "878519"
  },
  {
    "text": "attacks okay so city X protects HTTP responses",
    "start": "878519",
    "end": "886310"
  },
  {
    "text": "since we already said that due to the mitigation of crime that no compression",
    "start": "886310",
    "end": "893399"
  },
  {
    "text": "attacks are no longer feasible so City X is only for the responses it runs ended at the application layer",
    "start": "893399",
    "end": "901019"
  },
  {
    "text": "so there is no need for modifications of the web standards or the web server and",
    "start": "901019",
    "end": "906329"
  },
  {
    "text": "is obtained as we will show from our experiments it's the best balance",
    "start": "906329",
    "end": "913350"
  },
  {
    "text": "between performance and security we achieve this we achieve full prevention",
    "start": "913350",
    "end": "918389"
  },
  {
    "text": "of complete latex recovery just by a slight compression size increase and",
    "start": "918389",
    "end": "923819"
  },
  {
    "text": "with just a small time performance overhead so what we propose is a",
    "start": "923819",
    "end": "929910"
  },
  {
    "text": "successful defense for all known compression attacks such as",
    "start": "929910",
    "end": "935240"
  },
  {
    "text": "all these mentioned before time crime Brits so what the application developer",
    "start": "935240",
    "end": "942649"
  },
  {
    "text": "has to do in order to include CTX defense to hit their application they",
    "start": "942649",
    "end": "949760"
  },
  {
    "text": "need to import two libraries one for the server side or the specific a web",
    "start": "949760",
    "end": "956300"
  },
  {
    "text": "framework they use and for one for the client side then they need to select",
    "start": "956300",
    "end": "963730"
  },
  {
    "text": "which portions of the color of the context are considered fifth secret and",
    "start": "963730",
    "end": "971140"
  },
  {
    "text": "define origin for its secret now if we we can divide our whole response in many",
    "start": "971140",
    "end": "979160"
  },
  {
    "text": "origins we could have one origin per secret but this is the same as a",
    "start": "979160",
    "end": "985730"
  },
  {
    "text": "completely disabling compression which is no dude and we could also have one",
    "start": "985730",
    "end": "991399"
  },
  {
    "text": "origin for the whole plain text which would result in no CDX protection so we",
    "start": "991399",
    "end": "999200"
  },
  {
    "text": "need to define the origins for its secret here is an example we have a for",
    "start": "999200",
    "end": "1005980"
  },
  {
    "start": "1002000",
    "end": "1118000"
  },
  {
    "text": "loop this is a template and we have a for loop for emails and we want what we",
    "start": "1005980",
    "end": "1012910"
  },
  {
    "text": "want to show is a table it's the center of the email and then the body and what",
    "start": "1012910",
    "end": "1020290"
  },
  {
    "text": "the developer has to do so as the city expect the sensitive part of the",
    "start": "1020290",
    "end": "1026500"
  },
  {
    "text": "response which is the email body is that we see a we use CTX protect tag and we",
    "start": "1026500",
    "end": "1034058"
  },
  {
    "text": "use email and email body and email sender email body is our secret and",
    "start": "1034059",
    "end": "1041459"
  },
  {
    "text": "email sender is our origin after that he",
    "start": "1041459",
    "end": "1046630"
  },
  {
    "text": "has to include CTX permutations this is a script add projection which includes",
    "start": "1046630",
    "end": "1053500"
  },
  {
    "text": "all the permutations for its origin and the final one the physics object is the",
    "start": "1053500",
    "end": "1061540"
  },
  {
    "text": "client now if we didn't use a CTX",
    "start": "1061540",
    "end": "1066910"
  },
  {
    "text": "protection what this the response that would travel through",
    "start": "1066910",
    "end": "1072700"
  },
  {
    "text": "the network and this is it would be encrypted okay but this is the response",
    "start": "1072700",
    "end": "1078880"
  },
  {
    "text": "that the server would send now if we use City protection what an advisory would",
    "start": "1078880",
    "end": "1088960"
  },
  {
    "text": "see is something like that instead of the city XProtect tag we have this deal",
    "start": "1088960",
    "end": "1095740"
  },
  {
    "text": "here which is a data set X origin with an integer to define which origin this",
    "start": "1095740",
    "end": "1102880"
  },
  {
    "text": "is and then we have the secret the email body per muted and now this is not easy",
    "start": "1102880",
    "end": "1111970"
  },
  {
    "text": "and advisor can distinguish and it can perform a set channel compression attack",
    "start": "1111970",
    "end": "1118410"
  },
  {
    "start": "1118000",
    "end": "1286000"
  },
  {
    "text": "now let's talk about permutations we need first to define the secret alphabet",
    "start": "1118410",
    "end": "1124390"
  },
  {
    "text": "this is we need to to know what all the",
    "start": "1124390",
    "end": "1130150"
  },
  {
    "text": "characters that the secret may include it could be a ski it could be utf-8 or",
    "start": "1130150",
    "end": "1136930"
  },
  {
    "text": "anything else and then we we perform a",
    "start": "1136930",
    "end": "1142920"
  },
  {
    "text": "sender Adam permutation for the secret for each origin we know network see it",
    "start": "1142920",
    "end": "1149320"
  },
  {
    "text": "secret sorry for it secret out of it and we used fishery Yates south logarithm",
    "start": "1149320",
    "end": "1156070"
  },
  {
    "text": "which is which performs an unbiased permutation meaning that each element",
    "start": "1156070",
    "end": "1162360"
  },
  {
    "text": "has the same probability of being chosen then we permute the secrets using the",
    "start": "1162360",
    "end": "1168930"
  },
  {
    "text": "the origins permutation that we generated before and then this this HTTP",
    "start": "1168930",
    "end": "1177610"
  },
  {
    "text": "response with the per muted secrets or TLS encrypted and traveled and",
    "start": "1177610",
    "end": "1183100"
  },
  {
    "text": "transmitted through the network once on the user's browser we apply",
    "start": "1183100",
    "end": "1189760"
  },
  {
    "text": "inverse permutation and we typically we decode the secret here is an example of",
    "start": "1189760",
    "end": "1195910"
  },
  {
    "text": "how this happens we have two origins or it's in one and origin two and here are",
    "start": "1195910",
    "end": "1202360"
  },
  {
    "text": "are the permutations of course there are more but here is what we're going to need and we have two secrets from origin",
    "start": "1202360",
    "end": "1210280"
  },
  {
    "text": "one secret one and secret two as you can see this is a permitted secret we use",
    "start": "1210280",
    "end": "1217480"
  },
  {
    "text": "the same permutation for the same origin so secret and secret are the same and",
    "start": "1217480",
    "end": "1224880"
  },
  {
    "text": "okay one and two are different because they have different permutations and for",
    "start": "1224880",
    "end": "1230800"
  },
  {
    "text": "the secret generated from origin - we have a completely different permutation",
    "start": "1230800",
    "end": "1236140"
  },
  {
    "text": "because the different origin and a completely new permutation has been",
    "start": "1236140",
    "end": "1242680"
  },
  {
    "text": "generated the power of the bridge attack",
    "start": "1242680",
    "end": "1249820"
  },
  {
    "text": "lies under the assumption that we can perform multiple requests - to the",
    "start": "1249820",
    "end": "1255820"
  },
  {
    "text": "target and after that do some",
    "start": "1255820",
    "end": "1261010"
  },
  {
    "text": "statistical analysis what we were implemented is that parity Theory",
    "start": "1261010",
    "end": "1267100"
  },
  {
    "text": "response we have nuclear origin permutations so multiple requests are",
    "start": "1267100",
    "end": "1272860"
  },
  {
    "text": "made multiple pred and different commuted secrets are being transmitted",
    "start": "1272860",
    "end": "1278500"
  },
  {
    "text": "to the network statistical analysis is no longer feasible okay so at this point",
    "start": "1278500",
    "end": "1289570"
  },
  {
    "text": "we have found that there is a problem we have found that there are some attacks",
    "start": "1289570",
    "end": "1294910"
  },
  {
    "text": "that use compression in order to bypass security we have developed a defense",
    "start": "1294910",
    "end": "1301000"
  },
  {
    "text": "that actually mitigate this problem and we want to argue why this is a better",
    "start": "1301000",
    "end": "1311320"
  },
  {
    "text": "solution than other proposed methods for mitigating these attacks",
    "start": "1311320",
    "end": "1318160"
  },
  {
    "text": "so we'll perform some experiment in order to measure our defense we take the",
    "start": "1318160",
    "end": "1331750"
  },
  {
    "text": "size overhead that is added to once so this is actually the kind of the",
    "start": "1331750",
    "end": "1338890"
  },
  {
    "text": "body the man who is penalty when the server is sending the responses over the network and the time performance which",
    "start": "1338890",
    "end": "1346570"
  },
  {
    "text": "translates to the server time the the time the server needs in order to apply",
    "start": "1346570",
    "end": "1355120"
  },
  {
    "text": "CTX and the time that the client needs in order to deeper mute the secrets that",
    "start": "1355120",
    "end": "1361270"
  },
  {
    "text": "were sent over the network so our web page is basically a 650 kilobyte HTML",
    "start": "1361270",
    "end": "1373930"
  },
  {
    "text": "page the uncompressed page is a 650 kilobyte this is a fairly regular in the",
    "start": "1373930",
    "end": "1381400"
  },
  {
    "text": "real world systems like YouTube or Facebook the timelines are about that",
    "start": "1381400",
    "end": "1387580"
  },
  {
    "text": "size we use the 50 origins so with we assumed that this page in this page the",
    "start": "1387580",
    "end": "1396400"
  },
  {
    "text": "content was generated by 50 different people or channels or even the",
    "start": "1396400",
    "end": "1402610"
  },
  {
    "text": "application that generates CSS tokens for example and we assume that one",
    "start": "1402610",
    "end": "1410800"
  },
  {
    "text": "percent of this web page is actually a secret so we distribute this one percent",
    "start": "1410800",
    "end": "1418390"
  },
  {
    "text": "to the 5000 it is equally now 1% might",
    "start": "1418390",
    "end": "1423490"
  },
  {
    "text": "seem a little low or might seem a little high it it is actually kind of higher",
    "start": "1423490",
    "end": "1430150"
  },
  {
    "text": "than real-world systems use because we found that for example a facebook front",
    "start": "1430150",
    "end": "1437350"
  },
  {
    "text": "page had like 0.5% secrets and all other",
    "start": "1437350",
    "end": "1442960"
  },
  {
    "text": "stuff in there are cDNA libraries or CSS libraries or static HTML code which is",
    "start": "1442960",
    "end": "1450940"
  },
  {
    "text": "not a secret actually so 1% my inner",
    "start": "1450940",
    "end": "1457090"
  },
  {
    "text": "example I'd be a bit exaggerated for a facebook timeline for example but with",
    "start": "1457090",
    "end": "1465930"
  },
  {
    "text": "is actually a good rate to s our defense and well this 1% is equal to",
    "start": "1465930",
    "end": "1474370"
  },
  {
    "text": "deviated origins so we say that there is one secret position in the response",
    "start": "1474370",
    "end": "1480040"
  },
  {
    "text": "priority now even if there were multiple positions we City X allows cross",
    "start": "1480040",
    "end": "1487030"
  },
  {
    "text": "compression so even if we use like two or three secret petitions this X would",
    "start": "1487030",
    "end": "1492940"
  },
  {
    "text": "actually be compressed together so it doesn't make that much difference in considering our experiments okay",
    "start": "1492940",
    "end": "1501220"
  },
  {
    "text": "and we run these experiments and we found some kind of interesting results",
    "start": "1501220",
    "end": "1506470"
  },
  {
    "start": "1504000",
    "end": "1848000"
  },
  {
    "text": "so I will compare our defense with the",
    "start": "1506470",
    "end": "1512140"
  },
  {
    "text": "other proposals the first proposal was to desert the compression altogether and",
    "start": "1512140",
    "end": "1517860"
  },
  {
    "text": "as I said at at the beginning this is actually kind of bad in performance",
    "start": "1517860",
    "end": "1525700"
  },
  {
    "text": "terms so if we disable the compression in this web page with these heuristics",
    "start": "1525700",
    "end": "1532620"
  },
  {
    "text": "the size overhead will be a one-point 1000% so the response that would be",
    "start": "1532620",
    "end": "1542500"
  },
  {
    "text": "transmitted over the network would effectively be 12 times or so other the",
    "start": "1542500",
    "end": "1550450"
  },
  {
    "text": "compressed one but we sent right now so that obviously introduces a bandwidth",
    "start": "1550450",
    "end": "1556750"
  },
  {
    "text": "problem and also again depending on the",
    "start": "1556750",
    "end": "1563380"
  },
  {
    "text": "network that the user is using or of the server this might result in actually a",
    "start": "1563380",
    "end": "1569920"
  },
  {
    "text": "few seconds delay of loading time in the response so I think that for a fairly",
    "start": "1569920",
    "end": "1578770"
  },
  {
    "text": "regular big application that has not so",
    "start": "1578770",
    "end": "1583780"
  },
  {
    "text": "many like a thousand clients this is kinda bad this is really bad",
    "start": "1583780",
    "end": "1589120"
  },
  {
    "text": "a second proposal that was actually used by Facebook in order to prevent exactly",
    "start": "1589120",
    "end": "1594490"
  },
  {
    "text": "bridge from stealing Caesar tokens from Facebook was masking secrets and what",
    "start": "1594490",
    "end": "1601570"
  },
  {
    "text": "what this method does is a secret and it generates a random",
    "start": "1601570",
    "end": "1607650"
  },
  {
    "text": "string of the same size and it applies an XOR of the mask the randomly",
    "start": "1607650",
    "end": "1616300"
  },
  {
    "text": "generated mask and the secret this is done for every response so obviously a",
    "start": "1616300",
    "end": "1621460"
  },
  {
    "text": "in every response the transmitted secret will be different and we the attacker",
    "start": "1621460",
    "end": "1627910"
  },
  {
    "text": "cannot use the statistical analysis to find the secret but this method actually",
    "start": "1627910",
    "end": "1637800"
  },
  {
    "text": "what this and practically give that is disable compression because if you mask",
    "start": "1637800",
    "end": "1645460"
  },
  {
    "text": "a secret then the data that will take the place of the secret will be",
    "start": "1645460",
    "end": "1650680"
  },
  {
    "text": "practically random so they will not compress well with the rest of the page so in this case you actually kind of",
    "start": "1650680",
    "end": "1659460"
  },
  {
    "text": "disable compression for secret and also double the size of those secrets because",
    "start": "1659460",
    "end": "1664720"
  },
  {
    "text": "each time you have to include both the the master secret and the mask in order",
    "start": "1664720",
    "end": "1671170"
  },
  {
    "text": "to apply the de masking in a client so in this case if you practically disable",
    "start": "1671170",
    "end": "1679720"
  },
  {
    "text": "compression for altogether for secret you have a about 21 percent size",
    "start": "1679720",
    "end": "1688840"
  },
  {
    "text": "overhead so the the face that will be sent over the network will be like one",
    "start": "1688840",
    "end": "1695590"
  },
  {
    "text": "point two one times the the size it is right now and well that doesn't sound so",
    "start": "1695590",
    "end": "1702880"
  },
  {
    "text": "bad it might result in a in a few dozens of milliseconds delay for the network",
    "start": "1702880",
    "end": "1711370"
  },
  {
    "text": "transmission or the web server to apply masking it well in some cases if you're",
    "start": "1711370",
    "end": "1718900"
  },
  {
    "text": "not so worried about performance or if the secrets are that important and you",
    "start": "1718900",
    "end": "1724360"
  },
  {
    "text": "don't have any other solutions well it could be a solution yes you could probably use it but well we propose City",
    "start": "1724360",
    "end": "1731110"
  },
  {
    "text": "X is actually allows for a better compression ratio and that is because",
    "start": "1731110",
    "end": "1737950"
  },
  {
    "text": "we allow compression of the secrets and because the permutation is the same for",
    "start": "1737950",
    "end": "1745870"
  },
  {
    "text": "all secrets these will actually compress well because the protected secret will",
    "start": "1745870",
    "end": "1752110"
  },
  {
    "text": "have the same statistical similarities done the unprotected secret although it will obviously be different because it",
    "start": "1752110",
    "end": "1758800"
  },
  {
    "text": "is per muted so in this case our experiments so that when using CTX for",
    "start": "1758800",
    "end": "1765730"
  },
  {
    "text": "this same webpage the size over will be about 5% which translates to",
    "start": "1765730",
    "end": "1772200"
  },
  {
    "text": "approximately 7 kilobytes of data that",
    "start": "1772200",
    "end": "1777340"
  },
  {
    "text": "will be sent over the network compared to what is the place right now and this",
    "start": "1777340",
    "end": "1783670"
  },
  {
    "text": "delay on the server side in order to generate all the permutations in order to mask all this to permute yeah all the",
    "start": "1783670",
    "end": "1790990"
  },
  {
    "text": "secrets in order to create all the div tags and send it over the network and",
    "start": "1790990",
    "end": "1797220"
  },
  {
    "text": "deeper muted on ohmic lines and actually so the web page is a few milliseconds",
    "start": "1797220",
    "end": "1804160"
  },
  {
    "text": "time like for 2 to 10 milliseconds so this is pretty good this this",
    "start": "1804160",
    "end": "1811150"
  },
  {
    "text": "performance penalty is in general could be considered acceptable either for",
    "start": "1811150",
    "end": "1817120"
  },
  {
    "text": "large applications that have millions of clients because what this does is",
    "start": "1817120",
    "end": "1823300"
  },
  {
    "text": "actually mitigated a serious problem with every little performance penalty",
    "start": "1823300",
    "end": "1831420"
  },
  {
    "text": "and well up to this point we have seen",
    "start": "1831420",
    "end": "1837160"
  },
  {
    "text": "that there are some different elements and some different parts of the defense",
    "start": "1837160",
    "end": "1843070"
  },
  {
    "text": "that actually change how it runs and these parts are the origins they are how",
    "start": "1843070",
    "end": "1850600"
  },
  {
    "start": "1848000",
    "end": "2024000"
  },
  {
    "text": "many secrets are in the webpage so if you have like 1% of the webpage to secret compared to 90% well this",
    "start": "1850600",
    "end": "1858670"
  },
  {
    "text": "obviously will affect the performance of CTX because there is much more things",
    "start": "1858670",
    "end": "1863740"
  },
  {
    "text": "that needs to be permuted and also if the total response is bigger",
    "start": "1863740",
    "end": "1869890"
  },
  {
    "text": "than CTX will also have a different type of",
    "start": "1869890",
    "end": "1876760"
  },
  {
    "text": "performance penalties because civics indeed adds some constant length of data",
    "start": "1876760",
    "end": "1884840"
  },
  {
    "text": "and that is for example the div tags or the jason that included that has the",
    "start": "1884840",
    "end": "1891020"
  },
  {
    "text": "permutations in it or the actual CX",
    "start": "1891020",
    "end": "1896570"
  },
  {
    "text": "client script tag so what we have found is is that the more origins you use the",
    "start": "1896570",
    "end": "1903680"
  },
  {
    "text": "worse the performance of CX will be and that actually makes sense because if you",
    "start": "1903680",
    "end": "1908930"
  },
  {
    "text": "use more origins then a secret will be divided in more parts so compression",
    "start": "1908930",
    "end": "1916280"
  },
  {
    "text": "will be disabled for those parts and the compression rate will go down so",
    "start": "1916280",
    "end": "1924020"
  },
  {
    "text": "performance will also go down and while deciding which origins you want to use",
    "start": "1924020",
    "end": "1930800"
  },
  {
    "text": "is actually a good it should actually be",
    "start": "1930800",
    "end": "1936460"
  },
  {
    "text": "taken into serious consideration in order to avoid a performance penalties",
    "start": "1936460",
    "end": "1941990"
  },
  {
    "text": "that what could be avoided for example also if the total of secrets in the",
    "start": "1941990",
    "end": "1948740"
  },
  {
    "text": "webpage are going up then performance also goes down because the more secrets",
    "start": "1948740",
    "end": "1954140"
  },
  {
    "text": "you have to mask - the more secrets you have to protect so the bigger the other",
    "start": "1954140",
    "end": "1962830"
  },
  {
    "text": "per muted our data in the response will be the longer the permutation to be",
    "start": "1962830",
    "end": "1969740"
  },
  {
    "text": "applied will be so the server side and the client sides that actually apply the",
    "start": "1969740",
    "end": "1977810"
  },
  {
    "text": "permutation and the D permutation will take longer so that actually makes sense",
    "start": "1977810",
    "end": "1983020"
  },
  {
    "text": "however if there are more origins a more secret pair origin then because CTX",
    "start": "1983020",
    "end": "1990830"
  },
  {
    "text": "allows cross compression the performance will go up because the compression rate",
    "start": "1990830",
    "end": "1996650"
  },
  {
    "text": "will be better so secret will be compressed together because they come from the same origin and the length will",
    "start": "1996650",
    "end": "2003280"
  },
  {
    "text": "be actually small and smaller because our compression will be better",
    "start": "2003280",
    "end": "2008950"
  },
  {
    "text": "and finally if the total response goes up then the performance will also go up",
    "start": "2008950",
    "end": "2015030"
  },
  {
    "text": "because as we get and that kind kind of",
    "start": "2015030",
    "end": "2021580"
  },
  {
    "text": "addition because it's not so obvious at first why what happens why when the",
    "start": "2021580",
    "end": "2027970"
  },
  {
    "start": "2024000",
    "end": "2116000"
  },
  {
    "text": "total is bigger we have better sex performers and someone might consider B",
    "start": "2027970",
    "end": "2034120"
  },
  {
    "text": "K if it would it could be possible that the more the bigger the response was the",
    "start": "2034120",
    "end": "2041890"
  },
  {
    "text": "more the thicker there were and actually that would result in in a worse",
    "start": "2041890",
    "end": "2046990"
  },
  {
    "text": "performance but the thing is that we we have a bigger is a response then the",
    "start": "2046990",
    "end": "2054340"
  },
  {
    "text": "actual bite size that will be included as an overhead in the compressed text",
    "start": "2054340",
    "end": "2062110"
  },
  {
    "text": "will be sent over the network it's fairly the same it's not that different so for example for a small page and for",
    "start": "2062110",
    "end": "2069550"
  },
  {
    "text": "a fairly large space like Facebook the overhead penalty in bytes will be from",
    "start": "2069550",
    "end": "2076780"
  },
  {
    "text": "seven to ten it's not that much however the more the beginners response of the",
    "start": "2076780",
    "end": "2084120"
  },
  {
    "text": "the less the impact this overhead will have all the actually a performance so",
    "start": "2084120",
    "end": "2092280"
  },
  {
    "text": "for a large web page these seven or eight or nine kilobytes will be kind of",
    "start": "2092280",
    "end": "2100510"
  },
  {
    "text": "hidden in the large the larger context of the response so only if you use a",
    "start": "2100510",
    "end": "2109260"
  },
  {
    "text": "bigger response and when you have a bigger application CPX actually is even",
    "start": "2109260",
    "end": "2115420"
  },
  {
    "text": "better so this is a diagram that shows exactly this the the x-axis is the",
    "start": "2115420",
    "end": "2125950"
  },
  {
    "start": "2116000",
    "end": "2359000"
  },
  {
    "text": "response size so we started from a thirteen kilobyte web page this is the",
    "start": "2125950",
    "end": "2132280"
  },
  {
    "text": "not compressed HTML response of the webpage and we go all the way up to 650",
    "start": "2132280",
    "end": "2141490"
  },
  {
    "text": "kilobyte a web responses like Facebook like YouTube like Twitter and what we",
    "start": "2141490",
    "end": "2150670"
  },
  {
    "text": "see is that the Left y-axis is the percentage of overhead penalty that city",
    "start": "2150670",
    "end": "2158860"
  },
  {
    "text": "exerts so for a really really small web base like 13 kilobytes",
    "start": "2158860",
    "end": "2164560"
  },
  {
    "text": "the penalty is kind of large yeah the CTX will result in about 2.2 percent",
    "start": "2164560",
    "end": "2173860"
  },
  {
    "text": "overhead in the response so with if we you have a web site that sent back 10 or",
    "start": "2173860",
    "end": "2183280"
  },
  {
    "text": "20 kilo byte responses CTX will kind of",
    "start": "2183280",
    "end": "2188490"
  },
  {
    "text": "double or results in 2.5 times the vegies content that would be sent if you",
    "start": "2188490",
    "end": "2198070"
  },
  {
    "text": "were not protected at all but what this means is that actually the the actual",
    "start": "2198070",
    "end": "2204550"
  },
  {
    "text": "and data but are sent which are sown at the right y axis will be about a bit a",
    "start": "2204550",
    "end": "2211930"
  },
  {
    "text": "bit over five kilobytes so because it is a small web page five kilobytes make it",
    "start": "2211930",
    "end": "2218410"
  },
  {
    "text": "a gator of different a difference and yeah it will actually be compared to",
    "start": "2218410",
    "end": "2225310"
  },
  {
    "text": "what you had before it will be much longer but as you evolve your",
    "start": "2225310",
    "end": "2231370"
  },
  {
    "text": "application you add more stuff you add more functions you add more features and",
    "start": "2231370",
    "end": "2238440"
  },
  {
    "text": "the response grows larger but you continue to use DX and CTX actually",
    "start": "2238440",
    "end": "2246670"
  },
  {
    "text": "continues to add the same amount of response by it it goes from five",
    "start": "2246670",
    "end": "2254350"
  },
  {
    "text": "kilobyte and we see that for us the",
    "start": "2254350",
    "end": "2259950"
  },
  {
    "text": "response page grows larger the purple line actually goes down because this is",
    "start": "2259950",
    "end": "2267250"
  },
  {
    "text": "the percentage of the X penalty and the orange line will well",
    "start": "2267250",
    "end": "2276609"
  },
  {
    "text": "it will say the same at about some time and then it will it will grow a larger",
    "start": "2276609",
    "end": "2282279"
  },
  {
    "text": "but in a more spin a smoother way so for example for like 500 kilobyte page you",
    "start": "2282279",
    "end": "2290499"
  },
  {
    "text": "will add five point five kilobytes of data and this actually means that you",
    "start": "2290499",
    "end": "2298210"
  },
  {
    "text": "are kind of double the response because yeah you still have used to use 50x it",
    "start": "2298210",
    "end": "2309700"
  },
  {
    "text": "still visible compression up the point but if you use a web application that",
    "start": "2309700",
    "end": "2317549"
  },
  {
    "text": "sent back like six hundred kilobytes",
    "start": "2317549",
    "end": "2322920"
  },
  {
    "text": "responses the added data will be like seven kilobyte so the actual overhead in",
    "start": "2323069",
    "end": "2331140"
  },
  {
    "text": "percent percentage terms will be about",
    "start": "2331140",
    "end": "2337019"
  },
  {
    "text": "ten percent which is totally stable it's a four because four in six hundred",
    "start": "2337019",
    "end": "2344470"
  },
  {
    "text": "kilobytes well seven don't make that much difference at all okay so this were",
    "start": "2344470",
    "end": "2350739"
  },
  {
    "text": "absolutely the experiments that what we as we run so I want to show you a little",
    "start": "2350739",
    "end": "2364900"
  },
  {
    "start": "2359000",
    "end": "2375000"
  },
  {
    "text": "bit about how how this works ckx architecture will go through the server",
    "start": "2364900",
    "end": "2370599"
  },
  {
    "text": "and the client side a little bit so how does it work what the server does is it",
    "start": "2370599",
    "end": "2379509"
  },
  {
    "start": "2375000",
    "end": "2464000"
  },
  {
    "text": "goes through the the tags that you have on your Django or whatever service out",
    "start": "2379509",
    "end": "2384609"
  },
  {
    "text": "using and it generates the new permutation for every origin so if it",
    "start": "2384609",
    "end": "2390279"
  },
  {
    "text": "sees a new origin it will generate a new permutation and notice that this is basically just a a replacement cipher as",
    "start": "2390279",
    "end": "2397450"
  },
  {
    "text": "these are cipher lock kind of thing right and then this permutation will be",
    "start": "2397450",
    "end": "2403299"
  },
  {
    "text": "stored for each one virgin and apply to each secret if two secrets share the same origin then the",
    "start": "2403299",
    "end": "2409810"
  },
  {
    "text": "same permutation will be applied to them and notice that this happens every time a request hit this hits the server so",
    "start": "2409810",
    "end": "2415990"
  },
  {
    "text": "the permutations are different every time and this is why this works basically and then at the end of the",
    "start": "2415990",
    "end": "2423430"
  },
  {
    "text": "HTML body in the way that you saw the HTML code there's the tag that you saw",
    "start": "2423430",
    "end": "2428830"
  },
  {
    "text": "with the permutations this basically includes the data that allows the client to unfirm Ute so this is just a jason",
    "start": "2428830",
    "end": "2435370"
  },
  {
    "text": "like data painted to it so that's the service side part and then the client",
    "start": "2435370",
    "end": "2441940"
  },
  {
    "text": "side part just does exactly the opposite so it looks for these specially crafted div tags and then it goes through your",
    "start": "2441940",
    "end": "2448780"
  },
  {
    "text": "dom once pages to load it and also parses adjacent to find out what the",
    "start": "2448780",
    "end": "2455260"
  },
  {
    "text": "permutations of servers and then it applies the permutations in Reverse on each secret so that the original data",
    "start": "2455260",
    "end": "2462160"
  },
  {
    "text": "can be recovered okay so today's a big moment for our team because we're making",
    "start": "2462160",
    "end": "2469090"
  },
  {
    "start": "2464000",
    "end": "2531000"
  },
  {
    "text": "this old sort of this software open-source it's actually right now open",
    "start": "2469090",
    "end": "2474670"
  },
  {
    "text": "source on on github we just made it public you can go here to download it",
    "start": "2474670",
    "end": "2480400"
  },
  {
    "text": "and install it and you can also go to our website on CTX defense com2 to",
    "start": "2480400",
    "end": "2485410"
  },
  {
    "text": "download and install it so today we're launching it for three web frameworks on",
    "start": "2485410",
    "end": "2491770"
  },
  {
    "text": "the server side one is django one is fisk and one is no js' a note reyes you",
    "start": "2491770",
    "end": "2499600"
  },
  {
    "text": "can use a bunch of different templating like jade and it works well with the",
    "start": "2499600",
    "end": "2506110"
  },
  {
    "text": "expressed framework this is MIT license and we're also providing a client which",
    "start": "2506110",
    "end": "2511810"
  },
  {
    "text": "is published on Bower so you can install it on your websites right now and play",
    "start": "2511810",
    "end": "2516970"
  },
  {
    "text": "with it yeah and these of course the",
    "start": "2516970",
    "end": "2524140"
  },
  {
    "text": "Python endnote frameworks are on pi pi and npm everything is public okay and",
    "start": "2524140",
    "end": "2531310"
  },
  {
    "start": "2531000",
    "end": "2554000"
  },
  {
    "text": "then we're hoping that you will take our code and maybe implement it in different",
    "start": "2531310",
    "end": "2536710"
  },
  {
    "text": "frameworks we are the Python and JavaScript libraries that we have showed here while",
    "start": "2536710",
    "end": "2543450"
  },
  {
    "text": "we have provided specific implementations for Django in flask and Express we have also provided generic",
    "start": "2543450",
    "end": "2549089"
  },
  {
    "text": "libraries for the cryptographic part so you can just reuse these and build your own for your own framework or your",
    "start": "2549089",
    "end": "2555480"
  },
  {
    "start": "2554000",
    "end": "2595000"
  },
  {
    "text": "custom web application like Ruby on Rails and then this implementation works",
    "start": "2555480",
    "end": "2561150"
  },
  {
    "text": "for limited encodings so limited alphabet we are hoping you can contribute with different encodings",
    "start": "2561150",
    "end": "2567259"
  },
  {
    "text": "because otherwise it's not very usable so what yeah if we only support ASCII",
    "start": "2567259",
    "end": "2573990"
  },
  {
    "text": "and utf-8 maybe some languages will not work well and then if you want to also",
    "start": "2573990",
    "end": "2580099"
  },
  {
    "text": "go on our github one other thing that we want is to support client-side",
    "start": "2580099",
    "end": "2585809"
  },
  {
    "text": "frameworks like react so that this protection can also apply on Jason",
    "start": "2585809",
    "end": "2591750"
  },
  {
    "text": "restful endpoints I would be good okay so the key takeaways is HTTP plus gzip",
    "start": "2591750",
    "end": "2599759"
  },
  {
    "start": "2595000",
    "end": "2639000"
  },
  {
    "text": "is still broken even if you use TLS 1.3 this is still attackable we showed you",
    "start": "2599759",
    "end": "2607440"
  },
  {
    "text": "also some examples of interesting interesting as aerial cases where",
    "start": "2607440",
    "end": "2613170"
  },
  {
    "text": "there's the reflection is not very clear for example this one adversary controlled email body and one victim",
    "start": "2613170",
    "end": "2620549"
  },
  {
    "text": "controlled email body and the adversary can use that as a reflection which is quite counterintuitive and then CTX is a",
    "start": "2620549",
    "end": "2630240"
  },
  {
    "text": "solution to this so we invite you to start using it start reporting bugs and show us if it's good or not tell us what",
    "start": "2630240",
    "end": "2637440"
  },
  {
    "text": "you think so that's it from us and we'll be happy to take your questions",
    "start": "2637440",
    "end": "2643759"
  },
  {
    "start": "2639000",
    "end": "2705000"
  },
  {
    "text": "[Applause]",
    "start": "2645030",
    "end": "2652389"
  },
  {
    "text": "[Music] are there any questions oh yeah so the the HTTP headers are",
    "start": "2655470",
    "end": "2674280"
  },
  {
    "text": "typically not compressed if you use lowest version of TLS the request is not",
    "start": "2674280",
    "end": "2679530"
  },
  {
    "text": "compressed at all and the response is not compressed and then the body of the HTTP is compressed but that that doesn't",
    "start": "2679530",
    "end": "2686520"
  },
  {
    "text": "quote the header the header defines a compression method so you're safe on that any other questions before lunch",
    "start": "2686520",
    "end": "2695210"
  },
  {
    "text": "okay so let's go back to the email case that's a good question",
    "start": "2703460",
    "end": "2708589"
  },
  {
    "text": "so say here the problem we saw with breach is that if the adversary",
    "start": "2710569",
    "end": "2717059"
  },
  {
    "text": "extending the victim emails say that immediately is the adversary here and he's sending me some emails and these",
    "start": "2717059",
    "end": "2723210"
  },
  {
    "text": "are specially crafted reflections and he was feel whatever ever has sent me on",
    "start": "2723210",
    "end": "2728700"
  },
  {
    "text": "this other email that's that kind of the attack model there if the mid-race is able to find out one word from this",
    "start": "2728700",
    "end": "2736650"
  },
  {
    "text": "email this will compress together so if we use the same permutation for these two then these will still compress",
    "start": "2736650",
    "end": "2742980"
  },
  {
    "text": "together that's kind of the point but if we use a different permutation here and a different permutation there then these",
    "start": "2742980",
    "end": "2748200"
  },
  {
    "text": "will more compress together but the emails from the same origin will compress together to achieve better performance so that's the reason we are",
    "start": "2748200",
    "end": "2754619"
  },
  {
    "text": "we have to have separate origins okay",
    "start": "2754619",
    "end": "2762660"
  },
  {
    "text": "any other all right thank you very much",
    "start": "2762660",
    "end": "2769540"
  },
  {
    "text": "[Applause]",
    "start": "2769540",
    "end": "2773790"
  }
]