[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "[Music]",
    "start": "1730",
    "end": "4810"
  },
  {
    "text": "good afternoon everyone welcome and",
    "start": "8360",
    "end": "11160"
  },
  {
    "text": "thanks for joining this talk about",
    "start": "11160",
    "end": "12599"
  },
  {
    "text": "detecting kernel exploits with evpf",
    "start": "12599",
    "end": "15839"
  },
  {
    "text": "my name is Guillen Fournier I'm a",
    "start": "15839",
    "end": "17640"
  },
  {
    "text": "security you know security engineer at",
    "start": "17640",
    "end": "19619"
  },
  {
    "text": "data dog and I work with the cloud",
    "start": "19619",
    "end": "22199"
  },
  {
    "text": "workload security team so CWS leverages",
    "start": "22199",
    "end": "25019"
  },
  {
    "text": "the BPF to detect threats at runtime in",
    "start": "25019",
    "end": "27420"
  },
  {
    "text": "user space and everything we do is",
    "start": "27420",
    "end": "29820"
  },
  {
    "text": "embedded into the data log agent what",
    "start": "29820",
    "end": "31980"
  },
  {
    "text": "this means is if you are a client of",
    "start": "31980",
    "end": "33660"
  },
  {
    "text": "datadog and you want to try out CWS all",
    "start": "33660",
    "end": "35760"
  },
  {
    "text": "you have to do is update the data",
    "start": "35760",
    "end": "37440"
  },
  {
    "text": "location config",
    "start": "37440",
    "end": "39660"
  },
  {
    "text": "all right so let's go through the agenda",
    "start": "39660",
    "end": "41460"
  },
  {
    "text": "for today",
    "start": "41460",
    "end": "42840"
  },
  {
    "text": "um first I'm gonna give you a bit of",
    "start": "42840",
    "end": "44280"
  },
  {
    "text": "context about what this talk is about",
    "start": "44280",
    "end": "46800"
  },
  {
    "text": "um then we'll go over the thread models",
    "start": "46800",
    "end": "48360"
  },
  {
    "text": "that we are going to try to address",
    "start": "48360",
    "end": "50460"
  },
  {
    "text": "uh after that I'm going to present uh",
    "start": "50460",
    "end": "52559"
  },
  {
    "text": "sorry I'm going to first talk about why",
    "start": "52559",
    "end": "54000"
  },
  {
    "text": "BPF so it's like probably one of the",
    "start": "54000",
    "end": "55680"
  },
  {
    "text": "main questions of this talk uh why use",
    "start": "55680",
    "end": "57719"
  },
  {
    "text": "this technology to do this kind of",
    "start": "57719",
    "end": "59039"
  },
  {
    "text": "detections",
    "start": "59039",
    "end": "60480"
  },
  {
    "text": "um then I'm going to talk about cry so",
    "start": "60480",
    "end": "62039"
  },
  {
    "text": "cry is an open source project that I",
    "start": "62039",
    "end": "64198"
  },
  {
    "text": "will be releasing today",
    "start": "64199",
    "end": "65640"
  },
  {
    "text": "so we're gonna you know we go down the",
    "start": "65640",
    "end": "67560"
  },
  {
    "text": "the list of features that cry has to",
    "start": "67560",
    "end": "69360"
  },
  {
    "text": "offer and finally we're going to talk",
    "start": "69360",
    "end": "71280"
  },
  {
    "text": "about performance and what you you know",
    "start": "71280",
    "end": "73560"
  },
  {
    "text": "what overhead uh you need to expect if",
    "start": "73560",
    "end": "75780"
  },
  {
    "text": "you were to deploy cry in a real world",
    "start": "75780",
    "end": "77580"
  },
  {
    "text": "environment",
    "start": "77580",
    "end": "80000"
  },
  {
    "start": "80000",
    "end": "270000"
  },
  {
    "text": "all right so um I'm pretty sure it will",
    "start": "80220",
    "end": "82799"
  },
  {
    "text": "come as absolutely no surprise when I",
    "start": "82799",
    "end": "84540"
  },
  {
    "text": "say that uh critical cities are",
    "start": "84540",
    "end": "86580"
  },
  {
    "text": "regularly discovered in the Linux kernel",
    "start": "86580",
    "end": "88619"
  },
  {
    "text": "so it has nothing to do with Linux it's",
    "start": "88619",
    "end": "90600"
  },
  {
    "text": "just like you know perfectly normal in",
    "start": "90600",
    "end": "92340"
  },
  {
    "text": "the life cycle of a software that is",
    "start": "92340",
    "end": "94500"
  },
  {
    "text": "constantly being updated and that has",
    "start": "94500",
    "end": "96659"
  },
  {
    "text": "thousands of uh you know users in the",
    "start": "96659",
    "end": "99060"
  },
  {
    "text": "entire world",
    "start": "99060",
    "end": "100259"
  },
  {
    "text": "um but the thing is because of this",
    "start": "100259",
    "end": "101820"
  },
  {
    "text": "security admins worry about keeping up",
    "start": "101820",
    "end": "103920"
  },
  {
    "text": "with you know security updates uh",
    "start": "103920",
    "end": "106320"
  },
  {
    "text": "deploying those Secret Patches and if",
    "start": "106320",
    "end": "108540"
  },
  {
    "text": "anyone here has had to deal with the",
    "start": "108540",
    "end": "111299"
  },
  {
    "text": "dirty pipes variability you will",
    "start": "111299",
    "end": "112920"
  },
  {
    "text": "definitely know what I'm talking about a",
    "start": "112920",
    "end": "114780"
  },
  {
    "text": "grading kernel in the entire fleet of",
    "start": "114780",
    "end": "116820"
  },
  {
    "text": "your infrastructure takes weeks if not",
    "start": "116820",
    "end": "118799"
  },
  {
    "text": "months and in the meantime well you",
    "start": "118799",
    "end": "121500"
  },
  {
    "text": "don't have any you know you don't have",
    "start": "121500",
    "end": "123180"
  },
  {
    "text": "anything to protect yourself",
    "start": "123180",
    "end": "124680"
  },
  {
    "text": "um so basically security admins worry",
    "start": "124680",
    "end": "126299"
  },
  {
    "text": "about monitoring and protecting uh",
    "start": "126299",
    "end": "128280"
  },
  {
    "text": "vulnerable hosts and so they can",
    "start": "128280",
    "end": "130020"
  },
  {
    "text": "actually defy the upgrade and this is",
    "start": "130020",
    "end": "131879"
  },
  {
    "text": "exactly what this talk is about and",
    "start": "131879",
    "end": "133440"
  },
  {
    "text": "exactly what cry tries to address",
    "start": "133440",
    "end": "137000"
  },
  {
    "text": "um there are technically hundreds of",
    "start": "137819",
    "end": "139140"
  },
  {
    "text": "ways to exploit the Linux kernel and",
    "start": "139140",
    "end": "141720"
  },
  {
    "text": "this still targets just three types of",
    "start": "141720",
    "end": "143940"
  },
  {
    "text": "vulnerabilities",
    "start": "143940",
    "end": "145319"
  },
  {
    "text": "um so the first one is let's say that",
    "start": "145319",
    "end": "146819"
  },
  {
    "text": "another query is able to redirect the",
    "start": "146819",
    "end": "149160"
  },
  {
    "text": "execution flow within the comma",
    "start": "149160",
    "end": "151319"
  },
  {
    "text": "um another one is logic bugs so you know",
    "start": "151319",
    "end": "153660"
  },
  {
    "text": "another query is able to perform",
    "start": "153660",
    "end": "155040"
  },
  {
    "text": "something that is what that is not he's",
    "start": "155040",
    "end": "157080"
  },
  {
    "text": "not supposed to do because you know",
    "start": "157080",
    "end": "159120"
  },
  {
    "text": "developers made a mistake somewhere and",
    "start": "159120",
    "end": "161580"
  },
  {
    "text": "um you know the proper Access Control",
    "start": "161580",
    "end": "163200"
  },
  {
    "text": "could not be called and the operation",
    "start": "163200",
    "end": "165120"
  },
  {
    "text": "was actually actually Allowed by the",
    "start": "165120",
    "end": "167099"
  },
  {
    "text": "criminal even though it shouldn't have",
    "start": "167099",
    "end": "168180"
  },
  {
    "text": "been",
    "start": "168180",
    "end": "169019"
  },
  {
    "text": "and the last one is first compromise",
    "start": "169019",
    "end": "170940"
  },
  {
    "text": "kernel runtime iterations so once an",
    "start": "170940",
    "end": "173459"
  },
  {
    "text": "attacker successfully exploited your",
    "start": "173459",
    "end": "174959"
  },
  {
    "text": "kernel they are likely to try to you",
    "start": "174959",
    "end": "177660"
  },
  {
    "text": "know alter the commons so that they can",
    "start": "177660",
    "end": "179220"
  },
  {
    "text": "hide their tracks and further",
    "start": "179220",
    "end": "181140"
  },
  {
    "text": "um you know compromise the the services",
    "start": "181140",
    "end": "182640"
  },
  {
    "text": "running on the on the on the hosts",
    "start": "182640",
    "end": "185580"
  },
  {
    "text": "right so the goal today is to detect and",
    "start": "185580",
    "end": "187739"
  },
  {
    "text": "prevent these attacks with EPF yeah",
    "start": "187739",
    "end": "190379"
  },
  {
    "text": "simple enough right well absolutely not",
    "start": "190379",
    "end": "193140"
  },
  {
    "text": "um those three you know types of",
    "start": "193140",
    "end": "194700"
  },
  {
    "text": "annuities are way too ambitious and it",
    "start": "194700",
    "end": "197220"
  },
  {
    "text": "would be an Ode to lie if I was to say",
    "start": "197220",
    "end": "199560"
  },
  {
    "text": "that you know I was able to catch every",
    "start": "199560",
    "end": "201599"
  },
  {
    "text": "single one of them",
    "start": "201599",
    "end": "203280"
  },
  {
    "text": "um so what we are more realistically",
    "start": "203280",
    "end": "204900"
  },
  {
    "text": "going to do is trying to make attackers",
    "start": "204900",
    "end": "206819"
  },
  {
    "text": "lives a living hell",
    "start": "206819",
    "end": "208620"
  },
  {
    "text": "um so yeah again we need to be very",
    "start": "208620",
    "end": "210540"
  },
  {
    "text": "realistic about expectations and what",
    "start": "210540",
    "end": "212640"
  },
  {
    "text": "you can actually do with ebpf in the in",
    "start": "212640",
    "end": "215040"
  },
  {
    "text": "the you know in the Spheres of detecting",
    "start": "215040",
    "end": "217500"
  },
  {
    "text": "kernel exploits",
    "start": "217500",
    "end": "220400"
  },
  {
    "text": "um so I've been talking about BPI for a",
    "start": "221040",
    "end": "222659"
  },
  {
    "text": "while um so what is a vpf so in a",
    "start": "222659",
    "end": "225120"
  },
  {
    "text": "nutshell BPF is a way to run sandbox",
    "start": "225120",
    "end": "228239"
  },
  {
    "text": "programs in the Linux kernel so you",
    "start": "228239",
    "end": "230459"
  },
  {
    "text": "think of it as you have you know a c",
    "start": "230459",
    "end": "232680"
  },
  {
    "text": "program that you compile into EPPI by",
    "start": "232680",
    "end": "235080"
  },
  {
    "text": "code and that you load into the kernel",
    "start": "235080",
    "end": "236760"
  },
  {
    "text": "using the BPS Cisco",
    "start": "236760",
    "end": "238860"
  },
  {
    "text": "um so the code is going to you know",
    "start": "238860",
    "end": "240599"
  },
  {
    "text": "perform a bunch of checks essentially",
    "start": "240599",
    "end": "242220"
  },
  {
    "text": "the goal is to make sure that your",
    "start": "242220",
    "end": "243420"
  },
  {
    "text": "program is safe and that the kernel is",
    "start": "243420",
    "end": "245459"
  },
  {
    "text": "not going to crash or into a common",
    "start": "245459",
    "end": "247200"
  },
  {
    "text": "Panic or whatever because of your",
    "start": "247200",
    "end": "248879"
  },
  {
    "text": "program and then the second step is to",
    "start": "248879",
    "end": "252180"
  },
  {
    "text": "actually attach your evpf program to a",
    "start": "252180",
    "end": "254580"
  },
  {
    "text": "hook Point",
    "start": "254580",
    "end": "256079"
  },
  {
    "text": "um so you have a bunch of different",
    "start": "256079",
    "end": "257280"
  },
  {
    "text": "program types A bunch of foodpoints um",
    "start": "257280",
    "end": "259440"
  },
  {
    "text": "I'm gonna go over a few of them through",
    "start": "259440",
    "end": "261540"
  },
  {
    "text": "that talk but just know that yeah you",
    "start": "261540",
    "end": "263880"
  },
  {
    "text": "need to attach an eppf program 2.4 your",
    "start": "263880",
    "end": "267479"
  },
  {
    "text": "ibps program to actually get triggered",
    "start": "267479",
    "end": "271400"
  },
  {
    "start": "270000",
    "end": "566000"
  },
  {
    "text": "all right so why ubpf um what are the",
    "start": "272340",
    "end": "275639"
  },
  {
    "text": "reasons why this technology may make",
    "start": "275639",
    "end": "277620"
  },
  {
    "text": "sense for this kind of projects well the",
    "start": "277620",
    "end": "280800"
  },
  {
    "text": "first point is ebpf has a related",
    "start": "280800",
    "end": "283139"
  },
  {
    "text": "relatively wide kernel support depending",
    "start": "283139",
    "end": "285300"
  },
  {
    "text": "on the BPF features that you actually",
    "start": "285300",
    "end": "286800"
  },
  {
    "text": "use so um as long as you do not use two",
    "start": "286800",
    "end": "289620"
  },
  {
    "text": "fancy features you can actually go back",
    "start": "289620",
    "end": "291360"
  },
  {
    "text": "to I mean you know backboard your",
    "start": "291360",
    "end": "293280"
  },
  {
    "text": "detections back to 4.1 kernels another",
    "start": "293280",
    "end": "296759"
  },
  {
    "text": "good thing about ebpf is that it has",
    "start": "296759",
    "end": "299040"
  },
  {
    "text": "some safety and stability insurances",
    "start": "299040",
    "end": "300960"
  },
  {
    "text": "that kernel modules might not have",
    "start": "300960",
    "end": "303780"
  },
  {
    "text": "um it also has a rich feature set which",
    "start": "303780",
    "end": "305520"
  },
  {
    "text": "means that you have you know a lot of",
    "start": "305520",
    "end": "307500"
  },
  {
    "text": "different ways to understand what the",
    "start": "307500",
    "end": "309419"
  },
  {
    "text": "kernel is doing and what's happening in",
    "start": "309419",
    "end": "310860"
  },
  {
    "text": "Chrome space",
    "start": "310860",
    "end": "312240"
  },
  {
    "text": "and finally if you are you know using a",
    "start": "312240",
    "end": "315000"
  },
  {
    "text": "recent enough kernel you have some right",
    "start": "315000",
    "end": "317160"
  },
  {
    "text": "access and enforcement capabilities",
    "start": "317160",
    "end": "319979"
  },
  {
    "text": "so overall ebpf has a bunch of you know",
    "start": "319979",
    "end": "322259"
  },
  {
    "text": "Pros going for it right",
    "start": "322259",
    "end": "324600"
  },
  {
    "text": "um but at the same time ebpf is pretty",
    "start": "324600",
    "end": "326759"
  },
  {
    "text": "much a terrible idea to do this kind of",
    "start": "326759",
    "end": "328440"
  },
  {
    "text": "detections",
    "start": "328440",
    "end": "329580"
  },
  {
    "text": "um the first reason why it's really like",
    "start": "329580",
    "end": "331199"
  },
  {
    "text": "you know not great to do kernel level",
    "start": "331199",
    "end": "332900"
  },
  {
    "text": "explore detection with the BPF is",
    "start": "332900",
    "end": "335160"
  },
  {
    "text": "because detecting cost compromise",
    "start": "335160",
    "end": "337440"
  },
  {
    "text": "activity is fighting a lost battle so",
    "start": "337440",
    "end": "339780"
  },
  {
    "text": "we're gonna see why in some cases evpf",
    "start": "339780",
    "end": "342840"
  },
  {
    "text": "cannot catch you know and exploit",
    "start": "342840",
    "end": "344759"
  },
  {
    "text": "pre-compromise it's going to have to be",
    "start": "344759",
    "end": "346500"
  },
  {
    "text": "post compromised and the point is",
    "start": "346500",
    "end": "349199"
  },
  {
    "text": "um yeah if you are relying on a",
    "start": "349199",
    "end": "350460"
  },
  {
    "text": "compromise kernel to actually emits you",
    "start": "350460",
    "end": "352500"
  },
  {
    "text": "know security events while you can't",
    "start": "352500",
    "end": "354060"
  },
  {
    "text": "rely on these events to be actually",
    "start": "354060",
    "end": "356460"
  },
  {
    "text": "um you know legit and valuable like they",
    "start": "356460",
    "end": "358919"
  },
  {
    "text": "could be compromised as well",
    "start": "358919",
    "end": "360900"
  },
  {
    "text": "um the other reason why ubpf is not a",
    "start": "360900",
    "end": "362580"
  },
  {
    "text": "great idea for this is because there are",
    "start": "362580",
    "end": "364320"
  },
  {
    "text": "dozens of ways to disable ebpf programs",
    "start": "364320",
    "end": "366780"
  },
  {
    "text": "what this means is it's going to be as",
    "start": "366780",
    "end": "368880"
  },
  {
    "text": "important to actually write deductions",
    "start": "368880",
    "end": "370919"
  },
  {
    "text": "for whatever you're trying to detect",
    "start": "370919",
    "end": "372539"
  },
  {
    "text": "then it will that it will be to actually",
    "start": "372539",
    "end": "374880"
  },
  {
    "text": "protect the ebpf sub system and make",
    "start": "374880",
    "end": "377220"
  },
  {
    "text": "sure that you know it's actually still",
    "start": "377220",
    "end": "379139"
  },
  {
    "text": "enabled and still working and it will",
    "start": "379139",
    "end": "381120"
  },
  {
    "text": "trigger when you want it to trigger",
    "start": "381120",
    "end": "383280"
  },
  {
    "text": "last point is ebpf can have a",
    "start": "383280",
    "end": "385440"
  },
  {
    "text": "significant kernel space performance",
    "start": "385440",
    "end": "387000"
  },
  {
    "text": "impacts but we're going to talk about",
    "start": "387000",
    "end": "388319"
  },
  {
    "text": "this later",
    "start": "388319",
    "end": "389280"
  },
  {
    "text": "all right so what's the point right well",
    "start": "389280",
    "end": "391319"
  },
  {
    "text": "the point is group kit is an out of the",
    "start": "391319",
    "end": "393240"
  },
  {
    "text": "box word kits there is value in trying",
    "start": "393240",
    "end": "395880"
  },
  {
    "text": "to make attackers lives harder and to",
    "start": "395880",
    "end": "397800"
  },
  {
    "text": "try to make it harder to exploit uh",
    "start": "397800",
    "end": "400080"
  },
  {
    "text": "flows within the comma",
    "start": "400080",
    "end": "402539"
  },
  {
    "text": "and last but not least in some very",
    "start": "402539",
    "end": "404280"
  },
  {
    "text": "specific cases that we're going to talk",
    "start": "404280",
    "end": "405720"
  },
  {
    "text": "about detecting and blocking",
    "start": "405720",
    "end": "407520"
  },
  {
    "text": "pre-compromise is actually possible",
    "start": "407520",
    "end": "411319"
  },
  {
    "text": "all right so this is why today I'm",
    "start": "411600",
    "end": "413460"
  },
  {
    "text": "really saying cry so cry stands for kind",
    "start": "413460",
    "end": "415680"
  },
  {
    "text": "of Kernel runtime Integrity with EPF",
    "start": "415680",
    "end": "418440"
  },
  {
    "text": "um it's an open source project there are",
    "start": "418440",
    "end": "420120"
  },
  {
    "text": "there is no RNC board yet uh it's",
    "start": "420120",
    "end": "422400"
  },
  {
    "text": "compatible with at least kernel 5.15 and",
    "start": "422400",
    "end": "424860"
  },
  {
    "text": "plus",
    "start": "424860",
    "end": "426000"
  },
  {
    "text": "um yeah so it's available on GitHub",
    "start": "426000",
    "end": "427620"
  },
  {
    "text": "today so feel free to check it out",
    "start": "427620",
    "end": "429660"
  },
  {
    "text": "so instead of going through regarding",
    "start": "429660",
    "end": "432180"
  },
  {
    "text": "lists of all the features that cry has",
    "start": "432180",
    "end": "434400"
  },
  {
    "text": "to offer what I'm actually going to do",
    "start": "434400",
    "end": "436020"
  },
  {
    "text": "is get in the shoes of an ad hacker and",
    "start": "436020",
    "end": "438539"
  },
  {
    "text": "try to take you through the different",
    "start": "438539",
    "end": "439860"
  },
  {
    "text": "steps that an attacker might you know",
    "start": "439860",
    "end": "442139"
  },
  {
    "text": "follow in order to either exploit a flow",
    "start": "442139",
    "end": "444720"
  },
  {
    "text": "or of the kernel or try to bypass",
    "start": "444720",
    "end": "447539"
  },
  {
    "text": "whatever deductions we're going to talk",
    "start": "447539",
    "end": "449160"
  },
  {
    "text": "about today",
    "start": "449160",
    "end": "451580"
  },
  {
    "text": "all right so let's talk about the first",
    "start": "452340",
    "end": "454199"
  },
  {
    "text": "scenario so let's say that an attacker",
    "start": "454199",
    "end": "456180"
  },
  {
    "text": "controls the address of the next",
    "start": "456180",
    "end": "457740"
  },
  {
    "text": "instruction executed by the kernel so",
    "start": "457740",
    "end": "460500"
  },
  {
    "text": "this is a very textbook example of a",
    "start": "460500",
    "end": "462660"
  },
  {
    "text": "return object programming attack these",
    "start": "462660",
    "end": "464819"
  },
  {
    "text": "kind of attacks are usually used to try",
    "start": "464819",
    "end": "466560"
  },
  {
    "text": "to eventually you know elevate your",
    "start": "466560",
    "end": "468479"
  },
  {
    "text": "privileges and gain root access on a",
    "start": "468479",
    "end": "470940"
  },
  {
    "text": "machine uh when the the process actually",
    "start": "470940",
    "end": "473819"
  },
  {
    "text": "goes back to user space",
    "start": "473819",
    "end": "476220"
  },
  {
    "text": "so let's go through the different steps",
    "start": "476220",
    "end": "478199"
  },
  {
    "text": "of the attack and see you know what's",
    "start": "478199",
    "end": "480240"
  },
  {
    "text": "happening and how cry can actually help",
    "start": "480240",
    "end": "482400"
  },
  {
    "text": "to detect this kind of attacks so the",
    "start": "482400",
    "end": "484620"
  },
  {
    "text": "first step is again so the attacker is",
    "start": "484620",
    "end": "486900"
  },
  {
    "text": "allowed to to choose which you know",
    "start": "486900",
    "end": "489360"
  },
  {
    "text": "which will be the next instruction",
    "start": "489360",
    "end": "490460"
  },
  {
    "text": "executed by the kernel so let's say that",
    "start": "490460",
    "end": "492780"
  },
  {
    "text": "they jump to a stack pivot so stack",
    "start": "492780",
    "end": "495060"
  },
  {
    "text": "pivot is very simple the idea is the",
    "start": "495060",
    "end": "497340"
  },
  {
    "text": "attacker will be able to choose where um",
    "start": "497340",
    "end": "499979"
  },
  {
    "text": "the stack pointer will point to uh",
    "start": "499979",
    "end": "502259"
  },
  {
    "text": "assuming that they have access to and",
    "start": "502259",
    "end": "504000"
  },
  {
    "text": "they can control or just predict the",
    "start": "504000",
    "end": "506160"
  },
  {
    "text": "address that will be in eax or there and",
    "start": "506160",
    "end": "509879"
  },
  {
    "text": "the point is they will actually point",
    "start": "509879",
    "end": "511379"
  },
  {
    "text": "the stack of the kernel thread to a user",
    "start": "511379",
    "end": "513719"
  },
  {
    "text": "space buffer",
    "start": "513719",
    "end": "515279"
  },
  {
    "text": "um and within this usage buffer they",
    "start": "515279",
    "end": "517140"
  },
  {
    "text": "will have prepared the entire web chain",
    "start": "517140",
    "end": "518700"
  },
  {
    "text": "and you know little by little eventually",
    "start": "518700",
    "end": "520919"
  },
  {
    "text": "at some point they will execute a kernel",
    "start": "520919",
    "end": "522779"
  },
  {
    "text": "function with attacker control",
    "start": "522779",
    "end": "524039"
  },
  {
    "text": "parameters",
    "start": "524039",
    "end": "525480"
  },
  {
    "text": "so over the past few years a few and",
    "start": "525480",
    "end": "528899"
  },
  {
    "text": "actually a lot of",
    "start": "528899",
    "end": "530459"
  },
  {
    "text": "um you know features were added to try",
    "start": "530459",
    "end": "532200"
  },
  {
    "text": "to prevent these attacks from working",
    "start": "532200",
    "end": "533700"
  },
  {
    "text": "one of them is called smart so it stands",
    "start": "533700",
    "end": "536100"
  },
  {
    "text": "for supervisor mode access prevention",
    "start": "536100",
    "end": "538380"
  },
  {
    "text": "and what it does is it prevents a kernel",
    "start": "538380",
    "end": "540779"
  },
  {
    "text": "threat from using a user space buffer",
    "start": "540779",
    "end": "543060"
  },
  {
    "text": "for its stack so basically what I've",
    "start": "543060",
    "end": "545700"
  },
  {
    "text": "just described will not be possible",
    "start": "545700",
    "end": "547140"
  },
  {
    "text": "because of snap",
    "start": "547140",
    "end": "548399"
  },
  {
    "text": "is a bit you know it's rated because",
    "start": "548399",
    "end": "550860"
  },
  {
    "text": "it's also checking addresses but the",
    "start": "550860",
    "end": "552480"
  },
  {
    "text": "point is instead of jumping into the",
    "start": "552480",
    "end": "554220"
  },
  {
    "text": "stack pivot I could have tried so here I",
    "start": "554220",
    "end": "556620"
  },
  {
    "text": "could have tried to jump directly in",
    "start": "556620",
    "end": "558240"
  },
  {
    "text": "user space executable memory and Smith",
    "start": "558240",
    "end": "560700"
  },
  {
    "text": "would have prevented me from actually",
    "start": "560700",
    "end": "562080"
  },
  {
    "text": "jumping to user space from a kernel",
    "start": "562080",
    "end": "564360"
  },
  {
    "text": "space thread",
    "start": "564360",
    "end": "566959"
  },
  {
    "start": "566000",
    "end": "702000"
  },
  {
    "text": "um all right but for the sake of this",
    "start": "567480",
    "end": "569160"
  },
  {
    "text": "talk let's say that's map ends map are",
    "start": "569160",
    "end": "571260"
  },
  {
    "text": "disabled",
    "start": "571260",
    "end": "572640"
  },
  {
    "text": "um and also let's say that the route",
    "start": "572640",
    "end": "574080"
  },
  {
    "text": "chain was eventually updated to uh",
    "start": "574080",
    "end": "576420"
  },
  {
    "text": "called commit credits of prepare Canal",
    "start": "576420",
    "end": "578760"
  },
  {
    "text": "credit of zero so basically what these",
    "start": "578760",
    "end": "580620"
  },
  {
    "text": "two functions do is they upgrade the the",
    "start": "580620",
    "end": "583279"
  },
  {
    "text": "kernel sorry the credentials of the",
    "start": "583279",
    "end": "586019"
  },
  {
    "text": "current thread and eventually make the",
    "start": "586019",
    "end": "588060"
  },
  {
    "text": "current thread roots",
    "start": "588060",
    "end": "589680"
  },
  {
    "text": "okay so what can we do for machines",
    "start": "589680",
    "end": "591720"
  },
  {
    "text": "without snap and without smap",
    "start": "591720",
    "end": "594540"
  },
  {
    "text": "well the very first thing that comes to",
    "start": "594540",
    "end": "596459"
  },
  {
    "text": "mind is to put a k probe and prepare",
    "start": "596459",
    "end": "598500"
  },
  {
    "text": "cannot create so what this does okay so",
    "start": "598500",
    "end": "600899"
  },
  {
    "text": "just like before I get into the details",
    "start": "600899",
    "end": "602760"
  },
  {
    "text": "okay probes are a type of programs of",
    "start": "602760",
    "end": "604980"
  },
  {
    "text": "evpf programs that you can use to attach",
    "start": "604980",
    "end": "607080"
  },
  {
    "text": "an ubpf program to an exported kernel",
    "start": "607080",
    "end": "609360"
  },
  {
    "text": "symbol what this means is whenever this",
    "start": "609360",
    "end": "611459"
  },
  {
    "text": "kernel symbol is called the ebpf program",
    "start": "611459",
    "end": "613500"
  },
  {
    "text": "will be triggered first",
    "start": "613500",
    "end": "615720"
  },
  {
    "text": "um so what we can do is put a k program",
    "start": "615720",
    "end": "617399"
  },
  {
    "text": "that on that symbol and then check if",
    "start": "617399",
    "end": "619500"
  },
  {
    "text": "the stack pointer the frame pointer and",
    "start": "619500",
    "end": "621180"
  },
  {
    "text": "the instruction pointer are actually",
    "start": "621180",
    "end": "623160"
  },
  {
    "text": "pointing to the space memory",
    "start": "623160",
    "end": "626480"
  },
  {
    "text": "all right so um what you can see here is",
    "start": "626760",
    "end": "629820"
  },
  {
    "text": "simply uh you know so it's a vulnerable",
    "start": "629820",
    "end": "631920"
  },
  {
    "text": "kernel module that I had to load in",
    "start": "631920",
    "end": "633959"
  },
  {
    "text": "order for the remote to work but",
    "start": "633959",
    "end": "635760"
  },
  {
    "text": "basically what you can see is that here",
    "start": "635760",
    "end": "637620"
  },
  {
    "text": "there is an offset that is actually uh",
    "start": "637620",
    "end": "639600"
  },
  {
    "text": "controlled by the attacker and they can",
    "start": "639600",
    "end": "641160"
  },
  {
    "text": "use these offsets to you know move",
    "start": "641160",
    "end": "643260"
  },
  {
    "text": "wherever they want in the kernel and",
    "start": "643260",
    "end": "645360"
  },
  {
    "text": "choose what the next instruction is",
    "start": "645360",
    "end": "647519"
  },
  {
    "text": "going to be and what the next you know",
    "start": "647519",
    "end": "648720"
  },
  {
    "text": "the instruction that the kernel is going",
    "start": "648720",
    "end": "651180"
  },
  {
    "text": "to execute will be",
    "start": "651180",
    "end": "653160"
  },
  {
    "text": "um all right so this killer module was",
    "start": "653160",
    "end": "655860"
  },
  {
    "text": "loaded so let's jump into a machine and",
    "start": "655860",
    "end": "658320"
  },
  {
    "text": "then start cry",
    "start": "658320",
    "end": "661040"
  },
  {
    "text": "here you go and then eventually you know",
    "start": "661320",
    "end": "663959"
  },
  {
    "text": "exploit the bag and see um the recording",
    "start": "663959",
    "end": "666480"
  },
  {
    "text": "action all right perfect so I've",
    "start": "666480",
    "end": "667740"
  },
  {
    "text": "configured cry to shape all the logs and",
    "start": "667740",
    "end": "670079"
  },
  {
    "text": "all the others to datadog you could",
    "start": "670079",
    "end": "671760"
  },
  {
    "text": "actually have used any kind of any any",
    "start": "671760",
    "end": "673200"
  },
  {
    "text": "log monitoring platform it's okay the",
    "start": "673200",
    "end": "675480"
  },
  {
    "text": "the logs are generated in a Json file",
    "start": "675480",
    "end": "678720"
  },
  {
    "text": "um and yeah if you update the page",
    "start": "678720",
    "end": "680220"
  },
  {
    "text": "you'll see that a new log was sent which",
    "start": "680220",
    "end": "682800"
  },
  {
    "text": "is a registered check event",
    "start": "682800",
    "end": "685980"
  },
  {
    "text": "and then you have context about the",
    "start": "685980",
    "end": "688260"
  },
  {
    "text": "process that made that triggered this",
    "start": "688260",
    "end": "689940"
  },
  {
    "text": "detection and then eventually you get",
    "start": "689940",
    "end": "691980"
  },
  {
    "text": "you know like the hook point on which",
    "start": "691980",
    "end": "693480"
  },
  {
    "text": "the detection was made and then you",
    "start": "693480",
    "end": "694920"
  },
  {
    "text": "clearly see that the side pointer here",
    "start": "694920",
    "end": "696420"
  },
  {
    "text": "is in user space which is you know a",
    "start": "696420",
    "end": "698880"
  },
  {
    "text": "detection that's something weird",
    "start": "698880",
    "end": "700200"
  },
  {
    "text": "happened",
    "start": "700200",
    "end": "702560"
  },
  {
    "start": "702000",
    "end": "739000"
  },
  {
    "text": "all right so it sounds great it does",
    "start": "704339",
    "end": "706800"
  },
  {
    "text": "work but it's simply like Snap and",
    "start": "706800",
    "end": "708899"
  },
  {
    "text": "smartphone and the reason for this is",
    "start": "708899",
    "end": "710579"
  },
  {
    "text": "because you need to hook all the",
    "start": "710579",
    "end": "712380"
  },
  {
    "text": "functions called by kernel exploit for",
    "start": "712380",
    "end": "714060"
  },
  {
    "text": "this work the other problem is blocking",
    "start": "714060",
    "end": "716459"
  },
  {
    "text": "mode only works on 5.3 kernels in plus",
    "start": "716459",
    "end": "719399"
  },
  {
    "text": "and the reason for this is because if",
    "start": "719399",
    "end": "721140"
  },
  {
    "text": "you want to actually block this kind of",
    "start": "721140",
    "end": "722339"
  },
  {
    "text": "things you need to kill the thread and",
    "start": "722339",
    "end": "723959"
  },
  {
    "text": "you're not to kill the thread you need a",
    "start": "723959",
    "end": "725459"
  },
  {
    "text": "helper that was introduced in 5.3",
    "start": "725459",
    "end": "727320"
  },
  {
    "text": "kernels another problem with this is if",
    "start": "727320",
    "end": "729720"
  },
  {
    "text": "an attacker knew that you were using",
    "start": "729720",
    "end": "731519"
  },
  {
    "text": "k-prebs to actually detect this as yeah",
    "start": "731519",
    "end": "734519"
  },
  {
    "text": "well all they would try to do is prevent",
    "start": "734519",
    "end": "736620"
  },
  {
    "text": "the k-probe from firing in the first",
    "start": "736620",
    "end": "738120"
  },
  {
    "text": "place",
    "start": "738120",
    "end": "738959"
  },
  {
    "text": "all right so get on",
    "start": "738959",
    "end": "740820"
  },
  {
    "start": "739000",
    "end": "777000"
  },
  {
    "text": "um what would the networker do to to uh",
    "start": "740820",
    "end": "742860"
  },
  {
    "text": "you know disable the K4 well as far as I",
    "start": "742860",
    "end": "745200"
  },
  {
    "text": "know there are three main ways to",
    "start": "745200",
    "end": "746640"
  },
  {
    "text": "disable the k-probe the first one is to",
    "start": "746640",
    "end": "748320"
  },
  {
    "text": "use kick probes enable interface so I'm",
    "start": "748320",
    "end": "750120"
  },
  {
    "text": "going to talk about this one later the",
    "start": "750120",
    "end": "751620"
  },
  {
    "text": "second one is to use cctl to disable F",
    "start": "751620",
    "end": "754260"
  },
  {
    "text": "Trace enabled so this is a global kill",
    "start": "754260",
    "end": "756180"
  },
  {
    "text": "switch for all the tracing subsystems of",
    "start": "756180",
    "end": "758519"
  },
  {
    "text": "the Linux KOMO and the last one is to",
    "start": "758519",
    "end": "760440"
  },
  {
    "text": "kill the user space process that",
    "start": "760440",
    "end": "762060"
  },
  {
    "text": "actually loaded the BPI programs well",
    "start": "762060",
    "end": "765000"
  },
  {
    "text": "let's try to booby trap everything right",
    "start": "765000",
    "end": "767760"
  },
  {
    "text": "um I'm not going to talk about the last",
    "start": "767760",
    "end": "768839"
  },
  {
    "text": "one a lot because it's probably the",
    "start": "768839",
    "end": "770579"
  },
  {
    "text": "nosiest option and probably not the one",
    "start": "770579",
    "end": "772560"
  },
  {
    "text": "that attackers are going to try to do",
    "start": "772560",
    "end": "773940"
  },
  {
    "text": "first so I'm just going to go over the",
    "start": "773940",
    "end": "775560"
  },
  {
    "text": "first two ones",
    "start": "775560",
    "end": "777120"
  },
  {
    "start": "777000",
    "end": "805000"
  },
  {
    "text": "all right so let's talk about the first",
    "start": "777120",
    "end": "779220"
  },
  {
    "text": "one so kpreps enabled is a global kill",
    "start": "779220",
    "end": "781380"
  },
  {
    "text": "switch to disarm all K probes on your",
    "start": "781380",
    "end": "783180"
  },
  {
    "text": "machine",
    "start": "783180",
    "end": "784320"
  },
  {
    "text": "um if you look at how it works",
    "start": "784320",
    "end": "786120"
  },
  {
    "text": "eventually it will call the right and",
    "start": "786120",
    "end": "787560"
  },
  {
    "text": "evolved five ball hook point and I mean",
    "start": "787560",
    "end": "789899"
  },
  {
    "text": "symbol and you can actually update the",
    "start": "789899",
    "end": "792360"
  },
  {
    "text": "rock chain to do that yourself so what",
    "start": "792360",
    "end": "794519"
  },
  {
    "text": "you could do is use your web chain to",
    "start": "794519",
    "end": "796200"
  },
  {
    "text": "eventually try to disable you know all",
    "start": "796200",
    "end": "798360"
  },
  {
    "text": "the k-probes before jumping to the",
    "start": "798360",
    "end": "800760"
  },
  {
    "text": "commit threads function",
    "start": "800760",
    "end": "803399"
  },
  {
    "text": "all right so let's put the camera on it",
    "start": "803399",
    "end": "805139"
  },
  {
    "start": "805000",
    "end": "893000"
  },
  {
    "text": "as well",
    "start": "805139",
    "end": "806100"
  },
  {
    "text": "on the problem is even if you did put a",
    "start": "806100",
    "end": "808139"
  },
  {
    "text": "good program on it if an attacker knew",
    "start": "808139",
    "end": "809880"
  },
  {
    "text": "that you were using K probes again there",
    "start": "809880",
    "end": "811620"
  },
  {
    "text": "is another way to verify Escape probes",
    "start": "811620",
    "end": "813240"
  },
  {
    "text": "even without going through the paint",
    "start": "813240",
    "end": "815040"
  },
  {
    "text": "part of you know cooling white in a",
    "start": "815040",
    "end": "817260"
  },
  {
    "text": "right on the wall Fireball",
    "start": "817260",
    "end": "819000"
  },
  {
    "text": "um and the way you can you know",
    "start": "819000",
    "end": "820800"
  },
  {
    "text": "understand how to do it is simply by",
    "start": "820800",
    "end": "822480"
  },
  {
    "text": "looking at the buy code at one time so",
    "start": "822480",
    "end": "824639"
  },
  {
    "text": "on the left here you can see that this",
    "start": "824639",
    "end": "826380"
  },
  {
    "text": "is the bytecode of the function without",
    "start": "826380",
    "end": "828180"
  },
  {
    "text": "a k probe and on the right this is with",
    "start": "828180",
    "end": "829860"
  },
  {
    "text": "the k-pro so what's happening here is",
    "start": "829860",
    "end": "831839"
  },
  {
    "text": "that when a k-prov is actually loaded",
    "start": "831839",
    "end": "833700"
  },
  {
    "text": "the bytecode is Rewritten to call to",
    "start": "833700",
    "end": "836399"
  },
  {
    "text": "some address that is actually a",
    "start": "836399",
    "end": "837600"
  },
  {
    "text": "subsystem of the k-probe um you know",
    "start": "837600",
    "end": "839700"
  },
  {
    "text": "feature and and then it will this",
    "start": "839700",
    "end": "841740"
  },
  {
    "text": "subsystem will actually call your ippf",
    "start": "841740",
    "end": "843480"
  },
  {
    "text": "program so if an attacker knew that you",
    "start": "843480",
    "end": "845639"
  },
  {
    "text": "are using this to to check the registers",
    "start": "845639",
    "end": "848040"
  },
  {
    "text": "what they could do is simply jump five",
    "start": "848040",
    "end": "849779"
  },
  {
    "text": "bytes later and then like you know",
    "start": "849779",
    "end": "851519"
  },
  {
    "text": "bypass the call to the caper well again",
    "start": "851519",
    "end": "854100"
  },
  {
    "text": "game on what do you do next",
    "start": "854100",
    "end": "856260"
  },
  {
    "text": "um the cool thing is K probes can",
    "start": "856260",
    "end": "857880"
  },
  {
    "text": "actually be added uh in in you know uh",
    "start": "857880",
    "end": "861000"
  },
  {
    "text": "hooked at multiple offsets past the the",
    "start": "861000",
    "end": "864000"
  },
  {
    "text": "symbol that you care about",
    "start": "864000",
    "end": "865920"
  },
  {
    "text": "um and technically you can actually put",
    "start": "865920",
    "end": "867540"
  },
  {
    "text": "many of them so the point is in order to",
    "start": "867540",
    "end": "870120"
  },
  {
    "text": "prevent them from from preparing the",
    "start": "870120",
    "end": "871800"
  },
  {
    "text": "attacker from being able to jump uh past",
    "start": "871800",
    "end": "874079"
  },
  {
    "text": "the call to your k-pro what you can do",
    "start": "874079",
    "end": "876000"
  },
  {
    "text": "is load multiple instances of them and",
    "start": "876000",
    "end": "878399"
  },
  {
    "text": "then like do that further I mean fire",
    "start": "878399",
    "end": "880800"
  },
  {
    "text": "away inside the function so that the",
    "start": "880800",
    "end": "882540"
  },
  {
    "text": "attacker is deterred to uh ever try to",
    "start": "882540",
    "end": "885060"
  },
  {
    "text": "call the function at all",
    "start": "885060",
    "end": "886920"
  },
  {
    "text": "all right so that could work",
    "start": "886920",
    "end": "889019"
  },
  {
    "text": "um but what else could they do uh you",
    "start": "889019",
    "end": "891240"
  },
  {
    "text": "know past this and to try to bypass this",
    "start": "891240",
    "end": "892740"
  },
  {
    "text": "again",
    "start": "892740",
    "end": "893940"
  },
  {
    "text": "um well if you look at what",
    "start": "893940",
    "end": "895139"
  },
  {
    "text": "right-handable fight ball does it",
    "start": "895139",
    "end": "897180"
  },
  {
    "text": "actually writes zero or one to a global",
    "start": "897180",
    "end": "899519"
  },
  {
    "text": "variable called K probes all designed so",
    "start": "899519",
    "end": "902339"
  },
  {
    "text": "if you I mean the attacker could try to",
    "start": "902339",
    "end": "904440"
  },
  {
    "text": "write one or zero directly to kpreps all",
    "start": "904440",
    "end": "907260"
  },
  {
    "text": "designs",
    "start": "907260",
    "end": "908399"
  },
  {
    "text": "um so it won't necessarily disable the K",
    "start": "908399",
    "end": "910260"
  },
  {
    "text": "probes that are already loaded but at",
    "start": "910260",
    "end": "912120"
  },
  {
    "text": "least it will prevent you from loading",
    "start": "912120",
    "end": "913680"
  },
  {
    "text": "new ones and the bad thing is with the",
    "start": "913680",
    "end": "915839"
  },
  {
    "text": "BPF you have no way to hook anything",
    "start": "915839",
    "end": "917760"
  },
  {
    "text": "right because you don't have any symbols",
    "start": "917760",
    "end": "919680"
  },
  {
    "text": "you don't have any program types that is",
    "start": "919680",
    "end": "921240"
  },
  {
    "text": "able to to just hook on memory that is",
    "start": "921240",
    "end": "923100"
  },
  {
    "text": "being updated so there is nothing you",
    "start": "923100",
    "end": "924779"
  },
  {
    "text": "can do well actually almost what you can",
    "start": "924779",
    "end": "926940"
  },
  {
    "text": "actually do is use a perf event program",
    "start": "926940",
    "end": "928740"
  },
  {
    "text": "type to periodically check the values of",
    "start": "928740",
    "end": "931199"
  },
  {
    "text": "all sensitive kernel parameters so perf",
    "start": "931199",
    "end": "933540"
  },
  {
    "text": "events are usually used to um collect",
    "start": "933540",
    "end": "935880"
  },
  {
    "text": "you know Hardware metrics on your",
    "start": "935880",
    "end": "937500"
  },
  {
    "text": "processes but you can actually configure",
    "start": "937500",
    "end": "939899"
  },
  {
    "text": "it to trigger periodically",
    "start": "939899",
    "end": "941760"
  },
  {
    "text": "so that's what cray does",
    "start": "941760",
    "end": "944699"
  },
  {
    "text": "all right so let's talk about the second",
    "start": "944699",
    "end": "946699"
  },
  {
    "text": "way of disabling K probes the other way",
    "start": "946699",
    "end": "949320"
  },
  {
    "text": "to do it is to use the system interface",
    "start": "949320",
    "end": "952079"
  },
  {
    "text": "the good news is there is an entire BPF",
    "start": "952079",
    "end": "954180"
  },
  {
    "text": "program dedicated to cctl",
    "start": "954180",
    "end": "957240"
  },
  {
    "text": "um and unfortunately it was added in 5.2",
    "start": "957240",
    "end": "959339"
  },
  {
    "text": "kernels so if you want to do this kind",
    "start": "959339",
    "end": "960959"
  },
  {
    "text": "of things for all the kernels you're",
    "start": "960959",
    "end": "962459"
  },
  {
    "text": "going to have to use kfrops again but",
    "start": "962459",
    "end": "964680"
  },
  {
    "text": "the point is with this program type you",
    "start": "964680",
    "end": "966420"
  },
  {
    "text": "can actually detect when the parameter",
    "start": "966420",
    "end": "968459"
  },
  {
    "text": "is about to be changed and you know",
    "start": "968459",
    "end": "970139"
  },
  {
    "text": "preventatively change the value or block",
    "start": "970139",
    "end": "972959"
  },
  {
    "text": "the call entirely",
    "start": "972959",
    "end": "975120"
  },
  {
    "text": "um almost all sensitive system",
    "start": "975120",
    "end": "976620"
  },
  {
    "text": "parameters are checked by crowd",
    "start": "976620",
    "end": "978779"
  },
  {
    "text": "periodically",
    "start": "978779",
    "end": "981180"
  },
  {
    "text": "all right so let's say that whatever you",
    "start": "981180",
    "end": "983399"
  },
  {
    "text": "did so far did not work and the attacker",
    "start": "983399",
    "end": "985139"
  },
  {
    "text": "was able to work around your detections",
    "start": "985139",
    "end": "987240"
  },
  {
    "text": "and eventually became roots on the",
    "start": "987240",
    "end": "988920"
  },
  {
    "text": "machine",
    "start": "988920",
    "end": "989940"
  },
  {
    "text": "um what they're likely going to do after",
    "start": "989940",
    "end": "991320"
  },
  {
    "text": "that is try to persist their access and",
    "start": "991320",
    "end": "993899"
  },
  {
    "text": "also modify the common runtime to hide",
    "start": "993899",
    "end": "996540"
  },
  {
    "text": "their tracks the way they do it usually",
    "start": "996540",
    "end": "998880"
  },
  {
    "text": "is by using column modules and then",
    "start": "998880",
    "end": "1001160"
  },
  {
    "text": "within the kernel module try to hook",
    "start": "1001160",
    "end": "1003680"
  },
  {
    "text": "ciscals to to you know change the output",
    "start": "1003680",
    "end": "1006440"
  },
  {
    "text": "of a Cisco basically the way to hook",
    "start": "1006440",
    "end": "1009380"
  },
  {
    "text": "ciscals there are a bunch of ways to do",
    "start": "1009380",
    "end": "1010880"
  },
  {
    "text": "it but mainly it's usually based on KP",
    "start": "1010880",
    "end": "1012800"
  },
  {
    "text": "probes or by hooking this is called",
    "start": "1012800",
    "end": "1014180"
  },
  {
    "text": "table directly",
    "start": "1014180",
    "end": "1015680"
  },
  {
    "text": "another thing that kind of workers have",
    "start": "1015680",
    "end": "1017720"
  },
  {
    "text": "been doing the past few years is use BPI",
    "start": "1017720",
    "end": "1020120"
  },
  {
    "text": "filters to try to tap into the network",
    "start": "1020120",
    "end": "1022759"
  },
  {
    "text": "traffic or they could also just like you",
    "start": "1022759",
    "end": "1025640"
  },
  {
    "text": "know not use a kernel module at all and",
    "start": "1025640",
    "end": "1027500"
  },
  {
    "text": "do everything using BPI ebpf programs um",
    "start": "1027500",
    "end": "1030199"
  },
  {
    "text": "we actually had to talk last year about",
    "start": "1030199",
    "end": "1031579"
  },
  {
    "text": "this so if you are interested we uh we",
    "start": "1031579",
    "end": "1033620"
  },
  {
    "text": "you know we worked and published an",
    "start": "1033620",
    "end": "1035000"
  },
  {
    "text": "entire uh BPF ebpf base with rootkit",
    "start": "1035000",
    "end": "1040100"
  },
  {
    "text": "all right so what cry does because of",
    "start": "1040100",
    "end": "1042020"
  },
  {
    "text": "all of this is actually monitor",
    "start": "1042020",
    "end": "1043459"
  },
  {
    "text": "everything I've just talked about so you",
    "start": "1043459",
    "end": "1045438"
  },
  {
    "text": "know any kind of ppf operation will",
    "start": "1045439",
    "end": "1047000"
  },
  {
    "text": "generate alert any kind of common module",
    "start": "1047000",
    "end": "1049160"
  },
  {
    "text": "load or deletion events any kind of",
    "start": "1049160",
    "end": "1051080"
  },
  {
    "text": "K-pop registration or design events and",
    "start": "1051080",
    "end": "1053240"
  },
  {
    "text": "so on and more importantly here for the",
    "start": "1053240",
    "end": "1055700"
  },
  {
    "text": "next demo execution of hood ciscals so",
    "start": "1055700",
    "end": "1059240"
  },
  {
    "text": "cry is able to detect again with the",
    "start": "1059240",
    "end": "1061580"
  },
  {
    "text": "periodical check trick that the hook the",
    "start": "1061580",
    "end": "1063980"
  },
  {
    "text": "sorry the Cisco table was hooked just by",
    "start": "1063980",
    "end": "1066140"
  },
  {
    "text": "looking at the address of the Handler of",
    "start": "1066140",
    "end": "1067580"
  },
  {
    "text": "a Cisco if it is outside of the kernel",
    "start": "1067580",
    "end": "1069440"
  },
  {
    "text": "text so if it is for example inside of a",
    "start": "1069440",
    "end": "1071360"
  },
  {
    "text": "module code",
    "start": "1071360",
    "end": "1072500"
  },
  {
    "text": "um it will trigger an event and then",
    "start": "1072500",
    "end": "1074059"
  },
  {
    "text": "also if the handle changes of attack it",
    "start": "1074059",
    "end": "1076820"
  },
  {
    "text": "will also show you an event another way",
    "start": "1076820",
    "end": "1079160"
  },
  {
    "text": "and cool trick of cry is that it is able",
    "start": "1079160",
    "end": "1081140"
  },
  {
    "text": "to detect when a process is about to",
    "start": "1081140",
    "end": "1083120"
  },
  {
    "text": "execute a Cisco that was hooked and",
    "start": "1083120",
    "end": "1085160"
  },
  {
    "text": "again can configure cried to either plug",
    "start": "1085160",
    "end": "1087559"
  },
  {
    "text": "or kill the process that is about to do",
    "start": "1087559",
    "end": "1089600"
  },
  {
    "text": "that",
    "start": "1089600",
    "end": "1091400"
  },
  {
    "text": "all right",
    "start": "1091400",
    "end": "1092780"
  },
  {
    "text": "so again this is the kernel module as",
    "start": "1092780",
    "end": "1095480"
  },
  {
    "text": "you can see it was modified to on init",
    "start": "1095480",
    "end": "1097460"
  },
  {
    "text": "just you know this is a basic assist",
    "start": "1097460",
    "end": "1099500"
  },
  {
    "text": "called table hook method but like",
    "start": "1099500",
    "end": "1101000"
  },
  {
    "text": "overwrite the Cisco Handler to be our",
    "start": "1101000",
    "end": "1103280"
  },
  {
    "text": "own Cisco lender",
    "start": "1103280",
    "end": "1104960"
  },
  {
    "text": "and then if you look at the",
    "start": "1104960",
    "end": "1107419"
  },
  {
    "text": "um configuration file of cry you'll see",
    "start": "1107419",
    "end": "1108919"
  },
  {
    "text": "that I've configured it to log whenever",
    "start": "1108919",
    "end": "1111140"
  },
  {
    "text": "the Cisco table is hooked and also",
    "start": "1111140",
    "end": "1113240"
  },
  {
    "text": "killed the process that I might try to",
    "start": "1113240",
    "end": "1115340"
  },
  {
    "text": "execute a Cisco that has been hooked",
    "start": "1115340",
    "end": "1118520"
  },
  {
    "text": "so for this demo I wrote a basic web",
    "start": "1118520",
    "end": "1120559"
  },
  {
    "text": "server and then if you you know call the",
    "start": "1120559",
    "end": "1122360"
  },
  {
    "text": "books endpoint you'll get a list of",
    "start": "1122360",
    "end": "1123919"
  },
  {
    "text": "books and to answer this list of books",
    "start": "1123919",
    "end": "1126500"
  },
  {
    "text": "the server has to issue and opens this",
    "start": "1126500",
    "end": "1129320"
  },
  {
    "text": "call",
    "start": "1129320",
    "end": "1130820"
  },
  {
    "text": "all right so let's start cry and then",
    "start": "1130820",
    "end": "1133700"
  },
  {
    "text": "insert the module that I just talked",
    "start": "1133700",
    "end": "1136400"
  },
  {
    "text": "about",
    "start": "1136400",
    "end": "1138460"
  },
  {
    "text": "perfect",
    "start": "1139039",
    "end": "1140600"
  },
  {
    "text": "and then let's jump into Data dog to see",
    "start": "1140600",
    "end": "1142700"
  },
  {
    "text": "what logs were pretty much immediately",
    "start": "1142700",
    "end": "1144440"
  },
  {
    "text": "generated",
    "start": "1144440",
    "end": "1146980"
  },
  {
    "text": "So eventually you'll get two of them",
    "start": "1147140",
    "end": "1149480"
  },
  {
    "text": "perfect so the first one is init module",
    "start": "1149480",
    "end": "1151760"
  },
  {
    "text": "so it's simply that you know the new",
    "start": "1151760",
    "end": "1153080"
  },
  {
    "text": "model was loaded you have the name of",
    "start": "1153080",
    "end": "1154640"
  },
  {
    "text": "the module and the process that did it",
    "start": "1154640",
    "end": "1156380"
  },
  {
    "text": "and then if you look at the hook Cisco",
    "start": "1156380",
    "end": "1158000"
  },
  {
    "text": "table you'll see clearly that you know",
    "start": "1158000",
    "end": "1159740"
  },
  {
    "text": "the opens is called was hooked it used",
    "start": "1159740",
    "end": "1162020"
  },
  {
    "text": "to be x64s is open and now it is ours is",
    "start": "1162020",
    "end": "1165140"
  },
  {
    "text": "open inside the vision device module",
    "start": "1165140",
    "end": "1167840"
  },
  {
    "text": "so let's go back to our web server and",
    "start": "1167840",
    "end": "1170780"
  },
  {
    "text": "then like you know issue the request",
    "start": "1170780",
    "end": "1172400"
  },
  {
    "text": "again and see what happens now that cry",
    "start": "1172400",
    "end": "1174200"
  },
  {
    "text": "is running",
    "start": "1174200",
    "end": "1176620"
  },
  {
    "text": "perfect and as expected the process was",
    "start": "1177919",
    "end": "1179780"
  },
  {
    "text": "scaled and you would have another",
    "start": "1179780",
    "end": "1181039"
  },
  {
    "text": "notification",
    "start": "1181039",
    "end": "1182299"
  },
  {
    "text": "um in um you know in data deck",
    "start": "1182299",
    "end": "1185120"
  },
  {
    "start": "1184000",
    "end": "1287000"
  },
  {
    "text": "all right so another way to detect uh",
    "start": "1185120",
    "end": "1187400"
  },
  {
    "text": "chain attacks is uh control flow",
    "start": "1187400",
    "end": "1190340"
  },
  {
    "text": "Integrity so CFI is a very well known",
    "start": "1190340",
    "end": "1192740"
  },
  {
    "text": "feature of many programs that lock down",
    "start": "1192740",
    "end": "1195980"
  },
  {
    "text": "the execution flows within the kernel by",
    "start": "1195980",
    "end": "1198140"
  },
  {
    "text": "controlling call sites at runtime so",
    "start": "1198140",
    "end": "1200120"
  },
  {
    "text": "they are usually added at compile time",
    "start": "1200120",
    "end": "1201919"
  },
  {
    "text": "but sometimes they are added in Hardware",
    "start": "1201919",
    "end": "1203600"
  },
  {
    "text": "as well and CFI is a great way to",
    "start": "1203600",
    "end": "1205880"
  },
  {
    "text": "control and to prevent rubber attacks",
    "start": "1205880",
    "end": "1207559"
  },
  {
    "text": "because it prevents you from jumping",
    "start": "1207559",
    "end": "1208820"
  },
  {
    "text": "wherever you want inside the kernel",
    "start": "1208820",
    "end": "1210440"
  },
  {
    "text": "which is basically what robotics do",
    "start": "1210440",
    "end": "1213440"
  },
  {
    "text": "um these features unfortunately are not",
    "start": "1213440",
    "end": "1215000"
  },
  {
    "text": "always available specifically the",
    "start": "1215000",
    "end": "1216679"
  },
  {
    "text": "hardware ones so like you know what can",
    "start": "1216679",
    "end": "1219080"
  },
  {
    "text": "we do with ebpf well instead of trying",
    "start": "1219080",
    "end": "1221480"
  },
  {
    "text": "to lock down all the call sites what we",
    "start": "1221480",
    "end": "1223460"
  },
  {
    "text": "can do vpf is lockdown jumps between",
    "start": "1223460",
    "end": "1225380"
  },
  {
    "text": "control points so both hook points and",
    "start": "1225380",
    "end": "1227840"
  },
  {
    "text": "parameters are checked and basically the",
    "start": "1227840",
    "end": "1229640"
  },
  {
    "text": "idea is you can't reach a low level",
    "start": "1229640",
    "end": "1231740"
  },
  {
    "text": "function that will eventually upgrade",
    "start": "1231740",
    "end": "1233660"
  },
  {
    "text": "your credentials if you've not gone",
    "start": "1233660",
    "end": "1235400"
  },
  {
    "text": "through first The Cisco that is linked",
    "start": "1235400",
    "end": "1237320"
  },
  {
    "text": "to credentials update and then through",
    "start": "1237320",
    "end": "1239240"
  },
  {
    "text": "the Linux security module so like you",
    "start": "1239240",
    "end": "1240980"
  },
  {
    "text": "know the LSM interface that is basically",
    "start": "1240980",
    "end": "1243260"
  },
  {
    "text": "handling all monetary Access Control",
    "start": "1243260",
    "end": "1246620"
  },
  {
    "text": "so unfortunately I won't have time to",
    "start": "1246620",
    "end": "1248240"
  },
  {
    "text": "talk about this further but the goal is",
    "start": "1248240",
    "end": "1250160"
  },
  {
    "text": "to catch malicious calls to sensitive",
    "start": "1250160",
    "end": "1251900"
  },
  {
    "text": "functions and also to detect logic bugs",
    "start": "1251900",
    "end": "1254179"
  },
  {
    "text": "specifically for Access rights so",
    "start": "1254179",
    "end": "1256100"
  },
  {
    "text": "example for example let's say you open",
    "start": "1256100",
    "end": "1257539"
  },
  {
    "text": "the file as a writtenly and eventually",
    "start": "1257539",
    "end": "1260240"
  },
  {
    "text": "you get you know you end up writing to",
    "start": "1260240",
    "end": "1262160"
  },
  {
    "text": "it for example the bad news is that it's",
    "start": "1262160",
    "end": "1264559"
  },
  {
    "text": "a very tedious process it's not",
    "start": "1264559",
    "end": "1266299"
  },
  {
    "text": "automated contrary which is like you",
    "start": "1266299",
    "end": "1268340"
  },
  {
    "text": "know not the same for",
    "start": "1268340",
    "end": "1269840"
  },
  {
    "text": "um which is okay sorry for any other",
    "start": "1269840",
    "end": "1271760"
  },
  {
    "text": "usual or normal CFI tools",
    "start": "1271760",
    "end": "1275660"
  },
  {
    "text": "um and also like the hook you have to",
    "start": "1275660",
    "end": "1277520"
  },
  {
    "text": "work around the loop limitations because",
    "start": "1277520",
    "end": "1280039"
  },
  {
    "text": "again not all functions within the",
    "start": "1280039",
    "end": "1282559"
  },
  {
    "text": "kernel are exported which means that you",
    "start": "1282559",
    "end": "1284360"
  },
  {
    "text": "cannot cook everywhere technically with",
    "start": "1284360",
    "end": "1286280"
  },
  {
    "text": "ebpf",
    "start": "1286280",
    "end": "1288440"
  },
  {
    "start": "1287000",
    "end": "1317000"
  },
  {
    "text": "I also talked briefly about enforcements",
    "start": "1288440",
    "end": "1291020"
  },
  {
    "text": "um so basically cry will try to enable",
    "start": "1291020",
    "end": "1293419"
  },
  {
    "text": "the blocking features uh whenever they",
    "start": "1293419",
    "end": "1295520"
  },
  {
    "text": "are available",
    "start": "1295520",
    "end": "1296780"
  },
  {
    "text": "um so it's either program types or ebdf",
    "start": "1296780",
    "end": "1299299"
  },
  {
    "text": "helpers and every detection we've talked",
    "start": "1299299",
    "end": "1301400"
  },
  {
    "text": "about today are configurable to either",
    "start": "1301400",
    "end": "1303500"
  },
  {
    "text": "log Block kill or paranoid so log block",
    "start": "1303500",
    "end": "1306260"
  },
  {
    "text": "kills are pretty much self-explanatory",
    "start": "1306260",
    "end": "1308059"
  },
  {
    "text": "paranoid means that whenever a detection",
    "start": "1308059",
    "end": "1310220"
  },
  {
    "text": "triggers the all the processes are going",
    "start": "1310220",
    "end": "1312140"
  },
  {
    "text": "to get killed again only if the right",
    "start": "1312140",
    "end": "1314480"
  },
  {
    "text": "helper is available on your kernel",
    "start": "1314480",
    "end": "1317480"
  },
  {
    "start": "1317000",
    "end": "1363000"
  },
  {
    "text": "all right so when it comes to",
    "start": "1317480",
    "end": "1318740"
  },
  {
    "text": "Performance",
    "start": "1318740",
    "end": "1319880"
  },
  {
    "text": "um so I use the Linux kernel computation",
    "start": "1319880",
    "end": "1321860"
  },
  {
    "text": "time to evaluate the performance of cry",
    "start": "1321860",
    "end": "1323659"
  },
  {
    "text": "and the reason for this is because it",
    "start": "1323659",
    "end": "1325520"
  },
  {
    "text": "you know it spawns a lot of processes",
    "start": "1325520",
    "end": "1327380"
  },
  {
    "text": "which is like it's which means that it's",
    "start": "1327380",
    "end": "1329539"
  },
  {
    "text": "a very good stress test for cry and as",
    "start": "1329539",
    "end": "1332000"
  },
  {
    "text": "you can see if you enable all the",
    "start": "1332000",
    "end": "1333200"
  },
  {
    "text": "features of cry",
    "start": "1333200",
    "end": "1334400"
  },
  {
    "text": "um well you can have a pretty",
    "start": "1334400",
    "end": "1335840"
  },
  {
    "text": "significant overhead overcome so up to",
    "start": "1335840",
    "end": "1337760"
  },
  {
    "text": "40 in the total execution time however",
    "start": "1337760",
    "end": "1341480"
  },
  {
    "text": "if you disable just one detection which",
    "start": "1341480",
    "end": "1343340"
  },
  {
    "text": "is the one that checks at runtime when a",
    "start": "1343340",
    "end": "1345620"
  },
  {
    "text": "Cisco you know that is about to be",
    "start": "1345620",
    "end": "1347419"
  },
  {
    "text": "executed",
    "start": "1347419",
    "end": "1348740"
  },
  {
    "text": "um if the Cisco has been hooked or not",
    "start": "1348740",
    "end": "1350480"
  },
  {
    "text": "so if you're disabled just this hook and",
    "start": "1350480",
    "end": "1352460"
  },
  {
    "text": "just this direction you go back to less",
    "start": "1352460",
    "end": "1354500"
  },
  {
    "text": "than one percent overhead which is",
    "start": "1354500",
    "end": "1356360"
  },
  {
    "text": "totally fine for and actually in the",
    "start": "1356360",
    "end": "1358640"
  },
  {
    "text": "same margins than other CFI tool out",
    "start": "1358640",
    "end": "1361280"
  },
  {
    "text": "there",
    "start": "1361280",
    "end": "1363460"
  },
  {
    "start": "1363000",
    "end": "1424000"
  },
  {
    "text": "all right so thanks a lot that's it for",
    "start": "1363640",
    "end": "1366260"
  },
  {
    "text": "me um I think the three takeaways for",
    "start": "1366260",
    "end": "1368299"
  },
  {
    "text": "this talk is are sorry first that uh",
    "start": "1368299",
    "end": "1371120"
  },
  {
    "text": "ubpf can be used to write powerful",
    "start": "1371120",
    "end": "1372980"
  },
  {
    "text": "detections",
    "start": "1372980",
    "end": "1374299"
  },
  {
    "text": "um however ebpf might not be the ideal",
    "start": "1374299",
    "end": "1376640"
  },
  {
    "text": "technology to detect kind of exploits",
    "start": "1376640",
    "end": "1378679"
  },
  {
    "text": "for all the reasons that I've talked",
    "start": "1378679",
    "end": "1380539"
  },
  {
    "text": "about in the talk",
    "start": "1380539",
    "end": "1382159"
  },
  {
    "text": "um also more realistically probably the",
    "start": "1382159",
    "end": "1384200"
  },
  {
    "text": "last resort",
    "start": "1384200",
    "end": "1385460"
  },
  {
    "text": "um it's not really a public strategy",
    "start": "1385460",
    "end": "1387679"
  },
  {
    "text": "however there is value in trying to make",
    "start": "1387679",
    "end": "1390440"
  },
  {
    "text": "attackers lives harder and there is",
    "start": "1390440",
    "end": "1392179"
  },
  {
    "text": "value in trying to you know just make",
    "start": "1392179",
    "end": "1394340"
  },
  {
    "text": "exploit harder to to use and definitely",
    "start": "1394340",
    "end": "1396559"
  },
  {
    "text": "try to make out of the box out of the",
    "start": "1396559",
    "end": "1398720"
  },
  {
    "text": "box for kids uh fail for script kiddies",
    "start": "1398720",
    "end": "1401840"
  },
  {
    "text": "for example",
    "start": "1401840",
    "end": "1403280"
  },
  {
    "text": "all right so again",
    "start": "1403280",
    "end": "1404900"
  },
  {
    "text": "um the the repository is open source so",
    "start": "1404900",
    "end": "1407480"
  },
  {
    "text": "feel free to check it out and um I'm",
    "start": "1407480",
    "end": "1409460"
  },
  {
    "text": "down so I'm ready to ask questions",
    "start": "1409460",
    "end": "1412520"
  },
  {
    "text": "[Applause]",
    "start": "1412520",
    "end": "1416460"
  },
  {
    "text": "[Music]",
    "start": "1416460",
    "end": "1419579"
  },
  {
    "text": "[Music]",
    "start": "1423420",
    "end": "1426519"
  }
]