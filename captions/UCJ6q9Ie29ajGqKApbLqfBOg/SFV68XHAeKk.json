[
  {
    "start": "0",
    "end": "130000"
  },
  {
    "text": "[Music]",
    "start": "1740",
    "end": "4810"
  },
  {
    "text": "hello everyone thanks for coming and joining for my session my name is noshin chabot and i'm going",
    "start": "8320",
    "end": "14960"
  },
  {
    "text": "to talk about sidewinder third actor and what we have been seeing",
    "start": "14960",
    "end": "20960"
  },
  {
    "text": "from them um in the past two years so let's start with a little bit of",
    "start": "20960",
    "end": "28320"
  },
  {
    "text": "introduction about myself i'm a security researcher from the global research and analysis team at",
    "start": "28320",
    "end": "34719"
  },
  {
    "text": "kaspersky i've been with the company for six years",
    "start": "34719",
    "end": "40559"
  },
  {
    "text": "but in in total i've been working in the same area for over 10 years",
    "start": "40559",
    "end": "46320"
  },
  {
    "text": "doing malware analysis and threat intelligence",
    "start": "46320",
    "end": "51038"
  },
  {
    "text": "a little bit of the agenda for my talk today i'm going to first",
    "start": "52879",
    "end": "59440"
  },
  {
    "text": "have an introduction about the threat actor then we will look at the different",
    "start": "59440",
    "end": "65518"
  },
  {
    "text": "inflation vectors that they have been using over the past two years which is the subject of my",
    "start": "65519",
    "end": "73280"
  },
  {
    "text": "research for today uh we look at different malware components and um the techniques that",
    "start": "73280",
    "end": "80400"
  },
  {
    "text": "they've been using to to um",
    "start": "80400",
    "end": "86320"
  },
  {
    "text": "do their attacks in a more advanced and sophisticated way we will look at the",
    "start": "86320",
    "end": "92000"
  },
  {
    "text": "infrastructure a little bit and then i'll talk about",
    "start": "92000",
    "end": "97920"
  },
  {
    "text": "the whole investigation and analysis basically because it was a",
    "start": "97920",
    "end": "106560"
  },
  {
    "text": "huge research with a lot of",
    "start": "106880",
    "end": "112000"
  },
  {
    "text": "components and malware samples so i'm going to talk about the investigation and also a little bit",
    "start": "112000",
    "end": "117840"
  },
  {
    "text": "of the mitigation tips and um",
    "start": "117840",
    "end": "123280"
  },
  {
    "text": "points to detect the attacks and then of course conclusion",
    "start": "123280",
    "end": "130239"
  },
  {
    "start": "130000",
    "end": "130000"
  },
  {
    "text": "so first of all um what is who is sidewinder protector um this trajectory is also known as",
    "start": "130720",
    "end": "138319"
  },
  {
    "text": "rattlesnake or tapt04",
    "start": "138319",
    "end": "143000"
  },
  {
    "text": "there might be other names that i i don't know of",
    "start": "143920",
    "end": "149200"
  },
  {
    "text": "but these are the most common ones they've been active since at least 2012.",
    "start": "149200",
    "end": "156080"
  },
  {
    "text": "and we first reported about this threat trade actors activities in january 2018.",
    "start": "156080",
    "end": "164720"
  },
  {
    "text": "so the main target profiles of their attacks are police military maritime navy",
    "start": "164720",
    "end": "172400"
  },
  {
    "text": "foreign affairs scientific and defense organizations aviation i.t",
    "start": "172400",
    "end": "178319"
  },
  {
    "text": "and even law firms and the countries that they are more",
    "start": "178319",
    "end": "183760"
  },
  {
    "text": "focused on which has been growing over the time is",
    "start": "183760",
    "end": "189360"
  },
  {
    "text": "mostly central asian countries pakistan bangladesh sri lanka and nepal",
    "start": "189360",
    "end": "196319"
  },
  {
    "text": "and in more recent attacks we've seen them targeting victims in europe and",
    "start": "196319",
    "end": "201440"
  },
  {
    "text": "middle east in other countries in asia africa and",
    "start": "201440",
    "end": "207200"
  },
  {
    "text": "other regions also sometimes related to department of foreign affairs of the",
    "start": "207200",
    "end": "213120"
  },
  {
    "text": "main victim countries sometimes like individual and separate victims",
    "start": "213120",
    "end": "220480"
  },
  {
    "text": "so what is really fascinating about this threat actor is that",
    "start": "221920",
    "end": "228560"
  },
  {
    "text": "during the past two years we have seen them performing over a thousand new attacks",
    "start": "228560",
    "end": "236959"
  },
  {
    "text": "which is not very common among other pt actors that we've been tracking",
    "start": "236959",
    "end": "244640"
  },
  {
    "text": "they maintain hundreds of domains and sub-domains that are used for",
    "start": "244640",
    "end": "250560"
  },
  {
    "text": "command and control communication and also as download servers to download further stages of",
    "start": "250560",
    "end": "257440"
  },
  {
    "text": "the attack and they've been constantly registering new domains and new",
    "start": "257440",
    "end": "264560"
  },
  {
    "text": "using new sub domains to make sure that if if some of the",
    "start": "264560",
    "end": "270000"
  },
  {
    "text": "domains are burnt and detected in in the past they they still have a",
    "start": "270000",
    "end": "276240"
  },
  {
    "text": "chance to um to compromise their victims also they have a relatively",
    "start": "276240",
    "end": "282800"
  },
  {
    "text": "high level of sophistication with many techniques to stay undetected for longer",
    "start": "282800",
    "end": "289360"
  },
  {
    "text": "such as multiple obfuscation techniques which we will see in the next slides",
    "start": "289360",
    "end": "295759"
  },
  {
    "text": "different encryptions with unique keys for each malware sample",
    "start": "295759",
    "end": "301199"
  },
  {
    "text": "also multi-state malwares memory resident malwares",
    "start": "301199",
    "end": "306800"
  },
  {
    "text": "and also they've been splitting the urls that the malware's",
    "start": "306800",
    "end": "312080"
  },
  {
    "text": "used to contact their command and control server into different attack components so even um having access to",
    "start": "312080",
    "end": "320240"
  },
  {
    "text": "one malware sample being able to decrypt that and the obfuscates um all the strings and all",
    "start": "320240",
    "end": "326800"
  },
  {
    "text": "the parts of the malware you wouldn't get the full picture and full um url that the malware uses",
    "start": "326800",
    "end": "333759"
  },
  {
    "text": "to communicate with the server so talking about the infection chain",
    "start": "333759",
    "end": "340000"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "that we've been seeing um from this threat actor",
    "start": "340000",
    "end": "345440"
  },
  {
    "text": "the main malware components are the parts that you see here with the",
    "start": "345440",
    "end": "351360"
  },
  {
    "text": "first stage second stage and third stage and final stage components here and for the delivery",
    "start": "351360",
    "end": "358160"
  },
  {
    "text": "they've used different sort of file formats",
    "start": "358160",
    "end": "364080"
  },
  {
    "text": "they've been using rtf files with the artifact exploits to export vulnerable",
    "start": "364080",
    "end": "370160"
  },
  {
    "text": "old unpatched microsoft word applications",
    "start": "370160",
    "end": "376240"
  },
  {
    "text": "in some cases the rtf file drops javascript drops actually an hta file",
    "start": "376240",
    "end": "384160"
  },
  {
    "text": "with an obfuscated javascript that's the one that you see with the first stage",
    "start": "384160",
    "end": "392080"
  },
  {
    "text": "with the line that shows see if i can point to it",
    "start": "392080",
    "end": "397600"
  },
  {
    "text": "no i can't anyway um they drop",
    "start": "397600",
    "end": "403680"
  },
  {
    "text": "delta files drop an hda5 with obfuscated javascript which loads a downloader",
    "start": "403680",
    "end": "409440"
  },
  {
    "text": "module which is a dotnet module in memory and that downloader module would communicate with its",
    "start": "409440",
    "end": "415280"
  },
  {
    "text": "command with its download server to download the next message of the attack",
    "start": "415280",
    "end": "420400"
  },
  {
    "text": "which is again another hta file with another obfuscated javascript with the similar format to the first stage",
    "start": "420400",
    "end": "427680"
  },
  {
    "text": "javascript but this time the final payload is",
    "start": "427680",
    "end": "433440"
  },
  {
    "text": "another dotnet module it's an installer file the installer file would drop different",
    "start": "433440",
    "end": "438800"
  },
  {
    "text": "components of the final backdoor module and then",
    "start": "438800",
    "end": "445360"
  },
  {
    "text": "load the backdoor loader through dll side loading",
    "start": "445360",
    "end": "451520"
  },
  {
    "text": "in memory and the back door loader would in turn",
    "start": "451520",
    "end": "458160"
  },
  {
    "text": "load and execute the final backdoor which communicates with the command and control server in another",
    "start": "460080",
    "end": "466160"
  },
  {
    "text": "infection chain we saw similar rtf files that had javascript",
    "start": "466160",
    "end": "472479"
  },
  {
    "text": "obfuscate the javascript inside htm hd file but this time they skipped the first",
    "start": "472479",
    "end": "480000"
  },
  {
    "text": "stage with the downloader and they immediately dropped the",
    "start": "480000",
    "end": "487039"
  },
  {
    "text": "javascript file use the javascript file with the installer module there were other examples",
    "start": "487039",
    "end": "492960"
  },
  {
    "text": "for delivery in some cases the attackers use lnk",
    "start": "492960",
    "end": "498800"
  },
  {
    "text": "files which are windows shortcut files these files have a command inside to",
    "start": "498800",
    "end": "507199"
  },
  {
    "text": "to contact a remote server and download the file and execute on the system through",
    "start": "507199",
    "end": "513360"
  },
  {
    "text": "mshta.exe process on the system",
    "start": "513360",
    "end": "518399"
  },
  {
    "text": "and this file that gets downloaded would be the same um sort of",
    "start": "518399",
    "end": "523839"
  },
  {
    "text": "hta file from the first stage last infection vector that we",
    "start": "523839",
    "end": "530160"
  },
  {
    "text": "saw from this trajectory is using an oxml file which is an open",
    "start": "530160",
    "end": "536000"
  },
  {
    "text": "office document file and this file has an external reference that would",
    "start": "536000",
    "end": "543839"
  },
  {
    "text": "contact and retrieve the file from that",
    "start": "543839",
    "end": "549839"
  },
  {
    "text": "remote server and execute on the system which is again the first stage hda file",
    "start": "549839",
    "end": "556399"
  },
  {
    "text": "now let's talk about the different components of that hack in a little bit more detail",
    "start": "556399",
    "end": "563440"
  },
  {
    "start": "558000",
    "end": "558000"
  },
  {
    "text": "so these are some examples of the of the delivery stage malware",
    "start": "563440",
    "end": "569920"
  },
  {
    "text": "on the top you can see some metadata from one of the lnk files if you notice the first line",
    "start": "569920",
    "end": "576480"
  },
  {
    "text": "says the relative path is system 32 cftm on.xz which is actually a fake name",
    "start": "576480",
    "end": "584720"
  },
  {
    "text": "they have they actually hide the main process which is",
    "start": "584720",
    "end": "591480"
  },
  {
    "text": "mshta.exe in other parts of the lnk file which can even be parts with like normal",
    "start": "591480",
    "end": "600000"
  },
  {
    "text": "lnk file parsers this is from 010 editor parser for lnk",
    "start": "600000",
    "end": "608320"
  },
  {
    "text": "but anyway you can see also the command line argument which is",
    "start": "608320",
    "end": "613519"
  },
  {
    "text": "the address to retrieve the next stage of the attack",
    "start": "613519",
    "end": "619839"
  },
  {
    "text": "and then you can see one example of a spellfishing document that they've used",
    "start": "621839",
    "end": "627839"
  },
  {
    "text": "this one was actually quite interesting in this case the attacker sent",
    "start": "627839",
    "end": "633279"
  },
  {
    "text": "an empty document to the victims empty as in terms of no content but it",
    "start": "633279",
    "end": "640160"
  },
  {
    "text": "actually had a malicious only object inside with the obfuscated javascript",
    "start": "640160",
    "end": "646000"
  },
  {
    "text": "and then after a short while they would send another email to the victim",
    "start": "646000",
    "end": "652320"
  },
  {
    "text": "with a letter like this this is like an apology letter for the previous",
    "start": "652320",
    "end": "657920"
  },
  {
    "text": "email this one also had a similar",
    "start": "657920",
    "end": "663120"
  },
  {
    "text": "structure of malware inside but with a different command and control server",
    "start": "663120",
    "end": "670160"
  },
  {
    "text": "that malware would communicate with so even if the um even if the victim was",
    "start": "670160",
    "end": "676000"
  },
  {
    "text": "suspicious that they have received an empty document",
    "start": "676000",
    "end": "681680"
  },
  {
    "text": "they would receive this document a short while later",
    "start": "681680",
    "end": "686959"
  },
  {
    "text": "and also at the bottom you can see an example of the oxml file with the external reference that",
    "start": "686959",
    "end": "693839"
  },
  {
    "text": "shows the download server for for the next stage of the attack",
    "start": "693839",
    "end": "700399"
  },
  {
    "text": "talking about the first stage javascript what it does it um as i said it's obfuscated i'll show the",
    "start": "700880",
    "end": "708720"
  },
  {
    "text": "obfuscation routine uh in nexus slide but here let's talk about what it",
    "start": "708720",
    "end": "713839"
  },
  {
    "text": "actually does it its main responsibility is to collect list of antivirus products on the system",
    "start": "713839",
    "end": "722560"
  },
  {
    "text": "using wmi interface and also decrypt and load a dot net",
    "start": "722560",
    "end": "729200"
  },
  {
    "text": "payload from a serialized stream using activex object",
    "start": "729200",
    "end": "734480"
  },
  {
    "text": "and this dotnet payload in the case of the first state javascript is the",
    "start": "734480",
    "end": "740079"
  },
  {
    "text": "downloader module that i mentioned and in the case of the second stage javascript is the installer module",
    "start": "740079",
    "end": "747279"
  },
  {
    "text": "also um there is a encrypted url inside this javascript",
    "start": "747279",
    "end": "752560"
  },
  {
    "text": "that would get decrypted and passed to the dot-net",
    "start": "752560",
    "end": "757760"
  },
  {
    "text": "payload for download communication with the server later",
    "start": "757760",
    "end": "765680"
  },
  {
    "text": "the url is created in two forms one is to send",
    "start": "765760",
    "end": "770880"
  },
  {
    "text": "the collected information from the system to the server and the second url form is to download the next stage",
    "start": "770880",
    "end": "778720"
  },
  {
    "text": "malware from the server but these things happen in in the dotnet downloader module not in the javascript",
    "start": "778720",
    "end": "787440"
  },
  {
    "start": "786000",
    "end": "786000"
  },
  {
    "text": "so talking about the obfuscation used in the javascript files this is",
    "start": "787440",
    "end": "793440"
  },
  {
    "text": "the obfuscation method and routines that they've used throughout 2021",
    "start": "793440",
    "end": "798839"
  },
  {
    "text": "um basically it has a custom base64 encoding",
    "start": "798839",
    "end": "806560"
  },
  {
    "text": "the top screenshot is the base64 decoding",
    "start": "806560",
    "end": "813279"
  },
  {
    "text": "routine but you can see that the line that shows the array the base64",
    "start": "813360",
    "end": "819120"
  },
  {
    "text": "decryption array decoding array is customized and this was different in in",
    "start": "819120",
    "end": "824399"
  },
  {
    "text": "every sample every single sample and as i said we have we've had thousands",
    "start": "824399",
    "end": "830720"
  },
  {
    "text": "around a thousand samples with like different different keys and different arrays",
    "start": "830720",
    "end": "837279"
  },
  {
    "text": "also apart from that they have used a double xor encryption and that means",
    "start": "837279",
    "end": "843519"
  },
  {
    "text": "that there was there was a xor key that would get",
    "start": "843519",
    "end": "848800"
  },
  {
    "text": "installed with another key and then it was used to decrypt",
    "start": "848800",
    "end": "854880"
  },
  {
    "text": "other strings encrypted strings inside the file these keys were also",
    "start": "854880",
    "end": "860160"
  },
  {
    "text": "unique for each sample they actually changed the obfuscation",
    "start": "860160",
    "end": "867279"
  },
  {
    "text": "technique before end of 2021",
    "start": "867279",
    "end": "872320"
  },
  {
    "text": "but they still continued using it for for some time alongside the new obfuscation",
    "start": "872320",
    "end": "878800"
  },
  {
    "text": "routine and then finally fully moved to the new offication routine in 2020 22.",
    "start": "878800",
    "end": "886880"
  },
  {
    "text": "so what they use for obfuscation here",
    "start": "886880",
    "end": "892320"
  },
  {
    "text": "is two two different methods here uh used",
    "start": "892320",
    "end": "898560"
  },
  {
    "text": "in inside like two different techniques using um in every javascript file first one that you see",
    "start": "898560",
    "end": "905920"
  },
  {
    "text": "on the left side is basically some sort of splitting and reversing with",
    "start": "905920",
    "end": "911040"
  },
  {
    "text": "different lengths and strings like splitting each string in",
    "start": "911040",
    "end": "919199"
  },
  {
    "text": "in substrings with various lengths and reversing and concatenating",
    "start": "919199",
    "end": "924720"
  },
  {
    "text": "these strings and then the right side you can see there are different functions defined",
    "start": "924720",
    "end": "932880"
  },
  {
    "text": "these functions are actually defined from one another like each one is",
    "start": "932880",
    "end": "938560"
  },
  {
    "text": "defined from the prototype of the previous function with some",
    "start": "938560",
    "end": "944160"
  },
  {
    "text": "again obfuscated strings that would get the obfuscated through that",
    "start": "944160",
    "end": "950720"
  },
  {
    "text": "through that splitting and reversing technique and different parts of the",
    "start": "951279",
    "end": "957839"
  },
  {
    "text": "strings have different keys for exalt decryption as you see here there are some you can see some key",
    "start": "957839",
    "end": "965120"
  },
  {
    "text": "8 18 all different xo decryption keys",
    "start": "965120",
    "end": "971839"
  },
  {
    "start": "972000",
    "end": "972000"
  },
  {
    "text": "so now for the obfuscation let's talk about the.net",
    "start": "972160",
    "end": "977839"
  },
  {
    "text": "module that was the downloader it was a sim it is a simple module it",
    "start": "977839",
    "end": "982959"
  },
  {
    "text": "only checks system for presence of a few antivirus",
    "start": "982959",
    "end": "991600"
  },
  {
    "text": "programs like as you see here there's a substring of kaspersky you can see avas",
    "start": "991600",
    "end": "998720"
  },
  {
    "text": "and avg here as well so they would collect this information and when communicating with the download server",
    "start": "998720",
    "end": "1005920"
  },
  {
    "text": "that they had received from the previous stage they would send this information",
    "start": "1005920",
    "end": "1013279"
  },
  {
    "text": "to the server as well and then finally this would contact the download server",
    "start": "1013279",
    "end": "1019360"
  },
  {
    "text": "and download the next stage of the attack which is another obfuscated javascript with the same",
    "start": "1019360",
    "end": "1026558"
  },
  {
    "text": "same structure as we've seen with the first stage but that",
    "start": "1026559",
    "end": "1032079"
  },
  {
    "start": "1030000",
    "end": "1030000"
  },
  {
    "text": "secondary state javascript the main payload is another.net module which is",
    "start": "1032079",
    "end": "1037199"
  },
  {
    "text": "different from the first stage which was the downloader module this time is the installer module what this",
    "start": "1037199",
    "end": "1044558"
  },
  {
    "text": "module does it has some encrypted strings inside",
    "start": "1044559",
    "end": "1049600"
  },
  {
    "text": "you can see the name of the variables x key inst folder domain and reg key",
    "start": "1049600",
    "end": "1056080"
  },
  {
    "text": "the first one is x all decryption key second one after",
    "start": "1056080",
    "end": "1062400"
  },
  {
    "text": "being decrypted shows the address of the folder or like",
    "start": "1062400",
    "end": "1068000"
  },
  {
    "text": "past that the malware uses and creates for um",
    "start": "1068000",
    "end": "1073440"
  },
  {
    "text": "storing different files and communicating with the server through that folder like the files that are",
    "start": "1073440",
    "end": "1079919"
  },
  {
    "text": "stored in that folder also the domain is the first part of the",
    "start": "1079919",
    "end": "1086960"
  },
  {
    "text": "command and control server address that is in",
    "start": "1086960",
    "end": "1092799"
  },
  {
    "text": "stored inside this module the second part is stored in another module",
    "start": "1092799",
    "end": "1098000"
  },
  {
    "text": "also the red key after decryption has the name of the registry key",
    "start": "1098000",
    "end": "1103679"
  },
  {
    "text": "registry value that is registered on the run registry key for the persistence of the",
    "start": "1103679",
    "end": "1109919"
  },
  {
    "text": "malware and as i said the main responsibility is to drop a few",
    "start": "1109919",
    "end": "1117120"
  },
  {
    "text": "files on the system for the final stage of the",
    "start": "1117120",
    "end": "1122799"
  },
  {
    "text": "matter and these files are the ones that you see in the list here the first one are e keywords.xd is",
    "start": "1122799",
    "end": "1130080"
  },
  {
    "text": "a legitimate file that is copied from the system directory in the directory malware directory this file is",
    "start": "1130080",
    "end": "1136880"
  },
  {
    "text": "vulnerable to dll site loading and is used to load the backdoor loader on the system",
    "start": "1136880",
    "end": "1144080"
  },
  {
    "text": "next file the user.dll this is the back dll of the backdoor loader this is the",
    "start": "1144080",
    "end": "1150480"
  },
  {
    "text": "dll that gets loaded through dll side loading by our eqvs.exe",
    "start": "1150480",
    "end": "1157159"
  },
  {
    "text": "third file which is which you see here as random.tmp is created by",
    "start": "1157520",
    "end": "1164400"
  },
  {
    "text": "um [Music] decrypting uh the main",
    "start": "1164400",
    "end": "1169840"
  },
  {
    "text": "the main backdoor content that is inside the installer module um changing it a",
    "start": "1169840",
    "end": "1175840"
  },
  {
    "text": "little bit adding the domain um the decrypted domain um to some parts",
    "start": "1175840",
    "end": "1182080"
  },
  {
    "text": "of the malware body and then encrypting the backdoor again with a new randomly",
    "start": "1182080",
    "end": "1189039"
  },
  {
    "text": "generated 32 byte xor key",
    "start": "1189039",
    "end": "1195440"
  },
  {
    "text": "and gets dropped on the system with the random name and tmp extension also the",
    "start": "1195679",
    "end": "1202039"
  },
  {
    "text": "rekvis.exe.config has some config information about like setting",
    "start": "1202039",
    "end": "1207120"
  },
  {
    "text": "system policies for uh folder.net like and the dotnet environment",
    "start": "1207120",
    "end": "1212559"
  },
  {
    "text": "variables the last thing that it does is to create persistence as i said by creating a sub",
    "start": "1212559",
    "end": "1218960"
  },
  {
    "text": "key on the run registry key for the for the re keywise.xz",
    "start": "1218960",
    "end": "1226600"
  },
  {
    "text": "so next stage is the backdoor loader which is the user.dll",
    "start": "1227120",
    "end": "1233120"
  },
  {
    "text": "the dll that gets loaded through dll side loading on the system so what it does it looks at",
    "start": "1233120",
    "end": "1241520"
  },
  {
    "text": "the file with the tmp extension which is the encrypted",
    "start": "1241520",
    "end": "1247200"
  },
  {
    "text": "final payload final backdoor it decrypts the file as you see here and this is the",
    "start": "1247200",
    "end": "1252799"
  },
  {
    "text": "decryption routine with xor key 32.x or key",
    "start": "1252799",
    "end": "1258880"
  },
  {
    "text": "and at the end loads the final payload in memory the final backdoor is also another",
    "start": "1258880",
    "end": "1266159"
  },
  {
    "start": "1262000",
    "end": "1262000"
  },
  {
    "text": "dotnet module it has four different classes inside",
    "start": "1266159",
    "end": "1272480"
  },
  {
    "text": "see here in the screenshot above the classes um or file listing program",
    "start": "1272480",
    "end": "1280400"
  },
  {
    "text": "structure flyweight something something this is a this is not a legitimate name this is a name that they use then like",
    "start": "1280400",
    "end": "1287520"
  },
  {
    "text": "different names that they use in different different examples just to look like",
    "start": "1287520",
    "end": "1293440"
  },
  {
    "text": "it's a legitimate module from some application and then last one is this info so what each of",
    "start": "1293440",
    "end": "1300799"
  },
  {
    "text": "these classes are responsible for the first one is responsible for uh for a",
    "start": "1300799",
    "end": "1305840"
  },
  {
    "text": "listing as it's it can be seen from the name it is used to collect information about",
    "start": "1305840",
    "end": "1312880"
  },
  {
    "text": "different files and directories on the system all sorts of information like different",
    "start": "1312880",
    "end": "1318000"
  },
  {
    "text": "access types different timer stamps and so on the program",
    "start": "1318000",
    "end": "1324400"
  },
  {
    "text": "class is used for initial initiating the communication with the",
    "start": "1324400",
    "end": "1330240"
  },
  {
    "text": "command and control server the third class with the long name this is the",
    "start": "1330240",
    "end": "1336320"
  },
  {
    "text": "main backdoor communication class",
    "start": "1336320",
    "end": "1341600"
  },
  {
    "text": "in in the malware and also the last one season collects all sorts of information from the system",
    "start": "1341600",
    "end": "1348880"
  },
  {
    "text": "from information about different drives the free space the user space",
    "start": "1348880",
    "end": "1355600"
  },
  {
    "text": "information about like hotfix id numbers and",
    "start": "1355600",
    "end": "1363840"
  },
  {
    "text": "install dates that are found on the system information about different users",
    "start": "1363840",
    "end": "1369039"
  },
  {
    "text": "different processes their owners the command lines all sorts of",
    "start": "1369039",
    "end": "1374559"
  },
  {
    "text": "information um also the back door has a configuration block that is encrypted",
    "start": "1374559",
    "end": "1381200"
  },
  {
    "text": "as you see here um if if it's big enough you can notice that the first two rows that",
    "start": "1381200",
    "end": "1389679"
  },
  {
    "text": "show the xor key for decryption and encryption and",
    "start": "1389679",
    "end": "1395360"
  },
  {
    "text": "once it's decrypted um there are different information inside this configuration block it starts at offset",
    "start": "1395360",
    "end": "1403200"
  },
  {
    "text": "0x20 with a directory that is created by the",
    "start": "1403200",
    "end": "1408640"
  },
  {
    "text": "previous stage to store different files on the system uh also another directory that is used",
    "start": "1408640",
    "end": "1414720"
  },
  {
    "text": "for storing other files like files that are",
    "start": "1414720",
    "end": "1421279"
  },
  {
    "text": "prepared with the system information and then you can see a list of file extensions these are the extensions for",
    "start": "1421279",
    "end": "1428400"
  },
  {
    "text": "the files that the actor translator is interested in to collect from the system",
    "start": "1428400",
    "end": "1434799"
  },
  {
    "text": "um it can actually be um be updated with with a",
    "start": "1434799",
    "end": "1440000"
  },
  {
    "text": "with the relevant command you can look at the back door commands and capabilities that the final backdoor",
    "start": "1440000",
    "end": "1447520"
  },
  {
    "text": "has it can collect system information collect file listing collect selected files with the",
    "start": "1447520",
    "end": "1454159"
  },
  {
    "text": "extension the specific extensions that the attackers are interested in",
    "start": "1454159",
    "end": "1460320"
  },
  {
    "text": "also it can update the command and control server address it can update the",
    "start": "1460320",
    "end": "1465360"
  },
  {
    "text": "configuration block can set a flag to upload collected files",
    "start": "1465360",
    "end": "1470559"
  },
  {
    "text": "to the server or stop send communicating with the server for some time",
    "start": "1470559",
    "end": "1476720"
  },
  {
    "text": "also it can update the list of file extensions to collect it can update the maximum upload file",
    "start": "1476720",
    "end": "1483840"
  },
  {
    "text": "size in terms of systems that have",
    "start": "1483840",
    "end": "1489679"
  },
  {
    "text": "like certain circumstances that the attackers decide not to send like huge files",
    "start": "1489679",
    "end": "1497120"
  },
  {
    "text": "to the server also it can receive a path of a specific file to upload to the",
    "start": "1497120",
    "end": "1504320"
  },
  {
    "text": "server and also saving the configuration block that's been updated",
    "start": "1504320",
    "end": "1511039"
  },
  {
    "start": "1511000",
    "end": "1511000"
  },
  {
    "text": "okay so that was all about the malware components let's talk a little bit about",
    "start": "1511039",
    "end": "1516559"
  },
  {
    "text": "the infrastructure um as i said they've been maintaining more",
    "start": "1516559",
    "end": "1521919"
  },
  {
    "text": "than um they've been maintaining hundreds actually more than 400 domains and",
    "start": "1521919",
    "end": "1527279"
  },
  {
    "text": "subdomains for that in their attacks in the past two years we've seen them using",
    "start": "1527279",
    "end": "1532640"
  },
  {
    "text": "like different domains and different sub domains for one",
    "start": "1532640",
    "end": "1538000"
  },
  {
    "text": "um like individual victim over and over registering new domains or new sub",
    "start": "1538000",
    "end": "1544480"
  },
  {
    "text": "domains and contacting the victim again with these new domains",
    "start": "1544480",
    "end": "1550960"
  },
  {
    "text": "over over a period of few months",
    "start": "1550960",
    "end": "1556080"
  },
  {
    "text": "so talking about the domains they are basically categorized in two categories",
    "start": "1556080",
    "end": "1562400"
  },
  {
    "text": "the first group of domains which are the first stage domains they are",
    "start": "1562400",
    "end": "1568000"
  },
  {
    "text": "used for different purposes like they are used in urls to download the",
    "start": "1568000",
    "end": "1575360"
  },
  {
    "text": "first stage malware which are used in a spare phishing modules like the lnk files and all xml",
    "start": "1575360",
    "end": "1581279"
  },
  {
    "text": "files there are also urls to send collected information by",
    "start": "1581279",
    "end": "1588880"
  },
  {
    "text": "the first stage malware to the server um there are urls to download the second",
    "start": "1588880",
    "end": "1595600"
  },
  {
    "text": "stage malware as well and these urls are",
    "start": "1595600",
    "end": "1601600"
  },
  {
    "text": "created from the first the first stage domains as you see here",
    "start": "1601600",
    "end": "1606960"
  },
  {
    "text": "there are some patterns that that we could we could extract from this",
    "start": "1606960",
    "end": "1613440"
  },
  {
    "text": "from these urls like the urls that are used to download the first stage malware",
    "start": "1613440",
    "end": "1619120"
  },
  {
    "text": "has this 2 0 0 in um in the urls the",
    "start": "1619120",
    "end": "1624840"
  },
  {
    "text": "um the ones that are used to download second stage malware has a different",
    "start": "1624840",
    "end": "1630080"
  },
  {
    "text": "pattern um the one that are used for collect sending collected security",
    "start": "1630080",
    "end": "1636799"
  },
  {
    "text": "software module names have different pattern also",
    "start": "1636799",
    "end": "1642159"
  },
  {
    "text": "there are there's another pattern in the files that you can see these images in in the",
    "start": "1642159",
    "end": "1650080"
  },
  {
    "text": "url that comes right after the um domain and these are also used in the",
    "start": "1650080",
    "end": "1655919"
  },
  {
    "text": "lnk files in the osml files and also sometimes in the um",
    "start": "1655919",
    "end": "1660960"
  },
  {
    "text": "in the download in the javascript audio files that would",
    "start": "1660960",
    "end": "1666080"
  },
  {
    "text": "immediately download the second stage and skip the first stage",
    "start": "1666080",
    "end": "1671360"
  },
  {
    "text": "apart from that domains there are also another and there's also another category which is the command and",
    "start": "1671600",
    "end": "1677919"
  },
  {
    "text": "control domains these are completely different domains from the first ones these domains are used in the final",
    "start": "1677919",
    "end": "1684880"
  },
  {
    "text": "stage of the attack these are used for city communication and as i said",
    "start": "1684880",
    "end": "1691120"
  },
  {
    "text": "they are split into two parts first part is inside one",
    "start": "1691120",
    "end": "1696640"
  },
  {
    "text": "malware component and second part is stored in another malware component they",
    "start": "1696640",
    "end": "1703120"
  },
  {
    "text": "get decrypted and concatenated and used for command and control",
    "start": "1703120",
    "end": "1708840"
  },
  {
    "text": "communication so that was it from the technical details",
    "start": "1708840",
    "end": "1715679"
  },
  {
    "start": "1715000",
    "end": "1715000"
  },
  {
    "text": "let's talk a little bit about the investigation and like some techniques that",
    "start": "1715679",
    "end": "1722960"
  },
  {
    "text": "i've used and i'm happy to hear if",
    "start": "1722960",
    "end": "1729120"
  },
  {
    "text": "if someone else has been tracking this threat actor and they have other ways to to hunt for their new malwares and to do",
    "start": "1729120",
    "end": "1736080"
  },
  {
    "text": "the analysis so basically first thing looking for new samples from",
    "start": "1736080",
    "end": "1742960"
  },
  {
    "text": "known modules through antivirus verdicts or euro rules as i said there are lots",
    "start": "1742960",
    "end": "1749279"
  },
  {
    "text": "of stages of the attack that are decrypted and loaded only in memory so",
    "start": "1749279",
    "end": "1757200"
  },
  {
    "text": "there are only a few few malware components that can be",
    "start": "1757200",
    "end": "1763039"
  },
  {
    "text": "used to to catch with the aura rules uh or to",
    "start": "1763039",
    "end": "1768799"
  },
  {
    "text": "catch with like antwara signatures um also looking for patterns in",
    "start": "1768799",
    "end": "1774880"
  },
  {
    "text": "malicious urls as i said this one this has been quite helpful for me looking",
    "start": "1774880",
    "end": "1780399"
  },
  {
    "text": "for those patterns that we saw highlighted in the infrastructure analysis section",
    "start": "1780399",
    "end": "1786720"
  },
  {
    "text": "in the antivirus detection logs in network logs in",
    "start": "1786720",
    "end": "1792240"
  },
  {
    "text": "virustotal search to look for new domains that were registered by this trade actor",
    "start": "1792240",
    "end": "1800080"
  },
  {
    "text": "also talking about the analysis um as i said there were",
    "start": "1800080",
    "end": "1805679"
  },
  {
    "text": "about a thousand um different javascript files that i had",
    "start": "1805679",
    "end": "1811279"
  },
  {
    "text": "actually the javascript files are after extracting from",
    "start": "1811279",
    "end": "1816559"
  },
  {
    "text": "rtf modules from download downloaded like from um",
    "start": "1816559",
    "end": "1824080"
  },
  {
    "text": "network communication of the lnk files and all xml modules so",
    "start": "1824080",
    "end": "1830720"
  },
  {
    "text": "the main part was to extract different components from this javascript files",
    "start": "1830880",
    "end": "1836720"
  },
  {
    "text": "um it it could be done through the obfuscating javascripts with an off",
    "start": "1836720",
    "end": "1843919"
  },
  {
    "text": "the shelf tool i didn't do that i thought it's more fun to write",
    "start": "1843919",
    "end": "1849279"
  },
  {
    "text": "a short de-offer skater to de-obfuscate the files and extract different components from the files",
    "start": "1849279",
    "end": "1855120"
  },
  {
    "text": "which was not that difficult it was quite fun i just used the [Music]",
    "start": "1855120",
    "end": "1860799"
  },
  {
    "text": "use the regular expression um library from python to",
    "start": "1860799",
    "end": "1866480"
  },
  {
    "text": "find keys and find the array of the base64 decryption and find",
    "start": "1866480",
    "end": "1872480"
  },
  {
    "text": "different parts of the different parts of the strings of scatter strings",
    "start": "1872480",
    "end": "1879519"
  },
  {
    "text": "from the script files and use them to de-obfuscate that same script and",
    "start": "1879519",
    "end": "1885600"
  },
  {
    "text": "extract other components from it",
    "start": "1885600",
    "end": "1890640"
  },
  {
    "text": "and then um i had the dot-net modules that were extracted from",
    "start": "1891360",
    "end": "1896640"
  },
  {
    "text": "the javascript files uh also used another um",
    "start": "1896640",
    "end": "1901679"
  },
  {
    "text": "small script for decrypting um the embedded.net modules from",
    "start": "1901679",
    "end": "1909120"
  },
  {
    "text": "from these from these samples",
    "start": "1909120",
    "end": "1913600"
  },
  {
    "text": "also extracted the urls from the first stage communication with the servers",
    "start": "1915200",
    "end": "1922000"
  },
  {
    "text": "last part is was to extract final c2 address",
    "start": "1922000",
    "end": "1928159"
  },
  {
    "text": "which which i couldn't done in the um in the same uh script that i",
    "start": "1928159",
    "end": "1935919"
  },
  {
    "text": "used for the obfuscation because i had to extract uh the back final vector",
    "start": "1935919",
    "end": "1942080"
  },
  {
    "text": "modules and then the factor modules were net modules i had to go through them to",
    "start": "1942080",
    "end": "1947200"
  },
  {
    "text": "see how i can decrypt the final command and control address but the good thing was that",
    "start": "1947200",
    "end": "1953760"
  },
  {
    "text": "the number of the final backdoor modules were not in thousands",
    "start": "1953760",
    "end": "1960480"
  },
  {
    "text": "it was maybe like one hundredth of the number of the unique first stage malwares and this is",
    "start": "1960480",
    "end": "1966880"
  },
  {
    "text": "actually um this actually shows how the attackers work they didn't",
    "start": "1966880",
    "end": "1972480"
  },
  {
    "text": "compile new backdoor modules every time they",
    "start": "1972480",
    "end": "1979039"
  },
  {
    "text": "they try to just use um a different and unique",
    "start": "1979039",
    "end": "1985679"
  },
  {
    "text": "um like first stage just to postpone the detection for like few",
    "start": "1985679",
    "end": "1992799"
  },
  {
    "text": "stages until the final backdoor which would actually be only in memory",
    "start": "1992799",
    "end": "1999440"
  },
  {
    "text": "um and at the end using a script to decrypt the final c2 addresses and",
    "start": "1999440",
    "end": "2006320"
  },
  {
    "text": "concatenate the two parts of the final c2 addresses together",
    "start": "2006320",
    "end": "2011360"
  },
  {
    "start": "2010000",
    "end": "2010000"
  },
  {
    "text": "a little bit of the mitigation and",
    "start": "2011360",
    "end": "2015919"
  },
  {
    "text": "how to um keep safe from this uh trade actor first",
    "start": "2017679",
    "end": "2023200"
  },
  {
    "text": "of all as i said they are um as we we saw they are quite sophisticated but",
    "start": "2023200",
    "end": "2029919"
  },
  {
    "text": "for the most of the attacks they relied on an old vulnerability in microsoft world so an",
    "start": "2029919",
    "end": "2037200"
  },
  {
    "text": "up to date microsoft office would stop the attack at an entry point from",
    "start": "2037200",
    "end": "2042640"
  },
  {
    "text": "a lot of cases also with other cases like the oxml file",
    "start": "2042640",
    "end": "2048240"
  },
  {
    "text": "just customizing settings and not allowing the the remote communication would stop",
    "start": "2048240",
    "end": "2054960"
  },
  {
    "text": "those attacks as well those infection chains as well",
    "start": "2054960",
    "end": "2060480"
  },
  {
    "text": "again application white listing to stop different malicious components to execute",
    "start": "2060480",
    "end": "2066480"
  },
  {
    "text": "also network detection rules with with the patterns and also",
    "start": "2066480",
    "end": "2072158"
  },
  {
    "text": "other specific specific communication details",
    "start": "2072159",
    "end": "2078079"
  },
  {
    "text": "that the malware has with its server can be used",
    "start": "2078079",
    "end": "2083118"
  },
  {
    "text": "and secure the advanced security product to detect memory resident malwares and the",
    "start": "2083119",
    "end": "2089118"
  },
  {
    "text": "whole infection chain would also help",
    "start": "2089119",
    "end": "2095440"
  },
  {
    "start": "2094000",
    "end": "2094000"
  },
  {
    "text": "conclusion this trajectory is has traditionally had a quite niche",
    "start": "2095440",
    "end": "2101920"
  },
  {
    "text": "target profile but they are expanding and targeting",
    "start": "2101920",
    "end": "2108079"
  },
  {
    "text": "different industries now they had a significantly large number of",
    "start": "2108079",
    "end": "2115280"
  },
  {
    "text": "attacks compared to many other threat actors that we have been tracking they are extremely persistent with",
    "start": "2115280",
    "end": "2122079"
  },
  {
    "text": "multiple attempts to compromise each victim with newly compiled malwares and newly registered domains over and over",
    "start": "2122079",
    "end": "2129280"
  },
  {
    "text": "again they have a highly um they have a high level of sophistication",
    "start": "2129280",
    "end": "2136320"
  },
  {
    "text": "with many techniques that they've used and they've also been updating like the obfuscation",
    "start": "2136320",
    "end": "2141839"
  },
  {
    "text": "routines that they've been updating from time to time",
    "start": "2141839",
    "end": "2146880"
  },
  {
    "text": "and this shows that they are quite resourceful and quite advanced",
    "start": "2146880",
    "end": "2153680"
  },
  {
    "text": "that was it then we have a few minutes if you have questions i'm happy to answer",
    "start": "2155119",
    "end": "2163200"
  },
  {
    "text": "we do not have any questions from our virtual audience",
    "start": "2163520",
    "end": "2169440"
  },
  {
    "text": "so i would like to open up the floor for the sure there's actually",
    "start": "2169440",
    "end": "2175680"
  },
  {
    "text": "you can just head on to the microphone thank you uh hi i'm simon show and i'm a",
    "start": "2175680",
    "end": "2181119"
  },
  {
    "text": "journalist with the register two or three questions firstly sidewinder has in the past been linked",
    "start": "2181119",
    "end": "2188240"
  },
  {
    "text": "to india do you believe that's still the case and secondly a couple of the target",
    "start": "2188240",
    "end": "2194960"
  },
  {
    "text": "nations you've mentioned pakistan bangladesh they've certainly had some issues with unlicensed software being",
    "start": "2194960",
    "end": "2200880"
  },
  {
    "text": "used in government do you think that that has enabled sidewinder to",
    "start": "2200880",
    "end": "2207920"
  },
  {
    "text": "to be more potent and lastly why do you think sidewinder has accelerated its number of attacks",
    "start": "2207920",
    "end": "2217680"
  },
  {
    "text": "okay um so if i remember all the questions first one um",
    "start": "2217680",
    "end": "2223920"
  },
  {
    "text": "so when we when we initially started looking and tracking this protector we",
    "start": "2223920",
    "end": "2230400"
  },
  {
    "text": "had seen some private companies there was one company based out of india that",
    "start": "2230400",
    "end": "2237359"
  },
  {
    "text": "we had we found some connections with the malware components it was years ago",
    "start": "2237359",
    "end": "2242480"
  },
  {
    "text": "but over the years the attribution became more difficult as",
    "start": "2242480",
    "end": "2248960"
  },
  {
    "text": "you know with the privacy privacy protections used in reducing",
    "start": "2248960",
    "end": "2255520"
  },
  {
    "text": "domains and also interesting case with this protector",
    "start": "2255520",
    "end": "2261119"
  },
  {
    "text": "there's also another threat actor that we've been tracking the site copy protector it's a",
    "start": "2261119",
    "end": "2267920"
  },
  {
    "text": "completely different detector but they they've been trying to um",
    "start": "2267920",
    "end": "2275119"
  },
  {
    "text": "they were trying to impersonate as sidewinder and use different",
    "start": "2275680",
    "end": "2280720"
  },
  {
    "text": "malware components um like the same same infrastructure",
    "start": "2280720",
    "end": "2287839"
  },
  {
    "text": "sorry same structure for matter components same file names even with the new obfuscation routine that the site",
    "start": "2287839",
    "end": "2295920"
  },
  {
    "text": "winder started using more frequently in 2022",
    "start": "2295920",
    "end": "2301359"
  },
  {
    "text": "we've seen site copy copying the same um obfuscation routines for the for their",
    "start": "2301359",
    "end": "2306560"
  },
  {
    "text": "javascripts as well so all these facts they they all add up to make",
    "start": "2306560",
    "end": "2313680"
  },
  {
    "text": "the attribution more difficult so it's not it's not easy i mean it's not",
    "start": "2313680",
    "end": "2319040"
  },
  {
    "text": "there's no um facts that i can use to say that they",
    "start": "2319040",
    "end": "2324160"
  },
  {
    "text": "are based in this country or uh connected to that country",
    "start": "2324160",
    "end": "2329520"
  },
  {
    "text": "um your next question was about the",
    "start": "2329520",
    "end": "2334960"
  },
  {
    "text": "industries that they're targeting unlicensed software and if that's uh",
    "start": "2334960",
    "end": "2340240"
  },
  {
    "text": "unlicensed software in the target industries and if that helps them to to attack",
    "start": "2340240",
    "end": "2346000"
  },
  {
    "text": "okay so good question",
    "start": "2346000",
    "end": "2351440"
  },
  {
    "text": "i've actually seen them using similar malwares to",
    "start": "2351440",
    "end": "2357119"
  },
  {
    "text": "target some of the softwares that are used in in different countries like the",
    "start": "2357119",
    "end": "2362800"
  },
  {
    "text": "software's that are used during the pandemic time for like tracking",
    "start": "2362800",
    "end": "2368960"
  },
  {
    "text": "um like draw location tracking but but they they only use like",
    "start": "2368960",
    "end": "2375040"
  },
  {
    "text": "document like phishing documents with that theme and that name to trick",
    "start": "2375040",
    "end": "2384400"
  },
  {
    "text": "victims to click on links more and and get a better",
    "start": "2384400",
    "end": "2390720"
  },
  {
    "text": "foothold on the victims system i i don't have any information about the",
    "start": "2390720",
    "end": "2397200"
  },
  {
    "text": "softwares and your last question was about the sheer",
    "start": "2397200",
    "end": "2403839"
  },
  {
    "text": "volume of the attacks that they've been performing right",
    "start": "2403839",
    "end": "2408880"
  },
  {
    "text": "um i guess they've they've um always been quite active even in the first",
    "start": "2408880",
    "end": "2414800"
  },
  {
    "text": "years that um they've um that we haven't started tracking them",
    "start": "2414800",
    "end": "2420160"
  },
  {
    "text": "but they they got more and more active in the past two years",
    "start": "2420160",
    "end": "2426560"
  },
  {
    "text": "and i guess it only shows that they they have more resources and they spend more",
    "start": "2426560",
    "end": "2434400"
  },
  {
    "text": "time and more effort to to do more attacks and expand their",
    "start": "2434400",
    "end": "2439440"
  },
  {
    "text": "victim their victim base i hope i answered your questions",
    "start": "2439440",
    "end": "2447200"
  },
  {
    "text": "okay with that we will end our session for now",
    "start": "2447200",
    "end": "2452560"
  },
  {
    "text": "thank you thank you everyone [Applause]",
    "start": "2452560",
    "end": "2457960"
  },
  {
    "text": "[Music]",
    "start": "2457960",
    "end": "2461030"
  },
  {
    "text": "[Music]",
    "start": "2464870",
    "end": "2467960"
  }
]