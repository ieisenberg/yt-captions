[
  {
    "text": "so good morning everyone welcome I'm Mark yasson and I'm from ibmx force and",
    "start": "80",
    "end": "5520"
  },
  {
    "text": "I'm here to talk about I enhanced protected M sandbox so but first what is enhanced",
    "start": "5520",
    "end": "12599"
  },
  {
    "text": "protected mode and when is it enabled if you are using IE in immersive mode on Windows 8 or Windows 8.1 to browse",
    "start": "12599",
    "end": "20160"
  },
  {
    "text": "internet websites under the hood your browser will be running inside the EPM",
    "start": "20160",
    "end": "25519"
  },
  {
    "text": "sandbox it is enabled by default on immersive IE but disabled by by default on desktop IE EPM was introduced in IE",
    "start": "25519",
    "end": "33920"
  },
  {
    "text": "10 on Windows 8 and it is the improved version of the prot protected mode sandbox first introduced in",
    "start": "33920",
    "end": "41640"
  },
  {
    "text": "ie7 it it is improved in a way that in addition in addition to limiting right",
    "start": "41640",
    "end": "47160"
  },
  {
    "text": "access which helps in preventing installation of persistent malware EPM additionally limits read access and",
    "start": "47160",
    "end": "54280"
  },
  {
    "text": "limit certain capabilities of the sandbox process so this talk also applies to I",
    "start": "54280",
    "end": "62000"
  },
  {
    "text": "ie1 as well also a detailed white paper is available I think in your black",
    "start": "62000",
    "end": "67960"
  },
  {
    "text": "blackout CD and an updated version will be uploaded in the blackout",
    "start": "67960",
    "end": "74320"
  },
  {
    "text": "website so here's the outline of my talk first is the discussion of the sandbox",
    "start": "76119",
    "end": "81159"
  },
  {
    "text": "internals then I'll move on to sandbox limitations and weaknesses third part is",
    "start": "81159",
    "end": "86200"
  },
  {
    "text": "sandbox Escape followed by a Sandbox Escape demonstration and and finally the the",
    "start": "86200",
    "end": "92880"
  },
  {
    "text": "conclusion so let's begin let's take a look at how at how the APM sunbox sunbox",
    "start": "94240",
    "end": "102079"
  },
  {
    "text": "works first I'll give an overview of the different sunbox components and discuss",
    "start": "102320",
    "end": "107560"
  },
  {
    "text": "them in details in the succeeding slides the IE sunbox is composed of two",
    "start": "107560",
    "end": "113600"
  },
  {
    "text": "processes the frame process also called the broker process host the browser",
    "start": "113600",
    "end": "118880"
  },
  {
    "text": "window and performs the privilege operations the tuab process also called",
    "start": "118880",
    "end": "125200"
  },
  {
    "text": "The Sandbox process host the browser tabs and processes the untrusted",
    "start": "125200",
    "end": "132800"
  },
  {
    "text": "untrusted data such as HTML and [Music] JavaScript the broker process runs in",
    "start": "132800",
    "end": "139280"
  },
  {
    "text": "medium Integrity while the sandbox process runs at low Integrity or in a",
    "start": "139280",
    "end": "145280"
  },
  {
    "text": "more restrictive up container if EPM is enabled through API hooking the IIM",
    "start": "145280",
    "end": "152239"
  },
  {
    "text": "mechanism provide a compatibil compatibility layer for browser extensions to run in a low privilege",
    "start": "152239",
    "end": "159599"
  },
  {
    "text": "environment for API calls that would result in the execution of of a process or a com server",
    "start": "159599",
    "end": "167000"
  },
  {
    "text": "iims looks at the elevation policies to determine whether to forward the launch",
    "start": "167000",
    "end": "172319"
  },
  {
    "text": "type API cost to the broker so that the broker will call the API on behalf of of",
    "start": "172319",
    "end": "177720"
  },
  {
    "text": "the sandbox process for interprocess communication comi PC",
    "start": "177720",
    "end": "185000"
  },
  {
    "text": "is used by iims and components in the sandbox for invoking the services",
    "start": "185000",
    "end": "190280"
  },
  {
    "text": "exposed by Comm objects in the broker Additionally the shared memory",
    "start": "190280",
    "end": "195879"
  },
  {
    "text": "IPC is used by the components in the sandbox and components in the broker for",
    "start": "195879",
    "end": "201200"
  },
  {
    "text": "interprocess messages and for sharing",
    "start": "201200",
    "end": "205360"
  },
  {
    "text": "data so how exactly is the TP process sandbox and",
    "start": "207080",
    "end": "212920"
  },
  {
    "text": "EPM in EPM the tab process is mainly sandbox using App container app",
    "start": "213080",
    "end": "219720"
  },
  {
    "text": "container is a new process isolation mechanism introduced in Windows 8 and it's the same sandboxing mechanism used",
    "start": "219720",
    "end": "227319"
  },
  {
    "text": "in Windows store apps you can think of app containers as boxes in in where processes runs in",
    "start": "227319",
    "end": "235400"
  },
  {
    "text": "which limit what they can access or limit what they can do",
    "start": "235400",
    "end": "240879"
  },
  {
    "text": "app containers are given a set of capabilities so proc so processes",
    "start": "240879",
    "end": "246400"
  },
  {
    "text": "running them can access uh specific resources or perform certain",
    "start": "246400",
    "end": "252400"
  },
  {
    "text": "capabilities IE uses a separate container when browsing internet sites",
    "start": "252400",
    "end": "257600"
  },
  {
    "text": "and it also uses a separate container when browsing trusted home and corporate uh corporate internet",
    "start": "257600",
    "end": "264240"
  },
  {
    "text": "sites the only difference is that the app container used when browsing internet sites has additional",
    "start": "264240",
    "end": "271000"
  },
  {
    "text": "capabilities assigned that allow access to private network",
    "start": "271000",
    "end": "276360"
  },
  {
    "text": "resources under the hood in the kernel the token structure had been modified to support app",
    "start": "277800",
    "end": "283880"
  },
  {
    "text": "containers app container processes are assigned with what is called a a low boox",
    "start": "283880",
    "end": "290000"
  },
  {
    "text": "token a low boox token have the token low boox flag set and the Integrity level set to",
    "start": "290000",
    "end": "296199"
  },
  {
    "text": "low the app container where the process runs in and the capabilities assigned are also are also set in the in the low",
    "start": "296199",
    "end": "303720"
  },
  {
    "text": "boox token another important field in the in",
    "start": "303720",
    "end": "309080"
  },
  {
    "text": "in the low boox token is the low boox number entry field it links the token to",
    "start": "309080",
    "end": "314560"
  },
  {
    "text": "what is called an app container number or a low boox ID you can think of a low boox ID as IDs assigned to up containers",
    "start": "314560",
    "end": "322199"
  },
  {
    "text": "and this ID is used in various isolation and restriction schemes that I'll discuss",
    "start": "322199",
    "end": "328639"
  },
  {
    "text": "later here's how the APM process tree looks",
    "start": "328639",
    "end": "335080"
  },
  {
    "text": "like so the broker process runs in medium while the sandbox process runs",
    "start": "335080",
    "end": "340880"
  },
  {
    "text": "inside an up container if you look at the sand if you look at the sandbox process you'll see",
    "start": "340880",
    "end": "347759"
  },
  {
    "text": "the up container seed and the capabilities assigned what",
    "start": "347759",
    "end": "355120"
  },
  {
    "text": "import what is important in our discussion is the internet client capability",
    "start": "355120",
    "end": "360319"
  },
  {
    "text": "and the Internet Explorer capability the Internet Explorer capability is the",
    "start": "360319",
    "end": "365800"
  },
  {
    "text": "value that ends with 496 unfortunately project Explorer can",
    "start": "365800",
    "end": "372039"
  },
  {
    "text": "resolve some of the capabilities into their in into their friendly",
    "start": "372039",
    "end": "377599"
  },
  {
    "text": "names now that we have an overview of app containers the next question is what",
    "start": "379240",
    "end": "384280"
  },
  {
    "text": "are the different restrictions restriction or isolation scheme it provides well one of the important",
    "start": "384280",
    "end": "390479"
  },
  {
    "text": "restriction provided by app container is that an in order for up in order for an",
    "start": "390479",
    "end": "396440"
  },
  {
    "text": "up container to access securable objects the securable objects such as files register",
    "start": "396440",
    "end": "402440"
  },
  {
    "text": "keys or folders securable object would need to have an additional Access",
    "start": "402440",
    "end": "407639"
  },
  {
    "text": "Control entry specific for the app container or all application packages",
    "start": "407639",
    "end": "414400"
  },
  {
    "text": "which means any app container and a capability Ace that matches one of the app container capabilities I'll show an",
    "start": "414400",
    "end": "421280"
  },
  {
    "text": "example of of of this third one the later slides what this means for example is",
    "start": "421280",
    "end": "428520"
  },
  {
    "text": "the app is that the app container process will not be able to access personal files such as those stored in",
    "start": "428520",
    "end": "434479"
  },
  {
    "text": "the documents pictures and video folders because these folders don't have an an",
    "start": "434479",
    "end": "440560"
  },
  {
    "text": "access control entry for any of",
    "start": "440560",
    "end": "444280"
  },
  {
    "text": "these so since access to secur objects are limited where does up container",
    "start": "447080",
    "end": "452319"
  },
  {
    "text": "processes store store their data in the file system there's an up container",
    "start": "452319",
    "end": "458000"
  },
  {
    "text": "specific folder where processes can create files and in the registry there's an app",
    "start": "458000",
    "end": "465199"
  },
  {
    "text": "container up up container specific register key for data",
    "start": "465199",
    "end": "470879"
  },
  {
    "text": "storage so on the image on the left you can see that the app container specific folder",
    "start": "473720",
    "end": "480560"
  },
  {
    "text": "have a full full access full access Ace is specific to",
    "start": "480560",
    "end": "485759"
  },
  {
    "text": "the app container in this case I is up container on the image on the right just",
    "start": "485759",
    "end": "492520"
  },
  {
    "text": "shows an example of a folder in this case the windows folder having a read read Ace for for all application",
    "start": "492520",
    "end": "501520"
  },
  {
    "text": "packages also browser related data located outside the up container specific locations can also be accessed",
    "start": "503639",
    "end": "510759"
  },
  {
    "text": "by the sandbox IE because they have an Internet Explorer capability Ace an example of this are the feeds",
    "start": "510759",
    "end": "518760"
  },
  {
    "text": "folder and the favorites folder and a few sub keys of the user specific",
    "start": "518760",
    "end": "524519"
  },
  {
    "text": "Internet Explorer register",
    "start": "524519",
    "end": "528839"
  },
  {
    "text": "key so in this illustration you can see that the favorites folder have a read",
    "start": "531120",
    "end": "537040"
  },
  {
    "text": "write Ace for the internal Explorer",
    "start": "537040",
    "end": "542959"
  },
  {
    "text": "capability another isolation scheme provided by app container is that name objects created by the app container",
    "start": "546720",
    "end": "553560"
  },
  {
    "text": "process will now be inserted into an app container specific object name space",
    "start": "553560",
    "end": "559000"
  },
  {
    "text": "instead of the first session objects name space this mitigates name object squatting a privilege escalation attack",
    "start": "559000",
    "end": "566839"
  },
  {
    "text": "which relies on processes with different privileges sharing the same object Nam",
    "start": "566839",
    "end": "573440"
  },
  {
    "text": "space Also Global atom table entries now track which app containers are",
    "start": "575279",
    "end": "580320"
  },
  {
    "text": "referencing them this prevents arbitrary querium of global atoms which could",
    "start": "580320",
    "end": "585560"
  },
  {
    "text": "result in information disclosure this also mitigates delion of global atoms",
    "start": "585560",
    "end": "591399"
  },
  {
    "text": "which could be a vector for sandbox",
    "start": "591399",
    "end": "594920"
  },
  {
    "text": "Escape U uipi which was introduced in Windows Vista to mitigate Char attacks",
    "start": "596560",
    "end": "602000"
  },
  {
    "text": "was also updated in Windows 8 winter 2K blocks right type messages across app",
    "start": "602000",
    "end": "607880"
  },
  {
    "text": "container this is done by comparing app container numbers if the Integrity level",
    "start": "607880",
    "end": "613040"
  },
  {
    "text": "of the processes are",
    "start": "613040",
    "end": "616160"
  },
  {
    "text": "equal and finally network access requires certain capabilities by default",
    "start": "618640",
    "end": "624160"
  },
  {
    "text": "when when visiting internet and public network sites i i a container only has",
    "start": "624160",
    "end": "629519"
  },
  {
    "text": "the internet client cap capability this means that access to trusted trusted home and corporate",
    "start": "629519",
    "end": "636200"
  },
  {
    "text": "networks are",
    "start": "636200",
    "end": "638880"
  },
  {
    "text": "blocked now that we know some of the up container restrictions let's now look at the",
    "start": "642320",
    "end": "647920"
  },
  {
    "text": "well-known restrictions or isolation scheme not not applied by by",
    "start": "647920",
    "end": "653200"
  },
  {
    "text": "APM restricted token which could further restrict the restrict access to",
    "start": "653200",
    "end": "658560"
  },
  {
    "text": "securable object is not applied job objects job object restrictions which",
    "start": "658560",
    "end": "664480"
  },
  {
    "text": "can prevent access to the clipboard and other resources are not applied and finally desktop and window station",
    "start": "664480",
    "end": "670399"
  },
  {
    "text": "isolation is also not implemented without this restrictions in",
    "start": "670399",
    "end": "675880"
  },
  {
    "text": "place some forms of information disclosure attacks are still",
    "start": "675880",
    "end": "681040"
  },
  {
    "text": "possible I'll discuss them later in the sandbox limitations and weaknesses",
    "start": "681040",
    "end": "687160"
  },
  {
    "text": "section as you can see in the illustration the job object assigned to the sandbox",
    "start": "688240",
    "end": "694399"
  },
  {
    "text": "process doesn't have any strict restrictions in place while there there while there are open handles to the",
    "start": "694399",
    "end": "701000"
  },
  {
    "text": "default desktop and the default window",
    "start": "701000",
    "end": "705279"
  },
  {
    "text": "station so that's so that's sandbox restrictions let us let us now take a look at the different sandbox components",
    "start": "709000",
    "end": "716279"
  },
  {
    "text": "the first component is iims iims is used as a compatibility layer",
    "start": "716279",
    "end": "724440"
  },
  {
    "text": "for extensions to run on a low privilege environment in the sandbox process it",
    "start": "724440",
    "end": "730240"
  },
  {
    "text": "intercepts API calls and either it either rewrites it to a rable location",
    "start": "730240",
    "end": "736160"
  },
  {
    "text": "so that the API Co will succeed or it will be forwarded to the broker process so that the broker process will perform",
    "start": "736160",
    "end": "743680"
  },
  {
    "text": "the API call on behalf of the sandbox process for lunch typ API such as wixc",
    "start": "743680",
    "end": "750360"
  },
  {
    "text": "or create process iims first consult the elevation policies to determine whether",
    "start": "750360",
    "end": "755959"
  },
  {
    "text": "to forward those lunch type apis to the",
    "start": "755959",
    "end": "760240"
  },
  {
    "text": "broker to illustrate certain API calls are inter intercepted in the sandbox",
    "start": "763399",
    "end": "769320"
  },
  {
    "text": "process iims will either rewrite rewrite the resource name to a varable location",
    "start": "769320",
    "end": "776399"
  },
  {
    "text": "so that the API AO will succeed or iims will forward the API call to the broker",
    "start": "776399",
    "end": "782839"
  },
  {
    "text": "and then the broker will perform the API call on behalf of the sandbox",
    "start": "782839",
    "end": "788880"
  },
  {
    "text": "process I mentioned earlier that iims consult consults the elevation policies",
    "start": "793519",
    "end": "799600"
  },
  {
    "text": "to determine what to do if if it had iner intercepted the lunch type",
    "start": "799600",
    "end": "806120"
  },
  {
    "text": "apis elevation policies determine whether to prevent prevent launching of the",
    "start": "808120",
    "end": "814560"
  },
  {
    "text": "application or a com server an example of policy number zero is cmd.exe so it",
    "start": "814560",
    "end": "821040"
  },
  {
    "text": "doesn't it it doesn't uh when when spawning of CMD is had been intercepted",
    "start": "821040",
    "end": "828199"
  },
  {
    "text": "the a the API call will just be ignored and then or or launch the process inside",
    "start": "828199",
    "end": "835399"
  },
  {
    "text": "inside a Sandbox or policy number two launch the process in medium Integrity",
    "start": "835399",
    "end": "841040"
  },
  {
    "text": "but ask the user first or policy number three launch the launch it in medium",
    "start": "841040",
    "end": "846920"
  },
  {
    "text": "without any prompt an example of policy 3 is notepad so when you try to execute the notepad",
    "start": "846920",
    "end": "854560"
  },
  {
    "text": "it will it will be forwarded to the broker and then notepad will be executed without in medium without any",
    "start": "854560",
    "end": "862360"
  },
  {
    "text": "questions so elevation policies are stored in the registry and are and are",
    "start": "862360",
    "end": "868120"
  },
  {
    "text": "and are consulted by both the sandbox and the broker",
    "start": "868120",
    "end": "872680"
  },
  {
    "text": "process so for for illustration suppose that iims intercepted an API call to",
    "start": "875440",
    "end": "882440"
  },
  {
    "text": "spawn notepad what will happen is that iims will consult the elevation policies",
    "start": "882440",
    "end": "888720"
  },
  {
    "text": "and it it will find out that the that notepad should be executed in medium without prompt so the API call will be",
    "start": "888720",
    "end": "895079"
  },
  {
    "text": "forwarded to the broker and this is important the broker will recheck recheck the API the API",
    "start": "895079",
    "end": "903440"
  },
  {
    "text": "call against the elevation policies and it will find out that that that yes notepad will should be executed in",
    "start": "903440",
    "end": "909759"
  },
  {
    "text": "medium without Integrity uh without uh without prompt so so the broker will execute",
    "start": "909759",
    "end": "917000"
  },
  {
    "text": "notepad without any questions now suppose CMD is being",
    "start": "917000",
    "end": "922680"
  },
  {
    "text": "executed what will happen is that iims will consult the elevation policies and",
    "start": "922680",
    "end": "927880"
  },
  {
    "text": "we'll find out that cmd.exe should be prevented from launching so the API call",
    "start": "927880",
    "end": "933319"
  },
  {
    "text": "will be ignored you might think that we can just directly call directly forward a our API",
    "start": "933319",
    "end": "940399"
  },
  {
    "text": "to the broker but what happen is that the broker rechecks rechecks the API call so",
    "start": "940399",
    "end": "947440"
  },
  {
    "text": "and that the broker will find out that CMD thatx shouldn't be executed and so",
    "start": "947440",
    "end": "953160"
  },
  {
    "text": "the broker will just ignore ignore our call",
    "start": "953160",
    "end": "960920"
  },
  {
    "text": "I've talked about API calls being forwarded to the broker let's now take a look at the mechanisms that that makes",
    "start": "962959",
    "end": "969480"
  },
  {
    "text": "API forwarding and communication between components in the broker and the sandbox process",
    "start": "969480",
    "end": "976440"
  },
  {
    "text": "possible the sandbox and the broker process communicates using two IPC mechanisms shared mem IPC and com",
    "start": "977120",
    "end": "986519"
  },
  {
    "text": "IPC the shared memory IPC is used by the components in the broker and the sandbox",
    "start": "987920",
    "end": "994600"
  },
  {
    "text": "process for exchanging interprocess messages and for sharing data three shared memory sections are",
    "start": "994600",
    "end": "1001639"
  },
  {
    "text": "created for communication when the broker process starts it creates the",
    "start": "1001639",
    "end": "1006759"
  },
  {
    "text": "shared memory sections and when the sandbox process starts it opens the shared memory",
    "start": "1006759",
    "end": "1012639"
  },
  {
    "text": "sections internally the shared memory sections are called spaces while the",
    "start": "1012639",
    "end": "1017759"
  },
  {
    "text": "data or shared or data shared or communicated in this in this spaces are called",
    "start": "1017759",
    "end": "1024720"
  },
  {
    "text": "artifacts the broker and the sandbox process both use messaging events so that they can be notified if a message",
    "start": "1024720",
    "end": "1032199"
  },
  {
    "text": "is available for them in the shared memory",
    "start": "1032199",
    "end": "1036199"
  },
  {
    "text": "sections I was able to find out how the shared memory is structured and also",
    "start": "1038079",
    "end": "1043798"
  },
  {
    "text": "able to understand some of the important Fields if you're interested on further details you can refer to the white paper",
    "start": "1043799",
    "end": "1050720"
  },
  {
    "text": "but for a high level explanation each shared memory is is is",
    "start": "1050720",
    "end": "1056400"
  },
  {
    "text": "called a space it space is divided into Chun into blanks of into chunks of memory called",
    "start": "1056400",
    "end": "1064120"
  },
  {
    "text": "containers each container holds specific types of data for example this this",
    "start": "1064120",
    "end": "1069520"
  },
  {
    "text": "container will contain shared uh shared data and this container contains IPC",
    "start": "1069520",
    "end": "1076200"
  },
  {
    "text": "messages each container is then subdivided divided into container entries and each container entry",
    "start": "1076200",
    "end": "1083480"
  },
  {
    "text": "contains the actual artifact which contains the actual data being shared or",
    "start": "1083480",
    "end": "1089559"
  },
  {
    "text": "communicated com IPC is the second IPC mechanism used it is used by the sandbox",
    "start": "1094360",
    "end": "1099799"
  },
  {
    "text": "process to invoke the services exposed by com objects in the broker it is boot stra by the broker by",
    "start": "1099799",
    "end": "1107760"
  },
  {
    "text": "first marshalling this particular particular interface of this particular",
    "start": "1107760",
    "end": "1113240"
  },
  {
    "text": "user broker object once the once the interface is marshalled it will be transferred to the",
    "start": "1113240",
    "end": "1119600"
  },
  {
    "text": "sandbox process via the shared M memory IPC so I have an",
    "start": "1119600",
    "end": "1126080"
  },
  {
    "text": "illustration so the first IPC mechanism as I discussed is the shared memory IPC",
    "start": "1126760",
    "end": "1131960"
  },
  {
    "text": "it is used by components in the broker and the sandbox process for exchanging interprocess messages and for sh sharing",
    "start": "1131960",
    "end": "1139919"
  },
  {
    "text": "data the com IC mechanism on the other hand it is bootstrapped by the broker by",
    "start": "1139919",
    "end": "1146320"
  },
  {
    "text": "first marshalling an interface of this of this user broker object the Marshall",
    "start": "1146320",
    "end": "1152080"
  },
  {
    "text": "interface is then transferred to the sandbox bya this shared bya the shared memory IPC and then it will be UNM",
    "start": "1152080",
    "end": "1158760"
  },
  {
    "text": "martialed in the sandbox process and then and then it once it is",
    "start": "1158760",
    "end": "1164360"
  },
  {
    "text": "marshaled IE shims and components in the broker process in the sandbox process can then use it to invoke the services",
    "start": "1164360",
    "end": "1171320"
  },
  {
    "text": "exposed by come objects in the in the",
    "start": "1171320",
    "end": "1175200"
  },
  {
    "text": "broker so the the final component I'll discuss are the services exposed by the",
    "start": "1179960",
    "end": "1185400"
  },
  {
    "text": "broker process I use the term service for any",
    "start": "1185400",
    "end": "1191679"
  },
  {
    "text": "code running in the context of the broker that are reachable or callable to the sandbox process via the AP by the",
    "start": "1191679",
    "end": "1198960"
  },
  {
    "text": "IPC mechanisms I discussed these are codes that needs to run that needs to perform privilege",
    "start": "1198960",
    "end": "1205919"
  },
  {
    "text": "operations or operations that need to run in the context of the broker",
    "start": "1205919",
    "end": "1211600"
  },
  {
    "text": "process the first set of services are the services exposed by the user broker",
    "start": "1212960",
    "end": "1218120"
  },
  {
    "text": "com object it is mostly consist of services for launching elevated process",
    "start": "1218120",
    "end": "1223840"
  },
  {
    "text": "or com com servers an example is the winxx service",
    "start": "1223840",
    "end": "1229440"
  },
  {
    "text": "exposed by the user broker object via the IE user broker interface I mentioned",
    "start": "1229440",
    "end": "1235039"
  },
  {
    "text": "earlier that IIM forward launch type API calls to the broker iims call this",
    "start": "1235039",
    "end": "1240960"
  },
  {
    "text": "particular service when forwarding wi exct to the",
    "start": "1240960",
    "end": "1245840"
  },
  {
    "text": "broker additionally use the user broker object is used to instantiate other com",
    "start": "1246240",
    "end": "1253039"
  },
  {
    "text": "com objects in the other com objects in the broker this other com objects are known",
    "start": "1253039",
    "end": "1259480"
  },
  {
    "text": "as known broker objects they are they they can be",
    "start": "1259480",
    "end": "1265000"
  },
  {
    "text": "instantiated by calling the create non broker object of the of the object of",
    "start": "1265000",
    "end": "1270600"
  },
  {
    "text": "the user broker object that that I previously discussed known known broker objects are",
    "start": "1270600",
    "end": "1276440"
  },
  {
    "text": "a collection of com com classes each com class exposing one or more interface and",
    "start": "1276440",
    "end": "1284520"
  },
  {
    "text": "and each interface exposing one or more services",
    "start": "1284520",
    "end": "1290520"
  },
  {
    "text": "non broker objects provides additional and miscellaneous services that that that are",
    "start": "1293360",
    "end": "1298600"
  },
  {
    "text": "callable that are callable to the sandbox process an example of this is the is the",
    "start": "1298600",
    "end": "1305000"
  },
  {
    "text": "API call that handles the crate the forwarded crate file W API or displaying",
    "start": "1305000",
    "end": "1310679"
  },
  {
    "text": "the internet options dialogue",
    "start": "1310679",
    "end": "1314120"
  },
  {
    "text": "box",
    "start": "1317520",
    "end": "1320520"
  },
  {
    "text": "so is the illustration of the user broker object and the non broker objects the user broker object Expos services",
    "start": "1328200",
    "end": "1335880"
  },
  {
    "text": "that is mostly used to run elevated processes or com servers is also used to instantiate the",
    "start": "1335880",
    "end": "1342720"
  },
  {
    "text": "nonn broker objects known broker objects on the other hand exposes additional and",
    "start": "1342720",
    "end": "1348600"
  },
  {
    "text": "miscellaneous services to the s to the sandbox code and this com and the and",
    "start": "1348600",
    "end": "1354200"
  },
  {
    "text": "the services exposed by this com objects are call of all bya the com",
    "start": "1354200",
    "end": "1359600"
  },
  {
    "text": "IPC finally the third set of services that I'll discuss are the are the",
    "start": "1361200",
    "end": "1366960"
  },
  {
    "text": "services that are exposed exposed by by by the broker",
    "start": "1366960",
    "end": "1372000"
  },
  {
    "text": "components this broker components exposes message handers that are call by",
    "start": "1372000",
    "end": "1377279"
  },
  {
    "text": "the sandbox process through the shared memory IPC an example of these components are",
    "start": "1377279",
    "end": "1383279"
  },
  {
    "text": "the browser frame component in the broker it has multiple handle functions",
    "start": "1383279",
    "end": "1388799"
  },
  {
    "text": "that handles the interprocess messages also the download Download",
    "start": "1388799",
    "end": "1394200"
  },
  {
    "text": "Manager download manager component in the broker have a download message functions that handles IPC messages that",
    "start": "1394200",
    "end": "1401480"
  },
  {
    "text": "coming from the shared memory IPC this message handers typically call",
    "start": "1401480",
    "end": "1406600"
  },
  {
    "text": "ISO get message buffer address to retrieve the IPC message that was sent to it via the shared memory",
    "start": "1406600",
    "end": "1414200"
  },
  {
    "text": "IPC to illustrate components in the broker have message handers that are",
    "start": "1416240",
    "end": "1423400"
  },
  {
    "text": "that can be invoked by the shared memory",
    "start": "1423400",
    "end": "1427240"
  },
  {
    "text": "IPC and At Last I finish discussing all the different sandbox mechanisms and this is how how all the",
    "start": "1435279",
    "end": "1442159"
  },
  {
    "text": "pieces fit together to summarize the broker process runs in medium while the sandbox process runs at",
    "start": "1442159",
    "end": "1449559"
  },
  {
    "text": "low Integrity or inside an up container if APM is enabled through API hooking the IIM",
    "start": "1449559",
    "end": "1457039"
  },
  {
    "text": "mechanism provide compatibility layer for browser extensions to run in a low in a low privilege",
    "start": "1457039",
    "end": "1464960"
  },
  {
    "text": "environment also IIM consult the the elev policies to determine whether to",
    "start": "1465200",
    "end": "1470480"
  },
  {
    "text": "forward the lunch type apis to the broker com IC is used by components in",
    "start": "1470480",
    "end": "1477520"
  },
  {
    "text": "the sandbox and iims for invoking the services exposed by com objects in the",
    "start": "1477520",
    "end": "1484000"
  },
  {
    "text": "broker and shared memory IPC is used by components in the in the broker and the",
    "start": "1484000",
    "end": "1489399"
  },
  {
    "text": "sandbox process for interprocess message exchange and for sharing",
    "start": "1489399",
    "end": "1494799"
  },
  {
    "text": "data let's now take a look at the EPM sandbox limitations and",
    "start": "1497320",
    "end": "1504880"
  },
  {
    "text": "weaknesses earlier I talked about the different isolations and restriction schemes applied by app container to the",
    "start": "1505960",
    "end": "1512880"
  },
  {
    "text": "sandbox process I also discussed that some well-known restrictions or isolation schemes such as job objects",
    "start": "1512880",
    "end": "1519840"
  },
  {
    "text": "restricted tokens are not being applied by EPM so with all with all that",
    "start": "1519840",
    "end": "1525440"
  },
  {
    "text": "information in mind one important question that needs to be asked is that is there anything that code running",
    "start": "1525440",
    "end": "1532520"
  },
  {
    "text": "running in the sandbox can still access or do well it turns out that there are",
    "start": "1532520",
    "end": "1538159"
  },
  {
    "text": "still resources that can be accessed and attacks that that can be",
    "start": "1538159",
    "end": "1543919"
  },
  {
    "text": "conducted so in the file system the sandbox process can list can still list",
    "start": "1545720",
    "end": "1551240"
  },
  {
    "text": "and read most files from system and common folders because because they have a read access a for all application",
    "start": "1551240",
    "end": "1557880"
  },
  {
    "text": "packages the reason for the all application packages a in system and common",
    "start": "1557880",
    "end": "1563840"
  },
  {
    "text": "resources is is for compatibility with app container sandbox applications because if you think about it",
    "start": "1563840",
    "end": "1570320"
  },
  {
    "text": "applications need access to to certain resources such as system DLS config",
    "start": "1570320",
    "end": "1576399"
  },
  {
    "text": "configuration in the register keys in order to in order to properly launch or",
    "start": "1576399",
    "end": "1582399"
  },
  {
    "text": "operate but the implication of course that is that installed applications can",
    "start": "1582399",
    "end": "1587520"
  },
  {
    "text": "be listed and the resulting information can be used for future attacks license key files or",
    "start": "1587520",
    "end": "1594320"
  },
  {
    "text": "configuration files which which may contain sensitive information can also",
    "start": "1594320",
    "end": "1599480"
  },
  {
    "text": "be stolen if they are stored in the in the system or common",
    "start": "1599480",
    "end": "1604880"
  },
  {
    "text": "folders there are also a few user specific folders those those under the user profile",
    "start": "1607440",
    "end": "1614600"
  },
  {
    "text": "folder that can that can also be accessed because they have the all application packages a or the Internet",
    "start": "1614600",
    "end": "1621039"
  },
  {
    "text": "Explorer capability a an example of this as I discussed before is the favorite",
    "start": "1621039",
    "end": "1627760"
  },
  {
    "text": "folders but more importantly EPM cash files and EPM cookies which contains",
    "start": "1627760",
    "end": "1633760"
  },
  {
    "text": "potentially sensitive information or or information for authentication or website authentication",
    "start": "1633760",
    "end": "1640799"
  },
  {
    "text": "information or will or may contain personal information can also be stolen",
    "start": "1640799",
    "end": "1645880"
  },
  {
    "text": "because they are stored inside the app con app container specific folder in which the app container process have",
    "start": "1645880",
    "end": "1652279"
  },
  {
    "text": "have has full access",
    "start": "1652279",
    "end": "1655279"
  },
  {
    "text": "to in the registry most system and common keys can also be read because of",
    "start": "1659919",
    "end": "1666240"
  },
  {
    "text": "the all application packages Ace again the reason for the all application packages Ace is for compatibility with",
    "start": "1666240",
    "end": "1673399"
  },
  {
    "text": "app container sandbox applications this means that the sandbox code can re system configuration",
    "start": "1673399",
    "end": "1680159"
  },
  {
    "text": "information which can be used for future attacks for example a code can Elevate the elevation",
    "start": "1680159",
    "end": "1687679"
  },
  {
    "text": "the can can enumerate the elevation policies and find out what are the what are the registered applications that can",
    "start": "1687679",
    "end": "1694640"
  },
  {
    "text": "be run in medium without prompt and possibly attack that also some form of personal",
    "start": "1694640",
    "end": "1702320"
  },
  {
    "text": "information are still readable such as those under the windows and current version key",
    "start": "1702320",
    "end": "1710120"
  },
  {
    "text": "and more importantly several user specific several user specific Keys",
    "start": "1717799",
    "end": "1723559"
  },
  {
    "text": "those under the on those under hkcu are also accessible because either they have",
    "start": "1723559",
    "end": "1729039"
  },
  {
    "text": "the all application packages Ace or the Internet Explorer a example of this register Keys which",
    "start": "1729039",
    "end": "1736840"
  },
  {
    "text": "contains potential lenses or personal information are the recently run",
    "start": "1736840",
    "end": "1743600"
  },
  {
    "text": "commands names of recently open files and type URLs in",
    "start": "1743600",
    "end": "1750919"
  },
  {
    "text": "IE EPM could potentially lock down access to to user specific locations",
    "start": "1755679",
    "end": "1761200"
  },
  {
    "text": "such as in the hkcu or the user profile folder however that would mean that the broker process",
    "start": "1761200",
    "end": "1768279"
  },
  {
    "text": "would need to do a lot of heavy lifting because if that is the case a lot of access requests will need to be",
    "start": "1768279",
    "end": "1773559"
  },
  {
    "text": "forwarded to the",
    "start": "1773559",
    "end": "1776320"
  },
  {
    "text": "broker for clipboard access the sandbox the sandbox process can also read from",
    "start": "1780760",
    "end": "1786840"
  },
  {
    "text": "and write to the clipboard because there is no clipboard clipboard restrictions this there clipboard restrictions in the",
    "start": "1786840",
    "end": "1793399"
  },
  {
    "text": "job object assigned to the sandbox process in addition we window station",
    "start": "1793399",
    "end": "1799240"
  },
  {
    "text": "isolation is not is not implemented which me which means that the sandbox",
    "start": "1799240",
    "end": "1805159"
  },
  {
    "text": "process shares the clipboard with other processes running interestingly a caveat I found",
    "start": "1805159",
    "end": "1812159"
  },
  {
    "text": "is that the up container process should be the process that is currently actively receiving keyboard input in",
    "start": "1812159",
    "end": "1818360"
  },
  {
    "text": "order to access the clipboard so a little social engineering which will coer the user to press a key",
    "start": "1818360",
    "end": "1825840"
  },
  {
    "text": "while a window or a control shown is shown by the process by the sandbox",
    "start": "1825840",
    "end": "1830919"
  },
  {
    "text": "process is needed to go around the Restriction nonetheless clipboard access is still possible and may result in the",
    "start": "1830919",
    "end": "1838000"
  },
  {
    "text": "disclosure in the disclosure of potentially sensitive information for example if you are using uh a weak",
    "start": "1838000",
    "end": "1844640"
  },
  {
    "text": "password manager that doesn't regularly clears the clipboard clipboard access can clipboard",
    "start": "1844640",
    "end": "1851760"
  },
  {
    "text": "right access can also be a vector for sandbox Escape if applications fully trust the content of the clipboard",
    "start": "1851760",
    "end": "1859919"
  },
  {
    "text": "also because uipi does not block read Type window messages such as WM get",
    "start": "1864720",
    "end": "1870960"
  },
  {
    "text": "text and that the UI limit handles risk restrictions it is not set in the job in",
    "start": "1870960",
    "end": "1876519"
  },
  {
    "text": "the job object and that desktop isolation is not implemented screen scraping attack which",
    "start": "1876519",
    "end": "1883519"
  },
  {
    "text": "can be used to capture potentially sensitive information from Windows or controls by other process is still",
    "start": "1883519",
    "end": "1890760"
  },
  {
    "text": "possible similarly performing a screen capture is also",
    "start": "1890760",
    "end": "1896639"
  },
  {
    "text": "possible and finally because of the internet client capability the sandbox process can can",
    "start": "1900639",
    "end": "1908320"
  },
  {
    "text": "still communicate and send stolen information to a remote attacker the internet client capability",
    "start": "1908320",
    "end": "1915000"
  },
  {
    "text": "can also be used to make the affected system appro to attack other",
    "start": "1915000",
    "end": "1921200"
  },
  {
    "text": "systems so in summary some types of potentially sensitive or personal information can still be",
    "start": "1928880",
    "end": "1935960"
  },
  {
    "text": "stolen either because how the access control list of those files followers register keys are setup and because the",
    "start": "1935960",
    "end": "1943559"
  },
  {
    "text": "EPM did not apply some of the well-known isolation or restriction schemes",
    "start": "1943559",
    "end": "1949840"
  },
  {
    "text": "so let's let's now take a look at the potential vectors for sandbox",
    "start": "1955519",
    "end": "1961000"
  },
  {
    "text": "Escape common to all sandbox implementation is using a kernel B bug for escape in this particular Vector the",
    "start": "1962880",
    "end": "1970960"
  },
  {
    "text": "attacker is not really interested in the sandbox mechanisms since the attacker will be directly targeting the operating",
    "start": "1970960",
    "end": "1977200"
  },
  {
    "text": "system and as more and more widely deployed software adapt sandboxing Technologies",
    "start": "1977200",
    "end": "1984320"
  },
  {
    "text": "we can expect that colel b bugs will continue to be more and more valuable an example of a colonel B bug",
    "start": "1984320",
    "end": "1992200"
  },
  {
    "text": "used to escape the BR the the browser sandbox is when John Nils is when John",
    "start": "1992200",
    "end": "1997840"
  },
  {
    "text": "Butler and Nils used the winter 2K bug to escape the Chrome sandbox in P own 20",
    "start": "1997840",
    "end": "2005399"
  },
  {
    "text": "2013 so just to illustrate an attacker is really not interest interested in the",
    "start": "2006760",
    "end": "2012600"
  },
  {
    "text": "sandbox mechanisms since the attacker will be directly targeting the operating",
    "start": "2012600",
    "end": "2019158"
  },
  {
    "text": "system so next Escape Vector is policy or permission",
    "start": "2024760",
    "end": "2030760"
  },
  {
    "text": "vulnerabilities this involves weaknesses in the sandbox policies such as right allowed right allowed sandbox policies",
    "start": "2030760",
    "end": "2037880"
  },
  {
    "text": "or in the case of IE permissive elevation policies this also involves looking at",
    "start": "2037880",
    "end": "2045080"
  },
  {
    "text": "at the access control entries of files register keys and finding what are those that can",
    "start": "2045080",
    "end": "2051919"
  },
  {
    "text": "be written to when I audited IE this is actually the first ve Vector that I looked at",
    "start": "2051919",
    "end": "2059158"
  },
  {
    "text": "because I allting for this is pretty straightforward you just need to list all the elevation",
    "start": "2059159",
    "end": "2065560"
  },
  {
    "text": "policies that allows lunching in medium without prompt and then determining whether you",
    "start": "2065560",
    "end": "2072240"
  },
  {
    "text": "can control that that application to run your own code for example bya command",
    "start": "2072240",
    "end": "2077358"
  },
  {
    "text": "line by bya command line switches so I did the elevation policy",
    "start": "2077359",
    "end": "2083158"
  },
  {
    "text": "audit and I think it took me a day or two and I for and I I I unfortunately",
    "start": "2083159",
    "end": "2090520"
  },
  {
    "text": "found nothing however evidently a few months after for me",
    "start": "2090520",
    "end": "2097960"
  },
  {
    "text": "serner another security researcher did found and documented a policy vulnerability in",
    "start": "2097960",
    "end": "2104720"
  },
  {
    "text": "IE so the lesson I learned here is that uh I need to do multiple sweeps and keep",
    "start": "2104720",
    "end": "2110920"
  },
  {
    "text": "digging because I might have missed on the first",
    "start": "2110920",
    "end": "2116039"
  },
  {
    "text": "weep so to illustrate policy policy or permission vulnerabilities involves",
    "start": "2117520",
    "end": "2123480"
  },
  {
    "text": "permissive sunbox policies which in the case of IE permissive elevation",
    "start": "2123480",
    "end": "2129040"
  },
  {
    "text": "policies this also includes looking for resources in which the sandbox process",
    "start": "2129040",
    "end": "2134160"
  },
  {
    "text": "has still right access to if those resources are be being read by higher",
    "start": "2134160",
    "end": "2140160"
  },
  {
    "text": "privilege process then that might be an opportunity for sandbox",
    "start": "2140160",
    "end": "2145800"
  },
  {
    "text": "Escape so my first audit was a failure so the next question in my mind",
    "start": "2147839",
    "end": "2154280"
  },
  {
    "text": "was is there a way to fold the policy checking instead policy check vulnerabilities involves",
    "start": "2154280",
    "end": "2160720"
  },
  {
    "text": "weaknesses in how resource names or command lines are evaluated against the sandbox policies maybe you can cause the",
    "start": "2160720",
    "end": "2168240"
  },
  {
    "text": "polic policy checking to to return an incorrect result so via startic analysis I looked",
    "start": "2168240",
    "end": "2175040"
  },
  {
    "text": "at the code that performs the policy Checks Plus any supporting code such as code that proces the",
    "start": "2175040",
    "end": "2182119"
  },
  {
    "text": "command lines the resource names that are used as supporting code for the policy checks",
    "start": "2182119",
    "end": "2188920"
  },
  {
    "text": "and this time I got I got lucky I found a bug that allowed me to launch an",
    "start": "2188920",
    "end": "2194119"
  },
  {
    "text": "executable in medium without any pro without any prompt the bug was in a command line",
    "start": "2194119",
    "end": "2200839"
  },
  {
    "text": "parser which result is eventually is eventually used in a in an elevation",
    "start": "2200839",
    "end": "2206839"
  },
  {
    "text": "policy check and that is not all the bug was very easy to exploit you",
    "start": "2206839",
    "end": "2214880"
  },
  {
    "text": "just need to use a tab instead of a space for delimiting an application name and",
    "start": "2214880",
    "end": "2221480"
  },
  {
    "text": "arguments so in this particular case the broker will think that I will",
    "start": "2221480",
    "end": "2228160"
  },
  {
    "text": "be executing notepad but when the broker passed this to the to wixc wixc will execute CMD",
    "start": "2228160",
    "end": "2236760"
  },
  {
    "text": "thatx instead so you can you can just imagine",
    "start": "2236760",
    "end": "2242119"
  },
  {
    "text": "what a simple tab character can do so this is the bug that I will that I will use in my sandbox Escape demonstration",
    "start": "2242119",
    "end": "2250559"
  },
  {
    "text": "later so to illustrate policy check vulnerabilities involves weaknesses that",
    "start": "2254480",
    "end": "2259720"
  },
  {
    "text": "will cause the pocy the policy checks to return an incorrect result there's no",
    "start": "2259720",
    "end": "2264760"
  },
  {
    "text": "there are no problems with the elevation policies it is how resource names or commands are evaluated against those",
    "start": "2264760",
    "end": "2271480"
  },
  {
    "text": "elevation policies is where the weakness are",
    "start": "2271480",
    "end": "2279440"
  },
  {
    "text": "and finally the services exposed by higher privilege process are a large attack surface for sbox escape earlier I",
    "start": "2279800",
    "end": "2287800"
  },
  {
    "text": "had discussed the different Services exposed by the IE user by by the IE broker",
    "start": "2287800",
    "end": "2293040"
  },
  {
    "text": "process those Services runs in the privileged broker context and uses untrusted data as input and are",
    "start": "2293040",
    "end": "2299960"
  },
  {
    "text": "reachable by the com IPC or the shared memory IPC an example of a service",
    "start": "2299960",
    "end": "2306440"
  },
  {
    "text": "vulnerability is in the is in is the bug in the reader sandbox that was used by",
    "start": "2306440",
    "end": "2312079"
  },
  {
    "text": "the first in the wild reader sandbox Escape exploit in that particular case a",
    "start": "2312079",
    "end": "2317839"
  },
  {
    "text": "broker a broker service used pass an incorrect output buffer size to an API",
    "start": "2317839",
    "end": "2324960"
  },
  {
    "text": "which in turn led to a buffer overflow the buffer overflow contents can be controlled by the sandbox process",
    "start": "2324960",
    "end": "2332319"
  },
  {
    "text": "so the sunbox process was able to control the execution flow of the broker process",
    "start": "2332319",
    "end": "2339440"
  },
  {
    "text": "so to illustrate service vulnerabilities involves weaknesses in the service exposed by the broke by the higher",
    "start": "2341400",
    "end": "2347440"
  },
  {
    "text": "privilege process in the case of IE this includes Services exposed by the user broker",
    "start": "2347440",
    "end": "2353400"
  },
  {
    "text": "object the non broker objects and the message handers exposed by components in",
    "start": "2353400",
    "end": "2358520"
  },
  {
    "text": "the broker we can expect that additional services will be added to support new",
    "start": "2358520",
    "end": "2365480"
  },
  {
    "text": "browser features and functionalities",
    "start": "2365480",
    "end": "2369359"
  },
  {
    "text": "so to summarize scape involves taking advantages taking advantage of weaknesses in a higher in a higher",
    "start": "2372800",
    "end": "2379280"
  },
  {
    "text": "privilege code permissive policies and permissive and permissions and incorrect",
    "start": "2379280",
    "end": "2385040"
  },
  {
    "text": "handling of untrusted data are prime examples of weaknesses that can lead to sandbox",
    "start": "2385040",
    "end": "2391280"
  },
  {
    "text": "escape and weaknesses in the sunbox mechanisms themselves are also a potential Vector",
    "start": "2391280",
    "end": "2397839"
  },
  {
    "text": "for sandbox Escape so I'll now demonstrate a Sandbox",
    "start": "2397839",
    "end": "2405200"
  },
  {
    "text": "Escape using the vulnerability that I I had that I previously discussed I have",
    "start": "2405200",
    "end": "2410760"
  },
  {
    "text": "two demonstrations the first demo is is against desktop IE running with EPM",
    "start": "2410760",
    "end": "2417000"
  },
  {
    "text": "enabled in that demo I the demo will show a message box so I can explain step",
    "start": "2417000",
    "end": "2422280"
  },
  {
    "text": "by step step by step step by step of how the attack will be be conducted and this",
    "start": "2422280",
    "end": "2428880"
  },
  {
    "text": "other demo is against immersive IE in in which the sandbox Escape",
    "start": "2428880",
    "end": "2434400"
  },
  {
    "text": "exploit will be",
    "start": "2434400",
    "end": "2437078"
  },
  {
    "text": "automatic so I will first run theay with EPM",
    "start": "2456240",
    "end": "2464078"
  },
  {
    "text": "enabled as you can see the sandbox process is running inside an up",
    "start": "2466520",
    "end": "2472040"
  },
  {
    "text": "container what I will do is I before attacking the broker you need first to",
    "start": "2472040",
    "end": "2477400"
  },
  {
    "text": "inject code in the sandbox process in my case I will be injected",
    "start": "2477400",
    "end": "2483560"
  },
  {
    "text": "injecting my sandbox Escape exploit in the sandbox process in a in a real Attack a remote exploit",
    "start": "2483560",
    "end": "2491240"
  },
  {
    "text": "will typically download the the sandbox Escape exploit or additional payload in",
    "start": "2491240",
    "end": "2496359"
  },
  {
    "text": "the app container specific folder and then inject it in the sandbox",
    "start": "2496359",
    "end": "2501440"
  },
  {
    "text": "process so in this",
    "start": "2501440",
    "end": "2505078"
  },
  {
    "text": "case so in this case the sandbox process have the P ID of 3",
    "start": "2513200",
    "end": "2519240"
  },
  {
    "text": "028 so it the exploit code says that it is injected into the P",
    "start": "2523960",
    "end": "2530599"
  },
  {
    "text": "30328 and as you can see here the attack code is injected into the sandbox",
    "start": "2530599",
    "end": "2538160"
  },
  {
    "text": "process so once I click okay it will perform the attack against the broker",
    "start": "2540720",
    "end": "2546119"
  },
  {
    "text": "process so here you go so what happen is that uh",
    "start": "2546119",
    "end": "2552240"
  },
  {
    "text": "c c. ESC is is executed in medium",
    "start": "2552240",
    "end": "2558119"
  },
  {
    "text": "integrity and then cmd.exe",
    "start": "2560440",
    "end": "2566680"
  },
  {
    "text": "was also executed in medium as you can see the command line is the is the",
    "start": "2566880",
    "end": "2573440"
  },
  {
    "text": "attack string that I that I pre previously shown in the previous slides and the application that is running is",
    "start": "2573440",
    "end": "2580000"
  },
  {
    "text": "cmd.exe so I will now perform the same attack",
    "start": "2580000",
    "end": "2585160"
  },
  {
    "text": "against uh immersive immersive mode",
    "start": "2585160",
    "end": "2589318"
  },
  {
    "text": "IE so as you can see here the sandbox process is running in a",
    "start": "2599559",
    "end": "2606040"
  },
  {
    "text": "in an up container",
    "start": "2606040",
    "end": "2609119"
  },
  {
    "text": "so then and I will inject my code to the sandbox process with P ID",
    "start": "2615079",
    "end": "2621920"
  },
  {
    "text": "1276 and then the exploit will be automatic no no message box will be",
    "start": "2625359",
    "end": "2632680"
  },
  {
    "text": "shown and here you go so so calculators running in medium and",
    "start": "2634720",
    "end": "2640680"
  },
  {
    "text": "then cmd.exe is running in medium so that is a Sandbox Escape using a tab",
    "start": "2640680",
    "end": "2648240"
  },
  {
    "text": "character in conclusion EP because of app container",
    "start": "2658559",
    "end": "2664800"
  },
  {
    "text": "EPM certainly helps in preventing step of personal files and corporate assets from the net from the network however as",
    "start": "2664800",
    "end": "2672520"
  },
  {
    "text": "discussed there are still some types of potentially sensitive or personal information that can still be stolen EPM",
    "start": "2672520",
    "end": "2679720"
  },
  {
    "text": "can also be further improved by combining a container with other restrictions or",
    "start": "2679720",
    "end": "2685359"
  },
  {
    "text": "isolation schemes such as such as job objects and restricted tokens desktop",
    "start": "2685359",
    "end": "2690559"
  },
  {
    "text": "and window station isolation and finally if you are a security researcher app container is an",
    "start": "2690559",
    "end": "2697040"
  },
  {
    "text": "interesting feature to further look at because certainly there are more interesting restriction or isolation",
    "start": "2697040",
    "end": "2702960"
  },
  {
    "text": "schemes it provide than what are presented here here are my major references a list",
    "start": "2702960",
    "end": "2711200"
  },
  {
    "text": "of complete references can be found in the white paper thank you for listening and I'll",
    "start": "2711200",
    "end": "2717440"
  },
  {
    "text": "be glad to answer any questions that you might",
    "start": "2717440",
    "end": "2721400"
  },
  {
    "text": "have thank [Applause] you",
    "start": "2723200",
    "end": "2728960"
  },
  {
    "text": "any",
    "start": "2729680",
    "end": "2731920"
  },
  {
    "text": "questions questions right think",
    "start": "2735640",
    "end": "2743559"
  },
  {
    "text": "questions oh y i a bit strange to put the if you run",
    "start": "2743559",
    "end": "2752400"
  },
  {
    "text": "let's see a calculator M you still running in the normal uh privilege",
    "start": "2752400",
    "end": "2759079"
  },
  {
    "text": "mode why why uh I I don't understand this design why a sandboxed application",
    "start": "2759079",
    "end": "2765079"
  },
  {
    "text": "can run something uh then it can be escaped from the mode why not run the",
    "start": "2765079",
    "end": "2770119"
  },
  {
    "text": "everything let's say calculator also in the sandbox mode uh because the because for for compatibility reasons for",
    "start": "2770119",
    "end": "2777040"
  },
  {
    "text": "example uh if you are uh running notepad and notepad should access uh resources",
    "start": "2777040",
    "end": "2785040"
  },
  {
    "text": "that that is not reachable via the via the if the if not by the sandbox it",
    "start": "2785040",
    "end": "2790920"
  },
  {
    "text": "cannot access uh some resources so it need to be it needs to be elevated so",
    "start": "2790920",
    "end": "2796119"
  },
  {
    "text": "can it can additionally access res additional resources yeah but the then the attacker",
    "start": "2796119",
    "end": "2802119"
  },
  {
    "text": "can easily use a notepad to addit some system configuration files yeah if you but if you run notepad uh I believe it",
    "start": "2802119",
    "end": "2810359"
  },
  {
    "text": "will be manual if you can run notepad and then pass an an uh pass an pass a",
    "start": "2810359",
    "end": "2817839"
  },
  {
    "text": "specific command line to upde then that will be possible but I'm not sure if you can use notepad to do that kind of stuff",
    "start": "2817839",
    "end": "2824359"
  },
  {
    "text": "because if you are running notepad and and the user needs to type and specifically save the file so so it",
    "start": "2824359",
    "end": "2832760"
  },
  {
    "text": "needs some user interaction so the elevation policies you will be attacking it by listing the elevation policies and",
    "start": "2832760",
    "end": "2840559"
  },
  {
    "text": "determining what applications can be run in medium without prompt and then try to",
    "start": "2840559",
    "end": "2847319"
  },
  {
    "text": "understand if you can control those applications to do what what you are trying to say for example via command",
    "start": "2847319",
    "end": "2853680"
  },
  {
    "text": "line switches for example you have you have an application that you pass an an",
    "start": "2853680",
    "end": "2858760"
  },
  {
    "text": "argument and that argument will be executed by that application so that will be a Sandbox Escape okay",
    "start": "2858760",
    "end": "2868119"
  },
  {
    "text": "okay and more",
    "start": "2875680",
    "end": "2879119"
  },
  {
    "text": "questions any okay thanks thanks again",
    "start": "2884480",
    "end": "2889319"
  },
  {
    "text": "everyone",
    "start": "2891000",
    "end": "2894000"
  }
]