[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "our next talk you are you are in South Seas CDF our next talk is critical zero",
    "start": "30",
    "end": "5400"
  },
  {
    "text": "days remotely compromised the most popular real-time OS with Ben Zuri and",
    "start": "5400",
    "end": "10800"
  },
  {
    "text": "dozous ceman hey guys thank you for that",
    "start": "10800",
    "end": "22170"
  },
  {
    "text": "introduction yeah so my name is Ben sorry I'm the VP",
    "start": "22170",
    "end": "27240"
  },
  {
    "start": "24000",
    "end": "78000"
  },
  {
    "text": "of research at Armus and today with me the door doors booth man whose research on my team Hey",
    "start": "27240",
    "end": "34309"
  },
  {
    "text": "also in the crowd we have a Greg with nopales key which is a also part of a research team and is a big part of the",
    "start": "34309",
    "end": "40890"
  },
  {
    "text": "research we are presenting today Armas is an agent to the society security company which which is focused on",
    "start": "40890",
    "end": "47280"
  },
  {
    "text": "security securing IOT devices and manage devices in both enterprise industrial",
    "start": "47280",
    "end": "52500"
  },
  {
    "text": "and medical organizations in the last year we've noticed a particular brand of real-time operating system but is",
    "start": "52500",
    "end": "59100"
  },
  {
    "text": "extensively used by industrial and medical devices so we decided to take it apart and see if we can find any",
    "start": "59100",
    "end": "64768"
  },
  {
    "text": "interesting vulnerabilities in it this research resulted in the discovery of eleven critical zero-day vulnerabilities",
    "start": "64769",
    "end": "70799"
  },
  {
    "text": "the tcp/ip stack used by this popular real-time operating system named the exports so we're gonna start a bit about",
    "start": "70799",
    "end": "80850"
  },
  {
    "start": "78000",
    "end": "123000"
  },
  {
    "text": "VxWorks just where is it used why is it still very relevant today then we're going to",
    "start": "80850",
    "end": "87060"
  },
  {
    "text": "cover a bit the history of vulnerabilities in the tcp/ip stack",
    "start": "87060",
    "end": "92280"
  },
  {
    "text": "implementation various operating systems then how we go with it about the actual",
    "start": "92280",
    "end": "99150"
  },
  {
    "text": "findings of our research the urgent 11 research and a technical deep dive on",
    "start": "99150",
    "end": "104490"
  },
  {
    "text": "some of the more interesting of these 11 probabilities lastly if we if we",
    "start": "104490",
    "end": "110369"
  },
  {
    "text": "actually have time we'll show it an interesting interesting case study of a",
    "start": "110369",
    "end": "115380"
  },
  {
    "text": "hospital bedside patient monitor that we have here today and we'll attempt to do a live demo of this as well so going",
    "start": "115380",
    "end": "124799"
  },
  {
    "start": "123000",
    "end": "218000"
  },
  {
    "text": "back to the experts what what is VX works and why should you care about it VX works is a real-time operating system",
    "start": "124799",
    "end": "131730"
  },
  {
    "text": "it is owned by a company named River and is actually used by more than 2,000 device manufacturers as the basis for",
    "start": "131730",
    "end": "137640"
  },
  {
    "text": "their device that they have they manufacture so wind referent produces",
    "start": "137640",
    "end": "142739"
  },
  {
    "text": "the code the VxWorks software but then there are over 2,000 companies that takes the source code with operating",
    "start": "142739",
    "end": "149519"
  },
  {
    "text": "system and unit underlying OS for their devices real-time operating systems",
    "start": "149519",
    "end": "155459"
  },
  {
    "text": "Excel it being compact and reliable such that can deliver deterministic timings",
    "start": "155459",
    "end": "161160"
  },
  {
    "text": "for various tests running on top of a priority based scheduler these features usually fit well with various and other",
    "start": "161160",
    "end": "168120"
  },
  {
    "text": "devices and weeks works is used extensively in many different devices it",
    "start": "168120",
    "end": "173370"
  },
  {
    "text": "is the most popular real-time operating system in the market it actually runs on over 2 billion devices that's the same",
    "start": "173370",
    "end": "178980"
  },
  {
    "text": "number of devices that you would find powering Android or Windows devices unlike these operating systems however",
    "start": "178980",
    "end": "185220"
  },
  {
    "text": "this OS suffers from lack of research and its 32 years of existence only",
    "start": "185220",
    "end": "190890"
  },
  {
    "text": "certain CBE's were found to affected and are listed and by mitra now that number",
    "start": "190890",
    "end": "196769"
  },
  {
    "text": "has gone to 24 due to our research but it is still under research extensively",
    "start": "196769",
    "end": "202470"
  },
  {
    "text": "in comparison when you look at Android for example this always has more than 2,000 CVS listed that affected and it",
    "start": "202470",
    "end": "210150"
  },
  {
    "text": "exists for any quarter of the time sorry if there isn't much more research to be done in real-time operating systems envy",
    "start": "210150",
    "end": "215670"
  },
  {
    "text": "export specifically VxWorks is used everywhere you actually find it in",
    "start": "215670",
    "end": "222000"
  },
  {
    "start": "218000",
    "end": "282000"
  },
  {
    "text": "almost every industry from healthcare to many factoring aerospace even automotive",
    "start": "222000",
    "end": "228720"
  },
  {
    "text": "defense security all of these all of these industries use devices that",
    "start": "228720",
    "end": "235049"
  },
  {
    "text": "require these types of real-time operating systems require these types of really reliable compact and highly gain",
    "start": "235049",
    "end": "243870"
  },
  {
    "text": "high reliable systems produced by the most the biggest companies in each of",
    "start": "243870",
    "end": "250560"
  },
  {
    "text": "their respective fields in industrial devices will find it in walk through automation in Schneider Electric the",
    "start": "250560",
    "end": "257910"
  },
  {
    "text": "medical devices you find in Philips and GE and its immense all over the",
    "start": "257910",
    "end": "264120"
  },
  {
    "text": "industries you find we'll be comin disease even vxworks as their go-to solution and even if I miss",
    "start": "264120",
    "end": "272940"
  },
  {
    "text": "example if this is NASA which also uses V exports to drive their spacecraft and",
    "start": "272940",
    "end": "278610"
  },
  {
    "text": "some of the marks for versions as well ok so going back to tcp/ip stacks why",
    "start": "278610",
    "end": "285690"
  },
  {
    "start": "282000",
    "end": "358000"
  },
  {
    "text": "are they an interesting subject for research quality research so in many",
    "start": "285690",
    "end": "292350"
  },
  {
    "text": "regards they are considered the holy grail of our ability research the final ability in the core networking stack of",
    "start": "292350",
    "end": "297990"
  },
  {
    "text": "an operating system is really something that can allow an attacker great a great",
    "start": "297990",
    "end": "303479"
  },
  {
    "text": "a lot of power this is because a couple of things first of all these product",
    "start": "303479",
    "end": "309419"
  },
  {
    "text": "code tcp/ip protocols they go back to the 80s they are they haven't changed since so if you find a probability and",
    "start": "309419",
    "end": "317550"
  },
  {
    "text": "then permutation of such protocol it won't change the code will be changed",
    "start": "317550",
    "end": "325590"
  },
  {
    "text": "almost but also you can bet that they've already you find really reprimand in the",
    "start": "325590",
    "end": "331860"
  },
  {
    "text": "code as well in addition the network stack of any operating system will be running inside the kernel in ring 0 so",
    "start": "331860",
    "end": "339840"
  },
  {
    "text": "the highest privileges that you can imagine and by nature if you find about",
    "start": "339840",
    "end": "345000"
  },
  {
    "text": "ability in a tcp/ip stack it will be remotely exploitable right so it's the network stack of the device if you find",
    "start": "345000",
    "end": "351180"
  },
  {
    "text": "availability in the implementation of the network stack you can send packets that will trigger some of the volatility",
    "start": "351180",
    "end": "357710"
  },
  {
    "text": "in the past this there were some",
    "start": "357710",
    "end": "362910"
  },
  {
    "start": "358000",
    "end": "382000"
  },
  {
    "text": "examples of abilities in tcp/ip stacks back in the 90s we had a couple of these was affected Windows devices you might",
    "start": "362910",
    "end": "369810"
  },
  {
    "text": "remember the famous wing nuke vulnerability you had this nice pop up you click a button and it crashed any",
    "start": "369810",
    "end": "376620"
  },
  {
    "text": "windows 95 an NT device and surprisingly",
    "start": "376620",
    "end": "382380"
  },
  {
    "start": "382000",
    "end": "418000"
  },
  {
    "text": "even today there are examples of this last year there was this mobility in the",
    "start": "382380",
    "end": "387389"
  },
  {
    "text": "Mac OS and iOS from Apple again do not have service attack that crashed these",
    "start": "387389",
    "end": "392849"
  },
  {
    "text": "devices by something single ICMP packet especially crafted one in most cases though mobility is",
    "start": "392849",
    "end": "399460"
  },
  {
    "text": "discovered in the characteristic weren't arise to actually being molecule executions it's there it's where case",
    "start": "399460",
    "end": "405490"
  },
  {
    "text": "and they're more often be an RF service resource exhaustion and all kind of",
    "start": "405490",
    "end": "410500"
  },
  {
    "text": "these probabilities that are critical and important but not remote code execution necessarily what we found is",
    "start": "410500",
    "end": "419590"
  },
  {
    "start": "418000",
    "end": "506000"
  },
  {
    "text": "actually six low abilities but our remote code execution an additional five that our information leaks in RF service",
    "start": "419590",
    "end": "425980"
  },
  {
    "text": "and logical flaws together with these eleven critical vulnerabilities impact the tcp/ip stack used by VxWorks called",
    "start": "425980",
    "end": "433660"
  },
  {
    "text": "IP net and this stack is the default built in this 50 stack for VxWorks in",
    "start": "433660",
    "end": "438910"
  },
  {
    "text": "the last thirty years since version 6.5 as I mentioned before V exports power is",
    "start": "438910",
    "end": "445720"
  },
  {
    "text": "around two billion devices and our estimate is that these mobilities affect hundreds of millions of that two billion",
    "start": "445720",
    "end": "453610"
  },
  {
    "text": "a total number some of the week's work slave devices don't have networking necessarily but the ones that do the",
    "start": "453610",
    "end": "460540"
  },
  {
    "text": "majority of them would be impacted by this the IP next AK like I said is a",
    "start": "460540",
    "end": "467860"
  },
  {
    "text": "different building stack from VX works it is now owned and maintained by Wingrove room as part of their if this",
    "start": "467860",
    "end": "475360"
  },
  {
    "text": "part of VX ports century but in the past it was actually part of another company",
    "start": "475360",
    "end": "480480"
  },
  {
    "text": "inter peak and it was then sold to other real-time operating systems this is part",
    "start": "480480",
    "end": "485800"
  },
  {
    "text": "three of 2006 so in the past you'd find IP netting Greenhills integrity 3dx and",
    "start": "485800",
    "end": "491590"
  },
  {
    "text": "OSC the disclosure process we've done with these of all videos it started in March so it's been five months and score",
    "start": "491590",
    "end": "497890"
  },
  {
    "text": "passes a very complicated one I think in the sense that again there are many many",
    "start": "497890",
    "end": "503500"
  },
  {
    "text": "impact evangelism and like we we saw in",
    "start": "503500",
    "end": "509020"
  },
  {
    "start": "506000",
    "end": "534000"
  },
  {
    "text": "the week past so we talk business last week and since then actually there have been many many advisories like this",
    "start": "509020",
    "end": "516270"
  },
  {
    "text": "companies that come for it and say we're impacted by this we're working on a patch and we're trying to meet and we",
    "start": "516270",
    "end": "522130"
  },
  {
    "text": "are offering some mitigation casts so we saw this in the Philips medical devices industrial devices from rockledge tiger",
    "start": "522130",
    "end": "528610"
  },
  {
    "text": "and some enterprise type devices like they work speakers",
    "start": "528610",
    "end": "533670"
  },
  {
    "text": "another interesting example is the sonic world firewall a firewall that is based",
    "start": "533670",
    "end": "539500"
  },
  {
    "start": "534000",
    "end": "560000"
  },
  {
    "text": "on VX works and that device had actually or still has around a million of these",
    "start": "539500",
    "end": "545769"
  },
  {
    "text": "his car was exposed to the Internet you can find them on Shauna SonicWALL also released the patch and encouraged",
    "start": "545769",
    "end": "552490"
  },
  {
    "text": "and I also do this if you are SonicWALL firewall user please go ahead and install that patch because the exporter",
    "start": "552490",
    "end": "558670"
  },
  {
    "text": "is very reading ok so like I said we",
    "start": "558670",
    "end": "563920"
  },
  {
    "start": "560000",
    "end": "640000"
  },
  {
    "text": "found 11 probabilities and they are actually throughout various subsystems of the tcp/ip stack there is one from",
    "start": "563920",
    "end": "570910"
  },
  {
    "text": "between the IP stack there are various variabilities in the sorry neurology in the IP subsystem various the tcp",
    "start": "570910",
    "end": "577149"
  },
  {
    "text": "subsystem a couple of the dhcp IGMP even even one very interesting and a fine",
    "start": "577149",
    "end": "584889"
  },
  {
    "text": "availability in the protocol you might have not heard of her called reverse ARP and we do touch on that as well so we",
    "start": "584889",
    "end": "593620"
  },
  {
    "text": "want time time to actually cover all of it we did polish white paper when you you're good to go and with it but we are",
    "start": "593620",
    "end": "599290"
  },
  {
    "text": "going to touch a couple of these the most interesting of them and door we'll start with ike one couple that okay",
    "start": "599290",
    "end": "606970"
  },
  {
    "text": "so the first variety that we're going to talk about resides inside of the IP parsing system inside of the IP stack of",
    "start": "606970",
    "end": "614620"
  },
  {
    "text": "VxWorks and in order to understand it we're going to need to have a little bit of background about IP and IP options and i",
    "start": "614620",
    "end": "620800"
  },
  {
    "text": "simpiy else this vulnerability is especially cool because we can do both things that are cool the first thing is",
    "start": "620800",
    "end": "627639"
  },
  {
    "text": "that this probability resides in the IP layer meaning that we can send a",
    "start": "627639",
    "end": "632769"
  },
  {
    "text": "broadcast packet and attack a whole bunch of these devices with just one packet and let's dive deep and see how",
    "start": "632769",
    "end": "639970"
  },
  {
    "text": "it works so we all know this this is the ipv4 header and right at the bottom of it you have the IP options field this",
    "start": "639970",
    "end": "647769"
  },
  {
    "start": "640000",
    "end": "849000"
  },
  {
    "text": "field is used to extend the protocol and it basically consists of a type length",
    "start": "647769",
    "end": "652870"
  },
  {
    "text": "value options every options implement their own type and then there",
    "start": "652870",
    "end": "658339"
  },
  {
    "text": "on that structure inside of the value field many of these options were leased throughout the years and we're gonna",
    "start": "658339",
    "end": "664100"
  },
  {
    "text": "focus on a specific one called the source record routing so these specific options allow an originating",
    "start": "664100",
    "end": "671029"
  },
  {
    "text": "party of an IP packet to determine the destination in which the packet must go through the route in which the packet",
    "start": "671029",
    "end": "677209"
  },
  {
    "text": "must go through to reach the destination the security implications of it are obviously bad just looking at what these",
    "start": "677209",
    "end": "685309"
  },
  {
    "text": "options should do and this is why it's a common practice not to allow this IP option on your network but to our",
    "start": "685309",
    "end": "691759"
  },
  {
    "text": "surprise fix works supports this to some degree so as I mentioned every option implements their own data structure and",
    "start": "691759",
    "end": "698629"
  },
  {
    "text": "in this case is a fairly simple one you have a pointer which points to the current routing position and our route",
    "start": "698629",
    "end": "704779"
  },
  {
    "text": "data which basically is just an array of IP addresses there are hopes for the packet to go through so let's see how",
    "start": "704779",
    "end": "711949"
  },
  {
    "text": "would a client sending such a packet would look like first the client needs to compose the route data meaning that",
    "start": "711949",
    "end": "717860"
  },
  {
    "text": "it has to put inside of the route that filled all the hops that the packet must go through and the last hop obviously",
    "start": "717860",
    "end": "723889"
  },
  {
    "text": "being the actual destination it needs to set destined the packet the first hop and then set the pointer to the start of",
    "start": "723889",
    "end": "730790"
  },
  {
    "text": "the route data once a router receives such a packet it advances the pointer put himself back in the list and then",
    "start": "730790",
    "end": "736910"
  },
  {
    "text": "sends the packet to the next hop this happens successively until we reach the final righto which advances the pointer beyond",
    "start": "736910",
    "end": "743389"
  },
  {
    "text": "the router and that way when the server receives the packet he knows that he is the final destination and not just hop",
    "start": "743389",
    "end": "750350"
  },
  {
    "text": "on the way and he can start parsing the packet now the RFC demands that when the",
    "start": "750350",
    "end": "755749"
  },
  {
    "text": "server would like to answer a client that send certain IP option he would have to use the same route that the",
    "start": "755749",
    "end": "762889"
  },
  {
    "text": "packet took in order to reach to it meaning that he would have to reverse the route data and send the packet back",
    "start": "762889",
    "end": "768679"
  },
  {
    "text": "in the same manner just in Reverse okay so there are many cases in which the server would like to answer an a client",
    "start": "768679",
    "end": "775399"
  },
  {
    "text": "IP packet and one common one is ICMP evel's some of you may already know this",
    "start": "775399",
    "end": "781160"
  },
  {
    "text": "mechanism basically it's a way for a server to report a network or networking",
    "start": "781160",
    "end": "786589"
  },
  {
    "text": "level at all without having an application layer that that in this case you have a client",
    "start": "786589",
    "end": "792160"
  },
  {
    "text": "sending an IP packet to a closed port on the server so no application is there to",
    "start": "792160",
    "end": "797530"
  },
  {
    "text": "listen and receive and handle this packet and the server would like to report to the client that there is a problem inside of the packet and he",
    "start": "797530",
    "end": "804340"
  },
  {
    "text": "needs to handle it so the server wraps the packet inside of an ICMP packet it specified that the",
    "start": "804340",
    "end": "809830"
  },
  {
    "text": "ICMP type is level in this gate pots unreachable because there is nothing listening on that port and then he sends",
    "start": "809830",
    "end": "816220"
  },
  {
    "text": "the packet back to the server so as I mentioned what happens when a client",
    "start": "816220",
    "end": "821590"
  },
  {
    "text": "sends a packet with the necessary option as I mentioned there are si demands that the packet will use the same route back",
    "start": "821590",
    "end": "827770"
  },
  {
    "text": "so when the server will generate the ICMP arrow it will have to copy the SSRI option back this seems like a logical",
    "start": "827770",
    "end": "834790"
  },
  {
    "text": "step but what if I tell you that some of the things that can trigger an ICMP error is actually problems when passing",
    "start": "834790",
    "end": "841780"
  },
  {
    "text": "the IP option themselves now copying seems like a good idea not so sure let's",
    "start": "841780",
    "end": "846940"
  },
  {
    "text": "see if it works take on this so basically this is a very simplified overview of an IP flow of an IP packet",
    "start": "846940",
    "end": "854320"
  },
  {
    "text": "inside of VxWorks IP stack and you can see that the packet takes first the first two stages the one the first one",
    "start": "854320",
    "end": "860440"
  },
  {
    "text": "is the routing logic which determines whether the packet is destined for us or nearly to be routed the second one is",
    "start": "860440",
    "end": "867100"
  },
  {
    "text": "the validation step and after the both steps the packet is considered validated and sanitized and can be later passed to",
    "start": "867100",
    "end": "874420"
  },
  {
    "text": "the layer 3 handlers so let's imagine an ICMP echo request has arrived the first two stages occur now the packet is",
    "start": "874420",
    "end": "880720"
  },
  {
    "text": "validated and sanitized and now the ICMP handler would like to generate an echo response so we expose try to be generic",
    "start": "880720",
    "end": "887950"
  },
  {
    "text": "and implement one function that creates an ICMP packet in this case IP net ICMP for send",
    "start": "887950",
    "end": "893770"
  },
  {
    "text": "so the ICMP handler will call this function to generate the echo response but as I mentioned a lot of a lot of the",
    "start": "893770",
    "end": "900970"
  },
  {
    "text": "both of the first steps can fail and generate ICMP loz and because we exported aneri they use the same",
    "start": "900970",
    "end": "907630"
  },
  {
    "text": "function there's a couple of problem here of course the design is kind of bad because this function is not aware with",
    "start": "907630",
    "end": "914710"
  },
  {
    "text": "which one called her meaning that it can be called from error some branches and still assume the packet is validated",
    "start": "914710",
    "end": "921920"
  },
  {
    "text": "and let's see some of the code so this is all of the code of the function it",
    "start": "921920",
    "end": "927739"
  },
  {
    "text": "just tries to blindly copy all of the IP options to the new I simply packet and it just iterates through all of them and",
    "start": "927739",
    "end": "934639"
  },
  {
    "text": "copies them there's a couple of problems here the first one is that it assumes the packet is validated and sanitized",
    "start": "934639",
    "end": "940730"
  },
  {
    "text": "and passed those two first steps meaning that it trusts the length of the IP option when copying and using that mem",
    "start": "940730",
    "end": "947809"
  },
  {
    "text": "copy which will co-opt memory giving a malformed length there's another problem here that it just goes through every IP",
    "start": "947809",
    "end": "955399"
  },
  {
    "text": "option and try to tries to copy them which is a problem because in SRL there is no really logical way to put more",
    "start": "955399",
    "end": "962689"
  },
  {
    "text": "than one and there are States so and this code is not validated so you can",
    "start": "962689",
    "end": "968899"
  },
  {
    "text": "put multiple malformed SSRI option and this mem copy will be called with the length and this will result in a stack",
    "start": "968899",
    "end": "975919"
  },
  {
    "text": "overflow inside of the IP net stack and we have successfully exploited this bug in order to execute code inside of",
    "start": "975919",
    "end": "982819"
  },
  {
    "text": "VxWorks IP stack okay so this was a corner ability but the next one I think is my favorite it's really simple and",
    "start": "982819",
    "end": "989929"
  },
  {
    "text": "really cute it's in the reverse up protocol so some of you may ask yourself",
    "start": "989929",
    "end": "994939"
  },
  {
    "text": "what is reversed up you all know up right you all seen this kind of packet a client asking the network where is",
    "start": "994939",
    "end": "1000910"
  },
  {
    "text": "another client I want to talk to it give me the data okay but what if I tell you that you can send a reverse out response",
    "start": "1000910",
    "end": "1006759"
  },
  {
    "text": "saying to VxWorks hey this is your IP and we expose response by saying ok and add the IP to",
    "start": "1006759",
    "end": "1013600"
  },
  {
    "text": "the interface this is a really weird behavior and to understand it you need to know the trap is basically an",
    "start": "1013600",
    "end": "1019149"
  },
  {
    "text": "ancestor to DHCP and it was used back in the day to assign addresses to machines",
    "start": "1019149",
    "end": "1026139"
  },
  {
    "text": "there is no reason for this was to actually support this it's obsolete many years now and the problem here is that",
    "start": "1026139",
    "end": "1032740"
  },
  {
    "text": "big folks doesn't validate that it actually sends a reverse out request before passing and handling a reply just",
    "start": "1032740",
    "end": "1039188"
  },
  {
    "text": "sees a reply and says ok I must've asked for an IP address let's add it which is",
    "start": "1039189",
    "end": "1044380"
  },
  {
    "text": "great we have used this bug in order to build a lot of inside of our research",
    "start": "1044380",
    "end": "1049539"
  },
  {
    "text": "and most interestingly there are many devices that had hidden debug features",
    "start": "1049539",
    "end": "1054690"
  },
  {
    "text": "bind it to a specific IP address so you can use that to open them really easily okay so now I'm going to transfer it",
    "start": "1054690",
    "end": "1060899"
  },
  {
    "text": "back to Ben that's going to talk to you about some interesting disappear phone abilities yeah thank you yeah so that was to",
    "start": "1060899",
    "end": "1068789"
  },
  {
    "text": "review again the IP options one is Darcy but we have actually four additional RCS",
    "start": "1068789",
    "end": "1075239"
  },
  {
    "text": "in the TCP urgent pointer mechanism we're going to talk about two of these",
    "start": "1075239",
    "end": "1081349"
  },
  {
    "text": "interesting vulnerabilities to exploit so basic TCP you have client you have a",
    "start": "1081349",
    "end": "1089460"
  },
  {
    "start": "1086000",
    "end": "1100000"
  },
  {
    "text": "server you wanna talk to each other we do that we are a handshake and then they can talk to each other you want to learn",
    "start": "1089460",
    "end": "1094679"
  },
  {
    "text": "more about it I recommend reading this nice book just for the basic",
    "start": "1094679",
    "end": "1100889"
  },
  {
    "start": "1100000",
    "end": "1158000"
  },
  {
    "text": "understanding here I want to just go back about what is TCP window and then about the urgent mechanism virgin taken",
    "start": "1100889",
    "end": "1106799"
  },
  {
    "text": "mechanism so we all know the TCP window from the network aspect of it it allows one pier to send multiple segments TCP",
    "start": "1106799",
    "end": "1113879"
  },
  {
    "text": "segments without reading to wait for acknowledgement of each of them that's the TCP window on the network",
    "start": "1113879",
    "end": "1119460"
  },
  {
    "text": "layer but actually inside the operating system in the implementation of TCP the TCP window is a buffer inside the kernel",
    "start": "1119460",
    "end": "1126599"
  },
  {
    "text": "that is allocated per TCP connection that saves all the segments that were",
    "start": "1126599",
    "end": "1131909"
  },
  {
    "text": "received in the in the TCP connection and once an application wants to read data from this from the socket it",
    "start": "1131909",
    "end": "1139919"
  },
  {
    "text": "actually reads from this buffer allocated inside the kernel so it will call the receive system call with a",
    "start": "1139919",
    "end": "1145409"
  },
  {
    "text": "specified length and then the portion of that buffer will be copied to the application bathroom so again the only",
    "start": "1145409",
    "end": "1152669"
  },
  {
    "text": "takeaway from this side if the TCP window is a buffer inside the operating system so what is the urgent data",
    "start": "1152669",
    "end": "1159210"
  },
  {
    "start": "1158000",
    "end": "1193000"
  },
  {
    "text": "mechanism when you search for TCP urgent data muga the first result is a nice answer",
    "start": "1159210",
    "end": "1164249"
  },
  {
    "text": "the stack overflow says just don't use origin data and the fact is that it actually isn't used by modern",
    "start": "1164249",
    "end": "1170609"
  },
  {
    "text": "applications at all it's a very ancient mechanism going back to the 80s that",
    "start": "1170609",
    "end": "1175739"
  },
  {
    "text": "wasn't invented to allow one pier to send data inside the TCP connection in an urgent fashion to allow one pier to",
    "start": "1175739",
    "end": "1183539"
  },
  {
    "text": "stay to the other please process this urgent data before you process thing else in the TCP window that maybe",
    "start": "1183539",
    "end": "1189220"
  },
  {
    "text": "has been received before so that was the purpose is this but how was actually implemented",
    "start": "1189220",
    "end": "1194769"
  },
  {
    "start": "1193000",
    "end": "1361000"
  },
  {
    "text": "so actually in each TCP header each TCP segment there is allocated the 16 bits",
    "start": "1194769",
    "end": "1199929"
  },
  {
    "text": "of the urgent point or another within the TCP there is no flag and the urgent pointer is a relative pointer",
    "start": "1199929",
    "end": "1205899"
  },
  {
    "text": "inside the TCP stream that points to we're inside the stream the urgent data",
    "start": "1205899",
    "end": "1212460"
  },
  {
    "text": "assets and they're the flag means this this specific segment has urgent data in",
    "start": "1212460",
    "end": "1218679"
  },
  {
    "text": "it and their departure will point you to where it is but there are few questions that are arising just from this data",
    "start": "1218679",
    "end": "1224739"
  },
  {
    "text": "structure first where exactly does the urgent pointer point to does is pointing to the beginning of the urgent data the",
    "start": "1224739",
    "end": "1230409"
  },
  {
    "text": "end of the urgent data and middleware doesn't point to and second there is only an urgent pointer in this since",
    "start": "1230409",
    "end": "1235840"
  },
  {
    "text": "this structure there isn't an urgent length so how long can the urgent data be so to answer these questions let's go",
    "start": "1235840",
    "end": "1243879"
  },
  {
    "text": "back in time to MU 1981 the first are if there is a you know not me what anyone I",
    "start": "1243879",
    "end": "1250690"
  },
  {
    "text": "was a - 6 years old in Turkey was - 14 years old so none of us existed yet and",
    "start": "1250690",
    "end": "1256929"
  },
  {
    "text": "some guys in the ITF discussed these questions about the urgent data in the non-existent what's up work and so the",
    "start": "1256929",
    "end": "1263559"
  },
  {
    "text": "our first RFC to consider this says you know one says the urgent pointer points to the the sequence number of the object",
    "start": "1263559",
    "end": "1270940"
  },
  {
    "text": "following the originator so it points past the urgent data okay it sounds simple enough",
    "start": "1270940",
    "end": "1276340"
  },
  {
    "text": "however six years later in other RFC comes along and says no no the data are c1 the urgent data actually points to",
    "start": "1276340",
    "end": "1283960"
  },
  {
    "text": "the last it's not the month of following it and curious after that in other RFC comes along and states the same",
    "start": "1283960",
    "end": "1289950"
  },
  {
    "text": "statement it points to the last octet not the one that following it so there are these contradictions between the RFC",
    "start": "1289950",
    "end": "1297220"
  },
  {
    "text": "and 2011 the latest RFC to consider this came out and said ok I don't know how to",
    "start": "1297220",
    "end": "1303309"
  },
  {
    "text": "square this problem but let's just say that if both side of the connection agree where the pointer points to then",
    "start": "1303309",
    "end": "1309879"
  },
  {
    "text": "they'll be able to be able to talk to each other but it does say that implementation in all the tcp/ip stacks",
    "start": "1309879",
    "end": "1317320"
  },
  {
    "text": "until that point in time use the first RFC that says that it points past the",
    "start": "1317320",
    "end": "1323000"
  },
  {
    "text": "last origin datum okay so if you're a tcp/ip stack developer today or they",
    "start": "1323000",
    "end": "1329360"
  },
  {
    "text": "take in 1987 or anywhere on that timeline you have to ask yourself how am",
    "start": "1329360",
    "end": "1334790"
  },
  {
    "text": "I going to remain there a generation mechanism what of the RFC which of the RFC's should I support and also you need",
    "start": "1334790",
    "end": "1341150"
  },
  {
    "text": "to ask yourselves again there is the person we haven't answered yet what is the length of the urgent data actually",
    "start": "1341150",
    "end": "1346310"
  },
  {
    "text": "this last RFC for 2011 does state that because we don't have an urgent length very urgent data will always be just one",
    "start": "1346310",
    "end": "1352400"
  },
  {
    "text": "bite so you can see these discrepancies in the arc seen this map might cause implementation problems which we will",
    "start": "1352400",
    "end": "1358610"
  },
  {
    "text": "show in a second how does the data mechanism work inside the operating system sorry if you are a client and",
    "start": "1358610",
    "end": "1365840"
  },
  {
    "start": "1361000",
    "end": "1416000"
  },
  {
    "text": "want to send some urgent data you need to set it inside the TCP stream turn on the origin flag the point of origin",
    "start": "1365840",
    "end": "1372110"
  },
  {
    "text": "point your summer I don't know beginning or end of the turning data and then on the service side now you need to see that there is",
    "start": "1372110",
    "end": "1378770"
  },
  {
    "text": "an order data in the stream and split the urgent data from the non urgent data then you need to send the server",
    "start": "1378770",
    "end": "1384320"
  },
  {
    "text": "application a signal stating that there is urgent data for him to receive in the loop this is security and then the",
    "start": "1384320",
    "end": "1392030"
  },
  {
    "text": "application can call a special receive system call with a special flag message there will be that state I want to get",
    "start": "1392030",
    "end": "1397820"
  },
  {
    "text": "this urgent data give it to me and if we want to receive the regular data the lawyer the data it will call the regular",
    "start": "1397820",
    "end": "1403670"
  },
  {
    "text": "receiver so the osu needs to split the urgent data and the non-avian data and it needs to know depending on what type",
    "start": "1403670",
    "end": "1410720"
  },
  {
    "text": "of receiving system call is being called what type of data to transfer to the server application and this specific",
    "start": "1410720",
    "end": "1417430"
  },
  {
    "start": "1416000",
    "end": "1573000"
  },
  {
    "text": "mechanism is what what is problematic in vxworks here we can see the function",
    "start": "1417430",
    "end": "1423410"
  },
  {
    "text": "inside the kernel that implements this receive system call in VxWorks and what",
    "start": "1423410",
    "end": "1428630"
  },
  {
    "text": "this code tries to do is understand okay I was called with the receive of X bytes so I want to copy X bite from the TCP",
    "start": "1428630",
    "end": "1435770"
  },
  {
    "text": "window to the user's face but if these expire contain original data I need to subtract the length the length field I",
    "start": "1435770",
    "end": "1443030"
  },
  {
    "text": "need to trim it down so it doesn't contain we're generating and this is what happens in this specific field it's a",
    "start": "1443030",
    "end": "1448250"
  },
  {
    "text": "specific line so let's though let's understand the specific line so let's say a user",
    "start": "1448250",
    "end": "1453559"
  },
  {
    "text": "requested to receive specific language but this is the CCP window contains",
    "start": "1453559",
    "end": "1458780"
  },
  {
    "text": "urgent data in the middle and not urgent data be sure and after that urgent data",
    "start": "1458780",
    "end": "1463970"
  },
  {
    "text": "so the receive system call wants to train the length so it doesn't contain any urgent data so this is done this way",
    "start": "1463970",
    "end": "1472010"
  },
  {
    "text": "first it calculates what is a initial sequence number of the TCP window of the",
    "start": "1472010",
    "end": "1477049"
  },
  {
    "text": "current TCP window that is done with this with this two variables and then it goes to the urgent that's we do know you",
    "start": "1477049",
    "end": "1484130"
  },
  {
    "text": "know if this as a second start and then the urgent pointer in vxworks the",
    "start": "1484130",
    "end": "1489380"
  },
  {
    "text": "default is to support this first RFC so it points past the urgent data so to get to the beginning of the urgent data you",
    "start": "1489380",
    "end": "1494990"
  },
  {
    "text": "do this minus one so now you found where is the length is that that doesn't contain any originator that's good so",
    "start": "1494990",
    "end": "1502040"
  },
  {
    "text": "but there are a couple of problems actually in this calculation and let's see one of them first of them is the edge case of setting the urgent pointer",
    "start": "1502040",
    "end": "1508130"
  },
  {
    "text": "to zero as I mentioned before the urgent pointer is a relative pointer to the current sequence number in the current",
    "start": "1508130",
    "end": "1513679"
  },
  {
    "text": "segment so the actually variable Earthling pointer will be sequence start if we substitute this in the equation",
    "start": "1513679",
    "end": "1521090"
  },
  {
    "text": "above we can see that sequence star find a sequence start will will be gone and",
    "start": "1521090",
    "end": "1527630"
  },
  {
    "text": "then we will be left with minus one so thank here we'll be under flow this is important because the length is actually",
    "start": "1527630",
    "end": "1533780"
  },
  {
    "text": "an unsigned integer so what it once it is other flowed it will become a very large number and so if this code try to",
    "start": "1533780",
    "end": "1540770"
  },
  {
    "text": "trim down the language but in essence the language actually became a very large number and now the application",
    "start": "1540770",
    "end": "1546200"
  },
  {
    "text": "that tried to code received with one byte actually gets the entire TCP window so if we have this simple code here that",
    "start": "1546200",
    "end": "1552919"
  },
  {
    "text": "tries to receive one bite from the from a TCP connection to the buffer on the stack the entire TCP window will be",
    "start": "1552919",
    "end": "1559820"
  },
  {
    "text": "copied out of banks out of bounds to the application buffer - this will give this urgent pointer bug this obviously can",
    "start": "1559820",
    "end": "1566900"
  },
  {
    "text": "cause a stack overflow in this specific case or if this buffer was allocated on the heap it can cause and keep overflow",
    "start": "1566900",
    "end": "1572650"
  },
  {
    "text": "okay so this was the code of this was caused by the earning your edge case",
    "start": "1572650",
    "end": "1579740"
  },
  {
    "text": "and this specific bug was actually averted in some change of code that she",
    "start": "1579740",
    "end": "1585770"
  },
  {
    "text": "was introduced in the expert 694 however there are other problems specific line",
    "start": "1585770",
    "end": "1590899"
  },
  {
    "text": "so we had this urgent pointer problem we have now other problems and that one of",
    "start": "1590899",
    "end": "1596360"
  },
  {
    "text": "them is the 5 PI handshake which I consider now so I said that this line has multiple issues and actually all for",
    "start": "1596360",
    "end": "1603950"
  },
  {
    "text": "probabilities that we found or some kind of edge cases that we can cause this",
    "start": "1603950",
    "end": "1608980"
  },
  {
    "text": "this this one line two to break this line has a built in assumption that the",
    "start": "1608980",
    "end": "1615169"
  },
  {
    "text": "urgent pointer always points beyond the beginning of the TCP window so one is in",
    "start": "1615169",
    "end": "1620510"
  },
  {
    "text": "front of the other if that assumption breaks then this calculation here can",
    "start": "1620510",
    "end": "1625520"
  },
  {
    "text": "underflow even without the urgent pointer edge case it can out of any other concerns mechanism there are",
    "start": "1625520",
    "end": "1631190"
  },
  {
    "text": "actually many state infusions that we found that can cause this these two",
    "start": "1631190",
    "end": "1638120"
  },
  {
    "text": "variables the connection between them to break so it's complicated and I won't",
    "start": "1638120",
    "end": "1643279"
  },
  {
    "text": "have time now to go over it in depth you can read about it in the white paper but I do want to give one example of this",
    "start": "1643279",
    "end": "1649159"
  },
  {
    "start": "1648000",
    "end": "1782000"
  },
  {
    "text": "which is the 5 way hands like what we call so you all know about the three already handshake and here we have the 5",
    "start": "1649159",
    "end": "1654529"
  },
  {
    "text": "3 inches if there are five packets sent to a VxWorks device that we cause this",
    "start": "1654529",
    "end": "1659690"
  },
  {
    "text": "state infusion in which the written pointer and the sequence text both variables here will be set at different",
    "start": "1659690",
    "end": "1665960"
  },
  {
    "text": "times and once that is on that once that happened then this calculation before we",
    "start": "1665960",
    "end": "1671059"
  },
  {
    "text": "suck an underflow and the same problem with the length will occur so the first packet in the five point handshake is ass in fact you really soon but it has a",
    "start": "1671059",
    "end": "1677779"
  },
  {
    "text": "TCP option in it an AO option that is malformed and so what weeks works will",
    "start": "1677779",
    "end": "1683720"
  },
  {
    "text": "do here is actually allocate allocate the song with object and drop the packet but it won't close pocket at all it will",
    "start": "1683720",
    "end": "1690080"
  },
  {
    "text": "really leave it open now the attacker can send another packet as Finn seen urged packet that doesn't make any sense",
    "start": "1690080",
    "end": "1695390"
  },
  {
    "text": "but that packet will eventually also be dropped but it will in the process of",
    "start": "1695390",
    "end": "1701870"
  },
  {
    "text": "being processed it will set the urgent pointer relative to the sequence number sending this specific target so now we",
    "start": "1701870",
    "end": "1707750"
  },
  {
    "text": "set the urgent pointer again the packet was brought we didn't get anything act so that I can",
    "start": "1707750",
    "end": "1713230"
  },
  {
    "text": "send another sim packet in this fact that you would say this is a regular sin but he will say it straight another",
    "start": "1713230",
    "end": "1719230"
  },
  {
    "text": "sequence number for the initial sequence number and so now the sequence next variable will be set again so we have",
    "start": "1719230",
    "end": "1725169"
  },
  {
    "text": "achieved what we set out to do is set the sequence and next in the urgent pointer at different times so the",
    "start": "1725169",
    "end": "1731080"
  },
  {
    "text": "connection between them is broken eventually now we will get the AK missing AK and an act and now we've",
    "start": "1731080",
    "end": "1738460"
  },
  {
    "text": "completed five for a handshake with these two variables unconnected to each other if we go back to this equation",
    "start": "1738460",
    "end": "1744130"
  },
  {
    "text": "and we set these values in the in it we can see that again",
    "start": "1744130",
    "end": "1751540"
  },
  {
    "text": "this line will under flow and once it under flows again the length will be cast in as an integer and the receive",
    "start": "1751540",
    "end": "1759130"
  },
  {
    "text": "call from any any server application that calls receive new TCP socket will",
    "start": "1759130",
    "end": "1764260"
  },
  {
    "text": "cause an out words out of bounds copy when you look at both of these and if",
    "start": "1764260",
    "end": "1771429"
  },
  {
    "text": "our abilities together they actually impact all week sports versions from a 6.5 up to the last person released last",
    "start": "1771429",
    "end": "1778150"
  },
  {
    "text": "week or beginning of July actually okay so there are there are two RCS is a TCP",
    "start": "1778150",
    "end": "1785100"
  },
  {
    "text": "implementation what what can attacker you do using these specific vulnerabilities so there is actually an",
    "start": "1785100",
    "end": "1790870"
  },
  {
    "text": "interesting use case for this let's consider this example we have a printer cracking outbound to a Google cloud",
    "start": "1790870",
    "end": "1796299"
  },
  {
    "text": "printing service and first of all it goes out within a server says what is the IP of the VN of Google cloud that",
    "start": "1796299",
    "end": "1803140"
  },
  {
    "text": "will resolve and then a TLS connection will be created between the printer and the Google cloud so this connection is",
    "start": "1803140",
    "end": "1809470"
  },
  {
    "text": "secure connection and then because the TLS is encrypted that connection is a security but the TCP header actually not",
    "start": "1809470",
    "end": "1816429"
  },
  {
    "text": "encrypted and divided Beauty we found is in the parsing of the TCP header so if",
    "start": "1816429",
    "end": "1821799"
  },
  {
    "text": "we have an attacker here that has some control of the DNS server in this example then he can be a matter of the",
    "start": "1821799",
    "end": "1829000"
  },
  {
    "text": "middle on this connection to the Google container you can say I am the Google",
    "start": "1829000",
    "end": "1834190"
  },
  {
    "text": "cloud IP and so the TLS connection would be going out his IP and now because",
    "start": "1834190",
    "end": "1840970"
  },
  {
    "text": "again the mobility is in the TCP header he can the packet going back from the attacker to the printer and for example turn on",
    "start": "1840970",
    "end": "1848529"
  },
  {
    "text": "this urgent zero it's a scenario and that will exploit the verbal cue on the",
    "start": "1848529",
    "end": "1854919"
  },
  {
    "text": "printer even if it's behind and not even if it's secured behind and out so this is a very unique example of a device",
    "start": "1854919",
    "end": "1860730"
  },
  {
    "text": "behind an ad that you can attack from the internet again without needing to",
    "start": "1860730",
    "end": "1866230"
  },
  {
    "text": "breach the network at all okay so this is what ezp urgent and now we're going",
    "start": "1866230",
    "end": "1872139"
  },
  {
    "text": "to talk about the patient monitor that we have here just a bit and or we'll walk you through it okay so we had a lot of fun researching",
    "start": "1872139",
    "end": "1880090"
  },
  {
    "text": "all of these vulnerabilities and we wanted to find some devices to exploit them on this is one interesting case",
    "start": "1880090",
    "end": "1886330"
  },
  {
    "start": "1885000",
    "end": "1928000"
  },
  {
    "text": "this is a patient monitor a bedside hospital patient monitor and he has a very unique set of qualities first it",
    "start": "1886330",
    "end": "1893889"
  },
  {
    "text": "runs the Xbox's 6.6 which makes it vulnerable to the origin zero a variant",
    "start": "1893889",
    "end": "1899200"
  },
  {
    "text": "that we found it and it has a listening TCP server that receives to a buffer that is allocated on the hip that is",
    "start": "1899200",
    "end": "1905470"
  },
  {
    "text": "great because most of the devices that we've seen receives on the stack so we can get away with a simple stack overflow but in this case we need to",
    "start": "1905470",
    "end": "1912100"
  },
  {
    "text": "exploit the hip which is interesting to us because we haven't done it yet and the most important quality that it has",
    "start": "1912100",
    "end": "1917679"
  },
  {
    "text": "is when your Google patient point of weeks works is the first result and you can buy it on eBay so I'm going to take",
    "start": "1917679",
    "end": "1923529"
  },
  {
    "text": "it to the three easy steps in order to obtaining the firm for this device first",
    "start": "1923529",
    "end": "1928659"
  },
  {
    "start": "1928000",
    "end": "1934000"
  },
  {
    "text": "you find it on eBay and you convince the shipper to send it to Israel then you",
    "start": "1928659",
    "end": "1933820"
  },
  {
    "text": "convince your local FDA that you don't need an import license to buy a patient monitor and once you've done all that",
    "start": "1933820",
    "end": "1939460"
  },
  {
    "text": "you can open it up and spot a PowerPC JTAG header in it and just dump the framework and once we did that we were",
    "start": "1939460",
    "end": "1945610"
  },
  {
    "start": "1940000",
    "end": "1946000"
  },
  {
    "text": "not surprised to see that there is no implementation of security and exploit occations whatsoever there is no data",
    "start": "1945610",
    "end": "1951190"
  },
  {
    "start": "1946000",
    "end": "2001000"
  },
  {
    "text": "execution prevention here which is supported by VX works by turned off there is no SLR and there is no kernel",
    "start": "1951190",
    "end": "1956740"
  },
  {
    "text": "use of separation this is not uncommon on this type of devices most of the devices that we've seen implement no",
    "start": "1956740",
    "end": "1962710"
  },
  {
    "text": "security feature whatsoever which makes exploiting this kind of bugs really really easy so this as I mentioned it",
    "start": "1962710",
    "end": "1969700"
  },
  {
    "text": "has the TCP port that is listening and receives to a buffer on the hip which means that we're gonna need to exploit",
    "start": "1969700",
    "end": "1975549"
  },
  {
    "text": "the hip this was a good opportunity for us to understand how exactly vixx works hip works and what are the security implications of it",
    "start": "1975549",
    "end": "1982750"
  },
  {
    "text": "okay so as you can imagine Vicksburg ship is pretty trivial hip no security",
    "start": "1982750",
    "end": "1989950"
  },
  {
    "text": "features are implemented here whatsoever you have a contiguous memory buffer which is the hip you have allocated",
    "start": "1989950",
    "end": "1995799"
  },
  {
    "text": "chunks free chunks and every chunk holds their own metadata at the start of the buffer in case of the allocated chunks",
    "start": "1995799",
    "end": "2002700"
  },
  {
    "text": "you have the two sized awards at the start you have them also in the free junk and right after you have the mem",
    "start": "2002700",
    "end": "2008309"
  },
  {
    "text": "palette pointer the main power pointer is appointed to a global struck that describes the hip but because as I",
    "start": "2008309",
    "end": "2014129"
  },
  {
    "text": "mentioned there is no ISIL out here we can predict it every time so no problem there and also we have the head guard",
    "start": "2014129",
    "end": "2020009"
  },
  {
    "text": "which supposed to be I guess some of security or reliability feature on the hip but is it is determining compilation",
    "start": "2020009",
    "end": "2025740"
  },
  {
    "text": "time of weeks works so not much of a security feature may be more of a reliability one in case of the free",
    "start": "2025740",
    "end": "2031860"
  },
  {
    "text": "chunk you have the same size parameters but you have a couple of interesting pointers right there which are the pointers that put the free",
    "start": "2031860",
    "end": "2038580"
  },
  {
    "text": "junk inside of the hip free list so what is a hip free list basically it's just a",
    "start": "2038580",
    "end": "2043740"
  },
  {
    "text": "list of doubly-linked hip chunks and every time I user tries to allocate a chunk the allocator iterates through all",
    "start": "2043740",
    "end": "2050638"
  },
  {
    "text": "of the free chance and try to find the one that is right sized for the user to allocate once it did that it needs to",
    "start": "2050639",
    "end": "2056878"
  },
  {
    "text": "unlink the free chunk from the free list and then set it as an allocated chunk this happens in a very trivial code",
    "start": "2056879",
    "end": "2064530"
  },
  {
    "text": "inside of the allocator you might you might have seen this code on your computer science assignments this is the",
    "start": "2064530",
    "end": "2072030"
  },
  {
    "text": "basic and linking of a doubly linked list without any safe and linking implemented here just the previous chunk",
    "start": "2072030",
    "end": "2078240"
  },
  {
    "text": "next is my next and so on this is pretty trivially exploited when you can overflow those two pointers and this is",
    "start": "2078240",
    "end": "2085740"
  },
  {
    "text": "called the mirror all right limited meaning that once we offer flow them with two values that are addressable and",
    "start": "2085740",
    "end": "2091260"
  },
  {
    "text": "also meaningful values we can create mirrored right meaning that one pointer will be written to another and in",
    "start": "2091260",
    "end": "2097650"
  },
  {
    "text": "reverse with some offset between them so what is our heap exploitation strategy",
    "start": "2097650",
    "end": "2103680"
  },
  {
    "text": "first we are overflowing from obviously unallocated heap chunk and hoping to hit",
    "start": "2103680",
    "end": "2108780"
  },
  {
    "start": "2104000",
    "end": "2141000"
  },
  {
    "text": "a free hip junk in this specific case the Mystikal in our favors or no hip massaging though what sort of was needed",
    "start": "2108780",
    "end": "2115560"
  },
  {
    "text": "here we just overflow from our hip chunk right to a free hip chunk and then set",
    "start": "2115560",
    "end": "2121620"
  },
  {
    "text": "those two pointers in order to achieve our midlife primitive then we wait for someone to allocate this buffer this",
    "start": "2121620",
    "end": "2127860"
  },
  {
    "text": "happens quite often Leon the system that buffers get allocated and read all the time so now we have a mural right and we can",
    "start": "2127860",
    "end": "2134550"
  },
  {
    "text": "write whatever we want whoever we want so remember the stroke that I told you",
    "start": "2134550",
    "end": "2139890"
  },
  {
    "text": "that describes the hip it has some interesting function pointers in it these function pointers pointers that",
    "start": "2139890",
    "end": "2146580"
  },
  {
    "text": "hooks all the allocation and free functions inside of the memory allocator and basically we just steal one of them",
    "start": "2146580",
    "end": "2153480"
  },
  {
    "text": "to get execution time and also we can execute code before another allocation occurs or another free occurs so the",
    "start": "2153480",
    "end": "2159390"
  },
  {
    "text": "heap will remain intact and we will not destroy anything yet so once we get some runtime we will just freeze this region",
    "start": "2159390",
    "end": "2168120"
  },
  {
    "text": "of the hip we just hook every allocation and every free call that is happening on",
    "start": "2168120",
    "end": "2173910"
  },
  {
    "text": "the system and if someone tries to allocate a buffer from our area that we have destroyed we just ignore that and",
    "start": "2173910",
    "end": "2180060"
  },
  {
    "text": "if we tries to free we just ignore that too and in the case of an allocation we just give it another chunk from another",
    "start": "2180060",
    "end": "2186180"
  },
  {
    "text": "place on the hip we also have a primitive that sets a specific that",
    "start": "2186180",
    "end": "2191270"
  },
  {
    "text": "specific data buffer in the data section to values that we control we won't talk",
    "start": "2191270",
    "end": "2196980"
  },
  {
    "text": "about it but as I mentioned there are no DEP here so executing data is pretty easy and now I'm going to set up the",
    "start": "2196980",
    "end": "2203190"
  },
  {
    "text": "live demo and hopefully if we pray to the demo god it will work yeah can we",
    "start": "2203190",
    "end": "2208920"
  },
  {
    "start": "2204000",
    "end": "2211000"
  },
  {
    "text": "switch to the camera under the table so this is a magic box but there is a patient monitor article just for the it",
    "start": "2208920",
    "end": "2215940"
  },
  {
    "start": "2211000",
    "end": "2620000"
  },
  {
    "text": "reflex too much for the light so we have to it like this and I can connect myself",
    "start": "2215940",
    "end": "2221690"
  },
  {
    "text": "yes ok so before door starts this is a patient water like I said a hospital",
    "start": "2222650",
    "end": "2228810"
  },
  {
    "text": "bedside patient monitor and it can connect to multiple vital readings the",
    "start": "2228810",
    "end": "2234050"
  },
  {
    "text": "part of the oxygen and leg a ECG electrodes which I want to stick to",
    "start": "2234050",
    "end": "2240050"
  },
  {
    "text": "myself but actually do work and we already won the exploit that's before",
    "start": "2240050",
    "end": "2246320"
  },
  {
    "text": "the talk so so it's like ready and this active device actually has a built-in debugger the regular like vxworks",
    "start": "2246320",
    "end": "2252770"
  },
  {
    "text": "debugger that is turned off by default but once you run code on it you can turn on the debugger and that can be your",
    "start": "2252770",
    "end": "2258350"
  },
  {
    "text": "backdoor to control it various ways and what we did is upload some code that",
    "start": "2258350",
    "end": "2263630"
  },
  {
    "text": "will allow us to change the battery readings and do all kind of stuff so for example we can change the pulse rating",
    "start": "2263630",
    "end": "2274580"
  },
  {
    "text": "of me and in the oxygen levels you can see that I'm not really that excited to see all of you folks it's just the",
    "start": "2274580",
    "end": "2281540"
  },
  {
    "text": "monitor says otherwise and now I'm not dead as well I'm pretty much alive",
    "start": "2281540",
    "end": "2287650"
  },
  {
    "text": "okay so we've done that and we can also put whatever wrong on the screen for",
    "start": "2287650",
    "end": "2293420"
  },
  {
    "text": "example this black hat logos and last thing like last night just before going",
    "start": "2293420",
    "end": "2301160"
  },
  {
    "text": "to see I really wanted to see maybe looking like one doom on this patient water and I didn't have time to actually",
    "start": "2301160",
    "end": "2307280"
  },
  {
    "text": "do it but I was able to rather one frame of doom on the patient monitor and maybe",
    "start": "2307280",
    "end": "2312440"
  },
  {
    "text": "until last like the next year maybe I can actually do lately okay so that was",
    "start": "2312440",
    "end": "2317750"
  },
  {
    "text": "the patient monitor and now if that also works we can take some questions",
    "start": "2317750",
    "end": "2323510"
  },
  {
    "text": "Oh actually I do want to summarize a bit the take over the takeaways and then",
    "start": "2323510",
    "end": "2330800"
  },
  {
    "text": "we'll do the questions okay so we went through a lot of material again a very",
    "start": "2330800",
    "end": "2339680"
  },
  {
    "text": "long research with many any four abilities in it I think I just want to go back to a few takeaways from this",
    "start": "2339680",
    "end": "2346280"
  },
  {
    "text": "talk first with some operating systems I think our need to get much more",
    "start": "2346280",
    "end": "2352520"
  },
  {
    "text": "attention from the research community we from this example we saw two billion",
    "start": "2352520",
    "end": "2357650"
  },
  {
    "text": "devices running on VxWorks but only sorry only 13 volt videos founded in the",
    "start": "2357650",
    "end": "2363080"
  },
  {
    "text": "last 13 years more work to be done in researching with our operating systems especially the one",
    "start": "2363080",
    "end": "2369220"
  },
  {
    "text": "so widely used second we also noticed in this research all these esoteric",
    "start": "2369220",
    "end": "2375980"
  },
  {
    "text": "features from tcp/ip stacks that our practice are not written pointers the reverse are these stuff are not used in",
    "start": "2375980",
    "end": "2382760"
  },
  {
    "text": "practice but are still implemented in various stacks and creating attack surfaces that he's really not needed so",
    "start": "2382760",
    "end": "2388700"
  },
  {
    "text": "steps to phase out these specific mechanisms is also needed I think boasting the stacks and just possibly as",
    "start": "2388700",
    "end": "2395900"
  },
  {
    "text": "well in the RFC's like a new RFC can come along and stay no words into the pointer and lastly I do think that this",
    "start": "2395900",
    "end": "2402770"
  },
  {
    "text": "research also shows the challenge of actually finding devices that were px",
    "start": "2402770",
    "end": "2411380"
  },
  {
    "text": "works so if you would be a researcher for Android or Windows you can buy an",
    "start": "2411380",
    "end": "2417680"
  },
  {
    "text": "Android phone and you can research it and it's quite easy if you want to recent weeks works you need to find out what is the device the front of the",
    "start": "2417680",
    "end": "2423830"
  },
  {
    "text": "expert that I can actually use for my research it's not an easy task to do",
    "start": "2423830",
    "end": "2429080"
  },
  {
    "text": "there are many many devices the front VX works but it's not an advertised operating system and it's not something",
    "start": "2429080",
    "end": "2434210"
  },
  {
    "text": "that you go to the store and say I wanna buy VxWorks device so there is a",
    "start": "2434210",
    "end": "2439400"
  },
  {
    "text": "challenge in identifying what is this underlying operating system used by many devices many real-time operating systems",
    "start": "2439400",
    "end": "2445490"
  },
  {
    "text": "based devices I think this giant also needs we need to confront it in order to",
    "start": "2445490",
    "end": "2452150"
  },
  {
    "text": "understand the hacked surface of many of the devices that surround us and we do have 10 minutes surprisingly so if you",
    "start": "2452150",
    "end": "2458360"
  },
  {
    "text": "have any question there are three mics here you're welcome to yeah thank you so I'm",
    "start": "2458360",
    "end": "2470780"
  },
  {
    "text": "I demo a lot with IOT SCADA ice it seems to be kind of a focus of your company",
    "start": "2470780",
    "end": "2477010"
  },
  {
    "text": "I'm frankly surprised you only found 13 or 14 that you don't have more surprise",
    "start": "2477010",
    "end": "2487190"
  },
  {
    "text": "you only found 11 have you done much with fragmentation like the Rose attack or any kind of TCP",
    "start": "2487190",
    "end": "2493240"
  },
  {
    "text": "IP fragmentation there is another one that came out recently to basically DDoS these these devices and just shut them",
    "start": "2493240",
    "end": "2500110"
  },
  {
    "text": "down so I'll repeat the question telling me okay so you asked me if fragmentation",
    "start": "2500110",
    "end": "2505780"
  },
  {
    "text": "in TCP and IP can cause there are services on these types of it yeah so we",
    "start": "2505780",
    "end": "2511480"
  },
  {
    "text": "did actually look at this the implementation of fermentation and we didn't find out anything concrete about this but it is a good good target for",
    "start": "2511480",
    "end": "2518680"
  },
  {
    "text": "research fragmentation in both IP and TCP can cause implementation but not in",
    "start": "2518680",
    "end": "2524140"
  },
  {
    "text": "this instance though look up the ROS attack oh yeah I can I think a thing",
    "start": "2524140",
    "end": "2532330"
  },
  {
    "text": "before there are many abilities that cause like resource exhaustion a life service in the application there but but",
    "start": "2532330",
    "end": "2538630"
  },
  {
    "text": "getting it to denial of service that actually reboot the device or it causes remote to the execution that's another",
    "start": "2538630",
    "end": "2544060"
  },
  {
    "text": "type of attack sure yeah thanks for the presentation a really",
    "start": "2544060",
    "end": "2549670"
  },
  {
    "text": "interesting work did at the beginning of the presentation you mentioned that the same tcp/ip stack is used in thread acts",
    "start": "2549670",
    "end": "2557130"
  },
  {
    "text": "did you guys also investigate to see if you could accomplish these same exploits",
    "start": "2557130",
    "end": "2562570"
  },
  {
    "text": "in thread acts so we haven't actually what we understood from Green River which is now own I think that is that",
    "start": "2562570",
    "end": "2569350"
  },
  {
    "text": "since 2006 when they purchased Iping that these other operating systems",
    "start": "2569350",
    "end": "2575020"
  },
  {
    "text": "no longer use liking it but it is something to consider yeah he just stole",
    "start": "2575020",
    "end": "2582430"
  },
  {
    "text": "my question would control dignity block",
    "start": "2582430",
    "end": "2590200"
  },
  {
    "text": "your exploits attempt would control flow integrity block your exploits oh well",
    "start": "2590200",
    "end": "2597850"
  },
  {
    "text": "that's really not something that exists in VxWorks devices I think there are much basic stuff that can prevent these",
    "start": "2597850",
    "end": "2605170"
  },
  {
    "text": "attacks for being such easy to exploit you know the dormant exists in our cell",
    "start": "2605170",
    "end": "2610240"
  },
  {
    "text": "our know that no stack Canaries they are not implemented in practicing",
    "start": "2610240",
    "end": "2615370"
  },
  {
    "text": "many of vicksburg devices and if you will another mitigation to that even more",
    "start": "2615370",
    "end": "2622570"
  }
]