[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "[Music] [Laughter]",
    "start": "1610",
    "end": "10260"
  },
  {
    "text": "I'm your friendly Proctor today you are in the Roman room for 11:45 talk of",
    "start": "10960",
    "end": "16960"
  },
  {
    "text": "protocol level evasion of web application firewalls a confession of a WFT developer um your speaker is even",
    "start": "16960",
    "end": "25160"
  },
  {
    "text": "ristic and without further Ado here's your speaker",
    "start": "25160",
    "end": "31599"
  },
  {
    "text": "[Applause] hello and thank you for coming to listening to me today um I'm going to be",
    "start": "34550",
    "end": "41120"
  },
  {
    "text": "talking about my favorite topic which is web ification files it's a sort of controversial topic",
    "start": "41120",
    "end": "47600"
  },
  {
    "text": "uh because not you know not many not many people like them even those who deploy them um but the reality is",
    "start": "47600",
    "end": "57239"
  },
  {
    "text": "that so I can come closer I can",
    "start": "57239",
    "end": "61920"
  },
  {
    "text": "so um as I said web application files are basically our reality today because",
    "start": "62719",
    "end": "67960"
  },
  {
    "text": "in the last 10 15 years we've seen an explosion of popularity of web applications and um the reality is",
    "start": "67960",
    "end": "74320"
  },
  {
    "text": "they're just not secure and we need any every any help that we can get and that that's basically what web appication",
    "start": "74320",
    "end": "79880"
  },
  {
    "text": "files do the reason why I'm speaking about this topic today is that I care a great deal about web application files",
    "start": "79880",
    "end": "86680"
  },
  {
    "text": "and I think uh they need to get better and the only thing the only way they're going to get better is by talking about",
    "start": "86680",
    "end": "92560"
  },
  {
    "text": "what they're bad at so that's that's my talk about uh evasion to kick off uh the",
    "start": "92560",
    "end": "99079"
  },
  {
    "start": "98000",
    "end": "98000"
  },
  {
    "text": "talk let's stop for a moment put the wireless on I'm sorry I think it'll be better that way you don't have to lean",
    "start": "99079",
    "end": "105200"
  },
  {
    "text": "in like",
    "start": "105200",
    "end": "107758"
  },
  {
    "text": "that go ahead and go a check check okay is this better yes okay good",
    "start": "113520",
    "end": "123119"
  },
  {
    "text": "so now I've had more time to look at my question on the first slide I wanted to uh start to",
    "start": "123119",
    "end": "128920"
  },
  {
    "text": "talk uh with a real life with an anecdote a couple of years ago I had an opportunity a very brief opportunity to",
    "start": "128920",
    "end": "135560"
  },
  {
    "text": "test a web application firewall it was one of those passive web application firewalls which were quite popular back",
    "start": "135560",
    "end": "141080"
  },
  {
    "text": "in the day because if you have a passive device on your network well it's not you know it's not going to break your",
    "start": "141080",
    "end": "146319"
  },
  {
    "text": "applications so people deployed them quite a lot so I had um so I was trying",
    "start": "146319",
    "end": "152480"
  },
  {
    "text": "to bypass this device because evasion was quite interesting to me even back then and as it happened I was able to",
    "start": "152480",
    "end": "159319"
  },
  {
    "text": "bypass this particular product by adding a single on my first attempt by adding a single character to an to an otherwise",
    "start": "159319",
    "end": "166640"
  },
  {
    "text": "innocent request and this Single Character was actually a DOT that they",
    "start": "166640",
    "end": "172080"
  },
  {
    "text": "added to the end of a host name so you know it happens of course I was lucky",
    "start": "172080",
    "end": "177560"
  },
  {
    "text": "but it also helps it being a w developer I knew about I knew a bit about how these things work and if you're a passy",
    "start": "177560",
    "end": "184239"
  },
  {
    "text": "device on the network uh you know that performance is going to be your problem so developers have to optimize in every",
    "start": "184239",
    "end": "190000"
  },
  {
    "text": "step and the way you optimize you look at the host name of incoming transactions and then you just discard",
    "start": "190000",
    "end": "195239"
  },
  {
    "text": "the ones that do not match what you have in in your configuration so in this particular case we had developers who",
    "start": "195239",
    "end": "200640"
  },
  {
    "text": "didn't really anticipate the host name being slightly different and that's why the evasion worked and of course after",
    "start": "200640",
    "end": "207480"
  },
  {
    "text": "this I was able to bypass uh or to send any attack to this particular web",
    "start": "207480",
    "end": "212599"
  },
  {
    "text": "application file and they all worked without being detected I care about this topic a great",
    "start": "212599",
    "end": "219519"
  },
  {
    "text": "deal because this is my 10th year working with well application files the first seven I spent working in m",
    "start": "219519",
    "end": "225840"
  },
  {
    "text": "security which is a very popular open source we application F and generally speaking we need more transparency in",
    "start": "225840",
    "end": "232239"
  },
  {
    "text": "the field we need someone who's going to keep the vendors honest uh because if we",
    "start": "232239",
    "end": "237319"
  },
  {
    "text": "don't we actually allowing vendors to make make decisions for us what's important and what's not important so we",
    "start": "237319",
    "end": "243040"
  },
  {
    "text": "have to put put this thing into Focus so I'm going to talk about protocol level",
    "start": "243040",
    "end": "249040"
  },
  {
    "text": "evasion which is not your typical uh evasion topic most people when they discuss evasion in web application fils",
    "start": "249040",
    "end": "256079"
  },
  {
    "text": "they usually talk about um how to evade being detected when they're performing",
    "start": "256079",
    "end": "261120"
  },
  {
    "text": "SQ injection attack so they off SQL or they may off skate JavaScript and HTML",
    "start": "261120",
    "end": "266680"
  },
  {
    "text": "if they want to perform a cross scripting attack so what I want want to do is is talk about impedance mismatch",
    "start": "266680",
    "end": "273639"
  },
  {
    "start": "270000",
    "end": "270000"
  },
  {
    "text": "and actually focus on a very low uh level uh layer of web application files",
    "start": "273639",
    "end": "279840"
  },
  {
    "text": "where uh these products security products they have to interpret the stream of data and imp pet mismatch",
    "start": "279840",
    "end": "286320"
  },
  {
    "text": "actually occurs where web application files make a a different interpr have a",
    "start": "286320",
    "end": "291759"
  },
  {
    "text": "different interpretation of the same data stream as the backend uh web server or application they're being protected",
    "start": "291759",
    "end": "298840"
  },
  {
    "text": "if you think about what web application files do they make a lot of decisions and every decision point is actually an",
    "start": "298840",
    "end": "305039"
  },
  {
    "text": "opportunity for an evasion Point um here's a rough overview of the whole field of protocol level evasion uh",
    "start": "305039",
    "end": "312440"
  },
  {
    "start": "308000",
    "end": "308000"
  },
  {
    "text": "this is a this is a representation of an HTTP transaction as you can see there's quite a number of fields there that you",
    "start": "312440",
    "end": "317840"
  },
  {
    "text": "can use and you can try to play with in my talk uh although I've done research on most of these in this talk because we",
    "start": "317840",
    "end": "324919"
  },
  {
    "text": "have limited time I'm focusing on the most interesting bits which is the path the query string and request body",
    "start": "324919",
    "end": "330720"
  },
  {
    "text": "evasion um and all these other talks all these other aspects of evasion will",
    "start": "330720",
    "end": "335800"
  },
  {
    "text": "follow up uh uh later to give some back uh background for the discussion I'm",
    "start": "335800",
    "end": "341720"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "going to introduce virtual patching as a as a probably the most popular use case",
    "start": "341720",
    "end": "346800"
  },
  {
    "text": "um of web application files even today organizations are really scared to deplo",
    "start": "346800",
    "end": "352000"
  },
  {
    "text": "deploy web application files in blocking mode but you know if you uh give them an",
    "start": "352000",
    "end": "357039"
  },
  {
    "text": "opportunity and if if they discover a known problem with their application they are they will be happier to uh",
    "start": "357039",
    "end": "363280"
  },
  {
    "text": "enable blocking just one area they know is is vulnerable but virtual patching as",
    "start": "363280",
    "end": "368880"
  },
  {
    "text": "exciting as it may be because it helps you mitigate the problems and reduces the window opportunity for the attacker",
    "start": "368880",
    "end": "374919"
  },
  {
    "text": "actually quite demanding on web application files because they require the Ws to be very very smart and they",
    "start": "374919",
    "end": "380440"
  },
  {
    "text": "have to parse and understand every single field and of course as we as I mentioned earlier the more decisions",
    "start": "380440",
    "end": "387240"
  },
  {
    "text": "that you have to make the easier it is to evade them however the techniques that I'm going to be talking about are not just uh restricted uh to uh virtual",
    "start": "387240",
    "end": "396199"
  },
  {
    "text": "patching they apply to any sort of detection technique that apply that has to deal say with parts and has to deal",
    "start": "396199",
    "end": "404080"
  },
  {
    "text": "with for example learning many web application files will have learning sub components where they actually build the",
    "start": "404080",
    "end": "410560"
  },
  {
    "text": "model of the application they're protecting and they look at identify individual scripts individual parameters",
    "start": "410560",
    "end": "417639"
  },
  {
    "text": "and so on and so forth so also in as a background I'm going to focus on um",
    "start": "417639",
    "end": "423160"
  },
  {
    "text": "Apache deployed with Mod security simply because that's going to make the whole talk interesting um in the course of my",
    "start": "423160",
    "end": "430039"
  },
  {
    "text": "research I have located two previously unknown issues with more security more security core rule set which have been",
    "start": "430039",
    "end": "436360"
  },
  {
    "text": "disclosed and fixed um but anecdotally speaking all these Pro issues are real",
    "start": "436360",
    "end": "442599"
  },
  {
    "text": "and you will find in the commercial WS are also vulnerable to them now I didn't",
    "start": "442599",
    "end": "448240"
  },
  {
    "text": "test any of the commercial products myself but uh what I'm going to be releasing uh together with this talk is",
    "start": "448240",
    "end": "454879"
  },
  {
    "text": "a white paper which goes into more detail about all these techniques and a set of tests and this this is like a",
    "start": "454879",
    "end": "462199"
  },
  {
    "text": "research toolkit that you can use in your environments to test what you have and to really be uh find out how",
    "start": "462199",
    "end": "468360"
  },
  {
    "text": "effective web application follows are so without further introduction I'm",
    "start": "468360",
    "end": "473520"
  },
  {
    "text": "going to focus on path evasion which is sort of the first um aspect you know",
    "start": "473520",
    "end": "478879"
  },
  {
    "start": "478000",
    "end": "478000"
  },
  {
    "text": "what what you going to see in this talk is a bit of old and a bit of new um I think if if there's one thing that um I",
    "start": "478879",
    "end": "485960"
  },
  {
    "text": "I want this talk to do is to bring this topic uh into the focus and to open a",
    "start": "485960",
    "end": "492199"
  },
  {
    "text": "conversation about this particular thing because I've spent years working on web application files and had to deal with",
    "start": "492199",
    "end": "498280"
  },
  {
    "text": "many of these issues and I'm guessing that wers do too but they're not talking about it so that's why we have to",
    "start": "498280",
    "end": "505039"
  },
  {
    "text": "do so we have an imaginary application uh and uh that uh in that application",
    "start": "505039",
    "end": "511240"
  },
  {
    "text": "there's a script called admin.php let's imagine it has a single parameter user ID and this user ID is uh supposed to be",
    "start": "511240",
    "end": "519080"
  },
  {
    "text": "a number but it's vulnerable to escal injection so what you want to do you want to deploy virtual patch and you",
    "start": "519080",
    "end": "525040"
  },
  {
    "text": "want to uh make sure that if anything else comes in this parameter user ID you can detect it so you can block the",
    "start": "525040",
    "end": "531399"
  },
  {
    "text": "request and thus prevent uh prevent the attack so in the lower part of the screen you can see how this this how you",
    "start": "531399",
    "end": "537680"
  },
  {
    "text": "would do this uh with uh running Apachi and mod security conceptually is going",
    "start": "537680",
    "end": "543279"
  },
  {
    "text": "to be the same with any web application F what you do first you have a a patch",
    "start": "543279",
    "end": "548600"
  },
  {
    "text": "activ activation first typically this is done based on the path and then you say okay this is where this patch needs to",
    "start": "548600",
    "end": "554959"
  },
  {
    "text": "apply in this case my app admin.php and then within the location block you have",
    "start": "554959",
    "end": "560720"
  },
  {
    "text": "a number of rules that actually check the content in this case we have just one rule which basically alerts if uh",
    "start": "560720",
    "end": "568640"
  },
  {
    "text": "the contents that we're seeing in the user ID field is not a number you know what we're doing is white listing we",
    "start": "568640",
    "end": "574320"
  },
  {
    "text": "don't care what attacks are possible what we're doing we're going to reject any request that doesn't conform to our",
    "start": "574320",
    "end": "580000"
  },
  {
    "text": "requirements so the first thing that you can try to evade uh what we want to do is we want to evade evade P activation",
    "start": "580000",
    "end": "588040"
  },
  {
    "text": "and probably the oldest trick in the book is to use a future no and Pa info which is basically just append the forward slash and some random stuff",
    "start": "588040",
    "end": "595040"
  },
  {
    "text": "afterwards web servers which have access to the file system and can scripts on",
    "start": "595040",
    "end": "600200"
  },
  {
    "text": "the file system they know where the the path ends so that works for them but web",
    "start": "600200",
    "end": "606079"
  },
  {
    "text": "application files they don't really know to be honest I thought this this technique was so old it was not going to",
    "start": "606079",
    "end": "612560"
  },
  {
    "text": "work in real life and I had I I had been talking to some people about this who",
    "start": "612560",
    "end": "617800"
  },
  {
    "text": "and they tried it actually on a commercial W and this worked against the virtual PCH so even even this one of the",
    "start": "617800",
    "end": "624680"
  },
  {
    "text": "oldest technique so the second technique is actually a a very uh seldom used",
    "start": "624680",
    "end": "630079"
  },
  {
    "text": "feature known as path parameters uh to my knowledge this is used only by the",
    "start": "630079",
    "end": "635680"
  },
  {
    "text": "Java server specification to transport session IDs and it has a similar the",
    "start": "635680",
    "end": "641079"
  },
  {
    "text": "approach is similar you just append a semicolon and then you put some random stuff there you break the path and then",
    "start": "641079",
    "end": "646800"
  },
  {
    "text": "you prevent the W from detecting the path correctly and you prevent the the",
    "start": "646800",
    "end": "651839"
  },
  {
    "text": "patch from running so these two examples they don't work in Apache because the",
    "start": "651839",
    "end": "657399"
  },
  {
    "start": "653000",
    "end": "653000"
  },
  {
    "text": "apache's location tag will actually that it works like a prefix that's all good um however there's another Ru uh way to",
    "start": "657399",
    "end": "664279"
  },
  {
    "text": "write more security rules and typically if you're Distributing a virtual patch you're going to you want to avoid",
    "start": "664279",
    "end": "669839"
  },
  {
    "text": "messing with the patch configuration so you write a self-contained rule uh here you have an example uh uh this is what",
    "start": "669839",
    "end": "677120"
  },
  {
    "text": "we call a chain of rules you have the first rule that will look at the path and decide if the patch wants to run and",
    "start": "677120",
    "end": "683279"
  },
  {
    "text": "then we have the second rule this actually enforces things and all these examples that I'm giving you actually",
    "start": "683279",
    "end": "688839"
  },
  {
    "text": "these are examples of real life virtual patches that I've collected uh on the internet so all these are real again",
    "start": "688839",
    "end": "695200"
  },
  {
    "text": "real problems so there's a problem there are a couple of problems with this patch one patch is that uh one problem is that",
    "start": "695200",
    "end": "701920"
  },
  {
    "text": "the rule is using the string equality operator which is very rigid and we only look for exact match so both path info",
    "start": "701920",
    "end": "710360"
  },
  {
    "text": "and path parameter attacks are going to work on this uh against this particular rule the other problem is that there's a",
    "start": "710360",
    "end": "716600"
  },
  {
    "text": "number of part ofation attacks that you can carry out and these are known since forever these are the the multiple um",
    "start": "716600",
    "end": "724160"
  },
  {
    "text": "forward slashes self referencing directories and back references and as",
    "start": "724160",
    "end": "729639"
  },
  {
    "text": "it turns out uh using the rules as they are they actually they're quite easy to bypass so there's a way of course to fix",
    "start": "729639",
    "end": "737240"
  },
  {
    "text": "these issues and one uh way to fix it is to use a battery operator here instead of the Swing quality operator we use",
    "start": "737240",
    "end": "744199"
  },
  {
    "text": "begin withd and then we uh and then the other thing is we're using a feature mod",
    "start": "744199",
    "end": "749600"
  },
  {
    "text": "security called transformation pipelines where you basically provide instructions to mod security how to transform input",
    "start": "749600",
    "end": "756839"
  },
  {
    "text": "before it's used for comparison and we have a uh there's a mod security there's a a transformation function called",
    "start": "756839",
    "end": "763120"
  },
  {
    "text": "called normalized path which do exactly what uh as it says does exactly as it",
    "start": "763120",
    "end": "768160"
  },
  {
    "text": "says we'll take a path normalize it so it it looks like a Unix path and then",
    "start": "768160",
    "end": "773240"
  },
  {
    "text": "and then we we sort of we've address the problem but you know every time we change our rules to fix a problem we can",
    "start": "773240",
    "end": "780680"
  },
  {
    "text": "just uh increase the complexity of the problem to to see uh and to break it",
    "start": "780680",
    "end": "785800"
  },
  {
    "start": "783000",
    "end": "783000"
  },
  {
    "text": "again so imagine that we have Apache running as a reverse proxy deployed to protect an is um web server this is",
    "start": "785800",
    "end": "793800"
  },
  {
    "text": "actually quite a common deployment scenario um and once you deploy in in a",
    "start": "793800",
    "end": "799600"
  },
  {
    "text": "sort of diverse architecture you have to start worrying about what the web server in the back end is going to do and in",
    "start": "799600",
    "end": "806120"
  },
  {
    "text": "the case of Windows you actually have the situ sitation that windows will happily use back the back reference back",
    "start": "806120",
    "end": "812680"
  },
  {
    "text": "slash character as a path separator and of course the file system is not kind sensitive so how are you going to deal",
    "start": "812680",
    "end": "818519"
  },
  {
    "text": "with this um well I I I gave it a shot so Apache using the the stock location",
    "start": "818519",
    "end": "825120"
  },
  {
    "text": "tag is not going to deal with this but it has sort of a fallback where you can Resort using a regular expression so you",
    "start": "825120",
    "end": "831920"
  },
  {
    "text": "know so I tried I gave it a shot and I I've arrived that a regular expression is pretty complex but it seems to work",
    "start": "831920",
    "end": "838000"
  },
  {
    "text": "but you know it's very difficult to use and very difficult to maintain and to be honest I've never seen uh anyone do this",
    "start": "838000",
    "end": "844240"
  },
  {
    "text": "sort of thing so I'm you know in every environment where you have mod security deployed to protect a Windows",
    "start": "844240",
    "end": "851199"
  },
  {
    "text": "installation well here's here's an easy way to evade and of course in mod",
    "start": "851199",
    "end": "856240"
  },
  {
    "text": "security the uh solution is slightly different uh and slightly more elegant uh we just use a different",
    "start": "856240",
    "end": "862240"
  },
  {
    "text": "transformation function and we appli the lowercase transformation function and we appli the normalized path win which is a",
    "start": "862240",
    "end": "869279"
  },
  {
    "text": "special variant which will convert back references into forward references and and do a few other things that the",
    "start": "869279",
    "end": "875120"
  },
  {
    "text": "windows Windows installation would but of course we can complicate things further if you recall path",
    "start": "875120",
    "end": "881240"
  },
  {
    "start": "878000",
    "end": "878000"
  },
  {
    "text": "parameters they're not actually path parameters they're path segment parameters and they can apply to any",
    "start": "881240",
    "end": "886560"
  },
  {
    "text": "path segment so we can put it right there in the middle of a path and then we just put some random stuff we break",
    "start": "886560",
    "end": "892320"
  },
  {
    "text": "the path and then we break the detection so I went back to try to fix Apache and",
    "start": "892320",
    "end": "897399"
  },
  {
    "text": "I had to um comp applicate the regular expression further and uh I think I've",
    "start": "897399",
    "end": "904000"
  },
  {
    "text": "succeeded but to be honest it's not something I would be comfortable deploying uh in real life and committing",
    "start": "904000",
    "end": "909440"
  },
  {
    "text": "to that that that works and certainly not something I think people can maintain uh would you try to explain",
    "start": "909440",
    "end": "915320"
  },
  {
    "text": "this to your colleague so in mod security there isn't actually an easy way a mod security is lacking a",
    "start": "915320",
    "end": "920720"
  },
  {
    "text": "transformation function to deal with this issue so in mod security you have to resort to using the same complex",
    "start": "920720",
    "end": "927279"
  },
  {
    "text": "regular expression of course this is a usability problem um",
    "start": "927279",
    "end": "932360"
  },
  {
    "start": "929000",
    "end": "929000"
  },
  {
    "text": "and you know the the chances you know as as the complexity of these virtual patches increase the chances of you're",
    "start": "932360",
    "end": "938399"
  },
  {
    "text": "doing it right is it becomes very very slim and you know we can go further we can complicate situation further on",
    "start": "938399",
    "end": "944519"
  },
  {
    "text": "Windows of course we have short file names which are used for back U backwards compatibility and it's very",
    "start": "944519",
    "end": "950800"
  },
  {
    "text": "unfortunate if you have a script that has an extension of four characters the short name will automatically be",
    "start": "950800",
    "end": "956800"
  },
  {
    "text": "generated and it's very easy to predict so if you reference a file using the",
    "start": "956800",
    "end": "961839"
  },
  {
    "text": "short file name this go go straight through without you uh potentially without the off catching it uh this",
    "start": "961839",
    "end": "969040"
  },
  {
    "text": "particular technique does not work on the I but it does uh on aparty running on Windows if going complicating things",
    "start": "969040",
    "end": "976600"
  },
  {
    "start": "973000",
    "end": "973000"
  },
  {
    "text": "further if you're in particularly unfortunate situation that you have protect on a box running is 5.1 there's",
    "start": "976600",
    "end": "984319"
  },
  {
    "text": "actually a number of different techniques uh which have generally been publicized in the past and uh which make",
    "start": "984319",
    "end": "990759"
  },
  {
    "text": "it impossible uh to very very difficult to deploy a virtual patch or to deploy",
    "start": "990759",
    "end": "996720"
  },
  {
    "text": "any any sort of effective U effective defense now you could argue that is 5.1",
    "start": "996720",
    "end": "1001880"
  },
  {
    "text": "is not something that you're going to find a lot in real life but actually the truth is that waffs are often deployed",
    "start": "1001880",
    "end": "1008560"
  },
  {
    "text": "uh in order to protect very old Legacy systems because no one wants to touch them but they still may they have to",
    "start": "1008560",
    "end": "1014440"
  },
  {
    "text": "remain in use so by the way in my white paper I'm referencing all these so I",
    "start": "1014440",
    "end": "1019720"
  },
  {
    "start": "1016000",
    "end": "1016000"
  },
  {
    "text": "have a number of references so as you're reading the white paper you can actually go and refer and find these techniques and see why they work um so here's what",
    "start": "1019720",
    "end": "1027240"
  },
  {
    "text": "I did I think this is a major sort of deliverable of This research is that um",
    "start": "1027240",
    "end": "1032839"
  },
  {
    "text": "I've uh crafted 42 different tests that have that deal with path handling these",
    "start": "1032839",
    "end": "1039120"
  },
  {
    "text": "are 42 ways in which web servers are flexible and and will take different",
    "start": "1039120",
    "end": "1044400"
  },
  {
    "text": "things and 42 different ways in which you can try to evade web applicational f",
    "start": "1044400",
    "end": "1049480"
  },
  {
    "text": "I've tested several versions of the is web server the Apache web server in tomcat and if you look at this table you",
    "start": "1049480",
    "end": "1055600"
  },
  {
    "text": "see that uh there's a number of tests and chances are in your particular",
    "start": "1055600",
    "end": "1060840"
  },
  {
    "text": "environment you will be able to find in Evas technique that's effective against that web server and then the only",
    "start": "1060840",
    "end": "1066559"
  },
  {
    "text": "question really is well is the web application file good enough uh to uh to",
    "start": "1066559",
    "end": "1071960"
  },
  {
    "text": "deal with with division issues so that was the first out of",
    "start": "1071960",
    "end": "1077200"
  },
  {
    "text": "three parts um I'm going to move to parameter evasion this is the second",
    "start": "1077200",
    "end": "1083080"
  },
  {
    "text": "step so you have your virtual patch let's assume that path patch activation worked and now uh the second the second",
    "start": "1083080",
    "end": "1090880"
  },
  {
    "text": "part of the patch has to to uh be applied which is basically you're taking parameter names and you have to verify",
    "start": "1090880",
    "end": "1096559"
  },
  {
    "text": "what's in them I think in this section is uh is sort of a collection of a",
    "start": "1096559",
    "end": "1101960"
  },
  {
    "text": "number of techniques the first thing you could try is maybe you can just try uh supplying many uh parameter instances or",
    "start": "1101960",
    "end": "1108760"
  },
  {
    "text": "or you can maybe use um case variation you know this is a very old technique I don't",
    "start": "1108760",
    "end": "1115360"
  },
  {
    "text": "think it will be useful in real life except maybe against custom filtering techniques but you know there are more",
    "start": "1115360",
    "end": "1121120"
  },
  {
    "text": "interesting techniques one of my favorite is actually the ability of PHP to take uh a value a cookie value and",
    "start": "1121120",
    "end": "1129000"
  },
  {
    "text": "use it as a parameter and it will appear in the request array um although this",
    "start": "1129000",
    "end": "1134919"
  },
  {
    "text": "this is not this is not supposed to be the enabled by default uh anymore it",
    "start": "1134919",
    "end": "1141240"
  },
  {
    "text": "actually happens in real life and I I I happen to have an installation of PHP on my uh laptop which U missed PHP do the",
    "start": "1141240",
    "end": "1151000"
  },
  {
    "text": "configuration file and as a result uh I was able to inject any sort of attack",
    "start": "1151000",
    "end": "1156679"
  },
  {
    "text": "payload by using cookies and PHP is actually known for these things uh the second thing that's quite useful is HTP",
    "start": "1156679",
    "end": "1163320"
  },
  {
    "text": "parameter pollution this is where the backend modifies uh when you can supply maybe multiple occurrences of the same",
    "start": "1163320",
    "end": "1170240"
  },
  {
    "text": "parameter but then the back end will modify uh the so the Ws the W does not know what is the actual parameter value",
    "start": "1170240",
    "end": "1177679"
  },
  {
    "text": "that's being used and this is quite quite difficult to detect so tricks with PHP parameter names PHP is been known",
    "start": "1177679",
    "end": "1185000"
  },
  {
    "start": "1181000",
    "end": "1181000"
  },
  {
    "text": "for a very long time to play thing play with parameter names so it's actually",
    "start": "1185000",
    "end": "1190120"
  },
  {
    "text": "very simple is as simple as providing a single y space is the beginning of a parameter name and if you put a little",
    "start": "1190120",
    "end": "1196280"
  },
  {
    "text": "plus there PHP will do you a favor into remove all the white space at the beginning if it finds a couple of",
    "start": "1196280",
    "end": "1202159"
  },
  {
    "text": "interesting characters inside the parameter name it will replace them with an underscore which is very convenient",
    "start": "1202159",
    "end": "1207520"
  },
  {
    "text": "because often parameters will have underscores so this is yet another way to perform evasion then you can use inly",
    "start": "1207520",
    "end": "1214039"
  },
  {
    "start": "1211000",
    "end": "1211000"
  },
  {
    "text": "Dural encoding and this is one area where WS have have it particularly tough so if you look at ASP if a ASP uh",
    "start": "1214039",
    "end": "1222440"
  },
  {
    "text": "encounters an invalid zal encoding well it will remove the percentage time so the actual this is quite useful for",
    "start": "1222440",
    "end": "1229200"
  },
  {
    "text": "parameter name evasion but it's actually more useful for Content evasion you can submit any payload to it and you can you",
    "start": "1229200",
    "end": "1237080"
  },
  {
    "text": "can place a number of percentage sign within your attack payload and ISP will be very helpful and remove those for you",
    "start": "1237080",
    "end": "1244000"
  },
  {
    "text": "on the other hand PHP will leave the percentage sign and then also in the third case we have some application that",
    "start": "1244000",
    "end": "1250559"
  },
  {
    "text": "convert invalid Ural encodings no matter even and and just uh because they they",
    "start": "1250559",
    "end": "1257400"
  },
  {
    "text": "rotate and they just rewind you can find unusual combination of your encodings",
    "start": "1257400",
    "end": "1262919"
  },
  {
    "text": "that will resolve to to to to correct character and actually that you can use that to craft a pale that actually works",
    "start": "1262919",
    "end": "1270440"
  },
  {
    "start": "1270000",
    "end": "1270000"
  },
  {
    "text": "so this is something that ws cannot really easily deal with because the number of f false positives they would",
    "start": "1270440",
    "end": "1277080"
  },
  {
    "text": "create a really really big but you know uh I think the biggest problem with um",
    "start": "1277080",
    "end": "1282760"
  },
  {
    "text": "parameter name evasion is in the case where you submit parameters in the request body you know if your parameters",
    "start": "1282760",
    "end": "1289840"
  },
  {
    "text": "in the query string that's sort of easy WS know where the query string is and they the only thing they have to deal",
    "start": "1289840",
    "end": "1295279"
  },
  {
    "text": "with is the eural en coding if you have parameters in the request body they first have to detect uh the the encoding",
    "start": "1295279",
    "end": "1302600"
  },
  {
    "text": "and they have to you apply the same uh the passing to the request payload as",
    "start": "1302600",
    "end": "1308400"
  },
  {
    "text": "the back backend application would so what what happens in the case we have a backend application that has uh a hard",
    "start": "1308400",
    "end": "1314919"
  },
  {
    "text": "hardcoded processing usually it would be eural encoding uh format first you can",
    "start": "1314919",
    "end": "1320080"
  },
  {
    "text": "omit the content type header Al together and then you can place an arbitrary value in it and and many of these",
    "start": "1320080",
    "end": "1326360"
  },
  {
    "text": "products would just ignore for example mod security is known to just ignore any",
    "start": "1326360",
    "end": "1332000"
  },
  {
    "text": "request bodies that whose M types it it cannot recognize even if you enforce and",
    "start": "1332000",
    "end": "1337880"
  },
  {
    "text": "if you require content type to be present well and yet if you have an application uh that uses the hard codes",
    "start": "1337880",
    "end": "1344960"
  },
  {
    "text": "codes EUR encoded parcing you can just send multiform data this is something W",
    "start": "1344960",
    "end": "1350159"
  },
  {
    "text": "will understand but they will not know that what you're actually supplying is a euro EUR encoded uh format which will be",
    "start": "1350159",
    "end": "1357640"
  },
  {
    "text": "recognized by the uh by the backend application and then also you have uh uh",
    "start": "1357640",
    "end": "1363840"
  },
  {
    "text": "many other issues with libraries that are very locks in how they detect M types and this is another problem I",
    "start": "1363840",
    "end": "1369919"
  },
  {
    "text": "discovered I was researching Apache Commons file upload which is a very popular um library for parsing uploads",
    "start": "1369919",
    "end": "1376880"
  },
  {
    "text": "and you could say this the def facto in in Javas space and with service Ser",
    "start": "1376880",
    "end": "1382480"
  },
  {
    "text": "specification three uh because file passing is U file uploads are included",
    "start": "1382480",
    "end": "1387840"
  },
  {
    "text": "in the specification Tomcat now now actually includes this library and uses it for passing well I've discovered that",
    "start": "1387840",
    "end": "1395559"
  },
  {
    "text": "uh the file upload Library will actually uh accept this multiart form data anything that begins with multipart and",
    "start": "1395559",
    "end": "1402360"
  },
  {
    "text": "then a forward slash so what what this means that say uh you can perform a mod",
    "start": "1402360",
    "end": "1407840"
  },
  {
    "text": "security but pass uh simply by sending a multiart SL whatever is is the m type so",
    "start": "1407840",
    "end": "1413960"
  },
  {
    "start": "1409000",
    "end": "1409000"
  },
  {
    "text": "what will happen is that uh the the library will recognize this is",
    "start": "1413960",
    "end": "1419039"
  },
  {
    "text": "multiplatform data and pass it and then most Security will see a m type it doesn't understand and then it will it",
    "start": "1419039",
    "end": "1425320"
  },
  {
    "text": "will ignore it so this is again a difficult area because if mod security",
    "start": "1425320",
    "end": "1430559"
  },
  {
    "text": "for example shipped with restrictions on M types that would create all sorts of POS false positives and create us",
    "start": "1430559",
    "end": "1438440"
  },
  {
    "text": "ibility issues for people deploying it and then would create a bad Vibe for the user so I think more security what we",
    "start": "1438440",
    "end": "1444720"
  },
  {
    "text": "have here is sort of errors on the usability side uh of course there are other",
    "start": "1444720",
    "end": "1450799"
  },
  {
    "text": "approaches here and the approaches commonly used is that you can use Json",
    "start": "1450799",
    "end": "1456039"
  },
  {
    "text": "uh file formats which not many web application fils know and then my colleagues have a talk tomorrow about",
    "start": "1456039",
    "end": "1461799"
  },
  {
    "text": "websockets and you can you can use websockets which even fewer WS understand to in order to",
    "start": "1461799",
    "end": "1469039"
  },
  {
    "text": "um uh submit these payloads and make them work without the we application",
    "start": "1469039",
    "end": "1474919"
  },
  {
    "text": "file was detecting them so this is my second uh part I want",
    "start": "1474919",
    "end": "1480360"
  },
  {
    "text": "to move to the four to the third part um which is sort of the part that I'm",
    "start": "1480360",
    "end": "1486200"
  },
  {
    "text": "finding uh most interesting and very challenging uh it's the part that I've",
    "start": "1486200",
    "end": "1491880"
  },
  {
    "text": "spent long time working on while I was developing mod security and uh you know",
    "start": "1491880",
    "end": "1497159"
  },
  {
    "text": "back at the day I did have enough time to publicize uh these things and um the",
    "start": "1497159",
    "end": "1502520"
  },
  {
    "text": "reason why we came back to actually research uh uh evasion issues is that at kis I'm working on a new open source web",
    "start": "1502520",
    "end": "1509480"
  },
  {
    "text": "application file is called IRB so normally we we started to develop it and we want to make it very good and we've",
    "start": "1509480",
    "end": "1516279"
  },
  {
    "text": "realized that no one has actually covered these issues and there there isn't a comprehensive coverage so we are",
    "start": "1516279",
    "end": "1521440"
  },
  {
    "text": "doing it because we need it and we're also sharing our research uh with everyone else so that uh uh others can",
    "start": "1521440",
    "end": "1528399"
  },
  {
    "text": "other WS can be improved so here's what a multiart form",
    "start": "1528399",
    "end": "1535120"
  },
  {
    "start": "1530000",
    "end": "1530000"
  },
  {
    "text": "data uh encoding looks like so unlike the eural encoded format we have a",
    "start": "1535120",
    "end": "1540720"
  },
  {
    "text": "really complex format and it to also the additional problem is not very well",
    "start": "1540720",
    "end": "1546320"
  },
  {
    "text": "documented actually if you look at the spec for this this um for multiplatform data it refers to a couple of other",
    "start": "1546320",
    "end": "1553000"
  },
  {
    "text": "rfc's and which are a mess this mod the format is modeled on uh on the mime",
    "start": "1553000",
    "end": "1559320"
  },
  {
    "text": "specification so in reality what we have the standard is whatever works in real",
    "start": "1559320",
    "end": "1565159"
  },
  {
    "text": "life in order to successfully process a multiplatform data payload a web application file will has to do at least",
    "start": "1565159",
    "end": "1571600"
  },
  {
    "text": "five things and there's more it has to First correctly identify the M type",
    "start": "1571600",
    "end": "1576919"
  },
  {
    "text": "multiplatform data and as we've seen that doesn't always work out then they have to extract the boundary and then",
    "start": "1576919",
    "end": "1583520"
  },
  {
    "text": "they can use the boundary to process the request body and by using the boundary they will extract individual Parts each",
    "start": "1583520",
    "end": "1590840"
  },
  {
    "text": "individual part corresponds to a parameter or a file that's being uploaded and then a part consists of uh",
    "start": "1590840",
    "end": "1598120"
  },
  {
    "text": "uh uh headers which actually quite complex they model HTTP headers they you",
    "start": "1598120",
    "end": "1604159"
  },
  {
    "text": "can have anything there you can even have a header folding and then after the headers there's actually actually a part",
    "start": "1604159",
    "end": "1610919"
  },
  {
    "text": "U part value you can see the only difference between a parameter uh in in",
    "start": "1610919",
    "end": "1616000"
  },
  {
    "text": "my example this paret parameter called name and a file is the file will have",
    "start": "1616000",
    "end": "1622480"
  },
  {
    "text": "additional parameter on the content disposition header which is file name so",
    "start": "1622480",
    "end": "1628440"
  },
  {
    "text": "it's actually a problem that so if you if we look back at apach Commons file",
    "start": "1628440",
    "end": "1634000"
  },
  {
    "text": "upload let's see how they're detecting uh multiple form data uh as as discussed",
    "start": "1634000",
    "end": "1639919"
  },
  {
    "text": "earlier they just look for anything that begins with multip multipot Slash so",
    "start": "1639919",
    "end": "1645520"
  },
  {
    "text": "this makes it very easy to evade and the thing is uh mod Security even though mod security itself doesn't uh enforce and",
    "start": "1645520",
    "end": "1654000"
  },
  {
    "start": "1648000",
    "end": "1648000"
  },
  {
    "text": "doesn't have any restrictions on mind types mod security core rule set which is a sort of official distribution of",
    "start": "1654000",
    "end": "1659840"
  },
  {
    "text": "rules for mod security H mod security core rule set does however in in researching The implementation of the",
    "start": "1659840",
    "end": "1666240"
  },
  {
    "text": "Restriction I found it ironically the restrictions themselves are lacks and that if you supply a multiart",
    "start": "1666240",
    "end": "1674840"
  },
  {
    "text": "forward forward slash mind type that will satisfy the core rule set that will",
    "start": "1674840",
    "end": "1681120"
  },
  {
    "text": "satisfy the common file upload Library uh and they will pass it unfortunately",
    "start": "1681120",
    "end": "1687039"
  },
  {
    "text": "mod security itself will not see this is a valid multiple from data and again evasion evasion will",
    "start": "1687039",
    "end": "1693440"
  },
  {
    "text": "work so we of course we have a number of these issues",
    "start": "1693440",
    "end": "1698480"
  },
  {
    "start": "1697000",
    "end": "1697000"
  },
  {
    "text": "um multiple activation is actually is quite complex and there isn't enough time this talk to cover all individual",
    "start": "1698480",
    "end": "1707159"
  },
  {
    "text": "uh cases I have about 37 cases I'm releasing in on GitHub so what I'm going",
    "start": "1707159",
    "end": "1712760"
  },
  {
    "text": "to do instead I'm going to cover types and blocks uh of of evasion cases and",
    "start": "1712760",
    "end": "1719200"
  },
  {
    "text": "this first example is uh when you're trying to fold the web application F into not seeing the the M type and you",
    "start": "1719200",
    "end": "1726559"
  },
  {
    "text": "can see these variations you can use all the usual tricks you can use case variation you can try to break uh the",
    "start": "1726559",
    "end": "1734240"
  },
  {
    "text": "the content type request header in in various ways so so that it breaks when w",
    "start": "1734240",
    "end": "1739919"
  },
  {
    "text": "attempts to pass it but it it works when the backend uh tries to pass it so here",
    "start": "1739919",
    "end": "1746360"
  },
  {
    "text": "then the last two examples here are what what worked with the m security core rule set and what worked with the apart",
    "start": "1746360",
    "end": "1753320"
  },
  {
    "text": "with m security and of common file upload a very enlightening enlightening",
    "start": "1753320",
    "end": "1759919"
  },
  {
    "start": "1758000",
    "end": "1758000"
  },
  {
    "text": "is that uh we can look at the PHP source code and this is very representative of how libraries handle multiplatform data",
    "start": "1759919",
    "end": "1768279"
  },
  {
    "text": "and this is a an abbreviated piece of code uh that uh uh shows how PHP looks",
    "start": "1768279",
    "end": "1775080"
  },
  {
    "text": "for a boundary having knowing the correct boundary is very important if you have the web application file c one",
    "start": "1775080",
    "end": "1781919"
  },
  {
    "text": "boundary and phpc another what you're going to get is that the Waf is going to",
    "start": "1781919",
    "end": "1787399"
  },
  {
    "text": "see one set of parameters and the PHP is going to see another set of parameters and of of course evasion works and the",
    "start": "1787399",
    "end": "1793159"
  },
  {
    "text": "first thing that becomes apparent when you read the source code actually PHP",
    "start": "1793159",
    "end": "1798240"
  },
  {
    "text": "will not attempt to pass the content type header properly it will just use crude uh string matching and it will",
    "start": "1798240",
    "end": "1805279"
  },
  {
    "text": "look for for the word boundary anywhere in the cont type header and by itself",
    "start": "1805279",
    "end": "1811240"
  },
  {
    "text": "this is very prone to evasion because you know you can have a couple of these and then what's going to then you don't",
    "start": "1811240",
    "end": "1817120"
  },
  {
    "text": "know exactly what's going to happen of course PHP will try with the low lowercase variet as well if you cannot",
    "start": "1817120",
    "end": "1822799"
  },
  {
    "text": "find it on the first try and then something else interesting happens after it finds the word bound",
    "start": "1822799",
    "end": "1828600"
  },
  {
    "text": "is going to look for the equal sign but not immediately following the word but anywhere in the string after the word so",
    "start": "1828600",
    "end": "1835720"
  },
  {
    "text": "actually PHP will match on Boundary equals but it will match on Boundary two boundary three equals and you can you",
    "start": "1835720",
    "end": "1843159"
  },
  {
    "text": "can put any sort of uh other stuff there and you can use all this stuff to",
    "start": "1843159",
    "end": "1848440"
  },
  {
    "start": "1847000",
    "end": "1847000"
  },
  {
    "text": "confuse confuse the web application F and again here we have examples of various things that uh generally",
    "start": "1848440",
    "end": "1855799"
  },
  {
    "text": "speaking work or can work depending the product that you're testing and all these",
    "start": "1855799",
    "end": "1860960"
  },
  {
    "text": "tricks um they sort of the tri this the basic principle is the same here you",
    "start": "1860960",
    "end": "1867760"
  },
  {
    "text": "supply two boundary values and you have one boundary value for PHP and then you",
    "start": "1867760",
    "end": "1872919"
  },
  {
    "text": "have the other boundary value for the Waf and depending on exactly how WAFF will handle so if you encounter a Waf",
    "start": "1872919",
    "end": "1879320"
  },
  {
    "text": "that is not plain rejecting any content type string that contains more than one boundary chances are it will be",
    "start": "1879320",
    "end": "1885960"
  },
  {
    "text": "vulnerable because then you only have to find and if it will recognize the first or the second boundary that you that you",
    "start": "1885960",
    "end": "1893519"
  },
  {
    "text": "plant and then you just have to work out how to to make PHP happy and and then you're done with with your evasion so",
    "start": "1893519",
    "end": "1900720"
  },
  {
    "text": "multiart evasion is not something that's that's been discussed as I mentioned earlier I think the only instances that",
    "start": "1900720",
    "end": "1906360"
  },
  {
    "text": "we have of someone looking at multile evasion is Stefan Esser in his 2009 talk",
    "start": "1906360",
    "end": "1913080"
  },
  {
    "text": "and I think he highlighted three issues so this the last issue there this is something that was published in 2009 and",
    "start": "1913080",
    "end": "1920919"
  },
  {
    "text": "this exploits the fact uh that uh you know web application files try to do",
    "start": "1920919",
    "end": "1927679"
  },
  {
    "text": "things properly and that's a big Pitfall uh that's what I tried with both security that was my first attempt I was",
    "start": "1927679",
    "end": "1934000"
  },
  {
    "text": "really for example really proud when I implemented my first cookie parser and",
    "start": "1934000",
    "end": "1939720"
  },
  {
    "text": "because it was just following the specification and then then as it turned out if you follow the the the",
    "start": "1939720",
    "end": "1945519"
  },
  {
    "text": "specification by the word it's actually quite easy to evade you because in real life no one no one really does that so",
    "start": "1945519",
    "end": "1951600"
  },
  {
    "text": "here we have this the the reason the last example worked is because that particular F5s web application file",
    "start": "1951600",
    "end": "1958799"
  },
  {
    "text": "would stop uh at uh uh would um recognize the single quote as a boundary",
    "start": "1958799",
    "end": "1965360"
  },
  {
    "text": "termination character and it will see just four zeros as the boundary and PHP will see the whole",
    "start": "1965360",
    "end": "1972159"
  },
  {
    "text": "thing uh the second thing and now we're progressing down the uh down the the list uh um is part evasion this is",
    "start": "1972159",
    "end": "1979720"
  },
  {
    "text": "something PHP used to do um in the multiat form data you're supposed to IND",
    "start": "1979720",
    "end": "1985080"
  },
  {
    "text": "you to indicate uh your last part and then processing should stop after the",
    "start": "1985080",
    "end": "1991480"
  },
  {
    "text": "last part well as in turn out PHP would continue to process them so if you implement the web application file while",
    "start": "1991480",
    "end": "1996840"
  },
  {
    "text": "it does things properly then you you have yourself an evasion uh parameter name evasion is",
    "start": "1996840",
    "end": "2003880"
  },
  {
    "start": "2001000",
    "end": "2001000"
  },
  {
    "text": "also very interesting and this is sort of the same trick um you have in the",
    "start": "2003880",
    "end": "2009600"
  },
  {
    "text": "content disposition header you can supply multiple name uh parameters and",
    "start": "2009600",
    "end": "2016399"
  },
  {
    "text": "uh most passing implementations will actually happily process them and",
    "start": "2016399",
    "end": "2021600"
  },
  {
    "text": "sometimes these implementations will take the first one that you plant and sometimes they will take the second I have two examples here so in order to",
    "start": "2021600",
    "end": "2028279"
  },
  {
    "text": "bypass a we application fire firew what you do you first send uh a Content",
    "start": "2028279",
    "end": "2033519"
  },
  {
    "text": "disposition header with two names and then you look to see which of these two names the wa will use and then once you",
    "start": "2033519",
    "end": "2040399"
  },
  {
    "text": "find out find out if it's using the first or the second variant of course you can find it is blocking which is the",
    "start": "2040399",
    "end": "2045840"
  },
  {
    "text": "ideal situation then you just craft your uh payload to avoid detection as to",
    "start": "2045840",
    "end": "2052040"
  },
  {
    "text": "again submited use a different a second value for PHP to consume so using the",
    "start": "2052040",
    "end": "2057720"
  },
  {
    "text": "two uh examples that I have on the top there um this this is how PHP would see",
    "start": "2057720",
    "end": "2063599"
  },
  {
    "text": "it in the first case it will see the second name and in the second case it will see the first first time so again",
    "start": "2063599",
    "end": "2068638"
  },
  {
    "text": "this is something that's very easy most of these attacks are actually are actually trivial to perform um you know",
    "start": "2068639",
    "end": "2075079"
  },
  {
    "text": "Finding exactly which pay load Works can be mind dumbing because you're dealing with just character variations and",
    "start": "2075079",
    "end": "2081118"
  },
  {
    "text": "there's there's a ton of them uh but generally speaking if you have the patience to sit out and go to the whole",
    "start": "2081119",
    "end": "2087398"
  },
  {
    "text": "list uh you know in many cases the the evation works and the final um uh type parameter",
    "start": "2087399",
    "end": "2096679"
  },
  {
    "text": "type evasion that I have is um multi evasion that they have is parameter type",
    "start": "2096679",
    "end": "2101920"
  },
  {
    "text": "evasion this exploits the fact that many web application files actually treat files differently in most Security in",
    "start": "2101920",
    "end": "2109400"
  },
  {
    "text": "particular if you're up uploading a file there's no inspection done on the contents through the file which is sort",
    "start": "2109400",
    "end": "2115000"
  },
  {
    "text": "of tricky um I think if there's one thing that most security needs to do it needs to start inspecting file contents",
    "start": "2115000",
    "end": "2121680"
  },
  {
    "text": "and it also needs to start inspecting the contents of request bodies that it doesn't recognize well so this would",
    "start": "2121680",
    "end": "2127960"
  },
  {
    "text": "sort of improve his chances of finding uh fing attack payloads so M uh Stephan",
    "start": "2127960",
    "end": "2133760"
  },
  {
    "text": "actually reported a problem in this area back in 2009 this is this is after I left um the m security project so I",
    "start": "2133760",
    "end": "2141280"
  },
  {
    "text": "wasn't actually involved uh in this area and didn't pay much attention at the time and I rediscovered this problem in",
    "start": "2141280",
    "end": "2148119"
  },
  {
    "text": "my own research and reading of the SCE code and what I actually discovered is that so here's the the original problem",
    "start": "2148119",
    "end": "2155520"
  },
  {
    "text": "what was thought at the time is that um PHP actually does something very unusual",
    "start": "2155520",
    "end": "2161119"
  },
  {
    "text": "with in the way that it passes multiplatform data it will use single it will allow single quotes for quoting and",
    "start": "2161119",
    "end": "2167200"
  },
  {
    "text": "because PHP knows this and uh WS typically will not you can use you can",
    "start": "2167200",
    "end": "2172920"
  },
  {
    "text": "craft a single string of data to uh mean one thing for thewa and of course the",
    "start": "2172920",
    "end": "2178720"
  },
  {
    "text": "other thing for PHP and this is why the payload Works uh if you look at it um in",
    "start": "2178720",
    "end": "2185599"
  },
  {
    "text": "the first case you see you can see what mod security sees and mod Security will see uh one name parameter who which the",
    "start": "2185599",
    "end": "2194319"
  },
  {
    "text": "contents will be just a single quote and then the fing parameter which has some rubbish in the in in the payload and",
    "start": "2194319",
    "end": "2201240"
  },
  {
    "text": "then PHP because it uses single quotes for quoting it will see two name parameters and because PHP uses always",
    "start": "2201240",
    "end": "2208359"
  },
  {
    "text": "the last parameter this that you supply on the content disposition line then it",
    "start": "2208359",
    "end": "2213560"
  },
  {
    "text": "will use the second one and PHP just tws this particular parameter as as a parameter not not as a file and then the",
    "start": "2213560",
    "end": "2221359"
  },
  {
    "text": "devation works so as I was reading uh the source code of PHP I realized that",
    "start": "2221359",
    "end": "2226640"
  },
  {
    "text": "the flaw has had been misunderstood the problem is not actually that PHP used um",
    "start": "2226640",
    "end": "2233240"
  },
  {
    "text": "allowed single quot for quoting is actually it also decoupled the parsing of key value pairs from the actual",
    "start": "2233240",
    "end": "2239839"
  },
  {
    "text": "quoting mechanism so the quote can appear anywhere not just as the first character in a key value uh um in in a",
    "start": "2239839",
    "end": "2248200"
  },
  {
    "text": "key value pair so I was actually able to add a single part Single Character to",
    "start": "2248200",
    "end": "2254640"
  },
  {
    "text": "the original uh payload and again this this would completely bypass mod",
    "start": "2254640",
    "end": "2259720"
  },
  {
    "text": "security because mod mod security would treat the file uh this this particular",
    "start": "2259720",
    "end": "2265119"
  },
  {
    "text": "part is a file and not inspected and I can tell you that I I've I've had someone test uh at least another",
    "start": "2265119",
    "end": "2271599"
  },
  {
    "text": "commercial web application file is vulnerable to the to the same problem so in reality I had I rediscovered this",
    "start": "2271599",
    "end": "2276960"
  },
  {
    "text": "problem and then only uh following up with the research I realized that this is exactly the same almost exactly the",
    "start": "2276960",
    "end": "2282839"
  },
  {
    "text": "same payload uh as as Stefan originally discovered and this is this has been",
    "start": "2282839",
    "end": "2288160"
  },
  {
    "text": "reported to mod security about a month ago and it's been fixed reported to have been fixed in",
    "start": "2288160",
    "end": "2293560"
  },
  {
    "text": "2.6.6 but generally speaking it's a very rough area multiplatform data is a very rough area for U for web application",
    "start": "2293560",
    "end": "2300800"
  },
  {
    "text": "files it's simply not possible to anticipate every possible flaw uh in the",
    "start": "2300800",
    "end": "2306119"
  },
  {
    "text": "in the backend implementation so the only solution what you have to do in the wa is you have to have you have to",
    "start": "2306119",
    "end": "2313079"
  },
  {
    "text": "double check triple check and you have all these weird and paranoid things that you doing you check in order to ensure",
    "start": "2313079",
    "end": "2319440"
  },
  {
    "text": "that you're you're not uh not being bypassed so the this is a summary of the",
    "start": "2319440",
    "end": "2327000"
  },
  {
    "start": "2324000",
    "end": "2324000"
  },
  {
    "text": "multiart evasion um as I said previously it's a very vague area it's very prone",
    "start": "2327000",
    "end": "2332359"
  },
  {
    "text": "to evasion I personally I wouldn't be surprised if there are more issues here and I think certainly that I my 37 cases",
    "start": "2332359",
    "end": "2338880"
  },
  {
    "text": "I'm sure that they could be improved and I actually have a number of other items on my too list where I want to revisit",
    "start": "2338880",
    "end": "2345240"
  },
  {
    "text": "this particular area you can um you can download this test from the repository I've only tested mod Security in Apache",
    "start": "2345240",
    "end": "2351960"
  },
  {
    "text": "because this is what I had access to I'd be really interested to see how other web application files do anyhow uh",
    "start": "2351960",
    "end": "2358800"
  },
  {
    "text": "talking about this the the evasion techniques the thing is that if you look back at the history of evasion history",
    "start": "2358800",
    "end": "2366319"
  },
  {
    "text": "of security problems realize that we haven't done a very good job at documenting previous problems so what",
    "start": "2366319",
    "end": "2373040"
  },
  {
    "text": "you're seeing is that every new software is being developed let's say someone",
    "start": "2373040",
    "end": "2378079"
  },
  {
    "text": "decides to write a web server tomorrow well that that person because we're not documenting our history very well that",
    "start": "2378079",
    "end": "2384119"
  },
  {
    "text": "person is going to make all the same mistakes all over again so I I think this this is why I think it's very important so that we uh bring this and",
    "start": "2384119",
    "end": "2391280"
  },
  {
    "text": "this becomes enters the public body of knowledge so that we can bring the bottom uh up",
    "start": "2391280",
    "end": "2398160"
  },
  {
    "text": "um I have so this is all for my talk um I've this talk presents just a part of",
    "start": "2398160",
    "end": "2405040"
  },
  {
    "text": "my work everything that I could fit uh within within the hour um I should have",
    "start": "2405040",
    "end": "2411200"
  },
  {
    "text": "Pro probably presented less stuff and go into more detail and I have a bunch of other noise so what we will do we will",
    "start": "2411200",
    "end": "2417000"
  },
  {
    "text": "continue to research this topic and we will continue to uh to release new information is as as it comes um we have",
    "start": "2417000",
    "end": "2423760"
  },
  {
    "text": "all this stuff on in a GitHub repository we have a Wiki Our intention is not only",
    "start": "2423760",
    "end": "2428800"
  },
  {
    "text": "to focus on the missing bits in particular I find HTTP passing very promising uh character set tissues we",
    "start": "2428800",
    "end": "2435640"
  },
  {
    "text": "found some character set issues that make evasion possible and of course host name evasion which is my favorite which",
    "start": "2435640",
    "end": "2441560"
  },
  {
    "text": "I want to uh revisit um going long term we want to build an evasion catalog",
    "start": "2441560",
    "end": "2448920"
  },
  {
    "text": "basically and expand not only focus not only protocol level evasion but all evasion techniques we're making this",
    "start": "2448920",
    "end": "2455200"
  },
  {
    "text": "Wiki open and we're hoping others others would join you can find the wiki on",
    "start": "2455200",
    "end": "2460280"
  },
  {
    "text": "GitHub and all the material here if you go to github.com rb/ w w research and if you're",
    "start": "2460280",
    "end": "2468160"
  },
  {
    "text": "interested um this is something that you can you can play with and hopefully if you find some interesting stuff report",
    "start": "2468160",
    "end": "2474720"
  },
  {
    "text": "back to the project personally I don't care about which web application firewall is vulnerable to which evasion",
    "start": "2474720",
    "end": "2480839"
  },
  {
    "text": "but I think it's important that we know we do know where these these problems are so what I can do because uh there's",
    "start": "2480839",
    "end": "2488240"
  },
  {
    "text": "still some time left um I'd like",
    "start": "2488240",
    "end": "2492920"
  },
  {
    "text": "to uh share something with you that I found particularly insightful and uh",
    "start": "2493560",
    "end": "2499160"
  },
  {
    "text": "something very that very powerful that resonated resonated with me is uh when I",
    "start": "2499160",
    "end": "2504640"
  },
  {
    "text": "was going to the Donald Kat's um web page um you know he doesn't have an",
    "start": "2504640",
    "end": "2509839"
  },
  {
    "text": "email well he does have an email address but he is not using it and he's finding email to disruptive and he has this",
    "start": "2509839",
    "end": "2516000"
  },
  {
    "text": "quote which basically say says that being on top of things is not what he's interested in I think that his role is",
    "start": "2516000",
    "end": "2523079"
  },
  {
    "text": "to be on the bottle of things and I think in this industry we need to do more we need to be on the bottom of",
    "start": "2523079",
    "end": "2528640"
  },
  {
    "text": "things rather than to try to be on the top of the things because if we don't bring bring the bottom up we're never",
    "start": "2528640",
    "end": "2533720"
  },
  {
    "text": "going to learn and whoever follows is not going to be um uh uh learning",
    "start": "2533720",
    "end": "2539040"
  },
  {
    "text": "anything so I have some more time left to uh give you a quick demo now I",
    "start": "2539040",
    "end": "2546280"
  },
  {
    "text": "promised the demo uh I don't find it particularly interesting so what I have",
    "start": "2546280",
    "end": "2553480"
  },
  {
    "text": "here is I have a web server and I'm going to demo the mod",
    "start": "2553480",
    "end": "2558880"
  },
  {
    "text": "security bypass uh if you have mod security 2.5 5 2.5.5 running and I have",
    "start": "2558880",
    "end": "2566040"
  },
  {
    "text": "a very simple script that PHP script that will simply bounce back whatever parameter is sent to it so you see in",
    "start": "2566040",
    "end": "2572680"
  },
  {
    "text": "this case I've sent the parameter user ID and it's a value from digits from 8",
    "start": "2572680",
    "end": "2578400"
  },
  {
    "text": "one through to eight and what I have is I have a I've configured more security",
    "start": "2578400",
    "end": "2585280"
  },
  {
    "text": "to block any transaction that has the word John in it okay",
    "start": "2585280",
    "end": "2590839"
  },
  {
    "text": "sensitive and what I'm going to do is I have two screens here let me move",
    "start": "2590839",
    "end": "2598440"
  },
  {
    "text": "this so I have I'm going to look at the arror log let's scroll this and here's I",
    "start": "2598440",
    "end": "2606880"
  },
  {
    "text": "have have a normal test so this is an example of multi multiport form",
    "start": "2606880",
    "end": "2613079"
  },
  {
    "text": "data and you can see here no you can't but you will see now we have the name",
    "start": "2613079",
    "end": "2619400"
  },
  {
    "text": "parameter and the name parameter contains John Smith so what I'm going to do I have a very simple utility and this",
    "start": "2619400",
    "end": "2625640"
  },
  {
    "text": "is this is what we're uh uh releasing that I can use to play this",
    "start": "2625640",
    "end": "2631599"
  },
  {
    "text": "payload against now I'm going to I need to resize",
    "start": "2631599",
    "end": "2638440"
  },
  {
    "text": "my window okay so if I send this particular request to the web",
    "start": "2638440",
    "end": "2644720"
  },
  {
    "text": "application file you see that it responds with 500 internal server error which is good because that means that",
    "start": "2644720",
    "end": "2650079"
  },
  {
    "text": "are rule matched and you can say the script itself detected this transaction is blocked and then if you look at the",
    "start": "2650079",
    "end": "2657040"
  },
  {
    "text": "result you see that taxes has been denied because um we found the word John",
    "start": "2657040",
    "end": "2663720"
  },
  {
    "text": "in the payload so okay so that's we know that works so so let's look at the",
    "start": "2663720",
    "end": "2669160"
  },
  {
    "text": "alternative let's look at the actual test from the payload and this test uses",
    "start": "2669160",
    "end": "2675079"
  },
  {
    "text": "the trick which I showed to you earlier supplies all of this um as the name",
    "start": "2675079",
    "end": "2681079"
  },
  {
    "text": "field and what I'm going to do I'm going to",
    "start": "2681079",
    "end": "2686880"
  },
  {
    "text": "plate to the web application file and what you see there that um nothing",
    "start": "2686880",
    "end": "2694040"
  },
  {
    "text": "happened basically application responded with a 200 response and you can see the PHP B PHP boun bouncing back the the the",
    "start": "2694040",
    "end": "2701720"
  },
  {
    "text": "payload you can see that PHP here sees the name John Smith but obviously if you",
    "start": "2701720",
    "end": "2709160"
  },
  {
    "text": "look at the error log there's nothing in the mode security error log what we can do is we can use we can look at the",
    "start": "2709160",
    "end": "2716240"
  },
  {
    "text": "debug log because I've enabled the debug log which is",
    "start": "2716240",
    "end": "2722559"
  },
  {
    "text": "um which is very verbos this is not something that you would do in production and here's mod security",
    "start": "2722559",
    "end": "2728319"
  },
  {
    "text": "trying to parse oops to parse the payload it sees the entire payload but",
    "start": "2728319",
    "end": "2734559"
  },
  {
    "text": "it extracts the name as X single quote and then extracts the final name as",
    "start": "2734559",
    "end": "2741520"
  },
  {
    "text": "something uh it doesn't look right I should mention that the m security core rule set actually had a rule uh as as a",
    "start": "2741520",
    "end": "2748480"
  },
  {
    "text": "good example of Defense in that m security core cor set had a rule to catch this particular thing and it did",
    "start": "2748480",
    "end": "2754839"
  },
  {
    "text": "the only problem is it would catch it if you had most the cor R set deployed in U",
    "start": "2754839",
    "end": "2760040"
  },
  {
    "text": "in blocking mode but if you had it deployed in anomaly mode the anomaly assigned anomally value assigned to this",
    "start": "2760040",
    "end": "2767119"
  },
  {
    "text": "particular Discovery was too low and it was still possible to bypass uh both m",
    "start": "2767119",
    "end": "2772400"
  },
  {
    "text": "security and the mod security uh core rule set um so this is it I think I think I'm",
    "start": "2772400",
    "end": "2778920"
  },
  {
    "text": "I'm done with my talk uh thank you very much if you have any questions we have a mic over there just behind the camera uh",
    "start": "2778920",
    "end": "2786480"
  },
  {
    "text": "uh if you could please just uh ask your questions from there thank you very much",
    "start": "2786480",
    "end": "2792880"
  },
  {
    "text": "[Applause]",
    "start": "2794620",
    "end": "2798820"
  }
]