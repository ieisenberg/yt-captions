[
  {
    "text": "hello everyone I'm Otto investel from data Loom and I'm constantina lead data scientist",
    "start": "2340",
    "end": "10200"
  },
  {
    "text": "at data as well and today we are going to talk about bad Bots and how we can",
    "start": "10200",
    "end": "15299"
  },
  {
    "text": "detect uh distributed attacks using streaming based outlayer detection and a",
    "start": "15299",
    "end": "21000"
  },
  {
    "text": "machine learning approach called slice line okay but before that let me give you",
    "start": "21000",
    "end": "26640"
  },
  {
    "text": "some context you may not all be familiar with bad Bots but I'm pretty sure that you are all familiar with what you see",
    "start": "26640",
    "end": "33540"
  },
  {
    "text": "on the screen so these are called captcha and I'm probably sure that you see them every time you're browsing the",
    "start": "33540",
    "end": "40320"
  },
  {
    "text": "web to prove that you're human websites and mobile applications are asking you to select the crosswalks the",
    "start": "40320",
    "end": "46860"
  },
  {
    "text": "bicycles the traffic lights and it's become so popular and so horrible at the",
    "start": "46860",
    "end": "52079"
  },
  {
    "text": "same time that you can find a lot of mems about it everywhere you know everyone is really stressed like do I",
    "start": "52079",
    "end": "58140"
  },
  {
    "text": "need to select the square that includes one millimeters of the fire hydrants I",
    "start": "58140",
    "end": "63239"
  },
  {
    "text": "don't know do I need to select the square that contains one millimeter of traffic lights",
    "start": "63239",
    "end": "69180"
  },
  {
    "text": "I don't know who the butt do that would the human do that what will make me more human okay",
    "start": "69180",
    "end": "75240"
  },
  {
    "text": "and all of this because of bad Bots but can we detect bad Bots without",
    "start": "75240",
    "end": "82320"
  },
  {
    "text": "captcha because I think we can all agree that this is a really bad experience for",
    "start": "82320",
    "end": "87540"
  },
  {
    "text": "human users and at the same time it's not really secure anymore because of techniques like capture files or image",
    "start": "87540",
    "end": "94799"
  },
  {
    "text": "and audio recognition techniques before we explain our approach to the",
    "start": "94799",
    "end": "101159"
  },
  {
    "text": "tech distributed by the attacks I will give you some context about bad Bots oh they can be created the type of",
    "start": "101159",
    "end": "107880"
  },
  {
    "text": "attacks that they conduct and the kind of signals that we can use to detect them",
    "start": "107880",
    "end": "113340"
  },
  {
    "text": "first what's about it's a program to automate actions it",
    "start": "113340",
    "end": "119520"
  },
  {
    "text": "can be used for positive purposes like automating automating website testing",
    "start": "119520",
    "end": "124880"
  },
  {
    "text": "indexing the web like googlebots but it can also be used for nefarious",
    "start": "124880",
    "end": "130560"
  },
  {
    "text": "purposes to test batch of Sterling credentials generate fake video views and retweets",
    "start": "130560",
    "end": "137040"
  },
  {
    "text": "for example what can boots be used for they can be",
    "start": "137040",
    "end": "143760"
  },
  {
    "text": "used to conduct credential Staffing attacks for example to steal batch of",
    "start": "143760",
    "end": "148800"
  },
  {
    "text": "user accounts they can be used to do a dealer's attacks to make a website or a mobile",
    "start": "148800",
    "end": "155280"
  },
  {
    "text": "app slow or unavailable they can be used to test stolen credit",
    "start": "155280",
    "end": "160800"
  },
  {
    "text": "cards for example to verify if the credit card are still valid and sell them for a higher price",
    "start": "160800",
    "end": "166560"
  },
  {
    "text": "how to manipulate word increased number of views retweets Etc",
    "start": "166560",
    "end": "172819"
  },
  {
    "text": "how can I create a Bots different techniques you can use Simple HTTP clients so pick",
    "start": "174660",
    "end": "182519"
  },
  {
    "text": "your favorite language node.js you can use axios Python you can use AO HTTP or",
    "start": "182519",
    "end": "188879"
  },
  {
    "text": "request Library the good thing with this kind of Bots let's say is that they use not a",
    "start": "188879",
    "end": "196440"
  },
  {
    "text": "lot of CPU and RAM resources but they don't execute JavaScript and also they may have inconsistent HTTP",
    "start": "196440",
    "end": "204780"
  },
  {
    "text": "errors inconsistent sales fingerprints you may use more Advanced Technologies",
    "start": "204780",
    "end": "211920"
  },
  {
    "text": "like automating browsers so you can automate Chrome you can automate headless Chrome using puppet here using",
    "start": "211920",
    "end": "219000"
  },
  {
    "text": "selenium using playwright so a lot of libraries that make it really easy to instrument a browser on our day",
    "start": "219000",
    "end": "226019"
  },
  {
    "text": "these Bots require more computational resources because they create a real",
    "start": "226019",
    "end": "231060"
  },
  {
    "text": "browser but from an attacker point of view it enables you to execute",
    "start": "231060",
    "end": "236280"
  },
  {
    "text": "JavaScript natively to support all the native browser apis",
    "start": "236280",
    "end": "242580"
  },
  {
    "text": "also a benefit from attacker is that the gate consistent https consistent to the",
    "start": "242580",
    "end": "248400"
  },
  {
    "text": "fingerprints but there might still be some inconsistencies that can be used to detect them",
    "start": "248400",
    "end": "255379"
  },
  {
    "text": "how can we detect Bots when it comes to Bud detection there are",
    "start": "255959",
    "end": "262380"
  },
  {
    "text": "a few families of signals that you can leverage using machine learning or using rules",
    "start": "262380",
    "end": "267540"
  },
  {
    "text": "you may want to use signatures or fingerprints this can be fingerprints collected on the server side on the",
    "start": "267540",
    "end": "274320"
  },
  {
    "text": "client side so on the server side it can be any HTTP error any TLS fingerprint any TCP fingerprint",
    "start": "274320",
    "end": "281699"
  },
  {
    "text": "and in the browser it can be any browser fingerprint collected using JavaScript",
    "start": "281699",
    "end": "287940"
  },
  {
    "text": "then you can conduct behavioral analysis using most movements for example or the",
    "start": "287940",
    "end": "293639"
  },
  {
    "text": "way a user is typing on this keyboard but you can also collect behavioral signals on the server side by analyzing",
    "start": "293639",
    "end": "300419"
  },
  {
    "text": "the time series or you know the browsing patterns for example it may not be normal to do a add to card before",
    "start": "300419",
    "end": "306720"
  },
  {
    "text": "viewing a product that's the kind of thing that can be expressed using machine learning or rules",
    "start": "306720",
    "end": "313199"
  },
  {
    "text": "you can also have different kind of repetitions like IP address reputation session reputation or look at the IPL",
    "start": "313199",
    "end": "321240"
  },
  {
    "text": "responsibility that the proxy recently and finally all kind of contextual",
    "start": "321240",
    "end": "326280"
  },
  {
    "text": "information like the country is it consistent with the website targeted with the time of the day",
    "start": "326280",
    "end": "333199"
  },
  {
    "text": "to show you an example I'm going to show it it's really simple it's with selenium it's a originally it",
    "start": "334800",
    "end": "341460"
  },
  {
    "text": "was created to a test website and it's still used it's it's still really popular and selenium and Chrome",
    "start": "341460",
    "end": "349320"
  },
  {
    "text": "when you execute a chrome driver it will one of the side effects it's not really",
    "start": "349320",
    "end": "354900"
  },
  {
    "text": "visible but it will inject it will have a side effect it will inject the",
    "start": "354900",
    "end": "360180"
  },
  {
    "text": "document dot dollar CDC variable in the Dom in the JavaScript context and so",
    "start": "360180",
    "end": "366900"
  },
  {
    "text": "as about detection company what you can do is just look at the presence of these attributes",
    "start": "366900",
    "end": "372060"
  },
  {
    "text": "and if you have this attribute your robots okay as you can imagine attackers will",
    "start": "372060",
    "end": "379199"
  },
  {
    "text": "try to erase you know it from their fingerprint to make it more human",
    "start": "379199",
    "end": "385520"
  },
  {
    "text": "so what are the kind of bypass techniques used by Bots they can forge everything basically you",
    "start": "385940",
    "end": "393120"
  },
  {
    "text": "can't trust anything because it comes from the client side so the https that are sent they can be spoofed the",
    "start": "393120",
    "end": "399240"
  },
  {
    "text": "JavaScript fingerprint can be spoofed everything can be modified for example you can change your TLS",
    "start": "399240",
    "end": "405060"
  },
  {
    "text": "fingerprints using libraries like cycle CSS it's really easy to use you just give a user agent and it will generate a",
    "start": "405060",
    "end": "411600"
  },
  {
    "text": "consistent CLS fingerprint that you should have if you had this user agent",
    "start": "411600",
    "end": "417660"
  },
  {
    "text": "you have a lot of databases or Library also that collect a lot of fingerprints",
    "start": "417660",
    "end": "422819"
  },
  {
    "text": "from real users that you can use to apply on earbuds and so that your birds have consistent configuration consistent",
    "start": "422819",
    "end": "429479"
  },
  {
    "text": "gpus consistent countries time zones Etc and even for the Bots that don't execute",
    "start": "429479",
    "end": "435960"
  },
  {
    "text": "JavaScript it may seem simple to detect but they can forge art Series in your print but they can also Forge the JavaScript",
    "start": "435960",
    "end": "442560"
  },
  {
    "text": "payload used to verify the execution of JavaScript",
    "start": "442560",
    "end": "448099"
  },
  {
    "text": "but will also distribute their attack using proxies it enables them to avoid IP based rate",
    "start": "448800",
    "end": "455460"
  },
  {
    "text": "limiting so for example I'm going to block you if you make more than 10 login attempt per IP but because they use",
    "start": "455460",
    "end": "461759"
  },
  {
    "text": "thousands of proxies so normally standard blocked anymore they can use residential proxies to",
    "start": "461759",
    "end": "469080"
  },
  {
    "text": "avoid rate limiting and avoid reputation-based detection basically",
    "start": "469080",
    "end": "474599"
  },
  {
    "text": "they will use IP addresses that belong to well-known isps like Comcast 88t",
    "start": "474599",
    "end": "480060"
  },
  {
    "text": "Verizon and it will look like normal traffic you you won't find it suspicious because",
    "start": "480060",
    "end": "485940"
  },
  {
    "text": "it's not linked to any data center autonomous system and they can use even better proxies",
    "start": "485940",
    "end": "492419"
  },
  {
    "text": "that are located in the same countries as the website the Target and in this case it will enable attacker to bypass",
    "start": "492419",
    "end": "498300"
  },
  {
    "text": "jobblocking for example and you don't even need to be a really",
    "start": "498300",
    "end": "504000"
  },
  {
    "text": "good developer you don't need to be an expert in a fingerprinting proxy all these kind of things you can just use",
    "start": "504000",
    "end": "510680"
  },
  {
    "text": "generic automation Frameworks for example",
    "start": "510680",
    "end": "515880"
  },
  {
    "text": "if you want to automate Chrome you can use perpet here but it's really easy to detect it so people have developed",
    "start": "515880",
    "end": "521640"
  },
  {
    "text": "Perpetual extra cells which enable you to modify your fingerprints integrate",
    "start": "521640",
    "end": "526800"
  },
  {
    "text": "natively with a capture firms Etc so you just apply you know the changes that they recommend and suddenly you almost",
    "start": "526800",
    "end": "533339"
  },
  {
    "text": "look human and if you don't like Perpetual you can use undetected Chrome driver if you",
    "start": "533339",
    "end": "538920"
  },
  {
    "text": "prefer to stay in the selenium world and it does the same thing it will erase most of the differences that you would",
    "start": "538920",
    "end": "544500"
  },
  {
    "text": "find between a headless automated browser and a real browser",
    "start": "544500",
    "end": "550279"
  },
  {
    "text": "but in addition to generic bad Frameworks there are also you know more specific Frameworks that make it easy to",
    "start": "550380",
    "end": "557279"
  },
  {
    "text": "conduct attacks like credential Staffing for example open bullet 2 is really popular and makes it really",
    "start": "557279",
    "end": "563279"
  },
  {
    "text": "straightforward to conduct a large-scale credential surfing attacks",
    "start": "563279",
    "end": "568440"
  },
  {
    "text": "it comes with all kind of features like a proxy or you know configuration with consistent https",
    "start": "568440",
    "end": "575040"
  },
  {
    "text": "Etc capture Farms so it's really easy to conduct Train control Staffing attacks",
    "start": "575040",
    "end": "581120"
  },
  {
    "text": "okay so in 2023 we see that Bots like they will distribute their attack to",
    "start": "581519",
    "end": "587220"
  },
  {
    "text": "appear more human The Leverage thousands of residential proxies and they have a lot of ways to change",
    "start": "587220",
    "end": "593880"
  },
  {
    "text": "more or less consistently their fingerprints to escape detection how can we block this ever evolving and",
    "start": "593880",
    "end": "601140"
  },
  {
    "text": "distributed Bots without choosing capture and annoying real human users and consultino will explain it",
    "start": "601140",
    "end": "609480"
  },
  {
    "text": "thanks Antoine so before going into the algorithms that",
    "start": "609480",
    "end": "614700"
  },
  {
    "text": "we're using to detect distributed attacks and block them I'm gonna explain to you the use case",
    "start": "614700",
    "end": "619980"
  },
  {
    "text": "and show you how you can conduct the first manual analysis so let's say that",
    "start": "619980",
    "end": "626279"
  },
  {
    "text": "you want to protect a website and you have an analyst looking at an",
    "start": "626279",
    "end": "631500"
  },
  {
    "text": "interactive tool like kibana you're looking for the traffic uh the traffic of the website and you see that there is",
    "start": "631500",
    "end": "638220"
  },
  {
    "text": "a sudden Spike so you suspect that there is there are some balls that are attacking this website and you want to",
    "start": "638220",
    "end": "644459"
  },
  {
    "text": "find out what is the characteristic of the bot traffic so one simple thing that",
    "start": "644459",
    "end": "649620"
  },
  {
    "text": "you can do is take the traffic and split it by different characteristics for",
    "start": "649620",
    "end": "654959"
  },
  {
    "text": "instance here I'm showing that you can split the traffic by the list of headers by the list of user agents automated",
    "start": "654959",
    "end": "662899"
  },
  {
    "text": "autonomous systems and countries and what you most likely see is that there",
    "start": "662899",
    "end": "669120"
  },
  {
    "text": "are some specific values of these characteristics that appear at the time when the attack started",
    "start": "669120",
    "end": "675660"
  },
  {
    "text": "so this will allow you like for instance here we can see that the country that is",
    "start": "675660",
    "end": "681959"
  },
  {
    "text": "a Russian thing and the user agent is the one in the with the purple line so",
    "start": "681959",
    "end": "687540"
  },
  {
    "text": "when you're looking at this traffic with your with your eyes you can derive a",
    "start": "687540",
    "end": "693060"
  },
  {
    "text": "rule and say okay this is the rule that I found if you have a rule engine that",
    "start": "693060",
    "end": "698220"
  },
  {
    "text": "you're using to protect your website you can add it to the rural engine and block this traffic right away",
    "start": "698220",
    "end": "703500"
  },
  {
    "text": "but all of this is manual and you need a lot of a lot of manual work and and",
    "start": "703500",
    "end": "709200"
  },
  {
    "text": "manual investigation to find the rule so what we did is we found a way to automate all",
    "start": "709200",
    "end": "716820"
  },
  {
    "text": "of this so we have two basic steps the first one is to detect automatically the",
    "start": "716820",
    "end": "722160"
  },
  {
    "text": "distributed attacks and the second one is to make an analysis and find the",
    "start": "722160",
    "end": "727440"
  },
  {
    "text": "rules so that we can dynamically generate rules as the attacks come in",
    "start": "727440",
    "end": "733560"
  },
  {
    "text": "so let's start with how do we do we detect detected",
    "start": "733560",
    "end": "738779"
  },
  {
    "text": "um distributed attacks so first of all we have the number of requests over time obviously but on top",
    "start": "738779",
    "end": "745920"
  },
  {
    "text": "of that we compute several aggregations like the number of unique user agents",
    "start": "745920",
    "end": "751980"
  },
  {
    "text": "the number of unique IPS the number of unique sessions and this allows us to",
    "start": "751980",
    "end": "757459"
  },
  {
    "text": "detect distributed attacks because even if there is no spike in the number of",
    "start": "757459",
    "end": "762899"
  },
  {
    "text": "requests we can see that there is a spike for instance in the number of ips or in the number of countries that all",
    "start": "762899",
    "end": "769920"
  },
  {
    "text": "of a sudden come and attack the website so it allows us to detect not only",
    "start": "769920",
    "end": "776040"
  },
  {
    "text": "distributed attacks that have a high number of requests but also low and slow distributed attacks coming from several",
    "start": "776040",
    "end": "783180"
  },
  {
    "text": "IPS for instance so these aggregations will make up time",
    "start": "783180",
    "end": "788519"
  },
  {
    "text": "series one for each aggregation and we apply an anomaly detection on those time",
    "start": "788519",
    "end": "794040"
  },
  {
    "text": "series which is based on the on the z-score so just to give you a an idea of",
    "start": "794040",
    "end": "800279"
  },
  {
    "text": "how it works is you keep a rolling window on your time series on this",
    "start": "800279",
    "end": "805380"
  },
  {
    "text": "window you can compute the mean and the standard deviation of your time series and then for every observation that",
    "start": "805380",
    "end": "812339"
  },
  {
    "text": "comes after the window we can go and check and see and see if this observation is Extreme with respect",
    "start": "812339",
    "end": "819300"
  },
  {
    "text": "to the mean value and the standard deviation in the window this is basically what is anomaly detection",
    "start": "819300",
    "end": "825300"
  },
  {
    "text": "based on the z-score so if you find that this value is Extreme then you understand that an",
    "start": "825300",
    "end": "831480"
  },
  {
    "text": "attack has started and you can push an event to your system and say we have an attack",
    "start": "831480",
    "end": "837839"
  },
  {
    "text": "for this customer if you're protecting several customers and this is the start time of the attack",
    "start": "837839",
    "end": "843360"
  },
  {
    "text": "and this algorithm will be implemented it in the in Flink which is the streaming engine that we're that we're",
    "start": "843360",
    "end": "849480"
  },
  {
    "text": "using so this is an example of Time series",
    "start": "849480",
    "end": "854639"
  },
  {
    "text": "that we have so on the top left you have the number of requests the number of user agents the number of ips on the",
    "start": "854639",
    "end": "862019"
  },
  {
    "text": "bottom the number of countries and you see that sometimes not all of them have a spike at the same time but it's",
    "start": "862019",
    "end": "867720"
  },
  {
    "text": "sufficient to have just one time series with the spike to understand that there is something going on with this in this",
    "start": "867720",
    "end": "874680"
  },
  {
    "text": "customer and then you get your attack start time and this is basically the only input",
    "start": "874680",
    "end": "880920"
  },
  {
    "text": "that the algorithm needs to find rules and be able to block the attack",
    "start": "880920",
    "end": "886260"
  },
  {
    "text": "afterwards so how are we gonna do",
    "start": "886260",
    "end": "891899"
  },
  {
    "text": "um the analysis so now that we have the start time of the attack",
    "start": "891899",
    "end": "897959"
  },
  {
    "text": "we can wait just a little bit so that we can collect two separate data sets we",
    "start": "897959",
    "end": "904500"
  },
  {
    "text": "have the green data set which is the traffic before the attack and which is in majority normal meaning",
    "start": "904500",
    "end": "911339"
  },
  {
    "text": "that it's not coming from Bots it's not suspicious and then we have a native another data",
    "start": "911339",
    "end": "918180"
  },
  {
    "text": "set with the traffic during the attack and this will typically contain a mix of",
    "start": "918180",
    "end": "925139"
  },
  {
    "text": "both and normal data so keep in mind that we have these two",
    "start": "925139",
    "end": "931440"
  },
  {
    "text": "groups of traffic so if we go back to the plots I was showing you before",
    "start": "931440",
    "end": "937620"
  },
  {
    "text": "so we kind of done this analysis manually when we said okay which which",
    "start": "937620",
    "end": "942720"
  },
  {
    "text": "is the value that K that arrived just after the start of the attack but only now we know the exact time when it",
    "start": "942720",
    "end": "949740"
  },
  {
    "text": "started because we applied the normal detection so that's done so now we have to find a",
    "start": "949740",
    "end": "956220"
  },
  {
    "text": "way to generate rules in an automatic way and for this we're going to use an",
    "start": "956220",
    "end": "962940"
  },
  {
    "text": "algorithm which is called slice line so before I before showing you how to",
    "start": "962940",
    "end": "970199"
  },
  {
    "text": "um to use it to generate rules in practice I will introduce you into the",
    "start": "970199",
    "end": "975360"
  },
  {
    "text": "basics of this algorithm so this algorithm was proposed not so",
    "start": "975360",
    "end": "982079"
  },
  {
    "text": "long ago um to debug machine learning models so",
    "start": "982079",
    "end": "987360"
  },
  {
    "text": "this was the original purpose of the algorithm is you have trained a machine learning model and you want to find",
    "start": "987360",
    "end": "995760"
  },
  {
    "text": "in which cases the model is underperforming so let's say that you",
    "start": "995760",
    "end": "1001279"
  },
  {
    "text": "have a data set of requests just as a toy data set with just the country the",
    "start": "1001279",
    "end": "1006560"
  },
  {
    "text": "user agent and the IP type you trained an algorithm and you are",
    "start": "1006560",
    "end": "1012019"
  },
  {
    "text": "able to see what is the error the algorithm is making for every Row in",
    "start": "1012019",
    "end": "1017060"
  },
  {
    "text": "your data set let's say you have it and then you want to find the slices in",
    "start": "1017060",
    "end": "1023120"
  },
  {
    "text": "your data set meaning a subset a set of rows in your data set where your machine",
    "start": "1023120",
    "end": "1028520"
  },
  {
    "text": "learning algorithm is underperforming meaning that it has a high error",
    "start": "1028520",
    "end": "1033938"
  },
  {
    "text": "so this is what this algorithm allows you to do is to find those slices",
    "start": "1033939",
    "end": "1039140"
  },
  {
    "text": "and those slices in practice they are expressed as a conjunction of conditions so here I'm showing two examples you can",
    "start": "1039140",
    "end": "1046760"
  },
  {
    "text": "have a slice where you say the country is Germany and you will get an error of 0.9 or you can have a bigger slice with",
    "start": "1046760",
    "end": "1054020"
  },
  {
    "text": "the two lines the third and the fourth the two rows where you have a different set of conditions and this is in essence",
    "start": "1054020",
    "end": "1061100"
  },
  {
    "text": "what is a slice but here in our in our use case we we don't have such a model and I'm not",
    "start": "1061100",
    "end": "1068059"
  },
  {
    "text": "going to talk to you about training a machine learning model actually so here is the twist so we can take this",
    "start": "1068059",
    "end": "1076280"
  },
  {
    "text": "algorithm and instead of using the error of a machine learning model",
    "start": "1076280",
    "end": "1082220"
  },
  {
    "text": "we can just use zero and one groups so what we do is we take the human",
    "start": "1082220",
    "end": "1089480"
  },
  {
    "text": "traffic and we assign it a group zero we take the suspicious traffic and we",
    "start": "1089480",
    "end": "1096260"
  },
  {
    "text": "assign it the group one in this way since the algorithm is trying to find",
    "start": "1096260",
    "end": "1102500"
  },
  {
    "text": "a subset of samples where you have a high error what the algorithm is going",
    "start": "1102500",
    "end": "1108980"
  },
  {
    "text": "to do is it's going to find rules that Target your group one so in our case this is the traffic just",
    "start": "1108980",
    "end": "1116059"
  },
  {
    "text": "before the attack and the traffic during the attack but this is something you can adapt in any cyber security use case",
    "start": "1116059",
    "end": "1123320"
  },
  {
    "text": "where you have two distinct data sets and you want to find rules describing",
    "start": "1123320",
    "end": "1129679"
  },
  {
    "text": "one of the two data sets so the the group you want to Target you assign it group one and the other group you assign",
    "start": "1129679",
    "end": "1136640"
  },
  {
    "text": "it the group zero and the algorithm will find the rules for you",
    "start": "1136640",
    "end": "1142940"
  },
  {
    "text": "so now before I show you the the code that you need to to write to do that",
    "start": "1142940",
    "end": "1149480"
  },
  {
    "text": "I would like to give you a glimpse of how it really works but without going into mathematical proofs or details but",
    "start": "1149480",
    "end": "1155660"
  },
  {
    "text": "just to give you an idea of how it can work so the algorithm is searching uh for",
    "start": "1155660",
    "end": "1162620"
  },
  {
    "text": "slices with large arrows as I said and for this you need a way to quickly",
    "start": "1162620",
    "end": "1168620"
  },
  {
    "text": "compute the error the average error for a specific slice",
    "start": "1168620",
    "end": "1173660"
  },
  {
    "text": "to do that it uses Matrix algebra why because if you if you manage to write",
    "start": "1173660",
    "end": "1181700"
  },
  {
    "text": "this this operation using matrix multiplication for instance you can use",
    "start": "1181700",
    "end": "1187220"
  },
  {
    "text": "all the existing implementations which are highly optimized even for",
    "start": "1187220",
    "end": "1192320"
  },
  {
    "text": "distributed computing or GPU accelerated implementations of matrix multiplication",
    "start": "1192320",
    "end": "1199039"
  },
  {
    "text": "and and thus you can have an algorithm that's scales without much effort on",
    "start": "1199039",
    "end": "1204559"
  },
  {
    "text": "your side because it's already implemented for you and on top of that it uses some pruning",
    "start": "1204559",
    "end": "1210440"
  },
  {
    "text": "techniques so that it can reduce the search space because as you can imagine",
    "start": "1210440",
    "end": "1216760"
  },
  {
    "text": "the more attributes you have in the data set the more combination of conditions",
    "start": "1216760",
    "end": "1221960"
  },
  {
    "text": "you can do in this space that you need to search is exponential",
    "start": "1221960",
    "end": "1227419"
  },
  {
    "text": "but the authors of the paper have found some heuristics to reduce the search space without accessing the data all the",
    "start": "1227419",
    "end": "1235340"
  },
  {
    "text": "time which dramatically improves the performance of the algorithm so I'm not going to go into the details",
    "start": "1235340",
    "end": "1242600"
  },
  {
    "text": "of all those points but I'm just going to explain to you how you can use matrix",
    "start": "1242600",
    "end": "1247940"
  },
  {
    "text": "multiplication to match rules",
    "start": "1247940",
    "end": "1252700"
  },
  {
    "text": "so let's start with the beginning so we have the the toy dataset that I showed you before",
    "start": "1253400",
    "end": "1259160"
  },
  {
    "text": "and the first step is to do an encoding of the data set so the encoding after I'm talking about",
    "start": "1259160",
    "end": "1265940"
  },
  {
    "text": "is one hot encoding is something that is used all the time in machine learning for categorical features meaning",
    "start": "1265940",
    "end": "1272120"
  },
  {
    "text": "features that have values which are distinct not continuous values",
    "start": "1272120",
    "end": "1278059"
  },
  {
    "text": "so one hot encoding what it's going to do is going to take a column with different distinct values let's say",
    "start": "1278059",
    "end": "1284179"
  },
  {
    "text": "country here it has three different values and it's going to create three different",
    "start": "1284179",
    "end": "1290059"
  },
  {
    "text": "binary columns where you will have one where the condition country equals FR is",
    "start": "1290059",
    "end": "1296960"
  },
  {
    "text": "matched and zero otherwise and then you have another column for Germany another cone for China and so on and so forth",
    "start": "1296960",
    "end": "1305179"
  },
  {
    "text": "so in this way the features of your data set that were categorical now",
    "start": "1305179",
    "end": "1311780"
  },
  {
    "text": "are expressed with a binary Matrix of zeros and ones",
    "start": "1311780",
    "end": "1317600"
  },
  {
    "text": "and in the same way you can also describe rules with binary vectors",
    "start": "1317600",
    "end": "1324559"
  },
  {
    "text": "so in this space where you have every conditions written out you can have a vector",
    "start": "1324559",
    "end": "1331520"
  },
  {
    "text": "representing a rule for instance if you want a rule to say country equals Germany you will put one in this column",
    "start": "1331520",
    "end": "1338780"
  },
  {
    "text": "and zero everywhere else this is the first line and for the second which was a user",
    "start": "1338780",
    "end": "1345980"
  },
  {
    "text": "agent request Chrome and iptype data center you will have two ones in your vector",
    "start": "1345980",
    "end": "1351559"
  },
  {
    "text": "and so you have two vectors here that each one of them represents a rule",
    "start": "1351559",
    "end": "1356659"
  },
  {
    "text": "and everything is binary so it doesn't take so much space and also it is sparse",
    "start": "1356659",
    "end": "1362419"
  },
  {
    "text": "so you can also use sparse Matrix matrices to to store this data",
    "start": "1362419",
    "end": "1368000"
  },
  {
    "text": "so then having this data set in this format and the rules which are just transposed to make them I just transpose",
    "start": "1368000",
    "end": "1375620"
  },
  {
    "text": "them you can do matrix multiplication to understand which row matches which rule",
    "start": "1375620",
    "end": "1382760"
  },
  {
    "text": "so when you do matrix multiplication you will effectively get for instance the first row multiplied with the First",
    "start": "1382760",
    "end": "1389179"
  },
  {
    "text": "Column representing the first rule and you find the zero so the first row with",
    "start": "1389179",
    "end": "1394640"
  },
  {
    "text": "the second column you find zero so it's in Black then you have in red the the result of the multiplication of the",
    "start": "1394640",
    "end": "1401120"
  },
  {
    "text": "second row with with a row with a rule Matrix Etc so what you can see in the",
    "start": "1401120",
    "end": "1408080"
  },
  {
    "text": "result is that the third row matches both rules whereas the fourth row matches only the second one",
    "start": "1408080",
    "end": "1414380"
  },
  {
    "text": "so I'm talking about the The rightmost Matrix over there so this simple operation allows you to",
    "start": "1414380",
    "end": "1422179"
  },
  {
    "text": "find which row matches with which rule in the in",
    "start": "1422179",
    "end": "1427640"
  },
  {
    "text": "just one mathematical operation so then as I said slice line when he's",
    "start": "1427640",
    "end": "1434480"
  },
  {
    "text": "doing the algorithm is repeating repeatedly Computing the average slice",
    "start": "1434480",
    "end": "1440059"
  },
  {
    "text": "errors so you have the error you have the Matrix which tells you which row",
    "start": "1440059",
    "end": "1445640"
  },
  {
    "text": "matches with which rule and it's very simple to compute now the error of a slice",
    "start": "1445640",
    "end": "1450740"
  },
  {
    "text": "just by multiplying the error vector with a matrix L which I call that which",
    "start": "1450740",
    "end": "1456679"
  },
  {
    "text": "is the Matrix that shows the the match the matching of the rules and the rows",
    "start": "1456679",
    "end": "1461900"
  },
  {
    "text": "so in this way when you do the multiplication of the arrow with this Matrix you get the total error",
    "start": "1461900",
    "end": "1468200"
  },
  {
    "text": "for a specific rule and then in the same vein you can multiply with the identity",
    "start": "1468200",
    "end": "1475000"
  },
  {
    "text": "vector and get the count because matrix multiplication will effectively count",
    "start": "1475000",
    "end": "1480080"
  },
  {
    "text": "how many ones you have in every column and then just by dividing it",
    "start": "1480080",
    "end": "1485559"
  },
  {
    "text": "element wise you will have the mean slice error and this is actually the",
    "start": "1485559",
    "end": "1491059"
  },
  {
    "text": "computation that slice line is repeatedly doing so it starts with just",
    "start": "1491059",
    "end": "1496100"
  },
  {
    "text": "one conditions it spans all the conditions computes the error decides if",
    "start": "1496100",
    "end": "1501320"
  },
  {
    "text": "it needs to go further in the search space and then those that",
    "start": "1501320",
    "end": "1506539"
  },
  {
    "text": "does that with two conditions three and so forth so this is a parameter that you have in the algorithm to to tell him",
    "start": "1506539",
    "end": "1513260"
  },
  {
    "text": "okay how many how many conditions you want to have at most so this is if you have something to take",
    "start": "1513260",
    "end": "1520460"
  },
  {
    "text": "away from this just what I wanted to show you is that martix notification can",
    "start": "1520460",
    "end": "1525559"
  },
  {
    "text": "help you evaluate rules like very effectively so",
    "start": "1525559",
    "end": "1532340"
  },
  {
    "text": "the authors of the paper they provided an implementation in R of",
    "start": "1532340",
    "end": "1537679"
  },
  {
    "text": "the slice line algorithm and we took the implementation and we wrote it in Python",
    "start": "1537679",
    "end": "1543020"
  },
  {
    "text": "and we open sourced it so I invite you to go check check our GitHub repository",
    "start": "1543020",
    "end": "1551659"
  },
  {
    "text": "um in in the process of implementing the algorithm in Python we rewrote some part",
    "start": "1551659",
    "end": "1557360"
  },
  {
    "text": "of the code that was using for loops with matrix multiplication again to make it more efficient",
    "start": "1557360",
    "end": "1562520"
  },
  {
    "text": "and so this allowed us to leverage the numpy library it's a python Library which contains sufficient implementation",
    "start": "1562520",
    "end": "1569360"
  },
  {
    "text": "with a C plus plus code underneath and also the framework is compatible",
    "start": "1569360",
    "end": "1575360"
  },
  {
    "text": "with pandas which is used for data analysis data science in Python",
    "start": "1575360",
    "end": "1581240"
  },
  {
    "text": "and so in this way we speed up the implementation by more than a thousand",
    "start": "1581240",
    "end": "1587600"
  },
  {
    "text": "times so um so the good thing about all of this",
    "start": "1587600",
    "end": "1593539"
  },
  {
    "text": "is that all this process is just mathematical algorithm and the rules that come out of",
    "start": "1593539",
    "end": "1600080"
  },
  {
    "text": "it are completely agnostic to the rules engine that you might want to use so you",
    "start": "1600080",
    "end": "1605299"
  },
  {
    "text": "can transform the result in any format you like and use it in your own system in your own use case",
    "start": "1605299",
    "end": "1612440"
  },
  {
    "text": "so let me show you what is the code that you need to write so here we take we took a an example",
    "start": "1612440",
    "end": "1620000"
  },
  {
    "text": "data set from a French eCommerce website in order to create the two distinct",
    "start": "1620000",
    "end": "1626779"
  },
  {
    "text": "groups we took requests that have a very old session which are in majority coming",
    "start": "1626779",
    "end": "1635360"
  },
  {
    "text": "from humans and then we created another data set with suspicious traffic and",
    "start": "1635360",
    "end": "1642500"
  },
  {
    "text": "these were requests coming from non-french-speaking countries because we're talking about an e-commerce",
    "start": "1642500",
    "end": "1648559"
  },
  {
    "text": "website which is a French and also that use data center IPS so in",
    "start": "1648559",
    "end": "1653779"
  },
  {
    "text": "this way we created this data set with several features and we assigned the group group",
    "start": "1653779",
    "end": "1661100"
  },
  {
    "text": "zero for human traffic group one for suspicious traffic so this is a pandas data frame in",
    "start": "1661100",
    "end": "1666980"
  },
  {
    "text": "practice what I'm showing here and so to run the slice line algorithm",
    "start": "1666980",
    "end": "1672440"
  },
  {
    "text": "you just need two instructions you just need to instantiate the slice finder class which",
    "start": "1672440",
    "end": "1679580"
  },
  {
    "text": "is what is the class implementing the algorithm and then you just call fit to it with",
    "start": "1679580",
    "end": "1686059"
  },
  {
    "text": "your data and with the group as a Target and that's it you can compute the slices",
    "start": "1686059",
    "end": "1691820"
  },
  {
    "text": "in this way so there are some parameters like like as I said the number of conditions that",
    "start": "1691820",
    "end": "1698600"
  },
  {
    "text": "you need to have or the number of rules that you need that you want to get I won't go into the details we can discuss",
    "start": "1698600",
    "end": "1705080"
  },
  {
    "text": "about it afterwards if you need and so this is this the code snippet on",
    "start": "1705080",
    "end": "1710179"
  },
  {
    "text": "the upper left and then I'm showing you how easily you can convert the result",
    "start": "1710179",
    "end": "1717140"
  },
  {
    "text": "in any format you want so here you can see that um",
    "start": "1717140",
    "end": "1722840"
  },
  {
    "text": "the algorithm found that the bot traffic was coming in majority from Germany because actually we biased the data set",
    "start": "1722840",
    "end": "1731720"
  },
  {
    "text": "by selecting traffic coming from non-french-speaking countries and in fact it's consistent",
    "start": "1731720",
    "end": "1737299"
  },
  {
    "text": "with what we wanted and it found slices of different size so you can see the first one is just country Germany and",
    "start": "1737299",
    "end": "1744140"
  },
  {
    "text": "the other ones are more restrictive and they are a bit smaller but this is how",
    "start": "1744140",
    "end": "1749179"
  },
  {
    "text": "easy it is to use so don't hesitate to to have a look",
    "start": "1749179",
    "end": "1756260"
  },
  {
    "text": "so now I'm gonna I'm showing you a real world attack that we blocked using this",
    "start": "1756260",
    "end": "1761720"
  },
  {
    "text": "methodology so you have a blue line which is the traffic on one of our customers websites",
    "start": "1761720",
    "end": "1767720"
  },
  {
    "text": "so this is uh this is the login endpoint so we're talking about the credential Staffing and it and the customer is a",
    "start": "1767720",
    "end": "1775580"
  },
  {
    "text": "gaming platform so you see that the Blue Line there is a small Spike that the anomaly detection algorithm",
    "start": "1775580",
    "end": "1782960"
  },
  {
    "text": "captured and then this triggered an analysis using sliceline",
    "start": "1782960",
    "end": "1789080"
  },
  {
    "text": "so then we found a rule which is represented by the orange curve",
    "start": "1789080",
    "end": "1794539"
  },
  {
    "text": "which must exactly the excess traffic that we saw",
    "start": "1794539",
    "end": "1799580"
  },
  {
    "text": "on the customer's website and then we use this rule",
    "start": "1799580",
    "end": "1804860"
  },
  {
    "text": "to actively block traffic matching this pattern and within a week we blocked",
    "start": "1804860",
    "end": "1811700"
  },
  {
    "text": "more than three million requests so if I show you now the same attack but",
    "start": "1811700",
    "end": "1818600"
  },
  {
    "text": "from another viewpoint where instead of showing you the number of requests that I'm showing you the",
    "start": "1818600",
    "end": "1823940"
  },
  {
    "text": "number of unique IPS we counted more than 187k distinct IPS that were used",
    "start": "1823940",
    "end": "1832220"
  },
  {
    "text": "by the attackers for for this use case",
    "start": "1832220",
    "end": "1837260"
  },
  {
    "text": "so this is all I wanted to tell you about me and Antoine",
    "start": "1837260",
    "end": "1843140"
  },
  {
    "text": "so um if I want to summarize so we've talked to you about an attack",
    "start": "1843140",
    "end": "1851059"
  },
  {
    "text": "to uh sorry an algorithm to detect distributed attacks where we used aggregations followed by anomaly",
    "start": "1851059",
    "end": "1858440"
  },
  {
    "text": "detection we use slice line to generate rules and",
    "start": "1858440",
    "end": "1864500"
  },
  {
    "text": "find the signatures of of the attacks and I want to stress out that this is an",
    "start": "1864500",
    "end": "1870679"
  },
  {
    "text": "effective algorithm against bots that adapt we don't need to we don't need to",
    "start": "1870679",
    "end": "1875779"
  },
  {
    "text": "know beforehand what is the signature what what the attacker signature looks like we detect that something is",
    "start": "1875779",
    "end": "1882200"
  },
  {
    "text": "happening and we can generate rules on the Fly and block the traffic right away",
    "start": "1882200",
    "end": "1888559"
  },
  {
    "text": "and also the last point is the slice line can be applied to other security use cases",
    "start": "1888559",
    "end": "1894140"
  },
  {
    "text": "and if you have a rules engine and two groups of data you can use it to",
    "start": "1894140",
    "end": "1899360"
  },
  {
    "text": "generate rules now if you want to contact us this is our contact information and if you want",
    "start": "1899360",
    "end": "1906320"
  },
  {
    "text": "to come by the booth we are in the booth number 12. so if you have any questions",
    "start": "1906320",
    "end": "1915260"
  },
  {
    "text": "go ahead [Applause]",
    "start": "1915260",
    "end": "1924349"
  },
  {
    "text": "sorry can you could you use a mic so that everyone can hear the question please",
    "start": "1933440",
    "end": "1939200"
  },
  {
    "text": "okay for example I have a data set right which is offline now okay yes and because before that I did not have this",
    "start": "1939200",
    "end": "1946220"
  },
  {
    "text": "this tool right so can we use your tool to analyze that data and find out",
    "start": "1946220",
    "end": "1952580"
  },
  {
    "text": "whether there was any anomaly in that or not Oh you mean the normally detection part",
    "start": "1952580",
    "end": "1957740"
  },
  {
    "text": "yeah so previously there was nothing okay I just collected the data there was no prevention okay now I know like you",
    "start": "1957740",
    "end": "1965659"
  },
  {
    "text": "have a tool right so can I use your tool to analyze the data which I already have",
    "start": "1965659",
    "end": "1972020"
  },
  {
    "text": "yeah you can do it afterward so like in our case we do it live",
    "start": "1972020",
    "end": "1977659"
  },
  {
    "text": "so we have the outlayer detection part and the root generation part let's say",
    "start": "1977659",
    "end": "1982760"
  },
  {
    "text": "in your case as a human analyst you know where the attack started you could take all your data one month after the attack",
    "start": "1982760",
    "end": "1989600"
  },
  {
    "text": "and say this is you know the signatures or the signals I collected before the attack",
    "start": "1989600",
    "end": "1994640"
  },
  {
    "text": "you know when the attack started without using any algorithm you know just because you saw it so you can split your",
    "start": "1994640",
    "end": "2001120"
  },
  {
    "text": "data into two groups manually I mean with a program and then apply slice line using python after a while whenever you",
    "start": "2001120",
    "end": "2008320"
  },
  {
    "text": "want and then you can specify how much you know rules you want to generate the number of you know signals that you want",
    "start": "2008320",
    "end": "2014799"
  },
  {
    "text": "to be taken into account and you can completely do it after the attacker occur there",
    "start": "2014799",
    "end": "2020860"
  },
  {
    "text": "thank you but if I may add something it doesn't always has to be before after you might",
    "start": "2020860",
    "end": "2027220"
  },
  {
    "text": "have some other split in your head of you know this is suspicious this is not suspicious and apply it in in these two",
    "start": "2027220",
    "end": "2034419"
  },
  {
    "text": "groups you just just need to have two groups no need to have like before after",
    "start": "2034419",
    "end": "2041398"
  },
  {
    "text": "hmm so the data can be in any form right for example TCP dump also or you just need",
    "start": "2045100",
    "end": "2052599"
  },
  {
    "text": "the data in a specific format so we use the reason we introduced the",
    "start": "2052599",
    "end": "2057940"
  },
  {
    "text": "pandas feature is because the pandas is really convenient it's compatible with a lot of like data from that so you can",
    "start": "2057940",
    "end": "2064599"
  },
  {
    "text": "read a lot of data from that and convert them to pandas but behind the hood we are using like",
    "start": "2064599",
    "end": "2070480"
  },
  {
    "text": "vector representation so but you can use Ponder to read the CSV file or log file",
    "start": "2070480",
    "end": "2076480"
  },
  {
    "text": "as long as you have a way to pass the data and then we automatically I don't know if the library currently uh like",
    "start": "2076480",
    "end": "2082720"
  },
  {
    "text": "binarized the value or not but uh yes yes okay yeah it's perfect so yeah",
    "start": "2082720",
    "end": "2088540"
  },
  {
    "text": "we take care of you know transforming the data to uh you know one hotel encoding so that it can be handled by",
    "start": "2088540",
    "end": "2094000"
  },
  {
    "text": "the the algorithm thank you any other questions",
    "start": "2094000",
    "end": "2102000"
  },
  {
    "text": "hi I'm Lewis there are some web application firewall that deals with",
    "start": "2103500",
    "end": "2109680"
  },
  {
    "text": "anti-distributed DDOS attacks is your solution similar to those kind of",
    "start": "2109680",
    "end": "2115420"
  },
  {
    "text": "solutions so yes uh we are not only doing digital attacks",
    "start": "2115420",
    "end": "2121660"
  },
  {
    "text": "basically we operate at layer 7 so only layer seven zeros attacks but also all",
    "start": "2121660",
    "end": "2127480"
  },
  {
    "text": "kind of boat attacks so it can be scraping attacks credentials the finger attacks carding scalping attacks where",
    "start": "2127480",
    "end": "2134020"
  },
  {
    "text": "birds are trying to buy limited edition products so the goal is really to detect automated form of traffic",
    "start": "2134020",
    "end": "2141960"
  },
  {
    "text": "so in this aspect what is the uh what do you what's the differentiator",
    "start": "2143460",
    "end": "2149220"
  },
  {
    "text": "let's say those are web application firewalls they also have this uh NTD dos",
    "start": "2149220",
    "end": "2155260"
  },
  {
    "text": "capability so we take more signals into account basically I would say we also take the client-side aspects using",
    "start": "2155260",
    "end": "2163119"
  },
  {
    "text": "JavaScript or using SDK if you have a mobile app and then all kind of Behavioral features that are more",
    "start": "2163119",
    "end": "2169420"
  },
  {
    "text": "complex than simply using Reiki meetings we can discuss after because I don't",
    "start": "2169420",
    "end": "2175900"
  },
  {
    "text": "want to talk too much about the product now it's not uh yeah",
    "start": "2175900",
    "end": "2181180"
  },
  {
    "text": "I think there was someone else who had the question no",
    "start": "2181180",
    "end": "2186180"
  },
  {
    "text": "foreign",
    "start": "2186220",
    "end": "2188460"
  },
  {
    "text": "for those two that can be make the mouth movement like like human behavior and it",
    "start": "2195839",
    "end": "2202839"
  },
  {
    "text": "it's not the attack is not a large scale attack uh it's possible to give this kind of true",
    "start": "2202839",
    "end": "2209260"
  },
  {
    "text": "to to detect so is your question can we apply it on most movement signals yeah",
    "start": "2209260",
    "end": "2215079"
  },
  {
    "text": "yeah actually we are doing it so basically uh like as long as you have a",
    "start": "2215079",
    "end": "2220540"
  },
  {
    "text": "data set of like human Mouse movements these are numbers so we need to convert",
    "start": "2220540",
    "end": "2225579"
  },
  {
    "text": "them to a discrete values like uh you know group them in buckets of numbers",
    "start": "2225579",
    "end": "2231520"
  },
  {
    "text": "and then if you have something that you know is mostly but and it's something that you think is mostly human you can",
    "start": "2231520",
    "end": "2237940"
  },
  {
    "text": "run the algorithm on it and let's say you have a feature which is the most movement speed another feature which is",
    "start": "2237940",
    "end": "2243940"
  },
  {
    "text": "the duration another feature which is the number of mouse events then the algorithm Will May learn that you know",
    "start": "2243940",
    "end": "2250060"
  },
  {
    "text": "if you don't have a lot of mouse events and a high speed you may be more but than human so you can apply it as well",
    "start": "2250060",
    "end": "2255700"
  },
  {
    "text": "on this kind of singles okay thank you so uh next question is have you face any",
    "start": "2255700",
    "end": "2262240"
  },
  {
    "text": "kind of uh very sophisticated uh tool like that and",
    "start": "2262240",
    "end": "2269320"
  },
  {
    "text": "how you overcome how do you defeat that Gap too so you mean like tools that will generate realistic yeah those movements",
    "start": "2269320",
    "end": "2275440"
  },
  {
    "text": "exactly like human yeah whatever we're doing with the data set try different",
    "start": "2275440",
    "end": "2281800"
  },
  {
    "text": "data set yeah so in the case where you like an attacker will just replay your like human movements of course like",
    "start": "2281800",
    "end": "2288400"
  },
  {
    "text": "behavioral analysis won't be really useful because uh it's it will be the same as for legitimate human users so",
    "start": "2288400",
    "end": "2294760"
  },
  {
    "text": "that's why when it comes to bad detection of fraud detection in general it's more like we have a layered detection approach because some signals",
    "start": "2294760",
    "end": "2302320"
  },
  {
    "text": "won't be useful like not all the time so for example let's say you want to use cheetahs fingerprints it will be really",
    "start": "2302320",
    "end": "2308380"
  },
  {
    "text": "efficient against bots that are not using real you know uh browser or that",
    "start": "2308380",
    "end": "2315160"
  },
  {
    "text": "lied about their identity in their user agents but let's say you are using a real browser a real Chrome automated you",
    "start": "2315160",
    "end": "2322720"
  },
  {
    "text": "will have a consistent value so it's not useful that's why we need to combine you know different things like reputation",
    "start": "2322720",
    "end": "2328619"
  },
  {
    "text": "behavior and at different levels and the good thing with the the approach this",
    "start": "2328619",
    "end": "2333940"
  },
  {
    "text": "one in particular is that most Bud detection techniques look at the session or the IP to verify if something wrong",
    "start": "2333940",
    "end": "2341920"
  },
  {
    "text": "is going on here we you know we analyze the World website traffic to see like if",
    "start": "2341920",
    "end": "2347260"
  },
  {
    "text": "something you know bigger is happening in the distribution of the data and then we try to understand why uh why it",
    "start": "2347260",
    "end": "2354339"
  },
  {
    "text": "changed but it's important to a different kind of approach it's not a single approach can solve everything",
    "start": "2354339",
    "end": "2360900"
  },
  {
    "text": "all right thanks a lot we have one minute left thanks for your questions",
    "start": "2369460",
    "end": "2374950"
  },
  {
    "text": "[Applause]",
    "start": "2374950",
    "end": "2379339"
  }
]