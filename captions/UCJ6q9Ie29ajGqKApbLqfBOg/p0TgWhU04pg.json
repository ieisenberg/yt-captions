[
  {
    "text": "well my name is is repo and uh Hector Marco is my colleague we're going to talk about aslr uh the weakness that",
    "start": "120",
    "end": "8120"
  },
  {
    "text": "several weaknesses General weaknesses in the design and implementation of Linux and",
    "start": "8120",
    "end": "13480"
  },
  {
    "text": "pxlr and uh okay we will show you uh let's see if this can go quickly okay I",
    "start": "13480",
    "end": "20640"
  },
  {
    "text": "will give you a brief fast quick overview of what is I I will show you I will show you the the weaknesses also a",
    "start": "20640",
    "end": "28160"
  },
  {
    "text": "tool that we have developed in to to find the the witnesses and to develop a a new version okay",
    "start": "28160",
    "end": "35280"
  },
  {
    "text": "because a brief explanation about how one of the weaknesses the correlative weakness can be",
    "start": "35280",
    "end": "41200"
  },
  {
    "text": "exploited and uh this has been presented by my colleague ector Marco and uh we",
    "start": "41200",
    "end": "47320"
  },
  {
    "text": "don't like also to show the the books or the vulnerabilities but also give some",
    "start": "47320",
    "end": "52440"
  },
  {
    "text": "uh some hope that there are solutions to them okay so we have developed aslr Next",
    "start": "52440",
    "end": "57719"
  },
  {
    "text": "Generation which is a new version of aslr which maybe will replace existing",
    "start": "57719",
    "end": "63039"
  },
  {
    "text": "one in some somewhere sometime okay so the background uh I'm going to present",
    "start": "63039",
    "end": "70320"
  },
  {
    "text": "it aslr is not uh um is not a removal of",
    "start": "70320",
    "end": "77000"
  },
  {
    "text": "books but is a a prevention of exploiting Books Okay so rather than removing vulnerabilities you deter or",
    "start": "77000",
    "end": "84439"
  },
  {
    "text": "make it more difficult to exploit it okay and basically aclr as it name says address space",
    "start": "84439",
    "end": "90680"
  },
  {
    "text": "randomization is about um randoming or make harder an attacker to know where my",
    "start": "90680",
    "end": "98439"
  },
  {
    "text": "uh code is so typically thater needs to jump or to execute using rope jump to",
    "start": "98439",
    "end": "105240"
  },
  {
    "text": "Le return to leave or whatever need to know where my application is leaving",
    "start": "105240",
    "end": "110680"
  },
  {
    "text": "what what directions are using okay from now we are going to suppose that aslr is complete I mean everything is compiled",
    "start": "110680",
    "end": "117159"
  },
  {
    "text": "with p means the executable is Al randomize and U let's say full randomiz",
    "start": "117159",
    "end": "123799"
  },
  {
    "text": "is implemented not partial or whatever so we are going to things that can be",
    "start": "123799",
    "end": "128920"
  },
  {
    "text": "randomized I mean there are many objects there are many in the sense objects",
    "start": "128920",
    "end": "134200"
  },
  {
    "text": "blocks of memory chunks of memory we are not talking about object oriented programming nothing like that so the hip",
    "start": "134200",
    "end": "139720"
  },
  {
    "text": "the stack the program the executable the libraries uh the maps that you allocate",
    "start": "139720",
    "end": "146319"
  },
  {
    "text": "using map files Anonymous whatever all that are objects all of them must be",
    "start": "146319",
    "end": "151959"
  },
  {
    "text": "randomized in order to be to be fully protected otherwise the attacker can focus on one of them or",
    "start": "151959",
    "end": "158400"
  },
  {
    "text": "if okay so how how works aslr we have",
    "start": "158400",
    "end": "164599"
  },
  {
    "text": "this is the typical memory layout that we can see in a textbook the stack is on the top the executable is bottom here",
    "start": "164599",
    "end": "171800"
  },
  {
    "text": "the hip and in the middle somewhere in the middle is the libraries and the M Fields Files The Hip can grow up and",
    "start": "171800",
    "end": "177920"
  },
  {
    "text": "typically the stack grows down depending in another picture but it works that way okay so if we have no ASR the the attack",
    "start": "177920",
    "end": "185879"
  },
  {
    "text": "is Trivial I mean we can jump we can redirect the flow we are not talking about how to protect redirect and the",
    "start": "185879",
    "end": "191519"
  },
  {
    "text": "flow okay so uh the book is already existing and we don't care how it is",
    "start": "191519",
    "end": "196959"
  },
  {
    "text": "managed or who it is done aslr is let's suppose that book allows an attacker to redirect the control flow of a program",
    "start": "196959",
    "end": "203560"
  },
  {
    "text": "where to jump okay if it there is no SLR it's trivial we know where because the attacker needs an an absolute Direction",
    "start": "203560",
    "end": "212760"
  },
  {
    "text": "but what happens when the ACR is enabled the libraries are Shake shifted a little",
    "start": "212760",
    "end": "219400"
  },
  {
    "text": "bit a random amount of of memory so you don't know exactly where to jump how much it is shift is the the entropy okay",
    "start": "219400",
    "end": "226640"
  },
  {
    "text": "is the amount of uh entropy that there that the given implementation has okay",
    "start": "226640",
    "end": "233079"
  },
  {
    "text": "and the effectiveness the general effectiveness of the is to how difficult to is to predict the the target",
    "start": "233079",
    "end": "241159"
  },
  {
    "text": "and how many um vectors do we have I mean it depends not only on the number",
    "start": "241159",
    "end": "247159"
  },
  {
    "text": "of bits of the entropy but there are some other elements that interact Also",
    "start": "247159",
    "end": "253120"
  },
  {
    "text": "let's say it's important to to see that there are other protection techniques like a tax machine protector or uh data",
    "start": "253120",
    "end": "258919"
  },
  {
    "text": "not executable that are really simple to understand simple to impl and very effective okay they are great I mean uh",
    "start": "258919",
    "end": "266160"
  },
  {
    "text": "inex means that you don't or you write on a pitch of memory or you execute it but you can can't do both so it means",
    "start": "266160",
    "end": "273240"
  },
  {
    "text": "that you can inject code but you cannot execute it's easy to implement",
    "start": "273240",
    "end": "278320"
  },
  {
    "text": "clean aslr is quite more complex there are many factors as we can see there are many different element objects how those",
    "start": "278320",
    "end": "287160"
  },
  {
    "text": "objects are randomized what are the relation between them when they are uh",
    "start": "287160",
    "end": "293000"
  },
  {
    "text": "randomized so it's a little bit more confusing so be prepared a little bit because this is not going to be and we",
    "start": "293000",
    "end": "300320"
  },
  {
    "text": "are going to skip a few things just to make this short okay so",
    "start": "300320",
    "end": "306720"
  },
  {
    "text": "let's go to the weaknesses the first one is is obvious",
    "start": "306720",
    "end": "311840"
  },
  {
    "text": "um okay before entering one idea more or less is like what is the",
    "start": "311840",
    "end": "319080"
  },
  {
    "text": "background why these weaknesses exist it's not for free it's not because it's grong there are some some reasoning",
    "start": "319080",
    "end": "325360"
  },
  {
    "text": "about that is because typically the hip is a block of memory is a an object that",
    "start": "325360",
    "end": "330639"
  },
  {
    "text": "typically grows can grow okay and the stack obviously grows down downward I mean every time you call a function",
    "start": "330639",
    "end": "336360"
  },
  {
    "text": "every time you declare a local variable the stack grows down and then wind andwin the stack okay so those two",
    "start": "336360",
    "end": "343319"
  },
  {
    "text": "objects are typically considered to be growable objects and so we have to make",
    "start": "343319",
    "end": "348720"
  },
  {
    "text": "room for them so we have to to put the hip and the stack as far apart each",
    "start": "348720",
    "end": "354080"
  },
  {
    "text": "other from from each other okay so that is one question and the other one is the",
    "start": "354080",
    "end": "360319"
  },
  {
    "text": "fragmentation we are in the virtual memory space but if we typically",
    "start": "360319",
    "end": "365479"
  },
  {
    "text": "designers of aslr wants to leave a huge area of memory without nothing in the",
    "start": "365479",
    "end": "370680"
  },
  {
    "text": "middle so you can allocate huge blocks of memory I can allocate for example video a whole video file in in in a in a",
    "start": "370680",
    "end": "378039"
  },
  {
    "text": "large area Okay so fragmentation and growable are the maybe the",
    "start": "378039",
    "end": "384599"
  },
  {
    "text": "problems okay so let's focus on the first weakness the obvious one the the",
    "start": "384599",
    "end": "390120"
  },
  {
    "text": "amount of entropy how much entropy bits have uh and how many different places",
    "start": "390120",
    "end": "397599"
  },
  {
    "text": "each object is located okay we can see these are very few F summary of",
    "start": "397599",
    "end": "404440"
  },
  {
    "text": "uh the result the main results is only Linux and PX we're going to focus on pack because this guys has done a very",
    "start": "404440",
    "end": "411479"
  },
  {
    "text": "nice work I mean as far as we know it's the best implementation right now in Linux and many other places but so it's",
    "start": "411479",
    "end": "420199"
  },
  {
    "text": "is the the the the the implementation to beat okay is the best okay so right now",
    "start": "420199",
    "end": "426879"
  },
  {
    "text": "uh in Linux in both cases are quite weak mean the number of seconds well this is the executable and this is the speed",
    "start": "426879",
    "end": "433560"
  },
  {
    "text": "considering 1,3 L per second uh this is the time needed to to break Linux 1",
    "start": "433560",
    "end": "438800"
  },
  {
    "text": "second in 32 bits 32 seconds using pxs uh this is the real entropy of the",
    "start": "438800",
    "end": "445919"
  },
  {
    "text": "executable this is not the real there is a small book in the in the PX T tool",
    "start": "445919",
    "end": "451000"
  },
  {
    "text": "which measures incorrectly in fact it measures the libraries are not executable okay so there's a small bug",
    "start": "451000",
    "end": "457360"
  },
  {
    "text": "in the PX PX text and in 64 bits in fact it's strange but Linux has more entropy",
    "start": "457360",
    "end": "464440"
  },
  {
    "text": "than P has on the ex exec object okay uh",
    "start": "464440",
    "end": "472400"
  },
  {
    "text": "uh nothing more nothing more more interps the",
    "start": "472400",
    "end": "477960"
  },
  {
    "text": "better that's all and there are many restrictions about that okay remember uh",
    "start": "477960",
    "end": "483319"
  },
  {
    "text": "the the the the stack and the H must be as far as apart and I don't want to create fragmentation the pro",
    "start": "483319",
    "end": "489800"
  },
  {
    "text": "fragmentation is a big one the next one then second weakness when we talk in computer",
    "start": "489800",
    "end": "494879"
  },
  {
    "text": "science when we think about random numbers immediately we think about a uniform distribution nobody thinks",
    "start": "494879",
    "end": "501479"
  },
  {
    "text": "about normal or a triangular or any other logarithmic oron is for statistic",
    "start": "501479",
    "end": "508520"
  },
  {
    "text": "people okay so we think in a uniform a flat something like that with some",
    "start": "508520",
    "end": "514000"
  },
  {
    "text": "noise what about if we don't have an uniform what about the the addresses of the of the aslr are not equally",
    "start": "514000",
    "end": "521039"
  },
  {
    "text": "distributed okay in ital it is not bad okay for example something like this means that this is not uniform because",
    "start": "521039",
    "end": "527800"
  },
  {
    "text": "in the in the side we have a Shar drop almost close to zero but there's a large",
    "start": "527800",
    "end": "533640"
  },
  {
    "text": "area of Randomness okay this is a triangular okay and here this is something different we attacker can",
    "start": "533640",
    "end": "539880"
  },
  {
    "text": "focus on this element this values okay this is a this represents an histogram",
    "start": "539880",
    "end": "545079"
  },
  {
    "text": "so this is the probability of finding uh this address this is normalized from 0",
    "start": "545079",
    "end": "551040"
  },
  {
    "text": "to 100 we will see later this value we can see it this is not good from the point of",
    "start": "551040",
    "end": "557760"
  },
  {
    "text": "view of the defender from the point of view of the attacker this is fine okay I will try to use these addresses these",
    "start": "557760",
    "end": "563200"
  },
  {
    "text": "addresses are more likely much more likely than this one so in fact I will never use it okay so",
    "start": "563200",
    "end": "569880"
  },
  {
    "text": "do we see this in real in real implementation the answer is yes libraries in in the implementation of",
    "start": "569880",
    "end": "576839"
  },
  {
    "text": "packs in 32 bits follows exactly that a triangular and in 64 bits follows something like this this is not a gaus",
    "start": "576839",
    "end": "583640"
  },
  {
    "text": "distri gaus bell it's called iru hole distribution why this happens this",
    "start": "583640",
    "end": "590519"
  },
  {
    "text": "happens because adding two random numbers of the same range gives a",
    "start": "590519",
    "end": "595600"
  },
  {
    "text": "triangular and adding three numbers of the same range gives this this",
    "start": "595600",
    "end": "600959"
  },
  {
    "text": "distribution okay in both cases it's not bad I mean there is entropy okay that's good is very very",
    "start": "600959",
    "end": "608560"
  },
  {
    "text": "nice but not as much as as initially expect one in fact in the Triangular you",
    "start": "608560",
    "end": "615839"
  },
  {
    "text": "have one bit less okay this is the this is the way to compute this is",
    "start": "615839",
    "end": "621360"
  },
  {
    "text": "internally they are going to calculate the address of the eslr is doing using",
    "start": "621360",
    "end": "627040"
  },
  {
    "text": "the sum of two random values of the same Ranch and uh in 64 bits we don't see it",
    "start": "627040",
    "end": "632240"
  },
  {
    "text": "but is the sum of three different of 2 to the^ 27 okay",
    "start": "632240",
    "end": "639160"
  },
  {
    "text": "so okay uh next weakness let's see okay next",
    "start": "639160",
    "end": "647839"
  },
  {
    "text": "weakness correlation between objects let's see all the all the",
    "start": "647839",
    "end": "654279"
  },
  {
    "text": "elements we are not playing with one single uh execut not executable we're",
    "start": "654279",
    "end": "660519"
  },
  {
    "text": "playing with entropy of different objects what about if all the all the objects are put side by side all",
    "start": "660519",
    "end": "666760"
  },
  {
    "text": "together if by any reason there is a infol of one address belonging to one of the module then we know Theos of the",
    "start": "666760",
    "end": "673639"
  },
  {
    "text": "others okay that is called correlation between objects we call it that way so",
    "start": "673639",
    "end": "680120"
  },
  {
    "text": "knowing some information having some information about one object if it gives",
    "start": "680120",
    "end": "685760"
  },
  {
    "text": "you a hint about where another one is placed we call it correlation okay Hector will show you an",
    "start": "685760",
    "end": "693600"
  },
  {
    "text": "example of direct correlation very fast zero total absolute correlation call",
    "start": "693600",
    "end": "698760"
  },
  {
    "text": "offset do leave but and recently two weeks ago the metaphor the people from",
    "start": "698760",
    "end": "703839"
  },
  {
    "text": "North bit uh publish the metaphor attack um which uses the correlation property",
    "start": "703839",
    "end": "711200"
  },
  {
    "text": "and all the libraries are correlated means all the libraries are put are loed",
    "start": "711200",
    "end": "716399"
  },
  {
    "text": "in memory side by side so if you break the of one Library you can jump you can",
    "start": "716399",
    "end": "722160"
  },
  {
    "text": "exploit the book on another okay they used both this correlation and also in",
    "start": "722160",
    "end": "727760"
  },
  {
    "text": "32 bits the low entropy so they make a small Brute Force against one Library which is uh has special uh configuration",
    "start": "727760",
    "end": "736519"
  },
  {
    "text": "and once knows the direction of the library then then jump to the to the Target okay and there",
    "start": "736519",
    "end": "744160"
  },
  {
    "text": "are more interesting things about correlation for example um",
    "start": "744160",
    "end": "750279"
  },
  {
    "text": "when well this is more uh if all the V are put together one",
    "start": "750279",
    "end": "755680"
  },
  {
    "text": "side by side knowing one you immediately know the other but there are other",
    "start": "755680",
    "end": "761440"
  },
  {
    "text": "places that in correlation can be useful for example when two objects A and B are correlated and one object B has more",
    "start": "761440",
    "end": "769040"
  },
  {
    "text": "entropy than a and the condition entropy of B once",
    "start": "769040",
    "end": "774600"
  },
  {
    "text": "you know a is smaller than the absolute of B then",
    "start": "774600",
    "end": "780279"
  },
  {
    "text": "is useful okay so let put some numbers because I'm going to skip this a little bit so in Linux okay H pages are",
    "start": "780279",
    "end": "788160"
  },
  {
    "text": "randomized with this amount of entropy 19 bits libraries use 28 bits for we are",
    "start": "788160",
    "end": "796240"
  },
  {
    "text": "not going on enter because it's alignment uh H Pages has more align bit",
    "start": "796240",
    "end": "801560"
  },
  {
    "text": "align bits because of pages are larger okay the quy between those kind of",
    "start": "801560",
    "end": "808120"
  },
  {
    "text": "object are 9 B be so if I try to attack to guess assuming that we have a vector",
    "start": "808120",
    "end": "815199"
  },
  {
    "text": "to do that uh the libraries we can we have to make an effort of two to the point of 28 okay three days but if I",
    "start": "815199",
    "end": "824320"
  },
  {
    "text": "attack a Brute Force first Hue Pages if if I can and then knowing where the Hue",
    "start": "824320",
    "end": "830680"
  },
  {
    "text": "pages on that system are located trying to jump trying to guess to know where the LI are the attack consist on",
    "start": "830680",
    "end": "837680"
  },
  {
    "text": "breaking or BL 2 to the 19 plus 2 to the",
    "start": "837680",
    "end": "844079"
  },
  {
    "text": "power of 9 which result in 8 minutes okay so splitting the attack in two steps makes",
    "start": "844079",
    "end": "853079"
  },
  {
    "text": "much faster a lot faster okay H pages today I",
    "start": "853079",
    "end": "858880"
  },
  {
    "text": "mean it is basically H pages are using databases and some scientific",
    "start": "858880",
    "end": "863959"
  },
  {
    "text": "applications but maybe in the future they it is going to be using in a transparent way to BL huge libraries or",
    "start": "863959",
    "end": "870440"
  },
  {
    "text": "something like that it depends on the configuration of the system okay next uh okay next one The",
    "start": "870440",
    "end": "880320"
  },
  {
    "text": "Inheritance this is a form of correlation but correlation between a father and a child process so basically",
    "start": "880320",
    "end": "887199"
  },
  {
    "text": "the idea is here we have a child process and and this is another children there are siblings let's suppose both process",
    "start": "887199",
    "end": "893839"
  },
  {
    "text": "are siblings so we we say that there is inheritance",
    "start": "893839",
    "end": "899240"
  },
  {
    "text": "uh weakness if the position where a map will be placed in one CH is the same or",
    "start": "899240",
    "end": "907600"
  },
  {
    "text": "can be used to guess what where will be the the position of another map so in",
    "start": "907600",
    "end": "913360"
  },
  {
    "text": "other words I am a child and all my siblings a child of a process all my siblings I can imagine what are going to",
    "start": "913360",
    "end": "921240"
  },
  {
    "text": "be the future positions of the maps so I can know the future layout of All My",
    "start": "921240",
    "end": "927440"
  },
  {
    "text": "Siblings okay that is the typical behavior of fork but is how",
    "start": "927440",
    "end": "933079"
  },
  {
    "text": "it works okay and this is affects or it is interesting in applications or",
    "start": "933079",
    "end": "939240"
  },
  {
    "text": "Frameworks or or architectur that use a lot of forking forking without exec okay",
    "start": "939240",
    "end": "945120"
  },
  {
    "text": "because ex renews all the all the secrets of the process the canary the the and the aslr so Android withot for",
    "start": "945120",
    "end": "952199"
  },
  {
    "text": "example this kind of has this kind of let's say weakness uh many lunchers using some luncher using in this TOS",
    "start": "952199",
    "end": "959560"
  },
  {
    "text": "Chrome browser has also a similar concept about toot and any process that",
    "start": "959560",
    "end": "964639"
  },
  {
    "text": "uses the forking model for example Apache also uses the for model and so on okay so what I said uh you can",
    "start": "964639",
    "end": "973120"
  },
  {
    "text": "predict the future of the layout of your siblings or you and and that's all okay",
    "start": "973120",
    "end": "978759"
  },
  {
    "text": "going faster iser we have developed a tool",
    "start": "978759",
    "end": "984440"
  },
  {
    "text": "which as I said back is is is a nice tool it was great but has has basically",
    "start": "984440",
    "end": "989560"
  },
  {
    "text": "two books I mean the entropy is not computed in a nice way let's say and um",
    "start": "989560",
    "end": "996120"
  },
  {
    "text": "and the uh and there are some books in in the way it collects the the addresses",
    "start": "996120",
    "end": "1003440"
  },
  {
    "text": "okay so and we need a much more powerful tool so we develop a tool with two",
    "start": "1003440",
    "end": "1008680"
  },
  {
    "text": "elements the sampler which is uh it collects a lot of data a lot of addresses a lot of uh information about",
    "start": "1008680",
    "end": "1015839"
  },
  {
    "text": "the layout of process and they analyzer computed several statistical parameters",
    "start": "1015839",
    "end": "1021240"
  },
  {
    "text": "individual uh you you're not going to see okay yeah here statistical analysis",
    "start": "1021240",
    "end": "1026319"
  },
  {
    "text": "distribu plots and several ways to to measure entropy entropy is very difficult to to to to manage to",
    "start": "1026319",
    "end": "1033798"
  },
  {
    "text": "understand and to measure okay uh a simple measure of entropy is not is not",
    "start": "1033799",
    "end": "1039360"
  },
  {
    "text": "enough okay so this is the how it works we can samply sample a system or many",
    "start": "1039360",
    "end": "1045520"
  },
  {
    "text": "systems and then the analyzer collects all the information put all together perform statistical analysis and and",
    "start": "1045520",
    "end": "1050799"
  },
  {
    "text": "displays it in in a in a bre okay this is what we will see okay so it is",
    "start": "1050799",
    "end": "1056880"
  },
  {
    "text": "possible to to compare several systems to compare the main stack of uh and all",
    "start": "1056880",
    "end": "1062400"
  },
  {
    "text": "the information in the white paper and we will show you is taking this tool okay the tool",
    "start": "1062400",
    "end": "1067720"
  },
  {
    "text": "gives two things I think it's very important to understand uh and to play and to really make useful thing we need",
    "start": "1067720",
    "end": "1075400"
  },
  {
    "text": "nice and easy to use tools and very graphical okay there are a lot of information here",
    "start": "1075400",
    "end": "1081200"
  },
  {
    "text": "you cannot even imagine I mean uh here well here you imagine even see because here says ex Hep there are maps here",
    "start": "1081200",
    "end": "1089720"
  },
  {
    "text": "okay and here are for example an example of what are all the statistical parameters that are given by the tool",
    "start": "1089720",
    "end": "1097000"
  },
  {
    "text": "how fit how much uh the distribution fits a uniform using the statistical uh",
    "start": "1097000",
    "end": "1104080"
  },
  {
    "text": "mcpon CH goodness estimator and several uh views of the same uh object of the",
    "start": "1104080",
    "end": "1111039"
  },
  {
    "text": "same data the more information the better okay the mean the mode the the",
    "start": "1111039",
    "end": "1116200"
  },
  {
    "text": "standard divis three parameters for Randomness how many random bits we have",
    "start": "1116200",
    "end": "1121679"
  },
  {
    "text": "what is a shanon entropy as it is the the expession of the equation and the",
    "start": "1121679",
    "end": "1126960"
  },
  {
    "text": "sum of the shanon entropy of individual bytes and if we imagine more ways to to",
    "start": "1126960",
    "end": "1133000"
  },
  {
    "text": "to measure entropy with the better okay and and the",
    "start": "1133000",
    "end": "1139679"
  },
  {
    "text": "correlation this is the typical correlation mat but we need something more more powerful which we are",
    "start": "1139679",
    "end": "1145480"
  },
  {
    "text": "developing we're still working on it which is the the co co entropy is",
    "start": "1145480",
    "end": "1151080"
  },
  {
    "text": "something that is not is not possible it's not easy to to uh to measure in",
    "start": "1151080",
    "end": "1157320"
  },
  {
    "text": "such a big uh space of because the other space is very",
    "start": "1157320",
    "end": "1162400"
  },
  {
    "text": "huge okay so that's all ah okay I don't know how much",
    "start": "1162400",
    "end": "1170720"
  },
  {
    "text": "five minutes okay I can show you the tool yeah it's nice to see because it's so we",
    "start": "1171000",
    "end": "1177080"
  },
  {
    "text": "can have it I I I have been as fast as possible",
    "start": "1177080",
    "end": "1186600"
  },
  {
    "text": "minut so let's wait a little",
    "start": "1186919",
    "end": "1191120"
  },
  {
    "text": "bit Firefox and then CMP whatever",
    "start": "1193400",
    "end": "1199440"
  },
  {
    "text": "okay now I will show you no",
    "start": "1199440",
    "end": "1206120"
  },
  {
    "text": "yes okay index here",
    "start": "1206120",
    "end": "1212280"
  },
  {
    "text": "and IND okay let's see we can show you okay so this is for example the output",
    "start": "1212280",
    "end": "1219840"
  },
  {
    "text": "um the output is very handly in the sense that you can I mean for example",
    "start": "1219840",
    "end": "1225400"
  },
  {
    "text": "here says information about what is the exact uh system where all these data has",
    "start": "1225400",
    "end": "1230640"
  },
  {
    "text": "been collected uh what is the and some information about Bas size",
    "start": "1230640",
    "end": "1237120"
  },
  {
    "text": "minimum address as much information as we can let's go here for example and if",
    "start": "1237120",
    "end": "1242520"
  },
  {
    "text": "we click we can well we have to make it smaller okay here okay so we can see it",
    "start": "1242520",
    "end": "1250080"
  },
  {
    "text": "and when we put over one of the maps for Min stack we see",
    "start": "1250080",
    "end": "1255320"
  },
  {
    "text": "nothing let's see uh okay too",
    "start": "1255320",
    "end": "1261880"
  },
  {
    "text": "much it is going to be some some here well this is",
    "start": "1261880",
    "end": "1267480"
  },
  {
    "text": "40 uh 32 yeah this",
    "start": "1267480",
    "end": "1272158"
  },
  {
    "text": "one so like that okay so we can see where each of the mass is located or all",
    "start": "1272960",
    "end": "1279320"
  },
  {
    "text": "together or all together okay so we can see the layout and this is for example",
    "start": "1279320",
    "end": "1284640"
  },
  {
    "text": "in fact with is the lest memory the block that can be 32 bits because",
    "start": "1284640",
    "end": "1292360"
  },
  {
    "text": "because fation is normal and so on okay so here we have here we have theil of the you",
    "start": "1292360",
    "end": "1300840"
  },
  {
    "text": "see nothing but okay wait wait wa I don't know what is happening here",
    "start": "1300840",
    "end": "1308159"
  },
  {
    "text": "let's see oh it is wa a little bit no yeah ah",
    "start": "1308159",
    "end": "1316000"
  },
  {
    "text": "okay so we can see the Hep or or the main stack or dynamic loer okay here we",
    "start": "1316000",
    "end": "1322000"
  },
  {
    "text": "can see that the Triangular that I show you before is real data collected",
    "start": "1322000",
    "end": "1327360"
  },
  {
    "text": "or the map some others okay this is for example Hue",
    "start": "1327360",
    "end": "1333120"
  },
  {
    "text": "pages is there pages but the entropy solo and some solo bits the reent gaps",
    "start": "1333120",
    "end": "1341240"
  },
  {
    "text": "there are some otheres that never happens okay so we can see it and then at the end we have the uh uh okay",
    "start": "1341240",
    "end": "1349559"
  },
  {
    "text": "nothing more the entropy so for in this case we can see that the arguments and",
    "start": "1349559",
    "end": "1354679"
  },
  {
    "text": "the main stack are correlated the hip and the and the malog we collect it is",
    "start": "1354679",
    "end": "1362600"
  },
  {
    "text": "possible to collect as many objects as you can and you can repeat or whatever so so you can make a",
    "start": "1362600",
    "end": "1368440"
  },
  {
    "text": "very analysis of many object different different okay I will not you I",
    "start": "1368440",
    "end": "1374919"
  },
  {
    "text": "mean and this and the way to collect it well it's necessary",
    "start": "1374919",
    "end": "1380000"
  },
  {
    "text": "okay ector will continue with the presentation oops",
    "start": "1380000",
    "end": "1386760"
  },
  {
    "text": "what okay hello my name is Hector",
    "start": "1386760",
    "end": "1393520"
  },
  {
    "text": "so as you can imagine we cannot detail the or we cannot explain uh the four",
    "start": "1393520",
    "end": "1401360"
  },
  {
    "text": "weaknesses in detail but I'm going to show you how to exploit one of them how",
    "start": "1401360",
    "end": "1407520"
  },
  {
    "text": "to bypass the in INX uh tack sming protector and aslr in a 64bit",
    "start": "1407520",
    "end": "1414080"
  },
  {
    "text": "architecture in less than 1 second exploiting uh one M ability we call obset to live okay so this is uh an",
    "start": "1414080",
    "end": "1422159"
  },
  {
    "text": "example of how to exploit one of the weaknesses is M have",
    "start": "1422159",
    "end": "1427600"
  },
  {
    "text": "per so one second I have",
    "start": "1427600",
    "end": "1434400"
  },
  {
    "text": "okay so as is say the problem appears uh when when the executable is p compile",
    "start": "1434559",
    "end": "1442039"
  },
  {
    "text": "because uh the executable is uh low out in memory side by side together with the",
    "start": "1442039",
    "end": "1448520"
  },
  {
    "text": "libraries so maybe you think that aslr is a a",
    "start": "1448520",
    "end": "1454720"
  },
  {
    "text": "mechanism which LS every object in every place of the memory but actually for",
    "start": "1454720",
    "end": "1460720"
  },
  {
    "text": "instance to to randomize the libraries only the first one is randomized the the",
    "start": "1460720",
    "end": "1465919"
  },
  {
    "text": "other ones is lo by side by side to the first object to the first Library sence",
    "start": "1465919",
    "end": "1471240"
  },
  {
    "text": "the executable is by compile uh the first object sh object is the executable",
    "start": "1471240",
    "end": "1477799"
  },
  {
    "text": "which this means that the executable is together to the libraries so if we are",
    "start": "1477799",
    "end": "1483320"
  },
  {
    "text": "able to leak an address belonging to the executable then we can uh directly",
    "start": "1483320",
    "end": "1490200"
  },
  {
    "text": "without any effort obtain the addresses where the libraries are may be",
    "start": "1490200",
    "end": "1495799"
  },
  {
    "text": "Memory so I will show you an example exle if you executing your system because uh this vulnerability is already",
    "start": "1495799",
    "end": "1503000"
  },
  {
    "text": "present in in current systems this what fix in Linux 4.0 4.1 I don't",
    "start": "1503000",
    "end": "1509120"
  },
  {
    "text": "remember uh the executable is in in that direction and the libraries are as you",
    "start": "1509120",
    "end": "1515159"
  },
  {
    "text": "can see an offset as I will show you in a second I'm sorry whoa",
    "start": "1515159",
    "end": "1524600"
  },
  {
    "text": "sorry I press the wrong button",
    "start": "1524600",
    "end": "1529600"
  },
  {
    "text": "so the distance between the executable and the library is constant",
    "start": "1534840",
    "end": "1539880"
  },
  {
    "text": "okay the same to the any other library of course so we name this invariant",
    "start": "1539880",
    "end": "1545000"
  },
  {
    "text": "distance offset to Li okay",
    "start": "1545000",
    "end": "1550159"
  },
  {
    "text": "uh okay this one second so uh this is",
    "start": "1550159",
    "end": "1555919"
  },
  {
    "text": "just is not a vulner ility exploitable by itself is more like a information",
    "start": "1555919",
    "end": "1563440"
  },
  {
    "text": "that the attacker can use to do attack faster or or or more",
    "start": "1563440",
    "end": "1568600"
  },
  {
    "text": "reliable okay it's not okay I'm going to use this to bypass the SLR in all system",
    "start": "1568600",
    "end": "1574799"
  },
  {
    "text": "it's it's at the end it depends in a lot of things but I'm going to show you the the tips that an attacker need to do to",
    "start": "1574799",
    "end": "1583960"
  },
  {
    "text": "to exploit a correlation weakness the OB weakness and bypass the three Pro the",
    "start": "1583960",
    "end": "1589120"
  },
  {
    "text": "three most know protections so the first step is extracting the the stacking information the second one is Brute",
    "start": "1589120",
    "end": "1595760"
  },
  {
    "text": "Force part of the save IP calculate I'm going to to detail this this steps okay in order to go",
    "start": "1595760",
    "end": "1602480"
  },
  {
    "text": "faster so at the end we we need to to to to obtain an address belonging to to the",
    "start": "1602480",
    "end": "1609039"
  },
  {
    "text": "application okay as I say before so in this example I'm going to exploit a stack buffer",
    "start": "1609039",
    "end": "1614679"
  },
  {
    "text": "overflow and and then uh Over All perform a brute force or obtain the the",
    "start": "1614679",
    "end": "1621360"
  },
  {
    "text": "address in the in the stack in order to use this address to to to to to use this",
    "start": "1621360",
    "end": "1628320"
  },
  {
    "text": "address to calculate the offset where the libraries I made in memory okay I will show you in a",
    "start": "1628320",
    "end": "1634240"
  },
  {
    "text": "moment so a lot is not okay so the the point",
    "start": "1634240",
    "end": "1640840"
  },
  {
    "text": "here is uh we have a vulnerable function okay when we call this vulnerable",
    "start": "1640840",
    "end": "1646720"
  },
  {
    "text": "function we we that this have a a buffer overflow like this so when the buffer is",
    "start": "1646720",
    "end": "1654279"
  },
  {
    "text": "overr the return address on the stack is also overwriting so we don't know what value put here okay because it's all",
    "start": "1654279",
    "end": "1662640"
  },
  {
    "text": "randomized but we know something what we",
    "start": "1662640",
    "end": "1668679"
  },
  {
    "text": "know okay we know that the highest bits are always the same okay if you try to",
    "start": "1668679",
    "end": "1676440"
  },
  {
    "text": "to run an application in Linux uh you can check that the highest 44 bits are",
    "start": "1676440",
    "end": "1681679"
  },
  {
    "text": "the same okay the same happen in the lowest bit",
    "start": "1681679",
    "end": "1687559"
  },
  {
    "text": "from the elf you can obtain the the lowest bit where the next",
    "start": "1687559",
    "end": "1693720"
  },
  {
    "text": "instruction to the call to the vulnerable function is in executable so",
    "start": "1693720",
    "end": "1698919"
  },
  {
    "text": "in this case this this bit can be directly put in the no address we are",
    "start": "1698919",
    "end": "1707640"
  },
  {
    "text": "looking for okay so at the end we have some information about the address this is",
    "start": "1707640",
    "end": "1715399"
  },
  {
    "text": "offline okay this is fast and offline you don't need to do any attack to the",
    "start": "1715399",
    "end": "1720640"
  },
  {
    "text": "server you can obtain this information so in order to uh obtain the",
    "start": "1720640",
    "end": "1729559"
  },
  {
    "text": "remain bites or bits we are going to perform a Brute Force attack against the",
    "start": "1729559",
    "end": "1734679"
  },
  {
    "text": "save IP the save IP address so the that isn't on the stack so the first one is special",
    "start": "1734679",
    "end": "1743000"
  },
  {
    "text": "because we already have H the number two in this bite so we only need to perform",
    "start": "1743000",
    "end": "1748919"
  },
  {
    "text": "60 attempts in order to guess what is the the idea is that we are we are only to overwrite part of the return address",
    "start": "1748919",
    "end": "1757279"
  },
  {
    "text": "on the stack only only this part since we know this this first bite we can put",
    "start": "1757279",
    "end": "1763120"
  },
  {
    "text": "one over right that put for instance 1 2 d f and if we got across then we can try",
    "start": "1763120",
    "end": "1769880"
  },
  {
    "text": "two two and we got across 3 two until we get the correct bite okay so guess the",
    "start": "1769880",
    "end": "1776720"
  },
  {
    "text": "second bite only uh cost 60 attempts in the worst",
    "start": "1776720",
    "end": "1781840"
  },
  {
    "text": "case okay we assume that is C2 okay we can put in our book",
    "start": "1781840",
    "end": "1787159"
  },
  {
    "text": "C2 and the remaining three bites we can perform the same strategy the same idea perform another buy4 by attack so but",
    "start": "1787159",
    "end": "1794399"
  },
  {
    "text": "instead of 60 uh attempts uh we need to perform in the worst case at",
    "start": "1794399",
    "end": "1800679"
  },
  {
    "text": "216 okay so this is not C but at the end we",
    "start": "1800679",
    "end": "1809200"
  },
  {
    "text": "have uh we have obtained the the REM bites okay and the number of attempts is",
    "start": "1809200",
    "end": "1815760"
  },
  {
    "text": "only uh less than 1,000 is 768 B",
    "start": "1815760",
    "end": "1823240"
  },
  {
    "text": "sorry well okay so once we have the",
    "start": "1823240",
    "end": "1829080"
  },
  {
    "text": "address on the stack we need to know where the executable is in memory",
    "start": "1829080",
    "end": "1834519"
  },
  {
    "text": "because this address is not the the the base of the executable okay so we can",
    "start": "1834519",
    "end": "1841159"
  },
  {
    "text": "calculate here we need a we need a a symbol in order to to do the correct operation this is a mistake so the",
    "start": "1841159",
    "end": "1847960"
  },
  {
    "text": "application B can base can be calculate as as I show you here the the only trick",
    "start": "1847960",
    "end": "1855919"
  },
  {
    "text": "here that even I show uh maybe you know the um the blind blind",
    "start": "1855919",
    "end": "1862919"
  },
  {
    "text": "attack use a similar strategy that that us but I think they forget to adjust the",
    "start": "1862919",
    "end": "1869320"
  },
  {
    "text": "text bash area so we need to know the",
    "start": "1869320",
    "end": "1874600"
  },
  {
    "text": "offset from the executable where the call is made in order to Adu the",
    "start": "1874600",
    "end": "1879919"
  },
  {
    "text": "application bying memory okay maybe it's a little bit tricky faster so doing this operation we obtain",
    "start": "1879919",
    "end": "1888360"
  },
  {
    "text": "the in the left the where the executable is in memory so once we have one we know",
    "start": "1888360",
    "end": "1895360"
  },
  {
    "text": "where the executable is in memory just uh doing a simple operation we can obtain where the libraries uh are in",
    "start": "1895360",
    "end": "1901760"
  },
  {
    "text": "memory and then can we can build ROP attacks or whatever you want so we have here some uh precalculated offsets to in",
    "start": "1901760",
    "end": "1910600"
  },
  {
    "text": "depending on the on the system so you can do this offline basically so this is a the the example I",
    "start": "1910600",
    "end": "1918840"
  },
  {
    "text": "told you the LI is doing this simple operation I subtract the OBET the",
    "start": "1918840",
    "end": "1925039"
  },
  {
    "text": "objectset to lip to the to the text uh B",
    "start": "1925039",
    "end": "1931840"
  },
  {
    "text": "address so to show you a more realistic proof of concept this is uh this is our",
    "start": "1931840",
    "end": "1938639"
  },
  {
    "text": "our system this is where the system we are going to face so we are going to bypass the the",
    "start": "1938639",
    "end": "1945000"
  },
  {
    "text": "non-executable bit the stack machine protector the add SP randomization the fortifi the rail Ru uh also it worth to",
    "start": "1945000",
    "end": "1953000"
  },
  {
    "text": "mention that we don't use go PS and I I run this in in my current",
    "start": "1953000",
    "end": "1958679"
  },
  {
    "text": "laptop so it's full updated uh today this morning I update my",
    "start": "1958679",
    "end": "1964840"
  },
  {
    "text": "laptop uh to today so and the demo is the following I'm going to show you",
    "start": "1964840",
    "end": "1973320"
  },
  {
    "text": "so uh this is the server which have a stack buffer overflow a typical stack buffer overflow okay it's compiled with",
    "start": "1978120",
    "end": "1985519"
  },
  {
    "text": "the maximum protections I'm going to show you",
    "start": "1985519",
    "end": "1991440"
  },
  {
    "text": "quickly P protector okay to maybe this is a anyway",
    "start": "1994679",
    "end": "2002080"
  },
  {
    "text": "so the server is running in this in this port and we are going to launch the",
    "start": "2002080",
    "end": "2009480"
  },
  {
    "text": "one second",
    "start": "2009480",
    "end": "2013600"
  },
  {
    "text": "anyway okay the exploit want a a server and a port so since I am in Local Host I",
    "start": "2018559",
    "end": "2025120"
  },
  {
    "text": "will put Local Host on the port 999 and this is going to perform a Brute Force attack and the against the the the",
    "start": "2025120",
    "end": "2032159"
  },
  {
    "text": "return address on the stack and then calculate all the steps I show you and",
    "start": "2032159",
    "end": "2038279"
  },
  {
    "text": "then uh boiled a rope and then got a shell okay this is a 64bit machine okay",
    "start": "2038279",
    "end": "2045600"
  },
  {
    "text": "with all protections",
    "start": "2045600",
    "end": "2049240"
  },
  {
    "text": "so oh sorry I have to uh there are a protection mean well it's",
    "start": "2064800",
    "end": "2071679"
  },
  {
    "text": "not a protection actually it's a a crash reported in in Ubuntu by default that uh",
    "start": "2071679",
    "end": "2077398"
  },
  {
    "text": "every single process uh every time that a a process crashes they write a a report on the disk so my laptop is not",
    "start": "2077399",
    "end": "2084878"
  },
  {
    "text": "very very fast so right now they are rating uh this reports with consume a",
    "start": "2084879",
    "end": "2090679"
  },
  {
    "text": "lot of time but I'm going to disable one second it's not a security mechanism okay",
    "start": "2090679",
    "end": "2098399"
  },
  {
    "text": "okay I stopped the crash report generation and as you can see in the",
    "start": "2117560",
    "end": "2123640"
  },
  {
    "text": "other window know where is it",
    "start": "2123640",
    "end": "2128960"
  },
  {
    "text": "there are a lot of Stack sming detected but anyway so I launch again this",
    "start": "2128960",
    "end": "2136560"
  },
  {
    "text": "exploit and now I expect yeah okay more or less one second",
    "start": "2136560",
    "end": "2143560"
  },
  {
    "text": "we got a a shell as you can see here a root shell so we are bypassing the the",
    "start": "2143560",
    "end": "2148640"
  },
  {
    "text": "three most uh no protection mechanism okay this is just to show you what what",
    "start": "2148640",
    "end": "2154000"
  },
  {
    "text": "uh or how D Ro can be a a correlation weakness okay",
    "start": "2154000",
    "end": "2159640"
  },
  {
    "text": "so one second so to to Sol this weakness we can",
    "start": "2159839",
    "end": "2166960"
  },
  {
    "text": "use directly packs because packs already put executable apart from the libraries it's not in the same area so this",
    "start": "2166960",
    "end": "2173839"
  },
  {
    "text": "vulnerability does not affect packs also we send a patch to to the L kernel so in",
    "start": "2173839",
    "end": "2179680"
  },
  {
    "text": "for versions uh rather than for one is also not a problem and there are an",
    "start": "2179680",
    "end": "2186200"
  },
  {
    "text": "specific protection for stack over flows called which which name is renew stack smashing protector uh this is a",
    "start": "2186200",
    "end": "2193319"
  },
  {
    "text": "particular solution for stack buffer over flows which uh prevents Brute Force attacks against the stack smashing",
    "start": "2193319",
    "end": "2199359"
  },
  {
    "text": "protector okay so the the solution in the kernel for that one we have the",
    "start": "2199359",
    "end": "2205079"
  },
  {
    "text": "executable uh in the same more or less addresses that the libraries and with",
    "start": "2205079",
    "end": "2211079"
  },
  {
    "text": "the p the executable is in different ones so if you guess an address here you",
    "start": "2211079",
    "end": "2217599"
  },
  {
    "text": "cannot use this address to get to obtain where the library is is in memory so this the PA is as simple as",
    "start": "2217599",
    "end": "2224640"
  },
  {
    "text": "that so uh we're going to present also the address spay L randomization Next",
    "start": "2224640",
    "end": "2232000"
  },
  {
    "text": "Generation with of course avoid this weak this weakness and the other four ones presented by",
    "start": "2232000",
    "end": "2238920"
  },
  {
    "text": "Ismael but it's worth to mention quickly aside how we solve the the the this",
    "start": "2238920",
    "end": "2244480"
  },
  {
    "text": "correlation problem as I say before I'm going faster because I say already uh",
    "start": "2244480",
    "end": "2250240"
  },
  {
    "text": "the problem is that the executable are joined to the library so just my moving the executable uh far away from the",
    "start": "2250240",
    "end": "2256640"
  },
  {
    "text": "libraries the problem is solved okay so uh this attack was uh rewarded",
    "start": "2256640",
    "end": "2264200"
  },
  {
    "text": "by by packet the storm we sent a patch to the Linux kernel okay but what about",
    "start": "2264200",
    "end": "2270400"
  },
  {
    "text": "the other weaknesses it is possible to remove all all the other weaknesses because it seems that it's",
    "start": "2270400",
    "end": "2276359"
  },
  {
    "text": "quite quite difficult because the hip cannot put cannot be put",
    "start": "2276359",
    "end": "2281480"
  },
  {
    "text": "in the top or the stack at the bottom otherwise the stack cannot cannot grow as much as they want and the and the",
    "start": "2281480",
    "end": "2289160"
  },
  {
    "text": "weaknesses appear because of that because the limitations so the idea is",
    "start": "2289160",
    "end": "2296400"
  },
  {
    "text": "uh that if we can bound growable",
    "start": "2296400",
    "end": "2302160"
  },
  {
    "text": "objects we are able to move this objects around the full virtual memory space",
    "start": "2302160",
    "end": "2307240"
  },
  {
    "text": "okay okay instead of allow the stack grows we can bound the",
    "start": "2307240",
    "end": "2312760"
  },
  {
    "text": "stack so if we have not uh growable areas then we can uh move the objects",
    "start": "2312760",
    "end": "2321319"
  },
  {
    "text": "anywhere in the viral memories space this provide us a huge",
    "start": "2321319",
    "end": "2326800"
  },
  {
    "text": "increment of entropy and also because we have no restrictions or",
    "start": "2326800",
    "end": "2333160"
  },
  {
    "text": "because we have no uh calculate some other addresses using other addresses",
    "start": "2333160",
    "end": "2340640"
  },
  {
    "text": "for instance the executable is in a random location but the hip is calculated using where the executable is",
    "start": "2340640",
    "end": "2347680"
  },
  {
    "text": "in memory and adding another random value so when you start to do these kind of things uh then start to appear",
    "start": "2347680",
    "end": "2355040"
  },
  {
    "text": "problems like correlation on this so doing this simple idea I explain why",
    "start": "2355040",
    "end": "2364720"
  },
  {
    "text": "this not as simple we can have a lot of advantages and then uh prevent the four",
    "start": "2364720",
    "end": "2370200"
  },
  {
    "text": "weaknesses okay no no more likely addresses no more collected attacks and",
    "start": "2370200",
    "end": "2375480"
  },
  {
    "text": "even uh do a more secure forq model okay",
    "start": "2375480",
    "end": "2381000"
  },
  {
    "text": "this is a summary of our work in the in the new aslr that we are going to",
    "start": "2381000",
    "end": "2386520"
  },
  {
    "text": "present here we are presenting here uh basically we introduce new features like",
    "start": "2386520",
    "end": "2393480"
  },
  {
    "text": "the the possibility to map uh AIC specific request in a random Place using",
    "start": "2393480",
    "end": "2400280"
  },
  {
    "text": "the full virtual memory space okay right now if you want to map some file or",
    "start": "2400280",
    "end": "2405720"
  },
  {
    "text": "whatever you need to to call to M map and Linux uh will return return you uh",
    "start": "2405720",
    "end": "2411040"
  },
  {
    "text": "an address join to other objects join to the other libraries so we introduce a",
    "start": "2411040",
    "end": "2417040"
  },
  {
    "text": "new flag to to a map system call in order to uh put this concrete object uh",
    "start": "2417040",
    "end": "2423640"
  },
  {
    "text": "in a in a random Place using the full virtual memory okay but not only this uh there are a lot of new features we",
    "start": "2423640",
    "end": "2431599"
  },
  {
    "text": "can we have no time to explain uh all of them here but for example uh we have",
    "start": "2431599",
    "end": "2437200"
  },
  {
    "text": "improved how the Hep Works in Linux or we have improved uh the mm app system",
    "start": "2437200",
    "end": "2444599"
  },
  {
    "text": "call we have introduced the ability to uh randomize part of the address at both",
    "start": "2444599",
    "end": "2451000"
  },
  {
    "text": "time we call this bit slicing this is similar to per Bo randomization okay we fix a an the back using this",
    "start": "2451000",
    "end": "2459800"
  },
  {
    "text": "randomization okay maybe okay and it's not you cannot see here because is C but",
    "start": "2459800",
    "end": "2466520"
  },
  {
    "text": "uh we introduced the idea of isolate similar objects in similar regions of",
    "start": "2466520",
    "end": "2472480"
  },
  {
    "text": "memory so why uh thre stacks for instance need to be in the same area",
    "start": "2472480",
    "end": "2479520"
  },
  {
    "text": "than libraries so it is possible to detect this in the Kel in order to uh put this",
    "start": "2479520",
    "end": "2486880"
  },
  {
    "text": "uh together in another place in order to avoid correlation attacks in other words",
    "start": "2486880",
    "end": "2492839"
  },
  {
    "text": "if you obtain a leak or an address belonging to a 3 stack in current",
    "start": "2492839",
    "end": "2498040"
  },
  {
    "text": "implementations uh impacts in almost all cases but in Linux in all cases uh you",
    "start": "2498040",
    "end": "2504200"
  },
  {
    "text": "can use this address to the randomized libraries so why don't put the stacks in another place why don't don't don't put",
    "start": "2504200",
    "end": "2510720"
  },
  {
    "text": "all Stacks in the same area so all of these randomization forms",
    "start": "2510720",
    "end": "2517280"
  },
  {
    "text": "that we have introduced produce a lot of a lot of oh maybe too much uh",
    "start": "2517280",
    "end": "2523400"
  },
  {
    "text": "configurable options so we decide to to create four profiles modes in order to",
    "start": "2523400",
    "end": "2529359"
  },
  {
    "text": "uh to do the aslr NG more usable so the first one is the",
    "start": "2529359",
    "end": "2534640"
  },
  {
    "text": "concentrated which try to put all objects together okay this is the most",
    "start": "2534640",
    "end": "2539920"
  },
  {
    "text": "correlated one this obviously this uh you can use the coration weakness to",
    "start": "2539920",
    "end": "2545640"
  },
  {
    "text": "attack any any any object because all are together but the point here is",
    "start": "2545640",
    "end": "2552040"
  },
  {
    "text": "that you are saving a lot of page table size memory and you are not losing",
    "start": "2552040",
    "end": "2557559"
  },
  {
    "text": "entropy absolutely entropy okay from the from the outside the attacker is can",
    "start": "2557559",
    "end": "2563319"
  },
  {
    "text": "this thing can uh can know if the if the executable is in the top or is in the",
    "start": "2563319",
    "end": "2570079"
  },
  {
    "text": "bottom the executable can move free along the full virtual memory which provide a lot of entropy a lot of",
    "start": "2570079",
    "end": "2575640"
  },
  {
    "text": "absolute entropy so the conservative is more similar to Linux they try to put the stack in their",
    "start": "2575640",
    "end": "2582599"
  },
  {
    "text": "own area and the executable and the hip also and the other objects together in",
    "start": "2582599",
    "end": "2588800"
  },
  {
    "text": "this in the same area okay this is to to to to try to savee uh page table size",
    "start": "2588800",
    "end": "2597119"
  },
  {
    "text": "and to be the more compatible possible with current Linux so we create the",
    "start": "2597119",
    "end": "2603319"
  },
  {
    "text": "extend mode which for instance put all the straight Stacks together in order to",
    "start": "2603319",
    "end": "2609720"
  },
  {
    "text": "avoid correlation attacks between stacks and libraries or attacks uh stack in",
    "start": "2609720",
    "end": "2615520"
  },
  {
    "text": "executable okay and the paranoid mode which basically is the more secure but",
    "start": "2615520",
    "end": "2620559"
  },
  {
    "text": "is the more page TP size consuming because all objects are uh isolated each",
    "start": "2620559",
    "end": "2626920"
  },
  {
    "text": "other so there is no correlation between any object so this Sol the correlation",
    "start": "2626920",
    "end": "2632440"
  },
  {
    "text": "uh weakness but there is a problem if you use for instance the paranoid mode uh",
    "start": "2632440",
    "end": "2640200"
  },
  {
    "text": "there are a a lot of pce type size consuming so and another problem is it",
    "start": "2640200",
    "end": "2647640"
  },
  {
    "text": "is possible to map a big block of memory",
    "start": "2647640",
    "end": "2653280"
  },
  {
    "text": "and the answer here is no because the object is using uh random positions and",
    "start": "2653280",
    "end": "2660720"
  },
  {
    "text": "you are you cannot guarantee a large block of memory to solve this problem uh",
    "start": "2660720",
    "end": "2666520"
  },
  {
    "text": "we have solve the fragmentation issue that is is fragmentation by pre-",
    "start": "2666520",
    "end": "2671720"
  },
  {
    "text": "reserving half of the virtual memory layout so if you reserve half of the virtual memory layout and force that all",
    "start": "2671720",
    "end": "2679839"
  },
  {
    "text": "uh objects are uh loed randomly in the top for for instance uh then you can",
    "start": "2679839",
    "end": "2685960"
  },
  {
    "text": "guarantee large blocks large consecutive free blocks of memory okay the pr Reser",
    "start": "2685960",
    "end": "2693240"
  },
  {
    "text": "area is not always in the bottom is randomly in the top or in the bottom bottom in order to uh not lost uh",
    "start": "2693240",
    "end": "2700880"
  },
  {
    "text": "entropy it's a bit hard to explain here but we are not losing any bite of entropy using this mechanism to solve",
    "start": "2700880",
    "end": "2708000"
  },
  {
    "text": "the fragmentation so comparing the fragmentation the fragmentation uh as we",
    "start": "2708000",
    "end": "2714880"
  },
  {
    "text": "can see Linux provides almost 2 GB of free consecutive space PX uh is half",
    "start": "2714880",
    "end": "2723839"
  },
  {
    "text": "more or less half of the Linux and a RNG or proposal is half of the virtual",
    "start": "2723839",
    "end": "2731720"
  },
  {
    "text": "memory layout so I think oability is important so the only thing that is not very good",
    "start": "2731720",
    "end": "2740240"
  },
  {
    "text": "from pxs I think is that they can allocate large blocks for instance you cannot open a or you cannot map a video",
    "start": "2740240",
    "end": "2748520"
  },
  {
    "text": "of one gigabyte for instance you will got a an error because you have not one gigabyte free or you have any any block",
    "start": "2748520",
    "end": "2756040"
  },
  {
    "text": "of one gigabyte free okay so the the fragmentation is important and I think that can be a a",
    "start": "2756040",
    "end": "2762640"
  },
  {
    "text": "issue so comparing both the the entropy so here we have the the eslr NG our",
    "start": "2762640",
    "end": "2770480"
  },
  {
    "text": "proposal so these numbers are the same in dependently of the profile mode because this is absolute",
    "start": "2770480",
    "end": "2777240"
  },
  {
    "text": "entropy so we can say that in Linux is almost useless because uh the low",
    "start": "2777240",
    "end": "2785200"
  },
  {
    "text": "entropy uh we can can say also okay PX is better than than Linux but not too",
    "start": "2785200",
    "end": "2790920"
  },
  {
    "text": "much because for instance the executable have only 15 bits which can be bluo",
    "start": "2790920",
    "end": "2796359"
  },
  {
    "text": "force in 5 minutes okay so using",
    "start": "2796359",
    "end": "2801520"
  },
  {
    "text": "aslr around two hours to do the same the same attack okay and in 64bit",
    "start": "2801520",
    "end": "2810800"
  },
  {
    "text": "architectures obviously in in 64 bit tector uh we have a lot of entropy so",
    "start": "2810800",
    "end": "2819760"
  },
  {
    "text": "the only thing that we found thanks to the to the tool developed for us is that",
    "start": "2819760",
    "end": "2824800"
  },
  {
    "text": "the executable impacts have half entropy than Linux we don't know exactly why but",
    "start": "2824800",
    "end": "2833400"
  },
  {
    "text": "seeing the code it seems that they use only 20 27 bits of entropy so if the goal is to guess where",
    "start": "2833400",
    "end": "2843559"
  },
  {
    "text": "the executable is in memory in a Linux 64bit architect then Linux is more secure than PX but",
    "start": "2843559",
    "end": "2854520"
  },
  {
    "text": "okay and even pxs have half bit more",
    "start": "2854520",
    "end": "2860160"
  },
  {
    "text": "than entropy in libraries we can say that because the non-uniform correlation",
    "start": "2860160",
    "end": "2866119"
  },
  {
    "text": "uh sorry because the non-uniform uh weakness they have less than 28.5 bits",
    "start": "2866119",
    "end": "2872079"
  },
  {
    "text": "of entropy so at the end is quite similar to Linux okay but if you are focused in the",
    "start": "2872079",
    "end": "2877359"
  },
  {
    "text": "executable uh then Linux is better than PX twice so concluding we have presented",
    "start": "2877359",
    "end": "2885319"
  },
  {
    "text": "four exploit exploitable weaknesses which increase the uh the probability of success for the attackers that want to",
    "start": "2885319",
    "end": "2892680"
  },
  {
    "text": "BU pass the eslr uh we have developed a tool to to measure the the the",
    "start": "2892680",
    "end": "2898480"
  },
  {
    "text": "effectiveness of the eslr and thanks to that uh we have found things like packs",
    "start": "2898480",
    "end": "2905559"
  },
  {
    "text": "uh in in 32bit is better than Linux or that the executable is better randomized",
    "start": "2905559",
    "end": "2913200"
  },
  {
    "text": "in Linux than in than in PX or that Linux provide a larger consecutive Freo space than than pack which is very",
    "start": "2913200",
    "end": "2919599"
  },
  {
    "text": "important for the compatibility so also I will I so a proof of concept of the correlation",
    "start": "2919599",
    "end": "2926400"
  },
  {
    "text": "attack or correlation weakness sorry the offset to live uh and we also have contributed to",
    "start": "2926400",
    "end": "2932960"
  },
  {
    "text": "the Linux aslr by sever CV and and other fixes we found uh for",
    "start": "2932960",
    "end": "2940240"
  },
  {
    "text": "instance uh a book on integ oflow in in how the stack is randomiz set and this",
    "start": "2940240",
    "end": "2946160"
  },
  {
    "text": "is March 20 this is very recent maybe all of you know that by setting the",
    "start": "2946160",
    "end": "2952640"
  },
  {
    "text": "stack to unlimited value in 32 B architectures you can disable the the eslr and then it's easier to attack uh",
    "start": "2952640",
    "end": "2960760"
  },
  {
    "text": "for for instance say to uh executables so thanks our Pats this is not longer",
    "start": "2960760",
    "end": "2968839"
  },
  {
    "text": "possible so we have designed and Implement a new hlr which is compatible and effective",
    "start": "2968839",
    "end": "2977319"
  },
  {
    "text": "and address all the weaknesses uh we have described here with the main features is that it is able to use the",
    "start": "2977319",
    "end": "2984839"
  },
  {
    "text": "full virtual memory area to randomize object is not limited the stack is not in the top the hip is not in the bottom",
    "start": "2984839",
    "end": "2992839"
  },
  {
    "text": "okay but to be usable we have to to solve the fragmentation doing the pr",
    "start": "2992839",
    "end": "2998440"
  },
  {
    "text": "reserved area and we introduce the concept of allocate sensitive object of object of",
    "start": "2998440",
    "end": "3004760"
  },
  {
    "text": "the same sensitivity in in the same area isolated from other",
    "start": "3004760",
    "end": "3009799"
  },
  {
    "text": "objects also newom forms like uh be able to randomize a specific Maps it's worth",
    "start": "3009799",
    "end": "3017280"
  },
  {
    "text": "to mention that Chrome use also a own aslr to map G areas because they know",
    "start": "3017280",
    "end": "3025280"
  },
  {
    "text": "that and they they decide to put some areas in another place so thanks to this",
    "start": "3025280",
    "end": "3030520"
  },
  {
    "text": "uh new randomization forms Chrome for instance could uh use it in order to uh",
    "start": "3030520",
    "end": "3036079"
  },
  {
    "text": "remove all code to uh Implement their own aslr okay and that's all removes the fori wi",
    "start": "3036079",
    "end": "3046000"
  },
  {
    "text": "provide in both maximum entropy with fragmentation issue this is the most important okay and as a final conclusion",
    "start": "3046000",
    "end": "3052000"
  },
  {
    "text": "I can say that ASL RNG overcomed Linux and pxs in in all aspects and that's",
    "start": "3052000",
    "end": "3059280"
  },
  {
    "text": "all [Applause]",
    "start": "3059280",
    "end": "3068440"
  },
  {
    "text": "questions yes",
    "start": "3071000",
    "end": "3075000"
  },
  {
    "text": "yeah it's a sum because it's a um yes I can show you right quickly yeah it's",
    "start": "3094720",
    "end": "3103359"
  },
  {
    "text": "nor okay one second this one this one okay so the the idea here is if you",
    "start": "3107960",
    "end": "3114359"
  },
  {
    "text": "perform an overflow and you don't touch the return address the program will uh",
    "start": "3114359",
    "end": "3119839"
  },
  {
    "text": "will return to its color perfectly so you don't you don't observe any any",
    "start": "3119839",
    "end": "3125760"
  },
  {
    "text": "correct uh behavior from the server okay but if you start to overwrite only the",
    "start": "3125760",
    "end": "3132079"
  },
  {
    "text": "first bite how many uh possibilities do you have per",
    "start": "3132079",
    "end": "3138559"
  },
  {
    "text": "bite so when you guess when you get this bite then you can use it to perform the",
    "start": "3138559",
    "end": "3146240"
  },
  {
    "text": "Brute Force attack of the second bite and you have also",
    "start": "3146240",
    "end": "3151720"
  },
  {
    "text": "256",
    "start": "3151720",
    "end": "3154720"
  },
  {
    "text": "possibilities okay because when you overwrite the correct one you will get a",
    "start": "3159960",
    "end": "3165280"
  },
  {
    "text": "normal answer otherwise you will crash so you you have a Oracle if you",
    "start": "3165280",
    "end": "3172160"
  },
  {
    "text": "put the correct address here you will get a correct answer from the server",
    "start": "3172160",
    "end": "3178440"
  },
  {
    "text": "if you put a wrong bite here you will get no answer because the the child will",
    "start": "3178640",
    "end": "3186838"
  },
  {
    "text": "[Music]",
    "start": "3189480",
    "end": "3192570"
  },
  {
    "text": "cross only if you with the right value you return exactly to the cor fun",
    "start": "3200160",
    "end": "3207640"
  },
  {
    "text": "one yeah we we are yeah we have symbols here but actually the address is on the stack it's correct this is for for the",
    "start": "3207640",
    "end": "3214839"
  },
  {
    "text": "attacker they don't know but the application already know okay put exactly the same address",
    "start": "3214839",
    "end": "3221200"
  },
  {
    "text": "that was already in the memory yeah so every time your guess is correct means that",
    "start": "3221200",
    "end": "3226640"
  },
  {
    "text": "you have overr something which was already there but you know now",
    "start": "3226640",
    "end": "3232720"
  },
  {
    "text": "yeah sorry yes it's one independently by one randomly yes so",
    "start": "3234920",
    "end": "3242520"
  },
  {
    "text": "26 one y I can go to the second one plus6 plus it's not a multiplication add",
    "start": "3242520",
    "end": "3251640"
  },
  {
    "text": "yeah but you need to to be able to um hand bite level of overflow otherwise if",
    "start": "3251640",
    "end": "3258799"
  },
  {
    "text": "you only can write words you canot perform this attack you need to to be able to overwrite a a by level okay and",
    "start": "3258799",
    "end": "3265480"
  },
  {
    "text": "the last the last overflow is a the complete address so you the last the",
    "start": "3265480",
    "end": "3271400"
  },
  {
    "text": "last overflow is okay I'm going to put this address in going uh in order to uh to see if I got the correct answer from",
    "start": "3271400",
    "end": "3277640"
  },
  {
    "text": "the server so you are sure that that you have put the correct address",
    "start": "3277640",
    "end": "3284280"
  },
  {
    "text": "yeah if it can be done remotely yeah of course this is",
    "start": "3297520",
    "end": "3303960"
  },
  {
    "text": "yes yeah you have",
    "start": "3303960",
    "end": "3308078"
  },
  {
    "text": "yeah yeah yeah yeah",
    "start": "3323160",
    "end": "3328160"
  },
  {
    "text": "yeah yeah yeah as many you want and the same so every time you",
    "start": "3328680",
    "end": "3336319"
  },
  {
    "text": " yeah for example in the in the in the aslr we propose if the bug exist in",
    "start": "3336599",
    "end": "3343319"
  },
  {
    "text": "a thread stack for instance in in the stack of the thread sorry instead instead of the main stack so mean",
    "start": "3343319",
    "end": "3350319"
  },
  {
    "text": "assuming that this buffer is in the in the in the thread stack SS the thread stack is requested by the m up if each",
    "start": "3350319",
    "end": "3357920"
  },
  {
    "text": "time a new child uh is created you use the US NG in order to randomize where",
    "start": "3357920",
    "end": "3364960"
  },
  {
    "text": "this stack is going to be Memory this can be more",
    "start": "3364960",
    "end": "3370880"
  },
  {
    "text": "difficult yeah yeah that's absolutely yeah uh uses theck Rel the nothing is",
    "start": "3375680",
    "end": "3384839"
  },
  {
    "text": "right after a for always EX ex so even direct child execute for plus EX in",
    "start": "3384839",
    "end": "3389960"
  },
  {
    "text": "order to randomize everything libr is executable the canary G so it's very",
    "start": "3389960",
    "end": "3396079"
  },
  {
    "text": "safe but very time consuming there shall be a balance forking model is very useful in in eded",
    "start": "3396079",
    "end": "3402599"
  },
  {
    "text": "systems because of speed so Android uses foring model for that",
    "start": "3402599",
    "end": "3409780"
  },
  {
    "text": "[Music]",
    "start": "3409780",
    "end": "3412839"
  },
  {
    "text": "so",
    "start": "3417440",
    "end": "3419880"
  },
  {
    "text": "us I not I'm not sure to answer your question if the the the the",
    "start": "3422960",
    "end": "3428400"
  },
  {
    "text": "vulnerability what",
    "start": "3428400",
    "end": "3432400"
  },
  {
    "text": "I don't think so because this is General I mean works so this call return and then",
    "start": "3452880",
    "end": "3459599"
  },
  {
    "text": "this is the address Story the stack the return fun the address so it's very generic it doesn't depend on a compiler",
    "start": "3459599",
    "end": "3466039"
  },
  {
    "text": "or an operating system it's not a trick of Windows probably will be help exactly",
    "start": "3466039",
    "end": "3471520"
  },
  {
    "text": "the same but you asking about how to prevent this maybe maybe uh there are",
    "start": "3471520",
    "end": "3476880"
  },
  {
    "text": "techniques like control flow Integrity that they are developing in in in elbm and these kind of things but Al we are",
    "start": "3476880",
    "end": "3485000"
  },
  {
    "text": "able to to guess this address what is doing the cont Integrity is uh",
    "start": "3485000",
    "end": "3490039"
  },
  {
    "text": "preventing that we can redirect the flow but yes at the end this is prevented with the control flow",
    "start": "3490039",
    "end": "3495760"
  },
  {
    "text": "Integrity okay",
    "start": "3495760",
    "end": "3499680"
  },
  {
    "text": "yes",
    "start": "3506839",
    "end": "3509440"
  }
]