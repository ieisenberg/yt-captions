[
  {
    "text": "hi I'm eager today I like to show to present you my memory Ranger which can",
    "start": "0",
    "end": "7470"
  },
  {
    "text": "isolate drivers code and allocated data from illegal access in the kernel mode",
    "start": "7470",
    "end": "13740"
  },
  {
    "text": "memory this topic is of critical importance for all security experts who",
    "start": "13740",
    "end": "19439"
  },
  {
    "text": "are dealing with protection of operating systems a few words about me",
    "start": "19439",
    "end": "25230"
  },
  {
    "text": "I earned my PhD seven years ago my area of expertise includes Windows kernel",
    "start": "25230",
    "end": "31980"
  },
  {
    "text": "security I am a fan of Windows current security rootkit detection and hyper",
    "start": "31980",
    "end": "37590"
  },
  {
    "text": "biases I carried out security research projects by my own as a hobby I'm a fan",
    "start": "37590",
    "end": "45180"
  },
  {
    "text": "of cross-disciplinary research you can find my results in my blog here by the",
    "start": "45180",
    "end": "50700"
  },
  {
    "text": "way I'm fond of traveling and powerlifting as well I have divided my",
    "start": "50700",
    "end": "56670"
  },
  {
    "text": "talk into three main parts firstly we'll be looking at the consequences of",
    "start": "56670",
    "end": "62190"
  },
  {
    "text": "attacks on kernel memory after that I'll give you a brief analysis of Windows",
    "start": "62190",
    "end": "68490"
  },
  {
    "text": "built-in security features and research projects which are designed to protect kernel memory finally I'll show you how",
    "start": "68490",
    "end": "77220"
  },
  {
    "text": "I solve this problem using my memory ranger feel free to ask me any questions",
    "start": "77220",
    "end": "84600"
  },
  {
    "text": "at the end of the talk nowadays kernel",
    "start": "84600",
    "end": "89970"
  },
  {
    "text": "mode drivers share the same memory space with the rest of the OS kernel all",
    "start": "89970",
    "end": "96240"
  },
  {
    "text": "drivers can read and write any part of kernel mode memory without any hardware",
    "start": "96240",
    "end": "102329"
  },
  {
    "text": "restrictions this fact makes the modern operating systems to be proved - rootkit",
    "start": "102329",
    "end": "108570"
  },
  {
    "text": "attacks and kernel exploitation let's",
    "start": "108570",
    "end": "114149"
  },
  {
    "text": "have a look malware driver can dump the drivers code and tamper allocated memory",
    "start": "114149",
    "end": "119790"
  },
  {
    "text": "for example Windows internal structures and allocated data or the third-party",
    "start": "119790",
    "end": "125369"
  },
  {
    "text": "drivers as a result hackers can escalate privileges hide their footprints still",
    "start": "125369",
    "end": "133300"
  },
  {
    "text": "secrets or even disrupt industrial processes which are controlled by drivers nowadays so let me demonstrate",
    "start": "133300",
    "end": "141670"
  },
  {
    "text": "you some of these attacks let's imagine",
    "start": "141670",
    "end": "149640"
  },
  {
    "text": "just let's imagine two houses with private art collections Russian house",
    "start": "149640",
    "end": "156100"
  },
  {
    "text": "and the British one the Russian house in Russian house we can see the painting of",
    "start": "156100",
    "end": "161560"
  },
  {
    "text": "my silicon dean scheme you know he was a great Russian painter as the banks his",
    "start": "161560",
    "end": "167950"
  },
  {
    "text": "art is in the British house I hope everyone is familiar with banks his painting and the recent scandal with",
    "start": "167950",
    "end": "174690"
  },
  {
    "text": "shredding his painting in London this is the painting yeah and here is the heck",
    "start": "174690",
    "end": "182590"
  },
  {
    "text": "attacker who wants to grab all these masterpiece use these houses are not",
    "start": "182590",
    "end": "189100"
  },
  {
    "text": "protected the both private collections will be stolen in the kernel mode memory",
    "start": "189100",
    "end": "195220"
  },
  {
    "text": "this situation is absolutely the same if",
    "start": "195220",
    "end": "200620"
  },
  {
    "text": "drivers are not protected the data can be stolen let's see how it can happen I",
    "start": "200620",
    "end": "206400"
  },
  {
    "text": "will load two drivers the Russian driver and the British one which store the data",
    "start": "206400",
    "end": "212050"
  },
  {
    "text": "in the allocated memory pools after that the attackers driver will be loaded to",
    "start": "212050",
    "end": "217989"
  },
  {
    "text": "dump the Russian the drivers code and still both Russian and British data buffers and finally I will show how the",
    "start": "217989",
    "end": "226570"
  },
  {
    "text": "attacker can even escalate process privileges let's see how it can happen",
    "start": "226570",
    "end": "235080"
  },
  {
    "text": "[Music]",
    "start": "243870",
    "end": "250430"
  },
  {
    "text": "I'm launching a Russian console which laws a Russian driver in the same way",
    "start": "250430",
    "end": "256079"
  },
  {
    "text": "I'm loading the British driver finally the heck attack is launching his driver",
    "start": "256079",
    "end": "261209"
  },
  {
    "text": "to access kernel memory now the attack is trying to dump the Russian driver",
    "start": "261209",
    "end": "266729"
  },
  {
    "text": "using it's loaded address the attacker is copies copying this address and we",
    "start": "266729",
    "end": "274680"
  },
  {
    "text": "can see the attacker is successful reading the first byte which is M and",
    "start": "274680",
    "end": "281120"
  },
  {
    "text": "the second byte which is Z this is",
    "start": "281120",
    "end": "286320"
  },
  {
    "text": "typical P a file header what was the British driver the attacker has",
    "start": "286320",
    "end": "296430"
  },
  {
    "text": "successfully dumped first two bytes as well we can see that the code of both",
    "start": "296430",
    "end": "305130"
  },
  {
    "text": "drivers can be stolen now let's move on to the private data which can be stored",
    "start": "305130",
    "end": "310919"
  },
  {
    "text": "in the allocated memory the Russian driver is allocating data and setting it",
    "start": "310919",
    "end": "318150"
  },
  {
    "text": "content as Vasily Kandinsky lecture can gain skin we copy this address and",
    "start": "318150",
    "end": "327050"
  },
  {
    "text": "reading this data the data has been allocated the British driver is",
    "start": "327050",
    "end": "335070"
  },
  {
    "text": "allocating memory and setting banks as its content now let's check banks in",
    "start": "335070",
    "end": "347150"
  },
  {
    "text": "it's alright the data has been allocated",
    "start": "350690",
    "end": "356700"
  },
  {
    "text": "now the attacker wants to steal this priceless data content to steal",
    "start": "356700",
    "end": "362639"
  },
  {
    "text": "Kandinsky hackers need to know the corresponding memory address let's",
    "start": "362639",
    "end": "367770"
  },
  {
    "text": "assume they do know this address because usually hackers do know everything so",
    "start": "367770",
    "end": "378080"
  },
  {
    "text": "the attacker can read this data let's",
    "start": "378080",
    "end": "383100"
  },
  {
    "text": "have a look yeah the Kandinsky has been stolen okay and now the attacker is overwriting",
    "start": "383100",
    "end": "391530"
  },
  {
    "text": "Kandinsky using for example four ones",
    "start": "391530",
    "end": "396740"
  },
  {
    "text": "okay let's go back to the Russian driver and check the content we can see and the",
    "start": "396740",
    "end": "404370"
  },
  {
    "text": "attacker can read this data and overwrite it we have only four ones instead we can see that the attacker did",
    "start": "404370",
    "end": "413250"
  },
  {
    "text": "modify the data now the attacker is entering the British house to steal",
    "start": "413250",
    "end": "419940"
  },
  {
    "text": "bankses art he copies this address and",
    "start": "419940",
    "end": "425750"
  },
  {
    "text": "we can see that a Banksy has been stolen and after all the writing we use photos",
    "start": "427669",
    "end": "435030"
  },
  {
    "text": "and let's check the original collection [Music]",
    "start": "435030",
    "end": "441380"
  },
  {
    "text": "the collection has been disappeared and",
    "start": "441380",
    "end": "446550"
  },
  {
    "text": "both data buffers were stolen and modified okay now let's go back to our",
    "start": "446550",
    "end": "453570"
  },
  {
    "text": "slides and close the video",
    "start": "453570",
    "end": "460970"
  },
  {
    "text": "hack attacker has successfully stolen both private collections it means that",
    "start": "469150",
    "end": "475520"
  },
  {
    "text": "our houses were not protected in a proper way what was wrong how can we",
    "start": "475520",
    "end": "480949"
  },
  {
    "text": "prevent this attack how can we defend them we will see it later and now let's go",
    "start": "480949",
    "end": "487879"
  },
  {
    "text": "back to demo to see how the attacker can even escalate bruises privileges now the",
    "start": "487879",
    "end": "508310"
  },
  {
    "text": "attack is starting the CMD console after launching it he's getting its process ID",
    "start": "508310",
    "end": "514250"
  },
  {
    "text": "using this string here is VP ad he's hoping it's PID we can see that CMD has",
    "start": "514250",
    "end": "521360"
  },
  {
    "text": "uses privileges and it is not enough for example to reconfigure the Windows",
    "start": "521360",
    "end": "527690"
  },
  {
    "text": "Firewall let's have a look yes access is",
    "start": "527690",
    "end": "533270"
  },
  {
    "text": "denied which is expected now the attacker is trying to elevate the same D",
    "start": "533270",
    "end": "539029"
  },
  {
    "text": "privileges he's using proof command with process ID let's go back and check the",
    "start": "539029",
    "end": "544279"
  },
  {
    "text": "police again we can see that the privileges have been escalated now the",
    "start": "544279",
    "end": "551990"
  },
  {
    "text": "simba has the highest privileges and now CMD can reconfigure windows firewall",
    "start": "551990",
    "end": "557750"
  },
  {
    "text": "service and even can turn it off let's have a look well we have we can see only",
    "start": "557750",
    "end": "574820"
  },
  {
    "text": "a small message which confirms that the windows firewall is out of service and it cannot be automatically restarted",
    "start": "574820",
    "end": "582320"
  },
  {
    "text": "this is very good news for hackers but let's wait for particle reaction which",
    "start": "582320",
    "end": "589490"
  },
  {
    "text": "is designed to prevent illegal memory modifications we've been waiting for as",
    "start": "589490",
    "end": "597140"
  },
  {
    "text": "long as 10 hours it is quite a long time and let's have a look what will happen",
    "start": "597140",
    "end": "606998"
  },
  {
    "text": "and we can see that nothing has happened",
    "start": "607329",
    "end": "612639"
  },
  {
    "text": "the West hasn't been crushed it means that posh God didn't prevent this",
    "start": "612639",
    "end": "619009"
  },
  {
    "text": "invasion and the u.s. became an affected",
    "start": "619009",
    "end": "628688"
  },
  {
    "text": "so we can see that Windows kernel can not prevent illegal memory access the",
    "start": "633129",
    "end": "639589"
  },
  {
    "text": "attacker can read the drivers code still and change allocated data and even",
    "start": "639589",
    "end": "645050"
  },
  {
    "text": "escalate process privileges without any security reaction such as a blue screen",
    "start": "645050",
    "end": "650779"
  },
  {
    "text": "of death let's have a look at the current situation with memory protection",
    "start": "650779",
    "end": "657110"
  },
  {
    "text": "projects look at this table Microsoft has developed a number of",
    "start": "657110",
    "end": "662990"
  },
  {
    "text": "security features for memory protection the third one is device guard which",
    "start": "662990",
    "end": "668269"
  },
  {
    "text": "provides kernel code integrity by marking executable pages as read-only so",
    "start": "668269",
    "end": "674240"
  },
  {
    "text": "any modifications of the code will crush the system not that and the second one",
    "start": "674240",
    "end": "680899"
  },
  {
    "text": "is patch guard which crushes their ways after revealing some changes of internal",
    "start": "680899",
    "end": "686809"
  },
  {
    "text": "structures for example in process unlinking but you just sing that part guard doesn't protect approach",
    "start": "686809",
    "end": "693860"
  },
  {
    "text": "structures completely finally window security does not protect memory",
    "start": "693860",
    "end": "699110"
  },
  {
    "text": "allocated by the third-party drivers also many security experts from all",
    "start": "699110",
    "end": "705619"
  },
  {
    "text": "around the world are trying to fill this gap there are several research projects",
    "start": "705619",
    "end": "711259"
  },
  {
    "text": "which are designed for memory protection and you can see that there is no general",
    "start": "711259",
    "end": "716749"
  },
  {
    "text": "solution no general solution which can",
    "start": "716749",
    "end": "721790"
  },
  {
    "text": "deal with all these issues at the same time today I will propose the solution I",
    "start": "721790",
    "end": "727490"
  },
  {
    "text": "will present you my memory ranger which can provide which provides both",
    "start": "727490",
    "end": "732850"
  },
  {
    "text": "integrity and confidentiality for drivers and allocated data look at",
    "start": "732850",
    "end": "740269"
  },
  {
    "text": "this nowadays kernel-mode drivers share the same memory space with the rest of",
    "start": "740269",
    "end": "746869"
  },
  {
    "text": "the OS kernel if we can move these two",
    "start": "746869",
    "end": "751939"
  },
  {
    "text": "drivers with their allocations into two separate memory enclosures we'll protect",
    "start": "751939",
    "end": "758569"
  },
  {
    "text": "the memory from each other the thing is that windows OS doesn't give us such an",
    "start": "758569",
    "end": "764809"
  },
  {
    "text": "eternity so luckily for us had the virtualization technology provides the",
    "start": "764809",
    "end": "772069"
  },
  {
    "text": "mechanism which can be used to implement the idea of memory isolation",
    "start": "772069",
    "end": "777230"
  },
  {
    "text": "I mean extended page tables or EPT feature without EPT guest physical",
    "start": "777230",
    "end": "784970"
  },
  {
    "text": "addresses are used to access hosts physical memory here address H is equal",
    "start": "784970",
    "end": "791059"
  },
  {
    "text": "to address G using EPT we get an",
    "start": "791059",
    "end": "796970"
  },
  {
    "text": "additional or second level of address translation when EPT is enabled guest",
    "start": "796970",
    "end": "803360"
  },
  {
    "text": "physical addresses are translated to host physical addresses by traversing a set of EPT paging sriracha's we can see",
    "start": "803360",
    "end": "814129"
  },
  {
    "text": "that now address h is equal to the address it not to G let's have a look at",
    "start": "814129",
    "end": "821629"
  },
  {
    "text": "apt details EPT structures includes EPT",
    "start": "821629",
    "end": "827329"
  },
  {
    "text": "entries which determined the mapping between the guest memory and the host memory each EPT entry includes memory",
    "start": "827329",
    "end": "835610"
  },
  {
    "text": "access bits and page frame number or pfm",
    "start": "835610",
    "end": "841449"
  },
  {
    "text": "so this number is linked to the corresponding host physical address it",
    "start": "841449",
    "end": "847160"
  },
  {
    "text": "can be used to prevent access to a protected date we can redirect the",
    "start": "847160",
    "end": "853549"
  },
  {
    "text": "access from the protected data to the fake one by changing PFN value to the",
    "start": "853549",
    "end": "859699"
  },
  {
    "text": "address of fake page another thing is memory access bits they indicate where",
    "start": "859699",
    "end": "867559"
  },
  {
    "text": "the access attempts loud the page reference by this number any disallowed access attempts will",
    "start": "867559",
    "end": "874629"
  },
  {
    "text": "trigger EPT violations and then controls goes to the hypervisor so we can trap",
    "start": "874629",
    "end": "881529"
  },
  {
    "text": "read write and execute access to the page by changing this memory access bits",
    "start": "881529",
    "end": "888160"
  },
  {
    "text": "and the final fish is that we can allocate several EPT paging structures",
    "start": "888160",
    "end": "896110"
  },
  {
    "text": "with various memory access configurations and by switching between them we can organize drivers execution",
    "start": "896110",
    "end": "903999"
  },
  {
    "text": "in isolated enclaves we can see that EPT",
    "start": "903999",
    "end": "909009"
  },
  {
    "text": "future seems to be very promising for memory isolation let me show you how all",
    "start": "909009",
    "end": "915040"
  },
  {
    "text": "these ideas are implemented in my memory Ranger I explored the following scenario",
    "start": "915040",
    "end": "923199"
  },
  {
    "text": "the OS kernel and other drivers are loaded into the memory and access their",
    "start": "923199",
    "end": "928839"
  },
  {
    "text": "data we have only two legal access attempts which are marked by green",
    "start": "928839",
    "end": "934480"
  },
  {
    "text": "arrows as the driver a is loaded it",
    "start": "934480",
    "end": "939910"
  },
  {
    "text": "allocates memory and access is newly allocated data all in all now we have",
    "start": "939910",
    "end": "946029"
  },
  {
    "text": "three legal access attempts which are marked by green by horizontal lines all",
    "start": "946029",
    "end": "951040"
  },
  {
    "text": "horizontal lines are legal access nor horizontal lines which are red are",
    "start": "951040",
    "end": "956649"
  },
  {
    "text": "illegal we have three illegal access attempts driver a modifies the OS",
    "start": "956649",
    "end": "964360"
  },
  {
    "text": "internal structures for example to escalate privileges or to do something",
    "start": "964360",
    "end": "970829"
  },
  {
    "text": "other drivers read the memory of a driver a for example to dump this driver",
    "start": "970829",
    "end": "976959"
  },
  {
    "text": "in order to reverse engineering purpose and finally when other drivers try to",
    "start": "976959",
    "end": "984279"
  },
  {
    "text": "override its allocated data for example to steal something or to attack this",
    "start": "984279",
    "end": "989410"
  },
  {
    "text": "data as you remember that all drivers share the same memory space all these",
    "start": "989410",
    "end": "996939"
  },
  {
    "text": "illegal access attempts are becoming uncontrolled now let's roll back and launch memoranda",
    "start": "996939",
    "end": "1005700"
  },
  {
    "text": "to isolate driver eight from the rest of the OS kernel first of all my memories",
    "start": "1005700",
    "end": "1011850"
  },
  {
    "text": "allocates the default EPT structure although the drivers and Windows kernel",
    "start": "1011850",
    "end": "1018240"
  },
  {
    "text": "are executed inside the default EPT structure memory ranger traps the",
    "start": "1018240",
    "end": "1026220"
  },
  {
    "text": "loading of drive a and allocates in you EPT structure for driver a this EP",
    "start": "1026220",
    "end": "1033270"
  },
  {
    "text": "disruption is designed specifically for this new driver ma'am arranger updates",
    "start": "1033270",
    "end": "1040140"
  },
  {
    "text": "all EPG structures in the following way only driver a and OS kernel are executed",
    "start": "1040140",
    "end": "1046260"
  },
  {
    "text": "inside this view EPG structure all other drivers can be executed in this memory",
    "start": "1046260",
    "end": "1054000"
  },
  {
    "text": "because we've got to restrict the access in the new EPT structure memory access",
    "start": "1054000",
    "end": "1061860"
  },
  {
    "text": "base have been cleared to zero for oil structures to restrict access from driver a here driver a cannot access OS",
    "start": "1061860",
    "end": "1070590"
  },
  {
    "text": "kernel structures also in the default",
    "start": "1070590",
    "end": "1075660"
  },
  {
    "text": "EPT structure memory access bits for drive a have been cleared as well so we",
    "start": "1075660",
    "end": "1082380"
  },
  {
    "text": "can see the following picture driver a can be executed only in this memory",
    "start": "1082380",
    "end": "1088380"
  },
  {
    "text": "while other drivers can be executed in the default EP destruction",
    "start": "1088380",
    "end": "1094130"
  },
  {
    "text": "so after drive a allocates memory data",
    "start": "1094130",
    "end": "1101280"
  },
  {
    "text": "my memory and updates all EPT structures again as a result any access from other",
    "start": "1101280",
    "end": "1108150"
  },
  {
    "text": "drivers to the driver a and its allocated memory will be trapped and blocked all in all all access to the oil",
    "start": "1108150",
    "end": "1115799"
  },
  {
    "text": "structures is forbidden for the driver a it means that drive a can access its",
    "start": "1115799",
    "end": "1122400"
  },
  {
    "text": "memory only in these EBT structures and this memory cannot be accessed by other",
    "start": "1122400",
    "end": "1127740"
  },
  {
    "text": "drivers because they executed in another memory which this data is forbidden",
    "start": "1127740",
    "end": "1134880"
  },
  {
    "text": "in the same way memory allocates a separate EPT structure for each new",
    "start": "1134880",
    "end": "1141190"
  },
  {
    "text": "driver and updates all other EPT structures it looks like a separate like",
    "start": "1141190",
    "end": "1148149"
  },
  {
    "text": "drivers content in the kernel mode memory this is the main idea on this",
    "start": "1148149",
    "end": "1153730"
  },
  {
    "text": "topic let's move on to the demonstration let's add one more treasure-house to our",
    "start": "1153730",
    "end": "1161590"
  },
  {
    "text": "criminal story let it be American house full of Jackson Pollock paintings now we",
    "start": "1161590",
    "end": "1167950"
  },
  {
    "text": "have three houses we'll free private art collections and the attacker is more",
    "start": "1167950",
    "end": "1175360"
  },
  {
    "text": "motivated so to protect these houses we need to build at least a fence it helps",
    "start": "1175360",
    "end": "1183700"
  },
  {
    "text": "to prevent attackers access and also as alleged three houses from each other as",
    "start": "1183700",
    "end": "1190419"
  },
  {
    "text": "well in the kernel mode the drivers",
    "start": "1190419",
    "end": "1196480"
  },
  {
    "text": "member will be isolated in the same way I will load three drivers we call them",
    "start": "1196480",
    "end": "1203110"
  },
  {
    "text": "Russian British and American all three drivers store the data in the allocated",
    "start": "1203110",
    "end": "1209620"
  },
  {
    "text": "memory pools after that I will launch a malware driver in order to steal and",
    "start": "1209620",
    "end": "1215129"
  },
  {
    "text": "modify these databases as well as dumping the drivers code finally a",
    "start": "1215129",
    "end": "1220659"
  },
  {
    "text": "malware driver will try to escalate process privileges let's have a look",
    "start": "1220659",
    "end": "1226509"
  },
  {
    "text": "what will happen if I launch memoranda before",
    "start": "1226509",
    "end": "1232500"
  },
  {
    "text": "oops yeah just a minute yep",
    "start": "1239960",
    "end": "1257080"
  },
  {
    "text": "first of all I'm launching my ranger console application it allows the driver and activates the hypervisor here is in",
    "start": "1257080",
    "end": "1265150"
  },
  {
    "text": "the left corner we've got a memory ranger console application then I'm launching three drivers Russian British",
    "start": "1265150",
    "end": "1273280"
  },
  {
    "text": "at the center and American on the right corner finally the hack attack is",
    "start": "1273280",
    "end": "1280270"
  },
  {
    "text": "launching its driver its console will be at the center now the attacker wants to",
    "start": "1280270",
    "end": "1288460"
  },
  {
    "text": "dump the Russian rebel force he copies is address and we can see that now",
    "start": "1288460",
    "end": "1298060"
  },
  {
    "text": "attacker can read nothing what about the next byte he has a zero value as well so",
    "start": "1298060",
    "end": "1309850"
  },
  {
    "text": "we can see that attacker fails to dump this driver now let's leave the content",
    "start": "1309850",
    "end": "1316270"
  },
  {
    "text": "using the driver itself yet now we have",
    "start": "1316270",
    "end": "1325450"
  },
  {
    "text": "M and Z value we can see that mammal Ranger can protect the content of the",
    "start": "1325450",
    "end": "1332590"
  },
  {
    "text": "Russian driver now the attack is entering the British house he is going",
    "start": "1332590",
    "end": "1338350"
  },
  {
    "text": "to dump the British driver his copy its address and trying to read its content",
    "start": "1338350",
    "end": "1345700"
  },
  {
    "text": "let's have a look so he gets a zero value again mammal",
    "start": "1345700",
    "end": "1352210"
  },
  {
    "text": "range is foisting the fake no data to the attack instead of the real one",
    "start": "1352210",
    "end": "1357700"
  },
  {
    "text": "now let's try to access the British driver using the British driver itself",
    "start": "1357700",
    "end": "1366000"
  },
  {
    "text": "we're reading this data and now we're reading m & z bytes it means that man",
    "start": "1366000",
    "end": "1375730"
  },
  {
    "text": "can prevent unauthorized access attempts and grants the legal access and now",
    "start": "1375730",
    "end": "1382120"
  },
  {
    "text": "let's check is the American driver can dump British driver without attackers",
    "start": "1382120",
    "end": "1389970"
  },
  {
    "text": "yeah we're moving to the American driver and tries to dump with the British",
    "start": "1390570",
    "end": "1396790"
  },
  {
    "text": "driver we have zero value again",
    "start": "1396790",
    "end": "1403410"
  },
  {
    "text": "isolates drivers from each other any applause okay say thank you now let's",
    "start": "1404130",
    "end": "1417970"
  },
  {
    "text": "move on to the private data which can be stored in the allocated memory of the",
    "start": "1417970",
    "end": "1423130"
  },
  {
    "text": "Russian driver I'm allocating wassily kandinsky now let's check the allocation",
    "start": "1423130",
    "end": "1431190"
  },
  {
    "text": "Vasily Kandinsky data has been allocated for the British driver I'm allocating",
    "start": "1436050",
    "end": "1441400"
  },
  {
    "text": "banksy now let's check the allocation",
    "start": "1441400",
    "end": "1447810"
  },
  {
    "text": "and finally for that now we're moving to the American driver I'm allocating the",
    "start": "1452240",
    "end": "1458809"
  },
  {
    "text": "date and setting Jackson now let's check this allocation finally",
    "start": "1458809",
    "end": "1467018"
  },
  {
    "text": "Jackson Pollock now the attacker wants to steal all these treasures let's see",
    "start": "1470080",
    "end": "1478070"
  },
  {
    "text": "if he doesn't manage that he is starting with Russian house and Kandinsky art his",
    "start": "1478070",
    "end": "1484820"
  },
  {
    "text": "cotton is a dress and tries to read",
    "start": "1484820",
    "end": "1489190"
  },
  {
    "text": "let's have a look yep the attacker can read only a note",
    "start": "1490600",
    "end": "1496970"
  },
  {
    "text": "string now he is trying to overwrite this data using for once for example",
    "start": "1496970",
    "end": "1504279"
  },
  {
    "text": "it's time to check if the Kandinsky has been modified we read the date again",
    "start": "1504279",
    "end": "1510490"
  },
  {
    "text": "yeah and we can see that mammal range is protecting this data hackers",
    "start": "1510490",
    "end": "1517159"
  },
  {
    "text": "failed to steal and modify Kandinsky now the attack is entering the British house",
    "start": "1517159",
    "end": "1524119"
  },
  {
    "text": "to steal Banksy his copy is address and we can see that the attacker we can read",
    "start": "1524119",
    "end": "1533029"
  },
  {
    "text": "nothing again now he's trying to override this data now we go back to the",
    "start": "1533029",
    "end": "1542299"
  },
  {
    "text": "British app and check Banksy collection yeah we can see that mammal range is",
    "start": "1542299",
    "end": "1548119"
  },
  {
    "text": "protecting Banksy as well and now finally let's check is the American",
    "start": "1548119",
    "end": "1555019"
  },
  {
    "text": "driver can still banks a collection from the British house without attacker we",
    "start": "1555019",
    "end": "1562249"
  },
  {
    "text": "are moving to the American driver and tries to read Banksy collection yeah no",
    "start": "1562249",
    "end": "1569960"
  },
  {
    "text": "result now he's trying to overwrite this data using American driver",
    "start": "1569960",
    "end": "1577749"
  },
  {
    "text": "let's check the collection",
    "start": "1579129",
    "end": "1583059"
  },
  {
    "text": "we can see that memory range is isolating drivers allocation from each",
    "start": "1584279",
    "end": "1589749"
  },
  {
    "text": "other as well so we can change the data only by the driver which our case this",
    "start": "1589749",
    "end": "1596919"
  },
  {
    "text": "very data before let's check it let's replace Vasily Kandinsky with ivan",
    "start": "1596919",
    "end": "1602950"
  },
  {
    "text": "aivazovsky he was a genius russian painter who double check Vasily",
    "start": "1602950",
    "end": "1607960"
  },
  {
    "text": "Kandinsky and of writing it's replacing with ivan aivazovsky and let's check the",
    "start": "1607960",
    "end": "1615669"
  },
  {
    "text": "date again so the allocated batter has",
    "start": "1615669",
    "end": "1622330"
  },
  {
    "text": "been updated in a legal way memory is protected even allocated data",
    "start": "1622330",
    "end": "1630679"
  },
  {
    "text": "now let's check a British escalation attack the attack is launched in CMD",
    "start": "1630679",
    "end": "1637159"
  },
  {
    "text": "getting the same D identification and",
    "start": "1637159",
    "end": "1643070"
  },
  {
    "text": "checking the privileges as we expected Cindy has uses privileges and cannot",
    "start": "1643070",
    "end": "1648389"
  },
  {
    "text": "reconfigure Windows Firewall which is expected the access is denied the attack",
    "start": "1648389",
    "end": "1656970"
  },
  {
    "text": "is trying to elevate and the simply privileges the tech is using proof command with process ID",
    "start": "1656970",
    "end": "1664850"
  },
  {
    "text": "let's check the privileges we can see that simply has still uses privileges and can not reconfigure the Windows",
    "start": "1664850",
    "end": "1672929"
  },
  {
    "text": "Firewall it means the attacker is failed CMD is",
    "start": "1672929",
    "end": "1678539"
  },
  {
    "text": "not able to stop Windows Firewall service so you've just seen that this is",
    "start": "1678539",
    "end": "1700879"
  },
  {
    "text": "kernel mode drivers with a small fence yeah you've just seen that memory range",
    "start": "1700879",
    "end": "1708149"
  },
  {
    "text": "prevents illegal memory access by running drivers into isolated kernel",
    "start": "1708149",
    "end": "1713429"
  },
  {
    "text": "spaces or enclosures let's have a look at memory access rules which are",
    "start": "1713429",
    "end": "1719879"
  },
  {
    "text": "provided by memory Ranger memory ranger protects memory according to the",
    "start": "1719879",
    "end": "1725999"
  },
  {
    "text": "principle of least privilege missoula loaded drivers can access only their own",
    "start": "1725999",
    "end": "1733139"
  },
  {
    "text": "code the read and write access to the",
    "start": "1733139",
    "end": "1738720"
  },
  {
    "text": "data is granted only to the drivers which allocate these data batters o",
    "start": "1738720",
    "end": "1745369"
  },
  {
    "text": "other memory access attempts are blocked",
    "start": "1745369",
    "end": "1750590"
  },
  {
    "text": "memory ranger protects drivers code from being dumped it prevents read and write",
    "start": "1750590",
    "end": "1756450"
  },
  {
    "text": "access to the allocated data and finally it prevents approach escalation attack",
    "start": "1756450",
    "end": "1763020"
  },
  {
    "text": "now let's move on to the memory architecture this memory range includes",
    "start": "1763020",
    "end": "1770040"
  },
  {
    "text": "the following three parts memory Mon rwx which is on the left the central",
    "start": "1770040",
    "end": "1776100"
  },
  {
    "text": "component is DDI mod and the final is memory access policy the third two parts",
    "start": "1776100",
    "end": "1783179"
  },
  {
    "text": "were developed by Satoshi turned on his genius researcher from Japan during our",
    "start": "1783179",
    "end": "1788850"
  },
  {
    "text": "collaboration memory Mon rwx processes for loading and new drivers and present",
    "start": "1788850",
    "end": "1796380"
  },
  {
    "text": "processes as well as all apt violations while Digimon installs the invisible",
    "start": "1796380",
    "end": "1803100"
  },
  {
    "text": "hooks and kernel functions which allocated and deallocate memory I developed a memory access policy which",
    "start": "1803100",
    "end": "1811080"
  },
  {
    "text": "is a kind of brain for the first two parts for each newly loaded process mam",
    "start": "1811080",
    "end": "1818730"
  },
  {
    "text": "arranged ads before in structure to the list this structure includes pearl society and the address of it's a",
    "start": "1818730",
    "end": "1825990"
  },
  {
    "text": "process structure for each newly loaded driver memory range as the Fallen",
    "start": "1825990",
    "end": "1833010"
  },
  {
    "text": "structure to the list destruction closes an address of allocated EPT structure which is all",
    "start": "1833010",
    "end": "1838559"
  },
  {
    "text": "hated specifically for this driver as well as drivers start and end undresses and a vector to collect memory addresses",
    "start": "1838559",
    "end": "1846480"
  },
  {
    "text": "which will be allocated by this driver each time the driver allocates memory",
    "start": "1846480",
    "end": "1852210"
  },
  {
    "text": "data memory as the full information to the list this structure includes the",
    "start": "1852210",
    "end": "1859080"
  },
  {
    "text": "data the address and the size of newly allocated data memory access policy",
    "start": "1859080",
    "end": "1867030"
  },
  {
    "text": "managed all this list and decides to grant memory access or to denied all the",
    "start": "1867030",
    "end": "1873240"
  },
  {
    "text": "details about memory and architecture are in my white paper to put it in a",
    "start": "1873240",
    "end": "1880710"
  },
  {
    "text": "nutshell the mam arranged dispatcher is here it processes three",
    "start": "1880710",
    "end": "1886230"
  },
  {
    "text": "EPT violations read write and execute and one VM exit for execute violation",
    "start": "1886230",
    "end": "1894540"
  },
  {
    "text": "mam arranger changes point to the appropriate EPT structure so the",
    "start": "1894540",
    "end": "1899610"
  },
  {
    "text": "kernel mode code continues its execution into the corresponding EPT instruction",
    "start": "1899610",
    "end": "1906419"
  },
  {
    "text": "this looks like swapping context in the user mode application but in the kernel",
    "start": "1906419",
    "end": "1911820"
  },
  {
    "text": "mode drivers for read and write violations mem arranged checks whether",
    "start": "1911820",
    "end": "1918570"
  },
  {
    "text": "this axis is legal and for illegal access the memory range changes PSN",
    "start": "1918570",
    "end": "1926009"
  },
  {
    "text": "value or page frame number or the protected data to the fake one and",
    "start": "1926009",
    "end": "1931110"
  },
  {
    "text": "allows access to this fake data and finally it sets monitor trap flag as a",
    "start": "1931110",
    "end": "1939330"
  },
  {
    "text": "result after a driver reason the fake data the control goes to the hypervisor",
    "start": "1939330",
    "end": "1945090"
  },
  {
    "text": "again and now memory Ranger restores pfn",
    "start": "1945090",
    "end": "1951389"
  },
  {
    "text": "value to the protected data and blocks any access to this page finally it",
    "start": "1951389",
    "end": "1957179"
  },
  {
    "text": "resets the monitor trap flag here are",
    "start": "1957179",
    "end": "1964940"
  },
  {
    "text": "steps to add and you deta to be protected by my memory ranger first of",
    "start": "1964940",
    "end": "1972240"
  },
  {
    "text": "all you need to create a list of addresses and sizes of memory regions which are needed to be protected and",
    "start": "1972240",
    "end": "1979019"
  },
  {
    "text": "clear access bits to restrict the access and don't forget to update your list for",
    "start": "1979019",
    "end": "1986879"
  },
  {
    "text": "example using callback functions then dispatch EPT violations which occur",
    "start": "1986879",
    "end": "1994259"
  },
  {
    "text": "during access your data to process all violations you have three input parameters type of",
    "start": "1994259",
    "end": "2002179"
  },
  {
    "text": "access read or write in our address of module which tries to access and finally",
    "start": "2002179",
    "end": "2010730"
  },
  {
    "text": "the address of data which has been accessed this looks like IP address we've got source address and destination",
    "start": "2010730",
    "end": "2016789"
  },
  {
    "text": "race who is trying to access and what kind of data this model tries to access",
    "start": "2016789",
    "end": "2023029"
  },
  {
    "text": "and type of access read or write you can only monitor the access attempts as well",
    "start": "2023029",
    "end": "2029539"
  },
  {
    "text": "as redirect them now let's move on to",
    "start": "2029539",
    "end": "2035149"
  },
  {
    "text": "the final step which is the benchmark assessment I measure at the time of",
    "start": "2035149",
    "end": "2042139"
  },
  {
    "text": "legal access from driver to the allocated data in for situations without",
    "start": "2042139",
    "end": "2048679"
  },
  {
    "text": "memory protection with enabled cache with disabled cache and with to memory",
    "start": "2048679",
    "end": "2054919"
  },
  {
    "text": "protectors all main pro and memory rangin all named pro or allocated memory",
    "start": "2054919",
    "end": "2060888"
  },
  {
    "text": "protector is the closest competitor for memory ranger which I developed on a",
    "start": "2060889",
    "end": "2067099"
  },
  {
    "text": "hero as well all impro uses only one",
    "start": "2067099",
    "end": "2072169"
  },
  {
    "text": "EPT structure to prevent illegal access attempts only to the allocated memory we",
    "start": "2072169",
    "end": "2079790"
  },
  {
    "text": "can see that memo range is a bit slower than access to the memory with disabled",
    "start": "2079790",
    "end": "2085280"
  },
  {
    "text": "cache and it three times faster than the closest competitor we are close to the",
    "start": "2085280",
    "end": "2093648"
  },
  {
    "text": "end of our dramatic story let me recap very briefly on what I've presented and",
    "start": "2093649",
    "end": "2099470"
  },
  {
    "text": "what you alone first of all I demonstrated when drivers can access",
    "start": "2099470",
    "end": "2105319"
  },
  {
    "text": "kernel mode memory without any security reaction then I presented memory ranger",
    "start": "2105319",
    "end": "2112130"
  },
  {
    "text": "which can prevent unauthorized memory access by running drivers into isolated",
    "start": "2112130",
    "end": "2117859"
  },
  {
    "text": "enclaves finally I I like to highlight while important thing and I suppose that",
    "start": "2117859",
    "end": "2126829"
  },
  {
    "text": "memo Ranger seems to prevent the recent side-channel attacks like spectre and",
    "start": "2126829",
    "end": "2131900"
  },
  {
    "text": "meltdown and I think it would be interesting to to test this memory",
    "start": "2131900",
    "end": "2139880"
  },
  {
    "text": "ranger using these attacks and if anyone has a prototype of Spector and Mel down",
    "start": "2139880",
    "end": "2145760"
  },
  {
    "text": "please send it I will test and we will see the result and I just like to",
    "start": "2145760",
    "end": "2153079"
  },
  {
    "text": "conclude with old Latin expression it is on the screen",
    "start": "2153079",
    "end": "2158500"
  },
  {
    "text": "this is very famous expression I believe that it is applicable not only for Asian",
    "start": "2158960",
    "end": "2166550"
  },
  {
    "text": "Sparta but only for kernel-mode drivers in used windows thank you that's it and",
    "start": "2166550",
    "end": "2177590"
  },
  {
    "text": "now and now we are moving to the most",
    "start": "2177590",
    "end": "2185150"
  },
  {
    "text": "interesting part of today's topic for your questions please raise your hands",
    "start": "2185150",
    "end": "2194350"
  },
  {
    "text": "we've got just one question hello thanks for the talk",
    "start": "2194350",
    "end": "2200600"
  },
  {
    "text": "is it correct my understanding correct that you can only use memory ranger on",
    "start": "2200600",
    "end": "2206000"
  },
  {
    "text": "x86 platforms so it's like architecture specific the thing is that memory range",
    "start": "2206000",
    "end": "2213410"
  },
  {
    "text": "is based on hypervisor facilities and it is works on all platforms which supports",
    "start": "2213410",
    "end": "2219800"
  },
  {
    "text": "vt-x technology with EPT provided by Intel not only for Windows this is let's",
    "start": "2219800",
    "end": "2227570"
  },
  {
    "text": "open some interesting slide with memory and jacket area there are a lot of",
    "start": "2227570",
    "end": "2235190"
  },
  {
    "text": "projects for UNIX operating system which",
    "start": "2235190",
    "end": "2240730"
  },
  {
    "text": "focusing on similar similar tasks yeah and for ARM architecture you know",
    "start": "2240730",
    "end": "2247670"
  },
  {
    "text": "they've got similar hypervisor facilities yet so technically it can",
    "start": "2247670",
    "end": "2255290"
  },
  {
    "text": "work arm technically work I think in in all intro",
    "start": "2255290",
    "end": "2261830"
  },
  {
    "text": "computers which has been sold for the last ten years yes for AMD computers we",
    "start": "2261830",
    "end": "2268640"
  },
  {
    "text": "have bought similar technologies for the last 10 years and I think for arm around",
    "start": "2268640",
    "end": "2276110"
  },
  {
    "text": "computers as well yeah you ought you",
    "start": "2276110",
    "end": "2282170"
  },
  {
    "text": "also mentioned there are unique solutions how it would be different on",
    "start": "2282170",
    "end": "2288050"
  },
  {
    "text": "UNIX of for example like on Linux systems I know that like Linux likes to pass",
    "start": "2288050",
    "end": "2294600"
  },
  {
    "text": "internal data structures from one piece of code to another so technically you",
    "start": "2294600",
    "end": "2300480"
  },
  {
    "text": "can operate on an internal data structure which is not necessarily it can be allocated by another driver and",
    "start": "2300480",
    "end": "2307170"
  },
  {
    "text": "you have a legit way legit need to access it yeah",
    "start": "2307170",
    "end": "2312900"
  },
  {
    "text": "this is a very complicated question the thing is that nowadays mam arranger does",
    "start": "2312900",
    "end": "2320040"
  },
  {
    "text": "not provide shared access to one memory for two drivers but access policies can",
    "start": "2320040",
    "end": "2326520"
  },
  {
    "text": "be adopted yeah to improve it the thing is that now rules are quite simple yeah",
    "start": "2326520",
    "end": "2333930"
  },
  {
    "text": "only drive a whole a case memory has full access to this data all other accesses can't access but my idea is we",
    "start": "2333930",
    "end": "2342780"
  },
  {
    "text": "can generate a memory access rules on the compile phase when we compile our",
    "start": "2342780",
    "end": "2349590"
  },
  {
    "text": "drivers using visual studio in the development phase we can generate because developers always know which",
    "start": "2349590",
    "end": "2356070"
  },
  {
    "text": "memory because for example several drivers usually compiled in the one solution and in now we can prepare",
    "start": "2356070",
    "end": "2367640"
  },
  {
    "text": "appropriate memory access rules the thing is that for linux based solutions",
    "start": "2367640",
    "end": "2373110"
  },
  {
    "text": "they've got operating system we've open a code for example linux ubuntu and a",
    "start": "2373110",
    "end": "2379950"
  },
  {
    "text": "lot of EV and they got more mechanisms",
    "start": "2379950",
    "end": "2385560"
  },
  {
    "text": "to protect memory yeah in my paper yeah I want if you if you you can read my",
    "start": "2385560",
    "end": "2395490"
  },
  {
    "text": "paper there I think about about 30 projects which are folks on precisely",
    "start": "2395490",
    "end": "2403050"
  },
  {
    "text": "this topic how to protect memory and vast majority is developed for UNIX",
    "start": "2403050",
    "end": "2408870"
  },
  {
    "text": "based systems not for Windows just few for Windows thank you thank you",
    "start": "2408870",
    "end": "2415820"
  },
  {
    "text": "actually this is the big problem with memory protection in kernel mode because",
    "start": "2415820",
    "end": "2422660"
  },
  {
    "text": "the main idea of Microsoft company is that Kurama drivers do not include",
    "start": "2422660",
    "end": "2431240"
  },
  {
    "text": "malware or don't have molnár abilities and we always trust kernel-mode but",
    "start": "2431240",
    "end": "2438270"
  },
  {
    "text": "nowadays we can see a lot of examples of malware which can leverage drivers",
    "start": "2438270",
    "end": "2443599"
  },
  {
    "text": "facilities we can a lot of drivers which can include owner abilities yeah",
    "start": "2443599",
    "end": "2451910"
  },
  {
    "text": "attacks for example Stuxnet is old-fashioned attack more than 10 10 12",
    "start": "2451910",
    "end": "2457799"
  },
  {
    "text": "years ago the thing is it I think it",
    "start": "2457799",
    "end": "2464910"
  },
  {
    "text": "will be good idea to implement the mechanism of process switching between",
    "start": "2464910",
    "end": "2472109"
  },
  {
    "text": "process like process context in the kernel mode yeah for especially for",
    "start": "2472109",
    "end": "2478950"
  },
  {
    "text": "windows because we've got source code was there kernel and we can protect",
    "start": "2478950",
    "end": "2484530"
  },
  {
    "text": "these drivers oh we've got one question more thank you so as far as I know a",
    "start": "2484530",
    "end": "2494730"
  },
  {
    "text": "hyper-v also uses Intel a apt so does your software run next hyper-v or is",
    "start": "2494730",
    "end": "2503190"
  },
  {
    "text": "there a problem to use it both on one system the thing is that I've tested a",
    "start": "2503190",
    "end": "2510150"
  },
  {
    "text": "memory ranger without hyper-v and this is quite an issue to work this two",
    "start": "2510150",
    "end": "2517680"
  },
  {
    "text": "different solutions which use same technology the translational EPT at the",
    "start": "2517680",
    "end": "2523529"
  },
  {
    "text": "same machine this is will be my next steps to check not only with hyper-v",
    "start": "2523529",
    "end": "2531960"
  },
  {
    "text": "with another technologies like with antivirus systems",
    "start": "2531960",
    "end": "2537890"
  },
  {
    "text": "let's see but maybe hyper we will integrate memory ranger principles yeah",
    "start": "2537890",
    "end": "2544789"
  },
  {
    "text": "thank you oh we've got one more question so it",
    "start": "2544789",
    "end": "2553380"
  },
  {
    "text": "works only on newly loaded drivers yeah only annually load the drivers yep so it should be possible to unload",
    "start": "2553380",
    "end": "2559609"
  },
  {
    "text": "driver and load it again he means it",
    "start": "2559609",
    "end": "2565119"
  },
  {
    "text": "loaded driver and then unload is if a driver is previously loaded in order to",
    "start": "2565119",
    "end": "2572599"
  },
  {
    "text": "be here - - - - yeah",
    "start": "2572599",
    "end": "2578239"
  },
  {
    "text": "to avoid this protection yeah yeah the thing is I haven't tested your scenario",
    "start": "2578239",
    "end": "2585440"
  },
  {
    "text": "but you know the current version of memory range is just proof of concept",
    "start": "2585440",
    "end": "2591950"
  },
  {
    "text": "prototype it doesn't support unloading drivers and deleting context EPT",
    "start": "2591950",
    "end": "2598190"
  },
  {
    "text": "structures yeah I assume the drivers will load it in a",
    "start": "2598190",
    "end": "2604609"
  },
  {
    "text": "legal way like using service Control Manager because there are various",
    "start": "2604609",
    "end": "2609769"
  },
  {
    "text": "hackers a process to load kernel-mode code and and continuously working just",
    "start": "2609769",
    "end": "2616819"
  },
  {
    "text": "like Nvidia drivers yeah so this would be a suggestion already loaded - I don't",
    "start": "2616819",
    "end": "2626089"
  },
  {
    "text": "find the memory allocations and we map them using a new EP t to protect",
    "start": "2626089",
    "end": "2632719"
  },
  {
    "text": "existing loaded drivers here you mean just patching EPT rules yeah you know",
    "start": "2632719",
    "end": "2639380"
  },
  {
    "text": "yeah thank you for questions it's a hack absolutely thinking about yes you're",
    "start": "2639380",
    "end": "2646849"
  },
  {
    "text": "right if you can now this in the current version memory access memory rules yeah",
    "start": "2646849",
    "end": "2652849"
  },
  {
    "text": "they do not protect it from being ridden over written yes you can change rules",
    "start": "2652849",
    "end": "2659449"
  },
  {
    "text": "yeah but it can be possible to protect these rules using specific EPT structure",
    "start": "2659449",
    "end": "2666140"
  },
  {
    "text": "for memory Ranger and these rules yeah yeah this is one of key point here yeah",
    "start": "2666140",
    "end": "2672709"
  },
  {
    "text": "you understand everything thank you",
    "start": "2672709",
    "end": "2678549"
  },
  {
    "text": "we've got some minutes yeah five minutes oh we got one more question how do you",
    "start": "2681190",
    "end": "2689109"
  },
  {
    "text": "protect your driver when you're booting your machine from another may be malicious driver that was already",
    "start": "2689109",
    "end": "2694900"
  },
  {
    "text": "installing your machine maybe we'll try to disable your drive and avoid this protection and disable these protections",
    "start": "2694900",
    "end": "2702119"
  },
  {
    "text": "nowadays I don't provide any mechanism to protect my drivers from malware",
    "start": "2702119",
    "end": "2707890"
  },
  {
    "text": "driver I just consider this scenario - yeah but it's possible - to implement",
    "start": "2707890",
    "end": "2715329"
  },
  {
    "text": "some ideas but it's only arm race yeah how many techniques do you know how many",
    "start": "2715329",
    "end": "2721510"
  },
  {
    "text": "techniques are implemented yeah also if we watch few minutes I can show you one",
    "start": "2721510",
    "end": "2728349"
  },
  {
    "text": "more demo do you have some more questions no no let's see one more demo without sound",
    "start": "2728349",
    "end": "2736930"
  },
  {
    "text": "but yeah this video will demonstrate an early version of memory Ranger yeah and",
    "start": "2736930",
    "end": "2745270"
  },
  {
    "text": "we can see the another interesting question how often we need to swap",
    "start": "2745270",
    "end": "2752529"
  },
  {
    "text": "context between different EPT structures to protect our driver first we'll launch",
    "start": "2752529",
    "end": "2763210"
  },
  {
    "text": "memory Ranger yeah yeah the memory has been loaded yeah now well",
    "start": "2763210",
    "end": "2771579"
  },
  {
    "text": "loaded memory which allocates memory",
    "start": "2771579",
    "end": "2777660"
  },
  {
    "text": "copy is address and track yeah yeah yeah",
    "start": "2780960",
    "end": "2788829"
  },
  {
    "text": "in the this which shows the switch",
    "start": "2788829",
    "end": "2795400"
  },
  {
    "text": "between the default apt and the protected DVD here is from the default to the protected in a session you can",
    "start": "2795400",
    "end": "2803619"
  },
  {
    "text": "see how how often we change our apt pointer between various drivers in this",
    "start": "2803619",
    "end": "2809770"
  },
  {
    "text": "case we've got only one protected driver and all others all other drivers",
    "start": "2809770",
    "end": "2814890"
  },
  {
    "text": "in the default apt one only one driver which is memory allocated loaded in the",
    "start": "2814890",
    "end": "2820380"
  },
  {
    "text": "protector just for example how often and this is attacker attack is loaded into",
    "start": "2820380",
    "end": "2830940"
  },
  {
    "text": "the default EPT instruction now attacker",
    "start": "2830940",
    "end": "2840900"
  },
  {
    "text": "wants to dump this driver and we can see",
    "start": "2840900",
    "end": "2846350"
  },
  {
    "text": "yep that memo Ranger let's have a look",
    "start": "2846350",
    "end": "2854840"
  },
  {
    "text": "yeah and what about the next address yep and yeah we've got only one read access",
    "start": "2854840",
    "end": "2863030"
  },
  {
    "text": "because we read only one byte and now",
    "start": "2863030",
    "end": "2868770"
  },
  {
    "text": "it's time to check allocation I allocate just ABCD yeah we demonstrated it the",
    "start": "2868770",
    "end": "2877650"
  },
  {
    "text": "member has been Oh like again here is the point now we're reading the content",
    "start": "2877650",
    "end": "2884160"
  },
  {
    "text": "of our driver using our drive itself got a minute yeah and to read just one",
    "start": "2884160",
    "end": "2891600"
  },
  {
    "text": "bite we need to got a lot of switching between EPT console you know because",
    "start": "2891600",
    "end": "2899550"
  },
  {
    "text": "we've got scheduler we've got lots of file system drivers which need to be",
    "start": "2899550",
    "end": "2904830"
  },
  {
    "text": "executed and you can see how many 1 2 3 4 swishing to read just one bite from",
    "start": "2904830",
    "end": "2912480"
  },
  {
    "text": "our protected driver",
    "start": "2912480",
    "end": "2916070"
  },
  {
    "text": "yeah we were just one minute and now",
    "start": "2923710",
    "end": "2929710"
  },
  {
    "text": "it's time to check allocation we allocate ABCD without painters yeah you",
    "start": "2929710",
    "end": "2940780"
  },
  {
    "text": "can see how many interceptions how many solutions is needed to hotel like it she",
    "start": "2940780",
    "end": "2947170"
  },
  {
    "text": "buys yeah anyway I will copy this",
    "start": "2947170",
    "end": "2952300"
  },
  {
    "text": "address and move to the attacker we double-check the data has been allocated",
    "start": "2952300",
    "end": "2961140"
  },
  {
    "text": "who tries to overwrite this data yeah yeah this is this is our data and the",
    "start": "2964950",
    "end": "2975400"
  },
  {
    "text": "data have been allocated we would double effort to end",
    "start": "2975400",
    "end": "2979769"
  },
  {
    "text": "yeah but restore and now we tries to access this data using another driver",
    "start": "2989940",
    "end": "2998720"
  },
  {
    "text": "yep and the data doesn't protect it and you can see there are a lot of",
    "start": "2998720",
    "end": "3004360"
  },
  {
    "text": "interceptions switches switches using protect driver and not protected yeah",
    "start": "3004360",
    "end": "3013460"
  },
  {
    "text": "this is close to the question about benchmark assessment and how fast memory",
    "start": "3013460",
    "end": "3020240"
  },
  {
    "text": "Nia is working and that's it yes thank",
    "start": "3020240",
    "end": "3029390"
  },
  {
    "text": "you",
    "start": "3029390",
    "end": "3031480"
  }
]