[
  {
    "text": "I'm here with Matt Hastings uh thanks for joining us for our presentation on DS compromised a Windows DSC attack",
    "start": "199",
    "end": "6640"
  },
  {
    "text": "framework uh by way of quick introduction uh I'm uh the chief security architect for tanium uh we are",
    "start": "6640",
    "end": "12599"
  },
  {
    "text": "a endpoint security and systems management software company uh and I work directly with Matt uh who's also a",
    "start": "12599",
    "end": "19400"
  },
  {
    "text": "security director uh on my team and both of us have backgrounds in uh penetration",
    "start": "19400",
    "end": "24960"
  },
  {
    "text": "testing incident response and forensics and in particular incident response and forensics for large scale uh targeted",
    "start": "24960",
    "end": "31720"
  },
  {
    "text": "attacks um prior to working at tum we worked at mandiant for six years for myself three or four yeah about um",
    "start": "31720",
    "end": "39640"
  },
  {
    "text": "investigating targeted attacks and so as part of that we spent a lot of time continuously chasing the tail of",
    "start": "39640",
    "end": "45559"
  },
  {
    "text": "attackers that often deployed novel techniques to break into environments or to persist and evade detection and uh",
    "start": "45559",
    "end": "52559"
  },
  {
    "text": "that actually led us in 2014 to do a presentation and research on investigating Powershell attacks at",
    "start": "52559",
    "end": "58719"
  },
  {
    "text": "black hat um in con and a few other conferences and the impetus when we did that research two years ago was working",
    "start": "58719",
    "end": "64640"
  },
  {
    "text": "a case where uh an attacker used some at the time really novel techniques uh to compromise and persist in an environment",
    "start": "64640",
    "end": "71240"
  },
  {
    "text": "with Powershell and we were caught in the difficult situation of having to figure out the best analytic approach uh",
    "start": "71240",
    "end": "77439"
  },
  {
    "text": "for those techniques after the fact so following that presentation and research we kind of wanted to go a step further",
    "start": "77439",
    "end": "83079"
  },
  {
    "text": "and see where else we could take um our look at Powershell and how it can be used and abused by attackers um and try",
    "start": "83079",
    "end": "89680"
  },
  {
    "text": "to be a little bit more proactive about it and so that led to this work that we're going to present to you",
    "start": "89680",
    "end": "95159"
  },
  {
    "text": "today so we're going to provide a quick background on DSC um before we launch into the overview of our DS compromised",
    "start": "95159",
    "end": "102680"
  },
  {
    "text": "framework and the attack scenarios that we're going to go through um then we're going to switch from offensive mode to",
    "start": "102680",
    "end": "108360"
  },
  {
    "text": "defensive mode and talk about sources of evidence and investigating or detecting um the toolkit that we've provided and",
    "start": "108360",
    "end": "115040"
  },
  {
    "text": "the attack scenarios that we outline so let's begin with that",
    "start": "115040",
    "end": "121079"
  },
  {
    "text": "background uh just by show of hands and and don't be shy here how many uh in the audience have used DSC desired State",
    "start": "121079",
    "end": "128399"
  },
  {
    "text": "configuration before I see one hand up one yeah that's",
    "start": "128399",
    "end": "133760"
  },
  {
    "text": "about right yeah that's about right we actually did this presentation in an earlier form uh about six months ago and",
    "start": "133760",
    "end": "139599"
  },
  {
    "text": "I think we had one or two hands up there uh suffice it to say a lot of people don't even know this thing exists so",
    "start": "139599",
    "end": "145959"
  },
  {
    "text": "let's talk about what that is so dsse is the NextGen configuration management",
    "start": "145959",
    "end": "151879"
  },
  {
    "text": "platform for Windows um it is fully instrumented via Powershell uh it is an",
    "start": "151879",
    "end": "157480"
  },
  {
    "text": "intrinsically Powershell driven solution uh but at its core it enforces",
    "start": "157480",
    "end": "162519"
  },
  {
    "text": "configurations using a very old standardized format which isof managed object format um it has a few",
    "start": "162519",
    "end": "169920"
  },
  {
    "text": "distinctions from the other Technologies you've probably seen to manage Windows systems uh for example unlike secm or",
    "start": "169920",
    "end": "176599"
  },
  {
    "text": "group policy uh you need not be on an active directory domain to manage systems with DSC and so part of the",
    "start": "176599",
    "end": "183440"
  },
  {
    "text": "design consideration was to really have a NextGen technology that was agostic of",
    "start": "183440",
    "end": "188599"
  },
  {
    "text": "domain environments agnostic of being on the traditional Legacy corporate Network to configure systems at scale and there",
    "start": "188599",
    "end": "195519"
  },
  {
    "text": "are a lot of similarities in dsse to puppet and Chef um in in truth there's",
    "start": "195519",
    "end": "201599"
  },
  {
    "text": "actually some distinctions in that dsse is not a complete solution stack as puppet or Chef are and so you can think",
    "start": "201599",
    "end": "207480"
  },
  {
    "text": "of DSC as kind of the engine that's in ing the configuration layer uh in fact",
    "start": "207480",
    "end": "212720"
  },
  {
    "text": "Microsoft has done work to make dsse interoperable with some of those other",
    "start": "212720",
    "end": "218040"
  },
  {
    "text": "Technologies so what can you do with DSC uh the the as the name implies the",
    "start": "218040",
    "end": "223680"
  },
  {
    "text": "concept is to have a desired configuration state of a system and make",
    "start": "223680",
    "end": "228799"
  },
  {
    "text": "sure that it remains true over time and it does so by means of what are called resources and these resources are",
    "start": "228799",
    "end": "235720"
  },
  {
    "text": "basically capabilities that dsse can enforce on systems those resources include things like",
    "start": "235720",
    "end": "242000"
  },
  {
    "text": "being able to download and create files uh to execute processes to run scripts",
    "start": "242000",
    "end": "248000"
  },
  {
    "text": "to create or manage the Privileges of users to control services to edit the registry and when we first looked down",
    "start": "248000",
    "end": "254640"
  },
  {
    "text": "this list of resources when we were exploring DSC um the first thing that came to mind was that this list of",
    "start": "254640",
    "end": "259959"
  },
  {
    "text": "capabilities is very similar to what you ascribe to a full featured back door um",
    "start": "259959",
    "end": "265680"
  },
  {
    "text": "now that isn't necessarily Fair because I think the line between a full full featured backdoor and any system",
    "start": "265680",
    "end": "271840"
  },
  {
    "text": "administration toolkit is often blurry it's intent that really makes it different but we also know from our past",
    "start": "271840",
    "end": "278360"
  },
  {
    "text": "experience that the best attackers are those that leverage built-in system capabilities to do their dirty work",
    "start": "278360",
    "end": "285120"
  },
  {
    "text": "instead of having to roll their own tools and so this is what got us interested in seeing how this could be used in attack",
    "start": "285120",
    "end": "291400"
  },
  {
    "text": "scenarios so the basic workflow for how dsse works is You author a configuration",
    "start": "291400",
    "end": "297560"
  },
  {
    "text": "and that spits out a moth file and thatof file then has to get delivered and ingested to the system that you want",
    "start": "297560",
    "end": "304479"
  },
  {
    "text": "to configure and DSC supports this through two modes of operation the first is push and the second is pull and they",
    "start": "304479",
    "end": "312720"
  },
  {
    "text": "work exactly as they sound push literally means your server has a configuration MF file and it's going to",
    "start": "312720",
    "end": "319680"
  },
  {
    "text": "connect to your remote system uh using the winrm uh the windows Remote Management protocol to send it pull mode",
    "start": "319680",
    "end": "326600"
  },
  {
    "text": "means that you tell the client to retrieve the configuration from a server that's hosting it",
    "start": "326600",
    "end": "331880"
  },
  {
    "text": "literally a web server hosting the moth file and in poll mode that can be achieved over SMB HTTP or https and it's",
    "start": "331880",
    "end": "340720"
  },
  {
    "text": "those latter two that are particularly interesting by intent this can work with a non- internal non-domain joined",
    "start": "340720",
    "end": "348400"
  },
  {
    "text": "configuration server meaning a server on the internet can host these things and we'll show you how we use that in our",
    "start": "348400",
    "end": "354440"
  },
  {
    "text": "scenarios um so the victim the the system to be configured the so-called victim uh consumes the configuration and",
    "start": "354440",
    "end": "361800"
  },
  {
    "text": "then automatically uh continuously monitors for drift and if it detects",
    "start": "361800",
    "end": "367680"
  },
  {
    "text": "drift if it detects that the config is no longer being applied it fixes itself",
    "start": "367680",
    "end": "372919"
  },
  {
    "text": "this is the core of how DSC Works to be explicitly clear and",
    "start": "372919",
    "end": "379000"
  },
  {
    "text": "hopefully half of you don't all leave the room uh at this point we have not found zero day vulnerabilities or really",
    "start": "379000",
    "end": "384919"
  },
  {
    "text": "any intrinsic vulnerabilities in how dsse is designed or implemented and what I mean by that is we have not exploited",
    "start": "384919",
    "end": "392120"
  },
  {
    "text": "anything that's wrong per se in dsse um we haven't even detected ways to privilege escalate uh as you probably",
    "start": "392120",
    "end": "399199"
  },
  {
    "text": "are guessing you cannot configure a system with DSC unless you have administrator equivalent credentials or",
    "start": "399199",
    "end": "406400"
  },
  {
    "text": "access to it but what we have done is identified ways that DSC could be abused",
    "start": "406400",
    "end": "411759"
  },
  {
    "text": "as a covert persistence mechanism and this is consistent with every other persistence mechanism that you see",
    "start": "411759",
    "end": "417639"
  },
  {
    "text": "attackers use in Windows be it services or run Keys uh or um explore extensions",
    "start": "417639",
    "end": "424400"
  },
  {
    "text": "all of those are built-in Windows mechanisms that attackers hijack to persist malware so we thought why not",
    "start": "424400",
    "end": "430520"
  },
  {
    "text": "DSC as well what we then wanted to do was simplify the process for weaponizing",
    "start": "430520",
    "end": "436120"
  },
  {
    "text": "it because we quickly found that thec is not too easy to use um and then finally to be responsible citizens and to really",
    "start": "436120",
    "end": "443080"
  },
  {
    "text": "Drive uh the um detection and response part of this forward we wanted to",
    "start": "443080",
    "end": "448400"
  },
  {
    "text": "provide information on how to actually detect that this is occurring so why would an attacker",
    "start": "448400",
    "end": "454240"
  },
  {
    "text": "choose to use DSC um I think one reason is that it is obscure and flexible",
    "start": "454240",
    "end": "460039"
  },
  {
    "text": "obscure meaning none of the security tools that Matt and I have used in our past lives even things as uh",
    "start": "460039",
    "end": "466479"
  },
  {
    "text": "comprehensive as like Auto runs uh identifies uh processes or scripts that",
    "start": "466479",
    "end": "472800"
  },
  {
    "text": "are persistent via DSC which means it's a huge blind spot in the security monitoring and operations of most",
    "start": "472800",
    "end": "478919"
  },
  {
    "text": "organizations um based on the fact that only one person in this room raised their hand for even having used DC before I'm going",
    "start": "478919",
    "end": "485319"
  },
  {
    "text": "to guess that most of you uh as if you're working in a sock or in an IR capacity are not continuously monitoring",
    "start": "485319",
    "end": "491879"
  },
  {
    "text": "for abuse of dsse and so we'll provide some info on that but I think that's one reason why an attacker might pursue this",
    "start": "491879",
    "end": "498400"
  },
  {
    "text": "the other feature that's really nice is by Design because DC is continuously reinforcing a config state that provides",
    "start": "498400",
    "end": "505720"
  },
  {
    "text": "an attacker with the ability to automatically reinfect a system that is not properly cleaned up and that's kind",
    "start": "505720",
    "end": "511680"
  },
  {
    "text": "of cool so we'll show you how that works in our attack scenarios in just a moment so the limitations as I alluded",
    "start": "511680",
    "end": "519120"
  },
  {
    "text": "to earlier uh first and foremost it is not easy to use dsse um there isn't a",
    "start": "519120",
    "end": "524279"
  },
  {
    "text": "ton of documentation out there because it's so new and because so few people are using it except for this very",
    "start": "524279",
    "end": "530560"
  },
  {
    "text": "hardcore community of like Powershell and uh DSC enthusiasts uh it is also",
    "start": "530560",
    "end": "536360"
  },
  {
    "text": "relatively new and by that I mean you need power sh uh Powershell and Windows",
    "start": "536360",
    "end": "541399"
  },
  {
    "text": "management framework 4.0 or later to use DSC uh that is the default version in",
    "start": "541399",
    "end": "547720"
  },
  {
    "text": "8.1 and Server 2012 R2 and later so it is going to be more and more prevalent",
    "start": "547720",
    "end": "552920"
  },
  {
    "text": "but uh in both of our experiences most organizations are still running Windows 7 by and large as their most common",
    "start": "552920",
    "end": "559480"
  },
  {
    "text": "workstation OS um you can upgrade wmf um on to to",
    "start": "559480",
    "end": "566399"
  },
  {
    "text": "four 4.0 or 5.0 um on older versions of windows but very few people do that um",
    "start": "566399",
    "end": "571800"
  },
  {
    "text": "and then as I said before it does require admin on your victim host uh again that's not terribly uncommon as",
    "start": "571800",
    "end": "578040"
  },
  {
    "text": "part of an attack life cycle for Intruder to gain that level of credentials so again just to be clear",
    "start": "578040",
    "end": "583880"
  },
  {
    "text": "this is not a vehicle for priv escalation it's strictly a vehicle for",
    "start": "583880",
    "end": "590240"
  },
  {
    "text": "persistence so why do we do this in the first place we we we grappled with whether this was responsible um research",
    "start": "590399",
    "end": "597440"
  },
  {
    "text": "early on because Matt and I primarily work defense um when we were Consultants even now as Builders um of software we",
    "start": "597440",
    "end": "604519"
  },
  {
    "text": "work more on detection and defense rather than offense um but I think we do also both believe that good offense",
    "start": "604519",
    "end": "611000"
  },
  {
    "text": "breeds good defense and we were frankly sick and tired of uh the forensics",
    "start": "611000",
    "end": "616320"
  },
  {
    "text": "Community always having to chase attack techniques after an attacker had already successfully deployed them in the wild",
    "start": "616320",
    "end": "622800"
  },
  {
    "text": "that was exactly what happened to us when we did the PO shell research two years ago um we had to work a case that",
    "start": "622800",
    "end": "629360"
  },
  {
    "text": "had an attacker that clearly knew more about offensive use of Powershell than the forensics and IR Community knew of",
    "start": "629360",
    "end": "636320"
  },
  {
    "text": "corresponding detection and response so we wanted to turn that on its head and actually out a potential attack",
    "start": "636320",
    "end": "642279"
  },
  {
    "text": "technique before anyone's actually used it or at least as far as we can tell so we did this research we have yet to find",
    "start": "642279",
    "end": "649000"
  },
  {
    "text": "any evidence of anyone using this technique in the wild yet that doesn't mean it hasn't happening um but it does",
    "start": "649000",
    "end": "655279"
  },
  {
    "text": "give us hope that maybe we can get this out there and make people aware of it so that red teams can use it effectively",
    "start": "655279",
    "end": "661959"
  },
  {
    "text": "and so blue teams can know how to detect and respond to it all right and with that I'll turn it",
    "start": "661959",
    "end": "667480"
  },
  {
    "text": "over to Matt to discuss our DS compromised framework thanks Brian hey everyone good morning um so in",
    "start": "667480",
    "end": "673240"
  },
  {
    "text": "conjunction with this talk we've also released and Ryan's talked about it a little bit uh this DS compromised",
    "start": "673240",
    "end": "678760"
  },
  {
    "text": "framework and really what it is it's a collection of Powershell scripts and modules that helps someone in a in a",
    "start": "678760",
    "end": "684440"
  },
  {
    "text": "proactive sense use DSC to um basically take advantage of some of the of its",
    "start": "684440",
    "end": "689920"
  },
  {
    "text": "features and really we decided to do this for two key reasons uh the first one being that you know as Ryan always",
    "start": "689920",
    "end": "695360"
  },
  {
    "text": "mentioned DSE is hard to set up and use we found that there's a ton of like quirks with it where if you don't set it",
    "start": "695360",
    "end": "701040"
  },
  {
    "text": "up exactly right you'll get an error message that doesn't indicate anything of what's related of what actually went",
    "start": "701040",
    "end": "706279"
  },
  {
    "text": "wrong and there's no documentation for it um so the first thing that we did is kind of take those steps that we found",
    "start": "706279",
    "end": "711600"
  },
  {
    "text": "to be difficult and automize them through scripting and hopefully will make the process a lot easier actually",
    "start": "711600",
    "end": "717000"
  },
  {
    "text": "get set up and get moving the second second part of that is refactoring some of those resources Ryan mentioned",
    "start": "717000",
    "end": "722560"
  },
  {
    "text": "earlier so a p a DSC resource is really just uh your ability to interact with",
    "start": "722560",
    "end": "728079"
  },
  {
    "text": "something on a system and so there's like a file resource a registry resource a process resource so we've either",
    "start": "728079",
    "end": "734560"
  },
  {
    "text": "refactored those Rewritten them or combine them completely in order to build out more proactive use cases with",
    "start": "734560",
    "end": "741079"
  },
  {
    "text": "DSC and we'll talk about those in the coming slides um the framework itself um is has",
    "start": "741079",
    "end": "747800"
  },
  {
    "text": "a set of scripts designed to set up this this pole server or the C2 server and that's the configure server Powershell",
    "start": "747800",
    "end": "753959"
  },
  {
    "text": "module so that's a full-fledged module with a bunch of different functions in it that walks through the full the entire process of setting up the server",
    "start": "753959",
    "end": "760720"
  },
  {
    "text": "building out your configurations uh and then ultimately infecting your victim with this configure victim script it's",
    "start": "760720",
    "end": "766240"
  },
  {
    "text": "all available on GitHub if anybody wants to check it out um I'll just give a quick plug we're absolutely accepting",
    "start": "766240",
    "end": "771959"
  },
  {
    "text": "pull requests and issue so if anybody wants uh some future enhancement ideas please submit them uh I would really",
    "start": "771959",
    "end": "777839"
  },
  {
    "text": "appreciate that when we first set out in uh in looking at the design of what we wanted DS",
    "start": "777839",
    "end": "783800"
  },
  {
    "text": "compromise to be the first thing we needed to do is decide if we wanted to this to operate in a pull mode or a push",
    "start": "783800",
    "end": "789519"
  },
  {
    "text": "mode so Ryan mentioned the the push mode is when the server itself pushes out the configs Via 1rm and the pull mode is",
    "start": "789519",
    "end": "796560"
  },
  {
    "text": "when the the clients themselves initiate a connection outbound to the server and pull them down either via SMB or HTTP or",
    "start": "796560",
    "end": "803639"
  },
  {
    "text": "https um if you can think about traditional backdoor malware HTTP and https communication outbound to the",
    "start": "803639",
    "end": "810120"
  },
  {
    "text": "internet are obviously much more advantageous than having your server try and push connections or push objects",
    "start": "810120",
    "end": "816079"
  },
  {
    "text": "inbound to to an internal environment that's likely not going to be allowed and also will raise a lot of red flag so",
    "start": "816079",
    "end": "821880"
  },
  {
    "text": "we opted for this this pull mode approach um so each client then would",
    "start": "821880",
    "end": "826959"
  },
  {
    "text": "initiate this what we call quote unquote a beacon out to the C2 server and say hey do you have a configuration for me",
    "start": "826959",
    "end": "832519"
  },
  {
    "text": "and then go ahead and pull that configuration down um the server itself can be on the internet and all of our",
    "start": "832519",
    "end": "838079"
  },
  {
    "text": "testing we had it in an AWS environment and our our local VMS were were're functioning as our victims you can",
    "start": "838079",
    "end": "844639"
  },
  {
    "text": "absolutely do it on an internal server also but just be aware when you set it up there's a bunch of different",
    "start": "844639",
    "end": "849680"
  },
  {
    "text": "requirements that get installed and a few Windows services that get added so if you think about if you're infecting",
    "start": "849680",
    "end": "854880"
  },
  {
    "text": "in a an internal victim and you add a bunch of Windows Services chances are that's going to set up some red flags",
    "start": "854880",
    "end": "860440"
  },
  {
    "text": "yeah when we did this testing the server we set up the C2 server was always an AWS or Azure y um machine in the cloud",
    "start": "860440",
    "end": "868399"
  },
  {
    "text": "and so this were is is pretty straightforward and we're going to walk through it but the first step would be configuring your server um setting up",
    "start": "868399",
    "end": "874000"
  },
  {
    "text": "some of the dependencies and then running the the configure server module then building out these payloads which",
    "start": "874000",
    "end": "879079"
  },
  {
    "text": "are just our version of of wrapping these resources and then we'll talk about those in a bit more detail so in",
    "start": "879079",
    "end": "884440"
  },
  {
    "text": "this case it would be either our payload or user resource and then configuring our victim to go out and actually pull",
    "start": "884440",
    "end": "890000"
  },
  {
    "text": "these resources down and then infect themselves or or produce change so let's walk through our first",
    "start": "890000",
    "end": "896000"
  },
  {
    "text": "attack scenario so this would be we want to infect our machine with back door malware uh our victim we want to ensure",
    "start": "896000",
    "end": "901480"
  },
  {
    "text": "this malware continues to execute and remain on disk you know this is pretty standard this isn't anything that I would consider novel or different than",
    "start": "901480",
    "end": "908199"
  },
  {
    "text": "what traditional back door malare already achieves the the the difference here with dsse and what I really liked",
    "start": "908199",
    "end": "914360"
  },
  {
    "text": "is if not properly remediated DSC will automatically reinfect the victim by",
    "start": "914360",
    "end": "919399"
  },
  {
    "text": "redro the file and re-executing the process automatically without notifying the user so while a a blue teamer might",
    "start": "919399",
    "end": "925839"
  },
  {
    "text": "think that they've already effectively remediated a system in fact haven't and what you'll see is that the system will",
    "start": "925839",
    "end": "931360"
  },
  {
    "text": "go ahead and and reinfect itself without notification all right so we're going to give a a quick video demo since we don't",
    "start": "931360",
    "end": "938920"
  },
  {
    "text": "believe in live demos we pre-recorded this one so before we get started on your left is going to be our victim",
    "start": "938920",
    "end": "944319"
  },
  {
    "text": "machine and on your right is going to be the server so the server is going to be the remote server that we've configured to host these configurations and our",
    "start": "944319",
    "end": "950959"
  },
  {
    "text": "victim in this case we're going to assume is an internal system um that we're going to take advantage of and the payload that we're going to",
    "start": "950959",
    "end": "958000"
  },
  {
    "text": "show you here is a simple netcat reverse shell so on the right hand side we're actually going to set up the listener on",
    "start": "958000",
    "end": "964360"
  },
  {
    "text": "the server and on the left hand side is where the victim is going to run the client component so the first thing we do is we",
    "start": "964360",
    "end": "971040"
  },
  {
    "text": "dot Source um this payload file and then we run this configured payLo binary we",
    "start": "971040",
    "end": "976319"
  },
  {
    "text": "give it a source file so whatever we want to produce on the victim needs to also exists on the server and then we",
    "start": "976319",
    "end": "982000"
  },
  {
    "text": "tell it where do we want it to be put on our our victim machine and any arguments that we want um again this is just for",
    "start": "982000",
    "end": "987160"
  },
  {
    "text": "netcat so these should look pretty familiar to most people who are familiar with with netcat so the output of this",
    "start": "987160",
    "end": "992800"
  },
  {
    "text": "is going to be a guid um and the guid is just a unique identifier that represents a configuration so here on the victim",
    "start": "992800",
    "end": "999959"
  },
  {
    "text": "again we're just loading in our our victim uh configuration scripts we're just showing you that the uh the file",
    "start": "999959",
    "end": "1005880"
  },
  {
    "text": "doesn't exist yet and we're showing you that it's not actually",
    "start": "1005880",
    "end": "1010639"
  },
  {
    "text": "running all right so now we're going to go ahead and run this configure victim script and this is very simple it just takes an IP address to your server and",
    "start": "1011240",
    "end": "1017920"
  },
  {
    "text": "it takes a guid that represents the the object that it's going to",
    "start": "1017920",
    "end": "1022600"
  },
  {
    "text": "download as soon as this runs you'll see a bunch of things start popping up in the screen we'll talk about this in a",
    "start": "1023240",
    "end": "1028400"
  },
  {
    "text": "bit more detail but what it is it's what they call the local configuration manager downloading the configuration",
    "start": "1028400",
    "end": "1033600"
  },
  {
    "text": "and then applying it you can see on the lower right here we have the listener already running yep so we have our",
    "start": "1033600",
    "end": "1040000"
  },
  {
    "text": "listener running um and now it's established so if we run something like host name we'll see that we're now",
    "start": "1040000",
    "end": "1045079"
  },
  {
    "text": "actually executing commands on our victim so let's clean this up so if we exit out of the system it's going to",
    "start": "1045079",
    "end": "1050880"
  },
  {
    "text": "effectively shut down uh netcat running on the victim because we've exited out of this session and now we're going to",
    "start": "1050880",
    "end": "1056960"
  },
  {
    "text": "go ahead and delete the file on disk um so we mentioned it automatically reinfect itself it does this through",
    "start": "1056960",
    "end": "1063360"
  },
  {
    "text": "what they call a consistency Checker which is uh implemented through a scheduled task um it's it's created and",
    "start": "1063360",
    "end": "1069039"
  },
  {
    "text": "you can find it if you go to the scheduled task guey and so in this case we're just going to go ahead and automatically re-trigger it so we didn't",
    "start": "1069039",
    "end": "1074679"
  },
  {
    "text": "want to give you guys a 15minute demo while we waited for it to reapply so if we want to go ahead and play it we're",
    "start": "1074679",
    "end": "1080280"
  },
  {
    "text": "now going to force the consistency Checker to run the victim not notifies that it's outside of compliance and then",
    "start": "1080280",
    "end": "1086919"
  },
  {
    "text": "it reinfect itself so we start up our listener again and instantaneously connects back right",
    "start": "1086919",
    "end": "1094360"
  },
  {
    "text": "and so one thing that I'll I'll mention here is that you know when the victim notifies that it's not actually it's not in compliance there's no requirement for",
    "start": "1094360",
    "end": "1100840"
  },
  {
    "text": "it to go back out to the internet to communicate with the the DSC server all the information it needs to reinfect",
    "start": "1100840",
    "end": "1106559"
  },
  {
    "text": "itself is actually stored locally on the box so all of this can be done without an internet connection and Ryan's going",
    "start": "1106559",
    "end": "1111880"
  },
  {
    "text": "to talk about some of the forensics behind that but just be aware that there's no internet connection required here so just to kind of recap we have a",
    "start": "1111880",
    "end": "1118880"
  },
  {
    "text": "single Powershell script that we run on the victim host and all of the leg work of transferring the mware and making",
    "start": "1118880",
    "end": "1125440"
  },
  {
    "text": "sure it keeps running and making sure it's on disk is then automatically done through DSC that need not even be dropped on disk that same Powershell",
    "start": "1125440",
    "end": "1132480"
  },
  {
    "text": "code could have been delivered to the victim via remoting and then solely execute in memory so you could shrink",
    "start": "1132480",
    "end": "1137640"
  },
  {
    "text": "the footprint of this even more if you wanted to yep",
    "start": "1137640",
    "end": "1142320"
  },
  {
    "text": "absolutely just clicking close in the video instead of the actual one all right so now let's walk through in a bit",
    "start": "1143919",
    "end": "1149600"
  },
  {
    "text": "more detail what we actually did so the first step here um with our attacker on the top uh our what you have the remote",
    "start": "1149600",
    "end": "1155799"
  },
  {
    "text": "pull server that's on the internet on on your left and our internal victim here on the right the first thing we're going to do is install the dependencies that",
    "start": "1155799",
    "end": "1162159"
  },
  {
    "text": "DSC actually needs in order to run effectively so the first thing is just run uh add Windows feature DSC service",
    "start": "1162159",
    "end": "1168159"
  },
  {
    "text": "this is going to download and install a lot of the features required by DSC it's going to install those services that I",
    "start": "1168159",
    "end": "1173480"
  },
  {
    "text": "mentioned and it's going to make sure that your iOS web service starts so one of the requirements here is that it's going to download and install IAS and as",
    "start": "1173480",
    "end": "1180039"
  },
  {
    "text": "well as a couple other services uh the next thing you need to do is install a couple of Powershell modules themselves",
    "start": "1180039",
    "end": "1185280"
  },
  {
    "text": "that are required for dsse uh the DSC resource kit um and so there's a link on the GitHub page that we have that points",
    "start": "1185280",
    "end": "1191679"
  },
  {
    "text": "you to this site you just unzip a file it's very simple to do uh at this point you're you're more or less up and",
    "start": "1191679",
    "end": "1196919"
  },
  {
    "text": "running and then you're just going to run This initialized Server um Powershell function which just goes",
    "start": "1196919",
    "end": "1202640"
  },
  {
    "text": "through the final steps of making sure everything is implemented properly uh it sets the ports for you uh and it gets",
    "start": "1202640",
    "end": "1208240"
  },
  {
    "text": "everything up and running so now your pull server is ready to go this is what it looks like um there's a compliance",
    "start": "1208240",
    "end": "1214240"
  },
  {
    "text": "port and a config Port function option these are all um non non uh non-required",
    "start": "1214240",
    "end": "1219559"
  },
  {
    "text": "so there's a default value of 9080 for the compliance port and a default port for 880 for the config but if you wanted",
    "start": "1219559",
    "end": "1225840"
  },
  {
    "text": "to simulate let's say real uh maybe real EST sell traffic you could do 443 so that way it's less likely to set off any",
    "start": "1225840",
    "end": "1233280"
  },
  {
    "text": "alarms so now that we've done this now we need to build and host our payload on the DSC server itself so this is one of",
    "start": "1233280",
    "end": "1239760"
  },
  {
    "text": "the steps we showed you in the video uh and the first thing we need to do is actually make sure that our malware that we want to ex persist on the victim",
    "start": "1239760",
    "end": "1246360"
  },
  {
    "text": "first exists on our server so we just need to copy it there uh and then we're going to run this new payload uh",
    "start": "1246360",
    "end": "1251600"
  },
  {
    "text": "function which basically just takes that script and a couple other arguments and then builds out a payload object that",
    "start": "1251600",
    "end": "1257360"
  },
  {
    "text": "then we pass to BU build a configuration um the script ultimately generates a MF file in a unique guid the",
    "start": "1257360",
    "end": "1264679"
  },
  {
    "text": "MF file is then placed in the correct location and the goid is just maintained for you to then go and give that to the",
    "start": "1264679",
    "end": "1270440"
  },
  {
    "text": "victim and this is what it looks like so um the new payload with the The Source this is where it is on on the server",
    "start": "1270440",
    "end": "1276880"
  },
  {
    "text": "itself then you provide the destination path of where you want it to exist on your victim uh and any optional",
    "start": "1276880",
    "end": "1283240"
  },
  {
    "text": "arguments then you can either pipe this or store it as an object to new configuration and it out puts uh the",
    "start": "1283240",
    "end": "1289640"
  },
  {
    "text": "configuration file that you need so now we connect to our victim we",
    "start": "1289640",
    "end": "1294840"
  },
  {
    "text": "execute this configure victim script it first ensures when RM is enabled which is funny because um if you remember the",
    "start": "1294840",
    "end": "1301520"
  },
  {
    "text": "the first couple slides that Ryan went through when RM is only required in in a in a push mode because it executes over",
    "start": "1301520",
    "end": "1308080"
  },
  {
    "text": "winrm and it's used for poell remoting this is all done over HTTP and https but one of those gotes we figured out is",
    "start": "1308080",
    "end": "1314240"
  },
  {
    "text": "this actually has to be enabled for some other reason um even though it's not really used so this is one of those",
    "start": "1314240",
    "end": "1320039"
  },
  {
    "text": "gotcha so the first thing we do is we ensure when ourm is enabled then it just takes that guid and the IP address of",
    "start": "1320039",
    "end": "1325600"
  },
  {
    "text": "your server and that's it it all downloads the file it also configures this local configuration manager um and",
    "start": "1325600",
    "end": "1332320"
  },
  {
    "text": "we'll go through some of the the more important features of that but just know that it it sets that",
    "start": "1332320",
    "end": "1337640"
  },
  {
    "text": "up you're then your your victim automatically downloads and applies the configuration so this is where we",
    "start": "1337640",
    "end": "1343400"
  },
  {
    "text": "started modifying some of the built-in Powershell uh DSC resources so U we mentioned that there's a file DSC",
    "start": "1343400",
    "end": "1349760"
  },
  {
    "text": "resource um that's true but one of the things that one limitation that we found is that it requires that that file be",
    "start": "1349760",
    "end": "1356520"
  },
  {
    "text": "downloaded over SMB it doesn't get embedded in the moth file so what that means is you would have the the Windows",
    "start": "1356520",
    "end": "1362679"
  },
  {
    "text": "system account trying to use an SMB Connection in this case out to the internet to download a file so you have",
    "start": "1362679",
    "end": "1368240"
  },
  {
    "text": "a couple issues there the first one is that anytime you see an SMB connection out to the internet that's probably",
    "start": "1368240",
    "end": "1373640"
  },
  {
    "text": "going to generate a red flag right it's not something that you would expect to see and it's it's likely something that either going to get blocked by the",
    "start": "1373640",
    "end": "1379480"
  },
  {
    "text": "firewall or generate an alert the second part is it's actually really weird to to",
    "start": "1379480",
    "end": "1384520"
  },
  {
    "text": "give the system help privilege to download a file and actually takes some additional setup so when we saw this it",
    "start": "1384520",
    "end": "1390840"
  },
  {
    "text": "we kind of thought you know that's not how we want it to work so we actually wrote our own custom file resource and",
    "start": "1390840",
    "end": "1396279"
  },
  {
    "text": "so what this does is it actually embeds the file content stored in a bite array in the configuration itself so what that",
    "start": "1396279",
    "end": "1402400"
  },
  {
    "text": "means is you don't have that secondary connection out to the internet over SMB and we'll show you what it actually",
    "start": "1402400",
    "end": "1407480"
  },
  {
    "text": "looks like when it's embedded inside the moth so in this case our internal victim",
    "start": "1407480",
    "end": "1412520"
  },
  {
    "text": "downloads the configuration mops it drops the embedded malware on dis and it goes ahead and executes it and now our",
    "start": "1412520",
    "end": "1419279"
  },
  {
    "text": "attacker is interacting with the the system via the running back door so this is what that looks like um The Moth path",
    "start": "1419279",
    "end": "1427120"
  },
  {
    "text": "again is a temporary um it's not it's not required so again I wouldn't really worry about it but again it's really",
    "start": "1427120",
    "end": "1433559"
  },
  {
    "text": "simple to get get this set up I mentioned the the local configuration manager",
    "start": "1433559",
    "end": "1439159"
  },
  {
    "text": "uh and these are just some of the the more important configuration options that we set so allow module overwrite",
    "start": "1439159",
    "end": "1444480"
  },
  {
    "text": "set the true that basically allows you to dynamically update the configuration on the fly so that the machine will then",
    "start": "1444480",
    "end": "1450000"
  },
  {
    "text": "using the same guid download and update uh a new configuration so if this is set defaults it won't do that the other one",
    "start": "1450000",
    "end": "1457039"
  },
  {
    "text": "that that's really important is this configuration mode apply and autoc correct so that's the most strict um",
    "start": "1457039",
    "end": "1464400"
  },
  {
    "text": "configuration or compliance setting that you can set which basically says if there's any drift from this configuration go ahead and force it back",
    "start": "1464400",
    "end": "1471240"
  },
  {
    "text": "into compliance you can also set it to just report so no changes are implemented on the endpoint you're just you're just notified about it we also",
    "start": "1471240",
    "end": "1478440"
  },
  {
    "text": "set the most aggressive um compliance checks and and poll frequencies so this is going to be every 15 minutes the",
    "start": "1478440",
    "end": "1485760"
  },
  {
    "text": "configuration Checker is going to run to make sure there's no drift on the the victim machine and every 30 minutes the",
    "start": "1485760",
    "end": "1491000"
  },
  {
    "text": "victim machine will check back out or Beacon out to the the server to make sure that there's not a new",
    "start": "1491000",
    "end": "1496480"
  },
  {
    "text": "configuration for them to download so in our scenario we're going to assume that you know our infos Taylor Swift is",
    "start": "1496480",
    "end": "1503960"
  },
  {
    "text": "detects the malware doesn't find a persistence mechanism which she find thinks is a little weird but you know",
    "start": "1503960",
    "end": "1509360"
  },
  {
    "text": "it's a Friday so she goes and kills the process dele a file and she goes around you know making great",
    "start": "1509360",
    "end": "1514679"
  },
  {
    "text": "music but 15 minutes later that scheduled task runs where it forces consistency the comp the the client",
    "start": "1514679",
    "end": "1521960"
  },
  {
    "text": "itself notifies it's not in compliance it tells the server about this which we'll talk about in in a future slide",
    "start": "1521960",
    "end": "1527679"
  },
  {
    "text": "and then goes ahead and sets itself back so the internal victim then re-downloads the malware um every 15 minutes the",
    "start": "1527679",
    "end": "1534600"
  },
  {
    "text": "malware is recreated on the victim and executed and then the attacker regains access to this victim machine uh it's",
    "start": "1534600",
    "end": "1541039"
  },
  {
    "text": "good to note here that because we have that the allow override setting here if we start notifying or if you not notice",
    "start": "1541039",
    "end": "1547399"
  },
  {
    "text": "that a lot of your malware starts dropping you know it's a good indication that maybe someone detected it that's where you can redeploy a different type",
    "start": "1547399",
    "end": "1554320"
  },
  {
    "text": "of malware using the same guid and then you can basically um go back to being",
    "start": "1554320",
    "end": "1560799"
  },
  {
    "text": "hidden and then we've won so then you without proper remediation which we'll talk about here shortly you know you can",
    "start": "1560799",
    "end": "1566919"
  },
  {
    "text": "continue to reinfect your victim Without Really the incident responder understanding what's really going on so",
    "start": "1566919",
    "end": "1572919"
  },
  {
    "text": "in the second uh scenario we just thought well maybe we don't want to actually have back door Mal rning maybe",
    "start": "1572919",
    "end": "1577960"
  },
  {
    "text": "we just want to create an unauthorized user add that user to a group of our choice whether it be the local administrators group or whatever we want",
    "start": "1577960",
    "end": "1584679"
  },
  {
    "text": "and then automatically Force compliance back into those uh into to those specific user in groups so here's a a",
    "start": "1584679",
    "end": "1590919"
  },
  {
    "text": "second quick video of what that looks like and this is going to have the same",
    "start": "1590919",
    "end": "1596480"
  },
  {
    "text": "setup with our victim on the left and the server on the right so the first thing we're going to",
    "start": "1596480",
    "end": "1602960"
  },
  {
    "text": "do here is just check out the the the user so we have administrator and DSC victim and we see who's part of the the",
    "start": "1602960",
    "end": "1609000"
  },
  {
    "text": "local administrators group then on the server we're going to",
    "start": "1609000",
    "end": "1614840"
  },
  {
    "text": "go ahead and run the configure user script",
    "start": "1614840",
    "end": "1620159"
  },
  {
    "text": "so we just give it a username and a password um you have to know the password that you give it must be uh",
    "start": "1621480",
    "end": "1627000"
  },
  {
    "text": "must meet the complexity requirements of the victim so for example if they say must meet complexity requirements so you",
    "start": "1627000",
    "end": "1632120"
  },
  {
    "text": "have to have three of the four and you don't it will not get created there'll be a bunch of errors that get generated",
    "start": "1632120",
    "end": "1637159"
  },
  {
    "text": "and it won't work so now we're going to run our configure victim um on the",
    "start": "1637159",
    "end": "1642200"
  },
  {
    "text": "victim server so we give it the server IP address and the the new guid uh that gets created so this is going to be",
    "start": "1642200",
    "end": "1647559"
  },
  {
    "text": "unique upon every configuration and then we see a bunch of messages from the LCM letting us know that it's downloading en",
    "start": "1647559",
    "end": "1653000"
  },
  {
    "text": "forcing the configuration one thing to know for whatever reason the um the user",
    "start": "1653000",
    "end": "1658720"
  },
  {
    "text": "configuration resource takes significantly longer to enforce than the",
    "start": "1658720",
    "end": "1663840"
  },
  {
    "text": "um the payload one that we wrote which is based on the script resource like I'm not sure why because it seems like it",
    "start": "1663840",
    "end": "1668919"
  },
  {
    "text": "would be simpler but who knows so at this point we need can now",
    "start": "1668919",
    "end": "1676080"
  },
  {
    "text": "check to see you know who are the users on the box and sure enough we see that evil user been created and then if we",
    "start": "1676080",
    "end": "1682200"
  },
  {
    "text": "look at the the user membership for groups we see it's part of the local admins group so we've now effectively",
    "start": "1682200",
    "end": "1688880"
  },
  {
    "text": "added ourselves an administrator on this box so what happens when we remediate so let's go through and and let's delete",
    "start": "1688880",
    "end": "1694600"
  },
  {
    "text": "this evil user and then we'll Force consistency so once we force this to run",
    "start": "1694600",
    "end": "1700480"
  },
  {
    "text": "you know this is not going to be surprising to anyone you know it's going to recognize it not being compliant and then it's going to read that user and",
    "start": "1700480",
    "end": "1707480"
  },
  {
    "text": "put it back into to the group and just as we had explained for the previous video we're manually running the",
    "start": "1707480",
    "end": "1712600"
  },
  {
    "text": "consistency Checker out of sheer laziness to not wait 15 minutes otherwise it would just happen on its own so another feature we figured out",
    "start": "1712600",
    "end": "1719480"
  },
  {
    "text": "with scheduled tasks is there's an option where you can only run a scheduled task if there's power plugged",
    "start": "1719480",
    "end": "1724960"
  },
  {
    "text": "in AC power AC power so this is kind of off topic but uh we had one instance",
    "start": "1724960",
    "end": "1730440"
  },
  {
    "text": "where we couldn't figure out why it wasn't running we thought we had broke DSC again and it turned out our laptop just wasn't plugged in so the consistency Checker never ran so if you",
    "start": "1730440",
    "end": "1737320"
  },
  {
    "text": "ever run into that with schedule task just plug in your laptop and it might run um so here we go the commands uh so",
    "start": "1737320",
    "end": "1745120"
  },
  {
    "text": "if we just check again y user's back the evil the evil user is going to be back as well put in the local administrators",
    "start": "1745120",
    "end": "1751360"
  },
  {
    "text": "group so if you think about um what if you only let's say stop the process or delete the user from the group that",
    "start": "1751360",
    "end": "1758320"
  },
  {
    "text": "still results in a non-compliant finding and will be forced back in so it's not like you you can only delete it the full",
    "start": "1758320",
    "end": "1764559"
  },
  {
    "text": "way so if you just remove the user from the group the group will still get Force back in so here's what we did here and",
    "start": "1764559",
    "end": "1771399"
  },
  {
    "text": "if you notice in both of the videos the syntax uh is slightly different um and that's because the videos were recorded",
    "start": "1771399",
    "end": "1777919"
  },
  {
    "text": "a few months ago and we we did push some new updates to the GitHub account slightly because I realized that we were",
    "start": "1777919",
    "end": "1783159"
  },
  {
    "text": "in non-compliant uh Powershell uh function names so we're now uh fully compliant with powershell's uh verbage",
    "start": "1783159",
    "end": "1790919"
  },
  {
    "text": "that they like their functions to be in so here we have new user we give it our username um whatever we want it to be",
    "start": "1790919",
    "end": "1796360"
  },
  {
    "text": "the password um which again must meet the password complexity requirements of the victim uh one thing to realize here",
    "start": "1796360",
    "end": "1802760"
  },
  {
    "text": "is do not this is not a secured password so by default this wants to take a PS",
    "start": "1802760",
    "end": "1807919"
  },
  {
    "text": "object and in a very secure manner then ship it down to the endpoint and we broke all of that so that it can be",
    "start": "1807919",
    "end": "1814679"
  },
  {
    "text": "provided as a command line argument so don't ever use this with a password that you would expect to be um secured or be",
    "start": "1814679",
    "end": "1820480"
  },
  {
    "text": "used other places um we had to go through a lot of Hoops to make this work uh so it's not secure in any means put",
    "start": "1820480",
    "end": "1827360"
  },
  {
    "text": "another way if you want to use DC legitimately don't use the DS compromised framework use the legitimate",
    "start": "1827360",
    "end": "1832440"
  },
  {
    "text": "DSC resources yeah that's probably a better idea and again you just give it the username the password and a group um",
    "start": "1832440",
    "end": "1838320"
  },
  {
    "text": "by default it will put it in the administrator's group but if you want to drop it somewhere else you can absolutely do that too and it has the",
    "start": "1838320",
    "end": "1844159"
  },
  {
    "text": "same output as the other one uh so the last thing I want to talk about a little bit is the the compliance",
    "start": "1844159",
    "end": "1849640"
  },
  {
    "text": "server itself so we talked about being in and out of compliance and you know as a good um you know backdoor",
    "start": "1849640",
    "end": "1856039"
  },
  {
    "text": "administrator would probably want to track isy who are my victims and you know what what's going on with my victims that I have so um like any good",
    "start": "1856039",
    "end": "1863320"
  },
  {
    "text": "management framework DSC provides that for you so we started looking into the compliant server component of the server",
    "start": "1863320",
    "end": "1869120"
  },
  {
    "text": "and noticed that there's actually a new service that tracks hey what's the pull server status of all of my victims and",
    "start": "1869120",
    "end": "1874960"
  },
  {
    "text": "this is what it looks like so we wrote a Powershell function that wraps this and outputs an object for each one of your",
    "start": "1874960",
    "end": "1880799"
  },
  {
    "text": "victims so um it's included in the module it pulls information from the compliance server so when the on the",
    "start": "1880799",
    "end": "1887120"
  },
  {
    "text": "30-minute interval when your victims check back in they also provide some information to the server letting them",
    "start": "1887120",
    "end": "1892799"
  },
  {
    "text": "know hey I'm in compliance or I'm not in compliance and then there's also some codes generated if they can download",
    "start": "1892799",
    "end": "1898200"
  },
  {
    "text": "them off file so we'll we'll look at those exactly so this is what gets generated so you have a config ID this",
    "start": "1898200",
    "end": "1904279"
  },
  {
    "text": "is that guid for the configuration uh one thought about some some additional enhancements is to basically take that",
    "start": "1904279",
    "end": "1910360"
  },
  {
    "text": "and translate it back to what actually is in that configuration so you can see like this machine is infected with this",
    "start": "1910360",
    "end": "1916120"
  },
  {
    "text": "user or has this user or is infected with this piece of binary um but right now it just Maps back to the goid it",
    "start": "1916120",
    "end": "1921679"
  },
  {
    "text": "also gives you the last check-in time so you can check to see like when the last time your your victim actually check back in the last time it was in",
    "start": "1921679",
    "end": "1928159"
  },
  {
    "text": "compliance uh the check sum this is just a a hash check of what the the config ID",
    "start": "1928159",
    "end": "1933600"
  },
  {
    "text": "is the computer which is going to be an IP or domain name depending on how this is all set up if it's compliant so if",
    "start": "1933600",
    "end": "1940720"
  },
  {
    "text": "the last time it checked in if it was actually in compliance and then the status so when it tries to download the",
    "start": "1940720",
    "end": "1946320"
  },
  {
    "text": "configuration there's a status code that's generated we translate that for you and then let you know what that means so in this case our poll operation",
    "start": "1946320",
    "end": "1952639"
  },
  {
    "text": "was successful all right now Ryan's going to walk through some of the forensic sources of evidence all right so as we",
    "start": "1952639",
    "end": "1960000"
  },
  {
    "text": "said um when we we started the presentation this morning we thought that the responsible way to do this was",
    "start": "1960000",
    "end": "1965200"
  },
  {
    "text": "to present the attack framework and the scenarios that we thought um a adversary might use if if they were to deploy this",
    "start": "1965200",
    "end": "1971679"
  },
  {
    "text": "technique maliciously and then um likewise provide the techniques that you could use to detect it um both on the",
    "start": "1971679",
    "end": "1977360"
  },
  {
    "text": "network as as well as on endpoints and so for this half of the presentation we're going to talk about as a blue team",
    "start": "1977360",
    "end": "1982840"
  },
  {
    "text": "as aert or sock how would you defend or detect someone actually using DS compromised or really any abuse of DSC",
    "start": "1982840",
    "end": "1989639"
  },
  {
    "text": "as part of its Powershell capabilities so the first is on the network um and this is true uh in",
    "start": "1989639",
    "end": "1995480"
  },
  {
    "text": "particular if the DSC pull is configured using HTTP uh it is incredibly obvious",
    "start": "1995480",
    "end": "2002440"
  },
  {
    "text": "when a client is attempting to pull a DSC configuration uh over the internet via or any any destination host via HTTP",
    "start": "2002440",
    "end": "2010600"
  },
  {
    "text": "um you can see there is a very distinctive URI pattern here uh either a post or a get to a file named psds poll",
    "start": "2010600",
    "end": "2018240"
  },
  {
    "text": "server. SVC and then some arguments that specify the configuration ID that it's attempting to retrieve so quick easy win",
    "start": "2018240",
    "end": "2026159"
  },
  {
    "text": "if you've got web proxies or anything to monitor egress web traffic on your uh network uh and you are not using DSC uh",
    "start": "2026159",
    "end": "2033679"
  },
  {
    "text": "you probably should not see this traversing uh your your network uh perimeter this means a client system in",
    "start": "2033679",
    "end": "2040159"
  },
  {
    "text": "your environment is trying to get a config from some host on the internet and that's probably a bad",
    "start": "2040159",
    "end": "2047278"
  },
  {
    "text": "thing uh let's look on dis um and the reason I think uh looking on the",
    "start": "2047320",
    "end": "2052358"
  },
  {
    "text": "endpoint is particularly valuable here is uh what if an attacker uses the SSL mode that DSC supports for configs or",
    "start": "2052359",
    "end": "2059839"
  },
  {
    "text": "what if they do use an internal server um network monitoring might not be then the easiest way to detect this",
    "start": "2059839",
    "end": "2065440"
  },
  {
    "text": "fortunately there is a wealth of evidence uh left on endpoints as well and we'll talk about each of those the",
    "start": "2065440",
    "end": "2070480"
  },
  {
    "text": "first is actually where DSC configurations uh are serialized to disk",
    "start": "2070480",
    "end": "2076280"
  },
  {
    "text": "and this is not specific to our DS compromise toolkit this is true of any dsse configuration um we were actually",
    "start": "2076280",
    "end": "2083480"
  },
  {
    "text": "curious about this we we initially thought it was going to get serialized to like the wmi repository or something",
    "start": "2083480",
    "end": "2089599"
  },
  {
    "text": "like objects. data um but in fact it's actually really simple there's a directory in system 32 called",
    "start": "2089599",
    "end": "2095599"
  },
  {
    "text": "configuration and the MAF file that is pulled down from your pull server or",
    "start": "2095599",
    "end": "2101200"
  },
  {
    "text": "pushed via your push server just lives there in a file named current. moff and when a config gets retrieved a copy is",
    "start": "2101200",
    "end": "2108960"
  },
  {
    "text": "made immediately that's called backup. moff and so if current ever gets corrupt",
    "start": "2108960",
    "end": "2114079"
  },
  {
    "text": "Windows will intelligently just restore from backup um there is also another Mo file that gets created called metac",
    "start": "2114079",
    "end": "2120240"
  },
  {
    "text": "config and we'll show you the contents of that in a moment but that basically contains the information about where the",
    "start": "2120240",
    "end": "2125880"
  },
  {
    "text": "system should go to get the current configuration in the first place um and then finally you'll see a file",
    "start": "2125880",
    "end": "2131960"
  },
  {
    "text": "referenced here called pull run log. text um this was the first thing we looked at in terms of potential like log",
    "start": "2131960",
    "end": "2138760"
  },
  {
    "text": "sources of evidence but we quickly saw it wasn't terribly helpful if you look I at the bottom of the command here or the",
    "start": "2138760",
    "end": "2145040"
  },
  {
    "text": "window here I I did a type command to just Echo the contents of pull run log. text and it's basically a timestamp of",
    "start": "2145040",
    "end": "2152839"
  },
  {
    "text": "when a config was last retrieved so there are better log sources that give you much more detailed information um if",
    "start": "2152839",
    "end": "2159640"
  },
  {
    "text": "you happen to see that pull run log don't worry there's there's better sources of evidence than that so what's in the metacon fig. moff",
    "start": "2159640",
    "end": "2167440"
  },
  {
    "text": "if you actually open up the file I don't know if if you haven't seen MAF files before they're they're actually human readable text um MF uh metacon fig.",
    "start": "2167440",
    "end": "2175800"
  },
  {
    "text": "contains a key value pair of the server address uh from which the config was",
    "start": "2175800",
    "end": "2181200"
  },
  {
    "text": "pulled uh and so you can see right there we've got the IP and Port of our poll server as well as the configuration",
    "start": "2181200",
    "end": "2188319"
  },
  {
    "text": "that is represented by whatever is in current. moff and then all of the settings that Matt alluded to that are",
    "start": "2188319",
    "end": "2194880"
  },
  {
    "text": "um uh set by the DS compromised script in the payload for how often to update",
    "start": "2194880",
    "end": "2200359"
  },
  {
    "text": "the configuration how often to check the consistency um all of those variables are persisted in that Ma file as well so",
    "start": "2200359",
    "end": "2207240"
  },
  {
    "text": "you can get a quick Glimpse at what uh in this case an attacker might have configured the payload uh to do in terms",
    "start": "2207240",
    "end": "2213440"
  },
  {
    "text": "of how it updates itself note that this does not actually tell you what the payload is we'll have to look elsewhere",
    "start": "2213440",
    "end": "2219680"
  },
  {
    "text": "for that um the previously attempted dsse",
    "start": "2219680",
    "end": "2224880"
  },
  {
    "text": "configurations are stored in Windows management framework 5 and later so that",
    "start": "2224880",
    "end": "2230359"
  },
  {
    "text": "is a very new version of wmf and Powershell that is exclusively limited to uh Windows 10 by default and server",
    "start": "2230359",
    "end": "2238560"
  },
  {
    "text": "2016 um like other versions of wmf you can manually upgrade uh older os's as",
    "start": "2238560",
    "end": "2244119"
  },
  {
    "text": "well but you shouldn't expect it to be the default on anything older than Windows 10 um a nice thing though is",
    "start": "2244119",
    "end": "2249599"
  },
  {
    "text": "that in this subdirectory called configuration status it actually tracks previously attempted moths so yet",
    "start": "2249599",
    "end": "2255720"
  },
  {
    "text": "another place where if you see file right activity to these directories that is a Surefire sign someone is trying to",
    "start": "2255720",
    "end": "2261960"
  },
  {
    "text": "drop or configure DSC on your victim host um this view here is going to be",
    "start": "2261960",
    "end": "2268599"
  },
  {
    "text": "too small I think so I'm just going to read through it quickly uh we basically um use some tools to monitor the changes",
    "start": "2268599",
    "end": "2274800"
  },
  {
    "text": "to the endpoints um State as an infection occurred so we took a Windows 8.1 box and then we monitored file",
    "start": "2274800",
    "end": "2281640"
  },
  {
    "text": "system and process events to see what are all of the things that change on the Windows side of things when when an",
    "start": "2281640",
    "end": "2287119"
  },
  {
    "text": "infection is being persisted and so we used the configure uh payload script to",
    "start": "2287119",
    "end": "2292319"
  },
  {
    "text": "drop the executable onto the endpoint the first demo uh scenario we showed you and basically it's what you'd expect so",
    "start": "2292319",
    "end": "2298839"
  },
  {
    "text": "you see a lot of MAF files get created in the configuration directory um The",
    "start": "2298839",
    "end": "2303880"
  },
  {
    "text": "Meta config a pull config and then current. moff uh the first time you",
    "start": "2303880",
    "end": "2308960"
  },
  {
    "text": "configure DSC on an endpoint for any reason the scheduled task to enforce",
    "start": "2308960",
    "end": "2314599"
  },
  {
    "text": "consistency will be created so down here you can see that task being generated for the first time and then the first",
    "start": "2314599",
    "end": "2321079"
  },
  {
    "text": "time you use DSC an event log will be created it's an etw tracing log called",
    "start": "2321079",
    "end": "2326680"
  },
  {
    "text": "not surprisingly uh Microsoft Windows DSC operational. evtx and that log will",
    "start": "2326680",
    "end": "2333200"
  },
  {
    "text": "show you some excerpts in a moment of actually record some some useful data so so that log will be generated the first",
    "start": "2333200",
    "end": "2339040"
  },
  {
    "text": "time you deploy a config as well so all telltale signs a system has been changed in this way and then if we continue down",
    "start": "2339040",
    "end": "2345400"
  },
  {
    "text": "the timeline and again apologies for this being too small um you'll basic you'll basically see the payload moth",
    "start": "2345400",
    "end": "2350920"
  },
  {
    "text": "get dropped to the temporary location that uh the payload script writes to before it's ultimately ingested into the",
    "start": "2350920",
    "end": "2357560"
  },
  {
    "text": "current config and then we do some cleanup work we delete the temporary off um and the system now proceeds so the",
    "start": "2357560",
    "end": "2365240"
  },
  {
    "text": "the basic summary of This is file right activity in that system 32c",
    "start": "2365240",
    "end": "2370520"
  },
  {
    "text": "configuration directory is The Telltale sign that someone is dropping uh DSC configs onto a",
    "start": "2370520",
    "end": "2377920"
  },
  {
    "text": "host uh perhaps a more practical way that I think any environment that is",
    "start": "2377920",
    "end": "2383079"
  },
  {
    "text": "doing event log monitoring could start to collect and monitor for DSC usage would be to forward certain event IDs",
    "start": "2383079",
    "end": "2389920"
  },
  {
    "text": "for some of the key logs and so if you have event forward and configured and you're ingesting that in your sim you",
    "start": "2389920",
    "end": "2395440"
  },
  {
    "text": "might want to look at consuming some of the events because uh hopefully unless you are legitimately using DSC these are",
    "start": "2395440",
    "end": "2402280"
  },
  {
    "text": "going to be very low volume in fact the log probably won't even exist on most of your endpoints um so the DSC operational",
    "start": "2402280",
    "end": "2409240"
  },
  {
    "text": "event log specifically throws four to five events every time a configuration",
    "start": "2409240",
    "end": "2414400"
  },
  {
    "text": "is set or updated and I highlighted a few of the eids here um you'll have the slid so you can get the the exact",
    "start": "2414400",
    "end": "2420760"
  },
  {
    "text": "numbers if they're too small in the back but basically there's an Eid that gets thrown 4102 when the configuration is",
    "start": "2420760",
    "end": "2427680"
  },
  {
    "text": "initially set on the endpoint and it will actually tell you the user Sid that",
    "start": "2427680",
    "end": "2433280"
  },
  {
    "text": "ran the configure payload script in our scenario's case you'll then get a second",
    "start": "2433280",
    "end": "2438480"
  },
  {
    "text": "event that actually has the URI to the poll server so it's very obvious if you monitor for these 4242 events it",
    "start": "2438480",
    "end": "2446119"
  },
  {
    "text": "contains the URI of the pull server address that the attacker configured and again in legitimate usage I would never",
    "start": "2446119",
    "end": "2452480"
  },
  {
    "text": "expect a internet hosting server to be providing configs for an internal host",
    "start": "2452480",
    "end": "2457839"
  },
  {
    "text": "so pulling that event ID would be useful and then 4110 is an event that gets recorded when the configuration is",
    "start": "2457839",
    "end": "2464480"
  },
  {
    "text": "successful so couple of Eid is really simple to monitor this um I have a few",
    "start": "2464480",
    "end": "2469680"
  },
  {
    "text": "other examples here there's one other that uh is interesting 4229 actually writes um a uh there's a",
    "start": "2469680",
    "end": "2478160"
  },
  {
    "text": "temporary MAF file that gets written and the path to that file is captured here as well so you can pick and choose which",
    "start": "2478160",
    "end": "2484119"
  },
  {
    "text": "events to forward but honestly if you you grabbed two or three of these that would be sufficient to know um",
    "start": "2484119",
    "end": "2489920"
  },
  {
    "text": "suspicious DSC activity is occurring on a host uh the second event log that you",
    "start": "2489920",
    "end": "2495119"
  },
  {
    "text": "could centrally monitor uh if you used event forwarding or some other poll mechanism is the task scheduler event",
    "start": "2495119",
    "end": "2500760"
  },
  {
    "text": "log uh as we said the consistency Checker that DSC uses which in our case",
    "start": "2500760",
    "end": "2506400"
  },
  {
    "text": "is making sure that our payload persists on the endpoint um is like any other windows scheduled task and by that I",
    "start": "2506400",
    "end": "2513240"
  },
  {
    "text": "mean when you first configure DSC uh when in our case you first run the configure payload script um this task",
    "start": "2513240",
    "end": "2520319"
  },
  {
    "text": "gets registered and so a Eid 106 event will occur and specifically say that",
    "start": "2520319",
    "end": "2525800"
  },
  {
    "text": "that desired State configuration task was created there's actually two tasks one is called consistency that's the one",
    "start": "2525800",
    "end": "2532680"
  },
  {
    "text": "that runs every 15 minutes the other is called DSC restart boot task just like",
    "start": "2532680",
    "end": "2538440"
  },
  {
    "text": "that sounds that is the one that makes sure a config applies upon reboot um again these are not specifically created",
    "start": "2538440",
    "end": "2545359"
  },
  {
    "text": "by our framework these are intrin to how dsse uh worked in wf4 in WF 5.0 so if",
    "start": "2545359",
    "end": "2552960"
  },
  {
    "text": "you're on Windows 10 and later what we have found is these tasks are no longer used U Microsoft changed how DSC Works",
    "start": "2552960",
    "end": "2561000"
  },
  {
    "text": "to actually provide a uh scheduler that's built into the local configuration manager the LCM so what",
    "start": "2561000",
    "end": "2568040"
  },
  {
    "text": "that means is when a system is configured with DSC in modern versions of of the platform um the consistency",
    "start": "2568040",
    "end": "2575280"
  },
  {
    "text": "check is hardcoded into the LCM automatically happens you will not see this task created as a source of",
    "start": "2575280",
    "end": "2583240"
  },
  {
    "text": "evidence and then finally uh there's Powershell command lits that are part of the DSC toolkits that you can use to get",
    "start": "2584000",
    "end": "2590200"
  },
  {
    "text": "some of this evidence as well so if you have mechanisms to forensically you know execute at scale like Powershell",
    "start": "2590200",
    "end": "2596000"
  },
  {
    "text": "commands and pull the data back um to compare or search for things on your endpoints you can run some of these",
    "start": "2596000",
    "end": "2601400"
  },
  {
    "text": "command lits to look for activity that DSC might be in use and the first is just called get DSC Loc local",
    "start": "2601400",
    "end": "2607359"
  },
  {
    "text": "configuration manager just as it sounds this gives you the state of the LCM on the system and in this case we can see",
    "start": "2607359",
    "end": "2614119"
  },
  {
    "text": "all of the settings that uh Matt talked about that our scripts configure like",
    "start": "2614119",
    "end": "2619240"
  },
  {
    "text": "allow modu apply and autocorrect um the 15minute refresh uh the pull mode um the",
    "start": "2619240",
    "end": "2626480"
  },
  {
    "text": "guid that's configured are all provided by this command lip so perhaps an easier way to get this data than manually",
    "start": "2626480",
    "end": "2632920"
  },
  {
    "text": "scraping it out of the moth file uh instead of scraping the configuration out of the ma file you can",
    "start": "2632920",
    "end": "2639640"
  },
  {
    "text": "also run a command lit to get that and this is pretty neat so get DSC configuration gets the current DC",
    "start": "2639640",
    "end": "2646160"
  },
  {
    "text": "configuration and so what we're showing you on screen here is the configure victim payload where we're persisting a",
    "start": "2646160",
    "end": "2653200"
  },
  {
    "text": "binary and as we said earlier the MAF file that our framework generates is basically a dropper for the executable",
    "start": "2653200",
    "end": "2660160"
  },
  {
    "text": "file that gets written and Rewritten to disk and it's it's basically using the script resource that DSC provides and",
    "start": "2660160",
    "end": "2667280"
  },
  {
    "text": "storing the binary in a bite array and so the long and short of it is if you ran this commandlet across your",
    "start": "2667280",
    "end": "2672880"
  },
  {
    "text": "environment and compared the results you should get blank for all your systems or something that looks like a legitimate",
    "start": "2672880",
    "end": "2678400"
  },
  {
    "text": "config I don't expect that a bite array should ever exist in your active DC configuration on any of your endpoints",
    "start": "2678400",
    "end": "2684760"
  },
  {
    "text": "without someone tampering with them so that's definitely a Telltale sign someone was trying to hack",
    "start": "2684760",
    "end": "2690960"
  },
  {
    "text": "you and this is just a continuation of that same screenshot I didn't want to fit the whole bite array onto one screen",
    "start": "2690960",
    "end": "2697720"
  },
  {
    "text": "um you can see a few other bits of the config too like uh over here are the arguments uh that we pass in this case",
    "start": "2697720",
    "end": "2703880"
  },
  {
    "text": "this is the netcat reverse shell so pretty straightforward uh this is the same",
    "start": "2703880",
    "end": "2710280"
  },
  {
    "text": "command lit but for the configure user payload where we're persisting a user account and a group membership and again",
    "start": "2710280",
    "end": "2717000"
  },
  {
    "text": "this looks exactly like you'd expect the username that we're creating and persisting and the group membership that",
    "start": "2717000",
    "end": "2722720"
  },
  {
    "text": "we're assigning it to in this case evil user and the local administrators",
    "start": "2722720",
    "end": "2728960"
  },
  {
    "text": "group uh one final note um again specific to Windows management framework 5 so Windows 10 or server 2016 and later",
    "start": "2729599",
    "end": "2737520"
  },
  {
    "text": "is uh you can actually another change Microsoft made is the ability to persist",
    "start": "2737520",
    "end": "2742559"
  },
  {
    "text": "multiple configurations at once and that sounds incredibly basic but um probably",
    "start": "2742559",
    "end": "2747839"
  },
  {
    "text": "one of the reasons DSC wasn't terribly popular is you could only have one active config at a time it's actually",
    "start": "2747839",
    "end": "2753359"
  },
  {
    "text": "part of why we shoehorn some of these payloads into this um kind of like Frankenstein thing that we we",
    "start": "2753359",
    "end": "2759359"
  },
  {
    "text": "constructed with the script payload um with 5.0 you can actually have multiple",
    "start": "2759359",
    "end": "2765319"
  },
  {
    "text": "configs active and so when you run get DSC configuration you just get all of the config IDs enumerated that way",
    "start": "2765319",
    "end": "2772640"
  },
  {
    "text": "pretty straightforward all right remediation fortunately remediation is really really",
    "start": "2772640",
    "end": "2779440"
  },
  {
    "text": "basic all you need to do is delete all the mo files out of the system 32 configuration directory at the next",
    "start": "2779440",
    "end": "2785960"
  },
  {
    "text": "consistency check there will no longer be a configuration to reapply and you're good to go now of course this will not",
    "start": "2785960",
    "end": "2792040"
  },
  {
    "text": "remove any of the secondary artifacts that the malicious configuration might have dropped on the endpoint so it's not",
    "start": "2792040",
    "end": "2798440"
  },
  {
    "text": "going to delete the user account or it's not going to delete the malware you dropped or kill the process but it will",
    "start": "2798440",
    "end": "2803559"
  },
  {
    "text": "stop the the consistency check from reoccurring and so if you removed the artifacts of the intrusion or malware",
    "start": "2803559",
    "end": "2810359"
  },
  {
    "text": "and you deleted all these m files you now have cleaned up the system and it should be good to go uh I think there",
    "start": "2810359",
    "end": "2816240"
  },
  {
    "text": "are also some Powershell commandlets you could run to unregister and remove these but um we found that this kind of brute",
    "start": "2816240",
    "end": "2822400"
  },
  {
    "text": "force method works just fine all right so let's wrap up and and",
    "start": "2822400",
    "end": "2830640"
  },
  {
    "text": "summarize uh DSC is probably not going away despite its slow start um in terms",
    "start": "2830640",
    "end": "2837599"
  },
  {
    "text": "of Enterprise adoption uh I think the struggles that Matt and I had to get this working um and what we saw a lot of",
    "start": "2837599",
    "end": "2844640"
  },
  {
    "text": "people complain about online I think have started to be addressed with better documentation and some of the",
    "start": "2844640",
    "end": "2850160"
  },
  {
    "text": "improvements that came about in 5.0 um Microsoft also op source to the dsse",
    "start": "2850160",
    "end": "2855839"
  },
  {
    "text": "resource kit in June of last year and so they're really investing a lot in trying to make this um usable in fact uh you're",
    "start": "2855839",
    "end": "2863160"
  },
  {
    "text": "going to find that you probably will have to use DSC at some point if you're planning on deploying Windows Nano",
    "start": "2863160",
    "end": "2869040"
  },
  {
    "text": "server uh Nano server is this incredibly stripped down um server uh version that",
    "start": "2869040",
    "end": "2876280"
  },
  {
    "text": "um not only eliminates the guey like Windows core but also eliminates a lot of the other subsystems for security and",
    "start": "2876280",
    "end": "2883040"
  },
  {
    "text": "performance reasons and so the only way to actually configure and manage Nano server is actually through DSC so you're",
    "start": "2883040",
    "end": "2890079"
  },
  {
    "text": "going to have to learn it if you want to use Nano server um Azure has a lot of hooks into DSC for virtual machine",
    "start": "2890079",
    "end": "2897040"
  },
  {
    "text": "management and so if you have or plan to stand up a large Fleet in Azure you're going to probably need to use DSC so I",
    "start": "2897040",
    "end": "2902800"
  },
  {
    "text": "don't expect it to kind of Wither and die um that being said we still have not seeing DSC attacks in the wild as we",
    "start": "2902800",
    "end": "2909280"
  },
  {
    "text": "mentioned at the beginning of the presentation uh we continue to see Powershell abuse all over the place um",
    "start": "2909280",
    "end": "2915240"
  },
  {
    "text": "two years ago when we started our research it was still fairly limited uh in the wild and now everything from",
    "start": "2915240",
    "end": "2921880"
  },
  {
    "text": "targeted AP actors to uh ransomware use Powershell in their payloads DSC I think",
    "start": "2921880",
    "end": "2928280"
  },
  {
    "text": "has that extra bit of hurdle and complexity and that smaller victim surface just by virtue of the OS",
    "start": "2928280",
    "end": "2934280"
  },
  {
    "text": "requirements but I could totally see environments that have a large s uh Fleet of Server 2012 machines being",
    "start": "2934280",
    "end": "2941520"
  },
  {
    "text": "targeted by these techniques um Server 2012 I think is more prevalent than Windows 81 or later on counterpart",
    "start": "2941520",
    "end": "2948720"
  },
  {
    "text": "workstations so I think you will see uh this technique adopted in in the future",
    "start": "2948720",
    "end": "2954240"
  },
  {
    "text": "and Matt and I would absolutely love to hear if you come across it um even if your red teams adopt this technique um",
    "start": "2954240",
    "end": "2960440"
  },
  {
    "text": "it would really be interesting to get some stories from the field and likewise we we're hoping to be able to share anything that we pick up on in the",
    "start": "2960440",
    "end": "2966319"
  },
  {
    "text": "future Matt do you want to talk a bit about um some of the road map items for the framework yeah definitely so you know as",
    "start": "2966319",
    "end": "2973520"
  },
  {
    "text": "you noticed we have a couple different capabilities right now you can persist a binary in a process or create a user",
    "start": "2973520",
    "end": "2979079"
  },
  {
    "text": "account in in force it inside of a group you know those are some basic you know proof of concept resources that we",
    "start": "2979079",
    "end": "2985359"
  },
  {
    "text": "either rewrote or refactored in order to just kind of show this that that actually works the first thing that we'd",
    "start": "2985359",
    "end": "2990760"
  },
  {
    "text": "like to do is just continue to add capability so either rewrite resources um with the DSC resource kit now being",
    "start": "2990760",
    "end": "2997119"
  },
  {
    "text": "open source you can write custom resources so there's really no limitation on what the framework could or could not do and it's written very uh",
    "start": "2997119",
    "end": "3004400"
  },
  {
    "text": "in a plugable fashion so it wouldn't be hard to add more of these in so a quick example would be you know rather than",
    "start": "3004400",
    "end": "3009559"
  },
  {
    "text": "writing that file uh what you want to that binary to disk you could then just rather inject it straight into memory so",
    "start": "3009559",
    "end": "3016680"
  },
  {
    "text": "you don't have any sort of file resident um forensic artifacts the other thing would be you know especially if this",
    "start": "3016680",
    "end": "3022799"
  },
  {
    "text": "gets ever uh picked up by any red teams or anybody that does proactive engagement one of the last things you want to do or one of the things that",
    "start": "3022799",
    "end": "3028720"
  },
  {
    "text": "always makes you look bad at the end of it is if you leave tools behind on EV victive machine and they and some blue team finds them two months later and let",
    "start": "3028720",
    "end": "3035079"
  },
  {
    "text": "you knows about it so autod dissolve so the ability to just un uninfect all of",
    "start": "3035079",
    "end": "3040319"
  },
  {
    "text": "your victims so basically provide an updated guid and all that guid did was just remove all the mo files so that way",
    "start": "3040319",
    "end": "3046559"
  },
  {
    "text": "you don't have to worry about clean up uh and then the last one is dynamically updating uh existing configuration so I",
    "start": "3046559",
    "end": "3052079"
  },
  {
    "text": "mentioned that that ability um we set that ability in the LCM but we don't actually have a script that helps you",
    "start": "3052079",
    "end": "3057839"
  },
  {
    "text": "implement it it's a very manual process at this point so having that so you could just dynamically update what the",
    "start": "3057839",
    "end": "3063040"
  },
  {
    "text": "configuration is would be nice um but right now that's what we're looking at um if anybody starts using the DS",
    "start": "3063040",
    "end": "3069079"
  },
  {
    "text": "compromise framework or even has some ideas you know please hit us up on Twitter um or just submit a poll request",
    "start": "3069079",
    "end": "3074760"
  },
  {
    "text": "or an issue through GitHub and we'll absolutely you know we'd love to take a look at it yep so just key takeaways and summary uh",
    "start": "3074760",
    "end": "3082480"
  },
  {
    "text": "for attackers that are Powershell Savvy and that population continues to grow uh daily um DSC is an interesting Avenue of",
    "start": "3082480",
    "end": "3090920"
  },
  {
    "text": "attack uh an interesting new way to take built-in Windows features and use them to persist uh compromise on an end",
    "start": "3090920",
    "end": "3097760"
  },
  {
    "text": "points likewise for red teams that are seeking to emulate what targeted thread actors uh do to stay covert and to evade",
    "start": "3097760",
    "end": "3105760"
  },
  {
    "text": "detection um the DS compromis framework um can really help automate the creation",
    "start": "3105760",
    "end": "3110880"
  },
  {
    "text": "of DSC payloads um to persist binaries to persist Rogue accounts so that your red team can spend more time on the",
    "start": "3110880",
    "end": "3117920"
  },
  {
    "text": "actual uh intrusion and less time fiddling with DSC and all of its complexities uh and then finally for",
    "start": "3117920",
    "end": "3123839"
  },
  {
    "text": "blue teams out there that are interested in incorporating this in their monitoring or hunting uh the fortunate",
    "start": "3123839",
    "end": "3128920"
  },
  {
    "text": "thing is that use of DSC is incredibly forensically noisy uh tons of activity on the network tons of activity on disk",
    "start": "3128920",
    "end": "3136359"
  },
  {
    "text": "uh the only gacha is if you're not looking for it you're never going to find it and that's true for anything uh",
    "start": "3136359",
    "end": "3142000"
  },
  {
    "text": "when it comes to abuse of operating system features uh by attackers and so hopefully some of the sources of",
    "start": "3142000",
    "end": "3147400"
  },
  {
    "text": "evidence we covered um are easy quick wins for uh your monitoring and hunting efforts to detect signs of uh this",
    "start": "3147400",
    "end": "3154040"
  },
  {
    "text": "malicious activity so thanks once again um here are our email addresses and Twitter",
    "start": "3154040",
    "end": "3160640"
  },
  {
    "text": "handles um like Matt said we'd love to hear from you if you have any questions or uh in the field experiences using",
    "start": "3160640",
    "end": "3166440"
  },
  {
    "text": "this or responding to attacks with DSC um we have about seven minutes left for",
    "start": "3166440",
    "end": "3171680"
  },
  {
    "text": "questions so if there are any we'd be happy to take them at this time yeah uh question",
    "start": "3171680",
    "end": "3178440"
  },
  {
    "text": "question so I would expect that it uses the systems native proxy config because",
    "start": "3194520",
    "end": "3199640"
  },
  {
    "text": "it's a the the the actual call out to the internet is part of dsse that's not something we implemented so my",
    "start": "3199640",
    "end": "3205359"
  },
  {
    "text": "expectation is if you had h HTTP or https configured as the pull mechanism it should respect the system's proxy",
    "start": "3205359",
    "end": "3211280"
  },
  {
    "text": "settings yeah the other thing is if you have like a lazy proxy or something where you're not proxying every uh Port",
    "start": "3211280",
    "end": "3217000"
  },
  {
    "text": "you could just pick a non proxied port to go out to the Internet so if it's something where it's not doing a sort of like protocol detection and you're just",
    "start": "3217000",
    "end": "3222680"
  },
  {
    "text": "doing 80 out to the internet or maybe 443 um you know you could just put it on a non-standard port and get it out that",
    "start": "3222680",
    "end": "3230880"
  },
  {
    "text": "way at",
    "start": "3233960",
    "end": "3237960"
  },
  {
    "text": "we I mean we did the victims we ran on did have AV um I mean it's so the actual",
    "start": "3247280",
    "end": "3252720"
  },
  {
    "text": "process of DSC is not going to be detected by AV um what you drop by DSC",
    "start": "3252720",
    "end": "3257920"
  },
  {
    "text": "could absolutely be detected by AV and then what would happen is you'd get into a state until you updated it um so for",
    "start": "3257920",
    "end": "3263480"
  },
  {
    "text": "anyone that didn't here I apologize that the question was what happens if the machine has AV on it you know could AV detect this type of thing and the answer",
    "start": "3263480",
    "end": "3269680"
  },
  {
    "text": "is it would not detect um the functions that DC performs where they download the the configuration and apply it but what",
    "start": "3269680",
    "end": "3276040"
  },
  {
    "text": "you apply could absolutely get detected it's not like that's going to be um like bypassed by AV so let's say you drop a",
    "start": "3276040",
    "end": "3282640"
  },
  {
    "text": "piece of malware that's detected by AV it's going to go and quarantine it delete it whatever it does the system's",
    "start": "3282640",
    "end": "3287839"
  },
  {
    "text": "going to know it's out of compliance it's going to put it back there av's just going to do it again and that's going to you're just going to get into",
    "start": "3287839",
    "end": "3292880"
  },
  {
    "text": "that cycle until you identify it and then you can update the configuration into something that AV doesn't detect",
    "start": "3292880",
    "end": "3298520"
  },
  {
    "text": "and then it would be persistent but yeah that that is a potential um issue if you drop something that AV could detect one",
    "start": "3298520",
    "end": "3305040"
  },
  {
    "text": "other thing that we didn't have in the slides uh just for brevity sake is uh in Powershell 3 and later uh Windows add",
    "start": "3305040",
    "end": "3311960"
  },
  {
    "text": "Microsoft added a nice um script block logging um and lo module logging so in",
    "start": "3311960",
    "end": "3317520"
  },
  {
    "text": "Powershell 3 and later if you turn that on you get much more detailed um events in the Powershell logs of what scripts",
    "start": "3317520",
    "end": "3324760"
  },
  {
    "text": "ran and what code inside those scripts ran and um the script resource that we",
    "start": "3324760",
    "end": "3329880"
  },
  {
    "text": "use in our configure payload absolutely gets logged there because it is a Pell script and so we did find if you have",
    "start": "3329880",
    "end": "3336839"
  },
  {
    "text": "that logging set up your Powershell event logs are going to throw off tons of alerts uh one thing we did not test",
    "start": "3336839",
    "end": "3343079"
  },
  {
    "text": "is Microsoft in Powershell 5 has started to add malicious script detection her",
    "start": "3343079",
    "end": "3348680"
  },
  {
    "text": "istics to look for some of the common design patterns that uh thread actors have used and I think one of those is to",
    "start": "3348680",
    "end": "3355720"
  },
  {
    "text": "look for things like bite arrays and reflectively loaded or dropped binaries embedded in a script um I would not be",
    "start": "3355720",
    "end": "3363160"
  },
  {
    "text": "surprised if the way that we're embedding that might trigger some of those flags but we didn't test on Powershell 10 enough or five enough to",
    "start": "3363160",
    "end": "3370039"
  },
  {
    "text": "determine if that was the",
    "start": "3370039",
    "end": "3372920"
  },
  {
    "text": "case so if you modify the actual Mo files",
    "start": "3384319",
    "end": "3389480"
  },
  {
    "text": "themselves do confuse the poll server so the check so the check sum basically is",
    "start": "3394440",
    "end": "3399559"
  },
  {
    "text": "set up such that you can't tamper with the mo file because it breaks the check sum and then it it will",
    "start": "3399559",
    "end": "3404960"
  },
  {
    "text": "basically the the victim will try to repo the config from the server at that point so so he asked about I think",
    "start": "3404960",
    "end": "3411480"
  },
  {
    "text": "there's two pieces of that one could you confuse the pull server on the victim itself so let's say you change CH the",
    "start": "3411480",
    "end": "3416559"
  },
  {
    "text": "URL of the the configured pool server you know would the victim go out um you know the the answer is probably yes you",
    "start": "3416559",
    "end": "3423000"
  },
  {
    "text": "could since it's getting those from those Mo files themselves and the mo files are clear text you could probably",
    "start": "3423000",
    "end": "3428079"
  },
  {
    "text": "manipulate the address of the pull server and then manipulate the guid and then it would pull from a different",
    "start": "3428079",
    "end": "3433400"
  },
  {
    "text": "location so that's a good test actually that would be really cool to to look into and the second thing and Ryan mentioned this is you know could you",
    "start": "3433400",
    "end": "3439799"
  },
  {
    "text": "confuse the actual guid that you're you're grabbing and there like the the check sum is sort of a security feature",
    "start": "3439799",
    "end": "3445920"
  },
  {
    "text": "and I say sort of because there's also a PO shell command L that generates it for you so we do that in the framework We",
    "start": "3445920",
    "end": "3451799"
  },
  {
    "text": "Run The generate check sum so if you generated you would have to be on the server in order to do that um you",
    "start": "3451799",
    "end": "3458079"
  },
  {
    "text": "couldn't do it purely from the victim because the check sums wouldn't match but if you were on the server you could potentially do that where you generated",
    "start": "3458079",
    "end": "3464599"
  },
  {
    "text": "a new check sum updated the config and then this the the victim would reapply it so so I I'm guessing you're thinking",
    "start": "3464599",
    "end": "3470520"
  },
  {
    "text": "of the vector where a system is legitimately configured with thec and attacker modifying the server to now",
    "start": "3470520",
    "end": "3475760"
  },
  {
    "text": "have them malicious config or changing it to point to a different yeah yeah I think your first example of pointing it",
    "start": "3475760",
    "end": "3481319"
  },
  {
    "text": "to a different place would be viable yeah would be that that would probably",
    "start": "3481319",
    "end": "3486920"
  },
  {
    "text": "work so yeah the check some would kind of catch you I mean I'm the question",
    "start": "3493680",
    "end": "3499160"
  },
  {
    "text": "real quick so the question was I think if you like injected something into the mooff itself could it could it work I",
    "start": "3499160",
    "end": "3504440"
  },
  {
    "text": "think the check sum would fail but you could potentially regenerate it I'm not sure exactly we didn't test that we",
    "start": "3504440",
    "end": "3510039"
  },
  {
    "text": "didn't test the manipulation of it but it it's potential that you could then actually go in and modify that file",
    "start": "3510039",
    "end": "3515760"
  },
  {
    "text": "again it would require admin to get to that that directory um so if you have admin on it that's that's another good",
    "start": "3515760",
    "end": "3521200"
  },
  {
    "text": "place that you could try and check there there is a chicken and it's",
    "start": "3521200",
    "end": "3526520"
  },
  {
    "text": "called the DSC chicken and egg problem um when you go to a victim system you can't just drop a ma file in that config",
    "start": "3526520",
    "end": "3532640"
  },
  {
    "text": "directory and have it suddenly work there are some registration and set up tasks that you have to do that are",
    "start": "3532640",
    "end": "3537920"
  },
  {
    "text": "script automates um and so uh that is the one prerequisite you can't expect to",
    "start": "3537920",
    "end": "3542960"
  },
  {
    "text": "just take a preconfigured MTH plop it in the directory create the task and you're you're good to go it won't quite work",
    "start": "3542960",
    "end": "3551599"
  },
  {
    "text": "yet okay any other questions all right well thanks so much",
    "start": "3552240",
    "end": "3558839"
  },
  {
    "text": "for coming this morning I hope you enjoy the rest of the conference and please feel free to reach out to Matt and I if you have any other questions thank you",
    "start": "3558839",
    "end": "3567359"
  }
]