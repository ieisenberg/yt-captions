[
  {
    "text": "e",
    "start": "0",
    "end": "3000"
  },
  {
    "text": "[Music]",
    "start": "14100",
    "end": "18239"
  },
  {
    "text": "[Music]",
    "start": "31250",
    "end": "47629"
  },
  {
    "text": "I'd like to give a warm welcome to Riley and thank him for coming to black hat",
    "start": "52000",
    "end": "58079"
  },
  {
    "text": "okay here we go hello blackout Seattle the overview of this talk is going to cover um it's a very high level",
    "start": "62239",
    "end": "68479"
  },
  {
    "text": "of warm Technologies biot Technologies of the last 20 years um the security industry really hasn't had a chance to",
    "start": "68479",
    "end": "74360"
  },
  {
    "text": "go in depth and study these there's a lot amount of of time that's required so I want to provide um everyone a general",
    "start": "74360",
    "end": "80240"
  },
  {
    "text": "overview of things they're struggling with security Technologies and how these threats are bling together um or",
    "start": "80240",
    "end": "86600"
  },
  {
    "text": "exploits you see a lot of you guys deal with uh security systems to stop exploits worms are fairly new to us",
    "start": "86600",
    "end": "92159"
  },
  {
    "text": "we're now just learning about where these Technologies are coming from there's um a friend of mine Peter zor",
    "start": "92159",
    "end": "98680"
  },
  {
    "text": "over sanch I call them Blended threats where you have an exploit you have like a virus you blend them and you have a",
    "start": "98680",
    "end": "105920"
  },
  {
    "text": "worm so I'm going to cover uh General War design at a high level to kind of give you guys some insight and overall",
    "start": "105920",
    "end": "112079"
  },
  {
    "text": "provide the security industry with some information these so we can be to tackle them understand them here we go",
    "start": "112079",
    "end": "120840"
  },
  {
    "text": "traditional payloads used by worms and exploits are written in Assembly Language and are compiled with machine code",
    "start": "122240",
    "end": "127720"
  },
  {
    "text": "counterpart um let's go over us something very quickly an exploit is more or less think of it like this you",
    "start": "127720",
    "end": "133680"
  },
  {
    "text": "have a security hole and you have a payload a virus is a payload there's no",
    "start": "133680",
    "end": "139959"
  },
  {
    "text": "security hole involved a worm is a payload um an exploit play for security",
    "start": "139959",
    "end": "146319"
  },
  {
    "text": "hole and also propagation you can kind of classify them in your mind like that the um when it goes back to the Blended",
    "start": "146319",
    "end": "153040"
  },
  {
    "text": "threat thing where you have a virus and you combine the security home becomes Blended threat exploit payloads contain",
    "start": "153040",
    "end": "159680"
  },
  {
    "text": "a series of automated tasks that Aid the tactor in gaining a more comfortable level of control vers Target this like a",
    "start": "159680",
    "end": "165400"
  },
  {
    "text": "Port Port binding shell uh exploer payload or a connect back they want a higher level of of comfortability they",
    "start": "165400",
    "end": "171640"
  },
  {
    "text": "don't feel comfortable directly running all their code like automated attack if",
    "start": "171640",
    "end": "177080"
  },
  {
    "text": "attackers take all their code and put it in a payload then there's that they lose the risk of tricking security systems",
    "start": "177080",
    "end": "183319"
  },
  {
    "text": "but they feel more comfortable by having that shell or having that that uh back orice connection something that allows",
    "start": "183319",
    "end": "190519"
  },
  {
    "text": "them that makes them feel more comfortable uh warm payload some to",
    "start": "190519",
    "end": "195959"
  },
  {
    "text": "exploit payloads but their nature is more automated they also contain a series of tasks St in propagation uh code red sapphire this is more or less",
    "start": "195959",
    "end": "203000"
  },
  {
    "text": "the algorithm the pseudo random uh like IP generation this is the part of the payload that creates a list of IP",
    "start": "203000",
    "end": "209480"
  },
  {
    "text": "addresses targets and propagates itself that's the main difference between an exploit and a",
    "start": "209480",
    "end": "215280"
  },
  {
    "text": "warm the first public appearance of advanced payloads occurred during the 1980s due to advancements in uh computer",
    "start": "215280",
    "end": "221319"
  },
  {
    "text": "virus strs with each new virus payload came an antivirus solution technical Feats that were accomplished during this",
    "start": "221319",
    "end": "227360"
  },
  {
    "text": "time are amazing you have um a very typical uh anir security scene and they",
    "start": "227360",
    "end": "232920"
  },
  {
    "text": "work it's called um they call Epi entry point identification you have what's like a PE or an executive one on D",
    "start": "232920",
    "end": "240720"
  },
  {
    "text": "when that's loaded in memory through the loading process maybe you guys are familiar with loading maybe not but you",
    "start": "240720",
    "end": "245840"
  },
  {
    "text": "have linking and loading linking is when you compile a program you build its parts together you link in a Imports",
    "start": "245840",
    "end": "252000"
  },
  {
    "text": "exports you set it up for loading loading is taking the file off of disk mapping into memory beginning execution",
    "start": "252000",
    "end": "258120"
  },
  {
    "text": "at an entry point this is where where the code is the main the main like startup routine andor's products will make sure",
    "start": "258120",
    "end": "265400"
  },
  {
    "text": "that entry point actually Maps into the program if it doesn't the trigger is as",
    "start": "265400",
    "end": "271080"
  },
  {
    "text": "a virus that would entail the virus somewhere is in memory and the entry point is pointing outside a file virus",
    "start": "271080",
    "end": "277240"
  },
  {
    "text": "writers beat this by going to the entry point of the code and modifying it to redirect outside so the entry point",
    "start": "277240",
    "end": "282840"
  },
  {
    "text": "still points inside the image but it redirect outside antivirus companies came back",
    "start": "282840",
    "end": "288800"
  },
  {
    "text": "and said okay we can catch calls and jumps these various instructions that'll redirect The Next Step they took",
    "start": "288800",
    "end": "295080"
  },
  {
    "text": "was um in a very uh very undetectable manner cooking apis maybe hooking exit",
    "start": "295080",
    "end": "301680"
  },
  {
    "text": "process so when the program leaves pills executed obviously this becomes very difficult to detect you have you can uh",
    "start": "301680",
    "end": "308919"
  },
  {
    "text": "runtime modify the code insert your virus you can use an API hook this is one typical problem running into um at",
    "start": "308919",
    "end": "315039"
  },
  {
    "text": "your point Opus is a technique the the the virus Riders to get around this this",
    "start": "315039",
    "end": "321680"
  },
  {
    "text": "scheme um going back it's time past many virus writers created Technologies to made an antivirus detection extremely",
    "start": "321680",
    "end": "327759"
  },
  {
    "text": "difficult EPO as their Technologies Advanced they transcended the exploitation of various",
    "start": "327759",
    "end": "333280"
  },
  {
    "text": "remote security holes and the ultimate blend of thre was introduced as in um in",
    "start": "333280",
    "end": "338520"
  },
  {
    "text": "1988 on November 2nd Robert Morris Jr released an experimental warm from Cornell University you guys are familiar",
    "start": "338520",
    "end": "344319"
  },
  {
    "text": "with this obviously the Morris warm um according to him it was just a test he was just learning about how",
    "start": "344319",
    "end": "350479"
  },
  {
    "text": "worms work and it ran rapid causing some ,000 of damage in a very small amount of",
    "start": "350479",
    "end": "357479"
  },
  {
    "text": "time decade later we saw code red um Ryan pero one of the researchers I work",
    "start": "357960",
    "end": "363160"
  },
  {
    "text": "with um was the key guy reversing code red and going through until this day we still see new things in code red that we",
    "start": "363160",
    "end": "369680"
  },
  {
    "text": "didn't see before techniques that we didn't catch there's um uh one thing",
    "start": "369680",
    "end": "375080"
  },
  {
    "text": "code red does that no one ever talked about uses exception handling a series of nested exception handlers to catch",
    "start": "375080",
    "end": "380280"
  },
  {
    "text": "faults and depending on whether these faults occur the more will pick different actions you can't see that unless you see these faults generated",
    "start": "380280",
    "end": "386840"
  },
  {
    "text": "which you'll see it going around different parts of the payload never before there's a whole whole series of",
    "start": "386840",
    "end": "392800"
  },
  {
    "text": "things and these larger worms um some are not public some we've looked at that",
    "start": "392800",
    "end": "398080"
  },
  {
    "text": "that have these these extremely complex schemes that you don't see but they may totally affect the way the worm's going",
    "start": "398080",
    "end": "403560"
  },
  {
    "text": "to work so we have to learn about them obviously code red caused over $2",
    "start": "403560",
    "end": "409759"
  },
  {
    "text": "million in damage in the short period it was around it's still around now you guys if you have firewalls at home you still see connections still moving it'll",
    "start": "409759",
    "end": "417160"
  },
  {
    "text": "probably be around longer than I will that's the other thing about a worm is that if people keep reinstalling these",
    "start": "417160",
    "end": "422400"
  },
  {
    "text": "default systems it's going to reinfect them it'll keep running I mean the theoretically in 10 20 years we may have",
    "start": "422400",
    "end": "428840"
  },
  {
    "text": "15 20 worms rolling around still taking up bandwidth just because of that simp simp uh simple principle people will",
    "start": "428840",
    "end": "435160"
  },
  {
    "text": "keep reinstalling these systems because it's their preferred OS most people don't care about installing service backs",
    "start": "435160",
    "end": "441280"
  },
  {
    "text": "so the internet now has made over 170 million hosts with a $2.5 trillion",
    "start": "441280",
    "end": "447319"
  },
  {
    "text": "economy has become part of everyday livelihood we rely for Communication business and even personal enjoyment the",
    "start": "447319",
    "end": "453039"
  },
  {
    "text": "sapphire worm recently released has once again reminded us how volatile and Fri internet has",
    "start": "453039",
    "end": "458440"
  },
  {
    "text": "become P anatomy and future mutations will bring a general overview of Technologies used to construct and",
    "start": "458440",
    "end": "464560"
  },
  {
    "text": "deliver a new generation of payloads things we may see in the next 5 10 years the research review during this",
    "start": "464560",
    "end": "470680"
  },
  {
    "text": "presentation is intended to assist the security community community we predicting the future of pay Technologies um we don't I don't want to",
    "start": "470680",
    "end": "478520"
  },
  {
    "text": "make this a design guide at all that's why I gave a very high level overview I don't want to get up here and tell anybody how to red one this is more",
    "start": "478520",
    "end": "484319"
  },
  {
    "text": "or less for you guys when you see them you know what the parts are someone can tell you okay it has this kind of loading scheme you'll know that you'll",
    "start": "484319",
    "end": "491599"
  },
  {
    "text": "be able to make quick decisions on how to prevent forther exploitation quick fixes L lot of you guys uh maybe work",
    "start": "491599",
    "end": "497199"
  },
  {
    "text": "for companies as csos isos and you need to quickly make a decision quickly stop this thing so I'm",
    "start": "497199",
    "end": "504000"
  },
  {
    "text": "going to do a very high level overview so far I'll go a little low level fun but",
    "start": "504000",
    "end": "510479"
  },
  {
    "text": "uh the presentation now placement we talk about the placement of the payload where in the actual exploitation you can",
    "start": "510479",
    "end": "517120"
  },
  {
    "text": "place it to get around various restrictions stealth navigating around virtual laor security system available",
    "start": "517120",
    "end": "522640"
  },
  {
    "text": "uh currently reliability um hardening your payload um so if your address bases is",
    "start": "522640",
    "end": "528600"
  },
  {
    "text": "volatile they'll still function and execute correctly also Dynamic loading schemes they're called RVA engines",
    "start": "528600",
    "end": "534399"
  },
  {
    "text": "locating apis a Target application and using those to your benefit",
    "start": "534399",
    "end": "540040"
  },
  {
    "text": "um optimization this is the uh the last and final stage someone RS a",
    "start": "540040",
    "end": "545200"
  },
  {
    "text": "payload sometimes this process may take days or weeks when the guy is thr this",
    "start": "545200",
    "end": "550360"
  },
  {
    "text": "payload he has everything he wants in there whether it's a warm or an exploit he'll go through bite by bite operation",
    "start": "550360",
    "end": "555720"
  },
  {
    "text": "by operation optimize it to be as small and as fast as possible before he finishes either he will release it",
    "start": "555720",
    "end": "562360"
  },
  {
    "text": "obviously as we've seen keep it to himself or share the exploit with his friends it's like an it's like an art",
    "start": "562360",
    "end": "567640"
  },
  {
    "text": "form to them it's a challenge they they're it's almost like a sense of narcissism you see in some of them where",
    "start": "567640",
    "end": "573680"
  },
  {
    "text": "they spend so much time on these they don't want to release them there's one flaw or one problem it's got to be",
    "start": "573680",
    "end": "579720"
  },
  {
    "text": "perfect so that sections optimization uh then some example payloads that we develop internally to show future",
    "start": "579720",
    "end": "585720"
  },
  {
    "text": "payload Technologies and the possibilities of course",
    "start": "585720",
    "end": "591200"
  },
  {
    "text": "demonstration placement during initial communication between uh an attacker and",
    "start": "591680",
    "end": "596959"
  },
  {
    "text": "his Target you have a you place your p during the explo you place it somewhere in that communication for example like",
    "start": "596959",
    "end": "603000"
  },
  {
    "text": "asholes uh like the do printer overflow it was a overflow in the host header so",
    "start": "603000",
    "end": "608200"
  },
  {
    "text": "many people place their payload there typical exploits will involve placing a payload in the buffer or data area that",
    "start": "608200",
    "end": "616200"
  },
  {
    "text": "the override happens yeah we'll call that the exploit buffer typical ones place it there you hear about people",
    "start": "616200",
    "end": "621560"
  },
  {
    "text": "writing um various decoders to get around like filtering restrictions ask you shell codes or unic code decoders or",
    "start": "621560",
    "end": "628640"
  },
  {
    "text": "decoders to get around schemes but you can simply place your payload somewhere else code red did this code red Place",
    "start": "628640",
    "end": "635440"
  },
  {
    "text": "its payload in a data section it's logical you pick a protocol or say the protocol you're writing a payload for",
    "start": "635440",
    "end": "642279"
  },
  {
    "text": "you find some component in that protocol it's Dynamic and size dynamic in nature you know the application will have to",
    "start": "642279",
    "end": "648360"
  },
  {
    "text": "support every possible data type and it's dynamic in size perfect place for the payload like like for example file",
    "start": "648360",
    "end": "655639"
  },
  {
    "text": "uploads binary data you know that you can put data there the trick is getting to that once you're exploring the system",
    "start": "655639",
    "end": "662560"
  },
  {
    "text": "talk about that later and uh control structures Windows Heap overflows are um considered very",
    "start": "662560",
    "end": "669519"
  },
  {
    "text": "unreliable um you can increase the reliability and reliably exploit any heat based overflow by um activating",
    "start": "669519",
    "end": "677040"
  },
  {
    "text": "control structures what I mean by a control structure is like for example say is or some of the web server some",
    "start": "677040",
    "end": "683360"
  },
  {
    "text": "software product has various features in a protocol maybe it's encryption compression other features by utilizing",
    "start": "683360",
    "end": "690279"
  },
  {
    "text": "those you may activate other portions of heat memory that are not normally used during your initial exploit we released",
    "start": "690279",
    "end": "696680"
  },
  {
    "text": "an advisory on an asp uh is an injur overflow in chunk and cod this is back about a year ago now the initial uh the",
    "start": "696680",
    "end": "704440"
  },
  {
    "text": "initial injur overflow over a structure in Heap didn't cause any faults but when we",
    "start": "704440",
    "end": "710200"
  },
  {
    "text": "put a URL en code line and force URL en coding the structure that was there that was normally overwritten was activated",
    "start": "710200",
    "end": "716519"
  },
  {
    "text": "for during faults by by using this methodology you can activate structures throughout heat",
    "start": "716519",
    "end": "722200"
  },
  {
    "text": "and increase the reliability of the exploit 100% and we'll break them now we're",
    "start": "722200",
    "end": "727959"
  },
  {
    "text": "going to go on to what P May uh actually exploits may",
    "start": "727959",
    "end": "734279"
  },
  {
    "text": "contain support to bypass VAR security systems um some use uh",
    "start": "734279",
    "end": "740639"
  },
  {
    "text": "encryption for example you have a web server you're attacking the web server supports SSL an SSL connection very few",
    "start": "740639",
    "end": "748800"
  },
  {
    "text": "IDs systems are configured to to to watch SSL traffic if it if it has",
    "start": "748800",
    "end": "755120"
  },
  {
    "text": "compression second it has compression utilize that just utilize the resources",
    "start": "755120",
    "end": "760279"
  },
  {
    "text": "utilize what's in the Target if you put a payload inside a compressed dream",
    "start": "760279",
    "end": "765399"
  },
  {
    "text": "inside encrypted stream it's like it's a gray area problem I call the gray area because it's something that that no",
    "start": "765399",
    "end": "771480"
  },
  {
    "text": "one's fig out a way to solve IDs can't can't perform these actions it can't",
    "start": "771480",
    "end": "776920"
  },
  {
    "text": "decompress every string go encrypt every stream it's just too intensive to do",
    "start": "776920",
    "end": "782199"
  },
  {
    "text": "that you just fill them with compressed encrypt data it'll fall over this is a gray ER Behavior Analysis systems can't",
    "start": "782199",
    "end": "788360"
  },
  {
    "text": "stop Behavior look too normal idss can't match patterns look like normal traffic",
    "start": "788360",
    "end": "793560"
  },
  {
    "text": "it's false positives a great area utilize that um in coding schemes you have like",
    "start": "793560",
    "end": "800920"
  },
  {
    "text": "um UTF you know unic Cod and codings Bas 64 for example like a HTP protocol you",
    "start": "800920",
    "end": "807040"
  },
  {
    "text": "have your authorization colon you know basic authorization put your payLo at the Bas 64 that resource has uses using the",
    "start": "807040",
    "end": "814440"
  },
  {
    "text": "authorization it decode it for you and you just find in the virtual address space utilize the",
    "start": "814440",
    "end": "821760"
  },
  {
    "text": "resources morphing engines morphing engines were developed um throughout the uh late 80s and early 90s by virus",
    "start": "821880",
    "end": "828800"
  },
  {
    "text": "Riders to bypass uh simple signature matching systems a and a we're seeing similar things with ids's there's an",
    "start": "828800",
    "end": "835360"
  },
  {
    "text": "idea mutate written by K2 to create um like poly morphic a polymorphic payload",
    "start": "835360",
    "end": "841000"
  },
  {
    "text": "meaning uh po multiple forms payload to differentiate um polymorphic engines are",
    "start": "841000",
    "end": "846480"
  },
  {
    "text": "fairly easy to identify they have a general scheme you take a payload you encrypt it or modify it and you place",
    "start": "846480",
    "end": "853320"
  },
  {
    "text": "your routine your decryption routine in front of it and that routine will decrypt and execute it AB systems",
    "start": "853320",
    "end": "859920"
  },
  {
    "text": "developed a simple aeric analysis to find these uh find these small decryptors decoders there are only so",
    "start": "859920",
    "end": "866320"
  },
  {
    "text": "many varying ways they can create them ABS solve this problem now he has distiller will eventually",
    "start": "866320",
    "end": "871920"
  },
  {
    "text": "migrate and do that themselves probably next couple of years includ something along those lines",
    "start": "871920",
    "end": "878240"
  },
  {
    "text": "metamorphism metamorphism is the um is the new morphing technology this is the",
    "start": "878240",
    "end": "884000"
  },
  {
    "text": "uh polymorphism on crack this is the new trick of uh of virus Riders it's amazing",
    "start": "884000",
    "end": "891199"
  },
  {
    "text": "uh you know I'll give a lot of credit to virus writers um some of the work they do is just simply amazing baffles me the",
    "start": "891199",
    "end": "897680"
  },
  {
    "text": "the complexity guy a metal driller from a group called 29a wrote a a metamorphic virus called metaphor it's 14,000 lines",
    "start": "897680",
    "end": "904240"
  },
  {
    "text": "of assembly 90% was a metamorphic engine so he calls the accordion model you take",
    "start": "904240",
    "end": "910440"
  },
  {
    "text": "a payload you create a pseudo assembly like a kind of a like a virus rer assembly the structur of operations so",
    "start": "910440",
    "end": "917399"
  },
  {
    "text": "you can have a payload that works on mulle architectures then he goes into a fa called shrinking where he removes all",
    "start": "917399",
    "end": "923360"
  },
  {
    "text": "previous modifications in the pay kind of virginize it back to its original state and he does permutation",
    "start": "923360",
    "end": "929519"
  },
  {
    "text": "takes the payload he breaks it apart in pieces reorganizes it takes it with jumps permat it then he expands it his",
    "start": "929519",
    "end": "935959"
  },
  {
    "text": "expansion routine where he modifies operations some of you're fam with assembly you can do uh various uh",
    "start": "935959",
    "end": "942959"
  },
  {
    "text": "various routines the same way or in different ways rather like you have a maybe a push seven pop ECX to get 70 ECX",
    "start": "942959",
    "end": "950000"
  },
  {
    "text": "you can also do move ECX comma 7 you're basically just getting a value there showing there's multiple ways to do the",
    "start": "950000",
    "end": "955920"
  },
  {
    "text": "same thing that's how the expansion routine works it goes through modifies the payload just changing instructions",
    "start": "955920",
    "end": "962240"
  },
  {
    "text": "changing manorisms he also has a weight based genetic algorithms in his morphing",
    "start": "962240",
    "end": "967639"
  },
  {
    "text": "engine to increase the reliability future Generations um the no one's really",
    "start": "967639",
    "end": "973959"
  },
  {
    "text": "figured out a way to defect these kind of vires yet uh I talked to Peter zor from semantic and they have some uh some",
    "start": "973959",
    "end": "981199"
  },
  {
    "text": "basic Solutions but engines not powerful they don't know what to deal with because the entire payload will change",
    "start": "981199",
    "end": "987560"
  },
  {
    "text": "it's the same thing but the entire thing will change and it'll change different every time we haven't seen these morphs",
    "start": "987560",
    "end": "992800"
  },
  {
    "text": "we haven't seen anything like this we haven't seen even a polymorphic engine but these guys are writing worms if you",
    "start": "992800",
    "end": "998959"
  },
  {
    "text": "go to if you um if you're interested in this kind of stuff check out at 29 a.box dosk they wrote a worm or one of them WR",
    "start": "998959",
    "end": "1005279"
  },
  {
    "text": "a worm for a doc printer Never released it we never saw it no one compile it and ran it someone could have and it's a lot",
    "start": "1005279",
    "end": "1012399"
  },
  {
    "text": "more powerful than code red it's there in Source they've been writing these for the last 10 or 15 years not the purpose",
    "start": "1012399",
    "end": "1019279"
  },
  {
    "text": "of causing Destruction for them it's an nor form going back to that it's a challenge it's a way of conveying their abilities to their",
    "start": "1019279",
    "end": "1026000"
  },
  {
    "text": "peers is that better",
    "start": "1037400",
    "end": "1045079"
  },
  {
    "text": "metamorphosis go on to reliability increasing the reliability of your",
    "start": "1045079",
    "end": "1050320"
  },
  {
    "text": "payload hardening making it more reliable given a volatile virtual address space we're going to cover uh Dynamic",
    "start": "1050320",
    "end": "1057360"
  },
  {
    "text": "loading and fault handling Dynamic loading engines nickname RVA engines locate",
    "start": "1057360",
    "end": "1064640"
  },
  {
    "text": "entry points in inside an address space so you want to create a process you want",
    "start": "1064640",
    "end": "1069919"
  },
  {
    "text": "to bind a shell to a port you have to locate the entry point for create process so you can execute that function",
    "start": "1069919",
    "end": "1075039"
  },
  {
    "text": "dyamic loader engines locate these entry points these are the uh all the schemes public",
    "start": "1075039",
    "end": "1081000"
  },
  {
    "text": "and private that people use the first is the PB every process every thread has an",
    "start": "1081000",
    "end": "1086200"
  },
  {
    "text": "information block this is path down in the os2 days it's referenced from a segment register and a CPU so threads",
    "start": "1086200",
    "end": "1092600"
  },
  {
    "text": "can quickly access information they need to get to exception handlers to get to various other information inside inside",
    "start": "1092600",
    "end": "1097880"
  },
  {
    "text": "the thread or inside the process each tib per thread each one also references",
    "start": "1097880",
    "end": "1103240"
  },
  {
    "text": "P this is the process environment block um environment variables can be located here the Base address of the image",
    "start": "1103240",
    "end": "1111320"
  },
  {
    "text": "various other things by utilizing the PB you can locate necessary things to create an",
    "start": "1111320",
    "end": "1116559"
  },
  {
    "text": "engine um engine design is usually one of two things uses Imports or exports",
    "start": "1116559",
    "end": "1123039"
  },
  {
    "text": "for example uh I info I will import from kernel 32 import functions create",
    "start": "1123039",
    "end": "1129280"
  },
  {
    "text": "process load Library get proc address so if you can locate those Imports you can gain those you can get access to those entry points and you can use these",
    "start": "1129280",
    "end": "1135679"
  },
  {
    "text": "functions or you can go the export route you can find a module in memory Kel 32",
    "start": "1135679",
    "end": "1141280"
  },
  {
    "text": "and get the exports from that the key thing in Dynamic loaders is finding the base address of the module you've got to",
    "start": "1141280",
    "end": "1147080"
  },
  {
    "text": "find where that thing starts where it loads you can begin to walk up and find the Imports or find the",
    "start": "1147080",
    "end": "1152120"
  },
  {
    "text": "exports most um RVA engines have been using exploits are based mean there's a hardcoded",
    "start": "1152120",
    "end": "1157799"
  },
  {
    "text": "base where they start from there and they hard Cod it the base changes the exploit won't work the newer ones in the",
    "start": "1157799",
    "end": "1163880"
  },
  {
    "text": "last 6 months some of them aren baseless they're using a PB or they use a thing I call it address rolling I don't really",
    "start": "1163880",
    "end": "1169679"
  },
  {
    "text": "have a I don't really a name for it well all you have to do is find an address on a stack and heat PB somewhere else you",
    "start": "1169679",
    "end": "1178960"
  },
  {
    "text": "take this address and you roll back until you find the base you can find the base by a signature in a p it's an",
    "start": "1178960",
    "end": "1184400"
  },
  {
    "text": "little MZ header you can tag it there called address rolling there's a case by case scheme there too where uh for",
    "start": "1184400",
    "end": "1190440"
  },
  {
    "text": "example we have an is flaw and we want to we want to find colel colel 32 base",
    "start": "1190440",
    "end": "1195960"
  },
  {
    "text": "and we're down somewhere in a call stack somewhere down our stack is an address for Kel 32 always there take that roll",
    "start": "1195960",
    "end": "1202200"
  },
  {
    "text": "back and you can write 20 30 by RVA engines they're very reliable um also",
    "start": "1202200",
    "end": "1208600"
  },
  {
    "text": "fingerprinting this scheme is uh it's not as popular but uh it was I guess it",
    "start": "1208600",
    "end": "1213840"
  },
  {
    "text": "was designed to make really smaller vent once again where you can uh kind of fingerprint various things in your environment um some people will",
    "start": "1213840",
    "end": "1220320"
  },
  {
    "text": "fingerprint the import table some will actually fingerprint code and be fingerprint some bites and give Croc",
    "start": "1220320",
    "end": "1225600"
  },
  {
    "text": "address um very fast uh one example fingerprinting scheme is you start the base you scan forward for current like",
    "start": "1225600",
    "end": "1233360"
  },
  {
    "text": "looking in like a kernel 32 you scan forward when you find current take that address subract from the base you have an RVA back to the beginning scan again",
    "start": "1233360",
    "end": "1239919"
  },
  {
    "text": "to the end and you'll find it inside the the uh the export header take that check",
    "start": "1239919",
    "end": "1245240"
  },
  {
    "text": "back eight bytes if it's negative one or zero you know it's the exports 10 by",
    "start": "1245240",
    "end": "1250520"
  },
  {
    "text": "RVA yeah um relative virtual address every",
    "start": "1250520",
    "end": "1256320"
  },
  {
    "text": "um every virtual address space uh sometimes you'll rebase an image you'll change the the base location and you",
    "start": "1256320",
    "end": "1262760"
  },
  {
    "text": "need to be able to to to replicate the environment or fix the environment called fix-ups relocations so you have",
    "start": "1262760",
    "end": "1268520"
  },
  {
    "text": "these virtual addresses that allow you to kind of estimate where things are going to be rep placed",
    "start": "1268520",
    "end": "1274559"
  },
  {
    "text": "okay let's move on to the next section anybody have any questions about RV engines or dynamic loers at",
    "start": "1274559",
    "end": "1281039"
  },
  {
    "text": "all important",
    "start": "1281039",
    "end": "1285039"
  },
  {
    "text": "organiz mod exactly definitely um that scheme",
    "start": "1289000",
    "end": "1294880"
  },
  {
    "text": "can still be bypassed but for existing I mean if you want to stop keep Code Red from from infecting rebase yeah",
    "start": "1294880",
    "end": "1301159"
  },
  {
    "text": "definitely rebasing is actually um it's interesting technology people are looking into as an added layer solution",
    "start": "1301159",
    "end": "1307320"
  },
  {
    "text": "it's not a full solution but is but is adding a layer of security it does add a layer of security it stops automated",
    "start": "1307320",
    "end": "1312400"
  },
  {
    "text": "explo it can't be B bypass once again but we're all about layers nothing's perfect the more layers the better",
    "start": "1312400",
    "end": "1320520"
  },
  {
    "text": "fault handling sometimes during um during the explo process the uh environment may be",
    "start": "1321320",
    "end": "1327880"
  },
  {
    "text": "corrupted um we researched uh vulnerability and P PNG image formats there was an injur overflow we couldn't",
    "start": "1327880",
    "end": "1333440"
  },
  {
    "text": "control the size there was it overr with it just simply overr until it hit a boundary a memory boundary trigger a",
    "start": "1333440",
    "end": "1340360"
  },
  {
    "text": "fall now this boundary contain a lot of heat data structures when various threads try to access that they'd have",
    "start": "1340360",
    "end": "1346840"
  },
  {
    "text": "they' get violations stat been corrupted so a mediary solution is to use",
    "start": "1346840",
    "end": "1352799"
  },
  {
    "text": "exception hammmer in your payload replace with the fault filter with small piece of code that suspends a thread or",
    "start": "1352799",
    "end": "1359400"
  },
  {
    "text": "terminates it then every thread that fults will be suspended and you can keep your environment under control done also",
    "start": "1359400",
    "end": "1366400"
  },
  {
    "text": "wrapping um like RBA routine theic loaders um depending on the the complexity may be prone to Problems by",
    "start": "1366400",
    "end": "1373400"
  },
  {
    "text": "wrapping with exception handlers you can catch these problems and continue you can also write um using exception",
    "start": "1373400",
    "end": "1380440"
  },
  {
    "text": "hammers you can write various other kind of tricks various other payloads like um",
    "start": "1380440",
    "end": "1385960"
  },
  {
    "text": "maybe you want to scan the entire virtual address space for something by using exception Handler you can scan",
    "start": "1385960",
    "end": "1391080"
  },
  {
    "text": "when it hits a fault increment the address it's a very slow process but you have that kind of scanning you can do",
    "start": "1391080",
    "end": "1396120"
  },
  {
    "text": "that's used in some viruses any questions on Paul handling",
    "start": "1396120",
    "end": "1401760"
  },
  {
    "text": "at all optimization",
    "start": "1401760",
    "end": "1409360"
  },
  {
    "text": "this is the uh the last and final phase of payload this is where all the uh the tricks that the virus writers have come",
    "start": "1409360",
    "end": "1414600"
  },
  {
    "text": "out and this is really TR they truly show off their abilities you have things like using",
    "start": "1414600",
    "end": "1420320"
  },
  {
    "text": "smaller instructions um utilizing like if you're going to move a value that's a word move it move it to the lower word",
    "start": "1420320",
    "end": "1427400"
  },
  {
    "text": "of a register safe space instead of the the entire register um various other",
    "start": "1427400",
    "end": "1432880"
  },
  {
    "text": "tricks just using instructions that are smaller overall just knowing knowing the system knowing the hardware",
    "start": "1432880",
    "end": "1439679"
  },
  {
    "text": "low cycle instructions I think it's a phg WR a document describing all the",
    "start": "1439679",
    "end": "1445120"
  },
  {
    "text": "cycles per per instruction like pendum 2 and pendum 3 a lot of virus riters will",
    "start": "1445120",
    "end": "1450360"
  },
  {
    "text": "will go through their payloads instruction by instruction Mak it as fast as possible using low instructions",
    "start": "1450360",
    "end": "1456039"
  },
  {
    "text": "there's no real purpose for this that's just an added an Added Touch it's not going to evade any like race condition",
    "start": "1456039",
    "end": "1463360"
  },
  {
    "text": "security system or anything that's just for fun why you would spend two weeks",
    "start": "1463360",
    "end": "1468640"
  },
  {
    "text": "pipelining and low cycling a payload I don't understand but got to respect the guys for doing it I guess on pairing you",
    "start": "1468640",
    "end": "1475960"
  },
  {
    "text": "have a two pipes in your CPU pipe zero pipe one if you create if you use instructions that don't use the same",
    "start": "1475960",
    "end": "1481799"
  },
  {
    "text": "registers and use them in a way you can have these instructions execute the same time I call call it pairing or pipelining one more way to make it",
    "start": "1481799",
    "end": "1489799"
  },
  {
    "text": "faster I mean maybe there is a speed use maybe uh maybe explo an IDS system and",
    "start": "1489799",
    "end": "1495440"
  },
  {
    "text": "you want to kill the IDS system before it sends out of aler for example like",
    "start": "1495440",
    "end": "1500799"
  },
  {
    "text": "say you have like a I won't use a name there say uh say it catches it say it",
    "start": "1500799",
    "end": "1506640"
  },
  {
    "text": "catches a sign in your payload if you can disable the IDS before it sends out the alert maybe a condition for Speed there",
    "start": "1506640",
    "end": "1513440"
  },
  {
    "text": "I don't know we haven't see any of this in use but it's possible um using Ed a chip features the",
    "start": "1513440",
    "end": "1520399"
  },
  {
    "text": "Intel chip has an FPU and MMX and various other video registers mainly for",
    "start": "1520399",
    "end": "1526640"
  },
  {
    "text": "multimedia by utilizing these chips you can um sometimes speed up payloads memory copy routines uh was it Michael",
    "start": "1526640",
    "end": "1534600"
  },
  {
    "text": "AB Brash I think his name was um it's kind of the uh the almighty God of code",
    "start": "1534600",
    "end": "1540000"
  },
  {
    "text": "optimization to all the all the optimizers he's written several books great books on on Cut optimization this",
    "start": "1540000",
    "end": "1546240"
  },
  {
    "text": "guy really knows his stuff it's pretty cool um one of his tricks was using the FPU to uh copy memory because it was a",
    "start": "1546240",
    "end": "1552799"
  },
  {
    "text": "little bit faster you can also get your current EIP using the FPU actually I'll show you",
    "start": "1552799",
    "end": "1558399"
  },
  {
    "text": "guys that real quick it's a little bit more efficient than a than a call",
    "start": "1558399",
    "end": "1565880"
  },
  {
    "text": "Rep it works by you you run an FPU instruction I use fnob it's like a regular Intel knob then you store your",
    "start": "1571080",
    "end": "1577360"
  },
  {
    "text": "FPU environment it has the last FPU instruction because I use a knot that was my last instruction I store it on a",
    "start": "1577360",
    "end": "1585159"
  },
  {
    "text": "stack now that's on the stack we check it out",
    "start": "1585159",
    "end": "1590240"
  },
  {
    "text": "there we go now it's anx we have our current EIP just another way to get VIP um sometimes",
    "start": "1592840",
    "end": "1599000"
  },
  {
    "text": "they're limited with payloads because of filtering it's one scheme you can use instead of a call Rep or jump call",
    "start": "1599000",
    "end": "1607240"
  },
  {
    "text": "rather um MMX registers it's a you have about eight more registers",
    "start": "1607760",
    "end": "1614320"
  },
  {
    "text": "you can use during uh writing very complex payloads you can utilize these to uh to Aid just the easiness of",
    "start": "1614320",
    "end": "1621679"
  },
  {
    "text": "running a payload maybe a lot of payloads will push and save values when they're going through complex retains by",
    "start": "1621679",
    "end": "1627399"
  },
  {
    "text": "utilizing ex registers you can store information there and your payloads can be a little more complex and you can",
    "start": "1627399",
    "end": "1632960"
  },
  {
    "text": "still focus on them and not lose your mind the",
    "start": "1632960",
    "end": "1639840"
  },
  {
    "text": "payloads these are the payloads we develop internally to show the future of payload Technologies fake load and Rio",
    "start": "1639840",
    "end": "1648600"
  },
  {
    "text": "fake loading concept when you load a file from disk you take it you map it into memory you",
    "start": "1648600",
    "end": "1656480"
  },
  {
    "text": "map each section code data miscellaneous sections you map them in memory then you",
    "start": "1656480",
    "end": "1661760"
  },
  {
    "text": "process the Imports you create the I you you put the entry points in these tables",
    "start": "1661760",
    "end": "1667240"
  },
  {
    "text": "then you do a relocations if you need to relocate where you relocate all the data on hardcode addresses you there a fix up",
    "start": "1667240",
    "end": "1674039"
  },
  {
    "text": "block for every 4K 4K page and you go and you update each one of these each one of these uh pages of B fix-ups fake",
    "start": "1674039",
    "end": "1682159"
  },
  {
    "text": "loading works by uh taking a p file a buffer instead of opening it from disk",
    "start": "1682159",
    "end": "1688200"
  },
  {
    "text": "we map it into the existing virtual address bace of our process so we can take instead of a spawning CMB exe I",
    "start": "1688200",
    "end": "1694519"
  },
  {
    "text": "just map it in inside another virtual address space I don't create a process don't create a thread CN actually will",
    "start": "1694519",
    "end": "1700320"
  },
  {
    "text": "do more than what's uh than what's assumed you want to use something with small small level apis because CB exe",
    "start": "1700320",
    "end": "1705960"
  },
  {
    "text": "will do all sorts of crazy stuff while it's running and with nbdm and a subsystem but what if you write a payLo",
    "start": "1705960",
    "end": "1712240"
  },
  {
    "text": "just using TCP TCP stock sends and receives already being used by the",
    "start": "1712240",
    "end": "1717440"
  },
  {
    "text": "application you don't create a process you don't create a thread and you're going to look for the most part like the",
    "start": "1717440",
    "end": "1722600"
  },
  {
    "text": "application if you can explo a routine where that call is being used stopping this kind of thing becomes a acious",
    "start": "1722600",
    "end": "1730799"
  },
  {
    "text": "problem um some the uh the features in our th loading engine for our example I'm going to",
    "start": "1730799",
    "end": "1738480"
  },
  {
    "text": "create an SSL connection to this machine I'm going to download the payload across the connection into this machine you're",
    "start": "1738480",
    "end": "1745840"
  },
  {
    "text": "going to fake with the payload into the existing is address space um I'm going to use an exception",
    "start": "1745840",
    "end": "1752159"
  },
  {
    "text": "Handler so any fals are generated I'll catch let it silently payload will run and when it's done silently be removed",
    "start": "1752159",
    "end": "1758919"
  },
  {
    "text": "that ever triggering a fault any notification no process created no thread created no difference in the",
    "start": "1758919",
    "end": "1764240"
  },
  {
    "text": "normal behavior",
    "start": "1764240",
    "end": "1767480"
  },
  {
    "text": "take a pay design for our example first decoder decoder is an ny decoder it's",
    "start": "1769960",
    "end": "1775840"
  },
  {
    "text": "approximately 60 bytes as a 43 ratio if you have a payload 750 bytes you know",
    "start": "1775840",
    "end": "1781039"
  },
  {
    "text": "you can you can encode into asy be about 1,000 bytes of the encoder purely asking data going back I said it earlier you",
    "start": "1781039",
    "end": "1788320"
  },
  {
    "text": "can get around most these restrictions but sometimes you're unlimed like HTTP you have control new lines and NS it",
    "start": "1788320",
    "end": "1795159"
  },
  {
    "text": "uses delimeters to segregate information if you have ANS in your payload may",
    "start": "1795159",
    "end": "1800200"
  },
  {
    "text": "cause problems during execution whoever ask you decoder theault handling system I was talking",
    "start": "1800200",
    "end": "1805640"
  },
  {
    "text": "about to uh when any thread falls out suspends it and we wrap every routine of the fake loading routine with a with a",
    "start": "1805640",
    "end": "1811559"
  },
  {
    "text": "Handler so if a false generator I'll just back up earlier in the payload and attempt a couple of like reattempts of",
    "start": "1811559",
    "end": "1816640"
  },
  {
    "text": "certain certain procedures Dynamic loader um I also have to say to the asky",
    "start": "1816640",
    "end": "1822760"
  },
  {
    "text": "decoder and dynamic loader were written by one of our new researchers uh Derek soda we got from Texas he he was really",
    "start": "1822760",
    "end": "1828000"
  },
  {
    "text": "happy about having that so put that in um the dynamic loader is uh how the",
    "start": "1828000",
    "end": "1834799"
  },
  {
    "text": "import Bas one on this one actually export loader uses a fingerprinting scheme we talked about earlier with the three scans it's approximately 50 bytes",
    "start": "1834799",
    "end": "1842080"
  },
  {
    "text": "works on every version of Windows locat entry points for get Rock address in the library SSL",
    "start": "1842080",
    "end": "1848679"
  },
  {
    "text": "download makes an SSL connection to this machine downloads the file in a",
    "start": "1848679",
    "end": "1854679"
  },
  {
    "text": "memory the thi Lo engine I talked about previously and uh our first a PE",
    "start": "1854679",
    "end": "1860960"
  },
  {
    "text": "payload written in C uh",
    "start": "1860960",
    "end": "1866799"
  },
  {
    "text": "benefits this uh concept allows permits an attacker to execute a remote application using the existing virtual",
    "start": "1866799",
    "end": "1873080"
  },
  {
    "text": "address space and process of his Target every privilege and resource within that Target application become available to",
    "start": "1873080",
    "end": "1878600"
  },
  {
    "text": "him and if system access he can write his payload assuming a system with no initializations anything else um for",
    "start": "1878600",
    "end": "1886240"
  },
  {
    "text": "example we're going to use a R pay which I talk about a little bit but Rio doesn't need to initialize certain",
    "start": "1886240",
    "end": "1891279"
  },
  {
    "text": "things normally would to get privileges um personation schemes to S kind of schemes there it's got everything it",
    "start": "1891279",
    "end": "1897840"
  },
  {
    "text": "needs since we didn't open a file on this create a process create a thread detecting this is extremely difficult um",
    "start": "1897840",
    "end": "1904960"
  },
  {
    "text": "to prevent these kind of attacks the best solution is normalization um we've learned over the last 20 years over and over again if an attacker gets local",
    "start": "1904960",
    "end": "1911600"
  },
  {
    "text": "access to your machine you can execute instructions there's no way to stop figure out a way it'll take time we'll",
    "start": "1911600",
    "end": "1917240"
  },
  {
    "text": "do it virus riters have been doing this at D for the last 20 years over and over and over again once they're there once",
    "start": "1917240",
    "end": "1924399"
  },
  {
    "text": "they're executing instructions it's only time and we may see some of it but the",
    "start": "1924399",
    "end": "1930720"
  },
  {
    "text": "more secure the system the more quietly to keep their",
    "start": "1930720",
    "end": "1935080"
  },
  {
    "text": "secrets yeah most of them um go off in section um on kind of a",
    "start": "1943200",
    "end": "1948840"
  },
  {
    "text": "forensic thing you can uh almost tell who wrote A payload or what country the payload came",
    "start": "1948840",
    "end": "1955600"
  },
  {
    "text": "from by how it's constructed certain countries use certain schemes they most usually do it by hand um the first rev",
    "start": "1955600",
    "end": "1962080"
  },
  {
    "text": "they write in a compiler like I always showed you I have the assembly visual C using inline I write it kind of like",
    "start": "1962080",
    "end": "1967880"
  },
  {
    "text": "that using a you have a naked declaration to take out the prel and prologue various other Declarations of visual C to make it more suitable for",
    "start": "1967880",
    "end": "1974279"
  },
  {
    "text": "for writing sometimes people will use nasm too of course 132 SE somewh",
    "start": "1974279",
    "end": "1979840"
  },
  {
    "text": "uh masm Microsoft um but yeah they usually write it and see and then begin",
    "start": "1981240",
    "end": "1986760"
  },
  {
    "text": "converting it over because writing it all assembly is a very tedious process especially when this thing gets big you",
    "start": "1986760",
    "end": "1993480"
  },
  {
    "text": "can tell the payload is written in C by how it's constructed you'll see um a",
    "start": "1993480",
    "end": "1998519"
  },
  {
    "text": "lack of lops a filler code red you saw there's a series where they just place knops and KN out things because they",
    "start": "1998519",
    "end": "2004279"
  },
  {
    "text": "don't want to have to re reconstruct jumps reconstruct offsets very tedious process once they just take a function off they reconstruct everything see",
    "start": "2004279",
    "end": "2011159"
  },
  {
    "text": "those knobs you can pretty much tell was written in a when it's really clean and there's no",
    "start": "2011159",
    "end": "2016919"
  },
  {
    "text": "knobs no nothing else and sometimes you'll see preludes or prologs left in there or things from like a cheze ESP as",
    "start": "2016919",
    "end": "2023240"
  },
  {
    "text": "a function and the bug mode visual seat to check uh check make sure the stacks Stacks Valle hasn't been corrupted",
    "start": "2023240",
    "end": "2029200"
  },
  {
    "text": "you'll see these kind of signatures you know as rency using a compiler various countries use certain schemes um the",
    "start": "2029200",
    "end": "2035480"
  },
  {
    "text": "Chinese have a tendency of pushing strings in the stack only a few Americans do this we uh Americans",
    "start": "2035480",
    "end": "2041000"
  },
  {
    "text": "usually create data sections tables RV engine design um Europe New",
    "start": "2041000",
    "end": "2048320"
  },
  {
    "text": "Zealand uh the Chinese and Japanese they usually use a kind of a mid Delta export",
    "start": "2048320",
    "end": "2053358"
  },
  {
    "text": "loader scheme well they have say you have Colonel 32 here 778 another version",
    "start": "2053359",
    "end": "2058800"
  },
  {
    "text": "may be at 779 that's a logical but say it is you have that Delta in the Middle where Colonel 32 will be on both",
    "start": "2058800",
    "end": "2064919"
  },
  {
    "text": "versions so they pick a point in the middle and they SC scan back for the base that's how they get the base but",
    "start": "2064919",
    "end": "2070320"
  },
  {
    "text": "using that kind of kind of uh it's kind of a pathology to it it's kind of interesting you wonder why why virus",
    "start": "2070320",
    "end": "2076358"
  },
  {
    "text": "writers claim they wrote these new works this guys know exactly who wrote it by their",
    "start": "2076359",
    "end": "2081560"
  },
  {
    "text": "Styles whoever wrote code rad his person knew who it was hadn't say anything because of his style because of certain",
    "start": "2081560",
    "end": "2088320"
  },
  {
    "text": "ways he optimizes if you look at payloads you see some people use certain registers they have a tendency for whatever reason maybe they always use EA",
    "start": "2088320",
    "end": "2094638"
  },
  {
    "text": "and ebx maybe they don't utilize out of Chip features they don't use exception handlers payload forensics it's one of",
    "start": "2094639",
    "end": "2101599"
  },
  {
    "text": "the projects we're working on EI now is developing a forensic lab so when we have a new worm that comes out we can",
    "start": "2101599",
    "end": "2106839"
  },
  {
    "text": "take it in we use a scheme of uh of call tracing a kind of guard page scheme so we can dump out a report immediately",
    "start": "2106839",
    "end": "2112400"
  },
  {
    "text": "take it out dump out a report all the functions that we called the behavior of the worm so we get that to the public as fast as possible and also kind of a",
    "start": "2112400",
    "end": "2119280"
  },
  {
    "text": "forensic angle I mean I'm not U I'm not law enforcement obviously and I don't never want to be a part of that that's",
    "start": "2119280",
    "end": "2124400"
  },
  {
    "text": "way too much hassle for me right now but uh it's interesting nevertheless to to begin developing these Technologies",
    "start": "2124400",
    "end": "2131200"
  },
  {
    "text": "there's nothing there these things are launched and no one knows who they did it who wrote it there's no clue this SW will cost you know code red cost $2",
    "start": "2131200",
    "end": "2137440"
  },
  {
    "text": "billion in damage we have no clue what keeps one of these countries that you know we're currently in a in",
    "start": "2137440",
    "end": "2144680"
  },
  {
    "text": "bad terms with there's nothing there it's morality that's all this stoping these people",
    "start": "2144680",
    "end": "2151680"
  },
  {
    "text": "now that was my ramp uh Rio Rio is the uh it's nickname it's",
    "start": "2151680",
    "end": "2158960"
  },
  {
    "text": "kind of a fighter pilot term and it's the radar intercept officer this is the guy in the back of the jet that pretty",
    "start": "2158960",
    "end": "2164680"
  },
  {
    "text": "much uh handles controls um weapon systems kind of the the a for the pilot",
    "start": "2164680",
    "end": "2170760"
  },
  {
    "text": "we named the payload Brio because it kind of piggybacks on fake Lo when it goes in and begins monitoring look",
    "start": "2170760",
    "end": "2176800"
  },
  {
    "text": "Network traffic same as a as a Rio would do Rio initializes the active interface",
    "start": "2176800",
    "end": "2183680"
  },
  {
    "text": "and using a simple signature scheme looks for data on the local network",
    "start": "2183680",
    "end": "2188880"
  },
  {
    "text": "segment once it sees that captures the entire stream and then passes it to the",
    "start": "2188880",
    "end": "2194880"
  },
  {
    "text": "attacker it's kind of a micro sniffer in a it's using our raw sockets it's approximately 300 bytes compile and",
    "start": "2194880",
    "end": "2200800"
  },
  {
    "text": "visual C of course it's around 30 kilobytes there's another reason for that too which we'll talk about in a",
    "start": "2200800",
    "end": "2207720"
  },
  {
    "text": "sec our demonstration now I'll go this one more time um what I'm going to do is I have",
    "start": "2207880",
    "end": "2214440"
  },
  {
    "text": "my machine here this is a wi 2K no service pack Service Pack zero we'll call",
    "start": "2214440",
    "end": "2220440"
  },
  {
    "text": "it I'm going to make an SSL connection to this machine exploit to the do",
    "start": "2220440",
    "end": "2225880"
  },
  {
    "text": "printer hole because the SSL connection ID will have a hard time seeing",
    "start": "2225880",
    "end": "2231000"
  },
  {
    "text": "this once fake load it's initialized inside the address Bas of is it will connect out through another SSL",
    "start": "2231000",
    "end": "2237160"
  },
  {
    "text": "connection back to this machine so this this is a taken over connects back to Here download to payload or Rio payload",
    "start": "2237160",
    "end": "2245359"
  },
  {
    "text": "in memory in this process and then once it's",
    "start": "2245359",
    "end": "2251640"
  },
  {
    "text": "initialized Rio will activate the network and watch the segment just my a little crossover cable network here for the example watch a segment for anything",
    "start": "2251640",
    "end": "2258880"
  },
  {
    "text": "that has the word our hassle for Communications email chat something else",
    "start": "2258880",
    "end": "2263920"
  },
  {
    "text": "it'll watch for that that traffic and then capture it once it's captured it it's going to fire off a packet using",
    "start": "2263920",
    "end": "2270440"
  },
  {
    "text": "whatever C covert scheme you want to choose back to the attack you could use email sell anything else I use UDP so",
    "start": "2270440",
    "end": "2275480"
  },
  {
    "text": "everyone can see what's going on I Al my second SSL connection is in clear text so I can kind emphasize and point out",
    "start": "2275480",
    "end": "2280960"
  },
  {
    "text": "various things we do but realistically two SSL connections cover Channel maybe SSL maybe use um a bio scheme label en",
    "start": "2280960",
    "end": "2288640"
  },
  {
    "text": "coding so it looks like normal traffic broadcast it who knows",
    "start": "2288640",
    "end": "2294400"
  },
  {
    "text": "regardless let's do our demo",
    "start": "2294480",
    "end": "2298960"
  },
  {
    "text": "there we go it's now inside the process waiting for traffic you can see the um the",
    "start": "2315520",
    "end": "2324240"
  },
  {
    "text": "download here it's hidden inside a gif using a",
    "start": "2324240",
    "end": "2329760"
  },
  {
    "text": "simple stego scheme I put the payload in the back of the uh image using a simple permutation so it looks like part of the",
    "start": "2329760",
    "end": "2335280"
  },
  {
    "text": "image downloads it across takes it out of the image executes it this is the original exploit session of forl we",
    "start": "2335280",
    "end": "2341480"
  },
  {
    "text": "talked about now when I uh write my friend an email over",
    "start": "2341480",
    "end": "2347720"
  },
  {
    "text": "there well if I can write an",
    "start": "2347720",
    "end": "2351520"
  },
  {
    "text": "email send it off there we go there's the email was",
    "start": "2354640",
    "end": "2361040"
  },
  {
    "text": "far back across the nwork to this machine as you can see",
    "start": "2361040",
    "end": "2367640"
  },
  {
    "text": "now let's go to some of the high points of what has",
    "start": "2367640",
    "end": "2372160"
  },
  {
    "text": "happened just key points about the demonstration most of if not all IDs will be bypassed because of the uses of",
    "start": "2374800",
    "end": "2381160"
  },
  {
    "text": "of encryption um more liely you want to use your own custom encryption scheme something that that uh system can't be",
    "start": "2381160",
    "end": "2387920"
  },
  {
    "text": "developed to see maybe your own custom R kind of scheme PP scheme the majority of local security",
    "start": "2387920",
    "end": "2394480"
  },
  {
    "text": "systems will also be bypassed because we don't use any um any hot point API they call them like a create process",
    "start": "2394480",
    "end": "2400160"
  },
  {
    "text": "something else something else is usually hooked by AB systems or local security systems the target process will also",
    "start": "2400160",
    "end": "2406640"
  },
  {
    "text": "continue to operate after the fake",
    "start": "2406640",
    "end": "2410799"
  },
  {
    "text": "load we're going to go and uh check out that image and we just",
    "start": "2412760",
    "end": "2418800"
  },
  {
    "text": "downloaded hopefully I don't get sued for this",
    "start": "2418800",
    "end": "2423800"
  },
  {
    "text": "okay old Betty Page the payload is actually hidden",
    "start": "2441880",
    "end": "2447400"
  },
  {
    "text": "inside this image I'll go and check that out real quick actually I've taken out already",
    "start": "2447400",
    "end": "2454079"
  },
  {
    "text": "but we'll go and look at it anyways",
    "start": "2454079",
    "end": "2458359"
  },
  {
    "text": "I just put a sick EI in there I just scann forward for that with um image schemes they're frame based you can",
    "start": "2472319",
    "end": "2478160"
  },
  {
    "text": "place a payload at the after the last frame when the image is red there's a header it sees it sees a size it only",
    "start": "2478160",
    "end": "2483680"
  },
  {
    "text": "reads that much processes the image you can append data it's a very simple sto schem easy to detect and there's our",
    "start": "2483680",
    "end": "2490520"
  },
  {
    "text": "payload now say someone sees us and they go and they want to see what",
    "start": "2490520",
    "end": "2496319"
  },
  {
    "text": "it",
    "start": "2496319",
    "end": "2498480"
  },
  {
    "text": "does I can't copy and paste going to go back to uh on the desktop I have that",
    "start": "2503319",
    "end": "2511040"
  },
  {
    "text": "example this is the payload runs normally that's just so you're not going to see anything in of course because it",
    "start": "2513440",
    "end": "2518920"
  },
  {
    "text": "just sends a UDP packet back now what if you want to reverse this maybe you guys are familiar with Ida Ida is a to",
    "start": "2518920",
    "end": "2524960"
  },
  {
    "text": "assembler tool for reverse engineering applications and understanding them um",
    "start": "2524960",
    "end": "2530040"
  },
  {
    "text": "most people use Ida to figure out what's going on in a warm I actually I tck this payload I modified the fake loader to",
    "start": "2530040",
    "end": "2536480"
  },
  {
    "text": "handle packed encrypted binaries um it's a kind of a special version of a t loock that I wrote I'm using the existing",
    "start": "2536480",
    "end": "2542480"
  },
  {
    "text": "t-lock schemes but adding a Little Bit Stronger encryption and a little a little bit better compression actually D to help me with that",
    "start": "2542480",
    "end": "2548240"
  },
  {
    "text": "but so we're going to go and check it out",
    "start": "2548240",
    "end": "2552160"
  },
  {
    "text": "ID that's what happen you can't view it now you may be able to configure ITA in",
    "start": "2557720",
    "end": "2563160"
  },
  {
    "text": "a way to where you can see it you re is a raw file and you force this assembly in certain sections let's see what happens when you",
    "start": "2563160",
    "end": "2569200"
  },
  {
    "text": "put a debugger on it",
    "start": "2569200",
    "end": "2572838"
  },
  {
    "text": "I launch my payload again there's my ndl R I go",
    "start": "2591200",
    "end": "2600680"
  },
  {
    "text": "forward access violation tlock F5 again",
    "start": "2600680",
    "end": "2605960"
  },
  {
    "text": "tlock that beep was uh the booger being detected you can't be the payload it's still encoded still",
    "start": "2605960",
    "end": "2612440"
  },
  {
    "text": "encrypted the uh when when a payload is locked like this there's not much you",
    "start": "2612440",
    "end": "2617920"
  },
  {
    "text": "can do to reverse it if you know uh it basically takes a software cracker someone that has those abilities or used to be when he was younger a lot of",
    "start": "2617920",
    "end": "2623960"
  },
  {
    "text": "people in the security industry have that kind of background for someone like that they can they can usually get their teal lock fairly fast but for a lot of",
    "start": "2623960",
    "end": "2630760"
  },
  {
    "text": "us that don't have that background this things are pretty big pain in the ass I spent uh numerous nights small bugs in",
    "start": "2630760",
    "end": "2637800"
  },
  {
    "text": "my payloads having to go trying to figure out what happened and digging through TD lock and it's just it's a nightmare it's the reason a lot of",
    "start": "2637800",
    "end": "2644160"
  },
  {
    "text": "people use",
    "start": "2644160",
    "end": "2646520"
  },
  {
    "text": "it one more thing too we'll go",
    "start": "2650240",
    "end": "2654200"
  },
  {
    "text": "over take off the SSL so you can see the uh the exploit",
    "start": "2655359",
    "end": "2661160"
  },
  {
    "text": "I should probably actually continue with a bugger huh yeah damn t-",
    "start": "2668599",
    "end": "2674800"
  },
  {
    "text": "lock let's restart that okay",
    "start": "2675160",
    "end": "2681680"
  },
  {
    "text": "buy some more RAM too there's our payload inside content",
    "start": "2697559",
    "end": "2703760"
  },
  {
    "text": "type it's our SQ",
    "start": "2703760",
    "end": "2707119"
  },
  {
    "text": "payload um do the limitations I had in host of cting my stack frame I put it in content type I'll show",
    "start": "2709720",
    "end": "2718319"
  },
  {
    "text": "why this goes back to that scheme of payload placement where to place your payload get on the restrictions",
    "start": "2720800",
    "end": "2728200"
  },
  {
    "text": "I read into ndl to a jump ESP um with a host uh the host or is host buffer",
    "start": "2739760",
    "end": "2745119"
  },
  {
    "text": "overflow inside of the do printer asapp the Overflow is on the stack stack based overflow so it'll it'll corrupt the",
    "start": "2745119",
    "end": "2751440"
  },
  {
    "text": "frame if I override too much I don't want to trigger a fault or kill the process in any way so I put my somewhere",
    "start": "2751440",
    "end": "2758000"
  },
  {
    "text": "else the isapp fun um when that is passed isapi filter to actual DL there's",
    "start": "2758000",
    "end": "2763359"
  },
  {
    "text": "a structure that's passed in that contains um various pointers various information about that session one of",
    "start": "2763359",
    "end": "2768559"
  },
  {
    "text": "them is the content type so I return back into my my little host kind of like",
    "start": "2768559",
    "end": "2773640"
  },
  {
    "text": "seek we call them a little piece of code to find your payload in the virtual a space it jumps back to a previous part",
    "start": "2773640",
    "end": "2781880"
  },
  {
    "text": "in the buffer takes the pointer off the stack this is our is sappi structure",
    "start": "2781880",
    "end": "2788920"
  },
  {
    "text": "and then I add 60 to it because I know the offset of the content type down here",
    "start": "2796000",
    "end": "2803559"
  },
  {
    "text": "and I move the pointer into or",
    "start": "2803559",
    "end": "2808680"
  },
  {
    "text": "ECX it's a good point thank",
    "start": "2809480",
    "end": "2813319"
  },
  {
    "text": "you uh Seattle's killing me but um we using using an existing structure in the",
    "start": "2815680",
    "end": "2822680"
  },
  {
    "text": "uh in the is server we can just navigate to our payload simple enough using it using an existing portion of our",
    "start": "2822680",
    "end": "2828839"
  },
  {
    "text": "protocol as I would like to show you but obviously not paying very much attention",
    "start": "2828839",
    "end": "2834400"
  },
  {
    "text": "so okay let's go back to our demonstration",
    "start": "2834400",
    "end": "2841319"
  },
  {
    "text": "and then the future um new technologies that can be used in the future custom uh payload Packers and crypters right now",
    "start": "2855359",
    "end": "2862240"
  },
  {
    "text": "you have tools like UNT loock that'll greatly Aid in reversing that payload UNT loock will work on my version it'll",
    "start": "2862240",
    "end": "2868319"
  },
  {
    "text": "take it and reverse it back to its original state so you can reverse it but if people start writing more custom uh",
    "start": "2868319",
    "end": "2874160"
  },
  {
    "text": "Packers and cryptors you won't have a way to to to to take that shell off that pseudo loader you have to go through it",
    "start": "2874160",
    "end": "2880480"
  },
  {
    "text": "by hand passive payload injection it can modify Rio to where Rio doesn't look for",
    "start": "2880480",
    "end": "2885680"
  },
  {
    "text": "Rass while it looks for you know ei2 2003 colon command all and then uh once it sees",
    "start": "2885680",
    "end": "2891079"
  },
  {
    "text": "into the colon it takes the payload off the stream and and then executes it so the only way you'll see that payload is",
    "start": "2891079",
    "end": "2896760"
  },
  {
    "text": "if you're monitoring monitoring all Network traffic which they don't have drives that big um task based payloads tearing using",
    "start": "2896760",
    "end": "2905079"
  },
  {
    "text": "multiple payloads to accomplish a job maybe you have a payload that you inject that'll scan a network for security holes and communicate with another",
    "start": "2905079",
    "end": "2912040"
  },
  {
    "text": "payload they'll actually exploit these they will communicate with another payload that go out and seek the piece of information you want I'm may an",
    "start": "2912040",
    "end": "2917680"
  },
  {
    "text": "entire attack they would normally take a team of five or 10 hackers to a penetrate a corporate Network now it's one payload or a series of payloads",
    "start": "2917680",
    "end": "2925480"
  },
  {
    "text": "tearing automated privilege escalation engines um I'm kind of working on a project called this more it's a Unix",
    "start": "2925480",
    "end": "2932119"
  },
  {
    "text": "payload that looks uh looks at entry points um tries to find a like the entry",
    "start": "2932119",
    "end": "2937480"
  },
  {
    "text": "porn or uses of get up long your various uh your command command line operation functions once it's fine that I take the",
    "start": "2937480",
    "end": "2944240"
  },
  {
    "text": "address from the data section take the command Flags go into a very simple kind of a permutation fuzzing looking for a",
    "start": "2944240",
    "end": "2950160"
  },
  {
    "text": "bu for overflow I can catch a fall when I catch a fall depending on the OS like s 7 was my example dumps a core file",
    "start": "2950160",
    "end": "2956960"
  },
  {
    "text": "take the core file you can parse it automate escalating root privileges only way to stop this kind of attack is to",
    "start": "2956960",
    "end": "2963799"
  },
  {
    "text": "study the algorithm and replicate it and find every security hold it it found on older systems will carve through any old unic system the newer ones are a little",
    "start": "2963799",
    "end": "2970400"
  },
  {
    "text": "bit more a little bit more secure but if you automate one of those attacks in SL 7even and there's hundreds of buffer",
    "start": "2970400",
    "end": "2975839"
  },
  {
    "text": "overflows in local binary still especially if you're using an Intel version if you guys are familiar with this the has a lot of patch issues with",
    "start": "2975839",
    "end": "2982520"
  },
  {
    "text": "Intel versions the Sparks are a lot more maintained as much as Sun maintains them but they're a lot more",
    "start": "2982520",
    "end": "2988880"
  },
  {
    "text": "maintained um multiple architecture engines I talked about the pseudo assembly before",
    "start": "2988880",
    "end": "2994760"
  },
  {
    "text": "writing payloads that we'll work on all architectures maybe like a maybe like a Java payload for example that'll work on",
    "start": "2994760",
    "end": "3001640"
  },
  {
    "text": "anything where that infection Vector becomes a lot bigger lot much more of a risk um anti forensic engs I talked",
    "start": "3001640",
    "end": "3010240"
  },
  {
    "text": "about forensics earlier identifying who wrote A payload you can write an engine like a metamorphic engine to modify your manorisms and remove them from the",
    "start": "3010240",
    "end": "3016319"
  },
  {
    "text": "payload kind of virginize it to a typical State and those no longer there's any forensics any way to figure",
    "start": "3016319",
    "end": "3022920"
  },
  {
    "text": "out what's going on and then eded payloads FX is working on embedded projects we'll probably see some uh as",
    "start": "3022920",
    "end": "3028720"
  },
  {
    "text": "we've seen already some pretty scary embedded payloads coming to Black app going from cell phones to network",
    "start": "3028720",
    "end": "3033760"
  },
  {
    "text": "devices to accomplish various jobs maybe you make a payload to tap off a telephone conversation who",
    "start": "3033760",
    "end": "3041880"
  },
  {
    "text": "knows any uh questions zero",
    "start": "3042480",
    "end": "3050040"
  },
  {
    "text": "um I firmly believe attacker gets local execution that's",
    "start": "3062520",
    "end": "3068000"
  },
  {
    "text": "it I mean I I don't think uh I think local EX system I think an intercepts a great product I think it's an added",
    "start": "3068000",
    "end": "3073640"
  },
  {
    "text": "layer you have to have normalization something else that will stop that um as far as detecting it very different",
    "start": "3073640",
    "end": "3080200"
  },
  {
    "text": "payload don't use a public one um signature matching systems Behavior Analysis systems only one for what they",
    "start": "3080200",
    "end": "3087040"
  },
  {
    "text": "know is bad it's like firewall design you guys are familiar with you don't you don't take out the bad stuff only allow",
    "start": "3087040",
    "end": "3094040"
  },
  {
    "text": "the good same kind of scheme if you don't know about it it will sneak through um it just takes writing",
    "start": "3094040",
    "end": "3100160"
  },
  {
    "text": "payloads using uncommon apis most uh local security systems will hook a series of n apis you find the ones that",
    "start": "3100160",
    "end": "3107720"
  },
  {
    "text": "doesn't hook use those or you find a flaw on one those apis or use a direct",
    "start": "3107720",
    "end": "3113160"
  },
  {
    "text": "gate um most local security systems will hook user l or colel and gdt hook these",
    "start": "3113160",
    "end": "3118359"
  },
  {
    "text": "entry points use Rod interupts that aren't there the GDI calls spit one of those to get your code in fre schemes um",
    "start": "3118359",
    "end": "3126440"
  },
  {
    "text": "I think that the true solution uh is strong normalization number one some product you you pick your own I'm not",
    "start": "3126440",
    "end": "3133640"
  },
  {
    "text": "going to do a sales sales pitch up here but uh normalization it's something that that normalizes the traffic as strong as",
    "start": "3133640",
    "end": "3140079"
  },
  {
    "text": "it can to verify the right data is in the right place there's no reason why there's a 2,000 by random ask header and",
    "start": "3140079",
    "end": "3147359"
  },
  {
    "text": "content type it should be is is lower is upper slash is lower is upper",
    "start": "3147359",
    "end": "3153799"
  },
  {
    "text": "termination that's it nothing else if you totally normalize traffic it becomes extremely difficult to write payloads it",
    "start": "3153799",
    "end": "3159760"
  },
  {
    "text": "will work even given the size of like RS and code is huge that if that was limited 128 bytes that would have",
    "start": "3159760",
    "end": "3166680"
  },
  {
    "text": "worked normalization um it's becomes a lot more complicated we've noticed",
    "start": "3166680",
    "end": "3172000"
  },
  {
    "text": "multilingual systems they have uh various multilingual schemes so they a range of values goes out and exceeds the",
    "start": "3172000",
    "end": "3177920"
  },
  {
    "text": "normal range but for a systems you can filter and control all traffic coming in",
    "start": "3177920",
    "end": "3183760"
  },
  {
    "text": "the only way to get into one of those DLS or to to exploit successfully is have an address at a nasy range we",
    "start": "3183760",
    "end": "3189599"
  },
  {
    "text": "talked about rebasing rebase everything outside that range what do you have left there's not much I'm not going to say",
    "start": "3189599",
    "end": "3195400"
  },
  {
    "text": "it's impossible but it's layering um it's sort of normalization and set maybe next May then antivirus update your",
    "start": "3195400",
    "end": "3202920"
  },
  {
    "text": "update your fixes combination of schemes make it so complicated and so indetectable that his payLo won't work",
    "start": "3202920",
    "end": "3209119"
  },
  {
    "text": "one scheme will not a firewall in IDs will not stop them it's it's layering schemes have a series of",
    "start": "3209119",
    "end": "3216319"
  },
  {
    "text": "layers any other",
    "start": "3216319",
    "end": "3219680"
  },
  {
    "text": "questions oh what was that",
    "start": "3222240",
    "end": "3229280"
  },
  {
    "text": "yeah see let's take an existing program",
    "start": "3232119",
    "end": "3237119"
  },
  {
    "text": "um t-lock just talk about it you have um in the software protection industry you have Packers and cryptors where they",
    "start": "3238920",
    "end": "3245640"
  },
  {
    "text": "take a file on disk and they compress all the sections removing unnecessary sections unnecessary data compress it",
    "start": "3245640",
    "end": "3252400"
  },
  {
    "text": "and then inside the code they put like a little decompression routine which will decompress it on top that they add encryption they encrypted encrypted",
    "start": "3252400",
    "end": "3259160"
  },
  {
    "text": "sections change the names Ida as most rever engineering tools look at they",
    "start": "3259160",
    "end": "3264599"
  },
  {
    "text": "expect images to be fairly fairly normal um Ida does have does have a lot",
    "start": "3264599",
    "end": "3269839"
  },
  {
    "text": "of power where you can go into a raw mode where you just assemble at Raw at Raw points but most your that is encrypted so you're going to run around",
    "start": "3269839",
    "end": "3276079"
  },
  {
    "text": "all day trying to find the entry point and try to unassemble there it's more or less just be by creating a corrupted P",
    "start": "3276079",
    "end": "3282760"
  },
  {
    "text": "more or less that's like you corrupt an image Fe it to an image program it might crash same",
    "start": "3282760",
    "end": "3288280"
  },
  {
    "text": "thing they read off specs but I will say that Ida can be used to disassemble these things it's",
    "start": "3288280",
    "end": "3295119"
  },
  {
    "text": "not end all you just don't load as a p for example if I want to look at that payload again I can go into raw",
    "start": "3295119",
    "end": "3302599"
  },
  {
    "text": "mode binary file then I want Parts this",
    "start": "3304559",
    "end": "3309799"
  },
  {
    "text": "a",
    "start": "3310920",
    "end": "3313920"
  },
  {
    "text": "oops and we just find the the code in there entry points I think a th",
    "start": "3318960",
    "end": "3325880"
  },
  {
    "text": "somewhere in here anyway you find the code you type c to convert to code and you view it there",
    "start": "3329599",
    "end": "3336400"
  },
  {
    "text": "and you just kind of walk around try to find it now I recommend using like like an unlock tool check those tools",
    "start": "3336400",
    "end": "3342440"
  },
  {
    "text": "first um any other questions",
    "start": "3342440",
    "end": "3346920"
  },
  {
    "text": "[Music]",
    "start": "3359920",
    "end": "3362979"
  },
  {
    "text": "yeah you say that again yeah yeah there's a tools called a",
    "start": "3367400",
    "end": "3374319"
  },
  {
    "text": "Yes actually a very valid point there's a tool called ice dump that's for soft ice there's also Frog ice various other",
    "start": "3374319",
    "end": "3380000"
  },
  {
    "text": "tools you can use to where maybe you insert a series of bites somewhere to trigger a fall just detect that soft ice",
    "start": "3380000",
    "end": "3386960"
  },
  {
    "text": "and then dump it but well let's go back to our",
    "start": "3386960",
    "end": "3393480"
  },
  {
    "text": "example then",
    "start": "3393680",
    "end": "3396920"
  },
  {
    "text": "again start soft ice",
    "start": "3403480",
    "end": "3408039"
  },
  {
    "text": "that loading no t-lock detect soft ice if it's there it El it out but you",
    "start": "3423760",
    "end": "3429599"
  },
  {
    "text": "ultimately what you would do when a reversing a packed or crypted binary you uh put a break on the entry point",
    "start": "3429599",
    "end": "3435000"
  },
  {
    "text": "whether it's memory break some other break and sof ice then once you're there you walk through you try and walk",
    "start": "3435000",
    "end": "3440359"
  },
  {
    "text": "through the decoding of the image um and uh if to DET teex sof I you're going to",
    "start": "3440359",
    "end": "3445559"
  },
  {
    "text": "run into problem so maybe it's better to get after the decoding put a point there maybe take some of the sections and corrupt them so it falls generated like",
    "start": "3445559",
    "end": "3452760"
  },
  {
    "text": "you may not need a resource section so you can just corrup the resource section then you can see the actual code on a",
    "start": "3452760",
    "end": "3458000"
  },
  {
    "text": "false generated but yeah use I do actually you can play mp3s too and softt if a lot of you guys are softt users",
    "start": "3458000",
    "end": "3464480"
  },
  {
    "text": "you've always wanted to be able to play music while you're working around your nugger okay any other questions",
    "start": "3464480",
    "end": "3471920"
  },
  {
    "text": "okay well let's see going back to uh to",
    "start": "3477520",
    "end": "3482960"
  },
  {
    "text": "normalization um we emphasized on uh on stopping various attacks now it is",
    "start": "3482960",
    "end": "3490000"
  },
  {
    "text": "possible um to bypass some normalization schemes just by mimicking your data using decoders but uh that is that is a",
    "start": "3490000",
    "end": "3496280"
  },
  {
    "text": "total solution I mean I wish I wish I could recommend a product to you guys but there's not one that's not powerful yet no one's it takes a lot of time to",
    "start": "3496280",
    "end": "3503000"
  },
  {
    "text": "go through the protocol and put these restrictions on it's a lot of work and you also run the problem what about features you",
    "start": "3503000",
    "end": "3508640"
  },
  {
    "text": "miss what if there's an added feature like an is to sappy that has its own custom scheme like front pages ver and",
    "start": "3508640",
    "end": "3514280"
  },
  {
    "text": "coding we have to incorporate that see what else can I show you",
    "start": "3514280",
    "end": "3522359"
  },
  {
    "text": "guys I I kind of race through here well that's more or less it um",
    "start": "3523760",
    "end": "3530480"
  },
  {
    "text": "going to show you our lab so our payload creation lab",
    "start": "3530480",
    "end": "3536920"
  },
  {
    "text": "this is where we build our payloads this is Ryan's uh initial",
    "start": "3537359",
    "end": "3542880"
  },
  {
    "text": "creation we have our loaders RVA loaders we have our payloads we have our",
    "start": "3542880",
    "end": "3549960"
  },
  {
    "text": "decoders and we link them together it's kind of like an exploit building toolkit so if I want to make a new decoder new",
    "start": "3549960",
    "end": "3557079"
  },
  {
    "text": "decryption routine incorporate in there I build it in and then I link them up decoder first text Data like around kind",
    "start": "3557079",
    "end": "3564319"
  },
  {
    "text": "of like um like our exploit file format allows us to quickly build",
    "start": "3564319",
    "end": "3569680"
  },
  {
    "text": "payloads configure them change them set them",
    "start": "3569680",
    "end": "3574280"
  },
  {
    "text": "off okay that's pretty much it thank you um any more questions at",
    "start": "3576760",
    "end": "3582760"
  },
  {
    "text": "all before I'm done go get some",
    "start": "3582760",
    "end": "3586039"
  },
  {
    "text": "sleep yeah um actually a lot of great information go to um it's it's 29a box.",
    "start": "3590520",
    "end": "3597280"
  },
  {
    "text": "SK just search for 29a it's hex for 666 it's a virus writing group um all their",
    "start": "3597280",
    "end": "3602680"
  },
  {
    "text": "documents great documents a lot of information there on metamorphic engines polymorphic engines",
    "start": "3602680",
    "end": "3608799"
  },
  {
    "text": "EPO most of the techniqus you see in the security industry of RVA loaders it's all came from these guys the the URL",
    "start": "3608799",
    "end": "3616520"
  },
  {
    "text": "that was um it was a it's 29 a.box",
    "start": "3616520",
    "end": "3621640"
  },
  {
    "text": "dosk a lot of great information there you know I'd like to say that I invented a lot of these techniques but there's no way these guys have done it before all",
    "start": "3621640",
    "end": "3628920"
  },
  {
    "text": "the RBA techniques I've I've I've shown we may have created them in our lab but these guys have done it before probably 10 years ago every time I think I find a",
    "start": "3628920",
    "end": "3635280"
  },
  {
    "text": "new engine or create one I go back and some guy uh zombie or metal driller will show me that he wrote it back in the",
    "start": "3635280",
    "end": "3640720"
  },
  {
    "text": "early 90s all the schemes there have been around we're not Reinventing anything here they're there they've been",
    "start": "3640720",
    "end": "3647200"
  },
  {
    "text": "there for 10 years we're just not paying attention and going in researching viruses there's been a big gap between",
    "start": "3647200",
    "end": "3652440"
  },
  {
    "text": "software crackers and virus writers we uh we always assume okay what they're doing is bad let's not research what",
    "start": "3652440",
    "end": "3657920"
  },
  {
    "text": "they're doing well it's the opposite we need to know how these things work when these schemes are combined in this Blended threat kind the scheme then",
    "start": "3657920",
    "end": "3664520"
  },
  {
    "text": "becomes more dangerous we need to understand them so I mean I don't be fearful of going and reading about virus information learn about them these",
    "start": "3664520",
    "end": "3671000"
  },
  {
    "text": "techniques will be used in payloads as we're seeing there's a slow growth in the next 10 years in the last five these",
    "start": "3671000",
    "end": "3676520"
  },
  {
    "text": "Technologies are slowly migrating over to payloads um yeah that's probably the",
    "start": "3676520",
    "end": "3682799"
  },
  {
    "text": "best thing out there I can't really think of any other other ones off hand I recommend there's also a phg as a group forget the",
    "start": "3682799",
    "end": "3689839"
  },
  {
    "text": "acronym you can search for it and a op code they have a great um whole series of documents in N undocumented going",
    "start": "3689839",
    "end": "3696720"
  },
  {
    "text": "into apis dis assemblies all sorts of information the entire op code list the",
    "start": "3696720",
    "end": "3702160"
  },
  {
    "text": "Intel chip all the features Cycles low level guides to windsock device driver",
    "start": "3702160",
    "end": "3707400"
  },
  {
    "text": "programming a lot of great stuff Al phg yeah uh",
    "start": "3707400",
    "end": "3714160"
  },
  {
    "text": "phg if you guys have any question about anything during my presentation me put my contact information up",
    "start": "3714160",
    "end": "3721640"
  },
  {
    "text": "[Music] there I'm not going to point fingers I'm",
    "start": "3727780",
    "end": "3734240"
  },
  {
    "text": "not a politician I'm a researcher somebody else's",
    "start": "3734240",
    "end": "3739039"
  },
  {
    "text": "business any other questions",
    "start": "3739640",
    "end": "3744038"
  },
  {
    "text": "I could have a logical guess but yeah maybe if you buy me a couple of drinks but at the bar I'll talk a little",
    "start": "3746160",
    "end": "3752880"
  },
  {
    "text": "bit there we go here's my contact",
    "start": "3752880",
    "end": "3757720"
  },
  {
    "text": "information I get that the screen you guys have any questions at all about anything in this presentation",
    "start": "3759079",
    "end": "3765839"
  },
  {
    "text": "or uh there's a worm that comes out something else go ahead this is going great",
    "start": "3765839",
    "end": "3775400"
  },
  {
    "text": "R Hassel r h s l l ee ye.com",
    "start": "3776279",
    "end": "3783839"
  },
  {
    "text": "yeah any questions at all about anything in this presentation go ahead fire them off have a lot of spare",
    "start": "3785440",
    "end": "3790640"
  },
  {
    "text": "time I'm finally going to get some sleep now thank [Applause]",
    "start": "3790640",
    "end": "3799550"
  },
  {
    "text": "you",
    "start": "3804760",
    "end": "3807760"
  },
  {
    "text": "e",
    "start": "3834720",
    "end": "3837720"
  },
  {
    "text": "e",
    "start": "3864720",
    "end": "3867720"
  },
  {
    "text": "e",
    "start": "3894640",
    "end": "3897640"
  },
  {
    "text": "e e",
    "start": "3924640",
    "end": "3928680"
  }
]