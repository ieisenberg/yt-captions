[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "4110",
    "end": "16720"
  },
  {
    "text": "okay well uh thanks so much everybody for joining me to my talk um i'm happy to present work we've been",
    "start": "16720",
    "end": "23119"
  },
  {
    "text": "working on for the last year on emulating samsung's baseband um before we get to into it a little bit",
    "start": "23119",
    "end": "28880"
  },
  {
    "start": "27000",
    "end": "64000"
  },
  {
    "text": "about me i'm grant hernandez i'm a recent phd graduate from the university of florida",
    "start": "28880",
    "end": "34320"
  },
  {
    "text": "and i work primarily on android security and firmware analysis and i just joined qualcomm's product",
    "start": "34320",
    "end": "39680"
  },
  {
    "text": "security team working on their modem my co-author marius mensch a phd graduate from eurocom",
    "start": "39680",
    "end": "46160"
  },
  {
    "text": "he's a postdoc at fusek and he works on building tooling for better dynamic analysis of embed systems",
    "start": "46160",
    "end": "52559"
  },
  {
    "text": "unfortunately he can't be here today but please just imagine he's standing right next to me because he was as integral to this work as i was",
    "start": "52559",
    "end": "60000"
  },
  {
    "text": "so um let's talk a little bit about our agenda today so um i'm going to start with a little",
    "start": "60000",
    "end": "66400"
  },
  {
    "start": "64000",
    "end": "99000"
  },
  {
    "text": "bit of a motivation as to why we decide to look at basebands and to do that we're going to actually go over some previous baseband work",
    "start": "66400",
    "end": "74320"
  },
  {
    "text": "initially we'll talk about how i started doing baseband vulnerability research and well it felt where it fell short and then we'll jump",
    "start": "74320",
    "end": "81040"
  },
  {
    "text": "right into reverse engineering the baseband firmware how we built the baseband emulator and then how we actually used",
    "start": "81040",
    "end": "87119"
  },
  {
    "text": "our angular to fuzz via afl allowing us to find end days and zero days",
    "start": "87119",
    "end": "92799"
  },
  {
    "text": "uh finally we'll actually demonstrate that the things we find in our emulator actually work over the air and then",
    "start": "92799",
    "end": "98240"
  },
  {
    "text": "we'll conclude so before we get really deep into the weeds let's make sure everyone's on the",
    "start": "98240",
    "end": "103840"
  },
  {
    "start": "99000",
    "end": "153000"
  },
  {
    "text": "same page and i want everyone to know what a baseband processor is it's effectively a dedicated device that",
    "start": "103840",
    "end": "110799"
  },
  {
    "text": "is implementing the two through five g cellular protocols this pretty much allows you to walk outside of your house",
    "start": "110799",
    "end": "116719"
  },
  {
    "text": "without a wi-fi connection and be able to get data calls sms and and the like and it really is",
    "start": "116719",
    "end": "123040"
  },
  {
    "text": "the phone part of your smartphone so the vendors below implement their own",
    "start": "123040",
    "end": "128479"
  },
  {
    "text": "version of the baseband processor based off of the cellular protocols these basebands run embedded firmware",
    "start": "128479",
    "end": "135599"
  },
  {
    "text": "and they usually leverage a real-time operating system to schedule tasks and maintain their",
    "start": "135599",
    "end": "140720"
  },
  {
    "text": "real-time deadlines and it's important to note that basebands are separate cpus",
    "start": "140720",
    "end": "145840"
  },
  {
    "text": "from the application processor found on mobile phones whether it's android or ios and this is likely due to",
    "start": "145840",
    "end": "151760"
  },
  {
    "text": "their performance requirements so why basebands well basebands have a",
    "start": "151760",
    "end": "157920"
  },
  {
    "start": "153000",
    "end": "214000"
  },
  {
    "text": "lot of attack surface as i said they support the 2 through 5g protocols which are really complicated",
    "start": "157920",
    "end": "164480"
  },
  {
    "text": "some of the things you can find on basebands include custom dsps asm1 encoders possibly auto generated or",
    "start": "164480",
    "end": "171440"
  },
  {
    "text": "written by hand custom ip ip stacks voice and audio codecs",
    "start": "171440",
    "end": "177680"
  },
  {
    "text": "x509 parsing dns parsing and a ton more the more you look the more you find",
    "start": "177680",
    "end": "182959"
  },
  {
    "text": "some things are really obscure and unique to sell here some things are things you'd only expect to find on a desktop",
    "start": "182959",
    "end": "189440"
  },
  {
    "text": "and another reason is that baseband attacks can be devastating so imagine being able to compromise a",
    "start": "189440",
    "end": "196159"
  },
  {
    "text": "baseband at this point if you're running code on a baseband you can intercept calls sms and all the data independent of the",
    "start": "196159",
    "end": "203360"
  },
  {
    "text": "operating system and even if you're feeling really bold you can try and escalate to the application processor itself",
    "start": "203360",
    "end": "209440"
  },
  {
    "text": "further compromising the phone so it's an important attack vector to consider",
    "start": "209440",
    "end": "214720"
  },
  {
    "start": "214000",
    "end": "298000"
  },
  {
    "text": "today we'll be focusing on samsung shannon baseband this baseband is present on samsung's",
    "start": "214720",
    "end": "219760"
  },
  {
    "text": "smartphones with the x on his chipset effectively non-us phones because the us phones use qualcomm's chipset instead",
    "start": "219760",
    "end": "227040"
  },
  {
    "text": "it implements two through 5g protocols and it uses an arm cortex-r to maintain its real-time properties",
    "start": "227040",
    "end": "234480"
  },
  {
    "text": "and it's an interesting vulnerability research target it's been shown that there are over-the-air attacks that can be launched against the",
    "start": "234480",
    "end": "241200"
  },
  {
    "text": "the baseband itself and it's also been shown that there are less than seller exploit mitigations",
    "start": "241200",
    "end": "246720"
  },
  {
    "text": "on the application than compared to the application processor there's been three talks that are really",
    "start": "246720",
    "end": "253519"
  },
  {
    "text": "good on chain and exploitation the breaking ban talk the walk with shannon which went over a pawn to own",
    "start": "253519",
    "end": "258880"
  },
  {
    "text": "vulnerability in great detail and even more recent more recently how to actually design",
    "start": "258880",
    "end": "264000"
  },
  {
    "text": "a baseband debugger on device so in this case we'll be doing our",
    "start": "264000",
    "end": "269040"
  },
  {
    "text": "debugging in our virtual environment uh there is other baseband work too but",
    "start": "269040",
    "end": "275440"
  },
  {
    "text": "as you can see by the dates and the years not as much as you would expect",
    "start": "275440",
    "end": "280880"
  },
  {
    "text": "given the importance of it on our mobile devices today it's something that's in everyone's pocket but really there hasn't been",
    "start": "280880",
    "end": "287600"
  },
  {
    "text": "in my opinion enough focus on the impact of exploits and memory corruptions in base bands",
    "start": "287600",
    "end": "293280"
  },
  {
    "text": "the fact that i can put most of the top work on one slide i should tell you that and that's where",
    "start": "293280",
    "end": "299680"
  },
  {
    "start": "298000",
    "end": "395000"
  },
  {
    "text": "really our work comes in we've developed a tool called shannon ee it's an emulation environment for the",
    "start": "299680",
    "end": "306000"
  },
  {
    "text": "shannon baseband and what it does is it executes firmware directly so no pre-processing",
    "start": "306000",
    "end": "311280"
  },
  {
    "text": "such as a static analysis tool is required you don't need a physical device and it's a scalable to as many cores you",
    "start": "311280",
    "end": "318080"
  },
  {
    "text": "have available it is able to cold boot a baseband and brings up most rtos tasks",
    "start": "318080",
    "end": "324000"
  },
  {
    "text": "some of the core features include a python api for pro prototyping peripherals and anything",
    "start": "324000",
    "end": "329680"
  },
  {
    "text": "else you can come up with mod kit and c-based ffi for extending and exploring the baseband",
    "start": "329680",
    "end": "336800"
  },
  {
    "text": "integrated coverage guided fuzzing the afl gdb for triage and support for multiple soc versions",
    "start": "336800",
    "end": "343759"
  },
  {
    "text": "so all in all this gives us a really good platform and i'm going to show it to you right off the bat",
    "start": "343759",
    "end": "353840"
  },
  {
    "text": "so all you really need to do is run our shannon wrapper at which point there's a config file which will be loaded and it will",
    "start": "354479",
    "end": "361520"
  },
  {
    "text": "tell which baseband firmware we're going to target it will initialize the baseband emulator",
    "start": "361520",
    "end": "366639"
  },
  {
    "text": "it will apply hooks you can introspect it'll boot the bootloader jump straight to the main",
    "start": "366639",
    "end": "371919"
  },
  {
    "text": "file these are the log messages coming from the non-volatile memory initialization and",
    "start": "371919",
    "end": "377520"
  },
  {
    "text": "it will just continue booting and it will start initializing tasks and you can at that point start fuzzing or",
    "start": "377520",
    "end": "383680"
  },
  {
    "text": "start exploring the base band of memory craft your exploits and the like so it's a real dynamic analysis platform for",
    "start": "383680",
    "end": "390479"
  },
  {
    "text": "base bands which to my knowledge there hasn't been one publicly released",
    "start": "390479",
    "end": "396400"
  },
  {
    "start": "395000",
    "end": "480000"
  },
  {
    "text": "but how did we get here i think the journey of how we actually got this tool to work is more interesting than the tool itself",
    "start": "396479",
    "end": "402479"
  },
  {
    "text": "and i'm going to tell you how we actually achieve this so it actually started last year",
    "start": "402479",
    "end": "408479"
  },
  {
    "text": "around may and honestly probably a little before that um i had started to do um kind of a",
    "start": "408479",
    "end": "414400"
  },
  {
    "text": "discussion of what i could do to actually do baseband analysis was i going to go static was it going to go dynamic i had seen a lot of static",
    "start": "414400",
    "end": "420720"
  },
  {
    "text": "work but i ended up trying to do a baseband fuzzing over the air i didn't have any experience with sdr or",
    "start": "420720",
    "end": "427520"
  },
  {
    "text": "cellular but i had a lot of reversing and exploitation knowledge under my belt so how hard could it be",
    "start": "427520",
    "end": "433199"
  },
  {
    "text": "right well cellular protocol standards are pretty much acronym soup which makes things really hard to get",
    "start": "433199",
    "end": "439440"
  },
  {
    "text": "into i spend a whole lot of time wrestling with the physical aspects because i'm not a signal analysis person",
    "start": "439440",
    "end": "445680"
  },
  {
    "text": "um base stations getting them set up and then debugging why my phone wasn't working was a big headache but finally after",
    "start": "445680",
    "end": "453120"
  },
  {
    "text": "reading and trying things out i was able to get a test set up with a 2g base station and 2g and implemented the gsm and gprs",
    "start": "453120",
    "end": "461919"
  },
  {
    "text": "data protocols i added a really dead simple bit flipper to the layer two to layer one code",
    "start": "461919",
    "end": "469759"
  },
  {
    "text": "so i would flip all packets leaving the baseband i then connected a mix of phones to the",
    "start": "469759",
    "end": "474879"
  },
  {
    "text": "network i use an adb log cat monitor to see if i can find crashes",
    "start": "474879",
    "end": "480560"
  },
  {
    "start": "480000",
    "end": "515000"
  },
  {
    "text": "and i found crashes uh which is really cool um but then i now realized the the main",
    "start": "480560",
    "end": "486560"
  },
  {
    "text": "issue with this approach i couldn't understand why they had crashed i was just flipping",
    "start": "486560",
    "end": "491599"
  },
  {
    "text": "packets randomly and not to mention that the phones themselves weren't giving me the required debugging",
    "start": "491599",
    "end": "496800"
  },
  {
    "text": "output to actually figure out what was happening let alone the impact of what i just found and on the right here you can see",
    "start": "496800",
    "end": "502160"
  },
  {
    "text": "a phone crash i got on a samsung phone and this is all it told me it it mentions oh there's a memory guard",
    "start": "502160",
    "end": "508400"
  },
  {
    "text": "corruption which sounds really promising it's a heap overflow but it has this thing a little symbol",
    "start": "508400",
    "end": "513599"
  },
  {
    "text": "it's like the word root looking more into that um and honestly i should have probably",
    "start": "513599",
    "end": "519279"
  },
  {
    "start": "515000",
    "end": "529000"
  },
  {
    "text": "listened to comp secures they don't recommend ota fuzzing for more than just the fact that you can't get debugging output on",
    "start": "519279",
    "end": "525519"
  },
  {
    "text": "base fans it's just not a good approach um looking more into the debugging side of",
    "start": "525519",
    "end": "532240"
  },
  {
    "start": "529000",
    "end": "553000"
  },
  {
    "text": "things i found that there are root checks within the baseband code itself pretty much if it's if your phone's been",
    "start": "532240",
    "end": "538000"
  },
  {
    "text": "unlocked or rooted in a way that i guess is you know not using an exploit the modem",
    "start": "538000",
    "end": "543680"
  },
  {
    "text": "will no longer give you the debugging output that you would expect so we're kind of kind of stuck to get",
    "start": "543680",
    "end": "549040"
  },
  {
    "text": "modem dumps we need root but rooting suppresses modem logs so how do we actually find let alone debug",
    "start": "549040",
    "end": "555839"
  },
  {
    "start": "553000",
    "end": "592000"
  },
  {
    "text": "these memory corruptions in a scalable way the anti-debug makes this difficult we probably need some off-the-shelf",
    "start": "555839",
    "end": "561600"
  },
  {
    "text": "exploits to bypass these things silently manual engineering is an option but base",
    "start": "561600",
    "end": "567360"
  },
  {
    "text": "bands are huge this doesn't really scale too well and um on the link there you can visit offline is a",
    "start": "567360",
    "end": "573600"
  },
  {
    "text": "kind of a demonstration of how much is really going on at a baseband so from a vulnerability research",
    "start": "573600",
    "end": "579440"
  },
  {
    "text": "perspective the gdb coverage guided fuzzer and snapchatting",
    "start": "579440",
    "end": "585839"
  },
  {
    "text": "so at this point seems like the most viable approach was to drop the over there fuzzing and go jump straight into emulation",
    "start": "585839",
    "end": "593760"
  },
  {
    "text": "to do that we started by reversing the firmware and this started by getting the firmware from a publicly available source",
    "start": "593760",
    "end": "600640"
  },
  {
    "start": "596000",
    "end": "690000"
  },
  {
    "text": "um we bought a research phone the samsung s10 we targeted this specific firmware",
    "start": "600640",
    "end": "605839"
  },
  {
    "text": "and uh we was able to we also had to launch a other firmware lying around which we used this kind of flowchart to",
    "start": "605839",
    "end": "611120"
  },
  {
    "text": "categorize pretty much it's just the zip file tar files within it we pick one tar file which has the modem",
    "start": "611120",
    "end": "617200"
  },
  {
    "text": "code untar it we have modem.bin and modem debug that bin uh there had",
    "start": "617200",
    "end": "622480"
  },
  {
    "text": "been talk that actually these files were encrypted we didn't see that none of our images were encrypted",
    "start": "622480",
    "end": "628079"
  },
  {
    "text": "we were able to just throw it into geija and get started this format the the table of contents format i'll",
    "start": "628079",
    "end": "634320"
  },
  {
    "text": "show on the next slide it's been well reverse engineered already so it's a pretty simple format the",
    "start": "634320",
    "end": "640240"
  },
  {
    "text": "modem.bin file has a header this header has a name file load address",
    "start": "640240",
    "end": "646240"
  },
  {
    "text": "size crc and entry id and then this header is replicated for every entry within the toc format",
    "start": "646240",
    "end": "653600"
  },
  {
    "text": "but for our purposes we are really only interested into into these two sections the boot and main sections",
    "start": "653600",
    "end": "660399"
  },
  {
    "text": "uh starting with the boot we seeked forward into the file defined at start points and uh looking",
    "start": "660399",
    "end": "666720"
  },
  {
    "text": "into the actual code we started to notice a very obvious pattern if you've done arm reverse engineering",
    "start": "666720",
    "end": "672000"
  },
  {
    "text": "the the conditional flag is set so this pretty much means the code is not encrypted and uh we can just throw it into each",
    "start": "672000",
    "end": "678480"
  },
  {
    "text": "other and get started um further disassembling confirm these are the exception vectors",
    "start": "678480",
    "end": "684480"
  },
  {
    "text": "and at which point we can then jump straight into the boot um the reset exception handler and get started on",
    "start": "684480",
    "end": "691600"
  },
  {
    "start": "690000",
    "end": "718000"
  },
  {
    "text": "doing some reverse engineering disassembling and naming we realize that the bootloader is using uart which is really cool",
    "start": "691600",
    "end": "698079"
  },
  {
    "text": "something we're going to emulate later on to be able to get this output or pretty much liberate this output from the baseband and we also noted",
    "start": "698079",
    "end": "705440"
  },
  {
    "text": "two boot modes the dump and the regular boot mode and in order to do an emulation to be",
    "start": "705440",
    "end": "710639"
  },
  {
    "text": "able to bring up this firmware in our shannon ee system we need to know who's signaling these boot modes and what what boot",
    "start": "710639",
    "end": "716639"
  },
  {
    "text": "modes are possible so that brought us to a side quest on the into the samsung kernel",
    "start": "716639",
    "end": "722480"
  },
  {
    "start": "718000",
    "end": "783000"
  },
  {
    "text": "thankfully because of the gpl this is available publicly i mirrored it here at this link but",
    "start": "722480",
    "end": "727760"
  },
  {
    "text": "effectively there are there's the modem driver within the within the code uh we looked at it and",
    "start": "727760",
    "end": "733200"
  },
  {
    "text": "two files stood out the modem i o device file which is actually the i o control",
    "start": "733200",
    "end": "738560"
  },
  {
    "text": "handlers for the modem driver and this allows for read and write and",
    "start": "738560",
    "end": "744560"
  },
  {
    "text": "then this linked device memory file which actually contains trucks on the shared memory regions",
    "start": "744560",
    "end": "749680"
  },
  {
    "text": "between the application processor and cellular processor looking more into the i o controls",
    "start": "749680",
    "end": "755600"
  },
  {
    "text": "there's something called cbd or the cellular boot daemon this communicates with the dev node via",
    "start": "755600",
    "end": "760959"
  },
  {
    "text": "io controls and it actually will boot the modem up it will do this by first resetting it",
    "start": "760959",
    "end": "766880"
  },
  {
    "text": "setting up security setting it to on booting on download which means i'll",
    "start": "766880",
    "end": "772480"
  },
  {
    "text": "upload the code and then boot off um the security request is actually interesting and",
    "start": "772480",
    "end": "777760"
  },
  {
    "text": "i'd like to talk about that at another time but that pretty much enables secure boot for the moda",
    "start": "777760",
    "end": "784560"
  },
  {
    "start": "783000",
    "end": "839000"
  },
  {
    "text": "so looking more into this uh shared this link device memory file we found a structure that's packed and is referenced in the",
    "start": "784720",
    "end": "792000"
  },
  {
    "text": "actual uh io like it's an i o memory uh reference so what this really means is",
    "start": "792000",
    "end": "798639"
  },
  {
    "text": "actually going to be used for dma and ipc there are commands and there's this magic field",
    "start": "798639",
    "end": "804079"
  },
  {
    "text": "this magic field actually matched the the magic numbers here actually match what we saw",
    "start": "804079",
    "end": "809440"
  },
  {
    "text": "in the baseband bootloader which means we can now actually map this same memory region in our emulator",
    "start": "809440",
    "end": "815200"
  },
  {
    "text": "to be able to signal to the bootloader how we would like it to boot and allow us to explore the baseband and",
    "start": "815200",
    "end": "820240"
  },
  {
    "text": "continue booting forward as a side note those other buffers the format and the raw tx and rx",
    "start": "820240",
    "end": "827120"
  },
  {
    "text": "buffs those are actually receiving commands from the samsung radio interface layer so that's actually",
    "start": "827120",
    "end": "832480"
  },
  {
    "text": "something we'd like to explore further because that is really the ipc between the linux kernel and the base the",
    "start": "832480",
    "end": "838240"
  },
  {
    "text": "baseband itself so with this reverse engineering out of the way we actually had this uh nice",
    "start": "838240",
    "end": "844480"
  },
  {
    "start": "839000",
    "end": "869000"
  },
  {
    "text": "block diagram we could make to help us understand kind of like how everything's organized and to make sure that we're on the same",
    "start": "844480",
    "end": "849839"
  },
  {
    "text": "page um so far we've looked at these portions we had looked at the the modem interface which is",
    "start": "849839",
    "end": "855120"
  },
  {
    "text": "the host interface and via ipc cross core and we'd also seen that there is uart",
    "start": "855120",
    "end": "860240"
  },
  {
    "text": "but there's a lot more to look at we need the tasks that are specific to the seller technologies we need the other peripherals and that's",
    "start": "860240",
    "end": "867120"
  },
  {
    "text": "brings us to our next step at this point we could actually start writing emulation code but first we need",
    "start": "867120",
    "end": "874160"
  },
  {
    "start": "873000",
    "end": "906000"
  },
  {
    "text": "to pick our weapons and for that we chose avatar 2 which uses kimu as a target underneath",
    "start": "874160",
    "end": "880079"
  },
  {
    "text": "a little bit about avatar 2 it's actually a python framework that orchestrates other frameworks and",
    "start": "880079",
    "end": "885760"
  },
  {
    "text": "allows you to interoperate between them it allows you to define python based peripheral definitions",
    "start": "885760",
    "end": "891600"
  },
  {
    "text": "for easy prototyping which we which i really liked because i allowed me to work fast and i have to",
    "start": "891600",
    "end": "897199"
  },
  {
    "text": "worry about compiling c over and over again and it had a really nice interface to kimu such as gdb",
    "start": "897199",
    "end": "902880"
  },
  {
    "text": "and its monitor protocol so a really good thing to choose and the first thing i did was i wrote a",
    "start": "902880",
    "end": "908880"
  },
  {
    "start": "906000",
    "end": "941000"
  },
  {
    "text": "peripheral for the boot uart it was really simple um on the right you see this peripheral definition",
    "start": "908880",
    "end": "915519"
  },
  {
    "text": "there are two functions the read and write functions which are called if um kimu will access a memory",
    "start": "915519",
    "end": "922480"
  },
  {
    "text": "address within the memory range that is defined on the left dead simple and we were able to liberate",
    "start": "922480",
    "end": "928639"
  },
  {
    "text": "the initial boot messages to help us debug our peripheral definitions from that point forward",
    "start": "928639",
    "end": "934959"
  },
  {
    "text": "and uh here's a initial video of actually it booting once we had done the uart",
    "start": "935040",
    "end": "942000"
  },
  {
    "start": "941000",
    "end": "964000"
  },
  {
    "text": "so uh you'll notice in the bottom left there's some kind of debugging output showing us what's being done and you",
    "start": "942000",
    "end": "947519"
  },
  {
    "text": "notice this is actually the uart coming out now but look how slow it is it's pretty much slower than the 56k modem at this point",
    "start": "947519",
    "end": "954800"
  },
  {
    "text": "um which is okay it's a good first start but we definitely need to do better so",
    "start": "954800",
    "end": "961680"
  },
  {
    "text": "that's why we started going even further and the first thing i did after seeing this was implementing",
    "start": "961680",
    "end": "968000"
  },
  {
    "start": "964000",
    "end": "993000"
  },
  {
    "text": "snapshots uh which ended up being a piece of cake with avatar's frameworks because of have it allowed us",
    "start": "968000",
    "end": "973920"
  },
  {
    "text": "to remotely control kimu we could just send the command to do a snapshot the only caveat is because we",
    "start": "973920",
    "end": "979360"
  },
  {
    "text": "had python and c based peripherals we need to make sure we snapchatted both",
    "start": "979360",
    "end": "984560"
  },
  {
    "text": "so we just pretty much the code you see here is exactly what we use to snapshot the python peripherals",
    "start": "984560",
    "end": "989920"
  },
  {
    "text": "peripherals at the same time as the ones in kimu and taking a step back this is what we",
    "start": "989920",
    "end": "997040"
  },
  {
    "text": "have so far the first incarnation of shannon ee we have avatar 2 we have our uart uh peripheral we have",
    "start": "997040",
    "end": "1004800"
  },
  {
    "text": "the the file parser for the mode of images we've been using gdb hooks up until now",
    "start": "1004800",
    "end": "1010959"
  },
  {
    "text": "and uh kimu is our target and everything is being done over ipc uh but this is where the problem is",
    "start": "1010959",
    "end": "1017440"
  },
  {
    "text": "actually because this ipc is cross process and we're needing a lot of hooks and a lot of remote memory",
    "start": "1017440",
    "end": "1023120"
  },
  {
    "text": "reads these become the primary bottleneck and we needed a way to actually solve this but i spent a",
    "start": "1023120",
    "end": "1029760"
  },
  {
    "start": "1029000",
    "end": "1042000"
  },
  {
    "text": "whole lot more time hacking on this trying to figure out trying to improve the speed and i kind of hit a dead end i was like you know it",
    "start": "1029760",
    "end": "1035600"
  },
  {
    "text": "something's wrong here maybe we need to take a different approach so uh this is when i brought on board",
    "start": "1035600",
    "end": "1041520"
  },
  {
    "text": "marius who better who better to bring on than the lead developer of avatar 2.",
    "start": "1041520",
    "end": "1046880"
  },
  {
    "text": "so uh with him and his knowledge he suggested we actually move to a different approach we actually",
    "start": "1046880",
    "end": "1052000"
  },
  {
    "text": "instead of using kimu let's use panda so we ported the rest of what we had",
    "start": "1052000",
    "end": "1057200"
  },
  {
    "start": "1054000",
    "end": "1125000"
  },
  {
    "text": "done to panda panda is just a fork of kimu from from 2013 or so",
    "start": "1057200",
    "end": "1062799"
  },
  {
    "text": "and what it offers in addition to kimu is a plug-in infrastructure callbacks during kim's runtime state and",
    "start": "1062799",
    "end": "1068720"
  },
  {
    "text": "record and replay and it's already integrated in avatar to i guess framework so the main issue is",
    "start": "1068720",
    "end": "1076720"
  },
  {
    "text": "it still has the performance issues that we're dealing with it's still a separate process but that's when we discovered pi panda",
    "start": "1076720",
    "end": "1084240"
  },
  {
    "text": "it's a pretty much a library based import of kimu or a panda you can literally import panda",
    "start": "1084240",
    "end": "1090160"
  },
  {
    "text": "and that means it's now a thread within your process so no more ipc you get a single python",
    "start": "1090160",
    "end": "1096320"
  },
  {
    "text": "interpreter with ffi to pandas c functions so you can do extremely fast native hooks",
    "start": "1096320",
    "end": "1102240"
  },
  {
    "text": "which allowed me to replace all the gdb hooks with panda hooks and we got a huge speed up doing this",
    "start": "1102240",
    "end": "1108080"
  },
  {
    "text": "their ipc was pretty much just um a mutex waking up another threat now",
    "start": "1108080",
    "end": "1113600"
  },
  {
    "text": "which is a big speed up and on the right you see our block diagram of how things have changed it's not all integrated together and we",
    "start": "1113600",
    "end": "1120160"
  },
  {
    "text": "can get higher performance and we don't need multiple python interpreters on either end",
    "start": "1120160",
    "end": "1126399"
  },
  {
    "start": "1125000",
    "end": "1193000"
  },
  {
    "text": "this is when we really started getting into the weeds of emily emulating peripherals and we hit this function called pal in",
    "start": "1126480",
    "end": "1132640"
  },
  {
    "text": "it one it's a huge monolith that pretty much boots the modem once you've gotten past the boot loader",
    "start": "1132640",
    "end": "1138400"
  },
  {
    "text": "you've gone into the main image you hit this function which brings up all the heap objects the non-volatile items the timers",
    "start": "1138400",
    "end": "1146480"
  },
  {
    "text": "dsps and all the tasks so to kind of turn through this we",
    "start": "1146480",
    "end": "1152160"
  },
  {
    "text": "iteratively emulated the peripherals we watch for crash strings or infinite loops we use memory mapped i o",
    "start": "1152160",
    "end": "1157760"
  },
  {
    "text": "monitoring to see which peripherals need more modeling and it was really an iterative cycle we also used some kind of simple a cyclic",
    "start": "1157760",
    "end": "1164799"
  },
  {
    "text": "bit pattern to like kind of fuzz our way through some peripherals that we that were able to get us past any checks",
    "start": "1164799",
    "end": "1172240"
  },
  {
    "text": "and after doing all this we had partially emulated the power management ic the clock peripheral a very very small",
    "start": "1172240",
    "end": "1178559"
  },
  {
    "text": "amount of the dsp not the actual just enough to the communication the soc driver uh the samsung ipc peripheral the",
    "start": "1178559",
    "end": "1186160"
  },
  {
    "text": "slash certain memory the timer and the um the generic interrupt controller so we could boot and we could bring",
    "start": "1186160",
    "end": "1192000"
  },
  {
    "text": "tasks up and we hit the banner we had seen this banner in the static analysis",
    "start": "1192000",
    "end": "1197280"
  },
  {
    "start": "1193000",
    "end": "1213000"
  },
  {
    "text": "and we're like if we can get to this banner we'll be in really good shape and we reached it and this was about i",
    "start": "1197280",
    "end": "1203039"
  },
  {
    "text": "think march so um it had been i brought marius on board in january and then in march so",
    "start": "1203039",
    "end": "1209440"
  },
  {
    "text": "things really kicked off and we're really cooking with gas now so at this point we had started to get",
    "start": "1209440",
    "end": "1216640"
  },
  {
    "start": "1213000",
    "end": "1220000"
  },
  {
    "text": "tasks running and we were like okay let's start doing fuzzing so we started the port triforce afl to our system",
    "start": "1216640",
    "end": "1224480"
  },
  {
    "start": "1220000",
    "end": "1259000"
  },
  {
    "text": "triforce afl is a patch set on top of a fill it's originally developed in 2017 and",
    "start": "1224480",
    "end": "1230480"
  },
  {
    "text": "what it does differently is it allows you to do system level fuzzing so shannon ee is a system level emulator",
    "start": "1230480",
    "end": "1236880"
  },
  {
    "text": "meaning it has a software mmu and it invokes afl from within the guest via",
    "start": "1236880",
    "end": "1242240"
  },
  {
    "text": "hyper calls and we combine this patch set with some afl plus plus editions",
    "start": "1242240",
    "end": "1247360"
  },
  {
    "text": "because i have some really good patches which means we got better coverage collection and a persistent mode and this allowed",
    "start": "1247360",
    "end": "1254320"
  },
  {
    "text": "us to do fuzzing within using something called the afl task",
    "start": "1254320",
    "end": "1260080"
  },
  {
    "text": "so to get an afl task running in the baseband we used our mod kit we wrote a mod kit",
    "start": "1260080",
    "end": "1265840"
  },
  {
    "text": "that allowed us to inject custom tasks into the emulated baseband uh playing very nice with all the apis that exist",
    "start": "1265840",
    "end": "1272960"
  },
  {
    "text": "we use we were able to write these in c and we had dynamic symbol resolution for a",
    "start": "1272960",
    "end": "1278240"
  },
  {
    "text": "nice c like ffi um this was done cross version as well so you wouldn't have to",
    "start": "1278240",
    "end": "1283679"
  },
  {
    "text": "change our harness for different for let's say a 2017 firmware image to a 2019 firmware image it would be seamless",
    "start": "1283679",
    "end": "1290960"
  },
  {
    "text": "and the diagram below shows you kind of how the afl task is integrated it has a couple of steps it will set up",
    "start": "1290960",
    "end": "1297679"
  },
  {
    "text": "the fuzz case test case it'll start the fork server it will receive data from afl it will",
    "start": "1297679",
    "end": "1304640"
  },
  {
    "text": "start the work collecting coverage it will do the single fuzz test case and then it'll call done and repeat",
    "start": "1304640",
    "end": "1312000"
  },
  {
    "start": "1310000",
    "end": "1354000"
  },
  {
    "text": "so now we actually needed to target tasks so we integrated afl within the rtos itself",
    "start": "1312400",
    "end": "1318720"
  },
  {
    "text": "which means we could use the apis that the rtos tasks themselves already used",
    "start": "1318720",
    "end": "1323840"
  },
  {
    "text": "and this was an important thing that we chose to do because it allowed us to avoid re-hosting i guess and carving out portions of the",
    "start": "1323840",
    "end": "1331360"
  },
  {
    "text": "baseband to get our fuzz harness to work we could just play nice with the messaging and we reverse engineered the message",
    "start": "1331360",
    "end": "1338000"
  },
  {
    "text": "and cues that were used to send data between tasks and we would just call send message to target a task",
    "start": "1338000",
    "end": "1345200"
  },
  {
    "text": "on the right is the header of the queue items that would be sent very simple source destination cues",
    "start": "1345200",
    "end": "1351679"
  },
  {
    "text": "a size and a message id so our as an example here is the gsm",
    "start": "1351679",
    "end": "1358000"
  },
  {
    "start": "1354000",
    "end": "1393000"
  },
  {
    "text": "session management in the gprs fuzzing harness this is 2.5",
    "start": "1358000",
    "end": "1363120"
  },
  {
    "text": "g slash 2g this is what the data connections under very early 2gs would use",
    "start": "1363120",
    "end": "1369520"
  },
  {
    "text": "on the left is the queue item that's specific to the sm task and on the right is the setup function",
    "start": "1369520",
    "end": "1376240"
  },
  {
    "text": "for the task this is important because we had to do an initial packet to send to the sm task",
    "start": "1376240",
    "end": "1382320"
  },
  {
    "text": "which would initialize it to the point where it would then be ready to receive radio messages and it's important to",
    "start": "1382320",
    "end": "1388000"
  },
  {
    "text": "note that our approach is skipping layers two and one it's jumping straight to layer three",
    "start": "1388000",
    "end": "1393600"
  },
  {
    "start": "1393000",
    "end": "1437000"
  },
  {
    "text": "which saves us a lot of time with peripheral emulation here's actual fuzz single what it really",
    "start": "1393600",
    "end": "1400080"
  },
  {
    "text": "does is very much the same it will allocate a message cue item uh it'll allocate a pdu it will get the",
    "start": "1400080",
    "end": "1407280"
  },
  {
    "text": "work from afl it will copy it in set the size set the radio message id which will be reverse",
    "start": "1407280",
    "end": "1412559"
  },
  {
    "text": "engineered start collecting coverage send the message and this is an important part it actually will send a message from task the afl",
    "start": "1412559",
    "end": "1419760"
  },
  {
    "text": "task and then it will the rtos will reschedule directly towards a task and we did this by actually setting the",
    "start": "1419760",
    "end": "1426000"
  },
  {
    "text": "priority of our afl task to the lowest possible and then finally once that message is in",
    "start": "1426000",
    "end": "1432159"
  },
  {
    "text": "processing or any sub messages that return it will call done work and do it all over again",
    "start": "1432159",
    "end": "1438320"
  },
  {
    "start": "1437000",
    "end": "1485000"
  },
  {
    "text": "so here's a video of it in action it's just as how you would normally use",
    "start": "1438320",
    "end": "1444080"
  },
  {
    "text": "afl and you can call it directly on the shannon ee it will spin up the fork server from",
    "start": "1444080",
    "end": "1451279"
  },
  {
    "text": "a snapshot so we don't have to wait for the whole thing to boot up we can snapchat right before the afl task is ready to run and the",
    "start": "1451279",
    "end": "1458559"
  },
  {
    "text": "baseband is quiesce waiting for events it will lower the initial corpus start collecting coverage",
    "start": "1458559",
    "end": "1465120"
  },
  {
    "text": "and boom it will start fuzzing and uh our exact speed's pretty high because we've set a pretty high um",
    "start": "1465120",
    "end": "1472159"
  },
  {
    "text": "persistent mode number this does come at the expense of variable test cases so you don't have to use it but if you want",
    "start": "1472159",
    "end": "1478640"
  },
  {
    "text": "to really turn through things fast you can go ahead and do that and now let's talk about the bugs we found",
    "start": "1478640",
    "end": "1485679"
  },
  {
    "start": "1485000",
    "end": "1543000"
  },
  {
    "text": "so before we jumped straight into oday stuff we wanted to make sure that we had built a tool that actually worked on",
    "start": "1485679",
    "end": "1491760"
  },
  {
    "text": "real uh to find real bugs not just kind of fake false positive bugs so we decided to rediscover an end day",
    "start": "1491760",
    "end": "1499120"
  },
  {
    "text": "and we actually went off of ahmad's talk which was targeting a galaxy i believe s10 or sorry s7 and we were then",
    "start": "1499120",
    "end": "1507200"
  },
  {
    "text": "able to build a harness for the same subsystems he fuzzed so the gsm and gprs radio packet",
    "start": "1507200",
    "end": "1514000"
  },
  {
    "text": "handlers and more specifically we built harnesses for call control cc mobility management and session",
    "start": "1514000",
    "end": "1521440"
  },
  {
    "text": "management these are all something you could read the standards of gsm we set afl to the task set up the fuzzer",
    "start": "1521440",
    "end": "1528960"
  },
  {
    "text": "and boom we were able to actually rediscover the pdp network accept crash from a walk with shannon talk so this",
    "start": "1528960",
    "end": "1536080"
  },
  {
    "text": "gave us a lot of motivation and we had pretty much done some ground truth testing on our emulator",
    "start": "1536080",
    "end": "1542640"
  },
  {
    "text": "now defined new things once again our target was gsm and gprs because hey you know",
    "start": "1542640",
    "end": "1548080"
  },
  {
    "text": "if we find something here this is the lowest hanging fruit why not look at lte or 3g or even 5g",
    "start": "1548080",
    "end": "1555200"
  },
  {
    "text": "i mean at the end of the day if you're trying to compromise a baseband you're going to go for the easiest target 2g is at target and it is still",
    "start": "1555200",
    "end": "1562159"
  },
  {
    "text": "implemented in pretty much every base baseband today you can do a fake base station attack trivially",
    "start": "1562159",
    "end": "1568880"
  },
  {
    "text": "there's no mutual authentication so it's easy to craft any message you like um our coverage guiding fuzzing we had",
    "start": "1568880",
    "end": "1576559"
  },
  {
    "text": "some blank initial seeds and we were able to debug coverage using panda exporting coverage and giger's dragon",
    "start": "1576559",
    "end": "1583200"
  },
  {
    "text": "dance um we didn't run even for that long 30 cp 30 cpu cores across uh five days",
    "start": "1583200",
    "end": "1591520"
  },
  {
    "text": "uh which further demonstrates the scalability and we've discovered two end days the one from before and the one i'll",
    "start": "1591520",
    "end": "1597360"
  },
  {
    "text": "talk about next and one zero day which we're in disclosure with samsung about right now",
    "start": "1597360",
    "end": "1602880"
  },
  {
    "text": "and given the success of gsm the fact that this is 30 years old at this point we're still finding things i'd say",
    "start": "1602880",
    "end": "1608640"
  },
  {
    "text": "lte and above is definitely next on our list so let's talk about the other end day we",
    "start": "1608640",
    "end": "1614320"
  },
  {
    "start": "1611000",
    "end": "1654000"
  },
  {
    "text": "found which were which were coining the call of death it's uh pretty much an i believe a",
    "start": "1614320",
    "end": "1619760"
  },
  {
    "text": "previously unknown overflow at least publicly in the call setup packet using targeting",
    "start": "1619760",
    "end": "1625520"
  },
  {
    "text": "this field called the bearer capability this is something you can look up in the standards",
    "start": "1625520",
    "end": "1630640"
  },
  {
    "text": "but effectively it comes in when you're receiving a call this packet was incorrectly parsed by the baseband when the call is incoming",
    "start": "1630640",
    "end": "1637039"
  },
  {
    "text": "and it's a heap based buffer overflow which we seem to have a fair amount of control over and we did confirm that",
    "start": "1637039",
    "end": "1644240"
  },
  {
    "text": "this vulnerability is no longer on newer firmwares balance checking has been added and it's",
    "start": "1644240",
    "end": "1649360"
  },
  {
    "text": "pretty explicit that they were fixing this whether it was from a report or an internal audit we don't know",
    "start": "1649360",
    "end": "1654720"
  },
  {
    "text": "but the fact is we found it and we were able to use shannon to triage it",
    "start": "1654720",
    "end": "1659760"
  },
  {
    "text": "as you can see at the top here our afl task sent the message to the target task which is the cc task",
    "start": "1659760",
    "end": "1665600"
  },
  {
    "text": "the cc task was scheduled in it then received the setup message which is noted as a radio message it",
    "start": "1665600",
    "end": "1671840"
  },
  {
    "text": "entered the decode function and finally later on after some snips it you can see the length which is",
    "start": "1671840",
    "end": "1678080"
  },
  {
    "text": "pretty large for the bear should be maybe only a couple bytes and then it crashes with the palm guard corruption if you remember we had seen",
    "start": "1678080",
    "end": "1685039"
  },
  {
    "text": "on in the very beginning we'd seen the palum guard corruption in the phone screen but now we can actually see why this is happening",
    "start": "1685039",
    "end": "1691679"
  },
  {
    "text": "and the back trace to do it but logs aren't always enough so that's why we actually have the ability to use gdb",
    "start": "1691679",
    "end": "1698720"
  },
  {
    "text": "so we have the register r2 which is set to 30 30 30 30 and we have this comparison which is",
    "start": "1698720",
    "end": "1704399"
  },
  {
    "text": "comparing r2 against all a's this is actually the static heap cookie",
    "start": "1704399",
    "end": "1710000"
  },
  {
    "text": "and this check is going to fail and you can see the payload here and the reason it's going to fail is",
    "start": "1710000",
    "end": "1715279"
  },
  {
    "text": "because this is our payload afl generated everything that's not ascii 0 is the",
    "start": "1715279",
    "end": "1721360"
  },
  {
    "text": "message header enough to reach the bearer and the rest is the bearer so that's pretty much being",
    "start": "1721360",
    "end": "1726480"
  },
  {
    "text": "copied straight into a heap buffer that is clearly too small",
    "start": "1726480",
    "end": "1732000"
  },
  {
    "text": "so to even further have confidence that what we built is going to work in the real world we replicated what we found over the air",
    "start": "1732080",
    "end": "1739440"
  },
  {
    "start": "1738000",
    "end": "1774000"
  },
  {
    "text": "our experimental setup included a blade rf which is about 420 a base station yate bts which",
    "start": "1739440",
    "end": "1745760"
  },
  {
    "text": "we modified for the exploit payload we literally just copied it in verbatim",
    "start": "1745760",
    "end": "1751039"
  },
  {
    "text": "maybe cut off the the header the very initial header and that was it we targeted the s10 and",
    "start": "1751039",
    "end": "1756480"
  },
  {
    "text": "s7 in our testing and we used sim cards from osmocom to help the phone get an easy connection",
    "start": "1756480",
    "end": "1762000"
  },
  {
    "text": "and shout out to tyler tucker who is an author on this paper on this work who uh pretty much",
    "start": "1762000",
    "end": "1767520"
  },
  {
    "text": "spearheaded this and made sure that you know i didn't have to go through the hell of getting this set up again so he suffered for what you're about to see",
    "start": "1767520",
    "end": "1775760"
  },
  {
    "start": "1774000",
    "end": "1806000"
  },
  {
    "text": "and here's the demo so the call uh the phone on the left and the phone the right are both connected",
    "start": "1775840",
    "end": "1781360"
  },
  {
    "text": "to the uh fake base station calling the left is calling the phone on the right uh you can pick it up and um it will go",
    "start": "1781360",
    "end": "1789440"
  },
  {
    "text": "through but the phone on the right won't have the call working for some reason you get another call whether you decline or answer",
    "start": "1789440",
    "end": "1795679"
  },
  {
    "text": "at this point it's too late uh the signal bars disappear and that little x comes in which means the base band is",
    "start": "1795679",
    "end": "1801200"
  },
  {
    "text": "crashed um at this point it's a pretty cool thing we could do and uh to even further confirm",
    "start": "1801200",
    "end": "1808159"
  },
  {
    "start": "1806000",
    "end": "1820000"
  },
  {
    "text": "we uh use logcat to get the logs but as you can see this is all you can",
    "start": "1808159",
    "end": "1813600"
  },
  {
    "text": "see in the logs you actually can't see anything else so uh without shannon e it'd be really tough to debug why this happened",
    "start": "1813600",
    "end": "1820720"
  },
  {
    "start": "1820000",
    "end": "1822000"
  },
  {
    "text": "so let's wrap things up um there are a lot of remaining challenges and i think future work for this",
    "start": "1820720",
    "end": "1826080"
  },
  {
    "start": "1822000",
    "end": "1878000"
  },
  {
    "text": "like for instance doing fuzzing for cellular tailored fuzzing would be really cool to get better code coverage we ignore",
    "start": "1826080",
    "end": "1832640"
  },
  {
    "text": "the physical layer so what aren't we missing by supporting it i mean dsps are attack surface too",
    "start": "1832640",
    "end": "1838240"
  },
  {
    "text": "and honestly i think i would love to see this a holistic analysis of baseband attack surface what has been covered and what still",
    "start": "1838240",
    "end": "1844799"
  },
  {
    "text": "remains some key takeaways we really need scalable tools to keep up with all the",
    "start": "1844799",
    "end": "1850480"
  },
  {
    "text": "seller protocols especially 5g which is on the ryzen if we can barely do 2g how on earth are we going to keep up",
    "start": "1850480",
    "end": "1856640"
  },
  {
    "text": "with the rest of the 5 and beyond g's building an emulator",
    "start": "1856640",
    "end": "1861760"
  },
  {
    "text": "even with undocumented hardware can be done we can bring this methodology to other base fans and i think we should",
    "start": "1861760",
    "end": "1868320"
  },
  {
    "text": "um and honestly we have to emulate basebands we need the right introspection level especially to do",
    "start": "1868320",
    "end": "1873440"
  },
  {
    "text": "memory corruption debugging and over there testing i think we've shown is just not going to do it",
    "start": "1873440",
    "end": "1879519"
  },
  {
    "start": "1878000",
    "end": "1901000"
  },
  {
    "text": "with that we have some releases we'll be releasing um the top link has all of our reverse engineering tools and code uh",
    "start": "1879519",
    "end": "1886640"
  },
  {
    "text": "giga loaders and and so forth some firmware samples an on-device log parser for the btl format and shannon ee will",
    "start": "1886640",
    "end": "1894080"
  },
  {
    "text": "be released at a later date after disclosures in some further qa but you can watch that repository and you should be able to get an email when we",
    "start": "1894080",
    "end": "1900159"
  },
  {
    "text": "do our first push um with that i have to thank all the sponsors and",
    "start": "1900159",
    "end": "1905600"
  },
  {
    "start": "1901000",
    "end": "1924000"
  },
  {
    "text": "people who funded this work nsf src nwo and the air force and navy",
    "start": "1905600",
    "end": "1912000"
  },
  {
    "text": "without their contribution and support this work wouldn't have happened with that um i hope you enjoyed the talk",
    "start": "1912000",
    "end": "1919279"
  },
  {
    "text": "and i would be happy to take any of your questions",
    "start": "1919279",
    "end": "1923279"
  },
  {
    "start": "1924000",
    "end": "2362000"
  },
  {
    "text": "okay well um thanks everybody for attending this talk i i'm sorry for the buffering issues",
    "start": "1928000",
    "end": "1936159"
  },
  {
    "text": "um but if you manage to catch some parts of the talk we are here to answer any of your questions",
    "start": "1936159",
    "end": "1942880"
  },
  {
    "text": "and yeah here's here's marius so yeah hi yeah and unfortunately the logistics",
    "start": "1942880",
    "end": "1948960"
  },
  {
    "text": "of the talk didn't let us kind of get together due to you know there being an ocean",
    "start": "1948960",
    "end": "1954159"
  },
  {
    "text": "between us so but yeah but at least i'm now also here to to answer question of yours and",
    "start": "1954159",
    "end": "1961760"
  },
  {
    "text": "to the technical problems the video on demand for this talk will be available at a later point in time so you can",
    "start": "1961760",
    "end": "1967120"
  },
  {
    "text": "re-watch this yeah just the parts you missed and of course you can also reach out to us",
    "start": "1967120",
    "end": "1972960"
  },
  {
    "text": "later on the swap card platform and ask questions in private later on but we will also",
    "start": "1972960",
    "end": "1978799"
  },
  {
    "text": "answer a question right here um we have one already coming in which uh we inlined already in the chat but",
    "start": "1978799",
    "end": "1984720"
  },
  {
    "text": "still let's repeat it already um did we have access to the source when we started the project",
    "start": "1984720",
    "end": "1990720"
  },
  {
    "text": "uh grant no we did not um i know there had been a leaked source for i think mediatek",
    "start": "1990720",
    "end": "1997200"
  },
  {
    "text": "i believe um but we did not have that in this case so we had to really just start reverse engineering",
    "start": "1997200",
    "end": "2003200"
  },
  {
    "text": "from the very beginning um so if that definitely complicated matters but also",
    "start": "2003200",
    "end": "2008880"
  },
  {
    "text": "it's more realistic in terms of well i guess if you're an actual kind of vulnerability researcher",
    "start": "2008880",
    "end": "2014320"
  },
  {
    "text": "source is kind of a luxury you don't normally have so uh there's another question coming in um",
    "start": "2014320",
    "end": "2021760"
  },
  {
    "text": "roughly how long until shannon e's release date um so right now we're in disclosure with samsung um",
    "start": "2021760",
    "end": "2027919"
  },
  {
    "text": "we still need a qa of the code i don't really have an estimate because the disclosure process could take longer",
    "start": "2027919",
    "end": "2033120"
  },
  {
    "text": "than it usually takes longer than you think um that's all i can really say and yeah",
    "start": "2033120",
    "end": "2038559"
  },
  {
    "text": "but we are eager to release so uh we want yeah as soon as possible",
    "start": "2038559",
    "end": "2044399"
  },
  {
    "text": "right the sources will be in your hands at some point um we're not intending to keep for ourselves and um",
    "start": "2044399",
    "end": "2051520"
  },
  {
    "text": "yeah i i i didn't really catch this in the very beginning i didn't say enough but i mean me marius",
    "start": "2051520",
    "end": "2057679"
  },
  {
    "text": "and all the other people on the first slide were very important towards this work um so although marius wasn't presenting",
    "start": "2057679",
    "end": "2065040"
  },
  {
    "text": "i mean make sure everyone understands that this work wouldn't have happened without everyone working behind us so yeah it was a team",
    "start": "2065040",
    "end": "2073280"
  },
  {
    "text": "effort for sure definitely another question came in do the bucks tend to group toward crash",
    "start": "2073280",
    "end": "2079200"
  },
  {
    "text": "fail or remote access",
    "start": "2079200",
    "end": "2082720"
  },
  {
    "text": "well i guess i guess it depends i mean that's kind of like a question of how of like what your threat model is",
    "start": "2086720",
    "end": "2094720"
  },
  {
    "text": "because in our case we assume you have a fake base station you can get a phone to connect to the fake base station at that point you can",
    "start": "2094720",
    "end": "2101359"
  },
  {
    "text": "send arbitrary messages at least via 2g um so it's hard to say where the bugs",
    "start": "2101359",
    "end": "2106640"
  },
  {
    "text": "are if if you happen you know if we knew where the bugs were i think we would have had a lot more to talk about but um that's what this tool allows you to",
    "start": "2106640",
    "end": "2113440"
  },
  {
    "text": "do is define box yeah and for instance the end day we showcased was in",
    "start": "2113440",
    "end": "2119040"
  },
  {
    "text": "that scenario uh heap-based buffer workflow which is potentially leverageable to uh",
    "start": "2119040",
    "end": "2124560"
  },
  {
    "text": "full chain remote code execution exploit we did not do this we did not attempt it for us it was uh yeah far enough to get",
    "start": "2124560",
    "end": "2131359"
  },
  {
    "text": "to the crash yeah and there are no heap like the heat metadata is fairly straightforward and",
    "start": "2131359",
    "end": "2136800"
  },
  {
    "text": "there's no there's like a static heap cookie so there aren't really a whole lot of mitigations there um one other question so i use the",
    "start": "2136800",
    "end": "2143280"
  },
  {
    "text": "bladeruff x40 um yeah there is a very good reason why",
    "start": "2143280",
    "end": "2148320"
  },
  {
    "text": "um there's a blog post i just posted on my twitter about how to set up a cellular test bed and i explained why we used the x40 um",
    "start": "2148320",
    "end": "2156000"
  },
  {
    "text": "we couldn't get the xa4 to work on yate bts so yeah we would have liked to use it",
    "start": "2156000",
    "end": "2161200"
  },
  {
    "text": "and we we did try and it just didn't work so check out the blog post on my twitter that will let you get set up with the",
    "start": "2161200",
    "end": "2167680"
  },
  {
    "text": "testbed yourself and you'll see kind of the pain we had to go through to do that",
    "start": "2167680",
    "end": "2173838"
  },
  {
    "text": "okay another question which came in is the moon processor equipped with custom peripherals or standard arm",
    "start": "2174720",
    "end": "2181599"
  },
  {
    "text": "so that's the answer so we spent a lot of time reverse engineering custom",
    "start": "2181599",
    "end": "2186800"
  },
  {
    "text": "peripherals and trying to figure out what they do because uh sometimes even standard peripherals as timers which you",
    "start": "2186800",
    "end": "2192480"
  },
  {
    "text": "would expect following the standard uh arm definition of time as well a little bit different and hence needed",
    "start": "2192480",
    "end": "2199839"
  },
  {
    "text": "a lot of additional reverse engineering kept us busy for quite a while plus uh so these are just",
    "start": "2199839",
    "end": "2205200"
  },
  {
    "text": "the standard peripherals but then there are also those crazy baseband specific peripherals for instance the digital signal processor is",
    "start": "2205200",
    "end": "2212560"
  },
  {
    "text": "a full peripheral on its own um with its own culture with its own code",
    "start": "2212560",
    "end": "2218400"
  },
  {
    "text": "but also with its own interfaces mapped in the basements processor and reptile ranges yeah so we didn't",
    "start": "2218400",
    "end": "2225920"
  },
  {
    "text": "really touch that too much because we tried to avoid layer one as much as possible because that has its own can of worms we",
    "start": "2225920",
    "end": "2232079"
  },
  {
    "text": "didn't we didn't want to go there but it could be something we look into later",
    "start": "2232079",
    "end": "2238160"
  },
  {
    "text": "um you want to take the next one uh yeah so how extensible is the emulator to the base band of the",
    "start": "2239119",
    "end": "2245359"
  },
  {
    "text": "qualcomm for example so basically um the qualcomm baseband uses a completely different instruction",
    "start": "2245359",
    "end": "2251760"
  },
  {
    "text": "set architecture hexagon and we focus our full our or our full efforts on well an",
    "start": "2251760",
    "end": "2259280"
  },
  {
    "text": "arm-based course so and then the tooling we use like panda chemo avatar and so on",
    "start": "2259280",
    "end": "2264480"
  },
  {
    "text": "do not foresee really uh support for hexagon yet it may change in the future who knows but at the moment",
    "start": "2264480",
    "end": "2271119"
  },
  {
    "text": "um extensibility to qualcomm-based basebands is out of scope let's say when it comes to",
    "start": "2271119",
    "end": "2277280"
  },
  {
    "text": "other arm-based um basebands what sorry or maps based yeah i think",
    "start": "2277280",
    "end": "2284240"
  },
  {
    "text": "yeah yeah um or miss based um i mean general the the way how we",
    "start": "2284240",
    "end": "2290880"
  },
  {
    "text": "started this project and how reverse engineering and and basically focus on airtrust primitives and airtel's tasks i",
    "start": "2290880",
    "end": "2296800"
  },
  {
    "text": "think this should be transferable to other baseband processors as well but",
    "start": "2296800",
    "end": "2302560"
  },
  {
    "text": "the tool itself shannon e is definitely focused on shannon-based basebands",
    "start": "2302560",
    "end": "2308960"
  },
  {
    "text": "yeah so there's a question here about the if there's a white paper available um the time constraints of getting the talk prepared didn't really let us",
    "start": "2311200",
    "end": "2317599"
  },
  {
    "text": "give you a good white paper but we are releasing the tools we used to do reverse engineering and some of the kind of the knowledge there",
    "start": "2317599",
    "end": "2324079"
  },
  {
    "text": "we hope to add more in the future like going forward so check out the link i just posted in chat um that's what we have for now",
    "start": "2324079",
    "end": "2332960"
  },
  {
    "text": "um well if there aren't any more questions um feel free to reach us reach out to us",
    "start": "2338320",
    "end": "2344160"
  },
  {
    "text": "on twitter um email or however you'd like to reach out out to us and we'll be happy to answer more questions um offline but um we're about",
    "start": "2344160",
    "end": "2351520"
  },
  {
    "text": "out of time so we'll we'll sign off thanks again for attending and yeah see you around yep thank you so",
    "start": "2351520",
    "end": "2358640"
  },
  {
    "text": "much bye see ya",
    "start": "2358640",
    "end": "2364240"
  }
]