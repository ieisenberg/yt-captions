[
  {
    "text": "hello everyone we will present about compromising the megawatts corners rosa party by chaining six vulnerabilities",
    "start": "17680",
    "end": "25439"
  },
  {
    "text": "before jumping to the talk let me introduce ourselves first we are phd students at georgia tech",
    "start": "25439",
    "end": "32000"
  },
  {
    "text": "working with professor tesso kim we are in ss lab at gotec",
    "start": "32000",
    "end": "38000"
  },
  {
    "text": "and we believe is one of the best information security labs in the world",
    "start": "38000",
    "end": "44000"
  },
  {
    "text": "we also placed etf as team rudimentary you remember that that's called loot on depth constitutive",
    "start": "44000",
    "end": "49440"
  },
  {
    "text": "2018. actually depu root is the union team of deathcore and rutimentary",
    "start": "49440",
    "end": "55039"
  },
  {
    "text": "which is our team as you know we won in ponton 2020 by",
    "start": "55039",
    "end": "62079"
  },
  {
    "text": "demonstrating the power exploit we got rce and also escalated privileged corner as per after",
    "start": "62079",
    "end": "69680"
  },
  {
    "text": "escaping from sandbox we used six unique vulnerabilities in our",
    "start": "69680",
    "end": "75200"
  },
  {
    "text": "exploit chain and one 70k usd also we got second place in master of",
    "start": "75200",
    "end": "82799"
  },
  {
    "text": "pawn we want to emphasize two things",
    "start": "82799",
    "end": "88000"
  },
  {
    "text": "our submission was the only broader categories of mission in point on this year also it was the largest payout for",
    "start": "88000",
    "end": "94960"
  },
  {
    "text": "single targeting this year's phone to own i think many people are interested in",
    "start": "94960",
    "end": "102159"
  },
  {
    "text": "how we prepared pontoon we prepared it for a month to find vulnerabilities",
    "start": "102159",
    "end": "108159"
  },
  {
    "text": "we consider the three methods fording code qr and manual analysis",
    "start": "108159",
    "end": "113840"
  },
  {
    "text": "we found several blocks by fodding but they were not exploitable code qr looked great but we didn't have",
    "start": "113840",
    "end": "120399"
  },
  {
    "text": "the time to run so most of our findings come from manual analysis",
    "start": "120399",
    "end": "126079"
  },
  {
    "text": "we had frequently yet quit meetings to share information among members to fully utilize the shield preparation",
    "start": "126079",
    "end": "132800"
  },
  {
    "text": "time we selected the party as a target",
    "start": "132800",
    "end": "139040"
  },
  {
    "text": "because we were interested in broader exploitation and more familiarized nix like os also",
    "start": "139040",
    "end": "145760"
  },
  {
    "text": "previous experience about sapphire exploitations helped us to select safari as a target",
    "start": "145760",
    "end": "153040"
  },
  {
    "text": "this is high level overview of our full chain exploit using six vulnerabilities",
    "start": "154319",
    "end": "159840"
  },
  {
    "text": "first we explore the deep bug in a javascript engine to get rce in web",
    "start": "159840",
    "end": "166239"
  },
  {
    "text": "process of safari by visiting our webpage then using our third box hip overflow in",
    "start": "166239",
    "end": "173200"
  },
  {
    "text": "cpm server we got we get arbitrary code execution in cpm server",
    "start": "173200",
    "end": "178640"
  },
  {
    "text": "and then we execute our app using our second bug a logical login is a part is a broker",
    "start": "178640",
    "end": "184879"
  },
  {
    "text": "process however the execution is blocked by first time execution protection in the",
    "start": "184879",
    "end": "192959"
  },
  {
    "text": "mac os so we used our force box to bypass this now",
    "start": "192959",
    "end": "199280"
  },
  {
    "text": "we have code execution as employability user results and box after that we use our fips block or race",
    "start": "199280",
    "end": "206879"
  },
  {
    "text": "condition bug and zip preference demon to escalate privilege to root",
    "start": "206879",
    "end": "212879"
  },
  {
    "text": "finally we exploit our sixth bug in corner extension load binary to get",
    "start": "212879",
    "end": "218319"
  },
  {
    "text": "corner code execution and disable sap",
    "start": "218319",
    "end": "222560"
  },
  {
    "text": "let me explain first bug in our exploit chain rce in supply via incorrect side defect",
    "start": "223680",
    "end": "230080"
  },
  {
    "text": "modeling in jcg compiler for your background there is a in",
    "start": "230080",
    "end": "236560"
  },
  {
    "text": "operator in javascript it will return true if specific property",
    "start": "236560",
    "end": "241840"
  },
  {
    "text": "is in the object or is in its prototype chain and this operation is usually side",
    "start": "241840",
    "end": "248000"
  },
  {
    "text": "effect free since it's just checking whether a specific property exists",
    "start": "248000",
    "end": "255840"
  },
  {
    "text": "decompilation eliminates redundant text for optimization here is the function to be decompiled",
    "start": "256000",
    "end": "263520"
  },
  {
    "text": "note that already 2's type is already stable which means that all elements are double",
    "start": "263520",
    "end": "270240"
  },
  {
    "text": "in the first line of this function it says array 2's value with double this will introduce type",
    "start": "270240",
    "end": "276720"
  },
  {
    "text": "check to ensure that the type is already stable and then there is the in operation against array1",
    "start": "276720",
    "end": "284080"
  },
  {
    "text": "at the end of function already type should be checked again to access or a2 element",
    "start": "284080",
    "end": "291280"
  },
  {
    "text": "but the check is considered as redundant if the in operator is modeled as side",
    "start": "291360",
    "end": "297600"
  },
  {
    "text": "effect 3 then this check will be eliminated by optimization",
    "start": "297600",
    "end": "304800"
  },
  {
    "text": "the problem is if such side defect modeling was incorrect we can trigger unexpected side effects",
    "start": "305520",
    "end": "311600"
  },
  {
    "text": "and cause type confusion for example we can change our a2's type to something else",
    "start": "311600",
    "end": "316800"
  },
  {
    "text": "and access it as an old speculated type",
    "start": "316800",
    "end": "322080"
  },
  {
    "text": "inoperator is normally side effect free but webkit failed to consider exceptional",
    "start": "322880",
    "end": "328160"
  },
  {
    "text": "cases which can cause dummy bans webkit uses pdf plugin to",
    "start": "328160",
    "end": "333840"
  },
  {
    "text": "support an embedded pdf file for efficiency program will be",
    "start": "333840",
    "end": "339280"
  },
  {
    "text": "initialized lazily when its internal data is used this includes uses of in operator and this lady",
    "start": "339280",
    "end": "347520"
  },
  {
    "text": "initialization triggers a dummy band so we can't register a",
    "start": "347520",
    "end": "354240"
  },
  {
    "text": "handler for this dome event and invoke arbitrary javascript code to call side effect",
    "start": "354240",
    "end": "361198"
  },
  {
    "text": "the interesting thing about this bug is that it can't be discovered by avoiding the javascript engine itself",
    "start": "362960",
    "end": "368880"
  },
  {
    "text": "so there is phone fault fortunately codal chemist and xperia",
    "start": "368880",
    "end": "375280"
  },
  {
    "text": "can't find this bug since pdf plugin is not part of javascript javascript engine or how do you define",
    "start": "375280",
    "end": "382400"
  },
  {
    "text": "this manually so how can you trigger this bug first load",
    "start": "382400",
    "end": "389840"
  },
  {
    "text": "pdf using embed tag then install an event handler that triggers side effects",
    "start": "389840",
    "end": "396720"
  },
  {
    "text": "inoperator will be considered as side defect free in decompilation even though it's not actually it will",
    "start": "396720",
    "end": "403759"
  },
  {
    "text": "cause side effects for example printing hello world in this case",
    "start": "403759",
    "end": "409840"
  },
  {
    "text": "we can abuse this bug to build a primitive for arbitrary code execution which are get",
    "start": "411039",
    "end": "416720"
  },
  {
    "text": "addressed over and fake object for address of primitive we decompile the following function",
    "start": "416720",
    "end": "425039"
  },
  {
    "text": "in the first line of the function it says array tools value is double this will introduce type check to ensure",
    "start": "425039",
    "end": "431919"
  },
  {
    "text": "that type is already stopper and then there is a in operation on",
    "start": "431919",
    "end": "438080"
  },
  {
    "text": "array1 this will be considered side effect 3. however it will trigger initialization",
    "start": "438080",
    "end": "445039"
  },
  {
    "text": "of the pdf plugin and invoke our event handler for doms of 3 modified",
    "start": "445039",
    "end": "450319"
  },
  {
    "text": "this gender will put our object to the array and change the type of the array 2 into",
    "start": "450319",
    "end": "455759"
  },
  {
    "text": "array is contiguous type check for array 2 is eliminated",
    "start": "455759",
    "end": "461520"
  },
  {
    "text": "because of the incorrect modeling therefore compiled code will sync array",
    "start": "461520",
    "end": "466639"
  },
  {
    "text": "2 as an already stubber so we can return our objects otherwise interpreted",
    "start": "466639",
    "end": "472720"
  },
  {
    "text": "as a double and decompiled function",
    "start": "472720",
    "end": "478560"
  },
  {
    "text": "fake object primitive is almost the same but in this case we put address of our fake",
    "start": "478560",
    "end": "484560"
  },
  {
    "text": "object to array after triggering side defect which con which changes type of the array to array",
    "start": "484560",
    "end": "490960"
  },
  {
    "text": "is contiguous from address op and fake object",
    "start": "490960",
    "end": "497840"
  },
  {
    "text": "primitive we just reuse the existing technique to achieve arbitrary code execution",
    "start": "497840",
    "end": "503440"
  },
  {
    "text": "first we need the structure id to bypass randomized structure id protection and corrupt",
    "start": "503440",
    "end": "509280"
  },
  {
    "text": "valid object using one's technique which is presented in blackhead europe 2019",
    "start": "509280",
    "end": "515599"
  },
  {
    "text": "then we achieved arbitrary read write by abusing butterfly structure in the acc similar to the class exploit",
    "start": "515599",
    "end": "524959"
  },
  {
    "text": "finally we overwrote this region to execute their code",
    "start": "525120",
    "end": "530560"
  },
  {
    "text": "how this is fixed webkit started to consider that in operator has side effects if an",
    "start": "532000",
    "end": "537839"
  },
  {
    "text": "object's prototype is modified so now scientific modelling of",
    "start": "537839",
    "end": "542880"
  },
  {
    "text": "inoperator is correct next step in our exploit chain is",
    "start": "542880",
    "end": "549760"
  },
  {
    "text": "launching arbitrary app by exploiting our logical bug in the price broker process",
    "start": "549760",
    "end": "555760"
  },
  {
    "text": "as you know there is a fire scheme in the browser if we use it in the chrome it will just",
    "start": "558560",
    "end": "564240"
  },
  {
    "text": "show the contents of the directory in the in a browser but in safari somehow it pops",
    "start": "564240",
    "end": "570720"
  },
  {
    "text": "finder to show the directory we had a question how does it happen",
    "start": "570720",
    "end": "577839"
  },
  {
    "text": "so we checked what is happening under the hood the party uses elect function to",
    "start": "577839",
    "end": "584320"
  },
  {
    "text": "launch finder here is a code to enter fire scheme in safari it gets firepath",
    "start": "584320",
    "end": "590480"
  },
  {
    "text": "from gibbon url and launches finder using select file api so probably opened the file in the past",
    "start": "590480",
    "end": "596959"
  },
  {
    "text": "and it caused it caused a security issue because of the issue now it opens the",
    "start": "596959",
    "end": "602959"
  },
  {
    "text": "directory containing the file uh whereas this function is being used",
    "start": "602959",
    "end": "609600"
  },
  {
    "text": "we found that it is also used in another function called safari repair file",
    "start": "609600",
    "end": "616880"
  },
  {
    "text": "in this function our url will be checked using each file package as pest function is",
    "start": "617440",
    "end": "623360"
  },
  {
    "text": "file package pass function text whether a url points to an app",
    "start": "623360",
    "end": "628640"
  },
  {
    "text": "so in this case select file function is called with a url and nothing interesting happens",
    "start": "628640",
    "end": "634640"
  },
  {
    "text": "but if if file package pass returns first then it will cause select file",
    "start": "634640",
    "end": "641120"
  },
  {
    "text": "with argument in file we are rooted at pass",
    "start": "641120",
    "end": "646240"
  },
  {
    "text": "after a quick experiment we discovered that our path is considered as an app by is",
    "start": "646240",
    "end": "652480"
  },
  {
    "text": "file package at pacific is a directory whose name ends with that app and",
    "start": "652480",
    "end": "657600"
  },
  {
    "text": "we can also bypass this check using simple link also if select files second arguments",
    "start": "657600",
    "end": "664160"
  },
  {
    "text": "points on app it will launch the app even if it's the symbol link",
    "start": "664160",
    "end": "670560"
  },
  {
    "text": "and most importantly the renderer can make broker to call this function",
    "start": "670560",
    "end": "675760"
  },
  {
    "text": "using the pipc in short we send ipc after making a symbol link",
    "start": "675760",
    "end": "683200"
  },
  {
    "text": "for an arbitrary app we can launch the app",
    "start": "683200",
    "end": "689839"
  },
  {
    "text": "but two problems still exist to launch the arbitrary app first we can't create simple link from",
    "start": "690800",
    "end": "697839"
  },
  {
    "text": "the renderer since it's restricted by sandbox to resolve this we use the bug 3",
    "start": "697839",
    "end": "704959"
  },
  {
    "text": "arbitrary code exclusion in gbm server second apple has a mitigation code first time",
    "start": "704959",
    "end": "712079"
  },
  {
    "text": "at protection in particular iphone app is not signed by trusted developers",
    "start": "712079",
    "end": "717839"
  },
  {
    "text": "its execution will be blocked until users are proper but we were able to bypass this",
    "start": "717839",
    "end": "723200"
  },
  {
    "text": "protection using the bug 4.",
    "start": "723200",
    "end": "726720"
  },
  {
    "text": "so how did apple fix this they just remove the application",
    "start": "728240",
    "end": "733440"
  },
  {
    "text": "launching pass now jungi will continue the rest of the",
    "start": "733440",
    "end": "738800"
  },
  {
    "text": "presentation i'll continue with the arbitrary code execution vulnerability in cpm service",
    "start": "738800",
    "end": "745279"
  },
  {
    "text": "by using heap overflow block cbm server is an xpc service accessible",
    "start": "745279",
    "end": "752079"
  },
  {
    "text": "from web process these services use it to support opengl rendering and we can see it is exposed",
    "start": "752079",
    "end": "759680"
  },
  {
    "text": "in the sandbox profile code it is also sandboxed but it has more",
    "start": "759680",
    "end": "766320"
  },
  {
    "text": "capabilities than web process for example we can create a symbol link",
    "start": "766320",
    "end": "772079"
  },
  {
    "text": "and send a signal to other process from here and there is heap overflow block in cbm",
    "start": "772079",
    "end": "779440"
  },
  {
    "text": "server as you can see here if we send a message",
    "start": "779440",
    "end": "784720"
  },
  {
    "text": "with message field set to 4 then it calls a function named cpms",
    "start": "784720",
    "end": "789839"
  },
  {
    "text": "service server service attached all of these arguments are controllable from our xpc",
    "start": "789839",
    "end": "796240"
  },
  {
    "text": "request as indicated here let's focus on framework name",
    "start": "796240",
    "end": "803040"
  },
  {
    "text": "in this function it opens a file name in the form of framework name type of cpu user id and that maps",
    "start": "804320",
    "end": "811360"
  },
  {
    "text": "concatenated since framework name is controllable and there is no filter",
    "start": "811360",
    "end": "816959"
  },
  {
    "text": "we can make it open a file in any directory in our case we can create a file in the",
    "start": "816959",
    "end": "823120"
  },
  {
    "text": "sandbox directory and make the cbm server open this file",
    "start": "823120",
    "end": "829839"
  },
  {
    "text": "then cbm server wisdom maps file by calculating its size based on its data let's look at the",
    "start": "830000",
    "end": "837360"
  },
  {
    "text": "detail of the process here is the shield code for the binary",
    "start": "837360",
    "end": "842720"
  },
  {
    "text": "code above counter and offset are read from the file so it is controllable",
    "start": "842720",
    "end": "849760"
  },
  {
    "text": "then size is computed and it will resize the buffer then it will also read the remaining",
    "start": "849760",
    "end": "855519"
  },
  {
    "text": "part of the file as you can see here size can be smaller",
    "start": "855519",
    "end": "860560"
  },
  {
    "text": "smaller than 80. like both counter and offset can be zero then size will be 0 too but the actual",
    "start": "860560",
    "end": "868720"
  },
  {
    "text": "size to read underflows in this case making it possible to overflow the buffer",
    "start": "868720",
    "end": "874959"
  },
  {
    "text": "note that afrid also stops at the end of the file so we can also control the size to",
    "start": "874959",
    "end": "880320"
  },
  {
    "text": "overwrite to exploit this we used another handler",
    "start": "880320",
    "end": "886160"
  },
  {
    "text": "from message number seven which returns some mac power to the client on mac partition ipc mechanism in",
    "start": "886160",
    "end": "892320"
  },
  {
    "text": "macos and there is a kind of mac port named task port",
    "start": "892320",
    "end": "897360"
  },
  {
    "text": "which can be used to control a task well taskbar should not be exposed to",
    "start": "897360",
    "end": "902880"
  },
  {
    "text": "other process because it allows reading and writing writing memory and controlling the registers so it",
    "start": "902880",
    "end": "910560"
  },
  {
    "text": "basically means that arbitrary code execution is possible as highlighted here let's focus on the",
    "start": "910560",
    "end": "917440"
  },
  {
    "text": "vm part of the import variable that is loaded and copied to client",
    "start": "917440",
    "end": "924720"
  },
  {
    "text": "as you can see here the free import is loaded from an array located at heap so we can override the port",
    "start": "925519",
    "end": "932800"
  },
  {
    "text": "value so we first locate the valid port value",
    "start": "932800",
    "end": "938880"
  },
  {
    "text": "using other handler then we overwrite the port into the task",
    "start": "938880",
    "end": "944480"
  },
  {
    "text": "port and send a message 7 then the client will receive the task",
    "start": "944480",
    "end": "950880"
  },
  {
    "text": "port of cpm server and in this case the client is web process",
    "start": "950880",
    "end": "957040"
  },
  {
    "text": "then we can execute the arbitrary code in cpm server by allocating memory and modifying",
    "start": "957279",
    "end": "962560"
  },
  {
    "text": "stress registers",
    "start": "962560",
    "end": "965600"
  },
  {
    "text": "i will patch it this by checking if the real press of the math file matches the batches to the given pass",
    "start": "967600",
    "end": "975120"
  },
  {
    "text": "so arbitrary file open using past travel becomes impossible",
    "start": "975120",
    "end": "980720"
  },
  {
    "text": "also they added a check for side underflow",
    "start": "980720",
    "end": "985680"
  },
  {
    "text": "then we use another block to bypass the first time at protection",
    "start": "986720",
    "end": "993519"
  },
  {
    "text": "here's a reminder that there's a first time at protection which requires user interaction to open",
    "start": "994160",
    "end": "1000000"
  },
  {
    "text": "an application launching for the first time it weighs the user's confirmation to click open",
    "start": "1000000",
    "end": "1007680"
  },
  {
    "text": "the question is how is it implemented then let's see the process list it turns",
    "start": "1007680",
    "end": "1015120"
  },
  {
    "text": "out that the protection starts the application in the suspended state",
    "start": "1015120",
    "end": "1020639"
  },
  {
    "text": "what if it receives second signal which resumes the process",
    "start": "1020639",
    "end": "1026319"
  },
  {
    "text": "it was bypass it so we could open our application bundle",
    "start": "1029520",
    "end": "1035120"
  },
  {
    "text": "apple said they won't fix the bug here is some guess about the reasons",
    "start": "1035760",
    "end": "1041839"
  },
  {
    "text": "first to send a signal to an application we usually need to get code execution first",
    "start": "1041839",
    "end": "1049120"
  },
  {
    "text": "second kernel modification might be needed to support secure ui and it is not trivial to",
    "start": "1049120",
    "end": "1056000"
  },
  {
    "text": "change so if you have similar types of vulnerabilities you can bypass the first",
    "start": "1056000",
    "end": "1062400"
  },
  {
    "text": "time ad protection with this method",
    "start": "1062400",
    "end": "1067840"
  },
  {
    "text": "let me briefly summarize our sandbox escape chain first we achieved code execution in web",
    "start": "1068000",
    "end": "1074160"
  },
  {
    "text": "process using the first block and then we got code execution in cbm server as well",
    "start": "1074160",
    "end": "1079600"
  },
  {
    "text": "using box 3. in that process we created a symbol link",
    "start": "1079600",
    "end": "1084960"
  },
  {
    "text": "pointing to an arbitrary application and send the ipc call to safari to launch the application then we send",
    "start": "1084960",
    "end": "1092960"
  },
  {
    "text": "second to it to bypass the first time at protection",
    "start": "1092960",
    "end": "1098640"
  },
  {
    "text": "now we get code execution outside sandbox to get root public privilege we used",
    "start": "1100000",
    "end": "1107919"
  },
  {
    "text": "we used the waste condition block and cfpraff's demon",
    "start": "1107919",
    "end": "1112960"
  },
  {
    "text": "so what is cfr's demon it is an xpc service located at core foundation framework",
    "start": "1113440",
    "end": "1121600"
  },
  {
    "text": "we can read or write preference files by sending a request",
    "start": "1121600",
    "end": "1126720"
  },
  {
    "text": "there were several security issues including the famous block found by code colorist",
    "start": "1126720",
    "end": "1133679"
  },
  {
    "text": "and there is a wrapper function which sends the xpc request to the demo if a client calls this function with key",
    "start": "1134559",
    "end": "1141520"
  },
  {
    "text": "value pair and destination pass set then demo will process the request",
    "start": "1141520",
    "end": "1147280"
  },
  {
    "text": "first it will check if the client process can write to the file then it will try to create a directory",
    "start": "1147280",
    "end": "1154080"
  },
  {
    "text": "recursively if it does not exist in this case it is pass2 finally it will write a new",
    "start": "1154080",
    "end": "1162640"
  },
  {
    "text": "content content2.plist file with the new key and value pair edit",
    "start": "1162640",
    "end": "1169039"
  },
  {
    "text": "but how exactly it creates the directory first it will split the path into parts",
    "start": "1169600",
    "end": "1175360"
  },
  {
    "text": "using slash's delimiter then for each part it will create a directory using",
    "start": "1175360",
    "end": "1180720"
  },
  {
    "text": "kdir then it will change the permission and the owner of the folder all of these three functions",
    "start": "1180720",
    "end": "1188320"
  },
  {
    "text": "accepts the paths as their arguments but what if the created directory are",
    "start": "1188320",
    "end": "1194960"
  },
  {
    "text": "replaced between mkdir and chmod like we can replace the folder with a",
    "start": "1194960",
    "end": "1200559"
  },
  {
    "text": "symbol link instead then it will change the permission and owner of the pointed file instead",
    "start": "1200559",
    "end": "1208320"
  },
  {
    "text": "in this way we can make any files to be writable",
    "start": "1208320",
    "end": "1213679"
  },
  {
    "text": "at this point let's look at the command with set uitps named this user bin login",
    "start": "1213679",
    "end": "1221840"
  },
  {
    "text": "the login command authenticates a user based on policies specified at the file named etc pam.d and",
    "start": "1222400",
    "end": "1229600"
  },
  {
    "text": "login this file specifies paa module for authentication for example a module",
    "start": "1229600",
    "end": "1236640"
  },
  {
    "text": "named pam permit.so always permit access without any authentication",
    "start": "1236640",
    "end": "1243919"
  },
  {
    "text": "by overwriting this file we can change all pi modules into pam permit.so",
    "start": "1245840",
    "end": "1251679"
  },
  {
    "text": "after that just running login root command will give us a root privileged shell",
    "start": "1251679",
    "end": "1257200"
  },
  {
    "text": "without asking any password for the patch now they use file",
    "start": "1257200",
    "end": "1263679"
  },
  {
    "text": "descriptor instead to change the owner of the created folder",
    "start": "1263679",
    "end": "1269440"
  },
  {
    "text": "and this is the last block and use it in our chain we used it to execute code in kernel and",
    "start": "1270320",
    "end": "1277760"
  },
  {
    "text": "it is a race condition bug in keck slot",
    "start": "1277760",
    "end": "1282080"
  },
  {
    "text": "before diving into the block let me briefly talk about system integrated protection",
    "start": "1283520",
    "end": "1288880"
  },
  {
    "text": "in macos having a root privilege does not mean we can execute coding kernel",
    "start": "1288880",
    "end": "1294480"
  },
  {
    "text": "because even the root user cannot write two folders with the attribute",
    "start": "1294480",
    "end": "1300360"
  },
  {
    "text": "com.rootlist and there is other protections that prevent some prevents from operation",
    "start": "1300360",
    "end": "1309520"
  },
  {
    "text": "only specially entitled binaries can write to these folders for example there is a command named",
    "start": "1309520",
    "end": "1315520"
  },
  {
    "text": "keck slot and pr2 legacy which is the macos installer",
    "start": "1315520",
    "end": "1320799"
  },
  {
    "text": "and there are other programs with special entitlements to have this entitlement it needs to be",
    "start": "1320799",
    "end": "1326720"
  },
  {
    "text": "signed by apple this mitigation is added from os x",
    "start": "1326720",
    "end": "1332600"
  },
  {
    "text": "10.11 and it is called rootless",
    "start": "1332600",
    "end": "1338000"
  },
  {
    "text": "then let me briefly introduce about the kernel extension in backos megaos uses many kernel modules for",
    "start": "1339760",
    "end": "1346880"
  },
  {
    "text": "example there is psd sandbox and quarantine.text and it contains binaries and configuration",
    "start": "1346880",
    "end": "1353919"
  },
  {
    "text": "files all folders related are protected in sip",
    "start": "1353919",
    "end": "1359600"
  },
  {
    "text": "so the root user cannot directly write to the kernel modules",
    "start": "1359600",
    "end": "1365280"
  },
  {
    "text": "also we can only load signed kernel extensions using text load command",
    "start": "1365280",
    "end": "1370400"
  },
  {
    "text": "then let's look a look at this command",
    "start": "1370400",
    "end": "1375520"
  },
  {
    "text": "kexload command has a special entitlement to write a directory that is protected by sip so it can write to",
    "start": "1375520",
    "end": "1383679"
  },
  {
    "text": "cax directories this command loads the kernel extension after wifi",
    "start": "1383679",
    "end": "1389120"
  },
  {
    "text": "verifying code signature and the signature check happens only in user space",
    "start": "1389120",
    "end": "1395679"
  },
  {
    "text": "the problem is both the signature checking function and the function that loads the text",
    "start": "1395679",
    "end": "1401440"
  },
  {
    "text": "accepts the past of the folder therefore a race condition could possibly happen",
    "start": "1401440",
    "end": "1408960"
  },
  {
    "text": "to prevent this it uses a mitigation called station like it'll use read only copy in sip",
    "start": "1409679",
    "end": "1416640"
  },
  {
    "text": "protected folder instead for verifying and loading text first it will copy cache to sip protected",
    "start": "1416640",
    "end": "1425520"
  },
  {
    "text": "directory then it will verify and load the copy instead of using the original one",
    "start": "1425520",
    "end": "1432480"
  },
  {
    "text": "on attacker cannot modify text file between verifying and loading because of sip",
    "start": "1432480",
    "end": "1438400"
  },
  {
    "text": "so it means that we fail to exploit the race condition",
    "start": "1438400",
    "end": "1444720"
  },
  {
    "text": "but there are two problems in staging mechanism the actual steps are first it copies our",
    "start": "1444720",
    "end": "1451520"
  },
  {
    "text": "text file into sip protected folder named library stage extensions note that the",
    "start": "1451520",
    "end": "1457360"
  },
  {
    "text": "path is preserved except the base file name which is replaced into a temporary name with uuid",
    "start": "1457360",
    "end": "1463919"
  },
  {
    "text": "then it verifies the code signature if it fails it will list them if it succeeds it moves them into",
    "start": "1463919",
    "end": "1470960"
  },
  {
    "text": "library staged extensions tnpa.kext then it'll load the kernel extension",
    "start": "1470960",
    "end": "1478400"
  },
  {
    "text": "the first problem is it copies all of the files including the symbol link files second",
    "start": "1478400",
    "end": "1485039"
  },
  {
    "text": "problem is we can actually avoid cast load from deleting them by killing the process before step three",
    "start": "1485039",
    "end": "1493360"
  },
  {
    "text": "it is possible because both of the attacker process and cache load process are running in the same account which is root",
    "start": "1493360",
    "end": "1502158"
  },
  {
    "text": "so our plan is we place the symbol link under the text bundle then run the command",
    "start": "1502799",
    "end": "1509279"
  },
  {
    "text": "let's first copy them like this and we kill the process before it",
    "start": "1509279",
    "end": "1515039"
  },
  {
    "text": "deletes them now we have sip protected symbolic link file",
    "start": "1515039",
    "end": "1521679"
  },
  {
    "text": "then we run the command again and this time our text under the symbolic link",
    "start": "1522159",
    "end": "1529120"
  },
  {
    "text": "it will copy b that text under the folder name the symlink to the destination pass which is under",
    "start": "1529120",
    "end": "1535039"
  },
  {
    "text": "the simple link file by doing this we can get a state text",
    "start": "1535039",
    "end": "1540159"
  },
  {
    "text": "folder inside rightful folder and it is no longer protected by sip",
    "start": "1540159",
    "end": "1547360"
  },
  {
    "text": "and we used another technique to improve the chance to win the race we abused the sandbox feature",
    "start": "1548720",
    "end": "1555600"
  },
  {
    "text": "to intercept some activity of process first we can prevent deleting staged",
    "start": "1555600",
    "end": "1562080"
  },
  {
    "text": "files by terminating text load like we can stop set",
    "start": "1562080",
    "end": "1568158"
  },
  {
    "text": "like we can do that",
    "start": "1568799",
    "end": "1572960"
  },
  {
    "text": "we can do that by denying a link and send termination signal",
    "start": "1576799",
    "end": "1585840"
  },
  {
    "text": "second we can stop after every five bit to replace files after code sign check",
    "start": "1586159",
    "end": "1593039"
  },
  {
    "text": "we can send stop signal after reading specific file by using this rule",
    "start": "1593039",
    "end": "1598400"
  },
  {
    "text": "this technique is inspired by cold colorists as a hitb pro hitp presentation",
    "start": "1598400",
    "end": "1605120"
  },
  {
    "text": "in 2019 so by attacking race condition we could",
    "start": "1605120",
    "end": "1613200"
  },
  {
    "text": "load unsigned kernel extension for example we could use unrootly statcats from linux which",
    "start": "1613200",
    "end": "1619840"
  },
  {
    "text": "disables sap by modifying the kernel memory and the passports",
    "start": "1619840",
    "end": "1627440"
  },
  {
    "text": "they made another read-only copy in sap protected folder in different form in this time they",
    "start": "1627440",
    "end": "1633760"
  },
  {
    "text": "replaced left-most pass to random one to prevent this attack",
    "start": "1633760",
    "end": "1640720"
  },
  {
    "text": "and here is our demo video we first check the version of macos",
    "start": "1640720",
    "end": "1649200"
  },
  {
    "text": "and safari then we navigate to the attacker server",
    "start": "1650159",
    "end": "1659039"
  },
  {
    "text": "it first gets code execution and we escape sandbox by attacking safari and",
    "start": "1661279",
    "end": "1667840"
  },
  {
    "text": "then calculator is popped outside sandbox in the background it tries to escalate",
    "start": "1667840",
    "end": "1674320"
  },
  {
    "text": "its privilege to root then finally kernel",
    "start": "1674320",
    "end": "1683840"
  },
  {
    "text": "and it shows a terminal showing that sap became disabled by running code in kernel",
    "start": "1684960",
    "end": "1692799"
  },
  {
    "text": "so our conclusion is we discussed six vulnerabilities and their exploitation",
    "start": "1694000",
    "end": "1699279"
  },
  {
    "text": "used in 0.1 2020 to compromise safari with escalation of kernel privilege",
    "start": "1699279",
    "end": "1706240"
  },
  {
    "text": "they show difficulties in protecting a large and complicated system",
    "start": "1706240",
    "end": "1711440"
  },
  {
    "text": "we open source our exploit chain to foster further research",
    "start": "1711440",
    "end": "1716960"
  },
  {
    "text": "thank you for listening oh yeah it seems like we don't have any",
    "start": "1717039",
    "end": "1724240"
  },
  {
    "text": "questions yet",
    "start": "1724240",
    "end": "1739840"
  },
  {
    "text": "okay uh we got one question oh from chat uh can you drop your",
    "start": "1769120",
    "end": "1776080"
  },
  {
    "text": "link in here um okay oh i'll paste the link to the chat",
    "start": "1776080",
    "end": "1795840"
  },
  {
    "text": "um but another question project is",
    "start": "1806840",
    "end": "1813039"
  },
  {
    "text": "it is what was the motive for this research um actually uh",
    "start": "1814240",
    "end": "1822480"
  },
  {
    "text": "pontoon participating proton is one of the dream for a hacker so uh i think",
    "start": "1822480",
    "end": "1830559"
  },
  {
    "text": "that's the motivation um yeah the",
    "start": "1830559",
    "end": "1837440"
  },
  {
    "text": "the another question is i've looked at the github link provided and it seems the worker is not public yet whatever",
    "start": "1837440",
    "end": "1843679"
  },
  {
    "text": "um okay so uh i'm i'm talking with our teammates to",
    "start": "1843679",
    "end": "1850240"
  },
  {
    "text": "publish a published exploit chain so so i think it'll be public",
    "start": "1850240",
    "end": "1858960"
  },
  {
    "text": "after about some minutes later i guess i think it will be public public",
    "start": "1858960",
    "end": "1866240"
  },
  {
    "text": "uh during public today yes",
    "start": "1866240",
    "end": "1872559"
  },
  {
    "text": "okay oh uh do you think the move by apple to am 64 cpus will make",
    "start": "1875919",
    "end": "1883120"
  },
  {
    "text": "exploitation of this kind of chain or challenging um",
    "start": "1883120",
    "end": "1888799"
  },
  {
    "text": "yes i think so because uh when needed to make some pointer",
    "start": "1889200",
    "end": "1896000"
  },
  {
    "text": "differences work uh when using cbm when exploiting cbm server so",
    "start": "1896000",
    "end": "1904000"
  },
  {
    "text": "if if some medications like pointer authenticate codes is applied then i think the",
    "start": "1904000",
    "end": "1910799"
  },
  {
    "text": "exploitation will be harder um",
    "start": "1910799",
    "end": "1916240"
  },
  {
    "text": "and the question another question is what prompted you look at the cbm server",
    "start": "1916240",
    "end": "1922799"
  },
  {
    "text": "actually we looked at uh many tablets and sim server is one of them",
    "start": "1922799",
    "end": "1931519"
  },
  {
    "text": "and we found the vulnerability in separate server and we promptly promptly to exploit it and it'll success",
    "start": "1931519",
    "end": "1940158"
  },
  {
    "text": "so at first we we try to look at xpc and mig demos because there were",
    "start": "1943039",
    "end": "1949600"
  },
  {
    "text": "some existing research around that so yeah",
    "start": "1949600",
    "end": "1955440"
  },
  {
    "text": "i think this can be answered",
    "start": "1956799",
    "end": "1963840"
  },
  {
    "text": "um okay ah i missed a question so can you talk about how you go through",
    "start": "1964960",
    "end": "1972159"
  },
  {
    "text": "manual finding about like what you what do you do to get started um yes so",
    "start": "1972159",
    "end": "1980080"
  },
  {
    "text": "first we are listed or also open the demos that is exposed to vendor",
    "start": "1980080",
    "end": "1985919"
  },
  {
    "text": "process and then we and then we uh actually made a foster to",
    "start": "1985919",
    "end": "1994960"
  },
  {
    "text": "uh nightly let's just send some requests to that but it does not",
    "start": "1994960",
    "end": "2001200"
  },
  {
    "text": "uh it does not work well so i try to examine each demo to",
    "start": "2001200",
    "end": "2007679"
  },
  {
    "text": "figure out our photo is running correctly and it related to me to reverse your",
    "start": "2007679",
    "end": "2014159"
  },
  {
    "text": "engineer each demo in more detail",
    "start": "2014159",
    "end": "2019840"
  },
  {
    "text": "um okay uh we got another question i haven't tested these books on iphone do they",
    "start": "2057919",
    "end": "2062960"
  },
  {
    "text": "work uh actually uh we couldn't because we don't have a debugging environment for iphone yet",
    "start": "2062960",
    "end": "2070560"
  },
  {
    "text": "uh but uh i saw some advisory on ios acknowledging our book",
    "start": "2070560",
    "end": "2077118"
  },
  {
    "text": "so i think something would work but i think the exploit chain would be",
    "start": "2077119",
    "end": "2082398"
  },
  {
    "text": "completely different i guess",
    "start": "2082399",
    "end": "2089838"
  },
  {
    "text": "and thank you for the appreciate",
    "start": "2105520",
    "end": "2110560"
  },
  {
    "text": "appreciation i'm glad that you enjoyed our talk",
    "start": "2114839",
    "end": "2131838"
  },
  {
    "text": "uh and affordable link uh i'm actually finding the location of our",
    "start": "2196800",
    "end": "2202560"
  },
  {
    "text": "site so um i think the weapon will be also public in a few minutes so",
    "start": "2202560",
    "end": "2209440"
  },
  {
    "text": "i think we can put the link after making it public just for a moment",
    "start": "2209440",
    "end": "2218160"
  },
  {
    "text": "thank you",
    "start": "2218160",
    "end": "2229838"
  },
  {
    "text": "so",
    "start": "2254839",
    "end": "2257839"
  },
  {
    "text": "uh",
    "start": "2282839",
    "end": "2285839"
  },
  {
    "text": "so",
    "start": "2296839",
    "end": "2299839"
  },
  {
    "text": "um okay i've i found a link so i'll post it into the chat",
    "start": "2334079",
    "end": "2340560"
  },
  {
    "text": "uh please note that this is not made and made in public uh we're",
    "start": "2340560",
    "end": "2346640"
  },
  {
    "text": "we're still cleaning up some",
    "start": "2346640",
    "end": "2355838"
  },
  {
    "text": "okay the question is uh what resources do you recommend for research just getting started with microwaves on now",
    "start": "2361599",
    "end": "2367920"
  },
  {
    "text": "actually uh for oh for all areas of research i i'd recommend",
    "start": "2367920",
    "end": "2373200"
  },
  {
    "text": "uh uh googling for some previous works on the direct",
    "start": "2373200",
    "end": "2378560"
  },
  {
    "text": "that area um i think we are one of the time uh but",
    "start": "2378560",
    "end": "2385040"
  },
  {
    "text": "specifically uh uh we've saw some researches uh known by",
    "start": "2385040",
    "end": "2391680"
  },
  {
    "text": "phonaks and some articles in objective and yeah and there's",
    "start": "2391680",
    "end": "2398960"
  },
  {
    "text": "much uh there's many other resources so i think you can",
    "start": "2398960",
    "end": "2404160"
  },
  {
    "text": "you can read that",
    "start": "2404240",
    "end": "2411839"
  },
  {
    "text": "okay oh oh thank you thanks for listening our presentation",
    "start": "2430079",
    "end": "2437760"
  }
]