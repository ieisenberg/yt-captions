[
  {
    "text": "hello thank you for being here we are going to talk about remote shells and",
    "start": "2919",
    "end": "8160"
  },
  {
    "text": "edge routers not a good combination so let's start with a brief",
    "start": "8160",
    "end": "13679"
  },
  {
    "text": "introduction about ourselves so we are Steinlav and Franchesco we are security researchers at Forscout Vera Labs where",
    "start": "13679",
    "end": "21279"
  },
  {
    "text": "we do vulnerability research and some fat research so I will start with the motivation and",
    "start": "21279",
    "end": "27439"
  },
  {
    "text": "background part then I will let science lab present you all our findings so we have been looking at edge",
    "start": "27439",
    "end": "34160"
  },
  {
    "text": "routers for a while and these devices are sitting on the edge of the network",
    "start": "34160",
    "end": "39520"
  },
  {
    "text": "and they give and they face internet and give access to the corporate network and",
    "start": "39520",
    "end": "45040"
  },
  {
    "text": "last year we did some research on Sarah wireless cellular gateways where we found 21 vulnerabilities and a critical",
    "start": "45040",
    "end": "52559"
  },
  {
    "text": "remote code execution we also looked at firmware of five different IoT edge",
    "start": "52559",
    "end": "60000"
  },
  {
    "text": "routers where we found many issues as well such as lack of binary hardening",
    "start": "60000",
    "end": "65040"
  },
  {
    "text": "outdated software components with known vulnerabilities custom security patches",
    "start": "65040",
    "end": "70240"
  },
  {
    "text": "without any kind of documentation and again the uses of default credentials",
    "start": "70240",
    "end": "75600"
  },
  {
    "text": "one of the main reasons we decided to look at this topic is that threat actors",
    "start": "75600",
    "end": "80960"
  },
  {
    "text": "are really interested in exploiting these kind of devices since they are the perfect entry points into business",
    "start": "80960",
    "end": "87880"
  },
  {
    "text": "networks indeed attackers can do any kind of malicious activity often without",
    "start": "87880",
    "end": "93200"
  },
  {
    "text": "being detected so this year we decided to select a",
    "start": "93200",
    "end": "98400"
  },
  {
    "text": "vendor of edge routers that seems like a yeah a bulletproof target since it has a",
    "start": "98400",
    "end": "105600"
  },
  {
    "text": "lot of past research and this vendor is Drche so they have more than four years",
    "start": "105600",
    "end": "111360"
  },
  {
    "text": "of active patching and they uh frequently publish security advisories",
    "start": "111360",
    "end": "116960"
  },
  {
    "text": "there is also a proven interest from um from tech doctors despite all this",
    "start": "116960",
    "end": "122799"
  },
  {
    "text": "research and this exploitation by tactors we were still able to route a device through an unauthenticated remote",
    "start": "122799",
    "end": "129599"
  },
  {
    "text": "code execution via a textbook buffer flow this happened again and it took us",
    "start": "129599",
    "end": "134959"
  },
  {
    "text": "about the amount of work but yeah what is Draex so it's a",
    "start": "134959",
    "end": "141120"
  },
  {
    "text": "well-known Taiwanese manufacturer of network devices it was founded in 19",
    "start": "141120",
    "end": "146400"
  },
  {
    "text": "1997 so it has a quite a long story and they sell devices from simple small",
    "start": "146400",
    "end": "152000"
  },
  {
    "text": "office home routers to complex VPN concentrators used by businesses and",
    "start": "152000",
    "end": "157519"
  },
  {
    "text": "these are some screenshots we took from their website where they claim that their devices are secure so they run a",
    "start": "157519",
    "end": "165360"
  },
  {
    "text": "proprietary enclosed operating system they are featurerich they provide VPN",
    "start": "165360",
    "end": "171040"
  },
  {
    "text": "firewall content filtering and they are ISP approved indeed there are many internet service providers that use",
    "start": "171040",
    "end": "178160"
  },
  {
    "text": "these devices there is also this success story about the cross cross nation healthcare system in Saudi Arabia that",
    "start": "178160",
    "end": "185200"
  },
  {
    "text": "decided to adopt their solutions so uh we have already mentioned that",
    "start": "185200",
    "end": "190480"
  },
  {
    "text": "there's a lot of research indeed Drytech has published 13 security advisories in",
    "start": "190480",
    "end": "196879"
  },
  {
    "text": "the last six years with over 100 historical CVS and typically when a",
    "start": "196879",
    "end": "202400"
  },
  {
    "text": "vendor is transparent about vulnerabilities and publishes them quickly it's a good sign of a mature",
    "start": "202400",
    "end": "209760"
  },
  {
    "text": "security team however new research and new findings keep popping up over the",
    "start": "209760",
    "end": "215519"
  },
  {
    "text": "years as an example there were recently two interesting talks targeting Dre so",
    "start": "215519",
    "end": "222480"
  },
  {
    "text": "one by Philip Loretta where he found a critical remote call execution a couple of years ago and another talk at Defcon",
    "start": "222480",
    "end": "230640"
  },
  {
    "text": "besides researchers Drech is really popular among threat actors as well so",
    "start": "230640",
    "end": "236879"
  },
  {
    "text": "indeed in 2018 that doctor actors changed DNS setting on DEC routers using",
    "start": "236879",
    "end": "242319"
  },
  {
    "text": "a zero day vulnerability and a OS common injection was exploited by a Chinese AP",
    "start": "242319",
    "end": "249280"
  },
  {
    "text": "as a part of a malware campaign in 2022 23 some endoflife drytech routers were",
    "start": "249280",
    "end": "257280"
  },
  {
    "text": "targeted by a Chinese malware and another report suggested that the goal was reconnaissance against the US",
    "start": "257280",
    "end": "264080"
  },
  {
    "text": "department of defense around the same time dry devices were targeted by",
    "start": "264080",
    "end": "270000"
  },
  {
    "text": "another tech doctor known as V typhoon and very recently before the publication",
    "start": "270000",
    "end": "275360"
  },
  {
    "text": "of our research so in September the FBI announced it had take down a botnet",
    "start": "275360",
    "end": "281280"
  },
  {
    "text": "exploiting three historical CVS so there is also another valid",
    "start": "281280",
    "end": "287120"
  },
  {
    "text": "reason why thactors are targeting dry so look at the numbers where when we did",
    "start": "287120",
    "end": "294080"
  },
  {
    "text": "our search there were roughly 700,000 exposed drytech devices on Shoddon with",
    "start": "294080",
    "end": "300400"
  },
  {
    "text": "over 400,000 exposing their management interface on the web even though um dry",
    "start": "300400",
    "end": "306800"
  },
  {
    "text": "techch discouraged to expose it for obvious reasons and in any case you can see that",
    "start": "306800",
    "end": "312960"
  },
  {
    "text": "the vast majority of these devices is located in Europe especially in UK then",
    "start": "312960",
    "end": "318880"
  },
  {
    "text": "uh Asia and Australia so the problem is that many of these devices may be",
    "start": "318880",
    "end": "324919"
  },
  {
    "text": "vulnerable and this in this slide you can see that many internet service providers are are using dre devices and",
    "start": "324919",
    "end": "332960"
  },
  {
    "text": "this is an interesting uh analysis done by census on our research where they try",
    "start": "332960",
    "end": "338320"
  },
  {
    "text": "to quantify the impact on internet service providers and we can see that the ISP that has the largest number of",
    "start": "338320",
    "end": "345680"
  },
  {
    "text": "devices is in Taiwan while in Europe is in UK",
    "start": "345680",
    "end": "351479"
  },
  {
    "text": "okay so uh we have seen many reasons to target uh Dratech and we typically do",
    "start": "351479",
    "end": "359759"
  },
  {
    "text": "research on devices and software overlooked by other researchers so that",
    "start": "359759",
    "end": "364960"
  },
  {
    "text": "yeah that that have fewer competitors in this way we can maybe we find more vulnerabilities and",
    "start": "364960",
    "end": "372319"
  },
  {
    "text": "in general have a better return on investment in this case we have seen that several critical RCS and common",
    "start": "372319",
    "end": "380319"
  },
  {
    "text": "injection have been found in recent years and that a lot of patching has",
    "start": "380319",
    "end": "385440"
  },
  {
    "text": "been already done so we wondered if we could find more issues and whe and",
    "start": "385440",
    "end": "390479"
  },
  {
    "text": "whether a threat actor would still be firing at the same target so once we decided on the on the",
    "start": "390479",
    "end": "398479"
  },
  {
    "text": "vendor we had to select the proper device and drytech offers different kind of devices they really have many models",
    "start": "398479",
    "end": "405680"
  },
  {
    "text": "from simple bare metal routers that run realtime operating system to complex and",
    "start": "405680",
    "end": "412000"
  },
  {
    "text": "powerful security appliances such as the VPN concentrators and nowadays uh modern",
    "start": "412000",
    "end": "418560"
  },
  {
    "text": "routers are basically mini servers so they have lots of hardware source there",
    "start": "418560",
    "end": "424160"
  },
  {
    "text": "are Linux there they have virtualization support they often support containerization through Docker as well",
    "start": "424160",
    "end": "431440"
  },
  {
    "text": "the problem is that many of these devices are poorly hardened they have default software that enables living on",
    "start": "431440",
    "end": "438560"
  },
  {
    "text": "the land techniques and these virtual machines can be exploited if they are poorly implemented poorly designed and",
    "start": "438560",
    "end": "445560"
  },
  {
    "text": "implemented indeed uh a vulnerability in a in a complex and popular device offers",
    "start": "445560",
    "end": "451599"
  },
  {
    "text": "a larger return investment for tractors but for security researchers as well",
    "start": "451599",
    "end": "458240"
  },
  {
    "text": "so typically a router is a simple hardware hardware box that runs um some",
    "start": "458240",
    "end": "464080"
  },
  {
    "text": "kind of embedded Linux distributions with custom binaries and scripts to implement more functionalities and",
    "start": "464080",
    "end": "471639"
  },
  {
    "text": "features and this is also called router OS you probably know",
    "start": "471639",
    "end": "477000"
  },
  {
    "text": "OpenWRT the problem again is that everything often runs as root and you can imagine that an exploit on these",
    "start": "477000",
    "end": "484080"
  },
  {
    "text": "kind of devices could be really devastating a new generation of routers has started",
    "start": "484080",
    "end": "491039"
  },
  {
    "text": "to has started using virtualization since 2010 for example Cisco",
    "start": "491039",
    "end": "497080"
  },
  {
    "text": "routers and this led to this so-called complex routers such as the Vigor 3910",
    "start": "497080",
    "end": "503280"
  },
  {
    "text": "which we selected as a target and this model runs Ubuntu Linux 64-bit as a host",
    "start": "503280",
    "end": "510720"
  },
  {
    "text": "then all Drech devices run a proprietary operating system called Dre OS but on",
    "start": "510720",
    "end": "517279"
  },
  {
    "text": "more complex VRO devices Drey OS runs in a virtual machine while the O is still",
    "start": "517279",
    "end": "525160"
  },
  {
    "text": "Ubuntu then virtualization is supposed to add a layer of security and to ensure",
    "start": "525160",
    "end": "530560"
  },
  {
    "text": "reliability since it can restart really quickly after error conditions on top of",
    "start": "530560",
    "end": "537560"
  },
  {
    "text": "that some Vigor devices can run um in",
    "start": "537560",
    "end": "542880"
  },
  {
    "text": "detection system such as surata and other software through docker to achieve",
    "start": "542880",
    "end": "549040"
  },
  {
    "text": "greater extensibility so basically this looks really great but we wonder how this is",
    "start": "549040",
    "end": "555839"
  },
  {
    "text": "actually implemented so now let explain you how this is implemented and all the findings",
    "start": "555839",
    "end": "564000"
  },
  {
    "text": "thank you Franchesco so I'm going to take you through the technical part of this talk and before I proceed I just",
    "start": "564000",
    "end": "569760"
  },
  {
    "text": "want to say that uh all of the conclusions or the errors are our own and these are only our",
    "start": "569760",
    "end": "576360"
  },
  {
    "text": "opinions right so this is just an overview of what we found and in total we we found 14 different vulnerabilities",
    "start": "576360",
    "end": "583360"
  },
  {
    "text": "which belong to different types and classes uh also commonly known as unforgivable vulnerabilities uh goes",
    "start": "583360",
    "end": "590399"
  },
  {
    "text": "from the paper by Steve Christie from Mitra uh published in 2007 where he",
    "start": "590399",
    "end": "595920"
  },
  {
    "text": "explains typical software flaws and we we found all kinds of stuff like weak",
    "start": "595920",
    "end": "601680"
  },
  {
    "text": "encryption credential reuse uh copy paste code which led to to serious issues like uh yeah bad input",
    "start": "601680",
    "end": "608560"
  },
  {
    "text": "sanitization propagated all over the the place and plenty of buffer overflows and",
    "start": "608560",
    "end": "614399"
  },
  {
    "text": "on the right uh yeah probably you cannot read it but it's an excerpt from the same paper about unforgivable",
    "start": "614399",
    "end": "619839"
  },
  {
    "text": "vulnerabilities and here uh it's sort of a historical model that shows a typical",
    "start": "619839",
    "end": "625279"
  },
  {
    "text": "vulnerability maturity of a product in terms of the recurrent vulnerability so",
    "start": "625279",
    "end": "631120"
  },
  {
    "text": "from one means the the most obvious one and seven most sophisticated one and B",
    "start": "631120",
    "end": "637120"
  },
  {
    "text": "based from what we find we actually classified this one to be at the phase three only so it's pretty immature",
    "start": "637120",
    "end": "644320"
  },
  {
    "text": "unfortunately um yeah so before we started the",
    "start": "644320",
    "end": "649680"
  },
  {
    "text": "research we needed to to basically find something some target um in this case we",
    "start": "649680",
    "end": "655600"
  },
  {
    "text": "decided to go directly with reverse engineering the firmware uh which is available on the vendor website",
    "start": "655600",
    "end": "662240"
  },
  {
    "text": "unfortunately as they always do they encrypt it and they add some fancy packaging all over the place uh this",
    "start": "662240",
    "end": "669600"
  },
  {
    "text": "time we just decided to follow the past research and um yeah uh basically there",
    "start": "669600",
    "end": "676079"
  },
  {
    "text": "is information on how to cry the firmware uh available for some time and in this case no keys or algorithms were",
    "start": "676079",
    "end": "684000"
  },
  {
    "text": "changed so we just were able to to create our own decryptor and and get the clear text firmware image for one of the",
    "start": "684000",
    "end": "691279"
  },
  {
    "text": "model which is 3910 at the time for the lab we could only buy uh 3912 which is more advanced more",
    "start": "691279",
    "end": "699680"
  },
  {
    "text": "modern model unfortunately for this one something has been changed so we could not easily decrypt it yet but we were",
    "start": "699680",
    "end": "708000"
  },
  {
    "text": "able to do it using one of the vulnerabilities which I will show you later so the the router operating system",
    "start": "708000",
    "end": "715680"
  },
  {
    "text": "is huge actually it has a lot of components so we had to start somewhere and naturally we decided to start with",
    "start": "715680",
    "end": "722800"
  },
  {
    "text": "the most obvious component which is web UI this is the the admin interface uh immediately when we started",
    "start": "722800",
    "end": "730000"
  },
  {
    "text": "we realized there is already an issue because there's a single set of credentials uh for everything for the",
    "start": "730000",
    "end": "736880"
  },
  {
    "text": "web UI itself for all all the services you have running on the ports and even",
    "start": "736880",
    "end": "742079"
  },
  {
    "text": "for the host operating system it's the same admin credentials here so very nice",
    "start": "742079",
    "end": "747920"
  },
  {
    "text": "uh a few words about the web UI uh it's a standard web admin interface you can",
    "start": "747920",
    "end": "753760"
  },
  {
    "text": "see the screenshots here it's used to to configure and manage the device remotely",
    "start": "753760",
    "end": "759760"
  },
  {
    "text": "the the manual for the device explicitly state that you must not expose it to the internet but we also the the previous",
    "start": "759760",
    "end": "766800"
  },
  {
    "text": "slide with 400,000 devices so naturally people do not really follow that advice",
    "start": "766800",
    "end": "773040"
  },
  {
    "text": "and one of the critical issues discovered in the recent past for dry text was had to do with this login form",
    "start": "773040",
    "end": "780320"
  },
  {
    "text": "here so was a buffer overflow with the I think with the login or the password field itself so yeah we decided to have",
    "start": "780320",
    "end": "787839"
  },
  {
    "text": "a proper look at this one again immediately when we looked at the",
    "start": "787839",
    "end": "793360"
  },
  {
    "text": "web UI itself so at the client side we found some uh patterns of input validation issues and uh on the left",
    "start": "793360",
    "end": "801279"
  },
  {
    "text": "upper corner you can see a form that you can fill in and basically this is a way to customize a welcome message for the",
    "start": "801279",
    "end": "808639"
  },
  {
    "text": "router so basically every user that will log in will see something else and there",
    "start": "808639",
    "end": "814000"
  },
  {
    "text": "hasn't been a vulnerability in the past about this so you could actually add JavaScript code code and it will be",
    "start": "814000",
    "end": "819600"
  },
  {
    "text": "added to the web page no questions asked they have added a function that sanitizes the input but unfortunately",
    "start": "819600",
    "end": "826560"
  },
  {
    "text": "they did not consider all the possibilities of including JavaScript code which we took the advantage of and",
    "start": "826560",
    "end": "833279"
  },
  {
    "text": "in this case we could get uh stored cross scripting easily another example",
    "start": "833279",
    "end": "838959"
  },
  {
    "text": "you can see at the bottom in this case we could inject JavaScript code directly in one of the uh form parameters and",
    "start": "838959",
    "end": "845839"
  },
  {
    "text": "this particular parameter is their implementation of the CSRF token which",
    "start": "845839",
    "end": "851440"
  },
  {
    "text": "is a little bit ironic but yeah so we we found a bunch of other uh client side",
    "start": "851440",
    "end": "857760"
  },
  {
    "text": "issues and then we moved on to just looking how the authentication works so",
    "start": "857760",
    "end": "863199"
  },
  {
    "text": "as I mentioned the same set of credentials are used across the entire system so that's that must be important",
    "start": "863199",
    "end": "869279"
  },
  {
    "text": "and must be really hardened unfortunately they don't really enforce",
    "start": "869279",
    "end": "874720"
  },
  {
    "text": "transport layer security which is the HTTPS protocol so normally when you just navigate to the router using the IP",
    "start": "874720",
    "end": "881680"
  },
  {
    "text": "address or domain name you'll be using HTTP by default and this is problematic",
    "start": "881680",
    "end": "887040"
  },
  {
    "text": "because when you actually log in the all the credentials are transmitted practically in clear text so it's uh B",
    "start": "887040",
    "end": "893680"
  },
  {
    "text": "64 encoded and URL encoded but yeah you can reverse that and you can read the credentials so technically if anybody",
    "start": "893680",
    "end": "900720"
  },
  {
    "text": "can sniff your network traffic yeah they can own your device easily still we can",
    "start": "900720",
    "end": "907120"
  },
  {
    "text": "easily fix that by using HTTPS and that can be configured through the web UI itself so everything should be fine",
    "start": "907120",
    "end": "914839"
  },
  {
    "text": "right uh the devil as they say is in the details um so the TLS is only secure",
    "start": "914839",
    "end": "920720"
  },
  {
    "text": "where you have enough entropy to generate private keys that will be exchanged by client at the server and",
    "start": "920720",
    "end": "927920"
  },
  {
    "text": "there was a very nice paper from Aliabasi and Yosuzo a few years ago and they basically show how difficult it is",
    "start": "927920",
    "end": "935360"
  },
  {
    "text": "to have a proper source of entropy on embedded systems for that reason there are different trade-offs one of them is",
    "start": "935360",
    "end": "942480"
  },
  {
    "text": "a mechanism called pseudo random number generator which is a deterministic",
    "start": "942480",
    "end": "947600"
  },
  {
    "text": "algorithm that given a sufficiently random input as a seed it will produce a",
    "start": "947600",
    "end": "953519"
  },
  {
    "text": "random enough output which can be then used as a key material uh in the nutshell but then if you can guess the",
    "start": "953519",
    "end": "960160"
  },
  {
    "text": "seed then you can also determine the algorithm and you can guess the output",
    "start": "960160",
    "end": "965199"
  },
  {
    "text": "and that basically means you can also re reconstruct the private keys and break the TLS address encryption and that",
    "start": "965199",
    "end": "972399"
  },
  {
    "text": "becomes a problem if your credentials are transmitted like this and if you look at how it was",
    "start": "972399",
    "end": "979680"
  },
  {
    "text": "actually implemented uh we found that they are using OpenSSL library but they are using a very old",
    "start": "979680",
    "end": "986320"
  },
  {
    "text": "duplicated API which is not considered to be secure anymore moreover the PRNG",
    "start": "986320",
    "end": "992399"
  },
  {
    "text": "was indeed seated with a random string but not the one that you would normally expect so for those of you who is not",
    "start": "992399",
    "end": "999680"
  },
  {
    "text": "familiar with OpenSSL or or uh yeah the way the PRNG works this is basically the",
    "start": "999680",
    "end": "1007680"
  },
  {
    "text": "the equivalent implementation that I found on XKCD website uh so yeah you can technically",
    "start": "1007680",
    "end": "1014399"
  },
  {
    "text": "reconstruct private keys and steal uh steal the password but then this is all",
    "start": "1014399",
    "end": "1020480"
  },
  {
    "text": "theory uh yeah let's look for the buffer overflows and we we found lots and lots",
    "start": "1020480",
    "end": "1025678"
  },
  {
    "text": "of them uh so the web UI itself contains a lot of pages which are implemented as a C functions um because it's a binary",
    "start": "1025679",
    "end": "1034160"
  },
  {
    "text": "and almost every of them had a buffer overflow of some sorts uh at some point in time we decided to stop documenting",
    "start": "1034160",
    "end": "1040798"
  },
  {
    "text": "them because we're too many so we had to divide them into classes and uh yeah the",
    "start": "1040799",
    "end": "1045918"
  },
  {
    "text": "most common one you can see here it's basically a web form variable that comes",
    "start": "1045919",
    "end": "1052080"
  },
  {
    "text": "from the the get request and then it just copied being copied verbatim into internal data structure without checking",
    "start": "1052080",
    "end": "1058960"
  },
  {
    "text": "its size uh the other one was a bit more complex it had to do with unexpected",
    "start": "1058960",
    "end": "1064400"
  },
  {
    "text": "sign extension or integer overflows when calculating the size of the copy and",
    "start": "1064400",
    "end": "1069840"
  },
  {
    "text": "then our favorite shotgun parsing where we basically have uh a huge piece of code that parses large data structures",
    "start": "1069840",
    "end": "1076799"
  },
  {
    "text": "coming as an input and then populating some internal data structure without validating the the input in the first",
    "start": "1076799",
    "end": "1083360"
  },
  {
    "text": "place and with those thing we already saw you could have different kinds of impact you could uh get semicontrolled",
    "start": "1083360",
    "end": "1091360"
  },
  {
    "text": "rights into different program sections uh mostly BSS where all your static",
    "start": "1091360",
    "end": "1096799"
  },
  {
    "text": "variables are located um you could get different kinds of denial of service",
    "start": "1096799",
    "end": "1101919"
  },
  {
    "text": "because this thing is is virtualized if something is crashed it restarts in a matter of couple of seconds but if you",
    "start": "1101919",
    "end": "1108640"
  },
  {
    "text": "override the entire program through a huge out of bounds write then it will not be able to restart and somebody has",
    "start": "1108640",
    "end": "1115360"
  },
  {
    "text": "to pull the plug physically which can be a problem if the device is located somewhere in a remote location so you",
    "start": "1115360",
    "end": "1122720"
  },
  {
    "text": "have to actually go there to do this and of course we identified some of them as potential remote code execution but we",
    "start": "1122720",
    "end": "1129280"
  },
  {
    "text": "had to understand if it's really the case uh at this point we were still",
    "start": "1129280",
    "end": "1135600"
  },
  {
    "text": "quite early in our research uh for this target so we had to think what we will",
    "start": "1135600",
    "end": "1141520"
  },
  {
    "text": "do next uh we only had realistically only a bunch of buffer overflows and",
    "start": "1141520",
    "end": "1147280"
  },
  {
    "text": "still a lot of other components to explore like the the VPN functionality different protocols it supports and",
    "start": "1147280",
    "end": "1153679"
  },
  {
    "text": "other things at the same time yeah u in these kind of devices buffer overflows",
    "start": "1153679",
    "end": "1159840"
  },
  {
    "text": "are difficult to exploit and here's my favorite citation from Stack Overflow where they say basically yeah tough luck",
    "start": "1159840",
    "end": "1166799"
  },
  {
    "text": "doing that in the in the virtualized environment uh but at the same time we are researchers and the threat actors",
    "start": "1166799",
    "end": "1173200"
  },
  {
    "text": "they don't really care so they are indeed interested in uh novel vulnerabilities and novel ways to attack",
    "start": "1173200",
    "end": "1179840"
  },
  {
    "text": "things but they will be fine with the buffer overflow probably um so we we",
    "start": "1179840",
    "end": "1185600"
  },
  {
    "text": "wanted to see if at this point basically we can mess this thing up with what we",
    "start": "1185600",
    "end": "1190640"
  },
  {
    "text": "already have and that that has become become our new research question so to speak and next I would like to show you",
    "start": "1190640",
    "end": "1198880"
  },
  {
    "text": "one of the vulnerabilities that we use to do exactly that so this one is a classical stack",
    "start": "1198880",
    "end": "1206880"
  },
  {
    "text": "buffer overflow and it has to do with the with the URL itself uh most of these",
    "start": "1206880",
    "end": "1213840"
  },
  {
    "text": "web pages within web UI call a special function that parses the the query string parameters and as a refresher uh",
    "start": "1213840",
    "end": "1221600"
  },
  {
    "text": "you can see query string an example of a query string at the bottom of the slide it's basically the portion of the URL",
    "start": "1221600",
    "end": "1227440"
  },
  {
    "text": "that comes after the question mark and it's used to pass different parameters and arguments into a web application so",
    "start": "1227440",
    "end": "1234799"
  },
  {
    "text": "it has keys values and those are separated by the uh equal sign and",
    "start": "1234799",
    "end": "1239840"
  },
  {
    "text": "individual parameters are separated by the amperand so in this case uh there was a",
    "start": "1239840",
    "end": "1246159"
  },
  {
    "text": "destination buffer allocated on the stack that should hold pointers to all of these different parameters as they",
    "start": "1246159",
    "end": "1253360"
  },
  {
    "text": "arrive as they are being parsed and of course because it's on the stack it has fixed length and uh yeah classical",
    "start": "1253360",
    "end": "1260720"
  },
  {
    "text": "problem nobody checked if it can actually hold all the parameters provided by by the user so in this case",
    "start": "1260720",
    "end": "1268720"
  },
  {
    "text": "because every web page is using that logic you can trigger it by navigating",
    "start": "1268720",
    "end": "1274240"
  },
  {
    "text": "to any of the 100 pages available on the device and in this case you can uh",
    "start": "1274240",
    "end": "1280240"
  },
  {
    "text": "basically have indirect arbitrary right into the stack and here I will just",
    "start": "1280240",
    "end": "1285280"
  },
  {
    "text": "explain why I said that uh you can see on the right a very schematic description of this st uh sorry it's a",
    "start": "1285280",
    "end": "1293520"
  },
  {
    "text": "schematic depiction of the stack uh just when the overflow might happen and you",
    "start": "1293520",
    "end": "1299280"
  },
  {
    "text": "can see there's a query string buffer uh somewhere on the stack on the right and",
    "start": "1299280",
    "end": "1304799"
  },
  {
    "text": "below we have the return address and basically as the query string is parsed",
    "start": "1304799",
    "end": "1309840"
  },
  {
    "text": "um for each element such as the key and the value you will have uh a buffer",
    "start": "1309840",
    "end": "1315360"
  },
  {
    "text": "allocated on the hip so it will be somewhere there but the pointer to these elements will be actually added here on",
    "start": "1315360",
    "end": "1322320"
  },
  {
    "text": "the stack into this query buffer so basically it's a array of pointers to these elements and uh as you can see",
    "start": "1322320",
    "end": "1329039"
  },
  {
    "text": "here if you add enough of these pointers you will eventually override other",
    "start": "1329039",
    "end": "1334159"
  },
  {
    "text": "variables some other stuff and the return address and if it's not something meaningful then it will crash",
    "start": "1334159",
    "end": "1342159"
  },
  {
    "text": "uh and uh it may look different uh or weird to some of you and that's because it's actually RM64 system but it runs in",
    "start": "1342159",
    "end": "1349919"
  },
  {
    "text": "32bit mode so in this case you'll have 64 uh bit code but uh the address to to",
    "start": "1349919",
    "end": "1356799"
  },
  {
    "text": "of the function or the pointers will be only four bytes right so once we we found this",
    "start": "1356799",
    "end": "1364640"
  },
  {
    "text": "very nice write primitive of course we had doubts if we can exploit it so we looked under the hood to see how this",
    "start": "1364640",
    "end": "1371200"
  },
  {
    "text": "drivers is actually run and what it looks like uh turns out the the entire operating",
    "start": "1371200",
    "end": "1377280"
  },
  {
    "text": "system is just one binary that is the literally old iOS including the web UI",
    "start": "1377280",
    "end": "1383679"
  },
  {
    "text": "that we just saw it's uh run through uh modified chemo executables and those",
    "start": "1383679",
    "end": "1391360"
  },
  {
    "text": "those binaries could be also interested interesting target for the research but we didn't go into that direction yet um",
    "start": "1391360",
    "end": "1398799"
  },
  {
    "text": "as far as binary protection go uh there is no data execution prevention which",
    "start": "1398799",
    "end": "1404640"
  },
  {
    "text": "means we can directly inject shell code into the stack or onto the heap wherever",
    "start": "1404640",
    "end": "1409760"
  },
  {
    "text": "we want naturally there are no stack canaries or heap canaries which prevent you from doing that it's not a",
    "start": "1409760",
    "end": "1417919"
  },
  {
    "text": "positional independent uh executable which means uh we know exactly where",
    "start": "1417919",
    "end": "1423520"
  },
  {
    "text": "every function will be in the virtual memory and same goes for the stack and the hip because there's no address space",
    "start": "1423520",
    "end": "1430000"
  },
  {
    "text": "layout randomization so for those of you who have never saw that the picture on the right basically summarizes the the",
    "start": "1430000",
    "end": "1437440"
  },
  {
    "text": "defenses we found and yeah basically it's a completely flat binary that has",
    "start": "1437440",
    "end": "1442480"
  },
  {
    "text": "everything we we need and no protections whatsoever sue it's an easy mode for",
    "start": "1442480",
    "end": "1448280"
  },
  {
    "text": "us still we found some challenges that we never expected and the first of them",
    "start": "1448280",
    "end": "1453840"
  },
  {
    "text": "is that we when we were looking at how to trigger this issue uh almost every of these web pages actually required an",
    "start": "1453840",
    "end": "1460880"
  },
  {
    "text": "authentication token before it starts to process the query string so that was already problem because we wanted to put",
    "start": "1460880",
    "end": "1468919"
  },
  {
    "text": "unauthenticated remote code execution into the vulnerab vulnerability description and the second problem was",
    "start": "1468919",
    "end": "1475760"
  },
  {
    "text": "even bigger and it we call it yeah it's called the this free Ctrl name function",
    "start": "1475760",
    "end": "1481600"
  },
  {
    "text": "basically what it does is that when the function that parses the string which we",
    "start": "1481600",
    "end": "1487039"
  },
  {
    "text": "want to overflow when it exits it will call this function which is essentially a chain free so it will take the address",
    "start": "1487039",
    "end": "1493600"
  },
  {
    "text": "of this query string buffer and it will start uh freeing all the pointers uh to",
    "start": "1493600",
    "end": "1499279"
  },
  {
    "text": "the to the keys uh until it encounters a null pointer so it doesn't have any size",
    "start": "1499279",
    "end": "1505200"
  },
  {
    "text": "it will just going to keep forever until it finds a zero and after it does that",
    "start": "1505200",
    "end": "1510559"
  },
  {
    "text": "it will also zero out the address on the stack so basically even though we can achieve the overflow and override the",
    "start": "1510559",
    "end": "1518400"
  },
  {
    "text": "the return address with something we want it will zero it out in the end and all we get is a crash uh that's a",
    "start": "1518400",
    "end": "1524880"
  },
  {
    "text": "problem and this is also a good example why researchers should spend a little bit extra time analyzing the",
    "start": "1524880",
    "end": "1531679"
  },
  {
    "text": "exploitability of their findings because that actually might be the case still we were quite determined to",
    "start": "1531679",
    "end": "1539360"
  },
  {
    "text": "go to blackhead so we we decided to spend a little bit more time and in couple of hours we found actually a very",
    "start": "1539360",
    "end": "1546480"
  },
  {
    "text": "uh so out of these 100 there was one or two pages in which they did not require",
    "start": "1546480",
    "end": "1551600"
  },
  {
    "text": "authentication to process the query string and I suspect that's because of the copy paste code so something has",
    "start": "1551600",
    "end": "1557200"
  },
  {
    "text": "been shifted and the second lucky coincidence was that there was a a local",
    "start": "1557200",
    "end": "1562559"
  },
  {
    "text": "variable uh located just below the return address on the stack and it was",
    "start": "1562559",
    "end": "1567840"
  },
  {
    "text": "explicitly initial uh initialized to zero so in that case when that nasty function that I just show you will be",
    "start": "1567840",
    "end": "1574320"
  },
  {
    "text": "called it will stop at this local variable and it will actually leave our overwritten return address alone so we",
    "start": "1574320",
    "end": "1581720"
  },
  {
    "text": "actually achieve what we want it to achieve and that's great uh with that out of the way the exploit",
    "start": "1581720",
    "end": "1589360"
  },
  {
    "text": "look very simple so this is a proof of concept in which to take the advantage",
    "start": "1589360",
    "end": "1594480"
  },
  {
    "text": "of this vulnerability you need to send a get request to this vulnerable page that I just discussed add a bunch of ampers",
    "start": "1594480",
    "end": "1602159"
  },
  {
    "text": "characters to make sure you fill the stack in the right way and then there goes your shell code and in this case",
    "start": "1602159",
    "end": "1607840"
  },
  {
    "text": "because they are the function that decodes URL in a funky way you can just",
    "start": "1607840",
    "end": "1613440"
  },
  {
    "text": "uh yeah inject the show code directly and in this particular case all it does it just prints uh a certain message to",
    "start": "1613440",
    "end": "1621120"
  },
  {
    "text": "the to the serial console and we can either loop it or we can just recover",
    "start": "1621120",
    "end": "1627279"
  },
  {
    "text": "and it will not even crash so in this case it was easy to make it not to",
    "start": "1627279",
    "end": "1632679"
  },
  {
    "text": "crash that's cool but it's not interesting at all so we decided to see if we can do something useful with it so",
    "start": "1632679",
    "end": "1640400"
  },
  {
    "text": "in this case uh as a reminder we are still within the VM so we cannot pop any",
    "start": "1640400",
    "end": "1646400"
  },
  {
    "text": "root shells unfortunately we are only there at the moment um still because",
    "start": "1646400",
    "end": "1652240"
  },
  {
    "text": "it's a flat binary that has everything we can do quite a lot of things so thread actors did things like DNS",
    "start": "1652240",
    "end": "1659200"
  },
  {
    "text": "hijacking to route traffic or to to serve some malicious content you can change any settings of the device that",
    "start": "1659200",
    "end": "1665840"
  },
  {
    "text": "you want just overwriting the memory in the right place yeah you can make fun of",
    "start": "1665840",
    "end": "1671520"
  },
  {
    "text": "the facing the the web UI itself or you can just take the device for yourself",
    "start": "1671520",
    "end": "1677520"
  },
  {
    "text": "and this is something that we are going to attempt now so we are using practically the same show code we are",
    "start": "1677520",
    "end": "1683520"
  },
  {
    "text": "just writing a certain string in a in a certain memory region and there's a video",
    "start": "1683520",
    "end": "1692360"
  },
  {
    "text": "so one second",
    "start": "1692360",
    "end": "1697559"
  },
  {
    "text": "yeah yeah so here I'm logging in using the default credentials this is just the",
    "start": "1697559",
    "end": "1702960"
  },
  {
    "text": "administrator credentials that I should not know but this is for the demo purposes and you can see it even wars me",
    "start": "1702960",
    "end": "1709120"
  },
  {
    "text": "that it's uh it's default admin password so let's help them out let's",
    "start": "1709120",
    "end": "1714880"
  },
  {
    "text": "just change the password for them to make sure they are secure um so",
    "start": "1714880",
    "end": "1720240"
  },
  {
    "text": "basically I'm just using another version of the show code that that I showed you to overwrite the password directly in",
    "start": "1720240",
    "end": "1727720"
  },
  {
    "text": "memory and here I'm using the long one just to show that it's",
    "start": "1727720",
    "end": "1734039"
  },
  {
    "text": "different we copy it and we try to login with the new",
    "start": "1734039",
    "end": "1740080"
  },
  {
    "text": "password and it didn't even crash and uh yeah just to to make sure I'm not",
    "start": "1744520",
    "end": "1749919"
  },
  {
    "text": "cheating I'm going to change the password again and this time it's going to be one character password because",
    "start": "1749919",
    "end": "1756159"
  },
  {
    "text": "just because just because just because we",
    "start": "1756159",
    "end": "1758960"
  },
  {
    "text": "can and it works so virtual machines are really cool it's uh it's really fast it",
    "start": "1766200",
    "end": "1771840"
  },
  {
    "text": "doesn't crash so I like it uh but then the title as you may have noticed it said remote shells so yeah I assume you",
    "start": "1771840",
    "end": "1779520"
  },
  {
    "text": "wanted to see me popping a root shell and that's what we're going to do some of the past research mentioned uh that",
    "start": "1779520",
    "end": "1786399"
  },
  {
    "text": "there is a function that calls system commands on the host somewhere somehow",
    "start": "1786399",
    "end": "1791840"
  },
  {
    "text": "we could not find it at first and there are no details about this particular functionality so uh we had to look",
    "start": "1791840",
    "end": "1800480"
  },
  {
    "text": "ourselves uh we actually found a binary on the host operating system which is Ubuntu that listens to different",
    "start": "1800480",
    "end": "1807240"
  },
  {
    "text": "requests from the guest for example if the guest crashes it detects the crash",
    "start": "1807240",
    "end": "1813679"
  },
  {
    "text": "and then it sends a command to the host asking to reboot itself or there are other housekeeping commands like setting",
    "start": "1813679",
    "end": "1820640"
  },
  {
    "text": "the time setting administrator password whatever so all these done through a",
    "start": "1820640",
    "end": "1825919"
  },
  {
    "text": "virtual serial interface basically and for security reasons the",
    "start": "1825919",
    "end": "1831039"
  },
  {
    "text": "the the set of commands that are allowed are whitel listed so it's a game over",
    "start": "1831039",
    "end": "1836919"
  },
  {
    "text": "it's they definitely thought about this and you can see the list of the commands",
    "start": "1836919",
    "end": "1842480"
  },
  {
    "text": "uh that are allowed at the at the bottom of the screen um but if you look at the the",
    "start": "1842480",
    "end": "1849279"
  },
  {
    "text": "binary where this thing is implemented indeed they check that the command begins with one of the vital listed",
    "start": "1849279",
    "end": "1855679"
  },
  {
    "text": "commands but if you look at how this thing actually creates the command that then it runs you realize that hm so",
    "start": "1855679",
    "end": "1864159"
  },
  {
    "text": "basically what it does it uh fills that string with the command that you provide",
    "start": "1864159",
    "end": "1870080"
  },
  {
    "text": "it should start with the command that is whitelisted but it doesn't have to end with the command that is whitelisted and",
    "start": "1870080",
    "end": "1876320"
  },
  {
    "text": "then it will be executed as system so very simple it's a classical OS command",
    "start": "1876320",
    "end": "1881440"
  },
  {
    "text": "injection which means we can provide the white elicit command and then pipe something else that we want to be",
    "start": "1881440",
    "end": "1887440"
  },
  {
    "text": "executed in the same in the same instance and in this case basically",
    "start": "1887440",
    "end": "1892960"
  },
  {
    "text": "escaping virtual machines is hard you need to uh find some vulnerabilities in the hypervisor whatever and we managed",
    "start": "1892960",
    "end": "1900080"
  },
  {
    "text": "to escape with the VM with just common ejection and here I'm going to show an",
    "start": "1900080",
    "end": "1906679"
  },
  {
    "text": "example so this is the 3912 so the most advanced version of this device and I'm",
    "start": "1906679",
    "end": "1912720"
  },
  {
    "text": "running a netcut listener here and at the top I'm running the exploit to",
    "start": "1912720",
    "end": "1918240"
  },
  {
    "text": "execute some commands um yeah I'm just assigning an IP address because I'm physically connected to this device uh",
    "start": "1918240",
    "end": "1925039"
  },
  {
    "text": "to a physical port and then I'm just asking nicely to to give me back the root shell and as you can see I I have",
    "start": "1925039",
    "end": "1931200"
  },
  {
    "text": "to run this command several times because the exploit is for 3910 but it still works here something crashes",
    "start": "1931200",
    "end": "1937919"
  },
  {
    "text": "sometime but it still works and as you can see it restarts pretty fast because",
    "start": "1937919",
    "end": "1943039"
  },
  {
    "text": "it's in a virtual machine hey and now we get the root shell uh yeah can check the",
    "start": "1943039",
    "end": "1949279"
  },
  {
    "text": "operating system everything and from this point basically you have infected the host you can install malware you can",
    "start": "1949279",
    "end": "1955519"
  },
  {
    "text": "do lateral movement whatever you desire and yeah you basically own the device at",
    "start": "1955519",
    "end": "1960640"
  },
  {
    "text": "this point uh remotely thank you so Franchesco now will give you some",
    "start": "1960640",
    "end": "1968399"
  },
  {
    "text": "other couple of other findings and he will tell you the the conclusions and the outlook",
    "start": "1968399",
    "end": "1975279"
  },
  {
    "text": "okay so thanks thanks T so now few notes on patches so it's",
    "start": "1975279",
    "end": "1981360"
  },
  {
    "text": "uncertain if the VM escape issue that SCL has shown you before was already found by Philip Loretta or is a",
    "start": "1981360",
    "end": "1988240"
  },
  {
    "text": "completely different issue in any case yeah it has been there for for a few years so it's quite bad then",
    "start": "1988240",
    "end": "1995600"
  },
  {
    "text": "unfortunately we didn't have enough time to document all the buffer overflows so we decided to to report several classes",
    "start": "1995600",
    "end": "2003120"
  },
  {
    "text": "of them with a few concrete examples in our case the vendor was really quick to",
    "start": "2003120",
    "end": "2008240"
  },
  {
    "text": "release all the patches but we are uncertain whether the fixes apply only to those reported examples indeed when",
    "start": "2008240",
    "end": "2015919"
  },
  {
    "text": "Dr published our security advisory we saw that another one was published the",
    "start": "2015919",
    "end": "2021760"
  },
  {
    "text": "very same day and when we looked at the details of these vulnerabilities we noticed that they look like variance of",
    "start": "2021760",
    "end": "2028880"
  },
  {
    "text": "the buffer overflows that we reported this could be a coincidence however when",
    "start": "2028880",
    "end": "2034080"
  },
  {
    "text": "we were finishing these lights we did an interesting discovery so we have already seen this OS common injection uh it has",
    "start": "2034080",
    "end": "2041679"
  },
  {
    "text": "been actively exploited by tractors and was patched several years ago uh by Dr h",
    "start": "2041679",
    "end": "2048240"
  },
  {
    "text": "and it only affects end of sales models but we discovered that on 21st of",
    "start": "2048240",
    "end": "2053520"
  },
  {
    "text": "October a researcher published 22 variants of the same bug so we decided",
    "start": "2053520",
    "end": "2059358"
  },
  {
    "text": "to to have a look at the root cause and we realized that was very similar to the VMs escape bug that we uh just presented",
    "start": "2059359",
    "end": "2067679"
  },
  {
    "text": "it seems like they reused part of that code you can also see here a code snippet of one of these bugs so yeah it",
    "start": "2067679",
    "end": "2074638"
  },
  {
    "text": "seems like an evidence that no one has performed any kind of variant analysis because all these vulnerabilities have",
    "start": "2074639",
    "end": "2081520"
  },
  {
    "text": "been there for yeah for for many years um and anyway so um Dre hasn't published",
    "start": "2081520",
    "end": "2088960"
  },
  {
    "text": "any security advisory yet and we don't know if these vulnerabilities will",
    "start": "2088960",
    "end": "2094158"
  },
  {
    "text": "eventually be patched then uh yesterday we published a blog post about thactors exploiting this",
    "start": "2094159",
    "end": "2101599"
  },
  {
    "text": "kind of OS common injection so if you are interested please uh have a",
    "start": "2101599",
    "end": "2106680"
  },
  {
    "text": "look now some recommendation to device owners so first and foremost do not",
    "start": "2106680",
    "end": "2112160"
  },
  {
    "text": "publish any kind of management interface on the internet and install updates often especially in this case where",
    "start": "2112160",
    "end": "2119200"
  },
  {
    "text": "there is an an abundance of buffer flows and many other public facing components might be vulnerable to similar issues",
    "start": "2119200",
    "end": "2126640"
  },
  {
    "text": "then if you own a business that rely on these devices per we recommend to",
    "start": "2126640",
    "end": "2132720"
  },
  {
    "text": "perform an independent security assessments and don't rely on the number",
    "start": "2132720",
    "end": "2137760"
  },
  {
    "text": "of historical CVE to understand the vendor security posture instead use",
    "start": "2137760",
    "end": "2143520"
  },
  {
    "text": "security advisories to your advantage and proactively which means check if the",
    "start": "2143520",
    "end": "2148640"
  },
  {
    "text": "same issues keep popping up over the years if there aren't issues if there",
    "start": "2148640",
    "end": "2153720"
  },
  {
    "text": "aren't vulnerabilities could be even more suspicious now recommendations to",
    "start": "2153720",
    "end": "2160400"
  },
  {
    "text": "vendors please when you read about thactors targeting your devices make",
    "start": "2160400",
    "end": "2165920"
  },
  {
    "text": "some positive change to their security posture and it's also important to",
    "start": "2165920",
    "end": "2171280"
  },
  {
    "text": "educate developers engineers and architects then remember that firmware",
    "start": "2171280",
    "end": "2176320"
  },
  {
    "text": "encryption doesn't prevent any scrutiny so don't rely on security by obscurity to protect your products instead use",
    "start": "2176320",
    "end": "2184320"
  },
  {
    "text": "static analysis tools audit the code hire third party penetration testers",
    "start": "2184320",
    "end": "2190160"
  },
  {
    "text": "then do variant analysis so don't patch only issues reported by security researchers so we have seen how this is",
    "start": "2190160",
    "end": "2197359"
  },
  {
    "text": "important during this talk then apply binary hardening even if it's",
    "start": "2197359",
    "end": "2202640"
  },
  {
    "text": "not a silver bullet why not use it and last but not least if your software",
    "start": "2202640",
    "end": "2208480"
  },
  {
    "text": "starts to resemble Swiss cheese yeah maybe it's better to consider a complete redesign and reimplementation of the",
    "start": "2208480",
    "end": "2215640"
  },
  {
    "text": "solution okay thank you thank you very much for for listening i think we have",
    "start": "2215640",
    "end": "2221359"
  },
  {
    "text": "uh yeah three minutes yeah if you have any questions",
    "start": "2221359",
    "end": "2227240"
  },
  {
    "text": "lots lots of those vulnerabilities look like something from an easy section on a on a CTF",
    "start": "2231680",
    "end": "2238440"
  },
  {
    "text": "um structurally what what happened to allow that to go through it's I I assume",
    "start": "2238440",
    "end": "2247280"
  },
  {
    "text": "Drech aren't necessarily unique in in this sort of thing so so if these",
    "start": "2247280",
    "end": "2253440"
  },
  {
    "text": "solutions are out there isn't you know we're not talking about like some complex cryptography just simple you",
    "start": "2253440",
    "end": "2258800"
  },
  {
    "text": "know length validation why haven't these been in place for so long",
    "start": "2258800",
    "end": "2265640"
  },
  {
    "text": "yeah it's it's hard to tell because we we are not dry we have only view from",
    "start": "2265760",
    "end": "2270800"
  },
  {
    "text": "the outside i would probably say yeah because nobody bothered to do it",
    "start": "2270800",
    "end": "2277359"
  },
  {
    "text": "thank you and probably it's not economical to to do security evaluation code hardening this kind of thing yeah",
    "start": "2277359",
    "end": "2283920"
  },
  {
    "text": "people still will buy it so yeah why waste any",
    "start": "2283920",
    "end": "2288800"
  },
  {
    "text": "money still uh 2 minutes yeah okay if there's no",
    "start": "2293240",
    "end": "2299920"
  },
  {
    "text": "more question we'll be outside so yeah we can talk offline thank you for being here and yeah see you later thank you",
    "start": "2299920",
    "end": "2305760"
  },
  {
    "text": "very much",
    "start": "2305760",
    "end": "2308640"
  }
]