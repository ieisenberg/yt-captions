[
  {
    "text": "[Music]",
    "start": "4340",
    "end": "14140"
  },
  {
    "text": "hi i'm maddie stone and this is reversing the route identifying the exploited vulnerability",
    "start": "15679",
    "end": "21520"
  },
  {
    "text": "and zero days used in the wild so as i said my name is maddie stone and i'm a security researcher",
    "start": "21520",
    "end": "27199"
  },
  {
    "text": "on google project zero where i focus on zero days used in the wild so understanding them analyzing and",
    "start": "27199",
    "end": "34000"
  },
  {
    "text": "seeing what we can learn and act based on them so why did i want to do this talk",
    "start": "34000",
    "end": "39440"
  },
  {
    "text": "why do i think it's worth your time is that we care a lot and make about making it harder for people to",
    "start": "39440",
    "end": "45680"
  },
  {
    "text": "exploit users using zero days and so when zero days are exploits are detected in the wild that's",
    "start": "45680",
    "end": "51760"
  },
  {
    "text": "the failure case for these attackers and so we need to learn as much as possible each time that happens",
    "start": "51760",
    "end": "58239"
  },
  {
    "text": "we need to learn what their vulnerability is use those data points to help inform how we're",
    "start": "58239",
    "end": "63920"
  },
  {
    "text": "going to respond to it such as variant analysis and other systemic changes to kill bug classes or break",
    "start": "63920",
    "end": "71760"
  },
  {
    "text": "exploit methods and not work in this sort of theoretical realm",
    "start": "71760",
    "end": "77119"
  },
  {
    "text": "but take each of those few cases and really make sure that we're using those as the data",
    "start": "77119",
    "end": "82880"
  },
  {
    "text": "points to inform what we do and so one of those big integral parts",
    "start": "82880",
    "end": "88159"
  },
  {
    "text": "is doing a root cause analysis because a lot of times when we see hear about zero days",
    "start": "88159",
    "end": "93200"
  },
  {
    "text": "exploits and whether that's a blog or news or things like that or even just an advisory they talk about maybe what the",
    "start": "93200",
    "end": "100159"
  },
  {
    "text": "malware payload is maybe with the threat threat actor behind it the goals but a lot of time they don't",
    "start": "100159",
    "end": "106960"
  },
  {
    "text": "really get into the nitty-gritty of how did those um attackers get that",
    "start": "106960",
    "end": "112079"
  },
  {
    "text": "initial access to then go and do the bad thing so us at project zero we're really",
    "start": "112079",
    "end": "117520"
  },
  {
    "text": "focusing on each time a zero day is detected to perform a root cause analysis",
    "start": "117520",
    "end": "123040"
  },
  {
    "text": "and the goal of these root cause analysis comes down to figuring out what that vulnerability is",
    "start": "123040",
    "end": "128720"
  },
  {
    "text": "and in such depth that we can trigger it through a poc because that really shows you you know all the details and not just",
    "start": "128720",
    "end": "135120"
  },
  {
    "text": "sort of the overarching summary and then how did the attackers exploit",
    "start": "135120",
    "end": "140400"
  },
  {
    "text": "it like what was that exploit methodology and those are the two big things of the foundations that then allow us",
    "start": "140400",
    "end": "146400"
  },
  {
    "text": "to move on to act um have suggestions for where should we invest in research and different things",
    "start": "146400",
    "end": "152720"
  },
  {
    "text": "like that in this presentation though our focus is about that vulnerability",
    "start": "152720",
    "end": "158879"
  },
  {
    "text": "and more so than just giving you a presentation in a survey of what are those root cause vulnerabilities that have been used in",
    "start": "158879",
    "end": "165599"
  },
  {
    "text": "the recent zero day exploits is that we want to talk about that process reverse engineer to reverse",
    "start": "165599",
    "end": "170959"
  },
  {
    "text": "engineer how can we become more efficient come up with new ways to make sure we're more precise",
    "start": "170959",
    "end": "176720"
  },
  {
    "text": "when we dig down into the information we have whether it's the exploit or the patches or",
    "start": "176720",
    "end": "183519"
  },
  {
    "text": "tips to figure out what that vulnerability is and then that allows us to make hypotheses and brainstorm",
    "start": "183519",
    "end": "190080"
  },
  {
    "text": "to come up with our next steps in our actions based on the facts of the vulnerability",
    "start": "190080",
    "end": "197040"
  },
  {
    "text": "so just as a brief i'm giving this you know three weeks before um y'all are",
    "start": "197040",
    "end": "202480"
  },
  {
    "text": "seeing this presentation so these all of these root causes should be published um for your um",
    "start": "202480",
    "end": "210239"
  },
  {
    "text": "perusal and so we i for each of the case studies um there is a root cause analysis we've",
    "start": "210239",
    "end": "216720"
  },
  {
    "text": "already performed that include all of this detail as well as the information about the exploit method and different",
    "start": "216720",
    "end": "222159"
  },
  {
    "text": "hypothesis and brainstorms we have about those facts and we also have others published so you",
    "start": "222159",
    "end": "227200"
  },
  {
    "text": "can go to our website to see the case studies covered here as well as the others we've",
    "start": "227200",
    "end": "232799"
  },
  {
    "text": "investigated so to be very open and transparent with you",
    "start": "232799",
    "end": "238959"
  },
  {
    "text": "though these are the take aways i hope that you have and what i sort of how i pitched this talk to the review",
    "start": "238959",
    "end": "245599"
  },
  {
    "text": "board is the first thing i hope that each of you all and the not in the room but on your couches and your sweats",
    "start": "245599",
    "end": "252159"
  },
  {
    "text": "um gained from this is one there's a lot of different ways to reverse engineer vulnerability",
    "start": "252159",
    "end": "257680"
  },
  {
    "text": "we sometimes talk about the different processes as a monolith where in actuality there's",
    "start": "257680",
    "end": "262720"
  },
  {
    "text": "a lot of creativity and a lot of different choices you can take to raise your likelihood for success",
    "start": "262720",
    "end": "269600"
  },
  {
    "text": "as well as use less resources have to invest less time skills etc to get to the answer um",
    "start": "269600",
    "end": "277199"
  },
  {
    "text": "i also want to be frank that not every endeavor is successful and so i'm presenting two case studies",
    "start": "277199",
    "end": "282880"
  },
  {
    "text": "where i failed i didn't quite get to the end but i don't want those to be discouraging for anyone else who wants",
    "start": "282880",
    "end": "289440"
  },
  {
    "text": "to get in this realm we can use you we need more brains working on these problems and so each time we don't get to the end",
    "start": "289440",
    "end": "297040"
  },
  {
    "text": "goal or have a success of identifying the root cause we have a lot to learn from that that we",
    "start": "297040",
    "end": "302960"
  },
  {
    "text": "can then apply if we're deliberate to the next set to raise our um probability of success",
    "start": "302960",
    "end": "311440"
  },
  {
    "text": "lastly um i sometimes there's a lot of resources describing what a technique is",
    "start": "311440",
    "end": "317759"
  },
  {
    "text": "but it doesn't get into the nitty-gritty of how it appears in practice and i've heard sometimes it's hard for",
    "start": "317759",
    "end": "323199"
  },
  {
    "text": "people to take those theoretical descriptions and apply them so hopefully this talk",
    "start": "323199",
    "end": "328479"
  },
  {
    "text": "will show you through seven different case studies how not everything has to be the same and what are some of those differences",
    "start": "328479",
    "end": "335039"
  },
  {
    "text": "that you can see when root causing one zero day to another and you know pandemic brain has gotten",
    "start": "335039",
    "end": "342240"
  },
  {
    "text": "to us all and i'm here recording this talk with no one in the room so let's have a little fun with it",
    "start": "342240",
    "end": "347919"
  },
  {
    "text": "so yo yo yo i'm batty stone i got these zero days so let's talk about the ways",
    "start": "347919",
    "end": "353680"
  },
  {
    "text": "that we get to the root so we can scream loot and when we root cause that bone life won't be so dull",
    "start": "353680",
    "end": "360160"
  },
  {
    "text": "so hopefully this talk isn't dull we have some fun talking about processes and how to be better reverse engineers my goal is to start",
    "start": "360160",
    "end": "367120"
  },
  {
    "text": "the conversation so i can learn from you i can share what we at project zero doing and so let's get into it",
    "start": "367120",
    "end": "374639"
  },
  {
    "text": "first off want to make sure all of us are starting from the same foundations understand what terms i'm using so let's",
    "start": "374639",
    "end": "380319"
  },
  {
    "text": "cover basics super quickly the four categories of techniques i'm covering and sort of classes of",
    "start": "380319",
    "end": "386880"
  },
  {
    "text": "techniques are one reversing the exploit sample i think that's what most people think of",
    "start": "386880",
    "end": "391919"
  },
  {
    "text": "when you say you're going to analyze a zero-day exploit is you're going to load it into ida or take the byte code",
    "start": "391919",
    "end": "397759"
  },
  {
    "text": "into another tool and start line by line statically reversing it i want to show you some case studies of",
    "start": "397759",
    "end": "403919"
  },
  {
    "text": "other ways that can appear um and that's the one that usually happens when you actually have that zero",
    "start": "403919",
    "end": "409599"
  },
  {
    "text": "day sample however there's a lot of cases when you don't have those samples and so that's where we get into binary",
    "start": "409599",
    "end": "415759"
  },
  {
    "text": "patch stiffing which is well written about well researched",
    "start": "415759",
    "end": "421120"
  },
  {
    "text": "but it can still take a couple different looks and there's a lot of different ways or lessons learned i have",
    "start": "421120",
    "end": "428800"
  },
  {
    "text": "from giving it a shot so that's the second category the third is source code patch diffing",
    "start": "428800",
    "end": "435039"
  },
  {
    "text": "and that usually comes into play for the code bases where that are open source",
    "start": "435039",
    "end": "440160"
  },
  {
    "text": "such as android chrome firefox etc or you may be have privileged access as",
    "start": "440160",
    "end": "447280"
  },
  {
    "text": "a vendor or a partner such that you can see the source code",
    "start": "447280",
    "end": "452319"
  },
  {
    "text": "source code patches and the repos or the change logs so that's when you may use that",
    "start": "452319",
    "end": "458319"
  },
  {
    "text": "technique instead and lastly sometimes in our industry they're sharing",
    "start": "458319",
    "end": "463360"
  },
  {
    "text": "or we receive tips about exploits that are in use and so that's sort of what i'm calling",
    "start": "463360",
    "end": "468800"
  },
  {
    "text": "bug hunting based on exploit details you don't have patches and you don't have an exploit but you've received some details so how",
    "start": "468800",
    "end": "474960"
  },
  {
    "text": "do you work on that this is just a simple overview for",
    "start": "474960",
    "end": "480479"
  },
  {
    "text": "anyone who hasn't worked in this space at all of some of the questions you ask yourself and how you end up at",
    "start": "480479",
    "end": "487120"
  },
  {
    "text": "some of the different techniques and the last other thing that i think is",
    "start": "487120",
    "end": "492639"
  },
  {
    "text": "interesting is that your role um plays a big part in how you go about this root causing",
    "start": "492639",
    "end": "499039"
  },
  {
    "text": "sometimes you might be the person who discovered the exploit and so your goals are largely get it patched",
    "start": "499039",
    "end": "506160"
  },
  {
    "text": "from the vendor so you may or may not decide to root cause and you will also be",
    "start": "506160",
    "end": "511599"
  },
  {
    "text": "regularly reflecting on how much of your time and resources should you",
    "start": "511599",
    "end": "517518"
  },
  {
    "text": "invest because if you decide oh i have this exploit i have this crash and i don't want to report it until i",
    "start": "517519",
    "end": "523440"
  },
  {
    "text": "have that root cause vulnerability and i'm super confident then you're allowing time to continue",
    "start": "523440",
    "end": "529279"
  },
  {
    "text": "um without it being patched versus sending it to the vendor even if you don't understand exactly how it works so in",
    "start": "529279",
    "end": "535839"
  },
  {
    "text": "that case you often have access to the exploit but not necessarily the source code or that vendor developer expertise on",
    "start": "535839",
    "end": "543120"
  },
  {
    "text": "whatever it's exploiting next you're the vendor of you probably have the most access to",
    "start": "543120",
    "end": "549920"
  },
  {
    "text": "details whether that's experts who actually wrote the code that's being exploited you have the source code",
    "start": "549920",
    "end": "554959"
  },
  {
    "text": "you likely have the exploit or the crash from the original discover or because they reported it to you um",
    "start": "554959",
    "end": "561920"
  },
  {
    "text": "and so you also can't really make that decision of oh no this took too long deciding not i'm not going",
    "start": "561920",
    "end": "568320"
  },
  {
    "text": "to root calls it all the way you're going to need to hopefully take it all the way to the end",
    "start": "568320",
    "end": "574160"
  },
  {
    "text": "and lastly there's third party which may be users or researchers who may see in the advisory see i",
    "start": "574160",
    "end": "580320"
  },
  {
    "text": "mentioned a blog post that something has been exploited in the wild and you likely have the least amount of information and",
    "start": "580320",
    "end": "587680"
  },
  {
    "text": "you also need to decide what your investment of how much time and energy you want to",
    "start": "587680",
    "end": "593680"
  },
  {
    "text": "put into it so all i'm presenting seven case studies here and all done of root causes done by",
    "start": "593680",
    "end": "601200"
  },
  {
    "text": "project zero project zero's role has gone through each of these three at",
    "start": "601200",
    "end": "607200"
  },
  {
    "text": "different times sometimes we discover it sometimes vendors ask to partner with us for our expertise to help them",
    "start": "607200",
    "end": "613279"
  },
  {
    "text": "figure out patches or the root cause and most often we're the third party researchers who are",
    "start": "613279",
    "end": "618399"
  },
  {
    "text": "trying to dig in and to learn as much as we can without being either the two",
    "start": "618399",
    "end": "624000"
  },
  {
    "text": "so now let's get into the fun stuff of the case studies so the first category we're going to go",
    "start": "624000",
    "end": "629040"
  },
  {
    "text": "into is two different case studies of you have the exploit on hand and you want to recause it",
    "start": "629040",
    "end": "634560"
  },
  {
    "text": "but it can take two very different looks so the first one is a series of windows jscript exploits",
    "start": "634560",
    "end": "640720"
  },
  {
    "text": "that were exploited in the wild so it started with cve 2019-1360",
    "start": "640720",
    "end": "646640"
  },
  {
    "text": "then went on to cve 2019-1429 and finally 20-20-0674",
    "start": "646640",
    "end": "652480"
  },
  {
    "text": "and those are all trivial variants of each other so all three of these were immediate are",
    "start": "652480",
    "end": "657600"
  },
  {
    "text": "originally detected by clemont of the google threat analysis group and clemond",
    "start": "657600",
    "end": "662800"
  },
  {
    "text": "did some of the exploit analysis while yvonne from project zero did the root causing of the",
    "start": "662800",
    "end": "668399"
  },
  {
    "text": "bug so here are the three microsoft security advisories and the first one",
    "start": "668399",
    "end": "674240"
  },
  {
    "text": "in their description for each of them is a remote code execution vulnerability exists in the way that the scripting",
    "start": "674240",
    "end": "680320"
  },
  {
    "text": "engine handles objects in memory in internet explorer",
    "start": "680320",
    "end": "685680"
  },
  {
    "text": "so yvonne's ready to dig into this figure out what um the vulnerability these exploits are",
    "start": "685680",
    "end": "691680"
  },
  {
    "text": "exploiting are and i think one of the important things to remember is yvonne has studied and written tooling extensively for jscript",
    "start": "691680",
    "end": "698800"
  },
  {
    "text": "he is not new to this platform he has published a lot of research in the area and when he looks at this looks at the",
    "start": "698800",
    "end": "705760"
  },
  {
    "text": "exploit sample he doesn't decide to try to statically reverse it instead he decides to run the exploit",
    "start": "705760",
    "end": "712639"
  },
  {
    "text": "through a simple custom test case minimizer which i thought was a really cool idea and why i",
    "start": "712639",
    "end": "718880"
  },
  {
    "text": "wanted to include it here so this is the main portion of the code from the exploit",
    "start": "718880",
    "end": "725120"
  },
  {
    "text": "and um yvonne's test case minimizer was simple in the fact that you put in",
    "start": "725120",
    "end": "730320"
  },
  {
    "text": "the exploit it ensures it crashes and each time there's a crash it removes a line of code if the exploit no longer causes a crash",
    "start": "730320",
    "end": "738000"
  },
  {
    "text": "um once a line of code is removed then that tells you that that was important for",
    "start": "738000",
    "end": "743200"
  },
  {
    "text": "triggering the vulnerability so the test case minimizer tells them that it's these lines of code that are",
    "start": "743200",
    "end": "749120"
  },
  {
    "text": "responsible for triggering the vulnerability and that's what those codes in format",
    "start": "749120",
    "end": "754399"
  },
  {
    "text": "look like so from that yvonne then annotated it for us",
    "start": "754399",
    "end": "759760"
  },
  {
    "text": "as well as cleaned it up a little bit so what the vulnerability was when you take those two lines is that",
    "start": "759760",
    "end": "765920"
  },
  {
    "text": "down at the bottom um array.sort is called with a custom callback that function f and so we can see then",
    "start": "765920",
    "end": "773519"
  },
  {
    "text": "the definition of function f so the first thing it does is it creates a bunch of objects",
    "start": "773519",
    "end": "778639"
  },
  {
    "text": "otherwise known as jscript variables and it then stores a reference to one of",
    "start": "778639",
    "end": "783920"
  },
  {
    "text": "those objects or variables in the arguments array and the key here is that the arguments",
    "start": "783920",
    "end": "790079"
  },
  {
    "text": "array isn't tracked by garbage collector so then in step four",
    "start": "790079",
    "end": "795680"
  },
  {
    "text": "they delete all of the objects or the jskip variables",
    "start": "795680",
    "end": "800720"
  },
  {
    "text": "and then call garbage collectors so that all of those are reclaimed and lastly though we still have the",
    "start": "800720",
    "end": "807200"
  },
  {
    "text": "reference though to one of them in the arguments array giving us the use after free",
    "start": "807200",
    "end": "813040"
  },
  {
    "text": "so that was a really cool idea i thought and it was super quick um but if yvonne hadn't had all of this",
    "start": "813040",
    "end": "819920"
  },
  {
    "text": "expertise in this bug class specifically as well as um tooling that he had already created",
    "start": "819920",
    "end": "826399"
  },
  {
    "text": "for jscript probably would have taken him a lot longer and so that expertise and experience already with setting up",
    "start": "826399",
    "end": "832720"
  },
  {
    "text": "tooling for jscript definitely came in handy",
    "start": "832720",
    "end": "837920"
  },
  {
    "text": "the next case study we're going to cover is the ios com uncovered jailbreak so we in project",
    "start": "837920",
    "end": "844320"
  },
  {
    "text": "zero don't technically consider this this year day exploit that's used in the wild but you still had to go through",
    "start": "844320",
    "end": "850320"
  },
  {
    "text": "similar actions the root cause of vulnerability and brandon recently published a blog post on this so i thought it was",
    "start": "850320",
    "end": "856560"
  },
  {
    "text": "interesting i'm going to cover some of the highlights that brandon showed which i thought were super interesting and thus",
    "start": "856560",
    "end": "861760"
  },
  {
    "text": "willing or not willing wanting to share with y'all so first as one does he took the exploit",
    "start": "861760",
    "end": "869279"
  },
  {
    "text": "and opened it up in ida um with the intention of statically reversing but he saw that it was heavily",
    "start": "869279",
    "end": "875519"
  },
  {
    "text": "obfuscated and brandon was like uh i think i can try something else i can pivot i don't need to",
    "start": "875519",
    "end": "880880"
  },
  {
    "text": "commit to statically reversing it so instead he decided to run it on a device",
    "start": "880880",
    "end": "886639"
  },
  {
    "text": "so brandon has a lot of expertise in ios kernel exploits and so to him he was like huh many",
    "start": "886639",
    "end": "893519"
  },
  {
    "text": "memory corruption based exploits have this critical section where the kernel state",
    "start": "893519",
    "end": "898959"
  },
  {
    "text": "is corrupted and so if the exploit doesn't continue and instead is stopped then the system's",
    "start": "898959",
    "end": "904320"
  },
  {
    "text": "unstable so here the idea load the uncover app onto the device and",
    "start": "904320",
    "end": "909360"
  },
  {
    "text": "press stop in the middle of it and that led him to a kernel crash so he was right on target there and the",
    "start": "909360",
    "end": "916639"
  },
  {
    "text": "key here is that it was interesting this kernel panic says there's a use after free in the",
    "start": "916639",
    "end": "922199"
  },
  {
    "text": "calc.16 allocation zone of the kernel so he wasn't fully trusting it",
    "start": "922199",
    "end": "927680"
  },
  {
    "text": "quite yet but was like this is worth tracking down and seeing if there's anything there so the next step was he wanted to",
    "start": "927680",
    "end": "933519"
  },
  {
    "text": "determine if the vulnerability relies on reallocating a calc.16 allocation as if it's used",
    "start": "933519",
    "end": "939920"
  },
  {
    "text": "after free or something like that so he wrote an app that continuously",
    "start": "939920",
    "end": "945199"
  },
  {
    "text": "allocates and frees to that zone because if it does then it's messing up that reallocation and thus should break",
    "start": "945199",
    "end": "951360"
  },
  {
    "text": "the exploit and it did as soon as the jailbreak button was pressed in the in the um uncover app",
    "start": "951360",
    "end": "960000"
  },
  {
    "text": "while the app that does the reallocating was running in the background there was a kernel panic but this didn't",
    "start": "960000",
    "end": "966560"
  },
  {
    "text": "happen when brandon changed his custom app to calc.32 so that's telling him then yep you're",
    "start": "966560",
    "end": "973600"
  },
  {
    "text": "right on um target this exploit relies on a reallocation to the",
    "start": "973600",
    "end": "980279"
  },
  {
    "text": "calc.16 area so next he analyzed the strap the stack traces from those used after",
    "start": "980279",
    "end": "986480"
  },
  {
    "text": "free catches and he's symbolicated it which i didn't know it was a word but i love it now",
    "start": "986480",
    "end": "991759"
  },
  {
    "text": "that i do so once you've symbolicated it it looked super interesting",
    "start": "991759",
    "end": "997199"
  },
  {
    "text": "brandon had recently completed a study of ios exploits and he um the lio",
    "start": "997199",
    "end": "1004240"
  },
  {
    "text": "underscore list io sys call immediately caught his attention because from that survey he looked into",
    "start": "1004240",
    "end": "1010880"
  },
  {
    "text": "light speed and light speed based exploits were dependent on the vulnerable syscall of this lio list i o",
    "start": "1010880",
    "end": "1019680"
  },
  {
    "text": "so then he started to dig into how does this exploit run compared to the original light speed exploit they weren't exactly",
    "start": "1020079",
    "end": "1026959"
  },
  {
    "text": "the same um but he went ahead and used check grain and pongo ii",
    "start": "1026959",
    "end": "1033280"
  },
  {
    "text": "punggol os to patch that syscall in the kernel cache and that was then how he was able to",
    "start": "1033280",
    "end": "1039678"
  },
  {
    "text": "determine that the exploit methodology had changed but apple had actually reintroduced",
    "start": "1039679",
    "end": "1045760"
  },
  {
    "text": "the original light speed bug into the um back into ios and so that's how he root",
    "start": "1045760",
    "end": "1051600"
  },
  {
    "text": "caused the vulnerability so a few takeaways is with the exploit sample brandon did",
    "start": "1051600",
    "end": "1057919"
  },
  {
    "text": "this um had the identified the vulnerability within four hours in a pock or proof of concept within ten but",
    "start": "1057919",
    "end": "1065679"
  },
  {
    "text": "his expertise in kernel exploits i would think definitely played a role as well as",
    "start": "1065679",
    "end": "1071039"
  },
  {
    "text": "recently studying previous exploits so because of that he was able to quickly identify",
    "start": "1071039",
    "end": "1076559"
  },
  {
    "text": "the similarities with list i o or similarities with lightspeed and i think that's an",
    "start": "1076559",
    "end": "1082400"
  },
  {
    "text": "important reason for us to continually publishing and looking back at historical zero day exploit",
    "start": "1082400",
    "end": "1088799"
  },
  {
    "text": "data i think it's also important to highlight he didn't pause or see any reason not to",
    "start": "1088799",
    "end": "1096240"
  },
  {
    "text": "pivot and switch to dynamic reversing when that when he saw the exploit was obfuscated and thus static reversing",
    "start": "1096240",
    "end": "1104400"
  },
  {
    "text": "might not be as reliable or as quick and then one other line that was in his",
    "start": "1104400",
    "end": "1110799"
  },
  {
    "text": "blog post that i thought was super interesting and wanted to call out even though it didn't work in this case is brandy used",
    "start": "1110799",
    "end": "1117120"
  },
  {
    "text": "his knowledge that ios exploits often use mock ports for their exploitation and so he wrote",
    "start": "1117120",
    "end": "1124160"
  },
  {
    "text": "an app that was churning the ipc ports zone and when the uncover",
    "start": "1124160",
    "end": "1129200"
  },
  {
    "text": "exploit still worked while that app that was churning ipc ports was running it suggested that",
    "start": "1129200",
    "end": "1135360"
  },
  {
    "text": "that exploit used a different exploitation method um that didn't rely on heap grooming of",
    "start": "1135360",
    "end": "1140400"
  },
  {
    "text": "the mockport allocations so i thought that was super interesting if you're looking at ios",
    "start": "1140400",
    "end": "1145760"
  },
  {
    "text": "a good way that he used his knowledge to then try and apply to figure out what a root cause was",
    "start": "1145760",
    "end": "1152320"
  },
  {
    "text": "so that was what you do when you reverse the exploit and you have the exploit sample on hand now let's get into binary",
    "start": "1152320",
    "end": "1159200"
  },
  {
    "text": "patch diffing so these talks were cut down from once black hat with remote so this is going",
    "start": "1159200",
    "end": "1165760"
  },
  {
    "text": "to be a super quick section both of the case studies have been",
    "start": "1165760",
    "end": "1170799"
  },
  {
    "text": "talked about and blogged about as well as binary patch dipping has been talked about a lot so instead i want to answer some",
    "start": "1170799",
    "end": "1177600"
  },
  {
    "text": "questions of process that haven't been answered elsewhere so the first case study is the",
    "start": "1177600",
    "end": "1182799"
  },
  {
    "text": "whatsapp volume from last summer that was allegedly used by nso",
    "start": "1182799",
    "end": "1187840"
  },
  {
    "text": "and facebook's advisory for it said it's a buffer overflow vulnerability the vulnerability and the whatsapp voip",
    "start": "1187840",
    "end": "1195280"
  },
  {
    "text": "stack which allowed rce via a series of rtcp packets so",
    "start": "1195280",
    "end": "1202880"
  },
  {
    "text": "i did a full talk on my binary patch differing process for this vulnerability um so there's the video and slides if",
    "start": "1202880",
    "end": "1209600"
  },
  {
    "text": "you want to get more in detail but from that i had some more questions of how did you decide what to",
    "start": "1209600",
    "end": "1216320"
  },
  {
    "text": "binary patch diff so just take a step back and cover that is when you have a mobile app you need",
    "start": "1216320",
    "end": "1221760"
  },
  {
    "text": "to make the decision is it ios or android that's going to largely come from your expertise",
    "start": "1221760",
    "end": "1227679"
  },
  {
    "text": "i used to be on the android security team much more expertise in android so i went down that route if you have",
    "start": "1227679",
    "end": "1234000"
  },
  {
    "text": "expertise in neither ios or android i'd guess that android is probably the easier place to start with",
    "start": "1234000",
    "end": "1239679"
  },
  {
    "text": "open tooling and things like that next the question is there's a lot of files in android apks",
    "start": "1239679",
    "end": "1246480"
  },
  {
    "text": "where do you start your diffing and first is it going to be the dalvik byte code or native code",
    "start": "1246480",
    "end": "1251600"
  },
  {
    "text": "so all the byte code is the compiled java or kotlin from an android app where native code",
    "start": "1251600",
    "end": "1257120"
  },
  {
    "text": "are libraries that are compiled crc plus plus so having read natalie silvanovic's mini",
    "start": "1257120",
    "end": "1263360"
  },
  {
    "text": "blog posts about analyzing web conferencing and video conferencing apps",
    "start": "1263360",
    "end": "1268400"
  },
  {
    "text": "um i saw that that's often a native code so and that narrowed it down to just",
    "start": "1268400",
    "end": "1274799"
  },
  {
    "text": "native libraries however whatsapp had 16 of them for each of the different architectures it",
    "start": "1274799",
    "end": "1280080"
  },
  {
    "text": "supported so the next step is figuring out which of these is do you use and thankfully i turned my",
    "start": "1280080",
    "end": "1287120"
  },
  {
    "text": "chair around asked natalie and she said oh if it's doing rtcp that's usually a string in whichever um",
    "start": "1287120",
    "end": "1294720"
  },
  {
    "text": "elf is doing that behavior and lib whatsapp just so was the only one uh that had that",
    "start": "1294720",
    "end": "1301360"
  },
  {
    "text": "string and so that is how i got to that point which is described in the other comp um conference presentation of how",
    "start": "1301360",
    "end": "1308799"
  },
  {
    "text": "i started and how i made the decision of what to do binary patch stiffing on for that",
    "start": "1308799",
    "end": "1314080"
  },
  {
    "text": "vulnerability um so i statically reverse engineered it then to understand the patch",
    "start": "1314080",
    "end": "1320880"
  },
  {
    "text": "and then use dynamic tooling a tool called frida for dynamic instrumentation to understand",
    "start": "1320880",
    "end": "1326320"
  },
  {
    "text": "how the patch function could be triggered and as i said to hear more about all of",
    "start": "1326320",
    "end": "1332640"
  },
  {
    "text": "that go ahead and check out the other presentation the other",
    "start": "1332640",
    "end": "1337919"
  },
  {
    "text": "attempt in my first failure case of attempting to root cause analysis of",
    "start": "1337919",
    "end": "1343360"
  },
  {
    "text": "vulnerability was a windows 132k vulner that was disclosed last december it was detected",
    "start": "1343360",
    "end": "1350480"
  },
  {
    "text": "by anton ivanov ivanov and alexei koulayev of kaspersky lab and the microsoft security",
    "start": "1350480",
    "end": "1358480"
  },
  {
    "text": "advisor said that it's an elevation of privileged vulnerability that exists in microsoft when the win32k component fails to",
    "start": "1358480",
    "end": "1365600"
  },
  {
    "text": "properly handle objects in memory so i've taken on this role at project zero wanting to study",
    "start": "1365600",
    "end": "1372320"
  },
  {
    "text": "more zero days that are exploited in the wild but i had no windows experience and that",
    "start": "1372320",
    "end": "1378480"
  },
  {
    "text": "seemed like a gap that i wanted to address so i figured hey this is as good a time as",
    "start": "1378480",
    "end": "1383679"
  },
  {
    "text": "ever to jump in and start looking at windows for the first time so i attempted to begin patch binary",
    "start": "1383679",
    "end": "1390080"
  },
  {
    "text": "patch stuffing this bug i thought i found it wrote up a rude cause on it wrote a pock to show how",
    "start": "1390080",
    "end": "1395679"
  },
  {
    "text": "it's triggered um finished a full blog post on it 24 hours before the blog post was set to be",
    "start": "1395679",
    "end": "1401679"
  },
  {
    "text": "published we sent it to microsoft as we do for vendors just to give a heads up 24 hours",
    "start": "1401679",
    "end": "1407840"
  },
  {
    "text": "beforehand and they came back and said nice work but this is the wrong vulnerability so i",
    "start": "1407840",
    "end": "1414559"
  },
  {
    "text": "think this is one of the weaknesses or struggles of binary patch dipping is you're looking at a monolith of",
    "start": "1414559",
    "end": "1422480"
  },
  {
    "text": "it can include lots and lots of different vulnerabilities within that file and it came down to i made a wrong",
    "start": "1422480",
    "end": "1428480"
  },
  {
    "text": "assumption as i was getting ready to patch dev of i had updated this windows 7 vm",
    "start": "1428480",
    "end": "1435360"
  },
  {
    "text": "and once i got to september the only other option windows update gave me was to update to december when the vulnerability was",
    "start": "1435360",
    "end": "1443200"
  },
  {
    "text": "patched and despite all my maneuvering in the windows update um gooey i couldn't get it to offer me an",
    "start": "1443200",
    "end": "1449279"
  },
  {
    "text": "october or november patch so i falsely or incorrectly assumed maybe they just",
    "start": "1449279",
    "end": "1456240"
  },
  {
    "text": "want those it's an old piece of software maybe they don't do monthly so i patched september to",
    "start": "1456240",
    "end": "1463600"
  },
  {
    "text": "december and it just so happened there ended up to be a vulnerability that matched all the details",
    "start": "1463600",
    "end": "1468960"
  },
  {
    "text": "i knew about the exploit but it was actually patched in october and that's not the correct vulnerability",
    "start": "1468960",
    "end": "1475120"
  },
  {
    "text": "so to hear more about that full process i did of getting up to speed on patch dipping on",
    "start": "1475120",
    "end": "1480240"
  },
  {
    "text": "windows as well as what happened and what went wrong feel free to check out the blog post",
    "start": "1480240",
    "end": "1485520"
  },
  {
    "text": "but i also think this is a great case because pielter florchik got it right and so he also documented",
    "start": "1485520",
    "end": "1491200"
  },
  {
    "text": "his process and showed how he got to the correct end result so some conclusions on binary",
    "start": "1491200",
    "end": "1500880"
  },
  {
    "text": "patch dipping as a whole it's generally the most time consuming of all the methods but it's also one of the most documented and there's",
    "start": "1500880",
    "end": "1507440"
  },
  {
    "text": "a lot of tooling that's gone into it and research gotten into it so that's cool and interesting this is",
    "start": "1507440",
    "end": "1514720"
  },
  {
    "text": "one that usually only needs to be done if you're playing the role of third parties not as much vendors or detectors",
    "start": "1514720",
    "end": "1522000"
  },
  {
    "text": "but i do think it has the highest likelihood of getting it wrong and sometimes not even realizing",
    "start": "1522000",
    "end": "1527120"
  },
  {
    "text": "you got it wrong like in my case where i ended up reversing the wrong vulnerability and so i think that's",
    "start": "1527120",
    "end": "1534559"
  },
  {
    "text": "something to get keep in mind of what's your goals and constantly evaluating against",
    "start": "1534559",
    "end": "1540720"
  },
  {
    "text": "the amount of investment resources it takes so the next category is source code",
    "start": "1540720",
    "end": "1546480"
  },
  {
    "text": "patch diffing so this will happen as i said much more often when you're looking at",
    "start": "1546480",
    "end": "1551760"
  },
  {
    "text": "vulnerabilities or exploits targeting open source software so in this case this is firefox",
    "start": "1551760",
    "end": "1557600"
  },
  {
    "text": "it was actually disclosed in january of 2020 not even though it has a 2019 cve and it",
    "start": "1557600",
    "end": "1563600"
  },
  {
    "text": "was detected by chihu samuel gross from our team analyzed it",
    "start": "1563600",
    "end": "1569200"
  },
  {
    "text": "the mozilla bug security report is now public and de-restricted but when samuel",
    "start": "1569200",
    "end": "1576720"
  },
  {
    "text": "completed his process it was not so he's going through the process of just of looking at the patch seal and only",
    "start": "1576720",
    "end": "1583520"
  },
  {
    "text": "having the information that was in the most mozilla security advisory where they said it's an incorrect alias information",
    "start": "1583520",
    "end": "1590159"
  },
  {
    "text": "an ion monkey jit compiler for setting array elements that could lead to a type confusion",
    "start": "1590159",
    "end": "1597120"
  },
  {
    "text": "so two files were changed in this patch the first one being alias analysis.cpp and so what we see",
    "start": "1597120",
    "end": "1605039"
  },
  {
    "text": "in this file is that there's this giant switch case statement and they're moving the store element",
    "start": "1605039",
    "end": "1610720"
  },
  {
    "text": "hole and the fallible store element operations from one section of the case to another",
    "start": "1610720",
    "end": "1616799"
  },
  {
    "text": "okay so we're looking at store element whole infallible store element the other change is much more",
    "start": "1616799",
    "end": "1622640"
  },
  {
    "text": "informative so it's in mir.h which is medium",
    "start": "1622640",
    "end": "1627679"
  },
  {
    "text": "intermediate representation i think the mi might have gotten wrong but you get the gist and so we see that",
    "start": "1627679",
    "end": "1635760"
  },
  {
    "text": "they're actually only doing deletions and so the vulnerability is within the",
    "start": "1635760",
    "end": "1641279"
  },
  {
    "text": "alias information and this alias information describes any side effects",
    "start": "1641279",
    "end": "1646799"
  },
  {
    "text": "a jit operation can have so in this case they're changing the store",
    "start": "1646799",
    "end": "1652159"
  },
  {
    "text": "element whole infallible store element operations and what they're doing is that originally",
    "start": "1652159",
    "end": "1658480"
  },
  {
    "text": "the code said that store element hole and fallible store element the side effects they can have is they can only influence",
    "start": "1658480",
    "end": "1665120"
  },
  {
    "text": "the object fields in the element fields but this was incorrect because they could actually influence um",
    "start": "1665120",
    "end": "1672240"
  },
  {
    "text": "anything and so by deleting this they're now telling the jit compiler hey",
    "start": "1672240",
    "end": "1678880"
  },
  {
    "text": "store element hall infallible store element need to be more",
    "start": "1678880",
    "end": "1684640"
  },
  {
    "text": "generalized so if you execute one of these assume anything can be changed",
    "start": "1684640",
    "end": "1690480"
  },
  {
    "text": "and looking at this samuel was like immediately this is an incorrect side",
    "start": "1690480",
    "end": "1696000"
  },
  {
    "text": "effect modeling issue in the jit engine samuel also an expert in this",
    "start": "1696000",
    "end": "1701279"
  },
  {
    "text": "bug class specifically as well as jet engine exploitation so from there he had the bug class",
    "start": "1701279",
    "end": "1708320"
  },
  {
    "text": "within you know a couple minutes of opening the patch but it still took him two days to figure out the poc",
    "start": "1708320",
    "end": "1714640"
  },
  {
    "text": "so the process he went through is from looking at that patch he was like huh this likely causes unexpected",
    "start": "1714640",
    "end": "1720640"
  },
  {
    "text": "execution of arbitrary javascript um maybe that's indexed indexed accessors",
    "start": "1720640",
    "end": "1727600"
  },
  {
    "text": "in the prototype chain no legit compiler guards against that",
    "start": "1727600",
    "end": "1733520"
  },
  {
    "text": "but the thing is is they will happily accept negative numbers as the index and so",
    "start": "1733520",
    "end": "1739760"
  },
  {
    "text": "when they accept that negative number as the index it allows writing a property and not an element and these are arrays",
    "start": "1739760",
    "end": "1746480"
  },
  {
    "text": "so you're writing the array property instead of an array element and so if there's a property",
    "start": "1746480",
    "end": "1753440"
  },
  {
    "text": "setter on the property negative one that will pass the jits requirements um",
    "start": "1753440",
    "end": "1759039"
  },
  {
    "text": "about what input objects are allowed but it's also going to cause unexpected execution of javascript",
    "start": "1759039",
    "end": "1765840"
  },
  {
    "text": "during those two operations so that's through cause vulnerability",
    "start": "1765840",
    "end": "1771600"
  },
  {
    "text": "and so from that i thought it was interesting in this case how samuel was like it was immediately",
    "start": "1771600",
    "end": "1777279"
  },
  {
    "text": "obvious to me what that bug class was but to get down to fully understand the vulnerability such",
    "start": "1777279",
    "end": "1783919"
  },
  {
    "text": "that you can write a trigger or poc for it it took much more time and so that keeps us thinking of huh",
    "start": "1783919",
    "end": "1790799"
  },
  {
    "text": "with someone with minimal or no experience have been able to figure it out as well i think that experience probably was",
    "start": "1790799",
    "end": "1796960"
  },
  {
    "text": "pretty critical the second case study here is another",
    "start": "1796960",
    "end": "1802559"
  },
  {
    "text": "firefox bug because i thought it would be interesting to do a tale of two firefoxes and compare them and this is another",
    "start": "1802559",
    "end": "1808720"
  },
  {
    "text": "failure case if we want to call back or learning you know development opportunity",
    "start": "1808720",
    "end": "1813760"
  },
  {
    "text": "um so this one was disclosed in april of this year and it was detected by francisco alonso",
    "start": "1813760",
    "end": "1819600"
  },
  {
    "text": "and javier marcus and the security advisory said under certain conditions when handling a",
    "start": "1819600",
    "end": "1825679"
  },
  {
    "text": "readable stream a race condition can cause a use after free sees pretty descriptive and you know",
    "start": "1825679",
    "end": "1833279"
  },
  {
    "text": "talking about readable strings race conditions used after free so the bug was still de-restricted",
    "start": "1833279",
    "end": "1840159"
  },
  {
    "text": "mozilla usually keeps them it seems de-restricted for three to six months-ish but we had the",
    "start": "1840159",
    "end": "1846399"
  },
  {
    "text": "patch cl so the patch is actually in the cache",
    "start": "1846399",
    "end": "1852159"
  },
  {
    "text": "subsystem in the streamless.cpp file this is the only file that was",
    "start": "1852159",
    "end": "1857279"
  },
  {
    "text": "changed and they only changed this one function streamless close all and so the changes",
    "start": "1857279",
    "end": "1863200"
  },
  {
    "text": "is that originally streamless close all would call on the stream control object close all",
    "start": "1863200",
    "end": "1871120"
  },
  {
    "text": "stream control is the parent or the browser side of the ipdl interface so this actually took me a while to",
    "start": "1871120",
    "end": "1876880"
  },
  {
    "text": "figure out because like the windows one i had no browser experience but thought huh i",
    "start": "1876880",
    "end": "1882080"
  },
  {
    "text": "want to give this firefox thing a shot and see how this turns out and so ibdl it turns out is the ipc",
    "start": "1882080",
    "end": "1888399"
  },
  {
    "text": "mechanism within firefox so it's allowing browser side process to communicate with a",
    "start": "1888399",
    "end": "1894159"
  },
  {
    "text": "render or content side process so",
    "start": "1894159",
    "end": "1899200"
  },
  {
    "text": "what they're doing is instead of just calling close all they're first setting that stream control pointer to null and then calling the stream",
    "start": "1899200",
    "end": "1906159"
  },
  {
    "text": "control close all and then calling shutdown",
    "start": "1906159",
    "end": "1910799"
  },
  {
    "text": "so if we're setting it to null my first thought is where else is stream control checked",
    "start": "1911279",
    "end": "1917519"
  },
  {
    "text": "what else can it influence and so it turns out there's four different places that check whether or not stream control is null",
    "start": "1917519",
    "end": "1924399"
  },
  {
    "text": "and each of these functions if stream control is not null we'll call close",
    "start": "1924399",
    "end": "1931200"
  },
  {
    "text": "or shut down on the stream control so my first thought about this is suddenly huh maybe that",
    "start": "1931200",
    "end": "1937840"
  },
  {
    "text": "used after free is two threads two of these calls racing with each other such that in one case",
    "start": "1937840",
    "end": "1943200"
  },
  {
    "text": "it's freed and then they're still calling the other clothes are shut down and so this seemed to start panning out",
    "start": "1943200",
    "end": "1949279"
  },
  {
    "text": "because the shutdown call will end up calling sends delete which does the free",
    "start": "1949279",
    "end": "1954799"
  },
  {
    "text": "on the stream control so my process after this of what i thought you know coming in with a very",
    "start": "1954799",
    "end": "1961120"
  },
  {
    "text": "naive not really knowing ipdl or any browser internals so my first thought is figure out how to",
    "start": "1961120",
    "end": "1967120"
  },
  {
    "text": "trigger streamless clothes all and that actually happened pretty quickly figured out",
    "start": "1967120",
    "end": "1972840"
  },
  {
    "text": "caches.delete that's how i can call it the next step was i thought huh maybe i",
    "start": "1972840",
    "end": "1979279"
  },
  {
    "text": "should find two ways to trigger it because um that is how uh",
    "start": "1979279",
    "end": "1984559"
  },
  {
    "text": "it might have to race or something like that um so to do that which um i got some suggestions from sergey",
    "start": "1984559",
    "end": "1991600"
  },
  {
    "text": "and i think samuel or mark on our team that run the unit tests",
    "start": "1991600",
    "end": "1996880"
  },
  {
    "text": "for it to see if anything else can trigger that code so that's what i did and i found that",
    "start": "1996880",
    "end": "2002640"
  },
  {
    "text": "there was this other function that allowed it but this highlighted where i'd made a wrong assumption",
    "start": "2002640",
    "end": "2008080"
  },
  {
    "text": "of there this and another vulnerability were both disclosed at the same time so you make",
    "start": "2008080",
    "end": "2013600"
  },
  {
    "text": "the safe assumption of one's going to be a renderer exploit and what's going to be the sandbox escape i had for some reason i don't",
    "start": "2013600",
    "end": "2021200"
  },
  {
    "text": "know that i made the conscious decision but i'd been operating as if this was the renderer exploit",
    "start": "2021200",
    "end": "2027519"
  },
  {
    "text": "but you couldn't call clear storages for principle from an unprivileged you know renderer",
    "start": "2027519",
    "end": "2035519"
  },
  {
    "text": "and that's when i realized that no streamless close all is on the browser side and so this is actually the sandbox",
    "start": "2035519",
    "end": "2043440"
  },
  {
    "text": "escape and the other one was the render exploit so now we can operate as if we have a compromise renderer and",
    "start": "2043440",
    "end": "2050240"
  },
  {
    "text": "that's how we're triggering this vulnerability so the next step i thought was huh so",
    "start": "2050240",
    "end": "2055760"
  },
  {
    "text": "now let's try and do this from two different threads there's a race condition going on but i can never get that",
    "start": "2055760",
    "end": "2061679"
  },
  {
    "text": "and it makes sense now that i understand more about ipdl of that there's only one parent side of that interface but with",
    "start": "2061679",
    "end": "2068800"
  },
  {
    "text": "all of my tests i could only get the calls queued not in a place where they race with each",
    "start": "2068800",
    "end": "2074000"
  },
  {
    "text": "other and at that point i decide it's time for me to move on i had a look at what was the return on",
    "start": "2074000",
    "end": "2080638"
  },
  {
    "text": "investment when i knew the bug would be restricted at some point and the reporters of the exploit had",
    "start": "2080639",
    "end": "2087280"
  },
  {
    "text": "also said they'd write a blog post so that's where i decided to pause call it",
    "start": "2087280",
    "end": "2092398"
  },
  {
    "text": "and i actually started more research on ipdl because i thought this would be interesting to learn more about",
    "start": "2092399",
    "end": "2098560"
  },
  {
    "text": "fast forward i had spent more time learning ipdl internals and the bug is de-restricted",
    "start": "2098560",
    "end": "2104720"
  },
  {
    "text": "um and it realized i got it wrong this what didn't need to be the process",
    "start": "2104720",
    "end": "2109920"
  },
  {
    "text": "um it's not actually a race condition of trying to get two of those calls to race with each other from different",
    "start": "2109920",
    "end": "2116240"
  },
  {
    "text": "threads instead you're actually there's a recursion happening that allows for the use after",
    "start": "2116240",
    "end": "2121920"
  },
  {
    "text": "free so i've made an incorrect assumption that led to me going down a process that of course was going to",
    "start": "2121920",
    "end": "2127680"
  },
  {
    "text": "have me spin my wheels and so some closing thoughts of nope",
    "start": "2127680",
    "end": "2133200"
  },
  {
    "text": "i didn't figure out the root cause vulnerability in a timely way i ran into a couple of hurdles of",
    "start": "2133200",
    "end": "2139839"
  },
  {
    "text": "assuming it was a render exploit not the sandbox escape as well as getting stuck in ipl internals and trusting the term",
    "start": "2139839",
    "end": "2147680"
  },
  {
    "text": "race condition um but it's also promising of that as soon as the bug",
    "start": "2147680",
    "end": "2152720"
  },
  {
    "text": "report was de-restricted it was really obvious to me exactly what the vulnerability was which means likely more prepared",
    "start": "2152720",
    "end": "2160320"
  },
  {
    "text": "in the future and so i hope no one gets discouraged if you have failures early on but want to",
    "start": "2160320",
    "end": "2166000"
  },
  {
    "text": "get into the stuff of just keep going just keep working it's a normal part of the process",
    "start": "2166000",
    "end": "2172079"
  },
  {
    "text": "and a few more source code patch differing conclusions as i'm getting tied on time of more likelihood of getting correct",
    "start": "2172079",
    "end": "2179760"
  },
  {
    "text": "than binary patch diffing due to it only being one fix at a time but i think something we have to",
    "start": "2179760",
    "end": "2185280"
  },
  {
    "text": "remember is that in order to do source code patch diving effectively we do really rely on transparency from",
    "start": "2185280",
    "end": "2192000"
  },
  {
    "text": "vendors i know vendors um don't do transparency exactly to prevent source code patch stiffing but",
    "start": "2192000",
    "end": "2199200"
  },
  {
    "text": "we need to remember that in those cases the attackers still know what the vulnerability is so they are operating with",
    "start": "2199200",
    "end": "2205760"
  },
  {
    "text": "more knowledge about what went on in the security issues than us as the defenders so hopefully",
    "start": "2205760",
    "end": "2212720"
  },
  {
    "text": "vendors will continue to be transparent that this is a security fix or this fix in",
    "start": "2212720",
    "end": "2217920"
  },
  {
    "text": "our repos was for this bug for example",
    "start": "2217920",
    "end": "2224720"
  },
  {
    "text": "so lastly super quickly um sometimes you get tips about an exploit",
    "start": "2224720",
    "end": "2230240"
  },
  {
    "text": "and that happened for me on the android binder bug that i reported and was disclosed last",
    "start": "2230240",
    "end": "2235680"
  },
  {
    "text": "fall so how it started i received a scripted list of characteristics about the exploit",
    "start": "2235680",
    "end": "2241760"
  },
  {
    "text": "i go into this in full details about the process what happened if you want to know why we you know all",
    "start": "2241760",
    "end": "2248800"
  },
  {
    "text": "that stuff in the blog post as well as an offensive con presentation but what i wanted to highlight is so i",
    "start": "2248800",
    "end": "2255200"
  },
  {
    "text": "got these details what do you do with it because this isn't something that never happens in our industry it actually happens",
    "start": "2255200",
    "end": "2261119"
  },
  {
    "text": "a fair amount for people but it can seem very intimidating to be where do i start so first i",
    "start": "2261119",
    "end": "2268079"
  },
  {
    "text": "combed through change logs and patches because that was one of the big things and the focus was how do i break this down and use",
    "start": "2268079",
    "end": "2274000"
  },
  {
    "text": "programmatic efforts to really narrow down the area i need to",
    "start": "2274000",
    "end": "2279119"
  },
  {
    "text": "search for so for me that was what's in pixel 3 but not pixel 2 as well as using the linux kernel mailing list",
    "start": "2279119",
    "end": "2285760"
  },
  {
    "text": "to look for any patches that affected listad or list dell due to the information in the description about",
    "start": "2285760",
    "end": "2291680"
  },
  {
    "text": "config debug list and so one thing that haven't talked about as much is that i",
    "start": "2291680",
    "end": "2297359"
  },
  {
    "text": "originally thought i found the bug but once i got into finally comparing it to all the details",
    "start": "2297359",
    "end": "2302400"
  },
  {
    "text": "it didn't match a single one of those it didn't match one of those details it matched all the rest",
    "start": "2302400",
    "end": "2307760"
  },
  {
    "text": "and the other thing is sure maybe things have changed since the detail list had come out but it also seemed very complex to",
    "start": "2307760",
    "end": "2314400"
  },
  {
    "text": "exploit when you could likely find an easier bug to exploit and so it just didn't feel right",
    "start": "2314400",
    "end": "2320560"
  },
  {
    "text": "but getting one more detail allowed me to find it within i think it was one or two working days",
    "start": "2320560",
    "end": "2326160"
  },
  {
    "text": "um and so using that information to identify exactly what the vulnerability was with",
    "start": "2326160",
    "end": "2332800"
  },
  {
    "text": "um extremely high level of confidence nothing else matched um can just make a difference",
    "start": "2332800",
    "end": "2339359"
  },
  {
    "text": "and so some of the the biggest thing i would like to highlight here is that when we're talking about role",
    "start": "2339359",
    "end": "2345040"
  },
  {
    "text": "and we're talking about investment is that oftentimes if you receive these details about the exploit",
    "start": "2345040",
    "end": "2350079"
  },
  {
    "text": "it means that it is still actively being exploited with no one knows what the patch is no patch",
    "start": "2350079",
    "end": "2355680"
  },
  {
    "text": "has been deployed and so there is a much bigger return on that investment",
    "start": "2355680",
    "end": "2361200"
  },
  {
    "text": "of really going in because otherwise it's going to continue to be exploited without being fixed so i hope we all try and do that",
    "start": "2361200",
    "end": "2369280"
  },
  {
    "text": "as well as continue to build tooling that allows some of those details to be searchable programmatically",
    "start": "2369280",
    "end": "2374480"
  },
  {
    "text": "rather than having to be manual that was whirlwind but my conclusion for",
    "start": "2374480",
    "end": "2380640"
  },
  {
    "text": "you is that one i think there's a lot of innovation happening in this process that we can",
    "start": "2380640",
    "end": "2387040"
  },
  {
    "text": "share with each other even though we tend to talk about it as reverse engineering as a monolith",
    "start": "2387040",
    "end": "2392320"
  },
  {
    "text": "but i thought it was really cool you know the test case minimizer forcing crash while running etc",
    "start": "2392320",
    "end": "2398240"
  },
  {
    "text": "so i hope we all continue to share the different techniques we use with each other [Music]",
    "start": "2398240",
    "end": "2403599"
  },
  {
    "text": "and i would also say something that's been struggle for me is making sure i challenge any",
    "start": "2403599",
    "end": "2409680"
  },
  {
    "text": "assumptions that come from descriptions whether that's people's blog posts or an advisory is not taking that as",
    "start": "2409680",
    "end": "2417119"
  },
  {
    "text": "you know sort of the word but really thinking about because a lot of the terms of art we use",
    "start": "2417119",
    "end": "2422560"
  },
  {
    "text": "can mean slightly different things to different people but lastly the biggest guarantor for",
    "start": "2422560",
    "end": "2427760"
  },
  {
    "text": "success is in in-depth knowledge of the target and exploit death and that's not shocking",
    "start": "2427760",
    "end": "2433200"
  },
  {
    "text": "um to any of us especially when you consider how many people report bugs",
    "start": "2433200",
    "end": "2439520"
  },
  {
    "text": "or exploits without doing that root cause vulnerability analysis they just send it to a vendor with a crash",
    "start": "2439520",
    "end": "2445040"
  },
  {
    "text": "or a sample because it is hard and it's not a specific technique is going to fix",
    "start": "2445040",
    "end": "2450480"
  },
  {
    "text": "that but the cool thing is is we can all grow experience we can work on growing our red team exploit dev",
    "start": "2450480",
    "end": "2457040"
  },
  {
    "text": "knowledge we can work on really digging into a single platform so we can all do this and continue to contribute to that root causing",
    "start": "2457040",
    "end": "2464319"
  },
  {
    "text": "and with that thank you i hope you enjoyed this from your couch and your sweats and as i said there's lots of resources",
    "start": "2464319",
    "end": "2470960"
  },
  {
    "text": "um available as well as the detailed root cause analysis for each of these zero days as well as",
    "start": "2470960",
    "end": "2476480"
  },
  {
    "text": "others on the project zero website so thank you",
    "start": "2476480",
    "end": "2481839"
  },
  {
    "text": "hello um thank you all for coming i've been told that i did a very long talk so",
    "start": "2481839",
    "end": "2486880"
  },
  {
    "text": "we don't really have any time for questions but i appreciate y'all tuning in feel free to contact me on twitter or my",
    "start": "2486880",
    "end": "2493920"
  },
  {
    "text": "email is maddiestone at google if you want to talk more about this um as well as i'll get the slides up",
    "start": "2493920",
    "end": "2499760"
  },
  {
    "text": "and lots of resources and i'll stay on chat for a little bit longer so thanks again",
    "start": "2499760",
    "end": "2508559"
  }
]