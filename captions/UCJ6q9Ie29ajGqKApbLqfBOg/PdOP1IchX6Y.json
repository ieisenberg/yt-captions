[
  {
    "text": "good afternoon comrades and friends thank you so much for coming um we call this talk",
    "start": "2520",
    "end": "8160"
  },
  {
    "text": "something rotten in the state of data centers which is just a tongue-and-cheek way of saying that we found a lot of",
    "start": "8160",
    "end": "14000"
  },
  {
    "text": "Odes in device management software that's commonly found in data centers and we're very excited to be here to",
    "start": "14000",
    "end": "19800"
  },
  {
    "text": "finally talk about it so I'm Jesse chick I'm a",
    "start": "19800",
    "end": "24960"
  },
  {
    "text": "vulnerability researcher and I'm actually currently looking for a new gig so if you like what you see and could",
    "start": "24960",
    "end": "30439"
  },
  {
    "text": "make use of somebody with my skill set I'd love to talk um you know where to find me and I'm Casmir Schultz I'm a",
    "start": "30439",
    "end": "37320"
  },
  {
    "text": "principal security researcher over at Hidden layer if you want to talk to me about this research or any of my other research you can contact me on Twitter",
    "start": "37320",
    "end": "43600"
  },
  {
    "text": "or LinkedIn um let's get started so just a quick road map of the ground that we're going to be covering here today um",
    "start": "43600",
    "end": "50719"
  },
  {
    "text": "we'll first of all justify research or sorry data centers as a viable inquiry",
    "start": "50719",
    "end": "55920"
  },
  {
    "text": "for research line of inquiry and then Casmir will talk about our first Target",
    "start": "55920",
    "end": "61559"
  },
  {
    "text": "which is a DDI solution for all things IP addresses and then I'll take us over",
    "start": "61559",
    "end": "67439"
  },
  {
    "text": "to the hardware side then talk about a KVM that is not a colonel Virtual Machine by the way just to disambiguate",
    "start": "67439",
    "end": "72920"
  },
  {
    "text": "terms and then we'll leave you with some closing remarks and key takeaways so jumping right into it why",
    "start": "72920",
    "end": "80640"
  },
  {
    "text": "data centers well there really isn't anybody out there whose digital life is not affected one way or another by data",
    "start": "80640",
    "end": "87200"
  },
  {
    "text": "center security um it's very much much at the intersection of corporate and",
    "start": "87200",
    "end": "92799"
  },
  {
    "text": "governmental concerns um which makes it a very high impact uh Vector for threat actors so we",
    "start": "92799",
    "end": "101079"
  },
  {
    "text": "like to do the most the most relevant research that we can generates Buzz tends to be more interesting for us from",
    "start": "101079",
    "end": "106920"
  },
  {
    "text": "a technical perspective so that's why we showed up here and it also happens to be",
    "start": "106920",
    "end": "112240"
  },
  {
    "text": "of significant National interest and at risk it's sounding overly provincial uh the US government has recently been",
    "start": "112240",
    "end": "119000"
  },
  {
    "text": "taking a heightened interest in in data center security trying to raise that that threshold and I've been made aware",
    "start": "119000",
    "end": "126000"
  },
  {
    "text": "that similar efforts are going on in in the UK K in the United Kingdom and um throughout the rest of the of the of the",
    "start": "126000",
    "end": "132480"
  },
  {
    "text": "of the western world we also notice that there's very little endend like publicly",
    "start": "132480",
    "end": "137680"
  },
  {
    "text": "available vul research um in this space so we kind of wanted to tap a little bit of new ground at least as far as",
    "start": "137680",
    "end": "143000"
  },
  {
    "text": "publicly disclosed stuff goes and on the whole as we suspected a lot of these",
    "start": "143000",
    "end": "149120"
  },
  {
    "text": "devices are every bit as vulnerable as as the others that you see in everyday",
    "start": "149120",
    "end": "154920"
  },
  {
    "text": "life so if you're interested we won't dwell here you can check out the talk that Sam Quinn and I gave at Defcon that",
    "start": "154920",
    "end": "161000"
  },
  {
    "text": "covered the power management component of this larger research effort on the part of our former team um and with that",
    "start": "161000",
    "end": "168840"
  },
  {
    "text": "I will hand it over to Cass to talk about our software hack thank you Jesse so to get started with what you're all",
    "start": "168840",
    "end": "175120"
  },
  {
    "text": "here uh for I mean zero days right everyone wants to hear about zero days so we're going to get started started with the software side of things so as",
    "start": "175120",
    "end": "181440"
  },
  {
    "text": "Jesse mentioned today we have software and Hardware uh so let's get started what some of you might have noticed in",
    "start": "181440",
    "end": "187159"
  },
  {
    "text": "our outline slide is that we said mystery vendor and the reason for that is there were some delays in responsible",
    "start": "187159",
    "end": "193159"
  },
  {
    "text": "disclosure so the first Target is just going to be referred to as Project X uh",
    "start": "193159",
    "end": "198280"
  },
  {
    "text": "we were very lucky that the vendor was kind enough to actually let us continue doing the talk despite the delays uh so",
    "start": "198280",
    "end": "203920"
  },
  {
    "text": "we just want to give them a thank you so Project X Project X is a DDI and for",
    "start": "203920",
    "end": "209000"
  },
  {
    "text": "those of you that don't know know a DDI is a solution that integrates DNS DHCP and IPM and don't worry I'll go over",
    "start": "209000",
    "end": "215519"
  },
  {
    "text": "those in a second so DDI are great they're really uh they provide efficient and secure network management for",
    "start": "215519",
    "end": "221799"
  },
  {
    "text": "anything any networks that have a lot of devices and data centers tend to be like that so ddis make a great resource for",
    "start": "221799",
    "end": "229319"
  },
  {
    "text": "data centers ddis have three components the first is the DNS which provides easy",
    "start": "229319",
    "end": "234920"
  },
  {
    "text": "and reliable access to Resources by adding domain names instead of IP addresses a lot everything a lot easier",
    "start": "234920",
    "end": "241239"
  },
  {
    "text": "to access DHCP on the other hand automates the assignment of IP addresses to",
    "start": "241239",
    "end": "246599"
  },
  {
    "text": "devices and then finally we have ipam which helps manage and organize unique IP addresses to specific devices so",
    "start": "246599",
    "end": "253879"
  },
  {
    "text": "let's say that you have one device that always has to have a very unique IP address and it can't change that's when",
    "start": "253879",
    "end": "258880"
  },
  {
    "text": "you would use ipem to manage that so now that we've talked about what Project X is let's actually talk about the",
    "start": "258880",
    "end": "264759"
  },
  {
    "text": "architecture of Project X so Project X is split into two main components the web web server and the control server",
    "start": "264759",
    "end": "272080"
  },
  {
    "text": "the web server hosts the management website so that means anything you want to do on the control server so if you",
    "start": "272080",
    "end": "277120"
  },
  {
    "text": "want to set up DNS DHCP anything like that has to go through the web server",
    "start": "277120",
    "end": "282280"
  },
  {
    "text": "that means it also handles all the user interactions and session management uh and the reason why it handle session",
    "start": "282280",
    "end": "288080"
  },
  {
    "text": "management is because it can be connected to multiple different control servers so that means one web server can",
    "start": "288080",
    "end": "293759"
  },
  {
    "text": "be used to control two three however many control servers you want control servers on the other hand control all",
    "start": "293759",
    "end": "300360"
  },
  {
    "text": "the individual components so that means it's in charge of the actual DNS the dhtp everything like that and since the",
    "start": "300360",
    "end": "307479"
  },
  {
    "text": "web server can be used to authenticate against multiple different control servers the control server is what",
    "start": "307479",
    "end": "313280"
  },
  {
    "text": "actually controls the authentication so that means while the web server handles all the session management the web the",
    "start": "313280",
    "end": "319960"
  },
  {
    "text": "control server is used otherwise you'd be able to authenticate against any server which would be bad and then",
    "start": "319960",
    "end": "325520"
  },
  {
    "text": "finally the control server also handles all logging and while this might not seem important now it is fairly",
    "start": "325520",
    "end": "330560"
  },
  {
    "text": "important and we'll get into that in a second as some of you might have seen in our outline we had a fairly complete",
    "start": "330560",
    "end": "336720"
  },
  {
    "text": "attack chain and that was centered around our authenticated command injection and I know what you're",
    "start": "336720",
    "end": "341880"
  },
  {
    "text": "thinking authenticated is probably not really a full attack chain but trust me it get good so the way that our",
    "start": "341880",
    "end": "347960"
  },
  {
    "text": "authenticated command injection worked is that the web server had a system where admins could run scripts on the",
    "start": "347960",
    "end": "353560"
  },
  {
    "text": "control server these scripts had to be manually added to the control server so none of that could be added remotely so",
    "start": "353560",
    "end": "360120"
  },
  {
    "text": "that in itself was not really an attack path um since you had to actually have physical access the way that the system",
    "start": "360120",
    "end": "367599"
  },
  {
    "text": "worked is that was almost an event hook so you would set up this hook and then you'd tell it what type of events to",
    "start": "367599",
    "end": "373639"
  },
  {
    "text": "trigger on so that's if an IP range was added things like that and the way that worked is that you gave the hook a",
    "start": "373639",
    "end": "380039"
  },
  {
    "text": "script name and that script name had to exist in that folder what the control server then did is if the event was",
    "start": "380039",
    "end": "386840"
  },
  {
    "text": "triggered the control server would just run a shell with that script name and that's where the command injection came",
    "start": "386840",
    "end": "392720"
  },
  {
    "text": "in no validation was done at all on either the web server or the control server which meant that we could input",
    "start": "392720",
    "end": "398880"
  },
  {
    "text": "whatever we wanted and here's just an example of what we kind of inputed so as",
    "start": "398880",
    "end": "403960"
  },
  {
    "text": "you can see since we were able to input whatever we just used python DC when we were originally testing this we did use",
    "start": "403960",
    "end": "410240"
  },
  {
    "text": "open and then a file right because that's a little bit easier to see however that did not fit on the slides",
    "start": "410240",
    "end": "415879"
  },
  {
    "text": "so we scaled it back down and that's why logging is important because we were able to print and then check in the logs",
    "start": "415879",
    "end": "421039"
  },
  {
    "text": "that was also still valid now an authenticated command injection while it's great that you get remote code",
    "start": "421039",
    "end": "426720"
  },
  {
    "text": "execution it's not very useful especially if you need admin access and there's only one or two admin",
    "start": "426720",
    "end": "432319"
  },
  {
    "text": "accounts so what we did is we decided to try to find a way to bypass authentication and as reverse Engineers",
    "start": "432319",
    "end": "438840"
  },
  {
    "text": "before we can actually bypass anything we have to go and figure out how it works so we did that and I'm going to",
    "start": "438840",
    "end": "444199"
  },
  {
    "text": "talk about that a bit so as I mentioned the web server can contact multiple different control servers and manage",
    "start": "444199",
    "end": "450280"
  },
  {
    "text": "them so when the user at first messages the web server to connect to a control",
    "start": "450280",
    "end": "455440"
  },
  {
    "text": "server they have to give them the server IP as well as the user credentials where they're trying to log in the web server",
    "start": "455440",
    "end": "462080"
  },
  {
    "text": "will then initiate an https request over to the control server which then validates the credentials and then",
    "start": "462080",
    "end": "468440"
  },
  {
    "text": "rather than responding right away what the control server does is it directly connects to an open port on the web",
    "start": "468440",
    "end": "474199"
  },
  {
    "text": "server um which I see a few eyes are kind of happy there about an open port and that's valid um so once the web",
    "start": "474199",
    "end": "481759"
  },
  {
    "text": "server then actually receives that direct connection it tries to establish a session it generates a session ID",
    "start": "481759",
    "end": "488360"
  },
  {
    "text": "which is then sent back to the control server and then all the control server does is it logs that session ID and then",
    "start": "488360",
    "end": "494199"
  },
  {
    "text": "sends it back as a response to the original https request which is then received by the web server and then both",
    "start": "494199",
    "end": "500400"
  },
  {
    "text": "of these can then use the session ID to authenticate against each other what's important to note here is that the",
    "start": "500400",
    "end": "506440"
  },
  {
    "text": "control server does not need any Authentication after this point so as long as you have the session ID any",
    "start": "506440",
    "end": "513000"
  },
  {
    "text": "requests from any location so you don't even have to go through the web server uh as long as the session ID is in there",
    "start": "513000",
    "end": "518599"
  },
  {
    "text": "you can control anything and do you know the authenticated command injection um",
    "start": "518599",
    "end": "524240"
  },
  {
    "text": "so now that we've talked about the general authentication process here there's still that black blackb blackbox",
    "start": "524240",
    "end": "531200"
  },
  {
    "text": "item we don't know how session ID is generated and that's the important part we need to see if there's some way that",
    "start": "531200",
    "end": "536240"
  },
  {
    "text": "we can make our own or fake it so so let's talk about the generation of session IDs as I mentioned earlier when",
    "start": "536240",
    "end": "544040"
  },
  {
    "text": "the control server responds to or connects to the web server it tries to create a session and this is some of the",
    "start": "544040",
    "end": "550600"
  },
  {
    "text": "code from the web server so there's this add session function and in here they built this custom random and this custom",
    "start": "550600",
    "end": "557120"
  },
  {
    "text": "Rand string function and the way that it works is when you initially connect and the session is created it will then",
    "start": "557120",
    "end": "563760"
  },
  {
    "text": "initialize the random function and it does that for every single connection and then it will call that Rand string",
    "start": "563760",
    "end": "569480"
  },
  {
    "text": "function to actually generate the session ID and while this was in theory a fairly good authentication process and",
    "start": "569480",
    "end": "576519"
  },
  {
    "text": "a way to create session IDs there was a fatal flaw in the design So Random",
    "start": "576519",
    "end": "581680"
  },
  {
    "text": "relies on a seed which most prngs do uh called gced and here you can actually",
    "start": "581680",
    "end": "587079"
  },
  {
    "text": "see the code that generates gced and what a few of you might have noticed is that gced is only set once so when you",
    "start": "587079",
    "end": "595279"
  },
  {
    "text": "see here when the server starts it calls gced and we get this uh time in seconds",
    "start": "595279",
    "end": "600720"
  },
  {
    "text": "and the time in milliseconds and we exor them together but then what we do is rather than resp uh returning the value",
    "start": "600720",
    "end": "606920"
  },
  {
    "text": "right away we actually set gced so that every time uh it's called in the future",
    "start": "606920",
    "end": "612160"
  },
  {
    "text": "rather than calling this function it just returns that value so that seed is uh decided once the server set and does",
    "start": "612160",
    "end": "619160"
  },
  {
    "text": "not change anymore however when a new session ID is generated so when we initialize that",
    "start": "619160",
    "end": "625040"
  },
  {
    "text": "random GC is updated uh and that that's what then changes uh the session IDs",
    "start": "625040",
    "end": "631200"
  },
  {
    "text": "that are generated in the future however it's updated deterministically so if you are able to get that initial G seed you",
    "start": "631200",
    "end": "637639"
  },
  {
    "text": "can do all of the deterministic updates and get all the seeds so what this means is if you do get gced you can predict",
    "start": "637639",
    "end": "644839"
  },
  {
    "text": "and generate every past and every future generated session ID that was created by",
    "start": "644839",
    "end": "650000"
  },
  {
    "text": "that web server and what this means is if you do know the start time of the server you",
    "start": "650000",
    "end": "655519"
  },
  {
    "text": "can fairly easily get the actual um seed and then all the geds or all the session",
    "start": "655519",
    "end": "660839"
  },
  {
    "text": "IDs however most people don't know that I mean Jesse do you know about that when the server starts no no right okay I",
    "start": "660839",
    "end": "668120"
  },
  {
    "text": "don't think any of us do so what we needed to do was we needed a way to go above and beyond that and without",
    "start": "668120",
    "end": "673880"
  },
  {
    "text": "knowing the start time uh we had to figure out some way to bypass that and what we saw was that the top bite",
    "start": "673880",
    "end": "679839"
  },
  {
    "text": "changes fairly infrequently and the reason for that is conversion um most of",
    "start": "679839",
    "end": "686040"
  },
  {
    "text": "you who've dealt with C or C++ have probably seen the horrors of type conversions and what can do to your code",
    "start": "686040",
    "end": "691720"
  },
  {
    "text": "and once again it hit this project as well so as you saw earlier GC is",
    "start": "691720",
    "end": "697279"
  },
  {
    "text": "generated by xoring the value of the time in milliseconds and the time in seconds and some of you with Keen eyes",
    "start": "697279",
    "end": "703079"
  },
  {
    "text": "might have noticed that milliseconds is actually a 64-bit value while seconds and GCS are both 32-bit values and uh",
    "start": "703079",
    "end": "710399"
  },
  {
    "text": "for those of you that you know might see that uh here let me just give you a graphic real quick so what that means is",
    "start": "710399",
    "end": "717000"
  },
  {
    "text": "all that possible space that we would have to Brute force is suddenly cut in half or a lot more than half um but when",
    "start": "717000",
    "end": "723920"
  },
  {
    "text": "the xor value gets set and what this means is that unlike 64-bit values 32bit",
    "start": "723920",
    "end": "730360"
  },
  {
    "text": "values are fairly brute forceable with about 4.3 billion combinations however",
    "start": "730360",
    "end": "735680"
  },
  {
    "text": "you know that's a bit slow for us we were not you know satisfied with 4.3 billion combinations but as I mentioned",
    "start": "735680",
    "end": "742360"
  },
  {
    "text": "because it uses seconds and milliseconds the top bite changes fairly and frequently and it actually changes so uh",
    "start": "742360",
    "end": "749240"
  },
  {
    "text": "little that it only changes every 1.9 days which meant that if you knew within",
    "start": "749240",
    "end": "754519"
  },
  {
    "text": "1.9 days of when the server started rather than the 4.3 billion combinations that you had to try to brute force it",
    "start": "754519",
    "end": "761399"
  },
  {
    "text": "was only 16.7 million combinations and while knowing that range still is not",
    "start": "761399",
    "end": "767880"
  },
  {
    "text": "you know something that we always know it does help a lot especially because you can slowly work your way back from",
    "start": "767880",
    "end": "773480"
  },
  {
    "text": "the initial uptime but don't worry we didn't just stop there but before we go into that let's actually talk about how",
    "start": "773480",
    "end": "779240"
  },
  {
    "text": "we were able to crack this at this point one of the key issues was that in order",
    "start": "779240",
    "end": "784880"
  },
  {
    "text": "to find gced we needed a valid session ID from the web server and that's because we needed some way to validate",
    "start": "784880",
    "end": "791680"
  },
  {
    "text": "that the session IDs we were generating generated a session ID that the web server actually had generated so we had",
    "start": "791680",
    "end": "797560"
  },
  {
    "text": "the same gced luckily for us as I mentioned earlier the web server can be used to uh",
    "start": "797560",
    "end": "803760"
  },
  {
    "text": "authenticate and manage multiple different control servers which meant that we were able to set up our own",
    "start": "803760",
    "end": "809440"
  },
  {
    "text": "control server and have it authenticate against that and what you see here is",
    "start": "809440",
    "end": "814600"
  },
  {
    "text": "the uh request and response so when we have the web server the valid web server",
    "start": "814600",
    "end": "820720"
  },
  {
    "text": "that is managed by somebody else the target what we can do is we can send it that post request to log in we can point",
    "start": "820720",
    "end": "826480"
  },
  {
    "text": "it at our web server that we're hosting and then we can just or our control server that we're hosting and then we",
    "start": "826480",
    "end": "832120"
  },
  {
    "text": "can just give it the username and password that we control and then as a result we get back the valid session ID",
    "start": "832120",
    "end": "837800"
  },
  {
    "text": "which means that we have the first part that we need to actually crack the seed so now that we have what we need uh",
    "start": "837800",
    "end": "845000"
  },
  {
    "text": "let's talk about the strategy that we use to actually crack the seed and we broke it down into four major steps so",
    "start": "845000",
    "end": "850800"
  },
  {
    "text": "the first was that we spun up our own version of the web server and the reason for that is because we're inherently",
    "start": "850800",
    "end": "856800"
  },
  {
    "text": "lazy right yeah I mean we really don't want to do much work so we didn't want to you know go through and build all of",
    "start": "856800",
    "end": "863680"
  },
  {
    "text": "the random and the random string ourselves debug that and instead of doing that spinning up the web server",
    "start": "863680",
    "end": "869680"
  },
  {
    "text": "allowed us to use Freda to actually hook into the binary and grab the random in initialization and random string",
    "start": "869680",
    "end": "875639"
  },
  {
    "text": "functions so we could let the server do every or you know our server do everything for us without having to",
    "start": "875639",
    "end": "881120"
  },
  {
    "text": "write extra code this then let us use these functions to actually replicate the ad",
    "start": "881120",
    "end": "886759"
  },
  {
    "text": "uh session function and we were able to use that to Brute Force the gced and then generate all the session IDs and",
    "start": "886759",
    "end": "892920"
  },
  {
    "text": "once we have the gced our strategy at the end was basically profit you know just generate as many session IDs as we",
    "start": "892920",
    "end": "899360"
  },
  {
    "text": "want and then take over a server so let's see a little bit of uh how that looks like so Freda luckily is great uh",
    "start": "899360",
    "end": "907360"
  },
  {
    "text": "if you haven't used it before I highly recommend that you look into it and what it let us do is since we had already",
    "start": "907360",
    "end": "912800"
  },
  {
    "text": "reversed it we knew where all the pointers were to all the functions so we were able to just tell it you know this",
    "start": "912800",
    "end": "918720"
  },
  {
    "text": "function's at this spot this function's at this spot and we were able to grab the functions using those functions we",
    "start": "918720",
    "end": "923759"
  },
  {
    "text": "were then able to create our own C module to actually crack it so we created the C crack function which takes",
    "start": "923759",
    "end": "930759"
  },
  {
    "text": "in three parameters it takes in the start parameter or the start interm and what that is is a rough estimate of",
    "start": "930759",
    "end": "937519"
  },
  {
    "text": "where your seed is so let's say you know that the seed was generated in the last two days that start value is going to be",
    "start": "937519",
    "end": "944160"
  },
  {
    "text": "the very beginning of those two days exort that time period and then exort together and then from there as you can",
    "start": "944160",
    "end": "950440"
  },
  {
    "text": "see the first for Loop just tries to iterate as much as it can until the first bite is changed however that can",
    "start": "950440",
    "end": "956319"
  },
  {
    "text": "be modified however you need to if there's a longer time period the second",
    "start": "956319",
    "end": "961440"
  },
  {
    "text": "value is the gced pointer so gced is actually a global value as you saw",
    "start": "961440",
    "end": "967040"
  },
  {
    "text": "earlier with how it got changed and uh we actually had to change the pointer or",
    "start": "967040",
    "end": "972079"
  },
  {
    "text": "the value at the pointer itself because the functions didn't take gced as a parameter they just had access the",
    "start": "972079",
    "end": "979000"
  },
  {
    "text": "global value inside and then finally the third parameter is the Target string that we want to get so we have that",
    "start": "979000",
    "end": "985319"
  },
  {
    "text": "valid session ID we increment the seed over and over over and then we try to generate and check if that session ID is",
    "start": "985319",
    "end": "992199"
  },
  {
    "text": "valid um and as you can see here that internal for Loop we generate four session IDs and I know there's a few",
    "start": "992199",
    "end": "999240"
  },
  {
    "text": "faces I'll get to that uh so we do only try to generate four and that's because of the next step um but as you can see",
    "start": "999240",
    "end": "1006199"
  },
  {
    "text": "here after we initialize random just like the ad session function does we then try to create a string and then we",
    "start": "1006199",
    "end": "1012079"
  },
  {
    "text": "see if that string is equal to our valid session ID this can then all be called in another function called seed crack where",
    "start": "1012079",
    "end": "1019040"
  },
  {
    "text": "we get the pointer to the gced we allocate memory for the Target string we crack it and then once we crack it we",
    "start": "1019040",
    "end": "1025319"
  },
  {
    "text": "generate the session IDs so while this was great and it worked fairly consistently especially if",
    "start": "1025319",
    "end": "1032120"
  },
  {
    "text": "we had just started up the server which most of the time we had since we were running our own server there were a few",
    "start": "1032120",
    "end": "1037280"
  },
  {
    "text": "issues still the first was that the more uncertain the start time of the server",
    "start": "1037280",
    "end": "1042600"
  },
  {
    "text": "was the longer the computation would take so you know having if the server was 40 days old it took a lot more",
    "start": "1042600",
    "end": "1049600"
  },
  {
    "text": "computational power to get there and the second issue was that the more time the server was running the more session IDs",
    "start": "1049600",
    "end": "1055559"
  },
  {
    "text": "that generated so this made it harder to predict what session IDs were used for what users but it also made that we had",
    "start": "1055559",
    "end": "1061200"
  },
  {
    "text": "to Brute Force more inside that c crack function however luckily for us Project",
    "start": "1061200",
    "end": "1066600"
  },
  {
    "text": "X had actually done a phenomenal job at securing their system against dos attacks so anytime it went down it would",
    "start": "1066600",
    "end": "1073600"
  },
  {
    "text": "come right back up and there was really nothing we could do to permanently keep it down uh so because it was so secure",
    "start": "1073600",
    "end": "1079559"
  },
  {
    "text": "against dos attacks we decided to try to Doss it um you know obviously so what we",
    "start": "1079559",
    "end": "1084760"
  },
  {
    "text": "did is we set up a fuzzer and we actually found two different denial service attacks that would cause the web server to crash and the Crash happened",
    "start": "1084760",
    "end": "1092120"
  },
  {
    "text": "by connecting the official web server to a fake control server that we actually wrote uh in Python and the way that it",
    "start": "1092120",
    "end": "1099320"
  },
  {
    "text": "worked is we've almost man- in the- Middle the authentication with our fake control server so that we could do the",
    "start": "1099320",
    "end": "1106600"
  },
  {
    "text": "original authentication and then once the Authentication was done and we were able to talk between the web server and",
    "start": "1106600",
    "end": "1111640"
  },
  {
    "text": "our control server we sented a mou formed packet that caused the crash and",
    "start": "1111640",
    "end": "1116880"
  },
  {
    "text": "since the system was so good at coming back online no matter how we crashed it it always came online which meant that",
    "start": "1116880",
    "end": "1123159"
  },
  {
    "text": "every time it came online gced was recreated so rather than having to try to figure out when gced was made or try",
    "start": "1123159",
    "end": "1129480"
  },
  {
    "text": "to bruteforce all that time period we were simply able to crash the server bring it back online and then we had to",
    "start": "1129480",
    "end": "1135520"
  },
  {
    "text": "Brute Force less than 16 million combinations which is almost nothing so I mentioned that there's a",
    "start": "1135520",
    "end": "1141840"
  },
  {
    "text": "full attack chance so I'm going to go over this just a quick overview uh so we have our malicious actor in the original",
    "start": "1141840",
    "end": "1148200"
  },
  {
    "text": "web server the malicious actor points the web server to our fake server the fake server then connects back to the",
    "start": "1148200",
    "end": "1155120"
  },
  {
    "text": "web server crashes the web server at which point our malicious actor connects to the web server again to get a valid",
    "start": "1155120",
    "end": "1161159"
  },
  {
    "text": "session ID and then once they have that and have cracked gced they'll wait until somebody reconnects to the control",
    "start": "1161159",
    "end": "1167039"
  },
  {
    "text": "server or their control server to the web server and then they'll launch the attack and the reason why we were able",
    "start": "1167039",
    "end": "1173200"
  },
  {
    "text": "to wait until somebody reconnected was because there was a system in place where we could basically ping either the",
    "start": "1173200",
    "end": "1179600"
  },
  {
    "text": "web server or the control server directly and see if a session ID was valid and authenticated so what would",
    "start": "1179600",
    "end": "1186600"
  },
  {
    "text": "happen is if the session ID wasn't currently in use it would simply respond saying that nobody's using this but it",
    "start": "1186600",
    "end": "1192679"
  },
  {
    "text": "would not invalidate that session ID for the future uses so that meant that as soon as somebody actually connected and",
    "start": "1192679",
    "end": "1199000"
  },
  {
    "text": "the session ID was generated and as I said we could generate all session IDs so we knew every session ID that was",
    "start": "1199000",
    "end": "1204360"
  },
  {
    "text": "going to be generated we could immediately take over their system and do all actions as",
    "start": "1204360",
    "end": "1210760"
  },
  {
    "text": "them so uh that was a little bit of that um we had a lot of limitations with this",
    "start": "1210760",
    "end": "1217200"
  },
  {
    "text": "and what I like talking about in whenever I talk about vulnerabilities is the problems we ran into because a lot",
    "start": "1217200",
    "end": "1223280"
  },
  {
    "text": "of people just talk about all the great things that happened and while each of these vulnerabilities was pretty good on",
    "start": "1223280",
    "end": "1229400"
  },
  {
    "text": "their own we did have a lot of limitations uh first the original command injection uh I know we were so",
    "start": "1229400",
    "end": "1235760"
  },
  {
    "text": "happy when we found it and then we realized oh wow it's admin that's always a problem uh so what we decided to do",
    "start": "1235760",
    "end": "1242600"
  },
  {
    "text": "was we decided to try to see if we could bypass authentication and even that had an issue because you either had to brute",
    "start": "1242600",
    "end": "1248520"
  },
  {
    "text": "force it or you had to have a amount of Insider knowledge of when the server was started and we weren't satisfied with",
    "start": "1248520",
    "end": "1255039"
  },
  {
    "text": "that so we went further we reverse engineered we figured out how to reduce the Poss possible combinations and then we went above and beyond that even and",
    "start": "1255039",
    "end": "1262440"
  },
  {
    "text": "decided that we would try to crash the server so we could generate it and then have that Insider knowledge so the",
    "start": "1262440",
    "end": "1268760"
  },
  {
    "text": "takeaway from that that I want everyone here to have is while one vulnerability may give you what you want you can",
    "start": "1268760",
    "end": "1274840"
  },
  {
    "text": "probably find others that will give you an even better version to create that full attack chain all right so now I'm",
    "start": "1274840",
    "end": "1280720"
  },
  {
    "text": "going to hand it over to my great co-speaker Jesse to talk about the hardware side of data",
    "start": "1280720",
    "end": "1285760"
  },
  {
    "text": "centers well thanks Cass okay so on the Target number two as Cass mentioned this is hardware based so we're going we're",
    "start": "1285760",
    "end": "1292200"
  },
  {
    "text": "going to be talking about the avocent KVM and I've given the model number of the one that we worked with but this",
    "start": "1292200",
    "end": "1298360"
  },
  {
    "text": "firmware applies to that entire product line so kbm in this case stands for keyboard video Mouse so effectively the",
    "start": "1298360",
    "end": "1306159"
  },
  {
    "text": "the use case for this is you have a remote admin who logs into their data",
    "start": "1306159",
    "end": "1311559"
  },
  {
    "text": "center for just use a a general term using the KVM and gets a nice graphical",
    "start": "1311559",
    "end": "1317279"
  },
  {
    "text": "user interface to all of their infrastructure whether that's a Windows Server a Linux box whatever it's like",
    "start": "1317279",
    "end": "1324679"
  },
  {
    "text": "RDP on on steroids and so that's the the the",
    "start": "1324679",
    "end": "1330000"
  },
  {
    "text": "typical use case you could you see these used in in a a wide variety of different data center setups and interestingly",
    "start": "1330000",
    "end": "1336559"
  },
  {
    "text": "enough apparently they're particularly popular in telecommunications just fun piece of trivia that I came across while",
    "start": "1336559",
    "end": "1342840"
  },
  {
    "text": "while looking into kbm this particular product line is distributed and maintained by verv who did a a really",
    "start": "1342840",
    "end": "1349679"
  },
  {
    "text": "excellent job working with us to get a patch out quickly there was a super quick turnaround time of about a month and a half two months I believe um so",
    "start": "1349679",
    "end": "1357640"
  },
  {
    "text": "I've given the the vulnerable and patched versions there so if you happen to have this lurking in your infrastructure make sure you update it's",
    "start": "1357640",
    "end": "1364200"
  },
  {
    "text": "been out for a few months now um and so when we start looking into",
    "start": "1364200",
    "end": "1369880"
  },
  {
    "text": "a hardware device like this the first order of businesses is typically to get a better debugging environment than the",
    "start": "1369880",
    "end": "1376200"
  },
  {
    "text": "one that you have just using it under normal operation so trying to get some kind of root shell admin access only",
    "start": "1376200",
    "end": "1384080"
  },
  {
    "text": "unauthenticated doesn't really matter just we want to be able to in install GDB or something like that on the",
    "start": "1384080",
    "end": "1389159"
  },
  {
    "text": "underlying operating system and be able to monitor the behavior of the device a lot more closely so our first order of",
    "start": "1389159",
    "end": "1397720"
  },
  {
    "text": "of business was to figure out how to do that and so we started looking around the the webbased Management console and",
    "start": "1397720",
    "end": "1404080"
  },
  {
    "text": "notice that this device only allows for local firmware upgrades nothing over the a so that means that you have to be able",
    "start": "1404080",
    "end": "1410600"
  },
  {
    "text": "to download their firmware that they host on their website and then upload it",
    "start": "1410600",
    "end": "1416120"
  },
  {
    "text": "from your local file system before you can upgrade so we thought well what if we can modify their firmware and add a",
    "start": "1416120",
    "end": "1423279"
  },
  {
    "text": "back door and then do some kind of malicious upgrade to allow us to connect to the device and start issuing our own",
    "start": "1423279",
    "end": "1429520"
  },
  {
    "text": "commands on the underlying operating system so we downloaded that piece of firmware and just sought about trying to",
    "start": "1429520",
    "end": "1435840"
  },
  {
    "text": "understand it and this is the visual that we that we came up with so at the top there's a small header custom format",
    "start": "1435840",
    "end": "1442039"
  },
  {
    "text": "been walked in recognize it um just a bunch of metadata then there was a Linux",
    "start": "1442039",
    "end": "1447080"
  },
  {
    "text": "kernel pretty old version compiled for for power PC that's nice Linux is nice and familiar and then next we had a huge",
    "start": "1447080",
    "end": "1454120"
  },
  {
    "text": "region that constitute the file system and this proved to be the most interesting part we didn't really care",
    "start": "1454120",
    "end": "1459720"
  },
  {
    "text": "about the rest so we just snipped that out and got to work performing some surgery so in order to unpack it we as I",
    "start": "1459720",
    "end": "1467480"
  },
  {
    "text": "say snipped it out and decompressed it and it turned out to be a squash FS file system now if anybody out there is not",
    "start": "1467480",
    "end": "1475159"
  },
  {
    "text": "familiar with squashfs it's just a format that allows you to take an entire file hierarchy and squash it down into",
    "start": "1475159",
    "end": "1483080"
  },
  {
    "text": "one single flat file it's nice when you're packaging firmware for for",
    "start": "1483080",
    "end": "1488559"
  },
  {
    "text": "download and notably this squashfs file system was using a very old version like",
    "start": "1488559",
    "end": "1493799"
  },
  {
    "text": "15 years old so we had to actually download the source code and compile it",
    "start": "1493799",
    "end": "1499880"
  },
  {
    "text": "and make some modifications in order to get it to build uh I've included those steps just for posterity sake we won't",
    "start": "1499880",
    "end": "1505159"
  },
  {
    "text": "spend too much time on this but eventually we were able to get a working unsquash FS binary and extract the root",
    "start": "1505159",
    "end": "1513360"
  },
  {
    "text": "file system so then it came time to add a back door and we were kind of picky we had a few requirements that we needed to",
    "start": "1513360",
    "end": "1519840"
  },
  {
    "text": "hit obviously we need shell access over the network but we also wanted root privileges we wanted to be able to do anything that we wanted this also had to",
    "start": "1519840",
    "end": "1526960"
  },
  {
    "text": "be reusable given the this is part of our debugging setup we didn't want have to reboot the device every time we disconnect our session similarly we",
    "start": "1526960",
    "end": "1534360"
  },
  {
    "text": "wanted to have persistence across reboots it would be lame if we had to update the system every single time with",
    "start": "1534360",
    "end": "1540559"
  },
  {
    "text": "our malicious upgrade and of course we wanted it to be low profile so as not to",
    "start": "1540559",
    "end": "1546279"
  },
  {
    "text": "interfere with any of the core functionality on the device and get a a a really good snapshot of what's going",
    "start": "1546279",
    "end": "1551600"
  },
  {
    "text": "on so the approach that we wound up going with is to add in a nit script so",
    "start": "1551600",
    "end": "1557840"
  },
  {
    "text": "we reversed out the process that happens when the device boots up the boot up sequence found that it was invoking this",
    "start": "1557840",
    "end": "1564080"
  },
  {
    "text": "script uh rcsh stored in Etsy which simply Loops over all of the files in",
    "start": "1564080",
    "end": "1569960"
  },
  {
    "text": "the init directory in this case that's rc. D and runs them make sure that everything's up and running correctly so",
    "start": "1569960",
    "end": "1577200"
  },
  {
    "text": "we just added our own leveraging the busy box version of netcat and built-in",
    "start": "1577200",
    "end": "1582720"
  },
  {
    "text": "Born Again shell and had that listen on Port 1337 cuz what other Port are you",
    "start": "1582720",
    "end": "1587840"
  },
  {
    "text": "going to use and that ended up doing the job or almost so when we attempted to update",
    "start": "1587840",
    "end": "1595600"
  },
  {
    "text": "our our our back doored firmware um update with our back doored firmware rather we got an error wouldn't let us",
    "start": "1595600",
    "end": "1602159"
  },
  {
    "text": "do it said something about firmware Integrity so then we had to diagnose why",
    "start": "1602159",
    "end": "1607240"
  },
  {
    "text": "that was failing and we ended up figuring out that when you click upgrade",
    "start": "1607240",
    "end": "1614880"
  },
  {
    "text": "this script called firmware check image is invoked and the most important thing that this",
    "start": "1614880",
    "end": "1621760"
  },
  {
    "text": "script does is to leverage the check image binary against the firmware and",
    "start": "1621760",
    "end": "1626919"
  },
  {
    "text": "based on the status code of check image it will either allow the upgrade to",
    "start": "1626919",
    "end": "1632120"
  },
  {
    "text": "continue or it will throw a failure message and we were getting that failure message so we figured that this could is",
    "start": "1632120",
    "end": "1638600"
  },
  {
    "text": "probably the the source of the failed upgrade as we were of course tampering",
    "start": "1638600",
    "end": "1644440"
  },
  {
    "text": "with the firmware so what we wanted to do was create like kind of an oracle",
    "start": "1644440",
    "end": "1649559"
  },
  {
    "text": "that we could use to fine-tune our our our back door firmware to try and get around this",
    "start": "1649559",
    "end": "1655600"
  },
  {
    "text": "check so we figured that if we ran check image against a benign firmware and it gave us a zero status code and it gave",
    "start": "1655600",
    "end": "1662880"
  },
  {
    "text": "us a nonzero status code when we ran against against our back door firmware it was probably a pretty good chance",
    "start": "1662880",
    "end": "1668200"
  },
  {
    "text": "that this was our point of failure so we used Kimu in user mode to run check",
    "start": "1668200",
    "end": "1674880"
  },
  {
    "text": "image of course this is power PC I don't have a power PC machine I don't know if any you do either um and unfortunately",
    "start": "1674880",
    "end": "1680880"
  },
  {
    "text": "we immediately ran into problems it turns out that check image relies on a function call that retrieves",
    "start": "1680880",
    "end": "1686159"
  },
  {
    "text": "configuration values from shared memory we're not doing full system emulation this is Kimu in user mode shared memory",
    "start": "1686159",
    "end": "1692440"
  },
  {
    "text": "was not initialized so we ended up having to edit the raw binary to effectively create little stubs rather",
    "start": "1692440",
    "end": "1699559"
  },
  {
    "text": "than make those um offending function calls and eventually got our our Oracle",
    "start": "1699559",
    "end": "1705000"
  },
  {
    "text": "working and it worked just fine as expected against benign firmware and",
    "start": "1705000",
    "end": "1710880"
  },
  {
    "text": "failed when we ran it against our back door firmware specifically it did it did",
    "start": "1710880",
    "end": "1716159"
  },
  {
    "text": "tell us why it failed a CRC check was failed in the file system component so",
    "start": "1716159",
    "end": "1721880"
  },
  {
    "text": "far so good we did tamper with the file system and so it looked like we had found the source of the",
    "start": "1721880",
    "end": "1727679"
  },
  {
    "text": "failure so now we had to forge the CRC and and in order to do this we ran check",
    "start": "1727679",
    "end": "1732840"
  },
  {
    "text": "image again except with debugging enabled connect to it and simply set a break point on the",
    "start": "1732840",
    "end": "1740240"
  },
  {
    "text": "instruction which compares the calculated CRC and the one found in the firmware",
    "start": "1740240",
    "end": "1745279"
  },
  {
    "text": "header and then just dumped those operand values and it turns out that we",
    "start": "1745279",
    "end": "1751159"
  },
  {
    "text": "were able to to get the the correct CRC values and it was simply a matter of splicing that back into into the",
    "start": "1751159",
    "end": "1757440"
  },
  {
    "text": "firmware file the steps of which are shown here we first of all had to locate where the original one was surprise",
    "start": "1757440",
    "end": "1763720"
  },
  {
    "text": "surprise it was in that custom header so we just grabbed the offset and then",
    "start": "1763720",
    "end": "1769399"
  },
  {
    "text": "injected our calculated um CRC value",
    "start": "1769399",
    "end": "1774600"
  },
  {
    "text": "into that in into the firmware header in its place and at that point check image",
    "start": "1774600",
    "end": "1779640"
  },
  {
    "text": "ran just fine and we were able to spoof an upgrade so this is the first CV that emerged from our the research on this on",
    "start": "1779640",
    "end": "1787080"
  },
  {
    "text": "on this device which is the improper validation of of an Integrity check value leading to remote code execution",
    "start": "1787080",
    "end": "1793880"
  },
  {
    "text": "sometimes you have to get an OD day in order to just start doing the meaningful res research so we us to have a quick",
    "start": "1793880",
    "end": "1800080"
  },
  {
    "text": "demo here showing what we were able to do with with this exploit we could log in just using netcat running ID proves",
    "start": "1800080",
    "end": "1806919"
  },
  {
    "text": "that we are in fact issuing commands as root and there's our back door",
    "start": "1806919",
    "end": "1813000"
  },
  {
    "text": "running but as Casmir said this is all authenticated and we're not happy with that so the next step was to try and",
    "start": "1813480",
    "end": "1820039"
  },
  {
    "text": "bypass authentication so we took a look at the",
    "start": "1820039",
    "end": "1825279"
  },
  {
    "text": "end map output that we did right at the very beginning when we were enumerating the attack surface and notice that there",
    "start": "1825279",
    "end": "1832440"
  },
  {
    "text": "is this service that nmap does recognize um called AV secure",
    "start": "1832440",
    "end": "1837799"
  },
  {
    "text": "management which stands for avocent secure management protocol it and it",
    "start": "1837799",
    "end": "1843399"
  },
  {
    "text": "ended up being vulnerable so basically this this service supports several kinds of actions used in the operation of of the",
    "start": "1843399",
    "end": "1850480"
  },
  {
    "text": "KVM things like logging in logging out so terminating a session setting up a",
    "start": "1850480",
    "end": "1855679"
  },
  {
    "text": "new KVM session or doing various Network management um actions as well",
    "start": "1855679",
    "end": "1862240"
  },
  {
    "text": "just to name a few and all of this code is implemented in the main app binary which does pretty much all of the heavy",
    "start": "1862240",
    "end": "1868960"
  },
  {
    "text": "lifting in the operation of this kbm so let's just take a quick look at the packet structure for this",
    "start": "1868960",
    "end": "1874840"
  },
  {
    "text": "proprietary protocol it starts with a 12 byte header which has the magic number",
    "start": "1874840",
    "end": "1880559"
  },
  {
    "text": "and the length of the transaction data the the main payload and the transaction",
    "start": "1880559",
    "end": "1885760"
  },
  {
    "text": "type which is just an eneration of of of the different transactions I've listed",
    "start": "1885760",
    "end": "1890880"
  },
  {
    "text": "there and then of course we have the data itself so we'll start with the root cause analysis of this vulnerability all",
    "start": "1890880",
    "end": "1897559"
  },
  {
    "text": "of these packets are are parsed using a custom State machine the hackers in the room will know that whenever you come",
    "start": "1897559",
    "end": "1904159"
  },
  {
    "text": "across a custom State machine your mouth starts to water a lot of opportunities for deserialization",
    "start": "1904159",
    "end": "1910360"
  },
  {
    "text": "BS and so what it does is it reads the packet header and the data into the a single 4,000 hex B buffer",
    "start": "1910360",
    "end": "1918519"
  },
  {
    "text": "however it only enforces size constraints on the transaction data not",
    "start": "1918519",
    "end": "1923639"
  },
  {
    "text": "the header so if you max out that data and you send 4,000 hex bytes you're",
    "start": "1923639",
    "end": "1929159"
  },
  {
    "text": "going to get a 13 by overflow 12 bytes for that header that's not accounted for",
    "start": "1929159",
    "end": "1934559"
  },
  {
    "text": "in their size checking and then an extra bite that was hard-coded in there that we aren't sure of the purpose of but",
    "start": "1934559",
    "end": "1940679"
  },
  {
    "text": "we'll take it so this is just pseudo code stripped down of of of what the state machine was actually doing it",
    "start": "1940679",
    "end": "1946440"
  },
  {
    "text": "first reads the the 12 buffer or the the 12 bytes of the header into the buffer",
    "start": "1946440",
    "end": "1952000"
  },
  {
    "text": "and then seems to forget that it did that and then reads 400 4,000 hex and",
    "start": "1952000",
    "end": "1957080"
  },
  {
    "text": "one bytes um thus overflowing the 400 by buffer and notice that this is allocated",
    "start": "1957080",
    "end": "1964559"
  },
  {
    "text": "dynamically so we are living in Heap land for this exploit keep that in mind that'll be important so you're probably",
    "start": "1964559",
    "end": "1970639"
  },
  {
    "text": "asking yourselves well what can we do with 13 bytes that's not very much at all and you're right but in this case we were actually able to create a new user",
    "start": "1970639",
    "end": "1977159"
  },
  {
    "text": "with whichever credentials that we want and give give that user the highest",
    "start": "1977159",
    "end": "1982279"
  },
  {
    "text": "privileges that the device supports so let's take a look at at how we can get there so there are really only two",
    "start": "1982279",
    "end": "1989840"
  },
  {
    "text": "objects on the Heap that we need to worry about the first is the asmp connection object which just holds all",
    "start": "1989840",
    "end": "1995519"
  },
  {
    "text": "kinds of metadata that pertain to that connection and the buffer that we are",
    "start": "1995519",
    "end": "2001159"
  },
  {
    "text": "going to overflow the buffer is simple enough that's just a sequence of bites but the asmp connection requires a",
    "start": "2001159",
    "end": "2007159"
  },
  {
    "text": "little bit of further investigation to understand this is just a couple of of the main fields that we needed to",
    "start": "2007159",
    "end": "2014000"
  },
  {
    "text": "reverse out and I'll just focus on the most important two the first is this logged in field which is just a flag",
    "start": "2014000",
    "end": "2019360"
  },
  {
    "text": "that said that indicates whether or not this connection has been authenticated yet so you would need to do a login over",
    "start": "2019360",
    "end": "2025279"
  },
  {
    "text": "that socket in in order to set set this flag to one and then the access level",
    "start": "2025279",
    "end": "2030600"
  },
  {
    "text": "which dictates what can be done over this connection some actions require",
    "start": "2030600",
    "end": "2036399"
  },
  {
    "text": "higher privileges as I'm sure should Mak sense to everybody here so in order to understand how this",
    "start": "2036399",
    "end": "2041840"
  },
  {
    "text": "exploit works we need to do a little bit of background on the GBC Heap don't worry I know it's very dry we'll be quick um so every time Malik is is",
    "start": "2041840",
    "end": "2049839"
  },
  {
    "text": "called this Malik chunk object is prepended to that allocated chunk of memory and this just contains metadata",
    "start": "2049839",
    "end": "2056638"
  },
  {
    "text": "for optimizing heat performance and a couple of essential properties including the size of the chunk that's been",
    "start": "2056639",
    "end": "2062440"
  },
  {
    "text": "allocated this is necessary for for calls like free so it knows how how much memory to to free so this m chunk size",
    "start": "2062440",
    "end": "2071560"
  },
  {
    "text": "field here is is what stores that value so now let's take a look at how the exploit works we first establish at",
    "start": "2071560",
    "end": "2078440"
  },
  {
    "text": "least 10 preferably more concurrent asmp Connections in order to make the Heap",
    "start": "2078440",
    "end": "2083919"
  },
  {
    "text": "layout very predictable map's very noisy there are a lot of different actions going going on at once so this was a a",
    "start": "2083919",
    "end": "2091358"
  },
  {
    "text": "very reasonable sanity saving step um and so we",
    "start": "2091359",
    "end": "2098200"
  },
  {
    "text": "only actually used the first two arguably three connections and so we've",
    "start": "2098200",
    "end": "2103240"
  },
  {
    "text": "naed we we've named those a b and c so the next step is to use our buffer",
    "start": "2103240",
    "end": "2109200"
  },
  {
    "text": "overflow to overflow the the the buffer for for uh socket a and overwrite the",
    "start": "2109200",
    "end": "2116200"
  },
  {
    "text": "Malo chunk object associated with the asmp connection for socket",
    "start": "2116200",
    "end": "2121640"
  },
  {
    "text": "B and and what we did there is we set the size to 4,10 in HEX which which is",
    "start": "2121640",
    "end": "2127960"
  },
  {
    "text": "the size of buffer plus the size of the Malik chunk which you know this is a 32-bit system Malik chunk is only 8",
    "start": "2127960",
    "end": "2133839"
  },
  {
    "text": "bytes but we're working with 32 by alignment so it ended up being",
    "start": "2133839",
    "end": "2140160"
  },
  {
    "text": "4,10 and so now the Heap knows that once the asmp con structure for socket B has",
    "start": "2140160",
    "end": "2146640"
  },
  {
    "text": "been freed the next allocation of size 4000 that it needs to make should be",
    "start": "2146640",
    "end": "2152839"
  },
  {
    "text": "placed at that spot this is just a feature of how the Heap works for optimization purposes so next we issued",
    "start": "2152839",
    "end": "2159119"
  },
  {
    "text": "just a benign logout transaction in in order to cause socket B to close gracefully thus freeing the buffer and",
    "start": "2159119",
    "end": "2167280"
  },
  {
    "text": "then freeing this enlarged asmp con structure so some data is being freed",
    "start": "2167280",
    "end": "2172800"
  },
  {
    "text": "twice that's not a problem the point is the Heap knows where to put the next buffer so the fourth step is to open up",
    "start": "2172800",
    "end": "2181000"
  },
  {
    "text": "a a a new connection socket D and now asmon is located where the where the",
    "start": "2181000",
    "end": "2187599"
  },
  {
    "text": "previous buffer was and the buffer is now located where the asmp connection",
    "start": "2187599",
    "end": "2192800"
  },
  {
    "text": "struct was so they overlap due to this monkeying that we've",
    "start": "2192800",
    "end": "2198160"
  },
  {
    "text": "done with the Heap and this is very important to set up our final payload which uses all of the of the",
    "start": "2198160",
    "end": "2206000"
  },
  {
    "text": "space available and can and fills buffer with the smmp instructions to add a new user with",
    "start": "2206000",
    "end": "2213880"
  },
  {
    "text": "whatever username and password we want and the highest possible privilege",
    "start": "2213880",
    "end": "2219520"
  },
  {
    "text": "we also Elevate the um privileges of our own connection object setting the logged",
    "start": "2219880",
    "end": "2227319"
  },
  {
    "text": "in flag to true and the the um permissions to three which is the highest permissions that they",
    "start": "2227319",
    "end": "2234000"
  },
  {
    "text": "add and that is enough to allow us to add a new user so let's see that in action here I'm just logging in using",
    "start": "2234000",
    "end": "2241839"
  },
  {
    "text": "the default credentials this is totally fair game and if we go to the users we see that that is the only user",
    "start": "2241839",
    "end": "2248800"
  },
  {
    "text": "there and so now I'm going to run the exploit just give it the the",
    "start": "2248800",
    "end": "2254680"
  },
  {
    "text": "IP whatever username I like and the password so now that the exploit has",
    "start": "2254680",
    "end": "2260079"
  },
  {
    "text": "been run I can log in with that username and password you can see in the top left of the window that I logged in as that",
    "start": "2260079",
    "end": "2266920"
  },
  {
    "text": "user and the user has been successfully added however there was a bit of a face",
    "start": "2266920",
    "end": "2272520"
  },
  {
    "text": "pa moment when we realized we could have accomplished the exact same thing with a null bite injection on the login page",
    "start": "2272520",
    "end": "2279400"
  },
  {
    "text": "so that was um one of those cry and laugh at the same time moments so there",
    "start": "2279400",
    "end": "2285640"
  },
  {
    "text": "is a vulnerability in the login mechanism due to the fact that Anonymous sessions are supported on this device just for internal purposes and if you",
    "start": "2285640",
    "end": "2292560"
  },
  {
    "text": "give it a null bite for for the username without any password it just assumes that you're trying to do one of those",
    "start": "2292560",
    "end": "2298079"
  },
  {
    "text": "local connections and we'll log you right in so nice short exploit and as as",
    "start": "2298079",
    "end": "2304240"
  },
  {
    "text": "you can see when we dump the the the the user file for that for that login um you",
    "start": "2304240",
    "end": "2310119"
  },
  {
    "text": "can see no password it's an it's an anonymous session negative one for the user ID and so this was our third um",
    "start": "2310119",
    "end": "2317880"
  },
  {
    "text": "vulnerability for this um on on this device which is just",
    "start": "2317880",
    "end": "2323599"
  },
  {
    "text": "an allite login authentication using an alternate path so now I'm going to turn it back",
    "start": "2323599",
    "end": "2328800"
  },
  {
    "text": "over to Cass to take us away home rather so we want to leave you guys with",
    "start": "2328800",
    "end": "2335119"
  },
  {
    "text": "a few concluding thoughts I hope you guys enjoyed everything but uh there's always you know few bits of wisdom left",
    "start": "2335119",
    "end": "2341400"
  },
  {
    "text": "uh the first is that authentication alone does not justify weaker security",
    "start": "2341400",
    "end": "2346560"
  },
  {
    "text": "uh we have both been in researching for a while and almost every single device that we see if they assume it cannot be",
    "start": "2346560",
    "end": "2353680"
  },
  {
    "text": "externally accessed or it's behind some sort of wall they just pretend like security doesn't even exist so please",
    "start": "2353680",
    "end": "2360319"
  },
  {
    "text": "you know uphold that internal component with the same standards as the externally facing",
    "start": "2360319",
    "end": "2366359"
  },
  {
    "text": "components another thing is that those convenience features or as Jesse discovered with the firmware upload the",
    "start": "2366359",
    "end": "2372760"
  },
  {
    "text": "inconvenience features can often be abused for exploitation so before turning features on by default consider",
    "start": "2372760",
    "end": "2379359"
  },
  {
    "text": "the potential security impact a lot of times we see that there will be a feature on by default or there will be a",
    "start": "2379359",
    "end": "2386040"
  },
  {
    "text": "feature that isn't on and then in the docs they'll say if you want to make this secure please do this or that",
    "start": "2386040",
    "end": "2391920"
  },
  {
    "text": "rather than it being on by default and then finally data centers are really",
    "start": "2391920",
    "end": "2397040"
  },
  {
    "text": "attract active targets uh as Jesse mentioned earlier they have high impact a lot of components are externally",
    "start": "2397040",
    "end": "2402839"
  },
  {
    "text": "facing uh so really great uh projects to work on we also wanted to give a few",
    "start": "2402839",
    "end": "2408800"
  },
  {
    "text": "acknowledgements so Jesse and I both worked on this project while we were at trellix ARC and we worked on it with Sam",
    "start": "2408800",
    "end": "2415319"
  },
  {
    "text": "Quinn and Austin EMT who are both amazing researchers if you ever have the chance to work with them thank you for",
    "start": "2415319",
    "end": "2420760"
  },
  {
    "text": "coming to our [Applause]",
    "start": "2420760",
    "end": "2425920"
  },
  {
    "text": "talk",
    "start": "2425920",
    "end": "2428920"
  }
]