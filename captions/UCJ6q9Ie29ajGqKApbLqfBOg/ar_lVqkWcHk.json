[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "[Music]",
    "start": "3810",
    "end": "16240"
  },
  {
    "text": "hello everyone i'm jin jinten welcome to this talk today i'm going to share",
    "start": "16240",
    "end": "22000"
  },
  {
    "text": "our latest work about email spoofing attacks email is widely used in our daily life",
    "start": "22000",
    "end": "29279"
  },
  {
    "text": "and is a frequently used attack vector for various attacks in the past years we have seen numerous",
    "start": "29279",
    "end": "35680"
  },
  {
    "text": "attacks using email spoofing and phishing attacks to compromise enterprise networks or government",
    "start": "35680",
    "end": "42480"
  },
  {
    "text": "official accounts to address this problem modern email services and websites deploy sender",
    "start": "42480",
    "end": "49840"
  },
  {
    "text": "authentication protocols like spf dkm and dmarc to prevent email forgery",
    "start": "49840",
    "end": "57120"
  },
  {
    "text": "in this talk we will present a number of new techniques to defeat those defense",
    "start": "57120",
    "end": "64000"
  },
  {
    "text": "this is a joint work by three authors i'm a postdoc at legacy focusing on http",
    "start": "64000",
    "end": "70799"
  },
  {
    "text": "and email security vern pakistan is my supervisor he's a professor at uc berkeley and the",
    "start": "70799",
    "end": "76560"
  },
  {
    "text": "original author of the broad ideas based on the broad system he created a startup corelight",
    "start": "76560",
    "end": "82960"
  },
  {
    "text": "which provides high performance network traffic analysis solutions jian jiang is the senior director of",
    "start": "82960",
    "end": "89759"
  },
  {
    "text": "engineering at f5 he has done some influential work in dns and web security",
    "start": "89759",
    "end": "96960"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "okay first a quick question when you receive an email how do you tell whether it's a",
    "start": "99280",
    "end": "105040"
  },
  {
    "text": "phishing email normally we would check the from address displayed in the email client",
    "start": "105040",
    "end": "111280"
  },
  {
    "text": "if the forum address is legitimate we may believe it's not a phishing email",
    "start": "111280",
    "end": "116880"
  },
  {
    "text": "if we use email services like gmail we can also check additional security indicators like",
    "start": "116880",
    "end": "122240"
  },
  {
    "text": "mailed by or signed back to verify the sender in this talk we are",
    "start": "122240",
    "end": "127439"
  },
  {
    "text": "going to present a number of new techniques to support those security fields",
    "start": "127439",
    "end": "133680"
  },
  {
    "text": "here is a smoothing test i did several months ago gmail shows that this email is sent from",
    "start": "133680",
    "end": "140400"
  },
  {
    "text": "security at facebook.com and verify that the gmail is signed by",
    "start": "140400",
    "end": "146160"
  },
  {
    "text": "facebook.com but in fact it was spoofed by me how could it happen why gmail didn't",
    "start": "146160",
    "end": "152959"
  },
  {
    "text": "reject this message we will answer these questions in this talk",
    "start": "152959",
    "end": "159280"
  },
  {
    "text": "to understand this tag we need to know two important concepts in the email protocol",
    "start": "160560",
    "end": "165920"
  },
  {
    "text": "cinder and authentication let's look at the first one here is an email example we often see in",
    "start": "165920",
    "end": "173360"
  },
  {
    "text": "our day knife who is the email sender the from address we often see",
    "start": "173360",
    "end": "180080"
  },
  {
    "text": "only represents the user who composes the message there's another invaluable part called",
    "start": "180080",
    "end": "185920"
  },
  {
    "text": "smtp envelope the hello and mail from address in the smtp envelope",
    "start": "185920",
    "end": "191280"
  },
  {
    "text": "represent represent the user who transmits the message this design is similar to the mail in",
    "start": "191280",
    "end": "197519"
  },
  {
    "text": "our real life the address in envelope and address in the message data can be different",
    "start": "197519",
    "end": "204319"
  },
  {
    "text": "this picture shows how an email is transmitted on the network first alice login her sending service to",
    "start": "204560",
    "end": "212000"
  },
  {
    "start": "205000",
    "end": "205000"
  },
  {
    "text": "send the email then the email is sent to bob's receiving service",
    "start": "212000",
    "end": "217519"
  },
  {
    "text": "then bob retrieves the email using his email client",
    "start": "217519",
    "end": "222560"
  },
  {
    "text": "when smtp is originally designed it has a low built-in authentication mechanisms",
    "start": "222560",
    "end": "228799"
  },
  {
    "text": "anyone on the internet can claim another's address in hello mail from or from field",
    "start": "228799",
    "end": "235920"
  },
  {
    "text": "for example an attacker can claim he is alice at and send a spoofing email to bob's",
    "start": "235920",
    "end": "241680"
  },
  {
    "text": "receiving service directly the receiving service cannot tell whether the email sender is really alice",
    "start": "241680",
    "end": "248400"
  },
  {
    "text": "a.com to address this problem various email authentication",
    "start": "248400",
    "end": "254239"
  },
  {
    "text": "mechanisms have been proposed spf dkm and dmarc",
    "start": "254239",
    "end": "259359"
  },
  {
    "text": "are three most widely adopted particles spf verified the sender ip address",
    "start": "259359",
    "end": "266320"
  },
  {
    "text": "dkm verifies the gmail signature demark is designed to fix the alignment",
    "start": "266320",
    "end": "272479"
  },
  {
    "text": "problem in spf and dkm we will talk about the alignment problem later",
    "start": "272479",
    "end": "279360"
  },
  {
    "text": "let's look at how those three what three particles work first spf use",
    "start": "279360",
    "end": "286639"
  },
  {
    "start": "281000",
    "end": "281000"
  },
  {
    "text": "ip address to authenticate the sender it works in three steps first the sending service",
    "start": "286639",
    "end": "293280"
  },
  {
    "text": "publish dns record to specify which server ip alone to send the email for this domain",
    "start": "293280",
    "end": "301440"
  },
  {
    "text": "when receiving the email the receiving service will query the domain in hello and mail from field",
    "start": "301440",
    "end": "307600"
  },
  {
    "text": "to obtain the ip list then the receiving service will check",
    "start": "307600",
    "end": "313120"
  },
  {
    "text": "whether the sender's ip matches with the obtained ip list if yes spf passed",
    "start": "313120",
    "end": "319199"
  },
  {
    "text": "so spf insurance that only authorized ip can send the email for this domain",
    "start": "319199",
    "end": "326720"
  },
  {
    "text": "dkm use public key cryptography to authenticate the sender it works in four steps",
    "start": "328479",
    "end": "335759"
  },
  {
    "text": "first the sending service publishes their public key in gs record",
    "start": "335840",
    "end": "341120"
  },
  {
    "text": "when sending an email the sending service will use the corresponding private key to",
    "start": "341120",
    "end": "346160"
  },
  {
    "text": "sign the message to generate the decline signature header and attach it to the message in the dcm",
    "start": "346160",
    "end": "353120"
  },
  {
    "text": "signature header two tags are very important d tag represents the signer's domain as",
    "start": "353120",
    "end": "359039"
  },
  {
    "text": "tag can be any character is used for sub domain when receiving the gmail the receiving service will",
    "start": "359039",
    "end": "365919"
  },
  {
    "text": "query as dot domain key dot d to obtain the public key s and d",
    "start": "365919",
    "end": "371520"
  },
  {
    "text": "i extracted from the dqm signature header domain key is a constant for example in",
    "start": "371520",
    "end": "377680"
  },
  {
    "text": "this case the receiving service will query any dash domain create.com to obtain",
    "start": "377680",
    "end": "384880"
  },
  {
    "text": "the public key then the receiving service will validate the decline secret",
    "start": "384880",
    "end": "391680"
  },
  {
    "text": "with the obtain the public key if the signature is valid the email pass decam authentication",
    "start": "391680",
    "end": "398240"
  },
  {
    "text": "so dqm insurance that only the person who loads the private key can",
    "start": "398240",
    "end": "404160"
  },
  {
    "text": "send the email for this domain",
    "start": "404160",
    "end": "409840"
  },
  {
    "text": "unfortunately laser spf nor dkm provide a complete solution to prevent",
    "start": "409919",
    "end": "415759"
  },
  {
    "text": "emails moving because spf verifies the hello and",
    "start": "415759",
    "end": "421440"
  },
  {
    "text": "well from identifier they can verify the tick field in the dqm signature",
    "start": "421440",
    "end": "427360"
  },
  {
    "text": "header these are of them verify the from address",
    "start": "427360",
    "end": "433440"
  },
  {
    "text": "that is displayed to the end user which means even if a gmail pass both spf",
    "start": "433440",
    "end": "439919"
  },
  {
    "text": "and dkm validation the from address consider be spoofed",
    "start": "439919",
    "end": "446639"
  },
  {
    "text": "demarc is designed to fix this problem",
    "start": "448960",
    "end": "453440"
  },
  {
    "start": "450000",
    "end": "450000"
  },
  {
    "text": "first when the sending service publish demand policy the receiving service must",
    "start": "454639",
    "end": "461360"
  },
  {
    "text": "perform identifier alignment test to check if the from head domain",
    "start": "461360",
    "end": "468080"
  },
  {
    "text": "matched as pf or dkm verified to me match means exactly match or have the",
    "start": "468080",
    "end": "475360"
  },
  {
    "text": "sim rejected to me domain another important point is that dmacc",
    "start": "475360",
    "end": "480639"
  },
  {
    "text": "only require either spf or decam shoe a positive result",
    "start": "480639",
    "end": "486479"
  },
  {
    "text": "this design is intended to provide more robust lists for example for forwarding the email spf",
    "start": "486479",
    "end": "493520"
  },
  {
    "text": "may fail but dcam will survive if both spf and dqm fail demand fail",
    "start": "493520",
    "end": "501199"
  },
  {
    "text": "then the receiving service will reinforce the policy specified by the domain owner",
    "start": "501199",
    "end": "506879"
  },
  {
    "text": "such as rejecting the email or sending failure reports",
    "start": "506879",
    "end": "512240"
  },
  {
    "text": "here is an email authentication flow when the receiving service receives an email spf component will",
    "start": "512240",
    "end": "519839"
  },
  {
    "start": "513000",
    "end": "513000"
  },
  {
    "text": "check hello and well from identifier dkm component will check the dkm signage header",
    "start": "519839",
    "end": "527760"
  },
  {
    "text": "demand component will check alignment with the from header if the gmail pass either spf or dkm",
    "start": "527760",
    "end": "535279"
  },
  {
    "text": "authentication and the from header pass the alignment test the gmail pass demand authentication",
    "start": "535279",
    "end": "543440"
  },
  {
    "text": "and then is delivered to the end users mua so the flow sounds good what could",
    "start": "543440",
    "end": "551279"
  },
  {
    "text": "possibly go wrong we found 18 attacks to bypass the",
    "start": "551279",
    "end": "558240"
  },
  {
    "text": "authentication the key idea of our attacks is to",
    "start": "558240",
    "end": "563839"
  },
  {
    "start": "562000",
    "end": "562000"
  },
  {
    "text": "exploit inconsistencies between different components as shown in the picture a uml",
    "start": "563839",
    "end": "571519"
  },
  {
    "text": "sent by the sender's mua need to be processed at least six different components before",
    "start": "571519",
    "end": "577279"
  },
  {
    "text": "reaching the recipient those components are often built by",
    "start": "577279",
    "end": "582399"
  },
  {
    "text": "different developers or different companies and have a wide range of",
    "start": "582399",
    "end": "587440"
  },
  {
    "text": "inconsistencies which can be exploited by attackers an",
    "start": "587440",
    "end": "593600"
  },
  {
    "text": "attacker can craft an ambiguous message with multiple identifiers",
    "start": "593600",
    "end": "598720"
  },
  {
    "text": "component a may take one identifier but component b may take another identifier this can",
    "start": "598720",
    "end": "605440"
  },
  {
    "text": "cause semantic ambiguity and lead to authentication bypass",
    "start": "605440",
    "end": "610480"
  },
  {
    "text": "in the following talk we will talk about several examples to illustrate the problem in detail",
    "start": "610480",
    "end": "619120"
  },
  {
    "text": "the first example exploits inconsistencies between spf and demarc spf",
    "start": "619120",
    "end": "627839"
  },
  {
    "start": "620000",
    "end": "620000"
  },
  {
    "text": "smtp defined two different identifiers hello and well from to represent the",
    "start": "627839",
    "end": "633680"
  },
  {
    "text": "user who transmits the message spf standard requires spf verifiers to",
    "start": "633680",
    "end": "639279"
  },
  {
    "text": "check both of them if either fails as pf fails demand standard require",
    "start": "639279",
    "end": "645600"
  },
  {
    "text": "demark verifiers to use a mail from force alignment test if mail frame is empty then use hello",
    "start": "645600",
    "end": "654480"
  },
  {
    "text": "the problem is that if spf verify hello on a demark using mail from",
    "start": "654480",
    "end": "662079"
  },
  {
    "text": "to check alignment test it can cause ambiguity to bypass the authentication here is one case we",
    "start": "662079",
    "end": "669600"
  },
  {
    "text": "found an attacker sets the mail from to be aligned exists",
    "start": "669600",
    "end": "675519"
  },
  {
    "text": "subdomain spf components cannot verify the mail from address and can",
    "start": "675519",
    "end": "682000"
  },
  {
    "text": "only verify the hello identifier because now exists our domain doesn't have any spf policy",
    "start": "682000",
    "end": "690399"
  },
  {
    "text": "then the spf component will forward the hello authentication results to demarc",
    "start": "690399",
    "end": "696079"
  },
  {
    "text": "demar components however they are using mail from domain to perform alignment tests because mail from is not",
    "start": "696079",
    "end": "703120"
  },
  {
    "text": "empty so in this case spf will pass because hello domain is",
    "start": "703120",
    "end": "709279"
  },
  {
    "text": "under attacker's control the mac will pass because mail from and from header",
    "start": "709279",
    "end": "714800"
  },
  {
    "text": "has the same registered domain the second example exploits",
    "start": "714800",
    "end": "720680"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "inconsistencies between dkm and dns this is the bug we demonstrated at the beginning of this",
    "start": "720680",
    "end": "727440"
  },
  {
    "text": "talk here is how the attack works first an attacker constructs a spoofing",
    "start": "727440",
    "end": "733440"
  },
  {
    "text": "message and assigns a message with his own private key to generate dkm",
    "start": "733440",
    "end": "738560"
  },
  {
    "text": "signature header in the decal simulation header he specifies the detect value",
    "start": "738560",
    "end": "744480"
  },
  {
    "text": "as bank.com and the s-tag to include a neural creator when the receiving",
    "start": "744480",
    "end": "751600"
  },
  {
    "text": "service receives the email the dqm component will query as the domain key dot d to",
    "start": "751600",
    "end": "757200"
  },
  {
    "text": "obtain the value key but when the dns component reserves this domain",
    "start": "757200",
    "end": "762480"
  },
  {
    "text": "it passes the null character as a stream terminator so the public key is actually obtained",
    "start": "762480",
    "end": "768959"
  },
  {
    "text": "from attack.com so in this case dkm will pass because dqm components use",
    "start": "768959",
    "end": "776160"
  },
  {
    "text": "attacker's public key to verify attacker signed message the mark will pass because the detect",
    "start": "776160",
    "end": "783279"
  },
  {
    "text": "domain is equal to the from head domain",
    "start": "783279",
    "end": "787839"
  },
  {
    "text": "the third example exploits how spf and dkm forward authentication results",
    "start": "790079",
    "end": "795760"
  },
  {
    "text": "to demag for the alignment test rfc defines authentication results",
    "start": "795760",
    "end": "801360"
  },
  {
    "text": "header for communicating those results here is an example of the authentication results",
    "start": "801360",
    "end": "807120"
  },
  {
    "text": "header in the header smtp.mailfrom and header.d represents spf and dkm verify",
    "start": "807120",
    "end": "814399"
  },
  {
    "text": "domain so the demand component will extract those two values",
    "start": "814399",
    "end": "819680"
  },
  {
    "text": "to check alignments with the from header another important information in the",
    "start": "819680",
    "end": "825199"
  },
  {
    "text": "header is the parenthesis the content in the parenthesis means a comment",
    "start": "825199",
    "end": "830639"
  },
  {
    "text": "which should be ignored by the mark here is an example we found to exploit",
    "start": "830639",
    "end": "838079"
  },
  {
    "start": "836000",
    "end": "836000"
  },
  {
    "text": "this forwarding process first an attacker construct a smoothie message",
    "start": "838079",
    "end": "843760"
  },
  {
    "text": "and assign the message with his own private key to generate the dkm signature header",
    "start": "843760",
    "end": "849519"
  },
  {
    "text": "in the dcm signature header he sets the detect value with an open parenthesis embedded in it",
    "start": "849519",
    "end": "856399"
  },
  {
    "text": "when receiving this message the dqm component queries s dot domain key dot d",
    "start": "856399",
    "end": "862959"
  },
  {
    "text": "which is attacker's domain to obtain the value key and it generates the following",
    "start": "862959",
    "end": "868079"
  },
  {
    "text": "authentication results header when receiving the authentication",
    "start": "868079",
    "end": "873120"
  },
  {
    "text": "results header the demand component pass the content after the parentheses as a comment",
    "start": "873120",
    "end": "879279"
  },
  {
    "text": "and take bank.com as the dqm verified to so in this case dkm will pass because",
    "start": "879279",
    "end": "887360"
  },
  {
    "text": "dqm components use attacker's public key to verify attacker's message the mac",
    "start": "887360",
    "end": "893360"
  },
  {
    "text": "will pass because demand components use the first part of the detect domain to check",
    "start": "893360",
    "end": "899199"
  },
  {
    "text": "alignment with the from header",
    "start": "899199",
    "end": "903199"
  },
  {
    "text": "similarly an attacker can also set the parenthesis in the mail from field",
    "start": "906320",
    "end": "912000"
  },
  {
    "text": "to bypass the spf and demand authentication spf verifies the entire",
    "start": "912000",
    "end": "917839"
  },
  {
    "text": "domain but the mark only takes the first part for the alignment test",
    "start": "917839",
    "end": "923600"
  },
  {
    "text": "in addition to the parenthesis an attacker can also use a single quote or double quote to replace the",
    "start": "923600",
    "end": "929759"
  },
  {
    "text": "parentheses okay in the previous slides i press",
    "start": "929759",
    "end": "936320"
  },
  {
    "text": "present three attacks that exploits inconsistencies using a single implementation in the",
    "start": "936320",
    "end": "942800"
  },
  {
    "text": "following talk we will show attacks exploiting inconsistencies across different vendors",
    "start": "942800",
    "end": "948880"
  },
  {
    "text": "which are more diverse and hard to be fixed now i will hand it over to chain to show",
    "start": "948880",
    "end": "954880"
  },
  {
    "text": "how those attacks works thank you changing next i'm going to",
    "start": "954880",
    "end": "961199"
  },
  {
    "text": "present the number of attacks we categorize as ui mismatch attacks",
    "start": "961199",
    "end": "966639"
  },
  {
    "text": "in this attack the tigers were craft emailed messages that containing",
    "start": "966639",
    "end": "973759"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "two identifiers one is the attacker's identifier another is the spoofing",
    "start": "973759",
    "end": "978880"
  },
  {
    "text": "identifier in the way that a receiving service will recognize the attacker's identifier",
    "start": "978880",
    "end": "986079"
  },
  {
    "text": "and for verification and pass the verification however the recipients mua will",
    "start": "986079",
    "end": "994240"
  },
  {
    "text": "pick up the spoofing identifier and display to the uh recipient so the first example the",
    "start": "994240",
    "end": "1001600"
  },
  {
    "text": "attacker was just simply sent a email with two from headers and the",
    "start": "1001600",
    "end": "1007440"
  },
  {
    "text": "first is the attackers tiger's email address another is the spoofing",
    "start": "1007440",
    "end": "1015680"
  },
  {
    "text": "target so the receiving services demark components in some of",
    "start": "1015680",
    "end": "1022880"
  },
  {
    "text": "implementations they were just to pick up the first header and verify that and that will pass of",
    "start": "1022880",
    "end": "1029038"
  },
  {
    "text": "course so um but the sum of this male user agent will pick up",
    "start": "1029039",
    "end": "1037199"
  },
  {
    "text": "the second one to display and that causes the phishing effects some some of those",
    "start": "1037199",
    "end": "1044720"
  },
  {
    "text": "combinations are not vulnerable to this simple format but we find other variations that able",
    "start": "1044720",
    "end": "1051679"
  },
  {
    "text": "to attack those so one of those variation is that you could use",
    "start": "1051679",
    "end": "1057120"
  },
  {
    "text": "a a nine folding format in the first header and",
    "start": "1057120",
    "end": "1063600"
  },
  {
    "text": "some of those team mark implementations will recognize the nine folding format and",
    "start": "1063600",
    "end": "1068799"
  },
  {
    "text": "still verify that but for some of those male user agent or even they are",
    "start": "1068799",
    "end": "1077280"
  },
  {
    "text": "programmed to pick up the first form header but in this case they consider this nine floating from",
    "start": "1077280",
    "end": "1084400"
  },
  {
    "text": "header is invented so they pick up the uh the the actually uh the spoofing",
    "start": "1084400",
    "end": "1091440"
  },
  {
    "text": "identifier cause the attacks",
    "start": "1091440",
    "end": "1096720"
  },
  {
    "text": "another variation is to utilize the normalization behaviors",
    "start": "1096880",
    "end": "1103120"
  },
  {
    "text": "in this case the attacker is sent still to from headers",
    "start": "1103120",
    "end": "1108400"
  },
  {
    "text": "the second one is containing a space in the header name the receiving service",
    "start": "1108400",
    "end": "1116880"
  },
  {
    "text": "will recognize the first one and verifies it actually won't be able to recognize",
    "start": "1116880",
    "end": "1122160"
  },
  {
    "text": "the second one as a vanity header but when it forward to the mua it actually",
    "start": "1122160",
    "end": "1130960"
  },
  {
    "text": "normalized the header and to remove this space and the mua will pick up the second one",
    "start": "1130960",
    "end": "1138559"
  },
  {
    "text": "to display the previous examples use from headers",
    "start": "1138559",
    "end": "1147039"
  },
  {
    "start": "1143000",
    "end": "1143000"
  },
  {
    "text": "multiple from headers actually there is another technique you could use some other headers in the email protocol",
    "start": "1147039",
    "end": "1156720"
  },
  {
    "text": "it defines three type of headers that you could send the identifiers in is from",
    "start": "1156720",
    "end": "1165039"
  },
  {
    "text": "sender and recent from so for some of those muas",
    "start": "1165039",
    "end": "1172160"
  },
  {
    "text": "you have this kind of implementation behavior that if they cannot find a from header",
    "start": "1172480",
    "end": "1179919"
  },
  {
    "text": "they will display sender or recent from so in this example we show",
    "start": "1179919",
    "end": "1186960"
  },
  {
    "text": "that the tiger craft a two headers message one is from",
    "start": "1186960",
    "end": "1193520"
  },
  {
    "text": "uh with a nine floating format another is sender and the dmacc implementation will be",
    "start": "1193520",
    "end": "1200400"
  },
  {
    "text": "able to recognize the from uh in that format and verify that however the mua",
    "start": "1200400",
    "end": "1208320"
  },
  {
    "text": "won't be able to recognize the from so it will think this email does not have a",
    "start": "1208320",
    "end": "1213760"
  },
  {
    "text": "from header then it will display the sender header here there are some other variations of this",
    "start": "1213760",
    "end": "1221120"
  },
  {
    "text": "type of things of multi-headers but not only just you",
    "start": "1221120",
    "end": "1226640"
  },
  {
    "text": "could send the multi-headers to create this ambiguities even you only allowed to send one from",
    "start": "1226640",
    "end": "1233280"
  },
  {
    "text": "header it's still possible to create this type of ambiguities because of the passing complexities",
    "start": "1233280",
    "end": "1241840"
  },
  {
    "text": "take a close look of the from header syntax it is actually a surprisingly complex",
    "start": "1241840",
    "end": "1249120"
  },
  {
    "start": "1243000",
    "end": "1243000"
  },
  {
    "text": "so the from header is defined with four portions and each portion you",
    "start": "1249120",
    "end": "1257360"
  },
  {
    "text": "could put some kind of identifiers in in different places and the parser needs to be",
    "start": "1257360",
    "end": "1265360"
  },
  {
    "text": "correctly picking in this case a at a.com as a real address but many parsers",
    "start": "1265360",
    "end": "1272880"
  },
  {
    "text": "behave differently in addition to that there are a number of string related",
    "start": "1272880",
    "end": "1281039"
  },
  {
    "text": "kind of traps that could make things even more complicated for example you",
    "start": "1281039",
    "end": "1286720"
  },
  {
    "text": "could have unicode characters you could have like",
    "start": "1286720",
    "end": "1292320"
  },
  {
    "text": "encoding you would have those kind of special characters put in uh those uh from header values",
    "start": "1292320",
    "end": "1300480"
  },
  {
    "text": "to to complicate the password we actually find many cases that you can craft",
    "start": "1300480",
    "end": "1308000"
  },
  {
    "text": "to create this type of inconsistencies between the mail server and the email",
    "start": "1308000",
    "end": "1313760"
  },
  {
    "text": "client to launch the ui mismatch attacks the first example we wanted to show is",
    "start": "1313760",
    "end": "1320720"
  },
  {
    "text": "you just simply put two identifiers in the from header",
    "start": "1320720",
    "end": "1326480"
  },
  {
    "text": "and and the sum of the implementations will pick the first one some of those will pick the second one",
    "start": "1326480",
    "end": "1333200"
  },
  {
    "text": "next example is you could craft a from a header with",
    "start": "1333200",
    "end": "1340480"
  },
  {
    "text": "the route portion and some of those implementations they will correctly",
    "start": "1340480",
    "end": "1347760"
  },
  {
    "text": "recognize this is a rough portion so they won't pick up they will pick up the first one",
    "start": "1347760",
    "end": "1353120"
  },
  {
    "text": "as the identifier but some of those implementations they don't support that portion they will just",
    "start": "1353120",
    "end": "1359440"
  },
  {
    "text": "sync this is the second one as the actual identifier",
    "start": "1359440",
    "end": "1366000"
  },
  {
    "text": "and you can also use big space 64 encoding to send the multiple",
    "start": "1366559",
    "end": "1372400"
  },
  {
    "text": "identifiers and the sum of the implementations they will try to do the big 64 decoding",
    "start": "1372400",
    "end": "1379919"
  },
  {
    "text": "so that they could recognize the encoded identifier but some of those",
    "start": "1379919",
    "end": "1385200"
  },
  {
    "text": "implementations won't so that they can only recognize the non-encoded identifiers that also creates a",
    "start": "1385200",
    "end": "1392520"
  },
  {
    "text": "inconsistency spaces there are some other kind of",
    "start": "1392520",
    "end": "1398320"
  },
  {
    "start": "1398000",
    "end": "1398000"
  },
  {
    "text": "format to create this type of inconsistencies like using a special",
    "start": "1398320",
    "end": "1404480"
  },
  {
    "text": "characters what and so on so i'm going to skip those details",
    "start": "1404480",
    "end": "1409520"
  },
  {
    "text": "actually we find this ui mismatch attacks is prevalent",
    "start": "1409520",
    "end": "1414640"
  },
  {
    "text": "among the combinations of those implementations and we find",
    "start": "1414640",
    "end": "1421840"
  },
  {
    "text": "43 out of 82 different combinations that can be exploited in certain ways",
    "start": "1421840",
    "end": "1428720"
  },
  {
    "text": "and and our test is actually not compressed efforts that that are likely more cases of those",
    "start": "1428720",
    "end": "1435520"
  },
  {
    "text": "things please read our papers for more details about this attack",
    "start": "1435520",
    "end": "1441760"
  },
  {
    "start": "1442000",
    "end": "1442000"
  },
  {
    "text": "the previous attacks is actually not perfect in that if",
    "start": "1442480",
    "end": "1450080"
  },
  {
    "text": "a user is careful enough they will check the indicators they will say",
    "start": "1450080",
    "end": "1457840"
  },
  {
    "text": "although it is displayed as a spoofing identifier but it will show that it is",
    "start": "1457840",
    "end": "1464960"
  },
  {
    "text": "either signed was sent by the tigers to men",
    "start": "1464960",
    "end": "1471039"
  },
  {
    "text": "however there are certain other kind of attacks we found that could have the",
    "start": "1471039",
    "end": "1478799"
  },
  {
    "text": "spoofing identifier under the attackers identifier share the same domain for example if",
    "start": "1478799",
    "end": "1485440"
  },
  {
    "text": "some attacker at gmail.com can spoof an email from admin gmail.com that could cause",
    "start": "1485440",
    "end": "1493279"
  },
  {
    "text": "same amount of damage as is spoofing at different domains",
    "start": "1493279",
    "end": "1499919"
  },
  {
    "text": "so how those attacks can be launched",
    "start": "1501200",
    "end": "1506080"
  },
  {
    "text": "of course you could think about you might be able to simply simply login to like the email provider",
    "start": "1507840",
    "end": "1515200"
  },
  {
    "text": "like a gmail uh and and try to send an email",
    "start": "1515200",
    "end": "1520480"
  },
  {
    "text": "using the admin gmail.com but that simple attack won't work most of cases",
    "start": "1520480",
    "end": "1528720"
  },
  {
    "text": "because the sending service were likely to perform some kind of",
    "start": "1528720",
    "end": "1534480"
  },
  {
    "text": "verifications on the claim the from header so that",
    "start": "1534480",
    "end": "1540240"
  },
  {
    "text": "it matches the actual user account but since we have presented",
    "start": "1540240",
    "end": "1548240"
  },
  {
    "text": "the uh the parsing and and the extracting of the identity is",
    "start": "1548240",
    "end": "1553840"
  },
  {
    "text": "actually a complex process that the sending service can also make mistakes",
    "start": "1553840",
    "end": "1559360"
  },
  {
    "text": "so using the previous techniques is that one attacker could create a situation",
    "start": "1559360",
    "end": "1565679"
  },
  {
    "text": "that the sending service will sing verifies",
    "start": "1565679",
    "end": "1571039"
  },
  {
    "text": "as the tiger at gmail.com as the sending a sender identity but however the mua",
    "start": "1571039",
    "end": "1579200"
  },
  {
    "text": "will pick up another one for example admin gmail.com as the",
    "start": "1579200",
    "end": "1585679"
  },
  {
    "text": "displayed uh sender and in this case because of the attacker's domain",
    "start": "1585679",
    "end": "1594000"
  },
  {
    "text": "and the spoofing target is domain is the same so even you check those security",
    "start": "1594000",
    "end": "1599919"
  },
  {
    "text": "indicators you won't be able to recognize any kind of suspicious evidences",
    "start": "1599919",
    "end": "1607760"
  },
  {
    "text": "and we actually found using the previous techniques to craft the email",
    "start": "1607760",
    "end": "1616159"
  },
  {
    "text": "seven out of eight email providers are vulnerable to this type of attack",
    "start": "1616159",
    "end": "1621279"
  },
  {
    "text": "and one exception email provider is actually not vulnerable because it",
    "start": "1621279",
    "end": "1628240"
  },
  {
    "text": "will always try to reset the from header no matter how you craft",
    "start": "1628240",
    "end": "1633360"
  },
  {
    "text": "from and under sender those type of headers it will just reset the from header as",
    "start": "1633360",
    "end": "1640399"
  },
  {
    "text": "the actual user account which in this case the attacker's account",
    "start": "1640399",
    "end": "1647360"
  },
  {
    "text": "with that kind of defense uh forces us to think more about how we can actually",
    "start": "1648080",
    "end": "1655200"
  },
  {
    "text": "attack that particular email providers and we come out with a more complex format of attack",
    "start": "1655200",
    "end": "1662880"
  },
  {
    "text": "so uh this attack combined two steps the first step is",
    "start": "1662880",
    "end": "1669840"
  },
  {
    "text": "that the attacker will log in to this email provider",
    "start": "1669840",
    "end": "1678480"
  },
  {
    "text": "and send to himself a email crafted using this format",
    "start": "1678480",
    "end": "1686720"
  },
  {
    "text": "and the from is attacker gmail.com and the tool is",
    "start": "1686720",
    "end": "1693200"
  },
  {
    "text": "victim at victim.com but since in the envelope the receipt",
    "start": "1693200",
    "end": "1700080"
  },
  {
    "text": "2 is attacker gmail.com so this mail is actually going to be delivered to the attacker himself",
    "start": "1700080",
    "end": "1708240"
  },
  {
    "text": "and in addition uh this email provider will actually provide a valid dkm signature",
    "start": "1708240",
    "end": "1716559"
  },
  {
    "text": "uh signed by signing the from the to and the content",
    "start": "1716559",
    "end": "1723039"
  },
  {
    "text": "so",
    "start": "1723039",
    "end": "1725840"
  },
  {
    "text": "in the next step the attacker will using his own",
    "start": "1728080",
    "end": "1734399"
  },
  {
    "text": "email server to send a the signed uh email with a smart tweet",
    "start": "1734399",
    "end": "1743279"
  },
  {
    "text": "the smart tweet is to add another from header uh so it it actually goes back to our",
    "start": "1743279",
    "end": "1749600"
  },
  {
    "text": "previous attack techniques is this additional from a header creates a ambiguity between the receiving",
    "start": "1749600",
    "end": "1756880"
  },
  {
    "text": "service and the mua of the victim in that the receiving service will verify the",
    "start": "1756880",
    "end": "1765679"
  },
  {
    "text": "dkm signature using the attackers identifier which is the original",
    "start": "1765679",
    "end": "1771600"
  },
  {
    "text": "assigned identifier so that the dkm verification will pass and is the mua",
    "start": "1771600",
    "end": "1779120"
  },
  {
    "text": "will display the admin at gmail.com in this case and then that will becoming a spoofing",
    "start": "1779120",
    "end": "1787200"
  },
  {
    "text": "email to the victim with all of those attacks",
    "start": "1787200",
    "end": "1795360"
  },
  {
    "start": "1793000",
    "end": "1793000"
  },
  {
    "text": "we consider this why this could happen i think is the ultimate problem is the",
    "start": "1795360",
    "end": "1802399"
  },
  {
    "text": "complexity so in the email protocol",
    "start": "1802399",
    "end": "1807520"
  },
  {
    "text": "we think there are three sources of complexities one is that you have",
    "start": "1807520",
    "end": "1814399"
  },
  {
    "text": "multiple identifiers in the email protocol and it is easy to have",
    "start": "1814399",
    "end": "1821279"
  },
  {
    "text": "discrepancies inconsistencies of which identifier to use",
    "start": "1821279",
    "end": "1826320"
  },
  {
    "text": "the second is the syntax of the identifiers can be complex",
    "start": "1826320",
    "end": "1831520"
  },
  {
    "text": "that the processing is not easy to make it right the third one is that in the email",
    "start": "1831520",
    "end": "1838559"
  },
  {
    "text": "systems one email message is processed by multiple components and all of those",
    "start": "1838559",
    "end": "1845600"
  },
  {
    "text": "components need to have some kind of agreement on the identifiers z recognized",
    "start": "1845600",
    "end": "1853279"
  },
  {
    "text": "so that the whole uh some of the assertions security",
    "start": "1853279",
    "end": "1858320"
  },
  {
    "text": "assertions could be hold those are the sources of those",
    "start": "1858320",
    "end": "1866360"
  },
  {
    "text": "inconsistencies come from and from a defense perspective you should",
    "start": "1866360",
    "end": "1872240"
  },
  {
    "text": "just to make it simple to remove those complexities what we think is that when you're",
    "start": "1872240",
    "end": "1878720"
  },
  {
    "text": "designing a protocol not only you wanted to make the product or to be correct but also wanted to make it a product or to",
    "start": "1878720",
    "end": "1885760"
  },
  {
    "text": "be implementation-friendly and make it simple make all these",
    "start": "1885760",
    "end": "1890840"
  },
  {
    "text": "messages well-typed and easy to pass and you also",
    "start": "1890840",
    "end": "1896000"
  },
  {
    "text": "should try to reduce or avoid multi-party processing that you need a",
    "start": "1896000",
    "end": "1902799"
  },
  {
    "text": "multi-party to have some agreement two parties is good enough if you have three party four party needs to agree on",
    "start": "1902799",
    "end": "1909519"
  },
  {
    "text": "something that likely to have some issues and generally when you do the passing it",
    "start": "1909519",
    "end": "1916159"
  },
  {
    "text": "should be strict on what you accept and reject any kind of suspicious format you would",
    "start": "1916159",
    "end": "1923679"
  },
  {
    "text": "like to to avoid this kind of passing issues",
    "start": "1923679",
    "end": "1930240"
  },
  {
    "text": "the second point we wanted to bring up is that we found the user interface of email",
    "start": "1930240",
    "end": "1938559"
  },
  {
    "text": "is not sufficient to have some kind of a security assurance",
    "start": "1938559",
    "end": "1943760"
  },
  {
    "text": "so even for a security professional it's not easy for them to use any kind of",
    "start": "1943760",
    "end": "1951360"
  },
  {
    "text": "security indicators to to show this if this email is trustable or not i think",
    "start": "1951360",
    "end": "1957519"
  },
  {
    "text": "there are plenty of spaces to improve in that direction finally for the in the users",
    "start": "1957519",
    "end": "1965440"
  },
  {
    "text": "we would like to remind that don't blindly trust the email",
    "start": "1965440",
    "end": "1972159"
  },
  {
    "text": "displayed in your webmail or email clients try as much as you can",
    "start": "1972159",
    "end": "1979279"
  },
  {
    "text": "to verify why this email is trustable and also we wanted to advocate using",
    "start": "1979279",
    "end": "1987039"
  },
  {
    "text": "pgp as a secure email mechanism because pgp as of the authentication in",
    "start": "1987039",
    "end": "1994640"
  },
  {
    "text": "pgp is much simpler in that it provides a end-to-end",
    "start": "1994640",
    "end": "2000640"
  },
  {
    "text": "authentication only involving two parties and also the identifier is more likely more robust from those",
    "start": "2000640",
    "end": "2008320"
  },
  {
    "text": "inconsistencies it can have its own problems but hopefully",
    "start": "2008320",
    "end": "2013840"
  },
  {
    "text": "better than the tradition standard email particles",
    "start": "2013840",
    "end": "2019519"
  },
  {
    "text": "we have connected all of those test cases and and and put",
    "start": "2019519",
    "end": "2025679"
  },
  {
    "text": "it together into a tool we publish on github for those",
    "start": "2025679",
    "end": "2031360"
  },
  {
    "text": "interested to play around please check this link",
    "start": "2031360",
    "end": "2036640"
  },
  {
    "text": "that's our presentation thank you thank you very much",
    "start": "2037039",
    "end": "2042640"
  },
  {
    "text": "the is closer uh yes we we have we have",
    "start": "2044640",
    "end": "2051118"
  },
  {
    "text": "disclosed for the tax to the departed vendors and",
    "start": "2051119",
    "end": "2058000"
  },
  {
    "text": "uh we tested we actually tested the 20 email services and 19 email clients",
    "start": "2058839",
    "end": "2065520"
  },
  {
    "text": "and uh most of them respond our report positively and uh",
    "start": "2065520",
    "end": "2072560"
  },
  {
    "text": "and or except microsoft and [Music] uh said that they are fixing them or",
    "start": "2072560",
    "end": "2079358"
  },
  {
    "text": "they have fixed them and microsoft",
    "start": "2079359",
    "end": "2085119"
  },
  {
    "text": "said doesn't consider this report as a valid security report because they don't",
    "start": "2086839",
    "end": "2093839"
  },
  {
    "text": "consider social engineering attacks uh as a secured vulnerability because the",
    "start": "2093839",
    "end": "2101280"
  },
  {
    "text": "this this this email support is often used for phishing attacks and yahoo doesn't",
    "start": "2101280",
    "end": "2108000"
  },
  {
    "text": "consider these attacks because uh they think we our attack is relying dns",
    "start": "2108000",
    "end": "2116880"
  },
  {
    "text": "with complete missed configuration so they they just ignored my report",
    "start": "2116880",
    "end": "2131838"
  },
  {
    "text": "the second the second question is has",
    "start": "2147920",
    "end": "2156000"
  },
  {
    "text": "this report been discussed in ihf yeah we didn't report",
    "start": "2156000",
    "end": "2162800"
  },
  {
    "text": "uh we didn't report this this paper to the itf but uh",
    "start": "2162800",
    "end": "2169359"
  },
  {
    "text": "i searched our paper on the intern on the internet and found that there was a discussion in the",
    "start": "2169359",
    "end": "2176079"
  },
  {
    "text": "tmac uh working group and they feel this is an",
    "start": "2176079",
    "end": "2183200"
  },
  {
    "text": "implementation issue rather than a specification issue so",
    "start": "2183200",
    "end": "2189280"
  },
  {
    "text": "probably there there there yeah they have discussed",
    "start": "2190079",
    "end": "2196800"
  },
  {
    "text": "this general the discussion link",
    "start": "2196800",
    "end": "2202079"
  },
  {
    "text": "in the chat box related to that junjin there's a question about if dkim spf dmarc are all properly",
    "start": "2202079",
    "end": "2211280"
  },
  {
    "text": "implemented and if the mua has strict for all rfc compliance",
    "start": "2211280",
    "end": "2216800"
  },
  {
    "text": "can email still be spoofed",
    "start": "2216800",
    "end": "2229839"
  },
  {
    "text": "it depends on what do you mean by properly implemented",
    "start": "2239520",
    "end": "2244640"
  },
  {
    "text": "our attacks employ inconsistencies between two different components in the email",
    "start": "2244640",
    "end": "2251520"
  },
  {
    "text": "processing chain so some messages are actually valid message for example",
    "start": "2251520",
    "end": "2257920"
  },
  {
    "text": "a message with a from header with a two address in the from header and this is actually rc compatible",
    "start": "2257920",
    "end": "2264960"
  },
  {
    "text": "message and but different uh",
    "start": "2264960",
    "end": "2270720"
  },
  {
    "text": "components may recognize a different identifier",
    "start": "2270720",
    "end": "2275760"
  },
  {
    "text": "in the in the message for example the email server may recognize the first one mua may",
    "start": "2276640",
    "end": "2281920"
  },
  {
    "text": "recognize the second one so yeah um let me answer",
    "start": "2281920",
    "end": "2288720"
  },
  {
    "text": "another question which is has there been any effort to make zeke or snort detections for these",
    "start": "2288720",
    "end": "2294480"
  },
  {
    "text": "techniques i can't speak to snort um zeke of course is near and dear to what i do",
    "start": "2294480",
    "end": "2301040"
  },
  {
    "text": "in the core light um and the from carlite's perspective no not yet",
    "start": "2301040",
    "end": "2308960"
  },
  {
    "text": "and the main reason is we rarely have visibility in the clear text",
    "start": "2308960",
    "end": "2314000"
  },
  {
    "text": "as email on the wire it's usually inside tls and so there's not an opportunity to",
    "start": "2314000",
    "end": "2320880"
  },
  {
    "text": "look for these things in environments for that changes that it would be interesting certainly",
    "start": "2320880",
    "end": "2326000"
  },
  {
    "text": "to code up such techniques",
    "start": "2326000",
    "end": "2341839"
  },
  {
    "text": "okay",
    "start": "2342160",
    "end": "2344640"
  },
  {
    "text": "yeah we have so many questions and uh so little time yeah yeah uh",
    "start": "2347599",
    "end": "2355839"
  },
  {
    "text": "but we will we will answer the questions in the in the channel after this video uh",
    "start": "2355839",
    "end": "2362400"
  },
  {
    "text": "in the chat box one by one and feel free to uh follow the twitter on",
    "start": "2362400",
    "end": "2370400"
  },
  {
    "text": "collabs for my twitter to ask me any questions and we will also",
    "start": "2370400",
    "end": "2377599"
  },
  {
    "text": "provide all the materials such as papers our tools and and the",
    "start": "2377599",
    "end": "2384400"
  },
  {
    "text": "slides if they use the blackhead and slides in in the chat box",
    "start": "2384400",
    "end": "2391200"
  },
  {
    "text": "and so or make a tweet about those materials",
    "start": "2391200",
    "end": "2397839"
  },
  {
    "text": "great thank you very much folks yeah thank you",
    "start": "2399839",
    "end": "2406960"
  }
]