[
  {
    "text": "foreign",
    "start": "1979",
    "end": "4159"
  },
  {
    "text": "thank you for attending our talk I'm joking from and group FG security lab",
    "start": "11540",
    "end": "16980"
  },
  {
    "text": "and this talk lamb the data binding to show lower Pathways to RC web Frameworks",
    "start": "16980",
    "end": "23160"
  },
  {
    "text": "today we are going to show our research and findings about the advantage mechanism",
    "start": "23160",
    "end": "29220"
  },
  {
    "text": "first edit introduction about us is located down by me and the whole room also faster from unskilled FG lab and my",
    "start": "29220",
    "end": "37739"
  },
  {
    "text": "college is also a city player at allow team well I'm going to start with the",
    "start": "37739",
    "end": "44160"
  },
  {
    "text": "introduction about dead body vectors what data pointing is how it works and I",
    "start": "44160",
    "end": "49500"
  },
  {
    "text": "will show the previous research about it and then I'll text green as an example to detail how we analyzed it by the",
    "start": "49500",
    "end": "56820"
  },
  {
    "text": "mechanism implementations and the journey of a heightened Supreme for shell and then my college Halloween will",
    "start": "56820",
    "end": "63539"
  },
  {
    "text": "present different implementations on the design principles of data binding mechanism between different web",
    "start": "63539",
    "end": "69540"
  },
  {
    "text": "Frameworks and the show some interesting findings she will also detail how to",
    "start": "69540",
    "end": "74700"
  },
  {
    "text": "exploit them to achieve RC and finally some approaches to defense will be",
    "start": "74700",
    "end": "79979"
  },
  {
    "text": "provided let's start with an example Suppose there is a UI on axis a user is",
    "start": "79979",
    "end": "87360"
  },
  {
    "text": "creating an account and the user information is sent to the background at the different HTTP request performance",
    "start": "87360",
    "end": "94740"
  },
  {
    "text": "however in backend the server this information is stored in the Java beam named user which is a very common",
    "start": "94740",
    "end": "101100"
  },
  {
    "text": "scenario in objective oriented language so the developers always have to mapping",
    "start": "101100",
    "end": "106500"
  },
  {
    "text": "the HTTP request environment to an objective instance",
    "start": "106500",
    "end": "111659"
  },
  {
    "text": "fortunately some web Frameworks do this vaping work automatically for example in",
    "start": "111659",
    "end": "116939"
  },
  {
    "text": "Spring the develops just have to create a controller that accept the user object",
    "start": "116939",
    "end": "122159"
  },
  {
    "text": "as the pyramid and the Supreme framework or instances and making the HTTP request",
    "start": "122159",
    "end": "127740"
  },
  {
    "text": "payments to the field of use object automatically in this talk the process of finding",
    "start": "127740",
    "end": "134280"
  },
  {
    "text": "request element to effect to a domain object is called Data pointing",
    "start": "134280",
    "end": "140420"
  },
  {
    "text": "obviously the dead body mechanism helps develop the load and make code container",
    "start": "140420",
    "end": "145560"
  },
  {
    "text": "because they don't have to write the running code to construct the Java beam",
    "start": "145560",
    "end": "150720"
  },
  {
    "text": "object before using as a popular feature the text binding mechanism is widely",
    "start": "150720",
    "end": "156239"
  },
  {
    "text": "implemented by best web Frameworks writing in trading language including Java JavaScript rui python Ruby and",
    "start": "156239",
    "end": "164819"
  },
  {
    "text": "donut however previous research showed that the data binding mechanism can sometimes",
    "start": "164819",
    "end": "170760"
  },
  {
    "text": "cause harm for example Suppose there is another field in use class which named the admin",
    "start": "170760",
    "end": "176940"
  },
  {
    "text": "flag it makes whether the user have admin privilege a lot and then",
    "start": "176940",
    "end": "182940"
  },
  {
    "text": "and when user registry the HTML form contains the user and the engine only like in the slide",
    "start": "182940",
    "end": "190560"
  },
  {
    "text": "so the developers expect the URL like username X hacker and H equals 25. but",
    "start": "190560",
    "end": "197280"
  },
  {
    "text": "what if ultimate equals one is also sended to the backend server",
    "start": "197280",
    "end": "203480"
  },
  {
    "text": "there is a low difference between the field admin flag and the other field so the ultimate flag will be set",
    "start": "203519",
    "end": "209519"
  },
  {
    "text": "automatically too and allow the user hacker has admin privilege which is only intended by the application",
    "start": "209519",
    "end": "216239"
  },
  {
    "text": "this is the Mason assignment vulnerability it's occurs when the attacker is able to access the sensitive",
    "start": "216239",
    "end": "223620"
  },
  {
    "text": "field of a domain object for example it means flag in the scenario",
    "start": "223620",
    "end": "229260"
  },
  {
    "text": "so most web Frameworks provide a solution to communicate the risk for example in Spring the develops can even",
    "start": "229260",
    "end": "235920"
  },
  {
    "text": "work save this loud field method to stop streaming framework from finding the",
    "start": "235920",
    "end": "241200"
  },
  {
    "text": "field automatically we find that the previous research",
    "start": "241200",
    "end": "248459"
  },
  {
    "text": "mainly focused on improval use of data funding so I was the security of the advantage mechanism has been eaten mode",
    "start": "248459",
    "end": "255959"
  },
  {
    "text": "for a long time so we decided to contact the research on the security of data party magazine",
    "start": "255959",
    "end": "261600"
  },
  {
    "text": "itself and see what we can find first of all let's choose a great Target",
    "start": "261600",
    "end": "269000"
  },
  {
    "text": "Supreme framework is the most widely used Java web framework and they they and there is a low critical security",
    "start": "269040",
    "end": "276000"
  },
  {
    "text": "vulnerabilities in the past 10 years so let's take the challenge and choose",
    "start": "276000",
    "end": "281100"
  },
  {
    "text": "it as our first Target the super framework provides several",
    "start": "281100",
    "end": "286800"
  },
  {
    "text": "ways to map the HTTP request Department to controller pyramids as we can see in the slide",
    "start": "286800",
    "end": "293639"
  },
  {
    "text": "and how does this baby works and what's the differences between them",
    "start": "293639",
    "end": "299780"
  },
  {
    "text": "this is the status of handing annotation at the request performance and this we",
    "start": "299820",
    "end": "306000"
  },
  {
    "text": "can see the structures of data findings in screen just like that we can see the difference",
    "start": "306000",
    "end": "313020"
  },
  {
    "text": "between then we can see the data party mechanism is much more complicated",
    "start": "313020",
    "end": "319040"
  },
  {
    "text": "between more security risks to answer this question we have to find",
    "start": "319040",
    "end": "324780"
  },
  {
    "text": "out how the advantage is implemented in Superior framework the key message of",
    "start": "324780",
    "end": "330240"
  },
  {
    "text": "data binding mechanism implementation is the method called the two bind of the",
    "start": "330240",
    "end": "336000"
  },
  {
    "text": "data binder class for convenience I prepared a better",
    "start": "336000",
    "end": "341340"
  },
  {
    "text": "example to demonstrate how data pandemic didn't work since brain framework the user class has one extra Field address",
    "start": "341340",
    "end": "349139"
  },
  {
    "text": "which is also a complicated object and when a dress taught City to the",
    "start": "349139",
    "end": "355440"
  },
  {
    "text": "postcode equals three triple zero seven one is set to screen application the",
    "start": "355440",
    "end": "361440"
  },
  {
    "text": "postcode of the city object will be set automatically let's see what happened in",
    "start": "361440",
    "end": "366720"
  },
  {
    "text": "the two Band Method during the process the argument of two findable",
    "start": "366720",
    "end": "373979"
  },
  {
    "text": "two-band method is unlike hashimab the key of the map is called the product path and the value of the map is called",
    "start": "373979",
    "end": "381419"
  },
  {
    "text": "the property value they are passed from HTTP requested pyramids",
    "start": "381419",
    "end": "386759"
  },
  {
    "text": "first the method checks whether the probability path is allowed or",
    "start": "386759",
    "end": "392160"
  },
  {
    "text": "required and then invoke the method called apply property value which do the",
    "start": "392160",
    "end": "398580"
  },
  {
    "text": "main binding works first of all the supply property value",
    "start": "398580",
    "end": "405300"
  },
  {
    "text": "method split the property pass the approved path will be split by",
    "start": "405300",
    "end": "411979"
  },
  {
    "text": "separators such as the daughter and the left square bracket this property pass",
    "start": "411979",
    "end": "417840"
  },
  {
    "text": "is split into three parts and they will be handled one by one",
    "start": "417840",
    "end": "422880"
  },
  {
    "text": "will handle the first part to address the Supreme framework will get the address from the user object and the",
    "start": "422880",
    "end": "429539"
  },
  {
    "text": "second part is the city the Supreme framework will get the city from the",
    "start": "429539",
    "end": "434580"
  },
  {
    "text": "object the address object and the master will be different the",
    "start": "434580",
    "end": "439919"
  },
  {
    "text": "Supreme framework will set the postcode of the city object in one word",
    "start": "439919",
    "end": "445319"
  },
  {
    "text": "there are four more parts Gateway used while the last one set values father",
    "start": "445319",
    "end": "450360"
  },
  {
    "text": "holds the gate and the set values implemented we all know that there are two types of",
    "start": "450360",
    "end": "457380"
  },
  {
    "text": "two ways in Java one is to use reflection to access the field and the other is the work set or get method",
    "start": "457380",
    "end": "465720"
  },
  {
    "text": "so bring us later so the next important step is to reserve the gate and set",
    "start": "465720",
    "end": "471180"
  },
  {
    "text": "method of the Java beam in Spring this part is in case the",
    "start": "471180",
    "end": "476400"
  },
  {
    "text": "introspective result class it is Implement implemented by invoking it being info method it will reached a bin",
    "start": "476400",
    "end": "484259"
  },
  {
    "text": "info described from the given target class which included the Satan and the gate method of the given class itself",
    "start": "484259",
    "end": "490860"
  },
  {
    "text": "and its super classes specification to specify what",
    "start": "490860",
    "end": "497819"
  },
  {
    "text": "information should be included in in info and what is the load",
    "start": "497819",
    "end": "502919"
  },
  {
    "text": "and it also specifies what kind of data and data method is probably described for example there are three simple",
    "start": "502919",
    "end": "510060"
  },
  {
    "text": "methods inside and the formal two methods here is a property structure",
    "start": "510060",
    "end": "515339"
  },
  {
    "text": "while the third is load because the return value of the State method should",
    "start": "515339",
    "end": "520680"
  },
  {
    "text": "be avoid according to the Java beam specification so let's see the property disk factor of",
    "start": "520680",
    "end": "528720"
  },
  {
    "text": "our user class this screenshot we can see there are four property described in",
    "start": "528720",
    "end": "533880"
  },
  {
    "text": "user class but we can see there is a strange one here the class",
    "start": "533880",
    "end": "539339"
  },
  {
    "text": "why it appears do you remember that the cabin information that will receive",
    "start": "539339",
    "end": "546180"
  },
  {
    "text": "description from the keyword class and the super classes or class in Java have",
    "start": "546180",
    "end": "551459"
  },
  {
    "text": "a common superclass",
    "start": "551459",
    "end": "554720"
  },
  {
    "text": "which is also a property described so this prep this particular gate",
    "start": "559100",
    "end": "566040"
  },
  {
    "text": "message that bring a lot of trouble we can see some security restrictions about it here and we are going to analyze it",
    "start": "566040",
    "end": "572940"
  },
  {
    "text": "later and let's back to the that binding process after we after we resolve the",
    "start": "572940",
    "end": "580019"
  },
  {
    "text": "data and the set method The Next Step must be in walks in just a bit just a new work at the center",
    "start": "580019",
    "end": "586740"
  },
  {
    "text": "and the get method then we finish the data binding process",
    "start": "586740",
    "end": "592260"
  },
  {
    "text": "hold on let's back to the example the type of the postcode is the integer but",
    "start": "592260",
    "end": "598560"
  },
  {
    "text": "we all know that the HTTP request parameter is a string so they must be",
    "start": "598560",
    "end": "603959"
  },
  {
    "text": "something we missed before in working set and the get method",
    "start": "603959",
    "end": "609600"
  },
  {
    "text": "type conversion must be done Supreme framework can handle two types of conversion",
    "start": "609600",
    "end": "615959"
  },
  {
    "text": "one is the example shows convert the stream to some particular type like",
    "start": "615959",
    "end": "621720"
  },
  {
    "text": "integer double Etc this is implemented by conversion",
    "start": "621720",
    "end": "627120"
  },
  {
    "text": "service the interesting is that we find the particular conversion service it can",
    "start": "627120",
    "end": "632399"
  },
  {
    "text": "conversion stream to any class if only the target class has a Constructor which",
    "start": "632399",
    "end": "637500"
  },
  {
    "text": "accepts only one string argument for example we can convert a string",
    "start": "637500",
    "end": "643140"
  },
  {
    "text": "value to a Java connect to the UI or object because the URL class has",
    "start": "643140",
    "end": "648300"
  },
  {
    "text": "constructed of except the one string arguments this feature do benefit the develops but",
    "start": "648300",
    "end": "654839"
  },
  {
    "text": "sometimes it also calls some side effects the other kind of conversion is about",
    "start": "654839",
    "end": "661140"
  },
  {
    "text": "Collections and map objects the Supreme framework provide the",
    "start": "661140",
    "end": "666560"
  },
  {
    "text": "capabilities to these types so let's back to the example when the",
    "start": "666560",
    "end": "673320"
  },
  {
    "text": "Supreme framework by The Imposter code is just like the full name for shield code user.get",
    "start": "673320",
    "end": "680480"
  },
  {
    "text": "address.getcity.set postcode okay along with all the details of data",
    "start": "680480",
    "end": "687300"
  },
  {
    "text": "by the magnetic implementation in super framework let's start to handbox",
    "start": "687300",
    "end": "693440"
  },
  {
    "text": "there are four main steps of data binding implementation screen every step design tips analyze during the research",
    "start": "693720",
    "end": "701820"
  },
  {
    "text": "we find that something interesting when resolving the data and the same method",
    "start": "701820",
    "end": "707339"
  },
  {
    "text": "just like the we can see there are some Securities restrictions here which show our attention at the first time this",
    "start": "707339",
    "end": "714120"
  },
  {
    "text": "skill registration is the fixed of cue 2010 6022 so if statement is this patch which is a",
    "start": "714120",
    "end": "722279"
  },
  {
    "text": "little confusion added for the glance this statement filter some filter and",
    "start": "722279",
    "end": "728339"
  },
  {
    "text": "set method from being u4 let's see whether we can bypass it",
    "start": "728339",
    "end": "734899"
  },
  {
    "text": "we all know that the and operator has a more priority than the O operator so if",
    "start": "735480",
    "end": "742140"
  },
  {
    "text": "condition 1 is true then the if statement will be true and the condition 2 and the 3 will be ignored",
    "start": "742140",
    "end": "749399"
  },
  {
    "text": "so the problem is is there another object which has a class of the field",
    "start": "749399",
    "end": "754980"
  },
  {
    "text": "and can be accessed by gate method and this patch Works in 10 years ago but",
    "start": "754980",
    "end": "761339"
  },
  {
    "text": "allowed is there any changes the jedication team is released in their",
    "start": "761339",
    "end": "766800"
  },
  {
    "text": "any new features impact the patch we noticed that the Java 9 bring some",
    "start": "766800",
    "end": "773880"
  },
  {
    "text": "big features one of them is a module system",
    "start": "773880",
    "end": "778399"
  },
  {
    "text": "the field module and its get method has been added to Java to London class and",
    "start": "779160",
    "end": "785459"
  },
  {
    "text": "so in constantly the module class has a database order named the gate class model which Returns the classroom of the",
    "start": "785459",
    "end": "791940"
  },
  {
    "text": "current class so this change the class and the clustered Again by",
    "start": "791940",
    "end": "797779"
  },
  {
    "text": "class.gov dot class load so we can bypass the Blacklist by class",
    "start": "797779",
    "end": "804959"
  },
  {
    "text": "to the module to the class loader and allow we can manipulate the class load",
    "start": "804959",
    "end": "811200"
  },
  {
    "text": "this is the most important step of the Supreme share with probability and",
    "start": "811200",
    "end": "816300"
  },
  {
    "text": "finally we'll chill RC Instagram Frameworks and the exploit will be shown",
    "start": "816300",
    "end": "821700"
  },
  {
    "text": "in the first part of this talk let's look at the Supreme shell for",
    "start": "821700",
    "end": "828540"
  },
  {
    "text": "Shell from another perspective the Silvery 2010 60 22 has been fixed by",
    "start": "828540",
    "end": "834899"
  },
  {
    "text": "remove dangerous gate method and this dangerous get method are reached from",
    "start": "834899",
    "end": "840839"
  },
  {
    "text": "Tower launched class which means the page renowned on the immutability of java terminal class",
    "start": "840839",
    "end": "847320"
  },
  {
    "text": "which is a jdk class and maintained by jdk team instead of supreme Developers",
    "start": "847320",
    "end": "854399"
  },
  {
    "text": "so when a new get method the get module is added to Java launch class the page",
    "start": "854399",
    "end": "861000"
  },
  {
    "text": "can be bypassed so I want to ask if there are more cases",
    "start": "861000",
    "end": "867060"
  },
  {
    "text": "like this your patch rely on something which you cannot control and the low",
    "start": "867060",
    "end": "872100"
  },
  {
    "text": "body from me promise is the immutability and you will not be notified when",
    "start": "872100",
    "end": "878279"
  },
  {
    "text": "the changes happens I think this kind of scenario should draw more attention by developers and",
    "start": "878279",
    "end": "884399"
  },
  {
    "text": "security researchers okay let's back to the data body method",
    "start": "884399",
    "end": "890639"
  },
  {
    "text": "as a fundamental mechanism that exist in lots of web Frameworks will begin with",
    "start": "890639",
    "end": "896459"
  },
  {
    "text": "the security risk of data binding mechanism is widespread so we went and analyzed a lot of web",
    "start": "896459",
    "end": "902160"
  },
  {
    "text": "Frameworks and let me switch to my college hogwen and she will present what",
    "start": "902160",
    "end": "908100"
  },
  {
    "text": "we find",
    "start": "908100",
    "end": "910579"
  },
  {
    "text": "hi everyone I'm Howard the rest of this session will be present by me let's start this chapter more Frameworks in",
    "start": "916560",
    "end": "923940"
  },
  {
    "text": "the finance in the previous part we should stream for a lot of Frameworks and we finally",
    "start": "923940",
    "end": "930180"
  },
  {
    "text": "find Supreme for sure so we can think about the problem do the rest of the Frameworks have the similar risk the",
    "start": "930180",
    "end": "937260"
  },
  {
    "text": "answer is yes we have found some interesting scenes from the research and",
    "start": "937260",
    "end": "942720"
  },
  {
    "text": "choose something typical Finance to share in this findings the most intuitive is a different data binding",
    "start": "942720",
    "end": "950760"
  },
  {
    "text": "implementations in Frameworks so we will start drawing it",
    "start": "950760",
    "end": "957680"
  },
  {
    "text": "first we will introduce the data binding implementation of Grails growth is a",
    "start": "959040",
    "end": "964680"
  },
  {
    "text": "framework employment by a groovy language and implements the logic of",
    "start": "964680",
    "end": "970019"
  },
  {
    "text": "data binding by itself the implementation logic is mainly represented by the recursive Loop",
    "start": "970019",
    "end": "976440"
  },
  {
    "text": "processing of the data simple data binder we use the URL sample to",
    "start": "976440",
    "end": "981540"
  },
  {
    "text": "introduce its passing process which mailing consists of three steps",
    "start": "981540",
    "end": "987320"
  },
  {
    "text": "in the first step similar to bring growth also stability HTTP parameters by",
    "start": "987320",
    "end": "994139"
  },
  {
    "text": "dots and passes them in order in the Second Step growth get the get meta",
    "start": "994139",
    "end": "1001339"
  },
  {
    "text": "property function from The Meta class of data binding and object to find a value",
    "start": "1001339",
    "end": "1006920"
  },
  {
    "text": "there is a properly matching The Key Of The Binding object then in the third",
    "start": "1006920",
    "end": "1012259"
  },
  {
    "text": "step call the set or get method in a repeated the previous steps",
    "start": "1012259",
    "end": "1020320"
  },
  {
    "text": "the second framework we will introduce is Micronaut which writing in Java in",
    "start": "1021440",
    "end": "1026480"
  },
  {
    "text": "the common data binding Logic the processing Logic for HTTP phone data and",
    "start": "1026480",
    "end": "1031579"
  },
  {
    "text": "the data in special formats such as Json and XML is different however a various",
    "start": "1031579",
    "end": "1037819"
  },
  {
    "text": "virtual Implement solution is used in macronaut after receiving the HTTP form",
    "start": "1037819",
    "end": "1043280"
  },
  {
    "text": "data background automobile store the form data in the linked hash map then convert it to Json node in the complete",
    "start": "1043280",
    "end": "1050720"
  },
  {
    "text": "the class regression through Jackson this means that even though the content tab you pass in is form URL encoded it",
    "start": "1050720",
    "end": "1059539"
  },
  {
    "text": "is actually puzzled in Json format so the third implementation we want to",
    "start": "1059539",
    "end": "1066200"
  },
  {
    "text": "introduce is the play framework which writing in Scott the play framework select a specific processing class",
    "start": "1066200",
    "end": "1073700"
  },
  {
    "text": "according to the number of fields declared by the class which completely avoids The Hiding Fields however",
    "start": "1073700",
    "end": "1081559"
  },
  {
    "text": "due to the one-to-one marking the play framework only supports the processing of classes with up to 25 fields",
    "start": "1081559",
    "end": "1090620"
  },
  {
    "text": "so different Frameworks have different implementations of data binding and",
    "start": "1090620",
    "end": "1095900"
  },
  {
    "text": "these Frameworks is very different language you said there are different language features affect the security of",
    "start": "1095900",
    "end": "1102440"
  },
  {
    "text": "data binding next we will introduce it okay imported the future of groovy",
    "start": "1102440",
    "end": "1108620"
  },
  {
    "text": "language is meta programming which is very Dynamic and in this coding example",
    "start": "1108620",
    "end": "1114140"
  },
  {
    "text": "the person class only one name field is no Setter or getter functions and the",
    "start": "1114140",
    "end": "1121280"
  },
  {
    "text": "name field is provide in groovy after instantiant first we can",
    "start": "1121280",
    "end": "1127160"
  },
  {
    "text": "directly access the provider tribute name and assign it to value therefore the provided property of class",
    "start": "1127160",
    "end": "1134720"
  },
  {
    "text": "loader can also be said directly such as pass in UCP",
    "start": "1134720",
    "end": "1141740"
  },
  {
    "text": "another important future of groovy is that meta programming introduces more properties than Java for a common class",
    "start": "1141740",
    "end": "1149720"
  },
  {
    "text": "the growth framework have many additional properties such as metacast metal property values and so on then the",
    "start": "1149720",
    "end": "1157340"
  },
  {
    "text": "springform work these additional attributes are related to group with meta programming",
    "start": "1157340",
    "end": "1164240"
  },
  {
    "text": "in fact they are also well known running vulnerability because of either a similar route such as prototype",
    "start": "1164240",
    "end": "1170299"
  },
  {
    "text": "pollution in node.js in this code there are two properties in the demo class but",
    "start": "1170299",
    "end": "1176720"
  },
  {
    "text": "in knowledges it also automatically inherits some implemented attributes",
    "start": "1176720",
    "end": "1182840"
  },
  {
    "text": "such as the proton in addition to the demo class common objects such as strings number and rails also",
    "start": "1182840",
    "end": "1190940"
  },
  {
    "text": "automatically inherit the Proto attribute when they are created the Prototype production attack with the use",
    "start": "1190940",
    "end": "1198140"
  },
  {
    "text": "of this language feature in node.js after introducing the different",
    "start": "1198140",
    "end": "1204679"
  },
  {
    "text": "framework implementations and the language features we turn our attention to the security restrictions of the data",
    "start": "1204679",
    "end": "1212360"
  },
  {
    "text": "binding mechanism in the first fix for screen the main layer is to add three",
    "start": "1212360",
    "end": "1217580"
  },
  {
    "text": "new Blacklist with the help of these new flag list the access to the class",
    "start": "1217580",
    "end": "1223220"
  },
  {
    "text": "builder attribute of the Class Type is blocked in the next repair for spring it added a",
    "start": "1223220",
    "end": "1231860"
  },
  {
    "text": "lot of white list which subjected a question",
    "start": "1231860",
    "end": "1236919"
  },
  {
    "text": "that muted hi we can't hear you",
    "start": "1247640",
    "end": "1255440"
  },
  {
    "text": "hey just hold one second just wait one second please",
    "start": "1255440",
    "end": "1262160"
  },
  {
    "text": "open the probability of",
    "start": "1262160",
    "end": "1265539"
  },
  {
    "text": "through unexpected field access zero four the data binding mechanism is",
    "start": "1267860",
    "end": "1273140"
  },
  {
    "text": "secure under the strict mapping mechanism from the play framework this",
    "start": "1273140",
    "end": "1278419"
  },
  {
    "text": "is a strange but you save practice in the growth Frameworks both whitelists",
    "start": "1278419",
    "end": "1286160"
  },
  {
    "text": "and Blacklist are implemented in the security restrictions of the data binding mechanism in this code proper",
    "start": "1286160",
    "end": "1293240"
  },
  {
    "text": "name represents the content of the parameter key passed in from the HTTP",
    "start": "1293240",
    "end": "1298460"
  },
  {
    "text": "data while the list and Blacklist are a world manually specified by the developers and the content is specified",
    "start": "1298460",
    "end": "1307039"
  },
  {
    "text": "field name we previously introduce a type of vulnerability which called a nice",
    "start": "1307039",
    "end": "1313520"
  },
  {
    "text": "assignment and it took spring as an example to introduce how to defend it through set it as a load field",
    "start": "1313520",
    "end": "1321340"
  },
  {
    "text": "however said it is allowed field is not Flawless and can also be bypassed before",
    "start": "1321340",
    "end": "1327620"
  },
  {
    "text": "data binding Subaru will determine whether the key matches the value in set",
    "start": "1327620",
    "end": "1333260"
  },
  {
    "text": "it as a load field this matching process is case sensitive when binding field",
    "start": "1333260",
    "end": "1338679"
  },
  {
    "text": "screen will convert the first letter of the field name and the true uppercase",
    "start": "1338679",
    "end": "1344539"
  },
  {
    "text": "and the lowercase give it a specified figure cannot be obtained from the",
    "start": "1344539",
    "end": "1349700"
  },
  {
    "text": "object and retrieve the field again this means that the case of First Data of the",
    "start": "1349700",
    "end": "1355940"
  },
  {
    "text": "field name will not affecting the actual pending logic but it will prefer to set",
    "start": "1355940",
    "end": "1361700"
  },
  {
    "text": "this load field therefore we only need to capitalize the",
    "start": "1361700",
    "end": "1367880"
  },
  {
    "text": "first letter of admin flag to complete data binding well by passing since this",
    "start": "1367880",
    "end": "1373640"
  },
  {
    "text": "allowed field next let's continue to look at the",
    "start": "1373640",
    "end": "1379159"
  },
  {
    "text": "security restriction bypassing the growth framework due to groovy's language Futures there will be many",
    "start": "1379159",
    "end": "1386659"
  },
  {
    "text": "potential attributes when data binding is performed for the book object the",
    "start": "1386659",
    "end": "1391820"
  },
  {
    "text": "properties that can be done include the title meta class meta property values and so on",
    "start": "1391820",
    "end": "1398600"
  },
  {
    "text": "for the title field of the book object the potential attributes will also be automatically incremented",
    "start": "1398600",
    "end": "1407000"
  },
  {
    "text": "so you can access these potential properties and find the inherited",
    "start": "1407000",
    "end": "1412220"
  },
  {
    "text": "properties of zing in the exploitation of a data binding the common idea is to",
    "start": "1412220",
    "end": "1417919"
  },
  {
    "text": "find and manipulate the class builder for this code you can bypass the flag",
    "start": "1417919",
    "end": "1423559"
  },
  {
    "text": "list in the white list restrictions to obtain the class loader attribute in",
    "start": "1423559",
    "end": "1428900"
  },
  {
    "text": "this week we also found some interesting features when digging for vulnerabilities in the",
    "start": "1428900",
    "end": "1436039"
  },
  {
    "text": "spring framework such as constructed course occur during the type conversion",
    "start": "1436039",
    "end": "1441380"
  },
  {
    "text": "and multiple body parts with a low of f5c in this example we need to convert",
    "start": "1441380",
    "end": "1447620"
  },
  {
    "text": "the string to URL the core logic has two parts the first",
    "start": "1447620",
    "end": "1453980"
  },
  {
    "text": "part is to select the prevention method according to the source type in the",
    "start": "1453980",
    "end": "1459559"
  },
  {
    "text": "Target type with certain conditions are made the Constructor of the target type",
    "start": "1459559",
    "end": "1464659"
  },
  {
    "text": "will be written the second type is to instantiate through the Constructor if",
    "start": "1464659",
    "end": "1470539"
  },
  {
    "text": "the target type at this time is not a URL but a class customized by developer",
    "start": "1470539",
    "end": "1476720"
  },
  {
    "text": "The Constructor of this class will be triggered which may cause potential security problems",
    "start": "1476720",
    "end": "1484760"
  },
  {
    "text": "foreign obtains the file name of the uploaded",
    "start": "1484760",
    "end": "1492620"
  },
  {
    "text": "files through the file name parameter in the process of file name password there are also some and lower special formats",
    "start": "1492620",
    "end": "1500240"
  },
  {
    "text": "when we started with founding the the following content will be separated",
    "start": "1500240",
    "end": "1507080"
  },
  {
    "text": "by a single quotation marks in the possible specific Logic the first part",
    "start": "1507080",
    "end": "1513080"
  },
  {
    "text": "is the chassis used for passing and the third part is the URL included the value",
    "start": "1513080",
    "end": "1519020"
  },
  {
    "text": "of the actual file name when possible this is encoded value will be converted into the corresponding text",
    "start": "1519020",
    "end": "1528020"
  },
  {
    "text": "so if we upload a file with such boundary what will the file name be",
    "start": "1528020",
    "end": "1534759"
  },
  {
    "text": "actually the last part will be identified in the file name is passed with specifically the chassette in this",
    "start": "1534919",
    "end": "1542480"
  },
  {
    "text": "case is utf-8 even if we replace the position of file",
    "start": "1542480",
    "end": "1549740"
  },
  {
    "text": "Network tribute the result will be unchanged",
    "start": "1549740",
    "end": "1554919"
  },
  {
    "text": "and now let's explore it this is the bread for sure we can modify",
    "start": "1555140",
    "end": "1560900"
  },
  {
    "text": "the value of class divided attribute through the model attribute how can we",
    "start": "1560900",
    "end": "1565940"
  },
  {
    "text": "make use of it when scenery we found its Tomcat work package in this scenario the",
    "start": "1565940",
    "end": "1572120"
  },
  {
    "text": "first question is what is the difference between the class loader in the fat",
    "start": "1572120",
    "end": "1577159"
  },
  {
    "text": "chart and the war package deployment when accessing the class loader property",
    "start": "1577159",
    "end": "1584299"
  },
  {
    "text": "of the model the type of class loader in word package deployment is web app class",
    "start": "1584299",
    "end": "1590179"
  },
  {
    "text": "loader and the web app class loader is set separately for each container",
    "start": "1590179",
    "end": "1598640"
  },
  {
    "text": "therefore different web containers will have unique web app class loaders with",
    "start": "1598640",
    "end": "1604520"
  },
  {
    "text": "different configurations the first exploitation we will introduce",
    "start": "1604520",
    "end": "1611000"
  },
  {
    "text": "is RPG fire rate with web app class loader in Tomcat the Apple base",
    "start": "1611000",
    "end": "1617000"
  },
  {
    "text": "attribute determines the director that the root actually points to when",
    "start": "1617000",
    "end": "1622279"
  },
  {
    "text": "accessing the application you can directly access the system root",
    "start": "1622279",
    "end": "1629120"
  },
  {
    "text": "directory by setting the value of updates to the system root phase",
    "start": "1629120",
    "end": "1636140"
  },
  {
    "text": "at this time we can read the content of the specified file by setting the URL to",
    "start": "1636140",
    "end": "1641960"
  },
  {
    "text": "the absolute path corresponding to the system file such as it is a password in",
    "start": "1641960",
    "end": "1648620"
  },
  {
    "text": "another page between the contents of Etc password",
    "start": "1648620",
    "end": "1654039"
  },
  {
    "text": "won't try to answer you with web app class node we need to use the access",
    "start": "1654679",
    "end": "1660200"
  },
  {
    "text": "login mechanism of the web container access log wave is a logging mechanism",
    "start": "1660200",
    "end": "1667640"
  },
  {
    "text": "that creates log in the specified format and supports the configuration of",
    "start": "1667640",
    "end": "1672799"
  },
  {
    "text": "multiple tributes by setting the suffix of tribute you can",
    "start": "1672799",
    "end": "1678080"
  },
  {
    "text": "control the suffix of the accredited log for example when it is set to JSP you",
    "start": "1678080",
    "end": "1684440"
  },
  {
    "text": "can change the generated log file into a JSP script the pattern attribute can",
    "start": "1684440",
    "end": "1689659"
  },
  {
    "text": "control the content of the generated log file setting the wrong time code to pattern can make the generated log",
    "start": "1689659",
    "end": "1696860"
  },
  {
    "text": "contains this magnitious code when setting the contents of pattern we",
    "start": "1696860",
    "end": "1704720"
  },
  {
    "text": "use two special values what are they in the documents of access Law data in this",
    "start": "1704720",
    "end": "1710659"
  },
  {
    "text": "format means that data is obtained from the specified HTTP header we said FG in",
    "start": "1710659",
    "end": "1718460"
  },
  {
    "text": "the live so we take values from the FG and arrive in the HTTP header why do you",
    "start": "1718460",
    "end": "1724100"
  },
  {
    "text": "want to set it in this way because the left bracket and person cannot be",
    "start": "1724100",
    "end": "1729200"
  },
  {
    "text": "directly inserted into the file content by pattern",
    "start": "1729200",
    "end": "1734840"
  },
  {
    "text": "without this format is a term for log file creation which plays a key role in",
    "start": "1734840",
    "end": "1741559"
  },
  {
    "text": "determining whether the log file is to be regenerated if the file date format",
    "start": "1741559",
    "end": "1746900"
  },
  {
    "text": "is not matched with the program step the log file will be recreated we said",
    "start": "1746900",
    "end": "1753020"
  },
  {
    "text": "founded format to a value different from the default value such as 4y which means",
    "start": "1753020",
    "end": "1760520"
  },
  {
    "text": "the log file name is expressed in years since no log file of this format exists",
    "start": "1760520",
    "end": "1767960"
  },
  {
    "text": "by default the generation of the log file will be triggered",
    "start": "1767960",
    "end": "1774398"
  },
  {
    "text": "this technique of modified class loader has appeared in",
    "start": "1774679",
    "end": "1780640"
  },
  {
    "text": "2014 similar operations can be seen in the use of struts 2 and we will use it",
    "start": "1780760",
    "end": "1788000"
  },
  {
    "text": "in spring for shell but Tomcat has repaired this",
    "start": "1788000",
    "end": "1794059"
  },
  {
    "text": "exploitation Tomcat brings the access chain of parameters by setting it resources too",
    "start": "1794059",
    "end": "1800600"
  },
  {
    "text": "low which leads to the failure of the exploit in many introductions to Spring Force",
    "start": "1800600",
    "end": "1807919"
  },
  {
    "text": "Shields restrictions on exploited were mentioned however these restrictions are",
    "start": "1807919",
    "end": "1813559"
  },
  {
    "text": "not all correct actually Tomcat will package deployment is only an available",
    "start": "1813559",
    "end": "1819440"
  },
  {
    "text": "situation and there are other available ways",
    "start": "1819440",
    "end": "1824860"
  },
  {
    "text": "we will take glass space and PR as examples for the same resources",
    "start": "1826279",
    "end": "1831320"
  },
  {
    "text": "attribute some had represents web resource route via glass fish and play",
    "start": "1831320",
    "end": "1837500"
  },
  {
    "text": "era represent another class so what's the difference between them",
    "start": "1837500",
    "end": "1843140"
  },
  {
    "text": "there is a property name that the IR context in proxy there are contexts the",
    "start": "1843140",
    "end": "1848779"
  },
  {
    "text": "actual implementation of this property is webdr context",
    "start": "1848779",
    "end": "1855340"
  },
  {
    "text": "in webdr context there is an attribute named phase which represents the",
    "start": "1855799",
    "end": "1862039"
  },
  {
    "text": "absolute path with the current web container is accessed by setting the",
    "start": "1862039",
    "end": "1867440"
  },
  {
    "text": "phase attribute you can control the system absolute paths that the home page actually points to when accessing the",
    "start": "1867440",
    "end": "1874700"
  },
  {
    "text": "web container it should be noted that the attribute needs to be accessed with",
    "start": "1874700",
    "end": "1880820"
  },
  {
    "text": "dog base therefore if the top base attribute",
    "start": "1880820",
    "end": "1886580"
  },
  {
    "text": "instead to Etc the ETC password will be downloaded one-way access the same file",
    "start": "1886580",
    "end": "1893720"
  },
  {
    "text": "name another exploited way of data binding is",
    "start": "1893720",
    "end": "1899539"
  },
  {
    "text": "remote class loading we will use grills as an example to introduce how to",
    "start": "1899539",
    "end": "1904880"
  },
  {
    "text": "exploit in this exploitation we set the chart set attribute that does not exist by",
    "start": "1904880",
    "end": "1911840"
  },
  {
    "text": "default in the content type of the HTTP data such as Evo since this chart cell",
    "start": "1911840",
    "end": "1918200"
  },
  {
    "text": "does not exist by default girls will travels or job has to find it",
    "start": "1918200",
    "end": "1925299"
  },
  {
    "text": "through growth data binding mechanism in the groovy's language Futures we can modify the provider properties of class",
    "start": "1925580",
    "end": "1933320"
  },
  {
    "text": "students in our exploitation we need to set three properties of the UCP",
    "start": "1933320",
    "end": "1938600"
  },
  {
    "text": "attribute to the same remote Java file address the input graph file is the",
    "start": "1938600",
    "end": "1945020"
  },
  {
    "text": "malicious file reconstruct",
    "start": "1945020",
    "end": "1948520"
  },
  {
    "text": "is used to provide the evil child set survives the evil class exchange set",
    "start": "1950140",
    "end": "1956899"
  },
  {
    "text": "provider and insert malicious code into the function at the same time the SPI",
    "start": "1956899",
    "end": "1963620"
  },
  {
    "text": "mechanism enables the chassette to be automatically discovered when the",
    "start": "1963620",
    "end": "1969140"
  },
  {
    "text": "application is looking for charset",
    "start": "1969140",
    "end": "1973779"
  },
  {
    "text": "when we specify charted as Evo in the HTTP header application will",
    "start": "1974179",
    "end": "1979880"
  },
  {
    "text": "automatically trigger the logic of loading the chassette and execute the",
    "start": "1979880",
    "end": "1985580"
  },
  {
    "text": "command to achieve rce is an example of malicious used through",
    "start": "1985580",
    "end": "1992899"
  },
  {
    "text": "chest and we set the path of the UCP attribute to the HTTP address starting",
    "start": "1992899",
    "end": "1998720"
  },
  {
    "text": "with the chart protocol if we send request twice in sequence and the second",
    "start": "1998720",
    "end": "2004779"
  },
  {
    "text": "request send the address in the evil protocol what will happen",
    "start": "2004779",
    "end": "2012240"
  },
  {
    "text": "since there is no processing method of evil protocol by default rails will",
    "start": "2012820",
    "end": "2018580"
  },
  {
    "text": "generate a handle class they are based on evil protocol for loading",
    "start": "2018580",
    "end": "2024580"
  },
  {
    "text": "therefore when searching for classes application will finally find them in",
    "start": "2024580",
    "end": "2030100"
  },
  {
    "text": "the remote chart address we have set therefore we only need to create a class",
    "start": "2030100",
    "end": "2038440"
  },
  {
    "text": "in the evil chart with the same name and insert malicious code to achieve our",
    "start": "2038440",
    "end": "2044380"
  },
  {
    "text": "city without the child set mechanism",
    "start": "2044380",
    "end": "2049260"
  },
  {
    "text": "now we reach the final part of defense and the takeaways",
    "start": "2049540",
    "end": "2054940"
  },
  {
    "text": "we can think about a question what this vulnerabilities have in common the first",
    "start": "2054940",
    "end": "2059980"
  },
  {
    "text": "is open they accept the data from arbitrary user the second is dynamic",
    "start": "2059980",
    "end": "2065618"
  },
  {
    "text": "then make use of dynamic features of programming language the last is the Civilized they all",
    "start": "2065619",
    "end": "2073000"
  },
  {
    "text": "convert 5 stream to object combine their first letters we also call",
    "start": "2073000",
    "end": "2079118"
  },
  {
    "text": "it odd vulnerability the concept is from the serialized part not only the",
    "start": "2079119",
    "end": "2084638"
  },
  {
    "text": "serialized we can we can summarize some approaches to the first possible attack in the data",
    "start": "2084639",
    "end": "2092080"
  },
  {
    "text": "binding mechanism for developers we have the following suggestions first try to use white list instead of",
    "start": "2092080",
    "end": "2100000"
  },
  {
    "text": "The Blacklist when you write the defense code for example Supreme Family use",
    "start": "2100000",
    "end": "2106119"
  },
  {
    "text": "widely used to defend against the problems of data binding mechanism",
    "start": "2106119",
    "end": "2112660"
  },
  {
    "text": "second be careful with programming language Futures they may betray you programming language Futures can bring",
    "start": "2112660",
    "end": "2119619"
  },
  {
    "text": "many convenience for developers but they also introduce risks for example in",
    "start": "2119619",
    "end": "2126940"
  },
  {
    "text": "girls may use the language futures of groovy to complete the modification of",
    "start": "2126940",
    "end": "2132339"
  },
  {
    "text": "provided properties of class loader third developers can defend by breaking",
    "start": "2132339",
    "end": "2139780"
  },
  {
    "text": "the attraction for example some can set the value of gated resources to Newark",
    "start": "2139780",
    "end": "2144940"
  },
  {
    "text": "and duplicate the function so that it validates all exploit that rely on the",
    "start": "2144940",
    "end": "2150880"
  },
  {
    "text": "resources failed in our talk there are three key",
    "start": "2150880",
    "end": "2157480"
  },
  {
    "text": "takeaways first you will know the method knowledge of analyzing the data binding",
    "start": "2157480",
    "end": "2162700"
  },
  {
    "text": "mechanism writing in different programming language in its own security researchers can get some new exploit",
    "start": "2162700",
    "end": "2169480"
  },
  {
    "text": "technicals and the trick is to achieve RCA last developers can understand the",
    "start": "2169480",
    "end": "2175960"
  },
  {
    "text": "security design principles of data binding and then know how to prevent Security box",
    "start": "2175960",
    "end": "2182859"
  },
  {
    "text": "thank you again for being here if you have more questions you can contact us",
    "start": "2182859",
    "end": "2188380"
  },
  {
    "text": "with Twitter thank you [Music]",
    "start": "2188380",
    "end": "2195330"
  },
  {
    "text": "[Music]",
    "start": "2199170",
    "end": "2202280"
  }
]