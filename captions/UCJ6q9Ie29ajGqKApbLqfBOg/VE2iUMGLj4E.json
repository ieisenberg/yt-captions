[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "[Music]",
    "start": "3910",
    "end": "13710"
  },
  {
    "text": "aloha and welcome to my talk office drama on mac os",
    "start": "14639",
    "end": "19840"
  },
  {
    "text": "my name is patrick wardle i am a principal security researcher at jaff and also the creator of the mac",
    "start": "19840",
    "end": "27199"
  },
  {
    "text": "security website and tool suite objective-c so",
    "start": "27199",
    "end": "32640"
  },
  {
    "start": "32000",
    "end": "32000"
  },
  {
    "text": "today we're going to be talking about malicious office documents on mac os first we're going to detail",
    "start": "32640",
    "end": "40079"
  },
  {
    "text": "recent attacks targeting mac users attacks that leveraged macro laced",
    "start": "40079",
    "end": "45840"
  },
  {
    "text": "documents then we'll discuss methods of analyzing these attacks for example",
    "start": "45840",
    "end": "51360"
  },
  {
    "text": "how to extract the embedded macros and also how to analyze the document payloads",
    "start": "51360",
    "end": "58879"
  },
  {
    "text": "as the current attacks are kind of lame somewhat constrained for example by the",
    "start": "58879",
    "end": "64080"
  },
  {
    "text": "sandbox i wanted to dig into this a little more and we'll talk today about a new exploit",
    "start": "64080",
    "end": "70880"
  },
  {
    "text": "chain that combines was what was at the time a handful of zero days to bypass the",
    "start": "70880",
    "end": "78320"
  },
  {
    "text": "sandbox and apple's latest security mechanisms we'll end by discussing generic methods to detect and",
    "start": "78320",
    "end": "85119"
  },
  {
    "text": "thwart some of these attacks alright so let's dive in we're going to start by looking",
    "start": "85119",
    "end": "91520"
  },
  {
    "text": "at recent macro based attacks targeting mac users",
    "start": "91520",
    "end": "97119"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "now first you might be wondering what is a macro well i've added the official microsoft",
    "start": "97119",
    "end": "103200"
  },
  {
    "text": "documentation on the slide but in short a macro is embedded",
    "start": "103200",
    "end": "108240"
  },
  {
    "text": "executable code in microsoft office documents in other words it allows one as i mentioned to add",
    "start": "108240",
    "end": "115600"
  },
  {
    "text": "executable code into a file into a document so as we can",
    "start": "115600",
    "end": "120640"
  },
  {
    "text": "see on the slide what i've done is i've inserted a macro into a word",
    "start": "120640",
    "end": "126240"
  },
  {
    "text": "document that will display a pop-up that says hello world now we'll talk about this more later in",
    "start": "126240",
    "end": "134000"
  },
  {
    "text": "the talk but since i've placed this code within the auto open subroutine if the user has enabled",
    "start": "134000",
    "end": "141440"
  },
  {
    "text": "macro this code will be automatically executed anytime they open the document",
    "start": "141440",
    "end": "148319"
  },
  {
    "text": "now from a security point of view you might be thinking this sounds like a horrible idea and",
    "start": "148319",
    "end": "154640"
  },
  {
    "text": "you're right placing executable code within documents really just a terrible idea",
    "start": "154640",
    "end": "161680"
  },
  {
    "text": "which attackers have abused for years in fact the infamous melissa virus which",
    "start": "161680",
    "end": "167760"
  },
  {
    "text": "was around all the way back in 1999 you guessed it was a macro virus now to be fair",
    "start": "167760",
    "end": "175440"
  },
  {
    "text": "microsoft has added some mitigations for example alerts and sandboxing",
    "start": "175440",
    "end": "181840"
  },
  {
    "text": "but as we'll see this has not fully mitigated the threat",
    "start": "181840",
    "end": "187599"
  },
  {
    "text": "so traditionally these macro based attacks have targeted microsoft windows systems",
    "start": "189200",
    "end": "194720"
  },
  {
    "text": "due to two main reasons first macros are a microsoft creation and only work",
    "start": "194720",
    "end": "200640"
  },
  {
    "text": "in microsoft products that is that they they're not going to work in apple's office apps such as pages or or",
    "start": "200640",
    "end": "207440"
  },
  {
    "text": "numbers and then windows computers especially in the past were far",
    "start": "207440",
    "end": "212640"
  },
  {
    "text": "more prevalent especially in the enterprise now this is definitely changing we're",
    "start": "212640",
    "end": "218720"
  },
  {
    "text": "seeing a lot more macs especially in the startup scene and also in the enterprise as well and",
    "start": "218720",
    "end": "225200"
  },
  {
    "text": "so in short there are more macs and a lot of them are running these microsoft office products which means",
    "start": "225200",
    "end": "232000"
  },
  {
    "text": "there's just more targets for hackers so now let's take a look at some recent",
    "start": "232000",
    "end": "238799"
  },
  {
    "text": "attacks targeting mac users attacks that leverage macro laced",
    "start": "238799",
    "end": "244080"
  },
  {
    "text": "documents so first in this section we're kind of going to kind of look at these at a high",
    "start": "244080",
    "end": "249680"
  },
  {
    "text": "level in the next section though we're going to dive into discussing exactly how to extract",
    "start": "249680",
    "end": "255599"
  },
  {
    "text": "and analyze the payload of these malicious documents so we're going to start in",
    "start": "255599",
    "end": "261840"
  },
  {
    "text": "2017. here we have a document that appears to be about trump's",
    "start": "261840",
    "end": "267199"
  },
  {
    "text": "unfortunate election victory if the user though went to open this document and clicked allow on the",
    "start": "267199",
    "end": "275280"
  },
  {
    "text": "enabled macro alert the system would become infected because in reality this was a",
    "start": "275280",
    "end": "280560"
  },
  {
    "text": "malicious document containing malicious macros moving on to 2018 we have a document",
    "start": "280560",
    "end": "288320"
  },
  {
    "text": "that appears to be about bitcoin which was a very hot trendy topic",
    "start": "288320",
    "end": "293600"
  },
  {
    "text": "at the time again if the user opens the document and allows macros to run the system",
    "start": "293600",
    "end": "299919"
  },
  {
    "text": "is owned now this document is interesting and we'll dig into this more shortly but",
    "start": "299919",
    "end": "306240"
  },
  {
    "text": "the most interesting aspect of this attack was that the embedded exploit code contained the ability to",
    "start": "306240",
    "end": "314000"
  },
  {
    "text": "actually bypass microsoft office's sandbox",
    "start": "314000",
    "end": "319039"
  },
  {
    "text": "moving on to 2019 we have a document from the prolific lazarus apt group which is",
    "start": "319120",
    "end": "326320"
  },
  {
    "text": "normally associated with north korea this is interesting because we're actually now",
    "start": "326320",
    "end": "331360"
  },
  {
    "text": "seeing apt groups jump on the hey let's target mac os via macros",
    "start": "331360",
    "end": "337440"
  },
  {
    "text": "bandwagon again if the user opens the document and clicks allow the system will be owned",
    "start": "337440",
    "end": "345280"
  },
  {
    "text": "all right so now let's talk about methods of analyzing these malicious documents",
    "start": "345440",
    "end": "350560"
  },
  {
    "text": "showing exactly how to extract embedded macros and how to analyze both the macro code",
    "start": "350560",
    "end": "358080"
  },
  {
    "text": "and any embedded payloads first we need to be able to extract the",
    "start": "358080",
    "end": "365840"
  },
  {
    "text": "embedded macro code now the details of the file format of microsoft office",
    "start": "365840",
    "end": "372319"
  },
  {
    "text": "documents is kind of beyond the scope of this talk but the good news is you really don't have to even worry about that",
    "start": "372319",
    "end": "378880"
  },
  {
    "text": "turns out there are some really great tools that are able to if given a office document with macros",
    "start": "378880",
    "end": "385120"
  },
  {
    "text": "can trivially extract those macros and that's really basically all we care about",
    "start": "385120",
    "end": "390240"
  },
  {
    "text": "my favorite is a tool suite called ole tools from github so we can see on the slide",
    "start": "390240",
    "end": "396319"
  },
  {
    "text": "we downloaded the package and installed it and then we execute the ole vba command with the dash",
    "start": "396319",
    "end": "404000"
  },
  {
    "text": "c parameter passing in the document which we suspect has embedded macros that we want to",
    "start": "404000",
    "end": "410160"
  },
  {
    "text": "analyze and the ole vba tool will then parse the document and dump any embedded",
    "start": "410160",
    "end": "417280"
  },
  {
    "text": "macros to standard out there's also various online sites where you can upload a document",
    "start": "417280",
    "end": "424080"
  },
  {
    "text": "the website will then do the analysis and extract any macro code",
    "start": "424080",
    "end": "429840"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "now we want to understand exactly what these malicious macros are doing",
    "start": "430720",
    "end": "437039"
  },
  {
    "text": "so let's briefly return to the documents that we discussed in the first part of the talk and for",
    "start": "437039",
    "end": "444000"
  },
  {
    "text": "each of these look at exactly what the malicious macro code",
    "start": "444000",
    "end": "449039"
  },
  {
    "text": "is doing so again starting at the one from 2018 we can use the ole vba tool to extract",
    "start": "449039",
    "end": "456319"
  },
  {
    "text": "the macros and i've cleaned up the macros a little bit and placed them on the screen so we can",
    "start": "456319",
    "end": "462000"
  },
  {
    "text": "see on the slide there is a subroutine called fisher",
    "start": "462000",
    "end": "467360"
  },
  {
    "text": "that is invoked via the auto open method the auto open method is a microsoft api",
    "start": "467360",
    "end": "474160"
  },
  {
    "text": "and as its name implies any code placed within",
    "start": "474160",
    "end": "479280"
  },
  {
    "text": "this api will be automatically executed if and only if the user hasn't has",
    "start": "479280",
    "end": "484479"
  },
  {
    "text": "enabled macros when opening the document so if we assume the user has clicked",
    "start": "484479",
    "end": "489680"
  },
  {
    "text": "allow to the embedded macros let's look at what the fisher subroutine does again as it will",
    "start": "489680",
    "end": "495360"
  },
  {
    "text": "be automatically executed each time the document is opened so the first",
    "start": "495360",
    "end": "501199"
  },
  {
    "text": "thing it does is it builds a base64 encoded string and then it decodes and",
    "start": "501199",
    "end": "506879"
  },
  {
    "text": "executes that via python if we manually decode this string we can",
    "start": "506879",
    "end": "513599"
  },
  {
    "text": "see its python code which is you know unsurprising as it's passing it to python to execute",
    "start": "513599",
    "end": "519039"
  },
  {
    "text": "so what is this python code does well first thing it does is it checks to see",
    "start": "519039",
    "end": "524560"
  },
  {
    "text": "if popular security products for example little snitch is running and then it downloads a",
    "start": "524560",
    "end": "530080"
  },
  {
    "text": "second stage payload from security checking dot it then decrypts this payload using",
    "start": "530080",
    "end": "536880"
  },
  {
    "text": "rc4 and executes this now this code might look familiar if you spend a lot",
    "start": "536880",
    "end": "543279"
  },
  {
    "text": "of time kind of looking at these attacks and that's because this payload is actually empire",
    "start": "543279",
    "end": "548959"
  },
  {
    "text": "which is a well-known open source python backdoor now you might be wondering okay what is",
    "start": "548959",
    "end": "554959"
  },
  {
    "text": "it downloading and executing as its second stage payload well unfortunately the commanding",
    "start": "554959",
    "end": "561839"
  },
  {
    "text": "control server was offline at the time i did this analysis but it's likely that it's simply",
    "start": "561839",
    "end": "567440"
  },
  {
    "text": "empire's second stage payload which gives attackers full access over the infected system",
    "start": "567440",
    "end": "575040"
  },
  {
    "text": "moving on to the bitcoin document again this one was from 2018. using the ole vba tool we can",
    "start": "575600",
    "end": "582640"
  },
  {
    "text": "again extract the embedded macros interestingly this also contains encoded",
    "start": "582640",
    "end": "587760"
  },
  {
    "text": "python and what appears to be an embedded property list that's interesting so",
    "start": "587760",
    "end": "595200"
  },
  {
    "text": "let's take a closer look first thing we do is we decode the python since it's base64 encoded it's very",
    "start": "595200",
    "end": "602959"
  },
  {
    "text": "trivial to do you can either do that via an online site that provides base64 decoding",
    "start": "602959",
    "end": "608959"
  },
  {
    "text": "or i just do it via the command line via a python shop once the code is decoded",
    "start": "608959",
    "end": "615360"
  },
  {
    "text": "again we can see that on the slide it connects to an ip address executes and downloads a",
    "start": "615360",
    "end": "622079"
  },
  {
    "text": "second stage payload it turns out this command and control server was still online during the time of my analysis so",
    "start": "622079",
    "end": "630079"
  },
  {
    "text": "i was actually able to get a copy of this second stage halo which turned",
    "start": "630079",
    "end": "635200"
  },
  {
    "text": "out to be metasploits interpreter again interesting to see attackers leveraging",
    "start": "635200",
    "end": "640320"
  },
  {
    "text": "open source agents and second stage payload interpreter affords remote access of an",
    "start": "640320",
    "end": "646480"
  },
  {
    "text": "infected system now if you're called the beginning of this",
    "start": "646480",
    "end": "652240"
  },
  {
    "text": "at the talk we kind of said that the most interesting thing about this particular document was its ability to escape out of",
    "start": "652240",
    "end": "659680"
  },
  {
    "text": "microsoft office's sandbox so recent versions of office",
    "start": "659680",
    "end": "664959"
  },
  {
    "text": "run in a sandbox which is good and it means that if code is executed within the context of",
    "start": "664959",
    "end": "671519"
  },
  {
    "text": "the process for example macro code executing within a word document it is highly contained it's",
    "start": "671519",
    "end": "678880"
  },
  {
    "text": "limited by what it can do it's still in the sandbox so it can't do things like persist the",
    "start": "678880",
    "end": "684240"
  },
  {
    "text": "backdoor or even access the user's files from a security point of view this is very good however",
    "start": "684240",
    "end": "692160"
  },
  {
    "text": "mac security researcher adam chester found a very neat way to escape the sandbox and posted a guest",
    "start": "692160",
    "end": "698560"
  },
  {
    "text": "blog about this on my mac security website objectives in short we found that",
    "start": "698560",
    "end": "704399"
  },
  {
    "text": "microsoft office had a sandbox exception that was based on a faulty reg",
    "start": "704399",
    "end": "710959"
  },
  {
    "text": "x that would allow sandbox code to create a file anywhere on the system so what adam was",
    "start": "710959",
    "end": "717680"
  },
  {
    "text": "able to do was via macro code running in the context of the sandbox",
    "start": "717680",
    "end": "723040"
  },
  {
    "text": "create a launch item that on the next login would be executed",
    "start": "723040",
    "end": "728560"
  },
  {
    "text": "outside the context of the sandbox and he used a property list in order to do that",
    "start": "728560",
    "end": "735360"
  },
  {
    "text": "so i was analyzing this document i said okay this code looks very familiar and i you know read adam's blog and",
    "start": "735360",
    "end": "740800"
  },
  {
    "text": "posted it on my site and it turns out that the attackers had likely also read this blog and took adam's",
    "start": "740800",
    "end": "748320"
  },
  {
    "text": "code for verbatim 100 copy and paste and embedded it into their office",
    "start": "748320",
    "end": "754160"
  },
  {
    "text": "document so this would mean that on unpatched systems they would be able to break out of the sandbox and cause more",
    "start": "754160",
    "end": "761279"
  },
  {
    "text": "havoc or mayhem finally if we extract the embedded macro",
    "start": "761279",
    "end": "767680"
  },
  {
    "text": "code from the lazarus group document we can see it's pretty basic this case it's not even included so what",
    "start": "767680",
    "end": "774959"
  },
  {
    "text": "does it do well it simply downloads and executes a second stage persistent implant",
    "start": "774959",
    "end": "780720"
  },
  {
    "text": "that implant is named mt.dat and would give attackers persistent remote access",
    "start": "780720",
    "end": "786079"
  },
  {
    "text": "to the system however this document did not have any sandbox escape code",
    "start": "786079",
    "end": "791360"
  },
  {
    "text": "which means if it was opened on a recent version of mac os this part of the attack would fail",
    "start": "791360",
    "end": "797120"
  },
  {
    "text": "because you can't obviously persist code from within the context of a sandbox",
    "start": "797120",
    "end": "804000"
  },
  {
    "text": "so that's an overview of recent macro based attacks against mac os which gave us i think a pretty thorough understanding",
    "start": "804160",
    "end": "811760"
  },
  {
    "text": "of the status quo now let's talk about a new zero click macro based exploit chain",
    "start": "811760",
    "end": "820800"
  },
  {
    "text": "and you might be wondering why should we do this well all current macro based attacks in",
    "start": "820800",
    "end": "826480"
  },
  {
    "text": "my opinion are super lame let's list the ways first for any of these attacks when the",
    "start": "826480",
    "end": "833839"
  },
  {
    "text": "user goes to open the document there's a huge alert warning them that this document",
    "start": "833839",
    "end": "839279"
  },
  {
    "text": "contains macros and they probably should not allow them the user basically has to click enable",
    "start": "839279",
    "end": "846560"
  },
  {
    "text": "most won't which means these attacks will fail immediately out of the box macro code will never even be",
    "start": "846560",
    "end": "852560"
  },
  {
    "text": "run also as microsoft has now patched adam's sandbox escape bug all the",
    "start": "852560",
    "end": "859360"
  },
  {
    "text": "attacks remain sandbox again means even if the user does enable the macro code",
    "start": "859360",
    "end": "864880"
  },
  {
    "text": "they're incredibly limited about what they can do they can't persist code or access user files and then",
    "start": "864880",
    "end": "871360"
  },
  {
    "text": "finally on mac os catalina the most recent version of mac os apple has really upped the bar and",
    "start": "871360",
    "end": "878000"
  },
  {
    "text": "introduced some new security mechanisms such as notarization which means the",
    "start": "878000",
    "end": "883040"
  },
  {
    "text": "second stage payloads may not necessarily be even allowed to execute",
    "start": "883040",
    "end": "888720"
  },
  {
    "text": "by the system so again the current attacks my opinion basically useless",
    "start": "888720",
    "end": "896399"
  },
  {
    "text": "now whenever companies such as microsoft or apple patch stuff or implement new security",
    "start": "896800",
    "end": "902720"
  },
  {
    "text": "mechanisms i like to poke on that because often they do so",
    "start": "902720",
    "end": "909120"
  },
  {
    "text": "incorrectly insufficiently so let's walk through now this kind of zero click",
    "start": "909120",
    "end": "914639"
  },
  {
    "text": "exploit chain so the exploit starts with a really neat bug that was found a while ago by",
    "start": "914639",
    "end": "920320"
  },
  {
    "text": "two security researchers and then kind of improved upon by other researchers at cert so this first bug is not mine",
    "start": "920320",
    "end": "928959"
  },
  {
    "text": "what these researchers found was that even if macros are turned off they could create a document that",
    "start": "928959",
    "end": "936079"
  },
  {
    "text": "contained macros that would be automatically executed with no alerts no prompts",
    "start": "936079",
    "end": "943440"
  },
  {
    "text": "that's hot how do they do this by abusing a incredibly old microsoft",
    "start": "943759",
    "end": "950240"
  },
  {
    "text": "file format called sylk files how old like from the 1980s before i was even",
    "start": "950240",
    "end": "956959"
  },
  {
    "text": "born and they also used a macro language not written in vba but something called",
    "start": "956959",
    "end": "963399"
  },
  {
    "text": "xlm not xml xln now microsoft loves to support",
    "start": "963399",
    "end": "970000"
  },
  {
    "text": "old file formats for compatibility reasons so yeah these old four file formats",
    "start": "970000",
    "end": "975920"
  },
  {
    "text": "still work even in recent versions specifically in excel so as i mentioned the researchers",
    "start": "975920",
    "end": "983360"
  },
  {
    "text": "found that they could create these xlm macros in these sylk",
    "start": "983360",
    "end": "990399"
  },
  {
    "text": "file formats that would be automatically executed ironically if the user had set never run",
    "start": "990399",
    "end": "996720"
  },
  {
    "text": "macros to true so the researchers published some great details about these older formats and",
    "start": "996720",
    "end": "1002800"
  },
  {
    "text": "some of their findings so if you're interested i've posted a link on the slide to their very thorough technical write-ups",
    "start": "1002800",
    "end": "1011279"
  },
  {
    "text": "so what i did was i created a simple proof of concept based on their code we'll see a malicious document is",
    "start": "1011279",
    "end": "1017759"
  },
  {
    "text": "downloaded from the internet and when it is opened calc is automatically",
    "start": "1017759",
    "end": "1023839"
  },
  {
    "text": "now the main takeaway from here is that there are no macro alerts right no prompts nothing just as",
    "start": "1023839",
    "end": "1030480"
  },
  {
    "text": "soon as the document is opened calculator pops",
    "start": "1030480",
    "end": "1036159"
  },
  {
    "start": "1036000",
    "end": "1036000"
  },
  {
    "text": "now that's well and good but as we noted on recent versions of microsoft office the",
    "start": "1037280",
    "end": "1043678"
  },
  {
    "text": "applications are sandboxed meaning sure we can pop calculator and that's neat for a demo",
    "start": "1043679",
    "end": "1050720"
  },
  {
    "text": "but you know we can't persist the backdoor we can't access the user's files this is the point of the sandbox",
    "start": "1050720",
    "end": "1057919"
  },
  {
    "text": "it contains malicious code even if such code finds a way to execute so",
    "start": "1057919",
    "end": "1063120"
  },
  {
    "text": "in short we need a new sandbox escape in order to do any real damage so i started",
    "start": "1063120",
    "end": "1070400"
  },
  {
    "text": "by looking at microsoft's patch for adam's bug and i noticed that they actually didn't",
    "start": "1070400",
    "end": "1076480"
  },
  {
    "text": "fix the faulty regex instead they just simply block certain locations such as the",
    "start": "1076480",
    "end": "1083760"
  },
  {
    "text": "launch agent directory which is where adam's proof of concept created a launch agent which on the next login would be",
    "start": "1083760",
    "end": "1090720"
  },
  {
    "text": "executed outside the context of the sandbox so this means we can",
    "start": "1090720",
    "end": "1096160"
  },
  {
    "text": "create arbitrary files as long as they start with tilde dollar sign meaning they conform to this faulty regex",
    "start": "1096160",
    "end": "1103520"
  },
  {
    "text": "almost anywhere again almost anywhere because microsoft added some specific locations that they",
    "start": "1103520",
    "end": "1109440"
  },
  {
    "text": "blocked now our goal of course is to execute something outside the sandbox so we can",
    "start": "1109440",
    "end": "1116799"
  },
  {
    "text": "persist and do evil things we just noted we can write specially named files to arbitrary",
    "start": "1116799",
    "end": "1123039"
  },
  {
    "text": "locations from macro code that's running within the context of the sandbox as microsoft didn't fully",
    "start": "1123039",
    "end": "1129679"
  },
  {
    "text": "patch that also it turns out in the sandbox we can both download and execute scripts as we can",
    "start": "1129679",
    "end": "1136799"
  },
  {
    "text": "see in the pro process monitor on the slide now these scripts themselves will be",
    "start": "1136799",
    "end": "1142160"
  },
  {
    "text": "sandboxed right they're children of a sandbox process which means themselves are also sandbox but that's",
    "start": "1142160",
    "end": "1149280"
  },
  {
    "text": "still a start right we can execute for example python scripts which gives us a very",
    "start": "1149280",
    "end": "1154640"
  },
  {
    "text": "extensible programming language to perhaps do some sorts of evil things",
    "start": "1154640",
    "end": "1160080"
  },
  {
    "text": "so via a python script which we again download and execute within the sandbox",
    "start": "1160240",
    "end": "1166960"
  },
  {
    "text": "we can create something called a login item now login items are automatically",
    "start": "1166960",
    "end": "1173760"
  },
  {
    "text": "executed the next time the user logs in and since it's started by mac os",
    "start": "1173760",
    "end": "1180240"
  },
  {
    "text": "instead of us via the sandbox it's not going to be sandbox so when the user's logging in",
    "start": "1180240",
    "end": "1186240"
  },
  {
    "text": "mac os goes and looks at the register login items and just executes and starts",
    "start": "1186240",
    "end": "1191440"
  },
  {
    "text": "all of them again there's no tie back to the microsoft office macro code sandbox nothing so",
    "start": "1191440",
    "end": "1198720"
  },
  {
    "text": "that means this will be executed outside the context of the sandbox to confirm we can persist terminal.app",
    "start": "1198720",
    "end": "1206799"
  },
  {
    "text": "sure enough when we re-log in terminal is executed and we look at it in",
    "start": "1206799",
    "end": "1212799"
  },
  {
    "text": "activity monitor we can see that it runs outside the sandbox",
    "start": "1212799",
    "end": "1218639"
  },
  {
    "start": "1218000",
    "end": "1218000"
  },
  {
    "text": "so this is good right we now have a way to bypass the sandbox but unfortunately we run smack into",
    "start": "1218799",
    "end": "1225919"
  },
  {
    "text": "catalina's new security mechanisms which are file quarantines and new notarization requirements in a",
    "start": "1225919",
    "end": "1234080"
  },
  {
    "text": "nutshell notarization basically says hey apple has to bless the file before it's run",
    "start": "1234080",
    "end": "1240000"
  },
  {
    "text": "obviously apple's not going to bless our back door so even if we go and persist the back",
    "start": "1240000",
    "end": "1245440"
  },
  {
    "text": "door as a login item mac os will simply refuse to execute it because unfortunately it is not",
    "start": "1245440",
    "end": "1252000"
  },
  {
    "text": "blessed it is not notarized ugh this is a bummer and so what do we do",
    "start": "1252000",
    "end": "1258640"
  },
  {
    "text": "right we gotta figure out a way to bypass now quarantine and notarization",
    "start": "1258640",
    "end": "1263919"
  },
  {
    "text": "now hope is not lost right this is 2020 things look bleak but we",
    "start": "1263919",
    "end": "1269600"
  },
  {
    "text": "gotta stay optimistic especially when we are looking and developing exploits because",
    "start": "1269600",
    "end": "1274880"
  },
  {
    "text": "if and this is a big if if we can create a launch agent we can specify arguments and",
    "start": "1274880",
    "end": "1283200"
  },
  {
    "text": "persist a persistent interactive non-sandbox reverse shell via bash this is a big if but again",
    "start": "1283200",
    "end": "1291120"
  },
  {
    "text": "there's a few kind of takeaways here first being able to specify arguments is huge uh and then",
    "start": "1291120",
    "end": "1296559"
  },
  {
    "text": "also if we can specify uh or persist rather an interactive shell it's gonna be running outside the",
    "start": "1296559",
    "end": "1303440"
  },
  {
    "text": "sandbox which which is going to do things like allow us to remove quarantine attributes",
    "start": "1303440",
    "end": "1308960"
  },
  {
    "text": "which means that notarization checks will not even be performed this would be great but recall that",
    "start": "1308960",
    "end": "1316080"
  },
  {
    "text": "microsoft's patch for adam's bug explicitly blocks the creation of launch agents",
    "start": "1316080",
    "end": "1323919"
  },
  {
    "text": "bummer so we kind of have like all these pieces but we just can't quite put them",
    "start": "1323919",
    "end": "1329440"
  },
  {
    "text": "together frustrating so we can escape the sandbox via a",
    "start": "1329440",
    "end": "1334640"
  },
  {
    "text": "login item but login items can't take arguments and they also can't be a",
    "start": "1334640",
    "end": "1339760"
  },
  {
    "text": "random binary because notarization will block it so in other words all we can do is persist an apple binary",
    "start": "1339760",
    "end": "1348000"
  },
  {
    "text": "again with no arguments and sure we can bypass notarization by the creation of a launch",
    "start": "1348000",
    "end": "1354480"
  },
  {
    "text": "agent but we can't create one from the sandbox due to microsoft's partial patch",
    "start": "1354480",
    "end": "1360480"
  },
  {
    "text": "so in other words what we need is a way for the system or for an apple binary with no arguments",
    "start": "1360480",
    "end": "1368080"
  },
  {
    "text": "is to create a launch agent for us",
    "start": "1368080",
    "end": "1372880"
  },
  {
    "text": "this is where things get beautiful so i had a random idea what happens if you",
    "start": "1373120",
    "end": "1378640"
  },
  {
    "text": "create a login item that is not a binary or an application like what happens if you persist",
    "start": "1378640",
    "end": "1384880"
  },
  {
    "text": "a zip file how does the system handle that again recall we can create these login items from the sandbox they can't",
    "start": "1384880",
    "end": "1391039"
  },
  {
    "text": "take arguments and they can't be random binaries but you know what happens if we create",
    "start": "1391039",
    "end": "1396240"
  },
  {
    "text": "persist as a zip file right well it turns out on logging login the files default handler",
    "start": "1396240",
    "end": "1403840"
  },
  {
    "text": "will be invoked which for a zip file mac os will automatically execute the apple's archive utility to",
    "start": "1403840",
    "end": "1412080"
  },
  {
    "text": "unzip the file basically says okay this is not an executable so i'm going to invoke the handler in this",
    "start": "1412080",
    "end": "1419200"
  },
  {
    "text": "case it's the archive utility because we persisted a zip file which will extract that now we remember",
    "start": "1419200",
    "end": "1425760"
  },
  {
    "text": "we want to create a launch agent but due to apple's sorry microsoft's recent",
    "start": "1425760",
    "end": "1431600"
  },
  {
    "text": "patch we cannot directly write to the user's launch agent directory but if it doesn't exist",
    "start": "1431600",
    "end": "1437440"
  },
  {
    "text": "which on a default version of mac os it does not we can drop the zip file one directory",
    "start": "1437440",
    "end": "1443120"
  },
  {
    "text": "up in the user's library directory this is allowed from the sandbox",
    "start": "1443120",
    "end": "1449200"
  },
  {
    "text": "so now we can place a zip file in the library directory and we can persist this as a login item",
    "start": "1449200",
    "end": "1457520"
  },
  {
    "text": "so we're making progress so what do we put in the zip file a directory named launch agents and in",
    "start": "1457520",
    "end": "1464240"
  },
  {
    "text": "that a launch agent property list so now when we persist this zip file as a login item on next",
    "start": "1464240",
    "end": "1472000"
  },
  {
    "text": "login the archive utility will automatically be invoked this is allowed because it's an apple sign",
    "start": "1472000",
    "end": "1477919"
  },
  {
    "text": "process and it will run outside the context of the sandbox which means it can do things like unzip",
    "start": "1477919",
    "end": "1485120"
  },
  {
    "text": "our file and create the launch agent directory and our launch agent property list",
    "start": "1485120",
    "end": "1490960"
  },
  {
    "text": "for us that is awesome so this completes the full exploit chain",
    "start": "1490960",
    "end": "1497200"
  },
  {
    "start": "1493000",
    "end": "1493000"
  },
  {
    "text": "the user starts by opening this slk file containing the xlm macro",
    "start": "1497200",
    "end": "1502559"
  },
  {
    "text": "which will execute automatically again no alert it just open the document this downloads and",
    "start": "1502559",
    "end": "1509200"
  },
  {
    "text": "persists the specially crafted zip file as a login item on next login the archive utility will",
    "start": "1509200",
    "end": "1516000"
  },
  {
    "text": "be automatically invoked and in the background we'll extract this zip file thereby",
    "start": "1516000",
    "end": "1521120"
  },
  {
    "text": "creating a launch agent for us and on next login the huge the login agent will",
    "start": "1521120",
    "end": "1527200"
  },
  {
    "text": "be automatically executed with our arguments which we can put in the property list",
    "start": "1527200",
    "end": "1532799"
  },
  {
    "text": "and we'll execute our bash based interactive backdoor",
    "start": "1532799",
    "end": "1538240"
  },
  {
    "text": "so this batch back door runs outside the sandbox meaning it can download and unquarantine",
    "start": "1538240",
    "end": "1544880"
  },
  {
    "text": "files unquarantined files are not constrained by apple's notarization",
    "start": "1544880",
    "end": "1550080"
  },
  {
    "text": "requirements so we have this interactive shell outside of the sandbox what do we do",
    "start": "1550080",
    "end": "1557039"
  },
  {
    "text": "well we decided to persist something and i thought it'd be extra funny to persist a repurposed",
    "start": "1557039",
    "end": "1563279"
  },
  {
    "text": "clearly not notarized version of windtail and you can see on the slide when i finally got this all working",
    "start": "1563279",
    "end": "1569760"
  },
  {
    "text": "in the slack channel at work i was clearly pretty stoked",
    "start": "1569760",
    "end": "1575440"
  },
  {
    "text": "all right so let's now talk kind of shift gears and talk about defending against these attacks",
    "start": "1575679",
    "end": "1581520"
  },
  {
    "text": "and some generic methods of detection first thing as a responsible security",
    "start": "1581520",
    "end": "1588720"
  },
  {
    "text": "researcher i reported all these vulnerabilities to microsoft and apple",
    "start": "1588720",
    "end": "1593840"
  },
  {
    "text": "microsoft responded and said this is a known issue on the apple side and i was like well yeah because i",
    "start": "1593840",
    "end": "1600559"
  },
  {
    "text": "told apple as well so i have no idea what microsoft did no cde",
    "start": "1600559",
    "end": "1605919"
  },
  {
    "text": "no bug bounty bummer apple said thank you for your report and then",
    "start": "1605919",
    "end": "1612400"
  },
  {
    "text": "nothing i waited a long time and checked back in with apple and said oh yeah we patched that back in",
    "start": "1612400",
    "end": "1619360"
  },
  {
    "text": "you know 10.15.3 again no cve no bug bounty classic cupertino",
    "start": "1619360",
    "end": "1628640"
  },
  {
    "start": "1628000",
    "end": "1628000"
  },
  {
    "text": "let's talk briefly though about how to detect this these attacks and perhaps other mac",
    "start": "1629520",
    "end": "1635039"
  },
  {
    "text": "malware as well so the first thing let's talk about is process monitoring",
    "start": "1635039",
    "end": "1640080"
  },
  {
    "text": "leveraging apple's new endpoint security framework turns out it's pretty easy to create a",
    "start": "1640080",
    "end": "1645760"
  },
  {
    "text": "process monitor to detect something i call suspicious children suspicious children",
    "start": "1645760",
    "end": "1652080"
  },
  {
    "text": "processes as we can see on the slide we can now detect when an office application for example",
    "start": "1652080",
    "end": "1658559"
  },
  {
    "text": "excel spawns a child process that is well suspicious so regardless of the reason",
    "start": "1658559",
    "end": "1666559"
  },
  {
    "text": "you know of the exploit if it was a macro buffer overflow if you see excel spawning curl and then",
    "start": "1666559",
    "end": "1673440"
  },
  {
    "text": "python you know that's bad news something is amiss",
    "start": "1673440",
    "end": "1679679"
  },
  {
    "text": "we can also detect a wide range of attacks including the exploit chain we just talked about this",
    "start": "1680080",
    "end": "1685600"
  },
  {
    "text": "by monitoring the file system for persistence persistence is just the way that malware",
    "start": "1685600",
    "end": "1691520"
  },
  {
    "text": "or perhaps an exploit chain escapes out of the sandbox or ensures that it's automatically re-executed when",
    "start": "1691520",
    "end": "1697440"
  },
  {
    "text": "the system is rebooted or the user re-logs in so again we can use apple's new endpoint security",
    "start": "1697440",
    "end": "1703679"
  },
  {
    "text": "framework and we can monitor for files specifically related for ones to persistence so here for example",
    "start": "1703679",
    "end": "1710240"
  },
  {
    "text": "on the slide we can detect now that a login item was created that does not",
    "start": "1710240",
    "end": "1716240"
  },
  {
    "text": "point to an application or a binary which is normally the case when a login item is created but instead",
    "start": "1716240",
    "end": "1722640"
  },
  {
    "text": "to a zip file this is a huge red flag and kind of you know shows that our exploit is",
    "start": "1722640",
    "end": "1729360"
  },
  {
    "text": "executing so at jamp we implement such monitoring logic in a",
    "start": "1729360",
    "end": "1736080"
  },
  {
    "text": "framework we call monitor kit we then feed that monitoring data as well as our analytics and rules into",
    "start": "1736080",
    "end": "1743919"
  },
  {
    "text": "apple's game logic engine for evaluation this gives us a powerful endpoint",
    "start": "1743919",
    "end": "1750080"
  },
  {
    "text": "detection capability uniquely tailored for mac os and kind of neat not to really brag",
    "start": "1750080",
    "end": "1756159"
  },
  {
    "text": "but based on our current rules we were actually able to detect this exploit chain with no a priori knowledge",
    "start": "1756159",
    "end": "1764640"
  },
  {
    "text": "pretty all right so let's wrap everything up so today we kind of",
    "start": "1764840",
    "end": "1770320"
  },
  {
    "text": "talked about the current state of affairs in the land of macro based attacks and we showed that",
    "start": "1770320",
    "end": "1775840"
  },
  {
    "text": "they are becoming more and more popular in the sense of targeting specifically mac os users but luckily current attacks",
    "start": "1775840",
    "end": "1784159"
  },
  {
    "text": "are rather late however we should not be lulled into a sense of complacency",
    "start": "1784159",
    "end": "1789279"
  },
  {
    "text": "because you know showed us pretty easy to actually create a zero click exploit chain that",
    "start": "1789279",
    "end": "1796320"
  },
  {
    "text": "if the user would open a document would both escape the sandbox and bypass",
    "start": "1796320",
    "end": "1802960"
  },
  {
    "text": "all of apple's recent security mechanisms again at the time on a fully patched mac os",
    "start": "1802960",
    "end": "1808960"
  },
  {
    "text": "system however we ended by showing that by leveraging apple's new endpoint security framework",
    "start": "1808960",
    "end": "1814559"
  },
  {
    "text": "we can generically detect these and other attacks",
    "start": "1814559",
    "end": "1819679"
  },
  {
    "text": "i briefly want to thank a variety of people first and foremost you all for virtually",
    "start": "1819679",
    "end": "1825120"
  },
  {
    "text": "attending my talk hope you're all staying safe and healthy also to jam for putting up with my many shenanigans",
    "start": "1825120",
    "end": "1832399"
  },
  {
    "text": "and also all the amazing companies that support objective c",
    "start": "1832399",
    "end": "1837919"
  },
  {
    "text": "oh and one more thing today i am announcing my new book the art of mac malware analysis",
    "start": "1837919",
    "end": "1845120"
  },
  {
    "text": "my dog is very excited about it as well i published the first part online at",
    "start": "1845120",
    "end": "1852200"
  },
  {
    "text": "taum.org and the rest of the chapters will be published shortly as well all 100 free",
    "start": "1852200",
    "end": "1858720"
  },
  {
    "text": "sharing is caring so if you're interested in learning more about mac malware exploits persistence",
    "start": "1858720",
    "end": "1865519"
  },
  {
    "text": "debuggers disassembling check out the site so again that is a wrap thank you so",
    "start": "1865519",
    "end": "1872480"
  },
  {
    "text": "much for attending my talk and hopefully see you in person at blackhat2021",
    "start": "1872480",
    "end": "1878240"
  },
  {
    "text": "aloha well thank you for attending my talk uh",
    "start": "1878240",
    "end": "1883840"
  },
  {
    "text": "we now have a live q a session so if there's any questions about my research or my talks",
    "start": "1883840",
    "end": "1890880"
  },
  {
    "text": "ask away",
    "start": "1890880",
    "end": "1893840"
  },
  {
    "text": "[Music]",
    "start": "1926770",
    "end": "1929890"
  },
  {
    "text": "2020.",
    "start": "1932880",
    "end": "1935840"
  },
  {
    "text": "awesome hooray thank you for attending though",
    "start": "1950480",
    "end": "1958320"
  },
  {
    "text": "and for the feedback um like we said we will put up the slides online",
    "start": "1958320",
    "end": "1964159"
  },
  {
    "text": "so this question from sean that says how did you come up with ideas for",
    "start": "1964159",
    "end": "1970480"
  },
  {
    "text": "research start with existing exploit or try to come up with something new so that's a great question",
    "start": "1970480",
    "end": "1977840"
  },
  {
    "text": "um so i was kind of looking at these macro-based attacks these uh you know",
    "start": "1977840",
    "end": "1984559"
  },
  {
    "text": "document-based attacks and it seems they would be kind of still a threat and luckily",
    "start": "1984559",
    "end": "1989840"
  },
  {
    "text": "because all the patches were applied um they were as we mentioned kind of um not",
    "start": "1989840",
    "end": "1997519"
  },
  {
    "text": "really going to work against patched systems so what i did was started kind of looking",
    "start": "1997519",
    "end": "2003919"
  },
  {
    "text": "and you know where to get the ideas i said okay we needed a sandbox escape so i looked at",
    "start": "2003919",
    "end": "2010000"
  },
  {
    "text": "uh apple sorry adam's base sandbox escape and said okay well this is a good",
    "start": "2010000",
    "end": "2015519"
  },
  {
    "text": "place to start let me see how microsoft fix this this is actually a really good approach",
    "start": "2015519",
    "end": "2021039"
  },
  {
    "text": "a lot of times vendors will patch a vulnerability but",
    "start": "2021039",
    "end": "2027279"
  },
  {
    "text": "that won't do so in maybe the best of ways so for example they will you know patch",
    "start": "2027279",
    "end": "2033679"
  },
  {
    "text": "one specific code path but not actually really address the",
    "start": "2033679",
    "end": "2038799"
  },
  {
    "text": "systemic or underlying cause and that was exactly what happened in this case so basically looked at how microsoft patched it and",
    "start": "2038799",
    "end": "2045360"
  },
  {
    "text": "that was the idea you know looking at the patch for the existing escape and then i saw it wasn't really comprehensive so",
    "start": "2045360",
    "end": "2052800"
  },
  {
    "text": "that allowed me to find a sandbox escape then i basically said okay i need to",
    "start": "2052800",
    "end": "2057839"
  },
  {
    "text": "create a way to kind of break out or get around apple's notarization requirements and you know i just really kind of",
    "start": "2057839",
    "end": "2063679"
  },
  {
    "text": "thought long and hard about it for a few different days and there had been some previous",
    "start": "2063679",
    "end": "2068720"
  },
  {
    "text": "research using the archive utility so what i try to do is really just stay abreast of other people's",
    "start": "2068720",
    "end": "2074560"
  },
  {
    "text": "security research and then also look at how vendors patch and fix things so when i find a bug or kind of",
    "start": "2074560",
    "end": "2082079"
  },
  {
    "text": "need pieces to put an exploit chain together i kind of have all these ideas ideas and generally something falls",
    "start": "2082079",
    "end": "2089040"
  },
  {
    "text": "together so great question that's kind of where i get the questions next question",
    "start": "2089040",
    "end": "2094320"
  },
  {
    "text": "why did you not assign cdes that's actually a great question uh so you know like i said i reported",
    "start": "2094320",
    "end": "2102320"
  },
  {
    "text": "this vulnerability to apple they said this issue was not cd worthy uh you know it's apple's",
    "start": "2102320",
    "end": "2108160"
  },
  {
    "text": "prerogative apparently um you know they've given me cds in the past so i'm not sure exactly",
    "start": "2108160",
    "end": "2113920"
  },
  {
    "text": "what the reasoning was here i asked for clarification they basically said that they provided some mitigations",
    "start": "2113920",
    "end": "2119599"
  },
  {
    "text": "to prevent the sandbox escape i would already obviously argue that a",
    "start": "2119599",
    "end": "2125920"
  },
  {
    "text": "generic sandbox escape that allows you to break out of an app sandbox and persist",
    "start": "2125920",
    "end": "2131839"
  },
  {
    "text": "unsigned malware is a security risk which probably should have a cd but apple did provide",
    "start": "2131839",
    "end": "2137680"
  },
  {
    "text": "an um mitigation but you know under infinite wisdom decided not to",
    "start": "2137680",
    "end": "2143760"
  },
  {
    "text": "give a cde so yeah maybe i could uh see if i can apply myself a cd that's",
    "start": "2143760",
    "end": "2150240"
  },
  {
    "text": "actually a great idea it would i'm sure make apple really happy",
    "start": "2150240",
    "end": "2155599"
  },
  {
    "text": "all right next question um troy asks are you seeing an increase of max and thus cyber attacks increasing",
    "start": "2155599",
    "end": "2161680"
  },
  {
    "text": "on mac os endpoint as well if so could it be correlated with work from home",
    "start": "2161680",
    "end": "2167599"
  },
  {
    "text": "so we're seeing this definite trend of increase of max in the enterprise and i think this is",
    "start": "2167599",
    "end": "2172800"
  },
  {
    "text": "driven by a few different um reasons uh one is you know you go to",
    "start": "2172800",
    "end": "2178000"
  },
  {
    "text": "any college campus walk into a classroom pretty much everyone's using max right",
    "start": "2178000",
    "end": "2183040"
  },
  {
    "text": "so that trend probably started you know maybe five years ago and as those college graduates graduate",
    "start": "2183040",
    "end": "2188480"
  },
  {
    "text": "and enter the workforce a lot of them want to use mac computers right microsoft's computers are maybe seen as a little",
    "start": "2188480",
    "end": "2194640"
  },
  {
    "text": "more and outdated so maybe that's one driver also apple has definitely made",
    "start": "2194640",
    "end": "2200480"
  },
  {
    "text": "a lot of pushes into uh the enterprise so end result we're seeing max rate",
    "start": "2200480",
    "end": "2207040"
  },
  {
    "text": "in the enterprise the hackers are very opportunistic and have taken note of this trend so you",
    "start": "2207040",
    "end": "2213920"
  },
  {
    "text": "know they're starting to take their window windows based attack factors for example",
    "start": "2213920",
    "end": "2219200"
  },
  {
    "text": "macro base attacks which they've had great success targeting windows pcs and saying hey look maps are now common",
    "start": "2219200",
    "end": "2225119"
  },
  {
    "text": "in the enterprise yes perhaps especially now is people are more working from home a lot of people have personal macs that",
    "start": "2225119",
    "end": "2232160"
  },
  {
    "text": "maybe they can now use for uh their their work their job their enterprise type work",
    "start": "2232160",
    "end": "2238000"
  },
  {
    "text": "and so we're definitely seeing a trend and this talk was kind of illustrative of that where they're bringing their traditional",
    "start": "2238000",
    "end": "2244320"
  },
  {
    "text": "window-based attacks and infection vectors for example macros",
    "start": "2244320",
    "end": "2249520"
  },
  {
    "text": "and now are specifically targeting mac users so this is a trend i expect to see both the",
    "start": "2249520",
    "end": "2256480"
  },
  {
    "text": "creation of brand new mac specific infection vectors and attack scenarios but also attackers bringing their proven",
    "start": "2256480",
    "end": "2263520"
  },
  {
    "text": "windows based techniques and if possible porting those to target",
    "start": "2263520",
    "end": "2268839"
  },
  {
    "text": "macos next question uh have you looked at other apps that have minimal or weakened runtime",
    "start": "2268839",
    "end": "2275520"
  },
  {
    "text": "configurations for example firefox has somewhat weak defaults that's actually a really good",
    "start": "2275520",
    "end": "2280960"
  },
  {
    "text": "question uh thanks william and the question is basically asking about applications sandbox profiles",
    "start": "2280960",
    "end": "2289040"
  },
  {
    "text": "and also how they are compiled so in catalina apple introduced this concept called the",
    "start": "2289040",
    "end": "2297200"
  },
  {
    "text": "hardened runtime i believe it was in catalina where applications can basically be recompiled with these extra",
    "start": "2297200",
    "end": "2303839"
  },
  {
    "text": "protections for example that prevent uh dilib injection attacks or other kind of injection-based uh attacks",
    "start": "2303839",
    "end": "2311760"
  },
  {
    "text": "but this means that the applications have to kind of opt in and be recompiled so what i do is i look at a lot of",
    "start": "2311760",
    "end": "2317920"
  },
  {
    "text": "applications and for ones that are not compiled with this hardened runtime really opens up a broad attack",
    "start": "2317920",
    "end": "2326079"
  },
  {
    "text": "attack surface recently i looked at zoom this is probably now four or five months",
    "start": "2326079",
    "end": "2331440"
  },
  {
    "text": "ago and it turned out they had an exception in their hard run time configuration",
    "start": "2331440",
    "end": "2336640"
  },
  {
    "text": "that allowed for the loading or injection of arbitrary dynamic libraries zoom was an interesting case study",
    "start": "2336640",
    "end": "2343040"
  },
  {
    "text": "because on a system they are granted access to the mic in the webcam however because they had this weak kind",
    "start": "2343040",
    "end": "2349760"
  },
  {
    "text": "of part and runtime policy i or any malware that was existing on the system could piggyback",
    "start": "2349760",
    "end": "2357440"
  },
  {
    "text": "off of zoom's kind of weak hard runtime configuration and load a dynamic library into the",
    "start": "2357440",
    "end": "2363280"
  },
  {
    "text": "process context of zoom since zoom was allowed to access the mic or the webcam the",
    "start": "2363280",
    "end": "2369520"
  },
  {
    "text": "malicious dynamic library which is running now within zoom could also do that so really good point",
    "start": "2369520",
    "end": "2376640"
  },
  {
    "text": "it's really good to look at applications that are configured with without the hardened run time or also if",
    "start": "2376640",
    "end": "2382640"
  },
  {
    "text": "they are configured with the sandbox take a look at their sandbox policy for example in this talk the",
    "start": "2382640",
    "end": "2389839"
  },
  {
    "text": "reason we were able to break out of the office sandbox was uh specifically",
    "start": "2389839",
    "end": "2395200"
  },
  {
    "text": "because of kind of an exception in microsoft's sandbox policy so that's always a really good",
    "start": "2395200",
    "end": "2401200"
  },
  {
    "text": "thing to look at it's a really good question uh next question can you compare and",
    "start": "2401200",
    "end": "2406319"
  },
  {
    "text": "contrast the new security features native to catalina versus jam implementations um",
    "start": "2406319",
    "end": "2414560"
  },
  {
    "text": "i'm not 100 sure about that but let me at least talk a little bit about",
    "start": "2414560",
    "end": "2419599"
  },
  {
    "text": "catalina's new security features and then i can also talk about what we do at jam to benefit or leverage",
    "start": "2419599",
    "end": "2426720"
  },
  {
    "text": "those in our endpoint security products so catalina does a lot of great things we mentioned the notarization that will",
    "start": "2426720",
    "end": "2434240"
  },
  {
    "text": "stop a lot of attacks where the user is basically tricked into running a piece of malware",
    "start": "2434240",
    "end": "2441520"
  },
  {
    "text": "i'm sure you're all familiar with like hey browse the website there's a pop-up",
    "start": "2441520",
    "end": "2447040"
  },
  {
    "text": "saying flash is out of date download and install this flash update and obviously it's generally not flash",
    "start": "2447040",
    "end": "2453520"
  },
  {
    "text": "it's malware so in this case the user is basically tricked or socially engineered into infecting themselves so notarization",
    "start": "2453520",
    "end": "2460000"
  },
  {
    "text": "will now block these attacks which is which is really good so that's probably the main feature",
    "start": "2460000",
    "end": "2465119"
  },
  {
    "text": "security feature i see at least in the context of malware but as we showed in this talk",
    "start": "2465119",
    "end": "2472079"
  },
  {
    "text": "exploit based attacks which we'll probably see an uptick in are generally able to bypass the",
    "start": "2472079",
    "end": "2478960"
  },
  {
    "text": "notarization constraints there's also some very creative adware",
    "start": "2478960",
    "end": "2484000"
  },
  {
    "text": "malware that we've seen that basically instructs the user how to bypass notarization so if you kind of",
    "start": "2484000",
    "end": "2489920"
  },
  {
    "text": "like right click on the file and click open it'll give you a prompt that says hey are you sure you want to allow this and",
    "start": "2489920",
    "end": "2495280"
  },
  {
    "text": "you can click ok even if the application or the package is not notarized so we've seen malware basically instruct",
    "start": "2495280",
    "end": "2502640"
  },
  {
    "text": "the user how to install that so there are ways to kind of bypass there's still maybe some gaps",
    "start": "2502640",
    "end": "2509200"
  },
  {
    "text": "so what we do at jf is as i mentioned we we leverage apple's new endpoint",
    "start": "2509200",
    "end": "2514400"
  },
  {
    "text": "security framework which is also a new security feature of catalina and this allows us",
    "start": "2514400",
    "end": "2519599"
  },
  {
    "text": "to very efficiently do things like monitor for new processes monitor for",
    "start": "2519599",
    "end": "2524800"
  },
  {
    "text": "persistence attempts so for example if we see a process being started that is unnotarized",
    "start": "2524800",
    "end": "2530880"
  },
  {
    "text": "that's something we're going to flag like we don't care how it was run if it was the user kind of",
    "start": "2530880",
    "end": "2537359"
  },
  {
    "text": "right clicking and launching it kind of sidestepping the catalina requirements or if it was an exploit like the one we",
    "start": "2537359",
    "end": "2544560"
  },
  {
    "text": "talked about today we basically just don't care we're basically saying hey look unnotarized code is running you know",
    "start": "2544560",
    "end": "2551200"
  },
  {
    "text": "this should normally be blocked clearly the attacker or the malware found a way around this you know you'd be interested",
    "start": "2551200",
    "end": "2558000"
  },
  {
    "text": "to figure out how and why but right now let's let's block that because that's not something that normally shouldn't run",
    "start": "2558000",
    "end": "2565680"
  }
]