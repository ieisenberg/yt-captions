[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "you are currently in uh the Jasmine Ballroom for the session thunder strike 2 Sith strike with tra Hudson and Z",
    "start": "40",
    "end": "10879"
  },
  {
    "text": "kaval my name [Applause]",
    "start": "12360",
    "end": "17439"
  },
  {
    "text": "yeah so today we're talking about thunder strike 2 which is a firmware",
    "start": "17439",
    "end": "22480"
  },
  {
    "text": "Worm for MacBooks um I'm TRL Hudson I really like to take things apart and",
    "start": "22480",
    "end": "28599"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "understand how they work I'm most famous for some work I've done on reverse engineering camera firmware specifically",
    "start": "28599",
    "end": "35079"
  },
  {
    "text": "the the magic lantern project for Canon slrs uh I also enjoyed retro Computing",
    "start": "35079",
    "end": "40760"
  },
  {
    "text": "and looking for Easter eggs in in Old ROMs and things like that this project got started about two years ago when I",
    "start": "40760",
    "end": "47680"
  },
  {
    "text": "was looking into uh helping my firm deploy MacBooks um across the uh the",
    "start": "47680",
    "end": "55039"
  },
  {
    "text": "company and we had heard some reports about rootkits so I was asked to use my revers in skills to look into",
    "start": "55039",
    "end": "63518"
  },
  {
    "text": "that so I'm Zeno kova unfortunately Cory couldn't be here today uh we've been",
    "start": "63720",
    "end": "69680"
  },
  {
    "text": "active in the firmware security area for the last couple years specifically PC firmware security uh Cory and I just",
    "start": "69680",
    "end": "77040"
  },
  {
    "text": "founded legore this past January and we're basically the only company right now which focuses exclusively on PC",
    "start": "77040",
    "end": "83960"
  },
  {
    "text": "firmware peripheral firmware associated with x86 systems and uh all of that",
    "start": "83960",
    "end": "91799"
  },
  {
    "text": "so this talk has its start uh last year at CCC uh I presented uh thunder strike uh",
    "start": "91799",
    "end": "99280"
  },
  {
    "text": "I suppose now thunder strike one which was the first uh firmware rootkits for",
    "start": "99280",
    "end": "104479"
  },
  {
    "text": "MacBooks and the day before M talk uh Rafal and Corey presented attacks on ufi",
    "start": "104479",
    "end": "111159"
  },
  {
    "text": "security uh that included quite a few really uh interesting um vulnerabilities",
    "start": "111159",
    "end": "117399"
  },
  {
    "text": "in uh windows and Linux system after the conference we got to",
    "start": "117399",
    "end": "124479"
  },
  {
    "text": "discussing uh could we uh team up and try uh porting some of those windows and",
    "start": "124479",
    "end": "131360"
  },
  {
    "text": "Linux vulnerabilities over to the Macintosh and finding out if they were actually vulnerable and it turns out that they",
    "start": "131360",
    "end": "139000"
  },
  {
    "text": "are and that's actually one of the main points of this talk is that EFI systems",
    "start": "139000",
    "end": "145400"
  },
  {
    "text": "and ufi systems share lots of common code and because of that they have a lot",
    "start": "145400",
    "end": "150440"
  },
  {
    "text": "of common vulnerabilities so let's uh jump straight to a quick demo uh of this of",
    "start": "150440",
    "end": "159000"
  },
  {
    "text": "our proof of concept so unlike thunder strike one thunder strike 2 uh has the",
    "start": "159000",
    "end": "165280"
  },
  {
    "text": "ability to get started from a pure uh software environment so in this case uh",
    "start": "165280",
    "end": "171560"
  },
  {
    "text": "we're using a root exploit uh to elevate privilege from a you know some sort of",
    "start": "171560",
    "end": "177000"
  },
  {
    "text": "remote code execution to uh to rout we're then able to install a wh listed",
    "start": "177000",
    "end": "182800"
  },
  {
    "text": "kernel module that gives us access to all of main memory we can then um memory",
    "start": "182800",
    "end": "188080"
  },
  {
    "text": "map the uh SPI flash registers and on some uh on some Macintosh systems we're",
    "start": "188080",
    "end": "194879"
  },
  {
    "text": "able to immediately unlock and WR to the flash this Builds on the thunder strike",
    "start": "194879",
    "end": "200200"
  },
  {
    "text": "one research in which we uh reverse engineered how apple is protecting the",
    "start": "200200",
    "end": "205440"
  },
  {
    "text": "Integrity of their ROMs with crc's as well as the structure of their firmware volumes so here we have appended a uh",
    "start": "205440",
    "end": "212959"
  },
  {
    "text": "our payload to some empty space in the firmware and updated the",
    "start": "212959",
    "end": "218040"
  },
  {
    "text": "crc's the other thing that the proof concept does is uh it will search the",
    "start": "218040",
    "end": "223959"
  },
  {
    "text": "PCI uh the pcie tree and look for removable devices that contain something",
    "start": "223959",
    "end": "229799"
  },
  {
    "text": "called option ROMs and then it writes a uh it's proof concept to those option",
    "start": "229799",
    "end": "235280"
  },
  {
    "text": "ROMs as well specifically we are looking at the removable devices such as the gigabit",
    "start": "235280",
    "end": "243159"
  },
  {
    "text": "Ethernet adapter that plugs into Thunderbolt Port so in this case uh the proof of concept has now transitioned",
    "start": "243159",
    "end": "249760"
  },
  {
    "text": "from that software uh the software running on the system into the ROM in",
    "start": "249760",
    "end": "254879"
  },
  {
    "text": "that adapter we are deliberately not being at all stealthy with uh thunder strike 2 so",
    "start": "254879",
    "end": "261919"
  },
  {
    "text": "when the system reboots uh we'll see the logo come up and this is being executed",
    "start": "261919",
    "end": "268280"
  },
  {
    "text": "from the boot flash on the motherboard and is controlling the system from the very first instruction that it executes",
    "start": "268280",
    "end": "274120"
  },
  {
    "text": "fun boot up so one of the exciting Parts about",
    "start": "274120",
    "end": "279320"
  },
  {
    "text": "this sort of worm is that we can bring in a fresh clean laptop that and share",
    "start": "279320",
    "end": "285840"
  },
  {
    "text": "that uh Thunderbolt adapter with it and when it boots it will load and execute",
    "start": "285840",
    "end": "291000"
  },
  {
    "text": "the option ROM uh containing the payload out of that adapter this uh this doesn't",
    "start": "291000",
    "end": "297240"
  },
  {
    "text": "control the system from the first instruction so the uh the firmware has already locked the bios so that we can't",
    "start": "297240",
    "end": "303800"
  },
  {
    "text": "write to the boot flash but what we can do is leverage the attack that uh Cory",
    "start": "303800",
    "end": "309600"
  },
  {
    "text": "and Rafal had described by hooking the S3 resume script and the uh option R then allows",
    "start": "309600",
    "end": "317520"
  },
  {
    "text": "the system to uh to boot normally and at some point later when",
    "start": "317520",
    "end": "322639"
  },
  {
    "text": "the system goes to sleep uh the CPU uh shuts off as part of",
    "start": "322639",
    "end": "328560"
  },
  {
    "text": "the S3 suspension Ram what Cory and Rafal had identified is that in this",
    "start": "328560",
    "end": "333919"
  },
  {
    "text": "state all of the flash protection bits are unlocked and there's a window of",
    "start": "333919",
    "end": "339720"
  },
  {
    "text": "opportunity uh on some systems before the S3 before the um excuse me there's a",
    "start": "339720",
    "end": "345600"
  },
  {
    "text": "window of opportunity that when the S3 script is executed that the uh it can",
    "start": "345600",
    "end": "350639"
  },
  {
    "text": "write to the flash so in this case we've written to the boot Flash and this is",
    "start": "350639",
    "end": "355759"
  },
  {
    "text": "now independent of uh of the OS you could reinstall o 10 and it's still",
    "start": "355759",
    "end": "361000"
  },
  {
    "text": "there you could swap out the hard drive it's still there this is literally controls the system from that first",
    "start": "361000",
    "end": "367400"
  },
  {
    "text": "instruction so again we're not trying to be stealthy so when the system reboots we'll see the logo again a weaponized",
    "start": "367400",
    "end": "375080"
  },
  {
    "text": "version could use smm or virtualization uh such as the blue pill to hide from",
    "start": "375080",
    "end": "381840"
  },
  {
    "text": "attempts to detect it",
    "start": "381840",
    "end": "388360"
  },
  {
    "text": "so the the proof of concept is also watching the pcie bus for fresh devices",
    "start": "388360",
    "end": "394479"
  },
  {
    "text": "to be plugged in so when a clean Thunderbolt adapter is plugged in it detects that event and writes the proof",
    "start": "394479",
    "end": "400599"
  },
  {
    "text": "of concept to Ed so this adapter can now uh be removed and as it is shared",
    "start": "400599",
    "end": "406800"
  },
  {
    "text": "between systems it can spread potentially Crossing air gap security",
    "start": "406800",
    "end": "412720"
  },
  {
    "text": "measures so what we've shown here with with this proof of concept is a unique life cycle that's starts as a software",
    "start": "414000",
    "end": "420560"
  },
  {
    "text": "exploit that's able to write into the boot flash of some systems that can then",
    "start": "420560",
    "end": "425720"
  },
  {
    "start": "421000",
    "end": "421000"
  },
  {
    "text": "write into the option ROMs of removable devices that are able to infect the S3",
    "start": "425720",
    "end": "431240"
  },
  {
    "text": "resume script on uh new systems and right into the boot ROM on",
    "start": "431240",
    "end": "438039"
  },
  {
    "text": "those right so this is again the main point of the talk is the fact that all",
    "start": "439280",
    "end": "445319"
  },
  {
    "text": "systems potentially have vulnerabilities that are shared amongst them because there's this common ufi or EFI base so",
    "start": "445319",
    "end": "452280"
  },
  {
    "start": "450000",
    "end": "450000"
  },
  {
    "text": "just a very brief uh history of EFI um basically Intel when intel was trying to",
    "start": "452280",
    "end": "458240"
  },
  {
    "text": "make their non-b backwards compatible I64 architecture they said we don't want to keep using this old Legacy BIOS scru",
    "start": "458240",
    "end": "464240"
  },
  {
    "text": "we want to create something that's more modular more extensible and we're going to use that for our new architecture so",
    "start": "464240",
    "end": "471000"
  },
  {
    "text": "they started the extensible firmware interface that way um Apple when they moved over from Power PC chips to x86",
    "start": "471000",
    "end": "477759"
  },
  {
    "text": "chips they adopted into 's you know preferred implementation of the firmware",
    "start": "477759",
    "end": "483360"
  },
  {
    "text": "so Intel tried to bring more people into the fold and create the unified extensible firmware interface uh forum",
    "start": "483360",
    "end": "490280"
  },
  {
    "text": "and this was sort of an industry Consortium of many vendors that all sort of contributed to ufi and uh sort of",
    "start": "490280",
    "end": "496520"
  },
  {
    "text": "oversaw its um progress going forward so still even though you know Apple had",
    "start": "496520",
    "end": "502240"
  },
  {
    "text": "forked off here some point before UEFI was even formed um there's still millions of lines of code right they",
    "start": "502240",
    "end": "508400"
  },
  {
    "text": "didn't create UEFI and then just rewrite the whole thing from scratch it's just an evolution of EFI so the way that uh",
    "start": "508400",
    "end": "516320"
  },
  {
    "text": "firmware typically works today is that you have the open source UEFI reference implementation called edk2 EFI",
    "start": "516320",
    "end": "523279"
  },
  {
    "text": "developers get 2 and that's open that's public but then independent bios vendors will typically Fork that add additional",
    "start": "523279",
    "end": "529959"
  },
  {
    "text": "features and add their value to it and then they'll sell it to oems in order to",
    "start": "529959",
    "end": "535680"
  },
  {
    "text": "uh you know make their machines that they sell to you so basically because of this",
    "start": "535680",
    "end": "542079"
  },
  {
    "text": "hierarchical structure where there's the open source reference implementation and then there's some vendors that add their own competing features and then there's",
    "start": "542079",
    "end": "548839"
  },
  {
    "text": "all of the oems who buy from them or maybe Fork off their own way that means that just because of vulnerability gets",
    "start": "548839",
    "end": "554839"
  },
  {
    "text": "fixed in the in the top of the tree doesn't mean that it gets fixed everywhere and it doesn't mean that it",
    "start": "554839",
    "end": "561000"
  },
  {
    "text": "trickles down to everyone right so one of the points of this talk is to show",
    "start": "561000",
    "end": "566640"
  },
  {
    "text": "you know no one's special no one immune to this kind of thing when you go down",
    "start": "566640",
    "end": "571839"
  },
  {
    "text": "and look at firmware down at the lowest level throw it into Ida the way an attacker would uh you see that there are",
    "start": "571839",
    "end": "577360"
  },
  {
    "text": "dramatic similarities and that means from attacker perspective um you know consequently they don't really have to",
    "start": "577360",
    "end": "583760"
  },
  {
    "text": "do that much different in order to attack a Mac versus a PC so this is just an example there's a random Asus machine",
    "start": "583760",
    "end": "590240"
  },
  {
    "text": "that we used for our canc West talk this year so we analyzed it we annotated it there's comments on it but uh if you go",
    "start": "590240",
    "end": "597279"
  },
  {
    "text": "ahead and look at the MacBook Air which we through into item without any special you know annotations everything pretty",
    "start": "597279",
    "end": "603480"
  },
  {
    "text": "much looks the same we've got the same control flow structures we've got the same code being called in the same order",
    "start": "603480",
    "end": "609120"
  },
  {
    "text": "the exact same functions same registers showing up in some places and so it's just over overwhelmingly uh There Are",
    "start": "609120",
    "end": "616880"
  },
  {
    "text": "Places of similarity that can be leveraged by attackers so there's these shared vulnerabilities there's the",
    "start": "616880",
    "end": "622519"
  },
  {
    "start": "619000",
    "end": "619000"
  },
  {
    "text": "shared code and what we see are situations where um you know vendors are",
    "start": "622519",
    "end": "627800"
  },
  {
    "text": "not necessarily using all the protection mechanisms that are available to them and furthermore we've still got some",
    "start": "627800",
    "end": "633720"
  },
  {
    "text": "Legacy decisions around things like option ROMs uh that mean that there are",
    "start": "633720",
    "end": "638839"
  },
  {
    "text": "still these sort of avenues uh very old avenues for attack within",
    "start": "638839",
    "end": "643880"
  },
  {
    "text": "systems so we're going to consider sort of uh four core vulnerabilities that are all sort of old news these are all",
    "start": "643880",
    "end": "651279"
  },
  {
    "start": "644000",
    "end": "644000"
  },
  {
    "text": "vulnerabilities that have been found responsibly disclosed publicly disclosed",
    "start": "651279",
    "end": "656480"
  },
  {
    "text": "and you know acted upon by other vendors but uh when we looked at these these all",
    "start": "656480",
    "end": "661720"
  },
  {
    "text": "still applied to Max because um you know Apple hadn't dealt with them when we started this research so the first thing",
    "start": "661720",
    "end": "668800"
  },
  {
    "text": "to consider is the speed race or vulnerability this is a fundamental Hardware vulnerability it's a race",
    "start": "668800",
    "end": "674079"
  },
  {
    "text": "condition in the hardware in the way the hardware behaves and consequently you would expect that anyone using",
    "start": "674079",
    "end": "679160"
  },
  {
    "text": "vulnerable Intel CPUs are going to potentially be vulnerable to this bug so I have to explain just a little bit you",
    "start": "679160",
    "end": "685240"
  },
  {
    "text": "know this is just going to be a very brief summary of each of these you know four issues that have been previously",
    "start": "685240",
    "end": "690360"
  },
  {
    "text": "fully publicly disclosed and should see the the past talks for full details so the core oldest protection",
    "start": "690360",
    "end": "697760"
  },
  {
    "text": "mechanism for bios was the uh interaction between the BIOS write enable bit and the BIOS lock enable bit",
    "start": "697760",
    "end": "704680"
  },
  {
    "text": "if you want to write to the BIOS you need to set bios WR enable equal to one if the system wants to protect itself it",
    "start": "704680",
    "end": "711600"
  },
  {
    "text": "wants the system to be writable at the boot time but then they at some point want to lock it down and say no more no",
    "start": "711600",
    "end": "716639"
  },
  {
    "text": "one in the operating system should be able to write to the BIOS so in that case they would set the BIOS lock enable bit and this is not a hard",
    "start": "716639",
    "end": "723320"
  },
  {
    "text": "lock this is not a forever more no one else is allowed to write to the BIOS until we reboot this is a soft lock where once",
    "start": "723320",
    "end": "731079"
  },
  {
    "text": "that bit is set anyone who comes along and tries to set bios R enable equal to one they will cause a system management",
    "start": "731079",
    "end": "738320"
  },
  {
    "text": "interrupt and any code that the firmware has set up to catch these system management interrupts will get to make",
    "start": "738320",
    "end": "743800"
  },
  {
    "text": "the access control decision and decide should I allow this person who's trying to write to the BIOS to actually right",
    "start": "743800",
    "end": "749440"
  },
  {
    "text": "to the BIOS and so this previous mechanism this oldest mechanism this works great when you have you know",
    "start": "749440",
    "end": "755120"
  },
  {
    "text": "single threaded you know single core CPUs which is where it was originally introduced but uh what we found was that",
    "start": "755120",
    "end": "763120"
  },
  {
    "text": "once you move over to systems even if it's not multicore we found that even a system that's just hyperthreaded this",
    "start": "763120",
    "end": "770279"
  },
  {
    "text": "core race condition can actually happen so the race condition is we have a situation where one thread of the",
    "start": "770279",
    "end": "777880"
  },
  {
    "text": "hardware can continuously say I want to set bios right enable equal to one so set it writeable set it writeable set it",
    "start": "777880",
    "end": "783760"
  },
  {
    "text": "writable the other thread will continuously say WR to this address in the Bios right to this address in the",
    "start": "783760",
    "end": "789440"
  },
  {
    "text": "Bios right to this address in the Bios and you've got these two threads just hammering on these bits every time the",
    "start": "789440",
    "end": "794720"
  },
  {
    "text": "first thread sets bios right enable equal to one then the system management interrupt will fire all the CPUs have to",
    "start": "794720",
    "end": "800680"
  },
  {
    "text": "get into system management mode system management mode needs to run some code decide whether or not it wants to allow",
    "start": "800680",
    "end": "806399"
  },
  {
    "text": "the system to write there and while all of that other activity is happening sometimes you have a situation where",
    "start": "806399",
    "end": "812079"
  },
  {
    "text": "bios right enable is equal to one and then the other thread slips through a right to the bios so that's the core",
    "start": "812079",
    "end": "818040"
  },
  {
    "text": "race condition uh this was disclosed to Intel in May of 2014 and it was publicly",
    "start": "818040",
    "end": "823560"
  },
  {
    "text": "talked about by Corey at um CCC in December of 2014 so we told Intel about this and",
    "start": "823560",
    "end": "830839"
  },
  {
    "text": "Intel said yeah we know that can potentially be an issue but that's why we introduced this additional bit this",
    "start": "830839",
    "end": "838320"
  },
  {
    "text": "smm WP bit that was introduced around 2004 or so when Intel moved over to the",
    "start": "838320",
    "end": "843920"
  },
  {
    "text": "platform controller Hub so any hardware that's older than 2004 that's just going to be vulnerable forever pretty much and",
    "start": "843920",
    "end": "851320"
  },
  {
    "text": "uh any newer Hardware that's going to have the option to set this bit but it's inum incumbent upon the BIOS makers to",
    "start": "851320",
    "end": "858360"
  },
  {
    "text": "actually set that bit so the smm bwp bit says I'm going to layer additional",
    "start": "858360",
    "end": "864839"
  },
  {
    "text": "protection on top of that even if someone successfully sets bios right enable equal to one I still want to",
    "start": "864839",
    "end": "870600"
  },
  {
    "text": "disallow them access to the BIOS unless the processor is currently uh in system management mode so that means our",
    "start": "870600",
    "end": "876920"
  },
  {
    "text": "attacker just hammering on the bits behind the scenes they're a kernel level attacker they haven't necessarily found a way to break into the but and break",
    "start": "876920",
    "end": "883399"
  },
  {
    "text": "into system management mode and so they would be prevented from being able to write to the flash chip by this bit so",
    "start": "883399",
    "end": "890800"
  },
  {
    "text": "this is the way that Intel recommends the protection bits be set you've got this layering where you know the first",
    "start": "890800",
    "end": "896519"
  },
  {
    "start": "891000",
    "end": "891000"
  },
  {
    "text": "uh most coarse grain sort of Access Control control decisions are if the BIOS lock enable bit is set if someone",
    "start": "896519",
    "end": "902639"
  },
  {
    "text": "tries to set bios right enable then smm can decide with they're going to allow",
    "start": "902639",
    "end": "907680"
  },
  {
    "text": "it then there's the other bit smm bwp that says okay only the BIOS when or",
    "start": "907680",
    "end": "913440"
  },
  {
    "text": "sorry only the CPU while it's in system management mode will be allowed to ride to the BIOS and then there's these",
    "start": "913440",
    "end": "918600"
  },
  {
    "text": "further bits the protected range registers which a vendor can use to create non-contiguous places where the",
    "start": "918600",
    "end": "926480"
  },
  {
    "text": "firmware is actually protected even from system management mode so even if someone were to break into system",
    "start": "926480",
    "end": "932440"
  },
  {
    "text": "management mode on properly configured systems uh they're not going to actually be able to write into the flash chip so",
    "start": "932440",
    "end": "938800"
  },
  {
    "text": "that's the way Intel recommends it be set so for all of our previous vulnerabilities we disclosed them",
    "start": "938800",
    "end": "944800"
  },
  {
    "text": "through CER and the ufi security Response Team once they were stood up we like to use CER rather than cves because",
    "start": "944800",
    "end": "951839"
  },
  {
    "text": "you know cves just says okay here's some you know vendor advisory something like that the nice thing about CT disclosures",
    "start": "951839",
    "end": "958399"
  },
  {
    "text": "is it shows here's the people who said they yes we were affected and you know hopefully there's a link there to the",
    "start": "958399",
    "end": "964279"
  },
  {
    "text": "fixes for it here's the vendors that said we are not affected and here's the vendors who just didn't say anything so",
    "start": "964279",
    "end": "970279"
  },
  {
    "text": "right Apple said they're not affected by this and you know there's no penalty for being wrong right a vendor can say uh",
    "start": "970279",
    "end": "978279"
  },
  {
    "text": "nope not my problem you know prove it right show me the show me the money so a",
    "start": "978279",
    "end": "984120"
  },
  {
    "text": "vendor can say I'm not vulnerable and that may or may not be true and it you know becomes incumbent upon researchers",
    "start": "984120",
    "end": "989600"
  },
  {
    "text": "to actually go and find out is that actually the case or not and of course there's all these sort of vendors down",
    "start": "989600",
    "end": "995319"
  },
  {
    "text": "here which you know they don't say anything and you can pretty much guarantee that the vendors which don't care enough to even respond to a",
    "start": "995319",
    "end": "1001560"
  },
  {
    "text": "vulnerability disclosure they're probably vulnerable right so right incumbent upon us is",
    "start": "1001560",
    "end": "1008399"
  },
  {
    "text": "Apple vulnerable to Speed Racer well if you check the bits you see that U bios",
    "start": "1008399",
    "end": "1013920"
  },
  {
    "text": "control is set to eight which means that the BIOS lock enable is not set the smm",
    "start": "1013920",
    "end": "1021000"
  },
  {
    "text": "bwp is not set so in a technically correct sense of the word they are not",
    "start": "1021000",
    "end": "1026600"
  },
  {
    "text": "vulnerable to Speed Racer because you don't need to use an exploit to get around a protection that was never there",
    "start": "1026600",
    "end": "1032918"
  },
  {
    "text": "in the first place right so this is what the protection",
    "start": "1032919",
    "end": "1039240"
  },
  {
    "text": "looks like on a brand new Mac Mini which I purchased and so we've got no those",
    "start": "1039240",
    "end": "1044640"
  },
  {
    "text": "first two layers are simply not there in terms of protection so you've got this protected range registers which is good",
    "start": "1044640",
    "end": "1050919"
  },
  {
    "text": "because it stops an smm attacker but you've got these two gaps so a kernel level attacker can go ahead and just",
    "start": "1050919",
    "end": "1056120"
  },
  {
    "text": "write into these gaps there's the EFI variables uh these are the things which you would normally edit from the command",
    "start": "1056120",
    "end": "1061640"
  },
  {
    "text": "line with the NV Ram command on a Mac OSX system but there are even some variables which EnV Ram will not allow",
    "start": "1061640",
    "end": "1067760"
  },
  {
    "text": "you to access but because you know the way this protection is set up an attacker could just go in here and set",
    "start": "1067760",
    "end": "1073880"
  },
  {
    "text": "anything they want right but then there's this very interesting other region which we don't know what's even",
    "start": "1073880",
    "end": "1080440"
  },
  {
    "text": "in there and we just said okay well I'm going to smash the variables I'm going to smash the padding yeah we don't know",
    "start": "1080440",
    "end": "1086000"
  },
  {
    "text": "what's going on either oh that's interesting oh I must have hit down magic clear the screen",
    "start": "1086000",
    "end": "1092159"
  },
  {
    "start": "1088000",
    "end": "1088000"
  },
  {
    "text": "button all right so basically there's a gap with um there's a gap for the",
    "start": "1092159",
    "end": "1097840"
  },
  {
    "text": "variables right because they essentially that what that implies is they want runtime accessibility of those variables",
    "start": "1097840",
    "end": "1103200"
  },
  {
    "text": "and then there's some other gap with some other stuff which we don't even know what it is the ufi tool just says",
    "start": "1103200",
    "end": "1108799"
  },
  {
    "text": "it's padding it doesn't know what it is and what we ultimately found was that if you write into that first Gap uh then",
    "start": "1108799",
    "end": "1116559"
  },
  {
    "text": "the system will become corrupted and the system will never boot again so that's a trivial way to brick a brand new system",
    "start": "1116559",
    "end": "1124080"
  },
  {
    "text": "with all of its prot you know with all of the default protections set and so Apple systems out of the box vulnerable",
    "start": "1124080",
    "end": "1130880"
  },
  {
    "text": "to being bricked so we'd show you a demo video for this there is a demo video for this you can go watch it later but uh",
    "start": "1130880",
    "end": "1137240"
  },
  {
    "text": "you know demo video screenshot not super interesting the computer just doesn't boot anymore right so it's hard to make",
    "start": "1137240",
    "end": "1144240"
  },
  {
    "text": "that exciting sorry so there's still these protected range registers that an attacker would",
    "start": "1144240",
    "end": "1149960"
  },
  {
    "text": "have to get around if they wanted to do something useful right bricking the system is all well and good and that can",
    "start": "1149960",
    "end": "1155200"
  },
  {
    "text": "be a very severe attack to recover from but um you know an attacker would usually like to take um stealthy control",
    "start": "1155200",
    "end": "1161919"
  },
  {
    "text": "of a system rather than just turn it off right unless you're whoever attacked saudio",
    "start": "1161919",
    "end": "1167280"
  },
  {
    "text": "ramco so there's the Darth vamus vulnerability sometimes referred to the dark Jedi attack this was named by Rafal",
    "start": "1167280",
    "end": "1174480"
  },
  {
    "text": "because in the the Star Wars Universe Darth pagus defeated his Nemesis Darth",
    "start": "1174480",
    "end": "1179840"
  },
  {
    "text": "venamis he killed him and then he kept resurrecting him putting him back to",
    "start": "1179840",
    "end": "1185159"
  },
  {
    "text": "sleep killing him again resurrecting him putting him back to sleep so through this continuous uh process of killing",
    "start": "1185159",
    "end": "1191960"
  },
  {
    "text": "and resuming killing and resuming uh he learned the science of murans right so",
    "start": "1191960",
    "end": "1198120"
  },
  {
    "text": "use killing people to learn about science so this is exactly what the",
    "start": "1198120",
    "end": "1203280"
  },
  {
    "text": "Darth vamus does it is uses this built-in capability called S3 sleep acpi",
    "start": "1203280",
    "end": "1210080"
  },
  {
    "text": "S3 sleep whenever you close the lid on your laptop and it goes to sleep and then you have this ability to quickly",
    "start": "1210080",
    "end": "1215159"
  },
  {
    "text": "wake up again that's an S3 sleep you're going into a low power mode on the",
    "start": "1215159",
    "end": "1220360"
  },
  {
    "text": "processor and that leads to unfortunately some Access Control bits coming unset so this core vulnerability",
    "start": "1220360",
    "end": "1227559"
  },
  {
    "text": "was disclosed to search on the UEFI security response team in September of 2014 also independently discovered by",
    "start": "1227559",
    "end": "1234400"
  },
  {
    "text": "the Intel Advanced threat research team and this was publicly disclosed by Rafal",
    "start": "1234400",
    "end": "1239840"
  },
  {
    "text": "at um CCC in December of this past year so just a very brief sort of",
    "start": "1239840",
    "end": "1245400"
  },
  {
    "start": "1243000",
    "end": "1243000"
  },
  {
    "text": "overview of what they covered in that full hour talk which I recommend you watch um the basic process you boot up",
    "start": "1245400",
    "end": "1252400"
  },
  {
    "text": "your system and as you're booting the system you have the full code which is going to you know the whole point of",
    "start": "1252400",
    "end": "1258679"
  },
  {
    "text": "firmware code is to configure the system set the hardware into a San configuration so that you can run a",
    "start": "1258679",
    "end": "1264640"
  },
  {
    "text": "full-fledged operating system right so that's a relatively long process and what you want with this S3 sleep is you",
    "start": "1264640",
    "end": "1271559"
  },
  {
    "text": "want the ability to close the lid and then open it up and have it resume extremely quickly so as the pro as the",
    "start": "1271559",
    "end": "1277360"
  },
  {
    "text": "boot is going through a normal boot it's going to save off this little cheat sheet of like what is the minimal",
    "start": "1277360",
    "end": "1283159"
  },
  {
    "text": "configuration that I need to do to get the system back into a basic configuration where it's fully functional and that cheat sheet is the",
    "start": "1283159",
    "end": "1290320"
  },
  {
    "text": "S3 boot resume script or boot or resume script and so on the top column on the",
    "start": "1290320",
    "end": "1297000"
  },
  {
    "text": "top row that's the normal boot process where you save off your script to of",
    "start": "1297000",
    "end": "1302080"
  },
  {
    "text": "what you're going to execute when you wake back up and on the bottom row upon resume you basically just walk through",
    "start": "1302080",
    "end": "1308320"
  },
  {
    "text": "and you execute each of these uh dis each of these op codes uh within a script and the op codes do basic",
    "start": "1308320",
    "end": "1315039"
  },
  {
    "text": "activities like writing to memory reading from memory writing VI Port iio Reading via Port IO but there is a a big",
    "start": "1315039",
    "end": "1322400"
  },
  {
    "text": "kicker in here and that is the dispatch app code so amongst this little script of do this then do that and do that and",
    "start": "1322400",
    "end": "1328720"
  },
  {
    "text": "do that there's a little caveat there's a there's a catch all which is the dispatch op code that says whatever I",
    "start": "1328720",
    "end": "1336080"
  },
  {
    "text": "need to do to reconfigure the hardware it's too complicated for me to do with just simple reads and writes of memory",
    "start": "1336080",
    "end": "1341120"
  },
  {
    "text": "just jump to some arbitrary code and that code will execute and do whatever it needs to do so what uh the core",
    "start": "1341120",
    "end": "1348080"
  },
  {
    "text": "finding of Darth venomous attack was if you find those sort of dispatch op codes you can overwrite them and force the",
    "start": "1348080",
    "end": "1354559"
  },
  {
    "text": "system to jump to attacker controlled code what that means is that ultimately with Darth venomus uh all of the",
    "start": "1354559",
    "end": "1362200"
  },
  {
    "start": "1357000",
    "end": "1357000"
  },
  {
    "text": "protected range registers can be made to go away you go down into a low power State all of the hardware loses all of",
    "start": "1362200",
    "end": "1368679"
  },
  {
    "text": "its configuration bits you wake back up and now the system is completely open and vulnerable to writing so now an",
    "start": "1368679",
    "end": "1376039"
  },
  {
    "text": "attacker can go after the code and stuff so Darth venomus this was an interesting",
    "start": "1376039",
    "end": "1382240"
  },
  {
    "text": "sort of situation where when we looked back to see you know did Apple say they were vulnerable did Apple say they were not vulnerable uh you look at the C",
    "start": "1382240",
    "end": "1389080"
  },
  {
    "text": "disclosure for this and whereas normally C would say who didn't say anything or who said they were not vulnerable in",
    "start": "1389080",
    "end": "1395159"
  },
  {
    "text": "this case all it said was some vendors that said they were affected and potentially had patches so with a little bit of digging",
    "start": "1395159",
    "end": "1402880"
  },
  {
    "text": "we found that it turned out that CER actually dropped the ball on this one C didn't disclose this to Apple explicitly",
    "start": "1402880",
    "end": "1408600"
  },
  {
    "text": "but as I said we you know disclosed this also through the newly formed UEFI security response team which was stood",
    "start": "1408600",
    "end": "1414880"
  },
  {
    "text": "up because of all the various attacks that have been happening over the past couple years they said we need a good way to get out this information to all",
    "start": "1414880",
    "end": "1421880"
  },
  {
    "text": "of the members of the UEFI forum and given the fact that apple is a board level member of The ufi Forum you would",
    "start": "1421880",
    "end": "1428679"
  },
  {
    "text": "expect them to listen to their own security response team so trl's previous vulnerabilities",
    "start": "1428679",
    "end": "1435880"
  },
  {
    "text": "with thunder strike it was the first time anyone had actually showed the ability to reflash the Mac previously",
    "start": "1435880",
    "end": "1441200"
  },
  {
    "text": "from snares work there was a question about whether or not there was some special protection that Apple was doing",
    "start": "1441200",
    "end": "1446480"
  },
  {
    "text": "with Hardware to prevent uh writing to the flash chip tremble showed no Apple's not doing anything special you can just",
    "start": "1446480",
    "end": "1452679"
  },
  {
    "text": "go ahead and write to the flash chip if you know the right way to fix up the crc's and everything furthermore once",
    "start": "1452679",
    "end": "1458120"
  },
  {
    "text": "you combine Darth vamus with this there's no longer any sort of requirement for physical access to",
    "start": "1458120",
    "end": "1463679"
  },
  {
    "text": "attack firmware right so thunder strike one physical access you had uh you know little Thunderbolt ethernet adapter",
    "start": "1463679",
    "end": "1470640"
  },
  {
    "text": "Darth venomus now an attacker can put the system to sleep wake it up and right to the right to the flash chip so the",
    "start": "1470640",
    "end": "1477760"
  },
  {
    "text": "way that that generally works is that um if you look at the system uh you look at a system as it's just normally running",
    "start": "1477760",
    "end": "1484600"
  },
  {
    "text": "and yes you will see the protected range registers properly stopping an attacker from writing into the flash chip but",
    "start": "1484600",
    "end": "1490600"
  },
  {
    "text": "because of this uh res uh resume script issue the resume script is stored in unprotected memory forgot to say that",
    "start": "1490600",
    "end": "1497760"
  },
  {
    "text": "right the resum script is just sitting around in Ram somewhere so an attacker can come in modify the resume script and",
    "start": "1497760",
    "end": "1503559"
  },
  {
    "text": "that dispatch op code that place where it jumps to arbitrary code they rewrite that they point it at some temporary",
    "start": "1503559",
    "end": "1509679"
  },
  {
    "text": "space they insert some code to the temporary space in this case the proof of concept just sets a lock bit in the",
    "start": "1509679",
    "end": "1516720"
  },
  {
    "text": "flash lockdown register so literally just a couple of instructions writes the lock bit and this means we went down",
    "start": "1516720",
    "end": "1523399"
  },
  {
    "text": "into it when we go down into sleep and when we come back up the system will be",
    "start": "1523399",
    "end": "1530039"
  },
  {
    "text": "prematurely locked and the normal boot script will not be able to write and turn on those protected range registers",
    "start": "1530039",
    "end": "1536159"
  },
  {
    "text": "because it was locked before the uh rest of the code had a chance to try to set it so go to sleep just use a power power",
    "start": "1536159",
    "end": "1544679"
  },
  {
    "text": "command go to sleep wake back up and now the system completely unprotected and",
    "start": "1544679",
    "end": "1550840"
  },
  {
    "text": "consequently we just disabled protected range registers Apple doesn't use bios",
    "start": "1550840",
    "end": "1555960"
  },
  {
    "text": "lock enable Apple doesn't use smm bwp so that means it's game over and anyone can",
    "start": "1555960",
    "end": "1562120"
  },
  {
    "text": "write anything anywhere into the flash we just wrote hello world into the flash because we knew we could do that and it",
    "start": "1562120",
    "end": "1568200"
  },
  {
    "text": "wouldn't break the system so you may have heard of a related vulnerability called Prince",
    "start": "1568200",
    "end": "1573679"
  },
  {
    "text": "arming um we had found actually this same sort of vulnerability a while back in our research uh in 2013 we found this",
    "start": "1573679",
    "end": "1580960"
  },
  {
    "text": "vulnerability we disclosed it and it got fixed and you took certain an inordinate",
    "start": "1580960",
    "end": "1586480"
  },
  {
    "text": "amount of time to actually post this vulnerability posting because they said well it's already fixed we don't need to",
    "start": "1586480",
    "end": "1591720"
  },
  {
    "text": "coordinate it so we had to wait for this vulnerability to come along and say okay",
    "start": "1591720",
    "end": "1597159"
  },
  {
    "text": "well now it's not fixed yet another vendor has had this problem so then they decided they would uh coordinate this",
    "start": "1597159",
    "end": "1603520"
  },
  {
    "text": "and post our thing we gave them back in 2013 so the prince Haring vulnerability was found by Pedro vaka and he didn't",
    "start": "1603520",
    "end": "1610320"
  },
  {
    "text": "want to give it any particular name but uh but Katie Mo came along and said you know let's call it Prince harming",
    "start": "1610320",
    "end": "1616760"
  },
  {
    "text": "because you know Prince arming wakes you up with the poison kiss and uh it's all very sketchy you've got this",
    "start": "1616760",
    "end": "1623000"
  },
  {
    "start": "1621000",
    "end": "1621000"
  },
  {
    "text": "vulnerability thanks to the poison kiss of Prince harming so back in May Pedro",
    "start": "1623000",
    "end": "1628880"
  },
  {
    "text": "posted a um a blog post and in the post he talked about how he had you know seen",
    "start": "1628880",
    "end": "1635080"
  },
  {
    "text": "the uh title of this talk he had correctly inferred from the Sith strike that this talk would have something to",
    "start": "1635080",
    "end": "1641000"
  },
  {
    "text": "do with Darth vamus and he said he had been looking into Darth vamus and its potential applicability to Apples but uh",
    "start": "1641000",
    "end": "1648880"
  },
  {
    "text": "he said that while he was doing his research he found a much more severe vulnerability that he didn't have to",
    "start": "1648880",
    "end": "1655679"
  },
  {
    "text": "manipulate the boot script whatsoever he just put the system to sleep woke it back up and it was for whatever reason",
    "start": "1655679",
    "end": "1662360"
  },
  {
    "text": "not actually setting the protection bits so they were forgetting to set the protection bits when it woke back up and",
    "start": "1662360",
    "end": "1668480"
  },
  {
    "text": "as you can see uh this was a cause for concern and it left much to be desired",
    "start": "1668480",
    "end": "1675240"
  },
  {
    "text": "so the prince harming vulnerability uh was publicly disclosed back in um you know in his blog post in may he assumed",
    "start": "1675240",
    "end": "1682360"
  },
  {
    "start": "1676000",
    "end": "1676000"
  },
  {
    "text": "incorrectly that we had already seen Prince harming and disclosed it to Apple um he you know he assumed that yeah so",
    "start": "1682360",
    "end": "1690039"
  },
  {
    "text": "we had previously been testing um our systems and testing for vulnerabilities of previously disclosed vulnerabilities",
    "start": "1690039",
    "end": "1696559"
  },
  {
    "text": "on MacBook Pro 112s so these are newer systems and these do not exhibit Prince",
    "start": "1696559",
    "end": "1702799"
  },
  {
    "text": "harming so you put it to sleep you wake it back up and it is not actually vulnerable it's still correct ly Set uh",
    "start": "1702799",
    "end": "1709279"
  },
  {
    "text": "Pedro had actually been testing on a MacBook Pro 101 and on that system you put it to sleep wake it up so our",
    "start": "1709279",
    "end": "1715679"
  },
  {
    "text": "systems were vulnerable to venamis so you could manipulate the boot script and things like that but they were not vulnerable to Prince",
    "start": "1715679",
    "end": "1721600"
  },
  {
    "text": "harming so basically Apple either you know silently or accidentally fixed the",
    "start": "1721600",
    "end": "1726960"
  },
  {
    "text": "problem in the newer machines and then they didn't backport it to previous systems and so consequently Pedro",
    "start": "1726960",
    "end": "1734399"
  },
  {
    "text": "basically accidentally put out a firmware level zero day like dear everybody put your Mac to sleep wake it",
    "start": "1734399",
    "end": "1740000"
  },
  {
    "text": "up and you can go ahead and ride into the flash chip and back door the system so",
    "start": "1740000",
    "end": "1745440"
  },
  {
    "text": "oops right but after that uh after that zero after that firmware zero day was out there Apple turned around patch",
    "start": "1745440",
    "end": "1752279"
  },
  {
    "text": "relatively quickly and uh this EFI security update 20151 this fixed Prince",
    "start": "1752279",
    "end": "1758880"
  },
  {
    "text": "harming and it partially fixed um it partially fixed venomus Darth venomus",
    "start": "1758880",
    "end": "1764480"
  },
  {
    "text": "attack so if you look at the update you'll see that it basically applies to everything from 2011 and forward so 24",
    "start": "1764480",
    "end": "1772840"
  },
  {
    "text": "different models were actually fixed but uh when treml took a look at the patch he found that there were some potential",
    "start": "1772840",
    "end": "1779519"
  },
  {
    "text": "issues with it still so said it improved the Locking on the system but what does",
    "start": "1779519",
    "end": "1784760"
  },
  {
    "text": "that actually mean so I pulled down the firmware",
    "start": "1784760",
    "end": "1790120"
  },
  {
    "start": "1788000",
    "end": "1788000"
  },
  {
    "text": "update and uh did some diffs between the uh different versions and found that",
    "start": "1790120",
    "end": "1795760"
  },
  {
    "text": "apple is now uh setting the protected range registers and uh locking them in",
    "start": "1795760",
    "end": "1801200"
  },
  {
    "text": "PEI before the S3 boot script is executed and this is this is the right",
    "start": "1801200",
    "end": "1806679"
  },
  {
    "text": "place to do it and it does prevent uh writing to the boot flash as we showed in our demo however the BIOS control",
    "start": "1806679",
    "end": "1814399"
  },
  {
    "text": "bits are still unlocked so it's still possible to Breck the system the S3 boot script is still unprotected so you can",
    "start": "1814399",
    "end": "1821039"
  },
  {
    "text": "do all sorts of interesting stuff in there and the tsag MB register is",
    "start": "1821039",
    "end": "1826440"
  },
  {
    "text": "unlocked this is yet another Legacy feature uh that potentially allows a device to dma into SM Ram which allows",
    "start": "1826440",
    "end": "1834120"
  },
  {
    "text": "it to get code execution in smm um the other thing I found is that",
    "start": "1834120",
    "end": "1839320"
  },
  {
    "text": "there appears to be another silent fix that the latest MacBook the USBC one",
    "start": "1839320",
    "end": "1844399"
  },
  {
    "text": "protects the S3 boot script uh via some mechanism so it's not subject to the",
    "start": "1844399",
    "end": "1849600"
  },
  {
    "text": "Darth venomus attack uh but all of the previous models uh still",
    "start": "1849600",
    "end": "1856320"
  },
  {
    "text": "are so another Legacy feature that Fender strike 2 uses is option ROMs",
    "start": "1856320",
    "end": "1861399"
  },
  {
    "start": "1857000",
    "end": "1857000"
  },
  {
    "text": "Fender strike one also took advantage of this and this goes back to the earliest days of the uh the IBM PC uh where the",
    "start": "1861399",
    "end": "1868960"
  },
  {
    "text": "BIOS was typically socketed and there were spare sockets on the motherboard for optional features like the basic",
    "start": "1868960",
    "end": "1875639"
  },
  {
    "text": "interpreter or a hard drive controller expansion cards like video cards were also allowed to uh have",
    "start": "1875639",
    "end": "1882919"
  },
  {
    "text": "expansion ROMs on them so that the BIOS could write the early boot messages out to those dis",
    "start": "1882919",
    "end": "1889279"
  },
  {
    "text": "displays using this as an attack Vector is not really a new idea uh John heasman presented at black hat 2007 with the",
    "start": "1889279",
    "end": "1896399"
  },
  {
    "text": "proof of concept that executed from uh pcie cards and desktop and server",
    "start": "1896399",
    "end": "1902000"
  },
  {
    "text": "systems and in 2012 snare uh streamlined that and showed how to uh Implement a uh",
    "start": "1902000",
    "end": "1910480"
  },
  {
    "text": "option ROM in a gigabit Ethernet adapter that could back door the os10 kernel uh",
    "start": "1910480",
    "end": "1915639"
  },
  {
    "text": "his talk was the one that actually started me on this project uh a few years",
    "start": "1915639",
    "end": "1921080"
  },
  {
    "text": "ago Intel realized that option ROMs posed a problem for uh secure Boot and",
    "start": "1921080",
    "end": "1928120"
  },
  {
    "text": "as part of the secure boot project required that expansion cards had to contain uh cryptographically signed uh",
    "start": "1928120",
    "end": "1935840"
  },
  {
    "text": "option ROMs um this was merged into UEFI 2.3 and again required for secure boot",
    "start": "1935840",
    "end": "1943760"
  },
  {
    "text": "uh as we mentioned though apple is basically Frozen on uh the old EFI 1.10",
    "start": "1943760",
    "end": "1949960"
  },
  {
    "text": "and they are still unconditionally loading and executing option ROMs from both internal and external devices on",
    "start": "1949960",
    "end": "1956919"
  },
  {
    "text": "the Thunderbolt bus and this is despite you know he's talk in 2007 sn's demo in 2012 and then",
    "start": "1956919",
    "end": "1964639"
  },
  {
    "text": "my thunder strike demo in 2014 and it really needs an architectural fix that there needs to be",
    "start": "1964639",
    "end": "1970639"
  },
  {
    "text": "a way to uh either Whit list ROMs to disable ROMs if they're not necessary or",
    "start": "1970639",
    "end": "1976679"
  },
  {
    "text": "in many ways uh to be able to trust the contents of",
    "start": "1976679",
    "end": "1982000"
  },
  {
    "text": "them the thunder strike one uh talk uh also hypothesized that a uh these",
    "start": "1982000",
    "end": "1989159"
  },
  {
    "text": "removable Thunderbolt devices could be used to virally spread uh this sort of",
    "start": "1989159",
    "end": "1994760"
  },
  {
    "text": "attack at the time uh the only way to write to the rahs uh was to reboot to",
    "start": "1994760",
    "end": "2001360"
  },
  {
    "text": "Doss and have physical control of of the adapters and that's kind of messy and",
    "start": "2001360",
    "end": "2006919"
  },
  {
    "text": "not very stream mind um so uh what we figured out though is that the Linux uh",
    "start": "2006919",
    "end": "2013159"
  },
  {
    "text": "broadcom b57 doc kernel driver has support for uh reading and writing the",
    "start": "2013159",
    "end": "2019159"
  },
  {
    "text": "option ROMs so we were able to Port that over to OS 10 and now uh you only need root access to be able to map the PCI",
    "start": "2019159",
    "end": "2026440"
  },
  {
    "text": "space in order uh to write to them this also works from uh DXE or Pei mode since",
    "start": "2026440",
    "end": "2033039"
  },
  {
    "text": "they have access to Raw memory this means that now an attacker",
    "start": "2033039",
    "end": "2038960"
  },
  {
    "text": "who can get a uh a root shell on the machine using whatever attack is currently unpatched is able to install",
    "start": "2038960",
    "end": "2046840"
  },
  {
    "text": "the whitelisted uh direct Hardware uh kernel extension map the pcie space and",
    "start": "2046840",
    "end": "2052599"
  },
  {
    "text": "then write their um their code into the option ROMs of those",
    "start": "2052599",
    "end": "2057760"
  },
  {
    "text": "devices we most of these demos are using the Thunderbolt devices because they're very convenient they're removable and",
    "start": "2057760",
    "end": "2064000"
  },
  {
    "text": "fairly inexpensive but there are lots of devices in the system that potentially could contain option ROMs there are some",
    "start": "2064000",
    "end": "2070320"
  },
  {
    "text": "models of Wi-Fi cards some some gpus and some SATA controllers in the internal",
    "start": "2070320",
    "end": "2075878"
  },
  {
    "text": "ssds that have option ROMs as well so even if you can't get persistence into",
    "start": "2075879",
    "end": "2081200"
  },
  {
    "text": "the boot flash you can still get sometimes get persistence into the peripherals which is almost as good",
    "start": "2081200",
    "end": "2087320"
  },
  {
    "text": "because this does run before the uh the kernel starts and gives you the ability to quite a bit of back",
    "start": "2087320",
    "end": "2095000"
  },
  {
    "text": "dooring all right so one last time time for good measure right ufi vulnerability",
    "start": "2095599",
    "end": "2101200"
  },
  {
    "text": "shared amongst many systems just because a researcher doesn't say it applies to one particular model or your particular",
    "start": "2101200",
    "end": "2107640"
  },
  {
    "text": "model your particular machine does not mean that it does not apply to your particular machine right it's really",
    "start": "2107640",
    "end": "2113880"
  },
  {
    "text": "just a question of motivation and effort in terms of looking into these kind of things so ultimately um you know we",
    "start": "2113880",
    "end": "2120800"
  },
  {
    "start": "2119000",
    "end": "2119000"
  },
  {
    "text": "basically did this survey of multiple public vulnerabilities that we' already disclosed and you know here's the net",
    "start": "2120800",
    "end": "2126560"
  },
  {
    "text": "result of it Snorlax or Prince harming that was fully patched by the June 2013",
    "start": "2126560",
    "end": "2131880"
  },
  {
    "text": "so no longer if you go out and apply the BIOS updates which we always harp on go apply your bios",
    "start": "2131880",
    "end": "2138000"
  },
  {
    "text": "updates uh if you go and apply the update then if you put it to sleep and wake it back up it will not just be",
    "start": "2138000",
    "end": "2143800"
  },
  {
    "text": "vulnerable by default it'll still be partially vulnerable to Darth vamus the attacker could use that to break into",
    "start": "2143800",
    "end": "2149880"
  },
  {
    "text": "smm and live in Ram that your memory forensics can never take a look at but",
    "start": "2149880",
    "end": "2155359"
  },
  {
    "text": "uh and you know the other things that tram will mention there's also the Speed Racer issue which",
    "start": "2155359",
    "end": "2160760"
  },
  {
    "text": "as I said it's kind of you know they're not vulnerable to the hardware I mean their Hardware is vulnerable to the",
    "start": "2160760",
    "end": "2166560"
  },
  {
    "text": "hardware race condition they're supposed to be setting SMN bwp in order to have",
    "start": "2166560",
    "end": "2172680"
  },
  {
    "text": "the system properly protected but they're simply not even using that protection bit and then interestingly",
    "start": "2172680",
    "end": "2178599"
  },
  {
    "text": "King's Gambit Cory's vulnerability which he just want a pony for yesterday and",
    "start": "2178599",
    "end": "2183640"
  },
  {
    "text": "which I talked about we both talked about here at def uh black hat last year",
    "start": "2183640",
    "end": "2189440"
  },
  {
    "text": "uh that same vulnerability is actually still unpatched so although uh Apple",
    "start": "2189440",
    "end": "2194520"
  },
  {
    "text": "patched the vulnerability which so Darth venomous as the proof of concept video is will not work directly uh King's",
    "start": "2194520",
    "end": "2201200"
  },
  {
    "text": "Gambit is gives us the exact same capability without the need for a sleep and resume gives us the ability to ride",
    "start": "2201200",
    "end": "2206920"
  },
  {
    "text": "into the flash chip and uh and fully take control of the system so that's still unpatched Apple's working on a",
    "start": "2206920",
    "end": "2213400"
  },
  {
    "text": "patch for that but um you can hear Cory talk a little bit about that little bit more about that at the upcoming hack in",
    "start": "2213400",
    "end": "2219480"
  },
  {
    "text": "the boox gack conference the Sicilian was another one of Cory's vulnerabilities disclosed that",
    "start": "2219480",
    "end": "2225640"
  },
  {
    "text": "Eco party in 2013 that was um a situation where we were trying to make",
    "start": "2225640",
    "end": "2230720"
  },
  {
    "text": "the point that invisible things labs in the past had said just because you break in smm doesn't mean you can break into BIOS and we were trying to show yes in",
    "start": "2230720",
    "end": "2238240"
  },
  {
    "text": "some cases if you break into BIOS you can break into if you break into smm you can break into BIOS the sixth thing that",
    "start": "2238240",
    "end": "2244720"
  },
  {
    "text": "we did consider which is not at all applicable to Apple system is the setup vulnerabilities which had",
    "start": "2244720",
    "end": "2249839"
  },
  {
    "text": "been found by Intel and ourselves uh there's a variable which is very common",
    "start": "2249839",
    "end": "2255000"
  },
  {
    "text": "on many ufi systems a lot of PCS have it the set of variable if uh corrupted will",
    "start": "2255000",
    "end": "2260960"
  },
  {
    "text": "lead to breaking your system and if uh manipulated will lead to Breaking secure boot so this has been a widespread",
    "start": "2260960",
    "end": "2268520"
  },
  {
    "text": "vulnerability but does not apply to Apples because they just simply don't use this because they just simply don't",
    "start": "2268520",
    "end": "2274040"
  },
  {
    "text": "do secure Boot and there's no equivalent sort of thing so you know what can vendors do to",
    "start": "2274040",
    "end": "2280839"
  },
  {
    "start": "2278000",
    "end": "2278000"
  },
  {
    "text": "actually improve things because you know I know you're all bios vendors out there so let me lay some truth on you uh you",
    "start": "2280839",
    "end": "2286880"
  },
  {
    "text": "know testing vulnerabilities from other systems if they're in the Bios and firmware World whatsoever uh you need to",
    "start": "2286880",
    "end": "2294319"
  },
  {
    "text": "check whether those actually apply to you right silently fixing vulnerabilities you know Bad Karma there",
    "start": "2294319",
    "end": "2301000"
  },
  {
    "text": "using all the lock mechanisms that the vendors provide you if intel says here's all these lock mechanisms that you can",
    "start": "2301000",
    "end": "2306880"
  },
  {
    "text": "use it uh probably behooves you to use them you can maybe get away with using less protection mechanisms and then you",
    "start": "2306880",
    "end": "2314280"
  },
  {
    "text": "know it's that much less work for an attacker to eventually break into the BIOS chipc Intel's tool um for checking",
    "start": "2314280",
    "end": "2321839"
  },
  {
    "text": "bios vulnerabilities uh can be used to just sort of automatically determine whether a given system is is patched or",
    "start": "2321839",
    "end": "2327480"
  },
  {
    "text": "not if you're using Windows or Linux you can just go use chipc uh chipc doesn't support Mac OS so if you install Windows",
    "start": "2327480",
    "end": "2335480"
  },
  {
    "text": "on your Mac and then you go run chips SEC there you will see it telling you all right this system is not this system",
    "start": "2335480",
    "end": "2341000"
  },
  {
    "text": "is vulnerable because it's not using all the protection mechanisms there are other things like smm lock boox which helps lock away the",
    "start": "2341000",
    "end": "2348200"
  },
  {
    "text": "uh S3 boot script so that it can't be just sitting around in RAM for an attacker manipulate that's actually used",
    "start": "2348200",
    "end": "2354280"
  },
  {
    "text": "in the EFI open source reference implementation but we actually see very few vendors which actually use the",
    "start": "2354280",
    "end": "2359760"
  },
  {
    "text": "lockbox and beyond that the lock boox is not a Panacea in and of itself cuz they showed in the Darth venomus attack that",
    "start": "2359760",
    "end": "2366440"
  },
  {
    "text": "in some cases V Mis implement the lock box and then um it's still vulnerable on",
    "start": "2366440",
    "end": "2373160"
  },
  {
    "text": "newer systems Intel has a technology called boot guard and boot guard provides a much stronger root of trust",
    "start": "2373160",
    "end": "2379079"
  },
  {
    "text": "for the system so that you know that um the system does not execute the very",
    "start": "2379079",
    "end": "2384520"
  },
  {
    "text": "first instruction out of this flash chip which an attacker can potentially reprogram and take control of it",
    "start": "2384520",
    "end": "2389800"
  },
  {
    "text": "executes it out of some signed code that Intel provides that uh the signature the",
    "start": "2389800",
    "end": "2396000"
  },
  {
    "text": "public Keys built into the CPU itself and so the CPU actually validates the digital signature on that",
    "start": "2396000",
    "end": "2402040"
  },
  {
    "text": "code and of course option ROMs this has been sort of a long running problem um this ability to you know back door the",
    "start": "2402040",
    "end": "2410040"
  },
  {
    "text": "system to compromise the kernel which is obviously what at the end of the day a lot of things the attacker wants to do",
    "start": "2410040",
    "end": "2415560"
  },
  {
    "text": "you know maybe get into the kernel uh it's just been a long running problem and there needs to be additional security around that all right so for",
    "start": "2415560",
    "end": "2422760"
  },
  {
    "start": "2422000",
    "end": "2422000"
  },
  {
    "text": "the rest of you who are not bios vendors right what can you do well you need to",
    "start": "2422760",
    "end": "2427839"
  },
  {
    "text": "start doing firmware forensics right it's not just about hard drive forensics anymore it's not just about memory",
    "start": "2427839",
    "end": "2433599"
  },
  {
    "text": "forensics your firmware and all of those little firmwares scattered about your system they need actual checking right",
    "start": "2433599",
    "end": "2441040"
  },
  {
    "text": "that's part of the reason why we started our company is because we didn't see people actually checking uh their",
    "start": "2441040",
    "end": "2446560"
  },
  {
    "text": "firmware so we work with vendors in order to remove vulnerabilities from firmware but if there are",
    "start": "2446560",
    "end": "2452119"
  },
  {
    "text": "vulnerabilities out there in unpatched things then you could still get infected and uh you need a way to actually check",
    "start": "2452119",
    "end": "2458880"
  },
  {
    "text": "that so um we are putting out a basic tool you know basic Band-Aid what can",
    "start": "2458880",
    "end": "2464599"
  },
  {
    "text": "you do in order to check whether or not you've got Thunder whether You' got thunder strike 2 firm worms running",
    "start": "2464599",
    "end": "2470560"
  },
  {
    "text": "around on your network um TRL is going to be releasing the source for his option ROM dumping tool sort of Port it",
    "start": "2470560",
    "end": "2477400"
  },
  {
    "text": "over from Linux to um Port it over from Linux to Mac so that Mac users can just",
    "start": "2477400",
    "end": "2482800"
  },
  {
    "text": "natively dump the option ROM off their Thunderbolt adapters and uh con",
    "start": "2482800",
    "end": "2487920"
  },
  {
    "text": "quently take a look at it and we're releasing a script it's already posted which you can use to go Integrity check",
    "start": "2487920",
    "end": "2494640"
  },
  {
    "text": "the firmware in order to see you know is there anything modified about this firmware is there any code injected into",
    "start": "2494640",
    "end": "2500440"
  },
  {
    "text": "it it's actually you know pretty easy to Integrity check the firmware so consequently just simple script bam 01",
    "start": "2500440",
    "end": "2507680"
  },
  {
    "text": "has it been manipulated or not now there might be some false positives cuz we've only checked it on you know our few Thunder uh Thunderbolt devices so if you",
    "start": "2507680",
    "end": "2515480"
  },
  {
    "text": "go off and run it and it says there's a unexpected change to your Thunderbolt ethernet adapter well it may be a false",
    "start": "2515480",
    "end": "2521920"
  },
  {
    "text": "positive or it may be a true positive uh let us know in either",
    "start": "2521920",
    "end": "2527400"
  },
  {
    "text": "case also you know what can you do you can go get smart on security for free from open security training go learn",
    "start": "2527640",
    "end": "2534480"
  },
  {
    "text": "more about rot kits and what they can do to you so thanks for attending our talk",
    "start": "2534480",
    "end": "2539599"
  },
  {
    "text": "uh we will have some further information um as well as an annotated transcript up on um our different websites uh you see",
    "start": "2539599",
    "end": "2547400"
  },
  {
    "text": "how to contact us and uh please be sure to fill out your evaluation",
    "start": "2547400",
    "end": "2553558"
  },
  {
    "text": "forms that's thank you",
    "start": "2553599",
    "end": "2558359"
  },
  {
    "text": "[Applause]",
    "start": "2561170",
    "end": "2565260"
  }
]