[
  {
    "text": "welcome to security system a deep dive into reverse in android preinstalled",
    "start": "30",
    "end": "5190"
  },
  {
    "text": "applications with matt is done just a couple announcements before we begin",
    "start": "5190",
    "end": "10500"
  },
  {
    "text": "please stop by the business hall located on this floor Mandalay Bay you can also",
    "start": "10500",
    "end": "15599"
  },
  {
    "text": "stop at the blackhat Arsenal today it's in the business hall as well on this level we ask you to please put your",
    "start": "15599",
    "end": "21330"
  },
  {
    "text": "phone in silence and please welcome our speaker today again Matt is done thank",
    "start": "21330",
    "end": "26369"
  },
  {
    "text": "you so this is securing the system I'm",
    "start": "26369",
    "end": "32880"
  },
  {
    "text": "hope that's what you're here for my name is Matty stone my pronouns are she and her and I am as of two weeks ago",
    "start": "32880",
    "end": "39660"
  },
  {
    "text": "a security researcher on project zero but before that I was a reverse engineer",
    "start": "39660",
    "end": "45210"
  },
  {
    "text": "and led our efforts and reverse engineering and finding malware in the preinstalled and the off Google Play",
    "start": "45210",
    "end": "51960"
  },
  {
    "text": "ecosystems so all of the work in this presentation is coming from my work on the Google Android security team not",
    "start": "51960",
    "end": "59160"
  },
  {
    "text": "project zero so what are we going to talk about we're gonna quickly go",
    "start": "59160",
    "end": "64170"
  },
  {
    "text": "through first an overview of the Android OS ecosystem and sort of what that space",
    "start": "64170",
    "end": "69960"
  },
  {
    "text": "looks like then we're gonna talk about my lessons learned from beginning to reverse engineer pre-installed Android",
    "start": "69960",
    "end": "76590"
  },
  {
    "text": "apps when you're coming from a background of reverse engineering user space applications then we get into some",
    "start": "76590",
    "end": "83460"
  },
  {
    "text": "of the fun stuff of what type of security issues can you find and have we found in the Android OAM build images so",
    "start": "83460",
    "end": "92700"
  },
  {
    "text": "we'll talk about four different case studies there so what's my goal for this talk overall last year our team reviewed",
    "start": "92700",
    "end": "101729"
  },
  {
    "text": "build images from more than a thousand different OEMs and that is a lot of different build images in the Android",
    "start": "101729",
    "end": "108210"
  },
  {
    "text": "ecosystem to be able to vet to be able to help to secure so my hope is that",
    "start": "108210",
    "end": "113369"
  },
  {
    "text": "through this talk I sort of lower the bar of entry to reverse engineering and analyzing pre-installed Android apps so",
    "start": "113369",
    "end": "120149"
  },
  {
    "text": "that we can have more and more security researchers making sure these spaces are safe for all of our users and hopefully",
    "start": "120149",
    "end": "126960"
  },
  {
    "text": "a part of that is I make it interesting show you the complex and fun problems that we look at",
    "start": "126960",
    "end": "132180"
  },
  {
    "text": "and just sort of show that while we often talk about Android as a model sort",
    "start": "132180",
    "end": "137430"
  },
  {
    "text": "of monolithic thing it's it ranges greatly from the diversity of all of",
    "start": "137430",
    "end": "143099"
  },
  {
    "text": "those different OEMs and their capabilities in what sort of mindset they're bringing when they're building devices so why do we care why do we need",
    "start": "143099",
    "end": "153510"
  },
  {
    "text": "more people reverse engineering Android pre-installed apps so by and large each",
    "start": "153510",
    "end": "158879"
  },
  {
    "text": "device comes with about hundred to four hundred different apps pre-installed so",
    "start": "158879",
    "end": "164700"
  },
  {
    "text": "that is a lot of surface area that we need to be ensuring our secure out of",
    "start": "164700",
    "end": "170220"
  },
  {
    "text": "the box and it's harder to remediate these issues once they've launched to users because they build the firmware",
    "start": "170220",
    "end": "177689"
  },
  {
    "text": "image things that are pre-installed are on a read-only file system so in order to remove anything that might have",
    "start": "177689",
    "end": "183659"
  },
  {
    "text": "security issues it generally requires a security update to the device versus in",
    "start": "183659",
    "end": "190319"
  },
  {
    "text": "a user space app the user or an antivirus solution can delete it lastly",
    "start": "190319",
    "end": "195689"
  },
  {
    "text": "malicious actors are moving to infiltrate the supply chain because if you think about it from logic and",
    "start": "195689",
    "end": "201540"
  },
  {
    "text": "return-on-investment there's a lot of reasons why it makes sense for them to instead of trying to",
    "start": "201540",
    "end": "207449"
  },
  {
    "text": "convince thousands of users to install your bad or malicious app you only need to convince one om1 company to pre",
    "start": "207449",
    "end": "215400"
  },
  {
    "text": "install their your application and then you've infected at least a couple thousand users and over the last couple",
    "start": "215400",
    "end": "223260"
  },
  {
    "text": "of years exploiting android has gotten harder so if those malicious actors want those",
    "start": "223260",
    "end": "228840"
  },
  {
    "text": "privileges that they would have previously gained in years past through rooting or exploiting that is much more",
    "start": "228840",
    "end": "235169"
  },
  {
    "text": "difficult so if they can trick and infiltrate the supply chain that's a way for them to get those privileges and",
    "start": "235169",
    "end": "241099"
  },
  {
    "text": "lastly as myself and my team we're moving into this space there's quite a few resources out there of reversing and",
    "start": "241099",
    "end": "248549"
  },
  {
    "text": "analyzing user space apps but we really didn't find the resources for pre-installed so I hope we can all start",
    "start": "248549",
    "end": "255510"
  },
  {
    "text": "adding that to what's out there I do use some acronyms still want to try and set",
    "start": "255510",
    "end": "261239"
  },
  {
    "text": "the stage to bring everyone up to the same level um a OS P is the Android open source",
    "start": "261239",
    "end": "266720"
  },
  {
    "text": "project so that is the code that is completely open source for the Android operating system so when I say that oh",
    "start": "266720",
    "end": "272900"
  },
  {
    "text": "this is in AOSP that's that baseline open source project when a device is",
    "start": "272900",
    "end": "278120"
  },
  {
    "text": "built then Google Samsung all the different OEMs then generally add customizations on top of that OE M is",
    "start": "278120",
    "end": "284900"
  },
  {
    "text": "the company that is delivering the device so again like Samsung Huawei BB mobile all the different OEMs o diems",
    "start": "284900",
    "end": "292460"
  },
  {
    "text": "are the people who build white label devices if for example the long tail Oh Ian's who are selling inexpensive",
    "start": "292460",
    "end": "298820"
  },
  {
    "text": "devices they'll often just put their branding on top of a white label device Google Play protect is the built-in",
    "start": "298820",
    "end": "305870"
  },
  {
    "text": "antivirus solution so my team has the ability that when we find bad apps we",
    "start": "305870",
    "end": "311240"
  },
  {
    "text": "flag those through Google Play protect and that propagates to all Android certified devices if the user has it",
    "start": "311240",
    "end": "317930"
  },
  {
    "text": "enabled and from the Google Play protect perspective PHA is sort of what we call",
    "start": "317930",
    "end": "322940"
  },
  {
    "text": "malware potentially harmful apps yeah so let's get into it so what is the",
    "start": "322940",
    "end": "329540"
  },
  {
    "text": "Android om the pre-installed space look like we can really separate it out into two different categories you have the",
    "start": "329540",
    "end": "336440"
  },
  {
    "text": "certified devices those are devices where the OEM works with Google and licenses all of the Google Apps so the",
    "start": "336440",
    "end": "343070"
  },
  {
    "text": "device comes with Google Play Gmail GMs cor things like that in order to get",
    "start": "343070",
    "end": "348110"
  },
  {
    "text": "that certification they have to go through an approval process which includes a bunch of test Suites",
    "start": "348110",
    "end": "353479"
  },
  {
    "text": "however there's the other category of devices that since AOSP is an open-source operating system those",
    "start": "353479",
    "end": "360410"
  },
  {
    "text": "device manufacturers developers builders they don't need or want the Google Apps and thus are just using the open-source",
    "start": "360410",
    "end": "367940"
  },
  {
    "text": "operating system for what it is so an example of that is like the Amazon fire tablet where you won't see Google apps",
    "start": "367940",
    "end": "374540"
  },
  {
    "text": "on it and they have put all of their customizations into a new operating system so those devices are just Android",
    "start": "374540",
    "end": "380570"
  },
  {
    "text": "compatible so this is all the different test Suites that are currently included",
    "start": "380570",
    "end": "385970"
  },
  {
    "text": "in the test approval process for Android Android certified devices so the Android",
    "start": "385970",
    "end": "393320"
  },
  {
    "text": "sort of tablets or alright not habits like the Amazon fire tablets or devices that just want to be",
    "start": "393320",
    "end": "399150"
  },
  {
    "text": "built on top of it a OSP they only really need to go through the CTS test compatibility test suite and things like",
    "start": "399150",
    "end": "405990"
  },
  {
    "text": "that but are updated yearly with each Android release and the main security",
    "start": "405990",
    "end": "411240"
  },
  {
    "text": "tests that are within CTS is SELinux policy test but if it device wants to be",
    "start": "411240",
    "end": "418230"
  },
  {
    "text": "an android certified device so those are the most of the big name brand Android devices you hear up like Samsung Google",
    "start": "418230",
    "end": "425730"
  },
  {
    "text": "pixel you know all those devices they have to go through the whole the whole test whole set of test Suites and the",
    "start": "425730",
    "end": "434070"
  },
  {
    "text": "main one we're gonna focus on is build test suite because that's where the security review in my team and myself",
    "start": "434070",
    "end": "439830"
  },
  {
    "text": "came into play of trying to find PHA or security issues within these builds",
    "start": "439830",
    "end": "446040"
  },
  {
    "text": "prior to them launching so the goal of built BTS and why it launched is to find",
    "start": "446040",
    "end": "452430"
  },
  {
    "text": "security issues before they launch to users and the main goal was to find anything known as PHA and our",
    "start": "452430",
    "end": "458580"
  },
  {
    "text": "definitions are listed at this website but they are those user harming behaviors such as mobile billing fraud",
    "start": "458580",
    "end": "465630"
  },
  {
    "text": "spyware Trojans backdoors things like that and that continued to expand to a",
    "start": "465630",
    "end": "472620"
  },
  {
    "text": "couple different things and has a roadmap but that's been the main focus and where the a lot of these findings",
    "start": "472620",
    "end": "478830"
  },
  {
    "text": "that I'm talking about in the case studies came from and we're why we were trying to build up our reversing and",
    "start": "478830",
    "end": "484170"
  },
  {
    "text": "analytical capabilities and pre-installed apps while the goal is always to find things before they",
    "start": "484170",
    "end": "490050"
  },
  {
    "text": "launched it users BTS happens right before it launches to the user so it's the last step because the firmware image",
    "start": "490050",
    "end": "496920"
  },
  {
    "text": "we receive has to be the same one that goes out of the box and therefore the",
    "start": "496920",
    "end": "502500"
  },
  {
    "text": "reality is is when you're operating us at a scale of seeing that many different firmware images sometimes I think you",
    "start": "502500",
    "end": "509190"
  },
  {
    "text": "find things after they're already in the wild especially when you consider how many years of Android there's been and",
    "start": "509190",
    "end": "515310"
  },
  {
    "text": "so some things were already existing and in those cases we will immediately implement detections in BTS so that no",
    "start": "515310",
    "end": "523650"
  },
  {
    "text": "new builds will go out and then work with the OEM to issue security patches as well as use Google Play protect to",
    "start": "523650",
    "end": "530280"
  },
  {
    "text": "immediate warning users but let's get into some of the fun stuff in the reverse engineering",
    "start": "530280",
    "end": "535790"
  },
  {
    "text": "so this section has really come from what when my team tried to transfer our",
    "start": "535790",
    "end": "541380"
  },
  {
    "text": "tooling our process our knowledge base some of our assumptions about how things work and how it would transfer ready to",
    "start": "541380",
    "end": "548220"
  },
  {
    "text": "preinstalled were wrong so the goal here is to highlight some of the categories of wrong in some shion's we had that",
    "start": "548220",
    "end": "555089"
  },
  {
    "text": "hopefully will give you the most of return on investment to start your pre",
    "start": "555089",
    "end": "560190"
  },
  {
    "text": "installed analysis so the first one is dynamic analysis as researchers a these",
    "start": "560190",
    "end": "566190"
  },
  {
    "text": "different things like that dynamic analysis plays a big role in our ability to find bad behaviors but when you're",
    "start": "566190",
    "end": "573720"
  },
  {
    "text": "reviewing pre-installed apps if you assume that the output of dynamic analysis is going to alert you if",
    "start": "573720",
    "end": "579750"
  },
  {
    "text": "something bad is going on it's often not the case and there's a lot of different",
    "start": "579750",
    "end": "585240"
  },
  {
    "text": "reasons why dynamic analysis doesn't quite work as you'd expect in pre",
    "start": "585240",
    "end": "590490"
  },
  {
    "text": "installed applications so the first example of this is that there is in the permission model for Android there are",
    "start": "590490",
    "end": "597270"
  },
  {
    "text": "something called signature permissions and privilege permissions so a signature permission is only able to be used by an",
    "start": "597270",
    "end": "606390"
  },
  {
    "text": "app that is signed with the same key as the operating system so if you think",
    "start": "606390",
    "end": "611850"
  },
  {
    "text": "about the OEM is going to be the one that signs the operating system on that",
    "start": "611850",
    "end": "616860"
  },
  {
    "text": "device with their private key then only apps that are also signed with that private key aka should be the OEMs code",
    "start": "616860",
    "end": "624180"
  },
  {
    "text": "can then gain those signature permissions because they are pretty privileged and allow access to sensitive",
    "start": "624180",
    "end": "629839"
  },
  {
    "text": "functionality and devices the other type of sensitive permissions that we'll talk about is privileged those are maybe not",
    "start": "629839",
    "end": "637200"
  },
  {
    "text": "the OEMs up but a trusted party like a carrier or something like that their",
    "start": "637200",
    "end": "642330"
  },
  {
    "text": "apps can be written to the system image on the device or system partition which is the read-only partition in the",
    "start": "642330",
    "end": "649230"
  },
  {
    "text": "private structure II then those apps are able to access privileged permissions so example of some of the signature and",
    "start": "649230",
    "end": "655800"
  },
  {
    "text": "privileged permissions are here so pretty sensitive stuff things that would not make sense for any user",
    "start": "655800",
    "end": "662390"
  },
  {
    "text": "apps to be able to have access to so when you consider how dynamic analysis",
    "start": "662390",
    "end": "667940"
  },
  {
    "text": "pipelines often work especially the automated wants to review app set scale is that they will side load the",
    "start": "667940",
    "end": "674390"
  },
  {
    "text": "application into the dynamic analysis um environment and then try and run it but",
    "start": "674390",
    "end": "679730"
  },
  {
    "text": "in that case if you try to side load one of these pre-loaded apps into that type of environment then it's not going to be",
    "start": "679730",
    "end": "685880"
  },
  {
    "text": "able to access these permissions and thus you're not going to see the behavior that is protected usually by",
    "start": "685880",
    "end": "692570"
  },
  {
    "text": "those permissions and because that's pretty sensitive stuff you probably want to see what it is and understand why",
    "start": "692570",
    "end": "698060"
  },
  {
    "text": "they need those permissions in the first place the next type of issue that can",
    "start": "698060",
    "end": "703790"
  },
  {
    "text": "cause your pre-installed app to not run correctly in dynamic analysis is that the app is running under a shared user",
    "start": "703790",
    "end": "709910"
  },
  {
    "text": "ID so they can declare this in the manifest and it means that as long as",
    "start": "709910",
    "end": "715280"
  },
  {
    "text": "all the apps declaring the same shared user ID are signed with the same key then it basically looks to the process",
    "start": "715280",
    "end": "722060"
  },
  {
    "text": "like a superset of all the code in all the permissions so if you're trying to analyze that app as a one-off then it's",
    "start": "722060",
    "end": "728660"
  },
  {
    "text": "likely not going to run everything or at all another reason they don't run into",
    "start": "728660",
    "end": "734930"
  },
  {
    "text": "dynamic analysis is that a lot of pre-installed apps are headless so some of y'all might have been surprised when",
    "start": "734930",
    "end": "740600"
  },
  {
    "text": "I said that Android devices often come to with a hundred to four hundred pre-installed apps because when you take",
    "start": "740600",
    "end": "746090"
  },
  {
    "text": "it out of the box and you look at it you don't see all those apps and that's because they're headless aka don't have",
    "start": "746090",
    "end": "751100"
  },
  {
    "text": "a user interface but the problem is is that the way a lot of the automated dynamic analysis pipelines work is that",
    "start": "751100",
    "end": "757850"
  },
  {
    "text": "they will automatically launch the launcher activity that is within the app the launcher activity is designated in",
    "start": "757850",
    "end": "764600"
  },
  {
    "text": "an ox manifest because it is the activity that is run when a user clicks on the icon and that's what starts the",
    "start": "764600",
    "end": "771020"
  },
  {
    "text": "app but if the app doesn't have a UI it doesn't have a Lunger activity and so in",
    "start": "771020",
    "end": "776210"
  },
  {
    "text": "order to start or execute code for one of these headless apps you usually have",
    "start": "776210",
    "end": "781280"
  },
  {
    "text": "to do static analysis in order to find what activities and services or receivers have intent filters and that's",
    "start": "781280",
    "end": "788090"
  },
  {
    "text": "how it started so anyways to be able to have it run in dynamic analysis you're going to need to",
    "start": "788090",
    "end": "794360"
  },
  {
    "text": "do static to get it to that point class are not",
    "start": "794360",
    "end": "799730"
  },
  {
    "text": "lastly but this one's pretty obvious when you think about it but when you have a pre-installed app it can be confident and so on a very specific",
    "start": "799730",
    "end": "806089"
  },
  {
    "text": "device and sometimes they're dependent on custom hardware and while the hardware abstraction layer or hell of",
    "start": "806089",
    "end": "812690"
  },
  {
    "text": "Android tries to extract the abstract a lot of this out if you're dynamic analysis environment doesn't have some",
    "start": "812690",
    "end": "819829"
  },
  {
    "text": "of that hardware or they're dependent on other customizations it's just not gonna run the final one which is an",
    "start": "819829",
    "end": "827480"
  },
  {
    "text": "interesting problem is that if you're still dependent for dynamic analysis on side loading versus you know buying that",
    "start": "827480",
    "end": "834380"
  },
  {
    "text": "exact device then you for example can't really side load a Settings app or the",
    "start": "834380",
    "end": "842329"
  },
  {
    "text": "dialer app or the system UI app into a new device and have it run effectively so that's an interesting problem because",
    "start": "842329",
    "end": "849740"
  },
  {
    "text": "yes we have seen security issues in badness in some of those critical apps",
    "start": "849740",
    "end": "855500"
  },
  {
    "text": "that have been modified so how do you address this and it's the favorite",
    "start": "855500",
    "end": "861410"
  },
  {
    "text": "answer of it depends because it's going to depend so much on what your cases for",
    "start": "861410",
    "end": "867170"
  },
  {
    "text": "example our team of trying to review tons of pre-installed apps from every",
    "start": "867170",
    "end": "872300"
  },
  {
    "text": "different Oh am all the different devices is very different from a researcher who's liked for six months I'm going to do a deep",
    "start": "872300",
    "end": "879260"
  },
  {
    "text": "dive into every pre-installed app on this one device so that's where it is a different cases so if you're that",
    "start": "879260",
    "end": "886699"
  },
  {
    "text": "researcher that just wants to do deep dive then you can probably just instrument that one device find that one phone and then work whereas for example",
    "start": "886699",
    "end": "895399"
  },
  {
    "text": "for us we considered what might be the biggest bang bang for the buck in order to get the majority of apps running with",
    "start": "895399",
    "end": "902750"
  },
  {
    "text": "litter smaller changes to the dynamic analysis environment so for example for",
    "start": "902750",
    "end": "908180"
  },
  {
    "text": "the first one that might be signing the dynamic analysis environment with our",
    "start": "908180",
    "end": "913940"
  },
  {
    "text": "key and then re signing each app we want to run another issue is app collusion",
    "start": "913940",
    "end": "921949"
  },
  {
    "text": "so we talked about this a little bit with shared user ID but the main difference is that",
    "start": "921949",
    "end": "927810"
  },
  {
    "text": "while this may happen sometimes in userspace apps it happens quite a bit in pre-installed apps because they know",
    "start": "927810",
    "end": "933959"
  },
  {
    "text": "their environment they can be confident this other app will exist on the device or these binaries or this OS OS",
    "start": "933959",
    "end": "941209"
  },
  {
    "text": "modifications so if you're going to try and analyze that app as a self-sufficient entity it may have",
    "start": "941209",
    "end": "947999"
  },
  {
    "text": "spread its bad behaviors across a different a couple of different components and instead while we might",
    "start": "947999",
    "end": "954509"
  },
  {
    "text": "still choose to analyze one at a time we need to keep our minds open to look for",
    "start": "954509",
    "end": "960209"
  },
  {
    "text": "signals that tell us I need to look out and I need to understand the rest of the",
    "start": "960209",
    "end": "966930"
  },
  {
    "text": "components in the environment this app runs it so an example of this and this is what it looks like in practice for",
    "start": "966930",
    "end": "972660"
  },
  {
    "text": "the shared user ID of two apps is we believe one or both of these apps are",
    "start": "972660",
    "end": "977759"
  },
  {
    "text": "doing what we call SMS fraud meaning that it sends a premium SMS text message without the users consent",
    "start": "977759",
    "end": "984569"
  },
  {
    "text": "thus charging their mobile bill not good but what we see is app number one when we begin to analyze it it declares that",
    "start": "984569",
    "end": "993000"
  },
  {
    "text": "send SMS permission but it doesn't have any code or API calls to actually send a text message app number two on the other",
    "start": "993000",
    "end": "999930"
  },
  {
    "text": "hand doesn't have to send SMS permission but it does have API calls to send text",
    "start": "999930",
    "end": "1006589"
  },
  {
    "text": "message which those API calls require and then you take a look at their manifest and realize that both of them",
    "start": "1006589",
    "end": "1012589"
  },
  {
    "text": "declare the same shared user ID and are signed with the same key so to the device it looks like they're running as",
    "start": "1012589",
    "end": "1018529"
  },
  {
    "text": "a single process with code that has call send text message and they have the",
    "start": "1018529",
    "end": "1023930"
  },
  {
    "text": "permission to send SMS and so together is how they're malicious and each",
    "start": "1023930",
    "end": "1030890"
  },
  {
    "text": "individually though appear to be benign another example of multi app collusion",
    "start": "1030890",
    "end": "1036048"
  },
  {
    "text": "is the use of custom permissions so there's been some research calling out",
    "start": "1036049",
    "end": "1041149"
  },
  {
    "text": "all custom permissions as bad but I disagree because I think they are a way to really allow device manufacturers",
    "start": "1041149",
    "end": "1049309"
  },
  {
    "text": "apps to smaller segment protections to information or functionality however",
    "start": "1049309",
    "end": "1054890"
  },
  {
    "text": "when you see them you need to be aware of whether or not they may be proxying permissions so what I mean by that is we",
    "start": "1054890",
    "end": "1061669"
  },
  {
    "text": "have this app and in the app manifest it's secure it defines a new permission",
    "start": "1061669",
    "end": "1067640"
  },
  {
    "text": "a custom permission and it says that that custom permission is going to be dangerous by the way the way you know",
    "start": "1067640",
    "end": "1073760"
  },
  {
    "text": "it's defining a new permission versus using one is that that tag at the Bert the beginning says permission rather",
    "start": "1073760",
    "end": "1079159"
  },
  {
    "text": "than uses - permission so this is defining one it says the protection",
    "start": "1079159",
    "end": "1084260"
  },
  {
    "text": "levels dangerous which means any other app on the device may request it it's not protected by this or anything like",
    "start": "1084260",
    "end": "1090230"
  },
  {
    "text": "that then we see that the service that this app has is protected by that permission",
    "start": "1090230",
    "end": "1096230"
  },
  {
    "text": "meaning that any application that wants to interact with that from that service",
    "start": "1096230",
    "end": "1101270"
  },
  {
    "text": "will need to request this permission and that's fine that's good the problem",
    "start": "1101270",
    "end": "1107809"
  },
  {
    "text": "comes in is if my service right here is doing a behavior that is protected by an",
    "start": "1107809",
    "end": "1113179"
  },
  {
    "text": "even more sensitive permission then we get into this proxy situation so what",
    "start": "1113179",
    "end": "1118190"
  },
  {
    "text": "this could look like for example is let's say my service was silently downloading and installing apps that",
    "start": "1118190",
    "end": "1124669"
  },
  {
    "text": "behavior is a signature of privileged permission and it's called install packages and it goes through a specific",
    "start": "1124669",
    "end": "1130250"
  },
  {
    "text": "waiver process to be granted that and now instead though they're letting other",
    "start": "1130250",
    "end": "1136909"
  },
  {
    "text": "people access that behavior and they only have to request this permission so",
    "start": "1136909",
    "end": "1142220"
  },
  {
    "text": "they're other apps or components on the device could now get access to that very sensitive behavior usually protected by",
    "start": "1142220",
    "end": "1149659"
  },
  {
    "text": "a signature or privileged permission by just getting this userspace permission",
    "start": "1149659",
    "end": "1155320"
  },
  {
    "text": "apps though don't only collude with other apps sometimes they will also",
    "start": "1155320",
    "end": "1160370"
  },
  {
    "text": "expect and depend on behavior that comes from binary Damons on the device or even",
    "start": "1160370",
    "end": "1165590"
  },
  {
    "text": "operating system modifications so we'll talk about this in case study number one",
    "start": "1165590",
    "end": "1171020"
  },
  {
    "text": "but apps can start Damons better living in system /bin or sometimes they just",
    "start": "1171020",
    "end": "1177409"
  },
  {
    "text": "know they're running on a timer in the background and will interact with them at that point and when on the second",
    "start": "1177409",
    "end": "1184250"
  },
  {
    "text": "bullet when we're talking about the operating system or framework just framework is the Android AP is so part",
    "start": "1184250",
    "end": "1192649"
  },
  {
    "text": "of the operating system and that respect of here are the Android API is in this example here triada which I won't talk",
    "start": "1192649",
    "end": "1200690"
  },
  {
    "text": "about in depth today but there's a lot of information out there and about it is what they did for that backdoor is they",
    "start": "1200690",
    "end": "1207289"
  },
  {
    "text": "modified the Android log API to be overloaded and allowed two arguments so",
    "start": "1207289",
    "end": "1213769"
  },
  {
    "text": "if any app wanted to interact with the backdoor they sent a second argument in log and",
    "start": "1213769",
    "end": "1220369"
  },
  {
    "text": "that's the type of modification we're talking about another thing that we ran",
    "start": "1220369",
    "end": "1226220"
  },
  {
    "text": "into when beginning to reverse engineer pre-installed apps rather than user space apps is that pre-installed apps",
    "start": "1226220",
    "end": "1233090"
  },
  {
    "text": "are supposed to operate in a more privileged context and so we had for years and years and years fine-tuned our",
    "start": "1233090",
    "end": "1240590"
  },
  {
    "text": "detection czar processed our scores email models to identify badness or PHA",
    "start": "1240590",
    "end": "1248059"
  },
  {
    "text": "and user space apps so something like this might be let's say we have our SMS",
    "start": "1248059",
    "end": "1254720"
  },
  {
    "text": "fraud email model and it's looking for things that are sending SMS messages",
    "start": "1254720",
    "end": "1261049"
  },
  {
    "text": "when we began trying to apply all of these scores and detection x' to pre-installed apps we had a huge amount",
    "start": "1261049",
    "end": "1267409"
  },
  {
    "text": "of false positives so many some times that it was really hard to wade through because a lot of these scores and",
    "start": "1267409",
    "end": "1274399"
  },
  {
    "text": "detections were on the lookout for anything that looked too privileged or looking out for apps that pretended to",
    "start": "1274399",
    "end": "1280279"
  },
  {
    "text": "be system applications as a lot of trojans do so my suggestion to you is if",
    "start": "1280279",
    "end": "1285529"
  },
  {
    "text": "you want to begin applying your tools and things like that to pre-installed apps do it in small chunks at a time so",
    "start": "1285529",
    "end": "1293269"
  },
  {
    "text": "you're not overloaded overloaded with false positives and probably begin to",
    "start": "1293269",
    "end": "1298849"
  },
  {
    "text": "think about what does SMS fraud look like in a pre-installed context so that",
    "start": "1298849",
    "end": "1304220"
  },
  {
    "text": "you're not for example flagging the messages apps on devices so I know this",
    "start": "1304220",
    "end": "1310940"
  },
  {
    "text": "is what a lot of people are interested in let's talk about what this really looks like in practice and sort of the",
    "start": "1310940",
    "end": "1316340"
  },
  {
    "text": "variety and range of how different security issues can",
    "start": "1316340",
    "end": "1321930"
  },
  {
    "text": "manifest on the wide variety of devices that make up the Android ecosystem so",
    "start": "1321930",
    "end": "1328230"
  },
  {
    "text": "the first case study we're going to talk about is two different examples of arbitrary remote code execution",
    "start": "1328230",
    "end": "1333620"
  },
  {
    "text": "backdoors so when I say arbitrary remote code execution first what I mean by",
    "start": "1333620",
    "end": "1339900"
  },
  {
    "text": "remote is a little different than in some context is we consider remote if it",
    "start": "1339900",
    "end": "1345870"
  },
  {
    "text": "can be commanded or controlled by any other application on the device and while that might not go with some of the",
    "start": "1345870",
    "end": "1355560"
  },
  {
    "text": "other paradigms the reason why is because it's to be more cautious and",
    "start": "1355560",
    "end": "1361260"
  },
  {
    "text": "user protection because it's not that hard to get someone to install a user space application and if a user space",
    "start": "1361260",
    "end": "1367170"
  },
  {
    "text": "application is on a device and able to command and control or any component that's concerning arbitrary means that",
    "start": "1367170",
    "end": "1375300"
  },
  {
    "text": "it will literally run any command that the commanding entity wants to and just",
    "start": "1375300",
    "end": "1381360"
  },
  {
    "text": "for information some of the common API is to look out for when looking for command execution is if you're in the",
    "start": "1381360",
    "end": "1387810"
  },
  {
    "text": "Java Kotlin realm within apps its runtime exec and process builder are the",
    "start": "1387810",
    "end": "1393570"
  },
  {
    "text": "most common api's while if you're in native code you know you have all the Linux ones but some of the most common",
    "start": "1393570",
    "end": "1399360"
  },
  {
    "text": "we see for pre-installed is system so example number one what was it complex",
    "start": "1399360",
    "end": "1406920"
  },
  {
    "text": "diagnostic software that was left on production builds joy so it had four",
    "start": "1406920",
    "end": "1413130"
  },
  {
    "text": "different components and that's why I say it's complex it had a pre-installed application to different types of native",
    "start": "1413130",
    "end": "1419190"
  },
  {
    "text": "Damons running on the device a modified selinux policy to allow the command execution to be more privileged",
    "start": "1419190",
    "end": "1426030"
  },
  {
    "text": "than is usually possible as well as a custom kernel of character device to",
    "start": "1426030",
    "end": "1431580"
  },
  {
    "text": "enable it so this is what the flow chart looked like we had our pre-installed application the app is the one that",
    "start": "1431580",
    "end": "1439260"
  },
  {
    "text": "communicated with whatever remote entity through a socket it would also send",
    "start": "1439260",
    "end": "1444330"
  },
  {
    "text": "information off the device based on some of the commands it executed what was returned via a hard-coded email address",
    "start": "1444330",
    "end": "1452210"
  },
  {
    "text": "so the this is the code from the pre-installed application at the top we see it connecting to a socket then it's",
    "start": "1452210",
    "end": "1460279"
  },
  {
    "text": "basically sort of a handshake saying the remote client needs to know I believe it seven times to hit enter as the app",
    "start": "1460279",
    "end": "1466100"
  },
  {
    "text": "sends different device information and then at the bottom and finally after",
    "start": "1466100",
    "end": "1471320"
  },
  {
    "text": "seven hitting enter seven times the remote entity can send a string it's base64 decoded and then sent to this",
    "start": "1471320",
    "end": "1478279"
  },
  {
    "text": "proc DM string method props iam string then just directly writes that string",
    "start": "1478279",
    "end": "1484820"
  },
  {
    "text": "with no sort of processing into a text file that lives in the apps cache directory then we have the our first",
    "start": "1484820",
    "end": "1492830"
  },
  {
    "text": "daemon and this is where the modified selinux policy came into play then this",
    "start": "1492830",
    "end": "1497840"
  },
  {
    "text": "daemon goes into the apps directory and reads that txt file so what we see is at",
    "start": "1497840",
    "end": "1503749"
  },
  {
    "text": "the top is the actual code in the native daemon and at the bottom is the bash command that it actually generated so",
    "start": "1503749",
    "end": "1511340"
  },
  {
    "text": "what they're saying is once this text file exists then cat its contents directly into this kernel character",
    "start": "1511340",
    "end": "1517940"
  },
  {
    "text": "device then remove the file so that's what I meant when I said there can be collusion of that the app note knew that",
    "start": "1517940",
    "end": "1524869"
  },
  {
    "text": "this daemon would be running in the background to gather the contents that were received from the socket then we",
    "start": "1524869",
    "end": "1530990"
  },
  {
    "text": "have daemon number two daemon number two's job is to process the commands receive from the socket so it's",
    "start": "1530990",
    "end": "1537529"
  },
  {
    "text": "constantly monitoring the kernel character device to see when new information is written there and",
    "start": "1537529",
    "end": "1542840"
  },
  {
    "text": "whenever information has been written there it processed the information what's most interesting to us was that",
    "start": "1542840",
    "end": "1549259"
  },
  {
    "text": "if the string received from the socket was encapsulated by two tags exx SH in",
    "start": "1549259",
    "end": "1557419"
  },
  {
    "text": "the closing exs site it immediately passed what it was ever in between two",
    "start": "1557419",
    "end": "1562610"
  },
  {
    "text": "system so that's really not good this is",
    "start": "1562610",
    "end": "1567799"
  },
  {
    "text": "what it looks like in Ida at the top we see it looking for substring between",
    "start": "1567799",
    "end": "1572869"
  },
  {
    "text": "those two tags and then it just passes directly to the system assist call so",
    "start": "1572869",
    "end": "1580460"
  },
  {
    "text": "what do you do when you find something like this we found this the very first day the",
    "start": "1580460",
    "end": "1585720"
  },
  {
    "text": "Matt om began submitting to BTS but because BTS was a newer thing it had",
    "start": "1585720",
    "end": "1593040"
  },
  {
    "text": "already gone out in some devices in the wild so it did end up affecting 223",
    "start": "1593040",
    "end": "1598290"
  },
  {
    "text": "different builds fingerprints the bills fingerprint is basically the ID for an exact firmware image across 16 different",
    "start": "1598290",
    "end": "1606090"
  },
  {
    "text": "SKUs with about 6 million affected users but what sort of did give us hope is",
    "start": "1606090",
    "end": "1611130"
  },
  {
    "text": "that 70% of those affected users did have an OTA update available within two",
    "start": "1611130",
    "end": "1616980"
  },
  {
    "text": "weeks and a hundred percent had one available within one month and if a user",
    "start": "1616980",
    "end": "1622980"
  },
  {
    "text": "had Google Play protect enabled on their device while GPP can't remove the app",
    "start": "1622980",
    "end": "1629370"
  },
  {
    "text": "due to it existing on a read-only file system it was able to disable the application now we have another example",
    "start": "1629370",
    "end": "1638160"
  },
  {
    "text": "of arbitrary remote code execution and this one looks very very different than the first one because it was",
    "start": "1638160",
    "end": "1645120"
  },
  {
    "text": "self-contained wholly within a single pre-installed application and the purpose of it was to be a diagnostic",
    "start": "1645120",
    "end": "1652380"
  },
  {
    "text": "software used for remotely managing a large fleet of devices so this was not actually the user the normal user",
    "start": "1652380",
    "end": "1658890"
  },
  {
    "text": "Android handheld like a mobile phone for users it was used in sort of enterprise",
    "start": "1658890",
    "end": "1664680"
  },
  {
    "text": "factory industrial control system environments and that's why as soon as",
    "start": "1664680",
    "end": "1670560"
  },
  {
    "text": "we reported it to the OEM they filed for a CBE as well as then there was an ICS",
    "start": "1670560",
    "end": "1676020"
  },
  {
    "text": "advisory from u.s. cert that went out so how did this manifest and it was",
    "start": "1676020",
    "end": "1681810"
  },
  {
    "text": "actually I didn't mean to do that but it was actually a lot of bug was in the manifest so the first thing we see here",
    "start": "1681810",
    "end": "1687420"
  },
  {
    "text": "is that it is running a shared user ID system shared user ID system is the most",
    "start": "1687420",
    "end": "1694250"
  },
  {
    "text": "privileged process on an Android device besides root so if you see something",
    "start": "1694250",
    "end": "1699270"
  },
  {
    "text": "running a system nominally it has access to every single permission on the device",
    "start": "1699270",
    "end": "1705240"
  },
  {
    "text": "since remember shared user IDs mean it is the superset of all the permissions",
    "start": "1705240",
    "end": "1710940"
  },
  {
    "text": "of all the code that are all superset of the permissions the next issue came is",
    "start": "1710940",
    "end": "1717180"
  },
  {
    "text": "that they have service and in the manifest they set this service to being exported equals",
    "start": "1717180",
    "end": "1722830"
  },
  {
    "text": "true and what that means is when a service is exported any other component",
    "start": "1722830",
    "end": "1728529"
  },
  {
    "text": "on the device is able to start it bind to it stop it etc any sort of those",
    "start": "1728529",
    "end": "1733570"
  },
  {
    "text": "interactions so if we take a look at what that service looks like the key is",
    "start": "1733570",
    "end": "1739570"
  },
  {
    "text": "that they have set a binder in Android a binder is one of the IPC mechanisms",
    "start": "1739570",
    "end": "1746770"
  },
  {
    "text": "inter-process communications and it's kind of like a server client paradigm type of thing so this means that any",
    "start": "1746770",
    "end": "1754510"
  },
  {
    "text": "component on the device and it can call on the bind and receive back this binder object the binder was this system",
    "start": "1754510",
    "end": "1763480"
  },
  {
    "text": "operation service dollar sign three class which it define defines a whole",
    "start": "1763480",
    "end": "1769419"
  },
  {
    "text": "bunch of methods that now the client process which has requested that binder object they can directly call and it had",
    "start": "1769419",
    "end": "1777370"
  },
  {
    "text": "a lot of methods that were defined to be able to be directly called but of course Exe commands was very concerning because",
    "start": "1777370",
    "end": "1785140"
  },
  {
    "text": "it's running as this privileged processes system and now client aka any",
    "start": "1785140",
    "end": "1790899"
  },
  {
    "text": "other component on the device is able to call exe command whatever command I want",
    "start": "1790899",
    "end": "1796809"
  },
  {
    "text": "it to run and it is directly passed to runtime exec but this proposed sort of",
    "start": "1796809",
    "end": "1804159"
  },
  {
    "text": "an interesting detection problem to me that I just thought was interesting and fun the fix for the OEM to this is to",
    "start": "1804159",
    "end": "1812559"
  },
  {
    "text": "add a permission protecting the service so that only other of their code is able",
    "start": "1812559",
    "end": "1818799"
  },
  {
    "text": "to call this and that means this fix in the fixed version and in the backdoored",
    "start": "1818799",
    "end": "1825190"
  },
  {
    "text": "version all of the executable code is exactly the same which we were always",
    "start": "1825190",
    "end": "1831789"
  },
  {
    "text": "trying to create detection to detect the bad behaviors the actual bad execution",
    "start": "1831789",
    "end": "1837820"
  },
  {
    "text": "what's the harm that's being done rather than static signals so this kind of just",
    "start": "1837820",
    "end": "1843190"
  },
  {
    "text": "threw all of us for a loop of you can have with security issues in an app that is",
    "start": "1843190",
    "end": "1850650"
  },
  {
    "text": "benign and they have the exact same executable code so just an interesting Seidler so that's two examples of remote",
    "start": "1850650",
    "end": "1858810"
  },
  {
    "text": "code execution then we get into a different type of issue the in this",
    "start": "1858810",
    "end": "1863970"
  },
  {
    "text": "issue the OEM modified the framework the OS that includes the Android API so in",
    "start": "1863970",
    "end": "1870300"
  },
  {
    "text": "order to do you are out logging so this was actually discovered by Lucas shivir",
    "start": "1870300",
    "end": "1875610"
  },
  {
    "text": "ski aka mal joyed on twitter and he's around here somewhere and what they did",
    "start": "1875610",
    "end": "1881730"
  },
  {
    "text": "is they modified OS an application in order to get access to every URL that",
    "start": "1881730",
    "end": "1887790"
  },
  {
    "text": "was visited through webview and thus that's spyware so what this looked like",
    "start": "1887790",
    "end": "1894840"
  },
  {
    "text": "didn't practice is they modified the framework classes in order for each of those to send an intent every single",
    "start": "1894840",
    "end": "1902040"
  },
  {
    "text": "single time those framework api's were called with custom data and then they",
    "start": "1902040",
    "end": "1908220"
  },
  {
    "text": "had their own logging app that registered a receiver for that intent so that they would receive it and be able",
    "start": "1908220",
    "end": "1913920"
  },
  {
    "text": "to read all that sensitive data that they wanted to log and then they uploaded it sometimes so the other",
    "start": "1913920",
    "end": "1923700"
  },
  {
    "text": "problem if this wasn't enough is that they were sending these an intense and an unprotected way which meant that",
    "start": "1923700",
    "end": "1929730"
  },
  {
    "text": "while they only intended for their one app logging apps to be able to grab the",
    "start": "1929730",
    "end": "1935100"
  },
  {
    "text": "sensitive data in reality any application on the device included user side loaded apps malware anything like",
    "start": "1935100",
    "end": "1941940"
  },
  {
    "text": "that could get grabbed this if they knew what to look for so what did those framework",
    "start": "1941940",
    "end": "1948390"
  },
  {
    "text": "modifications look like one example is that they modified webview as I said so",
    "start": "1948390",
    "end": "1955260"
  },
  {
    "text": "every single time webview went to loaded URL they then sent an intent that",
    "start": "1955260",
    "end": "1960690"
  },
  {
    "text": "contained two extras one was the URL they were intending to load and the",
    "start": "1960690",
    "end": "1965760"
  },
  {
    "text": "other was the applications package name that was intending to load it they also",
    "start": "1965760",
    "end": "1972150"
  },
  {
    "text": "did this for the activity subclass which is run just about all the time so again",
    "start": "1972150",
    "end": "1977250"
  },
  {
    "text": "they were trying to track applications were switching who was in the foreground who was in the background",
    "start": "1977250",
    "end": "1983960"
  },
  {
    "text": "and so the issues and why they had to go down to the framework level was that a",
    "start": "1983960",
    "end": "1989520"
  },
  {
    "text": "single up logging app based on the Android sandbox should not have that type of app sensitive data so here's a",
    "start": "1989520",
    "end": "1998160"
  },
  {
    "text": "sidebar if you have been reverse engineering Android working in userspace apps then you often haven't gotten into",
    "start": "1998160",
    "end": "2004880"
  },
  {
    "text": "framework code and so framework code can be a little bit intimidating to begin reverse engineering",
    "start": "2004880",
    "end": "2010850"
  },
  {
    "text": "so hopefully this can help share sofirst framework code is generally living in the system slash framework directory on",
    "start": "2010850",
    "end": "2017360"
  },
  {
    "text": "the device and it is probably one of the directories that changes the most with",
    "start": "2017360",
    "end": "2022520"
  },
  {
    "text": "each new release of Android so between you know in what letter comes after in o",
    "start": "2022520",
    "end": "2027830"
  },
  {
    "text": "P cute things like that and the file formats change a lot too so these are all the different types of",
    "start": "2027830",
    "end": "2033799"
  },
  {
    "text": "file formats you might find thankfully there are a lot of open source tools out there for recreating o Dex V Dex things",
    "start": "2033799",
    "end": "2042080"
  },
  {
    "text": "like that back into Dex files Dex bytecode files that then you can begin to reverse engineer so one of my big",
    "start": "2042080",
    "end": "2049128"
  },
  {
    "text": "suggestions for framework while for everything else that generally is run as",
    "start": "2049129",
    "end": "2054320"
  },
  {
    "text": "Dex bytecode on the device like apps were able to decompile back up to Java I have found that it's often much easier",
    "start": "2054320",
    "end": "2060800"
  },
  {
    "text": "to reverse engineer and analyze framework code within small e so if you're new to reversing Android small E",
    "start": "2060800",
    "end": "2067490"
  },
  {
    "text": "is sort of the equivalent to assembly in the Dex bytecode world so if you have",
    "start": "2067490",
    "end": "2072830"
  },
  {
    "text": "Dex bytecode and machine code then small E is the human readable version of Dex bytecode without being decompile Java",
    "start": "2072830",
    "end": "2080980"
  },
  {
    "text": "people don't like it also when I usually say this but the best way I have always found to figure out which of the",
    "start": "2080980",
    "end": "2087679"
  },
  {
    "text": "hundreds of framework files to begin reverse engineering is for a pin string search people usually want a more fancy",
    "start": "2087679",
    "end": "2094570"
  },
  {
    "text": "answer but in reality that's what I found and if you're looking to find ways",
    "start": "2094570",
    "end": "2099830"
  },
  {
    "text": "to contribute to the community a tool that I think would be really really valuable for all of us to audit these",
    "start": "2099830",
    "end": "2105980"
  },
  {
    "text": "many different devices and frameworks is if we built a full tool to be able to do",
    "start": "2105980",
    "end": "2112589"
  },
  {
    "text": "framework files on a device with the vanilla or clean AOSP just to know what",
    "start": "2112589",
    "end": "2119579"
  },
  {
    "text": "type of customizations have been built on top of this have they added advertising SDKs into the operating",
    "start": "2119579",
    "end": "2126930"
  },
  {
    "text": "system or made these types of changes that enable really scary you know spyware is stuff yeah so the next case",
    "start": "2126930",
    "end": "2136109"
  },
  {
    "text": "study we have is security settings miss configuration so what happened is there",
    "start": "2136109",
    "end": "2144180"
  },
  {
    "text": "were a lot of devices disabling Google Play protect which Google Play protects",
    "start": "2144180",
    "end": "2149910"
  },
  {
    "text": "has also considered that behavior whenever it happens without user consent as privileged escalate escalation for",
    "start": "2149910",
    "end": "2156390"
  },
  {
    "text": "many years and so in order to disable or enable Google Play protect this happens",
    "start": "2156390",
    "end": "2162900"
  },
  {
    "text": "through two settings that were hidden but still accessible to om code and so",
    "start": "2162900",
    "end": "2171950"
  },
  {
    "text": "for many years there have also been put into place what we thought were a lot of",
    "start": "2171950",
    "end": "2177299"
  },
  {
    "text": "detections to find this behavior and it was for looking for apps that were",
    "start": "2177299",
    "end": "2182339"
  },
  {
    "text": "modifying GPP through this type of command line command settings put pack",
    "start": "2182339",
    "end": "2188519"
  },
  {
    "text": "of the verifier enable 0 but that's how user space applications try to change",
    "start": "2188519",
    "end": "2194190"
  },
  {
    "text": "that setting privileged apps are able to access the privileged settings api's and",
    "start": "2194190",
    "end": "2201569"
  },
  {
    "text": "thus they don't have to do it through the command line method they're able to request the write secure settings",
    "start": "2201569",
    "end": "2209059"
  },
  {
    "text": "permission and then use the official API in order to change that setting and that",
    "start": "2209059",
    "end": "2215880"
  },
  {
    "text": "makes sense to have access because users need the ability to flip a switch and",
    "start": "2215880",
    "end": "2220890"
  },
  {
    "text": "turn things off err on so of course the pre-installed apps would access it but while we didn't realize that was that",
    "start": "2220890",
    "end": "2227839"
  },
  {
    "text": "just about everyone was doing this and disabling it silently and why were they",
    "start": "2227839",
    "end": "2235950"
  },
  {
    "text": "doing this and it was because back many many years ago I believe it was either",
    "start": "2235950",
    "end": "2241710"
  },
  {
    "text": "2013 or 2014 when at the time it was called verify apps but beginning to launched there was a",
    "start": "2241710",
    "end": "2248490"
  },
  {
    "text": "consent pop-up if you did not go through the full setup wizard process in order",
    "start": "2248490",
    "end": "2254880"
  },
  {
    "text": "to ask you on your first absent install do you want to enable the package verifier in this prevented people from",
    "start": "2254880",
    "end": "2262760"
  },
  {
    "text": "automatically provisioning a fleet of devices because you needed a human to go through and click through each of them",
    "start": "2262760",
    "end": "2267900"
  },
  {
    "text": "so some OEMs as well as within AOSP",
    "start": "2267900",
    "end": "2273000"
  },
  {
    "text": "and GMS korg google had done it as well it would temporarily disable it and then",
    "start": "2273000",
    "end": "2278880"
  },
  {
    "text": "attempt to disable it and then attempt to re-enable it after they got through the setup wizard process but what this",
    "start": "2278880",
    "end": "2287400"
  },
  {
    "text": "led to is what made since back in the early days many years ago became a at",
    "start": "2287400",
    "end": "2295950"
  },
  {
    "text": "scale privilege escalation issue because while most were trying to re-enable the",
    "start": "2295950",
    "end": "2301020"
  },
  {
    "text": "setting it wasn't all the time and they're awesome turned out to be a race condition that sometimes it couldn't be",
    "start": "2301020",
    "end": "2307530"
  },
  {
    "text": "Rhian abled so this was a huge undertaking in operation to get fixed",
    "start": "2307530",
    "end": "2314280"
  },
  {
    "text": "and so the first thing was this was done in AOSP and so this CBE addresses",
    "start": "2314280",
    "end": "2321230"
  },
  {
    "text": "addressed it to get it fixed and that went out in the Android Security Bulletin in January 2019 we also fixed",
    "start": "2321230",
    "end": "2329130"
  },
  {
    "text": "the code in GMS core to fix this and then did a lot of communications with",
    "start": "2329130",
    "end": "2334710"
  },
  {
    "text": "every single om to make sure that behavior was removed from new builds and",
    "start": "2334710",
    "end": "2341130"
  },
  {
    "text": "i think it's just important to remember for all of us as security researchers of we're often adopting legacy code and",
    "start": "2341130",
    "end": "2348570"
  },
  {
    "text": "it's funny to say legacy when Android is only 10 years old but things change fast in our industry and what we know about",
    "start": "2348570",
    "end": "2354720"
  },
  {
    "text": "security so I think it's important that we all remember with our new tools with our new knowledge to go back in time and",
    "start": "2354720",
    "end": "2361710"
  },
  {
    "text": "look at what might have changed in the years since so the last case study is",
    "start": "2361710",
    "end": "2368880"
  },
  {
    "text": "very different than the other three because this is pure malware third party",
    "start": "2368880",
    "end": "2374880"
  },
  {
    "text": "botnet aka Shinhwa that was included and quite a few different devices at its",
    "start": "2374880",
    "end": "2381089"
  },
  {
    "text": "peak Shinhwa had hit 20 million infected devices and that was through both pre-installed and user space",
    "start": "2381089",
    "end": "2387839"
  },
  {
    "text": "applications so what Shinhwa Shinhwa is a botnet whose payloads include premium SMS fraud",
    "start": "2387839",
    "end": "2393859"
  },
  {
    "text": "click fraud other types of the ad fraud app installation fraud and arbitrary",
    "start": "2393859",
    "end": "2399750"
  },
  {
    "text": "modulo loading in that so that they can you know evolve and develop new capabilities of their payloads and thus",
    "start": "2399750",
    "end": "2406309"
  },
  {
    "text": "GPP flies it as a backdoor earlier this year I did a detailed talk on Shinhwa",
    "start": "2406309",
    "end": "2412490"
  },
  {
    "text": "because we did consider it the most impactful botnet of all of 2018 and largely one of the reasons why it was so",
    "start": "2412490",
    "end": "2420059"
  },
  {
    "text": "impactful is the way it infiltrated the supply chain and thus became pre-installed so this is Shinhwa you",
    "start": "2420059",
    "end": "2426720"
  },
  {
    "text": "know super simple botnet right this beautiful chart was created by Remi a deburr and helper on Twitter and so it's",
    "start": "2426720",
    "end": "2433740"
  },
  {
    "text": "a super complex capability but what we're going to focus on in this talk is",
    "start": "2433740",
    "end": "2439619"
  },
  {
    "text": "its supply chain distribution methods so OMS and OU diems were tricked into including Shinhwa Apps or in some cases",
    "start": "2439619",
    "end": "2447690"
  },
  {
    "text": "just a SDK of stage one so is that going",
    "start": "2447690",
    "end": "2453289"
  },
  {
    "text": "ok I can't go by but I'm just an SDK of",
    "start": "2453289",
    "end": "2458390"
  },
  {
    "text": "stage one and they were generally told it's a mobile payment solution it's an",
    "start": "2458390",
    "end": "2463559"
  },
  {
    "text": "advertising SDK and I think this is one of the important factors of remembering the diversity of OMS that are in the",
    "start": "2463559",
    "end": "2470339"
  },
  {
    "text": "Android space so there are some longtail om set cell you know $30 devices $40",
    "start": "2470339",
    "end": "2476309"
  },
  {
    "text": "devices and have almost a negative margin so a a free solution or an",
    "start": "2476309",
    "end": "2482670"
  },
  {
    "text": "advertising SDK is how they do make up some of their money but then the threat",
    "start": "2482670",
    "end": "2489660"
  },
  {
    "text": "actors know that too and try to pray on that need and so yeah so they generally",
    "start": "2489660",
    "end": "2497190"
  },
  {
    "text": "had pre-installed two different methods of distribution one was the stage one",
    "start": "2497190",
    "end": "2503220"
  },
  {
    "text": "Shinhwa apk was statically pre-installed on the device it was awesome often named",
    "start": "2503220",
    "end": "2508319"
  },
  {
    "text": "like sales tracker or something like that otherwise they pre-installed an",
    "start": "2508319",
    "end": "2513910"
  },
  {
    "text": "application that would then dynamically download and execute the Shema SDK so",
    "start": "2513910",
    "end": "2519490"
  },
  {
    "text": "there was sort of two distribution methods in the preinstalled supply chain ecosystem they're so eager fonts eager",
    "start": "2519490",
    "end": "2529480"
  },
  {
    "text": "fonts is a fonts application that was included by a sock vendor in their",
    "start": "2529480",
    "end": "2536020"
  },
  {
    "text": "platform from a third-party developer so the reason why they chose to include it",
    "start": "2536020",
    "end": "2541030"
  },
  {
    "text": "was this one set application was wanted to buy a lot of people it allowed all",
    "start": "2541030",
    "end": "2546160"
  },
  {
    "text": "the OEMs who used that sock platform to have much better internationalization with a lot of different fonts for you",
    "start": "2546160",
    "end": "2552910"
  },
  {
    "text": "know all the different languages they were trying to support and so turns out",
    "start": "2552910",
    "end": "2558940"
  },
  {
    "text": "this fonts application then included an advertising SDK and that advertising SDK",
    "start": "2558940",
    "end": "2564810"
  },
  {
    "text": "didn't actually show ads it it did DC Lak dynamic code loading to download",
    "start": "2564810",
    "end": "2571960"
  },
  {
    "text": "from a third-party server plugins that then executed in the app context and the",
    "start": "2571960",
    "end": "2578440"
  },
  {
    "text": "plugins from eager fonts where I've known malicious known malicious Trojans",
    "start": "2578440",
    "end": "2583810"
  },
  {
    "text": "the most common one was Shinhwa and the next suit was snow fox which is a Trojan",
    "start": "2583810",
    "end": "2589750"
  },
  {
    "text": "in click-fraud and others but because these actors had gone so far up the",
    "start": "2589750",
    "end": "2595870"
  },
  {
    "text": "supply chain to infiltrate a sock not even a single OAM it ended up affecting",
    "start": "2595870",
    "end": "2601330"
  },
  {
    "text": "all of the different OEMs who used the prelude loads from that sock aka two hundred and fifty different OEMs",
    "start": "2601330",
    "end": "2608250"
  },
  {
    "text": "across 1,000 different SKUs of devices so thankfully as soon as we identified",
    "start": "2608250",
    "end": "2615700"
  },
  {
    "text": "it contacted them the sock platform immediately also began contacting all of",
    "start": "2615700",
    "end": "2621820"
  },
  {
    "text": "their customers they pulled the app and they agreed to no longer include any",
    "start": "2621820",
    "end": "2627400"
  },
  {
    "text": "third-party preloads into the their platform due to their risks so trying to",
    "start": "2627400",
    "end": "2633430"
  },
  {
    "text": "learn and grow from each of the different issues so this is what it looked like",
    "start": "2633430",
    "end": "2639640"
  },
  {
    "text": "Iger fonts sent an HTTP request trying to mana see it's an upgrade map",
    "start": "2639640",
    "end": "2647120"
  },
  {
    "text": "and they received this type of response the response included the URLs names and",
    "start": "2647120",
    "end": "2654440"
  },
  {
    "text": "the actions to complete for each of the different types of plugins that they were supposed to download and then the",
    "start": "2654440",
    "end": "2660530"
  },
  {
    "text": "SDK used Dex class loader to dynamically load the downloaded plug-in within that",
    "start": "2660530",
    "end": "2666500"
  },
  {
    "text": "pre-installed apps process so what's have a remediation do you do when 250",
    "start": "2666500",
    "end": "2673880"
  },
  {
    "text": "different OEMs are affected so we did have a OEM remediation process which",
    "start": "2673880",
    "end": "2679850"
  },
  {
    "text": "first is alert the OEM require an app acknowledge that yes this was on my",
    "start": "2679850",
    "end": "2684980"
  },
  {
    "text": "device to immediately require OTS to be developed and distributed to users and",
    "start": "2684980",
    "end": "2690770"
  },
  {
    "text": "next which I think has been one of the most powerful is required post-mortem to",
    "start": "2690770",
    "end": "2696680"
  },
  {
    "text": "determine how did this issue even end up on your device and I think that's valuable because that's how we know how",
    "start": "2696680",
    "end": "2702020"
  },
  {
    "text": "these aliens were being tricked what they were being advertised as what they were including and just better",
    "start": "2702020",
    "end": "2707720"
  },
  {
    "text": "understand standing the threat landscape and then they also then have to create a",
    "start": "2707720",
    "end": "2712910"
  },
  {
    "text": "plan for how do you actually prevent this from happening in the future so for a lot of them it's for example don't",
    "start": "2712910",
    "end": "2718430"
  },
  {
    "text": "include third-party preloads different types of additional auditing things like that so by the numbers the these numbers",
    "start": "2718430",
    "end": "2730310"
  },
  {
    "text": "differ slightly from what I presented at Kaspersky cuz Kaspersky was all devices infected where this is the pre-installed",
    "start": "2730310",
    "end": "2738070"
  },
  {
    "text": "effected devices so in March 2018 it was 20 million devices as a whole were",
    "start": "2738070",
    "end": "2744500"
  },
  {
    "text": "infected with an active version of chinois and of those 27.4 were",
    "start": "2744500",
    "end": "2749540"
  },
  {
    "text": "pre-installed as of July at least it is now continuing to decline and block and",
    "start": "2749540",
    "end": "2756320"
  },
  {
    "text": "it's continuing to decline and below 700k and we will keep working and",
    "start": "2756320",
    "end": "2762980"
  },
  {
    "text": "tracking it until it is hopefully zero but part of the problem and things we",
    "start": "2762980",
    "end": "2769040"
  },
  {
    "text": "learned is that around the world taking updates in OTAs is not as common as it",
    "start": "2769040",
    "end": "2775300"
  },
  {
    "text": "necessarily is in the US or Western Europe so how and that's what sort of lights the fire of how can you find all",
    "start": "2775300",
    "end": "2782950"
  },
  {
    "text": "these issues before they ever go out and also really understanding the diversity",
    "start": "2782950",
    "end": "2788410"
  },
  {
    "text": "of the space so in conclusion first I hope I've",
    "start": "2788410",
    "end": "2794350"
  },
  {
    "text": "picked your interest a little bit and trying to help reverse secure analyze the Android pre-installed space and",
    "start": "2794350",
    "end": "2801970"
  },
  {
    "text": "these apps it's a lot of fun there's a lot of different problems and complexities to find and solve and I",
    "start": "2801970",
    "end": "2808420"
  },
  {
    "text": "hope that I've also lowered the bar and understanding that there's a few key things to think about and to challenge",
    "start": "2808420",
    "end": "2814540"
  },
  {
    "text": "your own assumptions of what does security badness look like pre-installed",
    "start": "2814540",
    "end": "2820360"
  },
  {
    "text": "versus user space so hopefully you can get involved more efficiently and not make the same mistakes I made and lastly",
    "start": "2820360",
    "end": "2828760"
  },
  {
    "text": "the Android ecosystem is pretty vast with a diversity different OEMs and sort",
    "start": "2828760",
    "end": "2835990"
  },
  {
    "text": "of capabilities so you have some OEMs who have you know secure development",
    "start": "2835990",
    "end": "2841810"
  },
  {
    "text": "life cycles beginning just that design with lots of security engineers on process and then you have some OEMs on",
    "start": "2841810",
    "end": "2848410"
  },
  {
    "text": "the longtail that might not have a single security engineer and so the threats for each of those are very",
    "start": "2848410",
    "end": "2855070"
  },
  {
    "text": "different and what are you looking for and how are you using your time effectively to try and reverse and",
    "start": "2855070",
    "end": "2860170"
  },
  {
    "text": "secure these devices and with that thank you and are there any questions",
    "start": "2860170",
    "end": "2865500"
  },
  {
    "text": "[Applause]",
    "start": "2865500",
    "end": "2870619"
  }
]