[
  {
    "text": "let's begin we have investigating",
    "start": "30",
    "end": "1770"
  },
  {
    "text": "PowerShell attacks with Ryan Kazanjian",
    "start": "1770",
    "end": "5160"
  },
  {
    "text": "and Matt Hastings good afternoon all",
    "start": "5160",
    "end": "19410"
  },
  {
    "text": "thank you so much for coming to our talk",
    "start": "19410",
    "end": "21480"
  },
  {
    "text": "this afternoon",
    "start": "21480",
    "end": "22289"
  },
  {
    "text": "I'm Ryan goose Antion a technical",
    "start": "22289",
    "end": "24269"
  },
  {
    "text": "director with mandiant I'm here with",
    "start": "24269",
    "end": "25920"
  },
  {
    "text": "Matt Hastings one of our consultants and",
    "start": "25920",
    "end": "27660"
  },
  {
    "text": "investigative leads and yeah welcome to",
    "start": "27660",
    "end": "30240"
  },
  {
    "text": "the talk so just to make sure that we're",
    "start": "30240",
    "end": "32308"
  },
  {
    "text": "all in the right room",
    "start": "32309",
    "end": "33210"
  },
  {
    "text": "this is investigating PowerShell attacks",
    "start": "33210",
    "end": "35070"
  },
  {
    "text": "this is not investigating these blue",
    "start": "35070",
    "end": "38460"
  },
  {
    "text": "shell attacks so just so that we're",
    "start": "38460",
    "end": "40680"
  },
  {
    "text": "clear",
    "start": "40680",
    "end": "40950"
  },
  {
    "text": "different blue shell same same",
    "start": "40950",
    "end": "42960"
  },
  {
    "text": "deleterious effects so what kind of",
    "start": "42960",
    "end": "47100"
  },
  {
    "text": "started on this so we've actually seen",
    "start": "47100",
    "end": "48960"
  },
  {
    "text": "quite an uptick in the use of PowerShell",
    "start": "48960",
    "end": "50940"
  },
  {
    "text": "during targeted attacks throughout the",
    "start": "50940",
    "end": "53370"
  },
  {
    "text": "past two years I'd say at mandiant Matt",
    "start": "53370",
    "end": "56190"
  },
  {
    "text": "and I actually worked the case this year",
    "start": "56190",
    "end": "57840"
  },
  {
    "text": "between January and April in which the",
    "start": "57840",
    "end": "60270"
  },
  {
    "text": "victims VPN had been compromised by an",
    "start": "60270",
    "end": "62039"
  },
  {
    "text": "attacker for about three to four years",
    "start": "62039",
    "end": "64110"
  },
  {
    "text": "and the attacker was almost exclusively",
    "start": "64110",
    "end": "65729"
  },
  {
    "text": "conducting command and control from",
    "start": "65729",
    "end": "68040"
  },
  {
    "text": "their own system over the VPN to the",
    "start": "68040",
    "end": "70770"
  },
  {
    "text": "target hosts through scheduled tasks a",
    "start": "70770",
    "end": "72960"
  },
  {
    "text": "couple locally copied PowerShell scripts",
    "start": "72960",
    "end": "75780"
  },
  {
    "text": "and PowerShell remoting which is",
    "start": "75780",
    "end": "78060"
  },
  {
    "text": "basically PowerShell over the network",
    "start": "78060",
    "end": "79470"
  },
  {
    "text": "and what we came to see is that when an",
    "start": "79470",
    "end": "81600"
  },
  {
    "text": "attacker is good at this it's really",
    "start": "81600",
    "end": "83130"
  },
  {
    "text": "really hard to reconstruct what they did",
    "start": "83130",
    "end": "85560"
  },
  {
    "text": "on the endpoint system and so that kind",
    "start": "85560",
    "end": "87570"
  },
  {
    "text": "of was one of the impetuses for us to",
    "start": "87570",
    "end": "89340"
  },
  {
    "text": "begin this research we're not in this",
    "start": "89340",
    "end": "92040"
  },
  {
    "text": "class the the course of this",
    "start": "92040",
    "end": "93780"
  },
  {
    "text": "presentation can explain how PowerShell",
    "start": "93780",
    "end": "95430"
  },
  {
    "text": "works or all the things you can do with",
    "start": "95430",
    "end": "96990"
  },
  {
    "text": "it suffice it to say if you're not",
    "start": "96990",
    "end": "98880"
  },
  {
    "text": "familiar with it it's an incredibly",
    "start": "98880",
    "end": "101009"
  },
  {
    "text": "powerful command line and scripting",
    "start": "101009",
    "end": "102479"
  },
  {
    "text": "environment it can do almost anything",
    "start": "102479",
    "end": "104729"
  },
  {
    "text": "from basic remote command execution or",
    "start": "104729",
    "end": "107130"
  },
  {
    "text": "local command execution to actually",
    "start": "107130",
    "end": "109290"
  },
  {
    "text": "invoking or accessing the entire net",
    "start": "109290",
    "end": "112110"
  },
  {
    "text": "framework loading and executing code in",
    "start": "112110",
    "end": "114659"
  },
  {
    "text": "memory",
    "start": "114659",
    "end": "115680"
  },
  {
    "text": "interacting with the windows API so it's",
    "start": "115680",
    "end": "118140"
  },
  {
    "text": "incredibly powerful and a number of",
    "start": "118140",
    "end": "120960"
  },
  {
    "text": "PowerShell attack tools have been built",
    "start": "120960",
    "end": "122640"
  },
  {
    "text": "over the years that kind of take",
    "start": "122640",
    "end": "124619"
  },
  {
    "text": "advantage of this and one of them was at",
    "start": "124619",
    "end": "126630"
  },
  {
    "text": "Arsenal today written by one of our",
    "start": "126630",
    "end": "128940"
  },
  {
    "text": "colleagues matt graver as well as joseph",
    "start": "128940",
    "end": "131039"
  },
  {
    "text": "Bialik and chris campbell some great",
    "start": "131039",
    "end": "132510"
  },
  {
    "text": "PowerShell researchers",
    "start": "132510",
    "end": "133970"
  },
  {
    "text": "powersploit powersploit is really",
    "start": "133970",
    "end": "135980"
  },
  {
    "text": "awesome it does DLL injection it can run",
    "start": "135980",
    "end": "138530"
  },
  {
    "text": "mini cats in memory on a remote system",
    "start": "138530",
    "end": "140650"
  },
  {
    "text": "it has all sorts of cool features and we",
    "start": "140650",
    "end": "143480"
  },
  {
    "text": "have a few other listed here but the",
    "start": "143480",
    "end": "145760"
  },
  {
    "text": "bottom line is this is being integrated",
    "start": "145760",
    "end": "146990"
  },
  {
    "text": "into a lot of attack toolkits both",
    "start": "146990",
    "end": "149540"
  },
  {
    "text": "commercial and custom we're also seeing",
    "start": "149540",
    "end": "152570"
  },
  {
    "text": "in addition to targeted attackers use it",
    "start": "152570",
    "end": "154520"
  },
  {
    "text": "commodity malware use PowerShell the",
    "start": "154520",
    "end": "157250"
  },
  {
    "text": "first PowerShell worm was kind of a",
    "start": "157250",
    "end": "159290"
  },
  {
    "text": "proof of concept that actually came out",
    "start": "159290",
    "end": "160700"
  },
  {
    "text": "in 2006 now we're actually starting to",
    "start": "160700",
    "end": "163430"
  },
  {
    "text": "see some real non proof of concept mass",
    "start": "163430",
    "end": "165440"
  },
  {
    "text": "malware that integrates PowerShell into",
    "start": "165440",
    "end": "167690"
  },
  {
    "text": "their payload so what we wanted to do is",
    "start": "167690",
    "end": "170960"
  },
  {
    "text": "strip away the specifics of is this",
    "start": "170960",
    "end": "172670"
  },
  {
    "text": "commodity or is it a target attack and",
    "start": "172670",
    "end": "174470"
  },
  {
    "text": "kind of boil it down to the root of",
    "start": "174470",
    "end": "176050"
  },
  {
    "text": "PowerShell in its most fundamental use",
    "start": "176050",
    "end": "178370"
  },
  {
    "text": "cases and how that impacts the system",
    "start": "178370",
    "end": "180830"
  },
  {
    "text": "forensically so we took three base cases",
    "start": "180830",
    "end": "183890"
  },
  {
    "text": "as the foundation of our research",
    "start": "183890",
    "end": "185300"
  },
  {
    "text": "running a PowerShell script locally on a",
    "start": "185300",
    "end": "187580"
  },
  {
    "text": "system using PowerShell remoting which",
    "start": "187580",
    "end": "190100"
  },
  {
    "text": "goes over the win RM protocol and having",
    "start": "190100",
    "end": "192920"
  },
  {
    "text": "a PowerShell script or code that is",
    "start": "192920",
    "end": "194540"
  },
  {
    "text": "configured to be persistent on an",
    "start": "194540",
    "end": "196430"
  },
  {
    "text": "infected system and for each of those",
    "start": "196430",
    "end": "198560"
  },
  {
    "text": "scenarios we looked across disk the",
    "start": "198560",
    "end": "200570"
  },
  {
    "text": "registry file system metadata memory as",
    "start": "200570",
    "end": "203989"
  },
  {
    "text": "well as network traffic to understand",
    "start": "203989",
    "end": "206239"
  },
  {
    "text": "what sources of evidence were left",
    "start": "206239",
    "end": "207830"
  },
  {
    "text": "behind and that's kind of the crux of",
    "start": "207830",
    "end": "209810"
  },
  {
    "text": "our work that we'll share with you today",
    "start": "209810",
    "end": "211010"
  },
  {
    "text": "I'm one assumption we're talking about",
    "start": "211010",
    "end": "214070"
  },
  {
    "text": "the use of PowerShell in a post",
    "start": "214070",
    "end": "215660"
  },
  {
    "text": "compromised scenario and for us in the",
    "start": "215660",
    "end": "217880"
  },
  {
    "text": "majority of cases we work that means",
    "start": "217880",
    "end": "219470"
  },
  {
    "text": "attacker has already popped the domain",
    "start": "219470",
    "end": "221150"
  },
  {
    "text": "they either have local administrator",
    "start": "221150",
    "end": "222890"
  },
  {
    "text": "access on a number of systems or",
    "start": "222890",
    "end": "224500"
  },
  {
    "text": "inevitably domain administrator rights",
    "start": "224500",
    "end": "226820"
  },
  {
    "text": "and what that means is that all of the",
    "start": "226820",
    "end": "228530"
  },
  {
    "text": "security controls that are in place the",
    "start": "228530",
    "end": "230420"
  },
  {
    "text": "kind of limit malicious or unintended",
    "start": "230420",
    "end": "232550"
  },
  {
    "text": "use of PowerShell don't matter because",
    "start": "232550",
    "end": "234410"
  },
  {
    "text": "they can be bypassed by the attacker",
    "start": "234410",
    "end": "236000"
  },
  {
    "text": "using their privileges on the windows",
    "start": "236000",
    "end": "237890"
  },
  {
    "text": "host",
    "start": "237890",
    "end": "240160"
  },
  {
    "text": "finally we're gonna mention throughout",
    "start": "240220",
    "end": "242120"
  },
  {
    "text": "this presentation a number of different",
    "start": "242120",
    "end": "243620"
  },
  {
    "text": "versions of PowerShell what is most",
    "start": "243620",
    "end": "245720"
  },
  {
    "text": "prevalent in enterprise environments is",
    "start": "245720",
    "end": "247370"
  },
  {
    "text": "2.0 because that's installed by default",
    "start": "247370",
    "end": "249380"
  },
  {
    "text": "in Windows Vista and Windows 7 as well",
    "start": "249380",
    "end": "252560"
  },
  {
    "text": "as Server 20 2008 PowerShell is now up",
    "start": "252560",
    "end": "256880"
  },
  {
    "text": "to version 4 this chart kind of shows",
    "start": "256880",
    "end": "258859"
  },
  {
    "text": "you what's by default the reality",
    "start": "258859",
    "end": "260989"
  },
  {
    "text": "situation is that because PowerShell 3",
    "start": "260989",
    "end": "262729"
  },
  {
    "text": "and later requires a optional update we",
    "start": "262729",
    "end": "265669"
  },
  {
    "text": "expect the C PowerShell to be",
    "start": "265669",
    "end": "267620"
  },
  {
    "text": "the default version that will be",
    "start": "267620",
    "end": "269060"
  },
  {
    "text": "available in corporate environments for",
    "start": "269060",
    "end": "271130"
  },
  {
    "text": "quite a while because companies aren't",
    "start": "271130",
    "end": "272900"
  },
  {
    "text": "gonna be rushing to upgrade their entire",
    "start": "272900",
    "end": "274729"
  },
  {
    "text": "states to Windows 8 and Server 2012 r2",
    "start": "274729",
    "end": "277300"
  },
  {
    "text": "immediately so a lot of the evidence",
    "start": "277300",
    "end": "280130"
  },
  {
    "text": "we're going to provide is within that",
    "start": "280130",
    "end": "281570"
  },
  {
    "text": "context so we'll begin by talking about",
    "start": "281570",
    "end": "285260"
  },
  {
    "text": "memory analysis so with memory analysis",
    "start": "285260",
    "end": "287720"
  },
  {
    "text": "we want it to look at the worst case",
    "start": "287720",
    "end": "289340"
  },
  {
    "text": "scenario which is an attacker interacts",
    "start": "289340",
    "end": "292250"
  },
  {
    "text": "with a targeted host through PowerShell",
    "start": "292250",
    "end": "294020"
  },
  {
    "text": "remoting and doesn't put anything on",
    "start": "294020",
    "end": "296090"
  },
  {
    "text": "disk so they're not copying a script to",
    "start": "296090",
    "end": "297949"
  },
  {
    "text": "the remote host they're simply using",
    "start": "297949",
    "end": "299570"
  },
  {
    "text": "remoting to run commands run code kind",
    "start": "299570",
    "end": "301880"
  },
  {
    "text": "of like the invoke mimikatz feature that",
    "start": "301880",
    "end": "304130"
  },
  {
    "text": "powersploit lets you do the worst case",
    "start": "304130",
    "end": "305780"
  },
  {
    "text": "scenario where you're not touching disk",
    "start": "305780",
    "end": "308050"
  },
  {
    "text": "to understand how remoting leaves a",
    "start": "308050",
    "end": "310490"
  },
  {
    "text": "forensic impact behind in memory we have",
    "start": "310490",
    "end": "312440"
  },
  {
    "text": "to understand the process structure",
    "start": "312440",
    "end": "314539"
  },
  {
    "text": "that's involved so svchost.exe the",
    "start": "314539",
    "end": "318020"
  },
  {
    "text": "service hosting process",
    "start": "318020",
    "end": "319430"
  },
  {
    "text": "that is launching the are running the",
    "start": "319430",
    "end": "321590"
  },
  {
    "text": "decom launch service upon initiating",
    "start": "321590",
    "end": "325010"
  },
  {
    "text": "remoting to an access system let's say I",
    "start": "325010",
    "end": "327650"
  },
  {
    "text": "use invoke command to run an external",
    "start": "327650",
    "end": "329930"
  },
  {
    "text": "binary eval dot exe that instance of SVC",
    "start": "329930",
    "end": "333470"
  },
  {
    "text": "host will launch an instance of WSM prov",
    "start": "333470",
    "end": "336289"
  },
  {
    "text": "host dot exe and that in turn will",
    "start": "336289",
    "end": "338900"
  },
  {
    "text": "launch eval dot exe so you'll actually",
    "start": "338900",
    "end": "341270"
  },
  {
    "text": "see that it is a child process of WSM",
    "start": "341270",
    "end": "343760"
  },
  {
    "text": "prof host which is a child process of",
    "start": "343760",
    "end": "345740"
  },
  {
    "text": "that instance of SVC host in contrast if",
    "start": "345740",
    "end": "349220"
  },
  {
    "text": "i use native powershell commandlets like",
    "start": "349220",
    "end": "351919"
  },
  {
    "text": "get child item or if I'm running a power",
    "start": "351919",
    "end": "355160"
  },
  {
    "text": "sploit module that's running over the",
    "start": "355160",
    "end": "356780"
  },
  {
    "text": "network instead of spawning executable I",
    "start": "356780",
    "end": "360169"
  },
  {
    "text": "will get another instance of WSM Provost",
    "start": "360169",
    "end": "362330"
  },
  {
    "text": "but the PowerShell code runs solely",
    "start": "362330",
    "end": "364099"
  },
  {
    "text": "within its context in other words",
    "start": "364099",
    "end": "365510"
  },
  {
    "text": "powershell exe will not instantiate on",
    "start": "365510",
    "end": "368570"
  },
  {
    "text": "the access system so what's left behind",
    "start": "368570",
    "end": "373610"
  },
  {
    "text": "in memory while WSM Provost is running",
    "start": "373610",
    "end": "377780"
  },
  {
    "text": "there's actually structures from the",
    "start": "377780",
    "end": "379669"
  },
  {
    "text": "powershell object format that contain",
    "start": "379669",
    "end": "381590"
  },
  {
    "text": "the entire history of that powershell",
    "start": "381590",
    "end": "384050"
  },
  {
    "text": "session and if you dump memory of WM",
    "start": "384050",
    "end": "386360"
  },
  {
    "text": "provost you'll see them clear as day the",
    "start": "386360",
    "end": "388789"
  },
  {
    "text": "problem is that WM Provost terminates",
    "start": "388789",
    "end": "391490"
  },
  {
    "text": "the moment a powershell session exit so",
    "start": "391490",
    "end": "394010"
  },
  {
    "text": "if I run a single remote commands the",
    "start": "394010",
    "end": "395900"
  },
  {
    "text": "moment that command ends that W Sempra",
    "start": "395900",
    "end": "398330"
  },
  {
    "text": "host terminates if I use enter PS",
    "start": "398330",
    "end": "400400"
  },
  {
    "text": "session",
    "start": "400400",
    "end": "400849"
  },
  {
    "text": "like PS exact kind of functionality and",
    "start": "400849",
    "end": "402770"
  },
  {
    "text": "I have a persistent session the moment I",
    "start": "402770",
    "end": "404779"
  },
  {
    "text": "exit out of that WSM Provost is gone so",
    "start": "404779",
    "end": "407479"
  },
  {
    "text": "you lose that history however what we",
    "start": "407479",
    "end": "410240"
  },
  {
    "text": "did find is that another instance of SVC",
    "start": "410240",
    "end": "412369"
  },
  {
    "text": "host that is hosting the win RM service",
    "start": "412369",
    "end": "414949"
  },
  {
    "text": "actually retains remnants of remoting",
    "start": "414949",
    "end": "417259"
  },
  {
    "text": "activity even after a session has exited",
    "start": "417259",
    "end": "419419"
  },
  {
    "text": "how long it retains that depends on how",
    "start": "419419",
    "end": "421669"
  },
  {
    "text": "what the volume of remoting connections",
    "start": "421669",
    "end": "423830"
  },
  {
    "text": "the system processes are but in some",
    "start": "423830",
    "end": "426169"
  },
  {
    "text": "cases we found that all the way until",
    "start": "426169",
    "end": "427610"
  },
  {
    "text": "reboot remnants of commands might stick",
    "start": "427610",
    "end": "430279"
  },
  {
    "text": "around in its memory",
    "start": "430279",
    "end": "431599"
  },
  {
    "text": "we also found trace bits of powershell",
    "start": "431599",
    "end": "433879"
  },
  {
    "text": "remoting in the kernel as well as page",
    "start": "433879",
    "end": "436249"
  },
  {
    "text": "file and what we have here I'm not going",
    "start": "436249",
    "end": "438349"
  },
  {
    "text": "to read through the entire thing is a",
    "start": "438349",
    "end": "439639"
  },
  {
    "text": "table that kind of compares these",
    "start": "439639",
    "end": "441619"
  },
  {
    "text": "different sources of evidence in memory",
    "start": "441619",
    "end": "443269"
  },
  {
    "text": "and how long the evidence is retained",
    "start": "443269",
    "end": "445339"
  },
  {
    "text": "but the bottom line is SVC host for the",
    "start": "445339",
    "end": "448039"
  },
  {
    "text": "win RM service is your best bet for",
    "start": "448039",
    "end": "450139"
  },
  {
    "text": "recovering some of this evidence of",
    "start": "450139",
    "end": "451759"
  },
  {
    "text": "remoting activity now what it looks like",
    "start": "451759",
    "end": "455029"
  },
  {
    "text": "is a memory is a little difficult to to",
    "start": "455029",
    "end": "457580"
  },
  {
    "text": "eyeball or search what you're actually",
    "start": "457580",
    "end": "459619"
  },
  {
    "text": "going to find and when our M memory is",
    "start": "459619",
    "end": "461509"
  },
  {
    "text": "the soap structures that window or",
    "start": "461509",
    "end": "464719"
  },
  {
    "text": "PowerShell remoting is encapsulated in",
    "start": "464719",
    "end": "466519"
  },
  {
    "text": "when it goes from one host to another",
    "start": "466519",
    "end": "467930"
  },
  {
    "text": "and so in this very simple example I",
    "start": "467930",
    "end": "470419"
  },
  {
    "text": "have a powershell commandlets to echo a",
    "start": "470419",
    "end": "472219"
  },
  {
    "text": "string to a file and i have a snapshot",
    "start": "472219",
    "end": "474379"
  },
  {
    "text": "of what we recovered in memory from the",
    "start": "474379",
    "end": "476949"
  },
  {
    "text": "win RM service process and you can see",
    "start": "476949",
    "end": "479990"
  },
  {
    "text": "around all this XML and I apologize if",
    "start": "479990",
    "end": "481999"
  },
  {
    "text": "this is hard to read you can see the",
    "start": "481999",
    "end": "484009"
  },
  {
    "text": "exact command that we ran similarly we",
    "start": "484009",
    "end": "487519"
  },
  {
    "text": "use the invoke mimikatz module and power",
    "start": "487519",
    "end": "489409"
  },
  {
    "text": "sploit to remotely run and in fact",
    "start": "489409",
    "end": "492259"
  },
  {
    "text": "download the script and run it in memory",
    "start": "492259",
    "end": "493939"
  },
  {
    "text": "without ever touching disk and again on",
    "start": "493939",
    "end": "496189"
  },
  {
    "text": "the target host win RM service memory",
    "start": "496189",
    "end": "498169"
  },
  {
    "text": "retained the entire command that made it",
    "start": "498169",
    "end": "500689"
  },
  {
    "text": "very obvious what happened for many many",
    "start": "500689",
    "end": "503059"
  },
  {
    "text": "hours after the activity occurred if you",
    "start": "503059",
    "end": "507740"
  },
  {
    "text": "want to find this in memory I think one",
    "start": "507740",
    "end": "509809"
  },
  {
    "text": "day this might be a good candidate for",
    "start": "509809",
    "end": "511039"
  },
  {
    "text": "perhaps like a volatility module for a",
    "start": "511039",
    "end": "513888"
  },
  {
    "text": "string search perspective what you're",
    "start": "513889",
    "end": "515388"
  },
  {
    "text": "looking for are remnants of the",
    "start": "515389",
    "end": "516768"
  },
  {
    "text": "powershell remoting protocol psrp or",
    "start": "516769",
    "end": "520180"
  },
  {
    "text": "remnants of the strings that encapsulate",
    "start": "520180",
    "end": "523099"
  },
  {
    "text": "or surround the commands in the soap XML",
    "start": "523099",
    "end": "526490"
  },
  {
    "text": "and so by looking for some of these like",
    "start": "526490",
    "end": "528350"
  },
  {
    "text": "RSP command and RSP command line you can",
    "start": "528350",
    "end": "530779"
  },
  {
    "text": "find traces of",
    "start": "530779",
    "end": "532740"
  },
  {
    "text": "commands and/or their output so really",
    "start": "532740",
    "end": "536370"
  },
  {
    "text": "with memory analysis timing is",
    "start": "536370",
    "end": "538170"
  },
  {
    "text": "everything it's really hard to recover",
    "start": "538170",
    "end": "539940"
  },
  {
    "text": "this evidence but it is in memory we",
    "start": "539940",
    "end": "541980"
  },
  {
    "text": "just wanted to define what what was",
    "start": "541980",
    "end": "543720"
  },
  {
    "text": "available and for how long system uptime",
    "start": "543720",
    "end": "546180"
  },
  {
    "text": "memory utilization are all variables",
    "start": "546180",
    "end": "548279"
  },
  {
    "text": "that are gonna impact this so when we",
    "start": "548279",
    "end": "554580"
  },
  {
    "text": "looked at event logs we try to cover two",
    "start": "554580",
    "end": "556440"
  },
  {
    "text": "key scenarios both of which is when an",
    "start": "556440",
    "end": "558930"
  },
  {
    "text": "attacker is interacting with the system",
    "start": "558930",
    "end": "560370"
  },
  {
    "text": "both locally and remotely using",
    "start": "560370",
    "end": "562170"
  },
  {
    "text": "PowerShell and try to answer three key",
    "start": "562170",
    "end": "564089"
  },
  {
    "text": "questions the first being which event",
    "start": "564089",
    "end": "566430"
  },
  {
    "text": "logs are even available to us and what",
    "start": "566430",
    "end": "568709"
  },
  {
    "text": "type of information are gonna be found",
    "start": "568709",
    "end": "570149"
  },
  {
    "text": "in each one of the logs and then finally",
    "start": "570149",
    "end": "572339"
  },
  {
    "text": "and I'll go into more detail in this in",
    "start": "572339",
    "end": "574020"
  },
  {
    "text": "a few slides is really the differences",
    "start": "574020",
    "end": "575700"
  },
  {
    "text": "between powershell 2.0 and 3.0 and what",
    "start": "575700",
    "end": "578310"
  },
  {
    "text": "you can see between the two so in total",
    "start": "578310",
    "end": "581520"
  },
  {
    "text": "we identified five potential candidates",
    "start": "581520",
    "end": "584430"
  },
  {
    "text": "for four where powershell activity can",
    "start": "584430",
    "end": "586860"
  },
  {
    "text": "be recorded in the event logs and i've",
    "start": "586860",
    "end": "588240"
  },
  {
    "text": "have them listed up here in all",
    "start": "588240",
    "end": "590250"
  },
  {
    "text": "instances activities not to be written",
    "start": "590250",
    "end": "592050"
  },
  {
    "text": "to each log but we'll go through each",
    "start": "592050",
    "end": "593880"
  },
  {
    "text": "we'll go through multiple scenarios",
    "start": "593880",
    "end": "595529"
  },
  {
    "text": "looking at local and remote execution",
    "start": "595529",
    "end": "597180"
  },
  {
    "text": "and we'll highlight some specific e IDs",
    "start": "597180",
    "end": "599940"
  },
  {
    "text": "that we found useful so first looking at",
    "start": "599940",
    "end": "603930"
  },
  {
    "text": "local powershell execution and the",
    "start": "603930",
    "end": "605579"
  },
  {
    "text": "powershell log itself we identified two",
    "start": "605579",
    "end": "607649"
  },
  {
    "text": "events event yeah the 400 and a ID 403",
    "start": "607649",
    "end": "611160"
  },
  {
    "text": "that recorded specific execution time so",
    "start": "611160",
    "end": "613920"
  },
  {
    "text": "any ID 400 the engine state changes from",
    "start": "613920",
    "end": "616740"
  },
  {
    "text": "none to available this indicates that",
    "start": "616740",
    "end": "618720"
  },
  {
    "text": "activity has begun and so if you look at",
    "start": "618720",
    "end": "620670"
  },
  {
    "text": "the inner generated time of this event",
    "start": "620670",
    "end": "622529"
  },
  {
    "text": "you can deduce okay this is when",
    "start": "622529",
    "end": "624240"
  },
  {
    "text": "PowerShell actually started running",
    "start": "624240",
    "end": "625740"
  },
  {
    "text": "similarly to Eid 403 this records the",
    "start": "625740",
    "end": "629550"
  },
  {
    "text": "stopping of the PowerShell engine and so",
    "start": "629550",
    "end": "632160"
  },
  {
    "text": "taking these two times you can say okay",
    "start": "632160",
    "end": "634230"
  },
  {
    "text": "this is roughly how long PowerShell was",
    "start": "634230",
    "end": "635880"
  },
  {
    "text": "running on the system and looking at the",
    "start": "635880",
    "end": "637680"
  },
  {
    "text": "hostname parameter written with this",
    "start": "637680",
    "end": "639180"
  },
  {
    "text": "event you can see here a console host",
    "start": "639180",
    "end": "641220"
  },
  {
    "text": "that indicates a local session will show",
    "start": "641220",
    "end": "643740"
  },
  {
    "text": "you in a further slide what a remote",
    "start": "643740",
    "end": "645240"
  },
  {
    "text": "session actually looks like the",
    "start": "645240",
    "end": "647820"
  },
  {
    "text": "powershell operational blog really into",
    "start": "647820",
    "end": "649860"
  },
  {
    "text": "auto doesn't record any additional",
    "start": "649860",
    "end": "651540"
  },
  {
    "text": "information that we found us",
    "start": "651540",
    "end": "652829"
  },
  {
    "text": "forensically useful but e ID 49 61 does",
    "start": "652829",
    "end": "656700"
  },
  {
    "text": "record the PowerShell console starting",
    "start": "656700",
    "end": "658410"
  },
  {
    "text": "up so again nothing new here one caveat",
    "start": "658410",
    "end": "661350"
  },
  {
    "text": "though in in PowerShell 302 and greater",
    "start": "661350",
    "end": "663540"
  },
  {
    "text": "the operational log does record some",
    "start": "663540",
    "end": "665550"
  },
  {
    "text": "error",
    "start": "665550",
    "end": "665970"
  },
  {
    "text": "so here we see the this script C temp",
    "start": "665970",
    "end": "669689"
  },
  {
    "text": "test ps1 failed to run similarly if you",
    "start": "669689",
    "end": "673079"
  },
  {
    "text": "fail to connect to a remote system that",
    "start": "673079",
    "end": "675269"
  },
  {
    "text": "will also get logged here so you can see",
    "start": "675269",
    "end": "676799"
  },
  {
    "text": "the remote host name or IP address that",
    "start": "676799",
    "end": "678559"
  },
  {
    "text": "PowerShell failed to connect to finally",
    "start": "678559",
    "end": "683069"
  },
  {
    "text": "the powershell analytic log and before I",
    "start": "683069",
    "end": "684869"
  },
  {
    "text": "go into this into too much detail Anna",
    "start": "684869",
    "end": "686699"
  },
  {
    "text": "Lu logging logging is disabled by",
    "start": "686699",
    "end": "688919"
  },
  {
    "text": "default and probably for a good reason",
    "start": "688919",
    "end": "690899"
  },
  {
    "text": "once it's enabled it generates a massive",
    "start": "690899",
    "end": "692999"
  },
  {
    "text": "amount of other events and is not really",
    "start": "692999",
    "end": "695269"
  },
  {
    "text": "meant for long-term sustained logging",
    "start": "695269",
    "end": "698189"
  },
  {
    "text": "but if you do enable it at least on",
    "start": "698189",
    "end": "699899"
  },
  {
    "text": "PowerShell 300 you can get specific",
    "start": "699899",
    "end": "702149"
  },
  {
    "text": "command execution so here we can see in",
    "start": "702149",
    "end": "704669"
  },
  {
    "text": "the same of nid we see test es on ps1 is",
    "start": "704669",
    "end": "708839"
  },
  {
    "text": "started specifically then write host the",
    "start": "708839",
    "end": "711959"
  },
  {
    "text": "any command light that she would run",
    "start": "711959",
    "end": "713309"
  },
  {
    "text": "within PowerShell is also captured and",
    "start": "713309",
    "end": "715049"
  },
  {
    "text": "finally if you run a an executable",
    "start": "715049",
    "end": "717359"
  },
  {
    "text": "through PowerShell that's also being",
    "start": "717359",
    "end": "718709"
  },
  {
    "text": "logged a big caveat here though and and",
    "start": "718709",
    "end": "721169"
  },
  {
    "text": "something that we can overcome later in",
    "start": "721169",
    "end": "722819"
  },
  {
    "text": "PowerShell 300 is this isn't going to",
    "start": "722819",
    "end": "724829"
  },
  {
    "text": "capture any event arguments so you're",
    "start": "724829",
    "end": "727379"
  },
  {
    "text": "just going to see what is run and not",
    "start": "727379",
    "end": "729149"
  },
  {
    "text": "the context in which it's run moving out",
    "start": "729149",
    "end": "733379"
  },
  {
    "text": "to PowerShell remoting I'm back to the",
    "start": "733379",
    "end": "735720"
  },
  {
    "text": "PowerShell Event log itself the first",
    "start": "735720",
    "end": "737999"
  },
  {
    "text": "EIU six is actually a message that's",
    "start": "737999",
    "end": "740339"
  },
  {
    "text": "recorded on the the caller system so",
    "start": "740339",
    "end": "742559"
  },
  {
    "text": "where you're running the remote command",
    "start": "742559",
    "end": "743699"
  },
  {
    "text": "from I'm you see here that it's",
    "start": "743699",
    "end": "746129"
  },
  {
    "text": "recording that creating the WS man",
    "start": "746129",
    "end": "748019"
  },
  {
    "text": "session so WS man is the protocol used",
    "start": "748019",
    "end": "750419"
  },
  {
    "text": "within the win RM service and so this",
    "start": "750419",
    "end": "752819"
  },
  {
    "text": "indicates that a remote session is",
    "start": "752819",
    "end": "754889"
  },
  {
    "text": "beginning on the the remote system and",
    "start": "754889",
    "end": "757829"
  },
  {
    "text": "similarly back to the powershell log on",
    "start": "757829",
    "end": "760139"
  },
  {
    "text": "the victim here we see ID 404 3 again",
    "start": "760139",
    "end": "763529"
  },
  {
    "text": "recording the start and stop of the",
    "start": "763529",
    "end": "765720"
  },
  {
    "text": "powershell engine and here you see the",
    "start": "765720",
    "end": "768569"
  },
  {
    "text": "host name is server remote host",
    "start": "768569",
    "end": "770009"
  },
  {
    "text": "indicating that it was a remote",
    "start": "770009",
    "end": "771239"
  },
  {
    "text": "connection and not local the winner an",
    "start": "771239",
    "end": "775649"
  },
  {
    "text": "operational log again this is specific",
    "start": "775649",
    "end": "777149"
  },
  {
    "text": "to promoting because PowerShell utilizes",
    "start": "777149",
    "end": "780509"
  },
  {
    "text": "the win RM service so obviously events",
    "start": "780509",
    "end": "782939"
  },
  {
    "text": "can be written to the win RM log here",
    "start": "782939",
    "end": "784889"
  },
  {
    "text": "you see eid 169 extra recorders the",
    "start": "784889",
    "end": "787289"
  },
  {
    "text": "specific user and security protocol",
    "start": "787289",
    "end": "789209"
  },
  {
    "text": "that's used to authenticate so here you",
    "start": "789209",
    "end": "790949"
  },
  {
    "text": "see matt h is using aunty LM to log into",
    "start": "790949",
    "end": "792839"
  },
  {
    "text": "the system and then similar to the",
    "start": "792839",
    "end": "794879"
  },
  {
    "text": "powershell log you can come you can",
    "start": "794879",
    "end": "796139"
  },
  {
    "text": "deduce the length of activity",
    "start": "796139",
    "end": "797910"
  },
  {
    "text": "looking at yetiz 81 and 134 going back",
    "start": "797910",
    "end": "803430"
  },
  {
    "text": "to the powershell analytic log I did",
    "start": "803430",
    "end": "805080"
  },
  {
    "text": "mention that it generates a lot of",
    "start": "805080",
    "end": "807060"
  },
  {
    "text": "events and it certainly does but it does",
    "start": "807060",
    "end": "809040"
  },
  {
    "text": "capture specific commands that are being",
    "start": "809040",
    "end": "811560"
  },
  {
    "text": "run on a system just an encoded format",
    "start": "811560",
    "end": "814350"
  },
  {
    "text": "so here you're also seeing in of NID 30",
    "start": "814350",
    "end": "816690"
  },
  {
    "text": "to 850 the specific username that's",
    "start": "816690",
    "end": "819720"
  },
  {
    "text": "being authenticated and then finally in",
    "start": "819720",
    "end": "821850"
  },
  {
    "text": "32 8 6 7 & 8 6 8 you're seeing the the",
    "start": "821850",
    "end": "826140"
  },
  {
    "text": "specific payloads being every payload",
    "start": "826140",
    "end": "828840"
  },
  {
    "text": "being sent and received to and from the",
    "start": "828840",
    "end": "831000"
  },
  {
    "text": "remote system and this will include both",
    "start": "831000",
    "end": "833010"
  },
  {
    "text": "the protocol and the negotiation that",
    "start": "833010",
    "end": "834540"
  },
  {
    "text": "happens at first and then every single",
    "start": "834540",
    "end": "836160"
  },
  {
    "text": "instance of data being sent back and",
    "start": "836160",
    "end": "837780"
  },
  {
    "text": "forth to and from the victim machine and",
    "start": "837780",
    "end": "840090"
  },
  {
    "text": "it's all in an encoded format so if you",
    "start": "840090",
    "end": "841530"
  },
  {
    "text": "look it really doesn't give you anything",
    "start": "841530",
    "end": "843300"
  },
  {
    "text": "you you don't just by default you'd have",
    "start": "843300",
    "end": "846270"
  },
  {
    "text": "to copy this all out and and to decode",
    "start": "846270",
    "end": "848280"
  },
  {
    "text": "it so here's an example command being",
    "start": "848280",
    "end": "849960"
  },
  {
    "text": "sent I'm just saying to get to child",
    "start": "849960",
    "end": "851850"
  },
  {
    "text": "item of C which is basically just LS on",
    "start": "851850",
    "end": "853740"
  },
  {
    "text": "the sea uncie so once you decode it here",
    "start": "853740",
    "end": "857340"
  },
  {
    "text": "you do actually see specific commands",
    "start": "857340",
    "end": "859350"
  },
  {
    "text": "being run with arguments so here the",
    "start": "859350",
    "end": "860880"
  },
  {
    "text": "command is get child item it's not a",
    "start": "860880",
    "end": "862440"
  },
  {
    "text": "script and it's being run on the C",
    "start": "862440",
    "end": "864480"
  },
  {
    "text": "directory and here we have an example of",
    "start": "864480",
    "end": "867990"
  },
  {
    "text": "the response being sent back and one",
    "start": "867990",
    "end": "870240"
  },
  {
    "text": "thing to remember is in PowerShell",
    "start": "870240",
    "end": "871500"
  },
  {
    "text": "running specific commandlets causes all",
    "start": "871500",
    "end": "874020"
  },
  {
    "text": "responses to be sent back in the form of",
    "start": "874020",
    "end": "876000"
  },
  {
    "text": "an object so every time are every single",
    "start": "876000",
    "end": "879060"
  },
  {
    "text": "specific directory or file within the",
    "start": "879060",
    "end": "881760"
  },
  {
    "text": "root of C is going to be sent back in a",
    "start": "881760",
    "end": "883170"
  },
  {
    "text": "separate or recorded and a separate",
    "start": "883170",
    "end": "884940"
  },
  {
    "text": "event log as an object and you're going",
    "start": "884940",
    "end": "887190"
  },
  {
    "text": "to see all of this information so a",
    "start": "887190",
    "end": "888810"
  },
  {
    "text": "single command being run remotely is",
    "start": "888810",
    "end": "890880"
  },
  {
    "text": "going to generate a large number of",
    "start": "890880",
    "end": "892230"
  },
  {
    "text": "events each one has to be decoded and",
    "start": "892230",
    "end": "894300"
  },
  {
    "text": "it's really not practical to do so",
    "start": "894300",
    "end": "897350"
  },
  {
    "text": "another option that you can employ",
    "start": "897350",
    "end": "899450"
  },
  {
    "text": "specifically with PowerShell to doto",
    "start": "899450",
    "end": "901620"
  },
  {
    "text": "that we've seen a lot of some companies",
    "start": "901620",
    "end": "903870"
  },
  {
    "text": "use that I know Ryan's worked with",
    "start": "903870",
    "end": "905370"
  },
  {
    "text": "specifically as the global profiles",
    "start": "905370",
    "end": "907590"
  },
  {
    "text": "there's both there's a number of",
    "start": "907590",
    "end": "909090"
  },
  {
    "text": "profiles that PowerShell utilizes that",
    "start": "909090",
    "end": "910920"
  },
  {
    "text": "will automatically load on local",
    "start": "910920",
    "end": "912870"
  },
  {
    "text": "PowerShell startups so again this is",
    "start": "912870",
    "end": "914310"
  },
  {
    "text": "only to local PowerShell usage but using",
    "start": "914310",
    "end": "917340"
  },
  {
    "text": "the built-in command and start",
    "start": "917340",
    "end": "918900"
  },
  {
    "text": "transcript or even writing some custom",
    "start": "918900",
    "end": "921180"
  },
  {
    "text": "code you can capture all commands being",
    "start": "921180",
    "end": "923490"
  },
  {
    "text": "written to and then the responses from",
    "start": "923490",
    "end": "925080"
  },
  {
    "text": "the shell now there's some limitations",
    "start": "925080",
    "end": "927330"
  },
  {
    "text": "here one of which I mentioned earlier",
    "start": "927330",
    "end": "928650"
  },
  {
    "text": "this is only for",
    "start": "928650",
    "end": "930019"
  },
  {
    "text": "local execution and also you can",
    "start": "930019",
    "end": "932209"
  },
  {
    "text": "actually bypass this fairly triple T",
    "start": "932209",
    "end": "934069"
  },
  {
    "text": "with just exit setting the no profile",
    "start": "934069",
    "end": "937160"
  },
  {
    "text": "flag when you're running PowerShell and",
    "start": "937160",
    "end": "938540"
  },
  {
    "text": "nothing here will be loaded also if",
    "start": "938540",
    "end": "941809"
  },
  {
    "text": "you're using a blocker you can run you",
    "start": "941809",
    "end": "944239"
  },
  {
    "text": "can set up Locker to either audit or",
    "start": "944239",
    "end": "945769"
  },
  {
    "text": "enforce script execution so here we have",
    "start": "945769",
    "end": "947629"
  },
  {
    "text": "an example where it's actually recording",
    "start": "947629",
    "end": "949429"
  },
  {
    "text": "the time in the path that a PowerShell",
    "start": "949429",
    "end": "951259"
  },
  {
    "text": "script is run so this can definitely be",
    "start": "951259",
    "end": "952759"
  },
  {
    "text": "useful too if you're using a blocker and",
    "start": "952759",
    "end": "955759"
  },
  {
    "text": "then finally if this is the true",
    "start": "955759",
    "end": "957769"
  },
  {
    "text": "solution that we found and we recommend",
    "start": "957769",
    "end": "959509"
  },
  {
    "text": "is upgrading to powershell 3.0 and",
    "start": "959509",
    "end": "962179"
  },
  {
    "text": "implementing module logging which writes",
    "start": "962179",
    "end": "964209"
  },
  {
    "text": "detailed command input and output to the",
    "start": "964209",
    "end": "967910"
  },
  {
    "text": "event log in clear-text and every single",
    "start": "967910",
    "end": "970459"
  },
  {
    "text": "time in a command is one for PowerShell",
    "start": "970459",
    "end": "972379"
  },
  {
    "text": "it creates this event and we'll see how",
    "start": "972379",
    "end": "974089"
  },
  {
    "text": "that's a good thing and then how that's",
    "start": "974089",
    "end": "975350"
  },
  {
    "text": "a bad thing in a couple slides again",
    "start": "975350",
    "end": "977269"
  },
  {
    "text": "this is just a quick example of how you",
    "start": "977269",
    "end": "979249"
  },
  {
    "text": "can configure it so in this next example",
    "start": "979249",
    "end": "982040"
  },
  {
    "text": "we actually ran a a little bit more",
    "start": "982040",
    "end": "983720"
  },
  {
    "text": "complex command so we're looking at the",
    "start": "983720",
    "end": "985339"
  },
  {
    "text": "C temp directory recursively looking for",
    "start": "985339",
    "end": "987350"
  },
  {
    "text": "specific files that have a dot txt",
    "start": "987350",
    "end": "989360"
  },
  {
    "text": "extension and then we're finally we're",
    "start": "989360",
    "end": "991129"
  },
  {
    "text": "running basically a grep which is select",
    "start": "991129",
    "end": "992959"
  },
  {
    "text": "string and Power Cell looking for the",
    "start": "992959",
    "end": "994850"
  },
  {
    "text": "term password so the top the top event",
    "start": "994850",
    "end": "997189"
  },
  {
    "text": "here we're actually seeing all the",
    "start": "997189",
    "end": "998779"
  },
  {
    "text": "commands the commands being passed with",
    "start": "998779",
    "end": "1000429"
  },
  {
    "text": "the specific argument being logged and",
    "start": "1000429",
    "end": "1002110"
  },
  {
    "text": "then finally you're seeing the output",
    "start": "1002110",
    "end": "1003850"
  },
  {
    "text": "here on the bottom and again this is all",
    "start": "1003850",
    "end": "1006069"
  },
  {
    "text": "logged in clear text so in our next",
    "start": "1006069",
    "end": "1008470"
  },
  {
    "text": "example we actually use the power",
    "start": "1008470",
    "end": "1009850"
  },
  {
    "text": "spooling module and then with employed",
    "start": "1009850",
    "end": "1012160"
  },
  {
    "text": "VOC maybe cats and like I said every",
    "start": "1012160",
    "end": "1014559"
  },
  {
    "text": "single time a PowerShell command is",
    "start": "1014559",
    "end": "1016089"
  },
  {
    "text": "Rhonda Jensen event so a single instance",
    "start": "1016089",
    "end": "1018399"
  },
  {
    "text": "of running invoke may be cats generated",
    "start": "1018399",
    "end": "1020110"
  },
  {
    "text": "1200 I'm sorry over 1200 events so",
    "start": "1020110",
    "end": "1023170"
  },
  {
    "text": "practically it's not practical to parse",
    "start": "1023170",
    "end": "1026110"
  },
  {
    "text": "through them all however if you do find",
    "start": "1026110",
    "end": "1027819"
  },
  {
    "text": "the the resulting output it's actually",
    "start": "1027819",
    "end": "1029500"
  },
  {
    "text": "pretty funny you can see uh maybe cats",
    "start": "1029500",
    "end": "1031418"
  },
  {
    "text": "output and clear text here in the Epoque",
    "start": "1031419",
    "end": "1035069"
  },
  {
    "text": "all right and finally we're gonna talk",
    "start": "1037950",
    "end": "1040060"
  },
  {
    "text": "about persistence and of course",
    "start": "1040060",
    "end": "1041770"
  },
  {
    "text": "persistence is a common goal that",
    "start": "1041770",
    "end": "1043449"
  },
  {
    "text": "attackers have when they want malicious",
    "start": "1043450",
    "end": "1045250"
  },
  {
    "text": "code to keep running even surviving",
    "start": "1045250",
    "end": "1047620"
  },
  {
    "text": "system reboot or user log out and log on",
    "start": "1047620",
    "end": "1050070"
  },
  {
    "text": "so we're gonna talk about some common",
    "start": "1050070",
    "end": "1052390"
  },
  {
    "text": "persistence mechanisms that can be used",
    "start": "1052390",
    "end": "1054700"
  },
  {
    "text": "to persist malicious PowerShell code and",
    "start": "1054700",
    "end": "1056500"
  },
  {
    "text": "how to find them actually one of the",
    "start": "1056500",
    "end": "1059200"
  },
  {
    "text": "things that's covered by some prior",
    "start": "1059200",
    "end": "1060430"
  },
  {
    "text": "research is that you can use any of the",
    "start": "1060430",
    "end": "1062050"
  },
  {
    "text": "existing persistence mechanisms in",
    "start": "1062050",
    "end": "1063820"
  },
  {
    "text": "Windows that are very well-known and",
    "start": "1063820",
    "end": "1065740"
  },
  {
    "text": "documented like registry autostart",
    "start": "1065740",
    "end": "1068050"
  },
  {
    "text": "locations recurring schedule tasks the",
    "start": "1068050",
    "end": "1070960"
  },
  {
    "text": "user startup folder I mean really all",
    "start": "1070960",
    "end": "1072880"
  },
  {
    "text": "you have to do is invoke PowerShell DXE",
    "start": "1072880",
    "end": "1074830"
  },
  {
    "text": "and give it a script argument so we're",
    "start": "1074830",
    "end": "1077140"
  },
  {
    "text": "not gonna talk about those because",
    "start": "1077140",
    "end": "1078430"
  },
  {
    "text": "that's kind of basic stuff that malware",
    "start": "1078430",
    "end": "1080590"
  },
  {
    "text": "is exploited for persistence and Windows",
    "start": "1080590",
    "end": "1082150"
  },
  {
    "text": "hosts for many many years I do want to",
    "start": "1082150",
    "end": "1084610"
  },
  {
    "text": "cover the one thing that is kind of",
    "start": "1084610",
    "end": "1085840"
  },
  {
    "text": "specific to a way that powersploit can",
    "start": "1085840",
    "end": "1089500"
  },
  {
    "text": "persist malicious PowerShell code and I",
    "start": "1089500",
    "end": "1091990"
  },
  {
    "text": "also think it's a more sophisticated",
    "start": "1091990",
    "end": "1092950"
  },
  {
    "text": "mechanism that power that is well suited",
    "start": "1092950",
    "end": "1095200"
  },
  {
    "text": "for PowerShell and that's WMI or the",
    "start": "1095200",
    "end": "1097600"
  },
  {
    "text": "Windows management interface so WMI is",
    "start": "1097600",
    "end": "1100060"
  },
  {
    "text": "this incredibly complicated thing that",
    "start": "1100060",
    "end": "1101950"
  },
  {
    "text": "has this eventing infrastructure where I",
    "start": "1101950",
    "end": "1104440"
  },
  {
    "text": "can register these event filters which",
    "start": "1104440",
    "end": "1106810"
  },
  {
    "text": "basically constantly query for different",
    "start": "1106810",
    "end": "1109090"
  },
  {
    "text": "types of events and when they trigger",
    "start": "1109090",
    "end": "1110380"
  },
  {
    "text": "you set up a consumer that's balanced to",
    "start": "1110380",
    "end": "1112870"
  },
  {
    "text": "it and the consumer runs whatever you",
    "start": "1112870",
    "end": "1114610"
  },
  {
    "text": "tell it to run so using PowerShell",
    "start": "1114610",
    "end": "1116980"
  },
  {
    "text": "itself we can create these event filters",
    "start": "1116980",
    "end": "1119140"
  },
  {
    "text": "and consumers and make them do bad",
    "start": "1119140",
    "end": "1121030"
  },
  {
    "text": "things so an event filter is what causes",
    "start": "1121030",
    "end": "1124480"
  },
  {
    "text": "a consumer to trigger so if you were an",
    "start": "1124480",
    "end": "1127120"
  },
  {
    "text": "attacker and you wanted to create an",
    "start": "1127120",
    "end": "1128380"
  },
  {
    "text": "event filter that would achieve your",
    "start": "1128380",
    "end": "1130030"
  },
  {
    "text": "goal of persistence you might do",
    "start": "1130030",
    "end": "1131710"
  },
  {
    "text": "something like create a wql query that",
    "start": "1131710",
    "end": "1134530"
  },
  {
    "text": "runs within X number of seconds of",
    "start": "1134530",
    "end": "1136960"
  },
  {
    "text": "startup whenever that is satisfied the",
    "start": "1136960",
    "end": "1139570"
  },
  {
    "text": "code runs or you might set a filter that",
    "start": "1139570",
    "end": "1141850"
  },
  {
    "text": "runs something at a specific time these",
    "start": "1141850",
    "end": "1143830"
  },
  {
    "text": "are actually both of the default options",
    "start": "1143830",
    "end": "1145630"
  },
  {
    "text": "that the power sploit tools persistence",
    "start": "1145630",
    "end": "1148030"
  },
  {
    "text": "module provides to you so once the",
    "start": "1148030",
    "end": "1150820"
  },
  {
    "text": "filter runs the next step is something",
    "start": "1150820",
    "end": "1152170"
  },
  {
    "text": "has to consume it consume the event and",
    "start": "1152170",
    "end": "1154060"
  },
  {
    "text": "do something and that's where we",
    "start": "1154060",
    "end": "1155710"
  },
  {
    "text": "actually run PowerShell dot exe so the",
    "start": "1155710",
    "end": "1159250"
  },
  {
    "text": "trick here is where does the code come",
    "start": "1159250",
    "end": "1160750"
  },
  {
    "text": "from I need to do more than just run",
    "start": "1160750",
    "end": "1162160"
  },
  {
    "text": "PowerShell I have to give it code to",
    "start": "1162160",
    "end": "1163960"
  },
  {
    "text": "execute and I can do one of two things I",
    "start": "1163960",
    "end": "1166060"
  },
  {
    "text": "can either put it in the arguments to my",
    "start": "1166060",
    "end": "1168730"
  },
  {
    "text": "PowerShell command line",
    "start": "1168730",
    "end": "1170020"
  },
  {
    "text": "we'll be fired by the event consumer the",
    "start": "1170020",
    "end": "1172210"
  },
  {
    "text": "constraint there is the maximum command",
    "start": "1172210",
    "end": "1174010"
  },
  {
    "text": "line length allowed by Windows which is",
    "start": "1174010",
    "end": "1175780"
  },
  {
    "text": "like I think 8,000 characters are there",
    "start": "1175780",
    "end": "1177790"
  },
  {
    "text": "abouts which is plenty long if you have",
    "start": "1177790",
    "end": "1180090"
  },
  {
    "text": "encoded code that's being to be",
    "start": "1180090",
    "end": "1182230"
  },
  {
    "text": "compressed on-the-fly",
    "start": "1182230",
    "end": "1183120"
  },
  {
    "text": "the other option is you can just put the",
    "start": "1183120",
    "end": "1185410"
  },
  {
    "text": "code in the PowerShell profiles and then",
    "start": "1185410",
    "end": "1187810"
  },
  {
    "text": "the moment powershell dot exe executes",
    "start": "1187810",
    "end": "1189880"
  },
  {
    "text": "via the persistence mechanism it will",
    "start": "1189880",
    "end": "1191890"
  },
  {
    "text": "load from the profile and it will",
    "start": "1191890",
    "end": "1193300"
  },
  {
    "text": "automatically run finding this can be a",
    "start": "1193300",
    "end": "1197530"
  },
  {
    "text": "little tricky actually the best way to",
    "start": "1197530",
    "end": "1199210"
  },
  {
    "text": "enumerate WMI filters and consumers and",
    "start": "1199210",
    "end": "1201610"
  },
  {
    "text": "determine what's installed is to use",
    "start": "1201610",
    "end": "1203020"
  },
  {
    "text": "PowerShell itself the get WMI CIM",
    "start": "1203020",
    "end": "1205600"
  },
  {
    "text": "and--let will allow you to enumerate",
    "start": "1205600",
    "end": "1207190"
  },
  {
    "text": "filters and consumers and we found that",
    "start": "1207190",
    "end": "1209290"
  },
  {
    "text": "it's very easy to baseline in your",
    "start": "1209290",
    "end": "1210880"
  },
  {
    "text": "environment and determine with your",
    "start": "1210880",
    "end": "1212470"
  },
  {
    "text": "default OS image what consumers do and",
    "start": "1212470",
    "end": "1214660"
  },
  {
    "text": "do not exist and in most environments",
    "start": "1214660",
    "end": "1216430"
  },
  {
    "text": "they're not gonna have consumers to",
    "start": "1216430",
    "end": "1217960"
  },
  {
    "text": "automatically run PowerShell certainly",
    "start": "1217960",
    "end": "1220120"
  },
  {
    "text": "not with arguments to execute code on",
    "start": "1220120",
    "end": "1223300"
  },
  {
    "text": "the file system when you create a WMI",
    "start": "1223300",
    "end": "1225340"
  },
  {
    "text": "event filter a consumer you modify the",
    "start": "1225340",
    "end": "1227950"
  },
  {
    "text": "WMI repository which is in this w bem",
    "start": "1227950",
    "end": "1230380"
  },
  {
    "text": "directory these are undocumented and",
    "start": "1230380",
    "end": "1232960"
  },
  {
    "text": "very complex files that you can strings",
    "start": "1232960",
    "end": "1236230"
  },
  {
    "text": "and if you strings them you'll see",
    "start": "1236230",
    "end": "1237820"
  },
  {
    "text": "remnants of the consumer name or the",
    "start": "1237820",
    "end": "1239560"
  },
  {
    "text": "filter name and remnants of the command",
    "start": "1239560",
    "end": "1241480"
  },
  {
    "text": "line but not easily suited for analysis",
    "start": "1241480",
    "end": "1244030"
  },
  {
    "text": "because as of now there's absolutely",
    "start": "1244030",
    "end": "1245380"
  },
  {
    "text": "nothing out there that will decode and",
    "start": "1245380",
    "end": "1247120"
  },
  {
    "text": "parse these files from a dead disk image",
    "start": "1247120",
    "end": "1249820"
  },
  {
    "text": "of a system you can also inspect the",
    "start": "1249820",
    "end": "1252220"
  },
  {
    "text": "user profile I think a good forensic",
    "start": "1252220",
    "end": "1253690"
  },
  {
    "text": "step is to look at every profile dot",
    "start": "1253690",
    "end": "1256450"
  },
  {
    "text": "PSone on a system to ensure that there",
    "start": "1256450",
    "end": "1258400"
  },
  {
    "text": "is no malicious code in it and then",
    "start": "1258400",
    "end": "1261100"
  },
  {
    "text": "finally we noted that when you use",
    "start": "1261100",
    "end": "1262360"
  },
  {
    "text": "certain types of event filters it",
    "start": "1262360",
    "end": "1263950"
  },
  {
    "text": "creates a registry key which is",
    "start": "1263950",
    "end": "1265570"
  },
  {
    "text": "otherwise not present on a default",
    "start": "1265570",
    "end": "1267460"
  },
  {
    "text": "Windows image so for example in the case",
    "start": "1267460",
    "end": "1269710"
  },
  {
    "text": "where we created an event filter that",
    "start": "1269710",
    "end": "1271300"
  },
  {
    "text": "fired at a specific time of day that",
    "start": "1271300",
    "end": "1274030"
  },
  {
    "text": "creates this registry key shown here for",
    "start": "1274030",
    "end": "1276010"
  },
  {
    "text": "132 o'clock provider and in",
    "start": "1276010",
    "end": "1278350"
  },
  {
    "text": "investigating large environments and",
    "start": "1278350",
    "end": "1279790"
  },
  {
    "text": "checking this key across tens of",
    "start": "1279790",
    "end": "1281140"
  },
  {
    "text": "thousands of systems we found it's only",
    "start": "1281140",
    "end": "1283060"
  },
  {
    "text": "set when an event filter is created that",
    "start": "1283060",
    "end": "1285610"
  },
  {
    "text": "triggers in a specific time which is I",
    "start": "1285610",
    "end": "1287470"
  },
  {
    "text": "think intrinsically kind of suspicious",
    "start": "1287470",
    "end": "1290160"
  },
  {
    "text": "there are other tools you can use",
    "start": "1290160",
    "end": "1291910"
  },
  {
    "text": "sysinternals autoruns was recently",
    "start": "1291910",
    "end": "1294340"
  },
  {
    "text": "updated to enumerate the WMI repository",
    "start": "1294340",
    "end": "1296470"
  },
  {
    "text": "you can find references to powershell",
    "start": "1296470",
    "end": "1298390"
  },
  {
    "text": "there there's also WMI trace logging",
    "start": "1298390",
    "end": "1300790"
  },
  {
    "text": "which you can enable",
    "start": "1300790",
    "end": "1301840"
  },
  {
    "text": "but it's incredibly noisy so it will",
    "start": "1301840",
    "end": "1304150"
  },
  {
    "text": "record the creation and execution of",
    "start": "1304150",
    "end": "1305950"
  },
  {
    "text": "filters and consumers but on a normal",
    "start": "1305950",
    "end": "1307990"
  },
  {
    "text": "window system that happens constantly so",
    "start": "1307990",
    "end": "1310179"
  },
  {
    "text": "I don't think it's a reasonable target",
    "start": "1310179",
    "end": "1311590"
  },
  {
    "text": "for investigative use so we're almost",
    "start": "1311590",
    "end": "1317289"
  },
  {
    "text": "out of time so I'm gonna go pretty",
    "start": "1317289",
    "end": "1318760"
  },
  {
    "text": "quickly to this slide we certainly",
    "start": "1318760",
    "end": "1320289"
  },
  {
    "text": "didn't cover every single source of",
    "start": "1320289",
    "end": "1321640"
  },
  {
    "text": "evidence that's possible on a specific",
    "start": "1321640",
    "end": "1323860"
  },
  {
    "text": "system",
    "start": "1323860",
    "end": "1324580"
  },
  {
    "text": "we do however cover a lot more of these",
    "start": "1324580",
    "end": "1326440"
  },
  {
    "text": "these features in our white paper which",
    "start": "1326440",
    "end": "1328210"
  },
  {
    "text": "should be made public either sometime",
    "start": "1328210",
    "end": "1329470"
  },
  {
    "text": "today or shortly later this week but if",
    "start": "1329470",
    "end": "1331960"
  },
  {
    "text": "you are looking at let's say a Windows",
    "start": "1331960",
    "end": "1333400"
  },
  {
    "text": "workstation looking at the prefetch the",
    "start": "1333400",
    "end": "1335440"
  },
  {
    "text": "prefetch file created for PowerShell DXE",
    "start": "1335440",
    "end": "1337330"
  },
  {
    "text": "can sometimes provide you useful",
    "start": "1337330",
    "end": "1339549"
  },
  {
    "text": "information now again this is only for",
    "start": "1339549",
    "end": "1341770"
  },
  {
    "text": "local execution of PowerShell and then",
    "start": "1341770",
    "end": "1343539"
  },
  {
    "text": "looking at the access files list can",
    "start": "1343539",
    "end": "1345070"
  },
  {
    "text": "sometimes provide you either hey was a",
    "start": "1345070",
    "end": "1346570"
  },
  {
    "text": "PowerShell script run or did the",
    "start": "1346570",
    "end": "1348130"
  },
  {
    "text": "PowerShell activity access files that",
    "start": "1348130",
    "end": "1349899"
  },
  {
    "text": "might be interested in and then another",
    "start": "1349899",
    "end": "1351850"
  },
  {
    "text": "another core place is the registry ryan",
    "start": "1351850",
    "end": "1354640"
  },
  {
    "text": "mentioned a key on the last slide but",
    "start": "1354640",
    "end": "1356409"
  },
  {
    "text": "also looking at the execution policy of",
    "start": "1356409",
    "end": "1357880"
  },
  {
    "text": "powershell a lot of times it's set so",
    "start": "1357880",
    "end": "1360010"
  },
  {
    "text": "that only sign scripts can be run again",
    "start": "1360010",
    "end": "1362140"
  },
  {
    "text": "you can bypass this drivel",
    "start": "1362140",
    "end": "1364210"
  },
  {
    "text": "very easily at the command line itself",
    "start": "1364210",
    "end": "1366159"
  },
  {
    "text": "by setting the the script execution",
    "start": "1366159",
    "end": "1367809"
  },
  {
    "text": "policy - but to bypass but actually in",
    "start": "1367809",
    "end": "1370840"
  },
  {
    "text": "one instance Brian I'd observed an",
    "start": "1370840",
    "end": "1373029"
  },
  {
    "text": "attacker modifying this registry KB we",
    "start": "1373029",
    "end": "1375010"
  },
  {
    "text": "have no idea why they would do this",
    "start": "1375010",
    "end": "1376270"
  },
  {
    "text": "because again it's just a command line",
    "start": "1376270",
    "end": "1377740"
  },
  {
    "text": "switch but it is useful and looking",
    "start": "1377740",
    "end": "1379870"
  },
  {
    "text": "looking at and then finally looking at",
    "start": "1379870",
    "end": "1382539"
  },
  {
    "text": "network traffic analysis specifically",
    "start": "1382539",
    "end": "1384820"
  },
  {
    "text": "for the win RM service PowerShell runs a",
    "start": "1384820",
    "end": "1387279"
  },
  {
    "text": "report 49 85 or 49 or 50 9 85 and 59 86",
    "start": "1387279",
    "end": "1391299"
  },
  {
    "text": "by default however regardless if it's",
    "start": "1391299",
    "end": "1394270"
  },
  {
    "text": "running HTTP or HTTPS is the payloads",
    "start": "1394270",
    "end": "1396429"
  },
  {
    "text": "are always encrypted HTTP just gives you",
    "start": "1396429",
    "end": "1398710"
  },
  {
    "text": "some of the version information with",
    "start": "1398710",
    "end": "1399940"
  },
  {
    "text": "some of the headers and then just",
    "start": "1399940",
    "end": "1401620"
  },
  {
    "text": "looking for anomalies in that flow",
    "start": "1401620",
    "end": "1402669"
  },
  {
    "text": "activity and finally just some of the",
    "start": "1402669",
    "end": "1404860"
  },
  {
    "text": "lessons learned and some of the tips",
    "start": "1404860",
    "end": "1407169"
  },
  {
    "text": "that we'd give first and foremost",
    "start": "1407169",
    "end": "1408970"
  },
  {
    "text": "upgrading a PowerShell 300 or later and",
    "start": "1408970",
    "end": "1410919"
  },
  {
    "text": "enabling module logging is your best bet",
    "start": "1410919",
    "end": "1412570"
  },
  {
    "text": "on a single source system of capturing",
    "start": "1412570",
    "end": "1415240"
  },
  {
    "text": "specific commands being executed beyond",
    "start": "1415240",
    "end": "1417970"
  },
  {
    "text": "that though kind of looking at a higher",
    "start": "1417970",
    "end": "1419230"
  },
  {
    "text": "level across an enterprise's baseline",
    "start": "1419230",
    "end": "1420909"
  },
  {
    "text": "and legitimate PowerShell usage so",
    "start": "1420909",
    "end": "1422470"
  },
  {
    "text": "looking at registry keys and your",
    "start": "1422470",
    "end": "1424600"
  },
  {
    "text": "execution policy how do you name",
    "start": "1424600",
    "end": "1426820"
  },
  {
    "text": "somewhere they always located do you run",
    "start": "1426820",
    "end": "1428679"
  },
  {
    "text": "remoting if you are running remoting who",
    "start": "1428679",
    "end": "1430659"
  },
  {
    "text": "are the users that should be running or",
    "start": "1430659",
    "end": "1431980"
  },
  {
    "text": "routing and what subnets are they",
    "start": "1431980",
    "end": "1433600"
  },
  {
    "text": "running them from so baselining that and",
    "start": "1433600",
    "end": "1436149"
  },
  {
    "text": "then looking for anomalies is a really",
    "start": "1436149",
    "end": "1438159"
  },
  {
    "text": "good way of detecting malicious",
    "start": "1438159",
    "end": "1439600"
  },
  {
    "text": "PowerShell usage Thanks so yeah in",
    "start": "1439600",
    "end": "1445720"
  },
  {
    "text": "closing we just wanted to acknowledge a",
    "start": "1445720",
    "end": "1447279"
  },
  {
    "text": "lot of the researchers and co-workers",
    "start": "1447279",
    "end": "1448840"
  },
  {
    "text": "that have helped us out with this work",
    "start": "1448840",
    "end": "1450970"
  },
  {
    "text": "as well as done some of the",
    "start": "1450970",
    "end": "1452049"
  },
  {
    "text": "groundbreaking research in use of",
    "start": "1452049",
    "end": "1453429"
  },
  {
    "text": "PowerShell for both attack and defense",
    "start": "1453429",
    "end": "1455279"
  },
  {
    "text": "I'd also like to thanks a lot of folks",
    "start": "1455279",
    "end": "1458320"
  },
  {
    "text": "at Microsoft likely Holmes and Dave",
    "start": "1458320",
    "end": "1460750"
  },
  {
    "text": "Wyatt who supported this research quite",
    "start": "1460750",
    "end": "1462279"
  },
  {
    "text": "a bit um I will say that from their",
    "start": "1462279",
    "end": "1464500"
  },
  {
    "text": "perspective it's a challenging situation",
    "start": "1464500",
    "end": "1465820"
  },
  {
    "text": "because again if someone has",
    "start": "1465820",
    "end": "1467470"
  },
  {
    "text": "administrator on a Windows box all bets",
    "start": "1467470",
    "end": "1469419"
  },
  {
    "text": "are off that being said they are aware",
    "start": "1469419",
    "end": "1471669"
  },
  {
    "text": "that there could be better ways to",
    "start": "1471669",
    "end": "1472899"
  },
  {
    "text": "monitor usage of PowerShell and I've",
    "start": "1472899",
    "end": "1475090"
  },
  {
    "text": "been told that there are gonna be some",
    "start": "1475090",
    "end": "1476230"
  },
  {
    "text": "things coming down the line that will",
    "start": "1476230",
    "end": "1477519"
  },
  {
    "text": "make it even easier with what's built",
    "start": "1477519",
    "end": "1479379"
  },
  {
    "text": "into the operating system to monitor",
    "start": "1479379",
    "end": "1480789"
  },
  {
    "text": "stuff because the fact that matters",
    "start": "1480789",
    "end": "1482860"
  },
  {
    "text": "attackers are going to continue to learn",
    "start": "1482860",
    "end": "1484210"
  },
  {
    "text": "how to leverage this and we expect to",
    "start": "1484210",
    "end": "1486220"
  },
  {
    "text": "see more and more of its usage so as",
    "start": "1486220",
    "end": "1488019"
  },
  {
    "text": "Matt mentioned earlier getting that",
    "start": "1488019",
    "end": "1489909"
  },
  {
    "text": "baselining done and starting to",
    "start": "1489909",
    "end": "1491139"
  },
  {
    "text": "understand how PowerShell is if at all",
    "start": "1491139",
    "end": "1493059"
  },
  {
    "text": "legitimate ly used in your environment",
    "start": "1493059",
    "end": "1494230"
  },
  {
    "text": "will give you a big leg up when you have",
    "start": "1494230",
    "end": "1496149"
  },
  {
    "text": "to start tracking or monitoring for an",
    "start": "1496149",
    "end": "1497830"
  },
  {
    "text": "attackers use of it if you have any",
    "start": "1497830",
    "end": "1500169"
  },
  {
    "text": "questions once again the white paper",
    "start": "1500169",
    "end": "1501700"
  },
  {
    "text": "that will be releasing as a lot more",
    "start": "1501700",
    "end": "1502960"
  },
  {
    "text": "detail also please feel free to either",
    "start": "1502960",
    "end": "1505059"
  },
  {
    "text": "email Madurai or you can reach out to us",
    "start": "1505059",
    "end": "1506860"
  },
  {
    "text": "on Twitter but thanks again for",
    "start": "1506860",
    "end": "1508480"
  },
  {
    "text": "attending I'm not sure if we have time",
    "start": "1508480",
    "end": "1510370"
  },
  {
    "text": "for questions I'm telling it okay I was",
    "start": "1510370",
    "end": "1512350"
  },
  {
    "text": "told no so we'll be around so grab us if",
    "start": "1512350",
    "end": "1514539"
  },
  {
    "text": "you have any questions otherwise enjoy",
    "start": "1514539",
    "end": "1515919"
  },
  {
    "text": "your conference and thanks again for",
    "start": "1515919",
    "end": "1516879"
  },
  {
    "text": "coming",
    "start": "1516879",
    "end": "1519240"
  }
]