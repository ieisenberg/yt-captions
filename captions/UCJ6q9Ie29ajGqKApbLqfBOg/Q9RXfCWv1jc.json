[
  {
    "text": "[Music] [Laughter]",
    "start": "1610",
    "end": "10260"
  },
  {
    "text": "this is the over the A and in the device track in Palace 3 our first briefing is one security gets in the way tools for",
    "start": "10840",
    "end": "18240"
  },
  {
    "text": "pen Testing mobile apps that use certificate pinning and that's being presented by Justine Osborne and Alvin",
    "start": "18240",
    "end": "24680"
  },
  {
    "text": "deette",
    "start": "24680",
    "end": "27680"
  },
  {
    "text": "hi everybody thanks for coming to our talk my name is Justine Osborne and this is my co-presenter alband DEET and we",
    "start": "32520",
    "end": "37760"
  },
  {
    "text": "are Security Consultants at ISC partners and today we're going to be talking about when security gets in the way",
    "start": "37760",
    "end": "43879"
  },
  {
    "text": "pesting mobile apps that use certificate pinning so this is an outline of what",
    "start": "43879",
    "end": "49039"
  },
  {
    "text": "we're going to be talking about today first we'll give a little definition and background about certificate pinning and",
    "start": "49039",
    "end": "54840"
  },
  {
    "text": "its particular consequences for mobile blackbox testing um and then we'll talk about two tools we wrote an iOS tool a",
    "start": "54840",
    "end": "62719"
  },
  {
    "text": "tool for iOS and a tool for Android um to defeat certificate pinning for the pent tester um so we have a lot to cover",
    "start": "62719",
    "end": "69600"
  },
  {
    "text": "today we have two tools to talk about and so please excuse that we go quickly through these slides and if you have any",
    "start": "69600",
    "end": "75080"
  },
  {
    "text": "questions we can be happy to give you more details afterwards so now I'm going to hand it",
    "start": "75080",
    "end": "80439"
  },
  {
    "text": "off to Alban to talk about what certificate pinning is all right hi everyone um so yeah I'm going to quickly",
    "start": "80439",
    "end": "87040"
  },
  {
    "text": "explain what certificate ping is um basically the idea is that when a client connects to a server um over https the",
    "start": "87040",
    "end": "95000"
  },
  {
    "text": "client knows exactly what the server certificate is going to be so basically the server certificate is hardcoded into",
    "start": "95000",
    "end": "101159"
  },
  {
    "text": "the client um it's a great security feat because uh it reduces the threat of a",
    "start": "101159",
    "end": "106799"
  },
  {
    "text": "rock CA or a CA getting compromised uh which is good because those things do",
    "start": "106799",
    "end": "112000"
  },
  {
    "text": "happen um and it's actually already being done for example in Chrome for Google services so if you use Chrome uh",
    "start": "112000",
    "end": "119000"
  },
  {
    "text": "for example to connect to Gmail uh Chrome knows that the Gmail certificate was signed uh but by that one ver sign C",
    "start": "119000",
    "end": "126680"
  },
  {
    "text": "certificate and it will reject any other certificate uh and it's also being done in mobile apps which is what we're",
    "start": "126680",
    "end": "132640"
  },
  {
    "text": "talking about today uh so for example Square Twitter c. are already doing",
    "start": "132640",
    "end": "138400"
  },
  {
    "text": "it uh so it's great for the users but um if you ever have to do a penetration",
    "start": "138400",
    "end": "143680"
  },
  {
    "text": "testing of an app that uses certificate pinning uh you'll see that it sort of gets in your way uh and the reason why",
    "start": "143680",
    "end": "150319"
  },
  {
    "text": "is that uh when you have to test an app one of the big thing you have to do is um intercept the application https",
    "start": "150319",
    "end": "157319"
  },
  {
    "text": "traffic uh using a proxy uh usually doing that is pretty simple uh basically",
    "start": "157319",
    "end": "162920"
  },
  {
    "text": "you add the proxy C certificate to the device trustor um and then you run the app on",
    "start": "162920",
    "end": "168480"
  },
  {
    "text": "the device and it's going to connect to the proxy uh and the proxy will be able to masquerade as the server uh so",
    "start": "168480",
    "end": "175239"
  },
  {
    "text": "usually that setup is pretty simple to do uh however if the app uses certificate pinning uh this will not",
    "start": "175239",
    "end": "180560"
  },
  {
    "text": "work uh and then you'll have to find ways to uh bypass certificate pinning and that's not really",
    "start": "180560",
    "end": "187200"
  },
  {
    "text": "simple uh there are a few ways to do it for example you could uh open the apps package uh change the certificates in it",
    "start": "187200",
    "end": "194560"
  },
  {
    "text": "or patch the SSL validation method and then repackage the app and sideo it or",
    "start": "194560",
    "end": "199799"
  },
  {
    "text": "you could use a debugger uh but those Solutions are already simple they take time um so",
    "start": "199799",
    "end": "206319"
  },
  {
    "text": "Justin and I thought it would be useful to release some tools to make that easy uh so as Justin mentioned we have an iOS",
    "start": "206319",
    "end": "212599"
  },
  {
    "text": "tool and an Android Tool uh and the idea is that we're raing them so that tester",
    "start": "212599",
    "end": "218280"
  },
  {
    "text": "can spend more time on the actual testing uh and less time on getting the right",
    "start": "218280",
    "end": "223879"
  },
  {
    "text": "setup uh I'm going to start with iOS first quickly describe how you do certificate pinning in iOS and then I'm",
    "start": "223879",
    "end": "230920"
  },
  {
    "text": "just going to talk about the tool um so if you want to do certificate pinning",
    "start": "230920",
    "end": "236120"
  },
  {
    "text": "first you have to know how to do network communications uh there are few apis you can use but most apps use ANL connection",
    "start": "236120",
    "end": "244879"
  },
  {
    "text": "uh which is a high level API where you basically give it a URL and it's going to connect connect to that URL and get",
    "start": "244879",
    "end": "251720"
  },
  {
    "text": "the data uh and by default it's going to verify the Ser certificate for https",
    "start": "251720",
    "end": "257880"
  },
  {
    "text": "URLs um but developers can override that certificate validation uh and do it",
    "start": "257880",
    "end": "264320"
  },
  {
    "text": "themselves uh maybe because they want to disable certificate validation hopefully for testing only uh or they want to",
    "start": "264320",
    "end": "270759"
  },
  {
    "text": "implement certificate ping so if you look at NSL connection uh",
    "start": "270759",
    "end": "276960"
  },
  {
    "text": "the method right there is the Constructor in it request delegate uh so",
    "start": "276960",
    "end": "282360"
  },
  {
    "text": "it has two parameters the first one request uh is basically the UR you want to connect to uh and the second one",
    "start": "282360",
    "end": "289199"
  },
  {
    "text": "delegate um is an object that has to implement specific",
    "start": "289199",
    "end": "294400"
  },
  {
    "text": "methods um and those are the method I'm talking about uh so for example the",
    "start": "294400",
    "end": "300240"
  },
  {
    "text": "method in the method group group at the bottom are all related to how the connection is uh progressing whether",
    "start": "300240",
    "end": "307600"
  },
  {
    "text": "it's succeeding or failing for example uh connection did receive data so that method gets called well when the",
    "start": "307600",
    "end": "314240"
  },
  {
    "text": "connection received data and then uh you can write code to uh decide what you want what you want to",
    "start": "314240",
    "end": "319800"
  },
  {
    "text": "happen uh when this happens uh but what what's interesting to us today are the",
    "start": "319800",
    "end": "326199"
  },
  {
    "text": "method uh in the connection authentication group because that's how do a custom certificate validation and",
    "start": "326199",
    "end": "332319"
  },
  {
    "text": "there are actually two ways to do it uh the first one is to just Implement that",
    "start": "332319",
    "end": "337680"
  },
  {
    "text": "one method in the delegate uh connection will send request for authentication challenge so if the delegate implements",
    "start": "337680",
    "end": "344000"
  },
  {
    "text": "that method then gets called um when the connection receiv the server certificate",
    "start": "344000",
    "end": "349680"
  },
  {
    "text": "and you can within that method you can check the certificate the way you want and then reply whether uh you want to",
    "start": "349680",
    "end": "355240"
  },
  {
    "text": "accept the certificate or reject it um and the other way to do it is really similar except it relies on three method",
    "start": "355240",
    "end": "362520"
  },
  {
    "text": "instead of one but it's the same idea uh and it's depreciated uh but there are lots of app",
    "start": "362520",
    "end": "368520"
  },
  {
    "text": "that still use this uh method um so that's how you do certificate pinning uh now let's talk",
    "start": "368520",
    "end": "374960"
  },
  {
    "text": "about the tool so it's called iOS SSL kill switch and uh it's a mobile substrate extension so mobile substrate",
    "start": "374960",
    "end": "382000"
  },
  {
    "text": "is something that you get uh when you jailbreak uh device um and so what",
    "start": "382000",
    "end": "387880"
  },
  {
    "text": "mobile sub is basically a it's a framework to make it easy to patch the",
    "start": "387880",
    "end": "393199"
  },
  {
    "text": "system API and patches are called extension uh so there are lot of tools",
    "start": "393199",
    "end": "399919"
  },
  {
    "text": "that rely on mobile substrate one example is um winter board uh so it's an",
    "start": "399919",
    "end": "405000"
  },
  {
    "text": "extension that hooks into the springboard apis uh so that user can uh change their home screen uh as you can",
    "start": "405000",
    "end": "411039"
  },
  {
    "text": "see in the picture which is like a real um iPhone iPhone home screen um so back to the tool as I said",
    "start": "411039",
    "end": "419120"
  },
  {
    "text": "it's a mobile sub extension uh and we're just going to jump straight into the code because it's it's pretty",
    "start": "419120",
    "end": "424680"
  },
  {
    "text": "straightforward uh this code is basically the main function of the",
    "start": "424680",
    "end": "429879"
  },
  {
    "text": "extension um the first thing you have to notice uh at the top is the person hook NSL",
    "start": "429879",
    "end": "435520"
  },
  {
    "text": "connection uh which means that I want to change something in NSL connection then the next line is uh",
    "start": "435520",
    "end": "442639"
  },
  {
    "text": "method declaration which is init request delegate so that's NSL connections Constructor we talked about that uh so",
    "start": "442639",
    "end": "450080"
  },
  {
    "text": "what this means is that I want to change ANL connections Constructor uh and if if we look at how",
    "start": "450080",
    "end": "456160"
  },
  {
    "text": "I'm changing it um basically I'm creating an object that I call a delegate proxy using the original",
    "start": "456160",
    "end": "463680"
  },
  {
    "text": "delegate um and we're going to look at how the get proxy works but first the last thing you have to see to notice is",
    "start": "463680",
    "end": "470680"
  },
  {
    "text": "that person orid uh which means that I want to call the original method I'm hooking so in that case I want to call",
    "start": "470680",
    "end": "477599"
  },
  {
    "text": "the original Constructor uh but what's important is that the first argument is the same as before so",
    "start": "477599",
    "end": "484440"
  },
  {
    "text": "I'm giving the request the original request uh but then I replace the delegate with my delegate",
    "start": "484440",
    "end": "490800"
  },
  {
    "text": "proxy um and so if we look at how the delegate proxy Works basically there are",
    "start": "490800",
    "end": "497280"
  },
  {
    "text": "two different behaviors um the first one is when the method get that get that gets called uh is related to how the me",
    "start": "497280",
    "end": "506000"
  },
  {
    "text": "the connection is progressing so for example connection did receive response uh when that happens the delegate proxy",
    "start": "506000",
    "end": "512320"
  },
  {
    "text": "is just going to call the exact same method in the delegate and return the result so basically it's just forwarding",
    "start": "512320",
    "end": "519159"
  },
  {
    "text": "the call uh to the original delegate however um when the method that",
    "start": "519159",
    "end": "525120"
  },
  {
    "text": "gets called is related to a certificate validation so for example connection will send requests for authentication",
    "start": "525120",
    "end": "531600"
  },
  {
    "text": "challenge uh in that case the delegate proxy is not going to forward the call to the original delegate and it's just",
    "start": "531600",
    "end": "538160"
  },
  {
    "text": "going to do the validation itself itself uh and basically those few lines of code you can see are how you uh say you want",
    "start": "538160",
    "end": "546120"
  },
  {
    "text": "to accept all certificates so basically any certificate will uh pass the valid",
    "start": "546120",
    "end": "551360"
  },
  {
    "text": "that validation um so that's the idea it's Sol of a simplified version of the code",
    "start": "551360",
    "end": "556680"
  },
  {
    "text": "but this this would compile uh and I'm just going to show you a quick demo um",
    "start": "556680",
    "end": "563200"
  },
  {
    "text": "so that's a MacBook screen uh on the left you can see the screen of a jailbroken iPad so it's a real iPad it's",
    "start": "563200",
    "end": "569079"
  },
  {
    "text": "not simulator um and what you have to notice there is that uh I set up an HTTP proxy",
    "start": "569079",
    "end": "576279"
  },
  {
    "text": "in the Wi-Fi settings uh and the proxy is what it's what's on the right of the screen so",
    "start": "576279",
    "end": "582640"
  },
  {
    "text": "that's the B proxy uh so basically I've set up the iPad so that all the traffic is going to go through burp uh on the",
    "start": "582640",
    "end": "589320"
  },
  {
    "text": "right um and so the first thing I'm going to do is what you would do as a penetration",
    "start": "589320",
    "end": "596440"
  },
  {
    "text": "tester uh when you have to test an IOS app so so I'm going to add the B Cs certificate uh to the device",
    "start": "596440",
    "end": "603720"
  },
  {
    "text": "RoR uh and usually that's all you need to do um so that's what I just did um",
    "start": "603720",
    "end": "612440"
  },
  {
    "text": "and now I'm going to show you that the setup is working so I'm using Safari connecting to https",
    "start": "612440",
    "end": "618839"
  },
  {
    "text": "google.com uh and we can see the traffic on the right uh and Safar isn't",
    "start": "618839",
    "end": "624079"
  },
  {
    "text": "displaying any warnings or anything like that so basically the setup is working um",
    "start": "624079",
    "end": "630240"
  },
  {
    "text": "and now I'm going to try to log into uh Twitter using the Twitter app uh as I",
    "start": "630240",
    "end": "636040"
  },
  {
    "text": "mentioned before Twitter is doing certificate pinning um so I'm going to",
    "start": "636040",
    "end": "641160"
  },
  {
    "text": "try to log into Twitter um and because of certificate pinning this is going to fail as you can",
    "start": "641160",
    "end": "648760"
  },
  {
    "text": "see uh could not authenticate you this is related to certificate pinning um so",
    "start": "648760",
    "end": "654760"
  },
  {
    "text": "yeah it's not working can't see the traffic so now I'm going to use the tool with talking about uh it's called iOS",
    "start": "654760",
    "end": "661240"
  },
  {
    "text": "SSL kill switch once you install it you get that new menu in the settings uh where all you can do is enable it or",
    "start": "661240",
    "end": "667680"
  },
  {
    "text": "disable it so I just enabled it um now back to the app so first you have to",
    "start": "667680",
    "end": "674399"
  },
  {
    "text": "restart the app so that's what I'm doing right now um and then starting it again and",
    "start": "674399",
    "end": "682279"
  },
  {
    "text": "I'm going to try to sign in uh well you can already see some of the traffic uh going through um",
    "start": "682279",
    "end": "690000"
  },
  {
    "text": "but I'm actually going to sign in just to show you uh that it's working",
    "start": "690000",
    "end": "696440"
  },
  {
    "text": "um and and it worked um and you can see all",
    "start": "696440",
    "end": "702560"
  },
  {
    "text": "the traffic of the app uh which is what we trying to do um so yeah it's pretty",
    "start": "702560",
    "end": "708079"
  },
  {
    "text": "simple to use uh this request is the login request uh with my password and um",
    "start": "708079",
    "end": "715000"
  },
  {
    "text": "yeah pretty simple to use uh hopefully quite useful uh so yeah check it out and",
    "start": "715000",
    "end": "721720"
  },
  {
    "text": "uh now I'm going to let Justin talk about Android all right so um",
    "start": "721720",
    "end": "728279"
  },
  {
    "text": "certificate validation and pending on Android pretty much the same deal as what Android I mean Android what albon",
    "start": "728279",
    "end": "734279"
  },
  {
    "text": "previously spoke about um one of the main differences is that the device trust store can't be modified until and",
    "start": "734279",
    "end": "740399"
  },
  {
    "text": "by the user until Android 4.0 so that can make it even more difficult for pen testers to test apps even if they're not",
    "start": "740399",
    "end": "747160"
  },
  {
    "text": "using certificate pinning um so certificate pinning is implemented by an app specific trust store so a key store",
    "start": "747160",
    "end": "754000"
  },
  {
    "text": "is bundled with the app and then a trust store is Created from that key store and used for the SSL connection and many of",
    "start": "754000",
    "end": "760199"
  },
  {
    "text": "these common methods for certificate pinning have been outlined on moxy's blog and a lot of apps will follow these",
    "start": "760199",
    "end": "766079"
  },
  {
    "text": "recommendations and um so these common methods are what we're focused on for the first version of The",
    "start": "766079",
    "end": "771519"
  },
  {
    "text": "Tool uh so there are many possible ways to implement a bypass um as albon",
    "start": "771519",
    "end": "776720"
  },
  {
    "text": "mentioned we can repackage the app we can modify the app repackage and S load",
    "start": "776720",
    "end": "781800"
  },
  {
    "text": "um and there are some other options here such as native code hooking like Colin mullner just released some tools um for",
    "start": "781800",
    "end": "788440"
  },
  {
    "text": "that for Android but I chose to use a jdwp debugger so what is a jdwp debugger well",
    "start": "788440",
    "end": "795360"
  },
  {
    "text": "jdwp stands for the Java debug wire protocol um this is a standard Java debugging protocol if you've ever used",
    "start": "795360",
    "end": "801720"
  },
  {
    "text": "eclipse or net beans to debug an a Java application this is the protocol that's being used in the background um and",
    "start": "801720",
    "end": "808880"
  },
  {
    "text": "there's 's a set of apis called the Java debug interface which are the main apis I used for this tool um and there's also",
    "start": "808880",
    "end": "816240"
  },
  {
    "text": "python bindings available through a tool called and buug I didn't use that for this tool but probably everything that",
    "start": "816240",
    "end": "821480"
  },
  {
    "text": "I've done could be done with that tool as well um so what can we do with the jdwp",
    "start": "821480",
    "end": "827240"
  },
  {
    "text": "debugger we can do all the normal debugging tasks that we can do with debuggers you might be more familiar with um set breakpoint step Etc um and",
    "start": "827240",
    "end": "835240"
  },
  {
    "text": "then once we're suspended we can retrieve the current frame the current frame object we can actually invoke",
    "start": "835240",
    "end": "840959"
  },
  {
    "text": "methods on the current frame object we can get and set local variables and argument references we can load",
    "start": "840959",
    "end": "847079"
  },
  {
    "text": "arbitrary classes even from a different app um on the OS um and we can do a lot",
    "start": "847079",
    "end": "854079"
  },
  {
    "text": "more so I chose to use the jdwp debugger because I wanted to for the most part with Android apps we are testing at the",
    "start": "854079",
    "end": "860560"
  },
  {
    "text": "Java or dvic level um code that's where most code is written some apps will use",
    "start": "860560",
    "end": "865600"
  },
  {
    "text": "native code but most apps stick to just the Java code so I wanted to to stay with a tool that was close to the",
    "start": "865600",
    "end": "871959"
  },
  {
    "text": "language that I'm testing um so there are two common ways to do SSL on Android One is using the",
    "start": "871959",
    "end": "878000"
  },
  {
    "text": "javax https URL connection the other is using the org. Apache HTTP libraries um",
    "start": "878000",
    "end": "884199"
  },
  {
    "text": "for both the developer will Implement certificate pinning by bundling a key store with the app and creating a custom",
    "start": "884199",
    "end": "891079"
  },
  {
    "text": "trust manager with the key store in turn using that to initialize an SSL context",
    "start": "891079",
    "end": "896320"
  },
  {
    "text": "which is then used to retrieve an SSL socket Factory which is which is the socket that's used for the SSL",
    "start": "896320",
    "end": "901959"
  },
  {
    "text": "connection so this goes in more detail about um those exact steps but what",
    "start": "901959",
    "end": "907240"
  },
  {
    "text": "we're really interesting in here is this box at the bottom where um an app might",
    "start": "907240",
    "end": "912279"
  },
  {
    "text": "call set SSL socket Factory and there there are different ways to do this but for the first version of the tool we're focusing on um sort of the most simple",
    "start": "912279",
    "end": "919680"
  },
  {
    "text": "ways of of doing this um so my tool is very simply going to break on this",
    "start": "919680",
    "end": "924959"
  },
  {
    "text": "method um and take the local variable that is the pinning SSL socket Factory",
    "start": "924959",
    "end": "931000"
  },
  {
    "text": "and replace it with an SSL socket Factory I've created that has a trust",
    "start": "931000",
    "end": "936240"
  },
  {
    "text": "all trust manager so will'll trust all certificates similarly with the Apache",
    "start": "936240",
    "end": "941279"
  },
  {
    "text": "libraries um same deal the only difference is that uh Pache uses schemes to register um the SSL socket Factory so",
    "start": "941279",
    "end": "950759"
  },
  {
    "text": "um what I'm going to do with my tool is I'm actually not breaking here but a little bit uh lower down each time a",
    "start": "950759",
    "end": "957079"
  },
  {
    "text": "connection is made um um I'm going to register a new scheme that will override",
    "start": "957079",
    "end": "963800"
  },
  {
    "text": "any schemes registered by the apps so if the app has registered in HTTPS scheme my um my tool is going to override that",
    "start": "963800",
    "end": "971600"
  },
  {
    "text": "with a scheme that has registered uh that is has been made with a trust all",
    "start": "971600",
    "end": "976759"
  },
  {
    "text": "trust manager so all certificates will be trusted so to reiterate um it's",
    "start": "976759",
    "end": "983279"
  },
  {
    "text": "basically a scriptable or programmatic debugger um we're going to break on certificate pinning implement ation",
    "start": "983279",
    "end": "989319"
  },
  {
    "text": "classes and methods and then directly manipulate objects change local variables call methods whatever we need",
    "start": "989319",
    "end": "995480"
  },
  {
    "text": "to do to force use of the trust all trust manager so the first version of the tool",
    "start": "995480",
    "end": "1002240"
  },
  {
    "text": "is uh is a pretty simple implementation focusing on these common ways of doing SSL um it's a plug-in architecture so",
    "start": "1002240",
    "end": "1010079"
  },
  {
    "text": "I've written a bunch of code in the in the um that can be used by the plugin um",
    "start": "1010079",
    "end": "1015319"
  },
  {
    "text": "and then the plugin can Implement a setup events where they set up all their break points and handle events where all those break points are then handled um",
    "start": "1015319",
    "end": "1022440"
  },
  {
    "text": "and I've included SSL bypass jdi plug-in with the tool um which will bypass these",
    "start": "1022440",
    "end": "1027760"
  },
  {
    "text": "common methods of doing SSL um but one thing to note is that a plugin could be written for just about anything that",
    "start": "1027760",
    "end": "1033360"
  },
  {
    "text": "you'd want to do um so that's going to be sort of the future versions of this tool will um will provide that and more",
    "start": "1033360",
    "end": "1042199"
  },
  {
    "text": "comprehensive solutions for the um bypassing certificate pinning problem and so now I'm going to do a",
    "start": "1042199",
    "end": "1048360"
  },
  {
    "text": "quick demo so on the left we have uh burp and on",
    "start": "1048360",
    "end": "1057440"
  },
  {
    "text": "the right we have the emulator um and I am also testing against the Twitter app",
    "start": "1057440",
    "end": "1062480"
  },
  {
    "text": "um I'm not going to show you the setup because we're pretty short on time but I have set up a device proxy and it's",
    "start": "1062480",
    "end": "1068480"
  },
  {
    "text": "pointing to um the burp proxy so I'm going to try to sign in the first",
    "start": "1068480",
    "end": "1075640"
  },
  {
    "text": "time and I'm going to get an error that says an error occurred while signing in in the background this is a certificate",
    "start": "1075640",
    "end": "1081679"
  },
  {
    "text": "path validation error now I start up my tool I attached to the port the jdwp",
    "start": "1081679",
    "end": "1087120"
  },
  {
    "text": "port that the Twitter app is listening on um once I have connected I'm going to",
    "start": "1087120",
    "end": "1092440"
  },
  {
    "text": "sign in and now my breakpoints are hit and I do some other stuff that I didn't talk",
    "start": "1092440",
    "end": "1097960"
  },
  {
    "text": "about like set an allow all host name verifier um and then now we'll see that",
    "start": "1097960",
    "end": "1105600"
  },
  {
    "text": "um the new scheme has been set and now we can see the traffic um and it's actually going to respond",
    "start": "1105600",
    "end": "1111679"
  },
  {
    "text": "with an invalid password because I don't really have a four character password and that's",
    "start": "1111679",
    "end": "1119320"
  },
  {
    "text": "[Applause]",
    "start": "1120120",
    "end": "1123630"
  },
  {
    "text": "it so this is where you can find our tools they're on GitHub um the iOS SSL kill switch is already up there to",
    "start": "1126159",
    "end": "1132679"
  },
  {
    "text": "download the Android tool will be up next week it's not quite finished yet um",
    "start": "1132679",
    "end": "1137760"
  },
  {
    "text": "and then if you have any questions comments please feel free to email us and if we have any time right now we can",
    "start": "1137760",
    "end": "1144320"
  },
  {
    "text": "take some questions no",
    "start": "1144320",
    "end": "1150679"
  },
  {
    "text": "time but feel free to yeah feel free to come grab us afterwards and thanks for",
    "start": "1151320",
    "end": "1157120"
  },
  {
    "text": "coming all right",
    "start": "1157120",
    "end": "1161200"
  },
  {
    "text": "[Applause] thanks our next briefing will be be",
    "start": "1162860",
    "end": "1168960"
  },
  {
    "text": "embedded device firmware vulnerability hunting using Frack by an sway all",
    "start": "1168960",
    "end": "1175480"
  },
  {
    "text": "right all right uh thank you guys first I like to thank my colleague Mike",
    "start": "1175480",
    "end": "1180880"
  },
  {
    "text": "Costello for helping out with the demo um and I will also be talking about iOS but I'm talking about iOS of the big eye",
    "start": "1180880",
    "end": "1187760"
  },
  {
    "text": "that runs on very sexy router hardware and not phones and such um okay so I'm",
    "start": "1187760",
    "end": "1193200"
  },
  {
    "text": "talking about Frack which stands for the fmer reverse analysis console a little bit about who I am and what I do I am a",
    "start": "1193200",
    "end": "1199520"
  },
  {
    "text": "fifth year PhD candidate at columia University and I am also a co-founder of a company called red balloon security",
    "start": "1199520",
    "end": "1205919"
  },
  {
    "text": "where we engineer host based defenses for ubiquitous uh embedded systems um essentially we make endpoint protection",
    "start": "1205919",
    "end": "1212400"
  },
  {
    "text": "for everything that is but isn't a computer so I'm talking about devices like IP phones Network printers um",
    "start": "1212400",
    "end": "1218640"
  },
  {
    "text": "teleconference units you name it on the academic side here are some of my past",
    "start": "1218640",
    "end": "1224000"
  },
  {
    "text": "Publications that deal with the defense and exploitation of these ubiquitous embedded systems and on the offensive",
    "start": "1224000",
    "end": "1229919"
  },
  {
    "text": "side I've been doing some tinkering the last few years last year I was at uh blackhe hat and I presented this Cisco",
    "start": "1229919",
    "end": "1236640"
  },
  {
    "text": "iOS version agnostic root kit so a rot kit that runs in a large number of um unknown Cisco iOS binaries um router",
    "start": "1236640",
    "end": "1245120"
  },
  {
    "text": "firmwares and a few months ago I discovered the hpfu firmware modification vulnerability that allows",
    "start": "1245120",
    "end": "1251360"
  },
  {
    "text": "arbitrary firmware modification through a malicious printed document so just out of curiosity how many of you folks have heard about that good all right so how",
    "start": "1251360",
    "end": "1259480"
  },
  {
    "text": "many of you guys went out and updated the firmware on the PRS that you you own one okay how many of you guys went out",
    "start": "1259480",
    "end": "1265919"
  },
  {
    "text": "and updated firmer to printers you don't own one all right we're good we're doing good um so as part of my chaos",
    "start": "1265919",
    "end": "1273640"
  },
  {
    "text": "communication Congress presentation I wrote a root kit for this laser jet printer that essentially among other",
    "start": "1273640",
    "end": "1279000"
  },
  {
    "text": "things turned it into a reverse IP proxy now this is useful because it allows an attacker to pen to Tunnel through the",
    "start": "1279000",
    "end": "1285559"
  },
  {
    "text": "perimeter firewall through this proxy printer and and then the attacker can use that tunnel to compromise um general",
    "start": "1285559",
    "end": "1292640"
  },
  {
    "text": "purpose machines behind the perimeter firewall so for my demonstration I just use met flit to autoone through this",
    "start": "1292640",
    "end": "1298080"
  },
  {
    "text": "proxy printer um to own machines inside the corporate or the protected Network",
    "start": "1298080",
    "end": "1303200"
  },
  {
    "text": "and I started working on a third embedded device type that will remain unnamed for now and I realized that the",
    "start": "1303200",
    "end": "1308679"
  },
  {
    "text": "workflow that I'm using for all these different projects um seem pretty similar so the work that I did for the Cisco iOS R kit and the work that I did",
    "start": "1308679",
    "end": "1315440"
  },
  {
    "text": "for the HP Laser Jet uh R kit and also all the defensive that I do at riboon security seem to follow a very uh",
    "start": "1315440",
    "end": "1322640"
  },
  {
    "text": "similar workflow that usually starts with the analysis of original binary firmware image that I get from the",
    "start": "1322640",
    "end": "1328240"
  },
  {
    "text": "vendor um and this makes sense because if you want to understand how a mysterious embedded system works you want to be able to run some useful",
    "start": "1328240",
    "end": "1334159"
  },
  {
    "text": "analysis on the code and the data that reside on these systems right and and by useful analysis I mean static analysis",
    "start": "1334159",
    "end": "1341320"
  },
  {
    "text": "binary uh Dynamic analysis um vulnerable Library identification um tank tracking",
    "start": "1341320",
    "end": "1346880"
  },
  {
    "text": "symbolic execution analysis so these are all things that we understand how to do as security researchers for general",
    "start": "1346880",
    "end": "1352440"
  },
  {
    "text": "purpose computers but of course we're working with embedded systems and things are a little bit more",
    "start": "1352440",
    "end": "1358120"
  },
  {
    "text": "complicated in order to analyze the binary firmware that you get from the vendor uh you have to go through this",
    "start": "1358120",
    "end": "1364120"
  },
  {
    "text": "laborious process called unpacking the the binary firmware image and reverse engineering this mysterious undocumented",
    "start": "1364120",
    "end": "1370840"
  },
  {
    "text": "proprietary firmware packing format um this is different for every vendor and this doesn't actually buy the vendor any",
    "start": "1370840",
    "end": "1376840"
  },
  {
    "text": "security this is all just security through security but it does mean that for a security researcher to get to a",
    "start": "1376840",
    "end": "1382600"
  },
  {
    "text": "point where we can do useful analysis you are going to have to spend a lot of time reverse engineering these proprietary formats um and every vendor",
    "start": "1382600",
    "end": "1390320"
  },
  {
    "text": "is different the process is usually not the same but generally it follows this kind of procedure first I start by",
    "start": "1390320",
    "end": "1396640"
  },
  {
    "text": "looking for um what I call a package Manifest this is usually a binary structure that tells me how many records",
    "start": "1396640",
    "end": "1402799"
  },
  {
    "text": "are are contained inside this firware image and there's usually more than one right this usually tells me um the sizes",
    "start": "1402799",
    "end": "1408200"
  },
  {
    "text": "of the um records and in some cases they en codent gives me hint about what each",
    "start": "1408200",
    "end": "1414320"
  },
  {
    "text": "record contains now after I figured this out I go out and I find I extract every single binary record and I try to figure",
    "start": "1414320",
    "end": "1421440"
  },
  {
    "text": "out whether This Record contains code or data whether this record um is compressed Aus skated or encrypted in",
    "start": "1421440",
    "end": "1427760"
  },
  {
    "text": "some way and whether This Record has a check a check sum algorithm or digital signat algorithm attached to it and this",
    "start": "1427760",
    "end": "1435320"
  },
  {
    "text": "is actually not a one-step process it's actually a recursive process um so because a lot of times you'll find",
    "start": "1435320",
    "end": "1441320"
  },
  {
    "text": "that once you unpack a binary record you'll find packed binary records within",
    "start": "1441320",
    "end": "1446520"
  },
  {
    "text": "the unpacked data so here's an example uh often times you'll extract let's say a record that contains a boot image that",
    "start": "1446520",
    "end": "1452720"
  },
  {
    "text": "contains some code and once you unpack that record uh you'll find um let's say",
    "start": "1452720",
    "end": "1457840"
  },
  {
    "text": "a packed binary record that contains the file system uh for that system now in",
    "start": "1457840",
    "end": "1463559"
  },
  {
    "text": "order to extract all of these records you have to think about it like you're extracting through a a tree recursively",
    "start": "1463559",
    "end": "1470159"
  },
  {
    "text": "building out each level until you extract every single record um and then once you get to that point you can start",
    "start": "1470159",
    "end": "1476360"
  },
  {
    "text": "running some useful analysis on on the data that you have and also if you're interested in making modifications to",
    "start": "1476360",
    "end": "1482279"
  },
  {
    "text": "the system changing the way that the embedded system behaves whether for offensive purpose like making a root kit",
    "start": "1482279",
    "end": "1487880"
  },
  {
    "text": "or for defensive purpose like injecting host based defense into the firmware image you're going to have to essentially do the do the same process",
    "start": "1487880",
    "end": "1494440"
  },
  {
    "text": "in Reverse right you're going to have to repack every single record that you modified recursively going up to this",
    "start": "1494440",
    "end": "1500399"
  },
  {
    "text": "tree all the way to the route until you get to a point where you you get a single binary image that contains the",
    "start": "1500399",
    "end": "1505919"
  },
  {
    "text": "packed version of all the modified data and code that you want to test on your embedded",
    "start": "1505919",
    "end": "1511080"
  },
  {
    "text": "Hardware now I've done this a few times now and I started thinking about where I spend most of my time where uh the",
    "start": "1511080",
    "end": "1516799"
  },
  {
    "text": "inefficiencies are and whether I'm doing something for um offensive or defensive purpose I have to spend some time",
    "start": "1516799",
    "end": "1523120"
  },
  {
    "text": "designing the payload right understanding how I want it to work I spend some time engineering it and then I spend some time testing it but this is",
    "start": "1523120",
    "end": "1530000"
  },
  {
    "text": "by no means where I spend the majority of my time when I do this kind of work most of my time is spent playing this",
    "start": "1530000",
    "end": "1535600"
  },
  {
    "text": "terrible game called stared the binary blob until I figure out the mysterious firmware format um so I can get on with",
    "start": "1535600",
    "end": "1542600"
  },
  {
    "text": "some useful analysis and to give you guys an idea of what I'm talking about this is my life on a Friday night okay this is what I do most of the time uh",
    "start": "1542600",
    "end": "1550600"
  },
  {
    "text": "here is a typical um firmware image for a laser jet printer an HP laser jet printer and in order to do some useful",
    "start": "1550600",
    "end": "1556440"
  },
  {
    "text": "analysis you first have to look at the header you know you start by looking at this and you say okay so I sort of",
    "start": "1556440",
    "end": "1562399"
  },
  {
    "text": "understand what's going on here right there is oh this is not going to never mind right so if you look at the the",
    "start": "1562399",
    "end": "1569520"
  },
  {
    "text": "header here right you see this starts with some asky and that's that's that's good you know that's easy to understand",
    "start": "1569520",
    "end": "1574720"
  },
  {
    "text": "and then this enters into some sort of a table format because you see the zeros here are nicely aligned right so you",
    "start": "1574720",
    "end": "1579799"
  },
  {
    "text": "know there's definitely some structure here but then as you start looking at it you'll see that the structure disappears",
    "start": "1579799",
    "end": "1585360"
  },
  {
    "text": "and this just enters into some random looking data and if you spent as much time looking at this sort of thing as I",
    "start": "1585360",
    "end": "1591080"
  },
  {
    "text": "have you you know that where is it 789c here is the header for a compression algorithm that I'm still not allowed to",
    "start": "1591080",
    "end": "1598320"
  },
  {
    "text": "name um but in order to get useful analysis done you're going to have to figure out what every single bite does",
    "start": "1598320",
    "end": "1604000"
  },
  {
    "text": "in this binary blob and this game sucks it's terrible it's timeconsuming it's laborious and the problem is you have to",
    "start": "1604000",
    "end": "1611120"
  },
  {
    "text": "do all this hard work and you haven't actually learned anything about the security of the system this is just a hard work that you have to do in order",
    "start": "1611120",
    "end": "1617840"
  },
  {
    "text": "to get to to a place where you can start doing useful work that actually pushes security forward for embedded systems",
    "start": "1617840",
    "end": "1623559"
  },
  {
    "text": "now wouldn't it be nice if there was a some sort of automation or a software framework that cut down the amount of",
    "start": "1623559",
    "end": "1629679"
  },
  {
    "text": "time we have to spend here so we can start concentrating our efforts doing useful stuff here right this is exactly",
    "start": "1629679",
    "end": "1636320"
  },
  {
    "text": "why I wrote Frack Frack stands for the firware reverse analysis console it essentially is a software framework that",
    "start": "1636320",
    "end": "1642720"
  },
  {
    "text": "allows security researchers who want to get into the embedded game to get into this game easily without having to spend",
    "start": "1642720",
    "end": "1648159"
  },
  {
    "text": "a lot of time in sing the binary block Purgatory okay so this code is going to be open source very soon so I'm not",
    "start": "1648159",
    "end": "1653440"
  },
  {
    "text": "going to talk about exactly how all this stuff works I just want to give you a high level overview of the different components uh of this framework so it",
    "start": "1653440",
    "end": "1660880"
  },
  {
    "text": "has four different engines each engine has a modular design on the and these engines very closely uh mirror the the",
    "start": "1660880",
    "end": "1666640"
  },
  {
    "text": "workflow that I just talked about on the left side you have your unpacking engine and your repacking engine now this is",
    "start": "1666640",
    "end": "1672799"
  },
  {
    "text": "the firm more format dependent part of Frack which has been minimized as much as possible uh by dependent I mean in",
    "start": "1672799",
    "end": "1679200"
  },
  {
    "text": "order to work with an embedded system or embedded firmware you first have to define a packer module and an unpacker",
    "start": "1679200",
    "end": "1685600"
  },
  {
    "text": "module now the modules the unpacker module for example is responsible for taking a firmware image and extracting",
    "start": "1685600",
    "end": "1691840"
  },
  {
    "text": "all of the binary records into an intermediate format that Frack knows how to manipulate uh and like I said this is",
    "start": "1691840",
    "end": "1698039"
  },
  {
    "text": "the firmware format dependent portion of Frack on this side you have the format",
    "start": "1698039",
    "end": "1703720"
  },
  {
    "text": "agnostic portion of Frack you have your analysis engines and your modification engines so if you think about it suppose",
    "start": "1703720",
    "end": "1709519"
  },
  {
    "text": "you wrote a symbolic execution engine for you know Finding bugs in Cisco iOS",
    "start": "1709519",
    "end": "1714960"
  },
  {
    "text": "right it wouldn't it be nice to be able to apply that code into another uh embedded system type without having to",
    "start": "1714960",
    "end": "1720360"
  },
  {
    "text": "rewrite your code um for that embedded device and that's exactly what Frack allows you to do so this is the workflow",
    "start": "1720360",
    "end": "1727240"
  },
  {
    "text": "um that I just talked about in Frack world first you unpack a um firmware",
    "start": "1727240",
    "end": "1733480"
  },
  {
    "text": "image using the format specific unpacker in this case we're working with Cisco I",
    "start": "1733480",
    "end": "1739039"
  },
  {
    "text": "and once that unpacker extracts all the binary records we send that those records into the analysis engine and the",
    "start": "1739039",
    "end": "1745159"
  },
  {
    "text": "modification engine and in our demo I'm going to show you concrete examples of you know what these engines will do but",
    "start": "1745159",
    "end": "1751240"
  },
  {
    "text": "you can think about it that the output of the analysis engine can then be used as input to the modification engine and",
    "start": "1751240",
    "end": "1756320"
  },
  {
    "text": "vice versa so you run this in an iterative Loop until you're happy with your analysis and you're happy with your modification now if you want to get a",
    "start": "1756320",
    "end": "1763240"
  },
  {
    "text": "modified binary image out to for testing on outro Hardware you send those Frack",
    "start": "1763240",
    "end": "1768720"
  },
  {
    "text": "records to the repacking engine um which will then generate a single let's say Cisco iOS image that you can slap onto a",
    "start": "1768720",
    "end": "1775080"
  },
  {
    "text": "physical router for testing now I'm a lazy person I'm a lazy programmer so I",
    "start": "1775080",
    "end": "1780360"
  },
  {
    "text": "hate making new new Wheels when other people have super cool Wheels which is why uh the analysis engine and the",
    "start": "1780360",
    "end": "1786200"
  },
  {
    "text": "modification engine closely integrates with tools we use already every day for security analysis so tools like Ida Pro",
    "start": "1786200",
    "end": "1793440"
  },
  {
    "text": "um tools like binwalk and right now I'm working on integrating mat lab for a lot of this uh entropy analysis stuff which",
    "start": "1793440",
    "end": "1800559"
  },
  {
    "text": "I'll show you in the demo in in a few minutes um the K in Frack s for console",
    "start": "1800559",
    "end": "1806360"
  },
  {
    "text": "there is a very minimal barebone user interface that exposes all of the functionality that frag has so the user",
    "start": "1806360",
    "end": "1812760"
  },
  {
    "text": "can explore modify uh repack um firmware",
    "start": "1812760",
    "end": "1817799"
  },
  {
    "text": "images in real time and fra is just the software framework part right so you can",
    "start": "1817799",
    "end": "1823200"
  },
  {
    "text": "call this as you know straight up library calls here's all the code you would need to use in order to unpack a",
    "start": "1823200",
    "end": "1829080"
  },
  {
    "text": "Cisco iOS firmware modify some the behavior of a specific function inside that that router and then repack all",
    "start": "1829080",
    "end": "1836480"
  },
  {
    "text": "right so this is the code that does the repacking repack the modified records back into a format that you can then",
    "start": "1836480",
    "end": "1841960"
  },
  {
    "text": "just slap on top of into a CF card and then load into your Cisco router for testing um so you know this is my",
    "start": "1841960",
    "end": "1849360"
  },
  {
    "text": "workflow before Frack right and this is what I consider the dark ages of embedded security analysis I spent a lot",
    "start": "1849360",
    "end": "1855039"
  },
  {
    "text": "of time um in the stair the binary blob game and not enough time uh doing useful work here is my workflow with Frack",
    "start": "1855039",
    "end": "1862120"
  },
  {
    "text": "right I spent a lot less time here um on this unnecessary reverse engineering of",
    "start": "1862120",
    "end": "1867240"
  },
  {
    "text": "binary format and I spent a lot more time working on things that actually push embedded security forward so this",
    "start": "1867240",
    "end": "1872639"
  },
  {
    "text": "is what I hope I hope Frack will allow security researchers in the community to quickly and easily get into this game",
    "start": "1872639",
    "end": "1878320"
  },
  {
    "text": "without having to uh suffer through this like I have so that's it we're going to show you some quick demos uh Mike is",
    "start": "1878320",
    "end": "1885080"
  },
  {
    "text": "going to help run this and um so he's going to run it and then I'm",
    "start": "1885080",
    "end": "1890279"
  },
  {
    "text": "going to talk my way through it all right so we're going to fire up",
    "start": "1890279",
    "end": "1896960"
  },
  {
    "text": "the Frack console now and we're going to start by loading a very typical 7200",
    "start": "1896960",
    "end": "1902039"
  },
  {
    "text": "Cisco iOS image and then I'm going to show you some analysis you can do on this and then we're going to modify it repack it and test it in a router",
    "start": "1902039",
    "end": "1909080"
  },
  {
    "text": "emulator so Mike is going to load uh the 7200 image",
    "start": "1909080",
    "end": "1917159"
  },
  {
    "text": "and as soon as a binary record is loaded into the Frack environment a bunch of different autoanalysis modules fire up",
    "start": "1920919",
    "end": "1926919"
  },
  {
    "text": "to try to find or give a hint about the content of the binary so when we run the load command we're actually not telling",
    "start": "1926919",
    "end": "1933320"
  },
  {
    "text": "Frack the format of this embedded firmware image at all but as you can see um what Frack does is it first",
    "start": "1933320",
    "end": "1939840"
  },
  {
    "text": "calculates the average entropy of the binary right so this is a maximum value of from 0 to 8 eight being most random",
    "start": "1939840",
    "end": "1945880"
  },
  {
    "text": "and it'll look at the head of the the binary look for identifiable compression headers Etc so this is all output that",
    "start": "1945880",
    "end": "1952279"
  },
  {
    "text": "I've gotten from binwalk integration uh this is interesting because if you look at it this is a a large binary that has",
    "start": "1952279",
    "end": "1958360"
  },
  {
    "text": "executable myips elf header but has almost a completely random body right so",
    "start": "1958360",
    "end": "1964320"
  },
  {
    "text": "we're now going to use the Cisco iOS unpacker to extract individual records from from this binary and all of the",
    "start": "1964320",
    "end": "1970559"
  },
  {
    "text": "auto analysis then runs again to um for the the children records and you'll see here we have three records the first one",
    "start": "1970559",
    "end": "1976960"
  },
  {
    "text": "is a a fairly small bootloader right this is 4.5 entropy which is you know what you expect for executable code and",
    "start": "1976960",
    "end": "1983840"
  },
  {
    "text": "then you have this big record here that still has the entropy of 7.8 that has a",
    "start": "1983840",
    "end": "1988880"
  },
  {
    "text": "pkzip archive header um in the beginning of the record so now Mike is going to run the uh the generic PK unzip unpacker",
    "start": "1988880",
    "end": "1997600"
  },
  {
    "text": "to extract that record",
    "start": "1997600",
    "end": "2000679"
  },
  {
    "text": "out right now on once that's done uh we run the auto analysis modules",
    "start": "2004600",
    "end": "2010399"
  },
  {
    "text": "again and you see here the the entropy has dropped from 7.8 to 5.3 we have a fairly large uh Bin file that's that",
    "start": "2010399",
    "end": "2017880"
  },
  {
    "text": "contains a 32-bit myips executable so at this point you know we can pull in our Ida Pro um integration so we're going to",
    "start": "2017880",
    "end": "2024600"
  },
  {
    "text": "show um the uh Ida interactive analyzer so this is what you have you know this",
    "start": "2024600",
    "end": "2030159"
  },
  {
    "text": "is what you would do if you want to integrate all of your Ida Pro or Ida python automation into Frack analysis",
    "start": "2030159",
    "end": "2036720"
  },
  {
    "text": "right you know we just showing you this in interactive mode but you can import all of your Ida python stuff into frack",
    "start": "2036720",
    "end": "2042240"
  },
  {
    "text": "and have it run as an analyzer um okay so we're going to now",
    "start": "2042240",
    "end": "2047360"
  },
  {
    "text": "make some modifications to this so we're going to first find a uh string inside this unpacked record that says this",
    "start": "2047360",
    "end": "2054079"
  },
  {
    "text": "product contains and this is the string that comes up when you do the show version command so we're going",
    "start": "2054079",
    "end": "2060079"
  },
  {
    "text": "to find this command we're going to find the location of the string and we're going to replace it with some new content and then we're going to repack",
    "start": "2060079",
    "end": "2065800"
  },
  {
    "text": "it back up and then we're going to show you guys the new router running inside an emulator okay so Frack has found the",
    "start": "2065800",
    "end": "2071440"
  },
  {
    "text": "string it says this is the location in the by absolute file offset and this is the length of the",
    "start": "2071440",
    "end": "2077599"
  },
  {
    "text": "string now we're going to run a modifier called uh the string replace with file",
    "start": "2077599",
    "end": "2083320"
  },
  {
    "text": "modifier right it's going to just replace whatever is here with the contents of a",
    "start": "2083320",
    "end": "2089200"
  },
  {
    "text": "file two minutes",
    "start": "2093000",
    "end": "2097240"
  },
  {
    "text": "all right okay so we're going to run this modification and then we're going to repack first the inner layer right with",
    "start": "2100200",
    "end": "2108040"
  },
  {
    "text": "the generic pkzip Packer and then we're going to repack the whole image with our Cisco iOS",
    "start": "2108040",
    "end": "2114359"
  },
  {
    "text": "Packer right and these two little asteres means that this record has been",
    "start": "2114359",
    "end": "2119960"
  },
  {
    "text": "modified and uh in a few minutes you'll",
    "start": "2120200",
    "end": "2124800"
  },
  {
    "text": "see this thing generate a modified Cisco iOS image and then we're going to show",
    "start": "2125560",
    "end": "2130760"
  },
  {
    "text": "you that image running in dynamips so you can see what we did and what we",
    "start": "2130760",
    "end": "2136640"
  },
  {
    "text": "replaced okay so now this Packer is going to go and recalculate all the checksums and all the mea information",
    "start": "2139280",
    "end": "2144960"
  },
  {
    "text": "that I need to pack inside the package manifest to get this to become a well formed legit iOS image that will",
    "start": "2144960",
    "end": "2150200"
  },
  {
    "text": "actually run in a Cisco router and as soon as that finishes we're going to export this to the disk",
    "start": "2150200",
    "end": "2156440"
  },
  {
    "text": "and then we're going to just bring up that dynamips and you can see gu we'll just skip the original one right so",
    "start": "2156440",
    "end": "2162560"
  },
  {
    "text": "that's done this is the the check some values that are calculated with a new modified records both the compressed and",
    "start": "2162560",
    "end": "2167680"
  },
  {
    "text": "uncompressed Records have been recheck summed right this thing has been repacked and now we're going to export",
    "start": "2167680",
    "end": "2173160"
  },
  {
    "text": "this to the file system here oh",
    "start": "2173160",
    "end": "2178240"
  },
  {
    "text": "export all right and then we're going to fire up dynamips let's just skip to the repacked router",
    "start": "2180760",
    "end": "2188800"
  },
  {
    "text": "get to the console well you didn't you have to restart the router but I guess we",
    "start": "2190680",
    "end": "2196200"
  },
  {
    "text": "don't okay so we're going to fire up dynamips let's just consant to",
    "start": "2197839",
    "end": "2205760"
  },
  {
    "text": "repack all right so this is the router running our modified firmware image and I guess you you guys will see",
    "start": "2206880",
    "end": "2213599"
  },
  {
    "text": "really quickly ah all right so that's what we replaced does anybody know who this handsome man is any he guesses use",
    "start": "2213599",
    "end": "2221800"
  },
  {
    "text": "sir yeah that's John Stewart of Cisco Systems he's the CSO so in his honor I put his face in in one of his routers um",
    "start": "2221800",
    "end": "2229160"
  },
  {
    "text": "so that's it that's my",
    "start": "2229160",
    "end": "2232039"
  },
  {
    "text": "presentation just just one one more thing I wanted to talk about so we're going to open source all this code very",
    "start": "2236880",
    "end": "2243079"
  },
  {
    "text": "soon and if you're interested please sign up for this mailing list Frack join at redballoon security and the project",
    "start": "2243079",
    "end": "2248760"
  },
  {
    "text": "page is here at fr. reblin security.com all right thank you very",
    "start": "2248760",
    "end": "2254720"
  },
  {
    "text": "[Applause]",
    "start": "2254970",
    "end": "2261030"
  },
  {
    "text": "much sweet",
    "start": "2276440",
    "end": "2280520"
  },
  {
    "text": "than you have any audio no you speaking",
    "start": "2292079",
    "end": "2301200"
  },
  {
    "text": "good andle",
    "start": "2323400",
    "end": "2327400"
  },
  {
    "text": "I have put you",
    "start": "2338599",
    "end": "2344078"
  },
  {
    "text": "go okay on up switch on",
    "start": "2347079",
    "end": "2351280"
  },
  {
    "text": "top",
    "start": "2353240",
    "end": "2356240"
  },
  {
    "text": "thanks next up is mapping and evolution of Android",
    "start": "2359440",
    "end": "2364480"
  },
  {
    "text": "permissions being presented by Andrew Ryder and Zack",
    "start": "2364480",
    "end": "2369880"
  },
  {
    "text": "laner oh thanks there a couple of tough acts to",
    "start": "2370359",
    "end": "2376920"
  },
  {
    "text": "follow with our otherwise uh uninteresting presentation um so this color scheme sucks just so",
    "start": "2376920",
    "end": "2385200"
  },
  {
    "text": "you know apparently I didn't realize it was uh it was so dark um so yes they already told you what the title was uh",
    "start": "2385200",
    "end": "2391400"
  },
  {
    "text": "I'm Zach L this is uh Andrew Ryder uh we both work for veric code um we are security researchers on the uh on the",
    "start": "2391400",
    "end": "2398040"
  },
  {
    "text": "research team uh we do static analysis uh stuff um that's a little bit more",
    "start": "2398040",
    "end": "2403200"
  },
  {
    "text": "about us we don't have a lot of time so we're going to kind of Breeze through the uh intro um so just a quick agenda we're",
    "start": "2403200",
    "end": "2410640"
  },
  {
    "text": "going to talk a little bit about AOSP just because that was the subject of our uh of the work that we did uh we'll talk",
    "start": "2410640",
    "end": "2416640"
  },
  {
    "text": "a little bit about what permissions are in the context of our analysis um some",
    "start": "2416640",
    "end": "2422240"
  },
  {
    "text": "of you are probably already Android uh junkies or something and you probably already know uh all about permissions um",
    "start": "2422240",
    "end": "2430240"
  },
  {
    "text": "problems that are presented around uh permissions and why what we're try what we're trying to achieve uh is important",
    "start": "2430240",
    "end": "2437040"
  },
  {
    "text": "and then we'll cite some prior research because we're not exactly breaking new ground but we're taking a different approach to uh trying to solve the",
    "start": "2437040",
    "end": "2443079"
  },
  {
    "text": "problem we're we're going to State here um obviously our approach to solving this uh this permission",
    "start": "2443079",
    "end": "2449480"
  },
  {
    "text": "mapping problem uh the results that we have thus far uh as well as um a few",
    "start": "2449480",
    "end": "2456000"
  },
  {
    "text": "exam the results of our Tool uh in our approach as well as some examples that came out of it within the last few days",
    "start": "2456000",
    "end": "2462680"
  },
  {
    "text": "uh and then finally um future future plans for for everything so um so AOSP uh the Android open source",
    "start": "2462680",
    "end": "2471599"
  },
  {
    "text": "project uh it is the core Android source and API the thing off of which all those beautiful ROMs are built and the thing",
    "start": "2471599",
    "end": "2477640"
  },
  {
    "text": "that you can actually look at in Source form without having to do crazy uh cool re tricks um licensed under an Apache",
    "start": "2477640",
    "end": "2484520"
  },
  {
    "text": "2.0 license we focused on the API that was a ailable in android.jar so",
    "start": "2484520",
    "end": "2489760"
  },
  {
    "text": "everything that that that is in the core of AOSP and in the core of Android is what we focused on this present some",
    "start": "2489760",
    "end": "2495560"
  },
  {
    "text": "interesting challenges um and it's certainly not where we're going to keep our our research limited but it's where",
    "start": "2495560",
    "end": "2500720"
  },
  {
    "text": "we focused for the initial run of this uh this research so therefore this doesn't include any private or closed",
    "start": "2500720",
    "end": "2507119"
  },
  {
    "text": "Source uh Google or thirdparty apis in brief uh permissions they are",
    "start": "2507119",
    "end": "2512599"
  },
  {
    "text": "granted at application install time that nice little screen that you see when you go to install Angry Bird's Mau Edition",
    "start": "2512599",
    "end": "2518000"
  },
  {
    "text": "uh that says I want all of these things and you say Okay um package manager handles that so things like internet",
    "start": "2518000",
    "end": "2523920"
  },
  {
    "text": "send SMS Read contacts uh brick Etc um these are usually checked at the time of",
    "start": "2523920",
    "end": "2529720"
  },
  {
    "text": "a call into a method um through a variety of different ways which we'll show in a in a moment and why this",
    "start": "2529720",
    "end": "2536200"
  },
  {
    "text": "presents uh challenges um and this is often inconsistent",
    "start": "2536200",
    "end": "2541880"
  },
  {
    "text": "so um the Android API reference documentation includes most um many if",
    "start": "2541880",
    "end": "2548440"
  },
  {
    "text": "not most of the permission requirements for every framework or package and uh",
    "start": "2548440",
    "end": "2554200"
  },
  {
    "text": "the classes and methods therein but it's not complete um this is kind of leads to",
    "start": "2554200",
    "end": "2561960"
  },
  {
    "text": "developers not being sure of what permission they really need for something um or them over like",
    "start": "2561960",
    "end": "2568200"
  },
  {
    "text": "requesting a particular permission that later turns out to not be the permission that's actually checked so either the permission is not required or it's not",
    "start": "2568200",
    "end": "2574880"
  },
  {
    "text": "the right one so this develop probably don't want to go and read the Android source to figure out everything that",
    "start": "2574880",
    "end": "2581000"
  },
  {
    "text": "they actually need to call a particular method so we're trying to go down at a code level and actually build this map",
    "start": "2581000",
    "end": "2586760"
  },
  {
    "text": "so what this leads to is uh underg granting of privileges which is really more of a reliability and usability",
    "start": "2586760",
    "end": "2592880"
  },
  {
    "text": "problem so if I go and call a method and I don't have a permission for it and a security exception is thrown and the app",
    "start": "2592880",
    "end": "2598559"
  },
  {
    "text": "force closes because I don't write exception handlers I'm a terrible programmer or overg granting where I",
    "start": "2598559",
    "end": "2603760"
  },
  {
    "text": "just decide well I don't really know if that's the permission that I need um so I'll just go and request all of these",
    "start": "2603760",
    "end": "2608960"
  },
  {
    "text": "permissions and I also have buggy code so another app pivots using a bug in my app to basically inherit all the a",
    "start": "2608960",
    "end": "2616079"
  },
  {
    "text": "variety of permissions that um you know I didn't really ever I never call the method that exercised a permission",
    "start": "2616079",
    "end": "2621640"
  },
  {
    "text": "therefore we call it uh overg granting so I guess you could call this like permission escalation of",
    "start": "2621640",
    "end": "2628920"
  },
  {
    "text": "sorts um so basically what really happens is that uh most Developers you",
    "start": "2631079",
    "end": "2637359"
  },
  {
    "text": "know don't have the time or the energy to go through and or the patients too to actually figure out the the permissions",
    "start": "2637359",
    "end": "2643800"
  },
  {
    "text": "required uh for the methods they want to call and actually implementing their code um so as Zach alluded to this uh",
    "start": "2643800",
    "end": "2652079"
  },
  {
    "text": "they you know this causes a couple things under granting or over granting um so many times the developer they will",
    "start": "2652079",
    "end": "2657880"
  },
  {
    "text": "do one of two things one is just guess and test they'll add a permission uh",
    "start": "2657880",
    "end": "2663040"
  },
  {
    "text": "rerun their their code see if it's successful see if the method was called successfully if so then hey they move on",
    "start": "2663040",
    "end": "2670160"
  },
  {
    "text": "to their next problem in their code um other otherwise you know sometimes they'll just go ahead and say well the",
    "start": "2670160",
    "end": "2676359"
  },
  {
    "text": "hell with this I'm going to add you know all five of these permissions say you know I want to do something with Wi-Fi",
    "start": "2676359",
    "end": "2682599"
  },
  {
    "text": "so I'm going to add access and change Wi-Fi State you know but that's no good because you know you're overg granting",
    "start": "2682599",
    "end": "2689160"
  },
  {
    "text": "perhaps the only one to access the Wi-Fi State now you're giving the permission the ability to now change some",
    "start": "2689160",
    "end": "2695599"
  },
  {
    "text": "settings just right okay so the big question is why is there",
    "start": "2695599",
    "end": "2702359"
  },
  {
    "text": "no map um sort of the nature of the the AOSP development um it's fairly Dynamic",
    "start": "2702359",
    "end": "2710400"
  },
  {
    "text": "a lot of people are contributing and uh there's no real incentive or driving",
    "start": "2710400",
    "end": "2715960"
  },
  {
    "text": "incentive you know monetary wise or fame wise for people to create some common map you know uh a lot of this as we",
    "start": "2715960",
    "end": "2724800"
  },
  {
    "text": "alluded to earlier uh the permissions are Ed in the API reference guide but you know they're incomplete or they're",
    "start": "2724800",
    "end": "2731079"
  },
  {
    "text": "inaccurate in some cases um also there's no real wow factor",
    "start": "2731079",
    "end": "2736680"
  },
  {
    "text": "uh there's no you know by creating this map you're not getting you know some sort of oday or anything like that uh",
    "start": "2736680",
    "end": "2743839"
  },
  {
    "text": "there's also sort of this side issue that I believe in which is that some absc folk don't want to you know give up",
    "start": "2743839",
    "end": "2750800"
  },
  {
    "text": "this map you know not that they've necessarily created it but the fact is that many absc folk are making money off",
    "start": "2750800",
    "end": "2757160"
  },
  {
    "text": "of you know doing uh uh pen tests on apps and one of the things they can spend their time on is over granting of",
    "start": "2757160",
    "end": "2764800"
  },
  {
    "text": "privileges um also there's the uh complexity of map generation as we'll",
    "start": "2764800",
    "end": "2769960"
  },
  {
    "text": "discuss so we have just um just to give you an idea of the scope of this problem",
    "start": "2769960",
    "end": "2775480"
  },
  {
    "text": "um so this is a class just classes as from API uh Android API rev 4 up through",
    "start": "2775480",
    "end": "2781440"
  },
  {
    "text": "16 which represents Jelly Bean um just the number of classes that have been added over time um these are just rough",
    "start": "2781440",
    "end": "2787400"
  },
  {
    "text": "numbers uh but each one of these represents something that we we have to analyze and furthermore each of those",
    "start": "2787400",
    "end": "2794160"
  },
  {
    "text": "has methods therein so this represents uh methods from uh those same revisions so at this point you know over 20 over",
    "start": "2794160",
    "end": "2801800"
  },
  {
    "text": "20,000 uh methods that could potentially be something we have that could have a permission check associated with them",
    "start": "2801800",
    "end": "2807319"
  },
  {
    "text": "it's a lot of code to look at right um the number of permissions U that have been that are present in each uh API rev",
    "start": "2807319",
    "end": "2815520"
  },
  {
    "text": "um and this is kind of rough because this is Manifest permissions versus other kind of dynamic permissions um and",
    "start": "2815520",
    "end": "2821800"
  },
  {
    "text": "this also has changed over time because um in in between each rev a new",
    "start": "2821800",
    "end": "2827200"
  },
  {
    "text": "permission might be added but three might be taken away and vice versa so this is not like just a accumulation of",
    "start": "2827200",
    "end": "2832680"
  },
  {
    "text": "permissions so much as just the permissions that are present based on our our analysis um another reason this",
    "start": "2832680",
    "end": "2838760"
  },
  {
    "text": "is this this causes issues around that just complexity and inconsistency uh",
    "start": "2838760",
    "end": "2844079"
  },
  {
    "text": "that Co that is really bad I'm going to try to use this cool uh lightsaber um there's a variety of",
    "start": "2844079",
    "end": "2850559"
  },
  {
    "text": "different ways that a permission can be checked so here we have typically check permission check calling permission Etc",
    "start": "2850559",
    "end": "2855800"
  },
  {
    "text": "um we see M context. check calling or self- permission and then um just a constant for a permission uh modify",
    "start": "2855800",
    "end": "2862400"
  },
  {
    "text": "audio settings you know if so uh return true the permission has been granted so that that makes sense like that's pretty",
    "start": "2862400",
    "end": "2868520"
  },
  {
    "text": "easy to resolve um but then some of them will actually just do a comparison looking at uh if this property um uh",
    "start": "2868520",
    "end": "2875119"
  },
  {
    "text": "matches you know some other property if so return true uh that's not exactly",
    "start": "2875119",
    "end": "2881000"
  },
  {
    "text": "something we can easily resolve because now we're getting into like you know logical uh logical ores and stuff um",
    "start": "2881000",
    "end": "2886480"
  },
  {
    "text": "when we get down into other things like ibinder IPC stuff um there could be three or four levels of abstraction",
    "start": "2886480",
    "end": "2893520"
  },
  {
    "text": "before we actually see a permission check and it might be hard to follow that back up uh to to kind of like the",
    "start": "2893520",
    "end": "2899200"
  },
  {
    "text": "the calling or parent function um this makes automation really hard so um you",
    "start": "2899200",
    "end": "2906400"
  },
  {
    "text": "know we'll we we'll show you a couple of other a couple of other teams who have tried to do this yeah uh one of the",
    "start": "2906400",
    "end": "2912200"
  },
  {
    "text": "first uh pieces of research we came across was from UC Berkeley uh from Don song and David Wagner at all um this I",
    "start": "2912200",
    "end": "2920400"
  },
  {
    "text": "believe was also sort of funded by fortify folk supposedly um and so what",
    "start": "2920400",
    "end": "2926880"
  },
  {
    "text": "they did is they were working on a tool that would analyze an application uh statically to look for over granting or",
    "start": "2926880",
    "end": "2933920"
  },
  {
    "text": "underg granting of permissions um this requires a map an explicit map between API calls and the permissions needed and",
    "start": "2933920",
    "end": "2940440"
  },
  {
    "text": "this is the map that we're interested in obviously so they decideed to do a dynamic approach they first started with",
    "start": "2940440",
    "end": "2945520"
  },
  {
    "text": "uh with randoop which is um a a toolkit",
    "start": "2945520",
    "end": "2950680"
  },
  {
    "text": "where you can sort of give it a jar file and it'll output a whole bunch of junit",
    "start": "2950680",
    "end": "2956359"
  },
  {
    "text": "test cases um based upon uh methods the the constructors and methods that have",
    "start": "2956359",
    "end": "2961960"
  },
  {
    "text": "simple arguments that would mean you know no argument or like an INT type or",
    "start": "2961960",
    "end": "2967000"
  },
  {
    "text": "Boolean string something like that but doesn't handle complex objects this is an issue with the Android uh API because",
    "start": "2967000",
    "end": "2974760"
  },
  {
    "text": "clearly there are more complex types there that are being used and need to be tested in order to actually successfully",
    "start": "2974760",
    "end": "2980760"
  },
  {
    "text": "go through and get all the map permissions that you need um so they have this Dynamic approach and it",
    "start": "2980760",
    "end": "2985799"
  },
  {
    "text": "required them to modify the Android Source rebuild the source so that they can actually run oh we are running out",
    "start": "2985799",
    "end": "2992680"
  },
  {
    "text": "of time sorry um so nevertheless even though they created this um it basically",
    "start": "2992680",
    "end": "3000280"
  },
  {
    "text": "the issue was is that there's dependencies between um you can't just automatically run this you know say run",
    "start": "3000280",
    "end": "3008720"
  },
  {
    "text": "their Dynamic tool testing because you have dependencies between uh Constructors or methods that require",
    "start": "3008720",
    "end": "3015640"
  },
  {
    "text": "other objects to be created at a certain point in time or certain states to be achieved before you can actually call",
    "start": "3015640",
    "end": "3020920"
  },
  {
    "text": "those methods in a manner that will exercise them properly so the good is",
    "start": "3020920",
    "end": "3026200"
  },
  {
    "text": "that you know know to some extent when they have the pieces in place they are quick at exercising the apis you know",
    "start": "3026200",
    "end": "3032240"
  },
  {
    "text": "it's just going to run the call Bam Bam Bam and when they do have these things in proper order they will uh be you know",
    "start": "3032240",
    "end": "3038960"
  },
  {
    "text": "very accurate because you know they have the log in place and the Android source and they're actually doing the call with",
    "start": "3038960",
    "end": "3045359"
  },
  {
    "text": "the proper arguments boom they're going to get the right uh permission error uh",
    "start": "3045359",
    "end": "3050880"
  },
  {
    "text": "however the bad part is is that they have to require they require modifying the Android Source this is obviously a",
    "start": "3050880",
    "end": "3056240"
  },
  {
    "text": "pain um there's still human interaction because of having to do the or the orders of the calls or the the testing",
    "start": "3056240",
    "end": "3062559"
  },
  {
    "text": "in different uh because of dependencies they have to do with them in different orders and this you know requires somebody to say okay run the",
    "start": "3062559",
    "end": "3070200"
  },
  {
    "text": "tool oh it failed for some reason oh it's because it's out of order we need to change the ordering here restart the",
    "start": "3070200",
    "end": "3076119"
  },
  {
    "text": "tool again um there's also research but done uh by some folks out of uh France and",
    "start": "3076119",
    "end": "3082839"
  },
  {
    "text": "then Luxembourg um and basically what they do they were create creating a tool called the correct permission set copes",
    "start": "3082839",
    "end": "3090040"
  },
  {
    "text": "um and basically what they use is they uh take like a jar f android.jar file",
    "start": "3090040",
    "end": "3096160"
  },
  {
    "text": "and create a call graph using sit um many people know sit from Dex and things like that uh Dex a jar and things like",
    "start": "3096160",
    "end": "3102880"
  },
  {
    "text": "that um the issue here is that it requires you can do a full program analysis but you need to have an entry",
    "start": "3102880",
    "end": "3109160"
  },
  {
    "text": "point and since we're on Android there's no clear entry point and so the work required there is to set up say okay you",
    "start": "3109160",
    "end": "3117200"
  },
  {
    "text": "know uh these calls here are considered entry points and they will then you know",
    "start": "3117200",
    "end": "3123480"
  },
  {
    "text": "generate a call tree based upon uh the methods that are called out of there so",
    "start": "3123480",
    "end": "3129160"
  },
  {
    "text": "the issue is that you know there's some complexity in making those entry points spec",
    "start": "3129160",
    "end": "3136440"
  },
  {
    "text": "specified um yeah so the good here with their work is",
    "start": "3136440",
    "end": "3142480"
  },
  {
    "text": "that there's no need to modify the Android Source um it's a little bit easier to reproduce uh because of the",
    "start": "3142480",
    "end": "3149000"
  },
  {
    "text": "details in their paper uh but the bad is that you still have to do some manual intervention and uh also uh like",
    "start": "3149000",
    "end": "3155520"
  },
  {
    "text": "Berkeley which I did not mention uh there's no Source or binary code available for this",
    "start": "3155520",
    "end": "3162839"
  },
  {
    "text": "um no um so our approach is that we wanted to see if how we could do this",
    "start": "3162839",
    "end": "3168760"
  },
  {
    "text": "from purely a static approach initially um we decided to use and from a source",
    "start": "3168760",
    "end": "3174559"
  },
  {
    "text": "standpoint uh we decided to use ccope which has been around for a very long time was packaged with AT&T Unix stuff",
    "start": "3174559",
    "end": "3181680"
  },
  {
    "text": "like that and it was meant for analyzing C code um it's open sourced and so we",
    "start": "3181680",
    "end": "3187240"
  },
  {
    "text": "decided to modify the lexer to better handle Java Java isms and um we also",
    "start": "3187240",
    "end": "3192839"
  },
  {
    "text": "developed code in Python to assist with calling ccope and then generating uh",
    "start": "3192839",
    "end": "3198240"
  },
  {
    "text": "call graphs we have three minutes all right here you go so um so we basically just generated a bunch of common",
    "start": "3198240",
    "end": "3204599"
  },
  {
    "text": "signatures for permission checks check perm check calling permission enforce calling permission anything that in the",
    "start": "3204599",
    "end": "3210040"
  },
  {
    "text": "API was an actual permission check um ccope indexes everything we take um uh",
    "start": "3210040",
    "end": "3217839"
  },
  {
    "text": "wrapping using python to wrap a bunch of java tools U and using C Scopes index go",
    "start": "3217839",
    "end": "3223200"
  },
  {
    "text": "back and say okay for everything that's in the Android API um and android.jar here's what we have in the index um and",
    "start": "3223200",
    "end": "3229440"
  },
  {
    "text": "then kind of search back up to you know the entry or calling function um and then we can say okay well this permission was checked here this is is",
    "start": "3229440",
    "end": "3236599"
  },
  {
    "text": "the method that it's in this is the type of check that was being done and I'll I'll show you a more concrete example in a second um we also look for comments as",
    "start": "3236599",
    "end": "3243599"
  },
  {
    "text": "well because they're actually cases where there is documentation in a comment that represents uh a link to um",
    "start": "3243599",
    "end": "3250040"
  },
  {
    "text": "to a permission check or a permission requirement um this is all then stored in a nice super reliable sqlite DB which",
    "start": "3250040",
    "end": "3256119"
  },
  {
    "text": "we can later go and look at um compared to UCB they only did 2.2x like the 2.2",
    "start": "3256119",
    "end": "3261760"
  },
  {
    "text": "um Android Series so we've actually done it across everything from four on",
    "start": "3261760",
    "end": "3267119"
  },
  {
    "text": "26 um which we just did like a week ago um the difference being that they did stuff that wasn't limited they weren't",
    "start": "3267119",
    "end": "3273520"
  },
  {
    "text": "limited to android. jar or they they did things that were weren't just in android.jar they did other third party",
    "start": "3273520",
    "end": "3278920"
  },
  {
    "text": "uh uh private Frameworks so we're kind of limited to that so we have some inconsistencies between them um their",
    "start": "3278920",
    "end": "3284960"
  },
  {
    "text": "Dynamic approach does some things better our static approach does some things better and faster so um the good no",
    "start": "3284960",
    "end": "3291559"
  },
  {
    "text": "modifying Source except uh t- scope um it's really easy to run run time is",
    "start": "3291559",
    "end": "3297040"
  },
  {
    "text": "super fast uh relatively speaking to the dynamic uh test Suites there's no human intervention required except for the",
    "start": "3297040",
    "end": "3303000"
  },
  {
    "text": "modifications we've had to make make to the tool over time um eventually this would be good to combine with a dynamic",
    "start": "3303000",
    "end": "3308520"
  },
  {
    "text": "tool just for augmenting some of the results the bad side it doesn't cover everything like we said um there are",
    "start": "3308520",
    "end": "3315119"
  },
  {
    "text": "things in private Frameworks that we can't access yet or haven't gone through accessing yet anything that's a jni stub",
    "start": "3315119",
    "end": "3320559"
  },
  {
    "text": "into native code where a permission check might be done we're not we're not reaching into there UC Berkeley didn't do that either um I I don't know if",
    "start": "3320559",
    "end": "3326599"
  },
  {
    "text": "Luxenberg did but that's something to explore um it's limited to AOSP like I",
    "start": "3326599",
    "end": "3332640"
  },
  {
    "text": "said uh you do need to get the for our our testing the testing we did we checked out every single AOSP uh repo so",
    "start": "3332640",
    "end": "3339240"
  },
  {
    "text": "that's like a lot of space that's taking up room on a hard drive somewhere not really hard but just kind of cumbersome",
    "start": "3339240",
    "end": "3345680"
  },
  {
    "text": "I basically slammed my home uh connection trying to check out all the repos at once so concrete examples of",
    "start": "3345680",
    "end": "3351720"
  },
  {
    "text": "some of the things that have come out of this um as a demonstration of strong call graph analysis also kind of a",
    "start": "3351720",
    "end": "3356839"
  },
  {
    "text": "sanity check this is actually documented um but purely through uh call call graph",
    "start": "3356839",
    "end": "3362520"
  },
  {
    "text": "analysis we found where permissions were actually required um or being checked in the Bluetooth health class in the",
    "start": "3362520",
    "end": "3368799"
  },
  {
    "text": "Bluetooth package framework so this is the documentation from uh from uh developer.android.com so you'll see",
    "start": "3368799",
    "end": "3374640"
  },
  {
    "text": "requires Bluetooth permission requires Bluetooth permission cool that's great this is an example of just uh some",
    "start": "3374640",
    "end": "3379680"
  },
  {
    "text": "results from our database we'll see here Andro the API rev um the uh the class",
    "start": "3379680",
    "end": "3385359"
  },
  {
    "text": "the method connect Channel The Source um the check that's being run in this case enforced calling or self permission and",
    "start": "3385359",
    "end": "3390880"
  },
  {
    "text": "the permission that's being checked so for every method that's in the Bluetooth health class there's an example of some of the stuff we got that was just a",
    "start": "3390880",
    "end": "3397000"
  },
  {
    "text": "sanity check we found some other interesting things in the last couple of days Wi-Fi manager inconsistencies in",
    "start": "3397000",
    "end": "3403359"
  },
  {
    "text": "documentation um versus what's actually being implemented so uh there are no permission requirements being listed in",
    "start": "3403359",
    "end": "3409760"
  },
  {
    "text": "the docs for the start scan method in Wi-Fi manager nothing here on developer.android.com we checked the",
    "start": "3409760",
    "end": "3415480"
  },
  {
    "text": "code uh we actually see oh wow um actually good there's no text there but uh Access Wi-Fi state is required for um",
    "start": "3415480",
    "end": "3422960"
  },
  {
    "text": "the start scan permission or start scan method um so and then also from our tool",
    "start": "3422960",
    "end": "3428680"
  },
  {
    "text": "we actually see for a variety of other methods in there disable network enable Network Etc um enforced calling or self",
    "start": "3428680",
    "end": "3434640"
  },
  {
    "text": "permission is called to check the change Wi-Fi State permission so this is an inconsistency in in some of the documentation that we found telefony",
    "start": "3434640",
    "end": "3441880"
  },
  {
    "text": "manager another example um if you are familiar with some of this Java parlan all you'll notice that uh that should",
    "start": "3441880",
    "end": "3448000"
  },
  {
    "text": "actually be a bracket or a brace not a a perins um get neighboring cell info says",
    "start": "3448000",
    "end": "3453839"
  },
  {
    "text": "that access course updates permission is required according to issue 19192 on Google code and uh the bug tracker for",
    "start": "3453839",
    "end": "3460760"
  },
  {
    "text": "uh Android there's no such thing as access course updates in in some uh revisions of the",
    "start": "3460760",
    "end": "3466079"
  },
  {
    "text": "API we actually see here again requires android. manifest. permission access course updates um in the telepan manager",
    "start": "3466079",
    "end": "3473200"
  },
  {
    "text": "Source but what we see later is access fine location and access course location of the two permissions actually being",
    "start": "3473200",
    "end": "3478599"
  },
  {
    "text": "checked um we also found that in our VR tool so just a quick way to say this was",
    "start": "3478599",
    "end": "3484880"
  },
  {
    "text": "not actually what what the documentation said or what's actually being checked um developers might think oh that's the",
    "start": "3484880",
    "end": "3491240"
  },
  {
    "text": "permission I need to request oh crap it doesn't exist that issue uh 19192 somebody actually said there's no such",
    "start": "3491240",
    "end": "3496880"
  },
  {
    "text": "thing as this permission and my app dies so the tool long didn't read um",
    "start": "3496880",
    "end": "3501920"
  },
  {
    "text": "since we're like right at the end of this this would be really awesome to have this table generated we're working",
    "start": "3501920",
    "end": "3507640"
  },
  {
    "text": "on it um so you know fingers crossed it would make more sense for Google to handle this since they kind of have",
    "start": "3507640",
    "end": "3514079"
  },
  {
    "text": "access to all of this they have the resources if you're out there um this would be really helpful for appsec folk",
    "start": "3514079",
    "end": "3520760"
  },
  {
    "text": "and for developers because then they they can um actually have insight into",
    "start": "3520760",
    "end": "3525920"
  },
  {
    "text": "what permissions they really need to enter into certain methods future plans uh refining static Discovery integration",
    "start": "3525920",
    "end": "3532079"
  },
  {
    "text": "with the dynamic analysis tool um if you see veric code.com Blog the uh corporate blog um that's where we'll have",
    "start": "3532079",
    "end": "3539000"
  },
  {
    "text": "additional data um supporting tools whatever just stuff will go up there so",
    "start": "3539000",
    "end": "3544359"
  },
  {
    "text": "check that out um you'll see that soon and uh contact for both of us so thank",
    "start": "3544359",
    "end": "3550760"
  },
  {
    "text": "you [Applause]",
    "start": "3550760",
    "end": "3557419"
  }
]