[
  {
    "text": "[Music]",
    "start": "4280",
    "end": "16400"
  },
  {
    "text": "hi everyone today i will show you how i exploited samsung's secure boot to retrieve sensitive data in the galaxy",
    "start": "16400",
    "end": "23199"
  },
  {
    "text": "s10 my name is jeff zhao i have been playing",
    "start": "23199",
    "end": "28240"
  },
  {
    "text": "ctf in hikong ctf team for 10 years i am also a member of changeroot",
    "start": "28240",
    "end": "33600"
  },
  {
    "text": "taiwan's privacy security studying group i now focus on mobile and iot security",
    "start": "33600",
    "end": "41359"
  },
  {
    "text": "this is my agenda in the beginning i will play a demo video to show a scenario where the vulnerabilities",
    "start": "42000",
    "end": "48719"
  },
  {
    "text": "could be exploited then i will introduce how samsung",
    "start": "48719",
    "end": "54399"
  },
  {
    "text": "enhanced the security in android with their own framework knox",
    "start": "54399",
    "end": "61120"
  },
  {
    "text": "and a quick glance to see previous research on knox framework with the background",
    "start": "61120",
    "end": "67280"
  },
  {
    "text": "knowledge i will explain the vulnerabilities i found and how to explore secure boots",
    "start": "67280",
    "end": "72960"
  },
  {
    "text": "by these vulnerabilities and finally i will discuss how further",
    "start": "72960",
    "end": "79759"
  },
  {
    "text": "damage can be caused after exploiting secure boot even without the passcode",
    "start": "79759",
    "end": "87840"
  },
  {
    "text": "before we start let's watch a demo video",
    "start": "89439",
    "end": "101840"
  },
  {
    "text": "yes",
    "start": "112840",
    "end": "115840"
  },
  {
    "text": "[Music]",
    "start": "123810",
    "end": "126979"
  },
  {
    "text": "[Music]",
    "start": "132550",
    "end": "135749"
  },
  {
    "text": "[Music]",
    "start": "142240",
    "end": "145330"
  },
  {
    "text": "[Music] so",
    "start": "150030",
    "end": "157840"
  },
  {
    "text": "[Music]",
    "start": "159120",
    "end": "181778"
  },
  {
    "text": "[Music]",
    "start": "199140",
    "end": "202280"
  },
  {
    "text": "baby",
    "start": "210840",
    "end": "213840"
  },
  {
    "text": "let me start by giving you a brief introduction of the samsung security framework",
    "start": "217200",
    "end": "223760"
  },
  {
    "text": "next next is a huge complicated whole system",
    "start": "224840",
    "end": "230480"
  },
  {
    "text": "security enhancement based on trust zone it contains tmr trust zone-based",
    "start": "230480",
    "end": "236319"
  },
  {
    "text": "integrity measurement architecture real-time kernel protection",
    "start": "236319",
    "end": "243519"
  },
  {
    "text": "tema periodic kernel measurement seminars enhancement and many other",
    "start": "243519",
    "end": "250319"
  },
  {
    "text": "scenes to prevent privileged exclamation and authorize access to the phone's data",
    "start": "250319",
    "end": "257280"
  },
  {
    "text": "since we are taking the bootloader we will only discuss the most relevant part",
    "start": "257280",
    "end": "263280"
  },
  {
    "text": "secure boot the enjoyable procedure starts from the",
    "start": "263280",
    "end": "269840"
  },
  {
    "text": "primary road also called pvl it will load the second stage",
    "start": "269840",
    "end": "275280"
  },
  {
    "text": "bootloader in samsung devices it is called secure boot",
    "start": "275280",
    "end": "281759"
  },
  {
    "text": "also known as as food secure boot will bring up the operating",
    "start": "281759",
    "end": "287440"
  },
  {
    "text": "system from the boot image each boot stage will verify the signature before proceeding to the next",
    "start": "287440",
    "end": "294080"
  },
  {
    "text": "stage the verified key is stored in hardware doing manufactory",
    "start": "294080",
    "end": "301120"
  },
  {
    "text": "primary bloater only runs secure boot if the signature is valid",
    "start": "301120",
    "end": "306240"
  },
  {
    "text": "we cannot change the primary bloater thus the phone can only put the official",
    "start": "306240",
    "end": "311840"
  },
  {
    "text": "secure boot image next secure boot will launch the boot",
    "start": "311840",
    "end": "317919"
  },
  {
    "text": "image of the recovery image if its signature is valid",
    "start": "317919",
    "end": "323039"
  },
  {
    "text": "if the signature is not valid secure boot will put the image for",
    "start": "323039",
    "end": "328880"
  },
  {
    "text": "additional action which is blowing the next bit",
    "start": "328880",
    "end": "335520"
  },
  {
    "text": "what will happen if the nut splitter is set the provision of samsung's warranty",
    "start": "337120",
    "end": "343680"
  },
  {
    "text": "depends on the nut speed also called the warranty bit",
    "start": "343680",
    "end": "349199"
  },
  {
    "text": "trying to put an official butter image will temper with the nut speed",
    "start": "349199",
    "end": "356080"
  },
  {
    "text": "it is a one-time writable memory there is no way to recover it some services in truss long",
    "start": "356080",
    "end": "364000"
  },
  {
    "text": "cannot be launched if the bit is set such as lux container senson pay",
    "start": "364000",
    "end": "371680"
  },
  {
    "text": "and trusted key store",
    "start": "371680",
    "end": "375120"
  },
  {
    "text": "after the galaxy s9 samsung equipped the storage with default settings",
    "start": "377680",
    "end": "383360"
  },
  {
    "text": "only after the first time unlocking the screen the storage gets decrypted",
    "start": "383360",
    "end": "390319"
  },
  {
    "text": "the encryption key is stored in the traditional application we cannot decrypt the storage without",
    "start": "390479",
    "end": "397520"
  },
  {
    "text": "unlocking the phone even if if we have good privilege",
    "start": "397520",
    "end": "409840"
  },
  {
    "text": "other than the storage encryption key there is lots of critical information",
    "start": "410960",
    "end": "416479"
  },
  {
    "text": "that can only be decrypted by translate once the null speed is set most of the",
    "start": "416479",
    "end": "423440"
  },
  {
    "text": "length will no longer work this is a diagram of untranslated",
    "start": "423440",
    "end": "430800"
  },
  {
    "text": "exception level transition router method only gets exception level 1 in non-secure world",
    "start": "430800",
    "end": "437360"
  },
  {
    "text": "the data encrypted by trustzone cannot be decrypted if not speed is set",
    "start": "437360",
    "end": "444319"
  },
  {
    "text": "the way to get sensitive data is privately escalation to exception level 1",
    "start": "444319",
    "end": "449680"
  },
  {
    "text": "in secure world or tweak the device into thinking that",
    "start": "449680",
    "end": "455120"
  },
  {
    "text": "the nut speed is still safe",
    "start": "455120",
    "end": "459039"
  },
  {
    "text": "there has been a lot of research into breaking not exportation i will show you some previous work",
    "start": "460160",
    "end": "469039"
  },
  {
    "text": "first at blackhead usa 2017 returns me defeated knox real-time",
    "start": "470560",
    "end": "476639"
  },
  {
    "text": "criminal protection which is designed to prevent privileged exclamation",
    "start": "476639",
    "end": "482240"
  },
  {
    "text": "from non-secure war exception level 0 to non-secure war exception level 1",
    "start": "482240",
    "end": "489599"
  },
  {
    "text": "and second at blair hague europe 2017 then should never demo the vulnerability",
    "start": "491520",
    "end": "498080"
  },
  {
    "text": "to explore a samsung paired translator in truss zone resulting in yes it's collected",
    "start": "498080",
    "end": "504479"
  },
  {
    "text": "privilege level from non-secure world exception level zero to secure war exception level one",
    "start": "504479",
    "end": "512479"
  },
  {
    "text": "last year quarks never demoed some amazing work that's shattered the trust zone",
    "start": "513919",
    "end": "519760"
  },
  {
    "text": "protection resulting in privileged escalation all the way from non-secure world exception level 0",
    "start": "519760",
    "end": "526880"
  },
  {
    "text": "to secure exception level 3.",
    "start": "526880",
    "end": "531040"
  },
  {
    "text": "but all of this work means at least non-secure exception",
    "start": "533519",
    "end": "539279"
  },
  {
    "text": "level reload privilege so why if the device is turned off and",
    "start": "539279",
    "end": "545200"
  },
  {
    "text": "we don't know the passcode",
    "start": "545200",
    "end": "549839"
  },
  {
    "text": "in this talk we are discussing the scenario in which we can exploit the locked phone",
    "start": "552480",
    "end": "559600"
  },
  {
    "text": "and keep sensitive data reachable",
    "start": "559600",
    "end": "563839"
  },
  {
    "text": "in general samsung's secure boot will verify the boot imagery and put into kernel after setting up",
    "start": "567040",
    "end": "573680"
  },
  {
    "text": "secure monitor and initializing hardware",
    "start": "573680",
    "end": "578560"
  },
  {
    "text": "but secure boot will enter all the mode if we press the button down and power",
    "start": "578720",
    "end": "584240"
  },
  {
    "text": "buttons during the booting process",
    "start": "584240",
    "end": "590080"
  },
  {
    "text": "the audi mode allows user to flash stacker firmware to manually update the phone it not only",
    "start": "590080",
    "end": "598000"
  },
  {
    "text": "verifies the signature but also checks the virtual number audi",
    "start": "598000",
    "end": "604320"
  },
  {
    "text": "mode does not allow the user to flash previous versions or unofficial firmware",
    "start": "604320",
    "end": "611600"
  },
  {
    "text": "this is post a channel for interacting with secure boot",
    "start": "611680",
    "end": "619440"
  },
  {
    "text": "in order mode we found several vulnerabilities which can achieve arbitrary core",
    "start": "619440",
    "end": "624959"
  },
  {
    "text": "execution the first one can only get co-execution on all the models",
    "start": "624959",
    "end": "631040"
  },
  {
    "text": "like the galaxy s8",
    "start": "631040",
    "end": "634800"
  },
  {
    "text": "all the nucleus is very simple we send an integer as operation code the operation",
    "start": "644000",
    "end": "650240"
  },
  {
    "text": "code specifies the function we want to use in od",
    "start": "650240",
    "end": "655760"
  },
  {
    "text": "and then we follow that with another integer sub operation to tell audi whether we",
    "start": "655760",
    "end": "662399"
  },
  {
    "text": "are going to set get or initialize something and finally we can have some argument",
    "start": "662399",
    "end": "675519"
  },
  {
    "text": "in all the influential image command the image size is provided by the user",
    "start": "675519",
    "end": "681040"
  },
  {
    "text": "and there's no check for it even if odin decides the buffer location",
    "start": "681040",
    "end": "688160"
  },
  {
    "text": "by the size it has an integer overflow bug so we can choose which buffer location we want",
    "start": "688160",
    "end": "697040"
  },
  {
    "text": "what data is stored behind the buffer they are the secure boot code segment b",
    "start": "699120",
    "end": "706320"
  },
  {
    "text": "assets stake and keep due to the lack of size check we can",
    "start": "706320",
    "end": "714079"
  },
  {
    "text": "override everything and control the core segment sket stack and heap",
    "start": "714079",
    "end": "721600"
  },
  {
    "text": "since the galaxy s8 samsung has tightened a new table and set the call segment to",
    "start": "723839",
    "end": "730240"
  },
  {
    "text": "read only fortunately usb devices have the",
    "start": "730240",
    "end": "736240"
  },
  {
    "text": "literary memory access we are not restricted by a menu control",
    "start": "736240",
    "end": "745200"
  },
  {
    "text": "and next we must deal with the cache incoherence problem since",
    "start": "745200",
    "end": "751920"
  },
  {
    "text": "usb manipulate memory directory we cannot affect the cache data",
    "start": "751920",
    "end": "758639"
  },
  {
    "text": "unfortunately while receiving data the cpu keeps checking the usb event",
    "start": "758639",
    "end": "765680"
  },
  {
    "text": "which is in a while loop obviously this code is cached by the cpu",
    "start": "765680",
    "end": "773519"
  },
  {
    "text": "therefore we cannot affect the code data but there are some memory segments which",
    "start": "773519",
    "end": "780880"
  },
  {
    "text": "are not said to be cached and no segments are the hip",
    "start": "780880",
    "end": "787839"
  },
  {
    "text": "in the while loop it will access the hip pointer since the hip is not cached once we",
    "start": "789360",
    "end": "796800"
  },
  {
    "text": "override hip data with all neurobite it will access address 0 and trigger",
    "start": "796800",
    "end": "803040"
  },
  {
    "text": "data about once data above is triggered it will",
    "start": "803040",
    "end": "808720"
  },
  {
    "text": "jump to the arrow handle immediately the arrow handle function has never been",
    "start": "808720",
    "end": "813920"
  },
  {
    "text": "executed thus it is not cached",
    "start": "813920",
    "end": "819440"
  },
  {
    "text": "we can just push jump slide on the arrow handle and we put the circle in front of the",
    "start": "819839",
    "end": "825760"
  },
  {
    "text": "call segment to ensure it will not be affected by the cpu cache",
    "start": "825760",
    "end": "832480"
  },
  {
    "text": "in conclusion we overflow the memory according to the layout",
    "start": "835680",
    "end": "841839"
  },
  {
    "text": "we can achieve arbitrary code exclusion in secure boot",
    "start": "841839",
    "end": "847120"
  },
  {
    "text": "but we are not able to exploit s9 later because the buffer location is",
    "start": "851440",
    "end": "857600"
  },
  {
    "text": "changed to another address which is far from the secure code segment",
    "start": "857600",
    "end": "864959"
  },
  {
    "text": "we had figured out a potential exploit path to exploit the newer marble",
    "start": "865120",
    "end": "871839"
  },
  {
    "text": "in s9 later odin changed the powerful location to a big address which is behind the core segment",
    "start": "873040",
    "end": "881760"
  },
  {
    "text": "that is because ordinated payroll download feature to make the transfer speed faster",
    "start": "882160",
    "end": "889120"
  },
  {
    "text": "to use this feature secure boot need to put up another two cpu cores",
    "start": "889120",
    "end": "896320"
  },
  {
    "text": "if the cause boot fails secure boot will fall back to normal download mode",
    "start": "896720",
    "end": "903279"
  },
  {
    "text": "which change the buffer to the original location",
    "start": "903279",
    "end": "908639"
  },
  {
    "text": "so we try to find a way to make the cpu boot fails",
    "start": "908720",
    "end": "916000"
  },
  {
    "text": "in secure boot the ship output function will not put the core if there are more than three",
    "start": "923760",
    "end": "930639"
  },
  {
    "text": "cores activated thus if we can put another course before",
    "start": "930639",
    "end": "937440"
  },
  {
    "text": "enter od mode we can make the secure boot fall back to normal download mode",
    "start": "937440",
    "end": "944879"
  },
  {
    "text": "that is amazing there's really a way to achieve it secure boot has another mode which",
    "start": "947360",
    "end": "954160"
  },
  {
    "text": "called uart debug mode the mode has a command",
    "start": "954160",
    "end": "959519"
  },
  {
    "text": "light can put another core for testing most importantly when it's done it will",
    "start": "959519",
    "end": "966399"
  },
  {
    "text": "not decrease the count of booted costs we can keep increase the count of booted calls",
    "start": "966399",
    "end": "973839"
  },
  {
    "text": "until it exists limit and the ur mode has another command",
    "start": "973839",
    "end": "980839"
  },
  {
    "text": "download can enter into od mode",
    "start": "980839",
    "end": "985839"
  },
  {
    "text": "so if we can enter uart mode we can explore s10 with the vulnerability",
    "start": "987440",
    "end": "994800"
  },
  {
    "text": "we found that secure boot will check the resistor in the usb cable",
    "start": "995279",
    "end": "1000399"
  },
  {
    "text": "if the resistor match a specific value it will enter uart mode",
    "start": "1000399",
    "end": "1007680"
  },
  {
    "text": "but even some researchers successfully entered uart mode in galaxy s7",
    "start": "1008320",
    "end": "1015040"
  },
  {
    "text": "the method was not no longer working in galaxy s8 and data",
    "start": "1015040",
    "end": "1020320"
  },
  {
    "text": "because the cable was changed to type c we have tried many other methods such as",
    "start": "1020320",
    "end": "1028959"
  },
  {
    "text": "making a type c cable connected with a proton and pull up resistor or",
    "start": "1028959",
    "end": "1035600"
  },
  {
    "text": "making the types cable in accessory mode or try and communicate with s10 by the",
    "start": "1035600",
    "end": "1042640"
  },
  {
    "text": "vendor defined ministry all of this work all failed",
    "start": "1042640",
    "end": "1049360"
  },
  {
    "text": "secure boot cannot detect the resistor",
    "start": "1049360",
    "end": "1054080"
  },
  {
    "text": "so six months later we stopped trying and reported the bug to samsung against",
    "start": "1055520",
    "end": "1063360"
  },
  {
    "text": "august 2019",
    "start": "1063360",
    "end": "1067840"
  },
  {
    "text": "and several days later samsung got back to me and told me that",
    "start": "1072480",
    "end": "1078640"
  },
  {
    "text": "this issue was duplicated this was a dual broad to me and i changed my",
    "start": "1078640",
    "end": "1085520"
  },
  {
    "text": "research target to other areas",
    "start": "1085520",
    "end": "1089520"
  },
  {
    "text": "several months later samsung released the patch the title is",
    "start": "1092559",
    "end": "1099200"
  },
  {
    "text": "potential integer overflow after reading the description i guess",
    "start": "1099200",
    "end": "1104720"
  },
  {
    "text": "the reporter did not notice that the bug can lead to arbitrary co-execution",
    "start": "1104720",
    "end": "1111759"
  },
  {
    "text": "the patch description said it fixed the unsigned comprehension issue",
    "start": "1112880",
    "end": "1119600"
  },
  {
    "text": "but actually samsung did not only make the configuration on site",
    "start": "1119600",
    "end": "1124880"
  },
  {
    "text": "but also added a size check to prevent buffer overflow",
    "start": "1124880",
    "end": "1130880"
  },
  {
    "text": "after looking at the patch i was wondering if there was",
    "start": "1131840",
    "end": "1137200"
  },
  {
    "text": "any way to bypass the check several days later i found another",
    "start": "1137200",
    "end": "1145440"
  },
  {
    "text": "ability that can bypass the trip",
    "start": "1145440",
    "end": "1151840"
  },
  {
    "text": "after looking more deeply into the function related to usb receive i found that the provided size",
    "start": "1152640",
    "end": "1160080"
  },
  {
    "text": "is calculated as a line size with a strange value",
    "start": "1160080",
    "end": "1165840"
  },
  {
    "text": "after cross referencing the list value with all the areas of the system",
    "start": "1166880",
    "end": "1172400"
  },
  {
    "text": "we found a lot it can be changed by holding requests",
    "start": "1172400",
    "end": "1178320"
  },
  {
    "text": "according to the debug message we know it is used to specify the size of data",
    "start": "1178320",
    "end": "1184000"
  },
  {
    "text": "package the value doesn't have any checks",
    "start": "1184000",
    "end": "1193679"
  },
  {
    "text": "therefore if we set the size of data packet to a large amount",
    "start": "1193679",
    "end": "1200400"
  },
  {
    "text": "we can bypass the check last samsung edited in october 2019 and destroyed the same",
    "start": "1200400",
    "end": "1207120"
  },
  {
    "text": "buffer again this time i reported the bug immediately",
    "start": "1207120",
    "end": "1217200"
  },
  {
    "text": "several months later samsung released the patch in january 2020",
    "start": "1217840",
    "end": "1225200"
  },
  {
    "text": "they added a check to ensure the size of data packets cannot be locally 100 000 in hex",
    "start": "1227120",
    "end": "1235840"
  },
  {
    "text": "the patch gave me an idea and three hours later i figured out",
    "start": "1237520",
    "end": "1244320"
  },
  {
    "text": "another exploit so let's discuss the third variability",
    "start": "1244320",
    "end": "1250159"
  },
  {
    "text": "this time we can explore the galaxy s10",
    "start": "1250159",
    "end": "1255360"
  },
  {
    "text": "od has another operation command can flush the partition information table",
    "start": "1257200",
    "end": "1263039"
  },
  {
    "text": "the table is small let's open only a location of heat buffer to store it",
    "start": "1263039",
    "end": "1268880"
  },
  {
    "text": "instead of using the big buffer in front of core segment",
    "start": "1268880",
    "end": "1274720"
  },
  {
    "text": "we cannot directly overflow it because there is a check to make sure",
    "start": "1275039",
    "end": "1280080"
  },
  {
    "text": "that the size is smaller than the heap buffer to prevent buffer hipper overflow",
    "start": "1280080",
    "end": "1287679"
  },
  {
    "text": "remember the second variability i just mentioned we can use the size of peggy data to",
    "start": "1289520",
    "end": "1295440"
  },
  {
    "text": "enlarge the received size although the patch added additional",
    "start": "1295440",
    "end": "1300480"
  },
  {
    "text": "track to the size of the packet data the limit is",
    "start": "1300480",
    "end": "1306000"
  },
  {
    "text": "6f in hex but the hip buffer size for the",
    "start": "1306000",
    "end": "1311919"
  },
  {
    "text": "partitioning information temple has only 2 000 in hex",
    "start": "1311919",
    "end": "1317440"
  },
  {
    "text": "which could lead to hip above overflow",
    "start": "1317440",
    "end": "1322000"
  },
  {
    "text": "this is the sudoku that shows what happens when odin tries to receive data",
    "start": "1324720",
    "end": "1332640"
  },
  {
    "text": "according to the sudo code we can see the usb receive will receive the package data",
    "start": "1332640",
    "end": "1338799"
  },
  {
    "text": "size variable only if the request size is bigger than 6f in hex or",
    "start": "1338799",
    "end": "1346640"
  },
  {
    "text": "if the first received attempt cannot get enough data",
    "start": "1346640",
    "end": "1352799"
  },
  {
    "text": "this is what we need to achieve but the usb received function will keep",
    "start": "1353039",
    "end": "1360559"
  },
  {
    "text": "receiving data until the past size is reached even if we send data in huge",
    "start": "1360559",
    "end": "1368480"
  },
  {
    "text": "intervals the device will still be waiting for data",
    "start": "1368480",
    "end": "1375840"
  },
  {
    "text": "actually we found the bug at the very beginning but we thought it was unexploitable",
    "start": "1376000",
    "end": "1383760"
  },
  {
    "text": "vulnerability we cannot make the usb receiver function get insufficient data",
    "start": "1383760",
    "end": "1391679"
  },
  {
    "text": "so we wasted our time on vulnerability one",
    "start": "1391679",
    "end": "1397279"
  },
  {
    "text": "but after seeing the patch of vulnerability too i was struck by lightning i had a light",
    "start": "1399120",
    "end": "1406640"
  },
  {
    "text": "bulb moment this time i came up with an idea",
    "start": "1406640",
    "end": "1414480"
  },
  {
    "text": "which was to send only a very small amount of data",
    "start": "1414480",
    "end": "1419600"
  },
  {
    "text": "and then remove and re-insert the usb cable",
    "start": "1419600",
    "end": "1426000"
  },
  {
    "text": "the first usb received returned in sufficient size which allow us to reach the second usb",
    "start": "1426000",
    "end": "1433120"
  },
  {
    "text": "receive this time it's received with the size of pc data",
    "start": "1433120",
    "end": "1439760"
  },
  {
    "text": "allow us to overflow the hip buffer",
    "start": "1439760",
    "end": "1444960"
  },
  {
    "text": "it's turning into a hip overflow challenge we use the traditional hip exploitation",
    "start": "1444960",
    "end": "1452400"
  },
  {
    "text": "technique house of spirit to achieve arbitrary coexecution",
    "start": "1452400",
    "end": "1461120"
  },
  {
    "text": "there is no check for the double linking list for the heap so we can fake the chunks and overwrite",
    "start": "1462960",
    "end": "1469600"
  },
  {
    "text": "the heaps metadata to insert our fake chunk into the heap",
    "start": "1469600",
    "end": "1476240"
  },
  {
    "text": "once we can insert the fake chunk into the heap and free it we can override arbitrary",
    "start": "1477520",
    "end": "1484840"
  },
  {
    "text": "address but there is a limitation",
    "start": "1484840",
    "end": "1490720"
  },
  {
    "text": "the unused speed must not be zero since secure boot is 64 bit",
    "start": "1490720",
    "end": "1499039"
  },
  {
    "text": "we can now overwrite the duot entry function pointers in data segment",
    "start": "1499039",
    "end": "1505760"
  },
  {
    "text": "because the unused speed is in the higher part of the address",
    "start": "1505760",
    "end": "1511440"
  },
  {
    "text": "which always be zero when the data is a pointer",
    "start": "1511520",
    "end": "1516720"
  },
  {
    "text": "the only chance is to overwrite the return address on stack if we can control the first local",
    "start": "1519840",
    "end": "1526640"
  },
  {
    "text": "variable in the functions but there are only three function calls",
    "start": "1526640",
    "end": "1532799"
  },
  {
    "text": "after we free our effect heap trunk luckily",
    "start": "1532799",
    "end": "1538000"
  },
  {
    "text": "one loss is the odin command handler",
    "start": "1538000",
    "end": "1543200"
  },
  {
    "text": "the only command buffer is the first local variable in the handle the command buffer is in our control",
    "start": "1543200",
    "end": "1550960"
  },
  {
    "text": "which means we can fulfill the limitation and set the unused bit to non zero",
    "start": "1550960",
    "end": "1559279"
  },
  {
    "text": "now we can execute arbitrary code in secure boot what's the next step",
    "start": "1561200",
    "end": "1570400"
  },
  {
    "text": "since we override the bss stack and keep it with all new bytes it's hard",
    "start": "1570400",
    "end": "1576640"
  },
  {
    "text": "to recover the data thus we restart the booting process in",
    "start": "1576640",
    "end": "1581679"
  },
  {
    "text": "secure boot to recover this data",
    "start": "1581679",
    "end": "1585840"
  },
  {
    "text": "but we only get exception level 1 in unsecured world",
    "start": "1588480",
    "end": "1593520"
  },
  {
    "text": "some data in translation already initialized we can now invent it twice",
    "start": "1593520",
    "end": "1600400"
  },
  {
    "text": "therefore we must skip the truss zone related code to keep trust zone stable",
    "start": "1600400",
    "end": "1608080"
  },
  {
    "text": "and we continue the booting process until loading kernel to memory",
    "start": "1609360",
    "end": "1614640"
  },
  {
    "text": "in this step we replace the color image with a custom one",
    "start": "1614640",
    "end": "1621278"
  },
  {
    "text": "so this is our exposed step first we set the size of peggy data to a big",
    "start": "1622159",
    "end": "1629679"
  },
  {
    "text": "number second we send all the pit flash command",
    "start": "1629679",
    "end": "1636080"
  },
  {
    "text": "to trigger usb data received third we remove and insert the usb cable",
    "start": "1636080",
    "end": "1645520"
  },
  {
    "text": "trigger the second usb receive this time we overwrite the metadata of heap trunk",
    "start": "1645520",
    "end": "1653919"
  },
  {
    "text": "fourth we send another loading command to trigger main lock and free hip buffer",
    "start": "1653919",
    "end": "1662080"
  },
  {
    "text": "finally the free action overwrites the written address on stack",
    "start": "1662080",
    "end": "1667360"
  },
  {
    "text": "then we can jump to our show call the circle will put custom kernel to get root privilege",
    "start": "1667360",
    "end": "1675600"
  },
  {
    "text": "now we got the exception level 1 normal world the data",
    "start": "1677120",
    "end": "1682640"
  },
  {
    "text": "in secular is still legible since the nut speed is safe",
    "start": "1682640",
    "end": "1688880"
  },
  {
    "text": "but we don't have the screen pass code the phone is still locked",
    "start": "1690640",
    "end": "1698240"
  },
  {
    "text": "we can now read sensitive data the storage is still encrypted the encryption key",
    "start": "1699760",
    "end": "1706799"
  },
  {
    "text": "for storage is stored in the gatekeeper translate some data also cannot be reached for",
    "start": "1706799",
    "end": "1713440"
  },
  {
    "text": "example credit card information in samsung pay translate",
    "start": "1713440",
    "end": "1718960"
  },
  {
    "text": "there are many ways to reach the data we can wait for the user to unlock their",
    "start": "1720720",
    "end": "1725760"
  },
  {
    "text": "phone as shown in the demo video since we are in unsecured kernel mode",
    "start": "1725760",
    "end": "1733600"
  },
  {
    "text": "we also can distort the request from non-secure user mode to secure word",
    "start": "1733600",
    "end": "1741120"
  },
  {
    "text": "furthermore it is first attacking service for us since the nut speed is safe the data",
    "start": "1749039",
    "end": "1756720"
  },
  {
    "text": "stored in secure work still existed there are many more abilities that we",
    "start": "1756720",
    "end": "1763039"
  },
  {
    "text": "can explore to get into the secular world our team found more than 10",
    "start": "1763039",
    "end": "1768799"
  },
  {
    "text": "vulnerabilities in 2019 and still find out in 2020",
    "start": "1768799",
    "end": "1775520"
  },
  {
    "text": "outside of our team there are 10 times more about abilities funded by other researchers of these vulnerabilities",
    "start": "1775520",
    "end": "1784480"
  },
  {
    "text": "needed at least economic privilege in non-secure world",
    "start": "1784480",
    "end": "1789679"
  },
  {
    "text": "for example we can attack the gatekeeper translate to decrypt the storage in may 2019",
    "start": "1791679",
    "end": "1800320"
  },
  {
    "text": "we reported a vulnerability in gatekeeper translate which allows us to brute force the",
    "start": "1800320",
    "end": "1806399"
  },
  {
    "text": "screenpass code according to our test it takes only a",
    "start": "1806399",
    "end": "1811919"
  },
  {
    "text": "few hours to try all possible pattern codes",
    "start": "1811919",
    "end": "1816480"
  },
  {
    "text": "combined with the vulnerability in gatekeeper translate we can unlock the phone and reach the",
    "start": "1817520",
    "end": "1823200"
  },
  {
    "text": "sensitive data in conclusion even with the status",
    "start": "1823200",
    "end": "1831360"
  },
  {
    "text": "stored in secure world it still doesn't mean it's 100 secure",
    "start": "1831360",
    "end": "1839039"
  },
  {
    "text": "but it's actually made exploiting harder we need multiple vulnerabilities to",
    "start": "1839279",
    "end": "1845279"
  },
  {
    "text": "retrieve the protected data we need a landing exploit maybe",
    "start": "1845279",
    "end": "1852640"
  },
  {
    "text": "remote execution or local secure board exploit followed by a kernel exploit to achieve",
    "start": "1852640",
    "end": "1859679"
  },
  {
    "text": "privileged escalation to non-secure world kernel mode",
    "start": "1859679",
    "end": "1865200"
  },
  {
    "text": "after getting the loot privilege we still need a viability in transit",
    "start": "1865200",
    "end": "1870399"
  },
  {
    "text": "to break into secure exception level zero if we want to go to all get all",
    "start": "1870399",
    "end": "1877760"
  },
  {
    "text": "sensitive data instead of one specific piece we need a secure os",
    "start": "1877760",
    "end": "1883600"
  },
  {
    "text": "vulnerability to control the full device",
    "start": "1883600",
    "end": "1888799"
  },
  {
    "text": "with all of this the data in the phone is still safe",
    "start": "1889039",
    "end": "1895200"
  },
  {
    "text": "this is a timeline for all the report types and page dates",
    "start": "1898640",
    "end": "1907840"
  },
  {
    "text": "thanks everyone thank you for listening and if you have any questions please",
    "start": "1910640",
    "end": "1916960"
  },
  {
    "text": "don't hesitate to hesitate to ask me or reach out to me by",
    "start": "1916960",
    "end": "1922559"
  },
  {
    "text": "email in the future thank you",
    "start": "1922559",
    "end": "1926960"
  },
  {
    "text": "okay what's this boat",
    "start": "1932840",
    "end": "1940000"
  },
  {
    "text": "okay hi and i want to answer the",
    "start": "1940240",
    "end": "1945919"
  },
  {
    "text": "question what's the baseball you say the model",
    "start": "1945919",
    "end": "1952559"
  },
  {
    "text": "let me see the other questions if a user reboots a layer device",
    "start": "1960080",
    "end": "1967120"
  },
  {
    "text": "will the device properly put the original firmware yes and we don't change the",
    "start": "1967120",
    "end": "1973760"
  },
  {
    "text": "firmware so if the device is reboot it will reboot the original firmware",
    "start": "1973760",
    "end": "1990000"
  },
  {
    "text": "what were the two svs on the next to that slice",
    "start": "1990000",
    "end": "1997120"
  },
  {
    "text": "let me check the slice",
    "start": "1997440",
    "end": "2005840"
  },
  {
    "text": "uh sorry i cannot find to find which sv you mentioned john can you ask again",
    "start": "2013840",
    "end": "2033840"
  },
  {
    "text": "oh oh uh for kerry's questions samsung builds",
    "start": "2040720",
    "end": "2046799"
  },
  {
    "text": "multiple versions of level phones with different hardware we exploit the hardware with uh",
    "start": "2046799",
    "end": "2055598"
  },
  {
    "text": "in usa i think uh for",
    "start": "2055919",
    "end": "2062480"
  },
  {
    "text": "uh yeah uh the month the s10 s9 s8 with synos models",
    "start": "2063839",
    "end": "2071358"
  },
  {
    "text": "all affected by the vulnerabilities",
    "start": "2071359",
    "end": "2075838"
  },
  {
    "text": "and for the people's question how were you able to view the word information",
    "start": "2077359",
    "end": "2084320"
  },
  {
    "text": "just reverse the body image yeah just revert reverse the image as",
    "start": "2084320",
    "end": "2092480"
  },
  {
    "text": "secure boot",
    "start": "2092480",
    "end": "2103839"
  },
  {
    "text": "uh in demo video",
    "start": "2103839",
    "end": "2107520"
  },
  {
    "text": "in demo video we just enter the od mode and we can view the",
    "start": "2112800",
    "end": "2119200"
  },
  {
    "text": "boot remove formation",
    "start": "2119200",
    "end": "2122720"
  },
  {
    "text": "and for john's questions sv let me check",
    "start": "2124640",
    "end": "2131839"
  },
  {
    "text": "oh i i will answer you in in the test box",
    "start": "2139680",
    "end": "2145839"
  },
  {
    "text": "okay and any other questions",
    "start": "2161040",
    "end": "2173839"
  },
  {
    "text": "yes",
    "start": "2184839",
    "end": "2187839"
  },
  {
    "text": "okay thank you thanks everyone",
    "start": "2192079",
    "end": "2198160"
  }
]