[
  {
    "text": "hi everyone welcome to our session on a deep dive into mac OS MDM my name is",
    "start": "30",
    "end": "6420"
  },
  {
    "text": "Jesse Endel I'm max phenology I work at a company called fleet Smith we're an",
    "start": "6420",
    "end": "12599"
  },
  {
    "text": "Apple device management product and I'm a staff engineer draw box a little bit of background on why we did this",
    "start": "12599",
    "end": "18990"
  },
  {
    "text": "research so you know it's what it's what our product does so we have kind of a",
    "start": "18990",
    "end": "24300"
  },
  {
    "text": "vested interest there it handles you know OS updates app updates security policy enforcement and",
    "start": "24300",
    "end": "31080"
  },
  {
    "text": "compliance for Apple devices we have a really high security bar for for our",
    "start": "31080",
    "end": "36239"
  },
  {
    "text": "products so we want to make sure it's secured by design and we put a lot of work into making sure that's true our",
    "start": "36239",
    "end": "42450"
  },
  {
    "text": "goal with this talk partially was to increase the security of MDM and dep and",
    "start": "42450",
    "end": "48800"
  },
  {
    "text": "also kind of raise the bar for all MDM vendors and i just wanted to work with",
    "start": "48800",
    "end": "53940"
  },
  {
    "text": "Jesse again so quick agenda will be covering some basics some terminology",
    "start": "53940",
    "end": "61020"
  },
  {
    "text": "some concepts moving into an overview followed by the deep dive section which",
    "start": "61020",
    "end": "66450"
  },
  {
    "text": "max will walk us through also disclosing the vulnerability that we found and",
    "start": "66450",
    "end": "72119"
  },
  {
    "text": "explaining how that works then we'll actually be exploiting that so we have a laptop here in the box if all goes well",
    "start": "72119",
    "end": "80150"
  },
  {
    "text": "our demo will work with no issues and finally we'll we'll go through the fix",
    "start": "80150",
    "end": "85979"
  },
  {
    "text": "and some conclusions and takeaways",
    "start": "85979",
    "end": "89659"
  },
  {
    "text": "so let's jump in what is MDM it can be a confusing term because it can refer to",
    "start": "96280",
    "end": "101290"
  },
  {
    "text": "an entire kind of product category when we say MDM we mean Apple's specific",
    "start": "101290",
    "end": "107049"
  },
  {
    "text": "flavor of MDM which is a protocol as well as a few other things that we'll",
    "start": "107049",
    "end": "113200"
  },
  {
    "text": "touch on to set system configuration in a centralized way through an MDM server",
    "start": "113200",
    "end": "118540"
  },
  {
    "text": "and that MDM server is built by a third party it's not something that's run by",
    "start": "118540",
    "end": "124899"
  },
  {
    "text": "Apple so that could be fleet Smith that could be another product like air watch so if you've heard of kind of mobile",
    "start": "124899",
    "end": "132100"
  },
  {
    "text": "device management products that's we're referring to here and an MDM server can send MDM commands to a device that",
    "start": "132100",
    "end": "139269"
  },
  {
    "text": "includes things like a remote wipe command in case the device is lost or stolen as well as a command to install a",
    "start": "139269",
    "end": "145840"
  },
  {
    "text": "configuration profile which could contain something like password complexity requirements for your enterprise or perhaps you know Wi-Fi",
    "start": "145840",
    "end": "153850"
  },
  {
    "text": "network settings to join the WP hu network and include the you know network password for example all right",
    "start": "153850",
    "end": "161920"
  },
  {
    "text": "DEP this stands for device enrollment program this is a complementary",
    "start": "161920",
    "end": "167730"
  },
  {
    "text": "technology to MDM and it allows you to have devices automatically enroll with",
    "start": "167730",
    "end": "172810"
  },
  {
    "text": "an MDM server immediately upon first boot the first time they connect to the network this is most useful obviously",
    "start": "172810",
    "end": "179470"
  },
  {
    "text": "when the device is brand new because it can help you achieve the holy grail of IT workflows which is a zero touch",
    "start": "179470",
    "end": "185170"
  },
  {
    "text": "deployment workflow meaning the IT team never has to touch it the laptop ships directly from Apple to the employee",
    "start": "185170",
    "end": "190780"
  },
  {
    "text": "they're the ones to unbox it connect to Wi-Fi and boom it sets itself up automatically through your MDM product",
    "start": "190780",
    "end": "197820"
  },
  {
    "text": "obviously this could also be useful for provisioning workflows if you have an advice that's being used by an employee",
    "start": "197820",
    "end": "203530"
  },
  {
    "text": "they leave and you want to wipe it and redeploy it it could also be useful in that scenario as well skip the stands",
    "start": "203530",
    "end": "212530"
  },
  {
    "text": "for a simple certificate enrollment protocol and this is a way for a device to send a certificate signing request",
    "start": "212530",
    "end": "219760"
  },
  {
    "text": "this is a request for a certificate to a skipper generally this is going to be",
    "start": "219760",
    "end": "226000"
  },
  {
    "text": "implemented as part of the MDM product the client will you know send its request the server",
    "start": "226000",
    "end": "232450"
  },
  {
    "text": "will evaluate whether or not it should grant the certificate and if the answer is yes the client the device will",
    "start": "232450",
    "end": "238420"
  },
  {
    "text": "receive a TLS client certificate that's used to authenticate later on to the MDM server configuration profiles I touched",
    "start": "238420",
    "end": "245049"
  },
  {
    "text": "on this briefly already this is Apple's standardized format for enforcing system configuration such as password",
    "start": "245049",
    "end": "250840"
  },
  {
    "text": "complexity requirements Wi-Fi settings disk encryption you name it it's a file format that can contain multiple",
    "start": "250840",
    "end": "256539"
  },
  {
    "text": "payloads so you can have one file that contains the settings for all three of those things and it's based on the P",
    "start": "256539",
    "end": "262270"
  },
  {
    "text": "list or property list format which is Apple specific flavor of XML the",
    "start": "262270",
    "end": "268389"
  },
  {
    "text": "payloads within the configuration profile can also optionally be signed",
    "start": "268389",
    "end": "273729"
  },
  {
    "text": "and encrypted to validate origin ensure integrity and protect their contents so",
    "start": "273729",
    "end": "280930"
  },
  {
    "text": "a quick overview of the entities at play here there's really five key players",
    "start": "280930",
    "end": "286000"
  },
  {
    "text": "there's Apple themselves running some of the server infrastructure and of course the manufacturer of the devices next up",
    "start": "286000",
    "end": "291789"
  },
  {
    "text": "you've got resellers this would include large resellers like CDW it would also",
    "start": "291789",
    "end": "296979"
  },
  {
    "text": "in the world of DEP include Apple Retail third you've got the MDM vendor fourth",
    "start": "296979",
    "end": "303460"
  },
  {
    "text": "you have the customer there's the company that's actually you know trying to manage their devices for their enterprise and fifth you of course have",
    "start": "303460",
    "end": "310240"
  },
  {
    "text": "the device itself ok protocols the MDM",
    "start": "310240",
    "end": "315789"
  },
  {
    "text": "protocol is really a combination of two protocols the first is Apple push",
    "start": "315789",
    "end": "321490"
  },
  {
    "text": "notification service APNs you may have heard this in relation to other technologies such as iMessage if you've",
    "start": "321490",
    "end": "326710"
  },
  {
    "text": "you know sent I messages on your iPhone that's actually built partially on top",
    "start": "326710",
    "end": "331900"
  },
  {
    "text": "of APNs next up it's also a restful api so there's sort of two pieces to this",
    "start": "331900",
    "end": "337780"
  },
  {
    "text": "here and that's the part that the MDM server implements and that's a restful api communication occurs between the",
    "start": "337780",
    "end": "343659"
  },
  {
    "text": "device and the mt MDM server and the device receives commands in plist",
    "start": "343659",
    "end": "349870"
  },
  {
    "text": "encoded dictionaries this is all over HTTP HTTPS and optionally MDM servers",
    "start": "349870",
    "end": "356650"
  },
  {
    "text": "can be pinned but it's not a requirement authentication works differently for",
    "start": "356650",
    "end": "361810"
  },
  {
    "text": "each of these so as I mentioned earlier that client certificate issued by escape is used for authenticating to the MDM",
    "start": "361810",
    "end": "368289"
  },
  {
    "text": "server for the push notifications that's actually done via a push notification token we won't get be going in depth on",
    "start": "368289",
    "end": "376810"
  },
  {
    "text": "ApS today because there's already been a lot of research on that whole area so",
    "start": "376810",
    "end": "382020"
  },
  {
    "text": "that's why we won't be diving into that today all right DEP there's actually three",
    "start": "382020",
    "end": "388270"
  },
  {
    "text": "separate API is related to DEP one for resellers one for MDM vendors and one for the device itself to prove its",
    "start": "388270",
    "end": "395110"
  },
  {
    "text": "device identity which is undocumented the nice thing about all these is",
    "start": "395110",
    "end": "400750"
  },
  {
    "text": "they're more modern api's they use JSON no P lists and today we're only going to",
    "start": "400750",
    "end": "406660"
  },
  {
    "text": "be focusing on that middle one there the MDM to Apple communication between the",
    "start": "406660",
    "end": "413139"
  },
  {
    "text": "MDM vendor product and the DEP cloud service API ok the cloud service API",
    "start": "413139",
    "end": "420490"
  },
  {
    "text": "what is this thing used for it's another restful api there's two main use cases one is to sync device records so when a",
    "start": "420490",
    "end": "427599"
  },
  {
    "text": "reseller or Apple themselves adds a new device into their internal DEP database",
    "start": "427599",
    "end": "433810"
  },
  {
    "text": "somewhere then those device records need to be synced over pulled into the MDM",
    "start": "433810",
    "end": "438880"
  },
  {
    "text": "product somehow that is done over this DEP cloud service API and then the other thing that happens is the MDM vendor",
    "start": "438880",
    "end": "445150"
  },
  {
    "text": "pushes back what's called a DEP profile which contains a few different things",
    "start": "445150",
    "end": "450159"
  },
  {
    "text": "and that DEP profile is delivered to the vise later on the first time it boots up",
    "start": "450159",
    "end": "456539"
  },
  {
    "text": "so that DEP profile which is a JSON payload contains three things the MDM",
    "start": "456539",
    "end": "462280"
  },
  {
    "text": "server URL any additional certificates that need to be trusted for the sake of",
    "start": "462280",
    "end": "467590"
  },
  {
    "text": "pinning as well as any setup setup assistant configuration you want to do so that setup system you see on the Mac",
    "start": "467590",
    "end": "474280"
  },
  {
    "text": "first boots up you can customize which screens are shown there and this authentication is handled with OAuth",
    "start": "474280",
    "end": "480310"
  },
  {
    "text": "between the MDM server and Apple so step is another restful api it was created at",
    "start": "480310",
    "end": "486610"
  },
  {
    "text": "a time when TLS and HTTPS weren't that widespread and so it relies on CMS or",
    "start": "486610",
    "end": "491800"
  },
  {
    "text": "pkcs number seven signed data to ensure message integrity it supports the concept of a challenge password",
    "start": "491800",
    "end": "498070"
  },
  {
    "text": "for authentication unfortunately in the RFC that's really just defined as like a",
    "start": "498070",
    "end": "503410"
  },
  {
    "text": "string we think that field should be used a little bit more carefully and so",
    "start": "503410",
    "end": "510130"
  },
  {
    "text": "what we do is we actually stick an H Mac in there that server generated so that we can correlate that with a specific enrollment request from a specific user",
    "start": "510130",
    "end": "517919"
  },
  {
    "text": "all right establishment of trusts between all these things it's pretty complex and we're not going to go into",
    "start": "517919",
    "end": "523510"
  },
  {
    "text": "it in detail here but we do cover this very extensively in great detail in the white paper so definitely check that out",
    "start": "523510",
    "end": "529660"
  },
  {
    "text": "and it's just important to call out that there's a lot of cross hunting that goes",
    "start": "529660",
    "end": "535060"
  },
  {
    "text": "on a lot of uploading and downloading of certs in order to get to the point where the MDM vendor now has the right to send",
    "start": "535060",
    "end": "542620"
  },
  {
    "text": "MDM push notifications down to the device as well as sink those device records to the DEP servers with Apple",
    "start": "542620",
    "end": "549070"
  },
  {
    "text": "and push those DEP profiles back alright",
    "start": "549070",
    "end": "554830"
  },
  {
    "text": "some differences here the authentication for the for MDM is",
    "start": "554830",
    "end": "559930"
  },
  {
    "text": "via API APNs whereas for DEP it's a toe off token so different auth stories here",
    "start": "559930",
    "end": "566610"
  },
  {
    "text": "all right putting it all together so there's sort of if you look at the entire lifecycle the entire bootstrap",
    "start": "566610",
    "end": "574120"
  },
  {
    "text": "process for DEP and MDM this is what it looks like from start to finish this is",
    "start": "574120",
    "end": "579370"
  },
  {
    "text": "kind of hard to get an understanding of so we made a visual for this as you can",
    "start": "579370",
    "end": "584770"
  },
  {
    "text": "see the first step is the reseller or Apple creating that device record the",
    "start": "584770",
    "end": "590680"
  },
  {
    "text": "next thing that happens is the customer the enterprise actually goes into something called Apple business manager",
    "start": "590680",
    "end": "595720"
  },
  {
    "text": "which is a web portal and assigns that device to a specific MDM server from",
    "start": "595720",
    "end": "600820"
  },
  {
    "text": "there the MDM server is able to sync those device records over as I mentioned earlier as well as push those DEP",
    "start": "600820",
    "end": "606940"
  },
  {
    "text": "profiles back up back to Apple next the device actually checks in via DEP -",
    "start": "606940",
    "end": "613870"
  },
  {
    "text": "Apple receives this profile then we've got the sort of bootstrapping of the",
    "start": "613870",
    "end": "619930"
  },
  {
    "text": "initial MDM config which max will walk through in greater detail and finally",
    "start": "619930",
    "end": "625900"
  },
  {
    "text": "the device can start receiving MDM commands like that remote wipe command install",
    "start": "625900",
    "end": "632020"
  },
  {
    "text": "configuration profile etc alright thanks",
    "start": "632020",
    "end": "637810"
  },
  {
    "text": "Jesse so today's deep dive will focus on the for later stages of the process now for",
    "start": "637810",
    "end": "642820"
  },
  {
    "text": "more info on stages one through three I do recommend you check out the white paper so as we've seen the later steps",
    "start": "642820",
    "end": "649720"
  },
  {
    "text": "involve the device itself in these steps Mac OS interacts directly with apple and",
    "start": "649720",
    "end": "654880"
  },
  {
    "text": "the MDM vendor servers we're gonna use a scenario here to sort of walk through",
    "start": "654880",
    "end": "660010"
  },
  {
    "text": "the deep dive so imagine a user is getting a new a brand new MacBook and isn't unboxed it",
    "start": "660010",
    "end": "666720"
  },
  {
    "text": "that MacBook has been previously configured by the employer to set itself up automatically via depth and MDM so",
    "start": "666720",
    "end": "675910"
  },
  {
    "text": "dep and MDM enrollment on the Mac involves many different agents daemons it's a bit of a confusing maelstrom of",
    "start": "675910",
    "end": "682180"
  },
  {
    "text": "dynamic linking and IPC however a there is very conveniently a single framework that abstract away all that complexity",
    "start": "682180",
    "end": "688660"
  },
  {
    "text": "for us that is the private configuration profiles framework this gives you a set",
    "start": "688660",
    "end": "694330"
  },
  {
    "text": "of functions that map really well to the steps that we're going to go over today so if you ever seen this screen then",
    "start": "694330",
    "end": "701980"
  },
  {
    "text": "you've seen what it's called the setup assistant or internally nicknamed Mac buddy this is the the app this is",
    "start": "701980",
    "end": "708399"
  },
  {
    "text": "actually a cocoa application this is the first thing you see when you turn on the device so that is its icon complete with",
    "start": "708399",
    "end": "714910"
  },
  {
    "text": "bowtie the Mac OS setup assistant is one of the users of this framework and that's how it enables Depp in MDM",
    "start": "714910",
    "end": "721690"
  },
  {
    "text": "enrollments so to simplify our view today we're going to take the point of view of the max of assistant we're going",
    "start": "721690",
    "end": "726880"
  },
  {
    "text": "to use that framework as a lens to look at each step so let's recap so we have",
    "start": "726880",
    "end": "732790"
  },
  {
    "text": "four steps to go over the first one is the DP check-in now the purpose of this step is to verify whether the device is",
    "start": "732790",
    "end": "740770"
  },
  {
    "text": "DP enabled and if so we we have to sort of take special action so in this step",
    "start": "740770",
    "end": "747029"
  },
  {
    "text": "internally this is called retrieving the activation record now Jessie detailed what a depth profile is that is roughly",
    "start": "747029",
    "end": "753700"
  },
  {
    "text": "the internal name for a depth profile it contains almost all the same information this is implemented by a demon",
    "start": "753700",
    "end": "761980"
  },
  {
    "text": "underlying the configuration profiles framework and a bit of a quick note this is a pretty common mac OS pattern",
    "start": "761980",
    "end": "767970"
  },
  {
    "text": "in order to guarantee privilege and process separation Apple will typically",
    "start": "767970",
    "end": "773740"
  },
  {
    "text": "farm out work to do daemons under the hood that have specific entitlements allowing them to",
    "start": "773740",
    "end": "778810"
  },
  {
    "text": "do the work and so the configuration profiles framework itself doesn't really do anything here it just signals an",
    "start": "778810",
    "end": "784480"
  },
  {
    "text": "underlying daemon to do some extra work now this step will begin as soon as the device is connected to an so the second",
    "start": "784480",
    "end": "791170"
  },
  {
    "text": "it has a network reachable or internet reachable IP it will it will begin to",
    "start": "791170",
    "end": "796389"
  },
  {
    "text": "attempt checking in this is driven by the private CP fetch activation record",
    "start": "796389",
    "end": "801459"
  },
  {
    "text": "function and as I said it's implemented by a demon called cloud configuration D now this is a launch daemon which is Mac",
    "start": "801459",
    "end": "808420"
  },
  {
    "text": "OS bling go for it runs as route and and can and can be kept constantly running",
    "start": "808420",
    "end": "814329"
  },
  {
    "text": "and it is signaled through Mac OS specific IPC called X PC which if you've",
    "start": "814329",
    "end": "821470"
  },
  {
    "text": "if you've done any kind of iOS development or Mac development before you are either directly or indirectly aware of so let's go back to our fancy",
    "start": "821470",
    "end": "830139"
  },
  {
    "text": "architecture diagram so we have setup assistant which is now linked the framework and it is ready to call the",
    "start": "830139",
    "end": "837100"
  },
  {
    "text": "function to retrieve the activation record so at this point it sends a message to cloud configuration D over X",
    "start": "837100",
    "end": "843129"
  },
  {
    "text": "PC to say well you should actually implement the the fetching process and now we'll go over exactly what happens",
    "start": "843129",
    "end": "849939"
  },
  {
    "text": "during that process so at this point before we can make the request to Apple",
    "start": "849939",
    "end": "856660"
  },
  {
    "text": "to request to to actually retrieve our our depth profile we need to establish a",
    "start": "856660",
    "end": "861939"
  },
  {
    "text": "rather peculiar type of encryption which is internally called absinthe there's",
    "start": "861939",
    "end": "867189"
  },
  {
    "text": "the object in cloud configuration V that runs this is internally called MC Tesla",
    "start": "867189",
    "end": "872199"
  },
  {
    "text": "configuration fetcher which is partly so pretty well named so this manages a five step process the",
    "start": "872199",
    "end": "879399"
  },
  {
    "text": "first step is to plainly retrieve a certificate from Apple's servers now one quick note on this absinthe is a rather",
    "start": "879399",
    "end": "886269"
  },
  {
    "text": "complex topic and we're not going to go into much detail but we'll go over the sort of basic steps here so first it",
    "start": "886269",
    "end": "892029"
  },
  {
    "text": "retrieves a certificate next it uses that certificate to initialize the internal state of absinthe this is",
    "start": "892029",
    "end": "898389"
  },
  {
    "text": "called this is through function called NEC in it this interestingly also uses various device",
    "start": "898389",
    "end": "904210"
  },
  {
    "text": "specific pieces of data things like the serial number which we retrieves vio kit but also MAC address and others",
    "start": "904210",
    "end": "910810"
  },
  {
    "text": "now with that data once the initialization is complete it posts the essentially that raw data back to Apple",
    "start": "910810",
    "end": "917730"
  },
  {
    "text": "via the session endpoint we're not exactly sure what this does but it appears that an extra handshake is",
    "start": "917730",
    "end": "923980"
  },
  {
    "text": "necessary to ensure the device is who it says it is and finally with the result",
    "start": "923980",
    "end": "929380"
  },
  {
    "text": "of that it find it calls NEC key establishment which completes the initialization for the encryption now",
    "start": "929380",
    "end": "935560"
  },
  {
    "text": "what we believe is that absence job is to provide a way to encode on a per device basis and so to relatively",
    "start": "935560",
    "end": "942850"
  },
  {
    "text": "securely identify a device for Apple and finally now that the encryption is ready",
    "start": "942850",
    "end": "949120"
  },
  {
    "text": "we're ready to make the request the last step is to make a post including a JSON",
    "start": "949120",
    "end": "954400"
  },
  {
    "text": "payload to the mac profile endpoint what this will do is take the example JSON",
    "start": "954400",
    "end": "959740"
  },
  {
    "text": "payload below it will encrypt it using absinthe base64 it sign it and send it",
    "start": "959740",
    "end": "965530"
  },
  {
    "text": "over over HTTP so let's go back to architecture diagram again now as you",
    "start": "965530",
    "end": "972340"
  },
  {
    "text": "can see cloud configuration D is interacting with apple of this step and it's using both TLS with the standard",
    "start": "972340",
    "end": "977830"
  },
  {
    "text": "root certificates installed on the device along with the extra layer of absinthe encryption and at this point it",
    "start": "977830",
    "end": "985600"
  },
  {
    "text": "basically says I am this device I am the serial number what is my activation record what is my profile should I be",
    "start": "985600",
    "end": "991600"
  },
  {
    "text": "enabling them now in response the server provides a JSON dictionary that is",
    "start": "991600",
    "end": "997810"
  },
  {
    "text": "essentially a slightly differently formatted version of the DP profile and",
    "start": "997810",
    "end": "1002850"
  },
  {
    "text": "this includes what Jesse mentioned things like customizing the setup assistant but most importantly this includes two fields that will unlock the",
    "start": "1002850",
    "end": "1009960"
  },
  {
    "text": "next step the first one is the URL of the MDM vendors activation profile",
    "start": "1009960",
    "end": "1015090"
  },
  {
    "text": "endpoint will go into exactly what that means but that's the main thing that will enable the next step to occur but",
    "start": "1015090",
    "end": "1021060"
  },
  {
    "text": "most importantly it also returns the def profiles anchor certs property meaning",
    "start": "1021060",
    "end": "1026579"
  },
  {
    "text": "for that URL that is referring to an MDM vendor endpoint you can also provide dr",
    "start": "1026579",
    "end": "1031890"
  },
  {
    "text": "encoded certificates to pin that next request and so so far we're able to validate server trust and",
    "start": "1031890",
    "end": "1038130"
  },
  {
    "text": "we'll be able to continue to do so so going back to the overall process we now",
    "start": "1038130",
    "end": "1044069"
  },
  {
    "text": "know that we mate we are a DP device or not now what's next this step is called",
    "start": "1044070",
    "end": "1049350"
  },
  {
    "text": "profile retrieval in this step we'll be retrieving the configuration profile from the MDM vendor directly so we're",
    "start": "1049350",
    "end": "1056100"
  },
  {
    "text": "done talking to Apple for now so you've ever seen this screen this is actually",
    "start": "1056100",
    "end": "1062310"
  },
  {
    "text": "the screen that indicates that your depth profile has enrolled you into DEP once the activation record is downloaded",
    "start": "1062310",
    "end": "1068460"
  },
  {
    "text": "this will appear it is possible to allow users to skip this in case they don't want enrollment but it's also possible",
    "start": "1068460",
    "end": "1074970"
  },
  {
    "text": "to make it mandatory so in this case you can see that there's no skip button so",
    "start": "1074970",
    "end": "1081360"
  },
  {
    "text": "in this step we need to retrieve the activation profile now what is an activation profile that is the internal",
    "start": "1081360",
    "end": "1086880"
  },
  {
    "text": "name for ADP delivered configuration profile so Jessie detailed config",
    "start": "1086880",
    "end": "1092160"
  },
  {
    "text": "profiles earlier those are a rather versatile P list-based files that",
    "start": "1092160",
    "end": "1097800"
  },
  {
    "text": "contain multiple payloads that can be installed on a device now for MDM purposes this is a little bit more",
    "start": "1097800",
    "end": "1103260"
  },
  {
    "text": "restricted but and we'll go we'll go into that in a sec this step will begin immediately as soon as the user clicks",
    "start": "1103260",
    "end": "1109110"
  },
  {
    "text": "next it's driven by another function in configuration profiles dot framework called CP get activation profile",
    "start": "1109110",
    "end": "1115940"
  },
  {
    "text": "unsurprisingly however this one is not implemented by cloud configuration D this time it's implemented by a somewhat",
    "start": "1115940",
    "end": "1122760"
  },
  {
    "text": "older component of the OS called manage client app so in fact this is actually part of the older mcx infrastructure",
    "start": "1122760",
    "end": "1129030"
  },
  {
    "text": "that predates much of this today's modern MDM what's also interesting is it",
    "start": "1129030",
    "end": "1134100"
  },
  {
    "text": "doesn't use X PC this time it uses MIG which is a much older IPC mechanism on Mac OS this is also a launch daemon",
    "start": "1134100",
    "end": "1141720"
  },
  {
    "text": "running as root though it can delegate to per user tasks in some scenarios however in this case there is no user on",
    "start": "1141720",
    "end": "1149610"
  },
  {
    "text": "the device yet and so almost all of the work happening in the demons will be happening as root the implementation",
    "start": "1149610",
    "end": "1156390"
  },
  {
    "text": "here in case you're you want to go smoothing is is the following so what",
    "start": "1156390",
    "end": "1163140"
  },
  {
    "text": "exactly happens to in this step so we send a request in the URL that was provided earlier that URL is pointing to",
    "start": "1163140",
    "end": "1170100"
  },
  {
    "text": "an MDM vendor server somewhere and its job is to return a configuration profile and again if the anchor certificates",
    "start": "1170100",
    "end": "1175560"
  },
  {
    "text": "were provided the implementation will actually pin using those certs and we validated that that is the case now a",
    "start": "1175560",
    "end": "1183150"
  },
  {
    "text": "request is a very simple property list containing up to seven keys providing",
    "start": "1183150",
    "end": "1188610"
  },
  {
    "text": "device identification so while the device is identified with Apple already and now has to prove who it is to the",
    "start": "1188610",
    "end": "1194070"
  },
  {
    "text": "MDM vendor and in this case it will provide a serial number but also a UDID OS version product name that kind of",
    "start": "1194070",
    "end": "1201480"
  },
  {
    "text": "information now the that request payload is interesting lis CMS signs and D are",
    "start": "1201480",
    "end": "1207840"
  },
  {
    "text": "encoded it is signed using the device's identity certificate that's part of Apple push service interestingly it also",
    "start": "1207840",
    "end": "1216150"
  },
  {
    "text": "includes supplementary certificates in order for we believe to validate them",
    "start": "1216150",
    "end": "1221900"
  },
  {
    "text": "but that certificate chain includes an X and E now expired Apple iPhone device CA",
    "start": "1221900",
    "end": "1227250"
  },
  {
    "text": "it is unclear why that is still the case it is likely a very good story so let's",
    "start": "1227250",
    "end": "1234450"
  },
  {
    "text": "go back to the architecture and at this point manage client is ready to talk to MDM and it's as well this is who I am",
    "start": "1234450",
    "end": "1241230"
  },
  {
    "text": "and what is my configuration profile which the MDM vendor can now provide in response now in this case TLS is used",
    "start": "1241230",
    "end": "1248850"
  },
  {
    "text": "and the anchor certs will be used to pin so we consider this step as being secure",
    "start": "1248850",
    "end": "1254750"
  },
  {
    "text": "all right so we're on to step 6 we have the configuration profile we know we're in VP what do we do next well",
    "start": "1255110",
    "end": "1261420"
  },
  {
    "text": "config profiles now have to be installed now as a quick reminder a configuration profile can be installed in many ways on",
    "start": "1261420",
    "end": "1267000"
  },
  {
    "text": "Mac you can get it automatically through DP you can actually download it and double clicking on your desktop which is",
    "start": "1267000",
    "end": "1272100"
  },
  {
    "text": "how some small startups IT departments might operate you can also retrieve it",
    "start": "1272100",
    "end": "1278370"
  },
  {
    "text": "you can also receive one through MDM itself which lends to that leads to some fun recursiveness later but now that we",
    "start": "1278370",
    "end": "1285930"
  },
  {
    "text": "have a profile we have to install it now once it's approved the profile is stored on the system the location is not super",
    "start": "1285930",
    "end": "1292590"
  },
  {
    "text": "relevant but what is interesting is that it is system integrity protected what that means in case you're unfamiliar sip",
    "start": "1292590",
    "end": "1299400"
  },
  {
    "text": "is a mechanism entry in Mac OS Sierra I believe which allows the protection of system folders and so",
    "start": "1299400",
    "end": "1305280"
  },
  {
    "text": "no one including root processes can write to those folders so technically the profile is secure now this step will",
    "start": "1305280",
    "end": "1312180"
  },
  {
    "text": "begin automatically as soon as the profiles retrieved if your instead of assistant now again this also maps to a",
    "start": "1312180",
    "end": "1318600"
  },
  {
    "text": "function in configuration profiles dot framework which again is aptly named CP",
    "start": "1318600",
    "end": "1324210"
  },
  {
    "text": "install activation profile interestingly this is implemented by yet another demon called MDM clients which again is",
    "start": "1324210",
    "end": "1332270"
  },
  {
    "text": "relatively a recent so this one's using XP see now it can run either as launch",
    "start": "1332270",
    "end": "1338220"
  },
  {
    "text": "daemon so meaning as root or as launch or as a launch agent meaning as a user depending on the context in our context",
    "start": "1338220",
    "end": "1345810"
  },
  {
    "text": "so in in our scenario it will be running as root so a quick refresher on",
    "start": "1345810",
    "end": "1352110"
  },
  {
    "text": "configuration profiles they are these large XML documents they can contain multiple payloads and the installation",
    "start": "1352110",
    "end": "1359130"
  },
  {
    "text": "of a profile essentially amounts to looping over the payloads and installing each one one at a time now the framework",
    "start": "1359130",
    "end": "1366150"
  },
  {
    "text": "to do so has a plug-in based architecture each payload type is",
    "start": "1366150",
    "end": "1371160"
  },
  {
    "text": "associated with a plug-in and so for example the certificate payloads so if",
    "start": "1371160",
    "end": "1376590"
  },
  {
    "text": "you are using the configuration profile to deliver a certificate will be implemented or will be installed by a",
    "start": "1376590",
    "end": "1383250"
  },
  {
    "text": "certificate X PC service now X PC services are the modern way to achieve privilege separation on Mac OS",
    "start": "1383250",
    "end": "1390170"
  },
  {
    "text": "interestingly plugins can either be in the main framework or in the older manager client application and so that",
    "start": "1390170",
    "end": "1396780"
  },
  {
    "text": "can make things relatively confusing when you're looking for traces so",
    "start": "1396780",
    "end": "1403350"
  },
  {
    "text": "typically an activation profile so a DP delivered config profile will include if",
    "start": "1403350",
    "end": "1408780"
  },
  {
    "text": "provided by an MDM vendor three payloads now the top one is expected comm apple",
    "start": "1408780",
    "end": "1415710"
  },
  {
    "text": "MDM and this contains these settings necessary to enroll the device in mobile device management with the MDM vendor",
    "start": "1415710",
    "end": "1421880"
  },
  {
    "text": "but you can also include other payloads such as Skype to securely provide a",
    "start": "1421880",
    "end": "1427080"
  },
  {
    "text": "client certificate to the device or p.m. in the case where you would want to install a trusted CA certificate to the",
    "start": "1427080",
    "end": "1433770"
  },
  {
    "text": "system keychain so if you've ever read Apple's",
    "start": "1433770",
    "end": "1439770"
  },
  {
    "text": "public documentation on the MDM protocol in installation of an MDM payload actually it is actually equivalent to",
    "start": "1439770",
    "end": "1446790"
  },
  {
    "text": "what Apple calls the MDM check-in protocol now the what that essentially",
    "start": "1446790",
    "end": "1452220"
  },
  {
    "text": "does is sets up the device for receiving commands from an MDM vendor the payload",
    "start": "1452220",
    "end": "1457320"
  },
  {
    "text": "in an MDM pail or the the MDM payload in",
    "start": "1457320",
    "end": "1462510"
  },
  {
    "text": "the configuration profile will typically include three important properties first there's going to be the check-in URL",
    "start": "1462510",
    "end": "1468630"
  },
  {
    "text": "that will be used in the immediate and as well as a command polling URL which",
    "start": "1468630",
    "end": "1473850"
  },
  {
    "text": "will be used later on that also includes the APNs topic that you can use to tell",
    "start": "1473850",
    "end": "1479760"
  },
  {
    "text": "the device via push notification to pull the command polling URL so to install",
    "start": "1479760",
    "end": "1486090"
  },
  {
    "text": "the MDM payload in the immediate a request is only sent to the check-in URL",
    "start": "1486090",
    "end": "1491270"
  },
  {
    "text": "this is again implemented in MDM client",
    "start": "1491270",
    "end": "1497330"
  },
  {
    "text": "what's important to remember here is MDM payloads can actually depend on other",
    "start": "1497330",
    "end": "1502860"
  },
  {
    "text": "payloads so you might be asking yourself now how do I pin I've just introduced two new URLs that are MDM vendors",
    "start": "1502860",
    "end": "1509670"
  },
  {
    "text": "there's their third-party URLs that are not Apple signed so how do I actually pin those well the answer is is",
    "start": "1509670",
    "end": "1516960"
  },
  {
    "text": "fascinating the MDM payload is allowed to depend on other payloads in the configuration profile so for example the",
    "start": "1516960",
    "end": "1524910"
  },
  {
    "text": "both the check-in and server URLs have matching properties allowing you to refer to another payload by its unique",
    "start": "1524910",
    "end": "1531810"
  },
  {
    "text": "identifier and that essentially says the certificate in that payload included you",
    "start": "1531810",
    "end": "1537660"
  },
  {
    "text": "should pin using basically the other important thing that the payload has to include is an identity certificate each",
    "start": "1537660",
    "end": "1544380"
  },
  {
    "text": "device has to have a certificate that uniquely identifies it this is mandatory this is another property in the MDM",
    "start": "1544380",
    "end": "1550050"
  },
  {
    "text": "payload and it's meant to refer to another certificate typically skep will",
    "start": "1550050",
    "end": "1555450"
  },
  {
    "text": "be used though it's I don't believe that's the only way to achieve this it is probably the best way to achieve this",
    "start": "1555450",
    "end": "1560700"
  },
  {
    "text": "I guess one last thing on this it",
    "start": "1560700",
    "end": "1566080"
  },
  {
    "text": "I guess what's important here is that you're essentially pinning BIID you're not pinging by using a dr encoded list",
    "start": "1566080",
    "end": "1571630"
  },
  {
    "text": "of anchors which is a little bit easier to do so going back to our architecture",
    "start": "1571630",
    "end": "1577720"
  },
  {
    "text": "diagram the setup assistant requests through configuration profiles that the",
    "start": "1577720",
    "end": "1582850"
  },
  {
    "text": "profile be installed and so MDM client receives that fun fact here it actually loops back to itself because of the",
    "start": "1582850",
    "end": "1590380"
  },
  {
    "text": "recursive nature of profiles but we're not including that in the diagram because that blew my mind and it was not enjoyable so the request",
    "start": "1590380",
    "end": "1598840"
  },
  {
    "text": "that's made here goes to the check in URL on the MDM vendors servers but again",
    "start": "1598840",
    "end": "1604240"
  },
  {
    "text": "it is TLS but it is pins with a certificate if you provided that ID and so you have a way of making this secure",
    "start": "1604240",
    "end": "1612240"
  },
  {
    "text": "and so now we get to the last step at this stage the MDM server is ready to",
    "start": "1612240",
    "end": "1619120"
  },
  {
    "text": "send a provision devices commands so",
    "start": "1619120",
    "end": "1624700"
  },
  {
    "text": "after the check-in is complete that means that the push notification topic is ready and the device is ready to",
    "start": "1624700",
    "end": "1630880"
  },
  {
    "text": "receive notifications once a notification is received MDM client again that same process will be handling",
    "start": "1630880",
    "end": "1637690"
  },
  {
    "text": "the push and will in response pull the MDM server using the server URL property",
    "start": "1637690",
    "end": "1643929"
  },
  {
    "text": "of the payload that was passed in now this of course makes use of the other properties in the payload as well and so",
    "start": "1643929",
    "end": "1650289"
  },
  {
    "text": "you are going to be able to pin that request using the matching pinning certificate you IDs a property and then",
    "start": "1650289",
    "end": "1658299"
  },
  {
    "text": "and then the identity certificate property I mentioned earlier will be used here as the TLS client certificate",
    "start": "1658299",
    "end": "1663580"
  },
  {
    "text": "whence once the poling request is is made so a little bit more visually the",
    "start": "1663580",
    "end": "1670059"
  },
  {
    "text": "process is now asynchronous so we start bottom left with the MDM vendor who decides to issue a command to a device",
    "start": "1670059",
    "end": "1676240"
  },
  {
    "text": "it uses APNs to send the push to the device MDM client receives it responds",
    "start": "1676240",
    "end": "1682720"
  },
  {
    "text": "to it but not directly through the push service by definition it does that by contacting the command endpoint on the",
    "start": "1682720",
    "end": "1689590"
  },
  {
    "text": "MDM vendors servers and again you can see that it is using TLS and you are able to to pin using these",
    "start": "1689590",
    "end": "1696429"
  },
  {
    "text": "certificate IDs and so so far so good and now we get to the fun part MDM",
    "start": "1696429",
    "end": "1703980"
  },
  {
    "text": "supports a very wide range of commands and one of the most popular commands is install application this is pretty",
    "start": "1703980",
    "end": "1710309"
  },
  {
    "text": "self-explanatory allows remote silent installation of applications on the device what's interesting here is that's",
    "start": "1710309",
    "end": "1717750"
  },
  {
    "text": "implemented not in the MDM infrastructure on the device but it's implemented in using the App Store's",
    "start": "1717750",
    "end": "1723110"
  },
  {
    "text": "api's so the command request contains the URL to a manifest the manifest this",
    "start": "1723110",
    "end": "1730650"
  },
  {
    "text": "job is basically to describe the app package it says this is the apps identity this is the certificates potentially and this is where you can",
    "start": "1730650",
    "end": "1737280"
  },
  {
    "text": "retrieve it the manifest is going to be encoded as a property list as many Apple payloads are but importantly it includes",
    "start": "1737280",
    "end": "1744809"
  },
  {
    "text": "the URL of the package to retrieve and install now on Mac OS that has to point to a signed distribution package which",
    "start": "1744809",
    "end": "1752370"
  },
  {
    "text": "will be a dot pkg now the way this is implemented and we're going to go really",
    "start": "1752370",
    "end": "1758309"
  },
  {
    "text": "deep here MDM client will use the commerce core framework this is part of",
    "start": "1758309",
    "end": "1763410"
  },
  {
    "text": "commerce kit which is the private API is built around the App Store on Mac OS for",
    "start": "1763410",
    "end": "1768660"
  },
  {
    "text": "other oh s services this framework contains various services each are backed by specific launch agent or",
    "start": "1768660",
    "end": "1775530"
  },
  {
    "text": "daemon depending on the context again store asset these job is to download and process manifests and if they're valid",
    "start": "1775530",
    "end": "1782700"
  },
  {
    "text": "it will leveraged or download D to download and install them now what happens when MDM wants to install a",
    "start": "1782700",
    "end": "1788790"
  },
  {
    "text": "manifest is it uses a private function called CK MDM process manifest at URL so",
    "start": "1788790",
    "end": "1796559"
  },
  {
    "text": "let's look exactly at how this works MDM client while executing the install application command will link against",
    "start": "1796559",
    "end": "1802860"
  },
  {
    "text": "commerce core doubt framework it which will itself use X PC to trigger the asset daemon to process the manifest and",
    "start": "1802860",
    "end": "1809370"
  },
  {
    "text": "validate that it is correct once or after I skip this up there it will",
    "start": "1809370",
    "end": "1814740"
  },
  {
    "text": "actually first download the manifest from the MDM vendors endpoint and then process it for validity now it's interesting here is there is no pinnate",
    "start": "1814740",
    "end": "1821520"
  },
  {
    "text": "and we'll get to it we'll get through exactly what that means and again once the once the manifest is validated it",
    "start": "1821520",
    "end": "1826890"
  },
  {
    "text": "will download the package itself and install it what's interesting is the MDM",
    "start": "1826890",
    "end": "1832559"
  },
  {
    "text": "in the store they're two very separate components of the OS it's safe to say they have",
    "start": "1832559",
    "end": "1837990"
  },
  {
    "text": "different threat models the MDM client here is not evaluating the trust of the manifest URL and neither is the store in",
    "start": "1837990",
    "end": "1844980"
  },
  {
    "text": "fact store foundation which contains the core classes that power commerce core do",
    "start": "1844980",
    "end": "1850650"
  },
  {
    "text": "not evaluate Trust at all this allows a man the middle attack so as an example",
    "start": "1850650",
    "end": "1855780"
  },
  {
    "text": "in this case a state actor or someone with considerable resources could target",
    "start": "1855780",
    "end": "1861600"
  },
  {
    "text": "a specific organization by men men in the milling commands from the MDM vendor",
    "start": "1861600",
    "end": "1867360"
  },
  {
    "text": "now this is not limited to the DEP scenario we've looked at this could actually happen during later commands if the MDM can be established they they",
    "start": "1867360",
    "end": "1875280"
  },
  {
    "text": "can't man in the middle of the commands but they can man in the middle of the stretching of a manifest that's right sorry you can Manimal not commands but",
    "start": "1875280",
    "end": "1881400"
  },
  {
    "text": "the actual install application commands and with that we'll go to our demo and",
    "start": "1881400",
    "end": "1886440"
  },
  {
    "text": "while we get set up I'll go over the details of this we're going to simulate",
    "start": "1886440",
    "end": "1891480"
  },
  {
    "text": "a malicious isp or state actor by using Mac OS as internet sharing as finicky as it is we're gonna be proxying all the",
    "start": "1891480",
    "end": "1898800"
  },
  {
    "text": "traffic from the from a brand new device using them a little proxy we're going to",
    "start": "1898800",
    "end": "1904200"
  },
  {
    "text": "simulate a compromised CA by using a valid sir that we created from fleet Smith CA and we're going to intercept",
    "start": "1904200",
    "end": "1911100"
  },
  {
    "text": "the request for the manifest as the device first boots and and rather than provide the fluid Smith fleet Smith's",
    "start": "1911100",
    "end": "1917760"
  },
  {
    "text": "agents we're going to be serving a malicious manifest that will download a mysterious other application and install",
    "start": "1917760",
    "end": "1923880"
  },
  {
    "text": "its package now it's important to to say here is that developer ID certificate requirements still apply and so packages",
    "start": "1923880",
    "end": "1932160"
  },
  {
    "text": "still have to be signed and so there is the extra step that an attacker would have to take of actually signing their",
    "start": "1932160",
    "end": "1938790"
  },
  {
    "text": "their malicious application though this is still relatively easy to do it is important to note though that Apple is",
    "start": "1938790",
    "end": "1945000"
  },
  {
    "text": "making great strides here with things like notarized developer ID certificates they are adding quite a bit of of checks",
    "start": "1945000",
    "end": "1951540"
  },
  {
    "text": "to make sure that malicious software is is harder to create but this is still strictly possible and the last thing",
    "start": "1951540",
    "end": "1958350"
  },
  {
    "text": "I'll add there is the developer certificate that's used to sign that distribution distribution package does",
    "start": "1958350",
    "end": "1964950"
  },
  {
    "text": "not have to be a any type of cert that's associated with a business entity it can be a personal",
    "start": "1964950",
    "end": "1971450"
  },
  {
    "text": "Apple Developer certificate and so for the sake of this demo that's exactly what we've done here all right when was",
    "start": "1971450",
    "end": "1977570"
  },
  {
    "text": "that so the device is first booting",
    "start": "1977570",
    "end": "2004259"
  },
  {
    "text": "let's see if what's the graphics adapter gets ready I think you'll be able to see",
    "start": "2004259",
    "end": "2010509"
  },
  {
    "text": "what's gonna yeah it's worth calling up",
    "start": "2010509",
    "end": "2024220"
  },
  {
    "text": "that uh the only way that this is possible is by really stimulating that nation state level attack by both being",
    "start": "2024220",
    "end": "2031809"
  },
  {
    "text": "able to man in the middle the internet traffic from the device so maybe having the ability to see internet traffic at",
    "start": "2031809",
    "end": "2037570"
  },
  {
    "text": "the ISP level as well as having the ability to get a certificate issued",
    "start": "2037570",
    "end": "2043600"
  },
  {
    "text": "improperly from a commercial CA both of these things have happened sometimes in",
    "start": "2043600",
    "end": "2051549"
  },
  {
    "text": "the same country sometimes in countries that are not friendly to you know journalists for example so it is a",
    "start": "2051549",
    "end": "2058419"
  },
  {
    "text": "real-world kind of situation here that we're simulating but it's worth calling",
    "start": "2058419",
    "end": "2063760"
  },
  {
    "text": "out that the only reason we can do it is because the device at this point in the bootstrapping process already trusts the",
    "start": "2063760",
    "end": "2069520"
  },
  {
    "text": "fleet Smith CA because it's delivered in that initial configuration profile so",
    "start": "2069520",
    "end": "2075960"
  },
  {
    "text": "this can't be done without a lot of resources basically",
    "start": "2075960",
    "end": "2082740"
  },
  {
    "text": "all right so let's make sure we have",
    "start": "2091470",
    "end": "2097118"
  },
  {
    "text": "some network connectivity before proceeding here since that is pretty important so for some reason this one's",
    "start": "2097119",
    "end": "2103569"
  },
  {
    "text": "not working well but oh that's test with this one which we just freshly wiped so",
    "start": "2103569",
    "end": "2110260"
  },
  {
    "text": "it should work just fine demo gods are networking yep okay this one has network",
    "start": "2110260",
    "end": "2121299"
  },
  {
    "text": "this was really here so now let's go ahead and proceed there we go there's",
    "start": "2121299",
    "end": "2131920"
  },
  {
    "text": "the remote management screen so this means that the device has received its DEP profile that JSON payload so this",
    "start": "2131920",
    "end": "2141579"
  },
  {
    "text": "points it will retrieve at this point will retrieve the configuration profile and install it and we are actively a",
    "start": "2141579",
    "end": "2147849"
  },
  {
    "text": "man-in-the-middle egg which you cannot see unfortunately all right all right",
    "start": "2147849",
    "end": "2155940"
  },
  {
    "text": "let's proceed",
    "start": "2155940",
    "end": "2159298"
  },
  {
    "text": "so at this point we can tell that the looks like it worked yeah it looks like the the payload was installed the agent",
    "start": "2173839",
    "end": "2180829"
  },
  {
    "text": "was downloaded or what it believes as the agent was downloaded and this is usually the part where a progress bar",
    "start": "2180829",
    "end": "2187939"
  },
  {
    "text": "would be nice but yeah it usually takes",
    "start": "2187939",
    "end": "2193489"
  },
  {
    "text": "around 30 seconds at this point yeah and",
    "start": "2193489",
    "end": "2200089"
  },
  {
    "text": "there we go and the agent has been replaced with the calculator so and so",
    "start": "2200089",
    "end": "2207920"
  },
  {
    "text": "it is supposed to be fleet Smith's agent software is now so our package our malicious application in this case",
    "start": "2207920",
    "end": "2213939"
  },
  {
    "text": "created a launch D on watch agent or a system-level launch agent that cannot be stopped that runs the calculator",
    "start": "2213939",
    "end": "2220039"
  },
  {
    "text": "constantly and so I don't believe you can close this I don't if we fix that but I think we were moving back oh maybe we folks there yeah it was it was pretty",
    "start": "2220039",
    "end": "2226339"
  },
  {
    "text": "annoying for in testing yeah so we install this to the system-wide launch agents folder which means any user that",
    "start": "2226339",
    "end": "2232609"
  },
  {
    "text": "logs in will have the calculator started it's important to note though that even",
    "start": "2232609",
    "end": "2237979"
  },
  {
    "text": "though we launched this in a user context at the time that our malicious package is installed we do have the",
    "start": "2237979",
    "end": "2244549"
  },
  {
    "text": "ability to execute any command as root and so this demonstrates that the device is actually fully rooted at first boot",
    "start": "2244549",
    "end": "2252189"
  },
  {
    "text": "all right let's go back to the slides",
    "start": "2252189",
    "end": "2256299"
  },
  {
    "text": "well the good news is that there is a mitigation already in existence for this problem a new command was introduced",
    "start": "2262150",
    "end": "2268160"
  },
  {
    "text": "recently called install enterprise application this includes new properties that allow you to control the trust of",
    "start": "2268160",
    "end": "2273910"
  },
  {
    "text": "of that URL for the manifest and so this is available in Mac OS 10 thirteen point",
    "start": "2273910",
    "end": "2280190"
  },
  {
    "text": "six that's also ten fourteen what's also important to note here is that there's a",
    "start": "2280190",
    "end": "2285200"
  },
  {
    "text": "there's a time delay for new hardware to support the fix as we've just demonstrated what's also important here",
    "start": "2285200",
    "end": "2291350"
  },
  {
    "text": "is that this requires the MDM vendor to do its part the new command has to be",
    "start": "2291350",
    "end": "2296390"
  },
  {
    "text": "adopted before the mitigation is fully ready now how does this actually work",
    "start": "2296390",
    "end": "2301910"
  },
  {
    "text": "there is now an extra property manifest URL pinning certs this is a again a list",
    "start": "2301910",
    "end": "2307250"
  },
  {
    "text": "of D are encoded an anchor trust that will be used when evaluating the trust of the manifest URL this can ensure you",
    "start": "2307250",
    "end": "2314450"
  },
  {
    "text": "can also ensure that revocation checks are performed which is quite nice under",
    "start": "2314450",
    "end": "2320450"
  },
  {
    "text": "the hood what happens well the ck MDM process manifest at URL function which used to only take a URL as a parameter",
    "start": "2320450",
    "end": "2326600"
  },
  {
    "text": "and another thing that was more of a flag now actually takes in a dictionary that dictionary contains private keys",
    "start": "2326600",
    "end": "2333050"
  },
  {
    "text": "that map to the properties in the new command and also most importantly store foundations core objects now have the",
    "start": "2333050",
    "end": "2340160"
  },
  {
    "text": "ability to evaluate trust which was relief to see they actually if you're",
    "start": "2340160",
    "end": "2345950"
  },
  {
    "text": "curious this actually uses an external connections standard elegant methods for authentication challenges so let's move",
    "start": "2345950",
    "end": "2353960"
  },
  {
    "text": "on to some takeaways here number number one this is a really complex system on Mac OS with a lot of moving parts some",
    "start": "2353960",
    "end": "2361580"
  },
  {
    "text": "will have different threat models and what that means as vulnerabilities or bugs can appear at the intersections or at the borders between those guessing",
    "start": "2361580",
    "end": "2371170"
  },
  {
    "text": "yeah so in addition to these takeaways here we through our research came up",
    "start": "2371650",
    "end": "2377210"
  },
  {
    "text": "with a bunch of recommendations for Apple here on kind of how to improve the whole security story for MDM and DEP and",
    "start": "2377210",
    "end": "2385420"
  },
  {
    "text": "so here's that list of recommendations the first is that we'd really love to",
    "start": "2385420",
    "end": "2390920"
  },
  {
    "text": "see the entire security model for DEP and MDM documented if anyone's read the incredible iOS",
    "start": "2390920",
    "end": "2398420"
  },
  {
    "text": "security guide white paper that they published that's really what kind of the along the same lines of what we're",
    "start": "2398420",
    "end": "2405140"
  },
  {
    "text": "thinking here so we know they have the ability to produce something of a really high caliber and and we'd love to see",
    "start": "2405140",
    "end": "2411830"
  },
  {
    "text": "the same thing including a description of what the role of that I've Apple iPhone device CA is the next is that",
    "start": "2411830",
    "end": "2418340"
  },
  {
    "text": "we'd really like them to be more aggressive in a technical enforcement in",
    "start": "2418340",
    "end": "2424730"
  },
  {
    "text": "the OS that requires pinning for all of these things right now all this is really optional and up to the MDM vendor",
    "start": "2424730",
    "end": "2430420"
  },
  {
    "text": "which given how early in the in the process it is and and kind of really",
    "start": "2430420",
    "end": "2438170"
  },
  {
    "text": "scary implications if if an attacker was to really package up this exploit and",
    "start": "2438170",
    "end": "2445730"
  },
  {
    "text": "use it at scale we really think that it would be a great a great improvement if",
    "start": "2445730",
    "end": "2450980"
  },
  {
    "text": "this was required the next is that we",
    "start": "2450980",
    "end": "2456230"
  },
  {
    "text": "really think any configuration profile that contains sensitive data so that could be like a TLS private key for",
    "start": "2456230",
    "end": "2462290"
  },
  {
    "text": "example or it could be the Wi-Fi payload that includes the plaintext password for",
    "start": "2462290",
    "end": "2467810"
  },
  {
    "text": "your corporate Wi-Fi network right I'm any payload that includes sensitive data like that we think the OS should enforce",
    "start": "2467810",
    "end": "2475670"
  },
  {
    "text": "that it's both signed and encrypted this is also optional but it's it's really",
    "start": "2475670",
    "end": "2481160"
  },
  {
    "text": "not very heavily utilized in in the wild by by various products fleet psmith does",
    "start": "2481160",
    "end": "2486740"
  },
  {
    "text": "do both of these things but we'd really like to see this required as well and you might be thinking well isn't this",
    "start": "2486740",
    "end": "2491780"
  },
  {
    "text": "already TLS protected and the answer is yes but if you look at the past few years you've had heartbleed you've had",
    "start": "2491780",
    "end": "2497570"
  },
  {
    "text": "poodle you've had Apple's own go to fail bug and so given the history of TLS phones we really think that this is a",
    "start": "2497570",
    "end": "2504980"
  },
  {
    "text": "great defense-in-depth measure to require that these sensitive payloads are are protected and in fact Apple's",
    "start": "2504980",
    "end": "2511550"
  },
  {
    "text": "own documentation says on page 19 of the config configuration profile reference",
    "start": "2511550",
    "end": "2516680"
  },
  {
    "text": "they give this guidance that because the password string is stored in the clear and the profile it's recommended that it",
    "start": "2516680",
    "end": "2522050"
  },
  {
    "text": "be encrypted for the device and you can get really powerful here and encrypt these payloads on a per device basis",
    "start": "2522050",
    "end": "2527510"
  },
  {
    "text": "because this server can safely escrow the public key which is part of the certificate right",
    "start": "2527510",
    "end": "2533390"
  },
  {
    "text": "even even though it doesn't have the private key I can use that public key to encrypt these payloads and so that's",
    "start": "2533390",
    "end": "2539250"
  },
  {
    "text": "that's something that should be relatively straightforward for for people to implement the last one is that",
    "start": "2539250",
    "end": "2546270"
  },
  {
    "text": "we'd really like to see that DEP cloud service API contain just a bit more information it already contains",
    "start": "2546270",
    "end": "2551940"
  },
  {
    "text": "information on like the model the OS family so it'll tell you if the device has Mac OS or iOS for example but we'd",
    "start": "2551940",
    "end": "2559440"
  },
  {
    "text": "like to see two additional fields in that API one with the OS version and one with the OS build number and the reason",
    "start": "2559440",
    "end": "2565560"
  },
  {
    "text": "we want that is so that we can surface that information in product so that if there is a Vaughn on a version of Mac OS",
    "start": "2565560",
    "end": "2571380"
  },
  {
    "text": "that's shipped from the factory at least you have the information at your corporation from you know your IT team",
    "start": "2571380",
    "end": "2578040"
  },
  {
    "text": "your security team had at least has the information to know maybe we shouldn't rely on you know on that OS version if",
    "start": "2578040",
    "end": "2586440"
  },
  {
    "text": "we're shipping it to you know a country that's might be doing some of these things that we've talked about right all",
    "start": "2586440",
    "end": "2595560"
  },
  {
    "text": "right and then for MDM vendors we we wanted to share what we think of as sort",
    "start": "2595560",
    "end": "2601230"
  },
  {
    "text": "of like a security checklist to make sure that you're doing all the right things and we tried to make it kind of",
    "start": "2601230",
    "end": "2606960"
  },
  {
    "text": "really concise and targeted on just the highest impact things so painting at every step of the process super",
    "start": "2606960",
    "end": "2613170"
  },
  {
    "text": "important the anchor certs in the DEP profile so that the first",
    "start": "2613170",
    "end": "2618750"
  },
  {
    "text": "time the device calls in to the MDM server that's pinned that's step 4 step",
    "start": "2618750",
    "end": "2624720"
  },
  {
    "text": "five which is pinning the actual MDM URLs for ongoing polling for new",
    "start": "2624720",
    "end": "2629940"
  },
  {
    "text": "commands both for the check-in URL and the commands URL and then finally in",
    "start": "2629940",
    "end": "2636810"
  },
  {
    "text": "step seven pinning using the new install enterprise application command so right",
    "start": "2636810",
    "end": "2642000"
  },
  {
    "text": "now that is also optional install application is not deprecated it's still available Apple has given strong",
    "start": "2642000",
    "end": "2649410"
  },
  {
    "text": "guidance at WWDC when they announced the install enterprise application command that they'd love to see vendors move to",
    "start": "2649410",
    "end": "2655560"
  },
  {
    "text": "this but they didn't give a hard time line and it is still optional as well and then finally this is the one",
    "start": "2655560",
    "end": "2662280"
  },
  {
    "text": "I think is the most subtle a lot of vendors sort of supplement the functionality of MDM with an agent",
    "start": "2662280",
    "end": "2668040"
  },
  {
    "text": "binary that they've written themselves we do the same it's really important that the vendor is pinning inside their",
    "start": "2668040",
    "end": "2674190"
  },
  {
    "text": "own binary as well so we we do the same thing we pin our root CI within our",
    "start": "2674190",
    "end": "2679580"
  },
  {
    "text": "binary to make sure those communications also can't be man-in-the-middle and finally I skip it is really the best",
    "start": "2679580",
    "end": "2688590"
  },
  {
    "text": "option for getting these device identity certificates generated and the reason",
    "start": "2688590",
    "end": "2694140"
  },
  {
    "text": "scape is far superior to alternatives is because the private key is generated on the device and never leaves the device",
    "start": "2694140",
    "end": "2699810"
  },
  {
    "text": "the server never sees it whereas the only other alternative is the server actually generating all those client",
    "start": "2699810",
    "end": "2705720"
  },
  {
    "text": "private keys and distributing them down to the client and I think at least one vendor does this currently all right",
    "start": "2705720",
    "end": "2718010"
  },
  {
    "text": "next is the configuration profiles we already touched on this we really think that they should all be signed and",
    "start": "2718010",
    "end": "2723600"
  },
  {
    "text": "encrypted especially if they contain sensitive data and finally this is more about the cloud production environment",
    "start": "2723600",
    "end": "2730220"
  },
  {
    "text": "or even on crime as well but any sensitive data that's being input into",
    "start": "2730220",
    "end": "2736620"
  },
  {
    "text": "the product like that Wi-Fi password right a private key all of that should really be encrypted at rest in the",
    "start": "2736620",
    "end": "2741750"
  },
  {
    "text": "database within the MDM product as well",
    "start": "2741750",
    "end": "2746330"
  },
  {
    "text": "all right disclosure timeline we first disclosed this to Apple on April 28th it was",
    "start": "2747110",
    "end": "2753780"
  },
  {
    "text": "acknowledged April 2nd the new command was announced in that session at WWDC titled what's new in managing Apple",
    "start": "2753780",
    "end": "2759990"
  },
  {
    "text": "devices on June 7th but Apple of course did not share the sort of background history there that's obviously what we",
    "start": "2759990",
    "end": "2767940"
  },
  {
    "text": "were sharing today although they did strongly urge vendors to move to the new command as soon as possible the MDM",
    "start": "2767940",
    "end": "2775560"
  },
  {
    "text": "protocol reference documentation was updated to include the installed enterprise application command on July",
    "start": "2775560",
    "end": "2782490"
  },
  {
    "text": "5th and the actual ability to use that command with devices was introduced with",
    "start": "2782490",
    "end": "2788310"
  },
  {
    "text": "Mac OS 10 13 6 which was released on July 9th",
    "start": "2788310",
    "end": "2793470"
  },
  {
    "text": "so this concludes our presentation but we have a few acknowledgments we want to make before before we're done yeah",
    "start": "2793470",
    "end": "2799020"
  },
  {
    "text": "person first and foremost we really want to thank my co-founder Stevie her Xu who",
    "start": "2799020",
    "end": "2804810"
  },
  {
    "text": "did a really incredible job on all of the early research for this talk like a",
    "start": "2804810",
    "end": "2810060"
  },
  {
    "text": "straight week of you know eight to ten hours a day the next set of people we",
    "start": "2810060",
    "end": "2815940"
  },
  {
    "text": "really want to thank is Victor papeon Mike and Jesse who have contributed just",
    "start": "2815940",
    "end": "2823770"
  },
  {
    "text": "a lot to the Mac kind of security community as well as last but not least",
    "start": "2823770",
    "end": "2830790"
  },
  {
    "text": "of course they've been really great actually throughout the whole process and obviously you know even though we",
    "start": "2830790",
    "end": "2837960"
  },
  {
    "text": "found this vulnerability here both max and I just have a ton of respect for their security engineering team and what",
    "start": "2837960",
    "end": "2843660"
  },
  {
    "text": "they're doing to improve the platform security for both iOS and Mac OS and we",
    "start": "2843660",
    "end": "2849119"
  },
  {
    "text": "just want to say keep up the good work all right and with that we are done I think we may have time for one question",
    "start": "2849119",
    "end": "2854700"
  },
  {
    "text": "but thank you so much for coming [Applause]",
    "start": "2854700",
    "end": "2864030"
  }
]