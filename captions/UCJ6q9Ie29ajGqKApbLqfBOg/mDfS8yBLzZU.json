[
  {
    "text": "hello everyone uh welcome to my",
    "start": "199",
    "end": "5760"
  },
  {
    "text": "speaking and today I'm going to share a piece of my research Advanced he",
    "start": "6439",
    "end": "12440"
  },
  {
    "text": "manipulation in Windows 8 and my name is j you can come Eric I'm a security",
    "start": "12440",
    "end": "19359"
  },
  {
    "text": "researcher at fortunite and this the agenda of this",
    "start": "19359",
    "end": "25920"
  },
  {
    "text": "talk part one why I start this research I will go I will briefly introduce some",
    "start": "25920",
    "end": "32880"
  },
  {
    "text": "security fature in the Windows 8 and the limitation of the traditional Heap",
    "start": "32880",
    "end": "39399"
  },
  {
    "text": "manipulation and lead to the Target of This research and part two quick view of",
    "start": "39399",
    "end": "47320"
  },
  {
    "text": "idea and part three",
    "start": "47320",
    "end": "52079"
  },
  {
    "text": "implementation memory corruption vulner ility are getting more and more",
    "start": "57039",
    "end": "62160"
  },
  {
    "text": "difficult to exploit thanks to exploit mitigation",
    "start": "62160",
    "end": "67240"
  },
  {
    "text": "improvements introduced in mod operating system these big names the DP",
    "start": "67240",
    "end": "75040"
  },
  {
    "text": "ascr and sandbox are as familiar as a pop stars to security",
    "start": "75040",
    "end": "82159"
  },
  {
    "text": "researchers so I want talk about the sandbox a little bit more",
    "start": "82159",
    "end": "88200"
  },
  {
    "text": "here the sandb technology is not new but where it's getting mature in recent",
    "start": "88200",
    "end": "95119"
  },
  {
    "text": "years there indicate that more more applications will integrate the stand",
    "start": "95119",
    "end": "100880"
  },
  {
    "text": "boox in the future like and foring the Adobe Reader X Microsoft and Google",
    "start": "100880",
    "end": "108640"
  },
  {
    "text": "Chrome and so maybe in the future the exploit will be categorized into two",
    "start": "108640",
    "end": "114399"
  },
  {
    "text": "groups the sandbox by pass exploit and the sandbox not by pass",
    "start": "114399",
    "end": "120960"
  },
  {
    "text": "there are several ways that could bypass the sandbox and pushes my research work",
    "start": "120960",
    "end": "126039"
  },
  {
    "text": "to this directions the kernel vulnerability and",
    "start": "126039",
    "end": "131440"
  },
  {
    "text": "the third party plug in which are not imp uh implementing inside the sandbox",
    "start": "131440",
    "end": "138000"
  },
  {
    "text": "to find the vulnerability in in there and the sandbox vulnerability",
    "start": "138000",
    "end": "145560"
  },
  {
    "text": "itself and respectfully speaking the sandbox technology could be marked as a",
    "start": "146360",
    "end": "153680"
  },
  {
    "text": "milestone in computer history as it have increased the cost of attack into",
    "start": "153680",
    "end": "161640"
  },
  {
    "text": "amazing degree and makes the cost cost of attack and the benefit attack will",
    "start": "161640",
    "end": "167800"
  },
  {
    "text": "gain balanced let's turn our face to the",
    "start": "167800",
    "end": "173400"
  },
  {
    "text": "kernel side although the Windows 8 kernel looks",
    "start": "173400",
    "end": "179120"
  },
  {
    "text": "like a we patched Windows 7even colel Bel its improvements are",
    "start": "179120",
    "end": "184440"
  },
  {
    "text": "tremendous almost every public know exploit method in caral P overflow have",
    "start": "184440",
    "end": "191560"
  },
  {
    "text": "been killed by these improvements not the reference",
    "start": "191560",
    "end": "197560"
  },
  {
    "text": "protection attackers cannot map the no memory address anymore Integrity",
    "start": "197560",
    "end": "204000"
  },
  {
    "text": "checks the taxs are trying to compromise the metadata have been killed and non",
    "start": "204000",
    "end": "210200"
  },
  {
    "text": "paged pool and smap attackers have to find the better way to place their shell",
    "start": "210200",
    "end": "216480"
  },
  {
    "text": "code and enhance ASR to exploit in the kernop FL is much",
    "start": "216480",
    "end": "223360"
  },
  {
    "text": "more difficult than never the metadata in the US hip have",
    "start": "223360",
    "end": "232200"
  },
  {
    "text": "been well protected before Windows 8 and in the Windows 8 it have introduced the",
    "start": "232200",
    "end": "239159"
  },
  {
    "text": "non ton with the introduction of the randomized a FH allocator",
    "start": "239159",
    "end": "247560"
  },
  {
    "text": "and the hip manipulation is a difficulty when the they to use",
    "start": "247560",
    "end": "254200"
  },
  {
    "text": "hip and what's left to the attackers this picture is copied from",
    "start": "254640",
    "end": "261560"
  },
  {
    "text": "MTH Miller slide on your left side a call link",
    "start": "261560",
    "end": "268600"
  },
  {
    "text": "overwrite that was our good old days to have generic Heap",
    "start": "268600",
    "end": "274520"
  },
  {
    "text": "overflow but it have been killed in by C Lincoln in",
    "start": "274520",
    "end": "280919"
  },
  {
    "text": "2004 with the introduction of Windows XP SP2 and this year is the 10th",
    "start": "280919",
    "end": "288320"
  },
  {
    "text": "anniversary of its death and this fing attacks trying to",
    "start": "288320",
    "end": "294080"
  },
  {
    "text": "compromise the metadata by attacking the look side list attacking the the Fest attacking",
    "start": "294080",
    "end": "300759"
  },
  {
    "text": "the hip catch and so on with the comprehensive protection and",
    "start": "300759",
    "end": "306919"
  },
  {
    "text": "integrity checks which was introduced in Vista Windows 7 and Windows 8 step best",
    "start": "306919",
    "end": "315919"
  },
  {
    "text": "St they have been killed and what's",
    "start": "315919",
    "end": "321840"
  },
  {
    "text": "left to attacking the custom memory allocator it's not on the",
    "start": "321840",
    "end": "328319"
  },
  {
    "text": "picture uh to attacking the custom memory allocators in",
    "start": "328319",
    "end": "333479"
  },
  {
    "text": "applications I have two questions to this custom memory",
    "start": "333479",
    "end": "338600"
  },
  {
    "text": "allocator have you well protected your metadata have you introduced the",
    "start": "338600",
    "end": "347560"
  },
  {
    "text": "non-determinism attackers are trying to attack in the new metadata which introduced with the new lfh",
    "start": "348120",
    "end": "355800"
  },
  {
    "text": "allocator but it is under protected by the uh guard pages in Windows",
    "start": "355800",
    "end": "363000"
  },
  {
    "text": "8 and what's left application specific data",
    "start": "363000",
    "end": "371039"
  },
  {
    "text": "attacking as the applications are various it's almost impossible to",
    "start": "371039",
    "end": "376599"
  },
  {
    "text": "protect every data they're using and that's a future of the",
    "start": "376599",
    "end": "382560"
  },
  {
    "text": "exploit and use after free people could hear it from the zero",
    "start": "382560",
    "end": "389599"
  },
  {
    "text": "the news from time to time and these two kind of Texs",
    "start": "389599",
    "end": "397319"
  },
  {
    "text": "application specific data attacking it used after three I greatly rely on Heap",
    "start": "397319",
    "end": "407160"
  },
  {
    "text": "manipulation and Ben Haw have said application specific data data attacking",
    "start": "410520",
    "end": "416800"
  },
  {
    "text": "of the future and what is application specific data",
    "start": "416800",
    "end": "423280"
  },
  {
    "text": "tacking like on this uh picture we have the vulnerable buffer in",
    "start": "423280",
    "end": "429680"
  },
  {
    "text": "the yellow area and we overflow it and trying to compromise some data structure",
    "start": "429680",
    "end": "436919"
  },
  {
    "text": "in the red area and lead to code execution and the most important part is",
    "start": "436919",
    "end": "444080"
  },
  {
    "text": "these two parts are adjacent in memory",
    "start": "444080",
    "end": "450840"
  },
  {
    "text": "and how to achieve that how to achieve Heap manipulation people have created hip",
    "start": "450840",
    "end": "458160"
  },
  {
    "text": "function the first word is mandering and which means phone as a",
    "start": "458160",
    "end": "467280"
  },
  {
    "text": "wind sh as water this picture we have a nice",
    "start": "467280",
    "end": "475800"
  },
  {
    "text": "wind nice water beautiful view you do want living in",
    "start": "475800",
    "end": "482680"
  },
  {
    "text": "it and the f is a traditional art which",
    "start": "482680",
    "end": "487720"
  },
  {
    "text": "was which was born in China 3,000 years ago it is a complex body that trying to",
    "start": "487720",
    "end": "496440"
  },
  {
    "text": "balance the energies of a giving space to assure the health and good",
    "start": "496440",
    "end": "502960"
  },
  {
    "text": "fortune for people who living in it and I guess Alexander take use of this word",
    "start": "502960",
    "end": "509360"
  },
  {
    "text": "into computer is to trying to find a better",
    "start": "509360",
    "end": "515080"
  },
  {
    "text": "place for the vulnerable buffer to assure the health and the Good Fortune",
    "start": "515080",
    "end": "520399"
  },
  {
    "text": "for the exploit like have a better",
    "start": "520399",
    "end": "526279"
  },
  {
    "text": "price uh you normally have three steps the traditional hip function Let's see",
    "start": "528320",
    "end": "535760"
  },
  {
    "text": "we have the vulnerable buffer which size ISX 200 by and the first step is to defragment the",
    "start": "535760",
    "end": "544600"
  },
  {
    "text": "Hep using KN of allocations of this size of block the early allocations will come",
    "start": "544600",
    "end": "551640"
  },
  {
    "text": "from the gaps and after these gas gaps being",
    "start": "551640",
    "end": "557600"
  },
  {
    "text": "exhausted a new allocation will come from the new extended area and",
    "start": "557600",
    "end": "566200"
  },
  {
    "text": "adjacent then by free freeing s with the to make hole and when allocate the",
    "start": "566200",
    "end": "574160"
  },
  {
    "text": "vulnerable buffer it will fall into one of the hole we made before and the",
    "start": "574160",
    "end": "580040"
  },
  {
    "text": "object as red color is just behind",
    "start": "580040",
    "end": "585560"
  },
  {
    "text": "it but it have some limitations in car and in Windows 8 us",
    "start": "586440",
    "end": "594079"
  },
  {
    "text": "hi in the Carle we we cannot always find the object which size is the same as a",
    "start": "594079",
    "end": "601920"
  },
  {
    "text": "vulnerable buffer and it also contains important data structure that could lead",
    "start": "601920",
    "end": "607800"
  },
  {
    "text": "to code execution and in the user hip of Windows",
    "start": "607800",
    "end": "615519"
  },
  {
    "text": "8 the defragment process will trigger the a FH for this size",
    "start": "615519",
    "end": "623079"
  },
  {
    "text": "end when uh allocate the vulnerable buffer it will go into a another way a",
    "start": "623079",
    "end": "630279"
  },
  {
    "text": "randomized way and not fall into the hole we made",
    "start": "630279",
    "end": "635440"
  },
  {
    "text": "before so the target of This research is to let the arbitary vulnerable buff",
    "start": "636200",
    "end": "642720"
  },
  {
    "text": "adjacent with arbitary data structure end without triggering the",
    "start": "642720",
    "end": "649680"
  },
  {
    "text": "lfh in the ud",
    "start": "649680",
    "end": "653360"
  },
  {
    "text": "hi so let's go into the part one the quick cck view",
    "start": "655560",
    "end": "661639"
  },
  {
    "text": "idea matth was the paper Windows objects",
    "start": "662360",
    "end": "667639"
  },
  {
    "text": "in colal vulnerability exploitation give me lots help to understand the",
    "start": "667639",
    "end": "673240"
  },
  {
    "text": "relationship between colal object and its exploitation and left something for",
    "start": "673240",
    "end": "679200"
  },
  {
    "text": "me to think about how can we place a desired object",
    "start": "679200",
    "end": "685639"
  },
  {
    "text": "just behind the vulnerable buffer can we place something else other than",
    "start": "685639",
    "end": "692560"
  },
  {
    "text": "object just behind the vulnerable",
    "start": "692560",
    "end": "697880"
  },
  {
    "text": "buffer before I describe the idea it is",
    "start": "698920",
    "end": "704440"
  },
  {
    "text": "good to warm up with some Basics and all the basics that related to this idea",
    "start": "704440",
    "end": "711120"
  },
  {
    "text": "will be talked it will not take too much of time",
    "start": "711120",
    "end": "716240"
  },
  {
    "text": "and make you Bor hopefully",
    "start": "716240",
    "end": "720959"
  },
  {
    "text": "so firstly I want to introduce the free list the hip manager maintains several W",
    "start": "724040",
    "end": "732120"
  },
  {
    "text": "link list to track the free blocks in the hip the free blocks with the same",
    "start": "732120",
    "end": "738560"
  },
  {
    "text": "size will be linked into one of these free lists the fre lists makes the",
    "start": "738560",
    "end": "745199"
  },
  {
    "text": "allocation and deallocation operations very fast and simple for allocation the",
    "start": "745199",
    "end": "750680"
  },
  {
    "text": "allocator will scans along the free lists for the first fit then unlink it",
    "start": "750680",
    "end": "757800"
  },
  {
    "text": "using nting first out manner but it have some drawbacks the",
    "start": "757800",
    "end": "766399"
  },
  {
    "text": "fre List have some drawbacks from a security point of",
    "start": "766399",
    "end": "772839"
  },
  {
    "text": "view the free list relies upon metadata which also providing excellent teing in",
    "start": "772839",
    "end": "780240"
  },
  {
    "text": "surface and the lasting first out manner it used",
    "start": "780240",
    "end": "785399"
  },
  {
    "text": "providing zero allocation entropy that's a perfect",
    "start": "785399",
    "end": "793440"
  },
  {
    "text": "predictability and free lists are still being used in both kop and user hip in",
    "start": "793600",
    "end": "799560"
  },
  {
    "text": "the Windows 8 so how to control the fre",
    "start": "799560",
    "end": "805880"
  },
  {
    "text": "list do you know how Sushi Bel works the chef prepares the sushi and put it",
    "start": "805880",
    "end": "813680"
  },
  {
    "text": "on the Belt the customer on other side will pick and eat the",
    "start": "813680",
    "end": "820600"
  },
  {
    "text": "sushi what if another customer who a disgusting",
    "start": "820600",
    "end": "826160"
  },
  {
    "text": "guide put a fake sushi on the Belt the customer will still pick and",
    "start": "826160",
    "end": "834040"
  },
  {
    "text": "eat the fake sushi so let's consider the fre list which works like the sush Bel",
    "start": "834040",
    "end": "841880"
  },
  {
    "text": "and even worse it is transparent to the users so the user will pick and it's the",
    "start": "841880",
    "end": "847920"
  },
  {
    "text": "fake Su no matter who put it on so how to write into the fre list how",
    "start": "847920",
    "end": "855199"
  },
  {
    "text": "to write into the sush belt there are three ways that could",
    "start": "855199",
    "end": "860560"
  },
  {
    "text": "write into the fre list direct free",
    "start": "860560",
    "end": "866839"
  },
  {
    "text": "split when allocating and col one free when direct freeing a block it will",
    "start": "866839",
    "end": "874360"
  },
  {
    "text": "be linked into one of the fre list but which one it is only related to its size",
    "start": "874360",
    "end": "882480"
  },
  {
    "text": "so that is to see when direct free a block it could write into the one and",
    "start": "882480",
    "end": "889800"
  },
  {
    "text": "only free list but first SP and col have a different",
    "start": "889800",
    "end": "897519"
  },
  {
    "text": "story when when the free space is not than needed a split big chunk process",
    "start": "897560",
    "end": "903360"
  },
  {
    "text": "will taken place it will pick from the front or the end of the free space to",
    "start": "903360",
    "end": "911279"
  },
  {
    "text": "serve the allocation and Link the unused fragment",
    "start": "911279",
    "end": "916680"
  },
  {
    "text": "into the free list as the size of the unused fragment",
    "start": "916680",
    "end": "922440"
  },
  {
    "text": "is calculated so the free list it will be linked in to is calculated",
    "start": "922440",
    "end": "930600"
  },
  {
    "text": "so by taking use of the fre list searching and split big trunk process as",
    "start": "932440",
    "end": "939480"
  },
  {
    "text": "a completion I have solved the previous Problem by this mandatory search",
    "start": "939480",
    "end": "946199"
  },
  {
    "text": "technique one force the fre list searching taking place two Force the",
    "start": "946199",
    "end": "952480"
  },
  {
    "text": "search always Creator than requested this is a mandatory research",
    "start": "952480",
    "end": "959120"
  },
  {
    "text": "technique in the kople allocation when the allocate when the",
    "start": "959120",
    "end": "965040"
  },
  {
    "text": "allocation request comes the allocator will will check its side to decide which strategy for",
    "start": "965040",
    "end": "973800"
  },
  {
    "text": "allocating if it's a small size the look side search will taken place",
    "start": "973800",
    "end": "980120"
  },
  {
    "text": "first here but empty the look side list we could force the free list searching",
    "start": "980120",
    "end": "986319"
  },
  {
    "text": "Tak place and dur in the fre list searching by empty the fre list which",
    "start": "986319",
    "end": "994680"
  },
  {
    "text": "have the exact match it could force the search result always greater than",
    "start": "994680",
    "end": "1000800"
  },
  {
    "text": "requested and force the split big chunk process taking place that to",
    "start": "1000800",
    "end": "1008040"
  },
  {
    "text": "see it could dynamically write into the freist when",
    "start": "1008040",
    "end": "1015440"
  },
  {
    "text": "allocating this is a simple",
    "start": "1017480",
    "end": "1022639"
  },
  {
    "text": "example our Target is to let the vulnerable buffer which size is ZX 200",
    "start": "1022639",
    "end": "1031240"
  },
  {
    "text": "bytes and adjacent with a directory object which size is 0x",
    "start": "1031240",
    "end": "1039319"
  },
  {
    "text": "c0 so the initial status of the C looks",
    "start": "1039760",
    "end": "1046438"
  },
  {
    "text": "like this lots of free pages and lots of",
    "start": "1046439",
    "end": "1052799"
  },
  {
    "text": "gaps and by lots of lots of allocating of ZX 808",
    "start": "1053240",
    "end": "1060000"
  },
  {
    "text": "blocks we could defragment the Cur like this and left thex 7 f8 free BLX lots of",
    "start": "1060000",
    "end": "1070039"
  },
  {
    "text": "them and allocate five f8 and make z x 200 whole",
    "start": "1070039",
    "end": "1077039"
  },
  {
    "text": "in take over these holes and three 5 f8 and allocate 538",
    "start": "1077039",
    "end": "1086080"
  },
  {
    "text": "block and make Z ex Z hole that's for the directory data",
    "start": "1086080",
    "end": "1094080"
  },
  {
    "text": "structure and taking these holes by lots of allocation of these uh directory",
    "start": "1094080",
    "end": "1101760"
  },
  {
    "text": "objects and let's make hes for the vulnerable",
    "start": "1101760",
    "end": "1107320"
  },
  {
    "text": "buffer so when allocating the vulnerable buffer",
    "start": "1107320",
    "end": "1113240"
  },
  {
    "text": "it will fall into one of the hole I made before and the data structure ZX c0 is just",
    "start": "1113240",
    "end": "1122480"
  },
  {
    "text": "behind it and let's watch the",
    "start": "1122480",
    "end": "1128600"
  },
  {
    "text": "demo",
    "start": "1137320",
    "end": "1140320"
  },
  {
    "text": "Let's uh pick a size how about",
    "start": "1146760",
    "end": "1152000"
  },
  {
    "text": "800 so that's a first step before that uh I want to check the priv",
    "start": "1152000",
    "end": "1159679"
  },
  {
    "text": "privilege of this",
    "start": "1159679",
    "end": "1163000"
  },
  {
    "text": "application it is here it is low Integrity which means it is a very low",
    "start": "1165240",
    "end": "1173360"
  },
  {
    "text": "uh privilege and it it could be launched in the sandbox",
    "start": "1173360",
    "end": "1179880"
  },
  {
    "text": "process and let's watch the caral de",
    "start": "1181240",
    "end": "1186760"
  },
  {
    "text": "bagger this break",
    "start": "1190440",
    "end": "1194080"
  },
  {
    "text": "point is a actually allocate uh Place function allocate",
    "start": "1197240",
    "end": "1205000"
  },
  {
    "text": "function in the C and I'm going to print out a return address of every",
    "start": "1205000",
    "end": "1213760"
  },
  {
    "text": "allocations and let's go the first step here we",
    "start": "1220559",
    "end": "1226960"
  },
  {
    "text": "go yeah this is that lots of allocation and",
    "start": "1227159",
    "end": "1233559"
  },
  {
    "text": "let's check them a AA a a b a a c a a and these are",
    "start": "1233559",
    "end": "1242559"
  },
  {
    "text": "the continuous uh pages and I will describe uh why it",
    "start": "1242559",
    "end": "1249840"
  },
  {
    "text": "looks like this in the later part so let's disable",
    "start": "1249840",
    "end": "1255760"
  },
  {
    "text": "the break point and jump to the end to watch the",
    "start": "1255760",
    "end": "1263039"
  },
  {
    "text": "result here we go this is before the allocating the vulnerable buer to describe how reliable",
    "start": "1265880",
    "end": "1274880"
  },
  {
    "text": "this method will be I have continuously allocated 50 uh vulnerable",
    "start": "1274880",
    "end": "1282799"
  },
  {
    "text": "buffer and let's watch what have been allocated",
    "start": "1283440",
    "end": "1290039"
  },
  {
    "text": "and here we go they are vulnerable buffer and let's",
    "start": "1295039",
    "end": "1302840"
  },
  {
    "text": "check what's behind",
    "start": "1302840",
    "end": "1306559"
  },
  {
    "text": "it minus8 it's a header and",
    "start": "1313559",
    "end": "1318600"
  },
  {
    "text": "64 is uh is it size and let's jump over it times",
    "start": "1318600",
    "end": "1325360"
  },
  {
    "text": "8 the directory object is just behind it let's pick another",
    "start": "1325360",
    "end": "1334000"
  },
  {
    "text": "one this same directory object",
    "start": "1335039",
    "end": "1340360"
  },
  {
    "text": "here how about this one directory object so",
    "start": "1340360",
    "end": "1349960"
  },
  {
    "text": "looks our Target have be achieved in this",
    "start": "1351000",
    "end": "1355960"
  },
  {
    "text": "part so let's continue even even have this idea on hand one might still",
    "start": "1363039",
    "end": "1368480"
  },
  {
    "text": "encounter numerous problems when implementating so in the following",
    "start": "1368480",
    "end": "1373919"
  },
  {
    "text": "sections I will discuss the implementation in the C and the US hip",
    "start": "1373919",
    "end": "1380559"
  },
  {
    "text": "separately and more reliable notes for this method could be fed on the white",
    "start": "1380559",
    "end": "1386440"
  },
  {
    "text": "paper later we have seen this picture before",
    "start": "1386440",
    "end": "1392480"
  },
  {
    "text": "it's a Carle allocator when allocating request comes",
    "start": "1392480",
    "end": "1398080"
  },
  {
    "text": "it will check this size and it could it will be categorized",
    "start": "1398080",
    "end": "1403200"
  },
  {
    "text": "into small medium and large allocation and there are different",
    "start": "1403200",
    "end": "1409120"
  },
  {
    "text": "strategies for each of them and it's very straightforward on this",
    "start": "1409120",
    "end": "1415919"
  },
  {
    "text": "picture this method have some pres prerequisites allocate baffer of op size",
    "start": "1417360",
    "end": "1424799"
  },
  {
    "text": "and free buffer of op size control the allocation and deallocations using user",
    "start": "1424799",
    "end": "1430919"
  },
  {
    "text": "code user mode code from the userland point of view we",
    "start": "1430919",
    "end": "1436960"
  },
  {
    "text": "cannot see edit anything about the current layout so the first question is",
    "start": "1436960",
    "end": "1442640"
  },
  {
    "text": "how can we control or affect the Cel playout using user mode",
    "start": "1442640",
    "end": "1450000"
  },
  {
    "text": "code the idea is to find some native apis or activities like Network package",
    "start": "1451120",
    "end": "1459200"
  },
  {
    "text": "receiving that could actually allocate or free the memory from the kernel pool",
    "start": "1459200",
    "end": "1464720"
  },
  {
    "text": "and for the page pool the need the apis that could allocate the UN code string",
    "start": "1464720",
    "end": "1472799"
  },
  {
    "text": "is a good fit like this it is called create symbolic link",
    "start": "1472799",
    "end": "1478960"
  },
  {
    "text": "object and for free by direct Clos this handle",
    "start": "1478960",
    "end": "1485880"
  },
  {
    "text": "we could achieve that let's record the",
    "start": "1485880",
    "end": "1491679"
  },
  {
    "text": "allocation uh progress for the zerx 808",
    "start": "1491679",
    "end": "1496760"
  },
  {
    "text": "block as is a medium size so the fre list searching will taken place",
    "start": "1496760",
    "end": "1503559"
  },
  {
    "text": "first and after lot of allocations of this sze uh the free lists were",
    "start": "1503559",
    "end": "1511679"
  },
  {
    "text": "empty and the caral pool will be expanded using this function m i",
    "start": "1511679",
    "end": "1518919"
  },
  {
    "text": "allocate pool Pages as we can see the second parameter ZX 1000 is hardcoded",
    "start": "1518919",
    "end": "1526720"
  },
  {
    "text": "which means this is a brand new page and furthermore after allocating the ZX 808",
    "start": "1526720",
    "end": "1533840"
  },
  {
    "text": "blocks from the new pages the free space left the X7 f8 cannot satisfy the future",
    "start": "1533840",
    "end": "1541000"
  },
  {
    "text": "allocation of this side and a new page will be uh expanded again and",
    "start": "1541000",
    "end": "1547720"
  },
  {
    "text": "again so that's really way we have seen that in my previous",
    "start": "1547720",
    "end": "1554600"
  },
  {
    "text": "demo and to allocate the uh pages from virtual address is",
    "start": "1555360",
    "end": "1560840"
  },
  {
    "text": "controlled by the bit map there are some important function and",
    "start": "1560840",
    "end": "1566559"
  },
  {
    "text": "structures that's using in the bit map",
    "start": "1566559",
    "end": "1571000"
  },
  {
    "text": "search briefly speaking the bit map will be searched",
    "start": "1571679",
    "end": "1578279"
  },
  {
    "text": "for continuously free blocks to serve the allocating request",
    "start": "1578279",
    "end": "1584440"
  },
  {
    "text": "if it's one page it will come from here here and two pages and three",
    "start": "1584440",
    "end": "1592679"
  },
  {
    "text": "pages and uh both in 32 bit version of Windows and",
    "start": "1593679",
    "end": "1601480"
  },
  {
    "text": "64 bit ver bit version of Windows there's no Randomness being added in bit",
    "start": "1601480",
    "end": "1607559"
  },
  {
    "text": "map search which result in the continuous allocating the pages from the",
    "start": "1607559",
    "end": "1614240"
  },
  {
    "text": "virtual address and we have seen the continuously address in the",
    "start": "1614240",
    "end": "1620679"
  },
  {
    "text": "demo and if every search failed in the",
    "start": "1620679",
    "end": "1626039"
  },
  {
    "text": "32bit version version of Windows the ver virtual address will be",
    "start": "1626039",
    "end": "1632840"
  },
  {
    "text": "dynamic dynamically expanded and this result",
    "start": "1632840",
    "end": "1639480"
  },
  {
    "text": "in the high address and relatively High address could be achieved only through",
    "start": "1639480",
    "end": "1647200"
  },
  {
    "text": "he spring and I will talk about it",
    "start": "1647200",
    "end": "1653880"
  },
  {
    "text": "later the piing sequence when spitting is very interesting to this is this is",
    "start": "1654279",
    "end": "1661159"
  },
  {
    "text": "empty page and the first allocation from the",
    "start": "1661159",
    "end": "1667279"
  },
  {
    "text": "empty empty page will come from the first and left the three blocks left on",
    "start": "1667279",
    "end": "1675159"
  },
  {
    "text": "the end but the following allocations the second",
    "start": "1675159",
    "end": "1681120"
  },
  {
    "text": "one third one will come from the end and let the ZX 200 hes just in the",
    "start": "1681120",
    "end": "1689840"
  },
  {
    "text": "middle let's recall our controll way if if it's a small pool",
    "start": "1691440",
    "end": "1698519"
  },
  {
    "text": "navigation it will go to the look side list searching and empty by empty they",
    "start": "1698519",
    "end": "1705000"
  },
  {
    "text": "looks at uh uh list I could force the freist searching and",
    "start": "1705000",
    "end": "1710919"
  },
  {
    "text": "during the freist seon I will empty the fre lists which",
    "start": "1710919",
    "end": "1716840"
  },
  {
    "text": "have the exact match and force the split big chunk process taking",
    "start": "1716840",
    "end": "1722919"
  },
  {
    "text": "place and split CHS right into the F list when",
    "start": "1722919",
    "end": "1730159"
  },
  {
    "text": "allocating if it's a medium allocating it will go from",
    "start": "1730159",
    "end": "1736399"
  },
  {
    "text": "this so let's talk about the size I have just",
    "start": "1736399",
    "end": "1744840"
  },
  {
    "text": "talked the ZX 200 vulnerable buffer what about the other",
    "start": "1744840",
    "end": "1751240"
  },
  {
    "text": "sies actually there's these allocations could be categorized into these groups",
    "start": "1751240",
    "end": "1757799"
  },
  {
    "text": "smaller than the X 400 which is the same as zx200 allocation and between 400 and",
    "start": "1757799",
    "end": "1766559"
  },
  {
    "text": "800 and between 800 FF Z and larger than FF",
    "start": "1766559",
    "end": "1772559"
  },
  {
    "text": "Z for the for the time reason I cannot detail them but the these strategies for",
    "start": "1772559",
    "end": "1780960"
  },
  {
    "text": "each of them are very similar and you could figure it out from the white paper or the slides",
    "start": "1780960",
    "end": "1789000"
  },
  {
    "text": "offline Dem was of this section wrong typing it will come",
    "start": "1793720",
    "end": "1800519"
  },
  {
    "text": "later and let's go to the exploitation",
    "start": "1800519",
    "end": "1806919"
  },
  {
    "text": "part to utilize a Windows object for uh colal vulnerability exploitation is to",
    "start": "1807240",
    "end": "1814799"
  },
  {
    "text": "find some data structor like function point or index then use overflow V",
    "start": "1814799",
    "end": "1822440"
  },
  {
    "text": "vulnerability to modify it for example in the windows",
    "start": "1822440",
    "end": "1827919"
  },
  {
    "text": "seven the type index in the object header is a nice choice",
    "start": "1827919",
    "end": "1835398"
  },
  {
    "text": "and a code execution could be achieved when calling Cod",
    "start": "1835480",
    "end": "1841240"
  },
  {
    "text": "handle at here and at this object is controlled by",
    "start": "1841240",
    "end": "1847799"
  },
  {
    "text": "us and before this me memory being uh",
    "start": "1847799",
    "end": "1853159"
  },
  {
    "text": "freed it could lead to code execution before the system",
    "start": "1853159",
    "end": "1859919"
  },
  {
    "text": "crashed and in Windows 8 the mat way to attacking the function point in the",
    "start": "1859919",
    "end": "1867120"
  },
  {
    "text": "time",
    "start": "1867120",
    "end": "1869480"
  },
  {
    "text": "object and let's watch the demo",
    "start": "1873120",
    "end": "1878360"
  },
  {
    "text": "now this demo is uh loaded uh uh carel",
    "start": "1886159",
    "end": "1891960"
  },
  {
    "text": "driver which is written by myself it's uh overflow it contains overflow",
    "start": "1891960",
    "end": "1897080"
  },
  {
    "text": "vulnerability and I loaded this driver to Trigg the Overflow vulnerability to",
    "start": "1897080",
    "end": "1902440"
  },
  {
    "text": "demonstrate how to lead to code execution and to load this driver I need",
    "start": "1902440",
    "end": "1911480"
  },
  {
    "text": "administrator what right here",
    "start": "1916159",
    "end": "1923360"
  },
  {
    "text": "who looks we have control the code execution already and uh the most",
    "start": "1923360",
    "end": "1928799"
  },
  {
    "text": "important is to check the buffers allocation and uh if",
    "start": "1928799",
    "end": "1936080"
  },
  {
    "text": "the desired object is just behind the vulnerable",
    "start": "1936080",
    "end": "1942158"
  },
  {
    "text": "buffer so the vulnerable buffer have been allocated at this address",
    "start": "1946080",
    "end": "1954080"
  },
  {
    "text": "and let's checking at",
    "start": "1954080",
    "end": "1961480"
  },
  {
    "text": "8181 M8 that my name which means this",
    "start": "1961919",
    "end": "1967760"
  },
  {
    "text": "vulnerable buffer was allocated by my driver and let's jump out the it's it",
    "start": "1967760",
    "end": "1974600"
  },
  {
    "text": "size 40 * 8 that's a timer object just behind",
    "start": "1974600",
    "end": "1983398"
  },
  {
    "text": "it so let's check the uh if we have",
    "start": "1985039",
    "end": "1990159"
  },
  {
    "text": "executed into the share code the share code have been allocated at 86 E8",
    "start": "1990159",
    "end": "1999120"
  },
  {
    "text": "0928 and that's a",
    "start": "1999120",
    "end": "2005960"
  },
  {
    "text": "EIP it's the same as 86 ea0 928 which",
    "start": "2005960",
    "end": "2011000"
  },
  {
    "text": "means we have controled the code execution and it's here",
    "start": "2011000",
    "end": "2020278"
  },
  {
    "text": "already so I going to stop this snapshot for for future",
    "start": "2025320",
    "end": "2032159"
  },
  {
    "text": "use",
    "start": "2035960",
    "end": "2038960"
  },
  {
    "text": "and this there's one more part to exploiting the right what we",
    "start": "2048960",
    "end": "2055760"
  },
  {
    "text": "vulnerability the key factors for",
    "start": "2055760",
    "end": "2061118"
  },
  {
    "text": "sorry my V VMware on the Snapchat is on the laptop is very slow",
    "start": "2061119",
    "end": "2068879"
  },
  {
    "text": "the key factor to exploit this vulnerability is to place data",
    "start": "2070679",
    "end": "2075800"
  },
  {
    "text": "structures at a predictable address let's see it's uh this address",
    "start": "2075800",
    "end": "2084079"
  },
  {
    "text": "it is a relative High address which could be achieved only through hip",
    "start": "2084079",
    "end": "2090200"
  },
  {
    "text": "spre and our kernal manipulation method could help us to place object",
    "start": "2090200",
    "end": "2097440"
  },
  {
    "text": "like this and we could place object at the Z",
    "start": "2097440",
    "end": "2105359"
  },
  {
    "text": "x48 and this uh this address could be",
    "start": "2105359",
    "end": "2111920"
  },
  {
    "text": "calculated and it's very simple and I don't need to demo it I",
    "start": "2112240",
    "end": "2118320"
  },
  {
    "text": "think the last part implementation in the",
    "start": "2118320",
    "end": "2124440"
  },
  {
    "text": "US this is a user Heap allocator and it's very similar to the Curr allocator",
    "start": "2124599",
    "end": "2131160"
  },
  {
    "text": "when allocation request comes depends on its size it will be categorized into",
    "start": "2131160",
    "end": "2138320"
  },
  {
    "text": "small medium and large there are two important value ZX 4000 and ZX 7 f f FF",
    "start": "2138320",
    "end": "2149319"
  },
  {
    "text": "to categorize these allocation into small medium and large when the",
    "start": "2149319",
    "end": "2154760"
  },
  {
    "text": "allocation uh size smaller than ZX 4000 the",
    "start": "2154760",
    "end": "2160040"
  },
  {
    "text": "afh alloc allocator will be checked first to see if it's being activated for",
    "start": "2160040",
    "end": "2166920"
  },
  {
    "text": "this size if not the back end allocator will be",
    "start": "2166920",
    "end": "2172720"
  },
  {
    "text": "used and let's go to the uh attacking part to practical attacking if us the",
    "start": "2178319",
    "end": "2184040"
  },
  {
    "text": "data you header this data structures the is the new metadata which introduced in",
    "start": "2184040",
    "end": "2190079"
  },
  {
    "text": "the new lfh allocator this idea was brought by Chris",
    "start": "2190079",
    "end": "2196960"
  },
  {
    "text": "and as a note to compromise the metadata is to trying to compromise or",
    "start": "2196960",
    "end": "2205160"
  },
  {
    "text": "tacking the datas that is not",
    "start": "2205160",
    "end": "2211039"
  },
  {
    "text": "underprediction of that they are PL t Tex and no Integrity check so if these",
    "start": "2212520",
    "end": "2220960"
  },
  {
    "text": "two datas being modified the future allocations will controlled by us but",
    "start": "2220960",
    "end": "2227040"
  },
  {
    "text": "it's not easy there are two challenges 18 times of allocations will",
    "start": "2227040",
    "end": "2235079"
  },
  {
    "text": "trigger the a FH for the vulnerable buffer and 400 times of allocation will",
    "start": "2235079",
    "end": "2241720"
  },
  {
    "text": "trigger the guard Pages event it will like this when they have been triggered",
    "start": "2241720",
    "end": "2247920"
  },
  {
    "text": "the vulnerable buffer will be randomly be located at one of the",
    "start": "2247920",
    "end": "2254720"
  },
  {
    "text": "block and we don't know where is it and if lots of uh overflow taking place and",
    "start": "2254720",
    "end": "2262119"
  },
  {
    "text": "overflow into the guard pages and it will raise the exception and the gains",
    "start": "2262119",
    "end": "2269920"
  },
  {
    "text": "over and so the target of this part is to let the V",
    "start": "2270359",
    "end": "2277160"
  },
  {
    "text": "buffer just be before these data",
    "start": "2277160",
    "end": "2282319"
  },
  {
    "text": "structures without triggering the aof and without triggering the guard",
    "start": "2282319",
    "end": "2290319"
  },
  {
    "text": "Pages there are some disc discoveries I have found and by taking use of this I",
    "start": "2290520",
    "end": "2296960"
  },
  {
    "text": "realized I might be able to bypass these challenges by make uh by taking use of",
    "start": "2296960",
    "end": "2304160"
  },
  {
    "text": "this mandatory search like this way one when the allocated size between ZX",
    "start": "2304160",
    "end": "2310960"
  },
  {
    "text": "4000 and ZX7 FF and the backend allocator will be",
    "start": "2310960",
    "end": "2316240"
  },
  {
    "text": "used that there's a no Randomness being added in the backend allocator and we",
    "start": "2316240",
    "end": "2321839"
  },
  {
    "text": "could defragment the hip using the back end",
    "start": "2321839",
    "end": "2328000"
  },
  {
    "text": "allocator and furthermore the split big chunk process are still exist in the back end",
    "start": "2328000",
    "end": "2335520"
  },
  {
    "text": "allocator for example by freeing the",
    "start": "2335520",
    "end": "2341640"
  },
  {
    "text": "7,100 rcks and allocate ZX 70,000 and we could make 100 home and",
    "start": "2341640",
    "end": "2350119"
  },
  {
    "text": "the most important part is we didn't nothing to affect the",
    "start": "2350119",
    "end": "2356000"
  },
  {
    "text": "lfh and the third one is the size of the user block I mean the total size",
    "start": "2356359",
    "end": "2362839"
  },
  {
    "text": "including the header every blocks uh the total size is a relative fixed",
    "start": "2362839",
    "end": "2371400"
  },
  {
    "text": "value for example there is 200 Hep bucket the first time the lfh being",
    "start": "2371400",
    "end": "2378560"
  },
  {
    "text": "triggered it size is zx1 ff8 and this",
    "start": "2378560",
    "end": "2384079"
  },
  {
    "text": "value you will see it later and plus the header the the hip",
    "start": "2384079",
    "end": "2390280"
  },
  {
    "text": "header it will be two Z 2,000 and by making use of this mandor",
    "start": "2390280",
    "end": "2395359"
  },
  {
    "text": "research technique in this way first one the fragment the hip using the the",
    "start": "2395359",
    "end": "2402160"
  },
  {
    "text": "backend allocator the 8,000 it's not than the x 4,000 and is back end",
    "start": "2402160",
    "end": "2408319"
  },
  {
    "text": "allocator it could def fragment the Hep and by freeing the second to the",
    "start": "2408319",
    "end": "2415839"
  },
  {
    "text": "last and the allocate the 6,000",
    "start": "2415839",
    "end": "2421440"
  },
  {
    "text": "blocks it could make this hole and this hole is for the user block for the you",
    "start": "2421440",
    "end": "2429200"
  },
  {
    "text": "uh hip packet direct 200 and then by lot of allocation of ZX 200",
    "start": "2429200",
    "end": "2438280"
  },
  {
    "text": "blocks it will fall into the hole we made that's a user",
    "start": "2438280",
    "end": "2444240"
  },
  {
    "text": "block and first take a closer look at that's header every every user",
    "start": "2444240",
    "end": "2453200"
  },
  {
    "text": "blocks and we almost be there and free this block and allocate five d0 0 and",
    "start": "2453200",
    "end": "2461520"
  },
  {
    "text": "then we could make a hole there that's for the vulnerable",
    "start": "2461520",
    "end": "2467559"
  },
  {
    "text": "buffer so when notating the vulnerable buffer it will fall into this hole and",
    "start": "2468000",
    "end": "2473960"
  },
  {
    "text": "uh the header is just behind",
    "start": "2473960",
    "end": "2478680"
  },
  {
    "text": "it with these datas datas have be I have mentioned before being",
    "start": "2481079",
    "end": "2486760"
  },
  {
    "text": "modified so the future allocations will jump out this user blocks which is",
    "start": "2486760",
    "end": "2493640"
  },
  {
    "text": "supposed to be and jump into the red area which control",
    "start": "2493640",
    "end": "2500078"
  },
  {
    "text": "B and they have some uh prerequisites in this part the most important",
    "start": "2500599",
    "end": "2507680"
  },
  {
    "text": "was the a FH of this vulnerable buffer sitze have not been activated by the",
    "start": "2507680",
    "end": "2515000"
  },
  {
    "text": "time of allocation simply speaking is in a pure PC no hip",
    "start": "2515000",
    "end": "2521560"
  },
  {
    "text": "spree no hip function just triggering the vulnerability when allocating the",
    "start": "2521560",
    "end": "2528040"
  },
  {
    "text": "vulnerable buffer by that time the lfh have not been triggered",
    "start": "2528040",
    "end": "2535839"
  },
  {
    "text": "yet and two allocate buff of AR size free B of up size programmatic control",
    "start": "2536040",
    "end": "2543079"
  },
  {
    "text": "of allocations and phase that see uh the best place to use this technique is in",
    "start": "2543079",
    "end": "2550640"
  },
  {
    "text": "the client application like",
    "start": "2550640",
    "end": "2554960"
  },
  {
    "text": "browser so let's recall the exploitation process let's figure out the",
    "start": "2556119",
    "end": "2564079"
  },
  {
    "text": "vulnerability to figure out if the vulnerable buffer have been triggered",
    "start": "2564079",
    "end": "2569800"
  },
  {
    "text": "the lfh for this size have been triggered and if this vulnerability allows us to",
    "start": "2569800",
    "end": "2576559"
  },
  {
    "text": "over overlow into the datas I mentioned before if",
    "start": "2576559",
    "end": "2583440"
  },
  {
    "text": "yes let's build the Heap layout using this new Hep function and Trigger the",
    "start": "2583440",
    "end": "2588920"
  },
  {
    "text": "Overflow modify these datas and allocate the new object with a controlled",
    "start": "2588920",
    "end": "2598720"
  },
  {
    "text": "size and this these allocations will jump into the area the red area we have",
    "start": "2598720",
    "end": "2605480"
  },
  {
    "text": "controlled before and we could modify the content and finally control the",
    "start": "2605480",
    "end": "2613040"
  },
  {
    "text": "E and let's watch the",
    "start": "2614040",
    "end": "2618319"
  },
  {
    "text": "demo these allocations are the first step to defragment the hip using back",
    "start": "2630720",
    "end": "2637040"
  },
  {
    "text": "end allocator and uh let's pick something them c0 C8 d0 d8 e E8 they are",
    "start": "2637040",
    "end": "2646160"
  },
  {
    "text": "adjacent to each other and continuously so",
    "start": "2646160",
    "end": "2653440"
  },
  {
    "text": "here we're going to allocate these data",
    "start": "2653440",
    "end": "2658960"
  },
  {
    "text": "structures",
    "start": "2665000",
    "end": "2668000"
  },
  {
    "text": "this break point is the place where allocated the user",
    "start": "2670119",
    "end": "2677319"
  },
  {
    "text": "blocks oh sorry actually should label zero let's",
    "start": "2686480",
    "end": "2691880"
  },
  {
    "text": "go back sorry",
    "start": "2691880",
    "end": "2697960"
  },
  {
    "text": "here we go and we can check the this parameter is 1",
    "start": "2701839",
    "end": "2709240"
  },
  {
    "text": "ff8 and I have mentioned before that's a total",
    "start": "2709240",
    "end": "2714160"
  },
  {
    "text": "size it have been allocated as this as",
    "start": "2716400",
    "end": "2722078"
  },
  {
    "text": "there so the for step is to check if this allocated address is",
    "start": "2723839",
    "end": "2731079"
  },
  {
    "text": "falling to the hole we made before and the how is",
    "start": "2731079",
    "end": "2738599"
  },
  {
    "text": "there z x A1 e0 for8 and that's a",
    "start": "2738599",
    "end": "2745520"
  },
  {
    "text": "in so it's fall into the hole and the following steps is to trigger the V",
    "start": "2745520",
    "end": "2752520"
  },
  {
    "text": "vulnerability and uh control the future allocation the",
    "start": "2752520",
    "end": "2758079"
  },
  {
    "text": "enter yeah we can check the future allocations is that here and what this address",
    "start": "2765559",
    "end": "2774920"
  },
  {
    "text": "is it size is z0x 2000 the user block so",
    "start": "2784800",
    "end": "2791319"
  },
  {
    "text": "this is the end of the user block the allocation is supposed to be but these",
    "start": "2791319",
    "end": "2799440"
  },
  {
    "text": "new allocations is size is",
    "start": "2799440",
    "end": "2805680"
  },
  {
    "text": "078 it's not than that we have jumped out this place and jump into I uh the",
    "start": "2805680",
    "end": "2812359"
  },
  {
    "text": "area I have controlled and the future allocations",
    "start": "2812359",
    "end": "2817800"
  },
  {
    "text": "then I can control the EIP like",
    "start": "2820559",
    "end": "2828480"
  },
  {
    "text": "here so this is the the pure py",
    "start": "2829000",
    "end": "2834160"
  },
  {
    "text": "without so yeah we have control the code",
    "start": "2836040",
    "end": "2841359"
  },
  {
    "text": "execution here",
    "start": "2841359",
    "end": "2847720"
  },
  {
    "text": "and let's go to the last section the Practical hip determining in I",
    "start": "2851520",
    "end": "2858200"
  },
  {
    "text": "10 actually the idea used in this is very similar as",
    "start": "2858200",
    "end": "2863839"
  },
  {
    "text": "before and I have taken use of uh the",
    "start": "2863839",
    "end": "2869200"
  },
  {
    "text": "canas to 2D object to allocate or and free the user heave instead instead of",
    "start": "2869200",
    "end": "2877280"
  },
  {
    "text": "of us and is it is learned from the",
    "start": "2877280",
    "end": "2882319"
  },
  {
    "text": "HTML5 hip spr and this is for the demonstration purpose and uh It could",
    "start": "2882319",
    "end": "2890000"
  },
  {
    "text": "only uh write into and control the",
    "start": "2890000",
    "end": "2895800"
  },
  {
    "text": "CR so before that attach the de bagger on",
    "start": "2904640",
    "end": "2913960"
  },
  {
    "text": "it this is actual place where uh the uh",
    "start": "2928200",
    "end": "2933680"
  },
  {
    "text": "memory being allocated actually and after that I'm going to print out every uh",
    "start": "2933680",
    "end": "2941520"
  },
  {
    "text": "address so allocating ZX 8,000",
    "start": "2943400",
    "end": "2950160"
  },
  {
    "text": "and they are these allocations and that's the same it's",
    "start": "2950240",
    "end": "2956880"
  },
  {
    "text": "adjacent to each other and make",
    "start": "2956880",
    "end": "2964520"
  },
  {
    "text": "close so the last step is to allocate the vable buffer which size is 0x 200",
    "start": "2964520",
    "end": "2971520"
  },
  {
    "text": "and I have allocated five of them to to see what have",
    "start": "2971520",
    "end": "2977280"
  },
  {
    "text": "been allocated then",
    "start": "2977280",
    "end": "2982520"
  },
  {
    "text": "here let's check it content before it it's our controlled",
    "start": "2982520",
    "end": "2990400"
  },
  {
    "text": "place and after after it it's our controlled place",
    "start": "2990400",
    "end": "2996839"
  },
  {
    "text": "let's check this one yeah that's the",
    "start": "2996839",
    "end": "3006480"
  },
  {
    "text": "same so which means if we could find something like uh the data structures",
    "start": "3014480",
    "end": "3022480"
  },
  {
    "text": "contains the function point and which sides actually actually allocated s",
    "start": "3022480",
    "end": "3029079"
  },
  {
    "text": "could be controlled by us to find this one and to using them to prepare the he and place the",
    "start": "3029079",
    "end": "3037640"
  },
  {
    "text": "vulnerable vulnerable buffer fall into the hole and take the Overflow and what",
    "start": "3037640",
    "end": "3044400"
  },
  {
    "text": "the data it could be overflowing to is our controlled data",
    "start": "3044400",
    "end": "3051280"
  },
  {
    "text": "structure",
    "start": "3054440",
    "end": "3057440"
  },
  {
    "text": "so uh it is good to see the Microsoft have introduced the non determinism in",
    "start": "3060839",
    "end": "3067760"
  },
  {
    "text": "the Windows 8 us hip and it's far away from the end as I have",
    "start": "3067760",
    "end": "3074280"
  },
  {
    "text": "demoed we could achieve reliable hip manipulation in US hip in some",
    "start": "3074280",
    "end": "3081720"
  },
  {
    "text": "circumstance and reliable caral for",
    "start": "3081720",
    "end": "3087680"
  },
  {
    "text": "manipulation so this is the end of this",
    "start": "3087720",
    "end": "3092880"
  },
  {
    "text": "talk do you have any question uh on 64 bits uh with I mean",
    "start": "3099040",
    "end": "3108160"
  },
  {
    "text": "there is a highest is stuation is the same or not oh it's similar it's the",
    "start": "3108160",
    "end": "3113640"
  },
  {
    "text": "same yeah uh the only thing differ is uh the header or sound date structure it",
    "start": "3113640",
    "end": "3121640"
  },
  {
    "text": "size like and you just modify it a little bit and you can use it on 64",
    "start": "3121640",
    "end": "3131440"
  },
  {
    "text": "bit so in second demo you showed that um",
    "start": "3133839",
    "end": "3139720"
  },
  {
    "text": "uh in the buer that you the the EIP points there is a um your just uh",
    "start": "3139720",
    "end": "3147559"
  },
  {
    "text": "payload just uh interrupt free but how you manage to control location of",
    "start": "3147559",
    "end": "3155400"
  },
  {
    "text": "executable pool from the user mode sorry okay can you show second demo yeah",
    "start": "3155400",
    "end": "3165599"
  },
  {
    "text": "sure it's about uh",
    "start": "3171920",
    "end": "3177240"
  },
  {
    "text": "but I have to restore the snapshot for a",
    "start": "3177960",
    "end": "3183480"
  },
  {
    "text": "caral it takes a little bit long cuz move the day my question was yeah",
    "start": "3192760",
    "end": "3200400"
  },
  {
    "text": "uh uh you know point of the demo was to show that Yi under control",
    "start": "3200400",
    "end": "3205799"
  },
  {
    "text": "oh cuz on Windows 8 Cu uh C by",
    "start": "3205799",
    "end": "3212400"
  },
  {
    "text": "SMP have to you know oh yeah you mean uh ideas where to store your payload or PR",
    "start": "3212400",
    "end": "3220079"
  },
  {
    "text": "oh actually uh where to store the payload where to store the sh Cod is out of the This research scope so I just uh",
    "start": "3220079",
    "end": "3228559"
  },
  {
    "text": "allocated yeah so maybe we can uh check later offline yeah",
    "start": "3228559",
    "end": "3237160"
  },
  {
    "text": "so thanks for coming",
    "start": "3237880",
    "end": "3245880"
  }
]