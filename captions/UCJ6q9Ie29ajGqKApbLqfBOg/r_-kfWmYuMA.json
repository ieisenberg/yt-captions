[
  {
    "text": "foreign",
    "start": "0",
    "end": "2840"
  },
  {
    "text": "is it okay in the back no louder yeah obvious okay",
    "start": "41520",
    "end": "50718"
  },
  {
    "text": "so I guess we're going to start um I'm Frederick Brett Monet and I'm I work",
    "start": "51719",
    "end": "58320"
  },
  {
    "text": "with at stake I'm a senior security architect and I wrote combust which is a com",
    "start": "58320",
    "end": "66420"
  },
  {
    "text": "automation automated come fuzzer um",
    "start": "66420",
    "end": "72439"
  },
  {
    "text": "so we're going to talk about scriptable objects combust and this Prez is is mostly about",
    "start": "75420",
    "end": "83580"
  },
  {
    "text": "combust little section on how to",
    "start": "83580",
    "end": "88799"
  },
  {
    "text": "mitigate those forms of attacks and those vulnerabilities and and hopefully you",
    "start": "88799",
    "end": "95400"
  },
  {
    "text": "guys will have lots of questions",
    "start": "95400",
    "end": "98420"
  },
  {
    "text": "so what's a scriptable object um what's this new class of attack",
    "start": "100439",
    "end": "107220"
  },
  {
    "text": "um and we'll eventually get to the most interesting part how do you demo",
    "start": "107220",
    "end": "112979"
  },
  {
    "text": "um if you remember one thing about this presentation see my",
    "start": "112979",
    "end": "119820"
  },
  {
    "text": "extreme PowerPoint skills at least I'll be known as the PowerPoint",
    "start": "119820",
    "end": "124860"
  },
  {
    "text": "Wizard or hopefully um",
    "start": "124860",
    "end": "130380"
  },
  {
    "text": "so it's a scriptable object it's an object that implements an i dispatch interface",
    "start": "130380",
    "end": "135599"
  },
  {
    "text": "which is an interface that enables scripting languages to enumerate",
    "start": "135599",
    "end": "143959"
  },
  {
    "text": "interfaces or methods and find out what they provide",
    "start": "143959",
    "end": "150840"
  },
  {
    "text": "from a user perspective this means that any scripting language can interact with",
    "start": "150840",
    "end": "158520"
  },
  {
    "text": "it one example that I've put there which hopefully you can see is the Melissa virus which was",
    "start": "158520",
    "end": "166260"
  },
  {
    "text": "using all the Automation and com automation to actually",
    "start": "166260",
    "end": "173040"
  },
  {
    "text": "those guys next door are too noisy to actually enumerate addresses and",
    "start": "173040",
    "end": "180840"
  },
  {
    "text": "nicely send emails around",
    "start": "180840",
    "end": "185840"
  },
  {
    "text": "so Melissa was actually using Outlook and its com automation interface",
    "start": "189300",
    "end": "197940"
  },
  {
    "text": "for its purpose now I'm not saying Outlook is there to spaham but",
    "start": "197940",
    "end": "205140"
  },
  {
    "text": "it provides functionality it enables that what I'm introducing is the idea that",
    "start": "205140",
    "end": "210900"
  },
  {
    "text": "maybe you can use that functionality and the bugs in that functionality to actually",
    "start": "210900",
    "end": "217080"
  },
  {
    "text": "um take over the supporting application of buffer",
    "start": "217080",
    "end": "223080"
  },
  {
    "text": "overflows denial of service privilege escalation if if that object runs in a",
    "start": "223080",
    "end": "229680"
  },
  {
    "text": "separate user space um you can also",
    "start": "229680",
    "end": "236459"
  },
  {
    "text": "um have CPU utilization attacks",
    "start": "236459",
    "end": "241580"
  },
  {
    "text": "create files or use Network bandwidth so the idea is",
    "start": "241580",
    "end": "249180"
  },
  {
    "text": "use the functionality and its bugs to actually come up with attacks",
    "start": "249180",
    "end": "255840"
  },
  {
    "text": "and that's what combust will find",
    "start": "255840",
    "end": "260660"
  },
  {
    "text": "to understand better what window of opportunity existed I",
    "start": "264479",
    "end": "270180"
  },
  {
    "text": "wanted to find out what my laptop and a standard environment had as you can see",
    "start": "270180",
    "end": "278699"
  },
  {
    "text": "my laptop the one on the left I unfortunately have to reinstall the OS",
    "start": "278699",
    "end": "285479"
  },
  {
    "text": "about every six months or so it seems not to stay stable long enough",
    "start": "285479",
    "end": "291479"
  },
  {
    "text": "for me there's about six thousand objects registered in the registry",
    "start": "291479",
    "end": "297180"
  },
  {
    "text": "two thousand of them are potentially combustible",
    "start": "297180",
    "end": "302580"
  },
  {
    "text": "not all of them have vulnerabilities luckily but there's",
    "start": "302580",
    "end": "307620"
  },
  {
    "text": "right there the sheer number indicates that there is a good potential",
    "start": "307620",
    "end": "312780"
  },
  {
    "text": "on the right side a brand new windows 2003 install",
    "start": "312780",
    "end": "319500"
  },
  {
    "text": "has 1600 objects that are combustible",
    "start": "319500",
    "end": "325400"
  },
  {
    "text": "um in case you don't know about the cropped scale go check it out it's a",
    "start": "325680",
    "end": "331919"
  },
  {
    "text": "fun and good way of measuring how old your OS is and",
    "start": "331919",
    "end": "338100"
  },
  {
    "text": "how stable it is the so those objects are",
    "start": "338100",
    "end": "346400"
  },
  {
    "text": "OS objects web objects such as browser objects",
    "start": "347220",
    "end": "353280"
  },
  {
    "text": "plugins mail clients the office suite or",
    "start": "353280",
    "end": "358680"
  },
  {
    "text": "server-side objects if you want to evaluate a server component",
    "start": "358680",
    "end": "366740"
  },
  {
    "text": "um last night I I demoed combust and the immediate the first",
    "start": "369479",
    "end": "374940"
  },
  {
    "text": "reaction I got was yeah but this is a local attack to which I say not true",
    "start": "374940",
    "end": "380400"
  },
  {
    "text": "this is not local combust only finds vulnerability locally but those",
    "start": "380400",
    "end": "385919"
  },
  {
    "text": "apply to remote attacks too HTML has scripting abilities",
    "start": "385919",
    "end": "393600"
  },
  {
    "text": "so remotely you can go through the internet intranet email Outlook has tons of",
    "start": "393600",
    "end": "400500"
  },
  {
    "text": "scriptable support also locally you can",
    "start": "400500",
    "end": "406500"
  },
  {
    "text": "do cross-session attacks through terminal services or an XB through",
    "start": "406500",
    "end": "412460"
  },
  {
    "text": "concurrent users being logged onto the same box privilege escalation some",
    "start": "412460",
    "end": "419100"
  },
  {
    "text": "com servers or object servers are actually running in different user",
    "start": "419100",
    "end": "424139"
  },
  {
    "text": "spaces um you can also add your attack to login",
    "start": "424139",
    "end": "431100"
  },
  {
    "text": "scripts on domains and things like that so the the",
    "start": "431100",
    "end": "436460"
  },
  {
    "text": "supporting the lost it so that's the second thing you",
    "start": "436460",
    "end": "442860"
  },
  {
    "text": "might remember of me is that I'm shaking and I probably will win the stress",
    "start": "442860",
    "end": "448440"
  },
  {
    "text": "competition in this uh in this there's those two days but we'll",
    "start": "448440",
    "end": "453660"
  },
  {
    "text": "get through it and hopefully the tool will be of value um",
    "start": "453660",
    "end": "459300"
  },
  {
    "text": "so any channels that can be used by calm automation a com was intended for VB",
    "start": "459300",
    "end": "465539"
  },
  {
    "text": "script for VB originally now it's been reused by a lot",
    "start": "465539",
    "end": "471419"
  },
  {
    "text": "of scripting languages so as I said VB JavaScript",
    "start": "471419",
    "end": "476539"
  },
  {
    "text": "Windows scripting VBA CC plus can also use it use com",
    "start": "476539",
    "end": "483180"
  },
  {
    "text": "automation although they have shortcuts they don't really need automation Java Pearl and whatever other",
    "start": "483180",
    "end": "491880"
  },
  {
    "text": "language of choice yeah",
    "start": "491880",
    "end": "497340"
  },
  {
    "text": "so what I'm going to demo right now although there are some vulnerable com",
    "start": "497340",
    "end": "504180"
  },
  {
    "text": "objects out there the last few weeks I've written a vulnerable object",
    "start": "504180",
    "end": "510300"
  },
  {
    "text": "to just demonstrate it and not Point any fingers at anybody so just blame me for",
    "start": "510300",
    "end": "515820"
  },
  {
    "text": "the bad code what I'm going to do is show you how a vulnerable object can be exploited",
    "start": "515820",
    "end": "522959"
  },
  {
    "text": "through HTML and JavaScript if the target of your attack does not",
    "start": "522959",
    "end": "530760"
  },
  {
    "text": "have the com object on their system it's very",
    "start": "530760",
    "end": "535800"
  },
  {
    "text": "easy through cab files or through the location of the com object too",
    "start": "535800",
    "end": "541860"
  },
  {
    "text": "help the user download it those warnings where they say yes no or whatever they",
    "start": "541860",
    "end": "549300"
  },
  {
    "text": "usually say yes all the time so this com object will eventually be downloaded if",
    "start": "549300",
    "end": "554940"
  },
  {
    "text": "it's not on the system already and IE does provide for some ActiveX",
    "start": "554940",
    "end": "562260"
  },
  {
    "text": "execution permission fortunately",
    "start": "562260",
    "end": "568080"
  },
  {
    "text": "even though out of the box I.E asks for permissions they tend to be",
    "start": "568080",
    "end": "576839"
  },
  {
    "text": "disabled pretty quickly and if that object is trusted which is a very simple thing to do then",
    "start": "576839",
    "end": "584519"
  },
  {
    "text": "that object will be executed without any warnings unfortunately",
    "start": "584519",
    "end": "589740"
  },
  {
    "text": "I'm currently set up in so you'll have you'll see me play with my display",
    "start": "589740",
    "end": "597680"
  },
  {
    "text": "because I can't see what's on those screens but now I will",
    "start": "598560",
    "end": "603800"
  },
  {
    "text": "so right now I'm going to cite",
    "start": "606600",
    "end": "613019"
  },
  {
    "text": "outside on the internet and then I wrote that little page where there's four buttons",
    "start": "613019",
    "end": "618660"
  },
  {
    "text": "test me view the ActiveX code so that's the com objects source code view the",
    "start": "618660",
    "end": "626279"
  },
  {
    "text": "JavaScript so that's the JavaScript embedded in that HTML page blow me up which is actually exploiting that com",
    "start": "626279",
    "end": "634140"
  },
  {
    "text": "object um if you look at the ActiveX code hopefully you can read that otherwise",
    "start": "634140",
    "end": "641940"
  },
  {
    "text": "I'll walk through it basically what it does it's it's a function food that takes in a string",
    "start": "641940",
    "end": "647339"
  },
  {
    "text": "unfortunately the coder who will remain nameless had it hard-coded 256",
    "start": "647339",
    "end": "654660"
  },
  {
    "text": "character buffer and happily copies it into that buffer over here and here",
    "start": "654660",
    "end": "663600"
  },
  {
    "text": "without checking lengths so that's the typical buffer overflow as you can find",
    "start": "663600",
    "end": "670500"
  },
  {
    "text": "in Bad Code what happens when you pass in a string that's longer than",
    "start": "670500",
    "end": "675959"
  },
  {
    "text": "256 characters officially nobody knows now reality is",
    "start": "675959",
    "end": "681500"
  },
  {
    "text": "Shell Code",
    "start": "681500",
    "end": "684800"
  },
  {
    "text": "so test me this is the JavaScript that asks that alerts before it cause the object then",
    "start": "686760",
    "end": "695640"
  },
  {
    "text": "it instant CHD object and passes in 18 character string this message box now is",
    "start": "695640",
    "end": "702540"
  },
  {
    "text": "the vulnerable object that's talking it's been called with an 18 character",
    "start": "702540",
    "end": "708120"
  },
  {
    "text": "long string and it does what it's expected to do displays the 18 character",
    "start": "708120",
    "end": "713820"
  },
  {
    "text": "long string this is my message so all's fine now what happens if I",
    "start": "713820",
    "end": "721380"
  },
  {
    "text": "create a string that's a thousand characters long do the alert ready again",
    "start": "721380",
    "end": "728040"
  },
  {
    "text": "instantiate my sample basic object that has that vulnerability",
    "start": "728040",
    "end": "734100"
  },
  {
    "text": "and call function Foo note how easy it is to call a function Foo and from a",
    "start": "734100",
    "end": "739920"
  },
  {
    "text": "scripting language so again",
    "start": "739920",
    "end": "745380"
  },
  {
    "text": "ready the object receives the message sees that it is a thousand characters long",
    "start": "745380",
    "end": "753060"
  },
  {
    "text": "happily displays it and then he's not very happy",
    "start": "753060",
    "end": "760640"
  },
  {
    "text": "crashed ah this was a simple denial of service",
    "start": "761820",
    "end": "767100"
  },
  {
    "text": "everybody that went to that page if I hadn't put a the JavaScript function",
    "start": "767100",
    "end": "772440"
  },
  {
    "text": "behind a button would have actually crashed that's of limited value at worst it's a",
    "start": "772440",
    "end": "779339"
  },
  {
    "text": "no no no no an annoyance if Shell Code had been put into that",
    "start": "779339",
    "end": "785899"
  },
  {
    "text": "string then I would have owned whoever",
    "start": "785899",
    "end": "791100"
  },
  {
    "text": "hit that page does it make sense",
    "start": "791100",
    "end": "797420"
  },
  {
    "text": "so now I'm going to go back to the Press do a little bit of do that",
    "start": "798300",
    "end": "806000"
  },
  {
    "text": "so what's combust about so I rode combust about",
    "start": "817740",
    "end": "824399"
  },
  {
    "text": "eight months ago now to actually automatically find those",
    "start": "824399",
    "end": "831480"
  },
  {
    "text": "vulnerabilities such as that buffer overflow and that function Foo",
    "start": "831480",
    "end": "837000"
  },
  {
    "text": "it's been used internally at at stake for now six months very successfully I'm",
    "start": "837000",
    "end": "843839"
  },
  {
    "text": "pretty confident in saying that 75 to 80 percent of the the applications I have assessed with",
    "start": "843839",
    "end": "852000"
  },
  {
    "text": "combust have rolled over which is a disaster",
    "start": "852000",
    "end": "858980"
  },
  {
    "text": "um combust is a command line tool which hopefully",
    "start": "859380",
    "end": "865800"
  },
  {
    "text": "is self-explanatory I will walk you through the configuration",
    "start": "865800",
    "end": "871680"
  },
  {
    "text": "the output talk a little bit about limits because every tool has its limit",
    "start": "871680",
    "end": "876800"
  },
  {
    "text": "and and about the extensions that I've put into combust to enable it to do more automated stuff",
    "start": "876800",
    "end": "886759"
  },
  {
    "text": "so I mentioned it earlier exercise functions in boundary cases",
    "start": "889079",
    "end": "894480"
  },
  {
    "text": "for example if there's a function through that takes a string what happens if I pass a null string what happens if",
    "start": "894480",
    "end": "900839"
  },
  {
    "text": "I pass a long string a format string",
    "start": "900839",
    "end": "906300"
  },
  {
    "text": "a file name a UNC path Etc",
    "start": "906300",
    "end": "911720"
  },
  {
    "text": "it is based on argument types for a string it will try those types of",
    "start": "911820",
    "end": "917779"
  },
  {
    "text": "values for an integer it will try the boundary integers",
    "start": "917779",
    "end": "924120"
  },
  {
    "text": "Etc so for example in their function Foo takes a string and",
    "start": "924120",
    "end": "930480"
  },
  {
    "text": "a Boolean combustible first try blank string true blank string false",
    "start": "930480",
    "end": "936300"
  },
  {
    "text": "very long string true or Etc you got the idea it gets quickly out of control but",
    "start": "936300",
    "end": "944699"
  },
  {
    "text": "over I've only had a very few instances where it was not doable in a realistic",
    "start": "944699",
    "end": "951899"
  },
  {
    "text": "time to fuzz a whole com object",
    "start": "951899",
    "end": "957320"
  },
  {
    "text": "command line there's two ways to express a",
    "start": "959639",
    "end": "966959"
  },
  {
    "text": "two ways to refer to a com object one is a prog ID which is more human readable",
    "start": "966959",
    "end": "972180"
  },
  {
    "text": "and the other one is the the CLS ID which is the real unique ID for that object",
    "start": "972180",
    "end": "980220"
  },
  {
    "text": "combust can use both minus p and then prog ID for example",
    "start": "980220",
    "end": "985760"
  },
  {
    "text": "msxml2 domdocument.3.0 if you want a specific version of the XML",
    "start": "985760",
    "end": "992839"
  },
  {
    "text": "com object or for the same object if you know the CLS ID then you can type it in hopefully",
    "start": "992839",
    "end": "1001459"
  },
  {
    "text": "you cut in cut and pasted from the registry or from another source takes in a third argument minus F",
    "start": "1001459",
    "end": "1008779"
  },
  {
    "text": "function name let's imagine you want to regression test a single function",
    "start": "1008779",
    "end": "1014779"
  },
  {
    "text": "then you put the function name at the end and it will just fuzz that function let's imagine you",
    "start": "1014779",
    "end": "1022639"
  },
  {
    "text": "want to no I'll go in there later",
    "start": "1022639",
    "end": "1027400"
  },
  {
    "text": "so prog ID and CLS ID are equivalent as long as it's a fully qualified prog",
    "start": "1028059",
    "end": "1034938"
  },
  {
    "text": "ID for example msxml2.dom document would also work",
    "start": "1034939",
    "end": "1040760"
  },
  {
    "text": "but that would go for the latest release or latest version installed on the system uh therefore you're not",
    "start": "1040760",
    "end": "1047720"
  },
  {
    "text": "guaranteed to hit 3.0 in that example where the CLS ID is more unique",
    "start": "1047720",
    "end": "1055059"
  },
  {
    "text": "the configuration file it's an XML document it seems XML is in Vogue lately",
    "start": "1056960",
    "end": "1064100"
  },
  {
    "text": "so I have my xml2 and it has for simplification I name I I assume it",
    "start": "1064100",
    "end": "1072500"
  },
  {
    "text": "is in the local path same name as the current directory and same name as the",
    "start": "1072500",
    "end": "1078020"
  },
  {
    "text": "executable and it has three section in it the application configuration",
    "start": "1078020",
    "end": "1084140"
  },
  {
    "text": "the fuzz values that I mentioned earlier and methods to ignore if there's",
    "start": "1084140",
    "end": "1090500"
  },
  {
    "text": "anything you want to bypass we'll talk a little bit more about those",
    "start": "1090500",
    "end": "1096980"
  },
  {
    "text": "um application configuration currently there's only one element in",
    "start": "1096980",
    "end": "1103580"
  },
  {
    "text": "there that's Max combination you remember I mentioned that",
    "start": "1103580",
    "end": "1109039"
  },
  {
    "text": "it was doing the combinations of all possible values so the more arguments",
    "start": "1109039",
    "end": "1114440"
  },
  {
    "text": "you have to function the worse it becomes",
    "start": "1114440",
    "end": "1119660"
  },
  {
    "text": "some methods have up to 30 variant arguments currently I have 41",
    "start": "1120200",
    "end": "1126500"
  },
  {
    "text": "value possible in my configuration that's quickly out of control not to or",
    "start": "1126500",
    "end": "1134120"
  },
  {
    "text": "to refer to the previous presentation the one function I'm",
    "start": "1134120",
    "end": "1139820"
  },
  {
    "text": "thinking about is actually in Excel and it's called WS function and it takes 32",
    "start": "1139820",
    "end": "1146000"
  },
  {
    "text": "arguments it's undocumented",
    "start": "1146000",
    "end": "1151600"
  },
  {
    "text": "in the future I hope to put more stuff in there such as",
    "start": "1153260",
    "end": "1158480"
  },
  {
    "text": "pretty printing the output controlling it so that it outputs HTML or whatnot",
    "start": "1158480",
    "end": "1164260"
  },
  {
    "text": "controlling recursion a lot of objects have helper methods to",
    "start": "1164260",
    "end": "1170360"
  },
  {
    "text": "give you child objects well combust could actually go in there and",
    "start": "1170360",
    "end": "1175580"
  },
  {
    "text": "recursively hit the child objects so you want to limit the recursion problem and",
    "start": "1175580",
    "end": "1182120"
  },
  {
    "text": "give a maximum number of iterations",
    "start": "1182120",
    "end": "1186440"
  },
  {
    "text": "the second section of of the Excel the XML of the document and what we'll look at a",
    "start": "1191720",
    "end": "1200360"
  },
  {
    "text": "sample of it it might help the second section is",
    "start": "1200360",
    "end": "1205700"
  },
  {
    "text": "the values for each variant a variant is that beautiful concept that",
    "start": "1205700",
    "end": "1212179"
  },
  {
    "text": "Microsoft came up with to untype variables basically a variant can",
    "start": "1212179",
    "end": "1218840"
  },
  {
    "text": "contain any type of variable or any any type of value you might want to think of",
    "start": "1218840",
    "end": "1226940"
  },
  {
    "text": "and therefore in the X in the XML document for every type of variant I",
    "start": "1226940",
    "end": "1234799"
  },
  {
    "text": "have proposed values um",
    "start": "1234799",
    "end": "1240620"
  },
  {
    "text": "so in the example there vtbstr is for",
    "start": "1240620",
    "end": "1245840"
  },
  {
    "text": "the C programmers a string and the first",
    "start": "1245840",
    "end": "1251299"
  },
  {
    "text": "the first line is labeled path and is a string",
    "start": "1251299",
    "end": "1257059"
  },
  {
    "text": "and contains question mark backslash backslash",
    "start": "1257059",
    "end": "1262160"
  },
  {
    "text": "question mark slash C Colin backslash no there's no yeah backslash fuzz DOT log",
    "start": "1262160",
    "end": "1269480"
  },
  {
    "text": "Etc you can note that the second value has a modifier called count equals four",
    "start": "1269480",
    "end": "1276320"
  },
  {
    "text": "thousand that's the lazy me not wanting to type 4000 A's",
    "start": "1276320",
    "end": "1282860"
  },
  {
    "text": "and just have combust automatically generate those for me",
    "start": "1282860",
    "end": "1289299"
  },
  {
    "text": "um you might want to be careful about what you put in there originally I had",
    "start": "1289640",
    "end": "1294919"
  },
  {
    "text": "put C column back slash autoexec dot bath bat and quickly after come fuzzing",
    "start": "1294919",
    "end": "1301520"
  },
  {
    "text": "a couple of uh objects I ended up with garbage in my auto exec.bat luckily that",
    "start": "1301520",
    "end": "1308480"
  },
  {
    "text": "was not that important but that served as a lesson",
    "start": "1308480",
    "end": "1313539"
  },
  {
    "text": "the ignore section that's the third section of the XML file",
    "start": "1315860",
    "end": "1321039"
  },
  {
    "text": "some methods are com framework methods ad ref release",
    "start": "1321200",
    "end": "1329360"
  },
  {
    "text": "are for example methods you don't want to call first because otherwise the com",
    "start": "1329360",
    "end": "1334580"
  },
  {
    "text": "object just goes away other methods are",
    "start": "1334580",
    "end": "1341500"
  },
  {
    "text": "crashing or behave badly so you want to avoid them so that you can get to the",
    "start": "1344320",
    "end": "1350780"
  },
  {
    "text": "rest of the com object and then finally some of them don't make sense to be",
    "start": "1350780",
    "end": "1355880"
  },
  {
    "text": "called First clothes for example in the case of an XML document object pretty quickly stops",
    "start": "1355880",
    "end": "1365059"
  },
  {
    "text": "your fuzzing session it can be a in a method to be ignored",
    "start": "1365059",
    "end": "1371659"
  },
  {
    "text": "can be expressed in two ways just a generic function name",
    "start": "1371659",
    "end": "1376940"
  },
  {
    "text": "and that will ignore it across all com objects that you can fuzz so for example",
    "start": "1376940",
    "end": "1383500"
  },
  {
    "text": "adref and release are two methods that you want to avoid",
    "start": "1383500",
    "end": "1389260"
  },
  {
    "text": "on any objects and then if you want to avoid a specific method for a specific object then you",
    "start": "1389260",
    "end": "1396260"
  },
  {
    "text": "have the format prog ID function name and in the example I gave my prog ID",
    "start": "1396260",
    "end": "1401539"
  },
  {
    "text": "column My Method will be ignored only when you're fuzzing my prog ID",
    "start": "1401539",
    "end": "1408140"
  },
  {
    "text": "for the method my method um the way I implemented the ignore list is",
    "start": "1408140",
    "end": "1416539"
  },
  {
    "text": "a pretty basic string comparison unfortunately this is not enough to fully qualify",
    "start": "1416539",
    "end": "1424220"
  },
  {
    "text": "a function methods can be gets or puts",
    "start": "1424220",
    "end": "1430520"
  },
  {
    "text": "for example and have the same name so get my",
    "start": "1430520",
    "end": "1435620"
  },
  {
    "text": "my value and put my value both are called my value but there are two different functions",
    "start": "1435620",
    "end": "1444158"
  },
  {
    "text": "in the current implementation combust will ignore both if you put my value to",
    "start": "1444620",
    "end": "1450380"
  },
  {
    "text": "be ignored in the ignore list",
    "start": "1450380",
    "end": "1454059"
  },
  {
    "text": "so now we're moving on to the output and hopefully my amazing PowerPoint skills",
    "start": "1458240",
    "end": "1467900"
  },
  {
    "text": "will impress you and you can still read the content um so combust will execute in roughly two",
    "start": "1467900",
    "end": "1477220"
  },
  {
    "text": "sections the first part the header and then there's the actual fuzzing of the functions",
    "start": "1477220",
    "end": "1484700"
  },
  {
    "text": "the header will tell you stuff such as what's the prog ID or what's the CLS ID",
    "start": "1484700",
    "end": "1490100"
  },
  {
    "text": "for the object you requested so I requested combust combuster run on a specific CLS",
    "start": "1490100",
    "end": "1497539"
  },
  {
    "text": "ID it will tell me what it thinks the prog ID is or reverse",
    "start": "1497539",
    "end": "1505158"
  },
  {
    "text": "it will return also the associated help and information",
    "start": "1505280",
    "end": "1510799"
  },
  {
    "text": "that's embedded in the com object such as help file description",
    "start": "1510799",
    "end": "1516880"
  },
  {
    "text": "name of the the com object number of functions implemented",
    "start": "1516880",
    "end": "1522620"
  },
  {
    "text": "is another example of content that it that the com object has stored in it",
    "start": "1522620",
    "end": "1530440"
  },
  {
    "text": "then it goes into the second part which is enumerating all methods that are accessible so",
    "start": "1530480",
    "end": "1539000"
  },
  {
    "text": "right there for each method it can find it says is it a function is it not a",
    "start": "1539000",
    "end": "1544820"
  },
  {
    "text": "function what's the signature of the function so for example the first one at the top void query interface takes in a",
    "start": "1544820",
    "end": "1552440"
  },
  {
    "text": "PTR a pointer and something else uh so for each function it will go through creating the signature of the",
    "start": "1552440",
    "end": "1559760"
  },
  {
    "text": "method if the com object has Associated help with that method it will also display",
    "start": "1559760",
    "end": "1567080"
  },
  {
    "text": "for example the second one register and on transform mode event handler",
    "start": "1567080",
    "end": "1573440"
  },
  {
    "text": "and it will go through all the methods it can find at the end it will come up",
    "start": "1573440",
    "end": "1578659"
  },
  {
    "text": "with a number of combinations it's expecting to test in that case 1985",
    "start": "1578659",
    "end": "1584500"
  },
  {
    "text": "reality is it will often combust less than that number there's",
    "start": "1584500",
    "end": "1593120"
  },
  {
    "text": "still some types that are not supported by kamba such as pointers I don't know what to dump into a pointer except for",
    "start": "1593120",
    "end": "1598820"
  },
  {
    "text": "null but for potentially valid values my guess is because as good as yours so",
    "start": "1598820",
    "end": "1606140"
  },
  {
    "text": "it won't actually fuzz that function but it still",
    "start": "1606140",
    "end": "1612140"
  },
  {
    "text": "believes it's going to I know bugs",
    "start": "1612140",
    "end": "1616779"
  },
  {
    "text": "yes sorry",
    "start": "1618020",
    "end": "1620799"
  },
  {
    "text": "you're way ahead if you're in a hurry flip to the end",
    "start": "1627559",
    "end": "1633320"
  },
  {
    "text": "I will so the question what happens if the object expects some initialization uh prior to",
    "start": "1633320",
    "end": "1641299"
  },
  {
    "text": "close being called for example uh I have encountered that pretty quickly and I've",
    "start": "1641299",
    "end": "1647299"
  },
  {
    "text": "added a whole scripting language to it so that you can actually initialize your",
    "start": "1647299",
    "end": "1653179"
  },
  {
    "text": "object before combust actually works on it so we'll talk about",
    "start": "1653179",
    "end": "1659840"
  },
  {
    "text": "that in a few slides",
    "start": "1659840",
    "end": "1664480"
  },
  {
    "text": "the last part of combust is functional fuzzing for each function it will",
    "start": "1667159",
    "end": "1673640"
  },
  {
    "text": "display whatever it's trying in that example the first one ignoring",
    "start": "1673640",
    "end": "1681460"
  },
  {
    "text": "dispatch function invoke invoke is a com framework function there's no need for",
    "start": "1681460",
    "end": "1688700"
  },
  {
    "text": "combust to fuzz it so it's going to ignore it because invoke is in the ignore list of",
    "start": "1688700",
    "end": "1696320"
  },
  {
    "text": "the XML file get bstr node name only returns a value",
    "start": "1696320",
    "end": "1703039"
  },
  {
    "text": "so it displays the value it returns and then put node name and obviously",
    "start": "1703039",
    "end": "1710299"
  },
  {
    "text": "there's a string and it goes in and tries all the string values it can",
    "start": "1710299",
    "end": "1717279"
  },
  {
    "text": "um so that's all nice but what's the value of combust",
    "start": "1720080",
    "end": "1727039"
  },
  {
    "text": "the day this stuff crashes is when you're a winner at the bottom you have",
    "start": "1727039",
    "end": "1733220"
  },
  {
    "text": "an example of Select node with a format string and it returns an exception",
    "start": "1733220",
    "end": "1739480"
  },
  {
    "text": "unexpected character in query string percent s this is a handled exception this means",
    "start": "1739480",
    "end": "1746600"
  },
  {
    "text": "whoever coded this object did a good work at",
    "start": "1746600",
    "end": "1752240"
  },
  {
    "text": "throwing exceptions therefore they're relatively safe",
    "start": "1752240",
    "end": "1758600"
  },
  {
    "text": "and combusters only outputting that",
    "start": "1758600",
    "end": "1763820"
  },
  {
    "text": "for your information use it might help you build another attack on that object",
    "start": "1763820",
    "end": "1768919"
  },
  {
    "text": "but usually if it's of limited value",
    "start": "1768919",
    "end": "1772960"
  },
  {
    "text": "so what you want to happen is for combust to crash I know it's the sign of a buggy program",
    "start": "1774860",
    "end": "1780980"
  },
  {
    "text": "but usually it's not my fault it's usually the calm object that you're fuzzing",
    "start": "1780980",
    "end": "1787340"
  },
  {
    "text": "um when combust crashes it's probably a buffer overflow",
    "start": "1787340",
    "end": "1793399"
  },
  {
    "text": "or at least a Dos potential unfortunately in a few cases it is",
    "start": "1793399",
    "end": "1799279"
  },
  {
    "text": "combust crashing on its own there's a bug in the code I don't believe there are any but",
    "start": "1799279",
    "end": "1805640"
  },
  {
    "text": "until this tool is out there in the public I only have limited feedback",
    "start": "1805640",
    "end": "1812980"
  },
  {
    "text": "other signs of trouble a non-cod exception dialogue if you're",
    "start": "1815299",
    "end": "1821419"
  },
  {
    "text": "in a development environment you'll have a nice debugger pop-up that will tell you there's something going on",
    "start": "1821419",
    "end": "1829898"
  },
  {
    "text": "if um combust attempts to catch",
    "start": "1830240",
    "end": "1836600"
  },
  {
    "text": "uncaught exceptions and crashes it doesn't do a perfect job but sometimes it does catch",
    "start": "1836600",
    "end": "1843500"
  },
  {
    "text": "Target objects crashing and then it will log in the in the output window crash",
    "start": "1843500",
    "end": "1849919"
  },
  {
    "text": "and so usually the way I use it is I launch combust to it to a Target file",
    "start": "1849919",
    "end": "1856580"
  },
  {
    "text": "and then grab through that file for crash also another",
    "start": "1856580",
    "end": "1863020"
  },
  {
    "text": "behavior that the demo is going to show is combust",
    "start": "1863020",
    "end": "1868520"
  },
  {
    "text": "actually just stops it freezes and",
    "start": "1868520",
    "end": "1873620"
  },
  {
    "text": "in the process of freezing a lot of the time the output is truncated so it's it just stops there at one point",
    "start": "1873620",
    "end": "1881899"
  },
  {
    "text": "and there's no longer any characters being outputted that's a third sign the",
    "start": "1881899",
    "end": "1887419"
  },
  {
    "text": "picture on the right is actually unrelated to combust crashing it's",
    "start": "1887419",
    "end": "1893120"
  },
  {
    "text": "related to hard drive pollution that was I believe executing the XML",
    "start": "1893120",
    "end": "1899419"
  },
  {
    "text": "document object it has a save function and so every time I would call a save with one of my very variable values it",
    "start": "1899419",
    "end": "1908120"
  },
  {
    "text": "would create a file in my file system so that's another thing to look at okay what can I do to the remote file system",
    "start": "1908120",
    "end": "1914840"
  },
  {
    "text": "with the functionality that that com object provides other",
    "start": "1914840",
    "end": "1921679"
  },
  {
    "text": "behaviors I've noticed registry pollution some comma objects go to the registry or",
    "start": "1921679",
    "end": "1928340"
  },
  {
    "text": "actually provide you with a with an interface to hit the registry",
    "start": "1928340",
    "end": "1933440"
  },
  {
    "text": "there's another thing to look for security tokens that's",
    "start": "1933440",
    "end": "1938600"
  },
  {
    "text": "something that you can use other tools such as system CIS internals tools to actually monitor the environment while",
    "start": "1938600",
    "end": "1945500"
  },
  {
    "text": "you combust and find out what's going on",
    "start": "1945500",
    "end": "1951760"
  },
  {
    "text": "so keep in mind that when it crashes it's not combust faults I don't want to blame please it's the target object's",
    "start": "1956120",
    "end": "1962899"
  },
  {
    "text": "faults most of the time yes",
    "start": "1962899",
    "end": "1969340"
  },
  {
    "text": "basically that's why you you pipe to file when you execute it and then you",
    "start": "1972260",
    "end": "1977899"
  },
  {
    "text": "see wherever it stops it's not ideal but I haven't found a way",
    "start": "1977899",
    "end": "1983120"
  },
  {
    "text": "to capture all crashes reliably some of them I do catch them and then I output",
    "start": "1983120",
    "end": "1988880"
  },
  {
    "text": "crash into the into the output file but I have",
    "start": "1988880",
    "end": "1994039"
  },
  {
    "text": "to admit that a lot of them it's just freezes or it just stops",
    "start": "1994039",
    "end": "2001120"
  },
  {
    "text": "so that's why at the beginning of a of the if I go back",
    "start": "2001120",
    "end": "2008100"
  },
  {
    "text": "at the beginning of each run I put all those those lines of stars",
    "start": "2009580",
    "end": "2017140"
  },
  {
    "text": "and at the end I also have that so when I have when I combust multiple objects",
    "start": "2017140",
    "end": "2022419"
  },
  {
    "text": "to a file and and pipe the the output to file I just then search for those stars and see",
    "start": "2022419",
    "end": "2029919"
  },
  {
    "text": "whatever is above it if there's a crash perfect if the output looks truncated",
    "start": "2029919",
    "end": "2036700"
  },
  {
    "text": "that's another sign if it looks like it ended on the last function that it was supposed to then it's probably good",
    "start": "2036700",
    "end": "2045240"
  },
  {
    "text": "admire my PowerPoint skills nobody else had some beautiful",
    "start": "2051040",
    "end": "2057220"
  },
  {
    "text": "pictures as I have shortfalls only I dispatch objects can be",
    "start": "2057220",
    "end": "2065138"
  },
  {
    "text": "combusted this is a subset of all com objects",
    "start": "2065139",
    "end": "2072060"
  },
  {
    "text": "I'm working on some ideas on how to fuzz non-i-dispatch based objects but",
    "start": "2072159",
    "end": "2079060"
  },
  {
    "text": "currently that's the limit we have it also caught",
    "start": "2079060",
    "end": "2086220"
  },
  {
    "text": "combust objects that have expectations about the caller for",
    "start": "2086260",
    "end": "2091599"
  },
  {
    "text": "example if you're familiar with site lock or safe for scripting",
    "start": "2091599",
    "end": "2096940"
  },
  {
    "text": "those are interfaces that are expected from from whoever's hosting the comma object",
    "start": "2096940",
    "end": "2105160"
  },
  {
    "text": "I.E in in that instance and so the com object actually sends some calls back to",
    "start": "2105160",
    "end": "2112960"
  },
  {
    "text": "the hosting application expecting some responses that's the kind of thing I'm not doing right now",
    "start": "2112960",
    "end": "2120960"
  },
  {
    "text": "variance I mentioned earlier the the pointer issue there are other variants",
    "start": "2121140",
    "end": "2126520"
  },
  {
    "text": "that I have not yet implemented user-defined variants there's just",
    "start": "2126520",
    "end": "2132940"
  },
  {
    "text": "nothing I can do there at this point maybe in the future a format to express",
    "start": "2132940",
    "end": "2138099"
  },
  {
    "text": "structures eraser another limit that I have not",
    "start": "2138099",
    "end": "2146020"
  },
  {
    "text": "um implemented support for arrays of strings arrays of objects Etc",
    "start": "2146020",
    "end": "2152859"
  },
  {
    "text": "and the last one which is probably the the biggest limitation right now is the",
    "start": "2152859",
    "end": "2160119"
  },
  {
    "text": "string length is limited to roughly 20 000 characters",
    "start": "2160119",
    "end": "2166240"
  },
  {
    "text": "and uh is that twenty thousand yeah twenty thousand characters",
    "start": "2166240",
    "end": "2172000"
  },
  {
    "text": "I I'm not sure why at this point I'm working on on a fix on that and that's probably going to be the first fix",
    "start": "2172000",
    "end": "2177460"
  },
  {
    "text": "because a lot of objects actually start rolling over in the 40K range of string",
    "start": "2177460",
    "end": "2185920"
  },
  {
    "text": "length the last one yeah once you have a crash",
    "start": "2185920",
    "end": "2194500"
  },
  {
    "text": "double check it's it's very easy to write a little piece of VB script or whatnot to",
    "start": "2194500",
    "end": "2202900"
  },
  {
    "text": "replicate that crash so just double check combust findings",
    "start": "2202900",
    "end": "2209140"
  },
  {
    "text": "and hopefully it will not lie to you if it does then submit bugs to me",
    "start": "2209140",
    "end": "2217740"
  },
  {
    "text": "so I mentioned that earlier again another beautiful image that I'm",
    "start": "2220780",
    "end": "2226960"
  },
  {
    "text": "proud of it took me a long time to find it um executed your own risk I've corrupted an",
    "start": "2226960",
    "end": "2234520"
  },
  {
    "text": "OS after running uh combust for a few days on it",
    "start": "2234520",
    "end": "2240839"
  },
  {
    "text": "creating overriding files putting garbage in your registry uh",
    "start": "2240839",
    "end": "2247859"
  },
  {
    "text": "deconfiguring applications or configuring them but would wrong configuration information the best",
    "start": "2247859",
    "end": "2256060"
  },
  {
    "text": "way I've found to run it right now is in VM just run it on a dedicated image and",
    "start": "2256060",
    "end": "2263980"
  },
  {
    "text": "then do forensic analysis on that image after execution and throw it away and start",
    "start": "2263980",
    "end": "2270099"
  },
  {
    "text": "over on the next engagement that's probably the safer if you like living on",
    "start": "2270099",
    "end": "2275560"
  },
  {
    "text": "the wild side as I do you be my guest run it on your main OS",
    "start": "2275560",
    "end": "2280900"
  },
  {
    "text": "but expect to reinstall every other month or so",
    "start": "2280900",
    "end": "2285960"
  },
  {
    "text": "Advanced usage this is where we're going to talk about scripting in combust this",
    "start": "2289720",
    "end": "2295180"
  },
  {
    "text": "is the minus s switch which then enables",
    "start": "2295180",
    "end": "2300339"
  },
  {
    "text": "execution of scripts scripts can be in VB script or jscript depending on the",
    "start": "2300339",
    "end": "2308859"
  },
  {
    "text": "extension that's how I detect which which scripting engine to launch um",
    "start": "2308859",
    "end": "2315280"
  },
  {
    "text": "currently you can not easily debug your scripts so the best way to do it is put",
    "start": "2315280",
    "end": "2321640"
  },
  {
    "text": "alerts in them I'm hoping that in the next version I can hook in the debugger",
    "start": "2321640",
    "end": "2326740"
  },
  {
    "text": "so that you can actually step through the debugger in your script and and find",
    "start": "2326740",
    "end": "2331780"
  },
  {
    "text": "out what's going on if it's not working as you would like it to",
    "start": "2331780",
    "end": "2339059"
  },
  {
    "text": "um vbscript versus jscript absolutely zero difference they both have the same",
    "start": "2339400",
    "end": "2345099"
  },
  {
    "text": "functionality it's only a question of preference whatever language works better for you",
    "start": "2345099",
    "end": "2350500"
  },
  {
    "text": "if you like semicolons or not it relatively easy language to pick up on",
    "start": "2350500",
    "end": "2357660"
  },
  {
    "text": "so what what does the scripting extension add",
    "start": "2357660",
    "end": "2363160"
  },
  {
    "text": "three entry points new objects that is where you want to create an object",
    "start": "2363160",
    "end": "2371980"
  },
  {
    "text": "but you can't create an instance of that object directly you need to go through a",
    "start": "2371980",
    "end": "2377079"
  },
  {
    "text": "helper function or a helper object examples off the top of my head I can't think of",
    "start": "2377079",
    "end": "2383560"
  },
  {
    "text": "an example of a an object that's non-creatable but I guarantee you there are tons of them out there it's one of",
    "start": "2383560",
    "end": "2389920"
  },
  {
    "text": "the first line of defenses a logical child object does not need to",
    "start": "2389920",
    "end": "2395619"
  },
  {
    "text": "be instantiated on its own therefore you go through that trick implement the",
    "start": "2395619",
    "end": "2400900"
  },
  {
    "text": "function called new object in your scripting file and instantiate the main object in that",
    "start": "2400900",
    "end": "2409900"
  },
  {
    "text": "case my prog id1 and then use its helper function to",
    "start": "2409900",
    "end": "2416140"
  },
  {
    "text": "retrieve the child object in that case a DOT get child object",
    "start": "2416140",
    "end": "2421599"
  },
  {
    "text": "and then return that as a result of that new object function call",
    "start": "2421599",
    "end": "2427240"
  },
  {
    "text": "does that make sense I've lost most of you",
    "start": "2427240",
    "end": "2432400"
  },
  {
    "text": "okay I'll just pretend it's fine sing",
    "start": "2432400",
    "end": "2439000"
  },
  {
    "text": "second one finalize um I was trying to at one point I was",
    "start": "2439000",
    "end": "2446079"
  },
  {
    "text": "trying to look at Microsoft's mail object or Outlook mail objects so I",
    "start": "2446079",
    "end": "2452320"
  },
  {
    "text": "could create an instance of a male object that I was really happy I could fuzz all of the functions it was great",
    "start": "2452320",
    "end": "2458740"
  },
  {
    "text": "but what I really wanted to do was see if I could send some emails or things like that but I couldn't Force combust",
    "start": "2458740",
    "end": "2466240"
  },
  {
    "text": "to call the save or the send function once it was done",
    "start": "2466240",
    "end": "2471579"
  },
  {
    "text": "fuzzing the objects so I wrote that second extension if you implement",
    "start": "2471579",
    "end": "2476859"
  },
  {
    "text": "finalize in your script file then once it's done fuzzing the object it will",
    "start": "2476859",
    "end": "2484300"
  },
  {
    "text": "call your function and there you can do passing in the object that it has fuzzed",
    "start": "2484300",
    "end": "2489820"
  },
  {
    "text": "and there you can do whatever it pleases you in that example saving it in others",
    "start": "2489820",
    "end": "2496720"
  },
  {
    "text": "sending it for example what not the the functionality that was",
    "start": "2496720",
    "end": "2501760"
  },
  {
    "text": "built into that object or Suite of objects is callable at that point",
    "start": "2501760",
    "end": "2507940"
  },
  {
    "text": "the third one is a way to get around the limitation of initializing an object",
    "start": "2507940",
    "end": "2515940"
  },
  {
    "text": "for example the XML object in in Microsoft's XML object",
    "start": "2515940",
    "end": "2523240"
  },
  {
    "text": "has limited value until you load or properly create an XML file",
    "start": "2523240",
    "end": "2529140"
  },
  {
    "text": "therefore combust you can call combust and tell it",
    "start": "2529140",
    "end": "2534760"
  },
  {
    "text": "combust that XML object but call my function initialize before you actually",
    "start": "2534760",
    "end": "2541839"
  },
  {
    "text": "start and once combust has created that object it will immediately call",
    "start": "2541839",
    "end": "2547420"
  },
  {
    "text": "initialize and then you can do whatever you want with it in that example loading",
    "start": "2547420",
    "end": "2552460"
  },
  {
    "text": "test.xml you don't have to implement those functions you can only Implement one if",
    "start": "2552460",
    "end": "2558400"
  },
  {
    "text": "you're interested in only one function in those three or n in the future I'm",
    "start": "2558400",
    "end": "2565180"
  },
  {
    "text": "hoping to add some more other enhancements I'm considering and",
    "start": "2565180",
    "end": "2572200"
  },
  {
    "text": "oh go ahead",
    "start": "2572200",
    "end": "2575520"
  },
  {
    "text": "okay so the question is I very well know that food crashes with",
    "start": "2602380",
    "end": "2607660"
  },
  {
    "text": "an empty string but the application that is legally or or the",
    "start": "2607660",
    "end": "2615940"
  },
  {
    "text": "um of the the not authenticated but the user of that application the other hosting",
    "start": "2615940",
    "end": "2623079"
  },
  {
    "text": "application that I wrote does not actually generate that function so I should not be concerned because both the",
    "start": "2623079",
    "end": "2629800"
  },
  {
    "text": "com object and the hosting object I control and I'm never calling that com",
    "start": "2629800",
    "end": "2636160"
  },
  {
    "text": "object with that invalid argument is that the question",
    "start": "2636160",
    "end": "2642000"
  },
  {
    "text": "so okay so how about your name being",
    "start": "2642280",
    "end": "2649420"
  },
  {
    "text": "associated to a buffer overflow and a remote execution is that motivation",
    "start": "2649420",
    "end": "2656560"
  },
  {
    "text": "enough to not have that vulnerability and that com object",
    "start": "2656560",
    "end": "2662700"
  },
  {
    "text": "okay so the suggestion is that the faulty",
    "start": "2671020",
    "end": "2676839"
  },
  {
    "text": "application is the application that hosts that object",
    "start": "2676839",
    "end": "2681480"
  },
  {
    "text": "to some extent I agree with you but unfortunately it's a reality that the",
    "start": "2682780",
    "end": "2688359"
  },
  {
    "text": "functionality of that object provides is faulty it has a flaw in it and second",
    "start": "2688359",
    "end": "2694680"
  },
  {
    "text": "you have very limited control on who can call that object",
    "start": "2694680",
    "end": "2700060"
  },
  {
    "text": "once you have a com object registered on a machine anybody",
    "start": "2700060",
    "end": "2706119"
  },
  {
    "text": "can call that object and crash it therefore exploit your",
    "start": "2706119",
    "end": "2713400"
  },
  {
    "text": "functionality to take over that machine I agree with you that in a closed",
    "start": "2713400",
    "end": "2719920"
  },
  {
    "text": "environment it's probably not a case that you would care about because you control both the client and",
    "start": "2719920",
    "end": "2726819"
  },
  {
    "text": "the server part but in the case in the way com has been",
    "start": "2726819",
    "end": "2732000"
  },
  {
    "text": "written you can't control who's calling you so a rogue application could force",
    "start": "2732000",
    "end": "2739000"
  },
  {
    "text": "that invalid case onto that com object and then it's very easy to point the",
    "start": "2739000",
    "end": "2746859"
  },
  {
    "text": "finger to whoever implemented that com object versus the hosting environment",
    "start": "2746859",
    "end": "2753880"
  },
  {
    "text": "which might be I.E or might be Outlook in that case they're only the messenger",
    "start": "2753880",
    "end": "2761740"
  },
  {
    "text": "they're the transport layer for the vulnerability that actually happens in",
    "start": "2761740",
    "end": "2767440"
  },
  {
    "text": "the com object to your point the com object is actually running under I.E or Outlook if it's an",
    "start": "2767440",
    "end": "2775060"
  },
  {
    "text": "in-proc object therefore it looks like it's only ie's fault",
    "start": "2775060",
    "end": "2780880"
  },
  {
    "text": "IE is going to defend themselves Microsoft is going to defend themselves by saying yeah that's not really us",
    "start": "2780880",
    "end": "2788079"
  },
  {
    "text": "that's them so I",
    "start": "2788079",
    "end": "2793480"
  },
  {
    "text": "the type of vulnerability combust currently finds are well known by forever flows",
    "start": "2793480",
    "end": "2802740"
  },
  {
    "text": "at this point buffer overflows have been talked about for quite a few years they're very easy to mitigate it's just",
    "start": "2802780",
    "end": "2811540"
  },
  {
    "text": "as well easier to mitigate them and not have a PR or nightmare or anything like that",
    "start": "2811540",
    "end": "2818040"
  },
  {
    "text": "does that answer your question",
    "start": "2818140",
    "end": "2821338"
  },
  {
    "text": "wasn't Microsoft on the fire a few weeks months ago about a kernel API call with",
    "start": "2832119",
    "end": "2840040"
  },
  {
    "text": "a path long path that was crashing in the kernel",
    "start": "2840040",
    "end": "2846480"
  },
  {
    "text": "yeah so it seems that those types of vulnerabilities are no it doesn't seem",
    "start": "2865300",
    "end": "2872140"
  },
  {
    "text": "like it is a fact that it's really easy to fix a buffer overflow it is a fact that we as coders should absolutely have",
    "start": "2872140",
    "end": "2879099"
  },
  {
    "text": "zero buffer overflows in in our code there's no excuse for that um",
    "start": "2879099",
    "end": "2884380"
  },
  {
    "text": "QA should do a better job of catching those before our code gets out",
    "start": "2884380",
    "end": "2890500"
  },
  {
    "text": "it's it's the responsibility of whoever coded that object to make sure",
    "start": "2890500",
    "end": "2896980"
  },
  {
    "text": "it doesn't have that kind of vulnerability hopefully combust will be used as a",
    "start": "2896980",
    "end": "2902500"
  },
  {
    "text": "regression tool to make sure com objects don't get out of",
    "start": "2902500",
    "end": "2908440"
  },
  {
    "text": "the door with that kind of stuff other enhancements",
    "start": "2908440",
    "end": "2914740"
  },
  {
    "text": "I mentioned recursivity child object if if combust finds a method that returns a",
    "start": "2914740",
    "end": "2921520"
  },
  {
    "text": "a night dispatch object why not just go in there and fuzz the hell out of that one too",
    "start": "2921520",
    "end": "2928119"
  },
  {
    "text": "a UI point-and-click would be so nice at this point I was concentrating more on the",
    "start": "2928119",
    "end": "2934660"
  },
  {
    "text": "engine because that's the important part and UI work is usually a lot more work than",
    "start": "2934660",
    "end": "2941500"
  },
  {
    "text": "than it's worth output format you might have noticed and you will",
    "start": "2941500",
    "end": "2948220"
  },
  {
    "text": "definitely notice that the output format is really not user friendly it does the job I needed to do but it would be nice",
    "start": "2948220",
    "end": "2955359"
  },
  {
    "text": "to have it have more of a reporting type of format HTML so to pretty print it",
    "start": "2955359",
    "end": "2963000"
  },
  {
    "text": "comma separated values or XML to to be able to work on that data",
    "start": "2963000",
    "end": "2970060"
  },
  {
    "text": "more scripting support um variants that change value based on a",
    "start": "2970060",
    "end": "2976180"
  },
  {
    "text": "script instead of having hard-coded constants scriptable combust objects so using",
    "start": "2976180",
    "end": "2982720"
  },
  {
    "text": "combust as an object within your scripts I Envision that kind of usage for",
    "start": "2982720",
    "end": "2989560"
  },
  {
    "text": "regression testing where you would script your regression test and actually instruct combust what object to go for",
    "start": "2989560",
    "end": "2996640"
  },
  {
    "text": "and what method to actually hit with what kind of value or find out what",
    "start": "2996640",
    "end": "3001980"
  },
  {
    "text": "status combust is in at a given time I mentioned support for I unknown that",
    "start": "3001980",
    "end": "3009180"
  },
  {
    "text": "would be really great because that would mean a hundred percent of all com objects would be combustible",
    "start": "3009180",
    "end": "3015960"
  },
  {
    "text": "autoscript HTML generation right now when you find a vulnerability you have",
    "start": "3015960",
    "end": "3021480"
  },
  {
    "text": "to write your little piece of JavaScript as I showed earlier there's not much work to do to automate that the issue I",
    "start": "3021480",
    "end": "3029220"
  },
  {
    "text": "have with it right now is that instead of being a QA tool it transforms combust into an attack tool",
    "start": "3029220",
    "end": "3039020"
  },
  {
    "text": "I'm not sure I'm ready to cross that line yet another example of functionality that I",
    "start": "3039240",
    "end": "3046560"
  },
  {
    "text": "don't think I'm ready to cross yet is dcom combust could remotely combust objects",
    "start": "3046560",
    "end": "3052980"
  },
  {
    "text": "through dcom the in a testing environment",
    "start": "3052980",
    "end": "3059720"
  },
  {
    "text": "the advantage is very limited in an attack environment it clearly becomes a script Kitty tool",
    "start": "3059940",
    "end": "3066619"
  },
  {
    "text": "so I don't think I will add that to it if you need to combust a dcom reachable",
    "start": "3066619",
    "end": "3073260"
  },
  {
    "text": "object you probably have access locally to that dcom object combusted locally",
    "start": "3073260",
    "end": "3082220"
  },
  {
    "text": "um any suggestions feel free to send them to me I I want that tool to be useful and I want it to be used because",
    "start": "3082500",
    "end": "3089280"
  },
  {
    "text": "I I really truly believe there is a place for it in a QA cycle of a software",
    "start": "3089280",
    "end": "3096480"
  },
  {
    "text": "development life cycle",
    "start": "3096480",
    "end": "3099859"
  },
  {
    "text": "okay I'm not sure the first part I'm not sure we'll try to have some fun",
    "start": "3102180",
    "end": "3108359"
  },
  {
    "text": "but um I won't guarantee the results",
    "start": "3108359",
    "end": "3114660"
  },
  {
    "text": "so a little bit of switching again",
    "start": "3114660",
    "end": "3118700"
  },
  {
    "text": "okay now first let's look at the XML file",
    "start": "3129900",
    "end": "3137780"
  },
  {
    "text": "you remember the config section there it is Max combinations a thousand",
    "start": "3138240",
    "end": "3144200"
  },
  {
    "text": "very rarely do you hit methods that require more than a",
    "start": "3144200",
    "end": "3151380"
  },
  {
    "text": "thousand calls to cover all the arguments uh so empirically that has",
    "start": "3151380",
    "end": "3157740"
  },
  {
    "text": "been my threshold your threshold may vary the second part fuzz",
    "start": "3157740",
    "end": "3164339"
  },
  {
    "text": "now the third part ignore so we'll cover the second part fuzz here",
    "start": "3164339",
    "end": "3170040"
  },
  {
    "text": "are all the variants that I had I am attempting to support the string we talked about it",
    "start": "3170040",
    "end": "3176520"
  },
  {
    "text": "and hopefully yes my mouse is moving with me so the string here are sample values that I have put",
    "start": "3176520",
    "end": "3183300"
  },
  {
    "text": "in there an empty string a local file",
    "start": "3183300",
    "end": "3188880"
  },
  {
    "text": "another file a long string a longer string a format string a URL",
    "start": "3188880",
    "end": "3198000"
  },
  {
    "text": "or an axe hoping in some instances to spawn new processes which would be very",
    "start": "3198000",
    "end": "3205020"
  },
  {
    "text": "useful one won't go down every of them I will",
    "start": "3205020",
    "end": "3210300"
  },
  {
    "text": "just make a note that the variant type is oops",
    "start": "3210300",
    "end": "3216540"
  },
  {
    "text": "a generic version some developers thinking they might make the",
    "start": "3216540",
    "end": "3222420"
  },
  {
    "text": "life of their com object consumers a little easier have not typed their arguments instead",
    "start": "3222420",
    "end": "3229619"
  },
  {
    "text": "of saying I expect a string or I expect better I expect an integer they they",
    "start": "3229619",
    "end": "3235260"
  },
  {
    "text": "just say I can take anything give me anything and then they attempt success more or less",
    "start": "3235260",
    "end": "3241380"
  },
  {
    "text": "successfully to convert that anything to an integer so in that case variant is actually just",
    "start": "3241380",
    "end": "3249300"
  },
  {
    "text": "a cut and paste of all of the other types that's why it's rather long and",
    "start": "3249300",
    "end": "3254460"
  },
  {
    "text": "you can see that the strings are there the integers",
    "start": "3254460",
    "end": "3259760"
  },
  {
    "text": "the dates the floats",
    "start": "3260339",
    "end": "3265800"
  },
  {
    "text": "Etc the last section the ignore section",
    "start": "3265800",
    "end": "3272400"
  },
  {
    "text": "those actually all of those are the com",
    "start": "3272400",
    "end": "3279420"
  },
  {
    "text": "framework methods that you probably and I would suggest you do stay",
    "start": "3279420",
    "end": "3284880"
  },
  {
    "text": "away from because calling those in the wrong order usually yields results such",
    "start": "3284880",
    "end": "3290460"
  },
  {
    "text": "as terminating your com object a little earlier than you would you would have liked to so that's why they're by default in",
    "start": "3290460",
    "end": "3297540"
  },
  {
    "text": "there but if you want to remove them just remove them and then combust will just start combusting uh release for",
    "start": "3297540",
    "end": "3304319"
  },
  {
    "text": "example or ad ref which might be interesting to see how it handles the reference calendars",
    "start": "3304319",
    "end": "3312059"
  },
  {
    "text": "any questions about the XML file I have a hard time seeing so if you have",
    "start": "3312059",
    "end": "3318780"
  },
  {
    "text": "okay oh one thing",
    "start": "3318780",
    "end": "3324480"
  },
  {
    "text": "the green stuff to ease the conversion from the text",
    "start": "3324480",
    "end": "3330660"
  },
  {
    "text": "expression in the XML file to the variant type",
    "start": "3330660",
    "end": "3336240"
  },
  {
    "text": "such as for example an integer or an unsigned integer there",
    "start": "3336240",
    "end": "3343559"
  },
  {
    "text": "I use a schema that's provided by Microsoft that gives me automatic",
    "start": "3343559",
    "end": "3349319"
  },
  {
    "text": "conversion into the program so in here the value 0 I could have typed anything",
    "start": "3349319",
    "end": "3355020"
  },
  {
    "text": "when it's loaded by combust it will actually try to fit it into a UI one which is an",
    "start": "3355020",
    "end": "3363599"
  },
  {
    "text": "unsigned integer",
    "start": "3363599",
    "end": "3366380"
  },
  {
    "text": "the next thing I wanted to show you oh little",
    "start": "3369059",
    "end": "3375420"
  },
  {
    "text": "marking an ActiveX or a com object safe for scripting so that it doesn't",
    "start": "3375420",
    "end": "3381599"
  },
  {
    "text": "pop up warnings or anything like that is very easy that",
    "start": "3381599",
    "end": "3389339"
  },
  {
    "text": "this here is the class ID of the little sample comma object I wrote that has",
    "start": "3389339",
    "end": "3395040"
  },
  {
    "text": "that function through that buffer overflows you just need to add",
    "start": "3395040",
    "end": "3400319"
  },
  {
    "text": "two lines that are pretty much static and documented mentioning that",
    "start": "3400319",
    "end": "3406619"
  },
  {
    "text": "this object is safe for scripting that's it there are lots of objects that",
    "start": "3406619",
    "end": "3412500"
  },
  {
    "text": "are safe for scripting if you find one that has a vulnerability or a buffer overflow you have a free",
    "start": "3412500",
    "end": "3419579"
  },
  {
    "text": "ride it's pretty much not guaranteed to be installed on all of them but it will execute without popping",
    "start": "3419579",
    "end": "3428099"
  },
  {
    "text": "anything regardless of mostly regardless of the settings of the browser",
    "start": "3428099",
    "end": "3435619"
  },
  {
    "text": "can you guys read there",
    "start": "3441180",
    "end": "3444260"
  },
  {
    "text": "so oops combust",
    "start": "3446520",
    "end": "3452220"
  },
  {
    "text": "the usage we mentioned the prog ID the class ID the function name",
    "start": "3452220",
    "end": "3458780"
  },
  {
    "text": "minus O is a a helper argument I put in",
    "start": "3458780",
    "end": "3463800"
  },
  {
    "text": "there so that that track point is",
    "start": "3463800",
    "end": "3469260"
  },
  {
    "text": "so that it would output a batch file combusting every single",
    "start": "3469260",
    "end": "3474980"
  },
  {
    "text": "method independently when you get into regression testing",
    "start": "3474980",
    "end": "3480839"
  },
  {
    "text": "where you want to actually make sure that every single every single method is",
    "start": "3480839",
    "end": "3485940"
  },
  {
    "text": "appropriately regression tested independently from the rest of the object you probably want to use that",
    "start": "3485940",
    "end": "3492240"
  },
  {
    "text": "kind of batch file um minus E",
    "start": "3492240",
    "end": "3498359"
  },
  {
    "text": "is just enumerate the methods so it doesn't go into fuzzing it actually just",
    "start": "3498359",
    "end": "3505559"
  },
  {
    "text": "lists whatever it can see in that object",
    "start": "3505559",
    "end": "3510380"
  },
  {
    "text": "in minus s we talked a lot about it scripting if you wanted to call one of",
    "start": "3511740",
    "end": "3518220"
  },
  {
    "text": "your functions or all of your functions just include minus s and the file path",
    "start": "3518220",
    "end": "3524040"
  },
  {
    "text": "and then it will look in there for the keywords that we talked about initialize",
    "start": "3524040",
    "end": "3532020"
  },
  {
    "text": "can't remember them anyhow you'll figure it out and if they are implemented then they will call those instead of doing",
    "start": "3532020",
    "end": "3538980"
  },
  {
    "text": "the default functionality or in addition to doing the default functionality",
    "start": "3538980",
    "end": "3545700"
  },
  {
    "text": "yes sir",
    "start": "3545700",
    "end": "3548299"
  },
  {
    "text": "so the question is is there a way to enumerate all the objects that Implement I dispatch uh it's called your two hands",
    "start": "3552480",
    "end": "3559920"
  },
  {
    "text": "you type in going through regedit right now",
    "start": "3559920",
    "end": "3565520"
  },
  {
    "text": "the reason Is So eventually when I implement the",
    "start": "3566040",
    "end": "3571799"
  },
  {
    "text": "GUI I will probably add something like that what makes me not want to implement",
    "start": "3571799",
    "end": "3578880"
  },
  {
    "text": "something like that is that it crosses again the line towards an automated",
    "start": "3578880",
    "end": "3584819"
  },
  {
    "text": "attack tool versus a regression tool or an assessment tool",
    "start": "3584819",
    "end": "3592099"
  },
  {
    "text": "on all projects that I was on that I use combust I knew what the binary at least",
    "start": "3592099",
    "end": "3598500"
  },
  {
    "text": "I had a good idea of what the binaries I was looking at where and it's easy to search in the registry",
    "start": "3598500",
    "end": "3604680"
  },
  {
    "text": "for those binaries and backtrack from there otherwise a lot of cases when you have",
    "start": "3604680",
    "end": "3611220"
  },
  {
    "text": "access to source code you just have a list of all the CLS IDs that's in the source code and you can create from that",
    "start": "3611220",
    "end": "3618119"
  },
  {
    "text": "a batch file does that answer your question so",
    "start": "3618119",
    "end": "3624720"
  },
  {
    "text": "let's try wood dell so I'm not going to demo anything that crashes that was not written by me I'm sorry",
    "start": "3624720",
    "end": "3631819"
  },
  {
    "text": "you can execute combust on your favorite com objects and you'll probably find",
    "start": "3631819",
    "end": "3637079"
  },
  {
    "text": "some stuff but it won't be my fault Excel",
    "start": "3637079",
    "end": "3643500"
  },
  {
    "text": "has an application object so I'm going to combust it by calling",
    "start": "3643500",
    "end": "3650460"
  },
  {
    "text": "combust minus p and the proc ID which is excel.application that's much easier",
    "start": "3650460",
    "end": "3655799"
  },
  {
    "text": "than the CLS ID which I would not be able to tell you off the top of my head",
    "start": "3655799",
    "end": "3662579"
  },
  {
    "text": "oh too fast you remember that section",
    "start": "3662579",
    "end": "3668520"
  },
  {
    "text": "the header section there it tells me that the class ID is this one",
    "start": "3668520",
    "end": "3675780"
  },
  {
    "text": "the help file if you wanted some help is there there's 373 functions",
    "start": "3675780",
    "end": "3683160"
  },
  {
    "text": "and now we go into the second section which is what are those functions and so it",
    "start": "3683160",
    "end": "3689339"
  },
  {
    "text": "recreates the signature of all the functions and we can go there note",
    "start": "3689339",
    "end": "3695460"
  },
  {
    "text": "intersect takes in 30 arguments that are variance",
    "start": "3695460",
    "end": "3700500"
  },
  {
    "text": "a little bit too many combinations there but there's tons of them when you have",
    "start": "3700500",
    "end": "3706020"
  },
  {
    "text": "time look at them there's some interesting ones uh",
    "start": "3706020",
    "end": "3711200"
  },
  {
    "text": "okay it went into the second part of the execution if I can find the",
    "start": "3711540",
    "end": "3716819"
  },
  {
    "text": "beginning yeah there so decided it was going to oops it was going to test thirty thousand",
    "start": "3716819",
    "end": "3723900"
  },
  {
    "text": "combinations and I can tell you obviously this one",
    "start": "3723900",
    "end": "3729059"
  },
  {
    "text": "there it's not going to test this one there is not going to be tested for two reasons one it's a pointer so I don't",
    "start": "3729059",
    "end": "3736200"
  },
  {
    "text": "know what to do with it the other part it's it's a get so you can only do one calling it",
    "start": "3736200",
    "end": "3742140"
  },
  {
    "text": "um and then it goes into the combustion part the first",
    "start": "3742140",
    "end": "3748440"
  },
  {
    "text": "functions are usually the the com framework functions they're ignored there because in the XML",
    "start": "3748440",
    "end": "3755220"
  },
  {
    "text": "file it instructed to be ignored and then it just calls the functions in the",
    "start": "3755220",
    "end": "3761099"
  },
  {
    "text": "order they were enumerated the first one was get application pointer it returns a",
    "start": "3761099",
    "end": "3766619"
  },
  {
    "text": "pointer it doesn't know how to display it doesn't know what to do with it that's it the second one was a user",
    "start": "3766619",
    "end": "3772859"
  },
  {
    "text": "defined variant which typically contains a structure that's defined by whoever",
    "start": "3772859",
    "end": "3778380"
  },
  {
    "text": "created that com object currently I don't know how to explode that",
    "start": "3778380",
    "end": "3783960"
  },
  {
    "text": "object so I'm doing nothing with it",
    "start": "3783960",
    "end": "3789200"
  },
  {
    "text": "now I do do something with some other stuff active printer for example obviously takes in a string and it just",
    "start": "3789540",
    "end": "3797280"
  },
  {
    "text": "calls with all the string values it can and obviously there nothing happened",
    "start": "3797280",
    "end": "3804619"
  },
  {
    "text": "that one is going to actually hit the max count because there's so many what looks like",
    "start": "3807480",
    "end": "3813720"
  },
  {
    "text": "variants but it's still going to go through a thousand a thousand calls",
    "start": "3813720",
    "end": "3820500"
  },
  {
    "text": "and at one point it's going to call it quits",
    "start": "3820500",
    "end": "3826160"
  },
  {
    "text": "there so it continues continues and unfortunately this guy is not going to",
    "start": "3832680",
    "end": "3839400"
  },
  {
    "text": "find anything I can guarantee that I've executed it way too many times look at those nice functions called",
    "start": "3839400",
    "end": "3846299"
  },
  {
    "text": "dummy I would love to know what they do",
    "start": "3846299",
    "end": "3850160"
  },
  {
    "text": "anybody has any questions right now yes sir",
    "start": "3854460",
    "end": "3859220"
  },
  {
    "text": "not problems objects that are available to be attacked or verified or whatever",
    "start": "3873660",
    "end": "3883220"
  },
  {
    "text": "saying thank you very much or do they say uh",
    "start": "3888000",
    "end": "3896180"
  },
  {
    "text": "right now the vulnerabilities are found are in two categories",
    "start": "3897660",
    "end": "3903900"
  },
  {
    "text": "the ones that were part of an assessment that at stake was contracted to do in",
    "start": "3903900",
    "end": "3910020"
  },
  {
    "text": "that case the client was very very receptive",
    "start": "3910020",
    "end": "3915299"
  },
  {
    "text": "naturally they were paying us to do that so they were eager for us to find that kind of stuff in the case of me casually",
    "start": "3915299",
    "end": "3924299"
  },
  {
    "text": "checking those 4 000 or so objects the I",
    "start": "3924299",
    "end": "3930240"
  },
  {
    "text": "have found some stuff and I have notified and currently it's the same as all on uh",
    "start": "3930240",
    "end": "3938940"
  },
  {
    "text": "uncalled for notifications some of them have been responsive",
    "start": "3938940",
    "end": "3945059"
  },
  {
    "text": "others I'm still waiting and at that point they will quickly find out what happens",
    "start": "3945059",
    "end": "3951319"
  },
  {
    "text": "because combust is downloadable right now so I expect people to find those again",
    "start": "3951319",
    "end": "3958859"
  },
  {
    "text": "and hopefully build a little bit of responsiveness that's a whole other talk disclosure and",
    "start": "3958859",
    "end": "3967200"
  },
  {
    "text": "I'd rather not go there so combust ended you will note that",
    "start": "3967200",
    "end": "3973260"
  },
  {
    "text": "it spit it out the little stars meaning I'm done if you recall the two methods that",
    "start": "3973260",
    "end": "3981900"
  },
  {
    "text": "I didn't do anything with obviously I didn't do anything with there more interesting",
    "start": "3981900",
    "end": "3990380"
  },
  {
    "text": "ooh",
    "start": "3993240",
    "end": "3995780"
  },
  {
    "text": "dot basic object basic object is the little object I wrote with that little",
    "start": "4000559",
    "end": "4005960"
  },
  {
    "text": "buffer overflow ooh and of course",
    "start": "4005960",
    "end": "4012460"
  },
  {
    "text": "I can't recall what it is called sample tools",
    "start": "4013339",
    "end": "4021280"
  },
  {
    "text": "and I'm going way over on time and I apologize for that so there I'm calling Foo with blank",
    "start": "4022460",
    "end": "4029900"
  },
  {
    "text": "the object appropriately displays or executes this functionality messages zero character long past argument",
    "start": "4029900",
    "end": "4037280"
  },
  {
    "text": "passing is blank I try with another string goes ahead another string goes",
    "start": "4037280",
    "end": "4042500"
  },
  {
    "text": "ahead I try with the 4000 character long string",
    "start": "4042500",
    "end": "4048200"
  },
  {
    "text": "oh it just froze that's a sure sign there's something happening unfortunately",
    "start": "4048200",
    "end": "4055280"
  },
  {
    "text": "at that point you just have to kill combust if you wanted to",
    "start": "4055280",
    "end": "4060619"
  },
  {
    "text": "fuzz the other methods you would have to add food to the ignore list and move on",
    "start": "4060619",
    "end": "4065660"
  },
  {
    "text": "does that make sense no questions oh",
    "start": "4065660",
    "end": "4071900"
  },
  {
    "text": "yes",
    "start": "4071900",
    "end": "4074318"
  },
  {
    "text": "oh it's it okay do I have a way to deal with the UI and it's true that on the few instances where I was",
    "start": "4077240",
    "end": "4084099"
  },
  {
    "text": "systematically combusting those four thousand objects I had to click quite a",
    "start": "4084099",
    "end": "4091220"
  },
  {
    "text": "few times manually no there's no way to deal with the UI that could be an extension I could add to it",
    "start": "4091220",
    "end": "4097120"
  },
  {
    "text": "although it's not clear how to build a generic framework to handle those but",
    "start": "4097120",
    "end": "4103219"
  },
  {
    "text": "tons of com objects have an about method and guess what it pops in about box now",
    "start": "4103219",
    "end": "4108738"
  },
  {
    "text": "combust will be Frozen at that stage until you hit the OK button",
    "start": "4108739",
    "end": "4115900"
  },
  {
    "text": "um I still have a few slides I want to cover",
    "start": "4117259",
    "end": "4121900"
  },
  {
    "text": "unfortunately",
    "start": "4122480",
    "end": "4125480"
  },
  {
    "text": "okay we're going to go through those real fast because I'm not here to fix your problem",
    "start": "4132380",
    "end": "4138219"
  },
  {
    "text": "there are some methods to fix the com or to mitigate the com",
    "start": "4138219",
    "end": "4144920"
  },
  {
    "text": "limitations first one of course is input validation",
    "start": "4144920",
    "end": "4150020"
  },
  {
    "text": "clearly this kind of stuff should not happen if",
    "start": "4150020",
    "end": "4155359"
  },
  {
    "text": "the arguments passed in are appropriately validated hopefully this",
    "start": "4155359",
    "end": "4161900"
  },
  {
    "text": "this tool will show that a com object cannot trust cause to it",
    "start": "4161900",
    "end": "4168440"
  },
  {
    "text": "and has to validate all the the arguments passed in as if it were",
    "start": "4168440",
    "end": "4174020"
  },
  {
    "text": "untrusted input code review security awareness unit",
    "start": "4174020",
    "end": "4179238"
  },
  {
    "text": "testing and running combust do run it use it for regression testing it's",
    "start": "4179239",
    "end": "4184880"
  },
  {
    "text": "really useful once you've scripted it it's done you can execute it as many times as you want at zero cost",
    "start": "4184880",
    "end": "4192920"
  },
  {
    "text": "um so counter measures for ActiveX controls Implement site lock sitelock is a",
    "start": "4192920",
    "end": "4199000"
  },
  {
    "text": "little-known tool from Microsoft that actually limits who can execute your",
    "start": "4199000",
    "end": "4204620"
  },
  {
    "text": "ActiveX control based on domain name on",
    "start": "4204620",
    "end": "4210080"
  },
  {
    "text": "URL path Etc in force contractual obligations on the host part so do expect that the hosting",
    "start": "4210080",
    "end": "4217340"
  },
  {
    "text": "application has an interface that you know of and call it back I've seen some crypto",
    "start": "4217340",
    "end": "4223640"
  },
  {
    "text": "implementation where the com object will verify that whoever was calling it",
    "start": "4223640",
    "end": "4230360"
  },
  {
    "text": "was authorized through some crypto and pki implementation sign code no not really sign code will",
    "start": "4230360",
    "end": "4238219"
  },
  {
    "text": "only help the user trust more your code but it actually has no impact on how vulnerable your code is",
    "start": "4238219",
    "end": "4246500"
  },
  {
    "text": "it's actually worse build defense and depth that's a definitely a lesson that",
    "start": "4246500",
    "end": "4253280"
  },
  {
    "text": "I would imagine all of us know of and have learned the hard way",
    "start": "4253280",
    "end": "4259540"
  },
  {
    "text": "Natalie can you stand up please yeah so over there is my wife and I want to",
    "start": "4260239",
    "end": "4267500"
  },
  {
    "text": "thank her and I at least a round of applause for her please for supporting me",
    "start": "4267500",
    "end": "4273640"
  },
  {
    "text": "because I've definitely put a lot of time in that and and unfortunately spare",
    "start": "4275000",
    "end": "4280040"
  },
  {
    "text": "time not business time and uh so the last up to a few credits to colleagues",
    "start": "4280040",
    "end": "4286400"
  },
  {
    "text": "that have helped me out and uh the hotel room that has forced me",
    "start": "4286400",
    "end": "4292400"
  },
  {
    "text": "to work on that um you have my email address there you",
    "start": "4292400",
    "end": "4298640"
  },
  {
    "text": "can download combust unfortunately it's not on the CD but it's on uh at Stakes",
    "start": "4298640",
    "end": "4304659"
  },
  {
    "text": "research tools it was put there this afternoon it's also on black hats presentation material",
    "start": "4304659",
    "end": "4312020"
  },
  {
    "text": "online ActiveX security link site locked link activx signing if you're really",
    "start": "4312020",
    "end": "4318620"
  },
  {
    "text": "interested in that questions yes",
    "start": "4318620",
    "end": "4324520"
  },
  {
    "text": "so how do you use Outlook to use those comma objects to launch an attack",
    "start": "4330920",
    "end": "4336679"
  },
  {
    "text": "um I will not go too much in detail about it you know that you can send emails",
    "start": "4336679",
    "end": "4343640"
  },
  {
    "text": "such as a Melissa virus that have scripting in it with that script you can access",
    "start": "4343640",
    "end": "4351620"
  },
  {
    "text": "any I dispatch based objects that's on the local machine does that make sense or",
    "start": "4351620",
    "end": "4358460"
  },
  {
    "text": "you want me to talk a little bit more about it so in scripting language you can call",
    "start": "4358460",
    "end": "4364219"
  },
  {
    "text": "create object you pass in the prog ID or the CLS ID it will instantiate an object",
    "start": "4364219",
    "end": "4370040"
  },
  {
    "text": "on the local machine you can add script to your email you can add script to your",
    "start": "4370040",
    "end": "4376040"
  },
  {
    "text": "HTML you can add scripts to anything the log on screen the log on script that",
    "start": "4376040",
    "end": "4383300"
  },
  {
    "text": "a lot of Corporations have when you log on to the domain could have that kind of",
    "start": "4383300",
    "end": "4388400"
  },
  {
    "text": "functionality in it literally those objects are accessible through millions",
    "start": "4388400",
    "end": "4393920"
  },
  {
    "text": "of channels",
    "start": "4393920",
    "end": "4396880"
  },
  {
    "text": "okay so the question is if you can add stuff to the logon script the local",
    "start": "4406940",
    "end": "4412159"
  },
  {
    "text": "logon script of the computer you already own it yes I'm not talking about the local compute the local logon script I'm",
    "start": "4412159",
    "end": "4417860"
  },
  {
    "text": "talking about the domain logon script when you log on to the domain",
    "start": "4417860",
    "end": "4423020"
  },
  {
    "text": "the domain returns a script or the the address of a script for you to execute",
    "start": "4423020",
    "end": "4428060"
  },
  {
    "text": "what if that script was compromised on that server and now everybody who logs onto that domain is actually executing",
    "start": "4428060",
    "end": "4434840"
  },
  {
    "text": "that script with your payload in it",
    "start": "4434840",
    "end": "4438880"
  },
  {
    "text": "in order to get to that script file on that domain server you probably had to",
    "start": "4441800",
    "end": "4448219"
  },
  {
    "text": "compromise something you might have not needed to I've seen some domains where that script file was in guest protected",
    "start": "4448219",
    "end": "4457179"
  },
  {
    "text": "ACLS there's nothing to prevent me from viewing the content and uploading my",
    "start": "4457179",
    "end": "4463880"
  },
  {
    "text": "content to it does it make sense so I agree with you that it's probably the minor of your",
    "start": "4463880",
    "end": "4470500"
  },
  {
    "text": "problems you probably want to worry more about HTML based channels than anything else",
    "start": "4470500",
    "end": "4478239"
  },
  {
    "text": "talking about that I could also write my own exe because those objects are",
    "start": "4478239",
    "end": "4483679"
  },
  {
    "text": "executable from from C C plus plus whatever so if I got that Exe on the",
    "start": "4483679",
    "end": "4491360"
  },
  {
    "text": "target computer then that exe could exercise function Foo easily",
    "start": "4491360",
    "end": "4497920"
  },
  {
    "text": "you might as well crash in that Exe on your own it's probably easier but if you like to do this to do stuff the",
    "start": "4498020",
    "end": "4504080"
  },
  {
    "text": "complicated way you can do it that way too yes",
    "start": "4504080",
    "end": "4510520"
  },
  {
    "text": "I'm sorry I didn't get the question",
    "start": "4514880",
    "end": "4518139"
  },
  {
    "text": "so the question is what if the type library has incorrect",
    "start": "4528140",
    "end": "4534380"
  },
  {
    "text": "descriptions of those functions because it boils down to combust accessing a",
    "start": "4534380",
    "end": "4540679"
  },
  {
    "text": "version of that type library to be able to enumerate all the functions I have seen out there quite a few com",
    "start": "4540679",
    "end": "4547520"
  },
  {
    "text": "objects that published a type library that was a subset of their functionality",
    "start": "4547520",
    "end": "4552980"
  },
  {
    "text": "that's one way to do it publishing the incorrect information is not going to",
    "start": "4552980",
    "end": "4558140"
  },
  {
    "text": "buy you anything because that means that then whoever was using your com object",
    "start": "4558140",
    "end": "4563300"
  },
  {
    "text": "can now no longer use it because that type library is for all consumers of that com object",
    "start": "4563300",
    "end": "4570140"
  },
  {
    "text": "does that make sense you can't selectively say I'm going to",
    "start": "4570140",
    "end": "4575179"
  },
  {
    "text": "tell Outlook or VB that I have function Foo but I'm",
    "start": "4575179",
    "end": "4580940"
  },
  {
    "text": "not going to tell combust that I have function Foo if you're telling you're telling everybody",
    "start": "4580940",
    "end": "4587080"
  },
  {
    "text": "yeah at one point I had a slide about that which is dynamically change your interface based",
    "start": "4595940",
    "end": "4603800"
  },
  {
    "text": "on appropriate call pattern or authentication of the caller",
    "start": "4603800",
    "end": "4610520"
  },
  {
    "text": "it is feasible there's two issues with it one it goes against",
    "start": "4610520",
    "end": "4615800"
  },
  {
    "text": "comms uh standard which says if I remember correctly that",
    "start": "4615800",
    "end": "4621800"
  },
  {
    "text": "a com object has to publish consistently the same interface across",
    "start": "4621800",
    "end": "4628640"
  },
  {
    "text": "different states and the second and I'm paraphrasing there off the top of my head",
    "start": "4628640",
    "end": "4633920"
  },
  {
    "text": "second part is that if you do that chance",
    "start": "4633920",
    "end": "4639980"
  },
  {
    "text": "going back to the reason why you had I dispatch in the first place hopefully",
    "start": "4639980",
    "end": "4645199"
  },
  {
    "text": "the only reason you had eye dispatch in the first place was because you wanted to support scripting languages calling",
    "start": "4645199",
    "end": "4651739"
  },
  {
    "text": "so uh by the way if you don't have scripting languages calling you the easy",
    "start": "4651739",
    "end": "4657260"
  },
  {
    "text": "fix to that currently is just don't Implement based on I dispatch there's a huge cost from CPU there's a huge CPU cost to",
    "start": "4657260",
    "end": "4666679"
  },
  {
    "text": "using dispatch interfaces versus using the I unknown and going directly for",
    "start": "4666679",
    "end": "4672020"
  },
  {
    "text": "static bound stuff so if you have scripts calling your object through",
    "start": "4672020",
    "end": "4677480"
  },
  {
    "text": "idispatch chances are I can probably access those scripts and see how I'm supposed to call",
    "start": "4677480",
    "end": "4685159"
  },
  {
    "text": "the object legally does that make sense and then so basically you've gone",
    "start": "4685159",
    "end": "4692960"
  },
  {
    "text": "through a lot of trouble to implement your your Dynamic type library or type",
    "start": "4692960",
    "end": "4699020"
  },
  {
    "text": "info it's all defeated by the fact that you probably have written something that",
    "start": "4699020",
    "end": "4705560"
  },
  {
    "text": "calls it appropriately that's already accessible in plain text to the attacker",
    "start": "4705560",
    "end": "4711620"
  },
  {
    "text": "I see blank stairs and I don't understand myself so I probably did a bad job of describing that but if you",
    "start": "4711620",
    "end": "4717800"
  },
  {
    "text": "want to talk more about it find me I'll be here I'll be Defcon send",
    "start": "4717800",
    "end": "4722840"
  },
  {
    "text": "me an email I'd be happy to talk about all that I by no means I'm an expert in Com or in any",
    "start": "4722840",
    "end": "4731480"
  },
  {
    "text": "technology I just applied something and thought there was a a niche there in the a need for for that tool",
    "start": "4731480",
    "end": "4738920"
  },
  {
    "text": "any other questions thank you for",
    "start": "4738920",
    "end": "4745100"
  },
  {
    "text": "sticking with me",
    "start": "4745100",
    "end": "4748120"
  },
  {
    "text": "and I hope I wasn't too boring but the tool is worth it",
    "start": "4751699",
    "end": "4757659"
  },
  {
    "text": "foreign",
    "start": "7142880",
    "end": "7145540"
  }
]