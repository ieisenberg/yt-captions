[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "all right so we are in mandalay EF this talk is writing badass an hour for OS x",
    "start": "0",
    "end": "6540"
  },
  {
    "text": "got a lot of content so i am going to jump right in so good morning and thank",
    "start": "6540",
    "end": "11730"
  },
  {
    "text": "you so much for attending my presentation let's talk about writing badass malware for OS X so my name is",
    "start": "11730",
    "end": "18900"
  },
  {
    "text": "Patrick Wartell I've worked at a bunch of acronym places including the NSA",
    "start": "18900",
    "end": "24119"
  },
  {
    "text": "which I always joke is the only u.s. government agency that actually listens",
    "start": "24119",
    "end": "30679"
  },
  {
    "text": "currently I'm the director of R&D at cynic so Cenac does crowd-sourced vulnerability discovery with global",
    "start": "30679",
    "end": "37860"
  },
  {
    "text": "contingent of vetted security researchers so check out Cenac comm or stop by our booth to learn about how we",
    "start": "37860",
    "end": "43440"
  },
  {
    "text": "can help you protect your enterprise so sec rd does all sorts of cool",
    "start": "43440",
    "end": "49170"
  },
  {
    "start": "46000",
    "end": "125000"
  },
  {
    "text": "cybersecurity research and we love our mac computers so recently i've been doing a lot of OS x research and today i",
    "start": "49170",
    "end": "56280"
  },
  {
    "text": "want to present some of that so the talk today could be divided into three parts we're gonna start with a brief overview",
    "start": "56280",
    "end": "63210"
  },
  {
    "text": "of OSX malware kind of gets us allows us to get a baseline of what it what is out",
    "start": "63210",
    "end": "68340"
  },
  {
    "text": "there in the main part of the talk I'm gonna provide some novel ideas about how",
    "start": "68340",
    "end": "73740"
  },
  {
    "text": "we can improve this status quo so basically we'll talk about how to",
    "start": "73740",
    "end": "78780"
  },
  {
    "text": "improve infection vectors persistence self defense features and then bypassing",
    "start": "78780",
    "end": "83880"
  },
  {
    "text": "security products and then finally we'll end with some free security tools that can help us protect our Mac's",
    "start": "83880",
    "end": "89520"
  },
  {
    "text": "and ensure that we remain secure now I do want to note that this talk does not",
    "start": "89520",
    "end": "94860"
  },
  {
    "text": "cover firmware based or kernel based OSX malware I think there's a talk later this week maybe tomorrow that looks",
    "start": "94860",
    "end": "101250"
  },
  {
    "text": "really interesting I'm gonna be attending it so if you're interested in kind of lower level malware I would recommend checking that out all",
    "start": "101250",
    "end": "108930"
  },
  {
    "text": "right so I briefly want to look at several recess recent OSX malware specimens this will give us a good idea",
    "start": "108930",
    "end": "114600"
  },
  {
    "text": "as to the status quo kind of the current state of affairs in OSX malware land and",
    "start": "114600",
    "end": "119729"
  },
  {
    "text": "then this will provide us as I mentioned with a baseline and show us areas where malware could improve now you might be",
    "start": "119729",
    "end": "127290"
  },
  {
    "start": "125000",
    "end": "153000"
  },
  {
    "text": "thinking why do we care about Max and and malware mac malware that kind of stuff well this is kind of an obvious",
    "start": "127290",
    "end": "133300"
  },
  {
    "text": "statement but Macs are pretty much everywhere especially at security conferences colleges R&D centers board",
    "start": "133300",
    "end": "140500"
  },
  {
    "text": "meetings yeah pretty much everywhere Annapolis now the number three u.s. computer vendor number five worldwide",
    "start": "140500",
    "end": "146769"
  },
  {
    "text": "now we all know anytime a technology becomes more prevalent naturally there's gonna be more attacks and more malware",
    "start": "146769",
    "end": "153720"
  },
  {
    "start": "153000",
    "end": "217000"
  },
  {
    "text": "but wait a minute Apple tells us that Macs don't really get an hour well I've learned to not",
    "start": "153720",
    "end": "160120"
  },
  {
    "text": "believe everything I read on the internet especially when it comes from Apple's marketing department I think",
    "start": "160120",
    "end": "166030"
  },
  {
    "text": "they hire more marketing people oh then security people but that's just my opinion actually the first computer",
    "start": "166030",
    "end": "171880"
  },
  {
    "text": "virus that was discovered propagating spreading in wild was called Al cloner and that actually infected Apple",
    "start": "171880",
    "end": "177220"
  },
  {
    "text": "computers since then Mac malware has flourished in the last three or four years we've seen about 50 new OSX",
    "start": "177220",
    "end": "183489"
  },
  {
    "text": "malware families Kaspersky just released a report that said last year actually there was a",
    "start": "183489",
    "end": "188739"
  },
  {
    "text": "significant surge in OSX malware and malware attacks they saw about a thousand unique attacks that they could",
    "start": "188739",
    "end": "194200"
  },
  {
    "text": "classify into 25 or so new malware families there's also been scenarios",
    "start": "194200",
    "end": "199690"
  },
  {
    "text": "where more advanced adversaries maybe nation-states have been able to go after OS X users specifically and create new",
    "start": "199690",
    "end": "207160"
  },
  {
    "text": "OSX malware and then trivially infect those those users so to me this all",
    "start": "207160",
    "end": "212920"
  },
  {
    "text": "shows that OSX malware is definitely a problem and an unfortunate reality so the first OSX malware sample I want",
    "start": "212920",
    "end": "220599"
  },
  {
    "start": "217000",
    "end": "255000"
  },
  {
    "text": "to talk about is called XSL CMD this was found last year by fireEye it's a fairly",
    "start": "220599",
    "end": "226480"
  },
  {
    "text": "basic standard backdoor provides some decent features keylogging screen capture reversed shell in terms",
    "start": "226480",
    "end": "233290"
  },
  {
    "text": "of its persistence though it persists as a launch agent now launch agents are fairly synonymous to Windows services so",
    "start": "233290",
    "end": "240340"
  },
  {
    "text": "yes they will give you persistence but they'll also show up as a new process so if the user looks at the Activity",
    "start": "240340",
    "end": "247030"
  },
  {
    "text": "Monitor or does a PS they're gonna see a new malicious process running so this is very amateur so this malware really",
    "start": "247030",
    "end": "254019"
  },
  {
    "text": "again not that sophisticated another recent OSX malware specimen is AI worm",
    "start": "254019",
    "end": "259690"
  },
  {
    "start": "255000",
    "end": "304000"
  },
  {
    "text": "we'll be talking about this a little more and actually using at demo it was discovered again at the end of last year and contrary to its",
    "start": "259690",
    "end": "266330"
  },
  {
    "text": "name it's really not a worm at all it has no autonomous spreading capabilities no viral spreading capabilities it's",
    "start": "266330",
    "end": "272840"
  },
  {
    "text": "just a Trojan it spread via infected applications because you know everyone",
    "start": "272840",
    "end": "277910"
  },
  {
    "text": "wants a free copy of Photoshop right again you would download you would get Photoshop but you would also get some",
    "start": "277910",
    "end": "283250"
  },
  {
    "text": "malware similarly to XSL CMD again a very basic backdoor provided some you",
    "start": "283250",
    "end": "290390"
  },
  {
    "text": "know basic functionality download execute survey and again in terms of persistence it persists as a launch",
    "start": "290390",
    "end": "296750"
  },
  {
    "text": "daemon which is similar to a launch agent which again means that the user will see a new process running so really",
    "start": "296750",
    "end": "302600"
  },
  {
    "text": "not that stuffy yet another recent piece of OSX malware is why earlier now this",
    "start": "302600",
    "end": "308810"
  },
  {
    "start": "304000",
    "end": "345000"
  },
  {
    "text": "is a little more advanced but only from a feature point of view it's actually had the ability to infect iPhones if the",
    "start": "308810",
    "end": "315560"
  },
  {
    "text": "user agreed to install an enterprise certificate the Mac component again super basic persists as a launch daemon",
    "start": "315560",
    "end": "322550"
  },
  {
    "text": "so again it's going to show up its new process I had very basic functionality now the media got all excited about this",
    "start": "322550",
    "end": "328700"
  },
  {
    "text": "malware and was like oh my god this is so advanced but there's this quote that I really like from one of my favorite",
    "start": "328700",
    "end": "334160"
  },
  {
    "text": "OSX security researchers which pretty much sums it up it says you know it's kind of just a collection of scripts and",
    "start": "334160",
    "end": "339410"
  },
  {
    "text": "binaries all duct-taped together almost surprising that it worked so again a very basic piece of malware and finally",
    "start": "339410",
    "end": "346910"
  },
  {
    "start": "345000",
    "end": "375000"
  },
  {
    "text": "we've got hacking teams persistent OSX implant this was cool because we actually got source code thanks to",
    "start": "346910",
    "end": "353420"
  },
  {
    "text": "leaked so this allowed us to really dive in and figure out exactly what the Mauer was doing and also look at its level of",
    "start": "353420",
    "end": "358940"
  },
  {
    "text": "sophistication now yes it does have a myriad of features because it was designed to collect intelligence but",
    "start": "358940",
    "end": "365330"
  },
  {
    "text": "other than that as the quote says again there's really nothing technically impressive about this an hour even",
    "start": "365330",
    "end": "370760"
  },
  {
    "text": "though it was being sold and used by nation states or dictatorships around the world so after looking at these",
    "start": "370760",
    "end": "377210"
  },
  {
    "start": "375000",
    "end": "490000"
  },
  {
    "text": "cutting-edge or these most recent OSX malware samples we can draw some conclusions and make some",
    "start": "377210",
    "end": "382550"
  },
  {
    "text": "generalizations so in terms of an inspection we can see that most use trojans they require user interaction",
    "start": "382550",
    "end": "389030"
  },
  {
    "text": "some do use fishing but the exploits they deliver kind of older or",
    "start": "389030",
    "end": "394460"
  },
  {
    "text": "pache so security-conscious users people who keep their computers updated don't click on random emails probably gonna be",
    "start": "394460",
    "end": "400940"
  },
  {
    "text": "fine in terms of persistence all use very well known techniques majority",
    "start": "400940",
    "end": "406190"
  },
  {
    "text": "being launched items this makes them our really easy to uncover detect and prevent terms of self defense we see",
    "start": "406190",
    "end": "413270"
  },
  {
    "text": "minimal obfuscation and there's no active self defense somewhat similarly in terms of stealth pretty much all just",
    "start": "413270",
    "end": "420199"
  },
  {
    "text": "hide in plain sight they basically will show up in Activity Monitor or in a process listing but they",
    "start": "420199",
    "end": "426199"
  },
  {
    "text": "named themselves Apple something or other and that's how they try to hide also they're all standalone executable",
    "start": "426199",
    "end": "431630"
  },
  {
    "text": "so again gonna show up in a process listing terms of features this is the one area where I would say current OSX",
    "start": "431630",
    "end": "438169"
  },
  {
    "text": "an hour is sufficient gets the job done but if you look a little closer how these features are implemented a lot of",
    "start": "438169",
    "end": "444590"
  },
  {
    "text": "times it's done in a very amateur in elegant way so today they want to reverse shell they'll actually bind a",
    "start": "444590",
    "end": "450830"
  },
  {
    "text": "shell to a remote port instead of doing it in proc so if you list the open ports on your computer you'll see a listening",
    "start": "450830",
    "end": "457190"
  },
  {
    "text": "port bound to a shell which again really not that stealthy in terms of personal security bypasses so bypassing firewalls",
    "start": "457190",
    "end": "463490"
  },
  {
    "text": "and antivirus products we don't see any of this malware have any antivirus or personal security product awareness or",
    "start": "463490",
    "end": "470210"
  },
  {
    "text": "trying to actively bypass hacking teams implant did have some stubs for injecting some random garbage bytes the",
    "start": "470210",
    "end": "475969"
  },
  {
    "text": "bypass ad based signatures but again that was pretty much it so the great I like to give current Mac",
    "start": "475969",
    "end": "482270"
  },
  {
    "text": "malware is a c-plus so it is sufficient but it's an elegant amateur and trivial",
    "start": "482270",
    "end": "488360"
  },
  {
    "text": "to both detect and prevent so our goal end today is how can we improve the",
    "start": "488360",
    "end": "494120"
  },
  {
    "start": "490000",
    "end": "555000"
  },
  {
    "text": "status quo and learn how to write some better OSX malware some of you might be thinking why would we talk about this",
    "start": "494120",
    "end": "500960"
  },
  {
    "text": "we're just gonna enable the bad guys well first to be totally honest writing proof of concept malware to me is pretty",
    "start": "500960",
    "end": "507830"
  },
  {
    "text": "much the most entertaining form of software development so I just think it's fun more seriously though Apple and",
    "start": "507830",
    "end": "515089"
  },
  {
    "text": "third-party security products so the AV company's firewall products stuff like that use this existing OS n OS 10",
    "start": "515089",
    "end": "521990"
  },
  {
    "text": "malware which I just showed you kind of sucks to validate their efforts and vet",
    "start": "521990",
    "end": "527310"
  },
  {
    "text": "tools so they basically use that as a litmus test and when they detect these known crappy samples they're like yeah",
    "start": "527310",
    "end": "533640"
  },
  {
    "text": "our tools are awesome they work I'm gonna show you though how trivial it is to write something better that can",
    "start": "533640",
    "end": "538650"
  },
  {
    "text": "generically bypass everything and obviously if I can do it nation states events adversaries can and probably are",
    "start": "538650",
    "end": "546089"
  },
  {
    "text": "already doing that so my goal is to spur discussions to make better security",
    "start": "546089",
    "end": "551760"
  },
  {
    "text": "tools so that we can ultimately secure our Max and prevent them from getting hacked so let's first start by talking",
    "start": "551760",
    "end": "557880"
  },
  {
    "start": "555000",
    "end": "621000"
  },
  {
    "text": "about infection so how does OS X get on an end users computer as I mentioned most are spread by Trojans and require",
    "start": "557880",
    "end": "565140"
  },
  {
    "text": "user interaction so these are some of the common infection mechanism so website will be hacked or infected an",
    "start": "565140",
    "end": "572520"
  },
  {
    "text": "unwitting user will go there and it says hey here's a flash installer you need to update it's obviously not flash it's now where",
    "start": "572520",
    "end": "579120"
  },
  {
    "text": "they download it and execute it they'll be infected similarly adult web sites you go there it says hey too you know",
    "start": "579120",
    "end": "585480"
  },
  {
    "text": "observe this content you have to install this HD contact HD codec or plugin so",
    "start": "585480",
    "end": "591570"
  },
  {
    "text": "I've been told for research purposes only and then of course infected pirated",
    "start": "591570",
    "end": "598290"
  },
  {
    "text": "applications everyone wants Photoshop free copy of Photoshop so they download Photoshop",
    "start": "598290",
    "end": "603480"
  },
  {
    "text": "they get it but it's infected in malware now a few things are going to prevent this from actually being really successful first there's a built in",
    "start": "603480",
    "end": "609720"
  },
  {
    "text": "technology called gatekeeper which blocks unsigned binaries and we'll talk about that a little so this definitely",
    "start": "609720",
    "end": "615030"
  },
  {
    "text": "protects some users also smart security conscious users are not going to fall for this so they're gonna be okay",
    "start": "615030",
    "end": "620930"
  },
  {
    "text": "so what's a way for us to target such users well if you think about it we all do download software and the Mac App",
    "start": "620930",
    "end": "627870"
  },
  {
    "start": "621000",
    "end": "731000"
  },
  {
    "text": "Store is very constrictive in my opinion so most companies still distribute their software directly from their websites so",
    "start": "627870",
    "end": "634350"
  },
  {
    "text": "you want Photoshop probably go to adobe.com and get it there it's problem is that the software is distributed to you over",
    "start": "634350",
    "end": "639690"
  },
  {
    "text": "HTTP a network level adversary can man-in-the-middle is connection and inject malicious code now you might be",
    "start": "639690",
    "end": "645959"
  },
  {
    "text": "thinking it's 2015 how much software is really downloaded over HTTP so earlier this year I looked",
    "start": "645959",
    "end": "652110"
  },
  {
    "text": "at all the software that was installed on my dock we can see that about 2/3 of it was distributed to me over HTTP now",
    "start": "652110",
    "end": "660570"
  },
  {
    "text": "I don't think it's because the companies are necessarily stupid they understand as do I that there's a difference",
    "start": "660570",
    "end": "666330"
  },
  {
    "text": "between securing a download and validating the download and they all require on this piece of software that's",
    "start": "666330",
    "end": "672120"
  },
  {
    "text": "built into the operating system called gatekeeper to verify that the download has not been tampered with in transit",
    "start": "672120",
    "end": "678090"
  },
  {
    "text": "the problem is that we find a gatekeeper bypass which I'll talk about this breaks this whole scheme and again allows a",
    "start": "678090",
    "end": "683880"
  },
  {
    "text": "network level adversary the ability to man in the middle this vector this offer all right you still might be thinking",
    "start": "683880",
    "end": "690450"
  },
  {
    "text": "okay Patrick you are a malware analyst you're probably downloading the random software from down random sites you know",
    "start": "690450",
    "end": "696630"
  },
  {
    "text": "sure a lot of it's gonna be over HTTP and I said all right fair what about security software these guys are both",
    "start": "696630",
    "end": "702570"
  },
  {
    "text": "supposed to be the shining examples of how to do things right so again earlier this year when I went",
    "start": "702570",
    "end": "708540"
  },
  {
    "text": "and downloaded the software I tried to find every piece of security software that I could find all of them were",
    "start": "708540",
    "end": "713820"
  },
  {
    "text": "downloaded over HTTP it's kind of like blew my mind I was like really guys the",
    "start": "713820",
    "end": "720120"
  },
  {
    "text": "other problem is these all need root to install so if I'm a network level adversary I'm just gonna wait till user",
    "start": "720120",
    "end": "725250"
  },
  {
    "text": "goes and gets an anti-virus product injects some malicious code into it and then I'm gonna inspect their box that",
    "start": "725250",
    "end": "730590"
  },
  {
    "text": "way now I want to talk a little bit about persistence which is something that basically all malware strives for",
    "start": "730590",
    "end": "737810"
  },
  {
    "start": "731000",
    "end": "805000"
  },
  {
    "text": "persistence in the context of this talk just means gaining automatic code execution every time the Box restarts",
    "start": "737810",
    "end": "744300"
  },
  {
    "text": "obviously this is something that malware likes to do as I mentioned the current methods are pretty much all launch items",
    "start": "744300",
    "end": "750180"
  },
  {
    "text": "which are similar to Windows Services and then also login items these are really lame",
    "start": "750180",
    "end": "755700"
  },
  {
    "text": "first and foremost they're really not stealthy so for example you can see Mac protector that's another OSX malware",
    "start": "755700",
    "end": "762420"
  },
  {
    "text": "sample it's like a rogue av product it registers itself as a login item sure",
    "start": "762420",
    "end": "767880"
  },
  {
    "text": "this means that every time the computer is restarted it'll get automatic code execution so the malware can rerun but",
    "start": "767880",
    "end": "773400"
  },
  {
    "text": "also means if the user goes and looks at their login items they will see the malware and they can delete it from",
    "start": "773400",
    "end": "778800"
  },
  {
    "text": "there as well as a malware author if your malware showing up in some UI you're you're doing something wrong",
    "start": "778800",
    "end": "785150"
  },
  {
    "text": "similarly launch daemon is very easy to detect as well wire lurker the malware sample that the media was all hyped up",
    "start": "785150",
    "end": "792030"
  },
  {
    "text": "on how Vance it was it installs for new launch demons so this means there's gonna be four new processes but then also if you",
    "start": "792030",
    "end": "798880"
  },
  {
    "text": "dump the launch demons you're gonna see four new entries here so again really really not stealthy super easy to detect",
    "start": "798880",
    "end": "805440"
  },
  {
    "start": "805000",
    "end": "879000"
  },
  {
    "text": "see our methods that are currently used kind of suck so let's talk about some better ways now I'm a big fan of binary",
    "start": "805440",
    "end": "813100"
  },
  {
    "text": "infection it's kind of a more old-school technique but it's really very powerful first it's really stealthy if you inject",
    "start": "813100",
    "end": "820389"
  },
  {
    "text": "all your viral code into the binary you're infecting there's not going to be any new processes running there's not",
    "start": "820389",
    "end": "825880"
  },
  {
    "text": "gonna be any other files on the file system it's also difficult to disinfect most current OSX malware you can simply",
    "start": "825880",
    "end": "831699"
  },
  {
    "text": "delete an executable and delete for example their auto run keyless entry and your boxes is clean the malware is gonna",
    "start": "831699",
    "end": "837820"
  },
  {
    "text": "be gone the malware hover has embedded itself infected illegitimate binary it's probably gonna be hard to automatically",
    "start": "837820",
    "end": "844149"
  },
  {
    "text": "disinfect it and then finally you get load time process injection say for example you target the users browser",
    "start": "844149",
    "end": "851050"
  },
  {
    "text": "every time the browser is executed your malicious viral code will get executed it as well within the trusted context of",
    "start": "851050",
    "end": "858459"
  },
  {
    "text": "the browser so this means if there's a personal firewall that's monitoring for untrusting connection it's obviously",
    "start": "858459",
    "end": "864130"
  },
  {
    "text": "going to trust the browser which means your viral code is also going to be trusted as well now there's a problem at",
    "start": "864130",
    "end": "869500"
  },
  {
    "text": "least from the point of view of the Malheur and that is the OSX loader validates the digital signature so if we",
    "start": "869500",
    "end": "874990"
  },
  {
    "text": "just try to infect a binary it's gonna tell us you know get out of here so how",
    "start": "874990",
    "end": "880750"
  },
  {
    "start": "879000",
    "end": "897000"
  },
  {
    "text": "secure is this mechanism at validating these digital signatures well if we look at how it works basically what the",
    "start": "880750",
    "end": "885850"
  },
  {
    "text": "loader does is it looks for a signature block within the binary and if the signature block is there it validates it",
    "start": "885850",
    "end": "891399"
  },
  {
    "text": "recall though unlike iOS OS X allows unsigned applications to execute so what",
    "start": "891399",
    "end": "897519"
  },
  {
    "start": "897000",
    "end": "926000"
  },
  {
    "text": "we can do is we can simply pull out that signature block and then infect away the loader has no concept of state doesn't",
    "start": "897519",
    "end": "904630"
  },
  {
    "text": "say hey this binary used to be signed and it's not anymore so something weirds going on it doesn't say hey this is an",
    "start": "904630",
    "end": "910120"
  },
  {
    "text": "apple binary that should be signed but isn't now it just says oh it's not signed I can't say anything about it I'm",
    "start": "910120",
    "end": "915670"
  },
  {
    "text": "gonna let you run so here we have Safari there's the original hash we removed the signature block inject some viral code",
    "start": "915670",
    "end": "923440"
  },
  {
    "text": "obviously changes but then we're allowed to run it no problems asked so now we can inspect away now there's a myriad of",
    "start": "923440",
    "end": "930160"
  },
  {
    "text": "ways that you could infect a mock Oh binary it could be a talk unto itself but some basic ideas you could obviously",
    "start": "930160",
    "end": "935560"
  },
  {
    "text": "hijack the entry point you could add a new dependency and again the benefits of this it's self-contained somewhat",
    "start": "935560",
    "end": "941920"
  },
  {
    "text": "difficult to detect and then also difficult to disinfect my favorite OSX",
    "start": "941920",
    "end": "948400"
  },
  {
    "start": "946000",
    "end": "1006000"
  },
  {
    "text": "persistence mechanism though is dial it hijacking and this is very conceptually similar to DLL hijacking on Windows",
    "start": "948400",
    "end": "954550"
  },
  {
    "text": "basically if you have a vulnerable application all you have to do is a piece of malware or a malicious adversary is plant a malicious dialogue",
    "start": "954550",
    "end": "961750"
  },
  {
    "text": "on the file system and then anytime that vulnerable application is started either automatically by the operating system or",
    "start": "961750",
    "end": "968010"
  },
  {
    "text": "manually by the user your malicious dialog will get automatically loaded and executed so pretty cool so here for this",
    "start": "968010",
    "end": "974650"
  },
  {
    "text": "is conceptually how it all works there's an application that says hey I have a dependency on some die Lib now there",
    "start": "974650",
    "end": "980680"
  },
  {
    "text": "exists scenarios where the loader will basically look in multiple locations for that dylon so if the legitimate die lib",
    "start": "980680",
    "end": "986980"
  },
  {
    "text": "lick lives or exists in a secondary search directory we as a malicious adversary can plant our die Lib in the",
    "start": "986980",
    "end": "993220"
  },
  {
    "text": "primary search paths that search directory and from then on the loader will then blindly naively find and load",
    "start": "993220",
    "end": "1000090"
  },
  {
    "text": "an execute our die live I'm also giving a whole talk about this at Def Con so if you're interested in that I would love",
    "start": "1000090",
    "end": "1006870"
  },
  {
    "start": "1006000",
    "end": "1063000"
  },
  {
    "text": "to see you at the talk so how do we use this for persistence so on my computer there is this Apple binary called the",
    "start": "1006870",
    "end": "1013260"
  },
  {
    "text": "iCloud photo stream agent it's automatically started by the operating system every time the computer reboots",
    "start": "1013260",
    "end": "1018840"
  },
  {
    "text": "and is vulnerable to a dial-up hijack so what we can do is we can figure our malicious dilib and then save it to this",
    "start": "1018840",
    "end": "1025470"
  },
  {
    "text": "directory on the file system this is all we have to do now every time the box is restarted our dialog will get",
    "start": "1025470",
    "end": "1031709"
  },
  {
    "text": "automatically loaded and executed benefits again it's novel anytime you see a novel technique probably not going",
    "start": "1031709",
    "end": "1037770"
  },
  {
    "text": "to be detected there's also no new processes I really like this the user looks at the process listing Activity",
    "start": "1037770",
    "end": "1043319"
  },
  {
    "text": "Monitor they're not gonna see anything amiss it also requires no binary or OS modifications so you're not breaking any",
    "start": "1043320",
    "end": "1049260"
  },
  {
    "text": "digital signatures or doing anything that weird and finally it abuses legitimate functionality of the op",
    "start": "1049260",
    "end": "1054690"
  },
  {
    "text": "I talked to Apple about this technique several months ago and their beta",
    "start": "1054690",
    "end": "1059850"
  },
  {
    "text": "software that they're still releasing is still vulnerable to this attack alright so that was slicker stealthier",
    "start": "1059850",
    "end": "1065970"
  },
  {
    "start": "1063000",
    "end": "1112000"
  },
  {
    "text": "persistence mechanisms if you're interested in more I actually wrote a white paper for buyers bulletin is about 20-plus techniques that malware could",
    "start": "1065970",
    "end": "1072899"
  },
  {
    "text": "use to persist so what about self defense now I've always wondered why a",
    "start": "1072899",
    "end": "1078419"
  },
  {
    "text": "malware does not employ more self defense mechanisms to prevent analysis or detection I guess on the windows side",
    "start": "1078419",
    "end": "1084870"
  },
  {
    "text": "of the house we see a lot of malware that has anti analysis anti debugging those kind of things built in but on OSX",
    "start": "1084870",
    "end": "1091559"
  },
  {
    "text": "the malware we see really doesn't have that sure some samples are packed but they're like packed with upx so you can",
    "start": "1091559",
    "end": "1096990"
  },
  {
    "text": "just run you know upx dash d and you know you get the unpacked binary so this",
    "start": "1096990",
    "end": "1102990"
  },
  {
    "text": "is problematic I think because this makes it way too easy for the antivirus companies it makes it really easy to",
    "start": "1102990",
    "end": "1108360"
  },
  {
    "text": "find the malware makes it trivial to analyze malware and makes it trivial to disinfect so I want to talk about some",
    "start": "1108360",
    "end": "1113940"
  },
  {
    "start": "1112000",
    "end": "1328000"
  },
  {
    "text": "self-defense techniques that I think OSX malware could or should be using now let's start with talking about",
    "start": "1113940",
    "end": "1119220"
  },
  {
    "text": "protecting our malware I think encrypting one's malware is generally a good idea it makes detection",
    "start": "1119220",
    "end": "1125309"
  },
  {
    "text": "harder and also makes it more difficult to analyze so let's start with a simple method that leverages the fact that the",
    "start": "1125309",
    "end": "1131940"
  },
  {
    "text": "OS X loader natively supports encrypted binaries this is a cool feature Apple",
    "start": "1131940",
    "end": "1137009"
  },
  {
    "text": "actually makes use of this to protect some of their applications I think finder the doc maybe iTunes but",
    "start": "1137009",
    "end": "1143960"
  },
  {
    "text": "it's a static encryption key which we can see on the screen and it's also a symmetrical encryption algorithm so that",
    "start": "1143960",
    "end": "1149730"
  },
  {
    "text": "means we can write our own custom and krypter and then encrypt custom binaries",
    "start": "1149730",
    "end": "1154820"
  },
  {
    "text": "so that's exactly what I did I wrote a little encrypter that can take any compiled mokou binary can be a malicious",
    "start": "1154820",
    "end": "1160950"
  },
  {
    "text": "one or not at the top you see when I run strings on the unencrypted binary we can see kind of exactly what it's doing",
    "start": "1160950",
    "end": "1166889"
  },
  {
    "text": "I then encrypt it with this custom encryptor again uses Blowfish and that static encryption key and then again we",
    "start": "1166889",
    "end": "1173730"
  },
  {
    "text": "run strings on it we can see that everything's hidden I tested this also on some known malware and got about a 50% drop in detection all right so that",
    "start": "1173730",
    "end": "1182220"
  },
  {
    "text": "technique is great it's free and easy it's free in the sense that OSX understands that so you don't have to",
    "start": "1182220",
    "end": "1187500"
  },
  {
    "text": "write a custom loader but since it's a symmetrical encryption scheme with a static key this also means analysis tools can decrypt this as well",
    "start": "1187500",
    "end": "1194200"
  },
  {
    "text": "and this is why we only got a 50% detection drop not 100% so let's talk a little bit now about a conscription",
    "start": "1194200",
    "end": "1201159"
  },
  {
    "text": "scheme that's a little stronger and that will cryptographically tie the malware to the target that it's infected",
    "start": "1201159",
    "end": "1207370"
  },
  {
    "text": "this is in my opinion a really good idea because the way most malware is detected these days is not initially by the",
    "start": "1207370",
    "end": "1212889"
  },
  {
    "text": "antivirus products you see the reports that it's like user uploaded an unknown file the virus total and then two months",
    "start": "1212889",
    "end": "1218980"
  },
  {
    "text": "later the AV guys did some more intense analysis on it and figured out oh this",
    "start": "1218980",
    "end": "1223990"
  },
  {
    "text": "is actually malware now if we've tied or encrypted our malware directly to that target this",
    "start": "1223990",
    "end": "1229330"
  },
  {
    "text": "would prevent hopefully that kind of attack because we can ensure that the binary cannot be decrypted or executed",
    "start": "1229330",
    "end": "1235419"
  },
  {
    "text": "on a secondary system so how does one go about doing this well there's a public research paper that was published in the",
    "start": "1235419",
    "end": "1241179"
  },
  {
    "text": "mid-90s that describes some mathematical constructs about how to do this I'm not gonna go through all of them but",
    "start": "1241179",
    "end": "1246399"
  },
  {
    "text": "basically I'll just describe the way it works so when malware gets this to a system that it wants to infect it has a custom",
    "start": "1246399",
    "end": "1252340"
  },
  {
    "text": "installer and the installer basically queries the environment to get some environmental observation this could be",
    "start": "1252340",
    "end": "1258490"
  },
  {
    "text": "like the UUID of the Mac computer that it's on it then uses this as the",
    "start": "1258490",
    "end": "1263799"
  },
  {
    "text": "encryption key and encrypts the persistent component of the binary and then hashes that encryption key and jams",
    "start": "1263799",
    "end": "1269799"
  },
  {
    "text": "that into the malware and then the installer self deletes now every time the malware is run its main component is",
    "start": "1269799",
    "end": "1277000"
  },
  {
    "text": "encrypted with that UUID and it has that embedded hash so it has a little loader stub that will require you that's",
    "start": "1277000",
    "end": "1283480"
  },
  {
    "text": "environment and says hey what's the UUID it gets the UUID of the system it's executing on hashes that and then",
    "start": "1283480",
    "end": "1290139"
  },
  {
    "text": "compares that to its embedded hash if that embedded hash matches it knows that it has the correct UUID now think about",
    "start": "1290139",
    "end": "1297610"
  },
  {
    "text": "this if this malware has ever executed on a different system the UUID it gets is not when it hashes that hash is not",
    "start": "1297610",
    "end": "1304029"
  },
  {
    "text": "gonna match the embedded hash so this is why the malware is called clueless because the Malheur doesn't actually know what its encryption key is it knows",
    "start": "1304029",
    "end": "1310870"
  },
  {
    "text": "how to find it and and detect when it's the correct one but if an analyst can't predict what the original UUID was they",
    "start": "1310870",
    "end": "1317679"
  },
  {
    "text": "can't decrypt that malware sample now this is not necessarily a novel concept we see this used on the window side of",
    "start": "1317679",
    "end": "1323650"
  },
  {
    "text": "the house and again in my my understand this is a very powerful technique",
    "start": "1323650",
    "end": "1328710"
  },
  {
    "start": "1328000",
    "end": "1363000"
  },
  {
    "text": "alright so now you have this custom environmentally encrypted blob that you're either in storing all in the file system encrypted or you're downloading",
    "start": "1328710",
    "end": "1335050"
  },
  {
    "text": "just in time from a commanding control server either way you're gonna have to write a custom loader because OSX is",
    "start": "1335050",
    "end": "1341380"
  },
  {
    "text": "obviously not going to be able to automatically execute this binary now normally if you have to write a custom motor you've got your work cut out for",
    "start": "1341380",
    "end": "1347620"
  },
  {
    "text": "you so some of us have probably written PE loaders for Windows malware or shell code you got to do a bunch of things",
    "start": "1347620",
    "end": "1353710"
  },
  {
    "text": "like mapping the image loading dependencies linking stuff in this is pain in the button turns out though that",
    "start": "1353710",
    "end": "1360190"
  },
  {
    "text": "OS X supports loading of an in-memory file image which is great so basically",
    "start": "1360190",
    "end": "1365320"
  },
  {
    "start": "1363000",
    "end": "1398000"
  },
  {
    "text": "what the malware can do is has a little stub loader that requires the environment it's in the correct environment it will decrypt itself but",
    "start": "1365320",
    "end": "1372100"
  },
  {
    "text": "then it just still has this flat file image that's in memory that needs to be mapped linked loaded",
    "start": "1372100",
    "end": "1377140"
  },
  {
    "text": "luckily OS X can handle such a flat file image even if it's memory so we just",
    "start": "1377140",
    "end": "1382480"
  },
  {
    "text": "basically call some OS X api's on this and OS X will load and execute it just",
    "start": "1382480",
    "end": "1388090"
  },
  {
    "text": "as if it loaded it off the file system Apple used to host some sample code showing this they don't anymore but if",
    "start": "1388090",
    "end": "1394420"
  },
  {
    "text": "you Google memory based bundle you can find the source code how to do that another self-defense technique is hiding",
    "start": "1394420",
    "end": "1401290"
  },
  {
    "start": "1398000",
    "end": "1454000"
  },
  {
    "text": "die lips I've seen windows malware do this but I haven't seen this down on OS X and when I googled this I didn't find",
    "start": "1401290",
    "end": "1407290"
  },
  {
    "text": "any public research discussing this technique turns out it's actually pretty easy to achieve basic hiding in short",
    "start": "1407290",
    "end": "1413590"
  },
  {
    "text": "there's in process structures that describe all the die libs that are loaded within a process so tools such as",
    "start": "1413590",
    "end": "1420070"
  },
  {
    "text": "debuggers query these in process data structures to get a list of what's loaded so a dialog can do or an external",
    "start": "1420070",
    "end": "1428170"
  },
  {
    "text": "process is simply modify these structures and basically unlink the dialog from the list and this is exactly",
    "start": "1428170",
    "end": "1434350"
  },
  {
    "text": "what we do we have a little unlink Die Lib tool that we execute and it will basically just remove the die lip from",
    "start": "1434350",
    "end": "1439990"
  },
  {
    "text": "the array of loaded die lives and then when we use the debugger such as ll DB to query that and say hey what daya",
    "start": "1439990",
    "end": "1446290"
  },
  {
    "text": "lives are loaded I think there's something malicious maybe in here ll DB won't see the die Lib and won't return",
    "start": "1446290",
    "end": "1451330"
  },
  {
    "text": "it so again just increases the stealth now there's definitely a myriad of other",
    "start": "1451330",
    "end": "1456930"
  },
  {
    "start": "1454000",
    "end": "1506000"
  },
  {
    "text": "ideas that malware could use to protect or defend itself I just want to briefly mention two more first thing we want to",
    "start": "1456930",
    "end": "1463560"
  },
  {
    "text": "do is make the malware harder to delete as I mentioned most OSX malware standalone and if a user or an",
    "start": "1463560",
    "end": "1469500"
  },
  {
    "text": "anti-virus product detects it they can just delete it type RM pop it to a root console you know delete it it's really",
    "start": "1469500",
    "end": "1475410"
  },
  {
    "text": "really trivial to disinfect well it turns out there's this command the change flag command that you can actually make a file undeletable unless",
    "start": "1475410",
    "end": "1483660"
  },
  {
    "text": "the user manually boots into single user mode and executes there so this is what we do you can see we first execute that",
    "start": "1483660",
    "end": "1489360"
  },
  {
    "text": "command on our malicious die lid and then we're still in the same session we just set this flag but we can't now",
    "start": "1489360",
    "end": "1494820"
  },
  {
    "text": "unset that flag or delete that binary so this again complicates complicates",
    "start": "1494820",
    "end": "1500040"
  },
  {
    "text": "deletion and it probably prevents an anti-virus product from automatically deleting them our another self-defense",
    "start": "1500040",
    "end": "1507330"
  },
  {
    "start": "1506000",
    "end": "1599000"
  },
  {
    "text": "mechanism is self monitoring the worst thing that can happen to a piece of malware is it's compromised so malware",
    "start": "1507330",
    "end": "1513300"
  },
  {
    "text": "should know if it's been detected as I mentioned the way most malware is found is a user finds some weird or suspicious",
    "start": "1513300",
    "end": "1519540"
  },
  {
    "text": "file and uploads it to virustotal copies it to a USB stick and then passes it off to analysis malware should know if this",
    "start": "1519540",
    "end": "1527400"
  },
  {
    "text": "has happened right it's running on the system where that happened usually so you can use dtrace or FS feds",
    "start": "1527400",
    "end": "1533370"
  },
  {
    "text": "to monitor filesystem access so you can see if someone's making a copy of you to a USB stick or even poking around in the",
    "start": "1533370",
    "end": "1539970"
  },
  {
    "text": "directory where you live you can also monitor the network and see hey I'm am I being uploaded to virustotal",
    "start": "1539970",
    "end": "1546090"
  },
  {
    "text": "and then if you detect any of these events like blow up the computer or at least format the hard drive or something",
    "start": "1546090",
    "end": "1551250"
  },
  {
    "text": "because this will basically prevent you from being more detected another idea I",
    "start": "1551250",
    "end": "1556590"
  },
  {
    "text": "think would be really cool is to as a malware author register a hash of your binary with Google as an add word",
    "start": "1556590",
    "end": "1563630"
  },
  {
    "text": "probably also register a whole bunch of benign hashes as well to kind of blend in as a mal want analysts the first",
    "start": "1563630",
    "end": "1569820"
  },
  {
    "text": "thing I do whenever I get a malicious sample is at Google the hash because I want to see this virus total know about this",
    "start": "1569820",
    "end": "1575010"
  },
  {
    "text": "just someone written an analysis support we as now our analysts use hashes as a way to identify samples",
    "start": "1575010",
    "end": "1580590"
  },
  {
    "text": "now if the malware author had registered the hash of his or her malware as a google adword they would get an alert",
    "start": "1580590",
    "end": "1587520"
  },
  {
    "text": "that I just google that so this would be a great early warning system for them they could then you know maybe start",
    "start": "1587520",
    "end": "1593340"
  },
  {
    "text": "building a new piece of malware disinfect their targets or send some assassins after me or something all",
    "start": "1593340",
    "end": "1600030"
  },
  {
    "text": "right so what about some specific features or capabilities as I mentioned current malware has sufficient features",
    "start": "1600030",
    "end": "1605520"
  },
  {
    "text": "to get the job done but I want to talk about one feature that's pretty powerful that I feel is underutilized and that's",
    "start": "1605520",
    "end": "1611790"
  },
  {
    "text": "process injection so we're gonna start with looking at run time process objection basically we want to be able",
    "start": "1611790",
    "end": "1617610"
  },
  {
    "text": "to inject code a dial it into an arbitrary remote process now the reason",
    "start": "1617610",
    "end": "1623190"
  },
  {
    "text": "we talked about this is the public samples that are out there they're either a little outdated or they're intentionally broken so let's talk about",
    "start": "1623190",
    "end": "1630540"
  },
  {
    "start": "1629000",
    "end": "1661000"
  },
  {
    "text": "exactly how we can do runtime process injection so the first thing is you have to know the architecture of the target",
    "start": "1630540",
    "end": "1637590"
  },
  {
    "text": "process this is operationally very important if you try to inject 64-bit code into a 32-bit process or vice-versa",
    "start": "1637590",
    "end": "1644040"
  },
  {
    "text": "it's gonna end or ibly most people don't talk about this but practically this is a very important step it turns out it's",
    "start": "1644040",
    "end": "1650700"
  },
  {
    "text": "actually pretty easy to figure out what the remote architecture is you call the proc Pig info function and this will",
    "start": "1650700",
    "end": "1656400"
  },
  {
    "text": "return a structure that has a flag set to 64-bit or 32-bit so now now you know",
    "start": "1656400",
    "end": "1662520"
  },
  {
    "start": "1661000",
    "end": "1711000"
  },
  {
    "text": "what the architecture of the target remote process is you can start crafting",
    "start": "1662520",
    "end": "1667530"
  },
  {
    "text": "some shell code a shell code could do pretty much anything this is some simple shell code from the Mac OSX internals",
    "start": "1667530",
    "end": "1673830"
  },
  {
    "text": "website it does three things first thing that calls pthread set self and this promotes the injected",
    "start": "1673830",
    "end": "1680100"
  },
  {
    "text": "thread which is going to be an injected mock thread to a fully compliant pea thread and the reason you do this is",
    "start": "1680100",
    "end": "1685710"
  },
  {
    "text": "api's within the remote process or gonna expect your thread to be a pea thread not just the mock thread so you have to",
    "start": "1685710",
    "end": "1691140"
  },
  {
    "text": "do this otherwise your shell code is gonna mysteriously crash it then calls DL open to pull in and attackers die",
    "start": "1691140",
    "end": "1698850"
  },
  {
    "text": "live into the context of the target process this is essentially like calling load library on Windows and then the",
    "start": "1698850",
    "end": "1704760"
  },
  {
    "text": "shell code just sleeps it assumes that the malicious die Lib which is now in the remote process will do whatever it",
    "start": "1704760",
    "end": "1710070"
  },
  {
    "text": "needs to do so to actually inject and execute the shell code you do five things the first thing you have to do is",
    "start": "1710070",
    "end": "1716340"
  },
  {
    "start": "1711000",
    "end": "1753000"
  },
  {
    "text": "call task for pit and this gives you access rights to the remote process now you have to be",
    "start": "1716340",
    "end": "1721500"
  },
  {
    "text": "to do this so there's not really too much of a security issue unless we can get route and we'll talk about then in a",
    "start": "1721500",
    "end": "1726570"
  },
  {
    "text": "sec once you have route and you call task for it you can now start injecting code",
    "start": "1726570",
    "end": "1731640"
  },
  {
    "text": "allocating memory so the first thing you do is you allocate two chunks of memory one for the stack of the remote thread",
    "start": "1731640",
    "end": "1738000"
  },
  {
    "text": "you're gonna create and then one for the actual shellcode you then call VM right to copy in the shellcode you set it to",
    "start": "1738000",
    "end": "1744450"
  },
  {
    "text": "be executable and then you simply call thread create running which is synonymous to create remote thread on",
    "start": "1744450",
    "end": "1750180"
  },
  {
    "text": "Windows and will start a new thread at your shellcode so runtime code injection",
    "start": "1750180",
    "end": "1755850"
  },
  {
    "start": "1753000",
    "end": "1795000"
  },
  {
    "text": "is nice because it allows you to target arbitrary process but it does have some downsides so first you need an external",
    "start": "1755850",
    "end": "1761310"
  },
  {
    "text": "monitoring component that's ready running so say you want to inject into the user's browser you have to have some",
    "start": "1761310",
    "end": "1766590"
  },
  {
    "text": "piece of malware that's already running on the system that's waiting for the browser and then triggers the injection so this should means more things that",
    "start": "1766590",
    "end": "1772200"
  },
  {
    "text": "you can detect it's also a touch complex you know you do shell code stuff like that and finally it's easy in my opinion",
    "start": "1772200",
    "end": "1778800"
  },
  {
    "text": "to detect you know process a shouldn't generally be creating remote threads and process B so let's look at load time",
    "start": "1778800",
    "end": "1786000"
  },
  {
    "text": "injection so we can use dial-up hijack and to gain load time code execution whenever a vulnerable application starts",
    "start": "1786000",
    "end": "1792600"
  },
  {
    "text": "by simply dropping a malicious dilate so let's look at Xcode I thought Xcode which is Apple's IDE",
    "start": "1792600",
    "end": "1799320"
  },
  {
    "start": "1795000",
    "end": "1836000"
  },
  {
    "text": "would make an attractive target for Bower no malware could use this as an autonomous propagation vector right if",
    "start": "1799320",
    "end": "1805890"
  },
  {
    "text": "it's chilling in Xcode and it sees the developer building a release version of the binary to ship out the malware could",
    "start": "1805890",
    "end": "1811890"
  },
  {
    "text": "just inject some malicious code at the source code or a compiler level that's a really super salty way for it to",
    "start": "1811890",
    "end": "1817160"
  },
  {
    "text": "automatically propagate turns out that Xcode is vulnerable to a dilated Jack attack so we can simply drop a malicious",
    "start": "1817160",
    "end": "1824400"
  },
  {
    "text": "dialogue to the file system and now every time xqo starts our malicious dialogue will get automatically loaded",
    "start": "1824400",
    "end": "1830370"
  },
  {
    "text": "and executed by the loader within the context of Xcode now you can have the",
    "start": "1830370",
    "end": "1837990"
  },
  {
    "text": "most sophisticated malware in the world but if it gets caught who's game over it's like the worst thing that can",
    "start": "1837990",
    "end": "1843240"
  },
  {
    "text": "happen for the malware so I want to talk about bypassing some security mechanisms that either detect or prevent malware",
    "start": "1843240",
    "end": "1850590"
  },
  {
    "text": "and then talk about how we can bypass there so current OSX malware is did or blocked by these security",
    "start": "1850590",
    "end": "1856920"
  },
  {
    "text": "mechanisms I'm gonna start by talking about apples I think this is really lame Apple loves us though they love to tout",
    "start": "1856920",
    "end": "1863280"
  },
  {
    "text": "you know hey our security mechanisms are awesome they'll protect you but I'll show you we can bypass all of them so I",
    "start": "1863280",
    "end": "1869580"
  },
  {
    "text": "think this exudes a false sense of security so let's start with talking",
    "start": "1869580",
    "end": "1874860"
  },
  {
    "start": "1873000",
    "end": "1896000"
  },
  {
    "text": "about gatekeeper remember I mentioned that pretty much a lot of software is downloaded over HTTP they all count on",
    "start": "1874860",
    "end": "1880860"
  },
  {
    "text": "gatekeeper to verify that the software has not been modified in transit that the digital signature is still valid",
    "start": "1880860",
    "end": "1886740"
  },
  {
    "text": "gatekeeper also blocks unsigned Dynel download so it does protect you know the",
    "start": "1886740",
    "end": "1891900"
  },
  {
    "text": "dumb user who's gonna think the flash installer is really flash installer so how does gatekeeper work well basically",
    "start": "1891900",
    "end": "1898260"
  },
  {
    "start": "1896000",
    "end": "1922000"
  },
  {
    "text": "any any time you download something from the internet it gets tagged with this quarantine attribute and then when the",
    "start": "1898260",
    "end": "1904050"
  },
  {
    "text": "application that was downloaded is run either automatically by the operating system or the user double-click sit",
    "start": "1904050",
    "end": "1911250"
  },
  {
    "text": "gatekeeper kind of jumps in the way and says hey wait a minute this was downloaded I gotta verify it and make",
    "start": "1911250",
    "end": "1916530"
  },
  {
    "text": "sure that it's signed it hasn't been modified in transit and it actually does a decent job turns out though that",
    "start": "1916530",
    "end": "1923610"
  },
  {
    "start": "1922000",
    "end": "1960000"
  },
  {
    "text": "gatekeeper only verifies the downloaded application it does not verify external content which is normally not a problem",
    "start": "1923610",
    "end": "1931410"
  },
  {
    "text": "unless the application that was downloaded has an external relative reference to some content that it loads",
    "start": "1931410",
    "end": "1938430"
  },
  {
    "text": "so what we can do to bypass gatekeeper is well three easy steps first we find an apple sign or Mac App Store app that",
    "start": "1938430",
    "end": "1946050"
  },
  {
    "text": "contains an external relative reference to a hijack abode eyelid then we create a dmg or zip file image or we could also",
    "start": "1946050",
    "end": "1952680"
  },
  {
    "text": "inject this into a legitimate software download if we have Network level access and then we kind of laugh at Apple so",
    "start": "1952680",
    "end": "1961230"
  },
  {
    "start": "1960000",
    "end": "1986000"
  },
  {
    "text": "this is how it all kind of works again we have gatekeeper set to the Mac setting saying only allow code from the Mac App",
    "start": "1961230",
    "end": "1966780"
  },
  {
    "text": "Store we then build this malicious dmg file we control the icon the name the",
    "start": "1966780",
    "end": "1973890"
  },
  {
    "text": "background so we can make it look however we want so hidden behind this is an apple signed application that has an",
    "start": "1973890",
    "end": "1980670"
  },
  {
    "text": "external reference to some code that we can actually load so if the user double",
    "start": "1980670",
    "end": "1986730"
  },
  {
    "start": "1986000",
    "end": "2016000"
  },
  {
    "text": "clicks this they will still get a standard pop up because the content was downloaded from the internet now this is a generic pop-up that will occur for any software",
    "start": "1986730",
    "end": "1994139"
  },
  {
    "text": "you download from the internet so even if it was a signed version of same Google Chrome you would get the same pop",
    "start": "1994139",
    "end": "1999210"
  },
  {
    "text": "up note though we have it's saying only allow code from the Mac App Store we have unsigned malicious dialogues in",
    "start": "1999210",
    "end": "2005330"
  },
  {
    "text": "here that should not get loaded and executed but because of this vulnerability they do so I reported to",
    "start": "2005330",
    "end": "2010519"
  },
  {
    "text": "Apple they patched it but as we'll see at the end we can still get around apples patch as well so I talked about X",
    "start": "2010519",
    "end": "2018470"
  },
  {
    "start": "2016000",
    "end": "2037000"
  },
  {
    "text": "protected X protect is Apple's built-in antivirus product do you guys know that there's actually a built-in antivirus into Mac it does a decent job detecting",
    "start": "2018470",
    "end": "2026599"
  },
  {
    "text": "or blocking known malware so here we can see when a user tries to download an",
    "start": "2026599",
    "end": "2031999"
  },
  {
    "text": "application that has I worm it'll pop up and say hey I alarms in this Mac allow you to run this well it turns out it's a",
    "start": "2031999",
    "end": "2039229"
  },
  {
    "text": "very very basic antivirus tool that's based on signatures such as files and hashes so here we can see this is the",
    "start": "2039229",
    "end": "2045590"
  },
  {
    "text": "actual signature for I worm it's based on a hash and a file name this is really",
    "start": "2045590",
    "end": "2050929"
  },
  {
    "start": "2050000",
    "end": "2065000"
  },
  {
    "text": "lame because this means we can simply recompile the malware which will give it a new hash or if we're writing new",
    "start": "2050929",
    "end": "2057049"
  },
  {
    "text": "malware we don't have to worry about this at all or in this case if we actually just rename the malware it's not gonna get detected anymore so",
    "start": "2057049",
    "end": "2063260"
  },
  {
    "text": "trivial to bypass Apple has a sandbox that sandbox code from the Mac App Store",
    "start": "2063260",
    "end": "2069500"
  },
  {
    "start": "2065000",
    "end": "2093000"
  },
  {
    "text": "in some of its native apps this is again as a good idea because if these apps are malicious or get exploited the attacker",
    "start": "2069500",
    "end": "2075200"
  },
  {
    "text": "then has to break out of the sandbox in order to do anything useful turns out though that while conceptually this is",
    "start": "2075200",
    "end": "2080960"
  },
  {
    "text": "pretty strong our friends at Google or finding tons of OS X bugs as are some",
    "start": "2080960",
    "end": "2086750"
  },
  {
    "text": "other researchers that can't escape the sandbox so I really don't think this is an obstacle for any advanced adversaries",
    "start": "2086750",
    "end": "2093520"
  },
  {
    "start": "2093000",
    "end": "2120000"
  },
  {
    "text": "all right what about kernel code signing requirements so to protect the kernel",
    "start": "2093520",
    "end": "2098690"
  },
  {
    "text": "from malicious code for example rootkits or modified kernel extensions that have been infected starting with Mavericks",
    "start": "2098690",
    "end": "2104780"
  },
  {
    "text": "all kernel extensions have to be signed if you try to load an unsigned kernel extension or infect an existing kernel",
    "start": "2104780",
    "end": "2110869"
  },
  {
    "text": "extension it's gonna fail now this is not actually a novel security idea Windows has been doing this for years",
    "start": "2110869",
    "end": "2117140"
  },
  {
    "text": "and it's actually in my opinion a decent yeah turns out though that the signature",
    "start": "2117140",
    "end": "2122310"
  },
  {
    "text": "validation is done in user mode this is a total fail because we have a local attacker or some local malware that's",
    "start": "2122310",
    "end": "2128910"
  },
  {
    "text": "trying to load the kernel extension into ring zero so it's at the same level privilege wise as the kernel extension",
    "start": "2128910",
    "end": "2135660"
  },
  {
    "text": "signature checks so obviously an attacker can subvert these checks and load unsigned code there's a variety of",
    "start": "2135660",
    "end": "2141360"
  },
  {
    "start": "2140000",
    "end": "2178000"
  },
  {
    "text": "ways to do this I think the easiest way is there's this utility called Dex load Tex load basically talks to this daemon",
    "start": "2141360",
    "end": "2147660"
  },
  {
    "text": "and loads kernel extension after the daemon verifies the signature we just unload that kernel daemon hex load will",
    "start": "2147660",
    "end": "2154710"
  },
  {
    "text": "try to load the extension directly itself since an open source tool we can download that download that tool just",
    "start": "2154710",
    "end": "2160980"
  },
  {
    "text": "comment out the signature check and now we have this custom kernel extension loader that will load unsigned kernel",
    "start": "2160980",
    "end": "2166800"
  },
  {
    "text": "extensions obviously you can also directly talk to the sis call interfaces in the kernel because those aren't doing",
    "start": "2166800",
    "end": "2172350"
  },
  {
    "text": "any checks either but Apple provides a nice utility that we can use so again trivial to load unsigned kernel extensions now for some",
    "start": "2172350",
    "end": "2180150"
  },
  {
    "start": "2178000",
    "end": "2236000"
  },
  {
    "text": "of these bypasses for example to load a kernel extension you need route all turns out really not that hard to get",
    "start": "2180150",
    "end": "2186030"
  },
  {
    "text": "root on OS X there's this great bug called root pipe that was I believe introduced in the inception of OS 10 so",
    "start": "2186030",
    "end": "2193020"
  },
  {
    "text": "all the way back in 2001 I was recently found by this guy named Emil Apple patched it and took me like 10 minutes",
    "start": "2193020",
    "end": "2199830"
  },
  {
    "text": "to bypass apples patch and that's not saying like I'm all skill is just like apples passions really really bad so",
    "start": "2199830",
    "end": "2206520"
  },
  {
    "text": "again this provide a trivial way for any local attacker to get root on a OS X box actually giving another DEF CON talk",
    "start": "2206520",
    "end": "2212580"
  },
  {
    "text": "about the details of this vulnerability how is able to bypass the patch so if this is interest interesting you check",
    "start": "2212580",
    "end": "2218760"
  },
  {
    "text": "out this talk as well it turns out about a week ago Stephan released another bug that is",
    "start": "2218760",
    "end": "2224940"
  },
  {
    "text": "fully unpacked that again provides local adversaries or malware the ability to get root and yesterday we actually solve",
    "start": "2224940",
    "end": "2231240"
  },
  {
    "text": "some new malware that started using this in the wild so again getting root really not that complicated so in my opinion",
    "start": "2231240",
    "end": "2237900"
  },
  {
    "start": "2236000",
    "end": "2247000"
  },
  {
    "text": "apples built-in malware mitigations kind of a joke so what about third-party ones well these are the guys that charge",
    "start": "2237900",
    "end": "2243990"
  },
  {
    "text": "you money and have one job to protect you so let's see how they do well it turns out that most of them are based on",
    "start": "2243990",
    "end": "2250500"
  },
  {
    "start": "2247000",
    "end": "2267000"
  },
  {
    "text": "static signatures so again you you compile your malware or just write new malware they're not going to detect",
    "start": "2250500",
    "end": "2255720"
  },
  {
    "text": "you at all some though are more behavioral based so they're more agnostic towards now where for example",
    "start": "2255720",
    "end": "2261690"
  },
  {
    "text": "Little Snitch you know blocks untrusted connections so we have to look at these a little closer and see how they work so a little snitch",
    "start": "2261690",
    "end": "2268230"
  },
  {
    "start": "2267000",
    "end": "2282000"
  },
  {
    "text": "is the de facto personal firewall and seeks to block untrusted connections from our this is problematic because",
    "start": "2268230",
    "end": "2274680"
  },
  {
    "text": "malware is obviously going to be untrusted so when it tries to connect to its command and control server little snitch will pop up and block it so we",
    "start": "2274680",
    "end": "2280770"
  },
  {
    "text": "want to bypass that turns out Little Snitch takes a binary approach it trusts",
    "start": "2280770",
    "end": "2286140"
  },
  {
    "start": "2282000",
    "end": "2320000"
  },
  {
    "text": "known processes and also allows users to create blanket rules so on my box GPG",
    "start": "2286140",
    "end": "2291480"
  },
  {
    "text": "keychain is trusted and it's allowed to talk to the Internet this makes sense it's a signed application and need to talk to key servers check for updates",
    "start": "2291480",
    "end": "2298050"
  },
  {
    "text": "turns out though that gbgt chain is vulnerable to a dial-up hijack attack so what we can do is simply plant a",
    "start": "2298050",
    "end": "2303600"
  },
  {
    "text": "malicious tie Lib and then programmatically execute GPG keychain or wait for the user to execute it and then",
    "start": "2303600",
    "end": "2309000"
  },
  {
    "text": "our malicious dialog will get executed and loaded within the context of gbgt chain it can then talk to the internet",
    "start": "2309000",
    "end": "2315000"
  },
  {
    "text": "and as far as Little Snitch is concerned it says oh this is coming from GPG keychain I trust that no problem a more",
    "start": "2315000",
    "end": "2321660"
  },
  {
    "start": "2320000",
    "end": "2351000"
  },
  {
    "text": "generic bypass though we see little snitch has an undeletable system rule that says anybody can talk to iCloud",
    "start": "2321660",
    "end": "2327540"
  },
  {
    "text": "even if you're unsigned even if you're untrusted even if your malware just gonna let you talk to that endpoint I",
    "start": "2327540",
    "end": "2333000"
  },
  {
    "text": "guess they thought computers are normally only synced to one account so I reverse engineered the iCloud protocol",
    "start": "2333000",
    "end": "2338100"
  },
  {
    "text": "and set up a command and control server on another iCloud account and then wrote some malware that was able to talk to",
    "start": "2338100",
    "end": "2344010"
  },
  {
    "text": "that little snitch you know sees it says oh you're talking to iCloud no problem lets you out know pop up so to test",
    "start": "2344010",
    "end": "2352290"
  },
  {
    "start": "2351000",
    "end": "2393000"
  },
  {
    "text": "Apple and third-party security products I created some proof-of-concept malware it's not the most sophisticated malware",
    "start": "2352290",
    "end": "2358290"
  },
  {
    "text": "but it's pretty simple and I think it represents what most malware generally does which is persist X fill and",
    "start": "2358290",
    "end": "2365220"
  },
  {
    "text": "download next so it's distributed as emotions dmg or zip file this could also be injected into a legitimate download",
    "start": "2365220",
    "end": "2371370"
  },
  {
    "text": "download it uses the gatekeeper bypass I described to bypass the gatekeeper and",
    "start": "2371370",
    "end": "2377460"
  },
  {
    "text": "avoid the popups to execute unsigned code it then persists as the dial-up hijack so every time the computer has",
    "start": "2377460",
    "end": "2382680"
  },
  {
    "text": "restarted the code gets automatically execute X Ville some users and then downloads and executes the",
    "start": "2382680",
    "end": "2388109"
  },
  {
    "text": "command you also don't need root to install this malware although as I showed pretty easy to get root so the",
    "start": "2388109",
    "end": "2394890"
  },
  {
    "start": "2393000",
    "end": "2442000"
  },
  {
    "text": "test in my opinion was fairly realistic I downloaded all the traditional OSX security tools I could find to make sure",
    "start": "2394890",
    "end": "2400230"
  },
  {
    "text": "they were all up-to-date and again they were all downloaded over HTTP so I guess I could have been opening myself up to",
    "start": "2400230",
    "end": "2405480"
  },
  {
    "text": "infection at the same time I then ran the downloaded unsafe GM dmg file and",
    "start": "2405480",
    "end": "2411690"
  },
  {
    "text": "basically said do these any of these AV products detect any component of the attack so I try to skew the attack to",
    "start": "2411690",
    "end": "2418440"
  },
  {
    "text": "test towards these antivirus products which you have to pay for and basically said if they detect the persistence the",
    "start": "2418440",
    "end": "2425640"
  },
  {
    "text": "exfiltration the download the execute any component of this this was fail for the Mauer and a win for the antivirus",
    "start": "2425640",
    "end": "2432089"
  },
  {
    "text": "product really not too surprising here for me though none of them detected any of this so this is my opinion kind of",
    "start": "2432089",
    "end": "2438810"
  },
  {
    "text": "shows the ineptitude of of this industry sweet alright so let's talk about some",
    "start": "2438810",
    "end": "2444329"
  },
  {
    "start": "2442000",
    "end": "2515000"
  },
  {
    "text": "defense I'm convinced that OS X security is lacking and hopefully I've conveyed that to you as well you know as public",
    "start": "2444329",
    "end": "2450570"
  },
  {
    "text": "oh days there's weak weak malware mitigations and it's trivial to write new or improved OSX malware that can",
    "start": "2450570",
    "end": "2457530"
  },
  {
    "text": "pretty much bypass everything generically so these things scare me because I love my Mac computer and I",
    "start": "2457530",
    "end": "2463020"
  },
  {
    "text": "don't want to get hacked you know I've definitely drank the apple juice I love my Apple products I love Apple I don't",
    "start": "2463020",
    "end": "2470490"
  },
  {
    "text": "think they love me but I can I can handle that so I wanted to be part of the solution and help fellow Mac users",
    "start": "2470490",
    "end": "2476970"
  },
  {
    "text": "so I decided I should write some OSX security tools selfishly to protect my Mac but then give them away for free now",
    "start": "2476970",
    "end": "2483839"
  },
  {
    "text": "apparently this is a novel concept to the edge virus companies but don't listen to them I think they just want",
    "start": "2483839",
    "end": "2490109"
  },
  {
    "text": "your money and as we see they're pretty easy to to get around as well so my side",
    "start": "2490109",
    "end": "2495270"
  },
  {
    "text": "hobby I have a little OSX security website with some free tools there's also a malware collection that has all",
    "start": "2495270",
    "end": "2500400"
  },
  {
    "text": "the samples that I talked about in this presentation the 80 guys don't really like to share so I've try to collect",
    "start": "2500400",
    "end": "2506790"
  },
  {
    "text": "these together so if you guys want to play at home feel free and then also I wrote some tools that can protect your",
    "start": "2506790",
    "end": "2512010"
  },
  {
    "text": "Mac again all totally free so I briefly just want to talk about so the first tool is knock-knock it has",
    "start": "2512010",
    "end": "2518020"
  },
  {
    "start": "2515000",
    "end": "2534000"
  },
  {
    "text": "a simple goal when I say knock knock I want it to tell me who's there basically what's persistent on my Mac so you can",
    "start": "2518020",
    "end": "2524319"
  },
  {
    "text": "see we're gonna list things like launch items kernel extensions login items conceptually very similar to auto runs",
    "start": "2524319",
    "end": "2530559"
  },
  {
    "text": "on Windows although in my opinion this looks way better my favorite feature though is the virus",
    "start": "2530559",
    "end": "2536650"
  },
  {
    "start": "2534000",
    "end": "2570000"
  },
  {
    "text": "total integration since knock-knock doesn't have a concept of malware it just shows you what is persistent it's",
    "start": "2536650",
    "end": "2543490"
  },
  {
    "text": "really nice to have something that can detect known malware so with the virus total integration it can do exactly that it can tell you if something is known",
    "start": "2543490",
    "end": "2549880"
  },
  {
    "text": "malware it can tell you if a file is appears to be clean you can also tell you if this file has never been seen",
    "start": "2549880",
    "end": "2555069"
  },
  {
    "text": "before which may be suspicious or interesting besides detecting malware you can also submit on unknown files rescan view the",
    "start": "2555069",
    "end": "2562930"
  },
  {
    "text": "report now the only limitation or perhaps downside of knock-knock is its reactive you have to manually run it it",
    "start": "2562930",
    "end": "2569230"
  },
  {
    "text": "doesn't provide real-time protection so I wanted to write something that provided real-time protection so I wrote",
    "start": "2569230",
    "end": "2574420"
  },
  {
    "start": "2570000",
    "end": "2623000"
  },
  {
    "text": "block block knock-knock tells you who's there block block tells you when someone moves in",
    "start": "2574420",
    "end": "2580000"
  },
  {
    "text": "basically provides continual runtime protection monitoring known persistence locations think of it almost like a",
    "start": "2580000",
    "end": "2586180"
  },
  {
    "text": "firewall for autorun locations you don't really don't get a lot of alerts unlike a firewall because there's not that much",
    "start": "2586180",
    "end": "2591549"
  },
  {
    "text": "software that's persistent so here we can see it generically blocking hacking teams implant so this implant was leaked",
    "start": "2591549",
    "end": "2599109"
  },
  {
    "text": "after I'd written this tool so it was kind of cool to see that it generically detected it and then yesterday there was",
    "start": "2599109",
    "end": "2604720"
  },
  {
    "text": "a security report that came out or a few days ago that talked about some new malware that was exploiting an unpatched O'Day to gain privilege escalations now",
    "start": "2604720",
    "end": "2611410"
  },
  {
    "text": "block walk doesn't detect the exploit it doesn't block exploits but when the malware goes to persist even though the malware is running as root and exploited",
    "start": "2611410",
    "end": "2617950"
  },
  {
    "text": "some OData get root block block again can generically protect this so not bad for free tools another tool I'm",
    "start": "2617950",
    "end": "2624460"
  },
  {
    "start": "2623000",
    "end": "2662000"
  },
  {
    "text": "releasing today is called task Explorer in my opinion it's a better activity monitor at least for security conscious",
    "start": "2624460",
    "end": "2630900"
  },
  {
    "text": "users so it's got some cool food features you can run filters like show",
    "start": "2630900",
    "end": "2635950"
  },
  {
    "text": "me all the non apple applications that are running or show me all the unsigned code that's running on my box also can",
    "start": "2635950",
    "end": "2642609"
  },
  {
    "text": "quickly show you the signing status of a file if it's signed by Apple third party or on side",
    "start": "2642609",
    "end": "2648820"
  },
  {
    "text": "it's got virustotal integration and then in the bottom pane whenever you select a task it can show you what died libs are",
    "start": "2648820",
    "end": "2655030"
  },
  {
    "text": "loaded what files are open what network connections similar again to I guess process Explorer on the windows side of",
    "start": "2655030",
    "end": "2661630"
  },
  {
    "text": "the house alright so I briefly want to end with a quick demo that hopefully drives home",
    "start": "2661630",
    "end": "2666670"
  },
  {
    "start": "2662000",
    "end": "2692000"
  },
  {
    "text": "the point that you shouldn't believe apples hype next version of OS X is called El Capitan and there's this I",
    "start": "2666670",
    "end": "2674440"
  },
  {
    "text": "don't know quote on their website sounds like it's gonna be really secure I don't",
    "start": "2674440",
    "end": "2680020"
  },
  {
    "text": "fully understand it all but I thought a good test would be to see in if an attacker could take an existing known",
    "start": "2680020",
    "end": "2685210"
  },
  {
    "text": "piece of malware and successfully target users running even on Apple's latest and",
    "start": "2685210",
    "end": "2690910"
  },
  {
    "text": "greatest operating system so a brief demo before we get started I'm going to talk about a few things first we have",
    "start": "2690910",
    "end": "2697240"
  },
  {
    "start": "2692000",
    "end": "2839000"
  },
  {
    "text": "gatekeeper enabled set to default saying only allow sign code and code from the Mac App Store knock knock is run it's",
    "start": "2697240",
    "end": "2703180"
  },
  {
    "text": "found six launch items and then we have two instances of our at the top we have the current version which we'll see X",
    "start": "2703180",
    "end": "2710380"
  },
  {
    "text": "protect and gatekeeper blocking because it's known malware we then have a second version which I have slightly modified I",
    "start": "2710380",
    "end": "2716740"
  },
  {
    "text": "don't have source code for this malware but I basically just tweaked it so that it can bypass gatekeeper again and",
    "start": "2716740",
    "end": "2722200"
  },
  {
    "text": "execute in the malware even though it's unsigned the malware is going to try to persist as a launch agent and run as a",
    "start": "2722200",
    "end": "2728500"
  },
  {
    "text": "process named Java W so I'm gonna run this video hopefully it runs showing",
    "start": "2728500",
    "end": "2735160"
  },
  {
    "text": "gatekeeper six launch items I'm gonna dump the quarantine attributes for both downloads to show that yes they were",
    "start": "2735160",
    "end": "2740560"
  },
  {
    "text": "downloaded from the internet they have this quarantine attribute set there's no processes called Java that are running",
    "start": "2740560",
    "end": "2745960"
  },
  {
    "text": "I'm gonna run the first instance and you can see that it says hey Photoshop will damage your computer it contains iron",
    "start": "2745960",
    "end": "2752080"
  },
  {
    "text": "this is X protect blocking protecting the user it is really easy to bypass that so we're just gonna concatenate a",
    "start": "2752080",
    "end": "2758380"
  },
  {
    "text": "string at the end which changes the hash we're then going to try to rerun the current version which has been modified",
    "start": "2758380",
    "end": "2763450"
  },
  {
    "text": "we get another pop up this is D keeper saying this is unsigned I'm not gonna allow you and you can just say okay it",
    "start": "2763450",
    "end": "2769690"
  },
  {
    "text": "doesn't actually run it then gonna execute the modified version this again has the unsigned version of I'll erm",
    "start": "2769690",
    "end": "2776820"
  },
  {
    "text": "gatekeeper is gonna pop up and verify it still because it's downloaded from the internet Adobe installer photo shops a big file",
    "start": "2776820",
    "end": "2783240"
  },
  {
    "text": "so it takes a while when it's done we'll still see that generic pop-up but this time it'll allow us to actually run the",
    "start": "2783240",
    "end": "2789780"
  },
  {
    "text": "code and the users just downloaded this so they're probably going to click yes they click open it's gonna finish",
    "start": "2789780",
    "end": "2794940"
  },
  {
    "text": "installing Photoshop it's gonna kick it off though we're gonna start nocknock",
    "start": "2794940",
    "end": "2801660"
  },
  {
    "text": "again - RIA numerate the launch items there's this new process running call",
    "start": "2801660",
    "end": "2807359"
  },
  {
    "text": "Java W and if we dump its code signature we can see that it is unsigned",
    "start": "2807359",
    "end": "2817339"
  },
  {
    "text": "there it is code object is not signed at all and then also nocknock has detected",
    "start": "2817339",
    "end": "2822750"
  },
  {
    "text": "a new launch item since its known malware virus total has said hey I know",
    "start": "2822750",
    "end": "2828270"
  },
  {
    "text": "about this I'm gonna flag this I can't go into details come talking to Apple about trying to get them to patch this I",
    "start": "2828270",
    "end": "2834599"
  },
  {
    "text": "didn't just like by a developer's certificate do something like lame like this anyway so that's bypassing the next",
    "start": "2834599",
    "end": "2841770"
  },
  {
    "start": "2839000",
    "end": "2880000"
  },
  {
    "text": "version of OS X that's supposed to be all secure using known OSX malware so that bothers me so a few conclusions",
    "start": "2841770",
    "end": "2848549"
  },
  {
    "text": "hopefully I showed that current OSX malware it's kind of lame come at kind of amateur but in my opinion that has",
    "start": "2848549",
    "end": "2854640"
  },
  {
    "text": "led to complacent security products both apples and third parties so my goal was to illustrate how simple it is to vastly",
    "start": "2854640",
    "end": "2861720"
  },
  {
    "text": "improve current OSX malware that that can malware that can bypass all these third-party antivirus tools firewalls",
    "start": "2861720",
    "end": "2869309"
  },
  {
    "text": "and apples built-in security mitigations so hopefully this can convince his Apple to you know up their game and these",
    "start": "2869309",
    "end": "2874770"
  },
  {
    "text": "third-party third-party companies to improve their products and in the meantime maybe check out some free security tools all right thank you for",
    "start": "2874770",
    "end": "2881579"
  },
  {
    "start": "2880000",
    "end": "3098000"
  },
  {
    "text": "your time I know I'm got a few minutes here for Q&A I also want to thank my companies Jack we do a lot of awesome",
    "start": "2881579",
    "end": "2887819"
  },
  {
    "text": "work we have a cool booth so come by say hi I'll be at the booth so you guys want to chat about more of this so you can",
    "start": "2887819",
    "end": "2895170"
  },
  {
    "text": "download the slides Twitter you know I guess we have two minutes for questions",
    "start": "2895170",
    "end": "2900180"
  },
  {
    "text": "and answers",
    "start": "2900180",
    "end": "2902869"
  },
  {
    "text": "any questions I see lots of pictures there's yes",
    "start": "2906570",
    "end": "2912900"
  },
  {
    "text": "that's a good question I will have to test that task explorer should unless they've maliciously unlinked themselves",
    "start": "2920650",
    "end": "2926420"
  },
  {
    "text": "because what it does is it queries that in process structure sorry the question was does the tool show loaded modules",
    "start": "2926420",
    "end": "2932630"
  },
  {
    "text": "that have been loaded via NS link module which is like dynamic dynamic loading so",
    "start": "2932630",
    "end": "2937970"
  },
  {
    "text": "I will test that if not that should be a fairly easy feature that so great question yes great question there are",
    "start": "2937970",
    "end": "2947780"
  },
  {
    "text": "open source versions of them that I've released again sorry question are these tools open source there's an open source",
    "start": "2947780",
    "end": "2953720"
  },
  {
    "text": "version of knock-knock and another tool called dilate hijack scanner which will enumerate hijack die libs or show you",
    "start": "2953720",
    "end": "2960440"
  },
  {
    "text": "what applications are vulnerable the UI versions are not open source though but",
    "start": "2960440",
    "end": "2965990"
  },
  {
    "text": "if you come talk to me I'm gonna actually be a blackhat Arsenal tomorrow demoing these I can show you the source code you can poke around any other",
    "start": "2965990",
    "end": "2974450"
  },
  {
    "text": "questions yes in the middle I can't here",
    "start": "2974450",
    "end": "2981740"
  },
  {
    "text": "sorry give you people one more time I'm",
    "start": "2981740",
    "end": "2990440"
  },
  {
    "text": "sorry Oh Thunder strike yeah so there's a",
    "start": "2990440",
    "end": "2997370"
  },
  {
    "text": "great talk later it looks like some of that requires initial access or you know",
    "start": "2997370",
    "end": "3004660"
  },
  {
    "text": "web-based uh vulnerability to deliver the firmware update so again if they infect you at that",
    "start": "3004660",
    "end": "3010480"
  },
  {
    "text": "level you're kind of screwed so hopefully you don't allow anyone to",
    "start": "3010480",
    "end": "3015580"
  },
  {
    "text": "have physical access to your Mac computer and hopefully if there's a web-based attack you know your updated",
    "start": "3015580",
    "end": "3021280"
  },
  {
    "text": "running software but yes it's definitely a threat unfortunately these tools all run at the OS level so they won't be able to detect",
    "start": "3021280",
    "end": "3027670"
  },
  {
    "text": "that one more question and then order the grew out of time that's a great",
    "start": "3027670",
    "end": "3034870"
  },
  {
    "text": "question how would I wrote you know how does Apple respond actually really good I've started talking to their security",
    "start": "3034870",
    "end": "3040840"
  },
  {
    "text": "team really smart guys seem to get security my opinion it seems that security in the past wasn't part of the",
    "start": "3040840",
    "end": "3047740"
  },
  {
    "text": "culture they're almost so they are kind of fighting an uphill battle talking to them though it seems that security is",
    "start": "3047740",
    "end": "3053380"
  },
  {
    "text": "becoming paramount and very very important it still seems though that when they address security for example",
    "start": "3053380",
    "end": "3059410"
  },
  {
    "text": "implement a new patch they've they understand it but maybe not from a malicious adversaries point of view so",
    "start": "3059410",
    "end": "3064780"
  },
  {
    "text": "like for example who did that DEFCON talk I'm giving they patched the vulnerability but it was trivial to sidestep the vulnerability the code the",
    "start": "3064780",
    "end": "3070600"
  },
  {
    "text": "vulnerable code was there so I just took a different code test so to me it seems like there was a little misunderstanding there but overall they seemed to really",
    "start": "3070600",
    "end": "3077590"
  },
  {
    "text": "be on board now they're very positive more closely with me on this so I'm hoping in the future our Mac's continue",
    "start": "3077590",
    "end": "3083350"
  },
  {
    "text": "to get more secure even if we have to give talk like that to push them in that direction all right so I think I'm at a",
    "start": "3083350",
    "end": "3089470"
  },
  {
    "text": "time I'll be around here I'll be at the booth I'll be at blackhat Arsenal and giving two talks at Def Con so I love to",
    "start": "3089470",
    "end": "3096250"
  },
  {
    "text": "see some of you guys there thanks again",
    "start": "3096250",
    "end": "3099480"
  }
]