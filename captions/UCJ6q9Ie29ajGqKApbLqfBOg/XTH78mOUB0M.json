[
  {
    "text": "in the front we really recommend everybody move on up if you can we're going to be doing some demos and showing some nice small text so I think you'd",
    "start": "47800",
    "end": "55600"
  },
  {
    "text": "appreciate a lot more if you guys were able to see Tex",
    "start": "55600",
    "end": "60640"
  },
  {
    "text": "it's okay the cool kid sit in front as",
    "start": "62359",
    "end": "66360"
  },
  {
    "text": "well",
    "start": "88920",
    "end": "91920"
  },
  {
    "text": "for e",
    "start": "118840",
    "end": "122880"
  },
  {
    "text": "can you guys hear us in the back or is that to left okay great thank you so hi everybody my name is Alex sers this is",
    "start": "170360",
    "end": "176760"
  },
  {
    "text": "my speaking partner and partner in CRI Scott stender and you are at the talk about attacking web services a little",
    "start": "176760",
    "end": "183239"
  },
  {
    "text": "bit of Defense there but mostly attack um we're going to talk about who we are",
    "start": "183239",
    "end": "188720"
  },
  {
    "text": "what web services are how they're being used we're going to try to slam through this as fast as possible because we have a lot of technical stuff to get to we're",
    "start": "188720",
    "end": "194400"
  },
  {
    "text": "going to talk about some web service Technologies um some that you might be familiar with some that you might be less so this is supposed to be a bit of",
    "start": "194400",
    "end": "200879"
  },
  {
    "text": "an introduction to what security people and hackers need to know about web services Technologies to understand",
    "start": "200879",
    "end": "205920"
  },
  {
    "text": "their security uh then we're going to talk about some new attacks in those Technologies as well as some old attacks",
    "start": "205920",
    "end": "211080"
  },
  {
    "text": "that have always been with us that are now twisted up a little bit to work in the web service world and then there's",
    "start": "211080",
    "end": "216360"
  },
  {
    "text": "going to be a demonstration so please stay through to the end even if you think I'm a boring speaker because Scott has a pretty cool demonstration he's",
    "start": "216360",
    "end": "222599"
  },
  {
    "text": "going to uh attack a web service box that we've got out of the internet right now and hopefully you guys can play",
    "start": "222599",
    "end": "228680"
  },
  {
    "text": "along if you're able to get uh everything all the tools running before the end of the talk and then we'll be",
    "start": "228680",
    "end": "233959"
  },
  {
    "text": "available for Q&A uh we're going into the launch period so if you guys just want to come on up or you can drop us an email anytime",
    "start": "233959",
    "end": "240920"
  },
  {
    "text": "so who are we uh we are two of the founding",
    "start": "240920",
    "end": "246920"
  },
  {
    "text": "partners of ISAC Partners uh we're a small security uh Consulting shop and research firm I'm not here to sell you",
    "start": "246920",
    "end": "253400"
  },
  {
    "text": "any kind of XML firewall products uh so you can put those checkbooks away it's okay um we're Scott and I do all",
    "start": "253400",
    "end": "260720"
  },
  {
    "text": "application security Consulting and research uh that's all we do and this web service stuff actually comes out of",
    "start": "260720",
    "end": "266919"
  },
  {
    "text": "a lot of our personal experiences and things we've done in the past why do you want to listen to this talk",
    "start": "266919",
    "end": "271960"
  },
  {
    "text": "uh as you're going to see web services are deployed all around this I I guarantee that sometime today your",
    "start": "271960",
    "end": "277840"
  },
  {
    "text": "social security number is going to go over a soap message somewhere and so you know even if you don't work with them on",
    "start": "277840",
    "end": "284000"
  },
  {
    "text": "a day-to-day basis understanding the security threats here is going to be very very important especially going",
    "start": "284000",
    "end": "289160"
  },
  {
    "text": "forward because we're going to see this kind of web service technology absolutely everywhere um anybody here",
    "start": "289160",
    "end": "295479"
  },
  {
    "text": "run an operating system that you know updates itself right all of the basically all the",
    "start": "295479",
    "end": "301639"
  },
  {
    "text": "commercial operating systems that do auto update use a web service interface for doing that that's the kind of stuff",
    "start": "301639",
    "end": "307160"
  },
  {
    "text": "that you know just happens in the background if you watch your traffic during the day and you'll be interested to find out um like we said most of this",
    "start": "307160",
    "end": "314360"
  },
  {
    "text": "work is based upon real life experiences although a lot of these attacks haven't been seen in the wild yet CU people",
    "start": "314360",
    "end": "319479"
  },
  {
    "text": "aren't doing them uh that's obviously going to change as the blackhe Hat Community not this black hat Community but the bad black hat Community uh",
    "start": "319479",
    "end": "326120"
  },
  {
    "text": "starts to get knowledge of this kind of stuff um and there's a lot of interesting research opportunities this is a wide open field there are very few",
    "start": "326120",
    "end": "332639"
  },
  {
    "text": "people in the security Community working in it all these standards all this security stuff being written is being written by the guys who writing",
    "start": "332639",
    "end": "337880"
  },
  {
    "text": "standards not by security people and so there's a lot of work here and it's good you can see in this talk and find out what we don't know and then write a talk",
    "start": "337880",
    "end": "344880"
  },
  {
    "text": "for yourself that you can give a black hat next year about those things that we we've skipped over or missed um so these",
    "start": "344880",
    "end": "350400"
  },
  {
    "text": "slides have been significantly updated if you have web access right now I recommend you go to iqu.com hat. HTML",
    "start": "350400",
    "end": "357639"
  },
  {
    "text": "you can get the latest version of the slides as well as links to all the tools uh we will be doing the demo and hoping",
    "start": "357639",
    "end": "363440"
  },
  {
    "text": "you guys can walk through it with us uh the demo the tools run on python require a couple of dependencies all that is",
    "start": "363440",
    "end": "369680"
  },
  {
    "text": "listed on the website uh please go and start now uh and I do recommend later",
    "start": "369680",
    "end": "375360"
  },
  {
    "text": "getting the a new copy of the slides it's very different than the one in the book um if we knew we could have our 30",
    "start": "375360",
    "end": "380599"
  },
  {
    "text": "pages ripped out we would have uh at least to generate buzz",
    "start": "380599",
    "end": "386039"
  },
  {
    "text": "but uh so what's just talk uh we're hopefully you're not going to need any background of these relevant",
    "start": "386120",
    "end": "392000"
  },
  {
    "text": "Technologies this is talk meant for security people if we're getting talking in front of web service people we'd have to explain what SQL injection was in",
    "start": "392000",
    "end": "398319"
  },
  {
    "text": "this case we'll explain how soap Works uh we're going to introduce some of the security risks involved a lot of these",
    "start": "398319",
    "end": "404199"
  },
  {
    "text": "issues and and Protocols are going to sound familiar to you one of the reasons web services are out there because things like XML and HTTP that people",
    "start": "404199",
    "end": "410960"
  },
  {
    "text": "have a lot of experience working with are some of the fundamental technologies that they build these very complex structures on um and so a lot of those",
    "start": "410960",
    "end": "417960"
  },
  {
    "text": "issues that are are carrying over even issues that have already been dealt with in the web application realm for the",
    "start": "417960",
    "end": "423440"
  },
  {
    "text": "last8 years are now part of the web services realm a little prediction of ours is you know next couple years we're going to see some significant number of",
    "start": "423440",
    "end": "430599"
  },
  {
    "text": "vulnerabilities related to to web service interface either in commercial ship products or the application servers themselves uh we know for a fact that",
    "start": "430599",
    "end": "437960"
  },
  {
    "text": "there have been patches that have gone out for Major application servers for un unknown vulnerabilities from either",
    "start": "437960",
    "end": "443639"
  },
  {
    "text": "security groups doing research and giving it secretly to the developers or by the uh the ENT the developers finding",
    "start": "443639",
    "end": "449360"
  },
  {
    "text": "out themselves so the bugs are already out there uh you just don't hear about them too much this is not a talk about",
    "start": "449360",
    "end": "454560"
  },
  {
    "text": "the Ws security standards all those standards have to do with things like encryption and authorization and",
    "start": "454560",
    "end": "459800"
  },
  {
    "text": "signatures and all that fun stuff which is great and important but has nothing really to do about breaking into a web service um if you're looking to talk",
    "start": "459800",
    "end": "467240"
  },
  {
    "text": "about XML encryption which I God help you if you want to talk see had a talk that talks about how XML files are are",
    "start": "467240",
    "end": "473960"
  },
  {
    "text": "signed uh then this is in the tuck read so what our web services it's an overloaded term it's mostly overloaded",
    "start": "473960",
    "end": "480479"
  },
  {
    "text": "because it's one of those things you can throw out and get a couple million dollars of venture capital from at you uh for our purposes we're talking about",
    "start": "480479",
    "end": "486479"
  },
  {
    "text": "web services are protocols that use XML as their base metal language to describe their communication they provide",
    "start": "486479",
    "end": "493159"
  },
  {
    "text": "computer to computer communication and this is an important part where a lot of the security issues come from web services are not meant to be consumed by",
    "start": "493159",
    "end": "499400"
  },
  {
    "text": "a human being they're meant to be served up by a computer and consumed by a computer on the other side now there",
    "start": "499400",
    "end": "505240"
  },
  {
    "text": "might at the end be some kind of visible content that the end user can but the actual consuming of the web service",
    "start": "505240",
    "end": "512080"
  },
  {
    "text": "traffic itself is not meant for for human beings um I use standard protocols",
    "start": "512080",
    "end": "518000"
  },
  {
    "text": "uh w3c Oasis and WSI are the big standards bearers in in web services",
    "start": "518000",
    "end": "524360"
  },
  {
    "text": "they're the reason that we have all these acronyms uh any complaints can go to Tim burner Lee at w3c for having all",
    "start": "524360",
    "end": "529760"
  },
  {
    "text": "these crazy unbelievably uh obtuse acronyms like XML",
    "start": "529760",
    "end": "535040"
  },
  {
    "text": "dxa CML stuff like that and they're designed to be platform and transport independent",
    "start": "535040",
    "end": "541120"
  },
  {
    "text": "although a lot of these have come from closed vendors like Microsoft those standards have become open and are",
    "start": "541120",
    "end": "546240"
  },
  {
    "text": "patent free and such uh why are web services compelling uh like I said before they're built on underst",
    "start": "546240",
    "end": "551519"
  },
  {
    "text": "Technologies so it doesn't take a huge amount of learning uh to to learn how to to build these and likewise it justes",
    "start": "551519",
    "end": "557160"
  },
  {
    "text": "get huge amount of learning to learn how to hack web service interfaces uh the adoption by large software vendors has",
    "start": "557160",
    "end": "562320"
  },
  {
    "text": "been very very quick it's hard to go out and buy an Enterprise piece of software that doesn't have soap somewhere in the",
    "start": "562320",
    "end": "567680"
  },
  {
    "text": "marketing bullets um and web services have been described to a lot of people as a Panacea for",
    "start": "567680",
    "end": "573079"
  },
  {
    "text": "internal uh for fixing especially internal to Enterprises communication issues and we'll talk about that a little bit uh the scary thing which a",
    "start": "573079",
    "end": "580399"
  },
  {
    "text": "lot of people love in web services is a lot of that magic pixie dust right that magic pixie dust that we've seen before",
    "start": "580399",
    "end": "586279"
  },
  {
    "text": "things like how ethernet magically works and you can get an arc will tell uh you can use uh AR to find out what IP",
    "start": "586279",
    "end": "592920"
  },
  {
    "text": "address goes with the mac and you get use DHCP to get your uh your IP address and you can use pixie even to boot over",
    "start": "592920",
    "end": "598760"
  },
  {
    "text": "without brain system all that works magically it's that kind of magic pixie dust that's always insecure right if something happens by itself without a",
    "start": "598760",
    "end": "606040"
  },
  {
    "text": "human being involved it's generally there there's probably something wrong with it and that Max magic pissy dust",
    "start": "606040",
    "end": "611560"
  },
  {
    "text": "has been spread all over web service standards and web service Frameworks uh for example here we have a little what",
    "start": "611560",
    "end": "617399"
  },
  {
    "text": "10 or 12 line piece of code if you open up visual studio.net 2003 right now and you put that code in and you compile it",
    "start": "617399",
    "end": "624600"
  },
  {
    "text": "and you have already set up you know Visual Studio point againsts an is6 server it's going to compile that that c",
    "start": "624600",
    "end": "630480"
  },
  {
    "text": "it's going to create an asmx it's going to create Discovery files it's going to drop all that stuff in is6 it's going to register it as an application it's going",
    "start": "630480",
    "end": "636959"
  },
  {
    "text": "to register it in the udv server on net box all that stuff from 10 lines and clicking it and every time this little",
    "start": "636959",
    "end": "643480"
  },
  {
    "text": "piece of code gets communication from the network it's going to go through not just the the standard Network layers of",
    "start": "643480",
    "end": "648800"
  },
  {
    "text": "information and the uh and I6 which we've all dealt with before but things like an XML interpreter and a soap",
    "start": "648800",
    "end": "655200"
  },
  {
    "text": "Handler that handles soap headers and soap enveloping and that does encoding standards and that looks up Nam spaces",
    "start": "655200",
    "end": "660720"
  },
  {
    "text": "there's tons of stuff that happens every time you you call that Colo world over the network and so that's what's really",
    "start": "660720",
    "end": "667079"
  },
  {
    "text": "scary because people writing web services don't understand any of that stuff that happens just like it just we",
    "start": "667079",
    "end": "673360"
  },
  {
    "text": "saw with web applications the developers are coming at it from the development side they get their how to write web services in 30 days book and that tells",
    "start": "673360",
    "end": "680000"
  },
  {
    "text": "them how to write it and from our side from the security side we're looking from the network side up and it's becoming very clear that there's not a",
    "start": "680000",
    "end": "686440"
  },
  {
    "text": "lot of understanding by the people the iding the software themselves about what's actually happening on the",
    "start": "686440",
    "end": "692560"
  },
  {
    "text": "wire so the one reason we see web Serv all over the place is the value to culprate management is really easy to",
    "start": "692560",
    "end": "698120"
  },
  {
    "text": "understanding here we just put together some corporate speak but you know in reality if you're a big corporation uh",
    "start": "698120",
    "end": "703399"
  },
  {
    "text": "and you've got a Mainframe from 1977 sitting in a basement somewhere it's got all your important information on it um",
    "start": "703399",
    "end": "709839"
  },
  {
    "text": "and you know all of your your hackers with gray hairs in their pony tales have already retired after they made all that",
    "start": "709839",
    "end": "715519"
  },
  {
    "text": "money from Y2K it's it's really hard to extend your functionality you have that kind of system and so people do things",
    "start": "715519",
    "end": "721160"
  },
  {
    "text": "like they go out to IBM who makes all this money selling stuff to extend the main frames they sold in the 70s and they go to IBM and they buy IBM products",
    "start": "721160",
    "end": "728519"
  },
  {
    "text": "and they put a big uh soap application server in front of the Mainframe and they expose all that Mainframe",
    "start": "728519",
    "end": "734360"
  },
  {
    "text": "functionality through soap calls and so now that I have that thing in front of my main frame uh I can get cheap",
    "start": "734360",
    "end": "740480"
  },
  {
    "text": "developers who write things in Java and c and even things like uh VB uh and get",
    "start": "740480",
    "end": "746959"
  },
  {
    "text": "them to talk to my main frame and be able to build big extensible applications um that is a real big value",
    "start": "746959",
    "end": "753480"
  },
  {
    "text": "and that's why people are spending a lot of money on this it's also a little bit scary because that's not what that main frame was designed to do and building",
    "start": "753480",
    "end": "759880"
  },
  {
    "text": "that system so it communicates securely with the main frame and that you know the security protections that exist on",
    "start": "759880",
    "end": "764920"
  },
  {
    "text": "the Mainframe exist once you once you have a soap interface to access all this information whether it's people's credit",
    "start": "764920",
    "end": "770480"
  },
  {
    "text": "reports or people's health records that's not that easy um so we're going to go through",
    "start": "770480",
    "end": "775600"
  },
  {
    "text": "these real quick so we got to get to the important stuff where webs is being used between companies the whole B2B thing uh",
    "start": "775600",
    "end": "781320"
  },
  {
    "text": "web services is kind of one of the original things that people were thinking about if I if I wanted uh work",
    "start": "781320",
    "end": "786519"
  },
  {
    "text": "with a partner such as I'm a credit card clearing company and I want to talk the bank instead of using some kind of crazy",
    "start": "786519",
    "end": "792639"
  },
  {
    "text": "binary credit card format like they've done in the past perhaps I want to use web services because it's easier to develop and I can use off-the-shelf",
    "start": "792639",
    "end": "798680"
  },
  {
    "text": "Frameworks like net and web spere and such and uh it makes it a lot cheaper so we see a lot of a lot there we see a lot",
    "start": "798680",
    "end": "805360"
  },
  {
    "text": "of internal to companies you want your people off to talk to your sap uh you know that kind of stuff is going to",
    "start": "805360",
    "end": "811399"
  },
  {
    "text": "happen over web services there's this kind of not invented here issue that's always existed with people supporting other people's protocols since web",
    "start": "811399",
    "end": "817839"
  },
  {
    "text": "services are a third party product a lot of people are willing to support it to to give interactivity Art in front of",
    "start": "817839",
    "end": "823600"
  },
  {
    "text": "Legacy systems we just talked about things like as 400s and mainframes between tiers of of web applications",
    "start": "823600",
    "end": "829399"
  },
  {
    "text": "this is a very interesting issue people are now accessing between the web server and the application server or between",
    "start": "829399",
    "end": "835759"
  },
  {
    "text": "the web application server and the database using XML like things like xath and xquery and set up SQL um those those",
    "start": "835759",
    "end": "844160"
  },
  {
    "text": "languages like xath xquery are are really cool and really powerful and uh have a lot of security bugs so we'll",
    "start": "844160",
    "end": "849720"
  },
  {
    "text": "talk about that um so this creates an entire class of injection attacks I just put xstar as they create new standards",
    "start": "849720",
    "end": "856279"
  },
  {
    "text": "that have an X in the front there's probably an injection attack that comes with it um and then the way that most people",
    "start": "856279",
    "end": "862040"
  },
  {
    "text": "in here have been exposed to web services is through Ajax asynchronous JavaScript and XML which is a new",
    "start": "862040",
    "end": "868040"
  },
  {
    "text": "standard to have really cool interactive web applications who has used Google Maps right isn't it cool you can do all",
    "start": "868040",
    "end": "875040"
  },
  {
    "text": "this stuff and it never hits reload um and you're able to asynchronously pull up stuff like it know popup boxes while you're scrolling the map that's all",
    "start": "875040",
    "end": "881839"
  },
  {
    "text": "because the JavaScript loaded into the browser instead of the page getting reloaded every time from the application",
    "start": "881839",
    "end": "887560"
  },
  {
    "text": "the JavaScript comes in the browser and creates a thing called an XML HTP object which was introduced by Microsoft uh",
    "start": "887560",
    "end": "893680"
  },
  {
    "text": "msxml ActiveX control is now simulated kind of like that uh in Firefox and Mozilla everything but Opera I think",
    "start": "893680",
    "end": "901040"
  },
  {
    "text": "supports this kind of stuff and it creates this object that allows it to asynchronously talk back to the server",
    "start": "901040",
    "end": "906320"
  },
  {
    "text": "it can send down XML request and get XML back and it's in that XML that it's able to get stuff like the address data that",
    "start": "906320",
    "end": "913079"
  },
  {
    "text": "you looked up and it can do that without a page refresh and so it's like you're downloading a what used to be a big",
    "start": "913079",
    "end": "918279"
  },
  {
    "text": "binary thick client like the the the Keyhole Software that to go look at at",
    "start": "918279",
    "end": "923399"
  },
  {
    "text": "satellite images that whole client is now implemented in some kind of scripting language and running in your",
    "start": "923399",
    "end": "928560"
  },
  {
    "text": "browser and so there's two interfaces now there's the HTTP interface by which you",
    "start": "928560",
    "end": "933759"
  },
  {
    "text": "get the HTML for for Google Maps and then you get the Java Script for Google Maps and then there's a backend web",
    "start": "933759",
    "end": "939319"
  },
  {
    "text": "service that you're not exposed to that your browser is talking to Google um we're not talking a huge amount about",
    "start": "939319",
    "end": "945240"
  },
  {
    "text": "Ajax because in uh one all their implementations are generally uh customized and so it's hard to to talk",
    "start": "945240",
    "end": "952279"
  },
  {
    "text": "about security issues that exist across all of them plus they often use uh not in they don't use real web service",
    "start": "952279",
    "end": "957399"
  },
  {
    "text": "Frameworks uh they create their own XML file formats they might not even use real XML um but there are definitely",
    "start": "957399",
    "end": "963560"
  },
  {
    "text": "security issues in that uh you also have apis to add functionality uh who here uses like uh one of those eBay selling",
    "start": "963560",
    "end": "970160"
  },
  {
    "text": "services you know those Services where they'll bid for you and stuff those guys use a web service uh they use a a soap",
    "start": "970160",
    "end": "976600"
  },
  {
    "text": "Port that's open by eBay so that things can happen automatically they don't have to do screen scraping and stuff uh",
    "start": "976600",
    "end": "981680"
  },
  {
    "text": "Amazon financial institutions anybody here use uh money or quickin when you hit your little update my accounts it",
    "start": "981680",
    "end": "987800"
  },
  {
    "text": "probably uses a protocol called ofx ofx 2.0 is based on Sil so that's a web service call that goes out to your bank",
    "start": "987800",
    "end": "995040"
  },
  {
    "text": "um and like I said it's a replacement for thick clients we're starting to see Enterprise vendors that ship stuff to your desktop instead of writing that",
    "start": "995040",
    "end": "1000880"
  },
  {
    "text": "they can just write JavaScript client that talks XML on the back end and then that works in everybody's browser you",
    "start": "1000880",
    "end": "1006519"
  },
  {
    "text": "don't have to ship a Mac client and a Linux client and a 132 client you can just have the JavaScript client that runs in Mozilla no run all",
    "start": "1006519",
    "end": "1014319"
  },
  {
    "text": "platforms so what does this mean it means that code Has Broken free from a",
    "start": "1014319",
    "end": "1019800"
  },
  {
    "text": "lot of people's control uh you know a long time ago a lot of people offered a lot of services on the internet crazy",
    "start": "1019800",
    "end": "1025120"
  },
  {
    "text": "things like RPC and stuff um people figured out that that was bad and now",
    "start": "1025120",
    "end": "1030640"
  },
  {
    "text": "you look at the outside of any large corporation you'll see hcp hcps sntp and",
    "start": "1030640",
    "end": "1035798"
  },
  {
    "text": "then maybe uh some firewall uh management ports that they forgot to close U and that's generally it for most",
    "start": "1035799",
    "end": "1041839"
  },
  {
    "text": "big corporations right yeah I heard some laughs we see those Pall One Ports out there all the time um but we're we're",
    "start": "1041839",
    "end": "1048960"
  },
  {
    "text": "getting rid of that because one of the reasons web service has been invented is because it's able to all go over HTTP",
    "start": "1048960",
    "end": "1054640"
  },
  {
    "text": "over one port and you can get it past firewalls that's one of the selling points of web services it's a RPC",
    "start": "1054640",
    "end": "1060320"
  },
  {
    "text": "language over over one port and so there's a new slogan for web",
    "start": "1060320",
    "end": "1066240"
  },
  {
    "text": "services which should load up we poke holes in your firewall so you",
    "start": "1066240",
    "end": "1071799"
  },
  {
    "text": "don't have to right we you can provide all the Enterprise functionality over 443 and then you can fire all your",
    "start": "1071799",
    "end": "1077559"
  },
  {
    "text": "network Engineers because you never have to change in firewalls again uh obviously for security people that sounds not like a good",
    "start": "1077559",
    "end": "1083640"
  },
  {
    "text": "idea um so we're going to talk about some new Tex Technologies um web",
    "start": "1083640",
    "end": "1089039"
  },
  {
    "text": "services have multiple things at multiple layers it's supposed to be everything agnostic we're going to talk about the technologies that generally",
    "start": "1089039",
    "end": "1094600"
  },
  {
    "text": "people use when they talk about web services and that people will be using most in the future uh we'll talk about three layers uh XML like the actual",
    "start": "1094600",
    "end": "1101840"
  },
  {
    "text": "language and how it gets pared soap uh which sits on top of XML is the actual web service magic and then Discovery",
    "start": "1101840",
    "end": "1108440"
  },
  {
    "text": "technique there's a number of ways you can discover web services that are built into it so XML uh who here has ever",
    "start": "1108440",
    "end": "1114799"
  },
  {
    "text": "worked with XML yeah everybody most people have um",
    "start": "1114799",
    "end": "1119840"
  },
  {
    "text": "it's actually you know it's a very complicated thing it looks really simple when you get an XML doc that's like a config doc or something you change but",
    "start": "1119840",
    "end": "1127120"
  },
  {
    "text": "they decided that they're going to write a language that can represent anything right that doesn't sound like a very",
    "start": "1127120",
    "end": "1132200"
  },
  {
    "text": "easy thing to be able to represent every piece of data that they that you know the mass of humankind can come up with",
    "start": "1132200",
    "end": "1138080"
  },
  {
    "text": "uh and so you know there's all kinds of weird little cor cases that create very very complex uh cor laries to XML things",
    "start": "1138080",
    "end": "1144640"
  },
  {
    "text": "like binary data internationalization which is done through unit code 1.0 uh XML 1.1 will do unit code 2.0 um",
    "start": "1144640",
    "end": "1151880"
  },
  {
    "text": "representing Medicare characters right XML needs to be able to contain XML right has anybody ever gone to a website",
    "start": "1151880",
    "end": "1157880"
  },
  {
    "text": "that tells them how to write XML and that XML comes down in xhtml page obviously there's got to be some way",
    "start": "1157880",
    "end": "1163559"
  },
  {
    "text": "that they can represent XML in a way that doesn't get interpreted in the XML uh defining and validating schemas what",
    "start": "1163559",
    "end": "1169799"
  },
  {
    "text": "what does this document mean that's a kind of complicated thing there's a lot of Technologies around the layout of",
    "start": "1169799",
    "end": "1175240"
  },
  {
    "text": "documents and making them configurable and then that makes parsing very difficult um the result there's a",
    "start": "1175240",
    "end": "1180760"
  },
  {
    "text": "there's a very large problem space here for security researchers to research and there's been very little research in the",
    "start": "1180760",
    "end": "1186520"
  },
  {
    "text": "security effects of XML um there's dozens and dozens of standards of What's called the XML family most of them are",
    "start": "1186520",
    "end": "1193039"
  },
  {
    "text": "controlled by w3c if it's got X in front of it probably has nothing to do with XML um very few people understand most",
    "start": "1193039",
    "end": "1200640"
  },
  {
    "text": "of these Technologies there's no person on the planet that understands all the aspects of all these Technologies um",
    "start": "1200640",
    "end": "1206600"
  },
  {
    "text": "which is a little bit different than when we talked about web applications when things were actually pretty simple right HTML and dhtml and HTP at least",
    "start": "1206600",
    "end": "1213720"
  },
  {
    "text": "from a communication standpoint that's not that hard to understand most of the aspects of that with the the X standards",
    "start": "1213720",
    "end": "1220679"
  },
  {
    "text": "uh I me there's a entire bookshelves of barn of& Noble full of XML books uh it's it's out of control um XML is based on",
    "start": "1220679",
    "end": "1228400"
  },
  {
    "text": "some simp simple but very strict rules we're not going to go over them you guys can buy an XML book it's important to",
    "start": "1228400",
    "end": "1233760"
  },
  {
    "text": "know when you're attacking as we'll talk about later because generally when you attack a web service you need to have real XML if you have if you have crappy",
    "start": "1233760",
    "end": "1239919"
  },
  {
    "text": "XML it'll get thrown away very very quickly and you'll never actually hit the application you're turn into a tech",
    "start": "1239919",
    "end": "1245840"
  },
  {
    "text": "um you can you know people have built fuzzers that do just pretty much random stuff to an XML endpoint a lot of times",
    "start": "1245840",
    "end": "1251559"
  },
  {
    "text": "when they're not creating real XML they're just fuzzing the XML stack which is great but you know there's only three",
    "start": "1251559",
    "end": "1257280"
  },
  {
    "text": "or four major ones that get used all the time and they've been attacked pretty hard what you want is XML that gets",
    "start": "1257280",
    "end": "1262640"
  },
  {
    "text": "through that little XML parser and attacks the application that's saying hey give me the data that came off in off the network um and this is a simple",
    "start": "1262640",
    "end": "1269200"
  },
  {
    "text": "example of my wife's car as a XML element I think everybody's seen something like",
    "start": "1269200",
    "end": "1274919"
  },
  {
    "text": "this um this is a full legal XML document it's got a schema reference in a name space so I say the version up",
    "start": "1274919",
    "end": "1282120"
  },
  {
    "text": "here encoding is obviously a very very important security wise uh the default encoding for XML is utf8 which is as",
    "start": "1282120",
    "end": "1288760"
  },
  {
    "text": "everybody here knows is bit compatible with ISO 8859 at least within the Latin character set um lots of oops lots of",
    "start": "1288760",
    "end": "1297120"
  },
  {
    "text": "cool little encoding tricks that you can okay lots of cool little encoding tricks",
    "start": "1297120",
    "end": "1303799"
  },
  {
    "text": "that have existed that people are exploring with web applications thing like UTF non-minimal encodings things",
    "start": "1303799",
    "end": "1309720"
  },
  {
    "text": "like changing character sets and hoping the application magically finds that character set somewhere that kind of stuff is really really possible with XML",
    "start": "1309720",
    "end": "1316799"
  },
  {
    "text": "because with web applications unicode support was kind of shoehorned in and so you often only have things supporting it when you specifically tell it right like",
    "start": "1316799",
    "end": "1323960"
  },
  {
    "text": "a SQL Server when it gets data from is you have to install the Japanese language pack for it to understand Japanese right but because Unicode is a",
    "start": "1323960",
    "end": "1331039"
  },
  {
    "text": "Bas part of XML most things that speak XML can do lots of stuff in unit code",
    "start": "1331039",
    "end": "1336480"
  },
  {
    "text": "and so there's a much bigger problem space here for attacking different using different kinds of encodings um then I",
    "start": "1336480",
    "end": "1342039"
  },
  {
    "text": "have dark name the wrong button",
    "start": "1342039",
    "end": "1347200"
  },
  {
    "text": "so some other important things in here like we have",
    "start": "1351279",
    "end": "1357640"
  },
  {
    "text": "these things called name spaces name spaces",
    "start": "1357640",
    "end": "1362440"
  },
  {
    "text": "are uh name spaces are created so that you can have multiple XML documents that Define different things and they don't",
    "start": "1370919",
    "end": "1376720"
  },
  {
    "text": "overlap with each other so if I'm an application and I can lo a bunch of XML documents and they Define different things if like this doc defines a",
    "start": "1376720",
    "end": "1382880"
  },
  {
    "text": "person's uh credit history and this doc defines a music file they use different namespaces so if they both have",
    "start": "1382880",
    "end": "1389320"
  },
  {
    "text": "something called that now I can't think of something that's the same between a credit recorded and music file but if",
    "start": "1389320",
    "end": "1394480"
  },
  {
    "text": "there's some word that was used both in a credit report and Sheet Music uh then those things would not overlap with each",
    "start": "1394480",
    "end": "1400200"
  },
  {
    "text": "other because they're using different Nam spaces uh Nam space attacks are kind of cool uh and then we have our XML which is well formed there XML documents",
    "start": "1400200",
    "end": "1407960"
  },
  {
    "text": "are defined by schemas um",
    "start": "1407960",
    "end": "1413679"
  },
  {
    "text": "the old standard food schemas these things called dtds which are files that aren't actually XML so it kind of was",
    "start": "1413679",
    "end": "1420200"
  },
  {
    "text": "stupid to Define XML using something a totally different standard the new standard is called XML scha uh documents",
    "start": "1420200",
    "end": "1427440"
  },
  {
    "text": "xsds they are actual XML I'll show you an example uh they're very very complex there's all kinds of stuff you can put",
    "start": "1427440",
    "end": "1433200"
  },
  {
    "text": "into them they're they can either be standard or custom the standard ones are things that are put out by standard bodies to say something like I want to",
    "start": "1433200",
    "end": "1439840"
  },
  {
    "text": "represent mathematical formulas in XML here's the XML schema to Define mathematical formulas and if everybody",
    "start": "1439840",
    "end": "1445679"
  },
  {
    "text": "uses this same schema to communicate mathematical formulas in theory I should be able to you know Implement my product",
    "start": "1445679",
    "end": "1451960"
  },
  {
    "text": "just having the schema and not knowing about what other products I'm working with and I'll create that document it can be read by them uh in reality that's",
    "start": "1451960",
    "end": "1459120"
  },
  {
    "text": "not always true but you know we're getting there uh and then they can be custom in situations like where you",
    "start": "1459120",
    "end": "1464840"
  },
  {
    "text": "write your own web app that has uh its own format most web service applications",
    "start": "1464840",
    "end": "1469960"
  },
  {
    "text": "either use a custom xsd or don't use a stylesheet of all right it's not something that autog generates it's not",
    "start": "1469960",
    "end": "1475960"
  },
  {
    "text": "part of that magic that auto generates when you create a web service and that's actually scary because XML schemas can",
    "start": "1475960",
    "end": "1481600"
  },
  {
    "text": "be very very good security tools um they Define the how elements are put together",
    "start": "1481600",
    "end": "1487640"
  },
  {
    "text": "what order they're in how many there should be they makes a lot of attacks like where you you play around with doing element uh putting elements in",
    "start": "1487640",
    "end": "1493799"
  },
  {
    "text": "there or or denial service attacks like we'll talk about where you send very complex XML it makes it possible because",
    "start": "1493799",
    "end": "1499320"
  },
  {
    "text": "you know if we have something very simple like that car and our schema says you can only have five elements in in",
    "start": "1499320",
    "end": "1504360"
  },
  {
    "text": "here and this is their names uh then you're not to be able to do those kinds of attacks um you can also do using a",
    "start": "1504360",
    "end": "1509760"
  },
  {
    "text": "kind of regex like language you can say what kind of data is actually permissible and so you can Implement uh",
    "start": "1509760",
    "end": "1515679"
  },
  {
    "text": "input filtering using XML schemes uh very rarely happens uh for security purposes sometimes people do it for",
    "start": "1515679",
    "end": "1521520"
  },
  {
    "text": "debugging and stuff um but that that's a good defense against loss and stuff we're talking about here",
    "start": "1521520",
    "end": "1528398"
  },
  {
    "text": "uh and this is an XML schema um nothing really special",
    "start": "1528559",
    "end": "1535480"
  },
  {
    "text": "here okay really sorry about this this whole two monitor",
    "start": "1537559",
    "end": "1544840"
  },
  {
    "text": "thing this is what I get for using a Microsoft product in front of a bunch of hackers",
    "start": "1553840",
    "end": "1558919"
  },
  {
    "text": "somebody owning me right now is that what's going on that s",
    "start": "1558919",
    "end": "1565600"
  },
  {
    "text": "nice please don't leave uh XML schema we're laying out what",
    "start": "1585600",
    "end": "1591919"
  },
  {
    "text": "things can be in our description of a car in this situation we're only doing filtering on one uh element and we're",
    "start": "1591919",
    "end": "1597120"
  },
  {
    "text": "saying that it has to be a year an Inger number between 1904 and 2010 obviously because that's in there it now makes it",
    "start": "1597120",
    "end": "1603679"
  },
  {
    "text": "impossible to put something like a control character or something dangerous in there um so now that we now we have the",
    "start": "1603679",
    "end": "1611360"
  },
  {
    "text": "basis we're going to get to kind of the things that actually are horable um there are two standard ways of parsing",
    "start": "1611360",
    "end": "1616559"
  },
  {
    "text": "XML if I'm writing software and I want it to be able to understand XML I don't want to write my own XML parsing so",
    "start": "1616559",
    "end": "1622399"
  },
  {
    "text": "there's there's two standard ways of doing the parsing that's also defined by W3 first one's called Sachs uh it's",
    "start": "1622399",
    "end": "1628720"
  },
  {
    "text": "something like simple API for XML um it's a a stateless stepbystep stream",
    "start": "1628720",
    "end": "1634799"
  },
  {
    "text": "parsing and generally when people it's kind of like I see a node now I want to go to the child and the parser doesn't",
    "start": "1634799",
    "end": "1640399"
  },
  {
    "text": "track you know it knows where I am in the document but doesn't keep any real state for me and it just goes step by",
    "start": "1640399",
    "end": "1646240"
  },
  {
    "text": "step through the document um it's lightweight it's not very intelligent it's uh pretty easy to use and a lot of",
    "start": "1646240",
    "end": "1651919"
  },
  {
    "text": "people use it for when they do XML uh blocks that are pretty small or not that complicated um but there is a",
    "start": "1651919",
    "end": "1657679"
  },
  {
    "text": "vulnerability in it and the vulnerability in it is that it has if you haven't you know validated your XML",
    "start": "1657679",
    "end": "1662799"
  },
  {
    "text": "schema then and you're tracking say your own a lot of people when they use sacks and we'll talk about this in XML",
    "start": "1662799",
    "end": "1668799"
  },
  {
    "text": "injection they'll step and step through and they'll find information they want and then write it out to variables unless you're doing your own validation",
    "start": "1668799",
    "end": "1675039"
  },
  {
    "text": "which nobody is uh after Sac says it's actual parsing you can have XML injection which means that people can",
    "start": "1675039",
    "end": "1680919"
  },
  {
    "text": "overwrite data that it's already read um because it's stupid right it's a stupid step-by-step pars uh the the pars that",
    "start": "1680919",
    "end": "1687760"
  },
  {
    "text": "people generally use for very complex things like actual Enterprise applications is called Dom document",
    "start": "1687760",
    "end": "1693200"
  },
  {
    "text": "object model um this is very complicated and Powerful parsing I I send you an XML",
    "start": "1693200",
    "end": "1698640"
  },
  {
    "text": "document your your application says create a Dom for this and it creates in memory this big data structure that",
    "start": "1698640",
    "end": "1704559"
  },
  {
    "text": "represents the document and allows me to do lots of different cool powerful things on it um the creation of that",
    "start": "1704559",
    "end": "1712600"
  },
  {
    "text": "document model in memory is not an easy thing and we'll talk about that opens up",
    "start": "1712600",
    "end": "1718640"
  },
  {
    "text": "for attack different type of attacks a domal of service attacks against the XML parser itself um what's always a bad",
    "start": "1718640",
    "end": "1724840"
  },
  {
    "text": "idea is people writing their own parsers a lot of people will say oh I can just search for something I'll do a regex um maybe they try to simulate sax parsing",
    "start": "1724840",
    "end": "1731440"
  },
  {
    "text": "using you could probably do it in 10 lines of pearl uh if you really know Pearl or I guess one line right um",
    "start": "1731440",
    "end": "1739279"
  },
  {
    "text": "but uh that's a very bad idea because there's lots of quarter cases the XML uh just don't do it right it's not a good",
    "start": "1739279",
    "end": "1746039"
  },
  {
    "text": "idea use somebody else's there's good open source ones out there um so an emergy attack class XML J uh this",
    "start": "1746039",
    "end": "1753600"
  },
  {
    "text": "happens when I'm able to pass an input that gets put into an XML stream and there's multiple ways this can happen um",
    "start": "1753600",
    "end": "1759320"
  },
  {
    "text": "say I'm rri into an application and it stores its data as XML either as a flat file on a dis or actually as an XML",
    "start": "1759320",
    "end": "1765559"
  },
  {
    "text": "database and so you know I to say I'm buying a car and I upload uh my car's",
    "start": "1765559",
    "end": "1771559"
  },
  {
    "text": "name instead of Toyota that gets stored in the XL database I upload XML tags if they're not doing proper in input",
    "start": "1771559",
    "end": "1777840"
  },
  {
    "text": "filtering those XML tags will get dropped right into the database of the XML document as tags themselves right",
    "start": "1777840",
    "end": "1783559"
  },
  {
    "text": "there's no default escaping an XML right you don't go uh here's my tag and then",
    "start": "1783559",
    "end": "1788679"
  },
  {
    "text": "I'm going to do a quote or something like that it by default people are just catting things together which they probably are doing then it's going to be",
    "start": "1788679",
    "end": "1794880"
  },
  {
    "text": "tag tag uh like our example here which is a user record which that should be somebody's email address that a bad guy",
    "start": "1794880",
    "end": "1801919"
  },
  {
    "text": "has put XML in instead of his email address when signing up for this website um in this situation if you are",
    "start": "1801919",
    "end": "1809120"
  },
  {
    "text": "using a sax parser What mo probably happened when somebody wrote how to interfaces with a sax parser is they",
    "start": "1809120",
    "end": "1815720"
  },
  {
    "text": "they initiate a bunch of variables right like uh my unique ID zero or or negative",
    "start": "1815720",
    "end": "1820960"
  },
  {
    "text": "1 maybe or something a bunch of empty strings and then they use a sax parser to go through step by step and then they",
    "start": "1820960",
    "end": "1826519"
  },
  {
    "text": "have a little uh if block uh a switch block that says okay if it's the unique",
    "start": "1826519",
    "end": "1831799"
  },
  {
    "text": "ID write in my new ID variable and if it's somebody's name write in my name variable and we've I mean this might",
    "start": "1831799",
    "end": "1837840"
  },
  {
    "text": "sound contrived to you guys but we've actually seen this more than once in real applications that use sacks um in",
    "start": "1837840",
    "end": "1844720"
  },
  {
    "text": "this case it's going to step through write record what the unique ID is record what the name is go into the",
    "start": "1844720",
    "end": "1850080"
  },
  {
    "text": "email tag record the email our attacker obviously this red stuff is the stuff that's controlled by the attacker",
    "start": "1850080",
    "end": "1855440"
  },
  {
    "text": "through an input field our attacker is now close off that email tag and open up another unique ID tag which is not",
    "start": "1855440",
    "end": "1862120"
  },
  {
    "text": "illegal in XML they have multiple tags of the same name underneath it it's just you know something that this person wasn't assuming when they wrote their",
    "start": "1862120",
    "end": "1868080"
  },
  {
    "text": "program and so I'm going to go through take that unique ID drop it into the variable and I've overwritten the unique",
    "start": "1868080",
    "end": "1873279"
  },
  {
    "text": "ID of 1 2 34 5 with zero and then do the email again",
    "start": "1873279",
    "end": "1880159"
  },
  {
    "text": "um the point of this is if I'm using a sax parser and stepping through and keeping State myself keeping the uh",
    "start": "1880159",
    "end": "1887480"
  },
  {
    "text": "loading the variables as I walk through my result is going to be unique to equal",
    "start": "1887480",
    "end": "1893360"
  },
  {
    "text": "Z everybody anybody have any questions about that that one's pretty simple it's honestly",
    "start": "1896159",
    "end": "1902320"
  },
  {
    "text": "yeah right right yeah Eric pointed out that that you know if your ID is zero that means you're generally powerful",
    "start": "1906960",
    "end": "1913200"
  },
  {
    "text": "right which is why like know SQL injection attacks to give you the first user in the table very powerful because",
    "start": "1913200",
    "end": "1918600"
  },
  {
    "text": "it's often an admin or a database administrator same thing here we probably you know write a little script",
    "start": "1918600",
    "end": "1924200"
  },
  {
    "text": "to brute force that to find somebody that was really powerful um any any question XML injection you know it's fun",
    "start": "1924200",
    "end": "1930240"
  },
  {
    "text": "and it's very simple we don't see it a huge amount because most people aren't using sacks in real Enterprise apps you",
    "start": "1930240",
    "end": "1936279"
  },
  {
    "text": "see it in cheaper things that do web service stuff xath injection on the other hand is something that you",
    "start": "1936279",
    "end": "1941320"
  },
  {
    "text": "generally see against people that are using Dom parsers um XA is what's supposed to be kind of a simple language",
    "start": "1941320",
    "end": "1946559"
  },
  {
    "text": "for me to say to reference a part of an XML document so that I don't have to every time I want to find something in",
    "start": "1946559",
    "end": "1952399"
  },
  {
    "text": "XML I don't have to do all the stepping through like jump into this child and jump into this child and then jump into",
    "start": "1952399",
    "end": "1958480"
  },
  {
    "text": "this child that I can just have a way to write I want to find all the children that meet uh this this uh Boolean this",
    "start": "1958480",
    "end": "1966720"
  },
  {
    "text": "uh this conditional and give me all those people right it's a standard language for doing that and all the",
    "start": "1966720",
    "end": "1971960"
  },
  {
    "text": "standard XML da parsers uh microsofts ibms everybody supports at least xath",
    "start": "1971960",
    "end": "1977080"
  },
  {
    "text": "version one um it's kind of a cross between directory browsing and regx when you",
    "start": "1977080",
    "end": "1982159"
  },
  {
    "text": "actually see the language so in our car example if you know this isn't a full XML document but say car is is our root",
    "start": "1982159",
    "end": "1988799"
  },
  {
    "text": "Noe these are different examples of xath statements that will get me different things if I just say car it gives me all",
    "start": "1988799",
    "end": "1994320"
  },
  {
    "text": "the children of the node it will return a list of all of these different things if I say SL car then I reference I want",
    "start": "1994320",
    "end": "2000960"
  },
  {
    "text": "just the car element itself uh a list of one item uh if if I do SL slash that's",
    "start": "2000960",
    "end": "2007120"
  },
  {
    "text": "kind of like search I want to search for everything that's a car element in the entire document um if I want if I do car",
    "start": "2007120",
    "end": "2013240"
  },
  {
    "text": "/l it's going to me all the colors underneath it and then the important part is a conditional I want to search",
    "start": "2013240",
    "end": "2018840"
  },
  {
    "text": "for all of the cars where it has a a child element who's who's equal to Blue",
    "start": "2018840",
    "end": "2024399"
  },
  {
    "text": "it has an attribute equal to Blue so if this was a big long document of a bunch of cars and I use this xass statement I",
    "start": "2024399",
    "end": "2030840"
  },
  {
    "text": "would get a list of these nodes at the top that have uh that are cars of BL",
    "start": "2030840",
    "end": "2038600"
  },
  {
    "text": "everybody understand it yeah it's pretty simple this is XPath one uh XPath 2 is like 400 Pages document or something",
    "start": "2038600",
    "end": "2044880"
  },
  {
    "text": "it's it's ridiculous nobody understands that so we'll do xap one injection for now um so xap uh is often used to access",
    "start": "2044880",
    "end": "2054000"
  },
  {
    "text": "XML enabled databases and all these databases are XML native uh enabled and the last one is actually XML native me",
    "start": "2054000",
    "end": "2060200"
  },
  {
    "text": "it's native format for storing this information is XML like um so you can send an xath query to any of these",
    "start": "2060200",
    "end": "2066480"
  },
  {
    "text": "databases and they will take their SQL table you probably have to Define like what table you're looking at lay out",
    "start": "2066480",
    "end": "2071919"
  },
  {
    "text": "like it's an XML document and take that X paath and give you the information which as you saw XT is really powerful",
    "start": "2071919",
    "end": "2077158"
  },
  {
    "text": "it's actually much easier than like a SQL statement so what's the problem like SQL XT has code and data right next to",
    "start": "2077159",
    "end": "2084280"
  },
  {
    "text": "each other separated by delimiter and that delimiter is our old friend the single quote that everybody seen from",
    "start": "2084280",
    "end": "2090878"
  },
  {
    "text": "SQL injection um unlike SQL xap there's really no way of securely using it right",
    "start": "2090879",
    "end": "2097720"
  },
  {
    "text": "we often uh attack web applications where they're using SQL on the back end and we don't find any SQL injection and",
    "start": "2097720",
    "end": "2105079"
  },
  {
    "text": "and we say oh you guys must be doing input filtering they're like input filtering what's that like what's SQL injection but it's because they're using",
    "start": "2105079",
    "end": "2110640"
  },
  {
    "text": "things like prepared statements or properly calling the store procedures that SQL injection doesn't work right A",
    "start": "2110640",
    "end": "2115800"
  },
  {
    "text": "lot of people get accidental SQL injection protection because they optimize their application use a",
    "start": "2115800",
    "end": "2120839"
  },
  {
    "text": "database in a very fast method um that's not true for xath there's no way of making the xath call other than putting",
    "start": "2120839",
    "end": "2127040"
  },
  {
    "text": "together a strin and giving the string to whatever thing you're you're talking to whether that's a database or if it's your uh msxml",
    "start": "2127040",
    "end": "2134560"
  },
  {
    "text": "object um and so if an attacker can control any input into an X paath and it's not filtered they most they most",
    "start": "2134560",
    "end": "2141800"
  },
  {
    "text": "likely can return either arbitrary parts of the file and access arbitrary parts of the file or return any kind of data",
    "start": "2141800",
    "end": "2147480"
  },
  {
    "text": "they want to whatever called it so here's an example use of X um",
    "start": "2147480",
    "end": "2153480"
  },
  {
    "text": "we've got a big XML document or database looks",
    "start": "2153480",
    "end": "2159480"
  },
  {
    "text": "like the same thing to our application um that has users these user objects and",
    "start": "2159480",
    "end": "2165599"
  },
  {
    "text": "these user uh nodes have a bunch of different things under them like what name password user ID all this kind of",
    "start": "2165599",
    "end": "2171160"
  },
  {
    "text": "stuff right just like I put together a SQL table so in this case this is what our application is trying to do it's",
    "start": "2171160",
    "end": "2177319"
  },
  {
    "text": "it's getting an input from a soap call or even in this situation from the web interface um and it's saying give me all",
    "start": "2177319",
    "end": "2184200"
  },
  {
    "text": "the users where their name is equal to Joe and their password is equal pretty",
    "start": "2184200",
    "end": "2190720"
  },
  {
    "text": "basic ha it though or space or",
    "start": "2191000",
    "end": "2197960"
  },
  {
    "text": "something",
    "start": "2197960",
    "end": "2200960"
  },
  {
    "text": "okay okay so our simple xath injection tack which is going to use this little canonical xath this is going to become",
    "start": "2211480",
    "end": "2218359"
  },
  {
    "text": "as s famous as or1 equals 1 semicolon uh this is how we want to break in a simple",
    "start": "2218359",
    "end": "2223760"
  },
  {
    "text": "way out of our xth we use our single quote we break out of that little Jill block and then we're now in the",
    "start": "2223760",
    "end": "2229240"
  },
  {
    "text": "conditional statement that exists between name and pass and we say or 1 equals 1 which is obviously uh what's",
    "start": "2229240",
    "end": "2234880"
  },
  {
    "text": "that called starts with an S something that's always true come on here okay uh",
    "start": "2234880",
    "end": "2240520"
  },
  {
    "text": "this is always true or quote equals double quote so this little block may look a little odd this exists because we",
    "start": "2240520",
    "end": "2247760"
  },
  {
    "text": "know that after we say Joe we don't have it's not like SQL where we can put a semicolon in a semicolon Dash Dash and",
    "start": "2247760",
    "end": "2253680"
  },
  {
    "text": "it will throw away the rest of the line we have to somehow use the quote they've already put in to our advantage and so",
    "start": "2253680",
    "end": "2259480"
  },
  {
    "text": "in this situation we create two empty strings and say if they're equal to each other and so because of the ordering of",
    "start": "2259480",
    "end": "2264520"
  },
  {
    "text": "how conditionals work or or and this doesn't mean or or or this and then and this it means that",
    "start": "2264520",
    "end": "2271880"
  },
  {
    "text": "even though this one might not be true and this one might be true this or is the operative one and so so this whole",
    "start": "2271880",
    "end": "2278240"
  },
  {
    "text": "thing returns true no matter what so what this does in reality since it's probably a SL slash it's returning a",
    "start": "2278240",
    "end": "2285560"
  },
  {
    "text": "list of all of the users that meet true so all of the users so just like a quote or one equals",
    "start": "2285560",
    "end": "2293760"
  },
  {
    "text": "1 semicolon um depending on how your applications work this might actually work it might only take the first list",
    "start": "2293760",
    "end": "2300079"
  },
  {
    "text": "element because xap always returns a list so if I'm getting the first element anyway uh this it might work it might",
    "start": "2300079",
    "end": "2305839"
  },
  {
    "text": "not Break Stuff um if you want to get a little a little better at it you're going to actually try to figure out a",
    "start": "2305839",
    "end": "2311880"
  },
  {
    "text": "field that means something under that and so I break out I say or user ID equals one or and then I do my quote",
    "start": "2311880",
    "end": "2317920"
  },
  {
    "text": "quote quote it disappears it takes word of this and at the end and returns everybody that has it user ID uh",
    "start": "2317920",
    "end": "2323960"
  },
  {
    "text": "obviously this last one requires a little bit of knowledge about the internals of",
    "start": "2323960",
    "end": "2329680"
  },
  {
    "text": "uh of the application uh but still you know that that does exist",
    "start": "2329680",
    "end": "2336800"
  },
  {
    "text": "so like SQL injection said requires a little knowledge of the query this is much easier if you get error messages back yes",
    "start": "2338920",
    "end": "2346040"
  },
  {
    "text": "sir uh no it",
    "start": "2348880",
    "end": "2353519"
  },
  {
    "text": "will username or user ID or because there's three ores it will take any of",
    "start": "2361079",
    "end": "2366599"
  },
  {
    "text": "them two ores",
    "start": "2366599",
    "end": "2372000"
  },
  {
    "text": "one I don't think so because I tried that it worked so we can talk about actually I know it's not and you'll see",
    "start": "2373079",
    "end": "2378240"
  },
  {
    "text": "in the demo that that works yes sir as should said before please raise your hand and Shout Out questions if you",
    "start": "2378240",
    "end": "2384880"
  },
  {
    "text": "don't understand me or you got something interesting yet",
    "start": "2384880",
    "end": "2390960"
  },
  {
    "text": "no so like I said like seal injection requires it's helpful to have some knowledge of how the quer is being put",
    "start": "2391160",
    "end": "2396359"
  },
  {
    "text": "together and what the XML docum looks like that you're you're reading um it's much much easier if you get error messages back just like SQL injection",
    "start": "2396359",
    "end": "2403000"
  },
  {
    "text": "fortunately as you'll see today the default in asp.net and that and some of the open source ones is to return a soap",
    "start": "2403000",
    "end": "2409440"
  },
  {
    "text": "qu with all the information about how the xack broke so you'll see that that actually is is more common Inc um is",
    "start": "2409440",
    "end": "2417400"
  },
  {
    "text": "Amit Klein here Amit Klein no he didn't come to black hat anyway he wrote a great paper called Blind uh xath",
    "start": "2417400",
    "end": "2424680"
  },
  {
    "text": "injection um that he claims he has a tool that can get the entire XML document out by either loog you get one",
    "start": "2424680",
    "end": "2430920"
  },
  {
    "text": "bit out of it as a covert Channel by either logging in or not logging in and that bit by bit you can get the entire",
    "start": "2430920",
    "end": "2436119"
  },
  {
    "text": "XML document out um I'd love to have that tool so if anybody here knows him uh please go bug him and tell him to",
    "start": "2436119",
    "end": "2441839"
  },
  {
    "text": "release it uh like I said xath 2 is much more complicated xath 1 was 20 uh pages",
    "start": "2441839",
    "end": "2448079"
  },
  {
    "text": "long xath 2 is like a 200 Page specification um lots and lots of feature bloed probably a lot of things",
    "start": "2448079",
    "end": "2454119"
  },
  {
    "text": "in there that'll give us shortcuts to these kinds of attacks haven't really looked at yet uh because I'm not that bored to read the xack 2 book which was",
    "start": "2454119",
    "end": "2460960"
  },
  {
    "text": "like seriously that thick um but one thing that does have that looks really",
    "start": "2460960",
    "end": "2466000"
  },
  {
    "text": "cool is that you can reference external documents so I might be able to do things like load files off the hard drive if access control is not set",
    "start": "2466000",
    "end": "2472599"
  },
  {
    "text": "properly or perhaps even load an XML document that I provide on the web and that would at least let me track might",
    "start": "2472599",
    "end": "2478440"
  },
  {
    "text": "even let me do nasty things to that XA query um xquery is a uh super set of",
    "start": "2478440",
    "end": "2485280"
  },
  {
    "text": "xath 2 that is a replacement SQL doing this XML stuff uh it is it is the future",
    "start": "2485280",
    "end": "2491240"
  },
  {
    "text": "it is the new standard by which databases are going to talk to web applications I highly recommend that you learn about xquery uh because a lot of",
    "start": "2491240",
    "end": "2498599"
  },
  {
    "text": "people like it it's going to be a tighter standard than SQL was right because everybody's SQL is is actually",
    "start": "2498599",
    "end": "2503680"
  },
  {
    "text": "incompatible uh they're trying not to do that with xquery um and because it does have xath in it these same",
    "start": "2503680",
    "end": "2509599"
  },
  {
    "text": "vulnerabilities will exist and for example if I was doing the same thing using xquery I'd ask a SQL database uh",
    "start": "2509599",
    "end": "2516800"
  },
  {
    "text": "say uh well if somebody supported xquery I think there's only a couple databases that do it right now if I asked if I",
    "start": "2516800",
    "end": "2522680"
  },
  {
    "text": "wanted to do the same thing I would say from this document which is the same as a table and SQL I want to do this XA",
    "start": "2522680",
    "end": "2528640"
  },
  {
    "text": "query and that same injection would work there obviously um the downside for for",
    "start": "2528640",
    "end": "2533760"
  },
  {
    "text": "attackers for art for us uh I mean the good thing for the world and the bad thing for the thing people in this room",
    "start": "2533760",
    "end": "2540240"
  },
  {
    "text": "um is that access control is now going to be actually a standard because with xquery uh people are going to have databases that have good Access Control",
    "start": "2540240",
    "end": "2546280"
  },
  {
    "text": "in different tables and rows so the ability to walk winly through the XML document uh that exists right now pretty",
    "start": "2546280",
    "end": "2552520"
  },
  {
    "text": "often is not going to exist there anymore yes",
    "start": "2552520",
    "end": "2556319"
  },
  {
    "text": "sir it's almost never",
    "start": "2557599",
    "end": "2561640"
  },
  {
    "text": "implemented does it XML three or four four okay it's it's most things done",
    "start": "2563960",
    "end": "2571480"
  },
  {
    "text": "so Microsoft guys in the room stand up we'll give you a cluse no okay",
    "start": "2571480",
    "end": "2578760"
  },
  {
    "text": "no you're here um so in all of these attacks we've got",
    "start": "2578760",
    "end": "2585319"
  },
  {
    "text": "a friend in XML it's called the C dat field uh C data is the way that was designed in XML to have if I've got a",
    "start": "2585319",
    "end": "2590960"
  },
  {
    "text": "bunch of junk that I don't want to have to escape multiple times and doing this you can there are different escaping methods by which you can do the same",
    "start": "2590960",
    "end": "2597119"
  },
  {
    "text": "thing this is the easiest way to do it you create this thing called a c data field um and I'm not going to explain it too much but basically allows me to say",
    "start": "2597119",
    "end": "2604240"
  },
  {
    "text": "after this don't think about the XML until you see square bracket square bracket and so I can put a bunch of of",
    "start": "2604240",
    "end": "2610319"
  },
  {
    "text": "crap it in and use it for injection right it works for XML injection SQL injection xack injection crossy",
    "start": "2610319",
    "end": "2615480"
  },
  {
    "text": "scripting if you're doing a cross site scripting attack and gets a different web interface obviously crossy scripting doesn't do anything to a soap stack but",
    "start": "2615480",
    "end": "2621839"
  },
  {
    "text": "it will do it if somebody else is looking at this data in a browser um C data is really useful the great thing",
    "start": "2621839",
    "end": "2627280"
  },
  {
    "text": "about it um is that uh it's it's it's",
    "start": "2627280",
    "end": "2632400"
  },
  {
    "text": "invisible to the the application developer right although the information's in there if I create a of",
    "start": "2632400",
    "end": "2637559"
  },
  {
    "text": "XML it actually creates a cataa child node the if I if I create if I want somebody's username and I ask for the",
    "start": "2637559",
    "end": "2643200"
  },
  {
    "text": "string and it was from a c data that string just magically gets turned into my string right so it doesn't go through",
    "start": "2643200",
    "end": "2648920"
  },
  {
    "text": "and do amber GTS or anything like that so it's great if people aren't using XML schema to say no C data fields then",
    "start": "2648920",
    "end": "2655359"
  },
  {
    "text": "you're going to probably be able to do uh in injection attacks using C data so",
    "start": "2655359",
    "end": "2660559"
  },
  {
    "text": "it's a great thing to try if you're having uh problems because you're doing XML injection xath injection it's breaking the XML",
    "start": "2660559",
    "end": "2667680"
  },
  {
    "text": "okay any questions about those kinds of XML vulnerabilities and attacks no okay so uh soap is a standard",
    "start": "2667680",
    "end": "2675319"
  },
  {
    "text": "that uses XML to basically do RPC to do remote procedure calls it lets me use XML to say hey do something for me and",
    "start": "2675319",
    "end": "2682359"
  },
  {
    "text": "for that person to come back and say yes I did it here's the data that you get from there um it's generally used over",
    "start": "2682359",
    "end": "2687520"
  },
  {
    "text": "HTTP uh and there's a standard specifically about how soap fits into hcp uh but it doesn't have to be and it",
    "start": "2687520",
    "end": "2693720"
  },
  {
    "text": "can be used over uh smq or SMTP or the IP over carrier pigeon if that ever that",
    "start": "2693720",
    "end": "2699160"
  },
  {
    "text": "RFC ever gets implemented um so you can't really assume that's only over",
    "start": "2699160",
    "end": "2704240"
  },
  {
    "text": "HTTP uh this is where the Magic Begins of web services right the soap has a bunch of Technologies wrapped around it",
    "start": "2704240",
    "end": "2709640"
  },
  {
    "text": "to do all this kind of cool automatic stuff uh and so because it's so easy to",
    "start": "2709640",
    "end": "2714800"
  },
  {
    "text": "use in most of these Frameworks a lot of things are often left wide open uh soap",
    "start": "2714800",
    "end": "2720200"
  },
  {
    "text": "soap interfaces right I if I'm a server I provide a soap interface for you to call that is defined by thing called a",
    "start": "2720200",
    "end": "2725680"
  },
  {
    "text": "wisdom web service description language uh it's this very complicated XML document they're generally not made by",
    "start": "2725680",
    "end": "2731640"
  },
  {
    "text": "humans there are situations which humans do like I think Google when they make their apis they handw write them because",
    "start": "2731640",
    "end": "2736680"
  },
  {
    "text": "they're very simple and they want to have maximum compatibility but generally they're autogenerated by your Frameworks",
    "start": "2736680",
    "end": "2742000"
  },
  {
    "text": "that little 10 lines of code I showed you before if you hit compile on Visual Studio The NET Framework will automatically provide you of a wisle",
    "start": "2742000",
    "end": "2748960"
  },
  {
    "text": "that describes that service if you ask for it nicely um we have a tool that ask for it nicely um and so they're actually",
    "start": "2748960",
    "end": "2756400"
  },
  {
    "text": "really hard to read because they're not meant for human consumption being able to read it as an attacker is actually kind of is useful uh because a whistle",
    "start": "2756400",
    "end": "2764319"
  },
  {
    "text": "gives you everything you need to attack an interface and this is important because this is a big departure from web apps right a big part of attacking a web",
    "start": "2764319",
    "end": "2771400"
  },
  {
    "text": "application is discovery of the attack surface but if I have a soap interface and it publishes a wisle and I don't",
    "start": "2771400",
    "end": "2777359"
  },
  {
    "text": "think they're playing any games with it like it was handc if I think it's a real wisol that was generated that tells me",
    "start": "2777359",
    "end": "2782880"
  },
  {
    "text": "everything I can do to that application no more trying different you know root forcing different ears no no more",
    "start": "2782880",
    "end": "2788440"
  },
  {
    "text": "running niit toe to try all the different CGI bin directories that wisle just says hey here's all my interfaces",
    "start": "2788440",
    "end": "2795280"
  },
  {
    "text": "try to do something bad for them these are all the things I can do um and so that actually makes writing really cool automated tools that you know are really",
    "start": "2795280",
    "end": "2802280"
  },
  {
    "text": "really difficult with web apps because that kind of Discovery stuff is really hard um it makes it much easier at web",
    "start": "2802280",
    "end": "2808559"
  },
  {
    "text": "services and that what makes it possible to write a kind of a universal fuzzer is something that we're we'll be talking about today um question you to ask",
    "start": "2808559",
    "end": "2816160"
  },
  {
    "text": "yourself if you're defense side do you need to provide somebody with a wisdom right are you opening up this web service for everybody to see if so then",
    "start": "2816160",
    "end": "2823119"
  },
  {
    "text": "you might have to but even in that case or you opening up for people that you don't know personally or that you're not going to talk to on a human level right",
    "start": "2823119",
    "end": "2829440"
  },
  {
    "text": "if I'm doing B2B I can probably call the Soap guy from the other company and email him a wisle so that he can build",
    "start": "2829440",
    "end": "2836240"
  },
  {
    "text": "his software to talk to my interface that doesn't mean I have to provide it to everybody the reason it's provided to everybody is because it's a default step",
    "start": "2836240",
    "end": "2842000"
  },
  {
    "text": "and people don't know to turn it off um if you guys have web access right now",
    "start": "2842000",
    "end": "2847040"
  },
  {
    "text": "you can this actually this Earl is incorrect um use the Earl that was in that second or third slide that tells",
    "start": "2847040",
    "end": "2852200"
  },
  {
    "text": "you where the service is and then put question mark wizd behind it and you'll be able to see what a wisle looks like or you just go ws demo. partners.com and",
    "start": "2852200",
    "end": "2859680"
  },
  {
    "text": "click through a couple of links and it'll get you there uh wizzle's defined bun of things like what types you can talk about what a message looks like a",
    "start": "2859680",
    "end": "2865640"
  },
  {
    "text": "message might be I want to buy a car um a port is a thing that is a is kind of a transaction that ties together multiple",
    "start": "2865640",
    "end": "2871559"
  },
  {
    "text": "messages like I say I want to buy a car and then I get the message back here's your receipt um binding or the details",
    "start": "2871559",
    "end": "2877119"
  },
  {
    "text": "on how web services are implemented soap has multiple different document types RPC document literal it's a total mass",
    "start": "2877119",
    "end": "2883960"
  },
  {
    "text": "um those kinds of things that be defined in the binding and then the service is where it's interesting that tells you uh",
    "start": "2883960",
    "end": "2889960"
  },
  {
    "text": "where that service actually exists right U so if I have a wizd file I don't have to have an Earl for a web app so that's",
    "start": "2889960",
    "end": "2896440"
  },
  {
    "text": "important right I don't have to know where that web service is because the wisle tells me where it is so this is",
    "start": "2896440",
    "end": "2901599"
  },
  {
    "text": "why you can create uh big directories that all they have is wisd they don't need to have any other information about",
    "start": "2901599",
    "end": "2906880"
  },
  {
    "text": "web services to provide people that oh these web services exist this is an example Wizzle as you",
    "start": "2906880",
    "end": "2912720"
  },
  {
    "text": "can see it's incredibly ugly and impossible to read at that distance um even for something very simple very",
    "start": "2912720",
    "end": "2918440"
  },
  {
    "text": "large whistles get created uh you can go ahead and look at WS partner wsdo is.com",
    "start": "2918440",
    "end": "2924520"
  },
  {
    "text": "go to the wisle there asp.net provides you with a nice pretty one uh that'll give you a good",
    "start": "2924520",
    "end": "2930040"
  },
  {
    "text": "example so like I said uh wisle give away all the sense of information you need",
    "start": "2930040",
    "end": "2936839"
  },
  {
    "text": "why does the up button not go up but go down Microsoft people",
    "start": "2936839",
    "end": "2943160"
  },
  {
    "text": "anybody um so wizd give away things like the hidden or debug methods that have",
    "start": "2943160",
    "end": "2948680"
  },
  {
    "text": "always existed right web apps always have some crazy little thing you can put into a post that do some kind of debug",
    "start": "2948680",
    "end": "2954520"
  },
  {
    "text": "functionality that kind of stuff used to be really hard to find by pen testers because you'd have to look really hard and You' have to have source code which",
    "start": "2954520",
    "end": "2961000"
  },
  {
    "text": "is the nice cheating way right um in this case that kind of stuff would be automatically generated in qu to you we",
    "start": "2961000",
    "end": "2967319"
  },
  {
    "text": "actually saw a real Enterprise web application deployed on the internet that had a soap method called make me",
    "start": "2967319",
    "end": "2975599"
  },
  {
    "text": "admin right for debug uses you can log in as my low rights user and then I just",
    "start": "2975599",
    "end": "2981040"
  },
  {
    "text": "call that interface and I become the admin I can do all kinds of stuff that was their little back door and you know",
    "start": "2981040",
    "end": "2986440"
  },
  {
    "text": "putting making the admin in the right field in a post might not have been something I would have found anyway but it's really easy if you're looking at a",
    "start": "2986440",
    "end": "2992200"
  },
  {
    "text": "whistle um so you know this also not only the application as people start to move over",
    "start": "2992200",
    "end": "2999400"
  },
  {
    "text": "to using web services um these kind of cruff systems that everybody has who here knows of somebody's like FTP job in",
    "start": "2999400",
    "end": "3006000"
  },
  {
    "text": "the middle of the night right all kinds of crazy things happen in real Enterprises with billions of dollars moving around that's like a 9-year-old",
    "start": "3006000",
    "end": "3014040"
  },
  {
    "text": "FTP program moving a binary file across the internet unencrypted at 2 a.m. right that kind of stuff as it gets moved over",
    "start": "3014040",
    "end": "3019760"
  },
  {
    "text": "to web services is going to be advertised and visible and so people are going to have to actually pay attention that they're doing this stuff securely",
    "start": "3019760",
    "end": "3025720"
  },
  {
    "text": "uh so the defense here if you have to publish a wisle you go through and manually edit it or you create your own",
    "start": "3025720",
    "end": "3031200"
  },
  {
    "text": "by hand to get rid of the dangerous functions that you don't want to expose if you have to expose those for de persones the best thing is to get rid of",
    "start": "3031200",
    "end": "3037119"
  },
  {
    "text": "that stupid debug functionality or anything that you don't want people to see uh because you know very possibly",
    "start": "3037119",
    "end": "3042319"
  },
  {
    "text": "your stuff will automa magic generate these whistles again anyway so even if you edit it you're kind of screwed in the",
    "start": "3042319",
    "end": "3048520"
  },
  {
    "text": "end so different types of attacks uh soap has a envelope which kind of says this is soap these are name spaces it",
    "start": "3048520",
    "end": "3054920"
  },
  {
    "text": "has a header which generally isn't used by most things but the header is very important because that's how they support all these crazy signature",
    "start": "3054920",
    "end": "3061200"
  },
  {
    "text": "standards and stuff like that and then the body the body's got thing that's important um the header doesn't even have to be in the message for the",
    "start": "3061200",
    "end": "3067040"
  },
  {
    "text": "message to be understood but it's still understood by web service Frameworks whether or not your application says I",
    "start": "3067040",
    "end": "3073040"
  },
  {
    "text": "need to use something in the header the the web service framework will eat that header up so what's this mean it means",
    "start": "3073040",
    "end": "3079440"
  },
  {
    "text": "you can put arbitrary XML complexity attacks in the header and no matter if people are doing ex xsd schema uh",
    "start": "3079440",
    "end": "3086079"
  },
  {
    "text": "validation um if they're doing like a sax parer that's smart and stops after it hits something stupid no matter what",
    "start": "3086079",
    "end": "3091720"
  },
  {
    "text": "they're doing if you send a so message that has something nasty in the header that's going to get parsed and whatever",
    "start": "3091720",
    "end": "3097160"
  },
  {
    "text": "happens in there is going to happen before the application even gets the data so has nothing to do the person's application has to do with the web",
    "start": "3097160",
    "end": "3103160"
  },
  {
    "text": "service framework the web sphere or uh net or Apache access they eat the headers up so one attack is XML",
    "start": "3103160",
    "end": "3111160"
  },
  {
    "text": "complexity attack we're going talk about XML and BMS in a second in there another attack is using Source routing there's this thing called us rowy people want to",
    "start": "3111160",
    "end": "3117839"
  },
  {
    "text": "be able to provide these XML firewalls do this want to be able to provide multiple web services through one port",
    "start": "3117839",
    "end": "3123160"
  },
  {
    "text": "443 because you know it wasn't insecure enough right um and so they use things like d routing to say hey I want to talk",
    "start": "3123160",
    "end": "3129440"
  },
  {
    "text": "to your main frame I want to talk to this um if you assume if you assume that that stuff's just going to be figured",
    "start": "3129440",
    "end": "3134599"
  },
  {
    "text": "out automatically by the software you're probably wrong there's Source routing and WS routing and the sil header there's a thing called the soap action",
    "start": "3134599",
    "end": "3140440"
  },
  {
    "text": "header which is you can change it what the method style is and you can sometime B backass connections sorry I'm going to",
    "start": "3140440",
    "end": "3145839"
  },
  {
    "text": "have to whip through through this now um soap is stateless like hcp you do a port",
    "start": "3145839",
    "end": "3152240"
  },
  {
    "text": "you do something you get the response back and then you're done right doesn't have any state mechanism to track the user and stuff that's left to you bunch",
    "start": "3152240",
    "end": "3158119"
  },
  {
    "text": "of people different people use different ways of tracking soap sessions um one common One is using HTTP cookies which",
    "start": "3158119",
    "end": "3164680"
  },
  {
    "text": "is pretty foolish because soap is generally you have one HTP connection that cookie comes across and then who",
    "start": "3164680",
    "end": "3170680"
  },
  {
    "text": "knows what happens to that soap message and so we've seen situations where people have an hcp cookie that goes with the soap message do my S information and",
    "start": "3170680",
    "end": "3177599"
  },
  {
    "text": "then that gets stripped and the message gets sent to a an as400 or something and that message stands alone without any",
    "start": "3177599",
    "end": "3183559"
  },
  {
    "text": "session information and obviously that opens you up to be able to basically do anything right um You can also do inband",
    "start": "3183559",
    "end": "3189599"
  },
  {
    "text": "session which is how most people do it right I'll do a login and it'll send me something back that says here's your session ID and then I'll just include",
    "start": "3189599",
    "end": "3195599"
  },
  {
    "text": "that as a field in every request that's not a bad way of doing it obviously if you do that stupid in a stupid way like",
    "start": "3195599",
    "end": "3201680"
  },
  {
    "text": "you know people always have with sequential or o I'll count from 1 to 10 and do a sha one and nobody will figure",
    "start": "3201680",
    "end": "3206960"
  },
  {
    "text": "out that's a Shaw one of a number that's incrementing if you do stuff like that you're going to get caught um and that",
    "start": "3206960",
    "end": "3212280"
  },
  {
    "text": "stuff is still stupid um one benefit to using soap as opposed to just regular HTML um is that it's actually hard you",
    "start": "3212280",
    "end": "3219480"
  },
  {
    "text": "know I can do my image equals name plus document. cookie that's an xss attack that work on most web applications to",
    "start": "3219480",
    "end": "3225640"
  },
  {
    "text": "get the cookie that kind of stuff is actually really difficult I have to interact with the XML object uh",
    "start": "3225640",
    "end": "3231160"
  },
  {
    "text": "underneath it so cross scripting attacks are much more difficult it's like Ajax application you get that session information",
    "start": "3231160",
    "end": "3237640"
  },
  {
    "text": "um so soap is also stateless so it might make applications vulnerable to replay attx if I have a three-step transaction",
    "start": "3237640",
    "end": "3243640"
  },
  {
    "text": "to transfer money I ask for the money transfer then I confirm the money transfer and it says yes your money's",
    "start": "3243640",
    "end": "3248680"
  },
  {
    "text": "transferred make sure that second step in your application when you send up the information somebody needs to confirm",
    "start": "3248680",
    "end": "3254079"
  },
  {
    "text": "that that it only happens once right because people can Replay that soap message over and over again and transfer",
    "start": "3254079",
    "end": "3259520"
  },
  {
    "text": "do the the money transfer over again so here's an example soap message",
    "start": "3259520",
    "end": "3264559"
  },
  {
    "text": "who's the I bet karus is the first person to spot the attack of it because she's closest to the",
    "start": "3264559",
    "end": "3270559"
  },
  {
    "text": "slide right this is a soap message that will be sent later today in the demo uh",
    "start": "3270720",
    "end": "3276559"
  },
  {
    "text": "like I said here's the little XML version that we always have an XML doc um here's a soap envelope it's got a",
    "start": "3276559",
    "end": "3281680"
  },
  {
    "text": "bunch of junk in there just basically says we're talking about soap in here uh and then I have the body and the body",
    "start": "3281680",
    "end": "3286799"
  },
  {
    "text": "says I'm going to call a method log on user and I'm going to give it some arguments and oh I'm sorry this is the",
    "start": "3286799",
    "end": "3293599"
  },
  {
    "text": "name space and this is the name space of the user so that these very belong to that name space and then here are my",
    "start": "3293599",
    "end": "3299720"
  },
  {
    "text": "different arguments uh my arguments my username and my password and in my username I put a",
    "start": "3299720",
    "end": "3305920"
  },
  {
    "text": "single quote and the password is default so I'm trying this is a little test to see if they're doing input",
    "start": "3305920",
    "end": "3311319"
  },
  {
    "text": "filtering right maybe they've got some xack on the other side that takes this and the result as Scott will walk",
    "start": "3311319",
    "end": "3319040"
  },
  {
    "text": "through later this is the so fault you get by default from asp.net server was enabl to process request here",
    "start": "3319040",
    "end": "3326680"
  },
  {
    "text": "is the xath injection in why broke thank you for coming please own me",
    "start": "3326680",
    "end": "3332480"
  },
  {
    "text": "that's what that says there should be a flag in soap a soap fault that says please own me they should have a special",
    "start": "3332480",
    "end": "3337880"
  },
  {
    "text": "code for that okay so you guys will see that soap attack in a second so I'm not going to",
    "start": "3337880",
    "end": "3343160"
  },
  {
    "text": "go over it so web service metal service this is a a huge issue that nobody is really talking about yet um and I hope",
    "start": "3343160",
    "end": "3350359"
  },
  {
    "text": "that people will start to after they see these attacks in a while um we personally have done this with a number of our clients the way we did it is we",
    "start": "3350359",
    "end": "3356599"
  },
  {
    "text": "created simple Pearl scripts that are optimized for Speed and the great thing about these these attacks is just like",
    "start": "3356599",
    "end": "3362760"
  },
  {
    "text": "any dos attack I'm looking for a multiplier you can get these great multipliers with web services even if",
    "start": "3362760",
    "end": "3368559"
  },
  {
    "text": "it's just the parsing of the message the diff difficulty of me using Pearl to open up an HTTP to open up a sock and do",
    "start": "3368559",
    "end": "3375240"
  },
  {
    "text": "an HTTP post of an XML document that's static document that I don't have to edit or anything the difficulty of that",
    "start": "3375240",
    "end": "3380839"
  },
  {
    "text": "versus when it takes the other person to take that document and now I'm going to parse it and I load it into my dom and my dom build a huge object in memory",
    "start": "3380839",
    "end": "3387920"
  },
  {
    "text": "that represents this document oh your document has 100,000 nested uh a statements that's fine I'll build a",
    "start": "3387920",
    "end": "3393760"
  },
  {
    "text": "document I'll build an object that has 100,000 child nodes right each one of those objects is a c object running in",
    "start": "3393760",
    "end": "3399000"
  },
  {
    "text": "the CLR with its own garbage collection and its own I mean you can imagine this can get out of control there's a huge",
    "start": "3399000",
    "end": "3404799"
  },
  {
    "text": "multiplier there there's CPU time right the CPU time it takes to to generate those there's memory space although",
    "start": "3404799",
    "end": "3410799"
  },
  {
    "text": "you're probably not going to run out of memory space on a production server certainly application servers have memory limit for different functions",
    "start": "3410799",
    "end": "3417039"
  },
  {
    "text": "they provide and so you might be able to run out of the memory of that and cause it to die and uh so that's I mean those",
    "start": "3417039",
    "end": "3423079"
  },
  {
    "text": "are XML complexity attacks and we've done them and it works against production Hardware with real life",
    "start": "3423079",
    "end": "3428280"
  },
  {
    "text": "current versions you can set very very complex XML documents on a laptop and take down a production four proc machine",
    "start": "3428280",
    "end": "3435280"
  },
  {
    "text": "with like 8 gigs of r with one of these laptops it's a ThinkPad t42 1.8",
    "start": "3435280",
    "end": "3441960"
  },
  {
    "text": "GHz so because you got a huge huge CPU and memory m player time really the only",
    "start": "3441960",
    "end": "3447559"
  },
  {
    "text": "restriction you have is is is network speed and so if we were doing this in a lab so we had like 100 megabit switch",
    "start": "3447559",
    "end": "3453880"
  },
  {
    "text": "we'd have to do it distributed really on the internet to have enough to use up enough bandwidth to send that many XML",
    "start": "3453880",
    "end": "3459200"
  },
  {
    "text": "files but it does work um another attack that another thing that I can use up is",
    "start": "3459200",
    "end": "3464640"
  },
  {
    "text": "database connections so if I send a soap request that actually does something that's a method that actually does",
    "start": "3464640",
    "end": "3470319"
  },
  {
    "text": "something important then it probably has to go talk to something about that it has to go talk to a database or an XML",
    "start": "3470319",
    "end": "3475640"
  },
  {
    "text": "database or main frame right and those things are generally defined by having pools and so if I can find the thing",
    "start": "3475640",
    "end": "3481280"
  },
  {
    "text": "that is takes very little for me to do but it takes you a lot of time to go to that database I can probably use up that",
    "start": "3481280",
    "end": "3487480"
  },
  {
    "text": "connection pool even if it doesn't overload the CPU and stuff if you do it over and over over again you can use it",
    "start": "3487480",
    "end": "3493400"
  },
  {
    "text": "that pool and make the application we've done this too and the application was not responding to user input and it had",
    "start": "3493400",
    "end": "3499480"
  },
  {
    "text": "like 4% CPU load right because it had a reasonably sized database connection CU like a 500 or something like that which",
    "start": "3499480",
    "end": "3505680"
  },
  {
    "text": "they had never run into in production use with millions of users but in our situation uh it worked great because we",
    "start": "3505680",
    "end": "3512440"
  },
  {
    "text": "were doing something that we knew would take a lot of time for the database we have to search through a huge table and so if you can guess something and how do",
    "start": "3512440",
    "end": "3518720"
  },
  {
    "text": "I guess something well I go to the wisle and I look at all the things that look dangerous like search for something right or a user login that's the perfect",
    "start": "3518720",
    "end": "3526280"
  },
  {
    "text": "example when I give you my username you have to look through a huge table of users to find that username first and if",
    "start": "3526280",
    "end": "3531799"
  },
  {
    "text": "I know you have 100,000 users that database you know that's going to take a",
    "start": "3531799",
    "end": "3538038"
  },
  {
    "text": "signant so in in either case there's a lot of details that you have to get right uh you have to have a legal soap",
    "start": "3538520",
    "end": "3544480"
  },
  {
    "text": "request like we said you might have to valid session ID so in our script we needed one so we' get a session ID put",
    "start": "3544480",
    "end": "3549640"
  },
  {
    "text": "it into the the XML document and replay with the same session ID over and over again that's why you have want to have rate limiting on uh on what one person",
    "start": "3549640",
    "end": "3557280"
  },
  {
    "text": "can do um and then speed um actually doing this kind of attack is is much",
    "start": "3557280",
    "end": "3562599"
  },
  {
    "text": "heavier than like a sin flood right because I have to get a real HTP connection I have to send it um I might",
    "start": "3562599",
    "end": "3567720"
  },
  {
    "text": "have to listen for a response sometimes if you tear down the TCP connection uh it will stop responding um but there are",
    "start": "3567720",
    "end": "3574640"
  },
  {
    "text": "ways to do it faster and one of them is HTP 1.1 pipelining I this is especially important in SSL situation where I don't",
    "start": "3574640",
    "end": "3580559"
  },
  {
    "text": "want to do an RSA handshake for every single XML document I send up so I create an SSL connection I create an hcp",
    "start": "3580559",
    "end": "3586319"
  },
  {
    "text": "1.1 Pipeline and I send it up over and over again and I just create 20 or 30 or 40 of those connections and that will be",
    "start": "3586319",
    "end": "3591960"
  },
  {
    "text": "at the server done uh defense isn't easy this is something the application server people have to take care of because I",
    "start": "3591960",
    "end": "3598000"
  },
  {
    "text": "mean you guys can protect to your own yourselves you can use xsds and such but there's nothing you can do about the soad right that's eaten up by net that's",
    "start": "3598000",
    "end": "3605480"
  },
  {
    "text": "eaten up by web spere that's eaten up by Apache access before your application gets called um and so you need to check",
    "start": "3605480",
    "end": "3611520"
  },
  {
    "text": "the complexity of the document before it gets in one thing I didn't put in here a good protection is just to have reasonable limits on your web server of",
    "start": "3611520",
    "end": "3618119"
  },
  {
    "text": "what people can post right there's no reason somebody needs to post up an XML a 10ag XML file that's never part of it",
    "start": "3618119",
    "end": "3624520"
  },
  {
    "text": "most people so uh requests and responses are 50k so if you say 100K and you",
    "start": "3624520",
    "end": "3630440"
  },
  {
    "text": "double it for safety that's going to greatly affect the ability of people to do really complex attacks uh this is",
    "start": "3630440",
    "end": "3635480"
  },
  {
    "text": "also why the XML firewall people actually sell some their boxes this is one attack that uh they do",
    "start": "3635480",
    "end": "3642000"
  },
  {
    "text": "predict uh Discovery methods uddi is a method it's not it's not based on soap or any of these web service it's XML",
    "start": "3642000",
    "end": "3648720"
  },
  {
    "text": "it's a way of advertising if I'm a company I have all these standards um I have all these services so if I'm let's",
    "start": "3648720",
    "end": "3654039"
  },
  {
    "text": "say the Bank of China as we'll see next and I say here's my service for you to trade uh to do uh your banking",
    "start": "3654039",
    "end": "3660920"
  },
  {
    "text": "information here's our service for our Commercial Banking I publish that through a uddi server uh we've seen",
    "start": "3660920",
    "end": "3668000"
  },
  {
    "text": "these out in the wild we've seen these on for real on the internet and people are like oh we haven't told anybody",
    "start": "3668000",
    "end": "3673400"
  },
  {
    "text": "about it so we'll never find all our secret B2B Services even though they have an an unauthenticated BDI server",
    "start": "3673400",
    "end": "3678599"
  },
  {
    "text": "out there there's this great these great things called the duddi business registry so everybody right now if you have a website uh and you have a hot",
    "start": "3678599",
    "end": "3685280"
  },
  {
    "text": "mail like a pass passport account go to ud. microsoft.com they all require you",
    "start": "3685280",
    "end": "3690880"
  },
  {
    "text": "to register but all you need is an email address to register so I'm sure that'll keep the bad guys away right um but",
    "start": "3690880",
    "end": "3696039"
  },
  {
    "text": "Microsoft is easiest if you have a passport passport will work uddi microsoft.com that's a universal that's",
    "start": "3696039",
    "end": "3701680"
  },
  {
    "text": "a uddi business registry there's four major ones they have these great web interfaces that let you search for things like I want to find all of the",
    "start": "3701680",
    "end": "3708000"
  },
  {
    "text": "banks that have an advertisement through you um one of the really scary things here is there's no real secure binding",
    "start": "3708000",
    "end": "3713680"
  },
  {
    "text": "of who those people are they're coming out with all these PP standards for web services they're not really being run",
    "start": "3713680",
    "end": "3719000"
  },
  {
    "text": "yet so it's difficult to know that Bank of America really is Bank of America actually I could become Bank of America",
    "start": "3719000",
    "end": "3724279"
  },
  {
    "text": "and post a Bank of America in the Microsoft udv and nobody calls me to check that's true for all the",
    "start": "3724279",
    "end": "3730599"
  },
  {
    "text": "ubr and here's the example this is the Bank of China advertising uh their",
    "start": "3730599",
    "end": "3736400"
  },
  {
    "text": "banking web service maybe it's them I don't know could be anybody but this is",
    "start": "3736400",
    "end": "3741960"
  },
  {
    "text": "a nice little graphical interface it's really cool um these things exist because of this",
    "start": "3741960",
    "end": "3747880"
  },
  {
    "text": "this whole buzzword called service oriented architecture which is the idea that computers can go out understand that I need to buy stuff and that",
    "start": "3747880",
    "end": "3754319"
  },
  {
    "text": "computer can go find the person they want to buy from and that that person's actually another computer and then do",
    "start": "3754319",
    "end": "3759359"
  },
  {
    "text": "the purchase and all that happens automatically it's kind of delay binding of applications um it's a crazy idea",
    "start": "3759359",
    "end": "3764880"
  },
  {
    "text": "it's never going to work it's going to be insecure uh watch out uh there's other great third party Registries e",
    "start": "3764880",
    "end": "3770680"
  },
  {
    "text": "methods. net has all these really cool um web services like lookup sensus data and stuff like that which is",
    "start": "3770680",
    "end": "3776559"
  },
  {
    "text": "and then disco WS inspection is a lightweight version of uddi it's a Microsoft standard that's becoming WS",
    "start": "3776559",
    "end": "3782000"
  },
  {
    "text": "inspection is becoming it's just basically flat files that you put in specific parts of your web rout that say these are the web services I have and",
    "start": "3782000",
    "end": "3788039"
  },
  {
    "text": "our tool will find those automatically for you and then we talk about our traditional application attacks these",
    "start": "3788039",
    "end": "3793640"
  },
  {
    "text": "all exist SQL injections still exist obviously right if you have SQL in the back end of a web service I can use my C dat field do SQL injection wham bam",
    "start": "3793640",
    "end": "3800760"
  },
  {
    "text": "thank you ma'am same old same old everybody's talking about SQL in overflows an unmanaged code right all",
    "start": "3800760",
    "end": "3805839"
  },
  {
    "text": "these web service Frameworks most of them are like python or Java or C things that don't have overflows in them but",
    "start": "3805839",
    "end": "3811319"
  },
  {
    "text": "there are specific Technologies meant to take C+ plus compiled code and wrap web services around them the great one's",
    "start": "3811319",
    "end": "3817319"
  },
  {
    "text": "called do net remoting take a com object like just off-the-shelf com object like an ActiveX object you tweak it a little",
    "start": "3817319",
    "end": "3823760"
  },
  {
    "text": "bit to make it have the right interfaces and then you you click a couple buttons in visual studio and all of a sudden",
    "start": "3823760",
    "end": "3829039"
  },
  {
    "text": "people can come over the Internet talk to your IIs server and that I server will hand that information over to the",
    "start": "3829039",
    "end": "3834279"
  },
  {
    "text": "com component a great idea right and we know people are actually using it um in",
    "start": "3834279",
    "end": "3840359"
  },
  {
    "text": "the world because they've written these comp components that do dangerous St that do stuff like you know transfer money or buy stocks and they don't want",
    "start": "3840359",
    "end": "3846680"
  },
  {
    "text": "to rewrite them in C so we'll just write this we'll just wrap this stuff around it and magically the information will get there obviously if there's an",
    "start": "3846680",
    "end": "3852000"
  },
  {
    "text": "overflow there the Overflow is still there and the com component it's now just exposed of report",
    "start": "3852000",
    "end": "3858520"
  },
  {
    "text": "0 and then cross stripping still exists like I said either in Ajax applications that get XML information and then make",
    "start": "3858520",
    "end": "3865799"
  },
  {
    "text": "get HTML displayed like I I get my Google Map information it turns into HTML or if I'm attacking at somebody",
    "start": "3865799",
    "end": "3871400"
  },
  {
    "text": "else's web interface so we have two attack tools we're going to demo one of them whis ban the other one's called whiz map whsb is",
    "start": "3871400",
    "end": "3878119"
  },
  {
    "text": "a a fuzzer that does all its fuzzing stuff automatically the the one's called whiz map uh wiiz map is specifically",
    "start": "3878119",
    "end": "3884680"
  },
  {
    "text": "requires you to use webcare to use it uh we love webcare we use it a lot and it's",
    "start": "3884680",
    "end": "3890400"
  },
  {
    "text": "great for a situation like if you're uh it will take your webcare blogs and look at all the Earls you looked at and all",
    "start": "3890400",
    "end": "3895920"
  },
  {
    "text": "the implied directories it'll look for any web services and all that so you spend a day uh uh you spend a day doing",
    "start": "3895920",
    "end": "3901880"
  },
  {
    "text": "your pen Tes a you create your web scare blogs you run wiiz map and it'll give you a list of any web service interfaces",
    "start": "3901880",
    "end": "3907000"
  },
  {
    "text": "that you may have run over it's also really good for like debugging if you're using things like a a thick client that uses we uh web services and you can get",
    "start": "3907000",
    "end": "3914079"
  },
  {
    "text": "a go through a proxy that works great and I'll let uh Scott explain how wman works so this is our T tree I think",
    "start": "3914079",
    "end": "3919920"
  },
  {
    "text": "everybody understands how that works so a big question is the OS top 10",
    "start": "3919920",
    "end": "3925079"
  },
  {
    "text": "so relevant a lot of people here will say it was never relevant um but these are some good bugs every single one of",
    "start": "3925079",
    "end": "3931520"
  },
  {
    "text": "these things still exists in web services some are a little change AC cross stripping or buffer overflows but they still do exist and so our",
    "start": "3931520",
    "end": "3937559"
  },
  {
    "text": "conclusion is that web services are powerful they're easy to use they're open and they're extraordinarily",
    "start": "3937559",
    "end": "3942920"
  },
  {
    "text": "dangerous because people are exposing real functionality real health records real financial institutions real bank",
    "start": "3942920",
    "end": "3949039"
  },
  {
    "text": "accounts real credit reports are being ched over web services right now and the security research hasn't gone in right",
    "start": "3949039",
    "end": "3955279"
  },
  {
    "text": "and this is is just like a a we just did a little look at all the services a lot of these things are kind of the things",
    "start": "3955279",
    "end": "3960480"
  },
  {
    "text": "like you're like oh my god wow maybe publishing uddi by default to everybody is in the smart thing but that's not the",
    "start": "3960480",
    "end": "3966079"
  },
  {
    "text": "thinking in the whole web service Community everything is open and should automatically work security is not a priority and so it's up to us to go out",
    "start": "3966079",
    "end": "3973039"
  },
  {
    "text": "there and do the research and and build these tools and find the bugs and do it publicly so that these people go and",
    "start": "3973039",
    "end": "3979520"
  },
  {
    "text": "they fix these standards so they secure from the outset right it's a little scary that first we had web services and",
    "start": "3979520",
    "end": "3985119"
  },
  {
    "text": "now we have web services security we'll write that 5 years from now right that's the thinking so",
    "start": "3985119",
    "end": "3990640"
  },
  {
    "text": "far and then this is our Shameless plug side we're hiring anybody wants a job uh not working for corporate um they're",
    "start": "3990640",
    "end": "3998240"
  },
  {
    "text": "welcome to drop us a resume to careers atex partners.com and help our partner hu DEET who's up here why youan is",
    "start": "3998240",
    "end": "4004279"
  },
  {
    "text": "giving a fantastic talk at 3:15 own up an EMC to it it's fun um or buy his book",
    "start": "4004279",
    "end": "4012319"
  },
  {
    "text": "so we're going to do the demonstration do we have any other questions on the slide content that are kind of fast before the",
    "start": "4012319",
    "end": "4018559"
  },
  {
    "text": "demo okay turn it over to Scott you're going to see him actually hack",
    "start": "4018880",
    "end": "4026160"
  },
  {
    "text": "away all right can anybody hear me all right so time for the demo I'm",
    "start": "4040279",
    "end": "4046880"
  },
  {
    "text": "the demo funky here's a slide funky I wasn't very good at the slide funky if",
    "start": "4046880",
    "end": "4053279"
  },
  {
    "text": "you just hang out on the third yeah just at the bottom",
    "start": "4062839",
    "end": "4068960"
  },
  {
    "text": "there we go okay so at this point I'm going to demonstrate whizbang whizbang is a whistle based soap fuzzer so what",
    "start": "4077599",
    "end": "4086000"
  },
  {
    "text": "we' have done you know prior to this is use whiz map to identify Target web",
    "start": "4086000",
    "end": "4091279"
  },
  {
    "text": "sources find their URLs and then we feed that URL into whisp so right here we",
    "start": "4091279",
    "end": "4096758"
  },
  {
    "text": "have a service that we found with uh with whiz map this is a standard asp.net",
    "start": "4096759",
    "end": "4104278"
  },
  {
    "text": "web service um you'll see the asmx extension signifying that we just add a little",
    "start": "4104279",
    "end": "4110040"
  },
  {
    "text": "question mark wisle towards the end we find the wisle so this is the default functionality of asp.net like you said",
    "start": "4110040",
    "end": "4116640"
  },
  {
    "text": "you do that feline um web service you hit compile this is created automatically for you um by the way this",
    "start": "4116640",
    "end": "4123880"
  },
  {
    "text": "demo I'm doing it off my local machine but the same exact web service is out on WS demo. partners.com you can work along",
    "start": "4123880",
    "end": "4130600"
  },
  {
    "text": "I just didn't want to uh mess with the network so there's our Wiz when we open",
    "start": "4130600",
    "end": "4136798"
  },
  {
    "text": "up wisbang if you're a c from the command line you just specify the full URL to the wisle in the uh on the",
    "start": "4136799",
    "end": "4143278"
  },
  {
    "text": "command line there I just put hard code into the code right now as you can see this is written in Python we've released",
    "start": "4143279",
    "end": "4150278"
  },
  {
    "text": "it under the GPL it's also available partners.com so to run it we simply run this very",
    "start": "4150279",
    "end": "4157880"
  },
  {
    "text": "simple and we get back a very pretty HTML file which contains the very basic",
    "start": "4157880",
    "end": "4163960"
  },
  {
    "text": "output from the fuzzer so in the First Column we see log on user that was the name of the method that we uh showed",
    "start": "4163960",
    "end": "4170880"
  },
  {
    "text": "earlier in the slides we have the response so this is the actual soap response so when I go out and call the",
    "start": "4170880",
    "end": "4176440"
  },
  {
    "text": "method I get a Str back I print that unless I get an exception in which case I print out soap fault and we can see we",
    "start": "4176440",
    "end": "4182040"
  },
  {
    "text": "have a couple of those in here then there's also a link to verose information so if we click there we see",
    "start": "4182040",
    "end": "4189120"
  },
  {
    "text": "the outgoing HTP headers the outgoing soap request the incoming HTP headers and the incoming soap request so if we",
    "start": "4189120",
    "end": "4195880"
  },
  {
    "text": "look here I don't know if you guys can see my cursor very well I'll go point so here we",
    "start": "4195880",
    "end": "4202679"
  },
  {
    "text": "have the method name log on user and we have two parameters username and",
    "start": "4202679",
    "end": "4209880"
  },
  {
    "text": "password and from the slides earlier you can see that the username we specified is an apostrophe and the password is",
    "start": "4209880",
    "end": "4216679"
  },
  {
    "text": "just default and that generated so fault you look",
    "start": "4216679",
    "end": "4223000"
  },
  {
    "text": "down at the bottom you've already seen this servers unable to process request and",
    "start": "4223000",
    "end": "4228920"
  },
  {
    "text": "asp.net is nice enough to return the xath pr string to us and we see login",
    "start": "4228920",
    "end": "4234880"
  },
  {
    "text": "equals apostrophe apostrophe apostrophe so that apostrophe just went right in there there's no validation there's no escaping it's in there and is completely",
    "start": "4234880",
    "end": "4241880"
  },
  {
    "text": "injectable so we know we have a bu now wisat has a not quite Hollywood",
    "start": "4241880",
    "end": "4248679"
  },
  {
    "text": "interface yet there's no 3D rendered pearling cubes or anything like that but what we do have is a very nice",
    "start": "4248679",
    "end": "4256239"
  },
  {
    "text": "object model and when we've done it in the IDE like this you still have all the objects active so what you can do is say",
    "start": "4256239",
    "end": "4262400"
  },
  {
    "text": "buzzer. invoke method and for those of you who know python this will make a little bit more",
    "start": "4262400",
    "end": "4268560"
  },
  {
    "text": "sense so we have two um can you guys see that from hopefully okay so we have two",
    "start": "4268560",
    "end": "4274199"
  },
  {
    "text": "methods of invoked method one is Method name and the other one is a dictionary that contains the name",
    "start": "4274199",
    "end": "4280920"
  },
  {
    "text": "parameters so remember from the uh from the soap request we saw earlier",
    "start": "4283120",
    "end": "4289080"
  },
  {
    "text": "we have username and we're just going to say root for now we want to go for the",
    "start": "4289080",
    "end": "4296280"
  },
  {
    "text": "go password we don't know the password so we're just going to put BL there you run that we get a so response",
    "start": "4296280",
    "end": "4304320"
  },
  {
    "text": "p and if you look here it says you username or password is incorrect well what do you know wasn't block but we did",
    "start": "4304320",
    "end": "4312239"
  },
  {
    "text": "see uh unfortunately I can't can't adjust a size in the console in the side e um but for those of you up front you",
    "start": "4312480",
    "end": "4321159"
  },
  {
    "text": "can see an XML an X path injection in work all right so what we do is we",
    "start": "4321159",
    "end": "4326520"
  },
  {
    "text": "finish off the quote so what we see is login equals root quote or apost",
    "start": "4326520",
    "end": "4332120"
  },
  {
    "text": "apostrophe equals apostrophe so the full query string will be log equals root or",
    "start": "4332120",
    "end": "4337159"
  },
  {
    "text": "apostrophe apy equals apostrophy apostrophe or true and password equals blah who cares we just got an or true in",
    "start": "4337159",
    "end": "4343320"
  },
  {
    "text": "there we run that and you will see successfully logged in user ID zero name",
    "start": "4343320",
    "end": "4348520"
  },
  {
    "text": "route so we're able to log in this route without the password in this contrived example um what we saw in the back end",
    "start": "4348520",
    "end": "4355360"
  },
  {
    "text": "there was if you were to look at the XML file where all these users are pulled out you just saw four users username you",
    "start": "4355360",
    "end": "4361000"
  },
  {
    "text": "know is brute user two was Alex demos or something like that again this is all out there on the uh ws demos.",
    "start": "4361000",
    "end": "4367880"
  },
  {
    "text": "partners.com and you can play about if you like so um the tool itself it's",
    "start": "4367880",
    "end": "4373440"
  },
  {
    "text": "pretty simple most of the stuff is in two classes here f.p or two modules here fpy and data data provider. py you um",
    "start": "4373440",
    "end": "4382159"
  },
  {
    "text": "can use those classes for your own scripting or you can just use the basic rapper I provide in WS bang. py some of",
    "start": "4382159",
    "end": "4387679"
  },
  {
    "text": "the features are that uh there's this data.xml that allows you to fuzz",
    "start": "4387679",
    "end": "4393040"
  },
  {
    "text": "parameters based on their type so I can say you know go through find the wisol find all the methods fuzz all the",
    "start": "4393040",
    "end": "4398159"
  },
  {
    "text": "methods within those methods you're going to have all the you know the arguments and those arguments are named types you know thanks to the wisol so I",
    "start": "4398159",
    "end": "4405159"
  },
  {
    "text": "I can say you know for every stream and you'll see in",
    "start": "4405159",
    "end": "4410360"
  },
  {
    "text": "here um one of these definition names equal string there we go so with uh with",
    "start": "4410360",
    "end": "4416159"
  },
  {
    "text": "bang will go through find method find that has a string AR a string type argument and I'll say okay for every",
    "start": "4416159",
    "end": "4422120"
  },
  {
    "text": "string do everything that I've listed in simple string and XP string and so if you go look at those you'll see if",
    "start": "4422120",
    "end": "4427159"
  },
  {
    "text": "there's a or thousand A's in simple string and one a and uh let's see what else do we have in there and uh in X",
    "start": "4427159",
    "end": "4434360"
  },
  {
    "text": "string we have just poent apostrophy you can add all that you want you can do repetitions you can do references and uh",
    "start": "4434360",
    "end": "4440600"
  },
  {
    "text": "you can also save for default arguments which we didn't use in this example but if you say let's say we have a web",
    "start": "4440600",
    "end": "4446600"
  },
  {
    "text": "service we have to get a cookie and then pass that cookie as an argument with every other request to the services you",
    "start": "4446600",
    "end": "4451880"
  },
  {
    "text": "can say okay for everything that's called cookie give my cookie that I got 1 2 3 4 5 and then fuzz everything else",
    "start": "4451880",
    "end": "4457920"
  },
  {
    "text": "there a lot you do that um and that is a quick demo of the tool does anybody have",
    "start": "4457920",
    "end": "4463440"
  },
  {
    "text": "any questions he was using his method here to call a soap interface there actually a lot of",
    "start": "4463440",
    "end": "4469920"
  },
  {
    "text": "ways you can take a wiiz and create Aid so message you don't want to do",
    "start": "4469920",
    "end": "4477120"
  },
  {
    "text": "painti that hasy right they have a lot of",
    "start": "4478000",
    "end": "4484440"
  },
  {
    "text": "moneyy XML SP bya is a very expensive but fantastic XML editor it does the",
    "start": "4485480",
    "end": "4491679"
  },
  {
    "text": "same thing you point at a web service and will give you mov boxes I can pop arbit information in there and that will",
    "start": "4491679",
    "end": "4498480"
  },
  {
    "text": "give you kind of an interface than that for",
    "start": "4498480",
    "end": "4505638"
  },
  {
    "text": "[Applause]",
    "start": "4506140",
    "end": "4513970"
  },
  {
    "text": "see",
    "start": "4553920",
    "end": "4556920"
  },
  {
    "text": "e",
    "start": "4583920",
    "end": "4586920"
  },
  {
    "text": "e e",
    "start": "4613840",
    "end": "4617880"
  }
]