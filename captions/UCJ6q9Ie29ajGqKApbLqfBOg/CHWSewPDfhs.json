[
  {
    "text": "[Music]",
    "start": "1180",
    "end": "14719"
  },
  {
    "text": "hi thank you for joining our talk a decade after stuxnet's print of vulnerability printing is still the story to heaven",
    "start": "14719",
    "end": "21600"
  },
  {
    "text": "first let's introduce ourselves my name is pele gadar i'm in the infosec",
    "start": "21600",
    "end": "26880"
  },
  {
    "text": "field for more than seven years currently working as a senior security researcher at st bridge labs",
    "start": "26880",
    "end": "32320"
  },
  {
    "text": "my main focus is on windows internals and vulnerability research",
    "start": "32320",
    "end": "37360"
  },
  {
    "text": "hi my name is tomer barr i'm in the infosec field for more than 15 years currently working as a research team",
    "start": "38320",
    "end": "44879"
  },
  {
    "text": "leader at safe bridge labs my main focus is on apt research windows internals",
    "start": "44879",
    "end": "50879"
  },
  {
    "text": "and vulnerability research",
    "start": "50879",
    "end": "54320"
  },
  {
    "text": "in this presentation we will cover the following we will demonstrate how a threat actor",
    "start": "57760",
    "end": "62879"
  },
  {
    "text": "might have the ability to build the propagation part of stuxnet 2.0",
    "start": "62879",
    "end": "68080"
  },
  {
    "text": "we will do that by walkthrough on the vulnerabilities which were used by stuxnet",
    "start": "68080",
    "end": "73360"
  },
  {
    "text": "for each one we will describe the root cause describe the patch and evaluate the",
    "start": "73360",
    "end": "79439"
  },
  {
    "text": "effectiveness of the of the patch we will continue with a deep walkthrough of our prince polar",
    "start": "79439",
    "end": "85600"
  },
  {
    "text": "research findings including demos of the two zero days finally we will suggest a new mitigation",
    "start": "85600",
    "end": "92799"
  },
  {
    "text": "for the entire arbitrary fire right backlash we will be focused on answering",
    "start": "92799",
    "end": "98799"
  },
  {
    "text": "two fundamental questions is it possible to build equivalent propagation capabilities as toxins",
    "start": "98799",
    "end": "103920"
  },
  {
    "text": "capabilities second questions if i fully patch my entire windows operating system",
    "start": "103920",
    "end": "109439"
  },
  {
    "text": "am i safe now last note before we start we will use two symbols during our",
    "start": "109439",
    "end": "115520"
  },
  {
    "text": "presentation a narrow patch means that the patch logic is very specific and it was possible to",
    "start": "115520",
    "end": "121360"
  },
  {
    "text": "re-exploit it and secondly a regular patch means that it solves the problem",
    "start": "121360",
    "end": "127600"
  },
  {
    "text": "and had not been bypassed until nowadays as much as we know now that we are ready let's see the",
    "start": "127600",
    "end": "133920"
  },
  {
    "text": "recap and the timeline of stuxnet stuxnet is considered by many to be one",
    "start": "133920",
    "end": "140800"
  },
  {
    "text": "of the most complex and well engineered computer worms ever seen it is believed that the",
    "start": "140800",
    "end": "146080"
  },
  {
    "text": "project was developed in 2006 and lasted four years until it was discovered",
    "start": "146080",
    "end": "153360"
  },
  {
    "text": "so this is how hollywood imagine stuxnet",
    "start": "155040",
    "end": "160159"
  },
  {
    "text": "actually i love hollywood but in real life stuxnet can be can be described by the",
    "start": "168400",
    "end": "174319"
  },
  {
    "text": "following three parts the first part is the propagation to the target network by using",
    "start": "174319",
    "end": "179599"
  },
  {
    "text": "three remote codec execution exploits and two local privileged escalation",
    "start": "179599",
    "end": "184959"
  },
  {
    "text": "exploits the next part is the special evasion techniques which allows stuxnet to oper to operate",
    "start": "184959",
    "end": "192080"
  },
  {
    "text": "under the radar the third part is the final payload delivering specifically to siemens plc",
    "start": "192080",
    "end": "199760"
  },
  {
    "text": "in our opinion a decade after stuxnet the most interesting part is the propagation capabilities",
    "start": "199760",
    "end": "206239"
  },
  {
    "text": "which is still relevant to almost any targeted attack",
    "start": "206239",
    "end": "212080"
  },
  {
    "text": "let's zoom in into stuxnet propagation capabilities we will describe them one by one",
    "start": "212080",
    "end": "218400"
  },
  {
    "text": "although it was a decade ago it's still relevant to all of us because according to a research",
    "start": "218400",
    "end": "223599"
  },
  {
    "text": "posted in 2017 those capabilities were used widely after stocksnet",
    "start": "223599",
    "end": "228959"
  },
  {
    "text": "for attacking a wide range of organization let's dive deeper handing over to peder",
    "start": "228959",
    "end": "236959"
  },
  {
    "text": "thank you tomorrow so let's start and talk about the ln k vulnerability which was used by stuxnet",
    "start": "238000",
    "end": "243840"
  },
  {
    "text": "it used it to spread via weaponized usb flash drives traveling between internet facing computers and internal network computers",
    "start": "243840",
    "end": "255840"
  },
  {
    "text": "so the attack vector contained a crafted lnk file which is a shortcut file once it was displayed an arbitrary dll",
    "start": "256239",
    "end": "262720"
  },
  {
    "text": "which was specified as the icon file of the lnk was executed",
    "start": "262720",
    "end": "269759"
  },
  {
    "text": "here's a screenshot of a crafted lnk file which exploited the vulnerability you can observe that the lnk file",
    "start": "269759",
    "end": "275120"
  },
  {
    "text": "contains the following the path of the cpl external file and the icon id",
    "start": "275120",
    "end": "280960"
  },
  {
    "text": "0 which caused the code to trigger the execution of the dll every time the lnk file was displayed",
    "start": "280960",
    "end": "288479"
  },
  {
    "text": "so let's take a look at the exploitation path and how it was patched the main problem was that instead of",
    "start": "289360",
    "end": "295360"
  },
  {
    "text": "loading the cpl dll file as a data only file by using load library x the code",
    "start": "295360",
    "end": "300960"
  },
  {
    "text": "actually called the load library w function and also executed the dna",
    "start": "300960",
    "end": "306000"
  },
  {
    "text": "we expected the patch to replace this call in order to avoid execution but let's see what was actually happened",
    "start": "306000",
    "end": "313039"
  },
  {
    "text": "so the patch added two validations in order to mitigate the vulnerability first it checked that the provided cpl",
    "start": "313919",
    "end": "320000"
  },
  {
    "text": "file was on microsoft's whitelist and was allowed to be loaded next the icon id which we control would have",
    "start": "320000",
    "end": "327280"
  },
  {
    "text": "been extracted and converted from a string if the id was 0 it would overwrite 0",
    "start": "327280",
    "end": "332800"
  },
  {
    "text": "with -1 meaning it wouldn't be loaded the patch was very specific because as",
    "start": "332800",
    "end": "340000"
  },
  {
    "text": "you can see the load library function still existed meaning that if someone would have been able to bypass the validations",
    "start": "340000",
    "end": "346720"
  },
  {
    "text": "then the cpl could have been executed",
    "start": "346720",
    "end": "352080"
  },
  {
    "text": "so let's see the bypass which was patched five years later",
    "start": "352080",
    "end": "356560"
  },
  {
    "text": "in order to bypass the patch we need to bypass the icon id check and transform it to zero",
    "start": "358319",
    "end": "364800"
  },
  {
    "text": "it can be done if you will be able to send the minus sign as a parameter to str to in w function let's see exactly how it was",
    "start": "364800",
    "end": "372479"
  },
  {
    "text": "done because of a type confusion between a white car buffer and a car buffer",
    "start": "372479",
    "end": "377600"
  },
  {
    "text": "the original icon id string was truncated we can exploit it by providing a long",
    "start": "377600",
    "end": "383840"
  },
  {
    "text": "enough buffer so the icon id will turn into the minus sign once str2int will return 0 as the icon",
    "start": "383840",
    "end": "390720"
  },
  {
    "text": "id our arbitrary cpl will be executed",
    "start": "390720",
    "end": "395840"
  },
  {
    "text": "the patch for this one was pretty simple the truncation bug was removed",
    "start": "397440",
    "end": "402639"
  },
  {
    "text": "the call to load library which was the actual root cause wasn't changed that means that if there is another way",
    "start": "402639",
    "end": "408479"
  },
  {
    "text": "to trigger the load cpl module function it would have been still vulnerable",
    "start": "408479",
    "end": "414560"
  },
  {
    "text": "and apparently there was two years later a new vulnerability was discovered and",
    "start": "415680",
    "end": "420840"
  },
  {
    "text": "patched it called the load cpl module function by using another exploitation path which",
    "start": "420840",
    "end": "426319"
  },
  {
    "text": "was left unpatched so the patch for this one was adding the",
    "start": "426319",
    "end": "432560"
  },
  {
    "text": "previous logic of a cpl whitelist but load library still was not replaced",
    "start": "432560",
    "end": "440560"
  },
  {
    "text": "what's interesting here is that we have noticed that there is another last path to load library function",
    "start": "441360",
    "end": "446720"
  },
  {
    "text": "but we haven't seen any disclosed vulnerability yet",
    "start": "446720",
    "end": "451840"
  },
  {
    "text": "so moving to the next propagation capability next we will talk about the stuxnet's rpc vulnerability",
    "start": "453039",
    "end": "459360"
  },
  {
    "text": "handing over to tomer thank you pele on 2006 three years",
    "start": "459360",
    "end": "466080"
  },
  {
    "text": "before stuxnet's first known infection a new mumble rpc vulnerability was discovered and patched",
    "start": "466080",
    "end": "472319"
  },
  {
    "text": "according to microsoft it was a very limited scoped attack back then but later on a very similar",
    "start": "472319",
    "end": "478479"
  },
  {
    "text": "exploitation path was was used by both stuxnet and corfeco 1 which became one of the most spreadable",
    "start": "478479",
    "end": "485360"
  },
  {
    "text": "warm ever seen rpc vulnerabilities were the main cause of global computer warmth since 2003.",
    "start": "485360",
    "end": "492560"
  },
  {
    "text": "remember blaster so it's obvious that the cost of a vulnerability in this mechanism is huge",
    "start": "492560",
    "end": "498879"
  },
  {
    "text": "let's dive into the specific details the rpc vulnerability root cause that will present",
    "start": "498879",
    "end": "504560"
  },
  {
    "text": "is due to a canonical path so let's understand what is it a canonical path it's actually a pretty",
    "start": "504560",
    "end": "509599"
  },
  {
    "text": "simple it gets an absolute path and convert it to the shortest absolute path in the meaning of string length",
    "start": "509599",
    "end": "516080"
  },
  {
    "text": "the most common usage of canonical path is for textual comparison of two different representations of the",
    "start": "516080",
    "end": "522320"
  },
  {
    "text": "same canonical path the original vulnerability was a type",
    "start": "522320",
    "end": "528560"
  },
  {
    "text": "confusion which lead to a classic stack-based buffer overflow the vulnerable function was copying a",
    "start": "528560",
    "end": "534959"
  },
  {
    "text": "buffer which exceed the allocated buffer causing memory corruption here is the",
    "start": "534959",
    "end": "541040"
  },
  {
    "text": "exploitation path an rpc request triggered a vulnerable function remotely",
    "start": "541040",
    "end": "546240"
  },
  {
    "text": "which lead to an out-of-bound write caused by wcs cat function please notice the rpc",
    "start": "546240",
    "end": "552959"
  },
  {
    "text": "function's name and t net pw we will explain why it's important in the following slides",
    "start": "552959",
    "end": "561040"
  },
  {
    "text": "the patch added a proper buffer length check which eliminated the original buffer overflow vulnerability",
    "start": "561360",
    "end": "568240"
  },
  {
    "text": "two years later a newer vulnerability was discovered in the same exploitation path",
    "start": "568240",
    "end": "573440"
  },
  {
    "text": "this this time it was discovered in the rpc wrapper function which is called net pr this function",
    "start": "573440",
    "end": "580880"
  },
  {
    "text": "calls the original variable function directly remember net pw let's dive into the root cause so the",
    "start": "580880",
    "end": "588880"
  },
  {
    "text": "root cause of the vulnerability is that the input path includes more slash dot dot slash",
    "start": "588880",
    "end": "594560"
  },
  {
    "text": "cars than the number of prior directory entries this will result in gaining a control",
    "start": "594560",
    "end": "600560"
  },
  {
    "text": "over the output buffer pointer which will point backwards on the stack and will trigger",
    "start": "600560",
    "end": "605839"
  },
  {
    "text": "out-of-bound writing after calling the wcs copy this time",
    "start": "605839",
    "end": "611760"
  },
  {
    "text": "so the patch ms-867 replaced the wcs copy function with a",
    "start": "611760",
    "end": "618079"
  },
  {
    "text": "safer function string copyworker w let's dive into stuxnet task scheduler",
    "start": "618079",
    "end": "624959"
  },
  {
    "text": "vulnerability but first let's understand how the task scheduler worked",
    "start": "624959",
    "end": "630880"
  },
  {
    "text": "the task scheduler job xml file contains the metadata of a job including which user will execute the",
    "start": "630880",
    "end": "637279"
  },
  {
    "text": "job the folder which contains it is writable by all users to protect the integrity of the job",
    "start": "637279",
    "end": "643839"
  },
  {
    "text": "configuration files and prevent user from modifying them task scheduler calculated a crc32",
    "start": "643839",
    "end": "650000"
  },
  {
    "text": "checksum on each created task xml when it's time to start the job task",
    "start": "650000",
    "end": "655519"
  },
  {
    "text": "scheduler recalculated the xml checksum and compare it to the original value if",
    "start": "655519",
    "end": "660880"
  },
  {
    "text": "they matched the job executed if not it would have been ignored",
    "start": "660880",
    "end": "666160"
  },
  {
    "text": "the clc32 algorithm is collision prone which may lead to data forgery",
    "start": "666160",
    "end": "671440"
  },
  {
    "text": "stuxnet zero day exploited this fact by forging an xml file of a job which was executed",
    "start": "671440",
    "end": "678000"
  },
  {
    "text": "as anti-authority system it had a custom crc32 checksum which was identical to the original tax xml",
    "start": "678000",
    "end": "685760"
  },
  {
    "text": "therefore it has been executed as a system resulting in a local previous relation",
    "start": "685760",
    "end": "692160"
  },
  {
    "text": "in the patch ms1092 microsoft implemented a second integrity check by using the sha 256 algorithm",
    "start": "692160",
    "end": "699920"
  },
  {
    "text": "implemented by the compute hash function which is less collision prone",
    "start": "699920",
    "end": "705040"
  },
  {
    "text": "moving forward nine years later a neural task scheduler vulnerability was found the vulnerability abused the backward",
    "start": "705040",
    "end": "711760"
  },
  {
    "text": "compatibility feature of the task scheduler mechanism which provides the option of migrating",
    "start": "711760",
    "end": "717760"
  },
  {
    "text": "all tasks from c windows task folder to the new task folder which is system",
    "start": "717760",
    "end": "723279"
  },
  {
    "text": "32 tasks in order to exploit it the attacker would need to perform the following 4",
    "start": "723279",
    "end": "729200"
  },
  {
    "text": "steps step 1 create a new job as a result an xml file would be created in the new",
    "start": "729200",
    "end": "736240"
  },
  {
    "text": "tasks folder step 2 override the job file in the legacy tasks folder with an r link to the file",
    "start": "736240",
    "end": "743519"
  },
  {
    "text": "which the attacker wishes to control this step is creating a new legacy task",
    "start": "743519",
    "end": "750320"
  },
  {
    "text": "with the same name and finally trigger an all to new task migration over rpc",
    "start": "750320",
    "end": "756639"
  },
  {
    "text": "as a result the task scheduler service would update the security information of the file which the attacker wishes to",
    "start": "756639",
    "end": "763200"
  },
  {
    "text": "control granting the attacker full control privileges on it the attacker can now replace right to",
    "start": "763200",
    "end": "770240"
  },
  {
    "text": "any file gaining a local private escalation",
    "start": "770240",
    "end": "774959"
  },
  {
    "text": "so this is the exploitation path that was used let's see the micros how microsoft patched it",
    "start": "776399",
    "end": "783120"
  },
  {
    "text": "the patch makes sure that the file is not a symbolic link by using two different check the first",
    "start": "783120",
    "end": "789200"
  },
  {
    "text": "check verified that the original path is the final path of the file if it's different it means that it was",
    "start": "789200",
    "end": "795920"
  },
  {
    "text": "redirected by a symbolic link and the second check verified that the number of the files ntfs links",
    "start": "795920",
    "end": "802079"
  },
  {
    "text": "is not bigger than one okay so let's see the fourth",
    "start": "802079",
    "end": "808240"
  },
  {
    "text": "vulnerability moving over to win32k",
    "start": "808240",
    "end": "814480"
  },
  {
    "text": "actually there were dozens of win32k local pre-escalation vulnerabilities over the last decade here is a list of",
    "start": "814480",
    "end": "822079"
  },
  {
    "text": "several options from 2020 which can replace the original already patched vulnerability",
    "start": "822079",
    "end": "827519"
  },
  {
    "text": "in order to rebuild the stuxnet 2.0 propagation capabilities part the only capability which remained",
    "start": "827519",
    "end": "835680"
  },
  {
    "text": "is the prince pooler vulnerability",
    "start": "835680",
    "end": "839199"
  },
  {
    "text": "let's start to talk about our printer's polar research and findings",
    "start": "841760",
    "end": "847040"
  },
  {
    "text": "we will start by presenting how we found a 20 plus year old bug by using 20 minutes of fuzzing",
    "start": "847120",
    "end": "855600"
  },
  {
    "text": "we have noticed that each time a print job is being created it is represented by two files first",
    "start": "855600",
    "end": "861839"
  },
  {
    "text": "an spl file which is simply contains the data to be printed second an shd file shadow file which",
    "start": "861839",
    "end": "869199"
  },
  {
    "text": "will be focused on it is represented by the undocumented shadow file struct and contains the",
    "start": "869199",
    "end": "875040"
  },
  {
    "text": "metadata of the print job for example printer name printer port name document name and etc",
    "start": "875040",
    "end": "883360"
  },
  {
    "text": "we found that the printers folder which contains the shd files",
    "start": "883360",
    "end": "888480"
  },
  {
    "text": "is writable by all users and that the shd files are being processed",
    "start": "888480",
    "end": "894720"
  },
  {
    "text": "once the service is started so we ask ourselves what will happen if",
    "start": "894720",
    "end": "899839"
  },
  {
    "text": "we'll craft our own shd file so we started to mutate the shd files",
    "start": "899839",
    "end": "905360"
  },
  {
    "text": "and fast the service after 20 minutes of fuzzing we had our",
    "start": "905360",
    "end": "910480"
  },
  {
    "text": "first crash we have managed to crush the prince fuller service by using a limited user and a crafted",
    "start": "910480",
    "end": "918240"
  },
  {
    "text": "shd file it appeared that the code was trying to dereference some part of our data",
    "start": "918240",
    "end": "924880"
  },
  {
    "text": "to treating it it's as a pointer to a security descriptor without any validation or sanitization",
    "start": "924880",
    "end": "930959"
  },
  {
    "text": "of the data with provided in the shd file microsoft did not fix this bug",
    "start": "930959",
    "end": "937120"
  },
  {
    "text": "we will show the response in the end of our talk ok demo time let's see a demo of the",
    "start": "937120",
    "end": "943360"
  },
  {
    "text": "crash in the latest windows 10 insider build",
    "start": "943360",
    "end": "947680"
  },
  {
    "text": "so on the left side johnny is a limited user we can see that we are running on the",
    "start": "948800",
    "end": "953920"
  },
  {
    "text": "latest windows 10 fully patched machine on the right the user john is administrator",
    "start": "953920",
    "end": "959600"
  },
  {
    "text": "and it is used only for convenience to avoid restarts of the os instead will restart the service to trigger the",
    "start": "959600",
    "end": "965120"
  },
  {
    "text": "vulnerability so we are copying the crafted shd file",
    "start": "965120",
    "end": "971839"
  },
  {
    "text": "to the printer's puller directory",
    "start": "971839",
    "end": "983839"
  },
  {
    "text": "and now we will trigger the vulnerability by restarting the service",
    "start": "984160",
    "end": "997440"
  },
  {
    "text": "and listing the printers via wmi command",
    "start": "997440",
    "end": "1010160"
  },
  {
    "text": "as we can see in pokemon we crash the service",
    "start": "1010160",
    "end": "1014959"
  },
  {
    "text": "we will copy the shd file and the spl file to the printer's spoiler folder",
    "start": "1022160",
    "end": "1030480"
  },
  {
    "text": "and we will use john is an administrator for convenience reasons to avoid os restart and instead we will",
    "start": "1030480",
    "end": "1038240"
  },
  {
    "text": "restart the spoiler service instead",
    "start": "1038240",
    "end": "1053760"
  },
  {
    "text": "and after listing the printers",
    "start": "1053760",
    "end": "1059919"
  },
  {
    "text": "we can see that the service is crashed",
    "start": "1065600",
    "end": "1081840"
  },
  {
    "text": "thank you tomorrow so the crash was cool but we wanted more let's talk on how we got local previous",
    "start": "1086559",
    "end": "1092559"
  },
  {
    "text": "escalation twice one of them is still zero day so in order to understand the next",
    "start": "1092559",
    "end": "1098559"
  },
  {
    "text": "vulnerabilities we found we will dive into the printing process in the windows os the print spooler is",
    "start": "1098559",
    "end": "1104880"
  },
  {
    "text": "the service which is responsible for creating and handling print jobs in the windows os accessing the prints bottle is possible",
    "start": "1104880",
    "end": "1111679"
  },
  {
    "text": "remotely for example using a shelled printer and locally we will focus on the local",
    "start": "1111679",
    "end": "1117360"
  },
  {
    "text": "scenario more specifically we will focus on the fact that the spooler allows the user to print to a file",
    "start": "1117360",
    "end": "1123120"
  },
  {
    "text": "by using a virtual printer this is an important part which i'll further slide rely on",
    "start": "1123120",
    "end": "1130159"
  },
  {
    "text": "a quick brief on the flow of printing to a file scenario user sends some data to be printed using",
    "start": "1131360",
    "end": "1137679"
  },
  {
    "text": "an application for example notepad and specifies which file he would like to print to",
    "start": "1137679",
    "end": "1143919"
  },
  {
    "text": "it means that the data will be printed which means will be written to a file using a virtual printer",
    "start": "1143919",
    "end": "1149280"
  },
  {
    "text": "instead of printing of instead of printer to a real printer the spoiler service spool sv.exe which",
    "start": "1149280",
    "end": "1156720"
  },
  {
    "text": "is the rpc server gets the request later on the local print provider which is",
    "start": "1156720",
    "end": "1162960"
  },
  {
    "text": "responsible for printing data to files will print the data into the file which was specified by the user",
    "start": "1162960",
    "end": "1170320"
  },
  {
    "text": "let's start with the first principle of vulnerability which was used in stoxnet this is the flow of the vulnerability",
    "start": "1171919",
    "end": "1178000"
  },
  {
    "text": "which was providing a remote code execution the vulnerability exploited the fact that the spoiler allows the user",
    "start": "1178000",
    "end": "1184240"
  },
  {
    "text": "to print to a file on a remote computer on behalf of system and has printed the malicious file to",
    "start": "1184240",
    "end": "1191280"
  },
  {
    "text": "system 32 which was a mod file",
    "start": "1191280",
    "end": "1195279"
  },
  {
    "text": "so it was patched on 2010. the patch included two validations",
    "start": "1196640",
    "end": "1201919"
  },
  {
    "text": "a check if the printing job was dispatched locally on the machine itself or remotely if remotely it will override",
    "start": "1201919",
    "end": "1209679"
  },
  {
    "text": "and ignore any requested file write operation second it will check that the user have",
    "start": "1209679",
    "end": "1215600"
  },
  {
    "text": "right permissions to the path of the file that he wanted to print to before it's writing to it",
    "start": "1215600",
    "end": "1222480"
  },
  {
    "text": "moving forward to 2020 we have found a way to bypass the patch locally using almost the same exploitation path",
    "start": "1223679",
    "end": "1230960"
  },
  {
    "text": "the first check bypass is obvious because we shifted from a local from a remote code execution to",
    "start": "1230960",
    "end": "1236320"
  },
  {
    "text": "a local previous escalation the second check needed some work so let's dive into our print spooler",
    "start": "1236320",
    "end": "1242400"
  },
  {
    "text": "research we found that a limited user can do some interesting operations without any",
    "start": "1242400",
    "end": "1249120"
  },
  {
    "text": "elevation required by just using partial commands for example adding a virtual printer which prints to",
    "start": "1249120",
    "end": "1255440"
  },
  {
    "text": "a local printable meaning it will print to a file and specifying a path of the file which he",
    "start": "1255440",
    "end": "1261760"
  },
  {
    "text": "doesn't have access to for example system 32 okay interesting so does that mean that a",
    "start": "1261760",
    "end": "1267919"
  },
  {
    "text": "user can just print any data he would like to system32 let's check so apparently no",
    "start": "1267919",
    "end": "1275520"
  },
  {
    "text": "or that's what we thought as we mentioned before the ms-1061 patch has added a function which validates",
    "start": "1275520",
    "end": "1281840"
  },
  {
    "text": "if the user can write to the path he asked to print to which means that the user won't be able to print data to",
    "start": "1281840",
    "end": "1287360"
  },
  {
    "text": "system 32 so let's understand how can we bypass it",
    "start": "1287360",
    "end": "1293200"
  },
  {
    "text": "every time the principle initializes it processes the shd files which are waiting to be spooled",
    "start": "1296480",
    "end": "1301919"
  },
  {
    "text": "in the same directory for every user a limited user can create an shd file",
    "start": "1301919",
    "end": "1307520"
  },
  {
    "text": "which represents a print job which prints to any path for example system32",
    "start": "1307520",
    "end": "1313360"
  },
  {
    "text": "once the principal restarts it will process the shd file without being impersonated or aware of",
    "start": "1313360",
    "end": "1319600"
  },
  {
    "text": "who created the print job therefore it will operate as anti-authority system and will print the data to any file as",
    "start": "1319600",
    "end": "1326799"
  },
  {
    "text": "anti-authority system resulting with allowing the user to write data to any file on the system",
    "start": "1326799",
    "end": "1333440"
  },
  {
    "text": "and gaining an arbitrary far right and a local previous escalation",
    "start": "1333440",
    "end": "1338559"
  },
  {
    "text": "this was actually the bypass of the second patch validation specifically for the validate output",
    "start": "1339200",
    "end": "1344320"
  },
  {
    "text": "file function because this folder is running as anti-authority system it has writing permissions to almost",
    "start": "1344320",
    "end": "1350559"
  },
  {
    "text": "every file on the file system so the check will pass successfully",
    "start": "1350559",
    "end": "1355840"
  },
  {
    "text": "so let's see a demo of the first local period escalation we found in the principle",
    "start": "1356080",
    "end": "1361840"
  },
  {
    "text": "as you can see we are running under the context of a limited user we are using a full windows 10 machine",
    "start": "1364159",
    "end": "1370880"
  },
  {
    "text": "from march before our vulnerability was patched we're using johnny which is a limited",
    "start": "1370880",
    "end": "1376159"
  },
  {
    "text": "user so first we'll use powershell in order",
    "start": "1376159",
    "end": "1382159"
  },
  {
    "text": "to do the following stuff we will add a printed port which",
    "start": "1382159",
    "end": "1387600"
  },
  {
    "text": "allows us to print to system 32 we will add the printer driver which",
    "start": "1387600",
    "end": "1393360"
  },
  {
    "text": "allows us to create a virtual printer and finally we will add a printer which",
    "start": "1393360",
    "end": "1399360"
  },
  {
    "text": "is using the system 32 port next we will use a pre-crafted shd file",
    "start": "1399360",
    "end": "1406000"
  },
  {
    "text": "which represents a print job which sprints to system 32 and we will use a dll payload which we",
    "start": "1406000",
    "end": "1411440"
  },
  {
    "text": "would like to write to system 32 we will rename it to spl and we will",
    "start": "1411440",
    "end": "1416640"
  },
  {
    "text": "copy it by using our limited user to the spool printers folder in system 32 which is writable by all users",
    "start": "1416640",
    "end": "1425600"
  },
  {
    "text": "now before we will restart the vm i want you to notice that there are only three users in the",
    "start": "1428559",
    "end": "1435360"
  },
  {
    "text": "computer administrator johnny and john and that the following file in windows 32 which names exploited",
    "start": "1435360",
    "end": "1442240"
  },
  {
    "text": "txt does not exist next let's restart the vm by our limited",
    "start": "1442240",
    "end": "1448320"
  },
  {
    "text": "user in order to the principal will process our shd file",
    "start": "1448320",
    "end": "1459760"
  },
  {
    "text": "once we are logged in back into johnny user the principal or service will process",
    "start": "1459760",
    "end": "1465120"
  },
  {
    "text": "our http file we'll treat it as a print job and we'll write our file to system 32.",
    "start": "1465120",
    "end": "1471120"
  },
  {
    "text": "next windows service will execute our dll and as you can see we have been able to",
    "start": "1471120",
    "end": "1477279"
  },
  {
    "text": "add a new administrator to the computer and we was able to",
    "start": "1477279",
    "end": "1484240"
  },
  {
    "text": "write a file to system32 name exploited.txt now let's verify that we were actually",
    "start": "1484240",
    "end": "1490320"
  },
  {
    "text": "added an administrator we will open a command prompt which is",
    "start": "1490320",
    "end": "1495679"
  },
  {
    "text": "elevated and we will just log in using our new administrator user",
    "start": "1495679",
    "end": "1501200"
  },
  {
    "text": "as you can see",
    "start": "1501200",
    "end": "1503919"
  },
  {
    "text": "the administrators group contains our user so we've been able to gain local",
    "start": "1507600",
    "end": "1513679"
  },
  {
    "text": "previous escalation using the principal service",
    "start": "1513679",
    "end": "1517919"
  },
  {
    "text": "so now that we couple them all together we reach our destination",
    "start": "1518720",
    "end": "1529840"
  },
  {
    "text": "we have found equivalent capabilities to allegedly build stuxnet 2.0 propagation pop",
    "start": "1532960",
    "end": "1538640"
  },
  {
    "text": "but our work is not over yet after the first vulnerability we found",
    "start": "1538640",
    "end": "1545120"
  },
  {
    "text": "was patched we been able to re-exploit it and we credited with cve 2020",
    "start": "1545120",
    "end": "1550760"
  },
  {
    "text": "1337 microsoft are currently working on a fix which will be deployed",
    "start": "1550760",
    "end": "1556080"
  },
  {
    "text": "in the upcoming patch tuesday therefore we can't release any technical details right now",
    "start": "1556080",
    "end": "1561360"
  },
  {
    "text": "we will publish it once the patch will be deployed but let's see a demo",
    "start": "1561360",
    "end": "1571840"
  },
  {
    "text": "so as you can see we're running under the context of johnny which is a limited",
    "start": "1575039",
    "end": "1580799"
  },
  {
    "text": "user we're running under a fully patched vm",
    "start": "1582840",
    "end": "1589519"
  },
  {
    "text": "under the context of johnny we will execute our exploit",
    "start": "1592960",
    "end": "1598000"
  },
  {
    "text": "which will bypass the patch of cve 2020 1048",
    "start": "1598000",
    "end": "1603360"
  },
  {
    "text": "after we crafted our shd file we will copy to the principal directory",
    "start": "1606640",
    "end": "1615520"
  },
  {
    "text": "but first you can notice that the explore.txt file does not exist and that we have only",
    "start": "1615520",
    "end": "1620799"
  },
  {
    "text": "three users as before now let's restart the vm",
    "start": "1620799",
    "end": "1627840"
  },
  {
    "text": "once it was initialized we will log in again to our limited user journey",
    "start": "1631440",
    "end": "1637440"
  },
  {
    "text": "now as before the principal will process our shd file and we'll print the data to system 32",
    "start": "1638399",
    "end": "1644799"
  },
  {
    "text": "which is our payload which is a dll file our dll file will be loaded into an elevated",
    "start": "1644799",
    "end": "1650559"
  },
  {
    "text": "anti-authority system service and we will gain call execution",
    "start": "1650559",
    "end": "1655840"
  },
  {
    "text": "now let's try and find the exploited.txt file as you can see we write the data to system 32 and we",
    "start": "1660799",
    "end": "1667840"
  },
  {
    "text": "have been able to add an administrator user once again to the vm let's write",
    "start": "1667840",
    "end": "1673039"
  },
  {
    "text": "let's execute a command prompt which is",
    "start": "1673039",
    "end": "1676879"
  },
  {
    "text": "elevated and let's log in using our new administrator user",
    "start": "1680840",
    "end": "1687520"
  },
  {
    "text": "as you can see we've gained a local preview escalation and the code execution using the principler once again after the first",
    "start": "1688559",
    "end": "1695200"
  },
  {
    "text": "vulnerability was patched handing over to tomer",
    "start": "1695200",
    "end": "1701840"
  },
  {
    "text": "wow one two three seven that's awesome so going back to our second question",
    "start": "1702960",
    "end": "1710159"
  },
  {
    "text": "we would like to propose an additional possible solution as a second level for patching we",
    "start": "1710159",
    "end": "1716080"
  },
  {
    "text": "believe in alert security mitigation approach so we reported to msrc",
    "start": "1716080",
    "end": "1721360"
  },
  {
    "text": "on each vulnerability we found but we still believe it's not enough",
    "start": "1721360",
    "end": "1728080"
  },
  {
    "text": "so we develop a poc for real time prevention of the attack",
    "start": "1728080",
    "end": "1733520"
  },
  {
    "text": "the main root cause of the arbitrary phyllite backlash in the context of local privilege escalation is the fact that a limited",
    "start": "1733919",
    "end": "1741039"
  },
  {
    "text": "user is allowed to write directly to the following location this is dangerous and can be exploited",
    "start": "1741039",
    "end": "1748000"
  },
  {
    "text": "very easily and we found that it's actually not really needed for the regular use",
    "start": "1748000",
    "end": "1753440"
  },
  {
    "text": "today we will release a mini filter driver which restricts any far rights operation by a limited",
    "start": "1753440",
    "end": "1759279"
  },
  {
    "text": "user to some of this location as a poc this mitigation proposal is not",
    "start": "1759279",
    "end": "1765120"
  },
  {
    "text": "specific to the spurs vulnerabilities and can be used as a template for mitigating the arbitrary far-right",
    "start": "1765120",
    "end": "1771279"
  },
  {
    "text": "backlash please treat the driver as a poc and be careful",
    "start": "1771279",
    "end": "1776320"
  },
  {
    "text": "not to execute it in production system before validating it for false positive let's see at the end",
    "start": "1776320",
    "end": "1785279"
  },
  {
    "text": "okay so this time we are running on windows 10 rs1 an older version without the patch for",
    "start": "1786399",
    "end": "1792960"
  },
  {
    "text": "the vulnerability we were going to use and as usual we are running as joining a limited user",
    "start": "1792960",
    "end": "1799679"
  },
  {
    "text": "let's make sure that our driver is loaded to memory",
    "start": "1802559",
    "end": "1809840"
  },
  {
    "text": "and now we'll present that a regular usage of printing is allowed",
    "start": "1813600",
    "end": "1823840"
  },
  {
    "text": "so our driver will examine the file right of the spl and shd file",
    "start": "1828559",
    "end": "1833919"
  },
  {
    "text": "and we'll allow it we can see that there are two files in the printer's spooler folder with",
    "start": "1833919",
    "end": "1839840"
  },
  {
    "text": "size which is not zero",
    "start": "1839840",
    "end": "1851840"
  },
  {
    "text": "and now let's copy the shd and spl file",
    "start": "1855440",
    "end": "1862559"
  },
  {
    "text": "to the printer's puller directly now actually our driver",
    "start": "1862559",
    "end": "1870799"
  },
  {
    "text": "examined the right and blocked it you can see that the files are have zero size",
    "start": "1870799",
    "end": "1879840"
  },
  {
    "text": "let's demonstrate an ele let's demonstrate a task scheduler",
    "start": "1883200",
    "end": "1888720"
  },
  {
    "text": "exploit this is a public exploit and we can see that our driver blocked the right",
    "start": "1888720",
    "end": "1896320"
  },
  {
    "text": "so for microsoft's response for the spoolers local privilege escalation",
    "start": "1898480",
    "end": "1903600"
  },
  {
    "text": "the additional vector for cve 2020 1048 will be addressed in august 2020 as cve",
    "start": "1903600",
    "end": "1910880"
  },
  {
    "text": "2020 13337 and for the spoiler denial of service",
    "start": "1910880",
    "end": "1916000"
  },
  {
    "text": "the technique results in a local denial of service which doesn't meet microsoft servicing bar",
    "start": "1916000",
    "end": "1921600"
  },
  {
    "text": "for security updates we would like to give credit for the following people for",
    "start": "1921600",
    "end": "1926880"
  },
  {
    "text": "researching similar areas alex unesco and jaden sophia dave weinstein it acker and jingoa kia",
    "start": "1926880",
    "end": "1936399"
  },
  {
    "text": "today we release our repository which includes includes an expert poc",
    "start": "1936399",
    "end": "1943120"
  },
  {
    "text": "for cv 2020 1048 and an exploit poc for the zero day",
    "start": "1943120",
    "end": "1950080"
  },
  {
    "text": "denial of service of the school of service the the driver for the arbitrary",
    "start": "1950080",
    "end": "1955519"
  },
  {
    "text": "far-right mitigation and in a few days on august 12 we will release the cve 2020 one two three seven the",
    "start": "1955519",
    "end": "1963279"
  },
  {
    "text": "super lead exploit poc please check our repository",
    "start": "1963279",
    "end": "1968640"
  },
  {
    "text": "thank you for joining us and let's go over for the q a all right so thank you everyone for",
    "start": "1969679",
    "end": "1976000"
  },
  {
    "text": "joining us we'll take questions now uh so first jamie butler asked do you need to restart the service or",
    "start": "1976000",
    "end": "1982559"
  },
  {
    "text": "can you just enumerate the pre-jobs or something so the answer is you need to restart the",
    "start": "1982559",
    "end": "1987679"
  },
  {
    "text": "service in order to trigger the vulnerable function but once you restart the service you will need to trigger",
    "start": "1987679",
    "end": "1994080"
  },
  {
    "text": "the vulnerable function but we found a way we just triggered the rpc request so you definitely need to",
    "start": "1994080",
    "end": "2000640"
  },
  {
    "text": "restart the service and then you just found walk around and enumerate the three jobs",
    "start": "2000640",
    "end": "2006640"
  },
  {
    "text": "any more questions",
    "start": "2007679",
    "end": "2019840"
  },
  {
    "text": "here of course we will provide a link to the driver poc it's in our safe bridge repository",
    "start": "2032799",
    "end": "2040240"
  },
  {
    "text": "we will upload it in a couple of minutes once the presentation will be changed",
    "start": "2040399",
    "end": "2046240"
  },
  {
    "text": "any more questions",
    "start": "2046240",
    "end": "2049039"
  },
  {
    "text": "so ricardo the link to the saybridge labs github repository you can google",
    "start": "2057440",
    "end": "2063440"
  },
  {
    "text": "savebridge labs it's this fuller repository and we'll also provide it in the in the",
    "start": "2063440",
    "end": "2068480"
  },
  {
    "text": "slides itself and samuel the workaround that we found for restarting the services of course",
    "start": "2068480",
    "end": "2075280"
  },
  {
    "text": "just restart the computer and in the presentation of the crash in the",
    "start": "2075280",
    "end": "2081200"
  },
  {
    "text": "plc of the crash we just use them limited and elevated user in order to restart just to make it faster",
    "start": "2081200",
    "end": "2088000"
  },
  {
    "text": "but at the limited user you will just restart the vm",
    "start": "2088000",
    "end": "2093040"
  },
  {
    "text": "so there is a question about the false positive that we are seeing in our mini filters so actually we haven't seen",
    "start": "2099839",
    "end": "2106400"
  },
  {
    "text": "uh many false positives or any actually but we haven't tested it a lot",
    "start": "2106400",
    "end": "2111760"
  },
  {
    "text": "in many systems with variant with multiple settings so we encourage",
    "start": "2111760",
    "end": "2119359"
  },
  {
    "text": "people to test it and we believe it will be able to prevent some future zero days",
    "start": "2119359",
    "end": "2128400"
  },
  {
    "text": "so ricardo asked after this new cv patch do you foresee any possible exploit coming out using similar pros",
    "start": "2128640",
    "end": "2135440"
  },
  {
    "text": "actually we don't know we'll wait for the patch to see and",
    "start": "2135440",
    "end": "2141920"
  },
  {
    "text": "so we hope not",
    "start": "2141920",
    "end": "2145838"
  },
  {
    "text": "and we'll make the slides available and we will upload them and blanket will upload them at the end of the day and we will upload them to",
    "start": "2148240",
    "end": "2154640"
  },
  {
    "text": "github repository as well",
    "start": "2154640",
    "end": "2159838"
  },
  {
    "text": "there's about four minutes left for you guys",
    "start": "2160720",
    "end": "2164480"
  },
  {
    "text": "so willam asked the principal print the file is empty",
    "start": "2167680",
    "end": "2173280"
  },
  {
    "text": "system because you crashed the spoiler and it lost track of who the original user was so it's almost accurate uh",
    "start": "2173280",
    "end": "2180800"
  },
  {
    "text": "so the principal doesn't know who sent the printing who wrote the shd file so it worked as",
    "start": "2180800",
    "end": "2186000"
  },
  {
    "text": "system but it does not relate to the fact that we crashed it the crash was a different plc and",
    "start": "2186000",
    "end": "2192640"
  },
  {
    "text": "the elevation of privilege was because we restarted the computer so he didn't know who initiated the",
    "start": "2192640",
    "end": "2198640"
  },
  {
    "text": "print who pasted the shd file",
    "start": "2198640",
    "end": "2203280"
  },
  {
    "text": "so actually we use the custom fuzzer in order to file the service now",
    "start": "2205040",
    "end": "2210800"
  },
  {
    "text": "nothing that is already known we just wrote our own python script in order to",
    "start": "2210800",
    "end": "2219599"
  },
  {
    "text": "use and uh with application whitelisting prevent this exploit",
    "start": "2226839",
    "end": "2232400"
  },
  {
    "text": "uh actually i'm not sure uh you understand yeah but i think that",
    "start": "2232400",
    "end": "2239920"
  },
  {
    "text": "the most important thing is to prevent something that you don't know beforehand",
    "start": "2239920",
    "end": "2245040"
  },
  {
    "text": "so our driver is taking this approach and it doesn't need to know",
    "start": "2245040",
    "end": "2250320"
  },
  {
    "text": "which specific vulnerability is being exploited it just mitigates the root cause so it's",
    "start": "2250320",
    "end": "2256400"
  },
  {
    "text": "a better approach",
    "start": "2256400",
    "end": "2259359"
  },
  {
    "text": "we don't have any plan to publish the custom father we will think about it but we didn't plan to",
    "start": "2262560",
    "end": "2271838"
  },
  {
    "text": "can you define what it means to file something so basically fuzzing is a very big topic of course but uh",
    "start": "2275599",
    "end": "2283119"
  },
  {
    "text": "in our in our scenario we just use uh something that mutated the shd file and",
    "start": "2283119",
    "end": "2289520"
  },
  {
    "text": "just used random inputs until we crashed it then we started to dive in and understand so to file is basically",
    "start": "2289520",
    "end": "2296640"
  },
  {
    "text": "to use random inputs and send it to the space",
    "start": "2296640",
    "end": "2301759"
  },
  {
    "text": "any more questions uh so of course we will uh publish the github repository uh",
    "start": "2309920",
    "end": "2316800"
  },
  {
    "text": "on twitter on separate twitter and microsoft twitter as well and it's important to say that we wrote",
    "start": "2316800",
    "end": "2324079"
  },
  {
    "text": "a disclaimer for the driver code we would like you to read it before you will",
    "start": "2324079",
    "end": "2329440"
  },
  {
    "text": "use it it's important and thank you for joining us and ricardo",
    "start": "2329440",
    "end": "2335839"
  },
  {
    "text": "said what do you use to modify shd files so when we started the the research the",
    "start": "2335839",
    "end": "2341359"
  },
  {
    "text": "shd file was pretty undocumented so we just engineered",
    "start": "2341359",
    "end": "2346640"
  },
  {
    "text": "the format and we used a 0 1 0 editor in order to to understand",
    "start": "2346640",
    "end": "2354160"
  },
  {
    "text": "it very well and we also added the templates and we will publish it on github in a few minutes",
    "start": "2354160",
    "end": "2360960"
  },
  {
    "text": "it's actually it's just distracting c uh which we used in this video editor",
    "start": "2360960",
    "end": "2369839"
  },
  {
    "text": "what mitigation do you recommend until an official patch is released so basically we don't want you to",
    "start": "2376560",
    "end": "2382880"
  },
  {
    "text": "disclose anything that is specific that might tell what was the vulnerability",
    "start": "2382880",
    "end": "2389040"
  },
  {
    "text": "so we just say let's wait a few days until microsoft will deploy the catch",
    "start": "2389040",
    "end": "2396310"
  },
  {
    "text": "[Music] okay thank you very much thank you for joining us",
    "start": "2396310",
    "end": "2403920"
  }
]