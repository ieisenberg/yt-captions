[
  {
    "text": "okay hello everybody my name is Noah mhe and Welcome to our talk for today a pain in the nas exploiting Cloud connectivity",
    "start": "2960",
    "end": "9200"
  },
  {
    "text": "to paone your Nas devices so a short word about myself I'm Noam I'm a vulnerability researcher at Clarity team",
    "start": "9200",
    "end": "16000"
  },
  {
    "text": "82 and with me is shaon brov our director of research and of course",
    "start": "16000",
    "end": "21519"
  },
  {
    "text": "special text to add to the other researchers of clar dm82 Vera mens and URI cats for helping us in our research",
    "start": "21519",
    "end": "29599"
  },
  {
    "text": "as you can see behind me this is our lab this is basically our playground where we get to research and look at OT and",
    "start": "29599",
    "end": "35719"
  },
  {
    "text": "iot devices mainly searching for vulnerabilities on these kind of devices",
    "start": "35719",
    "end": "40760"
  },
  {
    "text": "so let's talk about what we're going to present to you today during the last October in the pon toon competition in",
    "start": "40760",
    "end": "47680"
  },
  {
    "text": "Toronto we aimed at exploding both Nas devices in the category it being Western",
    "start": "47680",
    "end": "53480"
  },
  {
    "text": "Digital pr4100 and signology each netting us around 40,000 k now when we began our",
    "start": "53480",
    "end": "61719"
  },
  {
    "text": "research our main goal was trying to understand what kind of attack scenarios can we explore that were less explored",
    "start": "61719",
    "end": "68600"
  },
  {
    "text": "by other researchers over the years and that's when we discovered that both of these platforms actually had a Nas Cloud",
    "start": "68600",
    "end": "76799"
  },
  {
    "text": "platform in the case of Western Digital it being os5 my cloud and in the case of",
    "start": "76799",
    "end": "81960"
  },
  {
    "text": "signology Quick Connect now you might be asking yourself the same question we asked ourselves what is the main",
    "start": "81960",
    "end": "88280"
  },
  {
    "text": "business logic of this kind of operation and that's pretty simple you see I have my Nas set up either at home or at my",
    "start": "88280",
    "end": "95759"
  },
  {
    "text": "office and I'm out about in The V vacation outside basically somewhere",
    "start": "95759",
    "end": "101560"
  },
  {
    "text": "around the internet and somehow through kind of some kind of magic I am able to",
    "start": "101560",
    "end": "106600"
  },
  {
    "text": "access my files and get access to my photos to my documents Etc all through",
    "start": "106600",
    "end": "112280"
  },
  {
    "text": "using the cloud application now the minute we realize this is the war case we Al we thought to ourselves What could",
    "start": "112280",
    "end": "119920"
  },
  {
    "text": "we do and that's when we realized the coolest thing would be happened is if we were able to actually access other users",
    "start": "119920",
    "end": "127479"
  },
  {
    "text": "file getting access to their sensitive information documents Etc and during our",
    "start": "127479",
    "end": "132920"
  },
  {
    "text": "research in the Pontoon competition in the month leading to it this is exactly the kind of vulnerability we managed to",
    "start": "132920",
    "end": "139040"
  },
  {
    "text": "achieve gaining access to millions of files on thousands of different devices all around the",
    "start": "139040",
    "end": "144720"
  },
  {
    "text": "world after we gain access to this file we asked the most important stuff yeah getting access to files is pretty cool",
    "start": "144720",
    "end": "151519"
  },
  {
    "text": "but what would be cooler and that is pretty obvious actually exploiting code and running arbitrary code on the",
    "start": "151519",
    "end": "158840"
  },
  {
    "text": "platform and that is exactly the kind of vulnerability we managed to achieve during the PTO competition by changing",
    "start": "158840",
    "end": "165239"
  },
  {
    "text": "five different bags that we're going to present you today however because we actually use the cloud platforms we had",
    "start": "165239",
    "end": "171280"
  },
  {
    "text": "the ability to not attack only one Nas but instead attacking every single Nas that is connected around the world",
    "start": "171280",
    "end": "177280"
  },
  {
    "text": "giving us access to thousands and actually Millions of different Nas devices well that is pretty huge and",
    "start": "177280",
    "end": "184159"
  },
  {
    "text": "today in order to remediate our vulnerabilities westal actually had to boot off devices running old frameware",
    "start": "184159",
    "end": "191360"
  },
  {
    "text": "from the cloud meaning there are no longer able to access the cloud in running all fer and they have to update",
    "start": "191360",
    "end": "197519"
  },
  {
    "text": "this is because our and other researchers security vulnerability research what we found vulnerability is",
    "start": "197519",
    "end": "202959"
  },
  {
    "text": "SC critical that we actually had to boot be booted off The Cloud platform this this is the kind research",
    "start": "202959",
    "end": "210159"
  },
  {
    "text": "we conducted and today I'm going to try and re and and relay it to you showcasing the entire research process",
    "start": "210159",
    "end": "216519"
  },
  {
    "text": "we've performed so let's Deep dive what is Western Digital PR",
    "start": "216519",
    "end": "221799"
  },
  {
    "text": "410 it is actually a Linux based Nas device running custom Linux architecture",
    "start": "221799",
    "end": "228000"
  },
  {
    "text": "and exposing multiple different Services of course a web management service allowing administrator to set up their",
    "start": "228000",
    "end": "234079"
  },
  {
    "text": "device as well as file sharing like SMB FTP and of course web access",
    "start": "234079",
    "end": "241239"
  },
  {
    "text": "when we tried and order our device the first thing we did was simply order it however I'm pretty impatient so I",
    "start": "241239",
    "end": "247280"
  },
  {
    "text": "thought to myself yeah while waiting for the device to arrive I'll try and emulate it luckily for me Western",
    "start": "247280",
    "end": "252680"
  },
  {
    "text": "Digital offers the cloud this device filmare in their cloud services just meaning I was able to Simply download it",
    "start": "252680",
    "end": "259359"
  },
  {
    "text": "and access the files usually when I access files and specifically filmare it is a huge binary blob meaning it is",
    "start": "259359",
    "end": "266400"
  },
  {
    "text": "composed of multiple different sections H each composing of for example libraries different binaries Etc and of",
    "start": "266400",
    "end": "274560"
  },
  {
    "text": "course it could be either encrypted or unencrypted luckily for us Western data chose to not encryp their funware",
    "start": "274560",
    "end": "280919"
  },
  {
    "text": "meaning we simply could use binwalk to to H cut the filare into different",
    "start": "280919",
    "end": "286600"
  },
  {
    "text": "sections giving us access to both the libraries binaries and of course configuration files however Simply",
    "start": "286600",
    "end": "294000"
  },
  {
    "text": "Having this kind of structure does not mean we have a working Nas so we had to somehow reconstruct the the file system",
    "start": "294000",
    "end": "300680"
  },
  {
    "text": "rebuilding the nas device once again we got pretty lucky and Western dig actually left some files in their",
    "start": "300680",
    "end": "307600"
  },
  {
    "text": "firmware that were meant to reconstruct the fmw from the different sections meaning by simply using truth on our own",
    "start": "307600",
    "end": "313960"
  },
  {
    "text": "virtual machine we were able to rebuild the file system and execute the different demons specifically the HTTP",
    "start": "313960",
    "end": "320560"
  },
  {
    "text": "demons and now we had access to a Nas device this is pretty cool because usually when I work on devices I I tend",
    "start": "320560",
    "end": "327360"
  },
  {
    "text": "to break them and my boss gets pretty mad at me because we need to Simply order a new device and now I have a",
    "start": "327360",
    "end": "333240"
  },
  {
    "text": "simple playground that I can do whatever I want to H and simply uh boot up my own",
    "start": "333240",
    "end": "339080"
  },
  {
    "text": "device any time so basically after we managed to Sho the device we had to the ability to",
    "start": "339080",
    "end": "345440"
  },
  {
    "text": "run the different binaries and we now had a working web services for our own emulated Nas device and our goal was to",
    "start": "345440",
    "end": "352960"
  },
  {
    "text": "start DN in and trying to realize what is the different services that are running on this device now this is the",
    "start": "352960",
    "end": "360360"
  },
  {
    "text": "main platform of the management server for the nas device and actually when we",
    "start": "360360",
    "end": "365880"
  },
  {
    "text": "did our preparations for P2 own we looked at the all vulnerabilities that different researchers looked in the past",
    "start": "365880",
    "end": "372199"
  },
  {
    "text": "and most of these vulnerabilities were involving this web management architecture specifically in the different PHP files and CGI scripts so",
    "start": "372199",
    "end": "380160"
  },
  {
    "text": "in order to redate it Wester digital chose to implement a new binary called Nas admin that is written in goang and",
    "start": "380160",
    "end": "387479"
  },
  {
    "text": "now this is the actual entry point to the web server this binary basically handles the different authentication and",
    "start": "387479",
    "end": "393280"
  },
  {
    "text": "authorization for our Nas device making sure every request is validated and has",
    "start": "393280",
    "end": "398599"
  },
  {
    "text": "proper user session sadly for us in pwn toon the rule says that we must achieve",
    "start": "398599",
    "end": "404240"
  },
  {
    "text": "remote Cod execution an authenticated meaning we have no access to different kind of users so because we couldn't",
    "start": "404240",
    "end": "410520"
  },
  {
    "text": "bypass the nas admin authentication even though we find some vulnerabilities in the PHP server it was not useful for our",
    "start": "410520",
    "end": "417960"
  },
  {
    "text": "PTO own exploitation and that is when we turned our heads into the cloud feature which is the main",
    "start": "417960",
    "end": "425000"
  },
  {
    "text": "vulnerability that main vulnerabilities we found is located at you see when I",
    "start": "425000",
    "end": "430319"
  },
  {
    "text": "boot up my Nas device I can a I'm able to Simply turn on the cloud access and",
    "start": "430319",
    "end": "436160"
  },
  {
    "text": "by creating my own user I'm able to now access my NAS from anywhere around the world using either a web based a bra",
    "start": "436160",
    "end": "443440"
  },
  {
    "text": "browser or of course a mobile application and when I try to access my files somehow through some kind of magic",
    "start": "443440",
    "end": "451240"
  },
  {
    "text": "I am able to access it and we thought to ourselves how the hell does this happen well you see whenever I try and access",
    "start": "451240",
    "end": "458240"
  },
  {
    "text": "my files I authenticate to Western digital's different web services and I authenticated to my own account to my",
    "start": "458240",
    "end": "465120"
  },
  {
    "text": "account they is associated my Nas device this is identified by a different guid that is unique per Nas device and then",
    "start": "465120",
    "end": "472560"
  },
  {
    "text": "whenever I try and access my device I simply fetch a URL an API URL specifying",
    "start": "472560",
    "end": "477840"
  },
  {
    "text": "my device is good and then in the background somehow the cloud application matches my guy to my Nas and routes my",
    "start": "477840",
    "end": "484879"
  },
  {
    "text": "request to my Nas when we realize this is the architecture and through this",
    "start": "484879",
    "end": "490599"
  },
  {
    "text": "guid we are able to access our device we thought to ourselves what could be pretty cool and of course the obvious",
    "start": "490599",
    "end": "496919"
  },
  {
    "text": "question is what would happen if an unauthenticated attacker not associated with my Nas would be able to know my",
    "start": "496919",
    "end": "502800"
  },
  {
    "text": "Nas's good somehow and access my device through the Western digital's proper API and we actually tried doing this",
    "start": "502800",
    "end": "510360"
  },
  {
    "text": "pretty early on and steadly we got blocked which is pretty sad however",
    "start": "510360",
    "end": "515479"
  },
  {
    "text": "because it was our own device we were able to set up wire shark or TCP dump more more specifically and we noticed",
    "start": "515479",
    "end": "522320"
  },
  {
    "text": "that a new connection was made to our Nas meaning through knowing the device",
    "start": "522320",
    "end": "527680"
  },
  {
    "text": "is good we managed to access our Nas however what's crazy is that the request",
    "start": "527680",
    "end": "534519"
  },
  {
    "text": "we made that was made to our Nas was made over Western digitals Cloud meaning my Nas was not internet exposed it",
    "start": "534519",
    "end": "541519"
  },
  {
    "text": "doesn't have an exposed IP address or poll forwarding of some sort meaning we",
    "start": "541519",
    "end": "546640"
  },
  {
    "text": "actually reached our own home network through the cloud and that is pretty crazy because we don't see a lot of not",
    "start": "546640",
    "end": "553600"
  },
  {
    "text": "bypasses through this kind of reverse proxy that somehow happens and that's",
    "start": "553600",
    "end": "559120"
  },
  {
    "text": "when we realized what our goal should be you see all we need to do is to somehow",
    "start": "559120",
    "end": "564200"
  },
  {
    "text": "guess the device is good find an off bypass meaning yeah we can reach a device but we need to be authentic ticated and somehow some somehow bypass",
    "start": "564200",
    "end": "572440"
  },
  {
    "text": "authentication requirements and of course change some some other vulnerabilities to achieve remote code",
    "start": "572440",
    "end": "577480"
  },
  {
    "text": "execution H and we when we realize this is our goal we said yeah this look pretty easy let's see how we did",
    "start": "577480",
    "end": "584399"
  },
  {
    "text": "it so this is the main use case of our device meaning I am sitting somewhere",
    "start": "584399",
    "end": "591079"
  },
  {
    "text": "around the world and I'm trying to access my Nas through the cloud application however there is one use",
    "start": "591079",
    "end": "596680"
  },
  {
    "text": "case that Western Digital actually implemented as specific user experience ability and that is whenever I'm trying",
    "start": "596680",
    "end": "603399"
  },
  {
    "text": "to access my Nas when I'm at Lan at home you see if I were able to fetch a file",
    "start": "603399",
    "end": "608880"
  },
  {
    "text": "let's say a movie or a picture that is pretty big if I were able to do it over Western digitals Cloud servers it will",
    "start": "608880",
    "end": "615000"
  },
  {
    "text": "be pretty slow and pretty ineffective so instead whenever I'm sitting at home",
    "start": "615000",
    "end": "620240"
  },
  {
    "text": "with the in the same network that my Nas device is located that I am redirected",
    "start": "620240",
    "end": "626120"
  },
  {
    "text": "to my Nas device that is sitting with me and then I'm fetching the actual files",
    "start": "626120",
    "end": "631440"
  },
  {
    "text": "over land connection which is way faster however Western Digital had to make sure that I'm actually accessing my device",
    "start": "631440",
    "end": "638519"
  },
  {
    "text": "and not some kind of a attacker for example and in order to do that they actually issued a unique certificate for",
    "start": "638519",
    "end": "645880"
  },
  {
    "text": "each device and that way whenever I'm trying to access my device I can make sure it is actually my device because it",
    "start": "645880",
    "end": "652079"
  },
  {
    "text": "has a new certificate issue by Western Digital however the Keen ey in you",
    "start": "652079",
    "end": "657519"
  },
  {
    "text": "probably noticed something weird you serious this is actually our devices good embedded into the certificate",
    "start": "657519",
    "end": "665560"
  },
  {
    "text": "meaning by simply accessing our device over htps we are able to get the devices",
    "start": "665560",
    "end": "671040"
  },
  {
    "text": "good and now we can access it over the cloud now on its own it's not that big of a deal because we still need direct",
    "start": "671040",
    "end": "678000"
  },
  {
    "text": "access to the nas htps server however maybe we can somehow improve it that's",
    "start": "678000",
    "end": "684560"
  },
  {
    "text": "when we try to realize wait how the hell does this redirect work how I redirected",
    "start": "684560",
    "end": "689680"
  },
  {
    "text": "to my Nas actually behind the scenes I am redirected to a DNS name that is",
    "start": "689680",
    "end": "695839"
  },
  {
    "text": "mapped to my device and the DNS is actually converted to the Lan IP of my",
    "start": "695839",
    "end": "701519"
  },
  {
    "text": "device meaning if I were able to NSL up to translate the DNS name I would get",
    "start": "701519",
    "end": "707920"
  },
  {
    "text": "the internal IP address of my device and that way whenever Weston digital tries",
    "start": "707920",
    "end": "713000"
  },
  {
    "text": "to redirect me it simply tells me hey fetch this file and by transfering it to",
    "start": "713000",
    "end": "718200"
  },
  {
    "text": "the Lan IP I'm able to access my file well because of this DNS record we",
    "start": "718200",
    "end": "724720"
  },
  {
    "text": "were able to use something called passive DNS you see some DNS servs actually sell the records the metadata",
    "start": "724720",
    "end": "731079"
  },
  {
    "text": "of the requests and simply sell it to different API vendors that allow us to",
    "start": "731079",
    "end": "736519"
  },
  {
    "text": "use their SP server API to query all DNS records and by using this passive DNS we",
    "start": "736519",
    "end": "743920"
  },
  {
    "text": "were able to get access to the DNS name of thousands of different devices as you can see over",
    "start": "743920",
    "end": "750120"
  },
  {
    "text": "10,000 well we actually did this and it was pretty cool and we got access to",
    "start": "750120",
    "end": "755560"
  },
  {
    "text": "thousands and thousands of the devices however almost all of them were dead meaning they were no longer accessible",
    "start": "755560",
    "end": "761519"
  },
  {
    "text": "either because they disconnected they got reinstalled Etc the good was changed",
    "start": "761519",
    "end": "767040"
  },
  {
    "text": "and we could no longer access them so we said to ourself yeah let's improve it once again that's when we turn our heads into",
    "start": "767040",
    "end": "775160"
  },
  {
    "text": "certificate harvesting like I've told you before each device is issued a certificate ific that contains the device is good so by simply using",
    "start": "775160",
    "end": "782760"
  },
  {
    "text": "servers that hold ACC that hold the records of thousands in in the case of Tes actually billions of different",
    "start": "782760",
    "end": "788839"
  },
  {
    "text": "certificates and querying them using their API looking for Western Digital pattern we were able to get access to",
    "start": "788839",
    "end": "796279"
  },
  {
    "text": "millions of different devices as you can see just by using Sal sensis we're able to get access to 1.5 million",
    "start": "796279",
    "end": "803160"
  },
  {
    "text": "certificates in just the last three months meaning they were for sure activated and still accessible well that",
    "start": "803160",
    "end": "811279"
  },
  {
    "text": "was pretty cool but for the pointto on competition we had to actually attack the device in real time so our goal was",
    "start": "811279",
    "end": "817240"
  },
  {
    "text": "to from getting access to millions of devices our goal was to liak the guid in real time whenever it connects and",
    "start": "817240",
    "end": "823560"
  },
  {
    "text": "that's when we thought to ourselves how can we somehow keep track of different",
    "start": "823560",
    "end": "828920"
  },
  {
    "text": "spicatum Well turns out the answer to this request was CTL for those of you",
    "start": "828920",
    "end": "834800"
  },
  {
    "text": "not informed of CTL it is actually a specification in the internet that its main goal is to improve",
    "start": "834800",
    "end": "840800"
  },
  {
    "text": "Internet Security and basically the gist of it is that whenever a CA issues a new",
    "start": "840800",
    "end": "845880"
  },
  {
    "text": "certificate they send a metadata feed about this certificate mainly the certificate name who requested it Etc H",
    "start": "845880",
    "end": "854160"
  },
  {
    "text": "into the CTL feed allowing users to subscribe to it and get notification of every single certificate being issued",
    "start": "854160",
    "end": "860920"
  },
  {
    "text": "well by simply subscribing to the CTL feed using different open- Source tools",
    "start": "860920",
    "end": "866399"
  },
  {
    "text": "we were able to grab into Western digitals pattern and get devices in real time winning we had access to the",
    "start": "866399",
    "end": "873959"
  },
  {
    "text": "ability to get the devices good whenever it was issued by subscribing to CTL for",
    "start": "873959",
    "end": "879720"
  },
  {
    "text": "a few hours and a few days we actually got thousands and thousands of different devices meaning we now had access to all",
    "start": "879720",
    "end": "886079"
  },
  {
    "text": "of the devices Goods the minute they are issued and once again through Western",
    "start": "886079",
    "end": "891120"
  },
  {
    "text": "digitals Cloud we were able to access them over the cloud okay so we got access to we now",
    "start": "891120",
    "end": "897560"
  },
  {
    "text": "had access to millions of devices however our next step was actually find an authentication bypass meaning we are",
    "start": "897560",
    "end": "904040"
  },
  {
    "text": "able to access the devices however our goal is actually fetching and you're doing some API",
    "start": "904040",
    "end": "909800"
  },
  {
    "text": "requests that's when we simply asked a very generous person in our company hey",
    "start": "909800",
    "end": "917079"
  },
  {
    "text": "does someone have a device we can use because we want to test a few things H",
    "start": "917079",
    "end": "922480"
  },
  {
    "text": "in with the promise not breaking the device we actually got access from a to a friend's device and and we did once",
    "start": "922480",
    "end": "929959"
  },
  {
    "text": "again the obvious and naive approach meaning we simply took the request we perform to our Nas and change the guid",
    "start": "929959",
    "end": "938519"
  },
  {
    "text": "and whenever we changed the guid we started monitoring what kind of API endpoint returns actual results and not",
    "start": "938519",
    "end": "945600"
  },
  {
    "text": "and pretty soon we found a combination of API endpoints that simply worked this",
    "start": "945600",
    "end": "951480"
  },
  {
    "text": "means that these endpoints checked for our authentication and not authorization meaning by just having a valid session",
    "start": "951480",
    "end": "958040"
  },
  {
    "text": "cookie to our own device we were able to access other devices meaning we now had",
    "start": "958040",
    "end": "963720"
  },
  {
    "text": "access to all of the devices around the world giving us access to everyone's",
    "start": "963720",
    "end": "970519"
  },
  {
    "text": "file now this was pretty cool and we turn ahead into achieving remote code",
    "start": "970519",
    "end": "976319"
  },
  {
    "text": "execution of these devices however sadly a few weeks before the pwn toon",
    "start": "976319",
    "end": "981519"
  },
  {
    "text": "competition we tried our scripts and our exploits and these exploits worked in",
    "start": "981519",
    "end": "986720"
  },
  {
    "text": "the past however we tried them before the execution and they simply did not work this was heartbreaking for me",
    "start": "986720",
    "end": "993880"
  },
  {
    "text": "because the research I've done in the last few months simply was fixed on Western digitals endpoints and now all",
    "start": "993880",
    "end": "1000680"
  },
  {
    "text": "of the API routes we found that did not check for proper authorization did somehow Western Digital just simply",
    "start": "1000680",
    "end": "1007319"
  },
  {
    "text": "pushed a patch that fixed our vulnerabilities that's when we turned oure and said okay we're going to uh",
    "start": "1007319",
    "end": "1014399"
  },
  {
    "text": "find the new vulnerabilities and get access to everyone files once again",
    "start": "1014399",
    "end": "1019440"
  },
  {
    "text": "so let's take a look at the main Cloud binary that handles most of the authentication and cloud apis and see",
    "start": "1019440",
    "end": "1026760"
  },
  {
    "text": "what it does behind the scenes this binary is called rests Decay and it is the main Cloud binary that handles most",
    "start": "1026760",
    "end": "1033240"
  },
  {
    "text": "of the different functionality both validating users tokens and of course fetching and writing files like you get",
    "start": "1033240",
    "end": "1040319"
  },
  {
    "text": "from the cloud API endpoint this binary once again is written in goang which is actually",
    "start": "1040319",
    "end": "1046319"
  },
  {
    "text": "pretty hard because goang offer a lot of built- in security for example we have no memory Corruptions in goang we cannot",
    "start": "1046319",
    "end": "1053039"
  },
  {
    "text": "look for them because golang handles most of the memory allocations and of course a lot of the apis for example",
    "start": "1053039",
    "end": "1058960"
  },
  {
    "text": "doing performing an OS command is done safely meaning unless a developer really",
    "start": "1058960",
    "end": "1064160"
  },
  {
    "text": "wanted to put a vulnerability in this API endpoint it's probably safe H so in",
    "start": "1064160",
    "end": "1069520"
  },
  {
    "text": "order to understand what's happening behind the scene we had to try and reverse engineer this binary and and",
    "start": "1069520",
    "end": "1076200"
  },
  {
    "text": "somehow know what it's doing behind the scenes well through the process of maning the",
    "start": "1076200",
    "end": "1081720"
  },
  {
    "text": "middling the entire Cloud tunnel creation H we started our goal was Men",
    "start": "1081720",
    "end": "1087520"
  },
  {
    "text": "in the middling different HTTP and htps requests our Nas device performs in",
    "start": "1087520",
    "end": "1092679"
  },
  {
    "text": "order to better understand how the hell does this tunnel creation magic happens how am I routed to my device whenever I",
    "start": "1092679",
    "end": "1099200"
  },
  {
    "text": "try to access my devices good and by achieving men in the middle we were able",
    "start": "1099200",
    "end": "1104480"
  },
  {
    "text": "to actually view every different request performed to our that is done by our nice device meaning we had the ability",
    "start": "1104480",
    "end": "1111159"
  },
  {
    "text": "to view it and better understand the cloud creation process well let me summarize it for you",
    "start": "1111159",
    "end": "1118400"
  },
  {
    "text": "basically whenever our device tries to connect Western digitals Cloud it opens a TLS connection to one of Western",
    "start": "1118400",
    "end": "1125600"
  },
  {
    "text": "digital's proxy servers and whenever it opens the TLs connection Western digital's proxy",
    "start": "1125600",
    "end": "1132400"
  },
  {
    "text": "servers perform an http2 request to our saying hey I'd like to proxy connect to you meaning I'd like to open a tunnel",
    "start": "1132400",
    "end": "1139960"
  },
  {
    "text": "well to this question to this query API request our device says yeah sure I'd",
    "start": "1139960",
    "end": "1145799"
  },
  {
    "text": "like to connect to you here is my devices good and Western Digital takes this guid and actually establishes the",
    "start": "1145799",
    "end": "1151799"
  },
  {
    "text": "tunnel meaning now whenever a user tries to connect with the device specifying this GID it gets connected to our device",
    "start": "1151799",
    "end": "1159799"
  },
  {
    "text": "now the minute we saw this kind of authentication we said to ourself wait",
    "start": "1159799",
    "end": "1165159"
  },
  {
    "text": "what where the hell are the secrets this is proper device authentication through",
    "start": "1165159",
    "end": "1171120"
  },
  {
    "text": "this channel our device authenticates to West digitals Cloud saying yeah whenever",
    "start": "1171120",
    "end": "1176159"
  },
  {
    "text": "a user tries to access their device rout it to us however once again no secrets",
    "start": "1176159",
    "end": "1183720"
  },
  {
    "text": "were used meaning no passwords no secrets no API Keys certificates nothing",
    "start": "1183720",
    "end": "1190720"
  },
  {
    "text": "the only knowledge that was required to create a new tunnel H to our to the",
    "start": "1190720",
    "end": "1195840"
  },
  {
    "text": "Western Digital servers was the device is good and like I've shown you before it is public knowledge all you need to",
    "start": "1195840",
    "end": "1202679"
  },
  {
    "text": "do is access the device GPS port and you are able to view the devices good so we",
    "start": "1202679",
    "end": "1208159"
  },
  {
    "text": "did the pretty obvious thing and simply implemented this on our own meaning we",
    "start": "1208159",
    "end": "1214200"
  },
  {
    "text": "connected to Western Digital servers and said yeah I'm I'm the good and whenever",
    "start": "1214200",
    "end": "1219280"
  },
  {
    "text": "we did it Western digitals said yeah sure I trust you hello device and",
    "start": "1219280",
    "end": "1224640"
  },
  {
    "text": "actually disconnected the real device meaning whenever a user tries to access their device it is now routed to us that",
    "start": "1224640",
    "end": "1232480"
  },
  {
    "text": "is actually pretty crazy when you're thinking about it because that way we we were able to impersonate a device and",
    "start": "1232480",
    "end": "1239159"
  },
  {
    "text": "Route requests to us however what was even crazier was what happened next",
    "start": "1239159",
    "end": "1245960"
  },
  {
    "text": "because whenever our tunnel was established immediately we got this and",
    "start": "1245960",
    "end": "1252640"
  },
  {
    "text": "as you can see this is a valid user request containing the user authorization token",
    "start": "1252640",
    "end": "1258919"
  },
  {
    "text": "whenever we saw that we were pretty stomped saying wait how the hell did we get a session how the hell did we get a",
    "start": "1258919",
    "end": "1264640"
  },
  {
    "text": "token however after a short realization we realized that in order to keep the",
    "start": "1264640",
    "end": "1270000"
  },
  {
    "text": "device up to dat the cloud application constantly performs background up refresh meaning it constantly tries to",
    "start": "1270000",
    "end": "1276640"
  },
  {
    "text": "reconnect to the device and stay up to dat checking if some kinds of files were changed or if something uh was Chang and",
    "start": "1276640",
    "end": "1284880"
  },
  {
    "text": "in order to improve the user experience the cloud application t actually user application constantly performs the",
    "start": "1284880",
    "end": "1291080"
  },
  {
    "text": "request to the Nas and because we impersonated the nas we now had access to this requests giving us once again",
    "start": "1291080",
    "end": "1298520"
  },
  {
    "text": "access to everyone's files cool so next up after we had",
    "start": "1298520",
    "end": "1304559"
  },
  {
    "text": "access to these files our next goal was to actually find an rce and somehow exploit these",
    "start": "1304559",
    "end": "1312120"
  },
  {
    "text": "devices wow that's pretty crazy not only we had access to",
    "start": "1313360",
    "end": "1318880"
  },
  {
    "text": "all the goods of all Western Digital Cloud connected devices we could also",
    "start": "1318880",
    "end": "1324679"
  },
  {
    "text": "abuse our authentication bypass to impersonate the device and then get the",
    "start": "1324679",
    "end": "1331600"
  },
  {
    "text": "user token we now had the ability to get user tokens so basically we had Now new",
    "start": "1331600",
    "end": "1339159"
  },
  {
    "text": "attack Vector which is authenticated user and we could Explore More API now",
    "start": "1339159",
    "end": "1346960"
  },
  {
    "text": "sadly for us sadly for us uh having admin access to a",
    "start": "1346960",
    "end": "1353279"
  },
  {
    "text": "device does not mean remote code execution right so we have a fully authenticated session because we stole",
    "start": "1353279",
    "end": "1360799"
  },
  {
    "text": "one uh but now we had to change some more vulnerabilities on our new attack",
    "start": "1360799",
    "end": "1366880"
  },
  {
    "text": "surface which is authenticated user and chain everything together to get",
    "start": "1366880",
    "end": "1372080"
  },
  {
    "text": "pre-authenticated remote code execution now to achieve this we had to",
    "start": "1372080",
    "end": "1377640"
  },
  {
    "text": "reverse engineer a bit more more the rest Decay uh but now we weren't",
    "start": "1377640",
    "end": "1383240"
  },
  {
    "text": "focusing on the pre-o rout and apis we focused on the authenticated routes",
    "start": "1383240",
    "end": "1390039"
  },
  {
    "text": "because we had a valid session we had a valid user so we started to explore all",
    "start": "1390039",
    "end": "1395240"
  },
  {
    "text": "the available apis and basically everything that is C that a user can do",
    "start": "1395240",
    "end": "1400440"
  },
  {
    "text": "on their devices uh through normal activity like logging in to the application through mobile or through",
    "start": "1400440",
    "end": "1407480"
  },
  {
    "text": "the web and playing with it for example a user can shut down their devices remotely so",
    "start": "1407480",
    "end": "1414320"
  },
  {
    "text": "this is an API that goes through the rest Decay and this is again one of the",
    "start": "1414320",
    "end": "1419640"
  },
  {
    "text": "functionality we researched now as an authenticated user one interesting very interesting uh",
    "start": "1419640",
    "end": "1426960"
  },
  {
    "text": "feature we noticed uh very early is the ability to create shares and mounts so",
    "start": "1426960",
    "end": "1432799"
  },
  {
    "text": "obviously we're talking about Nas device and the most important capability of a",
    "start": "1432799",
    "end": "1438640"
  },
  {
    "text": "Nas device is to present to you an interface that you can interact with files on your Nas through the network so",
    "start": "1438640",
    "end": "1447559"
  },
  {
    "text": "obviously it will present to you in some kind of a graphical way all the files that you can read and write and these",
    "start": "1447559",
    "end": "1454080"
  },
  {
    "text": "files are correlated somehow to hard drives on your Nas and the way that it",
    "start": "1454080",
    "end": "1460240"
  },
  {
    "text": "happens in Western Digital is mounts and SharePoint so basically each directory",
    "start": "1460240",
    "end": "1466679"
  },
  {
    "text": "that you see in the m mobile application or the web interface is a Sim link to a",
    "start": "1466679",
    "end": "1473679"
  },
  {
    "text": "directory on your Nas so the file system Maps this directory to a directory on",
    "start": "1473679",
    "end": "1480760"
  },
  {
    "text": "the hard drive and then you can read and write files to this directory so we ask",
    "start": "1480760",
    "end": "1486159"
  },
  {
    "text": "ourselves what happens if we in some way find a way to change this",
    "start": "1486159",
    "end": "1492679"
  },
  {
    "text": "mounting point for example add new hard drive but instead of adding new hard",
    "start": "1492679",
    "end": "1497919"
  },
  {
    "text": "drive just point a real directory to SL temp or to slash will we be able to read",
    "start": "1497919",
    "end": "1506080"
  },
  {
    "text": "all the files there uh so we tried this uh we uh just we had an authenticated",
    "start": "1506080",
    "end": "1513159"
  },
  {
    "text": "user so we tried to create new mounting Point through this undocumented API and",
    "start": "1513159",
    "end": "1519600"
  },
  {
    "text": "we pointed the directory priv PX for example to/ Temp and suddenly we saw in",
    "start": "1519600",
    "end": "1525880"
  },
  {
    "text": "the mobile application all the directories and all the files we had in SLT so we could not only read the files",
    "start": "1525880",
    "end": "1534520"
  },
  {
    "text": "from SLT we could also write files to SL temp and this is pretty crazy because",
    "start": "1534520",
    "end": "1540120"
  },
  {
    "text": "now we had authenticated user with capabilities to read and write files from within the file",
    "start": "1540120",
    "end": "1547279"
  },
  {
    "text": "system however it wasn't that easy because the file system in most places was read only so we were very limited to",
    "start": "1547279",
    "end": "1555120"
  },
  {
    "text": "where we could uh write files um and eventually we chose to write files into",
    "start": "1555120",
    "end": "1560960"
  },
  {
    "text": "SL temp because we found another vulnerability that we were able to chain",
    "start": "1560960",
    "end": "1566480"
  },
  {
    "text": "with the next route we considered is the reboot one uh I already told you that",
    "start": "1566480",
    "end": "1573200"
  },
  {
    "text": "any user authenticated user has the ability to reboot their devices remotely through the API and so we researched the",
    "start": "1573200",
    "end": "1580880"
  },
  {
    "text": "binary that is responsible for this behind the scene this binary is called do reboot and",
    "start": "1580880",
    "end": "1588279"
  },
  {
    "text": "it it has very simple logic to reboot the device using the Linux API but",
    "start": "1588279",
    "end": "1594480"
  },
  {
    "text": "behind the scene it does all kind of uh logging mechanisms and reading other files uh that we thought we should",
    "start": "1594480",
    "end": "1602120"
  },
  {
    "text": "explore one of the things we noticed really on in the process of do reboot",
    "start": "1602120",
    "end": "1607840"
  },
  {
    "text": "binary is that it reads a file from sltm PES it in some way and then uses it in a",
    "start": "1607840",
    "end": "1616840"
  },
  {
    "text": "system command so we basically found an injection point to this system command H which will get",
    "start": "1616840",
    "end": "1624120"
  },
  {
    "text": "executed so what we thought ourselves is what happens if we use the previous vulnerability to create new mounting",
    "start": "1624120",
    "end": "1631000"
  },
  {
    "text": "point to SLT right our file that will be parsed in some way that will get our",
    "start": "1631000",
    "end": "1637159"
  },
  {
    "text": "code execution so this is exactly what we did H and now we had our chain completed so",
    "start": "1637159",
    "end": "1644760"
  },
  {
    "text": "by using the device good that we were able to leak through multiple ways from",
    "start": "1644760",
    "end": "1650120"
  },
  {
    "text": "sensis uh certificate servers to ctls we're able to impersonate a device get",
    "start": "1650120",
    "end": "1657279"
  },
  {
    "text": "the user token achieve authenticated s attack surface and then create new",
    "start": "1657279",
    "end": "1663240"
  },
  {
    "text": "mounting point to write our files to/ temp write a file that will be parsed with an injection point and get RC so",
    "start": "1663240",
    "end": "1671000"
  },
  {
    "text": "let's see how it looks the full exploit chain looks like this first of all there is a user that is connected to their",
    "start": "1671000",
    "end": "1678399"
  },
  {
    "text": "device they have their own good next we come up and we say we want to attack",
    "start": "1678399",
    "end": "1684440"
  },
  {
    "text": "this device uh and we know the good because as no mentioned this is kind of a public knowledge we can query it from",
    "start": "1684440",
    "end": "1691320"
  },
  {
    "text": "the certificate now we're telling the cloud platform hey uh we're the real good I we",
    "start": "1691320",
    "end": "1698720"
  },
  {
    "text": "don't know who the other device is uh so basically we're impersonating the device",
    "start": "1698720",
    "end": "1704240"
  },
  {
    "text": "and since there was a bug in the cloud that did not check anything else besides the good it fully trusted us and",
    "start": "1704240",
    "end": "1711120"
  },
  {
    "text": "disconnected the real tunnel so once we were connected as",
    "start": "1711120",
    "end": "1716200"
  },
  {
    "text": "impersonated as the device we immediately got the request from the user who just wanted to access their",
    "start": "1716200",
    "end": "1721600"
  },
  {
    "text": "files and it happens automatically immediately and so now we have the user",
    "start": "1721600",
    "end": "1726799"
  },
  {
    "text": "authentication token so we can wait a few minutes for the real tunnel to come",
    "start": "1726799",
    "end": "1732360"
  },
  {
    "text": "up it again it happens automatically and then we're using the token as if we were",
    "start": "1732360",
    "end": "1737399"
  },
  {
    "text": "we the user so now we're impersonating the user to connect to the real Nas now",
    "start": "1737399",
    "end": "1742799"
  },
  {
    "text": "we have an authentic authenticated uh attack surface so we're creating a new",
    "start": "1742799",
    "end": "1748200"
  },
  {
    "text": "mounting point to SLT so we could interact with files read and write files from slamp we are writing our file that",
    "start": "1748200",
    "end": "1756919"
  },
  {
    "text": "uh will be the injection point and we are activating the DU reboot process and",
    "start": "1756919",
    "end": "1762799"
  },
  {
    "text": "once this happened we get command execution on the Nas and we get shell",
    "start": "1762799",
    "end": "1768200"
  },
  {
    "text": "and this is exactly what we did in Pon and got 40K uh now this was uh a concept that we",
    "start": "1768200",
    "end": "1777200"
  },
  {
    "text": "developed to impersonate a Nas device and we did it with Western Digital but",
    "start": "1777200",
    "end": "1782919"
  },
  {
    "text": "we also were able to do the same for signology device so let's take a quick look on the",
    "start": "1782919",
    "end": "1789679"
  },
  {
    "text": "same concept with signology so for sinology we had to research the signology",
    "start": "1789679",
    "end": "1796320"
  },
  {
    "text": "ds920 uh this is a very popular Nas uh I have one at home actually uh it's a 8 86",
    "start": "1796320",
    "end": "1804399"
  },
  {
    "text": "architecture with 64bit uh and it has a very um fully featured web based and",
    "start": "1804399",
    "end": "1810880"
  },
  {
    "text": "behind the scene it runs C++ cgis uh with engine X once again uh this",
    "start": "1810880",
    "end": "1817760"
  },
  {
    "text": "device this Nas had a cloud connectivity platform uh the cloud connectivity",
    "start": "1817760",
    "end": "1823000"
  },
  {
    "text": "platform of signology is called quick connect and once again if you want to",
    "start": "1823000",
    "end": "1828840"
  },
  {
    "text": "reach your device at home while you're at work for example you can go to Quick",
    "start": "1828840",
    "end": "1834320"
  },
  {
    "text": "connect. two or to the mobile application uh and connect to your",
    "start": "1834320",
    "end": "1839559"
  },
  {
    "text": "device obviously the first thing that you need to do is to associate your signology user with this device um so we",
    "start": "1839559",
    "end": "1847679"
  },
  {
    "text": "can go to the nas uh web settings and configure the alas for your device and",
    "start": "1847679",
    "end": "1856120"
  },
  {
    "text": "Associate the user so basically anyone can choose any alas they want it's like a username for uh",
    "start": "1856120",
    "end": "1863799"
  },
  {
    "text": "their device um if it's not taken before you can have any alas that you want so",
    "start": "1863799",
    "end": "1869960"
  },
  {
    "text": "how it works once again uh we have the mobile application or the web Quick",
    "start": "1869960",
    "end": "1875080"
  },
  {
    "text": "Connect um website and we're sending a get request to your alas do quickconnect",
    "start": "1875080",
    "end": "1882080"
  },
  {
    "text": "do2 and you're reaching to device now behind the scene what happens is once",
    "start": "1882080",
    "end": "1887600"
  },
  {
    "text": "the cloud the Quick Connect Cloud receives this request it will issue uh a",
    "start": "1887600",
    "end": "1893799"
  },
  {
    "text": "open Tunnel using open openvpn request to the device meaning the cloud will",
    "start": "1893799",
    "end": "1899399"
  },
  {
    "text": "tell the device hey start a VPN connection with me uh which the device",
    "start": "1899399",
    "end": "1905000"
  },
  {
    "text": "will gladly do and now we will have a full tunnel that quick connect relays",
    "start": "1905000",
    "end": "1910840"
  },
  {
    "text": "everything to the device through the VPN connection now if you noticed uh once",
    "start": "1910840",
    "end": "1917279"
  },
  {
    "text": "again we had a DNS a subdomain so we could query again all the aliases of all",
    "start": "1917279",
    "end": "1923760"
  },
  {
    "text": "signology devices uh across the globe because uh using passive DNS records is",
    "start": "1923760",
    "end": "1929840"
  },
  {
    "text": "very easy um to get all the subdomains of all the devices so we wanted to understand the",
    "start": "1929840",
    "end": "1938039"
  },
  {
    "text": "the second part we wanted to understand again we had a concept of uh impersonating Nas devices and leverage",
    "start": "1938039",
    "end": "1944519"
  },
  {
    "text": "leveraging this into RC so we want wanted to explore what happens and how",
    "start": "1944519",
    "end": "1949799"
  },
  {
    "text": "it happens that the device is opening a connection with the Quick Connect cloud",
    "start": "1949799",
    "end": "1956399"
  },
  {
    "text": "and obviously the bug in Western Digital is that the secrets that the device used",
    "start": "1956399",
    "end": "1962760"
  },
  {
    "text": "to connect to the cloud uh were mainly the good which is obviously not enough",
    "start": "1962760",
    "end": "1968279"
  },
  {
    "text": "so we wanted to understand here what are the secrets what are the tokens what are the the digital elements that the device",
    "start": "1968279",
    "end": "1975000"
  },
  {
    "text": "is using in order to connect uh to the to the cloud and this is exactly what we researched we researched this process of",
    "start": "1975000",
    "end": "1982279"
  },
  {
    "text": "what secrets are transferred to the cloud and how the cloud is transferring back to the device the quick the openvpn",
    "start": "1982279",
    "end": "1988919"
  },
  {
    "text": "configuration and it was a long process because it was a very complicated process that we researched for a long",
    "start": "1988919",
    "end": "1995279"
  },
  {
    "text": "time but we can summarize all the digital elements all the secrets that we need into a list um and it includes",
    "start": "1995279",
    "end": "2002320"
  },
  {
    "text": "obviously the MAC address of the device the serial number the device module uh and a couple of API keys that are that",
    "start": "2002320",
    "end": "2010039"
  },
  {
    "text": "are transferred to the device why in the first place when the user authenticates",
    "start": "2010039",
    "end": "2015480"
  },
  {
    "text": "and Associates their accounts on the device so we started to research and we started to understand how can we leak",
    "start": "2015480",
    "end": "2021799"
  },
  {
    "text": "these secrets or tokens the first thing is that we saw that the mech serial and",
    "start": "2021799",
    "end": "2028639"
  },
  {
    "text": "the device module are pretty easy to achieve because sinology has this protocol signology Discovery protocol",
    "start": "2028639",
    "end": "2036000"
  },
  {
    "text": "over UDP 99 9 UM and actually they're using this in a legitimate way in their",
    "start": "2036000",
    "end": "2042519"
  },
  {
    "text": "signology assistant Discovery so whenever you buy a new device you can run you can plug it into your network",
    "start": "2042519",
    "end": "2048480"
  },
  {
    "text": "you don't know the details of it so you can run the discovery and see it and the magic behind it is Discovery protocols",
    "start": "2048480",
    "end": "2054760"
  },
  {
    "text": "uh Discovery protocol or specifically Discovery Pockets uh that are being sent across the network as broadcast and if",
    "start": "2054760",
    "end": "2061760"
  },
  {
    "text": "the device receive them it will reply with all the details so that was perfect for us because now we had the mech",
    "start": "2061760",
    "end": "2068480"
  },
  {
    "text": "address the serial and the device module we also had to calculate something called DS token which is uh kind of a",
    "start": "2068480",
    "end": "2076158"
  },
  {
    "text": "md5 routine on the serial so we had all these basic stuff",
    "start": "2076159",
    "end": "2081638"
  },
  {
    "text": "but now we had to get the API key uh which is the device uh token that is",
    "start": "2081639",
    "end": "2086919"
  },
  {
    "text": "used to connect to the cloud uh it obviously it's not straightforward to get this because this only happens when",
    "start": "2086919",
    "end": "2093158"
  },
  {
    "text": "a user Associates their account on the device in the first time but we were able to find a bug in their",
    "start": "2093159",
    "end": "2101079"
  },
  {
    "text": "Cloud uh platform specifically in one of the routes um that allowed us to",
    "start": "2101079",
    "end": "2107000"
  },
  {
    "text": "register new API key on behalf of the device only if we know the serial and",
    "start": "2107000",
    "end": "2112839"
  },
  {
    "text": "the Mac of the device this is crazy because now we could generate ourselves a valid API token and it did not even",
    "start": "2112839",
    "end": "2121040"
  },
  {
    "text": "invalidated the previous ones so the device kept working and it was not even aware of it",
    "start": "2121040",
    "end": "2127720"
  },
  {
    "text": "great so now we had the API key uh and now we needed to get something called the authentication key which is a a user",
    "start": "2127720",
    "end": "2135160"
  },
  {
    "text": "token that is associated with the device but once again we're able to find",
    "start": "2135160",
    "end": "2140440"
  },
  {
    "text": "another vulnerability that allowed us to create to to generate authentication key",
    "start": "2140440",
    "end": "2147040"
  },
  {
    "text": "uh based on the previous elements we had so we could use the API key that we uh",
    "start": "2147040",
    "end": "2152480"
  },
  {
    "text": "generated for ourselves and we could use the serial and the mech and now we had the authentication key and basically all",
    "start": "2152480",
    "end": "2159680"
  },
  {
    "text": "the elements that we needed in order to fully impersonate a device so now we",
    "start": "2159680",
    "end": "2164880"
  },
  {
    "text": "could tell the the cloud service hey we're the device with this serial and",
    "start": "2164880",
    "end": "2170400"
  },
  {
    "text": "Mac uh please change this and that configuration so we could impersonate",
    "start": "2170400",
    "end": "2176440"
  },
  {
    "text": "the device now what we did is we actually impersonated the device and",
    "start": "2176440",
    "end": "2182520"
  },
  {
    "text": "then told the cloud platform hey we changed our iPad address external IP",
    "start": "2182520",
    "end": "2188079"
  },
  {
    "text": "address from the current one to 12 34 and then we set up our trap on one two 3",
    "start": "2188079",
    "end": "2196240"
  },
  {
    "text": "4 so whenever the user wanted to access their device the cloud relayed in not to",
    "start": "2196240",
    "end": "2204440"
  },
  {
    "text": "the real device but to our trap on the ip1 2 3 4 this was perfect because we",
    "start": "2204440",
    "end": "2210720"
  },
  {
    "text": "could impersonate the device and on behalf of it change the IP address so",
    "start": "2210720",
    "end": "2216720"
  },
  {
    "text": "what we did is exactly like previously we relayed users real users instead of",
    "start": "2216720",
    "end": "2223119"
  },
  {
    "text": "their devices to our trap we got their token and then we used it to connect to",
    "start": "2223119",
    "end": "2229040"
  },
  {
    "text": "the real device and execute code on it uh so this is exactly again what we did",
    "start": "2229040",
    "end": "2235440"
  },
  {
    "text": "in P to own uh and uh we got uh 40K for",
    "start": "2235440",
    "end": "2241000"
  },
  {
    "text": "it so just to give you a quick summary of what we did um users want to get to",
    "start": "2241000",
    "end": "2247440"
  },
  {
    "text": "their devices obviously uh but because of a couple of vulnerabilities uh we",
    "start": "2247440",
    "end": "2252720"
  },
  {
    "text": "found both in Western Digital and signology we were able to redirect users",
    "start": "2252720",
    "end": "2258400"
  },
  {
    "text": "to our impersonated device now whenever they got to our device uh they",
    "start": "2258400",
    "end": "2265280"
  },
  {
    "text": "handed us their tokens and we use these tokens to access their real device and",
    "start": "2265280",
    "end": "2271000"
  },
  {
    "text": "leverage vulnerabilities on the device to get code execution now the real",
    "start": "2271000",
    "end": "2277839"
  },
  {
    "text": "problem with this is that cloud services focus on strong user authentication but",
    "start": "2277839",
    "end": "2282880"
  },
  {
    "text": "not so much on device authentication uh so weak or public knowledge",
    "start": "2282880",
    "end": "2287920"
  },
  {
    "text": "identification are used for uh we found that wiek or public knowledge",
    "start": "2287920",
    "end": "2294119"
  },
  {
    "text": "identification were used for device authentication which enabled us to impersonate devices and trick users to",
    "start": "2294119",
    "end": "2302000"
  },
  {
    "text": "give us their authentication tokens and we leverage them into remote execution",
    "start": "2302000",
    "end": "2307920"
  },
  {
    "text": "so uh thank you very much uh and um we",
    "start": "2307920",
    "end": "2313119"
  },
  {
    "text": "hope you enjoyed",
    "start": "2313119",
    "end": "2315799"
  },
  {
    "text": "it yeah if every anyone has any questions now is a great time to ask us or you can go to the rap room later on",
    "start": "2320680",
    "end": "2327599"
  },
  {
    "text": "yeah and contact us directly thank you very much everyone thank",
    "start": "2327599",
    "end": "2334040"
  },
  {
    "text": "you",
    "start": "2334520",
    "end": "2337520"
  }
]