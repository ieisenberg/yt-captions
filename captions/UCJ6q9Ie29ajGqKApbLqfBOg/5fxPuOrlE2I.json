[
  {
    "start": "0",
    "end": "250000"
  },
  {
    "text": "so yes as you're in the RUS zone writing in trusted applications in rust talk my",
    "start": "179",
    "end": "6299"
  },
  {
    "text": "name is Eric Evan chick we're at blackhat Asia 2018 and yeah well get",
    "start": "6299",
    "end": "11309"
  },
  {
    "text": "this rolling along as some people file in here just a little bit about me what",
    "start": "11309",
    "end": "16560"
  },
  {
    "text": "I do right now I'm a principal research consultant at Redis partners we do lots of pen testing type stuff other security",
    "start": "16560",
    "end": "23670"
  },
  {
    "text": "consulting big focus on mobile and embedded so that's kind of how this whole trust zone thing became",
    "start": "23670",
    "end": "30210"
  },
  {
    "text": "interesting to me and I also have this little side gig where I build some open-source Hardware things with this",
    "start": "30210",
    "end": "36149"
  },
  {
    "text": "company called link layer labs up in Canada and yeah we make some tools for packing cars and stuff like that",
    "start": "36149",
    "end": "42120"
  },
  {
    "text": "just a little outline of what we're gonna go through today we'll start off by talking about trusted execution environments and what they are in the",
    "start": "42120",
    "end": "48809"
  },
  {
    "text": "general general idea what that is we'll talk a bit about arm trust zone in",
    "start": "48809",
    "end": "54090"
  },
  {
    "text": "detail just to show how that works I'll go through some of the challenges that we've seen historically with these types",
    "start": "54090",
    "end": "59520"
  },
  {
    "text": "of systems we'll talk a bit about the rest programming language will slim rust",
    "start": "59520",
    "end": "65010"
  },
  {
    "text": "and trust sewn together and see how that ended up working and then we'll do a little demo that and take some questions",
    "start": "65010",
    "end": "71600"
  },
  {
    "text": "so let's start with trusted execution environments which is a pretty general term so what is it one generalized way",
    "start": "71600",
    "end": "79920"
  },
  {
    "text": "of describing it might be an isolated environment within a processor for performing secure operations so it's",
    "start": "79920",
    "end": "86340"
  },
  {
    "text": "some little isolated world that you know has some sort of segmentation from the rest of the processor where you can do",
    "start": "86340",
    "end": "93119"
  },
  {
    "text": "operations and you know have some guarantee of that separation and",
    "start": "93119",
    "end": "98310"
  },
  {
    "text": "typically we see segmentation of three things code data and hardware access code being that you know you can only",
    "start": "98310",
    "end": "105540"
  },
  {
    "text": "run code only at with stuff running in the trusted environment can run code",
    "start": "105540",
    "end": "110759"
  },
  {
    "text": "inside of the trusted environment data being things like memory protection you",
    "start": "110759",
    "end": "115950"
  },
  {
    "text": "know you don't want the non trusted world to be able to take a look into the secure world and hardware access this is",
    "start": "115950",
    "end": "123750"
  },
  {
    "text": "especially useful in embedded applications but you might actually restrict things to say oh well this",
    "start": "123750",
    "end": "129660"
  },
  {
    "text": "really important general purpose i/o pin that you know launches the missile only the",
    "start": "129660",
    "end": "136140"
  },
  {
    "text": "secure world's allowed to toggle a GPIO pin and nobody else seems like maybe a good idea you'll also see it in most",
    "start": "136140",
    "end": "143160"
  },
  {
    "text": "computers nowadays and things like protecting the spy flash that your processor boots from to get your",
    "start": "143160",
    "end": "150330"
  },
  {
    "text": "computer up and running it has to read off this flash chip and that can only be written to in certain special ways and",
    "start": "150330",
    "end": "157320"
  },
  {
    "text": "the reason for that is to prevent permanent backdoors of computers if you know someone gets root they can't take",
    "start": "157320",
    "end": "162870"
  },
  {
    "text": "over your entire processor forever though sometimes they can and there was a great talk last year about that",
    "start": "162870",
    "end": "169020"
  },
  {
    "text": "actually of like a deja and it's a combination of hardware features and software that make these types of things",
    "start": "169020",
    "end": "174660"
  },
  {
    "text": "work you need some hardware features to actually do the segmentation and then you need a software that's going to be able to run in these things and expose",
    "start": "174660",
    "end": "181620"
  },
  {
    "text": "the functionality you want so what do we have today well the most common stuff",
    "start": "181620",
    "end": "187230"
  },
  {
    "text": "AMD Intel and arm so AMD has PSP platform security processor intel has",
    "start": "187230",
    "end": "192810"
  },
  {
    "text": "their txt trusted execution technology and software guard extensions which are",
    "start": "192810",
    "end": "198209"
  },
  {
    "text": "some hardware features that are built into their chips and arm has trust zone and really we're gonna focus on trust",
    "start": "198209",
    "end": "204660"
  },
  {
    "text": "zone today software wise there's a number of operating systems that you would run in these secure in the trust",
    "start": "204660",
    "end": "211950"
  },
  {
    "text": "zone world 3 pretty common ones are truss onyx can e be that's I believe",
    "start": "211950",
    "end": "217620"
  },
  {
    "text": "Samsung devices use that quite a bit there's Qualcomm QC which I can almost",
    "start": "217620",
    "end": "222900"
  },
  {
    "text": "guarantee that somebody in this audience has in their pocket right now if you have a modern phone that's made by with",
    "start": "222900",
    "end": "230190"
  },
  {
    "text": "the processor made by Qualcomm it's proudly running that and then you have opti which is a free open-source one and",
    "start": "230190",
    "end": "237570"
  },
  {
    "text": "will be the subject of this talk because turns out that the closed down ones are",
    "start": "237570",
    "end": "242610"
  },
  {
    "text": "a expensive and be covered by NDA's so we can only talk about the open source stuff but the use cases for this there's",
    "start": "242610",
    "end": "250140"
  },
  {
    "start": "250000",
    "end": "250000"
  },
  {
    "text": "quite a number of them authentication is one that we see in android every time",
    "start": "250140",
    "end": "255600"
  },
  {
    "text": "you unlock your phone actually you're calling into this trusted world and the",
    "start": "255600",
    "end": "261000"
  },
  {
    "text": "reason for this is we can you know store things like credentials in a trusted",
    "start": "261000",
    "end": "266250"
  },
  {
    "text": "environment we can actually segment that away so if somebody gets rude on the device there's",
    "start": "266250",
    "end": "272010"
  },
  {
    "text": "still this other layer of protection and that's really a theme of these systems is they create this extra barrier beyond",
    "start": "272010",
    "end": "277650"
  },
  {
    "text": "just a root financial applications you'll often see trusted environments",
    "start": "277650",
    "end": "282660"
  },
  {
    "text": "that are integrated into things like NFC systems and the reason for this is they",
    "start": "282660",
    "end": "288000"
  },
  {
    "text": "don't want to expose these secret keys that are being used to do you know transactions to just anybody so they'll",
    "start": "288000",
    "end": "295350"
  },
  {
    "text": "keep it in a little trusted secure world and they will not let you know you know what the keys are they'll just give you",
    "start": "295350",
    "end": "300840"
  },
  {
    "text": "an API to make payments secure boot we've seen it used for basic idea here",
    "start": "300840",
    "end": "306780"
  },
  {
    "text": "is that you can start up in sort of the secure contacts do some validation and then switch over and your code that's",
    "start": "306780",
    "end": "313889"
  },
  {
    "text": "doing that secure boot chain shouldn't be impacted too much by the normal world",
    "start": "313889",
    "end": "320180"
  },
  {
    "text": "unless someone finds an issue DRM applications so probably the most",
    "start": "320180",
    "end": "326669"
  },
  {
    "text": "prevalent one of DRM that uses a trusted application is wide vine which is on",
    "start": "326669",
    "end": "333360"
  },
  {
    "text": "most Android devices unless you have some special you know home-baked version of android running and that's that's a",
    "start": "333360",
    "end": "339930"
  },
  {
    "text": "DRM tool the reason for DRM is what you're trying to do here is protect assets in a device that somebody owns",
    "start": "339930",
    "end": "345930"
  },
  {
    "text": "from the person who owns it you don't want them to get those DRM keys because otherwise your DRM model isn't so good",
    "start": "345930",
    "end": "352050"
  },
  {
    "text": "anymore so you can place those in a secure place not let them access the",
    "start": "352050",
    "end": "357330"
  },
  {
    "text": "keys but then just give them an API to say decrypt content that that's encrypted so all this provides this",
    "start": "357330",
    "end": "364169"
  },
  {
    "text": "additional layer of protection from the user and from the host OS so again you",
    "start": "364169",
    "end": "371280"
  },
  {
    "text": "get root and you still have this you know extra thing you need to get through in order to get all those",
    "start": "371280",
    "end": "377610"
  },
  {
    "text": "functionalities and protecting the system from the user sometimes we look at that and we put a sad face beside it",
    "start": "377610",
    "end": "383660"
  },
  {
    "text": "because you know when it's it's a hacker conference I mean people don't like DRM",
    "start": "383660",
    "end": "388979"
  },
  {
    "text": "all that much in this world it's a reality but that is often a goal because you know if someone can route a device",
    "start": "388979",
    "end": "395789"
  },
  {
    "text": "that's one level of access but can we you know add more barriers so one example of how this",
    "start": "395789",
    "end": "401480"
  },
  {
    "text": "works for gate keeper on Android just a definitely a simplification of it but you have the lock setting service that",
    "start": "401480",
    "end": "407930"
  },
  {
    "text": "communicates via binder which is the inter process communication within the Android high-level operating system and",
    "start": "407930",
    "end": "415150"
  },
  {
    "text": "that's going to talk to a service which is called gatekeeper service that ends up kind of going down through the you",
    "start": "415150",
    "end": "421970"
  },
  {
    "text": "know eventually makes it to a kernel module through the through the OS and then that last layer is it actually has",
    "start": "421970",
    "end": "428690"
  },
  {
    "text": "to talk through a IPC channel to the trust execution environment which might",
    "start": "428690",
    "end": "433760"
  },
  {
    "text": "be QC in which case you're talking QC calm is the name of that IPC channel",
    "start": "433760",
    "end": "439720"
  },
  {
    "text": "into the gatekeeper application and that's actually running in this secure world this trusted execution environment",
    "start": "439720",
    "end": "445820"
  },
  {
    "text": "and it's in its own little domain so that's an arm example and arm trust zone",
    "start": "445820",
    "end": "451190"
  },
  {
    "text": "again the thing I'm gonna focus on what is it well its arms trusted execution",
    "start": "451190",
    "end": "458060"
  },
  {
    "start": "454000",
    "end": "454000"
  },
  {
    "text": "environment and really what it defines is two worlds this is not a term I came",
    "start": "458060",
    "end": "463640"
  },
  {
    "text": "up with it's literally what arm calls it you have the normal world and the secure world and your normal world will be your",
    "start": "463640",
    "end": "471050"
  },
  {
    "text": "rich OS you know your your Android your Linux York UNIX whatever it is that you",
    "start": "471050",
    "end": "476090"
  },
  {
    "text": "want to run this is the thing that the user is going to interact with it's probably your UI it's all your network stuff you know all the the nice rich",
    "start": "476090",
    "end": "483500"
  },
  {
    "text": "features and then your secure world is going to be a limited operating system that runs what are usually called",
    "start": "483500",
    "end": "490100"
  },
  {
    "text": "trusted applications and so this looks kind of like a real-time operating system in a lot of cases examples again",
    "start": "490100",
    "end": "496669"
  },
  {
    "text": "are QC op teams and some other things and that world is you know where you're",
    "start": "496669",
    "end": "503090"
  },
  {
    "text": "going to do these these operations that are secure now we need to flip-flop between these two and order for them to",
    "start": "503090",
    "end": "509270"
  },
  {
    "text": "be useful and the way that this works is the processor can do a world switch again",
    "start": "509270",
    "end": "514580"
  },
  {
    "text": "that's the arm term so you start off in the normal world and you can set a bit and you can hop over to the secure world",
    "start": "514580",
    "end": "520310"
  },
  {
    "text": "do some stuff there and hop back and in practice there's api's that are built out across this boundary so you can put",
    "start": "520310",
    "end": "527660"
  },
  {
    "text": "a command into request that's some trusted application do some tasks it'll switch worlds it'll give it",
    "start": "527660",
    "end": "535230"
  },
  {
    "text": "that information it'll do whatever you asked it to do and then it will give you some results flip back and those results",
    "start": "535230",
    "end": "540450"
  },
  {
    "text": "to be ready for you to pick up and do something with but the other key is all this is actually kind of useless without",
    "start": "540450",
    "end": "546600"
  },
  {
    "text": "the last point which is this lets you configure the profile the processor will have options that lets you configure it",
    "start": "546600",
    "end": "553020"
  },
  {
    "text": "so that only certain things are accessible in certain worlds and now",
    "start": "553020",
    "end": "558420"
  },
  {
    "text": "without that yeah you have two worlds but they're the same but what we can do is actually restrict access to Hardware",
    "start": "558420",
    "end": "565410"
  },
  {
    "text": "access to memory and access to code using processor features it's a little",
    "start": "565410",
    "end": "570720"
  },
  {
    "text": "tough because those restrictions are actually not part of the like trust zone standard they're specific to whoever",
    "start": "570720",
    "end": "575940"
  },
  {
    "text": "made that chip so the way that nxp does it versus the way that Ti does that versus the way Qualcomm does it will be",
    "start": "575940",
    "end": "582450"
  },
  {
    "text": "different and what's even more frustrating is that information is almost never the exception of maybe",
    "start": "582450",
    "end": "589680"
  },
  {
    "text": "Atmel almost never in public documentation they want you to get their security reference manual and their",
    "start": "589680",
    "end": "596339"
  },
  {
    "text": "security reference manual probably means you need to be a decently big client and you need to sign NDA's and then you",
    "start": "596339",
    "end": "602160"
  },
  {
    "text": "can't talk about it so it's it's a little tough to actually do that if you're just trying to do it for fun but",
    "start": "602160",
    "end": "608660"
  },
  {
    "text": "let's look at sort of an impractical this is taken from the giotto s documentation but it's it's a nice",
    "start": "608660",
    "end": "614640"
  },
  {
    "start": "609000",
    "end": "609000"
  },
  {
    "text": "graphic of what happens whenever you know you're dealing with the normal world I'm a trust them so we're in the",
    "start": "614640",
    "end": "620280"
  },
  {
    "text": "normal world and we have our CPU core we have some instruction data cache we have some l2 cache we have some Ram you will",
    "start": "620280",
    "end": "627930"
  },
  {
    "text": "notice on the CPU there is a secure configuration register and that last bit",
    "start": "627930",
    "end": "633300"
  },
  {
    "text": "at the very end is NS which actually stands for non secure and so a non",
    "start": "633300",
    "end": "639209"
  },
  {
    "text": "secure is one you're not in the secure world it would be nice if we could solve",
    "start": "639209",
    "end": "644820"
  },
  {
    "text": "all our security problems by just setting not secure to zero but it's a little more complicated than that so",
    "start": "644820",
    "end": "650520"
  },
  {
    "text": "what we end up with is also access to peripherals so Ethernet USB MMC GPU and",
    "start": "650520",
    "end": "656550"
  },
  {
    "text": "UART peripherals are accessible from this normal world and so when we're running our normal code you know Android",
    "start": "656550",
    "end": "663030"
  },
  {
    "text": "Linux whatever it is it can do Ethernet it can do us I talked to the GPU it can talk to the",
    "start": "663030",
    "end": "669569"
  },
  {
    "text": "UART but it can't access some of the other features then we do our world switch",
    "start": "669569",
    "end": "674699"
  },
  {
    "text": "into the secure world and we have different pieces of memory which is going to be enforced by the MMU depending on that particular",
    "start": "674699",
    "end": "681619"
  },
  {
    "text": "implementation that that particular chipset has but you'll have some memory",
    "start": "681619",
    "end": "687149"
  },
  {
    "text": "segmentation so you'll notice that those blocks are different than those blocks you get your own protected piece of ram",
    "start": "687149",
    "end": "693209"
  },
  {
    "text": "and you'll notice that we switched the bit to zero so we are in fact in the secure world and then you'll notice that",
    "start": "693209",
    "end": "699869"
  },
  {
    "text": "we have a different set of peripherals that's available things like real-time clock GPIO graphics and I squared C and",
    "start": "699869",
    "end": "705799"
  },
  {
    "text": "one example of how this might work let's say you have a device and it has",
    "start": "705799",
    "end": "711389"
  },
  {
    "text": "something connected to I squared C you don't want users to be able to just",
    "start": "711389",
    "end": "717239"
  },
  {
    "text": "interact with that in any way you want them to have to go through an API that you designed and they can only do very",
    "start": "717239",
    "end": "723389"
  },
  {
    "text": "limited operations for example maybe this I squared C device is like a secure KO process or does some signing",
    "start": "723389",
    "end": "730289"
  },
  {
    "text": "something like that you know it's important so what you can do is write a trusted application that exposes the",
    "start": "730289",
    "end": "737249"
  },
  {
    "text": "functionality that you want them to be able to use and then force them to use that because otherwise they just cannot",
    "start": "737249",
    "end": "742919"
  },
  {
    "text": "access the I squared C peripheral and I think that's enforced in hardware you'll also notice the security controller",
    "start": "742919",
    "end": "749099"
  },
  {
    "text": "becomes in in the scope in the secure world this is another really common use case is that there'll be a security",
    "start": "749099",
    "end": "755519"
  },
  {
    "text": "controller that has the ability to do encryption or decryption operations using hopefully keys that are stored in",
    "start": "755519",
    "end": "762449"
  },
  {
    "text": "it and not readable by anybody but you know some keys you want to keep secret so it's an encryption or and or",
    "start": "762449",
    "end": "768509"
  },
  {
    "text": "decryption Oracle and this way you can protect that from just the average users sitting on you know sitting on the box",
    "start": "768509",
    "end": "774989"
  },
  {
    "text": "by putting it in that that second world and so in practice that's kind of how it works you end up having an application",
    "start": "774989",
    "end": "782369"
  },
  {
    "text": "in your normal world that needs something from the secure world it's going to set some stuff up it's going to do a world switch then that application",
    "start": "782369",
    "end": "789569"
  },
  {
    "text": "in the secure world is going to you know do its thing it's going to take the data it's going to run and then it's going to",
    "start": "789569",
    "end": "794970"
  },
  {
    "text": "switch back along with providing some results and you just keep doing that for every single secure operation you",
    "start": "794970",
    "end": "801150"
  },
  {
    "text": "want to do more or less how that works but there's some challenges to these things and they look a lot like the",
    "start": "801150",
    "end": "808740"
  },
  {
    "text": "other challenges that you see any time you're doing embedded stuff but you know the reality is that there's no magical",
    "start": "808740",
    "end": "814529"
  },
  {
    "text": "silver bullet and security there's no one tool that solves everything so you",
    "start": "814529",
    "end": "819720"
  },
  {
    "text": "get the usual problems and the one is the actual OS that you typically run in",
    "start": "819720",
    "end": "825720"
  },
  {
    "start": "820000",
    "end": "820000"
  },
  {
    "text": "here is usually very limited there's a good reason for this it doesn't need to",
    "start": "825720",
    "end": "830820"
  },
  {
    "text": "do much so you don't want it consuming all your resources you don't want to run like a full you know Linux in there anything also it's supposed to be secure",
    "start": "830820",
    "end": "837839"
  },
  {
    "text": "so you don't want it to be this is full of rich OS you want to be a very limited you know really stripped down to just",
    "start": "837839",
    "end": "844680"
  },
  {
    "text": "the features you need but in terms of protections because of that they tend to be a little little light so address",
    "start": "844680",
    "end": "852240"
  },
  {
    "text": "space layout randomization is rare there's a few that do it it's questionable whether they're enabled on",
    "start": "852240",
    "end": "858240"
  },
  {
    "text": "all devices there's also the problem that they only have a small amount of address space typically so there's a tax",
    "start": "858240",
    "end": "864570"
  },
  {
    "text": "that you can do where you just kinda brute force the thing and hope for the best and some of those are actually",
    "start": "864570",
    "end": "869610"
  },
  {
    "text": "feasible just because the address space is so small it's things like stack Canaries and guard pages protections",
    "start": "869610",
    "end": "875970"
  },
  {
    "text": "that we've been using for a very long time aren't really used and this kind of",
    "start": "875970",
    "end": "881610"
  },
  {
    "text": "leads to the question of you know is our secure world OS less secure than our",
    "start": "881610",
    "end": "886740"
  },
  {
    "text": "normal world os maybe it does have sort of less OS level protection features and",
    "start": "886740",
    "end": "893430"
  },
  {
    "text": "then the other problem is that we don't get high-level language support and you know we're gonna write C we're basically",
    "start": "893430",
    "end": "899339"
  },
  {
    "text": "writing arm assembly and C that's that's how this stuff works no no Java but I don't think anyone's",
    "start": "899339",
    "end": "904920"
  },
  {
    "text": "complaining too much about that but that's just how that works so of course that leads to the next part of it which",
    "start": "904920",
    "end": "911339"
  },
  {
    "start": "909000",
    "end": "909000"
  },
  {
    "text": "is writing good C is hard this is no surprise we've been talking about this",
    "start": "911339",
    "end": "916529"
  },
  {
    "text": "for many years but you know you have things like buffer overflows and use after freeze memory problems that come",
    "start": "916529",
    "end": "922589"
  },
  {
    "text": "up you have typing issues whenever you're passing stuff around as void pointers one thing I've loved of that C",
    "start": "922589",
    "end": "928800"
  },
  {
    "text": "is that the word void it means nothing but it also means every and it just so happens that",
    "start": "928800",
    "end": "935040"
  },
  {
    "text": "syntactically that that works but you know you're passing stuff around and you're you're it's hard to guarantee",
    "start": "935040",
    "end": "941550"
  },
  {
    "text": "that you know what came in is what's going on compilers typically don't help you too",
    "start": "941550",
    "end": "946740"
  },
  {
    "text": "much depends on the compiler depends on what Flags you have enabled of course but often most most things will compile",
    "start": "946740",
    "end": "954959"
  },
  {
    "text": "is unless you have like actual syntax problems usually it compiles you might",
    "start": "954959",
    "end": "960990"
  },
  {
    "text": "get warnings and maybe your company has some policy about linting or about you know warning checks in practice",
    "start": "960990",
    "end": "967680"
  },
  {
    "text": "enforcing that can be kind of tough depends on you know how much your organization isn't doing those types of",
    "start": "967680",
    "end": "972930"
  },
  {
    "text": "things but it's not always easy and programmers can do silly things and this",
    "start": "972930",
    "end": "978120"
  },
  {
    "text": "again comes down to organizational you know what you allow but things like mem copies and ster copies and esperan tafs",
    "start": "978120",
    "end": "985020"
  },
  {
    "text": "we had this kid here telling us that all his friends are using ster copy but he's not because he understands how dangerous",
    "start": "985020",
    "end": "990270"
  },
  {
    "text": "it is and yeah that's just something that's hard to avoid you can audit code",
    "start": "990270",
    "end": "997500"
  },
  {
    "text": "you can make sure that people don't do it but that's a secondary protection it's like a process level protection as",
    "start": "997500",
    "end": "1004160"
  },
  {
    "text": "opposed to a language level thing so that's just just a challenge that you got to deal with",
    "start": "1004160",
    "end": "1009500"
  },
  {
    "text": "and sure enough bad things happen one example that I like is wide vine the",
    "start": "1009500",
    "end": "1015380"
  },
  {
    "start": "1010000",
    "end": "1010000"
  },
  {
    "text": "wide vine trusted application which is EA most Android devices as I said it's",
    "start": "1015380",
    "end": "1021080"
  },
  {
    "text": "the DRM media server for that it does decryption of year-end content and what",
    "start": "1021080",
    "end": "1027438"
  },
  {
    "text": "happened here was somebody decided to take a look at this trusted application and whenever you run one you got a call",
    "start": "1027439",
    "end": "1034220"
  },
  {
    "text": "a command on it basically so it's got command codes and say I'd like to you know decrypt this buffer here's a",
    "start": "1034220",
    "end": "1039470"
  },
  {
    "text": "pointer to the buffer and whatever and then I'll have a command code with a number he noticed there was all these",
    "start": "1039470",
    "end": "1044959"
  },
  {
    "text": "command codes that were not documented anywhere else and not used by anything on the system so that was interesting",
    "start": "1044959",
    "end": "1050540"
  },
  {
    "text": "and then turned out one of these was like a diagnostic command meant for debugging and testing and it had there's",
    "start": "1050540",
    "end": "1057140"
  },
  {
    "text": "just a good old fashioned buffer overflow in it and through that was able to get actual code execution in the",
    "start": "1057140",
    "end": "1063290"
  },
  {
    "text": "secure world so if you had access to why'd vine service you could you know call that particular command and you",
    "start": "1063290",
    "end": "1070500"
  },
  {
    "text": "would be able to actually you know do an overflow and execute code there's more info this these slides will be up right",
    "start": "1070500",
    "end": "1076409"
  },
  {
    "text": "after this but there's more info on that which it's pretty cool right up and a pretty neat vulnerability I think",
    "start": "1076409",
    "end": "1082490"
  },
  {
    "text": "another one which it turns out there's a lot of pictures online of people smashing Samsung phones if you do a",
    "start": "1082490",
    "end": "1088350"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "google image search but it wasn't a Samsung phone and it was a one-time password buffer overflow so they the",
    "start": "1088350",
    "end": "1095130"
  },
  {
    "text": "Samsung Knox security tools had this feature where you can generate one-time",
    "start": "1095130",
    "end": "1101400"
  },
  {
    "text": "passwords any user was able to access the service on Android so if you are any",
    "start": "1101400",
    "end": "1107400"
  },
  {
    "text": "user on Android and SELinux and everything allowed anybody to do it you",
    "start": "1107400",
    "end": "1112710"
  },
  {
    "text": "could ask it to generate a one-time password for you which doesn't sound that bad the problem was that whenever",
    "start": "1112710",
    "end": "1118530"
  },
  {
    "text": "you pass it some data to do this there was a buffer overflow and the parser for that so you know any user can",
    "start": "1118530",
    "end": "1124350"
  },
  {
    "text": "now do a buffer overflow inside of inside of the trusted world the example",
    "start": "1124350",
    "end": "1129419"
  },
  {
    "text": "of this was actually a Google project zero finding it you know they basically",
    "start": "1129419",
    "end": "1134610"
  },
  {
    "text": "got it to crash and they said yeah that there's a bug we need to fix it or Samsung needs to fix it but that that",
    "start": "1134610",
    "end": "1142169"
  },
  {
    "text": "was one that did that did come up I don't know if there's actually any exploit of it in the wild but at least",
    "start": "1142169",
    "end": "1148380"
  },
  {
    "text": "the bug was proven and it is real thing so that's some of the challenges and now we're going to like totally switch gears",
    "start": "1148380",
    "end": "1155039"
  },
  {
    "text": "into talking about a programming language the goal of this talk was sort of introduce you to the concept of",
    "start": "1155039",
    "end": "1160260"
  },
  {
    "text": "trusted execution environments and trust zone then just use rest a bit and then put it together so we're at sort of act",
    "start": "1160260",
    "end": "1167130"
  },
  {
    "text": "2 and maybe some people here have heard of rust maybe they have some interest in",
    "start": "1167130",
    "end": "1172320"
  },
  {
    "start": "1170000",
    "end": "1170000"
  },
  {
    "text": "it which is why they showed up here but really briefly it's a new systems programming language and when I say new",
    "start": "1172320",
    "end": "1178200"
  },
  {
    "text": "I mean new compared to other systems programming languages so it's a little",
    "start": "1178200",
    "end": "1184020"
  },
  {
    "text": "little newer than see it started development in 2010 it's sponsored by Mozilla Mozilla does you know a lot to",
    "start": "1184020",
    "end": "1190919"
  },
  {
    "text": "push the language forward and they're using it extensively in some new web web",
    "start": "1190919",
    "end": "1196080"
  },
  {
    "text": "rendering they have a new web rendering toolkit called servo that's written so yeah they're back in that horse the",
    "start": "1196080",
    "end": "1203100"
  },
  {
    "text": "cool thing for it is it works for embedded like some languages don't you",
    "start": "1203100",
    "end": "1208650"
  },
  {
    "text": "know if you've ever tried writing you know something like Python and you want to do it on an embedded system well there are interpreters like micro",
    "start": "1208650",
    "end": "1215220"
  },
  {
    "text": "Python that will allow you to do that but you can't actually write Python code that will you know run with no other",
    "start": "1215220",
    "end": "1222090"
  },
  {
    "text": "dependencies on an embedded system yet it just doesn't compile down so you also",
    "start": "1222090",
    "end": "1227850"
  },
  {
    "text": "have things like go which is a compiled language but it has runtime dependencies and things so you still need some kind",
    "start": "1227850",
    "end": "1233970"
  },
  {
    "text": "of basic operating system to make that thing go with rust you actually can use",
    "start": "1233970",
    "end": "1241140"
  },
  {
    "text": "no standard library and once you do that you don't need Lib C so you don't need an operating system it'll compile right",
    "start": "1241140",
    "end": "1247020"
  },
  {
    "text": "down to bytecode there's no default garbage collection or runtime that you",
    "start": "1247020",
    "end": "1252120"
  },
  {
    "text": "need to bundle with it so you can do real-time things and not have things like garbage collection",
    "start": "1252120",
    "end": "1257550"
  },
  {
    "text": "pauses and yeah that more useful for real-time systems but it's interesting and raw memory access which most",
    "start": "1257550",
    "end": "1265020"
  },
  {
    "text": "languages you can find a way to do it but it won't be exposed to you in a nice way embedded you know when you want to",
    "start": "1265020",
    "end": "1271050"
  },
  {
    "text": "set that bit in that register you need to actually be able to flip the bit and so you need raw memory access to do it",
    "start": "1271050",
    "end": "1276950"
  },
  {
    "text": "so why might we use rust for this sort of thing well there's a lot of safety",
    "start": "1276950",
    "end": "1283140"
  },
  {
    "start": "1278000",
    "end": "1278000"
  },
  {
    "text": "features that the rust was designed to to implement and the big ones are these compile time memory checks so it's",
    "start": "1283140",
    "end": "1289590"
  },
  {
    "text": "checking for memory safety at compile time there's a lot of ways that this is implemented and it would probably be an",
    "start": "1289590",
    "end": "1296700"
  },
  {
    "text": "entire there are entire talks about how this works but one way to think about it",
    "start": "1296700",
    "end": "1302070"
  },
  {
    "text": "is things like borrowing so the ownership of memory is tracked through the program and it has to be you know",
    "start": "1302070",
    "end": "1308280"
  },
  {
    "text": "released from certain places before it can be used it's almost like you have something like a mutex but this is",
    "start": "1308280",
    "end": "1314550"
  },
  {
    "text": "happening at compile time so you don't take performance hits on this and if you fail to write code that follows you know",
    "start": "1314550",
    "end": "1321090"
  },
  {
    "text": "the rust standard for borrowing and freeing memory in the right ways it just won't compile it'll give up and give you",
    "start": "1321090",
    "end": "1328230"
  },
  {
    "text": "errors and honestly when you first start working with the language it's the most frustrating thing ever as you're looking at it and you're like",
    "start": "1328230",
    "end": "1333660"
  },
  {
    "text": "that makes perfect sense to me why won't it compile and you get an error that's like you know this is not mutable or",
    "start": "1333660",
    "end": "1340200"
  },
  {
    "text": "this cannot be mutable or yeah and it's a little bit of a pain so the nice thing",
    "start": "1340200",
    "end": "1345600"
  },
  {
    "text": "is you do find bugs at compile time with that sort of thing you also have some other language",
    "start": "1345600",
    "end": "1351600"
  },
  {
    "text": "features that are sort of meant more for the safety type of things one great example is match so you're right see you",
    "start": "1351600",
    "end": "1358500"
  },
  {
    "text": "probably used a switch case statement works pretty well match is the rust version of that it's a pattern matching",
    "start": "1358500",
    "end": "1364440"
  },
  {
    "text": "thing but one interesting feature of it is like other functional other languages",
    "start": "1364440",
    "end": "1370020"
  },
  {
    "text": "with functional features whenever you have a match statement it needs to match",
    "start": "1370020",
    "end": "1375600"
  },
  {
    "text": "every possible case we'll actually look at an example of that later but that's the kind of thing that is a language",
    "start": "1375600",
    "end": "1380820"
  },
  {
    "text": "feature that prevents you from writing potentially you know sketchy code there's good tools for it and you know C",
    "start": "1380820",
    "end": "1387630"
  },
  {
    "text": "is old and doesn't really have a single toolset around it there's a million different things rust is new and has the",
    "start": "1387630",
    "end": "1394170"
  },
  {
    "text": "benefit of having them sort of the community and you're growing up in a different era so there's things like cargo which is a package manager there's",
    "start": "1394170",
    "end": "1401190"
  },
  {
    "text": "a standard formatter there's a ton of cross compilation tools which is what makes this stuff possible and it also has a great foreign function",
    "start": "1401190",
    "end": "1408060"
  },
  {
    "text": "interface to see and without that this wouldn't be possible you know we need to be able to do two things and that is",
    "start": "1408060",
    "end": "1414840"
  },
  {
    "text": "call C from rust and call rust from C and it's possible in a lot of languages but it can be more challenging in some",
    "start": "1414840",
    "end": "1420720"
  },
  {
    "start": "1415000",
    "end": "1415000"
  },
  {
    "text": "than others but it does introduce a problem and I will be perfectly honest",
    "start": "1420720",
    "end": "1426960"
  },
  {
    "text": "that using rust to write code for these systems is no silver bullet like nothing else is because at the end of the day",
    "start": "1426960",
    "end": "1433560"
  },
  {
    "text": "you still need to touch memory in ways that is not safe when we do this in rust",
    "start": "1433560",
    "end": "1438630"
  },
  {
    "text": "we will need to put that code in an unsafe block and there's a few things that we need that for the big ones this",
    "start": "1438630",
    "end": "1446550"
  },
  {
    "text": "is actually straight out of the rest book before but DRM forcing a raw pointer so whenever we actually want to",
    "start": "1446550",
    "end": "1452190"
  },
  {
    "text": "get access to raw memory we will need to be able to do that so yeah we need an",
    "start": "1452190",
    "end": "1457350"
  },
  {
    "text": "unsafe block calling an unsafe method or function well it turns out that C methods and well C functions are going",
    "start": "1457350",
    "end": "1464250"
  },
  {
    "text": "to be unsafe so we're gonna need it to call C and then accessing you're modifying a mutable",
    "start": "1464250",
    "end": "1469900"
  },
  {
    "text": "static variable that's like a global variable and rust matters less to us and implementing unsafe traits is a language",
    "start": "1469900",
    "end": "1476410"
  },
  {
    "text": "feature for actually doing like templates basically and you know might",
    "start": "1476410",
    "end": "1481990"
  },
  {
    "text": "matter to us as if we're trying to write bigger pieces of software but the big ones are accessing raw memory and",
    "start": "1481990",
    "end": "1487450"
  },
  {
    "text": "calling unsafe functions but our goal can be to limit this unsafe code we can kind of create very little places where",
    "start": "1487450",
    "end": "1493990"
  },
  {
    "text": "we can do a lot more you know a lot more eyes on it we can do the minimal amount",
    "start": "1493990",
    "end": "1499150"
  },
  {
    "text": "that we need to to call those functions and do those types of things again it's not perfect it's not gonna",
    "start": "1499150",
    "end": "1504670"
  },
  {
    "text": "solve all your problems but it does give you the ability to create separation between stuff that you know is dangerous",
    "start": "1504670",
    "end": "1511630"
  },
  {
    "text": "and stuff that you know can be protected at compile time if you want to learn",
    "start": "1511630",
    "end": "1516790"
  },
  {
    "start": "1515000",
    "end": "1515000"
  },
  {
    "text": "rust these are some resources that are pretty useful the rust book is the place to go it's online it's free it's nice",
    "start": "1516790",
    "end": "1522970"
  },
  {
    "text": "the second version is the one second edition is the one you want the paper version is coming soon from no starch",
    "start": "1522970",
    "end": "1529330"
  },
  {
    "text": "it'll have that cute guy on the cover rust by example very useful website you",
    "start": "1529330",
    "end": "1534400"
  },
  {
    "text": "can run code in your browser and it's yeah really nice to play around with it has basically every language feature",
    "start": "1534400",
    "end": "1540480"
  },
  {
    "text": "there's a page for it so when you're like I don't understand what the heck of trait is there's a page that like has a",
    "start": "1540480",
    "end": "1547270"
  },
  {
    "text": "bunch of examples of when you might use those there's also a woman by the name of Julia Evans who kind of her blog was",
    "start": "1547270",
    "end": "1554800"
  },
  {
    "text": "the reason I first got interested in this language she did this whole series on writing an OS in rust and doing",
    "start": "1554800",
    "end": "1561760"
  },
  {
    "text": "embedded stuff low-level stuff and I yeah I just think it's a really interesting series it's it's like a fun",
    "start": "1561760",
    "end": "1567610"
  },
  {
    "text": "you know it's not too it's not boring to read it's interesting it's got pretty hand-drawn graphics I'd highly recommend",
    "start": "1567610",
    "end": "1574179"
  },
  {
    "text": "if you're at all interested like take a look at her blog definitely worthwhile so that's just a little bit about rust",
    "start": "1574179",
    "end": "1579850"
  },
  {
    "text": "and why we first off why we can use it and then why we might want to use it and",
    "start": "1579850",
    "end": "1585090"
  },
  {
    "text": "now we're going to put the two things together and there's a few steps I'm",
    "start": "1585090",
    "end": "1590679"
  },
  {
    "text": "basically just gonna walk through how this ended up working and the first step is we need an OS that we're gonna run in",
    "start": "1590679",
    "end": "1595960"
  },
  {
    "start": "1592000",
    "end": "1592000"
  },
  {
    "text": "the secure world and there's a few different options out there like I said but at the end of the",
    "start": "1595960",
    "end": "1602140"
  },
  {
    "text": "day you're gonna be limited by the things that you can get for free or cheap and also the things that don't",
    "start": "1602140",
    "end": "1608409"
  },
  {
    "text": "require confidential documentation because you want to present in the conference it turns that Qualcomm won't",
    "start": "1608409",
    "end": "1614110"
  },
  {
    "text": "let you you know put up their reference manuals on the slides so opti it's it's",
    "start": "1614110",
    "end": "1619450"
  },
  {
    "text": "a free open source from the narrow project it it works for a bunch of",
    "start": "1619450",
    "end": "1624460"
  },
  {
    "text": "platforms and Deb boards you can just they have this whole build tool it is kind of magical it does a lot of stuff",
    "start": "1624460",
    "end": "1630580"
  },
  {
    "text": "they're build tool but you know if you want to run it on a Raspberry Pi 3 or a BeagleBone or something like that you can just you know basically say I want",
    "start": "1630580",
    "end": "1638200"
  },
  {
    "text": "the BeagleBone configuration build and it will just do it it also runs in qmu",
    "start": "1638200",
    "end": "1643539"
  },
  {
    "text": "which is nice because plugging a Raspberry Pi knew a projector is not a great idea it's well documented it",
    "start": "1643539",
    "end": "1650559"
  },
  {
    "text": "actually has public documentation which is saying a lot and it's got a website so the first step here was finding an OS",
    "start": "1650559",
    "end": "1658240"
  },
  {
    "text": "that would work this one seemed to make sense because it's free it's documented I can use it and show you so I was step",
    "start": "1658240",
    "end": "1665409"
  },
  {
    "text": "one step two is to generate rust",
    "start": "1665409",
    "end": "1671470"
  },
  {
    "start": "1666000",
    "end": "1666000"
  },
  {
    "text": "bindings this step terrified me the recent being that OS has a lot of",
    "start": "1671470",
    "end": "1677770"
  },
  {
    "text": "functions you can call and a lot of types and a lot of other stuff and I thought I was just gonna have to write",
    "start": "1677770",
    "end": "1683740"
  },
  {
    "text": "those all myself and I was very happy when I found this bind a gen rust tool",
    "start": "1683740",
    "end": "1690090"
  },
  {
    "text": "basically what it will do is it will take some header files for you know a C library is what it's designed to work",
    "start": "1690090",
    "end": "1697029"
  },
  {
    "text": "with take some header files you put them puts puts them in and it does some you know kind of magic I mean",
    "start": "1697029",
    "end": "1705100"
  },
  {
    "text": "you can understand how it works but it's it's it's nice and it will turn that see",
    "start": "1705100",
    "end": "1710350"
  },
  {
    "text": "those see declarations into rust declarations and this is an example of one going from C on the top to rust on",
    "start": "1710350",
    "end": "1716169"
  },
  {
    "text": "the bottom so in C you know you got the typical syntax return type function name",
    "start": "1716169",
    "end": "1721330"
  },
  {
    "text": "some parameters there with types then semicolon it's a function prototype",
    "start": "1721330",
    "end": "1728549"
  },
  {
    "text": "whenever we swap over to the rust the first thing you'll notice is the X",
    "start": "1728549",
    "end": "1734140"
  },
  {
    "text": "turn it and that's telling us that it is in fact a Z function and then there's some syntax differences here it's a",
    "start": "1734140",
    "end": "1741490"
  },
  {
    "text": "public function that's the pub so there is you know kind of like Java there's levels of protection of those things FN",
    "start": "1741490",
    "end": "1749200"
  },
  {
    "text": "is our function keyword then we got the name of it then kind of like oh you got",
    "start": "1749200",
    "end": "1755410"
  },
  {
    "text": "the swapped order of types and the names of the parameters which is always a",
    "start": "1755410",
    "end": "1760840"
  },
  {
    "text": "frustrating thing when you're going from C because you never get that the right way around but you get used to it so",
    "start": "1760840",
    "end": "1766180"
  },
  {
    "text": "it's the name followed colon and then the type and all of these types are",
    "start": "1766180",
    "end": "1771280"
  },
  {
    "text": "actually now rust types because every single type that was defined has also been implemented and this deals with",
    "start": "1771280",
    "end": "1777550"
  },
  {
    "text": "structs it deals with unions it deals with pound deaths it's yeah it saves you",
    "start": "1777550",
    "end": "1783310"
  },
  {
    "text": "I don't even know how much work so whoever wrote this tool I am very thankful it exists but what we end up",
    "start": "1783310",
    "end": "1788950"
  },
  {
    "text": "with is this binding this file which will let us basically have an interface to all of those C functions that we want",
    "start": "1788950",
    "end": "1796960"
  },
  {
    "text": "to call for example if we want to initialize a message dedication code",
    "start": "1796960",
    "end": "1802120"
  },
  {
    "text": "here we can do that in rest now and then step three is you got to write some code",
    "start": "1802120",
    "end": "1807780"
  },
  {
    "start": "1806000",
    "end": "1806000"
  },
  {
    "text": "that's pretty straight straightforward right we're gonna we're gonna want to actually write our application but we're",
    "start": "1807780",
    "end": "1814120"
  },
  {
    "text": "gonna write it as a library not as an application and that sounds kind of wrong but it turns out these operating",
    "start": "1814120",
    "end": "1821410"
  },
  {
    "text": "systems they load your trusted application and then they have specific symbol names they're going to call at",
    "start": "1821410",
    "end": "1826900"
  },
  {
    "text": "specific times and you implement those there's five of them for this one and it",
    "start": "1826900",
    "end": "1832390"
  },
  {
    "text": "will call those and that's how you you know interact with the POS so the way to do this is you compile a library and",
    "start": "1832390",
    "end": "1838870"
  },
  {
    "text": "then you link the whole thing together and the symbols need the right names and then it will actually be able to call",
    "start": "1838870",
    "end": "1844510"
  },
  {
    "text": "them so there's five functions that you're required to implement there's a create entry point which is when you first",
    "start": "1844510",
    "end": "1851770"
  },
  {
    "text": "invoke this trust application that's going to start there's the destroy entry point that's going to be when you're",
    "start": "1851770",
    "end": "1857110"
  },
  {
    "text": "done it's gonna clean up then there's an open session entry point so the application can keep running and have",
    "start": "1857110",
    "end": "1863200"
  },
  {
    "text": "multiple sessions on every one of those that's going to call this open session entry point and then when it's done the session it will",
    "start": "1863200",
    "end": "1869220"
  },
  {
    "text": "close session entry point and there's the one that we actually kind of care about for this example which is the",
    "start": "1869220",
    "end": "1875010"
  },
  {
    "text": "invoke command entry point and this is whenever I'm in that normal world and I'm saying okay I would like I would",
    "start": "1875010",
    "end": "1881220"
  },
  {
    "text": "like the trusted world to do something here's a command code and here's some parameters this is the function that's",
    "start": "1881220",
    "end": "1887040"
  },
  {
    "text": "going to get called so it's sort of the it's the one that actually does stuff and as an example and this is sort of a",
    "start": "1887040",
    "end": "1895140"
  },
  {
    "text": "proof of concept I wanted to just implement the up T hello world which is",
    "start": "1895140",
    "end": "1900840"
  },
  {
    "text": "a really simple example you give a number to the trusted application it goes over to the secure world it",
    "start": "1900840",
    "end": "1907080"
  },
  {
    "text": "increments the number by one and gives it back to you pretty easy there's another command ID sorry that's the zero",
    "start": "1907080",
    "end": "1913200"
  },
  {
    "text": "command ID the command ID one same thing decrements the number so this is what",
    "start": "1913200",
    "end": "1918630"
  },
  {
    "text": "that function ends up looking like and conveniently it's nice enough to fit on one slide so what we have there is this",
    "start": "1918630",
    "end": "1924450"
  },
  {
    "text": "invoke command entry point it's a public function it needs to be so it can be called from C and then this definition",
    "start": "1924450",
    "end": "1931770"
  },
  {
    "text": "is taken straight from op tees documentation it's gonna take these parameters there's a session context",
    "start": "1931770",
    "end": "1937500"
  },
  {
    "text": "gets passed it gets a command ID a / am types and some params you'll notice that",
    "start": "1937500",
    "end": "1942780"
  },
  {
    "text": "there's some unused variables here those are led with underscores otherwise rust will get mad at us for not using those",
    "start": "1942780",
    "end": "1948380"
  },
  {
    "text": "if you've written C and ended up writing macros that are called unused or maybe",
    "start": "1948380",
    "end": "1954210"
  },
  {
    "text": "unused and then had to do macro magic to make that work this is way nicer then",
    "start": "1954210",
    "end": "1961110"
  },
  {
    "text": "the syntax for this we we have a return type of the key results that's the",
    "start": "1961110",
    "end": "1966720"
  },
  {
    "text": "little arrow thing and then this is really all it does it's gonna print that you know rusty a invoke command entry",
    "start": "1966720",
    "end": "1973590"
  },
  {
    "text": "point to say hey we're in the command entry point then we're gonna do a match and this I mentioned earlier as sort of",
    "start": "1973590",
    "end": "1979950"
  },
  {
    "text": "language feature there's no switch case there's match and it's actually way more powerful than a switch case because it",
    "start": "1979950",
    "end": "1987240"
  },
  {
    "text": "can do pattern matching and it can do partial matches and all sorts of nice functional things but we're gonna use it",
    "start": "1987240",
    "end": "1993690"
  },
  {
    "text": "in in kind of a dumb mode and just match number so for each number we care about zero and",
    "start": "1993690",
    "end": "2000290"
  },
  {
    "text": "one there's that arrow operator and then we give it a block of code that's gonna run in this case we need to go unsafe",
    "start": "2000290",
    "end": "2007010"
  },
  {
    "text": "because we're gonna modify a pointer and then we take that per am the value the",
    "start": "2007010",
    "end": "2012260"
  },
  {
    "text": "params the dot value and the dot a is actually because of how that struct is",
    "start": "2012260",
    "end": "2017540"
  },
  {
    "text": "set up in opti the as mute lets us mutate it makes for us to give it to us",
    "start": "2017540",
    "end": "2023960"
  },
  {
    "text": "in a mutable way and that's where we need unsafe so we're gonna take that value we're gonna get it as mutable and",
    "start": "2023960",
    "end": "2030020"
  },
  {
    "text": "we're going to increment it by 1 and then we're gonna print that we increment increment to the value a few little",
    "start": "2030020",
    "end": "2035210"
  },
  {
    "text": "things to note here one you'll see this ta print that is named macro in rust the reason you know it's a macro is it's got",
    "start": "2035210",
    "end": "2041150"
  },
  {
    "text": "an exclamation point that means that it's dealt with by the preprocessor this is a nice language feature of rust",
    "start": "2041150",
    "end": "2047809"
  },
  {
    "text": "it's got quite a powerful preprocessor that if you've written C macros and spent a lot of time doing that you might",
    "start": "2047809",
    "end": "2054440"
  },
  {
    "text": "appreciate I would recommend checking it out and what that also lets us do is on",
    "start": "2054440",
    "end": "2060080"
  },
  {
    "text": "these sort of lower power embedded systems we can write code that does some",
    "start": "2060080",
    "end": "2065240"
  },
  {
    "text": "simple things but it can happen at compile time and you know there's stuff that you just don't think about when",
    "start": "2065240",
    "end": "2070460"
  },
  {
    "text": "you're not doing embedded code like I want to append something to a buffer and it turns out that that's more",
    "start": "2070460",
    "end": "2076040"
  },
  {
    "text": "complicated than that can't be more complicated than you thought when you're doing it at runtime there's nice ways of",
    "start": "2076040",
    "end": "2083030"
  },
  {
    "text": "doing that with a macro at compile time which just saves you headaches and the last thing here is the underscore match",
    "start": "2083030",
    "end": "2089510"
  },
  {
    "text": "and that is the catch shell that is the switch-case default and again if I",
    "start": "2089510",
    "end": "2094638"
  },
  {
    "text": "omitted that if I just had 0 & 1 this would not compile it would say something to the effect of match",
    "start": "2094639",
    "end": "2100130"
  },
  {
    "text": "statement does not match all cases or something like that you you need to match every case and that is frustrating",
    "start": "2100130",
    "end": "2107240"
  },
  {
    "text": "until you realize that it's a good idea and of course we should return an error code and opti defines error codes bind",
    "start": "2107240",
    "end": "2114050"
  },
  {
    "text": "gen generated all those for us so hey we got a name for a semantic name for it which is nice and we can just return it",
    "start": "2114050",
    "end": "2120380"
  },
  {
    "text": "otherwise we're gonna return success and it's done really simple example this",
    "start": "2120380",
    "end": "2126470"
  },
  {
    "text": "didn't take me that long this part took me a long time this is actually getting the rust code and the",
    "start": "2126470",
    "end": "2132749"
  },
  {
    "start": "2128000",
    "end": "2128000"
  },
  {
    "text": "opti libraries and everything into a executable that will actually be able to load and run in the secure world on a",
    "start": "2132749",
    "end": "2140519"
  },
  {
    "text": "real arm system and it's it's not that bad but it did I had some caveats but",
    "start": "2140519",
    "end": "2146989"
  },
  {
    "text": "basically what we need has the inputs are three things and this actually",
    "start": "2146989",
    "end": "2152130"
  },
  {
    "text": "started off as source but we let's say we compiled them already so we built our life or rust library and we have those",
    "start": "2152130",
    "end": "2158190"
  },
  {
    "text": "five special functions that we remember from before that are going to be invoked so that's built that's compiled it's",
    "start": "2158190",
    "end": "2164670"
  },
  {
    "text": "like a dot a you know then we have to compile a TA header as a trusted",
    "start": "2164670",
    "end": "2170400"
  },
  {
    "text": "application header this is an OP T thing they have a special header format you",
    "start": "2170400",
    "end": "2175410"
  },
  {
    "text": "need a symbol with a special name that adds like a UUID for it and a few other things if you don't have that it just",
    "start": "2175410",
    "end": "2181559"
  },
  {
    "text": "won't work then we have some libraries that are provided by the operating system this is Lib UT Live MPA and Lib",
    "start": "2181559",
    "end": "2187829"
  },
  {
    "text": "util we're gonna want to call the functions inside of there to do things like well even print to the screen but",
    "start": "2187829",
    "end": "2194279"
  },
  {
    "text": "also to do crypto and things like that so we want to include those libraries and then we have a linker script which",
    "start": "2194279",
    "end": "2200789"
  },
  {
    "text": "if you've ever wrestled with linker scripts can be not fun to deal with but we have a linker script that fortunately",
    "start": "2200789",
    "end": "2207359"
  },
  {
    "text": "comes from the project and with minimal modification works and we take all that stuff and we give it to our linker our",
    "start": "2207359",
    "end": "2214259"
  },
  {
    "text": "linker is then gonna kick out a elf for our trusted application that won't work yet because we need to sign it one of",
    "start": "2214259",
    "end": "2220890"
  },
  {
    "text": "the features of the operating system is it will only run sign code so fortunately they provide a script you",
    "start": "2220890",
    "end": "2226229"
  },
  {
    "text": "give it a script elf it takes that in you show it where your private key is and it will generate a signature pop",
    "start": "2226229",
    "end": "2232710"
  },
  {
    "text": "that on the top in yet another header and then that is finally your signed trusted application and that will run",
    "start": "2232710",
    "end": "2240119"
  },
  {
    "text": "and the first time I got this whole process to work I was very happy but yeah it was just a lot of steps to all",
    "start": "2240119",
    "end": "2246779"
  },
  {
    "text": "work and just to show it working because that's what you hope to do this is going",
    "start": "2246779",
    "end": "2254069"
  },
  {
    "text": "to look terrible because of the resolution and sorry about that but we'll kill it so",
    "start": "2254069",
    "end": "2261330"
  },
  {
    "text": "what we can do here is where we're in a VM we're in Linux because none the stuff",
    "start": "2261330",
    "end": "2267180"
  },
  {
    "text": "works on OSX we're gonna start up qemu and we are going to separate out these",
    "start": "2267180",
    "end": "2274830"
  },
  {
    "text": "two windows two things here we got the normal world window this is gonna look like Linux because it is and we have",
    "start": "2274830",
    "end": "2281520"
  },
  {
    "text": "this gear world window this is just it's not gonna look like anything in particular so first we have to make QM",
    "start": "2281520",
    "end": "2287040"
  },
  {
    "text": "you go should have done the trick and you know we got linux putin over",
    "start": "2287040",
    "end": "2292200"
  },
  {
    "text": "here and we got the secure world just sitting there the secure world normally",
    "start": "2292200",
    "end": "2297300"
  },
  {
    "text": "would actually print out on something like maybe a UART serial device during",
    "start": "2297300",
    "end": "2302490"
  },
  {
    "text": "debugging but usually you're not going to leave that enabled for production for",
    "start": "2302490",
    "end": "2307530"
  },
  {
    "text": "you know obvious reasons you don't wanna give people extra insight into the system but in this case conveniently we",
    "start": "2307530",
    "end": "2313380"
  },
  {
    "text": "can redirect that serial output into a window which is quite nice we need to log in as root with no password of",
    "start": "2313380",
    "end": "2319740"
  },
  {
    "text": "course and when we run the normal world client application which is actually the",
    "start": "2319740",
    "end": "2326640"
  },
  {
    "text": "opti hello world example we just run hello world and what it says there I",
    "start": "2326640",
    "end": "2332790"
  },
  {
    "text": "apologize it says increment or invoking ta to increment 42 ta committed to value",
    "start": "2332790",
    "end": "2340740"
  },
  {
    "text": "43 and then over in the trusted or secure world we can actually see all the",
    "start": "2340740",
    "end": "2346980"
  },
  {
    "text": "output messages from our application sort of around here we have rusty a one",
    "start": "2346980",
    "end": "2354570"
  },
  {
    "text": "of the entry points and then it prints incremented value and then it cleans up and it's done so simple example again",
    "start": "2354570",
    "end": "2361140"
  },
  {
    "text": "total proof of concept of hey can I get this whole thing to build run and link and actually work in trust out and that",
    "start": "2361140",
    "end": "2370770"
  },
  {
    "text": "brings me to a few sort of conclusions on this you know trust execution",
    "start": "2370770",
    "end": "2377010"
  },
  {
    "start": "2375000",
    "end": "2375000"
  },
  {
    "text": "environments are very interesting there are a useful feature for lots of stuff but like anything else they're not a",
    "start": "2377010",
    "end": "2383940"
  },
  {
    "text": "silver bullet you can still have all the same problems they also have some specific challenges because",
    "start": "2383940",
    "end": "2389040"
  },
  {
    "text": "is typically the code you're running in there is going to be very limited say protections might not be turned on and",
    "start": "2389040",
    "end": "2394890"
  },
  {
    "text": "we've seen a college showed a couple examples of one that actually was the case rust is a very interesting",
    "start": "2394890",
    "end": "2402350"
  },
  {
    "text": "potential replacement I'd say for see in a lot of applications and the reason is",
    "start": "2402350",
    "end": "2407940"
  },
  {
    "text": "there's not many other languages that you can actually do this in without having to build a runtime and you know",
    "start": "2407940",
    "end": "2414090"
  },
  {
    "text": "or put an interpreter in there or whatever it is but there's not many languages that you can actually compile",
    "start": "2414090",
    "end": "2419850"
  },
  {
    "text": "straight down with no Lib C nothing and actually make work and it has some cool",
    "start": "2419850",
    "end": "2425670"
  },
  {
    "text": "added benefits so yeah there's this memory safety stuff that everyone's talking about but there's also just nice language",
    "start": "2425670",
    "end": "2432780"
  },
  {
    "text": "features you get a better preprocessor you get pattern matching you get package management all this all these features",
    "start": "2432780",
    "end": "2439170"
  },
  {
    "text": "are actually quite useful even if the security part wasn't there but you know",
    "start": "2439170",
    "end": "2444300"
  },
  {
    "text": "you kind of get the whole thing but really I'm kind of ending this with a question because kind of the fun of",
    "start": "2444300",
    "end": "2450480"
  },
  {
    "text": "doing these presentations and like playing around at these ideas for me at least is you know you come up with",
    "start": "2450480",
    "end": "2456150"
  },
  {
    "text": "something and you try it you make it work and then you get to see what other people think and you know talk to other",
    "start": "2456150",
    "end": "2461640"
  },
  {
    "text": "people about it and so really I'm ending off with like should you do this I don't know I think that there's some",
    "start": "2461640",
    "end": "2467820"
  },
  {
    "text": "interesting benefits of doing it I've shown that I guess it's at least in a you know proof of concept is possible to",
    "start": "2467820",
    "end": "2473640"
  },
  {
    "text": "do there's probably some challenges there's probably some difficulties but I think it's at least something that's interesting to discuss just given the",
    "start": "2473640",
    "end": "2481230"
  },
  {
    "text": "amount of problems that we've seen in embedded devices and things like this where we have restricted execution",
    "start": "2481230",
    "end": "2486330"
  },
  {
    "text": "environments and that whole thing so I think it's an interesting topic it's only going to continue being a problem",
    "start": "2486330",
    "end": "2492600"
  },
  {
    "text": "as more and more IOT devices come online and things like that so I think it's something worth discussing anyway that",
    "start": "2492600",
    "end": "2498990"
  },
  {
    "text": "brings me to the end of my my slides here and my presentation I think we have about 10 minutes 15 ish minutes left so",
    "start": "2498990",
    "end": "2509100"
  },
  {
    "text": "I'm happy to take questions either in a public forum or just hang out here and talk to you after but thanks a lot for",
    "start": "2509100",
    "end": "2515760"
  },
  {
    "text": "the - the black hat folks for having back this year to talk about something other than cars and things tell you for",
    "start": "2515760",
    "end": "2521490"
  },
  {
    "text": "coming out and you know listen through this hopefully it was of some interest in used to you thanks any questions well",
    "start": "2521490",
    "end": "2538070"
  },
  {
    "text": "I've always found that oh gosh I haven't",
    "start": "2538070",
    "end": "2549740"
  },
  {
    "text": "again this is my first sort of publicly talking about this whole this whole project anyone so but I'd be interested",
    "start": "2549740",
    "end": "2557100"
  },
  {
    "text": "I meant maybe their answers no that's a stupid idea but I'd love to hear why and I'd love to have that debate and yeah I",
    "start": "2557100",
    "end": "2566250"
  },
  {
    "text": "think that again it I think it's something worth discussing but I'd haven't I haven't talked to any of those folks unfortunately if any of them",
    "start": "2566250",
    "end": "2573060"
  },
  {
    "text": "happen to be here I'd love to talk to him yep",
    "start": "2573060",
    "end": "2579350"
  },
  {
    "text": "okay the question was how do you do secure storage you know in this trusted",
    "start": "2606670",
    "end": "2611930"
  },
  {
    "text": "execution environment because yeah we can protect the execution but the other",
    "start": "2611930",
    "end": "2617060"
  },
  {
    "text": "day if I'm going to write to the disk everyone can see it and so the way that that's typically done is there's and",
    "start": "2617060",
    "end": "2624320"
  },
  {
    "text": "this is again where you get into the chipset specific you know an XP is different than you Qualcomm no one will",
    "start": "2624320",
    "end": "2629660"
  },
  {
    "text": "tell you how it works but there's features that either have a special key",
    "start": "2629660",
    "end": "2635119"
  },
  {
    "text": "that you can read so it's like a encryption key it's unique to that specific chip and I mean like that one",
    "start": "2635119",
    "end": "2642260"
  },
  {
    "text": "chip it's randomly generated when the thing is fabbed and so either you can",
    "start": "2642260",
    "end": "2647570"
  },
  {
    "text": "get a key from that or they have a security controller that's capable of doing encryption decryption operations",
    "start": "2647570",
    "end": "2653210"
  },
  {
    "text": "using a key that can never be read out of the device it's also randomly generated for that specific device and",
    "start": "2653210",
    "end": "2659080"
  },
  {
    "text": "so up to you actually has a whole implementation where first off actually",
    "start": "2659080",
    "end": "2665060"
  },
  {
    "text": "before I even get into there you have to set up the processor so that whatever that key material is or that Oracle is",
    "start": "2665060",
    "end": "2671750"
  },
  {
    "text": "it's only accessible from the secure world so that's the first thing you need to do otherwise you know anyone can",
    "start": "2671750",
    "end": "2676970"
  },
  {
    "text": "decrypt once you do that you can actually set up the operating system to",
    "start": "2676970",
    "end": "2682070"
  },
  {
    "text": "do storage where it uses that key and they actually kind of do it in a smart",
    "start": "2682070",
    "end": "2687470"
  },
  {
    "text": "way so it'll take that key plus some other stuff plus the UUID of the application and generate a per",
    "start": "2687470",
    "end": "2693680"
  },
  {
    "text": "application key so that theoretically you can't read other applications files and once it has all that it will",
    "start": "2693680",
    "end": "2700310"
  },
  {
    "text": "actually just write it there's a few ways to do it but the default is it just writes into the Linux file system somewhere and yeah the files there you",
    "start": "2700310",
    "end": "2707210"
  },
  {
    "text": "can read it but it should be theoretically impossible for you to get",
    "start": "2707210",
    "end": "2712220"
  },
  {
    "text": "the key to decrypt it now it's not in a lot of cases because if you can control the device and you can boot the thing up",
    "start": "2712220",
    "end": "2718400"
  },
  {
    "text": "in the you know in a controlled way you can probably get access to those keys but the benefit there is that there's a",
    "start": "2718400",
    "end": "2725330"
  },
  {
    "text": "different encryption key on every single one of them so unless you're holding the device in your hands it's pretty hard to compromise but the whole thing so that's",
    "start": "2725330",
    "end": "2731690"
  },
  {
    "text": "typically how it's done that's at least how opti does it there's also",
    "start": "2731690",
    "end": "2737089"
  },
  {
    "text": "a similar similar setup in juice the qualcomm QC operating system where it it",
    "start": "2737089",
    "end": "2744410"
  },
  {
    "text": "just writes to some different places but it's a similar idea it's using this per device hardware key to generate that",
    "start": "2744410",
    "end": "2751250"
  },
  {
    "text": "commute all",
    "start": "2751250",
    "end": "2753790"
  },
  {
    "text": "yeah so by default there's actually a lovely wiki page in the opti project",
    "start": "2761660",
    "end": "2767070"
  },
  {
    "text": "where it like it's like warning this secure storage does not work by default",
    "start": "2767070",
    "end": "2772820"
  },
  {
    "text": "which is a nice warning for them to give you but yeah it says you know you need",
    "start": "2772820",
    "end": "2777960"
  },
  {
    "text": "to implement this function to do the encryption decryption and we can't",
    "start": "2777960",
    "end": "2783000"
  },
  {
    "text": "implement that for you because the information on how to do it is under NDA so we can't you know open source that",
    "start": "2783000",
    "end": "2789390"
  },
  {
    "text": "implementation there may out there be some open source projects that may have",
    "start": "2789390",
    "end": "2795210"
  },
  {
    "text": "some implementations of certain ones but you really gotta hunt for them and yeah",
    "start": "2795210",
    "end": "2801210"
  },
  {
    "text": "it's still yeah it's a little sketchy but yeah so unfortunately by default the",
    "start": "2801210",
    "end": "2807180"
  },
  {
    "text": "file secure storage stuff s FS and the RPM B storage are not actually secure",
    "start": "2807180",
    "end": "2814590"
  },
  {
    "text": "but if you implement the stuff according to the application guide you you know can have that relationship with your",
    "start": "2814590",
    "end": "2820710"
  },
  {
    "text": "chip manufacturer to get the right information you should be able to put a very solid system together cool all",
    "start": "2820710",
    "end": "2833250"
  },
  {
    "text": "right I don't see any more questions but I will stick around if you want to ask me anything personally but yeah thanks",
    "start": "2833250",
    "end": "2838470"
  },
  {
    "text": "again for coming out and hope that was useful",
    "start": "2838470",
    "end": "2842600"
  }
]