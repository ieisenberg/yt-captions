[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "my name is Mike Shima I'm here with my colleague V and uh we'll talk a little",
    "start": "80",
    "end": "5520"
  },
  {
    "text": "bit about csrf today something that many of us probably already know about this poor confused session writing deputy and",
    "start": "5520",
    "end": "12559"
  },
  {
    "text": "we'll talk a little bit about what the sort of state-ofthe-art is around current countermeasures and then talk about some what we think are better ways",
    "start": "12559",
    "end": "19840"
  },
  {
    "text": "of detecting this from a manual perspective I'd ver find that tokens actually work as they're supposed to be",
    "start": "19840",
    "end": "25920"
  },
  {
    "text": "and then we'll actually come up with a proposal that we think can be much simpler and much more effective than",
    "start": "25920",
    "end": "31759"
  },
  {
    "text": "tokens and explain why those tokens are can be bad in the first place but this is where I break out my",
    "start": "31759",
    "end": "38200"
  },
  {
    "start": "36000",
    "end": "84000"
  },
  {
    "text": "uh my old school syon impersonation you know bio command where the web browsers",
    "start": "38200",
    "end": "43960"
  },
  {
    "text": "are basically doing things behind the scenes in the way that the web is actually designed to work you know the",
    "start": "43960",
    "end": "50199"
  },
  {
    "text": "idea that uh same origin policy only prevents read access to the responses",
    "start": "50199",
    "end": "56440"
  },
  {
    "text": "from a cross origin request but any resource can make a cross origin request",
    "start": "56440",
    "end": "61719"
  },
  {
    "text": "all the time so if you know if you're thinking of Jimmy Hendrick and the watch All Along the Watchtower you know the",
    "start": "61719",
    "end": "67119"
  },
  {
    "text": "Joker and the thief always have some kind of way out of here out of the same origin policy the point with csrf is",
    "start": "67119",
    "end": "74119"
  },
  {
    "text": "they're trying to find this way out and actually muck about with their victim session session context or security",
    "start": "74119",
    "end": "80320"
  },
  {
    "text": "context how they relate to that particular web application",
    "start": "80320",
    "end": "86079"
  },
  {
    "start": "84000",
    "end": "131000"
  },
  {
    "text": "so our theme for today and what we're trying to do in terms of coming up with",
    "start": "86079",
    "end": "91159"
  },
  {
    "text": "uh better analysis and better better uh protection against csrf was we really want to figure out what's the difference",
    "start": "91159",
    "end": "97439"
  },
  {
    "text": "between a user intended action in other words something that you and I wanted to do and something that's just going on",
    "start": "97439",
    "end": "103479"
  },
  {
    "text": "behind the scenes within the web browser where that user agent is actually working as a double agent against us",
    "start": "103479",
    "end": "109560"
  },
  {
    "text": "making requests on the the attacker's behalf and again we want to make sure we come up with a solution that doesn't",
    "start": "109560",
    "end": "115880"
  },
  {
    "text": "break the web as it works today the whole point of the of of HTML is that you can aggregate all this content AC",
    "start": "115880",
    "end": "122640"
  },
  {
    "text": "cross origin so there's no point in trying to unilaterally say cross origin",
    "start": "122640",
    "end": "127759"
  },
  {
    "text": "uh content is bad so there's two major parts of that",
    "start": "127759",
    "end": "134560"
  },
  {
    "text": "that F in csrf this stands for not what you're thinking but forgery and has two",
    "start": "134560",
    "end": "139840"
  },
  {
    "text": "senses the idea of Creation in other words being able to generate that cross origin request in the first place and",
    "start": "139840",
    "end": "146319"
  },
  {
    "text": "then counterfeiting so creation can be actually affected by a few things like cross origin resource sharing that",
    "start": "146319",
    "end": "153080"
  },
  {
    "text": "actually makes HTML 5 browsers a lot more flexible and web apps a lot more powerful and as we'll show it has some",
    "start": "153080",
    "end": "160000"
  },
  {
    "text": "very positive implications for uh for csrf then there's the idea of counterfeiting which is basically where",
    "start": "160000",
    "end": "167200"
  },
  {
    "text": "csrf tokens come from the idea that we're going to add a non something that's unpredictable something that has",
    "start": "167200",
    "end": "172480"
  },
  {
    "text": "a good random number in it that the attacker can't predict and include in this request but also too um with",
    "start": "172480",
    "end": "179920"
  },
  {
    "text": "counterfeiting we have available to us things like refer headers and the newer origin headers that we we can and should",
    "start": "179920",
    "end": "185959"
  },
  {
    "text": "be checking that can help raise the bar in counter in terms of countermeasures but basically all these",
    "start": "185959",
    "end": "193640"
  },
  {
    "start": "190000",
    "end": "246000"
  },
  {
    "text": "current countermeasures the csrf nonis tokens you know random random number",
    "start": "193640",
    "end": "198680"
  },
  {
    "text": "generators seated by the current date or process IDs what they're really trying to do is just at making it harder to",
    "start": "198680",
    "end": "206239"
  },
  {
    "text": "predict harder to counterfeit this particular request but part of the problem and part of the problem is",
    "start": "206239",
    "end": "212599"
  },
  {
    "text": "they're just making the guessing more difficult rather than having the web application make a separation a good",
    "start": "212599",
    "end": "219080"
  },
  {
    "text": "distinction between what is an authentication in other words who you are and authorization what you should be",
    "start": "219080",
    "end": "224760"
  },
  {
    "text": "allowed to be doing within the context of this particular session and that's where they're trying to tie that your",
    "start": "224760",
    "end": "230920"
  },
  {
    "text": "session your authenticated current interaction with the website along to",
    "start": "230920",
    "end": "236200"
  },
  {
    "text": "that particular cookie and so that's why they do things like double submitting the cookie so that if you can if you can predict the cook in the first place you",
    "start": "236200",
    "end": "242599"
  },
  {
    "text": "can just impersonate the user right off the bat doesn't matter so with the idea of Secrets and",
    "start": "242599",
    "end": "248720"
  },
  {
    "text": "entropy the these show up in all types of situations including cryptography authentication password hashing things",
    "start": "248720",
    "end": "255920"
  },
  {
    "text": "like that and the big deal is not really what type of hash function you're choosing whether it's md5 or it's hmac",
    "start": "255920",
    "end": "262639"
  },
  {
    "text": "md5 or it's hmx Shaw 256 or Shaw 512 what really boils down to is if you're",
    "start": "262639",
    "end": "269000"
  },
  {
    "start": "268000",
    "end": "316000"
  },
  {
    "text": "using an H Mac you should be using a strong secret I went out and did a very simple survey of um how many websites",
    "start": "269000",
    "end": "276639"
  },
  {
    "text": "that I could easily find using nodejs uh express. connect as their session uh session management and it relies on an",
    "start": "276639",
    "end": "283560"
  },
  {
    "text": "hmac uh sha 256 by default and by default the secret for it is Keyboard",
    "start": "283560",
    "end": "289080"
  },
  {
    "text": "Cat and there were you know I found about 6,000 instances of websites using this cookie and 400 of them at least",
    "start": "289080",
    "end": "297520"
  },
  {
    "text": "fell prey to either that default secret of keyboard cat or they had a nice very",
    "start": "297520",
    "end": "302680"
  },
  {
    "text": "easy dictionary word that was for their secret number like one 1 2 3 and at least there were some token fans in",
    "start": "302680",
    "end": "307919"
  },
  {
    "text": "there but the point remains that if you're going to use an hmac and you're not using a secret then you're kind of",
    "start": "307919",
    "end": "313639"
  },
  {
    "text": "failing in the first place anyway then of course there's the idea of Secrets being stuffed into GitHub so",
    "start": "313639",
    "end": "321759"
  },
  {
    "start": "316000",
    "end": "375000"
  },
  {
    "text": "uh if you look back to December and January there were some announcements demonstrating how uh people were",
    "start": "321759",
    "end": "327600"
  },
  {
    "text": "checking in their um SSL or their SSH private Keys as well as they were checking in uh their Ruby on Rails uh",
    "start": "327600",
    "end": "335000"
  },
  {
    "text": "secrets for hmax but you can spend an afternoon you can spend an afternoon and an evening actually just searching",
    "start": "335000",
    "end": "341280"
  },
  {
    "text": "through GitHub looking for all the secrets associated with things like ooff consumer secret or your session secret",
    "start": "341280",
    "end": "348039"
  },
  {
    "text": "mongod DB uh admin URLs SSH connection URLs with the passwords in them um as",
    "start": "348039",
    "end": "354600"
  },
  {
    "text": "well as all those secrets for those aforementioned H Max 256 Shaw 512 and so",
    "start": "354600",
    "end": "359919"
  },
  {
    "text": "on and so it's the idea that if we're going to try and and recommend nonis as",
    "start": "359919",
    "end": "365080"
  },
  {
    "text": "a valid protection we also have to make sure we're not setting up developers to make mistakes or shoot themselves in the",
    "start": "365080",
    "end": "371039"
  },
  {
    "text": "foot and accidentally start checking all these secrets into things like git then of course there are things like",
    "start": "371039",
    "end": "378520"
  },
  {
    "start": "375000",
    "end": "530000"
  },
  {
    "text": "random number generators um they're always being seated by simple things like uh the current date or the process",
    "start": "378520",
    "end": "385440"
  },
  {
    "text": "ID uh last year at black hat there was a good presentation called Pony random number generators that was specific to",
    "start": "385440",
    "end": "391039"
  },
  {
    "text": "PHP and essentially it points out that if you were use something as specific as a mod unique ID and any other random ID",
    "start": "391039",
    "end": "398720"
  },
  {
    "text": "within PHP um you're setting yourself up for failure because mod unique ID actually exposes the current process ID",
    "start": "398720",
    "end": "406919"
  },
  {
    "text": "and a timestamp so it creates a unique ID but doesn't create a very secret one and if you're relying on a process ID or",
    "start": "406919",
    "end": "413759"
  },
  {
    "text": "a timestamp for your session for your um uh as your seed then you're going to fail um I made a note here about uh sj.",
    "start": "413759",
    "end": "422039"
  },
  {
    "text": "random if you're trying to do J or if you're trying to do crypto inside of JavaScript you're probably making a",
    "start": "422039",
    "end": "427440"
  },
  {
    "text": "fundamental mistake already if you're trying to do random numbers in JavaScript maybe you're a little bit",
    "start": "427440",
    "end": "432520"
  },
  {
    "text": "better off but fundamentally the problem is that JavaScript is not a trusted execution environment I think we all",
    "start": "432520",
    "end": "438039"
  },
  {
    "text": "know this but we have efforts like cryptocat that started off as just a pure JavaScript encryption technique for",
    "start": "438039",
    "end": "445000"
  },
  {
    "text": "chat that was basically trying to reimplement TLS with JavaScript scpt",
    "start": "445000",
    "end": "450080"
  },
  {
    "text": "which is the wrong way to go about things so what I've mentioned here is the the Stanford JavaScript crypto",
    "start": "450080",
    "end": "455319"
  },
  {
    "text": "Library it's at least a very good reference reference implementation for generating random numbers and the reason",
    "start": "455319",
    "end": "461240"
  },
  {
    "text": "I pick it out as a good reference is because it does it relies on um some standards for implementing some the the",
    "start": "461240",
    "end": "467800"
  },
  {
    "text": "the random number generation and it includes things like um entropy estimation so that knows and receding so",
    "start": "467800",
    "end": "474919"
  },
  {
    "text": "that it knows how to keep up a particular entropy P pool as it creates these numbers and then fundamentally if",
    "start": "474919",
    "end": "481639"
  },
  {
    "text": "you're writing PHP Ruby Pearl python whatever your language of choice really",
    "start": "481639",
    "end": "486759"
  },
  {
    "text": "if you need a random number fall back to something like op SSL op SSL exists on",
    "start": "486759",
    "end": "491800"
  },
  {
    "text": "pretty much any distribution you can think of and it has a very nice op SSL Rand bytes that you can either run from",
    "start": "491800",
    "end": "498599"
  },
  {
    "text": "the command line like that or just call its API and there you're much more",
    "start": "498599",
    "end": "503840"
  },
  {
    "text": "likely to have a cryptographically secure random number generator so don't even bother with all of the",
    "start": "503840",
    "end": "510319"
  },
  {
    "text": "um other things like the rans or even like mercan twister if you're thinking that mercan twister has a nice 2 to the",
    "start": "510319",
    "end": "516560"
  },
  {
    "text": "19,000 whatever period that's pretty good but it still has a state and if you",
    "start": "516560",
    "end": "521680"
  },
  {
    "text": "can if that state gets exposed and compromised an attacker can basically replay and reuse that so again not",
    "start": "521680",
    "end": "528320"
  },
  {
    "text": "cryptographically secure um but then the other so the",
    "start": "528320",
    "end": "533720"
  },
  {
    "start": "530000",
    "end": "640000"
  },
  {
    "text": "other thing about csrf tokens that we've seen is that you can have csrf tokens and they they've been applied to your",
    "start": "533720",
    "end": "539200"
  },
  {
    "text": "web application they're protecting you but in some cases what CFR csrf tokens are really acting as are sort of a duct",
    "start": "539200",
    "end": "546519"
  },
  {
    "text": "tape that's on top of an already bad design and some of these bad designs are something as simple as not caring about",
    "start": "546519",
    "end": "554240"
  },
  {
    "text": "the the difference between post and get if that matters for your web application or uh in the last 6 months you can go to",
    "start": "554240",
    "end": "561360"
  },
  {
    "text": "exploit DB find a whole lot of uh csrf vulnerabilities that have been publicly",
    "start": "561360",
    "end": "566560"
  },
  {
    "text": "reported many of which against uh EMB devices such as um home DSL routers or",
    "start": "566560",
    "end": "572399"
  },
  {
    "text": "cable routers wireless access points and many many many of them are vulnerable to things like password change mechanisms",
    "start": "572399",
    "end": "579240"
  },
  {
    "text": "where all you have to do to change your password is apply the new password and verify the new password in other words",
    "start": "579240",
    "end": "584680"
  },
  {
    "text": "you don't need to know that old password so that's the idea of a design problem another design problem or a way to",
    "start": "584680",
    "end": "590600"
  },
  {
    "text": "handle this is if you look at something like amazon.com if you try to if you go",
    "start": "590600",
    "end": "596360"
  },
  {
    "text": "and you ship to ship anything to an address that's already been shipped to then no problem you don't have to",
    "start": "596360",
    "end": "602279"
  },
  {
    "text": "reauthenticate it's it's going to pick up your session as it was before and it's off however if you try to ship to a",
    "start": "602279",
    "end": "608640"
  },
  {
    "text": "new address it's going to throw a barrier in there and say you must reauthenticate and that's a pretty good",
    "start": "608640",
    "end": "614440"
  },
  {
    "text": "way that you can make sure that you're still dealing with the identity of the person who you hope you were dealing",
    "start": "614440",
    "end": "620079"
  },
  {
    "text": "with and it's not a barrier that's overly intrusive meaning that shipping to new addresses are only going to occur",
    "start": "620079",
    "end": "626519"
  },
  {
    "text": "a few times it's not going to occur every single time probably that you're checking out and really what it boils",
    "start": "626519",
    "end": "631920"
  },
  {
    "text": "down to the csrf problem is that we've Loosely coupled identity what you can do",
    "start": "631920",
    "end": "638200"
  },
  {
    "text": "and what your current session is so a few more few more rants about the the",
    "start": "638200",
    "end": "644120"
  },
  {
    "start": "640000",
    "end": "739000"
  },
  {
    "text": "the the current state and then we'll get into some more details and some more technical items so bear with me a little bit longer uh mobile apps these are",
    "start": "644120",
    "end": "651760"
  },
  {
    "text": "really interesting we were going to take a look at some mobile apps but to one degree they're just recreating",
    "start": "651760",
    "end": "657240"
  },
  {
    "text": "vulnerabilities from first principles we you can go back and look at all these mobile apps that haven't even bothered to use htps for connections therefore we",
    "start": "657240",
    "end": "664880"
  },
  {
    "text": "can start sniffing them then the ones that started to use htps weren't even bothering to verify the certificate so",
    "start": "664880",
    "end": "671760"
  },
  {
    "text": "therefore why even bother to have htps in the first place if it's not even going to throw up a problem with with uh",
    "start": "671760",
    "end": "677519"
  },
  {
    "text": "you know uh intermediation attacks plus what we think that there will be some interesting things to start looking at",
    "start": "677519",
    "end": "684399"
  },
  {
    "text": "is um uh mobile apps that are just making HP requests and they don't really act like browsers but perhaps they have",
    "start": "684399",
    "end": "691639"
  },
  {
    "text": "a session context in related to some social media for example Facebook lights or Twitter or um any other social U",
    "start": "691639",
    "end": "699200"
  },
  {
    "text": "media like that and how could they possibly be abused anything like um malevolent ad banners ad Banners are a",
    "start": "699200",
    "end": "705800"
  },
  {
    "text": "nice recurring theme of blackout conferences uh this year there was a good demonstration of uh you know malicious ad banners last couple of",
    "start": "705800",
    "end": "712519"
  },
  {
    "text": "years there's been other demonstrations of what bad things ad banners can do in terms of serving malware and of course",
    "start": "712519",
    "end": "719519"
  },
  {
    "text": "if we're talking about csrf or we're talking about clickjacking or we're talking about other types of browser attacks you know take your phone or take",
    "start": "719519",
    "end": "726600"
  },
  {
    "text": "a browser and then you know this is the dirty Callahan uh postulate how safe do",
    "start": "726600",
    "end": "731800"
  },
  {
    "text": "you feel you know how lucky do you feel punk you know clicking on this QR code you don't even know what that URL looks",
    "start": "731800",
    "end": "738560"
  },
  {
    "text": "like so we're going to get uh V involved here in a second I'm talking about what",
    "start": "738560",
    "end": "744120"
  },
  {
    "start": "739000",
    "end": "972000"
  },
  {
    "text": "our new tool is that we want to share with the community that moves Beyond just BAS basically a very passive static",
    "start": "744120",
    "end": "751880"
  },
  {
    "text": "based approach to testing csrf sort of security by Rex in other words is there",
    "start": "751880",
    "end": "757240"
  },
  {
    "text": "a CF csrf token there and if it's there good and if it's not there bad what we",
    "start": "757240",
    "end": "762600"
  },
  {
    "text": "really want to do is switch that type of testing and that verification of where those whether those csrf nonsense",
    "start": "762600",
    "end": "767959"
  },
  {
    "text": "actually work into an active test that relies on actually a browser a browser",
    "start": "767959",
    "end": "773480"
  },
  {
    "text": "that's actually building the Dom interpreting JavaScript and going through the the process of actually replaying an attack rather than just",
    "start": "773480",
    "end": "781760"
  },
  {
    "text": "guessing whether an attack could work so V why don't you talk for a bit so we we",
    "start": "781760",
    "end": "786880"
  },
  {
    "text": "have a a browser called berunda it's a",
    "start": "786880",
    "end": "792040"
  },
  {
    "text": "double-headed bird berunda is and the browser is also double-headed uh what it does it lets",
    "start": "792040",
    "end": "799360"
  },
  {
    "text": "you browse the same side on uh main browser and the test",
    "start": "799360",
    "end": "806639"
  },
  {
    "text": "browser each one of them keeps its own accounting everything",
    "start": "806639",
    "end": "813240"
  },
  {
    "text": "is local for each browser but one thing",
    "start": "813240",
    "end": "818600"
  },
  {
    "text": "that happens uh if if you want to while",
    "start": "818600",
    "end": "824040"
  },
  {
    "text": "testing csrf on on forms you could make",
    "start": "824040",
    "end": "829399"
  },
  {
    "text": "test browser submit cookies from the main",
    "start": "829399",
    "end": "834680"
  },
  {
    "text": "browser so for example this failed because",
    "start": "834680",
    "end": "840800"
  },
  {
    "text": "there was a csrf protection mechanism in place and test browser with swapped",
    "start": "840800",
    "end": "847440"
  },
  {
    "text": "cookie jar basically cookies from the main browser",
    "start": "847440",
    "end": "852680"
  },
  {
    "text": "couldn't uh submit the form because uh back end was checking to see if csrf",
    "start": "852680",
    "end": "859839"
  },
  {
    "text": "token attached to that cookies uh to the set set of",
    "start": "859839",
    "end": "866600"
  },
  {
    "text": "authentication cookies is valid or not and because there was no",
    "start": "866600",
    "end": "872040"
  },
  {
    "text": "validity it felt the regular case with uh browser working with its own",
    "start": "872040",
    "end": "880480"
  },
  {
    "text": "cookies would look like this it would go through so this was a case where there",
    "start": "880480",
    "end": "885839"
  },
  {
    "text": "is a csrf protection and uh clearly this shows the failure and",
    "start": "885839",
    "end": "894959"
  },
  {
    "text": "uh and it's done on demand basically by clicking onto this button that just",
    "start": "895639",
    "end": "902079"
  },
  {
    "text": "swaps the cookies for a second not for a second for a request so let's",
    "start": "902079",
    "end": "907160"
  },
  {
    "text": "demonstrate the protected",
    "start": "907160",
    "end": "911880"
  },
  {
    "text": "application and on this one the I",
    "start": "913880",
    "end": "920440"
  },
  {
    "text": "uh just a second",
    "start": "920440",
    "end": "924759"
  },
  {
    "text": "so what's going to happen now if we submit in a main browser it's",
    "start": "934399",
    "end": "942319"
  },
  {
    "text": "successful if we s uh if we do the same thing on a test browser with cookies",
    "start": "942319",
    "end": "949600"
  },
  {
    "text": "from the main browser it s it succeed too because",
    "start": "949600",
    "end": "957279"
  },
  {
    "text": "there are the token verification mechanism was flooded",
    "start": "957279",
    "end": "963920"
  },
  {
    "text": "there there was some problem with it okay that's it on the demo back to",
    "start": "963920",
    "end": "969959"
  },
  {
    "text": "Mike so what um to to sort of to reiterate what what was going on behind",
    "start": "969959",
    "end": "975120"
  },
  {
    "start": "972000",
    "end": "1020000"
  },
  {
    "text": "the scenes there is that the tools basically checking is your cookie actually associated with the browsing",
    "start": "975120",
    "end": "982079"
  },
  {
    "text": "context of the current browser and the browsing context means that web page that's built with the current set of",
    "start": "982079",
    "end": "987880"
  },
  {
    "text": "csrf tokens so the the idea of swapping tokens is that your cookie obviously is",
    "start": "987880",
    "end": "994040"
  },
  {
    "text": "going to identify you but the csrf tokens should identify you or should",
    "start": "994040",
    "end": "999519"
  },
  {
    "text": "authorize you for that particular browsing context so that's why if you were to come up with a new equivalent to",
    "start": "999519",
    "end": "1005759"
  },
  {
    "text": "uh cookie but use them for different tokens that are associated with the different authenticated session the the",
    "start": "1005759",
    "end": "1012680"
  },
  {
    "text": "interaction should fail and so that's what we're going on that's that's what we're trying to convey there and we're",
    "start": "1012680",
    "end": "1017959"
  },
  {
    "text": "trying to help to um to offer out as a tool to make that type of testing easier so let's we'll SW we'll take a",
    "start": "1017959",
    "end": "1025760"
  },
  {
    "start": "1020000",
    "end": "1136000"
  },
  {
    "text": "switch now and move off of Just combat analysis of the problems and detection",
    "start": "1025760",
    "end": "1030880"
  },
  {
    "text": "and talk about some better ways of uh providing protection so cores cross",
    "start": "1030880",
    "end": "1036319"
  },
  {
    "text": "origin resource sharing is pretty awesome aspect of HTML 5 it came out of the fact that as I mentioned the web",
    "start": "1036319",
    "end": "1043678"
  },
  {
    "text": "today is built with all types of co-mingled resources within a web page and Developers wanted to be able to in",
    "start": "1043679",
    "end": "1050760"
  },
  {
    "text": "some cases read the responses and deal with content cross origin but they were",
    "start": "1050760",
    "end": "1055919"
  },
  {
    "text": "coming up with horribly insecure things like Json P which is basically here's an",
    "start": "1055919",
    "end": "1061120"
  },
  {
    "text": "evalve running code that I'm taking from another origin so really bad things can",
    "start": "1061120",
    "end": "1066480"
  },
  {
    "text": "happen with that on the other hand Kors says here's a way to share content but",
    "start": "1066480",
    "end": "1073840"
  },
  {
    "text": "an outcome of that is also that if you have a non-simple request and in this case a non simple request means you've",
    "start": "1073840",
    "end": "1079919"
  },
  {
    "text": "added a custom header something like x- csrf or you you're using a custom verb",
    "start": "1079919",
    "end": "1086120"
  },
  {
    "text": "or something like X csrf then the browser is going to make a pre-flight request and that pre-flight request is",
    "start": "1086120",
    "end": "1092559"
  },
  {
    "text": "really important because it's basically saying from one origin going to the destination origin am I allowed to send",
    "start": "1092559",
    "end": "1099200"
  },
  {
    "text": "this and if you were to basically broker all of your requests on your site through an xhr request that included a",
    "start": "1099200",
    "end": "1107200"
  },
  {
    "text": "custom x- csrf header you've effectively blocked csrf attacks against any of",
    "start": "1107200",
    "end": "1112720"
  },
  {
    "text": "those requests that go that go through that xhr request because in the sense of forgery of creation an attacker who's on",
    "start": "1112720",
    "end": "1119520"
  },
  {
    "text": "a separate origin can no longer create and inject that particular header as long as the victim's using an HTML 5 web",
    "start": "1119520",
    "end": "1126559"
  },
  {
    "text": "browser so that is unfortunately the little caveat here the little asterisk in the fine print says you have your",
    "start": "1126559",
    "end": "1132559"
  },
  {
    "text": "your users have to be using an HTML 5 enabled browser so um but so with KES as I said",
    "start": "1132559",
    "end": "1140720"
  },
  {
    "start": "1136000",
    "end": "1190000"
  },
  {
    "text": "it's going to the drawbacks are is that it only works for non-s simple requests",
    "start": "1140720",
    "end": "1146559"
  },
  {
    "text": "and um it only works for HTML5 browsers plus you have to build this design in",
    "start": "1146559",
    "end": "1151679"
  },
  {
    "text": "from the beginning of your app it's sort of like if you're going to go back and retrofit csrf nonis you might as well",
    "start": "1151679",
    "end": "1157640"
  },
  {
    "text": "also consider retrofitting something like these um the drawback though of of this type of xhr brokering is that you",
    "start": "1157640",
    "end": "1164799"
  },
  {
    "text": "need to still be able to have people land in your web application so if you're listed on a Google or Yahoo or",
    "start": "1164799",
    "end": "1170840"
  },
  {
    "text": "Bing search Pages people need to be into your come land onto your index.php with a simple get so it's the idea that that",
    "start": "1170840",
    "end": "1178120"
  },
  {
    "text": "get page obviously you don't want to have anything any activity on there that would be csrf attackable anyway but you",
    "start": "1178120",
    "end": "1183880"
  },
  {
    "text": "couldn't do everything through this uh non-simple xhr because of this sort of Landing",
    "start": "1183880",
    "end": "1190320"
  },
  {
    "start": "1190000",
    "end": "1265000"
  },
  {
    "text": "consideration um also make us an aside every time we talk about csrf there's",
    "start": "1190320",
    "end": "1196039"
  },
  {
    "text": "always objections that come up in terms of well what about HTML injection what about crossy scripting what about",
    "start": "1196039",
    "end": "1201640"
  },
  {
    "text": "sniffing what about SSL downgrades so these are all effective legitimate",
    "start": "1201640",
    "end": "1206720"
  },
  {
    "text": "attacks but they're sort of orthogonal to the problem at hand if we're going to talk about cross-site scripting there's",
    "start": "1206720",
    "end": "1212640"
  },
  {
    "text": "an attack that's executing within the same origin anyway and we're trying to talk about cross origin requests and try",
    "start": "1212640",
    "end": "1219000"
  },
  {
    "text": "to prevent and control cross origin requests so we're sort of setting aside um xss uh for now and saying either stop",
    "start": "1219000",
    "end": "1227720"
  },
  {
    "text": "using the string con nation and start using things like content security policy to to help block and mitigate xss",
    "start": "1227720",
    "end": "1234919"
  },
  {
    "text": "attacks and things like uh Mane middle attacks DNS attacks cash poisoning",
    "start": "1234919",
    "end": "1240159"
  },
  {
    "text": "sniffing know we really should be using hsts however other than you know PayPal",
    "start": "1240159",
    "end": "1246159"
  },
  {
    "text": "I'm not sure how many popular sites uh out of the Alexa top 10 are actually using hsts even though it's proven to",
    "start": "1246159",
    "end": "1254080"
  },
  {
    "text": "work it's proven to be rather effective and we've talked about DNS SEC for quite a long time",
    "start": "1254080",
    "end": "1259120"
  },
  {
    "text": "but once again that doesn't really exist quite yet in a nice well deployed manner",
    "start": "1259120",
    "end": "1265320"
  },
  {
    "start": "1265000",
    "end": "1328000"
  },
  {
    "text": "so one of the other things talking about you know needing HTML 5 browsers uh we",
    "start": "1265320",
    "end": "1271840"
  },
  {
    "text": "run we qualus run a tool called browser check and this is basically here's some",
    "start": "1271840",
    "end": "1277559"
  },
  {
    "text": "data that I've grafted from this which is about 20 months of data where we we've increase the total number of",
    "start": "1277559",
    "end": "1283799"
  },
  {
    "text": "targets that we've scanned so um basically the the graph on your left",
    "start": "1283799",
    "end": "1289320"
  },
  {
    "text": "shows our sample size is increased but even as that sample size increases the number of insecure browsers that visit",
    "start": "1289320",
    "end": "1296039"
  },
  {
    "text": "this website that have an insecure flash or an insecure Java is pretty much Flatline at about 1/5 of them so 20% of",
    "start": "1296039",
    "end": "1304080"
  },
  {
    "text": "you in this room potentially uh has an insecure flash or Java on their browser now of course this is a little more",
    "start": "1304080",
    "end": "1310000"
  },
  {
    "text": "sophisticated audience so hopefully it's a little bit lower but uh I for one have them uninstalled because the only dead",
    "start": "1310000",
    "end": "1315600"
  },
  {
    "text": "languages I'm interested are things like Latin or something like that not the flash or Java and I will admit to having",
    "start": "1315600",
    "end": "1321799"
  },
  {
    "text": "silver light installed because I like watching uh old episodes of Battle Star Galactica on",
    "start": "1321799",
    "end": "1328600"
  },
  {
    "start": "1328000",
    "end": "1438000"
  },
  {
    "text": "Netflix but uh I mentioned once again talking about uh brow HTML 5 how do we",
    "start": "1328640",
    "end": "1334679"
  },
  {
    "text": "have secure browsers and things like cores and content security policy there are still ways we can abuse",
    "start": "1334679",
    "end": "1341679"
  },
  {
    "text": "as hackers abuse things like CSP so here's a a a a trick that we could",
    "start": "1341679",
    "end": "1347000"
  },
  {
    "text": "actually generate a CSR C srf request so this web page is my the page that I've",
    "start": "1347000",
    "end": "1352400"
  },
  {
    "text": "set up on my own site and what I've created is using uh just using a meta tag here for Simplicity but I've set a",
    "start": "1352400",
    "end": "1359640"
  },
  {
    "text": "policy that says no image can images can have a source attribute and yet I've",
    "start": "1359640",
    "end": "1364679"
  },
  {
    "text": "gone and created a source attribute for this image therefore I violated a policy and since this is a policy violation I'm",
    "start": "1364679",
    "end": "1371320"
  },
  {
    "text": "going to report it to my report URI and the report URI is where I'm going to inject or that's where I'm going to",
    "start": "1371320",
    "end": "1377120"
  },
  {
    "text": "craft my csrf attack what's really cool about this is that we get a post out of it so there's really the only other ways",
    "start": "1377120",
    "end": "1384600"
  },
  {
    "text": "of getting a post are using the xhr object otherwise if you're using images or script sources or iframe sources",
    "start": "1384600",
    "end": "1391080"
  },
  {
    "text": "those are always going to generate get requests so we can generate a post the only drawback is there is an origin",
    "start": "1391080",
    "end": "1398159"
  },
  {
    "text": "header here that's set to null which is a good thing that's what the spec has said we should be doing and we cannot",
    "start": "1398159",
    "end": "1403679"
  },
  {
    "text": "control effectively the post data so the spec has also been pretty smart saying",
    "start": "1403679",
    "end": "1408720"
  },
  {
    "text": "that everything that shows them the document URL or that violated directive should be percent encoded so we can't be",
    "start": "1408720",
    "end": "1415320"
  },
  {
    "text": "really tricky or Wy and drop in an Amper sand and add a bunch of new name value pairs we can however get a post verb and",
    "start": "1415320",
    "end": "1423600"
  },
  {
    "text": "get a URL with some URL parameters that are completely of our creation but I",
    "start": "1423600",
    "end": "1429559"
  },
  {
    "text": "just sort of mentioned this kind of as a trivia about perhaps things that you wouldn't have thought of in terms of",
    "start": "1429559",
    "end": "1435039"
  },
  {
    "text": "abusing the csp's report URI uh capability",
    "start": "1435039",
    "end": "1440440"
  },
  {
    "start": "1438000",
    "end": "1479000"
  },
  {
    "text": "so if anyone here um if cqx means anything to anyone here then you",
    "start": "1444799",
    "end": "1450840"
  },
  {
    "text": "probably already recognize uh SOS so SOS um in Morse code was basically chosen",
    "start": "1450840",
    "end": "1457720"
  },
  {
    "text": "because it's very simple to send and it's very simple to understand d d da da",
    "start": "1457720",
    "end": "1463200"
  },
  {
    "text": "D probably everybody's come across out everybody's heard of that and SOS is sort of what we are that that kind of U",
    "start": "1463200",
    "end": "1470320"
  },
  {
    "text": "mentality is what we've adopted in terms of our proposal for fixing csrf perhaps",
    "start": "1470320",
    "end": "1476200"
  },
  {
    "text": "once and for all or for at least um a good amount of it so talking about a new",
    "start": "1476200",
    "end": "1482520"
  },
  {
    "text": "a new spec a new proposal that we would that we that we would say is this is a way to actually block csrf if we can get",
    "start": "1482520",
    "end": "1488559"
  },
  {
    "text": "the browsers involved and what we're trying to do is focus on that concept that that attackers are abusing the",
    "start": "1488559",
    "end": "1495440"
  },
  {
    "text": "session in other words they're abusing cookies because cookies today are for as broken as they are they're basically",
    "start": "1495440",
    "end": "1501679"
  },
  {
    "text": "what represents the session within web applications and what we want to do is control when those cookies are going to",
    "start": "1501679",
    "end": "1508200"
  },
  {
    "text": "be with accompany a cross origin request we don't want to break those cross origin requests because we want to still",
    "start": "1508200",
    "end": "1514840"
  },
  {
    "text": "be able to allow all those law clap pictures and everything else to load in forms and whatnot we just want to isolate that user session context the",
    "start": "1514840",
    "end": "1522320"
  },
  {
    "text": "actual application where they belong so we have a syntax it looks",
    "start": "1522320",
    "end": "1528480"
  },
  {
    "start": "1525000",
    "end": "1565000"
  },
  {
    "text": "pretty much exactly like content security policy and we're adopting that pre-flight behavior from Cross origin",
    "start": "1528480",
    "end": "1535000"
  },
  {
    "text": "resource sharing so the the benefits of this that we think is that you can",
    "start": "1535000",
    "end": "1540520"
  },
  {
    "text": "actually apply this now you can you can backport this to current web applications just using some Waf rules",
    "start": "1540520",
    "end": "1546760"
  },
  {
    "text": "so you can just throw some headers on there and you don't need to be modifying any JavaScript Frameworks you don't need",
    "start": "1546760",
    "end": "1552080"
  },
  {
    "text": "to be tying some JavaScript Frameworks onto your onto your uh app nor do you be need to rely on your W to do any inline",
    "start": "1552080",
    "end": "1559760"
  },
  {
    "text": "rewriting of content adding on the Fly tokens to forums and so on so the other",
    "start": "1559760",
    "end": "1566679"
  },
  {
    "start": "1565000",
    "end": "1668000"
  },
  {
    "text": "thing as we're trying to design this as we were thinking it through is that of course we wanted to succeed and there's a lot of different things and different",
    "start": "1566679",
    "end": "1573039"
  },
  {
    "text": "scenarios and different concerns that people have building web applications we could uh probably have an interesting",
    "start": "1573039",
    "end": "1579399"
  },
  {
    "text": "really interesting discussion on the do not track header and and how successful",
    "start": "1579399",
    "end": "1584559"
  },
  {
    "text": "it is and whether it should be on by default not on by default if we're a security community and we come across",
    "start": "1584559",
    "end": "1590760"
  },
  {
    "text": "security settings that we that we want to be on by default we're trying to help our end users well if we come across",
    "start": "1590760",
    "end": "1596880"
  },
  {
    "text": "privacy settings that we think improve privacy there's then a little bit more contention a little more conflict in in",
    "start": "1596880",
    "end": "1603840"
  },
  {
    "text": "what should be your default stance on privacy versus what shouldn't be and the biggest Point here though is that you",
    "start": "1603840",
    "end": "1610080"
  },
  {
    "text": "know our proposal if you're going to pick out any major flaw it means that browsers have to support it so we're",
    "start": "1610080",
    "end": "1615600"
  },
  {
    "text": "looking for feedback today from um people who develop websites people who hack websites people who build web",
    "start": "1615600",
    "end": "1621279"
  },
  {
    "text": "browsers know how much of these ideas do we think can work and we'll try and take those update us back and share something",
    "start": "1621279",
    "end": "1628640"
  },
  {
    "text": "that hopefully can be accepted and implemented and as I mentioned on that that uh slide that the chart with the",
    "start": "1628640",
    "end": "1634440"
  },
  {
    "text": "20% of browsers still being vulnerable to flash in Java is that old browsers have probably",
    "start": "1634440",
    "end": "1641679"
  },
  {
    "text": "more substantial issues anyway if you're worried about csrf against because your brows your your visitors are using ie6",
    "start": "1641679",
    "end": "1649360"
  },
  {
    "text": "you should also be worried that your browse that your visitors are using ie6 and they're going to be vulnerable to malware a lot of other attacks and",
    "start": "1649360",
    "end": "1656240"
  },
  {
    "text": "things like Aurora attacks so if we're trying to look at this grand scheme of things in the idea of risk mitigation we",
    "start": "1656240",
    "end": "1663080"
  },
  {
    "text": "should keep that in mind as well and just start to move people to be using the latest uh browsers anyway so this is",
    "start": "1663080",
    "end": "1670480"
  },
  {
    "start": "1668000",
    "end": "1694000"
  },
  {
    "text": "what it looks like all we have we would have for example anytime you would set a have a set cookie headitor header you",
    "start": "1670480",
    "end": "1677440"
  },
  {
    "text": "drop a content security policy header in there and you say SOS apply and you say",
    "start": "1677440",
    "end": "1682679"
  },
  {
    "text": "you wanted to apply to this cookie or this couple of cookies or you want to apply it to all the cookies and then the",
    "start": "1682679",
    "end": "1688960"
  },
  {
    "text": "directives are simple we've got three of them self any or",
    "start": "1688960",
    "end": "1694559"
  },
  {
    "start": "1694000",
    "end": "1770000"
  },
  {
    "text": "isolate so these policies mean basically they say self and any are how you can",
    "start": "1697399",
    "end": "1704440"
  },
  {
    "text": "set up an exception based policy for your website so if you have a policy of self for particular cookie like your PHP",
    "start": "1704440",
    "end": "1710279"
  },
  {
    "text": "session ID when your browser comes and and is about to do a cross origin",
    "start": "1710279",
    "end": "1715320"
  },
  {
    "text": "request it's going to make a pre-flight check otherwise if it's coming from the same origin it's going to work the way",
    "start": "1715320",
    "end": "1721000"
  },
  {
    "text": "it works today same thing if you have a policy of any on that cookie name it's going to also trigger a pre-flight",
    "start": "1721000",
    "end": "1727519"
  },
  {
    "text": "request if this request is going to be cross origin and then unless there's an exception given it's going to include",
    "start": "1727519",
    "end": "1733880"
  },
  {
    "text": "that cookie for the cross origin request or if you're something like a bank or",
    "start": "1733880",
    "end": "1738919"
  },
  {
    "text": "you just don't want to play well with others or you don't like playing well with others you're going to isol use an isolate policy and that basically tells",
    "start": "1738919",
    "end": "1745679"
  },
  {
    "text": "your browser anytime there's a cross origin request that comes into me as a destination origin just don't bother",
    "start": "1745679",
    "end": "1752080"
  },
  {
    "text": "including that cookie only include that cookie when the request is originating from a from An Origin that matches that",
    "start": "1752080",
    "end": "1760159"
  },
  {
    "text": "cookie and basically isolate is sort of a way to say we don't want even want to bother with pre-flight or have any",
    "start": "1760159",
    "end": "1765840"
  },
  {
    "text": "concerns about the potential overhead what a pre-flight um might imply so to",
    "start": "1765840",
    "end": "1772039"
  },
  {
    "start": "1770000",
    "end": "1821000"
  },
  {
    "text": "sort of walk through that again if there's no policy on the cookie or the cookie has a policy that does have a",
    "start": "1772039",
    "end": "1778880"
  },
  {
    "text": "policy and the request is coming from the same origin the web just works like the web today your browser does what",
    "start": "1778880",
    "end": "1784039"
  },
  {
    "text": "it's expected to do and as I mentioned if the if the policy is isolated then",
    "start": "1784039",
    "end": "1789480"
  },
  {
    "text": "the cookie never going to be included on Cross origin request so we're not really we're not interfering with the the",
    "start": "1789480",
    "end": "1795799"
  },
  {
    "text": "forgery concept the creation or or the counterfeiting of the request you can go ahead and do that if you want as the",
    "start": "1795799",
    "end": "1802039"
  },
  {
    "text": "attacker but you're not going to get that session cookie to associate with it so the browser is going to prevent the",
    "start": "1802039",
    "end": "1807200"
  },
  {
    "text": "victim from there from accidentally either visiting this page or clicking on something and sending their cookie along",
    "start": "1807200",
    "end": "1813799"
  },
  {
    "text": "with that request then if we have that policy of any or self that's where that pre-flight concept comes in and we threw",
    "start": "1813799",
    "end": "1820519"
  },
  {
    "text": "the pre-flight in there so that we can actually have a default policy for your entire website so your entire website's",
    "start": "1820519",
    "end": "1827480"
  },
  {
    "start": "1821000",
    "end": "1866000"
  },
  {
    "text": "a Blog we have a policy of something like any we just want to say by default",
    "start": "1827480",
    "end": "1832760"
  },
  {
    "text": "we think it's okay for these cookies to come in and and be associated with cross origin requests except for a particular",
    "start": "1832760",
    "end": "1840519"
  },
  {
    "text": "directory maybe there's a particular resource we want to make an exception for something like a SL admin directory",
    "start": "1840519",
    "end": "1846559"
  },
  {
    "text": "you don't want um visits coming into the SL admin directory cross origin that",
    "start": "1846559",
    "end": "1852000"
  },
  {
    "text": "probably doesn't make sense from you from the perspective of your architecture uh design so what you could",
    "start": "1852000",
    "end": "1857559"
  },
  {
    "text": "do is basically say we have a default policy for our website and then per resource per directory or per page you",
    "start": "1857559",
    "end": "1864919"
  },
  {
    "text": "can actually make these um pre-flight request responses so that you can actually have more granular control now",
    "start": "1864919",
    "end": "1872080"
  },
  {
    "text": "with your website and this is sort of a way that we think possibly makes that cookie a little bit more flexible",
    "start": "1872080",
    "end": "1878120"
  },
  {
    "text": "because cookies are limited by domain and a path attribute that's really not useful and and isn't a security barrier",
    "start": "1878120",
    "end": "1885480"
  },
  {
    "text": "but in this case you would have something that's looks like a Coors request it says Access Control SOS in",
    "start": "1885480",
    "end": "1891840"
  },
  {
    "text": "other words this browser is about to make a request that's cross origin and it's going to for this destination that",
    "start": "1891840",
    "end": "1898240"
  },
  {
    "text": "it's going to it's going to include two different cookies so it's basically saying I have a default policy for these",
    "start": "1898240",
    "end": "1903919"
  },
  {
    "text": "cookies is there an exception that I should apply to this and the server either says yeah there's an exception in",
    "start": "1903919",
    "end": "1910200"
  },
  {
    "start": "1907000",
    "end": "1954000"
  },
  {
    "text": "fact normally you were not going to include those cookies but I'm going to allow you in this instance so SSS SOS",
    "start": "1910200",
    "end": "1917320"
  },
  {
    "text": "reply allow or normally you were going to include this cookie with a request",
    "start": "1917320",
    "end": "1922880"
  },
  {
    "text": "but you know what this is an admin directory or this is a a transfer you know this is a transfer bank account",
    "start": "1922880",
    "end": "1928679"
  },
  {
    "text": "directory or you know directory or or an action or a specific URL that handles uh",
    "start": "1928679",
    "end": "1933880"
  },
  {
    "text": "financial information therefore I want to deny you from the browser from including that and of course we also",
    "start": "1933880",
    "end": "1940360"
  },
  {
    "text": "think that we'll we'll throw on an expiration in there so that if you're worried about the overhead of of making",
    "start": "1940360",
    "end": "1946399"
  },
  {
    "text": "requests we can say hey browser you should cat this response for n number of seconds so check again",
    "start": "1946399",
    "end": "1953760"
  },
  {
    "text": "later so the idea to help kind of reinforce what we're talking about here",
    "start": "1953760",
    "end": "1959360"
  },
  {
    "start": "1954000",
    "end": "2026000"
  },
  {
    "text": "is that if you had a default policy of any your cookie going to come across origin request basically it's going to",
    "start": "1959360",
    "end": "1965919"
  },
  {
    "text": "act like the web acts today unless you get an exception in this response if",
    "start": "1965919",
    "end": "1971360"
  },
  {
    "text": "your policy itself then the browser is going to say I'm not going to include this cookie unless that particular",
    "start": "1971360",
    "end": "1978279"
  },
  {
    "text": "resource says yeah go ahead send along this cookie from that cross origin so we",
    "start": "1978279",
    "end": "1983559"
  },
  {
    "text": "think that this can be you can help be more helpful now with on a per resource basis apply this protection so rather",
    "start": "1983559",
    "end": "1990639"
  },
  {
    "text": "than having to audit your audit all of your application look for all the forms that have to be applied with csrf tokens",
    "start": "1990639",
    "end": "1997320"
  },
  {
    "text": "you could look for all the forms and apply headers to them and probably you can do this a little bit more easily",
    "start": "1997320",
    "end": "2003039"
  },
  {
    "text": "with a WAFF that has something like a um just some Rexes you do some mod rewrite",
    "start": "2003039",
    "end": "2008799"
  },
  {
    "text": "tricks things like that that are helping to protect this also it doesn't involve any nonsense you don't have to know",
    "start": "2008799",
    "end": "2015000"
  },
  {
    "text": "anything whatsoever about crypto you don't have to know anything whatsoever about seeding those random number generators so hopefully there's fewer",
    "start": "2015000",
    "end": "2022639"
  },
  {
    "text": "mistakes then that developers can make trying to implement and adopt this so",
    "start": "2022639",
    "end": "2027919"
  },
  {
    "text": "there's two major categories of things that are being tracked here the policy is being applied to a cookie and the",
    "start": "2027919",
    "end": "2034000"
  },
  {
    "text": "browser is tracking how this this policy and destination origin the resources on",
    "start": "2034000",
    "end": "2040000"
  },
  {
    "text": "this destination origin we also think there's some some tricks in there that this pre-flight response shouldn't leak",
    "start": "2040000",
    "end": "2046559"
  },
  {
    "text": "any additional information about the web application in other words you shouldn't be able to just use a pre-flight response or requests to be able to",
    "start": "2046559",
    "end": "2053398"
  },
  {
    "text": "enumerate what all of the cookies are for web application or perhaps this would be another way yet to enumerate",
    "start": "2053399",
    "end": "2059800"
  },
  {
    "text": "hidden directories or figure out what are the special directories and what are the unprotected directories so kind of",
    "start": "2059800",
    "end": "2065000"
  },
  {
    "text": "put that in there as an afterthought in terms of being able to once again abuse a browser or abuse new types of of",
    "start": "2065000",
    "end": "2073520"
  },
  {
    "start": "2073000",
    "end": "2084000"
  },
  {
    "text": "policies um I think we've got a demo we'll actually show this in a second um",
    "start": "2073520",
    "end": "2078760"
  },
  {
    "text": "so to reiterate let me skip that I think I've said that much",
    "start": "2078760",
    "end": "2083919"
  },
  {
    "text": "so we'll have V come back and and show you know basically what this looks like in action but we think that this idea of",
    "start": "2083919",
    "end": "2090960"
  },
  {
    "start": "2084000",
    "end": "2145000"
  },
  {
    "text": "this SOS policy is that it has a very familiar syntax especially if you're already trying to deploy CSP and cores",
    "start": "2090960",
    "end": "2097160"
  },
  {
    "text": "on your web application has a very small command set so it's really hard to get too much overlapping and confusing logic",
    "start": "2097160",
    "end": "2105040"
  },
  {
    "text": "and we do however uh acknowledge that the idea of pre-flight might be anema to",
    "start": "2105040",
    "end": "2110240"
  },
  {
    "text": "people who are worried about minimizing uh latency as much as possible that's why we threw the expires header in there",
    "start": "2110240",
    "end": "2116880"
  },
  {
    "text": "and the other thing is that we're only tracking all other Origins to your origin that you're protecting we're not",
    "start": "2116880",
    "end": "2122680"
  },
  {
    "text": "trying to say this particular origin can include cookies but this particular origin shouldn't include cookies we only",
    "start": "2122680",
    "end": "2129440"
  },
  {
    "text": "care about the destination uh Netcraft I think is is tracking around 10 billion",
    "start": "2129440",
    "end": "2134720"
  },
  {
    "text": "or sorry 1 billion web applications in 2013 so there's no point in trying to to",
    "start": "2134720",
    "end": "2140079"
  },
  {
    "text": "create a some map of 10 billion to one and try to figure out which ones are allowed to include cookies which ones",
    "start": "2140079",
    "end": "2145560"
  },
  {
    "start": "2145000",
    "end": "2366000"
  },
  {
    "text": "aren't so van why don't we show what the what what this would look like in a",
    "start": "2145560",
    "end": "2152078"
  },
  {
    "text": "browser so right here we have a very simple uh uh browser that is based on a",
    "start": "2152520",
    "end": "2160319"
  },
  {
    "text": "QT demo demo browser that implements uh SOS",
    "start": "2160319",
    "end": "2167720"
  },
  {
    "text": "support for the sake of uh for the sake of a demo we have",
    "start": "2167720",
    "end": "2173160"
  },
  {
    "text": "couple of local sites set up uh the main site is my site that has",
    "start": "2173160",
    "end": "2180720"
  },
  {
    "text": "SOS policy set up it has uh any",
    "start": "2180720",
    "end": "2188359"
  },
  {
    "text": "uh the remember Mike says there there is any uh isolate and",
    "start": "2188359",
    "end": "2194640"
  },
  {
    "text": "deny this has any set up so all the incoming so basically all the links on",
    "start": "2194640",
    "end": "2201960"
  },
  {
    "text": "this side can be accessed with the cookies pushed to them from anywhere",
    "start": "2201960",
    "end": "2209760"
  },
  {
    "text": "unless there is an exception on and for this side there is an exception which is admin SL delete me",
    "start": "2209760",
    "end": "2217640"
  },
  {
    "text": "which we try to isolate from the rest of the world so if somebody wants",
    "start": "2217640",
    "end": "2224160"
  },
  {
    "text": "to come to delete delete me from uh random evil",
    "start": "2224160",
    "end": "2232880"
  },
  {
    "text": "side and uh social Engineers you to click here to win an",
    "start": "2232880",
    "end": "2239119"
  },
  {
    "text": "iPad which was supposed to go to my side",
    "start": "2239119",
    "end": "2244280"
  },
  {
    "text": "admin delete me and be assuming that I'm already authenticated with my side it is",
    "start": "2244280",
    "end": "2252599"
  },
  {
    "text": "going to do some [Music] destruction and what is going to happen",
    "start": "2252599",
    "end": "2259040"
  },
  {
    "text": "now the delete me won't work cuz the cookies won't be",
    "start": "2259040",
    "end": "2266839"
  },
  {
    "text": "transferred refresh here sorry if you",
    "start": "2267440",
    "end": "2272560"
  },
  {
    "text": "refresh yes but uh you can't really social engineer",
    "start": "2272560",
    "end": "2278760"
  },
  {
    "text": "a person to also refresh it again I",
    "start": "2278760",
    "end": "2284520"
  },
  {
    "text": "mean there's only so many patches for idiocy that that's the only",
    "start": "2284520",
    "end": "2290280"
  },
  {
    "text": "Point uh we we're just trying to make the old stuff work like for example",
    "start": "2290640",
    "end": "2296160"
  },
  {
    "text": "search results have our website here and when",
    "start": "2296160",
    "end": "2301319"
  },
  {
    "text": "we navigate from the search results to my side it it is",
    "start": "2301319",
    "end": "2308760"
  },
  {
    "text": "authenticated the cookies are transferred and locally now if I do delete",
    "start": "2308760",
    "end": "2317280"
  },
  {
    "text": "me whatever it was deleting got deleted so it worked as well as it put with",
    "start": "2317280",
    "end": "2322920"
  },
  {
    "text": "refresh but that's a separate story and uh uh without refresh most even",
    "start": "2322920",
    "end": "2331359"
  },
  {
    "text": "without having that refresh say uh disabled or somehow protoc protected",
    "start": "2331359",
    "end": "2338200"
  },
  {
    "text": "from that disable uh refresh you still can have a protection from probably 90",
    "start": "2338200",
    "end": "2345520"
  },
  {
    "text": "5% of all the csrf that are done even without",
    "start": "2345520",
    "end": "2350760"
  },
  {
    "text": "user acting in in any way clicking or refreshing or doing stuff like that I",
    "start": "2350760",
    "end": "2359440"
  },
  {
    "text": "think I'm done back to mik okay so I I realized that you know the",
    "start": "2359440",
    "end": "2365599"
  },
  {
    "text": "the slides that we were going through where that's where was really going on behind the scenes we're showing you the headers where you're seeing in the",
    "start": "2365599",
    "end": "2372040"
  },
  {
    "start": "2366000",
    "end": "2446000"
  },
  {
    "text": "browser that you are protected and one of the points is that the user doesn't have to um know what's going on behind",
    "start": "2372040",
    "end": "2379560"
  },
  {
    "text": "the scenes we could propose things like browsers should support isolated tabs so that you can have this tab has its own",
    "start": "2379560",
    "end": "2387000"
  },
  {
    "text": "browsing context its own cookie context that doesn't leak into any other tabs that would be pretty cool and pretty",
    "start": "2387000",
    "end": "2393119"
  },
  {
    "text": "effective but probably the audience here is going to do that or even use separate browser one for banking one for email",
    "start": "2393119",
    "end": "2398960"
  },
  {
    "text": "etc etc but we shouldn't place that burden or expect that burden to go on to",
    "start": "2398960",
    "end": "2404560"
  },
  {
    "text": "Grandma and Grandpa or unsophisticated users we're trying to help the the entire web and help people who don't",
    "start": "2404560",
    "end": "2411480"
  },
  {
    "text": "really have to care about what security is but we're trying to be a good citizens if you will and one of the",
    "start": "2411480",
    "end": "2417480"
  },
  {
    "text": "things that I wanted to reiterate is that uh the one of the ideas behind this",
    "start": "2417480",
    "end": "2422560"
  },
  {
    "text": "approach is the WordPress problem so WordPress uh very excellent software I",
    "start": "2422560",
    "end": "2428040"
  },
  {
    "text": "use wordpress.com myself with with blogging I love it and it has a csrf",
    "start": "2428040",
    "end": "2433119"
  },
  {
    "text": "anti csrf token built into it so the developers are pretty smart the hmac is",
    "start": "2433119",
    "end": "2438319"
  },
  {
    "text": "also pretty solid it's a very nice long uh secret that they use for it as well as the the WordPress generates its own",
    "start": "2438319",
    "end": "2445560"
  },
  {
    "text": "secret the developer has their secret and for its nons it uses the two of them together however you can look for the",
    "start": "2445560",
    "end": "2452680"
  },
  {
    "start": "2446000",
    "end": "2552000"
  },
  {
    "text": "over the period over the last couple months of 2013 there's been several uh csrf vulnerabilities reported for",
    "start": "2452680",
    "end": "2460200"
  },
  {
    "text": "several different WordPress plugins and the problem is you have a defense you have a counter measure but developers",
    "start": "2460200",
    "end": "2467119"
  },
  {
    "text": "have to make sure they continue to use that countermeasure so the the fundamental theme against for all of",
    "start": "2467119",
    "end": "2472400"
  },
  {
    "text": "these WordPress uh vulnerabilities or disclosures was that the plug-in needs to use the csrf token plugin needs to",
    "start": "2472400",
    "end": "2479280"
  },
  {
    "text": "use the csrf token etc etc in this case with something like the SOS apply approach what you could say is that uh",
    "start": "2479280",
    "end": "2487000"
  },
  {
    "text": "you want your your blog your website to work like it does today so you could for example set a policy of SOS any for all",
    "start": "2487000",
    "end": "2494319"
  },
  {
    "text": "of your other cookies but perhaps set a policy of SOS self on the session ID or even you could even have a um",
    "start": "2494319",
    "end": "2503440"
  },
  {
    "text": "exception that it gets applied so that anytime anyone visits the wp-admin directory or the admin.php page bam you",
    "start": "2503440",
    "end": "2512079"
  },
  {
    "text": "throw an exception on there so that pre-flight response to the browser says hey you are not supposed to include a",
    "start": "2512079",
    "end": "2519040"
  },
  {
    "text": "cookie therefore this this plugin that still was technically CSR vulnerable",
    "start": "2519040",
    "end": "2524599"
  },
  {
    "text": "still can't be exploited because that browser isn't going to include that cookie and this is what we mean by being able to use that WAFF and be able to",
    "start": "2524599",
    "end": "2531839"
  },
  {
    "text": "retrofit these headers so that you don't have to worry about trying to go back and fix the code or relying on a very",
    "start": "2531839",
    "end": "2538599"
  },
  {
    "text": "disperate um set of developers some people that are very good very um you know 10 years of experience other",
    "start": "2538599",
    "end": "2545200"
  },
  {
    "text": "developers who've just read you know Peach in 24 hours and they've decided that they like to create a really cool",
    "start": "2545200",
    "end": "2550880"
  },
  {
    "text": "um WordPress plugin so uh social engineering did come up this perhaps could help with",
    "start": "2550880",
    "end": "2557480"
  },
  {
    "start": "2552000",
    "end": "2590000"
  },
  {
    "text": "mitigating social engineering of course uh people are very creative or or very",
    "start": "2557480",
    "end": "2563920"
  },
  {
    "text": "stupid um take your pick um and so we can't solve all all the things but we",
    "start": "2563920",
    "end": "2569400"
  },
  {
    "text": "could also recommend that you know something like SOS headers can hopefully fall into that that category of the",
    "start": "2569400",
    "end": "2575559"
  },
  {
    "text": "x-frame options headers where basically we should never really see clickjacking",
    "start": "2575559",
    "end": "2580800"
  },
  {
    "text": "attacks anymore except for older browsers or websites that haven't done",
    "start": "2580800",
    "end": "2585839"
  },
  {
    "text": "xrem options they haven't applied that header very effectively so to summarize our approach",
    "start": "2585839",
    "end": "2593319"
  },
  {
    "start": "2590000",
    "end": "2670000"
  },
  {
    "text": "we didn't rely on secrets we didn't rely on entropy we're just relying on some very simple headers we think this should",
    "start": "2593319",
    "end": "2598680"
  },
  {
    "text": "be for example easier on embedded devices embedded devices like your um uh",
    "start": "2598680",
    "end": "2605040"
  },
  {
    "text": "cable modems and DSL modems that are probably all vulnerable to csrf right now also there's fewer mistakes that",
    "start": "2605040",
    "end": "2612079"
  },
  {
    "text": "developers can make they won't be checking any secrets into GitHub or at least they won't be checking these secrets in GitHub because there are no",
    "start": "2612079",
    "end": "2618440"
  },
  {
    "text": "secrets to check in they won't be un they won't be seating the uh random number generator with the current time",
    "start": "2618440",
    "end": "2624280"
  },
  {
    "text": "of day or with a current process ID because there's no random number generator to seed they just have to make sure they can figure out what a what a",
    "start": "2624280",
    "end": "2631240"
  },
  {
    "text": "policy is between self and and isolate and then there's exceptions for allow and deny so hopefully that's a little",
    "start": "2631240",
    "end": "2637319"
  },
  {
    "text": "bit easier we think this exception based approach um can still gives you flexibility so you know cookies are",
    "start": "2637319",
    "end": "2644280"
  },
  {
    "text": "applied sitewide origin wide this policy is applied origin wide but you can also",
    "start": "2644280",
    "end": "2649880"
  },
  {
    "text": "use take advantage of pre-flight and make exceptions so one area of your website can be more secure or more",
    "start": "2649880",
    "end": "2655720"
  },
  {
    "text": "protected than another area and of course if you just don't want to play with anybody else and you say browsers",
    "start": "2655720",
    "end": "2661000"
  },
  {
    "text": "don't send me cookies unless you're coming from the same origin from my origin you just isolate it right there",
    "start": "2661000",
    "end": "2666720"
  },
  {
    "text": "so sort of think about your your banking um environment so there are two of course",
    "start": "2666720",
    "end": "2673480"
  },
  {
    "start": "2670000",
    "end": "2745000"
  },
  {
    "text": "major problems that we have to have to go over here with one is that we need to update the browsers not only so we get",
    "start": "2673480",
    "end": "2679200"
  },
  {
    "text": "more secure browsers but we need to make sure that they have they can have support for something like this or they",
    "start": "2679200",
    "end": "2685079"
  },
  {
    "text": "have support for core so you can take care of those x- csrf custom headers for example and there's good reasons that",
    "start": "2685079",
    "end": "2691680"
  },
  {
    "text": "the well I think the only good reason that I know of for people to use older browsers is if you're encouraging them",
    "start": "2691680",
    "end": "2697319"
  },
  {
    "text": "to use like the tour browser and that um uses firefox's ESR ESR release which keeps up with security patches but is",
    "start": "2697319",
    "end": "2704559"
  },
  {
    "text": "older but is very good for people that want to use tour otherwise if you're using older browsers you know make",
    "start": "2704559",
    "end": "2711359"
  },
  {
    "text": "yourself secure download something new um and of course if you are trying to fix those old browsers you're still",
    "start": "2711359",
    "end": "2717079"
  },
  {
    "text": "really going to have to rely on those csrf tokens so csrf tokens aren't going to go away and as I mentioned before the",
    "start": "2717079",
    "end": "2723079"
  },
  {
    "text": "adoption of hsts has not been across the board and SEC has not been become",
    "start": "2723079",
    "end": "2729280"
  },
  {
    "text": "ubiquitous so just because we have Solutions doesn't mean people use those Solutions and that's Pro that's one of",
    "start": "2729280",
    "end": "2735760"
  },
  {
    "text": "the reasons that every year black hat Defcon still get to show off zero days and still get to show off new",
    "start": "2735760",
    "end": "2741400"
  },
  {
    "text": "vulnerabilities against old software and new software so if we were to leave you with",
    "start": "2741400",
    "end": "2747400"
  },
  {
    "start": "2745000",
    "end": "2791000"
  },
  {
    "text": "some final comments it would be start using hsts it's just better for many other reasons than csrf but it has some",
    "start": "2747400",
    "end": "2754559"
  },
  {
    "text": "incidental benefits as well start using cores consider using that because if we",
    "start": "2754559",
    "end": "2760160"
  },
  {
    "text": "are going to get SOS convinced in or convinced some uh browser developers to implement this and websites to actually",
    "start": "2760160",
    "end": "2767040"
  },
  {
    "text": "think this would be useful we of course need somebody to uh help us along so we",
    "start": "2767040",
    "end": "2772119"
  },
  {
    "text": "thank you for your time uh come tomorrow to listen to V and a colleague of his talk about another HP uh Deni of service",
    "start": "2772119",
    "end": "2779440"
  },
  {
    "text": "sort of analysis tool and um we hope you have a good black hat thank you",
    "start": "2779440",
    "end": "2787040"
  }
]