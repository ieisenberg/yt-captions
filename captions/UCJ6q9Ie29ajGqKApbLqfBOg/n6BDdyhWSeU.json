[
  {
    "text": "[Music]",
    "start": "4360",
    "end": "14160"
  },
  {
    "text": "hello and welcome to our talk titled root topsy where we'll discuss modern routine protocol vulnerability analysis",
    "start": "14960",
    "end": "20800"
  },
  {
    "text": "and exploitation i'm shimon jakovsky i've been hacking at corporate networks for over three years before that i was a",
    "start": "20800",
    "end": "26640"
  },
  {
    "text": "student at university of pretoria i enjoy application security and writing code",
    "start": "26640",
    "end": "31840"
  },
  {
    "text": "you can catch me on twitter at the goat farmer hi everybody my name is tyron kemp i have roughly four years of networking",
    "start": "31840",
    "end": "38239"
  },
  {
    "text": "and network security experience i'm working towards three years of pen testing experience my twitter android is",
    "start": "38239",
    "end": "43440"
  },
  {
    "text": "tcampax i don't really know how twitter works or any application for that matter",
    "start": "43440",
    "end": "48640"
  },
  {
    "text": "i enjoy hacking infrastructure myself and simon are both security analysts at orange civil defense",
    "start": "48640",
    "end": "54320"
  },
  {
    "text": "we're part of the census team and we want to become your neighbour and what we mean by that is we want to show you how to identify some cool",
    "start": "54320",
    "end": "60719"
  },
  {
    "text": "vulnerabilities using wireshark um how our initial attempts looked at at performing these exploit on these",
    "start": "60719",
    "end": "66720"
  },
  {
    "text": "vulnerable protocols what are the impacts of these expectations and some of the challenges that we face",
    "start": "66720",
    "end": "72479"
  },
  {
    "text": "or you may face in attacking these protocols and then finally our toolkit attempts to address some of these challenges",
    "start": "72479",
    "end": "80159"
  },
  {
    "text": "so we went on some pen tests and on reoccurring occasions we saw these dynamic reading protocols and first off",
    "start": "80159",
    "end": "85680"
  },
  {
    "text": "redundancy protocols being played into some sort of a user network space so i took it would like to you know",
    "start": "85680",
    "end": "93119"
  },
  {
    "text": "tilku we'd like to include a bunch of network related attacks but for now we're focusing on the these two classes and they are similar",
    "start": "93119",
    "end": "100799"
  },
  {
    "text": "in the way that you can manipulate traffic flows but for now understand that dynamic routing protocols",
    "start": "100799",
    "end": "106159"
  },
  {
    "text": "root traffic between multiple networks whereas a first stop redundancy protocol is more of a high availability",
    "start": "106159",
    "end": "112840"
  },
  {
    "text": "mechanism so there's a lot of acronyms and jargon and alphabet soup going to be thrown at you",
    "start": "112840",
    "end": "119680"
  },
  {
    "text": "please try and stay with us for the some of the the fhrp sounds similar to the drp so it gets confusing",
    "start": "119680",
    "end": "125840"
  },
  {
    "text": "but in the drp stack we're going to focus on eigrp and ospf and the fhrp stack we're going to focus",
    "start": "125840",
    "end": "132319"
  },
  {
    "text": "on hsrp during this talk so why are we doing this",
    "start": "132319",
    "end": "137360"
  },
  {
    "text": "like i said with on multiple painters we saw these things being bled into different networks and it's we're not",
    "start": "137360",
    "end": "143280"
  },
  {
    "text": "finding these um vulnerabilities in certain topologies or bound to a certain industry we're in about we're seeing them in a",
    "start": "143280",
    "end": "149840"
  },
  {
    "text": "bunch of different corporate networks being at isps being at banks being a smaller type of",
    "start": "149840",
    "end": "155200"
  },
  {
    "text": "we're really seeing them all over the show additionally these dynamic reading",
    "start": "155200",
    "end": "160800"
  },
  {
    "text": "protocols are being used in kubernetes kubernetes makes use of container network interfaces",
    "start": "160800",
    "end": "166000"
  },
  {
    "text": "or often referred to as cni's and for example you get a cni called ramana",
    "start": "166000",
    "end": "171519"
  },
  {
    "text": "which makes use of ospf and then there's another one called calico which makes use of pgp",
    "start": "171519",
    "end": "178159"
  },
  {
    "text": "so we're going to give you a little bit of a background on what the purposes of a drp and fhrp is but before we do that let's",
    "start": "178159",
    "end": "185680"
  },
  {
    "text": "explain what a static group is so if i want to route from the 10 network to the 40 network i need to add",
    "start": "185680",
    "end": "191360"
  },
  {
    "text": "a route from router a to router b and for it to be 2 to c and then you need to take care of the rim",
    "start": "191360",
    "end": "196879"
  },
  {
    "text": "turn part as well so you need to add a router back a route back from root through to c through to b and root to b through",
    "start": "196879",
    "end": "203120"
  },
  {
    "text": "to a so that's quite tedious just explaining like static routing between three little net three little routers so now imagine",
    "start": "203120",
    "end": "209360"
  },
  {
    "text": "yourself in this large corporate network with 100 routers and a thousand different networks",
    "start": "209360",
    "end": "214480"
  },
  {
    "text": "and now you need to configure all these static routes um indicated by the blue arrows on the slide and then you probably need to take care",
    "start": "214480",
    "end": "220799"
  },
  {
    "text": "of some high availability as well so you need to go configure extra static routes with different metrics and priorities to",
    "start": "220799",
    "end": "226720"
  },
  {
    "text": "ensure that you can have failover or high availability in your network so that's not really a scalable solution",
    "start": "226720",
    "end": "232560"
  },
  {
    "text": "so that's why we have dynamic routing protocols so instead of configuring these bunches of these bunch of static",
    "start": "232560",
    "end": "238239"
  },
  {
    "text": "routes you can configure a protocol like ospf or eigrp or",
    "start": "238239",
    "end": "243280"
  },
  {
    "text": "etc etc on your router and it will become a neighbor with its adjacent router and the neighboring",
    "start": "243280",
    "end": "249040"
  },
  {
    "text": "concept is something that we will refer to throughout the talk so once you configure these protocols on the routers",
    "start": "249040",
    "end": "255360"
  },
  {
    "text": "um it will take care of automatically sharing the network information and it will also take care of the automatic like failover if if a link",
    "start": "255360",
    "end": "262400"
  },
  {
    "text": "where to drop in terms of first op redundancy protocols um",
    "start": "262400",
    "end": "268560"
  },
  {
    "text": "is sort of a logical group between created between an active and a standby group a virtual mac address is assigned",
    "start": "268560",
    "end": "273840"
  },
  {
    "text": "to this logical grouping and should the active device fail over then the virtual mac then the new active",
    "start": "273840",
    "end": "280800"
  },
  {
    "text": "appointed router will respond to this virtual mac address so there might be a network failure but",
    "start": "280800",
    "end": "286639"
  },
  {
    "text": "it would be transparent to the user and the traffic which is flow as expected so simon don't you want to show us where",
    "start": "286639",
    "end": "293759"
  },
  {
    "text": "you can find these vulnerabilities or how to look for them yeah so how can we look for it well let's open up a packet capture",
    "start": "293759",
    "end": "300000"
  },
  {
    "text": "for instance wireshark and if we take a look at the very first cap pack we've captured it's an eigrp hello",
    "start": "300000",
    "end": "307360"
  },
  {
    "text": "packet right and so when we've got these uh packets coming in there are certain fields we want to look out for",
    "start": "307360",
    "end": "313600"
  },
  {
    "text": "because we need these same values for our router if we would like to neighbor up or perform an attack in the",
    "start": "313600",
    "end": "320240"
  },
  {
    "text": "case of eigrp the very first thing that we want to take note of is the autonomous",
    "start": "320240",
    "end": "325600"
  },
  {
    "text": "system number in this case it's 100 so we would have to configure our router to have the same autonomous system number",
    "start": "325600",
    "end": "332000"
  },
  {
    "text": "so we can neighbor up with the router 192 168 100 1. now you'll notice that in that",
    "start": "332000",
    "end": "338240"
  },
  {
    "text": "packet capture there was no authentication and so we can perform a very simple or easy to do attack",
    "start": "338240",
    "end": "344240"
  },
  {
    "text": "we don't have to worry about that but taran what if there was authentication well there's two variants of this so",
    "start": "344240",
    "end": "350320"
  },
  {
    "text": "either it would be plain text it would be hashed and if it's plain text would you exactly the same thing you'd look at the packet capture you'd",
    "start": "350320",
    "end": "356240"
  },
  {
    "text": "extract the plain text password and include that into your sort of attacker config",
    "start": "356240",
    "end": "361280"
  },
  {
    "text": "but what would happen if it were hashed or there was some crypto applied so if there was some crypto applied we",
    "start": "361280",
    "end": "367840"
  },
  {
    "text": "would then take that packet capture and we could run it through something like ethercap which would parse these packets and then",
    "start": "367840",
    "end": "374400"
  },
  {
    "text": "form or rather create a hash of from that data that can be then supplied into a",
    "start": "374400",
    "end": "380560"
  },
  {
    "text": "password cracker for example john the ripper take a good word list and you may be able to crack it once",
    "start": "380560",
    "end": "386479"
  },
  {
    "text": "you've cracked that password you can configure your router with this new password and now it can attempt to neighbor up so",
    "start": "386479",
    "end": "391840"
  },
  {
    "text": "let's take a look at a packet with encrypt with a password and specifically",
    "start": "391840",
    "end": "397120"
  },
  {
    "text": "crypto so if we have a look over here this is an eigrp hello packet and if we take note over there is now an",
    "start": "397120",
    "end": "404319"
  },
  {
    "text": "authentication md5 and it's got various bits of data which we won't easily understand but something like ethercap would be",
    "start": "404319",
    "end": "411120"
  },
  {
    "text": "able to easily take this data create the right hash and then we can supply that to a",
    "start": "411120",
    "end": "416720"
  },
  {
    "text": "password cracker like john the ripper now let's take a look at that's another",
    "start": "416720",
    "end": "422639"
  },
  {
    "text": "dynamic routine protocol and in here there are different other fields that we need to take note",
    "start": "422639",
    "end": "428000"
  },
  {
    "text": "of in this case the first field is the area id then we notice that there's authentication",
    "start": "428000",
    "end": "434960"
  },
  {
    "text": "but this is of type simple password or clear text and so we won't have to involve",
    "start": "434960",
    "end": "440240"
  },
  {
    "text": "something like ethercat to extract it and crack it we can easily observe the clear text password and then use that in our router we then",
    "start": "440240",
    "end": "448160"
  },
  {
    "text": "take note of the hello interval and the dead interval and that's pretty much it for ospf now when we look at",
    "start": "448160",
    "end": "456240"
  },
  {
    "text": "something like hsrp which is a first top redundancy protocol there are a few things to take note of",
    "start": "456240",
    "end": "461759"
  },
  {
    "text": "but first we need to make sure that we're looking at packets from the with the active state",
    "start": "461759",
    "end": "467680"
  },
  {
    "text": "because this is important for us to carry out the attack we need to make sure our priority is",
    "start": "467680",
    "end": "472800"
  },
  {
    "text": "much higher than that of the active router then we take note of the hello and the",
    "start": "472800",
    "end": "478400"
  },
  {
    "text": "hold time which are 3 and 10 seconds the default values and then we can see the priority value for",
    "start": "478400",
    "end": "484319"
  },
  {
    "text": "this specific router or d4 gateway which is also active is 150",
    "start": "484319",
    "end": "489440"
  },
  {
    "text": "and so our priority if we would want to attack this protocol has to be much higher than that",
    "start": "489440",
    "end": "495120"
  },
  {
    "text": "if we then look at the group number we also need to get this right so we form part of the logical grouping we would like to attack",
    "start": "495120",
    "end": "502240"
  },
  {
    "text": "you can also see that there is authentication data and in this case as a default cisco by default these are configured with",
    "start": "502240",
    "end": "509280"
  },
  {
    "text": "cisco and in clear text and lastly is the virtual ip address this is the ip address",
    "start": "509280",
    "end": "515120"
  },
  {
    "text": "that the users on the current network are configured configured with as the default gateway",
    "start": "515120",
    "end": "522240"
  },
  {
    "text": "so how do these issues creep into a network well one such way would be through minimal configuration if we take a look at",
    "start": "522240",
    "end": "528880"
  },
  {
    "text": "router 1 and its configuration for ospf there is a network statement that is very wide",
    "start": "528880",
    "end": "534399"
  },
  {
    "text": "and this basically means that ospf hello packets would bleed out to all the networks of this connected to",
    "start": "534399",
    "end": "541279"
  },
  {
    "text": "the interfaces of this router if we take a look at the second ospf configuration",
    "start": "541279",
    "end": "546560"
  },
  {
    "text": "on uh routine number r2 there's two network statements in here a bit more",
    "start": "546560",
    "end": "553040"
  },
  {
    "text": "specific but still a bit too overboard networks interfaces connected to the networks of",
    "start": "553040",
    "end": "561040"
  },
  {
    "text": "says 192.168.1024 and 192 168 20 25 would have then ospf packers bleed",
    "start": "561040",
    "end": "567519"
  },
  {
    "text": "out to them now let's take a look at kubernetes so in kubernetes taran mentioned there are",
    "start": "567519",
    "end": "574560"
  },
  {
    "text": "cni's and once that cni is ramona ramona allows us to configure ospf within this",
    "start": "574560",
    "end": "580080"
  },
  {
    "text": "cluster say we would like to join this cluster or rather share dynamic routing",
    "start": "580080",
    "end": "585920"
  },
  {
    "text": "information between a cluster and a your traditional network well",
    "start": "585920",
    "end": "590959"
  },
  {
    "text": "so a person that's typically configuring a kubernetes cluster is a person of a devops background and not",
    "start": "590959",
    "end": "596959"
  },
  {
    "text": "necessarily a network engineer and in there they may have also some issues trying to configure",
    "start": "596959",
    "end": "603120"
  },
  {
    "text": "ramona on a cluster where there are multiple os is used and because os's sometimes have",
    "start": "603120",
    "end": "609200"
  },
  {
    "text": "different naming schemes for interfaces they may not know what the interfaces of all of the",
    "start": "609200",
    "end": "614560"
  },
  {
    "text": "nodes are so they may use a wild card which would then lead to ospf bleeding",
    "start": "614560",
    "end": "619600"
  },
  {
    "text": "to all the networks that the nodes are attached to tyron where would you find this on a network",
    "start": "619600",
    "end": "625760"
  },
  {
    "text": "simon that's a really good question but before we go into that i just want to reiterate that we sort of have a rudimentary understanding of",
    "start": "625760",
    "end": "632000"
  },
  {
    "text": "where these protocols fit into the network and that we've shown how to identify them the process is similar",
    "start": "632000",
    "end": "637360"
  },
  {
    "text": "you open up the capture you look at the multicast packets and you know you apply your config according to that but let's consider ourselves",
    "start": "637360",
    "end": "644320"
  },
  {
    "text": "connected to the the access layer the switches denoted in the slides and you're and which part which like",
    "start": "644320",
    "end": "650480"
  },
  {
    "text": "which protocols are we likely to find in that layer um you're likely to find something like hsrp providing you with a default",
    "start": "650480",
    "end": "657120"
  },
  {
    "text": "gateway however if you find yourself in a network or you've pivoted to a network where you have layer 2 connectivity to a",
    "start": "657120",
    "end": "663519"
  },
  {
    "text": "router or a firewall you're likely to find a dynamic routing protocol because these appliances support such protocols",
    "start": "663519",
    "end": "669519"
  },
  {
    "text": "other than that firewalls and routers often make use of the rp to achieve io availability so if again",
    "start": "669519",
    "end": "675839"
  },
  {
    "text": "if configured insecurely or incorrectly that could bleed into that local segment as well other than that",
    "start": "675839",
    "end": "683279"
  },
  {
    "text": "we mentioned kubernetes using their cnis and they support drps so if you were able to influence rooting",
    "start": "683279",
    "end": "689519"
  },
  {
    "text": "within kubernetes that may bleed into or propagate into the traditional network and vice versa",
    "start": "689519",
    "end": "694959"
  },
  {
    "text": "so what what's the what's the impact of these type of attacks well consider yourself the red workstation on",
    "start": "694959",
    "end": "702560"
  },
  {
    "text": "the slide you've connected to a lan and you have knowledge of the computers in your sort of lan segment and you have a default",
    "start": "702560",
    "end": "709040"
  },
  {
    "text": "pointing to your default gateway but you haven't learned anything yet you start interfacing with the default routing protocol",
    "start": "709040",
    "end": "714560"
  },
  {
    "text": "and you learn of these new networks you learn of the finance and union of the server network so you've literally just neighbored up",
    "start": "714560",
    "end": "720000"
  },
  {
    "text": "with the routing protocol you haven't you haven't done anything malicious as of yet but the benefit of this is",
    "start": "720000",
    "end": "725760"
  },
  {
    "text": "from an attacker's perspective you don't have to go an nmap big slash 16s or mascara or what whichever tool you",
    "start": "725760",
    "end": "731040"
  },
  {
    "text": "prefer using you've learned exactly which networks are active within within this organization so it takes",
    "start": "731040",
    "end": "737839"
  },
  {
    "text": "it's sort of cool in terms of enumeration you have a lot more accurate description of what's going on and you can pinpoint your attacks a",
    "start": "737839",
    "end": "745120"
  },
  {
    "text": "little bit better so that's cool you can neighbor up but can we take it further yes we can take",
    "start": "745120",
    "end": "750639"
  },
  {
    "text": "it further so consider the traffic flow indicated by the blue arrows sort of a normal traffic flow of a user",
    "start": "750639",
    "end": "756480"
  },
  {
    "text": "in the finance department accessing a erp server and in the server vlan so",
    "start": "756480",
    "end": "761519"
  },
  {
    "text": "what can we do we can inject routes with uh higher priorities or let's call it higher",
    "start": "761519",
    "end": "766560"
  },
  {
    "text": "priorities for now to redirect that traffic from the finance from from the use it to our malicious attacker control",
    "start": "766560",
    "end": "773760"
  },
  {
    "text": "pc so that's pretty useful um you know getting ei your erp traffic on your attacker machine",
    "start": "773760",
    "end": "779519"
  },
  {
    "text": "could could probably have some devastating impacts right in terms of fhrps um",
    "start": "779519",
    "end": "786160"
  },
  {
    "text": "what could happen over here again we we said there's a logical grouping with this priority and then the higher priority becomes the",
    "start": "786160",
    "end": "792959"
  },
  {
    "text": "active device in this logical group so from an attacker's perspective we can just assign i o priority to",
    "start": "792959",
    "end": "798480"
  },
  {
    "text": "ourselves and then the user's traffic will be redirected would be",
    "start": "798480",
    "end": "803920"
  },
  {
    "text": "directed towards us and then we would just forward that traffic onto the legitimate default gateway",
    "start": "803920",
    "end": "811040"
  },
  {
    "text": "okay so it's important to mention some of the challenges with these type of attacks so you need to get specific and what we",
    "start": "811200",
    "end": "816639"
  },
  {
    "text": "mean by that is you need to inject more specific routes that's currently in the routing table so",
    "start": "816639",
    "end": "821920"
  },
  {
    "text": "you can join the routing table observe some routes in there and then if you observe that there's a",
    "start": "821920",
    "end": "827120"
  },
  {
    "text": "slash 24 network split that network into two advertised two 25s and that traffic is going to get redirected back to you so",
    "start": "827120",
    "end": "833279"
  },
  {
    "text": "that's all what we mean by saying get be more specific there are other things to consider",
    "start": "833279",
    "end": "838399"
  },
  {
    "text": "such as administrative distance and then the per protocol metric and for the purpose of this talk we're",
    "start": "838399",
    "end": "843680"
  },
  {
    "text": "just saying be more specific and that's how we're going to beat the routing table how did we do this initially we were",
    "start": "843680",
    "end": "850000"
  },
  {
    "text": "connected to a lan we opened up wireshark exactly how we shown and we saw these vulnerable packets being unauthenticated",
    "start": "850000",
    "end": "856320"
  },
  {
    "text": "and you know we wanted to export it so we started researching for some tools and honestly we were able to configure a",
    "start": "856320",
    "end": "863279"
  },
  {
    "text": "virtual firewall in a quicker fashion than it was to get the existing tools up and running so how does it look let's uh let's go through a",
    "start": "863279",
    "end": "870160"
  },
  {
    "text": "demo and show you what how you can do that with the virtual firewall okay so on the",
    "start": "870160",
    "end": "875279"
  },
  {
    "text": "left we have a wireshark capture running on the attacker machine and you can see some ospf hello packets",
    "start": "875279",
    "end": "880959"
  },
  {
    "text": "so at this point in time you should get excited just seeing the packets never mind like whether it's aust or not",
    "start": "880959",
    "end": "886639"
  },
  {
    "text": "it's a it's a good sign already on the right-hand side we have our attacker fortigate which is essentially",
    "start": "886639",
    "end": "892000"
  },
  {
    "text": "our rogue router or rogue firewall and all that we have to do is match the parameters in the hello packet and",
    "start": "892000",
    "end": "897120"
  },
  {
    "text": "configure them in the fortigate and then we'll become a routing neighbor so you can see that there's no auth data",
    "start": "897120",
    "end": "902160"
  },
  {
    "text": "so it's going to be a really easy attack no cracking required some other fields we need to take note of is the area id the alloy interval",
    "start": "902160",
    "end": "909279"
  },
  {
    "text": "and the dead interval so we're just going to match those parameters in the firewall and you know pretty simple copy paste so",
    "start": "909279",
    "end": "916240"
  },
  {
    "text": "when we head over to the firewall section we're going to configure a router id that's just our unique identifier within this process we're",
    "start": "916240",
    "end": "923360"
  },
  {
    "text": "going to add the area which we observe to be a squad zero and we're going to say on which",
    "start": "923360",
    "end": "929120"
  },
  {
    "text": "interfaces do we want to send out our our hello packets and we're going to match that ip address i'm displayed at",
    "start": "929120",
    "end": "935040"
  },
  {
    "text": "the top url bar so only out this one interface we need to add the interface as well so",
    "start": "935040",
    "end": "942079"
  },
  {
    "text": "you're going to give it a name you're going to specify the interface on which we're sniffing and we're going to put in the hello and the dead interval",
    "start": "942079",
    "end": "947600"
  },
  {
    "text": "which we observed on the left hand side once we applied this configuration you're going to see in the wire shock",
    "start": "947600",
    "end": "953440"
  },
  {
    "text": "there's going to be some ospf conversation happening and that's when the routing information is going to",
    "start": "953440",
    "end": "958480"
  },
  {
    "text": "start sharing so it should take a second and you're going to see some some movement in the wireshark capture",
    "start": "958480",
    "end": "964079"
  },
  {
    "text": "and then you can see the ls update packets sharing the routing information so it should take a couple of seconds and then this state",
    "start": "964079",
    "end": "971839"
  },
  {
    "text": "would have been processed and both routers would have been shared the routing information so let's give it a second and let's see",
    "start": "971839",
    "end": "977920"
  },
  {
    "text": "if the fortigate had learned any new routes there we go we've learned some a bunch",
    "start": "977920",
    "end": "982959"
  },
  {
    "text": "of new routes so pretty cool we haven't really done anything malicious as such but we've learned of new targets",
    "start": "982959",
    "end": "988720"
  },
  {
    "text": "and this is more accurate accurate way of enumerating targets",
    "start": "988720",
    "end": "994399"
  },
  {
    "text": "so simon what's the bad what's bad about taking this approach so there are a few issues that we",
    "start": "994399",
    "end": "999680"
  },
  {
    "text": "experienced when we took this initial approach the very first is that you require access to such firmware",
    "start": "999680",
    "end": "1004800"
  },
  {
    "text": "which is not easily available and then you also require the knowledge of first what to look out for in the",
    "start": "1004800",
    "end": "1010560"
  },
  {
    "text": "specific protocols and then how to configure such a device which is again not easily accessible then with regards",
    "start": "1010560",
    "end": "1018800"
  },
  {
    "text": "to the existing tooling well because they haven't been maintained and because of that uh",
    "start": "1018800",
    "end": "1024160"
  },
  {
    "text": "they have dependency issues which is just very tricky to get up and running so we found the",
    "start": "1024160",
    "end": "1029280"
  },
  {
    "text": "virtual firewall to be much easier than the existing tooling but at that point then we noticed that",
    "start": "1029280",
    "end": "1035438"
  },
  {
    "text": "there is a a recurring pattern ovr in that we can easily extract data or rather we",
    "start": "1035439",
    "end": "1042640"
  },
  {
    "text": "can automate the process of extracting the important fields then writing up a configuration for that",
    "start": "1042640",
    "end": "1048400"
  },
  {
    "text": "and take a legitimate virtual router and apply this configuration to that router",
    "start": "1048400",
    "end": "1053760"
  },
  {
    "text": "and in in essence making it attack the network so we wrote up a tool",
    "start": "1053760",
    "end": "1060480"
  },
  {
    "text": "called root topsy which helps us achieve this where it will first perform a packet capture take that",
    "start": "1060480",
    "end": "1067360"
  },
  {
    "text": "data and then uh and make the router kind of attack the network",
    "start": "1067360",
    "end": "1072960"
  },
  {
    "text": "and that's done using python and docker sdk with a few docker containers",
    "start": "1072960",
    "end": "1078799"
  },
  {
    "text": "and then some other extra bits to it so with more more specifically we're using",
    "start": "1078799",
    "end": "1084240"
  },
  {
    "text": "a fr router which we then weaponize with these configurations that",
    "start": "1084240",
    "end": "1089840"
  },
  {
    "text": "we've got to perform these attacks some of the code or rather the protocols",
    "start": "1089840",
    "end": "1095280"
  },
  {
    "text": "have code specific to it because they are cisco proprietary but others such as your dynamic routing",
    "start": "1095280",
    "end": "1102080"
  },
  {
    "text": "protocols well they've already been implemented in fr so we do not have to recode the entire",
    "start": "1102080",
    "end": "1107120"
  },
  {
    "text": "protocol the high level overview of root topsy is that it will first perform a scan",
    "start": "1107120",
    "end": "1113200"
  },
  {
    "text": "where it will perform a packet capture take in these packets and then extract the various information",
    "start": "1113200",
    "end": "1118960"
  },
  {
    "text": "and build up a configuration this configuration it stops at this configuration it does not go any further",
    "start": "1118960",
    "end": "1124960"
  },
  {
    "text": "unless we tell it to attack in the attack it would spin up the virtual router",
    "start": "1124960",
    "end": "1130000"
  },
  {
    "text": "and apply the configuration on top which would then have it go and neighbor up we can take it one step further because",
    "start": "1130000",
    "end": "1136720"
  },
  {
    "text": "attack just neighbors up where we can now inject roots and so once we supplied",
    "start": "1136720",
    "end": "1141760"
  },
  {
    "text": "a root this would just ah change the configuration in a little bit in a small way and that",
    "start": "1141760",
    "end": "1147200"
  },
  {
    "text": "will now have the roots injected into the whole network which taran will demonstrate",
    "start": "1147200",
    "end": "1152880"
  },
  {
    "text": "sure so we're going to demonstrate um learning new routes um add well first learning",
    "start": "1152880",
    "end": "1159679"
  },
  {
    "text": "enumerating networks i guess is phase one phase two is joining the routing neighbor and then phase three adding",
    "start": "1159679",
    "end": "1164960"
  },
  {
    "text": "some routes which will eventually lead us in directing traffic to an attacker controlled machine",
    "start": "1164960",
    "end": "1170559"
  },
  {
    "text": "so before we start off with the demo let's get a quick lay of the lan we",
    "start": "1170559",
    "end": "1176000"
  },
  {
    "text": "realize there's a lot going on in the screen that's why we're sort of giving a short briefing before we started running attacks",
    "start": "1176000",
    "end": "1182080"
  },
  {
    "text": "more specifically the top left is our attacker's routing table we're running a watch command on there",
    "start": "1182080",
    "end": "1187679"
  },
  {
    "text": "and as we perform our attacks that routing table will update dynamically on the top right we",
    "start": "1187679",
    "end": "1193919"
  },
  {
    "text": "that's where we'll be running our root optic commands from essentially our attacks and like i",
    "start": "1193919",
    "end": "1199280"
  },
  {
    "text": "mentioned at the bottom left is the router and in the bottom right our victim so let's start off",
    "start": "1199280",
    "end": "1204640"
  },
  {
    "text": "with a demo on the top right we're going to perform our attack and all you really need to take note of",
    "start": "1204640",
    "end": "1210799"
  },
  {
    "text": "for now is that our ip address is 192.168.76.170. um just keep that in the back of your",
    "start": "1210799",
    "end": "1217440"
  },
  {
    "text": "mind it's not super important to remember throughout but it's nice to have in the back of your mind if we go to the bottom left we look at",
    "start": "1217440",
    "end": "1224000"
  },
  {
    "text": "our router we take note of that ip address as well you'll see later why these ip addresses matter you can see that that rp address",
    "start": "1224000",
    "end": "1230880"
  },
  {
    "text": "is 76.208 also take note that we have two ospf",
    "start": "1230880",
    "end": "1236159"
  },
  {
    "text": "neighbors at this point in time after our attacks will have three neighbors so we've mentioned there's a victim in the bottom right",
    "start": "1236159",
    "end": "1242159"
  },
  {
    "text": "the victim is doing some dns queries and connecting to an ftp server and this is",
    "start": "1242159",
    "end": "1247200"
  },
  {
    "text": "essentially the traffic that we want to modify we're running a wireshark on our",
    "start": "1247200",
    "end": "1252320"
  },
  {
    "text": "attacker machine we're filtering for ftp and we're seeing that there's no traffic traversing",
    "start": "1252320",
    "end": "1257520"
  },
  {
    "text": "through this this ftp and after our attack will show the wireshark again so let's start the attack let's start",
    "start": "1257520",
    "end": "1263120"
  },
  {
    "text": "off with the scan flag and like simon mentioned this is just going to look for",
    "start": "1263120",
    "end": "1268159"
  },
  {
    "text": "vulnerable packets parse them and then take the relevant parameters and push them into our config templates",
    "start": "1268159",
    "end": "1274559"
  },
  {
    "text": "so now you can see that we've detected vulnerable eigrp and ospf and let's go look at what the",
    "start": "1274559",
    "end": "1280480"
  },
  {
    "text": "configurations look for these what these configurations look like for these protocols so you can see",
    "start": "1280480",
    "end": "1285520"
  },
  {
    "text": "um we've paused the autonomous system number number hundred and we've included that into our config root",
    "start": "1285520",
    "end": "1290799"
  },
  {
    "text": "eog hundred um other than that you can see um in our network statement is our interface",
    "start": "1290799",
    "end": "1297280"
  },
  {
    "text": "ip address that we we showed initially um and all this is doing is it's ensuring that we're only sending",
    "start": "1297280",
    "end": "1302480"
  },
  {
    "text": "these out packets out of our specific interface only our one interface and not a bunch of other ones so it's pretty simple",
    "start": "1302480",
    "end": "1309120"
  },
  {
    "text": "let's look at the ospf configuration as well it's a little bit more to take note of but it's also pretty similar",
    "start": "1309120",
    "end": "1316240"
  },
  {
    "text": "you can take note that we've paused the hello interval and the dead interval from the vulnerable packets and we've included that into our config template",
    "start": "1316240",
    "end": "1322640"
  },
  {
    "text": "again our network statement includes our iop address to reiterate it's ensuring that we're",
    "start": "1322640",
    "end": "1327919"
  },
  {
    "text": "only sending these hello packets out of this one interface and you can see that we've also parsed the area id from the pick up and",
    "start": "1327919",
    "end": "1333760"
  },
  {
    "text": "included that into the template so at this point in time you know nothing's happened we haven't",
    "start": "1333760",
    "end": "1339679"
  },
  {
    "text": "interfaced with the protocol we haven't attacked anything we haven't really achieved what we achieved with the fortigate",
    "start": "1339679",
    "end": "1345039"
  },
  {
    "text": "so we could do that without to you just simply substitute the attack flag with the scan flow the scan",
    "start": "1345039",
    "end": "1350080"
  },
  {
    "text": "flag with the attack flag but that's a little bit boring we want to meddle with traffic flows and we want to inject and read",
    "start": "1350080",
    "end": "1355120"
  },
  {
    "text": "and perform some redirection so what do we do we specify the inject and the redirect flags",
    "start": "1355120",
    "end": "1360400"
  },
  {
    "text": "and they work slightly differently in terms of the conflict input's exactly the same but the inject flag will forward traffic",
    "start": "1360400",
    "end": "1367600"
  },
  {
    "text": "onto your default gateway whereas the redirect flag will sort of make the traffic stop on your endpoint which is useful for maybe",
    "start": "1367600",
    "end": "1374159"
  },
  {
    "text": "a honey potting scenario or if you wanted to run a soak at then for the traffic onto some other endpoint you know or process",
    "start": "1374159",
    "end": "1380400"
  },
  {
    "text": "it in whichever way you want it to so again what what's happened now is",
    "start": "1380400",
    "end": "1385840"
  },
  {
    "text": "our inject and our redirect flags imply attack which also imply scan so it passed those vulnerable packets",
    "start": "1385840",
    "end": "1392960"
  },
  {
    "text": "both config templates but now it's deployed into a container and you can see some activity happening",
    "start": "1392960",
    "end": "1398159"
  },
  {
    "text": "on the panes so we'll explain what's happening if we look at the bottom left pane",
    "start": "1398159",
    "end": "1403840"
  },
  {
    "text": "you'll see that there's some ospf activity um being logged from the router saying loading to full meaning that",
    "start": "1403840",
    "end": "1410880"
  },
  {
    "text": "there's a state change in the in in the router's ospf we've become a neighbor with that router effectively",
    "start": "1410880",
    "end": "1416480"
  },
  {
    "text": "doing what we did with the 48 other than that in the top left pane you can see our",
    "start": "1416480",
    "end": "1421919"
  },
  {
    "text": "attacker machine is starting to make some changes and you can see that the routes were automatically added to our attack machine so this same thing",
    "start": "1421919",
    "end": "1428240"
  },
  {
    "text": "that you saw in the fortigate we've learned routes we now have new targets to go after so",
    "start": "1428240",
    "end": "1434159"
  },
  {
    "text": "more importantly if you have a look at the victim you can see that the victim's dna square has changed to 1.337",
    "start": "1434159",
    "end": "1439200"
  },
  {
    "text": "and the ftp trace route has gone from three ups to five so we've successfully changed the traffic flow",
    "start": "1439200",
    "end": "1445840"
  },
  {
    "text": "but you know i guess it's important to mention that you don't have to follow out templates",
    "start": "1445840",
    "end": "1451840"
  },
  {
    "text": "you don't have to use the inject and direct redirect you can specify the attack flag",
    "start": "1451840",
    "end": "1456880"
  },
  {
    "text": "and then you can go perform your own type of attack should you be comfortable with a router interface but",
    "start": "1456880",
    "end": "1463279"
  },
  {
    "text": "nonetheless let's let's have a look at what these flags do and what the template is that we've built for them",
    "start": "1463279",
    "end": "1468640"
  },
  {
    "text": "so on the top right pane going from top to bottom you'll see that we added static routes",
    "start": "1468640",
    "end": "1474000"
  },
  {
    "text": "pointing to the null interface and the ip addresses match the flags that we've specified then if we move over to our sort of host",
    "start": "1474000",
    "end": "1481440"
  },
  {
    "text": "machine again the root and then you'll see these static routes added to our os machine indicated with the asterix and that",
    "start": "1481440",
    "end": "1487279"
  },
  {
    "text": "asterisk is saying that it's a null route so at this point in time you may be thinking why are you guys adding things to the",
    "start": "1487279",
    "end": "1493120"
  },
  {
    "text": "null to the null interface because it's going to drop the traffic we'll explain that now so we still get that null um that null",
    "start": "1493120",
    "end": "1499440"
  },
  {
    "text": "route into ospf and how we do that is we specify the redistribute command we can go verify on the router that you",
    "start": "1499440",
    "end": "1506000"
  },
  {
    "text": "know those routes are within the ospf process and you can see their quad 8 and the 164 address is really within the",
    "start": "1506000",
    "end": "1511840"
  },
  {
    "text": "ospf process we'll hop over back to the to our attacker machine and you know",
    "start": "1511840",
    "end": "1517679"
  },
  {
    "text": "we asked that question again okay cool we've we've advertised these routes into the routing process but surely it's going to go to the null",
    "start": "1517679",
    "end": "1523760"
  },
  {
    "text": "interface um how do we get around that uh we apply some policy-based routing so you'll see these policy-based routing",
    "start": "1523760",
    "end": "1529600"
  },
  {
    "text": "maps and what we're doing there is we're saying if you match the parameter if you match traffic on those parameters that",
    "start": "1529600",
    "end": "1535679"
  },
  {
    "text": "we specify forward it on to the next stop but as i mentioned it's only really relevant for the inject",
    "start": "1535679",
    "end": "1542080"
  },
  {
    "text": "flood and not so much for the the redirect flag as we're doing an additional iptables rule",
    "start": "1542080",
    "end": "1547520"
  },
  {
    "text": "in the back to not that traffic to your interface so that's cool we've neighbored up we've injected some",
    "start": "1547520",
    "end": "1554159"
  },
  {
    "text": "routes but sort of what is the what is the net result of that let's have a look let's log into that ftp again all let's",
    "start": "1554159",
    "end": "1560799"
  },
  {
    "text": "log into that ftp now connect to it specify the credentials verify that we connect it and switch",
    "start": "1560799",
    "end": "1566400"
  },
  {
    "text": "back to the wireshock to see if we can you know successfully man in the middle so here you can see you know",
    "start": "1566400",
    "end": "1571919"
  },
  {
    "text": "with man in the middle the person in the middle i apologize um the ftp tracker and we can observe the username and the",
    "start": "1571919",
    "end": "1578320"
  },
  {
    "text": "password um so there's quite a bit that was going on over there and we'd just like to",
    "start": "1578320",
    "end": "1584400"
  },
  {
    "text": "reiterate what what happened over there we learned some new routes just like with the fortigate but we went a step further and we",
    "start": "1584400",
    "end": "1591039"
  },
  {
    "text": "injected some routes and that resulted in some traffic being redirected to our attacker-controlled machine",
    "start": "1591039",
    "end": "1598080"
  },
  {
    "text": "simon um is there a way for us to manipulate traffic coming inbound to our local subnet yeah there",
    "start": "1598080",
    "end": "1605039"
  },
  {
    "text": "is using dynamic routing protocols we can have the traffic uh well using dynamic reading protocols",
    "start": "1605039",
    "end": "1611600"
  },
  {
    "text": "we can insert a route to a host on a local lan segment and",
    "start": "1611600",
    "end": "1617200"
  },
  {
    "text": "inject that into the routing process of the greater network and that thereby having traffic that is initially destined to that host",
    "start": "1617200",
    "end": "1624480"
  },
  {
    "text": "to first come through the attacker host before the server so if we take a look at the diagram right now the victim would attempt to access the",
    "start": "1624480",
    "end": "1630960"
  },
  {
    "text": "server and would follow the blue arrows but now during this attack we would take this route",
    "start": "1630960",
    "end": "1636640"
  },
  {
    "text": "of the server and tell the routing process hey we know a more direct route to that server and",
    "start": "1636640",
    "end": "1642159"
  },
  {
    "text": "that would then allow us to capture traffic from the victim destined towards the server and then we can manipulate it to whichever way we",
    "start": "1642159",
    "end": "1649200"
  },
  {
    "text": "would like to how we achieve that well we first have to take a closer look",
    "start": "1649200",
    "end": "1654320"
  },
  {
    "text": "at the attacker host the configuration within it there are two uh containers or rather",
    "start": "1654320",
    "end": "1660080"
  },
  {
    "text": "two routers in there one regarded as or known as root topsy and the other as the puruto",
    "start": "1660080",
    "end": "1666080"
  },
  {
    "text": "root topsy will neighbor up with both the external router as well as the pure router on the host the pure",
    "start": "1666080",
    "end": "1671919"
  },
  {
    "text": "router there is there mostly just to inject the route into the larger routing process but root",
    "start": "1671919",
    "end": "1679520"
  },
  {
    "text": "topsy has some some configuration within it to prevent",
    "start": "1679520",
    "end": "1685279"
  },
  {
    "text": "that routing or rather that route to be added to its routing table and why we want to",
    "start": "1685279",
    "end": "1690559"
  },
  {
    "text": "prevent it is because root topsy shares the routing table of the attacker host so when this traffic comes back from",
    "start": "1690559",
    "end": "1697039"
  },
  {
    "text": "another network to us we would like to then manipulate it to whichever way we want to and so",
    "start": "1697039",
    "end": "1702880"
  },
  {
    "text": "that's how we then need that's why we need to is prevent the addition of that route into",
    "start": "1702880",
    "end": "1708000"
  },
  {
    "text": "our table let's take a look at the demo and how this is done we're first going to orientate you in",
    "start": "1708000",
    "end": "1714960"
  },
  {
    "text": "the layout of this demo in the top left is the attacker window the top right is where the attacker will be performing",
    "start": "1714960",
    "end": "1720960"
  },
  {
    "text": "their commands and on the bottom right is the victim as you will see the",
    "start": "1720960",
    "end": "1726080"
  },
  {
    "text": "top left right now the routing table is quite normal this is without us peering up in the top right we're running net",
    "start": "1726080",
    "end": "1732240"
  },
  {
    "text": "credits and then we're going to show you that the victim's traffic is right now not",
    "start": "1732240",
    "end": "1737440"
  },
  {
    "text": "being captured in any way this shows that we haven't done yet the attack and that the victim is able to normally",
    "start": "1737440",
    "end": "1744480"
  },
  {
    "text": "access the smb share without its traffic being tampered anyway so you'll notice now we're attempting to",
    "start": "1744480",
    "end": "1750720"
  },
  {
    "text": "connect to an smb share we're going to enter in our password and then we're going to do a directory",
    "start": "1750720",
    "end": "1756399"
  },
  {
    "text": "listing while that's happening you'll notice that there is no data that is being printed out by netgrades",
    "start": "1756399",
    "end": "1763760"
  },
  {
    "text": "that just proves that right now the victim's traffic is going the normal blue line way the blue",
    "start": "1763760",
    "end": "1770240"
  },
  {
    "text": "arrow way if we now write up the command to run root topsy",
    "start": "1770240",
    "end": "1775520"
  },
  {
    "text": "and target the protocol ospf this will first scan for a vulnerable",
    "start": "1775520",
    "end": "1780880"
  },
  {
    "text": "ospf configuration then we'll create the necessary ospf config files",
    "start": "1780880",
    "end": "1786320"
  },
  {
    "text": "for the virtual router and it will spin them up so you're going to notice now that it",
    "start": "1786320",
    "end": "1791520"
  },
  {
    "text": "spins up a pure and it will spin up root topsy let's take a closer look at the configuration of the pier",
    "start": "1791520",
    "end": "1798960"
  },
  {
    "text": "within the pier you'll take note of first the osp or rather the roots the static",
    "start": "1799520",
    "end": "1805600"
  },
  {
    "text": "routes we're injecting and that is the static route to the server the target server",
    "start": "1805600",
    "end": "1813120"
  },
  {
    "text": "all right then next is the ospf process within the ospf process this tells it to neighbor up with root",
    "start": "1813120",
    "end": "1819919"
  },
  {
    "text": "topsy and also redistribute the static roots this is how we get that root into that larger",
    "start": "1819919",
    "end": "1824960"
  },
  {
    "text": "routing process we're now going to look at the configuration of root opsy and how we",
    "start": "1824960",
    "end": "1830000"
  },
  {
    "text": "prevent that root from being added to our routing table because it shares the rooting table of the",
    "start": "1830000",
    "end": "1836240"
  },
  {
    "text": "um the attacker host the first two statements are the network statements for it to",
    "start": "1836240",
    "end": "1841279"
  },
  {
    "text": "neighbor up with the external router and the internal pure router the next two statements are",
    "start": "1841279",
    "end": "1846720"
  },
  {
    "text": "access lists the very first access list is for 192.168.76216.32",
    "start": "1846720",
    "end": "1853840"
  },
  {
    "text": "so any packets with that root will match that access list and then there's a second access list",
    "start": "1853840",
    "end": "1859200"
  },
  {
    "text": "for anything else together with the root maps beneath it we're able to control",
    "start": "1859200",
    "end": "1864320"
  },
  {
    "text": "whether this route is added or not added to routing table we take it one step further because",
    "start": "1864320",
    "end": "1869519"
  },
  {
    "text": "we're using ospf to neighbor up that we now add these route maps on top of ospf",
    "start": "1869519",
    "end": "1875600"
  },
  {
    "text": "so that we don't learn it this route and add it into our routing table because again it's shared with the",
    "start": "1875600",
    "end": "1882159"
  },
  {
    "text": "attacker but it is propagated throughout the larger routing process",
    "start": "1882159",
    "end": "1887519"
  },
  {
    "text": "so now that we've got that down we're going to have a look at how we've managed to redirect the",
    "start": "1887519",
    "end": "1893679"
  },
  {
    "text": "traffic right so we're going to run netquiz and then we're going to go back down to the",
    "start": "1893679",
    "end": "1899360"
  },
  {
    "text": "victim and attempt to connect to that same smb share now once i've entered the password in",
    "start": "1899360",
    "end": "1906320"
  },
  {
    "text": "you'll notice that netcrates will print out a net intellium hash this means we've successfully",
    "start": "1906320",
    "end": "1913440"
  },
  {
    "text": "managed to redirect the traffic of that victim so now we've shown you how to",
    "start": "1913440",
    "end": "1918480"
  },
  {
    "text": "using dynamic routing protocols inject traffic or rather inject a route",
    "start": "1918480",
    "end": "1924880"
  },
  {
    "text": "to a host on the local lan segment into the routing process which then has traffic",
    "start": "1924880",
    "end": "1930399"
  },
  {
    "text": "originating from another network first go to the attacker before going to the server allowing us to perform a",
    "start": "1930399",
    "end": "1935600"
  },
  {
    "text": "personal middle attack but root tropsy doesn't only perform drp related attacks we also perform",
    "start": "1935600",
    "end": "1942799"
  },
  {
    "text": "attacks against first top redundancy protocols and we'll show you a demonstration against hsrp",
    "start": "1942799",
    "end": "1949679"
  },
  {
    "text": "first let's orientate you around this demo or the layout of this demo in the top left is the attacker window",
    "start": "1949679",
    "end": "1955360"
  },
  {
    "text": "in the bottom left is the victim router or the vulnerable router rather",
    "start": "1955360",
    "end": "1961120"
  },
  {
    "text": "and on the right side is the victim attempting to reach quad 8 via trace route",
    "start": "1961120",
    "end": "1968320"
  },
  {
    "text": "take note that the trace route to quad 8 takes 17 hops and this will change after",
    "start": "1968559",
    "end": "1974960"
  },
  {
    "text": "our attack showing that we are performing a personal middle attack if we go back to the top left window",
    "start": "1974960",
    "end": "1981840"
  },
  {
    "text": "where the attacker sits you'll notice that the ip address is 10 20 33",
    "start": "1981840",
    "end": "1987120"
  },
  {
    "text": "take note of that because that will be the next active after the successful attack so we're",
    "start": "1987120",
    "end": "1992640"
  },
  {
    "text": "going to target the protocol hsrp using root opsy which will first run",
    "start": "1992640",
    "end": "1998159"
  },
  {
    "text": "and perform a scan to determine whether there are vulnerable hsrp configurations once it notices that it will start",
    "start": "1998159",
    "end": "2004720"
  },
  {
    "text": "sending out hsrp hello packets with a much higher priority to allow us to become the active d4",
    "start": "2004720",
    "end": "2012960"
  },
  {
    "text": "gateway you'll notice that in the bottom left where the vulnerable router assets",
    "start": "2012960",
    "end": "2018559"
  },
  {
    "text": "that it goes from a standby st or rather an active state to a speak state and from a speak state to a standby",
    "start": "2018559",
    "end": "2024720"
  },
  {
    "text": "state meaning an election process had gone and that there's a new active router or a new default gateway which has a much",
    "start": "2024720",
    "end": "2031600"
  },
  {
    "text": "higher priority than itself if we look at the active it is right now 10 20 33.",
    "start": "2031600",
    "end": "2037279"
  },
  {
    "text": "if we take a look at the victim it now takes it takes 17 hops but now it takes 18",
    "start": "2037279",
    "end": "2042880"
  },
  {
    "text": "hops to reach quad eight with the first hop being 10 20 33 so we've successfully performed a",
    "start": "2042880",
    "end": "2050158"
  },
  {
    "text": "person in the middle attack uh via first top redundancy protocols great so you could run root topsy to do",
    "start": "2050159",
    "end": "2058398"
  },
  {
    "text": "this and then you'll notice that maybe your network interface is melting away",
    "start": "2058399",
    "end": "2063760"
  },
  {
    "text": "because you have the entire user range going through that one laptop and you may have realized oh wait i forgot to",
    "start": "2063760",
    "end": "2070320"
  },
  {
    "text": "turn on ip forwarding well we've got safeguards within root topsy to prevent that happen but",
    "start": "2070320",
    "end": "2076000"
  },
  {
    "text": "what you should take note of is that attacks against first top redundancy protocols as well as dynamic reading protocols may",
    "start": "2076000",
    "end": "2082398"
  },
  {
    "text": "cause denial of service these can be fixed and going back to",
    "start": "2082399",
    "end": "2087679"
  },
  {
    "text": "what tyler mentioned earlier about being specific with attacks we can be specific with our",
    "start": "2087679",
    "end": "2094158"
  },
  {
    "text": "configurations rather than being minimal and leaking out these packets to all",
    "start": "2094159",
    "end": "2099520"
  },
  {
    "text": "networks only speak these specific packets or rather yeah speak these specific packers on specific",
    "start": "2099520",
    "end": "2106079"
  },
  {
    "text": "networks where you have another router where you may need to perform routing protocols or dynamic routing",
    "start": "2106079",
    "end": "2112079"
  },
  {
    "text": "protocols or where you have where you require high availability between two d4 gateways between two",
    "start": "2112079",
    "end": "2118160"
  },
  {
    "text": "gateways we can take it further and add stronger authentication",
    "start": "2118160",
    "end": "2123520"
  },
  {
    "text": "by making use of crypto and a much stronger password such that it's not such an attacker is",
    "start": "2123520",
    "end": "2129680"
  },
  {
    "text": "not able to crack it we can also then add on top of first top redundancy protocols",
    "start": "2129680",
    "end": "2135119"
  },
  {
    "text": "making use of a much higher priority such as the maximum value such that no",
    "start": "2135119",
    "end": "2140640"
  },
  {
    "text": "one else can come into the network with a default gateway with a much higher priority value",
    "start": "2140640",
    "end": "2147040"
  },
  {
    "text": "we can also attempt to perform blue team or detection against these attacks by",
    "start": "2147040",
    "end": "2152560"
  },
  {
    "text": "collecting syslogs of the various network devices and monitoring for state changes monitoring for",
    "start": "2152560",
    "end": "2158560"
  },
  {
    "text": "new neighbors on a dynamic routing protocol or monitoring for a new active on a",
    "start": "2158560",
    "end": "2164240"
  },
  {
    "text": "first top redundancy protocols but if you're a skilled attacker you may probably want to just redirect that traffic",
    "start": "2164240",
    "end": "2169760"
  },
  {
    "text": "elsewhere do you want to introduce them to the playground sure thing so we realized",
    "start": "2169760",
    "end": "2174880"
  },
  {
    "text": "that everybody doesn't have networking kit lying around or maybe they don't have the the know how to configure a network",
    "start": "2174880",
    "end": "2181280"
  },
  {
    "text": "emulator to sort of build a vulnerable network to test these attacks and play with these vulnerabilities so what we've",
    "start": "2181280",
    "end": "2186400"
  },
  {
    "text": "done is we've built two yaml files which you can run with docker compose and in the drp file um you know you can",
    "start": "2186400",
    "end": "2193839"
  },
  {
    "text": "it spins up a router it spins up a victim and our root ops machine and there's two networks and if you perform their attacks you'll",
    "start": "2193839",
    "end": "2199680"
  },
  {
    "text": "see the traffic traversing from the one network to the other network which is observable by root topsy",
    "start": "2199680",
    "end": "2204800"
  },
  {
    "text": "and in the fhrp lab or mini lab there's a victim and there's sort of a high availability default gateway",
    "start": "2204800",
    "end": "2211280"
  },
  {
    "text": "configured with vrrp it's configured in securely root ops you can see that traffic and",
    "start": "2211280",
    "end": "2217440"
  },
  {
    "text": "then you can take advantage of that effectively redirecting the traffic from the victim to root topsy which will",
    "start": "2217440",
    "end": "2224079"
  },
  {
    "text": "then forward it onto the legitimate default gateway what we want you to take away from this talk is that network protocol security",
    "start": "2224079",
    "end": "2230800"
  },
  {
    "text": "is still very important and using using our tool it's possible to meaningfully um show impact you know um and it's also",
    "start": "2230800",
    "end": "2238480"
  },
  {
    "text": "very what's so agreeing to or speaking towards what simon has said it's quite easy to secure these things",
    "start": "2238480",
    "end": "2244640"
  },
  {
    "text": "and it's also possible to to detect whether there's some malicious activity going on um and before we end off simon would",
    "start": "2244640",
    "end": "2251359"
  },
  {
    "text": "like to show you what we're currently working on so picture a kubernetes cluster with one",
    "start": "2251359",
    "end": "2257440"
  },
  {
    "text": "master and two nodes this kubernetes cluster has calico configured which makes use of bgp to share routing information between the",
    "start": "2257440",
    "end": "2264000"
  },
  {
    "text": "various nodes within this cluster and then that one node has been compromised through",
    "start": "2264000",
    "end": "2269440"
  },
  {
    "text": "some means say a pod and privileged escalation or an attacker had access to the internal",
    "start": "2269440",
    "end": "2274720"
  },
  {
    "text": "network and was able to guess the password route the victim node has a pod that has been",
    "start": "2274720",
    "end": "2281040"
  },
  {
    "text": "deployed to it and that performs uh when when performing dns queries follows the traffic uh denoted by the blue",
    "start": "2281040",
    "end": "2288480"
  },
  {
    "text": "arrows we should we have compromised this node we could maybe use",
    "start": "2288480",
    "end": "2294240"
  },
  {
    "text": "bird controller to start messing with the routing table but not everyone is familiar with the",
    "start": "2294240",
    "end": "2299760"
  },
  {
    "text": "bird controller and so we've come up with a little tool that helps you either mess with the routing tables of",
    "start": "2299760",
    "end": "2306320"
  },
  {
    "text": "all the nodes in the cluster or up for a specific node within a cluster and so we can actually have that traffic",
    "start": "2306320",
    "end": "2313280"
  },
  {
    "text": "redirected following the red lines that we've shown rather than going to the master for dns it would come to us let's show",
    "start": "2313280",
    "end": "2320960"
  },
  {
    "text": "you how that is done with the demo let's first orientate in the bottom left",
    "start": "2320960",
    "end": "2326960"
  },
  {
    "text": "is the master in the bottom right is node number two the victim and the top is the attacker",
    "start": "2326960",
    "end": "2333760"
  },
  {
    "text": "node in the bottom left the master we're showing you guys the core dns with the ip address of 10 96 76",
    "start": "2333760",
    "end": "2341760"
  },
  {
    "text": "3 and 10 96 76 2. those are the routes that we're going to want to inject as we want that traffic",
    "start": "2341760",
    "end": "2348480"
  },
  {
    "text": "to come to us the next thing that we'll take note of is the pos deployed there is a dns utils pod deployed to",
    "start": "2348480",
    "end": "2355839"
  },
  {
    "text": "node 2. let's attempt to resolve the kubernetes name within that pod and",
    "start": "2355839",
    "end": "2362320"
  },
  {
    "text": "we receive an answer 109601 if we go and take a look at the routing",
    "start": "2362320",
    "end": "2367680"
  },
  {
    "text": "table of note 2 keep an eye on that because that will change once we've injected new routes",
    "start": "2367680",
    "end": "2374640"
  },
  {
    "text": "going to the master we're going to run the script which will inject those two new routes and you'll notice that node 2's routing",
    "start": "2374640",
    "end": "2380480"
  },
  {
    "text": "table has now changed so we may be able to get the traffic now to come to us let's see if that is the",
    "start": "2380480",
    "end": "2386079"
  },
  {
    "text": "case let's go back to the master node and attempt to resolve kubernetes",
    "start": "2386079",
    "end": "2391920"
  },
  {
    "text": "and now we have an answer of one three three seven so we've effectively redirected traffic",
    "start": "2391920",
    "end": "2397280"
  },
  {
    "text": "from that node thank you guys for joining us in this talk you guys can find our talk",
    "start": "2397280",
    "end": "2403440"
  },
  {
    "text": "while our code uh published on github sensepress root opsy right after we are",
    "start": "2403440",
    "end": "2409760"
  },
  {
    "text": "done here and you can catch us on the twitches or on email thank you very much",
    "start": "2409760",
    "end": "2418160"
  },
  {
    "text": "hello hello everybody i hope everyone enjoyed the talk yeah i",
    "start": "2420240",
    "end": "2426720"
  },
  {
    "text": "hope you guys enjoyed i think we can answer the last question first because we tried to",
    "start": "2426720",
    "end": "2432400"
  },
  {
    "text": "sort of answer most of them in the chat and the last one was i may have missed it but the playground",
    "start": "2432400",
    "end": "2438480"
  },
  {
    "text": "yaml is for what platform container um sort of",
    "start": "2438480",
    "end": "2444480"
  },
  {
    "text": "both of them are slightly different but the attacker container will always be the",
    "start": "2444480",
    "end": "2449599"
  },
  {
    "text": "well for the drp stuff it will be a fr routine container and for the fhrp the vrp",
    "start": "2449599",
    "end": "2456640"
  },
  {
    "text": "is a just a custom keeper ifd container which we perform the attack with i don't",
    "start": "2456640",
    "end": "2461680"
  },
  {
    "text": "know if that answers the question um then the other question uh does this",
    "start": "2461680",
    "end": "2469280"
  },
  {
    "text": "tool work in an aws vpc or azure v-net um just to just get some more clarity around that",
    "start": "2469280",
    "end": "2475440"
  },
  {
    "text": "uh the tool root topsy was mostly done on on-prem kind of infrastructure and setups",
    "start": "2475440",
    "end": "2480800"
  },
  {
    "text": "so as something we still have to go and play around and see what the networking is like within the",
    "start": "2480800",
    "end": "2486079"
  },
  {
    "text": "cloud on that side of things and i'm just checking if there's any",
    "start": "2486079",
    "end": "2493520"
  },
  {
    "text": "other questions i believe we've covered everything else uh regarding",
    "start": "2493520",
    "end": "2498880"
  },
  {
    "text": "the tool uh we'll just now go on to github and be releasing it live so that everyone can go and have a look at it",
    "start": "2498880",
    "end": "2505359"
  },
  {
    "text": "and play around with it and also open up pull requests for us right",
    "start": "2505359",
    "end": "2511040"
  },
  {
    "text": "yeah and there'll be a blog post in not too far future at some point",
    "start": "2511040",
    "end": "2518240"
  },
  {
    "text": "thanks everyone for joining",
    "start": "2518880",
    "end": "2523119"
  }
]