[
  {
    "text": "[Music]",
    "start": "1740",
    "end": "3720"
  },
  {
    "text": "foreign",
    "start": "3720",
    "end": "6720"
  },
  {
    "text": "University of Technology today we will",
    "start": "15680",
    "end": "18660"
  },
  {
    "text": "present you Dynamic process isolation",
    "start": "18660",
    "end": "21000"
  },
  {
    "text": "and during the talk we will talk a lot",
    "start": "21000",
    "end": "23580"
  },
  {
    "text": "about cloudflare workers that's a good",
    "start": "23580",
    "end": "26160"
  },
  {
    "text": "keyword so what actually are Cloud for",
    "start": "26160",
    "end": "27960"
  },
  {
    "text": "workers cloudflow workers are an edge",
    "start": "27960",
    "end": "29760"
  },
  {
    "text": "Computing system one of the best and",
    "start": "29760",
    "end": "32099"
  },
  {
    "text": "basically the deploy servers in between",
    "start": "32099",
    "end": "34079"
  },
  {
    "text": "your your origin server and the clients",
    "start": "34079",
    "end": "37559"
  },
  {
    "text": "so the idea of a network is to intercept",
    "start": "37559",
    "end": "40020"
  },
  {
    "text": "your HTTP requests and modify them that",
    "start": "40020",
    "end": "42660"
  },
  {
    "text": "can be used to basically run statistics",
    "start": "42660",
    "end": "44940"
  },
  {
    "text": "or in common use case is to would be to",
    "start": "44940",
    "end": "47399"
  },
  {
    "text": "insert ads into the actual body of the",
    "start": "47399",
    "end": "49860"
  },
  {
    "text": "requests",
    "start": "49860",
    "end": "51059"
  },
  {
    "text": "since this is a high performing system",
    "start": "51059",
    "end": "54059"
  },
  {
    "text": "or server they redeploy there's a data",
    "start": "54059",
    "end": "56579"
  },
  {
    "text": "deploy so-called in-process isolation",
    "start": "56579",
    "end": "59280"
  },
  {
    "text": "what's the difference in between",
    "start": "59280",
    "end": "60780"
  },
  {
    "text": "in-process isolation and classical",
    "start": "60780",
    "end": "62460"
  },
  {
    "text": "isolation is that we remove the overhead",
    "start": "62460",
    "end": "65460"
  },
  {
    "text": "of classical virtualization by putting",
    "start": "65460",
    "end": "67740"
  },
  {
    "text": "every worker into the same process",
    "start": "67740",
    "end": "71040"
  },
  {
    "text": "wait a minute are you saying that you",
    "start": "71040",
    "end": "74640"
  },
  {
    "text": "basically ship like every single work in",
    "start": "74640",
    "end": "77040"
  },
  {
    "text": "the same process and every single users",
    "start": "77040",
    "end": "79140"
  },
  {
    "text": "runs is called like in the same process",
    "start": "79140",
    "end": "81840"
  },
  {
    "text": "exactly but wait wait wait",
    "start": "81840",
    "end": "85320"
  },
  {
    "text": "is this vulnerable to Specter I mean",
    "start": "85320",
    "end": "87659"
  },
  {
    "text": "this it's like classy case no we have",
    "start": "87659",
    "end": "90900"
  },
  {
    "text": "some some preconditions there we",
    "start": "90900",
    "end": "92520"
  },
  {
    "text": "deserved all the local timers so you",
    "start": "92520",
    "end": "94140"
  },
  {
    "text": "don't have a chance to measure time and",
    "start": "94140",
    "end": "95939"
  },
  {
    "text": "furthermore we also will limit the",
    "start": "95939",
    "end": "98400"
  },
  {
    "text": "requests you can send the sub-request",
    "start": "98400",
    "end": "100500"
  },
  {
    "text": "you can send and also the memory you",
    "start": "100500",
    "end": "102000"
  },
  {
    "text": "have available from each worker but if",
    "start": "102000",
    "end": "104880"
  },
  {
    "text": "you were right and there would be a",
    "start": "104880",
    "end": "106799"
  },
  {
    "text": "specter attack possible on our system we",
    "start": "106799",
    "end": "108780"
  },
  {
    "text": "would need a low overhead solution in",
    "start": "108780",
    "end": "110880"
  },
  {
    "text": "order to keep up with the high",
    "start": "110880",
    "end": "111899"
  },
  {
    "text": "performance scores of our system I'm I'm",
    "start": "111899",
    "end": "114000"
  },
  {
    "text": "not convinced I would say like do you",
    "start": "114000",
    "end": "116579"
  },
  {
    "text": "know how Specter Works",
    "start": "116579",
    "end": "118920"
  },
  {
    "text": "um no but maybe you can tell me yeah no",
    "start": "118920",
    "end": "120659"
  },
  {
    "text": "we should start from scratch I mean it's",
    "start": "120659",
    "end": "122759"
  },
  {
    "text": "okay let's start from like caches like",
    "start": "122759",
    "end": "124920"
  },
  {
    "text": "super simple 101 stuff like",
    "start": "124920",
    "end": "127320"
  },
  {
    "text": "like you know caches like they are like",
    "start": "127320",
    "end": "129239"
  },
  {
    "text": "on all CPUs and they are like basically",
    "start": "129239",
    "end": "131459"
  },
  {
    "text": "a fast way to access memory so every",
    "start": "131459",
    "end": "133319"
  },
  {
    "text": "time you access memory for example you",
    "start": "133319",
    "end": "135720"
  },
  {
    "text": "will try to load something and if it's",
    "start": "135720",
    "end": "137220"
  },
  {
    "text": "not in the cache we will have cache Miss",
    "start": "137220",
    "end": "139319"
  },
  {
    "text": "then goes to the ROM and we will have a",
    "start": "139319",
    "end": "141480"
  },
  {
    "text": "request to the drum that will try to",
    "start": "141480",
    "end": "143940"
  },
  {
    "text": "load the data in the cache once the data",
    "start": "143940",
    "end": "145920"
  },
  {
    "text": "is loaded then you have a cacheet so in",
    "start": "145920",
    "end": "148560"
  },
  {
    "text": "the second access for example it will be",
    "start": "148560",
    "end": "150780"
  },
  {
    "text": "like a lot faster since access is the",
    "start": "150780",
    "end": "153480"
  },
  {
    "text": "realm you will have like a slow access",
    "start": "153480",
    "end": "155640"
  },
  {
    "text": "time and like accessing the cache",
    "start": "155640",
    "end": "158040"
  },
  {
    "text": "directly since the cache is loaded you",
    "start": "158040",
    "end": "159720"
  },
  {
    "text": "will have a fast access time okay okay I",
    "start": "159720",
    "end": "162300"
  },
  {
    "text": "understand what caches are but this is",
    "start": "162300",
    "end": "164519"
  },
  {
    "text": "not an attack what can I do with I know",
    "start": "164519",
    "end": "166080"
  },
  {
    "text": "I know I know like one thing for a time",
    "start": "166080",
    "end": "168000"
  },
  {
    "text": "oh but let's try to like go a bit like",
    "start": "168000",
    "end": "171660"
  },
  {
    "text": "step by step with let's talk about Flash",
    "start": "171660",
    "end": "173459"
  },
  {
    "text": "and reload so let's assume that I am a",
    "start": "173459",
    "end": "175920"
  },
  {
    "text": "Tucker and I have some kind of shared",
    "start": "175920",
    "end": "177780"
  },
  {
    "text": "memory with you as a big theme okay",
    "start": "177780",
    "end": "179760"
  },
  {
    "text": "what's your memory is it like shared",
    "start": "179760",
    "end": "181440"
  },
  {
    "text": "libraries load into the same process",
    "start": "181440",
    "end": "182819"
  },
  {
    "text": "like yeah something like that yeah any",
    "start": "182819",
    "end": "184800"
  },
  {
    "text": "kind of sharing memory that is like",
    "start": "184800",
    "end": "186060"
  },
  {
    "text": "anything yes any kind of physical page",
    "start": "186060",
    "end": "188160"
  },
  {
    "text": "that is like sharp between us okay",
    "start": "188160",
    "end": "191159"
  },
  {
    "text": "so let's assume like we have some",
    "start": "191159",
    "end": "192840"
  },
  {
    "text": "sharing memory that we both access and I",
    "start": "192840",
    "end": "195420"
  },
  {
    "text": "want to invest something about your",
    "start": "195420",
    "end": "196860"
  },
  {
    "text": "behavior so as an attacker I can flush",
    "start": "196860",
    "end": "200280"
  },
  {
    "text": "the memory so that it will not more be",
    "start": "200280",
    "end": "202440"
  },
  {
    "text": "in the cache okay yes so once the memory",
    "start": "202440",
    "end": "205019"
  },
  {
    "text": "is flushed then okay the victim runs and",
    "start": "205019",
    "end": "207360"
  },
  {
    "text": "maybe the victim accesses the like cache",
    "start": "207360",
    "end": "209940"
  },
  {
    "text": "line in the memory and lots again that",
    "start": "209940",
    "end": "212159"
  },
  {
    "text": "in the cache and then if I access that I",
    "start": "212159",
    "end": "215040"
  },
  {
    "text": "can like kind of infer based on the like",
    "start": "215040",
    "end": "217739"
  },
  {
    "text": "access time if they beat him access that",
    "start": "217739",
    "end": "220440"
  },
  {
    "text": "or not so that I can infer some behavior",
    "start": "220440",
    "end": "222959"
  },
  {
    "text": "of the victim",
    "start": "222959",
    "end": "224280"
  },
  {
    "text": "okay that sounds cool but I still don't",
    "start": "224280",
    "end": "227340"
  },
  {
    "text": "get what this has to do with speculation",
    "start": "227340",
    "end": "229019"
  },
  {
    "text": "it's just yeah a memory access and the",
    "start": "229019",
    "end": "231120"
  },
  {
    "text": "classic location used in a different way",
    "start": "231120",
    "end": "232560"
  },
  {
    "text": "okay I see you you want Specter yes sure",
    "start": "232560",
    "end": "235080"
  },
  {
    "text": "this is Specter okay wait so this is",
    "start": "235080",
    "end": "237900"
  },
  {
    "text": "Vector so let me let me rephrase let me",
    "start": "237900",
    "end": "240180"
  },
  {
    "text": "let me look at it so we see here a",
    "start": "240180",
    "end": "242220"
  },
  {
    "text": "branch with an I assume out of bounds",
    "start": "242220",
    "end": "244799"
  },
  {
    "text": "access and we have some index",
    "start": "244799",
    "end": "247379"
  },
  {
    "text": "which goes into a data array which we",
    "start": "247379",
    "end": "250260"
  },
  {
    "text": "then transform in some sort of lookup",
    "start": "250260",
    "end": "251879"
  },
  {
    "text": "table Yeah we have clearly like two just",
    "start": "251879",
    "end": "254340"
  },
  {
    "text": "two assumptions in this called snippet",
    "start": "254340",
    "end": "256199"
  },
  {
    "text": "we as an attacker can control the index",
    "start": "256199",
    "end": "258900"
  },
  {
    "text": "where the data is like accessed",
    "start": "258900",
    "end": "260940"
  },
  {
    "text": "obviously the the data is like accessed",
    "start": "260940",
    "end": "263520"
  },
  {
    "text": "with some checks so like there's a check",
    "start": "263520",
    "end": "265620"
  },
  {
    "text": "that checks okay is the index inbound or",
    "start": "265620",
    "end": "267419"
  },
  {
    "text": "out of bound and then this is an",
    "start": "267419",
    "end": "268860"
  },
  {
    "text": "assumption is that okay then the victim",
    "start": "268860",
    "end": "271259"
  },
  {
    "text": "code will like use the index in some way",
    "start": "271259",
    "end": "273600"
  },
  {
    "text": "and here we are like simplifying a lot",
    "start": "273600",
    "end": "275639"
  },
  {
    "text": "with like showing like the victim just",
    "start": "275639",
    "end": "277740"
  },
  {
    "text": "accesses like any kind of shared memory",
    "start": "277740",
    "end": "280860"
  },
  {
    "text": "like indexing with the data value so",
    "start": "280860",
    "end": "283320"
  },
  {
    "text": "here Lut stands for like lookup table",
    "start": "283320",
    "end": "285360"
  },
  {
    "text": "and it's just a way to like model this",
    "start": "285360",
    "end": "287580"
  },
  {
    "text": "Behavior and the lookup table is the",
    "start": "287580",
    "end": "289020"
  },
  {
    "text": "shared thing you mentioned exactly that",
    "start": "289020",
    "end": "290699"
  },
  {
    "text": "ah okay",
    "start": "290699",
    "end": "292020"
  },
  {
    "text": "so I know you want some more details on",
    "start": "292020",
    "end": "294000"
  },
  {
    "text": "that so let's look at like how it works",
    "start": "294000",
    "end": "296759"
  },
  {
    "text": "so we have like our local table that's",
    "start": "296759",
    "end": "299580"
  },
  {
    "text": "the share memory and like for example we",
    "start": "299580",
    "end": "302460"
  },
  {
    "text": "have some victim data like the green one",
    "start": "302460",
    "end": "304199"
  },
  {
    "text": "is the black data that the victim should",
    "start": "304199",
    "end": "306479"
  },
  {
    "text": "use and the red one is the data that we",
    "start": "306479",
    "end": "309660"
  },
  {
    "text": "are not supposed to access as a victim",
    "start": "309660",
    "end": "311220"
  },
  {
    "text": "since it like should be secret data",
    "start": "311220",
    "end": "313320"
  },
  {
    "text": "exactly but but I can see there just the",
    "start": "313320",
    "end": "315180"
  },
  {
    "text": "index with smaller than four so",
    "start": "315180",
    "end": "316800"
  },
  {
    "text": "basically you can't access the key the",
    "start": "316800",
    "end": "318360"
  },
  {
    "text": "secret data there yes so we have a check",
    "start": "318360",
    "end": "320759"
  },
  {
    "text": "that's like should prevent like the",
    "start": "320759",
    "end": "323100"
  },
  {
    "text": "secret data from being accessed but in",
    "start": "323100",
    "end": "325440"
  },
  {
    "text": "like modern CPU there is this thing",
    "start": "325440",
    "end": "327240"
  },
  {
    "text": "called speculation and basically a CPU",
    "start": "327240",
    "end": "330060"
  },
  {
    "text": "tries to predict where like a branch",
    "start": "330060",
    "end": "332100"
  },
  {
    "text": "will go to like optimize stuff and like",
    "start": "332100",
    "end": "334740"
  },
  {
    "text": "being faster while executing so what",
    "start": "334740",
    "end": "337199"
  },
  {
    "text": "happens when when you execute okay the",
    "start": "337199",
    "end": "339960"
  },
  {
    "text": "first time like the CPU will know",
    "start": "339960",
    "end": "341460"
  },
  {
    "text": "nothing so the speculation like doesn't",
    "start": "341460",
    "end": "343199"
  },
  {
    "text": "matter here but then like after it gets",
    "start": "343199",
    "end": "346259"
  },
  {
    "text": "where where is the right direction of",
    "start": "346259",
    "end": "347820"
  },
  {
    "text": "the branch the CPU will like start",
    "start": "347820",
    "end": "350520"
  },
  {
    "text": "understanding that okay this branches",
    "start": "350520",
    "end": "351960"
  },
  {
    "text": "likely taken so we will execute our code",
    "start": "351960",
    "end": "354780"
  },
  {
    "text": "and we will be reference like both the",
    "start": "354780",
    "end": "357180"
  },
  {
    "text": "data and also there like lookup access",
    "start": "357180",
    "end": "360000"
  },
  {
    "text": "and we will load the cache line there",
    "start": "360000",
    "end": "362820"
  },
  {
    "text": "so what happens after we will continue",
    "start": "362820",
    "end": "364800"
  },
  {
    "text": "like our our code and the CPU will",
    "start": "364800",
    "end": "367259"
  },
  {
    "text": "continue speculating and executing the",
    "start": "367259",
    "end": "369240"
  },
  {
    "text": "right side of the branch and then",
    "start": "369240",
    "end": "371160"
  },
  {
    "text": "afterwards we the CPU will like be",
    "start": "371160",
    "end": "373860"
  },
  {
    "text": "really like sure really confident that",
    "start": "373860",
    "end": "376800"
  },
  {
    "text": "the branch is going to be taken",
    "start": "376800",
    "end": "378720"
  },
  {
    "text": "so what happens like when the index is",
    "start": "378720",
    "end": "381300"
  },
  {
    "text": "four it should report it's like the",
    "start": "381300",
    "end": "383340"
  },
  {
    "text": "index check is still there so we should",
    "start": "383340",
    "end": "385199"
  },
  {
    "text": "not access any secret data but the CPU",
    "start": "385199",
    "end": "387780"
  },
  {
    "text": "will think that data is Success so we'll",
    "start": "387780",
    "end": "390240"
  },
  {
    "text": "access K and then okay we'll continue",
    "start": "390240",
    "end": "393060"
  },
  {
    "text": "accessing with the loot access and then",
    "start": "393060",
    "end": "394860"
  },
  {
    "text": "load the k cache line here but what but",
    "start": "394860",
    "end": "397020"
  },
  {
    "text": "wait wait wait that's not how to be used",
    "start": "397020",
    "end": "398699"
  },
  {
    "text": "work you will never see the access",
    "start": "398699",
    "end": "400139"
  },
  {
    "text": "because it's reverted because",
    "start": "400139",
    "end": "401340"
  },
  {
    "text": "speculation can be reverted in CPUs yeah",
    "start": "401340",
    "end": "403319"
  },
  {
    "text": "so speculation is reverted but not the",
    "start": "403319",
    "end": "406259"
  },
  {
    "text": "effect in the cache line",
    "start": "406259",
    "end": "408539"
  },
  {
    "text": "so the question will stay there and the",
    "start": "408539",
    "end": "410280"
  },
  {
    "text": "attacker can observe that and then I can",
    "start": "410280",
    "end": "412500"
  },
  {
    "text": "use the technique short in the beginning",
    "start": "412500",
    "end": "413580"
  },
  {
    "text": "exactly sure if the line is in the cache",
    "start": "413580",
    "end": "415979"
  },
  {
    "text": "exactly okay okay",
    "start": "415979",
    "end": "419960"
  },
  {
    "text": "so",
    "start": "420180",
    "end": "422100"
  },
  {
    "text": "this is not the whole Specter like",
    "start": "422100",
    "end": "423900"
  },
  {
    "text": "Spectrum we want but actually I looked a",
    "start": "423900",
    "end": "426720"
  },
  {
    "text": "bit into it and there are some",
    "start": "426720",
    "end": "427979"
  },
  {
    "text": "mitigations against this Vector checks",
    "start": "427979",
    "end": "429660"
  },
  {
    "text": "there are different levels so we have",
    "start": "429660",
    "end": "431460"
  },
  {
    "text": "application level defenses which are",
    "start": "431460",
    "end": "433319"
  },
  {
    "text": "basically newly added instructions you",
    "start": "433319",
    "end": "435360"
  },
  {
    "text": "can add to your code in order to stop",
    "start": "435360",
    "end": "437340"
  },
  {
    "text": "speculating if you add them near your",
    "start": "437340",
    "end": "439380"
  },
  {
    "text": "branch you will stop the speculation of",
    "start": "439380",
    "end": "441660"
  },
  {
    "text": "the branch furthermore there are also",
    "start": "441660",
    "end": "443699"
  },
  {
    "text": "like system level mitigations where you",
    "start": "443699",
    "end": "445259"
  },
  {
    "text": "have like operating system trying to",
    "start": "445259",
    "end": "447240"
  },
  {
    "text": "clear the prediction state after a",
    "start": "447240",
    "end": "449340"
  },
  {
    "text": "process which like a contact switch and",
    "start": "449340",
    "end": "451680"
  },
  {
    "text": "finally in a perfect world we would have",
    "start": "451680",
    "end": "453419"
  },
  {
    "text": "Hardware mitigations where we don't need",
    "start": "453419",
    "end": "454979"
  },
  {
    "text": "to care about Specter at all",
    "start": "454979",
    "end": "457080"
  },
  {
    "text": "okay I see that but like all of this",
    "start": "457080",
    "end": "461340"
  },
  {
    "text": "mitigation have nothing to do with",
    "start": "461340",
    "end": "463139"
  },
  {
    "text": "something that is in the same process",
    "start": "463139",
    "end": "464819"
  },
  {
    "text": "you're basically saying okay if you're",
    "start": "464819",
    "end": "466259"
  },
  {
    "text": "isolated we can mitigate that but we're",
    "start": "466259",
    "end": "468000"
  },
  {
    "text": "running the same process so like what's",
    "start": "468000",
    "end": "469740"
  },
  {
    "text": "the point of all this I see your point I",
    "start": "469740",
    "end": "471720"
  },
  {
    "text": "see your point but we thought about it",
    "start": "471720",
    "end": "473460"
  },
  {
    "text": "we first of all we freeze the execution",
    "start": "473460",
    "end": "475440"
  },
  {
    "text": "time during the work execution so you",
    "start": "475440",
    "end": "477360"
  },
  {
    "text": "don't have a timing primitive",
    "start": "477360",
    "end": "478440"
  },
  {
    "text": "furthermore you have no native code you",
    "start": "478440",
    "end": "480660"
  },
  {
    "text": "can't flush and reload basically because",
    "start": "480660",
    "end": "482340"
  },
  {
    "text": "you're just mounted JavaScript",
    "start": "482340",
    "end": "484020"
  },
  {
    "text": "and then we also don't allow for shared",
    "start": "484020",
    "end": "486360"
  },
  {
    "text": "memories so we don't have these lookup",
    "start": "486360",
    "end": "487919"
  },
  {
    "text": "tables anywhere in the cloudflare",
    "start": "487919",
    "end": "489599"
  },
  {
    "text": "environment and finally we do not allow",
    "start": "489599",
    "end": "492000"
  },
  {
    "text": "for multi-threading so you can't build",
    "start": "492000",
    "end": "493680"
  },
  {
    "text": "like accounting thread that artificially",
    "start": "493680",
    "end": "495479"
  },
  {
    "text": "makes a timer",
    "start": "495479",
    "end": "496740"
  },
  {
    "text": "so you're basically saying that I cannot",
    "start": "496740",
    "end": "499080"
  },
  {
    "text": "like measure timing while I'm executing",
    "start": "499080",
    "end": "500879"
  },
  {
    "text": "yes you can't measure it so you can't",
    "start": "500879",
    "end": "502860"
  },
  {
    "text": "leave no I don't think that's true",
    "start": "502860",
    "end": "504240"
  },
  {
    "text": "that's that's not true like follow me",
    "start": "504240",
    "end": "506580"
  },
  {
    "text": "follow me so we are saying okay we are",
    "start": "506580",
    "end": "508680"
  },
  {
    "text": "in the same process I'm an attacker and",
    "start": "508680",
    "end": "510660"
  },
  {
    "text": "like you're a victim and I won't like",
    "start": "510660",
    "end": "512339"
  },
  {
    "text": "like leave the like the memory from you",
    "start": "512339",
    "end": "515880"
  },
  {
    "text": "so just assume that I can like accent",
    "start": "515880",
    "end": "518219"
  },
  {
    "text": "like transiently like victim data I",
    "start": "518219",
    "end": "521159"
  },
  {
    "text": "still don't just assume that helps me",
    "start": "521159",
    "end": "522599"
  },
  {
    "text": "okay I cannot measure time but what if I",
    "start": "522599",
    "end": "525000"
  },
  {
    "text": "like ask for time so let's assume I have",
    "start": "525000",
    "end": "527279"
  },
  {
    "text": "like a third party where either I can",
    "start": "527279",
    "end": "529320"
  },
  {
    "text": "ask for time but okay you could say like",
    "start": "529320",
    "end": "530820"
  },
  {
    "text": "you can block that or like whatever but",
    "start": "530820",
    "end": "532920"
  },
  {
    "text": "what if I just send requests to the",
    "start": "532920",
    "end": "534600"
  },
  {
    "text": "party and that party case did that for",
    "start": "534600",
    "end": "536940"
  },
  {
    "text": "me and then tells me like okay this is",
    "start": "536940",
    "end": "539339"
  },
  {
    "text": "like fast this is low",
    "start": "539339",
    "end": "541640"
  },
  {
    "text": "waiting that we have like a third party",
    "start": "541640",
    "end": "544320"
  },
  {
    "text": "server measuring the time and that",
    "start": "544320",
    "end": "546000"
  },
  {
    "text": "third-party servers to distinguish a",
    "start": "546000",
    "end": "547980"
  },
  {
    "text": "single cache hit from a single cache",
    "start": "547980",
    "end": "549720"
  },
  {
    "text": "Miss",
    "start": "549720",
    "end": "551839"
  },
  {
    "text": "yeah but I'm not saying this I don't",
    "start": "552380",
    "end": "555720"
  },
  {
    "text": "want to distinguish a cash mistake that",
    "start": "555720",
    "end": "557820"
  },
  {
    "text": "would be like super noisy super hard",
    "start": "557820",
    "end": "559440"
  },
  {
    "text": "that's the idea right no we have this",
    "start": "559440",
    "end": "561540"
  },
  {
    "text": "thing called amplification so we can",
    "start": "561540",
    "end": "564540"
  },
  {
    "text": "like literally amplify the sign the",
    "start": "564540",
    "end": "567180"
  },
  {
    "text": "signals that we want to measure so that",
    "start": "567180",
    "end": "568800"
  },
  {
    "text": "we measure something that is much more",
    "start": "568800",
    "end": "571019"
  },
  {
    "text": "like lasting in time so for example like",
    "start": "571019",
    "end": "574320"
  },
  {
    "text": "I can give like an example we can okay",
    "start": "574320",
    "end": "576779"
  },
  {
    "text": "you say I can measure a cache it but if",
    "start": "576779",
    "end": "578580"
  },
  {
    "text": "I just measure I don't know one other",
    "start": "578580",
    "end": "579959"
  },
  {
    "text": "cash sheet or cash misses they are much",
    "start": "579959",
    "end": "581640"
  },
  {
    "text": "different but wait but wait cache lines",
    "start": "581640",
    "end": "583620"
  },
  {
    "text": "are limited so you have no you cannot",
    "start": "583620",
    "end": "585240"
  },
  {
    "text": "scale it originally yeah that that's why",
    "start": "585240",
    "end": "587399"
  },
  {
    "text": "we have a second Point second way to do",
    "start": "587399",
    "end": "589260"
  },
  {
    "text": "that let's assume that I want to measure",
    "start": "589260",
    "end": "591060"
  },
  {
    "text": "something what if I just repeat that",
    "start": "591060",
    "end": "593459"
  },
  {
    "text": "something like n times so let's let's",
    "start": "593459",
    "end": "595920"
  },
  {
    "text": "have a like like a like simple look at",
    "start": "595920",
    "end": "598860"
  },
  {
    "text": "the code that's simplified or busy",
    "start": "598860",
    "end": "600420"
  },
  {
    "text": "button yeah let's assume okay we have",
    "start": "600420",
    "end": "601980"
  },
  {
    "text": "like two cache lines on Cache line a and",
    "start": "601980",
    "end": "604500"
  },
  {
    "text": "a cash line B",
    "start": "604500",
    "end": "605760"
  },
  {
    "text": "so I want to lick like this secret bit",
    "start": "605760",
    "end": "608220"
  },
  {
    "text": "and okay let's assume that both of those",
    "start": "608220",
    "end": "610440"
  },
  {
    "text": "sketch lines are not loaded into memory",
    "start": "610440",
    "end": "612420"
  },
  {
    "text": "so what if the okay transiently like",
    "start": "612420",
    "end": "615720"
  },
  {
    "text": "excuse factor and I have some transient",
    "start": "615720",
    "end": "617700"
  },
  {
    "text": "execution where transiently I can like",
    "start": "617700",
    "end": "619800"
  },
  {
    "text": "either access A or B with the if",
    "start": "619800",
    "end": "622320"
  },
  {
    "text": "statement so let's assume that secret",
    "start": "622320",
    "end": "624360"
  },
  {
    "text": "bits for example is one",
    "start": "624360",
    "end": "626399"
  },
  {
    "text": "we will have this if statement that will",
    "start": "626399",
    "end": "628500"
  },
  {
    "text": "execute transiently and we will access",
    "start": "628500",
    "end": "630660"
  },
  {
    "text": "the cache line a so we will have a cache",
    "start": "630660",
    "end": "632640"
  },
  {
    "text": "Miss",
    "start": "632640",
    "end": "633720"
  },
  {
    "text": "and then like for example Transit",
    "start": "633720",
    "end": "635700"
  },
  {
    "text": "execution like dies so after that we",
    "start": "635700",
    "end": "638580"
  },
  {
    "text": "will have like an access a in that is",
    "start": "638580",
    "end": "640620"
  },
  {
    "text": "architectural but since we already",
    "start": "640620",
    "end": "642779"
  },
  {
    "text": "loaded the cache line a in memory that",
    "start": "642779",
    "end": "645060"
  },
  {
    "text": "access will be fast so we will have like",
    "start": "645060",
    "end": "647700"
  },
  {
    "text": "as low access and then a faster like in",
    "start": "647700",
    "end": "650100"
  },
  {
    "text": "the beginning with the cache yes yeah",
    "start": "650100",
    "end": "651360"
  },
  {
    "text": "but in the second case let's assume that",
    "start": "651360",
    "end": "653880"
  },
  {
    "text": "instead single bit is zero",
    "start": "653880",
    "end": "656220"
  },
  {
    "text": "so we will take the S Branch we will",
    "start": "656220",
    "end": "658980"
  },
  {
    "text": "like read from every beer so we will",
    "start": "658980",
    "end": "661320"
  },
  {
    "text": "have slow access and then after that we",
    "start": "661320",
    "end": "663600"
  },
  {
    "text": "will have another slow access due to the",
    "start": "663600",
    "end": "665579"
  },
  {
    "text": "architectural reads of the line a so in",
    "start": "665579",
    "end": "668940"
  },
  {
    "text": "every Loop iteration we will have like",
    "start": "668940",
    "end": "671279"
  },
  {
    "text": "either one or two slow accesses okay I",
    "start": "671279",
    "end": "675120"
  },
  {
    "text": "get that but how can what get what do",
    "start": "675120",
    "end": "677100"
  },
  {
    "text": "you get out of it yeah so you can like",
    "start": "677100",
    "end": "680339"
  },
  {
    "text": "execute that multiple times so if in One",
    "start": "680339",
    "end": "683160"
  },
  {
    "text": "Direction we have either one or two",
    "start": "683160",
    "end": "684480"
  },
  {
    "text": "accesses then in any iteration you will",
    "start": "684480",
    "end": "686700"
  },
  {
    "text": "have either n or 2N slow accesses and if",
    "start": "686700",
    "end": "690540"
  },
  {
    "text": "you scale n to like a big number you can",
    "start": "690540",
    "end": "693540"
  },
  {
    "text": "like increase the attack almost",
    "start": "693540",
    "end": "694920"
  },
  {
    "text": "arbitrarily like up to milliseconds",
    "start": "694920",
    "end": "696600"
  },
  {
    "text": "timing differences so that you can",
    "start": "696600",
    "end": "698579"
  },
  {
    "text": "observe like",
    "start": "698579",
    "end": "701899"
  },
  {
    "text": "primitive where you can amplify the",
    "start": "703880",
    "end": "705959"
  },
  {
    "text": "latency but still we're running in",
    "start": "705959",
    "end": "707760"
  },
  {
    "text": "JavaScript JavaScript JavaScript has no",
    "start": "707760",
    "end": "709980"
  },
  {
    "text": "native code execution so you how do you",
    "start": "709980",
    "end": "712140"
  },
  {
    "text": "either flush and reload the memory",
    "start": "712140",
    "end": "714120"
  },
  {
    "text": "because you don't have flush",
    "start": "714120",
    "end": "715079"
  },
  {
    "text": "instructions or anything like that we",
    "start": "715079",
    "end": "716640"
  },
  {
    "text": "also don't allow timing Primitives so",
    "start": "716640",
    "end": "718380"
  },
  {
    "text": "you can't even build a which eviction",
    "start": "718380",
    "end": "720540"
  },
  {
    "text": "sets with that so what do you do I see",
    "start": "720540",
    "end": "723000"
  },
  {
    "text": "your point but you you don't need to",
    "start": "723000",
    "end": "724860"
  },
  {
    "text": "like have such precise timing primitive",
    "start": "724860",
    "end": "727380"
  },
  {
    "text": "like just to a big memory like for",
    "start": "727380",
    "end": "729120"
  },
  {
    "text": "example we just can like iterate over",
    "start": "729120",
    "end": "731220"
  },
  {
    "text": "huge arrays to like evict the whole",
    "start": "731220",
    "end": "733019"
  },
  {
    "text": "caches like with like just iteration",
    "start": "733019",
    "end": "735959"
  },
  {
    "text": "iterating with huge arrays so",
    "start": "735959",
    "end": "739260"
  },
  {
    "text": "um yeah yeah okay but still if you look",
    "start": "739260",
    "end": "741779"
  },
  {
    "text": "at Java Java is a highly optimized and",
    "start": "741779",
    "end": "743459"
  },
  {
    "text": "de-optimized languages language so it",
    "start": "743459",
    "end": "746220"
  },
  {
    "text": "has assumption variables it uses to",
    "start": "746220",
    "end": "748019"
  },
  {
    "text": "optimize it but if these assumptions are",
    "start": "748019",
    "end": "749880"
  },
  {
    "text": "broken then it's de-optimized again so",
    "start": "749880",
    "end": "752459"
  },
  {
    "text": "how could you cope with that",
    "start": "752459",
    "end": "754079"
  },
  {
    "text": "okay you're saying okay the JavaScript",
    "start": "754079",
    "end": "756720"
  },
  {
    "text": "engine V8 in this case that's the engine",
    "start": "756720",
    "end": "758760"
  },
  {
    "text": "that cloudflare uses like observe the",
    "start": "758760",
    "end": "761399"
  },
  {
    "text": "code like breaking invariants but we can",
    "start": "761399",
    "end": "764279"
  },
  {
    "text": "just like execute our attack behind a",
    "start": "764279",
    "end": "766380"
  },
  {
    "text": "mispredictable branch so that the",
    "start": "766380",
    "end": "768060"
  },
  {
    "text": "JavaScript engine actually will not",
    "start": "768060",
    "end": "769920"
  },
  {
    "text": "observe our code breaking those",
    "start": "769920",
    "end": "772200"
  },
  {
    "text": "invariants",
    "start": "772200",
    "end": "774120"
  },
  {
    "text": "okay yeah furthermore we can just avoid",
    "start": "774120",
    "end": "777000"
  },
  {
    "text": "like nasty optimization like in lining",
    "start": "777000",
    "end": "779459"
  },
  {
    "text": "that will ruin like our brand predictor",
    "start": "779459",
    "end": "781500"
  },
  {
    "text": "says by using like huge functions that",
    "start": "781500",
    "end": "783360"
  },
  {
    "text": "are just not in line or like I think",
    "start": "783360",
    "end": "786000"
  },
  {
    "text": "like big functions that are not fully",
    "start": "786000",
    "end": "787560"
  },
  {
    "text": "optimized by the JavaScript engine",
    "start": "787560",
    "end": "789600"
  },
  {
    "text": "okay so I see that you have some",
    "start": "789600",
    "end": "791279"
  },
  {
    "text": "countermeasures against this complex",
    "start": "791279",
    "end": "792959"
  },
  {
    "text": "thing of optimization and",
    "start": "792959",
    "end": "794040"
  },
  {
    "text": "de-optimization but but still Java",
    "start": "794040",
    "end": "796500"
  },
  {
    "text": "JavaScript objects are indexed by 32",
    "start": "796500",
    "end": "798480"
  },
  {
    "text": "bits how can you ever access a 64-bit",
    "start": "798480",
    "end": "801060"
  },
  {
    "text": "address in order to attack your worker",
    "start": "801060",
    "end": "803100"
  },
  {
    "text": "in the same process I see okay so",
    "start": "803100",
    "end": "805740"
  },
  {
    "text": "JavaScript has this thing called like",
    "start": "805740",
    "end": "807540"
  },
  {
    "text": "pointer compression in V8 where they",
    "start": "807540",
    "end": "809700"
  },
  {
    "text": "basically try to save memory like",
    "start": "809700",
    "end": "811320"
  },
  {
    "text": "representing pointer with three little",
    "start": "811320",
    "end": "812820"
  },
  {
    "text": "bits so almost every object has this but",
    "start": "812820",
    "end": "816660"
  },
  {
    "text": "the keyword is almost oh not all the",
    "start": "816660",
    "end": "819660"
  },
  {
    "text": "objects have like just 32-bit pointers",
    "start": "819660",
    "end": "822899"
  },
  {
    "text": "there are some objects for example array",
    "start": "822899",
    "end": "824339"
  },
  {
    "text": "buffers that have by Design have to be",
    "start": "824339",
    "end": "827459"
  },
  {
    "text": "able to store 64-bit information so that",
    "start": "827459",
    "end": "830639"
  },
  {
    "text": "we can just like Leverage those objects",
    "start": "830639",
    "end": "832560"
  },
  {
    "text": "to like index the memory with 64-bit",
    "start": "832560",
    "end": "834959"
  },
  {
    "text": "pointers so that we can use them and",
    "start": "834959",
    "end": "837660"
  },
  {
    "text": "moreover we can like like confuse like",
    "start": "837660",
    "end": "841380"
  },
  {
    "text": "Branch predictor on the types of those",
    "start": "841380",
    "end": "842820"
  },
  {
    "text": "objects to create a speculative type",
    "start": "842820",
    "end": "844620"
  },
  {
    "text": "confusion and like leak from memory",
    "start": "844620",
    "end": "847320"
  },
  {
    "text": "so that sounds highly complex can you",
    "start": "847320",
    "end": "850139"
  },
  {
    "text": "give us more details yeah yeah I see",
    "start": "850139",
    "end": "852839"
  },
  {
    "text": "that I see that but let's like let's",
    "start": "852839",
    "end": "855540"
  },
  {
    "text": "have a look on like how javascript's",
    "start": "855540",
    "end": "857579"
  },
  {
    "text": "internal implementation works okay what",
    "start": "857579",
    "end": "859500"
  },
  {
    "text": "do what do we see so yeah here you see",
    "start": "859500",
    "end": "861600"
  },
  {
    "text": "like a simple object like for example",
    "start": "861600",
    "end": "863579"
  },
  {
    "text": "let's assume that we have an object with",
    "start": "863579",
    "end": "865079"
  },
  {
    "text": "an integer and a pointer to like an area",
    "start": "865079",
    "end": "867420"
  },
  {
    "text": "buffer",
    "start": "867420",
    "end": "868800"
  },
  {
    "text": "so how is that like uh laid up in memory",
    "start": "868800",
    "end": "871920"
  },
  {
    "text": "we will have the JavaScript object and",
    "start": "871920",
    "end": "873959"
  },
  {
    "text": "like with the winter and the pointer",
    "start": "873959",
    "end": "875700"
  },
  {
    "text": "this pointer is this the 64-bit point no",
    "start": "875700",
    "end": "877980"
  },
  {
    "text": "this is still a pointer to a JavaScript",
    "start": "877980",
    "end": "880560"
  },
  {
    "text": "object that is 32 bits and this pointer",
    "start": "880560",
    "end": "883139"
  },
  {
    "text": "will point to the array buffer object",
    "start": "883139",
    "end": "885320"
  },
  {
    "text": "that contains itself the 64-bit point so",
    "start": "885320",
    "end": "889139"
  },
  {
    "text": "that's the point that we want to that",
    "start": "889139",
    "end": "891000"
  },
  {
    "text": "second one is the point that the target",
    "start": "891000",
    "end": "892980"
  },
  {
    "text": "so the second pointer is the pointer",
    "start": "892980",
    "end": "895320"
  },
  {
    "text": "that is the reference to",
    "start": "895320",
    "end": "897060"
  },
  {
    "text": "when you go to access the 64-bit memory",
    "start": "897060",
    "end": "899760"
  },
  {
    "text": "so we are live actually two memory",
    "start": "899760",
    "end": "902040"
  },
  {
    "text": "references when you do like obj that",
    "start": "902040",
    "end": "904260"
  },
  {
    "text": "pointer of zero",
    "start": "904260",
    "end": "906480"
  },
  {
    "text": "so now let's assume that we have a",
    "start": "906480",
    "end": "908339"
  },
  {
    "text": "second object",
    "start": "908339",
    "end": "909480"
  },
  {
    "text": "this second object will be really really",
    "start": "909480",
    "end": "911940"
  },
  {
    "text": "similar with the first object type",
    "start": "911940",
    "end": "915120"
  },
  {
    "text": "we will have a lucky integer and all the",
    "start": "915120",
    "end": "916800"
  },
  {
    "text": "other fields will be the same Fields but",
    "start": "916800",
    "end": "919380"
  },
  {
    "text": "this second object will have an integer",
    "start": "919380",
    "end": "921440"
  },
  {
    "text": "instead of the like array buffer pointer",
    "start": "921440",
    "end": "924240"
  },
  {
    "text": "and with this integer we can literally",
    "start": "924240",
    "end": "926699"
  },
  {
    "text": "control this stereo base value and with",
    "start": "926699",
    "end": "929339"
  },
  {
    "text": "this integer what if we just make it",
    "start": "929339",
    "end": "931260"
  },
  {
    "text": "point to any chunk of memory that we",
    "start": "931260",
    "end": "933660"
  },
  {
    "text": "control to create a fake array buffer so",
    "start": "933660",
    "end": "936899"
  },
  {
    "text": "that in the fake red buffer we will have",
    "start": "936899",
    "end": "939000"
  },
  {
    "text": "the target address that we want to the",
    "start": "939000",
    "end": "940740"
  },
  {
    "text": "reference",
    "start": "940740",
    "end": "942060"
  },
  {
    "text": "and with these two steps the reference",
    "start": "942060",
    "end": "944160"
  },
  {
    "text": "we can access any Target memory that we",
    "start": "944160",
    "end": "946620"
  },
  {
    "text": "want okay I think I got the idea but",
    "start": "946620",
    "end": "949079"
  },
  {
    "text": "still these are two different types of",
    "start": "949079",
    "end": "950760"
  },
  {
    "text": "object JavaScript keeps track of which",
    "start": "950760",
    "end": "952740"
  },
  {
    "text": "type of object it is in some kind of",
    "start": "952740",
    "end": "954779"
  },
  {
    "text": "some sort of meta information so yes how",
    "start": "954779",
    "end": "957180"
  },
  {
    "text": "would you confuse them like type what",
    "start": "957180",
    "end": "959040"
  },
  {
    "text": "type of how JavaScript can check that",
    "start": "959040",
    "end": "961260"
  },
  {
    "text": "with a branch",
    "start": "961260",
    "end": "964139"
  },
  {
    "text": "we have a branch here so basically this",
    "start": "964139",
    "end": "966420"
  },
  {
    "text": "branch is similar to the branch we saw",
    "start": "966420",
    "end": "968100"
  },
  {
    "text": "in the beginning by the Specter Tech",
    "start": "968100",
    "end": "969360"
  },
  {
    "text": "yeah we just don't mispredict on the",
    "start": "969360",
    "end": "971880"
  },
  {
    "text": "bound check but who is mispredict on the",
    "start": "971880",
    "end": "974699"
  },
  {
    "text": "type checking so with just different",
    "start": "974699",
    "end": "976980"
  },
  {
    "text": "misprediction but just a branch",
    "start": "976980",
    "end": "980040"
  },
  {
    "text": "okay well well that sounds again highly",
    "start": "980040",
    "end": "982740"
  },
  {
    "text": "complex I don't think that can work have",
    "start": "982740",
    "end": "984779"
  },
  {
    "text": "you any have to write that out can you",
    "start": "984779",
    "end": "986579"
  },
  {
    "text": "show me something like that we have a",
    "start": "986579",
    "end": "987779"
  },
  {
    "text": "cool demo",
    "start": "987779",
    "end": "989579"
  },
  {
    "text": "so here we are like at the beginning of",
    "start": "989579",
    "end": "991980"
  },
  {
    "text": "the attack our attack has to build the",
    "start": "991980",
    "end": "994620"
  },
  {
    "text": "fake object primitive and then after",
    "start": "994620",
    "end": "997259"
  },
  {
    "text": "having to build the fake object",
    "start": "997259",
    "end": "999180"
  },
  {
    "text": "primitive it can then leak memory on the",
    "start": "999180",
    "end": "1002000"
  },
  {
    "text": "64 bit other space and here for example",
    "start": "1002000",
    "end": "1004820"
  },
  {
    "text": "we lick some strings from the binary so",
    "start": "1004820",
    "end": "1006800"
  },
  {
    "text": "so wait wait wait so you are within",
    "start": "1006800",
    "end": "1009380"
  },
  {
    "text": "JavaScript you have an attack primitive",
    "start": "1009380",
    "end": "1011180"
  },
  {
    "text": "that can leak strings from Rift in my",
    "start": "1011180",
    "end": "1013339"
  },
  {
    "text": "binary yes from any binaries running d8",
    "start": "1013339",
    "end": "1015980"
  },
  {
    "text": "or like Chrome or anyone",
    "start": "1015980",
    "end": "1017959"
  },
  {
    "text": "okay that sounds dangerous",
    "start": "1017959",
    "end": "1020540"
  },
  {
    "text": "yes so basically with this attack we are",
    "start": "1020540",
    "end": "1022759"
  },
  {
    "text": "able to leak like remotely over the",
    "start": "1022759",
    "end": "1024620"
  },
  {
    "text": "network 120 bits per hour so that means",
    "start": "1024620",
    "end": "1027860"
  },
  {
    "text": "that in the like average and defaults",
    "start": "1027860",
    "end": "1030860"
  },
  {
    "text": "like cloudflare worker run times of 30",
    "start": "1030860",
    "end": "1032839"
  },
  {
    "text": "seconds with that leak at least like one",
    "start": "1032839",
    "end": "1035058"
  },
  {
    "text": "bit of like v-thim data just by using",
    "start": "1035059",
    "end": "1037819"
  },
  {
    "text": "that this particular type confusion to",
    "start": "1037819",
    "end": "1039860"
  },
  {
    "text": "look from like the whole memory okay",
    "start": "1039860",
    "end": "1042140"
  },
  {
    "text": "that sounds that sounds really bad it's",
    "start": "1042140",
    "end": "1043640"
  },
  {
    "text": "a bit bad so I have to think about how",
    "start": "1043640",
    "end": "1045620"
  },
  {
    "text": "to mitigate that maybe you stick with me",
    "start": "1045620",
    "end": "1047540"
  },
  {
    "text": "so again you told me in the beginning",
    "start": "1047540",
    "end": "1049340"
  },
  {
    "text": "that you have this attack worker and",
    "start": "1049340",
    "end": "1051020"
  },
  {
    "text": "this Vector process and",
    "start": "1051020",
    "end": "1053179"
  },
  {
    "text": "what if I what if I place some sort of",
    "start": "1053179",
    "end": "1055340"
  },
  {
    "text": "detector in here that basically observes",
    "start": "1055340",
    "end": "1057919"
  },
  {
    "text": "each worker of the system and if not",
    "start": "1057919",
    "end": "1060980"
  },
  {
    "text": "somebody like you tries to make a",
    "start": "1060980",
    "end": "1062660"
  },
  {
    "text": "transient access to a victim process I",
    "start": "1062660",
    "end": "1065120"
  },
  {
    "text": "simply detect it and then isolate the",
    "start": "1065120",
    "end": "1067700"
  },
  {
    "text": "attacker into its own process basically",
    "start": "1067700",
    "end": "1070760"
  },
  {
    "text": "its own virtual address space and then I",
    "start": "1070760",
    "end": "1072559"
  },
  {
    "text": "can use the Specter mitigations from the",
    "start": "1072559",
    "end": "1074539"
  },
  {
    "text": "beginning",
    "start": "1074539",
    "end": "1076460"
  },
  {
    "text": "okay that seems cool and seems like if",
    "start": "1076460",
    "end": "1079520"
  },
  {
    "text": "you say like that it should work but I",
    "start": "1079520",
    "end": "1081260"
  },
  {
    "text": "have so many questions in my mind like",
    "start": "1081260",
    "end": "1082460"
  },
  {
    "text": "this is super complex for example how do",
    "start": "1082460",
    "end": "1085880"
  },
  {
    "text": "you even observe like the stuff that",
    "start": "1085880",
    "end": "1087860"
  },
  {
    "text": "every single Runner is doing like that's",
    "start": "1087860",
    "end": "1090740"
  },
  {
    "text": "actually a really good question",
    "start": "1090740",
    "end": "1091820"
  },
  {
    "text": "fortunately CPUs modern CPUs have",
    "start": "1091820",
    "end": "1094220"
  },
  {
    "text": "something built in like it's called",
    "start": "1094220",
    "end": "1095900"
  },
  {
    "text": "performance monitoring counters these",
    "start": "1095900",
    "end": "1098059"
  },
  {
    "text": "are counters they are 64-bit wide which",
    "start": "1098059",
    "end": "1100340"
  },
  {
    "text": "count micro architecture events so you",
    "start": "1100340",
    "end": "1102440"
  },
  {
    "text": "can think of a micro head external event",
    "start": "1102440",
    "end": "1104000"
  },
  {
    "text": "like Branch misses",
    "start": "1104000",
    "end": "1106520"
  },
  {
    "text": "so is the branch misses like the branch",
    "start": "1106520",
    "end": "1108799"
  },
  {
    "text": "I speculate on to like exactly so",
    "start": "1108799",
    "end": "1111559"
  },
  {
    "text": "basically dismiss speculation where you",
    "start": "1111559",
    "end": "1113179"
  },
  {
    "text": "have to understand this transient window",
    "start": "1113179",
    "end": "1114260"
  },
  {
    "text": "and for instance if we take a comparison",
    "start": "1114260",
    "end": "1117080"
  },
  {
    "text": "between a production system and an",
    "start": "1117080",
    "end": "1119059"
  },
  {
    "text": "attack we can see that the branch misses",
    "start": "1119059",
    "end": "1121039"
  },
  {
    "text": "are actually highly different between",
    "start": "1121039",
    "end": "1123500"
  },
  {
    "text": "the production system and attack so you",
    "start": "1123500",
    "end": "1125539"
  },
  {
    "text": "can clearly see on the left and the",
    "start": "1125539",
    "end": "1126799"
  },
  {
    "text": "histogram that we can simply separate",
    "start": "1126799",
    "end": "1128720"
  },
  {
    "text": "them by a threshold furthermore we also",
    "start": "1128720",
    "end": "1131419"
  },
  {
    "text": "could use like Branch accesses and",
    "start": "1131419",
    "end": "1133640"
  },
  {
    "text": "similar to Branch misses and normal",
    "start": "1133640",
    "end": "1135260"
  },
  {
    "text": "program a normal program running would",
    "start": "1135260",
    "end": "1138500"
  },
  {
    "text": "have much more Branch accesses than a",
    "start": "1138500",
    "end": "1140539"
  },
  {
    "text": "techer because it's highly really small",
    "start": "1140539",
    "end": "1143000"
  },
  {
    "text": "in its size wait but like what if I have",
    "start": "1143000",
    "end": "1145580"
  },
  {
    "text": "like huge code base that is running like",
    "start": "1145580",
    "end": "1147380"
  },
  {
    "text": "this book that's again a good point we",
    "start": "1147380",
    "end": "1149780"
  },
  {
    "text": "need to normalize them by code executed",
    "start": "1149780",
    "end": "1151880"
  },
  {
    "text": "otherwise a bigger program would for",
    "start": "1151880",
    "end": "1154820"
  },
  {
    "text": "instance have more Branch accesses and",
    "start": "1154820",
    "end": "1156679"
  },
  {
    "text": "more Branch misses so we need to",
    "start": "1156679",
    "end": "1158240"
  },
  {
    "text": "normalize them okay that seems okay but",
    "start": "1158240",
    "end": "1160880"
  },
  {
    "text": "okay I know this like performance",
    "start": "1160880",
    "end": "1162919"
  },
  {
    "text": "monitor encounters they are super slow",
    "start": "1162919",
    "end": "1164900"
  },
  {
    "text": "what's the overhead of like such a",
    "start": "1164900",
    "end": "1166700"
  },
  {
    "text": "solution like yes that's actually true",
    "start": "1166700",
    "end": "1168559"
  },
  {
    "text": "there are different interfaces you can",
    "start": "1168559",
    "end": "1170299"
  },
  {
    "text": "use to query these performance counters",
    "start": "1170299",
    "end": "1171860"
  },
  {
    "text": "and all of them have different",
    "start": "1171860",
    "end": "1173299"
  },
  {
    "text": "performance implications",
    "start": "1173299",
    "end": "1175039"
  },
  {
    "text": "um in the end we use the last one the",
    "start": "1175039",
    "end": "1176720"
  },
  {
    "text": "rdpmc instruction that's an instruction",
    "start": "1176720",
    "end": "1178580"
  },
  {
    "text": "you can actually use in the user space",
    "start": "1178580",
    "end": "1180200"
  },
  {
    "text": "if the kernel is configured correctly",
    "start": "1180200",
    "end": "1181940"
  },
  {
    "text": "and overall we l value edited on the",
    "start": "1181940",
    "end": "1184039"
  },
  {
    "text": "cloudflare system with real production",
    "start": "1184039",
    "end": "1185539"
  },
  {
    "text": "loads and it showed only a two percent",
    "start": "1185539",
    "end": "1187100"
  },
  {
    "text": "performance hit it's still a hit but",
    "start": "1187100",
    "end": "1189740"
  },
  {
    "text": "it's acceptable for the environment yeah",
    "start": "1189740",
    "end": "1191900"
  },
  {
    "text": "that seems reasonable I would say but",
    "start": "1191900",
    "end": "1194000"
  },
  {
    "text": "okay but",
    "start": "1194000",
    "end": "1195320"
  },
  {
    "text": "does it work do you literally like",
    "start": "1195320",
    "end": "1197900"
  },
  {
    "text": "detective attacks like that's that's a",
    "start": "1197900",
    "end": "1200120"
  },
  {
    "text": "bit more complex I would say because you",
    "start": "1200120",
    "end": "1202460"
  },
  {
    "text": "have a trade-off between the detection",
    "start": "1202460",
    "end": "1203780"
  },
  {
    "text": "and the leakage rate okay so on the left",
    "start": "1203780",
    "end": "1206419"
  },
  {
    "text": "we see a new an image where we see on",
    "start": "1206419",
    "end": "1208340"
  },
  {
    "text": "the top and attacker and the left is at",
    "start": "1208340",
    "end": "1211100"
  },
  {
    "text": "the most left sample in this Trace is",
    "start": "1211100",
    "end": "1213260"
  },
  {
    "text": "basically the attack you showed in",
    "start": "1213260",
    "end": "1214580"
  },
  {
    "text": "beginning with the one at 128 120 bit",
    "start": "1214580",
    "end": "1218120"
  },
  {
    "text": "leakage per hour",
    "start": "1218120",
    "end": "1219980"
  },
  {
    "text": "and you can see in the bottom what the",
    "start": "1219980",
    "end": "1222140"
  },
  {
    "text": "detection does so if you use a simple",
    "start": "1222140",
    "end": "1223640"
  },
  {
    "text": "threshold the attack is immediately",
    "start": "1223640",
    "end": "1226100"
  },
  {
    "text": "detected since the value for the counter",
    "start": "1226100",
    "end": "1228380"
  },
  {
    "text": "is Way Beyond the threshold yeah that",
    "start": "1228380",
    "end": "1230840"
  },
  {
    "text": "seems really high but what if I just I",
    "start": "1230840",
    "end": "1232760"
  },
  {
    "text": "don't know slow down my leakage rate so",
    "start": "1232760",
    "end": "1235700"
  },
  {
    "text": "just do a lower amount of branches so",
    "start": "1235700",
    "end": "1238100"
  },
  {
    "text": "you mean you reduce your throughput from",
    "start": "1238100",
    "end": "1240440"
  },
  {
    "text": "the attacker's point of view to get",
    "start": "1240440",
    "end": "1241880"
  },
  {
    "text": "below the threshold and yeah and then I",
    "start": "1241880",
    "end": "1243620"
  },
  {
    "text": "trick the detection like yes that's",
    "start": "1243620",
    "end": "1245419"
  },
  {
    "text": "actually what what's the graph showing",
    "start": "1245419",
    "end": "1247039"
  },
  {
    "text": "is that how you can reduce your leakage",
    "start": "1247039",
    "end": "1249140"
  },
  {
    "text": "rate from the 120 bit per hour to get to",
    "start": "1249140",
    "end": "1251720"
  },
  {
    "text": "try to get below that threshold however",
    "start": "1251720",
    "end": "1254900"
  },
  {
    "text": "um the threshold the detection actually",
    "start": "1254900",
    "end": "1256160"
  },
  {
    "text": "works so good that if you reduce the",
    "start": "1256160",
    "end": "1258500"
  },
  {
    "text": "leakage rate to get below the deduction",
    "start": "1258500",
    "end": "1259880"
  },
  {
    "text": "rate the attack is invisible because you",
    "start": "1259880",
    "end": "1262220"
  },
  {
    "text": "only have a 30 second",
    "start": "1262220",
    "end": "1264500"
  },
  {
    "text": "um for the second execution window where",
    "start": "1264500",
    "end": "1266600"
  },
  {
    "text": "you no longer can exploit this leakage",
    "start": "1266600",
    "end": "1270260"
  },
  {
    "text": "so overall I have to say that this",
    "start": "1270260",
    "end": "1272419"
  },
  {
    "text": "defense gives a strong reduction of",
    "start": "1272419",
    "end": "1273860"
  },
  {
    "text": "leakage rate and makes these attacks",
    "start": "1273860",
    "end": "1275660"
  },
  {
    "text": "basically infeasible",
    "start": "1275660",
    "end": "1277340"
  },
  {
    "text": "okay that makes sense but we are still",
    "start": "1277340",
    "end": "1279260"
  },
  {
    "text": "talking about like",
    "start": "1279260",
    "end": "1280760"
  },
  {
    "text": "a elephant so like do you just randomly",
    "start": "1280760",
    "end": "1283340"
  },
  {
    "text": "isolate something if there is a false",
    "start": "1283340",
    "end": "1285440"
  },
  {
    "text": "policy like how many false positives do",
    "start": "1285440",
    "end": "1287840"
  },
  {
    "text": "you have like qualified right yes yes",
    "start": "1287840",
    "end": "1289159"
  },
  {
    "text": "this was also concerned so basically we",
    "start": "1289159",
    "end": "1291380"
  },
  {
    "text": "try to evaluate this attack and defense",
    "start": "1291380",
    "end": "1293960"
  },
  {
    "text": "more defense on the CPUs used in the",
    "start": "1293960",
    "end": "1297200"
  },
  {
    "text": "production systems and we can see that",
    "start": "1297200",
    "end": "1299240"
  },
  {
    "text": "based on the different counter values we",
    "start": "1299240",
    "end": "1300980"
  },
  {
    "text": "get more or less false positives like we",
    "start": "1300980",
    "end": "1303140"
  },
  {
    "text": "expect some programs have more cash",
    "start": "1303140",
    "end": "1304820"
  },
  {
    "text": "accesses some have more Branch misses or",
    "start": "1304820",
    "end": "1306980"
  },
  {
    "text": "something like that however for a",
    "start": "1306980",
    "end": "1308659"
  },
  {
    "text": "threshold of about 40K we get a low",
    "start": "1308659",
    "end": "1311720"
  },
  {
    "text": "Force positive rate about around",
    "start": "1311720",
    "end": "1314539"
  },
  {
    "text": "um one percent",
    "start": "1314539",
    "end": "1315559"
  },
  {
    "text": "so this is again acceptable since we",
    "start": "1315559",
    "end": "1317600"
  },
  {
    "text": "don't pay for false positives it's just",
    "start": "1317600",
    "end": "1319400"
  },
  {
    "text": "in performance impact we wrongly",
    "start": "1319400",
    "end": "1321260"
  },
  {
    "text": "isolated them the program still works",
    "start": "1321260",
    "end": "1323360"
  },
  {
    "text": "fine",
    "start": "1323360",
    "end": "1324080"
  },
  {
    "text": "that's cool okay that works but okay",
    "start": "1324080",
    "end": "1327020"
  },
  {
    "text": "we're basically saying that like you you",
    "start": "1327020",
    "end": "1329659"
  },
  {
    "text": "know normalize about the code I execute",
    "start": "1329659",
    "end": "1332000"
  },
  {
    "text": "that yes but what if I try like to trick",
    "start": "1332000",
    "end": "1336679"
  },
  {
    "text": "this thresh that you have like",
    "start": "1336679",
    "end": "1339440"
  },
  {
    "text": "for example what if I just",
    "start": "1339440",
    "end": "1342700"
  },
  {
    "text": "increase the like denominator of your",
    "start": "1344919",
    "end": "1347900"
  },
  {
    "text": "formula with the ideal B accesses and",
    "start": "1347900",
    "end": "1349760"
  },
  {
    "text": "then just reduce your like your",
    "start": "1349760",
    "end": "1351980"
  },
  {
    "text": "threshold like and then it will be low",
    "start": "1351980",
    "end": "1353659"
  },
  {
    "text": "so let me recap that so you're trying to",
    "start": "1353659",
    "end": "1356120"
  },
  {
    "text": "say that if we basically get the number",
    "start": "1356120",
    "end": "1358940"
  },
  {
    "text": "of code executed up to General",
    "start": "1358940",
    "end": "1361340"
  },
  {
    "text": "normalization then over effectively got",
    "start": "1361340",
    "end": "1363380"
  },
  {
    "text": "below refreshold yes that's a really",
    "start": "1363380",
    "end": "1365419"
  },
  {
    "text": "good idea um we evaluated that in native",
    "start": "1365419",
    "end": "1367520"
  },
  {
    "text": "code as you see on the left there we",
    "start": "1367520",
    "end": "1369440"
  },
  {
    "text": "added native code pages in between the",
    "start": "1369440",
    "end": "1371419"
  },
  {
    "text": "attack and we can see that we see an uh",
    "start": "1371419",
    "end": "1374260"
  },
  {
    "text": "reduction of the actual threshold Factor",
    "start": "1374260",
    "end": "1376820"
  },
  {
    "text": "after we added around 90 pages keep in",
    "start": "1376820",
    "end": "1379880"
  },
  {
    "text": "mind that these are native code pages",
    "start": "1379880",
    "end": "1381799"
  },
  {
    "text": "and that's the reason why it's not",
    "start": "1381799",
    "end": "1383900"
  },
  {
    "text": "working in JavaScript because JavaScript",
    "start": "1383900",
    "end": "1386000"
  },
  {
    "text": "won't compile these large codes samples",
    "start": "1386000",
    "end": "1389360"
  },
  {
    "text": "into optimized code it's just",
    "start": "1389360",
    "end": "1391159"
  },
  {
    "text": "interpreting it so in order to your Tech",
    "start": "1391159",
    "end": "1393260"
  },
  {
    "text": "to work it must be compiled in order to",
    "start": "1393260",
    "end": "1395659"
  },
  {
    "text": "get this musically there's this",
    "start": "1395659",
    "end": "1397220"
  },
  {
    "text": "speculation out of it yeah so you",
    "start": "1397220",
    "end": "1399620"
  },
  {
    "text": "basically break the attack actually",
    "start": "1399620",
    "end": "1401120"
  },
  {
    "text": "sense so I guess I'm solid now so let's",
    "start": "1401120",
    "end": "1404120"
  },
  {
    "text": "build it I accept that so overall how is",
    "start": "1404120",
    "end": "1406760"
  },
  {
    "text": "this implemented in the cloudflare",
    "start": "1406760",
    "end": "1408080"
  },
  {
    "text": "ecosystem we can see on this build on",
    "start": "1408080",
    "end": "1410480"
  },
  {
    "text": "this on this picture a short um",
    "start": "1410480",
    "end": "1412580"
  },
  {
    "text": "uh systematic overview of the system we",
    "start": "1412580",
    "end": "1415039"
  },
  {
    "text": "can see in the left side we have this",
    "start": "1415039",
    "end": "1416240"
  },
  {
    "text": "inbound HTTP proxy which basically",
    "start": "1416240",
    "end": "1418100"
  },
  {
    "text": "accepts HTTP requests we have done some",
    "start": "1418100",
    "end": "1420620"
  },
  {
    "text": "scheduling and routing and these for",
    "start": "1420620",
    "end": "1422600"
  },
  {
    "text": "eight isolates how they are called are",
    "start": "1422600",
    "end": "1424460"
  },
  {
    "text": "basically the workers running in one",
    "start": "1424460",
    "end": "1426260"
  },
  {
    "text": "process after the HTTP packet is",
    "start": "1426260",
    "end": "1428960"
  },
  {
    "text": "unprocessed we pass it forward to the",
    "start": "1428960",
    "end": "1430940"
  },
  {
    "text": "outgoing proxy and pass it to whichever",
    "start": "1430940",
    "end": "1432860"
  },
  {
    "text": "destination the packet should go",
    "start": "1432860",
    "end": "1435140"
  },
  {
    "text": "if you don't detect a malicious worker",
    "start": "1435140",
    "end": "1437539"
  },
  {
    "text": "we can simply isolate that into its own",
    "start": "1437539",
    "end": "1439880"
  },
  {
    "text": "process sandbox which is on isolate and",
    "start": "1439880",
    "end": "1443240"
  },
  {
    "text": "communicate with an IPC connection into",
    "start": "1443240",
    "end": "1445039"
  },
  {
    "text": "process communication and deploy these",
    "start": "1445039",
    "end": "1447860"
  },
  {
    "text": "process isolations as they help against",
    "start": "1447860",
    "end": "1450140"
  },
  {
    "text": "vector",
    "start": "1450140",
    "end": "1451700"
  },
  {
    "text": "yes so overall this brings us already to",
    "start": "1451700",
    "end": "1454400"
  },
  {
    "text": "our conclusion so we have shown you that",
    "start": "1454400",
    "end": "1456860"
  },
  {
    "text": "remote Vector checks where possible on",
    "start": "1456860",
    "end": "1458960"
  },
  {
    "text": "cloudflare in the cloudflare edge worker",
    "start": "1458960",
    "end": "1461600"
  },
  {
    "text": "systems however we",
    "start": "1461600",
    "end": "1463940"
  },
  {
    "text": "we developed a mitigation that does not",
    "start": "1463940",
    "end": "1466340"
  },
  {
    "text": "only work against V8 against Vector V1",
    "start": "1466340",
    "end": "1469340"
  },
  {
    "text": "as we've shown you but against all these",
    "start": "1469340",
    "end": "1471559"
  },
  {
    "text": "Vector variants",
    "start": "1471559",
    "end": "1472820"
  },
  {
    "text": "finally this was also a collaboration",
    "start": "1472820",
    "end": "1475340"
  },
  {
    "text": "with cloudflare so this is actually",
    "start": "1475340",
    "end": "1477020"
  },
  {
    "text": "deployed in a production system and it",
    "start": "1477020",
    "end": "1479179"
  },
  {
    "text": "resulted in a scientific paper and the",
    "start": "1479179",
    "end": "1482240"
  },
  {
    "text": "QR code is actually linking to the paper",
    "start": "1482240",
    "end": "1484360"
  },
  {
    "text": "yeah it works",
    "start": "1484360",
    "end": "1486620"
  },
  {
    "text": "yeah so thank you everyone and if you",
    "start": "1486620",
    "end": "1489860"
  },
  {
    "text": "have any question we will be happy to",
    "start": "1489860",
    "end": "1491659"
  },
  {
    "text": "take them",
    "start": "1491659",
    "end": "1494020"
  },
  {
    "text": "[Music]",
    "start": "1501610",
    "end": "1504690"
  }
]