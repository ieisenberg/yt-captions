[
  {
    "text": "welcome to the 5:00 talk and the market uh market share track this is",
    "start": "10800",
    "end": "17160"
  },
  {
    "text": "going to be easy local Windows kernel exploitation um couple reminders please silence or turn off your cell phones for",
    "start": "17160",
    "end": "23840"
  },
  {
    "text": "the talk also in your package you would have received speaker feedback forms if you can go ahead and fill those out and",
    "start": "23840",
    "end": "29640"
  },
  {
    "text": "turn them the information desk so we can get feedback on everything with without any other further Ado here's days",
    "start": "29640",
    "end": "36960"
  },
  {
    "text": "are hi everyone thank you for coming I know the this is a",
    "start": "41200",
    "end": "46760"
  },
  {
    "text": "really difficult uh spot of the day like last talk everyone wants to go party",
    "start": "46760",
    "end": "53480"
  },
  {
    "text": "drinks or maybe writing a report whatever but it's like everyone is tired so I try to to to be fast and and",
    "start": "53480",
    "end": "63760"
  },
  {
    "text": "clear so like the ti says this is a couple of three different tricks for",
    "start": "63760",
    "end": "70159"
  },
  {
    "text": "exploiting some kind of windows can vulnerabilities and when I say easy I really mean it you will see that every",
    "start": "70159",
    "end": "77759"
  },
  {
    "text": "trick requires just some three easy steps you won't even have to think about",
    "start": "77759",
    "end": "83479"
  },
  {
    "text": "it so it will it should be easy to to learn and to",
    "start": "83479",
    "end": "88840"
  },
  {
    "text": "understand",
    "start": "88840",
    "end": "91840"
  },
  {
    "text": "so everyone that had been doing window kation you know that it's not very well",
    "start": "94399",
    "end": "101680"
  },
  {
    "text": "documented it's kind of still of a Dark Art we can say there are very few cool",
    "start": "101680",
    "end": "109399"
  },
  {
    "text": "exploit available some of them are not reliable and the same with techniques",
    "start": "109399",
    "end": "115600"
  },
  {
    "text": "there are really good techniques but the thing is when you go to this kind of uh",
    "start": "115600",
    "end": "122119"
  },
  {
    "text": "vulnerabilities where you can control where to write and also the value you",
    "start": "122119",
    "end": "127600"
  },
  {
    "text": "can write sometimes it's called right what where exploitation there are a few",
    "start": "127600",
    "end": "133680"
  },
  {
    "text": "techniques available uh a few cool papers but sometimes the techniques are",
    "start": "133680",
    "end": "138800"
  },
  {
    "text": "not generic they work on on some windows versions and they don't work on",
    "start": "138800",
    "end": "144200"
  },
  {
    "text": "different versions and they are not generic they sometime they require",
    "start": "144200",
    "end": "150360"
  },
  {
    "text": "certain scenario to be able to to work and when the things get complicated",
    "start": "150360",
    "end": "157000"
  },
  {
    "text": "they won't just work because sometimes you have really restricted a scenario",
    "start": "157000",
    "end": "162280"
  },
  {
    "text": "where the the value you can write is not fully controlled by by by you by the",
    "start": "162280",
    "end": "170159"
  },
  {
    "text": "exploiter um sometime you can just write one by to the kernel sometime you can",
    "start": "170159",
    "end": "176080"
  },
  {
    "text": "buy uh just write null for instance to the kernel sometimes you can write I",
    "start": "176080",
    "end": "181360"
  },
  {
    "text": "know a fixed value Etc or there's some weird scenario where you can just increment a value or decrement a value",
    "start": "181360",
    "end": "187519"
  },
  {
    "text": "so as far as I know there is no generic way and easy to use technique to to",
    "start": "187519",
    "end": "192720"
  },
  {
    "text": "exploit this kind of uh bags with this difficult scenarios",
    "start": "192720",
    "end": "198000"
  },
  {
    "text": "and one thing in common with all the techniques uh available right now is that you always end up running uh coding",
    "start": "198000",
    "end": "205400"
  },
  {
    "text": "kernel I mean it's cool and to run coding kernel and sometime it's needed",
    "start": "205400",
    "end": "211879"
  },
  {
    "text": "depending on what you want to do but you will agree with me that if you make any mistake then you you will get a crash",
    "start": "211879",
    "end": "219319"
  },
  {
    "text": "and there is no no second try I mean you make a mistake the code is not stable",
    "start": "219319",
    "end": "225280"
  },
  {
    "text": "and and you get an instant crash a blue screen and that's it so it's better for",
    "start": "225280",
    "end": "232280"
  },
  {
    "text": "me if you can avoid ruing cod in C in ker so all this research started after",
    "start": "232280",
    "end": "239079"
  },
  {
    "text": "uh I I read a really cool paper by Matthew",
    "start": "239079",
    "end": "244480"
  },
  {
    "text": "I don't know Matthew and and the other guy I'm sorry they it's difficult for me",
    "start": "244480",
    "end": "251159"
  },
  {
    "text": "to pronounce the name and gdt and L DT in Windows explation this is a really",
    "start": "251159",
    "end": "257359"
  },
  {
    "text": "cool paper where they use the antiquer system information to get the kernel address of the K process structure so",
    "start": "257359",
    "end": "264800"
  },
  {
    "text": "they do some overwriting of the this CDT and N in order to elevate privilege I like the paper but I find the technique",
    "start": "264800",
    "end": "271479"
  },
  {
    "text": "a little bit complicated and when I saw uh this API I",
    "start": "271479",
    "end": "277199"
  },
  {
    "text": "remember that I I I I saw it before for instance when analyzing how uh Windows",
    "start": "277199",
    "end": "282720"
  },
  {
    "text": "process Explorer works uh but I never thought that this API could be used to for",
    "start": "282720",
    "end": "289840"
  },
  {
    "text": "cotation and I started to research and this uh paper is inspired me because",
    "start": "289840",
    "end": "296320"
  },
  {
    "text": "this API is really cool because you get all the kernel addresses from different",
    "start": "296320",
    "end": "301520"
  },
  {
    "text": "Windows um object structures for instance you can get the address of a",
    "start": "301520",
    "end": "307720"
  },
  {
    "text": "process a structure of a token structor a Str structor Etc and you get really",
    "start": "307720",
    "end": "313720"
  },
  {
    "text": "useful information for instance you get the the Cel address here in the object field then the object type will tell you",
    "start": "313720",
    "end": "320720"
  },
  {
    "text": "if it is a process a thread Etc and here you you get the the process ID to which",
    "start": "320720",
    "end": "328560"
  },
  {
    "text": "has a an open handle to that object so basically you will know where",
    "start": "328560",
    "end": "335039"
  },
  {
    "text": "each structure is located in the",
    "start": "335039",
    "end": "339280"
  },
  {
    "text": "kernal so maybe I'm lazy but I like things to",
    "start": "340720",
    "end": "346319"
  },
  {
    "text": "be uh easy to do like follow one two three and be able to to achieve",
    "start": "346319",
    "end": "353039"
  },
  {
    "text": "some uh some goals in in a very easy way and it's it's more difficult to find",
    "start": "353039",
    "end": "360400"
  },
  {
    "text": "ways to make it thisy but once you do it then Things become clear you save a lot",
    "start": "360400",
    "end": "365639"
  },
  {
    "text": "of time Etc so when I started to to research this I start to think about",
    "start": "365639",
    "end": "371520"
  },
  {
    "text": "different scenarios of what I could do if I can know where to write in kernel",
    "start": "371520",
    "end": "377160"
  },
  {
    "text": "in order to elevate privileges because what you want to do in an exploit when",
    "start": "377160",
    "end": "383199"
  },
  {
    "text": "you are exploting accountabilities to be able to perform privileged actions in order of course to to elevate privilege",
    "start": "383199",
    "end": "389720"
  },
  {
    "text": "so one of the question I asked to myself was what what if I can remove an ACL for",
    "start": "389720",
    "end": "395919"
  },
  {
    "text": "a process for instance if I can remove an ACL from a process for instance L",
    "start": "395919",
    "end": "401319"
  },
  {
    "text": "lsas process I could inject code in that process and Elevate privileges or I",
    "start": "401319",
    "end": "407199"
  },
  {
    "text": "could lamp the password hashes from there and then crack them offline offline or doing some pass the Hat",
    "start": "407199",
    "end": "414800"
  },
  {
    "text": "Etc another question I asked myself was what if I can set get any privilege on a",
    "start": "414800",
    "end": "421560"
  },
  {
    "text": "token Pro on a process token that would mean instantly elevating privileges",
    "start": "421560",
    "end": "427759"
  },
  {
    "text": "because you know where to write just change some some bites and instantly get more",
    "start": "427759",
    "end": "434000"
  },
  {
    "text": "Privileges and then the other question I asked myself was what if I can just",
    "start": "434000",
    "end": "439720"
  },
  {
    "text": "replace a a token from my process so if I can find a really privileged token and",
    "start": "439720",
    "end": "447120"
  },
  {
    "text": "then put it in my exploit I will be able to just doing one right to elevate",
    "start": "447120",
    "end": "453319"
  },
  {
    "text": "privileges um during this research I found out that it's possible to do all",
    "start": "453319",
    "end": "459039"
  },
  {
    "text": "of this just doing one ride to the kernel and without having to Ru code in",
    "start": "459039",
    "end": "464280"
  },
  {
    "text": "the kernel which is I think is is nice I also ask myself why do you want",
    "start": "464280",
    "end": "471800"
  },
  {
    "text": "always assistant shot because when you are exploiting a vulnerability you what",
    "start": "471800",
    "end": "477400"
  },
  {
    "text": "you want to do is to to be able to perform more action that the ones you are allowed to do so most of the time",
    "start": "477400",
    "end": "485759"
  },
  {
    "text": "it's not necessary to get a a full system shell you just need to perform some specific privilege action for",
    "start": "485759",
    "end": "492400"
  },
  {
    "text": "instance if you want to get the password hashes you just need to be able to dump them or if you want to run code maybe",
    "start": "492400",
    "end": "499039"
  },
  {
    "text": "you just need to inser code in some process get them the Code run there and",
    "start": "499039",
    "end": "504800"
  },
  {
    "text": "Elevate privilege but so you just need to do a couple of privilege action with",
    "start": "504800",
    "end": "510280"
  },
  {
    "text": "your exploit and you are done most most of the time so let's start with the the first",
    "start": "510280",
    "end": "517680"
  },
  {
    "text": "track so here you can see the this is uh the the header of a of",
    "start": "517680",
    "end": "526120"
  },
  {
    "text": "almost I think of every object on on Windows here you can see at the end of",
    "start": "526120",
    "end": "534120"
  },
  {
    "text": "this uh object header is the main body of the of um",
    "start": "534120",
    "end": "541200"
  },
  {
    "text": "sorry and the main body of the this the Pacific Kel structure for instance if it",
    "start": "542839",
    "end": "548680"
  },
  {
    "text": "is a process then here the body offset will start the eprocess structor and",
    "start": "548680",
    "end": "555240"
  },
  {
    "text": "what they found interesting here is you can see here the security descriptor",
    "start": "555240",
    "end": "560360"
  },
  {
    "text": "field this this end up to be a pointer that points to um ACL related",
    "start": "560360",
    "end": "568120"
  },
  {
    "text": "information and this uh this is fixed across all windows",
    "start": "568120",
    "end": "574000"
  },
  {
    "text": "versions which just since Windows 2K maybe since NT just you just has to",
    "start": "574000",
    "end": "580920"
  },
  {
    "text": "subtract like four or eight depending on the architecture and you end up in this",
    "start": "580920",
    "end": "586560"
  },
  {
    "text": "pointer and I found out if you if you write n there you just remove the ACL",
    "start": "586560",
    "end": "593399"
  },
  {
    "text": "and the object become ACL free so basically for instance if you if you get",
    "start": "593399",
    "end": "599560"
  },
  {
    "text": "the L lsas process which is a process you know that runs under the system",
    "start": "599560",
    "end": "605839"
  },
  {
    "text": "account um you get the address of this pointer and just write n there and",
    "start": "605839",
    "end": "612640"
  },
  {
    "text": "instantly that process end up ends up without any ACL that means that you will",
    "start": "612640",
    "end": "618880"
  },
  {
    "text": "be able to iner code there read the memory do the password haset Etc so it",
    "start": "618880",
    "end": "624640"
  },
  {
    "text": "becomes very simple you just need to know the address of this uh",
    "start": "624640",
    "end": "631480"
  },
  {
    "text": "structure which is very simple like I said with the with this API antiquer",
    "start": "631480",
    "end": "638240"
  },
  {
    "text": "system information we can get that address so it's not problem so let's see the this trick in",
    "start": "638240",
    "end": "644760"
  },
  {
    "text": "three steps first what we have to do is to to get the target object we want to",
    "start": "644760",
    "end": "650720"
  },
  {
    "text": "to set the ACL to nle so it could be a thread if we want to modify the thread or it can just be a a",
    "start": "650720",
    "end": "657880"
  },
  {
    "text": "process so so we get the kernel object address using the antiqu information so we substract four or",
    "start": "657880",
    "end": "666240"
  },
  {
    "text": "eight depending of the architecture and write new there with",
    "start": "666240",
    "end": "671440"
  },
  {
    "text": "our exploit and instantly that object becomes ACL free and after that we",
    "start": "671440",
    "end": "678040"
  },
  {
    "text": "perform the privilege action we we want on that object like I said see if it is",
    "start": "678040",
    "end": "683480"
  },
  {
    "text": "l l LS ass process we can uh read the power hashes inser code Etc that's like",
    "start": "683480",
    "end": "692200"
  },
  {
    "text": "um you can see it's very",
    "start": "692200",
    "end": "696399"
  },
  {
    "text": "simple let me show you a quick demonstration in this case I will",
    "start": "699399",
    "end": "708040"
  },
  {
    "text": "manually I will be removing manually the",
    "start": "710200",
    "end": "715720"
  },
  {
    "text": "ACL",
    "start": "717959",
    "end": "720959"
  },
  {
    "text": "second okay here we have process Explorer I have a a shell that is running on a low privilege account and I",
    "start": "735399",
    "end": "742519"
  },
  {
    "text": "try to run Windows credential editor which is a really cool Tool uh that was",
    "start": "742519",
    "end": "749199"
  },
  {
    "text": "writing by Nano cha which allows you to do the password hashes do pass the hash",
    "start": "749199",
    "end": "755800"
  },
  {
    "text": "and other nice tricks so I try to run the the tool but because I have a low",
    "start": "755800",
    "end": "760959"
  },
  {
    "text": "privilege process I can't do it so I get a an",
    "start": "760959",
    "end": "765399"
  },
  {
    "text": "error so now taking a look here you can see that it's running under low Integrity level",
    "start": "766360",
    "end": "773800"
  },
  {
    "text": "so it's a really low privilege process it almost has a access to its",
    "start": "773800",
    "end": "780040"
  },
  {
    "text": "own process and nothing else and if I look at the ACL of the ls as process we",
    "start": "780040",
    "end": "787079"
  },
  {
    "text": "can see it has the regular ACL which means that only Sif in an administrator account can can access to it so what I'm",
    "start": "787079",
    "end": "795320"
  },
  {
    "text": "going to do is to get the the kernel object address from",
    "start": "795320",
    "end": "800639"
  },
  {
    "text": "theprocess structure from the ls ass process you can see here the process",
    "start": "800639",
    "end": "806440"
  },
  {
    "text": "name and this is the kernel address of the object structure I'm doing this manually but you can do it with the API",
    "start": "806440",
    "end": "812639"
  },
  {
    "text": "I just described so I have a a",
    "start": "812639",
    "end": "820480"
  },
  {
    "text": "Windows uh debugger session a Kel debugging session so I can look at the",
    "start": "820480",
    "end": "825560"
  },
  {
    "text": "object we can see here the handle cone the pointer con some object Header",
    "start": "825560",
    "end": "832199"
  },
  {
    "text": "information so I substract four from that and I will be accessing directly to",
    "start": "832199",
    "end": "838240"
  },
  {
    "text": "the pointed to the ACL here is the pointer to the ACL of the",
    "start": "838240",
    "end": "843759"
  },
  {
    "text": "LSS process so I write no",
    "start": "843759",
    "end": "849040"
  },
  {
    "text": "there and now I try to run again Windows credential editor and you can see this time I I can",
    "start": "850320",
    "end": "856560"
  },
  {
    "text": "get the password hashes because now the ls ass process doesn't have any ACL at",
    "start": "856560",
    "end": "862079"
  },
  {
    "text": "all and if we um we look at it with the process Explorer",
    "start": "862079",
    "end": "870680"
  },
  {
    "text": "we can see that it doesn't have any ACL you can see it says no per no",
    "start": "871120",
    "end": "877560"
  },
  {
    "text": "permissions have been set for for this in this case I have uh done it",
    "start": "877560",
    "end": "884720"
  },
  {
    "text": "manually but in case you are exploiting something your exploit will be the the one getting the kernel object address",
    "start": "884720",
    "end": "891519"
  },
  {
    "text": "and then writing n to",
    "start": "891519",
    "end": "894839"
  },
  {
    "text": "there",
    "start": "897680",
    "end": "900680"
  },
  {
    "text": "so let's see now the the second trick",
    "start": "902759",
    "end": "908759"
  },
  {
    "text": "another interesting uh Windows uh K structure iPhone is the token privilege",
    "start": "909480",
    "end": "917440"
  },
  {
    "text": "structure this structure is inside the token structure and it has the the same",
    "start": "917440",
    "end": "923680"
  },
  {
    "text": "offset um on Windows Vista Windows 7 Windows 8 Etc and it has three different",
    "start": "923680",
    "end": "930240"
  },
  {
    "text": "fields inside the structure one is the present field the enabled field and enabled by",
    "start": "930240",
    "end": "938000"
  },
  {
    "text": "default this field means the this is these are bit mask that means that every",
    "start": "938000",
    "end": "944279"
  },
  {
    "text": "bit that are set there means that a privilege is present or not so in the",
    "start": "944279",
    "end": "949800"
  },
  {
    "text": "present field every bit said there means that the the means the privilege that",
    "start": "949800",
    "end": "956199"
  },
  {
    "text": "are present in this specific token and the in the enabled Fields means that the the",
    "start": "956199",
    "end": "963519"
  },
  {
    "text": "privilege from the present one that are enabled or not so I can have five uh",
    "start": "963519",
    "end": "970040"
  },
  {
    "text": "different privileges but I can have only one enabl and then in the last field we have",
    "start": "970040",
    "end": "975720"
  },
  {
    "text": "the enabled by default which means which from the present fi uh privilege are the",
    "start": "975720",
    "end": "981240"
  },
  {
    "text": "one that enabled or not what I found interesting is that",
    "start": "981240",
    "end": "986519"
  },
  {
    "text": "when Windows check the token for performing privilege actions on the system it will only check the enabled",
    "start": "986519",
    "end": "994639"
  },
  {
    "text": "field and this is cool because when exploiting a c vulnerability I can sh",
    "start": "994639",
    "end": "1000319"
  },
  {
    "text": "directly right to the enable field and en enable the privilege I want and",
    "start": "1000319",
    "end": "1005560"
  },
  {
    "text": "windows when my exploit Tred to do privilege action we just check that field it won't check if the if the priv",
    "start": "1005560",
    "end": "1013120"
  },
  {
    "text": "was present or not so you can imagine how to expl Loy",
    "start": "1013120",
    "end": "1018839"
  },
  {
    "text": "uh vulnerability using this trick it becomes very simple because you can get the token address then you know it's a",
    "start": "1018839",
    "end": "1025720"
  },
  {
    "text": "fix off offset in since Windows Pista and you have these three different",
    "start": "1025720",
    "end": "1030959"
  },
  {
    "text": "fields and you know you have to write um on the enable field in order to enable",
    "start": "1030959",
    "end": "1037160"
  },
  {
    "text": "different privileges so the token structure is different on Windows XP and",
    "start": "1037160",
    "end": "1045400"
  },
  {
    "text": "2003 and there are inside the token structure there is a luid and attributes",
    "start": "1045400",
    "end": "1053280"
  },
  {
    "text": "structure which is a uh pointer that point at the end of",
    "start": "1053280",
    "end": "1059080"
  },
  {
    "text": "the token structure which is called variable part and there depending on the amount of privilege we have in the",
    "start": "1059080",
    "end": "1065720"
  },
  {
    "text": "process in the token we have many LD and attribute",
    "start": "1065720",
    "end": "1071840"
  },
  {
    "text": "structures here in the attribute Fields uh we have three different values",
    "start": "1071840",
    "end": "1077640"
  },
  {
    "text": "we have zero for when the privilege is disabled one when it is enabled by default and two when it",
    "start": "1077640",
    "end": "1083679"
  },
  {
    "text": "is enabled and then in the L structure uh",
    "start": "1083679",
    "end": "1089559"
  },
  {
    "text": "we have a a new a number identifying specific privileges for instance the",
    "start": "1089559",
    "end": "1095480"
  },
  {
    "text": "privilege number 14 in X is the the B",
    "start": "1095480",
    "end": "1100158"
  },
  {
    "text": "privilege so if I can arbitrary set privilege to a token in order to elevate",
    "start": "1101640",
    "end": "1107760"
  },
  {
    "text": "privileges what privilege could I choose to do it if I'm restricted because if I'm not restricted I has set all the privilege",
    "start": "1107760",
    "end": "1114679"
  },
  {
    "text": "enabl and it will be the same as running a syst account maybe I will need to take some",
    "start": "1114679",
    "end": "1120720"
  },
  {
    "text": "extra step when running code but it's almost the same so these are the most powerful privileges on Windows where you",
    "start": "1120720",
    "end": "1128080"
  },
  {
    "text": "can debug programs you can do anything on any process take ownership allows you",
    "start": "1128080",
    "end": "1134000"
  },
  {
    "text": "to to manipulate the ACL or any Windows object then but if you can restore file and",
    "start": "1134000",
    "end": "1141120"
  },
  {
    "text": "directory then you can overwrite any file on the system so you can remove overwrite system file and Elevate",
    "start": "1141120",
    "end": "1148000"
  },
  {
    "text": "privileges then impersonation privilege allow you to impersonate other accounts um of course loading and loing drivers",
    "start": "1148000",
    "end": "1155600"
  },
  {
    "text": "allowed to load driver etc those are the most powerful preion",
    "start": "1155600",
    "end": "1161159"
  },
  {
    "text": "windows that maybe you want to set when exploiting a a vulnerability using this",
    "start": "1161159",
    "end": "1167240"
  },
  {
    "text": "trick so let's see it is a step by step this",
    "start": "1167240",
    "end": "1173480"
  },
  {
    "text": "trick first what we need to do is to get the primary token uh kernel address from or exploit",
    "start": "1173480",
    "end": "1180559"
  },
  {
    "text": "process we can do this by using the anti- query system information API which is just running it and get search under",
    "start": "1180559",
    "end": "1188559"
  },
  {
    "text": "all the AR right of result IR returns identify or token and then get the",
    "start": "1188559",
    "end": "1195520"
  },
  {
    "text": "colonel address if we can control what to write we just write for instance on Windows",
    "start": "1195520",
    "end": "1201640"
  },
  {
    "text": "Vista we just write f f f FF which means if you translate to binaries",
    "start": "1201640",
    "end": "1207480"
  },
  {
    "text": "1111 and we enable all the Privileges and instantly we get all the Privileges",
    "start": "1207480",
    "end": "1212640"
  },
  {
    "text": "enabled just after one right but if we have a Windows XP or or",
    "start": "1212640",
    "end": "1219880"
  },
  {
    "text": "2003 maybe we can write some specific values in this casee we can choose for instance uh 14 in X which mean the the",
    "start": "1219880",
    "end": "1228280"
  },
  {
    "text": "privilege so we write to to token um in this case",
    "start": "1228280",
    "end": "1234480"
  },
  {
    "text": "is plus uh a z INX offset so we write 14",
    "start": "1234480",
    "end": "1239760"
  },
  {
    "text": "there and instantly we get theb privilege on our process",
    "start": "1239760",
    "end": "1245280"
  },
  {
    "text": "token and after that of course you can perform privilege actions so I was lucky that t uh shared",
    "start": "1245320",
    "end": "1255600"
  },
  {
    "text": "with me some some B ability he found last year and it was P my",
    "start": "1255600",
    "end": "1261200"
  },
  {
    "text": "Microsoft um is a news after free cability that was kind of difficult to",
    "start": "1261200",
    "end": "1268919"
  },
  {
    "text": "exploit because uh you end up in this uh instruction where you can decrement a",
    "start": "1268919",
    "end": "1275640"
  },
  {
    "text": "position in memory you can only control the EA eax value so you only allow you to decrement",
    "start": "1275640",
    "end": "1283000"
  },
  {
    "text": "a position memory so if you have to exploit this I mean you had to do a lot of reverse engineer in um in different",
    "start": "1283000",
    "end": "1290159"
  },
  {
    "text": "Windows versions try to find some stab way U some stab value and address in",
    "start": "1290159",
    "end": "1296640"
  },
  {
    "text": "Cent memory that you can decrement in order to elevate privileges Etc it's not simple I mean it can be done but it",
    "start": "1296640",
    "end": "1302279"
  },
  {
    "text": "takes a lot of time and work so by default when you run a",
    "start": "1302279",
    "end": "1309159"
  },
  {
    "text": "process on windows at the offet 84 in X or on the token",
    "start": "1309159",
    "end": "1314840"
  },
  {
    "text": "structure you have this value which is 8000000 in X which",
    "start": "1314840",
    "end": "1321880"
  },
  {
    "text": "means uh is on the enabl privileges on the on the field enable privileg on the",
    "start": "1321880",
    "end": "1328039"
  },
  {
    "text": "token privileg structure if we translate that to Binary we can see that only one",
    "start": "1328039",
    "end": "1335320"
  },
  {
    "text": "privilege is enabled by default which is the change notify",
    "start": "1335320",
    "end": "1340760"
  },
  {
    "text": "privilege which is a privilege that almost any processing Windows has that is the the privilege to get notified",
    "start": "1340760",
    "end": "1347480"
  },
  {
    "text": "with uh registry change or a file or a folder change it's a very basic",
    "start": "1347480",
    "end": "1354080"
  },
  {
    "text": "privilege that almost any processing Windows have so by default you have this value there and because I can know that",
    "start": "1354080",
    "end": "1362240"
  },
  {
    "text": "address in in kernel when trying to exploit the this",
    "start": "1362240",
    "end": "1367799"
  },
  {
    "text": "vulnerability If I subtract one to that I end up with seven ffffff and if I translate that to Binary",
    "start": "1367799",
    "end": "1375320"
  },
  {
    "text": "I end up with one one11 which means lots of privilege enabled because if you remember it is a bit mask the the field",
    "start": "1375320",
    "end": "1384120"
  },
  {
    "text": "of that structure so you can see here that are really difficult Tolo vulnerability",
    "start": "1384120",
    "end": "1390720"
  },
  {
    "text": "because becomes really simple just find the or primary token uh from display",
    "start": "1390720",
    "end": "1398919"
  },
  {
    "text": "process uh put that uh offset of the token where the privileged enabler are",
    "start": "1398919",
    "end": "1405360"
  },
  {
    "text": "and get that value decremented and instantly you get a lot of privilege enabled pretty easy we can see the diso",
    "start": "1405360",
    "end": "1414120"
  },
  {
    "text": "in",
    "start": "1414120",
    "end": "1416400"
  },
  {
    "text": "action I don't know why this is so slow so I have a common shell on a",
    "start": "1425960",
    "end": "1432679"
  },
  {
    "text": "really low prev run on low previous account",
    "start": "1432679",
    "end": "1438919"
  },
  {
    "text": "with low Integrity so there is really basic privileges for the",
    "start": "1438919",
    "end": "1446840"
  },
  {
    "text": "process so what the exploit does is locate the the address of the CMD",
    "start": "1447400",
    "end": "1454120"
  },
  {
    "text": "process first I I try to run to run Windows credential editor again it fails",
    "start": "1454120",
    "end": "1460000"
  },
  {
    "text": "because I don't have enough privilege to to dump the password hashes so I run exploits and what the exploit does is",
    "start": "1460000",
    "end": "1468720"
  },
  {
    "text": "first it gets the parent process ID which is the command shell I'm",
    "start": "1468720",
    "end": "1474960"
  },
  {
    "text": "running from what from where I'm running dis ploit after that it gets the the",
    "start": "1474960",
    "end": "1481320"
  },
  {
    "text": "parent process uh primary token Kel",
    "start": "1481320",
    "end": "1486399"
  },
  {
    "text": "address so you can use that address of the token you remember the",
    "start": "1486399",
    "end": "1493600"
  },
  {
    "text": "the pability it just subtract one from there in order to enable the the privileges so in this case what the",
    "start": "1493600",
    "end": "1500880"
  },
  {
    "text": "exploit does is modifying the Privileges of the common shell I'm from which I'm running deploy so now after running",
    "start": "1500880",
    "end": "1508039"
  },
  {
    "text": "displ I run Windows gradation editor again and I can D dump the password",
    "start": "1508039",
    "end": "1513799"
  },
  {
    "text": "hashes because now I have a lot of the different Privileges enabl and one of",
    "start": "1513799",
    "end": "1520360"
  },
  {
    "text": "those privileges is the The Bu privilege so I can access the ls ass process and",
    "start": "1520360",
    "end": "1526720"
  },
  {
    "text": "in code there get the password hashes but there is something interesting here",
    "start": "1526720",
    "end": "1532240"
  },
  {
    "text": "because like I said Windows only checks the enable privileges it doesn't check",
    "start": "1532240",
    "end": "1537399"
  },
  {
    "text": "the privileg that are present initially in the token but if you use process",
    "start": "1537399",
    "end": "1542480"
  },
  {
    "text": "Explorer to look at the Privileges of the common shell in this case it will continue showing the same privileges",
    "start": "1542480",
    "end": "1548039"
  },
  {
    "text": "because process Explorer only look at that part of the structure where are the previous present first if they don't",
    "start": "1548039",
    "end": "1554360"
  },
  {
    "text": "find the present and the previous present there it won't check which are enable or not so you can see here doing",
    "start": "1554360",
    "end": "1562760"
  },
  {
    "text": "this trick you won't be able to notice anything weird in with process Explorer in this uh in this in this case in the",
    "start": "1562760",
    "end": "1570000"
  },
  {
    "text": "common shell process it looks the same but actually it has a lot of more privilege enabled",
    "start": "1570000",
    "end": "1577039"
  },
  {
    "text": "that this that are being show",
    "start": "1577039",
    "end": "1580679"
  },
  {
    "text": "here so the same vulnerability can be EXP Ed on Windows XP and 2003 but in a",
    "start": "1584360",
    "end": "1591039"
  },
  {
    "text": "different way by default on offset a z x on the",
    "start": "1591039",
    "end": "1600720"
  },
  {
    "text": "token structure we have the audit privilege which is number 15 in next but",
    "start": "1600720",
    "end": "1607440"
  },
  {
    "text": "in case we don't have that privilege there we can set that privilege there because by default is present so we can",
    "start": "1607440",
    "end": "1612720"
  },
  {
    "text": "remove other privilege and make sure we have that privilege enabled there that's",
    "start": "1612720",
    "end": "1617799"
  },
  {
    "text": "is is not a problem and we should do if we have to if we want to have a a very",
    "start": "1617799",
    "end": "1623480"
  },
  {
    "text": "reliable exploit and not trust in the default um",
    "start": "1623480",
    "end": "1630480"
  },
  {
    "text": "execution so here you can see we have the the value of 15 but if we substract",
    "start": "1630480",
    "end": "1636760"
  },
  {
    "text": "one then we end up with 14 which mean that the back privilege so you can see",
    "start": "1636760",
    "end": "1642039"
  },
  {
    "text": "here again the same vulnerability on Windows XP and 2003 becomes becomes very easy to exploit because we can't know",
    "start": "1642039",
    "end": "1650080"
  },
  {
    "text": "where this kernel address is and by subtracting one to that kernel position",
    "start": "1650080",
    "end": "1657080"
  },
  {
    "text": "we are setting the the back privilege to our exploit process and in in this case",
    "start": "1657080",
    "end": "1663559"
  },
  {
    "text": "we can access any process on the system in shed code",
    "start": "1663559",
    "end": "1668559"
  },
  {
    "text": "Etc of course in case you can do multiple uh decrements you can continue",
    "start": "1670080",
    "end": "1676000"
  },
  {
    "text": "decrementing under you get another privilege enabled like take ownership or other",
    "start": "1676000",
    "end": "1681799"
  },
  {
    "text": "privilege or you can increment you can do the opposite right so this is now",
    "start": "1681799",
    "end": "1689919"
  },
  {
    "text": "the the last trick another interesting structure I found is the in",
    "start": "1689919",
    "end": "1697679"
  },
  {
    "text": "the inside the eprocess structure which is which correspond to each process on",
    "start": "1697679",
    "end": "1704159"
  },
  {
    "text": "Windows uh there is a a a structure called X fast ref",
    "start": "1704159",
    "end": "1710679"
  },
  {
    "text": "token and actually this is a structure it's a",
    "start": "1710679",
    "end": "1716559"
  },
  {
    "text": "pointer but it's a structure because there are some I think it was the three least significant bites are used to fast",
    "start": "1716559",
    "end": "1723960"
  },
  {
    "text": "reference counting um given my test um it seem",
    "start": "1723960",
    "end": "1730720"
  },
  {
    "text": "that if you don't care about that when replacing a token Windows doesn't crash it just",
    "start": "1730720",
    "end": "1737760"
  },
  {
    "text": "read the the pointer count from the object header here if you remember in",
    "start": "1737760",
    "end": "1743279"
  },
  {
    "text": "the object header from with each window overhead there is a reference con",
    "start": "1743279",
    "end": "1749200"
  },
  {
    "text": "maintained there so if we have for instance a process that that the hand to",
    "start": "1749200",
    "end": "1754720"
  },
  {
    "text": "that process object was open by other process Etc then you get an incremented",
    "start": "1754720",
    "end": "1763120"
  },
  {
    "text": "con there so Windows know where to destroy the object when the con reach to",
    "start": "1763120",
    "end": "1769200"
  },
  {
    "text": "zero um one common mistake that is uh in some exploit that use the technique that",
    "start": "1769200",
    "end": "1776919"
  },
  {
    "text": "the wellknown technique of replacing the token of deoy with the system token is",
    "start": "1776919",
    "end": "1782720"
  },
  {
    "text": "that most of the time people forget about uh incrementing the reference count so if you run dis ploit many times",
    "start": "1782720",
    "end": "1790919"
  },
  {
    "text": "you end up with a blue screen because when the reference con reach to zero",
    "start": "1790919",
    "end": "1796519"
  },
  {
    "text": "windows with free the object but there will be all reference available and other process will try to access the",
    "start": "1796519",
    "end": "1802600"
  },
  {
    "text": "object and then you get a screen and that is common to on some windows kernel",
    "start": "1802600",
    "end": "1808120"
  },
  {
    "text": "uh exploit but because most of the time people just run exploit once they don't notice that it doesn't work when you run",
    "start": "1808120",
    "end": "1814320"
  },
  {
    "text": "it many times so this uh I found this",
    "start": "1814320",
    "end": "1820039"
  },
  {
    "text": "interesting because I thought if I can just Dory right there I will be able to",
    "start": "1820039",
    "end": "1826080"
  },
  {
    "text": "replace a token of the my of myit which just one right I just need to know the",
    "start": "1826080",
    "end": "1833039"
  },
  {
    "text": "the token kernel address of a privilege token in this case from a assistant token in order to get full",
    "start": "1833039",
    "end": "1840480"
  },
  {
    "text": "privileges um it ends up that it's not difficult because you you can guess for",
    "start": "1840480",
    "end": "1848559"
  },
  {
    "text": "instance what are the assistant token if you if you look at different Windows",
    "start": "1848559",
    "end": "1854679"
  },
  {
    "text": "processes you know but that by default for instance some really privileged process like uh Sy or LS ass has some",
    "start": "1854679",
    "end": "1863840"
  },
  {
    "text": "always some token present there and you know sometimes there there are three Pro",
    "start": "1863840",
    "end": "1871080"
  },
  {
    "text": "three process that have one one token always present and it's assistant or",
    "start": "1871080",
    "end": "1876480"
  },
  {
    "text": "administrator so you can do some guessing another way is uh by abusing in some interprocess",
    "start": "1876480",
    "end": "1885960"
  },
  {
    "text": "communication mechanisms because when you when in Windows when you do IPC interpress communication mechanisms",
    "start": "1885960",
    "end": "1893159"
  },
  {
    "text": "there is some impersonation taking place and when you do it from a low privilege process sometimes you end up with an",
    "start": "1893159",
    "end": "1900320"
  },
  {
    "text": "identity token on your process on the client process that is doing",
    "start": "1900320",
    "end": "1905399"
  },
  {
    "text": "IPC and I found out something interesting that when you are replacing a token the primary token of a process",
    "start": "1905399",
    "end": "1913279"
  },
  {
    "text": "we don't doesn't check if the process you are setting there is a identity token is a a primary token or",
    "start": "1913279",
    "end": "1921799"
  },
  {
    "text": "it's Anonymous token window doesn't check that it just check the privilege that are present in the",
    "start": "1921799",
    "end": "1926919"
  },
  {
    "text": "token so it's very easy to get a assistant identity token in this",
    "start": "1926919",
    "end": "1933480"
  },
  {
    "text": "case um there is a API called MSI install product so from a low privileg",
    "start": "1933480",
    "end": "1941320"
  },
  {
    "text": "process you can call that API you will need to hook and open three token in",
    "start": "1941320",
    "end": "1946880"
  },
  {
    "text": "order to know where the token is opened and avoid to the that token to be closed",
    "start": "1946880",
    "end": "1954399"
  },
  {
    "text": "by by your process so you make a copy of that token so you get a assistant",
    "start": "1954399",
    "end": "1959679"
  },
  {
    "text": "identity token available for your use and by using the enti query system information you get the kernel address",
    "start": "1959679",
    "end": "1966000"
  },
  {
    "text": "of that token so you now you have information needed",
    "start": "1966000",
    "end": "1972320"
  },
  {
    "text": "to that will allow you to replace the current token toen of your exploit",
    "start": "1972320",
    "end": "1979000"
  },
  {
    "text": "because of course if you are exploiting something you are running under a low privileg account so you get this system",
    "start": "1979000",
    "end": "1985840"
  },
  {
    "text": "token you replace your primary token and then Elevate",
    "start": "1985840",
    "end": "1991639"
  },
  {
    "text": "privileges but like I said you must take uh care of the reference",
    "start": "1991639",
    "end": "1997600"
  },
  {
    "text": "count because if you remember all this is without ruining any code in kernel we",
    "start": "1997600",
    "end": "2004279"
  },
  {
    "text": "are just doing one right to the kernel and that's it in this case we will need",
    "start": "2004279",
    "end": "2010600"
  },
  {
    "text": "to to do maybe two rights because first we will need to increment the reference",
    "start": "2010600",
    "end": "2016120"
  },
  {
    "text": "count to a really high value in order to make sure it will never reach to",
    "start": "2016120",
    "end": "2022760"
  },
  {
    "text": "zero so the first right will be to increment the value and the second right to replace the token and that's it then",
    "start": "2022760",
    "end": "2028480"
  },
  {
    "text": "you have a a system process running uh but if you have only one",
    "start": "2028480",
    "end": "2035000"
  },
  {
    "text": "right there is a solution also because you you what you have to do is just replace the token and then with the",
    "start": "2035000",
    "end": "2040399"
  },
  {
    "text": "second right you have to duplicate after elevating privileges you can duplicate that token in a process that never",
    "start": "2040399",
    "end": "2047200"
  },
  {
    "text": "terminates like lsas because when you duplicate that you",
    "start": "2047200",
    "end": "2054000"
  },
  {
    "text": "make sure that that uh process um that token will never be destroy by the",
    "start": "2054000",
    "end": "2061679"
  },
  {
    "text": "system so you will never the reference count never will reach to zero so you won't get a blue",
    "start": "2061679",
    "end": "2069919"
  },
  {
    "text": "screen so like I said it's a three easy step like get the identity token get",
    "start": "2069919",
    "end": "2077240"
  },
  {
    "text": "your uh token kernel address replace it in your process in this case will be the",
    "start": "2077240",
    "end": "2083878"
  },
  {
    "text": "diso and instantly Elevate privileges just make sure to to take care of the",
    "start": "2083879",
    "end": "2089440"
  },
  {
    "text": "reference",
    "start": "2089440",
    "end": "2091838"
  },
  {
    "text": "count so some final conclusions is uh",
    "start": "2094679",
    "end": "2100560"
  },
  {
    "text": "like uh like I said it's it's really simple just just call in ENT query City",
    "start": "2100560",
    "end": "2106560"
  },
  {
    "text": "information locate the colel address and just write a value at the proper address",
    "start": "2106560",
    "end": "2112119"
  },
  {
    "text": "and instantly Elevate privileges it has one right you don't have to run any",
    "start": "2112119",
    "end": "2117240"
  },
  {
    "text": "coding kernel and that's it and also it work for really difficult to exploit",
    "start": "2117240",
    "end": "2124880"
  },
  {
    "text": "vulnerabilities and of course these are just some ways I found by researching",
    "start": "2125040",
    "end": "2130240"
  },
  {
    "text": "some specific Kel structure if you continue doing some research maybe you can find some even easier way to to",
    "start": "2130240",
    "end": "2137640"
  },
  {
    "text": "elevate privilege by replacing some values in in some windows uh kernel option",
    "start": "2137640",
    "end": "2144599"
  },
  {
    "text": "structure and finally like I said for me it's like you don't always need a sistant shell you just need to be able",
    "start": "2144599",
    "end": "2150680"
  },
  {
    "text": "to perform privilege actions so that is a reference to the",
    "start": "2150680",
    "end": "2156280"
  },
  {
    "text": "paper and thanks to Ren Sant Mar and T for the feedback and proof of",
    "start": "2156280",
    "end": "2163319"
  },
  {
    "text": "concept and that's it so any",
    "start": "2163319",
    "end": "2169440"
  },
  {
    "text": "questions",
    "start": "2176200",
    "end": "2179200"
  },
  {
    "text": "questions no okay so it was easy right thank",
    "start": "2184200",
    "end": "2190760"
  },
  {
    "text": "you",
    "start": "2191319",
    "end": "2194319"
  }
]