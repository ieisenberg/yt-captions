[
  {
    "text": "thank you for the nice introduction uh maybe he's the the only guy who pronounce my name exactly um I pronounce",
    "start": "2639",
    "end": "11320"
  },
  {
    "text": "my name again I'm s Han and uh from uh",
    "start": "11320",
    "end": "16720"
  },
  {
    "text": "just the Affiliated Institute of e",
    "start": "16720",
    "end": "22199"
  },
  {
    "text": "um wow many people so many people are here for my talk and thank you for attending and especially thank you for",
    "start": "22199",
    "end": "28400"
  },
  {
    "text": "leave board members here uh this talk is a little bit theoretical so I will spend",
    "start": "28400",
    "end": "33920"
  },
  {
    "text": "most time to explain my page oriented programming and show the",
    "start": "33920",
    "end": "39200"
  },
  {
    "text": "demo before starting my talk I would like to introduce myself uh I'm a senior",
    "start": "39200",
    "end": "44480"
  },
  {
    "text": "skill researcher at the Affiliated Institute of I and I'm a riew board member of black a and kimon Conference I",
    "start": "44480",
    "end": "52079"
  },
  {
    "text": "was a speaker at several conferences like us security blackhead USA uh Asia",
    "start": "52079",
    "end": "57399"
  },
  {
    "text": "Europe Hing the Box conference and more additionally I'm a senior oh sorry I'm a",
    "start": "57399",
    "end": "63120"
  },
  {
    "text": "Dean Linux maintainer and have contributed several Linux con patches too goal of this presentation first I",
    "start": "63120",
    "end": "71640"
  },
  {
    "text": "present weaknesses of the stateof theart Conor CFI hardware and software based",
    "start": "71640",
    "end": "77240"
  },
  {
    "text": "cfis only focus on indirect branches uh but R CFI and or CFI including Conor",
    "start": "77240",
    "end": "84680"
  },
  {
    "text": "cfis need nonr of code but it is only insured by the page labor protection",
    "start": "84680",
    "end": "90840"
  },
  {
    "text": "mechanism second I introduced a no and Page label coder user attack called page",
    "start": "90840",
    "end": "97200"
  },
  {
    "text": "oriented programming po po utilizes uh the weaknesses of the Conor",
    "start": "97200",
    "end": "104360"
  },
  {
    "text": "CFI it programs page tables within the Conor uh to create new control flows",
    "start": "104360",
    "end": "109960"
  },
  {
    "text": "with an existing Conor memory read and write vulnerability you know the word existing",
    "start": "109960",
    "end": "116439"
  },
  {
    "text": "means that this talk doesn't explain how to find a vulnerabilities um yep I know who you",
    "start": "116439",
    "end": "124119"
  },
  {
    "text": "are and you already had many kinds of vulnerabilities in your hands so please",
    "start": "124119",
    "end": "129879"
  },
  {
    "text": "use them for my PO uh not for me please uh oh if you are not that kind of",
    "start": "129879",
    "end": "137360"
  },
  {
    "text": "person uh please ask around you and be careful this talk comes from a huge",
    "start": "137360",
    "end": "144840"
  },
  {
    "text": "mistake that I made um many of you oh sorry",
    "start": "144840",
    "end": "150400"
  },
  {
    "text": "Hing is so big yeah many of you already knew and made a mistake one person miss",
    "start": "150400",
    "end": "156560"
  },
  {
    "text": "another person and imagine the bright future together and like a journey",
    "start": "156560",
    "end": "164040"
  },
  {
    "text": "mhm can you guess what it",
    "start": "164040",
    "end": "167840"
  },
  {
    "text": "was maybe you know that no ah",
    "start": "169440",
    "end": "176720"
  },
  {
    "text": "yeah um I know what you imagine now and",
    "start": "176720",
    "end": "182440"
  },
  {
    "text": "uh uh in my case uh it was um PhD",
    "start": "182440",
    "end": "187959"
  },
  {
    "text": "Journey you know I met my professor and imagine my bre graduation together and",
    "start": "187959",
    "end": "195239"
  },
  {
    "text": "uh H yes just forget it and anyway um I",
    "start": "195239",
    "end": "200360"
  },
  {
    "text": "can't understand why people call it a journey uh but it is called like that",
    "start": "200360",
    "end": "205560"
  },
  {
    "text": "and the problem started because of it you know before starting my PhD my brain",
    "start": "205560",
    "end": "212360"
  },
  {
    "text": "whispered to me like bro I got many ideas and many algorithms you know and",
    "start": "212360",
    "end": "217920"
  },
  {
    "text": "we can make it bro mhm I swear yeah it really did and after",
    "start": "217920",
    "end": "224480"
  },
  {
    "text": "that uh my yeah my brain was changing in your",
    "start": "224480",
    "end": "229640"
  },
  {
    "text": "time like this you see as you see uh my brain has yeah right to right no no",
    "start": "229640",
    "end": "236680"
  },
  {
    "text": "algorithm and no ideas uh changed the two uh no ideas and no algorithms I felt",
    "start": "236680",
    "end": "242480"
  },
  {
    "text": "like someone sto my brain and put something uh happy instead of",
    "start": "242480",
    "end": "247799"
  },
  {
    "text": "it I know I shouldn't have to trust in my brain it's also me",
    "start": "247799",
    "end": "254239"
  },
  {
    "text": "right when I was dying because of the Betrayal of my brain one day one of my",
    "start": "254239",
    "end": "260400"
  },
  {
    "text": "colleagues saved me with these words what a secure word mhm counterflow",
    "start": "260400",
    "end": "268720"
  },
  {
    "text": "Integrity is everywhere um uhoh as you see these words uh have",
    "start": "268720",
    "end": "276320"
  },
  {
    "text": "some senstive points like secure and counterflow",
    "start": "276320",
    "end": "281960"
  },
  {
    "text": "integrity those means that counterflow Integrity uh as known as CFI can make a",
    "start": "281960",
    "end": "287800"
  },
  {
    "text": "secq word I think uh the secq word hasn't come yet because I know what you are",
    "start": "287800",
    "end": "296000"
  },
  {
    "text": "doing at work and free time so uh how can I imagine the CQ world huh even I",
    "start": "296000",
    "end": "303160"
  },
  {
    "text": "stand here because I could break the CFI right so it was enough to wake up my",
    "start": "303160",
    "end": "309960"
  },
  {
    "text": "brain and yeah I'm here to present my research result",
    "start": "309960",
    "end": "315360"
  },
  {
    "text": "now so this presentation is about breaking Hardware assisted C counterflow",
    "start": "315360",
    "end": "320840"
  },
  {
    "text": "Integrity with page oriented programming uh is also the title of my",
    "start": "320840",
    "end": "325960"
  },
  {
    "text": "talk so first I will explain contraflow in integr briefly and Hardware assisted Corner",
    "start": "325960",
    "end": "333960"
  },
  {
    "text": "CFI after that I will introduce a no and Page level code user tag uh page",
    "start": "333960",
    "end": "340120"
  },
  {
    "text": "oriented programming Po and show how to break the CFI with",
    "start": "340120",
    "end": "347000"
  },
  {
    "text": "it this is content and now CFI contol flow Integrity is based on a",
    "start": "347000",
    "end": "355000"
  },
  {
    "text": "counterflow graph as known as CFG the CFG contains our or legitimate execution",
    "start": "355000",
    "end": "360720"
  },
  {
    "text": "flows of a program it can be generated from static and dynamic analysis and has",
    "start": "360720",
    "end": "366400"
  },
  {
    "text": "two kinds of edges forward and backward forward edges consist of uh indirect",
    "start": "366400",
    "end": "372319"
  },
  {
    "text": "course and jumps and backward edges consist of returns the CFI monitors uh",
    "start": "372319",
    "end": "378199"
  },
  {
    "text": "the execution flows with the cfz and uh at wrun time and prevents controlflow",
    "start": "378199",
    "end": "383599"
  },
  {
    "text": "deviations like contraflow hijackings this page shows the original",
    "start": "383599",
    "end": "390639"
  },
  {
    "text": "CFI Source two function has two function ches uh the first chord goes like this",
    "start": "390639",
    "end": "397360"
  },
  {
    "text": "and the second core goes like this in the diagram the CFG assigns",
    "start": "397360",
    "end": "404960"
  },
  {
    "text": "identifiers to restrict indirect branches like number 17 represents the",
    "start": "404960",
    "end": "411479"
  },
  {
    "text": "valid path to the RT and GT functions number 23 also represents",
    "start": "411479",
    "end": "417360"
  },
  {
    "text": "return path to the sort function and number 55 is the same as others",
    "start": "417360",
    "end": "423759"
  },
  {
    "text": "mentioned before as you see the wick point of it is clear that's Precision for example",
    "start": "423759",
    "end": "434000"
  },
  {
    "text": "number 17 can transfer to both LT and GT functions and number 55 can return to",
    "start": "434000",
    "end": "442080"
  },
  {
    "text": "the court site within s to function however we all know that the",
    "start": "442080",
    "end": "448759"
  },
  {
    "text": "more precis we have yeah we get the more overhead we have so it's a",
    "start": "448759",
    "end": "455720"
  },
  {
    "text": "tradeoff to overcome uh this tradeoff there have been many so many studies uh",
    "start": "456360",
    "end": "462240"
  },
  {
    "text": "some of them reduced overhead with profiling data and Hardware supports and",
    "start": "462240",
    "end": "467360"
  },
  {
    "text": "they also affected real world CFI implementations all right the next is",
    "start": "467360",
    "end": "474360"
  },
  {
    "text": "Hardware assisted Corner CFI in use in the meanwhile",
    "start": "474360",
    "end": "479960"
  },
  {
    "text": "practical cfis have focused on uh deployability and practicality um there",
    "start": "479960",
    "end": "485599"
  },
  {
    "text": "are several CFI implementations such as Microsoft counterflow guard uh clang CFI",
    "start": "485599",
    "end": "491639"
  },
  {
    "text": "and fine IBT especially fine IBT is the ratest one and applied to the ring",
    "start": "491639",
    "end": "497720"
  },
  {
    "text": "Conner they they have similar architectures that combine the software based CFI with the hardware based CFI um",
    "start": "497720",
    "end": "506199"
  },
  {
    "text": "like um Intel counterflow enforcement technology ology as known as C Reus of",
    "start": "506199",
    "end": "512000"
  },
  {
    "text": "the protector from the PX team and CNU compiler collection are not mentioned",
    "start": "512000",
    "end": "517279"
  },
  {
    "text": "here uh but they also support the CFI in their own",
    "start": "517279",
    "end": "523080"
  },
  {
    "text": "ways by the way what's the inter C there have been many talks about inter",
    "start": "523080",
    "end": "529680"
  },
  {
    "text": "C so I would like to explain it briefly inter city has two features uh indirect",
    "start": "529680",
    "end": "536880"
  },
  {
    "text": "Branch tracking IBT and Shadow stack the IBT feature remits abilities of indu",
    "start": "536880",
    "end": "543680"
  },
  {
    "text": "cores and jumps so they can only uh transfer to the and Branch instruction",
    "start": "543680",
    "end": "549320"
  },
  {
    "text": "Shadow St protects uh the return address with saving it to the protected",
    "start": "549320",
    "end": "555639"
  },
  {
    "text": "area yep uh I know one picture is better than thousand of words uh so here are",
    "start": "556160",
    "end": "561320"
  },
  {
    "text": "some diagrams uh this is an example of IBT core Rax and and Branch instructions",
    "start": "561320",
    "end": "567200"
  },
  {
    "text": "are the core part so the indirect core can jump to the End",
    "start": "567200",
    "end": "573360"
  },
  {
    "text": "branch however it can't transfer to other points like the middle of the",
    "start": "573360",
    "end": "580640"
  },
  {
    "text": "function on the right side uh it shows how Shadow St Works after function core the return",
    "start": "580640",
    "end": "588079"
  },
  {
    "text": "address is saved to both the stack and Shadow stack after that uh the St",
    "start": "588079",
    "end": "593600"
  },
  {
    "text": "pointer RSP and the shadow St pointer SSP move down when the return occurs the CPU pops",
    "start": "593600",
    "end": "602040"
  },
  {
    "text": "return addresses from the stack and Shad stack and check them it's",
    "start": "602040",
    "end": "607640"
  },
  {
    "text": "simple so what is the hardware assisted CFI you already knew that it means the",
    "start": "607640",
    "end": "615120"
  },
  {
    "text": "software based CFI assisted by the hardware based CFI the software based",
    "start": "615120",
    "end": "620800"
  },
  {
    "text": "CFI is effective and has been used widely but it actually can't restrict uh",
    "start": "620800",
    "end": "627399"
  },
  {
    "text": "indu branches strictly you know they can still jump to any location in contrast the hardware based",
    "start": "627399",
    "end": "635279"
  },
  {
    "text": "CFI can restrict them so the combination of hardware and software based cfis can",
    "start": "635279",
    "end": "641320"
  },
  {
    "text": "enforce uh strong CFI uh policies now it's time to tell you what",
    "start": "641320",
    "end": "647720"
  },
  {
    "text": "the hardware assisted Corner CFI is it's also a kind of CFI with special features",
    "start": "647720",
    "end": "653839"
  },
  {
    "text": "to support various counter flows like system cores interrupts and ex itions",
    "start": "653839",
    "end": "659959"
  },
  {
    "text": "and languages like C Rost and even assembly commodity oses uh already have",
    "start": "659959",
    "end": "666200"
  },
  {
    "text": "their own Corner CFI like Microsoft cfp for the windows Conner and Clank K CFI",
    "start": "666200",
    "end": "673240"
  },
  {
    "text": "and F IBT for the Linux Conner especially uh the sh stack of int C is",
    "start": "673240",
    "end": "679519"
  },
  {
    "text": "not ready for the r Conner yet all right this is an example of",
    "start": "679519",
    "end": "686519"
  },
  {
    "text": "Clank kcfi as you know inter C works like this m",
    "start": "686519",
    "end": "694320"
  },
  {
    "text": "and this part is a software based CFI uh especially has a coros side verification",
    "start": "694320",
    "end": "702880"
  },
  {
    "text": "method in line number four you can see the value F FFA f",
    "start": "702880",
    "end": "709399"
  },
  {
    "text": "a6c it comes from the function signature here and it's a negative value of the",
    "start": "709399",
    "end": "717399"
  },
  {
    "text": "signature this means that that the line number five must be zero uh if the target of the indirect branch is varied",
    "start": "717399",
    "end": "724959"
  },
  {
    "text": "if not an exception occurs this page shows the fin IP code",
    "start": "724959",
    "end": "732240"
  },
  {
    "text": "that is the target of this talk the difference between Clank Cas",
    "start": "732240",
    "end": "737440"
  },
  {
    "text": "CFI and fine IBT is the verification Point fine IBT has a c side verification",
    "start": "737440",
    "end": "744000"
  },
  {
    "text": "method like this and other parts are similar to The kcfi mentioned before",
    "start": "744000",
    "end": "750880"
  },
  {
    "text": "by the way all CFI have the same assumption is non WR",
    "start": "751839",
    "end": "758320"
  },
  {
    "text": "oford if the assumption is not insured like line number five by changing the",
    "start": "758320",
    "end": "764880"
  },
  {
    "text": "sub instruction to the no operation the indirect branch in line number six can jump to the Target function without any",
    "start": "764880",
    "end": "774000"
  },
  {
    "text": "checks in another case uh line number 11 by changing the ud2 instruction to the",
    "start": "774000",
    "end": "780360"
  },
  {
    "text": "no operation mhm any indirect Branch uh can jump to the point because the check doesn't",
    "start": "780360",
    "end": "789560"
  },
  {
    "text": "work so this means that all cfis including Conor cfis can be neutralized",
    "start": "789639",
    "end": "796160"
  },
  {
    "text": "without non writable code",
    "start": "796160",
    "end": "800600"
  },
  {
    "text": "right non writable code for application uh is insured by the page tables within",
    "start": "801199",
    "end": "807839"
  },
  {
    "text": "the corner so Conor vulnerabilities are needed to change the permissions of the",
    "start": "807839",
    "end": "813639"
  },
  {
    "text": "page tablers because CFI can PR B to",
    "start": "813639",
    "end": "819360"
  },
  {
    "text": "oops sorry um I would like to say because for other conference but um I",
    "start": "819360",
    "end": "825320"
  },
  {
    "text": "have to say if for this conference so uh let me repeat again so if the CFI can",
    "start": "825320",
    "end": "834199"
  },
  {
    "text": "prevent counterflow deviations like uh virtual protect and uh and protect",
    "start": "834199",
    "end": "841519"
  },
  {
    "text": "functions yeah anyway then what ensures non right record for the",
    "start": "841519",
    "end": "849680"
  },
  {
    "text": "corner mhm yeah just page",
    "start": "851199",
    "end": "857079"
  },
  {
    "text": "tables um yeah this picture shows my concerns",
    "start": "857079",
    "end": "862560"
  },
  {
    "text": "about it you know they have the same privilege so the page table can't ensure",
    "start": "862560",
    "end": "869279"
  },
  {
    "text": "the nonr recode for the Conner right so we need the nonr rec code",
    "start": "869279",
    "end": "876920"
  },
  {
    "text": "mechanism for Connor not the trust the wellone and widely deployed",
    "start": "876920",
    "end": "884959"
  },
  {
    "text": "mechanism is hypervisor uh based uh protection mechanism like this the",
    "start": "884959",
    "end": "890000"
  },
  {
    "text": "hypervisor has its own page tables called second level address translation table as known as srat table and recent",
    "start": "890000",
    "end": "898440"
  },
  {
    "text": "op opting systems like Microsoft Windows also ensure non rable code with it SX",
    "start": "898440",
    "end": "905440"
  },
  {
    "text": "means um supervisor execute permission and ux means a user execute permission",
    "start": "905440",
    "end": "911720"
  },
  {
    "text": "in this page they are activated because of supporting Intel mode based execution",
    "start": "911720",
    "end": "917320"
  },
  {
    "text": "control as known as MBC okay the picture is uh little",
    "start": "917320",
    "end": "923320"
  },
  {
    "text": "complicated uh let's see how it works if the code modification occurs by",
    "start": "923320",
    "end": "930560"
  },
  {
    "text": "manipulating the permission of the page table like this the modification is prevented",
    "start": "930560",
    "end": "937720"
  },
  {
    "text": "because the srat table is still set to non",
    "start": "937720",
    "end": "942839"
  },
  {
    "text": "writable if credential modification occurs like",
    "start": "943120",
    "end": "948399"
  },
  {
    "text": "this yeah it's also prevented because of the SR",
    "start": "948639",
    "end": "954720"
  },
  {
    "text": "table in this case code injection occurs by setting the execut bit of the",
    "start": "955240",
    "end": "962120"
  },
  {
    "text": "page table yeah it's prevented",
    "start": "962120",
    "end": "969160"
  },
  {
    "text": "too as you see unauthorized code modification and injection are pre",
    "start": "969560",
    "end": "974880"
  },
  {
    "text": "bented successfully now the core part pageor",
    "start": "974880",
    "end": "980839"
  },
  {
    "text": "ranged programming the hypervisor record mechanism and Hardware",
    "start": "980839",
    "end": "988120"
  },
  {
    "text": "assisted Conner CFI are effective and work properly",
    "start": "988120",
    "end": "993759"
  },
  {
    "text": "right M no it's not true anymore actually the",
    "start": "993759",
    "end": "1000680"
  },
  {
    "text": "fact is that they were effective and worked uh because of this",
    "start": "1000680",
    "end": "1006399"
  },
  {
    "text": "talk let's check the weakness of the hypervisor based nonr record mechanism",
    "start": "1006399",
    "end": "1012120"
  },
  {
    "text": "as you see here are two functions uh one is system core and the other is Comic crash that can escalate Your",
    "start": "1012120",
    "end": "1019839"
  },
  {
    "text": "Privilege comic is in ff88 5211 and the",
    "start": "1019839",
    "end": "1025199"
  },
  {
    "text": "system core is in FF 81211 their page offsets are",
    "start": "1025199",
    "end": "1033199"
  },
  {
    "text": "identical as you have seen uh uniz code modification and injection are prevented",
    "start": "1033799",
    "end": "1039400"
  },
  {
    "text": "because of the srat tables however if you remap existing physical",
    "start": "1039400",
    "end": "1046798"
  },
  {
    "text": "Pages like this then you can create new control",
    "start": "1046799",
    "end": "1053120"
  },
  {
    "text": "flow this means that you can get the escalated privilege by calling the",
    "start": "1053120",
    "end": "1058919"
  },
  {
    "text": "system cod with root credentials this process calls the legitimate function like comic crash so",
    "start": "1058919",
    "end": "1066760"
  },
  {
    "text": "if the credential modification attack is prevented by the hypervisor this technique yeah still works",
    "start": "1066760",
    "end": "1075320"
  },
  {
    "text": "mhm now the weakness of the half Hardware assisted Conor",
    "start": "1075320",
    "end": "1080360"
  },
  {
    "text": "CFI it focuses on indirect branches then what cares about direct",
    "start": "1080360",
    "end": "1088039"
  },
  {
    "text": "branches no nothing cares about them now I present a over and Page level",
    "start": "1088360",
    "end": "1095600"
  },
  {
    "text": "coder uses Tex such as uh return oriented programming and jump oriented programming is Page oriented programming",
    "start": "1095600",
    "end": "1103559"
  },
  {
    "text": "po po exploits the the oper mentions weaknesses of state of D art Conor cfis",
    "start": "1103559",
    "end": "1110320"
  },
  {
    "text": "it programs page tables with a Conor memory read and right vulnerability to",
    "start": "1110320",
    "end": "1115480"
  },
  {
    "text": "uh train code pages and direct branches so po can make new control flows under",
    "start": "1115480",
    "end": "1122080"
  },
  {
    "text": "CFI enforcement it identifies P label gadgets and uh stitches them to bypass",
    "start": "1122080",
    "end": "1128840"
  },
  {
    "text": "the strong CFI policies po consist of four stages um",
    "start": "1128840",
    "end": "1137520"
  },
  {
    "text": "the first stage is Page carving uh which identifies gadgets and system CES from",
    "start": "1137520",
    "end": "1143200"
  },
  {
    "text": "the corner binary and the second stage is Page",
    "start": "1143200",
    "end": "1148720"
  },
  {
    "text": "stitching it change gadgets and system CES to create new contol flows the third stage is uh page",
    "start": "1148720",
    "end": "1156919"
  },
  {
    "text": "flushing uh which flush the stale mappings uh in the",
    "start": "1156919",
    "end": "1162200"
  },
  {
    "text": "tlb and the final stage is exploitation it just execute the system core with uh",
    "start": "1162200",
    "end": "1168320"
  },
  {
    "text": "arbitrary arguments this page shows uh stages uh briefly to help you understand po uh",
    "start": "1168320",
    "end": "1175760"
  },
  {
    "text": "then um let's dive into the details page carving finds gadgets and",
    "start": "1175760",
    "end": "1182400"
  },
  {
    "text": "system CES um the gadget type doesn't need to be the function you know but for",
    "start": "1182400",
    "end": "1188679"
  },
  {
    "text": "simplity I chose only the function type for this talk um there are two types of",
    "start": "1188679",
    "end": "1194280"
  },
  {
    "text": "gadgets one is the core Gadget and the other is the no operation Gadget the core Gadget looks like this",
    "start": "1194280",
    "end": "1201720"
  },
  {
    "text": "and has direct branches and connects a system core candidate to the comic",
    "start": "1201720",
    "end": "1208480"
  },
  {
    "text": "crass the no operation gadget on links on essential functions within the",
    "start": "1208480",
    "end": "1213799"
  },
  {
    "text": "gadgets or the system core candidates or the comic",
    "start": "1213799",
    "end": "1219640"
  },
  {
    "text": "Crest the page stitching stage uh change gadgets with data to create new control",
    "start": "1219640",
    "end": "1224679"
  },
  {
    "text": "flows it remaps a gadgets uh physical page to the Target logical address of",
    "start": "1224679",
    "end": "1230039"
  },
  {
    "text": "the direct Branch uh by programming page tables it also builds private page",
    "start": "1230039",
    "end": "1235120"
  },
  {
    "text": "tables for exploitation by allocating new page tables whenever remapping is",
    "start": "1235120",
    "end": "1240360"
  },
  {
    "text": "needed three pages for them are allocated from the direct mapping area",
    "start": "1240360",
    "end": "1246039"
  },
  {
    "text": "of the corner in reverse order yeah I know I know uh the page",
    "start": "1246039",
    "end": "1251679"
  },
  {
    "text": "stitching is a complicated part so let's see with the",
    "start": "1251679",
    "end": "1256720"
  },
  {
    "text": "diagrams um yeah yeah the original Contra flow goes like this okay and",
    "start": "1256720",
    "end": "1264440"
  },
  {
    "text": "the new Contra flow can go like this if",
    "start": "1264440",
    "end": "1269919"
  },
  {
    "text": "a system core candidate has a direct branch that can reach a core Gadget M",
    "start": "1269919",
    "end": "1275159"
  },
  {
    "text": "and if the core Gadget also has a direct Branch uh that the page offset is 220",
    "start": "1275159",
    "end": "1281880"
  },
  {
    "text": "that is the same upset as the comic Crest then comic Crest can be REM mapped",
    "start": "1281880",
    "end": "1289039"
  },
  {
    "text": "according to the direct Branch like this MH and remains so functions also need to",
    "start": "1289039",
    "end": "1297480"
  },
  {
    "text": "be remapped however if they are unessential they can be replaced with no",
    "start": "1297480",
    "end": "1303679"
  },
  {
    "text": "operation Gadget and this is the final piece root",
    "start": "1303679",
    "end": "1309799"
  },
  {
    "text": "credentials so we can escalate our privilege with uh the argument and the",
    "start": "1309799",
    "end": "1316080"
  },
  {
    "text": "system course the page flushing stag is uh sorry uh",
    "start": "1316080",
    "end": "1323000"
  },
  {
    "text": "stage flush is all the mappings in the tlb to apply new ones there could be many ways to flush uh Conor TV um",
    "start": "1323000",
    "end": "1332080"
  },
  {
    "text": "however I just removed the global bits uh in sh page table and SLT for",
    "start": "1332080",
    "end": "1337840"
  },
  {
    "text": "sufficient time as you know the tlb has limited space so they can't hold oron",
    "start": "1337840",
    "end": "1343880"
  },
  {
    "text": "mappings so therefore U mapping data which don't have the robber bits are",
    "start": "1343880",
    "end": "1349080"
  },
  {
    "text": "flushed first one thing we should consider is the CPU Affinity because each core has",
    "start": "1349080",
    "end": "1356240"
  },
  {
    "text": "its own tlb the last stage is exploitation it's",
    "start": "1356240",
    "end": "1362480"
  },
  {
    "text": "very very simple just execute the system core with an arbitrary arguments on the",
    "start": "1362480",
    "end": "1367880"
  },
  {
    "text": "same core where the page flushing stage was done 32bit and 64bit system chords",
    "start": "1367880",
    "end": "1374159"
  },
  {
    "text": "can be used for the exploitation m [Music]",
    "start": "1374159",
    "end": "1380480"
  },
  {
    "text": "yeah I can guess how what you are worried about is so complicated right so",
    "start": "1380480",
    "end": "1388320"
  },
  {
    "text": "at this time this picture shows your worries uh you are thinking like so do",
    "start": "1388320",
    "end": "1395000"
  },
  {
    "text": "you mean uh this really works huh yeah it's okay it's okay this isn't",
    "start": "1395000",
    "end": "1402320"
  },
  {
    "text": "the first time uh and even my colleagues uh who work together also did like you",
    "start": "1402320",
    "end": "1408679"
  },
  {
    "text": "so um and uh pop is a New Concept so I",
    "start": "1408679",
    "end": "1414840"
  },
  {
    "text": "can understand you and also my colleagues seeing is believing right the",
    "start": "1414840",
    "end": "1420039"
  },
  {
    "text": "demo is ready for you let's see it demo",
    "start": "1420039",
    "end": "1427000"
  },
  {
    "text": "time okay I used a laptop from Asus and also use software listed in this page",
    "start": "1427760",
    "end": "1434760"
  },
  {
    "text": "like llvm is version six and R Conor version 6.3.1 with fine IBT to make the",
    "start": "1434760",
    "end": "1442200"
  },
  {
    "text": "process simple I executed a Conor driver uh that has information disclosure and",
    "start": "1442200",
    "end": "1448200"
  },
  {
    "text": "memory read and write vulnerabilities additionally I modified open source hypervisor Shadow Fox to",
    "start": "1448200",
    "end": "1455279"
  },
  {
    "text": "support Intel C and MBC features and it ran it uh sorry I ran it on the system",
    "start": "1455279",
    "end": "1463080"
  },
  {
    "text": "uh the hypervisor was presented at blackhead Asia 2017 so if you are",
    "start": "1463080",
    "end": "1468440"
  },
  {
    "text": "interested in the hypervisor uh please check it uh people showing the demo",
    "start": "1468440",
    "end": "1478200"
  },
  {
    "text": "um I would like to show the reality is uh until now you can see the that's the",
    "start": "1478880",
    "end": "1485520"
  },
  {
    "text": "brief version but um uh yeah I would like to say Charlie Chaplin",
    "start": "1485520",
    "end": "1493760"
  },
  {
    "text": "the greatest actor and director said life is a tragedy when seen in a closeup",
    "start": "1493760",
    "end": "1500880"
  },
  {
    "text": "but comedy in long shot but I totally agree and I would like to say like",
    "start": "1500880",
    "end": "1506679"
  },
  {
    "text": "building an exploit uh is a tragedy when done by my hands but a comedy by your",
    "start": "1506679",
    "end": "1514080"
  },
  {
    "text": "hands right and now it's time to close up I prepared some uh complicate",
    "start": "1514080",
    "end": "1522080"
  },
  {
    "text": "diagrams for you for to show the tragedy in this slide yeah it's the",
    "start": "1522080",
    "end": "1528559"
  },
  {
    "text": "reality I prepared um and chose uh two core gadgets xhci address device and",
    "start": "1528559",
    "end": "1536440"
  },
  {
    "text": "config FS open file and also I chose the system core is",
    "start": "1536440",
    "end": "1542000"
  },
  {
    "text": "BPF then I remapped the first core Gadget to the Target address of uh the",
    "start": "1542000",
    "end": "1548279"
  },
  {
    "text": "direct Branch the displacement is minus 983 34 Z",
    "start": "1548279",
    "end": "1553760"
  },
  {
    "text": "so the target address is in the court guide gazet uh should be changed like",
    "start": "1553760",
    "end": "1559960"
  },
  {
    "text": "this the second corit is remapped and it's the same as the previous",
    "start": "1559960",
    "end": "1566720"
  },
  {
    "text": "one the displacement is minus 27 F 3 zos and affects also the direct",
    "start": "1566720",
    "end": "1575520"
  },
  {
    "text": "event finally comic is remapped and the displacement is uh 1 19d Tri",
    "start": "1575520",
    "end": "1584279"
  },
  {
    "text": "Z and the instruction pointer based vales are changed like this it's just a",
    "start": "1584279",
    "end": "1590960"
  },
  {
    "text": "simple addition so please check my presentation after this",
    "start": "1590960",
    "end": "1596200"
  },
  {
    "text": "talk and this is not the end let's focus on the comic",
    "start": "1596200",
    "end": "1602200"
  },
  {
    "text": "crass comic CR updates uh credentials here and C seven functions like",
    "start": "1602200",
    "end": "1611080"
  },
  {
    "text": "this okay these functions need to be remapped however all functions are not",
    "start": "1611080",
    "end": "1616240"
  },
  {
    "text": "essential that means let's replace them with no operation",
    "start": "1616240",
    "end": "1621559"
  },
  {
    "text": "Gadget to evade remapping explosion the first one is set actually",
    "start": "1621559",
    "end": "1629240"
  },
  {
    "text": "uh it has no external cords so remapping is a good choice however I just replac",
    "start": "1629240",
    "end": "1635840"
  },
  {
    "text": "it with the L operation Gadget and the next ones are these two",
    "start": "1635840",
    "end": "1642080"
  },
  {
    "text": "functions Unfortunately they are in the same page you know po used the page uh",
    "start": "1642080",
    "end": "1648360"
  },
  {
    "text": "level Gadget so in this case I can't use the PO so there is no choice but to",
    "start": "1648360",
    "end": "1654960"
  },
  {
    "text": "remap them but as you see and as you see they have function cords like down right and",
    "start": "1654960",
    "end": "1662799"
  },
  {
    "text": "upright which may lead to the remapping explosion but fortunately I could find",
    "start": "1662799",
    "end": "1670360"
  },
  {
    "text": "the if condition and evade it to by setting the thread curing variable to",
    "start": "1670360",
    "end": "1676039"
  },
  {
    "text": "Nur like this these functions are also in the same",
    "start": "1676039",
    "end": "1682080"
  },
  {
    "text": "page but in this case have only inline functions that means no external chord",
    "start": "1682080",
    "end": "1690200"
  },
  {
    "text": "so I just remapped them the last two functions have",
    "start": "1690200",
    "end": "1695519"
  },
  {
    "text": "external function course uh so for this time I replace them with the no",
    "start": "1695519",
    "end": "1702440"
  },
  {
    "text": "operation cadges like this yeah these are diagrams",
    "start": "1702440",
    "end": "1709360"
  },
  {
    "text": "and yeah these are the final result um the tragedy is end and this is remapping",
    "start": "1709360",
    "end": "1717120"
  },
  {
    "text": "table of Po so the PO uh stitches gadgets according to this",
    "start": "1717120",
    "end": "1724080"
  },
  {
    "text": "table and it looks like out table right it's very",
    "start": "1724080",
    "end": "1730799"
  },
  {
    "text": "similar it's really demo time and I spent so much time uh drawing",
    "start": "1731080",
    "end": "1738080"
  },
  {
    "text": "the fire on the PC and the amazing point is that the",
    "start": "1738080",
    "end": "1743440"
  },
  {
    "text": "fire is blinking yeah let's see",
    "start": "1743440",
    "end": "1748120"
  },
  {
    "text": "it uh these are tools for the PC and the first stage is Page carving",
    "start": "1752200",
    "end": "1759880"
  },
  {
    "text": "now carving tool disassembles the Conor",
    "start": "1759880",
    "end": "1763799"
  },
  {
    "text": "binary mhm all right and this is the result and let's analyze comic",
    "start": "1765360",
    "end": "1774799"
  },
  {
    "text": "Crest the page offset is 220 and has several function CS like uh Z Dum and",
    "start": "1775679",
    "end": "1782480"
  },
  {
    "text": "kfs U changed you already have",
    "start": "1782480",
    "end": "1787440"
  },
  {
    "text": "seen all right uh the next stag is page teching it change gadgets and system CES",
    "start": "1788519",
    "end": "1795200"
  },
  {
    "text": "to create new control flows the demo shows how to find core gadgets and system cores the result of page carving",
    "start": "1795200",
    "end": "1802640"
  },
  {
    "text": "have informations about uh function addresses and Branch targets so it Al so",
    "start": "1802640",
    "end": "1809640"
  },
  {
    "text": "you can stitch them using text tools like grab like",
    "start": "1809640",
    "end": "1816760"
  },
  {
    "text": "this okay now you can see the system core yes this",
    "start": "1818960",
    "end": "1824080"
  },
  {
    "text": "BPF yes sting is end and let's find the operation gadgets unlinking function is",
    "start": "1824080",
    "end": "1831519"
  },
  {
    "text": "the same process as the chaining process uh these are operation gadgets for",
    "start": "1831519",
    "end": "1837320"
  },
  {
    "text": "it all right at this time the demo shows the",
    "start": "1837320",
    "end": "1842760"
  },
  {
    "text": "POC Conner driver and to make the PC exploit simple I located the remapping",
    "start": "1842760",
    "end": "1848519"
  },
  {
    "text": "table of Po in the corner driver if you want you can move it to the PC",
    "start": "1848519",
    "end": "1854320"
  },
  {
    "text": "application with your vulnerabilities now the driver is executed and exposes",
    "start": "1854320",
    "end": "1860840"
  },
  {
    "text": "sensitive symbol addresses and the vulnerable interface and",
    "start": "1860840",
    "end": "1867480"
  },
  {
    "text": "now the hypervisor yeah shadow box learns like",
    "start": "1867480",
    "end": "1874120"
  },
  {
    "text": "this yeah so unauthorized code modification and injection are prevented",
    "start": "1875600",
    "end": "1881000"
  },
  {
    "text": "from now now page flushing and exploitation",
    "start": "1881000",
    "end": "1889159"
  },
  {
    "text": "stages the PC application C cbpf with malicious credentials like this Rax has",
    "start": "1889159",
    "end": "1896720"
  },
  {
    "text": "the system Cod number and RDI has the address of credentials and the CIS instruction is C like",
    "start": "1896720",
    "end": "1904919"
  },
  {
    "text": "this and as I mentioned before the application is executed on CPU zero",
    "start": "1906240",
    "end": "1911679"
  },
  {
    "text": "where the page flouring will be done all right let's start p and the",
    "start": "1911679",
    "end": "1917200"
  },
  {
    "text": "fire is blinking now yeah it's hard P FP the application has user",
    "start": "1917200",
    "end": "1925279"
  },
  {
    "text": "privilege so it can't read the the ETC Shadow file like this now p is",
    "start": "1925279",
    "end": "1931799"
  },
  {
    "text": "learning and these are logs from the P",
    "start": "1931799",
    "end": "1940480"
  },
  {
    "text": "driver yeah glow bit are cleared and now p is done now the",
    "start": "1940639",
    "end": "1947159"
  },
  {
    "text": "application has loot privilege and it can lead the ET Shadow file like",
    "start": "1947159",
    "end": "1953919"
  },
  {
    "text": "[Applause] this thank you thank you and uh um yeah",
    "start": "1955630",
    "end": "1964080"
  },
  {
    "text": "you look like trust me a little right okay this is a bonus page um as",
    "start": "1964080",
    "end": "1973600"
  },
  {
    "text": "you see uh There Is the End branch instruction of the point of",
    "start": "1973600",
    "end": "1979440"
  },
  {
    "text": "comic so if you find an indirect",
    "start": "1979440",
    "end": "1985480"
  },
  {
    "text": "jump you can change gadgets like this and C",
    "start": "1985480",
    "end": "1992440"
  },
  {
    "text": "comic this is simple and more intuitive than the previous one because the",
    "start": "1992440",
    "end": "1997559"
  },
  {
    "text": "remapping of comic is not needed yeah it's um very similar like",
    "start": "1997559",
    "end": "2003799"
  },
  {
    "text": "the return oriented programming",
    "start": "2003799",
    "end": "2008960"
  },
  {
    "text": "conclusion all right uh Mitigation Of PO is not simple you know because the page",
    "start": "2009880",
    "end": "2017279"
  },
  {
    "text": "table is the uh essential part of oses and Chang very very frequently many",
    "start": "2017279",
    "end": "2024159"
  },
  {
    "text": "researchers have introduced their own ways of escorting page table updates uh",
    "start": "2024159",
    "end": "2029639"
  },
  {
    "text": "with hypervisors but overhead Still Remains the ratest inter CPUs uh support",
    "start": "2029639",
    "end": "2037720"
  },
  {
    "text": "the hypervisor manage it rinear address translation table as known as H to prevent uh page",
    "start": "2037720",
    "end": "2045960"
  },
  {
    "text": "remapping a tack like Po but you know H H tables uh translate logical addresses",
    "start": "2045960",
    "end": "2054358"
  },
  {
    "text": "of the Conor uh to physical addresses instead of page tables in commodity OES",
    "start": "2054359",
    "end": "2060720"
  },
  {
    "text": "that means hyper are needed to update H tables uh within the hypervisor so it's",
    "start": "2060720",
    "end": "2067919"
  },
  {
    "text": "very uh frequently so it could be another opportunity for you and",
    "start": "2067919",
    "end": "2074878"
  },
  {
    "text": "me and the more uh critical point is regular systems are still vulnerable so",
    "start": "2074879",
    "end": "2082200"
  },
  {
    "text": "it's on open problem now now conclusion and blacket sound",
    "start": "2082200",
    "end": "2089358"
  },
  {
    "text": "bites um I would like to say state of theart Conner CFI are effective but has",
    "start": "2089359",
    "end": "2097480"
  },
  {
    "text": "weaknesses mentioned before so I have proposed page oriented programming po a",
    "start": "2097480",
    "end": "2105599"
  },
  {
    "text": "new coder user tag uh that can support the Conner cfis it exploits the",
    "start": "2105599",
    "end": "2111920"
  },
  {
    "text": "weaknesses and can create new counter flows under strong CFI",
    "start": "2111920",
    "end": "2117280"
  },
  {
    "text": "enforcement Mitigation Of PO is an open problem now although Intel developed H",
    "start": "2117280",
    "end": "2125000"
  },
  {
    "text": "it needs interactions uh between the OS and the hypervisor mhm so the changes",
    "start": "2125000",
    "end": "2131599"
  },
  {
    "text": "can give us new opportunities all right this is the last",
    "start": "2131599",
    "end": "2138480"
  },
  {
    "text": "slide of my presentation the picture shows what I want to do and what I have to do after this talk at the same",
    "start": "2138480",
    "end": "2145920"
  },
  {
    "text": "time and here is my press link so if you are interested in the project please",
    "start": "2145920",
    "end": "2151720"
  },
  {
    "text": "check the link my code will be relateded soon after this talk",
    "start": "2151720",
    "end": "2157359"
  },
  {
    "text": "all right I hope you enjoyed my talk and thank you for listening and your precious time thank",
    "start": "2157359",
    "end": "2162960"
  },
  {
    "text": "[Applause]",
    "start": "2162960",
    "end": "2170280"
  },
  {
    "text": "you",
    "start": "2170520",
    "end": "2173520"
  }
]