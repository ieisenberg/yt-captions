[
  {
    "text": "good morning welcome to blackhat briefings day one this is Pico DMA DMA attacks at your",
    "start": "30",
    "end": "8400"
  },
  {
    "text": "fingertips by men block sell and Joel Sandin please turn off your cell phones",
    "start": "8400",
    "end": "14880"
  },
  {
    "text": "or put them on vibrate so we don't have to hear your voice now thank you much thank you sir",
    "start": "14880",
    "end": "22580"
  },
  {
    "text": "all right everybody thanks for coming welcome to Pico DMA DMA attack see your fingertips just to say a little bit",
    "start": "22580",
    "end": "30539"
  },
  {
    "text": "about us my colleague Ben black sole was a principal security consulting with nada Sano and later NCC group and he's",
    "start": "30539",
    "end": "36750"
  },
  {
    "text": "currently an independent Hardware researcher I was also with mana Sano and later NCC group as a senior security",
    "start": "36750",
    "end": "42420"
  },
  {
    "text": "consultant and I'm a principal a lot of korah and we help startups bootstrap their security practice just to give you",
    "start": "42420",
    "end": "51210"
  },
  {
    "text": "an agenda about the talk we're going to give you some background on DMA attacks we're going to talk about a wireless DMA implant that we developed called picot",
    "start": "51210",
    "end": "57480"
  },
  {
    "text": "DMA we'll do a deep dive on FPGA PCI and DMA engineering we'll talk about the",
    "start": "57480",
    "end": "64260"
  },
  {
    "text": "radio module hardware and software try to do a live demo conclusions and future",
    "start": "64260",
    "end": "70650"
  },
  {
    "text": "work so what do we mean when we say a DMA attack DMA is short for direct",
    "start": "70650",
    "end": "77729"
  },
  {
    "text": "memory access and these attacks traditionally involved an attacker that gets physical access to a device a",
    "start": "77729",
    "end": "83580"
  },
  {
    "text": "workstation or laptop an attacker targets high-speed expansion ports like",
    "start": "83580",
    "end": "88890"
  },
  {
    "text": "Thunderbolt and Express card on the device and uses hardware to read and write physical memory when you're",
    "start": "88890",
    "end": "96390"
  },
  {
    "text": "performing a DMA attack you can recover sensitive data from physical memory like cryptographic secrets and passwords and",
    "start": "96390",
    "end": "102780"
  },
  {
    "text": "you can also make changes to running software on the device to backdoor the target machine and that can allow you to",
    "start": "102780",
    "end": "108600"
  },
  {
    "text": "read files bypass authentication if the machine is locked essentially compromised the machine entirely there's a lot of great previous",
    "start": "108600",
    "end": "117030"
  },
  {
    "text": "work here I'm just going to cover a few talks but there's a lot more out there Jill fits really kick things off sort of",
    "start": "117030",
    "end": "123509"
  },
  {
    "text": "in the public sphere of research with his slot screamer project and he took a USB 3380 reference board",
    "start": "123509",
    "end": "130259"
  },
  {
    "text": "weaponized it turns it into a very stealthy DMA hardware implant you can see it on the",
    "start": "130259",
    "end": "135730"
  },
  {
    "text": "right it's a PCI Express card looks very innocuous if you install it into a server and you have physical access you",
    "start": "135730",
    "end": "142060"
  },
  {
    "text": "can connect to the USB port and read four gigs of memory both frisk has been",
    "start": "142060",
    "end": "147910"
  },
  {
    "text": "working on the PCI leach DMA attack suite since 2016 and I really can't do",
    "start": "147910",
    "end": "154120"
  },
  {
    "text": "it justice in just one slide the capabilities are amazing it not only allows read writes",
    "start": "154120",
    "end": "160360"
  },
  {
    "text": "and searches of physical memory supports multiple hardware platforms but it has a whole suite of software implants that",
    "start": "160360",
    "end": "167170"
  },
  {
    "text": "you can use to compromise a target and perform various attacks and it's not",
    "start": "167170",
    "end": "172420"
  },
  {
    "text": "just a research project PCI leach is very reliable you can use it on real engagements its robust and really a",
    "start": "172420",
    "end": "180250"
  },
  {
    "text": "remarkable tool and there's a series of research presentations by I'm gonna",
    "start": "180250",
    "end": "186070"
  },
  {
    "text": "mispronounce the names I apologize Fabian Perry go Eric Alexandre Ghazi and Jeffrey Cesare nee from sin active and",
    "start": "186070",
    "end": "194739"
  },
  {
    "text": "Airbus and they looked at firmware on HP Enterprise integrated lights-out",
    "start": "194739",
    "end": "199989"
  },
  {
    "text": "firmware identified vulnerabilities that allow them to compromise at that",
    "start": "199989",
    "end": "205030"
  },
  {
    "text": "firmware from a management network segment and then they use DMA attacks from the ILO to pivot into the host of",
    "start": "205030",
    "end": "212200"
  },
  {
    "text": "that machine so when I say that DMA attacks are traditionally performed with physical access this is something that",
    "start": "212200",
    "end": "218470"
  },
  {
    "text": "definitely breaks the trend really groundbreaking research not only was a groundbreaking research they also added",
    "start": "218470",
    "end": "225130"
  },
  {
    "text": "integration with PCI leach and demonstrated how you can perform these attacks using PCI Leach and we relied",
    "start": "225130",
    "end": "230650"
  },
  {
    "text": "heavily on that integration for our own work so definitely check that stuff out I also want to mention you know a",
    "start": "230650",
    "end": "239590"
  },
  {
    "text": "keystroke injection tools heat implants I think we're all familiar with these the hack five USB rubber ducky is a good",
    "start": "239590",
    "end": "245920"
  },
  {
    "text": "example that's commercially available it's a lot like a DMA attack in some ways if you have physical access to a",
    "start": "245920",
    "end": "251950"
  },
  {
    "text": "machine that's unlocked you can inject keystrokes exfiltrate data compromise the machine there's been a lot of",
    "start": "251950",
    "end": "258280"
  },
  {
    "text": "research in this space and you know I'd say the thing that really sets apart recent projects is a greater degree of",
    "start": "258280",
    "end": "264640"
  },
  {
    "text": "deception in the design of the the hardware itself and wireless capabilities so turnips",
    "start": "264640",
    "end": "272040"
  },
  {
    "text": "school is a good example this was a project by Michael Osmond Dominic's bill and Jared boom and they built a you know",
    "start": "272040",
    "end": "277740"
  },
  {
    "text": "USB cable that had wireless capabilities if you plug the cable into your machine someone with wireless access to that",
    "start": "277740",
    "end": "283050"
  },
  {
    "text": "cable can inject keystrokes there's the USB ninja developed by vincent lu kevin",
    "start": "283050",
    "end": "288060"
  },
  {
    "text": "Mitnick and folks from procs grind it's commercially available very similar the",
    "start": "288060",
    "end": "293280"
  },
  {
    "text": "kiss wid from Luke abort bond gionee a really cool wireless keystroke",
    "start": "293280",
    "end": "299040"
  },
  {
    "text": "injecting tool commercially available and he's also developing the we delete which integrates a sim 800 L GSM modem",
    "start": "299040",
    "end": "306300"
  },
  {
    "text": "so you can access it from anywhere the MAL tronics internal key loggers pictured on the right there on the",
    "start": "306300",
    "end": "312810"
  },
  {
    "text": "bottom it's an internal key logger what sets it apart is it's very tiny it's a",
    "start": "312810",
    "end": "318030"
  },
  {
    "text": "one centimeter squared it's persistent you put it into the keyboard permanently looks very innocuous you know to someone",
    "start": "318030",
    "end": "324180"
  },
  {
    "text": "who to an untrained eye and might not look like anything malicious but it captures every keystroke that flows",
    "start": "324180",
    "end": "330450"
  },
  {
    "text": "through that keyboard and lets you retrieve them wirelessly so really a lot of advancements in this space that I",
    "start": "330450",
    "end": "336540"
  },
  {
    "text": "think are relevant to the research that we've done DMA attacks they're not just",
    "start": "336540",
    "end": "341580"
  },
  {
    "text": "sorry DMA is not just for attackers it's an invaluable tool for forensic analysis",
    "start": "341580",
    "end": "347280"
  },
  {
    "text": "you know you can capture memory from a machine and then use tools like volatility and recall to extract the",
    "start": "347280",
    "end": "354960"
  },
  {
    "text": "memory contents of running processes from there you can look at what files those processes have opened what network",
    "start": "354960",
    "end": "361350"
  },
  {
    "text": "connections they are making and do root cause analysis in the event of an",
    "start": "361350",
    "end": "366480"
  },
  {
    "text": "incident just to give you a concrete a practical sort of end-to-end DMA attack",
    "start": "366480",
    "end": "373110"
  },
  {
    "text": "example using PCI leach jean-christophe Dylan a on the syntactic blog has a",
    "start": "373110",
    "end": "378780"
  },
  {
    "text": "really nice write-up about a consulting engagement he was on where he used PCI leach and he was tasked with",
    "start": "378780",
    "end": "384210"
  },
  {
    "text": "compromising a hardened Windows workstation so the iommu was enabled",
    "start": "384210",
    "end": "389270"
  },
  {
    "text": "other protections were in place he first was able to reset the bios to disable the iommu which didn't prevent the",
    "start": "389270",
    "end": "396319"
  },
  {
    "text": "machine from booting unfortunately that wasn't part of the measurements that were being taken before the machine booted once he was able to boot it with",
    "start": "396319",
    "end": "402919"
  },
  {
    "text": "the iommu disabled he physically opened the device you can see a picture here of that laptop open connected to an m2 slot",
    "start": "402919",
    "end": "409669"
  },
  {
    "text": "in the laptop connected an FPGA should say and then use the PCI to PCI leach",
    "start": "409669",
    "end": "415910"
  },
  {
    "text": "tool that I mentioned to patch the memory on that laptop and actually unlock it and login so it was a",
    "start": "415910",
    "end": "421490"
  },
  {
    "text": "successful engagement from his perspective and a really cool write-up that you should check out and just to",
    "start": "421490",
    "end": "428539"
  },
  {
    "text": "talk about the goals for this project at the on sent at the onset our goal was",
    "start": "428539",
    "end": "434569"
  },
  {
    "text": "develop a DMA capable hardware implant and we wanted it to be small our idea",
    "start": "434569",
    "end": "440599"
  },
  {
    "text": "was the implant would be persistent she would install it once and leave it in place and we wanted to incorporate",
    "start": "440599",
    "end": "446210"
  },
  {
    "text": "wireless capabilities so you didn't have to have wireless access or sorry physical access when actually performing",
    "start": "446210",
    "end": "452840"
  },
  {
    "text": "the attack you could access it wirelessly and just any interest of time for the initial prototype we really",
    "start": "452840",
    "end": "458270"
  },
  {
    "text": "wanted to use off-the-shelf hardware if possible and our hope was to develop",
    "start": "458270",
    "end": "463699"
  },
  {
    "text": "proof-of-concept demonstrations of new attack and defense scenarios and also to release the software and documentation",
    "start": "463699",
    "end": "470680"
  },
  {
    "text": "so other researchers will have low cost building blocks for new applications offensive and defensive alike we",
    "start": "470680",
    "end": "479180"
  },
  {
    "text": "developed an initial prototype that this is the Pico DMA as you can see it's quite small fits on a keychain where it",
    "start": "479180",
    "end": "486289"
  },
  {
    "text": "is an earring it's DMA capable so you can do 64-bit streaming reads and 64-bit writes and we",
    "start": "486289",
    "end": "494060"
  },
  {
    "text": "also incorporate an FPGA enabled search capability so the FPGA can actually",
    "start": "494060",
    "end": "500270"
  },
  {
    "text": "search for words in memory that may be interesting to you it's PCI leach compatible so all the",
    "start": "500270",
    "end": "507530"
  },
  {
    "text": "attacks there you can potentially mount using this hardware device and we built it using commodity hardware",
    "start": "507530",
    "end": "516039"
  },
  {
    "text": "the Pico DMA is highly embeddable we see here on the right it's installed in a machine it's really easy to install you",
    "start": "516940",
    "end": "522580"
  },
  {
    "text": "just need access to an M to a or e key expansion slot or you can use adapters to put it into other slots fits in small",
    "start": "522580",
    "end": "531070"
  },
  {
    "text": "places here it's installed in a Intel nook which is pre palatial as far as the implant is concerned",
    "start": "531070",
    "end": "536290"
  },
  {
    "text": "plenty of room that machine is actually sitting next to me here and the Pico DMA",
    "start": "536290",
    "end": "544270"
  },
  {
    "text": "supports out-of-band access so it doesn't rely on network access on the target machine the target machine",
    "start": "544270",
    "end": "550600"
  },
  {
    "text": "doesn't have network access that's ok the Pico ain't even Pico DMA has its own",
    "start": "550600",
    "end": "557440"
  },
  {
    "text": "network access so it's small and self-reliant and hopefully suited to a big set of targets and so you know",
    "start": "557440",
    "end": "566580"
  },
  {
    "text": "wireless implants like these they decouple the act of installing the implant from performing the actual DMA",
    "start": "566580",
    "end": "572589"
  },
  {
    "text": "attack you can install the implant and then weeks or months later actually perform exploitation and it gives an",
    "start": "572589",
    "end": "580180"
  },
  {
    "text": "attacker more possibilities as far as deployment is concerned interdiction attacks are a good example an attacker",
    "start": "580180",
    "end": "586390"
  },
  {
    "text": "can intercept the device when it's in transit and powered down and install a physical implant or a software implant",
    "start": "586390",
    "end": "593020"
  },
  {
    "text": "for that matter plenty of organizations rely on third party contractors as you",
    "start": "593020",
    "end": "598990"
  },
  {
    "text": "know hands and eyes technicians for working on servers and data centers and so on an attacker with temporary",
    "start": "598990",
    "end": "605200"
  },
  {
    "text": "physical access to a server that a Dun racket doing routine maintenance can",
    "start": "605200",
    "end": "610209"
  },
  {
    "text": "install the implant put it back on the rack and then that attacker can later use that implant to to actually perform",
    "start": "610209",
    "end": "616510"
  },
  {
    "text": "the attack you can imagine scenarios where an attacker may have legitimate physical access to machine an example is",
    "start": "616510",
    "end": "623260"
  },
  {
    "text": "a you know an employee that has access to a workstation as part of their job duties and then they leave the",
    "start": "623260",
    "end": "628870"
  },
  {
    "text": "organization but before they leave it they leave a little bit of hardware behind and when that workstation is",
    "start": "628870",
    "end": "635620"
  },
  {
    "text": "issued to a new employee that creep that former employee would then have access to perform the attack and of course",
    "start": "635620",
    "end": "643390"
  },
  {
    "text": "organizations that are provisioning hardware they could install hardware an implant like this and do for remote",
    "start": "643390",
    "end": "649149"
  },
  {
    "text": "forensics later on and the decoupling",
    "start": "649149",
    "end": "654520"
  },
  {
    "text": "allows you know new attack variations new variations on existing attacks that we've seen in past research we don't",
    "start": "654520",
    "end": "663670"
  },
  {
    "text": "need access to the machine when it's live anymore and that means we can capture you know ephemeral credentials that may only be",
    "start": "663670",
    "end": "670540"
  },
  {
    "text": "in memory at certain times examples are you know GPG agent loading keys into memory or SSH agent of course session",
    "start": "670540",
    "end": "678399"
  },
  {
    "text": "cookies associated with sessions on the machine or a good target and it's not an",
    "start": "678399",
    "end": "683890"
  },
  {
    "text": "attack that necessarily happens at a single point in time you can do ongoing profiling you can collect activity logs",
    "start": "683890",
    "end": "689410"
  },
  {
    "text": "from the target screenshots stuff like that over time because the implant stays put and because you're installing it and",
    "start": "689410",
    "end": "697360"
  },
  {
    "text": "leaving it in place any protections and there are some in various operating systems disabling external ports when",
    "start": "697360",
    "end": "702760"
  },
  {
    "text": "the machine unlocked those protections don't apply in this context and we've",
    "start": "702760",
    "end": "708880"
  },
  {
    "text": "already sort of alluded to some of the key ingredients here we need an FPGA platform for actually doing DMA in order",
    "start": "708880",
    "end": "716320"
  },
  {
    "text": "to facilitate wireless access we need a radio module it's probably not going to be the same device so we need a way to",
    "start": "716320",
    "end": "722650"
  },
  {
    "text": "connect them software obviously and this brings me to the Pico EVB which is a",
    "start": "722650",
    "end": "727930"
  },
  {
    "text": "commercially available FPGA platform from RHS Research LLC here's a picture",
    "start": "727930",
    "end": "733870"
  },
  {
    "text": "of it as you can see it literally fits on a fingertip it's very tiny and it's",
    "start": "733870",
    "end": "741700"
  },
  {
    "text": "an excellent DMA platform so we have a block diagram on the right it's",
    "start": "741700",
    "end": "747190"
  },
  {
    "text": "commercially available like I mentioned it was launched on crowd supply runs about 220 bucks it has a powerful FPGA",
    "start": "747190",
    "end": "754060"
  },
  {
    "text": "on an Arctic 7 XC 7 a 50 T it's really tiny it's a 2 point 2 by 3 centimeters",
    "start": "754060",
    "end": "760709"
  },
  {
    "text": "as I mentioned it plugs into M 2 AE slots so you know a lot of flexibility",
    "start": "760709",
    "end": "767680"
  },
  {
    "text": "as far as where you can install it and really important for us is it comes with expansion capabilities out of the box so",
    "start": "767680",
    "end": "774070"
  },
  {
    "text": "if you look at the block diagram there are multi-purpose i/o connectors and",
    "start": "774070",
    "end": "780250"
  },
  {
    "text": "high-speed digital i/o connectors over there on the left side and so you can interface it with other devices what it",
    "start": "780250",
    "end": "787810"
  },
  {
    "text": "doesn't come with is any actual way to do DMA so it's a lot of software engineering that goes into that and I'll",
    "start": "787810",
    "end": "795810"
  },
  {
    "text": "send it over to Ben to talk about building the prototype okay",
    "start": "795810",
    "end": "803700"
  },
  {
    "text": "so the basic challenge with this is PCI is high-bandwidth low-latency and PCI",
    "start": "803700",
    "end": "810310"
  },
  {
    "text": "transactions can complete in the order of 10 microseconds and remote communication of course we're talking",
    "start": "810310",
    "end": "816730"
  },
  {
    "text": "milliseconds and you know Wi-Fi oh maybe we have enough bandwidth for these kind of transactions but something like Laura",
    "start": "816730",
    "end": "822460"
  },
  {
    "text": "radio where the bandwidth is so much smaller it's hundreds and maybe thousands of bytes per second and so our",
    "start": "822460",
    "end": "830680"
  },
  {
    "text": "platform at high level it's similar to previous platforms that we use an FPGA to talk to the PCI Express bus and where",
    "start": "830680",
    "end": "838240"
  },
  {
    "text": "we differ is previous platforms and basically QFP qpc I am requests on the",
    "start": "838240",
    "end": "843970"
  },
  {
    "text": "FPGA we do a lot more person on the only FPGA and yeah and we provide a simple",
    "start": "843970",
    "end": "850630"
  },
  {
    "text": "interface for doing DC a PCI DMA and we provided yeah I suppose a spy interface",
    "start": "850630",
    "end": "856000"
  },
  {
    "text": "um when we were initially thinking about it we went through a couple of ideas and",
    "start": "856000",
    "end": "861360"
  },
  {
    "text": "the initial idea that a lot of people talk about is putting a soft core on the FPGA and the reason we rejected this",
    "start": "861360",
    "end": "867760"
  },
  {
    "text": "idea is it it looked like it was gonna require a lot more engineering basically and to get the performance out of a soft",
    "start": "867760",
    "end": "873490"
  },
  {
    "text": "core to to process PCI packets and you're either gonna need to add custom",
    "start": "873490",
    "end": "878800"
  },
  {
    "text": "instructions or a lot of one chip buffering and since we had a set fixed set of functionality we decided just to",
    "start": "878800",
    "end": "884950"
  },
  {
    "text": "implement those instructions directly and we decided still to include a",
    "start": "884950",
    "end": "890200"
  },
  {
    "text": "microcontroller in the system that gives us flexibility and with remote communication and potentially updating",
    "start": "890200",
    "end": "895780"
  },
  {
    "text": "the FPGA and these kind of things and for a future platform idea if we use the",
    "start": "895780",
    "end": "902470"
  },
  {
    "text": "specialized PCB for instance and a lower-cost FPGA which is possible when the price per unit could easily be below",
    "start": "902470",
    "end": "908680"
  },
  {
    "text": "$50 so there's definitely room for it improvement there but we wanted to get moving quick and with off-the-shelf",
    "start": "908680",
    "end": "914830"
  },
  {
    "text": "components yet we can make progress pretty quickly and okay so I'm gonna",
    "start": "914830",
    "end": "920500"
  },
  {
    "text": "talk a little bit about what we require from the PC I expect what we're gonna be using to perform these PCI DMA attacks",
    "start": "920500",
    "end": "927190"
  },
  {
    "text": "and I'm gonna start off simple PCI connectors I'm sure you're all familiar there's like standard connectors which",
    "start": "927190",
    "end": "933190"
  },
  {
    "text": "are you know in desktop and server class motherboards have been for tens of years and yeah maybe even know for twenty",
    "start": "933190",
    "end": "940690"
  },
  {
    "text": "years now but now nowadays you just have there m dot 2 M slot which is ubiquitous",
    "start": "940690",
    "end": "945820"
  },
  {
    "text": "in mobile devices and this is partly from high-performance SSD is becoming",
    "start": "945820",
    "end": "951010"
  },
  {
    "text": "much more common and but it's also used for things like you know Wi-Fi cards and",
    "start": "951010",
    "end": "956350"
  },
  {
    "text": "which user a slash e key SSDs use em key and the keying is done by physical",
    "start": "956350",
    "end": "964600"
  },
  {
    "text": "knotch if you've ever looked to the connector and yeah it was a physical notch that prevents you from putting",
    "start": "964600",
    "end": "970830"
  },
  {
    "text": "different and PCI cards into different slots the actual pins themselves the",
    "start": "970830",
    "end": "976420"
  },
  {
    "text": "different differential pairs of wires they mean this means if you're sending like a high bit one while I will contain",
    "start": "976420",
    "end": "981550"
  },
  {
    "text": "a high value and the other one a low value this helps reduce noise electrical noise and things like that and improve",
    "start": "981550",
    "end": "987730"
  },
  {
    "text": "signal integrity and the devices will perform link width negotiation which",
    "start": "987730",
    "end": "994120"
  },
  {
    "text": "allows basically some of the pairs to not be working interesting this kind of allows you to do to mechanically alter",
    "start": "994120",
    "end": "1001320"
  },
  {
    "text": "the connectors so for instance if there's this interesting users of people previously wanting to put graphics cards",
    "start": "1001320",
    "end": "1007170"
  },
  {
    "text": "and motherboards only have a single and PCI Lane slot and they've kind of like chopped up you can do something similar",
    "start": "1007170",
    "end": "1012839"
  },
  {
    "text": "with them got two connectors as well where you sand down the notch and in between and then you can shove a and n",
    "start": "1012839",
    "end": "1018630"
  },
  {
    "text": "dot two connector in a different in different slot but you can also just use an adapter and there's adaptive for all",
    "start": "1018630",
    "end": "1026790"
  },
  {
    "text": "different types of PCI Express forms and mm dot two slots have also different",
    "start": "1026790",
    "end": "1035660"
  },
  {
    "text": "different additional interfaces and they supply so USB i2c etc and for instance",
    "start": "1035660",
    "end": "1042810"
  },
  {
    "text": "the AE / e key Wireless cards using and the piggery VB that we're using as our base has USB on",
    "start": "1042810",
    "end": "1051120"
  },
  {
    "text": "it as well so the adapter in the middle of the image there and you can see that it's accordant exposed USB header and",
    "start": "1051120",
    "end": "1057450"
  },
  {
    "text": "that allows you to route back USB to the host for our cases of course we only care about the PCI eiite PCI Express so",
    "start": "1057450",
    "end": "1063420"
  },
  {
    "text": "we don't care about the USB and but if you do yeah you gonna have to read those signals externally the PCI Express",
    "start": "1063420",
    "end": "1072900"
  },
  {
    "text": "terminology talks about endpoint devices connected to a root complex that's just you know your endpoint talking to a host",
    "start": "1072900",
    "end": "1078810"
  },
  {
    "text": "device and it is packet based but it looks when you're when you're working",
    "start": "1078810",
    "end": "1083910"
  },
  {
    "text": "with it it looks a bit more like a traditional busting that you're performing and memory reads writes to",
    "start": "1083910",
    "end": "1089790"
  },
  {
    "text": "memory location store to IO reports rather than just sending packets with data and there's a physical and a data",
    "start": "1089790",
    "end": "1097680"
  },
  {
    "text": "link layer and we're gonna not talk about those because that's gonna be handled by the FPGA vendor provided code",
    "start": "1097680",
    "end": "1104360"
  },
  {
    "text": "and we're gonna just talk about the transaction layer which sits on top and the other thing to point out is PCI",
    "start": "1104360",
    "end": "1111750"
  },
  {
    "text": "Express is you know designed for memory transfers and they are usually host initiated but obviously for our use case",
    "start": "1111750",
    "end": "1119520"
  },
  {
    "text": "we're going to be initiating them on device and getting the completions back from the host so the summary of the",
    "start": "1119520",
    "end": "1125970"
  },
  {
    "text": "summary of this slide is basically there is no security built into PCI Express and that's kind of a valid threat model",
    "start": "1125970",
    "end": "1131760"
  },
  {
    "text": "right it's a high bandwidth protocol that's for physical interconnect and it's not normally exposed to attack their attackers or anything like that",
    "start": "1131760",
    "end": "1137790"
  },
  {
    "text": "and but that's why the basis of why a PCI Express DMA attacks from work and",
    "start": "1137790",
    "end": "1144470"
  },
  {
    "text": "Nyonya identification had done is there's a 16-bit physical address that's",
    "start": "1144470",
    "end": "1149720"
  },
  {
    "text": "dictated by the host and and as will be",
    "start": "1149720",
    "end": "1154830"
  },
  {
    "text": "reported back to the device but it's not configured by the device and there's a device ID which is read from the device's configuration space and that is",
    "start": "1154830",
    "end": "1163640"
  },
  {
    "text": "is written by the device and that's why these DMA attacks can actually work is that it's self-reported right you can",
    "start": "1163640",
    "end": "1169530"
  },
  {
    "text": "report any device ID and a lot of DMA tax work by reporting device IDs of",
    "start": "1169530",
    "end": "1175500"
  },
  {
    "text": "devices that have special privileges such as buff's mastering which is the term for being able to initiate DMA request sin",
    "start": "1175500",
    "end": "1182309"
  },
  {
    "text": "psi M okay so Toa transactionally of packets is a bunch of different ones we",
    "start": "1182309",
    "end": "1188190"
  },
  {
    "text": "only really care about the memory transactions the read and write to memory and that we're going to be initiating from our device and will",
    "start": "1188190",
    "end": "1193830"
  },
  {
    "text": "receive back completions there's a number of other ones configuration freedom right gops will will be going on",
    "start": "1193830",
    "end": "1199529"
  },
  {
    "text": "those will be handled by the FPGA and that we we won't have to encode ourself and there's a number of other requests",
    "start": "1199529",
    "end": "1205889"
  },
  {
    "text": "such as I request those those are mostly for legacy compatibility there's probably an attack surface there and but",
    "start": "1205889",
    "end": "1214259"
  },
  {
    "text": "it's not something we're gonna go into in this in this talk and so this is kind of an outline of an example TLP and I'm",
    "start": "1214259",
    "end": "1221220"
  },
  {
    "text": "just gonna go over some key fields there's a link field in the top right hand corner this is a length set the",
    "start": "1221220",
    "end": "1228749"
  },
  {
    "text": "number of 32-bit words data words data payload in in the TLP it's timber and",
    "start": "1228749",
    "end": "1235789"
  },
  {
    "text": "the length combined with the address must across a 4 kilobyte boundary which",
    "start": "1235789",
    "end": "1240960"
  },
  {
    "text": "we managed to do during design and the annoying thing about working in PCI Express is a number of hosts tend to",
    "start": "1240960",
    "end": "1247830"
  },
  {
    "text": "allow you to kind of work to be providing incorrect you know requests and then suddenly",
    "start": "1247830",
    "end": "1252989"
  },
  {
    "text": "they'll decide okay you're you know not working anymore you're something's gone wrong with your device and then they'll shut off access it makes it very hard to",
    "start": "1252989",
    "end": "1259200"
  },
  {
    "text": "debug issues because you know it's working and then it stops working randomly but yeah so you visit there's",
    "start": "1259200",
    "end": "1266580"
  },
  {
    "text": "lots of kind of small things along aspect that you need to check out like that the next field along going right to left",
    "start": "1266580",
    "end": "1272070"
  },
  {
    "text": "on the top line is the type field that's pretty self-explanatory that's just the TLB type and then there's a two-bit bit",
    "start": "1272070",
    "end": "1278909"
  },
  {
    "text": "field the format field which just signifies if the payload contains data",
    "start": "1278909",
    "end": "1284340"
  },
  {
    "text": "and also if the dress type is a 32-bit or 64-bit address so the way that your",
    "start": "1284340",
    "end": "1290519"
  },
  {
    "text": "dressing works in PCI Express is if you only want to address either write or",
    "start": "1290519",
    "end": "1297389"
  },
  {
    "text": "read to a 32-bit address you have to use a 32-bit address you can't pack it into",
    "start": "1297389",
    "end": "1302639"
  },
  {
    "text": "a 64-bit value otherwise again it will",
    "start": "1302639",
    "end": "1307649"
  },
  {
    "text": "potentially accept your transactions but then might decide your you know a damaged device or something",
    "start": "1307649",
    "end": "1314550"
  },
  {
    "text": "the net the next line down we have on the right the bike enables that just",
    "start": "1314550",
    "end": "1320220"
  },
  {
    "text": "selects whether the bikes in the first data and said few bit word and the last",
    "start": "1320220",
    "end": "1326850"
  },
  {
    "text": "one are enabled and that allows you to do non 32-bit word addresses and so",
    "start": "1326850",
    "end": "1333660"
  },
  {
    "text": "basically the address that you provide as you can see must be aligned to 32 bits the address counts from the 31st",
    "start": "1333660",
    "end": "1340800"
  },
  {
    "text": "bit down to the down to the second rather than the 0 the 0 bit and skipping",
    "start": "1340800",
    "end": "1347100"
  },
  {
    "text": "tag if we go over to request ID the request ID is the physical idea mentioned yeah this will be set or",
    "start": "1347100",
    "end": "1352550"
  },
  {
    "text": "relayed from the house back to the endpoint and then the endpoint should use this on request again this is",
    "start": "1352550",
    "end": "1358410"
  },
  {
    "text": "another thing you can not provide the correct risk request ID and it may work for a while and then it will stop",
    "start": "1358410",
    "end": "1363840"
  },
  {
    "text": "working so yeah good to good to provide the right request ID and the tag field is the last field in the middle in the",
    "start": "1363840",
    "end": "1369930"
  },
  {
    "text": "second row and that basically is a an",
    "start": "1369930",
    "end": "1375240"
  },
  {
    "text": "identify the nm point can associate with streams of packets or within a",
    "start": "1375240",
    "end": "1380370"
  },
  {
    "text": "particular packet and it basically defines the ordering used with the PCI specification so for instance different",
    "start": "1380370",
    "end": "1387510"
  },
  {
    "text": "different tags the packets may read completions may return at different",
    "start": "1387510",
    "end": "1392730"
  },
  {
    "text": "times there's no ordering guaranteed there but a packet writing to the same tag will always come back in the same",
    "start": "1392730",
    "end": "1398970"
  },
  {
    "text": "order it's and it's this by default was a 5 bit tag allowed so that sets you 3",
    "start": "1398970",
    "end": "1404700"
  },
  {
    "text": "different values but there's extensions that allow up to 8 bits and it's mostly a performance thing but it's something",
    "start": "1404700",
    "end": "1409920"
  },
  {
    "text": "we all use ok so now a quick overview of the FPGA concepts we'll be using and",
    "start": "1409920",
    "end": "1417740"
  },
  {
    "text": "FPGA is if you're not familiar of synchronous circuits as programmable logic gates this means and you can",
    "start": "1417740",
    "end": "1424470"
  },
  {
    "text": "emulate circuitry on an integrated chip it runs very fast and they commonly used",
    "start": "1424470",
    "end": "1429930"
  },
  {
    "text": "for simulation of a6 and and also to work on io that's very timing",
    "start": "1429930",
    "end": "1438060"
  },
  {
    "text": "constrained either very quickly or requires very precise timing and there's a wide range of CrossFit FPGAs I've put a few up here the letter",
    "start": "1438060",
    "end": "1447059"
  },
  {
    "text": "C cp5 on the left is not the cheapest FPGA you can get you can get much cheaper ones and similarly on the right",
    "start": "1447059",
    "end": "1453240"
  },
  {
    "text": "the Xilinx vu9 P and it's not the most expensive FPGA you can get the thing",
    "start": "1453240",
    "end": "1458400"
  },
  {
    "text": "they have in common these ones is they all provide the PCI Express tools that",
    "start": "1458400",
    "end": "1464970"
  },
  {
    "text": "we need to do DMA attacks obviously for our case we can just go for the cheaper ones the reason why we're not using and",
    "start": "1464970",
    "end": "1470549"
  },
  {
    "text": "the lattice EC p5 here is just for tooling reasons and also obviously the",
    "start": "1470549",
    "end": "1476160"
  },
  {
    "text": "piggery VB comes with the Xilinx FPGA in the middle there and the reason you",
    "start": "1476160",
    "end": "1481470"
  },
  {
    "text": "don't see more FPGA tooling sorry or",
    "start": "1481470",
    "end": "1486600"
  },
  {
    "text": "more FPGA you know implemented things implemented on PJs it's just there they can be a real pain to develop with and",
    "start": "1486600",
    "end": "1493460"
  },
  {
    "text": "as I'm sure anyone would agree whose work with them and so the the way the",
    "start": "1493460",
    "end": "1499260"
  },
  {
    "text": "way the FPGA but the device itself has look-up tables use a you know similar to",
    "start": "1499260",
    "end": "1505200"
  },
  {
    "text": "look-up tables in a you know what when you're designing software or something like that and the difference is that",
    "start": "1505200",
    "end": "1510840"
  },
  {
    "text": "they change value according to some clock that's routed along the FPGA and",
    "start": "1510840",
    "end": "1516650"
  },
  {
    "text": "there's also hard cause an FPGA it's not just look up tables and and the reason you want these is things that are",
    "start": "1516650",
    "end": "1523410"
  },
  {
    "text": "implemented in hardened cores require a lot less buy space and can potentially operate at a much higher frequency and",
    "start": "1523410",
    "end": "1528960"
  },
  {
    "text": "so although PC FPGAs on the previous slide have an PCI Express controllers",
    "start": "1528960",
    "end": "1535169"
  },
  {
    "text": "and that will take care of the physical layer and data link layer for PCI Express which is why we didn't talk",
    "start": "1535169",
    "end": "1541350"
  },
  {
    "text": "about it in the in the last section and some some implementation some libraries provided by the vendors will also do the",
    "start": "1541350",
    "end": "1547980"
  },
  {
    "text": "transaction layer processing for you as well but that's something obviously we want to control ourselves is we're going to be doing something slightly",
    "start": "1547980",
    "end": "1553980"
  },
  {
    "text": "non-standard and so designing for with",
    "start": "1553980",
    "end": "1559080"
  },
  {
    "text": "FPGA as I mentioned can be a pain the tooling is improving but feels like real",
    "start": "1559080",
    "end": "1564570"
  },
  {
    "text": "step back and to software development and there are some interesting open source projects such as yo sis and and",
    "start": "1564570",
    "end": "1571290"
  },
  {
    "text": "other things out there but it's still not on par with yeah software design and in particular and you know the",
    "start": "1571290",
    "end": "1577830"
  },
  {
    "text": "approach you take designing encoding and debugging is different and bugs can be a",
    "start": "1577830",
    "end": "1583019"
  },
  {
    "text": "real pain to to discover as I'll show a bit later an FPGA and and so the best",
    "start": "1583019",
    "end": "1590429"
  },
  {
    "text": "way to approach this is similar to a software development approach you want to be writing what's called test benches for FPGA is similar to unit tests and",
    "start": "1590429",
    "end": "1597360"
  },
  {
    "text": "early on to make sure your you know you verify your behavior there's two main classes of design and FPGA there's",
    "start": "1597360",
    "end": "1603539"
  },
  {
    "text": "register transfer level and behavioral synthesis register transfer level is somewhat analogous to assembly and that",
    "start": "1603539",
    "end": "1612210"
  },
  {
    "text": "you're you're writing very specific design that you're gonna know the exact timing and things like that and",
    "start": "1612210",
    "end": "1617250"
  },
  {
    "text": "behavioral synthesis is more like working with a high-level language and this trade offs to the approach but",
    "start": "1617250",
    "end": "1622710"
  },
  {
    "text": "using behavioral synthesis can be a lot more productive similar as similar as using a high level language can be but",
    "start": "1622710",
    "end": "1629129"
  },
  {
    "text": "often the issue one of the issues of working with an fpga is you're quite constrained by what you could fit on",
    "start": "1629129",
    "end": "1634620"
  },
  {
    "text": "there and then so to get the performance and to get the low utilization of the",
    "start": "1634620",
    "end": "1640409"
  },
  {
    "text": "device resources and you often want to work on a register transfer level which is what we did and although we used",
    "start": "1640409",
    "end": "1648330"
  },
  {
    "text": "these classes and there's other tools as well till these will compile down to and",
    "start": "1648330",
    "end": "1654120"
  },
  {
    "text": "very log VHDL which are the RTL and languages and the benefit here is just",
    "start": "1654120",
    "end": "1660870"
  },
  {
    "text": "you get you know modern language support and you and you can test things almost",
    "start": "1660870",
    "end": "1666179"
  },
  {
    "text": "as a software approach before you test it on device and which you can do somewhat with traditional tooling but",
    "start": "1666179",
    "end": "1672360"
  },
  {
    "text": "it's it's a lot smoother and a lot smoother and the other main major benefit is yeah some of these tool and",
    "start": "1672360",
    "end": "1680129"
  },
  {
    "text": "can prevent what domain arrows so when you're running logic on an FPGA you often dealing with multiple clock domains so for instance for our use case",
    "start": "1680129",
    "end": "1686610"
  },
  {
    "text": "we have M PCI Express running running a one clock domain we have we're gonna have spy rang at a different clock domain and we're gonna have logic in the",
    "start": "1686610",
    "end": "1692850"
  },
  {
    "text": "middle that's running a third clock domain if you aren't careful and you're transferring data across these plot",
    "start": "1692850",
    "end": "1698549"
  },
  {
    "text": "domains you can easily introduce errors and such as metastability issues where",
    "start": "1698549",
    "end": "1703760"
  },
  {
    "text": "signals appear to have different values different places and it becomes dependent on and the values you receive on things become",
    "start": "1703760",
    "end": "1710429"
  },
  {
    "text": "dependent on the physical length of wires in the FPGA which is obviously not what you want and traditional cooling",
    "start": "1710429",
    "end": "1717989"
  },
  {
    "text": "does does of course allow you to you know report when there are errors along these lines and things like that but but",
    "start": "1717989",
    "end": "1725009"
  },
  {
    "text": "some of these miss neele to new tooling has specific for instance type safety the rent set which is you know useful",
    "start": "1725009",
    "end": "1731489"
  },
  {
    "text": "the the downside of doing this is there's an additional compilation step in the process which you know when",
    "start": "1731489",
    "end": "1737309"
  },
  {
    "text": "things go wrong it became it can be harder to find out where in the stack it went wrong okay so this is what an FPGA",
    "start": "1737309",
    "end": "1746209"
  },
  {
    "text": "tool chain looks like this is actually a silent Vivaro and as I mentioned they",
    "start": "1746209",
    "end": "1752429"
  },
  {
    "text": "were all like proprietary further and they will work only for specific devices",
    "start": "1752429",
    "end": "1757669"
  },
  {
    "text": "so synthesis and implementation are basically the compilation step for an FPGA and synthesis and takes your code",
    "start": "1757669",
    "end": "1764999"
  },
  {
    "text": "and produces a netlist which is similar to IR and in the software world and then",
    "start": "1764999",
    "end": "1770249"
  },
  {
    "text": "the implementation step takes that IR and makes it device device specific to generate a bit stream that you can then",
    "start": "1770249",
    "end": "1776279"
  },
  {
    "text": "program an FPGA with and the unusual thing about this particular view is this",
    "start": "1776279",
    "end": "1782190"
  },
  {
    "text": "this is a block view that I think is quite unique to the Xilinx provider to all their might maybe other vendors",
    "start": "1782190",
    "end": "1788009"
  },
  {
    "text": "provide something similar I'm not sure the benefit of working so when we are coding the various modules we are",
    "start": "1788009",
    "end": "1793829"
  },
  {
    "text": "working at the you know very log VHDL level but and it can be useful to have a",
    "start": "1793829",
    "end": "1799289"
  },
  {
    "text": "block for you like this where you're connecting the components visually because as you can see there's a there's quite a few like inputs and outputs on",
    "start": "1799289",
    "end": "1805769"
  },
  {
    "text": "various modules this is actually not the largest or the module with the largest number of inputs and outputs on the",
    "start": "1805769",
    "end": "1811649"
  },
  {
    "text": "device and it can be a real pain just disconnecting the connecting things in source code which just it's basically",
    "start": "1811649",
    "end": "1818249"
  },
  {
    "text": "you know writing out the same name imagine providing a function argument to like a hundred different places and just",
    "start": "1818249",
    "end": "1823619"
  },
  {
    "text": "repeat them doing it's it can be tiring and this allows you to connect disconnect wise very easily and the",
    "start": "1823619",
    "end": "1829139"
  },
  {
    "text": "other thing I want to mention here is you might be able to see it I'm not sure how large is on the on the right there's",
    "start": "1829139",
    "end": "1834179"
  },
  {
    "text": "a integrated logic analyzer and that's how we're gonna do bug stuff on the FPGA",
    "start": "1834179",
    "end": "1839419"
  },
  {
    "text": "so when you have an integrated logic analyzer on epj you can set it up to",
    "start": "1839419",
    "end": "1846899"
  },
  {
    "text": "provide you waveforms of what's happening on the FPGA so the waveforms and I'm not sure how visible that is but",
    "start": "1846899",
    "end": "1854039"
  },
  {
    "text": "it basically provides you with readings of the values over time on particularly",
    "start": "1854039",
    "end": "1859240"
  },
  {
    "text": "wires that you select and you can set up trigger points 400% conditions to",
    "start": "1859240",
    "end": "1865529"
  },
  {
    "text": "trigger the integrated logic analyzer to start recording because the FPGA is run so quick and the integrated logic",
    "start": "1865529",
    "end": "1871990"
  },
  {
    "text": "analyzer uses resources on the FPGA you'll limit it to a very small window this it's a lot more painful than kind",
    "start": "1871990",
    "end": "1878470"
  },
  {
    "text": "of printf debugging in the software world and but it's definitely necessary and for instance if you're if you are",
    "start": "1878470",
    "end": "1885279"
  },
  {
    "text": "sending PCI Express requests and you know receiving response back you might set a a trigger on okay when we send a",
    "start": "1885279",
    "end": "1895389"
  },
  {
    "text": "PCI Express request and then it will capture let's say 100 clocks worth of",
    "start": "1895389",
    "end": "1900490"
  },
  {
    "text": "data and then you can look back and see okay yeah I can see my request going out I can see there's a valid ready",
    "start": "1900490",
    "end": "1906929"
  },
  {
    "text": "signaling going on but my date it was malformed for some reason and then you could obviously try and tricks back okay",
    "start": "1906929",
    "end": "1913299"
  },
  {
    "text": "so that's enough background and PCI meets FPGA so what we wanted to provide",
    "start": "1913299",
    "end": "1921880"
  },
  {
    "text": "was PCI DMA as a simple interface right and we wanted to provide as a spline",
    "start": "1921880",
    "end": "1928870"
  },
  {
    "text": "face as well so we only wanted to provide the kind of simple functions",
    "start": "1928870",
    "end": "1933970"
  },
  {
    "text": "necessary the search function is is particularly useful having that on the",
    "start": "1933970",
    "end": "1939909"
  },
  {
    "text": "FPGA because we can massively reduce downstream bandwidth required and for the spy consumer and also potentially",
    "start": "1939909",
    "end": "1947139"
  },
  {
    "text": "what the spy consumer wants to send out over radio comms and we could add additional spy commands it does require",
    "start": "1947139",
    "end": "1953440"
  },
  {
    "text": "more engineering and it can be a pain because we're not working a software level so you're you have to design",
    "start": "1953440",
    "end": "1959350"
  },
  {
    "text": "additional circuitry to to run additional commands and the commands that we provide asynchronous that means",
    "start": "1959350",
    "end": "1965289"
  },
  {
    "text": "you initiate them and then collect the results apart from the read apart from the write command so for instance for",
    "start": "1965289",
    "end": "1970629"
  },
  {
    "text": "the read command you would send the reach mind along with a 64-bit address and then you would send another",
    "start": "1970629",
    "end": "1976610"
  },
  {
    "text": "command I'm asking whether the command had fished the read command had finished and also you know how much was read and",
    "start": "1976610",
    "end": "1983330"
  },
  {
    "text": "also the data that was read and so just a quick overview of spy this is one spy",
    "start": "1983330",
    "end": "1988640"
  },
  {
    "text": "one slight overview and spies pretty ubiquitous in both microcontroller and",
    "start": "1988640",
    "end": "1994820"
  },
  {
    "text": "then all all electronic devices and it's really simple to implement I think my implementation for the FPGA is like",
    "start": "1994820",
    "end": "2001630"
  },
  {
    "text": "twenty or thirty lines long very easy to get get moving with and it's also pretty",
    "start": "2001630",
    "end": "2006760"
  },
  {
    "text": "decent performance you know it runs it 20 megahertz that's so you go like 20 megabits the the FPGA is obviously way",
    "start": "2006760",
    "end": "2016150"
  },
  {
    "text": "more bandwidth than that but it's it's not insubstantial allows us to get",
    "start": "2016150",
    "end": "2021340"
  },
  {
    "text": "engaged off the FPGA and onto the microcontroller and there are other",
    "start": "2021340",
    "end": "2026500"
  },
  {
    "text": "options and such as I I do see in you arts and but spy was pretty easy to get",
    "start": "2026500",
    "end": "2031840"
  },
  {
    "text": "started with and the other thing to note is these are Marsha master initiated commands so that means when we want to",
    "start": "2031840",
    "end": "2039280"
  },
  {
    "text": "send a command from the microphone table to the FPGA we in our case in reverse to",
    "start": "2039280",
    "end": "2046720"
  },
  {
    "text": "this diagram we right raise the slave select line and that tells the FPGA okay there's a command coming and then we",
    "start": "2046720",
    "end": "2052720"
  },
  {
    "text": "send out and receive bytes and according to some clock that's also sent along and",
    "start": "2052720",
    "end": "2057929"
  },
  {
    "text": "wrong from the microcontroller to the FPGA okay so this is an overview of the",
    "start": "2057929",
    "end": "2064320"
  },
  {
    "text": "what's on the FPGA itself each box here is an independent state machine because it's a circuit they're all running at",
    "start": "2064320",
    "end": "2070510"
  },
  {
    "text": "the same time so to start off the red",
    "start": "2070510",
    "end": "2075638"
  },
  {
    "text": "areas in the in the top left and bottom left that's the PCI Express clock domain",
    "start": "2075639",
    "end": "2082540"
  },
  {
    "text": "so there's a transition there and from the red from red PCI Quatermain into the",
    "start": "2082540",
    "end": "2088990"
  },
  {
    "text": "main logic which is all in the white domain and then similarly on the top right we have the the blue air which is",
    "start": "2088990",
    "end": "2094600"
  },
  {
    "text": "this spy clock domain and yeah so basically the spy spy interface is very",
    "start": "2094600",
    "end": "2101560"
  },
  {
    "text": "simple it takes a 1 by argument which is or one by argument and sixty four-bit",
    "start": "2101560",
    "end": "2107010"
  },
  {
    "text": "argue our arguments the first bite sorry is the command identify the spy module",
    "start": "2107010",
    "end": "2113640"
  },
  {
    "text": "and in the top right that basically takes the bitstream and assembles it into bytes the command processor",
    "start": "2113640",
    "end": "2119940"
  },
  {
    "text": "assembles those bytes into commands and and with their arguments and so for",
    "start": "2119940",
    "end": "2125160"
  },
  {
    "text": "indicate in the case of a search command the command will be passed to search and slash probe controller and obviously",
    "start": "2125160",
    "end": "2132990"
  },
  {
    "text": "it's initiated by the commander and the search probe control itself will take",
    "start": "2132990",
    "end": "2138270"
  },
  {
    "text": "that command and it's put it up into a bunch of windows and and pass it on to a number of different search control units",
    "start": "2138270",
    "end": "2145350"
  },
  {
    "text": "and this is mainly for performance and it can be the sound tags and requests",
    "start": "2145350",
    "end": "2151710"
  },
  {
    "text": "will be like fail or stall and if you have different tags associated with different regions you can get better",
    "start": "2151710",
    "end": "2157440"
  },
  {
    "text": "performance and pipeliner and dislike those search units themselves contain a little bit of state according to you",
    "start": "2157440",
    "end": "2162900"
  },
  {
    "text": "know like where they are in memory and also a window of what they've seen so they can yeah",
    "start": "2162900",
    "end": "2169710"
  },
  {
    "text": "collect search results and the search controller and the search units will generate TRPs PCIT LPS that would be",
    "start": "2169710",
    "end": "2178410"
  },
  {
    "text": "passed out to the hosts and then similarly we received back key Opie's in",
    "start": "2178410",
    "end": "2185070"
  },
  {
    "text": "the in the top left and we have a stream reassemble and state machine and yeah",
    "start": "2185070",
    "end": "2190470"
  },
  {
    "text": "basically when you're receiving gops back and as I mentioned earlier for one",
    "start": "2190470",
    "end": "2195630"
  },
  {
    "text": "particular tag they will be ordered but it can be that the state of missing and failures and and obviously you are such",
    "start": "2195630",
    "end": "2202800"
  },
  {
    "text": "controller and read buffer they expect continuous streams and so we try and reassemble into continuous stream and",
    "start": "2202800",
    "end": "2209790"
  },
  {
    "text": "also we can send out more and TLPs if we think with miss date or something like that and we can also tag the data stream",
    "start": "2209790",
    "end": "2216150"
  },
  {
    "text": "with useful information such as the tag that's associated with the data stream and how many bytes are remaining in a",
    "start": "2216150",
    "end": "2222090"
  },
  {
    "text": "particular request so for a reader quest it just gets passed on to the read buffer the reason we have a fork a",
    "start": "2222090",
    "end": "2227970"
  },
  {
    "text": "kilobyte read buffer is there's really no reason to have to ever read less than four kilobytes even if the spike man",
    "start": "2227970",
    "end": "2235050"
  },
  {
    "text": "only wants a single byte the PCI Express is so much quicker that",
    "start": "2235050",
    "end": "2241650"
  },
  {
    "text": "we can just fill a 4 kilobyte M buffer and there's no reason not to okay so",
    "start": "2241650",
    "end": "2247140"
  },
  {
    "text": "there was there's a number of issues we had during this one was compiling induced metastability",
    "start": "2247140",
    "end": "2252390"
  },
  {
    "text": "and basically because we'd added an additional compilation step there was a",
    "start": "2252390",
    "end": "2258570"
  },
  {
    "text": "case where some of our logic was getting optimized out so this relates back to how those different clock domains said",
    "start": "2258570",
    "end": "2263700"
  },
  {
    "text": "passing data between different clock demands and we done the correct approach of double red string data which is",
    "start": "2263700",
    "end": "2270030"
  },
  {
    "text": "what's required to remove metastability but there was a case and it might have maybe was a user error but it could also",
    "start": "2270030",
    "end": "2277080"
  },
  {
    "text": "be in a compiler error and there was removing or optimizing let's say I think it was shifting how the register who was",
    "start": "2277080",
    "end": "2285030"
  },
  {
    "text": "retiming some of the registers so what happens when you have medicine ability",
    "start": "2285030",
    "end": "2290220"
  },
  {
    "text": "is you have these issues where you can you have it you can test it value let's",
    "start": "2290220",
    "end": "2296040"
  },
  {
    "text": "say X is equal to 1 you texted it test it X equal to 0 and and the tip at",
    "start": "2296040",
    "end": "2303630"
  },
  {
    "text": "different spots will be taken instead of Y being assigned 0 it's assigned one and and it's basically due to the result",
    "start": "2303630",
    "end": "2310950"
  },
  {
    "text": "that actually happens is dependent on the physical characteristics of the FPGA where some ways are like slightly longer",
    "start": "2310950",
    "end": "2316650"
  },
  {
    "text": "and and this shouldn't happen right it's a bug of course there's also like another many other pain points one is",
    "start": "2316650",
    "end": "2325020"
  },
  {
    "text": "kind of the indian madness of working with encapsulation inside encapsulation",
    "start": "2325020",
    "end": "2330390"
  },
  {
    "text": "studying capsulation and eunice dealing with different engines is obviously a very common problem but as we build up",
    "start": "2330390",
    "end": "2335820"
  },
  {
    "text": "encapsulation layers it just becomes it's almost as someone who's tried to",
    "start": "2335820",
    "end": "2341580"
  },
  {
    "text": "trip you up really and so for instance when you're running a 64-bit address 6 bit bit value to 64 bit address you'll",
    "start": "2341580",
    "end": "2348600"
  },
  {
    "text": "write the high bits of the address then you write the low bits and then you write the low bits of the data and then",
    "start": "2348600",
    "end": "2354270"
  },
  {
    "text": "the high bits of the address it's backwards right which and you know it's not a difficult thing but it definitely",
    "start": "2354270",
    "end": "2359640"
  },
  {
    "text": "tripped me up so yeah and there's there's numerous other things that are",
    "start": "2359640",
    "end": "2367530"
  },
  {
    "text": "can trip you up so for instance before previously I talked about and the the",
    "start": "2367530",
    "end": "2372600"
  },
  {
    "text": "length and the address not crossing like a page boundary a 4 kilobyte page",
    "start": "2372600",
    "end": "2377790"
  },
  {
    "text": "boundary and and also as I mentioned having that stuff not fail immediately",
    "start": "2377790",
    "end": "2383160"
  },
  {
    "text": "having it fail like after you've made some requests can be a real pain in debugging those issues and yeah ok so",
    "start": "2383160",
    "end": "2390930"
  },
  {
    "text": "I'll hand over to Joe now for integrating with the PyCon module thanks Ben awesome so as we know there's no",
    "start": "2390930",
    "end": "2402510"
  },
  {
    "text": "radio on the pico EVB and we needed a second device to handle communication with the outside world and we settled on",
    "start": "2402510",
    "end": "2409710"
  },
  {
    "text": "the PyCon family of microcontrollers for developing our prototype they run micro",
    "start": "2409710",
    "end": "2414990"
  },
  {
    "text": "Python so they run an embedded Python interpreter the idea being that we would drive DMA via spy we're talking to the",
    "start": "2414990",
    "end": "2422400"
  },
  {
    "text": "FPGA and an expose a TCP server that supports reads and writes of physical memory and PyCon looked to be a perfect",
    "start": "2422400",
    "end": "2431070"
  },
  {
    "text": "candidate for this implementing this prototype pythons easy to develop in the",
    "start": "2431070",
    "end": "2437310"
  },
  {
    "text": "Python family has modules that include up to 5 different radio technologies so you have 802 11 BGN LTE Laura and others",
    "start": "2437310",
    "end": "2445550"
  },
  {
    "text": "it's easily expanded via spy which is what we ended up using IDE you see you",
    "start": "2445550",
    "end": "2450600"
  },
  {
    "text": "have lots of pins available for GPIO some of the other platforms we looked at were smaller but they just didn't have enough pins and it's pretty tiny it's",
    "start": "2450600",
    "end": "2457410"
  },
  {
    "text": "not as big as the Pico EVB but close 5.5 by two centimeters but they're also",
    "start": "2457410",
    "end": "2464130"
  },
  {
    "text": "challenges working with the PI comm in this context we're trying to support 64-bit reads and writes but the PI comm",
    "start": "2464130",
    "end": "2470340"
  },
  {
    "text": "has an extensive dual core Alex 6 CPU it's a 32-bit architecture so you can natively represent 64-bit values",
    "start": "2470340",
    "end": "2477650"
  },
  {
    "text": "something to account for memory is naturally limited 4 Meg's of RAM 8 banks",
    "start": "2477650",
    "end": "2483300"
  },
  {
    "text": "of flash even though you're developing in Python you have to be careful with data copies heap fragmentation can",
    "start": "2483300",
    "end": "2489990"
  },
  {
    "text": "affect the stability of the device and we don't want it timing out not being accessible and you know we're relying on",
    "start": "2489990",
    "end": "2497130"
  },
  {
    "text": "spy which is compared to PCI comparatively low band but these none of these were",
    "start": "2497130",
    "end": "2502550"
  },
  {
    "text": "deal-breakers our software accounts for these challenges and just to give you",
    "start": "2502550",
    "end": "2508100"
  },
  {
    "text": "sort of a visual representation of the software stack on the radio side so Ben was talking about the purple square the",
    "start": "2508100",
    "end": "2513140"
  },
  {
    "text": "Pico DMA we're communicating with that over spy and then if we follow the bouncing ball we have more complex",
    "start": "2513140",
    "end": "2519410"
  },
  {
    "text": "layers for communicating with the Pico DMA we have a Ross PI modules by WI it",
    "start": "2519410",
    "end": "2525110"
  },
  {
    "text": "supports fixed length reads and writes and 32k searches over memory which is",
    "start": "2525110",
    "end": "2530990"
  },
  {
    "text": "value that we found stable but we're hoping to increase there's a more complex module spy util that sports",
    "start": "2530990",
    "end": "2538550"
  },
  {
    "text": "block based reads writes and searches so it allows you to operate over larger ranges of memory and sort of abstracts",
    "start": "2538550",
    "end": "2544010"
  },
  {
    "text": "away the fixed block sizes of the FPGA itself and the last piece that we",
    "start": "2544010",
    "end": "2550160"
  },
  {
    "text": "implemented that was really important is streaming reads and writes so basically we have a spy DMA object that takes a",
    "start": "2550160",
    "end": "2557450"
  },
  {
    "text": "socket and shoves data out on it in response to read and write requests and",
    "start": "2557450",
    "end": "2563180"
  },
  {
    "text": "I mentioned earlier we have a server thread that takes inbound read and write commands in the format that PCI liche",
    "start": "2563180",
    "end": "2570290"
  },
  {
    "text": "sends with the raw TCP device so we can point TC we can point PCI leach at this",
    "start": "2570290",
    "end": "2575690"
  },
  {
    "text": "thing and start reading and writing memory in terms of connectivity throwing",
    "start": "2575690",
    "end": "2582710"
  },
  {
    "text": "this in as a wiring guide in the top right you see the Pico EVB that's the back of the board there are general",
    "start": "2582710",
    "end": "2589040"
  },
  {
    "text": "multi-purpose i/o pins on the bottom they're oriented with pin one at the top and that connects to the Associated pins",
    "start": "2589040",
    "end": "2596570"
  },
  {
    "text": "on the PI comm you can get wires on digi-key that are quite long so it's",
    "start": "2596570",
    "end": "2603200"
  },
  {
    "text": "flexible in terms of where you deploy it and you'll notice that the the the v in",
    "start": "2603200",
    "end": "2608330"
  },
  {
    "text": "the VN pin is read and I'll tell you why there are some fun gotchas as far as",
    "start": "2608330",
    "end": "2613400"
  },
  {
    "text": "integration goes connecting the 3.3 volt pin on the PI com2 the Pico EVB as you'd",
    "start": "2613400",
    "end": "2620240"
  },
  {
    "text": "expect would kill the Pico EVB and I don't recommend doing this two days before the conference don't pull a Joel",
    "start": "2620240",
    "end": "2628150"
  },
  {
    "text": "code uploads often die and the Python becomes unbootable and you'll want to",
    "start": "2628210",
    "end": "2633560"
  },
  {
    "text": "have tool handy in the bottom right I have my tool that I made precision craftsmanship and kind of representative of my state",
    "start": "2633560",
    "end": "2641720"
  },
  {
    "text": "of mind throughout this project you can hold pin 12 high and boot into a recovery mode end up doing that a lot",
    "start": "2641720",
    "end": "2648670"
  },
  {
    "text": "the wireless configuration is brittle and dangerous so be careful and now",
    "start": "2648670",
    "end": "2654530"
  },
  {
    "text": "let's try some live demos so we have the the nut box that I mentioned up here it's running Ubuntu 1604 o 6 we have a 4",
    "start": "2654530",
    "end": "2661220"
  },
  {
    "text": "8 o 58 generic kernel which is supported by PCI leach it's a soft target vtg is",
    "start": "2661220",
    "end": "2666530"
  },
  {
    "text": "disabled we've disabled kernel ASLR not a defense against DMA attacks by any means but it does gives us reliable",
    "start": "2666530",
    "end": "2673550"
  },
  {
    "text": "offsets for expedience in the demo and this machine's happen to be it happens to be air gapped there aren't working",
    "start": "2673550",
    "end": "2680450"
  },
  {
    "text": "drivers for that kernel version that are packaged so it has no connectivity other than the Pico DMA so let's let's give",
    "start": "2680450",
    "end": "2689180"
  },
  {
    "text": "this a try alright so we will start by",
    "start": "2689180",
    "end": "2694190"
  },
  {
    "text": "connecting oh sorry choose how do I do that there we go",
    "start": "2694190",
    "end": "2705800"
  },
  {
    "text": "awesome okay so we've connected to the the the radio itself we're gonna log in",
    "start": "2705800",
    "end": "2710830"
  },
  {
    "text": "the black hat password here goes nothing",
    "start": "2710830",
    "end": "2716350"
  },
  {
    "text": "good and now we have a Python rebel so",
    "start": "2716740",
    "end": "2721300"
  },
  {
    "text": "now we will run our demo so far so good awesome so bump up the font size a",
    "start": "2727240",
    "end": "2734240"
  },
  {
    "text": "little bit and we'll get started so we have little basic system information the",
    "start": "2734240",
    "end": "2740869"
  },
  {
    "text": "important thing here is note that the heap is quite small for okay we have a little bit of information about the device itself it's running at 160",
    "start": "2740869",
    "end": "2747350"
  },
  {
    "text": "megahertz here's the pin outs this is configurable on the PyCon side is useful",
    "start": "2747350",
    "end": "2752830"
  },
  {
    "text": "we have a server running and seems to be alive is running is true it's a good sign now we'll get into actual",
    "start": "2752830",
    "end": "2759590"
  },
  {
    "text": "communication with the FPGA so let's test SPI connectivity and we're running a thousand trials and",
    "start": "2759590",
    "end": "2765620"
  },
  {
    "text": "we have a failure rate of zero which is good because during development we did have failure rates that were higher do a",
    "start": "2765620",
    "end": "2774350"
  },
  {
    "text": "quick read of memory seems to be working now we're gonna find the base address",
    "start": "2774350",
    "end": "2780070"
  },
  {
    "text": "sorry I hit tab they're finding the base address of the kernel and we're using search to do so so that seems to be",
    "start": "2780070",
    "end": "2786980"
  },
  {
    "text": "working well that's a good sign and we're going to do a second read of the first page of the Linux kernel I'm",
    "start": "2786980",
    "end": "2795620"
  },
  {
    "text": "gonna skip PCIe each integration because because of time but we'll see PC I'll each in a second but we can also read",
    "start": "2795620",
    "end": "2802100"
  },
  {
    "text": "and write using PCI leach and now let's try a write to memory so nice quiet",
    "start": "2802100",
    "end": "2810380"
  },
  {
    "text": "location in kernel memory all nulls now we will do a right here you see pretty",
    "start": "2810380",
    "end": "2816830"
  },
  {
    "text": "crude black hat logo and okay the device seems pretty healthy so let's move into",
    "start": "2816830",
    "end": "2822620"
  },
  {
    "text": "something a little more interesting so",
    "start": "2822620",
    "end": "2829480"
  },
  {
    "text": "we're actually able to compute the offsets that PCI which requires FPGA side but in the interest of time I've",
    "start": "2829480",
    "end": "2836570"
  },
  {
    "text": "supplying them on the command line and now we're trying to load a kernel mode implant takes a little takes a minute or",
    "start": "2836570",
    "end": "2847910"
  },
  {
    "text": "two I think if we look over here yep we got activity here reads and writes looks",
    "start": "2847910",
    "end": "2853100"
  },
  {
    "text": "healthy",
    "start": "2853100",
    "end": "2855490"
  },
  {
    "text": "it's uh it's a lot slower here than it is elsewhere there's our first try okay",
    "start": "2863730",
    "end": "2872070"
  },
  {
    "text": "great so here's the offsets that we're using we've inserted code into the",
    "start": "2872070",
    "end": "2877530"
  },
  {
    "text": "kernel and it looks like PCI leach is happy so we've now compromised this air",
    "start": "2877530",
    "end": "2883859"
  },
  {
    "text": "gap machine and now we're going to pull sensitive credentials using this software implant PCI leach of course",
    "start": "2883859",
    "end": "2890670"
  },
  {
    "text": "doing the heavy lifting here so we'll start with some user credentials that",
    "start": "2890670",
    "end": "2897300"
  },
  {
    "text": "seems to be working I think we only have a minute and a half left so I am going",
    "start": "2897300",
    "end": "2903480"
  },
  {
    "text": "to switch back to slides but long story short pulling credentials works we can",
    "start": "2903480",
    "end": "2908640"
  },
  {
    "text": "do whatever we want at this point all",
    "start": "2908640",
    "end": "2918720"
  },
  {
    "text": "right so just some some quick takeaways EMEA implants are more flexible as we saw give us new variations in attacks",
    "start": "2918720",
    "end": "2925250"
  },
  {
    "text": "the Pico EVB is definitely a great platform for DNA research and we dealt with plenty of challenges developing a",
    "start": "2925250",
    "end": "2932070"
  },
  {
    "text": "working prototype but we were able to overcome them we're planning to release all our software check out github comm",
    "start": "2932070",
    "end": "2938100"
  },
  {
    "text": "Pico DMA the radio software should be up there today I just haven't posted it yet FPGA",
    "start": "2938100",
    "end": "2943859"
  },
  {
    "text": "software is coming Ben's just going to clean it up a little bit we do have a PCI leach client that you can use with the radio and other useful",
    "start": "2943859",
    "end": "2951359"
  },
  {
    "text": "tools that we've developed and then we have 40-second can you just pull the turbo up again let's just see if it",
    "start": "2951359",
    "end": "2957420"
  },
  {
    "text": "worked just so you guys know we're not pulling your leg yeah okay so here we",
    "start": "2957420",
    "end": "2964260"
  },
  {
    "text": "have aw aw spreads hold from the device and 30 seconds so I don't think we have",
    "start": "2964260",
    "end": "2970800"
  },
  {
    "text": "time for questions now but there is a follow up room and we're happy to do live demos and answer questions there so",
    "start": "2970800",
    "end": "2977400"
  },
  {
    "text": "thank you so much everyone thanks for coming thanks to oaf and all the other researchers I mentioned",
    "start": "2977400",
    "end": "2982540"
  },
  {
    "text": "[Applause]",
    "start": "2982540",
    "end": "2986820"
  }
]