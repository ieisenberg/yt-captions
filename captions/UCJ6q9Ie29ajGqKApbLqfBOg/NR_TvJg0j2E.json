[
  {
    "text": "[Music] [Laughter]",
    "start": "1610",
    "end": "10260"
  },
  {
    "text": "to the first track of the day we have file disinfection framework stking back",
    "start": "10800",
    "end": "16000"
  },
  {
    "text": "at polymorphic viruses with Mario Ven and Thomas laav perin hello so my name",
    "start": "16000",
    "end": "22039"
  },
  {
    "text": "is Mario vsan and this is Thomas perin and we are the founders of reversing labs and we are here to talk today to",
    "start": "22039",
    "end": "29000"
  },
  {
    "text": "talk about our DARPA CFT sponsored research called file disinfection framework actually this will be an open-",
    "start": "29000",
    "end": "36440"
  },
  {
    "text": "Source uh project that will be uh released very very soon uh we still sort",
    "start": "36440",
    "end": "42520"
  },
  {
    "text": "of working few more Kings you know and would really love to release You full and complete set of binaries uh you",
    "start": "42520",
    "end": "48760"
  },
  {
    "text": "should probably just follow our uh Twitter follow the full releas of the binaries but we will show you how things",
    "start": "48760",
    "end": "55120"
  },
  {
    "text": "work today and uh our goal is first to just you know give you you know briefly introduction and then really dive into",
    "start": "55120",
    "end": "62199"
  },
  {
    "text": "uh um our disinfection framework and uh really our ideas on how we deal with the",
    "start": "62199",
    "end": "69159"
  },
  {
    "text": "uh file infectors so um as a sort of a way of uh",
    "start": "69159",
    "end": "75960"
  },
  {
    "text": "segueing into our agenda we just give really brief you know very subjective uh",
    "start": "75960",
    "end": "82360"
  },
  {
    "text": "uh background and history on computer viruses uh and then literally you know spent a few minutes talking about uh uh",
    "start": "82360",
    "end": "91040"
  },
  {
    "text": "problem of you know polymorphic viruses and F infectors why this is important and really why did we felt compelled to",
    "start": "91040",
    "end": "98960"
  },
  {
    "text": "work on something like file disinfection framework once we get to the file dis disinfection framework we'll look at two",
    "start": "98960",
    "end": "105719"
  },
  {
    "text": "different ways uh disinfectors can be written we look at uh uh building static",
    "start": "105719",
    "end": "111079"
  },
  {
    "text": "file disinfections uh disinfectors and then uh building these infectors with an aid of an emulator that uh we will be",
    "start": "111079",
    "end": "118200"
  },
  {
    "text": "releasing soon and so I'm really you know excited to uh you know to to",
    "start": "118200",
    "end": "123960"
  },
  {
    "text": "finally see this uh happen so as a way of a really quick introduction uh people have defined",
    "start": "123960",
    "end": "130640"
  },
  {
    "text": "computer viruses uh as simply a program that can replicate itself and spread from one computer to another you know",
    "start": "130640",
    "end": "136560"
  },
  {
    "text": "very simple terms uh there's a lot more complications and we'll get in them soon",
    "start": "136560",
    "end": "141680"
  },
  {
    "text": "but you know as a way of a start let's just say that you know in a computer virus you know there are mandatory",
    "start": "141680",
    "end": "146760"
  },
  {
    "text": "components and some optional components you you can assume that virus needs to",
    "start": "146760",
    "end": "151840"
  },
  {
    "text": "find the target uh that it's going to infect so it needs to search for it and then it needs to do something with it it",
    "start": "151840",
    "end": "157560"
  },
  {
    "text": "needs to infected and then obviously in a subsequent more complex steps uh it needs to be a little bit smart uh apply",
    "start": "157560",
    "end": "164519"
  },
  {
    "text": "some uh anti- detection uh uh uh uh rules uh uh some some anti detection",
    "start": "164519",
    "end": "170560"
  },
  {
    "text": "tricks as not to be detected and really to be able to uh uh run its uh trigger",
    "start": "170560",
    "end": "175920"
  },
  {
    "text": "routines now or sometimes in the future and deliver a payload",
    "start": "175920",
    "end": "181519"
  },
  {
    "text": "and uh this sort of uh you know gets us into the concept of a virus which is really an old concept you know started a",
    "start": "181519",
    "end": "187280"
  },
  {
    "text": "long time ago uh with John John Norman's research way back in 49 and it really we",
    "start": "187280",
    "end": "195080"
  },
  {
    "text": "would have to fast forward to 70s when the first viruses uh uh as experimental",
    "start": "195080",
    "end": "200560"
  },
  {
    "text": "self-replicating programs uh came to be Bob Thomas from BBN Technologies came up",
    "start": "200560",
    "end": "206840"
  },
  {
    "text": "with the creeper virus and it was you know so successful that he needed to set up a a disinfection for program called",
    "start": "206840",
    "end": "214360"
  },
  {
    "text": "uh Reaper uh which sort of you know briefly followed this uh deck pdp10 uh",
    "start": "214360",
    "end": "219879"
  },
  {
    "text": "um uh virus for 10x operating system really beautiful technology really",
    "start": "219879",
    "end": "224959"
  },
  {
    "text": "wonderful uh you know we obviously encourage people to uh do more research on it then we you know in in in our uh",
    "start": "224959",
    "end": "232360"
  },
  {
    "text": "view of the world just you know fast forward to 84 you know when the term virus was coined by Frederick con uh",
    "start": "232360",
    "end": "238200"
  },
  {
    "text": "where he uh described the computer virus as a program that can infect other",
    "start": "238200",
    "end": "244519"
  },
  {
    "text": "programs by modifying them to include a possibly evolved copy of itself now you're sort of getting into the more",
    "start": "244519",
    "end": "250920"
  },
  {
    "text": "advanced research that will you know literally lead us to the sort of the the file infector complexities that you know",
    "start": "250920",
    "end": "257199"
  },
  {
    "text": "we have today uh it would take few years before we would start seeing more complex viruses with Vienna um the first",
    "start": "257199",
    "end": "264479"
  },
  {
    "text": "you sort of IBM platform virus and then with you know Lehi virus and uh",
    "start": "264479",
    "end": "269800"
  },
  {
    "text": "collection of boots set boot sector viruses such as Yale ston ping pong and then obviously the",
    "start": "269800",
    "end": "277080"
  },
  {
    "text": "the the first self encrypting virus called uh uh Cascade in 990 uh Mark wasburn uh would",
    "start": "277080",
    "end": "286400"
  },
  {
    "text": "be working on analysis you know Vienna uh and Cascade viruses and generate uh",
    "start": "286400",
    "end": "291840"
  },
  {
    "text": "uh uh the first time you polymorphic viruses or so-called chameleon family",
    "start": "291840",
    "end": "297000"
  },
  {
    "text": "and then you know not so much exciting was happening from the perspective of you know us talking about the",
    "start": "297000",
    "end": "302759"
  },
  {
    "text": "disinfection process until 19 1998 and the appearance of the C virus a virus",
    "start": "302759",
    "end": "310000"
  },
  {
    "text": "that uh has been for Generations you know so poorly disinfected that you know",
    "start": "310000",
    "end": "315240"
  },
  {
    "text": "there are today you know a lot of 90s uh software applications including Microsoft software that has the remnant",
    "start": "315240",
    "end": "321600"
  },
  {
    "text": "of C AG uh in the various uh uh updates of the operating system uh uh",
    "start": "321600",
    "end": "328000"
  },
  {
    "text": "present in 2001 in 2002 um uh uh zombie",
    "start": "328000",
    "end": "333520"
  },
  {
    "text": "mistfall or known as zist uh uh came to be so the the metamorphic computer virus",
    "start": "333520",
    "end": "340479"
  },
  {
    "text": "uh uh created by zombie the famous you know Russian personality and you know",
    "start": "340479",
    "end": "346560"
  },
  {
    "text": "followed by the simil virus a metamorphic virus uh written in",
    "start": "346560",
    "end": "354520"
  },
  {
    "text": "assembly so um that this sort of sort of you know segue leads us in into the uh",
    "start": "354520",
    "end": "361240"
  },
  {
    "text": "really the file infection problem that you know we will be addressing today and you know why are these polymorphic virus",
    "start": "361240",
    "end": "368160"
  },
  {
    "text": "is important and uh so we view the file infection at the Endo as really the",
    "start": "368160",
    "end": "374240"
  },
  {
    "text": "ultimate polymorphism it's the it's it's a situation where an infector replicates",
    "start": "374240",
    "end": "379319"
  },
  {
    "text": "itself into a you know host of unique different containers where you know one",
    "start": "379319",
    "end": "384639"
  },
  {
    "text": "strain can generate generate literally hundreds of thousands of unique infected samples so we all with massive amounts",
    "start": "384639",
    "end": "390800"
  },
  {
    "text": "of samples today you know what's the big deal with you know uh you know you know more of the same the idea is you know we can't just you know write signatures or",
    "start": "390800",
    "end": "399199"
  },
  {
    "text": "ban uh uh uh files you know um uh one by one we really you know have to come up",
    "start": "399199",
    "end": "404720"
  },
  {
    "text": "with a more uh organized response and response is really quite difficult because uh you really need to reduce the",
    "start": "404720",
    "end": "411880"
  },
  {
    "text": "huge quantity of samples uh into a single infection single situation that",
    "start": "411880",
    "end": "417960"
  },
  {
    "text": "you will be looking at that you need to identify and find a generic generic or specific way to excise you know",
    "start": "417960",
    "end": "425039"
  },
  {
    "text": "disinfect uh items uh and uh as uh usually machines",
    "start": "425039",
    "end": "431000"
  },
  {
    "text": "have multiple infections and if you look at things like vens sality uh those are really the conduits for bringing more",
    "start": "431000",
    "end": "437000"
  },
  {
    "text": "infections to the end point and it's not unusual that a single file you know has multiple infections within it so the",
    "start": "437000",
    "end": "443280"
  },
  {
    "text": "question is you know what do you infect from from what and in what order so this",
    "start": "443280",
    "end": "448800"
  },
  {
    "text": "infection really become comes like a surgery very delicate you know very exact process where um uh if the",
    "start": "448800",
    "end": "456520"
  },
  {
    "text": "offending payload is not properly uh uh uh uh removed uh bad things happen so uh",
    "start": "456520",
    "end": "465000"
  },
  {
    "text": "not just that uh you could you know uh the very basic level you know forget to",
    "start": "465000",
    "end": "471240"
  },
  {
    "text": "uh uh remove the malignant content and infection will simply come back which happens very frequently with you know",
    "start": "471240",
    "end": "478240"
  },
  {
    "text": "again this you know saltin vir infections and then also it's very very",
    "start": "478240",
    "end": "483960"
  },
  {
    "text": "important you that once the in the extraction has happened that the",
    "start": "483960",
    "end": "489039"
  },
  {
    "text": "incision areas you know are uh the switches are applied correctly so that",
    "start": "489039",
    "end": "494520"
  },
  {
    "text": "uh the file can actually be executed that it can actually work again and if this is not done correctly if this has",
    "start": "494520",
    "end": "502039"
  },
  {
    "text": "issues and uh there has been quite a few pretty bad disinfection modules written in the past where the uh the really the",
    "start": "502039",
    "end": "510159"
  },
  {
    "text": "the worst case scenarios happened uh you know the like the system downtime or",
    "start": "510159",
    "end": "515240"
  },
  {
    "text": "loss of data and then obviously the more simply uh reinfection in a week",
    "start": "515240",
    "end": "520919"
  },
  {
    "text": "or two so file infectors usually bring uh",
    "start": "520919",
    "end": "527279"
  },
  {
    "text": "significant dilemma uh uh you know to those who are infected be it in Enterprise or being consumer so the",
    "start": "527279",
    "end": "534040"
  },
  {
    "text": "choice is pretty simple you know do I try to uh disinfect my system or I simply go ahead and reimage and the",
    "start": "534040",
    "end": "541120"
  },
  {
    "text": "responses are usually quite different so consumers always prefer to disinfect",
    "start": "541120",
    "end": "546480"
  },
  {
    "text": "rarely reimage because you know they are attached to their uh machine uh they're",
    "start": "546480",
    "end": "552160"
  },
  {
    "text": "likely not packing up frequently enough or at all uh they have lot of personal data uh on on on on those machines lots",
    "start": "552160",
    "end": "559600"
  },
  {
    "text": "of media uh which will always Trump any security risk I want my stuff and I will",
    "start": "559600",
    "end": "565880"
  },
  {
    "text": "try any kind of tool before I resort to to uh reimaging and these users are",
    "start": "565880",
    "end": "571600"
  },
  {
    "text": "today served by uh uh uh their AV products you know largely free AV",
    "start": "571600",
    "end": "577079"
  },
  {
    "text": "products but a products you know for for getting that disinfection done now on the Enterprise side the the",
    "start": "577079",
    "end": "584079"
  },
  {
    "text": "the logic is a lot different the the ID department will uh prefer to reimage the",
    "start": "584079",
    "end": "589720"
  },
  {
    "text": "system if at all possible uh but uh it may come with a with a really Hefty",
    "start": "589720",
    "end": "596920"
  },
  {
    "text": "price because it may not be practical in all the cases so you can imagine if you have a massive infection over 10,000 or",
    "start": "596920",
    "end": "603279"
  },
  {
    "text": "even more units uh if your IT staff is you know three or four people uh you",
    "start": "603279",
    "end": "609800"
  },
  {
    "text": "really could end up with a mutinous uh type of situation where um disinfection",
    "start": "609800",
    "end": "616079"
  },
  {
    "text": "is definitely step that you would like to try before reimaging machines and potentially losing the entire team I've",
    "start": "616079",
    "end": "622519"
  },
  {
    "text": "heard of situations where people simply quit because you know no one's really looking forward reimaging tens of thousands of machines for the next month",
    "start": "622519",
    "end": "628959"
  },
  {
    "text": "or two uh only to know that you know the the the the you know uh there was a leftover",
    "start": "628959",
    "end": "635800"
  },
  {
    "text": "uh major infection that would come back like happens again frequently with the inovit and sality infectors you know to",
    "start": "635800",
    "end": "643120"
  },
  {
    "text": "uh you know undo the job being done so the only problem here is is uh when you",
    "start": "643120",
    "end": "648160"
  },
  {
    "text": "offer enterprise uh uh disinfection route is uh uh who will write this uh",
    "start": "648160",
    "end": "654120"
  },
  {
    "text": "these infectors for the Enterprise and so this sort of uh brings us closer to",
    "start": "654120",
    "end": "659920"
  },
  {
    "text": "understanding why did we went down the path of building something very complex um uh why did we uh uh pitch to DARPA",
    "start": "659920",
    "end": "668240"
  },
  {
    "text": "you know the the the idea of uh uh working on a specialized framework that",
    "start": "668240",
    "end": "673279"
  },
  {
    "text": "would allow uh people to build better uh disinfection tools uh quicker so simply",
    "start": "673279",
    "end": "681600"
  },
  {
    "text": "uh the purpose of this was uh after speaking to a lot of different you know researchers in different organizations",
    "start": "681600",
    "end": "687360"
  },
  {
    "text": "not just AV uh over the last years uh them complaining about you know not",
    "start": "687360",
    "end": "692519"
  },
  {
    "text": "having enough time to test not having enough resources to test their disinfection routines and then things",
    "start": "692519",
    "end": "698000"
  },
  {
    "text": "bad things happen that nobody's afraid of Cu after all we are here to protect people not to destroy their stuff so",
    "start": "698000",
    "end": "704800"
  },
  {
    "text": "when the destruction happens it's definitely not a you know something that we happy about uh so the the the per the",
    "start": "704800",
    "end": "712800"
  },
  {
    "text": "purpose of this uh uh framework will be the speed of development uh you know increasing the quality reducing the the",
    "start": "712800",
    "end": "720200"
  },
  {
    "text": "the chance for a risk of failure uh you know improving the test process and then",
    "start": "720200",
    "end": "725360"
  },
  {
    "text": "finally creating something uh that uh uh really is lacking uh in industry and",
    "start": "725360",
    "end": "731160"
  },
  {
    "text": "that's the ability to collaborate uh uh around some of this very very important",
    "start": "731160",
    "end": "736959"
  },
  {
    "text": "modules giving out not just the modules but the source code you know hoping that people can modify it for all the uh uh",
    "start": "736959",
    "end": "745000"
  },
  {
    "text": "um for all the similar strains of a particular attack that we are looking at",
    "start": "745000",
    "end": "750399"
  },
  {
    "text": "and so the benefactor for this uh uh are you know so not only the AV companies",
    "start": "750399",
    "end": "756560"
  },
  {
    "text": "but also the certain teams that are increasingly working on on projects where they're responsible not only to detect inform but to remediate and bring",
    "start": "756560",
    "end": "764760"
  },
  {
    "text": "their their constituents you know to a uh to a good State uh isps are in",
    "start": "764760",
    "end": "770720"
  },
  {
    "text": "increasingly uh being told that it's really not acceptable that they're having bot Nets at million 2 million",
    "start": "770720",
    "end": "776720"
  },
  {
    "text": "even more uh uh um millions of end points infected and they really need to start",
    "start": "776720",
    "end": "784639"
  },
  {
    "text": "doing uh more to affect a solution that has not been served by a and a is very",
    "start": "784639",
    "end": "791639"
  },
  {
    "text": "very specific in that that we'll always work on the solutions that affect the majority of their population and so that",
    "start": "791639",
    "end": "798600"
  },
  {
    "text": "you know if you're an Enterprise you know if you're part of an a you know uh exotic ASP that was targeted by",
    "start": "798600",
    "end": "804760"
  },
  {
    "text": "something quite specific you may not fall into that category and then obviously uh uh uh we will be seeing",
    "start": "804760",
    "end": "810320"
  },
  {
    "text": "Enterprises taking the uh the security in their hands as they're as we're seeing today with uh increasing uh",
    "start": "810320",
    "end": "817639"
  },
  {
    "text": "binary inspection both in of a static and dynamic kind uh we will be seeing in the future people riding their own uh uh",
    "start": "817639",
    "end": "824399"
  },
  {
    "text": "uh disinfectors uh to help themselves all right so with without a further Ado",
    "start": "824399",
    "end": "830079"
  },
  {
    "text": "I'd like to uh ask uh Tommy SL to actually get into the weeds of it and talk about the file disinfection",
    "start": "830079",
    "end": "835680"
  },
  {
    "text": "framework thank you",
    "start": "835680",
    "end": "839680"
  },
  {
    "text": "okay test test",
    "start": "858639",
    "end": "865639"
  },
  {
    "text": "okay uh so uh my name is tamis perin I'm the chip sof software architect at",
    "start": "865639",
    "end": "871040"
  },
  {
    "text": "reversing Labs Corporation and I'm here today to talk to you about the file infection framework that uh uh we are",
    "start": "871040",
    "end": "877959"
  },
  {
    "text": "presenting so the file disinfection framework has been described by my colleague and uh and it at its heart we",
    "start": "877959",
    "end": "886040"
  },
  {
    "text": "have an engine we call the Titan engine now the Titan engine is an open source Library which does Port of executable",
    "start": "886040",
    "end": "891959"
  },
  {
    "text": "file manipulation and throughout its history it went through all sorts of iterations so uh just for for historic",
    "start": "891959",
    "end": "899480"
  },
  {
    "text": "purposes we keep this slide uh to remind ourselves how much time we actually SP spent working on this Library so what",
    "start": "899480",
    "end": "906079"
  },
  {
    "text": "you see on this one slide is about uh 6 years of development so the first version 1.0 is a historic one we wrote",
    "start": "906079",
    "end": "913079"
  },
  {
    "text": "that in assembler just as a proof of concept uh we mainly focused on Dynamic unpacking Solutions at the time so it",
    "start": "913079",
    "end": "919600"
  },
  {
    "text": "only used the windows debug API to actually process files the version 2.0",
    "start": "919600",
    "end": "925600"
  },
  {
    "text": "which we actually presented here at blackhe hat in 2009 was was a total rewrite from assembly to C uh we had a",
    "start": "925600",
    "end": "932319"
  },
  {
    "text": "lot of improvements and a lot of functionality which enabled you to work with those files even better uh the",
    "start": "932319",
    "end": "938720"
  },
  {
    "text": "version 3.0 was presented recently at hacking the Box uh in Amsterdam so this",
    "start": "938720",
    "end": "944000"
  },
  {
    "text": "year uh we that was a total rewrite from C to C++ and it was focused mainly on",
    "start": "944000",
    "end": "950399"
  },
  {
    "text": "static file processing uh because we we believe that static file processing is the way to go if you want to have a safe",
    "start": "950399",
    "end": "958040"
  },
  {
    "text": "environment where you can do uh all sorts of file processing operations really really quickly so expanding on",
    "start": "958040",
    "end": "965160"
  },
  {
    "text": "that we have a version 3.1 which we're talking about today and we're actually presenting it today uh so in addition to",
    "start": "965160",
    "end": "972160"
  },
  {
    "text": "all these static functions we expanded those static functions to enable you to disinfect files and in addition to that",
    "start": "972160",
    "end": "978360"
  },
  {
    "text": "we added an X x86 emulator which enables you to basically run a polymorphic",
    "start": "978360",
    "end": "983560"
  },
  {
    "text": "viruses inside a safe environment for as long as you like until the uh process of disinfection is",
    "start": "983560",
    "end": "989880"
  },
  {
    "text": "complete so uh what is the file disinfection framework so that's a open- source uh Library which you can use uh",
    "start": "989880",
    "end": "997480"
  },
  {
    "text": "so for now uh it's version 3.1 is for Windows x86 and x64 uh builds are",
    "start": "997480",
    "end": "1004160"
  },
  {
    "text": "available uh we will be porting this to Linux really really soon so next month month we will have a Linux build as well",
    "start": "1004160",
    "end": "1010360"
  },
  {
    "text": "so you can run that on your favorite distribution uh it enables you to do static file",
    "start": "1010360",
    "end": "1016079"
  },
  {
    "text": "manipulations uh Integrity checks and recovery uh you can do uh you can build",
    "start": "1016079",
    "end": "1022319"
  },
  {
    "text": "Dynamic F files portable executable files on the Fly you can recover Imports with hash databases uh you can create uh",
    "start": "1022319",
    "end": "1029798"
  },
  {
    "text": "the cryptors dynamically and you have the advanced x86 emulator which is really unique and we really proud uh to",
    "start": "1029799",
    "end": "1036319"
  },
  {
    "text": "show it today so here are some statistics about the hold so you get the idea of how much work went into this so",
    "start": "1036319",
    "end": "1044438"
  },
  {
    "text": "uh this we started this project about a year ago right now we have over 100 user exposed apis which you can use to do all",
    "start": "1044439",
    "end": "1050960"
  },
  {
    "text": "sorts of manipulations and we have about 40,000 lines of C++ code so it's it's a really huge project and we have a bunch",
    "start": "1050960",
    "end": "1058640"
  },
  {
    "text": "of features lighted up uh for the rest of the year so uh the engine itself",
    "start": "1058640",
    "end": "1064520"
  },
  {
    "text": "consists of two parts one is the static file disinfection part and the other one is the emulator so for the static file",
    "start": "1064520",
    "end": "1070400"
  },
  {
    "text": "disinfection you have an ability to actually read portable executable files to modify their content uh to read",
    "start": "1070400",
    "end": "1077080"
  },
  {
    "text": "individual sections merge split them uh create new ones uh the same story goes",
    "start": "1077080",
    "end": "1082799"
  },
  {
    "text": "for portable executable tables uh embedded inside it is also a support for a large number of uh decompression",
    "start": "1082799",
    "end": "1090360"
  },
  {
    "text": "algorithms so if you come into a problem where you can you have to actually decompress data you have that available",
    "start": "1090360",
    "end": "1096200"
  },
  {
    "text": "as well uh you can uh build custom Dynamic decryptors we're going to talk about that a bit later as well as how do",
    "start": "1096200",
    "end": "1103240"
  },
  {
    "text": "you use hash databases and why but what's really important is how do we",
    "start": "1103240",
    "end": "1109080"
  },
  {
    "text": "approach file format validation especially because viruses have a tendency of damaging files during the",
    "start": "1109080",
    "end": "1115679"
  },
  {
    "text": "infection process so we want to be sure that not only the file is valid before we start the disinfection process that",
    "start": "1115679",
    "end": "1122480"
  },
  {
    "text": "we actually end up with a file which is always valid because the idea is stripping out the virus directly from",
    "start": "1122480",
    "end": "1128520"
  },
  {
    "text": "the file and not only that having it in a runnable state so how do you work with files with",
    "start": "1128520",
    "end": "1134280"
  },
  {
    "text": "the with the Titan engine or more specifically with the file disinfection framework uh so you have an option of",
    "start": "1134280",
    "end": "1141159"
  },
  {
    "text": "doing all sorts of manipulation like uh when you open the file uh the file is read directly from thisk and the",
    "start": "1141159",
    "end": "1147400"
  },
  {
    "text": "sections are mapped in memory only when needed so only when you're changing the content the content is changed directly",
    "start": "1147400",
    "end": "1153200"
  },
  {
    "text": "in memory this is to ensure that no specific part of the virus can actually escape the environment in which you're",
    "start": "1153200",
    "end": "1160240"
  },
  {
    "text": "working on until you have cleaned the entire virus from the file so all the",
    "start": "1160240",
    "end": "1165559"
  },
  {
    "text": "modifications you do are done in memory up until the point that you decided that virus is now eliminated from the file",
    "start": "1165559",
    "end": "1171640"
  },
  {
    "text": "and you want to save these changes to desk and as soon as you start saving these changes to desk the file is",
    "start": "1171640",
    "end": "1177200"
  },
  {
    "text": "rebuilt entirely this is to make sure that the file is valid that all of the Imports exports and other features of",
    "start": "1177200",
    "end": "1183320"
  },
  {
    "text": "the portable executable file format are intact so what can you do with the",
    "start": "1183320",
    "end": "1189320"
  },
  {
    "text": "portable executable file so speaking about the portable executable tables you can create a view and edit the existing",
    "start": "1189320",
    "end": "1196720"
  },
  {
    "text": "import export relocation resource PLS tables and the overlay so you can create new ones as you see fit and for the",
    "start": "1196720",
    "end": "1203760"
  },
  {
    "text": "other tables like bound uh import table lay or table exception in debug you can",
    "start": "1203760",
    "end": "1208880"
  },
  {
    "text": "just view uh or enumerate them uh we didn't feel that those tables were uh",
    "start": "1208880",
    "end": "1214480"
  },
  {
    "text": "necessary to be included in the rebuilding process because they cannot hold the data which uh viruses usually",
    "start": "1214480",
    "end": "1222320"
  },
  {
    "text": "use so how do you enumerate data and this is really important enumerating data can happen uh with user callbacks",
    "start": "1222320",
    "end": "1229960"
  },
  {
    "text": "or with serialization so you can use one of the other uh approach uh the",
    "start": "1229960",
    "end": "1235360"
  },
  {
    "text": "callbacks are used because there can be a lot of data in the P files those strings can be basically indefinitely",
    "start": "1235360",
    "end": "1242960"
  },
  {
    "text": "long and to avoid the issue of using too much memory then you can use callbacks",
    "start": "1242960",
    "end": "1248280"
  },
  {
    "text": "to enumerate one entry at a time if you prefer to have all that data available to you right away then you can use the",
    "start": "1248280",
    "end": "1253960"
  },
  {
    "text": "message pack serialization which is included in the package so how do you create a new P",
    "start": "1253960",
    "end": "1260000"
  },
  {
    "text": "file and why would you want to do that in the first place so creating P files is really important because it comes",
    "start": "1260000",
    "end": "1265760"
  },
  {
    "text": "into play when you are uh disinfecting files uh you have an option of building a new disinfector uh building a new",
    "start": "1265760",
    "end": "1272159"
  },
  {
    "text": "disinfected file from scratch or you can use use the features which are present in the file itself to recreate the file",
    "start": "1272159",
    "end": "1278559"
  },
  {
    "text": "itself uh this also comes into play later on when we talk about the emulator but we'll get to that in a bit so how do",
    "start": "1278559",
    "end": "1284840"
  },
  {
    "text": "you create files basically this is a list of apis you have here on the slide and there's no need to actually read",
    "start": "1284840",
    "end": "1290520"
  },
  {
    "text": "this right now just uh focus on the concepts uh which is which are really important so uh the slides are there to",
    "start": "1290520",
    "end": "1298320"
  },
  {
    "text": "help you out when you actually start working and then you have everything in in one place uh so create file actually",
    "start": "1298320",
    "end": "1303919"
  },
  {
    "text": "creates a new portal executable 32 or 64-bit file in memory no sections exist at this point but if you want to uh you",
    "start": "1303919",
    "end": "1311600"
  },
  {
    "text": "can add certain features to it you can uh edit the portable header which is already present as soon as you create",
    "start": "1311600",
    "end": "1318039"
  },
  {
    "text": "the file so you can set the image base original entry point address whatever you need at that particular time however",
    "start": "1318039",
    "end": "1324039"
  },
  {
    "text": "there there are really no sections you have to add them so uh right here in the",
    "start": "1324039",
    "end": "1329640"
  },
  {
    "text": "example you have a specific section for a specific part of the portable executable so uh there's a bunch of",
    "start": "1329640",
    "end": "1335320"
  },
  {
    "text": "these and uh it's the same process adding a new section is just calling add new section which creates a new section",
    "start": "1335320",
    "end": "1341400"
  },
  {
    "text": "of your desired size uh getting content is reading data from that section and setting content is really writing data",
    "start": "1341400",
    "end": "1348279"
  },
  {
    "text": "to that section now the important part of this is that all of the changes you do are done in memory and this enables",
    "start": "1348279",
    "end": "1355640"
  },
  {
    "text": "us to do the following thing if your section is the last section of the file then writing past its end will actually",
    "start": "1355640",
    "end": "1361720"
  },
  {
    "text": "increase it automatically uh so you have that neat option of working it sections as they are shown on the slide as they",
    "start": "1361720",
    "end": "1368799"
  },
  {
    "text": "are U linearly uh linked so if you uh",
    "start": "1368799",
    "end": "1373960"
  },
  {
    "text": "imagine that you want to read data directly from code and import section at the same time you can just do that if",
    "start": "1373960",
    "end": "1379640"
  },
  {
    "text": "you point back to the uh code section so they they're really uh working uh together as they are when files actually",
    "start": "1379640",
    "end": "1386760"
  },
  {
    "text": "uh execute so uh this comes as a limit uh",
    "start": "1386760",
    "end": "1392080"
  },
  {
    "text": "and the limit is as soon as you modify something in the section uh then the data is read from this committed in",
    "start": "1392080",
    "end": "1398080"
  },
  {
    "text": "memory but those changes you did are lost uh to work around this because you",
    "start": "1398080",
    "end": "1403400"
  },
  {
    "text": "might want to go back and read some some data which uh you didn't think that you needed that particular particular time",
    "start": "1403400",
    "end": "1409520"
  },
  {
    "text": "then you can access this data as well so if you read physically from the file so from physical offsets then you will be",
    "start": "1409520",
    "end": "1416080"
  },
  {
    "text": "actually reading from the file on disk if you're reading from the relative virtual offsets you're reading from the current changes in memory and that's",
    "start": "1416080",
    "end": "1423120"
  },
  {
    "text": "really important concept to to grasp because you want to be working uh with memory uh all the time because memory is",
    "start": "1423120",
    "end": "1429760"
  },
  {
    "text": "fast and you don't need a lot of it to accomplish your task so uh additional features that",
    "start": "1429760",
    "end": "1436600"
  },
  {
    "text": "portable executive files can have are import tables now to build a new import table with this specific uh import",
    "start": "1436600",
    "end": "1442760"
  },
  {
    "text": "address table uh you call few apis one is to add uh library to the uh import",
    "start": "1442760",
    "end": "1449640"
  },
  {
    "text": "table tree that's add import Library you want to add more functions to it that's add import functions and then when",
    "start": "1449640",
    "end": "1456039"
  },
  {
    "text": "you're done building the entire import table tree you just write that to wherever you want here we created a new",
    "start": "1456039",
    "end": "1461880"
  },
  {
    "text": "section and we just host the import table there same story goes for uh",
    "start": "1461880",
    "end": "1467240"
  },
  {
    "text": "relocations uh and resources later on so you basically just add base relocations",
    "start": "1467240",
    "end": "1472679"
  },
  {
    "text": "for every address you want to relocate and when you're done with adding all the addresses which need to be relocated you",
    "start": "1472679",
    "end": "1478640"
  },
  {
    "text": "just write that table same go Solly goes for the resources you add resources and",
    "start": "1478640",
    "end": "1484039"
  },
  {
    "text": "resources can be added by name type language code page and so on that's all",
    "start": "1484039",
    "end": "1489360"
  },
  {
    "text": "the data you can customize uh including what the actual resources so as soon as you add that data to the resource",
    "start": "1489360",
    "end": "1496039"
  },
  {
    "text": "section you can just write it and you have the valid resource table and then at the end overlay is just appended data",
    "start": "1496039",
    "end": "1503320"
  },
  {
    "text": "to the end of the file uh you can use the function called find overlay to check if the file actually has overlay",
    "start": "1503320",
    "end": "1509840"
  },
  {
    "text": "uh and uh if you want to add more data you can just add overlay and as soon as you start adding data it is um added one",
    "start": "1509840",
    "end": "1517960"
  },
  {
    "text": "after another inside the overlay once you actually start saving the file you have an option of uh stripping the",
    "start": "1517960",
    "end": "1523880"
  },
  {
    "text": "overlay or specific overlay Parts such as the debug table or certificates because because when you create a new",
    "start": "1523880",
    "end": "1529360"
  },
  {
    "text": "file that digital certificate is no longer valid because the file has changed so you might as well strip",
    "start": "1529360",
    "end": "1535200"
  },
  {
    "text": "it so uh let's say you built this file and the file is now complete uh as it is",
    "start": "1535200",
    "end": "1540679"
  },
  {
    "text": "on the slide uh the only thing left to do is save it to disk and you call Export file to save everything you",
    "start": "1540679",
    "end": "1546640"
  },
  {
    "text": "you've done with your file directly on disk uh file is uh reconstructed uh so",
    "start": "1546640",
    "end": "1553520"
  },
  {
    "text": "all the section content has been committed from memory to disk and and it",
    "start": "1553520",
    "end": "1558799"
  },
  {
    "text": "we make sure that it's valid so you make no mistakes of actually reconstructing the file so that brings us to our first",
    "start": "1558799",
    "end": "1565880"
  },
  {
    "text": "virus we're going to talk about two specific viruses one this one is called",
    "start": "1565880",
    "end": "1571039"
  },
  {
    "text": "win 2 awful and it really is awful uh it's a play on words but uh a guys back",
    "start": "1571039",
    "end": "1578600"
  },
  {
    "text": "in the day made these kinds of names for a reason you're going to see why so this",
    "start": "1578600",
    "end": "1584039"
  },
  {
    "text": "specific virus has a couple of names and it has a couple of versions it only infects port executable files more",
    "start": "1584039",
    "end": "1589640"
  },
  {
    "text": "specifically executables and uh the uh screen savers uh so it doesn't work on",
    "start": "1589640",
    "end": "1595520"
  },
  {
    "text": "Dynamic link libraries has a couple of versions and back in the day the versions were",
    "start": "1595520",
    "end": "1601840"
  },
  {
    "text": "uh were the files were versioned by the size of the virus code itself so as you",
    "start": "1601840",
    "end": "1607640"
  },
  {
    "text": "can see the file uh size grw grows and so the virus is improved and comment is",
    "start": "1607640",
    "end": "1614480"
  },
  {
    "text": "that it actually is awful and you will see why uh the entire virus is just appended to",
    "start": "1614480",
    "end": "1621559"
  },
  {
    "text": "the end of the file and the original entry point from the original file is encrypted so that's the data we need we",
    "start": "1621559",
    "end": "1627640"
  },
  {
    "text": "need that original entry point so we can remove the virus and uh restore the file",
    "start": "1627640",
    "end": "1632840"
  },
  {
    "text": "uh there are some anti- reversing protections like is the buger present and create file a for uh soft T checks",
    "start": "1632840",
    "end": "1639880"
  },
  {
    "text": "uh it uses a Visual Basic scripts to infect other Visual Basic script files but we're not focusing on that why is it",
    "start": "1639880",
    "end": "1645880"
  },
  {
    "text": "awful well it has a couple of bugs which are really bad uh at the beginning of the virus it use",
    "start": "1645880",
    "end": "1651240"
  },
  {
    "text": "it uses the mov SII instruction to locate what's the part of the file which it needs to decrypt however the author",
    "start": "1651240",
    "end": "1658679"
  },
  {
    "text": "of the virus made a mistake and it's not pointing to the offset where you have to start the decryption it's actually",
    "start": "1658679",
    "end": "1664840"
  },
  {
    "text": "reading data from that offset so that's why that virus wouldn't work and that's one of the first versions in the later",
    "start": "1664840",
    "end": "1670960"
  },
  {
    "text": "versions debugger checks don't really work because it doesn't check the API return it just checks the zero flag for",
    "start": "1670960",
    "end": "1677080"
  },
  {
    "text": "the is the buger present that clearly doesn't work it really can't find other files to infect because of the wrong",
    "start": "1677080",
    "end": "1683159"
  },
  {
    "text": "parameters set for searching the files and it doesn't close handles properly",
    "start": "1683159",
    "end": "1688240"
  },
  {
    "text": "and it destroys the original overlay of the file so why are we talking about this so we're talking about this because",
    "start": "1688240",
    "end": "1694600"
  },
  {
    "text": "this isn't a lone exception there are a lot of viruses which really damage files that are not written uh in a good manner",
    "start": "1694600",
    "end": "1703039"
  },
  {
    "text": "and that's why we need to support them as well because you have to be able to recover from any kind of infection for a",
    "start": "1703039",
    "end": "1708840"
  },
  {
    "text": "system and this is one of those Representatives where it can get really hard because the author of the virus",
    "start": "1708840",
    "end": "1715600"
  },
  {
    "text": "basically didn't know what they're doing at the point at that time so how do we do this how do we create a disinfection",
    "start": "1715600",
    "end": "1722159"
  },
  {
    "text": "routine with our file disinfection framework so first and foremost we check if the file has been infected and that",
    "start": "1722159",
    "end": "1727799"
  },
  {
    "text": "means two things either the file has been infected and you know the exact",
    "start": "1727799",
    "end": "1732840"
  },
  {
    "text": "version of the file of the of the virus and or it's a virus body now V virus",
    "start": "1732840",
    "end": "1739440"
  },
  {
    "text": "body is just a carrier it's not an infected file it's the virus itself once you run that virus it starts infecting",
    "start": "1739440",
    "end": "1745640"
  },
  {
    "text": "other files and once those files are infected they start infecting other files as well uh so we have to",
    "start": "1745640",
    "end": "1751240"
  },
  {
    "text": "differentiate between the virus body and the infected file so once we do that we",
    "start": "1751240",
    "end": "1756840"
  },
  {
    "text": "get the virus called Delta because all viruses have been created to be offset independent and that is quite logical",
    "start": "1756840",
    "end": "1763279"
  },
  {
    "text": "because they can be anywhere in the file you have to get that starting point somehow and that's called the virus code",
    "start": "1763279",
    "end": "1768880"
  },
  {
    "text": "Delta uh it's usually stored in the EBP register for these old viruses but new ones I use other registers as well so",
    "start": "1768880",
    "end": "1776880"
  },
  {
    "text": "then we have the cryp the virus body read the original entry point address resize the last section effectively",
    "start": "1776880",
    "end": "1783080"
  },
  {
    "text": "eliminating the virus updating the P header with the original entry point address and saving the disinfected file",
    "start": "1783080",
    "end": "1788919"
  },
  {
    "text": "and that's it those are all the steps we need to do for this wirus so how do we uh decrypt that data",
    "start": "1788919",
    "end": "1796080"
  },
  {
    "text": "uh if you look at the slide it says virus entry point and virus entry point is not actually encrypted there's a bit",
    "start": "1796080",
    "end": "1802480"
  },
  {
    "text": "of the code which is not yet encrypted so I'm going to switch back to my VM just to show you how this looks",
    "start": "1802480",
    "end": "1809960"
  },
  {
    "text": "like so here is one of those awful viruses and this is actually a virus",
    "start": "1809960",
    "end": "1815960"
  },
  {
    "text": "body so here you're going to see the entire code uh without actually uh the encrypted part so here is how the virus",
    "start": "1815960",
    "end": "1823360"
  },
  {
    "text": "body starts and if you look at this part right here this is a little Loop which the crypts data everything be uh behind",
    "start": "1823360",
    "end": "1831039"
  },
  {
    "text": "that point is actually encrypted if the file is infected now this is a virus body and this this is how we can easily",
    "start": "1831039",
    "end": "1837200"
  },
  {
    "text": "differentiate between the virus body and the infected file now if I scroll down through this file you're going to see",
    "start": "1837200",
    "end": "1843200"
  },
  {
    "text": "that it's not a lot of code uh but it is uh it is infecting other files this is",
    "start": "1843200",
    "end": "1850080"
  },
  {
    "text": "the place inside the virus body and the infected file where you store the",
    "start": "1850080",
    "end": "1855760"
  },
  {
    "text": "original entry point of uh the ined file or the virus itself so here uh is the",
    "start": "1855760",
    "end": "1862360"
  },
  {
    "text": "code which we need to read to actually disinfect the file so that's the original engo address so moving back to the",
    "start": "1862360",
    "end": "1870120"
  },
  {
    "text": "slides we know that the code can be encrypted so how do we actually decrypted for this particular virus the",
    "start": "1870120",
    "end": "1876480"
  },
  {
    "text": "code is not polymorphic however uh all the techniques I'm going to show apply to both polymorphic and uh these normal",
    "start": "1876480",
    "end": "1884000"
  },
  {
    "text": "viruses as well uh so once we decrypt the data we have to verify if decryption has succeeded and the decryption always",
    "start": "1884000",
    "end": "1891159"
  },
  {
    "text": "succeeds if we can find other data which we need to read and that's the original entry point",
    "start": "1891159",
    "end": "1897000"
  },
  {
    "text": "address so uh here is how that actually works uh I'm going to show you how The disinfector Works before we go into how",
    "start": "1897000",
    "end": "1904159"
  },
  {
    "text": "do we create uh the specific uh disinfector for",
    "start": "1904159",
    "end": "1909480"
  },
  {
    "text": "this so here I have a command line and it shows the following thing I'm just running my application which is running",
    "start": "1909600",
    "end": "1916360"
  },
  {
    "text": "the FDF framework uh which tries to disinfect the file so when I run it on the file it says the file is a virus",
    "start": "1916360",
    "end": "1922519"
  },
  {
    "text": "body so the identification part has been embedded so we check if the file is a virus body if the file is a virus body",
    "start": "1922519",
    "end": "1928919"
  },
  {
    "text": "there you don't have to do this infection you can just delete the file because that's the virus itself however",
    "start": "1928919",
    "end": "1934399"
  },
  {
    "text": "the files can be also infected and I have the file right here which is infected so this is a normal application",
    "start": "1934399",
    "end": "1941000"
  },
  {
    "text": "it has been infected uh with this particular virus",
    "start": "1941000",
    "end": "1946399"
  },
  {
    "text": "and once we disinfected uh it says we successfully disinfected it which means we completely removed the",
    "start": "1946399",
    "end": "1951919"
  },
  {
    "text": "virus so once we actually take a look at the file right here so this is the disinfected one I can just actually run",
    "start": "1951919",
    "end": "1958399"
  },
  {
    "text": "it because we removed all the traces from the of the virus itself uh there is",
    "start": "1958399",
    "end": "1963559"
  },
  {
    "text": "no traces of the virus and the file is exactly as it was before infection some",
    "start": "1963559",
    "end": "1969200"
  },
  {
    "text": "things have been changed during the rebuilding process but the file is actually correct you can see all the",
    "start": "1969200",
    "end": "1975080"
  },
  {
    "text": "code you can see all the inputs right there so that's the goal of the file",
    "start": "1975080",
    "end": "1980480"
  },
  {
    "text": "disinfection framework is to actually remove all traces of the virus",
    "start": "1980480",
    "end": "1985919"
  },
  {
    "text": "so we are able to recover those files from being infected so the cryptors help us with that because most viruses have",
    "start": "1985919",
    "end": "1992240"
  },
  {
    "text": "encrypted bodies and that code can be either normal so it's a pre-built routine which does the encryption or",
    "start": "1992240",
    "end": "1999159"
  },
  {
    "text": "it's polymorphic but the same story goes you can create you can dynamically create these decryptors which actually",
    "start": "1999159",
    "end": "2005519"
  },
  {
    "text": "enable you to uh decrypt data and uh decryption is performed both",
    "start": "2005519",
    "end": "2011120"
  },
  {
    "text": "forward and backward as any way you actually need it and it's performed in steps of one to four or eight bytes so",
    "start": "2011120",
    "end": "2018000"
  },
  {
    "text": "the decrypting uh virtual machine is a virtual machine you program with structures and it can consist of both",
    "start": "2018000",
    "end": "2024960"
  },
  {
    "text": "x86 and x64bit code so how does this code look like we have one element right",
    "start": "2024960",
    "end": "2031320"
  },
  {
    "text": "there so let's say I want to uh emulate the instruction move Al bite pointer whatever is the current encrypt bite I'm",
    "start": "2031320",
    "end": "2038440"
  },
  {
    "text": "decrypting so that's the instruction I want to create so that's the structure you have to fill in so the up code is",
    "start": "2038440",
    "end": "2044080"
  },
  {
    "text": "move uh the up code type is Target is register because we are moving to Al and",
    "start": "2044080",
    "end": "2050000"
  },
  {
    "text": "we're moving from the encrypted B so source is memory and it's one byte insides so uh that is the up code Type",
    "start": "2050000",
    "end": "2056919"
  },
  {
    "text": "the up code Target is the AL register uh source is none because uh we're reading",
    "start": "2056919",
    "end": "2062280"
  },
  {
    "text": "from memory and we don't have any immediate values so for this specific virus so for",
    "start": "2062280",
    "end": "2068720"
  },
  {
    "text": "uh aul we have to create a specific decryptor now this can be created both",
    "start": "2068720",
    "end": "2076000"
  },
  {
    "text": "dynamically or you can create it statically because this virus doesn't change this decryption routine we don't",
    "start": "2076000",
    "end": "2081919"
  },
  {
    "text": "need to build it dynamically if we were decrypting any polymorphic virus then we have a disassembler embedded inside the",
    "start": "2081919",
    "end": "2087760"
  },
  {
    "text": "Titan engine uh or the file disinfection framework and you can dynamically build these by disassembling up codes and",
    "start": "2087760",
    "end": "2094599"
  },
  {
    "text": "translating that to our virtual machine code so once you do that you actually",
    "start": "2094599",
    "end": "2099680"
  },
  {
    "text": "run this inside our virtual machine uh for a number of times the number of times is specified in the virus code so",
    "start": "2099680",
    "end": "2106599"
  },
  {
    "text": "that's ECX register's value so to create a dynamic decryptor you just call create",
    "start": "2106599",
    "end": "2112960"
  },
  {
    "text": "decryptor which creates a new handle for you uh to which you add code uh the code you add can be stored in two streams one",
    "start": "2112960",
    "end": "2119720"
  },
  {
    "text": "is the initialization stream which is executed only once and the other one is the actual code stream which is executed",
    "start": "2119720",
    "end": "2125599"
  },
  {
    "text": "for every pass of the decryption Loop and the decryption Loop decryption Loop uh occurs uh ECX times so once you",
    "start": "2125599",
    "end": "2133280"
  },
  {
    "text": "actually decrypt data with call to decrypt data API all the code has been",
    "start": "2133280",
    "end": "2139119"
  },
  {
    "text": "decrypted so here are more complex examples of what you can actually do uh with this specific part of the virtual",
    "start": "2139119",
    "end": "2145280"
  },
  {
    "text": "machine so you can create jumps as well so as you can see the line uh number three uh actually jumps to uh label uh",
    "start": "2145280",
    "end": "2153880"
  },
  {
    "text": "so uh you can jump to that label just by creating an instruction that way uh",
    "start": "2153880",
    "end": "2159200"
  },
  {
    "text": "similar story goes for the stack the stack is also available and the ESP",
    "start": "2159200",
    "end": "2164280"
  },
  {
    "text": "register is modified and if you want to communicate with the decryptor as decryption is",
    "start": "2164280",
    "end": "2170640"
  },
  {
    "text": "going on you can just use the call uh instruction to uh call your predefined",
    "start": "2170640",
    "end": "2176880"
  },
  {
    "text": "call back and from which you can change the register state or you can uh manipulate the encrypted data itself so",
    "start": "2176880",
    "end": "2184400"
  },
  {
    "text": "you can communicate with this in multiple forms you can also set that trap flag which does what trap flags do",
    "start": "2184400",
    "end": "2190520"
  },
  {
    "text": "uh it executes uh it calls your call back for every instruction which gets executed so that brings us to the",
    "start": "2190520",
    "end": "2197440"
  },
  {
    "text": "emulator the virtual machine I spoke about right now is the part which you can use for static disinfections however",
    "start": "2197440",
    "end": "2204400"
  },
  {
    "text": "if you want to run uh the application inside the safe environment and run its entire thing until it uh basically",
    "start": "2204400",
    "end": "2211920"
  },
  {
    "text": "decrypts itself in memory so you can dump it and fix it uh then you have to use the emulator because the emulator",
    "start": "2211920",
    "end": "2217200"
  },
  {
    "text": "gives you option of actually running this code in a safe environment so what do we emulate we emulate the basic x64",
    "start": "2217200",
    "end": "2224480"
  },
  {
    "text": "uh Windows environment that means uh process environment block dread environment block sex structures we also",
    "start": "2224480",
    "end": "2230960"
  },
  {
    "text": "emulate user mode libraries uh for now we support over 100 functions which are most commonly used in viruses uh for",
    "start": "2230960",
    "end": "2237640"
  },
  {
    "text": "kernel 32 and user 32 dll libraries uh if the virus needs something that we do",
    "start": "2237640",
    "end": "2243760"
  },
  {
    "text": "not support yet you can easily add that you have an option of dynamic building P files which we spoke about at the",
    "start": "2243760",
    "end": "2249640"
  },
  {
    "text": "beginning of the talk and you can just inject those directly inside the emulated environment letting uh the",
    "start": "2249640",
    "end": "2255560"
  },
  {
    "text": "emulator load that as necessary or you can uh uh create uh dynamically build",
    "start": "2255560",
    "end": "2262040"
  },
  {
    "text": "those uh Dynamic link libraries from hash databases we'll get into that in in",
    "start": "2262040",
    "end": "2267760"
  },
  {
    "text": "a minute uh so we emulate that we also emulate the file system because we have to let those viruses actually infect",
    "start": "2267760",
    "end": "2274599"
  },
  {
    "text": "other files and run themselves uh uh so we emulate that uh you have an option of",
    "start": "2274599",
    "end": "2280680"
  },
  {
    "text": "customizing the environment by adding new drives setting the uh size of that drive such as the type size name label",
    "start": "2280680",
    "end": "2287839"
  },
  {
    "text": "and so on we support file mapping attributes time stamps and file shares uh because those are the things which",
    "start": "2287839",
    "end": "2294240"
  },
  {
    "text": "viruses actually use we support multiple break points so you can track this code",
    "start": "2294240",
    "end": "2299960"
  },
  {
    "text": "as it executes uh and it works as uh as you would expect from uh Windows debug",
    "start": "2299960",
    "end": "2306760"
  },
  {
    "text": "API so what we try to do is mimic how Windows debug API works so you are more comfortable with the actual API",
    "start": "2306760",
    "end": "2314119"
  },
  {
    "text": "itself and uh this is what separates this uh framework for everything else because you can actually run high level",
    "start": "2314119",
    "end": "2320680"
  },
  {
    "text": "code inside the emulated environment and I'm going to show you how that looks like in a bit so before we actually",
    "start": "2320680",
    "end": "2328319"
  },
  {
    "text": "start the emulator we have to load the file so opening the file does what we said before it just Maps the file in",
    "start": "2328319",
    "end": "2334000"
  },
  {
    "text": "memory and all the sections are committed in memory so once the actual process is created uh before we actually",
    "start": "2334000",
    "end": "2340560"
  },
  {
    "text": "get to that we have to figure out if the file is valid or not so if the file uh",
    "start": "2340560",
    "end": "2346839"
  },
  {
    "text": "goes through the validation process and it has been deemed as uh damaged but we",
    "start": "2346839",
    "end": "2352240"
  },
  {
    "text": "can repair it then you can use the repair file API to recover these damages all these damages have been recovered in",
    "start": "2352240",
    "end": "2358440"
  },
  {
    "text": "memory uh so when your emulator starts you can actually work on the file because uh the file is now valid and you",
    "start": "2358440",
    "end": "2364880"
  },
  {
    "text": "can load uh other files and do whatever it needs do so once the file is okay and the",
    "start": "2364880",
    "end": "2371079"
  },
  {
    "text": "emulator can actually load it then you can create a process uh we can create that process and that works like on",
    "start": "2371079",
    "end": "2378000"
  },
  {
    "text": "Windows everything is basically mirroring the functionality of windows so the newly created process loads other",
    "start": "2378000",
    "end": "2385440"
  },
  {
    "text": "dependencies it relocates itself if necessary Maps itself in memory uh and",
    "start": "2385440",
    "end": "2392280"
  },
  {
    "text": "so on it does all the things that you expect the process to do so that's why uh this is an emulator it we're",
    "start": "2392280",
    "end": "2398760"
  },
  {
    "text": "emulating the windows environment uh for the viruses to actually run inside them",
    "start": "2398760",
    "end": "2403800"
  },
  {
    "text": "so how do you run the emulator just call run process and run process actually starts uh executing those up codes and",
    "start": "2403800",
    "end": "2410760"
  },
  {
    "text": "once you are while you're executing up codes there's a list of events that can happen inside a virtual machine which",
    "start": "2410760",
    "end": "2418280"
  },
  {
    "text": "actually uh connect back to your callbacks so these debug event code uh",
    "start": "2418280",
    "end": "2424319"
  },
  {
    "text": "callbacks are types are the same one ones uh that you would find in Windows",
    "start": "2424319",
    "end": "2429880"
  },
  {
    "text": "so uh you can have a notification when a new tread has been created but a new",
    "start": "2429880",
    "end": "2435119"
  },
  {
    "text": "process has been created dependency is loaded or unloaded and so on WE one additional event which is the",
    "start": "2435119",
    "end": "2441280"
  },
  {
    "text": "initialized debug event this is before the actual process has started inside the emulator and that is to allow you to",
    "start": "2441280",
    "end": "2447960"
  },
  {
    "text": "copy all the files to the virtual environment and do all the initialization processes that you would need for the actual virus to",
    "start": "2447960",
    "end": "2455000"
  },
  {
    "text": "run so one of those things which are required are actually dependencies and dependencies are Dynamic link libraries",
    "start": "2455000",
    "end": "2461040"
  },
  {
    "text": "which are statically imported by the uh application itself uh they can be statically loaded and they can be also",
    "start": "2461040",
    "end": "2467119"
  },
  {
    "text": "dynamically loaded uh so uh there's a pretty fine list of the things we",
    "start": "2467119",
    "end": "2472359"
  },
  {
    "text": "support but you can extend this easily with hash databases or you can dynamically build new portable",
    "start": "2472359",
    "end": "2477640"
  },
  {
    "text": "executable files that really depends on the use case scenario so what are these hash databases they are user created",
    "start": "2477640",
    "end": "2484880"
  },
  {
    "text": "files that basically have a list of model exporters functions so if you need to emulate an API let's say from uh",
    "start": "2484880",
    "end": "2491359"
  },
  {
    "text": "kernel 32 dll then you can run our tool on kernel 32 DL which creates a database",
    "start": "2491359",
    "end": "2497440"
  },
  {
    "text": "for that uh file and that database has all of the exports of Kernel 32 DL so",
    "start": "2497440",
    "end": "2503280"
  },
  {
    "text": "once the emulator starts loading the process and it needs a a kernel 32 DL",
    "start": "2503280",
    "end": "2509359"
  },
  {
    "text": "module loaded it just checks all the databases it has available and you can push as many as you like and uh once it",
    "start": "2509359",
    "end": "2516359"
  },
  {
    "text": "finds the module it it's required then it dynamically creates this portable executable for you in memory so if the",
    "start": "2516359",
    "end": "2522800"
  },
  {
    "text": "application actually calls uh these exports from uh kernel 32 DL they're actually there so that's the",
    "start": "2522800",
    "end": "2529839"
  },
  {
    "text": "idea uh it's called a hash database because all the entries are uh by function stored by function name in",
    "start": "2529839",
    "end": "2536640"
  },
  {
    "text": "inside it but there's also list of hashes now this list of hashes is really important because it enables us to",
    "start": "2536640",
    "end": "2542800"
  },
  {
    "text": "recover uh those hashes from the hash itself back to the strength and that's",
    "start": "2542800",
    "end": "2548480"
  },
  {
    "text": "very important for viruses because viruses usually do uh or do function lookups by hash itself so once you see a",
    "start": "2548480",
    "end": "2555839"
  },
  {
    "text": "hash you can just revert that back to the original function name now there's a",
    "start": "2555839",
    "end": "2561000"
  },
  {
    "text": "problem with this the problem with this is there's a preset number of hashes and the algorithms used by viruses are",
    "start": "2561000",
    "end": "2567160"
  },
  {
    "text": "custom which is why we added the support for you to actually add new hash algorithms through the databases",
    "start": "2567160",
    "end": "2573119"
  },
  {
    "text": "themselves so just like you would create a decryptor you would create a new algorithm which gets stored in the actual database and that actually",
    "start": "2573119",
    "end": "2580440"
  },
  {
    "text": "produces the hash so you have that as well so that is using the hash hash",
    "start": "2580440",
    "end": "2586200"
  },
  {
    "text": "databases and all the use case scenarios so once you actually had that",
    "start": "2586200",
    "end": "2592520"
  },
  {
    "text": "library inside the process you have to work with those functions somehow and as I said we support a lot of functions",
    "start": "2592520",
    "end": "2598359"
  },
  {
    "text": "about 100 which are most commonly used by viruses but let's say we you want to",
    "start": "2598359",
    "end": "2603599"
  },
  {
    "text": "do something when a specific function is called then you can install a hook Hook and the hook Works uh in in a few",
    "start": "2603599",
    "end": "2610599"
  },
  {
    "text": "different ways so once the emulator starts emulating and it get gets to the API we support let's say that's get",
    "start": "2610599",
    "end": "2616640"
  },
  {
    "text": "model handle a API and you installed the hook to that API so as soon as that API",
    "start": "2616640",
    "end": "2622319"
  },
  {
    "text": "is called your call back gets called which means that you can do any kind of code before the actual API is executed",
    "start": "2622319",
    "end": "2629280"
  },
  {
    "text": "then the function is executed inside the emulator so get model handle a really Returns the handle for that dll and then",
    "start": "2629280",
    "end": "2637119"
  },
  {
    "text": "you can additionally have an additional set of post call hooks which take the",
    "start": "2637119",
    "end": "2642280"
  },
  {
    "text": "return from that function and do other manipulations on it so you can hook before the function after the function",
    "start": "2642280",
    "end": "2648359"
  },
  {
    "text": "and you can even replace the functionality itself so let's say we made a bug and our API doesn't work and",
    "start": "2648359",
    "end": "2654359"
  },
  {
    "text": "you just want to replace it or uh you have an API which we don't support yet so we can just Define it by yourselves",
    "start": "2654359",
    "end": "2661680"
  },
  {
    "text": "uh and that is just replacing that API with your code which executes inside the",
    "start": "2661680",
    "end": "2666760"
  },
  {
    "text": "cont text of the virtual machine so as long as process is executing there are some breakpoints",
    "start": "2666760",
    "end": "2672880"
  },
  {
    "text": "being Set uh here and there because you need to monitor that process and the",
    "start": "2672880",
    "end": "2678000"
  },
  {
    "text": "break points we can set in our emulator are really really uh good for file analysis and file dis infections in",
    "start": "2678000",
    "end": "2684359"
  },
  {
    "text": "general so you can set the breakpoint on page access any kind of access uh on",
    "start": "2684359",
    "end": "2689720"
  },
  {
    "text": "address and on instruction itself so the instruction itself you can create basically set a breakpoint on every move",
    "start": "2689720",
    "end": "2696640"
  },
  {
    "text": "command and is one of the examples I'm going to show you so the breakpoint types can be also combined with specific",
    "start": "2696640",
    "end": "2703920"
  },
  {
    "text": "actions like I want to break point when this address is read from or written to",
    "start": "2703920",
    "end": "2709480"
  },
  {
    "text": "or executed you can just combine those conditions uh to create all sorts of scenarios which match your use case",
    "start": "2709480",
    "end": "2716119"
  },
  {
    "text": "scenario and they can execute once or multiple times and uh once the break",
    "start": "2716119",
    "end": "2721160"
  },
  {
    "text": "points are removed they can be uh your call back can also be notified you can",
    "start": "2721160",
    "end": "2726319"
  },
  {
    "text": "have multiple breakpoints uh on the same address uh and they will not overlap with each other uh that the same story",
    "start": "2726319",
    "end": "2733640"
  },
  {
    "text": "goes for any kind of breakpoint type so here is an example of a complex breakpoint you can have so let's say we",
    "start": "2733640",
    "end": "2739920"
  },
  {
    "text": "want to create a breakpoint on an every move instruction that tries to write to a specific range this is how you do it",
    "start": "2739920",
    "end": "2745800"
  },
  {
    "text": "you call this API and you say Okay create this breakpoint I have it execute all ways uh action is right uh address",
    "start": "2745800",
    "end": "2754720"
  },
  {
    "text": "and instruction so as long as you have a move instruction right into the specific range then your call back will be called",
    "start": "2754720",
    "end": "2761760"
  },
  {
    "text": "and this is much better than any kind of debugger because you can set any kind of condition and combine these conditions",
    "start": "2761760",
    "end": "2768839"
  },
  {
    "text": "together to get the desired effect so last but not least are exceptions and exceptions work exactly",
    "start": "2768839",
    "end": "2775359"
  },
  {
    "text": "the same as you would expect them to work uh as soon as the exception is triggered the exception chain is uh went",
    "start": "2775359",
    "end": "2783079"
  },
  {
    "text": "through until you find the appropriate structure exception Handler which which actually deals with the exception uh but",
    "start": "2783079",
    "end": "2789319"
  },
  {
    "text": "the exceptions are first and foremost pushed to the debugger itself or the emulator and then the emulator decides",
    "start": "2789319",
    "end": "2795440"
  },
  {
    "text": "what to do with it so if there's an internal exception uh which is handled",
    "start": "2795440",
    "end": "2800520"
  },
  {
    "text": "by the application itself you can just pass it or you can handle what happens on that exception and here's here's the",
    "start": "2800520",
    "end": "2806119"
  },
  {
    "text": "cool bit uh because our emulator supports so and so many instructions and let's say we don't support an",
    "start": "2806119",
    "end": "2811800"
  },
  {
    "text": "instruction yet uh if we don't support an instruction we're just going to throw you an exception which says we don't",
    "start": "2811800",
    "end": "2817920"
  },
  {
    "text": "support this instruction and then you can Define what happens on that instruction and then you can just pass",
    "start": "2817920",
    "end": "2823920"
  },
  {
    "text": "on that exception and then you can easily extend this framework from the API standpoint you don't have to go to",
    "start": "2823920",
    "end": "2830319"
  },
  {
    "text": "the source code that's that that was our idea when we started designing this so there's the symbiosis between",
    "start": "2830319",
    "end": "2838880"
  },
  {
    "text": "emulator and the uh static environment and we really wanted to create it uh like this because it enables us to do a",
    "start": "2838880",
    "end": "2845119"
  },
  {
    "text": "lot of things so if on the left side you have the file on disk and you loaded that file into a new process and the",
    "start": "2845119",
    "end": "2851559"
  },
  {
    "text": "process is shown on the left side whatever happens with the process while the application is being uh emulated is",
    "start": "2851559",
    "end": "2859079"
  },
  {
    "text": "reflected back to the original file and that's fine because virus is cannot escape from the emulated environment",
    "start": "2859079",
    "end": "2865440"
  },
  {
    "text": "because the files they're infecting are still in memory uh they don't exist for real until you decide to save them and",
    "start": "2865440",
    "end": "2871960"
  },
  {
    "text": "uh you can decide to save them at any given point so everything that happens in the ulator reflects the file you're",
    "start": "2871960",
    "end": "2878400"
  },
  {
    "text": "currently working on and that is something we will be using to this affect the next virus so you can execute high level code",
    "start": "2878400",
    "end": "2885559"
  },
  {
    "text": "inside this and this is really important because uh let's say you don't want to start emulation from the entry point of",
    "start": "2885559",
    "end": "2892079"
  },
  {
    "text": "the file you want to start from a specific function then you can use these apis uh which are basically whatever you",
    "start": "2892079",
    "end": "2899240"
  },
  {
    "text": "uh you expect from Windows like create file write file read file uh that's the file system uh API there's other type",
    "start": "2899240",
    "end": "2907000"
  },
  {
    "text": "which read from process memory allocate memory and do other things as well handle mutexes and so on there's a lot",
    "start": "2907000",
    "end": "2913559"
  },
  {
    "text": "of these apis so you can set the environment any way you want you can create new files on the disk which the",
    "start": "2913559",
    "end": "2920000"
  },
  {
    "text": "virus can infect and here's the example of that you can M mount a new Drive in the system with Mount Drive so let's say",
    "start": "2920000",
    "end": "2926640"
  },
  {
    "text": "I create a floppy drive on my system and on the floppy Drive I just import a file from my host system uh that's like a",
    "start": "2926640",
    "end": "2933920"
  },
  {
    "text": "bait file or anything like that I can even Dynam dynamically created and put that on the floppy then I run the",
    "start": "2933920",
    "end": "2940079"
  },
  {
    "text": "emulated process and wait for the virus to actually infect this uh I can check if the file has been infected by",
    "start": "2940079",
    "end": "2945920"
  },
  {
    "text": "timestamps by file sizes anything you would normally do and you can also check if the files uh file handles have been",
    "start": "2945920",
    "end": "2952440"
  },
  {
    "text": "closed and so you can actually read it so once you do that and you you you have infected the file you can uh do",
    "start": "2952440",
    "end": "2959520"
  },
  {
    "text": "basically a diff uh diff between those two files and see what has changed uh if",
    "start": "2959520",
    "end": "2964599"
  },
  {
    "text": "you're happy with the results you can just copy that file directly from the virtual system directly to the host system as",
    "start": "2964599",
    "end": "2970319"
  },
  {
    "text": "well so vit vit is one of those polymorphic viruses which is really complex uh the sample I'm going to show",
    "start": "2970319",
    "end": "2976599"
  },
  {
    "text": "you today is one of those really complex uh viruses and I'm going to show you how it works and how we created the",
    "start": "2976599",
    "end": "2981960"
  },
  {
    "text": "disinfector for it so what is vit so vit is a portable executable file infector it has a back door it it's memory",
    "start": "2981960",
    "end": "2988680"
  },
  {
    "text": "resident it has a couple of aliases has a few different versions so we selected",
    "start": "2988680",
    "end": "2993799"
  },
  {
    "text": "just one version for the purpose of this talk and uh we created this infector for it that's going to be included with the",
    "start": "2993799",
    "end": "2999720"
  },
  {
    "text": "SDK itself uh so yeah how does the virus actually behaves so the original entry",
    "start": "2999720",
    "end": "3006040"
  },
  {
    "text": "point is moved and it's actually overwritten with the virus code so once the virus code is at the original entry",
    "start": "3006040",
    "end": "3013000"
  },
  {
    "text": "point then you have to revert back that when you actually are disinfecting the file so virus body is yet again at the",
    "start": "3013000",
    "end": "3019720"
  },
  {
    "text": "end of the file so you will be reducing the size of the file as you're disinfecting it and you will be copying",
    "start": "3019720",
    "end": "3025400"
  },
  {
    "text": "back the original entry point back to its original location so that's how that's all the steps we need to do have",
    "start": "3025400",
    "end": "3031680"
  },
  {
    "text": "to determine the virus version uh we specifically made this for specific version uh determine if it's a virus",
    "start": "3031680",
    "end": "3037640"
  },
  {
    "text": "body uh if it's not we have to disinfect the file uh same steps as before get the",
    "start": "3037640",
    "end": "3042920"
  },
  {
    "text": "virus code Delta read the original entry point get the original entry point address uh update the original entry",
    "start": "3042920",
    "end": "3048880"
  },
  {
    "text": "point resize the last section update the P header save the file so that those are all the steps you need to do and here is",
    "start": "3048880",
    "end": "3057040"
  },
  {
    "text": "uh the log of our virtual machine so this is actually running a virtual machine as you can see events happen and",
    "start": "3057040",
    "end": "3062520"
  },
  {
    "text": "events are logged so you have the create process debug event which happens when you start the emulated environment have",
    "start": "3062520",
    "end": "3068240"
  },
  {
    "text": "all these load DL debug events because DLS are being loaded inside this virtual environment and here the last one is the",
    "start": "3068240",
    "end": "3076319"
  },
  {
    "text": "actual breako which happens when you actually disinfect the file so I've placed just one breakpoint and that one",
    "start": "3076319",
    "end": "3082520"
  },
  {
    "text": "breakpoint was enough for me to disinfect the file so I placed a breakpoint on on the return instruction",
    "start": "3082520",
    "end": "3088119"
  },
  {
    "text": "because verit in every version of its code has two returns before the virus",
    "start": "3088119",
    "end": "3094280"
  },
  {
    "text": "code is decrypted so I wanted to be able to uh break on the second return get the",
    "start": "3094280",
    "end": "3100920"
  },
  {
    "text": "data from the decrypted body of the virus update that to the original file and then strip the virus here are some",
    "start": "3100920",
    "end": "3107240"
  },
  {
    "text": "stats about the disinfection so where are all the data inside the file itself",
    "start": "3107240",
    "end": "3112720"
  },
  {
    "text": "now this I ran this before we started uh this presentation it actually took 5 minutes to execute",
    "start": "3112720",
    "end": "3119920"
  },
  {
    "text": "and that's really bad if if you're looking at disinfecting a lot of files however there's a really good reason for",
    "start": "3119920",
    "end": "3126880"
  },
  {
    "text": "this number one this is a debug build so it's slower than usual and other than that other than that uh there's a lot of",
    "start": "3126880",
    "end": "3135000"
  },
  {
    "text": "libraries being loaded but the number of instructions being executed is just huge",
    "start": "3135000",
    "end": "3140040"
  },
  {
    "text": "we have to ex you 245 million different instructions to actually decrypt the virus itself so at this point as we are",
    "start": "3140040",
    "end": "3148720"
  },
  {
    "text": "presenting this our current average ulator speed is about a th000 instructions per millisecond and that's",
    "start": "3148720",
    "end": "3154839"
  },
  {
    "text": "not good enough uh we can actually optimize that and before the release we will actually tenfold this number so",
    "start": "3154839",
    "end": "3160839"
  },
  {
    "text": "you'll have 10,000 instructions per millisecond which will reduce this uh disinfection Time by",
    "start": "3160839",
    "end": "3167480"
  },
  {
    "text": "10-fold and there's a really good point is you should not be running this much code there's other Fe features inside",
    "start": "3167480",
    "end": "3174200"
  },
  {
    "text": "the Library itself which can actually help you deal with with polymorphic code uh it's a bit more uh trickier to use",
    "start": "3174200",
    "end": "3180720"
  },
  {
    "text": "however if you want performance that's the way to go if you want to just run the virus until it decrypts itself then",
    "start": "3180720",
    "end": "3187359"
  },
  {
    "text": "you have to deal with these kind of penalties we will further optimize the speed however there there are",
    "start": "3187359",
    "end": "3192480"
  },
  {
    "text": "limitations that yet remain so once we disinfect the file I'm going to show you",
    "start": "3192480",
    "end": "3197839"
  },
  {
    "text": "first how the infected file Works uh looks like and then uh I'm going to show",
    "start": "3197839",
    "end": "3203240"
  },
  {
    "text": "you how the disinfected file Works looks like so uh I have one sample here which",
    "start": "3203240",
    "end": "3209640"
  },
  {
    "text": "I previously analyzed and this is the this is the one you're going to see why I've chosen that return so when I scroll",
    "start": "3209640",
    "end": "3216799"
  },
  {
    "text": "through the code at the end of this first layer you're going to see return so this return uh and all the code",
    "start": "3216799",
    "end": "3223079"
  },
  {
    "text": "before that is the original entry point it just replaced by the virus code so if I run until this point and just step",
    "start": "3223079",
    "end": "3229680"
  },
  {
    "text": "over that this is the actual virus itself uh that decrypts the virus itself",
    "start": "3229680",
    "end": "3234839"
  },
  {
    "text": "and the virus itself once decrypted is executed after the next return so I'm just scrolling down to find the next",
    "start": "3234839",
    "end": "3241040"
  },
  {
    "text": "return it doesn't matter where the return is as long as the return is executed then the actual code uh will be",
    "start": "3241040",
    "end": "3248079"
  },
  {
    "text": "decrypted so here I'm just scrolling there's a lot of code uh and there's a reason why this executes 245 million",
    "start": "3248079",
    "end": "3255240"
  },
  {
    "text": "instructions because there's a lot of duplication uh the decryption uh happens all over the place so",
    "start": "3255240",
    "end": "3263798"
  },
  {
    "text": "once okay once this return is",
    "start": "3263839",
    "end": "3269280"
  },
  {
    "text": "hit you're going to see the virus body now the the virus stop is actually quite",
    "start": "3269280",
    "end": "3274559"
  },
  {
    "text": "straightforward and it does all the infection parts so here at the end of it you have the original entry point code",
    "start": "3274559",
    "end": "3280280"
  },
  {
    "text": "which has been encrypted uh by the actual virus itself so this is the part right here which you have to copy back",
    "start": "3280280",
    "end": "3286240"
  },
  {
    "text": "to the original entry point so once you actually disinfect the file I'm going to show you how that looks like and the",
    "start": "3286240",
    "end": "3292240"
  },
  {
    "text": "file is yet again stored in a runnable state you can just run it as soon as you uh the Crypt the the",
    "start": "3292240",
    "end": "3299079"
  },
  {
    "text": "virus so disinfected that's the file I I created during the talk and I'm copying",
    "start": "3299079",
    "end": "3305119"
  },
  {
    "text": "back that to the virtual machine and I'm going to show you how that looks like right now so this is would be the",
    "start": "3305119",
    "end": "3311559"
  },
  {
    "text": "disinfected",
    "start": "3311559",
    "end": "3314240"
  },
  {
    "text": "file so there it is that's the original entry point you can just run this file if you",
    "start": "3317920",
    "end": "3324280"
  },
  {
    "text": "like so that would be Titan engine 3.1 uh with",
    "start": "3324520",
    "end": "3329960"
  },
  {
    "text": "the file disinfection framework included you can get it at this address really really soon we hope to get it published",
    "start": "3329960",
    "end": "3335760"
  },
  {
    "text": "uh by the next week uh we have a lot of future plans for this uh 3.2 version which is coming uh by the end of next",
    "start": "3335760",
    "end": "3341720"
  },
  {
    "text": "month as well uh will be ported to Linux you will be able to run this code on Linux both 32 bits and 64 bits as well",
    "start": "3341720",
    "end": "3350079"
  },
  {
    "text": "uh we're actually not happy with the disassembler and assembler uh functions embedded inside it we're using an open",
    "start": "3350079",
    "end": "3356559"
  },
  {
    "text": "source solution which has a few bugs and causes some few issues uh so we will be replacing that with our own code really",
    "start": "3356559",
    "end": "3362960"
  },
  {
    "text": "soon and we implementing title language which actually enables you to write custom signatures to identify files",
    "start": "3362960",
    "end": "3369680"
  },
  {
    "text": "right now you can do that as well there are functions inside the Tian engine which enable you to disassemble up codes",
    "start": "3369680",
    "end": "3375720"
  },
  {
    "text": "match them uh and do any kind of pattern matching you like uh this is just going to be uh much better because you're",
    "start": "3375720",
    "end": "3382480"
  },
  {
    "text": "going to be able to do this in a scriptable manner so that that's that would be the uh file",
    "start": "3382480",
    "end": "3389200"
  },
  {
    "text": "disinfection framework uh we're happy to take your questions right",
    "start": "3389200",
    "end": "3395079"
  },
  {
    "text": "now so y this one's really simple it may be",
    "start": "3395240",
    "end": "3402200"
  },
  {
    "text": "obvious when you've taken a file that's been imp possibly damaged by the virus re your framework you recreate all the",
    "start": "3402200",
    "end": "3407599"
  },
  {
    "text": "parts of the PE file write it out again the results is going to be fully functional but it won't necessarily be",
    "start": "3407599",
    "end": "3412880"
  },
  {
    "text": "identical to the original is that yes that is correct yeah that that actually is my question how far off are you",
    "start": "3412880",
    "end": "3418920"
  },
  {
    "text": "whatever how far off is the reconstructive file from the the original file it's really depends on the",
    "start": "3418920",
    "end": "3425240"
  },
  {
    "text": "virus itself it doesn't matter uh what the offsets are the entire code Imports",
    "start": "3425240",
    "end": "3430640"
  },
  {
    "text": "and everything else is there the file is functional uh it could be in another section or anything like that depending",
    "start": "3430640",
    "end": "3435720"
  },
  {
    "text": "on what you are actually doing however it really depends on the virus it doesn't matter as long as the the file",
    "start": "3435720",
    "end": "3441799"
  },
  {
    "text": "is functioning that that's the goal so it doesn't have to be at the binary d copy that's probably impossible in some",
    "start": "3441799",
    "end": "3449160"
  },
  {
    "text": "cases it's really possible for offel as we saw it before that is actually the binary identical copy uh however the",
    "start": "3449160",
    "end": "3455680"
  },
  {
    "text": "awful is awful and it infected the file and removed the overlay and that's why the file is not binary identical that's",
    "start": "3455680",
    "end": "3462880"
  },
  {
    "text": "the problem you have in how you actually end getting back to your original file",
    "start": "3462880",
    "end": "3468160"
  },
  {
    "text": "uh really really often it really depends on the virus itself for but for the most simple ones where it included uh the",
    "start": "3468160",
    "end": "3475599"
  },
  {
    "text": "reverted state is 99% uh equal to the original but it it can drop down in",
    "start": "3475599",
    "end": "3482760"
  },
  {
    "text": "specific case have you run into any viruses that",
    "start": "3482760",
    "end": "3488640"
  },
  {
    "text": "have protected the presence of the Trap flag being set and that do something different that uh well it really uh we",
    "start": "3488640",
    "end": "3497000"
  },
  {
    "text": "we don't use strap flags at all but uh we as an emulator we have an option of",
    "start": "3497000",
    "end": "3502440"
  },
  {
    "text": "controlling everything that happens in there so uh if there's an up code which detects your environment you can just easily avert that because you're",
    "start": "3502440",
    "end": "3509280"
  },
  {
    "text": "executing every instruction you're executing every function you can control the returns from the function",
    "start": "3509280",
    "end": "3517000"
  },
  {
    "text": "itself anybody else",
    "start": "3517160",
    "end": "3523119"
  },
  {
    "text": "you AP your",
    "start": "3526359",
    "end": "3531760"
  },
  {
    "text": "frame uh you you don't have to execute the virus part which actually infects other files we just had to get to the",
    "start": "3533480",
    "end": "3540280"
  },
  {
    "text": "part where the the the virus is decrypted itself we can actually execute the uh the infection components the back",
    "start": "3540280",
    "end": "3546319"
  },
  {
    "text": "door components if we Define those functions as well like uh it uses the registry keys which are not yet defined",
    "start": "3546319",
    "end": "3553160"
  },
  {
    "text": "in our framework it there will be uh soon enough so did you find any way",
    "start": "3553160",
    "end": "3559359"
  },
  {
    "text": "to not ex uh yes yes yes you you can really",
    "start": "3559359",
    "end": "3566079"
  },
  {
    "text": "shorten this 245 million instructions to really smaller subset I'm just try to",
    "start": "3566079",
    "end": "3571200"
  },
  {
    "text": "show you the example of what you can actually do and uh how fast you can do it and this is really good stress test",
    "start": "3571200",
    "end": "3577640"
  },
  {
    "text": "in a real world scenario you wouldn't really be emulating nearly as much instructions just the small part which",
    "start": "3577640",
    "end": "3583319"
  },
  {
    "text": "actually does the decryption or you can do binary rewriting and rewrite that to the original decryptor which will Ex be",
    "start": "3583319",
    "end": "3589400"
  },
  {
    "text": "executed much much faster so it really depends on what you're actually dealing with so for the purpose of the presentation I didn't want to do binary",
    "start": "3589400",
    "end": "3596079"
  },
  {
    "text": "rewriting because of the speed because we wanted to show the emulator part and the emulator Works in in that kind of",
    "start": "3596079",
    "end": "3603520"
  },
  {
    "text": "way more",
    "start": "3604240",
    "end": "3607520"
  },
  {
    "text": "questions if that's it we thank you very much for your attention and wish you",
    "start": "3611119",
    "end": "3617680"
  },
  {
    "text": "uh nice reminder of the uh conference so enjoy thank you",
    "start": "3617680",
    "end": "3625960"
  },
  {
    "text": "go",
    "start": "3627039",
    "end": "3629960"
  }
]