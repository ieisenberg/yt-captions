[
  {
    "text": "good afternoon welcome to hardening hardening AWS environments and automated",
    "start": "80",
    "end": "5920"
  },
  {
    "text": "incident response for AWS compromises with Andrea Krug and Alex McCormack uh",
    "start": "5920",
    "end": "11960"
  },
  {
    "text": "before we begin just a few brief notes um please stop at the business Hall located at Bayside AB the black hat",
    "start": "11960",
    "end": "18480"
  },
  {
    "text": "Arsenal is on the palm fire on level three and the Arsenal reception is at 5:",
    "start": "18480",
    "end": "23920"
  },
  {
    "text": "p.m. today um if you haven't picked up any merchandise um or any books today is the last chance you have um if you want",
    "start": "23920",
    "end": "30320"
  },
  {
    "text": "to stop at the black CAD store uh please do so today and you can visit the Ki Linux Workshop the Kali Linux lab in",
    "start": "30320",
    "end": "36960"
  },
  {
    "text": "manderlay Bay a um well that's everything I've got uh thank you for putting your phun in vibrate uh and",
    "start": "36960",
    "end": "42360"
  },
  {
    "text": "without any anything else please uh give a warm welcome to Alex and Andrew thank",
    "start": "42360",
    "end": "48559"
  },
  {
    "text": "you good afternoon Welcome to our talk my name is Alex McCormack and this is",
    "start": "52559",
    "end": "57960"
  },
  {
    "text": "Andrew Krug Andrew and I met about two years ago and we started working for the same company building security things",
    "start": "57960",
    "end": "65198"
  },
  {
    "text": "and we started moving these security things into AWS and it became quickly apparent that AWS really strives to",
    "start": "65199",
    "end": "71680"
  },
  {
    "text": "facilitate orchestration and instrumentation in many of the AWS ecosystem so we started to have these",
    "start": "71680",
    "end": "78439"
  },
  {
    "text": "long conversations about how this programmatic access could be used to help augment all aspects of the incident",
    "start": "78439",
    "end": "84240"
  },
  {
    "text": "response work workflow and thus this talk was born",
    "start": "84240",
    "end": "91159"
  },
  {
    "text": "this talk is going to cover how to use these services and these apis provided by AWS to better handle an",
    "start": "91159",
    "end": "97439"
  },
  {
    "text": "incident best practices advis following predefined practice procedures when dealing with a security incident and",
    "start": "97439",
    "end": "104040"
  },
  {
    "text": "we'll look into the common incident response methodology and show where augmentations can be made to address the use of",
    "start": "104040",
    "end": "110399"
  },
  {
    "text": "AWS we'll discuss how to use AWS to Pipeline and automate the tedious tasks associated with digital forensics and",
    "start": "110399",
    "end": "117079"
  },
  {
    "text": "how to leverage storage and compute capabilities to to process this data along the way we'll be looking at",
    "start": "117079",
    "end": "124880"
  },
  {
    "text": "tips to harden AWS environments and make it more difficult for attackers to reach their objective this is a lot to talk about",
    "start": "124880",
    "end": "132680"
  },
  {
    "text": "we're going to be introducing four tools that we built to demonstrate instant response capabilities within AWS and",
    "start": "132680",
    "end": "138840"
  },
  {
    "text": "we'll be surveying many of the mechanisms AWS and other third parties have made available unfortunately we",
    "start": "138840",
    "end": "145000"
  },
  {
    "text": "only have a short amount of time to cover these areas so be sure to download the slides download the white paper",
    "start": "145000",
    "end": "150280"
  },
  {
    "text": "and follow the links to find additional resources to find out more as we discussed strengthening the",
    "start": "150280",
    "end": "157120"
  },
  {
    "text": "security posture and increasing capabilities for an incident response procedure we should keep in mind the risks we are trying to minimize over the",
    "start": "157120",
    "end": "164319"
  },
  {
    "text": "past few years we have seen periodic reports pop up on Hacker News of developers accidentally publishing their AWS access Keys heading to bed and",
    "start": "164319",
    "end": "172120"
  },
  {
    "text": "waking up to skyrocketing bills and emails from AWS support in fact in December of 2014 the",
    "start": "172120",
    "end": "178560"
  },
  {
    "text": "register reported a develop ER named Andrew Hoffman lost $2,300 in an AWS access key",
    "start": "178560",
    "end": "186599"
  },
  {
    "text": "compromise and as recently as last year a COR user reported losing $50,000 in an",
    "start": "186599",
    "end": "191959"
  },
  {
    "text": "AWS compromise and while these stories are Sensational I have yet to see a case where AWS didn't work with the victim",
    "start": "191959",
    "end": "198560"
  },
  {
    "text": "and forgive the cost but why is this happening what are these keys and how",
    "start": "198560",
    "end": "203799"
  },
  {
    "text": "are attackers getting a hold of them so AWS keys are provided by AWS so",
    "start": "203799",
    "end": "210519"
  },
  {
    "text": "that developers can programmatically interact with the AWS SDK a key is tied to an IIM user and",
    "start": "210519",
    "end": "217480"
  },
  {
    "text": "that users has policies dictating what the user can and cannot do but as we saw",
    "start": "217480",
    "end": "222959"
  },
  {
    "text": "at the last Slide the developer setting up the policies may fail to make them restrictive enough to prevent abuse",
    "start": "222959",
    "end": "228920"
  },
  {
    "text": "should the key be leaked and the keys can be leaked often times it's a simple",
    "start": "228920",
    "end": "234040"
  },
  {
    "text": "mistake where a configuration file is accidentally published to GitHub or bitbucket and is now available for the",
    "start": "234040",
    "end": "239680"
  },
  {
    "text": "the world to see but even if developers are careful enough not to publish their keys they",
    "start": "239680",
    "end": "245120"
  },
  {
    "text": "may store them on an in ec2 instance to run jobs suppose for instance a",
    "start": "245120",
    "end": "250840"
  },
  {
    "text": "developer created an ec2 instance with a small web server that accepts an image",
    "start": "250840",
    "end": "256040"
  },
  {
    "text": "resizes that image and then stores the new image in an S3 bucket the code needs to write to an S3 bucket and the",
    "start": "256040",
    "end": "262800"
  },
  {
    "text": "developer may have stored an access key on the on the ec2 instance in order for the code to use but now imagine that",
    "start": "262800",
    "end": "269720"
  },
  {
    "text": "image processing was susceptible to the image tragic class of vulnerabilities we saw identified earlier this year and",
    "start": "269720",
    "end": "275880"
  },
  {
    "text": "attacker could gain access to the instance and discover the key the attacker could then use that key to spin",
    "start": "275880",
    "end": "281800"
  },
  {
    "text": "up lots of other instances and mine cryptocurrencies but mining cryptocurrencies is not the attack of a",
    "start": "281800",
    "end": "287720"
  },
  {
    "text": "sophisticated attacker cryptocurrency attacks are noisy and it's just a criminal trying to make a quick Buck",
    "start": "287720",
    "end": "294280"
  },
  {
    "text": "more worrisome is what can Happ what can happen if an attacker obtains high level credentials and then stays quiet what",
    "start": "294280",
    "end": "301080"
  },
  {
    "text": "could a quiet patient sophisticated attacker do with that level of",
    "start": "301080",
    "end": "306160"
  },
  {
    "text": "access sophisticated attackers may be interested in using compromised credentials to further their own access",
    "start": "306160",
    "end": "311919"
  },
  {
    "text": "into an organization a recent blog post by Daniel grec discussed some possible",
    "start": "311919",
    "end": "317360"
  },
  {
    "text": "things an attacka could do after obtaining I IM credentials for instance you could find Direct Connect access",
    "start": "317360",
    "end": "323639"
  },
  {
    "text": "points and possibly tunnel through an organization's VPN back into their home network you could list their us users",
    "start": "323639",
    "end": "329759"
  },
  {
    "text": "and support tickets to get a better understanding of which users you should Target for further analysis Daniel also has a Blog to post",
    "start": "329759",
    "end": "336919"
  },
  {
    "text": "detailing a sneaky attack that would give users a backup access keys to every IIM user in an",
    "start": "336919",
    "end": "343479"
  },
  {
    "text": "organization but imagine what an attacker could do if an organization uses even more of the ever growing list",
    "start": "343479",
    "end": "348919"
  },
  {
    "text": "of services provided by AWS what can an attacker do if they had full control of",
    "start": "348919",
    "end": "354080"
  },
  {
    "text": "the Route 53 DNS service what kind of data can an attacker get by snapshotting live instances of storage volumes and",
    "start": "354080",
    "end": "361120"
  },
  {
    "text": "examining those instances on their own instances it's with these scenarios in mind that we will attempt to increase",
    "start": "361120",
    "end": "366960"
  },
  {
    "text": "our security posture and increase the efficacy of our incident response",
    "start": "366960",
    "end": "372840"
  },
  {
    "text": "procedures so we're all likely familiar with major phases of incident response",
    "start": "373160",
    "end": "378440"
  },
  {
    "text": "in case you're not an incident responder and you need a little refresher here they are on the screen they boil down to",
    "start": "378440",
    "end": "384360"
  },
  {
    "text": "preparation detection and Analysis containment eradication and recovery and post incident",
    "start": "384360",
    "end": "391479"
  },
  {
    "text": "activity we'd really like to help you with the last two phases of that uh",
    "start": "391479",
    "end": "397039"
  },
  {
    "text": "containment eradication and recovery and post incident activity but if you perform these steps today you know that",
    "start": "397039",
    "end": "403520"
  },
  {
    "text": "they're a little bit more wibbly wobbly and they feed back into each other to help you have better security posture",
    "start": "403520",
    "end": "410199"
  },
  {
    "text": "over time and continuous Improvement is a really great segue into defining what",
    "start": "410199",
    "end": "417360"
  },
  {
    "text": "Dev SE Ops is first where there was Dev and Ops next there was a fusion of the two sort of of a movement of making",
    "start": "417360",
    "end": "424639"
  },
  {
    "text": "developers CIS admin but now we actually have devc Ops which you might Define as",
    "start": "424639",
    "end": "430240"
  },
  {
    "text": "the coming together of security operations and development which gives rise to the possibility of automated",
    "start": "430240",
    "end": "435919"
  },
  {
    "text": "incident handling or machines performing IR on machines so to put our tools that we're",
    "start": "435919",
    "end": "441560"
  },
  {
    "text": "going to release in the talk in context we'll show you some of the facilities that already exist in AWS to fill these",
    "start": "441560",
    "end": "448400"
  },
  {
    "text": "gaps so when you're doing ir and AWS there's",
    "start": "448400",
    "end": "453520"
  },
  {
    "text": "a few things that can be really challenging one of the firsts that I identified in my research is that AWS is",
    "start": "453520",
    "end": "459520"
  },
  {
    "text": "global meaning that it's very easy for you to have a server presence in Ireland or Singapore but that can make it",
    "start": "459520",
    "end": "465000"
  },
  {
    "text": "equally difficult to locate an instance that's compromised inside of that Global Cloud managing and auditing developer",
    "start": "465000",
    "end": "471960"
  },
  {
    "text": "credentials can be very challenging and due to the depth of configuration in those environments it can be difficult",
    "start": "471960",
    "end": "477520"
  },
  {
    "text": "to spot configs that are less than ideal AWS has lots of built-in utilities",
    "start": "477520",
    "end": "484199"
  },
  {
    "text": "that we can leverage to make it more difficult for attackers to gain access and we can use that to increase",
    "start": "484199",
    "end": "489720"
  },
  {
    "text": "visibility of what's going on in the AWS environment we'll look at those Services now to see how they",
    "start": "489720",
    "end": "496319"
  },
  {
    "text": "help the first thing we're going to look at is cloud watch Cloud watch is a monitoring service you can use to",
    "start": "496319",
    "end": "501800"
  },
  {
    "text": "monitor metrics of AWS resources or even custom metrics from your own applications alarms can be placed on",
    "start": "501800",
    "end": "508560"
  },
  {
    "text": "these metrics so that if the metric is exceeded an action is taken such as sending a notification or even",
    "start": "508560",
    "end": "514518"
  },
  {
    "text": "terminating a resource one of the most common alarms is one which watches the estimated charges of your entire AWS",
    "start": "514519",
    "end": "521800"
  },
  {
    "text": "account other ec2 alarms can be created for metrics like CPU utilization Network",
    "start": "521800",
    "end": "526959"
  },
  {
    "text": "in and network out and then there's also metrics for services like EBS S3 SNS and",
    "start": "526959",
    "end": "534399"
  },
  {
    "text": "logs additionally cloud trail is an adabas service that records data about AWS API calls the API calls may come",
    "start": "534880",
    "end": "542440"
  },
  {
    "text": "from the AWS Management console the CLI or the SDK for each call made the record will",
    "start": "542440",
    "end": "549480"
  },
  {
    "text": "contain the time of the call identity of the user making the call Source IP address the request parameters and the",
    "start": "549480",
    "end": "555680"
  },
  {
    "text": "response parameters the forensic value of these logs cannot be understated in the event",
    "start": "555680",
    "end": "561640"
  },
  {
    "text": "of an IIM compromise Cloud TR could be the only thing indicating what actions an attacker",
    "start": "561640",
    "end": "567640"
  },
  {
    "text": "took you can even use cloud tra Cloud watch to monitor the number of incoming events coming into a cloud trail this is",
    "start": "567640",
    "end": "575480"
  },
  {
    "text": "especially useful in environments where maybe there aren't that many API events normally and so by seeing lots of",
    "start": "575480",
    "end": "582040"
  },
  {
    "text": "activity in a small amount of time you know something suspicious may be happening finally just to reiterate if",
    "start": "582040",
    "end": "589079"
  },
  {
    "text": "you get one thing out of this talk you should turn on cloud",
    "start": "589079",
    "end": "593519"
  },
  {
    "text": "trail now we get into some of the fun stuff um Amazon has has a really great framework for bootstrapping",
    "start": "595240",
    "end": "601440"
  },
  {
    "text": "orchestration allowing you to run commands sometimes in the interface it's",
    "start": "601440",
    "end": "606959"
  },
  {
    "text": "referred to as uh ec2 command sometimes it's referred to as simple server management it works for Windows and",
    "start": "606959",
    "end": "612880"
  },
  {
    "text": "Linux and it uses an IM am role to do that there's been a lot of talks uh this week about IIM roles and how they work",
    "start": "612880",
    "end": "619720"
  },
  {
    "text": "in AWS so I'll just sum it up as an IIM role is a delegation of privilege allowing a workstation to perform some",
    "start": "619720",
    "end": "627200"
  },
  {
    "text": "action in the AWS account they can be good and bad uh you know we all know that they're bad if an engineer",
    "start": "627200",
    "end": "633440"
  },
  {
    "text": "makes those roles too privileged allowing an attack attacker to escalate inside your",
    "start": "633440",
    "end": "639920"
  },
  {
    "text": "environment and you may be asking yourself why you would even want uh a facility to run orchestration based",
    "start": "639920",
    "end": "645760"
  },
  {
    "text": "commands in your environment with things out there like anible puppet and Chef this is just one more thing I find this",
    "start": "645760",
    "end": "652600"
  },
  {
    "text": "to be a really useful environment default because it gives you an outof band management method for taking back",
    "start": "652600",
    "end": "658200"
  },
  {
    "text": "control of an inst should an attacker happen to lock you out so let's imagine",
    "start": "658200",
    "end": "663600"
  },
  {
    "text": "that you had an instance that's popped and an attacker revoked all the SSH keys on that system but you'd really like",
    "start": "663600",
    "end": "670320"
  },
  {
    "text": "access because you'd like to acquire live memory from the system and do Post analysis and figure out what the attack",
    "start": "670320",
    "end": "676079"
  },
  {
    "text": "Vector was if the SSM agent is installed you can simply go into the uh SSM",
    "start": "676079",
    "end": "682240"
  },
  {
    "text": "dashboard and you can select run a command and then Target the vulner uh the uh attacked instance",
    "start": "682240",
    "end": "690560"
  },
  {
    "text": "input the command uh to Echo out another SSH public key run that and you've effectively",
    "start": "690560",
    "end": "697480"
  },
  {
    "text": "taken back control of that compromised instance and that's a um a notable that",
    "start": "697480",
    "end": "705600"
  },
  {
    "text": "that's an agent-based uh process where there's a client that sits out there on your uh all your boxes in your",
    "start": "705600",
    "end": "711399"
  },
  {
    "text": "environment and it periodically pulls the API so it's not uh unflappable in that an attacker could just uh El to",
    "start": "711399",
    "end": "717560"
  },
  {
    "text": "shut down that agent but this is one way that we can use to sort of take back uh",
    "start": "717560",
    "end": "724880"
  },
  {
    "text": "control there's a great presentation uh that I have to mention from last year's Amazon reinvent of an engineer also",
    "start": "724880",
    "end": "731480"
  },
  {
    "text": "using Code deploy packages to perform side loads in a similar manner to uh",
    "start": "731480",
    "end": "736680"
  },
  {
    "text": "gain control of a compromised instance after all of the accounts uh access was",
    "start": "736680",
    "end": "743399"
  },
  {
    "text": "revoked now personally when I first started using AWS I didn't really understand I IM roles and I didn't have",
    "start": "744399",
    "end": "751160"
  },
  {
    "text": "a firm understanding of what its purpose was at all I found them to be very confusing and buried far too uh too far",
    "start": "751160",
    "end": "757959"
  },
  {
    "text": "in the dashboard for me to use on my own so I made mistakes and as a result of those mistakes I did things like",
    "start": "757959",
    "end": "763560"
  },
  {
    "text": "generate IIM accounts and bury credentials within Amis which we all can agree today is pretty poor",
    "start": "763560",
    "end": "772360"
  },
  {
    "text": "practice so if there's a couple pieces of advice that's to use lease privil roles play with the roles and audit",
    "start": "772399",
    "end": "779720"
  },
  {
    "text": "their usage with cloud trail I IM roles work by attaching to an",
    "start": "779720",
    "end": "785160"
  },
  {
    "text": "instance at runtime it's very important to point out that you if you launch an instance with no uh role or instance",
    "start": "785160",
    "end": "791560"
  },
  {
    "text": "profile attached you can never attach a role to it so in my opinion it's actually better to have a generic role",
    "start": "791560",
    "end": "797880"
  },
  {
    "text": "that has a no am privilege um than to not be able not have the ability to modify that",
    "start": "797880",
    "end": "804360"
  },
  {
    "text": "privilege later so once that role is attached at boot time the instance does what's",
    "start": "804360",
    "end": "809959"
  },
  {
    "text": "called a sroll which is a special power the instance has to get credentials from the security token service and those",
    "start": "809959",
    "end": "815880"
  },
  {
    "text": "credentials are automatically refreshed before they next expire so these are the bullet points",
    "start": "815880",
    "end": "823240"
  },
  {
    "text": "from that last slide instance profiles can't be detached once they're attached",
    "start": "823240",
    "end": "828720"
  },
  {
    "text": "and instance profiles can't be added to a running",
    "start": "828720",
    "end": "833120"
  },
  {
    "text": "instance moving on we have to talk about AWS config which is a Rel relatively new",
    "start": "833959",
    "end": "839320"
  },
  {
    "text": "service where we really see some potential for Automation and environments with regard to security AWS",
    "start": "839320",
    "end": "844959"
  },
  {
    "text": "config is a trigger based reality that will compare your environment against a set of rules and can take an action if",
    "start": "844959",
    "end": "850759"
  },
  {
    "text": "they don't match the desired Baseline it's important to distinguish",
    "start": "850759",
    "end": "856160"
  },
  {
    "text": "though that the term config here is a little over Sub oversubscribed in Amazon web services it's both descriptive of",
    "start": "856160",
    "end": "863480"
  },
  {
    "text": "understanding config changes and also enforcing compliance rules via the config rule engine so you have one",
    "start": "863480",
    "end": "869839"
  },
  {
    "text": "service that performs two very different functions both assisting you in security",
    "start": "869839",
    "end": "874880"
  },
  {
    "text": "but in a couple different ways config keeps a timeline of what's changed and config rules run periodically and",
    "start": "874880",
    "end": "881920"
  },
  {
    "text": "determine whether your defined Baseline matches the live environment config rules have a really",
    "start": "881920",
    "end": "887720"
  },
  {
    "text": "nice interface to set up on initialization in your account and config asks you three basic things what",
    "start": "887720",
    "end": "893680"
  },
  {
    "text": "resources should I be watching where should I store the data about watching them and these little chunks of data",
    "start": "893680",
    "end": "899079"
  },
  {
    "text": "that it stores are called configuration item States and what other things in AWS are going to receive events if notified",
    "start": "899079",
    "end": "906720"
  },
  {
    "text": "now those little chunks of data that are the configuration item states are what makes config really powerful and able to",
    "start": "906720",
    "end": "912120"
  },
  {
    "text": "do things like produce that timeline of all the changes to an",
    "start": "912120",
    "end": "917600"
  },
  {
    "text": "instance so here's a quick example of a timeline on screen the instance I used to generate this particular timeline",
    "start": "918519",
    "end": "925160"
  },
  {
    "text": "wasn't very old so there's not a lot of data in it but it does capture a lot of really G great data that gets tracked",
    "start": "925160",
    "end": "931199"
  },
  {
    "text": "via the config service and it's really notable because all of this configuration item State data lives in",
    "start": "931199",
    "end": "936920"
  },
  {
    "text": "an S3 bucket this data persists even after that instance is terminated so there's a lot of advantage to having uh",
    "start": "936920",
    "end": "943560"
  },
  {
    "text": "config just watch over your environment config also gives you the",
    "start": "943560",
    "end": "949079"
  },
  {
    "text": "ability to set up those rules I talked about that report on non-compliant resources where you define what your",
    "start": "949079",
    "end": "955880"
  },
  {
    "text": "idea of compliant is in my example here I use one of the pre-baked recipes for reporting on instances that have",
    "start": "955880",
    "end": "961880"
  },
  {
    "text": "security groups open to the world and you can set these rules to run at a periodic interval or at any time certain",
    "start": "961880",
    "end": "968240"
  },
  {
    "text": "changes are made to your account resources like provisioning an instance here's the uh output of config",
    "start": "968240",
    "end": "975800"
  },
  {
    "text": "evaluating my account with resources for Open Access and you can see now I have quite a few resources that I can",
    "start": "975800",
    "end": "981560"
  },
  {
    "text": "identify that are non-compliant and I could go fix those things or remediate them in any way that I choose the real",
    "start": "981560",
    "end": "988160"
  },
  {
    "text": "power though in these facilities comes from being able to use AWS Lambda to automatically resolve non-compliance",
    "start": "988160",
    "end": "994079"
  },
  {
    "text": "through actions for example I could create a Lambda that would immediately remove an Open Access Security Group if",
    "start": "994079",
    "end": "1000480"
  },
  {
    "text": "it violated this compliance rule so all the features are really here to build some nice automatic pipelines and",
    "start": "1000480",
    "end": "1006360"
  },
  {
    "text": "Remediation ability so I actually have a demo here",
    "start": "1006360",
    "end": "1013360"
  },
  {
    "text": "of using cloudwatch events which works in a very similar way to AWS config to",
    "start": "1013360",
    "end": "1019560"
  },
  {
    "text": "automatically turn cloud trail back on if it's disabled by an",
    "start": "1019560",
    "end": "1025439"
  },
  {
    "text": "attacker so this is the rule uh that I've created in Cloud watch events all it does is it looks at API calls and",
    "start": "1027880",
    "end": "1034798"
  },
  {
    "text": "sees if something calls stop Trail then I'm going to run a little script here that uh plays the attacker",
    "start": "1034799",
    "end": "1042000"
  },
  {
    "text": "it's going to disable cloud trail and then it's going to go into a loop seeing if cloud trail has been reactivated so",
    "start": "1042000",
    "end": "1047720"
  },
  {
    "text": "you can see cloud Trail stopped there's the true and there it is",
    "start": "1047720",
    "end": "1054600"
  },
  {
    "text": "uh automatically turned back on with a",
    "start": "1054600",
    "end": "1058320"
  },
  {
    "text": "Lambda you got",
    "start": "1067840",
    "end": "1071240"
  },
  {
    "text": "it I uh I lost the",
    "start": "1073960",
    "end": "1079720"
  },
  {
    "text": "the presenter display here just bear with me for one",
    "start": "1079720",
    "end": "1084799"
  },
  {
    "text": "second we so close yeah so close presentation",
    "start": "1098159",
    "end": "1105200"
  },
  {
    "text": "hard all right so I would be also remiss to mention that there was a great um",
    "start": "1105400",
    "end": "1110960"
  },
  {
    "text": "Talk also at AWS reinvent last year called wrangling security events in the cloud um that takes a little bit deeper",
    "start": "1110960",
    "end": "1116760"
  },
  {
    "text": "dive into using these lambdas we don't have uh time to go through many of them today but you can see how powerful uh",
    "start": "1116760",
    "end": "1122520"
  },
  {
    "text": "they could be so when we first started building this talk back in may we thought it would be really cool if you could take",
    "start": "1122520",
    "end": "1128760"
  },
  {
    "text": "an IIM policy generate some denials and then turn that into a white list well",
    "start": "1128760",
    "end": "1134480"
  },
  {
    "text": "that turned out to almost already exist inside the AWS tool space so we decided to just take a look at that that tool",
    "start": "1134480",
    "end": "1141280"
  },
  {
    "text": "and identity access console that exists um for you to use is called access",
    "start": "1141280",
    "end": "1147039"
  },
  {
    "text": "advisor and it uh allows you to start off by casting a broad net when you create a custom imim policy and then",
    "start": "1147039",
    "end": "1153400"
  },
  {
    "text": "looking to see when those IIM permissions are used so that you can revoke them later let's blow up that",
    "start": "1153400",
    "end": "1159720"
  },
  {
    "text": "small graphic for a bit and here in the little red circle you can see a permission and that that uh permission",
    "start": "1159720",
    "end": "1165600"
  },
  {
    "text": "was never used so I know that I can go ahead and peel that off the IM",
    "start": "1165600",
    "end": "1170840"
  },
  {
    "text": "policy so some advice to take away from that use those custom policies audit them using the access advisor and then",
    "start": "1170840",
    "end": "1178039"
  },
  {
    "text": "revoke the permissions you don't need now this brings us to our tool",
    "start": "1178039",
    "end": "1183679"
  },
  {
    "text": "releases uh which is sort of the main focus in the of the presentation today",
    "start": "1183679",
    "end": "1188720"
  },
  {
    "text": "when we surveyed the security tools scape for open automation Tools around incident response we discovered a few",
    "start": "1188720",
    "end": "1193919"
  },
  {
    "text": "things the first of which was that there just weren't that many tools out there in the space and we absolutely wanted to",
    "start": "1193919",
    "end": "1199559"
  },
  {
    "text": "make one and we wanted to release it sometime this year second was that the tools that did exist assumed a lot about",
    "start": "1199559",
    "end": "1206039"
  },
  {
    "text": "the person using them and about the AWS account setup we wanted to add a tool to this ecosystem that was simple easy to",
    "start": "1206039",
    "end": "1213400"
  },
  {
    "text": "use proof of concept for driving the AWS API that assumed nothing as well about",
    "start": "1213400",
    "end": "1219200"
  },
  {
    "text": "the security posture of that account so our goal was simple we wanted",
    "start": "1219200",
    "end": "1226280"
  },
  {
    "text": "to be a free open incident resp response toolkit tailored for Amazon web services we wanted to primarily help First",
    "start": "1226280",
    "end": "1232480"
  },
  {
    "text": "Responders by automating workflows using Amazon's uh boto 3 pip",
    "start": "1232480",
    "end": "1238480"
  },
  {
    "text": "module and so that brings us to our first tool that we're going to release it's simply called",
    "start": "1238480",
    "end": "1244320"
  },
  {
    "text": "awsi and at this point it's what I would call a strong Alpha for demonstrating what's really possible using the Amazon",
    "start": "1244320",
    "end": "1250600"
  },
  {
    "text": "API and mitigating a compromise and preserving all of the forensic data available let's take a look at how it",
    "start": "1250600",
    "end": "1257559"
  },
  {
    "text": "works at the beginning of the presentation Alex talked about two types of",
    "start": "1257559",
    "end": "1262919"
  },
  {
    "text": "compromises keyb based compromises and host-based compromises our tool handles both of those that means that the key",
    "start": "1262919",
    "end": "1270960"
  },
  {
    "text": "compromise is really two phases one locate the uh compromise",
    "start": "1270960",
    "end": "1276720"
  },
  {
    "text": "access key and two simply disable it and then audit to see if that key is",
    "start": "1276720",
    "end": "1282520"
  },
  {
    "text": "used but really it looks a little bit more like this a keybase compromise",
    "start": "1282520",
    "end": "1288640"
  },
  {
    "text": "needs to feed back into a host Bas procedure when keys are used to gain persistence in other instances those",
    "start": "1288640",
    "end": "1294600"
  },
  {
    "text": "need to be processed as part of the same incident or case so this is a little demo of our uh",
    "start": "1294600",
    "end": "1302320"
  },
  {
    "text": "key compromise in",
    "start": "1302320",
    "end": "1305399"
  },
  {
    "text": "action that's the uh help dialogue for the tool and you can see we're just running awsi feeding it key compromise",
    "start": "1308159",
    "end": "1314919"
  },
  {
    "text": "giving it an access key ID it disables the key and then it writes out a complete log for that uh to an S3 bucket",
    "start": "1314919",
    "end": "1321559"
  },
  {
    "text": "for the case to get you kicked off and then I'm going to keep that last little part that printed out at the bottom of",
    "start": "1321559",
    "end": "1327120"
  },
  {
    "text": "Secret for just a few more minutes as to what that is now on to the host Bas",
    "start": "1327120",
    "end": "1333640"
  },
  {
    "text": "compromise um awsi works almost the same way for a host space compromise but it",
    "start": "1333640",
    "end": "1339200"
  },
  {
    "text": "takes an IP address an SSH key and a user that you'd like to use to try and gain access to that",
    "start": "1339200",
    "end": "1346960"
  },
  {
    "text": "instance so in this demo I'm just going to feed",
    "start": "1346960",
    "end": "1352039"
  },
  {
    "text": "the awsi utility that IP address username and SSH key it's going to",
    "start": "1352039",
    "end": "1358480"
  },
  {
    "text": "perform an inventory of all AWS regions and availability zones quickly locate that instance do a few more things to it",
    "start": "1358480",
    "end": "1366480"
  },
  {
    "text": "acquire memory to an S3 bucket and log all those actions and so you can see",
    "start": "1366480",
    "end": "1371880"
  },
  {
    "text": "here on screen a quick uh S3 LS of all the things that we write out and I'm going to talk a little bit more in",
    "start": "1371880",
    "end": "1378159"
  },
  {
    "text": "detail about what those are and why all those actions are important in the IR process",
    "start": "1378159",
    "end": "1385120"
  },
  {
    "text": "next AWS IR Begins by pulling down all of the AWS region inventory data",
    "start": "1385120",
    "end": "1391080"
  },
  {
    "text": "globally dumps that instance data and flattens it all into a very simple dictionary for quick search if you've",
    "start": "1391080",
    "end": "1397520"
  },
  {
    "text": "ever tried to hunt a single instance in the AWS console you know it can be a bit of a chore you have to go to every",
    "start": "1397520",
    "end": "1402799"
  },
  {
    "text": "region and put in the IP address so it can become the proverbial needle in a Hy stack so this effectively takes that out",
    "start": "1402799",
    "end": "1410200"
  },
  {
    "text": "of the equation it lets you find that instance very very",
    "start": "1410200",
    "end": "1415640"
  },
  {
    "text": "rapidly next we felt like it was very important to quarantine the instance so the first thing that we do is create a",
    "start": "1416360",
    "end": "1422279"
  },
  {
    "text": "deny egress Security Group and only allow the workstation uh access to wherever you're running awsi",
    "start": "1422279",
    "end": "1430639"
  },
  {
    "text": "from the next step is that awsi generates a case number and creates an S3 bucket to store all all of your",
    "start": "1431520",
    "end": "1438240"
  },
  {
    "text": "forensic data that you're collecting from that instance next we use the API to take a",
    "start": "1438240",
    "end": "1443960"
  },
  {
    "text": "snapshot of any volumes attached to that instance applying a case number and incident tag as metadata to those for",
    "start": "1443960",
    "end": "1450559"
  },
  {
    "text": "reference later before shutting down that instance we want to grab any volatile data so we",
    "start": "1450559",
    "end": "1457520"
  },
  {
    "text": "built a custom engine uh that we'll talk about in just a bit to grab that memory but we also grab memory and put it in",
    "start": "1457520",
    "end": "1464000"
  },
  {
    "text": "the S3 bucket and finally we grab any per instance data and that means AWS",
    "start": "1464000",
    "end": "1470000"
  },
  {
    "text": "specific metadata console logs and even a screenshot of what was on the system's regular console at the time and then we",
    "start": "1470000",
    "end": "1477640"
  },
  {
    "text": "power down that box to recap that's seven steps one",
    "start": "1477640",
    "end": "1483559"
  },
  {
    "text": "command line all the evidence all over AWS globally fair warning though if your",
    "start": "1483559",
    "end": "1490000"
  },
  {
    "text": "servers aren't in autoscale groups we will just power them off if they are in an autoscale group we can power them on",
    "start": "1490000",
    "end": "1496640"
  },
  {
    "text": "your autoscale group we'll do its job it'll provision another instance and your app will stay up but if you run this rest assured the instance will be",
    "start": "1496640",
    "end": "1504840"
  },
  {
    "text": "stopped so about that memory engine the memory engine was the very first thing that we built for this project and we",
    "start": "1504840",
    "end": "1510720"
  },
  {
    "text": "hope that you'll find it really useful we worked really hard to make this memory engine relevant for on-prem data",
    "start": "1510720",
    "end": "1516320"
  },
  {
    "text": "centers as well as AWS so everything that I'm going to show you now applies to your on-prem environment the same as",
    "start": "1516320",
    "end": "1523120"
  },
  {
    "text": "it applies to the cloud we really love the work the lime team did on remote memory acquisition",
    "start": "1523120",
    "end": "1529320"
  },
  {
    "text": "but we really didn't like that we had to build custom kernel modules to make the process really",
    "start": "1529320",
    "end": "1534480"
  },
  {
    "text": "reliable to add to that all the data between the acquiring workstation and the system that you were acquiring goes",
    "start": "1534480",
    "end": "1540440"
  },
  {
    "text": "over the network in the clear and we all know that's bad too we had a member on our team who couldn't be with us today",
    "start": "1540440",
    "end": "1546000"
  },
  {
    "text": "who really took this Challenge and ran with it and that person's name is Joel frier if you want to get in touch with him to ask memory acquisition questions",
    "start": "1546000",
    "end": "1552679"
  },
  {
    "text": "he's in the third from the last slide but he poured a ton of time into making this memory acquisition really solid the",
    "start": "1552679",
    "end": "1559320"
  },
  {
    "text": "memory acquisition name is Margarita shotgun because it's a lime parall parallelizer it firstly uses python",
    "start": "1559320",
    "end": "1566600"
  },
  {
    "text": "paramiko which is an awesome feature complete implementation of SSH it SSH is",
    "start": "1566600",
    "end": "1571840"
  },
  {
    "text": "into the compromise system from there it determines the running kernel checks to see if a Kernel's been pre-built in our",
    "start": "1571840",
    "end": "1577799"
  },
  {
    "text": "kernel module Warehouse we have most kernels pre-compiled for Amazon certified Amis for you so you don't have",
    "start": "1577799",
    "end": "1584720"
  },
  {
    "text": "to figure out all the kernels that exist in your environment you just just have to fire this tool against it if it's a",
    "start": "1584720",
    "end": "1589919"
  },
  {
    "text": "certified Ami it will work once a kernel module is identified",
    "start": "1589919",
    "end": "1595120"
  },
  {
    "text": "it scps over the kernel module spins up an SSH tunnel and then begins streaming",
    "start": "1595120",
    "end": "1600559"
  },
  {
    "text": "the memory to the system that you're acquiring during that streaming process",
    "start": "1600559",
    "end": "1606520"
  },
  {
    "text": "Margarita shotgun starts a multi-part upload to an S3 bucket which effectively",
    "start": "1606520",
    "end": "1611760"
  },
  {
    "text": "makes this memory acquisition process storage less and that means that it scales very very well well if you need",
    "start": "1611760",
    "end": "1618240"
  },
  {
    "text": "to acquire one instance or a thousand instances the dis requirement is the same because the memory streaming",
    "start": "1618240",
    "end": "1624880"
  },
  {
    "text": "directly from those instances right into an S3 bucket I should note that the uh memory",
    "start": "1624880",
    "end": "1632279"
  },
  {
    "text": "acquisition engine also uh can be fed a yaml file of systems if you need to acquire them on mass or you can provide",
    "start": "1632279",
    "end": "1639440"
  },
  {
    "text": "them on standard in I'll show you a quick demo of Margarita shotgun acquiring four instances at",
    "start": "1639440",
    "end": "1646520"
  },
  {
    "text": "once this is that yaml",
    "start": "1646520",
    "end": "1652440"
  },
  {
    "text": "file that's the help dialogue has a lot of other uh features that we don't have time to cover but you",
    "start": "1655840",
    "end": "1662799"
  },
  {
    "text": "just feed it that yo file and then there it goes it's off acquiring four instances all at once streaming that",
    "start": "1662799",
    "end": "1668600"
  },
  {
    "text": "memory live to an S3 bucket so you could run this in a Docker",
    "start": "1668600",
    "end": "1673720"
  },
  {
    "text": "container you could run it on a regular workstation uh pretty much anywhere that you you can pip stuff um someday we",
    "start": "1673720",
    "end": "1679640"
  },
  {
    "text": "might even uh consider running it in a Lambda if the time constraint works",
    "start": "1679640",
    "end": "1685480"
  },
  {
    "text": "out so now about that kernel module Warehouse I mentioned earlier that we were searching that this is our own",
    "start": "1686880",
    "end": "1693600"
  },
  {
    "text": "addition to the lime space it's a ruby gem that drives Docker to compile all the modules for all these different",
    "start": "1693600",
    "end": "1699399"
  },
  {
    "text": "environments and if you run it on Amazon Linux it'll compile for AWS Linux as well the output of that tool is just an",
    "start": "1699399",
    "end": "1706279"
  },
  {
    "text": "S3 bucket full of all the potential line modules we have a default bucket in the code base um and thanks to some support",
    "start": "1706279",
    "end": "1712799"
  },
  {
    "text": "from Amazon we're going to host that uh more or less indefinitely for the project but if you're a little bit",
    "start": "1712799",
    "end": "1718960"
  },
  {
    "text": "paranoid like some people are uh you can host your own version of this repository",
    "start": "1718960",
    "end": "1724760"
  },
  {
    "text": "uh there's a trust no one configuration where you can override the URL of that uh module Warehouse with an environment",
    "start": "1724760",
    "end": "1730320"
  },
  {
    "text": "variable or a config cash item so back into the dealing with an",
    "start": "1730320",
    "end": "1738360"
  },
  {
    "text": "incident scope if you remember back when we were talking about AWS that module automatically collected",
    "start": "1738360",
    "end": "1744760"
  },
  {
    "text": "evidence and put it in an S3 bucket or it created snapshots of the attached volumes of a compromised disc in almost",
    "start": "1744760",
    "end": "1752120"
  },
  {
    "text": "every case simply collecting the evidence and terminating the instance is not enough you'll need to review the",
    "start": "1752120",
    "end": "1758320"
  },
  {
    "text": "evidence to determine what was taken or how the attacker got in to determine how",
    "start": "1758320",
    "end": "1763720"
  },
  {
    "text": "to resolve this incident to help in this area we created a workstation to demonstrate how to glue together",
    "start": "1763720",
    "end": "1770399"
  },
  {
    "text": "multiple open source forensic tools the workstation is an Ami being released today that anyone can use in",
    "start": "1770399",
    "end": "1777519"
  },
  {
    "text": "their own AWS environment it features a friendly web interface that glues together the workflows of several open",
    "start": "1777519",
    "end": "1783559"
  },
  {
    "text": "source tools there are several ways to start",
    "start": "1783559",
    "end": "1788840"
  },
  {
    "text": "the threat response workstation Ami you could start it from within the AWS console but it requires some setup so to",
    "start": "1788840",
    "end": "1795679"
  },
  {
    "text": "make it easier we added a command into the AWS IR tool called create workstation and after running either the",
    "start": "1795679",
    "end": "1802320"
  },
  {
    "text": "host key or host key after running either the host compromise or key compromise command awsi will provide you",
    "start": "1802320",
    "end": "1809640"
  },
  {
    "text": "with the command to launch the workstation Additionally you can also just add the- C flag when running either",
    "start": "1809640",
    "end": "1815000"
  },
  {
    "text": "the host compromise or key compromise command and it'll spin it up for you once it's done collecting the",
    "start": "1815000",
    "end": "1820440"
  },
  {
    "text": "evidence after the workstation has finished launching the user will be given an SSH command so they can route",
    "start": "1820440",
    "end": "1826120"
  },
  {
    "text": "all their traffic through their browser through the SSH tunnel and into the the threat response",
    "start": "1826120",
    "end": "1832240"
  },
  {
    "text": "workstation so the first thing the user is going to see when they connect to the web app is the dashboard the dashboard",
    "start": "1832240",
    "end": "1837480"
  },
  {
    "text": "contains a few widgets to help the user understand their current AWS environment the first widget displays how many",
    "start": "1837480",
    "end": "1843840"
  },
  {
    "text": "instances are running on each AWS region the next widget displays how many instances were launched within the last",
    "start": "1843840",
    "end": "1849440"
  },
  {
    "text": "24 hours finally a widget displays the different types of Amis and how many are",
    "start": "1849440",
    "end": "1854600"
  },
  {
    "text": "running across your entire AWS infrastructure with these rigids a user can better Orient themselves Orient themselves to",
    "start": "1854600",
    "end": "1861720"
  },
  {
    "text": "determine if something looks out of place from the dashboard the user can then choose the acquire analysis or",
    "start": "1861720",
    "end": "1868799"
  },
  {
    "text": "advice tab let's take a look at the acquire tab so the acquired tab demonstrates",
    "start": "1868799",
    "end": "1874399"
  },
  {
    "text": "several possible features of an IR workstation the first feature is a full text search across all of your AWS",
    "start": "1874399",
    "end": "1881279"
  },
  {
    "text": "regions just as AWS IR collected an entire inventory globally of all your regions uh the workstation will do the",
    "start": "1881279",
    "end": "1888919"
  },
  {
    "text": "same this reddis back search is very fast and facilitates search based on Ami",
    "start": "1888919",
    "end": "1894080"
  },
  {
    "text": "ID IP address or availability zone now the search provided in the AWS console",
    "start": "1894080",
    "end": "1900639"
  },
  {
    "text": "is much more featur allowing Searchers to cross things like tags or SSH keys but the ads console does limit your",
    "start": "1900639",
    "end": "1906919"
  },
  {
    "text": "searches to a particular region next acquire does what its name suggests after you locate another",
    "start": "1906919",
    "end": "1913639"
  },
  {
    "text": "instance to investigate you can acquire more evidence on additional host post s it leverages awsi to facilitate the",
    "start": "1913639",
    "end": "1919840"
  },
  {
    "text": "collection of dis memory and everything else AWS can collect after you've",
    "start": "1919840",
    "end": "1925039"
  },
  {
    "text": "acquired enough evidence it's time to start your analysis so let's take a look at that tab the analyze tab shows how we can use",
    "start": "1925039",
    "end": "1933279"
  },
  {
    "text": "all of facilities within awsi and with the open with several open source tools",
    "start": "1933279",
    "end": "1939200"
  },
  {
    "text": "to facilitate compute and storage resources the two main analysis mechanisms we demonstrate are for memory",
    "start": "1939200",
    "end": "1945679"
  },
  {
    "text": "and disk memory can be investigated at the push of a button by pushing the analyze button for",
    "start": "1945679",
    "end": "1951799"
  },
  {
    "text": "a selected memory dump the workstation will download the lime file right from the S3 bucket and into the workstation a",
    "start": "1951799",
    "end": "1958360"
  },
  {
    "text": "Docker instance is then run with volatility and a JavaScript based terminal shell will appear right inside",
    "start": "1958360",
    "end": "1963519"
  },
  {
    "text": "the browser this saves the user from having to download what could be a possibly large lime file from their from",
    "start": "1963519",
    "end": "1970399"
  },
  {
    "text": "their Cloud all the way to their local",
    "start": "1970399",
    "end": "1973639"
  },
  {
    "text": "machine the analyze tab also facilitates the processing of disk information when",
    "start": "1976039",
    "end": "1981200"
  },
  {
    "text": "a user views the disk portion the UI will show all the diss associated with this case when a user clicks the add",
    "start": "1981200",
    "end": "1987799"
  },
  {
    "text": "button the dis will be processed a plaso file generated and that plaso file can be viewed with time sketch for those of",
    "start": "1987799",
    "end": "1994559"
  },
  {
    "text": "you who don't know time sketch is a case management tool that makes it easy for multiple analysts to analyze timeline",
    "start": "1994559",
    "end": "2000159"
  },
  {
    "text": "files and to note significant findings that they have found time sketch is",
    "start": "2000159",
    "end": "2005200"
  },
  {
    "text": "still experimental it's a proof of concept tool but we think it's pretty cool even though Google describes it as",
    "start": "2005200",
    "end": "2011279"
  },
  {
    "text": "and I'm quoting not an official Google product just code that happens to be owned by Google which I think is I'm",
    "start": "2011279",
    "end": "2019000"
  },
  {
    "text": "really glad GitHub repos don't have feelings because that's just sad",
    "start": "2019000",
    "end": "2024720"
  },
  {
    "text": "like now anyone who's ever tried to set up log to timeline will know that it can be a painful process so we've automated",
    "start": "2024720",
    "end": "2031600"
  },
  {
    "text": "the entire ingestion and delivery to make processing a dis as simple as clicking a button actually it's clicking a button",
    "start": "2031600",
    "end": "2037720"
  },
  {
    "text": "twice but we'll explain that so when the user clicks the pink ad button in the dashboard threat response starts",
    "start": "2037720",
    "end": "2043679"
  },
  {
    "text": "processing the instance within ec2 the way it does that is it starts a processing instance uh in within ec2 and then it'll",
    "start": "2043679",
    "end": "2050919"
  },
  {
    "text": "clone the S3 bucket sorry the it'll clone the volume that was already uh snapshotted when the instance",
    "start": "2050919",
    "end": "2058800"
  },
  {
    "text": "was identified as compromised that clone is then attached to the processing",
    "start": "2058800",
    "end": "2063960"
  },
  {
    "text": "instance and is processed that processing creates a PLO file PLO file",
    "start": "2063960",
    "end": "2069280"
  },
  {
    "text": "is stored in the case S3 bucket and at this point the blue grade timeline button will turn blue indicating the",
    "start": "2069280",
    "end": "2075800"
  },
  {
    "text": "file is in the S3 bucket so once the file is in the S3 bucket it's ready to",
    "start": "2075800",
    "end": "2080839"
  },
  {
    "text": "be imported into time sketch time sketch also runs inside a Docker container inside the uh the",
    "start": "2080839",
    "end": "2088358"
  },
  {
    "text": "workstation and just by clicking the green button the plasa file will be",
    "start": "2088359",
    "end": "2093520"
  },
  {
    "text": "imported into time sketch the entire process is completely scalable if an",
    "start": "2093520",
    "end": "2098640"
  },
  {
    "text": "incident requires processing of 100 discs it's going to take the same amount of time as as processing one dis it all",
    "start": "2098640",
    "end": "2104320"
  },
  {
    "text": "depends just on the size of those discs anybody who's ever used log to",
    "start": "2104320",
    "end": "2110400"
  },
  {
    "text": "timeline also knows that processing diss does take some time you you can spin up",
    "start": "2110400",
    "end": "2115599"
  },
  {
    "text": "as many images as you want but you still have to read gigabytes and gigabytes of data so you're going to have to wait for it so to help like we want to show you",
    "start": "2115599",
    "end": "2122240"
  },
  {
    "text": "how this works but we're going to skip processing because no one wants to just watch a progress bar go across the screen so instead what we're going to do",
    "start": "2122240",
    "end": "2128760"
  },
  {
    "text": "is we're going to show three c three snapshots one that's already been processed one that has been processed uh",
    "start": "2128760",
    "end": "2135320"
  },
  {
    "text": "and one that's already imported so but just by clicking that button we're already in time sketch and time sketch",
    "start": "2135320",
    "end": "2141359"
  },
  {
    "text": "has this really cool feature called or it's this really cool concept called sketches where you import these",
    "start": "2141359",
    "end": "2146440"
  },
  {
    "text": "timelines into these sketches so now that we're in a sketch we're just going to show that we actually really did",
    "start": "2146440",
    "end": "2151599"
  },
  {
    "text": "import this file by doing a couple searches I wish we had more time we could look at all the other cool",
    "start": "2151599",
    "end": "2157119"
  },
  {
    "text": "features that time sketch has available things like custom views or filters or even",
    "start": "2157119",
    "end": "2163839"
  },
  {
    "text": "graphing the last part of threat response that we're going to talk about is the advice tab the advice tab shows a",
    "start": "2167920",
    "end": "2174839"
  },
  {
    "text": "web UI for the final product we're are going to be releasing today a tool called threat prep threat prep is a tool",
    "start": "2174839",
    "end": "2181480"
  },
  {
    "text": "for checking configuration settings for areas where changes could be made to either make aex more difficult or to",
    "start": "2181480",
    "end": "2187240"
  },
  {
    "text": "increase the forensics evidence being generated during an attack threat prep can be used from a command line or as in",
    "start": "2187240",
    "end": "2193720"
  },
  {
    "text": "the case of the workstation used in another python project let's take a look at the checks threat prep",
    "start": "2193720",
    "end": "2200960"
  },
  {
    "text": "performs by default threat prep will check each S3 bucket to ensure versioning is enabled it'll check to see",
    "start": "2200960",
    "end": "2208200"
  },
  {
    "text": "logging is enabled and then that read and write permissions aren't open to the world this is important because",
    "start": "2208200",
    "end": "2214200"
  },
  {
    "text": "versioning tells will tell you what changed logging will tell you who and when something changed and the",
    "start": "2214200",
    "end": "2219599"
  },
  {
    "text": "permission check ensures sensitive resources aren't accidentally",
    "start": "2219599",
    "end": "2225318"
  },
  {
    "text": "exposed threat prep will also check each I IM user to ensure ensure multiactor authentication is enabled it will check",
    "start": "2225599",
    "end": "2232800"
  },
  {
    "text": "if passwords or access Keys have recently been rotated and it will check to see if any user has the administrator",
    "start": "2232800",
    "end": "2238240"
  },
  {
    "text": "access policy if a user does have the administator access policy you should audit their usage in the IM IM access",
    "start": "2238240",
    "end": "2244160"
  },
  {
    "text": "advisor that we showed earlier threat prep will check each VPC to ensure flow logging is enabled flow",
    "start": "2244160",
    "end": "2250880"
  },
  {
    "text": "logging is a great source of forensic evidence that is often overlooked threat prep will check each cloud trail to",
    "start": "2250880",
    "end": "2256720"
  },
  {
    "text": "ensure that log file validation is enabled which can indicate if a cloud trail has been tampered with there's",
    "start": "2256720",
    "end": "2263560"
  },
  {
    "text": "also a separate check just to ensure you have at least one multi-regional cloud trail enabled finally threat prep looks for",
    "start": "2263560",
    "end": "2270640"
  },
  {
    "text": "simple best practices such as ensuring that access keys are disabled on the root account ensuring at least one I IM",
    "start": "2270640",
    "end": "2277000"
  },
  {
    "text": "role exists and that cloud watch alarms are set for the estimated cost",
    "start": "2277000",
    "end": "2282560"
  },
  {
    "text": "metric so how does threat prep compareed with trusted advisor for those who don't know ads already has a service called",
    "start": "2282560",
    "end": "2289000"
  },
  {
    "text": "trusted advisor that is included with most support plans but those support plans are going",
    "start": "2289000",
    "end": "2294520"
  },
  {
    "text": "to start at around $100 a month and increase depending on your AWS usage the second problem with trust",
    "start": "2294520",
    "end": "2301440"
  },
  {
    "text": "advisor is that the checks are statically defined you can't write policies that apply only to a group of resour sources because but because",
    "start": "2301440",
    "end": "2308760"
  },
  {
    "text": "threat prep is a python module you can interface it with exactly the needs that your organization need that",
    "start": "2308760",
    "end": "2316680"
  },
  {
    "text": "uses there's also many shared features between threat prep and AWS config for",
    "start": "2316680",
    "end": "2322200"
  },
  {
    "text": "larger organizations configuration auditing should be done with config it is extensible enough that policies can",
    "start": "2322200",
    "end": "2328200"
  },
  {
    "text": "be written for the unique aspects of an organization and tying into Lambda can lead to automatic",
    "start": "2328200",
    "end": "2334680"
  },
  {
    "text": "remediation and without the rules engine the cost of config is very affordable",
    "start": "2334680",
    "end": "2339800"
  },
  {
    "text": "however for small organizations rules cost $2 per month per Rule and that might be a little too",
    "start": "2339800",
    "end": "2346520"
  },
  {
    "text": "high if the organization is particularly price sensitive so we just introduced you to",
    "start": "2346520",
    "end": "2352599"
  },
  {
    "text": "the four tools that we are releasing today that's AWS for automated incident handling Margarita shotgun to facilitate",
    "start": "2352599",
    "end": "2359400"
  },
  {
    "text": "memory captures the threat response workstation to pipeline analysis tools",
    "start": "2359400",
    "end": "2364720"
  },
  {
    "text": "and threat prep to audit AWS environment we want to emphasize that these tools are first relase beta tools in",
    "start": "2364720",
    "end": "2372000"
  },
  {
    "text": "developing them we made some implicit design decisions about the incident response process but your incident",
    "start": "2372000",
    "end": "2378240"
  },
  {
    "text": "response process is likely to be different than the workflows we automate to make the tools work in most",
    "start": "2378240",
    "end": "2384400"
  },
  {
    "text": "environments we have to assume things like cloud trail or config haven't been enabled yet so while we hope these tools",
    "start": "2384400",
    "end": "2390200"
  },
  {
    "text": "will be useful to you at the very least we encourage you to take a look at the code and borrow whatever you need to",
    "start": "2390200",
    "end": "2395560"
  },
  {
    "text": "help automate your own incident response procedures but we're not the only ones looking into this space let's take a",
    "start": "2395560",
    "end": "2401000"
  },
  {
    "text": "look at some of the other projects that can help automate incident response within",
    "start": "2401000",
    "end": "2405920"
  },
  {
    "text": "AWS yeah so we would uh this wouldn't be a very good security talk if we didn't uh mention at least a couple other",
    "start": "2406040",
    "end": "2412040"
  },
  {
    "text": "companies that are doing a really a great job comp uh contributing open- Source projects to this",
    "start": "2412040",
    "end": "2418319"
  },
  {
    "text": "space one of the best things that you can do to learn to be better at security in AWS is to just experiment with it and",
    "start": "2418319",
    "end": "2426160"
  },
  {
    "text": "kick the tires on some of these other open projects is a great way to do that so don't wait to try out some of",
    "start": "2426160",
    "end": "2433319"
  },
  {
    "text": "these things if you think that the tools that we built are terrible we want to hear from you if you think the tools",
    "start": "2433319",
    "end": "2438480"
  },
  {
    "text": "that we built are great we want to hear from you either way we'd love to hear from you but do set these up in a test",
    "start": "2438480",
    "end": "2445280"
  },
  {
    "text": "environment and I'll talk about what that means in a second do start a security simulation program and do do",
    "start": "2445280",
    "end": "2451240"
  },
  {
    "text": "things like have IR game days so I have to mention what my idea",
    "start": "2451240",
    "end": "2456440"
  },
  {
    "text": "of a test environment is because this is something that I don't see done very well when I go out on Consulting",
    "start": "2456440",
    "end": "2461560"
  },
  {
    "text": "engagements a lot of people intermx their development and test systems inside of the same cloud and that looks",
    "start": "2461560",
    "end": "2467880"
  },
  {
    "text": "like this they think they're doing a great job just because they have test systems when it should really look like",
    "start": "2467880",
    "end": "2474400"
  },
  {
    "text": "this separate AWS clouds vpcs and subnets for each instance of whatever",
    "start": "2474400",
    "end": "2480040"
  },
  {
    "text": "widget you're building that makes it one easy to identify what logs and other things are in which cloud but also make",
    "start": "2480040",
    "end": "2487200"
  },
  {
    "text": "it easier on your staff since you can control who can do things like terminate instances in",
    "start": "2487200",
    "end": "2493599"
  },
  {
    "text": "production all the engineers in the second graphic have one thing in common they've separated Dev test and",
    "start": "2493599",
    "end": "2499400"
  },
  {
    "text": "production to different AWS accounts and because clouds are effectively free it makes them more empowered so in this",
    "start": "2499400",
    "end": "2505920"
  },
  {
    "text": "case security actually makes it easier for your staff to do their jobs security simulations are really",
    "start": "2505920",
    "end": "2513079"
  },
  {
    "text": "great uh to have in in part of your program and we're running short on time so I'm not going to Deep dive into what",
    "start": "2513079",
    "end": "2518160"
  },
  {
    "text": "security simulations are but the bullet point about security",
    "start": "2518160",
    "end": "2523240"
  },
  {
    "text": "simulation is that if you decide to do these Amazon would love to support you in doing them and all you have to do is",
    "start": "2523240",
    "end": "2528599"
  },
  {
    "text": "let them know that you're going to do a security simulation so please do that so there are a couple other",
    "start": "2528599",
    "end": "2535599"
  },
  {
    "text": "projects in the space that I have to mention in a keynote yesterday we heard Dan Kaminsky retelling a story about",
    "start": "2535599",
    "end": "2541280"
  },
  {
    "text": "being in a room with a bunch of Bank Executives sharing their security Secrets he recounted how mind-blowing it",
    "start": "2541280",
    "end": "2546880"
  },
  {
    "text": "was to hear the executive say we share these secrets because we don't compete on security and that was something that",
    "start": "2546880",
    "end": "2552720"
  },
  {
    "text": "really resonated with me as someone who built open-source software we don't compete on security so we want to be",
    "start": "2552720",
    "end": "2559880"
  },
  {
    "text": "sure to point out a couple other important projects that exists in this open space where giant companies are",
    "start": "2559880",
    "end": "2565440"
  },
  {
    "text": "putting out their secret sauce to help everyone here be better Defenders and let's be honest defense is not exciting",
    "start": "2565440",
    "end": "2572200"
  },
  {
    "text": "but it is really important we can't have great flashy T talks without an answer",
    "start": "2572200",
    "end": "2577880"
  },
  {
    "text": "to them so Netflix started open sourcing its projects very early in the game the",
    "start": "2577880",
    "end": "2584359"
  },
  {
    "text": "Simeon Army has been around for a long time and you and uh Netflix has been evolving it pretty much constantly it",
    "start": "2584359",
    "end": "2592000"
  },
  {
    "text": "has some compliance and security feature overlap with AWS but no forensic capabilities plus the quick start guide",
    "start": "2592000",
    "end": "2599240"
  },
  {
    "text": "I found to be quite long it's Java my guess is it would take a while",
    "start": "2599240",
    "end": "2605319"
  },
  {
    "text": "for any of you to get this going in a test environment but you'd learn a ton we really also have to mention Capital 1",
    "start": "2605319",
    "end": "2611680"
  },
  {
    "text": "Cloud custodian because it's released earlier in the year truth be told it was a little bit difficult for me to get",
    "start": "2611680",
    "end": "2616960"
  },
  {
    "text": "going as well this project needs a user base more than anything it has so much potential but it's brand new and it",
    "start": "2616960",
    "end": "2623800"
  },
  {
    "text": "really needs you as a community to get behind it and do things like file bug reports and write",
    "start": "2623800",
    "end": "2630240"
  },
  {
    "text": "documentation the reality is though easy or difficult these projects all fill a need that exists so you might prefer to",
    "start": "2630240",
    "end": "2636480"
  },
  {
    "text": "look at it like this those four categories if you can't see them all the way in the back are incident handling",
    "start": "2636480",
    "end": "2641800"
  },
  {
    "text": "forensics compliance and continuous monitoring the green squares mean that project has uh coverage in that space",
    "start": "2641800",
    "end": "2648400"
  },
  {
    "text": "and the red squares mean it doesn't so no one of these open initiatives really cover all four of these",
    "start": "2648400",
    "end": "2655480"
  },
  {
    "text": "areas so we have a few uh features on the docket to add to our forensic tools",
    "start": "2655480",
    "end": "2660960"
  },
  {
    "text": "over the next little while but we have nothing really planned cuz a lot of it is going to be based on your feedback from testing these are some ideas though",
    "start": "2660960",
    "end": "2668640"
  },
  {
    "text": "we had from talking with some of you over the course of this week uh features like isolating your IR um incident data",
    "start": "2668640",
    "end": "2675599"
  },
  {
    "text": "inside of a specific geographic region of AWS to deal with border crossing issues or things as fun as uh carving",
    "start": "2675599",
    "end": "2682119"
  },
  {
    "text": "memory automatically with AWS Lambda and then correlating that with threat intelligence but I want to emphasize",
    "start": "2682119",
    "end": "2688240"
  },
  {
    "text": "none of this happens with all of you without all of you we want to change the conversation on open incident response",
    "start": "2688240",
    "end": "2694400"
  },
  {
    "text": "software so I want want to challenge you if you have ideas or even better source code that you're hiding in the basement",
    "start": "2694400",
    "end": "2700640"
  },
  {
    "text": "of some company to get out the door get that out the door and onto GitHub and in front of the community in a legal way",
    "start": "2700640",
    "end": "2707839"
  },
  {
    "text": "like don't just put it out on GitHub of course but we need your help to build these tools because it's a lot easier to",
    "start": "2707839",
    "end": "2713559"
  },
  {
    "text": "say I'm not going to put something out than I'm going to put something out that doesn't work as well as I think it",
    "start": "2713559",
    "end": "2719319"
  },
  {
    "text": "should all of you can contribute and learn from each other so with that uh",
    "start": "2719319",
    "end": "2724680"
  },
  {
    "text": "I'd like to wrap it up real quick but first I have to thank um the two other members on our team who couldn't be here",
    "start": "2724680",
    "end": "2730480"
  },
  {
    "text": "Joel F and Jeff par they're on our website threat response. Cloud give a quick tip of the hat to Amazon web",
    "start": "2730480",
    "end": "2737000"
  },
  {
    "text": "services guys who were super supportive of this project and this is where you can go to get the software so if you",
    "start": "2737000",
    "end": "2743280"
  },
  {
    "text": "really thought that this was a cool thing and you want to go play with it we're going to release it later this week depending on internet connectivity",
    "start": "2743280",
    "end": "2749480"
  },
  {
    "text": "um I've got to turn those repos over so go to our website sign up for our mailing list and you'll get an email",
    "start": "2749480",
    "end": "2754640"
  },
  {
    "text": "it'll be the only email you get um we' love your feedback and uh before",
    "start": "2754640",
    "end": "2759920"
  },
  {
    "text": "we wrap it up um uh we'd like to just thank you for being here today um you've",
    "start": "2759920",
    "end": "2765960"
  },
  {
    "text": "been a great [Applause]",
    "start": "2765960",
    "end": "2773319"
  },
  {
    "text": "audience",
    "start": "2773319",
    "end": "2776319"
  }
]