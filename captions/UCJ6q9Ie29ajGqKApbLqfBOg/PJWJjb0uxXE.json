[
  {
    "text": "so good morning everyone my name is Rafa vo trro I work for a company named",
    "start": "80",
    "end": "5359"
  },
  {
    "text": "bromium and the talk is titled lessons learned from 8 years of breaking hypervisors so maybe to start some word",
    "start": "5359",
    "end": "13040"
  },
  {
    "text": "of explanation or justification about the title and introduction at the same time I've been fascinated by topic of",
    "start": "13040",
    "end": "20279"
  },
  {
    "text": "high provider security for a long time the first vulnerability that I have found in virtualization software was in",
    "start": "20279",
    "end": "26279"
  },
  {
    "text": "2006 so ages ago and since then I found a couple of other vulnerabilities in",
    "start": "26279",
    "end": "33200"
  },
  {
    "text": "different hypervisors as well as a number of issues in other low-level Technologies",
    "start": "33200",
    "end": "39280"
  },
  {
    "text": "so uh there's a chance I know what I'm talking about and you're not wasting your time",
    "start": "39280",
    "end": "44440"
  },
  {
    "text": "here okay agenda for this talk about the speaker we done uh we'll talk about different types",
    "start": "44440",
    "end": "51559"
  },
  {
    "text": "of hypervisors and particularly what will be covered in this talk uh then we'll talk about attack surface of the",
    "start": "51559",
    "end": "58680"
  },
  {
    "text": "most commonly spotted hypervisors and not to make it very dry",
    "start": "58680",
    "end": "64680"
  },
  {
    "text": "I will try to show you a couple of examples real example of real past and present",
    "start": "64680",
    "end": "70479"
  },
  {
    "text": "vulnerabilities and some of them can be mitigated in a generic way right so uh",
    "start": "70479",
    "end": "76799"
  },
  {
    "text": "we'll conclude with a couple of examples of mitigation techniques okay so types of hypervisors",
    "start": "76799",
    "end": "83159"
  },
  {
    "text": "there are many of them I guess most of you are are familiar with products like",
    "start": "83159",
    "end": "88400"
  },
  {
    "text": "vmw Zen or Microsoft hyperv so the mainstream popular commercial ones running on x86 platform uh with the",
    "start": "88400",
    "end": "96399"
  },
  {
    "text": "purpose of running Microsoft svms right and the talk is about them because again",
    "start": "96399",
    "end": "101439"
  },
  {
    "text": "that's uh the thing that's mostly po popular but Vier there are other other types of",
    "start": "101439",
    "end": "108960"
  },
  {
    "text": "hypervisors particularly in the embedded World it looks a bit different uh",
    "start": "108960",
    "end": "114240"
  },
  {
    "text": "academic projects are sometimes interesting especially if they are created with the goal of BU building",
    "start": "114240",
    "end": "120200"
  },
  {
    "text": "some secure software but the problem with academic projects is that they usually die when the gr times",
    "start": "120200",
    "end": "127200"
  },
  {
    "text": "off usually produ produce only some sort of PC that is not usable for real",
    "start": "127200",
    "end": "133440"
  },
  {
    "text": "deployment and finally one technique worth mentioning is formal software",
    "start": "133440",
    "end": "138840"
  },
  {
    "text": "verification right so it's very good if we can prove they are mathematic proof",
    "start": "138840",
    "end": "143920"
  },
  {
    "text": "that uh the software is secure that it behaves as we would like it to be so why we should all use formally verified",
    "start": "143920",
    "end": "151560"
  },
  {
    "text": "software right it's a very good thing to have yes it is the problem is that uh",
    "start": "151560",
    "end": "157239"
  },
  {
    "text": "formal verification is insanely expensive right it's very difficult requires high level expertise and if you",
    "start": "157239",
    "end": "164480"
  },
  {
    "text": "change your software a little bit sometimes you have to restructure the whole proof so that's the reason why uh",
    "start": "164480",
    "end": "170360"
  },
  {
    "text": "this technology of former verification is not used very widely",
    "start": "170360",
    "end": "175959"
  },
  {
    "text": "right and you might have heard that for instance sl4 is formally verified hypervisor yay excellent but uh we'll",
    "start": "175959",
    "end": "183799"
  },
  {
    "text": "see that's not the whole story okay the types of hypervisors uh usually there",
    "start": "183799",
    "end": "190280"
  },
  {
    "text": "are two broad categories namely type one and type two and the difference is that type one uh has the sole control of the",
    "start": "190280",
    "end": "197640"
  },
  {
    "text": "platform right it starts as the first thing started by by the BIOS and in case of type two the hypervisor coexists with",
    "start": "197640",
    "end": "204760"
  },
  {
    "text": "the operating system right this is important because it's not the only privileged Cod on the platform it runs",
    "start": "204760",
    "end": "211799"
  },
  {
    "text": "in ring zero as a kernel driver but again it coexists with other operating system like Windows or Linux but",
    "start": "211799",
    "end": "218640"
  },
  {
    "text": "interestingly so they are quite different and uh it creates a lot of issues but from",
    "start": "218640",
    "end": "224439"
  },
  {
    "text": "the perspective of an attacker who tries to break out of VM and that's uh the scenario that we will be most interested",
    "start": "224439",
    "end": "230680"
  },
  {
    "text": "they're almost identical but there there not not much difference uh so I will just bundle them in a single category",
    "start": "230680",
    "end": "237319"
  },
  {
    "text": "and most of the talk that follows is about either type one or type two there is another category and it's deep safe",
    "start": "237319",
    "end": "244120"
  },
  {
    "text": "it's a product from maafi and it's very different very special very interesting",
    "start": "244120",
    "end": "249400"
  },
  {
    "text": "and we'll cover it separately but for now let's just focus on type one and type two okay so uh attack surface so this is",
    "start": "249400",
    "end": "258400"
  },
  {
    "text": "the important slide right uh we just try to understand uh",
    "start": "258400",
    "end": "263560"
  },
  {
    "text": "what components of the virtualization system um are most prone to attacks to",
    "start": "263560",
    "end": "270160"
  },
  {
    "text": "put it this way okay so uh the first line of the defense is CPU itself right",
    "start": "270160",
    "end": "276520"
  },
  {
    "text": "so uh in order to have good feasible way to virtualize Intel",
    "start": "276520",
    "end": "282759"
  },
  {
    "text": "CPU you need this VTX extensions right that uh allows you to run code within",
    "start": "282759",
    "end": "288360"
  },
  {
    "text": "the VTX container in a VM right and of course uh we need this instructions to behave",
    "start": "288360",
    "end": "296400"
  },
  {
    "text": "properly right if uh some code runs in a VM protected by VTX but if it could",
    "start": "296400",
    "end": "303919"
  },
  {
    "text": "access memory outside of the VM like it could directly access a memory of hypervisor it would make no sense right",
    "start": "303919",
    "end": "309800"
  },
  {
    "text": "there will be no protection similarly if uh any bit of State leaks from the VM to",
    "start": "309800",
    "end": "316840"
  },
  {
    "text": "the outside world after you exit from the VM and then if you could use it to influence the behavior of the hypervisor",
    "start": "316840",
    "end": "323479"
  },
  {
    "text": "then again there is no hope and uh the answer is this this technology works",
    "start": "323479",
    "end": "330280"
  },
  {
    "text": "well right throughout all all the history it was introduced there was no",
    "start": "330280",
    "end": "335639"
  },
  {
    "text": "significant issues with that uh to be to be honest and and uh say the whole story",
    "start": "335639",
    "end": "342520"
  },
  {
    "text": "there are a couple of interesting CPU eras related uh to the VTX",
    "start": "342520",
    "end": "348240"
  },
  {
    "text": "technology uh which should not happen right we would like the CPU to to be",
    "start": "348240",
    "end": "353280"
  },
  {
    "text": "totally perfect but they are not very scary there hasn't been a single case that I aware of that you",
    "start": "353280",
    "end": "360840"
  },
  {
    "text": "could use the CPU AATA to actually break out from the DM and get code execution outside of DM they are a bit scary but",
    "start": "360840",
    "end": "369319"
  },
  {
    "text": "uh again that's not not the main problem again this this separation implemented by the CPU by VTX is very good right and",
    "start": "369319",
    "end": "378599"
  },
  {
    "text": "uh that is why a lot of people think that again because the CPU implemented",
    "start": "378599",
    "end": "383880"
  },
  {
    "text": "separation is good that hypervisor are secure by definition right and that's",
    "start": "383880",
    "end": "389639"
  },
  {
    "text": "totally wrong line of reasoning the problem is that okay this uh this",
    "start": "389639",
    "end": "394880"
  },
  {
    "text": "separation is is really good but in order to be in order for the VM to be useful you have to actually drill holes",
    "start": "394880",
    "end": "402400"
  },
  {
    "text": "in this uh container right we need to let VM communicate with the outside",
    "start": "402400",
    "end": "407680"
  },
  {
    "text": "world to be useful to exchange information do anything useful right and that's where the majority of the problem",
    "start": "407680",
    "end": "414240"
  },
  {
    "text": "live okay so another component is uh you may name it the core of the hypervisor",
    "start": "414240",
    "end": "420520"
  },
  {
    "text": "so it's a piece of code that actually handles the VM exits from the VM do the necessary housekeeping like allocating",
    "start": "420520",
    "end": "428560"
  },
  {
    "text": "memory for the VM etc etc and it's not very interesting but again one of the",
    "start": "428560",
    "end": "434759"
  },
  {
    "text": "main uh functionality that it needs to provide is to provide some channels some",
    "start": "434759",
    "end": "440240"
  },
  {
    "text": "communication channels between uh the code running in the VM and the outside world again so that VM can uh",
    "start": "440240",
    "end": "448120"
  },
  {
    "text": "communicate and be useful and again this part this hypervisor code uh is not very",
    "start": "448120",
    "end": "456000"
  },
  {
    "text": "large even in in um Mainline of the Shelf products uh again",
    "start": "456000",
    "end": "463199"
  },
  {
    "text": "it doesn't do much really majority of the code is is really management code",
    "start": "463199",
    "end": "468800"
  },
  {
    "text": "right that's not even under the control of the attacker so again uh there is not",
    "start": "468800",
    "end": "474520"
  },
  {
    "text": "many issues with that part of the code right and also it means that if you that",
    "start": "474520",
    "end": "480159"
  },
  {
    "text": "uh okay my virtualization system uses hypervisor that is very small and it",
    "start": "480159",
    "end": "486440"
  },
  {
    "text": "just passes messages right and it has been verified yay that's that's great but again uh what other parts of the",
    "start": "486440",
    "end": "493759"
  },
  {
    "text": "virtualization system are relevant as SEC security critical and has not been verified right so that's a question to",
    "start": "493759",
    "end": "500240"
  },
  {
    "text": "ask again if if you just verify this single piece of software that's not the",
    "start": "500240",
    "end": "505319"
  },
  {
    "text": "end of the story right okay so what what else uh if we want to run in this VM",
    "start": "505319",
    "end": "513479"
  },
  {
    "text": "something looking like a normal operating system so windows or Linux or whatever it will expect it can talk to",
    "start": "513479",
    "end": "519560"
  },
  {
    "text": "Hardware right so it can write to PCI config access space it can write to IOP",
    "start": "519560",
    "end": "525680"
  },
  {
    "text": "ports etc etc so uh the job of the hypervisor is to make an illusion that",
    "start": "525680",
    "end": "530720"
  },
  {
    "text": "this operation actually work and then that they um act on some sort of",
    "start": "530720",
    "end": "537040"
  },
  {
    "text": "Hardware so that's the job of the device emulator so the hypervisor uh is responsible for um intercepting all",
    "start": "537040",
    "end": "544440"
  },
  {
    "text": "these actions by the device driver running the DM and informing the device UL device emulator okay the network",
    "start": "544440",
    "end": "551839"
  },
  {
    "text": "carard driver in the VM tries to send a packet right and device emulator does",
    "start": "551839",
    "end": "557519"
  },
  {
    "text": "this job on the behalf of the VM and this is a more problematic part there",
    "start": "557519",
    "end": "563760"
  },
  {
    "text": "are issues with that code because uh this code is relatively large right",
    "start": "563760",
    "end": "569560"
  },
  {
    "text": "again Modern Hardware is uh relatively complex right it has you know hundreds",
    "start": "569560",
    "end": "575240"
  },
  {
    "text": "of registers that you need to emulate in order uh to for the VM to be able to use it and again it creates some complexity",
    "start": "575240",
    "end": "582880"
  },
  {
    "text": "that inevitably translates into vulnerabilities yeah so this is this",
    "start": "582880",
    "end": "589920"
  },
  {
    "text": "this is the really problematic part that you you should you should be aware",
    "start": "589920",
    "end": "595040"
  },
  {
    "text": "of and on top of that uh a lot of uh virtualization vendors try to provide",
    "start": "595040",
    "end": "601880"
  },
  {
    "text": "some additional Services uh to the VM so once you have uh device simulator running you do not need anything else to",
    "start": "601880",
    "end": "608600"
  },
  {
    "text": "actually boot the VM and use it right but for functionality and ease of use uh",
    "start": "608600",
    "end": "615360"
  },
  {
    "text": "a lot of vendors provide some additional services so again there is some uh code",
    "start": "615360",
    "end": "622880"
  },
  {
    "text": "running outside of VM so it's security critical from our point of view uh there is a communication Channel with some",
    "start": "622880",
    "end": "629480"
  },
  {
    "text": "pseudo driver in the VM and this code uh listens for requests and the typical",
    "start": "629480",
    "end": "636240"
  },
  {
    "text": "example is for instance shared folders functionality right it's very useful to uh to have some fragment of the file",
    "start": "636240",
    "end": "644639"
  },
  {
    "text": "system on the Hol be available directly to the VM right very useful functionality but again it immediately",
    "start": "644639",
    "end": "652360"
  },
  {
    "text": "creates an an attack surface and again this part also tends to be large it also",
    "start": "652360",
    "end": "658320"
  },
  {
    "text": "tends to be not so carefully written right because okay when you write write the hypervisor you have to be you",
    "start": "658320",
    "end": "664839"
  },
  {
    "text": "know very well skilled Etc but you know for for running some crappy code running on the host uh anyone can do it and that",
    "start": "664839",
    "end": "672040"
  },
  {
    "text": "creates problems okay and uh finally there is another functionality that that is",
    "start": "672040",
    "end": "679560"
  },
  {
    "text": "potentially dangerous namely for many reasons uh first of all performance but",
    "start": "679560",
    "end": "685079"
  },
  {
    "text": "also security you could give uh the VM Direct control of a real piece of",
    "start": "685079",
    "end": "690800"
  },
  {
    "text": "Hardware so allow this VM code command real PCI device not some emulated",
    "start": "690800",
    "end": "697720"
  },
  {
    "text": "virtual ones but really give give it access to the actual registers of the PCI",
    "start": "697720",
    "end": "703360"
  },
  {
    "text": "device and that creates a problems one of this problems problem is that PCI",
    "start": "703360",
    "end": "708760"
  },
  {
    "text": "device can access host memory as well right using dma direct memory access so",
    "start": "708760",
    "end": "714440"
  },
  {
    "text": "if you uh assign PCI device to a potentially untrusted VM that can be",
    "start": "714440",
    "end": "719680"
  },
  {
    "text": "malicious then you need to make sure that it cannot instruct this device to do dma for instance to override",
    "start": "719680",
    "end": "726000"
  },
  {
    "text": "hypervisor body and there is another technology named vtd that you need to uh",
    "start": "726000",
    "end": "731600"
  },
  {
    "text": "to enable to actually use it okay so uh maybe some some obvious uh",
    "start": "731600",
    "end": "739480"
  },
  {
    "text": "summings so if the goal of the virtualization system is to maximize features make it really friendly for the",
    "start": "739480",
    "end": "744959"
  },
  {
    "text": "user right make it really usable then the attx surface grows because you in increase the code base you increase uh",
    "start": "744959",
    "end": "752240"
  },
  {
    "text": "the number of API that must be handled by the security relevant code and that's",
    "start": "752240",
    "end": "757320"
  },
  {
    "text": "almost inexorably results in inv vulnerabilities but that does need to be",
    "start": "757320",
    "end": "763560"
  },
  {
    "text": "uh the problem right if again if the goal is features and if you do not expect your VMS to be malicious right",
    "start": "763560",
    "end": "770800"
  },
  {
    "text": "you use it VMS just you know to make computation easy or whatever then you",
    "start": "770800",
    "end": "776680"
  },
  {
    "text": "don't expect that it will run malware so you don't need to worry about security and you can use uh that kind of",
    "start": "776680",
    "end": "783399"
  },
  {
    "text": "hypervisor but on the other hand if uh the reason why you're using virtualization is to provide security by",
    "start": "783399",
    "end": "790959"
  },
  {
    "text": "isolation you want to be able to just isolate potentially compromised code in some cave and uh not let it interact",
    "start": "790959",
    "end": "799320"
  },
  {
    "text": "with the rest of the system freely then uh then it becomes a critical part right then you must be careful when designing",
    "start": "799320",
    "end": "807440"
  },
  {
    "text": "or choosing the hypervisor uh to see how these features are implemented right or",
    "start": "807440",
    "end": "812519"
  },
  {
    "text": "uh whether you have control on on what amount of attack service you you",
    "start": "812519",
    "end": "818680"
  },
  {
    "text": "expose okay so uh the summary is uh hypervisors have nonzero attack surface",
    "start": "818839",
    "end": "825079"
  },
  {
    "text": "right there are real life vulnerabilities in it really so uh what's what's the conclusion we should",
    "start": "825079",
    "end": "830959"
  },
  {
    "text": "just abandon it for any security purposes right if if they are so",
    "start": "830959",
    "end": "836120"
  },
  {
    "text": "unsecure uh the answer is not straightforward because uh what's what",
    "start": "836120",
    "end": "841279"
  },
  {
    "text": "are the other options what other Technologies can we use for uh isolating",
    "start": "841279",
    "end": "847399"
  },
  {
    "text": "malicious code and isolation is is a crucial uh technology because",
    "start": "847399",
    "end": "853639"
  },
  {
    "text": "uh everyone has essentially given up on writing the code that has no vulnerabilities that is secure and works",
    "start": "853639",
    "end": "860880"
  },
  {
    "text": "as as as expected especially if you talk about large applications like browsers",
    "start": "860880",
    "end": "866920"
  },
  {
    "text": "document Ed digitals then it's totally hopeless and yesterday you could listen to a talk",
    "start": "866920",
    "end": "872880"
  },
  {
    "text": "guys showed that they wrote a single fer that has found 100 vulnerability in I so",
    "start": "872880",
    "end": "879040"
  },
  {
    "text": "it's really really sad so what uh what's the current Trend nowadays in the",
    "start": "879040",
    "end": "885759"
  },
  {
    "text": "industry is that you have to isolate in in in case of an application you just uh",
    "start": "885759",
    "end": "892320"
  },
  {
    "text": "try to isolate a large portion of the code the one for instance does html passing",
    "start": "892320",
    "end": "898440"
  },
  {
    "text": "ET Etc it run it in a some sort of sandbox and uh usually this sandbox is",
    "start": "898440",
    "end": "905040"
  },
  {
    "text": "implemented uh by using the operating system facilities right so you think",
    "start": "905040",
    "end": "910360"
  },
  {
    "text": "about Solutions like Chrome sandbox or Adobe Reader sandbox uh they just select",
    "start": "910360",
    "end": "916120"
  },
  {
    "text": "some portion of the code wrap it in some sort of sandbox based on on OS and",
    "start": "916120",
    "end": "921360"
  },
  {
    "text": "that's uh intended to limit uh the attack surface okay that's good if you",
    "start": "921360",
    "end": "927680"
  },
  {
    "text": "remember what how how how the word for",
    "start": "927680",
    "end": "933160"
  },
  {
    "text": "exploitation look in 2009 or 2010 then Adobe Reader was a primary target there",
    "start": "933160",
    "end": "938199"
  },
  {
    "text": "were exploits for it released like every two weeks right and after they used this separation introduced The Sandbox it",
    "start": "938199",
    "end": "944160"
  },
  {
    "text": "essentially dropped to zero so that's very nice uh the problem with this approach is that that uh technology of",
    "start": "944160",
    "end": "952160"
  },
  {
    "text": "sandboxing based on the operating system facilities is prone to exploitation via kernel vulnerabilities right because",
    "start": "952160",
    "end": "959160"
  },
  {
    "text": "again if you even if you run in a sandbox but if you can launch a kernel exploit and get execution in the context",
    "start": "959160",
    "end": "964639"
  },
  {
    "text": "of the kernel you can do anything you want and the problem is with this is at least on Windows the kernel attack",
    "start": "964639",
    "end": "971360"
  },
  {
    "text": "surface is huge right and we mostly interested in in Windows so you have 400",
    "start": "971360",
    "end": "976680"
  },
  {
    "text": "system calls 800 win 32 cases system calls and other things like driver iotl",
    "start": "976680",
    "end": "982839"
  },
  {
    "text": "or wddm escapes to graphic drivers so that that is really huge attack surface",
    "start": "982839",
    "end": "989880"
  },
  {
    "text": "and the obvious result is that for instance the previous year there was 76 different CV items allocated for",
    "start": "989880",
    "end": "996880"
  },
  {
    "text": "problems in Windows kernel mode so that's really huge attack surface and the problems happen right and this is",
    "start": "996880",
    "end": "1003639"
  },
  {
    "text": "not theoretical because if you look at the contest like Pawn to own or similar you really see that's exactly the way",
    "start": "1003639",
    "end": "1010120"
  },
  {
    "text": "how guys are able to break all the security of the browser first they",
    "start": "1010120",
    "end": "1015759"
  },
  {
    "text": "get code execution in the sandbox and then they use kernel explo to break out of it so that's that's really a",
    "start": "1015759",
    "end": "1022040"
  },
  {
    "text": "problem okay so it would be nice if you if you could compare in some quantitative way uh the isolation",
    "start": "1022040",
    "end": "1028798"
  },
  {
    "text": "implemented by the well- written hypervisor right and uh say kernel of the operating system and",
    "start": "1028799",
    "end": "1037199"
  },
  {
    "text": "it's difficult to do in a really convincing way because these are two totally different pieces of software",
    "start": "1037199",
    "end": "1043160"
  },
  {
    "text": "right um again presenting different API so it's difficult what people are very",
    "start": "1043160",
    "end": "1050720"
  },
  {
    "text": "fond of doing is just measure the Total Line of codes or trusted Computing base for that matter and see if this product",
    "start": "1050720",
    "end": "1058480"
  },
  {
    "text": "has a lot of lines of code then of course it's it's less secure and this reasoning is almost entirely useless",
    "start": "1058480",
    "end": "1065280"
  },
  {
    "text": "right that's that's really sad the reason is that the total line of the",
    "start": "1065280",
    "end": "1071080"
  },
  {
    "text": "code does not tell you what percentage of the lines of code are actually devoted to uh treat the untrusted input",
    "start": "1071080",
    "end": "1079280"
  },
  {
    "text": "to deal with an attacker right and we charts are relatively harmless because they are just for bookkeeping or",
    "start": "1079280",
    "end": "1086559"
  },
  {
    "text": "management purposes so that's really comparing lines of code or tcbs doesn't",
    "start": "1086559",
    "end": "1093000"
  },
  {
    "text": "tell you almost anything about security of the system if you really need the numbers if you must hear some numbers so if you take",
    "start": "1093000",
    "end": "1101080"
  },
  {
    "text": "xen 44 Z so the recent one it has about 1.7 Millions lines of code so quite a",
    "start": "1101080",
    "end": "1107400"
  },
  {
    "text": "lot again uh the point is that it's mostly blow",
    "start": "1107400",
    "end": "1112640"
  },
  {
    "text": "for instance it includes a lot of drivers for virtual devices which nobody would use so you can strip it uh like by",
    "start": "1112640",
    "end": "1120320"
  },
  {
    "text": "factor of about 10 right 110 kilos line of code of user mode code and 60,000",
    "start": "1120320",
    "end": "1127120"
  },
  {
    "text": "lines of code in ring zero and still have uh functionality sufficient to to run VMS in in in a in a useful Manner",
    "start": "1127120",
    "end": "1136000"
  },
  {
    "text": "and if you compare it with Windows 7 Kel is believed have around 2 million SL of code and likely uh when 32k driver is is",
    "start": "1136000",
    "end": "1145440"
  },
  {
    "text": "larger then you can see that uh there is a huge gap right at least factor of 10",
    "start": "1145440",
    "end": "1151360"
  },
  {
    "text": "but again it's this comparison is almost useless again and in fact the difference in in",
    "start": "1151360",
    "end": "1157919"
  },
  {
    "text": "the tax service is even larger uh okay",
    "start": "1157919",
    "end": "1163760"
  },
  {
    "text": "so again what it means is that if you want to hear some really meaningful",
    "start": "1163760",
    "end": "1168799"
  },
  {
    "text": "comparison between these two you just need to rely on someone's experience right for someone who is well aware how",
    "start": "1168799",
    "end": "1176799"
  },
  {
    "text": "actually these two solutions work and not the history of of the vulnerability in these two products and again most",
    "start": "1176799",
    "end": "1183039"
  },
  {
    "text": "agree that again attack surface of a well-written hypervisor is significantly smaller than say windows Cam and for",
    "start": "1183039",
    "end": "1189440"
  },
  {
    "text": "instance you can look at the papers for the Microsoft drawbridge",
    "start": "1189440",
    "end": "1194679"
  },
  {
    "text": "project and they explain really in a diligent way why they use a hypervisor",
    "start": "1194679",
    "end": "1200840"
  },
  {
    "text": "to provide isolation so that's nice uh there are also some",
    "start": "1200840",
    "end": "1206919"
  },
  {
    "text": "uh hard facts that are easy to back with",
    "start": "1206919",
    "end": "1212039"
  },
  {
    "text": "facts right so the VM exit boundary so the boundary between the VM and the hypervisor is much stronger than the",
    "start": "1212039",
    "end": "1219159"
  },
  {
    "text": "cisal boundary so the boundary between the user mode and the operating system Kel and uh the main issue is that uh",
    "start": "1219159",
    "end": "1229080"
  },
  {
    "text": "in case of Kel user mode boundary you have essentially the same address space right some fragments of the uh address",
    "start": "1229080",
    "end": "1236679"
  },
  {
    "text": "space are reserved for the hypervisor but still uh you have the same page tables the same address space and that",
    "start": "1236679",
    "end": "1242600"
  },
  {
    "text": "creates a lot of problems right so how how normally an kernel exploit work is",
    "start": "1242600",
    "end": "1249280"
  },
  {
    "text": "uh that an attacker can prepare some data structures in user mode and trick kernel into believing that it's actually",
    "start": "1249280",
    "end": "1255520"
  },
  {
    "text": "kernel mod structures right and that creates a problem like null point the reference in the kernel primary",
    "start": "1255520",
    "end": "1261120"
  },
  {
    "text": "example uh it's again the problem is that address spaces is the same",
    "start": "1261120",
    "end": "1266919"
  },
  {
    "text": "similarly if you consider uh breaking out of uh operating system sandbox so",
    "start": "1266919",
    "end": "1273640"
  },
  {
    "text": "once you have code execution in for instance Chrome sendbox then you know what is the basis of the libraries you",
    "start": "1273640",
    "end": "1280440"
  },
  {
    "text": "know the virtual memory layout and the problem is that in the processes running outside of the sendbox the libraries",
    "start": "1280440",
    "end": "1287400"
  },
  {
    "text": "have the same base right because they run of the same system so again some important piece of information are the",
    "start": "1287400",
    "end": "1293520"
  },
  {
    "text": "same in the sandbox as outside of the sandbox so that's that's another problem",
    "start": "1293520",
    "end": "1298960"
  },
  {
    "text": "uh another thing is that at least until recently the windows kernel just handed",
    "start": "1298960",
    "end": "1305520"
  },
  {
    "text": "the information about the memory layout for an attacker for free so there was an API that an attacker could use uh dear",
    "start": "1305520",
    "end": "1311919"
  },
  {
    "text": "Kel what's the base of the kernel currently and it would hand it for free it got better recently but only on",
    "start": "1311919",
    "end": "1317799"
  },
  {
    "text": "Windows 8 one and only for untrusted processes but there will be more",
    "start": "1317799",
    "end": "1323080"
  },
  {
    "text": "problems with this K aslr on Windows uh finally uh if you think about",
    "start": "1323080",
    "end": "1330600"
  },
  {
    "text": "uh exploiting browser vulnerabilities uh the reason why they are so effectively and reliably",
    "start": "1330600",
    "end": "1338000"
  },
  {
    "text": "exploited is again because an attacker has a lot of control over uh the memory",
    "start": "1338000",
    "end": "1343400"
  },
  {
    "text": "layout in the browser mostly because it can use JavaScript and it can do things like Heap and shy so",
    "start": "1343400",
    "end": "1350200"
  },
  {
    "text": "allocate some he blocks that will be aligned in a proper way and that creates",
    "start": "1350200",
    "end": "1356039"
  },
  {
    "text": "uh the memory layout required for the exploitation so it sounds almost like a joke but uh the hypervisors are",
    "start": "1356039",
    "end": "1363440"
  },
  {
    "text": "inherently more secure than uh for instance browsers because they do not have JavaScript interpreter in it right",
    "start": "1363440",
    "end": "1370559"
  },
  {
    "text": "again sounds funny but that's actually true and again if you look at the hypervisor uh you don't have that kinds",
    "start": "1370559",
    "end": "1377840"
  },
  {
    "text": "of the problems right you have a different address space that's for one so uh how what you",
    "start": "1377840",
    "end": "1384760"
  },
  {
    "text": "need to get a real exploit memory corruption based exploit against the hypervisor is you need two uh Primitives",
    "start": "1384760",
    "end": "1393440"
  },
  {
    "text": "the first one is information leak from the hypervisor so that you know essentially uh what are the uh what the",
    "start": "1393440",
    "end": "1400880"
  },
  {
    "text": "memory layout and then some right primitive to get the code execution",
    "start": "1400880",
    "end": "1406120"
  },
  {
    "text": "and most of the exploits again hypervisors that I have seen uh do not",
    "start": "1406120",
    "end": "1412720"
  },
  {
    "text": "work this way they use on some shortcuts like aslr is not functional the for",
    "start": "1412720",
    "end": "1418000"
  },
  {
    "text": "instance the binary the user mode binary of the hypervisor has not been compiled with proper flag right and then",
    "start": "1418000",
    "end": "1423960"
  },
  {
    "text": "exploitation isn't easy or there are DLS that are non aslr compatible then again",
    "start": "1423960",
    "end": "1429400"
  },
  {
    "text": "exploitation is easy and again almost all the exploits against virtualization software that I have seen I work this",
    "start": "1429400",
    "end": "1435760"
  },
  {
    "text": "way which essentially say that if the vendor neglected to use this basic you know one1 security practices and it it",
    "start": "1435760",
    "end": "1445120"
  },
  {
    "text": "doesn't care much about security there is one example of an exploit uh which is different and I'm talking about Cloud",
    "start": "1445120",
    "end": "1451360"
  },
  {
    "text": "birth exploit so it was a vulnerability in VMware uh discussed in blackhe at USA",
    "start": "1451360",
    "end": "1456600"
  },
  {
    "text": "2009 and this is different this time the underlying vulnerability was so horrible that it allowed an attacker for redite",
    "start": "1456600",
    "end": "1463679"
  },
  {
    "text": "access to the address space of the device model and then this this cap such",
    "start": "1463679",
    "end": "1468880"
  },
  {
    "text": "powerful that you can write very uh reliable exploit even cross cross",
    "start": "1468880",
    "end": "1474360"
  },
  {
    "text": "platform okay uh okay so there is one important",
    "start": "1474360",
    "end": "1480120"
  },
  {
    "text": "point that normally uh you do not have to choose between the security or",
    "start": "1480120",
    "end": "1485399"
  },
  {
    "text": "isolation implemented by the operating system or the virtualization the reason is uh the beauty of the virtualization",
    "start": "1485399",
    "end": "1492039"
  },
  {
    "text": "is that you can just stuck it on top of the existing operating system",
    "start": "1492039",
    "end": "1497320"
  },
  {
    "text": "right so you can do things like that so this diagram shows how Chrome sandbox",
    "start": "1497320",
    "end": "1503039"
  },
  {
    "text": "works right you have the broker and the sandbox and you can continue to use it",
    "start": "1503039",
    "end": "1508399"
  },
  {
    "text": "but just wrap all of it in a VM right so the idea is that with this",
    "start": "1508399",
    "end": "1515080"
  },
  {
    "text": "setup an attacker would have to first break out for the Chrome sendbox and then would have to break out from the DM",
    "start": "1515080",
    "end": "1521960"
  },
  {
    "text": "sand box right so combine two solutions and again the beauty of the vectorization is that you can do it more",
    "start": "1521960",
    "end": "1527559"
  },
  {
    "text": "or less easily right you can just pull the VM layer on top of an existing Security",
    "start": "1527559",
    "end": "1533520"
  },
  {
    "text": "Solutions and that's really nice it's pure gain but there are some assumptions so uh first of all you have to assume",
    "start": "1533520",
    "end": "1540799"
  },
  {
    "text": "that uh hypervisor can be attacked from the DM only once the attacker in the VM",
    "start": "1540799",
    "end": "1546399"
  },
  {
    "text": "has root privileges right because if an if the hypervisor",
    "start": "1546399",
    "end": "1551520"
  },
  {
    "text": "can be attacked from within the sandbox and it increases the attack surface right so that would be wrong",
    "start": "1551520",
    "end": "1558760"
  },
  {
    "text": "and that assumption holds for majority of the problems VMware is I think the only exception that exposes some",
    "start": "1558760",
    "end": "1566200"
  },
  {
    "text": "hypervisor functionality to unprivileged user mode then you have to assume that there is nothing valuable in a VM right",
    "start": "1566200",
    "end": "1573520"
  },
  {
    "text": "because if uh after compromising this OS sandbox attacker gets everything he",
    "start": "1573520",
    "end": "1579200"
  },
  {
    "text": "wants for instance access to the internal Network then there is no reason to escalate privileges further right so",
    "start": "1579200",
    "end": "1586159"
  },
  {
    "text": "in that case uh the wrapping in VM does not help you and then finally you have",
    "start": "1586159",
    "end": "1591760"
  },
  {
    "text": "to assume that uh the presence of the kernel drivers installed by the",
    "start": "1591760",
    "end": "1597279"
  },
  {
    "text": "hypervisor in the VM uh that they do not weaken the security posture of the",
    "start": "1597279",
    "end": "1602679"
  },
  {
    "text": "kernel in a significant way because if again this code running in the Chrome sandbox can talk to the device driver",
    "start": "1602679",
    "end": "1609880"
  },
  {
    "text": "installed in the VM by the hypervisor and uh use it to break out of the sandbox and then it's bad okay so",
    "start": "1609880",
    "end": "1617000"
  },
  {
    "text": "these are nonrival uh assumptions but actually they are uh",
    "start": "1617000",
    "end": "1622279"
  },
  {
    "text": "most of the time true and then again just layering VM on",
    "start": "1622279",
    "end": "1628000"
  },
  {
    "text": "top of of all of this is really really a good idea so to summarize it really",
    "start": "1628000",
    "end": "1635640"
  },
  {
    "text": "isolation by virtualization can improve Security even if they off the shelf products that have a lot of problems Etc",
    "start": "1635640",
    "end": "1643080"
  },
  {
    "text": "again in order to maximize security hypervisor related code should be small right to make the attack surface as",
    "start": "1643080",
    "end": "1648960"
  },
  {
    "text": "small as possible and then the good thing is that uh it's possible to design the hypervisor in a way that uh can",
    "start": "1648960",
    "end": "1655679"
  },
  {
    "text": "provide sensible functionality without sacrificing security and I will try to",
    "start": "1655679",
    "end": "1660760"
  },
  {
    "text": "show you examples later okay so uh now we'll have a couple of examples of of",
    "start": "1660760",
    "end": "1666799"
  },
  {
    "text": "past and not so very distant vulnerabilities just to illustrate what the attack surface right okay so the",
    "start": "1666799",
    "end": "1674480"
  },
  {
    "text": "first case is is really not that interesting but it is very recent right it's xen security advisory 108 that was",
    "start": "1674480",
    "end": "1682200"
  },
  {
    "text": "released like two weeks ago and it's received a lot of media hype because",
    "start": "1682200",
    "end": "1689399"
  },
  {
    "text": "uh there was prediction that it's a very critical bu that would allow you really to to fully compromise Cloud providers",
    "start": "1689399",
    "end": "1697919"
  },
  {
    "text": "in fact uh it's not that critical uh the",
    "start": "1697919",
    "end": "1703039"
  },
  {
    "text": "what what happens is that VM can trigger read beyond the buffer in the in the hypervisor space",
    "start": "1703039",
    "end": "1709000"
  },
  {
    "text": "so if you look at at the div uh it's a very simple simple bug you simply use a",
    "start": "1709000",
    "end": "1714120"
  },
  {
    "text": "wrong constant in some range check right so that's really really very simple",
    "start": "1714120",
    "end": "1719440"
  },
  {
    "text": "thing again the impact is that some data leak from the hypervisor memory or you",
    "start": "1719440",
    "end": "1725360"
  },
  {
    "text": "can crash the hypervisor if you access the mmap memory so again not not very interesting I will show you more sever",
    "start": "1725360",
    "end": "1732600"
  },
  {
    "text": "examples later again it received in my opinion unjust unjustified amount of of",
    "start": "1732600",
    "end": "1738159"
  },
  {
    "text": "just from from the media okay so another another thing is uh for relatively new",
    "start": "1738159",
    "end": "1746760"
  },
  {
    "text": "vulnerabilities in Oracle virtual box that I have found and reported to the Oracle in March 2014 so they were fixed",
    "start": "1746760",
    "end": "1754480"
  },
  {
    "text": "in 2014 July CPU so just before the blackout USA When U this presentation",
    "start": "1754480",
    "end": "1759880"
  },
  {
    "text": "was delivered for the first time and they are not that critical or that",
    "start": "1759880",
    "end": "1765000"
  },
  {
    "text": "horrible but they're interesting in a way that uh they are relatively new but also they",
    "start": "1765000",
    "end": "1771519"
  },
  {
    "text": "show you the common errors or mistake or design problems that can be done by uh",
    "start": "1771519",
    "end": "1781000"
  },
  {
    "text": "the virualization software vendor okay this virtual box vulnerabilities are most related to the",
    "start": "1781000",
    "end": "1786960"
  },
  {
    "text": "shared folder functionality so just just to reiterate uh how it works so you have a VM that VM has some Communication",
    "start": "1786960",
    "end": "1794960"
  },
  {
    "text": "channel to the vbox sdl process that runs on the house so outside of VM and",
    "start": "1794960",
    "end": "1800159"
  },
  {
    "text": "the purpose of of this uh Communication channel is to uh give this VM access to",
    "start": "1800159",
    "end": "1806240"
  },
  {
    "text": "some fragment of the file system of the host so uh the protocol here is that VM",
    "start": "1806240",
    "end": "1811360"
  },
  {
    "text": "can send please read some PA for me and then this vbox sdl process does exactly",
    "start": "1811360",
    "end": "1817960"
  },
  {
    "text": "that uh accesses the file that's under the",
    "start": "1817960",
    "end": "1823039"
  },
  {
    "text": "shed folders root and returns uh the result to the vi",
    "start": "1823039",
    "end": "1829039"
  },
  {
    "text": "the problem with this code is that it's uh unfortunately to too large for instance it supports both utf8 and uni",
    "start": "1829039",
    "end": "1835480"
  },
  {
    "text": "code PA names so uh this path name here request PA name can be both utf8 or unic",
    "start": "1835480",
    "end": "1841919"
  },
  {
    "text": "code right and the guest can select which one encoding CL and does not check",
    "start": "1841919",
    "end": "1847200"
  },
  {
    "text": "null termination early maybe because it's difficult to tell whether a PA name is null terminated if you don't know if",
    "start": "1847200",
    "end": "1852399"
  },
  {
    "text": "it's utf8 or unicor right also this code needs to do casing Corrections right so",
    "start": "1852399",
    "end": "1858840"
  },
  {
    "text": "uh if your VM is Windows that usually does not care on the casing of the path names but the host is Linux that",
    "start": "1858840",
    "end": "1866200"
  },
  {
    "text": "distinguishes uh the path names of different casing then you have to adjust casing in some cases and again all of",
    "start": "1866200",
    "end": "1872320"
  },
  {
    "text": "that is done in in the in the hypervisor then finally guest can",
    "start": "1872320",
    "end": "1877639"
  },
  {
    "text": "specify puth delimiter so instead of separating puth components with Slash you can say there's an arbitrary",
    "start": "1877639",
    "end": "1884360"
  },
  {
    "text": "character and VV visor please use it as a PA separator again that's simply too much if you just just look at",
    "start": "1884360",
    "end": "1891120"
  },
  {
    "text": "it and the first problem is memory corruption in in a in a function that builds the full path so essentially what",
    "start": "1891120",
    "end": "1898039"
  },
  {
    "text": "it does it tries to do this path delimiter Corrections right so you have",
    "start": "1898039",
    "end": "1903159"
  },
  {
    "text": "some uh buffer that comes from the VM and again it's not null terminated",
    "start": "1903159",
    "end": "1908639"
  },
  {
    "text": "that's that's an issue and what what this code does is just scans for each occurrence of the character specified by",
    "start": "1908639",
    "end": "1915600"
  },
  {
    "text": "uh the VM and changes it to the P the limiter changes it to the Slash and does",
    "start": "1915600",
    "end": "1921679"
  },
  {
    "text": "it until it sees terminating null and again because there is no ter null termination again VM can send the string",
    "start": "1921679",
    "end": "1929399"
  },
  {
    "text": "that is not null terminated it means that the hypervisor will overwrite memory after uh the buffer right so",
    "start": "1929399",
    "end": "1935519"
  },
  {
    "text": "again memory corruption uh this is a very limited memory corruption and uh I don't know",
    "start": "1935519",
    "end": "1941320"
  },
  {
    "text": "how to actually exploited in case of the box it doesn't mean it's impossible again in comparison if such a",
    "start": "1941320",
    "end": "1948159"
  },
  {
    "text": "vulnerability was in a browser code uh its exploitation would be really routine right the usual trick is that uh you",
    "start": "1948159",
    "end": "1955399"
  },
  {
    "text": "massage the Heap so that um after the input buffer from the from that is that",
    "start": "1955399",
    "end": "1961600"
  },
  {
    "text": "is then attack Vector you store some JavaScript array objects right and array objects is interesting because if you",
    "start": "1961600",
    "end": "1967600"
  },
  {
    "text": "overwrite only one bite in it namely the size field then it gives you a lot of capabilities but because you can write",
    "start": "1967600",
    "end": "1973960"
  },
  {
    "text": "and read beyond the end of the array and then it's essentially game over you have R access to all the address",
    "start": "1973960",
    "end": "1980760"
  },
  {
    "text": "space okay so the lesson uh the host service code should accept only narrow",
    "start": "1980760",
    "end": "1986360"
  },
  {
    "text": "input right and uh all the conversions normalization should be done in the guest if if",
    "start": "1986360",
    "end": "1993559"
  },
  {
    "text": "possible okay another one is new vulnerabilities shared for the directory",
    "start": "1993559",
    "end": "1999760"
  },
  {
    "text": "traveler again uh if you receive the puff name you should be aware that it",
    "start": "1999760",
    "end": "2005279"
  },
  {
    "text": "can contains things like dot components right so you cannot just blindly concatenate it to the sholders road",
    "start": "2005279",
    "end": "2012600"
  },
  {
    "text": "because you you get directory traversa immediately so uh you need some way of",
    "start": "2012600",
    "end": "2018320"
  },
  {
    "text": "sanitize input and how Fe vbox does it is again a little bit too complicated so",
    "start": "2018320",
    "end": "2023399"
  },
  {
    "text": "essentially you count the number of double dot uh components in the path name and you count the number of normal",
    "start": "2023399",
    "end": "2030159"
  },
  {
    "text": "path names of normal components and if the number of the normal path name",
    "start": "2030159",
    "end": "2036320"
  },
  {
    "text": "components is greater than the double dots you allow it because there is no triers such a puth would be uh rejected",
    "start": "2036320",
    "end": "2044200"
  },
  {
    "text": "because you have too many double dots components and again it's a bit too complicated right and interestingly uh",
    "start": "2044200",
    "end": "2050919"
  },
  {
    "text": "the problem is here that this code treats both back slash and slash as the path separator and it's okay on Windows",
    "start": "2050919",
    "end": "2058720"
  },
  {
    "text": "because uh on Windows both slash and backlash is the path separator but it's not okay on posix host for instance on",
    "start": "2058720",
    "end": "2066000"
  },
  {
    "text": "Linux because on Linux back slash is not a pth separator so what you can do is create such a directory in a Shar folder",
    "start": "2066000",
    "end": "2073800"
  },
  {
    "text": "so this part is actually a single directory right not nine directory not",
    "start": "2073800",
    "end": "2080720"
  },
  {
    "text": "nine directories and then if you access that path name uh vbox will allow it",
    "start": "2080720",
    "end": "2086520"
  },
  {
    "text": "right because it it will think that you have nine normal path components here and then nine double dot component here",
    "start": "2086520",
    "end": "2092158"
  },
  {
    "text": "so no problem but in fact this is a single directory right and that's second",
    "start": "2092159",
    "end": "2097960"
  },
  {
    "text": "dot will uh Traverse past the uh Shad",
    "start": "2097960",
    "end": "2103520"
  },
  {
    "text": "folder okay the lesson same as before this sanitization should be simple really to not make too many errors in it",
    "start": "2103520",
    "end": "2110359"
  },
  {
    "text": "for instance you could just check for a occurrence of a single double dot and then immediately reject it it would be",
    "start": "2110359",
    "end": "2116480"
  },
  {
    "text": "enough right and you have some OS specific tricks that you can use and again uh just buer portable code is",
    "start": "2116480",
    "end": "2123880"
  },
  {
    "text": "sometimes very difficult to write in a secure way okay the third one is a data leak",
    "start": "2123880",
    "end": "2129599"
  },
  {
    "text": "it's not that important so let's keep it I'm running a bit late the fourth one is is even more funny so it's not an",
    "start": "2129599",
    "end": "2137079"
  },
  {
    "text": "something that can be triggered by the VM but it's an uh escalation of",
    "start": "2137079",
    "end": "2142119"
  },
  {
    "text": "privilege on the host so if there is virtual box installed on the system",
    "start": "2142119",
    "end": "2148320"
  },
  {
    "text": "unprivileged user mode code can escalate the CER and how it works uh vbox has two",
    "start": "2148320",
    "end": "2154960"
  },
  {
    "text": "components one in user mode and another driver in the kernel and they need to communicate between the between",
    "start": "2154960",
    "end": "2162400"
  },
  {
    "text": "themselves and the way how uh vbox Engineers arrang it in this case was",
    "start": "2162400",
    "end": "2168319"
  },
  {
    "text": "very efficient shared memory so you have some location in user mode address space",
    "start": "2168319",
    "end": "2174960"
  },
  {
    "text": "that is mapped to the same memory as uh some location in the kernel in the vmm r",
    "start": "2174960",
    "end": "2182960"
  },
  {
    "text": "zero that's his driver and that would be fine that's not a problem in itself the problem is that the kernel component",
    "start": "2182960",
    "end": "2188960"
  },
  {
    "text": "trust this uh stru VM here without any limit particularly uh",
    "start": "2188960",
    "end": "2195920"
  },
  {
    "text": "in this structure there are Pointers to the kernel procedures and again this driver just",
    "start": "2195920",
    "end": "2202520"
  },
  {
    "text": "blindly de references them so it means that exploitation is simple in this user",
    "start": "2202520",
    "end": "2207880"
  },
  {
    "text": "mode process you can just overwrite uh the location this structure that holds",
    "start": "2207880",
    "end": "2212920"
  },
  {
    "text": "the kernel mode pointer and wait for the kernel to dierence it right",
    "start": "2212920",
    "end": "2218040"
  },
  {
    "text": "so obviously just sharing memory with an untrusted user mode and trusting the",
    "start": "2218040",
    "end": "2223480"
  },
  {
    "text": "contents of this memory is really fatal design for okay so these are the vbox",
    "start": "2223480",
    "end": "2230800"
  },
  {
    "text": "vulnerabilities again I hope they are instructive there's another one in in early version of xen so CV 2007",
    "start": "2230800",
    "end": "2240040"
  },
  {
    "text": "5497 uh so this time it was integer overflow in some uh component of xen",
    "start": "2240040",
    "end": "2246319"
  },
  {
    "text": "that run in privilege Dom zero and again it was parsing a large data structure",
    "start": "2246319",
    "end": "2251599"
  },
  {
    "text": "from the VM this time it was file system and again it's it's a flow in itself",
    "start": "2251599",
    "end": "2257160"
  },
  {
    "text": "that such a complex data structure is pared by something in in the host and the solution is do exactly the same",
    "start": "2257160",
    "end": "2264079"
  },
  {
    "text": "thing but just move all this code to the VM just pass the file system in the VM",
    "start": "2264079",
    "end": "2270319"
  },
  {
    "text": "and then again the same vulnerability existed but it was it has no impact right because if if all you could do was",
    "start": "2270319",
    "end": "2278040"
  },
  {
    "text": "to get code execution within the VM so again the lesson this technology to offload to VM as much as possible is is",
    "start": "2278040",
    "end": "2284079"
  },
  {
    "text": "very powerful and can can really make make difference okay so another another",
    "start": "2284079",
    "end": "2290319"
  },
  {
    "text": "vulnerability this time in Q KVM a couple of years ago there was a talk at blackhead as",
    "start": "2290319",
    "end": "2296839"
  },
  {
    "text": "well uh so this time the bug was in the code implementing emulation of PCI hot",
    "start": "2296839",
    "end": "2302520"
  },
  {
    "text": "plugging NVM could trigger it by writing to emulated chipset registers",
    "start": "2302520",
    "end": "2307720"
  },
  {
    "text": "again a nasty bug and you could think do we have any generic mitigation against",
    "start": "2307720",
    "end": "2313200"
  },
  {
    "text": "that kind of vulnerabilities for instance could we just deny all PCI config access to the VMS and the answer",
    "start": "2313200",
    "end": "2319720"
  },
  {
    "text": "is no because PCI config access is what VM uses during its boot to configure the",
    "start": "2319720",
    "end": "2325000"
  },
  {
    "text": "V Hardware but the point is that it's needed only during the boot time so you could use the technology named",
    "start": "2325000",
    "end": "2331200"
  },
  {
    "text": "illusional boot in which you start the VM with unrestricted config so for instance it can use all the PCI config",
    "start": "2331200",
    "end": "2338000"
  },
  {
    "text": "access space let it boot then in the run time change the config so you can save",
    "start": "2338000",
    "end": "2343800"
  },
  {
    "text": "VM change the config to the more restrictive one and then restore VM and then uh the point is that uh only after",
    "start": "2343800",
    "end": "2351760"
  },
  {
    "text": "then you expose the VM to malicious input so for instance open a browser in it and because uh once the malicious",
    "start": "2351760",
    "end": "2360280"
  },
  {
    "text": "input reaches the VM then you no longer have this functionality exposed then you cannot use it for for exploitation so I",
    "start": "2360280",
    "end": "2366960"
  },
  {
    "text": "guess that's pretty nice trick again all all these uh technologies that I will show you are",
    "start": "2366960",
    "end": "2372440"
  },
  {
    "text": "actually implemented somewhere so it's not science fiction academic projects right it's it's really used in in in",
    "start": "2372440",
    "end": "2378520"
  },
  {
    "text": "production another another problem again is in device emulator so we have CV 2012",
    "start": "2378520",
    "end": "2385800"
  },
  {
    "text": "29 vulnerability and it was Heap based buffer overflow in again in quu in in in",
    "start": "2385800",
    "end": "2392280"
  },
  {
    "text": "network art emulation and again as I mentioned device emulation is really source of the problems so what what you",
    "start": "2392280",
    "end": "2399599"
  },
  {
    "text": "can do uh you can use uh this nice vehicle for providing isolation which is",
    "start": "2399599",
    "end": "2405040"
  },
  {
    "text": "a hypervisor to just isolate a device emulator so no longer run device",
    "start": "2405040",
    "end": "2410280"
  },
  {
    "text": "emulator in some privileged uh environment like on the host but in a separate dedicated VM and then even if",
    "start": "2410280",
    "end": "2417880"
  },
  {
    "text": "VM can malicious VM can exploit some vulnerability in it uh it gets code",
    "start": "2417880",
    "end": "2423760"
  },
  {
    "text": "execution in a restricted environment which is pretty nice",
    "start": "2423760",
    "end": "2429319"
  },
  {
    "text": "uh what else again in fact the best thing to do is to just get rid of the device",
    "start": "2429400",
    "end": "2435839"
  },
  {
    "text": "emulator entirely if you can load special drivers in the VM so in essence",
    "start": "2435839",
    "end": "2441960"
  },
  {
    "text": "you tell to VM that please don't expect real Hardware or virtual Hardware please use a special driver that just uh",
    "start": "2441960",
    "end": "2449119"
  },
  {
    "text": "expects the functionality exposed by the hypervisor so talk to the PV driver not",
    "start": "2449119",
    "end": "2455040"
  },
  {
    "text": "to emulated driver then you don't have the this uh device simulation at all and again it's just significantly decreases",
    "start": "2455040",
    "end": "2462520"
  },
  {
    "text": "the attack space attack service another one CV 200769 so it was",
    "start": "2462520",
    "end": "2468800"
  },
  {
    "text": "vulnerability in Windows kernel in networking code particularly for the igmp packet processing and it was pretty",
    "start": "2468800",
    "end": "2476240"
  },
  {
    "text": "devastating you could get remote code execution uh in the windows scanner so if not everyone is asleep then you",
    "start": "2476240",
    "end": "2482760"
  },
  {
    "text": "should realize it's a vulnerability in the windows not in the hypervisor right so why why do I mention it here uh the",
    "start": "2482760",
    "end": "2488560"
  },
  {
    "text": "point is that you can use again isolation implemented by the hypervisor",
    "start": "2488560",
    "end": "2494280"
  },
  {
    "text": "uh to help with that kind of the problems so the idea is to use so-called service VMS uh what you do is you create a",
    "start": "2494280",
    "end": "2502160"
  },
  {
    "text": "special VM dedicated VM and you move some privileged code like uh drivers for",
    "start": "2502160",
    "end": "2508160"
  },
  {
    "text": "the network card or the whole networking stock DHCP client etc etc so a lot of uh",
    "start": "2508160",
    "end": "2514760"
  },
  {
    "text": "function Network some functionality from from the host and you move it to the dedicated VM so it's but in order to",
    "start": "2514760",
    "end": "2522640"
  },
  {
    "text": "make it actually work you have to give this VM uh the access to the physical",
    "start": "2522640",
    "end": "2528000"
  },
  {
    "text": "device so to the network art for instance so if we go back here so uh the",
    "start": "2528000",
    "end": "2533560"
  },
  {
    "text": "service VM would live here again but you won't need this communication to the",
    "start": "2533560",
    "end": "2538960"
  },
  {
    "text": "host right it would be more or less selfcontained again you get some",
    "start": "2538960",
    "end": "2545839"
  },
  {
    "text": "portions of the host kernel and move it to VM and again if there is any vulnerability for instance in the",
    "start": "2545839",
    "end": "2550920"
  },
  {
    "text": "networking stock or uh the VLAN driver uh exp what an attacker gets is not",
    "start": "2550920",
    "end": "2556680"
  },
  {
    "text": "immediate root in the kernel in the in the host operating system but uh in the VM and that's nice and",
    "start": "2556680",
    "end": "2563520"
  },
  {
    "text": "uh projects like cubes Os or S client XT do it by default so they create the network VM by default to limit the",
    "start": "2563520",
    "end": "2571520"
  },
  {
    "text": "impact um of an exploitation of networking code",
    "start": "2571520",
    "end": "2577359"
  },
  {
    "text": "okay and finally uh the project that's not finalized yet",
    "start": "2577359",
    "end": "2584119"
  },
  {
    "text": "is an idea that you can make the whole host of the type to hypervisor a giant service VM so just normally you think",
    "start": "2584119",
    "end": "2592280"
  },
  {
    "text": "that the host is privileged and it can do whatever it wishes with the VM right and this technique just inverts this the",
    "start": "2592280",
    "end": "2599319"
  },
  {
    "text": "solutions this time the host is just a bag for Hardware essentially and it's de",
    "start": "2599319",
    "end": "2604839"
  },
  {
    "text": "privileged so it cannot mess with the VM so I'm running a bit late so if you're",
    "start": "2604839",
    "end": "2610160"
  },
  {
    "text": "interested so just look at the white paper again it's something for the future but if it works it would be uh",
    "start": "2610160",
    "end": "2615839"
  },
  {
    "text": "pretty interesting okay and finally deep save",
    "start": "2615839",
    "end": "2621480"
  },
  {
    "text": "my favorite deep save as I mentioned deep safe is a",
    "start": "2621480",
    "end": "2626720"
  },
  {
    "text": "virtualization solution which is totally different from from the above again it was created with security in mind the",
    "start": "2626720",
    "end": "2634040"
  },
  {
    "text": "idea why why it was created was to increase security of the Windows operating",
    "start": "2634040",
    "end": "2639440"
  },
  {
    "text": "system and how it works it works very similar to the Janna rova blue pill",
    "start": "2639440",
    "end": "2645240"
  },
  {
    "text": "projects hopefully some of you remember Blue from 2006 so what happens is that",
    "start": "2645240",
    "end": "2650920"
  },
  {
    "text": "uh Windows operating system starts normally and then at an early phase it",
    "start": "2650920",
    "end": "2656200"
  },
  {
    "text": "loads the kernel driver the Deep safe driver right and what this Kel driver",
    "start": "2656200",
    "end": "2662400"
  },
  {
    "text": "does it installs itself U as a hypervisor",
    "start": "2662400",
    "end": "2667880"
  },
  {
    "text": "and then de privileges uh the Windows operating system to run in a VM so from",
    "start": "2667880",
    "end": "2674280"
  },
  {
    "text": "this point uh Windows does not has does not run on the bare Hardware it does not",
    "start": "2674280",
    "end": "2679520"
  },
  {
    "text": "control the hardware or CPU it runs in the VM right so it's exactly what uh",
    "start": "2679520",
    "end": "2686480"
  },
  {
    "text": "blue pill used to do uh but this time the purpose is not to achieve rootkit",
    "start": "2686480",
    "end": "2692400"
  },
  {
    "text": "functionality but have some level of control over the operating system because again from from Once uh the Deep",
    "start": "2692400",
    "end": "2701119"
  },
  {
    "text": "safe driver is loaded then Windows operating system does not is not all",
    "start": "2701119",
    "end": "2706200"
  },
  {
    "text": "powerful there is some layer of code which is more powerful namely hypervisor and it can control what Windows does and",
    "start": "2706200",
    "end": "2714119"
  },
  {
    "text": "why take all this uh difficult steps uh again the reason is for",
    "start": "2714119",
    "end": "2719520"
  },
  {
    "text": "security uh because current a lot of Security Solutions that reside in the",
    "start": "2719520",
    "end": "2725640"
  },
  {
    "text": "windows kernel like antiv viruses or hips have a problem with caral exploits right because if an attacker gets uh",
    "start": "2725640",
    "end": "2734079"
  },
  {
    "text": "code execution in the kernel so it gets to run in the same privilege level as other kage driver it can disable them or",
    "start": "2734079",
    "end": "2739960"
  },
  {
    "text": "can you know erase them do anything it wants with them the problem is that uh normally Windows kernel is the most",
    "start": "2739960",
    "end": "2746839"
  },
  {
    "text": "privileged part of the system and once you get code your exploit run in this",
    "start": "2746839",
    "end": "2752000"
  },
  {
    "text": "most privileged part you can do whatever you wish and deep safe tries to change the situation",
    "start": "2752000",
    "end": "2757599"
  },
  {
    "text": "because uh it installed itself as a hypervisor and theoretically windows",
    "start": "2757599",
    "end": "2763000"
  },
  {
    "text": "cannot attack the hypervisor right that's the idea so that's very nice and again the",
    "start": "2763000",
    "end": "2769400"
  },
  {
    "text": "purpose of the deep save is to monitor the execution of the windows kernel and just try to spot if rootkit is trying to",
    "start": "2769400",
    "end": "2774760"
  },
  {
    "text": "install because sometimes rootkits performs actions that are easy to spot from the hypervisor level okay so that's",
    "start": "2774760",
    "end": "2781599"
  },
  {
    "text": "that's nice uh and does it work essentially so indeed when uh",
    "start": "2781599",
    "end": "2788520"
  },
  {
    "text": "when CPU is running in the context of the VM so running Windows that used to run on the host but not now trans inm uh",
    "start": "2788520",
    "end": "2796880"
  },
  {
    "text": "deep safe configures extended page TBL so that uh CPU cannot access memory of",
    "start": "2796880",
    "end": "2802280"
  },
  {
    "text": "the hypervisor that's nice that's how it's supposed to work right again that that shows that you can uh use the",
    "start": "2802280",
    "end": "2809040"
  },
  {
    "text": "hypervisor technology as good effective method of isolation but how about PCI",
    "start": "2809040",
    "end": "2815280"
  },
  {
    "text": "devices right I'm already mentioned previously that uh uh PCI device can use",
    "start": "2815280",
    "end": "2820400"
  },
  {
    "text": "dma to the uh memory and uh in this design uh VM has all the control of over",
    "start": "2820400",
    "end": "2828440"
  },
  {
    "text": "PCI devices right so in order for Windows to not notice that it runs in a VM it still must be able to talk to the",
    "start": "2828440",
    "end": "2834760"
  },
  {
    "text": "network C to the graphics driver Etc and again I mentioned that you need",
    "start": "2834760",
    "end": "2840440"
  },
  {
    "text": "vtd to prevent PCI devices from corrupting your hypervisor memory so how",
    "start": "2840440",
    "end": "2845559"
  },
  {
    "text": "it works is that okay you have uh some virtual machine okay you give it ability",
    "start": "2845559",
    "end": "2851400"
  },
  {
    "text": "to configure the device but there is additional layer here it's called dma remapping hardware and it checks all dma",
    "start": "2851400",
    "end": "2859640"
  },
  {
    "text": "accesses done by this device and if if this dma access goes to the memory",
    "start": "2859640",
    "end": "2865079"
  },
  {
    "text": "allocated for V Dr machine that's fine it's allowed but if it sees that you try to uh corrupt hypervisor memory then",
    "start": "2865079",
    "end": "2872200"
  },
  {
    "text": "it's denied so again it means that uh in order to be secure uh deep save must",
    "start": "2872200",
    "end": "2878559"
  },
  {
    "text": "configure vtd right and does deep save use vtd and",
    "start": "2878559",
    "end": "2884359"
  },
  {
    "text": "the answer is no unfortunately at least in the tested version 1.60 so the latest available and",
    "start": "2884359",
    "end": "2892319"
  },
  {
    "text": "again this knowledge is not something entirely new right particular dma attacks against Zen",
    "start": "2892319",
    "end": "2899480"
  },
  {
    "text": "hypervisor was demonstrated by me at blackest 2008 so a long time ago and",
    "start": "2899480",
    "end": "2904800"
  },
  {
    "text": "also jna has written an ENT in in her blog just explaining that okay",
    "start": "2904800",
    "end": "2910640"
  },
  {
    "text": "preventing dma attacks is you know your it's necessity you have to do it in",
    "start": "2910640",
    "end": "2916160"
  },
  {
    "text": "order to be secure they do not do it uh it's not officially known why uh they",
    "start": "2916160",
    "end": "2922079"
  },
  {
    "text": "said when I talk to them that it's planning the future releases in officially uh they told me that it's",
    "start": "2922079",
    "end": "2929520"
  },
  {
    "text": "simply difficult to use vtd on Broad variety of client systems because a lot",
    "start": "2929520",
    "end": "2934799"
  },
  {
    "text": "of machines have broken bioses and it's difficult to configure BTD on that that machines and that cause cause",
    "start": "2934799",
    "end": "2941040"
  },
  {
    "text": "a lot of crashes Etc so that's the reason why why they do not",
    "start": "2941040",
    "end": "2946839"
  },
  {
    "text": "enable Okay so the impact is uh that you can compromise uh deep safe Integrity so if an attacker",
    "start": "2946839",
    "end": "2956520"
  },
  {
    "text": "gets control over your Windows operating system because you open a browser then",
    "start": "2956520",
    "end": "2961640"
  },
  {
    "text": "browser got exploited then in kernel exploit was loaded then you can launch another step and at at attack the Deep",
    "start": "2961640",
    "end": "2967280"
  },
  {
    "text": "safe hypervisor again doing this arbitrary",
    "start": "2967280",
    "end": "2972559"
  },
  {
    "text": "dma is not very complicated so essentially you don't have to uh",
    "start": "2972559",
    "end": "2978000"
  },
  {
    "text": "configure PCI device yourself you can use existing drivers already loaded by by the windows so the key point is to",
    "start": "2978000",
    "end": "2986319"
  },
  {
    "text": "open a file with this particular flag file flag no buffering and it tells uh operating",
    "start": "2986319",
    "end": "2993160"
  },
  {
    "text": "system to do exactly what we need to do dma to the user buff and then you have two options either you",
    "start": "2993160",
    "end": "2999880"
  },
  {
    "text": "have to cheat uh operating system uh and say that okay this is my user mode",
    "start": "2999880",
    "end": "3006440"
  },
  {
    "text": "buffer uh but it's actually at physical address P so you corrupt the data",
    "start": "3006440",
    "end": "3011599"
  },
  {
    "text": "structures used by the kernel uh to translate from user addresses to the physical addresses right so we just",
    "start": "3011599",
    "end": "3018240"
  },
  {
    "text": "overwrite page tables and then if you just issue the read file or write file",
    "start": "3018240",
    "end": "3023480"
  },
  {
    "text": "uh the kernel will configure properly uh the hardware and it will do dma to the",
    "start": "3023480",
    "end": "3029559"
  },
  {
    "text": "physical address P of an attacker choosing one point is that it doesn't work if with bit Locker because with bit",
    "start": "3029559",
    "end": "3037200"
  },
  {
    "text": "Locker you cannot essentially do immediate dma from the disk contents to the user mode buffer you have to encrypt",
    "start": "3037200",
    "end": "3043440"
  },
  {
    "text": "or decrypt first right but normally it works without bit Locker okay so what what can we do with",
    "start": "3043440",
    "end": "3050599"
  },
  {
    "text": "that functionality again uh it means that we can totally get total control over the",
    "start": "3050599",
    "end": "3057280"
  },
  {
    "text": "Deep safe hypervisor so essentially we could disable it if you can just you know knock out the proper routines but",
    "start": "3057280",
    "end": "3064839"
  },
  {
    "text": "that's not a sensible thing to do from a stacker point of view just think of it so uh you can control the hypervisor",
    "start": "3064839",
    "end": "3071079"
  },
  {
    "text": "right hypervisor is a nicely isolated piece of code that has full control over",
    "start": "3071079",
    "end": "3076359"
  },
  {
    "text": "your operating system and uh again the rest of the operating system",
    "start": "3076359",
    "end": "3082520"
  },
  {
    "text": "cannot well see what happens to the hypervisor so in fact it's a perfect place for a rootkit right if you place a",
    "start": "3082520",
    "end": "3089359"
  },
  {
    "text": "root kit there you have excellent control and you are protected from say antiviruses running running in in the",
    "start": "3089359",
    "end": "3095559"
  },
  {
    "text": "Windows host and for a proof of concept I did exactly that I have injected a very",
    "start": "3095559",
    "end": "3102079"
  },
  {
    "text": "simple uh root kit in into uh the Deep safe hypervisor what it allowed me to do was",
    "start": "3102079",
    "end": "3109400"
  },
  {
    "text": "to full patch guard in in in Windows so as you remember patchu guard in Windows",
    "start": "3109400",
    "end": "3114920"
  },
  {
    "text": "periodically checks um if for the science of root kit in in the",
    "start": "3114920",
    "end": "3121440"
  },
  {
    "text": "uh Windows operating system and if I control the hypervisor I can full patchu",
    "start": "3121440",
    "end": "3126720"
  },
  {
    "text": "guard right I can tell you no there was no changes done to the crucial operating system uh data structure so don't worry",
    "start": "3126720",
    "end": "3135319"
  },
  {
    "text": "again I can do it because uh the hypervisor runs as a more privileged uh code than than the VM right so whenever",
    "start": "3135319",
    "end": "3142640"
  },
  {
    "text": "the patard tries to for instance read uh model specific register to see if it",
    "start": "3142640",
    "end": "3148280"
  },
  {
    "text": "changed uh hypervisor intercept this operation just feed it the wrong value",
    "start": "3148280",
    "end": "3154160"
  },
  {
    "text": "right and again uh the effect is I can disable all the pgar functionality",
    "start": "3154160",
    "end": "3160799"
  },
  {
    "text": "running in the VM without even touching uh the VM memory so that's a very short",
    "start": "3160799",
    "end": "3166319"
  },
  {
    "text": "demonstration how how it looks I I don't know how to make good demonstration just a matter of running a",
    "start": "3166319",
    "end": "3171920"
  },
  {
    "text": "simple iy and seeing that it works so but what happens here is that uh first",
    "start": "3171920",
    "end": "3177359"
  },
  {
    "text": "you find the location of deep safe in in physical address space then you overwrite it and then again you can run",
    "start": "3177359",
    "end": "3184839"
  },
  {
    "text": "a back door that gets full control uh over uh the windows VM without Windows",
    "start": "3184839",
    "end": "3189880"
  },
  {
    "text": "VM noticing it at all again you can see that some system calls return magic",
    "start": "3189880",
    "end": "3195319"
  },
  {
    "text": "values it means Windows C is totally compromised but again patchar doesn't see anything and the Deep safe does not",
    "start": "3195319",
    "end": "3201319"
  },
  {
    "text": "see anything okay so there are more deep safe concerns but they are not entirely",
    "start": "3201319",
    "end": "3210200"
  },
  {
    "text": "related to the hypervisor topic so so let's skip it it's already late so just",
    "start": "3210200",
    "end": "3215520"
  },
  {
    "text": "a short summary so hypervisor have no negligible attack surface right there are problems with them but still despite",
    "start": "3215520",
    "end": "3222799"
  },
  {
    "text": "the above they are useful to protect even less secure operating system right",
    "start": "3222799",
    "end": "3227920"
  },
  {
    "text": "if you had very secure operating system you would not need a hypervisor to protect them it's the other way around",
    "start": "3227920",
    "end": "3233799"
  },
  {
    "text": "and also there are generic methods to reduce attack surface of the hypervisor that you can actually use in deployed",
    "start": "3233799",
    "end": "3240720"
  },
  {
    "text": "software to reduce attack surface and they really make a difference right so if you design a hypervisor be aware of",
    "start": "3240720",
    "end": "3247640"
  },
  {
    "text": "that if you choose a hypervisor for yourself try to find out uh what methods",
    "start": "3247640",
    "end": "3254119"
  },
  {
    "text": "the vendor applied to really make the hypervisor as secure as",
    "start": "3254119",
    "end": "3259160"
  },
  {
    "text": "possible okay that's that's all for today okay it's late so I again I will",
    "start": "3259160",
    "end": "3264839"
  },
  {
    "text": "evacuate and take questions out side okay [Applause]",
    "start": "3264839",
    "end": "3277499"
  }
]