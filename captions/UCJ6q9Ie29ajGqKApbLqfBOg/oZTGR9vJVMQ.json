[
  {
    "text": "hi everyone and uh thank you for having me here thank you for joining so my name",
    "start": "2220",
    "end": "7620"
  },
  {
    "text": "is dimitrios I'm from Greece and share a few things about me so I'm engaged in computer security",
    "start": "7620",
    "end": "13080"
  },
  {
    "text": "since 2002. I was a member of one of the first reverse engineering groups back in Greece and I started my career as a",
    "start": "13080",
    "end": "19619"
  },
  {
    "text": "network security engineer for about 10 years then I moved into developing for almost five years and the last five",
    "start": "19619",
    "end": "26400"
  },
  {
    "text": "years I focused mainly on road security while before I joined Microsoft's threat intelligence team as a senior security",
    "start": "26400",
    "end": "32160"
  },
  {
    "text": "researcher I was leading another team which was conducting malware reviews for Google Play Store",
    "start": "32160",
    "end": "37920"
  },
  {
    "text": "besides that I'm a father of two a boy and a girl in my free time I mostly write and play music so before we start",
    "start": "37920",
    "end": "45420"
  },
  {
    "text": "I would like to address a question which I get quite often during my talks and this is how come a Microsoft security",
    "start": "45420",
    "end": "51360"
  },
  {
    "text": "researcher talks about Android security and all this kind of stuff so as I said before I have been following up with",
    "start": "51360",
    "end": "56940"
  },
  {
    "text": "development cyber security for quite a long time and I can assure you although I think that you also agree with me on",
    "start": "56940",
    "end": "63239"
  },
  {
    "text": "the fact that today's threads need a more let's say holistic approach a bridge in your mobile device might have",
    "start": "63239",
    "end": "70560"
  },
  {
    "text": "much more security impact than before and can't even touch your cooperates Network so I strongly believe that companies must evolve their Security",
    "start": "70560",
    "end": "77100"
  },
  {
    "text": "Solutions to protect and support their clients across all platforms",
    "start": "77100",
    "end": "82380"
  },
  {
    "text": "so I'm very proud of being a part of such an initiative from my company from Microsoft and with that being said I",
    "start": "82380",
    "end": "88320"
  },
  {
    "text": "said we have a lot of things to go through let's jump right into the outline of this briefing which consists",
    "start": "88320",
    "end": "93479"
  },
  {
    "text": "of the following topics so first of all we're going to talk about data and file sharing the Android operating system",
    "start": "93479",
    "end": "99780"
  },
  {
    "text": "using content providers and then we're going to see what is a share Target how it is used and how we",
    "start": "99780",
    "end": "106439"
  },
  {
    "text": "can identify that an Android app is actually a share Target then we're going to move into the main",
    "start": "106439",
    "end": "112200"
  },
  {
    "text": "topic of this briefing which is the dirt stream attack we are going to explore the root cause of this vulnerability",
    "start": "112200",
    "end": "118860"
  },
  {
    "text": "pattern and see how a third-party app can actually exploit it what is actual impacts which may start",
    "start": "118860",
    "end": "125640"
  },
  {
    "text": "from information disclosure and in many cases can reach up to code execution and",
    "start": "125640",
    "end": "130739"
  },
  {
    "text": "at this point we're going to see an actual case of a code code execution",
    "start": "130739",
    "end": "135840"
  },
  {
    "text": "how we can protect Android apps from this or a similar type of attacks and we're going to end this briefing",
    "start": "135840",
    "end": "142080"
  },
  {
    "text": "with some takeaways so as you probably know Android apps are",
    "start": "142080",
    "end": "148020"
  },
  {
    "text": "sandboxed each one trapped in its own data memory space which makes daytime file sharing quite hard between them so",
    "start": "148020",
    "end": "155520"
  },
  {
    "text": "in order to facilitate this process the Android operating system provides a construction which is called content",
    "start": "155520",
    "end": "160800"
  },
  {
    "text": "provider simply said the knob which wants to share some data can create a content provider in order to do that while",
    "start": "160800",
    "end": "168060"
  },
  {
    "text": "another app which wants to access some data can create a Content resolver which acts as a proxy object that communicates",
    "start": "168060",
    "end": "175019"
  },
  {
    "text": "with the remote content provider for this process to take place in the background and not to block the main",
    "start": "175019",
    "end": "181200"
  },
  {
    "text": "thread we can use a casual loader while the result can be obtained by accessing",
    "start": "181200",
    "end": "186239"
  },
  {
    "text": "an object cursor object which is written by the remote content provider so what I just described can be better visualized",
    "start": "186239",
    "end": "193260"
  },
  {
    "text": "in the slides in the slide which I have here so in one side we have the server and I'll dried up which wants to share",
    "start": "193260",
    "end": "200159"
  },
  {
    "text": "some data that can be structured data or a file so it creates a content provider",
    "start": "200159",
    "end": "206400"
  },
  {
    "text": "and Implement methods that can be used to query insert update or delete data while on the other side we have the",
    "start": "206400",
    "end": "212640"
  },
  {
    "text": "consumer which creates a cursor loader that communicates with a local content resolver and since the resolder as well",
    "start": "212640",
    "end": "219120"
  },
  {
    "text": "as a provider implement the same interface the content resolver has also methods",
    "start": "219120",
    "end": "225000"
  },
  {
    "text": "that can be used to query insert update or delete data to the remote now content provider so after this point these two",
    "start": "225000",
    "end": "231239"
  },
  {
    "text": "ends are ready to communicate and exchange data",
    "start": "231239",
    "end": "237420"
  },
  {
    "text": "so are the applications code level a content provider is one of the earliest created components indeed if we check",
    "start": "237420",
    "end": "243720"
  },
  {
    "text": "the activity thread class the main method when activity thread object gets created",
    "start": "243720",
    "end": "249420"
  },
  {
    "text": "the first step is to attach a Looper and a Handler and next is to bind",
    "start": "249420",
    "end": "255360"
  },
  {
    "text": "the newly created process with Android app for this uh the bind application method will send",
    "start": "255360",
    "end": "262139"
  },
  {
    "text": "this message to the main message queue which is going to be picked up by the handle message and next the handlebind",
    "start": "262139",
    "end": "268320"
  },
  {
    "text": "application will call the install content providers given a list of the content providers that this app wants to",
    "start": "268320",
    "end": "274440"
  },
  {
    "text": "implement for each one of them the install provider will create a content provider",
    "start": "274440",
    "end": "279900"
  },
  {
    "text": "object attaching info about the package name the class name the",
    "start": "279900",
    "end": "285300"
  },
  {
    "text": "implementation class name the process name and most importantly The Authority which is something like an identity that",
    "start": "285300",
    "end": "291720"
  },
  {
    "text": "can be used to identify this content provider system wise on the consumer side things are pretty",
    "start": "291720",
    "end": "297900"
  },
  {
    "text": "much straightforward acquire an instance of the application on the resolver class and use it in",
    "start": "297900",
    "end": "303600"
  },
  {
    "text": "order to perform the query now regarding the query method one of the most important arguments is the",
    "start": "303600",
    "end": "310139"
  },
  {
    "text": "first one which is the content URI so it's a URI which has a scheme which is",
    "start": "310139",
    "end": "315780"
  },
  {
    "text": "the content scheme The Authority part for which I talked to you about before we have a table name",
    "start": "315780",
    "end": "321780"
  },
  {
    "text": "which is something like which we can use in order to narrow down our where to specific subset of data and the file",
    "start": "321780",
    "end": "328080"
  },
  {
    "text": "name in case we are dealing with a file provider I'm going to explain what is a file provided in a few slides",
    "start": "328080",
    "end": "333419"
  },
  {
    "text": "the next argument is the projection which is an array of strings with column names of the table that we want to query",
    "start": "333419",
    "end": "340440"
  },
  {
    "text": "so you understand we have a similarity with an SQL database here and finally as I said before we can",
    "start": "340440",
    "end": "346020"
  },
  {
    "text": "obtain the result using one of the get methods of the cursor class and of course process it",
    "start": "346020",
    "end": "351900"
  },
  {
    "text": "so despite the fact that file sharing can be achieved using a simple content",
    "start": "351900",
    "end": "358020"
  },
  {
    "text": "provider the Android operating system dedicates a specific class for this reason which is the file provider class",
    "start": "358020",
    "end": "364520"
  },
  {
    "text": "and it is a subclass for the content provider and by using it Android apps",
    "start": "364520",
    "end": "370500"
  },
  {
    "text": "can share files using the more manageable let's say and more controllable content Uris instead of the",
    "start": "370500",
    "end": "377160"
  },
  {
    "text": "file Uris that we know so far besides extending uh the specific class",
    "start": "377160",
    "end": "382680"
  },
  {
    "text": "another step that the knob has to take in order to share files is to declare declare the director that these files",
    "start": "382680",
    "end": "389580"
  },
  {
    "text": "reside to in order to do that a special file is used in XML format which can",
    "start": "389580",
    "end": "394860"
  },
  {
    "text": "also be used to map content to file Uris finally a couple of interesting methods",
    "start": "394860",
    "end": "400680"
  },
  {
    "text": "when it comes to the file provider class is the open file which among others gets uh an argument",
    "start": "400680",
    "end": "408120"
  },
  {
    "text": "as an argument the content URI and returns a file descriptor to the file that this content URI let's say",
    "start": "408120",
    "end": "414840"
  },
  {
    "text": "points to and we have also the open asset file which similar to the open file returns a",
    "start": "414840",
    "end": "421020"
  },
  {
    "text": "file descriptor but it is used in case we want to return a subsection of a file right regarding the file pass file as I",
    "start": "421020",
    "end": "428520"
  },
  {
    "text": "said before I want to elaborate a little bit more due to the fact that I'm going to use it while I'm describing the dirt",
    "start": "428520",
    "end": "433979"
  },
  {
    "text": "Sim attack so it is an xml5 which with a root element which is called paths the",
    "start": "433979",
    "end": "439800"
  },
  {
    "text": "child Elements which correspond to commonly used directories by Android apps for example we have",
    "start": "439800",
    "end": "447060"
  },
  {
    "text": "the root path directory child element which points to the root",
    "start": "447060",
    "end": "453120"
  },
  {
    "text": "director of the device we have the files path for the internal files director of Android up",
    "start": "453120",
    "end": "459060"
  },
  {
    "text": "the cache path for the internal cache directory of Android up and so on we have also a couple of attributes like",
    "start": "459060",
    "end": "465300"
  },
  {
    "text": "the name which we use in order to uh let's say uh",
    "start": "465300",
    "end": "471060"
  },
  {
    "text": "represent the specific child element within a Content URI and we have the the",
    "start": "471060",
    "end": "476280"
  },
  {
    "text": "path which we can use in order to Define subdirectories within the directory that this child element points to and if this",
    "start": "476280",
    "end": "483180"
  },
  {
    "text": "sounds a little bit confusing I have a couple of examples for example we have this one the external path which points to the",
    "start": "483180",
    "end": "491280"
  },
  {
    "text": "external directory and a more complete example I'm using content URI the scheme the golden scheme the content",
    "start": "491280",
    "end": "498840"
  },
  {
    "text": "example as an authority and I'm using the test root name in order to index files anywhere within the root directory",
    "start": "498840",
    "end": "506039"
  },
  {
    "text": "of the device including of course the home director of the app the internal directory",
    "start": "506039",
    "end": "511560"
  },
  {
    "text": "at the consumer side of a file provider things are a little bit different than before so consumer a file provider",
    "start": "511560",
    "end": "518700"
  },
  {
    "text": "consumer can call the open input stream or the openness file descriptor providing as an argument a Content URI",
    "start": "518700",
    "end": "525660"
  },
  {
    "text": "which points to the file that wants to access these methods are going to trigger the",
    "start": "525660",
    "end": "530940"
  },
  {
    "text": "open file and the open asset file that we showed before and uh as we we saw so far they're going",
    "start": "530940",
    "end": "536399"
  },
  {
    "text": "to return a file descriptor which the file provider can use in order to create a copy of the specific file to the",
    "start": "536399",
    "end": "543360"
  },
  {
    "text": "internal external director and finally use it so I said a couple of slides before that",
    "start": "543360",
    "end": "550320"
  },
  {
    "text": "content providers are the suggested let's say more controllable way of sharing files and data between Android",
    "start": "550320",
    "end": "556920"
  },
  {
    "text": "apps and this is where also the permissions come into place so when it comes to system content providers like",
    "start": "556920",
    "end": "562500"
  },
  {
    "text": "the ones which share private user info like sms's call logs calendar entries",
    "start": "562500",
    "end": "568260"
  },
  {
    "text": "and so on and up must have specific permissions in order to access them for example to access the user contacts you",
    "start": "568260",
    "end": "575040"
  },
  {
    "text": "need icon experimentation or it calendar address you need read calendar permission zone so when it",
    "start": "575040",
    "end": "581700"
  },
  {
    "text": "comes to third-party apps a very important let's say attribute when it comes to the content providers if is if the specific",
    "start": "581700",
    "end": "588899"
  },
  {
    "text": "provider is exported or no in case it is nyab which is installed in the device can access the data that this",
    "start": "588899",
    "end": "595820"
  },
  {
    "text": "provider let's say shares otherwise only apps with the same user",
    "start": "595820",
    "end": "601380"
  },
  {
    "text": "ID can access it now if this if you ask me can this Behavior be more manageable yes you can use the grant URI permission",
    "start": "601380",
    "end": "608040"
  },
  {
    "text": "which but if you if it is said to true then an app can create an intent attach the file",
    "start": "608040",
    "end": "614339"
  },
  {
    "text": "that wants to share as a stream and use this flag in order to define the mode of operation and send this intent to",
    "start": "614339",
    "end": "621600"
  },
  {
    "text": "another app in order to provide temporary access to a specific file",
    "start": "621600",
    "end": "627480"
  },
  {
    "text": "finally another way to provide access to a content provider is using this method here the grant URI permission which gets",
    "start": "627480",
    "end": "633420"
  },
  {
    "text": "as an argument the package name to which we want to provide access the URI for which we want to provide",
    "start": "633420",
    "end": "639600"
  },
  {
    "text": "access and the mode of operation although I wouldn't suggest of using these methods and anyone can think of",
    "start": "639600",
    "end": "645300"
  },
  {
    "text": "why give you 10 seconds",
    "start": "645300",
    "end": "649579"
  },
  {
    "text": "yes you need some context here anyway yeah",
    "start": "653160",
    "end": "659700"
  },
  {
    "text": "it provides access based on the package name okay and it doesn't check this the",
    "start": "659700",
    "end": "665579"
  },
  {
    "text": "signature of the of the APK which when it comes to app store right when it comes to play",
    "start": "665579",
    "end": "671940"
  },
  {
    "text": "store apps each one has a unique package name which that that's fine but when it",
    "start": "671940",
    "end": "677339"
  },
  {
    "text": "comes to of Market apps you can let's say creating package name that you want and you can get access to a file",
    "start": "677339",
    "end": "683100"
  },
  {
    "text": "provider which is let's say configured in this way all right so now that we have a good",
    "start": "683100",
    "end": "689640"
  },
  {
    "text": "understanding of what is a file provider content provider how we can share data between them by using them let's see",
    "start": "689640",
    "end": "696360"
  },
  {
    "text": "what is a share Target so a share Target is Android app which defines itself to",
    "start": "696360",
    "end": "702180"
  },
  {
    "text": "handle data or files which are sent by other apps so it's a file provider consumer right and we have a lot of",
    "start": "702180",
    "end": "709079"
  },
  {
    "text": "categories of Android apps which can be share targets we have editors image editors uh mail clients messenger Social",
    "start": "709079",
    "end": "716820"
  },
  {
    "text": "Network apps a lot a lot of categories so to create a share Target we have three",
    "start": "716820",
    "end": "723000"
  },
  {
    "text": "main ways and this is either by using an activity which matches a specific intent filter",
    "start": "723000",
    "end": "728459"
  },
  {
    "text": "or using the choose your target service or using the same shortcuts API in this briefing we are going to focus on the",
    "start": "728459",
    "end": "734459"
  },
  {
    "text": "first one as this is the most let's say popular so to create the share Target you must",
    "start": "734459",
    "end": "739560"
  },
  {
    "text": "have an activity which will handle the incoming stream the incoming file and declare this activity in the Android",
    "start": "739560",
    "end": "745620"
  },
  {
    "text": "manifest The Next Step is to define a filter specific filter which filters for",
    "start": "745620",
    "end": "752220"
  },
  {
    "text": "intensive action sent or sent multiple in case we want to handle more than one",
    "start": "752220",
    "end": "757320"
  },
  {
    "text": "files with a single intent finally we have the data type which defines the data the type of the file",
    "start": "757320",
    "end": "764820"
  },
  {
    "text": "that we want to process in this case for example an image file to send a file to the share Target",
    "start": "764820",
    "end": "771300"
  },
  {
    "text": "create an intent of action send or send multiple attach the file as a stream Define its data type then create another",
    "start": "771300",
    "end": "779100"
  },
  {
    "text": "intent using the create user method providing the first one as an argument and finally called the start activity",
    "start": "779100",
    "end": "786300"
  },
  {
    "text": "providing the second intend as an argument so if we put these steps down we're going to have code similar to the",
    "start": "786300",
    "end": "792360"
  },
  {
    "text": "one that you see here and if we execute the specific code we're going to trigger what we call the search dialog",
    "start": "792360",
    "end": "799320"
  },
  {
    "text": "why is that this intended Simplicity doesn't Define categorithmetically the component that",
    "start": "799320",
    "end": "805260"
  },
  {
    "text": "this file should be sent to so the user has to take the call and choose to which file to reach up this file should be",
    "start": "805260",
    "end": "812339"
  },
  {
    "text": "sent to and this is actually a practical way for you also to identify which share targets you have installed in your device",
    "start": "812339",
    "end": "817800"
  },
  {
    "text": "a long press on a file choose share and the search search dialog will show",
    "start": "817800",
    "end": "823920"
  },
  {
    "text": "you which apps for the specific file type right so when it comes to handling a",
    "start": "823920",
    "end": "830339"
  },
  {
    "text": "stream the majority of the apps that we have reviewed so far seem to follow a very",
    "start": "830339",
    "end": "835860"
  },
  {
    "text": "specific pattern let's say so this pattern consists of the following steps the first step is to get the actual name of",
    "start": "835860",
    "end": "844079"
  },
  {
    "text": "the income extreme of the incoming file and they do that by the by performing a query to the remote control provider",
    "start": "844079",
    "end": "849899"
  },
  {
    "text": "using the URI as a first argument and the second argument as a projection",
    "start": "849899",
    "end": "854940"
  },
  {
    "text": "using the display name the column display name why this one because it is the one which is used by the default",
    "start": "854940",
    "end": "861120"
  },
  {
    "text": "file provider so developers assume that they are dealing with a file provider it makes a lot of sense to do that",
    "start": "861120",
    "end": "869779"
  },
  {
    "text": "this is going to give you back the file name and this file name that is used in order",
    "start": "870120",
    "end": "875579"
  },
  {
    "text": "to create another file which is used to initialize the file output stream",
    "start": "875579",
    "end": "881100"
  },
  {
    "text": "and then create an input stream out of the using the income URI and finally",
    "start": "881100",
    "end": "886500"
  },
  {
    "text": "copy the input stream to the ultra stream this is a common process let's say now please",
    "start": "886500",
    "end": "891899"
  },
  {
    "text": "notice in this case that file name the file name the URI and of",
    "start": "891899",
    "end": "898019"
  },
  {
    "text": "course the content of the file are controlled by the sender and uh if you ask me how common all",
    "start": "898019",
    "end": "904440"
  },
  {
    "text": "these Ops let's say follow about the same code pattern so there is a very interesting paper by Verde atoll which",
    "start": "904440",
    "end": "909839"
  },
  {
    "text": "talks about vulnerabilities that were found in crowdsourced called examples and it mentions that 69 uh vulnerable",
    "start": "909839",
    "end": "916740"
  },
  {
    "text": "code Snippets which were found in um stack of overflow were used in almost",
    "start": "916740",
    "end": "922139"
  },
  {
    "text": "3000 GitHub projects now I'm not saying that the code that we have here on the left",
    "start": "922139",
    "end": "927540"
  },
  {
    "text": "on the right from me and that's for you is vulnerable by itself but if you get the specific codes right",
    "start": "927540",
    "end": "935519"
  },
  {
    "text": "and you combine it with a copy file that we showed before without performing some extra steps in the middle then 100",
    "start": "935519",
    "end": "940920"
  },
  {
    "text": "you're going to have a problem as we're going to see right so",
    "start": "940920",
    "end": "947600"
  },
  {
    "text": "regarding the adversary model we're talking about Android app that the user has to have installed on the device and",
    "start": "948000",
    "end": "954300"
  },
  {
    "text": "we don't need any let's say permission besides Internet only in case we want to download some kind of payload or",
    "start": "954300",
    "end": "960420"
  },
  {
    "text": "something so we're going to use this Rogue APK in order to interact with the",
    "start": "960420",
    "end": "965519"
  },
  {
    "text": "share Target and the first step is to request from the share Target to process a specific",
    "start": "965519",
    "end": "972060"
  },
  {
    "text": "file so as we saw before the majority of the share targets will ask about the actual",
    "start": "972060",
    "end": "977699"
  },
  {
    "text": "filing what is the actual file name since we control this file name we can give something like that a request let's",
    "start": "977699",
    "end": "984240"
  },
  {
    "text": "say to overwrite some kind of critical file like a library or text file or JavaScript file that might be loaded",
    "start": "984240",
    "end": "990180"
  },
  {
    "text": "some kind of webview or settings file and so on so next",
    "start": "990180",
    "end": "996360"
  },
  {
    "text": "the share Target asks about the input stream which as I said before requests actually file",
    "start": "996360",
    "end": "1002720"
  },
  {
    "text": "descriptive to it it should we control also that we can send a file descriptor",
    "start": "1002720",
    "end": "1007940"
  },
  {
    "text": "to our payload so this attack reminds a lot of the file upload when it",
    "start": "1007940",
    "end": "1014600"
  },
  {
    "text": "comes to web servers where we craft the file name we craft the content of the file we send it and we see how the web",
    "start": "1014600",
    "end": "1021680"
  },
  {
    "text": "server will handle the specific request here things are a little bit easier due to the fact that we have the APK we have",
    "start": "1021680",
    "end": "1027740"
  },
  {
    "text": "the share the share targets we have the code we can compile it and we can see how it will handle the specific file and",
    "start": "1027740",
    "end": "1033500"
  },
  {
    "text": "I guess it's easier in this case so we're going to construct this Rogue",
    "start": "1033500",
    "end": "1039740"
  },
  {
    "text": "APK in order to do that first of all we want to share a file so we're going to customize our own file provider",
    "start": "1039740",
    "end": "1047058"
  },
  {
    "text": "and we're going to modify the query method in order to return our",
    "start": "1047059",
    "end": "1052419"
  },
  {
    "text": "crafted name we're going to modify the open file in order to return a file descriptor to our payloads and we will",
    "start": "1052419",
    "end": "1059600"
  },
  {
    "text": "try to minimize any kind of user interaction this is how our control provider looks",
    "start": "1059600",
    "end": "1065000"
  },
  {
    "text": "like which extends the control provider and implements the queries where as the open file methods so starting with the",
    "start": "1065000",
    "end": "1071660"
  },
  {
    "text": "query method the first step is to try to imitate an actual file provider in order",
    "start": "1071660",
    "end": "1077600"
  },
  {
    "text": "to do that we add columns like the ones that the file provider has which is the display name the size data title that we",
    "start": "1077600",
    "end": "1083660"
  },
  {
    "text": "saw before and the next step is to add rows dynamically based on the incoming URI in",
    "start": "1083660",
    "end": "1090500"
  },
  {
    "text": "a specific query parameter now remember that we control this URI we send this URI to the third target the share Target",
    "start": "1090500",
    "end": "1096740"
  },
  {
    "text": "sends this back to us so we isolate a specific query parameter and we add rows",
    "start": "1096740",
    "end": "1102020"
  },
  {
    "text": "based on it and we do that in order to make our exploit the same more General to be able to handle more share targets",
    "start": "1102020",
    "end": "1110000"
  },
  {
    "text": "then we can use some kind of encoding because in some cases let's say an up an",
    "start": "1110000",
    "end": "1115400"
  },
  {
    "text": "up Mite filter for some characters or something so we can do also that we",
    "start": "1115400",
    "end": "1120440"
  },
  {
    "text": "attach this info to the cursor object and send it back to the requester now when it comes to the open file again",
    "start": "1120440",
    "end": "1127160"
  },
  {
    "text": "we get the incoming URI this time we isolate the path query parameter and we send the file descriptor to the",
    "start": "1127160",
    "end": "1134780"
  },
  {
    "text": "specific uh to the file that this path query parameter points to when it comes to the payload",
    "start": "1134780",
    "end": "1141080"
  },
  {
    "text": "as I said before we can download it from a web server or something although the Android APK",
    "start": "1141080",
    "end": "1146600"
  },
  {
    "text": "packaging provides a very convenient way of let's say packaging payloads and this",
    "start": "1146600",
    "end": "1151820"
  },
  {
    "text": "is the assets folder so we can add it there and pick it up from there right so we did all that in order to",
    "start": "1151820",
    "end": "1157820"
  },
  {
    "text": "create a method like the one that I have here which gets the package name of the share Target",
    "start": "1157820",
    "end": "1162860"
  },
  {
    "text": "the components that we are targeting a URI and creates an explicit intent this",
    "start": "1162860",
    "end": "1168860"
  },
  {
    "text": "time so this way we are avoiding the search dialog because we have an explicit intent we",
    "start": "1168860",
    "end": "1174799"
  },
  {
    "text": "Define where this file should be sent to so this won't bring up the search dialog",
    "start": "1174799",
    "end": "1181160"
  },
  {
    "text": "and what I didn't cover so far is the URI how it would look like so you have",
    "start": "1181160",
    "end": "1186919"
  },
  {
    "text": "the content scheme we have a our Authority which is the com.exploits we",
    "start": "1186919",
    "end": "1192500"
  },
  {
    "text": "have a path which we don't use but in some cases it is used by the share Target so we can add any value that we",
    "start": "1192500",
    "end": "1198500"
  },
  {
    "text": "want here we have the path which points to the payload that we want to send to the share Target",
    "start": "1198500",
    "end": "1203720"
  },
  {
    "text": "we have a name for the file that we want to overwrite we have a size I didn't measure that",
    "start": "1203720",
    "end": "1209539"
  },
  {
    "text": "it's not that important but in many in some cases the share Target might ask for the size of a file so we can again",
    "start": "1209539",
    "end": "1216559"
  },
  {
    "text": "control this value we can send anything that we want back and finally we if we are going to encode or know the specific",
    "start": "1216559",
    "end": "1222799"
  },
  {
    "text": "name the name so if we get this query to our content provider we're going we're going to add",
    "start": "1222799",
    "end": "1228440"
  },
  {
    "text": "a row like the one that I have here and we're going to send this value back to the share Target all right so",
    "start": "1228440",
    "end": "1235400"
  },
  {
    "text": "should be understood by now that by successfully exploiting this type of vulnerability",
    "start": "1235400",
    "end": "1241960"
  },
  {
    "text": "Rogue APK can get right access to the home director of Android app by passing",
    "start": "1241960",
    "end": "1248000"
  },
  {
    "text": "this way the right restrictions of the Android operating system and when it comes to the impact our best chance is",
    "start": "1248000",
    "end": "1255260"
  },
  {
    "text": "of course when the uploads let's say some a native library from the data directory",
    "start": "1255260",
    "end": "1261760"
  },
  {
    "text": "delivery modules or loads in more General some code dynamically or read some critical",
    "start": "1261760",
    "end": "1268460"
  },
  {
    "text": "settings from the cell preferences folder and while there's not much to say about the first three cases I guess the",
    "start": "1268460",
    "end": "1274520"
  },
  {
    "text": "idea is to override such a file a file that the app will load somehow and execute so we get our code execution",
    "start": "1274520",
    "end": "1280460"
  },
  {
    "text": "when it comes to the last one there's a very interesting behavior that I would like to talk about in regards the third",
    "start": "1280460",
    "end": "1286280"
  },
  {
    "text": "preference implementation class so what happened was while we were",
    "start": "1286280",
    "end": "1291380"
  },
  {
    "text": "trying to exploit the specific vulnerability type in many cases we encounter the following",
    "start": "1291380",
    "end": "1297620"
  },
  {
    "text": "issue the app was checking if a file exists and in that case it would abort the operation wouldn't override the file",
    "start": "1297620",
    "end": "1304280"
  },
  {
    "text": "so there is a very interesting uh fallback mechanism when it comes to the search preferences class which can be",
    "start": "1304280",
    "end": "1310280"
  },
  {
    "text": "used in order to bypass this type of check so what happens is when an up",
    "start": "1310280",
    "end": "1316340"
  },
  {
    "text": "creates a certain preferences class instance providing the name of the file that wants to access",
    "start": "1316340",
    "end": "1322039"
  },
  {
    "text": "The Constructor of the cell preference implementation class would get this file I will call the make backup file",
    "start": "1322039",
    "end": "1329419"
  },
  {
    "text": "so the make backup file will get this file and will add the dot back extension to it creating a new file this way",
    "start": "1329419",
    "end": "1335900"
  },
  {
    "text": "it will return it back and then the start lot from disk will call the lot from disk the load from disk will check",
    "start": "1335900",
    "end": "1342260"
  },
  {
    "text": "if the bug file backup file exists and in that case it will delete it it will",
    "start": "1342260",
    "end": "1349400"
  },
  {
    "text": "replace uh it will replace it with a bug file so you understand",
    "start": "1349400",
    "end": "1355280"
  },
  {
    "text": "if we have such a check if the file exists and so on we can simply instead of trying to override the original file",
    "start": "1355280",
    "end": "1362059"
  },
  {
    "text": "we can create a bug file and let this Behavior to replace it to replace the",
    "start": "1362059",
    "end": "1367820"
  },
  {
    "text": "original one with with our own all right so when it comes to reading",
    "start": "1367820",
    "end": "1372860"
  },
  {
    "text": "files readings reading files is also possible and the idea here is to try to",
    "start": "1372860",
    "end": "1378980"
  },
  {
    "text": "trick the share Target to process one of its own files and by preference one file",
    "start": "1378980",
    "end": "1384740"
  },
  {
    "text": "which has some kind of sensitive info and in order to do that we try to",
    "start": "1384740",
    "end": "1389960"
  },
  {
    "text": "exploit some kind of misconfigure content provider or lose file provider paths but most importantly the in this",
    "start": "1389960",
    "end": "1396559"
  },
  {
    "text": "case is where the share Target will cast the specific file all right so what I mean by",
    "start": "1396559",
    "end": "1403100"
  },
  {
    "text": "misconfigured on the provider is that the application implements its own file provider without",
    "start": "1403100",
    "end": "1410179"
  },
  {
    "text": "extending the default one and since in most of the cases they don't let's say filter or sanitize their content URI we",
    "start": "1410179",
    "end": "1417140"
  },
  {
    "text": "can create something like the one that I have here and index some kind of critical file this would fail when it comes to the",
    "start": "1417140",
    "end": "1424400"
  },
  {
    "text": "file provider due to the fact that the file provider will throw an error saying that you jumped out of the preco",
    "start": "1424400",
    "end": "1430280"
  },
  {
    "text": "fingered cell directory so this will fail all right so when it comes to the lose file provider pause what I mean is we",
    "start": "1430280",
    "end": "1436760"
  },
  {
    "text": "are looking for entries like the one that I have highlighted here which points let's say to the root director of",
    "start": "1436760",
    "end": "1443480"
  },
  {
    "text": "the device so this way we can create a Content URI like the one that I'm showing to you here",
    "start": "1443480",
    "end": "1450080"
  },
  {
    "text": "and we can again index some kind of uh let's say sensitive file and send it to the share Target now what is important",
    "start": "1450080",
    "end": "1456320"
  },
  {
    "text": "in this case is where the the app will cast the incoming file so if it casts the file it cuts the file to the",
    "start": "1456320",
    "end": "1462559"
  },
  {
    "text": "external directory we can simply pick it up from there or there's another trick it's called display name it's a query",
    "start": "1462559",
    "end": "1468980"
  },
  {
    "text": "parameter of the file provider class and if they trust this specific query",
    "start": "1468980",
    "end": "1474080"
  },
  {
    "text": "parameter we can again use uh let's say some kind of a path reversal payload in order to force the share Target to Cache",
    "start": "1474080",
    "end": "1481400"
  },
  {
    "text": "the file to a directory that we control and we can pick it up from there again all right",
    "start": "1481400",
    "end": "1486980"
  },
  {
    "text": "some statistics regarding the impacts despite the fact that let's say this",
    "start": "1486980",
    "end": "1492380"
  },
  {
    "text": "vulnerability type seems a little bit seems a bit simple in a sample of uh 20 apps that we have",
    "start": "1492380",
    "end": "1499760"
  },
  {
    "text": "reviewed with a common characteristic more than 100 million in Styles according to the Google Play Store",
    "start": "1499760",
    "end": "1506720"
  },
  {
    "text": "more than half of them were found to be vulnerable to this type of attack and in 28 of them we managed to get the",
    "start": "1506720",
    "end": "1513380"
  },
  {
    "text": "code execution 18 of them some kind of critical information disclosure and 27",
    "start": "1513380",
    "end": "1519020"
  },
  {
    "text": "of them load to no security impact and at this point we're going to go",
    "start": "1519020",
    "end": "1524179"
  },
  {
    "text": "through an actual code execution showcase as I promised and the other we are going",
    "start": "1524179",
    "end": "1529340"
  },
  {
    "text": "to review is a browser with more than 500 million stars according to the Google Play Store it is a share Target",
    "start": "1529340",
    "end": "1537260"
  },
  {
    "text": "it uses the doc reader activity which is an alliance for the main activity",
    "start": "1537260",
    "end": "1542659"
  },
  {
    "text": "so it has this distinctive uh send filter",
    "start": "1542659",
    "end": "1547480"
  },
  {
    "text": "and when this uh up gets an intent of uh of action send and stream it will",
    "start": "1547700",
    "end": "1554840"
  },
  {
    "text": "finally call the method that you see here at method I this will try to get the actual file name by calling the",
    "start": "1554840",
    "end": "1560539"
  },
  {
    "text": "method H and the next step is to create a URI out of the incoming intense data",
    "start": "1560539",
    "end": "1566659"
  },
  {
    "text": "part use this URI in order to create an md5 hash make it string concatenate it",
    "start": "1566659",
    "end": "1572419"
  },
  {
    "text": "to the file provider string and they do all that in order to create a temporary cache directory",
    "start": "1572419",
    "end": "1579639"
  },
  {
    "text": "last step is to save the file under this specific directory like you see here now",
    "start": "1579679",
    "end": "1585679"
  },
  {
    "text": "what stands out of this process is the fact that they don't sanitize of course the file name",
    "start": "1585679",
    "end": "1591740"
  },
  {
    "text": "and the result of this let's say uh mistake this Miss can be better",
    "start": "1591740",
    "end": "1597039"
  },
  {
    "text": "demonstrated here so this app will get an intent like the one that I have here",
    "start": "1597039",
    "end": "1603740"
  },
  {
    "text": "uh which we suggest the name as you see with the password characters it will try",
    "start": "1603740",
    "end": "1609500"
  },
  {
    "text": "will actually cast it outside of the pre-configured uh temper cache directory",
    "start": "1609500",
    "end": "1615440"
  },
  {
    "text": "so this way we're getting um uh right access to the home director of this app we actually got",
    "start": "1615440",
    "end": "1623120"
  },
  {
    "text": "all right so okay we got our right access now the question was what we can",
    "start": "1623120",
    "end": "1628700"
  },
  {
    "text": "override what we can do with that so it was found that the app is using uh the Google Play code library in order to",
    "start": "1628700",
    "end": "1635840"
  },
  {
    "text": "deliver dynamically a plugin which uses to unzip the user",
    "start": "1635840",
    "end": "1642200"
  },
  {
    "text": "files in a nutshell the Google Play core Library uses up bundles in order to",
    "start": "1642200",
    "end": "1648020"
  },
  {
    "text": "deliver optimized apks depending on the device's configuration so in contrast with the",
    "start": "1648020",
    "end": "1654380"
  },
  {
    "text": "Legacy apks which might carry some extra modules that the installation device might not need for example libraries",
    "start": "1654380",
    "end": "1660980"
  },
  {
    "text": "stuff like that when it comes to the bundles they come with a basic some basic modules and extra modules can be",
    "start": "1660980",
    "end": "1668600"
  },
  {
    "text": "installed on demand depending of course on the devices configuration that's cool",
    "start": "1668600",
    "end": "1673880"
  },
  {
    "text": "because I mean the size is much smaller you have better performance but this",
    "start": "1673880",
    "end": "1679220"
  },
  {
    "text": "library has a very bad habit of saving uh Native libraries to the home directory of another app of",
    "start": "1679220",
    "end": "1686360"
  },
  {
    "text": "the app that uses it actually so the first idea was why we don't overwrite such a file let's",
    "start": "1686360",
    "end": "1692059"
  },
  {
    "text": "say as I said before it uses a plugin Transit files why we don't override the this Library",
    "start": "1692059",
    "end": "1698960"
  },
  {
    "text": "they think that didn't work the app was checking if the file exists I'll show you before and didn't override it so",
    "start": "1698960",
    "end": "1706340"
  },
  {
    "text": "the next was the following this the Google Play code Library uses",
    "start": "1706340",
    "end": "1711919"
  },
  {
    "text": "uh some specific directories in order to save the apks of downloads so it has a",
    "start": "1711919",
    "end": "1718460"
  },
  {
    "text": "director which called them verified splits and there when downloads and APK saves it there",
    "start": "1718460",
    "end": "1724240"
  },
  {
    "text": "it verifies the signature and then saves it to the verified squeeze director so",
    "start": "1724240",
    "end": "1729380"
  },
  {
    "text": "the idea was what will happen if we save the file we save this plugin to the very byte split directory to our surprise uh",
    "start": "1729380",
    "end": "1737360"
  },
  {
    "text": "our plugin which had a malicious library was unzipped and it was used by the app",
    "start": "1737360",
    "end": "1744799"
  },
  {
    "text": "so when the user tried to let's say open the file and zip a file then we got our code execution in",
    "start": "1744799",
    "end": "1752000"
  },
  {
    "text": "this case back all right so and this is how I'll exploit looked like so we have uh our",
    "start": "1752000",
    "end": "1759080"
  },
  {
    "text": "APK which as I said before contain this library of us and then this is actually",
    "start": "1759080",
    "end": "1765559"
  },
  {
    "text": "the file that we um how we said it not override all right so",
    "start": "1765559",
    "end": "1774500"
  },
  {
    "text": "when it comes to securing share targets how we can protect Android apps from this even similar type of attacks",
    "start": "1774500",
    "end": "1780380"
  },
  {
    "text": "so the first thing that I suggest in that case is to ignore the display name you don't need the display name you",
    "start": "1780380",
    "end": "1786559"
  },
  {
    "text": "don't need the what is this done by the I mean you don't need to get the actual file name in order to Cache it or create",
    "start": "1786559",
    "end": "1791840"
  },
  {
    "text": "some kind of a temporary file so that's the first thing but if for some reason you you must use it then you have to",
    "start": "1791840",
    "end": "1799159"
  },
  {
    "text": "take extra steps in order to sanitize it and of course the first step is to filter out special characters",
    "start": "1799159",
    "end": "1806919"
  },
  {
    "text": "a cash path and most importantly make sure that the file",
    "start": "1807880",
    "end": "1813140"
  },
  {
    "text": "which you are casting is under the directory that should be right make sure that the actual results",
    "start": "1813140",
    "end": "1820100"
  },
  {
    "text": "the path should be under the director of that um the pre-configured let's say director",
    "start": "1820100",
    "end": "1826640"
  },
  {
    "text": "which you use in order to create temporary files all right",
    "start": "1826640",
    "end": "1833600"
  },
  {
    "text": "some takeaways not much of a rocket science here but",
    "start": "1833600",
    "end": "1839539"
  },
  {
    "text": "consider all data which originates outside of your app as untrusted and",
    "start": "1839539",
    "end": "1846440"
  },
  {
    "text": "um I would like to add in this point the following that even if you think that you are let's say interacting with some",
    "start": "1846440",
    "end": "1852260"
  },
  {
    "text": "kind of uh default browser of the device or camera app or something like that",
    "start": "1852260",
    "end": "1857320"
  },
  {
    "text": "make sure that you sanitize the data especially when it",
    "start": "1857320",
    "end": "1863779"
  },
  {
    "text": "comes to file providers content providers and stuff like that and for God's sakes don't lock the",
    "start": "1863779",
    "end": "1869360"
  },
  {
    "text": "executable files from the data directory avoid loading libraries Dex files even",
    "start": "1869360",
    "end": "1875059"
  },
  {
    "text": "if you load some kind of a Javascript file anything make sure to replace them every time",
    "start": "1875059",
    "end": "1882020"
  },
  {
    "text": "for example that you restart in your app or something to the users never install apps outside",
    "start": "1882020",
    "end": "1889700"
  },
  {
    "text": "of the Google Play Store and uh this is due to the fact that",
    "start": "1889700",
    "end": "1894860"
  },
  {
    "text": "Google Play Store ensures that apps follow some specific criteria right so when you install an app outside the",
    "start": "1894860",
    "end": "1901880"
  },
  {
    "text": "Google Play Store you never know what this app might carry with and with that that was the last one thank you very",
    "start": "1901880",
    "end": "1908659"
  },
  {
    "text": "much and we have a couple of minutes if you want to ask some questions I will be",
    "start": "1908659",
    "end": "1914539"
  },
  {
    "text": "happy to reply to answer",
    "start": "1914539",
    "end": "1918039"
  }
]