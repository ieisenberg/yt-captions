[
  {
    "text": "[Music]",
    "start": "860",
    "end": "9120"
  },
  {
    "text": "hi my name is kevin backhouse and i'm a member of github security lab",
    "start": "9120",
    "end": "14240"
  },
  {
    "text": "this presentation is about dbos dbos is a messaging system that's widely used on linux for into process communication or",
    "start": "14240",
    "end": "20640"
  },
  {
    "text": "ipc and in this presentation i'm going to focus on how it's used by many of the system services that are running in the",
    "start": "20640",
    "end": "26640"
  },
  {
    "text": "background i'm going to try to give you an overview of dbos's architecture with a particular",
    "start": "26640",
    "end": "31840"
  },
  {
    "text": "focus on its security features and i'll also go into a bit more detail on polkit which is the service that's responsible",
    "start": "31840",
    "end": "37520"
  },
  {
    "text": "for checking whether a user is authorized to do something i'm going to show you a few",
    "start": "37520",
    "end": "43520"
  },
  {
    "text": "source code examples of what it looks like to program a debuff service and i'll talk about some of the most common",
    "start": "43520",
    "end": "48960"
  },
  {
    "text": "bug classes that i've seen finally i'll show you a couple of demos of local privilege escalation",
    "start": "48960",
    "end": "55199"
  },
  {
    "text": "vulnerabilities that i've found in the past year usually privilege escalation vulnerabilities on linux are caused by",
    "start": "55199",
    "end": "60879"
  },
  {
    "text": "bugs in either the kernel or a set uid binary like sudo but these vulnerabilities were caused by bugs and",
    "start": "60879",
    "end": "66640"
  },
  {
    "text": "debuff services [Music] so let's do a quick demo of dbos",
    "start": "66640",
    "end": "74400"
  },
  {
    "text": "uh now just to be clear this first demo is not a demo for vulnerability i just want to show you what it looks like when things are working normally",
    "start": "74400",
    "end": "81439"
  },
  {
    "text": "so i've got a vm running here um running ubuntu 2004",
    "start": "81439",
    "end": "88000"
  },
  {
    "text": "and this is the system settings dialog box and many of the things you do in this system settings dialog box are",
    "start": "89360",
    "end": "96240"
  },
  {
    "text": "going to trigger dbos events so for example if i change the icon here that was a d bus message that got sent",
    "start": "96240",
    "end": "103280"
  },
  {
    "text": "in the background um but dbos is not just a graphical thing uh it's mostly happening in the background",
    "start": "103280",
    "end": "109840"
  },
  {
    "text": "and so you can also send d bus messages from the command line so i've got a",
    "start": "109840",
    "end": "115520"
  },
  {
    "text": "little cheat sheet here that i'm going to use and i'm just going to use",
    "start": "115520",
    "end": "120640"
  },
  {
    "text": "the command line now to change the icon again so if i go back to the system settings",
    "start": "120960",
    "end": "127040"
  },
  {
    "text": "you can see that the uh the icon has changed now a few things that i just want to",
    "start": "127040",
    "end": "133840"
  },
  {
    "text": "point out in this command here um there's always a destination on a dbos",
    "start": "133840",
    "end": "141360"
  },
  {
    "text": "message um there's often well there's always a path",
    "start": "141360",
    "end": "146400"
  },
  {
    "text": "as well and the path um so some debuff services have a whole tree of",
    "start": "146400",
    "end": "153120"
  },
  {
    "text": "different objects and so the path tells you which of those objects you want to interact with and here we're interacting",
    "start": "153120",
    "end": "158800"
  },
  {
    "text": "with user 1001 which is my user id",
    "start": "158800",
    "end": "165280"
  },
  {
    "text": "then there's a method name so set icon file in this case and sometimes there will be a message",
    "start": "165280",
    "end": "172879"
  },
  {
    "text": "body in this case the message body is a string with the the path of the file",
    "start": "172879",
    "end": "179360"
  },
  {
    "text": "so this is an architecture diagram of the dbos ecosystem at the center there's uh this process called debuss daemon",
    "start": "182879",
    "end": "190000"
  },
  {
    "text": "which is responsible for routing dbos messages to the correct recipient dbos demon also has an important role in",
    "start": "190000",
    "end": "196080"
  },
  {
    "text": "the security of the whole system which i'll talk about in more detail later in this diagram i've also included",
    "start": "196080",
    "end": "203040"
  },
  {
    "text": "examples of some important system services that participate in this ecosystem so for",
    "start": "203040",
    "end": "209440"
  },
  {
    "text": "example you've got systemd there the account service daemon poll kit etc",
    "start": "209440",
    "end": "216400"
  },
  {
    "text": "and linux itself forms the base layer of it all the two most important things that linux",
    "start": "216400",
    "end": "222239"
  },
  {
    "text": "brings to this party are firstly of course the usual process and user account separation stuff",
    "start": "222239",
    "end": "228000"
  },
  {
    "text": "so that these system services are all properly isolated from each other and secondly unix domain sockets which are",
    "start": "228000",
    "end": "234560"
  },
  {
    "text": "used for secure communication a unix domain socket is similar to a tcp",
    "start": "234560",
    "end": "240879"
  },
  {
    "text": "socket um but because it's handled by the kernel you don't need to worry about",
    "start": "240879",
    "end": "246159"
  },
  {
    "text": "encrypting the messages for example um and it can do some things that tcp sockets can't do like for example you",
    "start": "246159",
    "end": "252239"
  },
  {
    "text": "can send a file descriptor over unix unix domain socket",
    "start": "252239",
    "end": "257359"
  },
  {
    "text": "and you can also use it to check the credentials of the process on the other end",
    "start": "257359",
    "end": "263199"
  },
  {
    "text": "so i think this architecture is one of the things that has led to this joke that",
    "start": "264240",
    "end": "271759"
  },
  {
    "text": "linux is what the systemd operating system used to be called this is one version of that joke that i",
    "start": "271759",
    "end": "278000"
  },
  {
    "text": "saw on twitter recently this particular version of the joke is quite good because it's riffing on the old gnu",
    "start": "278000",
    "end": "283280"
  },
  {
    "text": "linux thing um just as an aside i don't personally quite understand why some people are so",
    "start": "283280",
    "end": "288880"
  },
  {
    "text": "upset about system d it seems fine to me and from what i've seen of the source code it looks quite",
    "start": "288880",
    "end": "294880"
  },
  {
    "text": "well written but i do think that there might be some truth to this joke so earlier this year",
    "start": "294880",
    "end": "301759"
  },
  {
    "text": "i started reading this book i skipped the operating systems class",
    "start": "301759",
    "end": "306960"
  },
  {
    "text": "when i was in college so i decided it was time to catch up i have to admit i've",
    "start": "306960",
    "end": "312800"
  },
  {
    "text": "not made much progress yet but this was around the same time that i was learning about dbos",
    "start": "312800",
    "end": "319199"
  },
  {
    "text": "and i was really struck by the similarity between the dbos ecosystem and this description of the minix minix",
    "start": "319199",
    "end": "325120"
  },
  {
    "text": "microkernel operating system as it says here unlike unix whose kernel is a monolithic",
    "start": "325120",
    "end": "331919"
  },
  {
    "text": "program not split up into modules minix 3 itself is a collection of processes that communicate with each other and",
    "start": "331919",
    "end": "338160"
  },
  {
    "text": "also with user processes using a single inter-process communication primitive message passing",
    "start": "338160",
    "end": "345520"
  },
  {
    "text": "now i don't think anyone's going to accuse linux of being a microkernel operating system but maybe parts of the design are",
    "start": "345919",
    "end": "352560"
  },
  {
    "text": "moving in that direction okay let's have a look at a few examples",
    "start": "352560",
    "end": "359759"
  },
  {
    "text": "of dbos messages so that you understand the basic format now bear in mind that dbos messages are a binary format so",
    "start": "359759",
    "end": "366240"
  },
  {
    "text": "what you're looking at here is a pretty printed rendering of it so these two messages are quite similar",
    "start": "366240",
    "end": "372880"
  },
  {
    "text": "but the one on the left keeps repeating org.freedesktop.account so i included the one on the right to",
    "start": "372880",
    "end": "378639"
  },
  {
    "text": "show you that isn't that it isn't always like that now these messages are both method calls",
    "start": "378639",
    "end": "385919"
  },
  {
    "text": "um the other message types are replies errors and signals signals are kind of like broadcast",
    "start": "385919",
    "end": "392800"
  },
  {
    "text": "messages that you can subscribe to um the message serial number is",
    "start": "392800",
    "end": "399440"
  },
  {
    "text": "important for reply so sometimes you might have to wait a while before you get a reply to a method call that you",
    "start": "399440",
    "end": "404800"
  },
  {
    "text": "sent so the serial number is is useful for tracking",
    "start": "404800",
    "end": "410479"
  },
  {
    "text": "now there's a few different header fields some of which are optional depending on what",
    "start": "412479",
    "end": "417919"
  },
  {
    "text": "kind of message you're sending and we saw examples of several of these fields when",
    "start": "417919",
    "end": "423039"
  },
  {
    "text": "i used dbos send to send that message on the command line earlier now there's two fields that are kind of",
    "start": "423039",
    "end": "430560"
  },
  {
    "text": "special the first is unix fds which allows you to attach file descriptors to",
    "start": "430560",
    "end": "435919"
  },
  {
    "text": "the message so that can be used for example to share a file with a system service in a reliable way that isn't",
    "start": "435919",
    "end": "441280"
  },
  {
    "text": "vulnerable to something like a talk to attack the second is the sender field",
    "start": "441280",
    "end": "447520"
  },
  {
    "text": "which is added by the dbos daemon so that's really valuable for security because the sender field can't be",
    "start": "447520",
    "end": "452960"
  },
  {
    "text": "spoofed it allows system services to reliably check things like what the user id is of the sender that they just",
    "start": "452960",
    "end": "459360"
  },
  {
    "text": "received a message from and finally messages can optionally",
    "start": "459360",
    "end": "465680"
  },
  {
    "text": "include a body with a list of extra arguments and the type of the data in the body is",
    "start": "465680",
    "end": "470720"
  },
  {
    "text": "determined by the signature header field",
    "start": "470720",
    "end": "475039"
  },
  {
    "text": "now in this slide i'm showing you showing you an example of a method call on left and it's reply on the right",
    "start": "475919",
    "end": "483360"
  },
  {
    "text": "this particular message is actually quite an important one it's the hello message which is always the first",
    "start": "483360",
    "end": "489199"
  },
  {
    "text": "message that you have to send when you when you first connect to the dbos demon",
    "start": "489199",
    "end": "494639"
  },
  {
    "text": "um and the reply that you get back from the d bus demon tells you what your unique bus name is so in this example",
    "start": "494639",
    "end": "500479"
  },
  {
    "text": "it's 1.3591 one of the things i want to emphasize",
    "start": "500479",
    "end": "507039"
  },
  {
    "text": "here is the distinction between unique boss names and well-known names so a",
    "start": "507039",
    "end": "512320"
  },
  {
    "text": "well-known name is something like org.freedesktop.accounts and typically",
    "start": "512320",
    "end": "517360"
  },
  {
    "text": "only root processors are allowed to claim those well-known names that's a security feature",
    "start": "517360",
    "end": "523839"
  },
  {
    "text": "to prevent an unprivileged process from impersonating a system service and using that to intercept important",
    "start": "523839",
    "end": "529920"
  },
  {
    "text": "messages so just to summarize what are the main",
    "start": "529920",
    "end": "536160"
  },
  {
    "text": "security features of dbus um it gives you secure into process communication",
    "start": "536160",
    "end": "542640"
  },
  {
    "text": "the ownership rules on well-known names ensure that system services can't be impersonated",
    "start": "542640",
    "end": "549200"
  },
  {
    "text": "and unique bus names allow you to reliably check the credentials of your counterparty",
    "start": "549200",
    "end": "555200"
  },
  {
    "text": "so sometimes you see code where they've used the pid for that instead and that's a bug because pids get recycled",
    "start": "555200",
    "end": "561440"
  },
  {
    "text": "frequently so unique bus names are a much better solution because they never get recycled",
    "start": "561440",
    "end": "568240"
  },
  {
    "text": "the final one is a feature that i didn't mention yet you can also set restrictions on which methods are",
    "start": "568240",
    "end": "573760"
  },
  {
    "text": "allowed to be called for example you might have some methods that are only allowed to be called by a root process",
    "start": "573760",
    "end": "580560"
  },
  {
    "text": "i think the thing that i like the least about or that i dislike about dbus is the",
    "start": "581920",
    "end": "588000"
  },
  {
    "text": "proliferation of config files i can never remember where they all are and i have no doubt that i'm going to",
    "start": "588000",
    "end": "594160"
  },
  {
    "text": "end up using these slides as a reference next time i'm trying to find one of them",
    "start": "594160",
    "end": "599680"
  },
  {
    "text": "so these files that i've listed here the config files for the account service and",
    "start": "600320",
    "end": "606160"
  },
  {
    "text": "the directories that these files are in contain many other config files for all the other system services",
    "start": "606160",
    "end": "612959"
  },
  {
    "text": "and in fact this isn't even the full list because there are also other config files relating to polkit",
    "start": "612959",
    "end": "620399"
  },
  {
    "text": "okay so i just want to quickly show you what's in two of these config files the first one is the systemd service file",
    "start": "623200",
    "end": "629760"
  },
  {
    "text": "for the account service the important thing here is that many of",
    "start": "629760",
    "end": "635360"
  },
  {
    "text": "these services can be started on demand so they don't need to be running all the time so",
    "start": "635360",
    "end": "640640"
  },
  {
    "text": "if for example you send a message to the org.free.freedesktop.accounts",
    "start": "640640",
    "end": "645720"
  },
  {
    "text": "and the account service daemon isn't running yet then it gets started up automatically and then it replies to",
    "start": "646480",
    "end": "653040"
  },
  {
    "text": "your message and so you never needed to know that it actually needed to be started up for your benefit",
    "start": "653040",
    "end": "660120"
  },
  {
    "text": "um this second config file defines the security policy",
    "start": "660160",
    "end": "666640"
  },
  {
    "text": "uh so first of all the top here is where it says that only a root process is allowed to claim this well-known name",
    "start": "666640",
    "end": "672000"
  },
  {
    "text": "which is what prevents an unprivileged process from impersonating the account service",
    "start": "672000",
    "end": "677920"
  },
  {
    "text": "and down here is where it defines the rules for sending messages to the account service now these",
    "start": "679120",
    "end": "686320"
  },
  {
    "text": "aren't quite so interesting so i was going to send you show you a second one here so this is the um",
    "start": "686320",
    "end": "692320"
  },
  {
    "text": "config file for systemd logind um",
    "start": "692320",
    "end": "697760"
  },
  {
    "text": "and what you see here is that d has this rule which says deny by",
    "start": "697760",
    "end": "703279"
  },
  {
    "text": "default so that's something that you can do if your service is highly security critical like login d is",
    "start": "703279",
    "end": "710560"
  },
  {
    "text": "okay it's time for another demo um so",
    "start": "711680",
    "end": "717120"
  },
  {
    "text": "like last time this is not a vulnerability vulnerability demo yet uh i just want to show you how poll kit works",
    "start": "717120",
    "end": "724639"
  },
  {
    "text": "so um if i go to the sys the settings dialog box here if i do something like clicking this",
    "start": "724639",
    "end": "731040"
  },
  {
    "text": "unlock button then you see this dialog box popping up this dialog box is known as an",
    "start": "731040",
    "end": "736959"
  },
  {
    "text": "authentication agent and so a root user or an admin user like the",
    "start": "736959",
    "end": "742480"
  },
  {
    "text": "other accounts on this machine kevin um needs to enter their password here in order to authorize that",
    "start": "742480",
    "end": "748639"
  },
  {
    "text": "again it is not just a graphical thing though so if for example i were to",
    "start": "748639",
    "end": "755279"
  },
  {
    "text": "try to create a user account with this dbos message",
    "start": "755279",
    "end": "762079"
  },
  {
    "text": "on the command line then you get that same dialog box again",
    "start": "762320",
    "end": "768160"
  },
  {
    "text": "now it doesn't even need to be a graphical dialogue box an authentication uh yeah",
    "start": "768959",
    "end": "774720"
  },
  {
    "text": "an authentication agent could even be text based so if for example i um",
    "start": "774720",
    "end": "780880"
  },
  {
    "text": "ssh in so that i'm on a text mode session and then there's another command which",
    "start": "780880",
    "end": "787120"
  },
  {
    "text": "also requires poll kit authorization called pk exec and that program actually starts its own",
    "start": "787120",
    "end": "794000"
  },
  {
    "text": "text mode authentication agent when it's in a text-based session and so you can see here that it's asking for the password on the command line",
    "start": "794000",
    "end": "802399"
  },
  {
    "text": "okay so in this diagram i'm going to try to explain the architecture of pull kit now",
    "start": "807600",
    "end": "813680"
  },
  {
    "text": "the first thing to note is that everything above the dotted line is an unprivileged process so the thing that's",
    "start": "813680",
    "end": "818959"
  },
  {
    "text": "quite interesting there is that the authentication agent is not a privileged process",
    "start": "818959",
    "end": "824560"
  },
  {
    "text": "um that dialog box is basically just a way of getting your password to pull kit",
    "start": "824560",
    "end": "830800"
  },
  {
    "text": "so the first thing that happens is that the authentication agent registers with",
    "start": "830800",
    "end": "836079"
  },
  {
    "text": "polkit and that's something that can happen as soon as you log in so that that authentication agent is already there ready to go when you need it",
    "start": "836079",
    "end": "844320"
  },
  {
    "text": "now suppose you do something like clicking that unlock button or trying to create a new",
    "start": "846000",
    "end": "852399"
  },
  {
    "text": "user account then what happens there is that a dbos",
    "start": "852399",
    "end": "857760"
  },
  {
    "text": "message gets sent to one of the system services and in this case that's the account service",
    "start": "857760",
    "end": "863040"
  },
  {
    "text": "um and an important thing to notice there is that the dbos daemon",
    "start": "863040",
    "end": "868959"
  },
  {
    "text": "has added the unique bus name for the message sorry for the sender of the message",
    "start": "868959",
    "end": "876000"
  },
  {
    "text": "so now the account service needs to check whether the sender is allowed to create a new user so it sends a check",
    "start": "877279",
    "end": "884079"
  },
  {
    "text": "authorization message to pulkit and includes the unique bus name in the message so that there can't be any",
    "start": "884079",
    "end": "889519"
  },
  {
    "text": "ambiguity about where this request came from now sometimes uh poll kit is able to",
    "start": "889519",
    "end": "896639"
  },
  {
    "text": "approve or deny the request instantly for example if the request came from a process that's running as root then it",
    "start": "896639",
    "end": "902800"
  },
  {
    "text": "will immediately send back an access granted message but most of the time it's going to need",
    "start": "902800",
    "end": "908800"
  },
  {
    "text": "to pop that dialog box and it does that by sending a message to the authentication agent and it attaches a",
    "start": "908800",
    "end": "914160"
  },
  {
    "text": "cookie to that message which the authentication agent is going to send back later",
    "start": "914160",
    "end": "920160"
  },
  {
    "text": "now remember that the authentication agent is not running as a privileged process so how is pulkit going to trust",
    "start": "920160",
    "end": "928480"
  },
  {
    "text": "that the password was checked properly when it gets that cookie back from the from the agent",
    "start": "928480",
    "end": "934160"
  },
  {
    "text": "um the way that that's done is that there's this set uid program called pull",
    "start": "934160",
    "end": "939519"
  },
  {
    "text": "agent helper1 that does the actual checking of the password so that thing runs as root and",
    "start": "939519",
    "end": "945839"
  },
  {
    "text": "polkit is only going to trust the response if it receives it from a route-owned",
    "start": "945839",
    "end": "951920"
  },
  {
    "text": "process so the final step is that now that the password has been checked",
    "start": "952839",
    "end": "958800"
  },
  {
    "text": "polkit sends back an ok reply and account service will now go ahead and create that new user account",
    "start": "958800",
    "end": "966959"
  },
  {
    "text": "now one final thing that i want to point out here is that it can take quite a long time for account service to get",
    "start": "967199",
    "end": "973360"
  },
  {
    "text": "that reply back from poll kit because you have to wait for the the user to type their password into that dialog box",
    "start": "973360",
    "end": "979759"
  },
  {
    "text": "um and meanwhile the account service might have to deal with other requests that have come from other processes so one of",
    "start": "979759",
    "end": "987519"
  },
  {
    "text": "the things that all dbus services and the libraries that they use have to be able to deal with is asynchronous",
    "start": "987519",
    "end": "994240"
  },
  {
    "text": "communication and we'll see some of that later",
    "start": "994240",
    "end": "999199"
  },
  {
    "text": "okay so let's have a look at polkit's config files",
    "start": "1001040",
    "end": "1006320"
  },
  {
    "text": "these are again very important because a mistake in one of these files could completely undermine the security of the",
    "start": "1006320",
    "end": "1011519"
  },
  {
    "text": "whole system now the um first of these directories is the standard location but the second is",
    "start": "1011519",
    "end": "1018320"
  },
  {
    "text": "a little bit obscure in fact it took me quite a while to discover this second location and it's",
    "start": "1018320",
    "end": "1025360"
  },
  {
    "text": "relevant to one of the vulnerabilities that i'm going to show you later",
    "start": "1025360",
    "end": "1030079"
  },
  {
    "text": "okay this is an excerpt of the config file for the account service",
    "start": "1032079",
    "end": "1038319"
  },
  {
    "text": "um and you can see that it defines these action ids",
    "start": "1038319",
    "end": "1043360"
  },
  {
    "text": "um and then it defines who is permitted to do those actions um so changing your",
    "start": "1043360",
    "end": "1050320"
  },
  {
    "text": "own user data that's just allowed with no further questions asked it says yes yes yes there for the permissions",
    "start": "1050320",
    "end": "1057440"
  },
  {
    "text": "but user administration so that's things like creating or deleting accounts for",
    "start": "1057440",
    "end": "1062880"
  },
  {
    "text": "that you need to have admin privileges so down there it says admin",
    "start": "1062880",
    "end": "1068640"
  },
  {
    "text": "now this is one of those config files from that obscure second directory",
    "start": "1070559",
    "end": "1076559"
  },
  {
    "text": "and this config file is granting special privileges to a user named gnome initial",
    "start": "1077760",
    "end": "1083760"
  },
  {
    "text": "setup um and so you can see here that it that one of the things that is it's giving",
    "start": "1083760",
    "end": "1089280"
  },
  {
    "text": "genome initial setup permission to do is anything relating to the account service so gnome initial setup is effectively",
    "start": "1089280",
    "end": "1096480"
  },
  {
    "text": "root um so it turns out the reason why this exists is that when you first install",
    "start": "1096480",
    "end": "1102320"
  },
  {
    "text": "gnome on a new computer you're presented with a series of dialog boxes that help you to create an account on that computer and those dialog boxes are",
    "start": "1102320",
    "end": "1109840"
  },
  {
    "text": "running as the gnome initial setup user and you're going to see those dialog boxes in one of my vulnerability demos",
    "start": "1109840",
    "end": "1116640"
  },
  {
    "text": "later",
    "start": "1116640",
    "end": "1119039"
  },
  {
    "text": "now i want to show you some examples of what it looks like to program a debuff service typically if you're implementing a",
    "start": "1121679",
    "end": "1128240"
  },
  {
    "text": "debuff service then you're going to use dbos library to do that and there are four main ones that i'm aware of",
    "start": "1128240",
    "end": "1134000"
  },
  {
    "text": "i'm only going to show you examples from two of them though uh the python one and the systemd1",
    "start": "1134000",
    "end": "1139360"
  },
  {
    "text": "so what do these libraries do well obviously they need to be able to parse and serialize dbos messages",
    "start": "1139360",
    "end": "1146480"
  },
  {
    "text": "but they also take care of listening on that unix domain socket and dispatching the incoming message to",
    "start": "1146480",
    "end": "1152799"
  },
  {
    "text": "the correct place and they usually have some way of helping you with the asynchronous",
    "start": "1152799",
    "end": "1158480"
  },
  {
    "text": "communication problem that i mentioned a few slides back",
    "start": "1158480",
    "end": "1163559"
  },
  {
    "text": "okay so this example is from the python3 app daemon application which is a",
    "start": "1169600",
    "end": "1174799"
  },
  {
    "text": "service that you can use to install software let me just make that a little bit bigger",
    "start": "1174799",
    "end": "1181039"
  },
  {
    "text": "so this is the install packages method and you can see here that it's got this",
    "start": "1181200",
    "end": "1186400"
  },
  {
    "text": "decorator on it which declares the dbos interface to this method now i'm not an expert python programmer",
    "start": "1186400",
    "end": "1193120"
  },
  {
    "text": "so i've got to admit that i don't fully understand all of the magic that's happening here with this uh decorator",
    "start": "1193120",
    "end": "1200080"
  },
  {
    "text": "but you notice that it has deferred in its name so this allows you to pause the",
    "start": "1200080",
    "end": "1205600"
  },
  {
    "text": "code while you're waiting for one of those asynchronous calls to finish",
    "start": "1205600",
    "end": "1210720"
  },
  {
    "text": "and you see that here this is the the code that app demon uses to call out",
    "start": "1213039",
    "end": "1219039"
  },
  {
    "text": "to pulkit um i just made that bigger there",
    "start": "1219039",
    "end": "1224720"
  },
  {
    "text": "so this is where it's calling polkit um and you can see that it's registering this",
    "start": "1224720",
    "end": "1231679"
  },
  {
    "text": "callback function here and what happens there is that the this code",
    "start": "1231679",
    "end": "1237840"
  },
  {
    "text": "will get paused until the reply comes in and then that callback will get will get called once the reply has arrived and",
    "start": "1237840",
    "end": "1243919"
  },
  {
    "text": "that's when the deferred code starts running again",
    "start": "1243919",
    "end": "1249640"
  },
  {
    "text": "okay so the second example is from system d login d and i'm just going to make that a little bit bigger again",
    "start": "1253840",
    "end": "1260880"
  },
  {
    "text": "so this is uh c codes it's a bit lower level um and so for example you can see here",
    "start": "1261280",
    "end": "1268480"
  },
  {
    "text": "that they're having to use this library function to read the contents of the message whereas in the python case that was handled by that that magic decorator",
    "start": "1268480",
    "end": "1278639"
  },
  {
    "text": "now the way that systemd handles the asynchronous communication with pulkit is i think quite clever",
    "start": "1280640",
    "end": "1287120"
  },
  {
    "text": "c doesn't have any built-in support for closures so doing something like that deferred stuff that we just saw in",
    "start": "1287120",
    "end": "1292720"
  },
  {
    "text": "python would be really quite awkward so what system d does instead is basically",
    "start": "1292720",
    "end": "1298159"
  },
  {
    "text": "just replay the whole message again so the first time that you call this",
    "start": "1298159",
    "end": "1304480"
  },
  {
    "text": "verify async function it returns zero which means i'll call you again when i receive the reply and on the second run",
    "start": "1304480",
    "end": "1311039"
  },
  {
    "text": "through um it will return either a positive number or a negative number depending on",
    "start": "1311039",
    "end": "1316799"
  },
  {
    "text": "whether the request was authorized",
    "start": "1316799",
    "end": "1320320"
  },
  {
    "text": "okay so let's talk about common bug categories that can happen in these debuff services",
    "start": "1322640",
    "end": "1327840"
  },
  {
    "text": "now many of these services are written in c so you'd think that many of them would have memory corruption vulnerabilities",
    "start": "1327840",
    "end": "1334720"
  },
  {
    "text": "but actually i've had zero success in finding any of those kinds of vulnerabilities",
    "start": "1334720",
    "end": "1340720"
  },
  {
    "text": "obviously doesn't mean that they're not there it's just that i haven't been able to find them myself but i do think that",
    "start": "1340720",
    "end": "1346880"
  },
  {
    "text": "maybe because most of these applications are using",
    "start": "1346880",
    "end": "1352400"
  },
  {
    "text": "these dbos libraries to do the lower level message parsing stuff but maybe that's",
    "start": "1352400",
    "end": "1357520"
  },
  {
    "text": "why i've not found many vulnerabilities because those libraries have been quite well tested",
    "start": "1357520",
    "end": "1364400"
  },
  {
    "text": "what i have seen a lot of is privilege dropping mistakes so quite often a user will send one of",
    "start": "1364400",
    "end": "1370960"
  },
  {
    "text": "these services a path to a file like for example when we changed the user's icon in that demo earlier so if the service",
    "start": "1370960",
    "end": "1377600"
  },
  {
    "text": "is running as root then it needs to be careful not to use its root privileges to read that file otherwise that could",
    "start": "1377600",
    "end": "1382880"
  },
  {
    "text": "potentially lead to an information disclosure vulnerability so instead the service will often change",
    "start": "1382880",
    "end": "1388000"
  },
  {
    "text": "its uid so that it can only read the files that you can read but if it does that incorrectly then that can lead to a denial of service",
    "start": "1388000",
    "end": "1394880"
  },
  {
    "text": "vulnerability and so i'm going to show you examples of examples of both of those",
    "start": "1394880",
    "end": "1400640"
  },
  {
    "text": "problems in a second file system time of check time of use",
    "start": "1400640",
    "end": "1405679"
  },
  {
    "text": "vulnerabilities or another similar kind of bug but the two most serious bugs that i've",
    "start": "1405679",
    "end": "1411760"
  },
  {
    "text": "found have both been caused by bad error handling in both cases that led to local",
    "start": "1411760",
    "end": "1417760"
  },
  {
    "text": "privilege escalation and those are the demos that i'm going to show you in a minute",
    "start": "1417760",
    "end": "1423360"
  },
  {
    "text": "okay so this is an example of a file existence disclosure bug let me just make that a bit bigger",
    "start": "1423440",
    "end": "1431840"
  },
  {
    "text": "so the bug here is that deb conf socket is a path that was sent by the user and",
    "start": "1434159",
    "end": "1440080"
  },
  {
    "text": "apps daemon is using root privileges to check whether that file exists",
    "start": "1440080",
    "end": "1445760"
  },
  {
    "text": "and the problem is that you can tell from the error message whether or not that file exists or not",
    "start": "1445760",
    "end": "1452799"
  },
  {
    "text": "um now that's not a very serious vulnerability but sometimes bugs like this can be quite useful as part of an",
    "start": "1452799",
    "end": "1458480"
  },
  {
    "text": "exploit chain",
    "start": "1458480",
    "end": "1461120"
  },
  {
    "text": "now this is an example of a denial service vulnerability in the account service caused by bad privilege dropping",
    "start": "1465200",
    "end": "1472159"
  },
  {
    "text": "i'll make that bigger again",
    "start": "1472159",
    "end": "1475279"
  },
  {
    "text": "so you can see here that it's temporarily dropping privileges to read a file and then it regains them again",
    "start": "1479039",
    "end": "1484799"
  },
  {
    "text": "afterwards but there's two problems here the first",
    "start": "1484799",
    "end": "1489840"
  },
  {
    "text": "is that you could supply a malicious file that makes this loop run for a really long time",
    "start": "1489840",
    "end": "1495120"
  },
  {
    "text": "and the second bug which you can't see in this code snippet is that they dropped the real user id as well as the",
    "start": "1495120",
    "end": "1501600"
  },
  {
    "text": "effective user id which meant that the user could send signals to the surface to the service and so in the demo later",
    "start": "1501600",
    "end": "1508960"
  },
  {
    "text": "i'm going to use that to send the kill signal to the account service and make it crash",
    "start": "1508960",
    "end": "1516158"
  },
  {
    "text": "now this is the first of one of those more serious error handling bugs it's in gdm3 which is part of the gnome",
    "start": "1520880",
    "end": "1530320"
  },
  {
    "text": "graphical environment let me make that bit bigger",
    "start": "1530320",
    "end": "1535440"
  },
  {
    "text": "so what's happening here is that gdm3 is",
    "start": "1539440",
    "end": "1546159"
  },
  {
    "text": "asking the account service how many user accounts there are on the system um and the reason it's doing that is",
    "start": "1546159",
    "end": "1551760"
  },
  {
    "text": "because if there's zero user accounts and that means that this is the first time installation and it's going to trigger gnome initial",
    "start": "1551760",
    "end": "1559120"
  },
  {
    "text": "setup which is going to allow you to create a new account with admin privileges",
    "start": "1559120",
    "end": "1565760"
  },
  {
    "text": "so the bug here is that if the dbos debuss call fails um",
    "start": "1567919",
    "end": "1574720"
  },
  {
    "text": "then it doesn't set the value of have existing user accounts",
    "start": "1576400",
    "end": "1581840"
  },
  {
    "text": "and unfortunately unfortunately the default value of that field was false",
    "start": "1581840",
    "end": "1586880"
  },
  {
    "text": "so in the demo i'm going to make that call fail by crashing the account service and that's going to lead to a bypass here",
    "start": "1586880",
    "end": "1594720"
  },
  {
    "text": "okay it's time for the first vulnerability demo",
    "start": "1595840",
    "end": "1601120"
  },
  {
    "text": "um now just to be clear these vulnerabilities are already fixed but in this vm i've",
    "start": "1601600",
    "end": "1608559"
  },
  {
    "text": "installed the older versions of the software that had the vulnerabilities for the purposes of this demo",
    "start": "1608559",
    "end": "1615520"
  },
  {
    "text": "now in this demo there's going to be a delay in a minute while it um",
    "start": "1615520",
    "end": "1621760"
  },
  {
    "text": "does some stuff and so i'll what i'm going to do is i'm just going to type a bunch of commands quickly and then i'll",
    "start": "1621760",
    "end": "1627039"
  },
  {
    "text": "explain what happened during that pause so i am going to create a sim link",
    "start": "1627039",
    "end": "1634640"
  },
  {
    "text": "in my home directory and then i'm going to go to the system",
    "start": "1634640",
    "end": "1640480"
  },
  {
    "text": "services settings dialog box and i'm going to change my",
    "start": "1640480",
    "end": "1646799"
  },
  {
    "text": "language and that's going to trigger that loop that we saw earlier on",
    "start": "1647120",
    "end": "1652320"
  },
  {
    "text": "and then i'm going to remove that file again and i'm going to cause the",
    "start": "1652320",
    "end": "1658559"
  },
  {
    "text": "account service to crash and i need to quickly log out after issuing this command",
    "start": "1658559",
    "end": "1664320"
  },
  {
    "text": "okay so hopefully that should trigger the bug um so let me just explain what was going on there so i created a sim link from a",
    "start": "1667600",
    "end": "1674320"
  },
  {
    "text": "file called dot pam environment in my home directory to dev0 and that",
    "start": "1674320",
    "end": "1679679"
  },
  {
    "text": "triggered that loop that we saw earlier then i",
    "start": "1679679",
    "end": "1685760"
  },
  {
    "text": "changed language in the system settings and that actually was the debuff message that",
    "start": "1685760",
    "end": "1690880"
  },
  {
    "text": "that triggered the account service run that loop um and then i removed the file so that i",
    "start": "1690880",
    "end": "1698320"
  },
  {
    "text": "can log in again afterwards um and so then the next thing was that i",
    "start": "1698320",
    "end": "1703600"
  },
  {
    "text": "needed to trigger the error handling code in gdm3 and that was uh",
    "start": "1703600",
    "end": "1709120"
  },
  {
    "text": "triggered by logging out and just before i did that i used that no hop command to set a",
    "start": "1709120",
    "end": "1716080"
  },
  {
    "text": "little timer so that the kill signal would be sent to account service shortly after i'd logged out so that",
    "start": "1716080",
    "end": "1722960"
  },
  {
    "text": "created the timing so that when gdm3 sends its message",
    "start": "1722960",
    "end": "1728000"
  },
  {
    "text": "the account service is still alive but then it um then it dies shortly after that",
    "start": "1728000",
    "end": "1734080"
  },
  {
    "text": "um and so that then triggered the bug it thinks that we're in an initial setup now and",
    "start": "1734080",
    "end": "1740960"
  },
  {
    "text": "so now it's running that gnome initial setup code which is going to allow me to create a new user account so just",
    "start": "1740960",
    "end": "1746960"
  },
  {
    "text": "quickly click through these dialog boxes and enter a new username",
    "start": "1746960",
    "end": "1754760"
  },
  {
    "text": "and so uh that has now created a new user account called indiana",
    "start": "1766159",
    "end": "1771279"
  },
  {
    "text": "and we'll see in just a second that indiana is an admin user so if i do id here you can see that indiana is a",
    "start": "1771279",
    "end": "1777760"
  },
  {
    "text": "member of the sudo group okay i'm going to just log back out and",
    "start": "1777760",
    "end": "1784240"
  },
  {
    "text": "log back in as junior for the next demo okay so the second vulnerability was",
    "start": "1784240",
    "end": "1791600"
  },
  {
    "text": "also caused by bad error handling but this vulnerability is in pole kit itself",
    "start": "1791600",
    "end": "1797360"
  },
  {
    "text": "so this code that you see here is used when pull kit is checking",
    "start": "1797360",
    "end": "1802880"
  },
  {
    "text": "whether or not you're already authorized to perform an action so what it does is it asks the dbos",
    "start": "1802880",
    "end": "1808080"
  },
  {
    "text": "daemon for your credentials and if for example the dbos daemon says this user is root then it's going to immediately",
    "start": "1808080",
    "end": "1814640"
  },
  {
    "text": "approve the the request okay so let's zoom in here",
    "start": "1814640",
    "end": "1820320"
  },
  {
    "text": "um so this bug is very similar to the last one um so",
    "start": "1820799",
    "end": "1828000"
  },
  {
    "text": "it uh it sends a message to the dbos demon and when it gets reply this callback",
    "start": "1829279",
    "end": "1836159"
  },
  {
    "text": "function is called and what that callback function does is it sets the fields of the struct called",
    "start": "1836159",
    "end": "1843360"
  },
  {
    "text": "data now normally it would set the",
    "start": "1843360",
    "end": "1850399"
  },
  {
    "text": "retrieved uid and retrieved pid fields but when an error occurs it sets the court error field instead",
    "start": "1850399",
    "end": "1858720"
  },
  {
    "text": "um but when that happens it still ends up returning true and because the uid and",
    "start": "1860080",
    "end": "1866799"
  },
  {
    "text": "pit fields were never set they end up remaining zero and so it actually then looks like the caller was a root process",
    "start": "1866799",
    "end": "1875600"
  },
  {
    "text": "so really the only question is how do we trigger an error here so that that code path will get taken",
    "start": "1875600",
    "end": "1881360"
  },
  {
    "text": "and the answer is that you can do that by disconnecting from the dbos daemon while pulkit is halfway through",
    "start": "1881360",
    "end": "1887120"
  },
  {
    "text": "processing this code so let's demo that now",
    "start": "1887120",
    "end": "1893398"
  },
  {
    "text": "so i'm going to run the same command that i did before which is",
    "start": "1894960",
    "end": "1901360"
  },
  {
    "text": "trying to create a user account called boris now that dialog box is going to be kind",
    "start": "1901360",
    "end": "1906480"
  },
  {
    "text": "of annoying so it's going to be better if i run it from a text mode session so that we don't get the dialog box",
    "start": "1906480",
    "end": "1912480"
  },
  {
    "text": "so if i run that there then it gets instantly denied and so what we're going to do now is",
    "start": "1912480",
    "end": "1917840"
  },
  {
    "text": "we're just going to add this little bit on the end which uh kills it after it's um",
    "start": "1917840",
    "end": "1923679"
  },
  {
    "text": "hopefully approximately halfway it's a little bit non-deterministic because um getting the timing right isn't um",
    "start": "1923679",
    "end": "1930320"
  },
  {
    "text": "always timing isn't always the same and so",
    "start": "1930320",
    "end": "1935360"
  },
  {
    "text": "um let's see yeah that didn't work the first time so usually we have to run it",
    "start": "1935360",
    "end": "1941440"
  },
  {
    "text": "a few times to get it to work so i'm just going to do that and then see if",
    "start": "1941440",
    "end": "1947200"
  },
  {
    "text": "yep boris has been created now and you can see that boris is a pseudo user but boris doesn't have a password yet so i'm",
    "start": "1947200",
    "end": "1954080"
  },
  {
    "text": "gonna have to uh run this exploit a second time with a different dbos",
    "start": "1954080",
    "end": "1960320"
  },
  {
    "text": "message in order to give boris a password so i'm going to use",
    "start": "1960320",
    "end": "1965519"
  },
  {
    "text": "this open ssl command to convert the password into a hash",
    "start": "1965519",
    "end": "1971600"
  },
  {
    "text": "and then i'm going to paste that hash into this command here",
    "start": "1971600",
    "end": "1978880"
  },
  {
    "text": "and there and then i'm just going to run that a few times again hopefully that will",
    "start": "1984080",
    "end": "1990640"
  },
  {
    "text": "have worked a few more for luck uh and let's see if we can log into the",
    "start": "1990640",
    "end": "1996159"
  },
  {
    "text": "boris account and the password is i am",
    "start": "1996159",
    "end": "2002480"
  },
  {
    "text": "invincible that worked and so you can see boris is a pseudo-user and",
    "start": "2002840",
    "end": "2009919"
  },
  {
    "text": "that means that you can become root like this okay that was the demo",
    "start": "2009919",
    "end": "2018840"
  },
  {
    "text": "so um that's about it uh in to conclude um",
    "start": "2020720",
    "end": "2027279"
  },
  {
    "text": "i think that dbos is quite a well-designed ipc system but some parts of it are a bit complex",
    "start": "2027279",
    "end": "2034080"
  },
  {
    "text": "and complexity can cause accidents the most common types of bugs that i've",
    "start": "2034080",
    "end": "2040240"
  },
  {
    "text": "encountered have been privileged dropping mistakes and bad error handling",
    "start": "2040240",
    "end": "2045360"
  },
  {
    "text": "privilege dropping mistakes have generally been relatively minor problems but the two error handling bugs that",
    "start": "2045360",
    "end": "2051280"
  },
  {
    "text": "i've found have led to quite serious privilege escalation vulnerabilities",
    "start": "2051280",
    "end": "2056960"
  },
  {
    "text": "thanks for watching [Music]",
    "start": "2056960",
    "end": "2068820"
  },
  {
    "text": "you",
    "start": "2069359",
    "end": "2071440"
  }
]