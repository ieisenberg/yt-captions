[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "910",
    "end": "7790"
  },
  {
    "text": "hello everyone",
    "start": "8400",
    "end": "10320"
  },
  {
    "text": "my name is encho",
    "start": "10320",
    "end": "12160"
  },
  {
    "text": "so happy to share our research",
    "start": "12160",
    "end": "14719"
  },
  {
    "text": "in blackhat europe 2021",
    "start": "14719",
    "end": "17440"
  },
  {
    "text": "my talk is rewrote your intent for",
    "start": "17440",
    "end": "20240"
  },
  {
    "text": "privileged escalation and universal way",
    "start": "20240",
    "end": "23199"
  },
  {
    "text": "to exploit android pending intents in",
    "start": "23199",
    "end": "26160"
  },
  {
    "text": "high profile and system apps",
    "start": "26160",
    "end": "30920"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "this is our agenda",
    "start": "30960",
    "end": "32640"
  },
  {
    "text": "and first i'm gonna introduce the basic",
    "start": "32640",
    "end": "35840"
  },
  {
    "text": "concept of intense and pending tense in",
    "start": "35840",
    "end": "39120"
  },
  {
    "text": "android",
    "start": "39120",
    "end": "40559"
  },
  {
    "text": "then give previous research examples",
    "start": "40559",
    "end": "43680"
  },
  {
    "text": "then the key parts of this talk",
    "start": "43680",
    "end": "46480"
  },
  {
    "text": "i'll discuss how to retrieve hand",
    "start": "46480",
    "end": "48719"
  },
  {
    "text": "intents and how to hijack insecure",
    "start": "48719",
    "end": "51600"
  },
  {
    "text": "pending tense",
    "start": "51600",
    "end": "53039"
  },
  {
    "text": "then i'll give typical vulnerability",
    "start": "53039",
    "end": "55120"
  },
  {
    "text": "cases",
    "start": "55120",
    "end": "56079"
  },
  {
    "text": "in real world app most of them are from",
    "start": "56079",
    "end": "59600"
  },
  {
    "text": "android system and last i introduce",
    "start": "59600",
    "end": "63280"
  },
  {
    "text": "our pen intent scanner and create",
    "start": "63280",
    "end": "65680"
  },
  {
    "text": "changes about pen intent introduced in",
    "start": "65680",
    "end": "68240"
  },
  {
    "text": "upcoming android 12.",
    "start": "68240",
    "end": "72200"
  },
  {
    "start": "72000",
    "end": "72000"
  },
  {
    "text": "before we start",
    "start": "72560",
    "end": "74080"
  },
  {
    "text": "let me introduce who we are",
    "start": "74080",
    "end": "76720"
  },
  {
    "text": "and her",
    "start": "76720",
    "end": "77680"
  },
  {
    "text": "in oppo zoo security lab",
    "start": "77680",
    "end": "81360"
  },
  {
    "text": "oppo zoo security lab was funded by oppo",
    "start": "81360",
    "end": "84000"
  },
  {
    "text": "security in march",
    "start": "84000",
    "end": "85680"
  },
  {
    "text": "2019",
    "start": "85680",
    "end": "87280"
  },
  {
    "text": "it focuses on security and privacy",
    "start": "87280",
    "end": "89920"
  },
  {
    "text": "research in the field of android web",
    "start": "89920",
    "end": "93920"
  },
  {
    "text": "browser and iot",
    "start": "93920",
    "end": "96720"
  },
  {
    "text": "one bulletin",
    "start": "96720",
    "end": "98400"
  },
  {
    "text": "is an independent security researcher",
    "start": "98400",
    "end": "101520"
  },
  {
    "text": "taoyang wu he works in vulnerability and",
    "start": "101520",
    "end": "105040"
  },
  {
    "text": "privacy research lab",
    "start": "105040",
    "end": "106880"
  },
  {
    "text": "in the chinese university of hong kong",
    "start": "106880",
    "end": "111118"
  },
  {
    "text": "so",
    "start": "111680",
    "end": "112479"
  },
  {
    "text": "what are intents",
    "start": "112479",
    "end": "114479"
  },
  {
    "text": "intense",
    "start": "114479",
    "end": "115600"
  },
  {
    "text": "a high-level inter-component messages",
    "start": "115600",
    "end": "118880"
  },
  {
    "text": "based on binder sent between apps to",
    "start": "118880",
    "end": "121759"
  },
  {
    "text": "perform actions",
    "start": "121759",
    "end": "123920"
  },
  {
    "text": "for example",
    "start": "123920",
    "end": "125360"
  },
  {
    "text": "app a can use an intent to perform",
    "start": "125360",
    "end": "128560"
  },
  {
    "text": "actions like start activity send",
    "start": "128560",
    "end": "131200"
  },
  {
    "text": "broadcast start service and app b",
    "start": "131200",
    "end": "134959"
  },
  {
    "text": "intent has many fields to describe",
    "start": "134959",
    "end": "137440"
  },
  {
    "text": "itself",
    "start": "137440",
    "end": "138720"
  },
  {
    "text": "including action data component and so",
    "start": "138720",
    "end": "141280"
  },
  {
    "text": "on if it has component or selector it is",
    "start": "141280",
    "end": "145440"
  },
  {
    "text": "an explicit intent",
    "start": "145440",
    "end": "147920"
  },
  {
    "text": "meaning the destination app is being",
    "start": "147920",
    "end": "150760"
  },
  {
    "text": "explicitly set",
    "start": "150760",
    "end": "153200"
  },
  {
    "text": "so it has only",
    "start": "153200",
    "end": "155040"
  },
  {
    "text": "if it has only action it is the implicit",
    "start": "155040",
    "end": "158160"
  },
  {
    "text": "intent",
    "start": "158160",
    "end": "159280"
  },
  {
    "text": "meaning only apps declaring intended",
    "start": "159280",
    "end": "161920"
  },
  {
    "text": "filter when this action can receive the",
    "start": "161920",
    "end": "165200"
  },
  {
    "text": "intent",
    "start": "165200",
    "end": "166400"
  },
  {
    "text": "if it has no field we call it an empty",
    "start": "166400",
    "end": "169840"
  },
  {
    "text": "intent",
    "start": "169840",
    "end": "172239"
  },
  {
    "text": "then pending intents",
    "start": "173680",
    "end": "175840"
  },
  {
    "text": "the advanced version of noble android",
    "start": "175840",
    "end": "178400"
  },
  {
    "text": "intents",
    "start": "178400",
    "end": "179519"
  },
  {
    "text": "provides",
    "start": "179519",
    "end": "180560"
  },
  {
    "text": "powerful inter-components communications",
    "start": "180560",
    "end": "183680"
  },
  {
    "text": "android",
    "start": "183680",
    "end": "184879"
  },
  {
    "text": "a pending intent holds a base intent",
    "start": "184879",
    "end": "187760"
  },
  {
    "text": "that can be executed by another app",
    "start": "187760",
    "end": "190879"
  },
  {
    "text": "under the creator apps identity and",
    "start": "190879",
    "end": "193760"
  },
  {
    "text": "permissions as if the target app was",
    "start": "193760",
    "end": "196959"
  },
  {
    "text": "created",
    "start": "196959",
    "end": "198400"
  },
  {
    "text": "for example",
    "start": "198400",
    "end": "199840"
  },
  {
    "text": "app a can send",
    "start": "199840",
    "end": "201599"
  },
  {
    "text": "its pending intent",
    "start": "201599",
    "end": "203200"
  },
  {
    "text": "with the base intent to app b",
    "start": "203200",
    "end": "205760"
  },
  {
    "text": "then app b invoke 10 intent send",
    "start": "205760",
    "end": "209599"
  },
  {
    "text": "to send the base intent on behalf of app",
    "start": "209599",
    "end": "213200"
  },
  {
    "text": "a",
    "start": "213200",
    "end": "215360"
  },
  {
    "text": "what if some malicious apps",
    "start": "215360",
    "end": "217599"
  },
  {
    "text": "got pen intent sent between",
    "start": "217599",
    "end": "220560"
  },
  {
    "text": "this is a root cause",
    "start": "220560",
    "end": "222400"
  },
  {
    "text": "of pending tender security issue",
    "start": "222400",
    "end": "225200"
  },
  {
    "text": "as creators important identity and",
    "start": "225200",
    "end": "228319"
  },
  {
    "text": "permissions",
    "start": "228319",
    "end": "229680"
  },
  {
    "text": "pending intents could be linked to",
    "start": "229680",
    "end": "232000"
  },
  {
    "text": "third-party apps",
    "start": "232000",
    "end": "233680"
  },
  {
    "text": "resulting privilege escalation",
    "start": "233680",
    "end": "236080"
  },
  {
    "text": "unexpectedly",
    "start": "236080",
    "end": "239080"
  },
  {
    "start": "240000",
    "end": "240000"
  },
  {
    "text": "the pending intent api",
    "start": "240640",
    "end": "242959"
  },
  {
    "text": "include get activity get activities get",
    "start": "242959",
    "end": "245760"
  },
  {
    "text": "broadcast get service get foreground",
    "start": "245760",
    "end": "248239"
  },
  {
    "text": "service",
    "start": "248239",
    "end": "250640"
  },
  {
    "text": "apps using to generate a pending intent",
    "start": "251120",
    "end": "255840"
  },
  {
    "text": "notice the parameter of the apis",
    "start": "255840",
    "end": "258560"
  },
  {
    "text": "the intended parameter is write to the",
    "start": "258560",
    "end": "260959"
  },
  {
    "text": "base intent",
    "start": "260959",
    "end": "262639"
  },
  {
    "text": "if there is no flag immutable",
    "start": "262639",
    "end": "265360"
  },
  {
    "text": "which is by default",
    "start": "265360",
    "end": "267120"
  },
  {
    "text": "the base intent can be modified later",
    "start": "267120",
    "end": "271520"
  },
  {
    "text": "this flag",
    "start": "271520",
    "end": "272720"
  },
  {
    "text": "just began to be widely used to fix the",
    "start": "272720",
    "end": "276000"
  },
  {
    "text": "pending intent back after our research",
    "start": "276000",
    "end": "280080"
  },
  {
    "text": "also note filling flux",
    "start": "280080",
    "end": "282960"
  },
  {
    "text": "which allows the current selector or",
    "start": "282960",
    "end": "285120"
  },
  {
    "text": "component to be overwritten",
    "start": "285120",
    "end": "287360"
  },
  {
    "text": "even if it is already set",
    "start": "287360",
    "end": "291520"
  },
  {
    "start": "291000",
    "end": "291000"
  },
  {
    "text": "previous research just shows the tips of",
    "start": "292560",
    "end": "295199"
  },
  {
    "text": "pending intent security iceberg",
    "start": "295199",
    "end": "297680"
  },
  {
    "text": "there are few cases of hijacking",
    "start": "297680",
    "end": "300400"
  },
  {
    "text": "empty-based intents",
    "start": "300400",
    "end": "302560"
  },
  {
    "text": "one is in aosp settings",
    "start": "302560",
    "end": "305600"
  },
  {
    "text": "it's a",
    "start": "305600",
    "end": "306639"
  },
  {
    "text": "broadcast anywhere back",
    "start": "306639",
    "end": "309039"
  },
  {
    "text": "the bug involves",
    "start": "309039",
    "end": "311120"
  },
  {
    "text": "complicated interaction between settings",
    "start": "311120",
    "end": "314560"
  },
  {
    "text": "system server and an authenticator app",
    "start": "314560",
    "end": "318320"
  },
  {
    "text": "a malicious authenticator",
    "start": "318320",
    "end": "320800"
  },
  {
    "text": "can get mpending intent created by",
    "start": "320800",
    "end": "323600"
  },
  {
    "text": "settings add a dangerous action",
    "start": "323600",
    "end": "326800"
  },
  {
    "text": "such as",
    "start": "326800",
    "end": "327919"
  },
  {
    "text": "action boot completed and send it in the",
    "start": "327919",
    "end": "330880"
  },
  {
    "text": "name of uid 1000 to send the broadcast",
    "start": "330880",
    "end": "334400"
  },
  {
    "text": "to any reservers in the system",
    "start": "334400",
    "end": "337199"
  },
  {
    "text": "this is why the spark is called",
    "start": "337199",
    "end": "339360"
  },
  {
    "text": "broadcast anywhere",
    "start": "339360",
    "end": "342800"
  },
  {
    "text": "the other case",
    "start": "343120",
    "end": "344960"
  },
  {
    "text": "is in popular app line shared in kansas",
    "start": "344960",
    "end": "348479"
  },
  {
    "text": "west 2016.",
    "start": "348479",
    "end": "350880"
  },
  {
    "text": "the line app leaks append intent with",
    "start": "350880",
    "end": "353840"
  },
  {
    "text": "base",
    "start": "353840",
    "end": "354880"
  },
  {
    "text": "empty intents",
    "start": "354880",
    "end": "356960"
  },
  {
    "text": "then malicious app can get the pending",
    "start": "356960",
    "end": "359360"
  },
  {
    "text": "intent created by line",
    "start": "359360",
    "end": "361280"
  },
  {
    "text": "add a dangerous action and extras",
    "start": "361280",
    "end": "364160"
  },
  {
    "text": "and send it in the name online",
    "start": "364160",
    "end": "366400"
  },
  {
    "text": "to create a fake push message",
    "start": "366400",
    "end": "370800"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "so",
    "start": "371680",
    "end": "372639"
  },
  {
    "text": "in previous research",
    "start": "372639",
    "end": "374720"
  },
  {
    "text": "insecure pending intents",
    "start": "374720",
    "end": "376800"
  },
  {
    "text": "are retrieved from intent based",
    "start": "376800",
    "end": "379440"
  },
  {
    "text": "inter-component communications",
    "start": "379440",
    "end": "382000"
  },
  {
    "text": "which actually are very rare",
    "start": "382000",
    "end": "385360"
  },
  {
    "text": "so far we have the first basic problem",
    "start": "385360",
    "end": "388960"
  },
  {
    "text": "of this research",
    "start": "388960",
    "end": "392000"
  },
  {
    "text": "can we retrieve pending intents",
    "start": "393039",
    "end": "396240"
  },
  {
    "text": "which are widely used in slice providers",
    "start": "396240",
    "end": "399680"
  },
  {
    "text": "notifications",
    "start": "399680",
    "end": "401280"
  },
  {
    "text": "media browser services and app widgets",
    "start": "401280",
    "end": "406080"
  },
  {
    "text": "only after retrieving them can we",
    "start": "406080",
    "end": "408880"
  },
  {
    "text": "explore it further",
    "start": "408880",
    "end": "412000"
  },
  {
    "text": "let's take a look at the slice provider",
    "start": "413440",
    "end": "415520"
  },
  {
    "text": "first",
    "start": "415520",
    "end": "416880"
  },
  {
    "text": "it is a mechanism to share slices",
    "start": "416880",
    "end": "419599"
  },
  {
    "text": "between",
    "start": "419599",
    "end": "420840"
  },
  {
    "text": "applications for example",
    "start": "420840",
    "end": "423360"
  },
  {
    "text": "settings app can share its emphasis",
    "start": "423360",
    "end": "425919"
  },
  {
    "text": "setting slides",
    "start": "425919",
    "end": "427360"
  },
  {
    "text": "via content-based slides ui to slice",
    "start": "427360",
    "end": "430479"
  },
  {
    "text": "viewer app while exporting the settings",
    "start": "430479",
    "end": "433120"
  },
  {
    "text": "size provider",
    "start": "433120",
    "end": "435039"
  },
  {
    "text": "then slice viewer can allow user to set",
    "start": "435039",
    "end": "437840"
  },
  {
    "text": "nfc in its own user interface",
    "start": "437840",
    "end": "442639"
  },
  {
    "text": "so what are slices",
    "start": "444880",
    "end": "447440"
  },
  {
    "text": "slices",
    "start": "447440",
    "end": "448720"
  },
  {
    "text": "are shareable uis",
    "start": "448720",
    "end": "450880"
  },
  {
    "text": "represented by slice uis",
    "start": "450880",
    "end": "453360"
  },
  {
    "text": "and exposed by size provider",
    "start": "453360",
    "end": "458159"
  },
  {
    "text": "it contains icon title and slice action",
    "start": "461520",
    "end": "466400"
  },
  {
    "text": "and the slice action is implement",
    "start": "466400",
    "end": "469520"
  },
  {
    "text": "implemented with pending intent as the",
    "start": "469520",
    "end": "472479"
  },
  {
    "text": "source code snippets shows",
    "start": "472479",
    "end": "475919"
  },
  {
    "text": "developers can use slash wheel manager",
    "start": "477599",
    "end": "480000"
  },
  {
    "text": "band slice api to bind the size provider",
    "start": "480000",
    "end": "483599"
  },
  {
    "text": "to get a size",
    "start": "483599",
    "end": "485199"
  },
  {
    "text": "or use low level content resolver call",
    "start": "485199",
    "end": "488000"
  },
  {
    "text": "api",
    "start": "488000",
    "end": "489199"
  },
  {
    "text": "then get pending intent from slice here",
    "start": "489199",
    "end": "492479"
  },
  {
    "text": "is an example of using content resolver",
    "start": "492479",
    "end": "496160"
  },
  {
    "text": "call method",
    "start": "496160",
    "end": "497520"
  },
  {
    "text": "to bind",
    "start": "497520",
    "end": "498720"
  },
  {
    "text": "a slice provider and get a slice",
    "start": "498720",
    "end": "501520"
  },
  {
    "text": "then get a pending intent",
    "start": "501520",
    "end": "503440"
  },
  {
    "text": "in the slice",
    "start": "503440",
    "end": "506759"
  },
  {
    "text": "then let's take a look at the",
    "start": "507680",
    "end": "509120"
  },
  {
    "text": "notification",
    "start": "509120",
    "end": "510800"
  },
  {
    "text": "notifications are extremely common in",
    "start": "510800",
    "end": "513839"
  },
  {
    "text": "android system",
    "start": "513839",
    "end": "515440"
  },
  {
    "text": "just as a picture shows",
    "start": "515440",
    "end": "517760"
  },
  {
    "text": "a notification contains further actions",
    "start": "517760",
    "end": "520800"
  },
  {
    "text": "after user taps its contents and buttons",
    "start": "520800",
    "end": "524560"
  },
  {
    "text": "these actions are actually pending",
    "start": "524560",
    "end": "526560"
  },
  {
    "text": "intents",
    "start": "526560",
    "end": "527680"
  },
  {
    "text": "such as content intent",
    "start": "527680",
    "end": "530160"
  },
  {
    "text": "and notification action action intents",
    "start": "530160",
    "end": "534080"
  },
  {
    "text": "for example",
    "start": "534080",
    "end": "535519"
  },
  {
    "text": "this source code builds a notification",
    "start": "535519",
    "end": "538080"
  },
  {
    "text": "redirecting users to alert detail",
    "start": "538080",
    "end": "542160"
  },
  {
    "text": "activity once its content being tapped",
    "start": "542160",
    "end": "546879"
  },
  {
    "text": "so how to retrieve pending intent from",
    "start": "547200",
    "end": "549279"
  },
  {
    "text": "notifications",
    "start": "549279",
    "end": "551360"
  },
  {
    "text": "after our research",
    "start": "551360",
    "end": "553040"
  },
  {
    "text": "it turns out apps can implement",
    "start": "553040",
    "end": "556480"
  },
  {
    "text": "notification listener service to monitor",
    "start": "556480",
    "end": "560240"
  },
  {
    "text": "and listen to notifications",
    "start": "560240",
    "end": "562880"
  },
  {
    "text": "then retrieve pending intent in the",
    "start": "562880",
    "end": "565279"
  },
  {
    "text": "callbacks from notifications content",
    "start": "565279",
    "end": "567519"
  },
  {
    "text": "intents on notification actions action",
    "start": "567519",
    "end": "571040"
  },
  {
    "text": "intents if permission granted",
    "start": "571040",
    "end": "575720"
  },
  {
    "text": "browser service",
    "start": "576240",
    "end": "577920"
  },
  {
    "text": "media browser service just deals with",
    "start": "577920",
    "end": "581040"
  },
  {
    "text": "playing music",
    "start": "581040",
    "end": "582800"
  },
  {
    "text": "media browser service enable",
    "start": "582800",
    "end": "584959"
  },
  {
    "text": "applications to browse media content",
    "start": "584959",
    "end": "587519"
  },
  {
    "text": "provided by application and ask the",
    "start": "587519",
    "end": "590480"
  },
  {
    "text": "application to start playing it",
    "start": "590480",
    "end": "593200"
  },
  {
    "text": "a media browser app can connect a media",
    "start": "593200",
    "end": "596080"
  },
  {
    "text": "browser service and get its pending",
    "start": "596080",
    "end": "598080"
  },
  {
    "text": "intent",
    "start": "598080",
    "end": "599440"
  },
  {
    "text": "sometimes",
    "start": "599440",
    "end": "600560"
  },
  {
    "text": "media browse service uses pen intent is",
    "start": "600560",
    "end": "603440"
  },
  {
    "text": "root hands",
    "start": "603440",
    "end": "606079"
  },
  {
    "text": "the last one is app widgets",
    "start": "607519",
    "end": "610959"
  },
  {
    "text": "which are also commonly used",
    "start": "610959",
    "end": "614399"
  },
  {
    "text": "they are miniature applications",
    "start": "614399",
    "end": "617839"
  },
  {
    "text": "views that can be embedded in other",
    "start": "617839",
    "end": "620640"
  },
  {
    "text": "applications",
    "start": "620640",
    "end": "621920"
  },
  {
    "text": "such as the home screen and receive",
    "start": "621920",
    "end": "624640"
  },
  {
    "text": "periodic updates",
    "start": "624640",
    "end": "627279"
  },
  {
    "text": "in short",
    "start": "627279",
    "end": "629519"
  },
  {
    "text": "app widget host combined app widgets in",
    "start": "629519",
    "end": "633440"
  },
  {
    "text": "app widget provider",
    "start": "633440",
    "end": "635200"
  },
  {
    "text": "get its remote views and fetch the",
    "start": "635200",
    "end": "637839"
  },
  {
    "text": "pending intent in remote wheels",
    "start": "637839",
    "end": "640959"
  },
  {
    "text": "it is through the",
    "start": "640959",
    "end": "642720"
  },
  {
    "text": "idle api in app widget service",
    "start": "642720",
    "end": "646160"
  },
  {
    "text": "implementation",
    "start": "646160",
    "end": "649040"
  },
  {
    "text": "note",
    "start": "652880",
    "end": "653760"
  },
  {
    "text": "the remote views",
    "start": "653760",
    "end": "655440"
  },
  {
    "text": "remote views is a real hierarchy that",
    "start": "655440",
    "end": "658560"
  },
  {
    "text": "can be displayed in another process",
    "start": "658560",
    "end": "661760"
  },
  {
    "text": "it has a commonly used api",
    "start": "661760",
    "end": "664240"
  },
  {
    "text": "setup on click pending intent",
    "start": "664240",
    "end": "668000"
  },
  {
    "text": "as the debugging window shows",
    "start": "668000",
    "end": "670399"
  },
  {
    "text": "the pending intent is hidden field",
    "start": "670399",
    "end": "673760"
  },
  {
    "text": "the intent in remote views and actions m",
    "start": "673760",
    "end": "677120"
  },
  {
    "text": "response",
    "start": "677120",
    "end": "678320"
  },
  {
    "text": "if it is",
    "start": "678320",
    "end": "679600"
  },
  {
    "text": "a certain click response",
    "start": "679600",
    "end": "681839"
  },
  {
    "text": "it's possible to retrieve the main",
    "start": "681839",
    "end": "684160"
  },
  {
    "text": "pending intent via reflections",
    "start": "684160",
    "end": "688759"
  },
  {
    "start": "689000",
    "end": "689000"
  },
  {
    "text": "now",
    "start": "689600",
    "end": "690560"
  },
  {
    "text": "we fixed the first problem already",
    "start": "690560",
    "end": "693920"
  },
  {
    "text": "surely",
    "start": "693920",
    "end": "694959"
  },
  {
    "text": "pending intents can be retrieved from",
    "start": "694959",
    "end": "697440"
  },
  {
    "text": "notifications",
    "start": "697440",
    "end": "699120"
  },
  {
    "text": "slice providers and app widgets",
    "start": "699120",
    "end": "702640"
  },
  {
    "text": "let's move to the second key problem",
    "start": "702640",
    "end": "705519"
  },
  {
    "text": "how to hijack",
    "start": "705519",
    "end": "707200"
  },
  {
    "text": "this insecure pending intents",
    "start": "707200",
    "end": "709519"
  },
  {
    "text": "and what do insecure pending intents",
    "start": "709519",
    "end": "712240"
  },
  {
    "text": "look like",
    "start": "712240",
    "end": "714160"
  },
  {
    "text": "in previous research we've known pending",
    "start": "714160",
    "end": "717040"
  },
  {
    "text": "tense with empathy-based intents",
    "start": "717040",
    "end": "719839"
  },
  {
    "text": "are vulnerable",
    "start": "719839",
    "end": "721519"
  },
  {
    "text": "how about this one turn the intent",
    "start": "721519",
    "end": "724399"
  },
  {
    "text": "with implicit based intents",
    "start": "724399",
    "end": "728480"
  },
  {
    "text": "we've come across so many of these in",
    "start": "728480",
    "end": "731680"
  },
  {
    "text": "source code of asp and high profile apps",
    "start": "731680",
    "end": "737760"
  },
  {
    "start": "738000",
    "end": "738000"
  },
  {
    "text": "to answer this question we have to go",
    "start": "738720",
    "end": "741600"
  },
  {
    "text": "deep dive into pending intent filling",
    "start": "741600",
    "end": "744079"
  },
  {
    "text": "methods",
    "start": "744079",
    "end": "745200"
  },
  {
    "text": "it defines",
    "start": "745200",
    "end": "746800"
  },
  {
    "text": "how a base intent",
    "start": "746800",
    "end": "749279"
  },
  {
    "text": "in pen intent can be overwritten",
    "start": "749279",
    "end": "753440"
  },
  {
    "text": "recording the introduction of intent",
    "start": "753440",
    "end": "756639"
  },
  {
    "text": "it has many fields",
    "start": "756639",
    "end": "758480"
  },
  {
    "text": "the filling method just the treats",
    "start": "758480",
    "end": "760480"
  },
  {
    "text": "components and the selector are special",
    "start": "760480",
    "end": "764240"
  },
  {
    "text": "by default",
    "start": "764240",
    "end": "765600"
  },
  {
    "text": "they cannot be overwritten or filled in",
    "start": "765600",
    "end": "769120"
  },
  {
    "text": "other fields except component and",
    "start": "769120",
    "end": "771680"
  },
  {
    "text": "selector can be overwritten if not set",
    "start": "771680",
    "end": "776480"
  },
  {
    "start": "776000",
    "end": "776000"
  },
  {
    "text": "with this in mind",
    "start": "777600",
    "end": "779120"
  },
  {
    "text": "we've come up with a universal way to",
    "start": "779120",
    "end": "782079"
  },
  {
    "text": "hijack pending tense with implicit base",
    "start": "782079",
    "end": "786000"
  },
  {
    "text": "intent",
    "start": "786000",
    "end": "788079"
  },
  {
    "text": "so this is",
    "start": "788079",
    "end": "789519"
  },
  {
    "text": "how it works",
    "start": "789519",
    "end": "792160"
  },
  {
    "text": "in step one two",
    "start": "792160",
    "end": "794079"
  },
  {
    "text": "attacker app needs to retrieve an",
    "start": "794079",
    "end": "796880"
  },
  {
    "text": "insecure or vulnerable pen intent from",
    "start": "796880",
    "end": "799279"
  },
  {
    "text": "vector app",
    "start": "799279",
    "end": "800560"
  },
  {
    "text": "where methods we discussed before",
    "start": "800560",
    "end": "803920"
  },
  {
    "text": "then in step 3 he'll mutate the pending",
    "start": "803920",
    "end": "807519"
  },
  {
    "text": "intent",
    "start": "807519",
    "end": "809279"
  },
  {
    "text": "since it's implicit he cannot modify the",
    "start": "809279",
    "end": "813200"
  },
  {
    "text": "action field",
    "start": "813200",
    "end": "814800"
  },
  {
    "text": "he cannot modify component or selector",
    "start": "814800",
    "end": "817920"
  },
  {
    "text": "either",
    "start": "817920",
    "end": "818880"
  },
  {
    "text": "due to restrictions of pending intended",
    "start": "818880",
    "end": "821279"
  },
  {
    "text": "feeling",
    "start": "821279",
    "end": "822560"
  },
  {
    "text": "but he can register an intent filter",
    "start": "822560",
    "end": "825440"
  },
  {
    "text": "with action",
    "start": "825440",
    "end": "826880"
  },
  {
    "text": "set data or collected as victim apps",
    "start": "826880",
    "end": "830079"
  },
  {
    "text": "providers",
    "start": "830079",
    "end": "831440"
  },
  {
    "text": "set package to his own and add",
    "start": "831440",
    "end": "834000"
  },
  {
    "text": "permission grant related flags",
    "start": "834000",
    "end": "838160"
  },
  {
    "text": "then in step 4 and 5",
    "start": "838160",
    "end": "840720"
  },
  {
    "text": "the attacker app invokes pending intent",
    "start": "840720",
    "end": "843279"
  },
  {
    "text": "send",
    "start": "843279",
    "end": "844160"
  },
  {
    "text": "to start the activity intent on behalf",
    "start": "844160",
    "end": "846800"
  },
  {
    "text": "of victim app",
    "start": "846800",
    "end": "848639"
  },
  {
    "text": "an activity of actor",
    "start": "848639",
    "end": "850720"
  },
  {
    "text": "an activity of attacker app will be",
    "start": "850720",
    "end": "853279"
  },
  {
    "text": "started",
    "start": "853279",
    "end": "854560"
  },
  {
    "text": "since intent has grant related flags and",
    "start": "854560",
    "end": "858639"
  },
  {
    "text": "brings victim apps provider ui",
    "start": "858639",
    "end": "861600"
  },
  {
    "text": "the activity has been granted access to",
    "start": "861600",
    "end": "864560"
  },
  {
    "text": "a provider",
    "start": "864560",
    "end": "866079"
  },
  {
    "text": "of a victor app and the moment of being",
    "start": "866079",
    "end": "869040"
  },
  {
    "text": "started it can read and write any",
    "start": "869040",
    "end": "872000"
  },
  {
    "text": "providers accessible by victor app with",
    "start": "872000",
    "end": "875199"
  },
  {
    "text": "grant ui permission equivalent to true",
    "start": "875199",
    "end": "878720"
  },
  {
    "text": "this is the second main contribution of",
    "start": "878720",
    "end": "881279"
  },
  {
    "text": "our research on pending intent",
    "start": "881279",
    "end": "885120"
  },
  {
    "text": "in short",
    "start": "885120",
    "end": "886320"
  },
  {
    "text": "by hijacking this candle pending tense",
    "start": "886320",
    "end": "889120"
  },
  {
    "text": "with implicit base intent",
    "start": "889120",
    "end": "892399"
  },
  {
    "text": "an attacker app",
    "start": "892399",
    "end": "894000"
  },
  {
    "text": "can force victor app to grant access of",
    "start": "894000",
    "end": "897680"
  },
  {
    "text": "its own protected content providers",
    "start": "897680",
    "end": "902639"
  },
  {
    "start": "903000",
    "end": "903000"
  },
  {
    "text": "so pending tents with the implicit base",
    "start": "904240",
    "end": "906800"
  },
  {
    "text": "intents are vulnerable",
    "start": "906800",
    "end": "909680"
  },
  {
    "text": "we have found many cases on this kind of",
    "start": "909680",
    "end": "912000"
  },
  {
    "text": "vulnerable pending tense with implicit",
    "start": "912000",
    "end": "914399"
  },
  {
    "text": "base intent in aosp and some super",
    "start": "914399",
    "end": "917760"
  },
  {
    "text": "popular apps",
    "start": "917760",
    "end": "919360"
  },
  {
    "text": "i'll introduce some typical cases of",
    "start": "919360",
    "end": "921680"
  },
  {
    "text": "them",
    "start": "921680",
    "end": "923920"
  },
  {
    "text": "this first one is cv20201888",
    "start": "925519",
    "end": "929800"
  },
  {
    "text": "it's from slice provider",
    "start": "930639",
    "end": "932800"
  },
  {
    "text": "a usb settings size provider",
    "start": "932800",
    "end": "935759"
  },
  {
    "text": "it returns a pen intent with an implicit",
    "start": "935759",
    "end": "939519"
  },
  {
    "text": "face intent",
    "start": "939519",
    "end": "940800"
  },
  {
    "text": "once bonded",
    "start": "940800",
    "end": "943680"
  },
  {
    "start": "943000",
    "end": "943000"
  },
  {
    "text": "the park",
    "start": "944079",
    "end": "945360"
  },
  {
    "text": "is very straightforward",
    "start": "945360",
    "end": "948560"
  },
  {
    "text": "step 1",
    "start": "948560",
    "end": "950480"
  },
  {
    "text": "retrieve the insecure pending intent by",
    "start": "950480",
    "end": "953360"
  },
  {
    "text": "binding the slice provider",
    "start": "953360",
    "end": "956079"
  },
  {
    "text": "step 2",
    "start": "956079",
    "end": "957360"
  },
  {
    "text": "modify its base intent",
    "start": "957360",
    "end": "959920"
  },
  {
    "text": "and send it on behalf of settings",
    "start": "959920",
    "end": "963920"
  },
  {
    "text": "step 3",
    "start": "963920",
    "end": "965839"
  },
  {
    "text": "wait to be opened to read settings",
    "start": "965839",
    "end": "969040"
  },
  {
    "text": "provided",
    "start": "969040",
    "end": "971600"
  },
  {
    "start": "973000",
    "end": "973000"
  },
  {
    "text": "the second case",
    "start": "973600",
    "end": "975120"
  },
  {
    "text": "is cv2020389",
    "start": "975120",
    "end": "978360"
  },
  {
    "text": "it is from notification",
    "start": "979759",
    "end": "982480"
  },
  {
    "text": "aosp system ui recording service",
    "start": "982480",
    "end": "986240"
  },
  {
    "text": "it's from a notification reminding of",
    "start": "986240",
    "end": "989360"
  },
  {
    "text": "saving recorded videos",
    "start": "989360",
    "end": "991839"
  },
  {
    "text": "the park acts as a notification listener",
    "start": "991839",
    "end": "995040"
  },
  {
    "text": "service",
    "start": "995040",
    "end": "996399"
  },
  {
    "text": "and first",
    "start": "996399",
    "end": "997759"
  },
  {
    "text": "retrieve the pending intent",
    "start": "997759",
    "end": "1000160"
  },
  {
    "text": "via notification internet service",
    "start": "1000160",
    "end": "1003120"
  },
  {
    "text": "then modify the base intent",
    "start": "1003120",
    "end": "1005759"
  },
  {
    "text": "and send it on behalf of system ui",
    "start": "1005759",
    "end": "1009839"
  },
  {
    "text": "note the clip data it has been set",
    "start": "1009839",
    "end": "1013120"
  },
  {
    "text": "contacts provider content contact phones",
    "start": "1013120",
    "end": "1018399"
  },
  {
    "text": "then wait to be opened to read contacts",
    "start": "1018560",
    "end": "1021519"
  },
  {
    "text": "provider since system ui has",
    "start": "1021519",
    "end": "1024558"
  },
  {
    "text": "read contacts permission",
    "start": "1024559",
    "end": "1028079"
  },
  {
    "text": "as notification is widely used this",
    "start": "1028480",
    "end": "1031760"
  },
  {
    "text": "candle vulnerability pattern is very",
    "start": "1031760",
    "end": "1034400"
  },
  {
    "text": "common in many high profile apps like",
    "start": "1034400",
    "end": "1037678"
  },
  {
    "text": "paypal airbnb twitter google drive",
    "start": "1037679",
    "end": "1041120"
  },
  {
    "text": "google play services",
    "start": "1041120",
    "end": "1043038"
  },
  {
    "text": "we can even get a local arbitrary code",
    "start": "1043039",
    "end": "1045918"
  },
  {
    "text": "execution by writing",
    "start": "1045919",
    "end": "1048400"
  },
  {
    "text": "dex jar soul to victim app's own",
    "start": "1048400",
    "end": "1050799"
  },
  {
    "text": "providers",
    "start": "1050799",
    "end": "1053799"
  },
  {
    "start": "1054000",
    "end": "1054000"
  },
  {
    "text": "the third is a duplicate issue",
    "start": "1054880",
    "end": "1057840"
  },
  {
    "text": "i just gave an android id",
    "start": "1057840",
    "end": "1061919"
  },
  {
    "text": "it's from media browser service",
    "start": "1061919",
    "end": "1065360"
  },
  {
    "text": "there is an insecure pen intent",
    "start": "1065360",
    "end": "1067840"
  },
  {
    "text": "in playback",
    "start": "1067840",
    "end": "1069360"
  },
  {
    "text": "state in aosp bluetooth media browser",
    "start": "1069360",
    "end": "1072400"
  },
  {
    "text": "service",
    "start": "1072400",
    "end": "1073840"
  },
  {
    "text": "the park acts as a media browser",
    "start": "1073840",
    "end": "1077039"
  },
  {
    "text": "and first",
    "start": "1077039",
    "end": "1078400"
  },
  {
    "text": "it retrieves the pen intent via media",
    "start": "1078400",
    "end": "1081120"
  },
  {
    "text": "browser compat connection callback",
    "start": "1081120",
    "end": "1084799"
  },
  {
    "text": "then modify the base intent and send it",
    "start": "1084799",
    "end": "1088640"
  },
  {
    "text": "in the name of bluetooth",
    "start": "1088640",
    "end": "1091360"
  },
  {
    "text": "then wait to be opened to read content",
    "start": "1091360",
    "end": "1094559"
  },
  {
    "text": "provider accessible by bluetooth",
    "start": "1094559",
    "end": "1099279"
  },
  {
    "start": "1099000",
    "end": "1099000"
  },
  {
    "text": "the fourth one",
    "start": "1100080",
    "end": "1101679"
  },
  {
    "text": "is in a high profile apps app widgets",
    "start": "1101679",
    "end": "1105679"
  },
  {
    "text": "it is an insecure pending intent set via",
    "start": "1105679",
    "end": "1109679"
  },
  {
    "text": "set on click plant intent",
    "start": "1109679",
    "end": "1113519"
  },
  {
    "text": "as we discussed before the park can act",
    "start": "1113600",
    "end": "1117120"
  },
  {
    "text": "as an app widget host",
    "start": "1117120",
    "end": "1119760"
  },
  {
    "text": "to retrieve remote views from app",
    "start": "1119760",
    "end": "1122799"
  },
  {
    "text": "widgets",
    "start": "1122799",
    "end": "1123840"
  },
  {
    "text": "then retrieve",
    "start": "1123840",
    "end": "1125440"
  },
  {
    "text": "the insecure pending intent from remote",
    "start": "1125440",
    "end": "1128240"
  },
  {
    "text": "wheels",
    "start": "1128240",
    "end": "1129440"
  },
  {
    "text": "where reflections",
    "start": "1129440",
    "end": "1132000"
  },
  {
    "text": "then modify the base intent",
    "start": "1132000",
    "end": "1134480"
  },
  {
    "text": "and send it on behalf of its high",
    "start": "1134480",
    "end": "1137760"
  },
  {
    "text": "profile app",
    "start": "1137760",
    "end": "1140640"
  },
  {
    "text": "then wait to be opened to read the",
    "start": "1141039",
    "end": "1143280"
  },
  {
    "text": "contacts provider",
    "start": "1143280",
    "end": "1145039"
  },
  {
    "text": "since the victor app has read contacts",
    "start": "1145039",
    "end": "1147919"
  },
  {
    "text": "permission",
    "start": "1147919",
    "end": "1150919"
  },
  {
    "start": "1152000",
    "end": "1152000"
  },
  {
    "text": "the last one",
    "start": "1153039",
    "end": "1154559"
  },
  {
    "text": "is a very special case",
    "start": "1154559",
    "end": "1156559"
  },
  {
    "text": "it is in android system services",
    "start": "1156559",
    "end": "1159600"
  },
  {
    "text": "aosp activity manager service",
    "start": "1159600",
    "end": "1162720"
  },
  {
    "text": "it returns an insecure pending intent",
    "start": "1162720",
    "end": "1165760"
  },
  {
    "text": "used to control a band service via get",
    "start": "1165760",
    "end": "1169200"
  },
  {
    "text": "running service control panel api",
    "start": "1169200",
    "end": "1173120"
  },
  {
    "text": "the source code shows two insecure",
    "start": "1173520",
    "end": "1175440"
  },
  {
    "text": "pending tens example of running services",
    "start": "1175440",
    "end": "1178320"
  },
  {
    "text": "like notification manager service",
    "start": "1178320",
    "end": "1181760"
  },
  {
    "text": "and the wallpaper manager service",
    "start": "1181760",
    "end": "1185039"
  },
  {
    "text": "any app can retrieve with a pending",
    "start": "1185039",
    "end": "1187520"
  },
  {
    "text": "intent while get running service control",
    "start": "1187520",
    "end": "1190160"
  },
  {
    "text": "panel on notification manager service or",
    "start": "1190160",
    "end": "1192880"
  },
  {
    "text": "wallpaper memory or wallpaper manager",
    "start": "1192880",
    "end": "1195200"
  },
  {
    "text": "service",
    "start": "1195200",
    "end": "1196559"
  },
  {
    "text": "then modify the base intent",
    "start": "1196559",
    "end": "1199360"
  },
  {
    "text": "and send it on behalf of system server",
    "start": "1199360",
    "end": "1203039"
  },
  {
    "text": "that is uid",
    "start": "1203039",
    "end": "1205760"
  },
  {
    "text": "and a wait to be opened to read settings",
    "start": "1205760",
    "end": "1208880"
  },
  {
    "text": "providers",
    "start": "1208880",
    "end": "1211520"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "there are some restrictions on ui grants",
    "start": "1214480",
    "end": "1217520"
  },
  {
    "text": "from uid 1000",
    "start": "1217520",
    "end": "1220799"
  },
  {
    "text": "uid 1000 can only grant very few",
    "start": "1220799",
    "end": "1225039"
  },
  {
    "text": "providers",
    "start": "1225039",
    "end": "1226880"
  },
  {
    "text": "permissions in asp due to mitigations in",
    "start": "1226880",
    "end": "1230240"
  },
  {
    "text": "ui grants manager service as code",
    "start": "1230240",
    "end": "1232960"
  },
  {
    "text": "snippets shows",
    "start": "1232960",
    "end": "1235840"
  },
  {
    "text": "but we found",
    "start": "1235919",
    "end": "1237600"
  },
  {
    "text": "big phone vendors usually allow more",
    "start": "1237600",
    "end": "1240640"
  },
  {
    "text": "providers to be granted or set a special",
    "start": "1240640",
    "end": "1243600"
  },
  {
    "text": "flag",
    "start": "1243600",
    "end": "1244559"
  },
  {
    "text": "to allow granting from system uid",
    "start": "1244559",
    "end": "1248320"
  },
  {
    "text": "therefore this case is marked",
    "start": "1248320",
    "end": "1251360"
  },
  {
    "text": "as moderate in android asp though it",
    "start": "1251360",
    "end": "1254559"
  },
  {
    "text": "could be dangerous in android oem phones",
    "start": "1254559",
    "end": "1258400"
  },
  {
    "text": "we've come across",
    "start": "1258400",
    "end": "1260559"
  },
  {
    "text": "a few of these examples but due to time",
    "start": "1260559",
    "end": "1264159"
  },
  {
    "text": "we're not gonna",
    "start": "1264159",
    "end": "1266080"
  },
  {
    "text": "tell about this in detail",
    "start": "1266080",
    "end": "1269679"
  },
  {
    "start": "1269000",
    "end": "1269000"
  },
  {
    "text": "now i introduce",
    "start": "1270559",
    "end": "1272480"
  },
  {
    "text": "how to hand insecure pending intents",
    "start": "1272480",
    "end": "1275760"
  },
  {
    "text": "automatically",
    "start": "1275760",
    "end": "1277679"
  },
  {
    "text": "we have designed a suit",
    "start": "1277679",
    "end": "1280240"
  },
  {
    "text": "based static analysis tool",
    "start": "1280240",
    "end": "1284320"
  },
  {
    "text": "it will pass apk into jinpo ir",
    "start": "1284640",
    "end": "1288320"
  },
  {
    "text": "then scan pending intent api with data",
    "start": "1288320",
    "end": "1291520"
  },
  {
    "text": "flow analysis to get a result of unsafe",
    "start": "1291520",
    "end": "1295039"
  },
  {
    "text": "code",
    "start": "1295039",
    "end": "1296400"
  },
  {
    "text": "this picture roughly shows how it works",
    "start": "1296400",
    "end": "1301440"
  },
  {
    "start": "1302000",
    "end": "1302000"
  },
  {
    "text": "and first it will search apis",
    "start": "1302799",
    "end": "1306320"
  },
  {
    "text": "without immutable",
    "start": "1306320",
    "end": "1309280"
  },
  {
    "text": "it",
    "start": "1309280",
    "end": "1310159"
  },
  {
    "text": "will another",
    "start": "1310159",
    "end": "1311440"
  },
  {
    "text": "analyze and transform android code to",
    "start": "1311440",
    "end": "1314640"
  },
  {
    "text": "general code with suit",
    "start": "1314640",
    "end": "1317760"
  },
  {
    "text": "then locate",
    "start": "1317760",
    "end": "1319280"
  },
  {
    "text": "the statements",
    "start": "1319280",
    "end": "1321039"
  },
  {
    "text": "with the following apis",
    "start": "1321039",
    "end": "1323120"
  },
  {
    "text": "that create instances of pending intents",
    "start": "1323120",
    "end": "1326320"
  },
  {
    "text": "which do not contain the black mutable",
    "start": "1326320",
    "end": "1330840"
  },
  {
    "text": "flag including get service get front",
    "start": "1330840",
    "end": "1334080"
  },
  {
    "text": "ground get foreground service get",
    "start": "1334080",
    "end": "1336159"
  },
  {
    "text": "activity and get activities",
    "start": "1336159",
    "end": "1339840"
  },
  {
    "start": "1339000",
    "end": "1339000"
  },
  {
    "text": "then search empty or implicit based",
    "start": "1340000",
    "end": "1342720"
  },
  {
    "text": "intents",
    "start": "1342720",
    "end": "1344400"
  },
  {
    "text": "it will check whether the intent objects",
    "start": "1344400",
    "end": "1347840"
  },
  {
    "text": "passed into pen intense apis",
    "start": "1347840",
    "end": "1350640"
  },
  {
    "text": "has invoked one of the following intent",
    "start": "1350640",
    "end": "1353520"
  },
  {
    "text": "methods through the",
    "start": "1353520",
    "end": "1355840"
  },
  {
    "text": "forward flow analysis of a suit",
    "start": "1355840",
    "end": "1360919"
  },
  {
    "text": "the intent methods",
    "start": "1361280",
    "end": "1363520"
  },
  {
    "text": "include",
    "start": "1363520",
    "end": "1364640"
  },
  {
    "text": "set package set class name set component",
    "start": "1364640",
    "end": "1367440"
  },
  {
    "text": "set class name and set class",
    "start": "1367440",
    "end": "1370400"
  },
  {
    "text": "this apis",
    "start": "1370400",
    "end": "1372159"
  },
  {
    "text": "shows",
    "start": "1372159",
    "end": "1373600"
  },
  {
    "text": "whether the intent",
    "start": "1373600",
    "end": "1375760"
  },
  {
    "text": "is",
    "start": "1375760",
    "end": "1376640"
  },
  {
    "text": "explicit",
    "start": "1376640",
    "end": "1379440"
  },
  {
    "text": "the forward follow analysis is intra",
    "start": "1379679",
    "end": "1382640"
  },
  {
    "text": "procedural data flow analysis provided",
    "start": "1382640",
    "end": "1385280"
  },
  {
    "text": "by suit",
    "start": "1385280",
    "end": "1388520"
  },
  {
    "text": "we have open sources tool in github",
    "start": "1390240",
    "end": "1394080"
  },
  {
    "text": "you can download and try it",
    "start": "1394080",
    "end": "1398159"
  },
  {
    "text": "by using the tool we will find many",
    "start": "1398159",
    "end": "1401120"
  },
  {
    "text": "pending intent issues in high profile",
    "start": "1401120",
    "end": "1403679"
  },
  {
    "text": "apps in google play",
    "start": "1403679",
    "end": "1406640"
  },
  {
    "text": "gps rp even said pending intent back as",
    "start": "1406640",
    "end": "1410799"
  },
  {
    "text": "no issues",
    "start": "1410799",
    "end": "1412159"
  },
  {
    "text": "meaning it almost affects every",
    "start": "1412159",
    "end": "1414400"
  },
  {
    "text": "applications",
    "start": "1414400",
    "end": "1417400"
  },
  {
    "start": "1419000",
    "end": "1419000"
  },
  {
    "text": "now",
    "start": "1420480",
    "end": "1421440"
  },
  {
    "text": "the last section of our talk",
    "start": "1421440",
    "end": "1424400"
  },
  {
    "text": "what has google done",
    "start": "1424400",
    "end": "1426159"
  },
  {
    "text": "for this pending intent issues",
    "start": "1426159",
    "end": "1430360"
  },
  {
    "text": "google has almost fixed all pending",
    "start": "1431039",
    "end": "1433600"
  },
  {
    "text": "intent issues in asp",
    "start": "1433600",
    "end": "1436559"
  },
  {
    "text": "also it has introduced",
    "start": "1436559",
    "end": "1439360"
  },
  {
    "text": "significant security changes in the",
    "start": "1439360",
    "end": "1441679"
  },
  {
    "text": "upcoming android 12.",
    "start": "1441679",
    "end": "1444559"
  },
  {
    "text": "most of these parts are fixed by adding",
    "start": "1444559",
    "end": "1447039"
  },
  {
    "text": "pending intent flag immutable",
    "start": "1447039",
    "end": "1450320"
  },
  {
    "text": "some are fixed by using an explicit base",
    "start": "1450320",
    "end": "1453679"
  },
  {
    "text": "intent",
    "start": "1453679",
    "end": "1455600"
  },
  {
    "text": "in android 12",
    "start": "1455600",
    "end": "1457120"
  },
  {
    "text": "developers must specify the mutability",
    "start": "1457120",
    "end": "1460799"
  },
  {
    "text": "of each pending tent for apps targeting",
    "start": "1460799",
    "end": "1464640"
  },
  {
    "text": "above 12.",
    "start": "1464640",
    "end": "1467440"
  },
  {
    "text": "developers must use either flag",
    "start": "1467440",
    "end": "1469679"
  },
  {
    "text": "immutable or flag mutable",
    "start": "1469679",
    "end": "1472720"
  },
  {
    "text": "but this kind of vulnerability are still",
    "start": "1472720",
    "end": "1475120"
  },
  {
    "text": "lesser known by android developers",
    "start": "1475120",
    "end": "1478400"
  },
  {
    "text": "that's why we decide to disclose this",
    "start": "1478400",
    "end": "1482240"
  },
  {
    "text": "in black hat europe",
    "start": "1482240",
    "end": "1486039"
  },
  {
    "text": "also google also added a mint rule to",
    "start": "1486320",
    "end": "1490320"
  },
  {
    "text": "detect flag immutable its official",
    "start": "1490320",
    "end": "1493600"
  },
  {
    "text": "android studio ide",
    "start": "1493600",
    "end": "1497360"
  },
  {
    "text": "it adds a",
    "start": "1497440",
    "end": "1499279"
  },
  {
    "text": "pending intent mutable flag detector",
    "start": "1499279",
    "end": "1503120"
  },
  {
    "text": "so developers can",
    "start": "1503120",
    "end": "1506080"
  },
  {
    "text": "check",
    "start": "1506080",
    "end": "1507520"
  },
  {
    "text": "if a pending intent is insecure",
    "start": "1507520",
    "end": "1511840"
  },
  {
    "text": "in its official ide very convenient",
    "start": "1511840",
    "end": "1515440"
  },
  {
    "text": "conveniently",
    "start": "1515440",
    "end": "1518158"
  },
  {
    "start": "1517000",
    "end": "1517000"
  },
  {
    "text": "there are also some guidelines for",
    "start": "1518480",
    "end": "1520400"
  },
  {
    "text": "developers to use printing intent safely",
    "start": "1520400",
    "end": "1524559"
  },
  {
    "text": "developers must create a multiple",
    "start": "1524559",
    "end": "1526720"
  },
  {
    "text": "pending tense whenever possible",
    "start": "1526720",
    "end": "1529760"
  },
  {
    "text": "however",
    "start": "1529760",
    "end": "1531039"
  },
  {
    "text": "certain use cases require mutable pen",
    "start": "1531039",
    "end": "1534080"
  },
  {
    "text": "intent objects instead",
    "start": "1534080",
    "end": "1537200"
  },
  {
    "text": "such as",
    "start": "1537200",
    "end": "1538400"
  },
  {
    "text": "direct reply actions in notifications",
    "start": "1538400",
    "end": "1542400"
  },
  {
    "text": "using instances of car app extender",
    "start": "1542400",
    "end": "1546240"
  },
  {
    "text": "calling request location updates or",
    "start": "1546240",
    "end": "1549279"
  },
  {
    "text": "similar apis",
    "start": "1549279",
    "end": "1551279"
  },
  {
    "text": "scheduling alarms using alarm manager",
    "start": "1551279",
    "end": "1554720"
  },
  {
    "text": "this pending intents require",
    "start": "1554720",
    "end": "1557279"
  },
  {
    "text": "flag mutable",
    "start": "1557279",
    "end": "1559520"
  },
  {
    "text": "so",
    "start": "1559520",
    "end": "1560320"
  },
  {
    "text": "in these cases it's strongly recommended",
    "start": "1560320",
    "end": "1563520"
  },
  {
    "text": "to use an explicit intent and fill in",
    "start": "1563520",
    "end": "1567039"
  },
  {
    "text": "the component name",
    "start": "1567039",
    "end": "1570919"
  },
  {
    "start": "1569000",
    "end": "1569000"
  },
  {
    "text": "but",
    "start": "1571520",
    "end": "1573520"
  },
  {
    "text": "it is still",
    "start": "1573520",
    "end": "1575120"
  },
  {
    "text": "vulnerable in some cases",
    "start": "1575120",
    "end": "1577360"
  },
  {
    "text": "sometimes to use a mutable pen intent",
    "start": "1577360",
    "end": "1580640"
  },
  {
    "text": "with explicit intent is still vulnerable",
    "start": "1580640",
    "end": "1585840"
  },
  {
    "text": "this is a real world example",
    "start": "1586000",
    "end": "1589600"
  },
  {
    "text": "a pending intent in notification aiming",
    "start": "1589600",
    "end": "1592159"
  },
  {
    "text": "to be start hidden",
    "start": "1592159",
    "end": "1594080"
  },
  {
    "text": "when active",
    "start": "1594080",
    "end": "1595440"
  },
  {
    "text": "which can process i intend extra",
    "start": "1595440",
    "end": "1599200"
  },
  {
    "text": "since",
    "start": "1599200",
    "end": "1600159"
  },
  {
    "text": "the pending intent has no flag immutable",
    "start": "1600159",
    "end": "1603279"
  },
  {
    "text": "and",
    "start": "1603279",
    "end": "1604799"
  },
  {
    "text": "it's explicit basic",
    "start": "1604799",
    "end": "1607279"
  },
  {
    "text": "base intent doesn't set the extra",
    "start": "1607279",
    "end": "1610559"
  },
  {
    "text": "a notification listener app can still",
    "start": "1610559",
    "end": "1614240"
  },
  {
    "text": "hijack the pending intent and feed in",
    "start": "1614240",
    "end": "1617360"
  },
  {
    "text": "the extra",
    "start": "1617360",
    "end": "1618720"
  },
  {
    "text": "resulting in another classic intense",
    "start": "1618720",
    "end": "1622159"
  },
  {
    "text": "redirection vulnerability",
    "start": "1622159",
    "end": "1625440"
  },
  {
    "text": "so i have a final device",
    "start": "1625440",
    "end": "1628000"
  },
  {
    "text": "for both developers and security",
    "start": "1628000",
    "end": "1630159"
  },
  {
    "text": "researchers",
    "start": "1630159",
    "end": "1632080"
  },
  {
    "text": "every pending intent without flag",
    "start": "1632080",
    "end": "1635039"
  },
  {
    "text": "immutable needs to be carefully rebuilt",
    "start": "1635039",
    "end": "1638799"
  },
  {
    "text": "this is a final advice",
    "start": "1638799",
    "end": "1642080"
  },
  {
    "text": "this is my talk about",
    "start": "1644000",
    "end": "1646240"
  },
  {
    "text": "pending intended security",
    "start": "1646240",
    "end": "1648799"
  },
  {
    "text": "thank you for attending",
    "start": "1648799",
    "end": "1651050"
  },
  {
    "text": "[Music]",
    "start": "1651050",
    "end": "1660660"
  },
  {
    "text": "you",
    "start": "1661200",
    "end": "1663278"
  }
]