[
  {
    "text": "good morning everybody this is way too early to be talking about rust but thank you all for showing up um this is a",
    "start": "2560",
    "end": "11599"
  },
  {
    "text": "terrible topic this is an absolutely horrendous topic and there's a lot to cover so we'll try to uh be",
    "start": "11599",
    "end": "17359"
  },
  {
    "text": "relatively succinct and hope that you know we can get a lot of out of it uh so",
    "start": "17359",
    "end": "22920"
  },
  {
    "text": "first and foremost uh my name is juang andreo which is why",
    "start": "22920",
    "end": "28039"
  },
  {
    "text": "Jags works for everybody I run research over at Sentinel 1 um and uh do a bit of",
    "start": "28039",
    "end": "35200"
  },
  {
    "text": "academic stuff over at The alperovich Institute uh and this is the brains of the operation do you want to introduce",
    "start": "35200",
    "end": "41440"
  },
  {
    "text": "yourself or do you is that too much uh my name is Nicole Fishman I'm a security researcher at iner and that's",
    "start": "41440",
    "end": "48600"
  },
  {
    "text": "my first black at USA so I'm excited",
    "start": "48600",
    "end": "53680"
  },
  {
    "text": "woo let's do Rust let's do Rust all right um the clicker is not working too",
    "start": "54120",
    "end": "59480"
  },
  {
    "text": "well with us um so nobody should be excited about rust",
    "start": "59480",
    "end": "65400"
  },
  {
    "text": "in particular I know developers are reverse Engineers are not probably should not be um the way this all kind",
    "start": "65400",
    "end": "71600"
  },
  {
    "text": "of comes about is um actually Nicole was working on an AP that she discovered",
    "start": "71600",
    "end": "77479"
  },
  {
    "text": "called wildcard and uh ton of interesting operations in the Middle East and they suddenly switched over to",
    "start": "77479",
    "end": "83799"
  },
  {
    "text": "using rust they had a component called rust down that we tried to work on uh together and realized that reverse",
    "start": "83799",
    "end": "89920"
  },
  {
    "text": "engineering this stuff was uh I'm not going to say impossible but definitely a an unmitigated",
    "start": "89920",
    "end": "95799"
  },
  {
    "text": "disaster um so bringing a bit of sort of the perspective into it um it used to be",
    "start": "95799",
    "end": "101600"
  },
  {
    "text": "hard to reverse C++ and Deli and like all these weird edge cases um and it",
    "start": "101600",
    "end": "108079"
  },
  {
    "text": "hasn't gotten necessarily easier but I think in large part it was because we were going about it the wrong way um I",
    "start": "108079",
    "end": "115479"
  },
  {
    "text": "don't know if any of you have been around for a while sort of in the reversing space there was always this",
    "start": "115479",
    "end": "120600"
  },
  {
    "text": "sort of like implicit I don't know toxic reversing culture around the notion that if you're",
    "start": "120600",
    "end": "127560"
  },
  {
    "text": "a badass you're reversing everything through the disassembly window and decompilers or F5 reversing was a sort",
    "start": "127560",
    "end": "134640"
  },
  {
    "text": "of derogatory thing that you know Rich noobs could do right um that's a you",
    "start": "134640",
    "end": "141519"
  },
  {
    "text": "know lovely way of thinking about things uh except when you have multiple layers of abstraction and that's what happens",
    "start": "141519",
    "end": "147440"
  },
  {
    "text": "as we get into programs like you know into programming languages like C++ and all the new paradigms you are living in",
    "start": "147440",
    "end": "153599"
  },
  {
    "text": "a level in in a world of abstractions that just don't make it down to the disassembly window at all so that's what",
    "start": "153599",
    "end": "159840"
  },
  {
    "text": "decompilers are for and originally we pay a lot of money for decompilers now people you know have gedra and Binga and",
    "start": "159840",
    "end": "167000"
  },
  {
    "text": "you know it's even accessible to the masses so we really don't have much of an excuse not to use them other than weird hubris um and the truth is that we",
    "start": "167000",
    "end": "174599"
  },
  {
    "text": "need them now more than ever God every click is two clicks all right I might just switch over anyways um so things",
    "start": "174599",
    "end": "183519"
  },
  {
    "text": "have been going from bad to worse in a way like it seems like every two months there's some new programming language or",
    "start": "183519",
    "end": "188640"
  },
  {
    "text": "some new F new fangled like memory collector uh some kind of garbage collector memory allocations they decide",
    "start": "188640",
    "end": "195319"
  },
  {
    "text": "they're going to do uh references in the stack differently they're going to do memory boundaries differently and that's all wonderful for devs but it really",
    "start": "195319",
    "end": "203680"
  },
  {
    "text": "just sucks for us for the most part we're talking about huge binaries there's a lot of statically linked code",
    "start": "203680",
    "end": "211599"
  },
  {
    "text": "all kinds of weird binary structures um unconventional or custom calling conventions so anything to do with like",
    "start": "211599",
    "end": "218200"
  },
  {
    "text": "arguments or whatever is usually uh a mess um and they have these really active development communities which",
    "start": "218200",
    "end": "224200"
  },
  {
    "text": "sounds wonderful except it's not for us because it means that every two months they decide to arbitrarily change some",
    "start": "224200",
    "end": "230360"
  },
  {
    "text": "structure that we were depending on and no one's sending out an email about it it's just it just",
    "start": "230360",
    "end": "236599"
  },
  {
    "text": "happens it may also just be that our tool also suck even more",
    "start": "236599",
    "end": "242799"
  },
  {
    "text": "um there's a lot of limitations to existing reverse engineering tools uh whether it's stuff with type",
    "start": "242799",
    "end": "248760"
  },
  {
    "text": "reconstruction or complex function prototypes um it's very hard to model",
    "start": "248760",
    "end": "254879"
  },
  {
    "text": "custom calling conventions properly uh we can't consistently Trace how arguments are being modified in some",
    "start": "254879",
    "end": "260759"
  },
  {
    "text": "cases specifically if they're being referenced through the stack and and sort of weird scope breaking ways that",
    "start": "260759",
    "end": "266479"
  },
  {
    "text": "we're going to discuss um you also have this really neat neat idea of having like multiple return values none of the",
    "start": "266479",
    "end": "274320"
  },
  {
    "text": "decompilers are not ready for any of that stuff that was not something that we would deal with before um and then",
    "start": "274320",
    "end": "280479"
  },
  {
    "text": "you know we have a hard time recognizing statically link code recovering structures classes methods all that stuff is just beyond the pale we can",
    "start": "280479",
    "end": "287120"
  },
  {
    "text": "barely get struts made half of the time um that's not necessarily true quite so much anymore but it's hard still um and",
    "start": "287120",
    "end": "293680"
  },
  {
    "text": "everything feels broken the real issue is when nobody is",
    "start": "293680",
    "end": "298840"
  },
  {
    "text": "looking what you get is a thriving malware ecosystem this is what happened with go um you basically had a an",
    "start": "298840",
    "end": "307400"
  },
  {
    "text": "explosion of APS and different types of ransomware and malware um using go",
    "start": "307400",
    "end": "313240"
  },
  {
    "text": "developed in go and that we had a miserable time trying to reverse uh because of the way the go works and it's",
    "start": "313240",
    "end": "318680"
  },
  {
    "text": "incompatibility with our stuff but the truth is that there's hope and this is sort of like the key Insight that kind",
    "start": "318680",
    "end": "324440"
  },
  {
    "text": "of drives us here uh which is we tried this with go and had surprisingly good",
    "start": "324440",
    "end": "332039"
  },
  {
    "text": "results so why did reversing goh suck in the",
    "start": "332039",
    "end": "337240"
  },
  {
    "text": "first place well I talked about not being able to handle multiple return values uh we had a really hard time with",
    "start": "337240",
    "end": "343039"
  },
  {
    "text": "complex types and type recovery tons of statically linked functions right you would compile hello world it would be 5",
    "start": "343039",
    "end": "349600"
  },
  {
    "text": "megabytes by itself um and that's without you know all the wonderful stuff that comes along for a 15 megabyte",
    "start": "349600",
    "end": "355440"
  },
  {
    "text": "binary that's statically linked with everything that uh you know that library ever includes Ed so it was actually",
    "start": "355440",
    "end": "361039"
  },
  {
    "text": "impossible to find like the user generated code uh it was just lost in",
    "start": "361039",
    "end": "366160"
  },
  {
    "text": "these thousands and tens of thousands of functions that had nothing to do with this um stripping binaries obviously",
    "start": "366160",
    "end": "372319"
  },
  {
    "text": "seemed to lose important information um we had issues where at least in Ida Pro where the stack would",
    "start": "372319",
    "end": "378160"
  },
  {
    "text": "get reinterpreted all the time and it actually if you ever tried to reverse go and you like went to press F5 and it",
    "start": "378160",
    "end": "383680"
  },
  {
    "text": "told you that it couldn't because there was an issue with the stack it kept it keeps reanalyzing this more stack",
    "start": "383680",
    "end": "390960"
  },
  {
    "text": "context function and since the arguments change the stack breaks every single time unless you go and manually Define",
    "start": "390960",
    "end": "397120"
  },
  {
    "text": "the function prototype obviously not ideal um and if you try to decompile the entire binary which takes a little bit",
    "start": "397120",
    "end": "403440"
  },
  {
    "text": "of trickery in ID Pro the whole thing would crash so fun the solution we came up with and",
    "start": "403440",
    "end": "409720"
  },
  {
    "text": "I'll go through this very quickly because this is work that we've already done it's already public but we called you created this thing called Alpha",
    "start": "409720",
    "end": "415000"
  },
  {
    "text": "goang um it was presented at Recon originally um a couple of years back and",
    "start": "415000",
    "end": "421800"
  },
  {
    "text": "it tried to tackle two different problems and you're going to see the same theme in this talk as well one of",
    "start": "421800",
    "end": "427240"
  },
  {
    "text": "them is the brittleness of Ida Python scripts the other one is the need to you",
    "start": "427240",
    "end": "433199"
  },
  {
    "text": "know have clear steps to analyzing these binaries putting information back in place and so on um and the idea was we",
    "start": "433199",
    "end": "439840"
  },
  {
    "text": "wanted to tackle it as a sort of methodology of sorts and say you know what steps should I be following before",
    "start": "439840",
    "end": "445080"
  },
  {
    "text": "I'm even just trying to dive into the particulars of the code um the key thing for for the brittleness was to have",
    "start": "445080",
    "end": "450879"
  },
  {
    "text": "Standalone scripts I don't know how many of you have tried using somebody's amazing idop python tool script plug-in",
    "start": "450879",
    "end": "456879"
  },
  {
    "text": "whatever that they wrote six months ago and it's already broken and it already doesn't work when it's one giant",
    "start": "456879",
    "end": "463120"
  },
  {
    "text": "monolithic plugin it means you might as well just throw the tool away so in order to avoid that we opted for small",
    "start": "463120",
    "end": "472240"
  },
  {
    "text": "Standalone scripts that could be used as steps you could choose which ones you need to use in succession and God forbid",
    "start": "472240",
    "end": "478599"
  },
  {
    "text": "one of them breaks you can fix it or you can just move on to the next steps and",
    "start": "478599",
    "end": "483720"
  },
  {
    "text": "not have your entire project busted right this is just living with the realities of Ida Pro rather than the",
    "start": "483720",
    "end": "488960"
  },
  {
    "text": "sort of idealized sense of what it should be so really quickly you'll find us on GitHub we put out a y rule in",
    "start": "488960",
    "end": "495080"
  },
  {
    "text": "order to identify go binaries super super simple nothing crazy but then you",
    "start": "495080",
    "end": "500639"
  },
  {
    "text": "know we figured out ways to recreate the pcln tab section which is sort of like where all the symbols and uh information",
    "start": "500639",
    "end": "507479"
  },
  {
    "text": "about the functions the names original names Etc stored and that's quote unquote removed when it's stripped but",
    "start": "507479",
    "end": "513800"
  },
  {
    "text": "it's not you could actually just go in and grab that again recreate it uh it also meant we could discover all missing",
    "start": "513800",
    "end": "520360"
  },
  {
    "text": "functions and restore the function names not some all of them which is phenomenal",
    "start": "520360",
    "end": "526080"
  },
  {
    "text": "um it also meant we could surface user generated functions when you know the perfect structure of how the code was",
    "start": "526080",
    "end": "532600"
  },
  {
    "text": "laid out for by the developer you can actually say oh they only there's 45,000",
    "start": "532600",
    "end": "538120"
  },
  {
    "text": "functions and they only wrote 12 of them I'm going to spend my time on those 12 functions right um we're able to fix",
    "start": "538120",
    "end": "545160"
  },
  {
    "text": "string references honestly the code on this one kind of sucks we could probably use a little bit of help it's my fault uh but uh yeah we could probably we",
    "start": "545160",
    "end": "552600"
  },
  {
    "text": "could do it better but we can fix string references in a way that's meaningful for Ida um and then we had people start",
    "start": "552600",
    "end": "558680"
  },
  {
    "text": "to contribute scriptures is great we were able to sort of start recovering type information from the information that's left and go so the result was",
    "start": "558680",
    "end": "566440"
  },
  {
    "text": "when you looked at something like this which is a Russian wiper that was hitting Ukraine early on um in you know in The Invasion uh we could take this",
    "start": "566440",
    "end": "574040"
  },
  {
    "text": "desert blade wiper sample and within a minute of just applying a bunch of scripts we'd go from 2400 unidentified",
    "start": "574040",
    "end": "582440"
  },
  {
    "text": "functions to eight user generated functions in everything else labeled properly and frankly to me that feels",
    "start": "582440",
    "end": "588720"
  },
  {
    "text": "easier than reversing most C C++ stuff these days so there is a way to turn the",
    "start": "588720",
    "end": "593880"
  },
  {
    "text": "problem around if we figure out how to use the information that's being left there okay we came to talk about rust so",
    "start": "593880",
    "end": "602800"
  },
  {
    "text": "with that I'll bow out and let someone smarter than me take over all right so",
    "start": "602800",
    "end": "610120"
  },
  {
    "text": "rust uh rust is an open source it was officially the stable version was",
    "start": "610120",
    "end": "615399"
  },
  {
    "text": "released in 2015 and actually the first report about a malware written in Rust",
    "start": "615399",
    "end": "620440"
  },
  {
    "text": "is from 2016 and it's a Linux beor but what is rust so we know it's",
    "start": "620440",
    "end": "627760"
  },
  {
    "text": "cross compiling language like let go and it has a very strict compiler which enforces memory",
    "start": "627760",
    "end": "635680"
  },
  {
    "text": "safety with some uh ownership systems and borrow Checker no garbage",
    "start": "635680",
    "end": "641320"
  },
  {
    "text": "collector um it is able to grab lots of uh compilation arrows before compiling",
    "start": "641320",
    "end": "647279"
  },
  {
    "text": "and before running so very strict very hard to actually compile something uh supposed to be faster than",
    "start": "647279",
    "end": "653839"
  },
  {
    "text": "C it is very powerful uh very powerful cargo dependency manager",
    "start": "653839",
    "end": "659720"
  },
  {
    "text": "and um it has a very strong Community which releases new versions not every",
    "start": "659720",
    "end": "665920"
  },
  {
    "text": "month there is also um new version every night so that's",
    "start": "665920",
    "end": "671120"
  },
  {
    "text": "fun and because it's such a strong and versatile language we see why developers",
    "start": "671120",
    "end": "678200"
  },
  {
    "text": "would like to use rust also we see why malare developers want to use rust um",
    "start": "678200",
    "end": "684120"
  },
  {
    "text": "also because it's really hard to reverse engineer but basically we see malware um in pts Ransom e crimes we see rust",
    "start": "684120",
    "end": "693200"
  },
  {
    "text": "everywhere and um we mentioned wild card there is also rust bucket which is a sophisticated malware targeting mechos",
    "start": "693200",
    "end": "701600"
  },
  {
    "text": "and lots of Ransom were also switched to um rust some Mal even switch from goang",
    "start": "701600",
    "end": "707800"
  },
  {
    "text": "to rust maybe because um they want to evade detection and make our life much",
    "start": "707800",
    "end": "715560"
  },
  {
    "text": "harder so why is it hard to reverse rust first of all the binaries are huge even",
    "start": "715560",
    "end": "722399"
  },
  {
    "text": "the ones that are without the Box symbols they're still very big and we have lots of strings but none of them",
    "start": "722399",
    "end": "729440"
  },
  {
    "text": "are really interesting and I think from what we saw most of the strings that are interesting are",
    "start": "729440",
    "end": "735040"
  },
  {
    "text": "encrypted then we have huge functions with lots of Stack variables and calling",
    "start": "735040",
    "end": "741519"
  },
  {
    "text": "conventions they exist but R supports all of them and then the developers can",
    "start": "741519",
    "end": "746920"
  },
  {
    "text": "decide for each function which calling convention to use which makes reversing even",
    "start": "746920",
    "end": "753360"
  },
  {
    "text": "harder so we're not really touching until now the reversing of rust because",
    "start": "753360",
    "end": "759680"
  },
  {
    "text": "it's hard because what work for go doesn't work in Rust because our tools",
    "start": "759680",
    "end": "765560"
  },
  {
    "text": "suck and because the reasons we're not talking about NE or cotlin or any other",
    "start": "765560",
    "end": "771680"
  },
  {
    "text": "language it is hard and annoying so to be honest there is no",
    "start": "771680",
    "end": "778680"
  },
  {
    "text": "hope thank you okay we we will not give up just",
    "start": "778680",
    "end": "786440"
  },
  {
    "text": "yet so um we want to create a project to start somewhere and to improve to BU ONN",
    "start": "786440",
    "end": "794000"
  },
  {
    "text": "something and to make scripts for for sure not plugins and our main focus is",
    "start": "794000",
    "end": "800760"
  },
  {
    "text": "Ida Pro though we are kind of looking into binary ninja and like other platforms so that's something to keep in",
    "start": "800760",
    "end": "808000"
  },
  {
    "text": "mind um um our process basically went from okay let's take some malor samples",
    "start": "808000",
    "end": "814959"
  },
  {
    "text": "and see how they look under the hood and also let's compile some Rust code and",
    "start": "814959",
    "end": "820079"
  },
  {
    "text": "see how like very simple like strings looks under the hood so it is hard to",
    "start": "820079",
    "end": "825560"
  },
  {
    "text": "compile rust it is hard to write rust um we thought we've Ida python a lot and we",
    "start": "825560",
    "end": "833120"
  },
  {
    "text": "wanted to give up a few times and we wanted to become Farmers looks much easier life but we're still here and",
    "start": "833120",
    "end": "841160"
  },
  {
    "text": "just a disclaimer through this presentation we're going to talk about Ida Python and how much it was painful",
    "start": "841160",
    "end": "849399"
  },
  {
    "text": "to write scripts and to do some stuff but we really love Ida and the excellent",
    "start": "849399",
    "end": "855360"
  },
  {
    "text": "people at x-rays are willing to help and we're working with them to fix some of the pain points so we love Ida and we",
    "start": "855360",
    "end": "862600"
  },
  {
    "text": "love biner inja it's a toxic relationship with Ida so where do we start first we're",
    "start": "862600",
    "end": "869920"
  },
  {
    "text": "making a Yar rule to identify rest binaries similar to what we did with",
    "start": "869920",
    "end": "875399"
  },
  {
    "text": "go and then we want to see what information that we can read and what we",
    "start": "875399",
    "end": "880480"
  },
  {
    "text": "can grab out of there so I mentioned that we have lots of strings and when we",
    "start": "880480",
    "end": "885720"
  },
  {
    "text": "look into them we can see some Rust C which is the rust compiler followed by",
    "start": "885720",
    "end": "891440"
  },
  {
    "text": "something that look like a commit version which it is so we can grab the actual compiler version which is very",
    "start": "891440",
    "end": "899040"
  },
  {
    "text": "powerful given that there are so many versions of rust then uh when we continue looking",
    "start": "899040",
    "end": "905720"
  },
  {
    "text": "into the strings we can see the cargo which is the dependency manager and we can see the full path so we are going to",
    "start": "905720",
    "end": "911839"
  },
  {
    "text": "use the full path later in this presentation but right now what we grabbed is the dependencies so while",
    "start": "911839",
    "end": "918519"
  },
  {
    "text": "we're not able to maybe identify user code and Library code at least we know which libraries are",
    "start": "918519",
    "end": "924680"
  },
  {
    "text": "used and their versions too now we want to create some",
    "start": "924680",
    "end": "930440"
  },
  {
    "text": "structures and understand the r structures there are lots of them let's start with strings we have",
    "start": "930440",
    "end": "937480"
  },
  {
    "text": "strings and we have slices in Rust so for Strings we have the capacity pointer",
    "start": "937480",
    "end": "942839"
  },
  {
    "text": "to the content of the string and then the length because you can change the",
    "start": "942839",
    "end": "947920"
  },
  {
    "text": "capacity of strings slices are constants so we have only length and a pointer to",
    "start": "947920",
    "end": "953199"
  },
  {
    "text": "the content of the string so we created structures in Ida",
    "start": "953199",
    "end": "959040"
  },
  {
    "text": "which was also painful um but we created structures for slices and strings both for 64 and 32",
    "start": "959040",
    "end": "967199"
  },
  {
    "text": "bit so now if want to compile some simple Ras code to see how these slices",
    "start": "967199",
    "end": "972480"
  },
  {
    "text": "and strings look like under the hood uh this is an example of the source code and here we can see the the",
    "start": "972480",
    "end": "978759"
  },
  {
    "text": "decompilation which is not pretty but we can understand what's going on and we",
    "start": "978759",
    "end": "984319"
  },
  {
    "text": "see that the content of the slice is actually stored in the art data section",
    "start": "984319",
    "end": "989560"
  },
  {
    "text": "and we can see that our data actually follows the structure of slices so we have the pointer to the string itself",
    "start": "989560",
    "end": "995480"
  },
  {
    "text": "and the length strings so seems like a normal nice",
    "start": "995480",
    "end": "1003399"
  },
  {
    "text": "string but in the decompilation it looks horrible and then if we want to maybe",
    "start": "1003399",
    "end": "1009759"
  },
  {
    "text": "use a mutable string which is a thinking rust it looks even worse because now we",
    "start": "1009759",
    "end": "1017240"
  },
  {
    "text": "have some memory operations and if we're grabbing a string that is longer than 16",
    "start": "1017240",
    "end": "1023439"
  },
  {
    "text": "characters we're using xmm words and in some cases the strings are",
    "start": "1023439",
    "end": "1029520"
  },
  {
    "text": "in Reverse so it's a whole mess so remember the structures that we",
    "start": "1029520",
    "end": "1036120"
  },
  {
    "text": "defined before and that we want to create scripts to help our life make to",
    "start": "1036120",
    "end": "1041400"
  },
  {
    "text": "make our life easier after running the scripts it looks much nicer right looks",
    "start": "1041400",
    "end": "1046600"
  },
  {
    "text": "like code so the issues that we're tackling here",
    "start": "1046600",
    "end": "1051760"
  },
  {
    "text": "is basically that the content of the slices is in another section and things are messed up and reversed so we're",
    "start": "1051760",
    "end": "1058880"
  },
  {
    "text": "using scripts to make it cleaner make it nicer and more readable when we're looking into huge functions this part",
    "start": "1058880",
    "end": "1066440"
  },
  {
    "text": "that is all of a sudden very clear makes the life easier even if it's a small",
    "start": "1066440",
    "end": "1073400"
  },
  {
    "text": "part next that next thing that we wanted to tackle is actually the calling conventions so I took this from the rust",
    "start": "1073400",
    "end": "1080080"
  },
  {
    "text": "repository and this is the list of all the supported rust calling conventions so it's a",
    "start": "1080080",
    "end": "1087320"
  },
  {
    "text": "mess so we started to look for places which we can use to maybe understand how",
    "start": "1087320",
    "end": "1093280"
  },
  {
    "text": "the stock of the calling of function calls look like so we went into the unwi",
    "start": "1093280",
    "end": "1100039"
  },
  {
    "text": "info which is part of the exception handling so when we run a program and we",
    "start": "1100039",
    "end": "1106039"
  },
  {
    "text": "had hidden exception in runtime theun time will go over at a stock try to find",
    "start": "1106039",
    "end": "1111919"
  },
  {
    "text": "the right uh exception Handler if it doesn't find one the function will uh",
    "start": "1111919",
    "end": "1117039"
  },
  {
    "text": "terminate so to know how exactly unpack this stack um the runtime will use the",
    "start": "1117039",
    "end": "1123480"
  },
  {
    "text": "unwind info and funny thing is that we noticed that Ida didn't parse the",
    "start": "1123480",
    "end": "1128640"
  },
  {
    "text": "structure correctly the full documentation is actually um really good document by Microsoft so we U developed",
    "start": "1128640",
    "end": "1136440"
  },
  {
    "text": "our own structured and we added to Ida as well so now our scripts goes over all the",
    "start": "1136440",
    "end": "1143200"
  },
  {
    "text": "functions and most of the functions do have this structure and we parse um the",
    "start": "1143200",
    "end": "1148919"
  },
  {
    "text": "structure for each function so we know which nonvolatile registers were used",
    "start": "1148919",
    "end": "1153960"
  },
  {
    "text": "and what's this size of the frame and unfortunately right now it's not enough",
    "start": "1153960",
    "end": "1160760"
  },
  {
    "text": "to actually Define the calling convention um because we need more information about the types so that's",
    "start": "1160760",
    "end": "1167840"
  },
  {
    "text": "something that we will need to fix in the decompilation uh and we're looking into",
    "start": "1167840",
    "end": "1173520"
  },
  {
    "text": "other formats of dwarf for uh Linux and",
    "start": "1173520",
    "end": "1179480"
  },
  {
    "text": "Mac all right so as we kept trying to make the most of the data that we had available to us uh",
    "start": "1180640",
    "end": "1187799"
  },
  {
    "text": "and that's really the name of the game here like I think a lot of the um former",
    "start": "1187799",
    "end": "1194080"
  },
  {
    "text": "programming language developers had a tendency to want to just remove data and get out of the final binary and I think",
    "start": "1194080",
    "end": "1200440"
  },
  {
    "text": "that's where the concept of stripping was really supposed to come in as well a lot of the newer Pro programming",
    "start": "1200440",
    "end": "1205640"
  },
  {
    "text": "language developers just seem to think that it's okay like to keep shoving the data into the binary and then you can",
    "start": "1205640",
    "end": "1211039"
  },
  {
    "text": "remove references right like you'll remove some pointers or a given structure but the data stays there and",
    "start": "1211039",
    "end": "1216080"
  },
  {
    "text": "that's where we want to play and where we can do a lot of our magic so one thing we kept seeing was these",
    "start": "1216080",
    "end": "1224000"
  },
  {
    "text": "like calls to a function and an offset somewhere and and if if you've ever",
    "start": "1224000",
    "end": "1229400"
  },
  {
    "text": "played with sort of like the offsets uh or anything with strings and rust you'll notice that there's tons of indirect",
    "start": "1229400",
    "end": "1235600"
  },
  {
    "text": "references right there's an offset that points to a place that has some data that points to a place that has the",
    "start": "1235600",
    "end": "1242400"
  },
  {
    "text": "content of the string and that's a lot of the stuff that we've had to restructure that actually includes",
    "start": "1242400",
    "end": "1247880"
  },
  {
    "text": "information that we're trying to collect and that we've put into our scripts but in this case we keep seeing these weird",
    "start": "1247880",
    "end": "1253120"
  },
  {
    "text": "sort of offset strings and when we look at it you look at it it's like okay there's another structure",
    "start": "1253120",
    "end": "1259280"
  },
  {
    "text": "here um which I call the debug info structure and sort of we Define 32 and",
    "start": "1259280",
    "end": "1265159"
  },
  {
    "text": "64-bit versions um and when we apply it the result you get is actually really",
    "start": "1265159",
    "end": "1270840"
  },
  {
    "text": "interesting it turns out that uh because rust is so heavily macro based there's a",
    "start": "1270840",
    "end": "1276679"
  },
  {
    "text": "lot of things that happen under the hood that developers are not aware of so one of the things that happens when you use",
    "start": "1276679",
    "end": "1283039"
  },
  {
    "text": "one of these uh just the print Ln um macro is it actually",
    "start": "1283039",
    "end": "1290360"
  },
  {
    "text": "includes Panic information for when it needs to unroll the stack if something goes wrong and that Panic information",
    "start": "1290360",
    "end": "1297559"
  },
  {
    "text": "literally includes the file path where this is coming from the line and column",
    "start": "1297559",
    "end": "1303080"
  },
  {
    "text": "number of where the error occurred and that ends up in the final binary so once",
    "start": "1303080",
    "end": "1308559"
  },
  {
    "text": "we had parsed it properly we could actually bring it back into the decompilation and we started to notice",
    "start": "1308559",
    "end": "1315279"
  },
  {
    "text": "uh there's something really interesting because you can start to map out the standard Library source code and",
    "start": "1315279",
    "end": "1322000"
  },
  {
    "text": "where it intersects with what's being used in uh the user code so this is one",
    "start": "1322000",
    "end": "1327720"
  },
  {
    "text": "way where we started to really sort of get um some really interesting information back and then if you again",
    "start": "1327720",
    "end": "1335679"
  },
  {
    "text": "we we see what's there we try to figure out what the info stands for we give it structure and we keep surfacing it to",
    "start": "1335679",
    "end": "1342240"
  },
  {
    "text": "the user the idea again being we're going to try to run as much of this information giving it structure bringing",
    "start": "1342240",
    "end": "1348679"
  },
  {
    "text": "it back so that by the time the analyst gets to the picture all this stuff is already there that's not the stuff that",
    "start": "1348679",
    "end": "1355080"
  },
  {
    "text": "you should be trying to process in that moment so another thing to do at that point is",
    "start": "1355080",
    "end": "1361279"
  },
  {
    "text": "if you now have structured this um debug info you can start going backwards into",
    "start": "1361279",
    "end": "1367080"
  },
  {
    "text": "all the references to those offsets and you figure out actually here's all of the exception handling that rust is",
    "start": "1367080",
    "end": "1373159"
  },
  {
    "text": "structured for you and we can start to identify entire portions of code that",
    "start": "1373159",
    "end": "1379679"
  },
  {
    "text": "have no function labels and whatnot but that in this case are being pointed down all the way uh to standard Library",
    "start": "1379679",
    "end": "1385799"
  },
  {
    "text": "source code so that's one way it's not a a good way it's not an easy way but that is one way that we can start to kind of",
    "start": "1385799",
    "end": "1392919"
  },
  {
    "text": "feel our way in the dark to what standard Library code we're dealing with in some cases we have found some better",
    "start": "1392919",
    "end": "1398559"
  },
  {
    "text": "ways uh objection you know whatever but that's one of the ways we do it then",
    "start": "1398559",
    "end": "1405240"
  },
  {
    "text": "came what I'll call our previous Obsession but one obsession that in particular has caused me a lot of",
    "start": "1405240",
    "end": "1412559"
  },
  {
    "text": "Heartache which is uh there's an issue with tons of",
    "start": "1412559",
    "end": "1417720"
  },
  {
    "text": "byref uh stack variables showing up how many of you are familiar with what byref",
    "start": "1417720",
    "end": "1424799"
  },
  {
    "text": "um that got a couple folks all right so basically what it means is if you're looking at the code um",
    "start": "1424799",
    "end": "1433600"
  },
  {
    "text": "and in the decompilation in hex-rays Ida will tell you if it has a variable",
    "start": "1433640",
    "end": "1440000"
  },
  {
    "text": "that's uh overlapping another variable so it's like way too big or it has a variable that's being referred to um",
    "start": "1440000",
    "end": "1447000"
  },
  {
    "text": "sort of by reference to a specific portion of the stack um what's",
    "start": "1447000",
    "end": "1452480"
  },
  {
    "text": "interesting is we're seeing tons of these bu refs um and what it's pointing",
    "start": "1452480",
    "end": "1457679"
  },
  {
    "text": "to is the fact that it seems rust does not I'm not going to say it doesn't respect it has a different idea of what",
    "start": "1457679",
    "end": "1465559"
  },
  {
    "text": "scope should be for certain functions and this is where you start to see why",
    "start": "1465559",
    "end": "1471039"
  },
  {
    "text": "this is actually so hard and what's actually wrong it's not handling scope the way we're used to you say this is a",
    "start": "1471039",
    "end": "1478039"
  },
  {
    "text": "function this is a variable within that function it only lives within that function when we're done we're done and",
    "start": "1478039",
    "end": "1483159"
  },
  {
    "text": "we bail right that's always been the idea not in whatever it is that we're",
    "start": "1483159",
    "end": "1488279"
  },
  {
    "text": "looking at here what you see is functions being able to point to a",
    "start": "1488279",
    "end": "1493960"
  },
  {
    "text": "something in the stack that is not in their stack and making changes to that",
    "start": "1493960",
    "end": "1499159"
  },
  {
    "text": "data which is why we're not seeing the sort of data flow clearly across these different functions um we talked to some",
    "start": "1499159",
    "end": "1506799"
  },
  {
    "text": "much smarter people at uh Recon and um Sergey bratus and ilac um were actually",
    "start": "1506799",
    "end": "1514600"
  },
  {
    "text": "very kind about sort of started to discuss whether this is a concept of an application of the use of closures I",
    "start": "1514600",
    "end": "1521919"
  },
  {
    "text": "don't know uh at that at that point but the the other possibility is simply that",
    "start": "1521919",
    "end": "1528440"
  },
  {
    "text": "that we're dealing with such bad variable like variating stack sizes that",
    "start": "1528440",
    "end": "1534360"
  },
  {
    "text": "they're running over each other but I don't think that's the case uh in any case I had to stop going down this path",
    "start": "1534360",
    "end": "1540919"
  },
  {
    "text": "of Madness because our decompilation is so bad right now that I can't",
    "start": "1540919",
    "end": "1546720"
  },
  {
    "text": "actually we can't fix all of the type problems and size problems yet there is",
    "start": "1546720",
    "end": "1551880"
  },
  {
    "text": "so much dead store uh elimination that needs to happen reuse of variables that's currently happening that's",
    "start": "1551880",
    "end": "1558360"
  },
  {
    "text": "inaccurate and like I you know um Nicole mentioned we're getting a lot of help",
    "start": "1558360",
    "end": "1563960"
  },
  {
    "text": "from uh the folks at hexr we hope to kind of keep improving on this we hope that the underlying you know decompiler",
    "start": "1563960",
    "end": "1570080"
  },
  {
    "text": "will improve and then we can tackle this one again but I really wanted to point to it because I think there might be some serious answers when we can deal",
    "start": "1570080",
    "end": "1578159"
  },
  {
    "text": "with this um the other thing that we could do right now if folks are looking for um a way to contribute to this um I",
    "start": "1578159",
    "end": "1585120"
  },
  {
    "text": "would suggest going back to these exact examples in binary ninja uh or God",
    "start": "1585120",
    "end": "1590440"
  },
  {
    "text": "forbid gidra and just seeing what's happening um in those stack calculations",
    "start": "1590440",
    "end": "1595919"
  },
  {
    "text": "so maybe we can contrast and compare see if it's a ghost in our decompiler or if it's actually a problem that's coming",
    "start": "1595919",
    "end": "1602000"
  },
  {
    "text": "down from rust but it's happening consistently we count on ilac on this",
    "start": "1602000",
    "end": "1609799"
  },
  {
    "text": "one so beyond that what are we working on right now this is like a six-month",
    "start": "1609799",
    "end": "1614919"
  },
  {
    "text": "project for us we're not coming to you with a lot of answers we're coming to you with like the bleeding edge of what we can accomplish as the tools continue",
    "start": "1614919",
    "end": "1621320"
  },
  {
    "text": "to improve um there's something I think a lot more promising uh for the time",
    "start": "1621320",
    "end": "1626840"
  },
  {
    "text": "being and I'll let Nicole take that one since it's her",
    "start": "1626840",
    "end": "1631880"
  },
  {
    "text": "work so we wanted to see if we can do something around this dependencies sort",
    "start": "1631880",
    "end": "1637919"
  },
  {
    "text": "of like Library code and maybe if we can't identify it through Ida maybe we",
    "start": "1637919",
    "end": "1643240"
  },
  {
    "text": "can identify it through other ways so first of all we wanted to do sort of",
    "start": "1643240",
    "end": "1648720"
  },
  {
    "text": "like a static compilation for these dependencies which is apparently also not straightforward in Rust like",
    "start": "1648720",
    "end": "1655000"
  },
  {
    "text": "anything else so we had to basically pull the dependencies using the script",
    "start": "1655000",
    "end": "1660080"
  },
  {
    "text": "that we showed you before and compile it as a crate and then use cargo tree to",
    "start": "1660080",
    "end": "1666279"
  },
  {
    "text": "list all the dependencies and then for which each one of them we would go and",
    "start": "1666279",
    "end": "1671360"
  },
  {
    "text": "create basically like a simple program and sorry this is how the tree looks",
    "start": "1671360",
    "end": "1677600"
  },
  {
    "text": "like for one dependency that's great I don't know if you folks can see the code in in the back but if you go back to it",
    "start": "1677600",
    "end": "1684760"
  },
  {
    "text": "just um so we'll look at a sample and you'll end up seeing like Rand Chacha",
    "start": "1684760",
    "end": "1690760"
  },
  {
    "text": "and you know the exact version of Rand Chacha but for us to be able to identify the code you got to walk that tree of",
    "start": "1690760",
    "end": "1697760"
  },
  {
    "text": "what looks like about a dozen dependencies and then pull each one of",
    "start": "1697760",
    "end": "1702799"
  },
  {
    "text": "those label each one of those and work your way back up just to be able to get ran Chacha into that one s that's the",
    "start": "1702799",
    "end": "1708559"
  },
  {
    "text": "short version of this dependency tree and the reason we're going after we're",
    "start": "1708559",
    "end": "1713640"
  },
  {
    "text": "trying to make it as narrow and as accurate for each dependencies because",
    "start": "1713640",
    "end": "1718679"
  },
  {
    "text": "of the way that we want to implement it so uh for each dependency we will create",
    "start": "1718679",
    "end": "1724080"
  },
  {
    "text": "sort of like a very basic main um that prints this the the crate version and a",
    "start": "1724080",
    "end": "1731200"
  },
  {
    "text": "very simple cargo that basically uses the dependency that we want to",
    "start": "1731200",
    "end": "1736320"
  },
  {
    "text": "isolate and the reason that we want to isolate it is because we we have two",
    "start": "1736320",
    "end": "1741799"
  },
  {
    "text": "approaches so one approach is more similar to what actually iner the",
    "start": "1741799",
    "end": "1746919"
  },
  {
    "text": "company um I'm working on is doing is basically identify these libraries or",
    "start": "1746919",
    "end": "1752039"
  },
  {
    "text": "crates using Code ruse so if we can say this",
    "start": "1752039",
    "end": "1757399"
  },
  {
    "text": "exact what it is bin code this exact bin code is um looks like that and then if",
    "start": "1757399",
    "end": "1763440"
  },
  {
    "text": "we get a new sample we will be able to identify this code reuse and basically nerd down the functions and the code",
    "start": "1763440",
    "end": "1770120"
  },
  {
    "text": "that we need to look for and the other approach is actually making flirts so",
    "start": "1770120",
    "end": "1776279"
  },
  {
    "text": "part of the reason that we wanted to compile these things is um Ida has been doing a lot hex has been doing a lot of",
    "start": "1776279",
    "end": "1782039"
  },
  {
    "text": "work on improving the development of FLIR signatures there's Ida clang and like all this other stuff that they're",
    "start": "1782039",
    "end": "1787360"
  },
  {
    "text": "introducing and I think we're kind of halfway through to like a big roll out from hexr so I don't want to throw shade",
    "start": "1787360",
    "end": "1793360"
  },
  {
    "text": "at them at all uh I'm excited for whatever is coming right now making",
    "start": "1793360",
    "end": "1798399"
  },
  {
    "text": "flirt signatures is not like necessarily the easiest thing but just think this is where like the academic in me wishes I",
    "start": "1798399",
    "end": "1804760"
  },
  {
    "text": "had like a whiteboard right think about the process and the way that it's developing right now we get a binary we",
    "start": "1804760",
    "end": "1811360"
  },
  {
    "text": "have the easy ability to pull out what dependencies are by name inv",
    "start": "1811360",
    "end": "1817600"
  },
  {
    "text": "version we can in theory cross compile all of those for the different",
    "start": "1817600",
    "end": "1823480"
  },
  {
    "text": "architectures and bit um and you know platform",
    "start": "1823480",
    "end": "1828519"
  },
  {
    "text": "in theory I say that in theory because it's been a complete pain in the ass but in theory you can do it right um so",
    "start": "1828519",
    "end": "1835279"
  },
  {
    "text": "we'll go if we have a setup ofm we'll do it um but you can compile that as a standalone exe then we can get Ida to",
    "start": "1835279",
    "end": "1843000"
  },
  {
    "text": "analyze that head list and take a script like idb to Pat which we've modified a bit and come up with a flirt pattern and",
    "start": "1843000",
    "end": "1851480"
  },
  {
    "text": "then try to make a flirt signature out of it all of that would allow us to then",
    "start": "1851480",
    "end": "1857120"
  },
  {
    "text": "take a DOT file apply it to Ida reanalyze the whole binary and hopefully",
    "start": "1857120",
    "end": "1863880"
  },
  {
    "text": "get a bunch of our functions already identified that's what Ida should be well that's what Ida tries to do for you",
    "start": "1863880",
    "end": "1870760"
  },
  {
    "text": "with the existing tie libraries that it has it's a very limited amount of type libraries and there's a lot of debate",
    "start": "1870760",
    "end": "1876000"
  },
  {
    "text": "here as to why we've never just created one giant library of type Library files",
    "start": "1876000",
    "end": "1881159"
  },
  {
    "text": "for everyone um anyway I won't get into it but that is the approach that we're considering for the time being I would",
    "start": "1881159",
    "end": "1887480"
  },
  {
    "text": "love with we thought about trying to do like a GitHub actions type thing where it all compiles and then creates the Sig for you but we can't shove Ida in the",
    "start": "1887480",
    "end": "1894919"
  },
  {
    "text": "middle of that pipeline at least not in the cloud so in the meantime I think",
    "start": "1894919",
    "end": "1900960"
  },
  {
    "text": "we're at least going to start to we have another project that we're involved in that I'll tell you about in a little bit",
    "start": "1900960",
    "end": "1906720"
  },
  {
    "text": "that will hopefully give us a survey of dependencies and we're going to try to put out as much of the really valuable ones as",
    "start": "1906720",
    "end": "1912360"
  },
  {
    "text": "possible so where does that put us for now I know",
    "start": "1912360",
    "end": "1917960"
  },
  {
    "text": "know I've come to talk to you about something that sounds Ultra alpha or beta but the truth is that we need to",
    "start": "1917960",
    "end": "1923320"
  },
  {
    "text": "approach it this way because this whole project is going to have to be a living project for all of us or it's not going",
    "start": "1923320",
    "end": "1928720"
  },
  {
    "text": "to work in the sense of we're trying to get as much of this information as possible we're trying to make it as",
    "start": "1928720",
    "end": "1933880"
  },
  {
    "text": "available to everybody the wonderful rustaceans out there who are enthusiastically changing the compiler",
    "start": "1933880",
    "end": "1940399"
  },
  {
    "text": "and all this crap under the hood every two months are going to keep doing what they do and we're going to have to keep",
    "start": "1940399",
    "end": "1946159"
  },
  {
    "text": "trying to figure out how to wrestle information out of their hands but I think the valuable thing here is to note",
    "start": "1946159",
    "end": "1953679"
  },
  {
    "text": "just how much of that information is there up until a few months ago the best you would get with like rust reversing",
    "start": "1953679",
    "end": "1959639"
  },
  {
    "text": "tutorials uh except for Cindy sha who's done amazing work on the Binga side is",
    "start": "1959639",
    "end": "1964760"
  },
  {
    "text": "mostly just people trying to tell you how to figure out strings yeah strings are wonderful and we've taken care of",
    "start": "1964760",
    "end": "1969960"
  },
  {
    "text": "that for you and there's a script that will you know we can apply the strs and then we can apply the right types and you're going to see that information pop",
    "start": "1969960",
    "end": "1976360"
  },
  {
    "text": "up great you have strings the other 40,000 functions that need to be identified is the stuff that we're",
    "start": "1976360",
    "end": "1982679"
  },
  {
    "text": "actually concerned with the API being able to figure out the calling conventions being able to figure out what the stack sizes should look like",
    "start": "1982679",
    "end": "1988639"
  },
  {
    "text": "being able to figure out where information is being modified that's where the the magic is and we're chipping at it little by little and we",
    "start": "1988639",
    "end": "1995159"
  },
  {
    "text": "could use help so we're going to put up the project oxala GitHub uh this week um",
    "start": "1995159",
    "end": "2002360"
  },
  {
    "text": "it will come with scripts for all of the things that we've talked about so far recovering the Panic path being able to",
    "start": "2002360",
    "end": "2008440"
  },
  {
    "text": "place the slices instructs uh being able to infer dependencies with versions and we'll start to then we're going to start",
    "start": "2008440",
    "end": "2014159"
  },
  {
    "text": "to put up some of the dirty stuff that we haven't quite figured out completely but that we hope we can get some help",
    "start": "2014159",
    "end": "2019320"
  },
  {
    "text": "with right the harness to be able to compile things to be able to create the signature files and so on that will I'm",
    "start": "2019320",
    "end": "2025720"
  },
  {
    "text": "I'm sorry that will probably have to come down to a it works on my computer type situation just because how do I set",
    "start": "2025720",
    "end": "2032039"
  },
  {
    "text": "up some Ida anything for you guys in any meaningful way but we'll do our best to make it robust um",
    "start": "2032039",
    "end": "2038600"
  },
  {
    "text": "in the meantime I wanted to point out a couple of other projects we had to develop in the process of this with",
    "start": "2038600",
    "end": "2044039"
  },
  {
    "text": "varying success so if any of you are power Ida Pro users and you were",
    "start": "2044039",
    "end": "2049878"
  },
  {
    "text": "checking your emails a few months ago there was an an announcement that they're going to change idop python",
    "start": "2049879",
    "end": "2055720"
  },
  {
    "text": "again so I'm sure it's for the better Ida python needs to be improved it it",
    "start": "2055720",
    "end": "2062158"
  },
  {
    "text": "really is very brittle it sucks right now but it also means that if we're building this whole project in it of",
    "start": "2062159",
    "end": "2067398"
  },
  {
    "text": "python and someone's going to come and change it like I was ready to you know swallow a gun at that point so instead",
    "start": "2067399",
    "end": "2073200"
  },
  {
    "text": "we made this thing we call feature proof um and it's a middleware library where we've put",
    "start": "2073200",
    "end": "2081158"
  },
  {
    "text": "really obvious things you need to do with obvious names to do them as",
    "start": "2081159",
    "end": "2086358"
  },
  {
    "text": "functions and that way we can have perfect compatibility with the current um it of python um API and then we can",
    "start": "2086359",
    "end": "2095398"
  },
  {
    "text": "go in and modify just that Library and you know hopefully have our Scripts",
    "start": "2095399",
    "end": "2101240"
  },
  {
    "text": "still work after that something we learned from uh the equation groups development",
    "start": "2101240",
    "end": "2107720"
  },
  {
    "text": "tactics uh the other thing I tried to create and gave up on and failed miserably and if anybody can figure out",
    "start": "2107720",
    "end": "2114119"
  },
  {
    "text": "how the hell to do this I would you know I'll buy you a beer or 10 is we tried to create a generalized structure Creator",
    "start": "2114119",
    "end": "2121320"
  },
  {
    "text": "right now we have all these structs and you can manually go in and easily put them you'll literally go on the C syntax",
    "start": "2121320",
    "end": "2126920"
  },
  {
    "text": "you can paste 10 them at the same time and they pop up and that's fine great I wanted to create a thing that",
    "start": "2126920",
    "end": "2133839"
  },
  {
    "text": "would just be able to introduce new structures without you having to do anything just run an Ida python script",
    "start": "2133839",
    "end": "2140560"
  },
  {
    "text": "uh after 49 iterations of this with my handy uh gabo re my chat GPT bot uh",
    "start": "2140560",
    "end": "2147240"
  },
  {
    "text": "designed for ID Pro stuff which you guys are welcome to use um we gave up and",
    "start": "2147240",
    "end": "2152720"
  },
  {
    "text": "realized that there's just no way to really do this consistently or well just yet but that is a thing we trying to get",
    "start": "2152720",
    "end": "2158079"
  },
  {
    "text": "working and we're talking to the hexr guys about um where to from here because honestly",
    "start": "2158079",
    "end": "2165800"
  },
  {
    "text": "this is very much a call to action like Nicole's brilliant I I'm okay we can do",
    "start": "2165800",
    "end": "2172680"
  },
  {
    "text": "a lot I don't think we can tackle this whole problem by ourselves but if we start to structure some of this stuff I",
    "start": "2172680",
    "end": "2178000"
  },
  {
    "text": "think it will be a lot easier for other folks uh who are much smarter much more familiar with let's say dwarf or unwind",
    "start": "2178000",
    "end": "2185599"
  },
  {
    "text": "information for Mac which is a completely different format uh or any number of other structures or stuff",
    "start": "2185599",
    "end": "2191480"
  },
  {
    "text": "about complex types that is still hiding Within These binaries we can Surface all this information and put it up um to",
    "start": "2191480",
    "end": "2198960"
  },
  {
    "text": "some extent so folks um more information about the particulars about different",
    "start": "2198960",
    "end": "2204160"
  },
  {
    "text": "platforms and architectures like I said we're looking at all this like stru deception handling information for",
    "start": "2204160",
    "end": "2209560"
  },
  {
    "text": "Windows turns out completely as you would expect different for mac and for",
    "start": "2209560",
    "end": "2214599"
  },
  {
    "text": "Linux um more promising in some of those languages when you look at the the information that's being left behind for",
    "start": "2214599",
    "end": "2220200"
  },
  {
    "text": "Linux it's much more comprehensive what can we pull out of that right um there's",
    "start": "2220200",
    "end": "2225480"
  },
  {
    "text": "a lot of the stack on whing information we're kind of obsessed with because if we can get it right if we can figure out",
    "start": "2225480",
    "end": "2230920"
  },
  {
    "text": "more we could fix the calling convention problem right if you know what the stacks are supposed to look like if you",
    "start": "2230920",
    "end": "2237200"
  },
  {
    "text": "know what the non-volatile registers are you can start to infer what the Callin convention should be so this problem",
    "start": "2237200",
    "end": "2243400"
  },
  {
    "text": "that everybody says is like you know this like heart attack problem with reversing rust is fixable it is Within",
    "start": "2243400",
    "end": "2250079"
  },
  {
    "text": "Reach um obviously we want to do more with type recovery and size mismatching of local variables I'm sure that's",
    "start": "2250079",
    "end": "2256240"
  },
  {
    "text": "hiding a lot of problems for us uh we need to fix this the stupid decompilers",
    "start": "2256240",
    "end": "2261319"
  },
  {
    "text": "but we need to fix them because right now part of the reason we're not coming here and telling you like pulling up the bush mission accomplished Banner is when",
    "start": "2261319",
    "end": "2268359"
  },
  {
    "text": "you try pull this stuff up in in the decompiler there's 20 ghost variables",
    "start": "2268359",
    "end": "2276119"
  },
  {
    "text": "that shouldn't be there or that should be there be used in a different way and then if you pay really close attention",
    "start": "2276119",
    "end": "2281920"
  },
  {
    "text": "halfway through it starts to reuse the same variables for things that are completely unrelated so it's a disaster",
    "start": "2281920",
    "end": "2288680"
  },
  {
    "text": "there are things we can do right now because we do have to decompile and like reverse rust ASAP um but there's also",
    "start": "2288680",
    "end": "2295480"
  },
  {
    "text": "things that will have to come with improvements from tools and we're trying and like I said the hex race folks are",
    "start": "2295480",
    "end": "2301000"
  },
  {
    "text": "very being very helpful right now um then this is a",
    "start": "2301000",
    "end": "2308200"
  },
  {
    "text": "six-month project we're on month two I want to say basically our plan is we're",
    "start": "2308200",
    "end": "2313920"
  },
  {
    "text": "going to put our efforts into this until the end of the year and try to get as far as we can by the end of the year um",
    "start": "2313920",
    "end": "2319880"
  },
  {
    "text": "and sort of bring everybody along hopefully and and get a a we hope we get a Vibrant Community of folks we're already getting some folks who are",
    "start": "2319880",
    "end": "2325640"
  },
  {
    "text": "starting to introduce stuff here um and a part of this that I'll say is if you're not bige of pro users but you're",
    "start": "2325640",
    "end": "2331240"
  },
  {
    "text": "really interested in this problem bja binary ninja is",
    "start": "2331240",
    "end": "2336440"
  },
  {
    "text": "having completely different results and problems uh but also really promising",
    "start": "2336440",
    "end": "2342920"
  },
  {
    "text": "things that are coming up there they have a really good support structure they're very invested in in helping folks out if you are a power Binga user",
    "start": "2342920",
    "end": "2351079"
  },
  {
    "text": "or power Binga plug-in developer we'd love to be able to Port these same features back and forth and then I think",
    "start": "2351079",
    "end": "2357240"
  },
  {
    "text": "we're going to start to get more information that gives us some ground Truth where our tools are failing versus where rust is introducing weird stuff um",
    "start": "2357240",
    "end": "2365240"
  },
  {
    "text": "our eventual goal is actually to be able to hunt into the rust malware ecosystem uh the likely outcome is that we will",
    "start": "2365240",
    "end": "2372040"
  },
  {
    "text": "again choose to become Farmers um have we learned anything that will help us",
    "start": "2372040",
    "end": "2377319"
  },
  {
    "text": "with hunting uh no well a little bit maybe the next thing that we're going to",
    "start": "2377319",
    "end": "2382920"
  },
  {
    "text": "unveil on this beyond the scripts is we're actually working on a survey of all asterisk compiled rust code uh as",
    "start": "2382920",
    "end": "2390720"
  },
  {
    "text": "best as we can get it uh shout out to our friends at virus total who are being extremely helpful with sourcing a lot of",
    "start": "2390720",
    "end": "2395960"
  },
  {
    "text": "information and whatnot uh this is this is us trying to turn to like the big data side of it we have an AI component",
    "start": "2395960",
    "end": "2402040"
  },
  {
    "text": "that's helping us we're hoping a big data component will help us and if not just using those words maybe we'll just",
    "start": "2402040",
    "end": "2408119"
  },
  {
    "text": "get VC funding and pretend that it's all golden and get a vendor Booth or something anyways um I'm hoping we have",
    "start": "2408119",
    "end": "2416119"
  },
  {
    "text": "time for Q&A but thank you all for being here and",
    "start": "2416119",
    "end": "2422359"
  },
  {
    "text": "for trying to stomach this uh frustration um can't spell frustration",
    "start": "2422359",
    "end": "2428000"
  },
  {
    "text": "without rust uh and we hope that in the next two months we'll actually have a much uh",
    "start": "2428000",
    "end": "2433240"
  },
  {
    "text": "nicer ecosystem that we can go after understand what's happening in these be able to reverse them and then I promise",
    "start": "2433240",
    "end": "2439079"
  },
  {
    "text": "you the amount of malware that is going to shake out uh will keep us all happily employed in this trash fire forever",
    "start": "2439079",
    "end": "2448400"
  },
  {
    "text": "so do we have time for questions yeah we're out of time all right find us in the wrap room thank you all so much",
    "start": "2448400",
    "end": "2454839"
  },
  {
    "text": "GitHub will go up we'll tweet it um we're out",
    "start": "2454839",
    "end": "2461800"
  }
]