[
  {
    "text": "hi everyone and uh welcome to the silently breaking aslr in the cloud",
    "start": "359",
    "end": "7360"
  },
  {
    "text": "briefing this is Joint work with Matias P from Peru University and Thomas go",
    "start": "7360",
    "end": "13080"
  },
  {
    "text": "from eth Zurich I'm Antonio I'm am co-founder of a swiss-based it security",
    "start": "13080",
    "end": "19840"
  },
  {
    "text": "company called zorab and this here next to me is a cave he's a security",
    "start": "19840",
    "end": "25880"
  },
  {
    "text": "researcher in the system Security Group here at V University and",
    "start": "25880",
    "end": "31599"
  },
  {
    "text": "Amsterdam the outline of the briefing looks as follows so we'll first talk a",
    "start": "31599",
    "end": "36640"
  },
  {
    "text": "little bit about the threat scenario so uh better so we will first",
    "start": "36640",
    "end": "45239"
  },
  {
    "text": "talk a little bit about the threat scenario so the actually the starting point of the attack and what we assume the attacker already has we'll then look",
    "start": "45239",
    "end": "52600"
  },
  {
    "text": "into memory D ducation the root of all evil in that case that makes attack possible uh and then at the side channel",
    "start": "52600",
    "end": "59559"
  },
  {
    "text": "that we're going to exploit and then we present the attack called cane cross VM address based layout randomization we'll",
    "start": "59559",
    "end": "66880"
  },
  {
    "text": "show you some evaluation results of the proof of concept that we implemented and then we talk a little bit about what an",
    "start": "66880",
    "end": "73119"
  },
  {
    "text": "attacker actually can do after he used Kane and look at some mitigations so what we assume is the",
    "start": "73119",
    "end": "79960"
  },
  {
    "text": "following scenario we have at least or we have a physical Hardware with a virtual machine monitor on top of it and",
    "start": "79960",
    "end": "86479"
  },
  {
    "text": "two or more virtual machines running on that we further assume that there is an attacker already on one of these systems",
    "start": "86479",
    "end": "93680"
  },
  {
    "text": "so there is one attacker VM where the attacker is either in control of that VM or has just use of",
    "start": "93680",
    "end": "100360"
  },
  {
    "text": "privileges the attacker wants to attack a neighboring victim virtual machine and",
    "start": "100360",
    "end": "106640"
  },
  {
    "text": "he knows a memory corruption vulnerability in a process that runs on that VM so usually what happens is the",
    "start": "106640",
    "end": "114119"
  },
  {
    "text": "techer has a memory corruption vulnerability and he try he will try to hijack control flow and to mount a code",
    "start": "114119",
    "end": "120719"
  },
  {
    "text": "reuser attack he will need to know the addresses of libraries or or code locations now nowadays that's not that",
    "start": "120719",
    "end": "127399"
  },
  {
    "text": "easy because there is a address space layout randomization in most modern systems so the code locations are",
    "start": "127399",
    "end": "132959"
  },
  {
    "text": "randomized in memory now what we will show today is the following if the",
    "start": "132959",
    "end": "138200"
  },
  {
    "text": "virtual machine monitor has same content page based memory D application enabled",
    "start": "138200",
    "end": "143959"
  },
  {
    "text": "then it is actually possible for the attacker to infer the base addresses that are randomized of uh codes of",
    "start": "143959",
    "end": "152200"
  },
  {
    "text": "libraries and executables that are mapped in processes of neighboring virtual",
    "start": "152200",
    "end": "157560"
  },
  {
    "text": "machines thus the attacker can use that Base address that he leaked and construct the code views",
    "start": "157560",
    "end": "163920"
  },
  {
    "text": "attack so we present cross VM address based layout random introspection and",
    "start": "163920",
    "end": "169599"
  },
  {
    "text": "it's a new attack Vector against memory D application it's it's tracked under that CV so 205 2877 there is also a",
    "start": "169599",
    "end": "175760"
  },
  {
    "text": "vulnerability note from c.org with some additional information and it makes it possible to leak the randomized base",
    "start": "175760",
    "end": "182080"
  },
  {
    "text": "addresses of libraries and executables processes that run in other VMS now",
    "start": "182080",
    "end": "187120"
  },
  {
    "text": "let's look at memory D application now there are virtual machine monitors that use this memory D",
    "start": "187120",
    "end": "192920"
  },
  {
    "text": "application I mean there is KVM VMware has it implemented virtual box and what",
    "start": "192920",
    "end": "198560"
  },
  {
    "text": "actually happens is the following so there are two VMS and the color of uh these pages are the contents now when",
    "start": "198560",
    "end": "205760"
  },
  {
    "text": "two pages are have the same content through over two VMS the memory D",
    "start": "205760",
    "end": "211360"
  },
  {
    "text": "application scheme tries to find these Pages it will scan for these pages and as soon as it found two pages with the",
    "start": "211360",
    "end": "217120"
  },
  {
    "text": "same content it will merge them to one physical page now as soon as one of the VMS now",
    "start": "217120",
    "end": "223959"
  },
  {
    "text": "in that case VM a writes to that page there will be a copy on right operation so the page will be duplicated again",
    "start": "223959",
    "end": "231080"
  },
  {
    "text": "from physical memory uh such that the VMA can easily write to it and everything is fine again now the problem",
    "start": "231080",
    "end": "237519"
  },
  {
    "text": "with that is that there is a security Pitfall here here namely if VMA observes",
    "start": "237519",
    "end": "243599"
  },
  {
    "text": "or measures the right times to that page it will measure a significantly higher",
    "start": "243599",
    "end": "248760"
  },
  {
    "text": "right time to the shared page compared to other pages and this opens up a side",
    "start": "248760",
    "end": "254120"
  },
  {
    "text": "channel that the attacker can exploited now from the attacker's point of view it looks like this so the",
    "start": "254120",
    "end": "260600"
  },
  {
    "text": "attacker is in the attacker VM and there is the side Channel and then there are there is memory in the victim BM so",
    "start": "260600",
    "end": "265919"
  },
  {
    "text": "these are all pages and there is this blue page what the attacker can do is the techer can guess that page so he has",
    "start": "265919",
    "end": "272759"
  },
  {
    "text": "to construct that page in his memory and then the techer just waits for a certain amount of time till the memory D",
    "start": "272759",
    "end": "279240"
  },
  {
    "text": "duplication scheme finds these two pages and merges them and then the attacker just writes to it and if that right time",
    "start": "279240",
    "end": "285840"
  },
  {
    "text": "is bigger than a a certain threshold the techer can deduce that this page existed",
    "start": "285840",
    "end": "291919"
  },
  {
    "text": "in another VM and if it's not if it's not the case then he can assume that this is not the case so this is the site",
    "start": "291919",
    "end": "299840"
  },
  {
    "text": "that we're going to use to break aslr of collocated VMS now from the teer point",
    "start": "299840",
    "end": "306199"
  },
  {
    "text": "of view we have several challenges that we have to solve so the first challenge is actually uh what should the page",
    "start": "306199",
    "end": "313320"
  },
  {
    "text": "contents be of that page so the attacker has to contr construct guesses second the attacker has to wait",
    "start": "313320",
    "end": "319319"
  },
  {
    "text": "for a certain amount of time so the attacker has actually no idea about how long he has to wait till these Pages get",
    "start": "319319",
    "end": "325759"
  },
  {
    "text": "get merged and then third the attacker has to write to it me the time and then deduce or infer if uh that measured time",
    "start": "325759",
    "end": "334680"
  },
  {
    "text": "might indicate that the page was merged or not so there is noise in that channel because there are also right times that",
    "start": "334680",
    "end": "340319"
  },
  {
    "text": "are higher because of not just because of memory D application and the question is also what kind of threshold should be",
    "start": "340319",
    "end": "346360"
  },
  {
    "text": "used and finally if these challenges are solved the right hand will reveal if that page was",
    "start": "346360",
    "end": "352440"
  },
  {
    "text": "shared the attack looks as follows on the high level and we will look at all of these phases in more detail so we",
    "start": "352440",
    "end": "358960"
  },
  {
    "text": "have a first phase phase that we call the ad adaptive sleep time detection phase then there will be a round of",
    "start": "358960",
    "end": "364800"
  },
  {
    "text": "filtering you'll understand later what what I mean with round and then there will be the verification phase and at",
    "start": "364800",
    "end": "370759"
  },
  {
    "text": "the end what comes out is the Base address of uh of of a library in a",
    "start": "370759",
    "end": "375840"
  },
  {
    "text": "collocated VM now let's look at the first challenge the page contents now",
    "start": "375840",
    "end": "381199"
  },
  {
    "text": "when we were think thinking about the attack we were looking for certain kinds of pages of course and these Pages have",
    "start": "381199",
    "end": "386800"
  },
  {
    "text": "certain criteria or they have to follow so criteria so one of it is the pages",
    "start": "386800",
    "end": "392240"
  },
  {
    "text": "have to be page aligned and the reason for that is we'll have to construct pages that where the memory application",
    "start": "392240",
    "end": "397599"
  },
  {
    "text": "scheme scans through the pages and it always starts at offset zero so it tries to detect if these pages are are are the",
    "start": "397599",
    "end": "405000"
  },
  {
    "text": "same or not so we we need ideally page aligned page Pages uh next page has to",
    "start": "405000",
    "end": "410720"
  },
  {
    "text": "be mostly static because it takes some time till these pages are actually found so if the page changes in the victim VMS",
    "start": "410720",
    "end": "417360"
  },
  {
    "text": "memory then this sharing will just not happen so IDE is read only in the victim BM and we need to know that it exists so",
    "start": "417360",
    "end": "424879"
  },
  {
    "text": "it needs to tell us something about the address space layout or about the",
    "start": "424879",
    "end": "429960"
  },
  {
    "text": "randomized page address so ideally uh we have all these uh criterias met plus",
    "start": "429960",
    "end": "436440"
  },
  {
    "text": "this page should contain the randomized Base address of of an executable image so that's the best case or uh what would",
    "start": "436440",
    "end": "443360"
  },
  {
    "text": "also work is if that page has values that are um based or are derived",
    "start": "443360",
    "end": "449720"
  },
  {
    "text": "directly from the Base address so the overall idea is actually to identify pages that we can somehow construct and",
    "start": "449720",
    "end": "457759"
  },
  {
    "text": "that have the entropy of the of the address Bas layout randomization scheme so uh the attacker should be able to",
    "start": "457759",
    "end": "463879"
  },
  {
    "text": "construct such a page except for the entropy bits of aslr and in that case for a dll in Windows for example 64bit",
    "start": "463879",
    "end": "471319"
  },
  {
    "text": "it would have been 19 bits of entropy now when we uh find these pages",
    "start": "471319",
    "end": "477319"
  },
  {
    "text": "and if we can show that this page exists in a collocated VM we can actually infer",
    "start": "477319",
    "end": "482560"
  },
  {
    "text": "the The randomized Base address and this is what we were looking for so it looks like that it's maybe",
    "start": "482560",
    "end": "488840"
  },
  {
    "text": "difficult to find in the beginning but it was quite interesting so uh when we were looking at at these Pages or when",
    "start": "488840",
    "end": "495680"
  },
  {
    "text": "we were trying to identify them we'll actually if you look at the first page of every executable image so a dll or an",
    "start": "495680",
    "end": "502840"
  },
  {
    "text": "executable in in Windows uh on the on this it looks like here on the on the",
    "start": "502840",
    "end": "508080"
  },
  {
    "text": "left so we have a portable executable file that has a Header information and there is a very interesting field I call",
    "start": "508080",
    "end": "514080"
  },
  {
    "text": "the image based field that is that has just a certain value on disk but as soon as this um portable executable file gets",
    "start": "514080",
    "end": "520560"
  },
  {
    "text": "mapped into memory so this happens with DLS and executables the image base field will be adapted and it will then contain",
    "start": "520560",
    "end": "527560"
  },
  {
    "text": "the runtime randomized Base address of that dll or executable so this first",
    "start": "527560",
    "end": "532640"
  },
  {
    "text": "page of every portable executable image actually fulfills our criteria so we were very lucky here so we we just found",
    "start": "532640",
    "end": "539440"
  },
  {
    "text": "found it by looking at the first page and uh uh so we can reconstruct that page except for these bits of entropy",
    "start": "539440",
    "end": "545839"
  },
  {
    "text": "for the randomized Base address now we also found these pages on",
    "start": "545839",
    "end": "551640"
  },
  {
    "text": "64-bit Linux it's a bit more complicated there it's not that apparent but if you're interested in in just come to us",
    "start": "551640",
    "end": "557440"
  },
  {
    "text": "later and and talk to us or write Us in email okay so still one problem remains",
    "start": "557440",
    "end": "563480"
  },
  {
    "text": "so the attacker still has to actually guess that correct value and the problem of course is we have 19 bits of entropy",
    "start": "563480",
    "end": "570519"
  },
  {
    "text": "so there are two to the power of 19 potential base addresses for a dll in 64-bit Windows which in the end are more",
    "start": "570519",
    "end": "577560"
  },
  {
    "text": "than half a million guesses that the attacker would actually have to guess so one guess requires one page at a time",
    "start": "577560",
    "end": "584079"
  },
  {
    "text": "and if the attacker will do that one after each other well the attack is not that feasible then but there is a very",
    "start": "584079",
    "end": "591200"
  },
  {
    "text": "um common offensive security concept right so if it doesn't work you're",
    "start": "591200",
    "end": "597079"
  },
  {
    "text": "probably just not using enough so the idea here is to actually use all the memory that an attacker VM has to do",
    "start": "597079",
    "end": "604839"
  },
  {
    "text": "that Sim simultaneously so in the end uh we implemented a Brute Force attack on",
    "start": "604839",
    "end": "610640"
  },
  {
    "text": "these pages so the attacker VM uses all the memory that he has by guessing all",
    "start": "610640",
    "end": "615680"
  },
  {
    "text": "the potential base addresses at once and in the case of 64-bit Windows that's not",
    "start": "615680",
    "end": "621480"
  },
  {
    "text": "a problem because there are two to the power of 19 guesses times one page uh",
    "start": "621480",
    "end": "627240"
  },
  {
    "text": "which is 2 GB of memory so if the Tex VM has 2 GB of memory the attacker can do that in one go so the attack presented",
    "start": "627240",
    "end": "635240"
  },
  {
    "text": "in the end is a Brute Force address over that memory application site channel so we allocate all these first pages of DLS",
    "start": "635240",
    "end": "643399"
  },
  {
    "text": "for example for particular DL we uh put all the guesses in there for the",
    "start": "643399",
    "end": "648440"
  },
  {
    "text": "specific uh Base address and then we just try to detect it and at the end",
    "start": "648440",
    "end": "654480"
  },
  {
    "text": "you'll find the right Base address by detecting which one of these were was actually Shar or",
    "start": "654480",
    "end": "660240"
  },
  {
    "text": "not so we solved the challenge of the page contents now the question is of",
    "start": "660240",
    "end": "665560"
  },
  {
    "text": "course how long should the attacker or the exploit weight now this depends of",
    "start": "665560",
    "end": "670760"
  },
  {
    "text": "course of the on the memory duplication scheme and also on the memory duplication configuration so the memory",
    "start": "670760",
    "end": "676959"
  },
  {
    "text": "application implementation will work differently on on different implementations so we didn't want to",
    "start": "676959",
    "end": "682040"
  },
  {
    "text": "actually assume a certain implementation so this also varies in the end on the",
    "start": "682040",
    "end": "687200"
  },
  {
    "text": "amount of memory that is actually used so if you have like 2 VMS with 2 GB each",
    "start": "687200",
    "end": "692440"
  },
  {
    "text": "and compared to 4 VM with 2 GB each it takes of course more time till the memory the application scheme was able",
    "start": "692440",
    "end": "698440"
  },
  {
    "text": "to compare all these Pages pages to each other and in the end as an attacker we have to assume the worst case so we have",
    "start": "698440",
    "end": "704320"
  },
  {
    "text": "to assume that the page or that we guess that we construct will be maybe compared",
    "start": "704320",
    "end": "709639"
  },
  {
    "text": "to the right page right at the end so depending on how much memory is used this might take longer so there's also",
    "start": "709639",
    "end": "715519"
  },
  {
    "text": "an attacker trade-off here of course so if the attacker Waits too little the attack will just not work because the",
    "start": "715519",
    "end": "720720"
  },
  {
    "text": "page will not be uh the gas will not be merged and if the attacker waits for too long then uh the overall attack time",
    "start": "720720",
    "end": "726720"
  },
  {
    "text": "will increase so there is this trade-off that the attacker has to balance and what we um tried or what we implemented",
    "start": "726720",
    "end": "734440"
  },
  {
    "text": "in our proof of concept is an Adaptive sleep time detection algorithm so what",
    "start": "734440",
    "end": "740440"
  },
  {
    "text": "we do is we basically create a random buffer of a lot of pages we then copy",
    "start": "740440",
    "end": "745800"
  },
  {
    "text": "every second page of the first half of the buffer to the second half of the buffer so this creates the following",
    "start": "745800",
    "end": "752600"
  },
  {
    "text": "situation as we see on the right uh so there are now a lot of pages that are",
    "start": "752600",
    "end": "758240"
  },
  {
    "text": "pairwise U equal so they have the same content so we create a lot of potential merging opportunities for the memory D",
    "start": "758240",
    "end": "765160"
  },
  {
    "text": "application scheme and then we just wait a certain amount of time so it's adaptive so we",
    "start": "765160",
    "end": "770880"
  },
  {
    "text": "wait for example 10 minutes and then as soon as these 10 minutes are gone we start writing to all these pages and we",
    "start": "770880",
    "end": "777399"
  },
  {
    "text": "try to detect which of these pages might potentially be be merged and then we get a detection rate and depending on that",
    "start": "777399",
    "end": "784920"
  },
  {
    "text": "detection rate uh we either rerun that again with a higher test time or we take",
    "start": "784920",
    "end": "791160"
  },
  {
    "text": "that uh test time and say that's a good estimate for the sleep time so actually more specifically what we do is if the",
    "start": "791160",
    "end": "797680"
  },
  {
    "text": "detection rate is more than 95% we just return the last tested weight time times",
    "start": "797680",
    "end": "803279"
  },
  {
    "text": "1.2 just to have some additional margin and if the detection rate is less than 50% we double it and if it's something",
    "start": "803279",
    "end": "809160"
  },
  {
    "text": "in between uh we uh multiply by one over the detection rate so it GES gives us",
    "start": "809160",
    "end": "814519"
  },
  {
    "text": "better estimates for the next test time to test and only if it's over 95% we",
    "start": "814519",
    "end": "820760"
  },
  {
    "text": "actually return that test time and use that in the in the next phases of the attack so we found now the page contexts",
    "start": "820760",
    "end": "827920"
  },
  {
    "text": "that are interesting for us to break aslr we know now how long the attacker has to wait for actually for the memory",
    "start": "827920",
    "end": "834839"
  },
  {
    "text": "application scheme to to find these merging opportunities so the next thing is uh well how do we actually detect if",
    "start": "834839",
    "end": "842240"
  },
  {
    "text": "one of the pages is merged or was merged or not and uh what we do is always the",
    "start": "842240",
    "end": "848440"
  },
  {
    "text": "following so we have uh three pages that we allocate adjacent to each other and",
    "start": "848440",
    "end": "855839"
  },
  {
    "text": "we always assume that we're going to try to detect if the page in the middle is shared or not so we can assume because",
    "start": "855839",
    "end": "861480"
  },
  {
    "text": "we can construct that buffer that the first page and the third page are actually not not shared by putting some",
    "start": "861480",
    "end": "868079"
  },
  {
    "text": "random values in it we then start wait the wait time that we detected and then we start to write to",
    "start": "868079",
    "end": "873199"
  },
  {
    "text": "this page so you write to the first bite of the first page the first bite of second page and to the first bite of the",
    "start": "873199",
    "end": "879399"
  },
  {
    "text": "third page and then we we uh measure right time and depending on these values",
    "start": "879399",
    "end": "885199"
  },
  {
    "text": "we can then actually deduce if that page might have been potentially merged or",
    "start": "885199",
    "end": "890480"
  },
  {
    "text": "not and for that we use a set of euristic so one ristic that so the first",
    "start": "890480",
    "end": "895759"
  },
  {
    "text": "one on the left has to be the case all the time so we check for that all the time so right time of T2 has to be at",
    "start": "895759",
    "end": "904399"
  },
  {
    "text": "least two times the average of the adjacent right times so it took us some time to find out what kind of threshold",
    "start": "904399",
    "end": "911120"
  },
  {
    "text": "is good so we we went for a rather U conservative approach so we took two as",
    "start": "911120",
    "end": "916920"
  },
  {
    "text": "as the threshold Factor here everything else might generate some false negatives",
    "start": "916920",
    "end": "922040"
  },
  {
    "text": "so uh that's why we we took two and then we uh end that with either the uh",
    "start": "922040",
    "end": "929920"
  },
  {
    "text": "second condition so T1 or T and T3 have to be less than a th Cycles or the T1",
    "start": "929920",
    "end": "938639"
  },
  {
    "text": "and T3 should not diverge too much from each other and this was just by observing a lot of runs we were just",
    "start": "938639",
    "end": "945160"
  },
  {
    "text": "able to see that uh usually T1 and T3 start to diverge from each other very uh",
    "start": "945160",
    "end": "950800"
  },
  {
    "text": "quickly when noise happens so in the end these are just juristic we use them and",
    "start": "950800",
    "end": "956839"
  },
  {
    "text": "they worked for example on a laptop setup and a server setup that we then where we evaluated our Pock that we will",
    "start": "956839",
    "end": "963000"
  },
  {
    "text": "show you later so it seems that these juristic work quite well but of course an attacker can invest also more time to",
    "start": "963000",
    "end": "968959"
  },
  {
    "text": "implement better ristics okay still one of the problems is that there might be false positives",
    "start": "968959",
    "end": "975800"
  },
  {
    "text": "and uh if a false positives actually happens uh we'll just test it again so we have a round Space Systems that I",
    "start": "975800",
    "end": "982120"
  },
  {
    "text": "will show you right now and there might also be false negatives and in that case it's not that critical so that didn't",
    "start": "982120",
    "end": "987959"
  },
  {
    "text": "happen that often but if it happens the attacker can just rerun the attack so now for the false positives of course we",
    "start": "987959",
    "end": "994160"
  },
  {
    "text": "don't want to have them uh so the idea here is to do multiple rounds till the noise cancels out so what we do is we",
    "start": "994160",
    "end": "1003199"
  },
  {
    "text": "allocate these gases so in that case guess one till guess n and then we try",
    "start": "1003199",
    "end": "1008600"
  },
  {
    "text": "to detect them and in the set that comes out we'll have some false positives and the correct guesses and we just take",
    "start": "1008600",
    "end": "1016279"
  },
  {
    "text": "these again and do it another time time now we have one false positive and in",
    "start": "1016279",
    "end": "1021959"
  },
  {
    "text": "the end we find the right solution and we can actually do that and assume that that works because the probability that",
    "start": "1021959",
    "end": "1029400"
  },
  {
    "text": "the exact same guess will be affected by Noise two times or three times after",
    "start": "1029400",
    "end": "1034720"
  },
  {
    "text": "each other is quite low so noise happens just I mean it doesn't affect specific",
    "start": "1034720",
    "end": "1039959"
  },
  {
    "text": "guesses it just happens randomly and through that we can eliminate the",
    "start": "1039959",
    "end": "1045880"
  },
  {
    "text": "noise now what we implemented is a uh actually we have two types of rounds so",
    "start": "1045880",
    "end": "1052080"
  },
  {
    "text": "the first round is a little bit different than all the subsequent rounds in the first round what we do is we have",
    "start": "1052080",
    "end": "1058520"
  },
  {
    "text": "implemented a so-called filtering round so in the beginning if you have a lot of gesses the problem is that it will take",
    "start": "1058520",
    "end": "1064480"
  },
  {
    "text": "a lot of memory so assuming that the attacker has maybe just 2 GB of memory",
    "start": "1064480",
    "end": "1070080"
  },
  {
    "text": "what we do in the first round that is called the filtering round we allocate all the guesses adjacent to each other",
    "start": "1070080",
    "end": "1077240"
  },
  {
    "text": "so we just assume that the probab ility that two adjacent uh base addresses are used in a collocated VM is is low and",
    "start": "1077240",
    "end": "1085080"
  },
  {
    "text": "then we try to detect it with with this moving three Windows uh test and then",
    "start": "1085080",
    "end": "1090559"
  },
  {
    "text": "for every other round we actually can assume that we have more memory so we can invest as an attack more memory per",
    "start": "1090559",
    "end": "1098039"
  },
  {
    "text": "candidate and in that case we allocate random pages in between this makes the",
    "start": "1098039",
    "end": "1103720"
  },
  {
    "text": "the attack just more reliable but we have to pay with with memory for it",
    "start": "1103720",
    "end": "1110600"
  },
  {
    "text": "okay thank you uh so does it work I mean uh the idea of the attack makes sense but there",
    "start": "1110600",
    "end": "1117280"
  },
  {
    "text": "are lots of uh uh things that we had to take care of like noise there are false positives false negatives so we're",
    "start": "1117280",
    "end": "1123360"
  },
  {
    "text": "asking ourselves the question of does it actually work so and um to actually",
    "start": "1123360",
    "end": "1128600"
  },
  {
    "text": "answer that we went on and implemented the proof of concept that we called cane and uh we evaluated the attack using",
    "start": "1128600",
    "end": "1135679"
  },
  {
    "text": "cane uh to to to see whether it actually works and how well it works in practice",
    "start": "1135679",
    "end": "1140960"
  },
  {
    "text": "so remember that uh uh there are a number of requirements that that uh that uh we assume uh for can to work the",
    "start": "1140960",
    "end": "1147360"
  },
  {
    "text": "first one is that the side Channel actually exists so that we have a memory duplication engine running all the time",
    "start": "1147360",
    "end": "1154200"
  },
  {
    "text": "and this happens to be the case uh in most cloud provider that we looked at especially the ones that run for example",
    "start": "1154200",
    "end": "1159720"
  },
  {
    "text": "KVM and um the other assumption is that we have a page uh that we can actually",
    "start": "1159720",
    "end": "1165559"
  },
  {
    "text": "use uh for uh breaking the add space layout randomization Antonio showed you that we managed to",
    "start": "1165559",
    "end": "1171280"
  },
  {
    "text": "find these Pages for Windows and and Linux operating systems you can also use other Pages for leaking information like",
    "start": "1171280",
    "end": "1178039"
  },
  {
    "text": "for example antivirus uh uh versions or uh fingerprinting operating systems for",
    "start": "1178039",
    "end": "1183120"
  },
  {
    "text": "example but uh the interesting bit here is ADD space layout randomization which we try to break and also the uh final",
    "start": "1183120",
    "end": "1189320"
  },
  {
    "text": "assumption is that the entropy that we're trying to leak here is within brute forceable L range so for example",
    "start": "1189320",
    "end": "1194360"
  },
  {
    "text": "uh given uh an amount of memory that the attacker has for example 4 GB we can actually root force all these uh all",
    "start": "1194360",
    "end": "1201360"
  },
  {
    "text": "these um uh bits that we want to leak so just briefly uh let's go over the can",
    "start": "1201360",
    "end": "1207760"
  },
  {
    "text": "attack phases again so uh we have in the first phase of the attack uh we actually try to figure out how much we need to uh",
    "start": "1207760",
    "end": "1214360"
  },
  {
    "text": "wait in each uh round of the attack for pages to get merged and uh this uh this",
    "start": "1214360",
    "end": "1219400"
  },
  {
    "text": "can be like uh depending on the configuration this can be uh uh anything so we have an Adaptive algorithm that",
    "start": "1219400",
    "end": "1225159"
  },
  {
    "text": "tries to figure out what time we need to wait and then in the second round we do a filtering pass where we have a huge",
    "start": "1225159",
    "end": "1231360"
  },
  {
    "text": "number of pages like half a million Pages if for example we have 19 bits of entropy and our goal here is to reduce",
    "start": "1231360",
    "end": "1236960"
  },
  {
    "text": "the number of uh cases that we need to check further in this case we might have some uh some false uh some uh false",
    "start": "1236960",
    "end": "1242919"
  },
  {
    "text": "negatives but uh but that's fine we can always run the attack again but in our experience that didn't happen that that",
    "start": "1242919",
    "end": "1248080"
  },
  {
    "text": "much that often and finally in the in the last phase of the attack we do",
    "start": "1248080",
    "end": "1253159"
  },
  {
    "text": "verifications of uh of the candidates that we have found so we keep doing that we keep repeating that uh that",
    "start": "1253159",
    "end": "1258880"
  },
  {
    "text": "verification T still we manage to reduce the set of the attacks either to one or when it doesn't change and this could",
    "start": "1258880",
    "end": "1265240"
  },
  {
    "text": "take up to end rounds and after that we have the uh the add space layout of the neighboring VMS um so for the evaluation",
    "start": "1265240",
    "end": "1273360"
  },
  {
    "text": "setup uh we used the blade server so uh this is what you can typically found uh find if you go to any uh data center",
    "start": "1273360",
    "end": "1280960"
  },
  {
    "text": "this is usually like you you find like a rack of these servers and they're running your VMS and uh This Server",
    "start": "1280960",
    "end": "1286120"
  },
  {
    "text": "specifically has uh two CPUs uh and uh and it has 32 GB of RAM so very common",
    "start": "1286120",
    "end": "1292720"
  },
  {
    "text": "uh in in cloud data centers today and we use a a recent version of uh uh Ubuntu",
    "start": "1292720",
    "end": "1298720"
  },
  {
    "text": "and KVM for for uh uh for seeing for evaluating the attack so for the uh for",
    "start": "1298720",
    "end": "1304840"
  },
  {
    "text": "the VMS itself we used one attacker VM that is that we control and then we assume up to uh six other uh victim VMS",
    "start": "1304840",
    "end": "1312600"
  },
  {
    "text": "that we try to to attack and uh for the configuration of these VMS we used uh four cores and and four gabt of memory",
    "start": "1312600",
    "end": "1320880"
  },
  {
    "text": "so just to uh just to give you an idea of how the memory duplication on KVM works I briefly now discuss uh uh its",
    "start": "1320880",
    "end": "1328720"
  },
  {
    "text": "duplication engine that is uh called KSM so uh so you have a number of files uh",
    "start": "1328720",
    "end": "1334480"
  },
  {
    "text": "in those locations that you can control the uh the the configuration of the memory D duplication so the first one",
    "start": "1334480",
    "end": "1340559"
  },
  {
    "text": "tells you whether the uh the duplication engine is on or not uh so if you have a",
    "start": "1340559",
    "end": "1346080"
  },
  {
    "text": "Linux system most of the times it's actually on and uh there are two other parameters that that uh that affect uh",
    "start": "1346080",
    "end": "1353559"
  },
  {
    "text": "uh um how fast your pages get the duplicated so the way KSM works is that it goes to sleep for a while then it",
    "start": "1353559",
    "end": "1360080"
  },
  {
    "text": "comes online and then it checks for a number of pages then it goes back to sleep and it keeps doing that till it",
    "start": "1360080",
    "end": "1365360"
  },
  {
    "text": "managed and it keeps doing it o over and over over the registered memory to find duplicates and uh so uh and these two uh",
    "start": "1365360",
    "end": "1372960"
  },
  {
    "text": "parameters like the amount of uh time it goes to sleep and the number of pages that uh it scans uh the how many pages",
    "start": "1372960",
    "end": "1379799"
  },
  {
    "text": "are scanned per second so if you do the if you do the math you can actually find out that it's about 500 pages per second",
    "start": "1379799",
    "end": "1385520"
  },
  {
    "text": "about 2 megabytes and this should already give you an idea of how the depending on the amount of memory that",
    "start": "1385520",
    "end": "1390720"
  },
  {
    "text": "you have how much you need to wait for the pages to get merged uh for our Target uh uh VM uh we we are attacking a",
    "start": "1390720",
    "end": "1398480"
  },
  {
    "text": "64-bit uh Windows U uh Windows S edition and um and uh the these uh these new",
    "start": "1398480",
    "end": "1406559"
  },
  {
    "text": "recent versions of Windows uh enjoy from high high high entropy aslr for stack",
    "start": "1406559",
    "end": "1411720"
  },
  {
    "text": "and Heap uh and for uh executables and dealers there are like uh 19 and 17 bits",
    "start": "1411720",
    "end": "1417240"
  },
  {
    "text": "of uh entropy that you have in the address of uh in the Base address of these executables or DLS uh now uh these",
    "start": "1417240",
    "end": "1425200"
  },
  {
    "text": "uh these um uh uh addresses this layout is defined at boot time so once you have managed we have managed to leak that you",
    "start": "1425200",
    "end": "1432159"
  },
  {
    "text": "can actually uh do the the code use attack on any of the systems that use these these DLS so there are some d like",
    "start": "1432159",
    "end": "1438760"
  },
  {
    "text": "anti DL that also don't relocate so once you have managed to leak that address is going to remain the same like that and",
    "start": "1438760",
    "end": "1444400"
  },
  {
    "text": "these are the actual uh uh the the the the anti-d is the actual uh Target that we are attacking in the evaluation of uh",
    "start": "1444400",
    "end": "1451720"
  },
  {
    "text": "king um now so for our first attack here uh we have one victim VM and we have one",
    "start": "1451720",
    "end": "1457840"
  },
  {
    "text": "attacker VM you can notice that uh on the uh Y axis we have the entropy bits so in the beginning it's 19 bits it's",
    "start": "1457840",
    "end": "1464360"
  },
  {
    "text": "for the ntid uh and on the uh x-axis you can see the ATT time as it progresses",
    "start": "1464360",
    "end": "1469559"
  },
  {
    "text": "through time uh so uh as we mentioned earlier there are about half a million",
    "start": "1469559",
    "end": "1474640"
  },
  {
    "text": "of potential addresses and uh once we started the attack uh so uh Kan went",
    "start": "1474640",
    "end": "1480279"
  },
  {
    "text": "through the detecting the the amount of time that he needs to sleep this is the default configuration so we we noticed",
    "start": "1480279",
    "end": "1486880"
  },
  {
    "text": "that with one attacker and one victim we need to wait about 96 Minutes to for the",
    "start": "1486880",
    "end": "1492960"
  },
  {
    "text": "uh for the pages to get merged and you can notice that after the first round of attack uh we manag to already reduce the",
    "start": "1492960",
    "end": "1500080"
  },
  {
    "text": "number of candidate pages from half a million to only uh 6,000 about 6,500 and this significantly reduces the",
    "start": "1500080",
    "end": "1507240"
  },
  {
    "text": "entropy and uh after the uh second second round of the attack we managed to reduce the candus to to to B five and uh",
    "start": "1507240",
    "end": "1515840"
  },
  {
    "text": "finally in the last round of the attack we um we have only a single kind that is actually the uh the add space layout of",
    "start": "1515840",
    "end": "1522399"
  },
  {
    "text": "the the neighboring VM uh you can note that the entire attack time took less than 5 hours so if for example now you",
    "start": "1522399",
    "end": "1529200"
  },
  {
    "text": "have a VM that is based uh that is using KVM in the cloud and you have another one essentially you can leak its uh its",
    "start": "1529200",
    "end": "1535880"
  },
  {
    "text": "other space layout in less than five hours uh so the first thing that came",
    "start": "1535880",
    "end": "1541080"
  },
  {
    "text": "into our mind for defending against this attack was uh whether by in increasing",
    "start": "1541080",
    "end": "1546200"
  },
  {
    "text": "the uh actual sleep time we can actually fix the issue so we we did an experiment",
    "start": "1546200",
    "end": "1551480"
  },
  {
    "text": "just to verify that and uh the result is that if you increase the uh the sleeping",
    "start": "1551480",
    "end": "1556520"
  },
  {
    "text": "time it doesn't actually solve attack it it will make the attack take longer but it still doesn't solve the issue so just",
    "start": "1556520",
    "end": "1562960"
  },
  {
    "text": "changing the sleep time doesn't completely solve the issue also note that if you increase it too much then you are completely losing the benefits",
    "start": "1562960",
    "end": "1569600"
  },
  {
    "text": "of memory the duplication so the idea is that you can actually MH pages that are that are similar uh during the runtime",
    "start": "1569600",
    "end": "1575080"
  },
  {
    "text": "of your VMS um so you might come back and and tell us that this is a lab environment",
    "start": "1575080",
    "end": "1581960"
  },
  {
    "text": "test this actually doesn't work in real world where you have lots of noise and lots of requests coming to your VMS so",
    "start": "1581960",
    "end": "1587120"
  },
  {
    "text": "we did another experiment uh to actually verify that so here you can see an example of a a web server that is",
    "start": "1587120",
    "end": "1594480"
  },
  {
    "text": "serving a number of requests so we uh we change the number of request that is sent to the server so the first uh uh",
    "start": "1594480",
    "end": "1601559"
  },
  {
    "text": "version we sent only one request so that uh uh exemplifies a very simple light loaded server the other one 10 request",
    "start": "1601559",
    "end": "1608919"
  },
  {
    "text": "per second which is like an average loaded server and then in the last one maximum number of requests uh uh per",
    "start": "1608919",
    "end": "1615000"
  },
  {
    "text": "second is the uh uh that would signify a very heavily load loed server and you can see that in all these cases uh Ken",
    "start": "1615000",
    "end": "1621720"
  },
  {
    "text": "can leak the alpace layout and it doesn't really matter how much load we put on the server uh so finally uh we uh",
    "start": "1621720",
    "end": "1629159"
  },
  {
    "text": "we uh we uh did uh we executed the can attack against multiple uh VMS uh and we",
    "start": "1629159",
    "end": "1635600"
  },
  {
    "text": "saw whether it can actually leak all these other space layouts of all these VMS uh and um so uh I specifically like",
    "start": "1635600",
    "end": "1642480"
  },
  {
    "text": "this graph because it shows a number of things so the first thing that you can notice of all these different configuration of goes from one victim VM",
    "start": "1642480",
    "end": "1649320"
  },
  {
    "text": "to six V victim VM with different colors the first dot uh starts to change depending on the number of victim VMS",
    "start": "1649320",
    "end": "1655480"
  },
  {
    "text": "that you have this shows our adaptive sleep time uh adaptive sleep time detection in action so depending on the",
    "start": "1655480",
    "end": "1661200"
  },
  {
    "text": "amount of memory that is registered it changes uh the the the amount of time that we need to sleep and we can",
    "start": "1661200",
    "end": "1667240"
  },
  {
    "text": "successfully and dynamically detect this and uh at the end we also depending on",
    "start": "1667240",
    "end": "1672399"
  },
  {
    "text": "the number of kind this uh since we are not sure whether it's a false positive or whether it's actually a a layout that",
    "start": "1672399",
    "end": "1677919"
  },
  {
    "text": "we discovered we need we we need to wait uh we need to do another second pass to verify that this this set of Kinders",
    "start": "1677919",
    "end": "1683840"
  },
  {
    "text": "doesn't change so so after uh after doing these two passes we successfully",
    "start": "1683840",
    "end": "1689039"
  },
  {
    "text": "could uh detect all the layouts of the victim VMS okay now that uh uh yeah",
    "start": "1689039",
    "end": "1694600"
  },
  {
    "text": "you've seen the how cane actually works uh we're going to show you a demo of uh",
    "start": "1694600",
    "end": "1700080"
  },
  {
    "text": "cane in action so now I pass over to Antonio thanks",
    "start": "1700080",
    "end": "1706440"
  },
  {
    "text": "so uh we prepared a little video demo so in that case what we're going to look at is um we're going to look at the single",
    "start": "1714120",
    "end": "1719919"
  },
  {
    "text": "attacker single victim scenario just start it",
    "start": "1719919",
    "end": "1727799"
  },
  {
    "text": "so what you see now is actually the hypervisor or the virtual machine monitor system it's a nobuntu Linux",
    "start": "1741360",
    "end": "1748360"
  },
  {
    "text": "system and uh on top we just show you some parameters so the KVM is running",
    "start": "1748360",
    "end": "1754399"
  },
  {
    "text": "with KSM enabled so that's why run is a one that's the default configuration what we change is the Sleep MX",
    "start": "1754399",
    "end": "1761279"
  },
  {
    "text": "configuration we put it to 20 milliseconds so we don't have to wait 5 hours so the attack will just take longer but but it works now we're going",
    "start": "1761279",
    "end": "1768480"
  },
  {
    "text": "to start the the VM so here on the right we'll see the victim",
    "start": "1768480",
    "end": "1774440"
  },
  {
    "text": "VM this is the Windows",
    "start": "1774440",
    "end": "1778320"
  },
  {
    "text": "server and on the left then the attacker BM we use the Linux system also Ubuntu",
    "start": "1780000",
    "end": "1788240"
  },
  {
    "text": "system yes and the attack actually just need you needs user privileges I mean could also be just uh the ex the",
    "start": "1788360",
    "end": "1796120"
  },
  {
    "text": "attacker just needs to be able to access the system in the sense that he can execute binary or maybe even something",
    "start": "1796120",
    "end": "1801799"
  },
  {
    "text": "else so ideally he needs to be in control of memory uh or memory allocations uh so don't get irritated so",
    "start": "1801799",
    "end": "1809799"
  },
  {
    "text": "the first version of the tech was called vmap that's why the tool is called vmap we implemented certain switches to",
    "start": "1809799",
    "end": "1815720"
  },
  {
    "text": "actually play a little bit around with it so we were able to uh yeah explicitly put the stay time the wa time",
    "start": "1815720",
    "end": "1823200"
  },
  {
    "text": "there for example just to test around so we locked in now on the U victim system and KVM is or KSM is already running now",
    "start": "1823200",
    "end": "1830840"
  },
  {
    "text": "so KSM is already trying to find pages that are equal and tries to merge them",
    "start": "1830840",
    "end": "1836760"
  },
  {
    "text": "so what we're going to do now we're going to start the attack so the first phase is the Sleep Time",
    "start": "1836760",
    "end": "1842960"
  },
  {
    "text": "detection so we tested with 10 minutes we know that 10 minutes is uh is actually suitable here uh but in another",
    "start": "1842960",
    "end": "1849480"
  },
  {
    "text": "setting sleep time detection might take several rounds till it it actually found the right time and now it's it's running",
    "start": "1849480",
    "end": "1855679"
  },
  {
    "text": "so we allocated a lot of pages and uh now we just wait so we just have to wait",
    "start": "1855679",
    "end": "1862600"
  },
  {
    "text": "till these 10 minutes pass so but of course then so don't",
    "start": "1862600",
    "end": "1869360"
  },
  {
    "text": "worry we we fast forward so so sleep time detection is uh after",
    "start": "1869360",
    "end": "1875679"
  },
  {
    "text": "10 minutes uh what happens is the following so we start uh writing to",
    "start": "1875679",
    "end": "1881960"
  },
  {
    "text": "these pages and try to detect the the rate of merged pages so as you see uh we",
    "start": "1881960",
    "end": "1887919"
  },
  {
    "text": "we already were able to see that more than 99% of the pages got merged so we then just take take these 10 minutes and",
    "start": "1887919",
    "end": "1893639"
  },
  {
    "text": "say 12 minutes is a good estimate for the waight time so next we start with",
    "start": "1893639",
    "end": "1899039"
  },
  {
    "text": "the first round of attack so the filtering round where we allocate we map this first anti L page and adapt all the",
    "start": "1899039",
    "end": "1905320"
  },
  {
    "text": "base addresses and after this 12",
    "start": "1905320",
    "end": "1910240"
  },
  {
    "text": "minutes so we'll see that we were already able to reduce the number number",
    "start": "1911720",
    "end": "1918039"
  },
  {
    "text": "of candidates to 1,1 165 candidates from more than half a million so now entropy",
    "start": "1918039",
    "end": "1925399"
  },
  {
    "text": "is is reduced significantly of course so techer could al already use these values if if he can if he has multiple try for",
    "start": "1925399",
    "end": "1931559"
  },
  {
    "text": "the exploit for example uh now we verify them so we do another 12 minutes",
    "start": "1931559",
    "end": "1940440"
  },
  {
    "text": "round and after these 12 minutes what we see is that",
    "start": "1941720",
    "end": "1949320"
  },
  {
    "text": "the attack succeeded so there is one last hit that's this Base address so",
    "start": "1949320",
    "end": "1955000"
  },
  {
    "text": "this should be the Base address of antd in this VM in the victim",
    "start": "1955000",
    "end": "1960679"
  },
  {
    "text": "VM so it's 7fb 59f 000000 0 so we're",
    "start": "1960679",
    "end": "1966639"
  },
  {
    "text": "going to verify this by looking at the running",
    "start": "1966639",
    "end": "1970720"
  },
  {
    "text": "process it somehow feels like a a card magic trick so choose a card and we show",
    "start": "1973200",
    "end": "1978799"
  },
  {
    "text": "you which one it is so here is the ntdll and on the left",
    "start": "1978799",
    "end": "1984960"
  },
  {
    "text": "you see the address which is 7 FB E5 9",
    "start": "1984960",
    "end": "1990880"
  },
  {
    "text": "f0000 so the attack was successful and we were able to leak The Base address of ntid L over VMS",
    "start": "1990880",
    "end": "2000320"
  },
  {
    "text": "okay so the question now of course is I mean what does the attack really G gain it's not like a remote code execution",
    "start": "2008760",
    "end": "2015480"
  },
  {
    "text": "attack so we are not able to execute code right so the techer still needs something and it's important to",
    "start": "2015480",
    "end": "2021279"
  },
  {
    "text": "understand for for the for for the impact of that of that issue so what an attacker essentially gains is he can der",
    "start": "2021279",
    "end": "2028600"
  },
  {
    "text": "randomize the code layout by getting these base addresses and if he knows",
    "start": "2028600",
    "end": "2034760"
  },
  {
    "text": "there memory corruption vulnerability he can instruct an expert that previously",
    "start": "2034760",
    "end": "2039919"
  },
  {
    "text": "might not have been possible to to exploit or so against one single victim",
    "start": "2039919",
    "end": "2045200"
  },
  {
    "text": "VM it's quite easy right so you have uh one Base address and then you can just use it but of course if multiple victim",
    "start": "2045200",
    "end": "2052200"
  },
  {
    "text": "VMS run with the exact same Windows version for example you'll just get a list of Base addresses of",
    "start": "2052200",
    "end": "2058358"
  },
  {
    "text": "ntid and then of course there there might be the possibility that the attacker can just try all of them so it",
    "start": "2058359",
    "end": "2064919"
  },
  {
    "text": "depends if the vulnerable process gets restarted and then it will work we argue",
    "start": "2064919",
    "end": "2070638"
  },
  {
    "text": "that most probably the number of tries that that you that you need is still below a certain thresold so that it",
    "start": "2070639",
    "end": "2076320"
  },
  {
    "text": "should not be too noisy so the process should not be not crash too often uh but of course this might not be uh possible",
    "start": "2076320",
    "end": "2082960"
  },
  {
    "text": "for certain attacks so what we we thought a little bit about uh what an attacker could do in these cases so we",
    "start": "2082960",
    "end": "2090520"
  },
  {
    "text": "um we have certain idea so if you're interested you can also come and talk to us so the idea in the end is there are also opportunities or possibilities to",
    "start": "2090520",
    "end": "2097118"
  },
  {
    "text": "map this Base address to a specific vulnerable process and think about that",
    "start": "2097119",
    "end": "2102280"
  },
  {
    "text": "so if there are pages that used That randomized Base address that somehow",
    "start": "2102280",
    "end": "2107480"
  },
  {
    "text": "might uh be specific to a specific vulnerable process the techer can now construct these pages and then",
    "start": "2107480",
    "end": "2114839"
  },
  {
    "text": "infer that that page exists and by linking that to a specific process and",
    "start": "2114839",
    "end": "2120400"
  },
  {
    "text": "maybe even to an IP address and so forth uh it might be possible that the attacker can then map That Base address",
    "start": "2120400",
    "end": "2126320"
  },
  {
    "text": "to that specific V um so but still what will the attacker",
    "start": "2126320",
    "end": "2133480"
  },
  {
    "text": "really really get I mean in the end it's just the Base address so what we assumed in the in the beginning is that the",
    "start": "2133480",
    "end": "2139400"
  },
  {
    "text": "attacker can reliably or he knows a vulnerability where he can reliably hijack the instruction pointer and the",
    "start": "2139400",
    "end": "2145680"
  },
  {
    "text": "attacker has at the point of where the vulnerability triggers some control over over maybe some values in the register",
    "start": "2145680",
    "end": "2151400"
  },
  {
    "text": "or over some data and we also assume that for these particular particular vulnerabilities that are interesting um",
    "start": "2151400",
    "end": "2158240"
  },
  {
    "text": "to actually first perform a cane attack in the cloud uh we assume that the server process doesn't have an info leak",
    "start": "2158240",
    "end": "2164839"
  },
  {
    "text": "vulnerability and for Server systems or server processes this somehow makes sense right because it's much more",
    "start": "2164839",
    "end": "2171160"
  },
  {
    "text": "difficult uh to find uh info leak in in server processes then it is maybe in in",
    "start": "2171160",
    "end": "2176680"
  },
  {
    "text": "a process where you in a browser for example where you can construct an info league with a arbitrary right for",
    "start": "2176680",
    "end": "2182040"
  },
  {
    "text": "example under certain circumstances so still do these vulnerabilities really exist I mean does",
    "start": "2182040",
    "end": "2188400"
  },
  {
    "text": "the attack really gain something and we found for example that one so this is a frag article from 2012 where the author",
    "start": "2188400",
    "end": "2196960"
  },
  {
    "text": "uh red puns uh describes uh how he was able to get reliable control over the instruction pointer by exploiting Ms",
    "start": "2196960",
    "end": "2205160"
  },
  {
    "text": "11004 it's a heap buff overflow vulnerability that can be explo can be triggered remotely in IIs and what the",
    "start": "2205160",
    "end": "2212599"
  },
  {
    "text": "what the author actually showed was or said was the vendor in initially said",
    "start": "2212599",
    "end": "2218280"
  },
  {
    "text": "that that that vulnerability is not exploitable at all and uh the author showed that well with enough",
    "start": "2218280",
    "end": "2224680"
  },
  {
    "text": "determination he actually was able to turn that impossible to difficult so it's not yet easy to exploit because in",
    "start": "2224680",
    "end": "2232560"
  },
  {
    "text": "the conclusion what what he actually got was he got control over the instruction pointer but he says well there is still",
    "start": "2232560",
    "end": "2238720"
  },
  {
    "text": "aslr and data execution prevention that need to be subverted and these are",
    "start": "2238720",
    "end": "2243920"
  },
  {
    "text": "exactly the cases where Kane can make the difference so in a cloud environment or in in a virtualized environment where",
    "start": "2243920",
    "end": "2250480"
  },
  {
    "text": "the attacker has control over another VM he can actually exploit these vulnerabilities then reliably because he",
    "start": "2250480",
    "end": "2256480"
  },
  {
    "text": "can break aslr then that is required and and perform the code R",
    "start": "2256480",
    "end": "2263040"
  },
  {
    "text": "attack so is it really an issue in real world environments like car mentioned before we contacted Some Cloud providers",
    "start": "2263040",
    "end": "2270319"
  },
  {
    "text": "and if kbm is used it is actually very likely that KSM so the memory",
    "start": "2270319",
    "end": "2275839"
  },
  {
    "text": "application is enabled and there was one cloud provider that actually disabled it",
    "start": "2275839",
    "end": "2282200"
  },
  {
    "text": "and this was not because of security but because of performance issu so that cloud provider's uh workload was so",
    "start": "2282200",
    "end": "2289400"
  },
  {
    "text": "specific that KSM in the end introduced performance overhead so that's why they disabled it and not because of the site",
    "start": "2289400",
    "end": "2296200"
  },
  {
    "text": "channel so a memory application seems to be used uh in real Cloud environments at",
    "start": "2296200",
    "end": "2302560"
  },
  {
    "text": "least for for KVM and the other thing is that most providers uh I if you look at",
    "start": "2302560",
    "end": "2308000"
  },
  {
    "text": "infrastructure as a cloud services you can still as an attacker rent different kind of VMS with different memory so",
    "start": "2308000",
    "end": "2315240"
  },
  {
    "text": "most of the offers actually offer more than two four gabt of memory so from an attacker point of view attacker could",
    "start": "2315240",
    "end": "2320520"
  },
  {
    "text": "just rent one of these machines and he would have enough memory to actually Mount the attack and the other",
    "start": "2320520",
    "end": "2326000"
  },
  {
    "text": "interesting thing is now I mean if the attacker targets a specific VM uh well",
    "start": "2326000",
    "end": "2331119"
  },
  {
    "text": "that's one case but the other case is maybe the attacker is just interested in in in in looking around and and looking",
    "start": "2331119",
    "end": "2336240"
  },
  {
    "text": "what what is on that uh on the physical system and and most of the time you have a lot of VMS that run so the probability",
    "start": "2336240",
    "end": "2343200"
  },
  {
    "text": "are quite high that then he'll he'll notice that there is one VM with a certain uh vulnerable process that he",
    "start": "2343200",
    "end": "2349720"
  },
  {
    "text": "can then where he can then use cane to actually make that that vulnerability then",
    "start": "2349720",
    "end": "2355160"
  },
  {
    "text": "exploitable so we also looked at at which virtual machine monitor vendors are actually vulnerable um so you see",
    "start": "2355160",
    "end": "2363560"
  },
  {
    "text": "the memory D application implementation or at least how they the vendor it in the in that column uh we also have from",
    "start": "2363560",
    "end": "2371640"
  },
  {
    "text": "search.org that vulnerability node where they try to assess as well which of these vendors are actually affected uh",
    "start": "2371640",
    "end": "2378280"
  },
  {
    "text": "here you have the column uh with what we actually think uh if they're affected or",
    "start": "2378280",
    "end": "2383359"
  },
  {
    "text": "not and the last column is actually if the memory application is enabled by default or not and what you see is if if",
    "start": "2383359",
    "end": "2390480"
  },
  {
    "text": "you use KVM like um like used in Ubuntu or rad KSM is enabled by default we",
    "start": "2390480",
    "end": "2397560"
  },
  {
    "text": "verified that the attack works there so these uh these virtual machine monitors are",
    "start": "2397560",
    "end": "2404000"
  },
  {
    "text": "affected then c.org says that parallels virtualization solution is affected by",
    "start": "2404000",
    "end": "2409520"
  },
  {
    "text": "it as well so we were not able to verify that so I I don't know what they really use in the end um now in the Microsoft",
    "start": "2409520",
    "end": "2416520"
  },
  {
    "text": "world so if you look at hyperv hyperv does not Implement memory d dation uh",
    "start": "2416520",
    "end": "2422520"
  },
  {
    "text": "for for memory pages so naturally hyperv is not affected by it uh so there",
    "start": "2422520",
    "end": "2428200"
  },
  {
    "text": "everything is fine and Zen apparently they're also not doing it but I think we got an email from them stating that they",
    "start": "2428200",
    "end": "2434319"
  },
  {
    "text": "were thinking about implementing this uh so they probably take these results into",
    "start": "2434319",
    "end": "2439640"
  },
  {
    "text": "consideration and for oracles virtual box and and VM so there is Page based",
    "start": "2439640",
    "end": "2445160"
  },
  {
    "text": "memory application there implemented it's called page Fusion in Virtual box and TPS in the VMware world so we think",
    "start": "2445160",
    "end": "2453680"
  },
  {
    "text": "they're probably uh vulnerable if it's enabled so in both of these uh cases",
    "start": "2453680",
    "end": "2459599"
  },
  {
    "text": "memory D application is not enabled by default so with the default configuration you're fine although",
    "start": "2459599",
    "end": "2465640"
  },
  {
    "text": "VMware I think started to disabling it by default one or two years ago so if you have maybe old uh deployments they",
    "start": "2465640",
    "end": "2472599"
  },
  {
    "text": "might still use memory the application so we disclosed the of",
    "start": "2472599",
    "end": "2480480"
  },
  {
    "text": "course and uh the question is I mean is there like a fix and the problem of",
    "start": "2480480",
    "end": "2486640"
  },
  {
    "text": "course is who should actually fix it because it's it's a little bit difficult in the end it's a feature from a v",
    "start": "2486640",
    "end": "2493200"
  },
  {
    "text": "virtual machine monitor vendor point of view so other vulnerabilities typically there are maybe bucks you can fix them",
    "start": "2493200",
    "end": "2499599"
  },
  {
    "text": "software still runs everything is fine right but in that case it's like a feature that they advertise right so",
    "start": "2499599",
    "end": "2505200"
  },
  {
    "text": "people use it maybe because of that feature because it cloud provider can save some memory so it's it's very",
    "start": "2505200",
    "end": "2511440"
  },
  {
    "text": "resource efficient so it's of course not very apparent that it's not that easy to",
    "start": "2511440",
    "end": "2517720"
  },
  {
    "text": "fix from a vendor's point of view because of that because the advertis as a as a feature so we informed of course",
    "start": "2517720",
    "end": "2523680"
  },
  {
    "text": "several v machine monitor vendors that we thought might be affected in the beginning of June uh we got replies from",
    "start": "2523680",
    "end": "2531520"
  },
  {
    "text": "actually everyone but the overall perception from the vmm vendor point of view is it's actually a low severity",
    "start": "2531520",
    "end": "2537560"
  },
  {
    "text": "issue for them they say well it's it's a feature don't use it right if if if you",
    "start": "2537560",
    "end": "2542680"
  },
  {
    "text": "think it's a problem so you can just uh configure it and and then it's fine so",
    "start": "2542680",
    "end": "2548800"
  },
  {
    "text": "in the end it seems that I mean it will not be fixed and this is to some extent",
    "start": "2548800",
    "end": "2554240"
  },
  {
    "text": "of course we we understand that I mean if if you think that that threat scenario might affect you then just",
    "start": "2554240",
    "end": "2559319"
  },
  {
    "text": "don't use it right but we propose certain mitigations uh as well they were",
    "start": "2559319",
    "end": "2564400"
  },
  {
    "text": "not very uh specific of course the first uh big mitigation or the the apparent",
    "start": "2564400",
    "end": "2569520"
  },
  {
    "text": "mitigation would be just deactivate memory D application if you think this this might be a",
    "start": "2569520",
    "end": "2575040"
  },
  {
    "text": "problem uh but there might be other mitigations as well right so um what we",
    "start": "2575040",
    "end": "2580760"
  },
  {
    "text": "proposed we didn't propose a very specific way to do that but more the concept of attack detecting the attack",
    "start": "2580760",
    "end": "2586800"
  },
  {
    "text": "when it's going on so the virtual machine monitor should should actually see a certain pattern in in page folds",
    "start": "2586800",
    "end": "2592200"
  },
  {
    "text": "and a certain memory allocation pattern so it should be somehow possible uh to detect that in the virtual machine",
    "start": "2592200",
    "end": "2598119"
  },
  {
    "text": "monitor itself uh another way to mitigate the the issue would be to",
    "start": "2598119",
    "end": "2603800"
  },
  {
    "text": "actually increase aslr for code Pages or in general just make aslr stronger and",
    "start": "2603800",
    "end": "2610599"
  },
  {
    "text": "uh another way would be to make it possible or making sure that these",
    "start": "2610599",
    "end": "2615640"
  },
  {
    "text": "sensitive memory pages that that might be used to leak this information is",
    "start": "2615640",
    "end": "2621400"
  },
  {
    "text": "sensitive information like the ASR Base address but maybe also uh to leak other information that they just don't exist",
    "start": "2621400",
    "end": "2627079"
  },
  {
    "text": "so in the case of uh uh code Pages r i mean there might be certain compile time time techniques or uh you could like",
    "start": "2627079",
    "end": "2634119"
  },
  {
    "text": "make sure that this first page just doesn't have uh only the image based field that introduces entropy but maybe",
    "start": "2634119",
    "end": "2640720"
  },
  {
    "text": "introduce some additional Randomness in them or or so forth but for the time being unfortunately I mean this is the",
    "start": "2640720",
    "end": "2647040"
  },
  {
    "text": "only thing you can really do so uh if you think it's a problem you should",
    "start": "2647040",
    "end": "2652599"
  },
  {
    "text": "deactivate memory D application so we're actually already through so the take-home messages uh",
    "start": "2652599",
    "end": "2660839"
  },
  {
    "text": "from from this briefing from our point of view should be the following ones so memory D application is consider",
    "start": "2660839",
    "end": "2667079"
  },
  {
    "text": "considered harmful and there were some papers and also some attacks before but this is like in my opinion a certain new",
    "start": "2667079",
    "end": "2674480"
  },
  {
    "text": "dimension so the attack is very reliable it it's not just working in an academic setting and it somehow shaken one of the",
    "start": "2674480",
    "end": "2681000"
  },
  {
    "text": "foundations of exploit mitigations namely aslr so memory application is is",
    "start": "2681000",
    "end": "2686839"
  },
  {
    "text": "for sure harmful and should be seen that way it doesn't mean that you should not use it but it depends on the scenario we",
    "start": "2686839",
    "end": "2693920"
  },
  {
    "text": "also presented a practical attack against it that that uh is able to break aslr for co- Pages at least in",
    "start": "2693920",
    "end": "2700280"
  },
  {
    "text": "collocated VMS and maybe the the final or the most important um take home",
    "start": "2700280",
    "end": "2706160"
  },
  {
    "text": "message here is the last one if you think that you cannot trust the the VMS",
    "start": "2706160",
    "end": "2711960"
  },
  {
    "text": "that run next to your VM or if you are a cloud provider where you might think that uh this threat scenario might might",
    "start": "2711960",
    "end": "2718480"
  },
  {
    "text": "affect you or your customers then don't use memory D application in your",
    "start": "2718480",
    "end": "2723920"
  },
  {
    "text": "Cloud so that's it from",
    "start": "2723920",
    "end": "2728960"
  },
  {
    "text": "so we have time for questions yes so I I thought about an",
    "start": "2735520",
    "end": "2742640"
  },
  {
    "text": "easy sound fix so if you if you don't disclose the read time the actual read time back to the CLI but you add an",
    "start": "2742640",
    "end": "2749119"
  },
  {
    "text": "additional caching layer and you just report back random time for every",
    "start": "2749119",
    "end": "2754559"
  },
  {
    "text": "operation there is right it doesn't have to has to happen can still sit on the",
    "start": "2754559",
    "end": "2760200"
  },
  {
    "text": "cach and okay but how do you how do you implement that I mean in the end it's",
    "start": "2760200",
    "end": "2765800"
  },
  {
    "text": "it's V it's a hardware virtualization so the attacker will just execute the the instruction to read the Cycles right you",
    "start": "2765800",
    "end": "2772640"
  },
  {
    "text": "want to change the hardware to do that or or so it it will return back from",
    "start": "2772640",
    "end": "2779079"
  },
  {
    "text": "that Pride operation after some so much time right but it's running on a virtual",
    "start": "2779079",
    "end": "2784119"
  },
  {
    "text": "CPU so it's up to the hypervisor to decide when that function is returning",
    "start": "2784119",
    "end": "2789800"
  },
  {
    "text": "yeah but then you have to slow down all the other rights right because uh essentially so it's a page fault right",
    "start": "2789800",
    "end": "2795000"
  },
  {
    "text": "that is a slow that we're detecting right okay so for for you to mitigate",
    "start": "2795000",
    "end": "2800720"
  },
  {
    "text": "like that you have to slow down all the other rights by a factor of 10 or something which is not feasible and basically makes memory",
    "start": "2800720",
    "end": "2809000"
  },
  {
    "text": "duplication useless because probably the time you are detecting is the time",
    "start": "2809000",
    "end": "2814440"
  },
  {
    "text": "needed that remove the right so it's probably faster to",
    "start": "2814440",
    "end": "2821640"
  },
  {
    "text": "just yeah that's also our suggestion I mean there there is no easy fix",
    "start": "2821640",
    "end": "2827880"
  },
  {
    "text": "essentially anything else but as uh so um so we did go and so one",
    "start": "2832559",
    "end": "2840599"
  },
  {
    "text": "other thing that we need to leak to be able so if you think about it you want to attack a VM right you also need to know its IP address so we also found out",
    "start": "2840599",
    "end": "2847800"
  },
  {
    "text": "uh pages that have uh that had IP addresses uniquely so then you can think of using the same can attack to to leak",
    "start": "2847800",
    "end": "2855200"
  },
  {
    "text": "IP addresses uh from neighboring VMS so then you have the IP address you can scan for vulnerabilities and then you",
    "start": "2855200",
    "end": "2860920"
  },
  {
    "text": "have aslr which we can use to attack reliably and you can enumerate for example operating systems as well right",
    "start": "2860920",
    "end": "2867079"
  },
  {
    "text": "so I mean there are a lot of unique pages so and if you do it in a clever way you can just enumerate and find out",
    "start": "2867079",
    "end": "2872599"
  },
  {
    "text": "what kind of operating systems run on the same physical hardare I mean this was shown by one of of the first uh",
    "start": "2872599",
    "end": "2878319"
  },
  {
    "text": "papers in 2011 I think uh that was published Ino Euros yeah so that's why",
    "start": "2878319",
    "end": "2886359"
  },
  {
    "text": "we didn't mention it but of course I mean the attack then I mean you can use it for a lot of things in the end",
    "start": "2886359",
    "end": "2892359"
  },
  {
    "text": "right as as long as you find these interesting pages that might and then you you can Brute Force if you have some",
    "start": "2892359",
    "end": "2898640"
  },
  {
    "text": "entropy in there you can just Brute Force so the proof of concept is uh quite modular so it's just a matter of",
    "start": "2898640",
    "end": "2904800"
  },
  {
    "text": "taking a page and uh telling where to look for entropy and then you can essentially perform it on arbitrary",
    "start": "2904800",
    "end": "2911520"
  },
  {
    "text": "pages but you have to give the tool the page",
    "start": "2911520",
    "end": "2916359"
  },
  {
    "text": "essentially more questions might be possible to",
    "start": "2919119",
    "end": "2926119"
  },
  {
    "text": "do synchronous writing that you return that",
    "start": "2926119",
    "end": "2931480"
  },
  {
    "text": "theor always return the same right in time because that is synchronously do",
    "start": "2931480",
    "end": "2936559"
  },
  {
    "text": "the copy but then how would you uh ensure",
    "start": "2936559",
    "end": "2942920"
  },
  {
    "text": "consistency of the memory subsystem because there might be immediately another instruction that tries to read",
    "start": "2942920",
    "end": "2948880"
  },
  {
    "text": "uh that that that value so all the Locking Primitives for example use this",
    "start": "2948880",
    "end": "2955160"
  },
  {
    "text": "so still to be changed you check if when",
    "start": "2956160",
    "end": "2961200"
  },
  {
    "text": "it reach from there something I'm not very famar this needs to be implemented",
    "start": "2961200",
    "end": "2966799"
  },
  {
    "text": "than in Hardware right so then the current uh commodity Hardwares because the rights uh the uh the the hypervisor",
    "start": "2966799",
    "end": "2973079"
  },
  {
    "text": "doesn't see right this is completely like visualized by",
    "start": "2973079",
    "end": "2977838"
  },
  {
    "text": "Hardware can I disable machine or just the provider",
    "start": "2978839",
    "end": "2985440"
  },
  {
    "text": "just a Prov I mean I don't see can maybe I mean if the provider gives you a Administration interface you can say I",
    "start": "2985440",
    "end": "2991119"
  },
  {
    "text": "would like to run on a physical system where there is no memory application enabled yeah but I mean no you cannot",
    "start": "2991119",
    "end": "2996960"
  },
  {
    "text": "disable it because it's really it's a virtu machine monitor that just does it and that's one of the problems right so even if you go to these Cloud providers",
    "start": "2996960",
    "end": "3003200"
  },
  {
    "text": "websit I mean they will not I mean you will never see like when you buy it you will never have like a feature yeah we",
    "start": "3003200",
    "end": "3008680"
  },
  {
    "text": "use mem Le application right I mean because it's actually for you as a customer it's not a feature it's just",
    "start": "3008680",
    "end": "3014160"
  },
  {
    "text": "for them interesting so they can put more virtual machines on the same Hardware so but you can detect",
    "start": "3014160",
    "end": "3023280"
  },
  {
    "text": "it question can I just modify my binaries with",
    "start": "3025440",
    "end": "3031280"
  },
  {
    "text": "single bits that they don't get",
    "start": "3031280",
    "end": "3034880"
  },
  {
    "text": "duplicated because they only get duplicated when they're really binary exactly the same yeah so if you uh make",
    "start": "3037880",
    "end": "3045240"
  },
  {
    "text": "so if you change your DLS if you manage to do that in Windows to make your DLS look differently then yes you can sver",
    "start": "3045240",
    "end": "3051079"
  },
  {
    "text": "the attack I can just change one string in the D and it's fin",
    "start": "3051079",
    "end": "3057160"
  },
  {
    "text": "not the same thing mess yes but then there are also other",
    "start": "3057160",
    "end": "3064599"
  },
  {
    "text": "pages right so we didn't talk about data pages right yes so the data Pages you cannot",
    "start": "3064599",
    "end": "3070319"
  },
  {
    "text": "really do much",
    "start": "3070319",
    "end": "3073040"
  },
  {
    "text": "right and there might be also interesting purges in the kernel right so so the thing is I mean we took that",
    "start": "3075440",
    "end": "3081599"
  },
  {
    "text": "aslr like like a use case right because it's interesting it has some security implications but the concept is much",
    "start": "3081599",
    "end": "3086680"
  },
  {
    "text": "more Universal in the sense of if you find interesting pages that might if you",
    "start": "3086680",
    "end": "3092559"
  },
  {
    "text": "can infer that they exist might give you some value as an attacker then then it's possible and we didn't look at all pages",
    "start": "3092559",
    "end": "3099359"
  },
  {
    "text": "right so in our case we were very lucky looking at that the first page of every portable executable image I mean it's",
    "start": "3099359",
    "end": "3105480"
  },
  {
    "text": "was so funny we just looked at it and it was ah okay here it is they made it for",
    "start": "3105480",
    "end": "3111079"
  },
  {
    "text": "to work yeah I mean it really felt like someone was waiting for us to to to just find it I mean it was yeah and probably",
    "start": "3111079",
    "end": "3118440"
  },
  {
    "text": "a more determined attacker has more time and more insights right I mean we don't know what what such an attacker can do",
    "start": "3118440",
    "end": "3126558"
  },
  {
    "text": "but so I will not see the issue like ah okay let's just fix that particular issue right and let's just change like",
    "start": "3127119",
    "end": "3134000"
  },
  {
    "text": "the first page of of of a DL right it's more like a conceptional issue that well",
    "start": "3134000",
    "end": "3139280"
  },
  {
    "text": "you have to to get all these opportunities and find them and and fix",
    "start": "3139280",
    "end": "3145480"
  },
  {
    "text": "them other",
    "start": "3145520",
    "end": "3148880"
  },
  {
    "text": "questions okay and then please also complete the speaker feedback survey so",
    "start": "3151839",
    "end": "3157160"
  },
  {
    "text": "we were told to put that as the last slide so so thanks for your attention thank you",
    "start": "3157160",
    "end": "3164980"
  },
  {
    "text": "[Applause]",
    "start": "3164980",
    "end": "3169249"
  }
]