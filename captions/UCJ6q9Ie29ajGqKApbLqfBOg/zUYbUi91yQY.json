[
  {
    "start": "0",
    "end": "480000"
  },
  {
    "text": "welcome to securing apps in the open by default cloud with Winston house and Michael Wozniak just a few announcements",
    "start": "0",
    "end": "6779"
  },
  {
    "text": "before we begin please stop by the business hall located in Mandalay Bay on this level and the blackhat Arsenal is",
    "start": "6779",
    "end": "14130"
  },
  {
    "text": "in the business hall level to this level as well we we appreciate if you can",
    "start": "14130",
    "end": "19140"
  },
  {
    "text": "silence your cellphone's and please give a warm welcome to our speakers today again Winston house and Michael Wozniak",
    "start": "19140",
    "end": "25680"
  },
  {
    "text": "thank you cool",
    "start": "25680",
    "end": "31980"
  },
  {
    "text": "take us away alright yeah thanks for coming I'm Michael Wozniak with the",
    "start": "31980",
    "end": "38399"
  },
  {
    "text": "infrastructure security team at snapchat now I'm Winston house on the application",
    "start": "38399",
    "end": "43500"
  },
  {
    "text": "security team at snapchat yeah welcome to the cloud here at snapchat were",
    "start": "43500",
    "end": "49230"
  },
  {
    "text": "primarily are almost entirely on cloud services that for us this means AWS GCP",
    "start": "49230",
    "end": "57329"
  },
  {
    "text": "there are others and most of what we're talking about is could be used on those",
    "start": "57329",
    "end": "63270"
  },
  {
    "text": "other clouds as well so our services run",
    "start": "63270",
    "end": "68340"
  },
  {
    "text": "on a variety of underlying compute infrastructure AWS has ec2 eks GSP has",
    "start": "68340",
    "end": "77240"
  },
  {
    "text": "App Engine gke GC for each of these",
    "start": "77240",
    "end": "83570"
  },
  {
    "text": "services that the cloud provides api's to control the IM level access they",
    "start": "83570",
    "end": "90810"
  },
  {
    "text": "allow you to do some org level policies but the way we've designed our",
    "start": "90810",
    "end": "97860"
  },
  {
    "text": "infrastructure is we segregate for I am segregation instead of networks like",
    "start": "97860",
    "end": "104299"
  },
  {
    "text": "segregation so we actually end up with a lot of disjoint networks a lot of V pcs across a lot of projects a lot of",
    "start": "104299",
    "end": "111180"
  },
  {
    "text": "accounts in Natal us so the we have to",
    "start": "111180",
    "end": "116670"
  },
  {
    "text": "deal with transiting across the internet for access between these networks in",
    "start": "116670",
    "end": "121890"
  },
  {
    "text": "each cloud so the clouds are generally opened by",
    "start": "121890",
    "end": "127700"
  },
  {
    "text": "default we we have this issue where the the gcpd AWS they want you to get your",
    "start": "127700",
    "end": "133220"
  },
  {
    "text": "app up and running as fast as possible if you have a POC they want you to to get it up and running in under 10",
    "start": "133220",
    "end": "139160"
  },
  {
    "text": "minutes apparently we have the the primary issue",
    "start": "139160",
    "end": "145040"
  },
  {
    "text": "we have is App Engine is open by default it's routable on the Internet",
    "start": "145040",
    "end": "150650"
  },
  {
    "text": "it's that's for both ingress and egress goes out over the Internet",
    "start": "150650",
    "end": "155709"
  },
  {
    "text": "and there is at least now there's an ability to firewall it but it's not",
    "start": "155709",
    "end": "163280"
  },
  {
    "text": "there by default so we've had to create tools to add that gating after the fact",
    "start": "163280",
    "end": "171820"
  },
  {
    "text": "so the constraints we're dealing with like I said networking we we've got a",
    "start": "171820",
    "end": "178250"
  },
  {
    "text": "lot of disjoint networks we don't have one single connected network that",
    "start": "178250",
    "end": "183470"
  },
  {
    "text": "everything is internal not exposed the internet we've got limited enforcement",
    "start": "183470",
    "end": "189350"
  },
  {
    "text": "options provided by ade we lost GSP especially at the org level they allow us to create a shared network but they",
    "start": "189350",
    "end": "195440"
  },
  {
    "text": "don't allow us to enforce everything it goes on that network so we have to build the tools to do that and then also some",
    "start": "195440",
    "end": "202670"
  },
  {
    "text": "services like App Engine they don't even work with those internal networks that",
    "start": "202670",
    "end": "210170"
  },
  {
    "text": "they're providing and then on the CIC deep side of it we actually put our",
    "start": "210170",
    "end": "217810"
  },
  {
    "text": "gates in front of that so before the developers even write any code we've",
    "start": "217810",
    "end": "223670"
  },
  {
    "text": "already gated their project as soon as they create it we're not in the deployment pipeline and we're much",
    "start": "223670",
    "end": "230030"
  },
  {
    "text": "sooner in the process yeah so to make this even more complicated it makes it",
    "start": "230030",
    "end": "237260"
  },
  {
    "text": "really unclear in the cloud when security should get involved with an app and if we look at the standard",
    "start": "237260",
    "end": "243049"
  },
  {
    "text": "development lifecycle of an app you start out you put your app you create a new project and it's on the internet and",
    "start": "243049",
    "end": "249829"
  },
  {
    "text": "you start building on the internet and maybe over time you'll come to security because you want a DNS record or a",
    "start": "249829",
    "end": "255530"
  },
  {
    "text": "certificate or something like that and we'll do a security review and then more time goes on once you've done the",
    "start": "255530",
    "end": "262939"
  },
  {
    "text": "security of you and fix things you're now getting feedback on your app and you're making changes and throughout",
    "start": "262939",
    "end": "268639"
  },
  {
    "text": "this entire process your app has just been living on the Internet and so you have this sort of pre-launch and post",
    "start": "268639",
    "end": "273979"
  },
  {
    "text": "launch world and in both cases you're exposed to attacks and we really only have guarantees from security in this",
    "start": "273979",
    "end": "281629"
  },
  {
    "text": "one little slice and time and so we looked at this and we said this is not working for us this doesn't allow the",
    "start": "281629",
    "end": "288080"
  },
  {
    "text": "security team to effectively provide any guarantees and we wanted to stretch that",
    "start": "288080",
    "end": "293779"
  },
  {
    "text": "red line basically across the entire spectrum and so we looked at a few approaches for doing this one of the",
    "start": "293779",
    "end": "300139"
  },
  {
    "text": "things we talked about was we worked with finance to control billing for apps and we said no one gets billing until",
    "start": "300139",
    "end": "307759"
  },
  {
    "text": "they've done a security review and this worked for a little bit but there's a ton of features the cloud offers you",
    "start": "307759",
    "end": "312860"
  },
  {
    "text": "that you can only have once you have billing set up on your app additionally and a lot of teams wanted to test",
    "start": "312860",
    "end": "319400"
  },
  {
    "text": "different architectures at scale which they can't do without billing so we ended up creating all these exceptions where we were saying we'll give you a",
    "start": "319400",
    "end": "325129"
  },
  {
    "text": "billing but you have to come back and do a security review later on and it just became a bit of a nightmare to handle and it was more exceptions than it was",
    "start": "325129",
    "end": "331669"
  },
  {
    "text": "just normal approval cases and so next thing we did is we created some libraries when we asked developers hey",
    "start": "331669",
    "end": "337759"
  },
  {
    "text": "please implement these auth libraries and your services and but we noticed people either Mis implemented them or",
    "start": "337759",
    "end": "343789"
  },
  {
    "text": "implemented something else altogether and so we are constantly running around trying to validate have people",
    "start": "343789",
    "end": "349250"
  },
  {
    "text": "implemented the correct thing and this did not scale for our team at all it was just a really heavy op sled so another",
    "start": "349250",
    "end": "355219"
  },
  {
    "text": "thing which we considered for a bit was just using firewalls to gate things to the corporate network problem with that",
    "start": "355219",
    "end": "362300"
  },
  {
    "text": "is it it really isn't very granular so any employee could now access any single service and for service the service",
    "start": "362300",
    "end": "368900"
  },
  {
    "text": "communication this doesn't work at all like again going back to App Engine and every every App Engine project egress is",
    "start": "368900",
    "end": "375770"
  },
  {
    "text": "from the same IP range so you can't make any guarantees about what's yours or what someone else based on an IP address",
    "start": "375770",
    "end": "381279"
  },
  {
    "text": "so the last thing we looked at was Google's identity aware proxy which is this o auth proxy you can stand up in",
    "start": "381279",
    "end": "386779"
  },
  {
    "text": "front of your apps and they've got API is to turn it on and off but before you can turn it on you have to have an OAuth client and an OAuth client there's",
    "start": "386779",
    "end": "394740"
  },
  {
    "text": "no API for creating this you have to create that on manually and and because",
    "start": "394740",
    "end": "400110"
  },
  {
    "text": "of that it just was not going to work for the vast number of services we have",
    "start": "400110",
    "end": "405300"
  },
  {
    "text": "and because it wasn't automatable so we looked at all these problems and we said oK we've got four goals in mind here the",
    "start": "405300",
    "end": "412320"
  },
  {
    "text": "first goal is we want whatever our solution is to be very flexible we've got a really wide array of technology",
    "start": "412320",
    "end": "418290"
  },
  {
    "text": "used at snap and we wanted to rather than force everyone to standardize on technology decouple those problems and",
    "start": "418290",
    "end": "425730"
  },
  {
    "text": "try to make our solution have very minimal opinions about how developers build their services for hike ups things",
    "start": "425730",
    "end": "432870"
  },
  {
    "text": "we noticed as we are building the solution out that we did have to make a few more constraints but we did try to",
    "start": "432870",
    "end": "438210"
  },
  {
    "text": "keep that to a minimum the next thing is we wanted developers to not have to instrument their services at all every",
    "start": "438210",
    "end": "444780"
  },
  {
    "text": "time we had to go audit them it doesn't scale and it's a heavy opps load and we also wanted this to be very granular we",
    "start": "444780",
    "end": "451740"
  },
  {
    "text": "want to be able to say this set of users can access these services and these two services can talk to each other and the",
    "start": "451740",
    "end": "457890"
  },
  {
    "text": "entire thing should be automated we shouldn't have to be manually setting things up throughout this entire process",
    "start": "457890",
    "end": "463310"
  },
  {
    "text": "yeah so the though the way we built our",
    "start": "463310",
    "end": "468780"
  },
  {
    "text": "solution is we need two basic features we need to be able to control the network and we also need to have",
    "start": "468780",
    "end": "475620"
  },
  {
    "text": "visibility into the inventory of our sort of our cloud infrastructure so our",
    "start": "475620",
    "end": "482640"
  },
  {
    "start": "480000",
    "end": "665000"
  },
  {
    "text": "solution combines quite a few of the things we talked about before we have a central service that enables billing",
    "start": "482640",
    "end": "488510"
  },
  {
    "text": "billing is enabled right away but it gives a security team Network management access and visibility into the",
    "start": "488510",
    "end": "496140"
  },
  {
    "text": "infrastructure to ensure that the network stays the way we need it to stay to provide that gate so going back to",
    "start": "496140",
    "end": "506310"
  },
  {
    "text": "the development lifecycle we were in this world of pre-launch and a post launch and with the optional or",
    "start": "506310",
    "end": "514010"
  },
  {
    "text": "encouraged security review in the middle at some point in time to this world of",
    "start": "514010",
    "end": "519159"
  },
  {
    "text": "manage and manage services where to get into this managed world of production",
    "start": "519159",
    "end": "525699"
  },
  {
    "text": "level services you have to file a security review especially if you're opening something up to the world so",
    "start": "525699",
    "end": "531339"
  },
  {
    "text": "we're gonna go over both these separately the unmanaged is lower scale",
    "start": "531339",
    "end": "536379"
  },
  {
    "text": "the managed is much higher scale so for unmanaged services there's two types of",
    "start": "536379",
    "end": "542560"
  },
  {
    "text": "services here new services and development pocs experiments things we don't know if",
    "start": "542560",
    "end": "548769"
  },
  {
    "text": "it's worth the time to even do a security review if it's never gonna see a public endpoint and internal tools",
    "start": "548769",
    "end": "554680"
  },
  {
    "text": "those are low scale employee only access we treat these identically from the security team standpoint that the scale",
    "start": "554680",
    "end": "561069"
  },
  {
    "text": "is appropriate and they both need authentication authorization controls in front of them so to do this unmanaged",
    "start": "561069",
    "end": "571170"
  },
  {
    "text": "services gating we have two components the firewall manager that's managing all",
    "start": "571170",
    "end": "576279"
  },
  {
    "text": "the network components and the stateless authentic C that's providing the authentication in front of everything",
    "start": "576279",
    "end": "582269"
  },
  {
    "text": "the firewall manager we basically we",
    "start": "582269",
    "end": "587680"
  },
  {
    "text": "have to import everything from the inventory the inventories pinging the firewall manager letting it know when it",
    "start": "587680",
    "end": "593740"
  },
  {
    "text": "needs to go get something new that it's all automated so it happens very very fast after creating a new project then",
    "start": "593740",
    "end": "601420"
  },
  {
    "text": "we have a set of base level firewall rules that we've deemed safe that's allowing traffic from our stateless",
    "start": "601420",
    "end": "607600"
  },
  {
    "text": "proxy especially for App Engine and then we have an SSH proxy that does the same thing on that protocol and a few other",
    "start": "607600",
    "end": "614740"
  },
  {
    "text": "internal only firewall rules that we allow and then it constantly is monitoring the state of the V PCs to",
    "start": "614740",
    "end": "621939"
  },
  {
    "text": "ensure that developers aren't changing those and we revert any non-approved rules so the architecture looks like",
    "start": "621939",
    "end": "630519"
  },
  {
    "text": "this the service inventory pings the firewall managers firewall manager is",
    "start": "630519",
    "end": "636189"
  },
  {
    "text": "also storing a source of truth it is basically the exact same data that's in the fleet but we have to store what we",
    "start": "636189",
    "end": "643870"
  },
  {
    "text": "believe is the source of truth so that when we scan the fleet its synchronizing and making sure that the firewalls are",
    "start": "643870",
    "end": "649209"
  },
  {
    "text": "correct if developer changes one of those accidentally opens something up even purposely they open something up",
    "start": "649209",
    "end": "654980"
  },
  {
    "text": "we're gonna change that back and they have to come back to us and we'll be able to update the rules through our our",
    "start": "654980",
    "end": "662180"
  },
  {
    "text": "firewall manager and so the cloud directly yes so rather than using firewall rules to just gate to IPS we're",
    "start": "662180",
    "end": "669410"
  },
  {
    "text": "just using firewall rules to close the service entirely down and once we've done that we now need to open up",
    "start": "669410",
    "end": "675710"
  },
  {
    "text": "channels again for either employees to start accessing services or for services to start accessing each other and so",
    "start": "675710",
    "end": "681440"
  },
  {
    "text": "that's where this stateless authentic C comes in so it should handle exactly those two cases it should be incredibly",
    "start": "681440",
    "end": "687200"
  },
  {
    "text": "easy to set up so in the case of App Engine this is just set up by default for our developers for other services",
    "start": "687200",
    "end": "692840"
  },
  {
    "text": "there's a small config change they have to make in our proxy so that way we know how to route to them and it should it's",
    "start": "692840",
    "end": "699470"
  },
  {
    "text": "yeah you should stay in line with our aqwal service so we know exactly the right apples and we can enforce those",
    "start": "699470",
    "end": "705350"
  },
  {
    "text": "and the really critical thing is this has to be reliable and the reason for that is just because this sits in front of all of our internal infrastructure so",
    "start": "705350",
    "end": "712130"
  },
  {
    "text": "if this goes down developer productivity drops close to zero so there's three",
    "start": "712130",
    "end": "717410"
  },
  {
    "text": "main components to this proxy the first bit is managing configuration that's both alkyl configurations and routing",
    "start": "717410",
    "end": "723290"
  },
  {
    "text": "configurations and then actually doing the authentic naught Z and finally actually proxying these requests so for",
    "start": "723290",
    "end": "731000"
  },
  {
    "text": "the configuration there's two types like I said the first is routing and so we just have a config file checked into",
    "start": "731000",
    "end": "736400"
  },
  {
    "text": "source code developers can go make changes to that and we can then go approve those changes to make sure it",
    "start": "736400",
    "end": "742100"
  },
  {
    "text": "looks like they're not trying to route to something outside of our network or outside of our org and then as soon as",
    "start": "742100",
    "end": "748580"
  },
  {
    "text": "those are approved we upload that to GCS similarly we've got the service which we've called a rotator and it pings out",
    "start": "748580",
    "end": "754940"
  },
  {
    "text": "to our Apple service to fetch all the apples for our fleet and then it takes",
    "start": "754940",
    "end": "759950"
  },
  {
    "text": "those transforms them and put pushes those up to GCS as well our proxy then",
    "start": "759950",
    "end": "765890"
  },
  {
    "text": "actually reaches out to GCS every ten minutes and gathers all that data loads it into memory and",
    "start": "765890",
    "end": "772250"
  },
  {
    "text": "yeah and then uses that to route requests appropriately and too often and aussie checks appropriately and what's",
    "start": "772250",
    "end": "778459"
  },
  {
    "text": "really key about this infrastructure is that the if any of these services go down if GCS or the alkyl service goes",
    "start": "778459",
    "end": "784610"
  },
  {
    "text": "down it doesn't take our proxy down we can keep running on stale data which allows things to stay available and",
    "start": "784610",
    "end": "790129"
  },
  {
    "text": "because all these changes are happening out-of-band we don't have any inline dependencies so it increases reliability",
    "start": "790129",
    "end": "796970"
  },
  {
    "text": "and reduces latency there we go and so",
    "start": "796970",
    "end": "802939"
  },
  {
    "start": "800000",
    "end": "1033000"
  },
  {
    "text": "for the actual proxying if a user is to proxy into the service how it works is",
    "start": "802939",
    "end": "808699"
  },
  {
    "text": "they and their browser will go try to talk to the service behind the proxy if they're not authenticated the proxy will",
    "start": "808699",
    "end": "814970"
  },
  {
    "text": "redirect them to Google's IP which is their o F proxy which sits in front of this other service we've called the jump",
    "start": "814970",
    "end": "820129"
  },
  {
    "text": "point and they'll go through an OAuth dance with ia P and Google will then",
    "start": "820129",
    "end": "825920"
  },
  {
    "text": "forward us their identity to the jump point we'll wrap that and return it and",
    "start": "825920",
    "end": "831139"
  },
  {
    "text": "redirect the user back over to the proxy the proxy can now unwrap that identity set a session for that user based on",
    "start": "831139",
    "end": "838250"
  },
  {
    "text": "looking at its Akal so if it chooses to authorize the user and then forwards the",
    "start": "838250",
    "end": "843319"
  },
  {
    "text": "users request on to the actual proxy and now the user can just communicate through the proxy there's two things",
    "start": "843319",
    "end": "849829"
  },
  {
    "text": "which are important to call out here one is for this o off dance that we're doing one of the original ideas we had was to",
    "start": "849829",
    "end": "856250"
  },
  {
    "text": "do OAuth in the proxy itself rather than out at this jump point and there's two",
    "start": "856250",
    "end": "861589"
  },
  {
    "text": "problems with that one is it makes the proxy not stateless and we want the proxy to remain stateless and the second",
    "start": "861589",
    "end": "867439"
  },
  {
    "text": "one is that it allows the proxy to impersonate any user that if yet for a",
    "start": "867439",
    "end": "873980"
  },
  {
    "text": "service any user that tries to talk to that particular service that service would now be able to authorize or to",
    "start": "873980",
    "end": "879769"
  },
  {
    "text": "authenticate as that user to any other service and I'll walk through that attack in a minute",
    "start": "879769",
    "end": "885380"
  },
  {
    "text": "the other cool generalization here is that this IAM point is really just a single sign-on provider and so you could",
    "start": "885380",
    "end": "891860"
  },
  {
    "text": "have any single sign-on provider here as long as that returns a token that the proxy can unwrap that would work so to",
    "start": "891860",
    "end": "899029"
  },
  {
    "text": "actually go through this attack and the reason why we didn't do the OAuth at the",
    "start": "899029",
    "end": "905420"
  },
  {
    "text": "proxy so because we can't automate the creation of these Roth clients and we can't automate the creation of client",
    "start": "905420",
    "end": "911870"
  },
  {
    "text": "IDs and client secrets the idea we had originally was to throw a fixed client",
    "start": "911870",
    "end": "917480"
  },
  {
    "text": "ID at the proxy and you'll see how this breaks down so the user authenticates",
    "start": "917480",
    "end": "922760"
  },
  {
    "text": "through the proxy to a malicious service the service now opens the new window it sends some JavaScript back opens up a",
    "start": "922760",
    "end": "928430"
  },
  {
    "text": "new window kicking off an OAuth flow so the user goes to the OAuth provider in",
    "start": "928430",
    "end": "934550"
  },
  {
    "text": "this case Google and it gets if they approve the OAuth grant they'll get",
    "start": "934550",
    "end": "941810"
  },
  {
    "text": "redirected back to the malicious service or to the proxy rather with an",
    "start": "941810",
    "end": "946820"
  },
  {
    "text": "authorization code but because our malicious service is running on the same domain as well as the proxy because it's",
    "start": "946820",
    "end": "954050"
  },
  {
    "text": "being proxied it can now read that authorization code out of the request even though the proxy hasn't forwarded",
    "start": "954050",
    "end": "959780"
  },
  {
    "text": "it along just by taking advantage of the same origin policy now that it has the authorization code what it can do is",
    "start": "959780",
    "end": "966740"
  },
  {
    "text": "it's going to enter this race condition where it's trying to authenticate on behalf of the user to this benign",
    "start": "966740",
    "end": "972080"
  },
  {
    "text": "service faster than the proxy can authenticate to the OAuth provider so it's actually happening here is anytime",
    "start": "972080",
    "end": "978260"
  },
  {
    "text": "our services are talking to each other they're gonna go through this proxy so it's gonna hit the proxy the proxy is",
    "start": "978260",
    "end": "983510"
  },
  {
    "text": "going to say you're not authenticated you have to go to Google it'll send them a redirect over to Google rather than",
    "start": "983510",
    "end": "988640"
  },
  {
    "text": "going to Google because they have the authorization code for this user who is accessing their site they can now send this authorization code back to the",
    "start": "988640",
    "end": "995780"
  },
  {
    "text": "proxy and at this point the proxy will take that authorization code and send it",
    "start": "995780",
    "end": "1001630"
  },
  {
    "text": "to Google so you now have two instances of this proxy competing against each other for who gets to Google first and",
    "start": "1001630",
    "end": "1008820"
  },
  {
    "text": "if the second proxy wins at the proxy in front of the benign service wins this race the proxy will end up",
    "start": "1008820",
    "end": "1015580"
  },
  {
    "text": "authenticating the malicious service to the benign service as this user and so now the malicious service is able to",
    "start": "1015580",
    "end": "1021550"
  },
  {
    "text": "take any of its identities that come to it and replay those against other services so that's why we created this",
    "start": "1021550",
    "end": "1028689"
  },
  {
    "text": "whole jump point to avoid this entire attack scenario so going back to the",
    "start": "1028690",
    "end": "1034600"
  },
  {
    "start": "1033000",
    "end": "1064000"
  },
  {
    "text": "actual proxying and how this works for App Engine because App Engine doesn't have any sort of notion of an internal network",
    "start": "1034600",
    "end": "1040319"
  },
  {
    "text": "what we did is we said for the static IP addresses of our proxy will allow requests from that into App Engine",
    "start": "1040320",
    "end": "1046620"
  },
  {
    "text": "services and we'll punch a hole in the firewall specifically for those IP addresses for non App Engine things we",
    "start": "1046620",
    "end": "1052230"
  },
  {
    "text": "have this leaf proxy where we VP c-p-r it to any service that our developers",
    "start": "1052230",
    "end": "1057570"
  },
  {
    "text": "create and we can now route through that and so the central proxy can do the often and not see and then we route out",
    "start": "1057570",
    "end": "1062970"
  },
  {
    "text": "through these leaf proxies so this works for low scale thing so there's basically",
    "start": "1062970",
    "end": "1070050"
  },
  {
    "start": "1064000",
    "end": "1090000"
  },
  {
    "text": "two big problems here one is latency because we're doing we've we've added an additional hop particularly for App Engine and the second one is clouds bill",
    "start": "1070050",
    "end": "1077130"
  },
  {
    "text": "on egress or at least Google and Amazon and because of that because we're",
    "start": "1077130",
    "end": "1082800"
  },
  {
    "text": "egressing twice we're getting billed twice for all of our traffic and so this becomes incredibly expensive if we want",
    "start": "1082800",
    "end": "1088620"
  },
  {
    "text": "to do hike ups so because of that we then created this world of managed services where users don't have",
    "start": "1088620",
    "end": "1094950"
  },
  {
    "start": "1090000",
    "end": "1480000"
  },
  {
    "text": "developers don't have to move to manage services unless they're trying to have hike ups or user data and we've created",
    "start": "1094950",
    "end": "1101400"
  },
  {
    "text": "yeah a different sort of suite of tools to handle this case yeah so the the",
    "start": "1101400",
    "end": "1106830"
  },
  {
    "text": "goals here are to avoid some of those problems we we need very low latency we",
    "start": "1106830",
    "end": "1113190"
  },
  {
    "text": "we need this environment to basically be transparent we also needed to be cheap",
    "start": "1113190",
    "end": "1118590"
  },
  {
    "text": "we don't want to be adding any overhead on cost we need we still need granular",
    "start": "1118590",
    "end": "1124080"
  },
  {
    "text": "authentication and authorization and we want visibility into what's going on in this production network so the",
    "start": "1124080",
    "end": "1131280"
  },
  {
    "text": "components here to build this out we have API an API gateway that's our front",
    "start": "1131280",
    "end": "1136740"
  },
  {
    "text": "proxy we have a service mesh that's where all the services live and communicate with each other we have a",
    "start": "1136740",
    "end": "1143220"
  },
  {
    "text": "central configuration controller that's managing how everything is routed authenticated etc and it's the the",
    "start": "1143220",
    "end": "1150900"
  },
  {
    "text": "commanding control center for users or developers to configure things and we",
    "start": "1150900",
    "end": "1156420"
  },
  {
    "text": "have a service sidecar that allows the service mesh to work appropriately that's what most of this is working with",
    "start": "1156420",
    "end": "1164070"
  },
  {
    "text": "the help of envoy is on voice a proxy first created by lyft and I was an open",
    "start": "1164070",
    "end": "1169470"
  },
  {
    "text": "source proxy so the first component here API",
    "start": "1169470",
    "end": "1175039"
  },
  {
    "text": "gateway this is on board as a front proxy we've got this is a central entry",
    "start": "1175039",
    "end": "1182119"
  },
  {
    "text": "point it's got authentication filters these are managed by the security team",
    "start": "1182119",
    "end": "1187820"
  },
  {
    "text": "some of them written by the security team it's very it's one point that we",
    "start": "1187820",
    "end": "1193099"
  },
  {
    "text": "have to look at and awed it and understand for the ingress traffic to our environment and it's centrally",
    "start": "1193099",
    "end": "1200629"
  },
  {
    "text": "managed via the Envoy XDS protocol which we'll get into so the service mesh this",
    "start": "1200629",
    "end": "1208009"
  },
  {
    "text": "is what sits behind the API gateway the API gateway understands how to route to each service over the that lives on the",
    "start": "1208009",
    "end": "1214070"
  },
  {
    "text": "service mash it's all configured via the configuration controller Envoy here is",
    "start": "1214070",
    "end": "1219440"
  },
  {
    "text": "also providing authentication encryption metrics and none of this is routable",
    "start": "1219440",
    "end": "1225859"
  },
  {
    "text": "from the internet so we don't have the problem where we have in some of the other environments or services that we",
    "start": "1225859",
    "end": "1232639"
  },
  {
    "text": "deal with so the the central configuration controller this is like the the brain of the system it works by",
    "start": "1232639",
    "end": "1240080"
  },
  {
    "text": "the the Envoy XDS protocol it's basically how envoy communicates to",
    "start": "1240080",
    "end": "1245570"
  },
  {
    "text": "central service and downloads its configuration state routes authentication and filters so because",
    "start": "1245570",
    "end": "1253009"
  },
  {
    "text": "the routes come with authentication and authorization built-in we have an",
    "start": "1253009",
    "end": "1258739"
  },
  {
    "text": "approval workflow so anytime that service a needs talk to service be the",
    "start": "1258739",
    "end": "1263809"
  },
  {
    "text": "owners of service B have to approve that service a is allowed to talk to service",
    "start": "1263809",
    "end": "1268909"
  },
  {
    "text": "B and then that builds in the authentication authorization the services don't need to use a library or",
    "start": "1268909",
    "end": "1276080"
  },
  {
    "text": "anything like that so the the service sidecar this is what enables that to",
    "start": "1276080",
    "end": "1282019"
  },
  {
    "text": "work without building anything into the application so envoy is running as a",
    "start": "1282019",
    "end": "1287359"
  },
  {
    "text": "sidecar we also have a component that bootstraps the identity is because we",
    "start": "1287359",
    "end": "1293269"
  },
  {
    "text": "want this to work in multiple clouds each cloud has various primitives that allow us to establish identity of a",
    "start": "1293269",
    "end": "1299839"
  },
  {
    "text": "either a VM host or a role or a service account so we basically take whatever",
    "start": "1299839",
    "end": "1305599"
  },
  {
    "text": "that is in whichever environment we're in connect to our central CA to pivot from a cloud native identity to our",
    "start": "1305599",
    "end": "1312940"
  },
  {
    "text": "internal mesh identity which is understandable across every cloud every service that we have so then once it",
    "start": "1312940",
    "end": "1321470"
  },
  {
    "text": "gets that identity it's able to take that identity and go to the configuration controller that which",
    "start": "1321470",
    "end": "1326919"
  },
  {
    "text": "knows which configuration to send to that service which is how that service",
    "start": "1326919",
    "end": "1335570"
  },
  {
    "text": "then authenticates traffic it knows how to set up the routes it does all the service discovery there and then it also",
    "start": "1335570",
    "end": "1342559"
  },
  {
    "text": "exposes a port locally for the egress traffic of the service to be routed",
    "start": "1342559",
    "end": "1349580"
  },
  {
    "text": "externally so this means the services or the the application developers don't need to do any like TLS encryption they",
    "start": "1349580",
    "end": "1358279"
  },
  {
    "text": "don't need to do authentication they're just sending raw traffic either HTTP RPC",
    "start": "1358279",
    "end": "1363950"
  },
  {
    "text": "and on boys adding those components on top and it also gives us visibility with all those",
    "start": "1363950",
    "end": "1370279"
  },
  {
    "text": "metrics so some of the challenges here we've got a a little bit different",
    "start": "1370279",
    "end": "1379460"
  },
  {
    "text": "onboarding experience than the the first environment we talked about it's not",
    "start": "1379460",
    "end": "1384950"
  },
  {
    "text": "quite as automatic when a service owner wants to go into this managed world they",
    "start": "1384950",
    "end": "1390440"
  },
  {
    "text": "have to do basically they have to be able to create their application in a container and and go to the the",
    "start": "1390440",
    "end": "1399649"
  },
  {
    "text": "configuration controller set up all the routes they need to get all their right approvals so there is some onboarding",
    "start": "1399649",
    "end": "1406700"
  },
  {
    "text": "friction there and then there's this noisy neighbor problem where we've moved from everybody is in their own account",
    "start": "1406700",
    "end": "1413269"
  },
  {
    "text": "they deal with cloud quotas for resources API limits individually with",
    "start": "1413269",
    "end": "1420440"
  },
  {
    "text": "the cloud now we live in one VPC one account so we have to deal with that at",
    "start": "1420440",
    "end": "1426889"
  },
  {
    "text": "an infrastructure team level within snapchat and we deal with that with the cloud",
    "start": "1426889",
    "end": "1432890"
  },
  {
    "text": "separately so we we have to make sure that one team doesn't use up all the quota for the rest of the company and",
    "start": "1432890",
    "end": "1440660"
  },
  {
    "text": "take out some unrelated service so that that's a new problem that we are",
    "start": "1440660",
    "end": "1446700"
  },
  {
    "text": "challenged that we have we also have this because we've centralized on one ingress point we do have a potential",
    "start": "1446700",
    "end": "1455900"
  },
  {
    "text": "centralized point of failure but because it's simpler it's a single place where",
    "start": "1455900",
    "end": "1462090"
  },
  {
    "text": "we're putting all of our authentication filters instead of every application across our environment it's not a",
    "start": "1462090",
    "end": "1467910"
  },
  {
    "text": "library that developers have to integrate and get right every time that it's in general it it's it's because of",
    "start": "1467910",
    "end": "1476910"
  },
  {
    "text": "the simplicity it it's easier to manage yet so we're trying to get everyone into",
    "start": "1476910",
    "end": "1483720"
  },
  {
    "start": "1480000",
    "end": "2042000"
  },
  {
    "text": "this new mesh world that we have but we still have this problem of we have a bunch of existing services that were",
    "start": "1483720",
    "end": "1490290"
  },
  {
    "text": "created and they aren't built for the mesh right now and they existed before",
    "start": "1490290",
    "end": "1495750"
  },
  {
    "text": "we had a lot of these controls in place so in order to handle this case we first",
    "start": "1495750",
    "end": "1500760"
  },
  {
    "text": "did a lot of introspection to think how we're gonna solve this problem and we created something we called the introspection library and what this is",
    "start": "1500760",
    "end": "1508080"
  },
  {
    "text": "is a simple library it's a line of code to integrate this into any service and it gets a lot of information about the",
    "start": "1508080",
    "end": "1513840"
  },
  {
    "text": "service that we care about so it's gathering the routes the auth controls it gets all the package info and a few",
    "start": "1513840",
    "end": "1520110"
  },
  {
    "text": "other pieces of metadata and we wanted to run just on instance startup so that way it's not consuming resources",
    "start": "1520110",
    "end": "1525240"
  },
  {
    "text": "throughout the lifetime of the instance and it's pretty predictable the footprint that it will have on people services and because of the information",
    "start": "1525240",
    "end": "1532740"
  },
  {
    "text": "that it's gathering we can really trigger some high signal alerts that we",
    "start": "1532740",
    "end": "1537870"
  },
  {
    "text": "can operate on so that way while services are figuring out their migration strategy over to the mesh we",
    "start": "1537870",
    "end": "1542940"
  },
  {
    "text": "can have a lot of confidence in their current posture so the way this all works is again we've got that central",
    "start": "1542940",
    "end": "1549210"
  },
  {
    "text": "billing service which just enables billing for every new thing we create and that just pings us that some new",
    "start": "1549210",
    "end": "1556440"
  },
  {
    "text": "service has been created so we can then go to GCS or s3 and we can set up permissions and roles for that service",
    "start": "1556440",
    "end": "1562590"
  },
  {
    "text": "to write to our bucket for the service owner they'll then incorporate this library into their",
    "start": "1562590",
    "end": "1568870"
  },
  {
    "text": "service and they'll as soon as an instance starts up there they ping are our buckets and we can we periodically",
    "start": "1568870",
    "end": "1577690"
  },
  {
    "text": "go to these buckets we aggregate the data we analyze it and then we can trigger any alerts and based on",
    "start": "1577690",
    "end": "1583360"
  },
  {
    "text": "different things that people have done like they might not be using our off libraries anymore or they might have opened up an endpoint with no auth",
    "start": "1583360",
    "end": "1590130"
  },
  {
    "text": "whatsoever and the reason we have this architecture rather than service a trying to reach back out to our",
    "start": "1590130",
    "end": "1595900"
  },
  {
    "text": "introspection back-end is kind of twofold one it's a little bit easier to use just sort of cloud native",
    "start": "1595900",
    "end": "1602560"
  },
  {
    "text": "authentication mechanisms with roles and permissions and the second one is because we wanted to keep this library",
    "start": "1602560",
    "end": "1608680"
  },
  {
    "text": "very simple and not have to manage State and understand one version might have",
    "start": "1608680",
    "end": "1613870"
  },
  {
    "text": "one version of a service might have 50 instances instead right on every single instance we have this thundering herd",
    "start": "1613870",
    "end": "1619690"
  },
  {
    "text": "problem where if we get a spike in traffic we might have thousands of instances suddenly spin up and so we",
    "start": "1619690",
    "end": "1625540"
  },
  {
    "text": "want them to write to something that's very highly available so that way we can guarantee we're still getting the data",
    "start": "1625540",
    "end": "1630760"
  },
  {
    "text": "we want yeah so going back over each of",
    "start": "1630760",
    "end": "1637750"
  },
  {
    "text": "the components that we've got we're able to gate our network traffic with the",
    "start": "1637750",
    "end": "1644230"
  },
  {
    "text": "firewall manager this effectively creates a perimeter around our infrastructure even when there isn't one",
    "start": "1644230",
    "end": "1651190"
  },
  {
    "text": "there by the cloud itself then we create the the proxy the proxy is what",
    "start": "1651190",
    "end": "1657940"
  },
  {
    "text": "providing that authentication and allowing that trusted path into our",
    "start": "1657940",
    "end": "1662950"
  },
  {
    "text": "infrastructure we have the API gateway in service mesh because that didn't",
    "start": "1662950",
    "end": "1669370"
  },
  {
    "text": "scale to our production level traffic but we still wanted all those same Garan security guarantees and we have an",
    "start": "1669370",
    "end": "1675700"
  },
  {
    "text": "introspection library to understand the internals of our applications that allows us to understand this the",
    "start": "1675700",
    "end": "1681730"
  },
  {
    "text": "changing state over time and know when we want to go look at an app if",
    "start": "1681730",
    "end": "1687040"
  },
  {
    "text": "something changes that's actually interesting to us we can actually ping them and trigger a security review instead of waiting for them to go",
    "start": "1687040",
    "end": "1693669"
  },
  {
    "text": "talk to us so going back over the goals we've created a system that's flexible",
    "start": "1693669",
    "end": "1700799"
  },
  {
    "text": "we don't require especially in the beginning we don't require any developer teams to abide by any specific language",
    "start": "1700799",
    "end": "1708190"
  },
  {
    "text": "or libraries or rules there when we get into the production environment there's",
    "start": "1708190",
    "end": "1714669"
  },
  {
    "text": "some caveats there but that's only for the production load the scalability we",
    "start": "1714669",
    "end": "1721119"
  },
  {
    "text": "need to or we've created this system to allow for the developers to just deploy",
    "start": "1721119",
    "end": "1730570"
  },
  {
    "text": "their app and it's immediately available they don't have to ping us we're not we",
    "start": "1730570",
    "end": "1736329"
  },
  {
    "text": "don't have an ops team that's setting this up it's granular we're getting real identity authentication authorization",
    "start": "1736329",
    "end": "1742269"
  },
  {
    "text": "instead of IPS or something that doesn't really get you that authentication you",
    "start": "1742269",
    "end": "1750369"
  },
  {
    "text": "need and it's automatable where we're again we're not there with the ops team",
    "start": "1750369",
    "end": "1756279"
  },
  {
    "text": "and setting things up for everybody so going back and looking at the the way to",
    "start": "1756279",
    "end": "1762669"
  },
  {
    "text": "do this from a clean slate you're moving into the cloud or you're in the cloud",
    "start": "1762669",
    "end": "1767799"
  },
  {
    "text": "you start by getting visibility into that infrastructure laying the foundation you you need to inventory and",
    "start": "1767799",
    "end": "1775570"
  },
  {
    "text": "see what you have it without that you don't you don't know where to start you",
    "start": "1775570",
    "end": "1780849"
  },
  {
    "text": "don't know what you're looking for to put a gate around then the first step",
    "start": "1780849",
    "end": "1786849"
  },
  {
    "text": "create start to create a perimeter firewall manager and you can start with IPs",
    "start": "1786849",
    "end": "1791919"
  },
  {
    "text": "that's how we started and that allows you to start to at least stop the",
    "start": "1791919",
    "end": "1798309"
  },
  {
    "text": "bleeding you you know what's coming into your network then you can add",
    "start": "1798309",
    "end": "1806159"
  },
  {
    "text": "granularity you can the IP based off is not granular enough especially for",
    "start": "1806159",
    "end": "1811959"
  },
  {
    "text": "services that require employees to authenticate so you can add this stateless proxy this allows you to to",
    "start": "1811959",
    "end": "1818559"
  },
  {
    "text": "really have authentication authorization controls that allow you to understand",
    "start": "1818559",
    "end": "1823959"
  },
  {
    "text": "and control what's going on in your and I went too far ahead and then as you",
    "start": "1823959",
    "end": "1834440"
  },
  {
    "text": "transition to the production environment in this world you're still doing a manual review but you've solved the",
    "start": "1834440",
    "end": "1840200"
  },
  {
    "text": "first half of our development lifecycle problem so I and a lot of those things might never get to the point where they",
    "start": "1840200",
    "end": "1846410"
  },
  {
    "text": "need to launch into the production world so it really reduces the ops load then",
    "start": "1846410",
    "end": "1852350"
  },
  {
    "text": "you can start by understanding what's in production this introspection library or",
    "start": "1852350",
    "end": "1857570"
  },
  {
    "text": "something that can see what artifacts are being used especially versions of artifacts are third-party artifacts that",
    "start": "1857570",
    "end": "1865850"
  },
  {
    "text": "allows you to see what's changing over time if security vulnerability is reported you're able to target the",
    "start": "1865850",
    "end": "1873940"
  },
  {
    "text": "applications there in production that need to be updated and then lastly you",
    "start": "1873940",
    "end": "1881780"
  },
  {
    "text": "can create a API gateway service mesh this really allows you to provide those",
    "start": "1881780",
    "end": "1887210"
  },
  {
    "text": "controls in production instead of seeing what's going on now you can actually",
    "start": "1887210",
    "end": "1892610"
  },
  {
    "text": "control what's going on yesö along the way as we were going through this there",
    "start": "1892610",
    "end": "1898850"
  },
  {
    "text": "are a few things we learned which I wanted to go over so one of the first",
    "start": "1898850",
    "end": "1904100"
  },
  {
    "text": "ones is when we started this whole thing we were kind of doing this whack-a-mole game of teams coming to us asking to be",
    "start": "1904100",
    "end": "1909560"
  },
  {
    "text": "reviewed a restaurant to find dangerous services and reviewing them and we realized that did not scale at all and",
    "start": "1909560",
    "end": "1915500"
  },
  {
    "text": "so instead we doubled down on engineering and really tried to build reliable and scalable services and",
    "start": "1915500",
    "end": "1924490"
  },
  {
    "text": "through that we've been able to accomplish much stronger security guarantees than just manually looking at",
    "start": "1924490",
    "end": "1930230"
  },
  {
    "text": "things and reviewing yeah reviewing services the next one was gaining a",
    "start": "1930230",
    "end": "1935900"
  },
  {
    "text": "central hook into the fleet early was incredibly valuable because it it began to stop the bleeding of inventory we",
    "start": "1935900",
    "end": "1942440"
  },
  {
    "text": "were able to go back and we now had a finite number of things to go back in inventory and this allowed us to just",
    "start": "1942440",
    "end": "1948110"
  },
  {
    "text": "see what it is that we have running and so in a similar note and we think",
    "start": "1948110",
    "end": "1954740"
  },
  {
    "text": "visibility is it's much more important to get visibility were beginning to enforce things one",
    "start": "1954740",
    "end": "1961410"
  },
  {
    "text": "because it allows you to figure out what's the right type of enforcement you should do you can start to understand what your fleet looks like and secondly",
    "start": "1961410",
    "end": "1969150"
  },
  {
    "text": "it lets you just prioritize what should be gated first if we think about",
    "start": "1969150",
    "end": "1974970"
  },
  {
    "text": "security very fundamentally like a security problem is just a developer making an assumption in code and not",
    "start": "1974970",
    "end": "1981030"
  },
  {
    "text": "validating that assumption and so what we've tried to do with this entire architecture is keep things very simple",
    "start": "1981030",
    "end": "1987510"
  },
  {
    "text": "because if things are simple we can easily understand what the assumptions are that we're making and then take these very simple just artifacts that",
    "start": "1987510",
    "end": "1995820"
  },
  {
    "text": "we've created and deploy them really broadly and through that we're able to guarantee much stronger things about our",
    "start": "1995820",
    "end": "2002600"
  },
  {
    "text": "security posture than putting a black box up in front instead of hoping it's defending us from attacks and finally",
    "start": "2002600",
    "end": "2010340"
  },
  {
    "text": "we've really tried to offer engineering teams at carat throughout this entire process so we wanted to build things",
    "start": "2010340",
    "end": "2015559"
  },
  {
    "text": "that are reliable we wanted to abstract away a lot of the authentication and authorization works they don't have to",
    "start": "2015559",
    "end": "2020570"
  },
  {
    "text": "think about that with things like the introspection library because it's getting all the routes and the auth controls it's basically self documenting",
    "start": "2020570",
    "end": "2027559"
  },
  {
    "text": "a lot of their api's for them which engineering teams seem to like and yeah",
    "start": "2027559",
    "end": "2032900"
  },
  {
    "text": "by offering them a carat we really galvanize support for this entire thing and yeah got it to the scale it's a snap",
    "start": "2032900",
    "end": "2042820"
  },
  {
    "start": "2042000",
    "end": "2218000"
  },
  {
    "text": "so with that we can now sleep better at night yeah we wanted to spend some time",
    "start": "2042820",
    "end": "2050179"
  },
  {
    "text": "doing Q&A so if you guys have any questions we'd be happy to answer them thank you all",
    "start": "2050179",
    "end": "2057520"
  },
  {
    "text": "there should be mics somewhere in the middle there",
    "start": "2061660",
    "end": "2067510"
  },
  {
    "text": "okay so which technology is used in the stateless boxing sir in the stateless",
    "start": "2075929",
    "end": "2084429"
  },
  {
    "text": "proxy yet yeah we basically wrote a somewhat simple Java proxy which just",
    "start": "2084429",
    "end": "2092350"
  },
  {
    "text": "runs on kubernetes and yeah there are",
    "start": "2092350",
    "end": "2098980"
  },
  {
    "text": "some open source versions that would do it on boy itself could potentially be used and then there's a bitly OAuth",
    "start": "2098980",
    "end": "2105910"
  },
  {
    "text": "proxy that we we had used in the past but we don't we don't use that one anymore yeah hey I can't see so you're",
    "start": "2105910",
    "end": "2117160"
  },
  {
    "text": "gonna have time so yeah we kind of went",
    "start": "2117160",
    "end": "2122920"
  },
  {
    "text": "through a different scenario basically our infrastructure guys built services",
    "start": "2122920",
    "end": "2131260"
  },
  {
    "text": "that that projects can plug into and so",
    "start": "2131260",
    "end": "2136750"
  },
  {
    "text": "they restricted what networks for instance that the each project would be",
    "start": "2136750",
    "end": "2144220"
  },
  {
    "text": "able to plug into and then it provided the underlying network services to those",
    "start": "2144220",
    "end": "2149650"
  },
  {
    "text": "projects is that something you guys thought about as well yeah so looking at",
    "start": "2149650",
    "end": "2155440"
  },
  {
    "text": "at least looking at GCP I that sounds much more like they're shared networking",
    "start": "2155440",
    "end": "2160720"
  },
  {
    "text": "model and at least when we started that wasn't available yet and now that it is",
    "start": "2160720",
    "end": "2167440"
  },
  {
    "text": "available it is what we were doing in our production world one of the problems we see there is that it things like that",
    "start": "2167440",
    "end": "2175090"
  },
  {
    "text": "might be available in one cloud but not another so we've typically gone with the whatever the lowest common denominator across the clouds in our case AWS GSP so",
    "start": "2175090",
    "end": "2183730"
  },
  {
    "text": "even if something's available in one of the clouds we might not use it just because we also want the same thing in",
    "start": "2183730",
    "end": "2189940"
  },
  {
    "text": "another cloud that doesn't also provide that I think AWS is coming out with a shared V PC model or they have one that",
    "start": "2189940",
    "end": "2198730"
  },
  {
    "text": "once that's available and tested we could consolidate everything and use that but we also have to enforce that",
    "start": "2198730",
    "end": "2206410"
  },
  {
    "text": "like things like App Engine aren't used because the aren't part of this shared Network model",
    "start": "2206410",
    "end": "2211869"
  },
  {
    "text": "and we have a lot of things on the App Engine a lot of developer experience on App Engine so I don't think we're ever getting away from that world okay and",
    "start": "2211869",
    "end": "2219490"
  },
  {
    "start": "2218000",
    "end": "2605000"
  },
  {
    "text": "then I was interested in your enumeration project like how do you",
    "start": "2219490",
    "end": "2225550"
  },
  {
    "text": "figure out everything that's running in your service is that running in a project by itself then yeah so the way",
    "start": "2225550",
    "end": "2234330"
  },
  {
    "text": "again now that one actually has to be different per cloud just because it's dealing directly with the API is in the",
    "start": "2234330",
    "end": "2240460"
  },
  {
    "text": "cloud so in AWS I believe they provide you like a JSON dump I forget the name",
    "start": "2240460",
    "end": "2247150"
  },
  {
    "text": "of it but they just give you a JSON dump of everything it's deployed in your org and in GCP we've created a project or an",
    "start": "2247150",
    "end": "2256510"
  },
  {
    "text": "application that can scan everything everything we care about and that has",
    "start": "2256510",
    "end": "2262270"
  },
  {
    "text": "hooks to hang things like our firewall manager to provide or to get that back",
    "start": "2262270",
    "end": "2268570"
  },
  {
    "text": "down if anything happens yeah once we created that billing service as well as just enables billing that really became",
    "start": "2268570",
    "end": "2276250"
  },
  {
    "text": "a choke point for us to identify at least at a project level everything that exists because it just forced all the",
    "start": "2276250",
    "end": "2281950"
  },
  {
    "text": "developers to come to us and say this is my service please turn billing on for me yeah in GCP also the the I am works in an",
    "start": "2281950",
    "end": "2290470"
  },
  {
    "text": "Oracle so you can give access across everything where a name to AWS doesn't quite work that way you after that",
    "start": "2290470",
    "end": "2295600"
  },
  {
    "text": "assume roles into all the other accounts so it's a little more difficult in Natal us to make that work you know with a",
    "start": "2295600",
    "end": "2301900"
  },
  {
    "text": "central service okay thanks yeah I what do you see the next evolution of your",
    "start": "2301900",
    "end": "2308740"
  },
  {
    "text": "security model maybe building in some olivine capability to make sure you're compliant sure so yeah we do have sorry",
    "start": "2308740",
    "end": "2317770"
  },
  {
    "text": "this is a it this kind of thing to focus on you're over there maybe yeah",
    "start": "2317770",
    "end": "2323020"
  },
  {
    "text": "yeah so what we've built is very focused on authentication and authorization or what we've presented rather is very",
    "start": "2323020",
    "end": "2328030"
  },
  {
    "text": "focused on that there's a lot of other components we've built around these services to do things like auditing one",
    "start": "2328030",
    "end": "2335950"
  },
  {
    "text": "potential thing we've talked about is more establishing a sense of user presence",
    "start": "2335950",
    "end": "2341960"
  },
  {
    "text": "meaning if one service wants to talk to another service on behalf of a user and",
    "start": "2341960",
    "end": "2347450"
  },
  {
    "text": "we can validate that this really is the user they're supposed to be talking about and they can't impersonate a user",
    "start": "2347450",
    "end": "2352610"
  },
  {
    "text": "along the way those are some of the things we're exploring there yeah the",
    "start": "2352610",
    "end": "2358730"
  },
  {
    "text": "other side of the auditing side of things like Sox compliance comes in on the I am and intrument side our central",
    "start": "2358730",
    "end": "2366170"
  },
  {
    "text": "tool that does that which we really didn't get much into in this talk that that's like what's providing the ACL",
    "start": "2366170",
    "end": "2371920"
  },
  {
    "text": "that ACL service we talked about so that's providing all the Ackles for everything that the proxy is managing",
    "start": "2371920",
    "end": "2378530"
  },
  {
    "text": "access to but that that's kind of separate from what we discussed I guess",
    "start": "2378530",
    "end": "2383900"
  },
  {
    "text": "and real quickly how long did it take you to build this and how many people yeah that's a good question we started",
    "start": "2383900",
    "end": "2391550"
  },
  {
    "text": "out on this probably close to three years ago yeah yeah and it's it's it's",
    "start": "2391550",
    "end": "2399590"
  },
  {
    "text": "come and got like some teams have come and gone depending to help out depending on what component they might need",
    "start": "2399590",
    "end": "2405880"
  },
  {
    "text": "especially now with the service match that's become a much larger component than even just security that's our",
    "start": "2405880",
    "end": "2412400"
  },
  {
    "text": "internal infrastructure teams working on that so yeah it's it's a lot of people",
    "start": "2412400",
    "end": "2418340"
  },
  {
    "text": "and a lot of it's been a lot of time but I yeah we've done it gradually to kind",
    "start": "2418340",
    "end": "2424280"
  },
  {
    "text": "of stop the bleeding and make sure we're not spending all our all of our time on that ops load and manual reviews in the",
    "start": "2424280",
    "end": "2430160"
  },
  {
    "text": "process yeah and then in terms of the number of people we've allocated to this so the firewall manager I think that was",
    "start": "2430160",
    "end": "2436280"
  },
  {
    "text": "just the two of us yeah I don't think anyone else worked on that the stateless",
    "start": "2436280",
    "end": "2441640"
  },
  {
    "text": "authentic people for the course of a year or so and then granted we were",
    "start": "2441640",
    "end": "2449750"
  },
  {
    "text": "throughout this process we didn't start with the designs that we have right now we started with very different designs and so that along gates this process",
    "start": "2449750",
    "end": "2456140"
  },
  {
    "text": "quite a bit and we tried out a lot of other things as I kind of talked about at the beginning the introspection",
    "start": "2456140",
    "end": "2462410"
  },
  {
    "text": "library is about a year or so the",
    "start": "2462410",
    "end": "2467690"
  },
  {
    "text": "hardest part is just integrating this with all these services because it does require developers to add the sentence",
    "start": "2467690",
    "end": "2474200"
  },
  {
    "text": "we tried to reduce the complexity quite a bit and also architect the thing appropriately we",
    "start": "2474200",
    "end": "2479610"
  },
  {
    "text": "again went through a bunch of different architectures for that that's three to four engineers working on that one and",
    "start": "2479610",
    "end": "2484620"
  },
  {
    "text": "then the service meshes the really big piece yeah so the service mesh doing things outside of the in process or in",
    "start": "2484620",
    "end": "2492240"
  },
  {
    "text": "app libraries really speeds up our development time we only have to write authentication for one code base instead",
    "start": "2492240",
    "end": "2499260"
  },
  {
    "text": "of providing a library to the entire org that writes in four or five languages at",
    "start": "2499260",
    "end": "2504840"
  },
  {
    "text": "scale so that's allowed us to focus on fewer things and do more yeah thank you",
    "start": "2504840",
    "end": "2514470"
  },
  {
    "text": "yeah Hey so you guys you built your file",
    "start": "2514470",
    "end": "2520560"
  },
  {
    "text": "manager by yourself yeah yeah so the",
    "start": "2520560",
    "end": "2526820"
  },
  {
    "text": "it's basically another it's just an app engine app it's scanning our firewall",
    "start": "2526820",
    "end": "2532500"
  },
  {
    "text": "State across our infrastructure and it has it known state internally and",
    "start": "2532500",
    "end": "2537540"
  },
  {
    "text": "because they're providing all these api's it's relatively simple to just",
    "start": "2537540",
    "end": "2542550"
  },
  {
    "text": "scan those api's and then reset anything that isn't in the appropriate state",
    "start": "2542550",
    "end": "2549380"
  },
  {
    "text": "what's up probably you have a lot of projects in GCP so tell which project",
    "start": "2549950",
    "end": "2556290"
  },
  {
    "text": "what's open and what's not yeah so that the access model we have is like owners of projects and in at least in GCP this",
    "start": "2556290",
    "end": "2565080"
  },
  {
    "text": "is so anybody that needs to create an isolated",
    "start": "2565080",
    "end": "2570200"
  },
  {
    "text": "set of resources would create a new project they would then become the the resource owner for that project and our",
    "start": "2570200",
    "end": "2577710"
  },
  {
    "text": "firewall management tool is able to see that so yeah we have on the order of hundreds of projects thanks",
    "start": "2577710",
    "end": "2586490"
  },
  {
    "text": "any other questions",
    "start": "2588849",
    "end": "2592839"
  },
  {
    "text": "oh cool if you available for yeah we're happy to hang around and chat if people",
    "start": "2593950",
    "end": "2599920"
  },
  {
    "text": "want to thank you so much for for coming [Applause]",
    "start": "2599920",
    "end": "2607229"
  }
]