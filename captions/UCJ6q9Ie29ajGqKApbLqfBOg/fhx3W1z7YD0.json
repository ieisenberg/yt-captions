[
  {
    "text": "thank you good afternoon",
    "start": "2840",
    "end": "4839"
  },
  {
    "text": "everyone and this is this talk is about",
    "start": "4839",
    "end": "7520"
  },
  {
    "text": "routine enjoy it so a little bit about",
    "start": "7520",
    "end": "10880"
  },
  {
    "text": "us uh my name is jiming I have a PhD",
    "start": "10880",
    "end": "14400"
  },
  {
    "text": "from North Western University I",
    "start": "14400",
    "end": "16800"
  },
  {
    "text": "specialize in Colonel security and shin",
    "start": "16800",
    "end": "20720"
  },
  {
    "text": "is my advisor who is associated",
    "start": "20720",
    "end": "23080"
  },
  {
    "text": "professor at North B University Jo and K",
    "start": "23080",
    "end": "27160"
  },
  {
    "text": "are from C Jo is the principal",
    "start": "27160",
    "end": "30119"
  },
  {
    "text": "researcher and curly is the chief",
    "start": "30119",
    "end": "33800"
  },
  {
    "text": "security",
    "start": "33800",
    "end": "36200"
  },
  {
    "text": "officer so we are going to talk about I",
    "start": "38399",
    "end": "41239"
  },
  {
    "text": "ring what is I ring I ring is designed",
    "start": "41239",
    "end": "45320"
  },
  {
    "text": "to allow efficient asynchronized IO",
    "start": "45320",
    "end": "48160"
  },
  {
    "text": "operations it provides a way for",
    "start": "48160",
    "end": "50320"
  },
  {
    "text": "applications to create IO op operations",
    "start": "50320",
    "end": "53239"
  },
  {
    "text": "without the need to interact with kernel",
    "start": "53239",
    "end": "55760"
  },
  {
    "text": "constantly which can improve performance",
    "start": "55760",
    "end": "58239"
  },
  {
    "text": "and scalability with I ring applications",
    "start": "58239",
    "end": "62239"
  },
  {
    "text": "can batch their",
    "start": "62239",
    "end": "63960"
  },
  {
    "text": "submissions into the uh submission queue",
    "start": "63960",
    "end": "67200"
  },
  {
    "text": "and fetch their completions from the",
    "start": "67200",
    "end": "69320"
  },
  {
    "text": "completion queue which reduce the",
    "start": "69320",
    "end": "71360"
  },
  {
    "text": "overhead involved with with system",
    "start": "71360",
    "end": "74439"
  },
  {
    "text": "cost and this uring is a relative",
    "start": "74439",
    "end": "77799"
  },
  {
    "text": "relatively new functionality in kernel",
    "start": "77799",
    "end": "80200"
  },
  {
    "text": "so it's still under very active",
    "start": "80200",
    "end": "83159"
  },
  {
    "text": "development and all this sounds pretty",
    "start": "83159",
    "end": "85479"
  },
  {
    "text": "good but iine is actually very bad for",
    "start": "85479",
    "end": "88880"
  },
  {
    "text": "security and this is a tweet posted by",
    "start": "88880",
    "end": "91479"
  },
  {
    "text": "sarad who organizes this KCF",
    "start": "91479",
    "end": "94960"
  },
  {
    "text": "vrp why are why are ring so",
    "start": "94960",
    "end": "98920"
  },
  {
    "text": "bad it turned out that I I ring is very",
    "start": "98920",
    "end": "102520"
  },
  {
    "text": "buggy it's under very active development",
    "start": "102520",
    "end": "105399"
  },
  {
    "text": "by L time it's very vulnerable to",
    "start": "105399",
    "end": "108920"
  },
  {
    "text": "attacks if we check out the bug reports",
    "start": "108920",
    "end": "111960"
  },
  {
    "text": "on SB just in the fix bu category there",
    "start": "111960",
    "end": "115640"
  },
  {
    "text": "are more than 160 reports that's has",
    "start": "115640",
    "end": "118039"
  },
  {
    "text": "been fixed and you can can also find",
    "start": "118039",
    "end": "120920"
  },
  {
    "text": "more bugs in the open category and",
    "start": "120920",
    "end": "123719"
  },
  {
    "text": "probably some some of the bugs are still",
    "start": "123719",
    "end": "127119"
  },
  {
    "text": "exploitable but not fixed",
    "start": "127119",
    "end": "130000"
  },
  {
    "text": "yet and with with so many bugs the",
    "start": "130000",
    "end": "133400"
  },
  {
    "text": "exploitation against iine is also very",
    "start": "133400",
    "end": "138200"
  },
  {
    "text": "active those are some of the rops about",
    "start": "139000",
    "end": "142080"
  },
  {
    "text": "exploiting our RBX we have rops posted",
    "start": "142080",
    "end": "146599"
  },
  {
    "text": "by flat security a very um beginning",
    "start": "146599",
    "end": "150400"
  },
  {
    "text": "rub on exploiting a ring and a r up from",
    "start": "150400",
    "end": "154319"
  },
  {
    "text": "starlab disclosing a new exploting",
    "start": "154319",
    "end": "157040"
  },
  {
    "text": "technique to the new box to the new iine",
    "start": "157040",
    "end": "160760"
  },
  {
    "text": "and we also have um put an iine on it",
    "start": "160760",
    "end": "164360"
  },
  {
    "text": "exploiting the Linux kernel from chopy",
    "start": "164360",
    "end": "167400"
  },
  {
    "text": "this ROP and the one from aaru and pql",
    "start": "167400",
    "end": "172239"
  },
  {
    "text": "has very detailed description of how our",
    "start": "172239",
    "end": "175000"
  },
  {
    "text": "urine works and also we have a r up a",
    "start": "175000",
    "end": "178640"
  },
  {
    "text": "journey to the D POS posit back which",
    "start": "178640",
    "end": "182120"
  },
  {
    "text": "describes IB that is very similar to the",
    "start": "182120",
    "end": "185080"
  },
  {
    "text": "one I'm going to talk about today and we",
    "start": "185080",
    "end": "188200"
  },
  {
    "text": "have a rub about applying dir C",
    "start": "188200",
    "end": "191640"
  },
  {
    "text": "technique in exploiting our",
    "start": "191640",
    "end": "194239"
  },
  {
    "text": "INB I believe there are more than more",
    "start": "194239",
    "end": "197000"
  },
  {
    "text": "any other there are more other rubs that",
    "start": "197000",
    "end": "199599"
  },
  {
    "text": "are not included here but the thing is",
    "start": "199599",
    "end": "202159"
  },
  {
    "text": "the reach resource of exploiting ouring",
    "start": "202159",
    "end": "205360"
  },
  {
    "text": "buxs drives more people into finding",
    "start": "205360",
    "end": "207760"
  },
  {
    "text": "ouring buxs and exploiting them",
    "start": "207760",
    "end": "211680"
  },
  {
    "text": "in June this year Google post a blog",
    "start": "212560",
    "end": "215360"
  },
  {
    "text": "about the lessons learned from the",
    "start": "215360",
    "end": "218040"
  },
  {
    "text": "submissions to KCF vrp and the statistic",
    "start": "218040",
    "end": "222439"
  },
  {
    "text": "show that as of June 2023 60% of",
    "start": "222439",
    "end": "226560"
  },
  {
    "text": "submissions targeted aine and around1",
    "start": "226560",
    "end": "229879"
  },
  {
    "text": "million US dollars were paid to those",
    "start": "229879",
    "end": "232280"
  },
  {
    "text": "bus so from the right HS the and the",
    "start": "232280",
    "end": "236280"
  },
  {
    "text": "submissions to kcdp we see that how",
    "start": "236280",
    "end": "239200"
  },
  {
    "text": "active the exploitation against our Ur",
    "start": "239200",
    "end": "241480"
  },
  {
    "text": "is and at the same time all the public",
    "start": "241480",
    "end": "243720"
  },
  {
    "text": "exploits targeted desktop Linux",
    "start": "243720",
    "end": "247720"
  },
  {
    "text": "kernel and to mitigate the active",
    "start": "247920",
    "end": "250680"
  },
  {
    "text": "exploitation Google disabled iine",
    "start": "250680",
    "end": "253159"
  },
  {
    "text": "subsystem on chromeos and there are",
    "start": "253159",
    "end": "255400"
  },
  {
    "text": "servers on production and for GK",
    "start": "255400",
    "end": "259400"
  },
  {
    "text": "autopilot they are investigating if they",
    "start": "259400",
    "end": "262040"
  },
  {
    "text": "could disable I ring as well and for",
    "start": "262040",
    "end": "265400"
  },
  {
    "text": "Android they have taken some measures to",
    "start": "265400",
    "end": "268199"
  },
  {
    "text": "restrict the access to urine those",
    "start": "268199",
    "end": "271120"
  },
  {
    "text": "measures include using setcom to fill",
    "start": "271120",
    "end": "274479"
  },
  {
    "text": "out our urine C calls from the sandbox",
    "start": "274479",
    "end": "277440"
  },
  {
    "text": "and using S Linux to limit the",
    "start": "277440",
    "end": "281039"
  },
  {
    "text": "access but it's still accessible from",
    "start": "281039",
    "end": "284520"
  },
  {
    "text": "privilege contacts for example ADB or",
    "start": "284520",
    "end": "287639"
  },
  {
    "text": "some system",
    "start": "287639",
    "end": "290320"
  },
  {
    "text": "service so we could still attack Android",
    "start": "290360",
    "end": "293880"
  },
  {
    "text": "kernel with iing box because there are",
    "start": "293880",
    "end": "296880"
  },
  {
    "text": "just so many box there are a lot of",
    "start": "296880",
    "end": "299240"
  },
  {
    "text": "potential potential for for",
    "start": "299240",
    "end": "301560"
  },
  {
    "text": "hackers and exploting androy kernel",
    "start": "301560",
    "end": "304400"
  },
  {
    "text": "Could Be Fun and Profit Google claim to",
    "start": "304400",
    "end": "307520"
  },
  {
    "text": "rewards up to $250,000 us for colel",
    "start": "307520",
    "end": "311560"
  },
  {
    "text": "privileg escalation",
    "start": "311560",
    "end": "314479"
  },
  {
    "text": "exploit but sadly we don't have any",
    "start": "314639",
    "end": "317199"
  },
  {
    "text": "public R up about exploiting our earing",
    "start": "317199",
    "end": "319639"
  },
  {
    "text": "bux on Android so today's talk is about",
    "start": "319639",
    "end": "322919"
  },
  {
    "text": "how I P the Android kernel with an i",
    "start": "322919",
    "end": "327720"
  },
  {
    "text": "rug this is a c number of the bug um",
    "start": "327759",
    "end": "331639"
  },
  {
    "text": "there's no difference than any other I",
    "start": "331639",
    "end": "334240"
  },
  {
    "text": "bu you just interact with the I",
    "start": "334240",
    "end": "336600"
  },
  {
    "text": "subsystem and you can somehow trigger a",
    "start": "336600",
    "end": "339280"
  },
  {
    "text": "very stable inval free likely it's very",
    "start": "339280",
    "end": "342199"
  },
  {
    "text": "stable and I use this bu to pawn Google",
    "start": "342199",
    "end": "345319"
  },
  {
    "text": "pixel 6 and Samsung s22 in last last",
    "start": "345319",
    "end": "349520"
  },
  {
    "text": "year in",
    "start": "349520",
    "end": "350840"
  },
  {
    "text": "2022 and the bug was quickly fixed on",
    "start": "350840",
    "end": "353759"
  },
  {
    "text": "July 20 29th after I reported the",
    "start": "353759",
    "end": "358280"
  },
  {
    "text": "back so so a little bit background to",
    "start": "358280",
    "end": "361919"
  },
  {
    "text": "understand the bug one of the great",
    "start": "361919",
    "end": "364520"
  },
  {
    "text": "thing of our uring is that it supports",
    "start": "364520",
    "end": "367560"
  },
  {
    "text": "asynchronized IO operations you could",
    "start": "367560",
    "end": "370039"
  },
  {
    "text": "submit different requests to the",
    "start": "370039",
    "end": "372240"
  },
  {
    "text": "submission queue and each request could",
    "start": "372240",
    "end": "374720"
  },
  {
    "text": "be consumed and executed by konel",
    "start": "374720",
    "end": "377680"
  },
  {
    "text": "asynchronously so konel will help you",
    "start": "377680",
    "end": "380639"
  },
  {
    "text": "exq request in the background Reading",
    "start": "380639",
    "end": "383319"
  },
  {
    "text": "Writing files Sending message and so on",
    "start": "383319",
    "end": "386479"
  },
  {
    "text": "since it's it's done by kernel so there",
    "start": "386479",
    "end": "388960"
  },
  {
    "text": "should be something to prevent the",
    "start": "388960",
    "end": "391520"
  },
  {
    "text": "privilege escalation and to properly",
    "start": "391520",
    "end": "394319"
  },
  {
    "text": "manage the the Privileges and the access",
    "start": "394319",
    "end": "397199"
  },
  {
    "text": "control each request will have like its",
    "start": "397199",
    "end": "400919"
  },
  {
    "text": "own identity and this identity",
    "start": "400919",
    "end": "403759"
  },
  {
    "text": "represents the privilege of the process",
    "start": "403759",
    "end": "406000"
  },
  {
    "text": "that submitted in in the request and",
    "start": "406000",
    "end": "408639"
  },
  {
    "text": "when colel help you execute the the",
    "start": "408639",
    "end": "411080"
  },
  {
    "text": "operations you will use the identity the",
    "start": "411080",
    "end": "413880"
  },
  {
    "text": "process provided to represent the",
    "start": "413880",
    "end": "417879"
  },
  {
    "text": "privilege so let's look look at",
    "start": "418400",
    "end": "421240"
  },
  {
    "text": "implementation this identity is stored",
    "start": "421240",
    "end": "423599"
  },
  {
    "text": "in a structure called I urine task which",
    "start": "423599",
    "end": "426240"
  },
  {
    "text": "contains a nested identity structure in",
    "start": "426240",
    "end": "429120"
  },
  {
    "text": "an identity",
    "start": "429120",
    "end": "430440"
  },
  {
    "text": "pointer the kernel by default will use",
    "start": "430440",
    "end": "433360"
  },
  {
    "text": "this nested identity structure and it",
    "start": "433360",
    "end": "436000"
  },
  {
    "text": "will in initialize it",
    "start": "436000",
    "end": "438440"
  },
  {
    "text": "first and this identity pointer will",
    "start": "438440",
    "end": "440919"
  },
  {
    "text": "reference to the N hit identity um",
    "start": "440919",
    "end": "444520"
  },
  {
    "text": "structure the design helps reduce memory",
    "start": "444520",
    "end": "447240"
  },
  {
    "text": "fragmentation so you don't have to",
    "start": "447240",
    "end": "448879"
  },
  {
    "text": "allocate new me Hep memory for identity",
    "start": "448879",
    "end": "452120"
  },
  {
    "text": "instead you can just reference the",
    "start": "452120",
    "end": "454319"
  },
  {
    "text": "identity pointer to the I urine",
    "start": "454319",
    "end": "457000"
  },
  {
    "text": "structure itself as static",
    "start": "457000",
    "end": "460680"
  },
  {
    "text": "memory and the identity task structure",
    "start": "461879",
    "end": "465080"
  },
  {
    "text": "is Task specific so it's referenced by",
    "start": "465080",
    "end": "468479"
  },
  {
    "text": "the task so that every time you can find",
    "start": "468479",
    "end": "471280"
  },
  {
    "text": "iing through the task",
    "start": "471280",
    "end": "474680"
  },
  {
    "text": "structure the identity has a mechanism",
    "start": "474800",
    "end": "477680"
  },
  {
    "text": "of copy on write so if the identity",
    "start": "477680",
    "end": "480520"
  },
  {
    "text": "changes meaning that's meaning something",
    "start": "480520",
    "end": "482599"
  },
  {
    "text": "like you change your uid by set uid or",
    "start": "482599",
    "end": "485840"
  },
  {
    "text": "enter a new Nam space the identity for I",
    "start": "485840",
    "end": "489560"
  },
  {
    "text": "ring will will need to be updated as",
    "start": "489560",
    "end": "491639"
  },
  {
    "text": "well and at this time a new identity",
    "start": "491639",
    "end": "494199"
  },
  {
    "text": "will be created through TP allocation",
    "start": "494199",
    "end": "497120"
  },
  {
    "text": "and being initialized with updated",
    "start": "497120",
    "end": "499120"
  },
  {
    "text": "process",
    "start": "499120",
    "end": "501240"
  },
  {
    "text": "information and this is illustration of",
    "start": "501240",
    "end": "505080"
  },
  {
    "text": "how the memory layout looks like the",
    "start": "505080",
    "end": "507560"
  },
  {
    "text": "identity pointer will now reference to",
    "start": "507560",
    "end": "509680"
  },
  {
    "text": "the new identity on",
    "start": "509680",
    "end": "512680"
  },
  {
    "text": "Heap this Co snippit show how curent",
    "start": "514479",
    "end": "517599"
  },
  {
    "text": "updates the identity and this is where",
    "start": "517599",
    "end": "520560"
  },
  {
    "text": "the bug happened the L urine task",
    "start": "520560",
    "end": "523240"
  },
  {
    "text": "structure is retrieved from current",
    "start": "523240",
    "end": "526000"
  },
  {
    "text": "task and then it checks if the identity",
    "start": "526000",
    "end": "529360"
  },
  {
    "text": "in iing task and the requests are",
    "start": "529360",
    "end": "532399"
  },
  {
    "text": "referencing to the N structure if it's",
    "start": "532399",
    "end": "535360"
  },
  {
    "text": "true and the reference count becomes",
    "start": "535360",
    "end": "537839"
  },
  {
    "text": "zero the m will be care for it just like",
    "start": "537839",
    "end": "541000"
  },
  {
    "text": "the Comon showed here this part tries to",
    "start": "541000",
    "end": "544680"
  },
  {
    "text": "drop the identity reference reference",
    "start": "544680",
    "end": "546760"
  },
  {
    "text": "count if it's from",
    "start": "546760",
    "end": "549839"
  },
  {
    "text": "Heap and and the new identity which is",
    "start": "549839",
    "end": "553040"
  },
  {
    "text": "the ID variable here will be assigned",
    "start": "553040",
    "end": "555920"
  },
  {
    "text": "all this looks fine right remember that",
    "start": "555920",
    "end": "559279"
  },
  {
    "text": "the identity is designed to support",
    "start": "559279",
    "end": "561279"
  },
  {
    "text": "asynchronized IO and the request here",
    "start": "561279",
    "end": "564680"
  },
  {
    "text": "represents a request submitted by a task",
    "start": "564680",
    "end": "568120"
  },
  {
    "text": "previously",
    "start": "568120",
    "end": "570000"
  },
  {
    "text": "the question is what if the request is",
    "start": "570000",
    "end": "572440"
  },
  {
    "text": "submitted by one thread and the copy on",
    "start": "572440",
    "end": "575160"
  },
  {
    "text": "right is done through another different",
    "start": "575160",
    "end": "577880"
  },
  {
    "text": "thread in this scenario the urine task",
    "start": "577880",
    "end": "581640"
  },
  {
    "text": "the urine task object which is a tctx",
    "start": "581640",
    "end": "584920"
  },
  {
    "text": "variable here is from a different task",
    "start": "584920",
    "end": "587800"
  },
  {
    "text": "than it",
    "start": "587800",
    "end": "589880"
  },
  {
    "text": "requests then the condition here could",
    "start": "589880",
    "end": "592160"
  },
  {
    "text": "be false just because the identity never",
    "start": "592160",
    "end": "594839"
  },
  {
    "text": "changed and it's not for the",
    "start": "594839",
    "end": "598120"
  },
  {
    "text": "Heap",
    "start": "598120",
    "end": "599720"
  },
  {
    "text": "because the request is submitted by",
    "start": "599720",
    "end": "601399"
  },
  {
    "text": "threat a so it's identity is actually",
    "start": "601399",
    "end": "604200"
  },
  {
    "text": "threat A's Ned identity which doesn't",
    "start": "604200",
    "end": "607320"
  },
  {
    "text": "reference to S B's n",
    "start": "607320",
    "end": "609720"
  },
  {
    "text": "identity so the condition here could be",
    "start": "609720",
    "end": "612120"
  },
  {
    "text": "F could be true",
    "start": "612120",
    "end": "613600"
  },
  {
    "text": "sorry and if the reference count becomes",
    "start": "613600",
    "end": "616920"
  },
  {
    "text": "zero the K3 will free the threat a",
    "start": "616920",
    "end": "620079"
  },
  {
    "text": "nexted identity which is the I task",
    "start": "620079",
    "end": "624519"
  },
  {
    "text": "object and this is how the bu happens",
    "start": "624519",
    "end": "627800"
  },
  {
    "text": "the figure here ill the memory layout",
    "start": "627800",
    "end": "630959"
  },
  {
    "text": "when this invalid free happens by",
    "start": "630959",
    "end": "633800"
  },
  {
    "text": "freeing the identity the colonel will",
    "start": "633800",
    "end": "636839"
  },
  {
    "text": "free the Ling task of thread B in the",
    "start": "636839",
    "end": "639399"
  },
  {
    "text": "middle and it's in the kmog 256 memory",
    "start": "639399",
    "end": "643920"
  },
  {
    "text": "cache that's a memory corruption",
    "start": "643920",
    "end": "646120"
  },
  {
    "text": "capability we obtained from the",
    "start": "646120",
    "end": "649880"
  },
  {
    "text": "B how do we exploit this buug on",
    "start": "651519",
    "end": "655639"
  },
  {
    "text": "Android doing cural exploitation on",
    "start": "655639",
    "end": "658160"
  },
  {
    "text": "Android is not easy we have much more",
    "start": "658160",
    "end": "661639"
  },
  {
    "text": "restricted access on Android we don't",
    "start": "661639",
    "end": "664399"
  },
  {
    "text": "have username space so a lot of objects",
    "start": "664399",
    "end": "667800"
  },
  {
    "text": "behind the username say is not available",
    "start": "667800",
    "end": "671360"
  },
  {
    "text": "we don't have fuse user F FD so",
    "start": "671360",
    "end": "675000"
  },
  {
    "text": "techniques rely on those two uh",
    "start": "675000",
    "end": "678079"
  },
  {
    "text": "mechanism is not useful we don't have",
    "start": "678079",
    "end": "681040"
  },
  {
    "text": "commonly used message message or key or",
    "start": "681040",
    "end": "684880"
  },
  {
    "text": "user key payload objects like we have on",
    "start": "684880",
    "end": "687800"
  },
  {
    "text": "desktop Linux in short the choice of",
    "start": "687800",
    "end": "691320"
  },
  {
    "text": "this call that could be used for",
    "start": "691320",
    "end": "693760"
  },
  {
    "text": "exploitation or androoid is very",
    "start": "693760",
    "end": "697959"
  },
  {
    "text": "limited the good thing is we have pipe",
    "start": "698480",
    "end": "701720"
  },
  {
    "text": "subsystem on Android and the pipe sub",
    "start": "701720",
    "end": "705480"
  },
  {
    "text": "system for the P sub system we have an",
    "start": "705480",
    "end": "709079"
  },
  {
    "text": "object called P buffer which is an",
    "start": "709079",
    "end": "711800"
  },
  {
    "text": "elastic object it's good for spraying",
    "start": "711800",
    "end": "715279"
  },
  {
    "text": "because it fits in different memory",
    "start": "715279",
    "end": "717959"
  },
  {
    "text": "caches of course if it's in a kog",
    "start": "717959",
    "end": "722320"
  },
  {
    "text": "256 in this case on the other hand P",
    "start": "722320",
    "end": "726440"
  },
  {
    "text": "buffer contains a global pointer Ops",
    "start": "726440",
    "end": "729920"
  },
  {
    "text": "which is good for",
    "start": "729920",
    "end": "731120"
  },
  {
    "text": "leaking so that we could bypass case",
    "start": "731120",
    "end": "733880"
  },
  {
    "text": "through this global",
    "start": "733880",
    "end": "736959"
  },
  {
    "text": "address so with P buffer we can turn",
    "start": "737160",
    "end": "740440"
  },
  {
    "text": "this use Al fre on identity to a user",
    "start": "740440",
    "end": "742920"
  },
  {
    "text": "free on P buffer to do that we could",
    "start": "742920",
    "end": "746040"
  },
  {
    "text": "trigger the LI invalid free which will",
    "start": "746040",
    "end": "749240"
  },
  {
    "text": "free the iing task object in the middle",
    "start": "749240",
    "end": "752279"
  },
  {
    "text": "and we will have the memory layout like",
    "start": "752279",
    "end": "754760"
  },
  {
    "text": "this the right box here means the memory",
    "start": "754760",
    "end": "757760"
  },
  {
    "text": "region is",
    "start": "757760",
    "end": "760079"
  },
  {
    "text": "free then we spray the pipe buffer in",
    "start": "760079",
    "end": "763079"
  },
  {
    "text": "the cache which will reclaim the memory",
    "start": "763079",
    "end": "765639"
  },
  {
    "text": "area of this identity object and the",
    "start": "765639",
    "end": "768760"
  },
  {
    "text": "allocated P buffer will SL in the middle",
    "start": "768760",
    "end": "771320"
  },
  {
    "text": "of the iine task",
    "start": "771320",
    "end": "774079"
  },
  {
    "text": "object and after this we free the our",
    "start": "774079",
    "end": "777000"
  },
  {
    "text": "urine task which free the P buffer",
    "start": "777000",
    "end": "780639"
  },
  {
    "text": "partially and now the intersection of",
    "start": "780639",
    "end": "783440"
  },
  {
    "text": "the red box and green box here is the US",
    "start": "783440",
    "end": "786560"
  },
  {
    "text": "of the free memory on the P",
    "start": "786560",
    "end": "790079"
  },
  {
    "text": "buffer so we have the use of the free on",
    "start": "790680",
    "end": "794000"
  },
  {
    "text": "P buffer how can we leak out to bypass",
    "start": "794000",
    "end": "798120"
  },
  {
    "text": "ksr is there any specific colel objects",
    "start": "798120",
    "end": "801240"
  },
  {
    "text": "that could help us do",
    "start": "801240",
    "end": "802720"
  },
  {
    "text": "that I tried to search the whole kernel",
    "start": "802720",
    "end": "805680"
  },
  {
    "text": "and didn't find anything",
    "start": "805680",
    "end": "807760"
  },
  {
    "text": "helpful",
    "start": "807760",
    "end": "809839"
  },
  {
    "text": "and suddenly when I look look back at",
    "start": "809839",
    "end": "811839"
  },
  {
    "text": "the I design an idea came out just to",
    "start": "811839",
    "end": "816199"
  },
  {
    "text": "recap a little bit so to enable the",
    "start": "816199",
    "end": "819600"
  },
  {
    "text": "efficient I operations the i r use a rim",
    "start": "819600",
    "end": "823399"
  },
  {
    "text": "buffer to transport data between user",
    "start": "823399",
    "end": "826079"
  },
  {
    "text": "space and kernel space that means the",
    "start": "826079",
    "end": "828720"
  },
  {
    "text": "kernel could access to the user space",
    "start": "828720",
    "end": "831880"
  },
  {
    "text": "memory how does it work we have",
    "start": "831880",
    "end": "835240"
  },
  {
    "text": "protections from Hardware like smap or",
    "start": "835240",
    "end": "838279"
  },
  {
    "text": "pxl",
    "start": "838279",
    "end": "839360"
  },
  {
    "text": "that prevents kernel from accessing user",
    "start": "839360",
    "end": "841240"
  },
  {
    "text": "space",
    "start": "841240",
    "end": "843560"
  },
  {
    "text": "memory it turns out that this Rim buffer",
    "start": "844240",
    "end": "848440"
  },
  {
    "text": "is a piece of memory that is mapped to",
    "start": "848440",
    "end": "851160"
  },
  {
    "text": "both kernel and user space it's",
    "start": "851160",
    "end": "853839"
  },
  {
    "text": "shared the memory is allocated through",
    "start": "853839",
    "end": "856399"
  },
  {
    "text": "the body allocator in kernel and is",
    "start": "856399",
    "end": "858480"
  },
  {
    "text": "mapped to the user space so that the",
    "start": "858480",
    "end": "861360"
  },
  {
    "text": "data Transportation could be done",
    "start": "861360",
    "end": "863279"
  },
  {
    "text": "without copy to user or copy from user",
    "start": "863279",
    "end": "865959"
  },
  {
    "text": "and the kernel and user space could read",
    "start": "865959",
    "end": "868839"
  },
  {
    "text": "and write the memory from each other",
    "start": "868839",
    "end": "872880"
  },
  {
    "text": "directly this this design is interesting",
    "start": "874120",
    "end": "877199"
  },
  {
    "text": "one question is if the page is ma if the",
    "start": "877199",
    "end": "881120"
  },
  {
    "text": "page mapped to user space is recycled",
    "start": "881120",
    "end": "883880"
  },
  {
    "text": "with the free the page from a slab",
    "start": "883880",
    "end": "887279"
  },
  {
    "text": "allocator it turns out some pages are",
    "start": "887279",
    "end": "890120"
  },
  {
    "text": "and they are recycled with each other so",
    "start": "890120",
    "end": "893279"
  },
  {
    "text": "that means we can reclaim the fre slab",
    "start": "893279",
    "end": "895639"
  },
  {
    "text": "Page by springing user pages in the past",
    "start": "895639",
    "end": "899920"
  },
  {
    "text": "to manipulate Heap memory people use",
    "start": "899920",
    "end": "902720"
  },
  {
    "text": "techniques of spr Kernel objects now we",
    "start": "902720",
    "end": "906360"
  },
  {
    "text": "can just read pag and we can read and",
    "start": "906360",
    "end": "908959"
  },
  {
    "text": "write kernel Heap from user",
    "start": "908959",
    "end": "911839"
  },
  {
    "text": "space there are some candidates they",
    "start": "911839",
    "end": "914639"
  },
  {
    "text": "they are very easy to use on Android for",
    "start": "914639",
    "end": "916639"
  },
  {
    "text": "example the L sh Rim buffer the the",
    "start": "916639",
    "end": "920519"
  },
  {
    "text": "pages in a pip subsystem and we call",
    "start": "920519",
    "end": "924000"
  },
  {
    "text": "this page spray technique 30",
    "start": "924000",
    "end": "927600"
  },
  {
    "text": "page the advantages of spring pages are",
    "start": "927600",
    "end": "931160"
  },
  {
    "text": "very obvious first it's very powerful we",
    "start": "931160",
    "end": "934680"
  },
  {
    "text": "could just directly read and write the",
    "start": "934680",
    "end": "937440"
  },
  {
    "text": "kernel Heap from user space second it's",
    "start": "937440",
    "end": "940639"
  },
  {
    "text": "very stable in the P we have to",
    "start": "940639",
    "end": "943639"
  },
  {
    "text": "spray several times to obtain different",
    "start": "943639",
    "end": "946959"
  },
  {
    "text": "read and R capabilities to some victim",
    "start": "946959",
    "end": "950279"
  },
  {
    "text": "objects now we can just spray once and",
    "start": "950279",
    "end": "955079"
  },
  {
    "text": "could get a limited chance to read and",
    "start": "955079",
    "end": "957600"
  },
  {
    "text": "write on those w Vicon objects third",
    "start": "957600",
    "end": "961000"
  },
  {
    "text": "it's very simple you can just allocate",
    "start": "961000",
    "end": "963279"
  },
  {
    "text": "more and the body allocator will help",
    "start": "963279",
    "end": "965319"
  },
  {
    "text": "you reclaim the page for",
    "start": "965319",
    "end": "970040"
  },
  {
    "text": "you so with the 30 page Technique we",
    "start": "970800",
    "end": "974800"
  },
  {
    "text": "could easily achieve arbitrary read and",
    "start": "974800",
    "end": "976920"
  },
  {
    "text": "r on the pipe buffer object to do that",
    "start": "976920",
    "end": "980000"
  },
  {
    "text": "we first prepare the memory layout like",
    "start": "980000",
    "end": "983199"
  },
  {
    "text": "this we have a pip buffer allocated in",
    "start": "983199",
    "end": "986279"
  },
  {
    "text": "the same cache of the identity and the",
    "start": "986279",
    "end": "988720"
  },
  {
    "text": "our urine",
    "start": "988720",
    "end": "991319"
  },
  {
    "text": "task then we trigger the invalid free",
    "start": "991360",
    "end": "994920"
  },
  {
    "text": "and free the our urine task this invalid",
    "start": "994920",
    "end": "998639"
  },
  {
    "text": "free indeed is an additional free to the",
    "start": "998639",
    "end": "1001880"
  },
  {
    "text": "slab because normally there isn't such a",
    "start": "1001880",
    "end": "1004759"
  },
  {
    "text": "free to the object and this one",
    "start": "1004759",
    "end": "1007880"
  },
  {
    "text": "additional free will be counted by the",
    "start": "1007880",
    "end": "1009880"
  },
  {
    "text": "slab",
    "start": "1009880",
    "end": "1012240"
  },
  {
    "text": "allocator as a result after we free the",
    "start": "1012480",
    "end": "1016279"
  },
  {
    "text": "other objects on this slab you even if",
    "start": "1016279",
    "end": "1018920"
  },
  {
    "text": "we have a valid P buffer on the slab the",
    "start": "1018920",
    "end": "1021959"
  },
  {
    "text": "slab allocator still thinks there is no",
    "start": "1021959",
    "end": "1024558"
  },
  {
    "text": "object Al and eventually it will freeze",
    "start": "1024559",
    "end": "1028438"
  },
  {
    "text": "the slab P page then we apply the 30",
    "start": "1028439",
    "end": "1032319"
  },
  {
    "text": "page technique to reclaim the slab page",
    "start": "1032319",
    "end": "1035199"
  },
  {
    "text": "and then map the memory in user space",
    "start": "1035199",
    "end": "1038160"
  },
  {
    "text": "here we use the page in the P sub system",
    "start": "1038160",
    "end": "1041120"
  },
  {
    "text": "as such we can have arbitrary read and",
    "start": "1041120",
    "end": "1044640"
  },
  {
    "text": "right capab capability on the P",
    "start": "1044640",
    "end": "1047400"
  },
  {
    "text": "buffer",
    "start": "1047400",
    "end": "1050400"
  },
  {
    "text": "what can we do with this capability",
    "start": "1051080",
    "end": "1053520"
  },
  {
    "text": "let's look at the definition of this",
    "start": "1053520",
    "end": "1055280"
  },
  {
    "text": "power buffer",
    "start": "1055280",
    "end": "1056520"
  },
  {
    "text": "object if we have read capability we C",
    "start": "1056520",
    "end": "1059960"
  },
  {
    "text": "Le the Ops field this is a global",
    "start": "1059960",
    "end": "1063039"
  },
  {
    "text": "pointer in kernel by leaking it we could",
    "start": "1063039",
    "end": "1065440"
  },
  {
    "text": "bypass",
    "start": "1065440",
    "end": "1067559"
  },
  {
    "text": "ksr on the other hand we could also",
    "start": "1067559",
    "end": "1070280"
  },
  {
    "text": "overwrite the P buffer the first field",
    "start": "1070280",
    "end": "1073280"
  },
  {
    "text": "that that is interesting is the flag by",
    "start": "1073280",
    "end": "1076640"
  },
  {
    "text": "over overwriting this flag we could have",
    "start": "1076640",
    "end": "1079000"
  },
  {
    "text": "30 pipe",
    "start": "1079000",
    "end": "1080320"
  },
  {
    "text": "Rital because the root cause of 30 pipe",
    "start": "1080320",
    "end": "1083080"
  },
  {
    "text": "is due to the UN un initialization of",
    "start": "1083080",
    "end": "1085799"
  },
  {
    "text": "this flag but this is not a key point of",
    "start": "1085799",
    "end": "1088919"
  },
  {
    "text": "today's talk let's look at other",
    "start": "1088919",
    "end": "1092840"
  },
  {
    "text": "fields the Page Field it seems",
    "start": "1092840",
    "end": "1096320"
  },
  {
    "text": "suspicious can we achieve arbitrary rate",
    "start": "1096320",
    "end": "1098960"
  },
  {
    "text": "and right by overwriting",
    "start": "1098960",
    "end": "1102360"
  },
  {
    "text": "this let's look at how P uses this page",
    "start": "1102400",
    "end": "1106960"
  },
  {
    "text": "from the two functions P read and papy",
    "start": "1106960",
    "end": "1109760"
  },
  {
    "text": "write we can see that this page is",
    "start": "1109760",
    "end": "1112919"
  },
  {
    "text": "mapped to Kernel first then the data",
    "start": "1112919",
    "end": "1115480"
  },
  {
    "text": "from user space is copy in and out from",
    "start": "1115480",
    "end": "1120720"
  },
  {
    "text": "it what does this K kmap KF do it turned",
    "start": "1120720",
    "end": "1126039"
  },
  {
    "text": "out that it just disables preemptions",
    "start": "1126039",
    "end": "1128880"
  },
  {
    "text": "and Page",
    "start": "1128880",
    "end": "1130000"
  },
  {
    "text": "fault then retrieve the virtual address",
    "start": "1130000",
    "end": "1132760"
  },
  {
    "text": "for the",
    "start": "1132760",
    "end": "1135039"
  },
  {
    "text": "page and this page to Virtual address",
    "start": "1135039",
    "end": "1138480"
  },
  {
    "text": "calculation is static on um it does some",
    "start": "1138480",
    "end": "1143039"
  },
  {
    "text": "arithmetic shift on the page then plus a",
    "start": "1143039",
    "end": "1146480"
  },
  {
    "text": "offset both the shift and and offset are",
    "start": "1146480",
    "end": "1149640"
  },
  {
    "text": "static value on",
    "start": "1149640",
    "end": "1151880"
  },
  {
    "text": "m64 so given a cural address you you",
    "start": "1151880",
    "end": "1155559"
  },
  {
    "text": "want to read and write you could",
    "start": "1155559",
    "end": "1157960"
  },
  {
    "text": "calculate its page address with this",
    "start": "1157960",
    "end": "1160440"
  },
  {
    "text": "function then you need to calculate the",
    "start": "1160440",
    "end": "1162919"
  },
  {
    "text": "offset of the address to the base page",
    "start": "1162919",
    "end": "1166520"
  },
  {
    "text": "then you can for uh fixed P buffer with",
    "start": "1166520",
    "end": "1170240"
  },
  {
    "text": "tempered page address and offset and",
    "start": "1170240",
    "end": "1173159"
  },
  {
    "text": "eventually you can achieve arbitrary",
    "start": "1173159",
    "end": "1175320"
  },
  {
    "text": "read and right by just reading it right",
    "start": "1175320",
    "end": "1177559"
  },
  {
    "text": "right into a",
    "start": "1177559",
    "end": "1180240"
  },
  {
    "text": "pipe okay demo",
    "start": "1180440",
    "end": "1183280"
  },
  {
    "text": "time this is a demo of how I how the",
    "start": "1183280",
    "end": "1186799"
  },
  {
    "text": "exploit works for Pixel 6 the",
    "start": "1186799",
    "end": "1190559"
  },
  {
    "text": "exploit obtains arbitrary read and R",
    "start": "1190559",
    "end": "1193720"
  },
  {
    "text": "capability first then overwrite the CR",
    "start": "1193720",
    "end": "1196640"
  },
  {
    "text": "uid field of curent process to escalate",
    "start": "1196640",
    "end": "1201600"
  },
  {
    "text": "privileg so with arbitrary read and",
    "start": "1205440",
    "end": "1208400"
  },
  {
    "text": "write escalating privilege in pixel 6 is",
    "start": "1208400",
    "end": "1212000"
  },
  {
    "text": "easy just overwriting the uide of the",
    "start": "1212000",
    "end": "1214679"
  },
  {
    "text": "CED but for Samsung it has its own",
    "start": "1214679",
    "end": "1217760"
  },
  {
    "text": "customized protection like KX KX has a",
    "start": "1217760",
    "end": "1221799"
  },
  {
    "text": "mechanism of protecting the cr's uh inte",
    "start": "1221799",
    "end": "1227159"
  },
  {
    "text": "integrity",
    "start": "1227159",
    "end": "1228799"
  },
  {
    "text": "this is what a normal kernel cry look",
    "start": "1228799",
    "end": "1231960"
  },
  {
    "text": "like looks like it has a uid",
    "start": "1231960",
    "end": "1235400"
  },
  {
    "text": "field and simply override it could allow",
    "start": "1235400",
    "end": "1238400"
  },
  {
    "text": "you to become rude and this is sound CED",
    "start": "1238400",
    "end": "1242240"
  },
  {
    "text": "objects definition with KX U protection",
    "start": "1242240",
    "end": "1246880"
  },
  {
    "text": "it expands the original cred with some",
    "start": "1246880",
    "end": "1249559"
  },
  {
    "text": "pointers to protect the cred Integrity",
    "start": "1249559",
    "end": "1253440"
  },
  {
    "text": "one thing that's that's worth mentioning",
    "start": "1253440",
    "end": "1256000"
  },
  {
    "text": "is that it has a field called the task",
    "start": "1256000",
    "end": "1259440"
  },
  {
    "text": "um",
    "start": "1259440",
    "end": "1261799"
  },
  {
    "text": "pointer so the cred will look like",
    "start": "1261799",
    "end": "1266760"
  },
  {
    "text": "this with the protection the cred object",
    "start": "1266880",
    "end": "1269960"
  },
  {
    "text": "is read only and only privileged in",
    "start": "1269960",
    "end": "1273200"
  },
  {
    "text": "instructions could Alor it",
    "start": "1273200",
    "end": "1276720"
  },
  {
    "text": "content in addition the task pointer in",
    "start": "1277120",
    "end": "1279840"
  },
  {
    "text": "the CED object is is used to do cross",
    "start": "1279840",
    "end": "1283159"
  },
  {
    "text": "check which ensures the Integrity so you",
    "start": "1283159",
    "end": "1286320"
  },
  {
    "text": "cannot just change the C reference to a",
    "start": "1286320",
    "end": "1289200"
  },
  {
    "text": "in a task to a root crft the this",
    "start": "1289200",
    "end": "1292000"
  },
  {
    "text": "Integrity check is done at CIS call",
    "start": "1292000",
    "end": "1294480"
  },
  {
    "text": "entry so it looks like there's no time",
    "start": "1294480",
    "end": "1297320"
  },
  {
    "text": "window",
    "start": "1297320",
    "end": "1299159"
  },
  {
    "text": "issue one idea to bypass it is to forge",
    "start": "1299159",
    "end": "1303240"
  },
  {
    "text": "a fake rout C with the uid being zero",
    "start": "1303240",
    "end": "1307559"
  },
  {
    "text": "and all the other pointers set up",
    "start": "1307559",
    "end": "1309480"
  },
  {
    "text": "properly to bypass the Integrity check",
    "start": "1309480",
    "end": "1312360"
  },
  {
    "text": "does k has have any mechanism to pre",
    "start": "1312360",
    "end": "1315360"
  },
  {
    "text": "prevent it being",
    "start": "1315360",
    "end": "1317039"
  },
  {
    "text": "forged",
    "start": "1317039",
    "end": "1318880"
  },
  {
    "text": "it turned out that K nox has a",
    "start": "1318880",
    "end": "1321720"
  },
  {
    "text": "mechanism and the function is kdb",
    "start": "1321720",
    "end": "1324840"
  },
  {
    "text": "product address here is to check if the",
    "start": "1324840",
    "end": "1327360"
  },
  {
    "text": "cred is from um a legit memory region it",
    "start": "1327360",
    "end": "1331559"
  },
  {
    "text": "checks if the memory is from the pro",
    "start": "1331559",
    "end": "1334200"
  },
  {
    "text": "protect region by checking the object is",
    "start": "1334200",
    "end": "1338720"
  },
  {
    "text": "from some specific cache for",
    "start": "1338720",
    "end": "1341840"
  },
  {
    "text": "example here is checking if the object",
    "start": "1341840",
    "end": "1345080"
  },
  {
    "text": "from the CR jar read only or TC",
    "start": "1345080",
    "end": "1348480"
  },
  {
    "text": "J slap",
    "start": "1348480",
    "end": "1350200"
  },
  {
    "text": "cach as I mentioned before this memory",
    "start": "1350200",
    "end": "1352960"
  },
  {
    "text": "region is protected by KX which is",
    "start": "1352960",
    "end": "1355720"
  },
  {
    "text": "really only even to rud",
    "start": "1355720",
    "end": "1358559"
  },
  {
    "text": "users and this check is actually very we",
    "start": "1358559",
    "end": "1361840"
  },
  {
    "text": "weak because the page is the page memory",
    "start": "1361840",
    "end": "1366440"
  },
  {
    "text": "is not pro protected by koox which means",
    "start": "1366440",
    "end": "1370039"
  },
  {
    "text": "it's relable to attackers we could just",
    "start": "1370039",
    "end": "1372960"
  },
  {
    "text": "temper the slab cach pointer in the page",
    "start": "1372960",
    "end": "1375600"
  },
  {
    "text": "to confuse the kernel that a forge cred",
    "start": "1375600",
    "end": "1378360"
  },
  {
    "text": "is from protect slab case as such we can",
    "start": "1378360",
    "end": "1381520"
  },
  {
    "text": "bypass the the whole cred",
    "start": "1381520",
    "end": "1385360"
  },
  {
    "text": "protection this is an illustration of",
    "start": "1386159",
    "end": "1388960"
  },
  {
    "text": "how to bypass it so to do that we first",
    "start": "1388960",
    "end": "1392360"
  },
  {
    "text": "first f a root CR with all pointers",
    "start": "1392360",
    "end": "1395360"
  },
  {
    "text": "being set up properly then we find the",
    "start": "1395360",
    "end": "1397919"
  },
  {
    "text": "page of the folder C and temper the slab",
    "start": "1397919",
    "end": "1401640"
  },
  {
    "text": "C slap cage field to to um CR J read",
    "start": "1401640",
    "end": "1407440"
  },
  {
    "text": "only or tack jar cach to bypass a",
    "start": "1407440",
    "end": "1412320"
  },
  {
    "text": "check here's a demo for esting privileg",
    "start": "1413480",
    "end": "1416760"
  },
  {
    "text": "on",
    "start": "1416760",
    "end": "1417559"
  },
  {
    "text": "S2 s22 it's similar to the pixel 61 but",
    "start": "1417559",
    "end": "1422039"
  },
  {
    "text": "just some differences in overwriting the",
    "start": "1422039",
    "end": "1424640"
  },
  {
    "text": "uh cred",
    "start": "1424640",
    "end": "1427279"
  },
  {
    "text": "object so in this talk we went through",
    "start": "1436320",
    "end": "1440240"
  },
  {
    "text": "the details of how we exploited an aing",
    "start": "1440240",
    "end": "1443880"
  },
  {
    "text": "box in the enroy kernel with the page",
    "start": "1443880",
    "end": "1446679"
  },
  {
    "text": "spray technique called 30 page here are",
    "start": "1446679",
    "end": "1449640"
  },
  {
    "text": "some",
    "start": "1449640",
    "end": "1450360"
  },
  {
    "text": "takeaways first I ring is a huge attack",
    "start": "1450360",
    "end": "1454480"
  },
  {
    "text": "service not really to the desktop Linux",
    "start": "1454480",
    "end": "1457640"
  },
  {
    "text": "but also mobile devices we have seen a",
    "start": "1457640",
    "end": "1460559"
  },
  {
    "text": "lot of bugs found from this subsystem",
    "start": "1460559",
    "end": "1464000"
  },
  {
    "text": "and there will be more as it becomes",
    "start": "1464000",
    "end": "1467000"
  },
  {
    "text": "more complex",
    "start": "1467000",
    "end": "1469799"
  },
  {
    "text": "second due to the huge attack surface I",
    "start": "1469880",
    "end": "1472520"
  },
  {
    "text": "don't think restricting access to the O",
    "start": "1472520",
    "end": "1475320"
  },
  {
    "text": "ring on Android is enough to protect",
    "start": "1475320",
    "end": "1478200"
  },
  {
    "text": "users attackers could still exploit the",
    "start": "1478200",
    "end": "1480760"
  },
  {
    "text": "bug from privilege contacts and I will",
    "start": "1480760",
    "end": "1483760"
  },
  {
    "text": "not be surprised to see more",
    "start": "1483760",
    "end": "1485600"
  },
  {
    "text": "exploitation to enjoy kernel with our",
    "start": "1485600",
    "end": "1488120"
  },
  {
    "text": "earing",
    "start": "1488120",
    "end": "1489360"
  },
  {
    "text": "bux third for the technique from the",
    "start": "1489360",
    "end": "1492880"
  },
  {
    "text": "technique perspective object spraying is",
    "start": "1492880",
    "end": "1495640"
  },
  {
    "text": "not the only exploit option try five",
    "start": "1495640",
    "end": "1498000"
  },
  {
    "text": "page spray in the future and you will",
    "start": "1498000",
    "end": "1501520"
  },
  {
    "text": "have more control over the kernel Heap",
    "start": "1501520",
    "end": "1504360"
  },
  {
    "text": "memory like arbitary read and right to",
    "start": "1504360",
    "end": "1507720"
  },
  {
    "text": "Kernel objects from user space and",
    "start": "1507720",
    "end": "1510880"
  },
  {
    "text": "lastly as we have shown in the talk the",
    "start": "1510880",
    "end": "1514000"
  },
  {
    "text": "Android kernel exploitation with 30 page",
    "start": "1514000",
    "end": "1516600"
  },
  {
    "text": "is simple so don't be afraid of",
    "start": "1516600",
    "end": "1519919"
  },
  {
    "text": "exploiting Android kernel if you found",
    "start": "1519919",
    "end": "1521799"
  },
  {
    "text": "any box and I hope we will see more",
    "start": "1521799",
    "end": "1524720"
  },
  {
    "text": "interesting exploitation to the Android",
    "start": "1524720",
    "end": "1527840"
  },
  {
    "text": "in the in the future one more thing you",
    "start": "1527840",
    "end": "1530440"
  },
  {
    "text": "can find the XY code from the link here",
    "start": "1530440",
    "end": "1534080"
  },
  {
    "text": "and the middle is my X handle and the",
    "start": "1534080",
    "end": "1537240"
  },
  {
    "text": "link below is my personal website feel",
    "start": "1537240",
    "end": "1539799"
  },
  {
    "text": "free to reach out if you have any",
    "start": "1539799",
    "end": "1542039"
  },
  {
    "text": "questions I hope everyone enjoying the",
    "start": "1542039",
    "end": "1544440"
  },
  {
    "text": "rest of your day and now I'm happy to",
    "start": "1544440",
    "end": "1546799"
  },
  {
    "text": "take",
    "start": "1546799",
    "end": "1549120"
  },
  {
    "text": "[Applause]",
    "start": "1549120",
    "end": "1552290"
  },
  {
    "text": "questions",
    "start": "1556679",
    "end": "1559679"
  },
  {
    "text": "uh so How likely is it for Android to",
    "start": "1567600",
    "end": "1571200"
  },
  {
    "text": "disable I rank just like the desktop",
    "start": "1571200",
    "end": "1574760"
  },
  {
    "text": "what prevent them from doing",
    "start": "1574760",
    "end": "1577480"
  },
  {
    "text": "so I I'm not I'm not quite sure but I I",
    "start": "1577480",
    "end": "1580880"
  },
  {
    "text": "think probably they are using like some",
    "start": "1580880",
    "end": "1584440"
  },
  {
    "text": "system libraries are using our urine by",
    "start": "1584440",
    "end": "1586600"
  },
  {
    "text": "default so",
    "start": "1586600",
    "end": "1588200"
  },
  {
    "text": "I don't know probably Google can answer",
    "start": "1588200",
    "end": "1590000"
  },
  {
    "text": "this question I hope it will be disabled",
    "start": "1590000",
    "end": "1592919"
  },
  {
    "text": "in the future until it's like matured",
    "start": "1592919",
    "end": "1595159"
  },
  {
    "text": "it's like there's more bu being found it",
    "start": "1595159",
    "end": "1597799"
  },
  {
    "text": "become",
    "start": "1597799",
    "end": "1600080"
  },
  {
    "text": "Skiller yeah all right I think I I will",
    "start": "1602279",
    "end": "1607159"
  },
  {
    "text": "be here if you guys have any questions",
    "start": "1607159",
    "end": "1609799"
  },
  {
    "text": "if not and that's it thank",
    "start": "1609799",
    "end": "1613320"
  },
  {
    "text": "you",
    "start": "1615320",
    "end": "1618320"
  }
]