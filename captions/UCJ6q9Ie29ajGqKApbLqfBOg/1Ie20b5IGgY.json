[
  {
    "text": "uh my name is jamie butler and today i'm going to be speaking on dcom if um",
    "start": "1680",
    "end": "8559"
  },
  {
    "text": "dcom is going to be talking about kernel object manipulation and not in the sense of the dcom that microsoft has",
    "start": "8559",
    "end": "17920"
  },
  {
    "text": "i work at a company called hp gary we're a small consulting firm and",
    "start": "18240",
    "end": "23519"
  },
  {
    "text": "where i started this work was doing contributions to the root kit",
    "start": "23519",
    "end": "29119"
  },
  {
    "text": "site on rootkit.com which greg hoagland runs and that's how i got into this",
    "start": "29119",
    "end": "35600"
  },
  {
    "text": "so i'm going to preface the talk with explaining that direct kernel object manipulation",
    "start": "35600",
    "end": "42160"
  },
  {
    "text": "runs in the kernel so it requires that a root kit of some sort is installed i'm not going to speak",
    "start": "42160",
    "end": "49200"
  },
  {
    "text": "about how you gain privileges to install rootkit other talks here have",
    "start": "49200",
    "end": "55360"
  },
  {
    "text": "discussed those issues such as using buffer overflows using heap overflows uh",
    "start": "55360",
    "end": "60960"
  },
  {
    "text": "dave atel david litchfield and so on and so forth are much better at that than i am so i'll keep",
    "start": "60960",
    "end": "67280"
  },
  {
    "text": "to the colonel and i'll assume that there's somebody else that can get me access",
    "start": "67280",
    "end": "73280"
  },
  {
    "text": "this also can be done through you can install drivers through some social engineering through email attachments",
    "start": "73280",
    "end": "80080"
  },
  {
    "text": "different things like that and certain users have ability to install device drivers at least in the",
    "start": "80080",
    "end": "86080"
  },
  {
    "text": "limited sense of the fashion maybe uh your corp a large corporation and you",
    "start": "86080",
    "end": "91200"
  },
  {
    "text": "allow certain users to be able to install their own printer drivers and so forth",
    "start": "91200",
    "end": "98880"
  },
  {
    "text": "so we won't talk about how you get the root kit installed but we'll cover what it can do once it gets there",
    "start": "99439",
    "end": "106720"
  },
  {
    "text": "this talk is mainly focused on the offensive aspects of root kits and root kit",
    "start": "106720",
    "end": "112840"
  },
  {
    "text": "technology i did work for an intrusion prevention company or an ids company",
    "start": "112840",
    "end": "119280"
  },
  {
    "text": "so at any point if you have if you see this as a great problem you have questions about how to",
    "start": "119280",
    "end": "125759"
  },
  {
    "text": "solve it the slides although some some of them address it a little bit the preventative",
    "start": "125759",
    "end": "131360"
  },
  {
    "text": "measures i do encourage you to ask and we can have a dialogue in the class",
    "start": "131360",
    "end": "137200"
  },
  {
    "text": "that way or in the speech so",
    "start": "137200",
    "end": "143840"
  },
  {
    "text": "just we'll start off with a few slides about operating systems and how they work this",
    "start": "143920",
    "end": "149200"
  },
  {
    "text": "isn't a windows specific talk although i concentrate in windows",
    "start": "149200",
    "end": "155280"
  },
  {
    "text": "because that's where all my experience mostly lies i also will show you some slides of how",
    "start": "155280",
    "end": "160640"
  },
  {
    "text": "this is completely possible to do in linux and it's possible to do in other operating systems so this isn't an",
    "start": "160640",
    "end": "167920"
  },
  {
    "text": "attack against any one particular vendor",
    "start": "167920",
    "end": "172879"
  },
  {
    "text": "first of all we're all familiar probably most of us are familiar with the win32 api",
    "start": "173519",
    "end": "180239"
  },
  {
    "text": "that's what programs use to request functionality of the kernel of the",
    "start": "180239",
    "end": "186239"
  },
  {
    "text": "operating system you can use the win32 api to create sockets",
    "start": "186239",
    "end": "192319"
  },
  {
    "text": "to open to send data to list processes to",
    "start": "192319",
    "end": "198720"
  },
  {
    "text": "list drivers task manager and other applications rely upon these apis",
    "start": "198720",
    "end": "207280"
  },
  {
    "text": "so it's a well-known interface into the operating system your process will",
    "start": "207280",
    "end": "214000"
  },
  {
    "text": "link in kernel 32.dll kernel32.dll uses in tdl",
    "start": "214000",
    "end": "220239"
  },
  {
    "text": "and that's all in the userland portion of the process once nt dll and kernel 32 do their work",
    "start": "220239",
    "end": "228080"
  },
  {
    "text": "then the kernel itself is requested at",
    "start": "228080",
    "end": "233120"
  },
  {
    "text": "to do the function and then now we're down in kernel kernel mode so we're in the low levels of the",
    "start": "233120",
    "end": "239760"
  },
  {
    "text": "kernel and this is where the protected memory is so these are where our um a column",
    "start": "239760",
    "end": "246080"
  },
  {
    "text": "objects are stored microsoft usually refers to them as objects but this is an object as",
    "start": "246080",
    "end": "251840"
  },
  {
    "text": "in a c plus plus class these aren't methods and data that operate upon or methods that",
    "start": "251840",
    "end": "259040"
  },
  {
    "text": "operate upon the data all these are is basically structures and these structures are used for",
    "start": "259040",
    "end": "264400"
  },
  {
    "text": "accounting purposes again to list open ports to list processes",
    "start": "264400",
    "end": "270479"
  },
  {
    "text": "things like that and also for tokens you see there because",
    "start": "270479",
    "end": "276720"
  },
  {
    "text": "tokens describe what a process is allowed to do what privileges it has",
    "start": "276720",
    "end": "283080"
  },
  {
    "text": "so in the intel architecture you can read the intel architecture manuals there's",
    "start": "283360",
    "end": "288720"
  },
  {
    "text": "three of them for the x86 there's four rings",
    "start": "288720",
    "end": "294840"
  },
  {
    "text": "described anything that i said was kernel mode is it ring zero and anything that i say is user land or",
    "start": "294840",
    "end": "302080"
  },
  {
    "text": "user mode is it ring three so you could have intel although it",
    "start": "302080",
    "end": "308720"
  },
  {
    "text": "provides these other two rings no one usually uses those rings and that's where the problem lies",
    "start": "308720",
    "end": "317039"
  },
  {
    "text": "so we have an operating system it's provided by the vendor and we have third party applications",
    "start": "320639",
    "end": "328720"
  },
  {
    "text": "which are provided by different sets of vendors and then we also have different hardware",
    "start": "328720",
    "end": "334720"
  },
  {
    "text": "because and the hardware comes with device drivers device drivers are in the kernel they're",
    "start": "334720",
    "end": "340960"
  },
  {
    "text": "in ring zero and because in this particular case the vendor being microsoft cannot write",
    "start": "340960",
    "end": "348320"
  },
  {
    "text": "hp's printer driver because hp wants to keep that to itself",
    "start": "348320",
    "end": "353600"
  },
  {
    "text": "the colonel has to load third-party vendors drive drivers into",
    "start": "353600",
    "end": "359440"
  },
  {
    "text": "the kernel and once there's they once you're there there's no separation of powers",
    "start": "359440",
    "end": "366080"
  },
  {
    "text": "so if you understand the kernel well enough your printer driver can take over these",
    "start": "366080",
    "end": "372639"
  },
  {
    "text": "objects and just stomp on memory if it understands how the kernel is using the objects you can do this in a",
    "start": "372639",
    "end": "379840"
  },
  {
    "text": "fairly reliable fashion without blue screening the box which is what i'll show you",
    "start": "379840",
    "end": "387039"
  },
  {
    "text": "so consumers are starting to demand more we've noticed there's a huge explosion almost it seems like these",
    "start": "391759",
    "end": "398560"
  },
  {
    "text": "days in host-based intrusion prevention systems and anti-virus software and",
    "start": "398560",
    "end": "405280"
  },
  {
    "text": "personal firewalls and all these different pieces are coming together into one software solution",
    "start": "405280",
    "end": "412240"
  },
  {
    "text": "so the host-based intrusion prevention systems they're in your kernel they're hooking system calls",
    "start": "412240",
    "end": "418720"
  },
  {
    "text": "they're looking for bad behavior personal firewalls doing much the same they're layering in",
    "start": "418720",
    "end": "425759"
  },
  {
    "text": "the network device architecture all these products are coming into one",
    "start": "425759",
    "end": "433039"
  },
  {
    "text": "cohesive unit and sold by a particular vendor so even your antivirus software now",
    "start": "433039",
    "end": "438400"
  },
  {
    "text": "is hooking your kernel to look at registry keys so i know for files like symantec and",
    "start": "438400",
    "end": "445120"
  },
  {
    "text": "some others do that these are all to provide the user with",
    "start": "445120",
    "end": "450720"
  },
  {
    "text": "more protection that maybe they don't get by default from the kernel itself",
    "start": "450720",
    "end": "458080"
  },
  {
    "text": "so heads hips i'm not sure if everyone's familiar with those terms kids in this",
    "start": "458479",
    "end": "463599"
  },
  {
    "text": "case is a host-based ids and hips is host-based intrusion prevention systems",
    "start": "463599",
    "end": "470319"
  },
  {
    "text": "so to augment the kernel and to provide an additional layer of security",
    "start": "470319",
    "end": "476080"
  },
  {
    "text": "they try to detect processes so you could say you could set up your",
    "start": "476080",
    "end": "482000"
  },
  {
    "text": "hips pro product to say well my corporate policy is",
    "start": "482000",
    "end": "487840"
  },
  {
    "text": "never run internet internet explorer because it has octave x it has all these",
    "start": "487840",
    "end": "493840"
  },
  {
    "text": "other things that our security people just don't um want to be able to have to manage",
    "start": "493840",
    "end": "501039"
  },
  {
    "text": "so we'll only run you know mozilla so you could have a hips product that",
    "start": "501039",
    "end": "506560"
  },
  {
    "text": "when it sees ie explorer.exe try to get ran",
    "start": "506560",
    "end": "512159"
  },
  {
    "text": "it just says no and you can do that by hooking the kernel different things like that",
    "start": "512159",
    "end": "518080"
  },
  {
    "text": "it also looks looks for files see what was changed on the file system we're all familiar with tripwire it was",
    "start": "518080",
    "end": "524640"
  },
  {
    "text": "probably one of the first to do this the personal firewall",
    "start": "524640",
    "end": "530880"
  },
  {
    "text": "paradigm is looking at connections made to other boxes so you can say okay well",
    "start": "530880",
    "end": "537200"
  },
  {
    "text": "i want to allow my users to be able to surf the web but i never want to see someone",
    "start": "537200",
    "end": "543279"
  },
  {
    "text": "ftping back into their box on port 23. so your intrusion prevention system your",
    "start": "543279",
    "end": "550800"
  },
  {
    "text": "personal firewall whatever you want to call it today could say well never let inbound connections and so on and so forth we're",
    "start": "550800",
    "end": "557760"
  },
  {
    "text": "all familiar with this the problem lies in the fact",
    "start": "557760",
    "end": "562880"
  },
  {
    "text": "that still the heart of the reporting mechanism is the operating system itself",
    "start": "562880",
    "end": "570399"
  },
  {
    "text": "and because the third party vendors i haven't taken the time or",
    "start": "570399",
    "end": "576880"
  },
  {
    "text": "not so much that it's fairly you know in a commercial setting you don't want to start",
    "start": "576880",
    "end": "582880"
  },
  {
    "text": "querying the objects yourself because that's dangerous and as new service packs and so forth",
    "start": "582880",
    "end": "588800"
  },
  {
    "text": "come out it isn't going to be consistent how these things are used and where they are so you can't just like sort of hard code",
    "start": "588800",
    "end": "594560"
  },
  {
    "text": "it yourself you have to ask the operating system for help that's how it was designed that's what",
    "start": "594560",
    "end": "599839"
  },
  {
    "text": "it's there for so that's one point of failure",
    "start": "599839",
    "end": "605200"
  },
  {
    "text": "if the if the kernel subverted then all bets are off",
    "start": "605200",
    "end": "610320"
  },
  {
    "text": "and the reason the kernel can be subverted is because there's no separation of power between its own",
    "start": "610320",
    "end": "615760"
  },
  {
    "text": "memory i.e objects and those of third-party drivers",
    "start": "615760",
    "end": "623519"
  },
  {
    "text": "so within a kernel how is heads and hips possible",
    "start": "624800",
    "end": "630240"
  },
  {
    "text": "i'll argue that root kit technology is dual use the fact is you can install a root kit",
    "start": "630240",
    "end": "636959"
  },
  {
    "text": "to hide things or it's just basically semantics that",
    "start": "636959",
    "end": "643200"
  },
  {
    "text": "your hips and heads are really root kits they're doing hooking",
    "start": "643200",
    "end": "649120"
  },
  {
    "text": "they're doing all these other things they're just not doing it for a malicious purpose",
    "start": "649120",
    "end": "654320"
  },
  {
    "text": "so they can query the kernel reporting functions directly such as if your",
    "start": "654320",
    "end": "660880"
  },
  {
    "text": "if your hips product wants to know all the device drivers loaded on the system",
    "start": "660880",
    "end": "667440"
  },
  {
    "text": "it can cause zw query system information pass it a parameter saying i'm asking",
    "start": "667440",
    "end": "673200"
  },
  {
    "text": "for drivers and the kernel will gladly report back to the product here's all the drivers",
    "start": "673200",
    "end": "679279"
  },
  {
    "text": "that are loaded another way to accomplish hips and heads functionality",
    "start": "679279",
    "end": "686160"
  },
  {
    "text": "is you can hook the user land apis and there are a lot of uh products that",
    "start": "686160",
    "end": "691279"
  },
  {
    "text": "do this now and the reason you you may want to do this is just some things are easier to do",
    "start": "691279",
    "end": "698800"
  },
  {
    "text": "at the userland level and they're also much more safe if you're going to hook",
    "start": "698800",
    "end": "705519"
  },
  {
    "text": "it may be the best for your product to hook at the user land and some products that say they prevent",
    "start": "705519",
    "end": "712480"
  },
  {
    "text": "zero day exploits other than like stock guard and different things that look at the stock",
    "start": "712480",
    "end": "718480"
  },
  {
    "text": "and do cannery value or canary values on the stock and so forth that's one technology but",
    "start": "718480",
    "end": "724160"
  },
  {
    "text": "there's also others that actually hook api calls and look for i'll say",
    "start": "724160",
    "end": "731120"
  },
  {
    "text": "bad stock returns outside of the range of the process so if you ever have a process or",
    "start": "731120",
    "end": "738399"
  },
  {
    "text": "function being invoked that when it returns it's supposed to return to an address",
    "start": "738399",
    "end": "744880"
  },
  {
    "text": "that is within the heap unless it's um structured exception handlers and some",
    "start": "744880",
    "end": "751680"
  },
  {
    "text": "minute things it's probably not a good idea that create process just returned to the",
    "start": "751680",
    "end": "757200"
  },
  {
    "text": "heap because it was called from the heap so they also hook system calls",
    "start": "757200",
    "end": "763760"
  },
  {
    "text": "this can be easily found in probably any your leading ids ips vendors products you look at the",
    "start": "763760",
    "end": "772880"
  },
  {
    "text": "system calls for the registry for instance they're almost always hooked",
    "start": "772880",
    "end": "778000"
  },
  {
    "text": "because if you want to say don't allow people to write to the run key the way to do that is to intercept that",
    "start": "778000",
    "end": "784800"
  },
  {
    "text": "call at the system call level",
    "start": "784800",
    "end": "788399"
  },
  {
    "text": "then for i'm not sure about other os's but definitely for microsoft",
    "start": "790560",
    "end": "796320"
  },
  {
    "text": "there are functions that allow you to register callbacks within the kernel itself",
    "start": "796320",
    "end": "803600"
  },
  {
    "text": "so you can say upon thread creation call back malfunction because i want to",
    "start": "803600",
    "end": "810079"
  },
  {
    "text": "know who just created this thread and so on and so forth so this is another place",
    "start": "810079",
    "end": "815600"
  },
  {
    "text": "uh where ids and rps's can use and also root kits themselves",
    "start": "815600",
    "end": "821600"
  },
  {
    "text": "so what's the attack scenario what's the problem well for a rootkit",
    "start": "821600",
    "end": "826880"
  },
  {
    "text": "usually like i've mentioned they gain elevate access through buffer overflows or some other means",
    "start": "826880",
    "end": "832720"
  },
  {
    "text": "the attacker then wants to install a root kit so that they can come back",
    "start": "832720",
    "end": "838320"
  },
  {
    "text": "later the root kit will give them elevated privilege access also it will hide their presence",
    "start": "838320",
    "end": "846399"
  },
  {
    "text": "and it could do other things like x fill data so it could monitor keystrokes and whatnot",
    "start": "846399",
    "end": "852079"
  },
  {
    "text": "and x fill that here's sort of a brief history of root",
    "start": "852079",
    "end": "858880"
  },
  {
    "text": "kits where they started where they are now and then we'll talk about where they're going",
    "start": "858880",
    "end": "864399"
  },
  {
    "text": "with dcom so in in the beginning uh what prompted the need for tripwire",
    "start": "864399",
    "end": "871120"
  },
  {
    "text": "was that these reporting functions this is a linux specific slide but",
    "start": "871120",
    "end": "877440"
  },
  {
    "text": "i guess netstat runs on uh windows obviously and there's corresponding ls is like",
    "start": "877440",
    "end": "883199"
  },
  {
    "text": "durr ps could be like task manager and so on so forth",
    "start": "883199",
    "end": "888480"
  },
  {
    "text": "so easy way to subvert the systems in the old days is just install a trojan",
    "start": "888480",
    "end": "895440"
  },
  {
    "text": "so take out the ps put in your own version of ps that hides whatever process you want to",
    "start": "895440",
    "end": "902079"
  },
  {
    "text": "hide and that was the technique and then of course tripwire and some other",
    "start": "902079",
    "end": "907839"
  },
  {
    "text": "checksums to look at the file system came along and can detect changes like that",
    "start": "907839",
    "end": "914000"
  },
  {
    "text": "well then we see a whole new era of root kits which was just to filter data",
    "start": "914000",
    "end": "920160"
  },
  {
    "text": "so they were hooking these were the hooking root kits originally i think the first one that i saw for",
    "start": "920160",
    "end": "926480"
  },
  {
    "text": "windows was the nt root kit by greg hoagland and they would hook the system call",
    "start": "926480",
    "end": "932399"
  },
  {
    "text": "table you can extend this to hook other things i'll talk about those in the next couple",
    "start": "932399",
    "end": "937760"
  },
  {
    "text": "slides you can hook the system call table you can hook the interrupt descriptor table and",
    "start": "937760",
    "end": "944720"
  },
  {
    "text": "basically you filter out the data so if task manager says give me the list of",
    "start": "944720",
    "end": "950639"
  },
  {
    "text": "all the processes by calling zw query system information before if you're in the um",
    "start": "950639",
    "end": "957519"
  },
  {
    "text": "execution path you can filter out the results of that call and hand back the task manager some kind",
    "start": "957519",
    "end": "964160"
  },
  {
    "text": "of bogus result uh actually greg and myself we teach a",
    "start": "964160",
    "end": "969680"
  },
  {
    "text": "training course here at black cat where we describe this we go through how to hook system calls and",
    "start": "969680",
    "end": "974800"
  },
  {
    "text": "how to filter data and so on and so forth one point on the",
    "start": "974800",
    "end": "981360"
  },
  {
    "text": "interrupt descriptor table hooking before somebody says that that won't work",
    "start": "981360",
    "end": "987920"
  },
  {
    "text": "older versions of windows windows 2000 even they would call the interrupt n2e",
    "start": "988079",
    "end": "995040"
  },
  {
    "text": "to request the assistance of the operating system to grab its attention say now i have stuff for you to do",
    "start": "995040",
    "end": "1001759"
  },
  {
    "text": "please take over and do what i've asked you newer versions of windows have started to use",
    "start": "1001759",
    "end": "1009040"
  },
  {
    "text": "syscenter as of xp and some of the different service packs",
    "start": "1009040",
    "end": "1014959"
  },
  {
    "text": "what that is is actually an intel instruction and because of that when you transfer",
    "start": "1014959",
    "end": "1020320"
  },
  {
    "text": "from user mode into kernel mode you no longer go through the interrupt descriptor table",
    "start": "1020320",
    "end": "1027918"
  },
  {
    "text": "now this doesn't work if it's like um a keystroke because that actually goes",
    "start": "1027919",
    "end": "1033600"
  },
  {
    "text": "to the interrupt descriptor table still so what's the control flow on the system",
    "start": "1033600",
    "end": "1040558"
  },
  {
    "text": "aka places that someone can hook if you call create",
    "start": "1040559",
    "end": "1046240"
  },
  {
    "text": "create file w which is the wide character format of create file you can do this to open a file if",
    "start": "1046240",
    "end": "1054080"
  },
  {
    "text": "the file already exists you can get a handle to it by calling create file",
    "start": "1054080",
    "end": "1059600"
  },
  {
    "text": "so it runs for a while in kernel 32 dot dll",
    "start": "1059600",
    "end": "1064640"
  },
  {
    "text": "does its little thing whatever it may be then it calls in tdll",
    "start": "1064640",
    "end": "1071120"
  },
  {
    "text": "now ntdll also has a corresponding function to create file w that was in kernel 32",
    "start": "1071120",
    "end": "1077760"
  },
  {
    "text": "and it's called nt create file well for the most part it does maybe some",
    "start": "1077760",
    "end": "1084960"
  },
  {
    "text": "checking on the validity of the parameters or whatnot and then what it does is",
    "start": "1084960",
    "end": "1090240"
  },
  {
    "text": "it puts the system call number this assumes we're using the n2e",
    "start": "1090240",
    "end": "1095360"
  },
  {
    "text": "technique and not says enter but syscenter is similar it puts the call number",
    "start": "1095360",
    "end": "1101360"
  },
  {
    "text": "of the kernel function which corresponds to create file into the register eax",
    "start": "1101360",
    "end": "1107440"
  },
  {
    "text": "then it puts the address of the user mode parameters that were",
    "start": "1107440",
    "end": "1112960"
  },
  {
    "text": "passed to create file w it puts the address of the that user mode stack",
    "start": "1112960",
    "end": "1118400"
  },
  {
    "text": "into edx and then it interrupts it does an m2e",
    "start": "1118400",
    "end": "1124480"
  },
  {
    "text": "and you'll see there's this line here so we just did an m2e",
    "start": "1124480",
    "end": "1131200"
  },
  {
    "text": "and we're going to cross over this boundary between userland and kernel mode",
    "start": "1131200",
    "end": "1137840"
  },
  {
    "text": "so in the kernel what it looks like again there's the boundary everything on the sides in the kernel",
    "start": "1138640",
    "end": "1145840"
  },
  {
    "text": "there's the interrupt descriptor table which is an array of the function pointers",
    "start": "1145840",
    "end": "1152880"
  },
  {
    "text": "that is going to handle the interrupt so if it's meant to e for instance",
    "start": "1152880",
    "end": "1158640"
  },
  {
    "text": "in the windows kernel it will jump to the ki system service",
    "start": "1158640",
    "end": "1164480"
  },
  {
    "text": "routine chaos system service then will eventually go to the system call",
    "start": "1164480",
    "end": "1171120"
  },
  {
    "text": "so here net to e just came in from our create file example",
    "start": "1171120",
    "end": "1176840"
  },
  {
    "text": "and n2e says oh well the function to handle this is chaos system service and",
    "start": "1176840",
    "end": "1183039"
  },
  {
    "text": "chaos system service says well i really need to index into the system call table",
    "start": "1183039",
    "end": "1188480"
  },
  {
    "text": "so that's what it does and remember eax had the system called number and that's just treated as an",
    "start": "1188480",
    "end": "1195280"
  },
  {
    "text": "index into this array it's just call table just big ray of function pointers",
    "start": "1195280",
    "end": "1201360"
  },
  {
    "text": "so you get the address out of this array of the actual function",
    "start": "1201360",
    "end": "1206559"
  },
  {
    "text": "which is nt create file it's also the same name that nt dll uses but that's just",
    "start": "1206559",
    "end": "1212160"
  },
  {
    "text": "by hemp luck more or less it doesn't have to be one-to-one corresponding",
    "start": "1212160",
    "end": "1218720"
  },
  {
    "text": "so now you have the address of the function that handles the call",
    "start": "1218840",
    "end": "1224400"
  },
  {
    "text": "and that's right there the function so these places can all be hooked",
    "start": "1224400",
    "end": "1230960"
  },
  {
    "text": "so i can hook right there i can hook there",
    "start": "1230960",
    "end": "1236720"
  },
  {
    "text": "i can hook the interrupt table itself",
    "start": "1236720",
    "end": "1243039"
  },
  {
    "text": "i can hook all these function pointers and in 2000 this is like almost 255",
    "start": "1243039",
    "end": "1250080"
  },
  {
    "text": "function pointers i can hook any one of those if i don't like that method i can just",
    "start": "1250080",
    "end": "1256000"
  },
  {
    "text": "write directly to memory i can patch the function itself",
    "start": "1256000",
    "end": "1261280"
  },
  {
    "text": "there's even more advanced ways to hook that i won't get into in this talk but you're welcome to ask me afterwards",
    "start": "1261280",
    "end": "1268000"
  },
  {
    "text": "and i'll go into it a little bit so",
    "start": "1268000",
    "end": "1273039"
  },
  {
    "text": "all that hooking although very effective is also becoming easier to spot",
    "start": "1273039",
    "end": "1278960"
  },
  {
    "text": "and vendors are getting used to this they're starting to look for this now",
    "start": "1278960",
    "end": "1285039"
  },
  {
    "text": "so when i was working for the intrusion prevention company we wrote code that if",
    "start": "1285679",
    "end": "1291440"
  },
  {
    "text": "you hooked our system call table or interrupt descriptor table or api stuff we would see that and we",
    "start": "1291440",
    "end": "1298480"
  },
  {
    "text": "would report it so the next generation of root kits i call dcom",
    "start": "1298480",
    "end": "1306320"
  },
  {
    "text": "and this will use no hooking whatsoever we'll just understand what the objects",
    "start": "1306320",
    "end": "1311919"
  },
  {
    "text": "are that the kernel reports upon and will modify them directly in memory",
    "start": "1311919",
    "end": "1319120"
  },
  {
    "text": "so to do this i wrote a rootkit it's called fu",
    "start": "1319120",
    "end": "1324240"
  },
  {
    "text": "it's a play on words with s u command in unix",
    "start": "1324240",
    "end": "1329679"
  },
  {
    "text": "and i'm sure it could also have other implications",
    "start": "1329679",
    "end": "1334159"
  },
  {
    "text": "but it's up on rootkit.com i go by the handle fusing op",
    "start": "1335679",
    "end": "1341440"
  },
  {
    "text": "fuz en underscore op there's no secret there in who i am",
    "start": "1341440",
    "end": "1347280"
  },
  {
    "text": "so it will demonstrate all these techniques for you and the code is",
    "start": "1347280",
    "end": "1354000"
  },
  {
    "text": "i'm not going to say it's bug-free for sure but i tried to do a decent job of commenting it so if there is a bug you'll at least",
    "start": "1354000",
    "end": "1360159"
  },
  {
    "text": "understand where it is and what it was doing",
    "start": "1360159",
    "end": "1364799"
  },
  {
    "text": "so since you have access to kernel memory as a device driver if you understand it well enough",
    "start": "1365840",
    "end": "1372240"
  },
  {
    "text": "you can just pound on these structures and still remain a fairly stable system",
    "start": "1372240",
    "end": "1380480"
  },
  {
    "text": "fu originally was a written all in assembly but that was done for two reasons",
    "start": "1381919",
    "end": "1388640"
  },
  {
    "text": "one i didn't want to get out a lot of the techniques um since we started teaching the class",
    "start": "1388640",
    "end": "1394640"
  },
  {
    "text": "here at black hat it doesn't lend well to teach a class where you're manipulating structures",
    "start": "1394640",
    "end": "1401039"
  },
  {
    "text": "with assembly so i changed it now it's in c",
    "start": "1401039",
    "end": "1407200"
  },
  {
    "text": "so what can you use dcom for what where does it not work",
    "start": "1407360",
    "end": "1412559"
  },
  {
    "text": "well there's this is a list you can obviously read of things that's good at",
    "start": "1412559",
    "end": "1418640"
  },
  {
    "text": "so hiding processes manipulating tokens to elevate the privilege",
    "start": "1418640",
    "end": "1424320"
  },
  {
    "text": "to manipulate tokens to fake out the windows event viewer so basically your your uh",
    "start": "1424320",
    "end": "1431840"
  },
  {
    "text": "chain of evidence in a court file a court case may be",
    "start": "1431840",
    "end": "1437120"
  },
  {
    "text": "a little bit questionable i'm not a lawyer so i won't i'll let you",
    "start": "1437120",
    "end": "1442720"
  },
  {
    "text": "ask jennifer granick that question he'll let you hide ports",
    "start": "1442720",
    "end": "1449200"
  },
  {
    "text": "the fu rootkit does not hide ports in its current implementation but this is possible using the same methodology of",
    "start": "1449200",
    "end": "1455840"
  },
  {
    "text": "dcom it's not good for is if you want to hide a file on disk",
    "start": "1455840",
    "end": "1461679"
  },
  {
    "text": "the reason is um that's not so much a structure in the",
    "start": "1461679",
    "end": "1467279"
  },
  {
    "text": "kernel that's persistent in the kernel memory that's something that's queried by",
    "start": "1467279",
    "end": "1473120"
  },
  {
    "text": "following the i nodes of directories and file systems and so on and so forth",
    "start": "1473120",
    "end": "1478960"
  },
  {
    "text": "so that's not something that's in memory that you can just stomp all over",
    "start": "1478960",
    "end": "1484720"
  },
  {
    "text": "that's a method where you would still probably want to use hooking to achieve your results",
    "start": "1484960",
    "end": "1492158"
  },
  {
    "text": "so i think everyone understands the implications of this one you you sort of have free reign of",
    "start": "1496000",
    "end": "1503039"
  },
  {
    "text": "the system and i will note here that you could have installed your root kit",
    "start": "1503039",
    "end": "1510080"
  },
  {
    "text": "as an elevated user and then come back at a later time",
    "start": "1510080",
    "end": "1515600"
  },
  {
    "text": "and use it to bump yourself back up so regardless of what preventative measures",
    "start": "1515600",
    "end": "1522880"
  },
  {
    "text": "are in place you know some of these uh intrusion prevention systems won't allow you to elevate your token",
    "start": "1522880",
    "end": "1529279"
  },
  {
    "text": "privilege through the normal you know microsoft api calls but since i'm just writing directly to",
    "start": "1529279",
    "end": "1536480"
  },
  {
    "text": "memory i don't have to worry about any of the api calls",
    "start": "1536480",
    "end": "1542400"
  },
  {
    "text": "so defeat a lot of the ids's and ips's that are host-based because they rely",
    "start": "1542400",
    "end": "1547440"
  },
  {
    "text": "upon the os and it has another implication in forensics",
    "start": "1547440",
    "end": "1553520"
  },
  {
    "text": "to skew the results of that and at least probably lend a little bit of",
    "start": "1553520",
    "end": "1558559"
  },
  {
    "text": "reasonable doubt to the evidence so how do you go about hiding processes",
    "start": "1558559",
    "end": "1565039"
  },
  {
    "text": "in windows i'll also show you how to hide processes in linux mints little bit different spin",
    "start": "1565039",
    "end": "1571679"
  },
  {
    "text": "at the end of it so here's just some of the structures that are used by the kernel",
    "start": "1571679",
    "end": "1578240"
  },
  {
    "text": "there's a link list of all the processes and it's called an e-process block e",
    "start": "1578240",
    "end": "1584400"
  },
  {
    "text": "stands for executive there's ease and there's k's k is i guess kernel",
    "start": "1584400",
    "end": "1590320"
  },
  {
    "text": "so there's executive processes which contain a structure that is an",
    "start": "1590320",
    "end": "1595600"
  },
  {
    "text": "embedded kernel process structure and so on and so forth every process",
    "start": "1595600",
    "end": "1601760"
  },
  {
    "text": "like this this is an individual process and it's linked to that thread e thread again executive thread",
    "start": "1601760",
    "end": "1609520"
  },
  {
    "text": "every process has to have at least one or more threads in the windows",
    "start": "1609520",
    "end": "1615919"
  },
  {
    "text": "kernel and then there's this processor control block",
    "start": "1615919",
    "end": "1621039"
  },
  {
    "text": "which points to the current thread the next thread to be ran",
    "start": "1621039",
    "end": "1628000"
  },
  {
    "text": "and the idle thread and we'll use all this information",
    "start": "1628000",
    "end": "1633919"
  },
  {
    "text": "to eventually find the process we're looking for to hide",
    "start": "1633919",
    "end": "1640520"
  },
  {
    "text": "so you want to do this decom stuff in a relatively reliable fashion and not have to recompile for every",
    "start": "1643840",
    "end": "1649760"
  },
  {
    "text": "single kernel you run under so you want to gather as much information as you can dynamically",
    "start": "1649760",
    "end": "1655840"
  },
  {
    "text": "so for one thing there's this process control block region which there's books that define",
    "start": "1655840",
    "end": "1662400"
  },
  {
    "text": "what its elements are and how you find it you could hard code in the address",
    "start": "1662400",
    "end": "1667760"
  },
  {
    "text": "of the processor control block or you can use the fs register when",
    "start": "1667760",
    "end": "1673600"
  },
  {
    "text": "you're in kernel when you're in kernel the fs register is basically uh",
    "start": "1673600",
    "end": "1679919"
  },
  {
    "text": "leads you to the processor control block i'll say so within the processor control block",
    "start": "1679919",
    "end": "1686399"
  },
  {
    "text": "there's the current thread block within the current",
    "start": "1686399",
    "end": "1691520"
  },
  {
    "text": "thread block there's a link to the current process block",
    "start": "1691520",
    "end": "1697520"
  },
  {
    "text": "and then the process blocks you saw are all they're circular",
    "start": "1697520",
    "end": "1702799"
  },
  {
    "text": "circularly linked so if you get to the end you'll end up back at the beginning and they're doubly linked so you can go",
    "start": "1702799",
    "end": "1710240"
  },
  {
    "text": "forwards or backwards around the circle and that's important",
    "start": "1710240",
    "end": "1717679"
  },
  {
    "text": "so once you get to the e thread then you get to the buck it has a k thread in it",
    "start": "1718399",
    "end": "1724880"
  },
  {
    "text": "once you're in the k thread you can get to the e process block and from the e process block you have",
    "start": "1724880",
    "end": "1730159"
  },
  {
    "text": "access to this linked list and that's what we're going to modify",
    "start": "1730159",
    "end": "1735840"
  },
  {
    "text": "to hide a process so all we have to do is",
    "start": "1735840",
    "end": "1743039"
  },
  {
    "text": "you notice before here the if we want to have this process",
    "start": "1743039",
    "end": "1749200"
  },
  {
    "text": "this process the process behind us in the list points to us and the process in front of us",
    "start": "1749200",
    "end": "1756320"
  },
  {
    "text": "points back to us so we have to make modifications to both of these e-processes",
    "start": "1756320",
    "end": "1764520"
  },
  {
    "text": "we can do that basically the list entry that you saw there contains two elements it's",
    "start": "1766080",
    "end": "1772399"
  },
  {
    "text": "two pointers a flink and a blink so a flink is a forward link and a blink is obviously backward link",
    "start": "1772399",
    "end": "1779360"
  },
  {
    "text": "and if you modify those in the right way you just tell the processes to point around you",
    "start": "1779360",
    "end": "1786799"
  },
  {
    "text": "so this is a little animation no magic right here we've done all the calls you know to get",
    "start": "1787520",
    "end": "1794559"
  },
  {
    "text": "the current thread we've got the current thread we've got the current process and in this example",
    "start": "1794559",
    "end": "1800399"
  },
  {
    "text": "we assume you're trying to hide the current process but you don't have to assume that you",
    "start": "1800399",
    "end": "1806880"
  },
  {
    "text": "can walk the list of e-process blocks until you reach the process you want to hide",
    "start": "1806880",
    "end": "1814080"
  },
  {
    "text": "so in this case change the process behind us to point around us to the one in front and change",
    "start": "1815039",
    "end": "1822640"
  },
  {
    "text": "the one in front to point around us to the one behind us and we've just totally disconnected",
    "start": "1822640",
    "end": "1830559"
  },
  {
    "text": "ourselves from the list and the colonel will no longer report that that process exists",
    "start": "1830559",
    "end": "1837600"
  },
  {
    "text": "and there will be demo at the end i'll show you that this is true",
    "start": "1837600",
    "end": "1843360"
  },
  {
    "text": "so when i originally code this up when you start out doing research like this you",
    "start": "1844000",
    "end": "1849200"
  },
  {
    "text": "you find a couple interesting books that are probably the you know undocumented windows 2000 secrets or",
    "start": "1849200",
    "end": "1855520"
  },
  {
    "text": "whatever and they may have hints about some of this because they'll define what these structures look like",
    "start": "1855520",
    "end": "1862080"
  },
  {
    "text": "or at least as best as they can through reverse engineering but you still don't know if your",
    "start": "1862080",
    "end": "1867760"
  },
  {
    "text": "technique will work maybe you can now guarantee that you can modify the structure",
    "start": "1867760",
    "end": "1873200"
  },
  {
    "text": "but there's no guarantee at the end of the day once you do that i'll still run that's",
    "start": "1873200",
    "end": "1878240"
  },
  {
    "text": "sort of the trial and error part so when i code this up i was happily surprised that my process still",
    "start": "1878240",
    "end": "1885440"
  },
  {
    "text": "got scheduled and the reason is this is this is",
    "start": "1885440",
    "end": "1890640"
  },
  {
    "text": "another important lesson to take from this talk hopefully not only do we",
    "start": "1890640",
    "end": "1896000"
  },
  {
    "text": "have no separation of powers between our kernel and",
    "start": "1896000",
    "end": "1901440"
  },
  {
    "text": "third-party drivers although there is different layers within the intel architecture that",
    "start": "1901440",
    "end": "1907679"
  },
  {
    "text": "possibly we could leverage to prevent some of this there's that lesson to take away and",
    "start": "1907679",
    "end": "1913519"
  },
  {
    "text": "then there's also never re if you're an os vendor or",
    "start": "1913519",
    "end": "1919039"
  },
  {
    "text": "anything else never report on one element of data and schedule on another in this case",
    "start": "1919039",
    "end": "1926799"
  },
  {
    "text": "that's just not good at all",
    "start": "1926799",
    "end": "1930880"
  },
  {
    "text": "so we'll talk about hiding processes in linux because i'm an equal opportunity exploiter",
    "start": "1932080",
    "end": "1939200"
  },
  {
    "text": "now i will say that at the end of the talk you'll spur the end of this portion you'll see that linux is a little bit",
    "start": "1940880",
    "end": "1947519"
  },
  {
    "text": "different and this doesn't quite work but it's not because linux is some",
    "start": "1947519",
    "end": "1953120"
  },
  {
    "text": "you know you know more advanced os than windows",
    "start": "1953120",
    "end": "1958799"
  },
  {
    "text": "it just happens to be that linux is so simple it's sort of",
    "start": "1958799",
    "end": "1964000"
  },
  {
    "text": "locked into this not working and i'll talk about that in a moment",
    "start": "1964000",
    "end": "1969519"
  },
  {
    "text": "so in linux in the linux kernel and i'm by no means an expert in linux i try to",
    "start": "1969519",
    "end": "1975360"
  },
  {
    "text": "just stay to what i know which is the windows in the linux kernel there's a task",
    "start": "1975360",
    "end": "1981440"
  },
  {
    "text": "dropped a task struct is equivalent to an e-process block",
    "start": "1981440",
    "end": "1986799"
  },
  {
    "text": "in windows within the task struct there's a linked list",
    "start": "1986799",
    "end": "1992640"
  },
  {
    "text": "it's a doubly linked list and it's circular also that is the previous task and the next",
    "start": "1992640",
    "end": "1999679"
  },
  {
    "text": "task so by following this list you'll get all the running processes",
    "start": "1999679",
    "end": "2005519"
  },
  {
    "text": "but within that task struct there's an additional element that isn't in the windows z process",
    "start": "2005519",
    "end": "2011600"
  },
  {
    "text": "block and that's called next drawn and previous run and",
    "start": "2011600",
    "end": "2018000"
  },
  {
    "text": "there isn't so much the notion of threads in in this context down in the kernel",
    "start": "2018000",
    "end": "2024080"
  },
  {
    "text": "it's basically based upon processes so things are scheduled based upon the process",
    "start": "2024080",
    "end": "2031360"
  },
  {
    "text": "so the tasks uh previous run next run point to the test",
    "start": "2031360",
    "end": "2036640"
  },
  {
    "text": "structures of the things to run next obviously from the name and the thing that just",
    "start": "2036640",
    "end": "2043600"
  },
  {
    "text": "ran so if you want to hide the process in linux you can modify",
    "start": "2044840",
    "end": "2050320"
  },
  {
    "text": "the previous uh task and next task which are just pointers",
    "start": "2050320",
    "end": "2055679"
  },
  {
    "text": "to task structs but leave the run and the next run the previous run alone",
    "start": "2055679",
    "end": "2063280"
  },
  {
    "text": "otherwise um that's that's the scheduling mechanism so you don't want to screw with it",
    "start": "2063280",
    "end": "2069679"
  },
  {
    "text": "so in memory in the linux kernel this is what the list of processes look like",
    "start": "2069679",
    "end": "2076158"
  },
  {
    "text": "there's a task array that has pointers to each one of these task structs",
    "start": "2076159",
    "end": "2082240"
  },
  {
    "text": "and i suppose possibly i'm just theorizing here i haven't tried it that maybe you could walk this array",
    "start": "2082240",
    "end": "2089040"
  },
  {
    "text": "and get all the tasks right so even if people disconnected you here",
    "start": "2089040",
    "end": "2095358"
  },
  {
    "text": "you would still get the list because it's an array and you can walk an array you can index it",
    "start": "2095359",
    "end": "2102480"
  },
  {
    "text": "so you'll see the previous uh previous task next task linked list",
    "start": "2102480",
    "end": "2107599"
  },
  {
    "text": "and down here is the previous run next run and this is important this one right",
    "start": "2107599",
    "end": "2113920"
  },
  {
    "text": "here so this is task struct for process id 0. process id 0 and linux",
    "start": "2113920",
    "end": "2121920"
  },
  {
    "text": "is the um the init process the init process is the very very first",
    "start": "2121920",
    "end": "2127520"
  },
  {
    "text": "process that's still around when your kernel is up and running",
    "start": "2127520",
    "end": "2132560"
  },
  {
    "text": "so it has process id 0 and since it's the very father of all",
    "start": "2132560",
    "end": "2138000"
  },
  {
    "text": "processes it has no parent these are parent pointers",
    "start": "2138000",
    "end": "2143359"
  },
  {
    "text": "to the parent process child sibling etc etc",
    "start": "2143359",
    "end": "2148960"
  },
  {
    "text": "so since it has no parent because it's the init its parent is null",
    "start": "2148960",
    "end": "2155680"
  },
  {
    "text": "and we'll use that in a moment so if we want to how to process",
    "start": "2155680",
    "end": "2162000"
  },
  {
    "text": "we can take ourselves out of this list but i'll talk about why we need to do",
    "start": "2162000",
    "end": "2168640"
  },
  {
    "text": "this we change the parent of the init process to now point to the",
    "start": "2168640",
    "end": "2174480"
  },
  {
    "text": "hidden uh task struct",
    "start": "2174480",
    "end": "2179119"
  },
  {
    "text": "and this is why so i've coded this up in linux because it's you know in linux it's open",
    "start": "2179839",
    "end": "2187359"
  },
  {
    "text": "source so you can read what all these structures look like and everything it's so it's a lot easier",
    "start": "2187359",
    "end": "2192960"
  },
  {
    "text": "to code up but the problem was as soon as i ran it my process that i was hiding froze",
    "start": "2192960",
    "end": "2200800"
  },
  {
    "text": "sometimes the whole system froze and sometimes it core don't",
    "start": "2200800",
    "end": "2206320"
  },
  {
    "text": "so that's not good and then i was like why did that happen you know so i did a search on google",
    "start": "2206320",
    "end": "2213200"
  },
  {
    "text": "and someone else actually had done this same same deal before i'll sign up but to those this point",
    "start": "2213200",
    "end": "2220320"
  },
  {
    "text": "i did not do this trick this isn't my trick this is someone else's",
    "start": "2220320",
    "end": "2225599"
  },
  {
    "text": "if you do a search on google under fandues morgia or something for that effect it's like pha and then",
    "start": "2225599",
    "end": "2233440"
  },
  {
    "text": "morgia you'll find that there's a rootkit that does this i'm not sure if that's the",
    "start": "2233440",
    "end": "2238640"
  },
  {
    "text": "name of the guy who wrote it or the name of the rootkit itself but he noticed this behavior also that",
    "start": "2238640",
    "end": "2246079"
  },
  {
    "text": "things froze when you modify these lists so after i had the problem",
    "start": "2246079",
    "end": "2251280"
  },
  {
    "text": "then i searched for the cure and came across his work and he tells why this happens",
    "start": "2251280",
    "end": "2258160"
  },
  {
    "text": "uh basically because if you read a good linux kernel book you'll see how it'll tell you how things",
    "start": "2258160",
    "end": "2264160"
  },
  {
    "text": "get scheduled to run and basically in windows there's a bunch of cues",
    "start": "2264160",
    "end": "2272000"
  },
  {
    "text": "for the different thread priorities in linux there's is not so much done that way",
    "start": "2272000",
    "end": "2277680"
  },
  {
    "text": "what happens is it runs the list of processes this linked list and it calculates a goodness value",
    "start": "2277680",
    "end": "2284960"
  },
  {
    "text": "every time a process is going to be swapped in so you have to be in that list",
    "start": "2284960",
    "end": "2290960"
  },
  {
    "text": "so that you get a new goodness value and based upon your goodness value the",
    "start": "2290960",
    "end": "2296400"
  },
  {
    "text": "kernel will assign jiffys which are tom slots to your process to run",
    "start": "2296400",
    "end": "2302240"
  },
  {
    "text": "so if you never get a new goodness value you never get scheduled",
    "start": "2302240",
    "end": "2308319"
  },
  {
    "text": "so in this case linux although i believe much by accident is somewhat immune to this without",
    "start": "2309040",
    "end": "2315760"
  },
  {
    "text": "going through an additional step the additional step being you have to patch the scheduler",
    "start": "2315760",
    "end": "2322640"
  },
  {
    "text": "so that it knows where to look for your hidden processes so that you still get scheduled time to run",
    "start": "2322640",
    "end": "2330160"
  },
  {
    "text": "that's possible fantasmorgy does it in this case you would patch the scheduler",
    "start": "2332560",
    "end": "2337760"
  },
  {
    "text": "to every time you're going to recalculate goodness values not only do you have to visit every",
    "start": "2337760",
    "end": "2344240"
  },
  {
    "text": "single task that may be in this linked list but you also have to visit",
    "start": "2344240",
    "end": "2349760"
  },
  {
    "text": "the parent of the init process and calculate these hidden processes",
    "start": "2349760",
    "end": "2355440"
  },
  {
    "text": "goodness values and thanos mortgage did a very good job of that so i wasn't going to",
    "start": "2355440",
    "end": "2360640"
  },
  {
    "text": "try to recreate that work",
    "start": "2360640",
    "end": "2364160"
  },
  {
    "text": "so moving on what else can we do with uh direct kernel object manipulation",
    "start": "2366640",
    "end": "2372800"
  },
  {
    "text": "well we can have a lot of fun with tokens these present their own set of problems",
    "start": "2372800",
    "end": "2378320"
  },
  {
    "text": "but um they seem to be a little more stable than manipulating linked lists and things like that",
    "start": "2378320",
    "end": "2385359"
  },
  {
    "text": "so within a token in windows you have a set of privileges you may have seen this like the se debug",
    "start": "2385440",
    "end": "2393119"
  },
  {
    "text": "privilege you know you never want to give someone the sad bug privilege because then they basically can attach a debugger to your",
    "start": "2393119",
    "end": "2400160"
  },
  {
    "text": "processes and single step it or do whatever you know debuggers have a lot of power",
    "start": "2400160",
    "end": "2406400"
  },
  {
    "text": "so there's that privilege there's the se shut down privilege se backup privilege",
    "start": "2406400",
    "end": "2412000"
  },
  {
    "text": "the list goes on and on and if you download fu there's a text file in there called",
    "start": "2412000",
    "end": "2418480"
  },
  {
    "text": "list privileges so you don't have to worry about it i'll list out i've searched all the dot h files",
    "start": "2418480",
    "end": "2424480"
  },
  {
    "text": "that i can find from microsoft and i list all the privileges for you in text",
    "start": "2424480",
    "end": "2430079"
  },
  {
    "text": "so you can just say hey i want to add this privilege to my token they'll do",
    "start": "2430079",
    "end": "2435839"
  },
  {
    "text": "it also within tokens there are groups user and group sids",
    "start": "2436839",
    "end": "2443040"
  },
  {
    "text": "and these control these are really the key if you can manipulate this add the",
    "start": "2443040",
    "end": "2448480"
  },
  {
    "text": "system sid or whatnot to your token then you have all the power of system",
    "start": "2448480",
    "end": "2454880"
  },
  {
    "text": "uh it's not as useful or privileges aren't as useful because you still are restricted based",
    "start": "2454880",
    "end": "2460400"
  },
  {
    "text": "upon your sids in a lot of cases also within the token that's how these",
    "start": "2460400",
    "end": "2467440"
  },
  {
    "text": "reporting mechanisms like the event viewer and other syslog type programs determine which",
    "start": "2467440",
    "end": "2474800"
  },
  {
    "text": "process caused the action in many cases so for instance if you have um",
    "start": "2474800",
    "end": "2481359"
  },
  {
    "text": "detailed process tracking on in windows it'll say in the event viewer",
    "start": "2481359",
    "end": "2486640"
  },
  {
    "text": "you know jamie just started regedit 32",
    "start": "2486640",
    "end": "2491839"
  },
  {
    "text": "and maybe jamie has no business being in your registry which is probably the truth",
    "start": "2491839",
    "end": "2497359"
  },
  {
    "text": "then you can uh forensic consoles and other things they can use the event viewer to report hey",
    "start": "2497359",
    "end": "2504880"
  },
  {
    "text": "this is an anomaly you have a security posture you have a security policy within your organization",
    "start": "2504880",
    "end": "2511440"
  },
  {
    "text": "and this doesn't fall in to the set of actions you know you said you said that the",
    "start": "2511440",
    "end": "2517680"
  },
  {
    "text": "security policy should follow so then somebody can call you that person up and say",
    "start": "2517680",
    "end": "2524160"
  },
  {
    "text": "hey jamie you know why are you in your registry this could be very bad",
    "start": "2524160",
    "end": "2530318"
  },
  {
    "text": "within a token it's a little more tricky because there's a static part and there's a variable length part",
    "start": "2530480",
    "end": "2537280"
  },
  {
    "text": "the static part contains things such as the count of the number of privileges in a token",
    "start": "2537280",
    "end": "2543839"
  },
  {
    "text": "the count of the number of sids the count of the restricted sids and i won't cover that in this uh in",
    "start": "2543839",
    "end": "2550880"
  },
  {
    "text": "this talk restricted sids are a new thing as of windows 2000 so they're not totally new",
    "start": "2550880",
    "end": "2556640"
  },
  {
    "text": "but they they're not used a lot in in commercial software maybe the os itself",
    "start": "2556640",
    "end": "2562560"
  },
  {
    "text": "you from microsoft uses it but others don't",
    "start": "2562560",
    "end": "2567760"
  },
  {
    "text": "and there's also a pointer to where the sids are there's a pointer to where the privileges are and there's pointers to",
    "start": "2568560",
    "end": "2575839"
  },
  {
    "text": "where the variable length of the token starts another important item of interest here",
    "start": "2575839",
    "end": "2583920"
  },
  {
    "text": "is authentication id this is called auth id",
    "start": "2583920",
    "end": "2589040"
  },
  {
    "text": "for some the event viewer will actually use this d word it's",
    "start": "2589040",
    "end": "2594560"
  },
  {
    "text": "four bytes they'll use that d word to help identify who",
    "start": "2594560",
    "end": "2600240"
  },
  {
    "text": "the process is running as so you could say oh well you know somebody just spawned cmd",
    "start": "2600240",
    "end": "2608000"
  },
  {
    "text": "and by the way their auth id is 0 3 e7 so that's these auth id for system",
    "start": "2608000",
    "end": "2616720"
  },
  {
    "text": "so we'll manipulate that in a moment and get some cool results",
    "start": "2616720",
    "end": "2622319"
  },
  {
    "text": "so within the variable part since like i said we've covered this privileges there's a variable number of privileges so they have to go into a",
    "start": "2622319",
    "end": "2629359"
  },
  {
    "text": "variable length part same with users and groups and restricted sids",
    "start": "2629359",
    "end": "2635838"
  },
  {
    "text": "now there will be a question at the end of this slide i believe or the next one so",
    "start": "2637520",
    "end": "2643040"
  },
  {
    "text": "if you want to manipulate a token you you can't just write at the end of",
    "start": "2643040",
    "end": "2648880"
  },
  {
    "text": "the token because remember these are variable length portions so the static portion of",
    "start": "2648880",
    "end": "2654880"
  },
  {
    "text": "the token and the variable length are contiguous in memory but you can't just write at the end of",
    "start": "2654880",
    "end": "2660000"
  },
  {
    "text": "the variable length because you have no idea what type of memory you would be stomping on",
    "start": "2660000",
    "end": "2665839"
  },
  {
    "text": "it could be another token it could be some kind of space the kernel is using for something different",
    "start": "2665839",
    "end": "2671200"
  },
  {
    "text": "so it's like the wild wild west down there and you just can't go there so",
    "start": "2671200",
    "end": "2677280"
  },
  {
    "text": "um an obvious solution to this problem when i first wrote the root kit",
    "start": "2677280",
    "end": "2683119"
  },
  {
    "text": "using dcom was i'll allocate memory anytime you need to grow something you",
    "start": "2683119",
    "end": "2689599"
  },
  {
    "text": "just allocate more memory right so that's what i did and i created this new",
    "start": "2689599",
    "end": "2695920"
  },
  {
    "text": "memory up here that had the new tokens and the new privileges because i had all the room i wanted when",
    "start": "2695920",
    "end": "2702079"
  },
  {
    "text": "i'm allocating and then remember in the static portion there was pointers to the sids and",
    "start": "2702079",
    "end": "2709599"
  },
  {
    "text": "pointers to the privileges so i'm thinking okay well this is cool because it doesn't have to be contiguous",
    "start": "2709599",
    "end": "2716480"
  },
  {
    "text": "the way the kernel uses it because it has pointers in the static portion to",
    "start": "2716480",
    "end": "2721599"
  },
  {
    "text": "where these things reside so they don't have to be right after the static portion of the token they",
    "start": "2721599",
    "end": "2727119"
  },
  {
    "text": "could be elsewhere as long as i fix those pointers up to point to my newly allocated memory",
    "start": "2727119",
    "end": "2733920"
  },
  {
    "text": "everything should work just great well it doesn't quite work that way",
    "start": "2733920",
    "end": "2742480"
  },
  {
    "text": "what happens is if you manipulate a token and say you give it system",
    "start": "2742480",
    "end": "2749920"
  },
  {
    "text": "by allocating new memory well that works as long as that",
    "start": "2749920",
    "end": "2755760"
  },
  {
    "text": "that process never spawns a child process once it spawns a child process",
    "start": "2755760",
    "end": "2762560"
  },
  {
    "text": "all bets are off you may even blue screen and i released it this way",
    "start": "2762560",
    "end": "2768319"
  },
  {
    "text": "because i chased it for a while and i couldn't understand what the problem was and",
    "start": "2768319",
    "end": "2773680"
  },
  {
    "text": "i was sort of out of it now at that point you know i wasn't really concerned with it i'd proven my",
    "start": "2773680",
    "end": "2780079"
  },
  {
    "text": "initial what i wanted to prove and now i was just sort of writing something for the",
    "start": "2780079",
    "end": "2786079"
  },
  {
    "text": "community so i release it and i put in my notes in the source code here's a caveat don't",
    "start": "2786079",
    "end": "2792079"
  },
  {
    "text": "start a child process because it could blue screen i haven't quite figured out why",
    "start": "2792079",
    "end": "2799920"
  },
  {
    "text": "also the reason to release it and talk about it is so that others contribute well",
    "start": "2800000",
    "end": "2806240"
  },
  {
    "text": "so far a couple people have contributed bugs but they haven't really advanced it",
    "start": "2806240",
    "end": "2812480"
  },
  {
    "text": "any yet so i got an email from someone in england",
    "start": "2812480",
    "end": "2817760"
  },
  {
    "text": "and they said hey you know this is great but this token stuff is a little screwy",
    "start": "2817760",
    "end": "2825119"
  },
  {
    "text": "you know i'm having some blue screens when i create a child or dlls can't be",
    "start": "2825119",
    "end": "2830240"
  },
  {
    "text": "found when there's a child and i try to load dlls and so on and so forth and i was",
    "start": "2830240",
    "end": "2835839"
  },
  {
    "text": "like yeah i know but i said that when i released it and but it's a matter of pride at that",
    "start": "2835839",
    "end": "2842160"
  },
  {
    "text": "point when somebody calls you on it especially if it's in a public fashion you know you definitely want to go back",
    "start": "2842160",
    "end": "2847359"
  },
  {
    "text": "and fix it so i said okay this is just crap i shouldn't have released it i'll go back and i'll spend the time to fix it so",
    "start": "2847359",
    "end": "2853839"
  },
  {
    "text": "it's about three days of soft ice and a lot of coffee and you run into scp",
    "start": "2853839",
    "end": "2859599"
  },
  {
    "text": "duplicate token the p here in this case in the kernel there these are if you have the symbols",
    "start": "2859599",
    "end": "2865520"
  },
  {
    "text": "loaded for your kernel p usually stands for private function uh in other words microsoft is not",
    "start": "2865520",
    "end": "2871040"
  },
  {
    "text": "exporting that from the kernel it's internal to itself and what it does is it does some",
    "start": "2871040",
    "end": "2877200"
  },
  {
    "text": "assumptions on where these things lie in memory as far as static and the variable part",
    "start": "2877200",
    "end": "2884800"
  },
  {
    "text": "and where the new child token is going to be created and so on and so forth",
    "start": "2884800",
    "end": "2890000"
  },
  {
    "text": "so it does some really crazy math it doesn't use the pointers in the way you would think use the pointers because",
    "start": "2890000",
    "end": "2896160"
  },
  {
    "text": "child processes inherit the token of their parent for the most part",
    "start": "2896160",
    "end": "2901359"
  },
  {
    "text": "so you would think okay if i'm writing the function that creates the new child token",
    "start": "2901359",
    "end": "2908160"
  },
  {
    "text": "i'll just go to the parent look where it's sids are because there's a pointer",
    "start": "2908160",
    "end": "2913680"
  },
  {
    "text": "in the static portion that tells me where they are and i'll go over there and i already have a count because it's",
    "start": "2913680",
    "end": "2919280"
  },
  {
    "text": "in the static portion also and i'll just copy that memory into the child processes token",
    "start": "2919280",
    "end": "2924640"
  },
  {
    "text": "well that's not how it's done they do some assumptions on the memory layout",
    "start": "2924640",
    "end": "2930800"
  },
  {
    "text": "and then they do some subtraction so subtract from where the child is to where the pointer says",
    "start": "2930800",
    "end": "2937359"
  },
  {
    "text": "the uh sids and privileges are and based upon this distance",
    "start": "2937359",
    "end": "2944400"
  },
  {
    "text": "we'll know how much memory to copy and where to say the new sids and the new privileges are it's really crazy",
    "start": "2944400",
    "end": "2951760"
  },
  {
    "text": "math and once i found the line that's doing it i didn't really care as to learn why they did it that way because",
    "start": "2951760",
    "end": "2958800"
  },
  {
    "text": "all i need to do is find a fix so",
    "start": "2958800",
    "end": "2964160"
  },
  {
    "text": "does anybody have an idea of how you might go about fixing this",
    "start": "2964160",
    "end": "2971160"
  },
  {
    "text": "well you could patch the function yes that would work but that gets i mean patching live kernels in memory",
    "start": "2973839",
    "end": "2981680"
  },
  {
    "text": "gets a bit hairy you know modifying memory directly as far as",
    "start": "2981680",
    "end": "2987119"
  },
  {
    "text": "structures go gets complicated and a bit dicey at times so you want a more reliable way to do it",
    "start": "2987119",
    "end": "2994559"
  },
  {
    "text": "although that would work another approach you could take is",
    "start": "2994559",
    "end": "3000880"
  },
  {
    "text": "find room excuse me find room within the token",
    "start": "3000880",
    "end": "3006160"
  },
  {
    "text": "to get extra space and that's what i did that's like an inline method",
    "start": "3006160",
    "end": "3011359"
  },
  {
    "text": "so the token doesn't shrink it doesn't grow just some of the things within it",
    "start": "3011359",
    "end": "3016640"
  },
  {
    "text": "go away because i decide we don't need them and that frees up room in our token for",
    "start": "3016640",
    "end": "3022000"
  },
  {
    "text": "the new sids or the new privileges and i'll show you animated slides of",
    "start": "3022000",
    "end": "3029200"
  },
  {
    "text": "this it'll become a little more obvious so",
    "start": "3029200",
    "end": "3034319"
  },
  {
    "text": "at the beginning of the variable length portion of the token is of the width and attribute structure",
    "start": "3034319",
    "end": "3041200"
  },
  {
    "text": "now a lluid is a locally unique id and it's not guaranteed to be",
    "start": "3041200",
    "end": "3046640"
  },
  {
    "text": "the same between reboots and that's one reason that the fu rootkit has a user land portion and a",
    "start": "3046640",
    "end": "3053839"
  },
  {
    "text": "kernel portion the user land does the hard stuff like okay you want to add sedbug privilege",
    "start": "3053839",
    "end": "3061040"
  },
  {
    "text": "well that's a string that strings never found a token it corresponds to a number",
    "start": "3061040",
    "end": "3067200"
  },
  {
    "text": "so it's a lot more efficient to store a number as it is opposed to text so you can say",
    "start": "3067200",
    "end": "3073599"
  },
  {
    "text": "give me the lid of se shut down privilege and the colonel will gladly respond",
    "start": "3073599",
    "end": "3080079"
  },
  {
    "text": "you know through the api calls and says oh well that's you know the wid 13",
    "start": "3080079",
    "end": "3086720"
  },
  {
    "text": "then there's an attribute and that tells you whether the um",
    "start": "3086720",
    "end": "3093280"
  },
  {
    "text": "whether the privilege is enabled or disabled so just because you have a privilege in your token",
    "start": "3093280",
    "end": "3098720"
  },
  {
    "text": "doesn't mean you can use it because it can be disabled so like sed bug privilege as you're",
    "start": "3098720",
    "end": "3105760"
  },
  {
    "text": "usually disabled in all processes unless they're a debugger",
    "start": "3105760",
    "end": "3111800"
  },
  {
    "text": "well disabled privileges sounds like a really good place to look to free up memory",
    "start": "3113040",
    "end": "3119200"
  },
  {
    "text": "because if it's disabled why do i need it anyway it's not buying me anything",
    "start": "3119200",
    "end": "3124960"
  },
  {
    "text": "so here on this slide this is a loose representation or it's actually",
    "start": "3124960",
    "end": "3130880"
  },
  {
    "text": "fairly accurate representation of the token in memory so that's the static portion",
    "start": "3130880",
    "end": "3136559"
  },
  {
    "text": "in this case it would say there's four privileges in this token and we don't speak of sids right now",
    "start": "3136559",
    "end": "3143440"
  },
  {
    "text": "because we're just adding a privilege which is all up here so it would the static portion would say",
    "start": "3143440",
    "end": "3149200"
  },
  {
    "text": "hey will the privileges begin at this address and there's four of them the ones in red are the ones that are",
    "start": "3149200",
    "end": "3155119"
  },
  {
    "text": "disabled the ones in blue are the ones that are enabled and you'll see in a moment",
    "start": "3155119",
    "end": "3160960"
  },
  {
    "text": "that the added privileges will be in green so we need to get rid of all the disabled",
    "start": "3160960",
    "end": "3166880"
  },
  {
    "text": "privileges to make room for our new stuff so we just sort of blast memory move it",
    "start": "3166880",
    "end": "3173760"
  },
  {
    "text": "around a bit move around these uh arrays of privileges",
    "start": "3173760",
    "end": "3179119"
  },
  {
    "text": "and now we just have the privileges that are enabled and this gray portion",
    "start": "3179119",
    "end": "3185200"
  },
  {
    "text": "represents all the memory i just freed up to put my new stuff into",
    "start": "3185200",
    "end": "3191760"
  },
  {
    "text": "so now i have room and i can add my new privileges here",
    "start": "3191760",
    "end": "3196800"
  },
  {
    "text": "this could be backup privilege or act as part of the trusted computing based privilege",
    "start": "3196800",
    "end": "3203519"
  },
  {
    "text": "this is a similar concept we'll use throughout um for adding sids and groups too",
    "start": "3206240",
    "end": "3212880"
  },
  {
    "text": "there's an um structure of sin attributes within this um",
    "start": "3212880",
    "end": "3219440"
  },
  {
    "text": "token and its array of us sit and attribute structures and it contains the pointer to the sid",
    "start": "3219440",
    "end": "3227280"
  },
  {
    "text": "considers a variable length and it also contains the attribute that",
    "start": "3227280",
    "end": "3233040"
  },
  {
    "text": "describes like the the sid may be mandatory in the process and so on and so forth i",
    "start": "3233040",
    "end": "3239359"
  },
  {
    "text": "didn't get much into the attributes i just sort of copied the ones that existed what i do need to worry about is making",
    "start": "3239359",
    "end": "3246160"
  },
  {
    "text": "a new sit in that room for a new sit and attribute structure and i need to make",
    "start": "3246160",
    "end": "3251359"
  },
  {
    "text": "room for a new sid within the token so again",
    "start": "3251359",
    "end": "3257440"
  },
  {
    "text": "play this little trick now i've just freed up memory in line within the token",
    "start": "3257440",
    "end": "3263280"
  },
  {
    "text": "and i'm i can start adding uh sids and priv or sids in this case",
    "start": "3263280",
    "end": "3269280"
  },
  {
    "text": "one thing you want to be careful of when you're doing this is that say i passed down eights eight sids to",
    "start": "3269280",
    "end": "3278160"
  },
  {
    "text": "my root kit to add to a token that's completely legitimate thing to do",
    "start": "3278160",
    "end": "3284559"
  },
  {
    "text": "but if i didn't free up enough room to hold all those eight",
    "start": "3284559",
    "end": "3290160"
  },
  {
    "text": "i need to return an error code because otherwise i'll just start writing over memory",
    "start": "3290160",
    "end": "3296319"
  },
  {
    "text": "through the restricted sids and other things so we want to restore the original sids",
    "start": "3296319",
    "end": "3302559"
  },
  {
    "text": "that were there because they were probably there for a reason so we want to put those back and those are in",
    "start": "3302559",
    "end": "3308160"
  },
  {
    "text": "yellow or oranges",
    "start": "3308160",
    "end": "3312318"
  },
  {
    "text": "and the sids come at the end of the array of sid and attributes the",
    "start": "3313200",
    "end": "3318880"
  },
  {
    "text": "actual seeds themselves are at the end of the array so we we need to make room",
    "start": "3318880",
    "end": "3324480"
  },
  {
    "text": "uh that gray portion there is to make room for the new sit and attribute structure",
    "start": "3324480",
    "end": "3330559"
  },
  {
    "text": "and the gray portion down there we can use for the actual new sid so all the sid attribute structures are",
    "start": "3330559",
    "end": "3338319"
  },
  {
    "text": "contiguous they're an array and all the sids are contiguous",
    "start": "3338319",
    "end": "3344000"
  },
  {
    "text": "so here comes the new said and attribute structure and it's we update the pointers",
    "start": "3344800",
    "end": "3352079"
  },
  {
    "text": "to point to the new sid now all this is easy to talk about but",
    "start": "3352079",
    "end": "3358319"
  },
  {
    "text": "there's a lot of point arithmetic going on it took me a few times to",
    "start": "3358319",
    "end": "3363760"
  },
  {
    "text": "get that all correct",
    "start": "3363760",
    "end": "3366880"
  },
  {
    "text": "if you want to fake out the windows event viewer it's it's sort of a hybrid of two approaches",
    "start": "3370079",
    "end": "3378240"
  },
  {
    "text": "one when i first did this the first thing i did was this all 5d is obviously used",
    "start": "3378240",
    "end": "3385040"
  },
  {
    "text": "um if you're the system but it's obviously used in the event viewer so all i was doing is a 1d word change",
    "start": "3385040",
    "end": "3392799"
  },
  {
    "text": "to the token to somewhat simulate this running as system",
    "start": "3392799",
    "end": "3399119"
  },
  {
    "text": "so if the event viewer reported who just ran cmd.exe it would",
    "start": "3399119",
    "end": "3404400"
  },
  {
    "text": "it was clue g it would almost look like system so that was the first release",
    "start": "3404400",
    "end": "3410319"
  },
  {
    "text": "and what happens if you bring up an event in the event viewer there's like a detailed",
    "start": "3410319",
    "end": "3415839"
  },
  {
    "text": "description window which is in gray and above it there's a more higher level",
    "start": "3415839",
    "end": "3421520"
  },
  {
    "text": "description well turns out i was faking out the detail description window",
    "start": "3421520",
    "end": "3427040"
  },
  {
    "text": "but the higher level window really said who this was so it wasn't a total solution",
    "start": "3427040",
    "end": "3435920"
  },
  {
    "text": "but i found that if you add um add a sid in this case we're just going to add",
    "start": "3437440",
    "end": "3442559"
  },
  {
    "text": "system so we're going to make everything an event viewer appear that system did it as opposed to",
    "start": "3442559",
    "end": "3448240"
  },
  {
    "text": "you know bad user so if we add the system the width",
    "start": "3448240",
    "end": "3453760"
  },
  {
    "text": "this is a hard-coded system fluid there's about five of these i found a",
    "start": "3453760",
    "end": "3459280"
  },
  {
    "text": "dot h file in the windows ddk i believe you can",
    "start": "3459280",
    "end": "3464960"
  },
  {
    "text": "just shove that in there and you can also make the first sid",
    "start": "3464960",
    "end": "3470160"
  },
  {
    "text": "in the array of sit in attributes make that the system sid",
    "start": "3470160",
    "end": "3475760"
  },
  {
    "text": "now this takes a little bit of different design than our adding sids previously because",
    "start": "3475760",
    "end": "3480799"
  },
  {
    "text": "previously we're adding sids to the end of the sit in attributes array",
    "start": "3480799",
    "end": "3485839"
  },
  {
    "text": "now we need to add a new first element of the array and keep all the old elements",
    "start": "3485839",
    "end": "3492000"
  },
  {
    "text": "and then copy in the new first sid and keep all the old sids",
    "start": "3492000",
    "end": "3498319"
  },
  {
    "text": "so it takes a look it was like a total rework of the add sit",
    "start": "3498319",
    "end": "3504160"
  },
  {
    "text": "functionality also i'll tell you that",
    "start": "3504160",
    "end": "3508960"
  },
  {
    "text": "these off ids other than the five or so that are in this dot h",
    "start": "3509200",
    "end": "3514839"
  },
  {
    "text": "file everyone else is assigned a logon id when you do control delete and log into",
    "start": "3514839",
    "end": "3521839"
  },
  {
    "text": "the box or i guess if you were coming through the network and your credentials are passed you would probably get a unique",
    "start": "3521839",
    "end": "3527520"
  },
  {
    "text": "logon id well that is is good and fine",
    "start": "3527520",
    "end": "3533920"
  },
  {
    "text": "but if you change the auth id and the token to be the off id of someone",
    "start": "3533920",
    "end": "3539920"
  },
  {
    "text": "who doesn't exist or who isn't currently logged in the system will blue screen",
    "start": "3539920",
    "end": "3546400"
  },
  {
    "text": "and it's a really cool error because they'll tell you basically something's up with your logo and id",
    "start": "3546400",
    "end": "3552880"
  },
  {
    "text": "this logo and id cannot be found so it just barfs all over the place",
    "start": "3552880",
    "end": "3558640"
  },
  {
    "text": "so you you know this is a mistake i made once or twice and so you have to almost",
    "start": "3558640",
    "end": "3565440"
  },
  {
    "text": "query every user logged onto the box and then try to find out what their",
    "start": "3565440",
    "end": "3570559"
  },
  {
    "text": "logon id is if you want to impersonate another user",
    "start": "3570559",
    "end": "3575680"
  },
  {
    "text": "else you can just hard code it with a well-known id",
    "start": "3575680",
    "end": "3583480"
  },
  {
    "text": "so we'll finish the slides then we'll go to a demo of this so really quickly we're going to talk",
    "start": "3587599",
    "end": "3593680"
  },
  {
    "text": "about how to detect this i'm not going to go into extreme amount of detail because we run low on time",
    "start": "3593680",
    "end": "3598720"
  },
  {
    "text": "but the methodology is we can patch the kernel like i mentioned",
    "start": "3598720",
    "end": "3604000"
  },
  {
    "text": "not doing a moment ago because it's risky but if you absolutely need a solution to this problem",
    "start": "3604000",
    "end": "3610160"
  },
  {
    "text": "one microsoft can issue a patch where",
    "start": "3610160",
    "end": "3615200"
  },
  {
    "text": "the reporting mechanism and the scheduling mechanism are tightly coupled",
    "start": "3615200",
    "end": "3620400"
  },
  {
    "text": "so that you can't get scheduled if you're not reported that would be a good thing to do",
    "start": "3620400",
    "end": "3625520"
  },
  {
    "text": "if you need something like right away i suppose you could patch the kernel yourself",
    "start": "3625520",
    "end": "3632720"
  },
  {
    "text": "but that brings its own set of problems you know that's a little bit more high risk",
    "start": "3632720",
    "end": "3637839"
  },
  {
    "text": "you may not want to do that on your exchange server and whatnot because you some of these",
    "start": "3637839",
    "end": "3642960"
  },
  {
    "text": "services are servers you can't afford to go down",
    "start": "3642960",
    "end": "3647680"
  },
  {
    "text": "so there's this project that was sponsored by microsoft research called detours",
    "start": "3648480",
    "end": "3654480"
  },
  {
    "text": "there's the principal authors of that and basically it was a way to intercept function calls",
    "start": "3654480",
    "end": "3661280"
  },
  {
    "text": "and if everyone anyone's ever taken an uh graduate architecture computer architecture class",
    "start": "3661280",
    "end": "3667520"
  },
  {
    "text": "or some undergrad classes they cover you know instrument and code to see exactly",
    "start": "3667520",
    "end": "3672559"
  },
  {
    "text": "how many clock ticks like maybe create file takes uh that's a big thing there's",
    "start": "3672559",
    "end": "3678240"
  },
  {
    "text": "all kinds of open source uh projects in linux that allow you to",
    "start": "3678240",
    "end": "3683599"
  },
  {
    "text": "do this you instrument code so you take a snapshot like before create file possibly and you would take",
    "start": "3683599",
    "end": "3690720"
  },
  {
    "text": "a snapshot after create file see what the differences in time is and then you would know exactly how long",
    "start": "3690720",
    "end": "3697280"
  },
  {
    "text": "create file took to a i mean it it depends if you get swapped out and different things like that but",
    "start": "3697280",
    "end": "3703359"
  },
  {
    "text": "you get a rough estimate so these guys are",
    "start": "3703359",
    "end": "3709520"
  },
  {
    "text": "this group they took and wrote detours which is pretty useful you can also use detours to write",
    "start": "3709520",
    "end": "3715760"
  },
  {
    "text": "root kits that's sort of cool so if you use detours what you do is you",
    "start": "3715760",
    "end": "3722240"
  },
  {
    "text": "overwrite what we'll call a target function which in this case is swap context",
    "start": "3722240",
    "end": "3727280"
  },
  {
    "text": "because we want to patch swap context and do a few things before swap contacts actually runs",
    "start": "3727280",
    "end": "3735040"
  },
  {
    "text": "so swap context is our is our target function a trampoline is just where we stop store",
    "start": "3735040",
    "end": "3741200"
  },
  {
    "text": "off the the bites we just stalked on so an unconditional jump usually takes five",
    "start": "3741200",
    "end": "3748240"
  },
  {
    "text": "bites at least so you want to save off those bites into your trampoline because you'll",
    "start": "3748240",
    "end": "3753440"
  },
  {
    "text": "eventually need them and then you have your detour function",
    "start": "3753440",
    "end": "3759599"
  },
  {
    "text": "so the detour function calls doesn't call but it jumps to the trampoline the trampoline",
    "start": "3759599",
    "end": "3765680"
  },
  {
    "text": "is the target function the target function therefore returns",
    "start": "3765680",
    "end": "3770720"
  },
  {
    "text": "to the detour and the detour returns to the source collar",
    "start": "3770720",
    "end": "3777359"
  },
  {
    "text": "and that's just a little graphic to help you out so you have no control over who the source was",
    "start": "3777599",
    "end": "3783040"
  },
  {
    "text": "somebody in the kernel just called swap context but what you did this is swap context",
    "start": "3783040",
    "end": "3789040"
  },
  {
    "text": "you patched the first five or so bytes to",
    "start": "3789040",
    "end": "3794559"
  },
  {
    "text": "jump unconditionally the numbers may be a little mis-ordered in this example",
    "start": "3794559",
    "end": "3800319"
  },
  {
    "text": "of the usage to jump unconditionally to your detour your detour does some examination on the",
    "start": "3800319",
    "end": "3807200"
  },
  {
    "text": "threads and based upon that examination decides whether to really call swap",
    "start": "3807200",
    "end": "3812559"
  },
  {
    "text": "context or just not allow the thread to get scheduled",
    "start": "3812559",
    "end": "3818000"
  },
  {
    "text": "so what we can do is if you patch the first seven bytes of swap contacts to jump to your detour",
    "start": "3818720",
    "end": "3827119"
  },
  {
    "text": "then you check the edi register the edi register contains the e thread",
    "start": "3827680",
    "end": "3833440"
  },
  {
    "text": "block the address of the e thread block of the thread that's about to get scheduled so an esi is the thread that's",
    "start": "3833440",
    "end": "3840000"
  },
  {
    "text": "getting swapped out edi contains a thread getting swapped in we've already seen that the thread has a",
    "start": "3840000",
    "end": "3847039"
  },
  {
    "text": "link to its corresponding process block you can follow that link",
    "start": "3847039",
    "end": "3852799"
  },
  {
    "text": "then make sure that processes neighbors are appropriately linked in the linked",
    "start": "3852799",
    "end": "3858000"
  },
  {
    "text": "list if they aren't linked then you should never admit that thread into",
    "start": "3858000",
    "end": "3863520"
  },
  {
    "text": "the scheduler because it's obviously something something's up here because never should",
    "start": "3863520",
    "end": "3869440"
  },
  {
    "text": "that happen in a regular use case",
    "start": "3869440",
    "end": "3874000"
  },
  {
    "text": "did everyone understand that any questions so",
    "start": "3875440",
    "end": "3880880"
  },
  {
    "text": "question for the audience why do i say patch the first seven bytes of swap context",
    "start": "3880880",
    "end": "3887520"
  },
  {
    "text": "as opposed to five unconditional jumps are five bytes long as long as it's not a far",
    "start": "3887520",
    "end": "3893039"
  },
  {
    "text": "jump yeah okay so the gentleman's comment was",
    "start": "3893039",
    "end": "3900400"
  },
  {
    "text": "instructions on intel are variable length instructions so you don't know",
    "start": "3900400",
    "end": "3907038"
  },
  {
    "text": "five bytes may fall in the middle of an instruction such as a low d word or something",
    "start": "3907599",
    "end": "3914480"
  },
  {
    "text": "you know into this register so you need to preserve",
    "start": "3914480",
    "end": "3919520"
  },
  {
    "text": "a function or the actual assembly code the bytes and make sure that you're not cutting it in the middle because if you",
    "start": "3919520",
    "end": "3926480"
  },
  {
    "text": "cut it in the middle and then you jump to the final two bytes of that instruction because you",
    "start": "3926480",
    "end": "3932240"
  },
  {
    "text": "overwrote five and you jump to your detour and then you went through your trampoline and now",
    "start": "3932240",
    "end": "3937520"
  },
  {
    "text": "you're calling you're telling the machine execute you know whatever the last two bites",
    "start": "3937520",
    "end": "3943520"
  },
  {
    "text": "of that seven byte thing was the machine's just going to freak out",
    "start": "3943520",
    "end": "3948559"
  },
  {
    "text": "because it may not even be real instructions",
    "start": "3948559",
    "end": "3953039"
  },
  {
    "text": "other ways to detect not prevent the the patching the swap context",
    "start": "3954240",
    "end": "3961359"
  },
  {
    "text": "prevents the threat from getting ran if you just wanted to detect",
    "start": "3961359",
    "end": "3967839"
  },
  {
    "text": "processes that are hidden use a nephew or other techniques alongside salons",
    "start": "3967839",
    "end": "3973760"
  },
  {
    "text": "someone from joanna rakowska",
    "start": "3973760",
    "end": "3979559"
  },
  {
    "text": "from poland she presented at black hat las vegas 2003",
    "start": "3980319",
    "end": "3986480"
  },
  {
    "text": "and she talked to this problem of these hidden processes using the fu root kit and she presented a tool",
    "start": "3986480",
    "end": "3995440"
  },
  {
    "text": "she created called k-lister you can now download k-lister at rootkit.com",
    "start": "3995440",
    "end": "4001079"
  },
  {
    "text": "rootkidnot.com is no longer i mean is always an educational place it's not for",
    "start": "4001079",
    "end": "4006319"
  },
  {
    "text": "malicious intent but you can download k-lister there",
    "start": "4006319",
    "end": "4011520"
  },
  {
    "text": "which is a detection mechanism so we're trying to fan the research into",
    "start": "4011520",
    "end": "4018720"
  },
  {
    "text": "both detection and evasion",
    "start": "4018720",
    "end": "4023599"
  },
  {
    "text": "so what she does is there's a list of cues in the kernel where all these threads have to reside",
    "start": "4024079",
    "end": "4031440"
  },
  {
    "text": "so there's some different types of weight cues there's different types of priority cues",
    "start": "4031440",
    "end": "4036880"
  },
  {
    "text": "so if you're if you're in the ready-to-run state you're in one of the priority queues",
    "start": "4036880",
    "end": "4044160"
  },
  {
    "text": "your threat is if you're blocked waiting on something you're in one of the weight cues",
    "start": "4044160",
    "end": "4050079"
  },
  {
    "text": "so if you walk all these cues you have all the threads on the system",
    "start": "4050079",
    "end": "4055280"
  },
  {
    "text": "and then you can do the appropriate checks to see well you could see if their process is",
    "start": "4055280",
    "end": "4061440"
  },
  {
    "text": "appropriately linked if you don't care about that maybe you just want to list all the processes",
    "start": "4061440",
    "end": "4067760"
  },
  {
    "text": "you just walk the list of threads looking for their e-process block and threads have to be connected to",
    "start": "4067760",
    "end": "4074640"
  },
  {
    "text": "their e-process block because the e-process block contains things such",
    "start": "4074640",
    "end": "4080400"
  },
  {
    "text": "as environment variables the default path the",
    "start": "4080400",
    "end": "4086880"
  },
  {
    "text": "and so on so forth so it's needed for future operation of the program",
    "start": "4086880",
    "end": "4092160"
  },
  {
    "text": "so your threads have to still be connected to the e-process block one problem",
    "start": "4092160",
    "end": "4097838"
  },
  {
    "text": "that i see with this is the addresses of these queues are not exported",
    "start": "4097839",
    "end": "4104640"
  },
  {
    "text": "so you basically have to hard code them in recompile for every version of the kernel",
    "start": "4104640",
    "end": "4110000"
  },
  {
    "text": "you want to run under which is in my opinion is not a good solution",
    "start": "4110000",
    "end": "4115040"
  },
  {
    "text": "although i think her work is is very very outstanding outstanding",
    "start": "4115040",
    "end": "4121520"
  },
  {
    "text": "similar thing to detect hidden processes in linux except in this case",
    "start": "4122000",
    "end": "4127040"
  },
  {
    "text": "detours is not going to be used it's uh injects so",
    "start": "4127040",
    "end": "4132318"
  },
  {
    "text": "which is a library to do roughly the same thing so since we're almost at the end we'll",
    "start": "4132319",
    "end": "4139120"
  },
  {
    "text": "hurry up wrap up here and then do a demo so what have i shown",
    "start": "4139120",
    "end": "4144318"
  },
  {
    "text": "i've shown the next generation of root kits that i think we'll see a lot of",
    "start": "4144319",
    "end": "4149838"
  },
  {
    "text": "in the future i just got an email last night this is the first time this has ever",
    "start": "4149839",
    "end": "4155040"
  },
  {
    "text": "happened because fu is intentionally written so that it can't just be installed by",
    "start": "4155040",
    "end": "4160880"
  },
  {
    "text": "script kitty and then used to adulterate your box",
    "start": "4160880",
    "end": "4166480"
  },
  {
    "text": "it was written so that there's a user land portion there's a kernel lamp portion",
    "start": "4166480",
    "end": "4172000"
  },
  {
    "text": "anything in userland is always easy to see run there's also no attempt made",
    "start": "4172000",
    "end": "4179440"
  },
  {
    "text": "whatsoever to hide the root kit itself so it's a driver and there's no attempt",
    "start": "4179440",
    "end": "4184719"
  },
  {
    "text": "made to hide it i tell that you can hide drivers using a similar thing and if we have tom i'll",
    "start": "4184719",
    "end": "4191440"
  },
  {
    "text": "show you how to do that um using the linked list concept but i don't",
    "start": "4191440",
    "end": "4197199"
  },
  {
    "text": "put that into the fu it doesn't automatically hot itself so i got this email saying that",
    "start": "4197199",
    "end": "4203600"
  },
  {
    "text": "they were under attack by the fu virus or something but they didn't elaborate into what the attack was",
    "start": "4203600",
    "end": "4210560"
  },
  {
    "text": "so hopefully i can help that person uh i think it's probably another virus that's just been renamed",
    "start": "4210560",
    "end": "4217840"
  },
  {
    "text": "so you're you're only limited in what you want to do with dcom by your imagination in many regards",
    "start": "4219679",
    "end": "4227920"
  },
  {
    "text": "and i would like to see a more tight or more separation in force separation",
    "start": "4228719",
    "end": "4235360"
  },
  {
    "text": "between the odis itself and third party vendors",
    "start": "4235360",
    "end": "4240640"
  },
  {
    "text": "are there any questions before we go demo",
    "start": "4240880",
    "end": "4245400"
  },
  {
    "text": "okay well um",
    "start": "4246640",
    "end": "4250640"
  },
  {
    "text": "this so this is the",
    "start": "4256800",
    "end": "4262400"
  },
  {
    "text": "directory with the fu program msdirectx.sys",
    "start": "4262400",
    "end": "4268800"
  },
  {
    "text": "is the name of the rootkit portion of fu the the in kernel portion i would say",
    "start": "4268800",
    "end": "4275760"
  },
  {
    "text": "like i said i make no attempt to hide it about eight days after fu went up on",
    "start": "4276239",
    "end": "4281280"
  },
  {
    "text": "rootkit.com there was a deep threat security advisory workup from symantec",
    "start": "4281280",
    "end": "4288800"
  },
  {
    "text": "if you're familiar with that was about a 14 page write-up about what fu was",
    "start": "4288800",
    "end": "4295760"
  },
  {
    "text": "how it worked the fact that it is a bit insidious because it doesn't call",
    "start": "4295760",
    "end": "4302159"
  },
  {
    "text": "kernel functions so there's not really a way to stop it once it gets in the kernel you can just pound on memory all day",
    "start": "4302159",
    "end": "4308400"
  },
  {
    "text": "long um but they did say you could detect it by looking for ms directx.cis",
    "start": "4308400",
    "end": "4315840"
  },
  {
    "text": "and i named it that just a little bit of playoff words you know like microsoft's directx stuff",
    "start": "4315840",
    "end": "4322719"
  },
  {
    "text": "so first of all let's open up task manager everything is sorted in order",
    "start": "4327600",
    "end": "4334480"
  },
  {
    "text": "system is pid i'm not sure if everyone can see that but trust me it's pid 8 on the windows 2000",
    "start": "4334480",
    "end": "4341440"
  },
  {
    "text": "box and everybody would assume that",
    "start": "4341440",
    "end": "4346719"
  },
  {
    "text": "if you hid system using this process hiding technique and there was any adverse effects",
    "start": "4346719",
    "end": "4354239"
  },
  {
    "text": "you know basically if you did it to that process and everything worked it was probably an okay trick",
    "start": "4354239",
    "end": "4361440"
  },
  {
    "text": "so f u dash process hide",
    "start": "4362320",
    "end": "4368320"
  },
  {
    "text": "eight so dash ph is process high and eight is the pit",
    "start": "4368800",
    "end": "4374000"
  },
  {
    "text": "and everyone can still see system up there sort of highlighting grayish",
    "start": "4374000",
    "end": "4380719"
  },
  {
    "text": "it's gone",
    "start": "4382239",
    "end": "4385639"
  },
  {
    "text": "thank you the box will continue to run just fine",
    "start": "4387440",
    "end": "4394159"
  },
  {
    "text": "now i'm not going to run k-lister but trust me k-lister can see that although i think i have a way to get by",
    "start": "4394159",
    "end": "4400320"
  },
  {
    "text": "k-lister now but i'm not sure if i'm going to release that or no no",
    "start": "4400320",
    "end": "4406159"
  },
  {
    "text": "i'm not really into the whole arms race thing",
    "start": "4406719",
    "end": "4411480"
  },
  {
    "text": "so pin 1880 is this process right here",
    "start": "4414400",
    "end": "4420880"
  },
  {
    "text": "different command shell well we can get rid of this now",
    "start": "4420880",
    "end": "4426480"
  },
  {
    "text": "and if i start up uh wedge edit",
    "start": "4426480",
    "end": "4432480"
  },
  {
    "text": "everyone familiar with regis32 will know that the security tab",
    "start": "4432480",
    "end": "4437920"
  },
  {
    "text": "is grayed out because i don't have access to that i'm administrator at this point",
    "start": "4437920",
    "end": "4444159"
  },
  {
    "text": "i can take access to it but i don't have access to it by default",
    "start": "4444159",
    "end": "4449280"
  },
  {
    "text": "so that's where the sam database is stored all your hash passwords and so forth is",
    "start": "4449280",
    "end": "4455280"
  },
  {
    "text": "within that security key so that would be bad if uh if you elevated your privilege",
    "start": "4455280",
    "end": "4462239"
  },
  {
    "text": "and then you could look at that key so forgot to back to oh by the way this",
    "start": "4462239",
    "end": "4469600"
  },
  {
    "text": "tool is process explorer from sysinternals it's pretty good about showing uh",
    "start": "4469600",
    "end": "4476239"
  },
  {
    "text": "the different processes that are running and the tokens and privileges associated with",
    "start": "4476239",
    "end": "4481760"
  },
  {
    "text": "the process so you see there's a whole list of privileges down in this window",
    "start": "4481760",
    "end": "4488800"
  },
  {
    "text": "however most of them are disabled by default there's usually like 17 down there",
    "start": "4488800",
    "end": "4495600"
  },
  {
    "text": "and only about four or five are actually enabled and that's what we're taking advantage",
    "start": "4495600",
    "end": "4501360"
  },
  {
    "text": "of that's where we'll get all our free space by getting rid of those disabled tokens",
    "start": "4501360",
    "end": "4506719"
  },
  {
    "text": "or our privileges and then up here in this window is the list of users",
    "start": "4506719",
    "end": "4511920"
  },
  {
    "text": "and you'll notice there's no system systems group in this token",
    "start": "4511920",
    "end": "4517760"
  },
  {
    "text": "there's just administrators users debug user blow and lock",
    "start": "4517760",
    "end": "4523320"
  },
  {
    "text": "so if we say uh f-u-p-s-s which is a privilege set sid",
    "start": "4525679",
    "end": "4532800"
  },
  {
    "text": "and we give it a process id of what was it 1880 1880",
    "start": "4532800",
    "end": "4539840"
  },
  {
    "text": "and we say give it system group you see the green bar because after you",
    "start": "4542480",
    "end": "4548880"
  },
  {
    "text": "just started up that's not good",
    "start": "4548880",
    "end": "4554640"
  },
  {
    "text": "we did have this happen once in class",
    "start": "4558640",
    "end": "4562400"
  },
  {
    "text": "yeah okay well the cpu utilization spiked for some reason",
    "start": "4564840",
    "end": "4569920"
  },
  {
    "text": "so i'm not sure exactly the cause of that but we're probably not going to see it",
    "start": "4569920",
    "end": "4576400"
  },
  {
    "text": "take effect yeah it hasn't modified the token yet for that i'd have to reboot and do it",
    "start": "4576400",
    "end": "4582239"
  },
  {
    "text": "again which kind of sucks but live demos always",
    "start": "4582239",
    "end": "4587360"
  },
  {
    "text": "have a hiccup in them",
    "start": "4587360",
    "end": "4591158"
  },
  {
    "text": "since that processed out i may have recovered to a degree not still spiked",
    "start": "4596960",
    "end": "4604440"
  },
  {
    "text": "well although it says the process died it's still running so i'll have to reboot",
    "start": "4615920",
    "end": "4621760"
  },
  {
    "text": "my email and so forth is in the slides if you want to see it send me an email i'm happy to answer",
    "start": "4621760",
    "end": "4627760"
  },
  {
    "text": "questions i just mentioned that you were at this show or took the class or whatever",
    "start": "4627760",
    "end": "4633600"
  },
  {
    "text": "and i'll be sure to give you my attention and if anybody wants to stick around and",
    "start": "4633600",
    "end": "4640000"
  },
  {
    "text": "see the see this work",
    "start": "4640000",
    "end": "4646239"
  },
  {
    "text": "as soon as i reboot you'll see it work there's a new version of fu and that may",
    "start": "4646239",
    "end": "4651840"
  },
  {
    "text": "be the problem so if somebody wants to read the source",
    "start": "4651840",
    "end": "4658000"
  },
  {
    "text": "code and contribute a patch",
    "start": "4658000",
    "end": "4661800"
  },
  {
    "text": "uh disabled yeah it has to be explicitly said that this is enabled",
    "start": "4674239",
    "end": "4681760"
  },
  {
    "text": "yeah um",
    "start": "4681760",
    "end": "4685239"
  },
  {
    "text": "right you have to have i can't get into everything in that arena because",
    "start": "4692719",
    "end": "4699360"
  },
  {
    "text": "the techniques i've developed i developed um yeah the question was",
    "start": "4699360",
    "end": "4705600"
  },
  {
    "text": "how how do you detect hooking if i claim that it's easy to detect and the answer is that i can't get into",
    "start": "4705600",
    "end": "4712800"
  },
  {
    "text": "all the specifics of it because when i was doing that work i was under non-disclosure agreements and so forth",
    "start": "4712800",
    "end": "4718480"
  },
  {
    "text": "but if you have i will tell you obviously you can examine the system call table",
    "start": "4718480",
    "end": "4724080"
  },
  {
    "text": "right and if you have an understanding of what it should look like you can then determine that it's been",
    "start": "4724080",
    "end": "4730719"
  },
  {
    "text": "hooked in other words the system call table every single function",
    "start": "4730719",
    "end": "4736960"
  },
  {
    "text": "in that system call table resides within ntos kernel.exe",
    "start": "4736960",
    "end": "4742239"
  },
  {
    "text": "so if it's out if it's um well i won't say more about that",
    "start": "4742239",
    "end": "4747520"
  },
  {
    "text": "but it's there",
    "start": "4747520",
    "end": "4750400"
  },
  {
    "text": "any other questions",
    "start": "4753199",
    "end": "4756679"
  },
  {
    "text": "yeah we had an if go ahead we had a problem in the class with",
    "start": "4771040",
    "end": "4776719"
  },
  {
    "text": "another uh gentleman running the fu root kit what it does is it runs around the list",
    "start": "4776719",
    "end": "4782239"
  },
  {
    "text": "really quick to find the process you're trying to hide and it appeared that that didn't always",
    "start": "4782239",
    "end": "4787360"
  },
  {
    "text": "terminate because i tried to take a snapshot of where i started in the list and then run around so if somebody gave",
    "start": "4787360",
    "end": "4793040"
  },
  {
    "text": "me bad parameters of a pid that doesn't exist if you didn't say where you started from",
    "start": "4793040",
    "end": "4798960"
  },
  {
    "text": "you would just run around that loop really tight and that's bad obviously you spiked the cpu which is",
    "start": "4798960",
    "end": "4805600"
  },
  {
    "text": "what happened so there must be some problem in my termination routine",
    "start": "4805600",
    "end": "4812239"
  },
  {
    "text": "also when you saw it blue screen when it went down the reason for that is because the",
    "start": "4812400",
    "end": "4817920"
  },
  {
    "text": "kernel's going down because i said shut down remember the kernel is going down it's cleaning up these structures",
    "start": "4817920",
    "end": "4824320"
  },
  {
    "text": "it's freeing memory but you know there's there's still a huge like trying as hard as it can to",
    "start": "4824320",
    "end": "4829920"
  },
  {
    "text": "get scheduling and it's going to touch something that's been torn down",
    "start": "4829920",
    "end": "4835040"
  },
  {
    "text": "because it doesn't get a mutex typically if you're writing",
    "start": "4835040",
    "end": "4840159"
  },
  {
    "text": "if you're writing something to list processes and you're in the kernel or you are the kernel",
    "start": "4840159",
    "end": "4845280"
  },
  {
    "text": "you get a mutex to that list and then you get exclusive access to it",
    "start": "4845280",
    "end": "4850800"
  },
  {
    "text": "you walk it do whatever you want and that way you can guarantee nobody's adding a process to the list while",
    "start": "4850800",
    "end": "4857120"
  },
  {
    "text": "you're there walking it i don't get that mutex so i can get swapped out",
    "start": "4857120",
    "end": "4863199"
  },
  {
    "text": "somebody else can modify the list and then i get swapped in maybe i've already saved off some of those pointers",
    "start": "4863199",
    "end": "4870159"
  },
  {
    "text": "and so i'm making assumptions about memory that's no longer there if you want to do this in a completely",
    "start": "4870159",
    "end": "4875840"
  },
  {
    "text": "stable way you have to get the mutex but the mutex isn't uh isn't exported by the kernel",
    "start": "4875840",
    "end": "4882719"
  },
  {
    "text": "so what",
    "start": "4882719",
    "end": "4887480"
  },
  {
    "text": "ex resource light right oh to disable the interrupts",
    "start": "4888719",
    "end": "4895120"
  },
  {
    "text": "yeah there would be that possibly and also i think you could i think you could possibly find the",
    "start": "4895120",
    "end": "4901280"
  },
  {
    "text": "mutex like maybe within xp the mutex is at offset 20 from the",
    "start": "4901280",
    "end": "4907600"
  },
  {
    "text": "process uh linked list process head so you could just sort of hard to make some assumptions in that case",
    "start": "4907600",
    "end": "4916040"
  },
  {
    "text": "so",
    "start": "4922320",
    "end": "4924638"
  },
  {
    "text": "52 so first of all we'll start regedit",
    "start": "4928960",
    "end": "4935440"
  },
  {
    "text": "excuse me oh yeah thanks",
    "start": "4938320",
    "end": "4944920"
  },
  {
    "text": "okay so i just started reggie at 32 again i don't have system privilege",
    "start": "4955920",
    "end": "4961760"
  },
  {
    "text": "so that's grayed out now i'll close this process down i'll run fu",
    "start": "4961760",
    "end": "4967040"
  },
  {
    "text": "pss it was 11 52 i believe but i need to",
    "start": "4967040",
    "end": "4974320"
  },
  {
    "text": "make sure that yeah 11 52 is my cmd process",
    "start": "4974320",
    "end": "4981840"
  },
  {
    "text": "and if this doesn't work we're just going to call it quits and go to lunch so we'll go add the system",
    "start": "4985199",
    "end": "4992000"
  },
  {
    "text": "so now system token hopefully has been added to this process and will restart registered at",
    "start": "4992000",
    "end": "4998080"
  },
  {
    "text": "32 and if it all worked then we should not have a great outfield",
    "start": "4998080",
    "end": "5004000"
  },
  {
    "text": "so there we go now we can get down to the security sam database",
    "start": "5004000",
    "end": "5009440"
  },
  {
    "text": "blah blah blah because we're the system although we're logged in as a minister in this case",
    "start": "5009440",
    "end": "5016000"
  },
  {
    "text": "so that's the end thanks for your attention",
    "start": "5016000",
    "end": "5021560"
  },
  {
    "text": "foreign",
    "start": "5063120",
    "end": "5066120"
  },
  {
    "text": "foreign",
    "start": "5077199",
    "end": "5080199"
  },
  {
    "text": "foreign",
    "start": "5091440",
    "end": "5094440"
  },
  {
    "text": "so",
    "start": "5120719",
    "end": "5123719"
  },
  {
    "text": "foreign",
    "start": "5175199",
    "end": "5178199"
  },
  {
    "text": "foreign",
    "start": "5189120",
    "end": "5192120"
  },
  {
    "text": "foreign",
    "start": "5202960",
    "end": "5205960"
  },
  {
    "text": "so",
    "start": "5218400",
    "end": "5221400"
  },
  {
    "text": "foreign",
    "start": "5229760",
    "end": "5232760"
  },
  {
    "text": "so",
    "start": "5260480",
    "end": "5263480"
  },
  {
    "text": "foreign",
    "start": "5287120",
    "end": "5290120"
  },
  {
    "text": "foreign",
    "start": "5301199",
    "end": "5304199"
  },
  {
    "text": "so",
    "start": "5358560",
    "end": "5361560"
  },
  {
    "text": "foreign",
    "start": "5371280",
    "end": "5374280"
  },
  {
    "text": "foreign",
    "start": "5385280",
    "end": "5388280"
  },
  {
    "text": "foreign",
    "start": "5399440",
    "end": "5402440"
  },
  {
    "text": "foreign",
    "start": "5469280",
    "end": "5472280"
  },
  {
    "text": "foreign",
    "start": "5483440",
    "end": "5486440"
  },
  {
    "text": "foreign",
    "start": "5497040",
    "end": "5500040"
  },
  {
    "text": "do",
    "start": "5511760",
    "end": "5514760"
  },
  {
    "text": "so",
    "start": "5523440",
    "end": "5526440"
  },
  {
    "text": "you",
    "start": "5559440",
    "end": "5561520"
  }
]