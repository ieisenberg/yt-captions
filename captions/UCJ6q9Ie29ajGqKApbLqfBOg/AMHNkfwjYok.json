[
  {
    "text": "thank you for the introduction and welcome uh today I'll be talking about coral escalation which explores how",
    "start": "2600",
    "end": "10080"
  },
  {
    "text": "privilege can be escalated from the normal world to the secure world with the assistance of different cores",
    "start": "10080",
    "end": "16080"
  },
  {
    "text": "running on the same SOC on your smartphone my name is quen shingen and",
    "start": "16080",
    "end": "21279"
  },
  {
    "text": "I'm a security researcher at pangu in addition to interest and experiences I",
    "start": "21279",
    "end": "26599"
  },
  {
    "text": "have written on a slide I have dedicated several years to H smartphone research",
    "start": "26599",
    "end": "32398"
  },
  {
    "text": "and that got me the first place in h bu Bounty program in both 2021 and",
    "start": "32399",
    "end": "39480"
  },
  {
    "text": "2022 previously I have been presented on topics such as b31 of H P20 in",
    "start": "39480",
    "end": "47800"
  },
  {
    "text": "2019 and the bo room of ha m 30 in 2021 so I think it's only natural for to",
    "start": "47800",
    "end": "54840"
  },
  {
    "text": "guess this talk in 2023 would be focused on something related to H mate 40 or",
    "start": "54840",
    "end": "62199"
  },
  {
    "text": "P40 um I should close",
    "start": "62199",
    "end": "68320"
  },
  {
    "text": "this uh that assumption is partially correct uh especially when it comes to",
    "start": "73920",
    "end": "79119"
  },
  {
    "text": "motivation behind this research you see huawe smartphones firware particularly",
    "start": "79119",
    "end": "84680"
  },
  {
    "text": "those associated with boot chain and Trust Zone have been encrypted using a unique key for each chipset only te",
    "start": "84680",
    "end": "92759"
  },
  {
    "text": "level privilege can operate Hardware crypto engine to use this key for former",
    "start": "92759",
    "end": "99240"
  },
  {
    "text": "decryption however the bootroom exploit I previously used to build a decryption Oracle was patched on K 9,000 therefore",
    "start": "99240",
    "end": "107960"
  },
  {
    "text": "for mate 40 and newer devices I need to find a different approach at that moment the only viable",
    "start": "107960",
    "end": "115320"
  },
  {
    "text": "solution I have came up with is to follow the tradition which involves discovering te level vulnerabilities on",
    "start": "115320",
    "end": "122640"
  },
  {
    "text": "Old chipset and hoping this do work on a new device this typically involves at least",
    "start": "122640",
    "end": "130360"
  },
  {
    "text": "three phases in this process first we need a root exploit this doesn't",
    "start": "130360",
    "end": "135480"
  },
  {
    "text": "necessarily to be a zero day exploit targeting the latest kernel any high quality one- day exploit such as those",
    "start": "135480",
    "end": "142800"
  },
  {
    "text": "finding GPU drivers could suffice in most cases uh usually within years time frame",
    "start": "142800",
    "end": "149480"
  },
  {
    "text": "there is at least one physical exploit available next we need to find a",
    "start": "149480",
    "end": "155200"
  },
  {
    "text": "vulnerability in the trust application and potentially a third vulnerability in",
    "start": "155200",
    "end": "161040"
  },
  {
    "text": "teus to acquire sufficient privilege to operate a crypto engine exploiting te",
    "start": "161040",
    "end": "167599"
  },
  {
    "text": "level vulnerabilities on huawe smartphones is considerably more challenging due to former encryption as",
    "start": "167599",
    "end": "174519"
  },
  {
    "text": "we cannot know the layout the gges and offsets in Prior",
    "start": "174519",
    "end": "180480"
  },
  {
    "text": "so to successfully achieve this goal the vulnerability we're going to discover should be of very high quality",
    "start": "180480",
    "end": "188080"
  },
  {
    "text": "ideally uh this should be logic bux that can work consistently across different versions and do not rely on any specific",
    "start": "188080",
    "end": "195200"
  },
  {
    "text": "offset or GES and there are two primary attack surfaces for uh trust zone or te that is",
    "start": "195200",
    "end": "204319"
  },
  {
    "text": "bl31 and [Music] te uh in the context of B in for this",
    "start": "204319",
    "end": "210480"
  },
  {
    "text": "particular task I of to focus more on teus instead of",
    "start": "210480",
    "end": "215560"
  },
  {
    "text": "b31 and the rationale behind this decision is as follow bl31 is built upon arm trusted",
    "start": "215560",
    "end": "223920"
  },
  {
    "text": "forare open source project which has been thoroughly tested and validated over extended period while additional",
    "start": "223920",
    "end": "231920"
  },
  {
    "text": "components introduced by Hua um may have vulnerabilities",
    "start": "231920",
    "end": "238439"
  },
  {
    "text": "uh um well the add additional components introduced by hu bl31 may have",
    "start": "238439",
    "end": "244560"
  },
  {
    "text": "vulnerabilities these vulnerabil vulnerabilities often manifest as memory corruption issues that rely on specific",
    "start": "244560",
    "end": "251760"
  },
  {
    "text": "offset or gares to exploit um on the other hand teus is a",
    "start": "251760",
    "end": "258479"
  },
  {
    "text": "proprietary operating operating system developed entirely by Huawei as a",
    "start": "258479",
    "end": "263639"
  },
  {
    "text": "comprehensive operating system it exhibits a higher level of complicity and this increase complicity makes it",
    "start": "263639",
    "end": "270720"
  },
  {
    "text": "more likely that logic box will be will be present to delve into the details of",
    "start": "270720",
    "end": "279280"
  },
  {
    "text": "teos I recommend referring to Alexander and Max M talk from last year's hexcon",
    "start": "279280",
    "end": "284880"
  },
  {
    "text": "conference they provide a comprehensive and insightful overview uh the vulnerability I find",
    "start": "284880",
    "end": "292800"
  },
  {
    "text": "resides within the memory management module of [Music] teos memory management tends to conceal",
    "start": "292800",
    "end": "300280"
  },
  {
    "text": "such high quality vulnerabilities uh if you ever came across with um vulnerabilities in GPU as",
    "start": "300280",
    "end": "307560"
  },
  {
    "text": "well as those like dirty cow or dirty pipe you understand that teus is not an",
    "start": "307560",
    "end": "315639"
  },
  {
    "text": "exception initially I believe that the nsecure and secure world are divided",
    "start": "315639",
    "end": "321800"
  },
  {
    "text": "statically during the booting phase uh well for the sake of um",
    "start": "321800",
    "end": "328919"
  },
  {
    "text": "efficient DRM W stream decryption a mechanism has been implemented in Dr uh",
    "start": "328919",
    "end": "334080"
  },
  {
    "text": "in teus uh it can switch the nsecure pages into secure State dynamically this",
    "start": "334080",
    "end": "341520"
  },
  {
    "text": "avoids the need for excessive data copying between the two Realms and the trust trusted application",
    "start": "341520",
    "end": "348919"
  },
  {
    "text": "called SEC memory exports related interfaces such as as aloc and S3 to the",
    "start": "348919",
    "end": "356639"
  },
  {
    "text": "normal world the term s here is derived from I",
    "start": "356639",
    "end": "362960"
  },
  {
    "text": "which is a physical memory management mechanism used Android when allocating an i FD using",
    "start": "362960",
    "end": "372680"
  },
  {
    "text": "DRM Hep as a musk the kernel will invoke SL SL interface beneath uh to register",
    "start": "372680",
    "end": "379520"
  },
  {
    "text": "this pages into the T and the T will then switch the page into a secure State and a corresponding",
    "start": "379520",
    "end": "386560"
  },
  {
    "text": "buffer ID which is similar to I is returned to noral ro this buffer ID will",
    "start": "386560",
    "end": "393319"
  },
  {
    "text": "be stored in an extended variable within ion buffer",
    "start": "393319",
    "end": "398400"
  },
  {
    "text": "structure later when we invoke a trust application with Tec I and input",
    "start": "398400",
    "end": "404759"
  },
  {
    "text": "parameter set as I FD the colonel will translate this FD to buff ID before",
    "start": "404759",
    "end": "410479"
  },
  {
    "text": "sending messages to the teus and then the correlated physical",
    "start": "410479",
    "end": "417400"
  },
  {
    "text": "pages will be mapped by the T to the memory space of the trust application for further",
    "start": "417400",
    "end": "423639"
  },
  {
    "text": "usage and the vulnerability lies within this modiface allocation and usage",
    "start": "423639",
    "end": "429800"
  },
  {
    "text": "process there are no explicit checks for the pages",
    "start": "429800",
    "end": "435918"
  },
  {
    "text": "address um the only firewall in place uh appears",
    "start": "437039",
    "end": "442800"
  },
  {
    "text": "to be the normal World kernel as the allocated pages should fall within the range of I and",
    "start": "442800",
    "end": "448319"
  },
  {
    "text": "pool however the SL interfaces can be invoked directly with elzero",
    "start": "448319",
    "end": "455520"
  },
  {
    "text": "privilege this allows us to pass any physical Pages we desired and receive a",
    "start": "455520",
    "end": "461680"
  },
  {
    "text": "buffer ID the issue here is not with the secure switch of the pages Pages State itself",
    "start": "461680",
    "end": "470400"
  },
  {
    "text": "but rather with the fact that the bu ID can become associated with any physical",
    "start": "470400",
    "end": "476680"
  },
  {
    "text": "Pages we specified",
    "start": "476680",
    "end": "481319"
  },
  {
    "text": "the most convenient exploitation method without modifying the kernel involves",
    "start": "482280",
    "end": "487400"
  },
  {
    "text": "first allocate an DRM masked uh ion FD using ion driver this will create a",
    "start": "487400",
    "end": "494560"
  },
  {
    "text": "combination of i1 FD and bu ID in the kernel space then we invoke asm3 directly from",
    "start": "494560",
    "end": "504080"
  },
  {
    "text": "y zero level with the same bariety followed by another SM alloc with any",
    "start": "504080",
    "end": "510120"
  },
  {
    "text": "physical Pages we specified uh the buffer ID in this case",
    "start": "510120",
    "end": "515880"
  },
  {
    "text": "is relatively straightforward infer it is allocated sequentially searching from",
    "start": "515880",
    "end": "521120"
  },
  {
    "text": "a free list with the first available ID being utilized and initially we can invoke as",
    "start": "521120",
    "end": "529120"
  },
  {
    "text": "s i aloc to determine this counter and then the subsequent variety allocated by",
    "start": "529120",
    "end": "535240"
  },
  {
    "text": "the kernel can be obtained simply by incrementing this cont by one and after",
    "start": "535240",
    "end": "541680"
  },
  {
    "text": "this use of the free like operations The Bu ID will be reused and",
    "start": "541680",
    "end": "547160"
  },
  {
    "text": "from the perspective of the kernel it appears nothing has actually occurred so later when we use this bu",
    "start": "547160",
    "end": "554360"
  },
  {
    "text": "fridy um for some uh other trust trust applications the physical Pages we",
    "start": "554360",
    "end": "560640"
  },
  {
    "text": "specified will be mapped as a buffer for overwriting or reading",
    "start": "560640",
    "end": "566560"
  },
  {
    "text": "from uh so next we will try attempt to pass this buffer ID to a DRM related",
    "start": "567959",
    "end": "574560"
  },
  {
    "text": "trust application for Hua devices this is called China DRM common",
    "start": "574560",
    "end": "580480"
  },
  {
    "text": "ta if the parameter with pass suggests that the video stream is not",
    "start": "580480",
    "end": "586839"
  },
  {
    "text": "encrypted then the process of decryption is downgraded to a simple memory",
    "start": "586839",
    "end": "592600"
  },
  {
    "text": "move from the related code snippet you can observe two mapping costs the first",
    "start": "592600",
    "end": "598640"
  },
  {
    "text": "map you use a ion buffer uh that we control as the source and second map use",
    "start": "598640",
    "end": "605920"
  },
  {
    "text": "the buffer ID as parameter to map the correlated physical Pages as the",
    "start": "605920",
    "end": "613399"
  },
  {
    "text": "destination uh obviously this uh source and destination will be used by the",
    "start": "613399",
    "end": "618760"
  },
  {
    "text": "memory move directly so what we have gain here is a highly practical primitive that is a secure level",
    "start": "618760",
    "end": "626440"
  },
  {
    "text": "physical pages overwritten with controlled content however there is one",
    "start": "626440",
    "end": "634560"
  },
  {
    "text": "limitation the memory Maps is called Black List the memory belongs to T and",
    "start": "634560",
    "end": "641279"
  },
  {
    "text": "bl31 uh even though this serves as a global mitigation for the entire te us",
    "start": "641279",
    "end": "647519"
  },
  {
    "text": "it do prevent us from directly sabotaging the skure worlds",
    "start": "647519",
    "end": "653399"
  },
  {
    "text": "code by examining the ddii memory layout uh we can observe that there are other",
    "start": "653720",
    "end": "660279"
  },
  {
    "text": "sections such as uh sack camera MP sack and mod mass that seem to use some kind",
    "start": "660279",
    "end": "667000"
  },
  {
    "text": "of secure memory according to its name consequently a question",
    "start": "667000",
    "end": "673680"
  },
  {
    "text": "arises does fully compromised the secure Ro truly necessitate obtaining code",
    "start": "673680",
    "end": "678880"
  },
  {
    "text": "execution of b31 and T tus what about these other sections and",
    "start": "678880",
    "end": "686320"
  },
  {
    "text": "what about the course uh using the sections as their",
    "start": "686320",
    "end": "691680"
  },
  {
    "text": "memory to address this question we will have to zoom out and take a broader view",
    "start": "691680",
    "end": "697079"
  },
  {
    "text": "of the secure World high level infrastructure when we refer to normal",
    "start": "697079",
    "end": "704160"
  },
  {
    "text": "and secure uh we primarily mean software running in different privilege levels on",
    "start": "704160",
    "end": "710200"
  },
  {
    "text": "the acpu side from the Hardware's perspective the",
    "start": "710200",
    "end": "715560"
  },
  {
    "text": "primary distinction between the two Ro is the security signal correlated with",
    "start": "715560",
    "end": "720600"
  },
  {
    "text": "read and write operations sending on a bus when attempting to access ddii",
    "start": "720600",
    "end": "726839"
  },
  {
    "text": "memory or peripherals the primary uh the secure signal serves as a primary basics for",
    "start": "726839",
    "end": "734040"
  },
  {
    "text": "controllers such as tzc and tcpc to determine whether this acccess is",
    "start": "734040",
    "end": "742000"
  },
  {
    "text": "allowed in addition to acpu there are other cores running on the same",
    "start": "742120",
    "end": "747399"
  },
  {
    "text": "so roughly speaking if any of the cores were able to send secur signals on the",
    "start": "747399",
    "end": "753839"
  },
  {
    "text": "bus they might have the same access to the secure resources just like",
    "start": "753839",
    "end": "760199"
  },
  {
    "text": "acpu to illustrate this concept and also to continue our particular",
    "start": "760199",
    "end": "766600"
  },
  {
    "text": "exploit I chose IMCU as our next",
    "start": "766600",
    "end": "771839"
  },
  {
    "text": "Target uh look in the memory layout again and it appear it appears that the",
    "start": "773240",
    "end": "779199"
  },
  {
    "text": "I MCU has obtained a portion of DDR for its firware and since this firware is",
    "start": "779199",
    "end": "784800"
  },
  {
    "text": "not encrypted we can quickly analyze its code logic and",
    "start": "784800",
    "end": "790720"
  },
  {
    "text": "infrastructure and after that I just overwrite its memory NC was",
    "start": "790720",
    "end": "797160"
  },
  {
    "text": "happening and the outcome is quite promising as our Shell Code get executed",
    "start": "797160",
    "end": "802639"
  },
  {
    "text": "almost immediately as indicated by the crash lock moreover confirmed that the ICU",
    "start": "802639",
    "end": "811079"
  },
  {
    "text": "acts as a secure Master capable of sending secure signals on a",
    "start": "811079",
    "end": "817560"
  },
  {
    "text": "bus another positive aspect is that the IMCU reboots itself automatically dur a",
    "start": "817560",
    "end": "824880"
  },
  {
    "text": "crash without impacting the rest of the system allowing us to conduct multiple attempts and this feature is very",
    "start": "824880",
    "end": "833240"
  },
  {
    "text": "helpful especially during a testing phase as we don't our a peak and poke",
    "start": "833240",
    "end": "839279"
  },
  {
    "text": "uh crash the entire system and wait for the reboot that will be very inefficiency also this feature makes our",
    "start": "839279",
    "end": "846800"
  },
  {
    "text": "exploit 100% reliable we can try again and again until we",
    "start": "846800",
    "end": "853720"
  },
  {
    "text": "succeed even though the code logic within the IC formare doesn't seem to",
    "start": "854519",
    "end": "859680"
  },
  {
    "text": "have any interesting operations the kernel source code suggests that the um internal s Ram of",
    "start": "859680",
    "end": "867920"
  },
  {
    "text": "lpmc is exposed to ICU the lmcu is very powerful core you",
    "start": "867920",
    "end": "875320"
  },
  {
    "text": "might recall this from my previous research uh is responsible for the bootroom to run naturally we can infer",
    "start": "875320",
    "end": "883920"
  },
  {
    "text": "that as DM capabilities is perhaps the most potent on the entire so as the",
    "start": "883920",
    "end": "889920"
  },
  {
    "text": "bootroom is responsible to loading the rest of the system into the memory so it must have this high",
    "start": "889920",
    "end": "897680"
  },
  {
    "text": "privilege so let's again try to Pivot to lpmc from",
    "start": "897680",
    "end": "904839"
  },
  {
    "text": "IMCU even though the formare of lpmc is encrypted we can dump its memory by",
    "start": "904839",
    "end": "912000"
  },
  {
    "text": "having ICU reading its internal SRAM and save the content using a RDR",
    "start": "912000",
    "end": "918600"
  },
  {
    "text": "mechanism which functions similarly like a lust message during a crash many cores have such Handler to",
    "start": "918600",
    "end": "926079"
  },
  {
    "text": "facilitate the um RDR process so in this case I choose to",
    "start": "926079",
    "end": "933720"
  },
  {
    "text": "patch the RDR Handler function of LP MCU since this Handler is invoked",
    "start": "933720",
    "end": "940839"
  },
  {
    "text": "automatically when some other cores crash uh such ascu all we need to do is",
    "start": "940839",
    "end": "946880"
  },
  {
    "text": "to induce a crash at the end of ourcu Shell Code to trigger the execution of",
    "start": "946880",
    "end": "953680"
  },
  {
    "text": "our injected LPM Z Shell Code and after that we have have pivoted",
    "start": "953680",
    "end": "959319"
  },
  {
    "text": "us from uhcu to LP",
    "start": "959319",
    "end": "964399"
  },
  {
    "text": "MCU as a matter of fact we have just achieved the highest privilege on the",
    "start": "964399",
    "end": "970680"
  },
  {
    "text": "isoc an additional benefit we have here is to dump the bootroom from zero",
    "start": "970680",
    "end": "976279"
  },
  {
    "text": "address for further analysis as the lpmc is the one who runs the",
    "start": "976279",
    "end": "982480"
  },
  {
    "text": "bootroom well we typically consider the acpu as the PowerHouse reasoning years",
    "start": "982480",
    "end": "988880"
  },
  {
    "text": "mitigation actually boostered lpmc shifting certain privilege operations",
    "start": "988880",
    "end": "993959"
  },
  {
    "text": "such as dmss management from acpu to",
    "start": "993959",
    "end": "999480"
  },
  {
    "text": "lpmc with our tool primar buil for the acpu S let's conclude by utilizing the",
    "start": "999519",
    "end": "1006639"
  },
  {
    "text": "dma transfer function of lmcu to patch the bl31 running on the acpu",
    "start": "1006639",
    "end": "1014360"
  },
  {
    "text": "side we will add a rwx wrapper as a replacement of any unused SMC Handler",
    "start": "1014360",
    "end": "1021720"
  },
  {
    "text": "within uh bl31 and after that actually we have achieved the uh acpu year three",
    "start": "1021720",
    "end": "1030400"
  },
  {
    "text": "privilege uh which traditionally believes to be the highest privilege on the S",
    "start": "1030400",
    "end": "1035640"
  },
  {
    "text": "SOC and we did this with a very reliable",
    "start": "1035640",
    "end": "1040880"
  },
  {
    "text": "exploit effectively Transforming Our m 40 device into a testing",
    "start": "1040880",
    "end": "1047120"
  },
  {
    "text": "platform uh proceed we can continue to patch the teus to establish a decryption",
    "start": "1047120",
    "end": "1053039"
  },
  {
    "text": "article for any subsequent King 9000 form since the loading of the modem",
    "start": "1053039",
    "end": "1059720"
  },
  {
    "text": "image already includes decryption logic all we need to do is to modify this",
    "start": "1059720",
    "end": "1067440"
  },
  {
    "text": "hardcode and name String inside which which restricts the form uh which which",
    "start": "1067440",
    "end": "1073039"
  },
  {
    "text": "restricts the decryption logic to spec to specific formars",
    "start": "1073039",
    "end": "1080360"
  },
  {
    "text": "okay let's move on to the demo uh in this demo I'm going to obtain the root privilege first with a kernel",
    "start": "1080360",
    "end": "1088080"
  },
  {
    "text": "exploit given the outdated version of my mate 40 there are several choices and it",
    "start": "1088080",
    "end": "1094520"
  },
  {
    "text": "is not a point of to this talk so I will skip as explanation then we will use this cure",
    "start": "1094520",
    "end": "1102679"
  },
  {
    "text": "uh overr primitive uh to get the code execution oncu if everything goes correct the",
    "start": "1102679",
    "end": "1110520"
  },
  {
    "text": "program counter will be set to 93371 1234 indicated by the crash lock then",
    "start": "1110520",
    "end": "1116360"
  },
  {
    "text": "the Shell Code will pivot itself from ICU to lpmc and then U Back to the acpu",
    "start": "1116360",
    "end": "1124640"
  },
  {
    "text": "year3 uh with this we can employ our kernel module to use this SMC Handler to",
    "start": "1124640",
    "end": "1130520"
  },
  {
    "text": "dump the decrypted memory now here we just use this uh decryption Oracle to",
    "start": "1130520",
    "end": "1136559"
  },
  {
    "text": "decrypt the T as",
    "start": "1136559",
    "end": "1140559"
  },
  {
    "text": "firware so what do we have just accomplished to summarize we have payot",
    "start": "1156320",
    "end": "1162480"
  },
  {
    "text": "from acpu year zero tocu then to LP MCU and then finally",
    "start": "1162480",
    "end": "1167960"
  },
  {
    "text": "back to acpu year3 this serves as a vivid example of how core escalation",
    "start": "1167960",
    "end": "1175880"
  },
  {
    "text": "operates um at this moment you may be wondering what else can we infer from this new attack",
    "start": "1176400",
    "end": "1182600"
  },
  {
    "text": "model and to address this question we have to revisit the skill World high",
    "start": "1182600",
    "end": "1188520"
  },
  {
    "text": "level infrastructure uh in the last example most our passes fall within the left",
    "start": "1188520",
    "end": "1195480"
  },
  {
    "text": "side of this figure uh so what about the other",
    "start": "1195480",
    "end": "1200640"
  },
  {
    "text": "side uh when we refer to peripherals it is important to recognize that uhcu lpmc",
    "start": "1200760",
    "end": "1208600"
  },
  {
    "text": "acpu can all be perceived as a peripheral or co-processors from the",
    "start": "1208600",
    "end": "1214480"
  },
  {
    "text": "Viewpoint of other course so the role of this masterer and slave can be reversed",
    "start": "1214480",
    "end": "1221120"
  },
  {
    "text": "as long as there is a communication mechanism designed to facilitate their",
    "start": "1221120",
    "end": "1227159"
  },
  {
    "text": "interaction so to generalize the uh idea of coral escalation in this P we have to",
    "start": "1227159",
    "end": "1233679"
  },
  {
    "text": "delve into the details of how these cores uh communicate with one",
    "start": "1233679",
    "end": "1239720"
  },
  {
    "text": "another let's then explore several popular and well-known uh intercal communication",
    "start": "1240240",
    "end": "1247159"
  },
  {
    "text": "mechanisms also known as the Cross C attack surface one of the most recognized",
    "start": "1247159",
    "end": "1253760"
  },
  {
    "text": "interface is dma a notable example would be Gail's",
    "start": "1253760",
    "end": "1259480"
  },
  {
    "text": "research on Wi-Fi chipset where after remotely gaining code execution on the",
    "start": "1259480",
    "end": "1264880"
  },
  {
    "text": "Wi-Fi cor um an attack to the kernel was initiated using the dma",
    "start": "1264880",
    "end": "1271880"
  },
  {
    "text": "engine another remarkable work was carried out by Daniel and laen on Hua",
    "start": "1271880",
    "end": "1277039"
  },
  {
    "text": "smartphones in 2021 um after remotely acquiring control",
    "start": "1277039",
    "end": "1282480"
  },
  {
    "text": "of the modem they use the dma to directly attack the truster zone",
    "start": "1282480",
    "end": "1289480"
  },
  {
    "text": "mailbox is another prevalent and crucial mechanism for crosscore communication it",
    "start": "1289480",
    "end": "1295600"
  },
  {
    "text": "serves as a hardware based um memory slot and in curing side this slot is 64",
    "start": "1295600",
    "end": "1302760"
  },
  {
    "text": "bytes in size with the first 32 allocated for control registers and the",
    "start": "1302760",
    "end": "1308600"
  },
  {
    "text": "remaining 32 dedicated to share data between these two",
    "start": "1308600",
    "end": "1313799"
  },
  {
    "text": "cores let me provide you an example of a vulnerability I discovered in the lp MCU",
    "start": "1314279",
    "end": "1321039"
  },
  {
    "text": "mailbox Handler this is also the Handler that we have mentioned in the first example",
    "start": "1321039",
    "end": "1327360"
  },
  {
    "text": "serving to facilitate the RDR process as you can see uh the first",
    "start": "1327360",
    "end": "1333200"
  },
  {
    "text": "integer from the um mailbox data represents as a command ID which should",
    "start": "1333200",
    "end": "1339080"
  },
  {
    "text": "be 80202 and the handle cost already",
    "start": "1339080",
    "end": "1344279"
  },
  {
    "text": "already NE with another two integer from the mailbox data representing as physical address and size all this",
    "start": "1344279",
    "end": "1352679"
  },
  {
    "text": "values from the mailbox can be fully controlled from the acpu",
    "start": "1352679",
    "end": "1359120"
  },
  {
    "text": "side uh and the vulnerability here is a classical integer",
    "start": "1359240",
    "end": "1365000"
  },
  {
    "text": "overflow consequently the address can be any value greater than two uh two F150",
    "start": "1365000",
    "end": "1372919"
  },
  {
    "text": "zos and the size is actually irrelevant as it is not used by the rest of the",
    "start": "1372919",
    "end": "1379159"
  },
  {
    "text": "code then the address value is passed to uh the dma transfer transfer function",
    "start": "1379159",
    "end": "1385720"
  },
  {
    "text": "directly as the destination allowing us to overwrite a large range of physical memory including the internal SRAM of",
    "start": "1385720",
    "end": "1395679"
  },
  {
    "text": "lmcu shared memory is another extensively um employed mechanism by",
    "start": "1397720",
    "end": "1404480"
  },
  {
    "text": "different process modules and cores for communication purposes us large data transfers uh such",
    "start": "1404480",
    "end": "1412960"
  },
  {
    "text": "as login messages rely on shared memory and it is crucial to um notice that any",
    "start": "1412960",
    "end": "1421520"
  },
  {
    "text": "poin or offsets stored on the shared memory can be modified by both cores",
    "start": "1421520",
    "end": "1427679"
  },
  {
    "text": "therefore neither core should solely rely on these",
    "start": "1427679",
    "end": "1432240"
  },
  {
    "text": "values allow me to provide you another example of a vulnerability I discovered CED in the ISP",
    "start": "1433120",
    "end": "1440520"
  },
  {
    "text": "firware a range of physical pages is shared between acpu and ISP for um to",
    "start": "1440520",
    "end": "1448240"
  },
  {
    "text": "facilitate the logging mechanism and ISP use a fixed virtual",
    "start": "1448240",
    "end": "1453679"
  },
  {
    "text": "address c1850 to access this range of memory as a year zero user application",
    "start": "1453679",
    "end": "1461840"
  },
  {
    "text": "we can have the same access by mapping the kernel driver file and the problem arises when the ISP",
    "start": "1461840",
    "end": "1470399"
  },
  {
    "text": "core use the pointer from the shared memory directly without any",
    "start": "1470399",
    "end": "1476840"
  },
  {
    "text": "verification uh this allows us uh from we can from a year zero level we can",
    "start": "1476840",
    "end": "1483159"
  },
  {
    "text": "manipulate the ISP core to write data to anywhere we specified with memory",
    "start": "1483159",
    "end": "1490679"
  },
  {
    "text": "copy additionally there are other Hardware specific issues uh such as",
    "start": "1492320",
    "end": "1497919"
  },
  {
    "text": "internal memory or control registers being exposed uh like the lpmc case we",
    "start": "1497919",
    "end": "1503320"
  },
  {
    "text": "have mentioned depending on the hardware impl menion there are other issues to",
    "start": "1503320",
    "end": "1509919"
  },
  {
    "text": "consider such as uh the firware not being correctly verified or it is not",
    "start": "1509919",
    "end": "1515480"
  },
  {
    "text": "running in a protected memory uh now that we have covered uh",
    "start": "1515480",
    "end": "1522360"
  },
  {
    "text": "some aspect of uh crosscore communication",
    "start": "1522360",
    "end": "1528919"
  },
  {
    "text": "also known as the attack service for crosscore attack let's conclude with a",
    "start": "1528919",
    "end": "1535640"
  },
  {
    "text": "uh concrete example the ISP responsible for image",
    "start": "1535640",
    "end": "1544840"
  },
  {
    "text": "processing uh in the camera may not initially seem like a secure",
    "start": "1544840",
    "end": "1550960"
  },
  {
    "text": "Master however for the sake of uh face recognition features on a cell phone it",
    "start": "1550960",
    "end": "1557240"
  },
  {
    "text": "is granted Ed with secure Privileges and apparently the F",
    "start": "1557240",
    "end": "1563880"
  },
  {
    "text": "recognition is a feature that can can only implement it in the secure Ro and that's why this ISP cor also have this",
    "start": "1563880",
    "end": "1571720"
  },
  {
    "text": "high privilege but surprisingly um it doesn't seem that the",
    "start": "1571720",
    "end": "1577640"
  },
  {
    "text": "ISP cor verified its formare sending from the ACP side even though the",
    "start": "1577640",
    "end": "1582720"
  },
  {
    "text": "loading process of this formare is complex beneath testing and EXP exploiting this particular exploit can",
    "start": "1582720",
    "end": "1589679"
  },
  {
    "text": "be summarized in one line of uh bash command and after that as long as we",
    "start": "1589679",
    "end": "1596840"
  },
  {
    "text": "power on the is core using its driver our injected Shell Code will run and",
    "start": "1596840",
    "end": "1602919"
  },
  {
    "text": "that pivot us from the uh acpu to",
    "start": "1602919",
    "end": "1608799"
  },
  {
    "text": "ISP uh before going any further we have to discuss the mitigations here the the",
    "start": "1611240",
    "end": "1618159"
  },
  {
    "text": "ISB exploit took place in the middle of last year and several mitigations have been implemented since then to address",
    "start": "1618159",
    "end": "1625679"
  },
  {
    "text": "the Cross C attack two notable ones are dmss and CFG bus they are the obstacles",
    "start": "1625679",
    "end": "1632799"
  },
  {
    "text": "for our ISP exploit to go any further uh to people to other cors and gain highest",
    "start": "1632799",
    "end": "1640000"
  },
  {
    "text": "privilege the serves as a hardware based firewall for unintended memory and MML",
    "start": "1640000",
    "end": "1646520"
  },
  {
    "text": "access dmss has been extensively discussed in Daniel's talk uh where a memory table is",
    "start": "1646520",
    "end": "1653880"
  },
  {
    "text": "used to define excess ranges for different Masters He also mentioned the existence",
    "start": "1653880",
    "end": "1659640"
  },
  {
    "text": "of CFG bus uh which function similarly for M access",
    "start": "1659640",
    "end": "1665960"
  },
  {
    "text": "management upon closer inspection I observed that during the power on phase",
    "start": "1666360",
    "end": "1672679"
  },
  {
    "text": "of ISP core no ddii memory is accessible and the MML range including the dmss",
    "start": "1672679",
    "end": "1681360"
  },
  {
    "text": "table and the internal SRAM of lpmc is off limit because of cfj bus",
    "start": "1681360",
    "end": "1690518"
  },
  {
    "text": "configuration however cfbs itself remains successible therefore we should further",
    "start": "1692679",
    "end": "1699120"
  },
  {
    "text": "explore cfbs um to find a way to bypass this",
    "start": "1699120",
    "end": "1705000"
  },
  {
    "text": "mitigation after exhaustive testing of the control bits of CFG bus it becomes clear that the first 64",
    "start": "1706080",
    "end": "1715399"
  },
  {
    "text": "bits consists of Master for different uh mask for different",
    "start": "1715399",
    "end": "1721159"
  },
  {
    "text": "Masters uh this this deduction can also be made by comparing different versions of Harmony OS as the number of the be",
    "start": "1721159",
    "end": "1729440"
  },
  {
    "text": "decreases indicating the removal of Masters due to security",
    "start": "1729440",
    "end": "1735440"
  },
  {
    "text": "reasons we can also determine determine the offset and the lens value uh inside the CFG bus registers",
    "start": "1735519",
    "end": "1743200"
  },
  {
    "text": "but none of this information help us to bypass its",
    "start": "1743200",
    "end": "1748398"
  },
  {
    "text": "mitigation unlike dmss that has been existence on huawe smartphones for many",
    "start": "1749200",
    "end": "1755760"
  },
  {
    "text": "many years uh CF bus is only enabled uh last year or the year before last year",
    "start": "1755760",
    "end": "1763120"
  },
  {
    "text": "and that means by default it is disabled BS one is responsible to",
    "start": "1763120",
    "end": "1769600"
  },
  {
    "text": "configure the CF bu registers during the boot phase uh by examining how cfbs is",
    "start": "1769600",
    "end": "1777279"
  },
  {
    "text": "enabled I discover a disable configure enable logic and with some further more",
    "start": "1777279",
    "end": "1784840"
  },
  {
    "text": "experimentation I noticed that by writing zero to this particular address",
    "start": "1784840",
    "end": "1790559"
  },
  {
    "text": "uh fe2 520008 completely disables CFG bus and",
    "start": "1790559",
    "end": "1796919"
  },
  {
    "text": "after that that we regain the ability to read and write memory of uh LPM cuu and",
    "start": "1796919",
    "end": "1804519"
  },
  {
    "text": "also we can modify the dmss table to give lpmc full access to the DDR memory",
    "start": "1804519",
    "end": "1811640"
  },
  {
    "text": "so we can reuse the same technique in the first example peting to lpmc and",
    "start": "1811640",
    "end": "1817320"
  },
  {
    "text": "then patch b31 running on the acpu side uh okay let's move on to the next",
    "start": "1817320",
    "end": "1826240"
  },
  {
    "text": "demo the universal ISB exploit is is showcased on a P40 device as our m 40 is",
    "start": "1826240",
    "end": "1833640"
  },
  {
    "text": "used for a decryption article it won't upgrade but the P4 is actually running",
    "start": "1833640",
    "end": "1839120"
  },
  {
    "text": "the latest version of Harmony OS at that",
    "start": "1839120",
    "end": "1843519"
  },
  {
    "text": "moment uh please notice that for the demonstration the correct screen password is set to six ones and this is",
    "start": "1845559",
    "end": "1853880"
  },
  {
    "text": "what we're going to bypass later",
    "start": "1853880",
    "end": "1859240"
  },
  {
    "text": "for",
    "start": "1886159",
    "end": "1889159"
  },
  {
    "text": "the ispw here is a program I have written to talk to the kernel driver it can power on and power off the ISP cord",
    "start": "1894159",
    "end": "1902720"
  },
  {
    "text": "directly and with this exploit uh we will do the same thing patch",
    "start": "1902720",
    "end": "1908840"
  },
  {
    "text": "b31 uh after that we will imploy a kernel module to search and patch a",
    "start": "1908840",
    "end": "1914320"
  },
  {
    "text": "trust application called viver which is responsible for the screen password",
    "start": "1914320",
    "end": "1919919"
  },
  {
    "text": "verification uh once patched any entered password will be recognized as correct",
    "start": "1919919",
    "end": "1926000"
  },
  {
    "text": "so this time two six twos or six3 can all be used to unlock the",
    "start": "1926000",
    "end": "1933480"
  },
  {
    "text": "screen uh in summary this concludes our presentation for security researchers um",
    "start": "1939639",
    "end": "1947200"
  },
  {
    "text": "investigating how different course operates and communicates will lead to valuable passes for privilege",
    "start": "1947200",
    "end": "1954279"
  },
  {
    "text": "escalation and cross core attack uh as well as core escalation represents a",
    "start": "1954279",
    "end": "1959840"
  },
  {
    "text": "potent technique with few specific mitigations traditional mitigations",
    "start": "1959840",
    "end": "1965559"
  },
  {
    "text": "tends to focus more more on software level bucks and lastly for chip set",
    "start": "1965559",
    "end": "1971559"
  },
  {
    "text": "wonders it is imperative to carefully consider the implication of adding new",
    "start": "1971559",
    "end": "1977200"
  },
  {
    "text": "components to the secure World storing something in the secure world does not automatically make it safe on the",
    "start": "1977200",
    "end": "1984120"
  },
  {
    "text": "contrary it becomes an additional attacking service leading to increased complicity and challenges for writing uh",
    "start": "1984120",
    "end": "1992559"
  },
  {
    "text": "bug free software the secure role should strive for Simplicity whenever",
    "start": "1992559",
    "end": "1999240"
  },
  {
    "text": "possible uh here I would like to express my sincere gratitude to T for his",
    "start": "1999240",
    "end": "2005440"
  },
  {
    "text": "invaluable assistance in in preparing my blackhead proposal I would also like to",
    "start": "2005440",
    "end": "2011120"
  },
  {
    "text": "extend my appreciation to joinan Dixon for his support in preparing this",
    "start": "2011120",
    "end": "2016200"
  },
  {
    "text": "presentation without their ening support this presentation would not have come to",
    "start": "2016200",
    "end": "2021760"
  },
  {
    "text": "foration and I'm opening to any questions you may have uh you're also very welcome to join me during the meet",
    "start": "2021760",
    "end": "2027720"
  },
  {
    "text": "and grade event this afternoon thank",
    "start": "2027720",
    "end": "2033518"
  },
  {
    "text": "you",
    "start": "2035960",
    "end": "2038960"
  }
]