[
  {
    "text": "the session is miniaturization with Jason",
    "start": "199",
    "end": "4918"
  },
  {
    "text": "Larson so yes so everybody uh everybody's off",
    "start": "5720",
    "end": "13160"
  },
  {
    "text": "watching BR Bruce SNY except for you uh your great people",
    "start": "13160",
    "end": "18720"
  },
  {
    "text": "so if you don't know I'm Jason Larsson I'm a cyber security of research and I studi the critical infrastructure so for",
    "start": "18720",
    "end": "24359"
  },
  {
    "text": "the last few years I've been uh um studying remote physical damage and so uh I've got an a series of experiments",
    "start": "24359",
    "end": "31039"
  },
  {
    "text": "that I'm I'm working on and this is actually the the results of the first stage of the experiment so it takes a",
    "start": "31039",
    "end": "36760"
  },
  {
    "text": "little bit of background to understand uh uh kind of what I'm doing so um this is kind of my experimental",
    "start": "36760",
    "end": "43800"
  },
  {
    "text": "setup um so we basically have a water pipe and if any of you have ever been in a house and you uh kicked off the uh the",
    "start": "43800",
    "end": "50960"
  },
  {
    "text": "faucet and then like half a second later you hear a thunk from some of the part of the house that's actually a water hammer you close the the valve too fast",
    "start": "50960",
    "end": "57960"
  },
  {
    "text": "and a pressure wave starts building up behind as all the water crashes into the valve and runs off until it finds some",
    "start": "57960",
    "end": "63840"
  },
  {
    "text": "surface and elbow or something that moves and that's where you hear the uh hear the thunk so water hammers um and",
    "start": "63840",
    "end": "70000"
  },
  {
    "text": "Industrial processes are much uh uh much larger and damage a bunch of stuff um so",
    "start": "70000",
    "end": "76119"
  },
  {
    "text": "the water hammer effect is actually pretty well known um uh in that if you you close the valve uh you slam the Val",
    "start": "76119",
    "end": "83079"
  },
  {
    "text": "valve close fast enough then the pressure wave runs out at the speed of sound in the liquid so the speed of sound in water is like, 1400 m a second",
    "start": "83079",
    "end": "90400"
  },
  {
    "text": "it's really fast it's faster than a bullet so obviously the you know couple tons of water you have in this pipe",
    "start": "90400",
    "end": "96320"
  },
  {
    "text": "isn't going to get up and move at the speed of bullet speed of a bullet that way so there's actually a much slower",
    "start": "96320",
    "end": "101759"
  },
  {
    "text": "wave that forms so there's actually some steam bubbles that form right at the surface of the valve when it closes and",
    "start": "101759",
    "end": "107119"
  },
  {
    "text": "the steam bubbles push out and they push the water and this mass movement water is is based on this uh um the the",
    "start": "107119",
    "end": "113840"
  },
  {
    "text": "expansion of steam so the the actual pressure wave the slower movement mass movement water wave is is is slower it's",
    "start": "113840",
    "end": "120799"
  },
  {
    "text": "also a lot harder to uh to predict so it's going to uh it's going to run out and hit it and reflect and reflect back",
    "start": "120799",
    "end": "127680"
  },
  {
    "text": "so if you actually uh are sitting there and you crack the valve at the right time when you crack the valve and you close it again you can create a second",
    "start": "127680",
    "end": "134080"
  },
  {
    "text": "pressure wave and so the first pressure wave comes over there and hits the second pressure wave and you get wave form addition so the pressure wave gets",
    "start": "134080",
    "end": "140959"
  },
  {
    "text": "bigger and bigger so in this piping structure then you can come over there and basically make this pressure wave bigger and bigger like pushing a swing",
    "start": "140959",
    "end": "147319"
  },
  {
    "text": "so the more times you cycle it the bigger it gets and tell eventually something in this uh thing is going to",
    "start": "147319",
    "end": "152560"
  },
  {
    "text": "going to fail the valve's going to go out the elbows are going to die something's going to die in this uh in this situation but since the uh the",
    "start": "152560",
    "end": "159640"
  },
  {
    "text": "speed of this slower moving wave is really hard to predict then um you can't really uh sit",
    "start": "159640",
    "end": "167440"
  },
  {
    "text": "there and study the the things like okay that's 62 in long and that's this big and that's big and do a bunch of",
    "start": "167440",
    "end": "173200"
  },
  {
    "text": "calculations and actually come anywhere close to it but you can't actually observe it so a lot of times thankfully",
    "start": "173200",
    "end": "178400"
  },
  {
    "text": "for the attacker then there's sensors in all of your piping structures and so a lot of times you'll find a a pressure",
    "start": "178400",
    "end": "184319"
  },
  {
    "text": "sensor flow meter or something like that that's actually sitting there and actually it can actually observe the wave so if you have a a pressure sensor",
    "start": "184319",
    "end": "191519"
  },
  {
    "text": "somewhere in this uh structure with the valve and you close the valve really fast and this uh this wave goes by then",
    "start": "191519",
    "end": "197519"
  },
  {
    "text": "you have the time X from when the valve closes until you actually see the see the first wave it's going to come out",
    "start": "197519",
    "end": "203799"
  },
  {
    "text": "reflect and come back and you're going to see it so the round trip time from the reflection back is y and then you're going to have the time from the uh the",
    "start": "203799",
    "end": "210560"
  },
  {
    "text": "sensor back to the valve that's X so the whole roundtrip time from the valve to the elbow and back is is going to be 2x+",
    "start": "210560",
    "end": "217640"
  },
  {
    "text": "y so if you have a sensor and you can just sit there and you can see the the incident wave you can see the reflected wave you actually figure out how fast uh",
    "start": "217640",
    "end": "225400"
  },
  {
    "text": "you need to uh sit there and cycle the valve to get this pressure uh this uh uh this uh pressure wave to get bigger and",
    "start": "225400",
    "end": "231599"
  },
  {
    "text": "bigger and bigger and eventually turn something into a pretzel or blow out a seal or whatever's going to happen to the",
    "start": "231599",
    "end": "237200"
  },
  {
    "text": "system so unfortunately this wave goes by pretty fast um so I've got an experimental setup that's about 60 ft",
    "start": "237200",
    "end": "243760"
  },
  {
    "text": "long and when I uh close the uh valve and the um the wave goes there and back",
    "start": "243760",
    "end": "249360"
  },
  {
    "text": "it's uh it takes less than a second but a lot of times on these sensors you only really sample them at a much much slower",
    "start": "249360",
    "end": "255920"
  },
  {
    "text": "frequency so you've got the pressure sensor and you say hey give me some pressure and you might do that at uh at a second or maybe a couple of times a",
    "start": "255920",
    "end": "262759"
  },
  {
    "text": "second but this isn't fast enough to actually see this wave go by and see the wave come back but the uh",
    "start": "262759",
    "end": "268680"
  },
  {
    "text": "microcontroller on the the sensors are capable of sampling faster so if you actually come over and get code",
    "start": "268680",
    "end": "274320"
  },
  {
    "text": "execution on the uh on the actual pressure sensor itself then uh you can",
    "start": "274320",
    "end": "279440"
  },
  {
    "text": "come over there and find that analog pen and say sample sample sample and a lot of these will go really fast um so uh",
    "start": "279440",
    "end": "285400"
  },
  {
    "text": "most of the analog inputs on a microcontroller are set up to do 44 khz so they can do um they can do uh um",
    "start": "285400",
    "end": "292080"
  },
  {
    "text": "human audio so um if you can actually come over there and squish down your code",
    "start": "292080",
    "end": "298000"
  },
  {
    "text": "into something small enough that can get on to uh uh they can get onto this pressure sensor and detect the way for",
    "start": "298000",
    "end": "303919"
  },
  {
    "text": "you the the uh physics are there um the microcontrol possible do it you just need to squish your code down small",
    "start": "303919",
    "end": "310600"
  },
  {
    "text": "enough um but unfortunately the small microcontrollers are uh um are actually",
    "start": "310600",
    "end": "317479"
  },
  {
    "text": "um really really small so a lot of these are MSP 430s atml avrs um some old",
    "start": "317479",
    "end": "323080"
  },
  {
    "text": "Hatachi CPUs and and stuff like that so uh most of the flash on those are already full so you've got the uh",
    "start": "323080",
    "end": "329840"
  },
  {
    "text": "microcontroller with only Kil kilobytes of memory very little CPU power um and",
    "start": "329840",
    "end": "335800"
  },
  {
    "text": "they're all actually kind of a little bit fragile so um the first stage of my experiment was basically uh can I",
    "start": "335800",
    "end": "342600"
  },
  {
    "text": "actually miniaturize some code down enough that I can do all the processing necessary to uh uh to extract the the",
    "start": "342600",
    "end": "349160"
  },
  {
    "text": "round trip time of that wave into a very small microcontroller so the second stage of",
    "start": "349160",
    "end": "354720"
  },
  {
    "text": "the experiment is actually um what we're working on right now which is we're building a a full scale SC mockup and",
    "start": "354720",
    "end": "360360"
  },
  {
    "text": "we're actually going to run this to that and the third stage of the experiment is uh is actually what I wanted to test uh",
    "start": "360360",
    "end": "366000"
  },
  {
    "text": "test all along and that's uh Place shifting a chemical reaction out of a reaction vessel and into a piping",
    "start": "366000",
    "end": "371360"
  },
  {
    "text": "structure so normally up on a up on a hill you have your big tanks of chemicals the chemicals come down into",
    "start": "371360",
    "end": "376840"
  },
  {
    "text": "reaction vessels uh and they're properly mixed in the appropriate ratios you heat them up until they start reacting um and",
    "start": "376840",
    "end": "382919"
  },
  {
    "text": "things are supposed to go bad in that reaction vessel there's pressure relief Valves and cach basins and everything so",
    "start": "382919",
    "end": "388960"
  },
  {
    "text": "what I really wanted to test was um can we actually take the um uh take the",
    "start": "388960",
    "end": "394840"
  },
  {
    "text": "contents of that reaction vessel that's unreacted slide it into us some piping structures and then add um then cause a",
    "start": "394840",
    "end": "401120"
  },
  {
    "text": "uh cause the water hammer effect to actually add the extra energy necessary to start off the chemical reaction and",
    "start": "401120",
    "end": "406280"
  },
  {
    "text": "make the chemical reaction happen someplace else so I submitted two presentations to",
    "start": "406280",
    "end": "411440"
  },
  {
    "text": "black hat um so one was uh the algorithms that uh um I used to",
    "start": "411440",
    "end": "416759"
  },
  {
    "text": "miniaturize down the uh uh the detection rout so that they can actually uh be as small",
    "start": "416759",
    "end": "422280"
  },
  {
    "text": "as possible and the second part was how to efficiently merge firmware um merge",
    "start": "422280",
    "end": "427759"
  },
  {
    "text": "my rootkit into the firmware so black hat uh approved both my presentations and then told me I had a one-hour time",
    "start": "427759",
    "end": "433039"
  },
  {
    "text": "slot to do both presentations and so this is going to be really fast and a kind of a high level overview so uh um",
    "start": "433039",
    "end": "440840"
  },
  {
    "text": "so if I'm losing anybody give me a little you know slow down thumbs down because I'm going to run through this a",
    "start": "440840",
    "end": "446720"
  },
  {
    "text": "little bit on the fast side so the first thing we actually need to do um when we're uh uh looking at",
    "start": "446720",
    "end": "453240"
  },
  {
    "text": "this is the obvious thing we need to actually spot the uh um spot the wave and the uh um and the counter wave and",
    "start": "453240",
    "end": "460199"
  },
  {
    "text": "so I'm going to run through just to why easy approaches won't work to to illustrate kind of what's going on here",
    "start": "460199",
    "end": "466639"
  },
  {
    "text": "so the first thing everybody tries to do is a moving average so this is a um some data off of a Tennessee Eastman process",
    "start": "466639",
    "end": "473599"
  },
  {
    "text": "that I got from a from a colleague and there's some noise in the data so you have to deal with the noise so if you're",
    "start": "473599",
    "end": "479680"
  },
  {
    "text": "going to say like oh I'll just run the moving average over the top of this thing it'll make it all work out so if you do a two-point moving average it",
    "start": "479680",
    "end": "485680"
  },
  {
    "text": "doesn't uh smooth it out enough and you're going to Tech these Peaks like 50 times but you only need like four bytes to store the data so if you come over",
    "start": "485680",
    "end": "492599"
  },
  {
    "text": "there and you crank this thing up to a 50p point moving average uh then uh you know the spikes are kind of mostly gone",
    "start": "492599",
    "end": "500159"
  },
  {
    "text": "um but uh now you need 200 bytes just to store the uh the history for your moving average if you go all the way up to um",
    "start": "500159",
    "end": "508120"
  },
  {
    "text": "uh whoops oh so if you go up all the way up to um uh to 200 points I missing",
    "start": "508120",
    "end": "515320"
  },
  {
    "text": "actually missing a slide there if you go all the way up to 200 Point moving average then everything starts looking good um uh and everything's nice and",
    "start": "515320",
    "end": "522399"
  },
  {
    "text": "smooth uh but at that point you need 800 bytes just to uh just to store the history of the moving average and since",
    "start": "522399",
    "end": "528399"
  },
  {
    "text": "we're only going to have a couple of kilobytes to actually build our entire root kit um these types of things are",
    "start": "528399",
    "end": "534160"
  },
  {
    "text": "really way too big uh to stick in there um also a moving average is a is a scale",
    "start": "534160",
    "end": "540959"
  },
  {
    "text": "dependent algorithm so if I want to know how how big of a moving average I'm going to have to to do to actually",
    "start": "540959",
    "end": "546399"
  },
  {
    "text": "smooth out this waveform then uh um I have to know what the the signal looks like so if the signal was really really",
    "start": "546399",
    "end": "552160"
  },
  {
    "text": "noisy I might need you know a th000 by moving uh thousand sample moving average if it's already really clean I might not",
    "start": "552160",
    "end": "558320"
  },
  {
    "text": "only need a few uh of them so this is scale dependent meaning that I have to have pre-knowledge of the the signal",
    "start": "558320",
    "end": "564839"
  },
  {
    "text": "before I can write my algorithm so we can actually uh uh come over there and just instead of doing",
    "start": "564839",
    "end": "571519"
  },
  {
    "text": "things like moving averages we can fit curves to the to it unfortunately all of your fast foror transform curve fitting",
    "start": "571519",
    "end": "578839"
  },
  {
    "text": "stuff is just um it's just not going to work you're never going to get a fast foror transform Library down into just a",
    "start": "578839",
    "end": "584839"
  },
  {
    "text": "couple of couple of K worth of memory so what you can do is you can",
    "start": "584839",
    "end": "590120"
  },
  {
    "text": "actually match a set of line segments on top of the uh on top of the data so if you uh look at the process uh data and",
    "start": "590120",
    "end": "596839"
  },
  {
    "text": "you look at a set of line segments and you match a set of L segments Over the Top This actually gives you a pretty good estimation of U of what's going on",
    "start": "596839",
    "end": "604240"
  },
  {
    "text": "in the process um triangles are uh um looking at a series of triangles is",
    "start": "604240",
    "end": "609279"
  },
  {
    "text": "actually really cheap and easy and uh and easy to calculate you can just do a few divides and you're there so we need",
    "start": "609279",
    "end": "615880"
  },
  {
    "text": "a actually need an algorithm to stretch over the top of that and so I'm not going to run over uh I'm just going to",
    "start": "615880",
    "end": "621480"
  },
  {
    "text": "throw this up there and just describe how this algorithm works so to do the actual triangle matching and get it",
    "start": "621480",
    "end": "627399"
  },
  {
    "text": "really really really small you basically start at a at a point and you start taking you you uh project two slopes up",
    "start": "627399",
    "end": "634560"
  },
  {
    "text": "over the the top of the data um and the two slopes go out and then you uh every time you find a point that's uh that's",
    "start": "634560",
    "end": "641120"
  },
  {
    "text": "above the top slope you rotate the two slopes upwards and every time you find a point that's below the uh to rotate the",
    "start": "641120",
    "end": "646839"
  },
  {
    "text": "slope uh downward you keep doing that until you find X number of points that are above and below the uh the two",
    "start": "646839",
    "end": "652720"
  },
  {
    "text": "slopes of the line then uh when you hit that number then you declare um a vertex of line segment and then you just figure",
    "start": "652720",
    "end": "659079"
  },
  {
    "text": "out to um you have the new vertex and then you take a look at it and say is this uh um is this uh triangle bigger or",
    "start": "659079",
    "end": "666920"
  },
  {
    "text": "smaller in terms of length than the previous triangles so if it was a um so",
    "start": "666920",
    "end": "671959"
  },
  {
    "text": "if it's a really long triangle then that means that you've got too big of an angle between your two slopes and so as",
    "start": "671959",
    "end": "677360"
  },
  {
    "text": "the slopes come up you narrow the angle a little bit if it's a really short one then that means you're detecting too much of the noise and you crank it out a",
    "start": "677360",
    "end": "683760"
  },
  {
    "text": "little bit so you can actually miniaturize this uh this algorithm down uh down to where you can do the whole",
    "start": "683760",
    "end": "689079"
  },
  {
    "text": "thing and about uh and about eight subtracts two divides and three Compares",
    "start": "689079",
    "end": "694440"
  },
  {
    "text": "and so you can get it really really really small so this is a again that Tennessee",
    "start": "694440",
    "end": "700079"
  },
  {
    "text": "Eastman data with a set of triangles matched over the top of it so now we have this nice approximation of what's going on one of the nice things about",
    "start": "700079",
    "end": "706639"
  },
  {
    "text": "doing it this way is when I we want to do the the heavyweight processing we only actually have to run the heavyweight processing Logics uh at the",
    "start": "706639",
    "end": "713360"
  },
  {
    "text": "vertex of the triangle so when I'm coming over there and saying like is this actually the uh the peak of a wave I only have to do this uh um do this",
    "start": "713360",
    "end": "720480"
  },
  {
    "text": "math right at the individual peaks of the uh of the triangles so now we just need to go",
    "start": "720480",
    "end": "727240"
  },
  {
    "text": "extract the uh the wave and the counter wave and so if we're looking at this this is actually some data off of some",
    "start": "727240",
    "end": "732480"
  },
  {
    "text": "sensors in the in the sea of Sea of Japan so right there a sensor glitch happened um uh so uh um me and a friend",
    "start": "732480",
    "end": "739959"
  },
  {
    "text": "of mine have a lot of debate about what happened in this uh this uh sensor glitch but if you go look at where the uh the sensor glitch is right after that",
    "start": "739959",
    "end": "746720"
  },
  {
    "text": "the slopes of the lines change the length of the lines change and uh um that actually tells us something uh",
    "start": "746720",
    "end": "752120"
  },
  {
    "text": "something uh different happened so we can take this approach and uh try and",
    "start": "752120",
    "end": "757279"
  },
  {
    "text": "extract both the X which is the time uh between when we Clos the valve and the first pressure wire showed up and Y the",
    "start": "757279",
    "end": "763240"
  },
  {
    "text": "roundtrip time to uh get the optimal water hammer um timing it also has the",
    "start": "763240",
    "end": "769680"
  },
  {
    "text": "added ability that when we're starting to stretch things over there um uh we",
    "start": "769680",
    "end": "774839"
  },
  {
    "text": "our algorithm isn't scale dependent so we don't really care once we get on to the top of the sensor and we start looking at the STA coming off this",
    "start": "774839",
    "end": "780360"
  },
  {
    "text": "analog pin I don't really care if this is in centimeters of water millimeters of mercury pascals or just whatever they",
    "start": "780360",
    "end": "786120"
  },
  {
    "text": "came up with we can just stretch it over so if we're looking at this this is uh",
    "start": "786120",
    "end": "791240"
  },
  {
    "text": "what the actual model so there's a chunk of modeling software they use in industrial uh control systems to figure",
    "start": "791240",
    "end": "797399"
  },
  {
    "text": "out you know have I built a big enough pipe so when this thing slams close the the transient is going to go here and so",
    "start": "797399",
    "end": "803079"
  },
  {
    "text": "the top one is actually what was predicted by the model when uh when the valve uh slams closed then this is the",
    "start": "803079",
    "end": "809920"
  },
  {
    "text": "pressure you should actually uh get to see so if you look at the bottom one the bottom one is actually what uh what was",
    "start": "809920",
    "end": "816079"
  },
  {
    "text": "uh returned off the sensor and the two of them aren't really that close so uh we actually need some way to extract",
    "start": "816079",
    "end": "822440"
  },
  {
    "text": "that data in both cases but just looking at the data here we can actually see our answer in the uh in the lower data so if",
    "start": "822440",
    "end": "828519"
  },
  {
    "text": "we start the the valve open H happens at about time Point um uh time Point 4/10",
    "start": "828519",
    "end": "833920"
  },
  {
    "text": "of a second um the uh the valve close happens at about uh um about uh 0.55 um",
    "start": "833920",
    "end": "841440"
  },
  {
    "text": "and the uh um the return wave actually happens or the instant wave happens at 0.55 and the return wave uh shows up",
    "start": "841440",
    "end": "847920"
  },
  {
    "text": "about 0.56 so if we did just do 2x plus y we know that in my uh um in my test",
    "start": "847920",
    "end": "854120"
  },
  {
    "text": "setup with a 60 foot uh pipe then when I slam it closed then 4/10 of a second later the the shock wave is going to",
    "start": "854120",
    "end": "861399"
  },
  {
    "text": "reflect off the end and show back up over on the beginning so when we uh take a look at",
    "start": "861399",
    "end": "867360"
  },
  {
    "text": "that we stretch a series of line segments over the top of uh this noisy data we need some way to come over there",
    "start": "867360",
    "end": "872880"
  },
  {
    "text": "and say are these the ones we have is this just some random you know generator kicking on or uh the chiller kicked over",
    "start": "872880",
    "end": "878839"
  },
  {
    "text": "or something like that some some normal dist uh disturbance so the way I actually sat down and extracted um the",
    "start": "878839",
    "end": "886360"
  },
  {
    "text": "the actual waveforms in a in a scale-free manner is I just converted the actual lines uh to a triangle strip",
    "start": "886360",
    "end": "893199"
  },
  {
    "text": "so you can uh so you you view all the line segments as a triangle strip and actually for um pressure trans",
    "start": "893199",
    "end": "899040"
  },
  {
    "text": "transients the ratio of the areas between adjacent triangles and the triangle strips is actually fairly",
    "start": "899040",
    "end": "904720"
  },
  {
    "text": "constant so even in all the noisy data and stuff if you just come over there and take each triangle and say the first triangle has an area of one if the",
    "start": "904720",
    "end": "911399"
  },
  {
    "text": "second triangle is somewhere in the the the the range of of 86 and the uh times",
    "start": "911399",
    "end": "917320"
  },
  {
    "text": "086 the size of the second one and the third one is point about 61 then this is",
    "start": "917320",
    "end": "922360"
  },
  {
    "text": "actually a uh um this is actually the the event that we're looking for so we only have to run uh the the actual",
    "start": "922360",
    "end": "929480"
  },
  {
    "text": "line segment stretching um on each individual point then when we get vertexes we just take a look at each",
    "start": "929480",
    "end": "935319"
  },
  {
    "text": "vertex look in the vertex history which we only have to have three points of history and uh we can look to see that",
    "start": "935319",
    "end": "940639"
  },
  {
    "text": "we've actually grabbed this there's there's an upside to this and that this is uh U the ratios are really opaque so",
    "start": "940639",
    "end": "947680"
  },
  {
    "text": "if um Ralph wagnor or somebody else is reverse engineer your code and they see these ratios in your code it's not",
    "start": "947680",
    "end": "952839"
  },
  {
    "text": "obvious that you're trying to exploit a uh a water hammer and get the pressure to build so we get this down to uh to",
    "start": "952839",
    "end": "959240"
  },
  {
    "text": "fit into pressure sensor and it weighs in at about 700 bytes which is kind of an ouch when you only have a couple of",
    "start": "959240",
    "end": "964880"
  },
  {
    "text": "kilobytes to deal with but it uh but it works so the next thing we've got to do is uh um is is uh actually spoof the",
    "start": "964880",
    "end": "972920"
  },
  {
    "text": "operator so we're going to come over here and we're going to recycling the valve and uh and causing pipes to jump and things to fail we don't really want",
    "start": "972920",
    "end": "979240"
  },
  {
    "text": "the operator to uh to see all this stuff going on so this is a this is actually uh um uh kind of classically how how um",
    "start": "979240",
    "end": "987959"
  },
  {
    "text": "we would do this this is is some old data from 11 years ago um when we were running some experiments in this case we",
    "start": "987959",
    "end": "994240"
  },
  {
    "text": "hacked into a uh um a scale chemical process and made a bunch of uh um tanks",
    "start": "994240",
    "end": "1000360"
  },
  {
    "text": "overflow and then we hacked into an electric power substation and and kicked it off but in both cases this is taken",
    "start": "1000360",
    "end": "1006000"
  },
  {
    "text": "kind of the classic approach of um we just uh when we did the spoof is we just recorded recorded the data for a while",
    "start": "1006000",
    "end": "1011959"
  },
  {
    "text": "and after we recorded enough of the data we said hey operator here's some more of the same data that we recorded for you",
    "start": "1011959",
    "end": "1017440"
  },
  {
    "text": "and uh and we can SPO in the this is kind of the uh just the standard way everybody uh everybody kind of does it",
    "start": "1017440",
    "end": "1023519"
  },
  {
    "text": "but we can't really use this approach because we're we want to sit in a pressure sensor and we got like 2K of",
    "start": "1023519",
    "end": "1028678"
  },
  {
    "text": "memory so maybe we could record like one second of power data um inside this thing or one second of pressure data but",
    "start": "1028679",
    "end": "1035600"
  },
  {
    "text": "that's about it so we need an actual better approach so uh um so the first thing",
    "start": "1035600",
    "end": "1042918"
  },
  {
    "text": "that we have to do in our spoof is uh we have to start transferring uh all these uh random disturbances so when the fic",
    "start": "1042919",
    "end": "1049440"
  },
  {
    "text": "guys come in and they're looking at all the data they actually use these disturbances to to to marry up all the",
    "start": "1049440",
    "end": "1054919"
  },
  {
    "text": "stuff and trying to build a picture of what happened when inside the process so if you come over here and here's your sensor and it's just perfect it's",
    "start": "1054919",
    "end": "1061280"
  },
  {
    "text": "perfectly flat and there's no uh disturbances in it whatsoever whenever bails to seeing all this uh um fly",
    "start": "1061280",
    "end": "1068440"
  },
  {
    "text": "around then you're not going to be able to see the uh um they're they're not going to believe that this is actual",
    "start": "1068440",
    "end": "1073640"
  },
  {
    "text": "real stenor data so what we need to do is take this overall trend um where we're manipulating the data and take all",
    "start": "1073640",
    "end": "1079120"
  },
  {
    "text": "the disturbances and then actually reflect them back onto the original data but we can actually use the uh use the",
    "start": "1079120",
    "end": "1085440"
  },
  {
    "text": "triangles that we built earlier to to accomplish this so here we have uh some lines fit over the top of this",
    "start": "1085440",
    "end": "1091679"
  },
  {
    "text": "particular one with the disturbance um where the chiller kicks on and all we have to do is move the mid segment uh",
    "start": "1091679",
    "end": "1098200"
  },
  {
    "text": "midsection of each line back up onto a flat flat line and just take all the Deltas and push them back back up and we",
    "start": "1098200",
    "end": "1104520"
  },
  {
    "text": "now have a nice um a nice flat line that's believable to the operator um that has all the disturbances so when",
    "start": "1104520",
    "end": "1110600"
  },
  {
    "text": "all the other sensors see things going on this sensor is going to see things going on as well so we also have a we have one more",
    "start": "1110600",
    "end": "1118480"
  },
  {
    "text": "problem that we have to do before we can actually get the spoofing done um and so uh this problem is the actual sensor",
    "start": "1118480",
    "end": "1125120"
  },
  {
    "text": "noise so humans are actually pretty good at looking at sensor noise and seeing when things change so if we come over",
    "start": "1125120",
    "end": "1130760"
  },
  {
    "text": "here and we've got a bunch of data and we just say hey everything goes Flatline everybody's going to look at that and like yeah there's there's a dead sensor",
    "start": "1130760",
    "end": "1136400"
  },
  {
    "text": "here this isn't right the princi scheme was GNA going to Zone in uh Zone in on",
    "start": "1136400",
    "end": "1141520"
  },
  {
    "text": "what you were doing and then they're going to find all your stuff and you know you're going to be unhappy so you",
    "start": "1141520",
    "end": "1146559"
  },
  {
    "text": "can use a series of things with uh shifting and uh scaling to try and regenerate sensor noise so uh but if you",
    "start": "1146559",
    "end": "1153840"
  },
  {
    "text": "shift things up if you shift every Point onto the line obviously you're going to make a straight line so you have to shift things in blocks and uh the blocks",
    "start": "1153840",
    "end": "1160400"
  },
  {
    "text": "start uh start giving you these stair stat patterns and if you just scale things then sensors uh don't have the",
    "start": "1160400",
    "end": "1167360"
  },
  {
    "text": "same Dynamic uh the same noise over their whole dynamic range so some of them have a little bit of noise up here and then as they go by they have bigger",
    "start": "1167360",
    "end": "1173679"
  },
  {
    "text": "noise Etc so if you take a little bit of noise down here you scale it up you start getting really really large uh",
    "start": "1173679",
    "end": "1178799"
  },
  {
    "text": "chunks of noise so we need a better way to regenerate sensor noise so uh um if",
    "start": "1178799",
    "end": "1184280"
  },
  {
    "text": "we just add a bunch of Randomness and try and fake it then humans are going to see something like this here's here's your sensor noise um that goes along and",
    "start": "1184280",
    "end": "1191360"
  },
  {
    "text": "then here's something totally different so humans Zone in on kind of the spikiness the widness and um the gaps",
    "start": "1191360",
    "end": "1198120"
  },
  {
    "text": "that are going on there to see if it's actually the same so if you're a math major you say yay fast foror transform",
    "start": "1198120",
    "end": "1204760"
  },
  {
    "text": "all I'll do is I'll take all the frequencies of the noise signal and I'll propagate them uh propagate them out",
    "start": "1204760",
    "end": "1210120"
  },
  {
    "text": "forever um so but your fft library isn't going to fit in this couple of kilobytes we've got on this uh this sensor so I",
    "start": "1210120",
    "end": "1218039"
  },
  {
    "text": "actually came up with an algorithm this a variant of runs analysis which is used in statistics to compare two pseudo",
    "start": "1218039",
    "end": "1223600"
  },
  {
    "text": "random routines to see if those two pseudo random routines um are actually somewhat the same and so the algorithm",
    "start": "1223600",
    "end": "1229520"
  },
  {
    "text": "is actually really simple so what you do is you take your input data and you and you count the number of runs that are",
    "start": "1229520",
    "end": "1234559"
  },
  {
    "text": "increasing in a row so if uh if the data is increasing and the noise is increasing I say five times in a row you",
    "start": "1234559",
    "end": "1240240"
  },
  {
    "text": "put plus plus one into the plus five uh plus five bucket and then you figure out",
    "start": "1240240",
    "end": "1246280"
  },
  {
    "text": "how much it actually moved in that plus five so this moved 100 so you add 100 to the uh to the total and then if it",
    "start": "1246280",
    "end": "1252360"
  },
  {
    "text": "decreases three times in a row then you say plus one into the to the minus three bucket and it moved 25 so we add TW uh",
    "start": "1252360",
    "end": "1259240"
  },
  {
    "text": "25 to the minus 3 so after you sample for a little bit this actually produces this nice normal distribution like you",
    "start": "1259240",
    "end": "1265240"
  },
  {
    "text": "expect in any random sampling so you have a the random distributions of them",
    "start": "1265240",
    "end": "1270600"
  },
  {
    "text": "and then you also have um a set of line segments so if we've added a bunch of stuff to the plus five bucket we know on",
    "start": "1270600",
    "end": "1277000"
  },
  {
    "text": "average how how far the plus five bucket moved so if we count them up and we take those line segment we can actually uh",
    "start": "1277000",
    "end": "1284000"
  },
  {
    "text": "come down and start chaining together um pluses and minus line segments and start repr producing the sensor noise and we",
    "start": "1284000",
    "end": "1289840"
  },
  {
    "text": "can reproduce um um really accurate sensor noise so then we just sample from the uh uh which one's going to do based",
    "start": "1289840",
    "end": "1296120"
  },
  {
    "text": "on the um the normal distribution so we throw a random number we pick from either a positive bucket if we want to",
    "start": "1296120",
    "end": "1302200"
  },
  {
    "text": "go up or a negative bucket if we want to go down and we chain together those lining segments and that actually gives",
    "start": "1302200",
    "end": "1307679"
  },
  {
    "text": "us um um really believable sensor noise without uh pre- knowledge of what's happening on the sensor in a wide",
    "start": "1307679",
    "end": "1313960"
  },
  {
    "text": "variety of algorithms so here we have the sensor data this is more CA of Japan sensor data",
    "start": "1313960",
    "end": "1319279"
  },
  {
    "text": "um where uh the first part of the data down through this the hoosh is actually the real data and as a human you go okay",
    "start": "1319279",
    "end": "1325120"
  },
  {
    "text": "there's real data there it's all nice and spiky and gappy and everything and all the rest of the the rest of the data",
    "start": "1325120",
    "end": "1330840"
  },
  {
    "text": "there is actually generated programmatically off of off of the uh um the noise and uh as you can see it has",
    "start": "1330840",
    "end": "1337640"
  },
  {
    "text": "the same Spike characteristics and GAP characteristics and to a human is actually going to look um look really",
    "start": "1337640",
    "end": "1344159"
  },
  {
    "text": "good so after we've uh implemented this algorithm um we can get it down to about",
    "start": "1344159",
    "end": "1349400"
  },
  {
    "text": "400 bytes um plus or minus depending on how we do the insertion so uh um that'll",
    "start": "1349400",
    "end": "1354559"
  },
  {
    "text": "definitely fit in our pressure sensor so now that we have uh have all",
    "start": "1354559",
    "end": "1362360"
  },
  {
    "text": "this code so we can uh we can smack the valve closed we can see the shock wave come out we can detect the shock wave we",
    "start": "1362360",
    "end": "1369120"
  },
  {
    "text": "can figure out X and Y um and we can generate um uh nearly perfect sensor noise and transfer all the artifacts",
    "start": "1369120",
    "end": "1375919"
  },
  {
    "text": "back there our total payload after we squish all this stuff down is about uh about 2100 bytes so we're about 2k of",
    "start": "1375919",
    "end": "1383279"
  },
  {
    "text": "data to pull off this whole uh um this whole attack that's about 7/10 of a percent of the entire flash so what we",
    "start": "1383279",
    "end": "1390320"
  },
  {
    "text": "have to do now is actually um insert it in insert this code into the firmware",
    "start": "1390320",
    "end": "1395480"
  },
  {
    "text": "efficiently and so uh um this is going to start jumping into a bunch of assembly stuff so if assembly bores you",
    "start": "1395480",
    "end": "1402400"
  },
  {
    "text": "then now is a good time for popcorn um so I need to uh um I need to insert it",
    "start": "1402400",
    "end": "1409840"
  },
  {
    "text": "efficiently but I also need to debug it so in my test setup uh then the valve at",
    "start": "1409840",
    "end": "1415200"
  },
  {
    "text": "the end of this thing costs about 5,000 bucks and I've already destroyed one of them and so whenever you come over there and you say ah I ran a bunch of code on",
    "start": "1415200",
    "end": "1421679"
  },
  {
    "text": "your uh on on your machine and now I just destroyed a $5,000 Val can I please have another one then your boss looks at",
    "start": "1421679",
    "end": "1427520"
  },
  {
    "text": "you goes H I don't know if you can have another one so you want your code to be really really really accurate and uh and",
    "start": "1427520",
    "end": "1434039"
  },
  {
    "text": "and debugged and so what I needed was some way to coat up all my rootkit on my trusty MacBook Pro and debug the snot",
    "start": "1434039",
    "end": "1440320"
  },
  {
    "text": "out of it and make sure it actually really really really worked um except since uh um the sensor I was using spoke",
    "start": "1440320",
    "end": "1446559"
  },
  {
    "text": "dnp3 and I needed to debug dnp3 then I had to take this dnp3 check sum in those",
    "start": "1446559",
    "end": "1452039"
  },
  {
    "text": "libraries and stick them all onto my MacBook so I could debug them except I really want to call the dnp uh version",
    "start": "1452039",
    "end": "1457960"
  },
  {
    "text": "inside the sensor because that's going to save me space but the the version inside the sensor has all these side",
    "start": "1457960",
    "end": "1463159"
  },
  {
    "text": "effects um so not only does it calculate the check sum but it resets the watch doog time it updates the performance",
    "start": "1463159",
    "end": "1469559"
  },
  {
    "text": "counter it does all this other stuff um so what I needed was some way to uh to",
    "start": "1469559",
    "end": "1474960"
  },
  {
    "text": "come over there and first um go find the uh find the algorithm that matched inside the sensor and then say how does",
    "start": "1474960",
    "end": "1482120"
  },
  {
    "text": "this algorithm inside the sensor differ from my algorithm and then make sure that um I merged them together in such a",
    "start": "1482120",
    "end": "1488600"
  },
  {
    "text": "way that the algorithm the sensor behaved my way and not the way originally did at least in my context",
    "start": "1488600",
    "end": "1494240"
  },
  {
    "text": "and not their context so I call this technique parallel conr construction except since Snowden um released a bunch",
    "start": "1494240",
    "end": "1501559"
  },
  {
    "text": "of stuff and said parallel construction means um means making up data for the FBI then I have to call it something",
    "start": "1501559",
    "end": "1507200"
  },
  {
    "text": "else so I'm going to run through an actual example of finding it so let's",
    "start": "1507200",
    "end": "1512279"
  },
  {
    "text": "just say that uh um we've got uh we've got this example code it's it's a simple easy to understand Loop that pops down",
    "start": "1512279",
    "end": "1519840"
  },
  {
    "text": "and so this is the example code that's going to be in the sensor and also on my uh trusty MacBook Pro um so the first",
    "start": "1519840",
    "end": "1527080"
  },
  {
    "text": "thing I have to do is be able to figure figure out which of these functions inside the sensor is actually the same one on my on my MacBook so um as an",
    "start": "1527080",
    "end": "1534840"
  },
  {
    "text": "illustration I've compiled it down for two different architectures here so the first architecture is an MSP 430 and you",
    "start": "1534840",
    "end": "1539919"
  },
  {
    "text": "can see it sets up some arguments runs around the loop a little bit and then Returns the arguments back and so this",
    "start": "1539919",
    "end": "1546480"
  },
  {
    "text": "is the same function that's written in arm assembly so we set up the arguments we' run around the loop and return it back so structurally it's really uh",
    "start": "1546480",
    "end": "1553240"
  },
  {
    "text": "really the same um but this is an apples oranges comparison we can't directly compare MSP 430 assembly instructions",
    "start": "1553240",
    "end": "1560559"
  },
  {
    "text": "and arm assembly instructions so we need to transform them in some way but they have a the same basic structure they",
    "start": "1560559",
    "end": "1567440"
  },
  {
    "text": "have a preamble they allocate some stuff on the stack they set up some uh um the zero some variables until they act get",
    "start": "1567440",
    "end": "1573200"
  },
  {
    "text": "to the actual logic then they clean up and they go home so they have the same the same types of sections um they just",
    "start": "1573200",
    "end": "1579279"
  },
  {
    "text": "have different assembly instructions so the way I solve this is actually um by converting things to microps so um uh an",
    "start": "1579279",
    "end": "1587480"
  },
  {
    "text": "assembly instruction is actually a complex Beast it does more than one thing so if you do like a push eax",
    "start": "1587480",
    "end": "1592679"
  },
  {
    "text": "that's actually a complex instruction it does two things it subtracts four from the stack pointer actually moves whatever is an eax into the uh pointer",
    "start": "1592679",
    "end": "1600440"
  },
  {
    "text": "that uh uh the sack pointer points to so one of the things that we can do then is we can take both of these assemblies and",
    "start": "1600440",
    "end": "1606520"
  },
  {
    "text": "we can describe them as this in in the same micro op language um so uh for instance a uh a subtract a lot of times",
    "start": "1606520",
    "end": "1613320"
  },
  {
    "text": "has a side effect of uh setting the flags registers so we can just do a set of Micro Ops that says subract these two",
    "start": "1613320",
    "end": "1619000"
  },
  {
    "text": "things and then check these uh these values and set the appropriate flag registers and describe this out as a",
    "start": "1619000",
    "end": "1624080"
  },
  {
    "text": "longer set of Micro Ops so let's go back to the two functions that we have here the the bigger one at the top is uh is",
    "start": "1624080",
    "end": "1630919"
  },
  {
    "text": "the arm assembly and the lower one at the bottom is the MSP 43 assembly so we've got uh um we've got",
    "start": "1630919",
    "end": "1638120"
  },
  {
    "text": "these two functions that should be the same because they came from the same uh C code um but now I've converted them uh",
    "start": "1638120",
    "end": "1644200"
  },
  {
    "text": "over into the same microp language and so we can actually directly compare these instruction now um because they",
    "start": "1644200",
    "end": "1649799"
  },
  {
    "text": "have the uh they have actually the same language but they're not the same yet so we need some way to transform them into",
    "start": "1649799",
    "end": "1656360"
  },
  {
    "text": "something uh something that's uh that's mostly the same so I actually call this uh this transform binary normal",
    "start": "1656360",
    "end": "1663279"
  },
  {
    "text": "form so uh what we need is a set of rules that will actually take the arm uh",
    "start": "1663279",
    "end": "1668480"
  },
  {
    "text": "take the uh the arm and the MSP 430 assembly and make it so that uh there's actually only one way to represent the",
    "start": "1668480",
    "end": "1675519"
  },
  {
    "text": "logic so the binary form has a set of rules um so one of the rules is that you",
    "start": "1675519",
    "end": "1681200"
  },
  {
    "text": "can't move directly from memory to memory you have to move from memory to a temporary register and then back out to",
    "start": "1681200",
    "end": "1686799"
  },
  {
    "text": "memory um likewise there's no um jumps that are negative so so all jump if not",
    "start": "1686799",
    "end": "1692600"
  },
  {
    "text": "equals have to be transformed into jump if equals so if you take all of these uh um these these rules and you apply them",
    "start": "1692600",
    "end": "1699640"
  },
  {
    "text": "uh apply them over and over to the logic you normalize the logic and so here's actually the uh the two new assemblies",
    "start": "1699640",
    "end": "1706279"
  },
  {
    "text": "so we've taken the arm and the MSP for 43 we transform them both into uh um uh",
    "start": "1706279",
    "end": "1711919"
  },
  {
    "text": "into the micro op language and then uh applied binary normal form to them and you can see they mostly kind of match um",
    "start": "1711919",
    "end": "1717799"
  },
  {
    "text": "so they have a lot of the same same type of logic into them and the temporary registers inserted except uh um it would",
    "start": "1717799",
    "end": "1724279"
  },
  {
    "text": "be really unfortunate if uh um we had to match up the registers had to match and the compiler had to choose all the same",
    "start": "1724279",
    "end": "1731240"
  },
  {
    "text": "offsets for all the same uh same parts of the structures so uh u in this case um here",
    "start": "1731240",
    "end": "1737720"
  },
  {
    "text": "we have register 4 being used for something in the MSP 430 and register 11 being used for it over in the arm",
    "start": "1737720",
    "end": "1743399"
  },
  {
    "text": "assembly so we need some way to uh to take out all the uh the stack operations and all the register relocation stuff",
    "start": "1743399",
    "end": "1749960"
  },
  {
    "text": "and turn it uh actually into uh something that can be directly compared and so the last transform is something I",
    "start": "1749960",
    "end": "1755679"
  },
  {
    "text": "call an infinite register file so what if we had a CPU that had an infinite number of registers there would be no no",
    "start": "1755679",
    "end": "1761039"
  },
  {
    "text": "need to allocate things on the stack there be no need for a stack um at all because when you wanted some more uh",
    "start": "1761039",
    "end": "1766159"
  },
  {
    "text": "some more space for something you would just allocate a bu more registers out of the infinite register file so in this",
    "start": "1766159",
    "end": "1771640"
  },
  {
    "text": "case uh things like uh over here um on the setup um there's really no need for",
    "start": "1771640",
    "end": "1776679"
  },
  {
    "text": "a base pointer at all anymore but you could just move something to a base pointer um if you instead of allocating on the stack you could just allocate a",
    "start": "1776679",
    "end": "1782679"
  },
  {
    "text": "few more registers and instead of having a local variable that you're putting zero into you just allocate a register and set it to",
    "start": "1782679",
    "end": "1789039"
  },
  {
    "text": "zero so this is a um this is the actual logic um uh in the uh infinite register",
    "start": "1789039",
    "end": "1796799"
  },
  {
    "text": "file uh what the infin register file applied to it uh so you can see everything gets a whole lot simpler when",
    "start": "1796799",
    "end": "1802960"
  },
  {
    "text": "we throw out all the stock operations so since now this uh this meta CPU with an infant stack doesn't need a that an",
    "start": "1802960",
    "end": "1809880"
  },
  {
    "text": "infant number registers doesn't have a stack we can directly compare and the logic actually matches so now if I take",
    "start": "1809880",
    "end": "1815960"
  },
  {
    "text": "uh um if I take my uh uh routine that I've coded up on my MacBook Pro and the",
    "start": "1815960",
    "end": "1822159"
  },
  {
    "text": "routine that I got out of the pressure sensor and I take them I transfer them both into not binder Al form I can sit",
    "start": "1822159",
    "end": "1829000"
  },
  {
    "text": "there and just walk through and say do these two things match because they should match um exactly and so I can go",
    "start": "1829000",
    "end": "1835200"
  },
  {
    "text": "find the say the GMP d&p check summer and both of them match them",
    "start": "1835200",
    "end": "1840919"
  },
  {
    "text": "up so uh um but let's just say that uh the version of the software that I uh I",
    "start": "1841360",
    "end": "1847000"
  },
  {
    "text": "compile down on my MacBook isn't exactly the same as the version of the software that's inside the sensor itself so in",
    "start": "1847000",
    "end": "1853840"
  },
  {
    "text": "this case let's say I've got uh um the same Loop that's uh that's in there and I have my evil Loop that adds four to it",
    "start": "1853840",
    "end": "1860279"
  },
  {
    "text": "every time it goes around um so these two Loops are are very very similar but they're not exact so what we need to do",
    "start": "1860279",
    "end": "1867320"
  },
  {
    "text": "is have some way that we can go look at it and say how similar are they and what are the differences so in this case I've",
    "start": "1867320",
    "end": "1874440"
  },
  {
    "text": "got a say a check summer inside the uh the firmware that has all these side effects basically what I'm asking is",
    "start": "1874440",
    "end": "1880320"
  },
  {
    "text": "when I merge these two together what are the side effects so I can get rid of the side",
    "start": "1880320",
    "end": "1885679"
  },
  {
    "text": "effects so uh if we compile them down we switch them into a normal",
    "start": "1885799",
    "end": "1891880"
  },
  {
    "text": "form then uh um if I compile down and switch them into moral form this is what",
    "start": "1896919",
    "end": "1902399"
  },
  {
    "text": "they look like and uh if we go look at it then there's actually only a couple of assembly instructions different",
    "start": "1902399",
    "end": "1907679"
  },
  {
    "text": "between the the first second one the first one and the second one so one of the ways we can talk about how different",
    "start": "1907679",
    "end": "1914320"
  },
  {
    "text": "they are is to talk about the edit distance between these two functions so we have function a and function B and we",
    "start": "1914320",
    "end": "1919360"
  },
  {
    "text": "can actually make these uh two functions the same function by uh inserting a single if statement into the uh into the",
    "start": "1919360",
    "end": "1926120"
  },
  {
    "text": "assembly so here we have the first one and the second one if we insert this if statement which has another if ARG to so",
    "start": "1926120",
    "end": "1933080"
  },
  {
    "text": "basically up in memory I'm setting a global uh at the top of when my root kit is running I unset it at the bottom of",
    "start": "1933080",
    "end": "1938760"
  },
  {
    "text": "it so it basically runs out and it t uh checks that Global and says am I executing in the rootkit context and if",
    "start": "1938760",
    "end": "1944440"
  },
  {
    "text": "it is executing in the rootkit context then execute my version otherwise execute the uh um the the original",
    "start": "1944440",
    "end": "1952039"
  },
  {
    "text": "version of the uh of the firmware um so",
    "start": "1952039",
    "end": "1957440"
  },
  {
    "text": "uh we can come over there and and uh and look at these two functions but what we really want to know um we really want is",
    "start": "1957440",
    "end": "1964039"
  },
  {
    "text": "uh um some way to automate um finding these functions that are mostly the same",
    "start": "1964039",
    "end": "1969200"
  },
  {
    "text": "but a little bit different and we also want to uh automate how we actually find the blocks that are different between",
    "start": "1969200",
    "end": "1974639"
  },
  {
    "text": "these two functions and then insert a bunch of this statements into to them so that we can uh we can merge them",
    "start": "1974639",
    "end": "1980039"
  },
  {
    "text": "together so luckily there's an algorithm that can help um so probably most computer science Majors have heard of",
    "start": "1980039",
    "end": "1985880"
  },
  {
    "text": "needman wch what needman Wich does is it takes two input strings um and finds the",
    "start": "1985880",
    "end": "1991080"
  },
  {
    "text": "the closest match between those two input strings so in this case we've got uh um inserting code is fun and",
    "start": "1991080",
    "end": "1997080"
  },
  {
    "text": "inserting root kits as fun and if we uh we tell it to go align these two it uh it aligns them uh like like is below so",
    "start": "1997080",
    "end": "2004399"
  },
  {
    "text": "since the first string is shorter it's got to insert a few spaces into it to look at it so these two strings",
    "start": "2004399",
    "end": "2010080"
  },
  {
    "text": "actually have an edit distance of two um so uh if we start comparing the things that match inserting matches until we",
    "start": "2010080",
    "end": "2016840"
  },
  {
    "text": "get to a section that doesn't match and so there's the first uh the first edit and then there's a second edit and",
    "start": "2016840",
    "end": "2022240"
  },
  {
    "text": "everything matches up we can also calculate an efficiency of the two matches so uh in this case we have 18",
    "start": "2022240",
    "end": "2029240"
  },
  {
    "text": "characters they're the same and 10 characters are the different so we can just Spide that up and say this is uh this is so many perent efficient if we",
    "start": "2029240",
    "end": "2036080"
  },
  {
    "text": "actually merge these two things together so if we take our our two functions we've got uh um function a and function",
    "start": "2036080",
    "end": "2042279"
  },
  {
    "text": "B my evil version then uh um what we could do is we can just turn these Micro",
    "start": "2042279",
    "end": "2047480"
  },
  {
    "text": "Ops into a set of letters theum which doesn't declare an alphabet just that there's unique letters so if we just uh",
    "start": "2047480",
    "end": "2053919"
  },
  {
    "text": "create a transform to take every micro op and then turn it into a letter um then we can generate a string of Micro",
    "start": "2053919",
    "end": "2060079"
  },
  {
    "text": "Ops after we convert them to normal form and then we can compare the two of them so since I do this all nice and uh and",
    "start": "2060079",
    "end": "2066960"
  },
  {
    "text": "binary wise then I created some fanciful letters uh for uh for these since binary doesn't show up on slides very well um",
    "start": "2066960",
    "end": "2074960"
  },
  {
    "text": "so in this case we have um in this case we have a set of letters that the Micro Ops for function a and a set of letters",
    "start": "2074960",
    "end": "2081118"
  },
  {
    "text": "that the Micro Ops for function B and so we uh shove the two of them through needle Mon wch and this is the output",
    "start": "2081119",
    "end": "2087398"
  },
  {
    "text": "string that it got uh between the two of them and so if we could start looking at it we just take all the letters that",
    "start": "2087399",
    "end": "2092480"
  },
  {
    "text": "actually match and those are the same between the two functions and we take the sections that don't match and those are the ones that we have to uh en",
    "start": "2092480",
    "end": "2099040"
  },
  {
    "text": "enclose inside of an if an if and else or an if and else block and then the rest of them that match um come over",
    "start": "2099040",
    "end": "2105240"
  },
  {
    "text": "there so um if we take a if we take a look at that where these two things are",
    "start": "2105240",
    "end": "2110880"
  },
  {
    "text": "it actually even tells us where to insert the if um so as soon as we find a section where the letters don't match",
    "start": "2110880",
    "end": "2116640"
  },
  {
    "text": "then we say those are enclosed within the if and the other the original one's in the if the other ones inside the El",
    "start": "2116640",
    "end": "2123720"
  },
  {
    "text": "block so uh um",
    "start": "2123720",
    "end": "2128839"
  },
  {
    "text": "uh so if we uh if we take these and we have if and if and else's then we can actually start calculating whether or",
    "start": "2128839",
    "end": "2134119"
  },
  {
    "text": "not it's sufficient to insert this into the AR the architecture so if we actually know that inserting an if",
    "start": "2134119",
    "end": "2139440"
  },
  {
    "text": "statement uh costs us 80 uh 8 bytes or 16 bytes then we can come over there and say Here's the here's the whole function",
    "start": "2139440",
    "end": "2146079"
  },
  {
    "text": "this is going to take two ifs if we merge the if we merge them together um do we have more than eight bytes of",
    "start": "2146079",
    "end": "2151839"
  },
  {
    "text": "savings between merging these two functions together and we can start doing those so if we can match functions",
    "start": "2151839",
    "end": "2157839"
  },
  {
    "text": "then we should be able to match entire sub assemblies so if somebody compiled op SSL down for one architecture and",
    "start": "2157839",
    "end": "2163920"
  },
  {
    "text": "open SSL down for another architecture um then we should be able to match the entire open SSL uh subsystem between the",
    "start": "2163920",
    "end": "2170359"
  },
  {
    "text": "two and we can do that simply by running around and taking all the the the function graph we can take all the leaf",
    "start": "2170359",
    "end": "2176720"
  },
  {
    "text": "functions uh that we have in the two the two graphs and find the best match for every leaf function and then we just",
    "start": "2176720",
    "end": "2182319"
  },
  {
    "text": "recurse up and find the next best match for all the parents functions and all of those parent functions until we no longer or match uh below our threshold",
    "start": "2182319",
    "end": "2189640"
  },
  {
    "text": "and so in this case um we've got a we've got a subsystem of of functions and we can actually describe the the distance",
    "start": "2189640",
    "end": "2197359"
  },
  {
    "text": "between those two sub uh those two subsystems um as as an edit distance um",
    "start": "2197359",
    "end": "2203200"
  },
  {
    "text": "one of the things that uh um uh one of the things that uh this allows uh allows",
    "start": "2203200",
    "end": "2209119"
  },
  {
    "text": "you to do then is as you're inserting the root kit you don't care if the vendor is actually changing the version",
    "start": "2209119",
    "end": "2214640"
  },
  {
    "text": "of uh of the assembly in his Target root kit so if he's running the micro I IP stack inside of his uh um inside of his",
    "start": "2214640",
    "end": "2222480"
  },
  {
    "text": "firmware and he updates to the new version of the micro I stack and I've got an old version inside of my my",
    "start": "2222480",
    "end": "2228119"
  },
  {
    "text": "rootkit code then I can just come over there and say like oh just give me the best uh your best effort match as I",
    "start": "2228119",
    "end": "2233920"
  },
  {
    "text": "insert you into the new uh into the new firmware and so when I insert it into the new firmware then it'll just be a",
    "start": "2233920",
    "end": "2239880"
  },
  {
    "text": "less efficient insert so now we can actually uh go about building this uh",
    "start": "2239880",
    "end": "2245520"
  },
  {
    "text": "building this root kit so we we run around and we find all the the best match nodes uh for for everything that",
    "start": "2245520",
    "end": "2252640"
  },
  {
    "text": "matches and anything that doesn't match the the the merging the functions together would actually make them bigger",
    "start": "2252640",
    "end": "2257680"
  },
  {
    "text": "than the original function then we just add all those to the end um and then but we're still in the micro op language so",
    "start": "2257680",
    "end": "2263880"
  },
  {
    "text": "then we basically have to do all the things that a compiler normally does we have to reverse the uh we have to take all the uh um the registers and the",
    "start": "2263880",
    "end": "2270400"
  },
  {
    "text": "infant register f file run them back through a register relocation language and assign them to registers then we",
    "start": "2270400",
    "end": "2276079"
  },
  {
    "text": "have to reverse it all moving up through all the optimization stages and eventually generate a um generate",
    "start": "2276079",
    "end": "2281800"
  },
  {
    "text": "assembly in our Target assembly structure um and so this is basically chapter three of most compiler handbooks",
    "start": "2281800",
    "end": "2288359"
  },
  {
    "text": "uh so uh we're basically running a compiler backwards at that point so we get our uh um we get our",
    "start": "2288359",
    "end": "2296839"
  },
  {
    "text": "root kit uh all set up and so the final overhead of uh of all this stuff um so",
    "start": "2296839",
    "end": "2302359"
  },
  {
    "text": "it took about uh um in my test case it took about 2100 bytes to describe",
    "start": "2302359",
    "end": "2308040"
  },
  {
    "text": "uh describe how to detect these waveforms and detect the the uh the reflection how to uh um spoof all the",
    "start": "2308040",
    "end": "2315480"
  },
  {
    "text": "sensor noise and all that stuff and uh so the um uh oops I have the I have a",
    "start": "2315480",
    "end": "2320720"
  },
  {
    "text": "wrong number so the the original firmware was about uh about 60k the updated firware is about 62k so if we",
    "start": "2320720",
    "end": "2327000"
  },
  {
    "text": "look at that um as in terms of efficiency then uh um we took our uh",
    "start": "2327000",
    "end": "2332280"
  },
  {
    "text": "root kit and we We Shrunk it down by merging all these functions um by about uh uh by about 35% so after all the the",
    "start": "2332280",
    "end": "2340599"
  },
  {
    "text": "work of matching all the functions and stuff we made it about 35% um",
    "start": "2340599",
    "end": "2346480"
  },
  {
    "text": "smaller so um the demo gods have not been uh kind to me on uh uh on this",
    "start": "2346599",
    "end": "2352359"
  },
  {
    "text": "particular one so uh to actually demonstrate this out um I thought haha",
    "start": "2352359",
    "end": "2357560"
  },
  {
    "text": "so what I'll do is I'll run out and I'll buy some uh um I'll buy some mod buus uh",
    "start": "2357560",
    "end": "2364280"
  },
  {
    "text": "um serial to ethernet converters and so this these will these will all be great so I went out and I bought uh I bought",
    "start": "2364280",
    "end": "2370160"
  },
  {
    "text": "three of these guys and uh started poking at them and so this one actually has a 186 in it and the other two have",
    "start": "2370160",
    "end": "2376760"
  },
  {
    "text": "uh have some itty bitty little arms in them and so all three of them uh uh all three of them actually have um",
    "start": "2376760",
    "end": "2382400"
  },
  {
    "text": "unauthenticated firmware upload which I wasn't expecting I was thinking I was going to have to write some OD days to",
    "start": "2382400",
    "end": "2387720"
  },
  {
    "text": "actually get the firmware to install on them but all three of them you basically just connect to a port and say please take my firmware and it takes the",
    "start": "2387720",
    "end": "2393760"
  },
  {
    "text": "firmware so the firmware updating part was was actually really easy and then I ordered a uh um I ordered a high-speed",
    "start": "2393760",
    "end": "2401119"
  },
  {
    "text": "scale um and the highspeed scale didn't work at all so there's like a half-second delay between when you",
    "start": "2401119",
    "end": "2406319"
  },
  {
    "text": "touched on the scale and you actually saw any any change in the data so it was totally crap and so since I didn't have",
    "start": "2406319",
    "end": "2412319"
  },
  {
    "text": "time to uh actually order another highspeed scale and get it here in time then uh I did the same thing that all",
    "start": "2412319",
    "end": "2418720"
  },
  {
    "text": "Geeks do and I went to Best Buy and I ordered I bought a Choy stick and I put a spring on top of it and I made a scale",
    "start": "2418720",
    "end": "2425440"
  },
  {
    "text": "so uh um so I so I must apologize for my uh uh for my scale mechanics going on",
    "start": "2425440",
    "end": "2434440"
  },
  {
    "text": "there so in this case um I'm just going to pop over here and",
    "start": "2437240",
    "end": "2445040"
  },
  {
    "text": "uh um so you can see some of these these",
    "start": "2445560",
    "end": "2451920"
  },
  {
    "text": "algorithms in uh in in action so um so on the top here this is the this is the",
    "start": "2451920",
    "end": "2458079"
  },
  {
    "text": "signal off of my um off of my sensor so uh you know as I put pressure on the",
    "start": "2458079",
    "end": "2463880"
  },
  {
    "text": "scale take the pressure off then uh the scale looks uh looks all nice and good so this is actually the uh the the line",
    "start": "2463880",
    "end": "2470839"
  },
  {
    "text": "matching algorithm uh in effect as it's going on so uh in this case I'm not exporting that from the uh U from the",
    "start": "2470839",
    "end": "2477119"
  },
  {
    "text": "microcontroller I'm just uh um I'm just recreating the logic that's inside the micro mic controller actually in it so",
    "start": "2477119",
    "end": "2483680"
  },
  {
    "text": "so if we go look at it then this is the data part so whenever we're looking at the data to see if uh uh stuff is going",
    "start": "2483680",
    "end": "2489880"
  },
  {
    "text": "up and down um in the appropriate fashion then uh oh and I uh as I trigger",
    "start": "2489880",
    "end": "2496440"
  },
  {
    "text": "my uh trigger my detection as well um going up and down and so then this is actually the noise generation so this is",
    "start": "2496440",
    "end": "2503160"
  },
  {
    "text": "the uh um this is the native noise uh uh up on top of it and then down here then",
    "start": "2503160",
    "end": "2509440"
  },
  {
    "text": "this is a computer generated noise just off of the top of the uh of the sine wave so we've we've taken uh via Run's",
    "start": "2509440",
    "end": "2516040"
  },
  {
    "text": "analysis and we've broken all this down into its components and then we're just randomly sampling out of the pools to",
    "start": "2516040",
    "end": "2521680"
  },
  {
    "text": "generate this sensor noise so uh um so the perimeters that we have are um are",
    "start": "2521680",
    "end": "2527400"
  },
  {
    "text": "just the uh the straight line segments that have been miniaturized and inserted and the uh um and the sensor noise and",
    "start": "2527400",
    "end": "2534160"
  },
  {
    "text": "so from there we can uh we can start extracting all of the uh the artifacts that we need and then generating any",
    "start": "2534160",
    "end": "2539640"
  },
  {
    "text": "spoof that we want whatever we want to show the operator so I couldn't actually bring a",
    "start": "2539640",
    "end": "2546720"
  },
  {
    "text": "bunch of industrial control system stuff um over here to uh to do demos with so if you're going to have a water hammer",
    "start": "2546720",
    "end": "2553160"
  },
  {
    "text": "then it's going to have to be a water hammer uh uh with a bottle of water so",
    "start": "2553160",
    "end": "2558720"
  },
  {
    "text": "in this case uh we've got the uh the triangle matching and we're going to turn the uh the line segments into triangle strips and then uh try and",
    "start": "2558720",
    "end": "2565440"
  },
  {
    "text": "extract it but my spring here isn't actually very accurate so um so uh um",
    "start": "2565440",
    "end": "2570760"
  },
  {
    "text": "when is uh detecting this transient I'm getting lots of false positives and and false negatives but in this case we've",
    "start": "2570760",
    "end": "2576200"
  },
  {
    "text": "got uh we've got down in just a couple of kilobytes of memory and when I uh um drop a uh drop a water onto the to the",
    "start": "2576200",
    "end": "2583839"
  },
  {
    "text": "plate to simulate my water hammer here it's just triggering it to start a spoofing routine so at this point it's",
    "start": "2583839",
    "end": "2588960"
  },
  {
    "text": "detected the water hammer um uh it's uh turned the uh the input signal that's",
    "start": "2588960",
    "end": "2594000"
  },
  {
    "text": "running through this uh little mod busted serial converter over there it's detected the input signal um uh turned",
    "start": "2594000",
    "end": "2601480"
  },
  {
    "text": "it into a set of line segments created a tight triangle strip and then taken the ratio of those triangles and the",
    "start": "2601480",
    "end": "2606760"
  },
  {
    "text": "triangle strip uh to uh to figure out that I've actually crashed something on top of it so if we crash it again then",
    "start": "2606760",
    "end": "2612559"
  },
  {
    "text": "it should come back although this has a lot of uh um has a lot of uh um false",
    "start": "2612559",
    "end": "2618720"
  },
  {
    "text": "positives and so now we're back and uh and and everything's uh and the spoof is released and all everything is going as",
    "start": "2618720",
    "end": "2625280"
  },
  {
    "text": "as normal so in this case we've got uh um we've got it uh chunked back down but",
    "start": "2625280",
    "end": "2631520"
  },
  {
    "text": "where I think that uh that we can go for these",
    "start": "2631520",
    "end": "2637440"
  },
  {
    "text": "is um um I think we're about a year away from actually getting Metasploit for uh medit for firware and Industrial Control",
    "start": "2644440",
    "end": "2650839"
  },
  {
    "text": "Systems so since uh I was able do the insertion in such a in such a generic way then a lot of these devices reuse",
    "start": "2650839",
    "end": "2658240"
  },
  {
    "text": "code like tons of devices by the Square D dnp stack and that's what they use to",
    "start": "2658240",
    "end": "2663520"
  },
  {
    "text": "speak dnp3 so if they're all reusing the same code then we should be able to make generic insertion routines that come",
    "start": "2663520",
    "end": "2669640"
  },
  {
    "text": "over there and take the firmware out break break it break the firmware down into a normal form and actually do some",
    "start": "2669640",
    "end": "2675480"
  },
  {
    "text": "detection so if we take all the leaf nodes in our sample um on our sample dnp stack and we match them to all these",
    "start": "2675480",
    "end": "2681440"
  },
  {
    "text": "Leaf nodes inside the firmware uh firmware of the device we can sit there and match and and get a percentage",
    "start": "2681440",
    "end": "2687599"
  },
  {
    "text": "chance that this is actually um this particular vendor's dnp stack or this particular vendor's mod bus uh",
    "start": "2687599",
    "end": "2693599"
  },
  {
    "text": "implementation and so if this is uh in multiple products s across multiple vendors we can just break it down and",
    "start": "2693599",
    "end": "2699680"
  },
  {
    "text": "say um that matches 92% I'm pretty sure that that's that particular vendor's uh vendor stack then if we write various",
    "start": "2699680",
    "end": "2707200"
  },
  {
    "text": "root kits and and uh we compile them down or various components for for detection and attack and and things like",
    "start": "2707200",
    "end": "2713640"
  },
  {
    "text": "that then we can put those in a set set of modules as well and so uh um in that case we can take a take a firmware in um",
    "start": "2713640",
    "end": "2721359"
  },
  {
    "text": "break it down and say oh this has this vender X this vender is y and this vender Z in a way that's a lot more uh a",
    "start": "2721359",
    "end": "2728200"
  },
  {
    "text": "lot more elegant than just like flirt signatures um come up on a console and",
    "start": "2728200",
    "end": "2734079"
  },
  {
    "text": "say um okay since this has the uh um this this one's using the micro I IP",
    "start": "2734079",
    "end": "2739800"
  },
  {
    "text": "stack then here's my inserter my injector for the micro I IP stack that gives you hooks into the sends and",
    "start": "2739800",
    "end": "2745880"
  },
  {
    "text": "receives and all the other fun stuff here's my payloads crunch them down um run them through there and efficiently",
    "start": "2745880",
    "end": "2751520"
  },
  {
    "text": "merge them into the uh into the target uh um Target firmware so so uh I think",
    "start": "2751520",
    "end": "2757839"
  },
  {
    "text": "we're probably about uh about a year and a half uh before we do that and so once we actually get there we can actually",
    "start": "2757839",
    "end": "2763400"
  },
  {
    "text": "then start testing um industrial control processes at penetration testing speeds where we can go over there we can hit a",
    "start": "2763400",
    "end": "2769640"
  },
  {
    "text": "device pull the device um come up with the attack cat up something really really quick and shove it back in there",
    "start": "2769640",
    "end": "2776400"
  },
  {
    "text": "and have our entire time between looking at it um breaking it down and seeing if",
    "start": "2776400",
    "end": "2781720"
  },
  {
    "text": "uh uh seeing if the this is going to work too can actually test this I think we can get this down into to just you",
    "start": "2781720",
    "end": "2787640"
  },
  {
    "text": "know 10 or 15 minutes from uh from actual frommer extraction to testing the",
    "start": "2787640",
    "end": "2792839"
  },
  {
    "text": "scenario that we're uh that we're up to testing so uh I think we'll get there um",
    "start": "2792839",
    "end": "2797880"
  },
  {
    "text": "so we're not quite there yet there's still a lot of manual interaction with uh um with breaking down the firmware",
    "start": "2797880",
    "end": "2803240"
  },
  {
    "text": "and that type of stuff um but it's getting a lot more automated so with that um I'm coming to",
    "start": "2803240",
    "end": "2810200"
  },
  {
    "text": "the end so do we have any uh any questions I think I was uh I I went through that one a little bit too fast",
    "start": "2810200",
    "end": "2815839"
  },
  {
    "text": "actually but so i a",
    "start": "2815839",
    "end": "2823880"
  }
]