[
  {
    "text": "let's start presentation I'm so Joy from",
    "start": "120",
    "end": "3240"
  },
  {
    "text": "South Korea and I will today I will",
    "start": "3240",
    "end": "5839"
  },
  {
    "text": "present about apid of ascator which",
    "start": "5839",
    "end": "9679"
  },
  {
    "text": "identifies runtime ofos API cors Fe",
    "start": "9679",
    "end": "13360"
  },
  {
    "text": "memory ESS",
    "start": "13360",
    "end": "16080"
  },
  {
    "text": "analysis um first I will introduce what",
    "start": "16600",
    "end": "19800"
  },
  {
    "text": "is runtime API officiation and why it",
    "start": "19800",
    "end": "23320"
  },
  {
    "text": "matters and second I will explain my",
    "start": "23320",
    "end": "28599"
  },
  {
    "text": "algorithm to solve the problem and",
    "start": "28599",
    "end": "32719"
  },
  {
    "text": "explain the details of my implementation",
    "start": "32719",
    "end": "35320"
  },
  {
    "text": "and how it works and show My",
    "start": "35320",
    "end": "37250"
  },
  {
    "text": "[Music]",
    "start": "37250",
    "end": "39480"
  },
  {
    "text": "Demo uh yeah I am targeting uh",
    "start": "39480",
    "end": "44559"
  },
  {
    "text": "especially the",
    "start": "44559",
    "end": "46079"
  },
  {
    "text": "peka because as far as I know it is the",
    "start": "46079",
    "end": "50520"
  },
  {
    "text": "only peckers that use runtime",
    "start": "50520",
    "end": "52879"
  },
  {
    "text": "officiation",
    "start": "52879",
    "end": "54440"
  },
  {
    "text": "technique and runtime API officiation is",
    "start": "54440",
    "end": "59039"
  },
  {
    "text": "done on yeah Dynamic yeah ofation",
    "start": "59039",
    "end": "64198"
  },
  {
    "text": "techniques can be classified into static",
    "start": "64199",
    "end": "67000"
  },
  {
    "text": "and dynamic static",
    "start": "67000",
    "end": "69799"
  },
  {
    "text": "aasc once a code is aosc yeah it never",
    "start": "69799",
    "end": "73960"
  },
  {
    "text": "changes because it's static and dynamic",
    "start": "73960",
    "end": "79079"
  },
  {
    "text": "ofation invaded oscor that is invaded",
    "start": "79079",
    "end": "83439"
  },
  {
    "text": "during um first yeah static ofation and",
    "start": "83439",
    "end": "87159"
  },
  {
    "text": "it changes the code during each",
    "start": "87159",
    "end": "92560"
  },
  {
    "text": "run for example yeah when we obate our",
    "start": "92960",
    "end": "97280"
  },
  {
    "text": "example program and we",
    "start": "97280",
    "end": "101520"
  },
  {
    "text": "and this this example is about B",
    "start": "101520",
    "end": "107200"
  },
  {
    "text": "protect VM protect does not use runtime",
    "start": "107200",
    "end": "110920"
  },
  {
    "text": "ofation technique so we can analyze it",
    "start": "110920",
    "end": "115320"
  },
  {
    "text": "uh more easily than Dom although it is",
    "start": "115320",
    "end": "118479"
  },
  {
    "text": "using Code virtual ization to protect",
    "start": "118479",
    "end": "122560"
  },
  {
    "text": "API call but uh when we set break point",
    "start": "122560",
    "end": "126799"
  },
  {
    "text": "on on API function then at last we can",
    "start": "126799",
    "end": "131480"
  },
  {
    "text": "read the API function itself so we can",
    "start": "131480",
    "end": "134239"
  },
  {
    "text": "analyze it more",
    "start": "134239",
    "end": "136040"
  },
  {
    "text": "easily and it the code never changes",
    "start": "136040",
    "end": "140280"
  },
  {
    "text": "during run",
    "start": "140280",
    "end": "142720"
  },
  {
    "text": "time but",
    "start": "142720",
    "end": "144959"
  },
  {
    "text": "the changes is code each run so as you",
    "start": "144959",
    "end": "149640"
  },
  {
    "text": "can see in the picture when the first",
    "start": "149640",
    "end": "152519"
  },
  {
    "text": "time message box API is off",
    "start": "152519",
    "end": "156519"
  },
  {
    "text": "fisticated yeah",
    "start": "156519",
    "end": "158599"
  },
  {
    "text": "it has many many splited Bas split basic",
    "start": "158599",
    "end": "162840"
  },
  {
    "text": "blocks",
    "start": "162840",
    "end": "164519"
  },
  {
    "text": "and when we run second time yeah it",
    "start": "164519",
    "end": "167720"
  },
  {
    "text": "changes shape because Doma contains yeah",
    "start": "167720",
    "end": "171280"
  },
  {
    "text": "Doma embeds some runtime of skater in",
    "start": "171280",
    "end": "175000"
  },
  {
    "text": "executable",
    "start": "175000",
    "end": "177680"
  },
  {
    "text": "file for the tomorrow it is more hard to",
    "start": "178400",
    "end": "183239"
  },
  {
    "text": "analyze the metap executable",
    "start": "183239",
    "end": "187599"
  },
  {
    "text": "because the call",
    "start": "187599",
    "end": "190040"
  },
  {
    "text": "instruction is changed and uh the",
    "start": "190040",
    "end": "194120"
  },
  {
    "text": "address call Target is",
    "start": "194120",
    "end": "198120"
  },
  {
    "text": "changing as you can",
    "start": "198120",
    "end": "200480"
  },
  {
    "text": "see um the original program",
    "start": "200480",
    "end": "205120"
  },
  {
    "text": "was calling message box API function and",
    "start": "205120",
    "end": "210439"
  },
  {
    "text": "after the",
    "start": "210439",
    "end": "212640"
  },
  {
    "text": "unpacking the Packer changes the call",
    "start": "212640",
    "end": "216319"
  },
  {
    "text": "instruction and the call Target is",
    "start": "216319",
    "end": "219159"
  },
  {
    "text": "change it to",
    "start": "219159",
    "end": "222959"
  },
  {
    "text": "00400 and it changes the core Target",
    "start": "223920",
    "end": "226480"
  },
  {
    "text": "address changes each run",
    "start": "226480",
    "end": "231079"
  },
  {
    "text": "and when we set break point on message",
    "start": "231079",
    "end": "234799"
  },
  {
    "text": "box yeah we",
    "start": "234799",
    "end": "236519"
  },
  {
    "text": "cannot um check the message box because",
    "start": "236519",
    "end": "239239"
  },
  {
    "text": "yeah the message box function itself is",
    "start": "239239",
    "end": "241079"
  },
  {
    "text": "not executed",
    "start": "241079",
    "end": "243720"
  },
  {
    "text": "so we need to identify Yeah the code",
    "start": "243720",
    "end": "249120"
  },
  {
    "text": "which is running is belong to which",
    "start": "249120",
    "end": "253799"
  },
  {
    "text": "function originally which",
    "start": "253799",
    "end": "256879"
  },
  {
    "text": "function so uh when I first notice uh",
    "start": "257280",
    "end": "263520"
  },
  {
    "text": "the doida is using runtime observation",
    "start": "263520",
    "end": "267240"
  },
  {
    "text": "technique first I set",
    "start": "267240",
    "end": "270520"
  },
  {
    "text": "break point breakpoint on API function",
    "start": "270520",
    "end": "274199"
  },
  {
    "text": "that is contained in thetic AP API",
    "start": "274199",
    "end": "277360"
  },
  {
    "text": "function for example um if I set break",
    "start": "277360",
    "end": "281120"
  },
  {
    "text": "point",
    "start": "281120",
    "end": "282240"
  },
  {
    "text": "on load Library EXA instead of load",
    "start": "282240",
    "end": "286800"
  },
  {
    "text": "Library a which is I want to",
    "start": "286800",
    "end": "291080"
  },
  {
    "text": "analyze because uh load Library a calls",
    "start": "291080",
    "end": "296120"
  },
  {
    "text": "load Library EXA so we when you set",
    "start": "296120",
    "end": "299840"
  },
  {
    "text": "point on load Library EXA then we know",
    "start": "299840",
    "end": "304840"
  },
  {
    "text": "that some officiated code is running",
    "start": "304840",
    "end": "309880"
  },
  {
    "text": "yeah load Library EXA and for right file",
    "start": "309880",
    "end": "314680"
  },
  {
    "text": "yeah if we want to check right file we",
    "start": "314680",
    "end": "317680"
  },
  {
    "text": "know that uh right file calls nd. CW WR",
    "start": "317680",
    "end": "323720"
  },
  {
    "text": "file so we set break point on D right",
    "start": "323720",
    "end": "326639"
  },
  {
    "text": "file and we know that oh right file is",
    "start": "326639",
    "end": "330800"
  },
  {
    "text": "running yeah this works but it is not",
    "start": "330800",
    "end": "334880"
  },
  {
    "text": "always precise because other functions",
    "start": "334880",
    "end": "338520"
  },
  {
    "text": "also call for example dig right file so",
    "start": "338520",
    "end": "342639"
  },
  {
    "text": "we need to we need more precise analysis",
    "start": "342639",
    "end": "346560"
  },
  {
    "text": "method",
    "start": "346560",
    "end": "348280"
  },
  {
    "text": "so second I tried to optimize a fated",
    "start": "348280",
    "end": "353039"
  },
  {
    "text": "function code and I compared each",
    "start": "353039",
    "end": "357960"
  },
  {
    "text": "optimized function to with original",
    "start": "357960",
    "end": "362520"
  },
  {
    "text": "functions I found that it is um precise",
    "start": "362520",
    "end": "367360"
  },
  {
    "text": "yeah more than",
    "start": "367360",
    "end": "369360"
  },
  {
    "text": "90% matches very well but some functions",
    "start": "369360",
    "end": "373360"
  },
  {
    "text": "are very short and hard to optimize",
    "start": "373360",
    "end": "376479"
  },
  {
    "text": "so I need more easy easy method to",
    "start": "376479",
    "end": "382039"
  },
  {
    "text": "decate API cors so finally I try to",
    "start": "382039",
    "end": "386280"
  },
  {
    "text": "monitor API autic process",
    "start": "386280",
    "end": "390759"
  },
  {
    "text": "I monitored API AOS station",
    "start": "390759",
    "end": "393960"
  },
  {
    "text": "process uh using uh memory",
    "start": "393960",
    "end": "396840"
  },
  {
    "text": "Tracer I built it using Intel pin so I",
    "start": "396840",
    "end": "401599"
  },
  {
    "text": "recorded every read and",
    "start": "401599",
    "end": "405000"
  },
  {
    "text": "write especially um read memory read on",
    "start": "405000",
    "end": "410639"
  },
  {
    "text": "API functions as you can see in the",
    "start": "410639",
    "end": "414879"
  },
  {
    "text": "picture the First Column means the",
    "start": "414879",
    "end": "419560"
  },
  {
    "text": "instruction address and the second",
    "start": "419560",
    "end": "422280"
  },
  {
    "text": "column um indicate read or write and",
    "start": "422280",
    "end": "425400"
  },
  {
    "text": "read or write on some address and the",
    "start": "425400",
    "end": "428639"
  },
  {
    "text": "next column is the",
    "start": "428639",
    "end": "432120"
  },
  {
    "text": "size and the next column is module and",
    "start": "432120",
    "end": "437199"
  },
  {
    "text": "API function and the last one is the",
    "start": "437199",
    "end": "441080"
  },
  {
    "text": "instruction",
    "start": "441080",
    "end": "443360"
  },
  {
    "text": "executed as you can see",
    "start": "443360",
    "end": "446560"
  },
  {
    "text": "there address yeah they message box a",
    "start": "446560",
    "end": "450680"
  },
  {
    "text": "address starts from 757 d27 C and the",
    "start": "450680",
    "end": "460000"
  },
  {
    "text": "read address is increasing one by",
    "start": "460000",
    "end": "465560"
  },
  {
    "text": "one yeah",
    "start": "465560",
    "end": "467680"
  },
  {
    "text": "so 75 CD 27",
    "start": "467680",
    "end": "472560"
  },
  {
    "text": "CF one B is red and 757",
    "start": "472560",
    "end": "477319"
  },
  {
    "text": "d27 d0 one here it is read one by",
    "start": "477319",
    "end": "483120"
  },
  {
    "text": "one and we look at the memory Trace",
    "start": "483120",
    "end": "488520"
  },
  {
    "text": "again and again yeah then we can",
    "start": "488520",
    "end": "491639"
  },
  {
    "text": "found the API autic",
    "start": "491639",
    "end": "495520"
  },
  {
    "text": "process for example message box a code",
    "start": "495520",
    "end": "499440"
  },
  {
    "text": "is copied to a temporary",
    "start": "499440",
    "end": "503520"
  },
  {
    "text": "B yeah uh the",
    "start": "503520",
    "end": "506759"
  },
  {
    "text": "embedded alator expands yeah aate the",
    "start": "506759",
    "end": "510960"
  },
  {
    "text": "instruction so it become very large",
    "start": "510960",
    "end": "514760"
  },
  {
    "text": "and the from the temporary",
    "start": "514760",
    "end": "517680"
  },
  {
    "text": "buper it is split to many many basic",
    "start": "517680",
    "end": "521680"
  },
  {
    "text": "plugs",
    "start": "521680",
    "end": "523320"
  },
  {
    "text": "and the small basic block is mixed with",
    "start": "523320",
    "end": "527800"
  },
  {
    "text": "other functions so it is very hard to",
    "start": "527800",
    "end": "530760"
  },
  {
    "text": "identify from the small basic block what",
    "start": "530760",
    "end": "533519"
  },
  {
    "text": "this code is belong",
    "start": "533519",
    "end": "535040"
  },
  {
    "text": "to and finally after the API tication",
    "start": "535040",
    "end": "543000"
  },
  {
    "text": "and the the unpacker the pcker",
    "start": "543000",
    "end": "548040"
  },
  {
    "text": "finally changes the call instruction the",
    "start": "548040",
    "end": "551760"
  },
  {
    "text": "call Target is changed to the first",
    "start": "551760",
    "end": "553880"
  },
  {
    "text": "address of the AOS function and",
    "start": "553880",
    "end": "559160"
  },
  {
    "text": "sometimes the function is called by uh",
    "start": "559160",
    "end": "562320"
  },
  {
    "text": "register or indirect call so we need to",
    "start": "562320",
    "end": "565480"
  },
  {
    "text": "change they change the input address",
    "start": "565480",
    "end": "569160"
  },
  {
    "text": "table to AOS",
    "start": "569160",
    "end": "572279"
  },
  {
    "text": "address we need to",
    "start": "572279",
    "end": "575360"
  },
  {
    "text": "identify the address in this picture 40",
    "start": "575360",
    "end": "579360"
  },
  {
    "text": "0 1,00 th000 is th belong to what what",
    "start": "579360",
    "end": "584640"
  },
  {
    "text": "originally what",
    "start": "584640",
    "end": "586880"
  },
  {
    "text": "function",
    "start": "586880",
    "end": "589000"
  },
  {
    "text": "so to identify functions",
    "start": "589000",
    "end": "592640"
  },
  {
    "text": "[Music]",
    "start": "592640",
    "end": "594360"
  },
  {
    "text": "um I observed each function",
    "start": "594360",
    "end": "597320"
  },
  {
    "text": "is offc in",
    "start": "597320",
    "end": "600519"
  },
  {
    "text": "sequence and for each API function every",
    "start": "600519",
    "end": "603720"
  },
  {
    "text": "instruction is r and OBC instructions",
    "start": "603720",
    "end": "607440"
  },
  {
    "text": "are written we",
    "start": "607440",
    "end": "609880"
  },
  {
    "text": "can um slice divide by time so in the",
    "start": "609880",
    "end": "615399"
  },
  {
    "text": "picture when",
    "start": "615399",
    "end": "618120"
  },
  {
    "text": "the apator",
    "start": "618120",
    "end": "620480"
  },
  {
    "text": "read WS2 yeah wi so. bind every bites of",
    "start": "620480",
    "end": "626600"
  },
  {
    "text": "V bind and write it right WR offc",
    "start": "626600",
    "end": "631240"
  },
  {
    "text": "code yeah it is divided and next we a",
    "start": "631240",
    "end": "637079"
  },
  {
    "text": "connect API function is read and it is",
    "start": "637079",
    "end": "640440"
  },
  {
    "text": "written to other memory addresses",
    "start": "640440",
    "end": "645560"
  },
  {
    "text": "so I related memory reads on API",
    "start": "646800",
    "end": "651639"
  },
  {
    "text": "function code and corresponding memory",
    "start": "651639",
    "end": "654200"
  },
  {
    "text": "right of on ofc code that is",
    "start": "654200",
    "end": "659920"
  },
  {
    "text": "um building a map from addresses of offc",
    "start": "659920",
    "end": "664519"
  },
  {
    "text": "API function to original API function",
    "start": "664519",
    "end": "669440"
  },
  {
    "text": "addresses then we recover original API",
    "start": "669440",
    "end": "673200"
  },
  {
    "text": "function by Theos called Target",
    "start": "673200",
    "end": "678399"
  },
  {
    "text": "address",
    "start": "681800",
    "end": "683360"
  },
  {
    "text": "um if we want precise analysis uh maybe",
    "start": "683360",
    "end": "687200"
  },
  {
    "text": "it is very complex and hard because code",
    "start": "687200",
    "end": "690399"
  },
  {
    "text": "is",
    "start": "690399",
    "end": "691079"
  },
  {
    "text": "upated yeah first I wanted to build some",
    "start": "691079",
    "end": "695880"
  },
  {
    "text": "value dependent analysis on every memory",
    "start": "695880",
    "end": "700440"
  },
  {
    "text": "read but it was so complex so I use an",
    "start": "700440",
    "end": "704079"
  },
  {
    "text": "approximate",
    "start": "704079",
    "end": "706760"
  },
  {
    "text": "algorithm as you can see in the diagram",
    "start": "707240",
    "end": "709680"
  },
  {
    "text": "upated function instruction",
    "start": "709680",
    "end": "712480"
  },
  {
    "text": "addresses contain",
    "start": "712480",
    "end": "714839"
  },
  {
    "text": "one API call Target address",
    "start": "714839",
    "end": "718240"
  },
  {
    "text": "and aasc function instruction addresses",
    "start": "718240",
    "end": "721440"
  },
  {
    "text": "are contained in right addresses before",
    "start": "721440",
    "end": "725519"
  },
  {
    "text": "the next API function",
    "start": "725519",
    "end": "727959"
  },
  {
    "text": "reads",
    "start": "727959",
    "end": "730959"
  },
  {
    "text": "so we so we record every memory right",
    "start": "731920",
    "end": "736560"
  },
  {
    "text": "before the next API function or dll yeah",
    "start": "736560",
    "end": "741240"
  },
  {
    "text": "read on dll next DL and yeah this",
    "start": "741240",
    "end": "746079"
  },
  {
    "text": "algorithm has some problem because the",
    "start": "746079",
    "end": "750600"
  },
  {
    "text": "last API function after the last API",
    "start": "750600",
    "end": "753839"
  },
  {
    "text": "function ofation we don't know when it",
    "start": "753839",
    "end": "755720"
  },
  {
    "text": "ends so I limited the number of memory",
    "start": "755720",
    "end": "759639"
  },
  {
    "text": "right to about 10,000 yeah it",
    "start": "759639",
    "end": "764079"
  },
  {
    "text": "worked",
    "start": "764079",
    "end": "766160"
  },
  {
    "text": "and yeah there are some overlapping",
    "start": "766160",
    "end": "768399"
  },
  {
    "text": "addresses temporary perers shared so",
    "start": "768399",
    "end": "772399"
  },
  {
    "text": "right addresses yeah for example yeah",
    "start": "772399",
    "end": "774720"
  },
  {
    "text": "get temp time file L and get temp yeah",
    "start": "774720",
    "end": "779279"
  },
  {
    "text": "is overated sequentially and it is",
    "start": "779279",
    "end": "783600"
  },
  {
    "text": "address overlaps a right address",
    "start": "783600",
    "end": "785600"
  },
  {
    "text": "overlaps a little but aosc get time temp",
    "start": "785600",
    "end": "789160"
  },
  {
    "text": "name code addresses and aosc get temp",
    "start": "789160",
    "end": "792120"
  },
  {
    "text": "path code addresses doesn't overlap so",
    "start": "792120",
    "end": "794240"
  },
  {
    "text": "it's",
    "start": "794240",
    "end": "796440"
  },
  {
    "text": "safe so I implemented it the memory",
    "start": "800600",
    "end": "805120"
  },
  {
    "text": "access analyzer as a Intel pin tool it",
    "start": "805120",
    "end": "810079"
  },
  {
    "text": "record memory reads on API functions and",
    "start": "810079",
    "end": "812440"
  },
  {
    "text": "Records memory rights on newly allocated",
    "start": "812440",
    "end": "815199"
  },
  {
    "text": "memory block and it construct a map from",
    "start": "815199",
    "end": "818040"
  },
  {
    "text": "each API function to memory right",
    "start": "818040",
    "end": "820440"
  },
  {
    "text": "addresses which is a super set of of",
    "start": "820440",
    "end": "823199"
  },
  {
    "text": "scal code",
    "start": "823199",
    "end": "824399"
  },
  {
    "text": "addresses and the tool POS is at uh o",
    "start": "824399",
    "end": "829399"
  },
  {
    "text": "yeah original entry point it is not",
    "start": "829399",
    "end": "831320"
  },
  {
    "text": "exact oep is near and finally it",
    "start": "831320",
    "end": "835639"
  },
  {
    "text": "identify",
    "start": "835639",
    "end": "838040"
  },
  {
    "text": "API",
    "start": "838040",
    "end": "840920"
  },
  {
    "text": "uh yeah",
    "start": "840920",
    "end": "842839"
  },
  {
    "text": "we need op detection",
    "start": "842839",
    "end": "846199"
  },
  {
    "text": "algorithm in many previous papers it",
    "start": "846199",
    "end": "849880"
  },
  {
    "text": "defines yeah the algorithm to find oeps",
    "start": "849880",
    "end": "853680"
  },
  {
    "text": "to find",
    "start": "853680",
    "end": "855560"
  },
  {
    "text": "uh address that is right written and",
    "start": "855560",
    "end": "859320"
  },
  {
    "text": "executed but",
    "start": "859320",
    "end": "861519"
  },
  {
    "text": "doar as a reging do p files",
    "start": "861519",
    "end": "865800"
  },
  {
    "text": "it right right and execute and unpacks",
    "start": "865800",
    "end": "871079"
  },
  {
    "text": "another unpack another packer in it and",
    "start": "871079",
    "end": "874120"
  },
  {
    "text": "yet it packs again and again it changes",
    "start": "874120",
    "end": "877199"
  },
  {
    "text": "code again and again so the algorithm is",
    "start": "877199",
    "end": "879759"
  },
  {
    "text": "not working and yeah so I use some curis",
    "start": "879759",
    "end": "884320"
  },
  {
    "text": "stics",
    "start": "884320",
    "end": "886519"
  },
  {
    "text": "and I thought that yeah the last last um",
    "start": "886519",
    "end": "892639"
  },
  {
    "text": "executed address that is written is oap",
    "start": "892639",
    "end": "896639"
  },
  {
    "text": "so I and I checked written memory blocks",
    "start": "896639",
    "end": "901040"
  },
  {
    "text": "instead of using the exact addresses to",
    "start": "901040",
    "end": "903480"
  },
  {
    "text": "save memory because Intel pin sh pin",
    "start": "903480",
    "end": "906320"
  },
  {
    "text": "tool shares the memory with the original",
    "start": "906320",
    "end": "909560"
  },
  {
    "text": "executable",
    "start": "909560",
    "end": "911440"
  },
  {
    "text": "so we I found",
    "start": "911440",
    "end": "915160"
  },
  {
    "text": "oep and after I find OE I used I tested",
    "start": "916040",
    "end": "922040"
  },
  {
    "text": "it with only deburger with some plugins",
    "start": "922040",
    "end": "924600"
  },
  {
    "text": "to evade anti-debugging techniques in",
    "start": "924600",
    "end": "927519"
  },
  {
    "text": "Doma and yeah at the O set hardware",
    "start": "927519",
    "end": "931360"
  },
  {
    "text": "break point on o and",
    "start": "931360",
    "end": "934040"
  },
  {
    "text": "run ignoring some exceptions then yeah",
    "start": "934040",
    "end": "937680"
  },
  {
    "text": "we can reach yeah this is the wind main",
    "start": "937680",
    "end": "941600"
  },
  {
    "text": "of my tiny example when you find inter",
    "start": "941600",
    "end": "945519"
  },
  {
    "text": "modular course that we we can find that",
    "start": "945519",
    "end": "948399"
  },
  {
    "text": "many addresses are newly allocated",
    "start": "948399",
    "end": "952399"
  },
  {
    "text": "plugs and it contains some indirect",
    "start": "952399",
    "end": "957920"
  },
  {
    "text": "address",
    "start": "957920",
    "end": "960920"
  },
  {
    "text": "so here I yeah resolve the address using",
    "start": "966399",
    "end": "970120"
  },
  {
    "text": "the built",
    "start": "970120",
    "end": "972079"
  },
  {
    "text": "map and generated a text",
    "start": "972079",
    "end": "975519"
  },
  {
    "text": "file it contains original entry point",
    "start": "975519",
    "end": "980399"
  },
  {
    "text": "and address and some yeah some",
    "start": "980399",
    "end": "983839"
  },
  {
    "text": "information they need to be change it",
    "start": "983839",
    "end": "986440"
  },
  {
    "text": "after oap yeah this in this address",
    "start": "986440",
    "end": "990000"
  },
  {
    "text": "address",
    "start": "990000",
    "end": "991480"
  },
  {
    "text": "means the address in the IAT need to be",
    "start": "991480",
    "end": "995560"
  },
  {
    "text": "changed and call means the",
    "start": "995560",
    "end": "998600"
  },
  {
    "text": "instruction call instruction need to be",
    "start": "998600",
    "end": "1000720"
  },
  {
    "text": "changed to this and the address is in",
    "start": "1000720",
    "end": "1003560"
  },
  {
    "text": "RBA because of",
    "start": "1003560",
    "end": "1007519"
  },
  {
    "text": "aslr and I wanted to debur the the oppos",
    "start": "1007519",
    "end": "1011680"
  },
  {
    "text": "binary and there are two ways that we",
    "start": "1011680",
    "end": "1014519"
  },
  {
    "text": "can attach our",
    "start": "1014519",
    "end": "1016839"
  },
  {
    "text": "deburger at yeah post at we with the pin",
    "start": "1016839",
    "end": "1022160"
  },
  {
    "text": "tool and but it is very hard to attach",
    "start": "1022160",
    "end": "1025678"
  },
  {
    "text": "the burger",
    "start": "1025679",
    "end": "1027600"
  },
  {
    "text": "because D use",
    "start": "1027600",
    "end": "1031199"
  },
  {
    "text": "anti attach techniques and we I need to",
    "start": "1031199",
    "end": "1035640"
  },
  {
    "text": "build the anti attach techniques that",
    "start": "1035640",
    "end": "1038558"
  },
  {
    "text": "many Deb use with pin so yeah I man need",
    "start": "1038559",
    "end": "1043839"
  },
  {
    "text": "to write some code I need to protect td.",
    "start": "1043839",
    "end": "1050160"
  },
  {
    "text": "dbg I remote breaking and yeah breako",
    "start": "1050160",
    "end": "1053280"
  },
  {
    "text": "from patching and prevent some yeah",
    "start": "1053280",
    "end": "1055840"
  },
  {
    "text": "setting flag and when I run yeah one one",
    "start": "1055840",
    "end": "1062000"
  },
  {
    "text": "thread program then it 20 more than 24",
    "start": "1062000",
    "end": "1066160"
  },
  {
    "text": "threads are monitoring whether some some",
    "start": "1066160",
    "end": "1069240"
  },
  {
    "text": "someone is monitoring the program so",
    "start": "1069240",
    "end": "1071960"
  },
  {
    "text": "yeah need to disarm every monitoring",
    "start": "1071960",
    "end": "1074039"
  },
  {
    "text": "thread so it's very hard but it's",
    "start": "1074039",
    "end": "1076679"
  },
  {
    "text": "possible",
    "start": "1076679",
    "end": "1077679"
  },
  {
    "text": "so uh instead instead I generated a",
    "start": "1077679",
    "end": "1081000"
  },
  {
    "text": "debug script to resolve API",
    "start": "1081000",
    "end": "1083320"
  },
  {
    "text": "calls the file generated by the memory",
    "start": "1083320",
    "end": "1085960"
  },
  {
    "text": "access analy contains OE and resolved",
    "start": "1085960",
    "end": "1090039"
  },
  {
    "text": "offc addresses yeah and I implemented a",
    "start": "1090039",
    "end": "1092840"
  },
  {
    "text": "python script to generate on debug",
    "start": "1092840",
    "end": "1095200"
  },
  {
    "text": "script that execute on the OE and res",
    "start": "1095200",
    "end": "1097880"
  },
  {
    "text": "ofc",
    "start": "1097880",
    "end": "1099320"
  },
  {
    "text": "addresses yeah so this is the",
    "start": "1099320",
    "end": "1101840"
  },
  {
    "text": "result yeah it's um the syntax is weird",
    "start": "1101840",
    "end": "1106640"
  },
  {
    "text": "but yeah it",
    "start": "1106640",
    "end": "1107760"
  },
  {
    "text": "works",
    "start": "1107760",
    "end": "1110480"
  },
  {
    "text": "and yeah after resolving the fiscated",
    "start": "1110480",
    "end": "1114000"
  },
  {
    "text": "API",
    "start": "1114000",
    "end": "1115280"
  },
  {
    "text": "call here call to allocate address",
    "start": "1115280",
    "end": "1119400"
  },
  {
    "text": "change",
    "start": "1119400",
    "end": "1120600"
  },
  {
    "text": "to the API function you",
    "start": "1120600",
    "end": "1124720"
  },
  {
    "text": "know so I will show you some",
    "start": "1124840",
    "end": "1130280"
  },
  {
    "text": "demos I download downloaded the file",
    "start": "1130280",
    "end": "1133840"
  },
  {
    "text": "from virus total this",
    "start": "1133840",
    "end": "1137279"
  },
  {
    "text": "morning uh yeah",
    "start": "1137360",
    "end": "1139919"
  },
  {
    "text": "is a big mware that has many features",
    "start": "1139919",
    "end": "1144880"
  },
  {
    "text": "agents Tran",
    "start": "1144880",
    "end": "1147400"
  },
  {
    "text": "agents I don't know exactly what it is",
    "start": "1147400",
    "end": "1150240"
  },
  {
    "text": "but yeah because it is written in China",
    "start": "1150240",
    "end": "1152400"
  },
  {
    "text": "and Chinese",
    "start": "1152400",
    "end": "1154880"
  },
  {
    "text": "characters",
    "start": "1154880",
    "end": "1157880"
  },
  {
    "text": "so",
    "start": "1167720",
    "end": "1170720"
  },
  {
    "text": "the U are is uh text so it is very hard",
    "start": "1176080",
    "end": "1180320"
  },
  {
    "text": "to use yeah but yeah I'm accustomed to",
    "start": "1180320",
    "end": "1184000"
  },
  {
    "text": "it so but yeah it takes two or three",
    "start": "1184000",
    "end": "1187200"
  },
  {
    "text": "minutes to yeah deos skate the boundary",
    "start": "1187200",
    "end": "1190159"
  },
  {
    "text": "because I read every read and write",
    "start": "1190159",
    "end": "1193559"
  },
  {
    "text": "instructions but if you have been some",
    "start": "1193559",
    "end": "1196480"
  },
  {
    "text": "experience using pin tool yeah pin",
    "start": "1196480",
    "end": "1198720"
  },
  {
    "text": "Tracer for example we can use SD instead",
    "start": "1198720",
    "end": "1201919"
  },
  {
    "text": "of pin building pin tool the",
    "start": "1201919",
    "end": "1204240"
  },
  {
    "text": "Tracer generate from two or three gigar",
    "start": "1204240",
    "end": "1209600"
  },
  {
    "text": "gigabytes for a simple binary so it is",
    "start": "1209600",
    "end": "1213960"
  },
  {
    "text": "not so big yeah compared to other",
    "start": "1213960",
    "end": "1219080"
  },
  {
    "text": "instruction",
    "start": "1219080",
    "end": "1220360"
  },
  {
    "text": "tracers yeah while",
    "start": "1220360",
    "end": "1223320"
  },
  {
    "text": "here is for running I will explain other",
    "start": "1223320",
    "end": "1227640"
  },
  {
    "text": "slides MIT has limitation yeah because",
    "start": "1227640",
    "end": "1231320"
  },
  {
    "text": "it is depending on",
    "start": "1231320",
    "end": "1233000"
  },
  {
    "text": "pin yeah last year",
    "start": "1233000",
    "end": "1237400"
  },
  {
    "text": "someone um told that pin detection is",
    "start": "1237400",
    "end": "1241000"
  },
  {
    "text": "possible",
    "start": "1241000",
    "end": "1243120"
  },
  {
    "text": "so yeah we we we can detect someone",
    "start": "1243120",
    "end": "1247360"
  },
  {
    "text": "someone is using pin yeah if um yeah it",
    "start": "1247360",
    "end": "1252039"
  },
  {
    "text": "is possible then yeah he's easily broken",
    "start": "1252039",
    "end": "1255240"
  },
  {
    "text": "and some malware holds on the PIN",
    "start": "1255240",
    "end": "1260159"
  },
  {
    "text": "the pin has some defect but it is not",
    "start": "1260159",
    "end": "1262080"
  },
  {
    "text": "open so so so I cannot change cannot fix",
    "start": "1262080",
    "end": "1265799"
  },
  {
    "text": "it and I use memory access patterns but",
    "start": "1265799",
    "end": "1271720"
  },
  {
    "text": "yeah it can also be changed but I think",
    "start": "1271720",
    "end": "1274240"
  },
  {
    "text": "it's very hard but you can yeah change",
    "start": "1274240",
    "end": "1276039"
  },
  {
    "text": "it you can be change",
    "start": "1276039",
    "end": "1277559"
  },
  {
    "text": "it",
    "start": "1277559",
    "end": "1279480"
  },
  {
    "text": "and yeah it does not deal with the",
    "start": "1279480",
    "end": "1282720"
  },
  {
    "text": "virtualization macros so yeah I need to",
    "start": "1282720",
    "end": "1286760"
  },
  {
    "text": "do",
    "start": "1286760",
    "end": "1287520"
  },
  {
    "text": "it the future still",
    "start": "1287520",
    "end": "1290840"
  },
  {
    "text": "running and I need to build Theos scaler",
    "start": "1290840",
    "end": "1294279"
  },
  {
    "text": "based on emulators instead using yeah",
    "start": "1294279",
    "end": "1297799"
  },
  {
    "text": "pin",
    "start": "1297799",
    "end": "1300799"
  },
  {
    "text": "and",
    "start": "1300880",
    "end": "1302679"
  },
  {
    "text": "yeah the tool has",
    "start": "1302679",
    "end": "1306159"
  },
  {
    "text": "some defects because I am not good at",
    "start": "1306159",
    "end": "1309919"
  },
  {
    "text": "reverse engineering",
    "start": "1309919",
    "end": "1312960"
  },
  {
    "text": "so yeah it",
    "start": "1314799",
    "end": "1316799"
  },
  {
    "text": "ended in minute",
    "start": "1316799",
    "end": "1319760"
  },
  {
    "text": "I have four minutes and yeah the result",
    "start": "1319760",
    "end": "1322600"
  },
  {
    "text": "is like",
    "start": "1322600",
    "end": "1324480"
  },
  {
    "text": "this this small is",
    "start": "1324480",
    "end": "1327679"
  },
  {
    "text": "very yeah many many yeah call oh",
    "start": "1327679",
    "end": "1334840"
  },
  {
    "text": "sorry here a",
    "start": "1340640",
    "end": "1343960"
  },
  {
    "text": "moment",
    "start": "1345919",
    "end": "1347520"
  },
  {
    "text": "okay",
    "start": "1347520",
    "end": "1350520"
  },
  {
    "text": "I didn't",
    "start": "1352200",
    "end": "1354520"
  },
  {
    "text": "notice yeah and it yeah yes many many of",
    "start": "1354520",
    "end": "1359120"
  },
  {
    "text": "us scles and I resolved everything and",
    "start": "1359120",
    "end": "1362760"
  },
  {
    "text": "it can be converted",
    "start": "1362760",
    "end": "1367159"
  },
  {
    "text": "to only de script using",
    "start": "1367480",
    "end": "1372520"
  },
  {
    "text": "uh",
    "start": "1377440",
    "end": "1380440"
  },
  {
    "text": "and I generated",
    "start": "1387080",
    "end": "1390080"
  },
  {
    "text": "our yeah only debugger scripts",
    "start": "1395720",
    "end": "1399039"
  },
  {
    "text": "and it can be run under only",
    "start": "1399039",
    "end": "1403919"
  },
  {
    "text": "debugger",
    "start": "1407440",
    "end": "1410440"
  },
  {
    "text": "and we can",
    "start": "1413840",
    "end": "1416840"
  },
  {
    "text": "run the script and it execute and it has",
    "start": "1416840",
    "end": "1421520"
  },
  {
    "text": "contains some aosc address and after the",
    "start": "1421520",
    "end": "1425360"
  },
  {
    "text": "script is executed then yeah the",
    "start": "1425360",
    "end": "1428720"
  },
  {
    "text": "addresses is",
    "start": "1428720",
    "end": "1432000"
  },
  {
    "text": "resolved it contains more than thousand",
    "start": "1434159",
    "end": "1437679"
  },
  {
    "text": "API functions call so it takes time yeah",
    "start": "1437679",
    "end": "1441919"
  },
  {
    "text": "you can see the oated call is resed ship",
    "start": "1441919",
    "end": "1448240"
  },
  {
    "text": "create and we can debug using your step",
    "start": "1448240",
    "end": "1452159"
  },
  {
    "text": "step",
    "start": "1452159",
    "end": "1454480"
  },
  {
    "text": "step and also um we can dump this",
    "start": "1455000",
    "end": "1461919"
  },
  {
    "text": "file we know",
    "start": "1467360",
    "end": "1470120"
  },
  {
    "text": "that original entry point by the text",
    "start": "1470120",
    "end": "1474080"
  },
  {
    "text": "file",
    "start": "1474080",
    "end": "1476398"
  },
  {
    "text": "generated",
    "start": "1478640",
    "end": "1481559"
  },
  {
    "text": "and yeah we can easily find your the",
    "start": "1481559",
    "end": "1487158"
  },
  {
    "text": "IAT um yeah yeah has some problem",
    "start": "1497120",
    "end": "1502919"
  },
  {
    "text": "but we can down f",
    "start": "1502919",
    "end": "1506759"
  },
  {
    "text": "it",
    "start": "1514120",
    "end": "1517120"
  },
  {
    "text": "and with either I will show the",
    "start": "1519080",
    "end": "1525200"
  },
  {
    "text": "pre-made either program because it takes",
    "start": "1525200",
    "end": "1527880"
  },
  {
    "text": "tool yeah",
    "start": "1527880",
    "end": "1529640"
  },
  {
    "text": "long so we know what is",
    "start": "1529640",
    "end": "1534840"
  },
  {
    "text": "this application we can see some Shell",
    "start": "1534840",
    "end": "1539880"
  },
  {
    "text": "Shell Code and",
    "start": "1539880",
    "end": "1542159"
  },
  {
    "text": "some dangerous code some we can find",
    "start": "1542159",
    "end": "1546480"
  },
  {
    "text": "some IP addresses",
    "start": "1546480",
    "end": "1550440"
  },
  {
    "text": "and all input table is recovered so we",
    "start": "1550440",
    "end": "1554760"
  },
  {
    "text": "can easily analyze and",
    "start": "1554760",
    "end": "1556960"
  },
  {
    "text": "even we can use hexd compiler to analyze",
    "start": "1556960",
    "end": "1562320"
  },
  {
    "text": "it so that's all if you have any",
    "start": "1562320",
    "end": "1567399"
  },
  {
    "text": "question",
    "start": "1567399",
    "end": "1569440"
  },
  {
    "text": "yeah oh",
    "start": "1569440",
    "end": "1572840"
  },
  {
    "text": "sorry any",
    "start": "1572840",
    "end": "1576080"
  },
  {
    "text": "question",
    "start": "1587240",
    "end": "1589440"
  },
  {
    "text": "M yes yeah",
    "start": "1589440",
    "end": "1593360"
  },
  {
    "text": "patching yeah then then yeah you need to",
    "start": "1601760",
    "end": "1606120"
  },
  {
    "text": "yeah yeah fix it by",
    "start": "1606120",
    "end": "1610158"
  },
  {
    "text": "manually yeah yeah if you have questions",
    "start": "1616600",
    "end": "1621000"
  },
  {
    "text": "mail",
    "start": "1621000",
    "end": "1622080"
  },
  {
    "text": "me here at last slide I have mail",
    "start": "1622080",
    "end": "1627760"
  },
  {
    "text": "[Applause]",
    "start": "1637330",
    "end": "1639000"
  },
  {
    "text": "address",
    "start": "1639000",
    "end": "1642000"
  }
]