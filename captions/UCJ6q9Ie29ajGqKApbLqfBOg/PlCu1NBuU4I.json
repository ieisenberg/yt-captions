[
  {
    "start": "0",
    "end": "376000"
  },
  {
    "text": "good morning my presentation is mainly about exploitation method that can be",
    "start": "30",
    "end": "6000"
  },
  {
    "text": "applied for you to the freeze and the whiplash my name is Quentin wind and here's a brief introduction of myself and the",
    "start": "6000",
    "end": "13410"
  },
  {
    "text": "security research off angle and previously most of my time focusing on flash security find its vulnerabilities",
    "start": "13410",
    "end": "21060"
  },
  {
    "text": "and keep track of the state of art of exploitation and many of the bugs I reported will be also made public",
    "start": "21060",
    "end": "28080"
  },
  {
    "text": "through internet bug bounties and currently the top line contributor for this platform and maybe forever",
    "start": "28080",
    "end": "34110"
  },
  {
    "text": "Jacqueline has stopped accepting new flash vulnerabilities you know in their",
    "start": "34110",
    "end": "40440"
  },
  {
    "text": "opening they think flash Express no longer had the same impact as when they",
    "start": "40440",
    "end": "45690"
  },
  {
    "text": "start so they will shipping the bomb here resource to open source infrastructure and the method local talk",
    "start": "45690",
    "end": "54480"
  },
  {
    "text": "about today is developed during the research of T V 2016 1 & 7 which is the",
    "start": "54480",
    "end": "60210"
  },
  {
    "text": "use of the free discover and recorded Oh be dismayed so here is the gen of my",
    "start": "60210",
    "end": "67380"
  },
  {
    "text": "speech I will start with our start by introducing the basic ideas of our classical flash exploit works in how",
    "start": "67380",
    "end": "74939"
  },
  {
    "text": "recently medications prevent class click next I will show a man method which can",
    "start": "74939",
    "end": "81570"
  },
  {
    "text": "bypass these mitigations and then we'll do to exploit step by step with this",
    "start": "81570",
    "end": "86970"
  },
  {
    "text": "method for CVE 2016 107 at the end of the talk I will also discuss how to",
    "start": "86970",
    "end": "92640"
  },
  {
    "text": "exploit under 64 billion worm and how we know sin affects the exploitation",
    "start": "92640",
    "end": "99680"
  },
  {
    "text": "so for the past three years maybe more the classical flash exploited as many",
    "start": "101230",
    "end": "107480"
  },
  {
    "text": "about crop the land field of a vector object no matter what happened what type",
    "start": "107480",
    "end": "112490"
  },
  {
    "text": "the bug is so for example here overflow",
    "start": "112490",
    "end": "117500"
  },
  {
    "text": "and the x1 was started by spring vectors and leak memory hose by freeing some of",
    "start": "117500",
    "end": "123680"
  },
  {
    "text": "the vectors so that when the bone grew buffer is created and it occupies one of the nerman holes and throught the lens",
    "start": "123680",
    "end": "130520"
  },
  {
    "text": "field of the vector object are true during the works the rector with a very large length will be used to search the",
    "start": "130520",
    "end": "137240"
  },
  {
    "text": "process memory for regarded shell-toes and buffers all kinds of structures to my need for exploited work and then",
    "start": "137240",
    "end": "144740"
  },
  {
    "text": "finally the rope train will be triggered by a facebook function table and when it comes to use of the phrase the process",
    "start": "144740",
    "end": "151400"
  },
  {
    "text": "is very similar with the proper hit memory layout the vulnerable object",
    "start": "151400",
    "end": "157160"
  },
  {
    "text": "following one of the memory hosts will be released because of users are free and the autopilot with control vector",
    "start": "157160",
    "end": "163430"
  },
  {
    "text": "data and after that when a member",
    "start": "163430",
    "end": "168590"
  },
  {
    "text": "function or member property of this longing pointer is invoked a fully controllable memory right will corrupt",
    "start": "168590",
    "end": "174140"
  },
  {
    "text": "one one of the last field of the vector object and we will find that across the director everything else goes like that",
    "start": "174140",
    "end": "181459"
  },
  {
    "text": "out here overflow since the last field is located at beginning part of the",
    "start": "181459",
    "end": "187670"
  },
  {
    "text": "vector buffer this American women to be crop it with wireless a flash even",
    "start": "187670",
    "end": "193640"
  },
  {
    "text": "browser vulnerabilities so this technique has been very popular for the past years mainly because Adobe only",
    "start": "193640",
    "end": "200570"
  },
  {
    "text": "speaks the vulnerability itself is that us mitigate the exploitation method so",
    "start": "200570",
    "end": "207620"
  },
  {
    "text": "finally last December the popularity of hacking the hacking team / exploit",
    "start": "207620",
    "end": "212720"
  },
  {
    "text": "played a major role for Dobis final decision so working with Google project 0 Adobe as communications director and",
    "start": "212720",
    "end": "220489"
  },
  {
    "text": "often the munication [Music] the last field is moved to the metadata",
    "start": "220489",
    "end": "225730"
  },
  {
    "text": "part of the vector object only left with the verification field in the same",
    "start": "225730",
    "end": "231610"
  },
  {
    "text": "position since the last field and the verification field are now in different",
    "start": "231610",
    "end": "237160"
  },
  {
    "text": "memory block corrupt them at same time is not practical besides the vector mitigation Adobe also",
    "start": "237160",
    "end": "246160"
  },
  {
    "text": "as verification fields to byte array which is not a very popular or relaxed structure that is widely used in exploit",
    "start": "246160",
    "end": "254580"
  },
  {
    "text": "well the lens field and the verification fields are now still staying the same memory block although very rare powerful",
    "start": "254580",
    "end": "262750"
  },
  {
    "text": "zero-day exploit including those used by Ponton we were able to rate the",
    "start": "262750",
    "end": "268030"
  },
  {
    "text": "verification field first and then calculate a security value by XOR the",
    "start": "268030",
    "end": "273130"
  },
  {
    "text": "lens field and the verification fuse and then crop them with the new value at the same time but this behavior is highly",
    "start": "273130",
    "end": "281260"
  },
  {
    "text": "depends on the quality of the vulnerability to read and interrupt almost instant bug itself is capable of",
    "start": "281260",
    "end": "287440"
  },
  {
    "text": "read and write enemies of the memory let's say a type confusion so even without corruption of the byte array the",
    "start": "287440",
    "end": "294430"
  },
  {
    "text": "vulnerability itself can finish exploitation and to crop by the readers make the exploit code simpler to write",
    "start": "294430",
    "end": "301650"
  },
  {
    "text": "and decide the length rotation isolated heap is also introduced into Adobe Flash",
    "start": "301650",
    "end": "307090"
  },
  {
    "text": "right now there are many hit predictions inside flash",
    "start": "307090",
    "end": "312150"
  },
  {
    "text": "well this technique is first explained in Google reactors blog and basically",
    "start": "312150",
    "end": "318310"
  },
  {
    "text": "the data and the object are now staring in the different memory box so even if",
    "start": "318310",
    "end": "323950"
  },
  {
    "text": "there's the use of the free we cannot control its memory with vector or byte array anymore yet it is still possible",
    "start": "323950",
    "end": "332110"
  },
  {
    "text": "to control the Freid object with other class objects in the same field partition and that is something we're",
    "start": "332110",
    "end": "338830"
  },
  {
    "text": "going to use later for our exploit work so in summary communications have",
    "start": "338830",
    "end": "347020"
  },
  {
    "text": "disarmed the classical and popular flash exploit method and [Applause]",
    "start": "347020",
    "end": "353130"
  },
  {
    "text": "before communication there may be to reflash exploring the wild for a month",
    "start": "353130",
    "end": "358630"
  },
  {
    "text": "but after the mitigation there may be just one or two flash explore in the wild for half a year",
    "start": "358630",
    "end": "364030"
  },
  {
    "text": "so the mitigation itself is very useful and powerful and today will minute focus",
    "start": "364030",
    "end": "369940"
  },
  {
    "text": "on use of the fridge let's see how to bring this type of bug back to life so",
    "start": "369940",
    "end": "375270"
  },
  {
    "text": "what is really necessary for use of the free bulwark in my opinion I think a rig",
    "start": "375270",
    "end": "381400"
  },
  {
    "start": "376000",
    "end": "607000"
  },
  {
    "text": "primitive helps a lot and that is the past years flash exploit all shares so",
    "start": "381400",
    "end": "387040"
  },
  {
    "text": "right now only with the red primitive can find regards and prefers to store shellcode and wrappers to set excluded",
    "start": "387040",
    "end": "394300"
  },
  {
    "text": "bit of shellcode as we're talking about uses the free we were able to fake would",
    "start": "394300",
    "end": "399820"
  },
  {
    "text": "function table by just memory occupation so right from the list not insensitive",
    "start": "399820",
    "end": "405360"
  },
  {
    "text": "currently exploit can with primitive by tempering the land field of a vector",
    "start": "405360",
    "end": "410500"
  },
  {
    "text": "object by the rate and other structures",
    "start": "410500",
    "end": "415870"
  },
  {
    "text": "that work like a rate where our Provost temper start dress after a relaxed",
    "start": "415870",
    "end": "422800"
  },
  {
    "text": "structure also by the rate and vector another only candidates there are other",
    "start": "422800",
    "end": "428380"
  },
  {
    "text": "relaxed workers inside Adobe Flash and for proof of concept I will start with the simplest or relaxed structure the",
    "start": "428380",
    "end": "435669"
  },
  {
    "text": "stirring object so if a class holds the screen inside a structure will be something like this there will be a",
    "start": "435669",
    "end": "442600"
  },
  {
    "text": "working function table a reference cone other views at least contain a buffer",
    "start": "442600",
    "end": "448270"
  },
  {
    "text": "and the last dedicate to a string but at the edge screen here I'm talking about it's not an ActionScript string so if it",
    "start": "448270",
    "end": "456010"
  },
  {
    "text": "is really an ActionScript string it would be just a reference pointer here instead of a buffer any less but some",
    "start": "456010",
    "end": "462760"
  },
  {
    "text": "class they choose to store the string inside with no further operations so",
    "start": "462760",
    "end": "468660"
  },
  {
    "text": "they will use the self define light widget structure in spite of the high",
    "start": "468660",
    "end": "474220"
  },
  {
    "text": "weight hit ActionScript string so somehow with the help of use of the free",
    "start": "474220",
    "end": "480520"
  },
  {
    "text": "we were able to release the class memory and then control it normally by probation",
    "start": "480520",
    "end": "486460"
  },
  {
    "text": "we're the start address of the string object and the NA desired value right",
    "start": "486460",
    "end": "492070"
  },
  {
    "text": "now we're able to access the target memory through the string object and after dealing with the target memory",
    "start": "492070",
    "end": "499050"
  },
  {
    "text": "let's assume we can release this class memory again and in the real world case I will show you how this step can be",
    "start": "499050",
    "end": "505509"
  },
  {
    "text": "done but currently let's just assume the step can finish itself so when the class",
    "start": "505509",
    "end": "511360"
  },
  {
    "text": "number is released again we can occupied with another bunch of data where start address can be another value and with",
    "start": "511360",
    "end": "518770"
  },
  {
    "text": "such release and occupation over and over the string object becomes the rate",
    "start": "518770",
    "end": "523930"
  },
  {
    "text": "primitive and that is the main idea of our exploitation method since there were",
    "start": "523930",
    "end": "530080"
  },
  {
    "text": "- cycles off we'll leave an occupation the method is named as use of their user for free but this is maybe to ideal",
    "start": "530080",
    "end": "537910"
  },
  {
    "text": "situation so let's come back to the beginning of the use of the free when the vulnerable object is released a",
    "start": "537910",
    "end": "544290"
  },
  {
    "text": "structure may not contain a screen inside so we should occupy its class memory with other classes our selected",
    "start": "544290",
    "end": "551440"
  },
  {
    "text": "classes would host is drawing inside and after the well because of isolated hip",
    "start": "551440",
    "end": "557890"
  },
  {
    "text": "this to class memory should also stay in the same key partition and in the same side so after occupation will invoke the",
    "start": "557890",
    "end": "567010"
  },
  {
    "text": "water function of the Dunham's pointer it is now the water function with the",
    "start": "567010",
    "end": "573130"
  },
  {
    "text": "same effect but in the selected class memory is being indexed the key point is",
    "start": "573130",
    "end": "578650"
  },
  {
    "text": "that such type confusion status wasn't expected by any of the function so this",
    "start": "578650",
    "end": "585760"
  },
  {
    "text": "unexpected behavior may help us release the class memory and then when we are in",
    "start": "585760",
    "end": "591940"
  },
  {
    "text": "the rate of primitive situations that we have discussed before so here are the basic steps",
    "start": "591940",
    "end": "597190"
  },
  {
    "text": "turning our use of the free interval rate primitive but these are all abstract concepts so let's go through a",
    "start": "597190",
    "end": "603550"
  },
  {
    "text": "real-world case to see how this actually works cv 2016 1 + 7 is the use of the",
    "start": "603550",
    "end": "610630"
  },
  {
    "start": "607000",
    "end": "820000"
  },
  {
    "text": "phrase I discovered in P SDK class the SDK belongs to media core package I",
    "start": "610630",
    "end": "617020"
  },
  {
    "text": "discovered package I think this package is firstly introducing to flash version 19 and I",
    "start": "617020",
    "end": "623180"
  },
  {
    "text": "discovered this package by decompiling the player global file and across comparing it with this old version",
    "start": "623180",
    "end": "630100"
  },
  {
    "text": "there were many classes and there this package but all of this classes and",
    "start": "630100",
    "end": "635530"
  },
  {
    "text": "undocumented there is only some related information can be formed from another",
    "start": "635530",
    "end": "642170"
  },
  {
    "text": "Adobe products called prime time players DK this SDK is many to use developed to",
    "start": "642170",
    "end": "650390"
  },
  {
    "text": "as many use to develop TV based cross-platform application and for the",
    "start": "650390",
    "end": "655880"
  },
  {
    "text": "PC environment the SDK is a bunch of ActionScript files so my best guess is",
    "start": "655880",
    "end": "661970"
  },
  {
    "text": "that the package I found is the native it's a native implementation of this SDK",
    "start": "661970",
    "end": "667880"
  },
  {
    "text": "inside Flash Player to accelerate the running speed apparently when the first",
    "start": "667880",
    "end": "674630"
  },
  {
    "text": "time this package is introduced into flash at heaven be inserted tastic on",
    "start": "674630",
    "end": "680810"
  },
  {
    "text": "many many memory corruption last August and after reporting them to Adobe to",
    "start": "680810",
    "end": "687380"
  },
  {
    "text": "choose to remove the entire package from its next version so for that moment I",
    "start": "687380",
    "end": "693980"
  },
  {
    "text": "just think maybe the whole package shouldn't be exposed to the developer",
    "start": "693980",
    "end": "699320"
  },
  {
    "text": "but after half a year the whole package is back into a flash version 21 so the",
    "start": "699320",
    "end": "705740"
  },
  {
    "text": "truth behind is finish fix all of this memory corruption takes time so Adobe",
    "start": "705740",
    "end": "712040"
  },
  {
    "text": "use half a year to finish fix audit all of this box and reintroduce them into",
    "start": "712040",
    "end": "718040"
  },
  {
    "text": "flash versions and one and the use of the free we're talking about here is discovered right after P SDK and",
    "start": "718040",
    "end": "724310"
  },
  {
    "text": "immediate all packages back here's the code snippet - triggering the",
    "start": "724310",
    "end": "730040"
  },
  {
    "text": "use of the free the only way to get an instance of P SDK is through is statical",
    "start": "730040",
    "end": "736310"
  },
  {
    "text": "number property called little capital P SDK so apparently the class memory is",
    "start": "736310",
    "end": "743480"
  },
  {
    "text": "constructed and initialized by ActionScript virtual machine the AVM itself",
    "start": "743480",
    "end": "748670"
  },
  {
    "text": "so naturally the class memory should also be destructed and cleaned by AVM",
    "start": "748670",
    "end": "754070"
  },
  {
    "text": "automatically but the weird part is that this class also contains a method called",
    "start": "754070",
    "end": "759589"
  },
  {
    "text": "relief which can be invoked directly from the ActionScript level to explicitly release the class memory of P",
    "start": "759589",
    "end": "766490"
  },
  {
    "text": "SDK well this is relative case for ActionScript objects normally other",
    "start": "766490",
    "end": "772730"
  },
  {
    "text": "flash objects are completely managed by an MVC the garbage collector so the only",
    "start": "772730",
    "end": "778160"
  },
  {
    "text": "way to actually release the class memory is you just don't use them so the reference count of this class will be 0",
    "start": "778160",
    "end": "783800"
  },
  {
    "text": "and M MVC will scan all the objects and find the proper moment to actually release the class member but as this",
    "start": "783800",
    "end": "791089"
  },
  {
    "text": "class is undocumented so we don't know if this release is necessary or not but",
    "start": "791089",
    "end": "798380"
  },
  {
    "text": "at least the reference count wasn't clean after release so the atom",
    "start": "798380",
    "end": "803870"
  },
  {
    "text": "reference pointer is still pointing to the class memory after release and women in woke the water function with this",
    "start": "803870",
    "end": "810380"
  },
  {
    "text": "pointer there goes the over textbook use it for free so the root cause of this",
    "start": "810380",
    "end": "816980"
  },
  {
    "text": "throne of vulnerabilities theory is that we understand let's go build a exploit P",
    "start": "816980",
    "end": "823880"
  },
  {
    "start": "820000",
    "end": "961000"
  },
  {
    "text": "SDK takes 32 bytes there are two with a function table at beginning of this",
    "start": "823880",
    "end": "829670"
  },
  {
    "text": "class memory all the member functions that can be invoked from the",
    "start": "829670",
    "end": "834770"
  },
  {
    "text": "ActionScript level are index in the first word function table and the structure is index index in the second",
    "start": "834770",
    "end": "841490"
  },
  {
    "text": "one but the destructor can only be invoked by mm GCV other views of this",
    "start": "841490",
    "end": "847520"
  },
  {
    "text": "class are irrelevant to our ex-wife so I will skip some asteroid demonstration so after P SDK is released",
    "start": "847520",
    "end": "856250"
  },
  {
    "text": "we should occupy s-class memory with another class as we discussed before so",
    "start": "856250",
    "end": "862790"
  },
  {
    "text": "I manually checked all the classes and their media core package I think there are most likely the best candidates",
    "start": "862790",
    "end": "869530"
  },
  {
    "text": "classes under the same package a very likely to implement in a similar way especially for their hip perdition so",
    "start": "869530",
    "end": "878660"
  },
  {
    "text": "finally after several checks I pick track it contains to Springfield and",
    "start": "878660",
    "end": "884980"
  },
  {
    "text": "after memory alignment track is in the same size of P SDK so meaning that when",
    "start": "884980",
    "end": "891710"
  },
  {
    "text": "P SDK is released newly constructed tracks or the occupies memory and right",
    "start": "891710",
    "end": "897530"
  },
  {
    "text": "now will invoke the water function of P SDK let's say the career dispatcher",
    "start": "897530",
    "end": "902750"
  },
  {
    "text": "located at 14 hex of that it is now the virtual function of track being indexed",
    "start": "902750",
    "end": "908540"
  },
  {
    "text": "and this type confusion function call treated the second double word of",
    "start": "908540",
    "end": "915110"
  },
  {
    "text": "current class memory to be a reference count decrement it and release current memory if the reference count is 0 so",
    "start": "915110",
    "end": "922670"
  },
  {
    "text": "this type confusion call is very like a destructor and the second double word of",
    "start": "922670",
    "end": "928250"
  },
  {
    "text": "current class memory is happened to be the last field of the first ring object",
    "start": "928250",
    "end": "933320"
  },
  {
    "text": "inside track so simply initialize track with the single character string can we control",
    "start": "933320",
    "end": "938900"
  },
  {
    "text": "this field to be one and after the convention the memory of track will be released and right now we have a",
    "start": "938900",
    "end": "945980"
  },
  {
    "text": "stunning pointer and type of track that is create advice but we still need to",
    "start": "945980",
    "end": "952340"
  },
  {
    "text": "find a way to occupy the memory of track to control its content and release a",
    "start": "952340",
    "end": "957650"
  },
  {
    "text": "class memory again and there I will introduce you step by to rate which is",
    "start": "957650",
    "end": "963710"
  },
  {
    "start": "961000",
    "end": "1230000"
  },
  {
    "text": "another which is a very handy function that almost born to finish the task that we have left it can occupy the memory of",
    "start": "963710",
    "end": "970910"
  },
  {
    "text": "track and then release it at the same time to satisfy the race simply",
    "start": "970910",
    "end": "976760"
  },
  {
    "text": "duplicate the input by to rate inside metadata and metadata also belongs to",
    "start": "976760",
    "end": "982040"
  },
  {
    "text": "media called package so it is sharing the same condition with track P SDK self",
    "start": "982040",
    "end": "988850"
  },
  {
    "text": "as rate will allocate a temporal space - pre-processing the input battery its",
    "start": "988850",
    "end": "997800"
  },
  {
    "text": "encoding and the lens it's okay the instead of a delay will allocate another memory to save the content of",
    "start": "997800",
    "end": "1004850"
  },
  {
    "text": "this to save the content of this byte array and save the pointer inside",
    "start": "1004850",
    "end": "1010040"
  },
  {
    "text": "metadata since this temporary space is first allocated if the input byte array",
    "start": "1010040",
    "end": "1015890"
  },
  {
    "text": "is 32 bytes long the same size of P SDK the temporary space is what else",
    "start": "1015890",
    "end": "1021050"
  },
  {
    "text": "occupies the memory of P SDK so we can",
    "start": "1021050",
    "end": "1029300"
  },
  {
    "text": "just use a sort of device alarm by the rate and evokes that rather is the memory of track will be controlled and",
    "start": "1029300",
    "end": "1036010"
  },
  {
    "text": "the best part of this is when an end of set up at array this temporal space will",
    "start": "1036010",
    "end": "1044089"
  },
  {
    "text": "be released explicitly so meaning that the memory of tracks fitting with",
    "start": "1044090",
    "end": "1050690"
  },
  {
    "text": "control content still being freed waiting for next occupation recall from",
    "start": "1050690",
    "end": "1056210"
  },
  {
    "text": "the last part when P SDK is released tracks text position and type confusion",
    "start": "1056210",
    "end": "1062030"
  },
  {
    "text": "function call release track memory again and for the rate primitives part each",
    "start": "1062030",
    "end": "1067430"
  },
  {
    "text": "time we want to read access the target of memory will just use set by the rate with 32 bytes long byte arrays which is",
    "start": "1067430",
    "end": "1075800"
  },
  {
    "text": "16 of that to be the target address the 16 of that is happen to be the second",
    "start": "1075800",
    "end": "1082550"
  },
  {
    "text": "string field inside track so up instead by the rate will invoke track stock",
    "start": "1082550",
    "end": "1089690"
  },
  {
    "text": "language which is the second string field we can access the target memory",
    "start": "1089690",
    "end": "1094870"
  },
  {
    "text": "right now address that the screen last before there is no need to be a large",
    "start": "1094870",
    "end": "1100250"
  },
  {
    "text": "number 8,000 as the returning of the string object contains an encoding",
    "start": "1100250",
    "end": "1106550"
  },
  {
    "text": "problem so if there's some special character in the string memory in the target memory the returning of the",
    "start": "1106550",
    "end": "1113270"
  },
  {
    "text": "string will be broken and in that case we'll still need to read a target memory",
    "start": "1113270",
    "end": "1119090"
  },
  {
    "text": "character of the character so just that last before so in most cases the",
    "start": "1119090",
    "end": "1124700"
  },
  {
    "text": "returning value we'll be 4 bytes long he can easily convert it to the int value very can",
    "start": "1124700",
    "end": "1131630"
  },
  {
    "text": "going to deal with with other part of off your exploit so right now we have",
    "start": "1131630",
    "end": "1139850"
  },
  {
    "text": "the ability to read any part of the memory I think everything else can only",
    "start": "1139850",
    "end": "1145940"
  },
  {
    "text": "limited by imagination there will be many options let's say we can rate a stable location spread with vector",
    "start": "1145940",
    "end": "1152930"
  },
  {
    "text": "object others author electro-optic is filled with current class pointer this",
    "start": "1152930",
    "end": "1159430"
  },
  {
    "text": "other vector cannot be used to be crop it and still a very feasible way for hip",
    "start": "1159430",
    "end": "1165050"
  },
  {
    "text": "spring so when we rate a stable location we know that this pointer is located",
    "start": "1165050",
    "end": "1172340"
  },
  {
    "text": "right after the metadata director object and with this pointer we can easily",
    "start": "1172340",
    "end": "1177740"
  },
  {
    "text": "define other self defined variables inside our class let's say we can find",
    "start": "1177740",
    "end": "1183650"
  },
  {
    "text": "the byte array that's during the track vector and there are started with 54 X",
    "start": "1183650",
    "end": "1190100"
  },
  {
    "text": "offset width as we know the with simple",
    "start": "1190100",
    "end": "1195140"
  },
  {
    "text": "reverse-engineering you can know the structure of this class so you can find a buffer inside to store a shellcode",
    "start": "1195140",
    "end": "1200600"
  },
  {
    "text": "rope chain favorite function table and this trick is firstly used by hacking in",
    "start": "1200600",
    "end": "1205880"
  },
  {
    "text": "splash exploit it is very efficient there is no need for total for searching",
    "start": "1205880",
    "end": "1211610"
  },
  {
    "text": "of your self defined variables and after that we can use one of the water",
    "start": "1211610",
    "end": "1217940"
  },
  {
    "text": "function table of this class to find a model based of Flash and start to search the rope rope carcass but for exploit",
    "start": "1217940",
    "end": "1225620"
  },
  {
    "text": "and after every buffer is filled a linked set bat array is invoked one more",
    "start": "1225620",
    "end": "1232100"
  },
  {
    "text": "time to prop the second word function table of P SDK the reason we choose the",
    "start": "1232100",
    "end": "1238040"
  },
  {
    "text": "segment water function table instead of the first one is that as you can",
    "start": "1238040",
    "end": "1244220"
  },
  {
    "text": "remember it is the temporary space that occupies and controls the memory of P SDK and the release of this temporary",
    "start": "1244220",
    "end": "1251300"
  },
  {
    "text": "space has one minor set in fact it modifies the first byte of current class",
    "start": "1251300",
    "end": "1256550"
  },
  {
    "text": "memory meaning that we cannot fully control the first walk was a function table so it",
    "start": "1256550",
    "end": "1262020"
  },
  {
    "text": "reads the second one and two we can crop the second order function table point",
    "start": "1262020",
    "end": "1267300"
  },
  {
    "text": "into our obtain the second water function table belongs to the destructor",
    "start": "1267300",
    "end": "1273180"
  },
  {
    "text": "of P SDK so after every exploit code that we have written in the flash file",
    "start": "1273180",
    "end": "1279600"
  },
  {
    "text": "is executed mmm VC will kicking and try to release the other class memory and that is the",
    "start": "1279600",
    "end": "1286020"
  },
  {
    "text": "moment our world cane is being excluded the rope chain is simply pointy x to a",
    "start": "1286020",
    "end": "1292830"
  },
  {
    "text": "controllable memory and invoke a wrapper is that slash so this record is very",
    "start": "1292830",
    "end": "1298620"
  },
  {
    "text": "convenient you just invoke a point in EXO controllable memory make sure X minus 8 and X minus 4 pointing to the",
    "start": "1298620",
    "end": "1307070"
  },
  {
    "text": "start address and the length of the shellcode and the wrapper will invoke which were protected inside to set the",
    "start": "1307070",
    "end": "1314010"
  },
  {
    "text": "excluded beat of the shellcode and then jump over this wrapper code is firstly used by CV 2014 there were 5 1 5 the",
    "start": "1314010",
    "end": "1323430"
  },
  {
    "text": "searching pattern for this wrapper hasn't changed ever since until flash",
    "start": "1323430",
    "end": "1328740"
  },
  {
    "text": "version on the - the reason for this changing is a new mitigation called a",
    "start": "1328740",
    "end": "1334950"
  },
  {
    "text": "memory protector is introduced into flash versions on the - but as this new",
    "start": "1334950",
    "end": "1340590"
  },
  {
    "text": "medication doesn't affect our exploitation or the vulnerabilities so I have keep as its demonstration at",
    "start": "1340590",
    "end": "1348420"
  },
  {
    "text": "medication part but I will mention this mitigation later in the conclusion",
    "start": "1348420",
    "end": "1353720"
  },
  {
    "text": "so after invoke the wrapper and then we'll jump over to the shellcode the",
    "start": "1353720",
    "end": "1359670"
  },
  {
    "text": "demo the code is running and expelling the with primitive part will be a little",
    "start": "1359670",
    "end": "1367770"
  },
  {
    "text": "time consuming as you can see there are 6 or 10 lines for the X PRIZE work for",
    "start": "1367770",
    "end": "1373230"
  },
  {
    "text": "the reprint the work this is highly weighted compared to the traditional a vector + index number",
    "start": "1373230",
    "end": "1381649"
  },
  {
    "text": "so currently what we have discussed this and there 32-bit environment what about 64-bit environment first thing the",
    "start": "1387340",
    "end": "1396620"
  },
  {
    "text": "pointer is changing from four bytes long to eight bytes long and many class are in different size as a result P SDK and",
    "start": "1396620",
    "end": "1404630"
  },
  {
    "text": "track these two classes and now in different size though they cannot occupy each other we should find another class",
    "start": "1404630",
    "end": "1411770"
  },
  {
    "text": "to occupy the memory of P SDK and that is media resource new resources and also",
    "start": "1411770",
    "end": "1418280"
  },
  {
    "text": "under unique or package so it is shared within a partition and it contains",
    "start": "1418280",
    "end": "1423650"
  },
  {
    "text": "string inside so after P SDK is released media resource with an occupies memory and",
    "start": "1423650",
    "end": "1428690"
  },
  {
    "text": "this time the type confusion function call will treat the f0x off staff to be",
    "start": "1428690",
    "end": "1434210"
  },
  {
    "text": "a reference card decremented religions memory if the reference count is 0 so this is very similar with 32-bit but",
    "start": "1434210",
    "end": "1442180"
  },
  {
    "text": "except this time we cannot control the f0x of that memory with milli resource",
    "start": "1442180",
    "end": "1447230"
  },
  {
    "text": "itself just 0 is very large number and this memory is a spawn of new resource",
    "start": "1447230",
    "end": "1453410"
  },
  {
    "text": "universe is only 40 or 50 bytes long so",
    "start": "1453410",
    "end": "1459710"
  },
  {
    "text": "we should occupy it in the control this part of memory before P SDK is released",
    "start": "1459710",
    "end": "1466060"
  },
  {
    "text": "there are two reasons why we can invoke set by the way one at one time to",
    "start": "1466060",
    "end": "1472240"
  },
  {
    "text": "control this part of memory the first reason is that P SDK and track and MIDI",
    "start": "1472240",
    "end": "1478700"
  },
  {
    "text": "resource all these classes we have discussed and the medical package there using a different hit partition compared",
    "start": "1478700",
    "end": "1484910"
  },
  {
    "text": "to traditional flash objects traditionally other flash objects are",
    "start": "1484910",
    "end": "1491300"
  },
  {
    "text": "completely managed by MMP see where were to Allah on self defined flash it but",
    "start": "1491300",
    "end": "1498500"
  },
  {
    "text": "for this classes we have discussed their managed by malloc and free directly on",
    "start": "1498500",
    "end": "1503840"
  },
  {
    "text": "the deferred heap of the CRT tip so that means the memory of P SDK and this",
    "start": "1503840",
    "end": "1511100"
  },
  {
    "text": "classes are very pure there won't be any interferes of the memory after P SDK",
    "start": "1511100",
    "end": "1517610"
  },
  {
    "text": "into our set so instead of added weight is invoked it is the first time the memory of after",
    "start": "1517610",
    "end": "1525240"
  },
  {
    "text": "the memory after P SDK is allocated so that is reason we can control the part",
    "start": "1525240",
    "end": "1531059"
  },
  {
    "text": "of memory and the second reason is P SDK take 40 or 50 bytes and there are two",
    "start": "1531059",
    "end": "1537659"
  },
  {
    "text": "memory blocks inside battery as you can remember so these two three memory blocks added together help us control",
    "start": "1537659",
    "end": "1545370"
  },
  {
    "text": "the memory of fzero-x offset then we can set that whether to do one and this time",
    "start": "1545370",
    "end": "1551940"
  },
  {
    "text": "type of confusion call 10 works correctly and release the memory of new resource so again we're in the r8",
    "start": "1551940",
    "end": "1558510"
  },
  {
    "text": "primitive situation but this time we cannot just read a stable location",
    "start": "1558510",
    "end": "1564769"
  },
  {
    "text": "spread with vector object anymore since",
    "start": "1564769",
    "end": "1571519"
  },
  {
    "text": "traditional flash objects under 64-bit environment are high 32-bit randomized",
    "start": "1571519",
    "end": "1577019"
  },
  {
    "text": "so even we have sprayed terabytes of memory who cannot control is a stable",
    "start": "1577019",
    "end": "1583260"
  },
  {
    "text": "location with our control the data likely find that springing network flash",
    "start": "1583260",
    "end": "1591990"
  },
  {
    "text": "objects doesn't derive the high entropy and it would under Windows 7 so I just",
    "start": "1591990",
    "end": "1597570"
  },
  {
    "text": "choose another class under medical package it is a tacit as you notice",
    "start": "1597570",
    "end": "1603649"
  },
  {
    "text": "malloc so and as it works like an array the class inside it will duplicate himself",
    "start": "1603649",
    "end": "1610740"
  },
  {
    "text": "and spring the memory when we invoke the constructor all the class memory will be",
    "start": "1610740",
    "end": "1619370"
  },
  {
    "text": "the third highest degree will remain 0 so we can start to brutal for searching",
    "start": "1619370",
    "end": "1625200"
  },
  {
    "text": "this buried memory and one of the class being sprayed as needed resource as you can remember it contains the string",
    "start": "1625200",
    "end": "1631590"
  },
  {
    "text": "inside also there is a inter value so this interval can be used as a flag we",
    "start": "1631590",
    "end": "1636750"
  },
  {
    "text": "when we find a flag during approved for searching we know the new resources here and metadata is adjacent",
    "start": "1636750",
    "end": "1643490"
  },
  {
    "text": "metadata can be used as a replacement of vector and byte array",
    "start": "1643490",
    "end": "1649908"
  },
  {
    "text": "it contains the buffer inside just like lectura by the rate and this buffer can",
    "start": "1650630",
    "end": "1656690"
  },
  {
    "text": "be is defined where fixed offset only to notice that the offset for the second",
    "start": "1656690",
    "end": "1664280"
  },
  {
    "text": "stab is calculated where a hash function the hash value is only zero to seven and",
    "start": "1664280",
    "end": "1670190"
  },
  {
    "text": "the input value is the key names that is the first parameter of set byte array so",
    "start": "1670190",
    "end": "1679070"
  },
  {
    "text": "would there is very likely a hash collision but we don't add one and hash collision or otherwise there will be a",
    "start": "1679070",
    "end": "1686690"
  },
  {
    "text": "list structure inside metadata and finding the buffer inside would be very much difficult so we just choose",
    "start": "1686690",
    "end": "1694280"
  },
  {
    "text": "different names as and make sure their hash value is different as we don't need",
    "start": "1694280",
    "end": "1699500"
  },
  {
    "text": "so many buffers so after all of this has",
    "start": "1699500",
    "end": "1704750"
  },
  {
    "text": "done we can find other buffers and this buffers can be filled and linked just like 32-bit and the fake would function",
    "start": "1704750",
    "end": "1711800"
  },
  {
    "text": "type of trick works just like before so currently all of this has been discussed",
    "start": "1711800",
    "end": "1717890"
  },
  {
    "text": "and their Windows seven what about Windows 10 first I didn't intend to view",
    "start": "1717890",
    "end": "1724340"
  },
  {
    "start": "1720000",
    "end": "1960000"
  },
  {
    "text": "the full workload exploit any windows pain as for window 7 there are many new things new media new mitigations new",
    "start": "1724340",
    "end": "1731270"
  },
  {
    "text": "hips barry method and new hip partition also there are a lot of reverse",
    "start": "1731270",
    "end": "1737030"
  },
  {
    "text": "engineering of water closets and they're mediocre so i don't want to do all of this and open it again I just needed to",
    "start": "1737030",
    "end": "1744380"
  },
  {
    "text": "take a quick peek to see with a different full understand first P SDK is still malloc on the low fraggin hip the",
    "start": "1744380",
    "end": "1752900"
  },
  {
    "text": "rfh this is absolutely the same with Windows 7 but our FH itself is changing",
    "start": "1752900",
    "end": "1759620"
  },
  {
    "text": "from windows 7 to Windows 10 there is a heap randomization added into Windows 10",
    "start": "1759620",
    "end": "1767050"
  },
  {
    "text": "so for Windows 7 when the memory of P SDK is released it comes down to the",
    "start": "1767050",
    "end": "1773270"
  },
  {
    "text": "freely comes down to the end of the frailest and when next allocation is coming the",
    "start": "1773270",
    "end": "1778970"
  },
  {
    "text": "last memory blocks being freed will be the next one being allocated so it is very pretty but we know that the memory of PSD K",
    "start": "1778970",
    "end": "1786320"
  },
  {
    "text": "will be occupied with just one occupation with just one allocation but",
    "start": "1786320",
    "end": "1793460"
  },
  {
    "text": "for Windows 10 there's a bitmap controlling the low pragma HIPPA allocation but we can still use the free",
    "start": "1793460",
    "end": "1801440"
  },
  {
    "text": "list model to explain what happened so when the memory of PSD K is released it",
    "start": "1801440",
    "end": "1806990"
  },
  {
    "text": "comes down to the free list let's say there is 16 blocks in this free list and when next allocation is coming our FH",
    "start": "1806990",
    "end": "1815450"
  },
  {
    "text": "will randomly choose one of those 16 blocks to the next one being allocated meaning that we don't know if the memory",
    "start": "1815450",
    "end": "1822140"
  },
  {
    "text": "of PSD K is occupied or not with just one allocation so a director idea is to",
    "start": "1822140",
    "end": "1828620"
  },
  {
    "text": "bypass this is Multiple Occupation as you have said there are 16 blocks so 100",
    "start": "1828620",
    "end": "1833810"
  },
  {
    "text": "we just use 16 allocations make sure the P SDK memory is occupied but this is",
    "start": "1833810",
    "end": "1840770"
  },
  {
    "text": "only partially correct as you can see for the first 15 allocation everything goes normal but",
    "start": "1840770",
    "end": "1847790"
  },
  {
    "text": "for the 16th allocation error SH won't",
    "start": "1847790",
    "end": "1852890"
  },
  {
    "text": "use the last memory block inside this free list and it will allocate a new free list and choose one of those memory",
    "start": "1852890",
    "end": "1859490"
  },
  {
    "text": "blocks to be next one being allocated just to enlarge the randomization but",
    "start": "1859490",
    "end": "1865700"
  },
  {
    "text": "this randomization is still limited after two or three cycles of free list allocation our F issue will finally",
    "start": "1865700",
    "end": "1873440"
  },
  {
    "text": "release realize that well I still have a memory block in by the first frailest",
    "start": "1873440",
    "end": "1879320"
  },
  {
    "text": "and why not using it is waste so that is the moment our sh will allocated last",
    "start": "1879320",
    "end": "1885970"
  },
  {
    "text": "memory block inside the first free list and that is the moment we know the memory of PSD is occupied all of this",
    "start": "1885970",
    "end": "1894260"
  },
  {
    "text": "demonstrations is based on black box keep experiments but I have discussed",
    "start": "1894260",
    "end": "1899870"
  },
  {
    "text": "with other people who have done fully reverse engineering of indeed L to see",
    "start": "1899870",
    "end": "1906110"
  },
  {
    "text": "how our epoch works and all of this demonstrations has been confirmed so",
    "start": "1906110",
    "end": "1911750"
  },
  {
    "text": "meaning that after P SDK is released we can construct tracks hundreds of times and this will make",
    "start": "1911750",
    "end": "1919060"
  },
  {
    "text": "sure the memory of PS DK is occupied and this time the type confusion phone call",
    "start": "1919060",
    "end": "1924340"
  },
  {
    "text": "actually makes things easier for us we do need to control any part of memory just pass the parameter to u1 and then",
    "start": "1924340",
    "end": "1931840"
  },
  {
    "text": "the memory of track will be released and then we're in the grid printing situation but this time still for the",
    "start": "1931840",
    "end": "1939010"
  },
  {
    "text": "Federation will need multiple occupation meaning that for each cycle we need to use multiple satellite array to control",
    "start": "1939010",
    "end": "1946750"
  },
  {
    "text": "the content off track but I didn't go in a step further so other windows 10 brings us a topping worms use that their",
    "start": "1946750",
    "end": "1954160"
  },
  {
    "text": "users are free and still finding its way for rate primitives so for the",
    "start": "1954160",
    "end": "1961330"
  },
  {
    "start": "1960000",
    "end": "2264000"
  },
  {
    "text": "conclusion part first of all things after we're pouring this is due to Adobe",
    "start": "1961330",
    "end": "1968070"
  },
  {
    "text": "their faces manually remove the reference pointer from the access code level which is used to invoke release",
    "start": "1968070",
    "end": "1976030"
  },
  {
    "text": "and when as that when is that manually meaning that if this fix can be bypassed so there goes another vulnerability CV",
    "start": "1976030",
    "end": "1985090"
  },
  {
    "text": "2016 4 for 8 and I bypass this first expired declare on to reference pointing",
    "start": "1985090",
    "end": "1991390"
  },
  {
    "text": "to P SDK and invoke release was one of them but triggering the users are free",
    "start": "1991390",
    "end": "1996850"
  },
  {
    "text": "with another and to explore the second vulnerability there is I find that there",
    "start": "1996850",
    "end": "2003690"
  },
  {
    "text": "is only one line change necessary for the export work only the Tribune Park",
    "start": "2003690",
    "end": "2009330"
  },
  {
    "text": "and but when the want try to explore the second buck it is now flash version 22",
    "start": "2009330",
    "end": "2015600"
  },
  {
    "text": "as I have told you before there was a memory protector a new mitigation is",
    "start": "2015600",
    "end": "2021360"
  },
  {
    "text": "added into adobe flash memory of the detector is used to delay the free of",
    "start": "2021360",
    "end": "2027360"
  },
  {
    "text": "objects mitigation many use for users are free and maybe some can learn from",
    "start": "2027360",
    "end": "2032820"
  },
  {
    "text": "Microsoft ie that this medication doesn't affect our exploitation or the",
    "start": "2032820",
    "end": "2038940"
  },
  {
    "text": "vulnerability even if we're talking about use of the free and the reason for",
    "start": "2038940",
    "end": "2045060"
  },
  {
    "text": "that is memory protector only may be only focusing on objects that are managed by MMP see not",
    "start": "2045060",
    "end": "2052800"
  },
  {
    "text": "our Malik and the freight manage objects or maybe this member protector only",
    "start": "2052800",
    "end": "2058649"
  },
  {
    "text": "focusing on stack pointers but our pointers saved in the heap design PSD K",
    "start": "2058650",
    "end": "2065970"
  },
  {
    "text": "but I haven't give it a song the thorough analysis as this it doesn't",
    "start": "2065970",
    "end": "2071820"
  },
  {
    "text": "affect my exploitation so for the second fix Adobe choose again to will remove",
    "start": "2071820",
    "end": "2080760"
  },
  {
    "text": "this function from echo script level so if they really don't need this function why should they introduce it at first",
    "start": "2080760",
    "end": "2087629"
  },
  {
    "text": "place so maybe this is just another temporary piece just as before ask Matt",
    "start": "2087630",
    "end": "2092879"
  },
  {
    "text": "September fix many times before so once I have a heap overflow and after a patch",
    "start": "2092880",
    "end": "2099870"
  },
  {
    "text": "the Hebrew flow is gone and the reason for that is the heap memory is double so",
    "start": "2099870",
    "end": "2106230"
  },
  {
    "text": "my Hebrew look and not overfilled that much of memory and that is reason it's gone but after several versions of Adobe",
    "start": "2106230",
    "end": "2112860"
  },
  {
    "text": "Flash the bug is back so I checked the code again I see the calculation of the",
    "start": "2112860",
    "end": "2118890"
  },
  {
    "text": "heap memory is rolling back so the truth is the first speaks is temporary for",
    "start": "2118890",
    "end": "2124650"
  },
  {
    "text": "some other people's people flow but after several versions after doping figure out how to calculate the right",
    "start": "2124650",
    "end": "2131610"
  },
  {
    "text": "size of heap they rolling back to the old calculation but that it doesn't speak doesn't speak my Hebrew flow so it",
    "start": "2131610",
    "end": "2138570"
  },
  {
    "text": "is back so if this speaks is actually a temporary fix after several versions of flash maybe it",
    "start": "2138570",
    "end": "2144420"
  },
  {
    "text": "will come back if still they use manual a with remove of this pointer there may",
    "start": "2144420",
    "end": "2149940"
  },
  {
    "text": "be still a by us so for the use of the use of free I think it's relevant common",
    "start": "2149940",
    "end": "2156720"
  },
  {
    "text": "way to explore using for freeze in dobby flash although the first part that it",
    "start": "2156720",
    "end": "2162870"
  },
  {
    "text": "used a type confusion function call to release the class memory seems a little complicated but I have accomplished this",
    "start": "2162870",
    "end": "2170690"
  },
  {
    "text": "under three versions of Adobe Flash and 32-bit and 64-bit and Windows seven and",
    "start": "2170690",
    "end": "2176340"
  },
  {
    "text": "a third to speed and Windows 10 so I think it is still practical only",
    "start": "2176340",
    "end": "2181600"
  },
  {
    "text": "you need a lot of reverse engineering and currently we're dealing with a",
    "start": "2181600",
    "end": "2187500"
  },
  {
    "text": "string object and thus give us a rate primitive and in the future if we can",
    "start": "2187500",
    "end": "2192610"
  },
  {
    "text": "find some other or relaxed structure to prop with maybe you can get a right",
    "start": "2192610",
    "end": "2197710"
  },
  {
    "text": "primitive and that it will be much helpful for the exploit of work and the winners pain and the problem for the",
    "start": "2197710",
    "end": "2206530"
  },
  {
    "text": "string objects is when you try to raid the target memory everything goes well but we try to write the target memory it",
    "start": "2206530",
    "end": "2214720"
  },
  {
    "text": "will allocate a new buffer to say what you're going to write and then save the",
    "start": "2214720",
    "end": "2220330"
  },
  {
    "text": "pointer inside so we cannot just write and in target memory but if you can find",
    "start": "2220330",
    "end": "2225700"
  },
  {
    "text": "another or relax rupture which use a target address to be the one written",
    "start": "2225700",
    "end": "2230980"
  },
  {
    "text": "that that that is we can find a right primitive and the idea behind it use",
    "start": "2230980",
    "end": "2237580"
  },
  {
    "text": "that their users are free I think is more common as I've seen such release and occupation and type confusion things",
    "start": "2237580",
    "end": "2245440"
  },
  {
    "text": "in an iOS kernel exploit so I think this method the idea behind this method can",
    "start": "2245440",
    "end": "2252460"
  },
  {
    "text": "be implemented in other platforms and software's so that is all for my",
    "start": "2252460",
    "end": "2258190"
  },
  {
    "text": "presentation thank you very much",
    "start": "2258190",
    "end": "2262440"
  }
]