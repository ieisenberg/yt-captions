[
  {
    "text": "welcome to look no hands the remote interactionists attack surface of the iPhone you're in lagoon GHI and the",
    "start": "30",
    "end": "6750"
  },
  {
    "text": "speaker is Natalie's ivanovitch before we begin though we have a few brief notes please stop by the business Hall",
    "start": "6750",
    "end": "13349"
  },
  {
    "text": "located in Mandalay Bay Oceanside and shoreline ballrooms on level two during",
    "start": "13349",
    "end": "18480"
  },
  {
    "text": "the day and for the Welcome Reception at 5:30 this evening the blackhat Arsenal is in the business hall on level 2 and",
    "start": "18480",
    "end": "25170"
  },
  {
    "text": "join us for the pony Awards in lagoon JKL at 6:30 the rap room for this call",
    "start": "25170",
    "end": "33809"
  },
  {
    "text": "offer for this talk will be in reef a which is down the hall and please put your phone on vibrate or silent without",
    "start": "33809",
    "end": "41010"
  },
  {
    "text": "further ado Natalie [Music]",
    "start": "41010",
    "end": "47030"
  },
  {
    "text": "hi everyone thanks so much for coming today I'm going to talk about the remote",
    "start": "51350",
    "end": "57900"
  },
  {
    "text": "interaction list attack surface of the iPhone I'm Natalie savanah and I'm",
    "start": "57900",
    "end": "64230"
  },
  {
    "text": "a member of project zero at Google and I fell remotes are something we've been",
    "start": "64230",
    "end": "69240"
  },
  {
    "text": "thinking about for a long time Oh while ago there was this tweet from chowky that said rumor says that from a",
    "start": "69240",
    "end": "76860"
  },
  {
    "text": "zero-day exploit perspective the security of iMessage is less than these other messengers and if you don't know",
    "start": "76860",
    "end": "84510"
  },
  {
    "text": "chowky he runs a rhodium which is a company that pays for all sorts of",
    "start": "84510",
    "end": "89760"
  },
  {
    "text": "exploits including iPhone exploits and this says that they'll pay five hundred",
    "start": "89760",
    "end": "95550"
  },
  {
    "text": "thousand dollars for an iMessage remote and one point five million dollars for",
    "start": "95550",
    "end": "102540"
  },
  {
    "text": "zero click promote jailbreak on an iPhone also there was this article about",
    "start": "102540",
    "end": "109619"
  },
  {
    "text": "the UAE secret hacking team and their tool called Karma and some excerpts here",
    "start": "109619",
    "end": "115409"
  },
  {
    "text": "are that it did not require a target to click and it relied on an undisclosed",
    "start": "115409",
    "end": "121320"
  },
  {
    "text": "vulnerability in iMessage so there's these little glimmers of the fact that",
    "start": "121320",
    "end": "128280"
  },
  {
    "text": "attackers are using this type of vulnerability but then when you look at public research there's not so much",
    "start": "128280",
    "end": "134280"
  },
  {
    "text": "information and there's even people that doubt that these types of bugs exist so",
    "start": "134280",
    "end": "139380"
  },
  {
    "text": "I wanted to get to the bottom of this and find out whether these bikes exist and if so where are they in the system",
    "start": "139380",
    "end": "146400"
  },
  {
    "text": "and how do they work also I wondered was it just iMessage or are there other",
    "start": "146400",
    "end": "152459"
  },
  {
    "text": "remote attack surfaces too and I wondered if these bugs are exploitable",
    "start": "152459",
    "end": "157850"
  },
  {
    "text": "so to start off what do I mean by an interaction list bug or zero click or a",
    "start": "157850",
    "end": "164790"
  },
  {
    "text": "fully remote bug well it means that there is absolutely no user interaction required you can just sit a device",
    "start": "164790",
    "end": "171690"
  },
  {
    "text": "somewhere and run your bug or exploit and it will compromise that device also",
    "start": "171690",
    "end": "178800"
  },
  {
    "text": "I would say a short wait time is a good requirement to just as people will be like Oh someone will",
    "start": "178800",
    "end": "185209"
  },
  {
    "text": "eventually unlock their phone someone will eventually open the browser but that's not really what we're looking for here we're looking for the ones that",
    "start": "185209",
    "end": "191930"
  },
  {
    "text": "require no click and work fast and also they need to require a reasonable set of",
    "start": "191930",
    "end": "198620"
  },
  {
    "text": "identifiers usually a person's email address or their phone number once you",
    "start": "198620",
    "end": "203690"
  },
  {
    "text": "get into things like IP address or IMEI you need to also find a way to get that identifier or it's harder for an",
    "start": "203690",
    "end": "210890"
  },
  {
    "text": "attacker to target someone so thinking about this this is the remote attack",
    "start": "210890",
    "end": "218120"
  },
  {
    "text": "surface the iPhone that I looked at there is SMS which is text messages and",
    "start": "218120",
    "end": "223700"
  },
  {
    "text": "then there's all these special sms's that your carrier can send for example there is supple which sends GPS",
    "start": "223700",
    "end": "231170"
  },
  {
    "text": "ephemeris data and then there is MMS which is basically SMS if you have media",
    "start": "231170",
    "end": "237739"
  },
  {
    "text": "attachment and then there is iMessage which is the messaging client on the",
    "start": "237739",
    "end": "244400"
  },
  {
    "text": "iPhone that uses Apple server for messages and this regular messages and",
    "start": "244400",
    "end": "249769"
  },
  {
    "text": "then there's extensions have you ever seen the thing on the iPhone where you point the camera at your face and",
    "start": "249769",
    "end": "255320"
  },
  {
    "text": "there's a giraffe and you move your mouth and the giraffe talks like you're a mouse that's an iMessage extension and",
    "start": "255320",
    "end": "261829"
  },
  {
    "text": "that's also part of the attack surface and then there are things that you can",
    "start": "261829",
    "end": "268160"
  },
  {
    "text": "go over the public internet there's the email client if someone sends you an",
    "start": "268160",
    "end": "273440"
  },
  {
    "text": "email sometimes it'll be processed even if you don't open it yet and then there's also a packet processing on the",
    "start": "273440",
    "end": "280430"
  },
  {
    "text": "public Internet no you need an IP address for that first usually so I",
    "start": "280430",
    "end": "285710"
  },
  {
    "text": "started off by looking at SMS and MMS and in hindsight this was the wrong call I had this idea that everyone talks",
    "start": "285710",
    "end": "293419"
  },
  {
    "text": "about iMessage so much you know one must look for bugs in the other places and there",
    "start": "293419",
    "end": "299000"
  },
  {
    "text": "be lots of bugs in them that was wrong this was actually a fairly difficult attack surface so I looked at the column",
    "start": "299000",
    "end": "305330"
  },
  {
    "text": "Center binary which on the iPhone is where SMS is are processed and gonna",
    "start": "305330",
    "end": "311990"
  },
  {
    "text": "flip through these quickly but this is the message flow this is more or people if they want to look at this",
    "start": "311990",
    "end": "317000"
  },
  {
    "text": "at home these were generally the methods that get executed when you get a raw SMS",
    "start": "317000",
    "end": "322850"
  },
  {
    "text": "and this is a similar diagram for MMS so",
    "start": "322850",
    "end": "328880"
  },
  {
    "text": "the first thing I did was I wrote applications that exported some of these symbols and then sizes I'm just sending",
    "start": "328880",
    "end": "335720"
  },
  {
    "text": "random data that didn't work and then I noticed that the SMS on the iPhone",
    "start": "335720",
    "end": "343130"
  },
  {
    "text": "actually has a built in SMS emulator and it's incomplete it requires a library",
    "start": "343130",
    "end": "348980"
  },
  {
    "text": "which I assume is on Apple internal devices but I didn't have so I reconstructed this library I basically",
    "start": "348980",
    "end": "357980"
  },
  {
    "text": "made up a library that on a jailbroken iPhone will call the right functions and",
    "start": "357980",
    "end": "363350"
  },
  {
    "text": "it would basically allow you to simulate a deliverer PDU being sent to your device and I put this on github today so",
    "start": "363350",
    "end": "371180"
  },
  {
    "text": "if you go to this location you can get a lot of tools including this SMS",
    "start": "371180",
    "end": "377240"
  },
  {
    "text": "simulator and I use this for fussing but unfortunately that didn't really work out either and I didn't find any bugs in",
    "start": "377240",
    "end": "384590"
  },
  {
    "text": "SMS but then I started looking at those special SMS is that your carrier can",
    "start": "384590",
    "end": "390890"
  },
  {
    "text": "send and one thing that I noticed was visual voicemail and these are little",
    "start": "390890",
    "end": "396020"
  },
  {
    "text": "voicemail is when you use your mobile device you'll have an email like format",
    "start": "396020",
    "end": "401600"
  },
  {
    "text": "for your voicemail messages so you'll see the number and then you'll see the play button and the message and",
    "start": "401600",
    "end": "407060"
  },
  {
    "text": "sometimes a transcript and the way this actually works is that your carrier will",
    "start": "407060",
    "end": "412100"
  },
  {
    "text": "send you an SMS and that will have an IMAP server a location in it then it will ping that IMAP server and pull down",
    "start": "412100",
    "end": "418130"
  },
  {
    "text": "all your messages and they seemed ok if it was just the carrier that could do this but I tried sending the messages",
    "start": "418130",
    "end": "424970"
  },
  {
    "text": "and you could send this from any SMS device you know I could send it from the",
    "start": "424970",
    "end": "430520"
  },
  {
    "text": "SIM card I bought at the gas station so I looked at this message a little bit",
    "start": "430520",
    "end": "436100"
  },
  {
    "text": "more and here's an example of it so like for example would replace bbm AT&T comm",
    "start": "436100",
    "end": "442520"
  },
  {
    "text": "with you no matter shankha comm and then it would just ping my eye",
    "start": "442520",
    "end": "448190"
  },
  {
    "text": "mapserver and I thought this would actually be a pretty good attack surface here's why on iOS devices they use the",
    "start": "448190",
    "end": "457190"
  },
  {
    "text": "same library for bbm as they do for regular IMAP and email and that's kind",
    "start": "457190",
    "end": "463490"
  },
  {
    "text": "of a change of italic surface when you think about imap4 email really it's the server that's the attack surface you",
    "start": "463490",
    "end": "470150"
  },
  {
    "text": "know since the beginning of IMAP people have tried to compromise servers to read everyone's emails but the idea of a",
    "start": "470150",
    "end": "478370"
  },
  {
    "text": "client being attacked by a malicious server that's not really an attack surface in email because the only used",
    "start": "478370",
    "end": "485150"
  },
  {
    "text": "server as you trust and it's a lot less common for a user to put any server in but visual voicemail changes this attack",
    "start": "485150",
    "end": "492800"
  },
  {
    "text": "surface it means now that anyone are from a remote context can make you ping",
    "start": "492800",
    "end": "498500"
  },
  {
    "text": "an IMAP server for messages so I wondered if the people who wrote the library had thought about this context",
    "start": "498500",
    "end": "504050"
  },
  {
    "text": "switch and hardened that surface so I took a look at it and there are some",
    "start": "504050",
    "end": "510590"
  },
  {
    "text": "limitations here one is that your carrier has to support it and I put some asterisks on that in that I think there",
    "start": "510590",
    "end": "517580"
  },
  {
    "text": "is probably ways to get around this especially if you have a base station but no guarantees also some carriers",
    "start": "517580",
    "end": "524750"
  },
  {
    "text": "will filter this they'll have for example firewalls on their network they prevent you from hitting the server but",
    "start": "524750",
    "end": "531020"
  },
  {
    "text": "there was still lots of SIM cards I tried this with where that was not the case and finally your user has to have",
    "start": "531020",
    "end": "537110"
  },
  {
    "text": "used email or voice mail exactly once they have to have recorded a greeting or else this doesn't work so I reviewed the",
    "start": "537110",
    "end": "546080"
  },
  {
    "text": "IMAP server in Ida and I didn't find any bugs that way so I wrote a puzzler that",
    "start": "546080",
    "end": "552830"
  },
  {
    "text": "generated malformed IMAP and then I had this SMS simulator that I'd written",
    "start": "552830",
    "end": "558620"
  },
  {
    "text": "already so I was able to just make that ping my device over and over and over and then it would ping my IMAP server",
    "start": "558620",
    "end": "564770"
  },
  {
    "text": "over and over and over and then get all the fuzz down input back and doing this",
    "start": "564770",
    "end": "570230"
  },
  {
    "text": "I found one vulnerability I found this use after free in IMAP name",
    "start": "570230",
    "end": "576560"
  },
  {
    "text": "space processing and the way this works is there's a command an IMAP called list",
    "start": "576560",
    "end": "583950"
  },
  {
    "text": "and this will get the separator for the IMAP server which is typically a slash",
    "start": "583950",
    "end": "588960"
  },
  {
    "text": "or a backslash but it could be anything and then it'll try and get the prefix which is sometimes necessary to access a",
    "start": "588960",
    "end": "595770"
  },
  {
    "text": "path calling this command called namespace and what happens is it will",
    "start": "595770",
    "end": "600900"
  },
  {
    "text": "call list and then it will cache this separator and then it will call namespace and if namespace fails it will",
    "start": "600900",
    "end": "606930"
  },
  {
    "text": "free the separator in the connection but then it doesn't check the return value of this call so what ends up happening",
    "start": "606930",
    "end": "613800"
  },
  {
    "text": "is that it will continue to use this cached value even though it's been freed",
    "start": "613800",
    "end": "619490"
  },
  {
    "text": "so this is a use after free it lets you call a selector on a freedom nsobject",
    "start": "619490",
    "end": "625680"
  },
  {
    "text": "but it was also kind of a limited info leak in that what the system actually does with this separator is it will save",
    "start": "625680",
    "end": "633300"
  },
  {
    "text": "it for later and then when it tries to get a mailbox it will actually append it so sometimes when I use this bug I would",
    "start": "633300",
    "end": "640830"
  },
  {
    "text": "get you know a pointer back or some data back but it was like super unreliable like I could get it to like three out of",
    "start": "640830",
    "end": "648720"
  },
  {
    "text": "a thousand times tops and it would lock the process otherwise I would have to restart it so I never got this reliable",
    "start": "648720",
    "end": "655470"
  },
  {
    "text": "enough to be able to do anything really useful with it but it did seem like an",
    "start": "655470",
    "end": "660540"
  },
  {
    "text": "interesting bug so then I started looking at the email client um so what",
    "start": "660540",
    "end": "666420"
  },
  {
    "text": "happened here is that looking at this IMAP server I did find some parts that",
    "start": "666420",
    "end": "672450"
  },
  {
    "text": "were only accessible via email for example I'm a would only process certain mime types so I wondered if I could hit",
    "start": "672450",
    "end": "680460"
  },
  {
    "text": "some of this code just by sending an email so I tested this with the native email client on the iPhone I'll admit I",
    "start": "680460",
    "end": "687630"
  },
  {
    "text": "I'm not clear on how realistic this setup is there's kind of two concerns",
    "start": "687630",
    "end": "693170"
  },
  {
    "text": "one is that email addresses or email providers sometimes use third-party clients and the other is that email",
    "start": "693170",
    "end": "699750"
  },
  {
    "text": "providers sometimes filter content so I think it would be hard to come up with a universal bug in mail because you have",
    "start": "699750",
    "end": "705930"
  },
  {
    "text": "to worry about every email provider or filtering it but I did my testing with Gmail set up on the Native Client and",
    "start": "705930",
    "end": "714150"
  },
  {
    "text": "hey I found one bug that worked found this one by code review as well and it",
    "start": "714150",
    "end": "719640"
  },
  {
    "text": "turned out to be fixed already basically it looked like it was",
    "start": "719640",
    "end": "724820"
  },
  {
    "text": "exploitable but difficult to exploit in 11.3 and by 12 the functionality had",
    "start": "724820",
    "end": "729930"
  },
  {
    "text": "been removed so it wasn't there anymore and it is probably the strangest bug I",
    "start": "729930",
    "end": "735180"
  },
  {
    "text": "have ever seen it was very very unusual so basically in email you have a mime",
    "start": "735180",
    "end": "742050"
  },
  {
    "text": "type which is the type of the message so it's like your text or your HTML or your",
    "start": "742050",
    "end": "747540"
  },
  {
    "text": "JPEG and the way it processes the mime type is that it will take the mime type",
    "start": "747540",
    "end": "753000"
  },
  {
    "text": "as a string and append to code to it and then call that method and that works",
    "start": "753000",
    "end": "760230"
  },
  {
    "text": "except there are other methods that start with the code so you could call all these other methods and some of them",
    "start": "760230",
    "end": "767040"
  },
  {
    "text": "had different numbers of parameters or unexpected functionality or that sort of",
    "start": "767040",
    "end": "772290"
  },
  {
    "text": "thing so once again this led to a crash in 11.3 but in 12 there were just few",
    "start": "772290",
    "end": "778890"
  },
  {
    "text": "more functions that started with the code so it didn't quite work out so then",
    "start": "778890",
    "end": "784110"
  },
  {
    "text": "I started looking at iMessage iMessage is the default messenger on the iPhone",
    "start": "784110",
    "end": "792420"
  },
  {
    "text": "it can send messages to both Macs and iPhones and it's an encrypted",
    "start": "792420",
    "end": "798180"
  },
  {
    "text": "peer-to-peer messaging format it has many many formatting features I",
    "start": "798180",
    "end": "803850"
  },
  {
    "text": "mentioned extensions there's other things like you can send bold text that",
    "start": "803850",
    "end": "809070"
  },
  {
    "text": "sort of thing and I worked with Samuel gross on this part of the project so um",
    "start": "809070",
    "end": "816300"
  },
  {
    "text": "to start off Samuel gross wrote a Thai message sending an intercepting client",
    "start": "816300",
    "end": "821670"
  },
  {
    "text": "it was pretty cool so basically it just used Frida to hook specifically the",
    "start": "821670",
    "end": "827610"
  },
  {
    "text": "dictionary being encoded or decoded and then you could see the incoming outgoing messages and it works on a Mac or an",
    "start": "827610",
    "end": "834630"
  },
  {
    "text": "iPhone and it's a little bit more work so I guess for sending you all we want to send from a Mac there's no good",
    "start": "834630",
    "end": "840150"
  },
  {
    "text": "reason to send from an iPhone but sometimes you want to see the message received by the iPhone and that was a",
    "start": "840150",
    "end": "846329"
  },
  {
    "text": "little bit of work to set up we ended up getting it working on both so this is what an iMessage looked like",
    "start": "846329",
    "end": "853200"
  },
  {
    "text": "and you can see it has some interesting fields there's like the P equals and that's here sending it to there's the",
    "start": "853200",
    "end": "861480"
  },
  {
    "text": "text which is hello blackhat a few other things the version here's what we think",
    "start": "861480",
    "end": "866820"
  },
  {
    "text": "kind of the interesting fields were I mentioned the text and then there's this",
    "start": "866820",
    "end": "873120"
  },
  {
    "text": "plug-in stuff so there's the balloon identifier which is kind of like a mime type for iMessage it'll say like oh this",
    "start": "873120",
    "end": "881370"
  },
  {
    "text": "is a talking draft or this is handwriting or that sort of thing and then the BP is the plug-in data and that",
    "start": "881370",
    "end": "890010"
  },
  {
    "text": "will use the data that's interpreted based on this balloon identifier and then there's kind of two more",
    "start": "890010",
    "end": "897240"
  },
  {
    "text": "interesting ones there's the participants which is where it goes and then there's the attribution ish info",
    "start": "897240",
    "end": "902340"
  },
  {
    "text": "and this is basically related to attachments where they're from so we",
    "start": "902340",
    "end": "907590"
  },
  {
    "text": "started to look at iMessage serialization because we noticed that these two fields BP and API we're",
    "start": "907590",
    "end": "914550"
  },
  {
    "text": "serialized using nskeyedarchiver serialization and basically this is a",
    "start": "914550",
    "end": "920340"
  },
  {
    "text": "format which is a plist which is basically an XML format and in this XML",
    "start": "920340",
    "end": "926400"
  },
  {
    "text": "format it contains classes and then it will call on the classes a method called init with coder to actually instantiate",
    "start": "926400",
    "end": "933420"
  },
  {
    "text": "the class and there have been some past bugs in it with coders including a few",
    "start": "933420",
    "end": "939540"
  },
  {
    "text": "that allowed local privilege escalation and found by Ian beer and here's an",
    "start": "939540",
    "end": "945000"
  },
  {
    "text": "example of something serialized with nskeyedarchiver serialization starting",
    "start": "945000",
    "end": "951510"
  },
  {
    "text": "on the left you can see that there's the",
    "start": "951510",
    "end": "956580"
  },
  {
    "text": "class so this is an nsurl you can see the class hierarchy and what what'll happen is when this is decoded",
    "start": "956580",
    "end": "963440"
  },
  {
    "text": "this object on the right will reference that class and then it'll calling it",
    "start": "963440",
    "end": "968760"
  },
  {
    "text": "with coder and then in it with coder will decode these two fields the NS dot base and the ana start relative and then",
    "start": "968760",
    "end": "975600"
  },
  {
    "text": "you can see the base is 6 which actually references this string now - encode see",
    "start": "975600",
    "end": "981630"
  },
  {
    "text": "so this format will be - serialized into an nsurl object in that way so",
    "start": "981630",
    "end": "987930"
  },
  {
    "text": "serialization has a few security features one of them is NS secure coding",
    "start": "987930",
    "end": "993899"
  },
  {
    "text": "and this is basically two features one is it requires that when a class creates",
    "start": "993899",
    "end": "999959"
  },
  {
    "text": "an init with coder they also have to create another method and this method cannot be inherited it has to be created",
    "start": "999959",
    "end": "1006860"
  },
  {
    "text": "directly and basically this just means that you cannot create an init with coder by mistake if you're a developer",
    "start": "1006860",
    "end": "1012230"
  },
  {
    "text": "you have to have exposed it on purpose the other thing is that it requires a",
    "start": "1012230",
    "end": "1017480"
  },
  {
    "text": "list of allowed classes to be provided when you're to serializing so if you're say to see realizing that URL you have",
    "start": "1017480",
    "end": "1023300"
  },
  {
    "text": "to say I wanted to serialize a URL or I want to serialize a URL or a dictionary",
    "start": "1023300",
    "end": "1029688"
  },
  {
    "text": "but you can't just leave it blank you have to limit it in some sort of way",
    "start": "1029689",
    "end": "1034750"
  },
  {
    "text": "unfortunately this and I secure coding is not enabled by default in fact",
    "start": "1034750",
    "end": "1039798"
  },
  {
    "text": "there's what I call safe and unsafe initialization methods for mesquita and",
    "start": "1039799",
    "end": "1045530"
  },
  {
    "text": "archiver's and you can see there's the safe ones at the top and the unsafe ones at the bottom and there's especially",
    "start": "1045530",
    "end": "1051710"
  },
  {
    "text": "this one I mean could anyone ever forget which one of these is safe and which one",
    "start": "1051710",
    "end": "1057799"
  },
  {
    "text": "of these is unsafe so we thought that it might be a good idea to see if anyone",
    "start": "1057799",
    "end": "1064130"
  },
  {
    "text": "accidentally did decoding insecurely there currently exists as I mentioned",
    "start": "1064130",
    "end": "1070429"
  },
  {
    "text": "where serialization happens um there's this VP in in springboard which is the",
    "start": "1070429",
    "end": "1076820"
  },
  {
    "text": "user user interface for the iPhone and this will basically first decode this BP",
    "start": "1076820",
    "end": "1084980"
  },
  {
    "text": "and then if it's an extension it will also call this method preview text on it which in practice is only used if a link",
    "start": "1084980",
    "end": "1092510"
  },
  {
    "text": "is being sent and mr. note in my opinion to kind of be the best attack surface",
    "start": "1092510",
    "end": "1098770"
  },
  {
    "text": "because I had the largest array of classes it would decode and also I was a very high a privilege level it runs as",
    "start": "1098770",
    "end": "1104990"
  },
  {
    "text": "mobile and it has no sandbox and then there's also mobile SMS which is the",
    "start": "1104990",
    "end": "1110750"
  },
  {
    "text": "actual SMS app which also decodes this with one click and then there's ATI which is an IM",
    "start": "1110750",
    "end": "1116600"
  },
  {
    "text": "agent and this one has kind of a smaller attack surface because it doesn't code",
    "start": "1116600",
    "end": "1122750"
  },
  {
    "text": "as many classes so our first idea was let's find an insecure deserialization",
    "start": "1122750",
    "end": "1129470"
  },
  {
    "text": "call and then let's create a WebKit instance and then exploitation will be solved because there's a lot of WebKit",
    "start": "1129470",
    "end": "1135590"
  },
  {
    "text": "vulnerabilities and there's a lot of nil and exploitation methods and maybe we could get a next way to work this way",
    "start": "1135590",
    "end": "1140840"
  },
  {
    "text": "and yeah we looked at springboard and we looked at Allium agent and yeah we did not find any insecure calls even though",
    "start": "1140840",
    "end": "1146900"
  },
  {
    "text": "the API was a little bit confusing um so then we decided let's look at these",
    "start": "1146900",
    "end": "1152720"
  },
  {
    "text": "extensions you know the requite a few of them and some of them looked new so it seemed",
    "start": "1152720",
    "end": "1158390"
  },
  {
    "text": "like a good attack surface and we hope that maybe they would misuse it a see realized the object and I found this",
    "start": "1158390",
    "end": "1165650"
  },
  {
    "text": "vulnerability which it's not a very good quality bug pretty much this extension",
    "start": "1165650",
    "end": "1172760"
  },
  {
    "text": "would decode a byte array and it would also decode a length of the byte array and then it would read out of bounds and",
    "start": "1172760",
    "end": "1179180"
  },
  {
    "text": "would trust the length of the byte array even though the byte array that's actually to serialize could have a different length so I don't think this",
    "start": "1179180",
    "end": "1186200"
  },
  {
    "text": "is a very exploitive old bug but I thought it was kind of interesting in the first place that you could have a bug like this remotely so we looked even",
    "start": "1186200",
    "end": "1195500"
  },
  {
    "text": "more one thing that we looked at a lot was this link presentation layer so the link presentation is if you send someone",
    "start": "1195500",
    "end": "1203060"
  },
  {
    "text": "a link they'll get a preview of the link look at an image maybe a preview of the",
    "start": "1203060",
    "end": "1208850"
  },
  {
    "text": "text I think this actually has fairly good design in that the person who sends the link takes all the risk it is loaded",
    "start": "1208850",
    "end": "1216590"
  },
  {
    "text": "on their device process with WebKit on their device and then only the results the image the text is sent to the other",
    "start": "1216590",
    "end": "1222560"
  },
  {
    "text": "device so we were hoping that maybe we could find a way to trick this to make",
    "start": "1222560",
    "end": "1228140"
  },
  {
    "text": "it so that maybe the link gets loaded on the receiving device and then that's a WebKit instance that could be",
    "start": "1228140",
    "end": "1233660"
  },
  {
    "text": "exploitable but we looked and looked and didn't find anything like this so then",
    "start": "1233660",
    "end": "1240590"
  },
  {
    "text": "the other idea was to see if we could find a bug in the supported",
    "start": "1240590",
    "end": "1246350"
  },
  {
    "text": "deserialization code so we went through all the available and it with code or implementations and and",
    "start": "1246350",
    "end": "1253440"
  },
  {
    "text": "there were a lot so thinking about this BP field that gets decoded in",
    "start": "1253440",
    "end": "1258960"
  },
  {
    "text": "springboard this is the list of a cloud classes I won't read them all but it's like nsdictionary and a string and a lot",
    "start": "1258960",
    "end": "1265320"
  },
  {
    "text": "of other things they do have to support secure coding but most things that",
    "start": "1265320",
    "end": "1270899"
  },
  {
    "text": "inherit from these classes do anyhow because they're meant for some type of use from a different process but what's",
    "start": "1270899",
    "end": "1278760"
  },
  {
    "text": "also interesting is that the subclasses were allowed to and the subclasses come",
    "start": "1278760",
    "end": "1284519"
  },
  {
    "text": "from every library that is loaded into springboard even if it's not like not intended for serialization every one of",
    "start": "1284519",
    "end": "1291870"
  },
  {
    "text": "these class sub classes that allow serialization that gets loaded is allowed and this wasn't the entire idea",
    "start": "1291870",
    "end": "1298380"
  },
  {
    "text": "of a shared cache it does actually have to be DL opened or explicitly imported but it was still quite a large attack",
    "start": "1298380",
    "end": "1305190"
  },
  {
    "text": "surface so we look at these and I found",
    "start": "1305190",
    "end": "1310440"
  },
  {
    "text": "this vulnerability which is also a little bit unusual the problem is that",
    "start": "1310440",
    "end": "1316080"
  },
  {
    "text": "it allows a subclass of NS data that is file backed so that means that you load",
    "start": "1316080",
    "end": "1324299"
  },
  {
    "text": "the NS data and then you have a file location and then when you use the NS data that file is the data in the NS",
    "start": "1324299",
    "end": "1330750"
  },
  {
    "text": "data and this kind of had two problems one was that it trusted the",
    "start": "1330750",
    "end": "1336899"
  },
  {
    "text": "serialization length even though the file could be shorter so let's say you had like a 10 by trial and you said it",
    "start": "1336899",
    "end": "1342480"
  },
  {
    "text": "was 20 bytes long the rest of that would just be uninitialized memory but then there's another problem which turned out",
    "start": "1342480",
    "end": "1348630"
  },
  {
    "text": "to be a bit more serious which is that that's supposed to be a local file but the check for that turned out to be",
    "start": "1348630",
    "end": "1354630"
  },
  {
    "text": "faulty so you could fetch this from a URL which means this bug have a very interesting effect which is that you can",
    "start": "1354630",
    "end": "1361860"
  },
  {
    "text": "retrieve a file from an iPhone remotely without any user interaction the way",
    "start": "1361860",
    "end": "1368519"
  },
  {
    "text": "this works is that you create the NS data with the file and then you convert",
    "start": "1368519",
    "end": "1374460"
  },
  {
    "text": "it to the NS URL and this is a very long process so I'm going to gloss over it a bit but basically there were enough",
    "start": "1374460",
    "end": "1380820"
  },
  {
    "text": "objects could does she realize that so that you could encode it and you can make it a URL then you would use this",
    "start": "1380820",
    "end": "1385860"
  },
  {
    "text": "bug again and visit the URL because you're allowed to visit a remote URL and then this would just send you whatever",
    "start": "1385860",
    "end": "1393060"
  },
  {
    "text": "file for example the SMS database you were pointing to though it did have a size limitation about 40 kilobytes so",
    "start": "1393060",
    "end": "1401810"
  },
  {
    "text": "we're thinking about this and this very interesting bug and then Samuel had this idea what happens if a class does not",
    "start": "1401810",
    "end": "1411000"
  },
  {
    "text": "have an init with coder and you try to instantiate it and the answer weirdly is",
    "start": "1411000",
    "end": "1417120"
  },
  {
    "text": "regular inheritance rules apply so let's say in it with code are calls in it with capacity and you're a subclass it will",
    "start": "1417120",
    "end": "1423600"
  },
  {
    "text": "call the subclasses in it with capacity and so on for lots of different methods and there were a few inheritance checks",
    "start": "1423600",
    "end": "1431340"
  },
  {
    "text": "so some instantiations they would say like oh this has to be inherited directly but not always so we found this",
    "start": "1431340",
    "end": "1439650"
  },
  {
    "text": "vulnerability which is basically there's this class a PF array that had in it",
    "start": "1439650",
    "end": "1445380"
  },
  {
    "text": "with objects count defined and this is called by array in it with coder but",
    "start": "1445380",
    "end": "1451730"
  },
  {
    "text": "unfortunately this array class I'm assuming everything that's in it already has a reference because it doesn't keep",
    "start": "1451730",
    "end": "1458160"
  },
  {
    "text": "a reference to things that are in the array so if you create this array and then you drop all the references to the",
    "start": "1458160",
    "end": "1464760"
  },
  {
    "text": "objects in the array those objects just get freed so that's a very interesting",
    "start": "1464760",
    "end": "1471750"
  },
  {
    "text": "bug but then you know it gets even more complicated than that so remember the P",
    "start": "1471750",
    "end": "1478620"
  },
  {
    "text": "list I showed you where there is the numeric reference to the object the",
    "start": "1478620",
    "end": "1484620"
  },
  {
    "text": "string what if there's a cycle what if you know an object points back to itself",
    "start": "1484620",
    "end": "1491880"
  },
  {
    "text": "with the reference or what if the object goes through another few objects and then points back to itself and the",
    "start": "1491880",
    "end": "1498210"
  },
  {
    "text": "answer is it gets complicated so how does the serialization actually work in",
    "start": "1498210",
    "end": "1504570"
  },
  {
    "text": "this context well the start of let's say you're to serializing and s some class",
    "start": "1504570",
    "end": "1509780"
  },
  {
    "text": "well it will allocate that some class then it will put that in a temporary",
    "start": "1509780",
    "end": "1516840"
  },
  {
    "text": "dictionary which by the way doesn't have any references it's assuming that the fact that you decoded it means that you",
    "start": "1516840",
    "end": "1523140"
  },
  {
    "text": "already ever or the fact that you allocated it means you already have a reference then it calls init with coder",
    "start": "1523140",
    "end": "1528660"
  },
  {
    "text": "and that happens and then it will clear the template dictionary and put it in a permanent dictionary now what happens if",
    "start": "1528660",
    "end": "1535920"
  },
  {
    "text": "you decode an object twice well now you have these checks and what this will do",
    "start": "1535920",
    "end": "1541140"
  },
  {
    "text": "is it will pull it out at the dictionary then make a copy of it and then it'll",
    "start": "1541140",
    "end": "1548070"
  },
  {
    "text": "also check the permanent dictionary and then go through the init with coder um so this has some interesting problems",
    "start": "1548070",
    "end": "1555110"
  },
  {
    "text": "one is that the object can be used before the in it with coder is complete which isn't great that might violate",
    "start": "1555110",
    "end": "1561780"
  },
  {
    "text": "some assumptions but there's this other problem which is if you look at it like",
    "start": "1561780",
    "end": "1568080"
  },
  {
    "text": "in the documentation what an init function is supposed to do it is not guaranteed to return the object created",
    "start": "1568080",
    "end": "1573870"
  },
  {
    "text": "by Alec it can actually free that object and return its own object if it wants",
    "start": "1573870",
    "end": "1579180"
  },
  {
    "text": "and this temporary dictionary has no references so you could free the last reference in your in it and then use the",
    "start": "1579180",
    "end": "1586890"
  },
  {
    "text": "thing from the temp dict and it would not have any references to it and",
    "start": "1586890",
    "end": "1592490"
  },
  {
    "text": "actually never had found any bugs using the second problem but I just found it interesting because it's something that",
    "start": "1592490",
    "end": "1598740"
  },
  {
    "text": "I think is like problematic with the design that you know could cause a bug but what all the bugs ended up being in",
    "start": "1598740",
    "end": "1606870"
  },
  {
    "text": "is this cycle problem where the union",
    "start": "1606870",
    "end": "1612480"
  },
  {
    "text": "with coder is not complete and unfortunately this vulnerability was not",
    "start": "1612480",
    "end": "1617780"
  },
  {
    "text": "remediated properly in the fix so I have I removed the class but basically the",
    "start": "1617780",
    "end": "1622950"
  },
  {
    "text": "idea was is there is a class that when you decode it it creates a singly lit",
    "start": "1622950",
    "end": "1628290"
  },
  {
    "text": "list link of things and then it will based on that that list of things create",
    "start": "1628290",
    "end": "1634470"
  },
  {
    "text": "a buffer and then it will put things from the linked list into the buffer and if you can cycle in this you can end up",
    "start": "1634470",
    "end": "1642420"
  },
  {
    "text": "in a situation where the buffer is too small the linked list is calculated its length is calculated the",
    "start": "1642420",
    "end": "1649089"
  },
  {
    "text": "buffer is allocated and it's actually not done completing that list so this ends up being and out of bounds read",
    "start": "1649089",
    "end": "1655449"
  },
  {
    "text": "with you can call all the methods on and it's kind of an interesting bug and so",
    "start": "1655449",
    "end": "1660819"
  },
  {
    "text": "this has a lot of stuff missing but this is mostly just if you've ever wondered you know how do i POC this stuff the",
    "start": "1660819",
    "end": "1668019"
  },
  {
    "text": "answer is I look like a crazy person drawing these diagrams all day and it",
    "start": "1668019",
    "end": "1674439"
  },
  {
    "text": "took about eight hours to make this diagram with the pointer bad into an actual object that caused a crash",
    "start": "1674439",
    "end": "1681719"
  },
  {
    "text": "I'm sorry another bug like that involves cycles as well and this was in a",
    "start": "1681719",
    "end": "1689499"
  },
  {
    "text": "dictionary called NS known key dictionary one and this is a dictionary where you have to declare",
    "start": "1689499",
    "end": "1695019"
  },
  {
    "text": "the keys upfront and you'll get a lot of optimization in return for that and",
    "start": "1695019",
    "end": "1701459"
  },
  {
    "text": "basically this you would provide an array of key data and you would also provide a length and the length would",
    "start": "1701459",
    "end": "1710139"
  },
  {
    "text": "eventually be checked to be consistent with the key data but it didn't happen",
    "start": "1710139",
    "end": "1715629"
  },
  {
    "text": "soon enough so you would have the length and yelling you would be decoding the key and then you could end up using this",
    "start": "1715629",
    "end": "1720939"
  },
  {
    "text": "class before it was done and then that length won't be checked yet and this ended up being a memory corruption",
    "start": "1720939",
    "end": "1727349"
  },
  {
    "text": "vulnerability where it would go out of bounds before it hit this length check",
    "start": "1727349",
    "end": "1732359"
  },
  {
    "text": "so I was actually interesting so what this gene you might have would be why",
    "start": "1732359",
    "end": "1739449"
  },
  {
    "text": "are there so many bugs in this nskeyedarchiver I think I showed you three but we reported about eight at",
    "start": "1739449",
    "end": "1747219"
  },
  {
    "text": "this point and it seems to be one of the luckiest interfaces in the remote attack",
    "start": "1747219",
    "end": "1754809"
  },
  {
    "text": "surface and here's why let's say you have a URL and you wanted to code a URL",
    "start": "1754809",
    "end": "1761379"
  },
  {
    "text": "and one thing that's already surprising is the attack surface of that depends a",
    "start": "1761379",
    "end": "1767529"
  },
  {
    "text": "lot on how you compile it it depends specifically on what frameworks you include while you're compiling it but let's say you do this",
    "start": "1767529",
    "end": "1774639"
  },
  {
    "text": "with just one framework which is user notifications then what's your attacks",
    "start": "1774639",
    "end": "1779650"
  },
  {
    "text": "surface well you have the nsurl and it with coder which makes sense and then",
    "start": "1779650",
    "end": "1785800"
  },
  {
    "text": "let's say in your class you create a URL subclass then that in it with coder is",
    "start": "1785800",
    "end": "1791290"
  },
  {
    "text": "in the attack surface too and then you",
    "start": "1791290",
    "end": "1797050"
  },
  {
    "text": "have any subclass of URL which is in all the frameworks you included and I just included this one framework which is UN",
    "start": "1797050",
    "end": "1804250"
  },
  {
    "text": "security scope URL but there's more attack surface so what does NS URL and",
    "start": "1804250",
    "end": "1810310"
  },
  {
    "text": "it with coder look like this is kind of a pseudo code dramatization of this URL",
    "start": "1810310",
    "end": "1817090"
  },
  {
    "text": "with a few things missing but what's important is one thing I will try to do",
    "start": "1817090",
    "end": "1822700"
  },
  {
    "text": "is to code an NS data and if that's the case he will try and treat that like a bookmark and this is actually a whole",
    "start": "1822700",
    "end": "1829150"
  },
  {
    "text": "second serialization format that it will try to the code which is a tack surface and alternately if that doesn't work out",
    "start": "1829150",
    "end": "1838030"
  },
  {
    "text": "it will try and decode these strings and it'll decode the URL base and the URL",
    "start": "1838030",
    "end": "1844000"
  },
  {
    "text": "relative and then create your NS URL which is interesting that means that now",
    "start": "1844000",
    "end": "1850270"
  },
  {
    "text": "you have strings in the attack surface and now you have data in the attack surface so now you have all the",
    "start": "1850270",
    "end": "1856270"
  },
  {
    "text": "subclasses of those included in your attack surface so you have this NS dispatch data and it's localized string",
    "start": "1856270",
    "end": "1862360"
  },
  {
    "text": "I won't read them all out but everything in there's two default frameworks which are always included core foundation and",
    "start": "1862360",
    "end": "1868570"
  },
  {
    "text": "foundation plus there's this user notifications and now we have a total of five and it with coder is also included",
    "start": "1868570",
    "end": "1874690"
  },
  {
    "text": "here and then you got to continue all",
    "start": "1874690",
    "end": "1879850"
  },
  {
    "text": "the way down and right so for example now you have this UN localized string and it with coder this one decodes an NS",
    "start": "1879850",
    "end": "1887110"
  },
  {
    "text": "array so what are all the subclasses of the NS array and then this NS localized string decodes dictionary date and",
    "start": "1887110",
    "end": "1893950"
  },
  {
    "text": "number well now you need to include all the subclasses of those in your attack surface so then there's this problem",
    "start": "1893950",
    "end": "1902650"
  },
  {
    "text": "with the sub classing without the in it",
    "start": "1902650",
    "end": "1908170"
  },
  {
    "text": "with coder so for example the string in it with coder will call init with string so now every subclass within a net with",
    "start": "1908170",
    "end": "1914769"
  },
  {
    "text": "string is included and likewise with the NS data there's an it with fight so this",
    "start": "1914769",
    "end": "1922679"
  },
  {
    "text": "increases the attack surface and keep in mind you also have to do this with like the NS array the NS dictionary and also",
    "start": "1922679",
    "end": "1929080"
  },
  {
    "text": "any objects that get decoded when creating those and what's funny about this is if you're decoding a URL you",
    "start": "1929080",
    "end": "1936039"
  },
  {
    "text": "probably just want a string right 99.9% of the time no one's actually using this",
    "start": "1936039",
    "end": "1943289"
  },
  {
    "text": "and this gets even worse imagine adding a few extra aloud classes letting able",
    "start": "1943289",
    "end": "1950049"
  },
  {
    "text": "to code an array of URLs or let's say you know you want to import a few more libraries or like dozens of libraries",
    "start": "1950049",
    "end": "1956859"
  },
  {
    "text": "like springboard does and imagine being a developer trying to secure this my",
    "start": "1956859",
    "end": "1963789"
  },
  {
    "text": "opinion is that securing a class in the face of nskeyedarchiver is an intractable problem there are just too",
    "start": "1963789",
    "end": "1970599"
  },
  {
    "text": "many inter dependencies between unrelated components and it requires full knowledge of all other components",
    "start": "1970599",
    "end": "1976869"
  },
  {
    "text": "which might be ok if you're but if you're for example a third-party developer trying to do this how are you",
    "start": "1976869",
    "end": "1983019"
  },
  {
    "text": "gonna know that you gotta worry about this being that you know you and scope URL it also means that small changes to",
    "start": "1983019",
    "end": "1991839"
  },
  {
    "text": "low risk components have unexpected consequences my suspicion is that the",
    "start": "1991839",
    "end": "1997539"
  },
  {
    "text": "majority of these bugs did not occur because someone wanted to add this to the attacks or sisters surface of",
    "start": "1997539",
    "end": "2003330"
  },
  {
    "text": "iMessage they happen because someone added in it with coder to the calculator and then they wanted to add two numbers",
    "start": "2003330",
    "end": "2008789"
  },
  {
    "text": "in springboard and someone imported this library and no one thought of the fact",
    "start": "2008789",
    "end": "2014519"
  },
  {
    "text": "that these are going to combine in a weird way and cause bugs so this is a",
    "start": "2014519",
    "end": "2020070"
  },
  {
    "text": "situation and where I think this design causes a lot of security with problems and it's very problematic um so now I'm",
    "start": "2020070",
    "end": "2028289"
  },
  {
    "text": "going to show a few demos here umm the first one is of this bug that allows for",
    "start": "2028289",
    "end": "2037589"
  },
  {
    "text": "remote files to be fetched and unfortunately this is very low production value this is me typing with",
    "start": "2037589",
    "end": "2044549"
  },
  {
    "text": "one hand well I hold my with the other but you can see here I have a message and the message has an",
    "start": "2044549",
    "end": "2054000"
  },
  {
    "text": "image in it and then I'm sending an iMessage and that's kind of how the tool",
    "start": "2054000",
    "end": "2062158"
  },
  {
    "text": "works you just like run it on the command line and then gotta wait for this message to appear this is the one",
    "start": "2062159",
    "end": "2070350"
  },
  {
    "text": "that's trying to get the SMS database it's a little bit slow because unfortunately the way that URL decoding",
    "start": "2070350",
    "end": "2075690"
  },
  {
    "text": "ended up working you have to send a URL that's equal in size to the data you want to retrieve so these messages kind",
    "start": "2075690",
    "end": "2081810"
  },
  {
    "text": "of arrive pretty slowly",
    "start": "2081810",
    "end": "2084950"
  },
  {
    "text": "so um I prepared this second message so what happened is I pulled the location",
    "start": "2101370",
    "end": "2107850"
  },
  {
    "text": "of that image out of the SMS database and I put in the location here so I didn't have to type with my left hand",
    "start": "2107850",
    "end": "2113520"
  },
  {
    "text": "while holding the camera but in real life you would get that from the database and put it in the message and",
    "start": "2113520",
    "end": "2119340"
  },
  {
    "text": "then I'm sending it again and then this is going to be the message that gets the",
    "start": "2119340",
    "end": "2125760"
  },
  {
    "text": "image so once again gotta wait for it to arrive",
    "start": "2125760",
    "end": "2132859"
  },
  {
    "text": "[Music]",
    "start": "2135970",
    "end": "2139150"
  },
  {
    "text": "[Music]",
    "start": "2143850",
    "end": "2147050"
  },
  {
    "text": "it's funny I totally know the message will arrive but every time I watch this video I still get a little nervous so",
    "start": "2159970",
    "end": "2166720"
  },
  {
    "text": "you can see the JPEG header there and then I pulled the file off the server",
    "start": "2166720",
    "end": "2172750"
  },
  {
    "text": "and unfortunately the encoding you get is kind of complicated and requires quite a bit of decoding so I just pull",
    "start": "2172750",
    "end": "2177910"
  },
  {
    "text": "it off and then run this Python script to decoder to decode it",
    "start": "2177910",
    "end": "2183180"
  },
  {
    "text": "and then look it's the same image I also",
    "start": "2187110",
    "end": "2198730"
  },
  {
    "text": "have a second demo here which I have to confess we got working about two hours ago which is an example of an exploit",
    "start": "2198730",
    "end": "2207240"
  },
  {
    "text": "this exploit uses an unfixed bug but there's nothing specific about it I",
    "start": "2207240",
    "end": "2213130"
  },
  {
    "text": "think in particular that it would work with that pfoa issue I think it would",
    "start": "2213130",
    "end": "2218380"
  },
  {
    "text": "work with the other out of bounds and memory corruption issues and right now",
    "start": "2218380",
    "end": "2224620"
  },
  {
    "text": "this doesn't apply pestpac but we're working on it and so the way",
    "start": "2224620",
    "end": "2231190"
  },
  {
    "text": "this works I'm saying you will Road it the idea is that you use I am agent as a",
    "start": "2231190",
    "end": "2237910"
  },
  {
    "text": "crash Oracle to break a SLR so when you send a message via iMessage you get a",
    "start": "2237910",
    "end": "2244120"
  },
  {
    "text": "confirmation back so the idea is if you lay out certain things in memory sometimes it will crash and sometimes it",
    "start": "2244120",
    "end": "2250630"
  },
  {
    "text": "won't and based on like whether you hear back again you can basically infer things about how things are laid out in memory",
    "start": "2250630",
    "end": "2256930"
  },
  {
    "text": "and this has to be I am agent because springboard is a very noisy crash or for",
    "start": "2256930",
    "end": "2264640"
  },
  {
    "text": "a while it would actually freeze up the device if you crashed it enough but I am agent will restart consistently so that",
    "start": "2264640",
    "end": "2270790"
  },
  {
    "text": "made it better and then so the first thing that happens is this but will break a SLR by using this Oracle and",
    "start": "2270790",
    "end": "2277750"
  },
  {
    "text": "then basically it will use a heap spray to create this thing the fake",
    "start": "2277750",
    "end": "2283510"
  },
  {
    "text": "objective-c object and then that will typically call selectors in objective-c",
    "start": "2283510",
    "end": "2289570"
  },
  {
    "text": "so here we go and any Samuels demos have a way to enter",
    "start": "2289570",
    "end": "2295240"
  },
  {
    "text": "production value than my demos so here is the version and here's showing that",
    "start": "2295240",
    "end": "2302410"
  },
  {
    "text": "nothing's in contacts this is someone you have never messes before and then",
    "start": "2302410",
    "end": "2307450"
  },
  {
    "text": "this demo shows incoming messages on purpose this isn't necessary but it's kind of a borrowing demo if you're just",
    "start": "2307450",
    "end": "2313690"
  },
  {
    "text": "sitting here so you'll see messages coming in and those are the Oracle that's bypassing",
    "start": "2313690",
    "end": "2319570"
  },
  {
    "text": "aslr and you can see type yeah",
    "start": "2319570",
    "end": "2324730"
  },
  {
    "text": "I'm assuming that actual attackers wouldn't do that but maybe so this is",
    "start": "2324730",
    "end": "2331000"
  },
  {
    "text": "also sped up in time so you can see the time at the top and this takes I think about six minutes total",
    "start": "2331000",
    "end": "2338280"
  },
  {
    "text": "[Music]",
    "start": "2346280",
    "end": "2351360"
  },
  {
    "text": "so there we go and now we're getting ready to pop calc and so basically what",
    "start": "2357700",
    "end": "2365530"
  },
  {
    "text": "this is doing is that it's trying to lay out the heap and then it's actually checking and checking the notifications",
    "start": "2365530",
    "end": "2371140"
  },
  {
    "text": "to make sure that things are actually in the right place before it hits the trigger yeah there's a cow so um",
    "start": "2371140",
    "end": "2392430"
  },
  {
    "text": "unfortunately I think I could probably do a whole other talk about both of those a demos so I have included a lot",
    "start": "2392430",
    "end": "2399640"
  },
  {
    "text": "of detail but we will be blogging about them sure at least so watch our project zero blog if you want to know the",
    "start": "2399640",
    "end": "2405250"
  },
  {
    "text": "nitty-gritty of exactly how those two demos worked um so in conclusion fully",
    "start": "2405250",
    "end": "2411700"
  },
  {
    "text": "remote iphone bugs do exist we found about ten of them so I think that at least puts the rest the question of are",
    "start": "2411700",
    "end": "2418540"
  },
  {
    "text": "there really bugs like that the remote attack surface included a lot of things including SMS MMS bbm email and iMessage",
    "start": "2418540",
    "end": "2428440"
  },
  {
    "text": "and we found bugs in V via email and iMessage so it's certainly not just an",
    "start": "2428440",
    "end": "2433630"
  },
  {
    "text": "iMessage thing though the majority of the bugs were there um there were design problems with iMessage serialization",
    "start": "2433630",
    "end": "2440049"
  },
  {
    "text": "that make it especially bro prone like surface I do want to say that this is",
    "start": "2440049",
    "end": "2446170"
  },
  {
    "text": "also a fairly old old attack surface serialization was used for other things",
    "start": "2446170",
    "end": "2452440"
  },
  {
    "text": "that weren't iMessage for a long time before iMessage so this is kind of a difficult problem how you cut stuff down but right now",
    "start": "2452440",
    "end": "2460359"
  },
  {
    "text": "even with the NS secure coding there still is a lot of security problems and",
    "start": "2460359",
    "end": "2466329"
  },
  {
    "text": "it's because of that exploding attack surface there's just no good way to evaluate or reduce the attack surface of",
    "start": "2466329",
    "end": "2472559"
  },
  {
    "text": "something your deserializing even if you are just too serializing one string URL um there are methods for an",
    "start": "2472559",
    "end": "2481150"
  },
  {
    "text": "attacker to send malformed messages and most formats and we actually released them today so if you take a look at this",
    "start": "2481150",
    "end": "2487780"
  },
  {
    "text": "URL we have the I message sender there's the IMAP server and there's the",
    "start": "2487780",
    "end": "2493690"
  },
  {
    "text": "SMS tools I'm hoping that people will use these to look more at iMessage and",
    "start": "2493690",
    "end": "2498730"
  },
  {
    "text": "hopefully report some bugs that we didn't find in this project and I want to end off by just reiterating that this",
    "start": "2498730",
    "end": "2504700"
  },
  {
    "text": "is an especially dangerous attack surface it doesn't require proximity to a user it doesn't require our network",
    "start": "2504700",
    "end": "2510309"
  },
  {
    "text": "intercepts these are basically bugs that anyone can use I'm from anywhere to attack anyone and I",
    "start": "2510309",
    "end": "2517089"
  },
  {
    "text": "think that makes them especially dangerous so it's important we do what we can to reduce the number of these",
    "start": "2517089",
    "end": "2522430"
  },
  {
    "text": "bugs and make them less available to attackers thanks a lot",
    "start": "2522430",
    "end": "2528210"
  },
  {
    "text": "[Applause]",
    "start": "2529370",
    "end": "2533290"
  }
]