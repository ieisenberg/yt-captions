[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "without further Ado I would like for you guys to give a warm welcome to um shiron Wang which is going to be presenting",
    "start": "80",
    "end": "6680"
  },
  {
    "text": "today rubbage runtime analysis of vulnerabilities and generation of exploits thank you so",
    "start": "6680",
    "end": "14678"
  },
  {
    "text": "much all right can you guys hear me cool all right welcome to ravage my",
    "start": "17520",
    "end": "24080"
  },
  {
    "text": "name is Shon Wong and I'm a security researcher and engineer in salesforce.com and and I'm supposed to",
    "start": "24080",
    "end": "31080"
  },
  {
    "text": "have him partner here but because unfortunately he was over excited drank",
    "start": "31080",
    "end": "36760"
  },
  {
    "text": "too much and pass out so he wouldn't be able to be here to",
    "start": "36760",
    "end": "43320"
  },
  {
    "text": "present is how you feel when you partnered B you in the last minute jokai he uh he got some last minute changes he",
    "start": "43320",
    "end": "50360"
  },
  {
    "text": "has to go uh but I will be presenting here for myself okay so here's a quick rundown of",
    "start": "50360",
    "end": "57840"
  },
  {
    "start": "54000",
    "end": "113000"
  },
  {
    "text": "what I'm going to talk about first of all I'm going to talk about why we're here why we need another tool and why",
    "start": "57840",
    "end": "64518"
  },
  {
    "text": "the current tools are insufficient for vulnerability detection and then I'm going to talk",
    "start": "64519",
    "end": "70119"
  },
  {
    "text": "about what is ravage and how it's designed and give you a quick demo of how you can use ravage and then uh how",
    "start": "70119",
    "end": "77799"
  },
  {
    "text": "ravage looks like and then I'm going to talk about how ravage actually being implemented in the we and then give you",
    "start": "77799",
    "end": "84720"
  },
  {
    "text": "a full demo so that you can see more power unleashed from ravage and then I'm",
    "start": "84720",
    "end": "90600"
  },
  {
    "text": "going to talk about how you can use ravage in your own company in your own product and detect vulnerabilities and",
    "start": "90600",
    "end": "97320"
  },
  {
    "text": "then if you like janary expit at the end of the day what I wanted you to take away is some in-depth knowledge of Rand",
    "start": "97320",
    "end": "104759"
  },
  {
    "text": "time analysis and in the meantime a tool you can take home and play with so let's",
    "start": "104759",
    "end": "110840"
  },
  {
    "text": "start a journey we have a lot of tools all kinds",
    "start": "110840",
    "end": "116320"
  },
  {
    "start": "113000",
    "end": "208000"
  },
  {
    "text": "of tools and we have static analysis tools a lot of vendors we have blackbox",
    "start": "116320",
    "end": "122360"
  },
  {
    "text": "tools a lot of vendors so static analysis claims to be",
    "start": "122360",
    "end": "128440"
  },
  {
    "text": "scalable and we have a quote for that in the meantime they also claims to",
    "start": "128440",
    "end": "135040"
  },
  {
    "text": "be accurate they can detect all kinds of vulnerability with high",
    "start": "135040",
    "end": "140480"
  },
  {
    "text": "confidence they also claims to be easy to use where we also get a quote for",
    "start": "140480",
    "end": "146720"
  },
  {
    "text": "that so what about reality in reality things",
    "start": "146720",
    "end": "152720"
  },
  {
    "text": "always different from what it claims to be uh for example I would say they're not so scalable if they come across",
    "start": "152720",
    "end": "159080"
  },
  {
    "text": "complex code bases or Library dependencies they can't figure out they're not very good in getting a lot",
    "start": "159080",
    "end": "166239"
  },
  {
    "text": "of real issues and also I would say they're not very accurate because if you have things like Reflections interfaces",
    "start": "166239",
    "end": "172640"
  },
  {
    "text": "and all of those they have to get runtime information to talk about then static analysis always fail to do that",
    "start": "172640",
    "end": "179319"
  },
  {
    "text": "and they're not very easy to use when you have stting lasses scan your application you have a lot of results",
    "start": "179319",
    "end": "185760"
  },
  {
    "text": "however in in the meantime when you reviewing those results you have no idea which URL it triggers the vulnerability",
    "start": "185760",
    "end": "191879"
  },
  {
    "text": "which parameter it triggers vulnerability and then whether they're actually reproducable out and usually at",
    "start": "191879",
    "end": "196920"
  },
  {
    "text": "the end of the day most of them are not but you just don't know you have to go through them so those are actually kind",
    "start": "196920",
    "end": "202720"
  },
  {
    "text": "of pain that we went through in our in our in our team and then let's talk about blackbox",
    "start": "202720",
    "end": "210200"
  },
  {
    "start": "208000",
    "end": "334000"
  },
  {
    "text": "quickly they don't have knowledge of the app and they can deal with multi-stage",
    "start": "210200",
    "end": "216080"
  },
  {
    "text": "request where they're struggling with the Weezer like pages and stuff like that they also rely heavily on the",
    "start": "216080",
    "end": "223280"
  },
  {
    "text": "response data from server so if there's a vulnerability on the server side is purely on the server side it doesn't",
    "start": "223280",
    "end": "229120"
  },
  {
    "text": "respond too much data to the attacker the attacker is really hard it's really hard for the blackbox tool to actually",
    "start": "229120",
    "end": "235439"
  },
  {
    "text": "tell whether there's vulnerability or not there's no cold coverage because",
    "start": "235439",
    "end": "241200"
  },
  {
    "text": "it's blackbox there's no data flows because it's a blackbox and it could be",
    "start": "241200",
    "end": "246360"
  },
  {
    "text": "potentially disrupted because all of thect data that the tools sends to your server and here's another interesting",
    "start": "246360",
    "end": "252720"
  },
  {
    "text": "quote we got regarding the two tools so they say those tools can be really",
    "start": "252720",
    "end": "258280"
  },
  {
    "text": "seductive because they do find a lot of vulnerabilities however when you go through every single one of them you",
    "start": "258280",
    "end": "263880"
  },
  {
    "text": "spend a lot of time and at the end of the day you got 99% of them or false",
    "start": "263880",
    "end": "269759"
  },
  {
    "text": "additives and only 1% are real issues so here we see a problem and how do we",
    "start": "269759",
    "end": "276080"
  },
  {
    "text": "solve it we have random analysis So Random analysis is not a new topic it's only relatively new compared to static",
    "start": "276080",
    "end": "282560"
  },
  {
    "text": "analysis or blackbox wolves and just a quick background of what runtime analysis is it's basically trying to",
    "start": "282560",
    "end": "288280"
  },
  {
    "text": "monitor program at runtime and it tracks tainted Source data from tainted sources",
    "start": "288280",
    "end": "293720"
  },
  {
    "text": "to tained syncs it's basically a form of Tain analysis and you can detect one Realties",
    "start": "293720",
    "end": "299160"
  },
  {
    "text": "such as xss simplest like what xss SEO injection and static encryption keys or",
    "start": "299160",
    "end": "305120"
  },
  {
    "text": "secret looking to locks or more complic issue such as if you have a multi-tenant",
    "start": "305120",
    "end": "310440"
  },
  {
    "text": "application where you do not want user a data leaking into user B Stone so you",
    "start": "310440",
    "end": "316280"
  },
  {
    "text": "can easily tag your data and say that data is from user a and never let it to go to other users andless you allowed it",
    "start": "316280",
    "end": "322440"
  },
  {
    "text": "to so those are any always any kind of data flows one of reties associated with",
    "start": "322440",
    "end": "328319"
  },
  {
    "text": "data flows and even control flows we have ways to track it in random analysis as",
    "start": "328319",
    "end": "333960"
  },
  {
    "text": "well so what are the advantages of ROM analysis we have a few of them for",
    "start": "333960",
    "end": "339639"
  },
  {
    "start": "334000",
    "end": "379000"
  },
  {
    "text": "example it definitely has a very low fast positive rate because everything at a runtime is actually what program can",
    "start": "339639",
    "end": "346319"
  },
  {
    "text": "run at run time and also you don't need exploit data because rtime analysis run",
    "start": "346319",
    "end": "351759"
  },
  {
    "text": "purely on the Tang of data as long as data is Tainted we tag it and we know you said one we don't need source code",
    "start": "351759",
    "end": "359199"
  },
  {
    "text": "because is Rand analysis and it can leverage existing testings so this I will talk about more",
    "start": "359199",
    "end": "365639"
  },
  {
    "text": "in the future in the integration part because it will be really exciting and if you design correctly",
    "start": "365639",
    "end": "371919"
  },
  {
    "text": "it's also able to get complete data flows and we talk about what is complete data flow and what is correct data",
    "start": "371919",
    "end": "378960"
  },
  {
    "text": "flow so there are many tools that does runtime analysis and but most of them do",
    "start": "378960",
    "end": "386919"
  },
  {
    "start": "379000",
    "end": "496000"
  },
  {
    "text": "uh runtime analysis on Native applications like X applications on different operating systems but we",
    "start": "386919",
    "end": "393160"
  },
  {
    "text": "didn't find too many fols that does random analysis on interpretive languages for example Java so there were",
    "start": "393160",
    "end": "401599"
  },
  {
    "text": "a few applications that does Java random analysis And We examined a few of them",
    "start": "401599",
    "end": "407120"
  },
  {
    "text": "but we found some problems so some of them doesn't have data flow at all and what you see after your detect",
    "start": "407120",
    "end": "413440"
  },
  {
    "text": "vulnerability is the source of the taint and the sync of the taint you have no",
    "start": "413440",
    "end": "418960"
  },
  {
    "text": "idea how the data can Travers from the source to the sync and why that is a problem it's because if your program and",
    "start": "418960",
    "end": "426680"
  },
  {
    "text": "application is really large you always have those simple sources simple syns no",
    "start": "426680",
    "end": "432080"
  },
  {
    "text": "matter what vulnerability is no matter access as or all what kinds of access is",
    "start": "432080",
    "end": "437879"
  },
  {
    "text": "always going to found the same Source in the same syn and there also could be multiple vulnerabilities that share the",
    "start": "437879",
    "end": "443479"
  },
  {
    "text": "same Source the same Sy and also it could be tens or H hundreds of different",
    "start": "443479",
    "end": "449000"
  },
  {
    "text": "Poss possible path you can come from that source to that sync so obviously",
    "start": "449000",
    "end": "454039"
  },
  {
    "text": "you have no knowledge of how your data goes in your system is basically really",
    "start": "454039",
    "end": "459400"
  },
  {
    "text": "close to a blackbox tool and then some of them have incorrects I will talk more about what",
    "start": "459400",
    "end": "465479"
  },
  {
    "text": "is a correct dat flow means but if if you think about it data flow is completely different from stack Tres",
    "start": "465479",
    "end": "472240"
  },
  {
    "text": "with control flow and how to get a correct data flow is very",
    "start": "472240",
    "end": "477479"
  },
  {
    "text": "challenging and some of the FS do have correct data FS but only on very limited",
    "start": "477479",
    "end": "483199"
  },
  {
    "text": "objects for example strings or other immutable objects as we'll talk about later on immutable objects are really",
    "start": "483199",
    "end": "489759"
  },
  {
    "text": "easy to track data flows but mutable objects are not and I will explain why",
    "start": "489759",
    "end": "495720"
  },
  {
    "text": "later here we have a few graphs that compares quickly static analysis blackbox tools and random analysis if",
    "start": "495720",
    "end": "502919"
  },
  {
    "start": "496000",
    "end": "576000"
  },
  {
    "text": "imagine the graph on the screen as your application the bottom it is the deeper",
    "start": "502919",
    "end": "509919"
  },
  {
    "text": "the program can be penetrated with the tool so if you take a look at static analysis it has a bunch of green dots",
    "start": "509919",
    "end": "516599"
  },
  {
    "text": "the green dots means real vulnerability detected so it's able to go deeper into the program but also It suffers from",
    "start": "516599",
    "end": "523518"
  },
  {
    "text": "those red dots which means false negatives a false positives and blackbox will works",
    "start": "523519",
    "end": "529040"
  },
  {
    "text": "different it detects a bunch of issues on the surface but not too deep in the program and they also start to see false",
    "start": "529040",
    "end": "535680"
  },
  {
    "text": "negative because blackbox doesn't understand your program at all and then here's the beauty of random",
    "start": "535680",
    "end": "541440"
  },
  {
    "text": "analysis you're able to go as deep as stting analysis because in your standard program in the meantime because it's a",
    "start": "541440",
    "end": "548240"
  },
  {
    "text": "runtime you don't have too much of false positive that is great thing so doesn't",
    "start": "548240",
    "end": "553800"
  },
  {
    "text": "mean that runtime analysis is always better than stating analysis or blackbox tool I would say it depends if you do",
    "start": "553800",
    "end": "560720"
  },
  {
    "text": "have a good test coverage a good driver that can dry a rtime analysis tool to run different paths in your program and",
    "start": "560720",
    "end": "567760"
  },
  {
    "text": "to discover as many vulnerability is possible I would say runtime analysis will definitely detect more",
    "start": "567760",
    "end": "573079"
  },
  {
    "text": "vulnerabilities and less false positives so before going into how",
    "start": "573079",
    "end": "578120"
  },
  {
    "start": "576000",
    "end": "753000"
  },
  {
    "text": "ravage designed let me show you some figures we experimented with running ravage and also a static analysis tool",
    "start": "578120",
    "end": "585200"
  },
  {
    "text": "and a black Bo tool against a few web applications unfortunately I can't show you exactly which are those because we",
    "start": "585200",
    "end": "591800"
  },
  {
    "text": "found vulnerabilities reported them but they're not fixed yet but I do uh I can",
    "start": "591800",
    "end": "597040"
  },
  {
    "text": "show you the statistics so uh first of all we only limit the",
    "start": "597040",
    "end": "603160"
  },
  {
    "text": "scope to be a few vulnerabilities xss arbitrary Direction and a few injection flaws the reason for that is that for",
    "start": "603160",
    "end": "609800"
  },
  {
    "text": "ravage is still neutral and we don't have a very rich rule set yet so to have",
    "start": "609800",
    "end": "615440"
  },
  {
    "text": "a fair comparison with other tools that are much mature we only limit the scope to the rules we",
    "start": "615440",
    "end": "620640"
  },
  {
    "text": "have so here are some figures um on average for stting",
    "start": "620640",
    "end": "625680"
  },
  {
    "text": "analysis it reported 150 issues in total and 14 of them are real issues basically",
    "start": "625680",
    "end": "632200"
  },
  {
    "text": "90% 90% of them are not real issues are false positives and false negative is 8%",
    "start": "632200",
    "end": "639600"
  },
  {
    "text": "and how false negatives calculated is basically the number of vulnerability detected in one tool over the totality",
    "start": "639600",
    "end": "645959"
  },
  {
    "text": "of all tools of all vulnerabilities detected by the three tools so there might be more vulnerabilities but we",
    "start": "645959",
    "end": "652240"
  },
  {
    "text": "didn't have time to go through a full review to find all of those and then we have blackbox tools blackbox tool",
    "start": "652240",
    "end": "658600"
  },
  {
    "text": "average Tech less issued in static analysis also has less real vulnerabilities um as for false",
    "start": "658600",
    "end": "665360"
  },
  {
    "text": "positives it has around the same level regarding uh St analysis but also has",
    "start": "665360",
    "end": "671079"
  },
  {
    "text": "high false negatives but blackbox does finish s scanning much earlier than static analysis so that is a plus then",
    "start": "671079",
    "end": "679160"
  },
  {
    "text": "we have ravage ravage if you see the figures it detects much less issues",
    "start": "679160",
    "end": "684279"
  },
  {
    "text": "compared to the previous two tools however among the issues it detected",
    "start": "684279",
    "end": "690320"
  },
  {
    "text": "almost all of them are real issues so the false posit rate is really low is",
    "start": "690320",
    "end": "695800"
  },
  {
    "text": "around 15% and false negative rate is around 27% so we can still improve the rate on",
    "start": "695800",
    "end": "702760"
  },
  {
    "text": "the false negative and the reason for the false negative to not be so low is that we didn't have a good driver to",
    "start": "702760",
    "end": "708800"
  },
  {
    "text": "drive ravage to stand to scan those applications and what we did is basically just some manual usage of the",
    "start": "708800",
    "end": "716200"
  },
  {
    "text": "application with some burp or black boss testing tools",
    "start": "716200",
    "end": "721560"
  },
  {
    "text": "drived uh usage of the application so we didn't actually have time to go to every",
    "start": "721560",
    "end": "726600"
  },
  {
    "text": "single corner of application to scan it but if we do have if were to have a good test coverage or good tool to actually",
    "start": "726600",
    "end": "734160"
  },
  {
    "text": "drive the application to run different Corners would have been getting a very low false negative rate so the summary",
    "start": "734160",
    "end": "741279"
  },
  {
    "text": "of that is that ravage can detect vulnerabilities with really low false",
    "start": "741279",
    "end": "746399"
  },
  {
    "text": "positive rate and also can have a really low false negative rate if you do have a good test coverage or driver to drive it",
    "start": "746399",
    "end": "754240"
  },
  {
    "start": "753000",
    "end": "782000"
  },
  {
    "text": "okay now let's talk about what is ravage it could be that for one",
    "start": "754240",
    "end": "761760"
  },
  {
    "text": "second it could also be that so ravage represents rtime analysis of",
    "start": "761760",
    "end": "767800"
  },
  {
    "text": "vulnerabilities and generation of exports it's our implementation of Rand time analysis for Java it's open source",
    "start": "767800",
    "end": "774600"
  },
  {
    "text": "it's free and it's around 5,000 lines of code and it's written WR mainly e c C++",
    "start": "774600",
    "end": "781040"
  },
  {
    "text": "Java and assembly on a very high level how it be designed is that we want to track all",
    "start": "781040",
    "end": "787880"
  },
  {
    "start": "782000",
    "end": "906000"
  },
  {
    "text": "relevant operations no matter is the function invocations or returns or is",
    "start": "787880",
    "end": "792959"
  },
  {
    "text": "the field accesses of storage or it's assignments from one object to another object or is a re retrieval or storage",
    "start": "792959",
    "end": "800839"
  },
  {
    "text": "or any other kinds of operations we track those operations and we store a data flow a data point into a not object",
    "start": "800839",
    "end": "808440"
  },
  {
    "text": "and that you will see on the slide as a node so in the node object what do we actually store in there what do we mean",
    "start": "808440",
    "end": "815360"
  },
  {
    "text": "by data point by data point will mean where exactly in the source code does this particular pointing program",
    "start": "815360",
    "end": "821959"
  },
  {
    "text": "represent which source file which line where in the program does it mean",
    "start": "821959",
    "end": "827800"
  },
  {
    "text": "so that we record a data flow a data point and then not only data point we also record context information for",
    "start": "827800",
    "end": "833800"
  },
  {
    "text": "example uh where did you get the T did you get it from user did you get it from database did you get it from a URL did",
    "start": "833800",
    "end": "839560"
  },
  {
    "text": "you get it from a file or is it HTML escaped or is it JavaScript Escape or is it cql Escape or anything and all of",
    "start": "839560",
    "end": "846320"
  },
  {
    "text": "those are incuded into a flag that user is able to customize and then we store another",
    "start": "846320",
    "end": "852839"
  },
  {
    "text": "object into the original object we're tracking data flow with so that we do not want to create a separate map just",
    "start": "852839",
    "end": "859320"
  },
  {
    "text": "to track data flows because that would be really messy and hard to maintain and here's the interesting",
    "start": "859320",
    "end": "865199"
  },
  {
    "text": "point we split objects at each data point what we mean by that is that if",
    "start": "865199",
    "end": "870680"
  },
  {
    "text": "you have a function call say full and you pass a string s instead of passing the actual string s or create a copy of",
    "start": "870680",
    "end": "877720"
  },
  {
    "text": "a string s and pass that to the full function the reason we do that step is that we want to decouple different data",
    "start": "877720",
    "end": "884199"
  },
  {
    "text": "flows of different path in the program to be separate to be separate from each one otherwise the data flows in",
    "start": "884199",
    "end": "890920"
  },
  {
    "text": "different paths going to mingle together and then create false positives and false negatives and at the end of the day you",
    "start": "890920",
    "end": "897199"
  },
  {
    "text": "want to chain all the noes together to create complete graph so that you know exactly how your PR painted data",
    "start": "897199",
    "end": "903759"
  },
  {
    "text": "traveles in your system so let's talk about data flow we talk I talk a lot about data flow data",
    "start": "903759",
    "end": "910399"
  },
  {
    "start": "906000",
    "end": "940000"
  },
  {
    "text": "flow data flow so what does that mean what do we want to get exactly in a data flow everybody likes math here's",
    "start": "910399",
    "end": "918639"
  },
  {
    "text": "math I personally don't understand what it means at",
    "start": "918639",
    "end": "923800"
  },
  {
    "text": "all is basically Cipher text to me is indistinguishable from random characters",
    "start": "923800",
    "end": "930800"
  },
  {
    "text": "and what I do understand is that we want to track all out of the notes but no",
    "start": "930800",
    "end": "936759"
  },
  {
    "text": "extra ones and what do I mean by that let's take a look at this very simple example seven lines of program here we",
    "start": "936759",
    "end": "944319"
  },
  {
    "text": "have a very simple accss where on the first line we get a string from request",
    "start": "944319",
    "end": "950319"
  },
  {
    "text": "and then second line we pass it to full function in full we print a static string welcome and returns line three we",
    "start": "950319",
    "end": "957720"
  },
  {
    "text": "pass string to bar line six we print the string into the",
    "start": "957720",
    "end": "962839"
  },
  {
    "text": "print function or into the response so if you take a look at data flow of this excise one really what",
    "start": "962839",
    "end": "968880"
  },
  {
    "text": "happens to that string is that line line number one you get this String Line number two you pass the string to full",
    "start": "968880",
    "end": "976639"
  },
  {
    "text": "line number three you pass to bar and line number six you print it out so we",
    "start": "976639",
    "end": "982720"
  },
  {
    "text": "have four data points but is that a correct data flow would say it's not because why do",
    "start": "982720",
    "end": "991000"
  },
  {
    "text": "we care about a function f whenever pass into a function f it doesn't do anything about it it doesn't change the string it",
    "start": "991000",
    "end": "997680"
  },
  {
    "text": "doesn't change the tainted of a string or untinted or tainted or doesn't change the Conta of it it just doesn't do",
    "start": "997680",
    "end": "1004279"
  },
  {
    "text": "anything so we do not want to have number two to appear on data flow and we",
    "start": "1004279",
    "end": "1009560"
  },
  {
    "text": "would we do want to get is only line number one three and a six so that's",
    "start": "1009560",
    "end": "1016000"
  },
  {
    "text": "what I mean by correct data flow just a very simple example if you take a look look at 13 six is it a stack TR I would",
    "start": "1016000",
    "end": "1025720"
  },
  {
    "text": "say no because if you were on line number six the stack trees would have",
    "start": "1025720",
    "end": "1031120"
  },
  {
    "text": "been only six and three there's not going to be line number one so that's",
    "start": "1031120",
    "end": "1037438"
  },
  {
    "text": "how you can tell the difference between stack Tres and data flow then let's talk about another",
    "start": "1037439",
    "end": "1044600"
  },
  {
    "text": "example also very short seven lines you get a request from you get a string from",
    "start": "1044600",
    "end": "1050880"
  },
  {
    "text": "request and then you pass you create an object and then you pass that string",
    "start": "1050880",
    "end": "1056000"
  },
  {
    "text": "assign it to the object and then pass the object to three functions",
    "start": "1056000",
    "end": "1061360"
  },
  {
    "text": "incrementally and then at the last function have three you GA the string out and print it out so if you follow",
    "start": "1061360",
    "end": "1068520"
  },
  {
    "text": "the Paradigm that we did in the previous example the data flow would have been line number one where we get a string",
    "start": "1068520",
    "end": "1075080"
  },
  {
    "text": "and L line number three we assign it to an object and line number seven where we",
    "start": "1075080",
    "end": "1080320"
  },
  {
    "text": "printed out so okay 1 three and a seven is that",
    "start": "1080320",
    "end": "1086159"
  },
  {
    "text": "enough I would say no because how would I know how line number",
    "start": "1086159",
    "end": "1092200"
  },
  {
    "text": "three can reach us line number seven imagine in your application there could be tens or hundreds function between",
    "start": "1092200",
    "end": "1098240"
  },
  {
    "text": "three and seven and how would you know exactly whether that is actually reachable or false positive or not so we",
    "start": "1098240",
    "end": "1106679"
  },
  {
    "text": "do want to also include four five and six in data flow but those data flows",
    "start": "1106679",
    "end": "1111720"
  },
  {
    "text": "are not for the string right because those have nothing to do with the string those only deal with the",
    "start": "1111720",
    "end": "1117840"
  },
  {
    "text": "object so how do we do that we have to somehow chain together different object",
    "start": "1117840",
    "end": "1123640"
  },
  {
    "text": "data flow in order to create a complete data flow for a particular object and that is what I meant by complete data",
    "start": "1123640",
    "end": "1130440"
  },
  {
    "text": "flow so you can sort of tell the complexity of when you're getting data flow and how you can get a really good",
    "start": "1130440",
    "end": "1137559"
  },
  {
    "text": "data flow you want so that's one of the design questions we got we said I talk about St storing",
    "start": "1137559",
    "end": "1145280"
  },
  {
    "start": "1139000",
    "end": "1201000"
  },
  {
    "text": "stack trees is really easy in data flows or not what about others we talk about",
    "start": "1145280",
    "end": "1150320"
  },
  {
    "text": "tracking Events maybe tracking some events are easy like there are existing tools that track function invocations",
    "start": "1150320",
    "end": "1156559"
  },
  {
    "text": "returns in Java for example there's Java agent there's aspectj you can always do that really easy but what about other",
    "start": "1156559",
    "end": "1163520"
  },
  {
    "text": "tools what about other tracking events for example assignments control flow eils switch all of those we didn't find",
    "start": "1163520",
    "end": "1170480"
  },
  {
    "text": "a good tool or framework that Ted and even if we do have that what about",
    "start": "1170480",
    "end": "1175799"
  },
  {
    "text": "performance impact because think about it at every single tracking event you're doing a lot of things you're trying to",
    "start": "1175799",
    "end": "1181520"
  },
  {
    "text": "track data flows you're tracking rules you're creating copy of objects you're being basically doing a lot of cleanup",
    "start": "1181520",
    "end": "1188480"
  },
  {
    "text": "so adding all of those workflow to your program at every single stage the",
    "start": "1188480",
    "end": "1194440"
  },
  {
    "text": "execution it's going to be really really performance uh going to bring up really",
    "start": "1194440",
    "end": "1199799"
  },
  {
    "text": "lot of performance hit so we also talk about splitting objects right uh we create a copy of",
    "start": "1199799",
    "end": "1205720"
  },
  {
    "start": "1201000",
    "end": "1297000"
  },
  {
    "text": "object whenever reaches different parts of the program during during tracking events then split some objects such as",
    "start": "1205720",
    "end": "1213200"
  },
  {
    "text": "string as said is easy because string is mutable if you create a copy use it later no worries they're always going to",
    "start": "1213200",
    "end": "1220080"
  },
  {
    "text": "stay the same but what about mutable objects like string buffer string Builder all of those are you able to",
    "start": "1220080",
    "end": "1227200"
  },
  {
    "text": "actually split those objects they probably are but the thing you have to worry about is that you have to maintain",
    "start": "1227200",
    "end": "1233280"
  },
  {
    "text": "consistencies because whenever create a copy of those objects those objects will go to different parts of the program and",
    "start": "1233280",
    "end": "1240000"
  },
  {
    "text": "in order for program to function still correctly you want to maintain the same data in those all objects and Things",
    "start": "1240000",
    "end": "1248120"
  },
  {
    "text": "Grow exponentially really fast and how do you do that and there's also other objects that can really you cannot",
    "start": "1248120",
    "end": "1254640"
  },
  {
    "text": "really split like for example single object or resource B objects do so intended to have only one copy in the",
    "start": "1254640",
    "end": "1261039"
  },
  {
    "text": "system so how do you actually create a second copy and when you're creating so many",
    "start": "1261039",
    "end": "1266080"
  },
  {
    "text": "copies of objects like it's going to be insane on a memory card like if you create a string that's 100 bytes and",
    "start": "1266080",
    "end": "1272200"
  },
  {
    "text": "duplicate duplicate duplicate it's going to reach like a few gigabytes really soon so how do you mention how do you",
    "start": "1272200",
    "end": "1278440"
  },
  {
    "text": "how do you track that and we also want to be invisible to the program because",
    "start": "1278440",
    "end": "1283760"
  },
  {
    "text": "we do so many things to the program and we want to make sure that all the things we do the program is not where and still",
    "start": "1283760",
    "end": "1289640"
  },
  {
    "text": "able to function correctly so instead of going to all the",
    "start": "1289640",
    "end": "1295120"
  },
  {
    "text": "high all the design decisions we got let me introduce one of the design decisions",
    "start": "1295120",
    "end": "1300279"
  },
  {
    "start": "1297000",
    "end": "1321000"
  },
  {
    "text": "we got which we call rapper so if just just FY if my partner",
    "start": "1300279",
    "end": "1307919"
  },
  {
    "text": "were here he was supposed to wrap the rest of the presentation I I wouldn't do that myself",
    "start": "1307919",
    "end": "1314799"
  },
  {
    "text": "cuz you guys would just stand up and leave um let me do that again introducing",
    "start": "1314799",
    "end": "1320880"
  },
  {
    "text": "wrapper so wrapper is a simple but we think it's a clever way to track data",
    "start": "1320880",
    "end": "1326279"
  },
  {
    "start": "1321000",
    "end": "1393000"
  },
  {
    "text": "flows and what we do is that we wrap each object with a wrapper and store the reference to the original object in the",
    "start": "1326279",
    "end": "1333120"
  },
  {
    "text": "wrapper itself and instead of each wrapper instead of storing the node in the original object we put it back into",
    "start": "1333120",
    "end": "1339480"
  },
  {
    "text": "the wrapper so the original object is intact and everything that we care about data flow is in the wrapper so think",
    "start": "1339480",
    "end": "1346720"
  },
  {
    "text": "about object splitting when we're splitting the objects now we're not actually creating copy of objects we're",
    "start": "1346720",
    "end": "1352360"
  },
  {
    "text": "only creating copy of the wrapper which should only have two memory references so it's only going to be like eight",
    "start": "1352360",
    "end": "1359159"
  },
  {
    "text": "bytes of memory or 16 bytes of memory depending on which platform you're on so it's going to leave very little memory",
    "start": "1359159",
    "end": "1364960"
  },
  {
    "text": "footprint and also in the meantime it solves the problem of maintain consistency of mutable objects and also",
    "start": "1364960",
    "end": "1371240"
  },
  {
    "text": "those single T resource found objects we don't have to care about those at all everything is saturated out into the",
    "start": "1371240",
    "end": "1377200"
  },
  {
    "text": "wrapper so that looks working right on the design level but if you think about",
    "start": "1377200",
    "end": "1383840"
  },
  {
    "text": "changing every object in Java to wrapper uh I think things going to be really funny because dver is hpe safe language",
    "start": "1383840",
    "end": "1391080"
  },
  {
    "text": "let's let's see how that goes and before I go to the real implementation let me give you just a quick demo of how ravage",
    "start": "1391080",
    "end": "1398799"
  },
  {
    "start": "1393000",
    "end": "1405000"
  },
  {
    "text": "looks like and what is how is like using it",
    "start": "1398799",
    "end": "1405360"
  },
  {
    "start": "1405000",
    "end": "1766000"
  },
  {
    "text": "so again can can you guys see the uh screen there okay I can see it so uh again we",
    "start": "1405360",
    "end": "1413400"
  },
  {
    "text": "are not able to demo real applications because those those Vols are not fix it but instead we are going to show you a",
    "start": "1413400",
    "end": "1420039"
  },
  {
    "text": "demo of running repb goat on ravage so repb goat for those of you who don't know it's basically a intentional",
    "start": "1420039",
    "end": "1426840"
  },
  {
    "text": "insecure application for people to play with and learn about web security so",
    "start": "1426840",
    "end": "1432520"
  },
  {
    "text": "here we have VAP go running on Tom Cat that's running on ravage and before I click into Tom click into WB go let me",
    "start": "1432520",
    "end": "1440120"
  },
  {
    "text": "show you something here so here is a thing called Honeybadger is our cic",
    "start": "1440120",
    "end": "1446279"
  },
  {
    "text": "Travis f for auditing security vulnerabilities whenever it's reported to that engine so what rabbage does that",
    "start": "1446279",
    "end": "1453159"
  },
  {
    "text": "basically every detection of vulnerability it upload the issue to H so you can view that in real time in",
    "start": "1453159",
    "end": "1459720"
  },
  {
    "text": "your browser so let's see how ravage can detect vulnerabilties let's",
    "start": "1459720",
    "end": "1466480"
  },
  {
    "text": "refresh and let's keep",
    "start": "1466600",
    "end": "1471720"
  },
  {
    "text": "refreshing in the meantime let's go to web",
    "start": "1471720",
    "end": "1476039"
  },
  {
    "text": "go okay things get really slow always they",
    "start": "1477480",
    "end": "1483399"
  },
  {
    "text": "demo so let me just refresh it again yeah now now it's",
    "start": "1483399",
    "end": "1490440"
  },
  {
    "text": "there product list okay that actually doesn't",
    "start": "1490440",
    "end": "1495760"
  },
  {
    "text": "look right",
    "start": "1495760",
    "end": "1499760"
  },
  {
    "text": "okay let me uh fix something really",
    "start": "1502679",
    "end": "1507080"
  },
  {
    "text": "quick there is",
    "start": "1509679",
    "end": "1513080"
  },
  {
    "text": "there let's see whether it's",
    "start": "1515200",
    "end": "1519398"
  },
  {
    "text": "up yes uh so let me cill the existing process",
    "start": "1520279",
    "end": "1526279"
  },
  {
    "text": "let's run a new one",
    "start": "1526279",
    "end": "1529679"
  },
  {
    "text": "see no matter how many times a practice demo we never knows not going to work at run time it's beauty of rent",
    "start": "1532720",
    "end": "1540480"
  },
  {
    "text": "analis in the meantime let's C the original ravage process and start it",
    "start": "1549720",
    "end": "1555880"
  },
  {
    "text": "again so if you take a look at it is basically a example that runs on Tomcat",
    "start": "1555880",
    "end": "1563240"
  },
  {
    "text": "of ravage where ravage is basically specifi a special version of",
    "start": "1563240",
    "end": "1569120"
  },
  {
    "text": "java let's go back to H",
    "start": "1571840",
    "end": "1575799"
  },
  {
    "text": "bger okay um instead of wasting you guys time here waiting for it to",
    "start": "1578399",
    "end": "1585399"
  },
  {
    "text": "load uh let me show you a Qui quick demo in video that I know I recorded and",
    "start": "1585399",
    "end": "1591799"
  },
  {
    "text": "should be working so what I originally wanted to show",
    "start": "1591799",
    "end": "1597080"
  },
  {
    "text": "you wellow is that I wanted to click on some",
    "start": "1597080",
    "end": "1603039"
  },
  {
    "text": "links in web Cod and then whenever I was I was using",
    "start": "1603039",
    "end": "1609360"
  },
  {
    "text": "ravage while using web Cod ravage should be able to detect mon abilties",
    "start": "1609360",
    "end": "1614440"
  },
  {
    "text": "automatically so those existing issues are there before I started web go so let's ignore this for now and we will",
    "start": "1614440",
    "end": "1620799"
  },
  {
    "text": "see there going to be more issues detected when we're using web go regularly with ravage so this page is a",
    "start": "1620799",
    "end": "1627840"
  },
  {
    "text": "simple cross scripting where if you search anything the search text reflected onto the page will now being",
    "start": "1627840",
    "end": "1633720"
  },
  {
    "text": "encoded so classic access if you refresh theer you're going to see another cross",
    "start": "1633720",
    "end": "1639919"
  },
  {
    "text": "thing recorded in there and if you can see the issue there is",
    "start": "1639919",
    "end": "1645520"
  },
  {
    "text": "basically a full data flow from where you got the source to where you print it out to the",
    "start": "1645520",
    "end": "1654480"
  },
  {
    "text": "program and let me pause it very quickly so on the top left",
    "start": "1654480",
    "end": "1661440"
  },
  {
    "text": "corner uh let me just expand it very quick on top left corner is basically uh",
    "start": "1661440",
    "end": "1666600"
  },
  {
    "text": "the uh ravage output you can see it's basically Json object that contains all",
    "start": "1666600",
    "end": "1671799"
  },
  {
    "text": "of the data information and also the vulnerability it's the cross scripting and has all the traces and then the",
    "start": "1671799",
    "end": "1677679"
  },
  {
    "text": "bottom of is basically the Age part from ravage you know ravage is rent time",
    "start": "1677679",
    "end": "1683480"
  },
  {
    "text": "analysis of vulnerabilities and then generation of exploits so the bottom part is the generation of exploits so",
    "start": "1683480",
    "end": "1690240"
  },
  {
    "text": "basically we have something that will detect accss and once xss is detected",
    "start": "1690240",
    "end": "1695279"
  },
  {
    "text": "we'll try to generate exportable URL that will be automatically tied to beef to export a browser so for those of you",
    "start": "1695279",
    "end": "1702760"
  },
  {
    "text": "who don't know beef beef is basically a browser exploitation framework that export your browser through a cross",
    "start": "1702760",
    "end": "1709200"
  },
  {
    "text": "scripting vulnerability so if you can see on the bottom left hand side it's basically exportable URL that our engine",
    "start": "1709200",
    "end": "1717320"
  },
  {
    "text": "just generated and we show you how that's going to be used to exploit your",
    "start": "1717320",
    "end": "1723720"
  },
  {
    "text": "browser so let's take a look at the beef control panel there's no online browser",
    "start": "1725399",
    "end": "1730799"
  },
  {
    "text": "yet meaning that there's no browser being spoted yet but let's go to that",
    "start": "1730799",
    "end": "1736399"
  },
  {
    "text": "URL and again if you go back to beef and refresh it you're going to see a new",
    "start": "1736399",
    "end": "1744760"
  },
  {
    "text": "browser being hooked is the Firefox we just used in web go and that's just the",
    "start": "1744760",
    "end": "1751919"
  },
  {
    "text": "quick demo that I wanted to show you in the meantime let's just check very quick and see whether HB is",
    "start": "1751919",
    "end": "1759919"
  },
  {
    "text": "up no demo God is not with me today so I'm going to show you more demos later",
    "start": "1759919",
    "end": "1765480"
  },
  {
    "text": "on in video okay so you now you you have a quick",
    "start": "1765480",
    "end": "1771399"
  },
  {
    "text": "look at what is ravage and how it detect monties but those are very limited because you only one uh use use it",
    "start": "1771399",
    "end": "1778240"
  },
  {
    "text": "manually to detect it and later on we'll show you how we can use it automat automatically to detect all kinds of",
    "start": "1778240",
    "end": "1784679"
  },
  {
    "text": "vulnerabilities so go back going back to implementation how did we implement",
    "start": "1784679",
    "end": "1790559"
  },
  {
    "start": "1790000",
    "end": "1976000"
  },
  {
    "text": "it on a very high level with straightforward when we tried our first",
    "start": "1790559",
    "end": "1795840"
  },
  {
    "text": "attempt we want wanted to just keep it simple let's modify the Java B code and",
    "start": "1795840",
    "end": "1801360"
  },
  {
    "text": "let's see how that goes so we did is set we inject a bunch of ravage hooks to the",
    "start": "1801360",
    "end": "1806600"
  },
  {
    "text": "Java class files and the hooks will do a bunch of things such as repping objects",
    "start": "1806600",
    "end": "1813320"
  },
  {
    "text": "checking for rules and then Gathering data flows so that sounds",
    "start": "1813320",
    "end": "1818519"
  },
  {
    "text": "straightforward does it work sometimes not always we got a lot",
    "start": "1818519",
    "end": "1824559"
  },
  {
    "text": "of problems when modifying the drawback code and reasons because remember the wrapper thing right we change every",
    "start": "1824559",
    "end": "1830880"
  },
  {
    "text": "object's type to be rapper and that doesn't work too well in Java especially when it does type checking type",
    "start": "1830880",
    "end": "1837399"
  },
  {
    "text": "enforcement everything like that jvm was like freaking out when we're taking everything to rapper crashes every",
    "start": "1837399",
    "end": "1843279"
  },
  {
    "text": "single seconds we were like okay that's not going to work let's try something",
    "start": "1843279",
    "end": "1848880"
  },
  {
    "text": "different and here's the sack cat after we failed that second",
    "start": "1848880",
    "end": "1855799"
  },
  {
    "text": "attempt so we thought about a problem and most of the reason was because the jvm was giving us trouble so we thought",
    "start": "1855799",
    "end": "1863120"
  },
  {
    "text": "why not we go deeper layer and modify the actual jvm so let's go about doing",
    "start": "1863120",
    "end": "1870120"
  },
  {
    "text": "that a quick background of jvm um jvm interprets Java B code in the class",
    "start": "1870120",
    "end": "1875279"
  },
  {
    "text": "files and the one we modified in open jdk jvm and it has two interpreters one",
    "start": "1875279",
    "end": "1881480"
  },
  {
    "text": "is called C++ one is called template so the template is the one being used as",
    "start": "1881480",
    "end": "1886720"
  },
  {
    "text": "written entirely assembly code so and the one we modified is open JD case 8",
    "start": "1886720",
    "end": "1894840"
  },
  {
    "text": "jbm so it runs basically Java 8 and on the design level it's really",
    "start": "1894840",
    "end": "1901240"
  },
  {
    "text": "similar to how we did to the drav B code instead we just did it to another lower",
    "start": "1901240",
    "end": "1906399"
  },
  {
    "text": "layer in jvm so in The Interpreter we inject a lot of hooks in the meantime",
    "start": "1906399",
    "end": "1913080"
  },
  {
    "text": "the hooks does the similar things to what we did in drava B code track data track rules and do all sorts of things",
    "start": "1913080",
    "end": "1920600"
  },
  {
    "text": "and again looks working right as usual as MMO is supposed to work um but we",
    "start": "1920600",
    "end": "1929000"
  },
  {
    "text": "Face a lot of challenges so first of all the jbm is really really complicated is",
    "start": "1929000",
    "end": "1934360"
  },
  {
    "text": "basically the operating system 250,000 lines of coat we have understand it and it's mostly self-documented if you know",
    "start": "1934360",
    "end": "1941399"
  },
  {
    "text": "what I'm talking about so uh there's a lot of optimizations and twixs we have to take into account otherwise we're",
    "start": "1941399",
    "end": "1947639"
  },
  {
    "text": "going to ruin the whole runtime and it's really painful debug assembly code have you guys ever tried",
    "start": "1947639",
    "end": "1953679"
  },
  {
    "text": "about using GDB to debug drava no right this sounds absurd but",
    "start": "1953679",
    "end": "1959159"
  },
  {
    "text": "that's how you do when you debug jbm when running a drava application you have no idea where in drava is but you",
    "start": "1959159",
    "end": "1965399"
  },
  {
    "text": "want to know you're just living in a constant pain of not knowing where you are and how do we solve it as usual",
    "start": "1965399",
    "end": "1976039"
  },
  {
    "text": "beer so after a lot of beer and drunk times uh we finally implemented it but",
    "start": "1976039",
    "end": "1982600"
  },
  {
    "text": "before we did our implementation one question we thought about is that where do we want to implement ravage we talk",
    "start": "1982600",
    "end": "1988399"
  },
  {
    "text": "about modifying The Interpreter but it's all assembly code we didn't want to write a bunch of samply codes hard to",
    "start": "1988399",
    "end": "1994240"
  },
  {
    "text": "maintain hard to debug we thought we were like why not we just insert a tiny hook into a samply code and call out to",
    "start": "1994240",
    "end": "2000760"
  },
  {
    "text": "Java to handle whatever logic we have it sounds straight for right sounds should be working and we Java and we got",
    "start": "2000760",
    "end": "2010279"
  },
  {
    "text": "420 times slowdown for those of you who are not good as numbers what it means is that if",
    "start": "2010279",
    "end": "2018240"
  },
  {
    "text": "you want to try to start a tom cat with ravage which you can do after you click",
    "start": "2018240",
    "end": "2023840"
  },
  {
    "text": "on the start is that you can go out have lunch for an hour go to a coffee shop",
    "start": "2023840",
    "end": "2030320"
  },
  {
    "text": "look some cat pictures drink coffee come back to work talk to a colleague for another half an hour and after around 2",
    "start": "2030320",
    "end": "2037600"
  },
  {
    "text": "hours is about close to finish starting but things can get",
    "start": "2037600",
    "end": "2043120"
  },
  {
    "text": "worse what if the start crash in the middle just before the 2 hour so what we",
    "start": "2043120",
    "end": "2050440"
  },
  {
    "text": "got is that we have around four times four chances to start on the eight hour",
    "start": "2050440",
    "end": "2056040"
  },
  {
    "text": "work day so think about it every day we go to work start it drink coffee come",
    "start": "2056040",
    "end": "2063200"
  },
  {
    "text": "back crash fix it start it what our boss see in his eye is basically we're just",
    "start": "2063200",
    "end": "2072079"
  },
  {
    "text": "walking all the day no work so it's to extend that we're close pretty close I'm",
    "start": "2072079",
    "end": "2079320"
  },
  {
    "text": "pretty sure to be fired so that's not going to be sustainable mainly because we're not be fired and let's fix that we",
    "start": "2079320",
    "end": "2087520"
  },
  {
    "text": "analyze the problem and most of the reasons because we insert a bunch of drava code whenever we interpret DVA",
    "start": "2087520",
    "end": "2094720"
  },
  {
    "text": "code it's like insert another layer of inter interpretation when we're interpreting one code and that's not",
    "start": "2094720",
    "end": "2100160"
  },
  {
    "text": "going to work okay let's take the pain and write it into C or C++ or the",
    "start": "2100160",
    "end": "2106119"
  },
  {
    "text": "basically language that jvm's written in and then we got back to 50 times",
    "start": "2106119",
    "end": "2111920"
  },
  {
    "text": "slowdown great not best but still great okay so we were like okay let's not stop",
    "start": "2111920",
    "end": "2119160"
  },
  {
    "text": "there already make performance uh boost and maybe there's something more we can do maybe if you're ready to assembly",
    "start": "2119160",
    "end": "2127280"
  },
  {
    "text": "that may be faster and it is faster now it's 20 times slow down so we know is",
    "start": "2127280",
    "end": "2134119"
  },
  {
    "text": "still has a performance impact but it's not as bad as before especially if you say compared to other tools for",
    "start": "2134119",
    "end": "2140240"
  },
  {
    "text": "analyzing memories on Native applications like wgr or stuff like that there's going to be also 10 to 40 times",
    "start": "2140240",
    "end": "2145400"
  },
  {
    "text": "slow down we were analyzing mam checks or stuff like that that going to take time and take resources so we know",
    "start": "2145400",
    "end": "2151319"
  },
  {
    "text": "there's kind of room to improve but it's not bad to start and the room that was",
    "start": "2151319",
    "end": "2156520"
  },
  {
    "text": "talking about is that we didn't modify the jit compiler so for those of you who are not super familiar with the jit",
    "start": "2156520",
    "end": "2162960"
  },
  {
    "text": "compilation in Java it's basically Java tries to compile your B code directly into native code and execute that and if",
    "start": "2162960",
    "end": "2170800"
  },
  {
    "text": "we modify the jit compiler to be ravage compatible that's going to give us another 10 times boost which is going to",
    "start": "2170800",
    "end": "2177880"
  },
  {
    "text": "be the future work for ravage so ravage does vulnerability detection but what",
    "start": "2177880",
    "end": "2183480"
  },
  {
    "start": "2180000",
    "end": "2233000"
  },
  {
    "text": "about after detect vulnerability there's few things you can do or everything you want to do is up to you ravage exports",
    "start": "2183480",
    "end": "2190240"
  },
  {
    "text": "plugins that you can write to handle vulnerabilities you can audit it you can store it and for later auditing or you",
    "start": "2190240",
    "end": "2196920"
  },
  {
    "text": "can generate exploit or you can directly exploit it it's up to you and the interface is all going to be in Java so",
    "start": "2196920",
    "end": "2203560"
  },
  {
    "text": "you can write Java codes it's going to be run separate thread that handles mon so the one that I showed you quickly",
    "start": "2203560",
    "end": "2211000"
  },
  {
    "text": "it's called honeyb plugin which is basically a plug-in that gets",
    "start": "2211000",
    "end": "2216040"
  },
  {
    "text": "vulnerability and display it in your browser for you to add it and there's another plugin that also showed you it's",
    "start": "2216040",
    "end": "2222040"
  },
  {
    "text": "called beef plugin which after a detection of accss SCH to generate exportable URL and send it to the user",
    "start": "2222040",
    "end": "2230280"
  },
  {
    "text": "and fish him so this is going to be awkward",
    "start": "2230280",
    "end": "2236200"
  },
  {
    "text": "because it's going to be another video time that I didn't anticipate but let me show you another",
    "start": "2236200",
    "end": "2243720"
  },
  {
    "text": "demo uh so in the previous demo we manually use",
    "start": "2244200",
    "end": "2250200"
  },
  {
    "text": "ravage to click on links and try to detect vulnerabilities and we detect some right but that's going not going to",
    "start": "2250200",
    "end": "2256680"
  },
  {
    "text": "be scalable because in your application it might be a large application and you might have a bunch of links and paths we",
    "start": "2256680",
    "end": "2263319"
  },
  {
    "text": "have to explore in order to find monties so how do we drive that so in in the",
    "start": "2263319",
    "end": "2268680"
  },
  {
    "text": "demo that I'm going to show you we're going to drive ravage with burp and use burp to spider the website while the",
    "start": "2268680",
    "end": "2275040"
  },
  {
    "text": "website is running a ravage so so you will see when burp is scanning the website or spidering a website the",
    "start": "2275040",
    "end": "2282000"
  },
  {
    "text": "ravage will able to detect vulnerabilities at real time without attack data and then for added fun now",
    "start": "2282000",
    "end": "2289200"
  },
  {
    "text": "basically before I go into it here just show you uh before we go to ravage",
    "start": "2289200",
    "end": "2295240"
  },
  {
    "text": "detection we have like say two vulnerabilities detected but we'll see more after we use use burp as the uh as",
    "start": "2295240",
    "end": "2304160"
  },
  {
    "text": "the blackbox tool to spider it so here what we want to do is just generate a few links for burp to to work on uh so",
    "start": "2304160",
    "end": "2311240"
  },
  {
    "text": "he has some knowledge of app and can start spidering it so we want to try a",
    "start": "2311240",
    "end": "2316400"
  },
  {
    "text": "few Xs xss and a few sequel injections some X pass injection and some of them",
    "start": "2316400",
    "end": "2323359"
  },
  {
    "text": "are blind some of them are deterministic uh just generate a few links so the",
    "start": "2323359",
    "end": "2329240"
  },
  {
    "text": "reason we chose burp is that burp is one of the state of art scanner uh in blackbox so I want to compare it and see",
    "start": "2329240",
    "end": "2335800"
  },
  {
    "text": "which one looks better better and how we can use burp to drive it so if you see just after a few mouth clicks we found",
    "start": "2335800",
    "end": "2342040"
  },
  {
    "text": "another xss and if we start to use burp to spider the",
    "start": "2342040",
    "end": "2349160"
  },
  {
    "text": "website we can see you can see on the left hand side it's trying to detect pop vulnerabilities and out of this big",
    "start": "2349160",
    "end": "2354960"
  },
  {
    "text": "chunk of Jon data are vulnerability traces so here just submit a regular",
    "start": "2354960",
    "end": "2360720"
  },
  {
    "text": "form and you can see all of things popping up on the left hand side is all of the xss detected and all of the",
    "start": "2360720",
    "end": "2366560"
  },
  {
    "text": "exportable URL that it's able to generate if you go back to hone and refresh the page you see new mobilities",
    "start": "2366560",
    "end": "2373680"
  },
  {
    "text": "detected so more cust scripting more CLE injection more XX injection you can",
    "start": "2373680",
    "end": "2378760"
  },
  {
    "text": "safely ignore the printer console it's just a debugging option that we used um",
    "start": "2378760",
    "end": "2384000"
  },
  {
    "text": "and before we go into detail let's actually start scanning with burp and",
    "start": "2384000",
    "end": "2389040"
  },
  {
    "text": "then we can compare the results and during the scanning process we can go back to to H to actually go into one of",
    "start": "2389040",
    "end": "2397319"
  },
  {
    "text": "the vulnerability and see the data flow so you see the scan cues running and let's just audit the issues",
    "start": "2397319",
    "end": "2405160"
  },
  {
    "text": "so if you take a look at one example where if you see on the left hand side it's basically the fishing.",
    "start": "2405160",
    "end": "2412400"
  },
  {
    "text": "Java 151 is a source of the vulnerability in your code and the parameter parser of java line number 615",
    "start": "2412400",
    "end": "2420160"
  },
  {
    "text": "is the syn of the vulnerability and on the mid in the middle pane is basically the complet flow you will see where you",
    "start": "2420160",
    "end": "2427119"
  },
  {
    "text": "get the data from request and then you retrieve the first",
    "start": "2427119",
    "end": "2433520"
  },
  {
    "text": "element from that tainted array and then you return it for whatever it calls the",
    "start": "2433520",
    "end": "2440400"
  },
  {
    "text": "function and then return again and assign the return tax into a variable",
    "start": "2440400",
    "end": "2445560"
  },
  {
    "text": "called search taex and then later on we use the search tax to create a string element and the",
    "start": "2445560",
    "end": "2454240"
  },
  {
    "text": "string element at the end you will see c will be added to the anamon container",
    "start": "2454240",
    "end": "2459599"
  },
  {
    "text": "which we Define as a sync so if you take a look at it we have a complete data flow but that's not only",
    "start": "2459599",
    "end": "2467359"
  },
  {
    "text": "the thing we has we also have the URL right and the parameter that make the",
    "start": "2467359",
    "end": "2472599"
  },
  {
    "text": "vulnerability where we got the taint so all of those the URL the parameter you",
    "start": "2472599",
    "end": "2478440"
  },
  {
    "text": "cannot get from static analysis in data flow you cannot get from blackbox testing so it's basically the mixture of",
    "start": "2478440",
    "end": "2484839"
  },
  {
    "text": "everything you can get from all those different tools so that's probably going to go to a",
    "start": "2484839",
    "end": "2491880"
  },
  {
    "text": "different vulnerability but uh for for sake of time let's not go through",
    "start": "2491880",
    "end": "2499760"
  },
  {
    "text": "it so okay now burp finished scanning and what burp found is some issue like",
    "start": "2499760",
    "end": "2508440"
  },
  {
    "text": "clear test menion password and other minor issues sometimes we're able to find one xss maybe one xass injection",
    "start": "2508440",
    "end": "2516640"
  },
  {
    "text": "but it's kind of flappy so now you can sort of see how",
    "start": "2516640",
    "end": "2521960"
  },
  {
    "text": "much burp is able to find and how much ravage they to find and get a",
    "start": "2521960",
    "end": "2527200"
  },
  {
    "text": "comparison so I apologize again for the live demo not being able to work never",
    "start": "2527200",
    "end": "2532560"
  },
  {
    "text": "happened never expected it um I'm glad that I took a video so now you have some knowledge of",
    "start": "2532560",
    "end": "2541119"
  },
  {
    "text": "ravage and we're going to talk about most importantly how you can use ravage for a product and your company",
    "start": "2541119",
    "end": "2548040"
  },
  {
    "text": "so if you have other tools ready say sta analysis great it's not abandon it we",
    "start": "2548040",
    "end": "2554200"
  },
  {
    "text": "can rent ravage and SDA and cross verify the results or you can use ravage to",
    "start": "2554200",
    "end": "2560079"
  },
  {
    "text": "verify the results of SDA and see if that works in the meantime you can if you",
    "start": "2560079",
    "end": "2567359"
  },
  {
    "text": "also have blackbox tools you can use the blackbox tool to drive ravage to run as I did and also use the U use ravage to",
    "start": "2567359",
    "end": "2575920"
  },
  {
    "text": "get data flow of the vulnerabilities that detected by the blackbox",
    "start": "2575920",
    "end": "2581599"
  },
  {
    "text": "full and then in testing Frameworks this is going to be very exciting so if in",
    "start": "2581599",
    "end": "2587040"
  },
  {
    "text": "your product you have unit testing slim testing or any testing squid great all",
    "start": "2587040",
    "end": "2592520"
  },
  {
    "text": "of those are going to incorporate into ravage and turned automatically into",
    "start": "2592520",
    "end": "2597880"
  },
  {
    "text": "security test so you just double the size of your security test cases because",
    "start": "2597880",
    "end": "2603319"
  },
  {
    "text": "all of those as long as they have rules running on top of ravage you will detect security am",
    "start": "2603319",
    "end": "2609280"
  },
  {
    "text": "abilities testing environment so in testing environment if if in your",
    "start": "2609280",
    "end": "2615280"
  },
  {
    "text": "application in your in your in your company you have staging servers you have da servers you can ask your DS and",
    "start": "2615280",
    "end": "2621640"
  },
  {
    "text": "qas when whenever they testing their application on that server run that server on top of ravage so that whenever",
    "start": "2621640",
    "end": "2628240"
  },
  {
    "text": "they are using that server they're actually helping you guys for security testing automatically for",
    "start": "2628240",
    "end": "2634520"
  },
  {
    "text": "free and that production I will proceed with caution mainly",
    "start": "2634520",
    "end": "2640119"
  },
  {
    "text": "because mainly because there's performance impact and fully aware of that but if you're ambitious enough uh I",
    "start": "2640119",
    "end": "2646839"
  },
  {
    "text": "will tell you there's really big benefit one big benefit that you can get by running a production which is you're",
    "start": "2646839",
    "end": "2654640"
  },
  {
    "text": "able to block attacks in real times think about there if there seal injection in your product if the techer",
    "start": "2654640",
    "end": "2661119"
  },
  {
    "text": "is able to launch it you're going to lose your data but if you're run ravage the block it in real time you're not",
    "start": "2661119",
    "end": "2667000"
  },
  {
    "text": "so that's a really great benefit if you do want to run production I would say start with sampling maybe",
    "start": "2667000",
    "end": "2673160"
  },
  {
    "text": "0.1% of your customers and go from there and see how that works um but it's one",
    "start": "2673160",
    "end": "2678960"
  },
  {
    "text": "of the options that you can have so I'm going to talk about what you",
    "start": "2678960",
    "end": "2686480"
  },
  {
    "start": "2683000",
    "end": "2796000"
  },
  {
    "text": "can take away from the presentation so suppose you just forgot everything I",
    "start": "2686480",
    "end": "2693119"
  },
  {
    "text": "have just said that is okay f one sentence summary of what is ravage",
    "start": "2693119",
    "end": "2698920"
  },
  {
    "text": "ravage is a Java rtime analysis tool that's able to detect vulnerabilities get data flows and generate",
    "start": "2698920",
    "end": "2706240"
  },
  {
    "text": "exploits and we need your help on improving its performance especially on um making jit compiler works with ravage",
    "start": "2706240",
    "end": "2714240"
  },
  {
    "text": "and also in the end of day if we can contribute back to Java or open jdk we can make more make it available to more",
    "start": "2714240",
    "end": "2721079"
  },
  {
    "text": "people and the regular developers to use it and then also need your help to build",
    "start": "2721079",
    "end": "2726880"
  },
  {
    "text": "a reach rule set as I talk about we have only very limited rule sets so we might miss issues so and this is not only",
    "start": "2726880",
    "end": "2734200"
  },
  {
    "text": "useful for ravage or to only random analysis it's useful to all kinds of",
    "start": "2734200",
    "end": "2739520"
  },
  {
    "text": "program analysis tool you have so if in the security Community if we have can have a rule set that everybody shares",
    "start": "2739520",
    "end": "2746720"
  },
  {
    "text": "and use in different products and different tools that that's program analysis I would say that's great that's really valuable so we are trying to push",
    "start": "2746720",
    "end": "2754319"
  },
  {
    "text": "that and since the knowledge with ravage is not language specific if your company",
    "start": "2754319",
    "end": "2760440"
  },
  {
    "text": "is using other languages great uh we encourage you to implement ravage to other languages as",
    "start": "2760440",
    "end": "2766480"
  },
  {
    "text": "well so because the demo failed I actually end up early and that's not",
    "start": "2766480",
    "end": "2774760"
  },
  {
    "text": "expected but that's okay so uh thank you for being here I really appreciate it and thank you for patience if you want",
    "start": "2774760",
    "end": "2781480"
  },
  {
    "text": "to download a tool slice wi paper and source code go to ravage security",
    "start": "2781480",
    "end": "2786640"
  },
  {
    "text": "so thank you guys and open to questions if you have",
    "start": "2786640",
    "end": "2791440"
  },
  {
    "text": "them",
    "start": "2795400",
    "end": "2798400"
  }
]