[
  {
    "text": "hey folks welcome um we're going to try to do 100 slides in 40 minutes so we may not breathe for a little bit but uh we",
    "start": "2600",
    "end": "8559"
  },
  {
    "text": "if we don't have time for questions we'll either go in the hallway or do the wrap room so let us know um so let's get",
    "start": "8559",
    "end": "14040"
  },
  {
    "text": "rolling hopefully and here we go sweet so this is a talk",
    "start": "14040",
    "end": "19600"
  },
  {
    "text": "about the evolution of secure shell so an overview of the sh ecosystem which is way bigger than just s and drop air",
    "start": "19600",
    "end": "25080"
  },
  {
    "text": "what's changed what hasn't some really new and interesting attacks and a little bit about the fragmentation of the open AG codebase and deployments and then",
    "start": "25080",
    "end": "31840"
  },
  {
    "text": "we're going to talk about some code we wrote which we call shamble which is the fun way to drop random shells out of devices with SH and then because it's",
    "start": "31840",
    "end": "38559"
  },
  {
    "text": "blackout we're going to tell you how to defend it too so that we'll get started uh so in the beginning 30 years ago",
    "start": "38559",
    "end": "43680"
  },
  {
    "text": "there was SSH so tat yolan created sh V1 back in '95 um it was forked into OSS it",
    "start": "43680",
    "end": "49600"
  },
  {
    "text": "was fored into open be open SSH then became open open H portable uh later on pki split off then you've got drop there",
    "start": "49600",
    "end": "57199"
  },
  {
    "text": "so there's a a lot of different versions of sh based on open AG but then you also have drop AAR as a separate code base uh",
    "start": "57199",
    "end": "63160"
  },
  {
    "text": "in addition to those two um there's a long tale of other stuff out there so if you look at internet facing SSH demons",
    "start": "63160",
    "end": "69600"
  },
  {
    "text": "um it's mostly open station dropper like 90% but you have this long tail of other Oddball stuff lancom HP the HP IO MBS",
    "start": "69600",
    "end": "77000"
  },
  {
    "text": "that we only do stuff the zy cells the net screens and even though uh these only make up about 10% of the stuff you",
    "start": "77000",
    "end": "83079"
  },
  {
    "text": "see on the internet they're pretty important so a lot of the not open AG stuff out there like your firewalls networking and storage devices your",
    "start": "83079",
    "end": "89079"
  },
  {
    "text": "cisos your n screens your ad trans they're all running customization plantations that have nothing to do with open or at least haven't for a very long",
    "start": "89079",
    "end": "95520"
  },
  {
    "text": "time same time a lot of your OT and ICS equipment things like your semens your net power Moka etc those are also",
    "start": "95520",
    "end": "101240"
  },
  {
    "text": "running their own sh implantations and again not based open so there's a pretty big attack surfice of things out there",
    "start": "101240",
    "end": "106439"
  },
  {
    "text": "that are not open S H but they are running s h and that's where we're going to focus a lot of our time today uh separately we've seen our friends like",
    "start": "106439",
    "end": "112960"
  },
  {
    "text": "move it for example they actually have an sh implementation as well that's based on IP works we'll talk about and there's also a lot of these uh uh source",
    "start": "112960",
    "end": "120320"
  },
  {
    "text": "code forges like kit Garett and so on that have their own built-in sh demons through libraries so uh let's see go in the",
    "start": "120320",
    "end": "127479"
  },
  {
    "text": "right direction here um sh is everywhere it is the second most common admin protocol if you include HTTP is the",
    "start": "127479",
    "end": "133040"
  },
  {
    "text": "first one um it is more popular than RDP than SNB than anything else it's how the internet is admin so without without SSH",
    "start": "133040",
    "end": "139879"
  },
  {
    "text": "there pretty much is no admin everyone use open everyone use shsh in some form even it's through things like SSM or through some other mechanism to to",
    "start": "139879",
    "end": "146200"
  },
  {
    "text": "transport it it's enabled in every cloud provider by default it's part of every major you can find in embedded devices",
    "start": "146200",
    "end": "151440"
  },
  {
    "text": "servers and mobile so sh is pretty much everywhere um sh protocol really is two",
    "start": "151440",
    "end": "156680"
  },
  {
    "text": "phases you got your clear teex stuff like your version exchange your key exchange in it things like that and then after your key exchange after your Diffy",
    "start": "156680",
    "end": "163239"
  },
  {
    "text": "Helman then you have all your encrypted stuff and your um Banner if you will your um authentication all that happens",
    "start": "163239",
    "end": "169920"
  },
  {
    "text": "in the encrypted Channel and that becomes important when we start talking about the state so you've probably seen the sh banners before things like uh sh-",
    "start": "169920",
    "end": "177440"
  },
  {
    "text": "2.0 open- 98 P1 Etc um obviously there's the version of the protocol there's the name of the product and there's a",
    "start": "177440",
    "end": "183200"
  },
  {
    "text": "comment which is often the package name and you also get a list of like ciphers Max things like that so um we talked a",
    "start": "183200",
    "end": "188640"
  },
  {
    "text": "little bit about this but basically uh after you've gotten the version exchange you some sort of key exchange Diffy Helmet or similar and then you go into",
    "start": "188640",
    "end": "194720"
  },
  {
    "text": "the authentication phase of like passwords or public keys or things like that uh what's interesting about this and kind of fun for the research I was",
    "start": "194720",
    "end": "200159"
  },
  {
    "text": "trying to figure out like how does Pub Key authentication prevent the you know server from relaying to another server",
    "start": "200159",
    "end": "205400"
  },
  {
    "text": "on up the entire uh signature blob signed by the public key starts off with the key exchange negotiated session ID",
    "start": "205400",
    "end": "211120"
  },
  {
    "text": "which of course is tied to that host so if you're ever wondering how that works that's how it works so there's a lot of stuff insh",
    "start": "211120",
    "end": "217360"
  },
  {
    "text": "you've got interactive shells command execution file transfers TCP forwarding Unix forwarding X1 forwarding agent forwarding you name it and they all go",
    "start": "217360",
    "end": "223439"
  },
  {
    "text": "across the same socket we're going to talk about how some of those things um make things more challenging so what's interesting is that SSH especially",
    "start": "223439",
    "end": "229840"
  },
  {
    "text": "recently has been treated more like TLS than it has before so TLS as you know is what makes https you know secure web",
    "start": "229840",
    "end": "236159"
  },
  {
    "text": "work um and a lot of folks are now using SSH as if it was TLS so what's know the",
    "start": "236159",
    "end": "241200"
  },
  {
    "text": "main differences though are that sh of course doesn't typically have a certificate Authority while you can set up sh certificate authorities is not the",
    "start": "241200",
    "end": "247400"
  },
  {
    "text": "most common way to do it um authentication is actually a core stage of the protocol compared to TLS uh and",
    "start": "247400",
    "end": "252760"
  },
  {
    "text": "it has this multi flexure kind of built into it for things like channels and sessions things like that uh another important difference and this is",
    "start": "252760",
    "end": "258199"
  },
  {
    "text": "important when you think about things like the Terin attack is that when sh is doing its key exchange the first Cipher sent by the client is used that's",
    "start": "258199",
    "end": "265280"
  },
  {
    "text": "supported by the server not the best all the first and that's why the terapin attack was so effective and we'll talk a",
    "start": "265280",
    "end": "270639"
  },
  {
    "text": "little bit a little bit that later what's interesting about this though is the compliance standards so compliance typically covers TLS very well you must",
    "start": "270639",
    "end": "276280"
  },
  {
    "text": "use these algorithms this Stuff Etc and they sort of kind of talk about s in the sense that if you use the same algorithms of ciphers you're okay but no",
    "start": "276280",
    "end": "282919"
  },
  {
    "text": "one really talks about host key management and the key management part is actually really important of the security for SSH because there isn't",
    "start": "282919",
    "end": "287960"
  },
  {
    "text": "typically a central CA so with that let me hand off to Rob talk about what's new thank you HD so",
    "start": "287960",
    "end": "294720"
  },
  {
    "text": "what's new in uh in SSH it's a protocol that's everywhere it's evolved over the",
    "start": "294720",
    "end": "299759"
  },
  {
    "text": "years and it's uh it's got a well-defined mechanism for adding extensions so most of those extensions",
    "start": "299759",
    "end": "305440"
  },
  {
    "text": "are dealing with new protocols new key exchange mechanisms signing algorithms things like that but you do also get oh",
    "start": "305440",
    "end": "312160"
  },
  {
    "text": "and also some postquantum stuff which is super cool um but then you also just get some interesting protocol extensions like Ping and pong or host bound Keys uh",
    "start": "312160",
    "end": "319280"
  },
  {
    "text": "lots of tunneling stuff super useful um also over the years we've seen new authentication mechanisms added to SSH",
    "start": "319280",
    "end": "327280"
  },
  {
    "text": "uh multiactor authentication uh is is is much more common now much more available much more easily integrated um you have",
    "start": "327280",
    "end": "333800"
  },
  {
    "text": "uh challenge response and keyboard interactive uh I always find it funny so keyboard interactive is designed to do",
    "start": "333800",
    "end": "338919"
  },
  {
    "text": "lots of potential authentication algorithms but 99% of the time it just ends up being passwords but still it",
    "start": "338919",
    "end": "344880"
  },
  {
    "text": "exists and it's there now um and you can also have these the Beautiful You Know UB keys and and other",
    "start": "344880",
    "end": "351600"
  },
  {
    "text": "uh external agents Harbor keys and you can even specify that those keys need to uh be verified have a pin have a user",
    "start": "351600",
    "end": "357280"
  },
  {
    "text": "present things like that super super useful and you can have as HD mentioned",
    "start": "357280",
    "end": "363039"
  },
  {
    "text": "centralized SSH authentication with certificates and these are amazingly powerful and it's something that I wish more people use because you can really",
    "start": "363039",
    "end": "369039"
  },
  {
    "text": "do some some very impressive things with it um and you can also use uh uh SSH",
    "start": "369039",
    "end": "374199"
  },
  {
    "text": "certificates for host authentication things like that um and then something that we've seen in our research that's come up just over the years SSH has",
    "start": "374199",
    "end": "381759"
  },
  {
    "text": "always had these pre-authentication banners but they're significantly more common now especially on these long",
    "start": "381759",
    "end": "387080"
  },
  {
    "text": "taale of devices that we were talking about the the the routers and things like that and there's an immense amount",
    "start": "387080",
    "end": "392240"
  },
  {
    "text": "of information that is disclosed pre- off um and here you can see an example of the extensions and things like that",
    "start": "392240",
    "end": "399440"
  },
  {
    "text": "and this is how they're advertised you can see the the Ping at ssh.com and all that um and these are advertised and",
    "start": "399440",
    "end": "405680"
  },
  {
    "text": "negotiated upon during that initial uh protocol negotiation phase there's also",
    "start": "405680",
    "end": "411360"
  },
  {
    "text": "the uh and this is op SSH specific the per Source penalties directive which uh",
    "start": "411360",
    "end": "416400"
  },
  {
    "text": "I highly recommend that you use it's been implemented to prevent uh or or mitigate uh Bruce uh Brute Force attacks",
    "start": "416400",
    "end": "424240"
  },
  {
    "text": "and you can basically Define a source as a network address or a range of addresses and then penalties can be you know block that or or slow it down",
    "start": "424240",
    "end": "430720"
  },
  {
    "text": "things like that um that's becoming more and more popular um and then I also love",
    "start": "430720",
    "end": "437400"
  },
  {
    "text": "SSH keys are now public identities your public key is mathematically speaking supposed to be public you're supposed to",
    "start": "437400",
    "end": "442879"
  },
  {
    "text": "put it everywhere but people I think don't realize especially with the Advent of these large open source projects that",
    "start": "442879",
    "end": "449879"
  },
  {
    "text": "your GitHub or that your your public key is is your public identity right it is your passport identify me but you can go",
    "start": "449879",
    "end": "455879"
  },
  {
    "text": "to GitHub you can go to Launchpad you can get your public key and people will know who you are in fact here's HD",
    "start": "455879",
    "end": "461000"
  },
  {
    "text": "sshing into uh who am i.o. and in fact they know who he is because of his SSH",
    "start": "461000",
    "end": "467680"
  },
  {
    "text": "key that was scraped from GitHub SSH has also become the sort of de facto",
    "start": "467680",
    "end": "472960"
  },
  {
    "text": "standard in uh secure file transfer and these are it's very common in uh these",
    "start": "472960",
    "end": "478000"
  },
  {
    "text": "border Gateway devices where you're uploading documents across secure domains so like when you're uploading your medical records you're applying for",
    "start": "478000",
    "end": "484680"
  },
  {
    "text": "a mortgage things like that you might end up using SFTP and this is great because it's you know a much more secure",
    "start": "484680",
    "end": "490159"
  },
  {
    "text": "protocol than we used in the past but it also makes these things extremely high value targets uh and then this is my",
    "start": "490159",
    "end": "496360"
  },
  {
    "text": "favorite slide of the whole thing because I love terminals I've written more terminal ulators than I can count it's just great come talk to me about",
    "start": "496360",
    "end": "502000"
  },
  {
    "text": "terminals but SSH has caused a Renaissance or more likly there's been a Renaissance in terminal applications and",
    "start": "502000",
    "end": "508840"
  },
  {
    "text": "uh it's just you can see there's here Star Wars on the terminal that's actually pretty old but you can get to it via SSH now not just helmet uh ask",
    "start": "508840",
    "end": "515599"
  },
  {
    "text": "yard is coming back and you can buy coffee using SSH but what's neat is that",
    "start": "515599",
    "end": "521080"
  },
  {
    "text": "this is increasing the usage of SSH it's causing this Renaissance at the terminal and I just love it but uh that also",
    "start": "521080",
    "end": "527320"
  },
  {
    "text": "increases the amount of exposure which HD is going to tell you about cool thanks Rob so just stage a little bit um",
    "start": "527320",
    "end": "534120"
  },
  {
    "text": "so one uh we mentioned terpin earlier uh fabian's doing a talk tomorrow I definitely recommend checking out",
    "start": "534120",
    "end": "539560"
  },
  {
    "text": "Islander FG level zero uh breaking channels Integrity by sequence number manipulation it is fantastic it's a",
    "start": "539560",
    "end": "545760"
  },
  {
    "text": "really neat way to uh use some cool crypto Primitives and aand the middle attack to do terrible things with SSH so",
    "start": "545760",
    "end": "551120"
  },
  {
    "text": "recommend checking that out um this has really been a banner year for ssh in general in terms of being an exciting year to operate SSH um we're probably",
    "start": "551120",
    "end": "558720"
  },
  {
    "text": "all very familiar with the XU tills back door um how this multi-year campaign uh back door open H through the system D",
    "start": "558720",
    "end": "565000"
  },
  {
    "text": "patches of RA and deian and it was a really neat back door because it was a nobody but us back door TI the attacker",
    "start": "565000",
    "end": "570399"
  },
  {
    "text": "specific key and it was caught the very last minute by Andre spr and he noticed that shd was using slightly more CPU",
    "start": "570399",
    "end": "576079"
  },
  {
    "text": "than it should have and that kind of unraveled the whole thing before it made it out to the stable distributions but it did ship into the rolling distributions so definitely exciting",
    "start": "576079",
    "end": "582760"
  },
  {
    "text": "times in SSH uh not to be outdone of course the qualis threat research team is amazing and did yet again a fantastic",
    "start": "582760",
    "end": "589440"
  },
  {
    "text": "job of pulling a a rabbit out of a hat with a remote route exploit for open a h that applies to literally everything um",
    "start": "589440",
    "end": "596120"
  },
  {
    "text": "everything between a huge range of versions um and this is you know pretty big deal like it's pretty hard to get",
    "start": "596120",
    "end": "601640"
  },
  {
    "text": "unauthenticated remote code execution open a h especially given all the different things the team has done to protect against it but because it's a",
    "start": "601640",
    "end": "607160"
  },
  {
    "text": "signal re-entrance bug that's effectively a regression of a previous fix the signal re-entrance happened to the parent process which runs at Route",
    "start": "607160",
    "end": "613120"
  },
  {
    "text": "not as one as it's prep so an incredibly cool exploit they managed to exploit a 32-bit Linux OS in about 6 hours and",
    "start": "613120",
    "end": "619440"
  },
  {
    "text": "they estimate probably weeks or months to pop us a 64-bit machine so if you ever have a hardened vendor Appliance",
    "start": "619440",
    "end": "624560"
  },
  {
    "text": "and you want to spend six months grinding keys on it to get a shell and you have an updated well there you go so very few folks actually applied patches",
    "start": "624560",
    "end": "630560"
  },
  {
    "text": "open H for regression yet uh separately a solar designer found a related bug that only applied to the red hat build",
    "start": "630560",
    "end": "635760"
  },
  {
    "text": "of open H and that was limited to the nonroot user so exciting times for sure and then lastly this is a fantastic work",
    "start": "635760",
    "end": "642120"
  },
  {
    "text": "by the Watchtower Labs team they were looking at the most recent move at vulnerability and there's so many but the most recent one was hilarious for",
    "start": "642120",
    "end": "648120"
  },
  {
    "text": "many reasons they've realized that it's actually a vulnerability in sh demon itself so move it including the web",
    "start": "648120",
    "end": "653200"
  },
  {
    "text": "interface also has an sh implementation it's based on the IP Works Library they identified the fact that anytime a",
    "start": "653200",
    "end": "659320"
  },
  {
    "text": "public key is being processed from an an attacker or user the shd is treating it like a file path the giant binary blob",
    "start": "659320",
    "end": "665360"
  },
  {
    "text": "they treat like a file path including a UNC path so you can do forc authentication to remote server all kinds of terrible awesome things they",
    "start": "665360",
    "end": "671639"
  },
  {
    "text": "found this amazing way to exploit it by basically injecting a key into the log file making it trust itself like it's an",
    "start": "671639",
    "end": "676959"
  },
  {
    "text": "amazing post recommend checking it out but the the really amazing thing about this is that they found the vulnerability they identified the vulnerability in movement of course um",
    "start": "676959",
    "end": "683399"
  },
  {
    "text": "through the revers reversing the patch but then they identified that it really was part of the IP Works Library which is used by all kinds of other vendors",
    "start": "683399",
    "end": "689079"
  },
  {
    "text": "for other products so who knows how many other products out there are still vulnerable to this particular bug because they use the IP Works Library",
    "start": "689079",
    "end": "694560"
  },
  {
    "text": "may not have updated their SDK or the license is expired so fun times with that uh back to Rob talk about what",
    "start": "694560",
    "end": "700279"
  },
  {
    "text": "hasn't changed so things that haven't changed in SSH it's still running on the",
    "start": "700279",
    "end": "706040"
  },
  {
    "text": "internet right it's still running over IP you can still identify the operating system through uh fingerprinting the TCP",
    "start": "706040",
    "end": "712079"
  },
  {
    "text": "stack which is you know great um you still get the clear text exchange for like server version negotiation things",
    "start": "712079",
    "end": "717880"
  },
  {
    "text": "like that you still get the advertisement of the uh the key all this pre- off stuff the key exchange the",
    "start": "717880",
    "end": "723360"
  },
  {
    "text": "algorithms that are available you can use that and like we mentioned earlier the uh the the banners which are just so",
    "start": "723360",
    "end": "728880"
  },
  {
    "text": "much more common and then for the enhanced authentication the questions that they're asked the wording things like that can all be used to fingerprint",
    "start": "728880",
    "end": "735399"
  },
  {
    "text": "what you're talking about and it's interesting because as HD said there's been a huge amount of work to secure SSH",
    "start": "735399",
    "end": "741519"
  },
  {
    "text": "before off but because it's so full of features because they want you to use it for a lot of things to keep things secure it's got a fairly large post off",
    "start": "741519",
    "end": "748680"
  },
  {
    "text": "attack surface you've got channels you've got uh pseudo terminal management all sorts of things agent off Brak",
    "start": "748680",
    "end": "754279"
  },
  {
    "text": "commands X11 forwarding and so if you actually get authenticated the attack surface is is much much bigger um and",
    "start": "754279",
    "end": "760920"
  },
  {
    "text": "then it's still because it's designed to be remotely accessible there is a default exposure to Brute Force attacks",
    "start": "760920",
    "end": "766160"
  },
  {
    "text": "um this is somewhat mitigated by fail to ban and things like that you know it's a third party stuff and then the the pur",
    "start": "766160",
    "end": "771199"
  },
  {
    "text": "Source penalties will help a lot but SSH is a relatively compute intensive protocol and some of these devices are",
    "start": "771199",
    "end": "776880"
  },
  {
    "text": "relatively you know not particularly beef so it can consume a significant amount of CPU in these situations um",
    "start": "776880",
    "end": "784680"
  },
  {
    "text": "host Key Management has never been good and it it hasn't gotten much better host keys are a separate uh key pair that's",
    "start": "784680",
    "end": "791160"
  },
  {
    "text": "used to uniquely identify the machine not just a user and those are uh they're",
    "start": "791160",
    "end": "796560"
  },
  {
    "text": "very often duplicated or burned into VM images and you'll have like the Thousand machines with the same host key and",
    "start": "796560",
    "end": "802440"
  },
  {
    "text": "things like that and they're very rarely rotated because rotating them can often break workflows in uh fun and amusing",
    "start": "802440",
    "end": "808639"
  },
  {
    "text": "ways and SSH is still used as a transport layer it's still used almost as like a little miniature rapid quick",
    "start": "808639",
    "end": "815120"
  },
  {
    "text": "to set up VPN and it's great and you you should definitely use it but it's still something that is uh quite commonly used",
    "start": "815120",
    "end": "822079"
  },
  {
    "text": "and now to get into some some really neat stuff about how this uh this can be broken I'm going to hand it back to",
    "start": "822079",
    "end": "827399"
  },
  {
    "text": "HD thanks so um you know folks who familiar with publicy authentication the",
    "start": "827399",
    "end": "832600"
  },
  {
    "text": "idea is you have an sh key you like add it to your key ring your agent then you authenticate to a machine you may have",
    "start": "832600",
    "end": "837639"
  },
  {
    "text": "agent 40 you might not but how it actually works behind the scenes is a two-step process you start off saying hey server would you accept this public",
    "start": "837639",
    "end": "844040"
  },
  {
    "text": "key for this user it says yes and then you sign a blob starting off with the the kek session ID and then a bunch of",
    "start": "844040",
    "end": "849920"
  },
  {
    "text": "other fields in it that prove that you own that that private key and it says yes you successfully signed that blob you now own the private key there you go",
    "start": "849920",
    "end": "856279"
  },
  {
    "text": "um the caveat of course is that if you don't have the private key you can still do the first step and there's a comment in open H that says hey this is like",
    "start": "856279",
    "end": "862480"
  },
  {
    "text": "fake a reply should we actually be doing this is this a security concern but it's been there for 10 years like this is considered not really big a security",
    "start": "862480",
    "end": "868160"
  },
  {
    "text": "impact there's a metas module that does this half key half authentication Pub Key scan where if you have someone's",
    "start": "868160",
    "end": "873240"
  },
  {
    "text": "public key you can see which servers accept that public key even without having their private key and because you know that you can kind of see where this",
    "start": "873240",
    "end": "879079"
  },
  {
    "text": "is going so if you wanted to let's say um test uh every server on the internet to see whether a particular public key",
    "start": "879079",
    "end": "885320"
  },
  {
    "text": "was accepted for a user there's a couple steps you want to take or three steps one get a list of all the servers in the internet so quickly you know zmap uh",
    "start": "885320",
    "end": "892079"
  },
  {
    "text": "Mass scan whatever you want to use map uh pick a database to dump it all from whatever you like there and then go",
    "start": "892079",
    "end": "897240"
  },
  {
    "text": "build the giant database of all the keys you want to hunt for so you can grind through all the GitHub stuff the big query crawl the keys build the database",
    "start": "897240",
    "end": "903480"
  },
  {
    "text": "uh you can pull them out a Launchpad for all the folks using the bunu Launchpad platform it's pretty easy to C those and then the Bad Keys project uh by Hano",
    "start": "903480",
    "end": "909560"
  },
  {
    "text": "block block did a great job of collecting all these compromise keys that could be used as well and then lastly you want to list the usernames to",
    "start": "909560",
    "end": "915519"
  },
  {
    "text": "try for each key so this could be your standard Cloud defaults could be the comments from the person's key in GitHub which usually indicates what their",
    "start": "915519",
    "end": "920680"
  },
  {
    "text": "default username is and so on so you put this recipe together and we go hunting for giaan so we thought it'd be",
    "start": "920680",
    "end": "926680"
  },
  {
    "text": "hilarious that if giaan whoever this person thing is decided to back door open sh and Target SSH so we're going to",
    "start": "926680",
    "end": "933000"
  },
  {
    "text": "use SSH to Target Gan so we grabbed gan's public keys off GitHub and then we turned around and scan the entire",
    "start": "933000",
    "end": "938759"
  },
  {
    "text": "internet with a bunch of default usernames to see what server on the internet would accept the Gan public key in hopes of doxing the Gan person by",
    "start": "938759",
    "end": "945600"
  },
  {
    "text": "finding their home servers and other machines are using so",
    "start": "945600",
    "end": "951360"
  },
  {
    "text": "uh we thought it'd be a fun use so putting it all together we created you know the public Keys got the coup Keys",
    "start": "951360",
    "end": "957199"
  },
  {
    "text": "we wrote a little halfof scanner and go just because we need something a little bit faster than the Met way for this because we're doing a crapload of",
    "start": "957199",
    "end": "963160"
  },
  {
    "text": "systems at once we called it shamble and that's where we started this whole thing back in the XU Sals back door so we ran sham on all the hits and we murdered",
    "start": "963160",
    "end": "970120"
  },
  {
    "text": "this poor digital ocean box for days because it's it requires a lot of CPU to negotiate 43 million sh connections",
    "start": "970120",
    "end": "976720"
  },
  {
    "text": "continuously but you know we did it it was fine so uh but the key thing here is like we found a lot of stuff we found",
    "start": "976720",
    "end": "983399"
  },
  {
    "text": "tons of hits for gan's publicy and we're like oh my God we got him then we started digging into it and it's all freaking false positives is buggy",
    "start": "983399",
    "end": "989160"
  },
  {
    "text": "servers and assist with memory corruption we found services that would accept like every other public key every third public key that were like just",
    "start": "989160",
    "end": "995600"
  },
  {
    "text": "dying with out of memory conditions all kinds of terrible stuff so we reworked the tools we added detection for any Pub",
    "start": "995600",
    "end": "1000639"
  },
  {
    "text": "key for we did some like false positive mitigations we added all this crap to it and then we still didn't have a gan so",
    "start": "1000639",
    "end": "1006000"
  },
  {
    "text": "whoever the Gan group was their OPC is perfect because we could not find it anything um however what we did find was",
    "start": "1006000",
    "end": "1013120"
  },
  {
    "text": "you like 50,000 shells uh so that's what we're going to talk about instead so you know we didn't find what we wanted but",
    "start": "1013120",
    "end": "1018199"
  },
  {
    "text": "we found C of bugs so we're going to talk about all the fun bugs and that led to this talk so just heads up law",
    "start": "1018199",
    "end": "1023399"
  },
  {
    "text": "enforcement we are not Gan uh unfortunately as part of doing that scan we put the public key hash of gn's key",
    "start": "1023399",
    "end": "1029839"
  },
  {
    "text": "in everyone's logs across the whole internet repeatedly so if you if you see it us I swear we did not we did not back",
    "start": "1029839",
    "end": "1035558"
  },
  {
    "text": "door XU Tails we not that cool um and so let's say you wanted to test public Keys you want to do it faster so we talked",
    "start": "1035559",
    "end": "1041600"
  },
  {
    "text": "about taking a small number of keys like Gian keys and try against a lot of servers what if you want to go the other way and try a whole lot of keys against",
    "start": "1041600",
    "end": "1047319"
  },
  {
    "text": "a single server so I want to find out for this given server which person on GitHub hasn't has access to it",
    "start": "1047319",
    "end": "1052559"
  },
  {
    "text": "effectively so if I have all the GitHub Keys like let's say 5 to 117 million depending on which database use how can",
    "start": "1052559",
    "end": "1057679"
  },
  {
    "text": "I figure out which person has shell access to this machine if you want to dock somebody for example um well um",
    "start": "1057679",
    "end": "1063320"
  },
  {
    "text": "open a h defaults to five uh authentication attempts before disconnect to you so if you have more than four keys in your key ring and you",
    "start": "1063320",
    "end": "1069320"
  },
  {
    "text": "try to s h to a machine running open H you get disconnected before it gets to the right key and it's really annoying so that's why you can't really have more",
    "start": "1069320",
    "end": "1074520"
  },
  {
    "text": "than four keys in your sh agent typically but not all servers call uh consider p key test as an authentication",
    "start": "1074520",
    "end": "1080280"
  },
  {
    "text": "failure so 10% of all the servers in the world do not count any Pub Key test as an off failure including drop air which",
    "start": "1080280",
    "end": "1086000"
  },
  {
    "text": "is the second most common at like you know 12 15% of the internet so if you look at all these other demons you got you know Global Escape all these",
    "start": "1086000",
    "end": "1092080"
  },
  {
    "text": "different commercial mft programs none of these actually prevent any kind of rate limiting of Pub Key testing you can",
    "start": "1092080",
    "end": "1097159"
  },
  {
    "text": "just grind them all day long so we did that so we built a so as part of shamble we built this Pub Key hunting tool to go",
    "start": "1097159",
    "end": "1102520"
  },
  {
    "text": "find Gan then we're like hey we can actually just make this in turbo mode key grind so you can take the entire in this case took the 2018 get up key",
    "start": "1102520",
    "end": "1108799"
  },
  {
    "text": "database of 4.6 million keys and we tried all of them against one little drop a box in 7 minutes so you can very",
    "start": "1108799",
    "end": "1114520"
  },
  {
    "text": "easily dox and figure out is there anybody whose key I have that has access to this server with this username very quickly on a machine running anything",
    "start": "1114520",
    "end": "1120880"
  },
  {
    "text": "other than open H effectively only open H actually Limits The Pub Key attempts so in this case we did 10,000 per second",
    "start": "1120880",
    "end": "1127000"
  },
  {
    "text": "but this is 10,000 per second on a single connection and most configurations allow between 5 and 15 connections so you can do like 100,000",
    "start": "1127000",
    "end": "1132919"
  },
  {
    "text": "Keys per second and the really cool thing is it doesn't even use very much CPU like dropper is like even on an embedded device isn't really using much",
    "start": "1132919",
    "end": "1138200"
  },
  {
    "text": "this is a very effective very useful doxing attack anything you like so we do the exact same attack but this time",
    "start": "1138200",
    "end": "1143600"
  },
  {
    "text": "against an open St box you'll notice that we only did 132 per second because we're having to constantly reconnect each time you reconnect you to do the",
    "start": "1143600",
    "end": "1149600"
  },
  {
    "text": "key exchange and it's kind of slow and it's annoying and things like that so uh there's a turbo mode key grinder and now",
    "start": "1149600",
    "end": "1154760"
  },
  {
    "text": "we're going to talk about something a little bit different which is authentication bypass bugs um so s has",
    "start": "1154760",
    "end": "1160000"
  },
  {
    "text": "this strict kind of state engine built into the protocol not only are there different individual states like key exchange version exchange uh",
    "start": "1160000",
    "end": "1166159"
  },
  {
    "text": "pre-authentication authentication Channel shell Etc but the the message IDs that you're allowed to transmit within each stage are kind of fixed",
    "start": "1166159",
    "end": "1171960"
  },
  {
    "text": "there's a range of IDs you're allowed pre-authentication there's a range of IDs post key post key exchange you're allowed to say before authentication",
    "start": "1171960",
    "end": "1178440"
  },
  {
    "text": "then after authentication there's a range you're allowed to use so most of the engines that most of the sh implementations will use the ranges of",
    "start": "1178440",
    "end": "1184360"
  },
  {
    "text": "those values to prevent you from even sending a packet that it doesn't expect uh separately open isation droper also have a giant command State table like a",
    "start": "1184360",
    "end": "1190960"
  },
  {
    "text": "function table basically where the rewriting which functions are even callable based on what state you're in so you can't accidentally get to",
    "start": "1190960",
    "end": "1196280"
  },
  {
    "text": "authenticated stage because it just don't even have a function pointer there they just make sure it's very hard to screw it up so you've got this great sh",
    "start": "1196280",
    "end": "1202080"
  },
  {
    "text": "you know protocol stack and it mostly kind of works except people screw it up of course so there's a really cool bug in lib SSH back in 2018 where lib SSH is",
    "start": "1202080",
    "end": "1209400"
  },
  {
    "text": "both a client and server Library just like drop a and open if you told the server that if you sent the server the",
    "start": "1209400",
    "end": "1215400"
  },
  {
    "text": "authentication success message that you normally sent by the server back to the client it'd be okay you're in and now you have a shell it's great so we",
    "start": "1215400",
    "end": "1222120"
  },
  {
    "text": "thought like okay that's a cool attack so in this case you sent this one unexpected message and you were accidentally thic we decided to try that",
    "start": "1222120",
    "end": "1228080"
  },
  {
    "text": "with every Le state of the protocol so we built a uh we inside the shamble code we had it at every single phase of",
    "start": "1228080",
    "end": "1233679"
  },
  {
    "text": "authentication attempted pre post off mid Etc we just said hey give me a Shell now how about now how about now how",
    "start": "1233679",
    "end": "1239159"
  },
  {
    "text": "about now and it started raining shells on it so we thought it was really cool so um some of the bugs we found there's",
    "start": "1239159",
    "end": "1244679"
  },
  {
    "text": "only a few here there's a few more that we're still chasing down but Digi transport uh IC gateways little you know",
    "start": "1244679",
    "end": "1250000"
  },
  {
    "text": "Gateway router thingies used for a lot of industrial Control Systems uh they had a bug where there's there's an uninitialized variable where if nobody",
    "start": "1250000",
    "end": "1256159"
  },
  {
    "text": "else had successfully authenticated that machine since it Rebooted you could just log in without a password using uh the street trans transition bug so that's",
    "start": "1256159",
    "end": "1262799"
  },
  {
    "text": "baked into shamble we got a demo of that uh a lot of real Tech absl rouers of the same bug and we found a few Panasonic",
    "start": "1262799",
    "end": "1268280"
  },
  {
    "text": "ethet which is the same thing we just like show right in bypass all the password authentication magically just by throwing these session requests",
    "start": "1268280",
    "end": "1274159"
  },
  {
    "text": "between different states so an example of that this is a nbit NSL these are really popular in Iran for some reason",
    "start": "1274159",
    "end": "1280000"
  },
  {
    "text": "and these are based on the real Tech chipset we found some of the real Tech chipsets running 2023 firmware is still vulnerable to it but we don't really",
    "start": "1280000",
    "end": "1285720"
  },
  {
    "text": "know who to even talk to about it because it's all of the map so you notice there's an interactive shamble command now we're actually able to um",
    "start": "1285720",
    "end": "1291880"
  },
  {
    "text": "you know talk use the sh protocol itself to mess with the the service after you've got into it but yeah strip off",
    "start": "1291880",
    "end": "1297720"
  },
  {
    "text": "bypass here's the same thing for Digi real Port devices we're just basically wearing shambles saying give me interact in the first shell and you got a shell",
    "start": "1297720",
    "end": "1304720"
  },
  {
    "text": "so not particularly exciting but it's always nice to get free shells cool um so uh there's a category",
    "start": "1304720",
    "end": "1312200"
  },
  {
    "text": "of devices that instead of doing authentication in the S protocol they let you authenticate as anything and then once you're authenticated then they",
    "start": "1312200",
    "end": "1318279"
  },
  {
    "text": "give you an interactive prompt so please log in so effec you sh in it magically authenticates you in and then it says",
    "start": "1318279",
    "end": "1323679"
  },
  {
    "text": "now please log in and you type in root or whatever your password is right this is a really bad idea because there's so much stuff you can do in the sh protocol",
    "start": "1323679",
    "end": "1329880"
  },
  {
    "text": "at that stage that in that particular state that it's hard to prevent attacks there's so many things that sh does to prevent you from even getting to that",
    "start": "1329880",
    "end": "1335840"
  },
  {
    "text": "phase that if you give somebody an interactive process you can now send signals to it you can like mess with the PT you can do all sorts of you know",
    "start": "1335840",
    "end": "1342120"
  },
  {
    "text": "environment control stuff so we started messing with some of that um so examples of devices that do Post session",
    "start": "1342120",
    "end": "1347880"
  },
  {
    "text": "Authentication uh Juniper routers Ruckus access points and Sonic walls are just a couple examples off hand there's",
    "start": "1347880",
    "end": "1353039"
  },
  {
    "text": "probably about a thousand of these things we found out there uh and they're pretty fun to mess with so we found this really simple dumb bug in Ruckus",
    "start": "1353039",
    "end": "1359279"
  },
  {
    "text": "wireless access points where if you're starting to uh log into it um you type in you you see in the little demo here",
    "start": "1359279",
    "end": "1365240"
  },
  {
    "text": "we're Shing in his root um you see first we authenticate so sh is now asking sh",
    "start": "1365240",
    "end": "1370360"
  },
  {
    "text": "automatically authenticated and now it's asking us to log in manually in the password field we're just typing in dollar parentheses and PS Au we're",
    "start": "1370360",
    "end": "1376880"
  },
  {
    "text": "getting the full PS as roote pre medication so super easy bug and we found about 900 still exposed in that're",
    "start": "1376880",
    "end": "1382360"
  },
  {
    "text": "unpatched but the vendor technically already patched this but there's never a CB for it or security note but why did it why did this bug live so long how",
    "start": "1382360",
    "end": "1388600"
  },
  {
    "text": "come this bug even got there well ends up no one ever tests the Shell at the end of the estate shell it was so far",
    "start": "1388600",
    "end": "1393760"
  },
  {
    "text": "buried in the protocol that no one really ever looked at that phase of it so we found a lot of like really trivial bugs just because no one bothered",
    "start": "1393760",
    "end": "1399559"
  },
  {
    "text": "getting that far into the state to mess with it so um one last thing it's a lot of",
    "start": "1399559",
    "end": "1404840"
  },
  {
    "text": "fun to mess with is you can send any signals you want um through the sh protocol and open a h is smart and says",
    "start": "1404840",
    "end": "1410159"
  },
  {
    "text": "well you know I'm not going to let you send some of them you can send like a Sig kill or a term or a hup or whatnot but drop or lets you send anything you",
    "start": "1410159",
    "end": "1415760"
  },
  {
    "text": "want you can send a sigv you can send it a Sig aort so we talk about regression big signal re-entrance this is signal",
    "start": "1415760",
    "end": "1420880"
  },
  {
    "text": "whatever the hell you want you can just bang signals into a process all day long so this is a really funny one this is a login prompt that's post authentication",
    "start": "1420880",
    "end": "1426360"
  },
  {
    "text": "it says please log in you say signal segv and it goes great and it just like crashes so it's a really fun way to like",
    "start": "1426360",
    "end": "1432600"
  },
  {
    "text": "core dump a random login process and we're finding all we're still doing some research to finding ways to actually get shells out of it but it's a really funny",
    "start": "1432600",
    "end": "1438080"
  },
  {
    "text": "way to attack a a post off login sequence and that hand enough to Rob talk about forting if it were dying it",
    "start": "1438080",
    "end": "1443679"
  },
  {
    "text": "wouldn't write I it would just say I but no yeah maybe it was dictating so SSH",
    "start": "1443679",
    "end": "1448960"
  },
  {
    "text": "connection forwarding is part of that post- attack surface and it's pretty interesting you SSH allows you to forward uh forward IP uh connection CP",
    "start": "1448960",
    "end": "1456320"
  },
  {
    "text": "connections across uh and through machines and we found that it's not super duper common but it's actually",
    "start": "1456320",
    "end": "1462200"
  },
  {
    "text": "more it's more common than zero um we actually have a a live well not live we have a recorded demo here of ion network",
    "start": "1462200",
    "end": "1469320"
  },
  {
    "text": "service access point uh and you can see that often times it might not allow unrestricted forwarding once you get in",
    "start": "1469320",
    "end": "1475480"
  },
  {
    "text": "but it does allow uh forwarding to a few places you can see it fails a few times and but it does let you uh loop back and",
    "start": "1475480",
    "end": "1482080"
  },
  {
    "text": "uh and uh connect to services locally running on that thing so it's a way to bypass uh some some information there",
    "start": "1482080",
    "end": "1487559"
  },
  {
    "text": "which I always found uh fun and then we were talking earlier uh by the way I I want youall to appreciate the pun check",
    "start": "1487559",
    "end": "1492760"
  },
  {
    "text": "out git that was my greatest contribution to this talk um so check out Git it git is used uh using SSH as",
    "start": "1492760",
    "end": "1499279"
  },
  {
    "text": "one of the supported transports for uh moving your source code around things like that checking out and there's been",
    "start": "1499279",
    "end": "1505080"
  },
  {
    "text": "this uh Renaissance in um in git uh in code forges that are running embedded",
    "start": "1505080",
    "end": "1511080"
  },
  {
    "text": "SSH servers and uh for example there's a there's git or gogs GTI for jeo I think",
    "start": "1511080",
    "end": "1517640"
  },
  {
    "text": "I'm saying that correctly and they're usually pretty good about uh filtering environment variables and things like",
    "start": "1517640",
    "end": "1523799"
  },
  {
    "text": "that but for example there was a bug in uh go 1193 and prior that did allow you to do uh command or I'm sorry uh",
    "start": "1523799",
    "end": "1530840"
  },
  {
    "text": "environment variable injection uh just by you know inserting a null bite it didn't check correctly so that was fun and so you can you can get some",
    "start": "1530840",
    "end": "1536919"
  },
  {
    "text": "interesting things there if you do allow uh uh get protocol to come across and then there was also the EnV command",
    "start": "1536919",
    "end": "1543000"
  },
  {
    "text": "injection with Gog so SSH allows you to set environment variables you know locally you can say please set this environment variable and it it will try",
    "start": "1543000",
    "end": "1549159"
  },
  {
    "text": "to set it and you can filter what's allowed to be set and what isn't but gogs which is a go based uh git Forge",
    "start": "1549159",
    "end": "1556039"
  },
  {
    "text": "was running the EnV command uh in response to getting uh an EnV request and you can you could set a you know",
    "start": "1556039",
    "end": "1562120"
  },
  {
    "text": "environment variable like DX equals you know whatever and and get um and and",
    "start": "1562120",
    "end": "1567600"
  },
  {
    "text": "then run whatever command you wanted uh that is uh that's not patched and I I",
    "start": "1567600",
    "end": "1573039"
  },
  {
    "text": "think we're kind of considering maybe you should not use gogs in that case um but a lot of these libraries that",
    "start": "1573039",
    "end": "1579640"
  },
  {
    "text": "Implement uh embedded SSH servers they leave it up to the the client of the library to select what environment",
    "start": "1579640",
    "end": "1585919"
  },
  {
    "text": "variables should be allowed through and so they to just allow anything through by default um there was a really fun one",
    "start": "1585919",
    "end": "1591760"
  },
  {
    "text": "this is a a CB that we we uh just got published in the soft serve uh Forge",
    "start": "1591760",
    "end": "1597840"
  },
  {
    "text": "which is a really beautiful um git thing that lets you uh that lets you create",
    "start": "1597840",
    "end": "1603159"
  },
  {
    "text": "repositories via SSH and all that but it didn't filter it wasn't filtering uh environment variables including LD",
    "start": "1603159",
    "end": "1608760"
  },
  {
    "text": "preload so here you can see we're we're checking in some very innocuous files called uh shellcode doso and we are",
    "start": "1608760",
    "end": "1615840"
  },
  {
    "text": "pushing it up to the the server um get commit uh I am apparently a very slow",
    "start": "1615840",
    "end": "1621240"
  },
  {
    "text": "typist when I'm in in GIF form and uh the we're using uh get lfs in this case",
    "start": "1621240",
    "end": "1627919"
  },
  {
    "text": "just because it leads to predictable file names on the server uh it's not actually required and you can see we're just calling with LD preload with our",
    "start": "1627919",
    "end": "1634440"
  },
  {
    "text": "our file name and look at us we are now just running arbitrary code yay always fun so filter your environment variables",
    "start": "1634440",
    "end": "1641279"
  },
  {
    "text": "is is the point there and like any other protocol SSH has fragmented and HD would",
    "start": "1641279",
    "end": "1646679"
  },
  {
    "text": "love to tell you about it so part of all this is we started auditing like all the code right so I had like 50 different",
    "start": "1646679",
    "end": "1651760"
  },
  {
    "text": "repos of sh code of my file system a bunch of reverse engineering of various commercial libraries and one thing that was in particular weird particularly",
    "start": "1651760",
    "end": "1658159"
  },
  {
    "text": "interesting was the the split in openness H so we'd like to think of openness H as being just openness H but in reality openness H is the one based",
    "start": "1658159",
    "end": "1664840"
  },
  {
    "text": "on openbsd like it uses openbsd function calls so what we use instead is openbsd portable openbsd portable is designed",
    "start": "1664840",
    "end": "1671600"
  },
  {
    "text": "for the compatibil compatibility layer that runs with runs on Linux Mac OS things like that so the patch sets that",
    "start": "1671600",
    "end": "1677880"
  },
  {
    "text": "different OS venders have applied open are go from like you know almost nothing at all being very light to massively",
    "start": "1677880",
    "end": "1683880"
  },
  {
    "text": "different so there's not just one open out there there's a million different variants based on what people have done to it so Apple actually has the least",
    "start": "1683880",
    "end": "1690279"
  },
  {
    "text": "butchered version of open this H um they did some very light patches for endpoint event logging for key for uh keychain",
    "start": "1690279",
    "end": "1696240"
  },
  {
    "text": "support things like that other than that it's pretty much bog standard and it's great so it's actually pretty awesome",
    "start": "1696240",
    "end": "1701320"
  },
  {
    "text": "now if you look at Debbie and auntu they have 36 different patches on top of open and you talk about how many you know",
    "start": "1701320",
    "end": "1706519"
  },
  {
    "text": "bugs are and how many lines of code well these are bugs specifically in the buntu and Debian versions of open H not Upstream so they get a little bit less",
    "start": "1706519",
    "end": "1712919"
  },
  {
    "text": "scrutiny um and a lot of those things are a little bit um little more difficult to secure because they touch lot more lot more parts of the system so",
    "start": "1712919",
    "end": "1718720"
  },
  {
    "text": "same thing with red hat they've got 60 different patches that more than 60 patches they applied on the Open Stage source code to make them compatible with",
    "start": "1718720",
    "end": "1724440"
  },
  {
    "text": "red hat and both of these are you know XD utils back door compatible because they link to system D and that's how",
    "start": "1724440",
    "end": "1729519"
  },
  {
    "text": "they were exploited basically um there's also this thing called PK pkix pki I-X",
    "start": "1729519",
    "end": "1734760"
  },
  {
    "text": "SSH this was Fork from open SSH back in 2 and it was designed to support x509",
    "start": "1734760",
    "end": "1740640"
  },
  {
    "text": "and fips and things like that well um it's kind of you know diverged toly from the rest of the open H source code while",
    "start": "1740640",
    "end": "1747399"
  },
  {
    "text": "it kind of sort of follows the changes there's some diffs where um you know in one case an if something happened and",
    "start": "1747399",
    "end": "1752519"
  },
  {
    "text": "open a h it became an if not something in pki so it's a little bit strange that sometimes the changes didn't directly",
    "start": "1752519",
    "end": "1757880"
  },
  {
    "text": "mirror it and that seems like there may be some risk there because it is so different uh funny enough the PK sh",
    "start": "1757880",
    "end": "1763120"
  },
  {
    "text": "imputations was still vulnerable to the regression bug too even though it was separately implemented BAS on when the",
    "start": "1763120",
    "end": "1768440"
  },
  {
    "text": "codee is fored and the last one we talk about is probably the funniest one and kind of we we'll use a little bit of a punch line here is the Microsoft Windows",
    "start": "1768440",
    "end": "1775159"
  },
  {
    "text": "the Open Stage for Windows U 350 files are changed they ripped out tons of stuff they got rid of uh Cho support",
    "start": "1775159",
    "end": "1781440"
  },
  {
    "text": "they replaced fork with subprocesses they replaced authentication with the LSA calls like it's a very different Beast than open H itself was and we",
    "start": "1781440",
    "end": "1788080"
  },
  {
    "text": "decided to dig in a little bit deeper and figure out like you know what's different about it so one open H is on",
    "start": "1788080",
    "end": "1793320"
  },
  {
    "text": "on by default on all of your windows 11 Windows 10 desktops which is pretty cool now the client's already on on there if you want to enable the server you enable",
    "start": "1793320",
    "end": "1799480"
  },
  {
    "text": "the feature and then turns the server on but people are actually doing it like SSH is actually a really great way to use Powershell it's way better than that",
    "start": "1799480",
    "end": "1805039"
  },
  {
    "text": "win RMI or CS or you know anything like that right so if you had to pick a protocol to transport over it's probably",
    "start": "1805039",
    "end": "1810200"
  },
  {
    "text": "at least you're using SSH um so you want to see well how different is SSH on Windows compared to everything else well",
    "start": "1810200",
    "end": "1815399"
  },
  {
    "text": "first off and this is a a great reference that was called out by djm is that open a ag for Windows sends all of your stuff back to Microsoft by",
    "start": "1815399",
    "end": "1822880"
  },
  {
    "text": "default now let's be really clear like this includes things that are encrypted in the sa transport like Authentication",
    "start": "1822880",
    "end": "1828039"
  },
  {
    "text": "methods are are sent back in the Telemetry calls back to Microsoft by default uh in this case the uh version",
    "start": "1828039",
    "end": "1834120"
  },
  {
    "text": "is being sent back so the version of your server during a key during an initial connection is sent back to Microsoft now it doesn't seem like a big",
    "start": "1834120",
    "end": "1839840"
  },
  {
    "text": "deal but keep in mind that version includes your client version too so Microsoft knows not only that you're using sh on Windows but which clients",
    "start": "1839840",
    "end": "1846000"
  },
  {
    "text": "are talking to it in terms of which client versions are you vone scanning your system well they know every time you run nesses against your Windows",
    "start": "1846000",
    "end": "1852039"
  },
  {
    "text": "server or open because that is a very particular sh client version getting sent back up so it's a massive information leak going straight up into",
    "start": "1852039",
    "end": "1858559"
  },
  {
    "text": "Microsoft Telemetry for optimization for Windows so um I don't even know how to disable that I think you just don't use it unfortunately um the other one that",
    "start": "1858559",
    "end": "1866080"
  },
  {
    "text": "threw us though is there's this there's this really tiny function in open that's really critical and really important it's the timing safe BM it's designed to",
    "start": "1866080",
    "end": "1872960"
  },
  {
    "text": "be a timing safe bik comparison between two cryptographic or otherwise sensitive buffers make sure they exactly match",
    "start": "1872960",
    "end": "1878679"
  },
  {
    "text": "without leaking information about how long it took to compare compare them so effect goes through the bite buffer a bite buffer B does X or and the Compares",
    "start": "1878679",
    "end": "1885120"
  },
  {
    "text": "okay are they different with end and that's that so really small function like you know four lines of code three if you don't count the variable",
    "start": "1885120",
    "end": "1890559"
  },
  {
    "text": "initialization the return it's there's not a whole lot here to break it's timing safe it's efficient it's secure it's been an open St for 14 years or",
    "start": "1890559",
    "end": "1897679"
  },
  {
    "text": "something like that it's a great piece of code then there's the windows version so uh Windows version decided to make it",
    "start": "1897679",
    "end": "1903600"
  },
  {
    "text": "crlf compatible um there is no such thing right so they took a function that uh was very secure and four lines of",
    "start": "1903600",
    "end": "1910440"
  },
  {
    "text": "code long and they added two lines to it that effectively back door all open AG for Windows so it's no longer timing",
    "start": "1910440",
    "end": "1915519"
  },
  {
    "text": "safe it's a one bite out of bands memory read and it's an unequal bite match and this function is critically important",
    "start": "1915519",
    "end": "1922080"
  },
  {
    "text": "because it's used by everything in open H it's used for every single sh encrypted bite buffer is actually",
    "start": "1922080",
    "end": "1927519"
  },
  {
    "text": "compared to see whether the signature matches through this encrypted check if you happen to have an encrypted blob that happens to have a back L back end",
    "start": "1927519",
    "end": "1933880"
  },
  {
    "text": "back R back end it's now writing now reading two bytes outside the range of memory and since the range of memory at",
    "start": "1933880",
    "end": "1939600"
  },
  {
    "text": "the end of that string is all typically zeros you can now basically bypass part of your crypto check you you just lost",
    "start": "1939600",
    "end": "1944960"
  },
  {
    "text": "two bytes of ENT rate or two btes of random right so it's really hard to exploit in a lot of ways because you have to there's two buffers involved an",
    "start": "1944960",
    "end": "1951240"
  },
  {
    "text": "attacker typically doesn't control the buffer that actually triggers the bug but there are ways to make it hit and we are able to brute force it enough times",
    "start": "1951240",
    "end": "1957159"
  },
  {
    "text": "makes you to at least demonstrate like a one bite out of bound read um not super exciting but it was just terrible that",
    "start": "1957159",
    "end": "1963080"
  },
  {
    "text": "uh this happened especially for an organization that claims to have 3,500 Security Professionals and to spend a billion dollars a year in security maybe",
    "start": "1963080",
    "end": "1969519"
  },
  {
    "text": "don't back door the most important function in open a St just saying so Microsoft gave us a nice reply saying",
    "start": "1969519",
    "end": "1975200"
  },
  {
    "text": "that's nice thank you we won't fix it I'm like okay well you didn't fix Terin either so I guess guess we're done um",
    "start": "1975200",
    "end": "1981279"
  },
  {
    "text": "yeah so that was a fun diversion uh we want to talk a little bit about the the code we wrote um this is actually live right now this second we just shipped it",
    "start": "1981279",
    "end": "1987519"
  },
  {
    "text": "so if you go to sho.com with two two s's it'll take you to your GitHub repo or to a landing page and you can just check it",
    "start": "1987519",
    "end": "1992720"
  },
  {
    "text": "out and play with it all the tax we just showed you we live so there's a bunch of OD in there that you know just kind of throw it at some random servers we we",
    "start": "1992720",
    "end": "1999000"
  },
  {
    "text": "love uh just throwing this stuff at random stuff see what falls out but what shamble is is basically a research tool so it's a practical and that you use it",
    "start": "1999000",
    "end": "2004880"
  },
  {
    "text": "for assessments but it's also just a research tool to play with an extent uh we forked the go X crypto sh library to",
    "start": "2004880",
    "end": "2010559"
  },
  {
    "text": "make it do all kinds of terrible things while still being easy to patch going forward so it should be easy to maintain that um it doesn't really need attacks",
    "start": "2010559",
    "end": "2016840"
  },
  {
    "text": "against authentication a lot of post authentication attacks like Rob is showing like the ones against gogs um",
    "start": "2016840",
    "end": "2022360"
  },
  {
    "text": "things like that those are all baked directly into the code you can just run them as out of the box um there's some nice pre-authentication State transition",
    "start": "2022360",
    "end": "2028559"
  },
  {
    "text": "bugs there and then post session enumeration of like okay we've got a session but how can you like break out of the shell and do restricts and stuff",
    "start": "2028559",
    "end": "2034679"
  },
  {
    "text": "um we didn't talk about it today but we also added some timing analysis code to it so you can things like um is this user valid based on timing of doing Pub",
    "start": "2034679",
    "end": "2040919"
  },
  {
    "text": "Key versus not Pub Key funny enough the way that open H and drop air uh prevent timing attacks is they do a Shaw hash",
    "start": "2040919",
    "end": "2047399"
  },
  {
    "text": "basically of the username and they do deterministic delay based on the shaw hash um through a bunch of math Ops on",
    "start": "2047399",
    "end": "2053398"
  },
  {
    "text": "it so if you check how long does it take to log in as route versus Route One they'll be very different timings but",
    "start": "2053399",
    "end": "2058520"
  },
  {
    "text": "it's because of the Sha hash key seed of the the timer not because you're actually getting a timing attack to work",
    "start": "2058520",
    "end": "2065158"
  },
  {
    "text": "so there's a bunch of built-in checks we added a crap lad of stuff to it already so just out of the box you can do all kinds of quick fun checks to it um some",
    "start": "2065159",
    "end": "2070560"
  },
  {
    "text": "of the ones I really like here are like the volume generic environment so we'll connect to an S8 session we we'll shake",
    "start": "2070560",
    "end": "2075839"
  },
  {
    "text": "out a session one way or another you can give us a password list you can give us a bunch of pro private key you give a public key however you end up getting a",
    "start": "2075839",
    "end": "2081158"
  },
  {
    "text": "session whether it's through a bypass or not we'll then try all these other attacks on the session itself so before we open the session we'll set like LD",
    "start": "2081159",
    "end": "2087480"
  },
  {
    "text": "debug equal all we'll set LD preload we set all these other variables then we try to like dump out output to see did would actually work and we got some good",
    "start": "2087480",
    "end": "2094240"
  },
  {
    "text": "results we just finished like a 70 gig Json dump of little internet sh with a tool so we'll share more about that later hopefully but we need to dig",
    "start": "2094240",
    "end": "2100320"
  },
  {
    "text": "through all the data still like little little data raccoons that we are um and yes uh you want to talk to anything",
    "start": "2100320",
    "end": "2106800"
  },
  {
    "text": "particular want to highlight do what anything you want to highlight particular oh I just no this is all just some fantastic stuff I love so the way",
    "start": "2106800",
    "end": "2113599"
  },
  {
    "text": "it works you can do a network scan with shamble and you can give it an IP address or a range a cider and it will just tell you it will go and scan try to",
    "start": "2113599",
    "end": "2119760"
  },
  {
    "text": "find SSH try to find any vulnerabilities try to find any ways you can get a shell things like that you can also uh run uh",
    "start": "2119760",
    "end": "2125880"
  },
  {
    "text": "the analyze command which will actually you can take one of the Json dumps and like HG said they could be quite quite",
    "start": "2125880",
    "end": "2131040"
  },
  {
    "text": "Hefty and uh and run stuff like that you've got all of the uh uh",
    "start": "2131040",
    "end": "2136920"
  },
  {
    "text": "vulnerabilities that we mentioned or built in and you can actually say oh no I'm vulnerable to this or I'm not um and then H take the interactor shell spun",
    "start": "2136920",
    "end": "2143440"
  },
  {
    "text": "that's that's your that's your you should so one of the things that's really annoying in sh to test is like how do you do all these attacks against",
    "start": "2143440",
    "end": "2148680"
  },
  {
    "text": "the sh environment before the shellow spawned and it's really annoying to do that you can use Paro you can use some stuff like that like we decided we need",
    "start": "2148680",
    "end": "2155000"
  },
  {
    "text": "like a nice interactive shell instead so in shamble by default it'll just like request a PTY request a shell give you",
    "start": "2155000",
    "end": "2161079"
  },
  {
    "text": "the prop let you do whatever you want to with it and then you can do commands on top of that if you want to however you can do session interact equal nothing",
    "start": "2161079",
    "end": "2166720"
  },
  {
    "text": "and it'll open up a session but not actually start the shell yet and that puts you in what they call the laral session environment where you can do all kinds of fun attacks prior to the Shell",
    "start": "2166720",
    "end": "2173000"
  },
  {
    "text": "you've been starting so if you get into like a like a net screen box for example it'll actually let you authenticate as nobody it'll give you this weird empty",
    "start": "2173000",
    "end": "2179359"
  },
  {
    "text": "shell and it lets you like send whatever commands you want but it doesn't really give you anything back out so that feels like a really ripe attack to go find",
    "start": "2179359",
    "end": "2185520"
  },
  {
    "text": "ways to knock out some net screen bugs because we have a session it's doing something but it's not quite a shell yet",
    "start": "2185520",
    "end": "2190880"
  },
  {
    "text": "so there's a lot of different um embedded devices and customiz station imputations you can mess with like this a lot of Windows based uh sh demons I",
    "start": "2190880",
    "end": "2197000"
  },
  {
    "text": "think like core fdpd maybe a couple other ones maybe it's Crush I forget but they allow you to basically get a session that's not really a real session",
    "start": "2197000",
    "end": "2203280"
  },
  {
    "text": "yet and then they can use the shamble command line to start messing with it and do all kinds of fun things with it so this is great if you need to like you know back door something you see a lot",
    "start": "2203280",
    "end": "2209520"
  },
  {
    "text": "of like Appliance vendors they ship you an appliance as a restricted shell this is a great way to start attacking those restricted shells cool and with that you",
    "start": "2209520",
    "end": "2217240"
  },
  {
    "text": "know scanning and we'll talk a little bit about defending SSH to be responsible adults thank you yeah defending SSH",
    "start": "2217240",
    "end": "2224880"
  },
  {
    "text": "there's a little bit left there's a little bit left I got two minutes so just real fast I wanted to make sure that uh I wanted to leave",
    "start": "2224880",
    "end": "2230920"
  },
  {
    "text": "y'all with some some action items on how you can uh improve your SSH security posture so uh for one is you know make",
    "start": "2230920",
    "end": "2238280"
  },
  {
    "text": "sure you're not using uh make sure you're using public key authentication don't use passwords don't use don't use",
    "start": "2238280",
    "end": "2244160"
  },
  {
    "text": "off none with left beef that's bad um and if you're uh if you're using SSH",
    "start": "2244160",
    "end": "2250079"
  },
  {
    "text": "agent be sure that you add as many restrictions as you can be sure to use only modern encryption algorithms you",
    "start": "2250079",
    "end": "2255880"
  },
  {
    "text": "know especially now that postquantum is the new thing uh with host Keys actually manage your host Keys uh make sure that",
    "start": "2255880",
    "end": "2262000"
  },
  {
    "text": "you are not handing them out to just anybody make sure that they are in fact not duplicated um use modern uh uh",
    "start": "2262000",
    "end": "2269040"
  },
  {
    "text": "public authentication with stuff like ed25519 I always want to say Ed 209 from RoboCop but it's not um make sure that",
    "start": "2269040",
    "end": "2276839"
  },
  {
    "text": "you uh are turning off so when you use the public key authentication you can even say this key is not valid for X11",
    "start": "2276839",
    "end": "2282440"
  },
  {
    "text": "forwarding or agent forwarding or things like that so be sure to turn all that off uh as well and you can also um do",
    "start": "2282440",
    "end": "2288880"
  },
  {
    "text": "things like using forced uh forced commands you can use uh certificates for Server host Keys which lets you actually",
    "start": "2288880",
    "end": "2295720"
  },
  {
    "text": "just distribute a certificate and then the host key can be signed and you could also use that for public Keys which uh I've done some really amazing stuff with",
    "start": "2295720",
    "end": "2301800"
  },
  {
    "text": "that in in a past life that's a lot of fun highly recommend reading up on that it's kind of the hidden secret of how",
    "start": "2301800",
    "end": "2307240"
  },
  {
    "text": "often SSH can be um and then if you're going to use SSH I'd recommend sticking with open SSH it tends to be the the",
    "start": "2307240",
    "end": "2315200"
  },
  {
    "text": "have the most security features it tends to be the most tested obviously um don't ship firmware with embedded credentials",
    "start": "2315200",
    "end": "2321280"
  },
  {
    "text": "uh you would think that that would just be kind of a thing but no that's something that we need to say and use",
    "start": "2321280",
    "end": "2326520"
  },
  {
    "text": "Force command so when people ssh in if they're only supposed to do certain things you can say okay you really only can do certain things um but with that",
    "start": "2326520",
    "end": "2333680"
  },
  {
    "text": "being said the secure shell is everywhere it is the default facto admin protocol of the internet um you should",
    "start": "2333680",
    "end": "2341040"
  },
  {
    "text": "use public key authentication but it can be leaky op SSH is still your best choice and there's still lots of issues",
    "start": "2341040",
    "end": "2348400"
  },
  {
    "text": "in the periphery there's still that long taale there's still sort of the Hidden uh things that you might have forgotten",
    "start": "2348400",
    "end": "2353760"
  },
  {
    "text": "about so thank you so much please check out run.com you can email us at research run.com and go to shamble dcom to check",
    "start": "2353760",
    "end": "2360800"
  },
  {
    "text": "out the tool thank you so much for coming",
    "start": "2360800",
    "end": "2365200"
  }
]