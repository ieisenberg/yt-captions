[
  {
    "text": "[Music]",
    "start": "4180",
    "end": "29899"
  },
  {
    "text": "I'm gonna give it a couple more minutes okay well I'm gonna go ahead and get",
    "start": "30000",
    "end": "35399"
  },
  {
    "text": "started so my name is Dominique binski I'm a security engineer at Amazon uh and",
    "start": "35399",
    "end": "41120"
  },
  {
    "text": "not on the docket tonight is my co-presenter which is Steve hoffm and he's the chief scientist at Santa",
    "start": "41120",
    "end": "46680"
  },
  {
    "text": "security um so hold on one second as I navigate my funky",
    "start": "46680",
    "end": "53800"
  },
  {
    "text": "slides whoa wait we don't want to do that",
    "start": "56120",
    "end": "61559"
  },
  {
    "text": "all right so uh if you noticed on the website um I",
    "start": "62239",
    "end": "70840"
  },
  {
    "text": "said I was going to talk about stuff I'm not going to talk about tonight I'm actually going to talk about half of what I was going to talk about so",
    "start": "70840",
    "end": "77159"
  },
  {
    "text": "originally I was going to discuss the fact that if you really break down the",
    "start": "77159",
    "end": "83400"
  },
  {
    "text": "attack versus the defend Cycles at Stan stay and even if you constrain it to the fact that uh say the attackers aren't",
    "start": "83400",
    "end": "89640"
  },
  {
    "text": "looking for new exploits but they're just sitting around and waiting for patches and they just want to reverse engineer the patch find the problem",
    "start": "89640",
    "end": "96560"
  },
  {
    "text": "that's in it or maybe some other problems that were patched silently in it and uh either use those to attack in the site or to you know release exploits",
    "start": "96560",
    "end": "103799"
  },
  {
    "text": "for it and then you look at the defense cycle that the uh Defenders have to go through downloading the patch testing",
    "start": "103799",
    "end": "109880"
  },
  {
    "text": "the patch applying the patch that actually the defend or the attackers win a lot more of the time but I kind of",
    "start": "109880",
    "end": "116840"
  },
  {
    "text": "think that that's beating a dead horse if you've seen you know howars talk or any of these other guys and looked at",
    "start": "116840",
    "end": "122079"
  },
  {
    "text": "met exploit so I'm just not going to talk about that um what I am going to talk about is essentially anomaly",
    "start": "122079",
    "end": "129360"
  },
  {
    "text": "detection and how to take anomaly detection and extend it to doing",
    "start": "129360",
    "end": "134599"
  },
  {
    "text": "automated response at least some of the time uh in order to really cut down on",
    "start": "134599",
    "end": "141239"
  },
  {
    "text": "you know both the financial costs of a tax uh but also just to stop a certain subset of tax from actually even taking",
    "start": "141239",
    "end": "148360"
  },
  {
    "text": "hold in the system and um so this is a little theoretical at times or a little",
    "start": "148360",
    "end": "154040"
  },
  {
    "text": "academic I'm actually going to give um Steve and I are both going to kind of give an overview of sort of the",
    "start": "154040",
    "end": "159159"
  },
  {
    "text": "state-of-the-art and anomaly detection um both sort of academic and in practice and uh then we're going to talk about",
    "start": "159159",
    "end": "165720"
  },
  {
    "text": "attributes uh just generically that these systems should have and uh where they can go and um I'm going to wrap up",
    "start": "165720",
    "end": "172640"
  },
  {
    "text": "about talking about a little open source project that I'm working on uh to try to let people play around with this stuff",
    "start": "172640",
    "end": "178840"
  },
  {
    "text": "you know on real system systems and uh you know just sort of get some feedback and see if some people come up with some",
    "start": "178840",
    "end": "184480"
  },
  {
    "text": "great ideas so you know really is trying to just stimulate some people and get some people to think about some stuff",
    "start": "184480",
    "end": "190000"
  },
  {
    "text": "and there's also some Dogma in the space and a lot of people actually don't understand certain attributes of anomaly",
    "start": "190000",
    "end": "195120"
  },
  {
    "text": "detection U so we just want to kind of try to bring a little bit of clarity to those uh and so a lot of what I'm",
    "start": "195120",
    "end": "202799"
  },
  {
    "text": "presenting is actually built off of a lot of other very smart people's academic work one of them's right here",
    "start": "202799",
    "end": "209120"
  },
  {
    "text": "and I'm happy to have them here with me so my justification for this whole",
    "start": "209120",
    "end": "216280"
  },
  {
    "text": "sort of thing is that I always assume that there's another entrance Vector out there meaning there's another attack",
    "start": "216280",
    "end": "222480"
  },
  {
    "text": "that I don't know about um that I don't know how to defend and I don't know what it actually uh you know the component",
    "start": "222480",
    "end": "230640"
  },
  {
    "text": "that is affected by it so I have to assume for my defense model that you",
    "start": "230640",
    "end": "235680"
  },
  {
    "text": "know there are things that I don't know how to protect against and I don't know what they are are and so I sort of view",
    "start": "235680",
    "end": "242439"
  },
  {
    "text": "that there's two ways to deal with that you can either essentially go the route of trying to develop your operating",
    "start": "242439",
    "end": "249400"
  },
  {
    "text": "systems and your applications so you're minimizing the scope of you know a vulnerability or an exploit I doing",
    "start": "249400",
    "end": "256359"
  },
  {
    "text": "privilege separation all like op SSH at this point um trying to constrain the privileged code to much smaller pieces",
    "start": "256359",
    "end": "262600"
  },
  {
    "text": "of code things like DJ um or Dan Bernstein's DNS and Cil do these you",
    "start": "262600",
    "end": "269479"
  },
  {
    "text": "know many little components uh all the way to mandatory Access Control Systems",
    "start": "269479",
    "end": "274680"
  },
  {
    "text": "um you know there's not many normal operating systems to do the stuff but things like secure Computing uh",
    "start": "274680",
    "end": "280400"
  },
  {
    "text": "Sidewinder firewall you know have actually been able to constrain things when there's a vulnerability in s mail",
    "start": "280400",
    "end": "286199"
  },
  {
    "text": "even though it ran it sen mail could get compromised but you just couldn't do anything on the system and uh so that's",
    "start": "286199",
    "end": "291720"
  },
  {
    "text": "one approach and that's something that you have to kind of engineer from the ground up both building operating systems and building applications it's",
    "start": "291720",
    "end": "298479"
  },
  {
    "text": "kind of hard to retrofit all that stuff into the system but it should be done so the other thing that we can do given",
    "start": "298479",
    "end": "304759"
  },
  {
    "text": "that we have a lot of software that's you know running and we're not going to change is to try to go to sort of um",
    "start": "304759",
    "end": "310720"
  },
  {
    "text": "detection and response systems that given that there is vulnerable software that it's going to recognize when it's",
    "start": "310720",
    "end": "317600"
  },
  {
    "text": "exploited and try to mitigate some of the effects of the exploitation and uh you know the",
    "start": "317600",
    "end": "324639"
  },
  {
    "text": "implications come in this I sort of view signature based detection anything else like that if you actually know that",
    "start": "324639",
    "end": "331960"
  },
  {
    "text": "there's common attributes that represent an attack and only bad things should",
    "start": "331960",
    "end": "337520"
  },
  {
    "text": "cause these to happen my idealistic you know sense is just fix that make it so it can't happen right and it's sort of",
    "start": "337520",
    "end": "344360"
  },
  {
    "text": "like the no exact stack thing it's not perfect but you generally don't need it so you should not have executable stacks",
    "start": "344360",
    "end": "352080"
  },
  {
    "text": "and uh you know there's many things that represent that class of things and hopefully we'll just as an industry knock them off one by one and uh they'll",
    "start": "352080",
    "end": "360080"
  },
  {
    "text": "be more broadly available so I propose that automated",
    "start": "360080",
    "end": "368599"
  },
  {
    "text": "detection is actually just not enough and you know anybody you've seen I I hate Gardener reports and uh but the",
    "start": "368599",
    "end": "375639"
  },
  {
    "text": "Gardner report of why IDs is dead and you know a bad place to spend your money",
    "start": "375639",
    "end": "380919"
  },
  {
    "text": "so there's some validity in that notion they were specifically talking about Network IDs but they weren't very clear",
    "start": "380919",
    "end": "387160"
  },
  {
    "text": "about that um but the notion of if you Lally just have a detection system great told you there's something",
    "start": "387160",
    "end": "394039"
  },
  {
    "text": "wrong it still costs you money you still have to run around and clean up the worm or you still have to go do forensics on",
    "start": "394039",
    "end": "400120"
  },
  {
    "text": "the system or you still have to figure it out and Patch it or do whatever you're going to do to mitigate the issue",
    "start": "400120",
    "end": "405479"
  },
  {
    "text": "uh all this thing is just telling you is that there's more work to do um the very",
    "start": "405479",
    "end": "410800"
  },
  {
    "text": "poor return on investment but you know if you have a system that at least in some cases can Implement a response",
    "start": "410800",
    "end": "417440"
  },
  {
    "text": "policy uh that can stop the spread of worms or stop an attacker from taking a",
    "start": "417440",
    "end": "422639"
  },
  {
    "text": "foothold on the system or at the minimal case get you a much better set of data so you can figure out what exactly is",
    "start": "422639",
    "end": "429199"
  },
  {
    "text": "going on on the system and what might be a good response uh for humans to take to it whether or not they need to patch",
    "start": "429199",
    "end": "435560"
  },
  {
    "text": "whether or not they need to turn off a service whether or not they need to firewall a system off uh that at least",
    "start": "435560",
    "end": "440919"
  },
  {
    "text": "gets better and it gives you more operational context uh and you know this is all about just being able to in a",
    "start": "440919",
    "end": "447039"
  },
  {
    "text": "real world uh do security that costs you less and keeps your",
    "start": "447039",
    "end": "452879"
  },
  {
    "text": "business up more and keeps your private information safe it's not talking about making impenetrable systems because we",
    "start": "452879",
    "end": "459319"
  },
  {
    "text": "don't know how to do that so the other thing is that given a detection model whether not",
    "start": "459319",
    "end": "465759"
  },
  {
    "text": "signature-based or anomaly based there's a ton of information available on a",
    "start": "465759",
    "end": "471479"
  },
  {
    "text": "system on a host uh that can be evaluated at the time of the anomaly",
    "start": "471479",
    "end": "477319"
  },
  {
    "text": "that can give you a really strong indicator many cases of whether or not uh this anomaly or you know this detect",
    "start": "477319",
    "end": "484639"
  },
  {
    "text": "is actually malicious is actually something you care about and whether or not you should bother to operate on it",
    "start": "484639",
    "end": "490319"
  },
  {
    "text": "and then furthermore can help sort of classify the severity of that that can potentially be mapped to response",
    "start": "490319",
    "end": "496639"
  },
  {
    "text": "mechanisms so that's kind of the idea so the model is essentially",
    "start": "496639",
    "end": "504240"
  },
  {
    "text": "detection what we call co- stimulation and that's sort of a immune system system metaphor uh and",
    "start": "504240",
    "end": "511639"
  },
  {
    "text": "essentially just being able to evaluate other attributes uh or co-stimulators",
    "start": "511639",
    "end": "516680"
  },
  {
    "text": "that are related to the event and then based off of that take an active",
    "start": "516680",
    "end": "522399"
  },
  {
    "text": "response and I know for a long time people have said like whoa you know you don't want to do automated response to",
    "start": "522399",
    "end": "530519"
  },
  {
    "text": "intrusion detection events and that's very true when you know your automated response was basically reset snipe a",
    "start": "530519",
    "end": "537200"
  },
  {
    "text": "connection or update a firewall especially going off of network data where the packet could easily have a",
    "start": "537200",
    "end": "543680"
  },
  {
    "text": "forged Source address and it could cause the essentially the response to create a denial service or cause significant",
    "start": "543680",
    "end": "550600"
  },
  {
    "text": "problems but where we want to go is essentially have much more granular response mechanisms uh that can possibly",
    "start": "550600",
    "end": "557200"
  },
  {
    "text": "be Chained and be able to do these on the host and we'll get into a bit more what those could look",
    "start": "557200",
    "end": "564120"
  },
  {
    "text": "like so The Logical components are anomaly detection algorithms",
    "start": "564519",
    "end": "571360"
  },
  {
    "text": "um relevant system and process attributes that can be used as the co-",
    "start": "571920",
    "end": "578640"
  },
  {
    "text": "stimulators and the algorithm to take and combine all those things so a model that can be built either on an automated",
    "start": "578640",
    "end": "584880"
  },
  {
    "text": "sense or can be defined from you know a profile perspective on when uh detect",
    "start": "584880",
    "end": "591440"
  },
  {
    "text": "occurs what to evaluate on the system that has a high correlation on whether or not determining this is actual you",
    "start": "591440",
    "end": "598640"
  },
  {
    "text": "know EXP itation of the system whether or not it's a denial of service or whether or not it's potentially a false",
    "start": "598640",
    "end": "604079"
  },
  {
    "text": "positive or something you just don't care about and then actually having response mechanisms that can work within",
    "start": "604079",
    "end": "610000"
  },
  {
    "text": "your environment so we've got some possible anomaly",
    "start": "610000",
    "end": "616959"
  },
  {
    "text": "detection let me uh get my cursor over here for a",
    "start": "616959",
    "end": "621959"
  },
  {
    "text": "second so some possible anomaly detection algorithms and this is sort of covering what's been going on in the",
    "start": "622000",
    "end": "627920"
  },
  {
    "text": "academic world uh for almost 10 years now um and this is all decidedly host",
    "start": "627920",
    "end": "634200"
  },
  {
    "text": "based and I can talk about my bias you know privately if anybody wants to dispute whether or not host versus",
    "start": "634200",
    "end": "640160"
  },
  {
    "text": "network is the right place to do these things um but some possibilities include uh profiling short sequences of system",
    "start": "640160",
    "end": "646680"
  },
  {
    "text": "calls so this is for instance you're looking at a particular server let's just say you want to protect sshd into a",
    "start": "646680",
    "end": "652800"
  },
  {
    "text": "box um and it's basically profiling like a sliding window of",
    "start": "652800",
    "end": "658240"
  },
  {
    "text": "sequences of system calls and system calls are essentially how uh userland",
    "start": "658240",
    "end": "663440"
  },
  {
    "text": "software actually gets access to resources like files like memory and like network connections so though you",
    "start": "663440",
    "end": "670120"
  },
  {
    "text": "can do a lot of stuff in user land fundamentally if you want to talk to something off the Box uh you want to",
    "start": "670120",
    "end": "676079"
  },
  {
    "text": "access memory someplace else or you want to load a file off the file system you have to make a request to the curdle and",
    "start": "676079",
    "end": "681320"
  },
  {
    "text": "you do that through system calls and uh so essentially by profiling the system call usage from an",
    "start": "681320",
    "end": "687880"
  },
  {
    "text": "application uh you get a sense of what the application does under normal conditions when it's doing what it's",
    "start": "687880",
    "end": "693880"
  },
  {
    "text": "supposed to do uh so there was an academic work um from the late 90s",
    "start": "693880",
    "end": "700760"
  },
  {
    "text": "called pH or maybe the early 2000s um it was against Linux 2.2 so it's not",
    "start": "700760",
    "end": "706639"
  },
  {
    "text": "actually a useful code base but it was trying to implement uh one of these models of profiling short sequence",
    "start": "706639",
    "end": "712240"
  },
  {
    "text": "system calls um another one is system call self-distance which is actually from a",
    "start": "712240",
    "end": "717760"
  },
  {
    "text": "recent PhD and and uh guy named Jeffrey undercoffer and uh very interesting",
    "start": "717760",
    "end": "723399"
  },
  {
    "text": "model um has a lot of Promise uh and it's a little too detailed for me to go",
    "start": "723399",
    "end": "729720"
  },
  {
    "text": "into exactly how it works but uh it's essentially statistically looking at the density of system calls within a window",
    "start": "729720",
    "end": "737000"
  },
  {
    "text": "and uh and he was able to very accurately profile how a a given application would use it another one was",
    "start": "737000",
    "end": "743959"
  },
  {
    "text": "system called flow grass which actually was presented earlier uh yesterday and um that's just another way of looking at",
    "start": "743959",
    "end": "750760"
  },
  {
    "text": "the possible relationship of system calls over time from a process another",
    "start": "750760",
    "end": "755800"
  },
  {
    "text": "one is semantic constraint violation uh and that's just sort of my funky term",
    "start": "755800",
    "end": "762880"
  },
  {
    "text": "for things like Cy trce where you're actually building a profile of what system calls an application can use and",
    "start": "762880",
    "end": "769079"
  },
  {
    "text": "what arguments can be used with those given system calls and the idea is you're trying to semantically understand",
    "start": "769079",
    "end": "774880"
  },
  {
    "text": "how the application uses each system call uh but the thing that that doesn't do is have any sense of what system call",
    "start": "774880",
    "end": "781519"
  },
  {
    "text": "should be C called you know after the given system call and previous to it so",
    "start": "781519",
    "end": "786800"
  },
  {
    "text": "it's a very Atomic view of what's going on and that leads to some problems I'll talk about in a little bit uh so you",
    "start": "786800",
    "end": "794120"
  },
  {
    "text": "know then a a broad open set is you know various combinations of supervised and unsupervised learning techniques um off",
    "start": "794120",
    "end": "802000"
  },
  {
    "text": "host on the network uh Stefano Zeno I think spoke just one or two slots ago about some of the work he's doing in",
    "start": "802000",
    "end": "807839"
  },
  {
    "text": "that space it's very interesting and then what most current IPS products",
    "start": "807839",
    "end": "813639"
  },
  {
    "text": "do is what I kind of call loose signatures and that's where instead of writing a very exact signature match for",
    "start": "813639",
    "end": "818800"
  },
  {
    "text": "a given attack they've tried to look at what are sort of Base attributes of a class of attack so what do commonly a",
    "start": "818800",
    "end": "824959"
  },
  {
    "text": "lot of Stack based buffer overflows try to do uh or what is executing a shell",
    "start": "824959",
    "end": "830079"
  },
  {
    "text": "from a process that normally wouldn't do it sort of you know let's write a signature for that and uh so you know",
    "start": "830079",
    "end": "837800"
  },
  {
    "text": "it's um it's not anomaly detection in a true sense and it's not learning it is a",
    "start": "837800",
    "end": "842920"
  },
  {
    "text": "human you know somewhere describing uh some attributes of things that probably",
    "start": "842920",
    "end": "848759"
  },
  {
    "text": "shouldn't never occur and that gets back to my first model if we know that they shouldn't occur and they really have a strong correlation to attacks well we",
    "start": "848759",
    "end": "855680"
  },
  {
    "text": "should probably try to go fix those be a good thing to do each method has its",
    "start": "855680",
    "end": "860920"
  },
  {
    "text": "strengths and weaknesses uh I'm going to get into that a little bit but actually I'm going to give uh Steve the Reigns",
    "start": "860920",
    "end": "867279"
  },
  {
    "text": "here for a bit and he's going to go into some more Det detail about the actual anomaly detection algorithms and uh and",
    "start": "867279",
    "end": "874000"
  },
  {
    "text": "address some of the weaknesses that have been pointed out here and there I'll pick that up so let me get his slides up",
    "start": "874000",
    "end": "879800"
  },
  {
    "text": "here for a second",
    "start": "879800",
    "end": "883360"
  },
  {
    "text": "I love extended displays on windows they're real",
    "start": "901199",
    "end": "906040"
  },
  {
    "text": "pain can't see down there there",
    "start": "910880",
    "end": "915680"
  },
  {
    "text": "is there we go you're gonna have to look that all right thanks Tom so what I'm going to",
    "start": "921600",
    "end": "927199"
  },
  {
    "text": "do is um just talk a bit about some give you kind of a whirlwind tour of some issues in",
    "start": "927199",
    "end": "933399"
  },
  {
    "text": "anomaly in anomaly detection um specifically related to sequence of system call approach things like that it",
    "start": "933399",
    "end": "940120"
  },
  {
    "text": "relates um very much to what um Dom's describing and some of the software he's going to describe later so what I'm",
    "start": "940120",
    "end": "946319"
  },
  {
    "text": "going to do is talk for about half an hour then Dom's going to come back in and talk some more um so we're going to take questions right at the end of it",
    "start": "946319",
    "end": "954639"
  },
  {
    "text": "all so one of the first things you got to think about if you're trying to either",
    "start": "954759",
    "end": "960240"
  },
  {
    "text": "build an anomaly detection system or you're trying to um evaluate an anomaly detection system is to consider what the",
    "start": "960240",
    "end": "966600"
  },
  {
    "text": "characteristic is that the anomaly detection is based on and this is very very important you should choose a",
    "start": "966600",
    "end": "972480"
  },
  {
    "text": "characteristic that um and by characteristic I mean things like um say Network traffic patterns or these short",
    "start": "972480",
    "end": "979680"
  },
  {
    "text": "sequences of system calls which uh D mentioned before and so there's two very important",
    "start": "979680",
    "end": "985480"
  },
  {
    "text": "principles you want to capture in the characteristic the first is that the characteristic should give you a very",
    "start": "985480",
    "end": "990639"
  },
  {
    "text": "stable compact definition of normal and that definition of normal should be easy to either Define manually or some other",
    "start": "990639",
    "end": "997040"
  },
  {
    "text": "way or easy to collect and it shouldn't change a lot it should be relatively static or if it does change you should",
    "start": "997040",
    "end": "1002480"
  },
  {
    "text": "have easy means of adapting to those changes the other important thing of",
    "start": "1002480",
    "end": "1007560"
  },
  {
    "text": "course is um that this this characteristic should be perturbed under abnormal behavior so you should be able",
    "start": "1007560",
    "end": "1014040"
  },
  {
    "text": "to detect attacks using this characteristic so what do I mean by uh um what would be an example examp of a",
    "start": "1014040",
    "end": "1019319"
  },
  {
    "text": "bad characteristic well one example would be potentially the sequence of or the typical commands that a user",
    "start": "1019319",
    "end": "1025798"
  },
  {
    "text": "executes on a system say like on a shell command because users are inherently very varied they tend to do new things",
    "start": "1025799",
    "end": "1031678"
  },
  {
    "text": "all the time and it's very difficult to get a comprehensive compact profile of normal from user",
    "start": "1031679",
    "end": "1039079"
  },
  {
    "text": "Behavior so um the first example I have here of of a of a reasonable",
    "start": "1041319",
    "end": "1046600"
  },
  {
    "text": "characteristic in in some circumstances is that that of um in in the network traffic domain so one of the things you",
    "start": "1046600",
    "end": "1052960"
  },
  {
    "text": "can do is you can characterize traffic by looking at the source the destination and the port over which traffic happens",
    "start": "1052960",
    "end": "1059320"
  },
  {
    "text": "and obviously this only really matters if if if you if it's a um traffic that",
    "start": "1059320",
    "end": "1064360"
  },
  {
    "text": "uses ports specifically um this kind of anomaly detection can be very effective",
    "start": "1064360",
    "end": "1071480"
  },
  {
    "text": "if you have apply it to an internal Network where you have fairly consistent Behavior you have people connect to",
    "start": "1071480",
    "end": "1077559"
  },
  {
    "text": "other machines on a pretty repetive comptitive regular basis and they don't do a lot of random connections and um it",
    "start": "1077559",
    "end": "1083000"
  },
  {
    "text": "can be very useful for detecting things like worms that have unusual behavior like they suddenly start propagating",
    "start": "1083000",
    "end": "1088840"
  },
  {
    "text": "wildly over your internal networks or perhaps they um start scanning other hosts things like that and this approach",
    "start": "1088840",
    "end": "1096400"
  },
  {
    "text": "was first um uh talked about and and and demonstrated um way back in 1991 in",
    "start": "1096400",
    "end": "1102559"
  },
  {
    "text": "something called the network security monitor that came out of UC Davis and um subsequently it's seeming very um",
    "start": "1102559",
    "end": "1109120"
  },
  {
    "text": "successful commercial use in systems like um Arbor networks's Peak flow system which uses it for a very",
    "start": "1109120",
    "end": "1115080"
  },
  {
    "text": "effective detection of um worms that spread through internal networks but there are limitations to",
    "start": "1115080",
    "end": "1122320"
  },
  {
    "text": "looking at Network traffic because Network traffic is essentially data and and there are limitations to looking at",
    "start": "1122320",
    "end": "1128280"
  },
  {
    "text": "data as opposed to the way that the data is interpreted or the behavior at the other end of the",
    "start": "1128280",
    "end": "1133360"
  },
  {
    "text": "data the first of of limitation of course is that data can be spoofed so I can Forge the um addresses to the",
    "start": "1133360",
    "end": "1141000"
  },
  {
    "text": "packets I can um try and Fu the detection system I can generate a lot of noise by just spoofing packets",
    "start": "1141000",
    "end": "1147080"
  },
  {
    "text": "potentially sneak and attack through obviously it's harder to do this if within your interal Network you've got",
    "start": "1147080",
    "end": "1153000"
  },
  {
    "text": "some sort of Switched Network and you can monitor the traffic that comes out of each machine and you know it's coming from that machine so you know if",
    "start": "1153000",
    "end": "1158919"
  },
  {
    "text": "machine's Behaving Badly the other thing is that data can also be misinterpreted and this is a a",
    "start": "1158919",
    "end": "1164720"
  },
  {
    "text": "more subtle point about data but the fact of the matter is that the application that you're trying to protect which is you know fundamentally",
    "start": "1164720",
    "end": "1171159"
  },
  {
    "text": "what's happening at the back end has to take that data and interpret it in some way and a very crude example would",
    "start": "1171159",
    "end": "1178200"
  },
  {
    "text": "be a system that's rrag that's re um composing fragmented packets now the",
    "start": "1178200",
    "end": "1184120"
  },
  {
    "text": "network detection system may expect those packets to be recomposed in a pretty standard normal sort of TCP way",
    "start": "1184120",
    "end": "1189960"
  },
  {
    "text": "but if your machine's got some sort of funky stack and and recomposes them in some slightly unusual or buggy Manner",
    "start": "1189960",
    "end": "1196240"
  },
  {
    "text": "and the attacker knows about that the attacker can exploit that to evade the detection system so looking at um data",
    "start": "1196240",
    "end": "1202799"
  },
  {
    "text": "in that case has its limitations and the final thing of course is that data can be encrypted and",
    "start": "1202799",
    "end": "1208360"
  },
  {
    "text": "and we're all aware how the perimeter is sort of disintegrating and one of the consequences of the disintegrating perimeter is that data is becoming more",
    "start": "1208360",
    "end": "1215440"
  },
  {
    "text": "and more encrypted over your internal networks now one of the things you can do if you're looking at the data is try",
    "start": "1215440",
    "end": "1220799"
  },
  {
    "text": "and decrypt the data at your network access point and then encrypt it again afterwards but that runs into all kinds",
    "start": "1220799",
    "end": "1226320"
  },
  {
    "text": "of problems with key distribution and knowing what the encryption Protocols are and decrypting those so there are",
    "start": "1226320",
    "end": "1233520"
  },
  {
    "text": "very powerful reasons for um looking at Behavior not data and one of the um",
    "start": "1233520",
    "end": "1241120"
  },
  {
    "text": "ideas I'm going to talk about that can be used for doing anomaly detection on behavior is looking at the ordering or",
    "start": "1241120",
    "end": "1246520"
  },
  {
    "text": "the sequence of system calls and this is this idea as Dom mentioned is is quite old it uh um myself and a group of other",
    "start": "1246520",
    "end": "1254360"
  },
  {
    "text": "researchers at the University of New Mexico came up with the idea in about 1995",
    "start": "1254360",
    "end": "1259400"
  },
  {
    "text": "and the idea here is that you look at not particularly what are the parameters to system calls but the sequence in",
    "start": "1259400",
    "end": "1265480"
  },
  {
    "text": "which those system calls executed and this can be very effective for programs",
    "start": "1265480",
    "end": "1271120"
  },
  {
    "text": "that execute that exhibit repetitive and regular behavior and a classic example would be a server program because a",
    "start": "1271120",
    "end": "1277080"
  },
  {
    "text": "server program is typically designed to do a set of tasks repetitively and each of those tasks that it executes is some",
    "start": "1277080",
    "end": "1283520"
  },
  {
    "text": "path through the program code and that path through the program code corresponds to a a set of sequences of",
    "start": "1283520",
    "end": "1289279"
  },
  {
    "text": "system calls and so under normal behavior the server will give you a compact stable definition of normal in",
    "start": "1289279",
    "end": "1295400"
  },
  {
    "text": "terms of the sequences of system calls this characteristic also fulfills one of the other um requirements for",
    "start": "1295400",
    "end": "1301600"
  },
  {
    "text": "anomaly detection and that tends to be perturbed when um something unusual happens when when someone attacks the",
    "start": "1301600",
    "end": "1307400"
  },
  {
    "text": "network and the reason it gets perturbed is because you tend to force the application to do something that it's not normally doing you force it down an",
    "start": "1307400",
    "end": "1314480"
  },
  {
    "text": "unusual code path it's obviously a um a very a very obvious example would be",
    "start": "1314480",
    "end": "1319679"
  },
  {
    "text": "code injection through a buffer overflow a less obvious example would be say you have an application and your developers",
    "start": "1319679",
    "end": "1327159"
  },
  {
    "text": "in the process of developing the application put some debug functionality into it so they could connect to the application easily by some sort of back",
    "start": "1327159",
    "end": "1333760"
  },
  {
    "text": "Channel and querier and when they put the application out in the real world they forget to turn the debug functionality off well if that that",
    "start": "1333760",
    "end": "1342000"
  },
  {
    "text": "debug functionality is not being used in your normal behavior because it's not necessary for the normal operation of",
    "start": "1342000",
    "end": "1347120"
  },
  {
    "text": "your um server program prog then as soon as an attacker exploits it it'll be an unusual code path that will be detected",
    "start": "1347120",
    "end": "1352919"
  },
  {
    "text": "by the system and obviously with any defensive",
    "start": "1352919",
    "end": "1358120"
  },
  {
    "text": "system there are potential ways of of evading this and I'm going to talk a little bit about these these ways of evasion in in some future slides",
    "start": "1358120",
    "end": "1366440"
  },
  {
    "text": "here so given that you have a characteristic that can give you a nice definition of normal behavior and can",
    "start": "1366440",
    "end": "1371559"
  },
  {
    "text": "also detect attacks how can you model this characteristic what is the best way to build up models of normal behavior",
    "start": "1371559",
    "end": "1379320"
  },
  {
    "text": "well there's a whole plethora of of um methods that have been tried anywhere from engram to the short sequences of",
    "start": "1379320",
    "end": "1385559"
  },
  {
    "text": "system calls that Dom talked about um to even more sophisticated methods such as um hidden Mark of modeling or um various",
    "start": "1385559",
    "end": "1392760"
  },
  {
    "text": "kinds of data mining methods and typically what you tend to find when you look at these methods is that the more",
    "start": "1392760",
    "end": "1399480"
  },
  {
    "text": "sophisticated methods do improve um discrimination between Normal and abnormal somewhat but at quite an",
    "start": "1399480",
    "end": "1406600"
  },
  {
    "text": "expense because they're much more computationally expensive to implement and to run and this is one point that I",
    "start": "1406600",
    "end": "1411799"
  },
  {
    "text": "want to emphasize given the Rel the title of the talk is that um it's very important that",
    "start": "1411799",
    "end": "1418520"
  },
  {
    "text": "your system can react fast and can do this kind of detection fast especially if you're talking at this sort of low",
    "start": "1418520",
    "end": "1423799"
  },
  {
    "text": "level inside the kernel you know looking at the system calls and so very complex algorithms that may be somewhat more",
    "start": "1423799",
    "end": "1429799"
  },
  {
    "text": "effective are not really an option so there are many different ways",
    "start": "1429799",
    "end": "1436360"
  },
  {
    "text": "as well of building this model so not only are there many different kinds of models but but there's many different ways of gathering the data to build the",
    "start": "1436360",
    "end": "1442480"
  },
  {
    "text": "model and the first way which may seem the most obvious is to do some sort of automated scanning of the the binary or",
    "start": "1442480",
    "end": "1449120"
  },
  {
    "text": "the source code now obviously if you have the source code it's an easier problem but in the real world a lot of",
    "start": "1449120",
    "end": "1454320"
  },
  {
    "text": "the applications you may be interested in protecting you won't have access to the source code and so you'll have to do binary analysis the problem with both",
    "start": "1454320",
    "end": "1461200"
  },
  {
    "text": "binary and Source analysis however is that if you're doing it statically you",
    "start": "1461200",
    "end": "1466880"
  },
  {
    "text": "only have limited information about the transfers of control within the within the program and a lot of those transfers",
    "start": "1466880",
    "end": "1473200"
  },
  {
    "text": "of control may be dynamic or indirect and you don't know where they're going at at at um within the static program",
    "start": "1473200",
    "end": "1479679"
  },
  {
    "text": "and you'll never know where they're going if you come up against the halting problem essentially and so if too many of these",
    "start": "1479679",
    "end": "1486679"
  },
  {
    "text": "control transfers are indirect or dynamic then you will get a very incomplete picture of normal and you'll",
    "start": "1486679",
    "end": "1492159"
  },
  {
    "text": "get I mean you may get no false positives if you define normal this way but you'll get a lot of false negatives you won't get a very comprehensive pi",
    "start": "1492159",
    "end": "1498399"
  },
  {
    "text": "picture of normal the other interesting thing is even if you do um manage to somehow overcome this problem of dynamic",
    "start": "1498399",
    "end": "1505120"
  },
  {
    "text": "control transfer and you can somehow find out at you know statically what all the control transfers are you still get",
    "start": "1505120",
    "end": "1510720"
  },
  {
    "text": "a superet of the behavior you're really interested in protecting and a classic example would be what I mentioned in the",
    "start": "1510720",
    "end": "1517440"
  },
  {
    "text": "previous slide was the debug exploit example where someone had left this debug functionality in a server well",
    "start": "1517440",
    "end": "1523480"
  },
  {
    "text": "that code is in the source or it's in the binary and so it's going to look like normal if the attacker explo exp it",
    "start": "1523480",
    "end": "1528880"
  },
  {
    "text": "under this method so another potential way of of trying to build the normal profile is",
    "start": "1528880",
    "end": "1535600"
  },
  {
    "text": "getting human experts try and Define what these sequences should be and I think this is a completely untenable approach if you look at the absolute",
    "start": "1535600",
    "end": "1542559"
  },
  {
    "text": "Tangled mess with which um these these sequences of system calls link together you'll see that there's no real way for",
    "start": "1542559",
    "end": "1548240"
  },
  {
    "text": "human expertise to deal with this issue so that leaves you with uh a third approach which is trying to learn what",
    "start": "1548240",
    "end": "1554919"
  },
  {
    "text": "the model will be and you can learn in various kinds of environments basically you let the program run and You observe",
    "start": "1554919",
    "end": "1560399"
  },
  {
    "text": "what sequences of system calls are being executed and you record those and you build up the profile profile of",
    "start": "1560399",
    "end": "1566000"
  },
  {
    "text": "normal one of the best ways to learn is if you can learn in a QA environment and it obviously depends on you having some",
    "start": "1566000",
    "end": "1571840"
  },
  {
    "text": "sort of QA process that you that is comprehensive and that you feel um uh",
    "start": "1571840",
    "end": "1577200"
  },
  {
    "text": "good about now if you have such a QA process it can be very useful because you can get a comprehensive definition",
    "start": "1577200",
    "end": "1583520"
  },
  {
    "text": "of normal easily within the normal um operations of your system and in",
    "start": "1583520",
    "end": "1588840"
  },
  {
    "text": "addition to that the system can be very useful for telling you about problems with your QA process because if you",
    "start": "1588840",
    "end": "1594120"
  },
  {
    "text": "detect something unusual in the real world it could in your production environment it could mean that um it's",
    "start": "1594120",
    "end": "1599760"
  },
  {
    "text": "malicious or it could mean that it's something you just haven't included in your QA cycle and you may want to include in your QA cycle and finally if",
    "start": "1599760",
    "end": "1606919"
  },
  {
    "text": "you don't have um a comprehensive or very um good QA process you can potentially do your learning in the",
    "start": "1606919",
    "end": "1612600"
  },
  {
    "text": "production environment itself and the good the good thing about this of course is that you'll get high highly accurate",
    "start": "1612600",
    "end": "1619159"
  },
  {
    "text": "um detection because you're very finely tuned for the local usage and configuration patterns of",
    "start": "1619159",
    "end": "1625760"
  },
  {
    "text": "whatever application you're profiling um on the flip side you know you have to take the time to learn and there there",
    "start": "1625760",
    "end": "1630919"
  },
  {
    "text": "are issues around that so this is a little graph to give you an idea of how this kind of learning",
    "start": "1630919",
    "end": "1637480"
  },
  {
    "text": "meth method can can happen and here I've got some uh Unix binary I think it's LPD something like that on the x-axis we can",
    "start": "1637480",
    "end": "1644240"
  },
  {
    "text": "see the total number of sequences executed by the program over time as it runs and on the y- axis we can see the",
    "start": "1644240",
    "end": "1650240"
  },
  {
    "text": "number of unique um short sequences of system calls in this case we're just looking at sequences of length six so",
    "start": "1650240",
    "end": "1655799"
  },
  {
    "text": "you can see that as time passes initially we're seeing a lot of new um sequences and then it's leveling off in",
    "start": "1655799",
    "end": "1661360"
  },
  {
    "text": "other words we're getting a more compact definition of normal now obviously how rapidly you accumulate",
    "start": "1661360",
    "end": "1667640"
  },
  {
    "text": "this definition of normal depends on how heavily used the system is so the interesting thing about learning this",
    "start": "1667640",
    "end": "1672720"
  },
  {
    "text": "kind of normal um for systems you want to protect is that the more heavily and realistically used your system the more",
    "start": "1672720",
    "end": "1679000"
  },
  {
    "text": "effective the learning approach can be so one of the important things to",
    "start": "1679000",
    "end": "1684919"
  },
  {
    "text": "consider um when you're thinking about this as I mentioned before is um how does the system function online it's",
    "start": "1684919",
    "end": "1690080"
  },
  {
    "text": "very important to have um be able to check each system call as it's made um",
    "start": "1690080",
    "end": "1695519"
  },
  {
    "text": "and do something about it because you want to be able to stop attacks when they happen if you've got some sort of automated response system and that means",
    "start": "1695519",
    "end": "1702679"
  },
  {
    "text": "you have to have some very sort of efficient method of hooking the system calls and you've got to minimize the overhead so you've got to have a very",
    "start": "1702679",
    "end": "1708519"
  },
  {
    "text": "effective um and computationally low uh uh low intensity um",
    "start": "1708519",
    "end": "1714679"
  },
  {
    "text": "system the other thing to be aware of in these online environments is that they can be kind of noisy things can change",
    "start": "1714679",
    "end": "1720000"
  },
  {
    "text": "they cannot be they might not be as static as you want and so you want to be able to have um flexibility to deal with",
    "start": "1720000",
    "end": "1725799"
  },
  {
    "text": "noise in the environment and what you might often find and we've observed with a lot of experimentation is that",
    "start": "1725799",
    "end": "1731200"
  },
  {
    "text": "individual system calls may be made and they just indicate false positives if they're made in isolation whereas a lot",
    "start": "1731200",
    "end": "1737200"
  },
  {
    "text": "of attacks and this is by no means Universal but a lot of attacks do tend to generate clumps of of unusual",
    "start": "1737200",
    "end": "1742960"
  },
  {
    "text": "sequences of system calls and the reason they do that is because you're executing some unusual code path and that unusual",
    "start": "1742960",
    "end": "1748760"
  },
  {
    "text": "code path usually involves several steps with a bunch of system calls so one of the ways you can deal with this is you",
    "start": "1748760",
    "end": "1754880"
  },
  {
    "text": "can have a moving window which Aggregates um the unusual sequences of system calls or the unusual system calls",
    "start": "1754880",
    "end": "1761039"
  },
  {
    "text": "you see and if the aggregate exceeds some threshold then you would get um an alert and I've got a simple example down",
    "start": "1761039",
    "end": "1767120"
  },
  {
    "text": "there that binary strength is just a representation where each zero indicates a um a system call that's normal and",
    "start": "1767120",
    "end": "1774760"
  },
  {
    "text": "each one indicates a system call that's anomalous and here my sliding window is",
    "start": "1774760",
    "end": "1779880"
  },
  {
    "text": "of size eight and I'm looking for anything that exceeds four unusual system calls within that size eight so",
    "start": "1779880",
    "end": "1785320"
  },
  {
    "text": "there's two instances there where I'll detect an anomaly so using sort of those kinds of approaches you can make the system more flexible you can adjust it",
    "start": "1785320",
    "end": "1792159"
  },
  {
    "text": "to an application that's perhaps less well behaved than another application and noisier and you can still get some",
    "start": "1792159",
    "end": "1797480"
  },
  {
    "text": "level of prote protection and here is an example of what I mean by um clumping in a in an",
    "start": "1797480",
    "end": "1803480"
  },
  {
    "text": "exploit this is a fairly old exploit against s log D and what we're seeing on the bottom axis the the x axis is this",
    "start": "1803480",
    "end": "1811360"
  },
  {
    "text": "the system calls as they're being executed on the y axis we're seeing the aggregate number of unusual system calls",
    "start": "1811360",
    "end": "1817039"
  },
  {
    "text": "or anomalous system calls and so you can see there's a lot of Clump Behavior here so thresholding is a good way of",
    "start": "1817039",
    "end": "1822519"
  },
  {
    "text": "detecting this kind of thing so there has been quite a bit of",
    "start": "1822519",
    "end": "1829159"
  },
  {
    "text": "um Research into evading these kind of system call um sequence monitoring uh um",
    "start": "1829159",
    "end": "1834600"
  },
  {
    "text": "methods one of the um most interesting of these is um so-called mimicry attacks",
    "start": "1834600",
    "end": "1839679"
  },
  {
    "text": "where the the goal here is to to try and build a sequence of system calls that looks exactly like a normal sequence um",
    "start": "1839679",
    "end": "1846640"
  },
  {
    "text": "we've had some very interesting theoretical uh analysis but there's been no um practical demonstrations of the",
    "start": "1846640",
    "end": "1852279"
  },
  {
    "text": "efficacy of this approach because it's based on a couple of um fundamental assumptions that may not hold often in",
    "start": "1852279",
    "end": "1858360"
  },
  {
    "text": "the real world the first assumption is that you can inject code because you need to be able to generate the code to",
    "start": "1858360",
    "end": "1863840"
  },
  {
    "text": "look look as you want this the second assumption is that you have an exact knowledge of what that normal model is",
    "start": "1863840",
    "end": "1869440"
  },
  {
    "text": "or that normal profile now if you've scanned the source code to build your normal profile then anyone else can do",
    "start": "1869440",
    "end": "1874880"
  },
  {
    "text": "so and get an exact model but if you've built it by observing a behavior in a um",
    "start": "1874880",
    "end": "1880360"
  },
  {
    "text": "online environment um depending on your configuration and usage patterns the Tacker may have a great deal of",
    "start": "1880360",
    "end": "1885639"
  },
  {
    "text": "difficulty knowing exactly what that normal profile looks like because it can vary a lot just by changing usage",
    "start": "1885639",
    "end": "1891480"
  },
  {
    "text": "patterns anyway so given that you have those two um things you know what the the profile is exactly and you can",
    "start": "1891480",
    "end": "1897480"
  },
  {
    "text": "inject code then the idea really is to create a so-called self sequence by um",
    "start": "1897480",
    "end": "1902600"
  },
  {
    "text": "inserting system calls that look normal in sequence but don't do anything and you do this by nullifying System calls",
    "start": "1902600",
    "end": "1908880"
  },
  {
    "text": "so you just generate system calls that have got arguments that don't do anything basically and as I said um",
    "start": "1908880",
    "end": "1915039"
  },
  {
    "text": "David Wagner out of UC Berkeley has demonstrated is theoretically for very short sequences of system called",
    "start": "1915039",
    "end": "1920720"
  },
  {
    "text": "sequence length six and uh as I'll describe the the problem becomes more difficult is the sequence length that you monitoring goes",
    "start": "1920720",
    "end": "1927760"
  },
  {
    "text": "up um another way of of trying to evade these systems is if you're only looking",
    "start": "1927760",
    "end": "1933159"
  },
  {
    "text": "at the sequence or the ordering in which the system calls occur then trying to change the parameters is another",
    "start": "1933159",
    "end": "1939240"
  },
  {
    "text": "potential way of attacking um and that's obviously also has its own tricks because you've got to",
    "start": "1939240",
    "end": "1945159"
  },
  {
    "text": "kind of know what those Excuse Me original parameters were and you've got to somehow change the",
    "start": "1945159",
    "end": "1951080"
  },
  {
    "text": "parameters without affecting the normal behavior and obviously this is going to be much easier to do if you can inject",
    "start": "1951080",
    "end": "1956960"
  },
  {
    "text": "code um people have talked about this we haven't seen effective demonstrations to date I'm sure it's no doubt possible and",
    "start": "1956960",
    "end": "1963760"
  },
  {
    "text": "then of course the Third Way of breaking these systems is to subvert the system call hooking mechanisms um however they",
    "start": "1963760",
    "end": "1969399"
  },
  {
    "text": "may be implemented in your system and we've had some great talks from Eugene about how to do these kinds of things so",
    "start": "1969399",
    "end": "1974919"
  },
  {
    "text": "I'm not going to touch on that much here so here is an example of a mimicry attack we have a um detection system",
    "start": "1974919",
    "end": "1982679"
  },
  {
    "text": "where we're looking at sequences of length six so we're looking at very short sequences and what this um mimicry",
    "start": "1982679",
    "end": "1988559"
  },
  {
    "text": "attack does is it builds up a stealth sequence of um 100 it's actually",
    "start": "1988559",
    "end": "1994639"
  },
  {
    "text": "134 system calls 136 system calls in which 128 of them are nullified they do",
    "start": "1994639",
    "end": "2000440"
  },
  {
    "text": "nothing and eight do what you want them to do and execute so you can see there's quite an explosion here of the number of",
    "start": "2000440",
    "end": "2005919"
  },
  {
    "text": "system calls you have to insert as nullified system calls in order to get a few legitimate system calls to",
    "start": "2005919",
    "end": "2012840"
  },
  {
    "text": "execute so how do we deal with mimicry attacks and the other kinds of attacks and and fortunately there are some",
    "start": "2012840",
    "end": "2018559"
  },
  {
    "text": "fairly straightforward ways of dealing with these things the first is just simply to increase the sequence length so you could see from the previous",
    "start": "2018559",
    "end": "2024840"
  },
  {
    "text": "example that with a very short sequence length of six that you're monitoring um",
    "start": "2024840",
    "end": "2030159"
  },
  {
    "text": "you need a lot of nullified system calls to to generate anything useful now if you increase your sequence length from",
    "start": "2030159",
    "end": "2035760"
  },
  {
    "text": "six to 16 which you can often do by packing into bites and things like that without much computational overhead you",
    "start": "2035760",
    "end": "2041559"
  },
  {
    "text": "could potentially exponentially increase the length at which that which that stealth sequence needs to be and also",
    "start": "2041559",
    "end": "2047639"
  },
  {
    "text": "not only that increase the amount of time needed to generate the stealth sequence and if you think about increasing the length of the stealth",
    "start": "2047639",
    "end": "2053560"
  },
  {
    "text": "sequence that becomes very problematic because if you're trying to inject that code that stealth sequence via buffer",
    "start": "2053560",
    "end": "2059358"
  },
  {
    "text": "overflow you might not have space for you know 10,000 system calls um the other ways you can deal",
    "start": "2059359",
    "end": "2067320"
  },
  {
    "text": "with the Mim attacks of course is that you can just make sure that code isn't injected and obviously the industry's",
    "start": "2067320",
    "end": "2072679"
  },
  {
    "text": "got various ways of trying to do that and we've seen various ways of breaking that um but if you do do that you have",
    "start": "2072679",
    "end": "2078800"
  },
  {
    "text": "to make sure you get it right obviously uh and then talking about",
    "start": "2078800",
    "end": "2083919"
  },
  {
    "text": "other kinds of attacks rather than mimicry attacks and that's um changing the parameters uh there are potentially",
    "start": "2083919",
    "end": "2089638"
  },
  {
    "text": "ways you could deal with that by looking at the parameters and try to understand what parameters are normally used obviously that's a harder problem you",
    "start": "2089639",
    "end": "2096000"
  },
  {
    "text": "can also look use some information to detect nullified um system calls that are potentially injected by just simply",
    "start": "2096000",
    "end": "2102359"
  },
  {
    "text": "looking at the return calls because return calls are going to be different frequently for the system calls as used",
    "start": "2102359",
    "end": "2107560"
  },
  {
    "text": "normally versus as used as nullified system calls and so the final thing I'm going",
    "start": "2107560",
    "end": "2113079"
  },
  {
    "text": "to touch on in in the normaly detection sphere is false positives so assuming that you're not doing some sort of code",
    "start": "2113079",
    "end": "2119160"
  },
  {
    "text": "scanning of static code you are potentially going to get false positives and there's many different reasons for",
    "start": "2119160",
    "end": "2124240"
  },
  {
    "text": "this and it's worth understanding what the reasons are and how to deal with those issues because in a lot of times",
    "start": "2124240",
    "end": "2129400"
  },
  {
    "text": "you can deal with these issues and make the system effective so the first way you can get anomalies is if you have an incomplete",
    "start": "2129400",
    "end": "2135720"
  },
  {
    "text": "definition of normal because the way you've constructed it maybe you've learned it in the production environment you could get things like infrequent",
    "start": "2135720",
    "end": "2142119"
  },
  {
    "text": "events like log file Rollo rollovers that cause anomalies another way you could get anomalies is through um",
    "start": "2142119",
    "end": "2148280"
  },
  {
    "text": "signaling and uh other kinds of change in control so when control chops from",
    "start": "2148280",
    "end": "2153359"
  },
  {
    "text": "one thread to another and you have to make sure that you're monitoring threads individually also things like asynchronous IO can",
    "start": "2153359",
    "end": "2159720"
  },
  {
    "text": "cause changes in sequence and um things like resource",
    "start": "2159720",
    "end": "2164839"
  },
  {
    "text": "usage so if you are running your system and the network gets busy for some",
    "start": "2164839",
    "end": "2170079"
  },
  {
    "text": "completely different reason it may be that suddenly you have to store more of your packets and your memory usage goes up and that puts you in a different",
    "start": "2170079",
    "end": "2175800"
  },
  {
    "text": "program regim regime and that changes the sequence of the system called and then finally another sort of thing is is",
    "start": "2175800",
    "end": "2182200"
  },
  {
    "text": "unusual error conditions maybe there's something that's unavailable on your program goes into an error condition and",
    "start": "2182200",
    "end": "2187400"
  },
  {
    "text": "and generates an unusual sequence so some of the ways of dealing",
    "start": "2187400",
    "end": "2193040"
  },
  {
    "text": "with these issues the first is you can have exception mechanisms whereby when you understand what the false positive",
    "start": "2193040",
    "end": "2198400"
  },
  {
    "text": "is you can um designate it as an exception and get it incorporated into your model of normal so that it doesn't trigger alerts again in future and this",
    "start": "2198400",
    "end": "2205760"
  },
  {
    "text": "can be very effective for dealing with the infrequent normal events like a log file rollover and the the good thing",
    "start": "2205760",
    "end": "2212560"
  },
  {
    "text": "about this approach is you can gradually incrementally improve the improve the accuracy of your system as these",
    "start": "2212560",
    "end": "2218079"
  },
  {
    "text": "infrequent events happen and pass by another way you can do it is is correlation so you can look at",
    "start": "2218079",
    "end": "2224640"
  },
  {
    "text": "information from potentially other um um detection systems other um security systems and try and understand when",
    "start": "2224640",
    "end": "2231119"
  },
  {
    "text": "you're both detecting something unusual and if that's clearly a threat then you know the rest are false",
    "start": "2231119",
    "end": "2236280"
  },
  {
    "text": "alarms you can also do what I term secondary analytics and Dom's going to go into quite a bit of detail about what",
    "start": "2236280",
    "end": "2241839"
  },
  {
    "text": "these can be but it's the idea where you gather more information to understand what an anomaly really is and using that",
    "start": "2241839",
    "end": "2248319"
  },
  {
    "text": "information you can potentially categorize it as something like increasing memory usage due to some problems on the network and hence know",
    "start": "2248319",
    "end": "2254920"
  },
  {
    "text": "that it's a false positive and then of course you can build in case specific mechanisms for",
    "start": "2254920",
    "end": "2260079"
  },
  {
    "text": "things like um signaling and threading and um asynchronous IO and the final",
    "start": "2260079",
    "end": "2265640"
  },
  {
    "text": "point I want to touch on briefly and and Dom will talk about more is the idea of benign responses where instead of just",
    "start": "2265640",
    "end": "2271800"
  },
  {
    "text": "responding um by blocking something as if it were bad you perhaps do something like slow it down so you give you buy",
    "start": "2271800",
    "end": "2278720"
  },
  {
    "text": "time for human beings to um uh interject and try and understand what's going",
    "start": "2278720",
    "end": "2284240"
  },
  {
    "text": "on so um in summary if you're thinking about evaluating an a um anomaly",
    "start": "2284240",
    "end": "2290640"
  },
  {
    "text": "detection system if you're thinking about building an anomaly detection system there's a bunch of things that you really have to be aware of and the",
    "start": "2290640",
    "end": "2296040"
  },
  {
    "text": "first is you have to know what characteristics are valuable in your domain that you're using it in and there many different kinds and some are better",
    "start": "2296040",
    "end": "2302119"
  },
  {
    "text": "than others you also have to be aware of the anomaly detection method that you're using and as I said there's lots and and",
    "start": "2302119",
    "end": "2309160"
  },
  {
    "text": "they have different efficacies and they have different properties depending on on where you're applying them and they",
    "start": "2309160",
    "end": "2314680"
  },
  {
    "text": "also have different computational efficiencies and it's frequently the case that say in the academic literature",
    "start": "2314680",
    "end": "2319800"
  },
  {
    "text": "people like to focus on the most fancy um clever algorithms that are often the",
    "start": "2319800",
    "end": "2325040"
  },
  {
    "text": "least computationally efficient because that's the most interesting to them and those are often the least practical in the real",
    "start": "2325040",
    "end": "2330760"
  },
  {
    "text": "world and as I mentioned before there's many different techniques and ways of building up the profile of normal and",
    "start": "2330760",
    "end": "2337839"
  },
  {
    "text": "how you do that depends a lot on your environment and your resources things like that I'd also talked a bit about",
    "start": "2337839",
    "end": "2343680"
  },
  {
    "text": "mimicry attacks and the ways of dealing with mimicry attacks and um also false positives in the ways of dealing with",
    "start": "2343680",
    "end": "2350040"
  },
  {
    "text": "those and at this point Dom is going to give you some more information thank you",
    "start": "2350040",
    "end": "2357720"
  },
  {
    "text": "bear with me for a second",
    "start": "2371760",
    "end": "2374960"
  },
  {
    "text": "here I love killing PowerPoint",
    "start": "2389560",
    "end": "2394280"
  },
  {
    "text": "so let me see there any points I want to make on the tail end of Steve's presentation",
    "start": "2408800",
    "end": "2416680"
  },
  {
    "text": "um just a couple ones just for clarification right we are talking about looking at system calls and so uh you've",
    "start": "2418240",
    "end": "2424160"
  },
  {
    "text": "seen a couple times today I think um that a lot of both uh host-based",
    "start": "2424160",
    "end": "2430359"
  },
  {
    "text": "intrusion prevention systems that exist on the market as well as things like buffer overflow protectors um been",
    "start": "2430359",
    "end": "2436560"
  },
  {
    "text": "trying to do things like hook particular attributes of the kernel and uh in order to actually work those hooks need to",
    "start": "2436560",
    "end": "2443760"
  },
  {
    "text": "maintain uh residency and they need to be effective and uh so you know if the",
    "start": "2443760",
    "end": "2450920"
  },
  {
    "text": "system's not implemented well and somebody can get code into the kernel you know there's obviously a subversion",
    "start": "2450920",
    "end": "2456760"
  },
  {
    "text": "path there and that's just something that you need to be aware of in these systems and uh it's something to",
    "start": "2456760",
    "end": "2461920"
  },
  {
    "text": "understand and it's much harder on Windows to get that right than it is for instance on Unix um can you hold on",
    "start": "2461920",
    "end": "2467720"
  },
  {
    "text": "we'll get have a good question um so you know some classic examples on uh Linux",
    "start": "2467720",
    "end": "2475079"
  },
  {
    "text": "if uh somebody attacks a process that runs his root and they get root and Dev",
    "start": "2475079",
    "end": "2480119"
  },
  {
    "text": "km is writable to root which you shouldn't do you should fix your system so it's not but it's as simple sometimes",
    "start": "2480119",
    "end": "2487400"
  },
  {
    "text": "as grepping through Dev km to find particular uh you know sequences that",
    "start": "2487400",
    "end": "2492720"
  },
  {
    "text": "sort of show you where a function exists and you can actually use DD to Simply like write a few instructions over that",
    "start": "2492720",
    "end": "2498839"
  },
  {
    "text": "to just sort of jump back to someplace else and uh so that's like how easy it",
    "start": "2498839",
    "end": "2504240"
  },
  {
    "text": "can be sometimes on systems if they're not well protected and some of the stuff that we saw today on Windows was that",
    "start": "2504240",
    "end": "2509880"
  },
  {
    "text": "there are a number of apis that allow you to load drivers into the kernel and uh you know systems that exist on those",
    "start": "2509880",
    "end": "2515920"
  },
  {
    "text": "need to uh actually make make sure that they protect against you know unloading or subversion through those",
    "start": "2515920",
    "end": "2521560"
  },
  {
    "text": "mechanisms um the other one that Steve pointed out was that for instance mimicry attacks and stuff like that uh",
    "start": "2521560",
    "end": "2527720"
  },
  {
    "text": "it might be possible to create this long sequence of system calls but if you think about the constraints of for",
    "start": "2527720",
    "end": "2533240"
  },
  {
    "text": "instance buffer overflows most common way to inject code in you know usually have a fixed size amount of code that",
    "start": "2533240",
    "end": "2538640"
  },
  {
    "text": "you can get in and it takes a couple operations um or a number of bytes a",
    "start": "2538640",
    "end": "2543680"
  },
  {
    "text": "piece to call a system call and so you know multiply",
    "start": "2543680",
    "end": "2549000"
  },
  {
    "text": "by oh I'd have to do the calculation but I think it's at minimum about four or",
    "start": "2549000",
    "end": "2555280"
  },
  {
    "text": "six bytes of assembly to call a system call um maybe a little bit more so you",
    "start": "2555280",
    "end": "2560640"
  },
  {
    "text": "start multiplying that out and you start seeing pretty quickly that if it goes on any more than a couple hundred system",
    "start": "2560640",
    "end": "2566119"
  },
  {
    "text": "calls uh it's probably not possible to deliver it under most buffer overflows",
    "start": "2566119",
    "end": "2571400"
  },
  {
    "text": "and the common way to deliver lots of code through overflows these days is to basically the first part of the over",
    "start": "2571400",
    "end": "2577359"
  },
  {
    "text": "flow is essentially like a little loader uh and then over the network connection it'll stream you know either more codes",
    "start": "2577359",
    "end": "2584359"
  },
  {
    "text": "uh more btes or proxy system calls and uh so that loader itself it's highly",
    "start": "2584359",
    "end": "2590440"
  },
  {
    "text": "unlikely that somebody could ever Implement that in the constraints of the system call sequence that would pass as",
    "start": "2590440",
    "end": "2596680"
  },
  {
    "text": "normal on the system and uh because it itself would have to get expanded out and uh so it makes that in a practical",
    "start": "2596680",
    "end": "2603760"
  },
  {
    "text": "level very difficult to attack to uh to actually implement um and for instance uh system called",
    "start": "2603760",
    "end": "2610520"
  },
  {
    "text": "proxying essentially looks like a read read some arbitrary system call on the right and that's basically reading the",
    "start": "2610520",
    "end": "2617599"
  },
  {
    "text": "system call number reading the the arguments that are going to go into the registers and uh executing the system",
    "start": "2617599",
    "end": "2624280"
  },
  {
    "text": "call and writing the response B out of the socket basically no program does that I mean you just don't see that",
    "start": "2624280",
    "end": "2629880"
  },
  {
    "text": "sequence very often and it would just it repeats infinitely as somebody runs",
    "start": "2629880",
    "end": "2635400"
  },
  {
    "text": "code um another thing to just give a concrete example of uh Steve talking about performance aspects of some of",
    "start": "2635400",
    "end": "2642000"
  },
  {
    "text": "these uh algorithms you can find algorithms that have like zero false positives and detect almost everything",
    "start": "2642000",
    "end": "2649760"
  },
  {
    "text": "and uh an example is the self-distance algorithm in undercoffer work however it",
    "start": "2649760",
    "end": "2655040"
  },
  {
    "text": "actually uses n log n and log in order to do a lot of what it does which is",
    "start": "2655040",
    "end": "2660119"
  },
  {
    "text": "floating Point operations and for instance in the Linux kernel you can't do floating point so you can implement",
    "start": "2660119",
    "end": "2666240"
  },
  {
    "text": "this by doing fix Point math but it just makes the implementation harder and uh you know more work to be done and so",
    "start": "2666240",
    "end": "2672480"
  },
  {
    "text": "it's just one of those considerations for people who are actually looking to play around with some of the stuff and doing research and thinking about it is",
    "start": "2672480",
    "end": "2678559"
  },
  {
    "text": "that you know you actually have to understand some of the constraints in the environment that you're actually going to implement it in and you might",
    "start": "2678559",
    "end": "2684000"
  },
  {
    "text": "say hey this thing that not quite as perfectly accurate may be much easier and much more performance like in the",
    "start": "2684000",
    "end": "2690800"
  },
  {
    "text": "real world implications um and then a good example",
    "start": "2690800",
    "end": "2696559"
  },
  {
    "text": "of aack against like semantic constraint like I talked about Cy trce right Cy trce has like two models you can either",
    "start": "2696559",
    "end": "2702280"
  },
  {
    "text": "run the program and it'll see all the system calls that the program makes and the arguments and it tries to just drive a profile from that and you can hand",
    "start": "2702280",
    "end": "2708720"
  },
  {
    "text": "tune it if you want to or you can actually write out in a simple file format like these system calls can happen and this one can take these",
    "start": "2708720",
    "end": "2715240"
  },
  {
    "text": "arguments uh a classic example would be like a web server which has logging and",
    "start": "2715240",
    "end": "2720280"
  },
  {
    "text": "it does domain name resolution on the logs right or whatever so it needs to be",
    "start": "2720280",
    "end": "2725920"
  },
  {
    "text": "able to do DNS look UPS so in its profile it does send and receive UDP to",
    "start": "2725920",
    "end": "2731920"
  },
  {
    "text": "any arbitrary host on Port 53 so Shell Code can easily use that as a control",
    "start": "2731920",
    "end": "2737559"
  },
  {
    "text": "channel right and then look at Dan kaminsky's thing on every crazy thing you can do over DNS and you start going",
    "start": "2737559",
    "end": "2744119"
  },
  {
    "text": "wow you know if you can do that you basically have an arbitrary open Communication channel to the world and",
    "start": "2744119",
    "end": "2750720"
  },
  {
    "text": "uh so you know in this case if you're actually looking at sequences of system calls you know it's unlikely the",
    "start": "2750720",
    "end": "2757280"
  },
  {
    "text": "application would sit around and do tons of DNS queries you know in the context",
    "start": "2757280",
    "end": "2762720"
  },
  {
    "text": "just after receiving data um and so it's highly likely that trying to use this control Channel over DNS would uh would",
    "start": "2762720",
    "end": "2770800"
  },
  {
    "text": "really trigger an anomaly when you're looking actually at the sequences so it might be some cases that you want to",
    "start": "2770800",
    "end": "2776319"
  },
  {
    "text": "look at the semantics of each system call but probably you really need to pay attention to sort of the time domain you",
    "start": "2776319",
    "end": "2782680"
  },
  {
    "text": "know and how they're executed and uh I'm not going to talk about loose",
    "start": "2782680",
    "end": "2788920"
  },
  {
    "text": "signatures I just signature based stuff sucks right",
    "start": "2788920",
    "end": "2794000"
  },
  {
    "text": "if you know that there's a problem and somebody's written a signature for it there might be a patch for it if there's",
    "start": "2794000",
    "end": "2799280"
  },
  {
    "text": "not a patch for it you probably can figure out the signature and figure out how to block it someplace too and you",
    "start": "2799280",
    "end": "2805280"
  },
  {
    "text": "know if you can't you probably have more you know more problems operationally as a security company uh or a company that",
    "start": "2805280",
    "end": "2811200"
  },
  {
    "text": "has security people in it uh so you know I'm kind of being an idealist here and",
    "start": "2811200",
    "end": "2816520"
  },
  {
    "text": "there there is some value in certain cases but uh I just think that if you look at this world where you get patches",
    "start": "2816520",
    "end": "2823720"
  },
  {
    "text": "and I don't know if you saw how ver presentation but there's not it's not just one instance there are many instances where the patches themselves",
    "start": "2823720",
    "end": "2830480"
  },
  {
    "text": "included new vulnerabilities uh so great I patch my box and you know there's about maybe 50",
    "start": "2830480",
    "end": "2837040"
  },
  {
    "text": "or 100 people who are actively disassembling every patch that comes out for any interesting operating system and they just discovered that hey there's a",
    "start": "2837040",
    "end": "2843800"
  },
  {
    "text": "new entrance vector and I'm going to run along and pop a bunch of boxes with that and so we really have to think that we",
    "start": "2843800",
    "end": "2850280"
  },
  {
    "text": "do need detection mechanisms that provide defense in those time windows",
    "start": "2850280",
    "end": "2855640"
  },
  {
    "text": "before a good patch is available and even possibly after the Patch because the patch itself might not fix the",
    "start": "2855640",
    "end": "2860839"
  },
  {
    "text": "problem it might fix a subset of the problem or it might introduce new problems so you know that's just kind of",
    "start": "2860839",
    "end": "2867000"
  },
  {
    "text": "I want to lay out a general scope of why I think this stuff is very important",
    "start": "2867000",
    "end": "2874000"
  },
  {
    "text": "syn my slides here so let me check time got a late",
    "start": "2878200",
    "end": "2883240"
  },
  {
    "text": "uh so we talked about Steve went over doing sort of anomaly detection off of",
    "start": "2883240",
    "end": "2889240"
  },
  {
    "text": "looking at sequences of system calls talked about there's some other mechanisms there so this concept of co-",
    "start": "2889240",
    "end": "2894400"
  },
  {
    "text": "stimulation and uh and really what I Define that is so say you have an anomaly detect there's so much more",
    "start": "2894400",
    "end": "2901440"
  },
  {
    "text": "information that's available on the system so for instance the open network connections to the process that actually",
    "start": "2901440",
    "end": "2906839"
  },
  {
    "text": "generated anomaly uh the file access history right so essentially you can profile keep a running cache of what",
    "start": "2906839",
    "end": "2913160"
  },
  {
    "text": "file access has looked like or there's a number of smart ways you could do it uh system resource utilization you know",
    "start": "2913160",
    "end": "2919520"
  },
  {
    "text": "what's the stack size of the program at the time what's the Heap size uh how many open files to have what are the",
    "start": "2919520",
    "end": "2925119"
  },
  {
    "text": "link counts there's a bunch of interesting information in there that can be relevant um and another thing",
    "start": "2925119",
    "end": "2930160"
  },
  {
    "text": "what's the code size of the program you actually pretty easily can determine whether or not something's been you know",
    "start": "2930160",
    "end": "2935880"
  },
  {
    "text": "back doored or had a Trojan inserted in it because as you profile this program over a while you know the code size of",
    "start": "2935880",
    "end": "2942319"
  },
  {
    "text": "the program is going to stay fixed if somebody replaces it updates it makes a binary patch to it unless they've",
    "start": "2942319",
    "end": "2947720"
  },
  {
    "text": "actually just binary patched over code that's not normally executed and not caused any expansion you know this will",
    "start": "2947720",
    "end": "2953480"
  },
  {
    "text": "just show up as an easy sort of thing like is the code right um another thing",
    "start": "2953480",
    "end": "2959640"
  },
  {
    "text": "is what's the value of the user mode instruction pointer so it turns out when a system call is made uh the instruction",
    "start": "2959640",
    "end": "2965880"
  },
  {
    "text": "pointer which points the next instruction uh that the program is going to execute from userland uh actually",
    "start": "2965880",
    "end": "2971400"
  },
  {
    "text": "gets pushed on the stack in the kernel it's available to the kernel it can look at and that instruction pointer is actually incremented so It'll point to",
    "start": "2971400",
    "end": "2977720"
  },
  {
    "text": "the instruction after uh the in most cases the interrupt dispatch call so the",
    "start": "2977720",
    "end": "2984680"
  },
  {
    "text": "in 80 on uh Linux or the in 2E on Windows and so for instance it it's I",
    "start": "2984680",
    "end": "2992319"
  },
  {
    "text": "wouldn't call it you know stack protection but that's what some other people are trying to call it but simply looking in that and looking into the",
    "start": "2992319",
    "end": "2998880"
  },
  {
    "text": "segment and where it exists and whether or not that segment's writable whether or not it's an anonymous segment it's the Heap statment or the stack segment",
    "start": "2998880",
    "end": "3005760"
  },
  {
    "text": "it'll catch the most trivial cases where it's a straight stack you know overflow and somebody's you know not doing a",
    "start": "3005760",
    "end": "3011400"
  },
  {
    "text": "return into lib C they're just trying to execute code off the stack or they're just trying to execute you know code off",
    "start": "3011400",
    "end": "3017160"
  },
  {
    "text": "the Heap or something like that this instruction pointer is going to point that code that's not in a code segment",
    "start": "3017160",
    "end": "3022799"
  },
  {
    "text": "and a code segment usually is just RX and so uh previous talk about overflow",
    "start": "3022799",
    "end": "3028359"
  },
  {
    "text": "protection they talked about segmentation on x86 and so you don't have it on a per page basis but a",
    "start": "3028359",
    "end": "3034160"
  },
  {
    "text": "segment's actually a linear range of addresses and so when the program's loaded the code's loaded into one and",
    "start": "3034160",
    "end": "3040319"
  },
  {
    "text": "that set is rx the data is loaded into an RW and then the the Heap and the",
    "start": "3040319",
    "end": "3045359"
  },
  {
    "text": "stack are actually like rxw and so they're rewritable and executable um so that's just a simple",
    "start": "3045359",
    "end": "3052040"
  },
  {
    "text": "check and it's not a true check of whether or not you've been exploited but it's something that it's really good indicator in the most basic cases uh",
    "start": "3052040",
    "end": "3059400"
  },
  {
    "text": "another one is whether or not the process is exact and that means whether or not it's actually changed the binary",
    "start": "3059400",
    "end": "3065200"
  },
  {
    "text": "it's running within the process and uh so there's a number of ways you can just set that as a flag or you actually can",
    "start": "3065200",
    "end": "3070680"
  },
  {
    "text": "keep a history you know of what's exact over the course and if you know that that program shouldn't exact other stuff",
    "start": "3070680",
    "end": "3077280"
  },
  {
    "text": "we can just sort of set an a priority profile like we don't ever expect this program to exec anything else and at the",
    "start": "3077280",
    "end": "3084280"
  },
  {
    "text": "time an anomaly occurs you look and if you see that it's running a different binary well there's really good chances",
    "start": "3084280",
    "end": "3089760"
  },
  {
    "text": "that you probably just had a buffer overflow and somebody exacts something",
    "start": "3089760",
    "end": "3095000"
  },
  {
    "text": "um another thing is change in user context you know is a system running under or is a process running under a",
    "start": "3095000",
    "end": "3101400"
  },
  {
    "text": "different uid uh than it normally does or that you would expect and that could be somebody doing you know basically",
    "start": "3101400",
    "end": "3107480"
  },
  {
    "text": "switching privilege because a program didn't drop set u ID properly and you know before they're going in and doing",
    "start": "3107480",
    "end": "3113200"
  },
  {
    "text": "their code they're just restoring it to root um another little interesting one that I",
    "start": "3113200",
    "end": "3118960"
  },
  {
    "text": "haven't implemented is a unhandled segmentation fault counter per binary so not per process uh and so segmentation",
    "start": "3118960",
    "end": "3126440"
  },
  {
    "text": "fault and unhandled one would be when a program tries to reference a memory address that's not mapped into the",
    "start": "3126440",
    "end": "3132319"
  },
  {
    "text": "process space and doesn't actually correlate with a page that should be mapped and uh that's usually you know on",
    "start": "3132319",
    "end": "3137640"
  },
  {
    "text": "Unix when you see sig 11 uh segmentation fault and your program dies that's what it",
    "start": "3137640",
    "end": "3142760"
  },
  {
    "text": "is um so if you have a buy Ary right and it gets run through a number of",
    "start": "3142760",
    "end": "3149240"
  },
  {
    "text": "processes uh and you keep a counter of how often it actually seg fals uh and",
    "start": "3149240",
    "end": "3155119"
  },
  {
    "text": "you see that starting increasing what might that be who could answer I know",
    "start": "3155119",
    "end": "3160359"
  },
  {
    "text": "some guys right down here know exactly what that would be but what could it be an indication of does anybody",
    "start": "3160359",
    "end": "3167000"
  },
  {
    "text": "know yeah offset through forcing so somebody's trying to execute a buffer",
    "start": "3167119",
    "end": "3172839"
  },
  {
    "text": "overflow and they don't know what the offset is and they're just sort of trying a Brute Force through it and they're causing the program to crash",
    "start": "3172839",
    "end": "3179440"
  },
  {
    "text": "over and over again it's restarting you know it's just another thing that's you know there it's a possible uh co-",
    "start": "3179440",
    "end": "3184880"
  },
  {
    "text": "stimulator for that so uh let's see let me jump on to the next",
    "start": "3184880",
    "end": "3191798"
  },
  {
    "text": "slide so uh as far as algorithms for co- stimulation so there's a lot of data that's present and uh you know we get",
    "start": "3194520",
    "end": "3202400"
  },
  {
    "text": "that data but we actually need a mechanism for uh looking at that data evaluating it given the context and",
    "start": "3202400",
    "end": "3208200"
  },
  {
    "text": "seeing whether or not something bad is happening so you could have everything from like simple conditional rules if these things are present you know for",
    "start": "3208200",
    "end": "3214359"
  },
  {
    "text": "instance if EIP is in a writable segment like I'm just going to assume this thing is bad and I think it's a high severity",
    "start": "3214359",
    "end": "3220520"
  },
  {
    "text": "it's probably a buffer overflow take some suitable response another thing is you can do uh",
    "start": "3220520",
    "end": "3226119"
  },
  {
    "text": "basian decision networks and um this is you know given a large side of those attributes uh you can either teach a",
    "start": "3226119",
    "end": "3232680"
  },
  {
    "text": "network or you can manually tune one that says hey these things have different weighting and if they",
    "start": "3232680",
    "end": "3238599"
  },
  {
    "text": "essentially cumulate up to a score that's high enough like I think this thing is bad or I think it's severity X",
    "start": "3238599",
    "end": "3244799"
  },
  {
    "text": "and you can do interesting things in those for instance like you can put conditionality between two so for",
    "start": "3244799",
    "end": "3250200"
  },
  {
    "text": "instance you might have one that's very good representation except if another one has occurred you know if there's a",
    "start": "3250200",
    "end": "3256440"
  },
  {
    "text": "different attribute present on the system and so you can get really accurate through these because you can",
    "start": "3256440",
    "end": "3261720"
  },
  {
    "text": "build conditionality between those and say so if attribute X is present really the value of y and uh and so that's like",
    "start": "3261720",
    "end": "3270839"
  },
  {
    "text": "really good way to get a pretty precise thing another thing is you can use PCA or principal component analysis and we",
    "start": "3270839",
    "end": "3277160"
  },
  {
    "text": "can just collect through training and this is something you'd sort of do more on the research side but you know",
    "start": "3277160",
    "end": "3282520"
  },
  {
    "text": "collect a bunch of these data sources uh through training and then use PCA to determine which ones actually give the",
    "start": "3282520",
    "end": "3288960"
  },
  {
    "text": "most value uh determining whether or not this program is normal or operating you",
    "start": "3288960",
    "end": "3295119"
  },
  {
    "text": "know outside of normal another interesting uh thing that's not quite the same thing but but",
    "start": "3295119",
    "end": "3302720"
  },
  {
    "text": "closely related is uh undercoffer did built essentially a Target Centric attack ontology and what that means is",
    "start": "3302720",
    "end": "3309559"
  },
  {
    "text": "that he looked at 4,000 different attacks over the course of 10 years and looked for conon attributes or",
    "start": "3309559",
    "end": "3314799"
  },
  {
    "text": "classifications of that attacks but looked at it from the perspective of if I'm the machine being attacked how would",
    "start": "3314799",
    "end": "3320799"
  },
  {
    "text": "this affect me and what are the attributes that are measurable on the system that would indicate that it's this particular kind of attack and so he",
    "start": "3320799",
    "end": "3327960"
  },
  {
    "text": "build a taxonomy of those and he built an ontology which is essentially a taxonomy with uh you know the logical",
    "start": "3327960",
    "end": "3334319"
  },
  {
    "text": "constraints and relationships between the elements and uh he built a system that they want to export a bunch of this",
    "start": "3334319",
    "end": "3340359"
  },
  {
    "text": "data or the the most interesting data and we'd Seer that as facts into a first order logic system and then ask the",
    "start": "3340359",
    "end": "3347000"
  },
  {
    "text": "system so what's going on and the system would come back hey that looks like a buffer overflow in that process or that",
    "start": "3347000",
    "end": "3352720"
  },
  {
    "text": "looks like a memory consumption denial of service uh and even to the point of where if he had data from multiple",
    "start": "3352720",
    "end": "3358960"
  },
  {
    "text": "machines could see things like TCP sequence number spoofing because he'd have a connection purported to be from",
    "start": "3358960",
    "end": "3365319"
  },
  {
    "text": "one machine and that machine would be suffering a denial of service currently and couldn't possibly be the other end point uh so a very powerful mechanism",
    "start": "3365319",
    "end": "3373440"
  },
  {
    "text": "for sort of you know if the thing comes back and goes um I think it's normal you go oh well maybe this is a false",
    "start": "3373440",
    "end": "3379799"
  },
  {
    "text": "positive that or not anything that I care about uh so the point kind of being is",
    "start": "3379799",
    "end": "3384880"
  },
  {
    "text": "there's a tremendous amount of great academic work in this area um but like a lot of academic work we actually don't",
    "start": "3384880",
    "end": "3391960"
  },
  {
    "text": "have any code that works and that we can play with and so one of my points is",
    "start": "3391960",
    "end": "3397599"
  },
  {
    "text": "that you know though there are intrusion prevention uh products coming out and um they're definitely ones with tremendous",
    "start": "3397599",
    "end": "3404200"
  },
  {
    "text": "promise and and actually they deliver value right now uh it'd be really great",
    "start": "3404200",
    "end": "3409240"
  },
  {
    "text": "for a lot more people to be able to play around with different kinds of implementations and see in their",
    "start": "3409240",
    "end": "3415480"
  },
  {
    "text": "operational environment IRS you know what are the downfalls or you know where is this delivering value value and where",
    "start": "3415480",
    "end": "3422160"
  },
  {
    "text": "is it um you know where is it leaving me with like okay great I got an anomaly",
    "start": "3422160",
    "end": "3427240"
  },
  {
    "text": "and I don't know what to do about it right because that's that can be a real issue so uh I'll get to what I'm trying",
    "start": "3427240",
    "end": "3435440"
  },
  {
    "text": "to do about that if I can find my pointer again oh there it is",
    "start": "3435440",
    "end": "3443920"
  },
  {
    "text": "so so uh now kind to the response point",
    "start": "3449039",
    "end": "3454559"
  },
  {
    "text": "so assuming we can kind of co-stimulate when we have an anomaly and determine sort of the severity of the anomaly or",
    "start": "3454559",
    "end": "3460280"
  },
  {
    "text": "whether or not it's of a class that's you know that we view as malicious or we want to protect against um we need",
    "start": "3460280",
    "end": "3467760"
  },
  {
    "text": "escalating responses doing course response like terminating a process shutting down a system putting in a",
    "start": "3467760",
    "end": "3472839"
  },
  {
    "text": "firewall rule blocking a network those are pretty and uh and probably should stay away",
    "start": "3472839",
    "end": "3480440"
  },
  {
    "text": "from them under cases except where you know exactly what's happening um so we really what we need is fine",
    "start": "3480440",
    "end": "3488440"
  },
  {
    "text": "grain response mechanisms and uh as Steve point out kind of there's a number",
    "start": "3488440",
    "end": "3493680"
  },
  {
    "text": "of things that we actually consider benign responses where they buy us time",
    "start": "3493680",
    "end": "3498720"
  },
  {
    "text": "to gather more information and evaluate what's going on for instance that might be delaying system calls for short",
    "start": "3498720",
    "end": "3505039"
  },
  {
    "text": "periods of time where the application continues to run therefore it doesn't lose any state and uh some people found",
    "start": "3505039",
    "end": "3511079"
  },
  {
    "text": "that for instance like if you denied system calls arbitrarily like passing back you know like nope that didn't work",
    "start": "3511079",
    "end": "3516720"
  },
  {
    "text": "actually just like many programs have bugs or security vulnerabilities many programs have bugs where they don't",
    "start": "3516720",
    "end": "3522559"
  },
  {
    "text": "check responses and they go along thinking that that operation actually succeeded and there was one I forget",
    "start": "3522559",
    "end": "3528799"
  },
  {
    "text": "which academic paper was in but it was actually a really good point where this program tried to drop privileges through",
    "start": "3528799",
    "end": "3534400"
  },
  {
    "text": "set u ID and so if they failed set u ID because they thought oh this might be a buffer overflow trying to you know",
    "start": "3534400",
    "end": "3540920"
  },
  {
    "text": "revert privileges the program didn't even notice and it just kept on running as root like connected to the network",
    "start": "3540920",
    "end": "3547200"
  },
  {
    "text": "and doing all sorts of stuff that it shouldn't be doing as root so you know it might be better idea to temporarily",
    "start": "3547200",
    "end": "3554440"
  },
  {
    "text": "slow the program down well you gather information well you buy a little time for a human to get into the loop if",
    "start": "3554440",
    "end": "3560200"
  },
  {
    "text": "that's sort of the policy Direction you want to go um or to figure out okay I think this thing is really bad and I am",
    "start": "3560200",
    "end": "3566880"
  },
  {
    "text": "going to terminate it or you know something else um so I like to start sort of hey",
    "start": "3566880",
    "end": "3574079"
  },
  {
    "text": "one thing is just record all the relevant information like let's get a really good log of what this thing was doing so let's record all the network",
    "start": "3574079",
    "end": "3579960"
  },
  {
    "text": "connections that were actually open to this process um let's grab all the relevant information about it and uh so",
    "start": "3579960",
    "end": "3586839"
  },
  {
    "text": "for instance like what files were open at the time what open descriptors um I",
    "start": "3586839",
    "end": "3591920"
  },
  {
    "text": "grabbed the memory map uh environment variables the user context it was running on um current binary that's",
    "start": "3591920",
    "end": "3599280"
  },
  {
    "text": "actually executing and uh the instruction pointer and then another thing that you can do",
    "start": "3599280",
    "end": "3604319"
  },
  {
    "text": "is you can even let the process keep running but you can actually sort of generate a core dump or at least selectively dump particular memory",
    "start": "3604319",
    "end": "3610319"
  },
  {
    "text": "segments so for instance uh if you know what instruction pointer was at at the time the system call was made well you",
    "start": "3610319",
    "end": "3616440"
  },
  {
    "text": "dump the memory segment that contains that and uh if you know where the EIP was you simply can just disassemble it",
    "start": "3616440",
    "end": "3623720"
  },
  {
    "text": "and see what the code was within context and so yeah the average security Ops guy isn't going to do that but uh you know",
    "start": "3623720",
    "end": "3631359"
  },
  {
    "text": "eventually you could probably get the data to somebody who can look at it and go hey yeah this looks like it was something really bad going on um and at",
    "start": "3631359",
    "end": "3638920"
  },
  {
    "text": "least the the very far point is you get these anomalies you don't know what they are you know you're either blocking them",
    "start": "3638920",
    "end": "3645799"
  },
  {
    "text": "or you're letting them go but you can turn around and send this data to the vendor and the vendor's got people who",
    "start": "3645799",
    "end": "3651680"
  },
  {
    "text": "hopefully can analyze it and uh they look at it and go yeah this looks like it's new attack that nobody knows about",
    "start": "3651680",
    "end": "3657799"
  },
  {
    "text": "and uh you know figure out that and tell you what it is and you know it gets taken care of eventually and so one of",
    "start": "3657799",
    "end": "3664079"
  },
  {
    "text": "my gripes with almost all intrusion detection systems is they don't give you enough data whether or not for a",
    "start": "3664079",
    "end": "3670240"
  },
  {
    "text": "computer to analyze it or for a human to analyze it to really like in a case of where like okay it's an oday attack or",
    "start": "3670240",
    "end": "3676680"
  },
  {
    "text": "it's a worm that you know just started to spread for anybody to actually go H",
    "start": "3676680",
    "end": "3681720"
  },
  {
    "text": "this is something we haven't seen before and uh they really need to do that because because otherwise they're really",
    "start": "3681720",
    "end": "3686960"
  },
  {
    "text": "not useful they just generate a bunch of alerts that you either disregard or you run around like Mad Men like thinking",
    "start": "3686960",
    "end": "3692559"
  },
  {
    "text": "that you know a machine's compromised and not knowing for sure that it is and not knowing exactly what is",
    "start": "3692559",
    "end": "3698559"
  },
  {
    "text": "compromised um another one is fail or Grant access to specific files or other system resources so a really kind of",
    "start": "3698559",
    "end": "3706240"
  },
  {
    "text": "interesting thing is if you're actually profiling the system resource usage uh as part of your training and you know",
    "start": "3706240",
    "end": "3713240"
  },
  {
    "text": "you do get an anomaly one of the things you do is just go okay well I'm telling",
    "start": "3713240",
    "end": "3718480"
  },
  {
    "text": "this process and I'm going to constrain it to only do things that it's ever done before so it can only read or write to",
    "start": "3718480",
    "end": "3724079"
  },
  {
    "text": "the files that did before I can only open network connections to host that it's opened you know network connections",
    "start": "3724079",
    "end": "3729960"
  },
  {
    "text": "to before uh you know whatever the case of it you know you can imagine the extent that you could go and so you know",
    "start": "3729960",
    "end": "3737039"
  },
  {
    "text": "it may be compromised but at least you can say you know I'm limited to scope of what it can do and uh and so that's a",
    "start": "3737039",
    "end": "3744760"
  },
  {
    "text": "really valuable mechanism that could potentially you know hinder an attacker if they do take control of the process",
    "start": "3744760",
    "end": "3751559"
  },
  {
    "text": "or hinder a worm from spreading for instance but not cause the application to actually stop doing what it was doing",
    "start": "3751559",
    "end": "3758559"
  },
  {
    "text": "and I'll get a little bit more to that point in a bit um so I said introduce",
    "start": "3758559",
    "end": "3763880"
  },
  {
    "text": "system call delays and that could be relative to the severity or sort of as defined by uh system developer and one",
    "start": "3763880",
    "end": "3770480"
  },
  {
    "text": "of the things I was working on I actually um take the process and put it on a weight qu with the timeout and and",
    "start": "3770480",
    "end": "3776119"
  },
  {
    "text": "the user land goes ahead and looks at it and if it thinks it's okay it releases a process but if it times out uh it starts",
    "start": "3776119",
    "end": "3783279"
  },
  {
    "text": "resuming execution and that way my system is robust in case the user land fails or doesn't start up anything like",
    "start": "3783279",
    "end": "3789160"
  },
  {
    "text": "that in that way even if something's doing anomalies I'm not causing it to fail closed but in some other",
    "start": "3789160",
    "end": "3794640"
  },
  {
    "text": "environments for instance you have an environment where confidentiality Integrity is really important and availability is not as important you",
    "start": "3794640",
    "end": "3801599"
  },
  {
    "text": "might want to fail closed and so that is like if something doesn't come back and tell me yes process should continue",
    "start": "3801599",
    "end": "3806880"
  },
  {
    "text": "running it gets killed um another one is terminate specific network connections",
    "start": "3806880",
    "end": "3813559"
  },
  {
    "text": "um versus and that is like on the host you see a network connection it's connected to this process so for",
    "start": "3813559",
    "end": "3820520"
  },
  {
    "text": "instance you might know that this program should actually never communicate with external parties it should only communicate with things on",
    "start": "3820520",
    "end": "3826440"
  },
  {
    "text": "your local land and at the time you see the anomaly there's a network connection to a non-local land address terminate",
    "start": "3826440",
    "end": "3834839"
  },
  {
    "text": "right and you know alert and then maybe somebody goes ahead and puts a block in at some point uh someplace else and then",
    "start": "3834839",
    "end": "3841640"
  },
  {
    "text": "at the you know highest level be terminate the process itself and uh I would say that for now",
    "start": "3841640",
    "end": "3848400"
  },
  {
    "text": "response selection should probably remain like a human definable thing um",
    "start": "3848400",
    "end": "3853599"
  },
  {
    "text": "but what we need is fine grain responses like this that the actual user knowing",
    "start": "3853599",
    "end": "3858760"
  },
  {
    "text": "their production environment knowing you know the availability requirements of their system also the confidentiality",
    "start": "3858760",
    "end": "3864400"
  },
  {
    "text": "that's sort of necessary for the the data on that box or the integrity that's necessary um something that they can",
    "start": "3864400",
    "end": "3870200"
  },
  {
    "text": "string together and so when the co- stimulation kind of happens uh that",
    "start": "3870200",
    "end": "3875960"
  },
  {
    "text": "classification needs to be something that's human mappable you a human needs to be a look at and go okay so for",
    "start": "3875960",
    "end": "3881520"
  },
  {
    "text": "either you know basically code path changes things like buffer overflows",
    "start": "3881520",
    "end": "3887640"
  },
  {
    "text": "like I want to take this level of response uh for things that look like denial of services I want to take this",
    "start": "3887640",
    "end": "3893880"
  },
  {
    "text": "other level response things that I don't know about I just want to collect some more information on right and send an alert or not send an alert and this is",
    "start": "3893880",
    "end": "3900920"
  },
  {
    "text": "another place where like if the system just doesn't think it's interesting maybe you just don't generate alert or",
    "start": "3900920",
    "end": "3906079"
  },
  {
    "text": "at least not alert off to an Ops console that gets people all fired up about it maybe you just write it off to CIS log",
    "start": "3906079",
    "end": "3911279"
  },
  {
    "text": "or something",
    "start": "3911279",
    "end": "3914480"
  },
  {
    "text": "um sorry about my slow uh slot navigation here",
    "start": "3918960",
    "end": "3925640"
  },
  {
    "text": "oh I also wanted to make a couple points about you know so I actually work in an",
    "start": "3927359",
    "end": "3933279"
  },
  {
    "text": "environment where you know I've got systems that if they go down they cost millions of dollars an hour you know and that equates to like $500 a second in",
    "start": "3933279",
    "end": "3940960"
  },
  {
    "text": "downtime so if I have a worm and it cost me $300,000 to uh you know mitigate and",
    "start": "3940960",
    "end": "3947559"
  },
  {
    "text": "clean up after you know that sort of correlates to you know 15 minutes of downtime on my system the chances are",
    "start": "3947559",
    "end": "3954960"
  },
  {
    "text": "like I don't want to do anything that might cause system downtime and I really just rather know that an event's going",
    "start": "3954960",
    "end": "3960480"
  },
  {
    "text": "on and get somebody there to know that for instance maybe this worm is just trying to propagate and it doesn't",
    "start": "3960480",
    "end": "3965880"
  },
  {
    "text": "actually do anything else that's the case I'll try to take some steps to slow its propagation down so I don't have to",
    "start": "3965880",
    "end": "3971039"
  },
  {
    "text": "clean up as many hosts but you know who really cares I rather keep my business",
    "start": "3971039",
    "end": "3976279"
  },
  {
    "text": "up and I rather keep money flowing um excuse me for a second uh i' rather",
    "start": "3976279",
    "end": "3982119"
  },
  {
    "text": "keep money flowing you know than try to actually stop this thing from taking hold of the system uh versus you might",
    "start": "3982119",
    "end": "3987920"
  },
  {
    "text": "have an environment you know take Military Intelligence Community where they could suffer some downtime but they",
    "start": "3987920",
    "end": "3993640"
  },
  {
    "text": "cannot yield control of that machine to anybody else uh because of the nature of the data you know or what's moving",
    "start": "3993640",
    "end": "4000000"
  },
  {
    "text": "through it and that needs to be something that a human at this point responds because you know I don't know a",
    "start": "4000000",
    "end": "4005319"
  },
  {
    "text": "way to make software smart enough to go hey this system is my backend database that transacts all my uh financial",
    "start": "4005319",
    "end": "4012640"
  },
  {
    "text": "application uh stuff and you know don't shut down and uh I think uh mark from EI made",
    "start": "4012640",
    "end": "4020160"
  },
  {
    "text": "a good point about you know one uh IPS system that you know protected against",
    "start": "4020160",
    "end": "4027000"
  },
  {
    "text": "uh particular worm that was exploiting RPC on a Windows box but XP and so forth",
    "start": "4027000",
    "end": "4033480"
  },
  {
    "text": "had this really good thing that if the RPC service dies or actually LSA dies uh it reboots within 30 seconds so you know",
    "start": "4033480",
    "end": "4042279"
  },
  {
    "text": "the exploit was actually causing corruption within the process but it wasn't allowing the code to run so the",
    "start": "4042279",
    "end": "4048799"
  },
  {
    "text": "machine technically wasn't being infected by the Worm but it was rebooting every 30 seconds and if you've ever seen a worm you know particularly",
    "start": "4048799",
    "end": "4055839"
  },
  {
    "text": "this one if it got the offset right it was you know going for sp1 versus SP2 you watched your box on the network you",
    "start": "4055839",
    "end": "4062119"
  },
  {
    "text": "know reboot every time come up get hit again reboot and uh so that's a denial",
    "start": "4062119",
    "end": "4069359"
  },
  {
    "text": "service so it turned this attack from Gaining control of a machine to denial a service to a machine and some",
    "start": "4069359",
    "end": "4075640"
  },
  {
    "text": "environments that might be a preferable thing to do in others it just may not be kosher at all and uh so that that's a",
    "start": "4075640",
    "end": "4082920"
  },
  {
    "text": "real um thing that you know I think anybody who's looking at these systems need to understand and anybody who",
    "start": "4082920",
    "end": "4089039"
  },
  {
    "text": "writing these systems needs to take into account and the systems need to be configurable uh for that kind of",
    "start": "4089039",
    "end": "4094400"
  },
  {
    "text": "environment you know a dialable little",
    "start": "4094400",
    "end": "4098158"
  },
  {
    "text": "knob uh so a stupid simple example is you get an anomaly in a system sequence call uh and the process is exact and you",
    "start": "4104239",
    "end": "4112400"
  },
  {
    "text": "have a profile says this process doesn't exec anything else um process has open network connections and the instruction",
    "start": "4112400",
    "end": "4119040"
  },
  {
    "text": "pointer is in writable memory segment so a possible response might be to you know grab all the state",
    "start": "4119040",
    "end": "4124679"
  },
  {
    "text": "information about the process uh dump the memory segment containing EIP terminate the process and issue an",
    "start": "4124679",
    "end": "4130838"
  },
  {
    "text": "alert um so anybody in here uh if the process is exact the process has open",
    "start": "4130839",
    "end": "4137560"
  },
  {
    "text": "network connections and the instruction pointer is rable memory segment what kind of attack is that probably do",
    "start": "4137560",
    "end": "4142798"
  },
  {
    "text": "anybody know yeah buffer overflow um so uh interesting enough like I've got a",
    "start": "4142799",
    "end": "4150159"
  },
  {
    "text": "stupid little system that you know if this was to occur I would actually dump the memory segment that happened in and",
    "start": "4150159",
    "end": "4156318"
  },
  {
    "text": "I actually would capture the Shell Code of the exploit which is kind of interesting from a forensic perspective",
    "start": "4156319",
    "end": "4162359"
  },
  {
    "text": "because not only can I see what the Shell Code does but actually have the exact Shell Code as delivered by the",
    "start": "4162359",
    "end": "4167838"
  },
  {
    "text": "exploit and if that happened to be a novel attack and you know the source code for it wasn't broadly spread if I",
    "start": "4167839",
    "end": "4174679"
  },
  {
    "text": "happened to you know find a person which is unlikely that probably did it you would actually have the best forensic",
    "start": "4174679",
    "end": "4180719"
  },
  {
    "text": "information is possibly available on a computer and it's equivalent to Tool marks in the real forensics World say",
    "start": "4180719",
    "end": "4187120"
  },
  {
    "text": "that tool that piece of source code that was sit on a system delivers this and",
    "start": "4187120",
    "end": "4192318"
  },
  {
    "text": "you know it's not conclusive but it's much better than what we currently have and oh by the way no file system based",
    "start": "4192319",
    "end": "4199600"
  },
  {
    "text": "forensic analysis would ever give that to you and uh I'm actually not a big believer in file-based forensic analysis",
    "start": "4199600",
    "end": "4206719"
  },
  {
    "text": "except for when you know you're looking for people keeping spreadsheets of their legal gambling stuff and storing child",
    "start": "4206719",
    "end": "4212000"
  },
  {
    "text": "porn but for system compromise you know most current exploit methodologies don't",
    "start": "4212000",
    "end": "4218400"
  },
  {
    "text": "write to the file system they exploit a process they inject code in the process they do stuff they possibly fork and",
    "start": "4218400",
    "end": "4224520"
  },
  {
    "text": "exec the process um so they might read something off the file system but uh it's probably in the",
    "start": "4224520",
    "end": "4230719"
  },
  {
    "text": "case of a shell something that get executed all the time and therefore it probably gets executed Again by some",
    "start": "4230719",
    "end": "4236480"
  },
  {
    "text": "background KRON job and so the access time you know is totally bogus anyways",
    "start": "4236480",
    "end": "4241960"
  },
  {
    "text": "uh so you know any of these things need to actually get to the point where they collect information that might actually",
    "start": "4241960",
    "end": "4248600"
  },
  {
    "text": "allow you to see what the hell went on and you know if you get really lucky you get a new exploit so",
    "start": "4248600",
    "end": "4257199"
  },
  {
    "text": "and we all like to collect exploits or maybe we don't so",
    "start": "4257199",
    "end": "4263840"
  },
  {
    "text": "uh sort of a whole where we need to go you know I'm really not talking about perfect security I'm talking about",
    "start": "4263840",
    "end": "4269040"
  },
  {
    "text": "trying to increase operational security um trying to get to automated response could definitely decrease the amount of",
    "start": "4269040",
    "end": "4276040"
  },
  {
    "text": "money amount of time that humans spend responding to events uh cleaning up systems um definitely can protect us",
    "start": "4276040",
    "end": "4283159"
  },
  {
    "text": "against a large class of attacks on aut atically but also that any system that's",
    "start": "4283159",
    "end": "4288600"
  },
  {
    "text": "built in the space uh really needs to give us better information and it really needs to take sort of operational",
    "start": "4288600",
    "end": "4294280"
  },
  {
    "text": "considerations like what the hell does this machine do and what would be an appropriate response on this machine to",
    "start": "4294280",
    "end": "4299960"
  },
  {
    "text": "account um and uh if it gives us enough information",
    "start": "4299960",
    "end": "4306760"
  },
  {
    "text": "that a computer can reason over it or run an algorithm to determine whether or not it's normal it's probably enough information for a human to do the same",
    "start": "4306760",
    "end": "4313040"
  },
  {
    "text": "thing and so it's a sort of a win-win in that case even if you don't decide to do any kind of automated response at least",
    "start": "4313040",
    "end": "4319760"
  },
  {
    "text": "there's data that maybe not a standard like security opsp person could interpret but eventually it could get to",
    "start": "4319760",
    "end": "4325440"
  },
  {
    "text": "somebody who could interpret it and really give you a conclusive analysis of what happened in that case whether or",
    "start": "4325440",
    "end": "4331280"
  },
  {
    "text": "not it was a false positive or whether or not it was actually something malicious um so I'm not going to talk",
    "start": "4331280",
    "end": "4337639"
  },
  {
    "text": "too much about this other wrapup because we're running out of time but uh what I am working on uh it's not complete yet I",
    "start": "4337639",
    "end": "4344800"
  },
  {
    "text": "was hoping I could actually show it um is an automated defense framework and",
    "start": "4344800",
    "end": "4350800"
  },
  {
    "text": "essentially what it is is I looked at a number of projects like Cy trce as well as I've actually implemented anomaly",
    "start": "4350800",
    "end": "4356880"
  },
  {
    "text": "detection system but it's for a company I can't give it away um and I looked out there's some very common things on Linux",
    "start": "4356880",
    "end": "4362719"
  },
  {
    "text": "because that's what I work on uh that need to do and that's for instance you need to know when to process EXA you need to know when it terminates you need",
    "start": "4362719",
    "end": "4369360"
  },
  {
    "text": "to know when it forked is that's when it gets created um you need to be able to look at each system call and if you look",
    "start": "4369360",
    "end": "4374719"
  },
  {
    "text": "at things like like LSM which is loadable security modules uh it's great for doing things like SE Linux but it's",
    "start": "4374719",
    "end": "4380520"
  },
  {
    "text": "completely for doing anything like intrusion detection because it doesn't allow you to see all the system",
    "start": "4380520",
    "end": "4385560"
  },
  {
    "text": "calls that are made nor the parameters it only cares about when you act on security critical objects uh so there's",
    "start": "4385560",
    "end": "4391880"
  },
  {
    "text": "really a gap here as far as being able to do anything including just collecting evidence about like what system calls",
    "start": "4391880",
    "end": "4398920"
  },
  {
    "text": "are being made so I decided I wanted just to implement like a generic framework that would make it so",
    "start": "4398920",
    "end": "4404159"
  },
  {
    "text": "researchers or even even if somebody wants to build you know a commercial product on it I don't care I'm not actually going to license the code uh",
    "start": "4404159",
    "end": "4411960"
  },
  {
    "text": "that has some just sort of standard like uh you know function calling mechanisms",
    "start": "4411960",
    "end": "4417080"
  },
  {
    "text": "that people can just provide the functions that actually do the anomaly detection algorithm or do some of the",
    "start": "4417080",
    "end": "4422920"
  },
  {
    "text": "response mechanisms that they want and uh they can just plug it in and the rest of the code you know does all the hard",
    "start": "4422920",
    "end": "4428440"
  },
  {
    "text": "stuff deals with the synchronization on multiple processors and uh provides a communication and control mechanism",
    "start": "4428440",
    "end": "4434400"
  },
  {
    "text": "between the colel component and the user land component so my model here is that you need to do the detection and",
    "start": "4434400",
    "end": "4439840"
  },
  {
    "text": "Analysis you know of the system call sequences and stuff like that in kernel for performance reasons uh and also the",
    "start": "4439840",
    "end": "4445960"
  },
  {
    "text": "fact that it's separated from user code and as long as your kernel is not compromised uh it can take strong enforcement it can kind of trust the",
    "start": "4445960",
    "end": "4452000"
  },
  {
    "text": "information it has but uh there's a lot of stuff that you want to do and a lot of information that's available in user",
    "start": "4452000",
    "end": "4457560"
  },
  {
    "text": "land and you might as well write the code up there it's easier to implement it's easier to debug it's safer if it",
    "start": "4457560",
    "end": "4462880"
  },
  {
    "text": "crashes it doesn't cause your box to die a horrible death and uh so I'm building",
    "start": "4462880",
    "end": "4468320"
  },
  {
    "text": "a python sort of demon framework uh with some interesting analysis tools like the ability to dump memory segments um and",
    "start": "4468320",
    "end": "4476080"
  },
  {
    "text": "to uh collect the network connections that are open to the process at the time uh to evaluate that to determine whether",
    "start": "4476080",
    "end": "4482239"
  },
  {
    "text": "or not uh that's a server you know so that's a client connected to this process or whether or not it's this process connecting to something else uh",
    "start": "4482239",
    "end": "4489040"
  },
  {
    "text": "so for instance you can build constraint policies around that and say hey this program only should ever you know get",
    "start": "4489040",
    "end": "4494719"
  },
  {
    "text": "connected connections from internal clients uh you know and if that's the case then great if it notices that it",
    "start": "4494719",
    "end": "4500719"
  },
  {
    "text": "has a connection from an external client you go that's probably bad or if it's making a outbound connection like your",
    "start": "4500719",
    "end": "4506560"
  },
  {
    "text": "web server making outbound connection probably not something it normally does probably a good indicator that you know",
    "start": "4506560",
    "end": "4513159"
  },
  {
    "text": "you've got to compromise in progress uh and so the kernel component also ex um",
    "start": "4513159",
    "end": "4520600"
  },
  {
    "text": "uh exports a bunch of information that's hard to get from user land um about the process ESS it makes it valuable and so",
    "start": "4520600",
    "end": "4526719"
  },
  {
    "text": "I'm really hoping that you know even if just one smart guy in school or woman in school takes this thing and comes up",
    "start": "4526719",
    "end": "4532560"
  },
  {
    "text": "with something great it would be uh pretty cool but also as I work on and other people work on it I hope to",
    "start": "4532560",
    "end": "4537920"
  },
  {
    "text": "implement just some of these uh these base models and so people can actually get this and kind of choose you know",
    "start": "4537920",
    "end": "4544040"
  },
  {
    "text": "from a number of options put it on their system and run it and at least get some experience and play with it and either",
    "start": "4544040",
    "end": "4549480"
  },
  {
    "text": "put it in operation or at least understand maybe give some feedback write papers whatever about what would",
    "start": "4549480",
    "end": "4555440"
  },
  {
    "text": "be better uh or what needs to be done in order to make it useful so my website's",
    "start": "4555440",
    "end": "4561120"
  },
  {
    "text": "actually pinky. heex off.org it's on the slides uh there is a kernel patch for",
    "start": "4561120",
    "end": "4567199"
  },
  {
    "text": "2426 uh that it's not fleshed out it's not clean and it actually has a wicked",
    "start": "4567199",
    "end": "4573080"
  },
  {
    "text": "bug in it that will crash your box eventually and uh um but over the course of the next uh like two months but it's",
    "start": "4573080",
    "end": "4579960"
  },
  {
    "text": "available if anybody wants to look at it and see where I'm going or anybody wants to work on the project um I'm open to",
    "start": "4579960",
    "end": "4585360"
  },
  {
    "text": "both uh but hopefully over the next month or two I'll actually get it wrapped up for a version 10 with these",
    "start": "4585360",
    "end": "4591440"
  },
  {
    "text": "things there and um I also would like it to sort of force commercial vendors maybe to um you know generate more",
    "start": "4591440",
    "end": "4599320"
  },
  {
    "text": "information from their stuff and uh maybe feel a little competitive pressure that they have to deliver something",
    "start": "4599320",
    "end": "4604600"
  },
  {
    "text": "better uh because there's something free available so that's where I'm kind of going with",
    "start": "4604600",
    "end": "4610480"
  },
  {
    "text": "that so uh any questions",
    "start": "4610480",
    "end": "4615199"
  },
  {
    "text": "yes",
    "start": "4615719",
    "end": "4617960"
  },
  {
    "text": "Dennis yeah yeah so that's what there was some um there was an academic system that would uh limit and actually cyst",
    "start": "4630880",
    "end": "4638480"
  },
  {
    "text": "Trace will do it too in certain cases where uh if it calls uh a system call",
    "start": "4638480",
    "end": "4644920"
  },
  {
    "text": "and the policy says that it can't call that system call it'll just return an air code on it and that can trigger",
    "start": "4644920",
    "end": "4651120"
  },
  {
    "text": "nasty little bugs I kind of mentioned one of them and it's probably not the appropriate thing to do most often and",
    "start": "4651120",
    "end": "4658679"
  },
  {
    "text": "it's it's probably appropriate to do if you have a good profile of what the",
    "start": "4658679",
    "end": "4663840"
  },
  {
    "text": "resource usage should look like for that program and you limit the program to its common you know uh uh execution pass and",
    "start": "4663840",
    "end": "4672080"
  },
  {
    "text": "its common resource utilizations and only you know know uh deny it things that are totally abnormal but uh just",
    "start": "4672080",
    "end": "4679199"
  },
  {
    "text": "sort of arbitrarily doing it is probably a bad idea you",
    "start": "4679199",
    "end": "4684678"
  },
  {
    "text": "know yeah you yeah who knows you know and and if nothing else it opens to",
    "start": "4685639",
    "end": "4690679"
  },
  {
    "text": "simple denial of services by you know if you can just tickle it down just like a slightly abnormal path you don't even",
    "start": "4690679",
    "end": "4697199"
  },
  {
    "text": "get control over it you just trip up an air condition that's you know never been seen or wasn't in the profile and the thing goes ah and like you know kills",
    "start": "4697199",
    "end": "4703639"
  },
  {
    "text": "the process that's a bad idea right yeah I mean there's a there's a",
    "start": "4703639",
    "end": "4709719"
  },
  {
    "text": "number of bad things oh and so that was also a point that I didn't mention is you know my first naive notion was like",
    "start": "4709719",
    "end": "4715360"
  },
  {
    "text": "I will dump the whole process address space of this program that's doing the anomaly so I can analyze it and I have",
    "start": "4715360",
    "end": "4720760"
  },
  {
    "text": "everything um in my environment unfortunately I have literally about 10",
    "start": "4720760",
    "end": "4726440"
  },
  {
    "text": "processes per box that have over a gig virtual memory size a piece and so uh",
    "start": "4726440",
    "end": "4732760"
  },
  {
    "text": "yeah if my automated response dumps the whole process bace it's just a bad thing on you know an 80 gig hard drive so I",
    "start": "4732760",
    "end": "4739760"
  },
  {
    "text": "selectively dump you know things like the process or the segment that EIP is",
    "start": "4739760",
    "end": "4744800"
  },
  {
    "text": "in and then possibly the anonymous and Heap and stack segments if they're not like ridiculously big and that way I",
    "start": "4744800",
    "end": "4751000"
  },
  {
    "text": "probably have enough State information about what the program was doing so I'll have variables on the stack and on the",
    "start": "4751000",
    "end": "4756199"
  },
  {
    "text": "Heap and I'll have the code that was executing I probably configure out pretty well exactly what was going on um",
    "start": "4756199",
    "end": "4762400"
  },
  {
    "text": "so that's probably a better thing to do and I had this notion a long time ago and never implemented I think there are",
    "start": "4762400",
    "end": "4768440"
  },
  {
    "text": "some other people I heard that enase now has this Enterprise Edition that it can hook up the ID systems and it can do",
    "start": "4768440",
    "end": "4774400"
  },
  {
    "text": "evidence capturing and they do capture some volatile information uh but I have no idea about it I've never seen it and",
    "start": "4774400",
    "end": "4781040"
  },
  {
    "text": "I don't know if it's naive smart you know or whatnot so uh but it's one of those",
    "start": "4781040",
    "end": "4787159"
  },
  {
    "text": "things anybody else okay go drink thanks a lot",
    "start": "4787159",
    "end": "4794239"
  }
]