[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "[Music] this is recertifying active directory my",
    "start": "6360",
    "end": "12480"
  },
  {
    "text": "name is will schroeder i go by harmjoy on twitter and i'm lee christensen i go",
    "start": "12480",
    "end": "17600"
  },
  {
    "text": "by tiffkin on twitter we are both technical architects at spectreops this presentation is kind of the defensive",
    "start": "17600",
    "end": "25119"
  },
  {
    "text": "version of a presentation we gave at blackhat usa so there we dove a lot more into the",
    "start": "25119",
    "end": "30720"
  },
  {
    "text": "specific attacks surrounding active directory certificate services and now we're going to flip gears a bit and focus on defense yeah a little bit about",
    "start": "30720",
    "end": "37920"
  },
  {
    "text": "us so we work at spectreops where we'll mention we're technical architects a bit",
    "start": "37920",
    "end": "43040"
  },
  {
    "text": "of what goes on in our day-to-day role is we do research and development uh for our",
    "start": "43040",
    "end": "48399"
  },
  {
    "text": "offensive services so we're helping build out new tooling figuring out new ways of you know attacking uh we lean",
    "start": "48399",
    "end": "55199"
  },
  {
    "text": "much more on the offensive side so we're figuring out new ways to attack environments and finding weaknesses in primarily",
    "start": "55199",
    "end": "62399"
  },
  {
    "text": "windows environments so what we're going to cover today is a",
    "start": "62399",
    "end": "68000"
  },
  {
    "start": "64000",
    "end": "96000"
  },
  {
    "text": "little bit of background behind active directory certificate services uh give a really quick overview of a couple of the",
    "start": "68000",
    "end": "74400"
  },
  {
    "text": "attacks we aren't going to be able to dive into all of them but then we're going to start diving into some of the",
    "start": "74400",
    "end": "79680"
  },
  {
    "text": "defensive defenses and detection opportunities for these attacks and then ending with",
    "start": "79680",
    "end": "86880"
  },
  {
    "text": "some notes on incident response if an attacker leverages active directory certificate services uh while",
    "start": "86880",
    "end": "94079"
  },
  {
    "text": "they're attacking an environment so a little bit about the background of",
    "start": "94079",
    "end": "99280"
  },
  {
    "start": "96000",
    "end": "185000"
  },
  {
    "text": "active directory certificate services so what is it first of all it's a server role that",
    "start": "99280",
    "end": "104799"
  },
  {
    "text": "comes on on a windows server and so what it does is once you enable it it is",
    "start": "104799",
    "end": "110000"
  },
  {
    "text": "basically microsoft's public key infrastructure implementation so pki",
    "start": "110000",
    "end": "115600"
  },
  {
    "text": "uh basically it acts as a ca and you know pki is used for a lot of different",
    "start": "115600",
    "end": "121600"
  },
  {
    "text": "purposes uh you know you can you've heard about it being used for smart cards ssl it's used for encryption used",
    "start": "121600",
    "end": "128239"
  },
  {
    "text": "inside of email vpns uh you know saml all has to do with certs so pki can be",
    "start": "128239",
    "end": "134160"
  },
  {
    "text": "used in a bunch of different scenarios adcs is microsoft's implementation of that and",
    "start": "134160",
    "end": "139680"
  },
  {
    "text": "it can be applied to all of those same uses so basically",
    "start": "139680",
    "end": "145440"
  },
  {
    "text": "in our case though we specifically are focusing on the authentication portion",
    "start": "145440",
    "end": "150560"
  },
  {
    "text": "of adcs so when we're trying to authenticate to active directory as a user with a certificate",
    "start": "150560",
    "end": "156879"
  },
  {
    "text": "so how does this actually work uh with adcs the first thing a client does is they send a message to us to a",
    "start": "156879",
    "end": "164400"
  },
  {
    "text": "a adcs server saying hey i would like a certificate this is called a csr or a",
    "start": "164400",
    "end": "169760"
  },
  {
    "text": "certificate signing request and then the assuming everything is okay the ca is going to sign",
    "start": "169760",
    "end": "177280"
  },
  {
    "text": "a certificate and send it back to the client and then the client can then use that certificate to",
    "start": "177280",
    "end": "183200"
  },
  {
    "text": "do things so like authenticate to a.d a little more into this process",
    "start": "183200",
    "end": "188720"
  },
  {
    "start": "185000",
    "end": "277000"
  },
  {
    "text": "when if i'm a client and i want to request a certificate first i generate my own public private",
    "start": "188720",
    "end": "195280"
  },
  {
    "text": "key pair and then i send this certificate request message to an adcs",
    "start": "195280",
    "end": "200800"
  },
  {
    "text": "server stating i would like to request a certificate and i signed that message",
    "start": "200800",
    "end": "206159"
  },
  {
    "text": "using that key pair that i just generated in that request i'm stating",
    "start": "206159",
    "end": "211599"
  },
  {
    "text": "what i would like what kind of certificate i would like to request uh and",
    "start": "211599",
    "end": "217040"
  },
  {
    "text": "i deliver that to the to the ca server and this the ca server then validates",
    "start": "217040",
    "end": "222080"
  },
  {
    "text": "that i have permissions to actually request this certificate and assuming",
    "start": "222080",
    "end": "227680"
  },
  {
    "text": "everything goes okay it's going to do some validation like you know is this a or what is what you're requesting",
    "start": "227680",
    "end": "233920"
  },
  {
    "text": "actually exists is it something i can actually deliver are you authorized to do so um assuming all of these checks",
    "start": "233920",
    "end": "240400"
  },
  {
    "text": "pass the server the ca server is then going to sign a certificate",
    "start": "240400",
    "end": "246000"
  },
  {
    "text": "and then send it back to the user so inside of this certificate it's going to state you know what it's going to be",
    "start": "246000",
    "end": "252879"
  },
  {
    "text": "signed by the ca and state you know who is it for and for what purpose so is it is it for authentication is it for an",
    "start": "252879",
    "end": "260079"
  },
  {
    "text": "ssl certificate etc um and then the client will take that signed certificate from the ca and then",
    "start": "260079",
    "end": "267120"
  },
  {
    "text": "normally on windows that's going to be stored in the windows certificate store and then applications can use that",
    "start": "267120",
    "end": "273919"
  },
  {
    "text": "certificate for different purposes so",
    "start": "273919",
    "end": "280000"
  },
  {
    "start": "277000",
    "end": "363000"
  },
  {
    "text": "as part of this in step two and three here uh when i'm requesting a certificate as part of the request i",
    "start": "280000",
    "end": "286800"
  },
  {
    "text": "need to state what kind of certificate i want and this is defined by what's",
    "start": "286800",
    "end": "292240"
  },
  {
    "text": "called a certificate template a certificate template is a is it a d",
    "start": "292240",
    "end": "297520"
  },
  {
    "text": "object and it's basically a blueprint of certificate settings and so",
    "start": "297520",
    "end": "302880"
  },
  {
    "text": "it contains things like how long is the certificate valid for for what purpose",
    "start": "302880",
    "end": "308160"
  },
  {
    "text": "is this is it for authentication is it for ssl encryption is it a vpn cert etc",
    "start": "308160",
    "end": "314560"
  },
  {
    "text": "um the big thing we want to point out here there's a lot of settings that can go into a template but the the i'd say",
    "start": "314560",
    "end": "320800"
  },
  {
    "text": "some of the biggest things to be aware of are what's in this screenshot it's called an application policy that is in",
    "start": "320800",
    "end": "327520"
  },
  {
    "text": "microsoft parlance uh kind of the equivalent of extended key usages eku",
    "start": "327520",
    "end": "334240"
  },
  {
    "text": "and this is stating what the certificate is used for so in this screenshot you can see it's used for client",
    "start": "334240",
    "end": "340080"
  },
  {
    "text": "authentication so that means i can authenticate to active directory but there's other eku's that you're",
    "start": "340080",
    "end": "346240"
  },
  {
    "text": "probably aware of like code signing or smart card logons or server authentication or email encryption those",
    "start": "346240",
    "end": "353120"
  },
  {
    "text": "are all different kinds of eku's but again for our research we only are focusing on eku's that allow us to",
    "start": "353120",
    "end": "359680"
  },
  {
    "text": "authenticate so client authentication being one of those",
    "start": "359680",
    "end": "364880"
  },
  {
    "start": "363000",
    "end": "421000"
  },
  {
    "text": "in order to authenticate uh to active directory uh active",
    "start": "364880",
    "end": "370479"
  },
  {
    "text": "directory needs to trust the ca that signed that certificate",
    "start": "370479",
    "end": "375680"
  },
  {
    "text": "and how it defines that trust is this object in active directory called nt",
    "start": "375680",
    "end": "380720"
  },
  {
    "text": "auth certificates so when you install adcs it creates this object inside of",
    "start": "380720",
    "end": "387199"
  },
  {
    "text": "active directory schema and basically it contains this field called ca certificates and it's a list of the cas",
    "start": "387199",
    "end": "395039"
  },
  {
    "text": "that are trusted for authentication so if any one of those cas",
    "start": "395039",
    "end": "400319"
  },
  {
    "text": "signs a certificate that allows for authentication then when a client uses that certificate they will",
    "start": "400319",
    "end": "407360"
  },
  {
    "text": "be trusted basically when you off to ad it's going to look at the certificate that's presented by the client",
    "start": "407360",
    "end": "414000"
  },
  {
    "text": "check and see if it's in nt auth certificates and if it is then it's going to",
    "start": "414000",
    "end": "419280"
  },
  {
    "text": "grant authentication kind of the second part of this is in the certificate there's a field called",
    "start": "419280",
    "end": "425680"
  },
  {
    "start": "421000",
    "end": "505000"
  },
  {
    "text": "the subject alternative name and normally this is used in certificates to bind an additional",
    "start": "425680",
    "end": "432560"
  },
  {
    "text": "identity to that certificate so a good example of this is with ssl certificates",
    "start": "432560",
    "end": "439520"
  },
  {
    "text": "you may have several websites hosted on a single server and rather than having a",
    "start": "439520",
    "end": "445919"
  },
  {
    "text": "single certificate for every single one of those websites uh a a web server can just have a single",
    "start": "445919",
    "end": "452639"
  },
  {
    "text": "certificate and in the subject alternative name field it could have you know uh specified",
    "start": "452639",
    "end": "459120"
  },
  {
    "text": "several different like uh fields for each domain that's being served by that web server so",
    "start": "459120",
    "end": "465680"
  },
  {
    "text": "one certificate and several different domains the same kind of thing applies in active directory um there's the",
    "start": "465680",
    "end": "472400"
  },
  {
    "text": "subject alternative name field and that actually identifies who you are authenticating as to active directory so",
    "start": "472400",
    "end": "479440"
  },
  {
    "text": "in this case you can see uh there the subject alternative name is for the user well it says administrator",
    "start": "479440",
    "end": "487199"
  },
  {
    "text": "so when even though the subject states it's for harm joy since the san the subject alternative",
    "start": "487199",
    "end": "492960"
  },
  {
    "text": "name is for administrator when i log on using this certificate i'm actually going to log on as the administrator",
    "start": "492960",
    "end": "499360"
  },
  {
    "text": "user not as harmjoy and we'll get into why this matters in the attack section coming up in a few slides",
    "start": "499360",
    "end": "507039"
  },
  {
    "start": "505000",
    "end": "653000"
  },
  {
    "text": "and this just to kind of put a bow on this uh yes you can authenticate with a",
    "start": "507039",
    "end": "512159"
  },
  {
    "text": "certificate i know for a long time uh like i i had heard about authentication",
    "start": "512159",
    "end": "517680"
  },
  {
    "text": "to active directory he basically only in the context of smart cards and most research i would say",
    "start": "517680",
    "end": "523760"
  },
  {
    "text": "prior to this had focused primarily on the smart the smart card side of things so a lot of stuff around benjamin delphi",
    "start": "523760",
    "end": "529680"
  },
  {
    "text": "specifically and a few other researchers as well is definitely focused on the like physical or virtual smart card",
    "start": "529680",
    "end": "535760"
  },
  {
    "text": "aspect of this yeah so i think a lot of people kind of had that misperception or at least we did definitely uh but in",
    "start": "535760",
    "end": "542560"
  },
  {
    "text": "reality that is not the case um and something that uh it was ccob who was it who added the",
    "start": "542560",
    "end": "549600"
  },
  {
    "text": "functionality into kerberos to authenticate uh to active directory or he added it to rubius the kerberos he",
    "start": "549600",
    "end": "556160"
  },
  {
    "text": "added the support for certificate based pknet auth in darubius uh about a year and a half ago yeah and so that was like",
    "start": "556160",
    "end": "562720"
  },
  {
    "text": "a big step forward for us in our understanding um in addition to that during our research we also found that",
    "start": "562720",
    "end": "568399"
  },
  {
    "text": "besides kerberos you can also use s-channel uh separate protocol to",
    "start": "568399",
    "end": "574080"
  },
  {
    "text": "authenticate to active directory as well a good example of this is the ldap s protocol",
    "start": "574080",
    "end": "579519"
  },
  {
    "text": "the ldap secure protocol you can that uses uh s channel for authentication and you can during authentication you can",
    "start": "579519",
    "end": "585760"
  },
  {
    "text": "specify a certificate that you'll log on with in order to actually log on to ad with",
    "start": "585760",
    "end": "592000"
  },
  {
    "text": "that cert though again the it needs to have an eq that certificate needs to have an eku that permits domain",
    "start": "592000",
    "end": "598480"
  },
  {
    "text": "authentication you know client authentication is just one example but we'll talk about a few other ones here later",
    "start": "598480",
    "end": "604560"
  },
  {
    "text": "that work as well and that certificate needs to be signed by a ca that's in the nth",
    "start": "604560",
    "end": "611440"
  },
  {
    "text": "certificates object so this is an example of actually logging on",
    "start": "611440",
    "end": "617120"
  },
  {
    "text": "using rubius so you're specifying i want to log on as this user that's going to be the user uh in the sand field",
    "start": "617120",
    "end": "624560"
  },
  {
    "text": "and then you're specifying the certificate file on windows that's a dot pfx file usually and then this is it's",
    "start": "624560",
    "end": "630880"
  },
  {
    "text": "password encrypted that pfx file is so that's just providing the password and rubius is logging on using kerberos here",
    "start": "630880",
    "end": "638480"
  },
  {
    "text": "and in the result you're getting the base64 encoded tgt uh as a response but we didn't provide a",
    "start": "638480",
    "end": "645040"
  },
  {
    "text": "password here certificate auth is completely separate from password authentication and so this is just using",
    "start": "645040",
    "end": "651120"
  },
  {
    "text": "that certificate file all right some of the attacks we're going to cover at a high level a",
    "start": "651120",
    "end": "657440"
  },
  {
    "text": "few of these are going to dive into specifics on two or three of them and then we're going to start talking about defenses like active preventative",
    "start": "657440",
    "end": "664560"
  },
  {
    "text": "measures that you can use to protect against some of these things so around black cat usa lee and i released",
    "start": "664560",
    "end": "671600"
  },
  {
    "text": "a certified pre-owned white paper is 140 page white paper that covered a large number of attacks against act directory",
    "start": "671600",
    "end": "678800"
  },
  {
    "text": "certificate services as well as a lot of background and very intense defensive",
    "start": "678800",
    "end": "684240"
  },
  {
    "text": "deep dives into stuff so if you are interested in these things we have a bitly link to the white paper at the end of this presentation",
    "start": "684240",
    "end": "690720"
  },
  {
    "text": "but in the white paper we detailed a number of different attacks five different attacks",
    "start": "690720",
    "end": "696880"
  },
  {
    "text": "dealing with certificate theft three with persistence like account persistence or machine persistence eight different",
    "start": "696880",
    "end": "703200"
  },
  {
    "text": "domain escalation scenarios and three different domain persistent scenarios we did not invent all of these many of",
    "start": "703200",
    "end": "709440"
  },
  {
    "text": "these or most of these existed it's you know in to some degree in some place kind of on the internet with some information but no one had like really",
    "start": "709440",
    "end": "716480"
  },
  {
    "text": "codified everything together and looked at adcs as a whole so we did have some novel research as far as the domain escalation",
    "start": "716480",
    "end": "722959"
  },
  {
    "text": "scenarios that we're going to talk about but you know we are not in any way claiming that we just invented all of this tradecraft we just wanted to",
    "start": "722959",
    "end": "728880"
  },
  {
    "text": "actually document and weaponize most of it we're going to talk about a few of these like i mentioned the first one is going",
    "start": "728880",
    "end": "735279"
  },
  {
    "start": "731000",
    "end": "853000"
  },
  {
    "text": "to be malicious certificate enrollments so these are the persist series of attacks",
    "start": "735279",
    "end": "740880"
  },
  {
    "text": "so users and machines can enroll in any certificate template that they have enroll permissions for so these",
    "start": "740880",
    "end": "746880"
  },
  {
    "text": "templates are just active directory objects like we mentioned and there's it has you know a discretionary access control list a",
    "start": "746880",
    "end": "753440"
  },
  {
    "text": "dacal that can define who's allowed to enroll in the template there are a number of different default",
    "start": "753440",
    "end": "759519"
  },
  {
    "text": "templates like the user and computer templates that allow users and computers respectively to enroll",
    "start": "759519",
    "end": "764720"
  },
  {
    "text": "but if this if such a template allows for domain authentication which some of these defaults do those user and",
    "start": "764720",
    "end": "770240"
  },
  {
    "text": "computer templates also allow for domain auth we can persist in someone's account",
    "start": "770240",
    "end": "775519"
  },
  {
    "text": "contacts so if you steal a token or inject into somebody's process but we're operating in a",
    "start": "775519",
    "end": "781040"
  },
  {
    "text": "victim user's account context or victim machines system account context then we can actively enroll that account context",
    "start": "781040",
    "end": "788000"
  },
  {
    "text": "in one of these templates we receive a certificate that is valid for usually a",
    "start": "788000",
    "end": "793200"
  },
  {
    "text": "year or more and we can use this certificate to then authenticate as that person or computer",
    "start": "793200",
    "end": "798399"
  },
  {
    "text": "at a later point so advantages of this over traditional password extraction methods is we're not",
    "start": "798399",
    "end": "803920"
  },
  {
    "text": "touching lsas in any way whatsoever we don't need elevation for user contacts because unprivileged users can",
    "start": "803920",
    "end": "810560"
  },
  {
    "text": "enroll in certificates it's just you know mint as part of the system and because certificates are separate",
    "start": "810560",
    "end": "816079"
  },
  {
    "text": "credential material from passwords like lee mentioned certificates will still be valid even if someone resets their",
    "start": "816079",
    "end": "821360"
  },
  {
    "text": "password so if you gain access to someone's user account contacts for just a few minutes and there is an abcs",
    "start": "821360",
    "end": "826880"
  },
  {
    "text": "installation you can just actively enroll that person and assert and persist in their account for potentially years depending on how those",
    "start": "826880",
    "end": "832800"
  },
  {
    "text": "certificates are enabled something to keep in mind here is a certificate is almost just as good as a password in",
    "start": "832800",
    "end": "839120"
  },
  {
    "text": "terms of like authenticating to a.d so even though you don't have a password like as long as you can request a cert",
    "start": "839120",
    "end": "845839"
  },
  {
    "text": "which you know you can if you're authenticated to ad then you can still access ad as that user",
    "start": "845839",
    "end": "852959"
  },
  {
    "text": "so in order to execute some of these attacks we released a tool called certify which is a c-sharp tool and",
    "start": "852959",
    "end": "859040"
  },
  {
    "start": "853000",
    "end": "916000"
  },
  {
    "text": "release this with a blanket usa but certify allows you to enumerate",
    "start": "859040",
    "end": "864399"
  },
  {
    "text": "vulnerable templates as well as request templates and abuse some of these things with these alternate names and things like that but even without hitting the",
    "start": "864399",
    "end": "871199"
  },
  {
    "text": "sam stuff yet just for this kind of active you know user account persistence type approach you can just request any",
    "start": "871199",
    "end": "878000"
  },
  {
    "text": "of the templates that are available so find one of the commands will find vulnerable templates that might allow for authentication and here we're just",
    "start": "878000",
    "end": "884639"
  },
  {
    "text": "actively enrolling in our current account context farmjoy into the user template we get the private key and temp",
    "start": "884639",
    "end": "890720"
  },
  {
    "text": "private key and certificate back that we can then use to authenticate and get a tick or grinding ticket or use ldap s as",
    "start": "890720",
    "end": "896399"
  },
  {
    "text": "this user at a later point so pretty easy way to persist in someone's account context and no one's really been we'll",
    "start": "896399",
    "end": "902800"
  },
  {
    "text": "get into defenses and how to protect against it but up until we really started researching this and talking to",
    "start": "902800",
    "end": "907839"
  },
  {
    "text": "a lot of organizations we didn't know anybody that had proactive defenses of you know did you know if a compromise",
    "start": "907839",
    "end": "913839"
  },
  {
    "text": "user enrolled in a template or not so and this this is just kind of our",
    "start": "913839",
    "end": "919760"
  },
  {
    "start": "916000",
    "end": "1069000"
  },
  {
    "text": "first foray into some of the defenses around uh adcs tradecraft so the first uh the",
    "start": "919760",
    "end": "927040"
  },
  {
    "text": "first one is detecting non-lsas reading of dp api encrypted keys we're not going",
    "start": "927040",
    "end": "932560"
  },
  {
    "text": "to dive into all this but uh when you request a certificate from ad",
    "start": "932560",
    "end": "937920"
  },
  {
    "text": "normally that is stored in the windows certificate store and that's the windows certificate store",
    "start": "937920",
    "end": "943360"
  },
  {
    "text": "stores inc the certificates encrypted on on a machine using dp api dp api",
    "start": "943360",
    "end": "951839"
  },
  {
    "text": "and there's uh so what what you could do as a defender is monitor access to these",
    "start": "951839",
    "end": "957199"
  },
  {
    "text": "encrypted blobs and other dp api related files and so basically reading whenever",
    "start": "957199",
    "end": "963920"
  },
  {
    "text": "somebody's trying to access those dp api files typically only lsas is monitor is",
    "start": "963920",
    "end": "970399"
  },
  {
    "text": "reading those files and so what you can do is take a look at where those files are located which is typically in the",
    "start": "970399",
    "end": "976560"
  },
  {
    "text": "local or app data folders and it's under microsoft and then there's several folders crypto protect",
    "start": "976560",
    "end": "983040"
  },
  {
    "text": "fault credentials and those actually contain the certificate private keys",
    "start": "983040",
    "end": "988079"
  },
  {
    "text": "for the user accounts logged into that that machine and so normally like i said lsas is the one",
    "start": "988079",
    "end": "995040"
  },
  {
    "text": "that's re reading those files so you can detect dp api abuse by",
    "start": "995040",
    "end": "1001279"
  },
  {
    "text": "monitoring using sackles or you know most edr products will have a driver or you could use etw to",
    "start": "1001279",
    "end": "1008639"
  },
  {
    "text": "monitor access to these files and if it's not lsas uh there's potentially there could be something odd going on",
    "start": "1008639",
    "end": "1015360"
  },
  {
    "text": "um we're gonna these next two are just monitoring for specific events well you're gonna talk a little bit more about them but basically monitoring for",
    "start": "1015360",
    "end": "1022959"
  },
  {
    "text": "enrollment events and authentication events associated with",
    "start": "1022959",
    "end": "1028400"
  },
  {
    "text": "adcs tradecraft and we'll talk about that in just a sec another form of",
    "start": "1028400",
    "end": "1034319"
  },
  {
    "text": "detection that you could use is honey credentials so the idea around honey credentials is just uh",
    "start": "1034319",
    "end": "1041520"
  },
  {
    "text": "placing like certificate files on like a file share or somewhere on the file system",
    "start": "1041520",
    "end": "1048079"
  },
  {
    "text": "and then monitoring for when somebody reads that file or monitoring for when somebody attempts",
    "start": "1048079",
    "end": "1054640"
  },
  {
    "text": "to authenticate using that certificate so it's a it's like a dummy credential that's not actually valid or",
    "start": "1054640",
    "end": "1061600"
  },
  {
    "text": "even could be valid but it's used solely for detection purposes",
    "start": "1061600",
    "end": "1067360"
  },
  {
    "text": "and nothing else all right two more of the attacks we're going to talk about one is",
    "start": "1067360",
    "end": "1073520"
  },
  {
    "start": "1069000",
    "end": "1142000"
  },
  {
    "text": "a few of the escalation scenarios and we'll talk about the golden domain certificate stuff",
    "start": "1073520",
    "end": "1078640"
  },
  {
    "text": "this is one of the more common domain escalation scenarios we've seen so lee had mentioned those subject alternative",
    "start": "1078640",
    "end": "1084000"
  },
  {
    "text": "names but uh this kind of plays into these templates because if if we have a template that one allows",
    "start": "1084000",
    "end": "1090880"
  },
  {
    "text": "low privileged users to enroll in the templates like the domain users group it doesn't have any issuance",
    "start": "1090880",
    "end": "1096160"
  },
  {
    "text": "restrictions so issuance restrictions are requirements i won't dive into these but it's things like manager approval or",
    "start": "1096160",
    "end": "1101679"
  },
  {
    "text": "something called authorized signatures which requires the request to be pre-signed by another existing cert",
    "start": "1101679",
    "end": "1108320"
  },
  {
    "text": "number three we need to have one of those eku scenarios that allows domain authentication that we mentioned so pk",
    "start": "1108320",
    "end": "1113840"
  },
  {
    "text": "init or client authentication eku smart card logon the any purpose eku or no eku at all",
    "start": "1113840",
    "end": "1119600"
  },
  {
    "text": "and then most importantly if the enrollee supply subject flag is set on the template which is a",
    "start": "1119600",
    "end": "1126160"
  },
  {
    "text": "it's a bit mask in this ms pki certificate named flag so it's just one",
    "start": "1126160",
    "end": "1131679"
  },
  {
    "text": "little bit that's flipped in a particular property and a template if this is set it allows the person",
    "start": "1131679",
    "end": "1136720"
  },
  {
    "text": "enrolling in the template to supply an arbitrary subject so why does this matter",
    "start": "1136720",
    "end": "1143360"
  },
  {
    "text": "well like mentioned those sands are what is actually used to map a user's identity when they're",
    "start": "1143360",
    "end": "1149440"
  },
  {
    "text": "authenticating to active directory with a certificate so if an attacker is able to enroll in a certificate and",
    "start": "1149440",
    "end": "1156160"
  },
  {
    "text": "supply an arbitrary subject name so subject alternative name in a domain authentication capable",
    "start": "1156160",
    "end": "1163120"
  },
  {
    "text": "certificate then they can request a certificate and specify say a domain administrator or an enterprise admin or",
    "start": "1163120",
    "end": "1169520"
  },
  {
    "text": "somebody else and they get a certificate back that allows them to authenticate as that user so",
    "start": "1169520",
    "end": "1175120"
  },
  {
    "text": "translation one of a template of this type means an attacker can completely take over the",
    "start": "1175120",
    "end": "1180559"
  },
  {
    "text": "entire domain and forest and authenticate as any user or a computer this is bad obviously and it is way more",
    "start": "1180559",
    "end": "1187679"
  },
  {
    "text": "common than you think it would be they're the majority of environments that we've examined since starting this research in january had some type of",
    "start": "1187679",
    "end": "1194720"
  },
  {
    "text": "misconfiguration that allowed domain escalation not all of them but most of them i'd also say a lot of we've seen a lot",
    "start": "1194720",
    "end": "1200960"
  },
  {
    "start": "1199000",
    "end": "1224000"
  },
  {
    "text": "of vendor products that actually recommend setting these like configuring",
    "start": "1200960",
    "end": "1206000"
  },
  {
    "text": "certificate templates in this name so enabling that enrollee supply subject field and that has led to these",
    "start": "1206000",
    "end": "1212000"
  },
  {
    "text": "vulnerable vulnerable scenarios and we'll get into why we believe some of these misconfigurations have happened",
    "start": "1212000",
    "end": "1217600"
  },
  {
    "text": "but a big part of it is just people hadn't understood or don't understand active directory certificate services to",
    "start": "1217600",
    "end": "1223360"
  },
  {
    "text": "the degree that you all probably should we definitely didn't one of the other kind of cool this is some novel research",
    "start": "1223360",
    "end": "1229760"
  },
  {
    "start": "1224000",
    "end": "1357000"
  },
  {
    "text": "that lee really developed as part of this white paper is escalation 8 so ntlm relay to http",
    "start": "1229760",
    "end": "1235840"
  },
  {
    "text": "enrollment endpoints so active directory certificate services has these an optional feature called web",
    "start": "1235840",
    "end": "1242480"
  },
  {
    "text": "enrollment endpoints it's not installed by default but it's been installed in almost every",
    "start": "1242480",
    "end": "1247520"
  },
  {
    "text": "environment that we've looked at that has adcs but this allows things like linux systems or other you know other",
    "start": "1247520",
    "end": "1253520"
  },
  {
    "text": "third-party type systems to be able to enroll in a certificate without having to use some of the established like rpc",
    "start": "1253520",
    "end": "1259679"
  },
  {
    "text": "stuff that windows normally does normally on in adcs enrollment takes place using either rpc or dcom so that's",
    "start": "1259679",
    "end": "1268000"
  },
  {
    "text": "all using you know established windows protocols these additional server roles allow you to enroll using an http based",
    "start": "1268000",
    "end": "1276159"
  },
  {
    "text": "protocol instead and all of these endpoints are vulnerable to ntlm relay so this means that if there is adcs with",
    "start": "1276159",
    "end": "1285120"
  },
  {
    "text": "these enrollment endpoints installed and there's at least one",
    "start": "1285120",
    "end": "1290159"
  },
  {
    "text": "template that allows domain authentication that allows domain computers to enroll",
    "start": "1290159",
    "end": "1295760"
  },
  {
    "text": "in that template which there are defaults that allow that then you can use either the printer bug which we discovered years ago or",
    "start": "1295760",
    "end": "1302960"
  },
  {
    "text": "potentially petit patan we're still unclear if it's fully passed or not but one of these primitives rpc primitives",
    "start": "1302960",
    "end": "1308799"
  },
  {
    "text": "that allows for coerced authentication from an arbitrary system then you can say hey domain controller you know",
    "start": "1308799",
    "end": "1315520"
  },
  {
    "text": "connect to me and then you can relay that often you know that inbound communication authentication event to",
    "start": "1315520",
    "end": "1321440"
  },
  {
    "text": "the web enrollment endpoint and enroll as that computer in adcs so this allows",
    "start": "1321440",
    "end": "1327280"
  },
  {
    "text": "you to get a certificate as the domain controller machine account and then take over the entire domain",
    "start": "1327280",
    "end": "1332720"
  },
  {
    "text": "so this is bad this was reported to microsoft and they decided not to fix it um for you know we detailed this in the",
    "start": "1332720",
    "end": "1339280"
  },
  {
    "text": "white paper and um and in the associated blog post about our kind of",
    "start": "1339280",
    "end": "1344320"
  },
  {
    "text": "you know response to that or belief about that but these things aren't fixed and for anyone that has any of these",
    "start": "1344320",
    "end": "1349600"
  },
  {
    "text": "endpoints in their environment like you are vulnerable yeah and we heavily disagree with microsoft's assessment on",
    "start": "1349600",
    "end": "1356080"
  },
  {
    "text": "this like they acknowledge it's a vulnerability but they they say it's up to the customer to basically configure it so",
    "start": "1356080",
    "end": "1362720"
  },
  {
    "start": "1357000",
    "end": "1494000"
  },
  {
    "text": "it's not vulnerable even though out of the box it comes vulnerable all right so how do we protect against",
    "start": "1362720",
    "end": "1367919"
  },
  {
    "text": "some of these escalation scenarios that we've described and that are presented in the white paper and how can we like",
    "start": "1367919",
    "end": "1373919"
  },
  {
    "text": "help with detection well first of all auditing the ca and the template",
    "start": "1373919",
    "end": "1380480"
  },
  {
    "text": "rights is very important so enrollment rights can be specified like we'll set at the template level so each",
    "start": "1380480",
    "end": "1388640"
  },
  {
    "text": "each certificate template ad object has a has a security descriptor and so we",
    "start": "1388640",
    "end": "1393919"
  },
  {
    "text": "need to audit those permissions and make sure that they're not overly permissive that not just anybody can request a",
    "start": "1393919",
    "end": "1399679"
  },
  {
    "text": "certificate with that has like the enrollee supply subject field enabled similarly looking at the ca level so",
    "start": "1399679",
    "end": "1406159"
  },
  {
    "text": "rather than on an individual template level enrollment rights can be defined at the ca",
    "start": "1406159",
    "end": "1412159"
  },
  {
    "text": "along with other rights so like manager approval rights or like uh being able to like export private",
    "start": "1412159",
    "end": "1418799"
  },
  {
    "text": "keys and things like that that's identified at the ca level so we need to audit those uh the security descriptor",
    "start": "1418799",
    "end": "1425039"
  },
  {
    "text": "there to make sure that there's not uh you know too many people with those rights um in addition to",
    "start": "1425039",
    "end": "1432159"
  },
  {
    "text": "to monitoring the security descriptors uh in regards to the http endpoint our recommendation is if you're not using it",
    "start": "1432159",
    "end": "1439039"
  },
  {
    "text": "just remove it like there's no reason to have additional attack surface if you don't need that feature",
    "start": "1439039",
    "end": "1445039"
  },
  {
    "text": "otherwise you need to make sure that all of the http endpoints have https enabled",
    "start": "1445039",
    "end": "1451679"
  },
  {
    "text": "and that they have they either remove ntlm authentication",
    "start": "1451679",
    "end": "1457120"
  },
  {
    "text": "either from iis or at the like os layer by by blocking in tlm",
    "start": "1457120",
    "end": "1462720"
  },
  {
    "text": "authentication or um hardening ntlm uh",
    "start": "1462720",
    "end": "1468240"
  },
  {
    "text": "by enabling like extended pro protection for authentication so that you can't actually relay the",
    "start": "1468240",
    "end": "1474880"
  },
  {
    "text": "ntlm off but again like this is not on by default and so you need to make sure that if you are using adcs which most",
    "start": "1474880",
    "end": "1482480"
  },
  {
    "text": "large organizations are and in our experience most do have the http enrollment endpoint so you need to make",
    "start": "1482480",
    "end": "1488640"
  },
  {
    "text": "sure that https is enabled and those protections are those ntlm protections are in place",
    "start": "1488640",
    "end": "1494960"
  },
  {
    "start": "1494000",
    "end": "1549000"
  },
  {
    "text": "so how can you actually do that we wrote a tool called pspki audit it's um based on pspki from",
    "start": "1494960",
    "end": "1502640"
  },
  {
    "text": "pki solutions and it's a powershell script that you can run and it'll analyze and try and",
    "start": "1502640",
    "end": "1508559"
  },
  {
    "text": "discover all of the escalation scenarios that we describe in our paper including the ones that we just described",
    "start": "1508559",
    "end": "1514559"
  },
  {
    "text": "here and a lot more so here we're running it against a ca and here you can",
    "start": "1514559",
    "end": "1519919"
  },
  {
    "text": "see that we found a certificate with that enrollee supply subject field specified",
    "start": "1519919",
    "end": "1526720"
  },
  {
    "text": "and it tells you the exact misconfiguration so in our paper we identified each uh escalation primitive",
    "start": "1526720",
    "end": "1534240"
  },
  {
    "text": "with a number so ask one is what we we just talked about esk8 or escalation",
    "start": "1534240",
    "end": "1539600"
  },
  {
    "text": "eight is the http based one so it really makes it really easy to",
    "start": "1539600",
    "end": "1544720"
  },
  {
    "text": "identify these misconfigurations in your environment um",
    "start": "1544720",
    "end": "1549919"
  },
  {
    "text": "uh in addition to that you can so that's in terms of auditing your current infrastructure",
    "start": "1550480",
    "end": "1556559"
  },
  {
    "text": "if you want to actually try and monitor for malicious enrollment or certificate",
    "start": "1556559",
    "end": "1561600"
  },
  {
    "text": "use there are some events i kind of alluded to these previously but there's a 4886 event in 48.87",
    "start": "1561600",
    "end": "1570000"
  },
  {
    "text": "when a user requests a certificate uh basically stating hey adcs i would like",
    "start": "1570000",
    "end": "1575440"
  },
  {
    "text": "a certificate for domain authentication this event gets generated the 4886",
    "start": "1575440",
    "end": "1581600"
  },
  {
    "text": "and then when you actually use that certificate for authentication authentication there's a kerberos event",
    "start": "1581600",
    "end": "1588400"
  },
  {
    "text": "so when you log on using kerberos there's the 4768 which is requesting a",
    "start": "1588400",
    "end": "1594640"
  },
  {
    "text": "tgt when you when you request a tgt with a",
    "start": "1594640",
    "end": "1599679"
  },
  {
    "text": "certificate um it uses a process called pk init and",
    "start": "1599679",
    "end": "1605440"
  },
  {
    "text": "there's some fields related to that and that's what you're seeing on the right there and it's stating the",
    "start": "1605440",
    "end": "1611679"
  },
  {
    "text": "basically some information about the certificate that you're using during authentication so it has like the",
    "start": "1611679",
    "end": "1616960"
  },
  {
    "text": "thumbprint and the the serial number there so you can use that to identify who's",
    "start": "1616960",
    "end": "1622159"
  },
  {
    "start": "1621000",
    "end": "1838000"
  },
  {
    "text": "authenticating with certificates you can also another thing to keep in mind is to",
    "start": "1622159",
    "end": "1627840"
  },
  {
    "text": "audit the nt auth certificates uh object because remember any ca that's in the nt",
    "start": "1627840",
    "end": "1635919"
  },
  {
    "text": "auth certificates object is trusted for authentication so in theory you know an attacker could add",
    "start": "1635919",
    "end": "1642559"
  },
  {
    "text": "a ca to this object and a malicious ca to this object and",
    "start": "1642559",
    "end": "1648399"
  },
  {
    "text": "then forge or add or create new certificates that are used for that can be used for",
    "start": "1648399",
    "end": "1654480"
  },
  {
    "text": "authentication you could also maybe have a linux ca that's separate from your adcs infrastructure that's been added in",
    "start": "1654480",
    "end": "1660960"
  },
  {
    "text": "here or third-party cas um you know managed by a different company so you",
    "start": "1660960",
    "end": "1666080"
  },
  {
    "text": "can do that using you know our tool certify or or you can just inside of adcs there's a",
    "start": "1666080",
    "end": "1673840"
  },
  {
    "text": "tool called pki view which you can use certutil.exe has a function to list this",
    "start": "1673840",
    "end": "1679360"
  },
  {
    "text": "as well and then you can use sackles and event id 4662",
    "start": "1679360",
    "end": "1685279"
  },
  {
    "text": "to modify anytime that object changes uh a similar because that is an ad",
    "start": "1685279",
    "end": "1691200"
  },
  {
    "text": "object and certificate templates are 80 objects another thing to be aware of is",
    "start": "1691200",
    "end": "1697440"
  },
  {
    "text": "anytime these 80 objects are being modified and you can do that like i said using those sackle events",
    "start": "1697440",
    "end": "1705919"
  },
  {
    "text": "in the case of certificate templates when those are modified the next time that template is used adcs will check",
    "start": "1706000",
    "end": "1714799"
  },
  {
    "text": "and see if it's been updated and if it's been updated so let's say i an attacker update it so that enrollee supply",
    "start": "1714799",
    "end": "1721840"
  },
  {
    "text": "subject is enabled so maybe i have edit rights over that template object i enable that field the next time that",
    "start": "1721840",
    "end": "1728320"
  },
  {
    "text": "certificate template is used adcs will issue a",
    "start": "1728320",
    "end": "1733960"
  },
  {
    "text": "48-99 event so that's basically the template has changed and adcs is updating its its current",
    "start": "1733960",
    "end": "1740960"
  },
  {
    "text": "state associated with that similarly you can use sackles to modify",
    "start": "1740960",
    "end": "1746559"
  },
  {
    "text": "or monitor those 80 objects uh in the case of the http endpoints",
    "start": "1746559",
    "end": "1752399"
  },
  {
    "text": "that are vulnerable to ntlm relay first of all like to get an understanding if people are actually",
    "start": "1752399",
    "end": "1757520"
  },
  {
    "text": "using those endpoints there are iis logs so that those endpoints are served using",
    "start": "1757520",
    "end": "1762960"
  },
  {
    "text": "iis so you can look in the web logs there that's also useful from an incident response perspective because",
    "start": "1762960",
    "end": "1769039"
  },
  {
    "text": "you can see it contains a lot of valuable context about you know what endpoints the attacker is using um as",
    "start": "1769039",
    "end": "1775520"
  },
  {
    "text": "well as the user being used in addition to the iis logs there's also",
    "start": "1775520",
    "end": "1781760"
  },
  {
    "text": "that the adcs server has a database associated with all of the certificates",
    "start": "1781760",
    "end": "1787039"
  },
  {
    "text": "that have been issued or even requested and inside of that database there's a a table that contains",
    "start": "1787039",
    "end": "1795120"
  },
  {
    "text": "all of the info and a lot of additional context about certificate requests and",
    "start": "1795120",
    "end": "1800880"
  },
  {
    "text": "some of that context includes things like the process on the endpoint that was used to request",
    "start": "1800880",
    "end": "1807760"
  },
  {
    "text": "a certificate um or the in the case of the http endpoints the user agent that was",
    "start": "1807760",
    "end": "1814880"
  },
  {
    "text": "specified during authentication so if if an attacker like take for example there's uh",
    "start": "1814880",
    "end": "1821440"
  },
  {
    "text": "in packet now has some functionality to abuse the http endpoint",
    "start": "1821440",
    "end": "1826480"
  },
  {
    "text": "the you can take a look at the user agent string in there and identify oh this is like from python it's python's",
    "start": "1826480",
    "end": "1833039"
  },
  {
    "text": "default user agent and you can identify these kind of abuses so it's super handy",
    "start": "1833039",
    "end": "1839039"
  },
  {
    "start": "1838000",
    "end": "1959000"
  },
  {
    "text": "all right so the last attack is golden certificates so",
    "start": "1839039",
    "end": "1844320"
  },
  {
    "text": "kind of tldr of this is that if the private key for a certificate authority certificate is not protected by hardware",
    "start": "1844320",
    "end": "1850399"
  },
  {
    "text": "so not a tpm or hsm dp api is used we actually talked about you know anything",
    "start": "1850399",
    "end": "1855840"
  },
  {
    "text": "protected by dp api as an attacker we can steal we can recover so if a ca is in ntos certificates and",
    "start": "1855840",
    "end": "1863360"
  },
  {
    "text": "attackers can steal the private key associated with that ca certificate then you can forge",
    "start": "1863360",
    "end": "1869600"
  },
  {
    "text": "authentication certificates as anybody in the domain this lets you persist in the domain as anybody for as long as the",
    "start": "1869600",
    "end": "1876159"
  },
  {
    "text": "ca certificate is still valid and these certs actually can't even be revoked because they're never actually issued",
    "start": "1876159",
    "end": "1883600"
  },
  {
    "text": "some of the defenses for this though is you could detect the non-lsat reading of the dp api encrypted keys like we'd",
    "start": "1883600",
    "end": "1889360"
  },
  {
    "text": "already mentioned you can actually monitor for ca backup uh started and completion events which are these for",
    "start": "1889360",
    "end": "1895679"
  },
  {
    "text": "48.76 and 4877. this is only somebody backs up the ca through the pki um like",
    "start": "1895679",
    "end": "1902640"
  },
  {
    "text": "like plugins and stuff like that if you're stealing dp api private keys for the ca independent of this it's",
    "start": "1902640",
    "end": "1909120"
  },
  {
    "text": "much harder to detect uh there's definitely some pretty big gaps which we'll touch on briefly at the end as far as this kind of element",
    "start": "1909120",
    "end": "1915679"
  },
  {
    "text": "but after this research was put out there was a really cool kind of approach",
    "start": "1915679",
    "end": "1920720"
  },
  {
    "text": "that was talked about from fabian bader who put out this great post the link there is at the bottom but he talked about modifying the ocsp",
    "start": "1920720",
    "end": "1928399"
  },
  {
    "text": "the online certificate status protocol server to basically track all the the serial",
    "start": "1928399",
    "end": "1934000"
  },
  {
    "text": "numbers of all the legitimately issued certificates and then have a different response but normally the response is",
    "start": "1934000",
    "end": "1940240"
  },
  {
    "text": "just valid or revoked but this introduces a new option called unknown which basically allows you to deny",
    "start": "1940240",
    "end": "1946559"
  },
  {
    "text": "authentication with any certificate that was not legitimately issued there's obviously ways around this to you could",
    "start": "1946559",
    "end": "1951919"
  },
  {
    "text": "forge a certificate as you know our forge of serial number for assert that was already issued but it's a really",
    "start": "1951919",
    "end": "1957279"
  },
  {
    "text": "really good defense when it comes to golden uh certificates",
    "start": "1957279",
    "end": "1964080"
  },
  {
    "start": "1959000",
    "end": "2084000"
  },
  {
    "text": "there are some you know hunting techniques that you could use to potentially identify forge certificates so",
    "start": "1964080",
    "end": "1971039"
  },
  {
    "text": "uh like the tool that we released to actually exploit this is called forge cert and it does the minimum necessary",
    "start": "1971039",
    "end": "1977360"
  },
  {
    "text": "in order to actually forge a certificate when you request or when you",
    "start": "1977360",
    "end": "1983600"
  },
  {
    "text": "when adcs issues a certificate to a user inside of that certificate there's a lot",
    "start": "1983600",
    "end": "1989519"
  },
  {
    "text": "of fields that are specified and so what you can do from a hunt",
    "start": "1989519",
    "end": "1995039"
  },
  {
    "text": "perspective is take a look at issued or take a look at certificates being used",
    "start": "1995039",
    "end": "2000320"
  },
  {
    "text": "and identify abnormal fields or missing fields that are in those certificates",
    "start": "2000320",
    "end": "2007200"
  },
  {
    "text": "one technique that you could use that that is kind of available out of the box is taking a look at",
    "start": "2007200",
    "end": "2013440"
  },
  {
    "text": "a certificate serial serial numbers or the certificate thumb prints so serial",
    "start": "2013440",
    "end": "2019200"
  },
  {
    "text": "numbers are generated on a ca on a there's a kind of a predefined algorithm",
    "start": "2019200",
    "end": "2025120"
  },
  {
    "text": "and it's unique per ca and so you can take a look at this pki solutions article for the the algorithm that's",
    "start": "2025120",
    "end": "2031679"
  },
  {
    "text": "actually used but basically if a an attacker forges a certificate and",
    "start": "2031679",
    "end": "2037039"
  },
  {
    "text": "doesn't follow that uh algorithm for generating this the serial number uh you",
    "start": "2037039",
    "end": "2042399"
  },
  {
    "text": "know something abnormal might be at play and you can see those serial numbers in the kerberos authentication logs there",
    "start": "2042399",
    "end": "2049358"
  },
  {
    "text": "so this is giving you some good context like out of the box you can like kind of take a look at those abnormal serial",
    "start": "2049359",
    "end": "2055440"
  },
  {
    "text": "numbers the same thing could be said of thumb prints you could take a look at the ca database and look at all of the",
    "start": "2055440",
    "end": "2062079"
  },
  {
    "text": "issued certificates um and if an attacker forges a certificate",
    "start": "2062079",
    "end": "2068878"
  },
  {
    "text": "um it's not the certificate that's being used isn't going to be in the ca database or it potentially won't be in",
    "start": "2068879",
    "end": "2075358"
  },
  {
    "text": "the ca database so if there's a diff between those two you know that certificate wasn't actually issued by",
    "start": "2075359",
    "end": "2080878"
  },
  {
    "text": "the ca and you could generate an alert",
    "start": "2080879",
    "end": "2085118"
  },
  {
    "start": "2084000",
    "end": "2144000"
  },
  {
    "text": "all right some high-level architecture guidance um definitely make sure that you're treating adcs servers as tier zero uh if",
    "start": "2086240",
    "end": "2095040"
  },
  {
    "text": "you if an attacker can compromise them they can compromise a.d it's like game over your your network is compromised so",
    "start": "2095040",
    "end": "2101599"
  },
  {
    "text": "they are tier zero um if when you're creating these servers",
    "start": "2101599",
    "end": "2106640"
  },
  {
    "text": "hardware protect the ca keys so preferably don't use uh",
    "start": "2106640",
    "end": "2112000"
  },
  {
    "text": "like dp api to store those instead using hsm which is hardware protected",
    "start": "2112000",
    "end": "2117680"
  },
  {
    "text": "in addition well and on workstations and stuff you can use like a tpm to store those",
    "start": "2117680",
    "end": "2122960"
  },
  {
    "text": "private keys in addition those root cas when you when you look at pki architecture like setup",
    "start": "2122960",
    "end": "2130320"
  },
  {
    "text": "they always recommend storing those root cas offline if possible and then having issuing cas",
    "start": "2130320",
    "end": "2137359"
  },
  {
    "text": "online that are actually delivering you know certificates to",
    "start": "2137359",
    "end": "2142880"
  },
  {
    "text": "users we've got a few minutes left so some notes just kind of on response",
    "start": "2142880",
    "end": "2148960"
  },
  {
    "start": "2144000",
    "end": "2418000"
  },
  {
    "text": "we talked about all the preventative side and this is just more kind of on the incident response side that if you are compromised in your environment",
    "start": "2148960",
    "end": "2155280"
  },
  {
    "text": "it's important to know like if adcs has issued a specific user a certificate someone that might have been compromised",
    "start": "2155280",
    "end": "2161760"
  },
  {
    "text": "or which users or machines requested specific templates or if an alternative san was specified in a request these are",
    "start": "2161760",
    "end": "2169119"
  },
  {
    "text": "all the different types of ways that people tend to abuse some of these things we talked about and it's important to know how do you react to",
    "start": "2169119",
    "end": "2174320"
  },
  {
    "text": "this because if you have adcs you need to be able to answer these questions unfortunately up until this point it's",
    "start": "2174320",
    "end": "2180160"
  },
  {
    "text": "been pretty difficult to do that the pspki audit toolset wrapping some of the pki solution stuff",
    "start": "2180160",
    "end": "2186640"
  },
  {
    "text": "definitely makes this more of a possibility and we'll show some screenshots here in a second but it's also important to streamline the",
    "start": "2186640",
    "end": "2192480"
  },
  {
    "text": "revocation process you can do this with the gui or through pspki and also it's",
    "start": "2192480",
    "end": "2197520"
  },
  {
    "text": "good to kind of tabletop and make plans for how to respond to the compromise of a subordinate and or a root certificate",
    "start": "2197520",
    "end": "2203839"
  },
  {
    "text": "authority which is really really bad it's hard to recover from but it's better to plan ahead and figure out what",
    "start": "2203839",
    "end": "2208880"
  },
  {
    "text": "you're going to do instead of having to react after the fact just a few of these things and uh pspki",
    "start": "2208880",
    "end": "2215119"
  },
  {
    "text": "audit this is the get cert request function uh has a flag that says has san so this is",
    "start": "2215119",
    "end": "2221440"
  },
  {
    "text": "if a request actually specified the subject alternative name this is actually parsing everything out of that",
    "start": "2221440",
    "end": "2227760"
  },
  {
    "text": "adcs database and you see it says request name harmjoy subject alternative name was administrator so this is",
    "start": "2227760",
    "end": "2233359"
  },
  {
    "text": "potentially an abuse then we show at the bottom the get certificate authority revoked certificate stuff is how to",
    "start": "2233359",
    "end": "2238800"
  },
  {
    "text": "revoke this certificate using pspki similarly if a user was compromised we",
    "start": "2238800",
    "end": "2245520"
  },
  {
    "text": "can specify or sorry if a template was vulnerable we can enumerate all the requests for a particular template and",
    "start": "2245520",
    "end": "2251440"
  },
  {
    "text": "revoke things as appropriate as well and finally we can also say if a user or computer was compromised we can check",
    "start": "2251440",
    "end": "2257920"
  },
  {
    "text": "all the requests that were made from that particular person so we see you know request our name being harm joy in",
    "start": "2257920",
    "end": "2263040"
  },
  {
    "text": "this case this this is a big gap i feel like a lot of people don't pay attention to is if a workstation gets compromised",
    "start": "2263040",
    "end": "2270560"
  },
  {
    "text": "do you know if they've actually used adcs so add that into your incident response process like making sure that",
    "start": "2270560",
    "end": "2277359"
  },
  {
    "text": "an attacker has not requested a certificate for that user two minutes yeah all right so defensive gaps um",
    "start": "2277359",
    "end": "2284640"
  },
  {
    "text": "i i think just a lot of the reason why people don't have had have misconfigurations in their environment",
    "start": "2284640",
    "end": "2291040"
  },
  {
    "text": "is they just don't have a deep knowledge of adcs it's a big complicated thing pki is a complicated topic um in our eyes",
    "start": "2291040",
    "end": "2298480"
  },
  {
    "text": "it's just kind of like the boilerplate the the boiler the that's been sitting in the basement for the last 20 years it's",
    "start": "2298480",
    "end": "2305040"
  },
  {
    "text": "been here since 2000 and just over time uh it's been misconfigured so and it's",
    "start": "2305040",
    "end": "2310480"
  },
  {
    "text": "very easy to misconfigure um and like i said a lot of third-party products actually",
    "start": "2310480",
    "end": "2315839"
  },
  {
    "text": "suggest misconfiguring it making it vulnerable so this makes it even worse for it administrators uh since they don't know",
    "start": "2315839",
    "end": "2322800"
  },
  {
    "text": "what they're just following instructions the event logs that we've worked with are kind of lacking in our experience so",
    "start": "2322800",
    "end": "2330400"
  },
  {
    "text": "leaves a lot to be desired but with additional tooling they can't actually be leveraged",
    "start": "2330400",
    "end": "2335920"
  },
  {
    "text": "and you know in general i just think people haven't been paying attention to adcs so we hope that this research helps",
    "start": "2335920",
    "end": "2342480"
  },
  {
    "text": "and kind of gives gives people a way to dive into this these attacks",
    "start": "2342480",
    "end": "2348000"
  },
  {
    "text": "so in summary active directory certificate services is definitely dangerous if you don't handle it properly and you don't really know what",
    "start": "2348000",
    "end": "2353520"
  },
  {
    "text": "you're doing attack tooling and knowledge is now out there attackers are using this there are",
    "start": "2353520",
    "end": "2359359"
  },
  {
    "text": "additional tools that are being used to like weaponize some of the ntlm stuff for example from defenses definitely develop an",
    "start": "2359359",
    "end": "2366240"
  },
  {
    "text": "incident response plan audit all these relevant event logs that we talked about triage shirts with pspki audit um check",
    "start": "2366240",
    "end": "2372640"
  },
  {
    "text": "out the white paper the bitly link if you just search certified pre-owned you know spectre ops is host on our website",
    "start": "2372640",
    "end": "2378079"
  },
  {
    "text": "gives complete details and guidance for all that kind of stuff and finally just some acknowledgements there's a ton of previous work on this",
    "start": "2378079",
    "end": "2384480"
  },
  {
    "text": "see the paper for complete details um a special thanks to siri coburn and charlie clark for some rubies editions",
    "start": "2384480",
    "end": "2390079"
  },
  {
    "text": "and special thanks to mark amash for collaborating with us on on parts of this work",
    "start": "2390079",
    "end": "2395280"
  },
  {
    "text": "so that's it thank you for coming out i think we're just about out of time so if you do have any questions you know",
    "start": "2395280",
    "end": "2400320"
  },
  {
    "text": "please just grab us in the hallway we're happy to chat about any of this stuff but thank you very much thanks everyone",
    "start": "2400320",
    "end": "2407800"
  },
  {
    "text": "[Music]",
    "start": "2411790",
    "end": "2414929"
  },
  {
    "text": "you",
    "start": "2417920",
    "end": "2420000"
  }
]