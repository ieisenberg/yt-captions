[
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14160"
  },
  {
    "text": "welcome everyone to our talk about 20 plus ways to bypass your mac os privacy",
    "start": "14160",
    "end": "19439"
  },
  {
    "text": "mechanism uh my name is chaba fitzel i'm currently working at the offensive",
    "start": "19439",
    "end": "25519"
  },
  {
    "text": "security and i'm the author of the upcoming mac os control bypass is training",
    "start": "25519",
    "end": "31199"
  },
  {
    "text": "uh i have an open source app called sheet which",
    "start": "31199",
    "end": "36239"
  },
  {
    "text": "can be used for excellent protection on mac os i used to be",
    "start": "36239",
    "end": "41280"
  },
  {
    "text": "a red and blue dimmer for a very long time before that i'm married have two kids and i love to spend my time",
    "start": "41280",
    "end": "48960"
  },
  {
    "text": "in the mountains over to you yeah yeah so my name is voice",
    "start": "48960",
    "end": "55680"
  },
  {
    "text": "i'm a seniority security consultant currently employed at securing i'm mostly focused on ios and mac os",
    "start": "55680",
    "end": "63039"
  },
  {
    "text": "application security in my free time i also run a blog about apple security so",
    "start": "63039",
    "end": "69119"
  },
  {
    "text": "you can see the link on the slide you may also know me from the ios security suit that i'm a creator of it's",
    "start": "69119",
    "end": "76320"
  },
  {
    "text": "a open source swift library that helps you to make sure if you run your application on a secure ios device and",
    "start": "76320",
    "end": "85200"
  },
  {
    "text": "recently i also started a new service that is macros environment security testing",
    "start": "85200",
    "end": "91010"
  },
  {
    "text": "[Music] but coming back to the presentation",
    "start": "91010",
    "end": "96400"
  },
  {
    "text": "so we both of chaba made uh joint research about uh tcc and",
    "start": "96400",
    "end": "102399"
  },
  {
    "text": "the security mechanisms present on macas and uh we identified a lot of different",
    "start": "102399",
    "end": "109280"
  },
  {
    "text": "ways to bypass the tcc uh as this is only a 40 minutes talk",
    "start": "109280",
    "end": "115280"
  },
  {
    "text": "we don't have to talk about every vulnerability we have identified uh so",
    "start": "115280",
    "end": "120960"
  },
  {
    "text": "this presentation will focus only on selected vulnerabilities that i hope and",
    "start": "120960",
    "end": "126079"
  },
  {
    "text": "show also that you enjoy uh",
    "start": "126079",
    "end": "131280"
  },
  {
    "text": "so uh the first mechanism we want to discuss uh in order to",
    "start": "131280",
    "end": "137040"
  },
  {
    "text": "uh show you how the tcc works is system integrity protection it's based on",
    "start": "137040",
    "end": "142879"
  },
  {
    "text": "sandbox kernel extension and restricts access to many directories on macos",
    "start": "142879",
    "end": "150400"
  },
  {
    "text": "it also as it's called system integrity protection it protects the integrity so it will also block you from injecting",
    "start": "150400",
    "end": "157200"
  },
  {
    "text": "your brain malicious code to uh system services that are of course",
    "start": "157200",
    "end": "164000"
  },
  {
    "text": "signed directly by apple's certificate and system integrity protection is also",
    "start": "164000",
    "end": "169599"
  },
  {
    "text": "known as ruthless because on mac os if you have root you are not a god",
    "start": "169599",
    "end": "175519"
  },
  {
    "text": "you still cannot do everything you want so system integrity protection will prevent you even as a route to access",
    "start": "175519",
    "end": "181599"
  },
  {
    "text": "some directories uh to write files to specific directories or to uh attach for example debuggers to",
    "start": "181599",
    "end": "188560"
  },
  {
    "text": "apple's processes uh but what does the tcc stand for",
    "start": "188560",
    "end": "194800"
  },
  {
    "text": "tcc is transparency constant and control framework",
    "start": "194800",
    "end": "201840"
  },
  {
    "text": "it makes sure that you you have",
    "start": "202080",
    "end": "207680"
  },
  {
    "text": "permissions to some privacy privacy resources so for example a must",
    "start": "207680",
    "end": "214400"
  },
  {
    "text": "application cannot access your desktop or for example your address book",
    "start": "214400",
    "end": "220400"
  },
  {
    "text": "let's take a look on an example on the slide so i've opened the fresh terminal",
    "start": "220400",
    "end": "226000"
  },
  {
    "text": "and terminal of course is an application in the context of macros and i tried to list the address book and as you can see",
    "start": "226000",
    "end": "233680"
  },
  {
    "text": "maca has prompted me uh with the with that prompt if the terminal would",
    "start": "233680",
    "end": "239439"
  },
  {
    "text": "like to access my contacts so i can grant the permission or or not",
    "start": "239439",
    "end": "247360"
  },
  {
    "text": "if you are a mac os user you are probably familiar with this privacy tab and you know this is the",
    "start": "247360",
    "end": "254720"
  },
  {
    "text": "core of the tcc from the user's perspective uh you grant for example permission to camera to specific",
    "start": "254720",
    "end": "260400"
  },
  {
    "text": "applications or for example in the automation uh subtop uh you can",
    "start": "260400",
    "end": "266400"
  },
  {
    "text": "give and give access to one application that will be able to control another application",
    "start": "266400",
    "end": "273120"
  },
  {
    "text": "so yeah this is briefly about what tcc is but from the",
    "start": "273120",
    "end": "278160"
  },
  {
    "text": "reverse engineer perspective uh so from our security perspective uh tcc has a",
    "start": "278160",
    "end": "287199"
  },
  {
    "text": "sqlite free databases uh this databases contain the",
    "start": "287199",
    "end": "292479"
  },
  {
    "text": "rules the permission you uh had granted to the applications and you have one",
    "start": "292479",
    "end": "298160"
  },
  {
    "text": "global uh protected by the system integrity protection database uh placed",
    "start": "298160",
    "end": "304000"
  },
  {
    "text": "in the library application support com apple tcc directory and uh for each",
    "start": "304000",
    "end": "309759"
  },
  {
    "text": "every user uh you have another tcc database in the uh home",
    "start": "309759",
    "end": "315520"
  },
  {
    "text": "directory slash labor application support com apple tcc director uh the first one the first database the",
    "start": "315520",
    "end": "322479"
  },
  {
    "text": "global uh contains the permissions to for example full disk access",
    "start": "322479",
    "end": "329680"
  },
  {
    "text": "but that the second one the paper each user database will for example control your camera and the user specific",
    "start": "329680",
    "end": "336960"
  },
  {
    "text": "directories like desktop or uh or contacts",
    "start": "336960",
    "end": "343600"
  },
  {
    "text": "to show you that's indeed a sqli free database i connected via sqli3",
    "start": "343600",
    "end": "350160"
  },
  {
    "text": "binary and uh selected a few columns like service client value and code sign",
    "start": "350160",
    "end": "356319"
  },
  {
    "text": "requirement uh the first one uh contains the the permissions that we had granted",
    "start": "356319",
    "end": "362720"
  },
  {
    "text": "to the applications uh client contains the in this case bundle identifiers of the",
    "start": "362720",
    "end": "369199"
  },
  {
    "text": "applications that have the permissions granted um it they may be also passed to",
    "start": "369199",
    "end": "375520"
  },
  {
    "text": "these applications uh the out value contains the current out authorization value so if the permission",
    "start": "375520",
    "end": "383199"
  },
  {
    "text": "has been granted or not and uh the cs reg stands for code signing requirements",
    "start": "383199",
    "end": "389520"
  },
  {
    "text": "and as you can see there are quotation marks and uh this appears because that",
    "start": "389520",
    "end": "395280"
  },
  {
    "text": "the code signing requirements are not printable so i took one code signing requirement",
    "start": "395280",
    "end": "401520"
  },
  {
    "text": "encoded it in base64 and written and i have written such a code to show",
    "start": "401520",
    "end": "408160"
  },
  {
    "text": "you how to decode this code site requirement so",
    "start": "408160",
    "end": "413440"
  },
  {
    "text": "on the screenshot below uh you can see that you can",
    "start": "413440",
    "end": "418479"
  },
  {
    "text": "create a human readable form from this non-printable code signing requirement",
    "start": "418479",
    "end": "425759"
  },
  {
    "text": "okay so now i'm passing the microphone back to java",
    "start": "425759",
    "end": "431680"
  },
  {
    "text": "okay so the next big pillar of tcc is all around user intent",
    "start": "431680",
    "end": "439280"
  },
  {
    "text": "this comes into play when the user is showing a clear intention",
    "start": "439280",
    "end": "445039"
  },
  {
    "text": "uh that he or she wants to access a particular file",
    "start": "445039",
    "end": "450400"
  },
  {
    "text": "this user intent is controlled by an extended attribute called the mac com pepper macro",
    "start": "450400",
    "end": "457520"
  },
  {
    "text": "and it's entirely managed by by the sandbox and also protected by system integrity protection so user cannot just",
    "start": "457520",
    "end": "465520"
  },
  {
    "text": "add or delete these attributes so basically what happens uh what is shown",
    "start": "465520",
    "end": "472720"
  },
  {
    "text": "here on the screen is let's say terminal doesn't have access to the documents folder so the user",
    "start": "472720",
    "end": "479039"
  },
  {
    "text": "cannot print out the password takes the stored in this directory but if the user",
    "start": "479039",
    "end": "486720"
  },
  {
    "text": "drag and drops the password txt from finder to terminal the user shows a clear intended",
    "start": "486720",
    "end": "494240"
  },
  {
    "text": "um he wants to access it so what happens at that point mac os will grant access",
    "start": "494240",
    "end": "500960"
  },
  {
    "text": "to password txt for terminal and then terminal can print it out",
    "start": "500960",
    "end": "508800"
  },
  {
    "text": "so the way it's managed again is through an extended attribute which is stored with the file",
    "start": "509120",
    "end": "516240"
  },
  {
    "text": "it's called com apple macro and basically it contains a list of uu ids",
    "start": "516240",
    "end": "522719"
  },
  {
    "text": "with a particular header the header is typically [Music]",
    "start": "522719",
    "end": "527920"
  },
  {
    "text": "number three and it's uh two byte long so the second one is just uh",
    "start": "527920",
    "end": "533120"
  },
  {
    "text": "zero here we can see that the password.txt has two uuids associated uh",
    "start": "533120",
    "end": "540240"
  },
  {
    "text": "one is for terminal and the other one is text edit which i use to create",
    "start": "540240",
    "end": "545360"
  },
  {
    "text": "this file now it's very important that this uuid is unique",
    "start": "545360",
    "end": "550959"
  },
  {
    "text": "uh to the actual device so if we transfer this file to another mac uh device",
    "start": "550959",
    "end": "558880"
  },
  {
    "text": "and we somehow managed to maintain this extended attribute um",
    "start": "558880",
    "end": "564399"
  },
  {
    "text": "on that device this attribute will not grant any access to in this case to terminal",
    "start": "564399",
    "end": "571600"
  },
  {
    "text": "and text edit all right so the first group of",
    "start": "571600",
    "end": "577560"
  },
  {
    "text": "vulnerabilities that we wanted to show you are tcc by buses via",
    "start": "577560",
    "end": "582959"
  },
  {
    "text": "plugins so the problem with tcc is that it validates the entitlements",
    "start": "582959",
    "end": "589279"
  },
  {
    "text": "held by the main executable so if you have applications or sub-applications",
    "start": "589279",
    "end": "594959"
  },
  {
    "text": "that are executed that are executing their code in the context of the main applications",
    "start": "594959",
    "end": "601519"
  },
  {
    "text": "they will inherit the private tcc entitlements or the",
    "start": "601519",
    "end": "606880"
  },
  {
    "text": "tcc permissions granted to the main executable let's take a look on an example",
    "start": "606880",
    "end": "614480"
  },
  {
    "text": "so we have three actors here the system application with private dc permissions",
    "start": "614480",
    "end": "619600"
  },
  {
    "text": "that contains plugins we have kernel and user space tccd",
    "start": "619600",
    "end": "626000"
  },
  {
    "text": "so whenever the system application wants to access the files from the",
    "start": "626000",
    "end": "632240"
  },
  {
    "text": "desktop under the hood the kernel will be asked if that",
    "start": "632240",
    "end": "637839"
  },
  {
    "text": "if the permission could be granted so the caramel will delegate",
    "start": "637839",
    "end": "643279"
  },
  {
    "text": "this decision to the tcc daemon the user space c demon and this demon",
    "start": "643279",
    "end": "649680"
  },
  {
    "text": "will verify the code signing requirement that you saw in the in the sqlite3 database of the main",
    "start": "649680",
    "end": "656480"
  },
  {
    "text": "executable in order to verify if the permission has been granted or not",
    "start": "656480",
    "end": "662240"
  },
  {
    "text": "if it was the access is granted and yeah our application can access the files",
    "start": "662240",
    "end": "668160"
  },
  {
    "text": "from desktop however if we have the system application that contains a malicious plugin what happens",
    "start": "668160",
    "end": "677120"
  },
  {
    "text": "and it turns out that nothing special it's exactly the same situation the marshes plugin still",
    "start": "677120",
    "end": "683519"
  },
  {
    "text": "executes in the context of the of the main application so the tcc daemon will",
    "start": "683519",
    "end": "688560"
  },
  {
    "text": "only verify that the parent application the [Music] the main application that has the",
    "start": "688560",
    "end": "694640"
  },
  {
    "text": "permissions granted so an example of such a vulnerability was",
    "start": "694640",
    "end": "700959"
  },
  {
    "text": "that cde and we richard we are changing the nfs home directory so i identified a",
    "start": "700959",
    "end": "709040"
  },
  {
    "text": "suspicious application uh called directory utility and i call it",
    "start": "709040",
    "end": "714399"
  },
  {
    "text": "suspicious because it had a private tcc entitlement that allowed accessing",
    "start": "714399",
    "end": "720800"
  },
  {
    "text": "system policies admin files uh when i encountered this application i uh",
    "start": "720800",
    "end": "727360"
  },
  {
    "text": "started browsing through its directory and it turned out that it contains a",
    "start": "727360",
    "end": "732959"
  },
  {
    "text": "plugin subdirectory and the the plugin subdirectory contains uh for",
    "start": "732959",
    "end": "739120"
  },
  {
    "text": "uh the domain admin uh plugins the the for",
    "start": "739120",
    "end": "745600"
  },
  {
    "text": "the four plugins and i wanted to know if this plugins are uh loaded into the context of the main",
    "start": "745600",
    "end": "753200"
  },
  {
    "text": "process so i've opened the active directory",
    "start": "753200",
    "end": "758399"
  },
  {
    "text": "and also the task explorer and i saw that in the dilips",
    "start": "758399",
    "end": "765120"
  },
  {
    "text": "tab these four plugins are indeed loaded into the context of the main application",
    "start": "765120",
    "end": "770399"
  },
  {
    "text": "so i um i i was then sure that yeah if i change this plugins if i uh",
    "start": "770399",
    "end": "778800"
  },
  {
    "text": "you know alter the plugin with a malicious one it will be loaded probably to the context of the main application",
    "start": "778959",
    "end": "785360"
  },
  {
    "text": "so after that i started uh you know using the directory utility uh",
    "start": "785360",
    "end": "792000"
  },
  {
    "text": "and i uh so that it has access to uh changing the nfs home directory and",
    "start": "792000",
    "end": "800000"
  },
  {
    "text": "you know i started thinking on how this could be abused and i immediately",
    "start": "800000",
    "end": "805360"
  },
  {
    "text": "thought that the tcc uh has that per each user database right",
    "start": "805360",
    "end": "810720"
  },
  {
    "text": "so the tcc has to somehow know where the user's home directory is in order to",
    "start": "810720",
    "end": "818000"
  },
  {
    "text": "determine the the sqlite free database so i reversed the tcc daemon",
    "start": "818000",
    "end": "825839"
  },
  {
    "text": "and yeah indeed it had the user home directory method and in the body of this",
    "start": "825839",
    "end": "831120"
  },
  {
    "text": "method i saw that there it's using the get power uid function",
    "start": "831120",
    "end": "838079"
  },
  {
    "text": "and this function uh has the home directory uh",
    "start": "838079",
    "end": "844560"
  },
  {
    "text": "entity so i start thinking about yeah but where the",
    "start": "844560",
    "end": "849920"
  },
  {
    "text": "the function gets the information from and in the man um",
    "start": "849920",
    "end": "854959"
  },
  {
    "text": "you can read that it obtains information from open directory daemon so i was all",
    "start": "854959",
    "end": "861279"
  },
  {
    "text": "my i was almost sure that uh if i changed it via the directory utility it",
    "start": "861279",
    "end": "868000"
  },
  {
    "text": "will have it will have an influence on tcc so i confirmed that and",
    "start": "868000",
    "end": "874399"
  },
  {
    "text": "here you can see that our exploitation uh scenario so at first point we have to",
    "start": "874399",
    "end": "880160"
  },
  {
    "text": "copy the direct volatility that to a location that will not be protected by system integrity protection so we will",
    "start": "880160",
    "end": "886639"
  },
  {
    "text": "be able to alter the plugin uh then we will inject a malicious plugin that will be executed in the",
    "start": "886639",
    "end": "893760"
  },
  {
    "text": "directory utilities uh context where the of course the private tcc entitlement",
    "start": "893760",
    "end": "900320"
  },
  {
    "text": "that that allowed us to modify the system admin files uh then we have to",
    "start": "900320",
    "end": "906160"
  },
  {
    "text": "prepare a fake tcc sqlite free database with the fake permissions um",
    "start": "906160",
    "end": "912639"
  },
  {
    "text": "after that we modified the nfs home directory so now it will be pointing to",
    "start": "912639",
    "end": "918079"
  },
  {
    "text": "our fake location that tcc will resolve in the end to the fake database with the",
    "start": "918079",
    "end": "923440"
  },
  {
    "text": "fake and the fake permissions and we then have to restart the tcc demon so it",
    "start": "923440",
    "end": "929839"
  },
  {
    "text": "will load our fake database based on the new nfs home directory uh variable and",
    "start": "929839",
    "end": "936000"
  },
  {
    "text": "of course we achieve the full tcc bypass so let's take a look on the demo",
    "start": "936000",
    "end": "943360"
  },
  {
    "text": "we now we are now confirming that we don't have access to to the address book",
    "start": "946800",
    "end": "953880"
  },
  {
    "text": "so now let's try to open the exploit it failed because we need root to uh to",
    "start": "954560",
    "end": "960720"
  },
  {
    "text": "change this anova's home directory entry and as you can see uh it has been",
    "start": "960720",
    "end": "966959"
  },
  {
    "text": "changed to another one now we have to restart the tcc to make sure",
    "start": "966959",
    "end": "973199"
  },
  {
    "text": "that the new fade database will will be loaded",
    "start": "973199",
    "end": "979160"
  },
  {
    "text": "and once again let's kill it to be 100 sure it has to start",
    "start": "982320",
    "end": "989680"
  },
  {
    "text": "and as you can see once again we now have access to the address book so yeah we have",
    "start": "992880",
    "end": "998880"
  },
  {
    "text": "uh successfully exploited the tcc another example of",
    "start": "998880",
    "end": "1005120"
  },
  {
    "text": "tcc bypass via plugins is via core audio demon uh so i identified uh",
    "start": "1005120",
    "end": "1013199"
  },
  {
    "text": "yet another like uh executable with uh suspicious permissions and curl out the",
    "start": "1013199",
    "end": "1019600"
  },
  {
    "text": "demon uh had two suspicious permissions the first one was tccmanager that allowed to",
    "start": "1019600",
    "end": "1026400"
  },
  {
    "text": "change the rules in the seed protected database and the second one was designing library",
    "start": "1026400",
    "end": "1032240"
  },
  {
    "text": "validation so macas won't verify if the library was signed with us with the same",
    "start": "1032240",
    "end": "1038640"
  },
  {
    "text": "certificate um so in this example uh the exploitations the",
    "start": "1038640",
    "end": "1045760"
  },
  {
    "text": "exploitation scenario looks as follows so at first we create a malicious markers bundle with driver extension",
    "start": "1045760",
    "end": "1052559"
  },
  {
    "text": "that will be our plugin uh we plant it in uh hull plugins directory restart the",
    "start": "1052559",
    "end": "1058960"
  },
  {
    "text": "core auto demon and yeah once again we can fully control the tcc",
    "start": "1058960",
    "end": "1064840"
  },
  {
    "text": "demon let's take a look on the code um so i didn't want to you know uh",
    "start": "1064840",
    "end": "1071919"
  },
  {
    "text": "write a manually write all the code to uh that will change this permissions in",
    "start": "1071919",
    "end": "1079200"
  },
  {
    "text": "that sqlite3 database so i decided to reverse the private tcc functions and i",
    "start": "1079200",
    "end": "1085760"
  },
  {
    "text": "found one that will make this job for for me uh so i extended it and based on",
    "start": "1085760",
    "end": "1091280"
  },
  {
    "text": "this function i gave the full disk access permission to the",
    "start": "1091280",
    "end": "1096559"
  },
  {
    "text": "terminal so let's take a look on the demo",
    "start": "1096559",
    "end": "1103400"
  },
  {
    "text": "we once again verify if we have access to the others book",
    "start": "1109280",
    "end": "1115280"
  },
  {
    "text": "we don't have let's try if sudo has it no because as i",
    "start": "1115280",
    "end": "1120400"
  },
  {
    "text": "told you before sudo doesn't make you a guard on macas but now let's try to open",
    "start": "1120400",
    "end": "1127039"
  },
  {
    "text": "the exploit as you can see the terminal has appeared in the full disk access soup tab",
    "start": "1127039",
    "end": "1133600"
  },
  {
    "text": "now we have to restart the terminal",
    "start": "1133600",
    "end": "1138240"
  },
  {
    "text": "and let's now verify if we have access or not",
    "start": "1139120",
    "end": "1145000"
  },
  {
    "text": "and wow we uh have access to the others book that means that we have yet again uh successfully found",
    "start": "1154080",
    "end": "1162840"
  },
  {
    "text": "tcc all right so now let's go to the uh",
    "start": "1162840",
    "end": "1168080"
  },
  {
    "text": "second group of vulnerabilities uh that tcc bypasses through process injections",
    "start": "1168080",
    "end": "1174160"
  },
  {
    "text": "uh so we once again will be executing code in the context of the entitlement untitled",
    "start": "1174160",
    "end": "1181600"
  },
  {
    "text": "application uh but you know usually as i told you on the system integrity protection slide we",
    "start": "1181600",
    "end": "1188400"
  },
  {
    "text": "cannot inject our call to the apple signed apps but it's not 100 true uh there are",
    "start": "1188400",
    "end": "1195760"
  },
  {
    "text": "exceptions and one of the one of the exceptions is the",
    "start": "1195760",
    "end": "1201280"
  },
  {
    "text": "com apple security get desk allow entitlement that will allow us to get",
    "start": "1201280",
    "end": "1206400"
  },
  {
    "text": "the task part of the remote application",
    "start": "1206400",
    "end": "1211840"
  },
  {
    "text": "so i've identified that there is an exxon ctl",
    "start": "1211840",
    "end": "1218840"
  },
  {
    "text": "executable that contains the private tcc entitlement and also has the get dusk",
    "start": "1218840",
    "end": "1225039"
  },
  {
    "text": "allo uh an entitlement another suspicious one",
    "start": "1225039",
    "end": "1230400"
  },
  {
    "text": "so in order to create a simple proof of concept i proved that",
    "start": "1230400",
    "end": "1235600"
  },
  {
    "text": "if you uh inject via low level debugger to the excellent ctl",
    "start": "1235600",
    "end": "1242320"
  },
  {
    "text": "it succee it succeeds so as you can see i",
    "start": "1242320",
    "end": "1247279"
  },
  {
    "text": "tried to do back trace and this succeeded so yeah we have the task of the",
    "start": "1247520",
    "end": "1252640"
  },
  {
    "text": "apple signed uh process with the private tcc entitlement so yeah yet again group of the of the",
    "start": "1252640",
    "end": "1259200"
  },
  {
    "text": "vulnerabilities on how to bypass tcc and this group of vulnerabilities is uh",
    "start": "1259200",
    "end": "1266320"
  },
  {
    "text": "especially problematic because a lot of third-party applications are",
    "start": "1266320",
    "end": "1272400"
  },
  {
    "text": "vulnerable to process injection uh techniques uh",
    "start": "1272400",
    "end": "1277520"
  },
  {
    "text": "attacks so if you download a third party application on your mac os and you give",
    "start": "1277520",
    "end": "1283600"
  },
  {
    "text": "it the tc permissions you have to keep in mind that mother can",
    "start": "1283600",
    "end": "1289440"
  },
  {
    "text": "abuse that application and you know the sad fact",
    "start": "1289440",
    "end": "1295520"
  },
  {
    "text": "about it is that electron applications are vulnerable by default so yeah i'm sorry",
    "start": "1295520",
    "end": "1301760"
  },
  {
    "text": "and we both with java we have found a lot of different vulnerabilities in",
    "start": "1301760",
    "end": "1307039"
  },
  {
    "text": "different third-party applications you can see that firefox is still unfortunately vulnerable streamlabs obs",
    "start": "1307039",
    "end": "1314000"
  },
  {
    "text": "signal snag lt but there were many many more first party applications",
    "start": "1314000",
    "end": "1319120"
  },
  {
    "text": "if you are curious on how you can exploit the firefox i'm encouraging you",
    "start": "1319120",
    "end": "1326400"
  },
  {
    "text": "to to read my blog post about it so i'm passing the microphone back to",
    "start": "1326400",
    "end": "1333919"
  },
  {
    "text": "java okay so let's continue uh with the third group of um",
    "start": "1333919",
    "end": "1340320"
  },
  {
    "text": "bypasses for tcc and that's those involve the mount operation uh in some",
    "start": "1340320",
    "end": "1346559"
  },
  {
    "text": "way so the first vulnerability i want to cover i discovered last year",
    "start": "1346559",
    "end": "1352960"
  },
  {
    "text": "and it involved the amount apfs utility which we can use to create",
    "start": "1352960",
    "end": "1359200"
  },
  {
    "text": "snapshots so the apfs file system supports uh the snapshot feature uh",
    "start": "1359200",
    "end": "1364960"
  },
  {
    "text": "which basically allows someone to make a snapshot of the file system and then if any",
    "start": "1364960",
    "end": "1371039"
  },
  {
    "text": "uh changes happen later on those can be rolled back to the last known",
    "start": "1371039",
    "end": "1377039"
  },
  {
    "text": "good or bad state basically but what we can do with these snapshots",
    "start": "1377039",
    "end": "1382880"
  },
  {
    "text": "is we can mount them somewhere on the file system",
    "start": "1382880",
    "end": "1388080"
  },
  {
    "text": "so we can create a directory for example temp snap and basically remount the entire",
    "start": "1388080",
    "end": "1395679"
  },
  {
    "text": "snapshot and pass the file system into that location now snapshots are read only so they cannot be written to",
    "start": "1395679",
    "end": "1403360"
  },
  {
    "text": "but we can still read every frag file uh through a snapshot and",
    "start": "1403360",
    "end": "1408880"
  },
  {
    "text": "with us mounting it to a different location out of the standard",
    "start": "1408880",
    "end": "1413919"
  },
  {
    "text": "what that means is that location will be outside of the scope of the dcc",
    "start": "1413919",
    "end": "1419679"
  },
  {
    "text": "protection and we can access every user file through the snapshot",
    "start": "1419679",
    "end": "1426159"
  },
  {
    "text": "but to make it worse we could use the no owner's flag during this mount operation which means",
    "start": "1426159",
    "end": "1433200"
  },
  {
    "text": "that we can mount the snapshot the way that it will be seen as we are",
    "start": "1433200",
    "end": "1440240"
  },
  {
    "text": "the owner of every file so if there are multiple users using the same",
    "start": "1440240",
    "end": "1446559"
  },
  {
    "text": "mac os system for any reason basically what we get is read access to every",
    "start": "1446559",
    "end": "1451679"
  },
  {
    "text": "other user's file this worked even with being a guest",
    "start": "1451679",
    "end": "1457600"
  },
  {
    "text": "on the system now what apple did uh is they tied the snapshot mount",
    "start": "1457600",
    "end": "1464640"
  },
  {
    "text": "operation to full disk access role um which basically meant it's pointless",
    "start": "1464640",
    "end": "1473720"
  },
  {
    "text": "yeah but unfortunately it's not not a perfect fix because let's say we grant terminal full",
    "start": "1474240",
    "end": "1482000"
  },
  {
    "text": "disk access because we need it and i think many power users do that",
    "start": "1482000",
    "end": "1489120"
  },
  {
    "text": "what happens if a low privileged user or guest opens up terminal",
    "start": "1489120",
    "end": "1496080"
  },
  {
    "text": "they can still perform the mount operation with knowner so they can still access other users",
    "start": "1496080",
    "end": "1502320"
  },
  {
    "text": "file this is a problem but apple decided not to tackle",
    "start": "1502320",
    "end": "1508240"
  },
  {
    "text": "that the other bug",
    "start": "1508240",
    "end": "1513200"
  },
  {
    "text": "was fixed uh this year and it also involved mounting",
    "start": "1513520",
    "end": "1519200"
  },
  {
    "text": "uh so we discussed that the the user tcc database file is located in the library",
    "start": "1519200",
    "end": "1525120"
  },
  {
    "text": "application support com apple tcc directory there is a tcc.db",
    "start": "1525120",
    "end": "1531679"
  },
  {
    "text": "database file inside now macos properly protects this file so",
    "start": "1531679",
    "end": "1538240"
  },
  {
    "text": "we cannot read or or write into this file so we cannot modify it and add custom",
    "start": "1538240",
    "end": "1545360"
  },
  {
    "text": "rules into that uh so that's good and we can't even modify the directory itself but",
    "start": "1545360",
    "end": "1552320"
  },
  {
    "text": "we can mount over this directory which means we can create our own image",
    "start": "1552320",
    "end": "1559360"
  },
  {
    "text": "create our own pcc database file and mount it over the com app.tcc",
    "start": "1559360",
    "end": "1565120"
  },
  {
    "text": "directory restart dcc and at that point pcc we read our own file",
    "start": "1565120",
    "end": "1571520"
  },
  {
    "text": "and that basically grants us a full dcc bypass",
    "start": "1571520",
    "end": "1577200"
  },
  {
    "text": "and here's the demo of this showing first",
    "start": "1578400",
    "end": "1584880"
  },
  {
    "text": "um that we don't have access to the documents folder from terminal",
    "start": "1584880",
    "end": "1589919"
  },
  {
    "text": "and then we run our exploit which we perform this mounting",
    "start": "1589919",
    "end": "1596640"
  },
  {
    "text": "and restart pcc and then we can list the documents folder so we gained access",
    "start": "1596640",
    "end": "1604880"
  },
  {
    "text": "uh the third the fourth big group of dc bypasses",
    "start": "1606720",
    "end": "1612480"
  },
  {
    "text": "involves some application behavior so on mac os as you saw there are",
    "start": "1612480",
    "end": "1618720"
  },
  {
    "text": "many applications that can access private files because of their entitlements",
    "start": "1618720",
    "end": "1624840"
  },
  {
    "text": "um and there are others that move files around when they",
    "start": "1624840",
    "end": "1631120"
  },
  {
    "text": "perform some operations and some application to both",
    "start": "1631120",
    "end": "1637200"
  },
  {
    "text": "so even if we cannot inject a code into this application",
    "start": "1637200",
    "end": "1643120"
  },
  {
    "text": "because it's properly protected maybe we can convince it to move files",
    "start": "1643120",
    "end": "1648799"
  },
  {
    "text": "for us to a location of our choice so what happens in this game we have two",
    "start": "1648799",
    "end": "1655360"
  },
  {
    "text": "players the malicious application and an application which has access to private files",
    "start": "1655360",
    "end": "1662240"
  },
  {
    "text": "uh so comes our application and discovers that hey the other application has access to",
    "start": "1662240",
    "end": "1668399"
  },
  {
    "text": "private files uh yes and then our application will",
    "start": "1668399",
    "end": "1674000"
  },
  {
    "text": "perform some operation and ask the other process uh to move those files to somewhere else",
    "start": "1674000",
    "end": "1680640"
  },
  {
    "text": "and the other application will happily do that and we can be nice and thank",
    "start": "1680640",
    "end": "1688320"
  },
  {
    "text": "him for that so the first",
    "start": "1688320",
    "end": "1694880"
  },
  {
    "text": "vulnerability of such is related to the nodes application",
    "start": "1694880",
    "end": "1701120"
  },
  {
    "text": "so the nodes application stores all of the nodes in a",
    "start": "1701120",
    "end": "1707279"
  },
  {
    "text": "not tcc protected location so notes are not considered as a private uh documents",
    "start": "1707279",
    "end": "1715360"
  },
  {
    "text": "by apple and what we can do is open a file with the nodes application and if it's a",
    "start": "1715360",
    "end": "1723039"
  },
  {
    "text": "binary file the application will automatically attach it to a new node",
    "start": "1723039",
    "end": "1729279"
  },
  {
    "text": "and this new node along with the attachment will be stored uh",
    "start": "1729279",
    "end": "1734480"
  },
  {
    "text": "inside the nodes directory now we can see if we inspect the node's",
    "start": "1734480",
    "end": "1741120"
  },
  {
    "text": "application entitlements that it has quite a few privacy exceptions it can access the",
    "start": "1741120",
    "end": "1746960"
  },
  {
    "text": "address book calendar and the reminders so what we can do is basically",
    "start": "1746960",
    "end": "1753919"
  },
  {
    "text": "uh open the the default or the main address book database with notes",
    "start": "1753919",
    "end": "1761200"
  },
  {
    "text": "and as it's a binary file it's a sqlite database it will attach it to the nodes",
    "start": "1761200",
    "end": "1767120"
  },
  {
    "text": "and then if we go to the library group containers group com upper nodes",
    "start": "1767120",
    "end": "1772640"
  },
  {
    "text": "accounts we will find this file there",
    "start": "1772640",
    "end": "1776880"
  },
  {
    "text": "the next uh vulnerability uh is concerning the app translocation uh",
    "start": "1778240",
    "end": "1785679"
  },
  {
    "text": "service uh this can be could be also a mount related bug",
    "start": "1785679",
    "end": "1790880"
  },
  {
    "text": "uh because it involves mounting as well but i classified it as a behavior",
    "start": "1790880",
    "end": "1798720"
  },
  {
    "text": "stuff so the app translocation service was introduced by effort to fix the",
    "start": "1798720",
    "end": "1804320"
  },
  {
    "text": "vulnerability found by patrick pardo to bypass gatekeeper and what it does if we",
    "start": "1804320",
    "end": "1810080"
  },
  {
    "text": "download an application and run it from the downloads folder or from the",
    "start": "1810080",
    "end": "1816480"
  },
  {
    "text": "folder where we downloaded it to for the very first time it will make a new fs mount of that",
    "start": "1816480",
    "end": "1822880"
  },
  {
    "text": "application inside the temporary directory um an olefs mount basically means that it",
    "start": "1822880",
    "end": "1829440"
  },
  {
    "text": "will map the application to another location uh on the file system and the entire",
    "start": "1829440",
    "end": "1835679"
  },
  {
    "text": "directory structure under it uh the destination is typically in the",
    "start": "1835679",
    "end": "1841440"
  },
  {
    "text": "temple app translocation slash d slash d and then the application name",
    "start": "1841440",
    "end": "1847360"
  },
  {
    "text": "this library is actually open source in the security bundle and",
    "start": "1847360",
    "end": "1852799"
  },
  {
    "text": "it's in the leap security translocate library and the binary responsible for",
    "start": "1852799",
    "end": "1859039"
  },
  {
    "text": "translocation is the usr libex's lsd file now if we inspect its entitlements",
    "start": "1859039",
    "end": "1866399"
  },
  {
    "text": "we find that once uh it has a new lefs [Music]",
    "start": "1866399",
    "end": "1871440"
  },
  {
    "text": "entitlement it means that it can make an olefs mount actually this is the only application the entire system that is",
    "start": "1871440",
    "end": "1878320"
  },
  {
    "text": "allowed to do no left mounts additionally it has also full disk",
    "start": "1878320",
    "end": "1884640"
  },
  {
    "text": "access rights and it can access every file",
    "start": "1884640",
    "end": "1890080"
  },
  {
    "text": "uh so what we do in this case to exploit this behavior we add a current in attribute to our",
    "start": "1890080",
    "end": "1896880"
  },
  {
    "text": "library folder for example uh we can do it with other folders as",
    "start": "1896880",
    "end": "1902080"
  },
  {
    "text": "well and then call the com apple security translocation xpc service and basically",
    "start": "1902080",
    "end": "1909840"
  },
  {
    "text": "ask the translocation service to translocate the library folder and what",
    "start": "1909840",
    "end": "1915519"
  },
  {
    "text": "it will do it will happily do that and map it to the 10d fts location dd",
    "start": "1915519",
    "end": "1922240"
  },
  {
    "text": "library and through that mode sees that pass is not under pcc protection",
    "start": "1922240",
    "end": "1928559"
  },
  {
    "text": "we can access again every private file again read only",
    "start": "1928559",
    "end": "1934559"
  },
  {
    "text": "but it's uh it's a bypass uh here we can see a snippet of the",
    "start": "1934559",
    "end": "1940399"
  },
  {
    "text": "exploit uh so we first get the home directory location and the temp directory location we build our paths uh",
    "start": "1940399",
    "end": "1948880"
  },
  {
    "text": "that is required for the xpc service we populate an xpc",
    "start": "1948880",
    "end": "1954880"
  },
  {
    "text": "uh message a dictionary and then we pass this message uh to the max service",
    "start": "1954880",
    "end": "1961840"
  },
  {
    "text": "because of the translocation services open source uh it was actually",
    "start": "1961840",
    "end": "1968080"
  },
  {
    "text": "quite easy to build this up because there is a next pc client and",
    "start": "1968080",
    "end": "1974000"
  },
  {
    "text": "i could use that now here is demo of this",
    "start": "1974000",
    "end": "1979200"
  },
  {
    "text": "exploit so we will try to list the messages with a folder",
    "start": "1979200",
    "end": "1984399"
  },
  {
    "text": "which contains the imessages of the user which is protected by privacy and then we will run our",
    "start": "1984399",
    "end": "1991519"
  },
  {
    "text": "translocation exploit and we can see it's mapped to this long",
    "start": "1991519",
    "end": "1997200"
  },
  {
    "text": "directory and if if we take it and check the messages",
    "start": "1997200",
    "end": "2003279"
  },
  {
    "text": "we will see that the database is available for us which contains the messages",
    "start": "2003279",
    "end": "2010960"
  },
  {
    "text": "now the other the last big group is not really a bypass it's more like",
    "start": "2010960",
    "end": "2018080"
  },
  {
    "text": "leaks basically apple though that private info",
    "start": "2018080",
    "end": "2023760"
  },
  {
    "text": "is located only on these certain locations like the address book folder the messages folder the documents folder",
    "start": "2023760",
    "end": "2030159"
  },
  {
    "text": "and so on it turned out that it's not true so private information or bits of",
    "start": "2030159",
    "end": "2036320"
  },
  {
    "text": "information are all around the file system so how to find this uh just grab around",
    "start": "2036320",
    "end": "2045200"
  },
  {
    "text": "so what i did i grip for an email address i grabbed for a phone number some imessage",
    "start": "2045200",
    "end": "2051358"
  },
  {
    "text": "content or email content inside my entire library and",
    "start": "2051359",
    "end": "2056960"
  },
  {
    "text": "and there were multiple results of this which resulted in plenty of inner colleagues so sometimes it falls",
    "start": "2056960",
    "end": "2064720"
  },
  {
    "text": "as simple as file names but that's considered as a private info",
    "start": "2064720",
    "end": "2070398"
  },
  {
    "text": "so these are resulted in in the cvs in some cases uh i found contact",
    "start": "2070399",
    "end": "2076960"
  },
  {
    "text": "information with phone numbers email addresses [Music]",
    "start": "2076960",
    "end": "2082960"
  },
  {
    "text": "in some cases it was family contacts with their birth date and also the",
    "start": "2082960",
    "end": "2088878"
  },
  {
    "text": "probably the knowledge c uh database was the more the most fruitful because it contained",
    "start": "2088879",
    "end": "2095760"
  },
  {
    "text": "full imessages contact information and so on uh interestingly the current end",
    "start": "2095760",
    "end": "2101440"
  },
  {
    "text": "database which contained the full download history back to really long time effort didn't",
    "start": "2101440",
    "end": "2108000"
  },
  {
    "text": "considered it as a private info so they said that that won't be fixed um",
    "start": "2108000",
    "end": "2113839"
  },
  {
    "text": "although it can still reveal quite a few information of what size you visited",
    "start": "2113839",
    "end": "2119680"
  },
  {
    "text": "download it from and and so on and these are the ones that were fixed but there are",
    "start": "2119680",
    "end": "2125680"
  },
  {
    "text": "more to come actually in the upcoming more months",
    "start": "2125680",
    "end": "2131839"
  },
  {
    "text": "so as as a closure uh let's also talk about apple's",
    "start": "2131920",
    "end": "2137760"
  },
  {
    "text": "security bounty program so they actually have a category for",
    "start": "2137760",
    "end": "2143200"
  },
  {
    "text": "privacy bypasses which can range from",
    "start": "2143200",
    "end": "2148560"
  },
  {
    "text": "25k for small long small amount of leaks up to",
    "start": "2148560",
    "end": "2153680"
  },
  {
    "text": "100 000 usd for major bypasses",
    "start": "2153680",
    "end": "2159680"
  },
  {
    "text": "we can't reveal exact payouts but these numbers are pretty much correct",
    "start": "2159680",
    "end": "2166480"
  },
  {
    "text": "um so apple is really fair in this",
    "start": "2166480",
    "end": "2172880"
  },
  {
    "text": "in these terms uh unfortunately that's probably the only",
    "start": "2172880",
    "end": "2178400"
  },
  {
    "text": "good point of the program uh they are really fair and they will pay",
    "start": "2178400",
    "end": "2183839"
  },
  {
    "text": "what is promised but bug fixes are often really slow especially if it's",
    "start": "2183839",
    "end": "2190000"
  },
  {
    "text": "more like a design issue sometimes they can range from",
    "start": "2190000",
    "end": "2197920"
  },
  {
    "text": "being fixed in two years so there are some boxes reported in catalina and we'll be only fixing one array",
    "start": "2197920",
    "end": "2204560"
  },
  {
    "text": "um there is a lack of communication so often it feels that he sent them an",
    "start": "2204560",
    "end": "2210000"
  },
  {
    "text": "email and no one reads that hopefully that's not true but it would be nice to get some",
    "start": "2210000",
    "end": "2217119"
  },
  {
    "text": "feedback uh more often uh probably the first part is the actual",
    "start": "2217119",
    "end": "2222960"
  },
  {
    "text": "decision uh for the reward which can take really really long time",
    "start": "2222960",
    "end": "2229280"
  },
  {
    "text": "over seven months uh both of us have vulnerabilities that were fixed with the release of pixar",
    "start": "2229280",
    "end": "2236320"
  },
  {
    "text": "and st not decided if uh if we get a reward or not",
    "start": "2236320",
    "end": "2243680"
  },
  {
    "text": "so as a conclusion uh for the entire talk um we think that the the entire effort with",
    "start": "2243680",
    "end": "2251599"
  },
  {
    "text": "the privacy protection is is really good uh and it's way beyond many other os's",
    "start": "2251599",
    "end": "2257520"
  },
  {
    "text": "that don't do that and it's a step in the right direction so others should do",
    "start": "2257520",
    "end": "2262560"
  },
  {
    "text": "the same uh still there are lots of issues uh around that but uh luckily apple is",
    "start": "2262560",
    "end": "2270480"
  },
  {
    "text": "fixing all of these and takes it seriously now probably one",
    "start": "2270480",
    "end": "2275760"
  },
  {
    "text": "of the major issue is that too many upper binaries have exceptions",
    "start": "2275760",
    "end": "2282320"
  },
  {
    "text": "to access private data which opens up the the road for abuses",
    "start": "2282320",
    "end": "2288480"
  },
  {
    "text": "and the other big issue is that many many third-party application especially electron application are",
    "start": "2288480",
    "end": "2295359"
  },
  {
    "text": "winner with injection attacks so if those applications have access to private resources then any attacker can",
    "start": "2295359",
    "end": "2304480"
  },
  {
    "text": "access those private resources and the asb program",
    "start": "2304640",
    "end": "2310320"
  },
  {
    "text": "have to improve so thank you for listening to our talk",
    "start": "2310320",
    "end": "2316960"
  },
  {
    "text": "and we will be available for question answers",
    "start": "2316960",
    "end": "2322880"
  },
  {
    "text": "in another channel yeah thank you for listening to us",
    "start": "2323440",
    "end": "2330680"
  }
]