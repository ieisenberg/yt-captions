[
  {
    "text": "thanks everyone for um joining us um to listen to our presentation Um we are my",
    "start": "80",
    "end": "7279"
  },
  {
    "text": "name is Yuri I'm from advanced service research team at Intel Security and uh these are my colleagues um Misha um Alex",
    "start": "7279",
    "end": "15440"
  },
  {
    "text": "Bjanuk and um and Alex Matros Andrew couldn't make it so um he'll he'll be uh",
    "start": "15440",
    "end": "20800"
  },
  {
    "text": "uh supporting us from uh from remotely Uh so um uh some of you might know that",
    "start": "20800",
    "end": "27840"
  },
  {
    "text": "we have been uh exploring um vulnerabilities in the system firmware",
    "start": "27840",
    "end": "33680"
  },
  {
    "text": "and the biosis and the uh UFI based firmware for for a while now In fact uh",
    "start": "33680",
    "end": "39440"
  },
  {
    "text": "um the the the our team together with legore probably uh most active in you",
    "start": "39440",
    "end": "44879"
  },
  {
    "text": "know public disclosures of the vulnerabilities in that space Uh so today we uh decided to uh take a um kind",
    "start": "44879",
    "end": "51520"
  },
  {
    "text": "of a slightly different approach uh and talk about firmware vulnerabilities but",
    "start": "51520",
    "end": "56800"
  },
  {
    "text": "not just firmware vulnerabilities but how they impact hypervisors and the security virtualization based security So um it's going to be fun So firmware",
    "start": "56800",
    "end": "66240"
  },
  {
    "text": "hypervisors and attacking it's uh yeah it's going to be fun anyway Uh so the",
    "start": "66240",
    "end": "71760"
  },
  {
    "text": "the presentation uh the the the title is you can see it attacking hypervisors",
    "start": "71760",
    "end": "77759"
  },
  {
    "text": "from firmware and hardware and we we'll explore uh new um attack vectors um on",
    "start": "77759",
    "end": "85360"
  },
  {
    "text": "the VMMs So this is a brief agenda So we'll I'll I'll I'll describe hypervisor",
    "start": "85360",
    "end": "92640"
  },
  {
    "text": "based isolation mechanisms uh and the protections um the the the VMMs offer Uh",
    "start": "92640",
    "end": "98159"
  },
  {
    "text": "then we'll uh talk about and introduce a uh firmware rootkit and demonstrate firmware rootkit and how that affects",
    "start": "98159",
    "end": "104000"
  },
  {
    "text": "the uh secrets within the virtual machines Uh we'll spend some time on uh",
    "start": "104000",
    "end": "109439"
  },
  {
    "text": "um known attack vectors against hypervisor 2 through through the through the hardware emulation and we'll also uh",
    "start": "109439",
    "end": "116640"
  },
  {
    "text": "uh talk about um um uh attack vectors uh which in our opinion are um uh um less",
    "start": "116640",
    "end": "123280"
  },
  {
    "text": "explored to date uh through the uh firmware interfaces Um and uh then we'll",
    "start": "123280",
    "end": "128399"
  },
  {
    "text": "conclude with um uh some of the available mitigations as well as tools Uh so hypervisor based isolation and how",
    "start": "128399",
    "end": "137200"
  },
  {
    "text": "VMMs um isolate uh the malware within the virtual machines as well as the malicious devices Um well the summary of",
    "start": "137200",
    "end": "144480"
  },
  {
    "text": "this slide is that it's good when it's finished when it's complete So uh you",
    "start": "144480",
    "end": "150239"
  },
  {
    "text": "can see the the the the um the relative high level uh stack on on the software",
    "start": "150239",
    "end": "156239"
  },
  {
    "text": "stack including hardware at the bottom uh the the system firmware running on it",
    "start": "156239",
    "end": "161519"
  },
  {
    "text": "initializing hardware which is either legacy bios or UFI based firmware or uh",
    "start": "161519",
    "end": "166640"
  },
  {
    "text": "SMI handlers u other types of firmware Uh then this this picture represents",
    "start": "166640",
    "end": "172319"
  },
  {
    "text": "more mostly bare metal hypervisor model not the host uh hyper virtualization model but uh there's a there's a",
    "start": "172319",
    "end": "178080"
  },
  {
    "text": "hypervisor booting on on top of the system firmware and uh with the the",
    "start": "178080",
    "end": "184159"
  },
  {
    "text": "virtual machines uh managed by this hypervisor with the guest OSS isolated",
    "start": "184159",
    "end": "189440"
  },
  {
    "text": "from each other and you can see that the privilege level uh increases from top to",
    "start": "189440",
    "end": "195680"
  },
  {
    "text": "bottom basically if you have a uh a compromise in the virtual machine you have certain impact but if you have a",
    "start": "195680",
    "end": "201200"
  },
  {
    "text": "compromise of uh inside firmware then the the privileges that the exploit has",
    "start": "201200",
    "end": "206640"
  },
  {
    "text": "uh obviously grows with with that So um how the the the isolation the the",
    "start": "206640",
    "end": "213440"
  },
  {
    "text": "hypervisors are good in isolate at at providing isolation between the virtual machines and so the the way it's um",
    "start": "213440",
    "end": "220640"
  },
  {
    "text": "provided on a on a on a on on a generically is if you have certain attack in one guest OS and the attack",
    "start": "220640",
    "end": "228799"
  },
  {
    "text": "may propagate and infect the entire guest OS including the operating system itself then the uh the hypervisor",
    "start": "228799",
    "end": "235840"
  },
  {
    "text": "intends to block that uh the the propagation of the attack to other virtual machines as well as block the",
    "start": "235840",
    "end": "241760"
  },
  {
    "text": "the attempt to attack the hypervisor itself uh which could be directly from the user mode applications or from the",
    "start": "241760",
    "end": "248159"
  },
  {
    "text": "operating system So those are those are blocked um attacks uh from the software",
    "start": "248159",
    "end": "254080"
  },
  {
    "text": "from malicious software as well hypervisors uh um uh aim at providing um",
    "start": "254080",
    "end": "261359"
  },
  {
    "text": "uh protection from the compromised devices In case you have a network card compromised with the compromised",
    "start": "261359",
    "end": "266960"
  },
  {
    "text": "firmware um and the network card can access memory there's a mechanism that hypervisors employ to uh to um uh to",
    "start": "266960",
    "end": "275199"
  },
  {
    "text": "block the those uh inbound uh memory access and and the attacks from the devices So",
    "start": "275199",
    "end": "281639"
  },
  {
    "text": "uh yeah uh and and and therefore provide the same protection from the inbound",
    "start": "281639",
    "end": "287280"
  },
  {
    "text": "attacks uh to the virtual machines and for some reason it it's it's clicking",
    "start": "287280",
    "end": "292479"
  },
  {
    "text": "after every other time Uh so the summary of the protections the that that that",
    "start": "292479",
    "end": "298800"
  },
  {
    "text": "today's hypervisor um uh use and some of them are software protections some of",
    "start": "298800",
    "end": "303840"
  },
  {
    "text": "them are hardware protections uh we we could we can break them down into uh into two big classes the the protections",
    "start": "303840",
    "end": "311199"
  },
  {
    "text": "that provide software isolation the the specifically the the hypervisor's trap on certain events on or instructions in",
    "start": "311199",
    "end": "318240"
  },
  {
    "text": "the executed in the guest OS uh as well as hypervisors use uh permissions uh",
    "start": "318240",
    "end": "324880"
  },
  {
    "text": "that define uh whether guest OS can um access certain modal specific registers",
    "start": "324880",
    "end": "330479"
  },
  {
    "text": "in the CPUs or IO ports um or if it's a par virtualization g guests then the the",
    "start": "330479",
    "end": "337120"
  },
  {
    "text": "traditional ring architecture ring protections are used by the hypervisors uh to isolate different levels layers Uh",
    "start": "337120",
    "end": "344000"
  },
  {
    "text": "the memory protection is guaranteed by either softwarebased uh page tables which uh um typically works if if the",
    "start": "344000",
    "end": "351680"
  },
  {
    "text": "underlying hardware doesn't support the hardware assisted uh paging uh or if it does support hardware assisted paging",
    "start": "351680",
    "end": "358080"
  },
  {
    "text": "then uh that this mechanism is also used to uh isolate memory from uh from",
    "start": "358080",
    "end": "363199"
  },
  {
    "text": "malicious software from uh of each guest Uh so if uh those could be extended page",
    "start": "363199",
    "end": "369440"
  },
  {
    "text": "tables on Intel platforms or nested page tables Um then the second group is the",
    "start": "369440",
    "end": "375039"
  },
  {
    "text": "device isolation So the the isolation uh hypervisors provide for for potentially",
    "start": "375039",
    "end": "380319"
  },
  {
    "text": "compromised devices and uh the those um those protections include interrupt remapping so that the uh the devices",
    "start": "380319",
    "end": "386800"
  },
  {
    "text": "couldn't just send your uh u your your interrupt message signal interrupt and uh uh uh to to any uh to any guest uh or",
    "start": "386800",
    "end": "396479"
  },
  {
    "text": "the uh the protection of memory is guaranteed by um IO memory management units uh uh in Intel uh terms that's VTD",
    "start": "396479",
    "end": "405120"
  },
  {
    "text": "uh or even there are some hardware ranges available that just block all all the inbound access to those ranges So",
    "start": "405120",
    "end": "411680"
  },
  {
    "text": "there's a there are a number of protections that the hypervisors today uh use We we will not be able to",
    "start": "411680",
    "end": "417120"
  },
  {
    "text": "describe all of them and my clicker broke finally So uh but some of them so",
    "start": "417120",
    "end": "422880"
  },
  {
    "text": "the way the way uh hypervisors trap on um um certain events um happen during",
    "start": "422880",
    "end": "429680"
  },
  {
    "text": "the uh within the virtual machine There's a there is a VMM host which is basically your uh VMM or there's a and",
    "start": "429680",
    "end": "438400"
  },
  {
    "text": "there's a VM guest which is controlled by this uh structure called um either VM",
    "start": "438400",
    "end": "443680"
  },
  {
    "text": "control structure or VM control block Uh so basically it just governs behavior of the VM guest So uh there's a there's a",
    "start": "443680",
    "end": "450720"
  },
  {
    "text": "piece of code that uh handles events from within the virtual machine um uh or",
    "start": "450720",
    "end": "457520"
  },
  {
    "text": "uh the the those events are called VM exits So the the the VM exits can be um",
    "start": "457520",
    "end": "462960"
  },
  {
    "text": "uh can be can occur uh as a result of execution of specific instructions either unconditionally or conditionally",
    "start": "462960",
    "end": "469280"
  },
  {
    "text": "depending on the specific uh settings within the uh VMC structure uh the um",
    "start": "469280",
    "end": "475280"
  },
  {
    "text": "the VM exits can occur when guest tries to access uh specific uh registers in the CPU like those MSRs right uh the the",
    "start": "475280",
    "end": "483039"
  },
  {
    "text": "the the hypervisor um uses this those MSR bitmaps that basically uh uh provide",
    "start": "483039",
    "end": "490639"
  },
  {
    "text": "that um you know either tell that the guest can directly access the registers or tell that the tell the hardware that",
    "start": "490639",
    "end": "497039"
  },
  {
    "text": "it needs to trap into the hypervisor uh the the the the um hypervisor also",
    "start": "497039",
    "end": "503599"
  },
  {
    "text": "manages those uh page tables hardware assisted page tables uh to provide um uh protections of the memory pages the the",
    "start": "503599",
    "end": "510240"
  },
  {
    "text": "actual real physical pages Um and um u also hypervisors use those IO bit mapap",
    "start": "510240",
    "end": "516959"
  },
  {
    "text": "structures that um either provide access direct access to IO ports to the uh to",
    "start": "516959",
    "end": "522640"
  },
  {
    "text": "the virtual machines or uh tell hardware to trap on access to specific um um IO",
    "start": "522640",
    "end": "528600"
  },
  {
    "text": "ports So one uh the the one one one one example of the those protections is",
    "start": "528600",
    "end": "534240"
  },
  {
    "text": "extended page tables or hardware assisted paging Um so the uh the guest",
    "start": "534240",
    "end": "540160"
  },
  {
    "text": "uh you can see guest on the uh on on your left of the slide uh now",
    "start": "540160",
    "end": "546480"
  },
  {
    "text": "doesn't really have access doesn't doesn't really see the actual real physical memory It uh it after",
    "start": "546480",
    "end": "554040"
  },
  {
    "text": "translating its own virtual addresses to the physical addresses using the guest page tables Those physical addresses are",
    "start": "554040",
    "end": "561839"
  },
  {
    "text": "not really real physical addresses Those are host physical addresses or virtual physical addresses And those um um uh",
    "start": "561839",
    "end": "569120"
  },
  {
    "text": "guest physical addresses they're they're being translated by another uh uh structure which is basically mirroring",
    "start": "569120",
    "end": "576800"
  },
  {
    "text": "uh the the regular uh page tables which is uh maintained by the hypervisor and",
    "start": "576800",
    "end": "582160"
  },
  {
    "text": "that structure translates the the guest physical addresses to the actual host physical addresses So this way",
    "start": "582160",
    "end": "588160"
  },
  {
    "text": "hypervisors can can um uh guarantee that specific guests can only access specific",
    "start": "588160",
    "end": "594000"
  },
  {
    "text": "uh physical frames or physical pages and the other guests cannot do that as well as providing some u uh access attributes",
    "start": "594000",
    "end": "601600"
  },
  {
    "text": "Uh so for example the page may not be writable readable or executable Um in case uh some the in case the the",
    "start": "601600",
    "end": "609680"
  },
  {
    "text": "the the guest violates those um the the the the uh attributes access attributes",
    "start": "609680",
    "end": "615360"
  },
  {
    "text": "then that causes a trap to the hypervisor and and hypervisor can handle those events So we've talked about uh",
    "start": "615360",
    "end": "622959"
  },
  {
    "text": "isolating software and we've talked about isolating devices but uh uh we",
    "start": "622959",
    "end": "629120"
  },
  {
    "text": "don't have any uh uh protections that provide isolation to the system firmware and u uh that brings the entire system",
    "start": "629120",
    "end": "637040"
  },
  {
    "text": "firmware into the TCB of all the hypervisors So first before um con continuing uh",
    "start": "637040",
    "end": "644880"
  },
  {
    "text": "exploring the attack surface through the firmware uh let's just um let's just um I'll I'll describe the the the the",
    "start": "644880",
    "end": "651760"
  },
  {
    "text": "impact of uh the the you know those attacks on the hypervisor through the firmware uh by way of showing how the",
    "start": "651760",
    "end": "659200"
  },
  {
    "text": "the rootkit in the firmware would affect uh secrets within the hypervisor or the or within the virtual machines So uh",
    "start": "659200",
    "end": "667120"
  },
  {
    "text": "assume there is a uh system firmware somehow got compromised and we'll talk about how it can be compromised but somehow it got compromised and there is",
    "start": "667120",
    "end": "673600"
  },
  {
    "text": "a rootkit in in in the firmware for example Dixie driver if uh if you remember hacking",
    "start": "673600",
    "end": "679360"
  },
  {
    "text": "team that that's uh that's how they they've been installing the the the the rootkit in the UFI based firmware using",
    "start": "679360",
    "end": "685920"
  },
  {
    "text": "a Dixie driver in the firmware So that Dixie driver because uh because it runs",
    "start": "685920",
    "end": "691360"
  },
  {
    "text": "underneath the hypervisor it has full control over the hypervisor So it can modify it and it can install the back",
    "start": "691360",
    "end": "697120"
  },
  {
    "text": "door uh which then basically compromise all sorry compromises all the virtual",
    "start": "697120",
    "end": "702880"
  },
  {
    "text": "machines on top of the controlled by this hypervisor",
    "start": "702880",
    "end": "708360"
  },
  {
    "text": "Um however it is easier and this is what we've actually uh we've actually did in",
    "start": "708360",
    "end": "714320"
  },
  {
    "text": "our proof of concept rootkit It is easier uh to install a specific backdoor",
    "start": "714320",
    "end": "720720"
  },
  {
    "text": "rather than just modifying hypervisor code and installing our own malicious code in the hypervisor because uh the",
    "start": "720720",
    "end": "727120"
  },
  {
    "text": "the the modification to the hypervisor might be visible to some out-of-bound mechanisms and so on But the the the",
    "start": "727120",
    "end": "733680"
  },
  {
    "text": "back door would be um a stealthier and easier to do um to implement and so on",
    "start": "733680",
    "end": "740160"
  },
  {
    "text": "So that that's how we um that that's how we've uh uh we've decided to implement",
    "start": "740160",
    "end": "746399"
  },
  {
    "text": "uh a a firmware rootkit So assume there is a uh attacker VM uh fully controlled by by an external",
    "start": "746399",
    "end": "753600"
  },
  {
    "text": "attacker and there are colloccated uh victim VMs on the same physical system We want to uh we want our firmer rootkit",
    "start": "753600",
    "end": "761279"
  },
  {
    "text": "to provide uh access u uh for this attacker VM to all of the all of the",
    "start": "761279",
    "end": "766320"
  },
  {
    "text": "other victim VMs on on the physical system So at some point uh at some point",
    "start": "766320",
    "end": "771760"
  },
  {
    "text": "the physical the firmware on that physical system got infected Uh then every boot that uh that rootkit within",
    "start": "771760",
    "end": "779120"
  },
  {
    "text": "the firmware installs a back door Um so the now using that back door uh",
    "start": "779120",
    "end": "786639"
  },
  {
    "text": "the specific VM on the system has full control over not just only all of the",
    "start": "786639",
    "end": "792320"
  },
  {
    "text": "VMs all of the other VMs but also the hypervisor itself So we're not really uh",
    "start": "792320",
    "end": "797600"
  },
  {
    "text": "doing anything bad from the rootkit itself we are providing all the capabilities to one specific attacker VM",
    "start": "797600",
    "end": "803920"
  },
  {
    "text": "to do whatever it wants So um before before uh explaining a little",
    "start": "803920",
    "end": "812160"
  },
  {
    "text": "bit more details about that So how that rootkit could be installed first obviously you can install it uh using u",
    "start": "812160",
    "end": "820000"
  },
  {
    "text": "um hardware programmer specialized equipment reflash the firmware on a on a on a spy flash chip Uh I believe uh Zeno",
    "start": "820000",
    "end": "827839"
  },
  {
    "text": "from lighter calls this uh u border guard attack uh or in if the firmware is",
    "start": "827839",
    "end": "836240"
  },
  {
    "text": "um um using weak protections So basically it doesn't correctly protect itself from overwriting then you can uh",
    "start": "836240",
    "end": "843680"
  },
  {
    "text": "you can uh the attacker could just plug in a USB into the server and just uh you",
    "start": "843680",
    "end": "848800"
  },
  {
    "text": "know boot to that USB and infect the firmware Uh that that's that's how hacking team uh guys are uh been doing",
    "start": "848800",
    "end": "855920"
  },
  {
    "text": "that that uh infection at least as what we saw um",
    "start": "855920",
    "end": "862360"
  },
  {
    "text": "or uh the rootkit could could be potentially installed using a software mechanism So exploiting some",
    "start": "862360",
    "end": "868959"
  },
  {
    "text": "vulnerability in the firmware either from uh a some sort of administrative guest or privileged guest like DOM zero",
    "start": "868959",
    "end": "875199"
  },
  {
    "text": "root partition um which might require either privilege escalation from a regular guest to the root partition or",
    "start": "875199",
    "end": "881839"
  },
  {
    "text": "remote attack Um the rootkit could be installed from the host OS if this is a hosted virtualization um kind of",
    "start": "881839",
    "end": "888279"
  },
  {
    "text": "solution or potentially even from a uh unprivileged guest in case hypervisor",
    "start": "888279",
    "end": "894320"
  },
  {
    "text": "provides access to certain firmware interfaces uh that could be abused to the to the unprivileged guest So as an",
    "start": "894320",
    "end": "901839"
  },
  {
    "text": "example um as an example of such vulnerability is a weak protection of the",
    "start": "901839",
    "end": "907160"
  },
  {
    "text": "firmware Um so now a few words about the back door",
    "start": "907160",
    "end": "914399"
  },
  {
    "text": "So what's the what's the mechanism to install the back door uh the the we've explored a few of those and in fact",
    "start": "914399",
    "end": "921600"
  },
  {
    "text": "we've came down to uh being able to completely uh to install a backdoor which requires only one bit manipulation",
    "start": "921600",
    "end": "928800"
  },
  {
    "text": "which completely opens up uh all memory uh to one specific guest So one specific",
    "start": "928800",
    "end": "934720"
  },
  {
    "text": "guest with this one bit back door can can access all the other virtual machines This one is different So this",
    "start": "934720",
    "end": "941519"
  },
  {
    "text": "one is a little bit more reliable So um or actually easier to use So um this",
    "start": "941519",
    "end": "947920"
  },
  {
    "text": "this this back door is not one bit manipulation but it only manipulates structures It it has zero it has zero um",
    "start": "947920",
    "end": "954880"
  },
  {
    "text": "impact on the code It doesn't doesn't change any code any hypervisor code or any any other So the backdoor just um",
    "start": "954880",
    "end": "962360"
  },
  {
    "text": "basically adds a um um assume there is a rootkit So the rootkit installs that",
    "start": "962360",
    "end": "967839"
  },
  {
    "text": "back door by searching the memory the the physical memory for a uh uh VM",
    "start": "967839",
    "end": "974079"
  },
  {
    "text": "control structure or control block for a specific guest that the attacker will later control uh and then from that from",
    "start": "974079",
    "end": "981360"
  },
  {
    "text": "that point on uh the the the the the rootkit also can find the page tables",
    "start": "981360",
    "end": "986880"
  },
  {
    "text": "that protects uh that that the hypervisor is using to protect memory So",
    "start": "986880",
    "end": "991920"
  },
  {
    "text": "uh as soon as the rootkit finds those page tables uh it adds entries to those",
    "start": "991920",
    "end": "997199"
  },
  {
    "text": "page tables for that specific guest uh that open up all of the memory to that",
    "start": "997199",
    "end": "1002240"
  },
  {
    "text": "specific guest Uh from that point on that specific guest the attacker guest get attacker VM has full access to full",
    "start": "1002240",
    "end": "1009440"
  },
  {
    "text": "um uh to all of the memory um all of the VMMs and the hypervisor itself So now",
    "start": "1009440",
    "end": "1017120"
  },
  {
    "text": "let's uh let's show uh I'll show you the demo of the rootkit um compromising uh",
    "start": "1017120",
    "end": "1025678"
  },
  {
    "text": "well exposing secrets from all the VMs and I'll walk you through that",
    "start": "1025679",
    "end": "1033120"
  },
  {
    "text": "what's happening So the demo is split in two parts This is the first part It can be done offline It's just installing a a",
    "start": "1033120",
    "end": "1040160"
  },
  {
    "text": "a a rootkit into the firmware We're just refreshing the firmware because the firmware doesn't really protect itself",
    "start": "1040160",
    "end": "1046079"
  },
  {
    "text": "Well protects but we can bypass those protections right uh this could be done by a USB stick or a hardware you know a",
    "start": "1046079",
    "end": "1052960"
  },
  {
    "text": "hardware programmer or uh whatever other mechanism We're using software from the uh software attack from a root partition",
    "start": "1052960",
    "end": "1060160"
  },
  {
    "text": "Then the system um you know shut down and at some point after reboot uh the",
    "start": "1060160",
    "end": "1067520"
  },
  {
    "text": "the system boots with the hypervisor with the VMM with all of the virtual machines on it",
    "start": "1067520",
    "end": "1075519"
  },
  {
    "text": "Um just give it a couple of seconds It's not a uh it's not that fast",
    "start": "1076520",
    "end": "1084440"
  },
  {
    "text": "So you can see we have multiple VMs two victim VMs running Ubuntu and Windows",
    "start": "1084440",
    "end": "1089919"
  },
  {
    "text": "and attacker VM running Windows Um so we're running Ubuntu",
    "start": "1089919",
    "end": "1096480"
  },
  {
    "text": "Ubuntu has um Apache web server with um you know",
    "start": "1096480",
    "end": "1103760"
  },
  {
    "text": "SSL setup and we're actually generating uh we'll show you that we're generating",
    "start": "1103760",
    "end": "1109679"
  },
  {
    "text": "um um private keys RSA private keys for uh",
    "start": "1109679",
    "end": "1114720"
  },
  {
    "text": "RSA key pair for for",
    "start": "1114720",
    "end": "1118159"
  },
  {
    "text": "Yes they made me type this whole thing",
    "start": "1132799",
    "end": "1137399"
  },
  {
    "text": "So we're we're generating RSA uh uh RSA key pair Uh the private portion of the",
    "start": "1144240",
    "end": "1150000"
  },
  {
    "text": "key is go is going into this uh SSLert snake oil.key Um and the certificate the",
    "start": "1150000",
    "end": "1156320"
  },
  {
    "text": "public certificate um for for the public key uh goes into SSLert uh snake oil pam file Um so",
    "start": "1156320",
    "end": "1169400"
  },
  {
    "text": "now that's generating a certificate",
    "start": "1169400",
    "end": "1173919"
  },
  {
    "text": "request Uh the certificate is issued to Victim Corp in Las Vegas",
    "start": "1179559",
    "end": "1185840"
  },
  {
    "text": "Nevada Now let's see Apache configuration",
    "start": "1187400",
    "end": "1192760"
  },
  {
    "text": "So it's it's using all you know it's using the just the the newly generated",
    "start": "1193840",
    "end": "1199039"
  },
  {
    "text": "uh um RSA key and the",
    "start": "1199039",
    "end": "1202879"
  },
  {
    "text": "certificate restarting Apache and then you'll you'll see the private key the",
    "start": "1215080",
    "end": "1220720"
  },
  {
    "text": "RSA RSA private So that's what somebody did in that VM",
    "start": "1220720",
    "end": "1228400"
  },
  {
    "text": "That's all Um now we're launching a another victim VM",
    "start": "1228400",
    "end": "1235039"
  },
  {
    "text": "which runs Windows And in that Windows we're not doing much other than uh",
    "start": "1235039",
    "end": "1240559"
  },
  {
    "text": "opening a couple of documents One of the one of the documents is confidential The other one is super top secret document",
    "start": "1240559",
    "end": "1248760"
  },
  {
    "text": "So annual earnings confidential document of some",
    "start": "1257919",
    "end": "1265520"
  },
  {
    "text": "corporation and a product schedule which is a super top secret document of the",
    "start": "1267480",
    "end": "1272960"
  },
  {
    "text": "same corporation",
    "start": "1272960",
    "end": "1276120"
  },
  {
    "text": "So now at some point attacker gets access to its own VM The attacker fully",
    "start": "1278960",
    "end": "1284320"
  },
  {
    "text": "controls that virtual machine And remember on that system we",
    "start": "1284320",
    "end": "1292000"
  },
  {
    "text": "at some point uh we installed a rootkit in the firmware So the rootkit right now is executing It's executing every time",
    "start": "1292000",
    "end": "1298880"
  },
  {
    "text": "the system boots and then it's executing periodically That's the way we've implemented that rootkit every 8 seconds",
    "start": "1298880",
    "end": "1304080"
  },
  {
    "text": "it just um you know checks the memory Uh and so the attacker just launches the",
    "start": "1304080",
    "end": "1309520"
  },
  {
    "text": "the regular script that searches all the all of the physical memory for some",
    "start": "1309520",
    "end": "1314880"
  },
  {
    "text": "secret artifacts And we're specifically looking for uh RSA private keys and PGP",
    "start": "1314880",
    "end": "1321039"
  },
  {
    "text": "uh you know keys and uh and a and a and RTF documents And",
    "start": "1321039",
    "end": "1327240"
  },
  {
    "text": "yeah so you can see that the script found some bunch of RTF documents in a",
    "start": "1327240",
    "end": "1332559"
  },
  {
    "text": "in a in certain locations in memory and dumped them to to files",
    "start": "1332559",
    "end": "1340480"
  },
  {
    "text": "Then I found some RSA private key SSH key blob other",
    "start": "1340480",
    "end": "1347039"
  },
  {
    "text": "artifacts So all of those secrets were dumped into that directory called secrets So let's uh let's see if we got",
    "start": "1353640",
    "end": "1362200"
  },
  {
    "text": "proper secrets Searching for confidential Here's a here's some RTF",
    "start": "1362200",
    "end": "1372720"
  },
  {
    "text": "document and that's the one that was open in Windows virtual [Applause]",
    "start": "1375960",
    "end": "1383618"
  },
  {
    "text": "machine Okay So searching for super top secret Um there's no magic here If we",
    "start": "1385559",
    "end": "1392320"
  },
  {
    "text": "found the previous document we'll find that one So here's the document that we've opened",
    "start": "1392320",
    "end": "1398559"
  },
  {
    "text": "in that med victim virtual machine as",
    "start": "1398559",
    "end": "1403200"
  },
  {
    "text": "well Then searching for um RSA private",
    "start": "1405159",
    "end": "1410880"
  },
  {
    "text": "key that we've generated in in the uh Ubuntu virtual machine Um you can see",
    "start": "1412600",
    "end": "1419360"
  },
  {
    "text": "one of the one of the files is really like dump all the memory of with the with the private key",
    "start": "1419360",
    "end": "1426559"
  },
  {
    "text": "um just to make sure that it's the same key Uh you can compare it in the video later but it's the same key So we've",
    "start": "1432840",
    "end": "1440159"
  },
  {
    "text": "extracted from this uh from this attacker virtual machine with the help of backdoor",
    "start": "1440159",
    "end": "1446799"
  },
  {
    "text": "uh which modifies only structures not not a single bit of code",
    "start": "1446799",
    "end": "1454760"
  },
  {
    "text": "um in the the big door installed um by the rootkit in the firmware We've been",
    "start": "1454760",
    "end": "1461360"
  },
  {
    "text": "able to pretty much control all of the contents of of memory for all of the virtual machines including the",
    "start": "1461360",
    "end": "1466480"
  },
  {
    "text": "hypervisor uh we've only showed um you know dumping the extracting secrets but",
    "start": "1466480",
    "end": "1471840"
  },
  {
    "text": "we could have modified anything we wanted as well from this uh virtual machine So that that goes um basically",
    "start": "1471840",
    "end": "1479520"
  },
  {
    "text": "again uh again through the process I described I'll I'll I'll skip through those two slides So uh we we flashed the",
    "start": "1479520",
    "end": "1487520"
  },
  {
    "text": "rootkitted part of the firmware image from the within the root partition to install the rootkit and uh we've used",
    "start": "1487520",
    "end": "1495039"
  },
  {
    "text": "the fact that that system that we've installed that root kit on wasn't properly protecting the uh the the",
    "start": "1495039",
    "end": "1500559"
  },
  {
    "text": "firmware on the flash So it was uh it was um you know improperly configuring it So we could we could we could bypass",
    "start": "1500559",
    "end": "1506480"
  },
  {
    "text": "the right protection uh the finally more systems actually do protect their firmware on the flash and you can",
    "start": "1506480",
    "end": "1512880"
  },
  {
    "text": "actually even go and use chipsack uh framework and this module to verify that",
    "start": "1512880",
    "end": "1518159"
  },
  {
    "text": "and so uh what so what would the attacker do on those systems well uh you",
    "start": "1518159",
    "end": "1523520"
  },
  {
    "text": "know that there are vulnerabilities that would allow attacker to install that firmware root kit even if the system",
    "start": "1523520",
    "end": "1529440"
  },
  {
    "text": "firmware protecting itself on the flash and uh uh we have a little bit more well",
    "start": "1529440",
    "end": "1534640"
  },
  {
    "text": "a lot more details in the presentation we gave every con attacking defending bios uh we will explain two of those",
    "start": "1534640",
    "end": "1541919"
  },
  {
    "text": "vulnerabilities here So um additionally um as you saw we have full control over",
    "start": "1541919",
    "end": "1547760"
  },
  {
    "text": "the memory but uh we we uh we we have we have not just the we're able not just",
    "start": "1547760",
    "end": "1554400"
  },
  {
    "text": "expose secrets we can fully debug and understand how the hypervisor works without any debugging mechanism with",
    "start": "1554400",
    "end": "1560480"
  },
  {
    "text": "this firmware rootkit and you know which gives a specific VM access to full uh",
    "start": "1560480",
    "end": "1565919"
  },
  {
    "text": "memory we can deconstruct uh all all all of the critical structures that the hypervisor is using all of the VMCS",
    "start": "1565919",
    "end": "1572480"
  },
  {
    "text": "structures all the bit maps protect CMSRs and IO's for each guest Uh all of the extended page tables for each guest",
    "start": "1572480",
    "end": "1579840"
  },
  {
    "text": "the regular host and guest page tables for each of the uh you know for hypervisor and for each virtual machine",
    "start": "1579840",
    "end": "1585760"
  },
  {
    "text": "We can also reconstruct all of the page tables for MMU tables uh hypervisor",
    "start": "1585760",
    "end": "1591600"
  },
  {
    "text": "memory map including the the M exit handler and even the all of the configuration registers for all the",
    "start": "1591600",
    "end": "1597039"
  },
  {
    "text": "physical devices for all the real hardware So using that rootkit uh it it",
    "start": "1597039",
    "end": "1602320"
  },
  {
    "text": "provides to any guest it provides a full uh capability to u and in and visibility",
    "start": "1602320",
    "end": "1608559"
  },
  {
    "text": "into the hypervisor Uh this is an example So on the left side you can see u you know virtual machine control",
    "start": "1608559",
    "end": "1615600"
  },
  {
    "text": "structure uh which is you can see it's using IO bit map and on the right side",
    "start": "1615600",
    "end": "1620640"
  },
  {
    "text": "of the slide you can see the IO bit map and MMS MSR bitmaps that we've recovered from from the guest uh for the",
    "start": "1620640",
    "end": "1626640"
  },
  {
    "text": "hypervisor uh you the the the slide shows the extended page tables with fully deconstructed extended page tables",
    "start": "1626640",
    "end": "1633440"
  },
  {
    "text": "We know which pages are protected by the hypervisor which pages belong to which guest and so on So uh it it is a full",
    "start": "1633440",
    "end": "1640559"
  },
  {
    "text": "visibility into into the uh VMM So now um before we before I continue with",
    "start": "1640559",
    "end": "1648159"
  },
  {
    "text": "actually explaining what are the vulnerabilities that could be used by the guest to uh in the firmware to",
    "start": "1648159",
    "end": "1653279"
  },
  {
    "text": "attack hypervisors uh we want to um focus a little bit on the vulnerabilities uh that are um",
    "start": "1653279",
    "end": "1660279"
  },
  {
    "text": "relatively um you know relatively familiar to everyone uh the",
    "start": "1660279",
    "end": "1666720"
  },
  {
    "text": "the vulnerabilities in the way uh VMM emulate uh physical devices So and with",
    "start": "1666720",
    "end": "1672080"
  },
  {
    "text": "that I'm switching to Alex Uh hi everyone Uh my name is Alex and I",
    "start": "1672080",
    "end": "1679760"
  },
  {
    "text": "will continue this presentation So basically as you know VMM u emulate uh",
    "start": "1679760",
    "end": "1685520"
  },
  {
    "text": "hardware hardware resources to the guest So let me describe a little bit uh what",
    "start": "1685520",
    "end": "1691120"
  },
  {
    "text": "exactly VM emulate and first of all VMM emulate instructions So specific",
    "start": "1691120",
    "end": "1697159"
  },
  {
    "text": "instructions course VM exit and VMM execute the specific code to emulate the",
    "start": "1697159",
    "end": "1703120"
  },
  {
    "text": "instructions For example CPU ID and also there is specific registers name MSR uh",
    "start": "1703120",
    "end": "1710240"
  },
  {
    "text": "also VMM emulate the uh this registers",
    "start": "1710240",
    "end": "1715760"
  },
  {
    "text": "So when the guest execute um MSR read MSR write",
    "start": "1715760",
    "end": "1721640"
  },
  {
    "text": "the VM exit happen and the VM emulate the the behavior of these registers Um",
    "start": "1721640",
    "end": "1729520"
  },
  {
    "text": "another interface uh between guest and hypervisor is hyper call It's like it's",
    "start": "1729520",
    "end": "1735600"
  },
  {
    "text": "sis call for operation system but similarly hyper call for",
    "start": "1735600",
    "end": "1741559"
  },
  {
    "text": "VMM and also huge area uh with device emulation So this is two type of device",
    "start": "1741559",
    "end": "1749200"
  },
  {
    "text": "emulation IO device and MMIO device So basically VMM need to emulate all PCIe",
    "start": "1749200",
    "end": "1755440"
  },
  {
    "text": "configuration with MMIO and IO to all virtual devices to to the specific guest",
    "start": "1755440",
    "end": "1761520"
  },
  {
    "text": "and as you know there's many devices inside the guest So this is huge factor for attack and we have example for each",
    "start": "1761520",
    "end": "1769600"
  },
  {
    "text": "of these Um so uh one of the important which we want to mention that cloud",
    "start": "1769600",
    "end": "1776640"
  },
  {
    "text": "burst uh was found in 2009 by Ka Kinsky Um uh this bug in SVGA",
    "start": "1776640",
    "end": "1785840"
  },
  {
    "text": "VMR uh device emulation Uh if we talk a bit about this So uh this device has two",
    "start": "1785840",
    "end": "1792640"
  },
  {
    "text": "buffers FIFO buffer and frame buffer So frame buffer is a regular buffer for",
    "start": "1792640",
    "end": "1798480"
  },
  {
    "text": "graphic output and FIFO buffer is a buffer when the guest send the comment to the uh to to for manipulation to",
    "start": "1798480",
    "end": "1806640"
  },
  {
    "text": "manipulate this frame buffer Basically um it's like comment comment buffer and",
    "start": "1806640",
    "end": "1814559"
  },
  {
    "text": "uh in the manipulation of this buffer uh there was a bug and we start thinking maybe we can find this device in another",
    "start": "1814559",
    "end": "1822200"
  },
  {
    "text": "hypervisor and the uh virtual box and kimu for compatibility they use uh we",
    "start": "1822200",
    "end": "1829679"
  },
  {
    "text": "can enable this device in in in this hypervisor and we start look deeply uh",
    "start": "1829679",
    "end": "1834880"
  },
  {
    "text": "how they implement and uh in 200 5 and 2014 we found similar bug when you",
    "start": "1834880",
    "end": "1842080"
  },
  {
    "text": "have memory corruption integer flow which cause memory corruption um to to",
    "start": "1842080",
    "end": "1847760"
  },
  {
    "text": "exploit uh this hypervisor So basically um you can potentially make escape from",
    "start": "1847760",
    "end": "1853200"
  },
  {
    "text": "the VM uh and uh also another area um to to",
    "start": "1853200",
    "end": "1860240"
  },
  {
    "text": "describe the uh instruction emulation issue So um uh we found that uh uh",
    "start": "1860240",
    "end": "1868159"
  },
  {
    "text": "virtual box uh 3.2 uh and 4.0 4.2 uh",
    "start": "1868159",
    "end": "1873200"
  },
  {
    "text": "doesn't properly emulate MSR registers MSR access So basically if you write to",
    "start": "1873200",
    "end": "1880080"
  },
  {
    "text": "uh MSR 1B this MSR um address of epic",
    "start": "1880080",
    "end": "1885520"
  },
  {
    "text": "base um uh upper 32 bits some dummy value you get the crash for all host",
    "start": "1885520",
    "end": "1893399"
  },
  {
    "text": "system and also interesting bug was um uh in um uh instruction emulation So",
    "start": "1893399",
    "end": "1900480"
  },
  {
    "text": "basically some of the instructions should execute uh um uh who should cost",
    "start": "1900480",
    "end": "1906320"
  },
  {
    "text": "you you default in a bare metal but if you execute them inside the guest in a ring 3 they crash your VM So basically",
    "start": "1906320",
    "end": "1914159"
  },
  {
    "text": "um this type of bug can crash the cloud which analyze uh malware ring three",
    "start": "1914159",
    "end": "1919840"
  },
  {
    "text": "malware So this is kind of idea what kind of uh like how many vectors we have",
    "start": "1919840",
    "end": "1926080"
  },
  {
    "text": "to to attack the VMM from the software and how many different like devices and",
    "start": "1926080",
    "end": "1931440"
  },
  {
    "text": "so on which we have in this like huge software VMM So now Yuri will continue",
    "start": "1931440",
    "end": "1939320"
  },
  {
    "text": "the hypervisor part of attack from firmware",
    "start": "1939320",
    "end": "1945480"
  },
  {
    "text": "Hello can you hear me okay Uh so this is just um this just",
    "start": "1945519",
    "end": "1950960"
  },
  {
    "text": "puts in perspective of uh you know the the the amount of vectors the hypervisors have and the the the vectors",
    "start": "1950960",
    "end": "1958399"
  },
  {
    "text": "through the emulated devices they're relatively well understood and familiar",
    "start": "1958399",
    "end": "1963440"
  },
  {
    "text": "There are many bugs including the ones that we found uh through each of those um you know each of those uh emulation",
    "start": "1963440",
    "end": "1970960"
  },
  {
    "text": "mechanisms as Alex described What however what hasn't been explored to uh",
    "start": "1970960",
    "end": "1976399"
  },
  {
    "text": "significantly today in our opinion is the attacking hypervisor through the interfaces in the firmware and uh and",
    "start": "1976399",
    "end": "1982080"
  },
  {
    "text": "the hardware not through the emulation but through the layers underneath the hypervisor and this is what we will uh",
    "start": "1982080",
    "end": "1988880"
  },
  {
    "text": "focus on So one uh one of the two issues that we're using in in and to show those",
    "start": "1988880",
    "end": "1995120"
  },
  {
    "text": "attack vectors uh is the so-called smi pointer vulnerabilities Basically uh",
    "start": "1995120",
    "end": "2000799"
  },
  {
    "text": "without going into gory details SMI handlers is a runtime part of the uh uh the the system firmware executing in",
    "start": "2000799",
    "end": "2007519"
  },
  {
    "text": "parallel with the software stack with the hypervisor and oss and uh they need to communicate with the external world",
    "start": "2007519",
    "end": "2014159"
  },
  {
    "text": "with the with the operating system So the vulnerability was that some of the um uh many systems uh were passing",
    "start": "2014159",
    "end": "2023039"
  },
  {
    "text": "arguments um well all of them are passing arguments through the general purpose registers but many systems were",
    "start": "2023039",
    "end": "2029519"
  },
  {
    "text": "passing pointers and addresses through those general purpose uh registers and if the SMI handler doesn't validate",
    "start": "2029519",
    "end": "2035200"
  },
  {
    "text": "those pointers um and then either you know writes something to that pointer",
    "start": "2035200",
    "end": "2040559"
  },
  {
    "text": "like for example a result of the execution of the SMI handler or a status I couldn't I couldn't handle that",
    "start": "2040559",
    "end": "2046720"
  },
  {
    "text": "request So I'll write zero to that address So if the SMI handlers write anything to those pointers without",
    "start": "2046720",
    "end": "2052960"
  },
  {
    "text": "validation uh then they can override the their own memory because the the OS could just point that that that address",
    "start": "2052960",
    "end": "2059520"
  },
  {
    "text": "inside the SMA and that gets us code execution in the in the SMM So uh for",
    "start": "2059520",
    "end": "2065599"
  },
  {
    "text": "details on this specific attack uh I'm referring uh other you know our prior",
    "start": "2065599",
    "end": "2071720"
  },
  {
    "text": "presentation So this is how that would work with the hypervisors Assume that there is a uh specific virtual machine",
    "start": "2071720",
    "end": "2078480"
  },
  {
    "text": "that um that has direct access to that SMI interface and the hypervisor",
    "start": "2078480",
    "end": "2084158"
  },
  {
    "text": "basically providing that direct access to to that specific uh to that specific um um virtual machine and and in this",
    "start": "2084159",
    "end": "2090800"
  },
  {
    "text": "case this is a privilege guest This is root partition So um and uh and the and the and the hypervisor here uh basically",
    "start": "2090800",
    "end": "2098640"
  },
  {
    "text": "allows a root protection to trigger an Smi through the port B2 IO IO port B2 So",
    "start": "2098640",
    "end": "2105280"
  },
  {
    "text": "in that case the uh the the the compromised guest can uh can um um",
    "start": "2105280",
    "end": "2110720"
  },
  {
    "text": "trigger that vulnerability in the in the SMI handler in the in in the firmware and supply that pointer to first infect",
    "start": "2110720",
    "end": "2116880"
  },
  {
    "text": "the SMI handler the compromised SMI handler and then because SMI handler is running essentially underneath the",
    "start": "2116880",
    "end": "2122880"
  },
  {
    "text": "hypervisor and is not virtualized by the hypervisor um in the default uh you know",
    "start": "2122880",
    "end": "2128320"
  },
  {
    "text": "treatment without the um you smi transfer monitor uh then this SMI",
    "start": "2128320",
    "end": "2134960"
  },
  {
    "text": "handler can then extend the attack on the hypervisor and and and and and compromise it All right So we'll",
    "start": "2134960",
    "end": "2141920"
  },
  {
    "text": "we'll we'll show that demo using this specific vulnerability",
    "start": "2141920",
    "end": "2147800"
  },
  {
    "text": "Uh just",
    "start": "2147800",
    "end": "2151200"
  },
  {
    "text": "uh so what's happening here is uh we have a hyperv with root partition and",
    "start": "2154680",
    "end": "2159839"
  },
  {
    "text": "we're launching the the hyper hyperv allows root partition to uh directly trigger smi handlers So we're launching",
    "start": "2159839",
    "end": "2166800"
  },
  {
    "text": "this exploit p exploit it's called smi handler uh it provides a pointer within",
    "start": "2166800",
    "end": "2172560"
  },
  {
    "text": "the SM RAM Um then through that pointer the SMI handler overwrites itself and",
    "start": "2172560",
    "end": "2177839"
  },
  {
    "text": "this way we get code execution in the SMM Um so now we have code execution in",
    "start": "2177839",
    "end": "2183359"
  },
  {
    "text": "SMM and uh then we're launching another script",
    "start": "2183359",
    "end": "2189520"
  },
  {
    "text": "that basically you know submits a payload in the in the SMM uh and the payload would basically open up all all",
    "start": "2189520",
    "end": "2197119"
  },
  {
    "text": "of memory to to to us So including the hypervisor",
    "start": "2197119",
    "end": "2203520"
  },
  {
    "text": "memory So now we've launched that second stage which opened up all of the memory",
    "start": "2203960",
    "end": "2209280"
  },
  {
    "text": "including the hypervisor memory to us You can see that there were all fs and then now you can see some data Um um so",
    "start": "2209280",
    "end": "2217440"
  },
  {
    "text": "launching the third stage of the exploit It's just a it's just a script that dumps all the critical structure from",
    "start": "2217440",
    "end": "2222880"
  },
  {
    "text": "the hypervisor It dumps Oop I should have paused",
    "start": "2222880",
    "end": "2230319"
  },
  {
    "text": "here So it extracted uh it extracted all of the uh structures for all of the",
    "start": "2231320",
    "end": "2238320"
  },
  {
    "text": "virtual machines including where they are in the physical memory their you know their properties like uh",
    "start": "2238320",
    "end": "2244640"
  },
  {
    "text": "instruction pointer stacks and so on It extracted all of the page tables extended page tables that the hypervisor",
    "start": "2244640",
    "end": "2250960"
  },
  {
    "text": "protects Normally even even the privilege guest would never have access to that information But because of the",
    "start": "2250960",
    "end": "2258160"
  },
  {
    "text": "exploit we got full control over the hypervisor here So we we've extracted um",
    "start": "2258160",
    "end": "2263440"
  },
  {
    "text": "you know uh information about theu uh engines used by the hypervisors to",
    "start": "2263440",
    "end": "2268640"
  },
  {
    "text": "protect itself from malicious devices We've extracted the hypervisor host page tables Um at the bottom you can see even",
    "start": "2268640",
    "end": "2275599"
  },
  {
    "text": "the uh the code hypervisor code the VM exit handler the the piece of code that actually handles all of those VM exits",
    "start": "2275599",
    "end": "2281839"
  },
  {
    "text": "from the from each virtual machine and the stack of the hypervisor So we have uh we have now full control over uh um",
    "start": "2281839",
    "end": "2290320"
  },
  {
    "text": "uh the hypervisor itself and uh uh obviously the the the attack works on",
    "start": "2290320",
    "end": "2296240"
  },
  {
    "text": "also um both ways So it can it can modify any of those structures So",
    "start": "2296240",
    "end": "2304040"
  },
  {
    "text": "um this is just a screenshot of what I've just described So what is the root cause of that the root cause is you you",
    "start": "2305839",
    "end": "2312000"
  },
  {
    "text": "can see the virtual m uh the the the uh virtual machine structure control structure for for our root partition It",
    "start": "2312000",
    "end": "2319200"
  },
  {
    "text": "uses the IO bit map and you can see the IO bit map The IO bit map basically has",
    "start": "2319200",
    "end": "2324800"
  },
  {
    "text": "a handful of IO ports that cause traps to the hypervisor Therefore they are",
    "start": "2324800",
    "end": "2330800"
  },
  {
    "text": "emulated by can be emulated by the hypervisor All of the other IO ports including the port that we have used to",
    "start": "2330800",
    "end": "2336079"
  },
  {
    "text": "exploit SMI handler through uh are directly accessible to to to uh the virtual machine to the uh to the root",
    "start": "2336079",
    "end": "2343560"
  },
  {
    "text": "partition So that's the that's the root cause Now this fact was using uh well",
    "start": "2343560",
    "end": "2349520"
  },
  {
    "text": "we've actually been exploiting Smi handler first So the firmware component and then through the this firmware",
    "start": "2349520",
    "end": "2355200"
  },
  {
    "text": "component we've been exploiting a u a hypervisor But what if the bio a lot of",
    "start": "2355200",
    "end": "2361599"
  },
  {
    "text": "vendors started fixing those vulnerabilities and bias uh in the biases in the last uh sort of you know",
    "start": "2361599",
    "end": "2366880"
  },
  {
    "text": "in the last few months and they will continue fixing those for the next you know few months Uh but you know what if",
    "start": "2366880",
    "end": "2372880"
  },
  {
    "text": "there's a system that actually has an updated bias and this vulnerability is fixed um where the Smi handler actually",
    "start": "2372880",
    "end": "2379599"
  },
  {
    "text": "validates that pointer before writing anything to it So it doesn't really allow you to compromise SMI handler",
    "start": "2379599",
    "end": "2385440"
  },
  {
    "text": "anymore As you can see this path is blocked we cannot compromise SMI handler",
    "start": "2385440",
    "end": "2390480"
  },
  {
    "text": "Even in that case this is a pretty bad uh situation because there is a hypervisor that protects its own pages",
    "start": "2390480",
    "end": "2397520"
  },
  {
    "text": "using EP And if the attacker instead of uh instead of overwriting SMI handler",
    "start": "2397520",
    "end": "2403359"
  },
  {
    "text": "points that uh address into one of those protected pages the pages protected by the VMM uh it can still uh overwrite",
    "start": "2403359",
    "end": "2411440"
  },
  {
    "text": "those pages or actually it can ask Smi handler the firmware component to",
    "start": "2411440",
    "end": "2416800"
  },
  {
    "text": "overwrite that page So uh this attack is slightly different It works uh by basically",
    "start": "2416800",
    "end": "2424240"
  },
  {
    "text": "proxying but you know by proxying through the firmware to the hypervisor without actually exploiting the firmware",
    "start": "2424240",
    "end": "2431359"
  },
  {
    "text": "So the uh you can see that the virtual machine invokes with a direct access to to be able to invoke SMI handlers invoke",
    "start": "2431359",
    "end": "2438800"
  },
  {
    "text": "that vulnerability and supplies pointer to one of the VMM protected pages and then asks SMI handler to write something",
    "start": "2438800",
    "end": "2446320"
  },
  {
    "text": "to that page basically uh giving this virtual machine ability to overwrite any",
    "start": "2446320",
    "end": "2451440"
  },
  {
    "text": "page in the hypervisor and keep in mind the firmware here is fixed and that's uh that's an important point even if you",
    "start": "2451440",
    "end": "2457839"
  },
  {
    "text": "have a a fixed firm you know firmware with the fixed vulnerabilities if hypervisor provides you direct access to",
    "start": "2457839",
    "end": "2464319"
  },
  {
    "text": "that to the interfaces of that firmware the then the to to any of the virtual machines then that virtual machine can",
    "start": "2464319",
    "end": "2470800"
  },
  {
    "text": "potentially use those interfaces uh to attack hypervisor by leveraging that",
    "start": "2470800",
    "end": "2476640"
  },
  {
    "text": "that that interface as a kind of confused deputy as a proxy right so um",
    "start": "2476640",
    "end": "2481920"
  },
  {
    "text": "the there's a really nice tonomy of those kind of hardware involved software attacks including those uh you know",
    "start": "2481920",
    "end": "2487839"
  },
  {
    "text": "confused deputy attacks through the firmware uh described by Jeff Foresttol in uh the presentation that you can you",
    "start": "2487839",
    "end": "2493839"
  },
  {
    "text": "can uh you can read offline So the next issue I told about two vulnerabilities",
    "start": "2493839",
    "end": "2499920"
  },
  {
    "text": "in the firmware The next vulnerability we're using to uh attack another hypervisor We're using we're using this",
    "start": "2499920",
    "end": "2506079"
  },
  {
    "text": "vulner uh the vulnerability is uh is called S3 resume bootcript vulnerability independently discovered by by our team",
    "start": "2506079",
    "end": "2512079"
  },
  {
    "text": "as well as Rafal from Brmium and uh um Cory and Zeno from legac right it's also",
    "start": "2512079",
    "end": "2519119"
  },
  {
    "text": "we believe based on the demo it's also used um will be used by Traml and and legac uh in the thunder strike 2",
    "start": "2519119",
    "end": "2526400"
  },
  {
    "text": "tomorrow uh it's the it's the vulnerability because of you know because of the way firmware protects uh",
    "start": "2526400",
    "end": "2532880"
  },
  {
    "text": "itself when system resumes from sleep So this is how this mechanism works Um so",
    "start": "2532880",
    "end": "2538960"
  },
  {
    "text": "there's a there's a there's a you know the firmware needs to boot faster when it when the system resumes from sleep In",
    "start": "2538960",
    "end": "2545760"
  },
  {
    "text": "normal boot it executes all of the Dixie code and performs all the configuration of the hardware Uh but in addition to",
    "start": "2545760",
    "end": "2553200"
  },
  {
    "text": "configuring hardware all of that code is recording information into the table",
    "start": "2553200",
    "end": "2558480"
  },
  {
    "text": "called S3 bootcript table And when the system put in sleep and then resume from sleep then all of that firmware is not",
    "start": "2558480",
    "end": "2565280"
  },
  {
    "text": "executing So that it saves you time a lot of time uh when your system resumes",
    "start": "2565280",
    "end": "2571599"
  },
  {
    "text": "So instead of executing all that firmware the um uh the firmware runs just one script interpreter engine which",
    "start": "2571599",
    "end": "2577920"
  },
  {
    "text": "takes that boot script table and interprets it and restores all of the hardware configuration per that table So",
    "start": "2577920",
    "end": "2586079"
  },
  {
    "text": "this is what this table contains It's just a set of sequence of up codes The the up codes that restore configuration",
    "start": "2586079",
    "end": "2592160"
  },
  {
    "text": "Some of the up codes restore memory mapped IO registers like the the the screenshot Some of them restore PCI",
    "start": "2592160",
    "end": "2598640"
  },
  {
    "text": "configuration registers Some of them restore IO ports Some of them restore some of them are needed to do more",
    "start": "2598640",
    "end": "2604160"
  },
  {
    "text": "complex actions So they they just jump to arbitrary code the dispatch of codes So this is how this mechanism uh can can",
    "start": "2604160",
    "end": "2611119"
  },
  {
    "text": "can be uh uh abused because uh if the hypervisor provides access to",
    "start": "2611119",
    "end": "2618160"
  },
  {
    "text": "that table to the virtual machine let's say the privileged uh guest in this case",
    "start": "2618160",
    "end": "2624000"
  },
  {
    "text": "we're using DOM zero on ZAM if that table is available to that guest and",
    "start": "2624000",
    "end": "2629040"
  },
  {
    "text": "this is just a uh you know structure in memory so it's just access to memory in that case the exploit within that guest",
    "start": "2629040",
    "end": "2635520"
  },
  {
    "text": "can uh modify the up codes within that bootcript table put the system in sleep and upon sleep uh upon resume from sleep",
    "start": "2635520",
    "end": "2643440"
  },
  {
    "text": "the firmware would interpret a completely malicious uh S3 bootcript table and the up codes and will you know",
    "start": "2643440",
    "end": "2649920"
  },
  {
    "text": "execute arbitrary code or override arbitrary memory uh therefore basically compromising anything on the system",
    "start": "2649920",
    "end": "2656240"
  },
  {
    "text": "above it including the uh the the Zen hypervisor and and and so on So this is",
    "start": "2656240",
    "end": "2662079"
  },
  {
    "text": "the um um Zen um uh this is the demo on ZAN from you know using this attack from",
    "start": "2662079",
    "end": "2668560"
  },
  {
    "text": "a uh DOM DOM zero Uh this is just a screenshot I'll show you a demo So um",
    "start": "2668560",
    "end": "2674400"
  },
  {
    "text": "and uh at the end of uh at the end of exploit again um our uh virtual machine",
    "start": "2674400",
    "end": "2680000"
  },
  {
    "text": "privileged guest in this case has full control over the memory and structures of the hypervisor So I'll um I'll switch",
    "start": "2680000",
    "end": "2686560"
  },
  {
    "text": "to um to NS3 uh exploit against",
    "start": "2686560",
    "end": "2693560"
  },
  {
    "text": "uh Zen hypervisor",
    "start": "2693560",
    "end": "2697880"
  },
  {
    "text": "So",
    "start": "2701839",
    "end": "2704160"
  },
  {
    "text": "um so we have Zen um with and then we're running in DOM",
    "start": "2710760",
    "end": "2719200"
  },
  {
    "text": "zero From DOM zero we're launching this proof of concept exploit which modifies",
    "start": "2719480",
    "end": "2725119"
  },
  {
    "text": "uh the S3 bootcript table Well first we're launching a tool that tries to find the critical structures of the",
    "start": "2725119",
    "end": "2731440"
  },
  {
    "text": "hypervisor and it cannot find them Uh but then uh after that we're launching the the exploit The exploit u modifies",
    "start": "2731440",
    "end": "2739440"
  },
  {
    "text": "one of the up codes in the S3 bootcript table the dispatch up code which will then get called when the system the",
    "start": "2739440",
    "end": "2745520"
  },
  {
    "text": "firmware resumes from sleep So our code will get executed on on resume from",
    "start": "2745520",
    "end": "2751480"
  },
  {
    "text": "sleep Then uh we're basically just putting the uh system into S3 state into",
    "start": "2751480",
    "end": "2757920"
  },
  {
    "text": "sleep using RTC wake",
    "start": "2757920",
    "end": "2761838"
  },
  {
    "text": "command It's going to take a couple seconds to wake So now uh our system uh",
    "start": "2766680",
    "end": "2774000"
  },
  {
    "text": "woken up from from resume from S3 state from sleep or suspend to RAM All the",
    "start": "2774000",
    "end": "2780319"
  },
  {
    "text": "state all the contents of memory are preserved in S3 state So now we're",
    "start": "2780319",
    "end": "2786000"
  },
  {
    "text": "launching the same script that we've launched before the exploit and now we can see all of the all of the structures",
    "start": "2786000",
    "end": "2791760"
  },
  {
    "text": "So we found all of the uh all of the um virtual machine control structures",
    "start": "2791760",
    "end": "2798440"
  },
  {
    "text": "um right the for for let's say for root partition sorry So uh that just",
    "start": "2798440",
    "end": "2806839"
  },
  {
    "text": "basically demonstrates that we have access to all of the all of the",
    "start": "2806839",
    "end": "2812720"
  },
  {
    "text": "structures protected by the by the hypervisor regardless of which guest it is privileged or unprivileged None of",
    "start": "2812720",
    "end": "2819359"
  },
  {
    "text": "the guests should have access to any of those structures because those are those are essential structures pro providing",
    "start": "2819359",
    "end": "2825520"
  },
  {
    "text": "protection of the hypervisor and isolation between the guests So now uh",
    "start": "2825520",
    "end": "2830640"
  },
  {
    "text": "using that exploit we can uh we can uh fully modify or dump those structures So",
    "start": "2830640",
    "end": "2837359"
  },
  {
    "text": "that that was the demo So that that the",
    "start": "2837359",
    "end": "2842800"
  },
  {
    "text": "if we go back to uh to when invisible things lab explored they they've already explored uh those kind of a um you know",
    "start": "2842800",
    "end": "2850480"
  },
  {
    "text": "mechanisms to use um to use firmware in this case legacy bias or MBR uh to",
    "start": "2850480",
    "end": "2857599"
  },
  {
    "text": "either compromise a hypervisor or install a um you know hypervisor underneath it blue pill hypervisor So uh",
    "start": "2857599",
    "end": "2864319"
  },
  {
    "text": "this is basically um you know the same idea So all of those vulnerabilities um",
    "start": "2864319",
    "end": "2872520"
  },
  {
    "text": "were exploitable from a privileged guest either a DOM zero or root petition Um so",
    "start": "2872520",
    "end": "2879520"
  },
  {
    "text": "that either requires you privilege escalation from a normal guest to root partition or a remote exploit in the",
    "start": "2879520",
    "end": "2885200"
  },
  {
    "text": "root partition Um um so uh which sort of um kind of a limits the impact However",
    "start": "2885200",
    "end": "2892000"
  },
  {
    "text": "what about the use cases uh where the guests uh must be strongly isolated from",
    "start": "2892000",
    "end": "2897440"
  },
  {
    "text": "the root partition uh so we've uh we've heard uh presentation by Seth um from",
    "start": "2897440",
    "end": "2903760"
  },
  {
    "text": "Microsoft today about the Windows 10 um um new OS B you know virtualization",
    "start": "2903760",
    "end": "2909760"
  },
  {
    "text": "basic area model uh so we are uh working with Microsoft on uh making sure that",
    "start": "2909760",
    "end": "2915839"
  },
  {
    "text": "those attacks are not uh applicable and don't affect uh this new virtualization",
    "start": "2915839",
    "end": "2921440"
  },
  {
    "text": "based security model of Windows 10 So now with um all of those attacks what",
    "start": "2921440",
    "end": "2928000"
  },
  {
    "text": "are the mitigations available today or tools first of all the first thing first",
    "start": "2928000",
    "end": "2933280"
  },
  {
    "text": "if your firmware has vulnerabilities it they need to be fixed because if if we as we saw vulnerabilities in the",
    "start": "2933280",
    "end": "2939280"
  },
  {
    "text": "firmware are pretty pretty uh pretty bad for hypervisors Uh so there are tools",
    "start": "2939280",
    "end": "2945119"
  },
  {
    "text": "available to test for all of those vulnerabilities that I um uh described right in the um in the chipsack",
    "start": "2945119",
    "end": "2952000"
  },
  {
    "text": "framework There are also tools that test you allow you to test if your firmware is right protected Um all the",
    "start": "2952000",
    "end": "2958880"
  },
  {
    "text": "protections are in place Then hypervisors the u obviously the uh you",
    "start": "2958880",
    "end": "2964319"
  },
  {
    "text": "know the uh the the hypervisors needs to be tested for vulnerabilities in the emulating uh devices and we're releasing",
    "start": "2964319",
    "end": "2971440"
  },
  {
    "text": "a number of simple tests that test all of those vectors emulation vectors that",
    "start": "2971440",
    "end": "2976800"
  },
  {
    "text": "uh Alex described in this presentation So and also we are releasing some of the tools that can allow you to explore the",
    "start": "2976800",
    "end": "2983119"
  },
  {
    "text": "internals of the hypervisor Now how do we deal with the firmware attacks",
    "start": "2983119",
    "end": "2989559"
  },
  {
    "text": "um the there's there are a number of interfaces through which firmware can be exploited UFI variables SMI handlers S3",
    "start": "2989559",
    "end": "2996480"
  },
  {
    "text": "bootcript this pi flash memory map.io and so on So the the the",
    "start": "2996480",
    "end": "3002440"
  },
  {
    "text": "the in in certain cases the firmware doesn't know uh the pages protected by",
    "start": "3002440",
    "end": "3007760"
  },
  {
    "text": "the hypervisor So VMs need to be very careful with uh which interfaces it",
    "start": "3007760",
    "end": "3012880"
  },
  {
    "text": "exposes to guests including the privileged guests Um and conclusions So",
    "start": "3012880",
    "end": "3017920"
  },
  {
    "text": "compromised firmware is bad news for virtualization for VMM It can expose anything in every guest Uh Windows 10",
    "start": "3017920",
    "end": "3025440"
  },
  {
    "text": "with Windows 10 it enables path for firmware deployment via the Windows update which is a very big step forward",
    "start": "3025440",
    "end": "3031599"
  },
  {
    "text": "you know toward the security of the firmware Uh secure privileged or administrative guests uh make sure that",
    "start": "3031599",
    "end": "3038880"
  },
  {
    "text": "you don't you know they're uh very tightened because attacks from those",
    "start": "3038880",
    "end": "3044160"
  },
  {
    "text": "matter they can compromise everything in the hypervisor Uh the vulnerabilities in the device and CPU emulation are very",
    "start": "3044160",
    "end": "3050559"
  },
  {
    "text": "common So we need to fuzz every the emulation interfaces and the firmware interfaces and features may affect",
    "start": "3050559",
    "end": "3057119"
  },
  {
    "text": "hypervisor security if exposed to the guests So both need to be designed both",
    "start": "3057119",
    "end": "3062960"
  },
  {
    "text": "hypervisors and firmware to be aware of each other Even if the firmware is uh",
    "start": "3062960",
    "end": "3069200"
  },
  {
    "text": "free of vulnerabilities the firmware can be used as a proxy as a confused deputy",
    "start": "3069200",
    "end": "3074240"
  },
  {
    "text": "uh uh to attack hypervisor from within the virtual machine And with that I'm concluding uh this presentation Thank",
    "start": "3074240",
    "end": "3081200"
  },
  {
    "text": "you [Applause]",
    "start": "3081200",
    "end": "3088789"
  }
]