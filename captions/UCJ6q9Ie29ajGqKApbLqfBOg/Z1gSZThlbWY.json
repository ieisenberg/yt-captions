[
  {
    "text": "this segment is brought to you by Black",
    "start": "4200",
    "end": "5640"
  },
  {
    "text": "Hills information security the source",
    "start": "5640",
    "end": "7560"
  },
  {
    "text": "for all your penetration testing and",
    "start": "7560",
    "end": "9639"
  },
  {
    "text": "active defense needs visit them on the",
    "start": "9639",
    "end": "11559"
  },
  {
    "text": "web at blackhills infos sec.com founder",
    "start": "11559",
    "end": "15879"
  },
  {
    "text": "and CEO John strand is here with us say",
    "start": "15879",
    "end": "17439"
  },
  {
    "text": "hi",
    "start": "17439",
    "end": "18119"
  },
  {
    "text": "John hello everybody and also with us is",
    "start": "18119",
    "end": "22600"
  },
  {
    "text": "Ty Miller making his second appearance",
    "start": "22600",
    "end": "24439"
  },
  {
    "text": "here on security weekly Ty welcome back",
    "start": "24439",
    "end": "27039"
  },
  {
    "text": "hey guys thank you very much and Ty you",
    "start": "27039",
    "end": "30279"
  },
  {
    "text": "you've prepared a um technical segment",
    "start": "30279",
    "end": "32880"
  },
  {
    "text": "based on your black hat training course",
    "start": "32880",
    "end": "34320"
  },
  {
    "text": "the Shell Code",
    "start": "34320",
    "end": "35600"
  },
  {
    "text": "lab that's right so I'm going to step",
    "start": "35600",
    "end": "38160"
  },
  {
    "text": "through some one of the labs that are in",
    "start": "38160",
    "end": "40360"
  },
  {
    "text": "the Shell Code lab um just demonstrate",
    "start": "40360",
    "end": "43160"
  },
  {
    "text": "some some basic Shell Code that some of",
    "start": "43160",
    "end": "45840"
  },
  {
    "text": "the the students uh learn so I mean one",
    "start": "45840",
    "end": "49360"
  },
  {
    "text": "of the things that we um or all of the",
    "start": "49360",
    "end": "52680"
  },
  {
    "text": "things that we sort of use in the Shell",
    "start": "52680",
    "end": "54320"
  },
  {
    "text": "Code lab goes from teaching guys who",
    "start": "54320",
    "end": "56960"
  },
  {
    "text": "have never even touched assembly before",
    "start": "56960",
    "end": "59800"
  },
  {
    "text": "um one of the first questions I ask in",
    "start": "59800",
    "end": "61640"
  },
  {
    "text": "the Shell Code lab is how many have have",
    "start": "61640",
    "end": "64239"
  },
  {
    "text": "even done assembly and 95% of them have",
    "start": "64239",
    "end": "67280"
  },
  {
    "text": "never even looked at it before and uh",
    "start": "67280",
    "end": "70119"
  },
  {
    "text": "when you when you look at sort of what",
    "start": "70119",
    "end": "71439"
  },
  {
    "text": "they're doing at the end of it it's",
    "start": "71439",
    "end": "72640"
  },
  {
    "text": "pretty inspirational to see that you",
    "start": "72640",
    "end": "74759"
  },
  {
    "text": "know like pretty much everyone is um",
    "start": "74759",
    "end": "77320"
  },
  {
    "text": "creating their own custom Port bind",
    "start": "77320",
    "end": "79320"
  },
  {
    "text": "Shell Code for Mac OSX 64 and uh Windows",
    "start": "79320",
    "end": "83400"
  },
  {
    "text": "Shell Code and sort of you know",
    "start": "83400",
    "end": "85600"
  },
  {
    "text": "integrating that into metas payload",
    "start": "85600",
    "end": "87960"
  },
  {
    "text": "modules and compromising machines and",
    "start": "87960",
    "end": "89759"
  },
  {
    "text": "all those sort of things so it's it's",
    "start": "89759",
    "end": "91479"
  },
  {
    "text": "pretty awesome sounds like good times",
    "start": "91479",
    "end": "94040"
  },
  {
    "text": "yeah it is it's a lot of",
    "start": "94040",
    "end": "96759"
  },
  {
    "text": "fun so Ty uh it's your show now so take",
    "start": "96759",
    "end": "100200"
  },
  {
    "text": "it away and okay so um amaz and Astound",
    "start": "100200",
    "end": "106560"
  },
  {
    "text": "us okay so I'm just going to share my",
    "start": "106719",
    "end": "109360"
  },
  {
    "text": "screen so um this lab is lab four so by",
    "start": "109360",
    "end": "114320"
  },
  {
    "text": "this point in the uh in the training",
    "start": "114320",
    "end": "116799"
  },
  {
    "text": "we've sort of already gone through some",
    "start": "116799",
    "end": "118399"
  },
  {
    "text": "of the Shell Code coner steps uh and",
    "start": "118399",
    "end": "122159"
  },
  {
    "text": "taught them basic assembly and uh things",
    "start": "122159",
    "end": "125000"
  },
  {
    "text": "like uh shell coding techniques like um",
    "start": "125000",
    "end": "129440"
  },
  {
    "text": "you know minimizing the size of your",
    "start": "129440",
    "end": "131080"
  },
  {
    "text": "shell code and removing nulls from your",
    "start": "131080",
    "end": "133760"
  },
  {
    "text": "shell code so that you don't break",
    "start": "133760",
    "end": "135120"
  },
  {
    "text": "buffers and all those sort of things uh",
    "start": "135120",
    "end": "138000"
  },
  {
    "text": "so this one's basically a command",
    "start": "138000",
    "end": "141360"
  },
  {
    "text": "execution shellco where you Bas where",
    "start": "141360",
    "end": "143760"
  },
  {
    "text": "you're uh creating Shell Code for say a",
    "start": "143760",
    "end": "147400"
  },
  {
    "text": "local exploit um for privilege ES and",
    "start": "147400",
    "end": "150440"
  },
  {
    "text": "you want to jump from say a normal user",
    "start": "150440",
    "end": "152560"
  },
  {
    "text": "shell to a a root",
    "start": "152560",
    "end": "154800"
  },
  {
    "text": "shell uh",
    "start": "154800",
    "end": "157239"
  },
  {
    "text": "so first thing where you basically get",
    "start": "157239",
    "end": "160720"
  },
  {
    "text": "given um there's like 16 Labs uh that we",
    "start": "160720",
    "end": "164360"
  },
  {
    "text": "go through in the Shell Code lab and the",
    "start": "164360",
    "end": "167159"
  },
  {
    "text": "first thing uh that we really do is sort",
    "start": "167159",
    "end": "169599"
  },
  {
    "text": "of go through how uh how assembly is",
    "start": "169599",
    "end": "174280"
  },
  {
    "text": "structured and the files are structured",
    "start": "174280",
    "end": "175840"
  },
  {
    "text": "so you can see up here that the uh we've",
    "start": "175840",
    "end": "178400"
  },
  {
    "text": "got section. text and that's basically",
    "start": "178400",
    "end": "180319"
  },
  {
    "text": "saying that we're going to be writing",
    "start": "180319",
    "end": "182280"
  },
  {
    "text": "code we're not going to be defining",
    "start": "182280",
    "end": "183920"
  },
  {
    "text": "variables or anything like that because",
    "start": "183920",
    "end": "186120"
  },
  {
    "text": "when you think about Shell Code you",
    "start": "186120",
    "end": "187959"
  },
  {
    "text": "basically injecting your shell code in",
    "start": "187959",
    "end": "189959"
  },
  {
    "text": "the middle of a running process so",
    "start": "189959",
    "end": "191640"
  },
  {
    "text": "you've got to be WR writing your",
    "start": "191640",
    "end": "193519"
  },
  {
    "text": "assembly for the code section um we then",
    "start": "193519",
    "end": "197640"
  },
  {
    "text": "specify the the architecture that you're",
    "start": "197640",
    "end": "199840"
  },
  {
    "text": "writing it for so for the Shell Code lab",
    "start": "199840",
    "end": "202239"
  },
  {
    "text": "we since you're dealing with people who",
    "start": "202239",
    "end": "204840"
  },
  {
    "text": "have never done assembly before we sort",
    "start": "204840",
    "end": "206480"
  },
  {
    "text": "of teach them assembly and then we start",
    "start": "206480",
    "end": "208400"
  },
  {
    "text": "with Linux 3 2 bit assembly so that it's",
    "start": "208400",
    "end": "212200"
  },
  {
    "text": "um you know a little bit simpler and",
    "start": "212200",
    "end": "214840"
  },
  {
    "text": "then we ramp up to you know 64bit OSX",
    "start": "214840",
    "end": "218120"
  },
  {
    "text": "and windows and then start integrating",
    "start": "218120",
    "end": "219879"
  },
  {
    "text": "it into exploit so um this one's one of",
    "start": "219879",
    "end": "222599"
  },
  {
    "text": "the earlier ones um I didn't want to",
    "start": "222599",
    "end": "224840"
  },
  {
    "text": "sort of start uh demoing how to ride neg",
    "start": "224840",
    "end": "228680"
  },
  {
    "text": "Hunter shelo because they're pretty",
    "start": "228680",
    "end": "230959"
  },
  {
    "text": "confusing in the way that you have to",
    "start": "230959",
    "end": "232280"
  },
  {
    "text": "structure it because they're designed to",
    "start": "232280",
    "end": "233680"
  },
  {
    "text": "be really",
    "start": "233680",
    "end": "235280"
  },
  {
    "text": "small um so one of the things I say when",
    "start": "235280",
    "end": "239360"
  },
  {
    "text": "I'm from the sh code lab is that uh it's",
    "start": "239360",
    "end": "243000"
  },
  {
    "text": "been designed to really hold your hand",
    "start": "243000",
    "end": "245079"
  },
  {
    "text": "so because you're teaching people",
    "start": "245079",
    "end": "246879"
  },
  {
    "text": "assembly who have never done assembly",
    "start": "246879",
    "end": "248599"
  },
  {
    "text": "and by the end of it you want them to be",
    "start": "248599",
    "end": "250439"
  },
  {
    "text": "Masters in it um I really hold the hand",
    "start": "250439",
    "end": "253480"
  },
  {
    "text": "in that in in being able to help them",
    "start": "253480",
    "end": "258320"
  },
  {
    "text": "progress rather than get stuck on stuff",
    "start": "258320",
    "end": "260400"
  },
  {
    "text": "that you would typically just Google for",
    "start": "260400",
    "end": "262280"
  },
  {
    "text": "so I provide them things like uh so for",
    "start": "262280",
    "end": "265280"
  },
  {
    "text": "the for this particular example we're",
    "start": "265280",
    "end": "267400"
  },
  {
    "text": "spawning a shell so we're going to be",
    "start": "267400",
    "end": "268800"
  },
  {
    "text": "doing calling two functions we're going",
    "start": "268800",
    "end": "270680"
  },
  {
    "text": "to be setting uh the real and effective",
    "start": "270680",
    "end": "273880"
  },
  {
    "text": "user ID using the CIS call set Ru ID and",
    "start": "273880",
    "end": "278639"
  },
  {
    "text": "then we're going to be spawning a new",
    "start": "278639",
    "end": "281000"
  },
  {
    "text": "shell um using the Cisco exact V so you",
    "start": "281000",
    "end": "285120"
  },
  {
    "text": "can see along the top here we've got the",
    "start": "285120",
    "end": "287520"
  },
  {
    "text": "uh the registers um that we need to set",
    "start": "287520",
    "end": "291320"
  },
  {
    "text": "up and then we've got the values or the",
    "start": "291320",
    "end": "294120"
  },
  {
    "text": "parameters and things that we're",
    "start": "294120",
    "end": "295320"
  },
  {
    "text": "actually going to put into our registers",
    "start": "295320",
    "end": "297639"
  },
  {
    "text": "um so the CIS call number for set uid is",
    "start": "297639",
    "end": "301479"
  },
  {
    "text": "203 uh We've then got so in HEX uh",
    "start": "301479",
    "end": "305320"
  },
  {
    "text": "that's CB and that goes into eax we then",
    "start": "305320",
    "end": "308320"
  },
  {
    "text": "have the real user ID um which is going",
    "start": "308320",
    "end": "311320"
  },
  {
    "text": "to go into evx so in this case we're",
    "start": "311320",
    "end": "313199"
  },
  {
    "text": "going to be or in most cases for short",
    "start": "313199",
    "end": "315400"
  },
  {
    "text": "coding you want to get root access right",
    "start": "315400",
    "end": "317440"
  },
  {
    "text": "so uh we're going to be putting that to",
    "start": "317440",
    "end": "319840"
  },
  {
    "text": "zero to be root and the effective user",
    "start": "319840",
    "end": "322639"
  },
  {
    "text": "ID um we're going to be setting ECX to",
    "start": "322639",
    "end": "325400"
  },
  {
    "text": "zero so that it's root again so if we",
    "start": "325400",
    "end": "327880"
  },
  {
    "text": "jump straight into it um",
    "start": "327880",
    "end": "331639"
  },
  {
    "text": "uh the way that you",
    "start": "331639",
    "end": "333520"
  },
  {
    "text": "uh the first thing you need to do in sh",
    "start": "333520",
    "end": "336319"
  },
  {
    "text": "coding is to zero out a register um so",
    "start": "336319",
    "end": "339720"
  },
  {
    "text": "you typically can't assume that your",
    "start": "339720",
    "end": "342919"
  },
  {
    "text": "registers are going to be zero because",
    "start": "342919",
    "end": "346280"
  },
  {
    "text": "like I said before as you're injecting",
    "start": "346280",
    "end": "348960"
  },
  {
    "text": "our code into the middle of a running",
    "start": "348960",
    "end": "351000"
  },
  {
    "text": "process your registers could be anything",
    "start": "351000",
    "end": "353319"
  },
  {
    "text": "right so first thing we want to do is",
    "start": "353319",
    "end": "356160"
  },
  {
    "text": "clear out um eax because we're going to",
    "start": "356160",
    "end": "359360"
  },
  {
    "text": "use that first and that's done by xoring",
    "start": "359360",
    "end": "362319"
  },
  {
    "text": "something xoring the register with",
    "start": "362319",
    "end": "364080"
  },
  {
    "text": "itself so if you exor something with",
    "start": "364080",
    "end": "365759"
  },
  {
    "text": "itself the end result is zero and that's",
    "start": "365759",
    "end": "368240"
  },
  {
    "text": "an efficient way of actually clearing",
    "start": "368240",
    "end": "369960"
  },
  {
    "text": "out a register uh so the next thing",
    "start": "369960",
    "end": "372599"
  },
  {
    "text": "we're going to do is move um into eax Ox",
    "start": "372599",
    "end": "378440"
  },
  {
    "text": "CB and that is if we have a look up here",
    "start": "378440",
    "end": "381919"
  },
  {
    "text": "that's the CIS call number so when",
    "start": "381919",
    "end": "384160"
  },
  {
    "text": "you're when you're shell coding for uh",
    "start": "384160",
    "end": "387199"
  },
  {
    "text": "Unix based systems you're using uh CIS",
    "start": "387199",
    "end": "390039"
  },
  {
    "text": "calls and um they have specific numbers",
    "start": "390039",
    "end": "394319"
  },
  {
    "text": "assigned to them and uh you know I",
    "start": "394319",
    "end": "396840"
  },
  {
    "text": "provide all of those up here in this CIS",
    "start": "396840",
    "end": "398639"
  },
  {
    "text": "calls. text file if the students want to",
    "start": "398639",
    "end": "400639"
  },
  {
    "text": "go and have a look at it um and then the",
    "start": "400639",
    "end": "403280"
  },
  {
    "text": "next thing we want to do is set the real",
    "start": "403280",
    "end": "405120"
  },
  {
    "text": "and effective user ID which up here",
    "start": "405120",
    "end": "407319"
  },
  {
    "text": "again we can see going to ebx and",
    "start": "407319",
    "end": "409680"
  },
  {
    "text": "ECX uh so we're going to oops going to",
    "start": "409680",
    "end": "413319"
  },
  {
    "text": "XR",
    "start": "413319",
    "end": "415039"
  },
  {
    "text": "ebx with itself to zero it out and same",
    "start": "415039",
    "end": "418160"
  },
  {
    "text": "thing with ECX",
    "start": "418160",
    "end": "421520"
  },
  {
    "text": "and",
    "start": "422840",
    "end": "423599"
  },
  {
    "text": "then to call tell the Kel to call the",
    "start": "423599",
    "end": "427720"
  },
  {
    "text": "function um you do int 80 so the colonel",
    "start": "427720",
    "end": "431400"
  },
  {
    "text": "is then going to go to that function",
    "start": "431400",
    "end": "434560"
  },
  {
    "text": "pull all the corresponding registers out",
    "start": "434560",
    "end": "436919"
  },
  {
    "text": "or the values out and then execute the",
    "start": "436919",
    "end": "439080"
  },
  {
    "text": "function for you so at that point uh",
    "start": "439080",
    "end": "441440"
  },
  {
    "text": "We've basically run the set R ID",
    "start": "441440",
    "end": "444919"
  },
  {
    "text": "function um to get root access or",
    "start": "444919",
    "end": "448039"
  },
  {
    "text": "maintain root access um depending upon",
    "start": "448039",
    "end": "450800"
  },
  {
    "text": "what you're actually",
    "start": "450800",
    "end": "452000"
  },
  {
    "text": "doing so the next thing we're going to",
    "start": "452000",
    "end": "454400"
  },
  {
    "text": "be doing is uh doing the exact V",
    "start": "454400",
    "end": "457560"
  },
  {
    "text": "function and that's to spawn a new",
    "start": "457560",
    "end": "460759"
  },
  {
    "text": "process uh so again students have",
    "start": "460759",
    "end": "464720"
  },
  {
    "text": "provided with all of the information",
    "start": "464720",
    "end": "466319"
  },
  {
    "text": "that they need to app Point um so the",
    "start": "466319",
    "end": "470159"
  },
  {
    "text": "CIS call number for exact V is 11 which",
    "start": "470159",
    "end": "473560"
  },
  {
    "text": "comes to a b which goes into eax so the",
    "start": "473560",
    "end": "476360"
  },
  {
    "text": "CIS number always goes into eax and this",
    "start": "476360",
    "end": "479159"
  },
  {
    "text": "is sort of learned uh earlier in the",
    "start": "479159",
    "end": "482039"
  },
  {
    "text": "course um then we have evx uh which we",
    "start": "482039",
    "end": "486800"
  },
  {
    "text": "can see is a pointer to a string and",
    "start": "486800",
    "end": "489159"
  },
  {
    "text": "that's um going to be a pointer to our",
    "start": "489159",
    "end": "493479"
  },
  {
    "text": "Command that we're going to be",
    "start": "493479",
    "end": "495520"
  },
  {
    "text": "running um ECX and edx you can see are",
    "start": "495520",
    "end": "498960"
  },
  {
    "text": "Pointers to pointers uh and they're",
    "start": "498960",
    "end": "502120"
  },
  {
    "text": "basically the um pointers to the",
    "start": "502120",
    "end": "505960"
  },
  {
    "text": "arguments that we're passing to the",
    "start": "505960",
    "end": "508400"
  },
  {
    "text": "function or to the command and the",
    "start": "508400",
    "end": "511000"
  },
  {
    "text": "environment variables that we're passing",
    "start": "511000",
    "end": "512640"
  },
  {
    "text": "to the command um so in this case we",
    "start": "512640",
    "end": "514719"
  },
  {
    "text": "just want to spawn a shell we don't we",
    "start": "514719",
    "end": "516360"
  },
  {
    "text": "don't want to pass any environment",
    "start": "516360",
    "end": "517959"
  },
  {
    "text": "variables or um you know any argument so",
    "start": "517959",
    "end": "522120"
  },
  {
    "text": "we can actually set those Point those to",
    "start": "522120",
    "end": "526360"
  },
  {
    "text": "nulls um so what you see here which is",
    "start": "526360",
    "end": "530240"
  },
  {
    "text": "already being filled out is a thing",
    "start": "530240",
    "end": "532519"
  },
  {
    "text": "called uh jump call Pop technique which",
    "start": "532519",
    "end": "536120"
  },
  {
    "text": "is used to uh locate a hardcoded string",
    "start": "536120",
    "end": "541560"
  },
  {
    "text": "um so because we're running somewhere in",
    "start": "541560",
    "end": "544480"
  },
  {
    "text": "memory that we don't actually know where",
    "start": "544480",
    "end": "546959"
  },
  {
    "text": "we are um we we can't just sort of",
    "start": "546959",
    "end": "551000"
  },
  {
    "text": "start defining parameters and things",
    "start": "551000",
    "end": "554040"
  },
  {
    "text": "like that because we don't know where",
    "start": "554040",
    "end": "556079"
  },
  {
    "text": "they're defined and all those sort of",
    "start": "556079",
    "end": "557399"
  },
  {
    "text": "things we're in the middle of a running",
    "start": "557399",
    "end": "559120"
  },
  {
    "text": "process so so we've down the bottom here",
    "start": "559120",
    "end": "562399"
  },
  {
    "text": "we've defi defined bin Dash as the",
    "start": "562399",
    "end": "566200"
  },
  {
    "text": "command that we're going to be",
    "start": "566200",
    "end": "567760"
  },
  {
    "text": "executing um and this is how you hard",
    "start": "567760",
    "end": "570440"
  },
  {
    "text": "code a string in Shell Code so use the",
    "start": "570440",
    "end": "573279"
  },
  {
    "text": "DB instruction so we've got bin Dash and",
    "start": "573279",
    "end": "576519"
  },
  {
    "text": "then we've got you need to null",
    "start": "576519",
    "end": "578959"
  },
  {
    "text": "terminate um the string so that you know",
    "start": "578959",
    "end": "582240"
  },
  {
    "text": "the exact V function knows where the",
    "start": "582240",
    "end": "584360"
  },
  {
    "text": "where the actual string finishes so the",
    "start": "584360",
    "end": "586519"
  },
  {
    "text": "N is a null",
    "start": "586519",
    "end": "588560"
  },
  {
    "text": "placeholder and then before we mention",
    "start": "588560",
    "end": "591000"
  },
  {
    "text": "that we need to have a pointer to the",
    "start": "591000",
    "end": "593880"
  },
  {
    "text": "arguments and po it to the environment",
    "start": "593880",
    "end": "597120"
  },
  {
    "text": "variable so the a here to be Ned out",
    "start": "597120",
    "end": "601000"
  },
  {
    "text": "because we don't want any",
    "start": "601000",
    "end": "603440"
  },
  {
    "text": "um any arguments being passed to it um",
    "start": "603440",
    "end": "608240"
  },
  {
    "text": "but we still need to point ECX to a null",
    "start": "608240",
    "end": "612000"
  },
  {
    "text": "um same with the B's here we need to",
    "start": "612000",
    "end": "613760"
  },
  {
    "text": "point edx to a set of nulls so so what",
    "start": "613760",
    "end": "616920"
  },
  {
    "text": "that's doing basically by the time we",
    "start": "616920",
    "end": "618399"
  },
  {
    "text": "get to this point um we've defined the",
    "start": "618399",
    "end": "621560"
  },
  {
    "text": "string we've located it and we've popped",
    "start": "621560",
    "end": "624360"
  },
  {
    "text": "the address of that string off the",
    "start": "624360",
    "end": "626519"
  },
  {
    "text": "stack so so Ty this this sh cod's",
    "start": "626519",
    "end": "629519"
  },
  {
    "text": "running on the stack in this",
    "start": "629519",
    "end": "631839"
  },
  {
    "text": "case uh it's no no so it can be running",
    "start": "631839",
    "end": "636880"
  },
  {
    "text": "anywhere so this it really depends on",
    "start": "636880",
    "end": "639720"
  },
  {
    "text": "what your exploit is doing right but",
    "start": "639720",
    "end": "641360"
  },
  {
    "text": "typically this is going to be your",
    "start": "641360",
    "end": "642920"
  },
  {
    "text": "exploit would have uh allocated say an",
    "start": "642920",
    "end": "647440"
  },
  {
    "text": "executable um chunk of memory and then",
    "start": "647440",
    "end": "650440"
  },
  {
    "text": "copied this into the memory and then",
    "start": "650440",
    "end": "652200"
  },
  {
    "text": "executed it I see so you get around",
    "start": "652200",
    "end": "653920"
  },
  {
    "text": "Stack execution prevention which comes",
    "start": "653920",
    "end": "655680"
  },
  {
    "text": "even in 32-bit Linux kernels right uh",
    "start": "655680",
    "end": "659079"
  },
  {
    "text": "yeah and I mean it again it sort of",
    "start": "659079",
    "end": "661959"
  },
  {
    "text": "depends really it's up to the exploit to",
    "start": "661959",
    "end": "664440"
  },
  {
    "text": "get to that point I guess where you know",
    "start": "664440",
    "end": "667079"
  },
  {
    "text": "they could be using R chains and all",
    "start": "667079",
    "end": "668720"
  },
  {
    "text": "those sort of things to to find",
    "start": "668720",
    "end": "671440"
  },
  {
    "text": "somewhere to execute stuff right right",
    "start": "671440",
    "end": "673800"
  },
  {
    "text": "um or it could just be you could grab",
    "start": "673800",
    "end": "675480"
  },
  {
    "text": "this Shell Code and actually convert it",
    "start": "675480",
    "end": "677040"
  },
  {
    "text": "into a into a rchain",
    "start": "677040",
    "end": "679040"
  },
  {
    "text": "itself um so really it depends on you",
    "start": "679040",
    "end": "682120"
  },
  {
    "text": "know the type of system that you're",
    "start": "682120",
    "end": "684279"
  },
  {
    "text": "exploiting um as well as the exploit",
    "start": "684279",
    "end": "686519"
  },
  {
    "text": "that you're using and and things like",
    "start": "686519",
    "end": "688240"
  },
  {
    "text": "that um but in this case uh when we",
    "start": "688240",
    "end": "691200"
  },
  {
    "text": "actually compile this um I'll show you",
    "start": "691200",
    "end": "694240"
  },
  {
    "text": "the Shell Code compiler uh where it",
    "start": "694240",
    "end": "697120"
  },
  {
    "text": "actually execute it compiles it extracts",
    "start": "697120",
    "end": "699920"
  },
  {
    "text": "it shell code and then creates a XE for",
    "start": "699920",
    "end": "702800"
  },
  {
    "text": "you so that you can just run an",
    "start": "702800",
    "end": "704639"
  },
  {
    "text": "executable to kick off your shell code",
    "start": "704639",
    "end": "706279"
  },
  {
    "text": "so you don't actually have to mess",
    "start": "706279",
    "end": "707480"
  },
  {
    "text": "around with trying to exploit something",
    "start": "707480",
    "end": "711160"
  },
  {
    "text": "um you know to actually just test out",
    "start": "711160",
    "end": "713200"
  },
  {
    "text": "your shell",
    "start": "713200",
    "end": "714800"
  },
  {
    "text": "code um so uh yeah so again first thing",
    "start": "714800",
    "end": "719560"
  },
  {
    "text": "we want to do is uh ex or eax because we",
    "start": "719560",
    "end": "722720"
  },
  {
    "text": "don't know at this point um what the",
    "start": "722720",
    "end": "726279"
  },
  {
    "text": "value of eax is so even though we've",
    "start": "726279",
    "end": "729519"
  },
  {
    "text": "exhorted up the top here um at this",
    "start": "729519",
    "end": "732160"
  },
  {
    "text": "point because we haven't actually run",
    "start": "732160",
    "end": "733320"
  },
  {
    "text": "the Shell Code yet we don't know if set",
    "start": "733320",
    "end": "736320"
  },
  {
    "text": "our uid is actually return something",
    "start": "736320",
    "end": "738519"
  },
  {
    "text": "into eax so we don't know if it's null",
    "start": "738519",
    "end": "740440"
  },
  {
    "text": "so we can't make that assumption at this",
    "start": "740440",
    "end": "742040"
  },
  {
    "text": "point so what I say to my students is",
    "start": "742040",
    "end": "744240"
  },
  {
    "text": "that you basically want to write your",
    "start": "744240",
    "end": "746360"
  },
  {
    "text": "shell code to be functional to begin",
    "start": "746360",
    "end": "748199"
  },
  {
    "text": "with um and comment everything and then",
    "start": "748199",
    "end": "750880"
  },
  {
    "text": "after that you um you you want to then",
    "start": "750880",
    "end": "755120"
  },
  {
    "text": "go back and then start um you know sort",
    "start": "755120",
    "end": "758199"
  },
  {
    "text": "of condensing it down and optimizing it",
    "start": "758199",
    "end": "760279"
  },
  {
    "text": "and removing",
    "start": "760279",
    "end": "763000"
  }
]