[
  {
    "text": "hello everyone Welcome to our presentation we are a security team from tenson security sh live today we will be",
    "start": "4680",
    "end": "12840"
  },
  {
    "text": "presentating on the topic Reviving G wi abilities unleashing the power of M",
    "start": "12840",
    "end": "19359"
  },
  {
    "text": "compiler box on Chrome browser uh my name is Wun I mainly",
    "start": "19359",
    "end": "26760"
  },
  {
    "text": "focused on broader security and curent security and my partner specializes in both security and software security he's",
    "start": "26760",
    "end": "34520"
  },
  {
    "text": "also a Chrome Google Chrome Bug Hunter first of all let me introduce our",
    "start": "34520",
    "end": "40879"
  },
  {
    "text": "research Target M laab compiler and related knowledge there are two typical",
    "start": "40879",
    "end": "46719"
  },
  {
    "text": "compilers one is aot compiler also known as static compiler it translates the",
    "start": "46719",
    "end": "53680"
  },
  {
    "text": "entire source code into machine code before running the program they are commonly used in static",
    "start": "53680",
    "end": "60680"
  },
  {
    "text": "languages such as C and C++ it has a low cost on memory the other one is a git",
    "start": "60680",
    "end": "67880"
  },
  {
    "text": "compiler which is mainly suitable for dynamic languages such as Java and",
    "start": "67880",
    "end": "73240"
  },
  {
    "text": "JavaScript it performs realtime optimization by analyzing the information in the running program its",
    "start": "73240",
    "end": "81000"
  },
  {
    "text": "optimization methods are more diverse so the quality of the code is",
    "start": "81000",
    "end": "86280"
  },
  {
    "text": "high we8 is the JavaScript compiler in Google Chrome as shown in the diagram",
    "start": "86280",
    "end": "92759"
  },
  {
    "text": "where it passes the source code file turns it into an abstract syx tree it",
    "start": "92759",
    "end": "98520"
  },
  {
    "text": "produces various B codes and use speculative optimizations to get B code",
    "start": "98520",
    "end": "105040"
  },
  {
    "text": "the generated code will be translated into machine code based on the",
    "start": "105040",
    "end": "111479"
  },
  {
    "text": "architecture turun is the optimization compiler of we8 it has a type system it",
    "start": "111479",
    "end": "118600"
  },
  {
    "text": "performs type anal is on the code so the smarter decisions can be made for",
    "start": "118600",
    "end": "124680"
  },
  {
    "text": "example if the type system can determine that a variable will always be of",
    "start": "124680",
    "end": "130560"
  },
  {
    "text": "integer type during its lifetime turbofun can avoid generating code that",
    "start": "130560",
    "end": "135840"
  },
  {
    "text": "handles floating Point numbers thereby improving execution",
    "start": "135840",
    "end": "142280"
  },
  {
    "text": "efficiency turun generates highly quality code but the complicated",
    "start": "142319",
    "end": "148160"
  },
  {
    "text": "optimization results in low speed to address this issue we8 introduced a",
    "start": "148160",
    "end": "153920"
  },
  {
    "text": "nonoptimized compiler called spark plug spark plug traverses the b c of loading",
    "start": "153920",
    "end": "161519"
  },
  {
    "text": "complex operations to builtins and reuse ignition to accelerate",
    "start": "161519",
    "end": "168720"
  },
  {
    "text": "compilation this part will explain why we choose megalab compiler as our Target",
    "start": "168720",
    "end": "175120"
  },
  {
    "text": "first of all the bug of jit compiler has high exploitability",
    "start": "175120",
    "end": "180280"
  },
  {
    "text": "in recent years many in the world box in Chrome have been found in the turbofun",
    "start": "180280",
    "end": "186519"
  },
  {
    "text": "compiler and the Google security team also noticed that and increased its",
    "start": "186519",
    "end": "192640"
  },
  {
    "text": "defense investment in turo fund thus man bug exploration techniques have been",
    "start": "192640",
    "end": "199319"
  },
  {
    "text": "fixed so if even if the bug exists it it is more difficult to",
    "start": "199319",
    "end": "206360"
  },
  {
    "text": "exploit over the past year the ma la comp project has seen rapid development",
    "start": "206360",
    "end": "212720"
  },
  {
    "text": "progress by July of this year the basic development was complete completed as",
    "start": "212720",
    "end": "218920"
  },
  {
    "text": "shown in the picture on the right mag's number of commits in the past year far",
    "start": "218920",
    "end": "225120"
  },
  {
    "text": "exceeded that of turo fund magav has some similar similar optimization system",
    "start": "225120",
    "end": "231439"
  },
  {
    "text": "like turo fund which made it a good targeted to discover uh let's learn about the design",
    "start": "231439",
    "end": "239200"
  },
  {
    "text": "and Implement implementation of the maglab compiler maglab is an optimizing",
    "start": "239200",
    "end": "246200"
  },
  {
    "text": "compiler based on SSA its design goal is to achieve faster compilation speed than",
    "start": "246200",
    "end": "253200"
  },
  {
    "text": "turbofan and better code quality than spark plog the overall completion",
    "start": "253200",
    "end": "258400"
  },
  {
    "text": "process can be divided into the following stages which we will introduce one by",
    "start": "258400",
    "end": "264720"
  },
  {
    "text": "one SSA means static single allocation",
    "start": "264720",
    "end": "269960"
  },
  {
    "text": "representation each variable can only be allocated and defined once before they",
    "start": "269960",
    "end": "275320"
  },
  {
    "text": "they are be used as shown in the figure one the two branches assign values to Y",
    "start": "275320",
    "end": "282400"
  },
  {
    "text": "respectively in order to get the SSA node we need to create two variables y1",
    "start": "282400",
    "end": "288199"
  },
  {
    "text": "and Y2 in the bottom basic block of figure two W2 is not sure about using y1",
    "start": "288199",
    "end": "294880"
  },
  {
    "text": "or Y2 so the F node is used to indicate that as y1 or Y2 is",
    "start": "294880",
    "end": "302520"
  },
  {
    "text": "selected during the graph building phase ma lab convert converts B code into SSA",
    "start": "303600",
    "end": "309680"
  },
  {
    "text": "nodes and creates final for loops and exception handlers additionally it",
    "start": "309680",
    "end": "315759"
  },
  {
    "text": "spelles basic blocks based on fin notes and control noes and creates contextual",
    "start": "315759",
    "end": "321600"
  },
  {
    "text": "snapshots at creal nodes for the optimization furthermore mic laab also",
    "start": "321600",
    "end": "328199"
  },
  {
    "text": "performs in linning of operations based on feedback information when in counting",
    "start": "328199",
    "end": "333600"
  },
  {
    "text": "complex builtins representation selection is",
    "start": "333600",
    "end": "339039"
  },
  {
    "text": "prepared for f and tagging after the graph construction all five noes are",
    "start": "339039",
    "end": "344800"
  },
  {
    "text": "tagged however in some situations if both the input and output values are",
    "start": "344800",
    "end": "350560"
  },
  {
    "text": "untacked maal compiler will do unnecessary",
    "start": "350560",
    "end": "355800"
  },
  {
    "text": "operations therefore mag laab introduces untagged file to address this issue it",
    "start": "356240",
    "end": "362800"
  },
  {
    "text": "identifies the types of the inputs and analyzes cases where both input and",
    "start": "362800",
    "end": "369319"
  },
  {
    "text": "output are untagged then it converts tagged finals to untagged finals to",
    "start": "369319",
    "end": "375599"
  },
  {
    "text": "avoid useless operations in this stage maglab",
    "start": "375599",
    "end": "380919"
  },
  {
    "text": "generates some necessary information for register allocating it removes dat nodes",
    "start": "380919",
    "end": "387080"
  },
  {
    "text": "generates register constraint between between inputs and outputs finds the",
    "start": "387080",
    "end": "392199"
  },
  {
    "text": "maximum number of parameters for function calls and collects information",
    "start": "392199",
    "end": "398000"
  },
  {
    "text": "about node uses for evaluating the lifetime of SSA",
    "start": "398000",
    "end": "404280"
  },
  {
    "text": "nodes in this stage magal traverses all noes in the graph and me allocation the",
    "start": "404520",
    "end": "411360"
  },
  {
    "text": "allocation is based on linear scan algorithm the first step is to calculate",
    "start": "411360",
    "end": "417280"
  },
  {
    "text": "post domaining holes which are points that break the assumtion of linear",
    "start": "417280",
    "end": "423039"
  },
  {
    "text": "linear scanning next it allocates registers and stack Lots utilizing a",
    "start": "423039",
    "end": "429680"
  },
  {
    "text": "cach for efficient allocation it also modes for register",
    "start": "429680",
    "end": "436360"
  },
  {
    "text": "recycling the code generation phase is based on function templates it traverses",
    "start": "436360",
    "end": "443039"
  },
  {
    "text": "the node graph emitting deferred deferred code and creating return points",
    "start": "443039",
    "end": "450080"
  },
  {
    "text": "for the optimization if the input breaks the",
    "start": "450080",
    "end": "456240"
  },
  {
    "text": "assumtion of magal compiler it will jump to the corresponding deoptimization",
    "start": "456240",
    "end": "461639"
  },
  {
    "text": "label and falls back to the runtime to execute the back code in Turan due to",
    "start": "461639",
    "end": "468159"
  },
  {
    "text": "the presence of the type system the frame State needs to store a significant",
    "start": "468159",
    "end": "474159"
  },
  {
    "text": "amount of information such as the contest and the local variables where in meal the node system is designed to be",
    "start": "474159",
    "end": "481879"
  },
  {
    "text": "simpler and the frame state only STS key value pairs of register and",
    "start": "481879",
    "end": "488960"
  },
  {
    "text": "nose comparing megalab with turbofan turbofan has a clear distinction between",
    "start": "488960",
    "end": "496319"
  },
  {
    "text": "high level and lowlevel nodes while magav does not as far as the",
    "start": "496319",
    "end": "501360"
  },
  {
    "text": "optimization phase both of them perform aligning however megalab tries to mutate",
    "start": "501360",
    "end": "509280"
  },
  {
    "text": "noes well toopan reduces noes from high level to low",
    "start": "509280",
    "end": "515200"
  },
  {
    "text": "level during the deoptimization they have similar designs",
    "start": "515200",
    "end": "520479"
  },
  {
    "text": "by using frame state to store the contest by the but they store different",
    "start": "520479",
    "end": "527279"
  },
  {
    "text": "information in terms of vulnerability they expose similar attack surfaces on",
    "start": "527279",
    "end": "533880"
  },
  {
    "text": "register allocation in lining and deoptimization and maive",
    "start": "533880",
    "end": "540240"
  },
  {
    "text": "has unique attack surface on five and T face besides M lives deoptimization mm",
    "start": "540240",
    "end": "549959"
  },
  {
    "text": "differs slightly from Turan and mishandling of leave registers can lead",
    "start": "549959",
    "end": "555800"
  },
  {
    "text": "to vulnerabilities furthermore megalab has special optimization of certain syntax",
    "start": "555800",
    "end": "562680"
  },
  {
    "text": "structures like exception handling and Loops which turbofan does not",
    "start": "562680",
    "end": "571120"
  },
  {
    "text": "in this chapter we will talk about how to conduct vulnerability research on",
    "start": "571800",
    "end": "577560"
  },
  {
    "text": "M after borrowing the experience from turo fund we figured out that that there",
    "start": "577560",
    "end": "583920"
  },
  {
    "text": "are three useful methods for bug hunting they are crash based fathers like Father",
    "start": "583920",
    "end": "590360"
  },
  {
    "text": "Le and d and differential FS like f git and git peer also the code source code",
    "start": "590360",
    "end": "598800"
  },
  {
    "text": "audit it and we can we we could have some useful tools like code ql to help",
    "start": "598800",
    "end": "604240"
  },
  {
    "text": "with that crash based fing is our primary",
    "start": "604240",
    "end": "609399"
  },
  {
    "text": "method for vulnerability discover we enabled fing test megalab added special",
    "start": "609399",
    "end": "615600"
  },
  {
    "text": "function templates also we built the father under arm and arm",
    "start": "615600",
    "end": "621120"
  },
  {
    "text": "1640 architectures based down we8 Simulator the father found multiple",
    "start": "621120",
    "end": "626240"
  },
  {
    "text": "security bugs as for differential further we carried out secondary development of J",
    "start": "626240",
    "end": "634120"
  },
  {
    "text": "Pier which is an open source uh project after four days we got about three bucks",
    "start": "634120",
    "end": "642240"
  },
  {
    "text": "however after analysis we found that this box are not security related this",
    "start": "642240",
    "end": "648120"
  },
  {
    "text": "is because micab compiler does not have a tab system which prevents the",
    "start": "648120",
    "end": "653360"
  },
  {
    "text": "calculation errors into mismatch in tab system like like Turan",
    "start": "653360",
    "end": "660800"
  },
  {
    "text": "we also wrote some QR queries for typical bug patterns for example if the",
    "start": "660800",
    "end": "666839"
  },
  {
    "text": "source code allows running user defined Jaz code in promise cback there might be",
    "start": "666839",
    "end": "673639"
  },
  {
    "text": "a side effect problem additionally we summarized the root cause of issues we",
    "start": "673639",
    "end": "680040"
  },
  {
    "text": "have found in the in the before and as a result we",
    "start": "680040",
    "end": "686240"
  },
  {
    "text": "discovered a new bug which we have reported to Google the following picture shows that",
    "start": "686240",
    "end": "693800"
  },
  {
    "text": "the timeline of our research Google started developing maav compiler in February",
    "start": "693800",
    "end": "699800"
  },
  {
    "text": "2022 on March 16 we adopted maav compiler in the father but due to some",
    "start": "699800",
    "end": "706680"
  },
  {
    "text": "mistakes we did not really put it into work until September the class father",
    "start": "706680",
    "end": "712440"
  },
  {
    "text": "introduced support for mag live after after 3 days we discover the first rce",
    "start": "712440",
    "end": "718680"
  },
  {
    "text": "when abilities and by June 2023 Chrome officially introduced magal",
    "start": "718680",
    "end": "725680"
  },
  {
    "text": "compiler in their release Blog the debugger is very helpful in bug",
    "start": "725680",
    "end": "732399"
  },
  {
    "text": "analysis turo fund talizer converts the optimized node into a graphical",
    "start": "732399",
    "end": "738880"
  },
  {
    "text": "interface so we can debug it by tracking the change in the nodes at it stage mag",
    "start": "738880",
    "end": "745519"
  },
  {
    "text": "laab also implements a tracking system which outputs nodes and basic blocks to",
    "start": "745519",
    "end": "751519"
  },
  {
    "text": "the terminal each node contains its less range and register",
    "start": "751519",
    "end": "757399"
  },
  {
    "text": "allocation information you can also track the representation selecting of input and output during file and",
    "start": "757399",
    "end": "764880"
  },
  {
    "text": "taging okay welcome to my partner B to uh continue with the second part thank",
    "start": "764880",
    "end": "772120"
  },
  {
    "text": "you okay thanks my partner for sharing the part one which introduced how we",
    "start": "776279",
    "end": "783440"
  },
  {
    "text": "understand the magl and how to F back it I'm Bal from tensent security sh La",
    "start": "783440",
    "end": "790760"
  },
  {
    "text": "let's continue the part two we will talk some interesting cases in Marl found by",
    "start": "790760",
    "end": "796079"
  },
  {
    "text": "the methodology mentioned before in the following section I will",
    "start": "796079",
    "end": "801880"
  },
  {
    "text": "analyze some typical bugs that I found during different comping stages in m to",
    "start": "801880",
    "end": "808839"
  },
  {
    "text": "show the attack surfaces in it the first state is graph building",
    "start": "808839",
    "end": "815279"
  },
  {
    "text": "it's mainly the conversion from B Cod to SS there are some aligning operations in",
    "start": "815279",
    "end": "822160"
  },
  {
    "text": "it this is one of the most problematic stage for other jet",
    "start": "822160",
    "end": "828240"
  },
  {
    "text": "compilers then comes the representation uh selecting stage which mainly involves",
    "start": "828240",
    "end": "834839"
  },
  {
    "text": "the type conversion of uh each node it's a unical attack Su uh in magl and",
    "start": "834839",
    "end": "843240"
  },
  {
    "text": "register allocation mainly does memory allocation and register scheding of nose",
    "start": "843240",
    "end": "849759"
  },
  {
    "text": "there has also been problems in other J compilers finally there is the",
    "start": "849759",
    "end": "856519"
  },
  {
    "text": "optimization which includes conversion between different levels of",
    "start": "856519",
    "end": "862240"
  },
  {
    "text": "optimizers it's also a more common but less ConEd attack",
    "start": "862240",
    "end": "867480"
  },
  {
    "text": "surfes in this talk I will mainly introduce the Box in graph building",
    "start": "867480",
    "end": "874040"
  },
  {
    "text": "register location and the optimization okay let's begin first let's come to the graph",
    "start": "874040",
    "end": "882040"
  },
  {
    "text": "building stage this stage mainly does three things create basic block add",
    "start": "882040",
    "end": "888759"
  },
  {
    "text": "nodes to basic block reduce some complex uh building call the thir point is most",
    "start": "888759",
    "end": "895399"
  },
  {
    "text": "prone to problems so as a developer how to reduce",
    "start": "895399",
    "end": "901000"
  },
  {
    "text": "cost generally speaking the git compiler usually generat optimized code based on",
    "start": "901000",
    "end": "908959"
  },
  {
    "text": "the object type in the feedback it usually refers to the fast",
    "start": "908959",
    "end": "914320"
  },
  {
    "text": "pass in the buildy exploited by unoptimized executor if not me de optimize it so how",
    "start": "914320",
    "end": "924399"
  },
  {
    "text": "to fan box we can carefully compare the code in the optimization stage in Marl",
    "start": "924399",
    "end": "931839"
  },
  {
    "text": "with the code in buy including checks and other implementation details to find",
    "start": "931839",
    "end": "939880"
  },
  {
    "text": "out the differences according to this idea we can take a look at this bar it appears",
    "start": "939880",
    "end": "948040"
  },
  {
    "text": "when optimizing a streen do prototype dochart code at this function Returns",
    "start": "948040",
    "end": "954800"
  },
  {
    "text": "the character at the index position as a number number the code on the left is",
    "start": "954800",
    "end": "962000"
  },
  {
    "text": "the implementation of runtime function in ignition compiler it covers the index controlled",
    "start": "962000",
    "end": "970319"
  },
  {
    "text": "by user into an unsigned integer and Compares it with the length of",
    "start": "970319",
    "end": "978120"
  },
  {
    "text": "streen the code on the right is an optimization code in maow you can see",
    "start": "978120",
    "end": "985040"
  },
  {
    "text": "that it use checked inter 32 condition IR to compare index with lens use using",
    "start": "985040",
    "end": "992680"
  },
  {
    "text": "a kless mode so what does the IR generate when generating machine code",
    "start": "992680",
    "end": "1000160"
  },
  {
    "text": "for this IR the kless mode is used to adapt the logic to the optimize when the",
    "start": "1000160",
    "end": "1007120"
  },
  {
    "text": "condition was are not me but the final code here you can see is compare and",
    "start": "1007120",
    "end": "1015240"
  },
  {
    "text": "jump greater eal this code is sign uh comparation according to the menu",
    "start": "1015240",
    "end": "1022959"
  },
  {
    "text": "here this is different from the buildings so when the index is a",
    "start": "1022959",
    "end": "1028959"
  },
  {
    "text": "negative number the code will be not uh will not be deoptimized and directly",
    "start": "1028959",
    "end": "1035400"
  },
  {
    "text": "return W according to the number resulting in a forward Auto bance read",
    "start": "1035400",
    "end": "1041438"
  },
  {
    "text": "one bite we can see this here it's why the POC crashes",
    "start": "1041439",
    "end": "1049600"
  },
  {
    "text": "but is this just out of bound read one bite according to our understanding of",
    "start": "1049600",
    "end": "1056760"
  },
  {
    "text": "V8 Hep this stream will be allocated in Old space during the complying F other",
    "start": "1056760",
    "end": "1064039"
  },
  {
    "text": "objects will be allocated in new space when run time and this kind of object",
    "start": "1064039",
    "end": "1069960"
  },
  {
    "text": "address is just before old space so when",
    "start": "1069960",
    "end": "1075280"
  },
  {
    "text": "continuously read or uh search we a Sim streen like this here we just use a stab",
    "start": "1075280",
    "end": "1083679"
  },
  {
    "text": "ofite and we can also search the uh special flag we get a powerful primitive",
    "start": "1083679",
    "end": "1092039"
  },
  {
    "text": "address of object next we enter the register",
    "start": "1092039",
    "end": "1098000"
  },
  {
    "text": "allocation state which is mainly related to some registers and memory",
    "start": "1098000",
    "end": "1104480"
  },
  {
    "text": "location in maoud each node will be located Stacks load for storage in different",
    "start": "1104480",
    "end": "1112159"
  },
  {
    "text": "basic blocks registers will be used to catch the values of those noes used to",
    "start": "1112159",
    "end": "1118679"
  },
  {
    "text": "speed up a size at this stage there there may be conflicts between read and",
    "start": "1118679",
    "end": "1125400"
  },
  {
    "text": "WR size to registers for example e 1 2",
    "start": "1125400",
    "end": "1130880"
  },
  {
    "text": "96 876 is in left left off web Zam",
    "start": "1130880",
    "end": "1136799"
  },
  {
    "text": "compilers just location cision caus the value to be modified during use and",
    "start": "1136799",
    "end": "1143400"
  },
  {
    "text": "leads to type confusion so are there any register",
    "start": "1143400",
    "end": "1148679"
  },
  {
    "text": "allocation Collision cases in M let's look at this isue this is a",
    "start": "1148679",
    "end": "1156080"
  },
  {
    "text": "standard F PC pattern it seems to be in a constant Loop which may lead to",
    "start": "1156080",
    "end": "1163360"
  },
  {
    "text": "further optimization this bug seems to be related to the Loop structure as we",
    "start": "1163360",
    "end": "1170640"
  },
  {
    "text": "mentioned before special handling leads to special",
    "start": "1170640",
    "end": "1176200"
  },
  {
    "text": "bug we know that Ma L is already in optimized state but it's not the final",
    "start": "1176200",
    "end": "1184080"
  },
  {
    "text": "state so when there are enough Loops it still be optimized in",
    "start": "1184080",
    "end": "1190039"
  },
  {
    "text": "turbofan a tyed all stack replacement is generated in the loop structure after",
    "start": "1190039",
    "end": "1197559"
  },
  {
    "text": "the looping enough times this code will determine how to further optimize first",
    "start": "1197559",
    "end": "1204600"
  },
  {
    "text": "it will try to directly replace the cach Teran code otherwise it will try to",
    "start": "1204600",
    "end": "1210919"
  },
  {
    "text": "build the Teran code and de optimize for further processing there is a interesting SC",
    "start": "1210919",
    "end": "1218640"
  },
  {
    "text": "which has been marked in right here spark plug compiler has another",
    "start": "1218640",
    "end": "1226840"
  },
  {
    "text": "name based line so the code of spark Mark compiler is",
    "start": "1226840",
    "end": "1231960"
  },
  {
    "text": "reduced during processing here in this code it applies for a scratch register",
    "start": "1231960",
    "end": "1239320"
  },
  {
    "text": "to save the object a code object which mainly a register for",
    "start": "1239320",
    "end": "1245600"
  },
  {
    "text": "transition so what is the scratch register in spark plug it preserve x14",
    "start": "1245600",
    "end": "1253960"
  },
  {
    "text": "X15 and x19 for extra registers it used",
    "start": "1253960",
    "end": "1259000"
  },
  {
    "text": "them in order for saving time this is uh this seems a exception",
    "start": "1259000",
    "end": "1266640"
  },
  {
    "text": "so when calling a qu scrp it will return x14 first but is is the assment",
    "start": "1266640",
    "end": "1275480"
  },
  {
    "text": "universal for in magl it seems not by chasing the magl",
    "start": "1275480",
    "end": "1282440"
  },
  {
    "text": "register allocation we can get the x14 should be alive when the optimization",
    "start": "1282440",
    "end": "1288720"
  },
  {
    "text": "since it's sto storing the value of variable 257",
    "start": "1288720",
    "end": "1296200"
  },
  {
    "text": "here so what's the value of variable 257 by chasing the data flow we can find",
    "start": "1296360",
    "end": "1304320"
  },
  {
    "text": "that the location here should be a Contex Contex value from here to here",
    "start": "1304320",
    "end": "1311840"
  },
  {
    "text": "and this the contest value we found that the location uh and",
    "start": "1311840",
    "end": "1318600"
  },
  {
    "text": "then it will be S into frame state so when the optimization happened",
    "start": "1318600",
    "end": "1326080"
  },
  {
    "text": "a type confusion occurs we should get a context rather than a a small integer",
    "start": "1326080",
    "end": "1332559"
  },
  {
    "text": "here The Bu in the same stage also be e 136",
    "start": "1332559",
    "end": "1339080"
  },
  {
    "text": "8046 it's a type confusion bu caused by another register location Collision we",
    "start": "1339080",
    "end": "1345320"
  },
  {
    "text": "can see that there are more boxs in register location than same stage in other",
    "start": "1345320",
    "end": "1351640"
  },
  {
    "text": "compilers this might be more register scheding in this",
    "start": "1351640",
    "end": "1357200"
  },
  {
    "text": "stage the next part is box in the optimization the optimization means that",
    "start": "1357200",
    "end": "1364799"
  },
  {
    "text": "when it's found that the optimized code is not enough to support the current",
    "start": "1364799",
    "end": "1369840"
  },
  {
    "text": "input or state it will jump to the nonoptimized state to continue",
    "start": "1369840",
    "end": "1376960"
  },
  {
    "text": "execution the process is storing the contest snapshot at every deoptimization",
    "start": "1376960",
    "end": "1383480"
  },
  {
    "text": "point and materializing the JavaScript object according to FR State using the",
    "start": "1383480",
    "end": "1390799"
  },
  {
    "text": "snapshot finally jumping to the back code position when optim with optimize",
    "start": "1390799",
    "end": "1398480"
  },
  {
    "text": "States in Tera this is a point that receive less attention and but there",
    "start": "1398480",
    "end": "1405240"
  },
  {
    "text": "still are some interesting type confusion box here so and difference",
    "start": "1405240",
    "end": "1411360"
  },
  {
    "text": "between the optimization isue in Turan and",
    "start": "1411360",
    "end": "1416760"
  },
  {
    "text": "magl so let's look at this issue it's",
    "start": "1416880",
    "end": "1422279"
  },
  {
    "text": "also a COR sample found by fing which lead to an out of bonds right caused by",
    "start": "1422279",
    "end": "1428559"
  },
  {
    "text": "type confusion we can see that",
    "start": "1428559",
    "end": "1433640"
  },
  {
    "text": "here oh",
    "start": "1433640",
    "end": "1439000"
  },
  {
    "text": "in the first Loop the the input parameter is always object four so it's",
    "start": "1439000",
    "end": "1445640"
  },
  {
    "text": "the target of magl optimization in the second part here",
    "start": "1445640",
    "end": "1451039"
  },
  {
    "text": "when the J Code founds that the input is a small integer one instead of object",
    "start": "1451039",
    "end": "1457200"
  },
  {
    "text": "four it will bail out to ignition so what kind of R will de",
    "start": "1457200",
    "end": "1464919"
  },
  {
    "text": "optimize this is mildly reflected in is",
    "start": "1464919",
    "end": "1470360"
  },
  {
    "text": "properties when eager deup or lazy de exists in its AR properties here and",
    "start": "1470360",
    "end": "1478080"
  },
  {
    "text": "here it means that this node may lead to De optimize eager means do it here",
    "start": "1478080",
    "end": "1484520"
  },
  {
    "text": "immediately laser means do it at nice check after analyze say we located the",
    "start": "1484520",
    "end": "1492200"
  },
  {
    "text": "bug in the a check maps with migration let's look take a look at what",
    "start": "1492200",
    "end": "1499320"
  },
  {
    "text": "the AR do first it saving all registers",
    "start": "1499320",
    "end": "1504640"
  },
  {
    "text": "according to the reg snapshot of node before Auto call at",
    "start": "1504640",
    "end": "1510480"
  },
  {
    "text": "one and then it calls runtime function uh try migrate instance for checking at",
    "start": "1510480",
    "end": "1519279"
  },
  {
    "text": "two and it checks runtime status to determine whether to De optimize if",
    "start": "1519279",
    "end": "1526200"
  },
  {
    "text": "deoptimized it requ car is ignition contest according to frame State and",
    "start": "1526200",
    "end": "1531520"
  },
  {
    "text": "continue executing in ignition we know that the information",
    "start": "1531520",
    "end": "1537679"
  },
  {
    "text": "used during register receiving and Recovery is different for register receiving Mass",
    "start": "1537679",
    "end": "1545320"
  },
  {
    "text": "all analyis results know as live live register are",
    "start": "1545320",
    "end": "1551440"
  },
  {
    "text": "used well the recovery used the analysis results of bad code analysis a frame",
    "start": "1551440",
    "end": "1558919"
  },
  {
    "text": "state will the difference here cause",
    "start": "1558919",
    "end": "1564600"
  },
  {
    "text": "problems the result is positive for live registers it represents the resistors",
    "start": "1564679",
    "end": "1572760"
  },
  {
    "text": "that will still be used after the node ends and frame set represents the",
    "start": "1572760",
    "end": "1578840"
  },
  {
    "text": "register stat during the operation of this node for",
    "start": "1578840",
    "end": "1584760"
  },
  {
    "text": "example the R8 in this picture represents the mipe need to be checked",
    "start": "1585039",
    "end": "1592399"
  },
  {
    "text": "as the parameter of last IR this node is",
    "start": "1592399",
    "end": "1597559"
  },
  {
    "text": "no longer used after check maps with migration and be needed when buing out",
    "start": "1597559",
    "end": "1604159"
  },
  {
    "text": "to ignition therefore the register is not saved at one here we can see the RDX is",
    "start": "1604159",
    "end": "1613600"
  },
  {
    "text": "not saved so after a sidei occurs when the",
    "start": "1613600",
    "end": "1619600"
  },
  {
    "text": "beauty function is called at two the value of R8 is overr by three uh before",
    "start": "1619600",
    "end": "1627360"
  },
  {
    "text": "three so during the optimization prising the Lifetime uny by the two",
    "start": "1627360",
    "end": "1634840"
  },
  {
    "text": "analyzers are different resulting in a serious type",
    "start": "1634840",
    "end": "1640240"
  },
  {
    "text": "confusion the B pattern is below first uh first is uh that we need",
    "start": "1640240",
    "end": "1647799"
  },
  {
    "text": "IR which has eer dep property and is need alter call may cause a side effect",
    "start": "1647799",
    "end": "1655279"
  },
  {
    "text": "when General code the third one is cestors using not snapshot rather than",
    "start": "1655279",
    "end": "1662360"
  },
  {
    "text": "eager info before the call and if there is a lifetime differ",
    "start": "1662360",
    "end": "1669080"
  },
  {
    "text": "between no it will lead to a TP confus they translated this those no",
    "start": "1669080",
    "end": "1675640"
  },
  {
    "text": "conditions into uh code code ql we found there are some similar errors in",
    "start": "1675640",
    "end": "1683320"
  },
  {
    "text": "mag what's more we found another interesting error that is check object",
    "start": "1683320",
    "end": "1689320"
  },
  {
    "text": "to index it fits the first three conditions so I submitted this as a",
    "start": "1689320",
    "end": "1695679"
  },
  {
    "text": "potential type confusion bug and uh V team think my gu might be right at the",
    "start": "1695679",
    "end": "1702320"
  },
  {
    "text": "first time I was so happy to hear it at that time",
    "start": "1702320",
    "end": "1708120"
  },
  {
    "text": "but head time doesn't last long Unfortunately they think it's in this",
    "start": "1708120",
    "end": "1713159"
  },
  {
    "text": "situation is difficult to for Lifetime defer to ises We Can't elminate the",
    "start": "1713159",
    "end": "1719919"
  },
  {
    "text": "following check inate two condition node which attend the node lifetime but is in",
    "start": "1719919",
    "end": "1727039"
  },
  {
    "text": "need a security risk for further development finally V team CED this",
    "start": "1727039",
    "end": "1733720"
  },
  {
    "text": "pattern by refracturing all the",
    "start": "1733720",
    "end": "1738960"
  },
  {
    "text": "code we can get from this case the optimization box in magl May Rel to",
    "start": "1738960",
    "end": "1745600"
  },
  {
    "text": "Lifetime issue rather than the typ of issue in Teran the next section I will tell story",
    "start": "1745600",
    "end": "1753720"
  },
  {
    "text": "about an interesting RC trip in magl this story happened in uh September",
    "start": "1753720",
    "end": "1761200"
  },
  {
    "text": "2022 I Dev I deployed my father with a MAG template to ser and went on vacation",
    "start": "1761200",
    "end": "1770120"
  },
  {
    "text": "starting from the next day I found my email inbox floated with uh a reminders",
    "start": "1770120",
    "end": "1776799"
  },
  {
    "text": "of Crash samples and when I return from location I found hundreds of different",
    "start": "1776799",
    "end": "1782799"
  },
  {
    "text": "crash samples first I selected a sample with",
    "start": "1782799",
    "end": "1788679"
  },
  {
    "text": "the best condition to reproduce luckily it still exists at the latest commit we",
    "start": "1788679",
    "end": "1795880"
  },
  {
    "text": "we can guess that it's Al also a bu in handling with a trackcast",
    "start": "1795880",
    "end": "1801640"
  },
  {
    "text": "structure here at that time I know little about uh",
    "start": "1801640",
    "end": "1808640"
  },
  {
    "text": "magl so I chose to start analyzing from the Bad Code that I could understand",
    "start": "1808640",
    "end": "1814080"
  },
  {
    "text": "based on my turoy research and finally I found that the problem was like",
    "start": "1814080",
    "end": "1821320"
  },
  {
    "text": "this first in different code blocks it will create a contest object like this",
    "start": "1821320",
    "end": "1829880"
  },
  {
    "text": "here for example a new function contest will be created at the beginning of",
    "start": "1829880",
    "end": "1835679"
  },
  {
    "text": "function V1 and similarly there are try and Cat",
    "start": "1835679",
    "end": "1841080"
  },
  {
    "text": "contest at the beginning of each blocks here and here let's have Let's uh code",
    "start": "1841080",
    "end": "1846880"
  },
  {
    "text": "them Contex a b c respectively we executing at different",
    "start": "1846880",
    "end": "1852519"
  },
  {
    "text": "code locations the contest will be switched but an a problem occur when",
    "start": "1852519",
    "end": "1858480"
  },
  {
    "text": "ending the cache here it still cont C in desk of contest",
    "start": "1858480",
    "end": "1865399"
  },
  {
    "text": "a therefore an OB right occurred during the following",
    "start": "1865399",
    "end": "1871320"
  },
  {
    "text": "ER the root cause of this bug is confusing between different",
    "start": "1871320",
    "end": "1876519"
  },
  {
    "text": "contest fortunately contest is not a concept introduced by Ma but a common",
    "start": "1876519",
    "end": "1883720"
  },
  {
    "text": "Concept in JavaScript it's a varable L object mainly used to store local VAR",
    "start": "1883720",
    "end": "1890760"
  },
  {
    "text": "varibles in code blocks contest a has three local vares",
    "start": "1890760",
    "end": "1896760"
  },
  {
    "text": "V3 V8 v9 well contest C has only one the result of V3 index of uh the arror",
    "start": "1896760",
    "end": "1906480"
  },
  {
    "text": "therefore with arror in contest conversion offs side will be used to",
    "start": "1906480",
    "end": "1912399"
  },
  {
    "text": "write a new a new value to the short contest resulting in this OB",
    "start": "1912399",
    "end": "1918519"
  },
  {
    "text": "right getting such IND condition conditions uh initial conditions I was thinking how to make the OB right more",
    "start": "1918519",
    "end": "1926480"
  },
  {
    "text": "cable since the lines of the contest can be changed I can Define new variables to",
    "start": "1926480",
    "end": "1933279"
  },
  {
    "text": "make the right position writing position more flexible at one here I I I defined",
    "start": "1933279",
    "end": "1939200"
  },
  {
    "text": "so much variables I also allocate a victim AR at run time to put",
    "start": "1939200",
    "end": "1946159"
  },
  {
    "text": "it after the contest at two and stall them in uh Global robots to make them",
    "start": "1946159",
    "end": "1953480"
  },
  {
    "text": "easier to get S three using obite we modified the length of victim AR finally",
    "start": "1953480",
    "end": "1961919"
  },
  {
    "text": "we got a corrupted AR and with modified lines which can be used to make more",
    "start": "1961919",
    "end": "1967960"
  },
  {
    "text": "powerful parameters such as address off arit uh R and",
    "start": "1967960",
    "end": "1975480"
  },
  {
    "text": "read by passing the M mitigations such as web code are non red B and we hips",
    "start": "1975480",
    "end": "1983039"
  },
  {
    "text": "and box finally are Ched render rce for this buag in Chrome 107 developers",
    "start": "1983039",
    "end": "1989279"
  },
  {
    "text": "version it took about two day from vulnerability and size to exploitation",
    "start": "1989279",
    "end": "1996360"
  },
  {
    "text": "this is a",
    "start": "1996360",
    "end": "1998919"
  },
  {
    "text": "demo okay we check the version and it's a",
    "start": "2004760",
    "end": "2011600"
  },
  {
    "text": "calculator but fortunately the buag was eventually fixed by the time I finished the applo it's also easy to understand",
    "start": "2011600",
    "end": "2019600"
  },
  {
    "text": "after all it triggered probably hundreds of different crashes in my father I",
    "start": "2019600",
    "end": "2024720"
  },
  {
    "text": "think it do the same in class of f Google in",
    "start": "2024720",
    "end": "2030159"
  },
  {
    "text": "itself but this also stimulated my interest in M research",
    "start": "2030159",
    "end": "2036360"
  },
  {
    "text": "which lead to to this talk eventually let's come to the last section conclusions and",
    "start": "2036360",
    "end": "2043200"
  },
  {
    "text": "takeways in this topic we summarized the design principles and features in magl",
    "start": "2043200",
    "end": "2049919"
  },
  {
    "text": "and analyzed unical and common attack surfaces besides we exploited the B",
    "start": "2049919",
    "end": "2057158"
  },
  {
    "text": "haunting method for magl during B hunting we found many security issues and finally submitted",
    "start": "2057159",
    "end": "2064919"
  },
  {
    "text": "seven highrisk boxs of them we also use one of them to achieve render rce in Chrome based on our P",
    "start": "2064919",
    "end": "2074000"
  },
  {
    "text": "Knowledge from T research I also got the top 20 of chrome vrp researchers reward",
    "start": "2074000",
    "end": "2080878"
  },
  {
    "text": "this year which is largely due to this research we started this research M was",
    "start": "2080879",
    "end": "2088638"
  },
  {
    "text": "still in his in his infancy however through the above research we believe",
    "start": "2088639",
    "end": "2095320"
  },
  {
    "text": "that magl is complex enough so there are many situations that developers do not",
    "start": "2095320",
    "end": "2103160"
  },
  {
    "text": "accept and it may become the varable target like Teran we also believe that ml's per",
    "start": "2103160",
    "end": "2111480"
  },
  {
    "text": "performance and Security will continue to improve and it will play a important",
    "start": "2111480",
    "end": "2117480"
  },
  {
    "text": "role in improving Chrome performance in future okay I would like to thank the",
    "start": "2117480",
    "end": "2123880"
  },
  {
    "text": "following people at the end of this talk thanks two ticket support and Mulan help",
    "start": "2123880",
    "end": "2129280"
  },
  {
    "text": "in fing when he worked at 10 security sh Li I also want to thank Samuel and his",
    "start": "2129280",
    "end": "2135240"
  },
  {
    "text": "father it helps a lot bus and also we team for quickly and professionally",
    "start": "2135240",
    "end": "2141760"
  },
  {
    "text": "fixing addition s Amy and chrome vrp teams work in bu",
    "start": "2141760",
    "end": "2148680"
  },
  {
    "text": "processing the addition due to the limited time some contact about more",
    "start": "2148720",
    "end": "2154520"
  },
  {
    "text": "bugs is not mentioned in this PR ation and will be included in the late releas",
    "start": "2154520",
    "end": "2161079"
  },
  {
    "text": "uh release version of this uh slide",
    "start": "2161079",
    "end": "2165920"
  },
  {
    "text": "tonight that's all of that uh this talk thank you for our appreci time and",
    "start": "2167440",
    "end": "2173400"
  },
  {
    "text": "attention the time seems to be out and if any questions we can talk talk",
    "start": "2173400",
    "end": "2179760"
  },
  {
    "text": "outside later or just DM me at and wo at",
    "start": "2179760",
    "end": "2185359"
  },
  {
    "text": "Twitter thank you thank",
    "start": "2185359",
    "end": "2190559"
  },
  {
    "text": "you",
    "start": "2193640",
    "end": "2196640"
  }
]