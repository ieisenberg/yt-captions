[
  {
    "text": "hello everyone so it's a great honor to be back on stage of Brad USA again and",
    "start": "2560",
    "end": "9679"
  },
  {
    "text": "with the growing popularity of AI applications this year we had focused on our research on The Leverage attention",
    "start": "9679",
    "end": "16320"
  },
  {
    "text": "for semantic detach we to apply those features to address the challenge of",
    "start": "16320",
    "end": "22199"
  },
  {
    "text": "detaching oated and packet mware that the commonly encounter in practics our",
    "start": "22199",
    "end": "29199"
  },
  {
    "text": "go today and before we started allow me to introduce ourself we are ts1 P Ser team",
    "start": "29199",
    "end": "36480"
  },
  {
    "text": "from Taiwan and I Mars the I'm the S manager and also over the past years I",
    "start": "36480",
    "end": "43559"
  },
  {
    "text": "spoke at many cyber secur conference over 14 times around the world and in my right side shangha who is our team",
    "start": "43559",
    "end": "50840"
  },
  {
    "text": "leader of 1 he also spoken in many cyber security conference and yan yan is one of our",
    "start": "50840",
    "end": "57920"
  },
  {
    "text": "dedicated St researchers and we were presenting the excited content of this",
    "start": "57920",
    "end": "63040"
  },
  {
    "text": "event so due to the time constraints our agenda today will be very",
    "start": "63040",
    "end": "69200"
  },
  {
    "text": "tidy and but we still will share very awesome content with you guys here and",
    "start": "69200",
    "end": "74640"
  },
  {
    "text": "first we will review and check the challenge bu teams members face when",
    "start": "74640",
    "end": "80119"
  },
  {
    "text": "dealing with a large bent of Mare and post and next we will discuss how we use",
    "start": "80119",
    "end": "87400"
  },
  {
    "text": "the Practical neuros symbolic Transformer we proposed to address this issue and after providing a clear",
    "start": "87400",
    "end": "95119"
  },
  {
    "text": "understanding of our propose could Ida our model we will sure how it has",
    "start": "95119",
    "end": "101119"
  },
  {
    "text": "effectively assisted in the real wor scenario and finally we will present how",
    "start": "101119",
    "end": "107000"
  },
  {
    "text": "this to can be utilized by blin at large so what is theal problem the buing",
    "start": "107000",
    "end": "114920"
  },
  {
    "text": "face in the current stage the Sher volent of Highly observ",
    "start": "114920",
    "end": "120680"
  },
  {
    "text": "malware SOS and Commercial pakers make it challenging to analyze identify basic",
    "start": "120680",
    "end": "127039"
  },
  {
    "text": "malicious behaviors additionally Windows sh code is often hidden and difficult to prevent",
    "start": "127039",
    "end": "135480"
  },
  {
    "text": "it it is usually delayed by the time the dynamic excusion of sh is",
    "start": "135480",
    "end": "142200"
  },
  {
    "text": "detected so although it is challenging experienced modware analyst can still",
    "start": "142200",
    "end": "148000"
  },
  {
    "text": "Des obsa functions by leveraging low accumulated knowledge over time for",
    "start": "148000",
    "end": "155319"
  },
  {
    "text": "example using to like ID Pro as can identify that F frag belongs to create",
    "start": "155319",
    "end": "162040"
  },
  {
    "text": "file function and they can then determine that V3 the variable is a file handle",
    "start": "162040",
    "end": "169440"
  },
  {
    "text": "and subsequently verify it against the inval of um handle value",
    "start": "169440",
    "end": "176360"
  },
  {
    "text": "before proceeding to get file sides and this process of resoning and reverse",
    "start": "176360",
    "end": "183159"
  },
  {
    "text": "engineering program code through a continuous data reference relationship is systematically in the units 2022",
    "start": "183159",
    "end": "190920"
  },
  {
    "text": "study however the number of the human aspir is inly",
    "start": "190920",
    "end": "197000"
  },
  {
    "text": "limited when they face with the large volume of malware L cannot scale to handle as work",
    "start": "197000",
    "end": "206120"
  },
  {
    "text": "effectively this is why we want to automate the process with with AI",
    "start": "206120",
    "end": "211599"
  },
  {
    "text": "modeling to ensure tining and precise analysis on a mar large time",
    "start": "211599",
    "end": "218439"
  },
  {
    "text": "scale so in order to deal with the issue of identify unknown API",
    "start": "218439",
    "end": "224000"
  },
  {
    "text": "codes we propos to related method at B USA",
    "start": "224000",
    "end": "229080"
  },
  {
    "text": "2022 our approach use 10 analysis as a foundation for performing semantic",
    "start": "229080",
    "end": "234640"
  },
  {
    "text": "analysis of apis and impose various export rules to effectively identify",
    "start": "234640",
    "end": "240239"
  },
  {
    "text": "unknown API sequence however this master has e",
    "start": "240239",
    "end": "246959"
  },
  {
    "text": "limitations it has required human aser to write numerous rules to ear in",
    "start": "246959",
    "end": "252599"
  },
  {
    "text": "identify unknown apis the sh am of rules needed is",
    "start": "252599",
    "end": "258600"
  },
  {
    "text": "overwhelming and it is challenging to cover the entire scope comprehensively",
    "start": "258600",
    "end": "263759"
  },
  {
    "text": "due to human constraints and the potential for oversight you may be curious about how",
    "start": "263759",
    "end": "271160"
  },
  {
    "text": "about um how human aspir can deduce unknown symbols from datal",
    "start": "271160",
    "end": "276840"
  },
  {
    "text": "relationships let's take a look at a few practical example here consider a",
    "start": "276840",
    "end": "282840"
  },
  {
    "text": "distributed Windows API with seven parameters inly among the various",
    "start": "282840",
    "end": "289479"
  },
  {
    "text": "options the only Windows API with seven perameters is create file making it",
    "start": "289479",
    "end": "296280"
  },
  {
    "text": "relatively straightforward to identify in this case",
    "start": "296280",
    "end": "301400"
  },
  {
    "text": "but what if the current onor API has four parameters and all possible options",
    "start": "301400",
    "end": "307800"
  },
  {
    "text": "also have four parameters here in this scenario it is essential to base our",
    "start": "307800",
    "end": "313800"
  },
  {
    "text": "judgment on the perimeter value and L data type for instance if the first perimeter",
    "start": "313800",
    "end": "322400"
  },
  {
    "text": "is of type integer and the four perimeters is a frag with a common value like 105 401 and 18",
    "start": "322400",
    "end": "331080"
  },
  {
    "text": "we can determine that only rual window of API inhibit this usage",
    "start": "331080",
    "end": "337160"
  },
  {
    "text": "pattern well gold is enable AI to learn and recognize such unknown apis through",
    "start": "337160",
    "end": "344319"
  },
  {
    "text": "L deted detailed parameters feature and usage",
    "start": "344319",
    "end": "350160"
  },
  {
    "text": "habits so now let we already know and we already build up our goal here and let's take a look of our pedical neural",
    "start": "350160",
    "end": "358240"
  },
  {
    "text": "symbolic Transformer we name our model good ID which stand",
    "start": "358240",
    "end": "363840"
  },
  {
    "text": "for good. trended Inver St compiler agent through our research in",
    "start": "363840",
    "end": "370800"
  },
  {
    "text": "2022 we utilize 10 analysis to identify unar apis by considering the function",
    "start": "370800",
    "end": "377160"
  },
  {
    "text": "agreement precisions and the tokenize symbols required for",
    "start": "377160",
    "end": "382319"
  },
  {
    "text": "preoperation after proceeding through the trend data modeled we can calculate",
    "start": "382319",
    "end": "387360"
  },
  {
    "text": "and obtain the possible AI IPI n and output is L apply to our three",
    "start": "387360",
    "end": "394919"
  },
  {
    "text": "tools designed specifically for the brin's Practical analysis need and is",
    "start": "394919",
    "end": "400960"
  },
  {
    "text": "having proven to be helpful for the real world",
    "start": "400960",
    "end": "406000"
  },
  {
    "text": "applications of course we also review the past research and for instance n DSS",
    "start": "406000",
    "end": "412280"
  },
  {
    "text": "2018 Research In This research they analyzed the unknown API identification",
    "start": "412280",
    "end": "417560"
  },
  {
    "text": "sub static static analysis Masters achieving quite High",
    "start": "417560",
    "end": "423000"
  },
  {
    "text": "accurance however the hidden Mark model they use l Precision wise semantics this",
    "start": "423000",
    "end": "430120"
  },
  {
    "text": "limitation can create issue when making association between different unknown",
    "start": "430120",
    "end": "436280"
  },
  {
    "text": "API following this me research at iseral has to considered a similar",
    "start": "436280",
    "end": "442199"
  },
  {
    "text": "issue L attempted to infer symol n from data reference relationship and use",
    "start": "442199",
    "end": "447879"
  },
  {
    "text": "attention mechanism to affect acely recorded position wise",
    "start": "447879",
    "end": "452960"
  },
  {
    "text": "semantic resulting in higher G Performance but why is a Precision",
    "start": "452960",
    "end": "458879"
  },
  {
    "text": "information is so important here sequentiality is close to related",
    "start": "458879",
    "end": "465240"
  },
  {
    "text": "to the importance of semantic here and that's why we apply Precision why semantic encoding to our attention",
    "start": "465240",
    "end": "472599"
  },
  {
    "text": "model so B because um scaled do product",
    "start": "472599",
    "end": "477680"
  },
  {
    "text": "attention can effectively capture not only the numerical distribution typically find in API perimeters data",
    "start": "477680",
    "end": "485120"
  },
  {
    "text": "but also the difference semantics that each API parameters Precision should",
    "start": "485120",
    "end": "491360"
  },
  {
    "text": "inhibit through Precision including in attention is going related the data more",
    "start": "491360",
    "end": "498759"
  },
  {
    "text": "accurately and the semantic are projected into three demon Matrix of qkv",
    "start": "498759",
    "end": "504280"
  },
  {
    "text": "modeled c key and value here and can effectively predict the likelihood of each unknown",
    "start": "504280",
    "end": "511719"
  },
  {
    "text": "apis and this approach allowed us to comprehensively analyze the contential",
    "start": "511719",
    "end": "517240"
  },
  {
    "text": "and precal information leading to more accurate",
    "start": "517240",
    "end": "522760"
  },
  {
    "text": "identification of unknown apis and therefore returning to our core",
    "start": "522760",
    "end": "529399"
  },
  {
    "text": "idea we earn to use human aspir to analyze and understand the behavioral",
    "start": "529399",
    "end": "534600"
  },
  {
    "text": "intentions associated with the unique attack Masters or API us",
    "start": "534600",
    "end": "541000"
  },
  {
    "text": "combinations by combining 10 analysis with AI models we secular modeled and",
    "start": "541000",
    "end": "546880"
  },
  {
    "text": "automated the aformentioned human understanding process this approach allowed us to",
    "start": "546880",
    "end": "552640"
  },
  {
    "text": "leverage similar data reference relationships encountered in the future to automatically infront attack Behavior",
    "start": "552640",
    "end": "560480"
  },
  {
    "text": "letter resemble the Lo observa during the model training",
    "start": "560480",
    "end": "565800"
  },
  {
    "text": "stage among of that the relationship between different apis can be analyzed",
    "start": "565800",
    "end": "572000"
  },
  {
    "text": "through the embeding and attend analysis the attention model is then",
    "start": "572000",
    "end": "577040"
  },
  {
    "text": "used to record data usage habits of L common",
    "start": "577040",
    "end": "582079"
  },
  {
    "text": "apis here we had introduced our code ID architecture and the principle behind",
    "start": "582079",
    "end": "588200"
  },
  {
    "text": "that and now I will hand over to shangha and who will show The Case of the practical application of our model",
    "start": "588200",
    "end": "596800"
  },
  {
    "text": "here okay thanks for M briefly intro but however we know that's difficulty for us",
    "start": "597360",
    "end": "603920"
  },
  {
    "text": "L difficulty to use the attention engine to capture you use on the street vinary",
    "start": "603920",
    "end": "609880"
  },
  {
    "text": "to follow detetion so I will go more further to talk about how we use uh W and bending on to capture the real world",
    "start": "609880",
    "end": "617720"
  },
  {
    "text": "API usage on the street binary so first of all is how do we create a symbolic",
    "start": "617720",
    "end": "624320"
  },
  {
    "text": "engine to CCT to to extract those API sequences from the street binary for ex example here you can see in the Brad",
    "start": "624320",
    "end": "631680"
  },
  {
    "text": "2022 we have have shared the idea how we do so for example on the right side you",
    "start": "631680",
    "end": "636800"
  },
  {
    "text": "can see here uh let let us de compile results from a pro here let us unknown",
    "start": "636800",
    "end": "642560"
  },
  {
    "text": "code right here and we we can find out there are the integer number usage by",
    "start": "642560",
    "end": "647959"
  },
  {
    "text": "this this API code is a 2 4400 so our engine only need to do is to",
    "start": "647959",
    "end": "654880"
  },
  {
    "text": "collect such integer number used by a unknown code right here so we can get",
    "start": "654880",
    "end": "660000"
  },
  {
    "text": "the API sequence and we also mention our engine don't want to execute or simulate",
    "start": "660000",
    "end": "666120"
  },
  {
    "text": "the binary Behavior right so uh what we we all we need to do is is to simplify",
    "start": "666120",
    "end": "673639"
  },
  {
    "text": "to replace the return value of such unknown code as a magic number so what",
    "start": "673639",
    "end": "680360"
  },
  {
    "text": "if any follow API codes use a magic number as the argument value of previous",
    "start": "680360",
    "end": "686279"
  },
  {
    "text": "API codes and we can capture the relationship between the F the previous API code and the further API codes but",
    "start": "686279",
    "end": "694680"
  },
  {
    "text": "how know however we know as the uh an L process program and we know that it's",
    "start": "694680",
    "end": "701320"
  },
  {
    "text": "difficulty to do uh representation for all to do war and bending and",
    "start": "701320",
    "end": "706519"
  },
  {
    "text": "representation for all the possible semantics on the binary level and uh for example you can see emerging in the",
    "start": "706519",
    "end": "713519"
  },
  {
    "text": "windows 64bit the integer size can be large to very large for example 100 taby",
    "start": "713519",
    "end": "720360"
  },
  {
    "text": "which means if you want to end in all the possible semantics on the binary level integer at least you should have a",
    "start": "720360",
    "end": "727000"
  },
  {
    "text": "very large database for example uh 100 taby so uh from here we have to find",
    "start": "727000",
    "end": "733480"
  },
  {
    "text": "some way to reduce the semantics on the uh from the reversing perspective for",
    "start": "733480",
    "end": "739199"
  },
  {
    "text": "example right here as a human expert you can see here you can see here uh letter",
    "start": "739199",
    "end": "744800"
  },
  {
    "text": "is integer right layer and L integer l inte is memory page and also SQ so as a",
    "start": "744800",
    "end": "753199"
  },
  {
    "text": "human expert with my guessing let the assembly code right here so all we need to do is simplify such an integer number",
    "start": "753199",
    "end": "761040"
  },
  {
    "text": "into a token ID as the assembly code or a share code right L and also you can",
    "start": "761040",
    "end": "766760"
  },
  {
    "text": "see another integer right here is readable writable but nons cable so as a",
    "start": "766760",
    "end": "772959"
  },
  {
    "text": "human expert with my guessing it's let a memory page so some some kind of data un",
    "start": "772959",
    "end": "778240"
  },
  {
    "text": "let memory page right so we can classify such integer number into its own data",
    "start": "778240",
    "end": "784000"
  },
  {
    "text": "type for example like unical string NC string or local buffer so uh so so we we",
    "start": "784000",
    "end": "791560"
  },
  {
    "text": "can simplify such a memory page into their own data type as a token ID but",
    "start": "791560",
    "end": "798320"
  },
  {
    "text": "however we still know a lot of binary label in s semantics uh lot of integer",
    "start": "798320",
    "end": "804360"
  },
  {
    "text": "just a pure integer but carrying with a meanful uh semantics for example you you can see here uh for example when Windows",
    "start": "804360",
    "end": "812240"
  },
  {
    "text": "kernel receive a a0000 this magic number which mean the",
    "start": "812240",
    "end": "818079"
  },
  {
    "text": "windows kernel will say oh somebody in the user mode tried to open a file into the readable mode and also another case",
    "start": "818079",
    "end": "825880"
  },
  {
    "text": "right here you can see uh the windows kernel receive a aor code like c0000 FD",
    "start": "825880",
    "end": "832480"
  },
  {
    "text": "the windows windows kernel will recognize that is definitely a stake overflow happen in somewhere application",
    "start": "832480",
    "end": "839800"
  },
  {
    "text": "just crash so actually Microsoft have predefined lot of a magic number carrying with a meanful simtics for the",
    "start": "839800",
    "end": "847720"
  },
  {
    "text": "developer all we need to do is simplify such an integer into human readable and",
    "start": "847720",
    "end": "854360"
  },
  {
    "text": "the Microsoft predefine humans readable stream as a token ID Co so once we can build up a",
    "start": "854360",
    "end": "862880"
  },
  {
    "text": "solid practical engine to extract a lost API sequence from the strip binary and",
    "start": "862880",
    "end": "868680"
  },
  {
    "text": "repes then land into what and bending for attention engine to to detect so we can try to build out a successful AI",
    "start": "868680",
    "end": "876160"
  },
  {
    "text": "engine to detect a real attack and and also we want to uh share our AI model",
    "start": "876160",
    "end": "882720"
  },
  {
    "text": "directly for the community to use so we want to chain a tiny a model they can",
    "start": "882720",
    "end": "887839"
  },
  {
    "text": "capture as more as possible the real world attack so we decide to choose the",
    "start": "887839",
    "end": "893120"
  },
  {
    "text": "data State we collect from bio uh we we collect all the AP binary listed on the",
    "start": "893120",
    "end": "900079"
  },
  {
    "text": "miter and in total we collect 3,300 binaries and in which containing",
    "start": "900079",
    "end": "906920"
  },
  {
    "text": "the 770k API sequence to capture the re attack uh re World attack the windows",
    "start": "906920",
    "end": "914079"
  },
  {
    "text": "API usage so here let's see a quick demo right here and you can see on the on the",
    "start": "914079",
    "end": "920120"
  },
  {
    "text": "picture we we choose one of the V highly upsc binary right here you can see this",
    "start": "920120",
    "end": "925560"
  },
  {
    "text": "binary don't want anybody know what kind of AP address it try to use to the sing",
    "start": "925560",
    "end": "931360"
  },
  {
    "text": "handful but however you can see here our engine can detect that is a definitely",
    "start": "931360",
    "end": "936880"
  },
  {
    "text": "uh internet open open a right here why because the usage of the argument 01",
    "start": "936880",
    "end": "944279"
  },
  {
    "text": "000000 is very unique and in our data set and training data set only happen on",
    "start": "944279",
    "end": "950720"
  },
  {
    "text": "the internet open fire or open a so and also our air engine can detect the one",
    "start": "950720",
    "end": "957319"
  },
  {
    "text": "push put at integral one at position two stand for internet open type directly",
    "start": "957319",
    "end": "964399"
  },
  {
    "text": "and also you can see another case without any human prite rule signature V",
    "start": "964399",
    "end": "969759"
  },
  {
    "text": "signature whatever and our air engine effort training large large scale",
    "start": "969759",
    "end": "975079"
  },
  {
    "text": "training and our air engine can detect the magic number a002 put at a position",
    "start": "975079",
    "end": "981759"
  },
  {
    "text": "one stand for HED Key current user and so our air engine know oh the first",
    "start": "981759",
    "end": "988279"
  },
  {
    "text": "position need to put a a h Key current user let is definitely uh reg just",
    "start": "988279",
    "end": "993959"
  },
  {
    "text": "Creator key a right here and we also as we know the Deep learning is very",
    "start": "993959",
    "end": "1000199"
  },
  {
    "text": "playbox right so we try to explain how the the underhood the AI model how our",
    "start": "1000199",
    "end": "1006920"
  },
  {
    "text": "AI model is such a simple and Powerful but how it do the inference reasoning",
    "start": "1006920",
    "end": "1012680"
  },
  {
    "text": "right so we choose the Met Facebook metas research in 2023 the cap playform",
    "start": "1012680",
    "end": "1018920"
  },
  {
    "text": "to expand this for example right here you can see the L un right here is a reg",
    "start": "1018920",
    "end": "1024959"
  },
  {
    "text": "qu value X right here and first uh our air engine can can not notice that is",
    "start": "1024959",
    "end": "1032160"
  },
  {
    "text": "the magic number hqy current user because of the first position a002 put",
    "start": "1032160",
    "end": "1037839"
  },
  {
    "text": "at a position one stand for the h key so the air engine will say oh I need to find some API name but this those API",
    "start": "1037839",
    "end": "1045760"
  },
  {
    "text": "should be related to the windows R key and also the second position put a put",
    "start": "1045760",
    "end": "1052360"
  },
  {
    "text": "the argument of the uh unical stream buffer right here so our can do the",
    "start": "1052360",
    "end": "1057720"
  },
  {
    "text": "reasoning about is let any Windows API first position should put uh H Key",
    "start": "1057720",
    "end": "1064000"
  },
  {
    "text": "current user and the second one the argument value should be put a unical stram right here so the the the Airi",
    "start": "1064000",
    "end": "1071039"
  },
  {
    "text": "engine will detect oh maybe I'm guessing the answer correct answer is R square Ro",
    "start": "1071039",
    "end": "1076559"
  },
  {
    "text": "value X okay cool but we know the the the demo just show the data set we",
    "start": "1076559",
    "end": "1084760"
  },
  {
    "text": "choose from the V toal but we are more than curious about is there any very",
    "start": "1084760",
    "end": "1090480"
  },
  {
    "text": "sneaky AP back door for long year position on our system we never notice",
    "start": "1090480",
    "end": "1096840"
  },
  {
    "text": "that because of our detection engine cannot capture those hidden behavior from the street binary is that happening",
    "start": "1096840",
    "end": "1103520"
  },
  {
    "text": "we didn't know for a long year so to answer this question so we decide to do the Lar SC thre hunting on voto uh we we",
    "start": "1103520",
    "end": "1112159"
  },
  {
    "text": "we we use voto to to search low highly upated binary only half vendor s",
    "start": "1112159",
    "end": "1119120"
  },
  {
    "text": "malicious file and we also use our air engine to extract L hidden Behavior",
    "start": "1119120",
    "end": "1125200"
  },
  {
    "text": "sensitive hidden behavior from L highly upsc binary to extract L behav Behavior",
    "start": "1125200",
    "end": "1132360"
  },
  {
    "text": "malicious behavior the big I don't want you to know and we are very curious about what kind of attack they are try",
    "start": "1132360",
    "end": "1138799"
  },
  {
    "text": "to do and hide from us so uh uh from on the right side you can see it's a c demo",
    "start": "1138799",
    "end": "1145400"
  },
  {
    "text": "on our giab you just clone the project and you can directly to use our air engine to scan any program is let any",
    "start": "1145400",
    "end": "1153280"
  },
  {
    "text": "hidden Behavior inside this street binary and uh in this large scale red",
    "start": "1153280",
    "end": "1158840"
  },
  {
    "text": "hunting we found out two uh evasion strategy is UN fire in the wild first one is uh anti sandbox and anti anti-",
    "start": "1158840",
    "end": "1167520"
  },
  {
    "text": "simulation uh techniques Ste on fire a lot of binary with the highly abated",
    "start": "1167520",
    "end": "1174600"
  },
  {
    "text": "binary and they will try to aware they are under virtual machine or VMware",
    "start": "1174600",
    "end": "1181360"
  },
  {
    "text": "whatever so they will try not to expose the real Behavior to explod to to the",
    "start": "1181360",
    "end": "1187000"
  },
  {
    "text": "Mone detection and the second one is my favorite is the abuse the hybrid datet",
    "start": "1187000",
    "end": "1193640"
  },
  {
    "text": "code uhet program containing assembly part of code same time it's very",
    "start": "1193640",
    "end": "1200600"
  },
  {
    "text": "difficult for for endpoint detention to do the detect okay so in this large scale for",
    "start": "1200600",
    "end": "1207080"
  },
  {
    "text": "the whole month we collect the fresh the fresh M Temple fully upsc only half R",
    "start": "1207080",
    "end": "1213679"
  },
  {
    "text": "the recogniz land and we found out if we use Lara Ru directly to to scan L and uh",
    "start": "1213679",
    "end": "1222039"
  },
  {
    "text": "Lara Ru commercial y Yu can directly to scan recognize 78 different behav are",
    "start": "1222039",
    "end": "1229400"
  },
  {
    "text": "sensitive for example uh key loger screenshot um and also CNC communication",
    "start": "1229400",
    "end": "1235960"
  },
  {
    "text": "or UPS Packer those are insensitive can be recognized by the Y rule however we",
    "start": "1235960",
    "end": "1241520"
  },
  {
    "text": "found out more than 400 binary content with the very malicious behavior don't",
    "start": "1241520",
    "end": "1248200"
  },
  {
    "text": "want to expose to the impo detection for example uh previlege escalation or",
    "start": "1248200",
    "end": "1253799"
  },
  {
    "text": "somebody the binary try to scan the anti anti",
    "start": "1253799",
    "end": "1259240"
  },
  {
    "text": "service name or try to dis disable your Windows Defender okay so uh let's lot of in this",
    "start": "1259240",
    "end": "1267240"
  },
  {
    "text": "larg scales res hunting we found out a lot of evidence but we choose two of L is more uh interesting one we want to",
    "start": "1267240",
    "end": "1273760"
  },
  {
    "text": "introduce to show the ability of our air engine you can see here get spatial p",
    "start": "1273760",
    "end": "1280120"
  },
  {
    "text": "forer w is used by Le v s b binary and you can see here on the on the picture",
    "start": "1280120",
    "end": "1287360"
  },
  {
    "text": "right here you can see our air engine can be recognized the there is a get a",
    "start": "1287360",
    "end": "1292880"
  },
  {
    "text": "special for pass w why because the magic number seven put and the 16 mag magic",
    "start": "1292880",
    "end": "1300240"
  },
  {
    "text": "number 16 put that argument position three stanfold clsid startup and clsid",
    "start": "1300240",
    "end": "1309000"
  },
  {
    "text": "dexa dictionary so that is very unique only put on the those mag magical number",
    "start": "1309000",
    "end": "1315840"
  },
  {
    "text": "only happen on the argument position three will happen such a semantics and",
    "start": "1315840",
    "end": "1321679"
  },
  {
    "text": "all a can recognize them and however you you know as a human expert we are human",
    "start": "1321679",
    "end": "1328640"
  },
  {
    "text": "when we see oh a binary use seven and 16 we can we we cannot say that is a magical number but our AI engine can do",
    "start": "1328640",
    "end": "1336320"
  },
  {
    "text": "so and also this one is my favorite is somebody is trying to build out a more",
    "start": "1336320",
    "end": "1342600"
  },
  {
    "text": "sneaky back door abuse the hybrid vc. net uh design and you you can see on the",
    "start": "1342600",
    "end": "1349279"
  },
  {
    "text": "picture only two vendor recognize that is malicious program because of this",
    "start": "1349279",
    "end": "1355720"
  },
  {
    "text": "program is fully writing the in in the C datet code but this datet program",
    "start": "1355720",
    "end": "1363360"
  },
  {
    "text": "containing the C assembly part of function to to do the process hollowing",
    "start": "1363360",
    "end": "1370880"
  },
  {
    "text": "so you can see here on the picture right here is I result you can see uh L list",
    "start": "1370880",
    "end": "1378600"
  },
  {
    "text": "let is C++ function right here and you can see it try to use the hidden API",
    "start": "1378600",
    "end": "1386240"
  },
  {
    "text": "like uh create a process virtual locate write process memory to do the process",
    "start": "1386240",
    "end": "1391400"
  },
  {
    "text": "holling however Lo hidden API only be in iniz in the D code which mean if your",
    "start": "1391400",
    "end": "1400440"
  },
  {
    "text": "modern detection engine cannot add the same time to simulate the D part ofal",
    "start": "1400440",
    "end": "1406320"
  },
  {
    "text": "and assembly particle at the time you won't see the full attack Behavior",
    "start": "1406320",
    "end": "1412200"
  },
  {
    "text": "happening right now doing the process huling okay uh here uh Ian will go more",
    "start": "1412200",
    "end": "1418159"
  },
  {
    "text": "forward to talk about how we use the AI engine to do detetion on the sh Cod",
    "start": "1418159",
    "end": "1423360"
  },
  {
    "text": "without simulation and also unpacking a commercial Packer without",
    "start": "1423360",
    "end": "1430000"
  },
  {
    "text": "unpacking okay so thanks to shha for specifying more details on our engine",
    "start": "1430840",
    "end": "1436760"
  },
  {
    "text": "and also show the first case so now let us see our engine um Windows sh Cod",
    "start": "1436760",
    "end": "1443120"
  },
  {
    "text": "without executing it so first of all we need to know that Sho is usually",
    "start": "1443120",
    "end": "1448760"
  },
  {
    "text": "designed to be as simple as possible this is because that the memory layout is unstable and the when the attackers",
    "start": "1448760",
    "end": "1456200"
  },
  {
    "text": "are wanting to design their sh Cod they will Design tend to design them as a small piece of cod without difficult",
    "start": "1456200",
    "end": "1463400"
  },
  {
    "text": "ofation this is because that they don't want their sh lead to unexpected crashes",
    "start": "1463400",
    "end": "1468440"
  },
  {
    "text": "so with this understanding if we can identify those symbols of those unknown",
    "start": "1468440",
    "end": "1475000"
  },
  {
    "text": "instructions without running the Sho payload it will be easier for us to",
    "start": "1475000",
    "end": "1480120"
  },
  {
    "text": "understand the general behaviors for detection so we use our engine to work",
    "start": "1480120",
    "end": "1485600"
  },
  {
    "text": "through each code block of the shell Cod and collecting the use Define chain as mentioned before to inert the unknown",
    "start": "1485600",
    "end": "1493120"
  },
  {
    "text": "apis used in the sh code so such as those Yellow Boxes inside the picture uh",
    "start": "1493120",
    "end": "1498679"
  },
  {
    "text": "we can see that these are the instructions that our engine is trying to capture as as the USD function so let",
    "start": "1498679",
    "end": "1506080"
  },
  {
    "text": "us go on to see more further in the picture and on the left side of the picture on the red boxes over there uh",
    "start": "1506080",
    "end": "1513960"
  },
  {
    "text": "it is trying to parse the export table of the Internet connect a function and",
    "start": "1513960",
    "end": "1519919"
  },
  {
    "text": "the yellow boxes under the red boxes is trying to preparing those Arguments for",
    "start": "1519919",
    "end": "1525200"
  },
  {
    "text": "the Internet connect a function so the use def CH that our engine is trying to",
    "start": "1525200",
    "end": "1530880"
  },
  {
    "text": "do is to collect these kind of argument set to help our engine to iner what kind",
    "start": "1530880",
    "end": "1537080"
  },
  {
    "text": "of unknown apis is inside the Shell Code so here now let's see an another",
    "start": "1537080",
    "end": "1545120"
  },
  {
    "text": "practical case so this cobal strike HTTP stagger is forcing on uh May 2023 and as",
    "start": "1545120",
    "end": "1552840"
  },
  {
    "text": "we can see on the right side of the picture of the Yellow Boxes there uh we can see there is",
    "start": "1552840",
    "end": "1558799"
  },
  {
    "text": "some Sho payload hidden inside there so as our engine it can go deeper inside",
    "start": "1558799",
    "end": "1564520"
  },
  {
    "text": "this Sho payload and get the left side of the uh left side the picture of the",
    "start": "1564520",
    "end": "1570240"
  },
  {
    "text": "red boxes over there that is the uh parameters that the unor apis is going",
    "start": "1570240",
    "end": "1576399"
  },
  {
    "text": "to use so as we can see on uh on the picture over there and we can see that",
    "start": "1576399",
    "end": "1583000"
  },
  {
    "text": "our engine is the windows paral uh squared by the orange it it prefer it",
    "start": "1583000",
    "end": "1588679"
  },
  {
    "text": "predicted there is a virtual El function over there so we can see that it actually collected the parameters that",
    "start": "1588679",
    "end": "1595399"
  },
  {
    "text": "it gives in and also finds out that there is actually some magic number like",
    "start": "1595399",
    "end": "1600600"
  },
  {
    "text": "the 40h which is represent as the rwx memory protection flag for virtual Al",
    "start": "1600600",
    "end": "1608039"
  },
  {
    "text": "function so here is our video demo on the Windows shell Cod so as we put",
    "start": "1608039",
    "end": "1614520"
  },
  {
    "text": "inside the SLE into our engine and it will giv you of the top five priority",
    "start": "1614520",
    "end": "1620279"
  },
  {
    "text": "that it predicts for the apis and if it's not uh if it's fewer than five then",
    "start": "1620279",
    "end": "1626520"
  },
  {
    "text": "it will give you uh the availables one so as we can see in the result we can",
    "start": "1626520",
    "end": "1631919"
  },
  {
    "text": "find out that there might be a HTTP open request over there so as a human analysis you can try to double check it",
    "start": "1631919",
    "end": "1639679"
  },
  {
    "text": "with the R engine and make sure that it actually is a HTTP open request over",
    "start": "1639679",
    "end": "1645240"
  },
  {
    "text": "there and uh for the next one is the virtual AOC one so uh we can start to",
    "start": "1645240",
    "end": "1651360"
  },
  {
    "text": "infert that this shco is actually doing some C2 connect server and maybe try to",
    "start": "1651360",
    "end": "1656640"
  },
  {
    "text": "drop some files because uh as using virtual AOG might be that the sh wants",
    "start": "1656640",
    "end": "1661919"
  },
  {
    "text": "to implement some allocate some new me memory size for the drop file and the",
    "start": "1661919",
    "end": "1667440"
  },
  {
    "text": "last one is that we our engine actually finds out that that is a internet refile over there so it is trying to drop the",
    "start": "1667440",
    "end": "1675159"
  },
  {
    "text": "file from its C2 server so so this is our video to demonstrate that our engine",
    "start": "1675159",
    "end": "1681679"
  },
  {
    "text": "can help can assist humanis on uh on the sh code without executing it so now",
    "start": "1681679",
    "end": "1690320"
  },
  {
    "text": "let's move on to the third use case which uh we try to use our engine to",
    "start": "1690320",
    "end": "1695480"
  },
  {
    "text": "dissect the behavior of commercial Packers without unpacking those packed",
    "start": "1695480",
    "end": "1701559"
  },
  {
    "text": "prrams so uh as first we need to know that what kind of detection problem of",
    "start": "1701559",
    "end": "1708200"
  },
  {
    "text": "modern commercial Packers are posing to uh modern AV and EDR Solutions so it is",
    "start": "1708200",
    "end": "1714799"
  },
  {
    "text": "because that if we want to detect uh pure program for the AV or EDR system we",
    "start": "1714799",
    "end": "1722480"
  },
  {
    "text": "need to First extract the original puod to uh to for the detection and to",
    "start": "1722480",
    "end": "1728640"
  },
  {
    "text": "extract the original perod we might have to go through the three following steps uh which is the first step is to dump",
    "start": "1728640",
    "end": "1735240"
  },
  {
    "text": "the process to get the memory layout of the pack program so after dumping the",
    "start": "1735240",
    "end": "1740279"
  },
  {
    "text": "process and getting the memory layout we might have to find the original entry point of the original program so that we",
    "start": "1740279",
    "end": "1747120"
  },
  {
    "text": "can go through the original program after finding the oep and after finding",
    "start": "1747120",
    "end": "1752840"
  },
  {
    "text": "list we need to have the third step which is rebuild the import table so to know what kinds of the windows apis and",
    "start": "1752840",
    "end": "1760559"
  },
  {
    "text": "what kinds of the functions that the original program is using but however",
    "start": "1760559",
    "end": "1765720"
  },
  {
    "text": "commercial Pro Packers commercial Solutions also knew that these kind of steps this kind of methods so they tend",
    "start": "1765720",
    "end": "1772600"
  },
  {
    "text": "to implement uh more techniques to stop human analysis to get the to get the O",
    "start": "1772600",
    "end": "1780120"
  },
  {
    "text": "the original entry point and also stop them from getting rebuild the import table by using some probably like router",
    "start": "1780120",
    "end": "1787399"
  },
  {
    "text": "functions to stop us to rebuild the import table however uh we use our",
    "start": "1787399",
    "end": "1793159"
  },
  {
    "text": "engine to try to scan through the P programs and we found out that that",
    "start": "1793159",
    "end": "1798320"
  },
  {
    "text": "without unpacking it we actually can get the unknown apis that the pack program",
    "start": "1798320",
    "end": "1804080"
  },
  {
    "text": "is using so this is the first practical case that we want to show uh as the",
    "start": "1804080",
    "end": "1810360"
  },
  {
    "text": "picture shows that it we are actually inside a VM protect pack programs and as",
    "start": "1810360",
    "end": "1816440"
  },
  {
    "text": "the uh on the bottom right side of the windows power shelf we can see that our",
    "start": "1816440",
    "end": "1822000"
  },
  {
    "text": "engine actually detects that there's a virtual alock function over there by getting those uh arguments",
    "start": "1822000",
    "end": "1828720"
  },
  {
    "text": "and by the use def CH the the meth that we use and the this one the this practical",
    "start": "1828720",
    "end": "1837919"
  },
  {
    "text": "case is actually uh something interesting we want to share about and this is not the original program itself",
    "start": "1837919",
    "end": "1845159"
  },
  {
    "text": "and it is the VM protect uh program itself so we found out that there is a",
    "start": "1845159",
    "end": "1850600"
  },
  {
    "text": "right process memory over there and why it is doing this kind of function over",
    "start": "1850600",
    "end": "1855840"
  },
  {
    "text": "here is because that it is trying to to S trying to get that uh whether this",
    "start": "1855840",
    "end": "1860919"
  },
  {
    "text": "program is running inside a same box or not so on the top of the picture sorry",
    "start": "1860919",
    "end": "1866679"
  },
  {
    "text": "for the tiny text but uh on the if uh if statement it is trying to write a huge",
    "start": "1866679",
    "end": "1872840"
  },
  {
    "text": "integer number on the 64bit section which is that this program is actually",
    "start": "1872840",
    "end": "1878880"
  },
  {
    "text": "running at the 32bit uh process which doesn't make sense if it can runs on the",
    "start": "1878880",
    "end": "1884279"
  },
  {
    "text": "64 bit so it use this kind of integer to write on if it can rise on that means",
    "start": "1884279",
    "end": "1889760"
  },
  {
    "text": "that we are running on the sand boox so it is the VM prot itself um trying to",
    "start": "1889760",
    "end": "1895399"
  },
  {
    "text": "check that whether this program is running on SBX or not so uh as we can see the above two um",
    "start": "1895399",
    "end": "1904679"
  },
  {
    "text": "practical cases we presented our all VM protect itself but as we as we thinking",
    "start": "1904679",
    "end": "1910880"
  },
  {
    "text": "about it well while we can use our engine on one of the commercial Packers",
    "start": "1910880",
    "end": "1916120"
  },
  {
    "text": "why not the others so we also try on the bet. to and it actually works well so",
    "start": "1916120",
    "end": "1922960"
  },
  {
    "text": "now let us see the video Deo of our engine on pack programs uh as we can see",
    "start": "1922960",
    "end": "1929799"
  },
  {
    "text": "we can see that uh this program is packed by the VM protect itself and",
    "start": "1929799",
    "end": "1934919"
  },
  {
    "text": "because it is scanning through the whole program uh whole pack program so it",
    "start": "1934919",
    "end": "1940000"
  },
  {
    "text": "might take a few seconds so we just speed up the demo for uh for quicker",
    "start": "1940000",
    "end": "1947159"
  },
  {
    "text": "demonstration and we can see that we open the program",
    "start": "1947159",
    "end": "1952760"
  },
  {
    "text": "inside the Ida Pro also and as the result we can see that it scans about",
    "start": "1952760",
    "end": "1958360"
  },
  {
    "text": "like 30 seconds and also we can find some interesting result inside what",
    "start": "1958360",
    "end": "1963960"
  },
  {
    "text": "kinds of the apis that are engine detected so there is H probably a create",
    "start": "1963960",
    "end": "1970919"
  },
  {
    "text": "process over here so as mentioned on the last video human analysis can uh use our",
    "start": "1970919",
    "end": "1977320"
  },
  {
    "text": "engine to assist them for uh faster reversing and also uh our engine founds",
    "start": "1977320",
    "end": "1984919"
  },
  {
    "text": "out that there is actually a regist open key over there which is actually correct",
    "start": "1984919",
    "end": "1990200"
  },
  {
    "text": "because the uh as we can see on the Ida Pro it is trying to open regist key under the current",
    "start": "1990200",
    "end": "1997679"
  },
  {
    "text": "version and the next one is virtual airlock which is interesting because",
    "start": "1997679",
    "end": "2002760"
  },
  {
    "text": "this is actually the Packer program itself it is trying to allocate a new",
    "start": "2002760",
    "end": "2008200"
  },
  {
    "text": "memory for each pack each Packer itself and we also find that there is a get",
    "start": "2008200",
    "end": "2014480"
  },
  {
    "text": "module file that which VM prot is trying to using to check that whether it pack",
    "start": "2014480",
    "end": "2020320"
  },
  {
    "text": "its Packer is still running or not yeah so this is our video on pack",
    "start": "2020320",
    "end": "2029559"
  },
  {
    "text": "programs and let's move on to the last part the conclusion and",
    "start": "2029559",
    "end": "2035880"
  },
  {
    "text": "takeaways so after presenting our all our use cases uh there are still some",
    "start": "2035880",
    "end": "2041799"
  },
  {
    "text": "constraints and limitations on our engines too so the first one the first",
    "start": "2041799",
    "end": "2047320"
  },
  {
    "text": "concern is the difficulties of 10 analyze with multi threads orvm uh and there are three common",
    "start": "2047320",
    "end": "2055079"
  },
  {
    "text": "problems light inside here and the first one is the classic path explosion and",
    "start": "2055079",
    "end": "2060480"
  },
  {
    "text": "the second one is the holding problem of the O lvm and the third one is the",
    "start": "2060480",
    "end": "2065520"
  },
  {
    "text": "multi-thread or the cross threading data passing issue so uh the first classic",
    "start": "2065520",
    "end": "2071398"
  },
  {
    "text": "path explosion is prevented by our engine it's because that uh our engine",
    "start": "2071399",
    "end": "2077839"
  },
  {
    "text": "doesn't go through all the branches of the code we only record the relationship",
    "start": "2077839",
    "end": "2083040"
  },
  {
    "text": "on the cross data observation and this helps us to prevent the path explosion",
    "start": "2083040",
    "end": "2088720"
  },
  {
    "text": "problem however for the O lvm and the performance issues to scan those binary",
    "start": "2088720",
    "end": "2095760"
  },
  {
    "text": "files in a limited time and also recording of the use defun CHS on a",
    "start": "2095760",
    "end": "2101800"
  },
  {
    "text": "highly flatted control flow graph uh it is a whole te problem that we need to",
    "start": "2101800",
    "end": "2107880"
  },
  {
    "text": "solve and the third one for the for the data initializing in multi threats or",
    "start": "2107880",
    "end": "2114240"
  },
  {
    "text": "those cross thread data passing in the real time are classic challenges for",
    "start": "2114240",
    "end": "2119839"
  },
  {
    "text": "tent analyze and the second constraint we want to uh we want to um point it out",
    "start": "2119839",
    "end": "2126839"
  },
  {
    "text": "is the by binary coverage issue of the strip binaries so as mentioned in the",
    "start": "2126839",
    "end": "2133040"
  },
  {
    "text": "paper so all you ever wanted to know about 32 and 64bit binary disassembly uh",
    "start": "2133040",
    "end": "2139320"
  },
  {
    "text": "the state-ofthe-art community disassemblers can only uncover up to 80%",
    "start": "2139320",
    "end": "2144839"
  },
  {
    "text": "of the binary functions and for even for those commercial or nationally suppored",
    "start": "2144839",
    "end": "2150560"
  },
  {
    "text": "disassemblers that use heuristic panel matching they can only achieve up to 95",
    "start": "2150560",
    "end": "2157319"
  },
  {
    "text": "to 98% of the coverage which means that that is not fully 100% and this will",
    "start": "2157319",
    "end": "2163520"
  },
  {
    "text": "lead to that the attackers still have some strategies or they can still build",
    "start": "2163520",
    "end": "2168599"
  },
  {
    "text": "some weird or unusual functions to bypass to evade the de complication and",
    "start": "2168599",
    "end": "2173760"
  },
  {
    "text": "hidden their malicious behavior from the detection engine so uh at the end of this talk we",
    "start": "2173760",
    "end": "2181400"
  },
  {
    "text": "will open source our tool on the GitHub as as the QR cure and we hope that our",
    "start": "2181400",
    "end": "2188599"
  },
  {
    "text": "tool can can empower the blutin community and for the takeaways we hope",
    "start": "2188599",
    "end": "2194440"
  },
  {
    "text": "that after this talk audience can learn about the strategies for using machine learning um practical malware analysis",
    "start": "2194440",
    "end": "2202240"
  },
  {
    "text": "such as against see those highly officiation code or or or even those um",
    "start": "2202240",
    "end": "2208920"
  },
  {
    "text": "commercial Solutions and we also hope that uh audience can understand some of the limitations of the auto SBX such as",
    "start": "2208920",
    "end": "2217000"
  },
  {
    "text": "um anal izing those hybrid C samples like visit",
    "start": "2217000",
    "end": "2222680"
  },
  {
    "text": "samples so our presentation is here and thanks for your coming and if you have",
    "start": "2222680",
    "end": "2228599"
  },
  {
    "text": "some questions due to the time limitation uh uh please try to catch us on the internet through our email or our",
    "start": "2228599",
    "end": "2235920"
  },
  {
    "text": "Twitter thank you [Applause]",
    "start": "2235920",
    "end": "2242340"
  }
]