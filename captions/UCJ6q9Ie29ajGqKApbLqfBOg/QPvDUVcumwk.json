[
  {
    "text": "so this talk is as you can see about attacking applications use of",
    "start": "0",
    "end": "5069"
  },
  {
    "text": "pseudo-random number generators it's intended mostly for practitioners for",
    "start": "5069",
    "end": "11610"
  },
  {
    "text": "auditors for security Assessors pen testers just not so much we're not going",
    "start": "11610",
    "end": "18359"
  },
  {
    "text": "to dwell so much on the math or the algorithms if you want that it's in our white paper so please do check out the",
    "start": "18359",
    "end": "24240"
  },
  {
    "text": "white paper we're just a we're just going to talk about applying this in practice in your practice today so we're",
    "start": "24240",
    "end": "35160"
  },
  {
    "text": "going to present this methodology that centered on our tool we're calling prankster and this methodology is for",
    "start": "35160",
    "end": "42510"
  },
  {
    "text": "identifying the use of excuse me pseudo-random number generators in applications and then attacking that so",
    "start": "42510",
    "end": "51690"
  },
  {
    "text": "first we do need to explain a little bit of our kind of general conceptualization of prgs and lay down some terminology",
    "start": "51690",
    "end": "61170"
  },
  {
    "text": "just so we can kind of talk sensibly about what we're attacking and what you need to know to perform these attacks",
    "start": "61170",
    "end": "67970"
  },
  {
    "text": "we'll also talk about some of the common PR in geez we saw some really prevalent you know Microsoft Google Oracle etc PR",
    "start": "67970",
    "end": "75030"
  },
  {
    "text": "and geez show you how to use a tool and then of course we'll go into attacking stuff with Gabriel so I'm Derek he's",
    "start": "75030",
    "end": "85049"
  },
  {
    "text": "Gabriel Chris couldn't make it we're working with silence a security product and services company we do have day jobs",
    "start": "85049",
    "end": "91650"
  },
  {
    "text": "there they keep us very busy but we do occasionally sneak in some research and so that's what we're presenting today so",
    "start": "91650",
    "end": "99420"
  },
  {
    "text": "let's go get there a quick primer on prgs so we can show and tell some real",
    "start": "99420",
    "end": "105390"
  },
  {
    "text": "PR NGS then beat them up so okay what is",
    "start": "105390",
    "end": "112829"
  },
  {
    "text": "a pseudo-random number generator it's just an algorithm for transforming numbers into numbers with their use is",
    "start": "112829",
    "end": "120390"
  },
  {
    "text": "deterministic is software realized in the cases we're talking about completely deterministic",
    "start": "120390",
    "end": "127060"
  },
  {
    "text": "it just it has a number inside of an internal state and transforms it to another state and pseudo-random numbers",
    "start": "127060",
    "end": "132760"
  },
  {
    "text": "come out and the application consumes them they're usually written for speed",
    "start": "132760",
    "end": "138099"
  },
  {
    "text": "and simplicity like you can imagine they being used in simulations or in",
    "start": "138099",
    "end": "143640"
  },
  {
    "text": "circumstances where an application was something that just looks unpredictable",
    "start": "143640",
    "end": "149980"
  },
  {
    "text": "enough to the human eye or something that achieves kind of a uniform distribution of or some number space",
    "start": "149980",
    "end": "155890"
  },
  {
    "text": "these are not designed for security yeah everybody knows this it's the texts or",
    "start": "155890",
    "end": "161380"
  },
  {
    "text": "decades old but apparently some flippers enjoy doing it anyway so I'm gonna I'm",
    "start": "161380",
    "end": "169269"
  },
  {
    "text": "going to test you with getting the message out that this should not be done",
    "start": "169269",
    "end": "174519"
  },
  {
    "text": "don't use pseudo-random number generators in security sensitive applications if you're not sure just",
    "start": "174519",
    "end": "181150"
  },
  {
    "text": "only use them if i use the cryptographically secure ones but that is the extent of my public service",
    "start": "181150",
    "end": "186370"
  },
  {
    "text": "announcement that's the mitigation and defense we're going to talk about the rest of this presentation will be",
    "start": "186370",
    "end": "191890"
  },
  {
    "text": "offensive this is a general sketch of",
    "start": "191890",
    "end": "197440"
  },
  {
    "text": "kind of what we conceptualize a PRG being and how we can consider it being",
    "start": "197440",
    "end": "203859"
  },
  {
    "text": "used it's a component it has an internal state which just kind of gets modified",
    "start": "203859",
    "end": "210160"
  },
  {
    "text": "it gets transformed as successive pseudo-random numbers are drawn out of",
    "start": "210160",
    "end": "215440"
  },
  {
    "text": "it by the application this application is just whatever code that uses a PRG it's not you know it could be a colonel",
    "start": "215440",
    "end": "221560"
  },
  {
    "text": "it could be a web app whatever so this component the prng is initialized it's",
    "start": "221560",
    "end": "228250"
  },
  {
    "text": "seated with some feed that may be for all we know hard code in the application or might be derived from some we're",
    "start": "228250",
    "end": "236620"
  },
  {
    "text": "labeling an entropy source this is not necessarily cryptographic entropy we're talking typically timestamps process IDs",
    "start": "236620",
    "end": "243489"
  },
  {
    "text": "nothing really good but we're just again we're talking about common cases what",
    "start": "243489",
    "end": "248950"
  },
  {
    "text": "you might expect to see in applications that are exhibited sewer end and",
    "start": "248950",
    "end": "255040"
  },
  {
    "text": "behavior so okay so we've got our entropy application takes it transforms it into",
    "start": "255040",
    "end": "262290"
  },
  {
    "text": "a seed the seed is fed to the prg to initialize it maybe once maybe periodically maybe kind of once per",
    "start": "262290",
    "end": "268260"
  },
  {
    "text": "thread or something and now in prgs where the state is really no bigger than",
    "start": "268260",
    "end": "274350"
  },
  {
    "text": "the seed like say they're both 32 bits or something then the seed is often just plugged in directly as the state it",
    "start": "274350",
    "end": "279930"
  },
  {
    "text": "might be tweaked a tiny bit the other case would be where the state is significantly larger than the seed and",
    "start": "279930",
    "end": "286729"
  },
  {
    "text": "then the seed is run through some algorithm for deriving an initial state",
    "start": "286729",
    "end": "291830"
  },
  {
    "text": "for instance net PRNG accepts at 32 or technically 31 bit seed has like a 1700",
    "start": "291830",
    "end": "299010"
  },
  {
    "text": "bit internal state so not every possible state is directly realized from a seed",
    "start": "299010",
    "end": "306810"
  },
  {
    "text": "value oh yeah this isn't important so",
    "start": "306810",
    "end": "312120"
  },
  {
    "text": "these numbers they come out of the prg go back into the application and then their process they're kind of massaged",
    "start": "312120",
    "end": "318360"
  },
  {
    "text": "into in the cases that were examining a smaller set of numbers and that's this",
    "start": "318360",
    "end": "325680"
  },
  {
    "text": "little dotted elbow there and then finally we get some output from the application this output is typically in",
    "start": "325680",
    "end": "333870"
  },
  {
    "text": "symbolic is characters rather than numbers typically just because there's a greater density of information I guess",
    "start": "333870",
    "end": "339750"
  },
  {
    "text": "in characters and ended like you know say a decimal representation of numbers and maybe for human benefit to like the",
    "start": "339750",
    "end": "346770"
  },
  {
    "text": "application is emitting a generated password well the password is going to be letters numbers etc so there's just",
    "start": "346770",
    "end": "354270"
  },
  {
    "text": "mapping from these these output numbers into symbols that finally comes out of",
    "start": "354270",
    "end": "360419"
  },
  {
    "text": "the application and reaches your eye when you're examining the application okay wanted to emphasize the difference",
    "start": "360419",
    "end": "367289"
  },
  {
    "text": "between a seed and the state think I did that pretty well but the seed just",
    "start": "367289",
    "end": "373260"
  },
  {
    "text": "determines the initial state once the prg is initialized it may run for some",
    "start": "373260",
    "end": "378270"
  },
  {
    "text": "amount of like an arbitrary number of runs an arbitrary number of",
    "start": "378270",
    "end": "384630"
  },
  {
    "text": "pseudo-random numbers might be drawn out of it now in cases where the state of the",
    "start": "384630",
    "end": "390210"
  },
  {
    "text": "state space is much larger than the seed space then this means that not every",
    "start": "390210",
    "end": "395220"
  },
  {
    "text": "state might be directly derived from a seed this this is important in a couple",
    "start": "395220",
    "end": "402420"
  },
  {
    "text": "cases so just something to keep in mind so that is where the pseudo-random",
    "start": "402420",
    "end": "408930"
  },
  {
    "text": "numbers come from but where do they go where did they go here we are so an",
    "start": "408930",
    "end": "417120"
  },
  {
    "text": "application could of course be written to consume pseudo-random numbers in any any conceivable manner but the cases",
    "start": "417120",
    "end": "423960"
  },
  {
    "text": "we're interested in as we discussed it draws out pseudo-random numbers one a time and makes one symbol /",
    "start": "423960",
    "end": "430080"
  },
  {
    "text": "pseudo-random number now that process of massaging of processing a pseudo-random",
    "start": "430080",
    "end": "438150"
  },
  {
    "text": "number into one of these output numbers we're conceptualizing it as happening in",
    "start": "438150",
    "end": "444120"
  },
  {
    "text": "one of two modes and this is a pretty useful pretty applicable or excuse me",
    "start": "444120",
    "end": "449550"
  },
  {
    "text": "pretty accurate generalization this typically happens in one of two ways either modular in that the output number",
    "start": "449550",
    "end": "457080"
  },
  {
    "text": "has the modulo operator applied to it it might be explicit using coarse percent",
    "start": "457080",
    "end": "462330"
  },
  {
    "text": "or bitwise and or it might be implicit do you say integer truncation like say",
    "start": "462330",
    "end": "468390"
  },
  {
    "text": "it's cast to a bite well that's an implicit modulo 256 the other mode would",
    "start": "468390",
    "end": "474540"
  },
  {
    "text": "be this multiplicative mode and usually what happens here is that the number that comes out is normalized it becomes",
    "start": "474540",
    "end": "480540"
  },
  {
    "text": "a float from 0 to inclusive to one exclusive and then that number is going to be x whatever the application wants",
    "start": "480540",
    "end": "486780"
  },
  {
    "text": "to expand that into the desired range modular mode we've got a few different",
    "start": "486780",
    "end": "494370"
  },
  {
    "text": "things going on here the big rectangle is the raw pseudo-random number usually that's just the state just pulled",
    "start": "494370",
    "end": "500700"
  },
  {
    "text": "directly out of the PRNG and then fed back to the application but sometimes",
    "start": "500700",
    "end": "506190"
  },
  {
    "text": "there are a few transformations that happen of course a important number here is the big modulus that can finds the",
    "start": "506190",
    "end": "513479"
  },
  {
    "text": "entire range of pseudo-random numbers that might come out so say you know for this modulus the",
    "start": "513480",
    "end": "521520"
  },
  {
    "text": "numbers might range from zero to modulus minus one this modulus also may be implicit like 30 too late to the 32nd if",
    "start": "521520",
    "end": "530760"
  },
  {
    "text": "there's a an internal 32-bit state variable just do the truncation it's",
    "start": "530760",
    "end": "536430"
  },
  {
    "text": "it's confined to to to the 32nd or it might be explicit often in the explicit",
    "start": "536430",
    "end": "543600"
  },
  {
    "text": "cases is either a power of 2 or some prime number like they like Mersenne",
    "start": "543600",
    "end": "549000"
  },
  {
    "text": "primes like two to the 31st minus one especially so then a few other things",
    "start": "549000",
    "end": "554910"
  },
  {
    "text": "happen assuming that most of the parameters of the PRNG our powers of two people have noticed long ago that the",
    "start": "554910",
    "end": "562050"
  },
  {
    "text": "least significant bits tend to have a short period they tend to be fairly predictable and not especially useful",
    "start": "562050",
    "end": "568560"
  },
  {
    "text": "for for randomness so they're often discarded that's what's going on here you can imagine this 32-bit number",
    "start": "568560",
    "end": "575279"
  },
  {
    "text": "coming out of the prg or again not quite coming out of the prg immediately before",
    "start": "575279",
    "end": "581040"
  },
  {
    "text": "it leaves they would divide it by let's say to the 16 if they want to discard",
    "start": "581040",
    "end": "586200"
  },
  {
    "text": "the 16 least significant bits this might be a division it might be a shift right 16 but either way you get you get the",
    "start": "586200",
    "end": "593339"
  },
  {
    "text": "idea the least significant bits just get lost because they're deemed unsuitable periodic that leaves this upper portion",
    "start": "593339",
    "end": "601650"
  },
  {
    "text": "the output portion which may actually be confined further what we're calling an output modulus for instance there's one",
    "start": "601650",
    "end": "608880"
  },
  {
    "text": "prnt that actually does it drops the 16 least significant bits and then it keeps",
    "start": "608880",
    "end": "614550"
  },
  {
    "text": "the 15 least significant bits of that so this part this most significant bit gets",
    "start": "614550",
    "end": "621120"
  },
  {
    "text": "lost which would give us an output modulus of 2 to the 15 or 30 768 now",
    "start": "621120",
    "end": "628230"
  },
  {
    "text": "this limit here we'll talk about that more a little bit but that's of critical importance this is what the application",
    "start": "628230",
    "end": "634079"
  },
  {
    "text": "is doing to the pseudo-random numbers that come out of the PR and G it's",
    "start": "634079",
    "end": "639420"
  },
  {
    "text": "applying in this case in this modular this take from bottom mode is applying this limit as the operator to excuse me",
    "start": "639420",
    "end": "646290"
  },
  {
    "text": "the operand to a modulo operator and now say that say that that limit",
    "start": "646290",
    "end": "652250"
  },
  {
    "text": "shares some factors with this the size of this output portion then some interesting things happen we go over",
    "start": "652250",
    "end": "658820"
  },
  {
    "text": "that much greater detail in the white paper so i'll refer to you to get it to you to it again but the point is that",
    "start": "658820",
    "end": "667930"
  },
  {
    "text": "most often is the least significant portion of this output part that's being",
    "start": "667930",
    "end": "673010"
  },
  {
    "text": "kept which contrasts completely with the multiplicative mode this take from top",
    "start": "673010",
    "end": "678740"
  },
  {
    "text": "mode where again we've got the rod number we discard some of it might lose",
    "start": "678740",
    "end": "684770"
  },
  {
    "text": "an additional part on the top and then what remains is typically divided by r",
    "start": "684770",
    "end": "690310"
  },
  {
    "text": "and max plus one like the number just greater than the greatest possible",
    "start": "690310",
    "end": "695899"
  },
  {
    "text": "number of this to give you that normalized flow from zero to inclusive to one exclusive once you have that",
    "start": "695899",
    "end": "702140"
  },
  {
    "text": "float then the multiplication by the limit to confine it to the range that",
    "start": "702140",
    "end": "707180"
  },
  {
    "text": "the applications interested in so this",
    "start": "707180",
    "end": "713600"
  },
  {
    "text": "is a so the pseudo random number is pretty well processed by this point we",
    "start": "713600",
    "end": "720079"
  },
  {
    "text": "have what we're calling an ordinal value like say say they want numbers from you",
    "start": "720079",
    "end": "725930"
  },
  {
    "text": "know like numbers from 0 to 25 at this point these ordinal values are ranging",
    "start": "725930",
    "end": "731540"
  },
  {
    "text": "from 0 to 25 but again we the applications typically don't want to just omit raw numbers they want to omit",
    "start": "731540",
    "end": "737329"
  },
  {
    "text": "symbols so there's this mapping we're calling an alphabet from ordinal values",
    "start": "737329",
    "end": "743240"
  },
  {
    "text": "against a take the example of 0 to 25 my mapped asst to the symbols 8 through Z",
    "start": "743240",
    "end": "748490"
  },
  {
    "text": "in the English alphabet this mapping is the alphabet and the size of that alphabet is the limit so again in the 0",
    "start": "748490",
    "end": "756020"
  },
  {
    "text": "to 25 example 26 is the limit and there are some this is of critical importance",
    "start": "756020",
    "end": "762709"
  },
  {
    "text": "so if if you tuned out please tune back in because this is going to come up a",
    "start": "762709",
    "end": "767870"
  },
  {
    "text": "lot when he does his demo in just a second here's an example alphabet and this illustrates a lot of the concepts",
    "start": "767870",
    "end": "773990"
  },
  {
    "text": "that you'll run into when you're trying to attack an application so there's what",
    "start": "773990",
    "end": "779300"
  },
  {
    "text": "I'm calling for lack of a better term the principle of obvious nuh swear if the developer wants to spit out",
    "start": "779300",
    "end": "784560"
  },
  {
    "text": "numbers well though excuse me letters and their guns probably going to order them in a through z order just out of",
    "start": "784560",
    "end": "791850"
  },
  {
    "text": "obvious pneus same with the numbers typically 0 through 9 not always like",
    "start": "791850",
    "end": "797850"
  },
  {
    "text": "looking into keyboard they run 1 through 9 and 0 so what's to say that the alphabet is not going to be constructed",
    "start": "797850",
    "end": "804030"
  },
  {
    "text": "where the numbers the digits are 1 through 9 and then a 0 also what",
    "start": "804030",
    "end": "810120"
  },
  {
    "text": "determines the relative ordering of lower case letters capital letters and numbers and even symbols well nothing",
    "start": "810120",
    "end": "817170"
  },
  {
    "text": "really there's no clear obvious kind of what you're generally going to see case",
    "start": "817170",
    "end": "822480"
  },
  {
    "text": "for how those letters and numbers should be ordered relative to each other so in this case we've got lowercase capital",
    "start": "822480",
    "end": "828360"
  },
  {
    "text": "and the numbers in other cases we might have capital than lower case we might have the numbers first I have them",
    "start": "828360",
    "end": "833760"
  },
  {
    "text": "sandwiched in between and then finally the symbols what's going to govern which",
    "start": "833760",
    "end": "839250"
  },
  {
    "text": "symbols say how they order the symbols maybe nothing like this is keyboard",
    "start": "839250",
    "end": "844290"
  },
  {
    "text": "order right here but they could go in and ascii order or something and then finally this is a particularly pesky",
    "start": "844290",
    "end": "850170"
  },
  {
    "text": "example because down in the bottom we have duplicates we have ampersand and an asterisk both repeated so while while",
    "start": "850170",
    "end": "859350"
  },
  {
    "text": "there's a definite mapping from ordinal values to symbols there's not",
    "start": "859350",
    "end": "865020"
  },
  {
    "text": "necessarily the reverse say if we if if prankster is given an asterisk in the",
    "start": "865020",
    "end": "872070"
  },
  {
    "text": "sample with this alphabet it's not going to know if that should be ordinal value 69 or 70 1 now the PRNG is of course",
    "start": "872070",
    "end": "879600"
  },
  {
    "text": "dealing all the numbers so we need to deal in numbers to derive the internal state of the prg so that is a condition",
    "start": "879600",
    "end": "887130"
  },
  {
    "text": "we don't currently handle is certainly not beyond the realm of like practicality or possibility we just",
    "start": "887130",
    "end": "893670"
  },
  {
    "text": "don't handle it but even if you give prankster and alphabet that contains duplicate symbols as long as your sample",
    "start": "893670",
    "end": "901020"
  },
  {
    "text": "that you're feeding in that you're trying to to test does not contain any soon build is duplicated it'll still",
    "start": "901020",
    "end": "907050"
  },
  {
    "text": "work so now I'm going to show off a few of",
    "start": "907050",
    "end": "912889"
  },
  {
    "text": "the excuse me of the prgs that we examined and kind of where they fit into",
    "start": "912889",
    "end": "917990"
  },
  {
    "text": "all of this there are there really two categories and then you know straggler",
    "start": "917990",
    "end": "923209"
  },
  {
    "text": "to linear congruential generators i'm going to say LC G's from now on are the most common there perhaps the most well",
    "start": "923209",
    "end": "931519"
  },
  {
    "text": "understood the simplest and they're pretty effective we got some array based ones they're kind of interesting and",
    "start": "931519",
    "end": "937490"
  },
  {
    "text": "then our others so this looks a little hairy a little Matthew but it's really",
    "start": "937490",
    "end": "942949"
  },
  {
    "text": "simple you got the state of your PRNG it's just a number it gets multiplied by some number I guess another number added",
    "start": "942949",
    "end": "949550"
  },
  {
    "text": "to it and then taking modulo some modulus usually again that could be implicit like just 30 d cubed integer",
    "start": "949550",
    "end": "955819"
  },
  {
    "text": "truncation so just State times the number plus a number get the new state",
    "start": "955819",
    "end": "960879"
  },
  {
    "text": "now that's what's going on inside the PR and G what the application is going to do or I guess what the ER in G might do",
    "start": "960879",
    "end": "968389"
  },
  {
    "text": "before it returns the number is apply that discard divisor and then that output modulus and can find that to the",
    "start": "968389",
    "end": "975800"
  },
  {
    "text": "numbers from 0 to 2 random acts that are going to come out of the prg so that's",
    "start": "975800",
    "end": "981379"
  },
  {
    "text": "just definition the constants that random X macro or constant is and I",
    "start": "981379",
    "end": "986959"
  },
  {
    "text": "think standard lib dot H it's historically 32,000 767 but it may be like two billion or more nowadays kind",
    "start": "986959",
    "end": "997069"
  },
  {
    "text": "of is just kind of buried in time with the size of the integer type so here's a table of the prg so we examined and they",
    "start": "997069",
    "end": "1006220"
  },
  {
    "text": "each kind of have something a little bit instructive the msb CRT is just kind of a good standard like prg to cut your",
    "start": "1006220",
    "end": "1013929"
  },
  {
    "text": "teeth on java is interesting because it maintains a 48-bit state which is starting to get into that realm of",
    "start": "1013929",
    "end": "1020339"
  },
  {
    "text": "impractical or like not really feasible to brute force it also operates in both",
    "start": "1020339",
    "end": "1027699"
  },
  {
    "text": "the multiplicative and the modular mode the take from top and take from bottom because the random class in Java you can",
    "start": "1027699",
    "end": "1035918"
  },
  {
    "text": "pass it the limit and it will down the pseudo-random numbers for you",
    "start": "1035919",
    "end": "1041250"
  },
  {
    "text": "now if you pass in a limit that's a power of two it uses the take from top mode if it's not a power of two it uses",
    "start": "1041250",
    "end": "1048308"
  },
  {
    "text": "take from bottom the most interesting case though is when you pass it a number that contains factors that are powers of",
    "start": "1048309",
    "end": "1054940"
  },
  {
    "text": "two I mean we're talking even like an even limit you know because to use a power of two then it will still use a",
    "start": "1054940",
    "end": "1060909"
  },
  {
    "text": "tape from bottom mode and some interesting things happen we've implemented attacks that take advantage of that into prankster and we talked",
    "start": "1060909",
    "end": "1067450"
  },
  {
    "text": "about in the white paper just don't have time today bsd lib see it's got this ad",
    "start": "1067450",
    "end": "1073630"
  },
  {
    "text": "in 20 is kind of interesting and then a prime modulus vbscript is it's just it's",
    "start": "1073630",
    "end": "1081460"
  },
  {
    "text": "a joke they have a 24-bit internal state I mean that's you could brute force that",
    "start": "1081460",
    "end": "1086799"
  },
  {
    "text": "even without any attacks but we have a thank you we have a text anyways and vbscript is of course also used in",
    "start": "1086799",
    "end": "1094200"
  },
  {
    "text": "ASP and stuff and then finally we got the Microsoft sequel server prng which",
    "start": "1094200",
    "end": "1099750"
  },
  {
    "text": "is also used by PHP but only I think in their session ID generation see a see",
    "start": "1099750",
    "end": "1105810"
  },
  {
    "text": "cam cars work for that we reference in the white paper it uses to LC G's with",
    "start": "1105810",
    "end": "1111720"
  },
  {
    "text": "you know slightly different parameters like those moduli are slightly different and the goal i think is to get this this",
    "start": "1111720",
    "end": "1118200"
  },
  {
    "text": "composite PRNG that has a period of both of them multiplied it does some other slightly funny stuff but anyways that's",
    "start": "1118200",
    "end": "1125220"
  },
  {
    "text": "beyond the point array-based these are kind of fun kind of kind of kind of",
    "start": "1125220",
    "end": "1132210"
  },
  {
    "text": "uncool they have a huge internal state they keep this array internally of in I",
    "start": "1132210",
    "end": "1137780"
  },
  {
    "text": "say 3050 integers and these integers are all modulo M which might be 2 to the",
    "start": "1137780",
    "end": "1143130"
  },
  {
    "text": "32nd it might be roughly to the 31st how they work is they keep this internal",
    "start": "1143130",
    "end": "1148770"
  },
  {
    "text": "array and then they take a number they add or subtract the next number and then store that and return it and then after",
    "start": "1148770",
    "end": "1158580"
  },
  {
    "text": "that after that arithmetic they would rotate the array but it's kind of inefficient to talk about rotating an",
    "start": "1158580",
    "end": "1164220"
  },
  {
    "text": "entire array in memory every time so they just instead they step indices through it it accomplishes the same",
    "start": "1164220",
    "end": "1169350"
  },
  {
    "text": "thing these two indices are always a fixed separation apart so these are the",
    "start": "1169350",
    "end": "1176730"
  },
  {
    "text": "three most important parameters of these array-based PRN geez the number of",
    "start": "1176730",
    "end": "1181980"
  },
  {
    "text": "integers the size of the array the modulus and then the separation and",
    "start": "1181980",
    "end": "1187890"
  },
  {
    "text": "those totally affect this behavior so here's a just a little summary dotnet",
    "start": "1187890",
    "end": "1194850"
  },
  {
    "text": "array of 55 they took it I think from art of computing or some old book except they changed a few of the parameters and",
    "start": "1194850",
    "end": "1201090"
  },
  {
    "text": "might have fat fingered the separation like it was 31 in the book that they implemented is 21 we haven't yet worked",
    "start": "1201090",
    "end": "1209250"
  },
  {
    "text": "out if that actually affects if that undermines the PRNG in any way it probably impacts the period but I mean",
    "start": "1209250",
    "end": "1216900"
  },
  {
    "text": "again we're talking about a PRG with like a 1700 bit internal state so it's",
    "start": "1216900",
    "end": "1222060"
  },
  {
    "text": "period of to be gargantuan even if it's a small fraction of the gargantuan this it could have been newer glib see type 3 the",
    "start": "1222060",
    "end": "1231380"
  },
  {
    "text": "default Rand nowadays also array based array at 31 separation a couple",
    "start": "1231380",
    "end": "1237049"
  },
  {
    "text": "interesting things is it adds numbers whereas dotnet was subtracting them and it adds an earlier number to a later",
    "start": "1237049",
    "end": "1244760"
  },
  {
    "text": "number now this there's a separation of three there but because I did it that way it's effectively a separation of 28",
    "start": "1244760",
    "end": "1252100"
  },
  {
    "text": "31-3 and another thing is it brings back the discard divisor the least",
    "start": "1252100",
    "end": "1258049"
  },
  {
    "text": "significant bit of each element is just as lost as it shifted away is hidden",
    "start": "1258049",
    "end": "1263690"
  },
  {
    "text": "from us before they ever even returned that number from the prg now the comments in their code they say this",
    "start": "1263690",
    "end": "1269990"
  },
  {
    "text": "creates a linear feedback shift register which I'm not going to get into much in those in those hidden bits which I mean",
    "start": "1269990",
    "end": "1278450"
  },
  {
    "text": "the bits are hidden but their effects the addition of them causes carry out sometimes that that is a little hairy at",
    "start": "1278450",
    "end": "1286909"
  },
  {
    "text": "first but we're actually able to parlay that into an extremely interesting attack it just well one is we just don't",
    "start": "1286909",
    "end": "1294529"
  },
  {
    "text": "have time to demo that today and two we don't have the ram it requires about twenty four gigabytes of RAM or a tackle",
    "start": "1294529",
    "end": "1300740"
  },
  {
    "text": "implementation you time space thing so so we're not going to demo that but it",
    "start": "1300740",
    "end": "1306769"
  },
  {
    "text": "is also spelled out in the white paper and then we've got this pure basic PRNG it's kind of weird it's got two arrays",
    "start": "1306769",
    "end": "1312919"
  },
  {
    "text": "of 17 elements each and it does a little bit of bit rotation and then some swapping back and forth and it's just",
    "start": "1312919",
    "end": "1319519"
  },
  {
    "text": "trying to be weird but I'm not going to worry about it right now really cool",
    "start": "1319519",
    "end": "1325370"
  },
  {
    "text": "feature of these array-based prgs is that they they can exhibit these recurrence relations I mean you can",
    "start": "1325370",
    "end": "1331909"
  },
  {
    "text": "express like you can succinctly mathematically express the PRNG as a recurrence relation but this manifests",
    "start": "1331909",
    "end": "1338269"
  },
  {
    "text": "when you start getting long strings of consecutive outputs like say the dotnet case so you get like six te outputs you",
    "start": "1338269",
    "end": "1346100"
  },
  {
    "text": "know more than the length of the more than the size of the array you'll start to see things like if you take the",
    "start": "1346100",
    "end": "1352070"
  },
  {
    "text": "eighth element of your output and subtract the I plus twenty first L then you'll get the I plus fifty fifth",
    "start": "1352070",
    "end": "1358500"
  },
  {
    "text": "element and on and on like you can like any triplet you have like that you'll get now some hey some error does come in",
    "start": "1358500",
    "end": "1368750"
  },
  {
    "text": "each each time you make one of these predictions there's a fifty percent chance that you'll be off by some fixed",
    "start": "1368750",
    "end": "1375120"
  },
  {
    "text": "constant now that fixed constant tells you some useful information it well for",
    "start": "1375120",
    "end": "1380429"
  },
  {
    "text": "one if you see one of these relations start to manifest that tells you what prng are up against and if the constant",
    "start": "1380429",
    "end": "1389130"
  },
  {
    "text": "that you see in that error can tell you about the size of the alphabet the mode in which that prd is being used the",
    "start": "1389130",
    "end": "1395460"
  },
  {
    "text": "multiplicative or the modular and it can also tell you about the arrangement of the symbols in the alphabet all",
    "start": "1395460",
    "end": "1401460"
  },
  {
    "text": "extremely useful information for making your attack much more practical so yeah",
    "start": "1401460",
    "end": "1407460"
  },
  {
    "text": "these errors are caused by just various elements to hidden state another thing we talked about in the white paper but",
    "start": "1407460",
    "end": "1413250"
  },
  {
    "text": "yeah they can actually have its uses finally we got this google v8 prgs and",
    "start": "1413250",
    "end": "1419309"
  },
  {
    "text": "their their javascript engine and they called it a multiply with carrie algorithm there's a math we're not",
    "start": "1419309",
    "end": "1424559"
  },
  {
    "text": "really going to get into it right now and then pearl tends to in the limited cases I looked at just the pearl basic r",
    "start": "1424559",
    "end": "1431309"
  },
  {
    "text": "and uses the underlying platforms Rand but then just always normalizes it like",
    "start": "1431309",
    "end": "1437100"
  },
  {
    "text": "it divides it by ear and Max plus one to make it afloat alright so now we've all",
    "start": "1437100",
    "end": "1445650"
  },
  {
    "text": "been waiting for is actually attacking stuff we gotta force got a four-step",
    "start": "1445650",
    "end": "1453120"
  },
  {
    "text": "plan to help you attack pseudo randomness in these applications step one find an application find some pseudo",
    "start": "1453120",
    "end": "1459870"
  },
  {
    "text": "random behavior to attack in it in the screenshot we're getting like a URL that",
    "start": "1459870",
    "end": "1465179"
  },
  {
    "text": "contains some kind of pseudo-random looking code so step two is collect",
    "start": "1465179",
    "end": "1471179"
  },
  {
    "text": "samples like here we have one sample well we need more samples the idea the",
    "start": "1471179",
    "end": "1476429"
  },
  {
    "text": "goal is to collect enough samples that you've seen every symbol that the application can throw at you like in",
    "start": "1476429",
    "end": "1483960"
  },
  {
    "text": "other words you want to see every symbol that can turn up in this alphabet after that collect some more samples",
    "start": "1483960",
    "end": "1489440"
  },
  {
    "text": "eventually biases might start to emerge now this might happen quickly like if",
    "start": "1489440",
    "end": "1494700"
  },
  {
    "text": "you see one symbol that and you know use proper statistical stuff which I not",
    "start": "1494700",
    "end": "1501120"
  },
  {
    "text": "qualified to get into now but but if if a statistically significant bias starts",
    "start": "1501120",
    "end": "1506309"
  },
  {
    "text": "to emerge that say a symbol showing up twice as often as another symbol then maybe that symbol turns up twice in the",
    "start": "1506309",
    "end": "1511980"
  },
  {
    "text": "alphabet like in the example we saw earlier that's really important for more",
    "start": "1511980",
    "end": "1517919"
  },
  {
    "text": "samples if your Liberty to collect like hundreds thousands millions of samples then subtler biases might to start to",
    "start": "1517919",
    "end": "1525450"
  },
  {
    "text": "emerge like if you find a symbol or a set of symbols it turns up 132 thousandth of the is often as other",
    "start": "1525450",
    "end": "1531480"
  },
  {
    "text": "symbols that tells you potentially what random number generator is being used like for instance the microsoft c",
    "start": "1531480",
    "end": "1538799"
  },
  {
    "text": "runtime because it's got its random acts of 32 767 so that will that will cause",
    "start": "1538799",
    "end": "1544230"
  },
  {
    "text": "biases to start to emerge relatively frequently and in many conditions are",
    "start": "1544230",
    "end": "1551400"
  },
  {
    "text": "relatively rapidly i mean so if you're able start to collect samples look for",
    "start": "1551400",
    "end": "1558330"
  },
  {
    "text": "these biases and that can tell you again which what modes being used like because",
    "start": "1558330",
    "end": "1563760"
  },
  {
    "text": "the modular mode the biased samples tend to cluster or they're all at the",
    "start": "1563760",
    "end": "1569610"
  },
  {
    "text": "beginning of the alphabet whereas in the multiplicative mode they're kind of dispersed throughout the alphabetic even",
    "start": "1569610",
    "end": "1575789"
  },
  {
    "text": "intervals view to rounding now that that can also kind of hint at the order of",
    "start": "1575789",
    "end": "1581640"
  },
  {
    "text": "the symbols in the alphabet which is of supreme importance okay so step one find",
    "start": "1581640",
    "end": "1588419"
  },
  {
    "text": "something to attack step to collect samples step three is where it gets good this is what pranksters made for if you",
    "start": "1588419",
    "end": "1595559"
  },
  {
    "text": "have a PNG and you might be able to guess it from context like if you're if",
    "start": "1595559",
    "end": "1601020"
  },
  {
    "text": "you're attacking of pages JSP maybe it's javas prng of course maybe it's not yeah",
    "start": "1601020",
    "end": "1607799"
  },
  {
    "text": "you there's no harm in just trying multiple PR and geez if one's not hitting",
    "start": "1607799",
    "end": "1612940"
  },
  {
    "text": "but when you have the parent G when you have a guest at the alphabet and you might have to again try multiple kind of",
    "start": "1612940",
    "end": "1619150"
  },
  {
    "text": "rearrange some things and of course you have a sim sample like in the previous slide that sample that was in the URL",
    "start": "1619150",
    "end": "1626250"
  },
  {
    "text": "when you have these three things then feed it to prankster and if all goes well it'll give you back a seed that you",
    "start": "1626250",
    "end": "1633160"
  },
  {
    "text": "can put into that PRNG to produce that sample given that alphabet of course now",
    "start": "1633160",
    "end": "1640180"
  },
  {
    "text": "this doesn't work for all PR energies currently because like say the fair on G is where the state is huge there may not",
    "start": "1640180",
    "end": "1647440"
  },
  {
    "text": "be one seed that produces that output there may be a seed but also a position",
    "start": "1647440",
    "end": "1653530"
  },
  {
    "text": "in the pseudo-random stream if you want to think about it that way like imagine the parent G was seeded and then it was",
    "start": "1653530",
    "end": "1659830"
  },
  {
    "text": "run for a while and then it produce output you got if the state is way bigger than the seed then we don't",
    "start": "1659830",
    "end": "1666580"
  },
  {
    "text": "currently have a succinct way to express that but so the pyrenees we're talking",
    "start": "1666580",
    "end": "1672400"
  },
  {
    "text": "about is where the seed is comparable to the internal state like the job like Java Sea or Microsoft see runtime etc",
    "start": "1672400",
    "end": "1679780"
  },
  {
    "text": "and so if if all goes well then on step",
    "start": "1679780",
    "end": "1685000"
  },
  {
    "text": "three here's prankster will spit out a seed and then you're good if your job is just to write a report and say don't use",
    "start": "1685000",
    "end": "1692170"
  },
  {
    "text": "in secure prgs then write don't use in secure prgs and you're done but in some",
    "start": "1692170",
    "end": "1698050"
  },
  {
    "text": "hypothetical universe where clients don't believe that something is an issue until you exploit it even then we move",
    "start": "1698050",
    "end": "1703300"
  },
  {
    "text": "on to step four so you have the seed and you got some output but we got to assume",
    "start": "1703300",
    "end": "1710140"
  },
  {
    "text": "that other people are using this out application and getting output too and wouldn't it be cool if you could predict the output that they're seeing well if",
    "start": "1710140",
    "end": "1716950"
  },
  {
    "text": "you have the seed you have this internal state of the prg well you can prankster will let you run the prg forward and",
    "start": "1716950",
    "end": "1723940"
  },
  {
    "text": "backward to predict past and future output also if you have that seed you",
    "start": "1723940",
    "end": "1729130"
  },
  {
    "text": "might learn something about the entropy that was used to make it like you might get the system time which doesn't sound",
    "start": "1729130",
    "end": "1734710"
  },
  {
    "text": "too exciting until you consider that it might be a local time and if you",
    "start": "1734710",
    "end": "1740389"
  },
  {
    "text": "compare that with universal time maybe you learn the system's timezone could be cool say a pointer like an address was",
    "start": "1740389",
    "end": "1747499"
  },
  {
    "text": "used to seed the prng or you might learn something bout it's a SLR state I don't know that could be could be cool",
    "start": "1747499",
    "end": "1753349"
  },
  {
    "text": "information and getting that entropy so that's our four-step summary of our",
    "start": "1753349",
    "end": "1759859"
  },
  {
    "text": "methodology find something to attack get some samples recover the seed from prankster and then exploit it and then",
    "start": "1759859",
    "end": "1767419"
  },
  {
    "text": "step 6 is profit so the tool we're",
    "start": "1767419",
    "end": "1772489"
  },
  {
    "text": "calling prankster why did we write this tool why are we all here today well it's",
    "start": "1772489",
    "end": "1778070"
  },
  {
    "text": "because no I don't think anybody's done this they don't think anybody's implemented this before there's been a",
    "start": "1778070",
    "end": "1783229"
  },
  {
    "text": "lot of research attack and PR Angie's but I think they've typically focused on open source applications like last",
    "start": "1783229",
    "end": "1789440"
  },
  {
    "text": "year's talk which was awesome by the way please go check it out argyros I think",
    "start": "1789440",
    "end": "1794839"
  },
  {
    "text": "was the presenter but they did open source PHP apps and they tend to focus",
    "start": "1794839",
    "end": "1801710"
  },
  {
    "text": "on teasing out the seed like getting the pit the process ID back or getting the",
    "start": "1801710",
    "end": "1807859"
  },
  {
    "text": "system time or whatever we're looking at it from the opposite end from the business in the the output that is",
    "start": "1807859",
    "end": "1816229"
  },
  {
    "text": "emitting only so that's really friendly for black box attacking that's why and",
    "start": "1816229",
    "end": "1825309"
  },
  {
    "text": "what is these three functions basically so implicit in all these is you have to",
    "start": "1825309",
    "end": "1832489"
  },
  {
    "text": "specify a PRG it won't it won't try multiple prg skirt in the current",
    "start": "1832489",
    "end": "1838159"
  },
  {
    "text": "implementation like it can't just that it doesn't and there's no meta prng that it will figure out the parameters for",
    "start": "1838159",
    "end": "1843799"
  },
  {
    "text": "you so given a PRG a sample of output",
    "start": "1843799",
    "end": "1849019"
  },
  {
    "text": "and then you're guessing an alphabet if you guys prankster and if you're lucky you'll recover a seed these other",
    "start": "1849019",
    "end": "1856879"
  },
  {
    "text": "functions are kind of for convenience if you have a PRG a seed and an alphabet you can generate the output given that",
    "start": "1856879",
    "end": "1864109"
  },
  {
    "text": "seed that's that's just a convenient way to do the forward or reverse / action or if you really need to predict",
    "start": "1864109",
    "end": "1871190"
  },
  {
    "text": "into the distant past or future then we have this third function which is for seeking the PRNG not all PR energies can",
    "start": "1871190",
    "end": "1878630"
  },
  {
    "text": "be run backwards just because of their properties and not all can be seeked or sought but but many can and so we",
    "start": "1878630",
    "end": "1888890"
  },
  {
    "text": "provide that functionality this is its report card so I like to call a Java",
    "start": "1888890",
    "end": "1896300"
  },
  {
    "text": "just because I mean you know there's a better worse there's a lot of job out there 48-bit state we did the math and",
    "start": "1896300",
    "end": "1903740"
  },
  {
    "text": "it was looking like on our test system that would take about 96 days to brute force the full 48 bit state space if we",
    "start": "1903740",
    "end": "1911480"
  },
  {
    "text": "you know in a naive brute force but we implemented attacks into prankster that given enough output it can run in",
    "start": "1911480",
    "end": "1917780"
  },
  {
    "text": "minutes 2 seconds so it becomes becomes a lot more practical the same kind of",
    "start": "1917780",
    "end": "1923600"
  },
  {
    "text": "applies for the others if you're looking at v8 and kind of scratching your head the v8 has a full 64-bit state but 32 of",
    "start": "1923600",
    "end": "1931640"
  },
  {
    "text": "those bits are negligible I mean they might come into play in one every thousand outputs or something so we we",
    "start": "1931640",
    "end": "1938300"
  },
  {
    "text": "just don't even bother with them and you have to be fair somebody else's like a full naive brute-force implementation",
    "start": "1938300",
    "end": "1945650"
  },
  {
    "text": "might also not bother with them so if this twenty thousand years number looks a little daunting even a naive brute",
    "start": "1945650",
    "end": "1951920"
  },
  {
    "text": "force of just that 32 of the 64 bits of state but still take a number of minutes and we've got it to under a second in",
    "start": "1951920",
    "end": "1958640"
  },
  {
    "text": "the prankster implementation that's enough out of me let's go to Gabriel for a demonstration we want to take country",
    "start": "1958640",
    "end": "1969280"
  },
  {
    "text": "during the whole of benchmark you were assuming that ours were here",
    "start": "1969280",
    "end": "1977210"
  },
  {
    "text": "yeah absolutely the question is is we weren't assuming that it's being receded",
    "start": "1979830",
    "end": "1985840"
  },
  {
    "text": "and yeah the this test run to mean a run of prankster it's just trying to find",
    "start": "1985840",
    "end": "1992559"
  },
  {
    "text": "all the seeds that could produce one piece of output it's not it's not trying",
    "start": "1992559",
    "end": "1998769"
  },
  {
    "text": "to produce any other any other output so those reseeding that might go on in the",
    "start": "1998769",
    "end": "2004679"
  },
  {
    "text": "application is kind of irrelevant at that point well we'll try and if the",
    "start": "2004679",
    "end": "2011759"
  },
  {
    "text": "demo doesn't doesn't ask you your questions and this should be very illuminating but if it doesn't we'll",
    "start": "2011759",
    "end": "2017129"
  },
  {
    "text": "bill feel free to take them at the end okay demo time live demos are usually",
    "start": "2017129",
    "end": "2024779"
  },
  {
    "text": "fun except when you're presenting and any volts randomness so hopefully",
    "start": "2024779",
    "end": "2029960"
  },
  {
    "text": "nothing random or pseudo-random occurs during this demonstration so yeah we",
    "start": "2029960",
    "end": "2038190"
  },
  {
    "text": "we're going to show how to use Prancer pre-match so say nowadays usually have",
    "start": "2038190",
    "end": "2044269"
  },
  {
    "text": "several multiple accounts online right and of course you have a unique password",
    "start": "2044269",
    "end": "2050128"
  },
  {
    "text": "to each one of them so it's kind of easy to forget your password and let's say",
    "start": "2050129",
    "end": "2056608"
  },
  {
    "text": "our guy here John silence he forgot his password so usually website will present",
    "start": "2056609",
    "end": "2063329"
  },
  {
    "text": "a this option to recover your password so let's see if John silence can can",
    "start": "2063329",
    "end": "2069658"
  },
  {
    "text": "recover his passer okay we should have an email with some instruction oh there",
    "start": "2069659",
    "end": "2075720"
  },
  {
    "text": "we go on how to reset our password so some instruction on blah blah blah and",
    "start": "2075720",
    "end": "2080929"
  },
  {
    "text": "we can see that there is a interesting link right here let me see if i canna i",
    "start": "2080929",
    "end": "2087450"
  },
  {
    "text": "can assume in yup there we go so that looks kinda interesting there's the john",
    "start": "2087450",
    "end": "2094470"
  },
  {
    "text": "silence email address but there is also this code looks kind of random to me right some",
    "start": "2094470",
    "end": "2102460"
  },
  {
    "text": "capital lowercase letters numbers so it doesn't look like a hash or base64",
    "start": "2102460",
    "end": "2109210"
  },
  {
    "text": "encoding or anything like that but we may want to get more samples just to",
    "start": "2109210",
    "end": "2115840"
  },
  {
    "text": "make sure what are we dealing with so let's get another email there we go and",
    "start": "2115840",
    "end": "2122460"
  },
  {
    "text": "jab different code yeah completely different code but still we got",
    "start": "2122460",
    "end": "2128830"
  },
  {
    "text": "uppercase lowercase and numbers so we may use Prancer to attack I mean sorry",
    "start": "2128830",
    "end": "2136720"
  },
  {
    "text": "to test the security of this website so",
    "start": "2136720",
    "end": "2142650"
  },
  {
    "text": "what Prancer can do for us Prancer is a open source tool you may already have it",
    "start": "2142650",
    "end": "2149800"
  },
  {
    "text": "in your CDs or you can download it later it's open source it's written in C sharp so you can compile it for dotnet",
    "start": "2149800",
    "end": "2157840"
  },
  {
    "text": "framework or also for mono which is supported in Mac OS and Linux of course",
    "start": "2157840",
    "end": "2164740"
  },
  {
    "text": "and some other platforms so that that's pretty cool about Prancer too so let's see let's see sorry what kind of options",
    "start": "2164740",
    "end": "2172150"
  },
  {
    "text": "we have here this is really helpful I'm glad you included this option in the tool we're interested in this to first",
    "start": "2172150",
    "end": "2182590"
  },
  {
    "text": "option vr it stands for recover so we can use Prancer to recover the seed that",
    "start": "2182590",
    "end": "2189700"
  },
  {
    "text": "was used to generate the output or the code of the token in this case of this",
    "start": "2189700",
    "end": "2194740"
  },
  {
    "text": "email to reset the password and then we can also use the option G which is used",
    "start": "2194740",
    "end": "2200830"
  },
  {
    "text": "to generate a future or past output based on the seat that we can recover",
    "start": "2200830",
    "end": "2207100"
  },
  {
    "text": "for the first step so as we can see we're gonna need a DP rng and also the",
    "start": "2207100",
    "end": "2213460"
  },
  {
    "text": "alphabet to to figure out the next the",
    "start": "2213460",
    "end": "2219250"
  },
  {
    "text": "next code so let's do that prng back in the day you can usually take a",
    "start": "2219250",
    "end": "2224660"
  },
  {
    "text": "look at the website and from the web page you can tell whether it was Java for example if you got a JSP extension",
    "start": "2224660",
    "end": "2232400"
  },
  {
    "text": "or PHP or asp but nowadays we love URL that are friendly to the user so usually",
    "start": "2232400",
    "end": "2240320"
  },
  {
    "text": "don't get extensions on your web pages so we can do that in task in that case",
    "start": "2240320",
    "end": "2245480"
  },
  {
    "text": "sometimes you can see like power by joomla super powerful and then you can",
    "start": "2245480",
    "end": "2251390"
  },
  {
    "text": "say okay it's PHP or WordPress and page PHP again sometimes you can take a look",
    "start": "2251390",
    "end": "2257810"
  },
  {
    "text": "at the source code of the of the website and you can find something there yeah in",
    "start": "2257810",
    "end": "2266060"
  },
  {
    "text": "this case I don't think just a hunch you know I don't think we cannot find anything here so let's see if we can",
    "start": "2266060",
    "end": "2274160"
  },
  {
    "text": "actually grab the banner for for this website let's do that or at least try to",
    "start": "2274160",
    "end": "2281960"
  },
  {
    "text": "do that right now europe so",
    "start": "2281960",
    "end": "2290410"
  },
  {
    "text": "so okay there we go let me see if I can find the headers okay here we go no",
    "start": "2293990",
    "end": "2301890"
  },
  {
    "text": "server banner but hey check this out power by Express now if you go and",
    "start": "2301890",
    "end": "2309390"
  },
  {
    "text": "Google that you can will realize that the Express is a web framework for no GS",
    "start": "2309390",
    "end": "2314849"
  },
  {
    "text": "and no GS happens to use google b8 PRNG sorry javascript engine Google v8 so yep",
    "start": "2314849",
    "end": "2324359"
  },
  {
    "text": "sure enough it's probably PR and GPA so",
    "start": "2324359",
    "end": "2330210"
  },
  {
    "text": "we got our PRNG we now need to figure out the alphabet yep right there so what",
    "start": "2330210",
    "end": "2338609"
  },
  {
    "text": "else can we get from this we should probably collect more samples although it looks like we're facing again",
    "start": "2338609",
    "end": "2345300"
  },
  {
    "text": "uppercase lowercase letters and the digits so but let's get a few more Pope",
    "start": "2345300",
    "end": "2350520"
  },
  {
    "text": "a few more codes yep there we go eight",
    "start": "2350520",
    "end": "2359720"
  },
  {
    "text": "characters numbers letters again just one more just in case yeah pretty much",
    "start": "2359720",
    "end": "2371430"
  },
  {
    "text": "the same so yep we can tell that we're",
    "start": "2371430",
    "end": "2377250"
  },
  {
    "text": "facing the alphabet with numbers and upper and lowercase letters so let's see",
    "start": "2377250",
    "end": "2382950"
  },
  {
    "text": "I'm gonna actually use this Python script super simple you can actually do",
    "start": "2382950",
    "end": "2390150"
  },
  {
    "text": "that income online better I'm going to use this guy to generate the alphabet for us so there we go digits and letters",
    "start": "2390150",
    "end": "2398359"
  },
  {
    "text": "so okay I'm gonna take a code from the email I'm gonna use the second to the",
    "start": "2398359",
    "end": "2405359"
  },
  {
    "text": "last code that way we can generate the next one and make sure that prankster is",
    "start": "2405359",
    "end": "2410400"
  },
  {
    "text": "working properly so I'm going to copy this code and this is here so then we're",
    "start": "2410400",
    "end": "2419250"
  },
  {
    "text": "going to go Prancer the option are for recover then we need the prg in this case it's prng be",
    "start": "2419250",
    "end": "2426400"
  },
  {
    "text": "aid and now we need the alphabet so let me copy this guy real quick and there we",
    "start": "2426400",
    "end": "2434770"
  },
  {
    "text": "go so if you're lucky enough if i hit enter then we should have our seat let's",
    "start": "2434770",
    "end": "2440589"
  },
  {
    "text": "see oh yeah live demos but something is",
    "start": "2440589",
    "end": "2448180"
  },
  {
    "text": "wrong here maybe the prng is not correct but now express no g is google v8 that",
    "start": "2448180",
    "end": "2454390"
  },
  {
    "text": "that makes sense so maybe the alphabet is wrong maybe the order of the alphabet",
    "start": "2454390",
    "end": "2459609"
  },
  {
    "text": "is not the right one or maybe they skipped some characters I don't know so",
    "start": "2459609",
    "end": "2464619"
  },
  {
    "text": "let's try something else I'm gonna actually clear this real quick as",
    "start": "2464619",
    "end": "2470740"
  },
  {
    "text": "sometimes linux terminal is not very friendly I'm gonna switch these capital",
    "start": "2470740",
    "end": "2477279"
  },
  {
    "text": "letters to the beginning of the alphabet and see if that works I'm going to paste",
    "start": "2477279",
    "end": "2486160"
  },
  {
    "text": "it right here if that doesn't work then maybe we can switch the digits to the to",
    "start": "2486160",
    "end": "2492069"
  },
  {
    "text": "the final part of feel for it but not well there we go we gotta see so that's",
    "start": "2492069",
    "end": "2498670"
  },
  {
    "text": "pretty awesome that was less than a second I guess and now we can use this see to actually recover sorry generate",
    "start": "2498670",
    "end": "2506619"
  },
  {
    "text": "more output for this application so let's do that actually I'm gonna reuse",
    "start": "2506619",
    "end": "2514869"
  },
  {
    "text": "that again because we're going to leave the alphabet I'm going to take this part of real quick so instead of the option",
    "start": "2514869",
    "end": "2523180"
  },
  {
    "text": "are we're gonna use the option G for generate and then we also need the prg",
    "start": "2523180",
    "end": "2528430"
  },
  {
    "text": "we still need the alphabet and finally we need the see that we just recover",
    "start": "2528430",
    "end": "2533650"
  },
  {
    "text": "from the earth from the previous step and something else we need to tell",
    "start": "2533650",
    "end": "2540849"
  },
  {
    "text": "Prancer how many outputs we want to to get from it we saw that the codes are ya",
    "start": "2540849",
    "end": "2549039"
  },
  {
    "text": "eight characters land so we're gonna actually actually recover the current",
    "start": "2549039",
    "end": "2554710"
  },
  {
    "text": "code and see how that works okay there we go let's see if that",
    "start": "2554710",
    "end": "2560990"
  },
  {
    "text": "matches is this Maxima I guess so but yeah for you blah blah yeah pre accurate",
    "start": "2560990",
    "end": "2569390"
  },
  {
    "text": "so that's that's kind of cool but we're interested in the next output so we're gonna ask for answers to generate",
    "start": "2569390",
    "end": "2575150"
  },
  {
    "text": "actually 16 characters and let's see how that works there we go so this was the",
    "start": "2575150",
    "end": "2581960"
  },
  {
    "text": "original code we gave to Prancer and now we got another eight characters so let's",
    "start": "2581960",
    "end": "2588590"
  },
  {
    "text": "see if that matches kind of chucks there",
    "start": "2588590",
    "end": "2598460"
  },
  {
    "text": "we go kind of you can see that something is not good with this okay never mind so",
    "start": "2598460",
    "end": "2609880"
  },
  {
    "text": "something's wrong here we're missing one character capital C at the end and that's not good and we also have this",
    "start": "2609880",
    "end": "2619000"
  },
  {
    "text": "capital o here that doesn't correspond to the code we got in the email so",
    "start": "2619000",
    "end": "2624170"
  },
  {
    "text": "something's wrong here yeah i guess the application is actually discarding one",
    "start": "2624170",
    "end": "2631240"
  },
  {
    "text": "letter regarding one output so we're gonna need to generate more so we can",
    "start": "2631240",
    "end": "2636980"
  },
  {
    "text": "get that capital c and then we can also discard that capital or zero yeah",
    "start": "2636980",
    "end": "2642890"
  },
  {
    "text": "capital all from from this so let's do that again instead of 16 we're gonna say",
    "start": "2642890",
    "end": "2648290"
  },
  {
    "text": "17 and fair enough now we got another eight characters and that matches the",
    "start": "2648290",
    "end": "2655490"
  },
  {
    "text": "code we've got an email cool pretty cool so what can we do this with this well",
    "start": "2655490",
    "end": "2660950"
  },
  {
    "text": "maybe generate someone else's reset someone else's password oh the admin",
    "start": "2660950",
    "end": "2669980"
  },
  {
    "text": "email address that's kind of cool we can probably help him recover his passwords",
    "start": "2669980",
    "end": "2677570"
  },
  {
    "text": "so we're gonna do that right now now usually the application the website in",
    "start": "2677570",
    "end": "2685310"
  },
  {
    "text": "this case is very busy there are a lot of users to come and passwords so you met",
    "start": "2685310",
    "end": "2690319"
  },
  {
    "text": "you want to make sure that you're using the latest output as possible in this case I got a sense that nobody's using",
    "start": "2690319",
    "end": "2696650"
  },
  {
    "text": "this website right now so we're safe using the same seed we just recovered okay so I'm gonna use the administrator",
    "start": "2696650",
    "end": "2705529"
  },
  {
    "text": "email address and okay now I guess we can generate and other eight characters",
    "start": "2705529",
    "end": "2712789"
  },
  {
    "text": "but remember the application describing one so we went actually 26 so this last",
    "start": "2712789",
    "end": "2718910"
  },
  {
    "text": "8 36 8 sigh correct yup or no there we",
    "start": "2718910",
    "end": "2729349"
  },
  {
    "text": "go Jay Thank You guy i'm not good with",
    "start": "2729349",
    "end": "2736819"
  },
  {
    "text": "numbers um okay i'm gonna i'm gonna copy these to my clipboard and we're gonna",
    "start": "2736819",
    "end": "2744469"
  },
  {
    "text": "use i'm going to just click on this link instead of copy paste it so we actually",
    "start": "2744469",
    "end": "2750289"
  },
  {
    "text": "owe it works for John silence that's pretty cool we want to change this email address I'm gonna use the administrator",
    "start": "2750289",
    "end": "2759309"
  },
  {
    "text": "email address and now we want to use the code we just recover and get up pace",
    "start": "2759309",
    "end": "2769089"
  },
  {
    "text": "so that should work right I'm gonna hit enter and see if that oh ok pretty cool",
    "start": "2772790",
    "end": "2779960"
  },
  {
    "text": "it works so let's reset this password going to use an easy one oh thank you",
    "start": "2779960",
    "end": "2788780"
  },
  {
    "text": "that's pretty cool and I guess we can now login and possum got access to the",
    "start": "2788780",
    "end": "2798830"
  },
  {
    "text": "administration panel thank you so yep",
    "start": "2798830",
    "end": "2807080"
  },
  {
    "text": "that's how easy it is to use Prancer hopefully you will enjoy it and now I",
    "start": "2807080",
    "end": "2813550"
  },
  {
    "text": "guess we have some times for questions",
    "start": "2813550",
    "end": "2821560"
  },
  {
    "text": "first sorry I wanted to just in case the demo didn't illustrate I finally",
    "start": "2821830",
    "end": "2828350"
  },
  {
    "text": "understood i think the spirit of your question and that yeah prankster is an offline tool is that was that closer",
    "start": "2828350",
    "end": "2834260"
  },
  {
    "text": "what you were getting at vrng and then you start generating",
    "start": "2834260",
    "end": "2840089"
  },
  {
    "text": "random number you are using them is I believe he found the sealed and then his",
    "start": "2840089",
    "end": "2847470"
  },
  {
    "text": "doublet erika scream but in between why I received two BR ND yeah definitely",
    "start": "2847470",
    "end": "2855239"
  },
  {
    "text": "there are their practical complications that you'll just have to encounter and an address such as are there multiple",
    "start": "2855239",
    "end": "2862799"
  },
  {
    "text": "threads and each of these threads have their own instance of the PRNG and does",
    "start": "2862799",
    "end": "2868019"
  },
  {
    "text": "it get receded periodically how many get to start carded like he showed you know",
    "start": "2868019",
    "end": "2873599"
  },
  {
    "text": "there are there will be quirks and nuances but in general excuse me in",
    "start": "2873599",
    "end": "2879150"
  },
  {
    "text": "general I think this is pretty generally applicable have a go follow up on that",
    "start": "2879150",
    "end": "2887660"
  },
  {
    "text": "we owe the question oh thanks yeah the",
    "start": "2892039",
    "end": "2897719"
  },
  {
    "text": "question was if we've actually tested against any I guess real-world applications and such we don't have any",
    "start": "2897719",
    "end": "2903630"
  },
  {
    "text": "results to disclose right now I'll just put it that way the cert in the back",
    "start": "2903630",
    "end": "2909749"
  },
  {
    "text": "this is a question you know i was",
    "start": "2909749",
    "end": "2915989"
  },
  {
    "text": "waiting till after the talk to mention slot machines cuz you know i don't want to upset our hosts but I heard the black",
    "start": "2915989",
    "end": "2921509"
  },
  {
    "text": "hats not gonna be here next year anyway let's talk no I just can actually slot machines are regulated by the Nevada I",
    "start": "2921509",
    "end": "2928199"
  },
  {
    "text": "think gaming board and they they have to use cryptographically secure our and cheese so yeah I don't don't think",
    "start": "2928199",
    "end": "2934739"
  },
  {
    "text": "you're gonna go downstairs and make a mint with this but can be wrong yes sir",
    "start": "2934739",
    "end": "2941209"
  },
  {
    "text": "the Jews in order okay thanks I really that's what I",
    "start": "2941390",
    "end": "2949370"
  },
  {
    "text": "really wanted to talk about today the mission yeah okay thanks and that that would be what method do we use to reduce",
    "start": "2949370",
    "end": "2955370"
  },
  {
    "text": "the brute force well we just we pair off large amounts of the space there a",
    "start": "2955370",
    "end": "2960770"
  },
  {
    "text": "variety of means there's what we call a sub generator attack which is if the",
    "start": "2960770",
    "end": "2965840"
  },
  {
    "text": "limit if the properties of the prg or such and the limit contains a factor of",
    "start": "2965840",
    "end": "2972050"
  },
  {
    "text": "2 or power of 2 then it has that least",
    "start": "2972050",
    "end": "2977720"
  },
  {
    "text": "significant portion that has the low period the the reason for the discard divisor but the discard divisor is not",
    "start": "2977720",
    "end": "2983600"
  },
  {
    "text": "enough I mean that was not intended as robustness against adversaries and we're being adversarial so there are sub",
    "start": "2983600",
    "end": "2991730"
  },
  {
    "text": "generators you can use to brute force the low part and then brute force the high part separately so instead of brute",
    "start": "2991730",
    "end": "2996770"
  },
  {
    "text": "forcing two to the 48 your brute force to the 17 plus 2 to the 32nd or something there's 31st all the attacks",
    "start": "2996770",
    "end": "3003310"
  },
  {
    "text": "are describing the PIAA white paper so you should definitely check it out there",
    "start": "3003310",
    "end": "3008710"
  },
  {
    "text": "are other attacks like partially partially fixing the state we're in these in these sorry I just I just",
    "start": "3008710",
    "end": "3014980"
  },
  {
    "text": "really really like talking about this stuff this is fun and we're say especially if its",
    "start": "3014980",
    "end": "3020780"
  },
  {
    "text": "operating in a multiplicative mode then typically what happens is the prg",
    "start": "3020780",
    "end": "3026569"
  },
  {
    "text": "transforms the state and an outputs that and so if you see an output that is",
    "start": "3026569",
    "end": "3032839"
  },
  {
    "text": "really at the low end of the alphabet then you know that the state of the prg after that is in the really low part of",
    "start": "3032839",
    "end": "3038480"
  },
  {
    "text": "the state space you know it came out to some float that was like 0 point 0 something or you know whatever so you",
    "start": "3038480",
    "end": "3043579"
  },
  {
    "text": "can kind of you can fix that part of the state and then brute force the next part of the state and then once you get the",
    "start": "3043579",
    "end": "3049190"
  },
  {
    "text": "next you know like a smaller sliver like say for a limit of 26 you brute force only 126 of the whole space and then you",
    "start": "3049190",
    "end": "3056510"
  },
  {
    "text": "can reverse the PR and g1 to get back the seed that produce the full output and on and on there a bunch of different",
    "start": "3056510",
    "end": "3063470"
  },
  {
    "text": "little things because each of these PR geez have their own kind of you know idiosyncrasies hope that helps what else",
    "start": "3063470",
    "end": "3071390"
  },
  {
    "text": "what else yes sir you know I was hoping",
    "start": "3071390",
    "end": "3076970"
  },
  {
    "text": "I'd be able to tell y'all that before I got up here if there's if you have a CD in your bag it would be on there if not",
    "start": "3076970",
    "end": "3082970"
  },
  {
    "text": "hopefully that put on the website if not we're definitely going to put on the website as soon as we since we get home",
    "start": "3082970",
    "end": "3088790"
  },
  {
    "text": "from black hat if not sooner so stay tuned yes sir if you try to guess any of",
    "start": "3088790",
    "end": "3095000"
  },
  {
    "text": "the open source Adam the question is if we tried against ting",
    "start": "3095000",
    "end": "3100360"
  },
  {
    "text": "the open source prgs and the answer is i means for varying degrees of open source",
    "start": "3100360",
    "end": "3106120"
  },
  {
    "text": "like say net well Microsoft has released net as semi open source their CLI their",
    "start": "3106120",
    "end": "3111340"
  },
  {
    "text": "excuse me the rotor implementation and so I mean you can get the source for",
    "start": "3111340",
    "end": "3116530"
  },
  {
    "text": "that and that was you as well oh yeah absolutely google v eight others we",
    "start": "3116530",
    "end": "3121870"
  },
  {
    "text": "didn't try like PHP like we didn't really look at Merston twist or anything which has a lot of is really popular the",
    "start": "3121870",
    "end": "3128620"
  },
  {
    "text": "fellows last year looked at Mersenne twister if you're interested so we've looked at some of them we we stayed away",
    "start": "3128620",
    "end": "3134860"
  },
  {
    "text": "from the ones that are supposed to be more cryptographically secure just because we need a place to start and",
    "start": "3134860",
    "end": "3140220"
  },
  {
    "text": "actually even an RSA earlier this year there was some analysis of other open",
    "start": "3140220",
    "end": "3145240"
  },
  {
    "text": "source more cryptographically secure prgs so we do reference that also in the",
    "start": "3145240",
    "end": "3151270"
  },
  {
    "text": "white paper others",
    "start": "3151270",
    "end": "3156360"
  },
  {
    "text": "cool thanks y'all been a great audience thanks for thanks for showing up",
    "start": "3156800",
    "end": "3163270"
  }
]