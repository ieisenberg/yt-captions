[
  {
    "start": "0",
    "end": "189000"
  },
  {
    "text": "good morning everyone my name is Hector Marco I'm going to present a word",
    "start": "210",
    "end": "7950"
  },
  {
    "text": "related with with the SLR how to bypass Israel and all this stuff so first of all who we are",
    "start": "7950",
    "end": "14360"
  },
  {
    "text": "my name is hector marco gain i'm working as a lecturer in the university of the west of Scotland",
    "start": "14360",
    "end": "20189"
  },
  {
    "text": "okay this is a collaboration or shared work between you WS and GPB in Valencia",
    "start": "20189",
    "end": "26250"
  },
  {
    "text": "so I am from Scotland I miss like to New Scotland and Ismail is is working a",
    "start": "26250",
    "end": "31920"
  },
  {
    "text": "cyber security researcher - in university epidemic of Valencia in Spain okay well a little bit about us in order",
    "start": "31920",
    "end": "44399"
  },
  {
    "text": "to summarize a little bit our findings I just put some lines here so we have made some contributions to the Linux",
    "start": "44399",
    "end": "50340"
  },
  {
    "text": "kernel to the library to the jealousy library as many other open source code",
    "start": "50340",
    "end": "56149"
  },
  {
    "text": "some of them were rewarded by Google packet the store ok I was here two years ago blackhat hacia two years ago deep",
    "start": "56149",
    "end": "63780"
  },
  {
    "text": "seek also one or two of them so we have reported multiple TVs numbers maybe some",
    "start": "63780",
    "end": "70560"
  },
  {
    "text": "of you remember the one of these two is the root shell ok with this this Enter",
    "start": "70560",
    "end": "77520"
  },
  {
    "text": "key for 70 seconds do remember that so we were the ones who discovered that",
    "start": "77520",
    "end": "83840"
  },
  {
    "text": "maybe some of you also remembered about the group 28 vulnerability again so if",
    "start": "83840",
    "end": "89850"
  },
  {
    "text": "you back in space 28 times and then a drop shell will appear so okay so this",
    "start": "89850",
    "end": "97979"
  },
  {
    "text": "is one of the two months no but obviously we have more than more than that okay we have basically working on",
    "start": "97979",
    "end": "104610"
  },
  {
    "text": "low-level security we found also opening abilities maybe they are not as popular",
    "start": "104610",
    "end": "109979"
  },
  {
    "text": "as the group or root shell but for example you know kernel integral flow",
    "start": "109979",
    "end": "115409"
  },
  {
    "text": "was a vulnerability in the Linux kernel that's affecting basically the the",
    "start": "115409",
    "end": "120899"
  },
  {
    "text": "quality of the entropy of the executive or when they were got in memory okay they were nobility was present says the",
    "start": "120899",
    "end": "127530"
  },
  {
    "text": "very first version of Linux so we discovered that two years ago monitors and was present signed the very",
    "start": "127530",
    "end": "132840"
  },
  {
    "text": "first version of well to be clear science the Linux support 64-bit architectures",
    "start": "132840",
    "end": "139760"
  },
  {
    "text": "randomization for 64-bit architecture ok we have also experienced in love level",
    "start": "139760",
    "end": "146879"
  },
  {
    "text": "security in maybe you have heard about rainy with SP is a new a new method on a",
    "start": "146879",
    "end": "153510"
  },
  {
    "text": "new technique to prevent brute-force attacks again the stack is matching protector ok so this is a new technology",
    "start": "153510",
    "end": "159030"
  },
  {
    "text": "let's say you sell our next generation is also a serial patches little patches",
    "start": "159030",
    "end": "165120"
  },
  {
    "text": "that as far as we know are is the best the best implementation the best is our implementation ok providing a lot of",
    "start": "165120",
    "end": "172409"
  },
  {
    "text": "entropy so it's not so a little bit about that ok love level let's say background this is the low level ok",
    "start": "172409",
    "end": "178379"
  },
  {
    "text": "because we are also doing cyber security research we're also lectures at the universities so we are doing a plenty of",
    "start": "178379",
    "end": "184349"
  },
  {
    "text": "things this is part of more more hockey thing so talking about a SLR you can",
    "start": "184349",
    "end": "189989"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "imagine an SLR is a technology that is present in all modern systems ok in Windows Linux Android iOS everywhere ok",
    "start": "189989",
    "end": "199190"
  },
  {
    "text": "it is a barrier that most attacks needs to to bypass ok especially if we are",
    "start": "199190",
    "end": "204690"
  },
  {
    "text": "talking about memory errors when we are exploiting memory errors we need to face against this ok not only memory errors",
    "start": "204690",
    "end": "210629"
  },
  {
    "text": "ok but especially and then we thought okay we need to assess the effectiveness",
    "start": "210629",
    "end": "215819"
  },
  {
    "text": "of the you SLR ok let's see if a seller is as hard as they say to bypass ok",
    "start": "215819",
    "end": "220980"
  },
  {
    "text": "maybe we can find some tricks some something to bypass the user ok so and",
    "start": "220980",
    "end": "226349"
  },
  {
    "text": "then we have ok let's see if we can find a genetic method in order to bypass the SLR in 64-bit architecture so this is",
    "start": "226349",
    "end": "233340"
  },
  {
    "text": "what's our goal so the question now here is can we do that can we create a generic method that we can reduce in",
    "start": "233340",
    "end": "239760"
  },
  {
    "text": "multiple attacks in multiple scenarios to bypass the SLR in 64-bit architecture",
    "start": "239760",
    "end": "244799"
  },
  {
    "text": "well this talk is exactly about that in this talk I'm going to present rate or to see as you which is a detect method",
    "start": "244799",
    "end": "252449"
  },
  {
    "text": "to bypass the a SLR in modern in current 64-bit windows ok",
    "start": "252449",
    "end": "258780"
  },
  {
    "text": "in order to do the demo more attractive I'm going to bypass also the attack is matching protector the non-executable",
    "start": "258780",
    "end": "263940"
  },
  {
    "text": "beat the the railroad a pi/4 five so we are going to face against a",
    "start": "263940",
    "end": "270320"
  },
  {
    "text": "full protective server okay and let's see how come we were past all these protections okay and obviously the demo",
    "start": "270320",
    "end": "277850"
  },
  {
    "text": "is around one second two seconds so we are going to invest one seconds two seconds to bypass all these technologies",
    "start": "277850",
    "end": "283940"
  },
  {
    "text": "okay so agenda briefly what is a SLR I",
    "start": "283940",
    "end": "290420"
  },
  {
    "start": "285000",
    "end": "285000"
  },
  {
    "text": "am pretty sure that you know what is a SLR but maybe it's a lot is not what you",
    "start": "290420",
    "end": "295790"
  },
  {
    "text": "have in mind okay SLR is is not only one statical thing that is implant no we",
    "start": "295790",
    "end": "302330"
  },
  {
    "text": "will see in a minute which are the barium which is the flavors of this is a lot the second part we are going to talk",
    "start": "302330",
    "end": "309140"
  },
  {
    "text": "about which is the difference between the soft curve and the result in executable file because this is",
    "start": "309140",
    "end": "316060"
  },
  {
    "text": "something that we were going to use to exploit this okay we will see the difference that we are we're facing",
    "start": "316060",
    "end": "322640"
  },
  {
    "text": "against an executable we need to see which part came from the source code and",
    "start": "322640",
    "end": "328040"
  },
  {
    "text": "which are not on what is happening there okay the point here is that they don't match when you're compiling a source",
    "start": "328040",
    "end": "333620"
  },
  {
    "text": "application the result in elf is not exactly what you have in the C file so let's let's analyze this so thanks to",
    "start": "333620",
    "end": "340280"
  },
  {
    "text": "that we find our way to create a method a generic method to bypass this SLR okay",
    "start": "340280",
    "end": "346310"
  },
  {
    "text": "we hope we name that rate or to CSU okay in order to solve you a little bit how",
    "start": "346310",
    "end": "352700"
  },
  {
    "text": "can we make take profit of this method we have modified drooper okay it's a",
    "start": "352700",
    "end": "357800"
  },
  {
    "text": "tool which we generate output generation rope chain tool okay so we have modified this tool to",
    "start": "357800",
    "end": "364550"
  },
  {
    "text": "implement this attack okay I will show you in the demo I will show you different demos but one of them is this",
    "start": "364550",
    "end": "371240"
  },
  {
    "text": "tool this modified tool with basically you just need to paste okay this is the IP of the server and then the",
    "start": "371240",
    "end": "377860"
  },
  {
    "text": "application of in this case the tool will create a Python an exploit in",
    "start": "377860",
    "end": "383360"
  },
  {
    "text": "Python that you can just against any server so it's a completely automatic okay so you don't need to do anything",
    "start": "383360",
    "end": "390610"
  },
  {
    "text": "well again in the demo I will show you how can bypass all these thing all these",
    "start": "390610",
    "end": "397190"
  },
  {
    "text": "okay position independent code SLR and execute so it's like this full protected okay let's see and also",
    "start": "397190",
    "end": "405500"
  },
  {
    "text": "I'm going to talk a little bit about mitigation conclusion white is so difficult to face that what is not so easy to Pat to patch this problem okay",
    "start": "405500",
    "end": "413360"
  },
  {
    "text": "so what do you see as a lot is you go to Wikipedia probably will find that computer security technique for",
    "start": "413360",
    "end": "418789"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "preventing exploitation of work that's definition so I think no one is going to understand what you say is a lot",
    "start": "418789",
    "end": "424580"
  },
  {
    "text": "actually if you go and read Wikipedia okay you will find something like the stack executable will be randomizer but",
    "start": "424580",
    "end": "431090"
  },
  {
    "text": "when how which is the quality so what is",
    "start": "431090",
    "end": "436550"
  },
  {
    "text": "actually yes well it is a concept okay and Windows is implementing this concept",
    "start": "436550",
    "end": "442039"
  },
  {
    "text": "in a way Linux is implementing this content in a different way even Mac is using a different",
    "start": "442039",
    "end": "447379"
  },
  {
    "text": "implementation so we cannot say oh this half is LR so I can no bypass it no you need to study this particular target you",
    "start": "447379",
    "end": "454129"
  },
  {
    "text": "need to see okay which is the weaknesses or of how can we bypass this okay so in",
    "start": "454129",
    "end": "459409"
  },
  {
    "text": "our case we choose Linux because it's one of the most popular and to be honest one of the more robust okay you can now",
    "start": "459409",
    "end": "465560"
  },
  {
    "text": "compare the the slrlewis with Windows on Mac they are far from from the quality of okay so one of the huge difference is",
    "start": "465560",
    "end": "474169"
  },
  {
    "text": "that for example in Linux and Mac they are using Perl boot SLR which means that",
    "start": "474169",
    "end": "479779"
  },
  {
    "text": "libraries and executable are only under myself when the system is booting so at",
    "start": "479779",
    "end": "485960"
  },
  {
    "text": "the very first boot so if you execute any application all libraries will be",
    "start": "485960",
    "end": "491120"
  },
  {
    "text": "exactly at the same position you know you can execute one application and later on execute a different application",
    "start": "491120",
    "end": "496279"
  },
  {
    "text": "but they are sharing these addresses this this mapping okay so in Linux know",
    "start": "496279",
    "end": "502939"
  },
  {
    "text": "you do secrete an application in Linux you can kill this application to launch the application and the map will be",
    "start": "502939",
    "end": "507949"
  },
  {
    "text": "completely different okay the map is that one so this is the map okay so talking about Lena what is",
    "start": "507949",
    "end": "514789"
  },
  {
    "text": "doing Linux how an executable ends in the memory layout and this is random I said how this happen well when you",
    "start": "514789",
    "end": "522440"
  },
  {
    "text": "basically run application that is a module a Linux kernel part which instead",
    "start": "522440",
    "end": "529520"
  },
  {
    "text": "of just writing this executable into the memory they what is doing okay let's put in our random places because",
    "start": "529520",
    "end": "535340"
  },
  {
    "text": "we have the fool let's say the foot built on memory space so let's run the mice a little bit this let's start for",
    "start": "535340",
    "end": "541970"
  },
  {
    "text": "these four things that are much more but you know this a stack so the stack is at some random place at the top okay the",
    "start": "541970",
    "end": "549410"
  },
  {
    "text": "executable if it is PI compile be careful with that because I think the recent versions of Ubuntu they are",
    "start": "549410",
    "end": "556250"
  },
  {
    "text": "already used that okay but if you don't specify this flat compiler then don't",
    "start": "556250",
    "end": "562250"
  },
  {
    "text": "expect that the executable is randomized okay because kernel can do magic so the",
    "start": "562250",
    "end": "567710"
  },
  {
    "text": "hip if you use in randomized V space equal to 2 this is a Linux kernel",
    "start": "567710",
    "end": "572930"
  },
  {
    "text": "configuration then v will be also randomizes okay so don't confuse because maybe you can see even even a zero here",
    "start": "572930",
    "end": "580160"
  },
  {
    "text": "or as you don't know I want you just you know what here means that the hip is not run to myself with means that is join to",
    "start": "580160",
    "end": "587390"
  },
  {
    "text": "the executable but because executable is random I set from outside it looks that the heap is random I said that actually is not in",
    "start": "587390",
    "end": "594290"
  },
  {
    "text": "other words if you know word executable is you know where the hip is and in the opposite ok so this is this value so",
    "start": "594290",
    "end": "600680"
  },
  {
    "text": "Linux basically is randomizing everything if you put one here and",
    "start": "600680",
    "end": "606460"
  },
  {
    "text": "additionally the hip is a little bit randomized it from the executable if you put a number two here okay so how",
    "start": "606460",
    "end": "614240"
  },
  {
    "text": "libraries and randomized easily knows well we are we are still in the kernel side okay so basically what Linux is",
    "start": "614240",
    "end": "620720"
  },
  {
    "text": "doing is tooth in a random value more or less between the heap and the stack so for me this is where the libraries will",
    "start": "620720",
    "end": "627560"
  },
  {
    "text": "be loaded okay so this is a random value okay but there is no library so what the",
    "start": "627560",
    "end": "633710"
  },
  {
    "text": "Linux Linux is doing is lot the dynamic brother okay this is a library were",
    "start": "633710",
    "end": "639950"
  },
  {
    "text": "again in the in the number that the Linux tools and what happened so jump to",
    "start": "639950",
    "end": "648980"
  },
  {
    "text": "user land okay when we are compiling an executable and this executable is",
    "start": "648980",
    "end": "654410"
  },
  {
    "text": "dynamically linked it then Linux transfer the control to this water so",
    "start": "654410",
    "end": "660320"
  },
  {
    "text": "the very first the very first assembly instructions executed in do salon is not",
    "start": "660320",
    "end": "666140"
  },
  {
    "text": "your executable okay is this so if we are for example this is a vamp",
    "start": "666140",
    "end": "672980"
  },
  {
    "text": "just in gdb we can stop the application in the DL a start with Miss basically",
    "start": "672980",
    "end": "680510"
  },
  {
    "text": "it's almost the start symbol in the this dynamic ladder and if we inspect the",
    "start": "680510",
    "end": "686779"
  },
  {
    "text": "memory map exactly at that point this is basically one or two instructions executed in the user land no more I",
    "start": "686779",
    "end": "692570"
  },
  {
    "text": "think is one move on one call so there is nothing here so you can see that we have two lines per file for example in",
    "start": "692570",
    "end": "700670"
  },
  {
    "text": "this test application we see read an executable and real-time right okay so",
    "start": "700670",
    "end": "708250"
  },
  {
    "text": "[Music] but there is no where is the live see the library see there is no live see",
    "start": "708250",
    "end": "713720"
  },
  {
    "text": "here we don't have lycée okay because linux is not the one who is letting everything for you okay this is done by",
    "start": "713720",
    "end": "722000"
  },
  {
    "text": "the dynamic rather this is the one who is living object here okay so the",
    "start": "722000",
    "end": "729290"
  },
  {
    "text": "dynamic ladder is who is loading libraries depending on your needs okay so now let's impact that let's",
    "start": "729290",
    "end": "737990"
  },
  {
    "text": "inspect the memory layout at the very beginning of the executable so if you see here now",
    "start": "737990",
    "end": "743990"
  },
  {
    "text": "this start symbol is the start of the executable so take take a look and see",
    "start": "743990",
    "end": "749029"
  },
  {
    "text": "the difference before we have only two lines three executable read/write but",
    "start": "749029",
    "end": "754370"
  },
  {
    "text": "now we have only one with real which means that the dynamic no that is the",
    "start": "754370",
    "end": "759800"
  },
  {
    "text": "one who is responsible or protecting pages with read-only permissions ok",
    "start": "759800",
    "end": "766339"
  },
  {
    "text": "Linux is not doing that for us okay this is just to show you what this actually",
    "start": "766339",
    "end": "771680"
  },
  {
    "text": "is a large memory layout and all this stuff ok it's not just a static thing that you don't know who is doing what ok",
    "start": "771680",
    "end": "779380"
  },
  {
    "text": "but the point here is that libraries are loaded but side-by-side here but there is no more randomization okay there is",
    "start": "779380",
    "end": "786410"
  },
  {
    "text": "no no no one is doing more random things let's say ok just put in libraries here",
    "start": "786410",
    "end": "793160"
  },
  {
    "text": "side by side by from outside it looks ok this is a random value okay so just to",
    "start": "793160",
    "end": "800240"
  },
  {
    "text": "do a comparison between a SLR in 32-bit and 64-bit architecture quickly most of",
    "start": "800240",
    "end": "807230"
  },
  {
    "text": "the people if you ask why the SLR is much better in 64-bit architectures well",
    "start": "807230",
    "end": "812390"
  },
  {
    "text": "the fennec will be all character because you have much more entropy ok if you compare the entropy that we have in 32-bit architecture is only a",
    "start": "812390",
    "end": "818900"
  },
  {
    "text": "bit with me that 260 possibilities you know and if you",
    "start": "818900",
    "end": "824329"
  },
  {
    "text": "compare this entropy with with 64-bit elected you will see a lot millions",
    "start": "824329",
    "end": "830240"
  },
  {
    "text": "ok so well millions of options millions of places where you can allocate your",
    "start": "830240",
    "end": "835430"
  },
  {
    "text": "libraries so that is much better but this is not the only reason okay what about the AVI the call",
    "start": "835430",
    "end": "842540"
  },
  {
    "text": "parameters ok and this is important I'm going to explain why in 32-bit",
    "start": "842540",
    "end": "848480"
  },
  {
    "text": "architectures parameters are based on stack so and in 64-bit architecture",
    "start": "848480",
    "end": "856040"
  },
  {
    "text": "parameters are placed in registers and this is a huge difference why because",
    "start": "856040",
    "end": "862220"
  },
  {
    "text": "for example attacks like greater to live see or read to whatever are not possible",
    "start": "862220",
    "end": "867980"
  },
  {
    "text": "in 64-bit architecture okay and that's a matter is not because the entropy is not",
    "start": "867980",
    "end": "873680"
  },
  {
    "text": "no no you can't jump to do in for example in letter to Lucy what the",
    "start": "873680",
    "end": "878870"
  },
  {
    "text": "attackers were doing in 32-bit architectures is because they control the stack basically they for example exploiting a stack buffer overflow they",
    "start": "878870",
    "end": "885589"
  },
  {
    "text": "are all be writing the stack because they control the stack they can put the perimeter they want and then jump for",
    "start": "885589",
    "end": "891709"
  },
  {
    "text": "example to the PT ok for system or any other entry in the PLT section of the",
    "start": "891709",
    "end": "897740"
  },
  {
    "text": "executable ok so this can this is no longer possible it's 64 with a detector and it doesn't depend of the quality of",
    "start": "897740",
    "end": "904550"
  },
  {
    "text": "SLR or beach entropy over error ok so for example they'll set too deep I don't",
    "start": "904550",
    "end": "911360"
  },
  {
    "text": "know if many of you know what set to leave is something that we also also discover unreleased some years ago",
    "start": "911360",
    "end": "916600"
  },
  {
    "text": "currently is not possible I am using the word partial here I'm going to explain in a minute why is partial offset to",
    "start": "916600",
    "end": "923120"
  },
  {
    "text": "read okay you can't use offset to need to bypass a salary of 64-bit lectures today okay but we can use some of the",
    "start": "923120",
    "end": "930890"
  },
  {
    "text": "ideas of this tack okay to combine with this the attack I am presenting today in order to",
    "start": "930890",
    "end": "936590"
  },
  {
    "text": "achieve overdrawn okay so summarizing the SLR the 64-bit system is not only better but faster why because I didn't",
    "start": "936590",
    "end": "944390"
  },
  {
    "text": "mention but we have not support with the CPU have support for relative instruction pointer okay but we don't",
    "start": "944390",
    "end": "952190"
  },
  {
    "text": "have this kind of support in 32-bit architecture okay so we need to do some call tricks here",
    "start": "952190",
    "end": "957440"
  },
  {
    "text": "in order to know where we are and then to relatively access to data and all this stuff okay so if you can move to 64",
    "start": "957440",
    "end": "965990"
  },
  {
    "text": "you shall do it now so 64 it has detected is much more secure by file okay and is faster okay",
    "start": "965990",
    "end": "973490"
  },
  {
    "text": "and again it's not a matter of only a matter of entropy but this ABI introduces have a huge",
    "start": "973490",
    "end": "980810"
  },
  {
    "text": "challenge ok so when I'm saying that",
    "start": "980810",
    "end": "986510"
  },
  {
    "text": "offset to leap attacks are partially possible basically of it really was a practically still are bypass it was a",
    "start": "986510",
    "end": "992870"
  },
  {
    "text": "generic method but it for multiple scenarios but in two years ago three years ago was was fix it with and parts",
    "start": "992870",
    "end": "1000880"
  },
  {
    "text": "to the Linux kernel and they and they fix that okay with basically means that now the executable is here but not here",
    "start": "1000880",
    "end": "1008410"
  },
  {
    "text": "so before ever we sent over pass to Linux kernel the executive all was joined to the libraries okay so once you",
    "start": "1008410",
    "end": "1016240"
  },
  {
    "text": "know where is the executable means that the libraries are a constant distance offset okay but we can use partially",
    "start": "1016240",
    "end": "1026829"
  },
  {
    "text": "these in order to know where the executable is in memory yeah I will actually later on how so basically we",
    "start": "1026830",
    "end": "1033220"
  },
  {
    "text": "need to find an alternative okay so we are looking for a generic method okay in order to be use this this attacking in",
    "start": "1033220",
    "end": "1039850"
  },
  {
    "text": "linear scenarios okay I must to be valid for 64-bit architectures need to deal",
    "start": "1039850",
    "end": "1044920"
  },
  {
    "text": "with a Bri call perimeters all this stuff okay let's let's find let's see what we can do okay so the first thing",
    "start": "1044920",
    "end": "1051700"
  },
  {
    "start": "1047000",
    "end": "1047000"
  },
  {
    "text": "we need okay if we know where is executable if we know that we can use it and we need to deal with the API with",
    "start": "1051700",
    "end": "1058720"
  },
  {
    "text": "the Cal parameters let's see which code will be always present there so let's do",
    "start": "1058720",
    "end": "1064360"
  },
  {
    "text": "a MTC this is IMTC file of his only contain one single line okay and this is a rate",
    "start": "1064360",
    "end": "1070179"
  },
  {
    "text": "of zero we mean is doing nothing but if we compile this we will see that a lot a",
    "start": "1070179",
    "end": "1076480"
  },
  {
    "text": "lot of different symbols are already include somehow in our executable but",
    "start": "1076480",
    "end": "1082419"
  },
  {
    "text": "you know I didn't put that wait a moment my serum only had main so what are these",
    "start": "1082419",
    "end": "1089440"
  },
  {
    "text": "functions from where who is putting that because this was compiled this was",
    "start": "1089440",
    "end": "1096850"
  },
  {
    "text": "linked it my application is dynamically linked it so what is going on here",
    "start": "1096850",
    "end": "1102279"
  },
  {
    "text": "so let's inspect the code you will inspect the code we will say the Occulus object um and we maybe we can't read it",
    "start": "1102279",
    "end": "1108549"
  },
  {
    "text": "I don't know if you can read it from there but there is an init function PL PL T entries here some finalize errs but",
    "start": "1108549",
    "end": "1117009"
  },
  {
    "text": "there are more code we have they start who is put in the start from work this",
    "start": "1117009",
    "end": "1122919"
  },
  {
    "text": "code this is a sounder Co we can abuse of it ok the registered in clones",
    "start": "1122919",
    "end": "1128470"
  },
  {
    "text": "another function but more don't worry there are more registered to in cloned another function a lot of cohere global",
    "start": "1128470",
    "end": "1136179"
  },
  {
    "text": "destructors auxilia framed a me Oh finally we got we will have our main function here wow this is the return 0",
    "start": "1136179",
    "end": "1144429"
  },
  {
    "text": "ok code more curved leaves you leave see",
    "start": "1144429",
    "end": "1149919"
  },
  {
    "text": "as you in it that you can see here a lot of code more code fine a lot of function",
    "start": "1149919",
    "end": "1156460"
  },
  {
    "text": "so we have this sort of code application but when we see the result in executable",
    "start": "1156460",
    "end": "1164730"
  },
  {
    "text": "we have all of this and only this a small part came from our C code ok so",
    "start": "1164730",
    "end": "1172980"
  },
  {
    "text": "let's remove that so let's put a name to that so we have named this attached'",
    "start": "1172980",
    "end": "1179169"
  },
  {
    "text": "code ok so for us everything apart from what the user can control ok what the",
    "start": "1179169",
    "end": "1187629"
  },
  {
    "text": "compiler can let's say protect adopt for us will be at a cheat code but who is",
    "start": "1187629",
    "end": "1194590"
  },
  {
    "text": "attaching it what is used for so we start to ask question how protected is this code so let's say",
    "start": "1194590",
    "end": "1201020"
  },
  {
    "text": "to quickly answer this questions who is attacked in this code well with just our",
    "start": "1201020",
    "end": "1208760"
  },
  {
    "text": "script and let's find everything about these functions okay and what we look is and we found is that",
    "start": "1208760",
    "end": "1215720"
  },
  {
    "text": "all these functions are in that particular file fine okay these two functions and is in",
    "start": "1215720",
    "end": "1224179"
  },
  {
    "text": "this particular file the start is in that file and this is in this file well",
    "start": "1224179",
    "end": "1229370"
  },
  {
    "text": "but wait a moment theorically my application is a dynamically compiled application so theorically why I am",
    "start": "1229370",
    "end": "1236750"
  },
  {
    "text": "using libraries and object files theorically you know why so this is a",
    "start": "1236750",
    "end": "1246159"
  },
  {
    "text": "this is the classical library that is use when you are compiling a static things and this is object 5 and when you",
    "start": "1246159",
    "end": "1253370"
  },
  {
    "text": "are linking things so basically we can say that this is the minimum static link",
    "start": "1253370",
    "end": "1258559"
  },
  {
    "text": "at call that we will see when we are using dynamically link at applications",
    "start": "1258559",
    "end": "1264230"
  },
  {
    "text": "ok so don't think that when you are using dynamic link application everything is static so ok now we know",
    "start": "1264230",
    "end": "1272360"
  },
  {
    "text": "this code but what is useful let's simplify it quickly this is the this is",
    "start": "1272360",
    "end": "1279200"
  },
  {
    "text": "the x-axis called flow basically the Linux kernel again when dams to the to",
    "start": "1279200",
    "end": "1285530"
  },
  {
    "text": "the dynamic model what is doing basically is calling from some functions before mine and after mine so basically",
    "start": "1285530",
    "end": "1292340"
  },
  {
    "text": "you can see this as a mechanism which allow us to execute code before and after main ok don't think that you",
    "start": "1292340",
    "end": "1300200"
  },
  {
    "text": "remain is the very first thing that will be executed no main is far very far ok from from is millions of the from the",
    "start": "1300200",
    "end": "1308809"
  },
  {
    "text": "from the very first line executed at the user lab ok so we can use this attribute",
    "start": "1308809",
    "end": "1316299"
  },
  {
    "text": "constructor in in over C program and then all these functions will be called before mine ok saying for distractors of",
    "start": "1316299",
    "end": "1323960"
  },
  {
    "text": "inertia and so on an example very quick we have our main fraction ok yeah this",
    "start": "1323960",
    "end": "1330230"
  },
  {
    "text": "is the main faction as you can see this main function is calling - at exit okay but I don't have",
    "start": "1330230",
    "end": "1337259"
  },
  {
    "text": "any at exit function here okay I only have function before after main I my",
    "start": "1337259",
    "end": "1345059"
  },
  {
    "text": "function at exit only these three okay but I am not killing calling to any of these in my main program if we compile",
    "start": "1345059",
    "end": "1353309"
  },
  {
    "text": "this and we run this application we will see this pops these messages okay so the",
    "start": "1353309",
    "end": "1358889"
  },
  {
    "text": "first printf is before main is that one so because we are using this attribute",
    "start": "1358889",
    "end": "1364850"
  },
  {
    "text": "constructor so how is possible that if we are not in the main calling - - to",
    "start": "1364850",
    "end": "1372000"
  },
  {
    "text": "that function this printf is how someone must call this function before our main",
    "start": "1372000",
    "end": "1379039"
  },
  {
    "text": "okay say it happen after you can use attribute destructor after main okay and",
    "start": "1379039",
    "end": "1385289"
  },
  {
    "text": "you see before main this is the printf main this is the main take a look this",
    "start": "1385289",
    "end": "1391559"
  },
  {
    "text": "is at exit function but so far good main mine function at exit is that one and",
    "start": "1391559",
    "end": "1398210"
  },
  {
    "text": "after main is the last one okay so somehow is there are something there",
    "start": "1398210",
    "end": "1404940"
  },
  {
    "text": "that is providing us this functionality okay let's go faster so why it is attach",
    "start": "1404940",
    "end": "1411179"
  },
  {
    "start": "1408000",
    "end": "1408000"
  },
  {
    "text": "it to the executable why this code must to be in this executable okay basically because in order to call these functions",
    "start": "1411179",
    "end": "1418200"
  },
  {
    "text": "we need to save the pointer somewhere and these pointers are saved in the executable and why we are saving these",
    "start": "1418200",
    "end": "1423539"
  },
  {
    "text": "pointers or store these pointers in executable you know because each application define its own constructors",
    "start": "1423539",
    "end": "1429840"
  },
  {
    "text": "destructors initializing all this stuff so make sense that these these pointers must they are a store in the executable",
    "start": "1429840",
    "end": "1437759"
  },
  {
    "text": "and in order to sum to simplify this call this call to leave CSU unit they",
    "start": "1437759",
    "end": "1443759"
  },
  {
    "text": "are attaching this call to the executive or rather than other place because if we",
    "start": "1443759",
    "end": "1449340"
  },
  {
    "text": "don't you if they don't do that the problem is that someone someone call in",
    "start": "1449340",
    "end": "1454860"
  },
  {
    "text": "to this function for example if you are using the live C or any other library will need to parse over executable to",
    "start": "1454860",
    "end": "1460919"
  },
  {
    "text": "find this pointer in the executive also you know it's much more easy if you attach this probe examiner okay",
    "start": "1460919",
    "end": "1468740"
  },
  {
    "text": "so let's analyze this code how protected is this code so we we just let's see all",
    "start": "1468740",
    "end": "1473840"
  },
  {
    "text": "these functions that we found in our attach code and let's for example look for a stakus machine protector so as we",
    "start": "1473840",
    "end": "1481549"
  },
  {
    "text": "can see we are compiling this empty file with a stack protector all will means",
    "start": "1481549",
    "end": "1487460"
  },
  {
    "text": "that all functions must to be protected using the stack smashing protector take",
    "start": "1487460",
    "end": "1493429"
  },
  {
    "text": "a look only the main function is protected all the other functions that",
    "start": "1493429",
    "end": "1498529"
  },
  {
    "text": "are in our executable are not protected so this is telling us that these",
    "start": "1498529",
    "end": "1504529"
  },
  {
    "text": "functions were already compiled are they are just linked okay so pi compiled for",
    "start": "1504529",
    "end": "1511909"
  },
  {
    "text": "these functions are PI compiled this is good but all these functions have no status machine protector which is a",
    "start": "1511909",
    "end": "1518000"
  },
  {
    "text": "problem okay so how profitable is this code in a real attack okay okay that's fine we have some added code is in the",
    "start": "1518000",
    "end": "1524779"
  },
  {
    "text": "executable but how can we abusively okay well the first thing you need to consider is that independently of the",
    "start": "1524779",
    "end": "1532789"
  },
  {
    "text": "applications of code we have always disk all there and it is not protected",
    "start": "1532789",
    "end": "1539000"
  },
  {
    "text": "against the stack as machine protector for example okay so how can we abuse of",
    "start": "1539000",
    "end": "1545809"
  },
  {
    "text": "the scenario practice attack so this is what I'm going to explain in a minute later to see see what that okay so this",
    "start": "1545809",
    "end": "1552019"
  },
  {
    "start": "1552000",
    "end": "1552000"
  },
  {
    "text": "is the let's say the steps the receive in order to to bypass the the SLR in",
    "start": "1552019",
    "end": "1559220"
  },
  {
    "text": "64-bit so the first thing we did is let's let's try to reduce this attacks",
    "start": "1559220",
    "end": "1564980"
  },
  {
    "text": "code let's pass this at article 2 automatic tools to see if they can find any drop any gadget something that is",
    "start": "1564980",
    "end": "1574039"
  },
  {
    "text": "useful for us okay only considering this attacks code okay this will be printed",
    "start": "1574039",
    "end": "1580220"
  },
  {
    "text": "you know you can go home you can check any application you have and all this code will be printed always okay and you",
    "start": "1580220",
    "end": "1586519"
  },
  {
    "text": "can do anything you can't protect it you can't really be there you can touch it okay so we have use dropper and the",
    "start": "1586519",
    "end": "1594590"
  },
  {
    "text": "result unfortunately is that some of the necessary gadget to will ban drop attack were not found by this",
    "start": "1594590",
    "end": "1600980"
  },
  {
    "text": "by this dropper tool okay got it like right what we were not present no",
    "start": "1600980",
    "end": "1606620"
  },
  {
    "text": "control of some registered no sis call okay so means that this code you know is",
    "start": "1606620",
    "end": "1611990"
  },
  {
    "text": "good but you know it's not as good as let's use automatic tool okay so let's",
    "start": "1611990",
    "end": "1617390"
  },
  {
    "text": "use another another application another rope shell change in attitude so same",
    "start": "1617390",
    "end": "1624050"
  },
  {
    "text": "basically same problem okay they find the we can control some registers but",
    "start": "1624050",
    "end": "1629240"
  },
  {
    "text": "there are enough there are not enough stuff here to build a real attack in",
    "start": "1629240",
    "end": "1634370"
  },
  {
    "text": "practice okay so we are looking for something that we can use in practice okay they fail so let's see what we can",
    "start": "1634370",
    "end": "1640880"
  },
  {
    "text": "do so let's do a manual analysis of this attach it code for fun and profit okay",
    "start": "1640880",
    "end": "1646370"
  },
  {
    "text": "so the first thing we found is that there are something interesting in in one of these attached code in a partial",
    "start": "1646370",
    "end": "1652790"
  },
  {
    "text": "at the bottom we can see this we can probably recognize this pop-pop-pop-pop we look very good for us okay basically",
    "start": "1652790",
    "end": "1659600"
  },
  {
    "text": "this guy to be named is gadget one it is not bad we are controlling some register but unfortunately the interested ones",
    "start": "1659600",
    "end": "1666500"
  },
  {
    "text": "the ones that are used to pass parameters to functions we don't have the control of that for example at the I",
    "start": "1666500",
    "end": "1673220"
  },
  {
    "text": "air as I at the edge we don't control this this okay so not bad but you know",
    "start": "1673220",
    "end": "1678590"
  },
  {
    "text": "this we are in the same situation that the automatic thought well if we take a",
    "start": "1678590",
    "end": "1684560"
  },
  {
    "text": "look to the second gadget we found in we now expect some Amana inspection we will",
    "start": "1684560",
    "end": "1690020"
  },
  {
    "text": "see that there are some some moves here",
    "start": "1690020",
    "end": "1695050"
  },
  {
    "text": "one our call using this r12 and EDX which means that we don't have the",
    "start": "1695050",
    "end": "1701720"
  },
  {
    "text": "control but if you see this end of this",
    "start": "1701720",
    "end": "1707780"
  },
  {
    "text": "gadget you will see that the registers we need here to control this call these",
    "start": "1707780",
    "end": "1718220"
  },
  {
    "text": "three basically are using because they are moved are using these three we don't",
    "start": "1718220",
    "end": "1724760"
  },
  {
    "text": "control this we here but we control these three in the first gadget okay the furniture wall is not you know",
    "start": "1724760",
    "end": "1731420"
  },
  {
    "text": "actor is not very interesting because I can't control this that youssef useful register that I need",
    "start": "1731420",
    "end": "1736800"
  },
  {
    "text": "well let's save it for later we can't see oops",
    "start": "1736800",
    "end": "1742230"
  },
  {
    "text": "okay so basically what this is telling us is that we can basically make a call",
    "start": "1742230",
    "end": "1748200"
  },
  {
    "text": "a control call more or less okay let's see what we can find from here so this is a nice in summary we can jump to the",
    "start": "1748200",
    "end": "1756480"
  },
  {
    "start": "1752000",
    "end": "1752000"
  },
  {
    "text": "very first gadget we can do this pops okay and we can again change the control",
    "start": "1756480",
    "end": "1764430"
  },
  {
    "text": "flow to the moves and basically what we have in zip code is something like this",
    "start": "1764430",
    "end": "1769559"
  },
  {
    "text": "okay we have like a called function call with three arguments that",
    "start": "1769559",
    "end": "1775679"
  },
  {
    "text": "we can control more or less okay so at this point we have a control call okay",
    "start": "1775679",
    "end": "1782070"
  },
  {
    "text": "well basically we can control almost three registers except the first which",
    "start": "1782070",
    "end": "1788970"
  },
  {
    "text": "is only 32 32 lower speech because this is this is not a R is a e and we are",
    "start": "1788970",
    "end": "1796230"
  },
  {
    "text": "using only the health of the world okay so we can jump what we want and control",
    "start": "1796230",
    "end": "1801929"
  },
  {
    "text": "up to three arguments not bad so now the question is let's analyze what we have",
    "start": "1801929",
    "end": "1806970"
  },
  {
    "text": "so in order to create a universal micro Rob to control the execution flow just ablution of this and considering only",
    "start": "1806970",
    "end": "1813870"
  },
  {
    "text": "the attached code the code that is not coming from this source code okay this is our current situation okay with a",
    "start": "1813870",
    "end": "1822030"
  },
  {
    "text": "micro rope chain but again we don't have catch it like right what were with means",
    "start": "1822030",
    "end": "1828030"
  },
  {
    "text": "okay I want to write this string in this portion of memory we control three",
    "start": "1828030",
    "end": "1833610"
  },
  {
    "text": "arguments okay but you know we can we can set some register to some values but",
    "start": "1833610",
    "end": "1839400"
  },
  {
    "text": "if we are looking for to call some some functions we can set this particular",
    "start": "1839400",
    "end": "1846510"
  },
  {
    "text": "register to a particular value but not the content okay so we need to be careful with pointers for example we can",
    "start": "1846510",
    "end": "1853710"
  },
  {
    "text": "put this number but we cannot create this string or this multi-dimensional",
    "start": "1853710",
    "end": "1859980"
  },
  {
    "text": "array string okay which is the second argument for the exec system call for",
    "start": "1859980",
    "end": "1865170"
  },
  {
    "text": "example okay so we can control the flow we can specify the destination of all",
    "start": "1865170",
    "end": "1870510"
  },
  {
    "text": "kind okay I'm going to jump here but we don't have some some interesting register so let's",
    "start": "1870510",
    "end": "1878340"
  },
  {
    "text": "see what how can we escape of these and finally execute what we want okay again",
    "start": "1878340",
    "end": "1884640"
  },
  {
    "text": "we don't know where the heap live see or extract is memory okay so how can we",
    "start": "1884640",
    "end": "1889710"
  },
  {
    "text": "create a method our delimiter from this so let's review again okay this attached' code okay so far we",
    "start": "1889710",
    "end": "1897600"
  },
  {
    "start": "1891000",
    "end": "1891000"
  },
  {
    "text": "have abuse of leaves see as you in it okay only that but we have much more at",
    "start": "1897600",
    "end": "1904500"
  },
  {
    "text": "that code so going faster because I am running of time we can use P LTS because",
    "start": "1904500",
    "end": "1912240"
  },
  {
    "text": "they are very good candidate okay you see the how we need to call a PhD it",
    "start": "1912240",
    "end": "1919050"
  },
  {
    "text": "looks like a function function call okay PT's re as you can see in the executable",
    "start": "1919050",
    "end": "1926429"
  },
  {
    "text": "areas of mice that is attached to the wall and if we consider the basic basic very basic application must have read",
    "start": "1926429",
    "end": "1933600"
  },
  {
    "text": "write or send and recite because otherwise is there is no way to interact with the application so we can assume",
    "start": "1933600",
    "end": "1939630"
  },
  {
    "text": "that or either read write or send receive will be there okay or all",
    "start": "1939630",
    "end": "1945660"
  },
  {
    "text": "honored this is just two examples but some way to interact okay because if we cannot interact it's hard to explain",
    "start": "1945660",
    "end": "1952830"
  },
  {
    "text": "that okay so assuming that this is a basic basic server",
    "start": "1952830",
    "end": "1958440"
  },
  {
    "text": "calling to return right okay so now we have our MTC file but this simplified is",
    "start": "1958440",
    "end": "1963870"
  },
  {
    "text": "calling to read and write only these two otherwise we cannot even talk to the execute oh okay this is how PS these",
    "start": "1963870",
    "end": "1970740"
  },
  {
    "text": "looks okay so basically I did an abstraction is basically if we have",
    "start": "1970740",
    "end": "1977940"
  },
  {
    "text": "right in in our program okay means that there is a P P LT entry okay and this is",
    "start": "1977940",
    "end": "1984059"
  },
  {
    "text": "basically the arguments they are expecting okay you will match this what we have basically the very first",
    "start": "1984059",
    "end": "1990419"
  },
  {
    "text": "argument is a file description this is okay with us the second argument is R is a pointer so we can control the others",
    "start": "1990419",
    "end": "1997140"
  },
  {
    "text": "but not the content so 5050 and the fifth the third argument is the number of a bite that you want to write",
    "start": "1997140",
    "end": "2004429"
  },
  {
    "text": "okay so this is fine for us so the second one so far is the only one that is a little bit difficult so let's let's",
    "start": "2004429",
    "end": "2011990"
  },
  {
    "text": "see how we can up use of this right okay if we are able to call to this right we",
    "start": "2011990",
    "end": "2018140"
  },
  {
    "text": "can reduce the file descriptor in order to leak information to us okay",
    "start": "2018140",
    "end": "2024470"
  },
  {
    "text": "for example we can call to right and if we somehow are connected to a server that means that this server internally",
    "start": "2024470",
    "end": "2030590"
  },
  {
    "text": "is handling is keeping a file descriptor associated to our connection okay so if we write in this file descriptor these",
    "start": "2030590",
    "end": "2038450"
  },
  {
    "text": "methods will arrive to us okay so basically define the future is an",
    "start": "2038450",
    "end": "2044240"
  },
  {
    "text": "integrator we can predict okay this is this is trivial so the second the most problematic one we can put any value but",
    "start": "2044240",
    "end": "2051260"
  },
  {
    "text": "no pointers so so better say we cannot",
    "start": "2051260",
    "end": "2056750"
  },
  {
    "text": "control the content or the point well we have the god table here okay and the god",
    "start": "2056750",
    "end": "2063740"
  },
  {
    "text": "fable is helping us a lot why because god table is an arai this array is in",
    "start": "2063740",
    "end": "2069408"
  },
  {
    "text": "the executable area and contains its content is our pointer to libraries",
    "start": "2069409",
    "end": "2075919"
  },
  {
    "text": "where the library side okay so basically we can see this God as an array of pointers so we can use here as a second",
    "start": "2075919",
    "end": "2085280"
  },
  {
    "text": "argument word an entry in this case the number one okay so this is the call we",
    "start": "2085280",
    "end": "2093800"
  },
  {
    "text": "can do using the let's say the gadget we have okay and this is a trick to",
    "start": "2093800",
    "end": "2100160"
  },
  {
    "text": "randomize the live cylinder okay this is part of the attack so if we somehow can",
    "start": "2100160",
    "end": "2105200"
  },
  {
    "text": "for example assuming that the operating system platoon the number four as I've",
    "start": "2105200",
    "end": "2110330"
  },
  {
    "text": "added as a fi the filter and then we can write for God Table eight and this will",
    "start": "2110330",
    "end": "2116660"
  },
  {
    "text": "magically send us the content of the God okay so basically in order to leak where",
    "start": "2116660",
    "end": "2125300"
  },
  {
    "text": "the life C is in memory we are basically are writing the address of this God",
    "start": "2125300",
    "end": "2130609"
  },
  {
    "text": "table which is in the executable area okay and therefore the life C will be",
    "start": "2130609",
    "end": "2136500"
  },
  {
    "text": "randomized okay so now the third parameter is eight with miss that please write eight byte using the file",
    "start": "2136500",
    "end": "2144300"
  },
  {
    "text": "descriptor associated to my connection and please send us the content of the",
    "start": "2144300",
    "end": "2149310"
  },
  {
    "text": "very first entry of the god table which is where is the right function is is",
    "start": "2149310",
    "end": "2155640"
  },
  {
    "text": "loaded in memory okay so basically the server is sending us where this write",
    "start": "2155640",
    "end": "2161550"
  },
  {
    "text": "function is located in memory so we have the the randomized where the live C is",
    "start": "2161550",
    "end": "2166560"
  },
  {
    "text": "in memory okay so how can we build a final attack okay now we have live C",
    "start": "2166560",
    "end": "2173130"
  },
  {
    "text": "this is trivial okay it's trivial to generate any kind of food Rob chain attack okay",
    "start": "2173130",
    "end": "2179490"
  },
  {
    "text": "and basically it's allowing us to execute arbitrary code okay so we can",
    "start": "2179490",
    "end": "2187020"
  },
  {
    "text": "see this attack this a two two stages okay the first stage basically me is to",
    "start": "2187020",
    "end": "2192420"
  },
  {
    "text": "create a micro payload to leak where this right is in in memory okay and then",
    "start": "2192420",
    "end": "2199410"
  },
  {
    "text": "attackers will reside where this live C is located the memory actually wear this right symbol is in memory but right is a",
    "start": "2199410",
    "end": "2207270"
  },
  {
    "text": "constant offset from the base where the leaves is in memory and the second stage is using this let's create a full",
    "start": "2207270",
    "end": "2215880"
  },
  {
    "text": "payload this will formalize much better these two stages okay so the full attack",
    "start": "2215880",
    "end": "2221850"
  },
  {
    "start": "2217000",
    "end": "2217000"
  },
  {
    "text": "is basically called to the gadget one okay this is attached code so this means that",
    "start": "2221850",
    "end": "2227280"
  },
  {
    "text": "all of this is in the attach code is in the executable okay this is the very first the very first part okay so we",
    "start": "2227280",
    "end": "2235740"
  },
  {
    "text": "what we need is to relate the control flow to the very first gadget okay and then to the second one and and then to",
    "start": "2235740",
    "end": "2242370"
  },
  {
    "text": "the third so the third is basically the PLT entry of right okay as a result we",
    "start": "2242370",
    "end": "2249090"
  },
  {
    "text": "will have word this right symbol is in memory okay and this is the input of the",
    "start": "2249090",
    "end": "2256320"
  },
  {
    "text": "second pilot for the stage number two okay using this information and then we",
    "start": "2256320",
    "end": "2262980"
  },
  {
    "text": "can start to jump to gadget from leave see as much as we need to",
    "start": "2262980",
    "end": "2269100"
  },
  {
    "text": "create full functional drop attacks to do whatever we want with no restriction",
    "start": "2269100",
    "end": "2275670"
  },
  {
    "text": "okay at the end I will show you how can we execute every motion okay okay well more or less it seems",
    "start": "2275670",
    "end": "2284490"
  },
  {
    "text": "clear but how can we know where the executable is in memory this is the big",
    "start": "2284490",
    "end": "2290520"
  },
  {
    "text": "question okay because you know if I know where the executable is a memory everything is well again you can use the",
    "start": "2290520",
    "end": "2296820"
  },
  {
    "text": "offset to lip burner ability the witnesses to guess that but I would like",
    "start": "2296820",
    "end": "2302790"
  },
  {
    "text": "to just present to two things if we are attacking a forking server and the",
    "start": "2302790",
    "end": "2308820"
  },
  {
    "text": "executable is PI compiled with Miss full SLR that means that we somehow need to",
    "start": "2308820",
    "end": "2314460"
  },
  {
    "text": "do brute force attack okay if we are talking a four-team server and this",
    "start": "2314460",
    "end": "2319530"
  },
  {
    "text": "forking server is not pi compile means that we need only one single shot to",
    "start": "2319530",
    "end": "2325320"
  },
  {
    "text": "bypass everything okay so that's another a but doesn't matter",
    "start": "2325320",
    "end": "2332370"
  },
  {
    "text": "if a canary or all this stuff I will show you if we have in a server with means that is not a four-team server",
    "start": "2332370",
    "end": "2338900"
  },
  {
    "text": "well if it's not PI executable again one single salt because we know where we",
    "start": "2338900",
    "end": "2344340"
  },
  {
    "text": "need to jump and we need how to create a stack and we need to you know everything so we can use this attack in all these",
    "start": "2344340",
    "end": "2351060"
  },
  {
    "text": "scenarios what about we have our in at the server and it's PI executable well",
    "start": "2351060",
    "end": "2356220"
  },
  {
    "text": "question mark we are still analyzing this is not that easy because we can't",
    "start": "2356220",
    "end": "2361400"
  },
  {
    "text": "we can't let's say guess what is the executable in memory by doing a small",
    "start": "2361400",
    "end": "2366870"
  },
  {
    "text": "brute force attack we can do for example partial overwrite of the return address",
    "start": "2366870",
    "end": "2371880"
  },
  {
    "text": "without touching the full address okay in order to control and jump to the same",
    "start": "2371880",
    "end": "2377490"
  },
  {
    "text": "executable okay but this is a Z for another day okay so one automatic tools",
    "start": "2377490",
    "end": "2384540"
  },
  {
    "text": "like repair Rob sell fail ok basically they are so clever ok but you can imagine they have",
    "start": "2384540",
    "end": "2390420"
  },
  {
    "text": "limitation they are not perfect so basically they are focused on profitable",
    "start": "2390420",
    "end": "2395520"
  },
  {
    "text": "gadget ok and then then try to link them ok this is a gadget this is a ready disregarded and as you can see we this this the",
    "start": "2395520",
    "end": "2402619"
  },
  {
    "text": "gadget that was key for us is not a budget typical budget",
    "start": "2402619",
    "end": "2407799"
  },
  {
    "text": "pop-pop-pop return this pop-pop-pop call and even this sorry MooMoo book called",
    "start": "2407799",
    "end": "2415009"
  },
  {
    "text": "anyways even this move-move-move is not you know there is no no relation",
    "start": "2415009",
    "end": "2420039"
  },
  {
    "text": "so it's hard to to know that so i better knowledge about with registers we",
    "start": "2420039",
    "end": "2426319"
  },
  {
    "text": "control will improv this tool for example if they don't know okay I don't I have no control of the register now",
    "start": "2426319",
    "end": "2431390"
  },
  {
    "text": "but you know if there is a gadget in other place that I control and I can",
    "start": "2431390",
    "end": "2437180"
  },
  {
    "text": "start to see registers and you know it's not an easy and easy task for an automatic to a lot of combinations but",
    "start": "2437180",
    "end": "2444380"
  },
  {
    "text": "manually it can be so when app when an advanced drop tools say there are not",
    "start": "2444380",
    "end": "2450049"
  },
  {
    "text": "enough gadgets well it's not always true as you do fuzzy okay so I will suggest you to do a",
    "start": "2450049",
    "end": "2455900"
  },
  {
    "text": "manual inspection of the code and see so making this attack profitable with a",
    "start": "2455900",
    "end": "2462499"
  },
  {
    "start": "2459000",
    "end": "2459000"
  },
  {
    "text": "modifier with a modified this this repair tool to support this attack okay",
    "start": "2462499",
    "end": "2467630"
  },
  {
    "text": "basically we we extend this tool and now it supports dupe - okay and exec with",
    "start": "2467630",
    "end": "2475640"
  },
  {
    "text": "with these parameters okay in order to have an interactive shell okay Minho's",
    "start": "2475640",
    "end": "2480829"
  },
  {
    "text": "symbol is Miss here okay basically we do help you will see that now you can use",
    "start": "2480829",
    "end": "2487130"
  },
  {
    "text": "this tool wait I didn't publish the patch yet I will do I will do son okay",
    "start": "2487130",
    "end": "2492470"
  },
  {
    "text": "and then you can you can optimize this attack so demo quickly I'm going to show",
    "start": "2492470",
    "end": "2501920"
  },
  {
    "text": "you how bypass all these things okay not only the SLR we are going to use a fork",
    "start": "2501920",
    "end": "2509900"
  },
  {
    "text": "in server and this Fork interval is protected with all this technology okay that means that this PI compile",
    "start": "2509900",
    "end": "2515329"
  },
  {
    "text": "libraries obviously with pic randomized be a space full number two full stack",
    "start": "2515329",
    "end": "2522859"
  },
  {
    "text": "protect at all or as much as we can okay 64-bit architectures will row now 45",
    "start": "2522859",
    "end": "2531440"
  },
  {
    "text": "equal to optimizations the best executable you can give me now",
    "start": "2531440",
    "end": "2536720"
  },
  {
    "text": "full protected okay this is more or less than what I'm going to show you okay so",
    "start": "2536720",
    "end": "2542120"
  },
  {
    "text": "let's see how can we do that okay I will show you first okay with me one second",
    "start": "2542120",
    "end": "2554030"
  },
  {
    "text": "and we'll move the screen one moment",
    "start": "2554030",
    "end": "2577690"
  },
  {
    "text": "okay I have here some exploits I don't",
    "start": "2592440",
    "end": "2598180"
  },
  {
    "text": "know how my homemade have so this is the",
    "start": "2598180",
    "end": "2604630"
  },
  {
    "text": "wrapper so I need to wait to turn on the Builder machine let me see",
    "start": "2604630",
    "end": "2611580"
  },
  {
    "text": "okay basically this bill trauma teen is a regular Ubuntu builder machine and I'm",
    "start": "2619440",
    "end": "2626010"
  },
  {
    "text": "going to run a server a four game server who basically is reading from a socket okay I'm writing back that the Antwoord",
    "start": "2626010",
    "end": "2632760"
  },
  {
    "text": "so let me okay I'm going to run the okay",
    "start": "2632760",
    "end": "2650240"
  },
  {
    "text": "so some work with okay okay",
    "start": "2650240",
    "end": "2661730"
  },
  {
    "text": "I'm going to move to route okay you yes",
    "start": "2667020",
    "end": "2680650"
  },
  {
    "text": "we have here the server I'm going to launch the server okay this is a server",
    "start": "2680650",
    "end": "2687550"
  },
  {
    "text": "64-bit architectures pile compiled a stack as machine protector everything ok",
    "start": "2687550",
    "end": "2692740"
  },
  {
    "text": "I will I will publish the code and all this stuff so it's a little bit strange",
    "start": "2692740",
    "end": "2701190"
  },
  {
    "text": "so because I don't have too much time I will go directly because I have to",
    "start": "2705210",
    "end": "2712210"
  },
  {
    "text": "exploit this is the the first one is a stage 1 ready to seize you which matches",
    "start": "2712210",
    "end": "2717400"
  },
  {
    "text": "exactly with my explanation okay the first one is just well maybe I hope it's one second stage let's let's launch the",
    "start": "2717400",
    "end": "2725349"
  },
  {
    "text": "very first exploit ok server is this",
    "start": "2725349",
    "end": "2734589"
  },
  {
    "text": "being worse server port is $19.99",
    "start": "2734589",
    "end": "2743070"
  },
  {
    "text": "well basically the output means okay I'm going to find where is the the the",
    "start": "2746550",
    "end": "2752700"
  },
  {
    "text": "offset of the canary and the trick is same pilot and every time you are",
    "start": "2752700",
    "end": "2757860"
  },
  {
    "text": "sending a pilot you are increasing the pilot until you will get across when do get across the connection is closed and",
    "start": "2757860",
    "end": "2763290"
  },
  {
    "text": "that means that you are talking something that is producing a cross and this is the offset of the canary then we",
    "start": "2763290",
    "end": "2768630"
  },
  {
    "text": "are guessing the Canada value do it using a PI for bite attack and we are",
    "start": "2768630",
    "end": "2773700"
  },
  {
    "text": "using again the same trick from the offset to leave to guess where the world executable is in memory using a wife or",
    "start": "2773700",
    "end": "2780180"
  },
  {
    "text": "by to the return address and then we are using the gadget number one to lick where this write this by fraction is in",
    "start": "2780180",
    "end": "2791880"
  },
  {
    "text": "memory okay so basically if we save this",
    "start": "2791880",
    "end": "2802710"
  },
  {
    "text": "output basically as you can see if you can read from here the stage output one",
    "start": "2802710",
    "end": "2808380"
  },
  {
    "text": "stage one output this is the pilot we need to introduce to the second stage",
    "start": "2808380",
    "end": "2813510"
  },
  {
    "text": "and this is the match the output stage one right okay this is used by the other",
    "start": "2813510",
    "end": "2820440"
  },
  {
    "text": "Python asleep okay so let me we can't directly I have",
    "start": "2820440",
    "end": "2831510"
  },
  {
    "text": "I have combined both in full greater to",
    "start": "2831510",
    "end": "2838170"
  },
  {
    "text": "CCU script so let's use it directly for the sake of time okay full server and",
    "start": "2838170",
    "end": "2849780"
  },
  {
    "text": "then the port port 99 okay so the time",
    "start": "2849780",
    "end": "2858620"
  },
  {
    "text": "it's real so this is the time we need to bypass a fork in server full protected",
    "start": "2858620",
    "end": "2865380"
  },
  {
    "text": "okay using this technique okay this is real time count the time so cannery",
    "start": "2865380",
    "end": "2872180"
  },
  {
    "text": "everything self okay now we are in a",
    "start": "2872180",
    "end": "2877320"
  },
  {
    "text": "different environment take a look you can see the circle pie stuff did you see the IP for example I",
    "start": "2877320",
    "end": "2882630"
  },
  {
    "text": "don't know it's not DPR okay and we are",
    "start": "2882630",
    "end": "2889440"
  },
  {
    "text": "route okay this is the full time we need to bypass all of this so like one second",
    "start": "2889440",
    "end": "2896190"
  },
  {
    "text": "one and a half seconds okay all these stitches okay so the best thing this is",
    "start": "2896190",
    "end": "2903240"
  },
  {
    "text": "genetic you can use it in any executable so you don't need to care about okay maybe that this function will be",
    "start": "2903240",
    "end": "2908970"
  },
  {
    "text": "protected no they don't have a stack as machine protector or maybe this code is not there no this code will be there if",
    "start": "2908970",
    "end": "2915060"
  },
  {
    "text": "you can redirect the flow do it and this is how to do it in less than one second",
    "start": "2915060",
    "end": "2921720"
  },
  {
    "text": "okay so when back to their presentation to talk about little bit mitigation",
    "start": "2921720",
    "end": "2929089"
  },
  {
    "text": "one second I need to go back okay so",
    "start": "2936150",
    "end": "2948280"
  },
  {
    "text": "basically with this attack what we are basically saying is that if you have a",
    "start": "2948280",
    "end": "2954609"
  },
  {
    "text": "four-team server in the world and you have a stack buffer overflow today you",
    "start": "2954609",
    "end": "2962590"
  },
  {
    "text": "are lost okay there is no way to protect that okay if you find some server in the",
    "start": "2962590",
    "end": "2970420"
  },
  {
    "text": "world we have a stack buffer overflow and you have the ability to perform a",
    "start": "2970420",
    "end": "2976480"
  },
  {
    "text": "byte for byte attack and then you can combine this attack and you will get a root shell in two seconds we are talking",
    "start": "2976480",
    "end": "2983230"
  },
  {
    "text": "about more than 20 years all vulnerability stack buffer overflow okay",
    "start": "2983230",
    "end": "2988240"
  },
  {
    "text": "and we are still trying to fix that so let me show you the final conclusions if",
    "start": "2988240",
    "end": "2995440"
  },
  {
    "text": "this allows me okay it's close",
    "start": "2995440",
    "end": "3010910"
  },
  {
    "text": "wait a second something is happening to my presentation okay so let me see",
    "start": "3017630",
    "end": "3029680"
  },
  {
    "text": "Wiggly okay I plan to publish this in my my probably",
    "start": "3029680",
    "end": "3037370"
  },
  {
    "text": "my personal website okay in order to it's not working okay what I'm going to",
    "start": "3037370",
    "end": "3046430"
  },
  {
    "text": "talk now is about some some mitigations I will talk about why why is so hard to",
    "start": "3046430",
    "end": "3051980"
  },
  {
    "text": "fix why we don't have let's do it",
    "start": "3051980",
    "end": "3058100"
  },
  {
    "text": "without",
    "start": "3058100",
    "end": "3060460"
  },
  {
    "start": "3072000",
    "end": "3072000"
  },
  {
    "text": "okay yes quickly about mitigation ok mitigation one one thing we can do is",
    "start": "3072830",
    "end": "3078320"
  },
  {
    "text": "okay let's move some of this gadget to the live see to the library so basically",
    "start": "3078320",
    "end": "3083570"
  },
  {
    "text": "we basically what we can do is to move some of this code that is in attach it to the executable let's move to the live",
    "start": "3083570",
    "end": "3090260"
  },
  {
    "text": "see okay and then what we are doing is we are removing they got a number two",
    "start": "3090260",
    "end": "3095540"
  },
  {
    "text": "from our first let's say 10 or gadget located the stage number one we are",
    "start": "3095540",
    "end": "3101480"
  },
  {
    "text": "removing that okay we have implement that apart to do that this can be this can be this can be",
    "start": "3101480",
    "end": "3107450"
  },
  {
    "text": "implemented but again we are removing only one gadget for a full chain okay so",
    "start": "3107450",
    "end": "3112700"
  },
  {
    "text": "the second the second is basically let's implement in a different way how the life see is managing all this stuff and",
    "start": "3112700",
    "end": "3119150"
  },
  {
    "text": "basically what we can do is to update or to change how this scale is made because this call it just yet the zip code is",
    "start": "3119150",
    "end": "3125810"
  },
  {
    "text": "using a stack we can use it we can do basically way just by adding a stack the static world to the variables means that",
    "start": "3125810",
    "end": "3132650"
  },
  {
    "text": "the variables instead of the stack edges in data and then we are not depending on the stack okay again we are just destroy",
    "start": "3132650",
    "end": "3140510"
  },
  {
    "text": "in one of the links so it doesn't look a very good solution so a third solution",
    "start": "3140510",
    "end": "3146060"
  },
  {
    "text": "could be two-putt correct applications basically we have two flower wars we can",
    "start": "3146060",
    "end": "3151460"
  },
  {
    "text": "once we have we are in main we are executing the main function we can write overwrite with zeros so let's destroy",
    "start": "3151460",
    "end": "3157850"
  },
  {
    "text": "this code because I am 100% sure I don't need this code in the future this have a problem with with certain resources of",
    "start": "3157850",
    "end": "3164750"
  },
  {
    "text": "all this stuff we have also implemented a part which can which can you can achieve that so you can download this",
    "start": "3164750",
    "end": "3171440"
  },
  {
    "text": "part you can apply this light to all your security walls and more or less you are safe it that's it the solution that",
    "start": "3171440",
    "end": "3179330"
  },
  {
    "text": "we really want is to move this attached code to to the libraries area okay why",
    "start": "3179330",
    "end": "3185900"
  },
  {
    "text": "well because if this code is dirt we can not abuse at all of the of this code okay all executable codes will be used",
    "start": "3185900",
    "end": "3195160"
  },
  {
    "text": "controllable with means that there are called here as we can note an if I am a developer okay I want this this code to",
    "start": "3195160",
    "end": "3202070"
  },
  {
    "text": "be secure I want to compile this code with the stack as much you can do that okay because this code",
    "start": "3202070",
    "end": "3207140"
  },
  {
    "text": "is already compiled and this is in the in your executable okay this solution is is it's almost impossible to is very",
    "start": "3207140",
    "end": "3213260"
  },
  {
    "text": "hard to apply basically because this means move this to this will means that the PLT and god must to be in library",
    "start": "3213260",
    "end": "3221780"
  },
  {
    "text": "and by definition god is something that must to be is belongs to the executable",
    "start": "3221780",
    "end": "3227990"
  },
  {
    "text": "okay it's not it's not something that you need to share so you can implement tricks but is not easy okay and you can",
    "start": "3227990",
    "end": "3234920"
  },
  {
    "text": "remove PT and then if you REM ability the way to call functions library functions is by accessing to go to the",
    "start": "3234920",
    "end": "3241940"
  },
  {
    "text": "code table but we also want to remove God if we remove all we can know the mobility so there is no easy solution so",
    "start": "3241940",
    "end": "3247940"
  },
  {
    "text": "this is how we find it okay so because sometimes people ask me how do you find",
    "start": "3247940",
    "end": "3253099"
  },
  {
    "text": "that well sometimes you need to print a sound blue and you need to a study assembler okay",
    "start": "3253099",
    "end": "3259670"
  },
  {
    "text": "you can just your printer at home and as paint I don't know one today is reading line by line for",
    "start": "3259670",
    "end": "3267260"
  },
  {
    "text": "example this world might not okay it seems that this are not useful but you know maybe I can jump here and later on",
    "start": "3267260",
    "end": "3274490"
  },
  {
    "text": "I can down there and well be careful with this this is changing the control flow so we were writing overall now to",
    "start": "3274490",
    "end": "3281359"
  },
  {
    "text": "see okay but basically you can print object and output and learn about that",
    "start": "3281359",
    "end": "3286990"
  },
  {
    "text": "conclusions and black hats alright basically we have presented a technique a method that basically can automate the",
    "start": "3286990",
    "end": "3294560"
  },
  {
    "start": "3287000",
    "end": "3287000"
  },
  {
    "text": "construction of off exploit to bypass the you salary in 64-bit architecture okay to go over young automatic tools I",
    "start": "3294560",
    "end": "3303560"
  },
  {
    "text": "always recommend to a manual inspection okay because we have always gadgets okay and we we saw that we can trust",
    "start": "3303560",
    "end": "3310609"
  },
  {
    "text": "automatic tools okay by default we present how we can create a micro Rob to leak things okay in this case I use this",
    "start": "3310609",
    "end": "3318440"
  },
  {
    "text": "micrograph to lick where they write is in memory but you can use this micro Rob to lick whatever you want okay do for",
    "start": "3318440",
    "end": "3325010"
  },
  {
    "text": "example passwords or any any data and executable any buffer law whatever you want okay imagination is the limit",
    "start": "3325010",
    "end": "3331810"
  },
  {
    "text": "also the attach call or be careful with that because invalid invalidates other",
    "start": "3331810",
    "end": "3336980"
  },
  {
    "text": "security images for example the instruction set randomization which means that every executable is",
    "start": "3336980",
    "end": "3342790"
  },
  {
    "text": "completely different okay because you can randomize the instructions or you can the they say take how they work if",
    "start": "3342790",
    "end": "3351650"
  },
  {
    "text": "you're attaching some code that you can't compile you can't expect that this protected oh this is something with you",
    "start": "3351650",
    "end": "3358400"
  },
  {
    "text": "okay so also security options must to be decided at the very beginning you are attaching some code your link in so code",
    "start": "3358400",
    "end": "3364850"
  },
  {
    "text": "you can't you can learn okay we represented some workarounds okay to prevent this gadget you can use it you",
    "start": "3364850",
    "end": "3370130"
  },
  {
    "text": "can pass your executables to be safer let's say okay the ideal solution will be to move this attached code to the lip",
    "start": "3370130",
    "end": "3376850"
  },
  {
    "text": "see but I saw that it's not it's not a easy task and that's all form from my",
    "start": "3376850",
    "end": "3382430"
  },
  {
    "text": "side any questions thank you very much",
    "start": "3382430",
    "end": "3387190"
  },
  {
    "text": "[Applause]",
    "start": "3389100",
    "end": "3393840"
  }
]