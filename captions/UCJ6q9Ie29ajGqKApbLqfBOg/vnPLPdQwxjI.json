[
  {
    "text": "so it's halfast 7 now for me for you it's halfast 10 so let's",
    "start": "68759",
    "end": "73920"
  },
  {
    "text": "start let's start and I see nothing on my screen so let's adjust again ah yeah",
    "start": "73920",
    "end": "80479"
  },
  {
    "text": "now I have the full view can everybody hear me can everybody understand my accent no",
    "start": "80479",
    "end": "88840"
  },
  {
    "text": "it's bestest failure best fa in German so",
    "start": "88840",
    "end": "94520"
  },
  {
    "text": "hopefully you will get it used to it until the end of",
    "start": "94680",
    "end": "100159"
  },
  {
    "text": "the presentation so I'm talking will'll be talking about Java Library holdes allowing multiplatform denal of service",
    "start": "100159",
    "end": "108320"
  },
  {
    "text": "scenarios and I'm showing how to find um entries in this language that",
    "start": "108320",
    "end": "117880"
  },
  {
    "text": "show that this is an architecture that also has a lot of native stuff under the hood and",
    "start": "117880",
    "end": "126240"
  },
  {
    "text": "this native stuff can be abused or used or whatever in some",
    "start": "126240",
    "end": "133239"
  },
  {
    "text": "means so let's have a short view through the",
    "start": "133239",
    "end": "138319"
  },
  {
    "text": "agenda first the motivation why I did all this stuff and then I go a little",
    "start": "138319",
    "end": "144239"
  },
  {
    "text": "bit into the architecture then I show how to call the native the native entry",
    "start": "144239",
    "end": "152720"
  },
  {
    "text": "points and pass some parameters that are not very valid to",
    "start": "152720",
    "end": "158959"
  },
  {
    "text": "that then I will give an overview how to find the vulnerable entry",
    "start": "158959",
    "end": "166400"
  },
  {
    "text": "points in the G and then I'll show how to how these can be yeah these results",
    "start": "166400",
    "end": "175280"
  },
  {
    "text": "can be used to crash several GES on multiple platforms fils and",
    "start": "175280",
    "end": "181360"
  },
  {
    "text": "versions and it will show exclusively on blackhead what I've sent to Sun last",
    "start": "181360",
    "end": "188440"
  },
  {
    "text": "months and this will be a public announcement I waited for four weeks for",
    "start": "188440",
    "end": "194640"
  },
  {
    "text": "them to answer and I got no answer and these are some nice entry points that",
    "start": "194640",
    "end": "200959"
  },
  {
    "text": "are in the official language interface so why do I do all this stuff",
    "start": "200959",
    "end": "209239"
  },
  {
    "text": "I'm doing my PhD CES about security security patterns and anti patterns and",
    "start": "209239",
    "end": "215480"
  },
  {
    "text": "I've been doing previous work on bite code engineering which was presented in Las Vegas last",
    "start": "215480",
    "end": "221760"
  },
  {
    "text": "August and I also found out that in the Java environment one important security",
    "start": "221760",
    "end": "228680"
  },
  {
    "text": "anti pattern is found and that's the in inadequate guarding of system layer functions",
    "start": "228680",
    "end": "235079"
  },
  {
    "text": "against invalid values passed from user level passed from user level functions",
    "start": "235079",
    "end": "241120"
  },
  {
    "text": "maybe directly pass from CGI parameters or",
    "start": "241120",
    "end": "246959"
  },
  {
    "text": "whatever so little bit Theory only two slides what is the security under",
    "start": "246959",
    "end": "254040"
  },
  {
    "text": "pattern a pattern is commonly used solution to a common problem like uh",
    "start": "254040",
    "end": "259199"
  },
  {
    "text": "gamma antis set so an anti pattern is a commonly used PO solution to a common",
    "start": "259199",
    "end": "264800"
  },
  {
    "text": "problem and the security under pattern are commonly used poor solutions to Common security",
    "start": "264800",
    "end": "272479"
  },
  {
    "text": "problems so that was the theory now I go into the practice to",
    "start": "273000",
    "end": "281120"
  },
  {
    "text": "our point of Interest the Java G and it claims to be platform independent on",
    "start": "281120",
    "end": "286440"
  },
  {
    "text": "multiple platforms I saw it running on Windows and ax and s390 and Linux and",
    "start": "286440",
    "end": "295240"
  },
  {
    "text": "os2 there are still some running installations running Java on os2 many",
    "start": "295240",
    "end": "300280"
  },
  {
    "text": "banks many financial institutions they have a lot of oh to Legacy my favorite",
    "start": "300280",
    "end": "306000"
  },
  {
    "text": "operating system so uh Java like every",
    "start": "306000",
    "end": "312160"
  },
  {
    "text": "language has to communicate has to communicate to the operating system to",
    "start": "312160",
    "end": "317560"
  },
  {
    "text": "the outer world and therefore it needs sockets or higher communication like",
    "start": "317560",
    "end": "322800"
  },
  {
    "text": "corba needs files database access does compression all the jar archives are",
    "start": "322800",
    "end": "331240"
  },
  {
    "text": "compressed needs graphic functions for the yeah awt toolkit or the swing",
    "start": "331240",
    "end": "339039"
  },
  {
    "text": "toolkit and use of course for sading things like signals and",
    "start": "339039",
    "end": "344600"
  },
  {
    "text": "threats yeah this functionality is um",
    "start": "344600",
    "end": "350160"
  },
  {
    "text": "realized via the yeah platform dependent realized via the sun do classes and the",
    "start": "350160",
    "end": "357360"
  },
  {
    "text": "sun do classes are our first first point of",
    "start": "357360",
    "end": "363720"
  },
  {
    "text": "Interest so this is the official picture from Sun how they Define their Java",
    "start": "364759",
    "end": "371840"
  },
  {
    "text": "architecture but if you do a little bit a little deeper view if you",
    "start": "371840",
    "end": "378240"
  },
  {
    "text": "take how the parameters are flown are flow do flow through the different",
    "start": "378240",
    "end": "385759"
  },
  {
    "text": "interfaces you see that all goes through jni and J I is the main point of",
    "start": "385759",
    "end": "391680"
  },
  {
    "text": "communications to the native flayer therefore all webart or a WT or the",
    "start": "391680",
    "end": "397759"
  },
  {
    "text": "graphic functions or jdbc the obbc jdbc bridge does ji stuff",
    "start": "397759",
    "end": "403520"
  },
  {
    "text": "and the Java util functions does j i stuff and all go through this uh",
    "start": "403520",
    "end": "411120"
  },
  {
    "text": "interface so yeah that's what I said there are the Java classes which",
    "start": "412039",
    "end": "418319"
  },
  {
    "text": "are in the RT your ja file and the native uh code which resits resides",
    "start": "418319",
    "end": "426919"
  },
  {
    "text": "which is located in the G bin dll",
    "start": "426919",
    "end": "433280"
  },
  {
    "text": "directory and the dependencies can be inspected with yeah for example with the",
    "start": "433280",
    "end": "440639"
  },
  {
    "text": "dependence. Exel from the Microsoft SDK so this is how the dependencies from",
    "start": "440639",
    "end": "448800"
  },
  {
    "text": "the obbc jdbc bridge look like you have",
    "start": "448800",
    "end": "455120"
  },
  {
    "text": "here for example the bind column to exec which is an export and this export",
    "start": "455120",
    "end": "462560"
  },
  {
    "text": "is mapped directly to a native Java function we will see some more examples",
    "start": "462560",
    "end": "469599"
  },
  {
    "text": "later so the public",
    "start": "469599",
    "end": "473800"
  },
  {
    "text": "API what did I mean with this sentence",
    "start": "475280",
    "end": "480479"
  },
  {
    "text": "a yeah um so let's skip the first sent it",
    "start": "480479",
    "end": "486639"
  },
  {
    "text": "connects the Java code to the native code that's the most important sentence",
    "start": "486639",
    "end": "491720"
  },
  {
    "text": "on the slides and allows native code that's a way around the invocation",
    "start": "491720",
    "end": "496759"
  },
  {
    "text": "interface to invoke to start jvms and to run Java processes but this is not topic",
    "start": "496759",
    "end": "505280"
  },
  {
    "text": "of the speech so uh people do a lot of Errors why do they",
    "start": "505280",
    "end": "512479"
  },
  {
    "text": "lot of Errors because the interfaces are uh designed to be used by experienced",
    "start": "512479",
    "end": "520039"
  },
  {
    "text": "people and uh therefore the entry level is very",
    "start": "520039",
    "end": "526720"
  },
  {
    "text": "high that's what sun says in its tutorial about the",
    "start": "526720",
    "end": "532160"
  },
  {
    "text": "jni so it's just a logical consequences that",
    "start": "532160",
    "end": "537800"
  },
  {
    "text": "people also the programs that some maybe do a lot of Errors when they code with a",
    "start": "537800",
    "end": "544839"
  },
  {
    "text": "jni so the",
    "start": "547480",
    "end": "552519"
  },
  {
    "text": "jni forms the OS instruction layer which is a set of java class files already",
    "start": "552519",
    "end": "557600"
  },
  {
    "text": "said before and it's coupled with a jni and has no the following short fun",
    "start": "557600",
    "end": "564480"
  },
  {
    "text": "shortcomings there's no sandbox there's no visibility",
    "start": "564480",
    "end": "570320"
  },
  {
    "text": "protection you can write to protected Fields with jni and of course the jni",
    "start": "570320",
    "end": "577079"
  },
  {
    "text": "implementation is implemented with C so you have a lot of error Point code",
    "start": "577079",
    "end": "582640"
  },
  {
    "text": "pointers character buffers and memory allocation you have to do yourself and can do the errors",
    "start": "582640",
    "end": "592160"
  },
  {
    "text": "yourself so",
    "start": "594519",
    "end": "598519"
  },
  {
    "text": "and that's what's very dangerous because the native functions which are called",
    "start": "601760",
    "end": "607560"
  },
  {
    "text": "with jni they do not always check the parameters correctly if they are null",
    "start": "607560",
    "end": "612640"
  },
  {
    "text": "values or large buffers or whatever",
    "start": "612640",
    "end": "618920"
  },
  {
    "text": "so and in combination that there are some of these functions are public so",
    "start": "618920",
    "end": "625240"
  },
  {
    "text": "available to the user code at a very high risk to have uh maybe malicious",
    "start": "625240",
    "end": "632079"
  },
  {
    "text": "code uh calling the native functions",
    "start": "632079",
    "end": "637639"
  },
  {
    "text": "via or with invalid parameters and so have some very bad impact on the",
    "start": "637639",
    "end": "645399"
  },
  {
    "text": "jvm so that's",
    "start": "646200",
    "end": "649760"
  },
  {
    "text": "the introduction so what the sun says about",
    "start": "651760",
    "end": "657000"
  },
  {
    "text": "its uh unsupported interface the sun packages are not uh",
    "start": "657000",
    "end": "663639"
  },
  {
    "text": "part of the supported uh public interface so therefore you shall not use",
    "start": "663639",
    "end": "671120"
  },
  {
    "text": "the sun classes to do something useful but they also say that nothing",
    "start": "671120",
    "end": "677639"
  },
  {
    "text": "prevents you from using it so nothing prevents other people from using it maybe a security manager but if",
    "start": "677639",
    "end": "684920"
  },
  {
    "text": "a browser has not implemented a good security manager so no prevents uh someone writing some life",
    "start": "684920",
    "end": "692560"
  },
  {
    "text": "connect stuff that yeah crashes your jvm in your local Machine by using the sun",
    "start": "692560",
    "end": "700519"
  },
  {
    "text": "classes so what does the disclaimer not say so there's no",
    "start": "701399",
    "end": "706920"
  },
  {
    "text": "guarantee that the sun classes are protected against invalid parameters so you cannot be sure if they throw an",
    "start": "706920",
    "end": "714000"
  },
  {
    "text": "exception and give you back control like it should be in Java or they just crashes jvm",
    "start": "714000",
    "end": "720600"
  },
  {
    "text": "um Sun implemented some um basic check so if you start your jvm with a x check",
    "start": "720600",
    "end": "727680"
  },
  {
    "text": "jni you expect some protection against the invalid parameters but um that does",
    "start": "727680",
    "end": "735519"
  },
  {
    "text": "not always work as expected",
    "start": "735519",
    "end": "741399"
  },
  {
    "text": "and if you write programs using reflection",
    "start": "741399",
    "end": "747519"
  },
  {
    "text": "API they can even they do not call directly Sun",
    "start": "747519",
    "end": "753760"
  },
  {
    "text": "classes they can create Sun classes and invoke methods on them so you have to be",
    "start": "753760",
    "end": "760079"
  },
  {
    "text": "sure if you use reflection that no one is passing values that cause you Cod",
    "start": "760079",
    "end": "766480"
  },
  {
    "text": "to create sun. star classes and invoke the vulnerable",
    "start": "766480",
    "end": "774360"
  },
  {
    "text": "methods so how is a typical Lo that",
    "start": "774800",
    "end": "780680"
  },
  {
    "text": "I present typically typically uh running through the architecture there's um user",
    "start": "780680",
    "end": "789600"
  },
  {
    "text": "code resisting in exploit. Java and just calling some vulnerable function",
    "start": "789600",
    "end": "796560"
  },
  {
    "text": "message utils to standard error and it's passing a null value to",
    "start": "796560",
    "end": "801920"
  },
  {
    "text": "it and in the sun implementation there are some native declaration and this",
    "start": "801920",
    "end": "808880"
  },
  {
    "text": "native declaration like we said like we saw before is as a corresponding export",
    "start": "808880",
    "end": "814320"
  },
  {
    "text": "entry in the Java dll Java Sun MK message util to string uh to Standard",
    "start": "814320",
    "end": "821320"
  },
  {
    "text": "air with the number 12 and that directly calls into the",
    "start": "821320",
    "end": "829920"
  },
  {
    "text": "jvm so there's no protection against this null value and this null value is causing bad stuff in the jvm and",
    "start": "829920",
    "end": "837040"
  },
  {
    "text": "stopping it this is uh some nice example because there's",
    "start": "837040",
    "end": "843240"
  },
  {
    "text": "another function which is just called",
    "start": "843240",
    "end": "849399"
  },
  {
    "text": "ER and this is public and Depends uh yeah a",
    "start": "849399",
    "end": "856160"
  },
  {
    "text": "carriage return to every string that is passed to it and that calls the two standard air so why is two standard",
    "start": "856160",
    "end": "863720"
  },
  {
    "text": "air a public a public function if they have a guarded function",
    "start": "863720",
    "end": "869880"
  },
  {
    "text": "also in this library but two standard air can be",
    "start": "869880",
    "end": "874920"
  },
  {
    "text": "called so this is a code fragment that can be",
    "start": "875880",
    "end": "882680"
  },
  {
    "text": "used to CR your",
    "start": "882680",
    "end": "887199"
  },
  {
    "text": "implementation and if this function wouldn't be public there would be no harm but this function this function is",
    "start": "890959",
    "end": "898600"
  },
  {
    "text": "public so so it can crash so",
    "start": "898600",
    "end": "905320"
  },
  {
    "text": "passing you have seen passing incorrect values from user code like I will show that all later in some demo um passing",
    "start": "905320",
    "end": "912920"
  },
  {
    "text": "incorrect values from user code like null pointers they can call can provoke",
    "start": "912920",
    "end": "918560"
  },
  {
    "text": "access violations and jvm stops in the native cach which",
    "start": "918560",
    "end": "924519"
  },
  {
    "text": "uh is usable in some scenarios for example in browsers via applets or",
    "start": "924519",
    "end": "933560"
  },
  {
    "text": "via JavaScript live connect or in Java webart we are",
    "start": "933560",
    "end": "941959"
  },
  {
    "text": "malicious vulnerable applications or if you can get access to",
    "start": "941959",
    "end": "948399"
  },
  {
    "text": "the file system of a JSP engine you can inject U JSP pages that also have calls",
    "start": "948399",
    "end": "957079"
  },
  {
    "text": "to this vulnerable function and call this JSP",
    "start": "957079",
    "end": "962440"
  },
  {
    "text": "and have the server stopped but this is a rather difficult",
    "start": "962440",
    "end": "969560"
  },
  {
    "text": "scenario so how can these Library holdes be found so",
    "start": "969560",
    "end": "978440"
  },
  {
    "text": "again when are they of good use for us if they are when are of good use",
    "start": "979199",
    "end": "987399"
  },
  {
    "text": "to if they are we reachable directly or indirectly from user code if they have",
    "start": "987399",
    "end": "994079"
  },
  {
    "text": "Public Access if they have an object type so if I can pass a null value to it",
    "start": "994079",
    "end": "1000120"
  },
  {
    "text": "and it's even better if they are static so I don't have to create an object on so I just can call a function on the",
    "start": "1000120",
    "end": "1007720"
  },
  {
    "text": "type and not on the object which is a little bit easier to",
    "start": "1007720",
    "end": "1014560"
  },
  {
    "text": "construct so how do I find it I've written a small",
    "start": "1015199",
    "end": "1022000"
  },
  {
    "text": "tool and basically what it does is uh finds the classes in a jar like the RT",
    "start": "1022000",
    "end": "1030640"
  },
  {
    "text": "jar in the sun implementation that has native methods",
    "start": "1030640",
    "end": "1036880"
  },
  {
    "text": "and Constructors and it tests all these classes if they have",
    "start": "1036880",
    "end": "1043120"
  },
  {
    "text": "uh Native methods and if they are public and it's even better if they static like",
    "start": "1043120",
    "end": "1048199"
  },
  {
    "text": "said before and it's checked if they have an object type Java Lang string or",
    "start": "1048199",
    "end": "1054240"
  },
  {
    "text": "a bite array an uninitialized bite ARR is also very nice to pass to",
    "start": "1054240",
    "end": "1060400"
  },
  {
    "text": "them or yeah and then I construct",
    "start": "1060400",
    "end": "1066559"
  },
  {
    "text": "some code like we saw before so this is the algorithm some",
    "start": "1066559",
    "end": "1073799"
  },
  {
    "text": "SoDo code so all classes in RT jar and all methods and Constructors are",
    "start": "1073799",
    "end": "1080679"
  },
  {
    "text": "inspected I have a for Loop over the methods and Constructors and if there's an object type in the",
    "start": "1080679",
    "end": "1087600"
  },
  {
    "text": "signature I will inspect the method if it's",
    "start": "1087600",
    "end": "1093320"
  },
  {
    "text": "public I will construct parameters corresponding to the signature which can",
    "start": "1093320",
    "end": "1098480"
  },
  {
    "text": "also be again U but in very few cases a recursive",
    "start": "1098480",
    "end": "1105559"
  },
  {
    "text": "problem and if M athetic I just have to call the",
    "start": "1105559",
    "end": "1111760"
  },
  {
    "text": "functions the function with the object type and if it's not static I have to",
    "start": "1111760",
    "end": "1117320"
  },
  {
    "text": "create an object and call the methods the method on this",
    "start": "1117320",
    "end": "1123960"
  },
  {
    "text": "object with my constructed parameters so if it's not",
    "start": "1124240",
    "end": "1129919"
  },
  {
    "text": "public I have to do something I have to analyze the G uh the the source code",
    "start": "1129919",
    "end": "1138159"
  },
  {
    "text": "maybe with which is also supplies from Sun in the source do zip or I have to",
    "start": "1138159",
    "end": "1145559"
  },
  {
    "text": "use my tool which is J grab which inspects the RT jar for calls to this",
    "start": "1145559",
    "end": "1151520"
  },
  {
    "text": "function or I use a wonderful Jad decompiler which also can give me",
    "start": "1151520",
    "end": "1158720"
  },
  {
    "text": "some nice information so this is what I said",
    "start": "1158720",
    "end": "1165360"
  },
  {
    "text": "before",
    "start": "1165360",
    "end": "1168360"
  },
  {
    "text": "so what does Dr web do it analyzes if the um",
    "start": "1171000",
    "end": "1178880"
  },
  {
    "text": "non-public function can be called from some other fun are called from some other function so I can maybe do an",
    "start": "1178880",
    "end": "1185000"
  },
  {
    "text": "indirect call to the vulnerable method through",
    "start": "1185000",
    "end": "1190760"
  },
  {
    "text": "some intermediate methods so this can be very recursive",
    "start": "1190760",
    "end": "1199840"
  },
  {
    "text": "problem but almost they are reachable via one",
    "start": "1199840",
    "end": "1206679"
  },
  {
    "text": "level so can also be very time consuming to uh",
    "start": "1208480",
    "end": "1216720"
  },
  {
    "text": "write an Java program for",
    "start": "1216720",
    "end": "1221760"
  },
  {
    "text": "every vulnerable or for every potential vulnerable entry so are I designed some",
    "start": "1221760",
    "end": "1231640"
  },
  {
    "text": "tool to call the sun to call the vulnerable methods via some generic",
    "start": "1231640",
    "end": "1239919"
  },
  {
    "text": "method uh some generic approach via the reflection",
    "start": "1239919",
    "end": "1245039"
  },
  {
    "text": "API and the reflection API basically gives you the possibility to create",
    "start": "1245039",
    "end": "1253159"
  },
  {
    "text": "um objects of unknown or prior to execution ution",
    "start": "1253159",
    "end": "1258919"
  },
  {
    "text": "unknown um type and execute methods on these object",
    "start": "1258919",
    "end": "1266400"
  },
  {
    "text": "or execute static methods on classes so you just uh tell Java create me an",
    "start": "1266400",
    "end": "1274600"
  },
  {
    "text": "object of java util zip Cc or whatever and it creates you some object even if",
    "start": "1274600",
    "end": "1282039"
  },
  {
    "text": "you don't imported it from in your source code so these",
    "start": "1282039",
    "end": "1289120"
  },
  {
    "text": "reflection based tool they like said before they do not explicitly import the",
    "start": "1289120",
    "end": "1294919"
  },
  {
    "text": "sun classes but they create objects from the",
    "start": "1294919",
    "end": "1300000"
  },
  {
    "text": "Sun classes and therefore should not be affected by the disclaimer and therefore",
    "start": "1300000",
    "end": "1305799"
  },
  {
    "text": "should not crash and therefore should be correct Java code but nevertheless as intended",
    "start": "1305799",
    "end": "1313279"
  },
  {
    "text": "they the tool does it so what",
    "start": "1313279",
    "end": "1319600"
  },
  {
    "text": "the yeah the idea is dynamically create classes via the reflection",
    "start": "1319600",
    "end": "1325880"
  },
  {
    "text": "API then get the class of the vulnerable",
    "start": "1325880",
    "end": "1331400"
  },
  {
    "text": "entry then create an object via new instance then you have an",
    "start": "1331400",
    "end": "1337400"
  },
  {
    "text": "object of that type then you get the methods you get an area of the methods",
    "start": "1337400",
    "end": "1343720"
  },
  {
    "text": "you can use and if the yeah if your method is in",
    "start": "1343720",
    "end": "1349120"
  },
  {
    "text": "your candidate catalog if it's a native function you just invoke it and see what",
    "start": "1349120",
    "end": "1357919"
  },
  {
    "text": "happens so I found some some functions that are",
    "start": "1358200",
    "end": "1364679"
  },
  {
    "text": "vulnerable and in the sun do classes and these are the following the spin clip",
    "start": "1364679",
    "end": "1371159"
  },
  {
    "text": "renderer the message util the signals buff image surface data some unspell stuff",
    "start": "1371159",
    "end": "1379240"
  },
  {
    "text": "some color CMM and the Windows printer job and the pass",
    "start": "1379240",
    "end": "1384960"
  },
  {
    "text": "Dasher are some examples which can be used",
    "start": "1384960",
    "end": "1390039"
  },
  {
    "text": "to which are not very well",
    "start": "1390039",
    "end": "1394679"
  },
  {
    "text": "protected so the demo comes later so also vable was the following",
    "start": "1395720",
    "end": "1404440"
  },
  {
    "text": "entry and that was the sun DCP pass Dasher and the sun DC pass Dasher",
    "start": "1404440",
    "end": "1411720"
  },
  {
    "text": "was available on all the platforms I have inspected",
    "start": "1411720",
    "end": "1418039"
  },
  {
    "text": "and inspected the Windows 2000 jdk 141 and the IBM jdk",
    "start": "1418039",
    "end": "1425600"
  },
  {
    "text": "131 distributed for example with uh Lotus Domino or distributed with IBM",
    "start": "1425600",
    "end": "1432880"
  },
  {
    "text": "websphere and the IBM jdk on Ax and the sun jdk on on Solaris sun jdk",
    "start": "1432880",
    "end": "1440320"
  },
  {
    "text": "on Linux and the IBM jdk on Linux 390 and the IBM jdk on zos unique system",
    "start": "1440320",
    "end": "1449080"
  },
  {
    "text": "services so let's step through the screens which I have taken from the",
    "start": "1449960",
    "end": "1459960"
  },
  {
    "text": "crashes So Sol Lis Linux this was very not very verbus just",
    "start": "1462679",
    "end": "1471440"
  },
  {
    "text": "that segmentation fault on Linux v90 and this was very verbus on zos uni",
    "start": "1471440",
    "end": "1479960"
  },
  {
    "text": "system service wrote me a 40 megabyte dump somewhere so if I have someone",
    "start": "1479960",
    "end": "1488120"
  },
  {
    "text": "is can invoke this method several times or",
    "start": "1490039",
    "end": "1496520"
  },
  {
    "text": "the storage will be filled in just a short",
    "start": "1496520",
    "end": "1501759"
  },
  {
    "text": "time so I wrote the exploit once and crashed it on several o OS systems so",
    "start": "1504559",
    "end": "1511840"
  },
  {
    "text": "and I saw no platform surviving across multiple versions",
    "start": "1511840",
    "end": "1518000"
  },
  {
    "text": "across multiple vendors and across multiple OS",
    "start": "1518000",
    "end": "1523120"
  },
  {
    "text": "platforms I haven't tested this on os2 because",
    "start": "1523120",
    "end": "1528919"
  },
  {
    "text": "I have no os2 installation anymore",
    "start": "1528919",
    "end": "1534440"
  },
  {
    "text": "available but maybe someone who still has an o t version can",
    "start": "1534440",
    "end": "1541640"
  },
  {
    "text": "try it so let's have a this was a client",
    "start": "1541640",
    "end": "1548480"
  },
  {
    "text": "side exploit I also use it in Java server",
    "start": "1548480",
    "end": "1555000"
  },
  {
    "text": "pages and you can protect yourself against the is Sun this",
    "start": "1555240",
    "end": "1562840"
  },
  {
    "text": "vulnerable jsps with the security",
    "start": "1564039",
    "end": "1569480"
  },
  {
    "text": "option there and then Sun classes will be blocked from your Tomcat",
    "start": "1569480",
    "end": "1576799"
  },
  {
    "text": "installation so this is what happens when you use it without the security flag you get",
    "start": "1576799",
    "end": "1582799"
  },
  {
    "text": "an nice Java dump from the Tomcat installation",
    "start": "1582799",
    "end": "1588559"
  },
  {
    "text": "and if you have a minor security flag everything is fine and you just get",
    "start": "1588559",
    "end": "1594840"
  },
  {
    "text": "a 500 eror and your server is still",
    "start": "1594840",
    "end": "1599200"
  },
  {
    "text": "running so there are some new",
    "start": "1600640",
    "end": "1605279"
  },
  {
    "text": "vulnerabilities the ones I reported to Sun last month or this month on the",
    "start": "1605840",
    "end": "1611159"
  },
  {
    "text": "third of February and the jdbc odbc exploit which",
    "start": "1611159",
    "end": "1616200"
  },
  {
    "text": "is also very nice because many people use jdbc obbc and",
    "start": "1616200",
    "end": "1623120"
  },
  {
    "text": "maybe can fall into this somehow in the STP that",
    "start": "1623120",
    "end": "1628360"
  },
  {
    "text": "is somewhere inside the jdbc obbc",
    "start": "1628360",
    "end": "1633799"
  },
  {
    "text": "classes so to find to exploit this vulnerability to get access to the",
    "start": "1633799",
    "end": "1640360"
  },
  {
    "text": "vulnerable method I had to do some have to build some infrastructure I",
    "start": "1640360",
    "end": "1647320"
  },
  {
    "text": "had to Expos an an inner class and the inner class was the",
    "start": "1647320",
    "end": "1653360"
  },
  {
    "text": "obbc obbc P API object and the obbc RP",
    "start": "1653360",
    "end": "1660000"
  },
  {
    "text": "object could be used to do some nice",
    "start": "1660000",
    "end": "1666919"
  },
  {
    "text": "stuff and uh yeah the jdbc obbc IP they",
    "start": "1668600",
    "end": "1673919"
  },
  {
    "text": "it contained um the jdbc obbc drive and that has a",
    "start": "1673919",
    "end": "1679399"
  },
  {
    "text": "native Library hole but it was not public so I had to export it",
    "start": "1679399",
    "end": "1686679"
  },
  {
    "text": "somehow and",
    "start": "1686720",
    "end": "1690240"
  },
  {
    "text": "um the obbc jdbc it had to be subass to be somehow",
    "start": "1693519",
    "end": "1701720"
  },
  {
    "text": "accessible so I created my own object my",
    "start": "1703600",
    "end": "1709399"
  },
  {
    "text": "own object that extended the jdbc obbc driver and just uh exported this",
    "start": "1709399",
    "end": "1718200"
  },
  {
    "text": "uh inner this private element and this private",
    "start": "1718200",
    "end": "1725159"
  },
  {
    "text": "element then could be used to call this function export driver and",
    "start": "1725159",
    "end": "1732600"
  },
  {
    "text": "the export driver which is the adbc odbc RP",
    "start": "1732600",
    "end": "1738559"
  },
  {
    "text": "object then could be used to call the SQL function and the SQL",
    "start": "1738559",
    "end": "1744159"
  },
  {
    "text": "function has a library hole and the library hole straightforward ented into the jvm",
    "start": "1744159",
    "end": "1753039"
  },
  {
    "text": "crash and what is also not very nice that the X check jni parameter had no",
    "start": "1753039",
    "end": "1761919"
  },
  {
    "text": "effect it should some somehow protect you against invalid parameters but",
    "start": "1761919",
    "end": "1768120"
  },
  {
    "text": "obviously it's not implemented in all calls to the",
    "start": "1768120",
    "end": "1773518"
  },
  {
    "text": "jvm yeah and these were all stuff that were in the in a",
    "start": "1777039",
    "end": "1785120"
  },
  {
    "text": "unsupported unsupported interface of sun of java but there are also",
    "start": "1785120",
    "end": "1793919"
  },
  {
    "text": "vulnerabilities in the official IND interface",
    "start": "1793919",
    "end": "1800399"
  },
  {
    "text": "and that's in for example in the atlas",
    "start": "1800399",
    "end": "1805679"
  },
  {
    "text": "32 object where you can create some overflow scenario and the",
    "start": "1805679",
    "end": "1813880"
  },
  {
    "text": "Overflow leads to some jvm",
    "start": "1813880",
    "end": "1819559"
  },
  {
    "text": "crash because there has a missing range check and the missing range",
    "start": "1820480",
    "end": "1825640"
  },
  {
    "text": "check when you have the function the update function in the",
    "start": "1825640",
    "end": "1831159"
  },
  {
    "text": "checkum in one of the or both checkum",
    "start": "1831159",
    "end": "1836799"
  },
  {
    "text": "subtypes yeah you just uh read it from the source code that is",
    "start": "1836880",
    "end": "1841960"
  },
  {
    "text": "supplied with the jvm with the",
    "start": "1841960",
    "end": "1847000"
  },
  {
    "text": "G and you give a very high first value which is a integer max value minus three",
    "start": "1847000",
    "end": "1853799"
  },
  {
    "text": "or you give an you give a length with four you have an",
    "start": "1853799",
    "end": "1859919"
  },
  {
    "text": "uh additional result or a sum that is negative and this therefore leads",
    "start": "1860320",
    "end": "1869919"
  },
  {
    "text": "to the op yeah therefore the are index out of bounds exception is not",
    "start": "1870760",
    "end": "1878559"
  },
  {
    "text": "thrown and you directly go to the native function the update bytes",
    "start": "1878559",
    "end": "1884679"
  },
  {
    "text": "function and the update bite function",
    "start": "1884679",
    "end": "1889679"
  },
  {
    "text": "is then the end for this Java",
    "start": "1891600",
    "end": "1896760"
  },
  {
    "text": "program The Unwanted end okay there are some methods that are also buggy and",
    "start": "1896760",
    "end": "1903559"
  },
  {
    "text": "these were reported to Sun on 3rd of February the artar 32 and the deflator",
    "start": "1903559",
    "end": "1911559"
  },
  {
    "text": "SE direct uh set dictionary the CC update the deflator deflate the check",
    "start": "1911559",
    "end": "1918159"
  },
  {
    "text": "input stream the right method and the check input stream the read",
    "start": "1918159",
    "end": "1923880"
  },
  {
    "text": "method and all have the same pattern they have an inadequate overflow",
    "start": "1923880",
    "end": "1931159"
  },
  {
    "text": "handling and therefore the security the insecurity is not in supplied from you",
    "start": "1931159",
    "end": "1938200"
  },
  {
    "text": "it's supplied from Sun and therefore the ex check j i does not help",
    "start": "1938200",
    "end": "1945000"
  },
  {
    "text": "you and basically or forms an attack",
    "start": "1945399",
    "end": "1955480"
  },
  {
    "text": "potential for browser or live connect",
    "start": "1955480",
    "end": "1961799"
  },
  {
    "text": "stuff you this can also be tested with an",
    "start": "1962480",
    "end": "1970039"
  },
  {
    "text": "JSP and even running with minus security of course",
    "start": "1970039",
    "end": "1976399"
  },
  {
    "text": "your Java util zip class is trusted and if it crashes it",
    "start": "1976399",
    "end": "1982519"
  },
  {
    "text": "crashes and the Tomcat is dead",
    "start": "1982519",
    "end": "1987039"
  },
  {
    "text": "also yeah we've seen that before okay um",
    "start": "1988240",
    "end": "1995519"
  },
  {
    "text": "the CRC 32 and the atla stuff are very",
    "start": "1995519",
    "end": "2000600"
  },
  {
    "text": "straightforward the C CIS the checked input stream I had to create um",
    "start": "2000600",
    "end": "2008720"
  },
  {
    "text": "an own input stream an own input stream which basically was used",
    "start": "2008720",
    "end": "2016159"
  },
  {
    "text": "to bypass some check in the the input stream",
    "start": "2016159",
    "end": "2023120"
  },
  {
    "text": "um in the checked input stream there was a check and that could be bypassed by",
    "start": "2023120",
    "end": "2028200"
  },
  {
    "text": "returning some nice Valu the max value minus",
    "start": "2028200",
    "end": "2033320"
  },
  {
    "text": "three and then ended in an update call to artlas",
    "start": "2033320",
    "end": "2042880"
  },
  {
    "text": "32 and then it crashed like said",
    "start": "2044000",
    "end": "2049360"
  },
  {
    "text": "before so what can be yeah this is basically what's in the",
    "start": "2049639",
    "end": "2056520"
  },
  {
    "text": "slide what can be used for further reading if you are interested in stuff",
    "start": "2056520",
    "end": "2063040"
  },
  {
    "text": "that is related to Microsoft jvm there was a great speech of LSD at blackhead",
    "start": "2063040",
    "end": "2070358"
  },
  {
    "text": "Asia if you're more interested into bite code engineering I have made a spee at",
    "start": "2070359",
    "end": "2077079"
  },
  {
    "text": "blackhead USA in Las Vegas that is also online on my website and of course",
    "start": "2077079",
    "end": "2086358"
  },
  {
    "text": "if you find more overflow scenarios you can if you",
    "start": "2086359",
    "end": "2091560"
  },
  {
    "text": "want to find them you can look at the jdk sources which is applied with every Sun implementation",
    "start": "2091560",
    "end": "2099640"
  },
  {
    "text": "so I will provide you with the tools when I return to Germany I",
    "start": "2101520",
    "end": "2110320"
  },
  {
    "text": "will give them some more comments and have some more indents and whatever so",
    "start": "2110320",
    "end": "2117320"
  },
  {
    "text": "that they're usable I will have them on my",
    "start": "2117320",
    "end": "2124119"
  },
  {
    "text": "website um you can get J ad as a as part",
    "start": "2124119",
    "end": "2130680"
  },
  {
    "text": "of java C backwards which is a nice decompiler set if you're more interested",
    "start": "2130680",
    "end": "2137520"
  },
  {
    "text": "into bite code engineering there's a nice API from from Apachi and that's the BCL",
    "start": "2137520",
    "end": "2145920"
  },
  {
    "text": "which is from formerly from the uh Technical University of",
    "start": "2145920",
    "end": "2153680"
  },
  {
    "text": "Berlin which was merged into the Jakarta aparture",
    "start": "2153680",
    "end": "2160640"
  },
  {
    "text": "project and if you want to analyze the the libraries and how they relate to",
    "start": "2160680",
    "end": "2170079"
  },
  {
    "text": "each other you can use like said before the depend tool from",
    "start": "2170079",
    "end": "2177000"
  },
  {
    "text": "Microsoft or use some use some tool",
    "start": "2177000",
    "end": "2182839"
  },
  {
    "text": "from Tool Suite",
    "start": "2184839",
    "end": "2189119"
  },
  {
    "text": "so let's have some demo or are any questions",
    "start": "2191480",
    "end": "2198480"
  },
  {
    "text": "before no okay so let's have",
    "start": "2202240",
    "end": "2211280"
  },
  {
    "text": "some demo what can I show",
    "start": "2211280",
    "end": "2216240"
  },
  {
    "text": "so the native finder We have basically have seen the result of the Native",
    "start": "2218359",
    "end": "2223599"
  },
  {
    "text": "finder so let's have some look at the reflection invoker and the reflection",
    "start": "2223599",
    "end": "2231839"
  },
  {
    "text": "invoker basically is",
    "start": "2235920",
    "end": "2241920"
  },
  {
    "text": "called not the vulnerable cases are not called in a single Java program because",
    "start": "2242040",
    "end": "2248839"
  },
  {
    "text": "it wouldn't run to the end if it crashed before therefore I encapsulated it in a",
    "start": "2248839",
    "end": "2254440"
  },
  {
    "text": "bch file or command file and have coded all",
    "start": "2254440",
    "end": "2259760"
  },
  {
    "text": "the vulnerable cases into this bch",
    "start": "2259760",
    "end": "2267319"
  },
  {
    "text": "file and basically is a tool for me to to try all the possible cases",
    "start": "2267319",
    "end": "2278000"
  },
  {
    "text": "so",
    "start": "2279839",
    "end": "2282839"
  },
  {
    "text": "oops I called the batch file crash",
    "start": "2286839",
    "end": "2292720"
  },
  {
    "text": "do4 crash4",
    "start": "2292720",
    "end": "2296560"
  },
  {
    "text": "CMD so I have some old lock files here",
    "start": "2297960",
    "end": "2304560"
  },
  {
    "text": "so it calls the first method which crashes",
    "start": "2309240",
    "end": "2314880"
  },
  {
    "text": "second actually I messed around some of the parameter formats so not every case",
    "start": "2317200",
    "end": "2322880"
  },
  {
    "text": "run through it I have to fix that before I release the",
    "start": "2322880",
    "end": "2327520"
  },
  {
    "text": "tool but you see all these nice vulnerable points they are",
    "start": "2328319",
    "end": "2336960"
  },
  {
    "text": "they leave some Trace they leave some lock",
    "start": "2340280",
    "end": "2346240"
  },
  {
    "text": "files and you only see see three log files because",
    "start": "2346240",
    "end": "2353280"
  },
  {
    "text": "uh some of the crashes they create identical identical PID",
    "start": "2353640",
    "end": "2362760"
  },
  {
    "text": "numbers so if I have if I would have some pause or whatever",
    "start": "2362920",
    "end": "2369800"
  },
  {
    "text": "wherever sun takes this value from it will",
    "start": "2369800",
    "end": "2375200"
  },
  {
    "text": "create some more files",
    "start": "2375200",
    "end": "2383160"
  },
  {
    "text": "so and I also have something for the IBM v machine",
    "start": "2385599",
    "end": "2394240"
  },
  {
    "text": "which takes some longer some more",
    "start": "2398640",
    "end": "2403920"
  },
  {
    "text": "time and it's a little bit more",
    "start": "2403920",
    "end": "2408280"
  },
  {
    "text": "verus and because it raises this this nice message box I",
    "start": "2410680",
    "end": "2420680"
  },
  {
    "text": "just activated two cases so the Sun",
    "start": "2420800",
    "end": "2428839"
  },
  {
    "text": "Dums they show you where the process ended and they show you the stack Dum",
    "start": "2428839",
    "end": "2433960"
  },
  {
    "text": "the stack trays I'll show you which DLS were",
    "start": "2433960",
    "end": "2440319"
  },
  {
    "text": "loaded and that's it the IBM",
    "start": "2440319",
    "end": "2448640"
  },
  {
    "text": "dumps they have a little bit more information about the internal state of the jvm",
    "start": "2448760",
    "end": "2455400"
  },
  {
    "text": "so and what's interesting of course that there that it crashes on both",
    "start": "2462640",
    "end": "2470920"
  },
  {
    "text": "implementations so what else could I show yeah",
    "start": "2472440",
    "end": "2479200"
  },
  {
    "text": "no so we have some nice browsers",
    "start": "2479200",
    "end": "2483880"
  },
  {
    "text": "here for example Netscape",
    "start": "2485440",
    "end": "2489838"
  },
  {
    "text": "7even and I've created some live connect CSC HTML I can",
    "start": "2503440",
    "end": "2512680"
  },
  {
    "text": "oops we can have a look on that",
    "start": "2512680",
    "end": "2517559"
  },
  {
    "text": "so this basically uses the live connect bridge between uh between Java and",
    "start": "2517880",
    "end": "2524599"
  },
  {
    "text": "JavaScript and you can create uh Java objects within",
    "start": "2524599",
    "end": "2530000"
  },
  {
    "text": "JavaScript and therefore also call the vulnerable points which then can be used to crash",
    "start": "2530000",
    "end": "2537520"
  },
  {
    "text": "your client your client",
    "start": "2537520",
    "end": "2542720"
  },
  {
    "text": "browser so hopefully it works",
    "start": "2542720",
    "end": "2547520"
  },
  {
    "text": "so here's still my my",
    "start": "2551880",
    "end": "2556960"
  },
  {
    "text": "ncape it does a little bit starting the jvm takes a little time",
    "start": "2558200",
    "end": "2567359"
  },
  {
    "text": "and it's dead so",
    "start": "2567359",
    "end": "2575640"
  },
  {
    "text": "people which are not aware of that can be very bad surprised by that so this is",
    "start": "2578720",
    "end": "2587400"
  },
  {
    "text": "also Opera is also not well protected against it and of course the Internet",
    "start": "2587640",
    "end": "2595839"
  },
  {
    "text": "Explorer Internet Explorer using the Java",
    "start": "2595839",
    "end": "2601760"
  },
  {
    "text": "plugin also is affected by it but it cannot be crashed by",
    "start": "2601760",
    "end": "2608119"
  },
  {
    "text": "by the live connect stuff but of course you",
    "start": "2608119",
    "end": "2615920"
  },
  {
    "text": "can you can build",
    "start": "2615920",
    "end": "2619558"
  },
  {
    "text": "applets and what did today happen",
    "start": "2622040",
    "end": "2628280"
  },
  {
    "text": "whoops I have the CC uplet the CC applet basically is the same within an",
    "start": "2628280",
    "end": "2635800"
  },
  {
    "text": "applet functionality encoded in the paint",
    "start": "2635800",
    "end": "2641760"
  },
  {
    "text": "function the paint function which is called to update the screen of an",
    "start": "2641760",
    "end": "2647640"
  },
  {
    "text": "applet so starting it should",
    "start": "2647640",
    "end": "2654480"
  },
  {
    "text": "make should kill the browser in just a few",
    "start": "2654480",
    "end": "2659240"
  },
  {
    "text": "seconds so this one's gone to",
    "start": "2663520",
    "end": "2668480"
  },
  {
    "text": "so this is",
    "start": "2673720",
    "end": "2677160"
  },
  {
    "text": "basically what is done with these two",
    "start": "2683319",
    "end": "2688200"
  },
  {
    "text": "browsers and there's also some problem with Opera and I want to put it to the",
    "start": "2688359",
    "end": "2695240"
  },
  {
    "text": "end the Opera stuff because my machine is always uh freezing when I",
    "start": "2695240",
    "end": "2701400"
  },
  {
    "text": "running the over the Opera exploit therefore I want to put it to the",
    "start": "2701400",
    "end": "2707280"
  },
  {
    "text": "end and where is it",
    "start": "2707480",
    "end": "2713640"
  },
  {
    "text": "here so where's my Opera",
    "start": "2717240",
    "end": "2721920"
  },
  {
    "text": "start with homepage so let's have a look at the",
    "start": "2730480",
    "end": "2737760"
  },
  {
    "text": "source code of it",
    "start": "2737760",
    "end": "2745040"
  },
  {
    "text": "whoops somewhere",
    "start": "2751520",
    "end": "2755520"
  },
  {
    "text": "no oops so basically what does it do um the",
    "start": "2758599",
    "end": "2766640"
  },
  {
    "text": "Opera class libraries um they have a vulnerable function and the Opera plugin context",
    "start": "2766640",
    "end": "2774280"
  },
  {
    "text": "and the op plugin context with if heed with wrong",
    "start": "2774280",
    "end": "2779359"
  },
  {
    "text": "values causes the Opera to quit quit unwanted unwanted quit",
    "start": "2780559",
    "end": "2788680"
  },
  {
    "text": "sudden death so to and then the Opera dies very",
    "start": "2788680",
    "end": "2797599"
  },
  {
    "text": "quickly this would be a normal bug in normal installations but in this case uh",
    "start": "2798040",
    "end": "2804200"
  },
  {
    "text": "they also did not take very much care of their security",
    "start": "2804200",
    "end": "2810839"
  },
  {
    "text": "manager the security manager settings if they would have um stopped to stop the",
    "start": "2810839",
    "end": "2816960"
  },
  {
    "text": "access to Opera classes from user level nothing would be harmed but Opera",
    "start": "2816960",
    "end": "2823200"
  },
  {
    "text": "classes can be used from user supplied or from applets user",
    "start": "2823200",
    "end": "2828280"
  },
  {
    "text": "supplied code and then as logical Consequence the",
    "start": "2828280",
    "end": "2834720"
  },
  {
    "text": "Opera is killed so where is it",
    "start": "2834720",
    "end": "2842000"
  },
  {
    "text": "here the Opera crash applet",
    "start": "2842599",
    "end": "2847520"
  },
  {
    "text": "so the Opera is",
    "start": "2858160",
    "end": "2861960"
  },
  {
    "text": "also killed and does my mouse still",
    "start": "2865520",
    "end": "2870000"
  },
  {
    "text": "move right some more longer error protocol",
    "start": "2871400",
    "end": "2877200"
  },
  {
    "text": "but the jbm has aborted and my machine has also",
    "start": "2877520",
    "end": "2882880"
  },
  {
    "text": "aborted and therefore I want to stop this presentation now and I'm open now for",
    "start": "2882880",
    "end": "2889920"
  },
  {
    "text": "questions yeah thank you",
    "start": "2896040",
    "end": "2902480"
  },
  {
    "text": "yeah so we are eight e",
    "start": "2904880",
    "end": "2909759"
  }
]