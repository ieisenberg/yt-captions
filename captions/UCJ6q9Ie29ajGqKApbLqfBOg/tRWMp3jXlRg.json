[
  {
    "text": "good morning and welcome to dragonblood attacking the dragonfly handshake of WPA",
    "start": "0",
    "end": "5640"
  },
  {
    "text": "three in Laguna GHI our speaker this morning is Maddie Van Hoff just a couple",
    "start": "5640",
    "end": "11639"
  },
  {
    "text": "of housekeeping things don't forget to stop by the business hall that's located in Mandalay Bay Oceanside in shoreline",
    "start": "11639",
    "end": "17940"
  },
  {
    "text": "ballrooms on level two the Welcome Reception is tonight at 5:30 in those",
    "start": "17940",
    "end": "23789"
  },
  {
    "text": "rooms the blackhat Arsenal is in the business hall on level two and don't forget that",
    "start": "23789",
    "end": "30029"
  },
  {
    "text": "tonight is the Pawnee Awards and those are in Laguna JKL which is just next door don't forget to silence your phones",
    "start": "30029",
    "end": "36840"
  },
  {
    "text": "and with that I'll turn it over to Mandy thanks okay good morning everyone so I am NOT",
    "start": "36840",
    "end": "42210"
  },
  {
    "text": "even off I'm a postdoctoral researcher at New York University and together with",
    "start": "42210",
    "end": "47670"
  },
  {
    "text": "al Ronan we researched the security of the dragonfly handshake this is a very",
    "start": "47670",
    "end": "54390"
  },
  {
    "text": "relevant topic because just last year the dragonfly handshake has been adopted by WPA three as the new handshake for",
    "start": "54390",
    "end": "62430"
  },
  {
    "text": "this protocol now before dragonfly was adopted by WPA three it was also and",
    "start": "62430",
    "end": "68460"
  },
  {
    "text": "ready already in use by the EEP PWD protocol now for those of you that don't",
    "start": "68460",
    "end": "74430"
  },
  {
    "text": "know what the EPW D protocol is basically it's an authentication protocol that is used in a relatively",
    "start": "74430",
    "end": "82229"
  },
  {
    "text": "small amount of enterprise Wi-Fi networks where you attenti kate's using a username on packets so in this talk",
    "start": "82229",
    "end": "89880"
  },
  {
    "text": "I'm going to present the research that we did on this handshake arms several vulnerabilities that we found against it",
    "start": "89880",
    "end": "97159"
  },
  {
    "text": "now first and for all a quick introduction about what the dragonfly",
    "start": "97159",
    "end": "102630"
  },
  {
    "text": "handshake is so the dragonfly handshake is something that we call a password",
    "start": "102630",
    "end": "108689"
  },
  {
    "text": "authenticated key exchange or in other words a pig what does that mean well",
    "start": "108689",
    "end": "115920"
  },
  {
    "text": "first on and for all the obvious thing it means that authentication is performed based on a shared password",
    "start": "115920",
    "end": "122759"
  },
  {
    "text": "between for example a client and a server or a client on an access point on",
    "start": "122759",
    "end": "129000"
  },
  {
    "text": "the case of dragonfly this handshake provides mutual authentication which is what you would expect the client has",
    "start": "129000",
    "end": "135390"
  },
  {
    "text": "to prove that it knows the password on the other hand the access point also has to prove that it knows the password as",
    "start": "135390",
    "end": "141659"
  },
  {
    "text": "well in other words that you're not connecting to a rogue access point",
    "start": "141659",
    "end": "147170"
  },
  {
    "text": "like most handshakes dragonfly handshake also negotiates a fresh session key on",
    "start": "147170",
    "end": "153269"
  },
  {
    "text": "this session key is used after the handshake to encrypt data frames armed to protect your normal data traffic now",
    "start": "153269",
    "end": "162900"
  },
  {
    "text": "the interesting property of the dragonfly handshake is that it also",
    "start": "162900",
    "end": "167940"
  },
  {
    "text": "tries to defend against dictionary attacks on that it provides forward secrecy this is a big advantage compared",
    "start": "167940",
    "end": "176340"
  },
  {
    "text": "to wk 2 because for example with wpa2 an attacker can passively capture the",
    "start": "176340",
    "end": "183450"
  },
  {
    "text": "handshake that someone makes you can then he or she can then take that handshake offline on perform offline",
    "start": "183450",
    "end": "190170"
  },
  {
    "text": "dictionary attacks against the password of the network but I did what dragonfly",
    "start": "190170",
    "end": "195359"
  },
  {
    "text": "handshake is that this is impossible that dictionary attacks will no longer be possible either by passive or active",
    "start": "195359",
    "end": "202579"
  },
  {
    "text": "attacks on top of that the dragonfly handshake is also designed to provide",
    "start": "202579",
    "end": "207959"
  },
  {
    "text": "forward secrecy meaning if I capture your network traffic today and if a year",
    "start": "207959",
    "end": "213060"
  },
  {
    "text": "later I learn your password of the network I cannot do anything with that I cannot go back in time on decrypt",
    "start": "213060",
    "end": "219540"
  },
  {
    "text": "traffic that I captured a year or more ago now one other property that certain big",
    "start": "219540",
    "end": "227829"
  },
  {
    "text": "handshakes provides is that they protect against server compromised but",
    "start": "227829",
    "end": "233200"
  },
  {
    "text": "unfortunately the dragonfly handshake doesn't have that property so what does",
    "start": "233200",
    "end": "238599"
  },
  {
    "text": "that mean in practice and practice that means that if someone can compromise your access points or your router the",
    "start": "238599",
    "end": "245889"
  },
  {
    "text": "attacker is able to for example read the memory of the device and get the passwords from the device in contrast",
    "start": "245889",
    "end": "253510"
  },
  {
    "text": "some other pics allow you to store the the passwords in a salt 'its way that makes that a lot harder now before we're",
    "start": "253510",
    "end": "263680"
  },
  {
    "text": "going to go into the details of this handshake let me give a very high-level description how it works let's assume",
    "start": "263680",
    "end": "270460"
  },
  {
    "text": "that we have a client here a smartphone that wants to connect to the access point then before the dragonfly",
    "start": "270460",
    "end": "279070"
  },
  {
    "text": "handshake can be executed both peers must convert the passwords which is commonly stored just and plain",
    "start": "279070",
    "end": "286210"
  },
  {
    "text": "ASCII to a so-called group element which we call P here now why does this have to",
    "start": "286210",
    "end": "292270"
  },
  {
    "text": "be done well the idea is that this group element P is for example a large number",
    "start": "292270",
    "end": "297789"
  },
  {
    "text": "which can then be used in the cryptographic operations of dragonfly so",
    "start": "297789",
    "end": "303400"
  },
  {
    "text": "that's the first thing that needs to happen um once that is done the handshake essentially consists of two",
    "start": "303400",
    "end": "310090"
  },
  {
    "text": "main phases the first phase is the commit phase and summarized this is used",
    "start": "310090",
    "end": "317710"
  },
  {
    "text": "to negotiate the session key that the handshake provides the second phase is",
    "start": "317710",
    "end": "323770"
  },
  {
    "text": "the confirmed phrase as the name implies this is used to confirm that both peers",
    "start": "323770",
    "end": "330009"
  },
  {
    "text": "negotiated the same session key and this also proves that they indeed possess the",
    "start": "330009",
    "end": "335409"
  },
  {
    "text": "shared password now the most interesting part of this handshake is how the S key",
    "start": "335409",
    "end": "343479"
  },
  {
    "text": "password is converted into this group element P because this is also where",
    "start": "343479",
    "end": "349300"
  },
  {
    "text": "most of the vulnerabilities we discussed lie before we get to this there's one",
    "start": "349300",
    "end": "356440"
  },
  {
    "text": "important remark and then that this handshake the dragonfly handshake can be executed using two",
    "start": "356440",
    "end": "362230"
  },
  {
    "text": "so-called cryptographic groups it can be executed using mod P groups aren't using",
    "start": "362230",
    "end": "368170"
  },
  {
    "text": "elliptic curves now you may not all know what these cryptographic groups are so",
    "start": "368170",
    "end": "375190"
  },
  {
    "text": "let me give a very short introduction to what mod p groups are basically when",
    "start": "375190",
    "end": "381430"
  },
  {
    "text": "you're using mod P groups it means all your crypto operations happens using normal numbers this number has to be",
    "start": "381430",
    "end": "389560"
  },
  {
    "text": "smaller than an agreed upon prime for all members for all numbers in this",
    "start": "389560",
    "end": "395470"
  },
  {
    "text": "cryptographic group the equation you see here in the second bullet point this one",
    "start": "395470",
    "end": "401050"
  },
  {
    "text": "has to hold now fortunately this math will not be important but it is good to",
    "start": "401050",
    "end": "408160"
  },
  {
    "text": "briefly introduce this if you're wondering why are they called mod P",
    "start": "408160",
    "end": "413890"
  },
  {
    "text": "groups well that's this is because all operations happen modulo the prime of the group so let's get back to our",
    "start": "413890",
    "end": "422590"
  },
  {
    "text": "original problem here before the handshake can be executed the plaintext",
    "start": "422590",
    "end": "428560"
  },
  {
    "text": "s key password has to be converted into an element of this cryptographic group",
    "start": "428560",
    "end": "433600"
  },
  {
    "text": "and the question is how can that be done well a naive way is to simply take a",
    "start": "433600",
    "end": "441430"
  },
  {
    "text": "hash of the password here denoted by P W combine that with MAC addresses of the",
    "start": "441430",
    "end": "447850"
  },
  {
    "text": "client on the access point and then use the result the output of the hash function which is here called value is",
    "start": "447850",
    "end": "454750"
  },
  {
    "text": "then interpreted as a number we then perform some kind of special computation",
    "start": "454750",
    "end": "460180"
  },
  {
    "text": "you don't need to know the details here but basically this transforms the hash output into a valid member of the script",
    "start": "460180",
    "end": "467170"
  },
  {
    "text": "the graphic group of the ideas that the results of this formula can then be used",
    "start": "467170",
    "end": "474730"
  },
  {
    "text": "in our cryptographic operations now this",
    "start": "474730",
    "end": "480160"
  },
  {
    "text": "is all nice and well but unfortunately there is one problem with this namely",
    "start": "480160",
    "end": "485890"
  },
  {
    "text": "for certain mod P groups there's a high chance that the hash output",
    "start": "485890",
    "end": "492009"
  },
  {
    "text": "oh this algorithm when interpreted as a number is bigger than the prime of this",
    "start": "492009",
    "end": "497769"
  },
  {
    "text": "cryptographic group that is being used to simplify the explanation if this",
    "start": "497769",
    "end": "504189"
  },
  {
    "text": "value is bigger than the prime then essentially this formula doesn't work to convert the number into an valid member",
    "start": "504189",
    "end": "509919"
  },
  {
    "text": "of the group so how did the designers of dragonfly decides to tackle that",
    "start": "509919",
    "end": "516240"
  },
  {
    "text": "well they added a condition here where they are going to check ok is this value",
    "start": "516240",
    "end": "522879"
  },
  {
    "text": "larger than the prime then we need to do something and what is what do they do",
    "start": "522879",
    "end": "528249"
  },
  {
    "text": "well they decided to include a counter in the hash value in case in the first",
    "start": "528249",
    "end": "534100"
  },
  {
    "text": "try this hash output was too big they're simply going to increase the counter and try again",
    "start": "534100",
    "end": "540300"
  },
  {
    "text": "it's still not the case they will again increase the counter and try again [Music]",
    "start": "540300",
    "end": "545490"
  },
  {
    "text": "so maybe some of you will already see the problem with this algorithm the",
    "start": "545490",
    "end": "552730"
  },
  {
    "text": "problem is that the number of iterations that are being executed here depends on",
    "start": "552730",
    "end": "558850"
  },
  {
    "text": "the password in other words we have a side channel leak and I will show how",
    "start": "558850",
    "end": "565870"
  },
  {
    "text": "this can be used to recover the password what's make what makes the story even",
    "start": "565870",
    "end": "571899"
  },
  {
    "text": "more interesting is that the designers were actually warned about this when",
    "start": "571899",
    "end": "578829"
  },
  {
    "text": "this dragonfly handshake was proposed already back in 2010 both the ietf on",
    "start": "578829",
    "end": "586569"
  },
  {
    "text": "the CFR G which are basically two mailing lists where people discuss new protocols they want that this handshake",
    "start": "586569",
    "end": "593019"
  },
  {
    "text": "might be susceptible to timing attacks another side channel attacks so how come",
    "start": "593019",
    "end": "599350"
  },
  {
    "text": "that this algorithm now still managed to get it to find its way into WPA 3 well",
    "start": "599350",
    "end": "607420"
  },
  {
    "text": "at the time the reply was I'm not sure how important this problem is I don't",
    "start": "607420",
    "end": "614079"
  },
  {
    "text": "think the designers thought that this wasn't a very practical attack and there was also some doubt about whether it",
    "start": "614079",
    "end": "620589"
  },
  {
    "text": "really leaked the shared password another word in other words yeah there might be information that is elite but can you",
    "start": "620589",
    "end": "627620"
  },
  {
    "text": "really recover the password based on this alone so let me now explain how you",
    "start": "627620",
    "end": "634700"
  },
  {
    "text": "can indeed use this to recover the password let's say that we have a Wi-Fi",
    "start": "634700",
    "end": "640040"
  },
  {
    "text": "access point it supports WPA 3 and it uses the algorithm that I just explained then as",
    "start": "640040",
    "end": "647690"
  },
  {
    "text": "an attacker what I can try to do is I can try to connect to it and I can",
    "start": "647690",
    "end": "652970"
  },
  {
    "text": "measure how long it takes for the access point to reply on based on that time I",
    "start": "652970",
    "end": "659120"
  },
  {
    "text": "can derive how many iterations the access point needed to convert the password into a member of the crypto",
    "start": "659120",
    "end": "665390"
  },
  {
    "text": "group here in this example it takes the access point two iterations to transform",
    "start": "665390",
    "end": "672350"
  },
  {
    "text": "the password now how can I use this to for example perform a dictionary attack",
    "start": "672350",
    "end": "677540"
  },
  {
    "text": "well let's say I have three passwords as possible candidates then I can as an",
    "start": "677540",
    "end": "684770"
  },
  {
    "text": "attacker run this algorithm offline on my own laptop and measure how many",
    "start": "684770",
    "end": "689870"
  },
  {
    "text": "iterations it would take if I use a certain password and in my example here",
    "start": "689870",
    "end": "695750"
  },
  {
    "text": "password one we take one iteration on the other two passwords we take two iterations and from this information I",
    "start": "695750",
    "end": "703850"
  },
  {
    "text": "can deduce that password one isn't being used by the access point because that",
    "start": "703850",
    "end": "709100"
  },
  {
    "text": "doesn't match our observations however a lot of other passwords are still",
    "start": "709100",
    "end": "717500"
  },
  {
    "text": "possible for example here we don't know whether password 2 or 3 is being used so",
    "start": "717500",
    "end": "723020"
  },
  {
    "text": "is there a way that we can get more information and it turns out that there",
    "start": "723020",
    "end": "729350"
  },
  {
    "text": "is because if we look at the algorithm again we can see that the MAC addresses",
    "start": "729350",
    "end": "736340"
  },
  {
    "text": "of the client on the access point they also influence how many iterations are",
    "start": "736340",
    "end": "741620"
  },
  {
    "text": "executed so what can we do as an attacker well as an attacker I can spoof",
    "start": "741620",
    "end": "747830"
  },
  {
    "text": "another MAC address as a client and I can again measure how many iterations the access point needs to execute and",
    "start": "747830",
    "end": "755300"
  },
  {
    "text": "then I can spoof another MAC address on the game measure how many iterations that the access points",
    "start": "755300",
    "end": "760709"
  },
  {
    "text": "needs so let's go back to our example let's say as an attacker we now use MAC",
    "start": "760709",
    "end": "767069"
  },
  {
    "text": "address B aren't we measure that the access point needs one iteration to",
    "start": "767069",
    "end": "772139"
  },
  {
    "text": "convert the passwords into a member of the crypto group as an attacker we can",
    "start": "772139",
    "end": "777899"
  },
  {
    "text": "again simulate on our own computer how long how many iterations are needed for",
    "start": "777899",
    "end": "783480"
  },
  {
    "text": "candidate passwords here for example password - we need 2 iterations while",
    "start": "783480",
    "end": "789209"
  },
  {
    "text": "password 3 would need one iteration and this means we can conclude that password",
    "start": "789209",
    "end": "794970"
  },
  {
    "text": "2 is not in use we can continue this approach with more MAC addresses until",
    "start": "794970",
    "end": "801299"
  },
  {
    "text": "we uniquely determines the password of the network which here on our example is",
    "start": "801299",
    "end": "806939"
  },
  {
    "text": "s word 3 so now the question that you",
    "start": "806939",
    "end": "814079"
  },
  {
    "text": "may have is ok this is possible but how many MAC addresses do I need to spoof do",
    "start": "814079",
    "end": "821100"
  },
  {
    "text": "I need to measure in order to for example perform a dictionary attack using a large dictionary well it turns",
    "start": "821100",
    "end": "828869"
  },
  {
    "text": "out you need very few measurements to do this for example let's say you take the",
    "start": "828869",
    "end": "835169"
  },
  {
    "text": "RockYou password dump as a reference in that case you need to spoof around 17",
    "start": "835169",
    "end": "842160"
  },
  {
    "text": "MAC addresses to be able to uniquely determine the password at least if it is",
    "start": "842160",
    "end": "847290"
  },
  {
    "text": "in the raku database dump so that isn't too much the main takeaway message here",
    "start": "847290",
    "end": "856439"
  },
  {
    "text": "the main thing to remember is that this number of iterations that the access",
    "start": "856439",
    "end": "863100"
  },
  {
    "text": "point needs to convert the password into a group elements this essentially forms",
    "start": "863100",
    "end": "868110"
  },
  {
    "text": "a signature of the password um this signature can then be used to",
    "start": "868110",
    "end": "873660"
  },
  {
    "text": "perform an offline dictionary or even a brute-force attack now a final thing",
    "start": "873660",
    "end": "880589"
  },
  {
    "text": "that I haven't explained here yet is whether it's really possible to measure",
    "start": "880589",
    "end": "885959"
  },
  {
    "text": "how many iterations that the access point executes I mean is it possible to",
    "start": "885959",
    "end": "891179"
  },
  {
    "text": "do over Wi-Fi because with Wi-Fi there can be a lot of overheads messages can be dropped or",
    "start": "891179",
    "end": "896459"
  },
  {
    "text": "delayed so is this feasible to test this we took a Raspberry Pi 1 on this",
    "start": "896459",
    "end": "905129"
  },
  {
    "text": "Raspberry Pi one we use the open source host APD software to set up a WPA 3",
    "start": "905129",
    "end": "911069"
  },
  {
    "text": "access point now the this open source software is also used in nearly all home",
    "start": "911069",
    "end": "917879"
  },
  {
    "text": "routers and in a lot of professional access points as well and the reason we",
    "start": "917879",
    "end": "923129"
  },
  {
    "text": "picked a Raspberry Pi is because it's CPU matches the CPU of ordinary home",
    "start": "923129",
    "end": "928829"
  },
  {
    "text": "routers and even some professional access points it turns out that if we",
    "start": "928829",
    "end": "935069"
  },
  {
    "text": "then measure how long it takes for access points to reply we can indeed recover how many iterations the",
    "start": "935069",
    "end": "941909"
  },
  {
    "text": "algorithm needed and our specific setup we needed to perform around 75 timing",
    "start": "941909",
    "end": "949229"
  },
  {
    "text": "measurements where MAC address to recover how many iterations that the access point executed now one remark",
    "start": "949229",
    "end": "958139"
  },
  {
    "text": "here is that if the access point would use a much better or higher end CPU then",
    "start": "958139",
    "end": "964979"
  },
  {
    "text": "you would need a lot more of these timing measurements to perform your attacks however because WPA 3 is mainly",
    "start": "964979",
    "end": "972059"
  },
  {
    "text": "designed to hunt to run on home routers on the home routers don't always have the fastest CPU my guess is that at",
    "start": "972059",
    "end": "980669"
  },
  {
    "text": "least for quite some devices this could have been possible in practice as well",
    "start": "980669",
    "end": "987949"
  },
  {
    "text": "so it's now time to go back to the beginning of the presentation where if",
    "start": "987949",
    "end": "994109"
  },
  {
    "text": "you still remember I mentioned that the handshake can be executed using two",
    "start": "994109",
    "end": "999329"
  },
  {
    "text": "types of cryptographic groups the first one is the one that we just discussed namely the mod P groups but the other",
    "start": "999329",
    "end": "1006169"
  },
  {
    "text": "one is elliptic curves and the question now is do we have the same kind of side",
    "start": "1006169",
    "end": "1011869"
  },
  {
    "text": "channels if I decide to use dragon fly using elliptic elliptic curves",
    "start": "1011869",
    "end": "1017409"
  },
  {
    "text": "before I can answer that question let me give a very brief introduction on elliptic curves basically when we're",
    "start": "1017409",
    "end": "1025639"
  },
  {
    "text": "using elliptic curve cryptography all the crypto operations are performed based on points",
    "start": "1025639",
    "end": "1031730"
  },
  {
    "text": "on the elliptic curve on the points here is basically on x and y coordinates",
    "start": "1031730",
    "end": "1037250"
  },
  {
    "text": "where the x and y must again be smaller than the prime on the formula that you",
    "start": "1037250",
    "end": "1043339"
  },
  {
    "text": "see here at the bottom it must also old fortunately we again don't need to know",
    "start": "1043339",
    "end": "1049730"
  },
  {
    "text": "all the mathematical details here what we do need to know is how the passwords",
    "start": "1049730",
    "end": "1056419"
  },
  {
    "text": "is now converted into a points on the elliptic curve so how did they decide to",
    "start": "1056419",
    "end": "1062659"
  },
  {
    "text": "do this um well they took a very similar approach as in the mod P case so what",
    "start": "1062659",
    "end": "1071269"
  },
  {
    "text": "happens here is we take a hash of the password we combine it with the MAC",
    "start": "1071269",
    "end": "1078080"
  },
  {
    "text": "addresses of the clients on the access point and we take the outputs of this",
    "start": "1078080",
    "end": "1084500"
  },
  {
    "text": "hash function as the x coordinates of our point and then what the algorithm",
    "start": "1084500",
    "end": "1091429"
  },
  {
    "text": "does it will try to find the corresponding Y value by essentially filling in this x value in the form here",
    "start": "1091429",
    "end": "1099230"
  },
  {
    "text": "in the middle and then seeing if there is a solution for the Y variable now",
    "start": "1099230",
    "end": "1105460"
  },
  {
    "text": "from some actually for half of all X values there is no solution for y so",
    "start": "1105460",
    "end": "1112610"
  },
  {
    "text": "there's no corresponding Y solution and to ative lis you can think of this because there's because we have to take",
    "start": "1112610",
    "end": "1119899"
  },
  {
    "text": "the square root of this formula you see there at the bottom on this square root doesn't always exist",
    "start": "1119899",
    "end": "1127809"
  },
  {
    "text": "this is a problem because that means that for certain hash outputs there's no corresponding Y values how do",
    "start": "1127809",
    "end": "1135649"
  },
  {
    "text": "we handle this well we handle this in a very similar way as before we simply",
    "start": "1135649",
    "end": "1141200"
  },
  {
    "text": "include a counter in the hash if it happens that we end up with an x value that has no solution for the Y value we",
    "start": "1141200",
    "end": "1148519"
  },
  {
    "text": "simply increase the counter by one and try again so you can see here that we",
    "start": "1148519",
    "end": "1154159"
  },
  {
    "text": "are again having the same issue because the number of iterations that are",
    "start": "1154159",
    "end": "1159500"
  },
  {
    "text": "execute here depend on the password as well if",
    "start": "1159500",
    "end": "1165120"
  },
  {
    "text": "we look at the PWD protocol which recall already used the dragonfly handshake",
    "start": "1165120",
    "end": "1172070"
  },
  {
    "text": "several years ago this protocol is used in a small amount of enterprise Wi-Fi",
    "start": "1172070",
    "end": "1178380"
  },
  {
    "text": "networks then the specification of the PWD protocol provides no defenses",
    "start": "1178380",
    "end": "1184350"
  },
  {
    "text": "against this in other words it's vulnerable to almost exactly the same timing side-channel that we just",
    "start": "1184350",
    "end": "1191460"
  },
  {
    "text": "discussed for WPA 3 the situation is",
    "start": "1191460",
    "end": "1198510"
  },
  {
    "text": "better when they were standardizing W PA 3 they realize that ok there is indeed a",
    "start": "1198510",
    "end": "1205380"
  },
  {
    "text": "timing leak here and we have to defend against this on they decided on the",
    "start": "1205380",
    "end": "1210540"
  },
  {
    "text": "following solution they decided to always execute 40 iterations no matter",
    "start": "1210540",
    "end": "1217740"
  },
  {
    "text": "when the password element P was found this prevents most timing attacks",
    "start": "1217740",
    "end": "1225150"
  },
  {
    "text": "because if the password here is found in iteration 10 well then still 40",
    "start": "1225150",
    "end": "1231180"
  },
  {
    "text": "iterations are Turkey extra iterations are executed so we have so we always",
    "start": "1231180",
    "end": "1236550"
  },
  {
    "text": "execute 40 iterations in total this means that if we use at least if we at",
    "start": "1236550",
    "end": "1244770"
  },
  {
    "text": "least use NIST curse then there is no timing leak for WPA 3 in this case",
    "start": "1244770",
    "end": "1253190"
  },
  {
    "text": "unfortunately though there's also some bad news the bad news is that WPA 3 was",
    "start": "1253190",
    "end": "1258960"
  },
  {
    "text": "also designed to support brain pool elliptic curves on the problem with",
    "start": "1258960",
    "end": "1265020"
  },
  {
    "text": "brain pool curves is that when using these curves there's again a high chance",
    "start": "1265020",
    "end": "1270840"
  },
  {
    "text": "that the output of the hash is larger than the prime being used by the script",
    "start": "1270840",
    "end": "1276090"
  },
  {
    "text": "a group on this would again mean that the remaining cryptographic calculations they would not be valid it's a",
    "start": "1276090",
    "end": "1283110"
  },
  {
    "text": "simplified explanation but we can use this here this means that we must again",
    "start": "1283110",
    "end": "1291210"
  },
  {
    "text": "see if the X output here is bigger than the prime and we again need to solve this somehow so maybe you can",
    "start": "1291210",
    "end": "1298740"
  },
  {
    "text": "already see where this is going designers decided to add an if condition",
    "start": "1298740",
    "end": "1304560"
  },
  {
    "text": "here where if X is bigger than the prime then we simply immediately go to the",
    "start": "1304560",
    "end": "1309900"
  },
  {
    "text": "next iteration so can you see the problem with this algorithm here the",
    "start": "1309900",
    "end": "1317340"
  },
  {
    "text": "problem is that this code here is now not always executed and more important",
    "start": "1317340",
    "end": "1324720"
  },
  {
    "text": "than that the number of times that this code is not executed depends on the password being used now this is a bit of",
    "start": "1324720",
    "end": "1333360"
  },
  {
    "text": "a simplified explanation but the main idea here is still valid on the main",
    "start": "1333360",
    "end": "1339060"
  },
  {
    "text": "idea of the attack here against this algorithm is that by again measuring the execution time for several MAC addresses",
    "start": "1339060",
    "end": "1346460"
  },
  {
    "text": "forms a signature of the password how we can then use the signature to perform",
    "start": "1346460",
    "end": "1352350"
  },
  {
    "text": "dictionary attacks offline so that",
    "start": "1352350",
    "end": "1358680"
  },
  {
    "text": "covers all our timing attacks another type of attack that we can perform",
    "start": "1358680",
    "end": "1364110"
  },
  {
    "text": "against this algorithm our cache attacks what do I mean specifically what cache",
    "start": "1364110",
    "end": "1369870"
  },
  {
    "text": "attacks what I mean is that an attacker can try to observe which statements in",
    "start": "1369870",
    "end": "1375240"
  },
  {
    "text": "this algorithm here are being executed in particular what an attacker can do is",
    "start": "1375240",
    "end": "1382530"
  },
  {
    "text": "that he or she can use the flush and reload technique to detect when this highlighted line here is being executed",
    "start": "1382530",
    "end": "1391640"
  },
  {
    "text": "this again reveals information about the password that essentially forms a",
    "start": "1391640",
    "end": "1396900"
  },
  {
    "text": "signature of the password there is one important remark here when performing",
    "start": "1396900",
    "end": "1403470"
  },
  {
    "text": "this attack this is that this this code",
    "start": "1403470",
    "end": "1409230"
  },
  {
    "text": "is executed 40 times because there are 40 iterations so we also need to know in",
    "start": "1409230",
    "end": "1414840"
  },
  {
    "text": "which iteration this condition was true and to handle that we use flush and",
    "start": "1414840",
    "end": "1422040"
  },
  {
    "text": "reload also in the calculation of this hash function and we use this to know in which iteration",
    "start": "1422040",
    "end": "1427450"
  },
  {
    "text": "are and we can then know in which iteration the square root indeed existed",
    "start": "1427450",
    "end": "1434730"
  },
  {
    "text": "apart from this we can also monitor when the x value was larger than the prime we",
    "start": "1434730",
    "end": "1440980"
  },
  {
    "text": "can again use flush and reloads we again also use flush and reloads to detect in",
    "start": "1440980",
    "end": "1446590"
  },
  {
    "text": "which iteration we are so the takeaway message here is that cash attacks using",
    "start": "1446590",
    "end": "1452980"
  },
  {
    "text": "the flush and reload technique they are also possible against dragonfly handshake of WPA 3 there are some",
    "start": "1452980",
    "end": "1462640"
  },
  {
    "text": "important remarks regarding this attack though and this is that this cash attack requires a more powerful adversary",
    "start": "1462640",
    "end": "1469540"
  },
  {
    "text": "because the adversary needs to be able to run unprivileged codes on the machine",
    "start": "1469540",
    "end": "1474970"
  },
  {
    "text": "of the victim this can in practice for example be a malicious Android applications with very few permissions",
    "start": "1474970",
    "end": "1482770"
  },
  {
    "text": "or researchers also showed in the past that against old browsers it's also",
    "start": "1482770",
    "end": "1488680"
  },
  {
    "text": "possible to perform these cache attacks from JavaScript although with updated browsers they have mitigations against",
    "start": "1488680",
    "end": "1495070"
  },
  {
    "text": "that the second condition is that like most wife attacks the adversary also",
    "start": "1495070",
    "end": "1502030"
  },
  {
    "text": "needs to be rooted in range of the victim so these conditions are quite",
    "start": "1502030",
    "end": "1507430"
  },
  {
    "text": "high so this is not the most practical attack however considering that WPA 3 is",
    "start": "1507430",
    "end": "1512770"
  },
  {
    "text": "a new protocol it is quite surprising that implementations are vulnerable to this kind of attack as I mentioned the",
    "start": "1512770",
    "end": "1522340"
  },
  {
    "text": "information that is leaked using these cache attacks and again forms the signature of the password which we can",
    "start": "1522340",
    "end": "1528280"
  },
  {
    "text": "then use an offline brute force on dictionary attacks and by this point you",
    "start": "1528280",
    "end": "1537670"
  },
  {
    "text": "may now realize that both for the timing attack on the cache attack our decide",
    "start": "1537670",
    "end": "1544900"
  },
  {
    "text": "Channel leaks that occur they basically can be used to obtain a signature of the",
    "start": "1544900",
    "end": "1550000"
  },
  {
    "text": "password so for both our timing attack on cache attack what we as an adversary",
    "start": "1550000",
    "end": "1555340"
  },
  {
    "text": "game is a signature of the passwords and we can then use the signature in a dictionary of",
    "start": "1555340",
    "end": "1561370"
  },
  {
    "text": "this means that there will be quite some benefit to optimizing this offline",
    "start": "1561370",
    "end": "1566960"
  },
  {
    "text": "dictionary attack and make it as fast as possible because we can use it in both situations and we implemented these",
    "start": "1566960",
    "end": "1575690"
  },
  {
    "text": "optimizations on a GPU when running our algorithm on Amazon ec2 instances we",
    "start": "1575690",
    "end": "1583760"
  },
  {
    "text": "found that we can brute-force 10 to the power 10 passwords for only one dollar in ec and Amazon spot instances now to",
    "start": "1583760",
    "end": "1594290"
  },
  {
    "text": "give you a bit of an intuition about how large this dictionary is basically this",
    "start": "1594290",
    "end": "1601220"
  },
  {
    "text": "is larger than all known password leaks so this number is larger than the RockYou database dump it's larger than",
    "start": "1601220",
    "end": "1608390"
  },
  {
    "text": "all the passwords and have I been poned it's larger than all dictionaries of",
    "start": "1608390",
    "end": "1613550"
  },
  {
    "text": "English words so if you have a dictionary it will basically cost you $1",
    "start": "1613550",
    "end": "1619370"
  },
  {
    "text": "to then brute force the password at least if the implementation is vulnerable to the timing leaks or the",
    "start": "1619370",
    "end": "1625310"
  },
  {
    "text": "cache attacks this is quite cheap I'm",
    "start": "1625310",
    "end": "1632390"
  },
  {
    "text": "inspired by this we also made the calculation what if we don't just want to perform a dictionary attack but what",
    "start": "1632390",
    "end": "1638630"
  },
  {
    "text": "if we want to perform a real real root force attack and we want to brute force all passwords of 8 characters and here I",
    "start": "1638630",
    "end": "1647120"
  },
  {
    "text": "really mean all characters meaning all 256 possibilities for each for each",
    "start": "1647120",
    "end": "1654320"
  },
  {
    "text": "character in this case when attacking mod p or brain pool curse that would",
    "start": "1654320",
    "end": "1660260"
  },
  {
    "text": "cost you about $70 on Amazon spot instances when you would apply this",
    "start": "1660260",
    "end": "1667370"
  },
  {
    "text": "against NIST elliptic curves the computations are more costly on it would cost fourteen thousand dollars this is a",
    "start": "1667370",
    "end": "1676310"
  },
  {
    "text": "lot more especially if you would compare it to the dictionary attacks of wpa2 on",
    "start": "1676310",
    "end": "1681890"
  },
  {
    "text": "the other hand there is still the same remark that WPA true at wk 3 is a modern",
    "start": "1681890",
    "end": "1687320"
  },
  {
    "text": "cryptographic protocol this should not be possible at all",
    "start": "1687320",
    "end": "1693700"
  },
  {
    "text": "so that covers the design flaws that we discovered in dragonfly on top of that",
    "start": "1694490",
    "end": "1702140"
  },
  {
    "text": "we also looked at recent implementations of WPA three arms EEP",
    "start": "1702140",
    "end": "1708380"
  },
  {
    "text": "PWD as well on here we also found some implementation bugs",
    "start": "1708380",
    "end": "1713710"
  },
  {
    "text": "so the bug that I described previously there are really design issues that the my opinion should be fixed by updating",
    "start": "1713710",
    "end": "1720560"
  },
  {
    "text": "the standard but we also find some programming mistakes on the most",
    "start": "1720560",
    "end": "1725630"
  },
  {
    "text": "important one that we found this was especially present in PWD implementation",
    "start": "1725630",
    "end": "1730880"
  },
  {
    "text": "is the so called invalid curve attack and to give a high-level explanation of",
    "start": "1730880",
    "end": "1738050"
  },
  {
    "text": "this attack recall that the dragonfly handshake in the case of WPA 3 or also",
    "start": "1738050",
    "end": "1745580"
  },
  {
    "text": "in PWD the first phase of this handshake is the commit phase when using elliptic",
    "start": "1745580",
    "end": "1752330"
  },
  {
    "text": "curves this commit frame contains a points on the elliptic curve being used",
    "start": "1752330",
    "end": "1758950"
  },
  {
    "text": "normally these x and y-coordinates they must adhere to this specific formula of",
    "start": "1758950",
    "end": "1766040"
  },
  {
    "text": "the elliptic curve being used but as an attacker we can try to send two x and",
    "start": "1766040",
    "end": "1771830"
  },
  {
    "text": "y-coordinates that are not on this elliptic curve and if the implementation",
    "start": "1771830",
    "end": "1777470"
  },
  {
    "text": "in this case the access points forgets to check whether the received x and",
    "start": "1777470",
    "end": "1782600"
  },
  {
    "text": "y-coordinate are indeed on the curve this means that the negotiated key will",
    "start": "1782600",
    "end": "1789290"
  },
  {
    "text": "be predictable so to recap that if we send an invalid x and y-coordinates the",
    "start": "1789290",
    "end": "1796250"
  },
  {
    "text": "key that is being calculated by the access point is predictable it can for example only have three or a hundred",
    "start": "1796250",
    "end": "1802550"
  },
  {
    "text": "possible values on the access point doesn't realize realize that it will",
    "start": "1802550",
    "end": "1807860"
  },
  {
    "text": "simply continue with the handshake on we as an attacker can then guess the session key on based on this guess we",
    "start": "1807860",
    "end": "1815390"
  },
  {
    "text": "can complete the second phase of the handshake and we can then successfully authenticate to the network without",
    "start": "1815390",
    "end": "1822350"
  },
  {
    "text": "knowing the password in other words this would bypass authentication",
    "start": "1822350",
    "end": "1828210"
  },
  {
    "text": "to our surprise all eight PWD protocols that we looked at we're vulnerable to",
    "start": "1828210",
    "end": "1834480"
  },
  {
    "text": "this attack fortunately for WPA three the situation in this case is a lot better because the",
    "start": "1834480",
    "end": "1842190"
  },
  {
    "text": "Wi-Fi Alliance in their certification probe process they check that",
    "start": "1842190",
    "end": "1847920"
  },
  {
    "text": "implementations properly handles handle this case but even with this we still",
    "start": "1847920",
    "end": "1853890"
  },
  {
    "text": "found that the linux IW d client which is a recently developed Wi-Fi client is",
    "start": "1853890",
    "end": "1859440"
  },
  {
    "text": "vulnerable to a variation of this attack",
    "start": "1859440",
    "end": "1864440"
  },
  {
    "text": "another implementation aspect that we looked at is whether implementations use",
    "start": "1865160",
    "end": "1870270"
  },
  {
    "text": "a proper source of randomness the reason",
    "start": "1870270",
    "end": "1875490"
  },
  {
    "text": "why this is important is because if for example a client or an access point uses",
    "start": "1875490",
    "end": "1880770"
  },
  {
    "text": "a predictable source of randomness then based on the exchanged messages that the",
    "start": "1880770",
    "end": "1886380"
  },
  {
    "text": "handshakes that dragonfly performs we can recover the password element P so in",
    "start": "1886380",
    "end": "1893220"
  },
  {
    "text": "other words if the random numbers are predictable we can recover the password and we can then connect as a client here",
    "start": "1893220",
    "end": "1901410"
  },
  {
    "text": "we found that an old EP PWD implementation of aruba this was the",
    "start": "1901410",
    "end": "1908610"
  },
  {
    "text": "case the random numbers were roughly predictable because they were generated based on the system time um in this case",
    "start": "1908610",
    "end": "1915240"
  },
  {
    "text": "the password element P could be recovered this is actually quite an",
    "start": "1915240",
    "end": "1922320"
  },
  {
    "text": "interesting attack because if we compare this to wpa2 then with wpa2 we would not",
    "start": "1922320",
    "end": "1928350"
  },
  {
    "text": "have this issue if with wpa2 we would use predictable randomness at worst we",
    "start": "1928350",
    "end": "1935970"
  },
  {
    "text": "might be able to perform some more efficient dictionary attack or maybe we can perform a key reinstallation but in",
    "start": "1935970",
    "end": "1944790"
  },
  {
    "text": "general it doesn't have a much impact of or wpa2 while with WPA 3 if you use bad",
    "start": "1944790",
    "end": "1950370"
  },
  {
    "text": "randomness the result is absolutely catastrophic because an adversary can recover the password",
    "start": "1950370",
    "end": "1958190"
  },
  {
    "text": "for now there are not that many WPA 3 implementations yet but here my",
    "start": "1959840",
    "end": "1965279"
  },
  {
    "text": "prediction is that maybe on a ot devices which don't have a proper source of randomness this might be an issue in the",
    "start": "1965279",
    "end": "1972330"
  },
  {
    "text": "future who knows the last implementation-specific book that we",
    "start": "1972330",
    "end": "1979379"
  },
  {
    "text": "looked at is side channels that are in the design issues but that we still",
    "start": "1979379",
    "end": "1984419"
  },
  {
    "text": "encountered in some implementations the one that we found here is again Singh is",
    "start": "1984419",
    "end": "1990120"
  },
  {
    "text": "again against the PWD protocol on what we found there is that in the case of",
    "start": "1990120",
    "end": "1998850"
  },
  {
    "text": "free radius they implemented the extra defense of executing extra iterations to",
    "start": "1998850",
    "end": "2006200"
  },
  {
    "text": "try to prevent timing leaks however even",
    "start": "2006200",
    "end": "2011450"
  },
  {
    "text": "though they implemented this countermeasure they still made a mistake here because what I did is that if more",
    "start": "2011450",
    "end": "2017450"
  },
  {
    "text": "than 10 iterations are needed they simply abort the handshake in about 1",
    "start": "2017450",
    "end": "2024649"
  },
  {
    "text": "out of every 2000 handshakes that are being performed we indeed need more than 10 iterations meaning the handshake will",
    "start": "2024649",
    "end": "2031730"
  },
  {
    "text": "be aborted as a client we can detect this as an attacker we can detect when",
    "start": "2031730",
    "end": "2036740"
  },
  {
    "text": "the handshake is aborted the information that is leaked in that case again allows",
    "start": "2036740",
    "end": "2041840"
  },
  {
    "text": "us to recover the password now one other observation you may now be making is",
    "start": "2041840",
    "end": "2048800"
  },
  {
    "text": "that in the PWD implementations we noticed quite some vulnerabilities it",
    "start": "2048800",
    "end": "2055520"
  },
  {
    "text": "was vulnerable to our invalid kerf attack we found sources of math randomness we",
    "start": "2055520",
    "end": "2061940"
  },
  {
    "text": "now have this implementation specific side channel with WPA 3 the situation is",
    "start": "2061940",
    "end": "2067908"
  },
  {
    "text": "a bit better on my guess is because vendors investing invest a bit more time",
    "start": "2067909",
    "end": "2075710"
  },
  {
    "text": "in implementing wk3 at least so far so",
    "start": "2075710",
    "end": "2081618"
  },
  {
    "text": "that covers the implementation specific attacks the last type of attacks that I want to discuss are more specific to",
    "start": "2081619",
    "end": "2089210"
  },
  {
    "text": "Wi-Fi networks on WPA 3",
    "start": "2089210",
    "end": "2094148"
  },
  {
    "text": "so if we go back to our initial overview of how the handshake worked recall that",
    "start": "2094419",
    "end": "2101780"
  },
  {
    "text": "if we perform the handshake the password has to be converted into a group",
    "start": "2101780",
    "end": "2107210"
  },
  {
    "text": "elements this has to be done every single time the handshake is executed we",
    "start": "2107210",
    "end": "2113480"
  },
  {
    "text": "cannot store this group element offline on this is because it depends on the MAC",
    "start": "2113480",
    "end": "2118760"
  },
  {
    "text": "addresses of the devices on in particular it depends on the MAC address of the clients so an access points",
    "start": "2118760",
    "end": "2124520"
  },
  {
    "text": "cannot simply store the group element P because we as an attacker ganda can then",
    "start": "2124520",
    "end": "2130190"
  },
  {
    "text": "simply spoof another client MAC address on the access point then must perform",
    "start": "2130190",
    "end": "2135260"
  },
  {
    "text": "this calculation again now unfortunately as you saw here when the access point",
    "start": "2135260",
    "end": "2143780"
  },
  {
    "text": "converts this passwords into a group elements it implements this defense",
    "start": "2143780",
    "end": "2149059"
  },
  {
    "text": "against timing leaks meaning it executes 40 iterations every time a handshake is",
    "start": "2149059",
    "end": "2155839"
  },
  {
    "text": "being initiated that is quite a large overheads and practice especially when",
    "start": "2155839",
    "end": "2163220"
  },
  {
    "text": "you use one of the more secure and bigger elliptic curve groups this overhead is quite high for example we",
    "start": "2163220",
    "end": "2171049"
  },
  {
    "text": "found that against a professional access point that support that supports one of",
    "start": "2171049",
    "end": "2176359"
  },
  {
    "text": "these bigger elliptic curves if I would initiate say ten handshakes per second",
    "start": "2176359",
    "end": "2181819"
  },
  {
    "text": "this would overload the CPU of the access point and if I would use a",
    "start": "2181819",
    "end": "2188750"
  },
  {
    "text": "smaller elliptic curve but still one that is secure this would be around 70 connections attempt per second if I do",
    "start": "2188750",
    "end": "2196609"
  },
  {
    "text": "that then the CPU of the access point would be overloaded which in practice",
    "start": "2196609",
    "end": "2201770"
  },
  {
    "text": "would mean that other WPA 3 handshakes would be delayed or would no longer be",
    "start": "2201770",
    "end": "2208309"
  },
  {
    "text": "possible in other words as a client or",
    "start": "2208309",
    "end": "2213650"
  },
  {
    "text": "as an adversary we can initiate these hands and shakes with access points and cause at the Nile of service attack",
    "start": "2213650",
    "end": "2223000"
  },
  {
    "text": "another Wi-Fi specific at that we found is that WPA three also",
    "start": "2223119",
    "end": "2232280"
  },
  {
    "text": "supports a mode where a network can simultaneously support both wpa2 on WPA",
    "start": "2232280",
    "end": "2239090"
  },
  {
    "text": "three at the same time at the decision that they made here is that both wpa2 on",
    "start": "2239090",
    "end": "2247760"
  },
  {
    "text": "the WPA three network they would use the same password now if we were to try to",
    "start": "2247760",
    "end": "2255950"
  },
  {
    "text": "attack this setup for example let's say that I find an access point that",
    "start": "2255950",
    "end": "2261050"
  },
  {
    "text": "supports about two and three then I could try to set up a malicious access point that only supports wpa2 and I can",
    "start": "2261050",
    "end": "2269480"
  },
  {
    "text": "then try to establish a man-in-the-middle position however that",
    "start": "2269480",
    "end": "2274640"
  },
  {
    "text": "won't immediately allow you to attack the handshake because if as an attacker",
    "start": "2274640",
    "end": "2281540"
  },
  {
    "text": "you are trying to force a victim into executing the wpa2 handshake then the wpa2 handshake will detect that",
    "start": "2281540",
    "end": "2289940"
  },
  {
    "text": "the real access point supports WPA three meaning the victim will attack",
    "start": "2289940",
    "end": "2296090"
  },
  {
    "text": "hey well detect hey there's an attack going on and I'm going to abort the handshake and that's good because that",
    "start": "2296090",
    "end": "2302750"
  },
  {
    "text": "means that WPA three when you configure it this way where you simultaneously",
    "start": "2302750",
    "end": "2309980"
  },
  {
    "text": "supports both versions then it provides forward secrecy unfortunately there is",
    "start": "2309980",
    "end": "2317750"
  },
  {
    "text": "one small problem here it's actually a big problem namely this partial wpa2",
    "start": "2317750",
    "end": "2325430"
  },
  {
    "text": "handshake that is being executed that already provides enough information to",
    "start": "2325430",
    "end": "2330470"
  },
  {
    "text": "do a dictionary attack against it so",
    "start": "2330470",
    "end": "2335540"
  },
  {
    "text": "even though the client may detect that the real access point supports WPS three",
    "start": "2335540",
    "end": "2340960"
  },
  {
    "text": "by the time it finds that out it's already too late because the exchanged messages so far allow you to perform a",
    "start": "2340960",
    "end": "2347450"
  },
  {
    "text": "dictionary attack so how can we prevent this well what we can do is we can let",
    "start": "2347450",
    "end": "2355280"
  },
  {
    "text": "the clients remember whether an access point previously supported WPA",
    "start": "2355280",
    "end": "2360320"
  },
  {
    "text": "three and if so then we will only connect using WPA three in the future",
    "start": "2360320",
    "end": "2366830"
  },
  {
    "text": "and this prevents this downgrade tech and this is similar to the thrust on first usage of SSH or HTTP pinning the",
    "start": "2366830",
    "end": "2376820"
  },
  {
    "text": "good news is that the Google pixel three arms the network manager of Linux are they implemented this defense meaning if",
    "start": "2376820",
    "end": "2384770"
  },
  {
    "text": "you use that you are secure against this attack a second kind of downgrade attack",
    "start": "2384770",
    "end": "2392360"
  },
  {
    "text": "is also possible on this downgrade attack is against a dragonfly handshake",
    "start": "2392360",
    "end": "2397580"
  },
  {
    "text": "itself so recall that the dragonfly handshake can be performed using",
    "start": "2397580",
    "end": "2403070"
  },
  {
    "text": "multiple cryptographic groups some of these groups are relatively weak while",
    "start": "2403070",
    "end": "2409490"
  },
  {
    "text": "other cryptographic groups are relatively strong it turns out that we",
    "start": "2409490",
    "end": "2415040"
  },
  {
    "text": "can influence which cryptographic group a victim will use in particular the way",
    "start": "2415040",
    "end": "2421910"
  },
  {
    "text": "that's a client on a nexus point for example negotiate which cryptographic group is being used is that the nature",
    "start": "2421910",
    "end": "2428180"
  },
  {
    "text": "the initiator of the handshake will suggest a cryptographic group that the",
    "start": "2428180",
    "end": "2433610"
  },
  {
    "text": "device wants to use and then the report the responder either accepts that group or ejects it now it turns out that",
    "start": "2433610",
    "end": "2442220"
  },
  {
    "text": "spoofing this reject message is trivial meaning we can simply as an adversary",
    "start": "2442220",
    "end": "2447320"
  },
  {
    "text": "spoof the reject message and then force the victim into using a weaker",
    "start": "2447320",
    "end": "2453080"
  },
  {
    "text": "cryptographic group as it would otherwise use this is a design flaw in",
    "start": "2453080",
    "end": "2459440"
  },
  {
    "text": "the handshake of dragonfly arms clients access points are vulnerable to this",
    "start": "2459440",
    "end": "2465890"
  },
  {
    "text": "attack so as the last part of this presentation",
    "start": "2465890",
    "end": "2471230"
  },
  {
    "text": "I want to briefly go over the disclosure process that we thought that we followed",
    "start": "2471230",
    "end": "2476800"
  },
  {
    "text": "the mitigations that are being implemented so what we did here is we",
    "start": "2476800",
    "end": "2483890"
  },
  {
    "text": "try to notify parties very early with us hope that we could influence WPA 3 now",
    "start": "2483890",
    "end": "2490880"
  },
  {
    "text": "during our initial disclosure there actually some skepticism regarding our",
    "start": "2490880",
    "end": "2496490"
  },
  {
    "text": "attacks because they mainly consider this to be implementation floss they",
    "start": "2496490",
    "end": "2501980"
  },
  {
    "text": "thought all the timing like the timing leak we can prevent this by executing extra iterations on the cache attack we",
    "start": "2501980",
    "end": "2508640"
  },
  {
    "text": "can also prevent this by very carefully implementing it um one interesting remark is that one",
    "start": "2508640",
    "end": "2517400"
  },
  {
    "text": "developer even said oh yeah we actually knew about one of these downgrade attacks we just forgot to warn you about",
    "start": "2517400",
    "end": "2523340"
  },
  {
    "text": "it now the official reaction of the",
    "start": "2523340",
    "end": "2528920"
  },
  {
    "text": "Wi-Fi Alliance was that they privately created guidelines to securely implement",
    "start": "2528920",
    "end": "2535880"
  },
  {
    "text": "WPA 3 unfortunately in these guidelines they mentioned that rainbow curse are",
    "start": "2535880",
    "end": "2542720"
  },
  {
    "text": "safe to use but as we discussed even when using red pool curse some vulnerabilities some side channels",
    "start": "2542720",
    "end": "2549350"
  },
  {
    "text": "remain this actually meant we had to do a second small disclosure now there is",
    "start": "2549350",
    "end": "2559790"
  },
  {
    "text": "one fundamental issue that remains though that even if we implement these backwards compatible countermeasures",
    "start": "2559790",
    "end": "2566210"
  },
  {
    "text": "there's one big problem with the design of dragonfly this is that it has to",
    "start": "2566210",
    "end": "2573020"
  },
  {
    "text": "perform 40 iterations in order to defend against our time meetings and that's a",
    "start": "2573020",
    "end": "2579350"
  },
  {
    "text": "very costly thing to do especially on lightweight devices executing these 40",
    "start": "2579350",
    "end": "2584810"
  },
  {
    "text": "iterations is too costly and the problem",
    "start": "2584810",
    "end": "2590150"
  },
  {
    "text": "is even worse here because you might now think that yeah but if I have a powerful smartphone or if I have a powerful",
    "start": "2590150",
    "end": "2596750"
  },
  {
    "text": "laptop then this doesn't matter the CPU of my device is powerful enough that",
    "start": "2596750",
    "end": "2601850"
  },
  {
    "text": "this isn't an issue unfortunately what we see in practice or what's at least a",
    "start": "2601850",
    "end": "2608000"
  },
  {
    "text": "common practice with wpa2 is that a lot of times the Wi-Fi handshake is",
    "start": "2608000",
    "end": "2613460"
  },
  {
    "text": "offloaded to the Wi-Fi radio itself so that the main CPU doesn't have to care",
    "start": "2613460",
    "end": "2619400"
  },
  {
    "text": "about the height about the handshake and unfortunately these lightweight Wi-Fi",
    "start": "2619400",
    "end": "2624800"
  },
  {
    "text": "chips they are not powerful enough to always execute these 40 iterations meaning as an implementer you have to",
    "start": "2624800",
    "end": "2633299"
  },
  {
    "text": "decide between eight are doing these 40 iterations and possibly being vulnerable to the nine of service attacks or",
    "start": "2633299",
    "end": "2640680"
  },
  {
    "text": "consuming a lot of power or not doing these iterations of possibly being",
    "start": "2640680",
    "end": "2645779"
  },
  {
    "text": "vulnerable to timing attacks so that's not a good situation because no matter",
    "start": "2645779",
    "end": "2652410"
  },
  {
    "text": "what you do you basically end up in a bad position the good news here though",
    "start": "2652410",
    "end": "2657930"
  },
  {
    "text": "is that the standard is now being updated with ways to prevent these",
    "start": "2657930",
    "end": "2663769"
  },
  {
    "text": "vulnerabilities in a proper way the first thing that is being done is that",
    "start": "2663769",
    "end": "2669479"
  },
  {
    "text": "they are now implementing a defense to prevent these downgrade attacks against cryptographic groups another design",
    "start": "2669479",
    "end": "2676499"
  },
  {
    "text": "issue that they are now making is they is that they modified the algorithm that",
    "start": "2676499",
    "end": "2684959"
  },
  {
    "text": "converts the passwords into a group element so that this algorithm can also at least partly be executed offline this",
    "start": "2684959",
    "end": "2694079"
  },
  {
    "text": "means it doesn't have to be executed every single the time you make you perform a handshake this helps with",
    "start": "2694079",
    "end": "2700890"
  },
  {
    "text": "allowing you to implement it efficiently and also makes it more complicated to perform attacks",
    "start": "2700890",
    "end": "2707539"
  },
  {
    "text": "I'm not going to go into too much detail here but some other defenses that they are now discussing to implement is to",
    "start": "2707539",
    "end": "2716660"
  },
  {
    "text": "implement this algorithm that converts the password in a constant time fashion",
    "start": "2716660",
    "end": "2722369"
  },
  {
    "text": "for both the mod P groups on the elliptic curve groups to really prevent",
    "start": "2722369",
    "end": "2728309"
  },
  {
    "text": "these side channel leaks in the specification itself these suggestions",
    "start": "2728309",
    "end": "2734190"
  },
  {
    "text": "are actually very good so from an implementation follows these WPA three is actually in my opinion a pretty good",
    "start": "2734190",
    "end": "2741440"
  },
  {
    "text": "protocol unfortunately these changes are not backwards compatible so this might lead",
    "start": "2741440",
    "end": "2748170"
  },
  {
    "text": "to a new revision of WPA 3 it's still unclear how this will be handled so",
    "start": "2748170",
    "end": "2754259"
  },
  {
    "text": "there might be also risk of downgrade attacks against initial version of WPA 3 it's unclear what will happen here",
    "start": "2754259",
    "end": "2761340"
  },
  {
    "text": "now the final thing I want to say here is this all this research mean that it's",
    "start": "2761340",
    "end": "2767590"
  },
  {
    "text": "now very trivial to attack wp3 well the answer is no WPA 3 is still better than",
    "start": "2767590",
    "end": "2775570"
  },
  {
    "text": "WPA 2 because with WPA 2 it's really trivial to perform a dictionary attack",
    "start": "2775570",
    "end": "2781690"
  },
  {
    "text": "you just capture the handshake don't you do your dictionary attacks with WPA 3 and you need to perform these timing",
    "start": "2781690",
    "end": "2788080"
  },
  {
    "text": "attacks you need to perform these cache attacks and only then can you do the dictionary attacks so in that sense WPA",
    "start": "2788080",
    "end": "2794680"
  },
  {
    "text": "3 is better however as a modern security protocol the vulnerabilities that we",
    "start": "2794680",
    "end": "2801400"
  },
  {
    "text": "found are really unacceptable so that concludes my talk",
    "start": "2801400",
    "end": "2806470"
  },
  {
    "text": "so the takeaway messages here is that WPA 3 is vulnerable to side channels the",
    "start": "2806470",
    "end": "2812590"
  },
  {
    "text": "countermeasures here they are quite costly because of that the standard is now being updated the planned updates",
    "start": "2812590",
    "end": "2820900"
  },
  {
    "text": "they're actually quite strong so the last conclusion here is that if you have",
    "start": "2820900",
    "end": "2826900"
  },
  {
    "text": "a device that supports WPA 3 yes WP 3 has its flaws but it's still",
    "start": "2826900",
    "end": "2832180"
  },
  {
    "text": "better so if possible you should use it so thank you for your attention and if",
    "start": "2832180",
    "end": "2837700"
  },
  {
    "text": "there are questions feel free to ask [Applause]",
    "start": "2837700",
    "end": "2845719"
  }
]