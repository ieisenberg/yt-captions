[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "good morning everyone welcome to SSO",
    "start": "0",
    "end": "3179"
  },
  {
    "text": "wars the token menace in South Pacific",
    "start": "3179",
    "end": "5580"
  },
  {
    "text": "with Alex and Emeril and Alvaro Munoz",
    "start": "5580",
    "end": "9170"
  },
  {
    "text": "before we begin we have a few brief",
    "start": "9170",
    "end": "11130"
  },
  {
    "text": "announcements please stop by the",
    "start": "11130",
    "end": "13080"
  },
  {
    "text": "business all located in the Mandalay Bay",
    "start": "13080",
    "end": "14880"
  },
  {
    "text": "Oceanside and shoreline ballrooms on",
    "start": "14880",
    "end": "16949"
  },
  {
    "text": "level 2 during the day and for the",
    "start": "16949",
    "end": "18600"
  },
  {
    "text": "Welcome Reception at 5:30 tonight the",
    "start": "18600",
    "end": "21390"
  },
  {
    "text": "black hat Arsenal is in the business",
    "start": "21390",
    "end": "22890"
  },
  {
    "text": "hall on level 2 please join us for the",
    "start": "22890",
    "end": "25439"
  },
  {
    "text": "Pony Awards in lagoon GHI at 6:30 today",
    "start": "25439",
    "end": "28730"
  },
  {
    "text": "lunch will be available in Bayside a be",
    "start": "28730",
    "end": "31349"
  },
  {
    "text": "from 1205 to 1:30 and don't forget the",
    "start": "31349",
    "end": "34230"
  },
  {
    "text": "merchandise store on level 2 and session",
    "start": "34230",
    "end": "36480"
  },
  {
    "text": "recordings from source knowledge they",
    "start": "36480",
    "end": "38640"
  },
  {
    "text": "have a desk on every level please ensure",
    "start": "38640",
    "end": "41579"
  },
  {
    "text": "that your phones have been placed on",
    "start": "41579",
    "end": "42750"
  },
  {
    "text": "vibrate to avoid interrupting the",
    "start": "42750",
    "end": "44280"
  },
  {
    "text": "presentation and now please welcome",
    "start": "44280",
    "end": "45989"
  },
  {
    "text": "Alexander and Navarro so thank you very",
    "start": "45989",
    "end": "56010"
  },
  {
    "text": "much so as he said my name is Xavier",
    "start": "56010",
    "end": "58980"
  },
  {
    "text": "Romanov he's Alexander meteors we are",
    "start": "58980",
    "end": "61050"
  },
  {
    "text": "both security researchers with",
    "start": "61050",
    "end": "62579"
  },
  {
    "text": "microfocus fortify team we have a packed",
    "start": "62579",
    "end": "65369"
  },
  {
    "text": "agenda for today because we actually",
    "start": "65369",
    "end": "66930"
  },
  {
    "text": "submitted this talk as a 15 minutes",
    "start": "66930",
    "end": "68760"
  },
  {
    "text": "brief embolic got acceptance of 25 1 so",
    "start": "68760",
    "end": "71010"
  },
  {
    "text": "we had to discard a lot of stuff but we",
    "start": "71010",
    "end": "74189"
  },
  {
    "text": "put that into a white paper that is",
    "start": "74189",
    "end": "75750"
  },
  {
    "text": "going to be published today and host in",
    "start": "75750",
    "end": "78600"
  },
  {
    "text": "the in the black hat survey so we will",
    "start": "78600",
    "end": "82320"
  },
  {
    "text": "start with a brief introduction to what",
    "start": "82320",
    "end": "84320"
  },
  {
    "text": "authentication tokens are and how are",
    "start": "84320",
    "end": "86490"
  },
  {
    "text": "they connected to the located in",
    "start": "86490",
    "end": "88200"
  },
  {
    "text": "syndication and then we will be",
    "start": "88200",
    "end": "90030"
  },
  {
    "text": "presenting two vulnerabilities that we",
    "start": "90030",
    "end": "91500"
  },
  {
    "text": "found in the net framework the first one",
    "start": "91500",
    "end": "93990"
  },
  {
    "text": "is an injection vulnerability leading to",
    "start": "93990",
    "end": "95850"
  },
  {
    "text": "a betrayal constructor invocation and we",
    "start": "95850",
    "end": "98280"
  },
  {
    "text": "will see what's the impact of an",
    "start": "98280",
    "end": "99930"
  },
  {
    "text": "arbitrary constructor and the second one",
    "start": "99930",
    "end": "102780"
  },
  {
    "text": "will be XML signature by path that we",
    "start": "102780",
    "end": "105689"
  },
  {
    "text": "found and how we apply that to bypass",
    "start": "105689",
    "end": "108630"
  },
  {
    "text": "the some signature bypass that's what we",
    "start": "108630",
    "end": "112350"
  },
  {
    "text": "call duty confusion and we will be",
    "start": "112350",
    "end": "115020"
  },
  {
    "text": "presenting what microsoft frameworks and",
    "start": "115020",
    "end": "117630"
  },
  {
    "text": "products are affected by this wound",
    "start": "117630",
    "end": "119310"
  },
  {
    "text": "repeating so the legate authentication",
    "start": "119310",
    "end": "122909"
  },
  {
    "start": "120000",
    "end": "246000"
  },
  {
    "text": "is nothing else that when the user",
    "start": "122909",
    "end": "125399"
  },
  {
    "text": "access our protected resource the",
    "start": "125399",
    "end": "128099"
  },
  {
    "text": "service provider who is serving this",
    "start": "128099",
    "end": "129899"
  },
  {
    "text": "resource is not a handling our",
    "start": "129899",
    "end": "132200"
  },
  {
    "text": "authentication itself",
    "start": "132200",
    "end": "134010"
  },
  {
    "text": "right so it's basically delegating the",
    "start": "134010",
    "end": "136050"
  },
  {
    "text": "authentication to someone else in this",
    "start": "136050",
    "end": "137550"
  },
  {
    "text": "case we call it identity provided so the",
    "start": "137550",
    "end": "141360"
  },
  {
    "text": "user will go to the identity provider",
    "start": "141360",
    "end": "142590"
  },
  {
    "text": "will present the credentials and upon a",
    "start": "142590",
    "end": "145530"
  },
  {
    "text": "body validation or verification of the",
    "start": "145530",
    "end": "147900"
  },
  {
    "text": "credentials the identity provider will",
    "start": "147900",
    "end": "150150"
  },
  {
    "text": "issue an authentication token for this",
    "start": "150150",
    "end": "152069"
  },
  {
    "text": "user so there are multiple formats of",
    "start": "152069",
    "end": "155610"
  },
  {
    "text": "authentication tokens right we have some",
    "start": "155610",
    "end": "157980"
  },
  {
    "text": "all we have JSON web token we have",
    "start": "157980",
    "end": "160290"
  },
  {
    "text": "simple web tokens we have many of them",
    "start": "160290",
    "end": "162299"
  },
  {
    "text": "but all of them share some attributes",
    "start": "162299",
    "end": "166170"
  },
  {
    "text": "and some properties and the most",
    "start": "166170",
    "end": "168750"
  },
  {
    "text": "important one in most important one is",
    "start": "168750",
    "end": "170489"
  },
  {
    "text": "the signature right because if we don't",
    "start": "170489",
    "end": "172109"
  },
  {
    "text": "sign the authentication token anyone can",
    "start": "172109",
    "end": "176340"
  },
  {
    "text": "change the token the user or any",
    "start": "176340",
    "end": "178260"
  },
  {
    "text": "attacker in in the middle can change any",
    "start": "178260",
    "end": "181200"
  },
  {
    "text": "of the properties or attributes of the",
    "start": "181200",
    "end": "183329"
  },
  {
    "text": "authentication token and then just",
    "start": "183329",
    "end": "185069"
  },
  {
    "text": "become anyone in the target system in",
    "start": "185069",
    "end": "187410"
  },
  {
    "text": "this case in the service provider so we",
    "start": "187410",
    "end": "190109"
  },
  {
    "text": "will be focusing our research in step",
    "start": "190109",
    "end": "192299"
  },
  {
    "text": "number six that is when the service",
    "start": "192299",
    "end": "194489"
  },
  {
    "text": "provider receives the authentication",
    "start": "194489",
    "end": "197010"
  },
  {
    "text": "token and the reason for that is because",
    "start": "197010",
    "end": "198810"
  },
  {
    "text": "we think that there are two very",
    "start": "198810",
    "end": "200639"
  },
  {
    "text": "interesting attack vectors here the",
    "start": "200639",
    "end": "202950"
  },
  {
    "text": "first one is when the service provider",
    "start": "202950",
    "end": "205349"
  },
  {
    "text": "needs to parse and process the",
    "start": "205349",
    "end": "207989"
  },
  {
    "text": "authentication tokens some of these",
    "start": "207989",
    "end": "209880"
  },
  {
    "text": "attributes needs to be parsed before the",
    "start": "209880",
    "end": "212489"
  },
  {
    "text": "signature is verified so if we can find",
    "start": "212489",
    "end": "214859"
  },
  {
    "text": "one attribute that can lead to an",
    "start": "214859",
    "end": "217530"
  },
  {
    "text": "injection vulnerability this will be",
    "start": "217530",
    "end": "220470"
  },
  {
    "text": "before the verification of the signature",
    "start": "220470",
    "end": "222959"
  },
  {
    "text": "the second vector will be what if we can",
    "start": "222959",
    "end": "226680"
  },
  {
    "text": "go one step further and actually try to",
    "start": "226680",
    "end": "228989"
  },
  {
    "text": "bypass the whole signature verification",
    "start": "228989",
    "end": "230430"
  },
  {
    "text": "altogether so if we can do that we can",
    "start": "230430",
    "end": "233040"
  },
  {
    "text": "basically craft any authentication",
    "start": "233040",
    "end": "235109"
  },
  {
    "text": "tokens for any arbitrary user present",
    "start": "235109",
    "end": "237419"
  },
  {
    "text": "that the service provider and get that",
    "start": "237419",
    "end": "239519"
  },
  {
    "text": "accepted as a valid token so we will",
    "start": "239519",
    "end": "242099"
  },
  {
    "text": "start with the token parts moon ability",
    "start": "242099",
    "end": "243690"
  },
  {
    "text": "that we found in the net this case can",
    "start": "243690",
    "end": "247410"
  },
  {
    "start": "246000",
    "end": "556000"
  },
  {
    "text": "be good illustration for token parsing",
    "start": "247410",
    "end": "249900"
  },
  {
    "text": "vulnerabilities for signature",
    "start": "249900",
    "end": "253440"
  },
  {
    "text": "purification server needs a couple",
    "start": "253440",
    "end": "254970"
  },
  {
    "text": "object that represents algorithms crypto",
    "start": "254970",
    "end": "259380"
  },
  {
    "text": "algorithms and usually crypto config",
    "start": "259380",
    "end": "262680"
  },
  {
    "text": "create for name method is used for the",
    "start": "262680",
    "end": "265349"
  },
  {
    "text": "creation but we notice that it",
    "start": "265349",
    "end": "267720"
  },
  {
    "text": "does not restrict type names so we are",
    "start": "267720",
    "end": "270240"
  },
  {
    "text": "able to call any no argument public",
    "start": "270240",
    "end": "275460"
  },
  {
    "text": "constructor but you can ask it can it be",
    "start": "275460",
    "end": "278280"
  },
  {
    "text": "dangerous if we cannot control any title",
    "start": "278280",
    "end": "280650"
  },
  {
    "text": "but actually we can control some data",
    "start": "280650",
    "end": "282510"
  },
  {
    "text": "for first of all type name itself is",
    "start": "282510",
    "end": "285480"
  },
  {
    "text": "under our control also we can control",
    "start": "285480",
    "end": "289640"
  },
  {
    "text": "some part of current Pacific context and",
    "start": "289640",
    "end": "292620"
  },
  {
    "text": "some constructor can use it other",
    "start": "292620",
    "end": "300630"
  },
  {
    "text": "question how we can reach this matters",
    "start": "300630",
    "end": "302940"
  },
  {
    "text": "for example a system in the data model",
    "start": "302940",
    "end": "306390"
  },
  {
    "text": "tokens GWT library",
    "start": "306390",
    "end": "308510"
  },
  {
    "text": "passes a energy field from GWT header to",
    "start": "308510",
    "end": "313890"
  },
  {
    "text": "it also algorithm attribute of signature",
    "start": "313890",
    "end": "321210"
  },
  {
    "text": "method element from sam'l token goes",
    "start": "321210",
    "end": "324120"
  },
  {
    "text": "without any restriction to it as well so",
    "start": "324120",
    "end": "329610"
  },
  {
    "text": "we took to Microsoft servers SharePoint",
    "start": "329610",
    "end": "332790"
  },
  {
    "text": "and Exchange server and try to explore",
    "start": "332790",
    "end": "334560"
  },
  {
    "text": "exploit this problem there and here is",
    "start": "334560",
    "end": "337410"
  },
  {
    "text": "the list of our results SharePoint",
    "start": "337410",
    "end": "340200"
  },
  {
    "text": "tournament asks a different results for",
    "start": "340200",
    "end": "344180"
  },
  {
    "text": "successful creation object and not using",
    "start": "344180",
    "end": "347310"
  },
  {
    "text": "this we were able to get information",
    "start": "347310",
    "end": "349470"
  },
  {
    "text": "about installed product and their",
    "start": "349470",
    "end": "351240"
  },
  {
    "text": "versions also they could rise on tablet",
    "start": "351240",
    "end": "353370"
  },
  {
    "text": "exception that can relate to on Daniel",
    "start": "353370",
    "end": "355979"
  },
  {
    "text": "of services for exchange server ascend",
    "start": "355979",
    "end": "359010"
  },
  {
    "text": "to duplicated user we were able to",
    "start": "359010",
    "end": "362070"
  },
  {
    "text": "invoke any arbiter public no argument",
    "start": "362070",
    "end": "367260"
  },
  {
    "text": "constructor from any dll or example from",
    "start": "367260",
    "end": "370650"
  },
  {
    "text": "arbitrary folder local folder",
    "start": "370650",
    "end": "374479"
  },
  {
    "text": "unfortunately we do not have time to",
    "start": "374479",
    "end": "377130"
  },
  {
    "text": "cover it today but you can find all the",
    "start": "377130",
    "end": "379800"
  },
  {
    "text": "testing out our white paper let's switch",
    "start": "379800",
    "end": "383010"
  },
  {
    "text": "to our colleague rail and let's look how",
    "start": "383010",
    "end": "385440"
  },
  {
    "text": "the entire signature if occassion can be",
    "start": "385440",
    "end": "388080"
  },
  {
    "text": "bypassed but security assertion markup",
    "start": "388080",
    "end": "393300"
  },
  {
    "text": "language or just sum of tokens has",
    "start": "393300",
    "end": "397110"
  },
  {
    "text": "xml-based format and uses XML signature",
    "start": "397110",
    "end": "399630"
  },
  {
    "text": "for integrity protection",
    "start": "399630",
    "end": "401470"
  },
  {
    "text": "we can see simplified some token on the",
    "start": "401470",
    "end": "403420"
  },
  {
    "text": "screen along with the identification",
    "start": "403420",
    "end": "406120"
  },
  {
    "text": "information itself",
    "start": "406120",
    "end": "407800"
  },
  {
    "text": "it contains signature element it should",
    "start": "407800",
    "end": "410200"
  },
  {
    "text": "protect it from tampering this element",
    "start": "410200",
    "end": "412750"
  },
  {
    "text": "contains three main parts signature",
    "start": "412750",
    "end": "415150"
  },
  {
    "text": "itself and signature value Senate m4 has",
    "start": "415150",
    "end": "419350"
  },
  {
    "text": "information how this signature should be",
    "start": "419350",
    "end": "421270"
  },
  {
    "text": "verified and the most interesting",
    "start": "421270",
    "end": "423760"
  },
  {
    "text": "element for our attack its key info and",
    "start": "423760",
    "end": "426250"
  },
  {
    "text": "it presents key this should be used for",
    "start": "426250",
    "end": "428020"
  },
  {
    "text": "signature verification",
    "start": "428020",
    "end": "430830"
  },
  {
    "text": "let's review pout net implement",
    "start": "431190",
    "end": "433840"
  },
  {
    "text": "signature verification for such tokens",
    "start": "433840",
    "end": "435700"
  },
  {
    "text": "first of all we need to obtain him using",
    "start": "435700",
    "end": "438850"
  },
  {
    "text": "key info element we can extract this key",
    "start": "438850",
    "end": "441130"
  },
  {
    "text": "from it or use key reference and fetch",
    "start": "441130",
    "end": "443620"
  },
  {
    "text": "key from some storage on the second step",
    "start": "443620",
    "end": "446110"
  },
  {
    "text": "we will use this key for signature",
    "start": "446110",
    "end": "448570"
  },
  {
    "text": "verification my please note",
    "start": "448570",
    "end": "450790"
  },
  {
    "text": "positive results after this step only",
    "start": "450790",
    "end": "452950"
  },
  {
    "text": "means that this specific token was",
    "start": "452950",
    "end": "456070"
  },
  {
    "text": "saddened by this specific key and was",
    "start": "456070",
    "end": "458500"
  },
  {
    "text": "not changed in additional to this we",
    "start": "458500",
    "end": "460810"
  },
  {
    "text": "need to be sure that it was done by",
    "start": "460810",
    "end": "462580"
  },
  {
    "text": "proper signing party so we are taking",
    "start": "462580",
    "end": "465310"
  },
  {
    "text": "key in for element again and try to",
    "start": "465310",
    "end": "467950"
  },
  {
    "text": "identify who has signed this token and",
    "start": "467950",
    "end": "470980"
  },
  {
    "text": "of course the last step we will check it",
    "start": "470980",
    "end": "473050"
  },
  {
    "text": "is expected sudden party or not she we",
    "start": "473050",
    "end": "477040"
  },
  {
    "text": "highlighted the key steps for our attack",
    "start": "477040",
    "end": "479980"
  },
  {
    "text": "so we are taking key info lament twice",
    "start": "479980",
    "end": "482950"
  },
  {
    "text": "on different steps",
    "start": "482950",
    "end": "484540"
  },
  {
    "text": "also we need different types of results",
    "start": "484540",
    "end": "486970"
  },
  {
    "text": "on this step security key and security",
    "start": "486970",
    "end": "490360"
  },
  {
    "text": "token so we will call two different",
    "start": "490360",
    "end": "495730"
  },
  {
    "text": "matters resolve security key and is all",
    "start": "495730",
    "end": "497950"
  },
  {
    "text": "security token on this diagram we can",
    "start": "497950",
    "end": "500430"
  },
  {
    "text": "see the general idea of attack we need",
    "start": "500430",
    "end": "503680"
  },
  {
    "text": "to craft keen for element in such way",
    "start": "503680",
    "end": "506320"
  },
  {
    "text": "that we will get different results from",
    "start": "506320",
    "end": "509230"
  },
  {
    "text": "resolve security key and entry so",
    "start": "509230",
    "end": "511510"
  },
  {
    "text": "security token one will be used for",
    "start": "511510",
    "end": "513700"
  },
  {
    "text": "signature verification and another for",
    "start": "513700",
    "end": "515830"
  },
  {
    "text": "certification of shannon party in this",
    "start": "515830",
    "end": "521349"
  },
  {
    "text": "case we will be able to use own key for",
    "start": "521349",
    "end": "524140"
  },
  {
    "text": "signature calculation but server still",
    "start": "524140",
    "end": "526870"
  },
  {
    "text": "in the define us as expected sign and",
    "start": "526870",
    "end": "529240"
  },
  {
    "text": "party and we can bypass the whole",
    "start": "529240",
    "end": "531820"
  },
  {
    "text": "signature verification and can create",
    "start": "531820",
    "end": "533530"
  },
  {
    "text": "some token is any",
    "start": "533530",
    "end": "535140"
  },
  {
    "text": "cremation this problem affects all",
    "start": "535140",
    "end": "539460"
  },
  {
    "text": "places where in.net",
    "start": "539460",
    "end": "541680"
  },
  {
    "text": "where XML signature issues including a",
    "start": "541680",
    "end": "546240"
  },
  {
    "text": "product that works with some tokens",
    "start": "546240",
    "end": "548900"
  },
  {
    "text": "let's review the key frame works of",
    "start": "548900",
    "end": "552450"
  },
  {
    "text": "dotnet that use some token now so we",
    "start": "552450",
    "end": "557430"
  },
  {
    "start": "556000",
    "end": "958000"
  },
  {
    "text": "will start with windows communication",
    "start": "557430",
    "end": "558690"
  },
  {
    "text": "foundation which is or D or w CF which",
    "start": "558690",
    "end": "563100"
  },
  {
    "text": "is a Microsoft framework to build web",
    "start": "563100",
    "end": "565200"
  },
  {
    "text": "services right they follow the",
    "start": "565200",
    "end": "567120"
  },
  {
    "text": "service-oriented architecture but what",
    "start": "567120",
    "end": "568860"
  },
  {
    "text": "is interesting for us is that WCF web",
    "start": "568860",
    "end": "572190"
  },
  {
    "text": "services will accept some old tokens for",
    "start": "572190",
    "end": "574620"
  },
  {
    "text": "authenticating the the client right so",
    "start": "574620",
    "end": "576720"
  },
  {
    "text": "the client can go and present valid",
    "start": "576720",
    "end": "578670"
  },
  {
    "text": "credentials in the form of maybe user",
    "start": "578670",
    "end": "580470"
  },
  {
    "text": "and password but also a valid say and",
    "start": "580470",
    "end": "582780"
  },
  {
    "text": "sam'l token issued by an identity",
    "start": "582780",
    "end": "584850"
  },
  {
    "text": "provider so the class that is",
    "start": "584850",
    "end": "588990"
  },
  {
    "text": "responsible for handling sam'l tokens in",
    "start": "588990",
    "end": "591390"
  },
  {
    "text": "the WC f is this sam'l assertion type",
    "start": "591390",
    "end": "594180"
  },
  {
    "text": "and this is this piece of code you can",
    "start": "594180",
    "end": "596730"
  },
  {
    "text": "see that there are two different method",
    "start": "596730",
    "end": "598500"
  },
  {
    "text": "invocation one is resource activity key",
    "start": "598500",
    "end": "600360"
  },
  {
    "text": "and the other one is resource activity",
    "start": "600360",
    "end": "601920"
  },
  {
    "text": "token but both of them take the same",
    "start": "601920",
    "end": "603900"
  },
  {
    "text": "parameter right the key identifier",
    "start": "603900",
    "end": "606300"
  },
  {
    "text": "parameter contains the whole team for",
    "start": "606300",
    "end": "608940"
  },
  {
    "text": "section that is all the different keys",
    "start": "608940",
    "end": "610920"
  },
  {
    "text": "in the King for section the first one",
    "start": "610920",
    "end": "613230"
  },
  {
    "text": "will return the abbreviation T that is",
    "start": "613230",
    "end": "615210"
  },
  {
    "text": "the key that will be used to verify the",
    "start": "615210",
    "end": "616620"
  },
  {
    "text": "signature and the second one will return",
    "start": "616620",
    "end": "618900"
  },
  {
    "text": "the signing token or the security token",
    "start": "618900",
    "end": "621090"
  },
  {
    "text": "that is used to represent somehow the",
    "start": "621090",
    "end": "625170"
  },
  {
    "text": "the signing party or the identity",
    "start": "625170",
    "end": "627630"
  },
  {
    "text": "provider so we'll focus in the first one",
    "start": "627630",
    "end": "630900"
  },
  {
    "text": "when resolving the key what we will be",
    "start": "630900",
    "end": "633480"
  },
  {
    "text": "doing is what we call depth first who",
    "start": "633480",
    "end": "635370"
  },
  {
    "text": "will be first iterating through all the",
    "start": "635370",
    "end": "637230"
  },
  {
    "text": "different keys in the key flow section",
    "start": "637230",
    "end": "638880"
  },
  {
    "text": "and for each of them we will be invoking",
    "start": "638880",
    "end": "642030"
  },
  {
    "text": "this drive resolve security key that",
    "start": "642030",
    "end": "644070"
  },
  {
    "text": "will basically try a number of resolvers",
    "start": "644070",
    "end": "646470"
  },
  {
    "text": "for those kids right so first we iterate",
    "start": "646470",
    "end": "649200"
  },
  {
    "text": "through all the keys then we iterate",
    "start": "649200",
    "end": "650760"
  },
  {
    "text": "through all the resolvers now for the",
    "start": "650760",
    "end": "652980"
  },
  {
    "text": "token resolution the approaches is",
    "start": "652980",
    "end": "654810"
  },
  {
    "text": "slightly different instead of iterating",
    "start": "654810",
    "end": "657270"
  },
  {
    "text": "first row the keys it will iterate first",
    "start": "657270",
    "end": "660120"
  },
  {
    "text": "through all the resolvers it will try",
    "start": "660120",
    "end": "661800"
  },
  {
    "text": "all the resolvers and then for it to",
    "start": "661800",
    "end": "663330"
  },
  {
    "text": "resolve very good it will try all the",
    "start": "663330",
    "end": "665370"
  },
  {
    "text": "keys so what we can do is actually abuse",
    "start": "665370",
    "end": "668430"
  },
  {
    "text": "that",
    "start": "668430",
    "end": "669000"
  },
  {
    "text": "even if this difference is very small we",
    "start": "669000",
    "end": "672180"
  },
  {
    "text": "will end up visiting all the",
    "start": "672180",
    "end": "673980"
  },
  {
    "text": "combinations of keys and resolvers but",
    "start": "673980",
    "end": "676439"
  },
  {
    "text": "in different order right so we cannot",
    "start": "676439",
    "end": "678629"
  },
  {
    "text": "use that and this is what will we we",
    "start": "678629",
    "end": "680850"
  },
  {
    "text": "will be doing for attacking for example",
    "start": "680850",
    "end": "682500"
  },
  {
    "text": "WCF web services like exchange so first",
    "start": "682500",
    "end": "686339"
  },
  {
    "text": "of all we can modify an existing samo",
    "start": "686339",
    "end": "688199"
  },
  {
    "text": "token or create one from scratch then we",
    "start": "688199",
    "end": "690720"
  },
  {
    "text": "will create a pair of RSA keys with",
    "start": "690720",
    "end": "693420"
  },
  {
    "text": "public/private keys and then we will use",
    "start": "693420",
    "end": "695639"
  },
  {
    "text": "the private one to sign the token then",
    "start": "695639",
    "end": "698730"
  },
  {
    "text": "we will send both the public key for",
    "start": "698730",
    "end": "701430"
  },
  {
    "text": "this RSA paper and also the certificate",
    "start": "701430",
    "end": "704819"
  },
  {
    "text": "or the identifiers from identity",
    "start": "704819",
    "end": "706319"
  },
  {
    "text": "provider so we will have something like",
    "start": "706319",
    "end": "708930"
  },
  {
    "text": "this in the key info section right first",
    "start": "708930",
    "end": "710459"
  },
  {
    "text": "the attacker RSA key and then the",
    "start": "710459",
    "end": "712350"
  },
  {
    "text": "expected key identifier so the resource",
    "start": "712350",
    "end": "715050"
  },
  {
    "text": "security key will iterate through all",
    "start": "715050",
    "end": "716699"
  },
  {
    "text": "the keys first then it will take the",
    "start": "716699",
    "end": "718680"
  },
  {
    "text": "attacker 1 and then it will try all the",
    "start": "718680",
    "end": "720569"
  },
  {
    "text": "resolvers the third one will succeed and",
    "start": "720569",
    "end": "723810"
  },
  {
    "text": "then it will return the public key from",
    "start": "723810",
    "end": "725639"
  },
  {
    "text": "this RSA per since really sign now we're",
    "start": "725639",
    "end": "728639"
  },
  {
    "text": "talking with the private one the",
    "start": "728639",
    "end": "730079"
  },
  {
    "text": "signature verification will be",
    "start": "730079",
    "end": "731670"
  },
  {
    "text": "successful and we will bypass this",
    "start": "731670",
    "end": "733680"
  },
  {
    "text": "authentication now when we solve in the",
    "start": "733680",
    "end": "736079"
  },
  {
    "text": "security token because we are going to",
    "start": "736079",
    "end": "738389"
  },
  {
    "text": "iterate first through the route solvers",
    "start": "738389",
    "end": "739860"
  },
  {
    "text": "we will start with the first one and",
    "start": "739860",
    "end": "741389"
  },
  {
    "text": "then try all the keys for this",
    "start": "741389",
    "end": "743189"
  },
  {
    "text": "particular resolver so the first",
    "start": "743189",
    "end": "745649"
  },
  {
    "text": "resolver doesn't know how to resolve an",
    "start": "745649",
    "end": "748079"
  },
  {
    "text": "RSA key so it will fail and will move to",
    "start": "748079",
    "end": "750720"
  },
  {
    "text": "the next one the next one is the",
    "start": "750720",
    "end": "752399"
  },
  {
    "text": "identity provider certificate so it will",
    "start": "752399",
    "end": "754230"
  },
  {
    "text": "succeed will return that and then the",
    "start": "754230",
    "end": "757079"
  },
  {
    "text": "first one will be used for signature",
    "start": "757079",
    "end": "758550"
  },
  {
    "text": "verification the second one will be used",
    "start": "758550",
    "end": "760110"
  },
  {
    "text": "to authenticate the signing party and",
    "start": "760110",
    "end": "761819"
  },
  {
    "text": "therefore we will be able to bypass them",
    "start": "761819",
    "end": "763559"
  },
  {
    "text": "the process so this is how it looks in",
    "start": "763559",
    "end": "766649"
  },
  {
    "text": "the XML sam'l assertion the first",
    "start": "766649",
    "end": "769980"
  },
  {
    "text": "element in jello is the injected key in",
    "start": "769980",
    "end": "772319"
  },
  {
    "text": "this case we are using an RSA key we can",
    "start": "772319",
    "end": "774029"
  },
  {
    "text": "also use elliptic curve keys or",
    "start": "774029",
    "end": "776519"
  },
  {
    "text": "symmetric keys and the second one in",
    "start": "776519",
    "end": "778769"
  },
  {
    "text": "green is the expected",
    "start": "778769",
    "end": "780449"
  },
  {
    "text": "identity provider certificate that the",
    "start": "780449",
    "end": "783000"
  },
  {
    "text": "server trusts and expects so let's see",
    "start": "783000",
    "end": "786389"
  },
  {
    "text": "that in action we will be actually",
    "start": "786389",
    "end": "788399"
  },
  {
    "text": "taking over any account in exchange by",
    "start": "788399",
    "end": "790860"
  },
  {
    "text": "abusing the exchange web services so",
    "start": "790860",
    "end": "794069"
  },
  {
    "text": "instead of using a real client such as",
    "start": "794069",
    "end": "796589"
  },
  {
    "text": "Outlook or link we decided to actually",
    "start": "796589",
    "end": "799170"
  },
  {
    "text": "create our own client",
    "start": "799170",
    "end": "802120"
  },
  {
    "text": "in order to make them demo more more",
    "start": "802120",
    "end": "805060"
  },
  {
    "text": "visual and more is simple to follow so",
    "start": "805060",
    "end": "807190"
  },
  {
    "text": "we will be intercepting so we have burp",
    "start": "807190",
    "end": "811570"
  },
  {
    "text": "here that is a an interception proxy",
    "start": "811570",
    "end": "813900"
  },
  {
    "text": "what we are going to do is we are going",
    "start": "813900",
    "end": "816130"
  },
  {
    "text": "to intercept the request from the client",
    "start": "816130",
    "end": "819030"
  },
  {
    "text": "so this is our simple client is",
    "start": "819030",
    "end": "821380"
  },
  {
    "text": "basically going to request the mail tips",
    "start": "821380",
    "end": "824080"
  },
  {
    "text": "or the mail item for example could be",
    "start": "824080",
    "end": "826360"
  },
  {
    "text": "another valid request for user 1 right",
    "start": "826360",
    "end": "829300"
  },
  {
    "text": "and it's going to authenticate as user 1",
    "start": "829300",
    "end": "830980"
  },
  {
    "text": "and ask for their mail items so we will",
    "start": "830980",
    "end": "835180"
  },
  {
    "text": "send that and we will intercept the",
    "start": "835180",
    "end": "837160"
  },
  {
    "text": "request now we will be sending the",
    "start": "837160",
    "end": "839680"
  },
  {
    "text": "request to repeater that is an easy way",
    "start": "839680",
    "end": "842320"
  },
  {
    "text": "to modify the request and if we switch",
    "start": "842320",
    "end": "846400"
  },
  {
    "text": "to the XML view we will see the sam'l",
    "start": "846400",
    "end": "851170"
  },
  {
    "text": "assertion and for example the subject is",
    "start": "851170",
    "end": "853840"
  },
  {
    "text": "the user 1 but we will be replacing all",
    "start": "853840",
    "end": "856000"
  },
  {
    "text": "instances of user 1 with administrator",
    "start": "856000",
    "end": "857950"
  },
  {
    "text": "now the attack is to become",
    "start": "857950",
    "end": "859750"
  },
  {
    "text": "administrator's and with administrator",
    "start": "859750",
    "end": "861340"
  },
  {
    "text": "mail tips now because we are not",
    "start": "861340",
    "end": "864580"
  },
  {
    "text": "changing the signature if anyone do",
    "start": "864580",
    "end": "866650"
  },
  {
    "text": "these kind of attacks is going to fail",
    "start": "866650",
    "end": "867970"
  },
  {
    "text": "because the signature is no longer much",
    "start": "867970",
    "end": "869830"
  },
  {
    "text": "in the content of the of the assertion",
    "start": "869830",
    "end": "872110"
  },
  {
    "text": "and the body of a of the request so if",
    "start": "872110",
    "end": "874270"
  },
  {
    "text": "we send that we get an error that is the",
    "start": "874270",
    "end": "876730"
  },
  {
    "text": "expected result we modify we tampered",
    "start": "876730",
    "end": "879190"
  },
  {
    "text": "with the request with assertion and",
    "start": "879190",
    "end": "880600"
  },
  {
    "text": "that's not valid now if we use one",
    "start": "880600",
    "end": "883150"
  },
  {
    "text": "better plugin that we developed but will",
    "start": "883150",
    "end": "886900"
  },
  {
    "text": "allow us to resign the token so as you",
    "start": "886900",
    "end": "889570"
  },
  {
    "text": "can see here in the King 4 section we",
    "start": "889570",
    "end": "892120"
  },
  {
    "text": "only have the original identity provider",
    "start": "892120",
    "end": "895140"
  },
  {
    "text": "certificate but now we click on resign",
    "start": "895140",
    "end": "898120"
  },
  {
    "text": "with RSA key we will be basically",
    "start": "898120",
    "end": "901000"
  },
  {
    "text": "resigning it with our own private RSA",
    "start": "901000",
    "end": "903520"
  },
  {
    "text": "key and then appending the public one to",
    "start": "903520",
    "end": "906340"
  },
  {
    "text": "the key infrastructure so we have the",
    "start": "906340",
    "end": "908260"
  },
  {
    "text": "original one identity provider 1 but",
    "start": "908260",
    "end": "910390"
  },
  {
    "text": "before that we have the RSA key that we",
    "start": "910390",
    "end": "912820"
  },
  {
    "text": "use to resign and this one will be used",
    "start": "912820",
    "end": "914500"
  },
  {
    "text": "for verifying the signature so with that",
    "start": "914500",
    "end": "916780"
  },
  {
    "text": "we send the request we get 200",
    "start": "916780",
    "end": "919600"
  },
  {
    "text": "successful response and we are able to",
    "start": "919600",
    "end": "922780"
  },
  {
    "text": "get the mail tips from the administrator",
    "start": "922780",
    "end": "925500"
  },
  {
    "text": "this is successful no error response and",
    "start": "925500",
    "end": "930750"
  },
  {
    "text": "the attack was successful",
    "start": "930750",
    "end": "934200"
  },
  {
    "text": "okay so bear in mind that this was a we",
    "start": "936910",
    "end": "940370"
  },
  {
    "text": "were attacking an on-premise service",
    "start": "940370",
    "end": "942520"
  },
  {
    "text": "on-premise exchange server but this was",
    "start": "942520",
    "end": "945740"
  },
  {
    "text": "valid for the cloud person right for",
    "start": "945740",
    "end": "948950"
  },
  {
    "text": "office 365 so we were able to actually",
    "start": "948950",
    "end": "951620"
  },
  {
    "text": "access any mail from anybody using",
    "start": "951620",
    "end": "954380"
  },
  {
    "text": "office 365 now we will be reviewing",
    "start": "954380",
    "end": "960050"
  },
  {
    "start": "958000",
    "end": "1176000"
  },
  {
    "text": "Windows identity foundation for those of",
    "start": "960050",
    "end": "963050"
  },
  {
    "text": "you that are not familiar with wif is",
    "start": "963050",
    "end": "965420"
  },
  {
    "text": "basically a framework for for developers",
    "start": "965420",
    "end": "968630"
  },
  {
    "text": "to integrate with identity providers so",
    "start": "968630",
    "end": "971360"
  },
  {
    "text": "it will take care of all the process of",
    "start": "971360",
    "end": "973280"
  },
  {
    "text": "handling the authentication tokens",
    "start": "973280",
    "end": "975590"
  },
  {
    "text": "verifying that organs are extracting the",
    "start": "975590",
    "end": "977780"
  },
  {
    "text": "claims and then providing the claims to",
    "start": "977780",
    "end": "980330"
  },
  {
    "text": "the application to take a claim or",
    "start": "980330",
    "end": "982280"
  },
  {
    "text": "identity based decisions so wif uses a",
    "start": "982280",
    "end": "986990"
  },
  {
    "text": "different set of resolvers but what",
    "start": "986990",
    "end": "990050"
  },
  {
    "text": "interesting in wif is that for key",
    "start": "990050",
    "end": "994130"
  },
  {
    "text": "resolution it will only try to resolve",
    "start": "994130",
    "end": "996350"
  },
  {
    "text": "the first element in the key info",
    "start": "996350",
    "end": "998480"
  },
  {
    "text": "section but for token resolution it will",
    "start": "998480",
    "end": "1001060"
  },
  {
    "text": "try to iterate through all the different",
    "start": "1001060",
    "end": "1003250"
  },
  {
    "text": "elements in the key info section so we",
    "start": "1003250",
    "end": "1005740"
  },
  {
    "text": "can abuse that by providing a key that",
    "start": "1005740",
    "end": "1007870"
  },
  {
    "text": "is supported by the key resolver but not",
    "start": "1007870",
    "end": "1012040"
  },
  {
    "text": "for the token resolver so wif uses this",
    "start": "1012040",
    "end": "1019030"
  },
  {
    "text": "token is your token resolver which is",
    "start": "1019030",
    "end": "1021040"
  },
  {
    "text": "secure because it handles both tokens",
    "start": "1021040",
    "end": "1024790"
  },
  {
    "text": "and keys in a similar way consistent way",
    "start": "1024790",
    "end": "1027459"
  },
  {
    "text": "and then we can't abuse this resolver",
    "start": "1027460",
    "end": "1029560"
  },
  {
    "text": "however if it fails to resolve the key",
    "start": "1029560",
    "end": "1032380"
  },
  {
    "text": "or token it will move to the next",
    "start": "1032380",
    "end": "1034870"
  },
  {
    "text": "resolver which is this 509 certificate",
    "start": "1034870",
    "end": "1037930"
  },
  {
    "text": "store a token resolver now this one is",
    "start": "1037930",
    "end": "1041500"
  },
  {
    "text": "interesting because when resolving",
    "start": "1041500",
    "end": "1042640"
  },
  {
    "text": "security keys",
    "start": "1042640",
    "end": "1043750"
  },
  {
    "text": "it supports encrypted symmetric keys but",
    "start": "1043750",
    "end": "1046750"
  },
  {
    "text": "when resolving security tokens it does",
    "start": "1046750",
    "end": "1048640"
  },
  {
    "text": "not support encrypted symmetric keys so",
    "start": "1048640",
    "end": "1052440"
  },
  {
    "text": "in order for the server or the",
    "start": "1052440",
    "end": "1056290"
  },
  {
    "text": "application to decrypt our encrypted",
    "start": "1056290",
    "end": "1058510"
  },
  {
    "text": "symmetric key it needs to use a private",
    "start": "1058510",
    "end": "1061210"
  },
  {
    "text": "key that is stored in a specific",
    "start": "1061210",
    "end": "1063090"
  },
  {
    "text": "certificate storage in the server",
    "start": "1063090",
    "end": "1066080"
  },
  {
    "text": "for the attacker needs to get access to",
    "start": "1066080",
    "end": "1067970"
  },
  {
    "text": "the public key from that certificate in",
    "start": "1067970",
    "end": "1070159"
  },
  {
    "text": "order to encrypt the symmetric key",
    "start": "1070159",
    "end": "1071960"
  },
  {
    "text": "that's a strong limitation but maybe in",
    "start": "1071960",
    "end": "1074870"
  },
  {
    "text": "some cases for example the certificates",
    "start": "1074870",
    "end": "1076610"
  },
  {
    "text": "are reused for the SSL traffic and then",
    "start": "1076610",
    "end": "1079399"
  },
  {
    "text": "attacker can get the public key from the",
    "start": "1079399",
    "end": "1081470"
  },
  {
    "text": "certificate for the SSL traffic so if",
    "start": "1081470",
    "end": "1084799"
  },
  {
    "text": "the attacker get access to this",
    "start": "1084799",
    "end": "1086240"
  },
  {
    "text": "certificate the attack flow is as",
    "start": "1086240",
    "end": "1088669"
  },
  {
    "text": "follows the attacker can change or",
    "start": "1088669",
    "end": "1091340"
  },
  {
    "text": "modify an existing claims then it will",
    "start": "1091340",
    "end": "1093649"
  },
  {
    "text": "use a symmetric key to resign the token",
    "start": "1093649",
    "end": "1096200"
  },
  {
    "text": "and then it will encrypt that symmetric",
    "start": "1096200",
    "end": "1098809"
  },
  {
    "text": "key using the certificate from the",
    "start": "1098809",
    "end": "1101389"
  },
  {
    "text": "server now it will include both the",
    "start": "1101389",
    "end": "1104450"
  },
  {
    "text": "encrypted key but also the original",
    "start": "1104450",
    "end": "1106370"
  },
  {
    "text": "identity provider and the process is",
    "start": "1106370",
    "end": "1107779"
  },
  {
    "text": "very similar it will lead to this",
    "start": "1107779",
    "end": "1110210"
  },
  {
    "text": "duplication of keys where the first one",
    "start": "1110210",
    "end": "1112700"
  },
  {
    "text": "that is attacker control will be used",
    "start": "1112700",
    "end": "1114409"
  },
  {
    "text": "for signature purification and the",
    "start": "1114409",
    "end": "1116059"
  },
  {
    "text": "second one that is the identity provider",
    "start": "1116059",
    "end": "1118690"
  },
  {
    "text": "trusted certificate will be used for",
    "start": "1118690",
    "end": "1121429"
  },
  {
    "text": "authentication of the signing portal so",
    "start": "1121429",
    "end": "1124700"
  },
  {
    "text": "that was the default configuration for",
    "start": "1124700",
    "end": "1127010"
  },
  {
    "text": "wif now if you are building an",
    "start": "1127010",
    "end": "1129320"
  },
  {
    "text": "application using WF you can customize",
    "start": "1129320",
    "end": "1131539"
  },
  {
    "text": "you can change for example the location",
    "start": "1131539",
    "end": "1133130"
  },
  {
    "text": "of that certificate the storage but you",
    "start": "1133130",
    "end": "1135080"
  },
  {
    "text": "can also for example customize the",
    "start": "1135080",
    "end": "1137330"
  },
  {
    "text": "resolvers and that's exactly what",
    "start": "1137330",
    "end": "1139279"
  },
  {
    "text": "serpent is doing so SharePoint uses wif",
    "start": "1139279",
    "end": "1142130"
  },
  {
    "text": "to handle the event occasion tokens but",
    "start": "1142130",
    "end": "1144860"
  },
  {
    "text": "it uses a custom resolver and the",
    "start": "1144860",
    "end": "1147500"
  },
  {
    "text": "serpent resolver when resolving security",
    "start": "1147500",
    "end": "1149899"
  },
  {
    "text": "keys support things like a symmetric key",
    "start": "1149899",
    "end": "1152450"
  },
  {
    "text": "RSA keys elliptic curve keys but when",
    "start": "1152450",
    "end": "1156139"
  },
  {
    "text": "resolving security token it does not and",
    "start": "1156139",
    "end": "1157940"
  },
  {
    "text": "obviously we cannot use that therefore",
    "start": "1157940",
    "end": "1160820"
  },
  {
    "text": "we can attack cell point which is using",
    "start": "1160820",
    "end": "1164120"
  },
  {
    "text": "waf without the limitations of value AF",
    "start": "1164120",
    "end": "1166730"
  },
  {
    "text": "and with that we were able to attack and",
    "start": "1166730",
    "end": "1168909"
  },
  {
    "text": "get access to any serpent again on",
    "start": "1168909",
    "end": "1172010"
  },
  {
    "text": "premise and also office 365 so",
    "start": "1172010",
    "end": "1177340"
  },
  {
    "start": "1176000",
    "end": "1332000"
  },
  {
    "text": "conclusions and takeaways first of all",
    "start": "1177340",
    "end": "1180019"
  },
  {
    "text": "we are not saying that sam'l or",
    "start": "1180019",
    "end": "1181730"
  },
  {
    "text": "WS Federation are insecure protocols",
    "start": "1181730",
    "end": "1183950"
  },
  {
    "text": "these are in this case a design flaw in",
    "start": "1183950",
    "end": "1187070"
  },
  {
    "text": "the implementation is pacifically in",
    "start": "1187070",
    "end": "1188860"
  },
  {
    "text": "the.net implementation of the XML",
    "start": "1188860",
    "end": "1193039"
  },
  {
    "text": "signature verifiers actually their root",
    "start": "1193039",
    "end": "1197809"
  },
  {
    "text": "problem here was that we",
    "start": "1197809",
    "end": "1199770"
  },
  {
    "text": "these two different methods which were",
    "start": "1199770",
    "end": "1201720"
  },
  {
    "text": "taking user control data and there were",
    "start": "1201720",
    "end": "1204830"
  },
  {
    "text": "inconsistent in the sense that we were",
    "start": "1204830",
    "end": "1206970"
  },
  {
    "text": "able to force them to return different",
    "start": "1206970",
    "end": "1208950"
  },
  {
    "text": "objects so that's very interesting from",
    "start": "1208950",
    "end": "1210840"
  },
  {
    "text": "a security standpoint if you are",
    "start": "1210840",
    "end": "1212730"
  },
  {
    "text": "reviewing code you want to look into",
    "start": "1212730",
    "end": "1214830"
  },
  {
    "text": "this kind of methods but for example if",
    "start": "1214830",
    "end": "1218070"
  },
  {
    "text": "you are writing your own application",
    "start": "1218070",
    "end": "1220020"
  },
  {
    "text": "that integrate with wif you want to make",
    "start": "1220020",
    "end": "1222300"
  },
  {
    "text": "sure that if you are customizing the",
    "start": "1222300",
    "end": "1223650"
  },
  {
    "text": "resolvers they are consistent and they",
    "start": "1223650",
    "end": "1225420"
  },
  {
    "text": "are not returning different elements",
    "start": "1225420",
    "end": "1228230"
  },
  {
    "text": "also we focus our research in dotnet one",
    "start": "1228230",
    "end": "1231480"
  },
  {
    "text": "of the reasons is that dotnet was secure",
    "start": "1231480",
    "end": "1234179"
  },
  {
    "text": "for all the previous attacks and for",
    "start": "1234179",
    "end": "1236880"
  },
  {
    "text": "sam'l tokens but we did not spend a lot",
    "start": "1236880",
    "end": "1240809"
  },
  {
    "text": "of time or actually we didn't really",
    "start": "1240809",
    "end": "1242400"
  },
  {
    "text": "look into other languages and frameworks",
    "start": "1242400",
    "end": "1243990"
  },
  {
    "text": "so we don't expect the same design flow",
    "start": "1243990",
    "end": "1247260"
  },
  {
    "text": "to exist in other languages because",
    "start": "1247260",
    "end": "1249000"
  },
  {
    "text": "somehow dotnet a specific but similar",
    "start": "1249000",
    "end": "1252360"
  },
  {
    "text": "thing similar pros can appear in other",
    "start": "1252360",
    "end": "1254220"
  },
  {
    "text": "languages and frameworks even in dotnet",
    "start": "1254220",
    "end": "1256920"
  },
  {
    "text": "remember this is a pack that is",
    "start": "1256920",
    "end": "1259080"
  },
  {
    "text": "affecting the verification of XML",
    "start": "1259080",
    "end": "1260940"
  },
  {
    "text": "signature not only exception as sam'l",
    "start": "1260940",
    "end": "1262860"
  },
  {
    "text": "assertions so even in dotnet XML",
    "start": "1262860",
    "end": "1265140"
  },
  {
    "text": "signature is used for many other",
    "start": "1265140",
    "end": "1266340"
  },
  {
    "text": "purposes and we found a couple of cases",
    "start": "1266340",
    "end": "1268920"
  },
  {
    "text": "where it was also insecure we reported",
    "start": "1268920",
    "end": "1272010"
  },
  {
    "text": "that to Microsoft and they patched that",
    "start": "1272010",
    "end": "1273390"
  },
  {
    "text": "but there may be others so the main",
    "start": "1273390",
    "end": "1275790"
  },
  {
    "text": "takeaway is patch but as soon as",
    "start": "1275790",
    "end": "1277320"
  },
  {
    "text": "possible",
    "start": "1277320",
    "end": "1278040"
  },
  {
    "text": "and follow Microsoft recommendations for",
    "start": "1278040",
    "end": "1280110"
  },
  {
    "text": "this CV because for example for sell",
    "start": "1280110",
    "end": "1282300"
  },
  {
    "text": "point you need to update the sir point",
    "start": "1282300",
    "end": "1285179"
  },
  {
    "text": "version but also need to update some of",
    "start": "1285179",
    "end": "1286890"
  },
  {
    "text": "the dotnet framework libraries in the",
    "start": "1286890",
    "end": "1288540"
  },
  {
    "text": "system so it's not straightforward",
    "start": "1288540",
    "end": "1291650"
  },
  {
    "text": "also we are releasing the burr plugin",
    "start": "1291650",
    "end": "1294870"
  },
  {
    "text": "that we developed for our internal",
    "start": "1294870",
    "end": "1296700"
  },
  {
    "text": "testing and so basically will allow you",
    "start": "1296700",
    "end": "1298470"
  },
  {
    "text": "to intercept as a sam'l tokens and",
    "start": "1298470",
    "end": "1301230"
  },
  {
    "text": "resign them using either and a symmetric",
    "start": "1301230",
    "end": "1303960"
  },
  {
    "text": "RSA key or the public key from a",
    "start": "1303960",
    "end": "1306510"
  },
  {
    "text": "certificate in the case of wif",
    "start": "1306510",
    "end": "1308960"
  },
  {
    "text": "applications if you can get access to",
    "start": "1308960",
    "end": "1311220"
  },
  {
    "text": "that certificate and with that if you",
    "start": "1311220",
    "end": "1314730"
  },
  {
    "text": "have any questions we still have four",
    "start": "1314730",
    "end": "1316710"
  },
  {
    "text": "minutes otherwise we can go to the",
    "start": "1316710",
    "end": "1318510"
  },
  {
    "text": "rubber room or you can just send out",
    "start": "1318510",
    "end": "1320100"
  },
  {
    "text": "your questions to our Twitter account",
    "start": "1320100",
    "end": "1322170"
  },
  {
    "text": "and we will be happy to do answer them",
    "start": "1322170",
    "end": "1326000"
  },
  {
    "text": "thank you",
    "start": "1326000",
    "end": "1327890"
  },
  {
    "text": "you",
    "start": "1327890",
    "end": "1329950"
  },
  {
    "text": "[Applause]",
    "start": "1331650",
    "end": "1333949"
  }
]