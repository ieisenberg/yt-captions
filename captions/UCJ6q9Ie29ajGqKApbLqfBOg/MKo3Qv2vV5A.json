[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "[Music]",
    "start": "910",
    "end": "8720"
  },
  {
    "text": "hello everyone",
    "start": "8720",
    "end": "10240"
  },
  {
    "text": "today i will introduce our work named",
    "start": "10240",
    "end": "13360"
  },
  {
    "text": "ecomo we host embedded newness kernels",
    "start": "13360",
    "end": "16880"
  },
  {
    "text": "via peripheral transplantation",
    "start": "16880",
    "end": "19760"
  },
  {
    "text": "my name is",
    "start": "19760",
    "end": "21600"
  },
  {
    "text": "from the hong kong polytechnic",
    "start": "21600",
    "end": "23439"
  },
  {
    "text": "university",
    "start": "23439",
    "end": "24880"
  },
  {
    "text": "part of this work is completed when i",
    "start": "24880",
    "end": "27439"
  },
  {
    "text": "was visiting georgian university",
    "start": "27439",
    "end": "31599"
  },
  {
    "text": "before i move forward let me introduce",
    "start": "31599",
    "end": "34160"
  },
  {
    "text": "myself briefly",
    "start": "34160",
    "end": "36079"
  },
  {
    "text": "i am a phd student in the hong kong",
    "start": "36079",
    "end": "38800"
  },
  {
    "text": "polytechnic university and i will",
    "start": "38800",
    "end": "41200"
  },
  {
    "text": "graduate soon",
    "start": "41200",
    "end": "42719"
  },
  {
    "text": "i have broad interest in the area of",
    "start": "42719",
    "end": "45680"
  },
  {
    "text": "network security system security iot",
    "start": "45680",
    "end": "49039"
  },
  {
    "text": "security and blockchain security",
    "start": "49039",
    "end": "51680"
  },
  {
    "text": "you can reach me via the email j-i-a-n-g",
    "start": "51680",
    "end": "55719"
  },
  {
    "text": "m-u-s-u-i at gmail.com",
    "start": "55719",
    "end": "59039"
  },
  {
    "text": "and if you want to know more about me",
    "start": "59039",
    "end": "61840"
  },
  {
    "text": "please visit my personal site",
    "start": "61840",
    "end": "64640"
  },
  {
    "text": "3wd",
    "start": "64640",
    "end": "66360"
  },
  {
    "text": "muhui dot site",
    "start": "66360",
    "end": "70080"
  },
  {
    "start": "70000",
    "end": "70000"
  },
  {
    "text": "ok so now let me talk about the",
    "start": "70080",
    "end": "74000"
  },
  {
    "text": "motivation of this work",
    "start": "74000",
    "end": "76159"
  },
  {
    "text": "iot devices are becoming more and more",
    "start": "76159",
    "end": "78960"
  },
  {
    "text": "popular",
    "start": "78960",
    "end": "80159"
  },
  {
    "text": "many of these devices including printers",
    "start": "80159",
    "end": "84000"
  },
  {
    "text": "cameras",
    "start": "84000",
    "end": "85280"
  },
  {
    "text": "uterus and mobiles we are all running on",
    "start": "85280",
    "end": "88720"
  },
  {
    "text": "the unix-based operating systems",
    "start": "88720",
    "end": "93200"
  },
  {
    "text": "meanwhile hundreds of vulnerabilities",
    "start": "94479",
    "end": "97520"
  },
  {
    "text": "are explored every year for unix kernel",
    "start": "97520",
    "end": "101040"
  },
  {
    "text": "which are shown in the figure",
    "start": "101040",
    "end": "104560"
  },
  {
    "text": "with these vulnerabilities attackers can",
    "start": "105840",
    "end": "109200"
  },
  {
    "text": "compromise the devices",
    "start": "109200",
    "end": "111600"
  },
  {
    "text": "control them and launch different kinds",
    "start": "111600",
    "end": "114159"
  },
  {
    "text": "of attacks",
    "start": "114159",
    "end": "115520"
  },
  {
    "text": "resulting in a huge noise",
    "start": "115520",
    "end": "118320"
  },
  {
    "text": "thus",
    "start": "118320",
    "end": "119280"
  },
  {
    "text": "the security of embedded devices",
    "start": "119280",
    "end": "122560"
  },
  {
    "text": "especially the kernel deserves our study",
    "start": "122560",
    "end": "126960"
  },
  {
    "text": "you need there are two different",
    "start": "126960",
    "end": "128879"
  },
  {
    "text": "analysis mechanisms",
    "start": "128879",
    "end": "131039"
  },
  {
    "text": "one is static analysis",
    "start": "131039",
    "end": "134080"
  },
  {
    "text": "however static analysis may introduce",
    "start": "134080",
    "end": "137120"
  },
  {
    "text": "many false positives",
    "start": "137120",
    "end": "140160"
  },
  {
    "text": "the other one is dynamic analysis",
    "start": "140160",
    "end": "143360"
  },
  {
    "text": "dynamic analysis is dependent on the",
    "start": "143360",
    "end": "146480"
  },
  {
    "text": "capability of rehosting",
    "start": "146480",
    "end": "149200"
  },
  {
    "text": "especially for analyzing the embedded",
    "start": "149200",
    "end": "153040"
  },
  {
    "text": "devices",
    "start": "153040",
    "end": "156040"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "thus we hosting is very important",
    "start": "156319",
    "end": "160239"
  },
  {
    "text": "you may ask what rehosting is",
    "start": "160239",
    "end": "163120"
  },
  {
    "text": "rehosting is also known as emulation",
    "start": "163120",
    "end": "166720"
  },
  {
    "text": "it is used to run a target system inside",
    "start": "166720",
    "end": "170160"
  },
  {
    "text": "an eliminated environment",
    "start": "170160",
    "end": "173519"
  },
  {
    "text": "for example the state-of-the-art eminent",
    "start": "173519",
    "end": "176480"
  },
  {
    "text": "cameo",
    "start": "176480",
    "end": "177680"
  },
  {
    "text": "in this work we define rehosting the",
    "start": "177680",
    "end": "180560"
  },
  {
    "text": "ninjas kernel successfully as it can",
    "start": "180560",
    "end": "183760"
  },
  {
    "text": "launch the shell",
    "start": "183760",
    "end": "185760"
  },
  {
    "text": "with the rehosting capability",
    "start": "185760",
    "end": "188640"
  },
  {
    "text": "we can introspect the runtime state",
    "start": "188640",
    "end": "192159"
  },
  {
    "text": "and it can support the dynamic analysis",
    "start": "192159",
    "end": "195599"
  },
  {
    "text": "which complements the static analysis",
    "start": "195599",
    "end": "200159"
  },
  {
    "text": "furthermore different applications like",
    "start": "200159",
    "end": "202800"
  },
  {
    "text": "crash analysis",
    "start": "202800",
    "end": "204480"
  },
  {
    "text": "used kit analysis and kernel fuzzing can",
    "start": "204480",
    "end": "207840"
  },
  {
    "text": "be built based on the capability of",
    "start": "207840",
    "end": "210239"
  },
  {
    "text": "re-hosting",
    "start": "210239",
    "end": "213239"
  },
  {
    "start": "212000",
    "end": "212000"
  },
  {
    "text": "now let's introduce the the background",
    "start": "213599",
    "end": "217440"
  },
  {
    "text": "knowledge",
    "start": "217440",
    "end": "218560"
  },
  {
    "text": "units kernel consists of three different",
    "start": "218560",
    "end": "221599"
  },
  {
    "text": "kinds of code",
    "start": "221599",
    "end": "223280"
  },
  {
    "text": "the first is architecture independent",
    "start": "223280",
    "end": "225840"
  },
  {
    "text": "code",
    "start": "225840",
    "end": "226720"
  },
  {
    "text": "which contains the core functionality",
    "start": "226720",
    "end": "229280"
  },
  {
    "text": "used by all cpu architectures",
    "start": "229280",
    "end": "233519"
  },
  {
    "text": "the second is architecture dependent",
    "start": "233519",
    "end": "235920"
  },
  {
    "text": "code which serves for a specific",
    "start": "235920",
    "end": "238560"
  },
  {
    "text": "architecture",
    "start": "238560",
    "end": "240239"
  },
  {
    "text": "the third is board specific code which",
    "start": "240239",
    "end": "243360"
  },
  {
    "text": "is used by specific board",
    "start": "243360",
    "end": "245840"
  },
  {
    "text": "or machine",
    "start": "245840",
    "end": "247360"
  },
  {
    "text": "as there are many different kinds of",
    "start": "247360",
    "end": "249920"
  },
  {
    "text": "machines nunes kernel introduced the",
    "start": "249920",
    "end": "252959"
  },
  {
    "text": "structural machine description",
    "start": "252959",
    "end": "255280"
  },
  {
    "text": "for the arm architecture",
    "start": "255280",
    "end": "257519"
  },
  {
    "text": "to describe different machines",
    "start": "257519",
    "end": "260880"
  },
  {
    "text": "the figure shows an example",
    "start": "260880",
    "end": "263919"
  },
  {
    "text": "of one machine named arm versatile ap in",
    "start": "263919",
    "end": "267120"
  },
  {
    "text": "the unix kernel",
    "start": "267120",
    "end": "269040"
  },
  {
    "text": "during the booting process the ninja's",
    "start": "269040",
    "end": "271440"
  },
  {
    "text": "kernel will invoke the function",
    "start": "271440",
    "end": "273919"
  },
  {
    "text": "in its iq to initialize the ic",
    "start": "273919",
    "end": "277759"
  },
  {
    "text": "to emulate different kinds of machines",
    "start": "277759",
    "end": "280720"
  },
  {
    "text": "cameo also provides the different",
    "start": "280720",
    "end": "283520"
  },
  {
    "text": "machine models",
    "start": "283520",
    "end": "284960"
  },
  {
    "text": "which consists of different peripheral",
    "start": "284960",
    "end": "287600"
  },
  {
    "text": "models",
    "start": "287600",
    "end": "289440"
  },
  {
    "text": "cameo registers the read and write",
    "start": "289440",
    "end": "292160"
  },
  {
    "text": "callback functions for the mm-io address",
    "start": "292160",
    "end": "295280"
  },
  {
    "text": "space of the peripheral and maintains an",
    "start": "295280",
    "end": "298560"
  },
  {
    "text": "internal state machine",
    "start": "298560",
    "end": "300479"
  },
  {
    "text": "to implement the peripheral",
    "start": "300479",
    "end": "303120"
  },
  {
    "text": "functionality",
    "start": "303120",
    "end": "306000"
  },
  {
    "start": "305000",
    "end": "305000"
  },
  {
    "text": "we're hosting the embedded newness",
    "start": "308000",
    "end": "310560"
  },
  {
    "text": "corners is not easy",
    "start": "310560",
    "end": "312639"
  },
  {
    "text": "and we have three main challenges",
    "start": "312639",
    "end": "315680"
  },
  {
    "text": "the first is peripheral dependency",
    "start": "315680",
    "end": "318960"
  },
  {
    "text": "if we can not emulate the peripherals",
    "start": "318960",
    "end": "321680"
  },
  {
    "text": "accurately",
    "start": "321680",
    "end": "322960"
  },
  {
    "text": "the nunes kernel may help",
    "start": "322960",
    "end": "324960"
  },
  {
    "text": "a crash",
    "start": "324960",
    "end": "326160"
  },
  {
    "text": "during the",
    "start": "326160",
    "end": "327600"
  },
  {
    "text": "rehosting process",
    "start": "327600",
    "end": "329680"
  },
  {
    "text": "second is the peripheral diversity",
    "start": "329680",
    "end": "333759"
  },
  {
    "text": "peripherals very widely it is not",
    "start": "333759",
    "end": "336560"
  },
  {
    "text": "practical for cameo to support all kinds",
    "start": "336560",
    "end": "339840"
  },
  {
    "text": "of peripherals",
    "start": "339840",
    "end": "341759"
  },
  {
    "text": "meanwhile",
    "start": "341759",
    "end": "342960"
  },
  {
    "text": "manually developing peripheral",
    "start": "342960",
    "end": "345039"
  },
  {
    "text": "elimination routine is tedious and",
    "start": "345039",
    "end": "347360"
  },
  {
    "text": "error-proof",
    "start": "347360",
    "end": "349120"
  },
  {
    "text": "third",
    "start": "349120",
    "end": "350160"
  },
  {
    "text": "vendors may not strictly follow the gpr",
    "start": "350160",
    "end": "353360"
  },
  {
    "text": "license",
    "start": "353360",
    "end": "354400"
  },
  {
    "text": "which results in the lack of public",
    "start": "354400",
    "end": "356960"
  },
  {
    "text": "information like the specification the",
    "start": "356960",
    "end": "359680"
  },
  {
    "text": "data sheet the source code",
    "start": "359680",
    "end": "362080"
  },
  {
    "text": "which obstructs the diagnosis of",
    "start": "362080",
    "end": "364639"
  },
  {
    "text": "failures on adding ammunition support",
    "start": "364639",
    "end": "369199"
  },
  {
    "text": "to address",
    "start": "369840",
    "end": "371600"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "to to address the above-mentioned",
    "start": "371600",
    "end": "374000"
  },
  {
    "text": "industry challenges we have three key",
    "start": "374000",
    "end": "376800"
  },
  {
    "text": "insights",
    "start": "376800",
    "end": "378960"
  },
  {
    "text": "first we only need to emulate the early",
    "start": "378960",
    "end": "383120"
  },
  {
    "text": "boot peripherals",
    "start": "383120",
    "end": "384880"
  },
  {
    "text": "and they are the interrupt controller",
    "start": "384880",
    "end": "388000"
  },
  {
    "text": "timer and uat",
    "start": "388000",
    "end": "390240"
  },
  {
    "text": "for the other peripherals",
    "start": "390240",
    "end": "392560"
  },
  {
    "text": "we can support them by installing the",
    "start": "392560",
    "end": "395120"
  },
  {
    "text": "driver with kernel modules",
    "start": "395120",
    "end": "397759"
  },
  {
    "text": "and integrated kernel modules into the",
    "start": "397759",
    "end": "400800"
  },
  {
    "text": "ram file system",
    "start": "400800",
    "end": "403840"
  },
  {
    "text": "after booting up",
    "start": "403840",
    "end": "405440"
  },
  {
    "text": "second",
    "start": "405440",
    "end": "407120"
  },
  {
    "text": "nunes kernel provides interfaces to",
    "start": "407120",
    "end": "409840"
  },
  {
    "text": "implement the drivers of these",
    "start": "409840",
    "end": "411599"
  },
  {
    "text": "peripherals",
    "start": "411599",
    "end": "413039"
  },
  {
    "text": "which brings the chance for us to",
    "start": "413039",
    "end": "415520"
  },
  {
    "text": "replace these diverse peripherals with",
    "start": "415520",
    "end": "418960"
  },
  {
    "text": "designated ones",
    "start": "418960",
    "end": "421680"
  },
  {
    "text": "third embedded newness kernel are",
    "start": "421680",
    "end": "424880"
  },
  {
    "text": "usually modified based on the mainstream",
    "start": "424880",
    "end": "428160"
  },
  {
    "text": "which is open source",
    "start": "428160",
    "end": "431280"
  },
  {
    "start": "432000",
    "end": "432000"
  },
  {
    "text": "with the insights we propose peripheral",
    "start": "433120",
    "end": "436720"
  },
  {
    "text": "transplantation technique",
    "start": "436720",
    "end": "439120"
  },
  {
    "text": "which is device independent and works",
    "start": "439120",
    "end": "441919"
  },
  {
    "text": "towards the newness kernel without the",
    "start": "441919",
    "end": "444960"
  },
  {
    "text": "need of source code",
    "start": "444960",
    "end": "448000"
  },
  {
    "text": "the main idea here is instead of",
    "start": "448000",
    "end": "451440"
  },
  {
    "text": "manually adding ammunition support",
    "start": "451440",
    "end": "454560"
  },
  {
    "text": "we can replace the peripherals that are",
    "start": "454560",
    "end": "457599"
  },
  {
    "text": "used in targeted unis kernels with",
    "start": "457599",
    "end": "460720"
  },
  {
    "text": "existing peripherals in cameo",
    "start": "460720",
    "end": "465720"
  },
  {
    "text": "peripheral transplantation consists of",
    "start": "467039",
    "end": "470319"
  },
  {
    "text": "transplanting two components",
    "start": "470319",
    "end": "472960"
  },
  {
    "text": "one is to transplant emulated models of",
    "start": "472960",
    "end": "476240"
  },
  {
    "text": "peripheral into cameo",
    "start": "476240",
    "end": "478960"
  },
  {
    "text": "this is straight forward as we can",
    "start": "478960",
    "end": "482000"
  },
  {
    "text": "implement it with the provided apis by",
    "start": "482000",
    "end": "485440"
  },
  {
    "text": "cameo",
    "start": "485440",
    "end": "487199"
  },
  {
    "text": "the other one is to transplant the",
    "start": "487199",
    "end": "490000"
  },
  {
    "text": "device drivers into the unix kernel",
    "start": "490000",
    "end": "494000"
  },
  {
    "text": "this is not trivial",
    "start": "494000",
    "end": "495919"
  },
  {
    "text": "as we need to convey the three goals",
    "start": "495919",
    "end": "499360"
  },
  {
    "text": "first",
    "start": "499360",
    "end": "500479"
  },
  {
    "text": "we need to substitute the original",
    "start": "500479",
    "end": "502879"
  },
  {
    "text": "device driver",
    "start": "502879",
    "end": "504319"
  },
  {
    "text": "with the transplanted wax",
    "start": "504319",
    "end": "507039"
  },
  {
    "text": "which requires ecommerce for the",
    "start": "507039",
    "end": "509199"
  },
  {
    "text": "pointers",
    "start": "509199",
    "end": "511360"
  },
  {
    "text": "second",
    "start": "511360",
    "end": "512320"
  },
  {
    "text": "the transplanted driver should not",
    "start": "512320",
    "end": "514640"
  },
  {
    "text": "affect the memory view of the original",
    "start": "514640",
    "end": "517518"
  },
  {
    "text": "kernel",
    "start": "517519",
    "end": "518800"
  },
  {
    "text": "in this case we proposed the concept of",
    "start": "518800",
    "end": "522159"
  },
  {
    "text": "opec memory",
    "start": "522159",
    "end": "523680"
  },
  {
    "text": "which will be discussed in digital",
    "start": "523680",
    "end": "525920"
  },
  {
    "text": "network",
    "start": "525920",
    "end": "527279"
  },
  {
    "text": "third the transplanted driver needs to",
    "start": "527279",
    "end": "530000"
  },
  {
    "text": "invoke apis in the newness kernel to",
    "start": "530000",
    "end": "533200"
  },
  {
    "text": "configure different peripherals which",
    "start": "533200",
    "end": "536160"
  },
  {
    "text": "requires the xml backward pointers",
    "start": "536160",
    "end": "540720"
  },
  {
    "start": "542000",
    "end": "542000"
  },
  {
    "text": "let's look at a concrete example",
    "start": "542880",
    "end": "546240"
  },
  {
    "text": "the function setup arc will set up",
    "start": "546240",
    "end": "549399"
  },
  {
    "text": "architecture-related configurations",
    "start": "549399",
    "end": "552000"
  },
  {
    "text": "and initialize the machine description",
    "start": "552000",
    "end": "555360"
  },
  {
    "text": "structure with step one",
    "start": "555360",
    "end": "558080"
  },
  {
    "text": "our system locates the function setup",
    "start": "558080",
    "end": "561360"
  },
  {
    "text": "arc and injects the install xml for the",
    "start": "561360",
    "end": "565360"
  },
  {
    "text": "pointers",
    "start": "565360",
    "end": "566560"
  },
  {
    "text": "to change the pointers to our own ones",
    "start": "566560",
    "end": "570560"
  },
  {
    "text": "when the function time we need is",
    "start": "570560",
    "end": "572640"
  },
  {
    "text": "invoked in step two",
    "start": "572640",
    "end": "574959"
  },
  {
    "text": "it will initialize the injector timer",
    "start": "574959",
    "end": "578800"
  },
  {
    "text": "injected timer driver via step 4.",
    "start": "578800",
    "end": "582640"
  },
  {
    "text": "accordingly the driver",
    "start": "582640",
    "end": "585120"
  },
  {
    "text": "will invoke apis with ecmo backward",
    "start": "585120",
    "end": "588399"
  },
  {
    "text": "pointers to interact with the",
    "start": "588399",
    "end": "590240"
  },
  {
    "text": "peripherals via step 5.",
    "start": "590240",
    "end": "594160"
  },
  {
    "start": "594000",
    "end": "594000"
  },
  {
    "text": "now let me introduce the workflow of our",
    "start": "595680",
    "end": "599600"
  },
  {
    "text": "system",
    "start": "599600",
    "end": "600640"
  },
  {
    "text": "given one firmware image",
    "start": "600640",
    "end": "602959"
  },
  {
    "text": "first we need to think decompressing the",
    "start": "602959",
    "end": "605680"
  },
  {
    "text": "newness kernel",
    "start": "605680",
    "end": "607200"
  },
  {
    "text": "then we need to identify the xml",
    "start": "607200",
    "end": "609760"
  },
  {
    "text": "pointers",
    "start": "609760",
    "end": "611680"
  },
  {
    "text": "after that we need to generate xml",
    "start": "611680",
    "end": "614240"
  },
  {
    "text": "pointer ecmo drivers",
    "start": "614240",
    "end": "616480"
  },
  {
    "text": "finally",
    "start": "616480",
    "end": "617519"
  },
  {
    "text": "the newness kernel can be rehosted",
    "start": "617519",
    "end": "621920"
  },
  {
    "start": "621000",
    "end": "621000"
  },
  {
    "text": "decompress newness kernel",
    "start": "623120",
    "end": "625760"
  },
  {
    "text": "so to decompress the newness kernel we",
    "start": "625760",
    "end": "628959"
  },
  {
    "text": "feed the firmware image to bing walk to",
    "start": "628959",
    "end": "632560"
  },
  {
    "text": "extract the kernel image first",
    "start": "632560",
    "end": "635440"
  },
  {
    "text": "after that we feed the extracted kernel",
    "start": "635440",
    "end": "638720"
  },
  {
    "text": "image to vanina caming",
    "start": "638720",
    "end": "640959"
  },
  {
    "text": "note that the kernel can not be rehosted",
    "start": "640959",
    "end": "644480"
  },
  {
    "text": "now",
    "start": "644480",
    "end": "645279"
  },
  {
    "text": "however it can be decompressed",
    "start": "645279",
    "end": "648079"
  },
  {
    "text": "successfully",
    "start": "648079",
    "end": "649760"
  },
  {
    "text": "by comparing the exclusion trace of",
    "start": "649760",
    "end": "652240"
  },
  {
    "text": "cameo and the assembly code shown in the",
    "start": "652240",
    "end": "655200"
  },
  {
    "text": "figure we can identify the function",
    "start": "655200",
    "end": "657920"
  },
  {
    "text": "decompress kernel after the function",
    "start": "657920",
    "end": "660959"
  },
  {
    "text": "returns we can dump the decompress the",
    "start": "660959",
    "end": "663600"
  },
  {
    "text": "newness kernel",
    "start": "663600",
    "end": "666480"
  },
  {
    "text": "to identify the echo pointers we first",
    "start": "667920",
    "end": "671360"
  },
  {
    "text": "needed to disassemble the decompress the",
    "start": "671360",
    "end": "674480"
  },
  {
    "text": "english kernel",
    "start": "674480",
    "end": "676000"
  },
  {
    "text": "that is the dissembling process will",
    "start": "676000",
    "end": "678880"
  },
  {
    "text": "generate instructions the control flow",
    "start": "678880",
    "end": "681440"
  },
  {
    "text": "graph",
    "start": "681440",
    "end": "682399"
  },
  {
    "text": "the call graph and build the mapping",
    "start": "682399",
    "end": "685200"
  },
  {
    "text": "relationship between each function under",
    "start": "685200",
    "end": "688160"
  },
  {
    "text": "advanced information like a number of",
    "start": "688160",
    "end": "690800"
  },
  {
    "text": "basic blocks the string references",
    "start": "690800",
    "end": "693920"
  },
  {
    "text": "the",
    "start": "693920",
    "end": "695200"
  },
  {
    "text": "the number of colonies and so on",
    "start": "695200",
    "end": "698880"
  },
  {
    "text": "as the ecmo pointers are unique",
    "start": "698880",
    "end": "701360"
  },
  {
    "text": "architecture independent code and",
    "start": "701360",
    "end": "703440"
  },
  {
    "text": "architecture depend",
    "start": "703440",
    "end": "705040"
  },
  {
    "text": "than the code which is open source",
    "start": "705040",
    "end": "708079"
  },
  {
    "text": "in this case we will propose",
    "start": "708079",
    "end": "710800"
  },
  {
    "text": "three strategies",
    "start": "710800",
    "end": "712800"
  },
  {
    "text": "to filter out the ecmo pointers with the",
    "start": "712800",
    "end": "715600"
  },
  {
    "text": "help of",
    "start": "715600",
    "end": "716959"
  },
  {
    "text": "the open sourced munis kernel",
    "start": "716959",
    "end": "720959"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "first we utilize the",
    "start": "721519",
    "end": "724399"
  },
  {
    "text": "lexical information",
    "start": "724399",
    "end": "726399"
  },
  {
    "text": "for example",
    "start": "726399",
    "end": "727680"
  },
  {
    "text": "the specific constant stream can be",
    "start": "727680",
    "end": "730399"
  },
  {
    "text": "utilized to filter out the echo pointers",
    "start": "730399",
    "end": "735760"
  },
  {
    "text": "as shown in the in the figure the",
    "start": "735760",
    "end": "738639"
  },
  {
    "text": "consonant string is referenced by a data",
    "start": "738639",
    "end": "741440"
  },
  {
    "text": "pointer",
    "start": "741440",
    "end": "742480"
  },
  {
    "text": "and can be easily indicated",
    "start": "742480",
    "end": "746240"
  },
  {
    "text": "meanwhile",
    "start": "747920",
    "end": "748959"
  },
  {
    "text": "there are many other warning information",
    "start": "748959",
    "end": "751839"
  },
  {
    "text": "in the nunes kernel",
    "start": "751839",
    "end": "754240"
  },
  {
    "text": "the nine number and the file name",
    "start": "754240",
    "end": "757600"
  },
  {
    "text": "are the parameters of the warning",
    "start": "757600",
    "end": "759760"
  },
  {
    "text": "information",
    "start": "759760",
    "end": "761519"
  },
  {
    "text": "with these two",
    "start": "761519",
    "end": "763200"
  },
  {
    "text": "with these two attributes we can figure",
    "start": "763200",
    "end": "766480"
  },
  {
    "text": "out the we can fit out more economic",
    "start": "766480",
    "end": "769120"
  },
  {
    "text": "pointers",
    "start": "769120",
    "end": "770720"
  },
  {
    "text": "as the nine number is the operand of",
    "start": "770720",
    "end": "774399"
  },
  {
    "text": "assembly code and the file name is a",
    "start": "774399",
    "end": "777200"
  },
  {
    "text": "constant string",
    "start": "777200",
    "end": "780240"
  },
  {
    "start": "780000",
    "end": "780000"
  },
  {
    "text": "however",
    "start": "780720",
    "end": "781920"
  },
  {
    "text": "not all the ecmo pointers can be located",
    "start": "781920",
    "end": "785120"
  },
  {
    "text": "with lexical information",
    "start": "785120",
    "end": "787360"
  },
  {
    "text": "for those who cannot be identified we",
    "start": "787360",
    "end": "790399"
  },
  {
    "text": "can use the function relationship to",
    "start": "790399",
    "end": "793200"
  },
  {
    "text": "identify them indirectly",
    "start": "793200",
    "end": "796160"
  },
  {
    "text": "for example",
    "start": "796160",
    "end": "797519"
  },
  {
    "text": "if we identify the function identified",
    "start": "797519",
    "end": "800720"
  },
  {
    "text": "full",
    "start": "800720",
    "end": "801600"
  },
  {
    "text": "we can identify the function required",
    "start": "801600",
    "end": "804160"
  },
  {
    "text": "for indirectly",
    "start": "804160",
    "end": "806160"
  },
  {
    "text": "as the identified fool is the corner as",
    "start": "806160",
    "end": "809760"
  },
  {
    "text": "the required food is the corner of",
    "start": "809760",
    "end": "811920"
  },
  {
    "text": "identified food",
    "start": "811920",
    "end": "815639"
  },
  {
    "text": "similarly required food can be the",
    "start": "816399",
    "end": "819199"
  },
  {
    "text": "colony of identified food",
    "start": "819199",
    "end": "822000"
  },
  {
    "text": "and we can identify the required food",
    "start": "822000",
    "end": "824800"
  },
  {
    "text": "indirectly",
    "start": "824800",
    "end": "827800"
  },
  {
    "text": "apart from the colony and corner",
    "start": "830480",
    "end": "832800"
  },
  {
    "text": "relationship",
    "start": "832800",
    "end": "835440"
  },
  {
    "text": "both required full and the identified",
    "start": "835440",
    "end": "838399"
  },
  {
    "text": "food can be called by the same function",
    "start": "838399",
    "end": "841199"
  },
  {
    "text": "named full and these two functions are",
    "start": "841199",
    "end": "844959"
  },
  {
    "text": "have the sibling relationship",
    "start": "844959",
    "end": "848800"
  },
  {
    "start": "850000",
    "end": "850000"
  },
  {
    "text": "however",
    "start": "851360",
    "end": "852880"
  },
  {
    "text": "one function may have more than one",
    "start": "852880",
    "end": "855040"
  },
  {
    "text": "corner one corner or sibling",
    "start": "855040",
    "end": "858880"
  },
  {
    "text": "in this case we need to further consider",
    "start": "858880",
    "end": "861440"
  },
  {
    "text": "the function structure itself",
    "start": "861440",
    "end": "864560"
  },
  {
    "text": "for example",
    "start": "864560",
    "end": "865839"
  },
  {
    "text": "different functions contain different",
    "start": "865839",
    "end": "868320"
  },
  {
    "text": "logic operation and return value",
    "start": "868320",
    "end": "871040"
  },
  {
    "text": "the constants of logic operation or",
    "start": "871040",
    "end": "873519"
  },
  {
    "text": "return value in source code",
    "start": "873519",
    "end": "876079"
  },
  {
    "text": "map to the operands in the assembly code",
    "start": "876079",
    "end": "880720"
  },
  {
    "text": "meanwhile we can also consider the",
    "start": "882639",
    "end": "885199"
  },
  {
    "text": "calling number and the basic block",
    "start": "885199",
    "end": "887440"
  },
  {
    "text": "number",
    "start": "887440",
    "end": "888560"
  },
  {
    "text": "these attributes can help filter out the",
    "start": "888560",
    "end": "890880"
  },
  {
    "text": "xml pointers",
    "start": "890880",
    "end": "892800"
  },
  {
    "text": "for example the two colony functions",
    "start": "892800",
    "end": "895120"
  },
  {
    "text": "conifer1 and conifer 2 mapped to the two",
    "start": "895120",
    "end": "898639"
  },
  {
    "text": "pl instructions that is the object of",
    "start": "898639",
    "end": "901360"
  },
  {
    "text": "full offset full offset plus zero x",
    "start": "901360",
    "end": "905600"
  },
  {
    "text": "one eight and the full offset plus zero",
    "start": "905600",
    "end": "908079"
  },
  {
    "text": "x one thing",
    "start": "908079",
    "end": "909839"
  },
  {
    "text": "also there goes the three basic blocks",
    "start": "909839",
    "end": "912560"
  },
  {
    "text": "in source code",
    "start": "912560",
    "end": "913920"
  },
  {
    "text": "mapped to three basic blocks in assembly",
    "start": "913920",
    "end": "916320"
  },
  {
    "text": "code",
    "start": "916320",
    "end": "918639"
  },
  {
    "start": "918000",
    "end": "918000"
  },
  {
    "text": "after identifying the xml pointers we",
    "start": "920720",
    "end": "923760"
  },
  {
    "text": "need to generate the ecmo drivers",
    "start": "923760",
    "end": "927360"
  },
  {
    "text": "we can we compile the we compile the",
    "start": "927360",
    "end": "930560"
  },
  {
    "text": "source code into binary object to get",
    "start": "930560",
    "end": "933759"
  },
  {
    "text": "the ecmo driver",
    "start": "933759",
    "end": "935920"
  },
  {
    "text": "note the source code is manually",
    "start": "935920",
    "end": "939120"
  },
  {
    "text": "written and we just need to merge the",
    "start": "939120",
    "end": "942720"
  },
  {
    "text": "the different kinds of",
    "start": "942720",
    "end": "945120"
  },
  {
    "text": "trans driver transparent drivers code of",
    "start": "945120",
    "end": "948480"
  },
  {
    "text": "the existing peripherals and this is one",
    "start": "948480",
    "end": "951759"
  },
  {
    "text": "time efforts",
    "start": "951759",
    "end": "953279"
  },
  {
    "text": "then we need to fix up the driver",
    "start": "953279",
    "end": "956480"
  },
  {
    "text": "it requires us to set up the base",
    "start": "956480",
    "end": "959040"
  },
  {
    "text": "address because the ecmo driver will be",
    "start": "959040",
    "end": "962880"
  },
  {
    "text": "will be loaded into",
    "start": "962880",
    "end": "965920"
  },
  {
    "text": "different offset",
    "start": "965920",
    "end": "969800"
  },
  {
    "text": "also we need to change the direct calls",
    "start": "970959",
    "end": "973839"
  },
  {
    "text": "to indirect cost in this case we can",
    "start": "973839",
    "end": "976720"
  },
  {
    "text": "invoke the arbitrary functions in linux",
    "start": "976720",
    "end": "979279"
  },
  {
    "text": "kernel",
    "start": "979279",
    "end": "981199"
  },
  {
    "text": "and you can you can see the detail",
    "start": "981199",
    "end": "983040"
  },
  {
    "text": "process",
    "start": "983040",
    "end": "984880"
  },
  {
    "text": "from the assembly code in this nice",
    "start": "984880",
    "end": "989040"
  },
  {
    "text": "finally we need to load the xml driver",
    "start": "992000",
    "end": "995279"
  },
  {
    "text": "into generated ecmo driver into the",
    "start": "995279",
    "end": "998399"
  },
  {
    "text": "opec memory kernel does not explicitly",
    "start": "998399",
    "end": "1002000"
  },
  {
    "text": "know the existence of ecmo driver",
    "start": "1002000",
    "end": "1005199"
  },
  {
    "text": "and it is also very hard to change the",
    "start": "1005199",
    "end": "1008000"
  },
  {
    "text": "annotated physical memory pages due to",
    "start": "1008000",
    "end": "1010959"
  },
  {
    "text": "the very complex memory management",
    "start": "1010959",
    "end": "1014000"
  },
  {
    "text": "strategy",
    "start": "1014000",
    "end": "1015759"
  },
  {
    "text": "in this case",
    "start": "1015759",
    "end": "1017120"
  },
  {
    "text": "the ecmo driver can be overwritten",
    "start": "1017120",
    "end": "1019759"
  },
  {
    "text": "and the functionality cannot be",
    "start": "1019759",
    "end": "1022240"
  },
  {
    "text": "guaranteed",
    "start": "1022240",
    "end": "1024798"
  },
  {
    "text": "to implement the opaque memory we hijack",
    "start": "1024799",
    "end": "1027760"
  },
  {
    "text": "the page table work modules",
    "start": "1027760",
    "end": "1030240"
  },
  {
    "text": "we check on whether the virtual address",
    "start": "1030240",
    "end": "1032720"
  },
  {
    "text": "is in the open memory",
    "start": "1032720",
    "end": "1034880"
  },
  {
    "text": "if so we will use the hijacked page",
    "start": "1034880",
    "end": "1037839"
  },
  {
    "text": "tables to translate the virtual address",
    "start": "1037839",
    "end": "1040959"
  },
  {
    "text": "into physical address",
    "start": "1040959",
    "end": "1042959"
  },
  {
    "text": "if not",
    "start": "1042959",
    "end": "1044079"
  },
  {
    "text": "we will use original we will use the",
    "start": "1044079",
    "end": "1046959"
  },
  {
    "text": "default",
    "start": "1046959",
    "end": "1048558"
  },
  {
    "text": "page tables",
    "start": "1048559",
    "end": "1051880"
  },
  {
    "start": "1051000",
    "end": "1051000"
  },
  {
    "text": "to evaluate the effectiveness of ecomo",
    "start": "1052480",
    "end": "1055600"
  },
  {
    "text": "we aim to answer four different research",
    "start": "1055600",
    "end": "1058320"
  },
  {
    "text": "questions",
    "start": "1058320",
    "end": "1059919"
  },
  {
    "text": "first",
    "start": "1059919",
    "end": "1060880"
  },
  {
    "text": "we want to know whether ecmo can",
    "start": "1060880",
    "end": "1063039"
  },
  {
    "text": "identify the echo pointers as ecommerce",
    "start": "1063039",
    "end": "1066160"
  },
  {
    "text": "pointers are rather important",
    "start": "1066160",
    "end": "1068799"
  },
  {
    "text": "second we want to know whether ecmo is",
    "start": "1068799",
    "end": "1072320"
  },
  {
    "text": "able to re-host a new the newness kernel",
    "start": "1072320",
    "end": "1076000"
  },
  {
    "text": "in different versions and different",
    "start": "1076000",
    "end": "1078240"
  },
  {
    "text": "device models",
    "start": "1078240",
    "end": "1081039"
  },
  {
    "text": "this can show the scannability of",
    "start": "1081039",
    "end": "1084000"
  },
  {
    "text": "ecommerce",
    "start": "1084000",
    "end": "1085440"
  },
  {
    "text": "third",
    "start": "1085440",
    "end": "1086880"
  },
  {
    "text": "we want to know whether the rehosted",
    "start": "1086880",
    "end": "1089440"
  },
  {
    "text": "newness kernel",
    "start": "1089440",
    "end": "1091280"
  },
  {
    "text": "is stable and reliable",
    "start": "1091280",
    "end": "1094880"
  },
  {
    "text": "finally we want to know whether ecmo can",
    "start": "1094880",
    "end": "1098400"
  },
  {
    "text": "support more peripherals",
    "start": "1098400",
    "end": "1100559"
  },
  {
    "text": "and whether we can build different",
    "start": "1100559",
    "end": "1103760"
  },
  {
    "text": "applications based on that we hosted the",
    "start": "1103760",
    "end": "1106320"
  },
  {
    "text": "unix kernel",
    "start": "1106320",
    "end": "1109720"
  },
  {
    "text": "our evaluation focuses on two groups of",
    "start": "1110799",
    "end": "1113919"
  },
  {
    "text": "firmware images one is the third third",
    "start": "1113919",
    "end": "1117039"
  },
  {
    "text": "party projects",
    "start": "1117039",
    "end": "1118640"
  },
  {
    "text": "it consists of",
    "start": "1118640",
    "end": "1120840"
  },
  {
    "text": "720 unix kernels",
    "start": "1120840",
    "end": "1123520"
  },
  {
    "text": "in open wrt formula images",
    "start": "1123520",
    "end": "1126880"
  },
  {
    "text": "the other is for the vendors",
    "start": "1126880",
    "end": "1129360"
  },
  {
    "text": "which consists of 95 device",
    "start": "1129360",
    "end": "1133200"
  },
  {
    "text": "95 unix kernels",
    "start": "1133200",
    "end": "1135360"
  },
  {
    "text": "in that scale from your images and",
    "start": "1135360",
    "end": "1138000"
  },
  {
    "text": "netgear is one of the very popular",
    "start": "1138000",
    "end": "1141520"
  },
  {
    "text": "vendor",
    "start": "1141520",
    "end": "1143039"
  },
  {
    "text": "vendors",
    "start": "1143039",
    "end": "1145039"
  },
  {
    "text": "we aim to transplant three different",
    "start": "1145039",
    "end": "1147360"
  },
  {
    "text": "early boot peripherals",
    "start": "1147360",
    "end": "1149440"
  },
  {
    "text": "under the ic",
    "start": "1149440",
    "end": "1151679"
  },
  {
    "text": "timer and uat you can also see the",
    "start": "1151679",
    "end": "1154799"
  },
  {
    "text": "detailed series with detailed types of",
    "start": "1154799",
    "end": "1157440"
  },
  {
    "text": "this pair of the transplanted",
    "start": "1157440",
    "end": "1160080"
  },
  {
    "text": "peripherals",
    "start": "1160080",
    "end": "1163080"
  },
  {
    "start": "1164000",
    "end": "1164000"
  },
  {
    "text": "in total we need to identify 24",
    "start": "1164160",
    "end": "1167200"
  },
  {
    "text": "different ecommerce pointers",
    "start": "1167200",
    "end": "1169280"
  },
  {
    "text": "for all the 20 unix kernel versions",
    "start": "1169280",
    "end": "1173120"
  },
  {
    "text": "the decompress the newness kernel",
    "start": "1173120",
    "end": "1175360"
  },
  {
    "text": "contains about 30 000",
    "start": "1175360",
    "end": "1178640"
  },
  {
    "text": "functions in average",
    "start": "1178640",
    "end": "1180480"
  },
  {
    "text": "and we can identify all of the ecmo",
    "start": "1180480",
    "end": "1183520"
  },
  {
    "text": "pointers accurately",
    "start": "1183520",
    "end": "1185520"
  },
  {
    "text": "in the table",
    "start": "1185520",
    "end": "1187600"
  },
  {
    "text": "in the table shown in the slides",
    "start": "1187600",
    "end": "1189840"
  },
  {
    "text": "you can see the specific strategy we use",
    "start": "1189840",
    "end": "1193840"
  },
  {
    "text": "to locate these to look at these ecmo",
    "start": "1193840",
    "end": "1196720"
  },
  {
    "text": "pointers",
    "start": "1196720",
    "end": "1197840"
  },
  {
    "text": "and",
    "start": "1197840",
    "end": "1198960"
  },
  {
    "text": "the different kernel versions",
    "start": "1198960",
    "end": "1203320"
  },
  {
    "text": "with ecomo weekend we host",
    "start": "1206880",
    "end": "1209400"
  },
  {
    "text": "710 news corners in total",
    "start": "1209400",
    "end": "1212559"
  },
  {
    "text": "while still while",
    "start": "1212559",
    "end": "1214440"
  },
  {
    "text": "624 of them are for open wrt",
    "start": "1214440",
    "end": "1217840"
  },
  {
    "text": "and the nail the 86 are from that skill",
    "start": "1217840",
    "end": "1221919"
  },
  {
    "text": "the open wrtn units kernels consist of",
    "start": "1221919",
    "end": "1225120"
  },
  {
    "text": "19 units kernel versions and 32 device",
    "start": "1225120",
    "end": "1228480"
  },
  {
    "text": "models while all the depth gear news",
    "start": "1228480",
    "end": "1231280"
  },
  {
    "text": "kernels is in",
    "start": "1231280",
    "end": "1233440"
  },
  {
    "text": "initial kernel version",
    "start": "1233440",
    "end": "1236400"
  },
  {
    "text": "is in the same music control version and",
    "start": "1236400",
    "end": "1238960"
  },
  {
    "text": "it consists of five device models",
    "start": "1238960",
    "end": "1242960"
  },
  {
    "text": "according to the figure shown in the",
    "start": "1242960",
    "end": "1244880"
  },
  {
    "text": "slide",
    "start": "1244880",
    "end": "1246000"
  },
  {
    "text": "you can see the top five supported",
    "start": "1246000",
    "end": "1248320"
  },
  {
    "text": "vendors of the open of the open wr team",
    "start": "1248320",
    "end": "1252080"
  },
  {
    "text": "units kernels and the table shows the",
    "start": "1252080",
    "end": "1254720"
  },
  {
    "text": "detailed statistics for the netgail unit",
    "start": "1254720",
    "end": "1258159"
  },
  {
    "text": "scanners",
    "start": "1258159",
    "end": "1260559"
  },
  {
    "text": "for the for the failed ones",
    "start": "1260559",
    "end": "1263520"
  },
  {
    "text": "the the first the the main reason that",
    "start": "1263520",
    "end": "1266320"
  },
  {
    "text": "the glutathione system the democrat",
    "start": "1266320",
    "end": "1268480"
  },
  {
    "text": "system cannot be recognized",
    "start": "1268480",
    "end": "1272240"
  },
  {
    "start": "1271000",
    "end": "1271000"
  },
  {
    "text": "we also use the cisco tester suit in the",
    "start": "1272240",
    "end": "1275280"
  },
  {
    "text": "news test project to test the",
    "start": "1275280",
    "end": "1277840"
  },
  {
    "text": "reliability and the stability of the",
    "start": "1277840",
    "end": "1280799"
  },
  {
    "text": "rehosted news kernel",
    "start": "1280799",
    "end": "1283200"
  },
  {
    "text": "we noticed that only 66 banks are filled",
    "start": "1283200",
    "end": "1287840"
  },
  {
    "text": "for more than thousand the test cases",
    "start": "1287840",
    "end": "1292480"
  },
  {
    "text": "the failed ones mainly because of the",
    "start": "1292480",
    "end": "1295039"
  },
  {
    "text": "bug testing or the non-implemented",
    "start": "1295039",
    "end": "1297919"
  },
  {
    "text": "functions according to our",
    "start": "1297919",
    "end": "1300720"
  },
  {
    "text": "observations",
    "start": "1300720",
    "end": "1302159"
  },
  {
    "text": "and the 15 and 15 testicles is filled",
    "start": "1302159",
    "end": "1305520"
  },
  {
    "text": "due to the neck of support for network",
    "start": "1305520",
    "end": "1307840"
  },
  {
    "text": "driver",
    "start": "1307840",
    "end": "1308880"
  },
  {
    "text": "for network",
    "start": "1308880",
    "end": "1310159"
  },
  {
    "text": "and after we installing the nik driver",
    "start": "1310159",
    "end": "1313520"
  },
  {
    "text": "we are with the kernel modules on the",
    "start": "1313520",
    "end": "1316080"
  },
  {
    "text": "rehosted units this corner",
    "start": "1316080",
    "end": "1318159"
  },
  {
    "text": "the 15 ones can pass",
    "start": "1318159",
    "end": "1321679"
  },
  {
    "start": "1322000",
    "end": "1322000"
  },
  {
    "text": "to support the other peripherals it is",
    "start": "1324000",
    "end": "1327280"
  },
  {
    "text": "rather easy",
    "start": "1327280",
    "end": "1328880"
  },
  {
    "text": "we can install the drivers with kernel",
    "start": "1328880",
    "end": "1331520"
  },
  {
    "text": "modules after the kernel is re-hosted",
    "start": "1331520",
    "end": "1335360"
  },
  {
    "text": "for example",
    "start": "1335360",
    "end": "1336559"
  },
  {
    "text": "we we will demonstrate the capability of",
    "start": "1336559",
    "end": "1339760"
  },
  {
    "text": "supporting the other peripherals by",
    "start": "1339760",
    "end": "1342320"
  },
  {
    "text": "installing the leak driver smg 916",
    "start": "1342320",
    "end": "1346640"
  },
  {
    "text": "we compile the naval smc 9116 in",
    "start": "1346640",
    "end": "1350799"
  },
  {
    "text": "narwhal x into a kernel module and pack",
    "start": "1350799",
    "end": "1354320"
  },
  {
    "text": "it into a ram file system then we feed",
    "start": "1354320",
    "end": "1357440"
  },
  {
    "text": "the ram file system to the then we see",
    "start": "1357440",
    "end": "1360080"
  },
  {
    "text": "the ram file system to the",
    "start": "1360080",
    "end": "1362400"
  },
  {
    "text": "uh",
    "start": "1362400",
    "end": "1363280"
  },
  {
    "text": "today we hosted the newness kernel",
    "start": "1363280",
    "end": "1367200"
  },
  {
    "text": "and we successfully",
    "start": "1367440",
    "end": "1369679"
  },
  {
    "text": "and and",
    "start": "1369679",
    "end": "1371120"
  },
  {
    "text": "under the",
    "start": "1371120",
    "end": "1372559"
  },
  {
    "text": "network functionality",
    "start": "1372559",
    "end": "1374640"
  },
  {
    "text": "can be guaranteed after installing the",
    "start": "1374640",
    "end": "1377280"
  },
  {
    "text": "next driver",
    "start": "1377280",
    "end": "1379919"
  },
  {
    "text": "also we also we also demonstrated the",
    "start": "1382240",
    "end": "1384640"
  },
  {
    "text": "capability of ecomo on analyzing the",
    "start": "1384640",
    "end": "1387200"
  },
  {
    "text": "crashes six cbes can be triggered and",
    "start": "1387200",
    "end": "1390559"
  },
  {
    "text": "anonymized and we hosted the newness",
    "start": "1390559",
    "end": "1392559"
  },
  {
    "text": "kernel",
    "start": "1392559",
    "end": "1394159"
  },
  {
    "text": "meanwhile we can monitor how the rootkit",
    "start": "1394159",
    "end": "1397200"
  },
  {
    "text": "hides specific process by hijacking the",
    "start": "1397200",
    "end": "1400320"
  },
  {
    "text": "kernel function work with drr",
    "start": "1400320",
    "end": "1403840"
  },
  {
    "text": "finally we also put one of the kernel",
    "start": "1403840",
    "end": "1406720"
  },
  {
    "text": "five",
    "start": "1406720",
    "end": "1407600"
  },
  {
    "text": "father named unicorn fast into ecomo to",
    "start": "1407600",
    "end": "1411280"
  },
  {
    "text": "demonstrate that we hosted the newness",
    "start": "1411280",
    "end": "1413919"
  },
  {
    "text": "kernel can be fast",
    "start": "1413919",
    "end": "1415679"
  },
  {
    "text": "as you can see the filing speed can",
    "start": "1415679",
    "end": "1418400"
  },
  {
    "text": "reach to",
    "start": "1418400",
    "end": "1419520"
  },
  {
    "text": "about 400 per second",
    "start": "1419520",
    "end": "1423200"
  },
  {
    "start": "1422000",
    "end": "1422000"
  },
  {
    "text": "to conclude our work",
    "start": "1423600",
    "end": "1425760"
  },
  {
    "text": "we proposed a novel technique named",
    "start": "1425760",
    "end": "1428480"
  },
  {
    "text": "peripheral transplantation",
    "start": "1428480",
    "end": "1430960"
  },
  {
    "text": "we implemented this technique and build",
    "start": "1430960",
    "end": "1433760"
  },
  {
    "text": "a new system named ecmo",
    "start": "1433760",
    "end": "1437039"
  },
  {
    "text": "and we also evaluated ecomo on",
    "start": "1437039",
    "end": "1440760"
  },
  {
    "text": "815 newness canals",
    "start": "1440760",
    "end": "1443679"
  },
  {
    "text": "87",
    "start": "1443679",
    "end": "1445520"
  },
  {
    "text": "percent of them can be rehosted",
    "start": "1445520",
    "end": "1447760"
  },
  {
    "text": "successfully",
    "start": "1447760",
    "end": "1449520"
  },
  {
    "text": "meanwhile we will also open source ecmo",
    "start": "1449520",
    "end": "1452720"
  },
  {
    "text": "and provide an online service service",
    "start": "1452720",
    "end": "1455440"
  },
  {
    "text": "for their community",
    "start": "1455440",
    "end": "1458640"
  },
  {
    "text": "okay that's all for my presentation",
    "start": "1458640",
    "end": "1461520"
  },
  {
    "text": "thank you for listening",
    "start": "1461520",
    "end": "1463279"
  },
  {
    "text": "now i'd be glad to answer your questions",
    "start": "1463279",
    "end": "1467920"
  },
  {
    "text": "[Music]",
    "start": "1467920",
    "end": "1477529"
  },
  {
    "text": "you",
    "start": "1478080",
    "end": "1480158"
  }
]