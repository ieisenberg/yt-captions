[
  {
    "start": "0",
    "end": "101000"
  },
  {
    "text": "so we are in Augustus 5 and six and this is the malware track couple key things",
    "start": "160",
    "end": "6359"
  },
  {
    "text": "please make sure you have your cell phones off or on vibrate also at the end make sure you take some time to do the",
    "start": "6359",
    "end": "11440"
  },
  {
    "text": "speaker feedback forms it helps you know them learn helps us figure out what things to do better here um so I won't",
    "start": "11440",
    "end": "18600"
  },
  {
    "text": "say much more so we can get started little late here's",
    "start": "18600",
    "end": "22480"
  },
  {
    "text": "Lucas all right hey guys uh my my name is Lucas uh or snare I'm from Melbourne",
    "start": "26640",
    "end": "32680"
  },
  {
    "text": "Australia um I am the principal consultant at a company called Assurance in Australia we're pentesting pent",
    "start": "32680",
    "end": "37879"
  },
  {
    "text": "testing outfit uh in Melbourne and um yeah took me a while to get here um I'm",
    "start": "37879",
    "end": "43719"
  },
  {
    "text": "going to talk to you guys today about um EFI Bas malware um so we infecting uh current uh Apple Hardware at the",
    "start": "43719",
    "end": "51360"
  },
  {
    "text": "firmware level so I'm going to go through a few things here uh to begin with sort of what my goals were when I",
    "start": "51360",
    "end": "57120"
  },
  {
    "text": "set out doing this research uh and a bit of background um some prior work that's been done in the in the area all that",
    "start": "57120",
    "end": "63160"
  },
  {
    "text": "sort of stuff a bit a bit of info on um EFI sort of fundamentals how it all fits together and uh what components there",
    "start": "63160",
    "end": "69799"
  },
  {
    "text": "are that we can mess with uh then doing some bad stuff with Fi you know how to um what kind of things we can actually",
    "start": "69799",
    "end": "76240"
  },
  {
    "text": "do uh from within fi and attacking the kernel and all that sort of stuff um a",
    "start": "76240",
    "end": "81920"
  },
  {
    "text": "few uh things about persistence how we actually persist a root kit uh in EFI on a Mac uh then a few evil M attack",
    "start": "81920",
    "end": "89560"
  },
  {
    "text": "scenario that we can we can carry out with the FI and then a few defensive measures that that we can use to",
    "start": "89560",
    "end": "95720"
  },
  {
    "text": "mitigate this this type of attack so the reason we're really all",
    "start": "95720",
    "end": "101640"
  },
  {
    "start": "101000",
    "end": "101000"
  },
  {
    "text": "here is because I wanted a cool boot screen on my Mac right so I I wanted to play with um uh like EFI uh graphic",
    "start": "101640",
    "end": "108759"
  },
  {
    "text": "stuff in the preboot environment and as soon as I started playing with that stuff I realized pretty quickly that",
    "start": "108759",
    "end": "113920"
  },
  {
    "text": "it's it's probably a really good place to to attack the system from right um and of course all that stuff's been done before but it kind of only occurs to me",
    "start": "113920",
    "end": "120159"
  },
  {
    "text": "at that point um that firmware you know there you can do a lot from from from the firmware right um so I didn't really",
    "start": "120159",
    "end": "127000"
  },
  {
    "text": "have a lot of background in in firmware or kernel stuff um bootloader stuff or whatever so you know dug in uh so",
    "start": "127000",
    "end": "135280"
  },
  {
    "text": "there's there's been a quite a few uh different uh bits of research done in this kind of area before like go going",
    "start": "135280",
    "end": "140920"
  },
  {
    "text": "right back to MBR viruses and and that kind of thing that infects you know boot code and the MBR on the disc and uh",
    "start": "140920",
    "end": "147000"
  },
  {
    "text": "right up to more recently uh John hean at NGS blackout a few years ago um talking about uh the potential for EFI",
    "start": "147000",
    "end": "153400"
  },
  {
    "text": "stuff and to be honest I'm quite surprised we haven't seen um stuff in the wild you know since his talk cuz",
    "start": "153400",
    "end": "159159"
  },
  {
    "text": "that he he covered a lot of great stuff um course security dudes and invisible things lab um have done a lot of good",
    "start": "159159",
    "end": "166120"
  },
  {
    "text": "work um with attacking bios and and UEFI as well in the last couple of years definitely worth checking out the the",
    "start": "166120",
    "end": "171200"
  },
  {
    "text": "stuff that they've uh put out Andre speaking this afternoon I'm talking about uh root kitting bioses which is",
    "start": "171200",
    "end": "177400"
  },
  {
    "text": "going to be pretty badass and it's going to scare the out of everyone basically there's been heaps of stuff",
    "start": "177400",
    "end": "183480"
  },
  {
    "text": "done it's it's all really cool so the um the main goal I set out to achieve I",
    "start": "183480",
    "end": "188599"
  },
  {
    "text": "guess was to be able to back door a machine um preferably without any evidence on disk um cuz we're in the",
    "start": "188599",
    "end": "194280"
  },
  {
    "text": "firmware so we've got a few more options as far as storage goes um preferably be able to process Forever Without You Know",
    "start": "194280",
    "end": "201440"
  },
  {
    "text": "relying on stuff being written to disk uh so if you know the the machine gets wiped still infected uh the uh disc gets",
    "start": "201440",
    "end": "208760"
  },
  {
    "text": "replaced or it's still infected right um we want to be able to patch the kernel at boot time uh and do a few other",
    "start": "208760",
    "end": "215319"
  },
  {
    "text": "things before the before the uh kernel is actually executed and to work regardless of hold dis encryption um",
    "start": "215319",
    "end": "221360"
  },
  {
    "text": "because if you don't have hold disc encryption on your laptop these days you're crazy uh so I think everyone who matters probably has hold this",
    "start": "221360",
    "end": "227599"
  },
  {
    "text": "encryption on their laptop so that's going to be uh a part of the whole scenario I guess so all that stuff",
    "start": "227599",
    "end": "233079"
  },
  {
    "text": "together like sounds pretty hard um EFI makes it a lot easier to to build this",
    "start": "233079",
    "end": "238280"
  },
  {
    "text": "kind of thing which is pretty cool so some fundamentals about how EFI Works",
    "start": "238280",
    "end": "243519"
  },
  {
    "start": "243000",
    "end": "243000"
  },
  {
    "text": "uh it was originally developed at Intel uh as a as a replacement for the for the Legacy PC vus um to address some of the",
    "start": "243519",
    "end": "250000"
  },
  {
    "text": "limitations uh that you know Intel saw in the PC vus and to become the um the",
    "start": "250000",
    "end": "255079"
  },
  {
    "text": "preboot environment for all of their you know upcoming I64 and whatever else uh architecture gear whether or not it",
    "start": "255079",
    "end": "262880"
  },
  {
    "text": "addresses all of those limitations is you know open for discussion um it was originally called the Intel boot initiative uh and it was handed over to",
    "start": "262880",
    "end": "269360"
  },
  {
    "text": "a community group um a few years back in 2005 or something I think um which is",
    "start": "269360",
    "end": "275600"
  },
  {
    "text": "which is when it became UEFI so I was handed over to the unified EFI Consortium um and developed as an open",
    "start": "275600",
    "end": "282600"
  },
  {
    "text": "source um project for the the the actual implementation and the specifications developed by the uh uh ufi Consortium",
    "start": "282600",
    "end": "289880"
  },
  {
    "text": "because because ufi is not a product it's a specification right so it's it's a it's a specification that defines an a",
    "start": "289880",
    "end": "296120"
  },
  {
    "text": "firmware interface uh and Intel has also implemented that uh so wefi is pretty modular um which",
    "start": "296120",
    "end": "303320"
  },
  {
    "start": "300000",
    "end": "300000"
  },
  {
    "text": "makes it great to develop components for like compared to um developing for for traditional bias we have to write shitty",
    "start": "303320",
    "end": "309360"
  },
  {
    "text": "like 16bit real mode assembly and stuff which kind of sucks uh so it comprises a bunch of core components uh which are",
    "start": "309360",
    "end": "315240"
  },
  {
    "text": "the sort of the the key uh like main phases of of how of EFI startup uh which",
    "start": "315240",
    "end": "321039"
  },
  {
    "text": "I'll talk about a little bit more in a sec uh some applications like there's a tet client FTP client all that kind of",
    "start": "321039",
    "end": "326759"
  },
  {
    "text": "stuff and there's a shell like for a command shell kind of access you can you know boot into with refit or whatever uh",
    "start": "326759",
    "end": "333400"
  },
  {
    "text": "drivers to support Hardware in the preboot environment and then boo loaders for obviously loading operating",
    "start": "333400",
    "end": "338919"
  },
  {
    "text": "systems so the the core components of EFI reside on you know as you would expect the firmware flash on the on the",
    "start": "338919",
    "end": "345000"
  },
  {
    "text": "logic board of the motherboard um so max called logic board uh along with a set of drivers for um",
    "start": "345000",
    "end": "352759"
  },
  {
    "text": "managing the the sort of core set of Hardware that's on the logic board and and built into the machine enough to",
    "start": "352759",
    "end": "357800"
  },
  {
    "text": "boot the system up and then the colel con over and control whatever Hardware it needs to uh so applications and and",
    "start": "357800",
    "end": "364360"
  },
  {
    "text": "third party drivers for other Hardware can can reside either on disk um or in the firmware data flash along with the",
    "start": "364360",
    "end": "370039"
  },
  {
    "text": "you know full fi uh firmware uh or on option RS on option RS for PCI",
    "start": "370039",
    "end": "377800"
  },
  {
    "text": "devices which is pretty cool uh so a little bit about EFI terminology um in case I refer to some",
    "start": "377800",
    "end": "385680"
  },
  {
    "text": "of this stuff so this like the system table which is a just a a table of data structures and function pointers for for",
    "start": "385680",
    "end": "392240"
  },
  {
    "text": "um that applications and drivers within that run within the EFI preed environment can access uh so that that",
    "start": "392240",
    "end": "399840"
  },
  {
    "text": "system table contains like pointers to all the other tables and that's what gets passed to a to a driver or an application when it first gets executed",
    "start": "399840",
    "end": "406080"
  },
  {
    "text": "so it you has access to all this stuff within the uh EFI preboot environment uh the boot Services table",
    "start": "406080",
    "end": "413240"
  },
  {
    "text": "contains a pile of functions for um uh like uh you know memory allocation",
    "start": "413240",
    "end": "419240"
  },
  {
    "text": "and uh yeah managing protocols and loading images and stuff so things that you need uh to access from your device",
    "start": "419240",
    "end": "425000"
  },
  {
    "text": "driver or application uh while EFI is is present before the operating system runs",
    "start": "425000",
    "end": "431199"
  },
  {
    "text": "so then the runtime Services table uh contains a set of uh functions and data",
    "start": "431199",
    "end": "436319"
  },
  {
    "text": "structures that are accessible uh in the preboot environment and then also in once the operating system is present it",
    "start": "436319",
    "end": "442120"
  },
  {
    "text": "can actually call back into EFI to do various things like uh you know uh timing stuff virtual memory uh",
    "start": "442120",
    "end": "448160"
  },
  {
    "text": "converting addressing for um uh when the uh boot loader hands over execution of the kernel builds a memory map and has",
    "start": "448160",
    "end": "454199"
  },
  {
    "text": "to convert all the addresses from the physical addressing that's used in you know efi's environment over to uh the",
    "start": "454199",
    "end": "461599"
  },
  {
    "text": "64-bit addressing that's used by the kernel um yeah stuff like resetting the system so there's a reset function to",
    "start": "461599",
    "end": "467919"
  },
  {
    "text": "you know warm reboot uh capsule management which is used for handing uh EFI executables back to the preo",
    "start": "467919",
    "end": "474720"
  },
  {
    "text": "environment from the operating system which is something that Apple uses as a uh um a to uh write firmer updates to",
    "start": "474720",
    "end": "481599"
  },
  {
    "text": "the machine I'll talk a little bit more about that a bit later and also variable Services uh so",
    "start": "481599",
    "end": "487159"
  },
  {
    "text": "when you run the nvram command on the Mac you're um you're inspecting obviously the nvram which is uh accessed",
    "start": "487159",
    "end": "494319"
  },
  {
    "text": "from the OS by IO kit but in in the EFI environment you can access the same data store through the um EFI variables",
    "start": "494319",
    "end": "500879"
  },
  {
    "text": "functions U so that's where the boot device like the PCI device path to the boot device is",
    "start": "500879",
    "end": "506440"
  },
  {
    "text": "stored uh the configuration table is for C run some Services it's not particularly useful for us actually it",
    "start": "506440",
    "end": "513399"
  },
  {
    "text": "could be anyway um so developing fre fi um Intel provides uh the edk the um the",
    "start": "513399",
    "end": "521240"
  },
  {
    "text": "EFI development kit well now it's provided by the community group but uh so that includes Tio which is uh Intel's",
    "start": "521240",
    "end": "527320"
  },
  {
    "text": "reference implementation of the um the eii specification and this is what most like ibvs um use as their basis for",
    "start": "527320",
    "end": "535200"
  },
  {
    "text": "implementing a new a new bios a new UEFI bios or EFI bios um and this is pretty",
    "start": "535200",
    "end": "540519"
  },
  {
    "text": "much what Apple uses as well [Music]",
    "start": "540519",
    "end": "545880"
  },
  {
    "text": "um it's written in C which is great because I hate writing um 16bit real",
    "start": "545880",
    "end": "550959"
  },
  {
    "text": "mode assembly and I don't really know a lot about it um but I you know I'm pretty good at C so that is really",
    "start": "550959",
    "end": "556120"
  },
  {
    "text": "helpful for me um it's nice and high level um everything's you know laid out nicely for you uh EFI also sort of",
    "start": "556120",
    "end": "563600"
  },
  {
    "text": "reuses a few uh like older technologies that are that are used elsewhere like it uses a fat file system for uh the EFI",
    "start": "563600",
    "end": "570120"
  },
  {
    "text": "system partition the command shell looks like dos which is hilarious um and it uses p32 like a subset of the p32",
    "start": "570120",
    "end": "577360"
  },
  {
    "text": "executable format um which is great because Ida Pro understands it and uh so if you've got X you know um x86 or",
    "start": "577360",
    "end": "583880"
  },
  {
    "text": "whatever um EFI drivers that are using the pier you can just dump them in ID Pro and disassemble",
    "start": "583880",
    "end": "589640"
  },
  {
    "text": "them uh it's it's pretty gigantic as well which is kind of scary um when you look at the work that you know dudes",
    "start": "589640",
    "end": "595560"
  },
  {
    "text": "like the invisible things lab um people have done with with finding bugs in like",
    "start": "595560",
    "end": "600720"
  },
  {
    "text": "the PNG renderer that renders the boot screen and stuff like that like there's a huge amount of code and a huge amount",
    "start": "600720",
    "end": "606079"
  },
  {
    "text": "of you know uh untested and unreviewed code probably that you know can contain bugs uh and they've de already",
    "start": "606079",
    "end": "612240"
  },
  {
    "text": "demonstrated that there's that there are quite a few and I don't think anyone's looking particularly hard so there's bound to be a lot",
    "start": "612240",
    "end": "619120"
  },
  {
    "text": "more um I could be wrong people could be looking for them uh and maybe they out there who knows um so it's yeah like it's it's a",
    "start": "619120",
    "end": "627720"
  },
  {
    "text": "pretty giant code base it's uh you know using that not particularly scientific method of Canon lines of code uh there's",
    "start": "627720",
    "end": "633320"
  },
  {
    "text": "about twice as you know many lines of code AS are in the uh the Mac OS kernel the spec itself is 2200 Pages",
    "start": "633320",
    "end": "639560"
  },
  {
    "text": "along which is pretty huge and uh looking at some of the the core like protocols that are defined um by the",
    "start": "639560",
    "end": "645800"
  },
  {
    "text": "spec like it it it looks like an operating system right it's got you know Network stuff it's got crypto stuff it's",
    "start": "645800",
    "end": "650920"
  },
  {
    "text": "got like you know UI forms uh library for you know for generating UI uh you",
    "start": "650920",
    "end": "657240"
  },
  {
    "text": "know graphical uis in in the uh PR environment people have written you know web browsers for and stuff so it's it's",
    "start": "657240",
    "end": "662639"
  },
  {
    "text": "pretty huge so the EFI boot process uh I",
    "start": "662639",
    "end": "667760"
  },
  {
    "text": "mentioned before there are a few phases uh of the of the core sort of EFI boot process uh when the system is first",
    "start": "667760",
    "end": "673720"
  },
  {
    "text": "powered on the set phase um takes takes control and this serves as like a root of trust for the system and does some",
    "start": "673720",
    "end": "680399"
  },
  {
    "text": "like very basic initial initialization of the system um after handing uh after",
    "start": "680399",
    "end": "685440"
  },
  {
    "text": "which it hands over to the Pei phase which is the pre EFI initialization P Pei um uh basically like initializes",
    "start": "685440",
    "end": "693760"
  },
  {
    "text": "the CPU and and other chipsets on the board um that are essential for you know the operation of the machine uh other",
    "start": "693760",
    "end": "699839"
  },
  {
    "text": "board stuff uh and then hands over to the driver execution environment DXE phase uh DXE is is pretty much where all",
    "start": "699839",
    "end": "706079"
  },
  {
    "text": "the um where the bulk of the initialization of the system takes place so this is where drivers are loaded from the",
    "start": "706079",
    "end": "711519"
  },
  {
    "text": "firmware volume uh where where you know where PCI buses are initialized and and enumerated and all the devices on the on",
    "start": "711519",
    "end": "718000"
  },
  {
    "text": "the bus uh up pulled for um for uh option ROMs on the you know if they have expansion ROMs uh they'll be they'll be",
    "start": "718000",
    "end": "724279"
  },
  {
    "text": "ready in and mapped into memory um and drivers loaded from them uh so after",
    "start": "724279",
    "end": "730000"
  },
  {
    "text": "after this you know the system's all all set up and all the drivers are in place for um E Auto access all the hardware uh",
    "start": "730000",
    "end": "735639"
  },
  {
    "text": "it hands over to the um BDS phase which is the boot device selection phase uh so BDS so when you hold down the option key",
    "start": "735639",
    "end": "741279"
  },
  {
    "text": "on a Mac and you um you uh uh you get your cute little um you know uh boot menu thing to choose uh from the",
    "start": "741279",
    "end": "748440"
  },
  {
    "text": "available discs from um that's the BDS phase so the BDS phase that looks at the",
    "start": "748440",
    "end": "754720"
  },
  {
    "text": "uh the NVM to find the boot device that's been uh set so the PCI device",
    "start": "754720",
    "end": "760120"
  },
  {
    "text": "path is stor and VM um to the boot device and then it looks at the boot device and finds the boot loader you know according to the volume header or",
    "start": "760120",
    "end": "766920"
  },
  {
    "text": "according to other NVM variables depending on how it's configured uh and then loads the boot loader and executes",
    "start": "766920",
    "end": "773399"
  },
  {
    "text": "it which loads the kernel and executes the kernel typical um yeah so that's",
    "start": "773399",
    "end": "779600"
  },
  {
    "text": "kind of how the eii boot process works a little bit which I'll talk about in a slightly different way in a sec so onto",
    "start": "779600",
    "end": "784760"
  },
  {
    "text": "the fun stuff actually doing some bad things with EFI um so the modularity in the SDK as",
    "start": "784760",
    "end": "791800"
  },
  {
    "start": "788000",
    "end": "788000"
  },
  {
    "text": "I've kind of already indicated um makes it pretty you know pretty nice um to actually developing compared to developing for U you know bios hacks um",
    "start": "791800",
    "end": "800320"
  },
  {
    "text": "so I guess like there's there's a few things we can do we build a r driver um we also you know tro the bootloader or",
    "start": "800320",
    "end": "806440"
  },
  {
    "text": "whatever else um but I think that the easiest way is basically just to build a malicious driver that um you know gets",
    "start": "806440",
    "end": "812760"
  },
  {
    "text": "loaded early on somehow whether it be out of an option r or um you know buy a",
    "start": "812760",
    "end": "817800"
  },
  {
    "text": "shim bootload or something like that um register some callbacks for events within EFI um hook some boot services",
    "start": "817800",
    "end": "823480"
  },
  {
    "text": "and runtime services and you know functions within protocol blocks and all that sort of stuff typical function hooking stuff and um mess with with",
    "start": "823480",
    "end": "831240"
  },
  {
    "text": "things I guess um yeah so being being a uh being",
    "start": "831240",
    "end": "836639"
  },
  {
    "text": "a a a pretty generic um firmware interface uh it's pretty pretty easy to",
    "start": "836639",
    "end": "842759"
  },
  {
    "text": "write you know something that's going to be supported on on across a whole range of EFI based systems so uh there's also",
    "start": "842759",
    "end": "848519"
  },
  {
    "text": "the EVC uh EFI B code format which is a b code format specified by the by the uh",
    "start": "848519",
    "end": "854959"
  },
  {
    "text": "EFI specification um with which you can you know compile you can compile drivers",
    "start": "854959",
    "end": "860120"
  },
  {
    "text": "into EVC that will work on I64 and you know x86 and whatever else there are only a few platforms like I suppose it's",
    "start": "860120",
    "end": "866759"
  },
  {
    "text": "arm as well for EFI so um yeah you can you can build crossplatform",
    "start": "866759",
    "end": "871880"
  },
  {
    "text": "malware with it it's pretty cool so the first thing um talk about",
    "start": "871880",
    "end": "877600"
  },
  {
    "text": "with with with actually attacking things from EFI um is attacking hold this",
    "start": "877600",
    "end": "882880"
  },
  {
    "text": "encryption um because that's kind of cool so if you don't have 5V enable that's kind of what the layout of the",
    "start": "882880",
    "end": "888040"
  },
  {
    "text": "hard dis probably looks like um probably less shinier than that but um you you've got the EFI system partition on the you",
    "start": "888040",
    "end": "894000"
  },
  {
    "text": "know at the start of the partition table um which as I said is not really used by Apple's uh implementation apart from",
    "start": "894000",
    "end": "899399"
  },
  {
    "text": "staging uh firmware updates uh then you've got your OS partition which contains the operating system and all",
    "start": "899399",
    "end": "904920"
  },
  {
    "text": "your stuff uh and the boot loader so the boot loader is stored on the OS partition in this case um then at the",
    "start": "904920",
    "end": "910160"
  },
  {
    "text": "end of the partition table there's on on a Mac OS 10.7 machine there's a recovery partition so when you hold down the",
    "start": "910160",
    "end": "915759"
  },
  {
    "text": "command R and you boild up in the recovery mode you can reinstall your machine or whatever so when you enable 5",
    "start": "915759",
    "end": "922440"
  },
  {
    "text": "Vol when you enable F volt um the OS partition is encrypted uh so you have to be able to load the boot loader somehow",
    "start": "922440",
    "end": "928720"
  },
  {
    "text": "so basically they just cram the boot loader onto the recovery partition which already has a boot loader um I guess for",
    "start": "928720",
    "end": "934240"
  },
  {
    "text": "its own purposes um so we can't actually access the boot loader until uh the the OS partition is",
    "start": "934240",
    "end": "941839"
  },
  {
    "text": "decrypted or unlocked uh I think is a core storage terminology for that um yeah so it's it's still on the",
    "start": "941839",
    "end": "949560"
  },
  {
    "text": "recovery partition in plain text or clear text um un encrypted uh free for",
    "start": "949560",
    "end": "954800"
  },
  {
    "text": "us to mess with so the boot process with Vol enabled um is platform firm initializers",
    "start": "954800",
    "end": "962480"
  },
  {
    "text": "uh loads the boot loader from the recovery partition uh the boot loader prompts the user for the pass phrase so that's the passphrase entry prompt for",
    "start": "962480",
    "end": "969000"
  },
  {
    "text": "FV is actually you know presented by boot. EFI uh and then uses that pass passphrase to unlock the cor storage",
    "start": "969000",
    "end": "975600"
  },
  {
    "text": "volume that the uh OS is on and then you know executes the",
    "start": "975600",
    "end": "981279"
  },
  {
    "text": "kernel so um I guess the first thing to look at with with uh regards to",
    "start": "985319",
    "end": "990639"
  },
  {
    "text": "attacking file Vol is you know a keyst logger um within eii to steal the users",
    "start": "990639",
    "end": "995680"
  },
  {
    "text": "passphrase um so this turned out to be you know uh pretty pretty simple to implement so there's there's a protocol",
    "start": "995680",
    "end": "1001800"
  },
  {
    "text": "that's defined by the FI specification called The Simple Text input protocol which is used for uh for console input",
    "start": "1001800",
    "end": "1008279"
  },
  {
    "text": "right this is the simple text output protocol for console output um so the um simple deex input protocol is you know",
    "start": "1008279",
    "end": "1015120"
  },
  {
    "text": "has a protocol block like structure that contains pointers to all the functions and data and stuff for the protocol",
    "start": "1015120",
    "end": "1021199"
  },
  {
    "text": "including the read keystroke function um which reads A keystroke so when you press the key that gets",
    "start": "1021199",
    "end": "1026839"
  },
  {
    "text": "C uh so basically we just want to hook that function and you know keep a buffer of all the keys pretty traditional key",
    "start": "1026839",
    "end": "1032640"
  },
  {
    "text": "loger kind of thing um the the one problem with that is that uh when we get",
    "start": "1032640",
    "end": "1037798"
  },
  {
    "text": "loaded uh during the DXE phase the uh the instance of the simple Tex input protocol it's installed on the console",
    "start": "1037799",
    "end": "1044038"
  },
  {
    "text": "handle at that point uh is not the same one that's used to receive keystrokes for the",
    "start": "1044039",
    "end": "1049360"
  },
  {
    "text": "uh the pass phrase entry screen so what we need to do is is use the um uh",
    "start": "1049360",
    "end": "1054799"
  },
  {
    "text": "register for for protocol installation um events within EFI so there's a whole you know series of events you can",
    "start": "1054799",
    "end": "1060400"
  },
  {
    "text": "register for which is awesome uh so we just register for uh and wait around until uh these until another instance of",
    "start": "1060400",
    "end": "1067320"
  },
  {
    "text": "the simple text input protocol is installed on that handle um and that's when the uh bootloader installs one to",
    "start": "1067320",
    "end": "1073720"
  },
  {
    "text": "rec for the pass raise entry screen so yeah we can we can hook that and that works pretty well we can save that in",
    "start": "1073720",
    "end": "1078880"
  },
  {
    "text": "buffer sck it in nvram um wait till the system's booted and you know send it off over the network or",
    "start": "1078880",
    "end": "1085520"
  },
  {
    "text": "whatever um another way I guess we could do that um some guys recently have done a lot of work reverse engineering file",
    "start": "1085520",
    "end": "1091760"
  },
  {
    "text": "vault at the at the sort of core storage like volume level um I don't know a whole lot about that but um you know I",
    "start": "1091760",
    "end": "1097320"
  },
  {
    "text": "think uh like using their research um it it probably would would be pretty reasonable to um to be able to actually",
    "start": "1097320",
    "end": "1103159"
  },
  {
    "text": "steal the as key um out of memory as well once the disc is decrypted but I think you know once you got the password",
    "start": "1103159",
    "end": "1108960"
  },
  {
    "text": "it probably doesn't matter too much but I think it's definitely worth looking into as well and yeah apple provides some handy dandy uh debug logging there",
    "start": "1108960",
    "end": "1115440"
  },
  {
    "text": "in their um boot. fi binary which is kind of",
    "start": "1115440",
    "end": "1120360"
  },
  {
    "text": "cool so the real fun stuff I guess comes with um with attacking the kernel right um that's that's generally what we're",
    "start": "1123760",
    "end": "1130200"
  },
  {
    "text": "going to be aiming for I try to get all my like jokes in a one slide there",
    "start": "1130200",
    "end": "1136320"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "so um so I guess we want to patch the kernel from EFI right so we want to get some",
    "start": "1137000",
    "end": "1142400"
  },
  {
    "text": "malicious code in there and have some fun with it so we need to find a place to to put some code um we we hook some",
    "start": "1142400",
    "end": "1148000"
  },
  {
    "text": "kernel functionality to point it at that code um and we probably get execution during the kernel initialization to",
    "start": "1148000",
    "end": "1153360"
  },
  {
    "text": "actually install you know root kit hooks tentacles throughout the system and all is",
    "start": "1153360",
    "end": "1158600"
  },
  {
    "text": "good the problem with that is that that the kernel isn't loaded when our um driver gets loaded or an application",
    "start": "1158600",
    "end": "1164200"
  },
  {
    "text": "gets executed um within the FI environment that's why I'm using a driver for this because we we have the opportunity to um to wait around and and",
    "start": "1164200",
    "end": "1171559"
  },
  {
    "text": "stay in memory until right at the very end of efi's um initialization and even past that if we uh allocate runtime",
    "start": "1171559",
    "end": "1178360"
  },
  {
    "text": "Services memory which I'll mention a bit more about uh in a sec so this is where the exit boot Services callback comes in",
    "start": "1178360",
    "end": "1185600"
  },
  {
    "text": "um so if we have a look at another view of the EFI boot process with a slightly",
    "start": "1185600",
    "end": "1191520"
  },
  {
    "text": "fancier diagram um we've got the the core uh phases of",
    "start": "1191520",
    "end": "1197320"
  },
  {
    "text": "fi that I mentioned before SEC pi and DXE so they run through their stuff uh",
    "start": "1197320",
    "end": "1202400"
  },
  {
    "text": "and then drivers are loaded by DXE um including our you know our bad driver um",
    "start": "1202400",
    "end": "1208240"
  },
  {
    "text": "hands off to BDS um loads the boot loader blah blah blah so boot loader loads the kernel following which it sort",
    "start": "1208240",
    "end": "1215159"
  },
  {
    "text": "of prepares the environment for kernel execution um part of which is uh telling all the all the drivers in the system",
    "start": "1215159",
    "end": "1221080"
  },
  {
    "text": "that if they need to clean stuff up that they should do it now um so ex exit boot",
    "start": "1221080",
    "end": "1226200"
  },
  {
    "text": "Services um anything that registers for an exit boot service is uh notification will get called back into and get the",
    "start": "1226200",
    "end": "1231720"
  },
  {
    "text": "opportunity to execute code again uh before the kernel gets executed so this is a really good place for us to to mess",
    "start": "1231720",
    "end": "1236960"
  },
  {
    "text": "with the kernel because at this point the kernel is loaded into memory so in order to actually mess with",
    "start": "1236960",
    "end": "1243240"
  },
  {
    "text": "the kernel um we uh we need to find it so um the side of the kernel image um is",
    "start": "1243240",
    "end": "1249840"
  },
  {
    "text": "at that address if we have a look at the um oel uh the the the micro binary with o tool or you know mro view or whatever",
    "start": "1249840",
    "end": "1257159"
  },
  {
    "text": "um we can see that the first segment is loaded at that address if we have a look in on a live system in a dager um we can",
    "start": "1257159",
    "end": "1262679"
  },
  {
    "text": "see the the mro magic number for the 64-bit micro binary there so that's um",
    "start": "1262679",
    "end": "1268080"
  },
  {
    "text": "that's where it is um so in the EFI environment as I mentioned before it uses a flat 32-bit",
    "start": "1268080",
    "end": "1274279"
  },
  {
    "text": "memory model without paging rather than the um canonical upper and lower halves you know model that a 64-bit model that",
    "start": "1274279",
    "end": "1281279"
  },
  {
    "text": "uh the xnu kernel uses so um so so in 32 mode we basically just truncate and it's",
    "start": "1281279",
    "end": "1286960"
  },
  {
    "text": "it's at that address there so um what we're going to do is we're going to inject a payload somewhere",
    "start": "1286960",
    "end": "1292279"
  },
  {
    "text": "we're going to patch a kernel function point to the payload uh so because we don't uh we don't have a lot of room to put",
    "start": "1292279",
    "end": "1299120"
  },
  {
    "text": "our payload in so um uh what I've done in my you know in my proof of concept is is Ed the trampoline payload that that",
    "start": "1299120",
    "end": "1305840"
  },
  {
    "text": "bounces off to a second stage payload um and finds a second stage payload in um I've used an fi variable but you could",
    "start": "1305840",
    "end": "1311279"
  },
  {
    "text": "also use you know runtime Services memory that's allocated with an EFI and call back into from the kernel over the",
    "start": "1311279",
    "end": "1316720"
  },
  {
    "text": "network whatever else so um i' I've used uh the the Silvio chz",
    "start": "1316720",
    "end": "1323360"
  },
  {
    "text": "um page alignment padding thing that's been around forever which is awesome um still works and the text segment so",
    "start": "1323360",
    "end": "1329559"
  },
  {
    "text": "segments are page aligned there's a bit of padding at the end because segments don't take up the entire page usually so",
    "start": "1329559",
    "end": "1335600"
  },
  {
    "text": "on a default 1073 kernel we've got about 4K um almost an entire 4K page um of",
    "start": "1335600",
    "end": "1340880"
  },
  {
    "text": "data uh to play with uh it turns out on 1074 which I um have on this machine we only have about 56 bytes or something",
    "start": "1340880",
    "end": "1348559"
  },
  {
    "text": "which is still not too bad cuz it's plenty of plenty of room to stick a small trampoline payload so that's pretty",
    "start": "1348559",
    "end": "1356000"
  },
  {
    "text": "sweet all right so so we we we've been called by exit boot services and we know we can store our payload um so and how",
    "start": "1357279",
    "end": "1363640"
  },
  {
    "text": "much space we have to store it um so what are we actually going to put there uh and how do we get it called so I'm going answer the first the",
    "start": "1363640",
    "end": "1370760"
  },
  {
    "text": "second question first uh cuz it makes more sense that way fly enough uh so patch a a function in the Kernel's boot",
    "start": "1370760",
    "end": "1376960"
  },
  {
    "text": "process um uh I've chosen to use load init program because at that point most of the",
    "start": "1376960",
    "end": "1383240"
  },
  {
    "text": "subsystems are initialized and we're ready to actually execute the init process so um it's it's everything's",
    "start": "1383240",
    "end": "1388440"
  },
  {
    "text": "pretty well sorted out as far as kernel land goes um so uh we basically just",
    "start": "1388440",
    "end": "1394279"
  },
  {
    "text": "patch um patch a function with typical inline inline hooking technique and we overwrite the first you know eight bytes",
    "start": "1394279",
    "end": "1399520"
  },
  {
    "text": "or whatever of the of the function with a with a relative jump to our payload which is stored in the padding um and",
    "start": "1399520",
    "end": "1405919"
  },
  {
    "text": "then the trampoline payload um basically just you know cuz we've inline hooked it it needs to save the CPU State um Locate",
    "start": "1405919",
    "end": "1412279"
  },
  {
    "text": "the next stage payload somehow whether that's EFI variable in in this case it is like or whatever else um initialize",
    "start": "1412279",
    "end": "1418360"
  },
  {
    "text": "the payload you know it it has some initialization routine to install root kit hooks into into the kernel whatever",
    "start": "1418360",
    "end": "1424279"
  },
  {
    "text": "um restore the patched instruction at the start of the load a IT program function that we've used to jump there",
    "start": "1424279",
    "end": "1429360"
  },
  {
    "text": "uh restore the CPU State uh and jump back to load a IT program which has been fixed up so we can let the kernel",
    "start": "1429360",
    "end": "1435279"
  },
  {
    "text": "continue booting and not crash horribly um yeah so that's pretty much what I just",
    "start": "1435279",
    "end": "1443720"
  },
  {
    "text": "said yeah I same thing uh so uh little screenshot of of the of the code for",
    "start": "1444679",
    "end": "1451240"
  },
  {
    "text": "preparing the uh trampoline function um trampoline payload sorry so what we need",
    "start": "1451240",
    "end": "1456279"
  },
  {
    "text": "to do first is find the load and hit program uh function in the kernel image",
    "start": "1456279",
    "end": "1461480"
  },
  {
    "text": "um so we have to pass the link edit uh segment which contains the symbol table",
    "start": "1461480",
    "end": "1468320"
  },
  {
    "text": "and find the uh find the loading nit program uh function in memory uh and then save the uh save the",
    "start": "1469679",
    "end": "1477320"
  },
  {
    "text": "first eight bytes of that function so that we can restore it later uh calculate a displacement to where our payload is going to be stored in the",
    "start": "1477320",
    "end": "1483640"
  },
  {
    "text": "page alignment padding uh and then you know store the um sorry we also need to",
    "start": "1483640",
    "end": "1489440"
  },
  {
    "text": "uh yeah so calculate displacement to the page to to the payload uh and then overwrite the first sort of uh set of",
    "start": "1489440",
    "end": "1496600"
  },
  {
    "text": "instructions in the in the uh loaded program function with uh our E8 relative jump to our",
    "start": "1496600",
    "end": "1502880"
  },
  {
    "text": "payload and we just copy that into the page padding so sweet so once we're actually in the",
    "start": "1502880",
    "end": "1509200"
  },
  {
    "text": "kernel uh what do we do I won't go into a whole lot of detail about this stuff cuz it's kind of been covered pretty well um over the years as far as um Mac",
    "start": "1509200",
    "end": "1516360"
  },
  {
    "text": "OS colel stuff like Dino do and a whole lot of cool stuff and um uh yeah there",
    "start": "1516360",
    "end": "1522360"
  },
  {
    "text": "there's lots of stuff around um check out fr's blog cuz he's done lots of cool sh cool in that area so we can hook",
    "start": "1522360",
    "end": "1528919"
  },
  {
    "text": "this calls we can install Network colal extension callbacks to get execution when you know um uh packets come in go",
    "start": "1528919",
    "end": "1536440"
  },
  {
    "text": "out um sockets are open sort of stuff uh we install trusted BSD policy handlers",
    "start": "1536440",
    "end": "1542000"
  },
  {
    "text": "um which is a kind of a neat way to get execution in the kernel we can patch all all the things in the kernel whatever we",
    "start": "1542000",
    "end": "1547559"
  },
  {
    "text": "want to do there's plenty of stuff um the example I've used is is a pretty cheesy um like uh Cent hook so uh",
    "start": "1547559",
    "end": "1556840"
  },
  {
    "text": "this this that's what my demonstration later will use so basically just overwrite um the entry and assistent table for the kill sis call and you know",
    "start": "1556840",
    "end": "1562760"
  },
  {
    "text": "when it gets when kill gets called my function gets called instead and then it you know checks for the magic number and Carries",
    "start": "1562760",
    "end": "1570000"
  },
  {
    "text": "On so onto persistence so there's a few options as",
    "start": "1570320",
    "end": "1575399"
  },
  {
    "text": "far as persisting an EFI based um rot kit on a Mac so in ascending order of awesome um we can mess with the",
    "start": "1575399",
    "end": "1581760"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "bootloader which um I'll explain why I think that's the um you know stter list there um",
    "start": "1581760",
    "end": "1588799"
  },
  {
    "text": "we can we can put stuff on the AY system partition which is not particularly useful in this case um actually it's not in ascending water of or so I put them",
    "start": "1588799",
    "end": "1595039"
  },
  {
    "text": "out of order cuz I'm an idiot okay um following that we've got PCI device expansion ROMs which is pretty sweet uh",
    "start": "1595039",
    "end": "1600960"
  },
  {
    "text": "and then firmware flash which is the ultimate goal really so messing with the bootloader um",
    "start": "1600960",
    "end": "1608200"
  },
  {
    "text": "since we're already on dis like that we might as well just patch the kernel or um install a a cal extension root kit I",
    "start": "1608200",
    "end": "1613919"
  },
  {
    "text": "I guess there's a few reasons for not doing that um cuz it is kind of useful for evil M attacks where you know this the the OS partition is encrypted and",
    "start": "1613919",
    "end": "1620559"
  },
  {
    "text": "we've only got access to the recovery partition so we shim you know put an install a shim boot loader that loads the driver and then you know loads the",
    "start": "1620559",
    "end": "1627159"
  },
  {
    "text": "real boot loader and Carries On or something like that so it's it's uh even with 5V uh enabled uh we can we can use",
    "start": "1627159",
    "end": "1633520"
  },
  {
    "text": "that in an attack um so it's all right it's it's it's a decent option but we're on dis so that's yeah whatever um",
    "start": "1633520",
    "end": "1640880"
  },
  {
    "text": "yeah uh the AI system partition is actually not such a great option this probably should have been first since",
    "start": "1640880",
    "end": "1646080"
  },
  {
    "text": "it's one out of 10 um uh as yeah as far as I can tell it's not really used apart from staging firmware",
    "start": "1646080",
    "end": "1651559"
  },
  {
    "text": "updates I don't seem to be able to get any um EFI drivers to be loaded by EFI um off this without using you know my",
    "start": "1651559",
    "end": "1658360"
  },
  {
    "text": "own bootloader um if anyone knows how to do that it'd be awesome um see that kind",
    "start": "1658360",
    "end": "1664600"
  },
  {
    "text": "of sucks um so expansion RMS are awesome because uh yeah so so basically what",
    "start": "1664600",
    "end": "1670720"
  },
  {
    "text": "happens is PCS gets initialized um devices are probed for option ROMs if they have an option ROM they you know",
    "start": "1670720",
    "end": "1676039"
  },
  {
    "text": "their option ROM gets mapped into memory and it gets paed for any drivers you can you know store any AI driver and a bias",
    "start": "1676039",
    "end": "1681120"
  },
  {
    "text": "driver within an option room which is also kind of neat so you can have something that can attack Legacy bias and uh uh EFI yeah pretty cool um then",
    "start": "1681120",
    "end": "1689360"
  },
  {
    "text": "if you use EBC if you're EFI drive you can own everything um so DXE phase loads",
    "start": "1689360",
    "end": "1695799"
  },
  {
    "text": "any drivers that that have been found in in expansion RS so this this is used for for things",
    "start": "1695799",
    "end": "1701559"
  },
  {
    "text": "like um like pixie um uh also like uh Graphics hardware for you know so that",
    "start": "1701559",
    "end": "1706760"
  },
  {
    "text": "the graphics card can provide a drive dri to the BIOS um or or ufi in order to",
    "start": "1706760",
    "end": "1712080"
  },
  {
    "text": "you know for it to communicate with the graphics card in the preo environment and actually you know have graphical",
    "start": "1712080",
    "end": "1717640"
  },
  {
    "text": "console another one that uh is pretty common is like s adapters have you know might have an option R to provide a",
    "start": "1717640",
    "end": "1723000"
  },
  {
    "text": "driver so that the you know discs connected to the sold adapter can be you know communicated with from EFI or from",
    "start": "1723000",
    "end": "1728919"
  },
  {
    "text": "bios so you can boot off them um so it's kind of Hardware specific because we're dependent on um",
    "start": "1728919",
    "end": "1735960"
  },
  {
    "text": "we're dependent on having having a device there that has an uh sorry has a has an option ROM on it um but",
    "start": "1735960",
    "end": "1741159"
  },
  {
    "text": "fortunately a lot a lot of stuff does these days like all the graphics hardware and the iMacs and MacBook Pros um have option RS on board and I I",
    "start": "1741159",
    "end": "1748120"
  },
  {
    "text": "believe um the Intel um gra HD graphics 4,000 whatever chipset that's used in",
    "start": "1748120",
    "end": "1753880"
  },
  {
    "text": "the current MacBook Pros for the integrated and for the all the MacBook airs um actually does have an option r as well I haven't really played around",
    "start": "1753880",
    "end": "1759840"
  },
  {
    "text": "with it too much but um it's a pretty good place to store store our wees um vmw ethernet interfaces do which",
    "start": "1759840",
    "end": "1767679"
  },
  {
    "text": "is is but it's um really useful for testing this kind of stuff um and we can actually write to",
    "start": "1767679",
    "end": "1774679"
  },
  {
    "text": "expansion ROMs from the operating system um quite often using flash ROM um or other uh you know techniques to talk to",
    "start": "1774679",
    "end": "1781120"
  },
  {
    "text": "them um reversing the you know the graphics firm update mechanism is is a",
    "start": "1781120",
    "end": "1786360"
  },
  {
    "text": "good one um so that's that's pretty cool cuz we're we're not we're not storing anything on the disc um we get execution",
    "start": "1786360",
    "end": "1792200"
  },
  {
    "text": "you know before uh the bootload is loaded and all that sort of stuff uh and you pull a disc out erase it whatever",
    "start": "1792200",
    "end": "1797840"
  },
  {
    "text": "it's machine still owned which is pretty pretty cool um so firmware flash uh where where",
    "start": "1797840",
    "end": "1804600"
  },
  {
    "text": "the actual ufi core um stuff is stored is is I guess the the ultimate goal um",
    "start": "1804600",
    "end": "1809799"
  },
  {
    "text": "but Apple actually don't make this easy for you um so it's Hardware specific uh",
    "start": "1809799",
    "end": "1815000"
  },
  {
    "text": "to a certain extent but not quite so much as the uh optionals because everything has to have a firmware flash",
    "start": "1815000",
    "end": "1820080"
  },
  {
    "text": "right it just depends on the chipset that we need to talk to or uh in order to to talk to the Eon via spy to flash",
    "start": "1820080",
    "end": "1827080"
  },
  {
    "text": "it right so uh if we can successfully do this then we can you know troen the SE phase pii DXE like all the core EFI",
    "start": "1827080",
    "end": "1834200"
  },
  {
    "text": "stuff we can you know stick our own custom drivers in whatever you know whatever we want uh again this can be",
    "start": "1834200",
    "end": "1839840"
  },
  {
    "text": "written to from the operating system using flash ROM um in a lot of cases you know where the chipsets are supported um",
    "start": "1839840",
    "end": "1845120"
  },
  {
    "text": "quite a few of them are um on Max I've found so if that works that's pretty pretty sweet um so just a little bit",
    "start": "1845120",
    "end": "1852760"
  },
  {
    "text": "about uh how the firmware update process works um so basically Apple copies uh",
    "start": "1852760",
    "end": "1858000"
  },
  {
    "text": "firmware update uh volumes to to to the ESP uh to the the EFI system partition",
    "start": "1858000",
    "end": "1863399"
  },
  {
    "text": "and then they're written to the flash on a reboot so you know all the machines use a firmware volume that contains the entire you know new firmware image um to",
    "start": "1863399",
    "end": "1869760"
  },
  {
    "text": "write down and just re blesses the disc with uh basically what is a shim boot loader",
    "start": "1869760",
    "end": "1875279"
  },
  {
    "text": "I guess which is the eii updator app um which then writes a new Flash out on on when the machine's rebooted um and then",
    "start": "1875279",
    "end": "1881919"
  },
  {
    "text": "it you know sets the old boot loader back and and reboots again um newer",
    "start": "1881919",
    "end": "1887360"
  },
  {
    "text": "machines used use EFI capsules which is a way of communicating with EFI and passing executable code back to EFI from",
    "start": "1887360",
    "end": "1892760"
  },
  {
    "text": "the operating system so you map you know uh your stuff in a memory uh at a specific address with a specific mailbox",
    "start": "1892760",
    "end": "1899080"
  },
  {
    "text": "format and EFI looks for that when it starts up and you know grabs the drivers in that whatever else and dispatches it",
    "start": "1899080",
    "end": "1905399"
  },
  {
    "text": "and writes it out to the firmware uh so manipulating this firmware uh all of the format of the of",
    "start": "1905399",
    "end": "1912919"
  },
  {
    "text": "the the capsules and uh Thermo volumes and stuff is all specified as part of EFI so there's some nice documentation",
    "start": "1912919",
    "end": "1919320"
  },
  {
    "text": "on how to do it which is pretty good um so a capsule basically just has a firway",
    "start": "1919320",
    "end": "1924399"
  },
  {
    "text": "volume inside it a firway volume has a set of files it's it's just a file system like a flash um file system um",
    "start": "1924399",
    "end": "1930960"
  },
  {
    "text": "there's a bunch of tools around already for manipulating uh like Phoenix and Ami ufi based bioses but they're mostly",
    "start": "1930960",
    "end": "1938039"
  },
  {
    "text": "aimed at doing select mods and um you know pirating windows and uh uh whatever",
    "start": "1938039",
    "end": "1943200"
  },
  {
    "text": "else like uh messing with acpi tables and stuff hackintoshes um so they're not",
    "start": "1943200",
    "end": "1948240"
  },
  {
    "text": "actually very good for actually for replacing drivers in BIOS images um so I had to I kind of had to write my own for",
    "start": "1948240",
    "end": "1953960"
  },
  {
    "text": "that um and another guy um very recently has released a tool for doing this as well which is very cool and worth having",
    "start": "1953960",
    "end": "1960039"
  },
  {
    "text": "a look at um so there's the output of my tool which you know basically just paes the firway volume and spits out all the",
    "start": "1960039",
    "end": "1965639"
  },
  {
    "text": "all the drivers so D you know uh it disassembles the firway volume and pulls out all the drivers uh and recursively",
    "start": "1965639",
    "end": "1971600"
  },
  {
    "text": "so that we can disassemble them and then reassemble a new firmware volume with our own drivers in it as well as all Apple stuff",
    "start": "1971600",
    "end": "1979440"
  },
  {
    "text": "so you can see like the pi modules there and the DXE core um you know sections of the of the BIOS and some",
    "start": "1979440",
    "end": "1986159"
  },
  {
    "text": "drivers um so yeah we basically just want to replace or add a driver in the volume and then write that back to the",
    "start": "1986159",
    "end": "1991360"
  },
  {
    "text": "firmware uh write that back to the flash sorry um with flash ROM or you know however else we want to do it so there's",
    "start": "1991360",
    "end": "1997200"
  },
  {
    "text": "a few problems with that like um someone who used to work at Apple told me that um that Apple's boot ROM like checks the",
    "start": "1997200",
    "end": "2002840"
  },
  {
    "text": "the uh signature on the on the firmware which uh you know stands up to my experimentation uh cuz I bricked a",
    "start": "2002840",
    "end": "2008960"
  },
  {
    "text": "machine riding a Trojan firmware back to to its firmware flash so um and there is",
    "start": "2008960",
    "end": "2014279"
  },
  {
    "text": "a signature block at the very end of the firmware volume um so I guess that's uh yeah that's the way it is um I guess",
    "start": "2014279",
    "end": "2021960"
  },
  {
    "text": "there could be some some other ways to get around that I haven't really looked at looked further into that but like as I as I said before there have been quite a few bugs you know discovered already",
    "start": "2021960",
    "end": "2028240"
  },
  {
    "text": "and um being able to get execution you know uh otherwise so",
    "start": "2028240",
    "end": "2033720"
  },
  {
    "text": "um uh new new Max actually use a right protect flag um pin like properly on on",
    "start": "2033720",
    "end": "2039120"
  },
  {
    "text": "the flash uh some of the old machines like my MacBook um do not so you can actually write to it with flash R from",
    "start": "2039120",
    "end": "2044919"
  },
  {
    "text": "the OS um so if if they do use rotch flag we need to actually write to it from EFI cuz that's where it's done by",
    "start": "2044919",
    "end": "2051079"
  },
  {
    "text": "legitimate firmware updates um so again see the visible things torque so that's",
    "start": "2051079",
    "end": "2056760"
  },
  {
    "text": "what happens when you um do brick a machine um and I had to pull the logic board out and uh uh somehow luck was",
    "start": "2056760",
    "end": "2065040"
  },
  {
    "text": "with me and I managed to write the firway volume that I pulled off off like um back onto the thing with using a bus",
    "start": "2065040",
    "end": "2070638"
  },
  {
    "text": "pirate um and that machine boots again now which is kind of surprising okay so um onto evil ma",
    "start": "2070639",
    "end": "2077679"
  },
  {
    "text": "attacks so there's there's a few um like attack scenarios with evil ma type attacks that we can do with with the AY",
    "start": "2077679",
    "end": "2083599"
  },
  {
    "start": "2080000",
    "end": "2080000"
  },
  {
    "text": "um I guess the the the you know most simple one is we can just you know change the boot Target and boot off",
    "start": "2083599",
    "end": "2088720"
  },
  {
    "text": "something else with a malicious boot loader that you know does some stuff and then continues on you know maybe wres a",
    "start": "2088720",
    "end": "2095440"
  },
  {
    "text": "writes a shim boot loader out to the disc um or flashes an option ROM sticking a payload you know into the",
    "start": "2095440",
    "end": "2101119"
  },
  {
    "text": "option ROM or whatever other the stuff that I've kind of talked about before um I guess we can also remove the disc and",
    "start": "2101119",
    "end": "2106520"
  },
  {
    "text": "write stuff directly to the disc and do any of those things um that's I guess getting harder with with apple gear",
    "start": "2106520",
    "end": "2112000"
  },
  {
    "text": "because they're making it a bit bit more difficult for you to actually get it some of this stuff um you can sort",
    "start": "2112000",
    "end": "2117119"
  },
  {
    "text": "remove the SSD I guess but it's um starting to become a bit of a pain um so there's a new I guess attack Vector um",
    "start": "2117119",
    "end": "2123320"
  },
  {
    "text": "for evil M attacks which is Thunderbolt um so this presents some interesting options for us",
    "start": "2123320",
    "end": "2129440"
  },
  {
    "text": "um so Thunderbolt is a combination of PCI and um display port over one cable",
    "start": "2129440",
    "end": "2136160"
  },
  {
    "text": "so there's a thunderbolt uh controller chip whoops on the on the logic board",
    "start": "2136160",
    "end": "2141560"
  },
  {
    "text": "and then there's a thunderbolt controller chip in the device uh and then everything in between is Thunderbolt and out the other ends is",
    "start": "2141560",
    "end": "2147800"
  },
  {
    "text": "display port and PCI so Thunderbolt does pcie PCI devices as we know have option ROMs uh so we can",
    "start": "2147800",
    "end": "2154720"
  },
  {
    "text": "stick uh malicious staff in option on PCI devices uh sorry on Thunderbolt",
    "start": "2154720",
    "end": "2160359"
  },
  {
    "text": "devices um so my first incarnation of this attack was using uh a a s was it",
    "start": "2160359",
    "end": "2166440"
  },
  {
    "text": "was actually I developed for Express card so I I had a s Express card adapter uh Express card s Express card adapter",
    "start": "2166440",
    "end": "2173640"
  },
  {
    "text": "um which has an option r on board which I wrote a malicious driver to uh and then connected it to my old MacBook Pro",
    "start": "2173640",
    "end": "2180040"
  },
  {
    "text": "via the Express card slot and to my new Macbook Pro or sorry my MacBook Air via the um Thunderbolt port with a",
    "start": "2180040",
    "end": "2185560"
  },
  {
    "text": "thunderbolt 2 Express card adapter and that just electrically goes right through so it's um works pretty well but",
    "start": "2185560",
    "end": "2192440"
  },
  {
    "text": "I thought that was pretty sweet cuz it's a pretty small you know portable little um apparatus for attacking uh for for",
    "start": "2192440",
    "end": "2198400"
  },
  {
    "text": "carrying out an evil mate attack right but it gets better so Apple releases their new machines and they've",
    "start": "2198400",
    "end": "2205119"
  },
  {
    "text": "got these little condol to ethernet adapters um so these these guys have like a broadcom BCM 577 something",
    "start": "2205119",
    "end": "2212079"
  },
  {
    "text": "chipset on board which has an has an expansion room on board to store the pixie firmware um and also settings and",
    "start": "2212079",
    "end": "2218240"
  },
  {
    "text": "stuff for the for the ethernet chip set right so um pretty typical ethernet chip set but I was stoked that it actually",
    "start": "2218240",
    "end": "2223960"
  },
  {
    "text": "has an option on there so the process um for carrying out",
    "start": "2223960",
    "end": "2231560"
  },
  {
    "text": "this kind of attack I guess would be something like this we um we attach the adapter um we power on the system uh the",
    "start": "2231560",
    "end": "2239680"
  },
  {
    "text": "driver is loaded from the from the option r on the adapter and then the driver deploys it payload whether that's flashing another option r on something",
    "start": "2239680",
    "end": "2245880"
  },
  {
    "text": "on board um riding to the firmware flash right to the disc whatever few",
    "start": "2245880",
    "end": "2251040"
  },
  {
    "text": "options um and all of that happens before the file Vol like past phrase entry screen is popped up by the boot",
    "start": "2251040",
    "end": "2256599"
  },
  {
    "text": "loader so it it happens in like seconds when the machine's powered on so it's a pretty sweet attack",
    "start": "2256599",
    "end": "2263680"
  },
  {
    "text": "Vector so if you have a look at the um the lspci output there you can see the expansion R and when I saw that I was like",
    "start": "2263680",
    "end": "2269680"
  },
  {
    "text": "yes so good um so we we can build an eii um like option R image um with the eii r",
    "start": "2269680",
    "end": "2276520"
  },
  {
    "text": "utility that's part of the edk um I'm not sure why I use those um PCI device",
    "start": "2276520",
    "end": "2282839"
  },
  {
    "text": "identifier and manufacturer identifier I think that's what the original option like pixie firmware had is that which",
    "start": "2282839",
    "end": "2289319"
  },
  {
    "text": "doesn't match the chipset but the the um U broadcom actually provide a nice little flasher utility for riding the",
    "start": "2289319",
    "end": "2294920"
  },
  {
    "text": "pixie firway down and that seemed to like those um IDs so that was fine so we created our option R image um we boot it",
    "start": "2294920",
    "end": "2302160"
  },
  {
    "text": "into fros on on a Mac which is hilarious um and use the the little broadcom flashy U ility to um so we have to have",
    "start": "2302160",
    "end": "2308960"
  },
  {
    "text": "this connected at boot time um so it's on the PCI bus when uh dos you know boots up uh and then we can Flash the um",
    "start": "2308960",
    "end": "2315960"
  },
  {
    "text": "driver down to the to the option r on on board the uh ethernet adapter um yeah so that's pretty cool so",
    "start": "2315960",
    "end": "2324319"
  },
  {
    "text": "I'm going to show you a couple of couple of quick demos um I've gone through everything really quickly because we're running out of time um and I think I'm",
    "start": "2324319",
    "end": "2331200"
  },
  {
    "text": "doing okay so going show you a couple quick demos um although I'll leave the Thunderbolt one till later cuz I got to reboot my machine but but um so I I'll",
    "start": "2331200",
    "end": "2338640"
  },
  {
    "text": "show you a quick demo of just like a base keyboard made attack using USB um that just without even um you know",
    "start": "2338640",
    "end": "2344200"
  },
  {
    "text": "writing anything down just a once off like um patching the kernel so we boot from a USB flash uh flash drive uh which",
    "start": "2344200",
    "end": "2351920"
  },
  {
    "text": "has on it a malicious boot loader like a shim boot loader that basically just loads a driver that's adjacent to it on",
    "start": "2351920",
    "end": "2358440"
  },
  {
    "text": "the flash dis uh and then inspects the EnV Ram um to work out where the system should be booting from um Locate that",
    "start": "2358440",
    "end": "2365400"
  },
  {
    "text": "disc uh find the bootloader on that disc uh and then execute it right so in the",
    "start": "2365400",
    "end": "2371079"
  },
  {
    "text": "meantime the driver is registered for exit boot Services call back and then when it does get called back into it patches the kernel kind of as discussed",
    "start": "2371079",
    "end": "2379759"
  },
  {
    "text": "before so hopefully this works okay on this guy",
    "start": "2380480",
    "end": "2386400"
  },
  {
    "text": "oh that way",
    "start": "2386400",
    "end": "2390240"
  },
  {
    "text": "all",
    "start": "2397480",
    "end": "2399640"
  },
  {
    "text": "right pretty secure um so what I'm going to do is uh attach",
    "start": "2403119",
    "end": "2411599"
  },
  {
    "text": "the uh I've already done it attach the USB flash drive into the VM here going to demonstrate on VM I so I don't have to reboot my machine again um so I'll",
    "start": "2411599",
    "end": "2419480"
  },
  {
    "text": "reboot the VM",
    "start": "2419480",
    "end": "2422920"
  },
  {
    "text": "and uh hold down the option key to boot into the uh boot menu here and that's uh",
    "start": "2427480",
    "end": "2433760"
  },
  {
    "text": "VMI firmware so looks slightly different to Apple's boot menu",
    "start": "2433760",
    "end": "2440240"
  },
  {
    "text": "um and it hasn't seen my USB drive for some reason so try again seems a bit",
    "start": "2440480",
    "end": "2446240"
  },
  {
    "text": "flaky with that",
    "start": "2446240",
    "end": "2449760"
  },
  {
    "text": "okay",
    "start": "2460560",
    "end": "2463119"
  },
  {
    "text": "whatever thanks VMware it does this thing where it",
    "start": "2478760",
    "end": "2484640"
  },
  {
    "text": "doesn't actually enter the boot menu and just boots from the first device on time so I'm just going to try this one more time okay",
    "start": "2484640",
    "end": "2492759"
  },
  {
    "text": "so okay so we mov from the USB uh flash drive which you saw very quickly there",
    "start": "2509240",
    "end": "2515240"
  },
  {
    "text": "flash up um something it looked like BL output which was just the um the driver getting its exit boot Services call back",
    "start": "2515240",
    "end": "2521560"
  },
  {
    "text": "and then patching the kernel so now the Kernel's continuing to boot I've got it in theose mode because I always do um",
    "start": "2521560",
    "end": "2527760"
  },
  {
    "text": "and once we have the VM actually start up",
    "start": "2527760",
    "end": "2534720"
  },
  {
    "text": "um it's got our little rot kit command line thing here and we um call the hook Tull and hopefully get a root shell so",
    "start": "2537160",
    "end": "2545280"
  },
  {
    "text": "yeah",
    "start": "2545280",
    "end": "2548280"
  },
  {
    "text": "so let's um let's basically just use the technique that we talked about before with um uh like sticking a payload into",
    "start": "2552400",
    "end": "2559680"
  },
  {
    "text": "uh page alignment padding that jumps off to another payload in the FI variable and patches the kernel and all that",
    "start": "2559680",
    "end": "2565520"
  },
  {
    "text": "stuff so yeah sweet I'm glad that worked patching kernels in demos",
    "start": "2565520",
    "end": "2574838"
  },
  {
    "text": "okay um so I'm going to do another demo but I'll do it at the end just because I I have to reboot my machine so I'm going",
    "start": "2578880",
    "end": "2584160"
  },
  {
    "text": "to demonstrate the same thing um using a thunderbolt adapter and it's going to be a weird there cuz you won't see some of it happen because it happens on my",
    "start": "2584160",
    "end": "2590520"
  },
  {
    "text": "screen not on the projector but whatever um so in case my demo didn't work um there's a screenshot of my boot screen",
    "start": "2590520",
    "end": "2596920"
  },
  {
    "text": "so I finally got my preo graphics working and my friend who's an artist drew that for me cuz he's a Legend um so",
    "start": "2596920",
    "end": "2602000"
  },
  {
    "text": "that's my my Rook called the file um and then there's the the kernel patch screen",
    "start": "2602000",
    "end": "2607119"
  },
  {
    "text": "screen that you saw flash out really quickly so um a few defensive measures",
    "start": "2607119",
    "end": "2612520"
  },
  {
    "start": "2611000",
    "end": "2611000"
  },
  {
    "text": "um because I guess we have to talk about defensive measures um so EFI firmware password um",
    "start": "2612520",
    "end": "2620400"
  },
  {
    "text": "doesn't do a whole lot um basically um for those who don't know it it like uh",
    "start": "2620400",
    "end": "2625680"
  },
  {
    "text": "you you set an fi firmware password and it stops you from um changing the boot the boot Target right so you you can't",
    "start": "2625680",
    "end": "2632359"
  },
  {
    "text": "if you hold down the option key to go to the boot menu you can't do that you can't Bo it from the network or whatever so you into the firmware password",
    "start": "2632359",
    "end": "2637760"
  },
  {
    "text": "um so it does prevent those kind of USB or network or fire wire or whatever based evil M attacks um but it doesn't",
    "start": "2637760",
    "end": "2643800"
  },
  {
    "text": "prevent driving uh loading drivers of a thunderbolt because they just get loaded um you know anything connected to the",
    "start": "2643800",
    "end": "2650520"
  },
  {
    "text": "PCI bus gets enumerated uh and option ROMs loaded from regardless of the firmly password so it doesn't change",
    "start": "2650520",
    "end": "2655960"
  },
  {
    "text": "anything um there are also a few ways to remove them on on various machines like",
    "start": "2655960",
    "end": "2661079"
  },
  {
    "text": "you can reset the the NV Ram entirely um with like some weird tricks with remove",
    "start": "2661079",
    "end": "2667520"
  },
  {
    "text": "like one of the RAM sticks and hold you know um stand on your head and hold down command option PR or whatever um I guess",
    "start": "2667520",
    "end": "2675119"
  },
  {
    "text": "that's kind of hard with current Max because it's all sold it on so I don't know if that's really a defensive measure or not um but yeah like set one",
    "start": "2675119",
    "end": "2683000"
  },
  {
    "text": "but it doesn't really protect you um from from that much um ufi secure boot",
    "start": "2683000",
    "end": "2688680"
  },
  {
    "text": "is is pretty cool I guess um I'm not going to go too deeply into it but it's it's basically just driver signing for",
    "start": "2688680",
    "end": "2693880"
  },
  {
    "text": "for EFI so um uh there's a a a set of um Keys stored in uh NV Ram um that are",
    "start": "2693880",
    "end": "2702400"
  },
  {
    "text": "used to to uh to verify the the uh vendor signatures on on the drivers at",
    "start": "2702400",
    "end": "2707599"
  },
  {
    "text": "boot times the DXE phase when it loads a driver um from an option r or from whatever checks the signature and",
    "start": "2707599",
    "end": "2712720"
  },
  {
    "text": "doesn't loaded if it's not you know signed by Apple or whoever uh and then the BDS phase does",
    "start": "2712720",
    "end": "2717960"
  },
  {
    "text": "the same thing when it loads boot loaders so it won't load an unsigned boot loader um obviously this has been a big um you know kafuffle about this with",
    "start": "2717960",
    "end": "2725760"
  },
  {
    "text": "with Linux and Microsoft and requiring secure boot for Windows 8 whatever um stuff so yeah it's all interesting um so",
    "start": "2725760",
    "end": "2732119"
  },
  {
    "text": "there's a few issues with that I guess um so that the spec States the public key must be stored in a nonvolatile",
    "start": "2732119",
    "end": "2737480"
  },
  {
    "text": "storage which is tamper and delete resistant and that doesn't really describe the current NV Ram situation um",
    "start": "2737480",
    "end": "2743200"
  },
  {
    "text": "as I kind of was was uh uh alluding to with the the uh RAM reset tricks and",
    "start": "2743200",
    "end": "2748640"
  },
  {
    "text": " um so if if we can Flash the NV around back to back to empty well then",
    "start": "2748640",
    "end": "2753880"
  },
  {
    "text": "you know we can probably the system is back to set what you know f i call setup mode so we can boot anything so it's",
    "start": "2753880",
    "end": "2759480"
  },
  {
    "text": "secure boot disabled um also signing really needs to be enforced through the whole stack because if we can load",
    "start": "2759480",
    "end": "2765559"
  },
  {
    "text": "kernel drivers then you know we can probably um you know mess with with stuff pretty pretty severely still and",
    "start": "2765559",
    "end": "2771680"
  },
  {
    "text": "and you know flash firmware flash option RS and um potentially do other things especially if there's Keys you know",
    "start": "2771680",
    "end": "2777319"
  },
  {
    "text": "stored in the kernel for adding adding uh you know new images to wheless and whatever else we can just add our own images to the wireless but I believe you",
    "start": "2777319",
    "end": "2783559"
  },
  {
    "text": "know most vendors will probably just send our new signed updates um so yeah that's that's that's the bulk",
    "start": "2783559",
    "end": "2790680"
  },
  {
    "start": "2787000",
    "end": "2787000"
  },
  {
    "text": "of it I guess um there's there's a few measures some measures you can take I guess um against these kinds of attacks",
    "start": "2790680",
    "end": "2796720"
  },
  {
    "text": "like use an EFI password cuz it's you know kind of stop some things um yeah I",
    "start": "2796720",
    "end": "2802800"
  },
  {
    "text": "guess GL all your ports shut it's probably probably worthwhile um uh I",
    "start": "2802800",
    "end": "2808200"
  },
  {
    "text": "think Apple should Implement secure Boot and I think their best place to do it of any vendor because you know they they",
    "start": "2808200",
    "end": "2813359"
  },
  {
    "text": "have a you know homogeneous environment where they know about all the hardware and they know about all theof software you know effectively apart from those",
    "start": "2813359",
    "end": "2819440"
  },
  {
    "text": "weirdos that run Linux on their Maxs bare metal um or Windows even worse",
    "start": "2819440",
    "end": "2825160"
  },
  {
    "text": "um so yeah I I guess the other thing that they could do um is uh disable",
    "start": "2825160",
    "end": "2830960"
  },
  {
    "text": "loading option ROMs or drivers from option ROMs uh off bus expansions so like off Express card and and and",
    "start": "2830960",
    "end": "2836559"
  },
  {
    "text": "Thunderbolt devices and and anything outside the case basically which would be a reasonable stop Gap cuz",
    "start": "2836559",
    "end": "2841960"
  },
  {
    "text": "implementing secure is going to be you know pretty difficult and not difficult but like it's it's it's a pretty big under taken compared to like that sort",
    "start": "2841960",
    "end": "2848480"
  },
  {
    "text": "of thing I think the EFI code needs a good solid audit um because people have already demonstrated that there are",
    "start": "2848480",
    "end": "2853680"
  },
  {
    "text": "going to be some sweet code ex execution bugs in there uh and it's a big code base so there's plenty of places for",
    "start": "2853680",
    "end": "2860319"
  },
  {
    "text": "bugs um yeah so there's some references uh for you know the EFI specification",
    "start": "2860319",
    "end": "2866040"
  },
  {
    "start": "2862000",
    "end": "2862000"
  },
  {
    "text": "and all that stuff um slides will be up online and you probably got them on a CD although they'll be an older version but they'll be up online if you want to",
    "start": "2866040",
    "end": "2871920"
  },
  {
    "text": "check those out and um yeah that's pretty much it I guess so I'll show you",
    "start": "2871920",
    "end": "2877599"
  },
  {
    "text": "the um the the little Thunderbolt demo quickly",
    "start": "2877599",
    "end": "2882200"
  },
  {
    "text": "so so what I'm going to do I have to actually disconnect the display because I'm going to plug the Thunderbolt adapter into the one Thunderbolt port on",
    "start": "2883640",
    "end": "2890359"
  },
  {
    "text": "my macare um so I'm going to plug this little guy into",
    "start": "2890359",
    "end": "2896359"
  },
  {
    "text": "here um I've got I've got a a better demo",
    "start": "2896359",
    "end": "2904000"
  },
  {
    "text": "like actually that actually does infect the machine but I don't really want to mess with my brand new Macbook Air too much so I'm going to just use the same",
    "start": "2904000",
    "end": "2910400"
  },
  {
    "text": "payload as as I just demonstrated so rebooting my machine and",
    "start": "2910400",
    "end": "2915720"
  },
  {
    "text": "um uh so it it'll load the um the same driver that I just uh load demonstrated",
    "start": "2915720",
    "end": "2920760"
  },
  {
    "text": "loading off the USB flash drive off this little guy um so",
    "start": "2920760",
    "end": "2927359"
  },
  {
    "text": "maybe come on all whatever oh cool I panicked my machine",
    "start": "2927359",
    "end": "2934880"
  },
  {
    "text": "good I I had even booted at that point okay yeah so powering it on and of",
    "start": "2934880",
    "end": "2943680"
  },
  {
    "text": "course you can see that cuz there's a big light shining on me so that's really helpful um so it's yeah it's going to",
    "start": "2943680",
    "end": "2949520"
  },
  {
    "text": "boot up and load the device",
    "start": "2949520",
    "end": "2953799"
  },
  {
    "text": "driver no I haven't really um I know they they they all kind of have their own um uh implementations uh of of a",
    "start": "2959200",
    "end": "2966880"
  },
  {
    "text": "like VM stuff is pretty heavily modified and they're really helpful with um with telling me how to do things on their forums and stuff but",
    "start": "2966880",
    "end": "2973640"
  },
  {
    "text": "um yeah um I I haven't looked at parallels at all I think virtual box has their own implementation as",
    "start": "2973640",
    "end": "2981040"
  },
  {
    "text": "well we go Fels patched all",
    "start": "2981040",
    "end": "2985799"
  },
  {
    "text": "right thanks very much guys any any other questions",
    "start": "2986440",
    "end": "2992200"
  }
]