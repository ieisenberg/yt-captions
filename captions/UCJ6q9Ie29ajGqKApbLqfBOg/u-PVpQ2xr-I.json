[
  {
    "text": "all right hello everyone so today we're gonna talk about the live alt ego using http alternative services",
    "start": "3040",
    "end": "12000"
  },
  {
    "text": "wait a second that doesn't seem right this is black hat isn't it don't we just do evil things at",
    "start": "12000",
    "end": "18560"
  },
  {
    "text": "black hat let me change that and correct this one second",
    "start": "18560",
    "end": "25359"
  },
  {
    "text": "aha that looks much better so today we're gonna talk about the evil altico",
    "start": "25760",
    "end": "30880"
  },
  {
    "text": "and we're going to abuse http alternative services just like the black cat way so",
    "start": "30880",
    "end": "38640"
  },
  {
    "text": "this is a joint work by me trishita professor trachtenberg and professor",
    "start": "38640",
    "end": "45600"
  },
  {
    "text": "starbinz all right so take it away professor trachtenberg",
    "start": "45600",
    "end": "51440"
  },
  {
    "text": "okay so here's your mission you have your web server and your web server gets traffic from",
    "start": "51440",
    "end": "56719"
  },
  {
    "text": "all kinds of different devices and over various different protocols and what you'd like to do is",
    "start": "56719",
    "end": "62800"
  },
  {
    "text": "move content from different protocols to different servers that handle that specific protocol",
    "start": "62800",
    "end": "68720"
  },
  {
    "text": "so if you have for example http one traffic you want it to go to one particular server if you have quick",
    "start": "68720",
    "end": "73920"
  },
  {
    "text": "traffic you'd like it to go to a different server how do you adapt your current web server architecture to",
    "start": "73920",
    "end": "79200"
  },
  {
    "text": "deal with this but wait i'm gonna make things easier i'm gonna give you",
    "start": "79200",
    "end": "84880"
  },
  {
    "text": "the your choice of anyone in high tech the the stars of the field you can pick",
    "start": "84880",
    "end": "91119"
  },
  {
    "text": "them for your particular mission okay you can pick anyone you want from google microsoft whatever companies",
    "start": "91119",
    "end": "97040"
  },
  {
    "text": "you feel are valuable and by the way here are four people that we thought of see if you can name them in the chat for",
    "start": "97040",
    "end": "103920"
  },
  {
    "text": "brownie points that mean absolutely nothing but uh might be interesting anyway okay",
    "start": "103920",
    "end": "111200"
  },
  {
    "text": "so can you do it well luckily http has some ability to handle",
    "start": "111200",
    "end": "118320"
  },
  {
    "text": "some of these issues okay http started in 1996 with http 1.0",
    "start": "118320",
    "end": "125360"
  },
  {
    "text": "and very simple headers so when you send a request to web server you could specify a host name",
    "start": "125360",
    "end": "132080"
  },
  {
    "text": "a referrer which page referred you to this particular location your user agent what browser you're",
    "start": "132080",
    "end": "137280"
  },
  {
    "text": "using and as with all software as people started using",
    "start": "137280",
    "end": "143440"
  },
  {
    "text": "http http developed additions to handle things like caching",
    "start": "143440",
    "end": "148959"
  },
  {
    "text": "dynamic content request multiplexing and what's the result the result is that",
    "start": "148959",
    "end": "155440"
  },
  {
    "text": "we have lots and lots of work to do lots of potential for abuse and security vulnerabilities",
    "start": "155440",
    "end": "163920"
  },
  {
    "text": "okay in fact http is 23 years old this year it has seen its share of uh",
    "start": "163920",
    "end": "171519"
  },
  {
    "text": "all kinds of vulnerabilities over those 23 years and in fact what we want to show in this particular",
    "start": "171519",
    "end": "177440"
  },
  {
    "text": "presentation is that it's still really hard to introduce secure protocol updates even for things that",
    "start": "177440",
    "end": "184400"
  },
  {
    "text": "look dead simple like differentiating",
    "start": "184400",
    "end": "189440"
  },
  {
    "text": "protocols into uh to different server locations so speaking of updates in the http land",
    "start": "189440",
    "end": "196959"
  },
  {
    "text": "we have this new update called alternative services and this is in described in detail in",
    "start": "196959",
    "end": "204720"
  },
  {
    "text": "rfc 7838 if you want to read it up okay so in a nutshell what is",
    "start": "204720",
    "end": "210480"
  },
  {
    "text": "alternative services or alt svc for short um it's yet another http",
    "start": "210480",
    "end": "216400"
  },
  {
    "text": "header yay okay um what does this header do so in short it allows a website to specify",
    "start": "216400",
    "end": "224239"
  },
  {
    "text": "an equivalent alternate endpoint now that was a mouthful what does this even mean",
    "start": "224239",
    "end": "229680"
  },
  {
    "text": "so let's take a look at what this actually means so we have the following setup where we",
    "start": "229680",
    "end": "235040"
  },
  {
    "text": "have a client browser and we have two entities um both of them are web servers one is",
    "start": "235040",
    "end": "241760"
  },
  {
    "text": "original.com and one is alt.com now let's say that the client browser wants to visit this webpage",
    "start": "241760",
    "end": "247519"
  },
  {
    "text": "original.com said loads https original.com in the in this web browser",
    "start": "247519",
    "end": "254159"
  },
  {
    "text": "and um sends a http request to original.com original.com as soon as",
    "start": "254159",
    "end": "262079"
  },
  {
    "text": "it gets the http request responds with the html contents of the webpage and also responds with some http",
    "start": "262079",
    "end": "269680"
  },
  {
    "text": "response headers as expected and one of the headers is this interesting alt svc header",
    "start": "269680",
    "end": "275600"
  },
  {
    "text": "and this whole svc header is pointed to alt.com at port 443 now what",
    "start": "275600",
    "end": "282560"
  },
  {
    "text": "original.com is essentially trying to tell the client browser through this is that alt.com is an equivalent",
    "start": "282560",
    "end": "289360"
  },
  {
    "text": "endpoint for original.com so what it's saying is that the next time the client browser wants to load",
    "start": "289360",
    "end": "295360"
  },
  {
    "text": "anything from original.com it could choose to either go through original.com or alt.com depending on its preference",
    "start": "295360",
    "end": "303120"
  },
  {
    "text": "and so as soon as the client browser gets this alt svc header it immediately",
    "start": "303120",
    "end": "308240"
  },
  {
    "text": "tries to verify whether alt.com is indeed an equivalent endpoint for original.com so it tries to",
    "start": "308240",
    "end": "314639"
  },
  {
    "text": "connect to alt.com over a secure channel and asks alt.com to present its",
    "start": "314639",
    "end": "321680"
  },
  {
    "text": "certificate and alt.com presents a certificate in the name of original.com now why",
    "start": "321680",
    "end": "329680"
  },
  {
    "text": "on earth would you ask would alt.com present a certificate in the name of original.com",
    "start": "329680",
    "end": "335919"
  },
  {
    "text": "well this is kind of important because um showing that it has a valid certificate",
    "start": "335919",
    "end": "342400"
  },
  {
    "text": "in the name of original.com is a proof that alt.com is indeed in fact an equivalent endpoint for",
    "start": "342400",
    "end": "348720"
  },
  {
    "text": "original.com it's kind of like a security check and the client browser needs to see",
    "start": "348720",
    "end": "354240"
  },
  {
    "text": "this certificate in the right domain name of original.com to be convinced",
    "start": "354240",
    "end": "359520"
  },
  {
    "text": "that all.com is indeed a valid alt scc endpoint and once it sees this certificate that's",
    "start": "359520",
    "end": "366000"
  },
  {
    "text": "valid it'll cache this mapping and by what by that i mean the next time uh the client loads",
    "start": "366000",
    "end": "373759"
  },
  {
    "text": "all uh wants to load any content from original.com it can choose either website either web",
    "start": "373759",
    "end": "381440"
  },
  {
    "text": "server to go to it could either load the stuff from original.com or alt.com and this kind of happens",
    "start": "381440",
    "end": "387360"
  },
  {
    "text": "in the background so even though in the url bar you type in https original.com in the",
    "start": "387360",
    "end": "394240"
  },
  {
    "text": "background your browser can choose to go to either one of the web servers original.com and alt.r alt.com and you",
    "start": "394240",
    "end": "402319"
  },
  {
    "text": "wouldn't know the difference so that's what happened so this mapping is now cached and",
    "start": "402319",
    "end": "408240"
  },
  {
    "text": "in the future either of the web servers could be used okay what happens if alt.com doesn't",
    "start": "408240",
    "end": "416080"
  },
  {
    "text": "present the right certificate let's say alt.com presents a certificate not in the name of original.com but in the name",
    "start": "416080",
    "end": "423280"
  },
  {
    "text": "of alt.com so it presents a certificate with the domain name of alt.com",
    "start": "423280",
    "end": "428560"
  },
  {
    "text": "well then the client browser is not convinced that these are that these two are in fact equivalent",
    "start": "428560",
    "end": "434160"
  },
  {
    "text": "endpoints and so it does not cache the mapping and now what this means",
    "start": "434160",
    "end": "439199"
  },
  {
    "text": "is that in the future when uh the user wants to load stuff from original.com it will only use",
    "start": "439199",
    "end": "446319"
  },
  {
    "text": "original.com and not use alt.com because it doesn't trust that alt.com is actually a valid",
    "start": "446319",
    "end": "453840"
  },
  {
    "text": "and equivalent endpoint for original.com since it did not present the correct certificate so if the",
    "start": "453840",
    "end": "461440"
  },
  {
    "text": "certificate is right this mapping between original.com and alt.com is cached if not then it's not cached",
    "start": "461440",
    "end": "469199"
  },
  {
    "text": "and that is essentially how the alt cc header works okay let's take a look a g-rated look at",
    "start": "469199",
    "end": "476879"
  },
  {
    "text": "the anatomy of an alt services header you start with the protocol which could",
    "start": "476879",
    "end": "483520"
  },
  {
    "text": "be http 1.1 quick h2c ftp what have you",
    "start": "483520",
    "end": "488560"
  },
  {
    "text": "then the domain to which you would like to transfer control so the user types in a particular domain",
    "start": "488560",
    "end": "494240"
  },
  {
    "text": "the alternative services header says if you're using this protocol go to this other domain and this port 123 in this",
    "start": "494240",
    "end": "501680"
  },
  {
    "text": "case and each alternative service header has a",
    "start": "501680",
    "end": "506879"
  },
  {
    "text": "maximum amount of time maximum age that this header should be valid ideally it should",
    "start": "506879",
    "end": "512159"
  },
  {
    "text": "be taken out of the cache after this number of seconds alternative services are used",
    "start": "512159",
    "end": "518399"
  },
  {
    "text": "for things like load balancing if you have a lot of different clients and you'd want to balance easily client segmentation segmenting",
    "start": "518399",
    "end": "526959"
  },
  {
    "text": "clients into different classes and advertising endpoints with new protocols okay so if you have a",
    "start": "526959",
    "end": "532959"
  },
  {
    "text": "different protocol that does something different rather than having one server handle all the different protocols you can have different servers and you",
    "start": "532959",
    "end": "539200"
  },
  {
    "text": "can actually use alternative services to handle it on the client side without needing to",
    "start": "539200",
    "end": "544480"
  },
  {
    "text": "handle the machinery on the server side we identified five vulnerabilities of",
    "start": "544480",
    "end": "550560"
  },
  {
    "text": "alternative services a number of them currently have cves",
    "start": "550560",
    "end": "555760"
  },
  {
    "text": "so the first one is port scanning you can use alternative services to scan ports that",
    "start": "555760",
    "end": "561760"
  },
  {
    "text": "are accessible from the victim machine so even if the victim is behind a firewall this allows you to scan",
    "start": "561760",
    "end": "568399"
  },
  {
    "text": "other machines that are accessible only within the firewall this also allows you to scan the victim's machine itself",
    "start": "568399",
    "end": "577200"
  },
  {
    "text": "distributed denial of service by having alternative service redirect on",
    "start": "577200",
    "end": "582320"
  },
  {
    "text": "your browser on your web page you can get connecting devices to",
    "start": "582320",
    "end": "588160"
  },
  {
    "text": "transfer access to a particular site that you're trying to target",
    "start": "588160",
    "end": "593760"
  },
  {
    "text": "history exfiltration trying to identify uh which sites a victim has visited tracking",
    "start": "593760",
    "end": "600800"
  },
  {
    "text": "trying to track a victim as they go from one i i isp to another so if they're in a cafe",
    "start": "600800",
    "end": "608240"
  },
  {
    "text": "and then they move to another location you can use alternative services and what has been cached to identify",
    "start": "608240",
    "end": "615680"
  },
  {
    "text": "and fingerprint the same device and last but not least malware bypass a",
    "start": "615680",
    "end": "621920"
  },
  {
    "text": "malware protection bypass where you can bypass some of the simple malware defenses that are already set up",
    "start": "621920",
    "end": "629920"
  },
  {
    "text": "in current browsers we have two possible case models that we",
    "start": "629920",
    "end": "635360"
  },
  {
    "text": "consider in our work the first one is when an attacker controls only a website",
    "start": "635360",
    "end": "640560"
  },
  {
    "text": "so there's a website the attacker controls it and victims connect to that website a slightly more sophisticated attacker",
    "start": "640560",
    "end": "647920"
  },
  {
    "text": "also gets to monitor victim network traffic and this is an attacker that for example could be someone who owns a router",
    "start": "647920",
    "end": "656160"
  },
  {
    "text": "or a wi-fi spot in a cafe airport something that provides free",
    "start": "656160",
    "end": "662480"
  },
  {
    "text": "wi-fi and there the attacker might control the remote site but also has access to the",
    "start": "662480",
    "end": "667760"
  },
  {
    "text": "victims network traffic for the purposes of this presentation we'll look only at case one just since we have",
    "start": "667760",
    "end": "675839"
  },
  {
    "text": "a limited amount of time now you might ask why is this so bad so",
    "start": "675839",
    "end": "681839"
  },
  {
    "text": "okay you can cause some damage with alternative services what does it matter well one of the key",
    "start": "681839",
    "end": "687440"
  },
  {
    "text": "things is that the alternative services header gets managed below the",
    "start": "687440",
    "end": "692480"
  },
  {
    "text": "the user's access to the browser level what i mean by that is the victim does not actually see that",
    "start": "692480",
    "end": "698240"
  },
  {
    "text": "they're being transferred to a different domain and in fact this different domain",
    "start": "698240",
    "end": "704480"
  },
  {
    "text": "transfer is not even visible to javascript so it cannot be detected using javascript",
    "start": "704480",
    "end": "709839"
  },
  {
    "text": "detection mechanism no user interaction is required to affect the alternative service",
    "start": "709839",
    "end": "717680"
  },
  {
    "text": "transition and it's thus also mountable by a third party website that might be on an existing site okay",
    "start": "717680",
    "end": "726000"
  },
  {
    "text": "so this is particularly insidious the victim unless they're going into the internals on their",
    "start": "726000",
    "end": "731519"
  },
  {
    "text": "operating system if they're just using their browser like most people do has no idea that they're actually being",
    "start": "731519",
    "end": "737040"
  },
  {
    "text": "transferred to a different location all right so now let's go over our first",
    "start": "737040",
    "end": "743360"
  },
  {
    "text": "attack which is port scanning cve 2019 11728",
    "start": "743360",
    "end": "749680"
  },
  {
    "text": "now what is this attack all about so this attack is all about distributed sport scanning from the context of the",
    "start": "749680",
    "end": "756079"
  },
  {
    "text": "browser now what does that even mean so that basically means that as an attacker i can get whatever",
    "start": "756079",
    "end": "763760"
  },
  {
    "text": "victims that i have that visit my website through their browsers to do the port scanning",
    "start": "763760",
    "end": "769279"
  },
  {
    "text": "for me now the setup in this attack looks like the following so there's a victim on their browser and there's an",
    "start": "769279",
    "end": "775519"
  },
  {
    "text": "attacker who has a web server for evil.com and then the attacker somehow gets the victim to visit their",
    "start": "775519",
    "end": "782240"
  },
  {
    "text": "web page http now as soon as the um victim visits the webpage the",
    "start": "782240",
    "end": "790240"
  },
  {
    "text": "attacker then sends that the http response which contains the contents of the web",
    "start": "790240",
    "end": "796079"
  },
  {
    "text": "page obviously and also an alt svc header now the attacker cleverly sets the alt",
    "start": "796079",
    "end": "803680"
  },
  {
    "text": "svc header to point to whatever ip address and port that the attacker wants to do",
    "start": "803680",
    "end": "810160"
  },
  {
    "text": "the port scanning off so in this case the attacker wants to know if",
    "start": "810160",
    "end": "815760"
  },
  {
    "text": "port 25 on the victim's uh machine is open or closed so it sets the alt scc",
    "start": "815760",
    "end": "821680"
  },
  {
    "text": "to this interesting value of localhost port 25. now what does this even mean this",
    "start": "821680",
    "end": "828560"
  },
  {
    "text": "basically means that the attacker is telling the victim",
    "start": "828560",
    "end": "833839"
  },
  {
    "text": "that it has on its own machine an alternative endpoint for evil.com",
    "start": "833839",
    "end": "840959"
  },
  {
    "text": "that's literally what it's telling it through the alt svc header now the victim's browser doesn't",
    "start": "840959",
    "end": "846160"
  },
  {
    "text": "know any better so it'll just go through the routine checkup and verify and try to verify this",
    "start": "846160",
    "end": "852480"
  },
  {
    "text": "endpoint and see if it indeed is an a valid alternative endpoint for",
    "start": "852480",
    "end": "857680"
  },
  {
    "text": "evil.com so it will then try to connect to localhost port 25 so it will connect to",
    "start": "857680",
    "end": "862880"
  },
  {
    "text": "port 25 on the the own the victim's own machine and in doing so it will then realize whether",
    "start": "862880",
    "end": "869440"
  },
  {
    "text": "the port 25 is closed or open so in this case we have two scenarios",
    "start": "869440",
    "end": "875360"
  },
  {
    "text": "so scenario number one is when the port is closed and the second scenario is when the port is",
    "start": "875360",
    "end": "880720"
  },
  {
    "text": "open and for your reference the time axis moves downwards as you can",
    "start": "880720",
    "end": "885920"
  },
  {
    "text": "see on your right all right so let's go over scenario one so if the",
    "start": "885920",
    "end": "892000"
  },
  {
    "text": "port 25 is closed on the victim's machine what happens when the victim's browser",
    "start": "892000",
    "end": "898639"
  },
  {
    "text": "tries to connect to this port is that the port will immediately send a reset packet and say hey",
    "start": "898639",
    "end": "903920"
  },
  {
    "text": "i don't want to talk to you i'm done and and i'm closed so it'll just send a reset packet and",
    "start": "903920",
    "end": "909040"
  },
  {
    "text": "that'll be the end of the communication however if port 25 was open then there's",
    "start": "909040",
    "end": "914399"
  },
  {
    "text": "going to be a few more packets that are exchanged so for example the tcp handshake packet",
    "start": "914399",
    "end": "919600"
  },
  {
    "text": "and other packets may be exchanged before for whatever application running on port",
    "start": "919600",
    "end": "925519"
  },
  {
    "text": "25 realizes that this is some sort of like weird connection that doesn't make any sense",
    "start": "925519",
    "end": "930720"
  },
  {
    "text": "and so port 25 is then eventually going to send a reset packet and uh that terminate that connection",
    "start": "930720",
    "end": "939279"
  },
  {
    "text": "and so in this scenario",
    "start": "939279",
    "end": "944320"
  },
  {
    "text": "the victim browser will clearly know whether the port is closed or not",
    "start": "944320",
    "end": "949839"
  },
  {
    "text": "because these are two very obviously distinguishable scenario so if the victim's browser will",
    "start": "949839",
    "end": "956240"
  },
  {
    "text": "definitely know whether the port is open or closed however the question arises here",
    "start": "956240",
    "end": "962079"
  },
  {
    "text": "is that how on earth is evil.com sitting somewhere far far away going to exfiltrate this",
    "start": "962079",
    "end": "969360"
  },
  {
    "text": "information from the victim's browser now the victim knows but how does this evil.com get this information",
    "start": "969360",
    "end": "976000"
  },
  {
    "text": "out of the victims browser now for that we have to use some clever timing side channel analysis",
    "start": "976000",
    "end": "982959"
  },
  {
    "text": "for this consider the following threshold in time so this threshold is marked by green um",
    "start": "982959",
    "end": "990240"
  },
  {
    "text": "by a green line on the slides so up until this time in um this process",
    "start": "990240",
    "end": "997440"
  },
  {
    "text": "um the victim's browser if the port is closed the victim's browser",
    "start": "997440",
    "end": "1002720"
  },
  {
    "text": "already knows that localhost port 25 is not a valid alternative services and",
    "start": "1002720",
    "end": "1009040"
  },
  {
    "text": "point for evil.com because it sent a reset packet without presenting a valid certificate",
    "start": "1009040",
    "end": "1015360"
  },
  {
    "text": "for evil.com so by now it knows that this is not a valid endpoint however if the port is open",
    "start": "1015360",
    "end": "1022000"
  },
  {
    "text": "the victim browser still hasn't received um a valid certificate for evil.com but",
    "start": "1022000",
    "end": "1028558"
  },
  {
    "text": "it also hasn't received a reset packet from evil from uh 425",
    "start": "1028559",
    "end": "1035038"
  },
  {
    "text": "so it still doesn't know whether port 25 is indeed a valid endpoint",
    "start": "1035039",
    "end": "1041678"
  },
  {
    "text": "for evil.com or is not a valid endpoint so it doesn't know at this point now how do we",
    "start": "1041679",
    "end": "1049440"
  },
  {
    "text": "as the attacker use this information to exfiltrate the status of port 25 from the victim's",
    "start": "1049440",
    "end": "1055760"
  },
  {
    "text": "browser for that we do something very smart so what we do",
    "start": "1055760",
    "end": "1060880"
  },
  {
    "text": "on the attacker as soon as you hit this green threshold the attacker does an",
    "start": "1060880",
    "end": "1067600"
  },
  {
    "text": "automatic redirect through javascript so you just have a small snippet of javascript that measures the time and as soon as",
    "start": "1067600",
    "end": "1075760"
  },
  {
    "text": "you hit this threshold you redirect to evil dot com slash p2",
    "start": "1075760",
    "end": "1081840"
  },
  {
    "text": "from the original webpage which is evil.com p1 and because now the client has loaded",
    "start": "1081840",
    "end": "1088000"
  },
  {
    "text": "this new web page the attacker gets the opportunity to present a new alt scc header and this time the attacker",
    "start": "1088000",
    "end": "1096320"
  },
  {
    "text": "points the alt svc header to a domain that it actually controls so in this case this is",
    "start": "1096320",
    "end": "1101400"
  },
  {
    "text": "evil2.com at port 443 now what happens here is that if",
    "start": "1101400",
    "end": "1108799"
  },
  {
    "text": "uh the old alt svc that was specified to local host port 25",
    "start": "1108799",
    "end": "1114720"
  },
  {
    "text": "uh was invalid and the victims browser already knows that so that would happen in case the",
    "start": "1114720",
    "end": "1122160"
  },
  {
    "text": "port was closed um the victim's browser already knows that port 25 is an invalid alt scc",
    "start": "1122160",
    "end": "1128720"
  },
  {
    "text": "endpoint it will try to connect to the new endpoint and be like okay well the old one didn't work",
    "start": "1128720",
    "end": "1134000"
  },
  {
    "text": "i know that so might as well just try my luck with the new one and see if the new alt svc endpoint is valid",
    "start": "1134000",
    "end": "1141600"
  },
  {
    "text": "however if the port was open so if localhost 25 is open then the victim's browser still doesn't",
    "start": "1141600",
    "end": "1148320"
  },
  {
    "text": "know whether localhost 25 is valid or invalid so it will defer any attempt to verify whether the second alt",
    "start": "1148320",
    "end": "1156000"
  },
  {
    "text": "scc specified so evil2.com is valid or invalid until it can figure",
    "start": "1156000",
    "end": "1163520"
  },
  {
    "text": "out whether um the original all that species specified was valid or invalid",
    "start": "1163520",
    "end": "1170720"
  },
  {
    "text": "so what does this mean for us in a nutshell what this means is all the attacker has",
    "start": "1170720",
    "end": "1176559"
  },
  {
    "text": "to do is the following so all it has to do is look out for any connections to evil2.com",
    "start": "1176559",
    "end": "1182400"
  },
  {
    "text": "so if it gets an immediate connection to evil2.com then it knows that",
    "start": "1182400",
    "end": "1189520"
  },
  {
    "text": "port 25 on localhost on the victims machine must have been closed because",
    "start": "1189520",
    "end": "1195360"
  },
  {
    "text": "why else would they then try to connect to the new altars you see because and it would only do that if it",
    "start": "1195360",
    "end": "1201600"
  },
  {
    "text": "already knows that the old altar cc was in fact not working however if",
    "start": "1201600",
    "end": "1208000"
  },
  {
    "text": "you don't get a connection to evil2.com immediately um on loading the on and presenting this",
    "start": "1208000",
    "end": "1215919"
  },
  {
    "text": "header to the victim then you know that local host port 25 is",
    "start": "1215919",
    "end": "1221360"
  },
  {
    "text": "open because you know this because the victim is you know that the victim is still in the",
    "start": "1221360",
    "end": "1226480"
  },
  {
    "text": "middle of trying to verify whether that um port was",
    "start": "1226480",
    "end": "1231919"
  },
  {
    "text": "in fact a valid alternative endpoint for evil.com or not",
    "start": "1231919",
    "end": "1237679"
  },
  {
    "text": "so that's all you need to do you just need to monitor whether you get an immediate connection to evil2.com",
    "start": "1237679",
    "end": "1243760"
  },
  {
    "text": "or not and you will know whether port 25 is open or closed and so what can you do with this so with",
    "start": "1243760",
    "end": "1250400"
  },
  {
    "text": "this you could do the following things you could obviously do distributed port scanning so you could just get a bunch",
    "start": "1250400",
    "end": "1255440"
  },
  {
    "text": "of clients on their different browsers to do the port scanning for you um you could also scan things that you",
    "start": "1255440",
    "end": "1263120"
  },
  {
    "text": "probably couldn't access directly so local host machine so you could like scan the victim's local host uh the",
    "start": "1263120",
    "end": "1270320"
  },
  {
    "text": "victim's own machine obviously as we've seen you could also scan machines behind a private network or an app that only the",
    "start": "1270320",
    "end": "1277120"
  },
  {
    "text": "victim can access but you as the attacker do not have direct access to",
    "start": "1277120",
    "end": "1282720"
  },
  {
    "text": "and you could also do things like scan all tcp ports so if the victim's machine is",
    "start": "1282720",
    "end": "1288400"
  },
  {
    "text": "using the firefox browser web browser then you can scan tcp ports if the",
    "start": "1288400",
    "end": "1294000"
  },
  {
    "text": "victim's machine is actually using chrome and visiting your web page through chrome you can actually scan udp",
    "start": "1294000",
    "end": "1299679"
  },
  {
    "text": "ports some udp ports through that and the best part of all is that the",
    "start": "1299679",
    "end": "1306000"
  },
  {
    "text": "attacker's identity is not revealed because this happens because the victim",
    "start": "1306000",
    "end": "1311520"
  },
  {
    "text": "is doing the scanning on behalf of the attacker so why would the attacker's identity be revealed so that's the best part about",
    "start": "1311520",
    "end": "1318000"
  },
  {
    "text": "this attack all right so now it's time for a demo so in this demo",
    "start": "1318000",
    "end": "1323039"
  },
  {
    "text": "uh as you'll see we have a we've set up a website uh which does exactly the kind of",
    "start": "1323039",
    "end": "1329120"
  },
  {
    "text": "scanning that we described previously now this website takes two input parameters from the user",
    "start": "1329120",
    "end": "1334720"
  },
  {
    "text": "an ip address and a port and this is the ip port pair that the website will scan",
    "start": "1334720",
    "end": "1342640"
  },
  {
    "text": "through your victim browser and then report whether uh it's closed or open and so",
    "start": "1342640",
    "end": "1350000"
  },
  {
    "text": "we are going to be demoing this tool as a victim so we'll be visiting this",
    "start": "1350000",
    "end": "1356000"
  },
  {
    "text": "website um through the victims browser and we'll give it our own ip address and port",
    "start": "1356000",
    "end": "1361919"
  },
  {
    "text": "and basically we will see if the website is able to get the scanning to work in",
    "start": "1361919",
    "end": "1368799"
  },
  {
    "text": "the way that we described or not all right so demo time",
    "start": "1368799",
    "end": "1374720"
  },
  {
    "text": "okay so here you see we have the website uh",
    "start": "1374720",
    "end": "1380880"
  },
  {
    "text": "that we set up for this demo it takes an ip and a port as http parameters",
    "start": "1380880",
    "end": "1386559"
  },
  {
    "text": "so we gave it localhost and port 7000 as the ipn port it reports that port 7000 on localhost",
    "start": "1386559",
    "end": "1394000"
  },
  {
    "text": "is closed now we're on the victim machine so we can actually just go and open",
    "start": "1394000",
    "end": "1400320"
  },
  {
    "text": "um port 7000 on the victim's machine and then we can reload this web page to",
    "start": "1400320",
    "end": "1407840"
  },
  {
    "text": "see if it indeed reports whether this port is open or close and now if we see that",
    "start": "1407840",
    "end": "1414559"
  },
  {
    "text": "it reports that the port is open um because we just opened it and we go",
    "start": "1414559",
    "end": "1419600"
  },
  {
    "text": "to the port and we see that there's a bunch of traffic this is the traffic that the victims browser sent to this port to try",
    "start": "1419600",
    "end": "1426320"
  },
  {
    "text": "to verify whether it's a valid alt svc for the attacker's domain",
    "start": "1426320",
    "end": "1433600"
  },
  {
    "text": "okay and now for the fifth of our tax uh abuses malware protection",
    "start": "1436559",
    "end": "1443360"
  },
  {
    "text": "bypass so let's say you're a victim browser and you want to go to",
    "start": "1443360",
    "end": "1449480"
  },
  {
    "text": "www.dangerous.com now dangerous.com is not actually a dangerous site",
    "start": "1449480",
    "end": "1454559"
  },
  {
    "text": "it happens to be it seems like a perfectly reputable site but let's assume for the sake of this presentation",
    "start": "1454559",
    "end": "1459760"
  },
  {
    "text": "that it's a dangerous site okay so if it has been deemed a dangerous site",
    "start": "1459760",
    "end": "1465840"
  },
  {
    "text": "you have something called safe browsing which will block dangers.com",
    "start": "1465840",
    "end": "1473840"
  },
  {
    "text": "when when you've typed it into your url bar or in images uh in html code",
    "start": "1473840",
    "end": "1481360"
  },
  {
    "text": "and will display the following really sinister scary alert when you try to access",
    "start": "1481360",
    "end": "1488320"
  },
  {
    "text": "dangerous.com deceptive sight ahead attackers may trick you into doing something dangerous",
    "start": "1488320",
    "end": "1493840"
  },
  {
    "text": "etc etc etc which we wouldn't want at blackhead asia okay",
    "start": "1493840",
    "end": "1498880"
  },
  {
    "text": "so um consider now using an alternative services",
    "start": "1498880",
    "end": "1504480"
  },
  {
    "text": "to do the follows following set up your own www.example.com",
    "start": "1504480",
    "end": "1510559"
  },
  {
    "text": "website and include an alternative service header that redirects all traffic",
    "start": "1510559",
    "end": "1518320"
  },
  {
    "text": "to www.dangerous.com now as i said alternative services",
    "start": "1518320",
    "end": "1524720"
  },
  {
    "text": "function below the browser and what happens is it also functions below what",
    "start": "1524720",
    "end": "1530080"
  },
  {
    "text": "the safe browsing scanners look for so they'll look for example.com see that",
    "start": "1530080",
    "end": "1536000"
  },
  {
    "text": "it is perfectly benign and not recognize the fact that the clients will be shunted to dangerous dot",
    "start": "1536000",
    "end": "1541840"
  },
  {
    "text": "com okay and in effect we have set up a turnstile",
    "start": "1541840",
    "end": "1549840"
  },
  {
    "text": "but we have a wide open hollow path right next to it and this allows you to",
    "start": "1549840",
    "end": "1557520"
  },
  {
    "text": "bypass malware protection on these browsers okay but why is this",
    "start": "1557520",
    "end": "1562640"
  },
  {
    "text": "actually dangerous now to answer this we need to examine closely how",
    "start": "1562640",
    "end": "1567679"
  },
  {
    "text": "most of these website malware scanners actually work so let's say we have a website",
    "start": "1567679",
    "end": "1575000"
  },
  {
    "text": "example.com that has an alt scc example2.com um",
    "start": "1575000",
    "end": "1580559"
  },
  {
    "text": "so and we have an automated scanner that wants to scan example.com for malware",
    "start": "1580559",
    "end": "1586320"
  },
  {
    "text": "so what the automated scanner does is it just loads all of the content from example.com and it examines the content of",
    "start": "1586320",
    "end": "1592799"
  },
  {
    "text": "example.com and does not in fact examine the content",
    "start": "1592799",
    "end": "1598159"
  },
  {
    "text": "of example2.com so the alt svc so the alt scc endpoint is actually not",
    "start": "1598159",
    "end": "1605760"
  },
  {
    "text": "verified and as long as the original endpoint has benign content these automated scanners",
    "start": "1605760",
    "end": "1612080"
  },
  {
    "text": "will not um block the original endpoint",
    "start": "1612080",
    "end": "1619039"
  },
  {
    "text": "so this this this actually leads to two different scenarios so the first scenario",
    "start": "1619039",
    "end": "1624960"
  },
  {
    "text": "is kind of like the not useful scenario where we have um two websites obviously the original",
    "start": "1624960",
    "end": "1631840"
  },
  {
    "text": "endpoint and the alternative endpoint and example so the original endpoint is",
    "start": "1631840",
    "end": "1636880"
  },
  {
    "text": "example.com alternative is dangerous.com and both of them host malware so in this",
    "start": "1636880",
    "end": "1642159"
  },
  {
    "text": "case it's kind of like pointless because the automated scanner is going to check the original endpoint it's going to see the malware and game",
    "start": "1642159",
    "end": "1649360"
  },
  {
    "text": "over bam this website is blacklisted however the more insidious thing to do would be",
    "start": "1649360",
    "end": "1656080"
  },
  {
    "text": "this so you have the original endpoint host the benign content so there's only",
    "start": "1656080",
    "end": "1662799"
  },
  {
    "text": "benign content on the eurozone endpoint and all of the malware all the dangerous stuff is on the alt scc endpoint",
    "start": "1662799",
    "end": "1668640"
  },
  {
    "text": "and this time what happens is the automated scanners look at the benign uh original endpoint passes the check",
    "start": "1668640",
    "end": "1676159"
  },
  {
    "text": "and voila nothing happens and the original endpoint is in fact not blacklisted because the",
    "start": "1676159",
    "end": "1682720"
  },
  {
    "text": "standards never checked the alt-scc however we know that browsers in fact do honor the alt-scc and so and they in",
    "start": "1682720",
    "end": "1689679"
  },
  {
    "text": "fact will load the content from the alt-scc and so they'll end up getting like this home",
    "start": "1689679",
    "end": "1695200"
  },
  {
    "text": "all of the malicious content that these scanners were trying to block in the first place",
    "start": "1695200",
    "end": "1700480"
  },
  {
    "text": "and so a lot of automated scanners pretty much every one of them is vulnerable to them to this attack",
    "start": "1700480",
    "end": "1706080"
  },
  {
    "text": "because no one checks the alt svc so url void buyers total security ipvoid",
    "start": "1706080",
    "end": "1711279"
  },
  {
    "text": "all of these are vulnerable to this type of two-faced content attack so to demo this we basically have a",
    "start": "1711279",
    "end": "1717919"
  },
  {
    "text": "setup where we have an original endpoint that hosts benign content and an auth svc that has malicious content",
    "start": "1717919",
    "end": "1726240"
  },
  {
    "text": "now let's take a look at the demo",
    "start": "1726240",
    "end": "1729520"
  },
  {
    "text": "so we have our website that has benign content so this is a",
    "start": "1732640",
    "end": "1739120"
  },
  {
    "text": "benign website original endpoint nothing wrong wholesome content",
    "start": "1739120",
    "end": "1744960"
  },
  {
    "text": "everything's hunky-dory however we see interestingly that this",
    "start": "1744960",
    "end": "1752559"
  },
  {
    "text": "website specified an interesting author svc that in fact is blacklisted for having",
    "start": "1752559",
    "end": "1757919"
  },
  {
    "text": "malware um but we will bypass this blacklist as you'll see",
    "start": "1757919",
    "end": "1764159"
  },
  {
    "text": "because this is done through the author cc so you reload it and the reloaded content actually comes",
    "start": "1764159",
    "end": "1769440"
  },
  {
    "text": "from the alt svc and it's scam contents it's malware and it's still loaded by your browser um",
    "start": "1769440",
    "end": "1776000"
  },
  {
    "text": "because uh the safe browsing on firefox does not check the alt scc when it's looking for",
    "start": "1776000",
    "end": "1783600"
  },
  {
    "text": "blacklisted content so to prove that this is actually a blacklist website we'll visit",
    "start": "1783600",
    "end": "1788799"
  },
  {
    "text": "um this website directly so we visit the alt svc directly through firefox um and we see",
    "start": "1788799",
    "end": "1796000"
  },
  {
    "text": "that this time it is in fact blocked if we visit this",
    "start": "1796000",
    "end": "1802880"
  },
  {
    "text": "website directly it's marked as a deceptive website firefox does not let you visit it however",
    "start": "1802880",
    "end": "1809120"
  },
  {
    "text": "if this is used as an alt svc then firefox allows uh this website to",
    "start": "1809120",
    "end": "1814880"
  },
  {
    "text": "get through okay so we've shown these horrible abuses of alternative services",
    "start": "1814880",
    "end": "1820320"
  },
  {
    "text": "how can you mitigate them we're responsible researchers the poor scan and distributed denial of",
    "start": "1820320",
    "end": "1826240"
  },
  {
    "text": "service attacks can be mitigated by blocking sensitive ports just like you do for javascript but also at the lower level of",
    "start": "1826240",
    "end": "1832960"
  },
  {
    "text": "alternative services safe browsing exploit uh malware",
    "start": "1832960",
    "end": "1838320"
  },
  {
    "text": "protection bypass uh can be mitigated by doing domain checks for alternative services headers",
    "start": "1838320",
    "end": "1844799"
  },
  {
    "text": "and not just uh links that are clearly visible in the website page uh the tracking and history",
    "start": "1844799",
    "end": "1852240"
  },
  {
    "text": "exfiltration attacks can be mitigated by isolating the alternative services cache",
    "start": "1852240",
    "end": "1857919"
  },
  {
    "text": "so they cannot be used for tracking okay as i mentioned we were we are",
    "start": "1857919",
    "end": "1864960"
  },
  {
    "text": "responsible uh security researchers so we uh disclosed all of these attacks",
    "start": "1864960",
    "end": "1870320"
  },
  {
    "text": "to industry to uh the four browsers that were affected firefox tore",
    "start": "1870320",
    "end": "1875600"
  },
  {
    "text": "chrome and brave and this matrix describes uh the current state so",
    "start": "1875600",
    "end": "1882480"
  },
  {
    "text": "firefox and tor both patched the port scan and distributed denial of service vulnerabilities",
    "start": "1882480",
    "end": "1888480"
  },
  {
    "text": "uh and we got cves named for them the malware bypass protection as far as",
    "start": "1888480",
    "end": "1894799"
  },
  {
    "text": "we know remains unpatched it's still there tracking and history",
    "start": "1894799",
    "end": "1901279"
  },
  {
    "text": "exfiltration is in process but we haven't seen any concrete results yet",
    "start": "1901279",
    "end": "1908960"
  },
  {
    "text": "and uh so to conclude you have this new but widely adopted alternative",
    "start": "1909679",
    "end": "1916240"
  },
  {
    "text": "services header it seems like a very simple idea a simple additional header to a well",
    "start": "1916240",
    "end": "1922720"
  },
  {
    "text": "understood protocol and it's vulnerable we found five attacks",
    "start": "1922720",
    "end": "1928240"
  },
  {
    "text": "despite the fact that http has been around for a couple decades and the fact that the browser developers",
    "start": "1928240",
    "end": "1935200"
  },
  {
    "text": "are actually very competent you know they are they have security professionals they have a clear understanding of how to build",
    "start": "1935200",
    "end": "1941519"
  },
  {
    "text": "browsers and yet it's not easy to secure uh",
    "start": "1941519",
    "end": "1946640"
  },
  {
    "text": "anything much less simple http header",
    "start": "1946640",
    "end": "1952159"
  },
  {
    "text": "so our conclusion is don't drink an alternative service thank you very much",
    "start": "1952159",
    "end": "1963840"
  }
]