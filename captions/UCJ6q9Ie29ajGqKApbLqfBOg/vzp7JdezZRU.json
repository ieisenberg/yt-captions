[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "welcome to timing attacks have never been so practical advance cross-eyed",
    "start": "30",
    "end": "6210"
  },
  {
    "text": "search attacks this is personally one of my favorite talks of the day so you are in for a real treat",
    "start": "6210",
    "end": "12929"
  },
  {
    "text": "with our featured speaker today his name is Nathan L galore inter and yeah before",
    "start": "12929",
    "end": "20550"
  },
  {
    "text": "we begin just a couple notes stop but you should stop by the business hall located in Bayside a B if you have a",
    "start": "20550",
    "end": "28230"
  },
  {
    "text": "chance the black hat Arsenal is in the palm fire on level three and the Arsenal",
    "start": "28230",
    "end": "33390"
  },
  {
    "text": "reception is happening right after this talk at 5:00 p.m. so if you want to go to the reception there'll be food and",
    "start": "33390",
    "end": "39300"
  },
  {
    "text": "drinks if you haven't picked any merchandise there will be t-shirts and",
    "start": "39300",
    "end": "45450"
  },
  {
    "text": "books selling at the bookstore at the black hat bookstore and if you go before",
    "start": "45450",
    "end": "50969"
  },
  {
    "text": "they close they usually have some pretty good offers so you should check it out it'll be discounted you can visit the Kali Linux",
    "start": "50969",
    "end": "56940"
  },
  {
    "text": "love in the Mandalay Bay a and last but not least if you could please put your",
    "start": "56940",
    "end": "63899"
  },
  {
    "text": "phone in silence mode we would appreciate that so without anything else please give a warm welcome to our speaker today again",
    "start": "63899",
    "end": "70110"
  },
  {
    "text": "methanol Galanter thank you hi everybody",
    "start": "70110",
    "end": "79880"
  },
  {
    "start": "78000",
    "end": "106000"
  },
  {
    "text": "so my name is nathaniell Geller anta and I'm really glad to be here and to give",
    "start": "79880",
    "end": "85560"
  },
  {
    "text": "him I talk about Advanced Course at search attacks that are practical time excite an alert acts on web applications",
    "start": "85560",
    "end": "91829"
  },
  {
    "text": "I will explain about the attacks and show you how they can be used to extract sensitive information from many web",
    "start": "91829",
    "end": "98460"
  },
  {
    "text": "sites include very popular one hey one thing for example I will demonstrate most of the attacks in this talk on",
    "start": "98460",
    "end": "104549"
  },
  {
    "text": "Gmail before I begin earlier about myself I'm security researcher from",
    "start": "104549",
    "end": "110399"
  },
  {
    "text": "Israel recently I founded the company called cyber peon pioneers in",
    "start": "110399",
    "end": "115500"
  },
  {
    "text": "cybersecurity and beyond consulting services we explore new attack vectors mainly on web applications and develop",
    "start": "115500",
    "end": "122189"
  },
  {
    "text": "countermeasures against some of these attacks I'm also in the Academy I'm leading the cyber security studies and",
    "start": "122189",
    "end": "128310"
  },
  {
    "text": "research in the College of Management academic studies so the adventure for this talk I will",
    "start": "128310",
    "end": "134760"
  },
  {
    "start": "132000",
    "end": "152000"
  },
  {
    "text": "begin with background about cross site search attacks and with special focus on the responsive flashing technique then I",
    "start": "134760",
    "end": "141660"
  },
  {
    "text": "will present the challenges of this talk and will offer two new attack vectors browser-based browser-based course at",
    "start": "141660",
    "end": "148260"
  },
  {
    "text": "search attacks and second-order cross at search attacks so let's begin with the",
    "start": "148260",
    "end": "153630"
  },
  {
    "start": "152000",
    "end": "192000"
  },
  {
    "text": "background last October in the CCS conference I introduced cross-site search attacks in a joint work with",
    "start": "153630",
    "end": "160260"
  },
  {
    "text": "Professor Amir Hertzberg from bar-ilan University and cross at such attacks exploit leakage of information we are",
    "start": "160260",
    "end": "167190"
  },
  {
    "text": "the timing side channel in the search process of web applications generally it",
    "start": "167190",
    "end": "172410"
  },
  {
    "text": "is possible to extract almost everything that can be searched the attack is practical we evaluated in on hundreds of",
    "start": "172410",
    "end": "178860"
  },
  {
    "text": "Gmail users with great results for example we created the demo of the original attack and this demo extracted",
    "start": "178860",
    "end": "185430"
  },
  {
    "text": "the first and the last names of Gmail users out of the large dictionary of mm",
    "start": "185430",
    "end": "191070"
  },
  {
    "text": "names the adversary model for cross-site search attacks is the classical",
    "start": "191070",
    "end": "196620"
  },
  {
    "text": "cross-site adversary model used in many other attacks and cross-site scripting cross-site request forgery clickjacking",
    "start": "196620",
    "end": "202650"
  },
  {
    "text": "and other attacks and in this adversary model the browser of the victim is",
    "start": "202650",
    "end": "207950"
  },
  {
    "text": "authenticated to the attacked website in this example and in most of the examples",
    "start": "207950",
    "end": "213420"
  },
  {
    "text": "in this talk it is going to be Gmail and using the same browser the victim serves",
    "start": "213420",
    "end": "218940"
  },
  {
    "text": "to the attacking page and once the browser of the victim loads the attacking page the attacking page sends",
    "start": "218940",
    "end": "225540"
  },
  {
    "text": "requests in the name of the victim to the attacked web site so the requests that are sent from the attacking page to",
    "start": "225540",
    "end": "232170"
  },
  {
    "text": "the attack website are d cross-site request in cross-site search attacks the",
    "start": "232170",
    "end": "237600"
  },
  {
    "text": "cross that requests are actually search requests so the attacker sends from the attacking page search requests in the",
    "start": "237600",
    "end": "244650"
  },
  {
    "text": "name of the victim to Gmail now although the attacker can send search requests in",
    "start": "244650",
    "end": "251880"
  },
  {
    "text": "the name of the victim the attacker cannot access the content of the responses and this is due to the same origin policy however the attacker can",
    "start": "251880",
    "end": "259500"
  },
  {
    "text": "still measure the response time the time since the request was sent until the response arrives and",
    "start": "259500",
    "end": "265290"
  },
  {
    "text": "in cross at search attacks the attacker just relies on their response time to extract very sensitive information let's",
    "start": "265290",
    "end": "274260"
  },
  {
    "start": "273000",
    "end": "344000"
  },
  {
    "text": "examine a scenario that will give you I believe good intuition about the idea behind the attack and in this example",
    "start": "274260",
    "end": "281270"
  },
  {
    "text": "the goal of the attacker is to detect whether the name of the victim a visit or of attacking of the attacking page is",
    "start": "281270",
    "end": "288330"
  },
  {
    "text": "either Alice or Bob so once the victim serves to the attacking page the attacking page sends",
    "start": "288330",
    "end": "294990"
  },
  {
    "text": "two search requests in the name of the victim to Gmail the first search request",
    "start": "294990",
    "end": "300420"
  },
  {
    "text": "asks for all the emails in the sent items folder that were sent from Bob the second search request asks for all the",
    "start": "300420",
    "end": "307560"
  },
  {
    "text": "emails in the sent items folder that were sent from Alice now we know that the sent items folder contains only",
    "start": "307560",
    "end": "313950"
  },
  {
    "text": "messages that were sent by the true user and in this example this is Alice therefore we know that the response for",
    "start": "313950",
    "end": "321540"
  },
  {
    "text": "the first search request is going to be an empty response on the other and we expect that the response for this second",
    "start": "321540",
    "end": "328380"
  },
  {
    "text": "search request will contain many messages many emails that were sent by Alice and the idea behind cross-site",
    "start": "328380",
    "end": "335670"
  },
  {
    "text": "search attacks is that just like the size difference and the content difference of the responses there will",
    "start": "335670",
    "end": "341430"
  },
  {
    "text": "be also a difference in the response time so what else can be extracted using cross at search attacks so in addition",
    "start": "341430",
    "end": "348450"
  },
  {
    "start": "344000",
    "end": "371000"
  },
  {
    "text": "to the name of the victim it is possible to extract information about the contexts of the victim information about",
    "start": "348450",
    "end": "354050"
  },
  {
    "text": "relationships of the victim to extract search history email content and even",
    "start": "354050",
    "end": "359510"
  },
  {
    "text": "very sensitive information that usually appear in fixed structures for example",
    "start": "359510",
    "end": "365520"
  },
  {
    "text": "credit card numbers and phone numbers that usually appear in short digit sequences let's go through the basic",
    "start": "365520",
    "end": "373440"
  },
  {
    "start": "371000",
    "end": "403000"
  },
  {
    "text": "flow of the original cross at search attack and the basic flow comes to answer a boolean question it has three",
    "start": "373440",
    "end": "380160"
  },
  {
    "text": "steps in the first step of the basic flow the attacker transforms the boolean",
    "start": "380160",
    "end": "385710"
  },
  {
    "text": "question into a challenge search request in the second step the attacker collects",
    "start": "385710",
    "end": "391920"
  },
  {
    "text": "response time measurements and in the third and last step of the attack the attacker analyzes the response time",
    "start": "391920",
    "end": "397620"
  },
  {
    "text": "measurement collected at a previous step and draw a conclusion about the answer for the boolean question so in the first step",
    "start": "397620",
    "end": "405169"
  },
  {
    "start": "403000",
    "end": "437000"
  },
  {
    "text": "the attacker transforms the the boolean question into a challenge search request we already saw an example to a challenge",
    "start": "405169",
    "end": "412250"
  },
  {
    "text": "search request that can be used to detect whether the name of the victim is Alice similarly the attacker can test",
    "start": "412250",
    "end": "418340"
  },
  {
    "text": "whether the victim is related to Bob by searching whether the gmail address of",
    "start": "418340",
    "end": "423740"
  },
  {
    "text": "Bob appears in at least 100 Gmail conversation the attacker can test whether Alice has an effort with Charlie",
    "start": "423740",
    "end": "431300"
  },
  {
    "text": "by searching whether Alice and I love you too charlie ok so this is the idea",
    "start": "431300",
    "end": "436580"
  },
  {
    "text": "and in the second step the attacker collects the response time measurements first the attacker sends the challenge",
    "start": "436580",
    "end": "443210"
  },
  {
    "start": "437000",
    "end": "505000"
  },
  {
    "text": "search request from the first step and measures its response time and this is",
    "start": "443210",
    "end": "449539"
  },
  {
    "text": "actually the most important point of the attack so listen well the goal of the attacker in the entire attack is to",
    "start": "449539",
    "end": "456199"
  },
  {
    "text": "detect whether the response for the challenge search request is either a full response response that contains at",
    "start": "456199",
    "end": "462770"
  },
  {
    "text": "least one entry or an empty response and the attacker has to compare the response",
    "start": "462770",
    "end": "470570"
  },
  {
    "text": "time of the challenge search request to something so the attacker sends additional search requests which I call",
    "start": "470570",
    "end": "476509"
  },
  {
    "text": "a dummy search request and the dummy search request is just like the challenge search request but with a",
    "start": "476509",
    "end": "482990"
  },
  {
    "text": "little modification that makes it yield an empty response and in our example the",
    "start": "482990",
    "end": "488870"
  },
  {
    "text": "attacker assumes that the name of the victim is not some long random string so the attacker sends a dummy search",
    "start": "488870",
    "end": "494840"
  },
  {
    "text": "request that asks for all the emails in the sent items folder that were sent by some along a random string and of course",
    "start": "494840",
    "end": "501229"
  },
  {
    "text": "this dummy search request is expected to yield an empty response now the attacker",
    "start": "501229",
    "end": "506360"
  },
  {
    "start": "505000",
    "end": "519000"
  },
  {
    "text": "repeats this process of sending challenge and dummy search requests and in the end of the second step the",
    "start": "506360",
    "end": "512630"
  },
  {
    "text": "attacker has two samples of response time the first for dummy search request and the second for challenge search",
    "start": "512630",
    "end": "518120"
  },
  {
    "text": "requests in the first step of the attack the attacker applies statistical tests",
    "start": "518120",
    "end": "523610"
  },
  {
    "start": "519000",
    "end": "572000"
  },
  {
    "text": "on both the samples and the goal of this statistical test is to detect whether there is significant difference between",
    "start": "523610",
    "end": "530300"
  },
  {
    "text": "the dish of these samples if there is a significant difference in the",
    "start": "530300",
    "end": "536040"
  },
  {
    "text": "distributions the attacker concludes that just like the difference in the response time there is also difference",
    "start": "536040",
    "end": "543120"
  },
  {
    "text": "in the content of the responses and because the dummy's search request is expected is assumed to to yield an empty",
    "start": "543120",
    "end": "550500"
  },
  {
    "text": "response the attacker concludes that the the challenge search requests and yields",
    "start": "550500",
    "end": "555720"
  },
  {
    "text": "a full response and this means that Alice is the name of the victim if there",
    "start": "555720",
    "end": "560970"
  },
  {
    "text": "is no significant difference between the distributions this means that just like the dummy search request which the",
    "start": "560970",
    "end": "567600"
  },
  {
    "text": "challenged search request also yields an empty response let's talk about the",
    "start": "567600",
    "end": "573629"
  },
  {
    "start": "572000",
    "end": "623000"
  },
  {
    "text": "challenges of practical timing attacks first of all we have the classical challenge of every timing attack",
    "start": "573629",
    "end": "580709"
  },
  {
    "text": "practical or not and the challenge is the high variance in the measurement and in particular the response time",
    "start": "580709",
    "end": "587430"
  },
  {
    "text": "measurements are affected by dynamically changing delay in the network in the server and even in the computer of the",
    "start": "587430",
    "end": "593430"
  },
  {
    "text": "victim and so this is classical challenge and if we want practical",
    "start": "593430",
    "end": "599069"
  },
  {
    "text": "attack we have the challenges of practical attack so the attacker has to complete the attack in a very short time",
    "start": "599069",
    "end": "604829"
  },
  {
    "text": "and this is very important especially in cross-site attacks because the attacker would like to complete the attack also",
    "start": "604829",
    "end": "611389"
  },
  {
    "text": "during short visits of victims in the attacking page the attacker would also like to minimize the number of requests",
    "start": "611389",
    "end": "617790"
  },
  {
    "text": "that are sent to the server to avoid being detected and blocked by the server a great solution that we offered in our",
    "start": "617790",
    "end": "626639"
  },
  {
    "start": "623000",
    "end": "657000"
  },
  {
    "text": "original work about processor attack was the response inflation technique and response inflation is about the",
    "start": "626639",
    "end": "633899"
  },
  {
    "text": "technique that increases the size difference between full responses and empty responses and the idea is that the",
    "start": "633899",
    "end": "640800"
  },
  {
    "text": "larger the size difference is the larger the response time is response response",
    "start": "640800",
    "end": "646110"
  },
  {
    "text": "inflation allows the attacker to transform the problem from a challenge of increasing the response time",
    "start": "646110",
    "end": "652199"
  },
  {
    "text": "difference to a challenge of increasing the response size difference and",
    "start": "652199",
    "end": "657439"
  },
  {
    "text": "response implication relies on the following observation search requests",
    "start": "657439",
    "end": "662459"
  },
  {
    "text": "usually contain many parameters and some of these parameters are reflected in the response as a",
    "start": "662459",
    "end": "669240"
  },
  {
    "text": "function of the number of entries in the response so in empty response the",
    "start": "669240",
    "end": "674310"
  },
  {
    "text": "reflected parameters will not appear at all or only a few times and in for responses the reflected parameters will",
    "start": "674310",
    "end": "680160"
  },
  {
    "text": "appear many times yet it is not enough as you can see the size difference is not significant but if the attacker can",
    "start": "680160",
    "end": "686910"
  },
  {
    "text": "send long strings very long strings as the reflected parameters the size",
    "start": "686910",
    "end": "692250"
  },
  {
    "text": "difference become becomes very significant and we found that in some cases the attacker can send is the",
    "start": "692250",
    "end": "698910"
  },
  {
    "text": "values of their reflected parameters very long strings thousands of bytes so",
    "start": "698910",
    "end": "705060"
  },
  {
    "text": "this is the responsive legend it is a very effective technique and for example",
    "start": "705060",
    "end": "710970"
  },
  {
    "start": "709000",
    "end": "783000"
  },
  {
    "text": "we evaluated this attack on Gmail on the HTML view and in the HTML view of Gmail",
    "start": "710970",
    "end": "717209"
  },
  {
    "text": "the query itself is reflected once for every entry in the response by default",
    "start": "717209",
    "end": "722370"
  },
  {
    "text": "there are up to 50 entries in for the search and each query can be inflated up",
    "start": "722370",
    "end": "728130"
  },
  {
    "text": "to eight kilobytes and this can be done simply by concatenating the or operator",
    "start": "728130",
    "end": "733980"
  },
  {
    "text": "to the query with a very long string so together this means that we can inflate",
    "start": "733980",
    "end": "739560"
  },
  {
    "text": "as the size difference between full and empty responses to something like 400",
    "start": "739560",
    "end": "744930"
  },
  {
    "text": "kilobytes which is very significant so responsive relation is really great but",
    "start": "744930",
    "end": "750930"
  },
  {
    "text": "it seems that at least in some cases the party is over for example Gmail just blocked the",
    "start": "750930",
    "end": "757740"
  },
  {
    "text": "option to send cross-site search requests in the HTML view so we can't",
    "start": "757740",
    "end": "763050"
  },
  {
    "text": "not we can't just use the response replacement technique on Gmail which is pretty bad and the challenge of this",
    "start": "763050",
    "end": "770310"
  },
  {
    "text": "talk is what can attackers do when the",
    "start": "770310",
    "end": "775410"
  },
  {
    "text": "original process search attacks using response inflation are impossible what can the attacker do when we can't use",
    "start": "775410",
    "end": "782279"
  },
  {
    "text": "the original attack and in this talk I would like to offer two new attack vectors and the first is browser based",
    "start": "782279",
    "end": "790440"
  },
  {
    "start": "783000",
    "end": "819000"
  },
  {
    "text": "cross a search and browser based course that search attacks can be used when there is some difference between full",
    "start": "790440",
    "end": "796800"
  },
  {
    "text": "and and two responses although not as significant as in the original attack that with response inflation this second",
    "start": "796800",
    "end": "805640"
  },
  {
    "text": "new attack vector is second-order cross that search attacks the and this family",
    "start": "805640",
    "end": "811080"
  },
  {
    "text": "of attacks can be used when there is no size difference or when the study",
    "start": "811080",
    "end": "816180"
  },
  {
    "text": "differs is negligible so I will begin with browser based processor she attacks",
    "start": "816180",
    "end": "821460"
  },
  {
    "start": "819000",
    "end": "894000"
  },
  {
    "text": "and browser based cross that such attacks rely on two previous wards and on algorithmic improvements and the",
    "start": "821460",
    "end": "827910"
  },
  {
    "text": "first work is they were the original work about processor attacks the second work is the work of tumbled gotham",
    "start": "827910",
    "end": "834180"
  },
  {
    "text": "morale tommy is also speaker here and also from the last TCS conference about browser-based timing side channel",
    "start": "834180",
    "end": "840930"
  },
  {
    "text": "attacks to explain what is browser-based timing side channel attacker will",
    "start": "840930",
    "end": "846750"
  },
  {
    "text": "compare browser-based timing attacks to classical timing attacks in classical",
    "start": "846750",
    "end": "852150"
  },
  {
    "text": "timing attacks the attacker sends the same request again and again to the server to collect response time",
    "start": "852150",
    "end": "858120"
  },
  {
    "text": "measurements in browser-based timing attacks the attacking page remember that",
    "start": "858120",
    "end": "864360"
  },
  {
    "text": "we talked about the cross-site adversary model so the attacking page sends every unique request only once to the server",
    "start": "864360",
    "end": "871830"
  },
  {
    "text": "then the attacking page who cannot access the content of the response the attacking page caches that response for",
    "start": "871830",
    "end": "878700"
  },
  {
    "text": "example using the service worker feature and then the attacker collects response time measurements by reloading the",
    "start": "878700",
    "end": "885390"
  },
  {
    "text": "cached response from the cache so instead of reloading the same request many times from this server we reload it",
    "start": "885390",
    "end": "891450"
  },
  {
    "text": "many times from the browser cache for example classical timing attacks exploit",
    "start": "891450",
    "end": "897420"
  },
  {
    "start": "894000",
    "end": "928000"
  },
  {
    "text": "but are also affected by the delay in the network in the server and on the",
    "start": "897420",
    "end": "902480"
  },
  {
    "text": "computer of the victim browser based timing attacks are affected and exploit only the browser processing time",
    "start": "902480",
    "end": "908840"
  },
  {
    "text": "therefore classical timing attacks can be used to differentiate between small and large resources but also to",
    "start": "908840",
    "end": "914490"
  },
  {
    "text": "distinguish between two cases where the responses are even identical but there is the processing time in the server is",
    "start": "914490",
    "end": "921480"
  },
  {
    "text": "different on the other hand browser-based timing attacks can be used only to differentiate between small and",
    "start": "921480",
    "end": "926820"
  },
  {
    "text": "large resources so now we can go through the basic flow of browser-based processor attacks and the",
    "start": "926820",
    "end": "933619"
  },
  {
    "text": "basic flow of browser-based cross at such attack is just like the basic flow of the original attack it has three",
    "start": "933619",
    "end": "941239"
  },
  {
    "text": "steps it comes to answer a boolean question and actually the the difference is only in the second step in the way",
    "start": "941239",
    "end": "947149"
  },
  {
    "text": "the attacker collects the response time measurements so first the attacker transforms the Budhan question into a",
    "start": "947149",
    "end": "952459"
  },
  {
    "text": "challenge search request and then the attacker collects response time measurements first the attacker sent the",
    "start": "952459",
    "end": "957769"
  },
  {
    "text": "challenge search request and caches its response the attacker also sends a dummy",
    "start": "957769",
    "end": "964549"
  },
  {
    "text": "search request which is expected to yield an empty respondent caches and the response for that request as well and",
    "start": "964549",
    "end": "970910"
  },
  {
    "text": "now the attacker collects response time measurements by reloading the cached responses many time notice",
    "start": "970910",
    "end": "978439"
  },
  {
    "text": "that the response time difference between full and empty responses in browser-based attacks is smaller",
    "start": "978439",
    "end": "984679"
  },
  {
    "text": "compared to the original attack using response inflation however the attacker",
    "start": "984679",
    "end": "990499"
  },
  {
    "text": "can compensate on the smaller response time difference by increasing the sample size the attacker can take many more",
    "start": "990499",
    "end": "997959"
  },
  {
    "text": "measurements and this is because it takes only a few milliseconds to reload",
    "start": "997959",
    "end": "1003489"
  },
  {
    "text": "a resource from the cache compared to hundreds of milliseconds when the attacker has to do this from the server",
    "start": "1003489",
    "end": "1010589"
  },
  {
    "text": "so the attacker collect response time measurements and just like the original process such attacks in the first step",
    "start": "1010589",
    "end": "1016629"
  },
  {
    "text": "the attacker will analyze the the samples collected and will draw a conclusion about the answer for the",
    "start": "1016629",
    "end": "1023199"
  },
  {
    "text": "boolean question so oolitic improvements this will be very I will demonstrate",
    "start": "1023199",
    "end": "1030038"
  },
  {
    "start": "1025000",
    "end": "1056000"
  },
  {
    "text": "only one algorithmic improvement and the algorithmic improvements are irrelevant",
    "start": "1030039",
    "end": "1035529"
  },
  {
    "text": "for the basic flow and they come to deal with the more complex case of answering",
    "start": "1035529",
    "end": "1041470"
  },
  {
    "text": "multiple choice questions so instead of answering questions like is the name of the victim Alice the attacker has a",
    "start": "1041470",
    "end": "1047649"
  },
  {
    "text": "large dictionary of names and he would like to to learn which of the names in the dictionary a few are none match the",
    "start": "1047649",
    "end": "1054789"
  },
  {
    "text": "victim generally all the algorithmic improvements I applied our adjustment or",
    "start": "1054789",
    "end": "1061720"
  },
  {
    "text": "extensions of Loree of algorithms that were used in the original work to optimally use the",
    "start": "1061720",
    "end": "1068570"
  },
  {
    "text": "browser-based timing side channel I will present one simple very simple",
    "start": "1068570",
    "end": "1074179"
  },
  {
    "text": "optimization but first I will explain how I evaluate browser-based crosshead such attacks",
    "start": "1074179",
    "end": "1079220"
  },
  {
    "start": "1079000",
    "end": "1106000"
  },
  {
    "text": "so I evaluated browser-based course at such attacks compared to the two previous works I mentioned and I",
    "start": "1079220",
    "end": "1084950"
  },
  {
    "text": "repeated attacks that were done in each of the works I repeated the attack to extract the first and the last names of",
    "start": "1084950",
    "end": "1091400"
  },
  {
    "text": "German users as done in the original work about processor attacks and repeated also the attack done by even",
    "start": "1091400",
    "end": "1097070"
  },
  {
    "text": "got medal to extract the age of Facebook user in both the attacks browser based",
    "start": "1097070",
    "end": "1102710"
  },
  {
    "text": "process such attacks achieved significant improvements in this table due to lack of timing because I have",
    "start": "1102710",
    "end": "1109280"
  },
  {
    "text": "much cooler demo to show you I will present only one example and this",
    "start": "1109280",
    "end": "1114380"
  },
  {
    "text": "example is going to be the Gmail example so in in this example the the goal of",
    "start": "1114380",
    "end": "1120590"
  },
  {
    "start": "1116000",
    "end": "1135000"
  },
  {
    "text": "the attacker is to extract the first and the last names of gmail user out of list",
    "start": "1120590",
    "end": "1127010"
  },
  {
    "text": "of mm names the original attack as I say it succeeded to do this in one minute and 90% success rate which is good and",
    "start": "1127010",
    "end": "1135679"
  },
  {
    "text": "also in the original work we did not follow the knife approach we we did not",
    "start": "1135679",
    "end": "1141200"
  },
  {
    "text": "just ask are you Alice or you Bob are you Charlie are you Debbie mm x and",
    "start": "1141200",
    "end": "1147440"
  },
  {
    "text": "instead of that we developed divide and conquer algorithms and in particular we use the optimized multiple term",
    "start": "1147440",
    "end": "1154100"
  },
  {
    "text": "identification algorithm om Ti and this algorithm uses the or operator to ask",
    "start": "1154100",
    "end": "1160929"
  },
  {
    "text": "questions like is the name of the victim Alice or Bob or Charlie or David up to",
    "start": "1160929",
    "end": "1166880"
  },
  {
    "text": "the length limit of the search request and in each of the rounds of the algorithm the attacker sent several",
    "start": "1166880",
    "end": "1174110"
  },
  {
    "text": "search challenged search requests each of them asks about set of values the",
    "start": "1174110",
    "end": "1179120"
  },
  {
    "text": "attacker analyzes the response time for the challenged search request compared to each other and compared to a dummy",
    "start": "1179120",
    "end": "1185480"
  },
  {
    "text": "search request which is changing between the rounds of the algorithm in the attacker the algorithm continues recursively with the challenged search",
    "start": "1185480",
    "end": "1193190"
  },
  {
    "text": "requests that yield that yielded a full response when we rely on the browser-based timing",
    "start": "1193190",
    "end": "1201500"
  },
  {
    "start": "1197000",
    "end": "1242000"
  },
  {
    "text": "side channel rather than the classical timing side channel we can further optimize this algorithm and the simple",
    "start": "1201500",
    "end": "1208190"
  },
  {
    "text": "optimization relies on the observation that we are no longer affected by the browser processing time and because",
    "start": "1208190",
    "end": "1214910"
  },
  {
    "text": "dummies search requests although they have different processing time in the server but the response for all the",
    "start": "1214910",
    "end": "1220220"
  },
  {
    "text": "dummy search requests are just empty responses and the size of empty responses is very similar we can instead",
    "start": "1220220",
    "end": "1227390"
  },
  {
    "text": "of sending dummy search requests in each of the rounds of the algorithm we can just send the dummy search request in",
    "start": "1227390",
    "end": "1233510"
  },
  {
    "text": "the first round to take response time measurement and to use the response",
    "start": "1233510",
    "end": "1238550"
  },
  {
    "text": "measurements from the first round in each of the other rounds and by applying this simple optimization browser based",
    "start": "1238550",
    "end": "1246530"
  },
  {
    "start": "1242000",
    "end": "1254000"
  },
  {
    "text": "across that such attacks succeeded to improve the accuracy and to decrease the",
    "start": "1246530",
    "end": "1251960"
  },
  {
    "text": "time to less than 42 seconds I will show you a video demo of this attack because",
    "start": "1251960",
    "end": "1257510"
  },
  {
    "start": "1254000",
    "end": "1329000"
  },
  {
    "text": "it is now blocked by Google so this is",
    "start": "1257510",
    "end": "1265340"
  },
  {
    "text": "the demo so this demo will also give you better intuition better understanding",
    "start": "1265340",
    "end": "1271850"
  },
  {
    "text": "about the way the OMP algorithm works so you can see that this set of mm x is divided into three subsets in in this",
    "start": "1271850",
    "end": "1279380"
  },
  {
    "text": "case and there are challenge search accredit are sent in each of the runs",
    "start": "1279380",
    "end": "1284750"
  },
  {
    "text": "you can also see that in each of the rounds the size of this subset is cut by half you can already see I the names in",
    "start": "1284750",
    "end": "1292100"
  },
  {
    "text": "the dictionary worst alphabetically sorted so you can see the N and the G of my name I think and within 40 seconds",
    "start": "1292100",
    "end": "1300890"
  },
  {
    "text": "whenever in I think in this example the attacking page outputs my name so this",
    "start": "1300890",
    "end": "1308750"
  },
  {
    "text": "is a demo and Gmail already blocked also cross that search request in the",
    "start": "1308750",
    "end": "1313970"
  },
  {
    "text": "standard view so it is no longer possible to launch this attack I launched this attack on the standard",
    "start": "1313970",
    "end": "1319670"
  },
  {
    "text": "view after Gmail applied countermeasures and blocked the use of response inflation in the HTML view",
    "start": "1319670",
    "end": "1327010"
  },
  {
    "text": "so cross-browser based process such attacks are really great but there are",
    "start": "1328420",
    "end": "1336310"
  },
  {
    "start": "1329000",
    "end": "1374000"
  },
  {
    "text": "still cases where they cannot be used and we need to deal also with such cases",
    "start": "1336310",
    "end": "1341830"
  },
  {
    "text": "and for example if I wanted to attack some some gmail account and I want to",
    "start": "1341830",
    "end": "1349390"
  },
  {
    "text": "detect whether a particular term appears in this account and this term appears",
    "start": "1349390",
    "end": "1355210"
  },
  {
    "text": "only once in the account so the size difference between empty response and a full response that contains only a",
    "start": "1355210",
    "end": "1362230"
  },
  {
    "text": "single entry the same of this term the the site difference will be too small and I would not be able to use the",
    "start": "1362230",
    "end": "1369850"
  },
  {
    "text": "browser-based processor she attacks effectively so we need something else and therefore I offer second order",
    "start": "1369850",
    "end": "1378880"
  },
  {
    "start": "1374000",
    "end": "1483000"
  },
  {
    "text": "processor she attacks and generally second order attacks second order cross at swoop things that can ordered in out",
    "start": "1378880",
    "end": "1384640"
  },
  {
    "text": "of service and other second order attacks and have two steps in the first step of second order attack the attacker",
    "start": "1384640",
    "end": "1391210"
  },
  {
    "text": "manipulates the account and makes it vulnerable and in the second step the",
    "start": "1391210",
    "end": "1396790"
  },
  {
    "text": "attacker just exploits the vulnerability in in second order cross that such attacks in the manipulation the first",
    "start": "1396790",
    "end": "1403570"
  },
  {
    "text": "step of the attack the attacker manipulates the account and creates a",
    "start": "1403570",
    "end": "1409840"
  },
  {
    "text": "response inflation effect and then in the second step the attacker can just effectively lounge browser-based or the",
    "start": "1409840",
    "end": "1416590"
  },
  {
    "text": "original process search attack in this toca will present to second order",
    "start": "1416590",
    "end": "1421960"
  },
  {
    "text": "processor she attacks the first is the simple one and the second is more",
    "start": "1421960",
    "end": "1427360"
  },
  {
    "text": "sophisticated the inflating second order cross out search attacks so let's define",
    "start": "1427360",
    "end": "1432790"
  },
  {
    "text": "the model of this attack so we talk about storage and this storage contains many records and the attacker is",
    "start": "1432790",
    "end": "1439420"
  },
  {
    "text": "interested in the value of some secret that appears only once in one of the",
    "start": "1439420",
    "end": "1444790"
  },
  {
    "text": "records we have another assumption which maybe seems very strong but it is a very",
    "start": "1444790",
    "end": "1450730"
  },
  {
    "text": "practical assumption and the assumption is that the attacker can manipulate the attack storage remotely but I will show",
    "start": "1450730",
    "end": "1458230"
  },
  {
    "text": "you that this is really practical attack because take for example email account everyone can",
    "start": "1458230",
    "end": "1464340"
  },
  {
    "text": "manipulate email account remotely you can just send an email to the attacked account and that you manipulate it",
    "start": "1464340",
    "end": "1470850"
  },
  {
    "text": "remotely so toward the end of this talk I will show you another service that can",
    "start": "1470850",
    "end": "1476610"
  },
  {
    "text": "be manipulated remotely but right now let's focus on email accounts so the",
    "start": "1476610",
    "end": "1484170"
  },
  {
    "start": "1483000",
    "end": "1532000"
  },
  {
    "text": "simple attack the problem is simple what is our problem the secret appears only once in the",
    "start": "1484170",
    "end": "1492150"
  },
  {
    "text": "attacked storage so we have a simple solution to this problem the attacker will add to the attack storage many",
    "start": "1492150",
    "end": "1498420"
  },
  {
    "text": "records that will contain the secret ok",
    "start": "1498420",
    "end": "1503690"
  },
  {
    "text": "ok I see that it is not going it's good and this is indeed a very strange",
    "start": "1504080",
    "end": "1510870"
  },
  {
    "text": "situation the attacker doesn't know what the secret is and I say that the attacker will overcome the challenge of",
    "start": "1510870",
    "end": "1517340"
  },
  {
    "text": "by adding records to the storage that will contain the unknown secret ok",
    "start": "1517340",
    "end": "1522750"
  },
  {
    "text": "remember the challenge of the attacker is to detect what the secret is so how could it be I will show you an",
    "start": "1522750",
    "end": "1528780"
  },
  {
    "text": "example that we show that sometimes it is indeed possible and in this example the goal of the attacker is to extract",
    "start": "1528780",
    "end": "1536700"
  },
  {
    "start": "1532000",
    "end": "1615000"
  },
  {
    "text": "the Facebook password reset code of the victim who also has a yahoo email",
    "start": "1536700",
    "end": "1544230"
  },
  {
    "text": "account so this is this is the flow of the attack this is the cross-site attack",
    "start": "1544230",
    "end": "1549270"
  },
  {
    "text": "the the victim serves to the attacking page and we have another assumption the attacker knows the the Yahoo email",
    "start": "1549270",
    "end": "1556740"
  },
  {
    "text": "address of the victim the attacker can either launch an attack to get the yahoo",
    "start": "1556740",
    "end": "1562560"
  },
  {
    "text": "email address or just to launch a targeted attack on on someone with known",
    "start": "1562560",
    "end": "1568110"
  },
  {
    "text": "a yahoo email address and then the attacker initiates password reset",
    "start": "1568110",
    "end": "1573480"
  },
  {
    "text": "process in facebook using the yahoo email address of the victim and this",
    "start": "1573480",
    "end": "1579630"
  },
  {
    "text": "tricks facebook to send to the yahoo email account of the victim an email with 6 digit password reset code now the",
    "start": "1579630",
    "end": "1587490"
  },
  {
    "text": "attacker can repeat this process several time and in the facebook example i when",
    "start": "1587490",
    "end": "1593640"
  },
  {
    "text": "i tested it I was able to repeat this process 15 times and of course Facebook sent the",
    "start": "1593640",
    "end": "1600340"
  },
  {
    "text": "same code every time so now the secret appears 15 times in the accountant the",
    "start": "1600340",
    "end": "1607090"
  },
  {
    "text": "attacker can lounge across a church attack and to extract the six digit",
    "start": "1607090",
    "end": "1613210"
  },
  {
    "text": "password reset go so this was the simple attack and it is very nice but as you",
    "start": "1613210",
    "end": "1620410"
  },
  {
    "start": "1615000",
    "end": "1658000"
  },
  {
    "text": "could see it is very limited we can't inflate the size difference between full and empty responses as we",
    "start": "1620410",
    "end": "1627550"
  },
  {
    "text": "wish and therefore I'm happy to introduce the inflating second order cross that search",
    "start": "1627550",
    "end": "1633580"
  },
  {
    "text": "attack which is pretty cool attack you will see I hope you you will enjoy it and this attack creates significant",
    "start": "1633580",
    "end": "1641380"
  },
  {
    "text": "response inflation effect but unlike every other attack you have seen so far",
    "start": "1641380",
    "end": "1647740"
  },
  {
    "text": "in the inflating second order cross that surge attack the empty response is going",
    "start": "1647740",
    "end": "1652840"
  },
  {
    "text": "to be significantly larger than the full response let's extend our model so first",
    "start": "1652840",
    "end": "1660610"
  },
  {
    "start": "1658000",
    "end": "1774000"
  },
  {
    "text": "of all the goal of the attacker is to detect the value of some secret and this",
    "start": "1660610",
    "end": "1665920"
  },
  {
    "text": "secret there is some dictionary of values thousands of values that can be",
    "start": "1665920",
    "end": "1670960"
  },
  {
    "text": "the one of them is the value of the secret and the goal of the attacker is",
    "start": "1670960",
    "end": "1677080"
  },
  {
    "text": "to detect the value of the secret I'm adding three notations M is the number",
    "start": "1677080",
    "end": "1682450"
  },
  {
    "text": "the maximum number of results in a search response a match or record is a",
    "start": "1682450",
    "end": "1688060"
  },
  {
    "text": "record that matches all the all the possible values it simply contains all",
    "start": "1688060",
    "end": "1694390"
  },
  {
    "text": "the values from the dictionary and therefore every search request that asks",
    "start": "1694390",
    "end": "1700150"
  },
  {
    "text": "about a set of values from the dictionary the there is possibility that",
    "start": "1700150",
    "end": "1705610"
  },
  {
    "text": "the measure record will appear in the response and the last notation is inflating record and the inflating",
    "start": "1705610",
    "end": "1712600"
  },
  {
    "text": "record is a record that significantly increases the size of every response",
    "start": "1712600",
    "end": "1718420"
  },
  {
    "text": "that contains it okay so these are the new notations and this is the attack",
    "start": "1718420",
    "end": "1725110"
  },
  {
    "text": "process in the first step of the attack day manipulation step the",
    "start": "1725110",
    "end": "1730330"
  },
  {
    "text": "attacker plants one natural inflating record in the attack storage then the",
    "start": "1730330",
    "end": "1735970"
  },
  {
    "text": "attacker plants additional m- one match all records and then the attacker can",
    "start": "1735970",
    "end": "1742419"
  },
  {
    "text": "wait and the user may use his account and add records or the attacker can just",
    "start": "1742419",
    "end": "1748320"
  },
  {
    "text": "do tricks like the Facebook / password reset code tricks that I showed you and there will be another record in the",
    "start": "1748320",
    "end": "1757450"
  },
  {
    "text": "storage that contains our secret a single record in the second part of the attack the attacker will just lounge",
    "start": "1757450",
    "end": "1764970"
  },
  {
    "text": "browser-based a across that such attack and will effectively extract the secret",
    "start": "1764970",
    "end": "1771210"
  },
  {
    "text": "and now I will explain you why this attack works so let's examine the",
    "start": "1771210",
    "end": "1776230"
  },
  {
    "text": "storage at the bottom we can see the inflating metro record above we have a",
    "start": "1776230",
    "end": "1782019"
  },
  {
    "text": "-1 mesh of records and at the top we have the record with a secret when the",
    "start": "1782019",
    "end": "1788889"
  },
  {
    "text": "attacker sends a search request that asks for a set of values that at least",
    "start": "1788889",
    "end": "1797350"
  },
  {
    "text": "one of them match the secret then the response that will be returned we will",
    "start": "1797350",
    "end": "1804580"
  },
  {
    "text": "have M entries and the first entry will be the newest entry the entry with just",
    "start": "1804580",
    "end": "1809769"
  },
  {
    "text": "the record with the secret the other n minus 1 records will be the match all records on the other end and of course",
    "start": "1809769",
    "end": "1817090"
  },
  {
    "text": "the size of such response is just normal okay this is a normal response on the",
    "start": "1817090",
    "end": "1822309"
  },
  {
    "text": "other end if the attacker sends a search request and none of the values the",
    "start": "1822309",
    "end": "1829269"
  },
  {
    "text": "search request asked for a set of values and no and the secret doesn't match any",
    "start": "1829269",
    "end": "1834549"
  },
  {
    "text": "of the values that appear in the search request then the M results that will be",
    "start": "1834549",
    "end": "1841629"
  },
  {
    "text": "returned in the response will be all the metro records including the inflating metro record and in this case due to the",
    "start": "1841629",
    "end": "1849129"
  },
  {
    "text": "inclusion of the inflated metro record the size of the response is going to be very large significantly larger than the",
    "start": "1849129",
    "end": "1856149"
  },
  {
    "text": "normal response now I owe you an explanation about how",
    "start": "1856149",
    "end": "1861850"
  },
  {
    "start": "1859000",
    "end": "1911000"
  },
  {
    "text": "how can how can we create an inflating record so I found a very simple trick to",
    "start": "1861850",
    "end": "1868490"
  },
  {
    "text": "do to create an inflating Records in email services this trick was applicable",
    "start": "1868490",
    "end": "1874280"
  },
  {
    "text": "in both a Yahoo and Gmail and I found that there is no reasonable length",
    "start": "1874280",
    "end": "1881900"
  },
  {
    "text": "restriction on the from and the tooth email fills in emails so I could just",
    "start": "1881900",
    "end": "1887060"
  },
  {
    "text": "send email for example with a frown field which contains a half a megabyte",
    "start": "1887060",
    "end": "1893030"
  },
  {
    "text": "string which is very significant and the from field specifically is reflected in",
    "start": "1893030",
    "end": "1899780"
  },
  {
    "text": "the search responses so to create an inflating record in email services I",
    "start": "1899780",
    "end": "1905630"
  },
  {
    "text": "just sent an email with a very long from field half a megabyte for example and",
    "start": "1905630",
    "end": "1910960"
  },
  {
    "text": "now to my favorite example remember at the beginning of this talk I told you",
    "start": "1910960",
    "end": "1916040"
  },
  {
    "start": "1911000",
    "end": "2038000"
  },
  {
    "text": "what could be extracted using cross-site search attack and I told you that it is possible to extract sensitive",
    "start": "1916040",
    "end": "1923420"
  },
  {
    "text": "information that appears in fixed structure then I say fixed structures",
    "start": "1923420",
    "end": "1928520"
  },
  {
    "text": "and I gave as an example credit card number so now it is the time to show you how to extract credit card numbers and",
    "start": "1928520",
    "end": "1935950"
  },
  {
    "text": "actually I showed you how to do that you know I showed you how to extract the",
    "start": "1935950",
    "end": "1941150"
  },
  {
    "text": "first and the last names of Gmail users out of ok the two values out of mm",
    "start": "1941150",
    "end": "1949040"
  },
  {
    "text": "options and to extract Visa or MasterCard credit card numbers this is",
    "start": "1949040",
    "end": "1954290"
  },
  {
    "text": "not much harder it is just about extracting 4 values out of 10,000 options can you see it",
    "start": "1954290",
    "end": "1961030"
  },
  {
    "text": "Visa and MasterCard credit card numbers are actually for for sequences of 4",
    "start": "1961030",
    "end": "1967910"
  },
  {
    "text": "digits each ok so the number of options for each four digit sequence is ten",
    "start": "1967910",
    "end": "1974060"
  },
  {
    "text": "thousand ok so the challenge is to extract four values out of ten thousands options this is not much harder than the",
    "start": "1974060",
    "end": "1981500"
  },
  {
    "text": "demo you already saw so in this demo the",
    "start": "1981500",
    "end": "1986810"
  },
  {
    "text": "metro record will be just a record with all the possible values for",
    "start": "1986810",
    "end": "1993260"
  },
  {
    "text": "sure four-digit sequence 10,000 numbers the inflated natural record will be just",
    "start": "1993260",
    "end": "2000100"
  },
  {
    "text": "a metro record that was sent to the victim with a very long prom field and I",
    "start": "2000100",
    "end": "2007960"
  },
  {
    "text": "want to demonstrate this attack on Gmail and the question is how can I do that I",
    "start": "2007960",
    "end": "2013540"
  },
  {
    "text": "told you at the beginning of the talk that it is no longer possible to send cross at search requests in the HTML",
    "start": "2013540",
    "end": "2019720"
  },
  {
    "text": "view of Gmail later I showed you the names attack and I told you that Gmail also blocked process search requests in",
    "start": "2019720",
    "end": "2025809"
  },
  {
    "text": "the standard view so how can how it is possible to lounge cross site search",
    "start": "2025809",
    "end": "2031030"
  },
  {
    "text": "attacks without sending cross at search requests this is a significant challenge when we talk about processor attacks so",
    "start": "2031030",
    "end": "2038140"
  },
  {
    "start": "2038000",
    "end": "2074000"
  },
  {
    "text": "unfortunately for Google you can say luckily for me it is still possible to",
    "start": "2038140",
    "end": "2044020"
  },
  {
    "text": "send requests for autocomplete suggestions in Gmail in a cross-site",
    "start": "2044020",
    "end": "2050560"
  },
  {
    "text": "manner and as you can see in your Gmail accounts and also on the screen if you",
    "start": "2050560",
    "end": "2055720"
  },
  {
    "text": "don't have Gmail accounts in the autocomplete suggestions in Gmail there",
    "start": "2055720",
    "end": "2060970"
  },
  {
    "text": "are up to 4 entries that come from the Gmail account so this is almost like",
    "start": "2060970",
    "end": "2067090"
  },
  {
    "text": "sending cross-site search requests to send a request for autocomplete suggestions let's see how this attack",
    "start": "2067090",
    "end": "2073720"
  },
  {
    "text": "works so this is our attacked account just what the illustration you can see we",
    "start": "2073720",
    "end": "2079179"
  },
  {
    "start": "2074000",
    "end": "2175000"
  },
  {
    "text": "have an inflating measure record above we have M minus 1 M is 4 so M minus 1 is",
    "start": "2079179",
    "end": "2085480"
  },
  {
    "text": "3 we have M minus 1 metro records and we have the new record",
    "start": "2085480",
    "end": "2091210"
  },
  {
    "text": "record with the secret in this example this is an email that contains a receipt",
    "start": "2091210",
    "end": "2096820"
  },
  {
    "text": "with credit card number so this is an",
    "start": "2096820",
    "end": "2101859"
  },
  {
    "text": "example to request for autocomplete suggestion that asks for a set of values",
    "start": "2101859",
    "end": "2108700"
  },
  {
    "text": "that one of them the 1 2 3 4 is part of the credit card number and in the",
    "start": "2108700",
    "end": "2113740"
  },
  {
    "text": "response you can see that the first record is the record with the secret the record with the credit card number the",
    "start": "2113740",
    "end": "2119609"
  },
  {
    "text": "other n minus 1 records are the match all record the size of this response is",
    "start": "2119609",
    "end": "2126250"
  },
  {
    "text": "nor on the other end if the attacker sends a search request request for autocomplete",
    "start": "2126250",
    "end": "2135070"
  },
  {
    "text": "suggestion for a set of values that none of them is part of the credit-card",
    "start": "2135070",
    "end": "2140860"
  },
  {
    "text": "number then in this case we have only metro records and we have the N minus 1",
    "start": "2140860",
    "end": "2146610"
  },
  {
    "text": "metro records and we also have the inflating Metro record you can see the",
    "start": "2146610",
    "end": "2152590"
  },
  {
    "text": "long from field so in this case due to the inclusion of the inflated Metro record the size of the autocomplete",
    "start": "2152590",
    "end": "2159490"
  },
  {
    "text": "suggestions response will be significantly larger it will be actually half a megabyte compared to a few",
    "start": "2159490",
    "end": "2166120"
  },
  {
    "text": "kilobytes so of course the time difference between both the cases is",
    "start": "2166120",
    "end": "2171640"
  },
  {
    "text": "significant then the attacker can easily detect this difference let's see if video dem of this attack of course I",
    "start": "2171640",
    "end": "2179020"
  },
  {
    "start": "2175000",
    "end": "2359000"
  },
  {
    "text": "cannot show you real demos of this attack although there are many websites vulnerable because we lost the option to",
    "start": "2179020",
    "end": "2186100"
  },
  {
    "text": "get bug bounties so only videos and",
    "start": "2186100",
    "end": "2191250"
  },
  {
    "text": "let's see the demo so this is jut the account you saw on the screen in",
    "start": "2191250",
    "end": "2198580"
  },
  {
    "text": "presentation and here you can see the inflating match all record you can see the long from field you can see all the",
    "start": "2198580",
    "end": "2204610"
  },
  {
    "text": "possible all the 10,000 option for four-digit sequence I could add them as",
    "start": "2204610",
    "end": "2211720"
  },
  {
    "text": "in an attachment also above you can see the the three match of records and they",
    "start": "2211720",
    "end": "2221140"
  },
  {
    "text": "just contain all the possible values and at the top we have the record with the",
    "start": "2221140",
    "end": "2228430"
  },
  {
    "text": "secret and you can see the credit car number as an attachment",
    "start": "2228430",
    "end": "2234300"
  },
  {
    "text": "remember the credit card number because I'm going to extract it so this is the",
    "start": "2234300",
    "end": "2240160"
  },
  {
    "text": "credit card number and now let's see how the autocomplete suggestion feature works so in this double you will see how other",
    "start": "2240160",
    "end": "2249070"
  },
  {
    "text": "great suggestions are sent via the graphical user interface but in the attack the attacker just sends the same",
    "start": "2249070",
    "end": "2255910"
  },
  {
    "text": "request in a cross-eyed manner from the attacking page so you can just see same requests are sent by the attacker",
    "start": "2255910",
    "end": "2262509"
  },
  {
    "text": "and this was actually the problem so when the attackers sends requests for a set of values that none of them is part",
    "start": "2262509",
    "end": "2269920"
  },
  {
    "text": "of the credit card number you can see the that the response the response that",
    "start": "2269920",
    "end": "2276579"
  },
  {
    "text": "you can see on their eye contains only metro records and you can see although the inflating metro record that",
    "start": "2276579",
    "end": "2282759"
  },
  {
    "text": "increases this size significantly however when the attacker adds to the set of questioned values a number that",
    "start": "2282759",
    "end": "2290829"
  },
  {
    "text": "is part of the credit card number they one two three four you can see that now in the response instead of the inflating",
    "start": "2290829",
    "end": "2297400"
  },
  {
    "text": "metro record we have the record with the secret so in this case the size of the",
    "start": "2297400",
    "end": "2303969"
  },
  {
    "text": "response will be small so this is the attack and the attack this is the",
    "start": "2303969",
    "end": "2312130"
  },
  {
    "text": "attacking pledge and actually from the attacking page the attack looks very similar to the attack I already showed",
    "start": "2312130",
    "end": "2320499"
  },
  {
    "text": "you so I will skip and this is very similar to the OMT algorithm very",
    "start": "2320499",
    "end": "2326229"
  },
  {
    "text": "quickly the size of the subset is cut by",
    "start": "2326229",
    "end": "2332019"
  },
  {
    "text": "half every round and in this case within 50 seconds the credit card number will",
    "start": "2332019",
    "end": "2340269"
  },
  {
    "text": "appear on screen in the attacking page so this is a very cool to extract 16",
    "start": "2340269",
    "end": "2348269"
  },
  {
    "text": "digit credit card number in less than a minute pretty cool",
    "start": "2348269",
    "end": "2354479"
  },
  {
    "text": "thank you and I evaluated this attack on",
    "start": "2355820",
    "end": "2361950"
  },
  {
    "start": "2359000",
    "end": "2390000"
  },
  {
    "text": "several Gmail accounts hundreds of time and this attack succeeded to achieve 96%",
    "start": "2361950",
    "end": "2367350"
  },
  {
    "text": "success rate which is pretty awesome and also in the other 4% relying on the way",
    "start": "2367350",
    "end": "2373590"
  },
  {
    "text": "credit card numbers are chosen I because I detected three out of the four",
    "start": "2373590",
    "end": "2380390"
  },
  {
    "text": "sequences I was able to detect the error and to easily extract also the missing",
    "start": "2380390",
    "end": "2386490"
  },
  {
    "text": "four digit sequence as you could see there is a Drabek in the second order",
    "start": "2386490",
    "end": "2393720"
  },
  {
    "start": "2390000",
    "end": "2422000"
  },
  {
    "text": "cross at such attacks I showed you and the problem is that the victim can see",
    "start": "2393720",
    "end": "2399150"
  },
  {
    "text": "the planted records we would like to lounge to find a way to lounge second",
    "start": "2399150",
    "end": "2405360"
  },
  {
    "text": "order cross at such attacks without raising suspicion and of course this is",
    "start": "2405360",
    "end": "2411570"
  },
  {
    "text": "will be an optimal case and an attack that a second-order attack that will not",
    "start": "2411570",
    "end": "2419310"
  },
  {
    "text": "resist mission I will call it a stealthy attack so in email services I found a",
    "start": "2419310",
    "end": "2424620"
  },
  {
    "start": "2422000",
    "end": "2463000"
  },
  {
    "text": "very nice very simple trick actually to launch second order cross at such attacks stealthily and the trick is to",
    "start": "2424620",
    "end": "2431520"
  },
  {
    "text": "abuse anti-spam mechanism if the attacker can move the dimension records",
    "start": "2431520",
    "end": "2438840"
  },
  {
    "text": "and the inflated natural records to the spam folder of the victim the victim will not see them the victim will not",
    "start": "2438840",
    "end": "2445380"
  },
  {
    "text": "get notifications when the emails arrive so this is great however this trick is applicable only in",
    "start": "2445380",
    "end": "2452880"
  },
  {
    "text": "email services like Gmail that support search in the spam folder and in other",
    "start": "2452880",
    "end": "2459060"
  },
  {
    "text": "folders using the same search request so we must service as a really great",
    "start": "2459060",
    "end": "2465510"
  },
  {
    "text": "example to services that are vulnerable to second-order cross at such attacks but there are also other services and",
    "start": "2465510",
    "end": "2474380"
  },
  {
    "text": "the last example in this talk will be an example how to extract search history",
    "start": "2474380",
    "end": "2480450"
  },
  {
    "text": "from search engines and to extract search history from search engines from",
    "start": "2480450",
    "end": "2486080"
  },
  {
    "text": "we need to do two things first of all we need to be able to plant records to the search",
    "start": "2486080",
    "end": "2492400"
  },
  {
    "text": "history logs and the second challenge is to inject an inflating record",
    "start": "2492400",
    "end": "2498840"
  },
  {
    "text": "luckily the first problem is solved we showed in previous work that it is",
    "start": "2498840",
    "end": "2505270"
  },
  {
    "text": "possible to easily plant records to the search history logs of Gmail of a Google",
    "start": "2505270",
    "end": "2511150"
  },
  {
    "text": "Yahoo being even facebook very easy for cross that attacker and we remain with",
    "start": "2511150",
    "end": "2517720"
  },
  {
    "text": "the challenge of planting and inflating record - the search history logs and I",
    "start": "2517720",
    "end": "2523210"
  },
  {
    "text": "will show you explain not sure I will explain you how to do that in Bing and",
    "start": "2523210",
    "end": "2530580"
  },
  {
    "text": "in Bing search histories you can see on the screen every record in the search",
    "start": "2530760",
    "end": "2537490"
  },
  {
    "text": "history feature is actually a search that was done by the user and the size",
    "start": "2537490",
    "end": "2543550"
  },
  {
    "text": "of every record is determined by the number of results that the user clicked",
    "start": "2543550",
    "end": "2549340"
  },
  {
    "text": "on them so I worked hard on being and I found a way to plant a record that",
    "start": "2549340",
    "end": "2555820"
  },
  {
    "text": "represents a search that was done by the user and that the user clicked on",
    "start": "2555820",
    "end": "2561400"
  },
  {
    "text": "hundreds of its results of course this is a very large record and once we have",
    "start": "2561400",
    "end": "2567940"
  },
  {
    "text": "the option to inject regular records and to inject an inflating record we can",
    "start": "2567940",
    "end": "2573340"
  },
  {
    "text": "just lounge the same inflating second order cross at search attack on being",
    "start": "2573340",
    "end": "2578560"
  },
  {
    "text": "just as done in the email case and of course this attack is also is also",
    "start": "2578560",
    "end": "2583780"
  },
  {
    "text": "stealthy because users usually do not visit their search search logs the users",
    "start": "2583780",
    "end": "2590500"
  },
  {
    "text": "usually do not access the search history feature so two slides and let's talk",
    "start": "2590500",
    "end": "2598390"
  },
  {
    "start": "2594000",
    "end": "2646000"
  },
  {
    "text": "about defenses very briefly so if possible try to block cross that search",
    "start": "2598390",
    "end": "2604420"
  },
  {
    "text": "request if you can't try to block inflation techniques and apply to apply",
    "start": "2604420",
    "end": "2611530"
  },
  {
    "text": "maybe other restrictions like rate limit or other things but actually the",
    "start": "2611530",
    "end": "2617200"
  },
  {
    "text": "challenge the real challenge is not to block given vulnerability and this is like most of the other web applications",
    "start": "2617200",
    "end": "2623480"
  },
  {
    "text": "attack yeah input validation the real challenge is to detect all the",
    "start": "2623480",
    "end": "2628550"
  },
  {
    "text": "vulnerable spots as you could see in the Gmail example just to block or they cross at search requests wasn't enough",
    "start": "2628550",
    "end": "2635570"
  },
  {
    "text": "it wasn't enough it was possible to launch the same attack by exploiting the autocomplete suggestion feature so the",
    "start": "2635570",
    "end": "2642740"
  },
  {
    "text": "real challenge is to identify all the vulnerable spots conclusions so I",
    "start": "2642740",
    "end": "2649010"
  },
  {
    "start": "2646000",
    "end": "2676000"
  },
  {
    "text": "introduced advanced website search attacks and browser based processes",
    "start": "2649010",
    "end": "2654140"
  },
  {
    "text": "attacks and second order processor attacks I showed you that the attacks are practical as they are here in the",
    "start": "2654140",
    "end": "2660530"
  },
  {
    "text": "audience people for security teams of company that know that this attack is",
    "start": "2660530",
    "end": "2665690"
  },
  {
    "text": "practical and there are also other many vulnerable websites that are vulnerable",
    "start": "2665690",
    "end": "2671570"
  },
  {
    "text": "go to find them and that's all generally thank you very much for your attention",
    "start": "2671570",
    "end": "2680560"
  },
  {
    "start": "2676000",
    "end": "3077000"
  },
  {
    "text": "and I will be glad to take questions here and you can also search my name in",
    "start": "2683820",
    "end": "2690990"
  },
  {
    "text": "the web to find my email and to email me questions I will be glad to answer",
    "start": "2690990",
    "end": "2696800"
  },
  {
    "text": "questions yes",
    "start": "2696800",
    "end": "2704210"
  },
  {
    "text": "oh so the question is how if I understand correctly how can the",
    "start": "2712140",
    "end": "2718290"
  },
  {
    "text": "attacker make sure that the numbers that get in the results are the true numbers",
    "start": "2718290",
    "end": "2724800"
  },
  {
    "text": "so of course in the attack I don't just search for four-digit numbers I also ask",
    "start": "2724800",
    "end": "2730800"
  },
  {
    "text": "for terms like Visa or Visa or MasterCard or turns that I know that",
    "start": "2730800",
    "end": "2737100"
  },
  {
    "text": "will appear together with credit card numbers and yet there might be problem",
    "start": "2737100",
    "end": "2743250"
  },
  {
    "text": "if there are several credit card numbers yeah but the attacker can overcome them",
    "start": "2743250",
    "end": "2749490"
  },
  {
    "text": "it's more complicated but it is possible the attacker can play with the dates range to limit to filter emails so there",
    "start": "2749490",
    "end": "2758220"
  },
  {
    "text": "are tricks to do more complicated question did Facebook block you yet or",
    "start": "2758220",
    "end": "2770760"
  },
  {
    "text": "oh this is a risky question because for",
    "start": "2770760",
    "end": "2777990"
  },
  {
    "text": "sure I report it to Facebook okay be sure if they blocked or not and where",
    "start": "2777990",
    "end": "2784170"
  },
  {
    "text": "exactly was the vulnerability fair",
    "start": "2784170",
    "end": "2789300"
  },
  {
    "text": "enough Thanks so my question is if you this is a check lever attack if if we if",
    "start": "2789300",
    "end": "2796770"
  },
  {
    "text": "Google wanted to mitigate it when they send the results if instead of sending",
    "start": "2796770",
    "end": "2801860"
  },
  {
    "text": "the content in the Ajax request they sent only the subject of the email as",
    "start": "2801860",
    "end": "2807900"
  },
  {
    "text": "opposed to preload and they call email body with that help or or that wouldn't help notice that okay the question is if",
    "start": "2807900",
    "end": "2818750"
  },
  {
    "text": "if I if if Google would if Google sent only the subject if it would help so it",
    "start": "2818750",
    "end": "2828420"
  },
  {
    "text": "depends for example in the autocomplete suggestions feature they don't send the",
    "start": "2828420",
    "end": "2834000"
  },
  {
    "text": "entire email okay yet the front thing was reflected the the",
    "start": "2834000",
    "end": "2839370"
  },
  {
    "text": "challenge is you should not answer personalized a",
    "start": "2839370",
    "end": "2845029"
  },
  {
    "text": "questions to cross that search request this is the trick and to avoid in all",
    "start": "2845029",
    "end": "2851630"
  },
  {
    "text": "the inflation tricks you need to just block them okay",
    "start": "2851630",
    "end": "2856939"
  },
  {
    "text": "this is brilliant thank you I have two questions how did you know what the",
    "start": "2856939",
    "end": "2864079"
  },
  {
    "text": "order was of the four digit parts of the credit card in other words you get four four digit combinations but you don't",
    "start": "2864079",
    "end": "2870529"
  },
  {
    "text": "know which one is which oh this is easy winning okay credit card numbers have",
    "start": "2870529",
    "end": "2878299"
  },
  {
    "text": "specific structures for example in the example I showed you the first two",
    "start": "2878299",
    "end": "2884150"
  },
  {
    "text": "sequences are known and also their order and actually the question is only about the order of the last two sequences this",
    "start": "2884150",
    "end": "2892819"
  },
  {
    "text": "is really easy I didn't even bother to to extract the order but it is really",
    "start": "2892819",
    "end": "2898219"
  },
  {
    "text": "easy time in general if it's a longer sequence it could be more problematic of course it will be more challenging it",
    "start": "2898219",
    "end": "2904279"
  },
  {
    "text": "will take more time you could do it by",
    "start": "2904279",
    "end": "2910279"
  },
  {
    "text": "building up the prefix of known the known prefix for example yeah actually my demo there is an array of non perfect",
    "start": "2910279",
    "end": "2917569"
  },
  {
    "text": "perfect sets for credit card numbers but I don't use it okay I don't need how",
    "start": "2917569",
    "end": "2926689"
  },
  {
    "text": "does the trackers JavaScript measure response times do you have like a blocking xhr or okay so specifically",
    "start": "2926689",
    "end": "2934509"
  },
  {
    "text": "first we have the performance API I didn't use it because I wanted that this",
    "start": "2934509",
    "end": "2940400"
  },
  {
    "text": "demo will work also in browsers that in all the browsers and such things so I",
    "start": "2940400",
    "end": "2946459"
  },
  {
    "text": "just took the time since the response was sent and on error or unload events",
    "start": "2946459",
    "end": "2953390"
  },
  {
    "text": "and such things so you can just do it in the most basic way you can think about",
    "start": "2953390",
    "end": "2958549"
  },
  {
    "text": "could we have like a browser-based defense where if the browser knows it's a cross-origin request and knows the",
    "start": "2958549",
    "end": "2965630"
  },
  {
    "text": "response will be locked just return the xhr immediately okay so the question is",
    "start": "2965630",
    "end": "2971479"
  },
  {
    "text": "about browser based defense mechanism to generally to develop",
    "start": "2971479",
    "end": "2979609"
  },
  {
    "text": "browser based defenses we'd prevent a cross-site attacks by stripping for",
    "start": "2979609",
    "end": "2985520"
  },
  {
    "text": "example cookies it is very problematic because the web is built upon connectivity you know you're served to a website this website sends many requests",
    "start": "2985520",
    "end": "2994430"
  },
  {
    "text": "to other websites to bring images advertisement and all these requests the",
    "start": "2994430",
    "end": "3000760"
  },
  {
    "text": "responses are personalized so it is pretty hard I believe I believe that this attack should be blocked in the",
    "start": "3000760",
    "end": "3008920"
  },
  {
    "text": "Webster in the web service level this is what I believe Thanks thank you for the presentation my",
    "start": "3008920",
    "end": "3019839"
  },
  {
    "text": "question is can this be mitigated using anti CSRF tokens can repeat can this be",
    "start": "3019839",
    "end": "3026079"
  },
  {
    "text": "mitigated by anti CSRF tokens yes of course",
    "start": "3026079",
    "end": "3031570"
  },
  {
    "text": "anti Caesar tokens will prevent I mean if the question was whether an TCF",
    "start": "3031570",
    "end": "3038200"
  },
  {
    "text": "tokens can be used to block the attack of course yes and again the challenge is",
    "start": "3038200",
    "end": "3043660"
  },
  {
    "text": "not to use anti CSRF to block cross access request this this is something",
    "start": "3043660",
    "end": "3049390"
  },
  {
    "text": "that should be done for sure the challenge is to detect all the interfaces that can be used like cross",
    "start": "3049390",
    "end": "3057280"
  },
  {
    "text": "like search requests so yes antecessor is I believe the most reasonable",
    "start": "3057280",
    "end": "3066660"
  },
  {
    "text": "countermeasure to use thank you",
    "start": "3066660",
    "end": "3071010"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "3073620",
    "end": "3079130"
  }
]