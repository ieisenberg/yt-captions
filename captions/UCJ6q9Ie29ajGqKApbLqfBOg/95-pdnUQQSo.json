[
  {
    "text": "so we came here today with NASA actually hello me David we work for NCC group as",
    "start": "30",
    "end": "6480"
  },
  {
    "text": "security consultants we specialize in cryptography but as our day to day job",
    "start": "6480",
    "end": "12090"
  },
  {
    "text": "recently with we've looked at a lot of smart contracts so we came here kind of to share the knowledge share what we've",
    "start": "12090",
    "end": "18720"
  },
  {
    "text": "learned and give you some sort of intro to the world of security in smart contracts so to start we have a very",
    "start": "18720",
    "end": "26430"
  },
  {
    "text": "detailed timeline of the history of Bitcoin and the theorem as you can see Beacon is starting to get quite old and",
    "start": "26430",
    "end": "33180"
  },
  {
    "text": "a theorem is kind of a more recent so a lot of blossoms learned and and optimizations that we've understood are",
    "start": "33180",
    "end": "40440"
  },
  {
    "text": "in a theorem which makes it kind of a better protocol it's faster it's stronger and so on but it also has",
    "start": "40440",
    "end": "47489"
  },
  {
    "text": "something very specific it has smart contracts and smart contracts are our kind of you know programs and we have",
    "start": "47489",
    "end": "55079"
  },
  {
    "text": "some sort of good analogy for that too to explain so Gavin wood who's the",
    "start": "55079",
    "end": "61440"
  },
  {
    "text": "creator of solidity which is the language most of these smart contracts are written in says that aetherium is a",
    "start": "61440",
    "end": "67650"
  },
  {
    "text": "computer and for this talk we're going to be using that essentially as a main analogy so why is a theorem a computer",
    "start": "67650",
    "end": "75180"
  },
  {
    "text": "how does that make sense so basically smart contracts are programs that can get uploaded onto you",
    "start": "75180",
    "end": "82500"
  },
  {
    "text": "know this sort of big computer of aetherium that we can all interact with because these interactions are well",
    "start": "82500",
    "end": "88259"
  },
  {
    "text": "defined by the solidity language and by the etherium virtual machine itself we will know basically what happens when we",
    "start": "88259",
    "end": "95520"
  },
  {
    "text": "interact with it well unless we don't alright so just imagine a computer right and just so that you don't look at your",
    "start": "95520",
    "end": "102810"
  },
  {
    "text": "phone all the time to check the price this is the current price of a theorem maybe has changed it was yesterday I",
    "start": "102810",
    "end": "109829"
  },
  {
    "text": "think so yeah so a theorem invented by a V Tyco a few years ago a pretty young",
    "start": "109829",
    "end": "115500"
  },
  {
    "text": "guy he wrote the first white paper on the subject it's not really a paper it's rather a github wiki but ok and then it",
    "start": "115500",
    "end": "123780"
  },
  {
    "text": "was followed by the yellow paper white paper was already taken so just the yellow background color by giving would",
    "start": "123780",
    "end": "130379"
  },
  {
    "text": "who pretty much specifies the theorem virtual machine so that's the",
    "start": "130379",
    "end": "136170"
  },
  {
    "text": "the an instruction sets kind of looks like assembly that you can use to write",
    "start": "136170",
    "end": "141180"
  },
  {
    "text": "these programs for a theorem these smart contracts this was quickly followed by",
    "start": "141180",
    "end": "146340"
  },
  {
    "text": "other papers the beige paper the move paper the Mullin paper given the polka",
    "start": "146340",
    "end": "151860"
  },
  {
    "text": "dot paper I don't really understand what's going on there with the backgrounds but we're going to focus on smart contracts so if you want to write",
    "start": "151860",
    "end": "160500"
  },
  {
    "text": "smart contracts you can use solidity that's the main language that's the language supported by the a theramin",
    "start": "160500",
    "end": "165990"
  },
  {
    "text": "Dacian there are others other languages but this one is basically the only one we see right it's more or less it looks",
    "start": "165990",
    "end": "174120"
  },
  {
    "text": "like that as you can see a version at the very top then the contract black has the name and it kind of looks like a",
    "start": "174120",
    "end": "180360"
  },
  {
    "text": "class where you have fields and then you have functions someone might say it",
    "start": "180360",
    "end": "186240"
  },
  {
    "text": "looks very readable and that that's actually on purpose so that people can read and learn the smart contracts very",
    "start": "186240",
    "end": "193530"
  },
  {
    "text": "easily and can maybe write them yeah the high level solidity is basically like JavaScript except for money you know",
    "start": "193530",
    "end": "200130"
  },
  {
    "text": "some people are going to kill us for saying that it looks like JavaScript a lot so you compile that down to bytecode",
    "start": "200130",
    "end": "206459"
  },
  {
    "text": "and that's what you deploy on the ethereal network right we don't deploy the actual source code this bytecode is",
    "start": "206459",
    "end": "213209"
  },
  {
    "text": "actually just the instructions defined by this yellow paper and it's not very readable so usually what you do is that",
    "start": "213209",
    "end": "219810"
  },
  {
    "text": "you also publish the source code like that people can compare and see that it's indeed what's on the network and",
    "start": "219810",
    "end": "225690"
  },
  {
    "text": "they can also read the smart contract make sure that they're interacting with something they agree with all right so",
    "start": "225690",
    "end": "232500"
  },
  {
    "text": "what are these being used for that's a very big question and nobody understand really what's what's cryptocurrencies",
    "start": "232500",
    "end": "237690"
  },
  {
    "text": "well what are the smart contracts so one of the first very first idea of a",
    "start": "237690",
    "end": "243390"
  },
  {
    "text": "theorem was to use it for IPOs oh I mean I see OHS so I SEOs are kind of like",
    "start": "243390",
    "end": "250080"
  },
  {
    "text": "IPOs actually anyone here I sort of I see us before ok ok a few people so just",
    "start": "250080",
    "end": "256709"
  },
  {
    "text": "think of IPOs basically and you can create a smart contract one of these program put it on the a theorem network",
    "start": "256709",
    "end": "263669"
  },
  {
    "text": "and it creates some sort of sub cryptocurrency side of a theorem so you create these",
    "start": "263669",
    "end": "269620"
  },
  {
    "text": "things called tokens and you you sell them for money to investors and in",
    "start": "269620",
    "end": "275050"
  },
  {
    "text": "exchange you get this money to kind of fund your IDs to support your company or your startup this idea of IC o---- is so",
    "start": "275050",
    "end": "283240"
  },
  {
    "text": "strong in a theorem that there is a standard called ERC 20 a theorem requests for comments so like RFC's",
    "start": "283240",
    "end": "289720"
  },
  {
    "text": "right and you have of course IC o---- as a service because everyone everybody",
    "start": "289720",
    "end": "295780"
  },
  {
    "text": "wants to deny zero but not everyone is technical so you can kind of pay them and they do the marketing for you they",
    "start": "295780",
    "end": "301810"
  },
  {
    "text": "do the smart contract for you and you can sit there and just wait for the money to come of course to be legit and",
    "start": "301810",
    "end": "308169"
  },
  {
    "text": "IC o---- needs a white paper so you can go on Fiverr pay five bucks and get a white paper that pulled up legitimate of",
    "start": "308169",
    "end": "313960"
  },
  {
    "text": "course or you can pay five bucks for review but okay what else can you do",
    "start": "313960",
    "end": "319750"
  },
  {
    "text": "well well some people invented this idea of crypto kiddies anyone heard of crypto kitties before",
    "start": "319750",
    "end": "325630"
  },
  {
    "text": "also okay a few people again secruity crypto kitties is the idea of non",
    "start": "325630",
    "end": "330940"
  },
  {
    "text": "fungible tokens assets where different kitties have different prices and people",
    "start": "330940",
    "end": "336250"
  },
  {
    "text": "can't read them and then the value can increase or decrease it's kind of silly but it got really really popular and at",
    "start": "336250",
    "end": "342940"
  },
  {
    "text": "some points it kind of jammed the blockchain because too many people were trying to buy or sell kitties so that's",
    "start": "342940",
    "end": "349599"
  },
  {
    "text": "what there is and the idea was so popular that people kind of rushed in to create their own so there is crypto",
    "start": "349599",
    "end": "355930"
  },
  {
    "text": "celebrities where you can buy Trump or Vitalik for some Ã«this there's a thurman which is like digimon city mayor dot CEO",
    "start": "355930",
    "end": "363700"
  },
  {
    "text": "or you can buy CDs you can buy planets k-pop stars if you want tacos colors",
    "start": "363700",
    "end": "370000"
  },
  {
    "text": "poop and porn stars of course let's get more serious and let's look at the very",
    "start": "370000",
    "end": "375250"
  },
  {
    "text": "first use of a theorem that that was really really huge and legitimate so the",
    "start": "375250",
    "end": "383440"
  },
  {
    "text": "Dow is what I'm talking about the Dow was some sort of decentralized",
    "start": "383440",
    "end": "389700"
  },
  {
    "text": "Kickstarter the centralized crowdfunding there was a smart contract that was around seven hundred lines of code and",
    "start": "389700",
    "end": "397030"
  },
  {
    "text": "people can invest in that smart contract and then they could kind of but for projects and invest in these",
    "start": "397030",
    "end": "402730"
  },
  {
    "text": "projects so the Dow was really really popular so at the time I think that the peak it was one hundred and fifty",
    "start": "402730",
    "end": "409000"
  },
  {
    "text": "million dollars invested that was the largest crowdfunding on any platform to",
    "start": "409000",
    "end": "414040"
  },
  {
    "text": "give you an idea that was 15% of all efforts run that so that's quite a lot unfortunately not so long after that",
    "start": "414040",
    "end": "421390"
  },
  {
    "text": "somebody found a vulnerability in the contract and started draining the contracts getting something like fifty",
    "start": "421390",
    "end": "427060"
  },
  {
    "text": "million dollars and then stopped so that was quite bad that's if you will the the",
    "start": "427060",
    "end": "433660"
  },
  {
    "text": "largest bug bounty ever for 700 lines of code a pretty big reward and yeah so if",
    "start": "433660",
    "end": "440110"
  },
  {
    "text": "they're armed give give them kind of 15% of all efforts right despite of money and the dowel just put it on the fire so",
    "start": "440110",
    "end": "446800"
  },
  {
    "text": "that's quite bad and we're going to see exactly what was wrong with that we have",
    "start": "446800",
    "end": "452350"
  },
  {
    "text": "this very simplified example of a contract that shares the same vulnerability with the Dow all right",
    "start": "452350",
    "end": "458290"
  },
  {
    "text": "it has a mapping this is a hash map this is a dictionary that map's addresses on",
    "start": "458290",
    "end": "463570"
  },
  {
    "text": "the etheral network to values and we have this donate function you can cease",
    "start": "463570",
    "end": "470140"
  },
  {
    "text": "public it's payable that means everybody can call it on the network you can call",
    "start": "470140",
    "end": "475240"
  },
  {
    "text": "it from your your computer and you can send it money because it's payable what it does is that it updates your balance",
    "start": "475240",
    "end": "482110"
  },
  {
    "text": "right you're the message sender to reflect what value you're sending to",
    "start": "482110",
    "end": "487450"
  },
  {
    "text": "that function right so you can add money to your accounts you can imagine that the contract has the state's its database and calling it kind of",
    "start": "487450",
    "end": "494880"
  },
  {
    "text": "influence to that database right it's mutate the states everybody donates",
    "start": "494880",
    "end": "500740"
  },
  {
    "text": "money and at the end there is a big pile of money in the contract everything's put together and you know what is what",
    "start": "500740",
    "end": "508540"
  },
  {
    "text": "money is whose money by checking this this mapping of course we have a",
    "start": "508540",
    "end": "515020"
  },
  {
    "text": "withdraw function with an amount as arguments and you can use that to let",
    "start": "515020",
    "end": "521050"
  },
  {
    "text": "people withdraw their their errors that they've donated before so the first thing the first thing it does is that it",
    "start": "521050",
    "end": "526810"
  },
  {
    "text": "requires your balance to be greater than the amount you're trying to withdraw that makes sense right",
    "start": "526810",
    "end": "533850"
  },
  {
    "text": "second thing it does is that it calls your address your message center in that line it calls your address and it sends",
    "start": "533920",
    "end": "539380"
  },
  {
    "text": "you the money that you're willing to to to withdraw and after that at the very",
    "start": "539380",
    "end": "546070"
  },
  {
    "text": "last it updates your balance right it removes it subtracts the amount you're withdrawing from this this state the",
    "start": "546070",
    "end": "552940"
  },
  {
    "text": "contract state all right so the problem here is when we're calling your address",
    "start": "552940",
    "end": "558339"
  },
  {
    "text": "to give you back your money this is the problem here so let's let's see a diagram so imagine that you're the",
    "start": "558339",
    "end": "565120"
  },
  {
    "text": "message sender you're sending some some money to the DAO some ethers the other donate function I know you want to",
    "start": "565120",
    "end": "571209"
  },
  {
    "text": "withdraw everything you like Hado okay can I withdraw something right sure and if that was like yeah yeah I'm",
    "start": "571209",
    "end": "577449"
  },
  {
    "text": "checking that you have to balance and now I'm sending you back the money right at these points the devil can have",
    "start": "577449",
    "end": "583510"
  },
  {
    "text": "caused your address right but it's all part of the same transaction now addresses on a theorem are either",
    "start": "583510",
    "end": "592029"
  },
  {
    "text": "contract addresses or non contract addresses so either yourself like a",
    "start": "592029",
    "end": "597220"
  },
  {
    "text": "person addresses or a smart contract right and here imagine that the person who is actually donated to the contract",
    "start": "597220",
    "end": "603190"
  },
  {
    "text": "the Dow and is no withdrawing is not a person it's a contract it's possible it's possible what you would have to do",
    "start": "603190",
    "end": "610000"
  },
  {
    "text": "is you would have to call this contract first to start the transaction and the contract would then call the Dow and the",
    "start": "610000",
    "end": "616600"
  },
  {
    "text": "Dow would send it back send back the money to the contract that's all part of one transaction again at this point",
    "start": "616600",
    "end": "625269"
  },
  {
    "text": "really when the Dow is calling your contracts your address your contract",
    "start": "625269",
    "end": "631260"
  },
  {
    "text": "there is maybe a full back function in there and if there is pretty much there",
    "start": "631260",
    "end": "638199"
  },
  {
    "text": "is code execution so they're calling a function on your contract this is kind of a weird idea of calling other",
    "start": "638199",
    "end": "645819"
  },
  {
    "text": "contracts which can call all the contracts and you have to be aware that this this kind of thing can happen right",
    "start": "645819",
    "end": "652959"
  },
  {
    "text": "a contract can call another contract that can call another contract and so on and these security-wise is very kind of",
    "start": "652959",
    "end": "659010"
  },
  {
    "text": "messy and it can quickly get out of hand so you have to be careful about what",
    "start": "659010",
    "end": "664180"
  },
  {
    "text": "you're doing so what can we do at this point they're calling our contract and you can see",
    "start": "664180",
    "end": "670690"
  },
  {
    "text": "that as some sort of nested call in the execution of the the first smart contract and one what can our militia",
    "start": "670690",
    "end": "678490"
  },
  {
    "text": "smart contract do well he can just call back into the Dow remember were here in",
    "start": "678490",
    "end": "685210"
  },
  {
    "text": "the execution of the Dow which is calling our contract right so we are in some sort of nested call we haven't",
    "start": "685210",
    "end": "692890"
  },
  {
    "text": "reached that line yet that updates our balance because we haven't returned from",
    "start": "692890",
    "end": "697930"
  },
  {
    "text": "that call up there another call is calling that withdraw function again and",
    "start": "697930",
    "end": "704190"
  },
  {
    "text": "the require here is going to work right because we still have the money on the account we haven't reached that that",
    "start": "704190",
    "end": "710170"
  },
  {
    "text": "last line yet we haven't returned from that previous call so this line is fine and we can pass it pass the check and",
    "start": "710170",
    "end": "717070"
  },
  {
    "text": "withdraw again and again this will go into a nested call again which can go",
    "start": "717070",
    "end": "722350"
  },
  {
    "text": "back in the contract back and forth and we can withdraw and withdraw and withdraw even though we don't have money",
    "start": "722350",
    "end": "728290"
  },
  {
    "text": "in the Dow anymore the Dow hasn't updated the thing yet and at the end when we stop the dial will update that",
    "start": "728290",
    "end": "734740"
  },
  {
    "text": "as it returns from all those Ness nested calls but this problem is called",
    "start": "734740",
    "end": "740380"
  },
  {
    "text": "reentrant C and pause from the fact that whenever you call an address maybe",
    "start": "740380",
    "end": "746110"
  },
  {
    "text": "because you're sending money to that address if it's a smart contract then it might lead to cut execution whenever",
    "start": "746110",
    "end": "753190"
  },
  {
    "text": "you're doing that whenever you're calling a contract in the middle of some execution you don't know what's",
    "start": "753190",
    "end": "759070"
  },
  {
    "text": "happening there especially when it's an untrusted address right or an untrusted contract so it could call back into your function",
    "start": "759070",
    "end": "766720"
  },
  {
    "text": "or it could call back into in another function of your contract and I could change the state of your contract so you",
    "start": "766720",
    "end": "772120"
  },
  {
    "text": "don't know what's happening from there so that's basically it and know we can I guess go to the next story yeah so the",
    "start": "772120",
    "end": "781930"
  },
  {
    "text": "next big vulnerability that you might have heard of is coming from the parity Multi signature wallet as a matter of",
    "start": "781930",
    "end": "789010"
  },
  {
    "text": "fact this is not just one vulnerability but is in fact a pair involving the same",
    "start": "789010",
    "end": "794260"
  },
  {
    "text": "piece of technology so before we can talk about that let's talk about what is parity this",
    "start": "794260",
    "end": "799540"
  },
  {
    "text": "is a big meta blockchain company that was founded by Gavin wood you might",
    "start": "799540",
    "end": "805810"
  },
  {
    "text": "remember from a few slides ago there big thing that they are one of the many things that they put out was this multi",
    "start": "805810",
    "end": "811750"
  },
  {
    "text": "signature wallet so at a high level it basically looks like this there's a lot",
    "start": "811750",
    "end": "817329"
  },
  {
    "text": "more functionality to it but these are the functions that we're going to end up covering so you have this initialization",
    "start": "817329",
    "end": "822730"
  },
  {
    "text": "for the wallet you have confirming for a transaction and you have killing a contract which basically turns off its",
    "start": "822730",
    "end": "828759"
  },
  {
    "text": "functionality and sends it to a new contract so when we are initializing the",
    "start": "828759",
    "end": "834699"
  },
  {
    "text": "wallet we let's say David myself and our friends oma want to make one then let's",
    "start": "834699",
    "end": "839800"
  },
  {
    "text": "say that we want to make sure that any time we spend money at least two of us",
    "start": "839800",
    "end": "845410"
  },
  {
    "text": "end up having to be signatories to that transaction this is something that a lot",
    "start": "845410",
    "end": "851110"
  },
  {
    "text": "of people see as a best practice us included because it makes it so that one",
    "start": "851110",
    "end": "856240"
  },
  {
    "text": "rogue actor or one stolen private key doesn't end up leading to a full leakage",
    "start": "856240",
    "end": "861670"
  },
  {
    "text": "of all of your money all right if you look at all these phones all these I SEOs all these like banks that hold a",
    "start": "861670",
    "end": "868180"
  },
  {
    "text": "lot of money they will always use this multi-sig wallet instead of normal wallets or addresses because like that",
    "start": "868180",
    "end": "874690"
  },
  {
    "text": "they can share the responsibility right it's not just one probably as you say yeah absolutely and so it turns out that",
    "start": "874690",
    "end": "880720"
  },
  {
    "text": "the parody multi signature wallet was a little bit more complicated than that so like we said since aetherium is a big",
    "start": "880720",
    "end": "887170"
  },
  {
    "text": "computer at the you know final end someone has to run some code right well so that turns out to be the miners and",
    "start": "887170",
    "end": "893440"
  },
  {
    "text": "it is in fact they who run the code of whoever makes these smart contracts it turned you know in order to pay them for",
    "start": "893440",
    "end": "900100"
  },
  {
    "text": "the privilege you include a certain amount of fees called gas into just about every etherion thing that you do",
    "start": "900100",
    "end": "906899"
  },
  {
    "text": "one of these things this even includes deploying contracts so if you had had",
    "start": "906899",
    "end": "912100"
  },
  {
    "text": "all of this functionality in every one of these contracts it would have been actually a lot of money at least",
    "start": "912100",
    "end": "918370"
  },
  {
    "text": "amortized over all of the users that was kind of wasted in deploying the same code over and over again and so they",
    "start": "918370",
    "end": "925000"
  },
  {
    "text": "felt it would be well correctly they felt that it would be more efficient to encapsulate all the logic in one library",
    "start": "925000",
    "end": "930850"
  },
  {
    "text": "and have all the most common while it's just be sort of stubs that would call into it so now we have all of",
    "start": "930850",
    "end": "939070"
  },
  {
    "text": "these little stub wallets that end up actually just you know bouncing all of the calls if you will to one central",
    "start": "939070",
    "end": "945220"
  },
  {
    "text": "library contract rather than everything having to have all of the functionality inside of it right so if tomorrow you",
    "start": "945220",
    "end": "951850"
  },
  {
    "text": "want to use that multi-sig wallet will be very cheap to deploy to the network these more yeah",
    "start": "951850",
    "end": "956980"
  },
  {
    "text": "easy so the way this worked under the hood let's say that we want to initialize the wallet like before what",
    "start": "956980",
    "end": "963940"
  },
  {
    "text": "we will do is call our little stub wallet the stub wallet then uses",
    "start": "963940",
    "end": "969010"
  },
  {
    "text": "something called a delegate call to tell the wallet library to do it this delegate call is a EVM sort of assembly",
    "start": "969010",
    "end": "976990"
  },
  {
    "text": "function that says hey you know address X I'm going to pass you some data you",
    "start": "976990",
    "end": "982389"
  },
  {
    "text": "can perform whatever computation you want on it and that will have an effect on my storage instead of your storage if",
    "start": "982389",
    "end": "990070"
  },
  {
    "text": "that sounds a little bit scary that's because it is a little bit scary this is essentially remote code execution as a",
    "start": "990070",
    "end": "996370"
  },
  {
    "text": "first level language feature but you know it does the work right when our low",
    "start": "996370",
    "end": "1002760"
  },
  {
    "text": "quality called in we end up getting the functionality and we become the owners and in this specific case it wasn't",
    "start": "1002760",
    "end": "1010139"
  },
  {
    "text": "actually it seemed like it made a lot of sense because the address of the wallet library is hard-coded directly into our",
    "start": "1010139",
    "end": "1017130"
  },
  {
    "text": "wallet stub so there's no way for an attacker to you know trick us into sending it somewhere else or really",
    "start": "1017130",
    "end": "1022800"
  },
  {
    "text": "getting control of that logic in any way so I mean it seems like it should make sense right yeah yeah Ivan to me",
    "start": "1022800",
    "end": "1029668"
  },
  {
    "text": "unfortunately it didn't end up working out that well Oh so as you remember we needed to be",
    "start": "1029669",
    "end": "1037470"
  },
  {
    "text": "calling into this fallback function in the first place in order to even",
    "start": "1037470",
    "end": "1042870"
  },
  {
    "text": "initialize the wallet and this is just a special function that anytime we call a smart contract and they don't have the",
    "start": "1042870",
    "end": "1049169"
  },
  {
    "text": "function we're calling it hits this fallback function and so that was how the delegate call was implemented so",
    "start": "1049169",
    "end": "1056030"
  },
  {
    "text": "when we are calling that the fallback function can't have any checks about",
    "start": "1056030",
    "end": "1061230"
  },
  {
    "text": "who's calling it even after it's been initialized and then the wallet library",
    "start": "1061230",
    "end": "1066900"
  },
  {
    "text": "while had a lot of security around the transactions and the confirmation actually was very trusting when it came",
    "start": "1066900",
    "end": "1072780"
  },
  {
    "text": "to initialization so what happened was an evil you know per third party in this",
    "start": "1072780",
    "end": "1077820"
  },
  {
    "text": "case Eve could just call our wallets initialization function or call the fallback function this would go through",
    "start": "1077820",
    "end": "1084780"
  },
  {
    "text": "the delegate call to the wallet library and this would make Eve the owner of our wallet now the D Vaughn's our wallet she",
    "start": "1084780",
    "end": "1091620"
  },
  {
    "text": "can take all of our money and naturally this is exactly what did happen about thirty million dollars worth of ether",
    "start": "1091620",
    "end": "1097500"
  },
  {
    "text": "ended up being stolen as a result of this vulnerability and it would have been a quite a bit more except for the",
    "start": "1097500",
    "end": "1103080"
  },
  {
    "text": "fact that this was first unveiled at a security conference not unlike this one and there was a group of white hat",
    "start": "1103080",
    "end": "1109920"
  },
  {
    "text": "hackers that actually saw the attack in progress coded up their own exploit and preemptively stole all of the vulnerable",
    "start": "1109920",
    "end": "1117000"
  },
  {
    "text": "money to make sure that the hacker couldn't steal it and have actually been giving back the money that they were",
    "start": "1117000",
    "end": "1123150"
  },
  {
    "text": "protecting ever since so after this big vulnerability what do",
    "start": "1123150",
    "end": "1129660"
  },
  {
    "text": "you think people did with the etherium wallet I don't know it sounds fine though right yeah they kept using that thing",
    "start": "1129660",
    "end": "1135030"
  },
  {
    "text": "right exactly that's that's what people ended up doing they kept using it this isn't as crazy as it maybe sounds you",
    "start": "1135030",
    "end": "1141750"
  },
  {
    "text": "know the parody team was very well respected and this was so early that people kind of could understand that",
    "start": "1141750",
    "end": "1148290"
  },
  {
    "text": "there would be vulnerabilities so there's actually a second piece of this that ends up going down just a little",
    "start": "1148290",
    "end": "1154770"
  },
  {
    "text": "bit later so by now the interaction between the stub wallet and the wallet",
    "start": "1154770",
    "end": "1160860"
  },
  {
    "text": "library was pretty well vetted they had added some protections that made sure you couldn't reinitialize things they",
    "start": "1160860",
    "end": "1166920"
  },
  {
    "text": "had added some things to the visibility which is just the way that aetherium protects pieces of the contracts from",
    "start": "1166920",
    "end": "1173370"
  },
  {
    "text": "callers you know random callers and people are feeling fairly confident about that interaction and they were",
    "start": "1173370",
    "end": "1179880"
  },
  {
    "text": "right to be what people had failed to look at however was the wallet library itself this initialization function was",
    "start": "1179880",
    "end": "1187530"
  },
  {
    "text": "still fairly trusting as long as it hadn't been initialized before and it turned out that no one had ever",
    "start": "1187530",
    "end": "1192650"
  },
  {
    "text": "initialized the wallet library itself and so there was a user named DevOps 199",
    "start": "1192650",
    "end": "1198090"
  },
  {
    "text": "or at least called DevOps 199 who ended up one day initializing the wallet they claimed that it was as a",
    "start": "1198090",
    "end": "1204520"
  },
  {
    "text": "result of research into the original thing that they mistakenly pointed at the wallet library so this seems",
    "start": "1204520",
    "end": "1212620"
  },
  {
    "text": "terrifying right they now own this one contract that everyone uses to control all of their money however there's no",
    "start": "1212620",
    "end": "1218770"
  },
  {
    "text": "real way for DevOps 199 to actually access the funds in the stub wallets because the stub wallets have their own",
    "start": "1218770",
    "end": "1225370"
  },
  {
    "text": "storage that is protected unless they use a delegate call and because the wallet library's functionality is still",
    "start": "1225370",
    "end": "1231130"
  },
  {
    "text": "the same there's not actually a problem with that what did end up being a problem was one of the other functions",
    "start": "1231130",
    "end": "1237790"
  },
  {
    "text": "oh this kill function as you'll recall as a side effect of being killed the",
    "start": "1237790",
    "end": "1245590"
  },
  {
    "text": "contract's functionality essentially turns off now the wallet library's",
    "start": "1245590",
    "end": "1250630"
  },
  {
    "text": "functionality was the functionality of the whole wallet all the rest of them were just stubs so when when a dev ops",
    "start": "1250630",
    "end": "1257200"
  },
  {
    "text": "199 killed the library he effectively killed all of the other wallets as well",
    "start": "1257200",
    "end": "1262230"
  },
  {
    "text": "this ended up locking up 280 million dollars worth of aetherium irrevocably",
    "start": "1262230",
    "end": "1267760"
  },
  {
    "text": "and now they are essentially frozen forever because there's no way to get the funds back out so these are kind of",
    "start": "1267760",
    "end": "1277270"
  },
  {
    "text": "two of the you know maybe highest level etherion vulnerabilities that have been out there in the world that have gotten",
    "start": "1277270",
    "end": "1283750"
  },
  {
    "text": "a lot of press but there's a lot of other things that we see in our day to day work that don't necessarily get the same level of attention and we're gonna",
    "start": "1283750",
    "end": "1290230"
  },
  {
    "text": "go over those now all right for so let's look at the first villain every team",
    "start": "1290230",
    "end": "1296170"
  },
  {
    "text": "will talk about and that's randomness or not to do randomness and we'll look at a",
    "start": "1296170",
    "end": "1301440"
  },
  {
    "text": "example of a game contract so randomness is hard and we get a lot of these kind",
    "start": "1301440",
    "end": "1307480"
  },
  {
    "text": "of lottery games or things like that and for example you'll have a play function",
    "start": "1307480",
    "end": "1312970"
  },
  {
    "text": "it will be payable and it will take something like 1/8 ER to play this is",
    "start": "1312970",
    "end": "1318070"
  },
  {
    "text": "your ticket to play and then it will generate a random number based on the",
    "start": "1318070",
    "end": "1324370"
  },
  {
    "text": "hash the key check 256 hash of a private seed and an iteration number the",
    "start": "1324370",
    "end": "1329980"
  },
  {
    "text": "iteration number is just a counter so that every player gets a different random and if your random number is even than",
    "start": "1329980",
    "end": "1337300"
  },
  {
    "text": "you win all good if you if it's odd then you lose Oh does",
    "start": "1337300",
    "end": "1343600"
  },
  {
    "text": "that work well it doesn't work that well because if you know theorem if you know cryptocurrencies you know that",
    "start": "1343600",
    "end": "1349050"
  },
  {
    "text": "transactions that transit over the network are always public everything is public when you look at this private",
    "start": "1349050",
    "end": "1356110"
  },
  {
    "text": "seat here you're like okay that might be a good idea it's private it's a seat to generate a random number but the private",
    "start": "1356110",
    "end": "1362620"
  },
  {
    "text": "key word here means that basically other contracts cannot access it as part of an",
    "start": "1362620",
    "end": "1368020"
  },
  {
    "text": "execution so if you look at transactions you will see at some point where it has",
    "start": "1368020",
    "end": "1374200"
  },
  {
    "text": "been set either a deployment or after and you will be able to retrieve that value generate the random number",
    "start": "1374200",
    "end": "1380500"
  },
  {
    "text": "yourself and see if you win by playing so it doesn't work well and you might",
    "start": "1380500",
    "end": "1386200"
  },
  {
    "text": "wonder what works right and solidity has a list of functions that you can use to",
    "start": "1386200",
    "end": "1391540"
  },
  {
    "text": "get some values that cannot look random but there's a lot of them and you don't really know what to do so the yellow",
    "start": "1391540",
    "end": "1397510"
  },
  {
    "text": "paper itself give some guidance on how to do things so it says that you can use",
    "start": "1397510",
    "end": "1402700"
  },
  {
    "text": "maybe the block hash or the birth timestamp or the block beneficiary address and things like that to generate",
    "start": "1402700",
    "end": "1409570"
  },
  {
    "text": "random numbers so sounds like it works right now why not it's in the yellow paper so that's that's proof for us that",
    "start": "1409570",
    "end": "1417310"
  },
  {
    "text": "it works right and no this these guys for example I mean a lot of people got powned and these were a good example",
    "start": "1417310",
    "end": "1424930"
  },
  {
    "text": "smart Gillan's they lost four hundred ether which is not comparable to the dowel or or party but it's still quite a",
    "start": "1424930",
    "end": "1432040"
  },
  {
    "text": "lot of money and pretty much they use the block hash the first advice of the",
    "start": "1432040",
    "end": "1438910"
  },
  {
    "text": "yellow paper and the black hash the black hash is a hash of a number of",
    "start": "1438910",
    "end": "1444430"
  },
  {
    "text": "things in the block and if you ask for the block hash of the current block number basically the miners don't know",
    "start": "1444430",
    "end": "1452290"
  },
  {
    "text": "what it is when they execute your transaction because they haven't finalized the mining of the block they",
    "start": "1452290",
    "end": "1457360"
  },
  {
    "text": "haven't found like the nonce or that kind of things so they will just set it to zero and if you use the block hash of",
    "start": "1457360",
    "end": "1464020"
  },
  {
    "text": "the current number is going to be zero and pretty much you're going to win every time this is not what smart villains did they",
    "start": "1464020",
    "end": "1470420"
  },
  {
    "text": "used a fixed block number but the problem is that if the block number goes",
    "start": "1470420",
    "end": "1476140"
  },
  {
    "text": "256 blocks in the past's from the Courant number then it will be set to 0 as well just an optimization problem so",
    "start": "1476140",
    "end": "1484299"
  },
  {
    "text": "what the attacker did for smart billions is that they've waited 256 blocks to be",
    "start": "1484299",
    "end": "1490100"
  },
  {
    "text": "mine they played and the 1 another problem arises when you use a block",
    "start": "1490100",
    "end": "1497240"
  },
  {
    "text": "number that is between the current number the current block number and the before 256 blocks in the past you still",
    "start": "1497240",
    "end": "1506480"
  },
  {
    "text": "have an attack so what can you do so imagine that you're playing with a smart contract kind of what we do with",
    "start": "1506480",
    "end": "1513200"
  },
  {
    "text": "the Dow you're not playing with it directly but you're you're deploying your malicious smart contract and you",
    "start": "1513200",
    "end": "1518480"
  },
  {
    "text": "have some function that you're calling on there and your smart contract checks if the block hash of that block number",
    "start": "1518480",
    "end": "1524990"
  },
  {
    "text": "that we're playing with is good it's even if it is it plays it plays the game",
    "start": "1524990",
    "end": "1530929"
  },
  {
    "text": "right and it wins right because it's the same transaction block hard to block",
    "start": "1530929",
    "end": "1536120"
  },
  {
    "text": "number everything's the same so that's that's an interesting way to exploit",
    "start": "1536120",
    "end": "1541610"
  },
  {
    "text": "things on the network you might think that using the block timestamp which is the second advice of the yellow paper",
    "start": "1541610",
    "end": "1548480"
  },
  {
    "text": "might help you but you have exactly the same problem if you check if the block",
    "start": "1548480",
    "end": "1553640"
  },
  {
    "text": "timestamp is even in your smart contracts and then you call the game since it's in the same block this",
    "start": "1553640",
    "end": "1559940"
  },
  {
    "text": "transaction is in the same block the block time stamp will be the same so we have the same attack another thing that",
    "start": "1559940",
    "end": "1566860"
  },
  {
    "text": "you can do if you're a minor you can set the block timestamp to to some specific",
    "start": "1566860",
    "end": "1573500"
  },
  {
    "text": "value so you can kind of play with it to some degree and it's you can make",
    "start": "1573500",
    "end": "1578660"
  },
  {
    "text": "yourself win so you have to keep in mind that minors can kind of play with these",
    "start": "1578660",
    "end": "1583820"
  },
  {
    "text": "values so yeah randomness the problem here is that every time you see randomness in a smart contract it might",
    "start": "1583820",
    "end": "1590750"
  },
  {
    "text": "not be truly random random so you have to be wary of that and don't rely too",
    "start": "1590750",
    "end": "1598040"
  },
  {
    "text": "strongly on the time because minors can can play with the time can help their",
    "start": "1598040",
    "end": "1603320"
  },
  {
    "text": "friends or can make them tell themselves win so you don't want to do that okay",
    "start": "1603320",
    "end": "1609020"
  },
  {
    "text": "let's talk about another issue from running this one is quite interesting because it's kind of theoretical but then it's exploitable anyway let's look",
    "start": "1609020",
    "end": "1616940"
  },
  {
    "text": "at an example that's a game again you can see that there is an RSA number that's just a",
    "start": "1616940",
    "end": "1622250"
  },
  {
    "text": "large number but not too large here and this arson number is a you can factor it",
    "start": "1622250",
    "end": "1628640"
  },
  {
    "text": "into two primes P and Q we have a play function and we say that if you find",
    "start": "1628640",
    "end": "1634460"
  },
  {
    "text": "this prime factorization of n of this RSA number and you submit this P and Q",
    "start": "1634460",
    "end": "1639890"
  },
  {
    "text": "and we can verify that P times Q is equal to this number then you win the balance of this contract which which is",
    "start": "1639890",
    "end": "1645980"
  },
  {
    "text": "a thousand a third this is a fact contract by the way ya know crypt analysts out there try to factor it it's",
    "start": "1645980",
    "end": "1651470"
  },
  {
    "text": "not real oh I mean do if you want to so yeah anyway the problem here you might",
    "start": "1651470",
    "end": "1657320"
  },
  {
    "text": "think there is no problem because there is no secret right or there is nothing you can influence but there is a problem",
    "start": "1657320",
    "end": "1663530"
  },
  {
    "text": "so imagine your Alice or imagine you have a friend called Alice and she factors the number finds P and Q and",
    "start": "1663530",
    "end": "1669380"
  },
  {
    "text": "submit the solution to the network so she puts a solution into a transaction send it to the network and wait for it",
    "start": "1669380",
    "end": "1676160"
  },
  {
    "text": "to be mined bub monitors the network he is like any miners he sees all the",
    "start": "1676160",
    "end": "1681920"
  },
  {
    "text": "transactions but waiting to be mine and he decides to kind of steal the content of Alice's transaction which is the",
    "start": "1681920",
    "end": "1688280"
  },
  {
    "text": "solution and to send it to the net to the contract himself he can do that",
    "start": "1688280",
    "end": "1693560"
  },
  {
    "text": "right and now we're having two transaction kind of being sent to the network so who wins yeah we wins right",
    "start": "1693560",
    "end": "1701090"
  },
  {
    "text": "so there is kind of a race here to the solution who is going to get mine first and while he Bob has a friendly minor a",
    "start": "1701090",
    "end": "1709570"
  },
  {
    "text": "minor friend maybe he can help get some help and get his transaction go first",
    "start": "1709570",
    "end": "1715660"
  },
  {
    "text": "but Bob has more than one trick in his bag he can also increase the fees in his",
    "start": "1715660",
    "end": "1720740"
  },
  {
    "text": "transaction to excite all the miners because the miners get the fees from transactions that they accept and to get",
    "start": "1720740",
    "end": "1729470"
  },
  {
    "text": "his solution in front and mine first even though Alice was the",
    "start": "1729470",
    "end": "1734930"
  },
  {
    "text": "first one to submit it in the first place now this issue of front-running is kind of theoretical but it's actually",
    "start": "1734930",
    "end": "1741290"
  },
  {
    "text": "very exploitable it's like a hundred and fifty lines of Python if you want to do it and it's so common in the world of a",
    "start": "1741290",
    "end": "1748340"
  },
  {
    "text": "theorem that the ERC 20 standard the standard for tokens that I've I talked about in the intro is vulnerable to this",
    "start": "1748340",
    "end": "1755600"
  },
  {
    "text": "attack so it's only vulnerable for two functions and not everyone or it's rare",
    "start": "1755600",
    "end": "1761690"
  },
  {
    "text": "that people use these functions so it's kind of fun it's an OK problem the front-running is an issue whenever",
    "start": "1761690",
    "end": "1769790"
  },
  {
    "text": "you can have some logic flow in your smart contract because people can",
    "start": "1769790",
    "end": "1775820"
  },
  {
    "text": "reorder transactions and people can always reorder transactions yeah this this fee thing also whenever your",
    "start": "1775820",
    "end": "1784130"
  },
  {
    "text": "transaction contains some secrets you have to be aware that people can read these secrets just by monitoring the",
    "start": "1784130",
    "end": "1790160"
  },
  {
    "text": "blockchain so that's that's bad by itself also all right so that's that's all of the all there is for the",
    "start": "1790160",
    "end": "1796790"
  },
  {
    "text": "front-running and i guess don't do about the next one so i'll be talking about",
    "start": "1796790",
    "end": "1802010"
  },
  {
    "text": "all this randomness stuff we've been talking about you know kind of some mathy things so we're gonna keep on with that theme here so arithmetic errors are",
    "start": "1802010",
    "end": "1810410"
  },
  {
    "text": "something that happens everywhere as integer overflows and under flows this is something that solidity does not have",
    "start": "1810410",
    "end": "1816800"
  },
  {
    "text": "a monopoly on certainly but is something that happens I think a little bit more frequently in solidity than in most",
    "start": "1816800",
    "end": "1822530"
  },
  {
    "text": "other languages so for those of you who aren't familiar with it basically this",
    "start": "1822530",
    "end": "1827690"
  },
  {
    "text": "is a bit of a solidity introduction to it the smallest integer type in solidity is a you went eight which is an unsigned",
    "start": "1827690",
    "end": "1834590"
  },
  {
    "text": "integer with eight bits of information in it and this is one that's full it's they can take values from 0 to 255",
    "start": "1834590",
    "end": "1842330"
  },
  {
    "text": "this is 255 so what happens when you add 1 to it 256 that's 256 right",
    "start": "1842330",
    "end": "1848500"
  },
  {
    "text": "unfortunately no it becomes 0 because the UN 8 only has 8 bits of space the",
    "start": "1848500",
    "end": "1855560"
  },
  {
    "text": "ninth bit that would have been used for the carry bit has to fall off and we wrap all the way around to 0 as you can",
    "start": "1855560",
    "end": "1861740"
  },
  {
    "text": "imagine most people who add things don't expect an addition to subtract the",
    "start": "1861740",
    "end": "1866750"
  },
  {
    "text": "entire value so this can end up causing pretty serious arithmetic or disorders and you know",
    "start": "1866750",
    "end": "1873390"
  },
  {
    "text": "people lose money this way so this is just an example of bad and good additions in solidity this one addition",
    "start": "1873390",
    "end": "1881010"
  },
  {
    "text": "here you know it makes sense you just plus equals but like we've said this ends up being potentially exploitable",
    "start": "1881010",
    "end": "1888000"
  },
  {
    "text": "the way that you want to be doing additions is you want to make sure that there is yeah that the assumption of",
    "start": "1888000",
    "end": "1894570"
  },
  {
    "text": "addition that you know each new addition is bigger than the last one is preserved",
    "start": "1894570",
    "end": "1899900"
  },
  {
    "text": "these assumptions have actually been codified or at least the most common ones by open Zeppelin into a library",
    "start": "1899900",
    "end": "1907200"
  },
  {
    "text": "called safe math which checks all of the most common while all of the arithmetic",
    "start": "1907200",
    "end": "1912510"
  },
  {
    "text": "functions so you can multiply add divide and subtract perfectly safely so while",
    "start": "1912510",
    "end": "1918810"
  },
  {
    "text": "this does cover just about all of the most common ones there are actually a lot more potential places for things to",
    "start": "1918810",
    "end": "1924990"
  },
  {
    "text": "overflow this is a good summary I found in a github comments of people saying the solidity should fix this in the",
    "start": "1924990",
    "end": "1931530"
  },
  {
    "text": "language itself and for those of you following along this is 23 different",
    "start": "1931530",
    "end": "1936800"
  },
  {
    "text": "potential ways for overflows or under flows to happen so this can happen",
    "start": "1936800",
    "end": "1941970"
  },
  {
    "text": "actually a lot more easily than it might seem even if you are taking precautions so basically any time you see an",
    "start": "1941970",
    "end": "1948810"
  },
  {
    "text": "unchecked arithmetic operation this is something to inspect pretty closely especially if you're able to increase or",
    "start": "1948810",
    "end": "1956130"
  },
  {
    "text": "decrease by large amounts even though you end day makes for a great example there aren't a lot of them out there in",
    "start": "1956130",
    "end": "1961800"
  },
  {
    "text": "the wide world of solidity most people use much larger values that are big enough where even just the fees to",
    "start": "1961800",
    "end": "1968280"
  },
  {
    "text": "increment them into overflowing would be prohibitively expensive so if you're",
    "start": "1968280",
    "end": "1973650"
  },
  {
    "text": "finding something that's multiplication or an exponentiation you're a lot more likely to be able to exploit it and also",
    "start": "1973650",
    "end": "1981480"
  },
  {
    "text": "just like anything else in solidity anytime you're able to access from a lower level of privilege if you don't",
    "start": "1981480",
    "end": "1987120"
  },
  {
    "text": "have to be an owner if you don't have to be even a participant that's something that you need to look at extra closely",
    "start": "1987120",
    "end": "1993620"
  },
  {
    "text": "so now that we're talking about things that solidity inherits I guess in a way",
    "start": "1993620",
    "end": "1999270"
  },
  {
    "text": "from the wider world of security a deny of service are another pretty big thing that you end up seeing very frequently",
    "start": "1999270",
    "end": "2006290"
  },
  {
    "text": "in solidity except they are more calm or well maybe more common but much more",
    "start": "2006290",
    "end": "2011540"
  },
  {
    "text": "dangerous than solidity than they are in most other languages so as an example",
    "start": "2011540",
    "end": "2017440"
  },
  {
    "text": "before we get into the way that this works we're going to talk about the block gas limit for those of you who are",
    "start": "2017440",
    "end": "2024950"
  },
  {
    "text": "CS theorists out there you're going to know that there's no way to tell by just analyzing it whether or not a given",
    "start": "2024950",
    "end": "2031280"
  },
  {
    "text": "program terminates because we're essentially coercing other people into running our programs they have to be",
    "start": "2031280",
    "end": "2037460"
  },
  {
    "text": "certain that they're not going to be running an infinite loop to solve this problem solidity or rather a theorem",
    "start": "2037460",
    "end": "2043040"
  },
  {
    "text": "enforces a gas limit which is a essentially limit on the amount of computation that you can perform on any",
    "start": "2043040",
    "end": "2049340"
  },
  {
    "text": "given block so ordinarily this works fine you know let's say you know you",
    "start": "2049340",
    "end": "2054800"
  },
  {
    "text": "have the contract where there's all sorts of users they're playing a game and then at the end of the contest",
    "start": "2054800",
    "end": "2060620"
  },
  {
    "text": "everyone gets paid out whatever their fees are this doesn't end up messing with the block cast limit there aren't",
    "start": "2060620",
    "end": "2065780"
  },
  {
    "text": "too many people who play and everything goes nicely however if you just have a bunch of these contributions you notice",
    "start": "2065780",
    "end": "2072648"
  },
  {
    "text": "here we have the fur user and users you know pay back basically that even just",
    "start": "2072649",
    "end": "2078408"
  },
  {
    "text": "iterating through the full list of users can end up destroying the amount the",
    "start": "2078409",
    "end": "2085220"
  },
  {
    "text": "performance of this function it can be so large if there's enough users that it",
    "start": "2085220",
    "end": "2090590"
  },
  {
    "text": "becomes actually an invalid transaction because it's larger than the block gas limit so this isn't the only way to do a",
    "start": "2090590",
    "end": "2097670"
  },
  {
    "text": "denial of service there's also you know infinite it's a much smaller number of",
    "start": "2097670",
    "end": "2103790"
  },
  {
    "text": "people here you can have you know let's say david maze or david and i are",
    "start": "2103790",
    "end": "2109180"
  },
  {
    "text": "participating in a auction with some other person if they happen to be a",
    "start": "2109180",
    "end": "2114200"
  },
  {
    "text": "malicious smart contract rather than a person when you're working in aetherium",
    "start": "2114200",
    "end": "2119630"
  },
  {
    "text": "a transaction and sending of money is essentially a function call with no name because it doesn't have a name it",
    "start": "2119630",
    "end": "2126260"
  },
  {
    "text": "directly hits the fallback function and so if they simply revert on any fallback",
    "start": "2126260",
    "end": "2132470"
  },
  {
    "text": "this essentially stops and turns back the entire transaction and that means that any time you have to",
    "start": "2132470",
    "end": "2139070"
  },
  {
    "text": "transact with this whole with the whole group of people and even one of these is in there it will be impossible to ever",
    "start": "2139070",
    "end": "2145400"
  },
  {
    "text": "complete the function unless you're able to remove that person and so in both of these cases your funds will be",
    "start": "2145400",
    "end": "2150920"
  },
  {
    "text": "permanently locked which is why it ends up being much scarier to have a denial of service and solidity something that",
    "start": "2150920",
    "end": "2159080"
  },
  {
    "text": "you'll see a bunch here that happens also in a lot of our other vulnerabilities is that something",
    "start": "2159080",
    "end": "2164870"
  },
  {
    "text": "involving an external smart contract when you expect a person ends up being a big problem and so one way that people",
    "start": "2164870",
    "end": "2171140"
  },
  {
    "text": "try to solve this a bunch is using this external code size call code which basically tells you how much code is at",
    "start": "2171140",
    "end": "2178220"
  },
  {
    "text": "a given address the idea being that externally own contracts owned by people don't have any code in them and smart",
    "start": "2178220",
    "end": "2184160"
  },
  {
    "text": "contracts do unfortunately this doesn't actually end up telling you for certain",
    "start": "2184160",
    "end": "2189620"
  },
  {
    "text": "whether or not you're interacting with the contract like we said there's even in construction a little bit of",
    "start": "2189620",
    "end": "2196780"
  },
  {
    "text": "computation being done and so if you want to you can put a transaction in",
    "start": "2196780",
    "end": "2203570"
  },
  {
    "text": "your constructor if the contract calls out during its construction to one of these games they will appear as though",
    "start": "2203570",
    "end": "2211460"
  },
  {
    "text": "they have zero code size because they haven't yet been fully constructed and confirmed onto the transaction and so",
    "start": "2211460",
    "end": "2218000"
  },
  {
    "text": "they will slip under one of these checks so this doesn't actually end up working out so there's another one that we've",
    "start": "2218000",
    "end": "2224630"
  },
  {
    "text": "seen that David will tell you a little bit more about yeah so kind of less example in denial of services attack",
    "start": "2224630",
    "end": "2231230"
  },
  {
    "text": "that that's actually something we found on a client and that I've never seen anybody talk about before so that's kind",
    "start": "2231230",
    "end": "2236660"
  },
  {
    "text": "of new I guess so remember the the idea that a smart contract stores has a",
    "start": "2236660",
    "end": "2242330"
  },
  {
    "text": "balance right Eric every address on the athermal network has a balance in a sir and a smart contract kind of stores all",
    "start": "2242330",
    "end": "2249290"
  },
  {
    "text": "the money from different donations or different services that it might have and in the end you have to track what is",
    "start": "2249290",
    "end": "2255920"
  },
  {
    "text": "what what is somebody account or some point up so let's take this example it's",
    "start": "2255920",
    "end": "2262100"
  },
  {
    "text": "a it's an eBay like contract a bid thing and we have three functions super simple",
    "start": "2262100",
    "end": "2268160"
  },
  {
    "text": "functions we have a B function where you can beat on an object we have a cancel bid you can cancel your",
    "start": "2268160",
    "end": "2274430"
  },
  {
    "text": "bid right and we have an accent bead where the owner of the object can cancel excellence right can accept sorry anyway",
    "start": "2274430",
    "end": "2282349"
  },
  {
    "text": "look at the beat function it's payable so that means that you have to actually pay when you call it so imagine you want",
    "start": "2282349",
    "end": "2289220"
  },
  {
    "text": "to buy I don't know I want to buy the time I go G or some point that to someone to you yeah you think you have a",
    "start": "2289220",
    "end": "2294349"
  },
  {
    "text": "television yeah and so you want to buy it for one ather so you have to call that function you have to put one ather",
    "start": "2294349",
    "end": "2300920"
  },
  {
    "text": "into it and it will stand to the contract in escrow until it's either either cancelled so I get back my money",
    "start": "2300920",
    "end": "2307730"
  },
  {
    "text": "or it's accepted by mason and you get the money I get the tamagochi so while",
    "start": "2307730",
    "end": "2315200"
  },
  {
    "text": "there is a bunch of these beads you will see that the contracts balance increase in size and everybody's money is put",
    "start": "2315200",
    "end": "2321799"
  },
  {
    "text": "into this pile of escrow money right another thing that pretty much all",
    "start": "2321799",
    "end": "2326839"
  },
  {
    "text": "contracts have is a withdraw function for the admins so the N means sometimes",
    "start": "2326839",
    "end": "2331849"
  },
  {
    "text": "make money or often make money through their contracts for example via a subscription or like a sign-up fee or",
    "start": "2331849",
    "end": "2338539"
  },
  {
    "text": "maybe in our example every time you make a beat there is a fee that goes to the admins right it's also part of the",
    "start": "2338539",
    "end": "2344239"
  },
  {
    "text": "contract with the escrow monies you have to kind of figure out what is what's in the the big pile of money of the",
    "start": "2344239",
    "end": "2349789"
  },
  {
    "text": "contracts but this function allows the admins to get their money back so you",
    "start": "2349789",
    "end": "2355130"
  },
  {
    "text": "see there is the address of the owner or the admin hard-coded into the conduction",
    "start": "2355130",
    "end": "2360410"
  },
  {
    "text": "and it transferred the money to the to Dioner with whatever amount that you specified so there are two problems here",
    "start": "2360410",
    "end": "2367730"
  },
  {
    "text": "the first problem is that we are if I was the N mean I could withdraw the",
    "start": "2367730",
    "end": "2373460"
  },
  {
    "text": "whole amounts the whole balance of the contracts and I would withdraw the escrowed money as well so first I would",
    "start": "2373460",
    "end": "2380029"
  },
  {
    "text": "block all the current buildings or worse the current meetings would work but no money would be given back or given to",
    "start": "2380029",
    "end": "2387109"
  },
  {
    "text": "the owners of the objects and and that's that's an issue by itself so you need",
    "start": "2387109",
    "end": "2394130"
  },
  {
    "text": "something that you don't want to do is having to trust the admins of the contract right the source code of the",
    "start": "2394130",
    "end": "2399859"
  },
  {
    "text": "contract is supposed to be published you're supposed to only trust this third party a theorem trusted third",
    "start": "2399859",
    "end": "2405210"
  },
  {
    "text": "party right so you don't want to trust the I mean not to withdraw the escrow money there's a gone bad thing with this",
    "start": "2405210",
    "end": "2412140"
  },
  {
    "text": "thing here is that it's completely public so yeah and means thought that they could make the function public like that anybody can call it and it will",
    "start": "2412140",
    "end": "2420540"
  },
  {
    "text": "save the admins some gas fees some transaction fees and it will go into the",
    "start": "2420540",
    "end": "2425640"
  },
  {
    "text": "owners pocket anyway right there's nothing the attacker can do but they were wrong in our case and we saw that",
    "start": "2425640",
    "end": "2432770"
  },
  {
    "text": "pretty much if the attacker withdraw the whole amount it goes into the owners",
    "start": "2432770",
    "end": "2438000"
  },
  {
    "text": "pockets but it blocks all the transactions all the bids right all the",
    "start": "2438000",
    "end": "2443400"
  },
  {
    "text": "escrow and monies is removed from the contract so if the admins wants to",
    "start": "2443400",
    "end": "2448470"
  },
  {
    "text": "unlock the logic of the contractor to put some money back inside the contract",
    "start": "2448470",
    "end": "2453920"
  },
  {
    "text": "unfortunately the attacker can withdraw it again right and this is kind of the cat and mouse game and it kind of looks",
    "start": "2453920",
    "end": "2460950"
  },
  {
    "text": "like a real denial of service or on a real server at some point that right so",
    "start": "2460950",
    "end": "2466290"
  },
  {
    "text": "that's quite an interesting one and as I said we've never seen that so I'm guessing we'll see more more and more",
    "start": "2466290",
    "end": "2471510"
  },
  {
    "text": "things like that in security in a theorem yeah and so do you want to avoid",
    "start": "2471510",
    "end": "2476790"
  },
  {
    "text": "this kind of stuff what do you want to look for or if you want to find this kind of stuff what do you look for so essentially anytime you have a loop",
    "start": "2476790",
    "end": "2484050"
  },
  {
    "text": "that depends on a storage value here and by this we mean that a value that's inside of the contract anything that an",
    "start": "2484050",
    "end": "2491070"
  },
  {
    "text": "attacker or an external person can modify this can potentially be run up and turn into one of these denials of",
    "start": "2491070",
    "end": "2497010"
  },
  {
    "text": "service if you have a function that depends on transactions to external contracts this is something that you",
    "start": "2497010",
    "end": "2503220"
  },
  {
    "text": "have to be very wary of as someone can just revert it and end your whole fun transaction and finally any time you",
    "start": "2503220",
    "end": "2510750"
  },
  {
    "text": "have a publicly accessible function that changes up the contract balance these",
    "start": "2510750",
    "end": "2516570"
  },
  {
    "text": "are all the things that you need to be looking out for if you want to mess with people or if you want to avoid being messed with so at a high level what are",
    "start": "2516570",
    "end": "2524700"
  },
  {
    "text": "the things that you want to be taking away from this if you're looking to audit a smart contracts so one thing",
    "start": "2524700",
    "end": "2531089"
  },
  {
    "text": "that you have to know ahead of time is these sort of aetherium gotchas as we've seen there's a lot of",
    "start": "2531089",
    "end": "2536820"
  },
  {
    "text": "stuff in solidity that doesn't quite function the way that would most make sense things end up being a little bit",
    "start": "2536820",
    "end": "2543420"
  },
  {
    "text": "more complicated under the hood then they might initially appear it's not the typical web app or normal pen test it's",
    "start": "2543420",
    "end": "2550230"
  },
  {
    "text": "quite different yeah because of the blockchain and all of these new concepts mm-hmm in addition to that you want to",
    "start": "2550230",
    "end": "2556500"
  },
  {
    "text": "understand the contract and this is not just a line by line code understanding but also a holistic understanding of the",
    "start": "2556500",
    "end": "2562920"
  },
  {
    "text": "purpose of the functions that are working they're pretty small usually so",
    "start": "2562920",
    "end": "2569070"
  },
  {
    "text": "there's really no excuse not to understand the whole program and hold it in your head at once yeah a security consultants we often",
    "start": "2569070",
    "end": "2575460"
  },
  {
    "text": "have like something like one week to look at 15k lines of code that's completely different right they're often",
    "start": "2575460",
    "end": "2581910"
  },
  {
    "text": "under a thousand lines of code or it's quite small yeah and finally just as an",
    "start": "2581910",
    "end": "2587970"
  },
  {
    "text": "easy set of wins before you really dig into the logic you have all of these sort of easy to find things that can end",
    "start": "2587970",
    "end": "2597600"
  },
  {
    "text": "up ending the day of the contract that you can just sort of scan through before you really dig in and then last but not",
    "start": "2597600",
    "end": "2605310"
  },
  {
    "text": "least anything that can be accessed by the public anything that just anyone can go along and transact with that's what",
    "start": "2605310",
    "end": "2611940"
  },
  {
    "text": "you want to look most deeply at oops all right tools that's kind of the bread",
    "start": "2611940",
    "end": "2618180"
  },
  {
    "text": "and butter of consultants we use tools of course there are some clever analyzer",
    "start": "2618180",
    "end": "2623490"
  },
  {
    "text": "like Oriente mithril Manticore they're doing great works actually in that domain but what we what we've found is",
    "start": "2623490",
    "end": "2631290"
  },
  {
    "text": "that it's we often don't really find anything using these tools and that's it",
    "start": "2631290",
    "end": "2636300"
  },
  {
    "text": "unless its abuse or there's a big issue so we always run them it's best practice right or as developers people should run",
    "start": "2636300",
    "end": "2643860"
  },
  {
    "text": "them but don't expect too much most of the time unless you're lucky remix on",
    "start": "2643860",
    "end": "2651030"
  },
  {
    "text": "the other hand an inter so it can be very very powerful remix specifically is a browser ID all right so you can run it",
    "start": "2651030",
    "end": "2659790"
  },
  {
    "text": "locally on your machine or you can go and remix the theorem that org I think so the a theorem foundation is hosting",
    "start": "2659790",
    "end": "2665460"
  },
  {
    "text": "one and it's quite a useful idea you can run a local blockchain you can test",
    "start": "2665460",
    "end": "2670820"
  },
  {
    "text": "things very quickly you can deploy things it has a debugger so you can go through a transaction step by step go",
    "start": "2670820",
    "end": "2677780"
  },
  {
    "text": "back in time very very very useful it has also a",
    "start": "2677780",
    "end": "2683660"
  },
  {
    "text": "static analyzer which is actually quite clever we also always find a quick stuff for quick wins in the beginning of the",
    "start": "2683660",
    "end": "2690470"
  },
  {
    "text": "engagement of via DS analyzer so remix is really the most powerful tool that we",
    "start": "2690470",
    "end": "2696860"
  },
  {
    "text": "currently have there is truffle but it's ok that's the main environment for developers it's",
    "start": "2696860",
    "end": "2704360"
  },
  {
    "text": "pretty much like remix but it's yeah it's an environment for developers to the same kind of thing it has a debugger",
    "start": "2704360",
    "end": "2710870"
  },
  {
    "text": "has a local blockchain and so on but you can do stuff that are not super useful",
    "start": "2710870",
    "end": "2717140"
  },
  {
    "text": "for us so you can write unit tests and Java scripts and and some things like that so we don't really use it but you",
    "start": "2717140",
    "end": "2723620"
  },
  {
    "text": "have to keep it in mind in case there is a feature that truffle has that you cannot really use in in remix and",
    "start": "2723620",
    "end": "2730600"
  },
  {
    "text": "universally there are also these assemblers and D compilers unfortunately",
    "start": "2730600",
    "end": "2737510"
  },
  {
    "text": "it's not super useful for us and it shouldn't be useful because most of the smart contracts if not all smart",
    "start": "2737510",
    "end": "2742550"
  },
  {
    "text": "contracts should also publish the source code otherwise there is not really a",
    "start": "2742550",
    "end": "2747890"
  },
  {
    "text": "point in just publishing like a black box so so fortunately we don't have to reverse engineer these contracts yeah",
    "start": "2747890",
    "end": "2756980"
  },
  {
    "text": "just a few thoughts about the future of security and smart contracts we think",
    "start": "2756980",
    "end": "2762590"
  },
  {
    "text": "for most verification has actually a future in a theorem just because smart",
    "start": "2762590",
    "end": "2768410"
  },
  {
    "text": "contracts are so small right under thousand nines of code for most of them it shouldn't be tedious to actually",
    "start": "2768410",
    "end": "2775850"
  },
  {
    "text": "write formally verified code and and it's still at it in the in its infancy",
    "start": "2775850",
    "end": "2781460"
  },
  {
    "text": "but we think it has a bright future frameworks and reusable code we kind of",
    "start": "2781460",
    "end": "2787160"
  },
  {
    "text": "talked about that with the open zipline library like safe math and and they have other smart contracts that you can reuse",
    "start": "2787160",
    "end": "2794720"
  },
  {
    "text": "like token smart contracts or on honorable smart contracts or core functionalities that people tend to",
    "start": "2794720",
    "end": "2801350"
  },
  {
    "text": "rewrite for their own contract can be found in in these frameworks so",
    "start": "2801350",
    "end": "2806630"
  },
  {
    "text": "instead of reinventing the wheel it's good to use them because they've been audited we've audited them quite a few",
    "start": "2806630",
    "end": "2812330"
  },
  {
    "text": "times so now when we look at clients code that use that we can skip it and directly dig in something that hasn't",
    "start": "2812330",
    "end": "2819500"
  },
  {
    "text": "been audited before so really no excuse to make mistakes in these things when you have these kind of frameworks the",
    "start": "2819500",
    "end": "2827690"
  },
  {
    "text": "theorem is updated frequently if you compare that to Bitcoin it's quite it's",
    "start": "2827690",
    "end": "2833600"
  },
  {
    "text": "saying quite its share of updates it's moving fast and you have to keep",
    "start": "2833600",
    "end": "2838910"
  },
  {
    "text": "yourself up to date you have to check what's new in the EVM what's you in the last attack of the week or something",
    "start": "2838910",
    "end": "2846080"
  },
  {
    "text": "like that right so it's everything you've heard during this talk might change in the next year right if you",
    "start": "2846080",
    "end": "2853369"
  },
  {
    "text": "look at solidity or the mist and a thermal at the official words you will see that they all have experimental",
    "start": "2853369",
    "end": "2859310"
  },
  {
    "text": "versions zero point something so they're still very new if you look at the the",
    "start": "2859310",
    "end": "2864920"
  },
  {
    "text": "nodes in general like for example the get node which is what miners or or just nodes can run you will see that they're",
    "start": "2864920",
    "end": "2872869"
  },
  {
    "text": "quite buggy I have one and I have two I think we started four times a day or",
    "start": "2872869",
    "end": "2877940"
  },
  {
    "text": "some point that so we're still not there and finally the audit process is quite",
    "start": "2877940",
    "end": "2884030"
  },
  {
    "text": "immature and we'll see we see a lot of developers who put a lot of money and",
    "start": "2884030",
    "end": "2889280"
  },
  {
    "text": "investors would put a lot of money in lightly audited smart contracts we're",
    "start": "2889280",
    "end": "2894680"
  },
  {
    "text": "seeing a lot of consulting firm that open something like last week or yesterday with people who've never",
    "start": "2894680",
    "end": "2900560"
  },
  {
    "text": "really done security before and and kind of attests the security of smart contracts",
    "start": "2900560",
    "end": "2905720"
  },
  {
    "text": "this is especially dangerous because a security consultant we always say",
    "start": "2905720",
    "end": "2911150"
  },
  {
    "text": "security is a process but for smart contracts when you deploy something and you cannot change it it's immutable then",
    "start": "2911150",
    "end": "2918260"
  },
  {
    "text": "you might have serious issues if you if you stay in this state of mind so the",
    "start": "2918260",
    "end": "2924200"
  },
  {
    "text": "security is very different finally unknown unknowns that's the biggest one",
    "start": "2924200",
    "end": "2931580"
  },
  {
    "text": "I guess because we've seen with the Dow this reentrant shipping kind of surprised a",
    "start": "2931580",
    "end": "2937019"
  },
  {
    "text": "when it happened and we are expecting more to come findings and vulnerabilities that nobody",
    "start": "2937019",
    "end": "2943769"
  },
  {
    "text": "thought of or introduced by new versions of solidity or things like that so it's",
    "start": "2943769",
    "end": "2948809"
  },
  {
    "text": "good to really be careful when you're auditing things and when you want to",
    "start": "2948809",
    "end": "2954809"
  },
  {
    "text": "stay up to date all right so as part of this work we're releasing today a top",
    "start": "2954809",
    "end": "2960779"
  },
  {
    "text": "ten you'll see the address in the last slide actually it's a deathblow Geo it's a top ten of all different abilities",
    "start": "2960779",
    "end": "2966749"
  },
  {
    "text": "that we've seen on engagements or that we've read about on the web or etc and",
    "start": "2966749",
    "end": "2973279"
  },
  {
    "text": "so that's that will be available right now also some of our colleagues did a",
    "start": "2973279",
    "end": "2980789"
  },
  {
    "text": "CTF that they release I think two days ago so it's a city you have to kind of learn and train yourself on Auditing",
    "start": "2980789",
    "end": "2987449"
  },
  {
    "text": "smart contracts we'll have a link also we have a link actually on the top ten",
    "start": "2987449",
    "end": "2992630"
  },
  {
    "text": "it's called good casino and yeah so if you want to check the top ten go on",
    "start": "2992630",
    "end": "2999299"
  },
  {
    "text": "Desio if you want to check the CTF we have a link in there in the menu and",
    "start": "2999299",
    "end": "3005139"
  },
  {
    "text": "follow us on twitter i'm crypto david w and he's May 3 mmm mmm and yeah we work",
    "start": "3005139",
    "end": "3013309"
  },
  {
    "text": "at NECC group we do a lot of crypto and cryptography stuff so you can you know",
    "start": "3013309",
    "end": "3019219"
  },
  {
    "text": "where we are and we'll be here if you have any questions thank you",
    "start": "3019219",
    "end": "3024489"
  },
  {
    "text": "I think we have some time for questions if anyone's got any but it looks like",
    "start": "3027160",
    "end": "3040960"
  },
  {
    "text": "we're good all right so we'll be around if you want to buy us",
    "start": "3040960",
    "end": "3046150"
  },
  {
    "text": "a beer or",
    "start": "3046150",
    "end": "3048660"
  }
]