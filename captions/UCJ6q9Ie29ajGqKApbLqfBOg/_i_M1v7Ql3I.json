[
  {
    "text": "greetings everybody uh welcome to a retrospective on the use of export cryptography in uh South Seas GH with uh",
    "start": "40",
    "end": "8400"
  },
  {
    "text": "David Adrien uh before we begin a few brief notes uh stop by the business Hall located at Bayside AB during the day and",
    "start": "8400",
    "end": "15200"
  },
  {
    "text": "for the welcome reception from 1730 to 1900 tonight uh the blackhe Hat Arsenal",
    "start": "15200",
    "end": "20359"
  },
  {
    "text": "is on the palm foyer on level three uh join us for the pony Awards in manderlay Bay BCD at",
    "start": "20359",
    "end": "28000"
  },
  {
    "text": "1830 and uh please uh put your phone on vibrate it makes it easier for the rest of us to ignore you uh ignore the",
    "start": "28000",
    "end": "35239"
  },
  {
    "text": "ringing while we wait for voicemail to pick it up and uh without further Ado here's uh",
    "start": "35239",
    "end": "42680"
  },
  {
    "text": "David hello is this on awesome um so this is a",
    "start": "43320",
    "end": "50360"
  },
  {
    "text": "retrospective on the use of export cryptography um as some of you may have seen on the internet this has been hailed as the worst named black hat talk",
    "start": "50360",
    "end": "57239"
  },
  {
    "text": "of all time um so I have an alternate title called the top 10 ways Bill Clinton broke TLS um which should",
    "start": "57239",
    "end": "63840"
  },
  {
    "text": "satisfy the buzzfeeders out there um so first up uh who the f is",
    "start": "63840",
    "end": "70159"
  },
  {
    "text": "this um I'm David Adrian I am a grad student at the University of Michigan um",
    "start": "70159",
    "end": "75360"
  },
  {
    "text": "which makes me one of those academic types um venturing out into the lands of",
    "start": "75360",
    "end": "81079"
  },
  {
    "text": "Industry at black hat um I do a lot of work with zmap the internet scanner I",
    "start": "81079",
    "end": "86799"
  },
  {
    "text": "help run census um our group came up with some of the measurement numbers for vulnerability to heart bleed after",
    "start": "86799",
    "end": "93560"
  },
  {
    "text": "disclosure um as well as what I'm going to be talking about today freak Log Jam and drown um and more recently uh I was",
    "start": "93560",
    "end": "101680"
  },
  {
    "text": "just working with chrome team um but I'm no longer employed by Google and this research was not done while I was at",
    "start": "101680",
    "end": "107399"
  },
  {
    "text": "Google so if you're a Google lawyer in the audience please don't tackle me um",
    "start": "107399",
    "end": "113079"
  },
  {
    "text": "but uh now that we've got that out of the way let's Dive Right In um to the",
    "start": "113079",
    "end": "118600"
  },
  {
    "text": "'90s specifically around the time that Al Gore was inventing the internet",
    "start": "118600",
    "end": "124000"
  },
  {
    "text": "um so pretty much from its Inception uh",
    "start": "124000",
    "end": "129119"
  },
  {
    "text": "sort of post-world War cryptography was regulated as something that the military used um it was regulated under uh the",
    "start": "129119",
    "end": "136920"
  },
  {
    "text": "international traffic and arms regulations uh by the Department of State as sort of a munition and so in",
    "start": "136920",
    "end": "145480"
  },
  {
    "text": "1995 uh the status of the regulation was basically that uh under itar under the international traffic and arms",
    "start": "145480",
    "end": "152200"
  },
  {
    "text": "regulations uh encryption for non- US citizens was limited to 40 bits of",
    "start": "152200",
    "end": "157959"
  },
  {
    "text": "symmetric Cipher key strength and 512 bits of public key strength which at the",
    "start": "157959",
    "end": "163120"
  },
  {
    "text": "time was pretty much RSA and Diffy Helman and uh this was regulated on the",
    "start": "163120",
    "end": "170680"
  },
  {
    "text": "Munitions list alongside things like tanks and bombs and guns and ships um",
    "start": "170680",
    "end": "176440"
  },
  {
    "text": "but interestingly while encryption was regulated uh Authentication so like hash functions and Maxs were not",
    "start": "176440",
    "end": "182799"
  },
  {
    "text": "regulated um so at this time in 1995 Daniel J Bernstein um was a grad student",
    "start": "182799",
    "end": "188879"
  },
  {
    "text": "at UC Berkeley djb and he created something called the snuffle crypto system which was kind of",
    "start": "188879",
    "end": "194400"
  },
  {
    "text": "a troll crypto system that did encryption only using hash functions and so the government didn't really know what to do with it um but he applied for",
    "start": "194400",
    "end": "201879"
  },
  {
    "text": "an export license and the government said no you not allowed to export the this code or you present your paper",
    "start": "201879",
    "end": "207680"
  },
  {
    "text": "outside of the United States and so djb uh sued the government",
    "start": "207680",
    "end": "213080"
  },
  {
    "text": "alongside Cindy con um who is now uh Cindy con was his lawyer she's now the director of the eff um they sued the",
    "start": "213080",
    "end": "220920"
  },
  {
    "text": "government and uh the result of this uh was the sort of cod's speech case the",
    "start": "220920",
    "end": "227560"
  },
  {
    "text": "case where uh the phrase Coda speech came out and the Northern District of California overruled the regulations",
    "start": "227560",
    "end": "234000"
  },
  {
    "text": "under itar and said that they were infringing on djb's First Amendment rights and they were unconstitutional",
    "start": "234000",
    "end": "240400"
  },
  {
    "text": "and this happened in December of 1996 about a year and a half after the initial snuffle crypto system but Bill",
    "start": "240400",
    "end": "248640"
  },
  {
    "text": "Clinton in November of 1996 a month before this ruling passed an executive order that moved the regulations off of",
    "start": "248640",
    "end": "256160"
  },
  {
    "text": "itar and onto the export Administration regulations um which are sort of the",
    "start": "256160",
    "end": "261919"
  },
  {
    "text": "civilian regulations by the Department of State for just like how imports and exports I regulated um so the authority",
    "start": "261919",
    "end": "268040"
  },
  {
    "text": "was moved and that court case was only for itar so they were like great you won that court case but it doesn't mean",
    "start": "268040",
    "end": "273759"
  },
  {
    "text": "anything because that law doesn't exist anymore so djb and Cindy con rechallenged the regulations under ear",
    "start": "273759",
    "end": "279880"
  },
  {
    "text": "um one again got overturned but then eventually Department of Commerce basically was like we don't want to deal",
    "start": "279880",
    "end": "285080"
  },
  {
    "text": "with this anymore we're going to stop regulating cryptography at least open source cryptography um and this happened",
    "start": "285080",
    "end": "291000"
  },
  {
    "text": "in in 1999 and that's the state we've been in ever since is that cryptography is no longer regulated um for US",
    "start": "291000",
    "end": "298360"
  },
  {
    "text": "citizens versus non us citiz uh but while all this was happening in",
    "start": "298360",
    "end": "304720"
  },
  {
    "text": "1995 there's been there was a lot of developments in sort of the field of like the internet and secure",
    "start": "304720",
    "end": "310960"
  },
  {
    "text": "transport starting with SSL version 2 in 1995 um sslv2 was designed uh deployed",
    "start": "310960",
    "end": "318639"
  },
  {
    "text": "and deprecated all in one year it was a terrible protocol that didn't really work um I think this might be a record",
    "start": "318639",
    "end": "325240"
  },
  {
    "text": "in sort of design deployment and deprecation speed nowadays I'd like to see the ietf tried doing this um in 2016",
    "start": "325240",
    "end": "333520"
  },
  {
    "text": "but it was followed by SSL version 3 which sort of formed the basis for modern TLS modern transport layer",
    "start": "333520",
    "end": "340720"
  },
  {
    "text": "security um and then finally in 1999 uh came TLS version one um also known as",
    "start": "340720",
    "end": "347759"
  },
  {
    "text": "SSL version 3.1 if you look at the structure of the packets um and this is",
    "start": "347759",
    "end": "353600"
  },
  {
    "text": "when the standard really became an official ietf standard and um started looking even more modern",
    "start": "353600",
    "end": "360479"
  },
  {
    "text": "but all of this happened before the regulations were overturned and so all three of these uh",
    "start": "360479",
    "end": "366360"
  },
  {
    "text": "contain what I'm referring to as export cryptography that is to say specifically weakened cryptography designed to comply",
    "start": "366360",
    "end": "372720"
  },
  {
    "text": "with these regulations um uh and in fact the way that they sort",
    "start": "372720",
    "end": "378120"
  },
  {
    "text": "of enforced this was kind of silly basically Netscape had two versions it had the US version and the international",
    "start": "378120",
    "end": "383639"
  },
  {
    "text": "version the international version only spoke bad crypto and the US version uh could speak all the crypto that we knew",
    "start": "383639",
    "end": "390400"
  },
  {
    "text": "of um and you just were supposed to download the correct",
    "start": "390400",
    "end": "394840"
  },
  {
    "text": "one and so what I'm here to talk about today is I want to show that these export regulations of the '90s that have",
    "start": "395520",
    "end": "402160"
  },
  {
    "text": "been overturned for nearly 20 years now um are directly harming the security of the internet today um and I'm going to",
    "start": "402160",
    "end": "409080"
  },
  {
    "text": "show uh three different attacks that follow directly out of these regulations because of crypto that was created to",
    "start": "409080",
    "end": "415039"
  },
  {
    "text": "comply with these regulations how they harm modern clients like a modern Chrome for example",
    "start": "415039",
    "end": "421520"
  },
  {
    "text": "and another reason that i' sort I'm here giving this talk today and that this is important um is because this debate over",
    "start": "422440",
    "end": "429240"
  },
  {
    "text": "cryptography is starting to come into the public eye again um it's it's not quite the same as it was in in the90s um",
    "start": "429240",
    "end": "436720"
  },
  {
    "text": "instead we're hearing terms like going dark and lawful access uh but uh the",
    "start": "436720",
    "end": "442240"
  },
  {
    "text": "regulations from the 90s are sort of the best way that we can go back and look at say so what happens when you regulate cryptography and the results were pretty",
    "start": "442240",
    "end": "448639"
  },
  {
    "text": "bad and so right now we have Senator Diane Feinstein a Democrat from California you",
    "start": "448639",
    "end": "454800"
  },
  {
    "text": "might also know her from being the mayor of San Francisco that instituted rent control um so everybody's favorite um",
    "start": "454800",
    "end": "461560"
  },
  {
    "text": "but she you know rare display of bipart bipartisanship along with Senator Richard Burr introduced a the Feinstein",
    "start": "461560",
    "end": "468159"
  },
  {
    "text": "Burr bill in a committee uh a few months ago and this never made it out of committee but it effectively made end",
    "start": "468159",
    "end": "473720"
  },
  {
    "text": "end encryption illegal so what I want to do here today",
    "start": "473720",
    "end": "478960"
  },
  {
    "text": "is is try and show that whenever we the these regulations happen bad things ensue possibly decades",
    "start": "478960",
    "end": "485520"
  },
  {
    "text": "later and so the rest of this talk is split into three separate parts corresponding with three separate uh",
    "start": "485520",
    "end": "492479"
  },
  {
    "text": "Publications the first one is I'm going to talk about the freak attack um the",
    "start": "492479",
    "end": "497800"
  },
  {
    "text": "freak attack was originally discovered by some folks at inria um it's described in that messy State of the Union paper",
    "start": "497800",
    "end": "503120"
  },
  {
    "text": "right there um I got involved with sort of this space uh in the wake of the freak attack using map to do measurement",
    "start": "503120",
    "end": "510319"
  },
  {
    "text": "to determine the quantity to quantify the impact when then freak uh led directly into Log Jam um which we",
    "start": "510319",
    "end": "518279"
  },
  {
    "text": "published at CCS about a year ago uh was another export related attack and then",
    "start": "518279",
    "end": "523719"
  },
  {
    "text": "finally we'll close with drown uh my understanding is that some people think this is a a talk about drown it's only",
    "start": "523719",
    "end": "530120"
  },
  {
    "text": "onethird a talk about drown so sorry if you're disappointed but let's get to it uh the",
    "start": "530120",
    "end": "537040"
  },
  {
    "text": "first first thing I want to talk about is freak",
    "start": "537040",
    "end": "541440"
  },
  {
    "text": "so the freak attack is a man-in-the-middle attack against TLS that downgrades people to RSA export so",
    "start": "545279",
    "end": "553160"
  },
  {
    "text": "if you'll bear with me let's let's jump back into say it's the '90s we're in the room where it happens and we want to uh",
    "start": "553160",
    "end": "560480"
  },
  {
    "text": "we need to find a way to selectively weaken a protocol based on RSA so that it can comply with these regulations and",
    "start": "560480",
    "end": "566600"
  },
  {
    "text": "the way that we have to do that is by shrink uh the public key size CU remember the",
    "start": "566600",
    "end": "572200"
  },
  {
    "text": "the public key size was limited to 512 bits but we want to make sure that we can use arbitrary sized public keys for",
    "start": "572200",
    "end": "579399"
  },
  {
    "text": "US citizens because the US citizens have been deemed better than the other citizens so they get uh strong",
    "start": "579399",
    "end": "586279"
  },
  {
    "text": "crypto and so this brings up the question of how do you pick which RSA key to use do you use the strong one or",
    "start": "586279",
    "end": "592120"
  },
  {
    "text": "do you use the export compliant one um and the answer that TLS came up with was we'll use a convoluted protocol",
    "start": "592120",
    "end": "598120"
  },
  {
    "text": "handshake to figure out which one we should use and so let's take a look at how that works going to use this diagram a few",
    "start": "598120",
    "end": "605240"
  },
  {
    "text": "times in the talk on the left we're going to have Alice the client speaking to Bob the server and both of them are",
    "start": "605240",
    "end": "610800"
  },
  {
    "text": "represented by XKCD characters and so let's say they're",
    "start": "610800",
    "end": "615839"
  },
  {
    "text": "speaking uh sslv3 or TLS um so modern https you can think of this and this",
    "start": "615839",
    "end": "621560"
  },
  {
    "text": "will start with the client Alice sending a client hello to Bob and for the this",
    "start": "621560",
    "end": "628720"
  },
  {
    "text": "uh demonstration we assuming they're speaking some form of RSA key exchange which is why Alice sends a cipher that",
    "start": "628720",
    "end": "635200"
  },
  {
    "text": "contains RSA ciphers Define the key exchange and the symmetric phography used the server responds selects the",
    "start": "635200",
    "end": "641320"
  },
  {
    "text": "cipher sends its certificate to authenticate itself its certificate contains its public key but this public",
    "start": "641320",
    "end": "647680"
  },
  {
    "text": "key might be export comp or is this public key is likely not export compliant it's larger than 512",
    "start": "647680",
    "end": "654279"
  },
  {
    "text": "bits and so in a normal handshake the client would just pull out the publicy",
    "start": "654279",
    "end": "659440"
  },
  {
    "text": "from that certificate uh encrypt it some key material both sides would derive the final shared secret and everything would",
    "start": "659440",
    "end": "666399"
  },
  {
    "text": "be great this is how a normal handshake Works however to comply for the export regulations they added this extra",
    "start": "666399",
    "end": "673079"
  },
  {
    "text": "message that only gets sent if you're doing what's called an export RSA handshake meaning you selected the export RSA Cipher because you downloaded",
    "start": "673079",
    "end": "680120"
  },
  {
    "text": "Netscape International Edition that only speak speaks export ciphers the way that this worked is they",
    "start": "680120",
    "end": "686440"
  },
  {
    "text": "added that extra message there in red the server key exchange message where they send you a shorter RSA public key",
    "start": "686440",
    "end": "692240"
  },
  {
    "text": "and the client extracts the regulation compliant public key and uses that for the rest of the key exchange and this",
    "start": "692240",
    "end": "698160"
  },
  {
    "text": "public key would only be 512 bits",
    "start": "698160",
    "end": "702720"
  },
  {
    "text": "long um however it turns out that every major TLS implementation did not know",
    "start": "706000",
    "end": "712079"
  },
  {
    "text": "how to say no to this message they would all accept it whether or not you were doing export RSA or normal RSA if this",
    "start": "712079",
    "end": "717720"
  },
  {
    "text": "message showed up they were happy to extract the shorter public key from it and effectively this bug was enough for",
    "start": "717720",
    "end": "725600"
  },
  {
    "text": "a man in the middle to uh take over the connection and when I say every major TLS implementation what I mean is open",
    "start": "725600",
    "end": "731680"
  },
  {
    "text": "SSL I mean Apple secure transport which gets shipped with OSX and I mean uh",
    "start": "731680",
    "end": "736760"
  },
  {
    "text": "Microsoft s Channel which is part of Windows uh the only one that was not vulnerable was mozilla's NSS",
    "start": "736760",
    "end": "742079"
  },
  {
    "text": "implementation the one used in Firefox uh so let's look at how the attack would work let's assume there's a",
    "start": "742079",
    "end": "748560"
  },
  {
    "text": "man in the middle on The Wire represented by the red guy in the middle and so let's assume that Alice is",
    "start": "748560",
    "end": "754680"
  },
  {
    "text": "a modern client like say you just downloaded Chrome in January of 2015 because Chrome was vulnerable to this",
    "start": "754680",
    "end": "760160"
  },
  {
    "text": "attack does not contain any of these export ciphers because it's not 1999 anymore um the clients have largely",
    "start": "760160",
    "end": "766720"
  },
  {
    "text": "removed all this old cryptography but we'll assume that the server left the export methods the export ciphers",
    "start": "766720",
    "end": "772720"
  },
  {
    "text": "enabled because the server wants backwards compatibility in case somebody wakes up from a deep sleep and logs in",
    "start": "772720",
    "end": "778120"
  },
  {
    "text": "with their Netscape International Edition um in fact I tried looking for Netscape International Edition about a",
    "start": "778120",
    "end": "784079"
  },
  {
    "text": "week ago and couldn't find it anywhere on the internet um it's that hard to find so what the man in the middle will",
    "start": "784079",
    "end": "790120"
  },
  {
    "text": "do is rewrite the cipher to be an export RSA Cipher instead of a normal one and",
    "start": "790120",
    "end": "796360"
  },
  {
    "text": "it will present to the client that it's a normal RSA and it will present to server that it's export RSA um and the",
    "start": "796360",
    "end": "801839"
  },
  {
    "text": "server therefore will go through and send this extra server key exchange",
    "start": "801839",
    "end": "807399"
  },
  {
    "text": "message uh because it thinks it's it's doing export RSA and because of the bug I just described the client is happy to",
    "start": "807399",
    "end": "813160"
  },
  {
    "text": "accept this message uh we'll assume that the 512-bit",
    "start": "813160",
    "end": "818680"
  },
  {
    "text": "key in the server key exchange message the extra one that it's sent for export",
    "start": "818680",
    "end": "823920"
  },
  {
    "text": "compliance is been factored by the attacker and we'll get to why that's a reasonable assumption to make um but for",
    "start": "823920",
    "end": "829720"
  },
  {
    "text": "now just bear with me then finally because the attacker has factored that key they can then decrypt the premaster",
    "start": "829720",
    "end": "836720"
  },
  {
    "text": "secret that the client encrypts and go through the same key derivation function and inserts in the middle for the rest",
    "start": "836720",
    "end": "842320"
  },
  {
    "text": "of the handshake but a quick jump back to",
    "start": "842320",
    "end": "847759"
  },
  {
    "text": "factoring you're likely like look David you you said that you were factoring an RSA key that that you shouldn't be able",
    "start": "847759",
    "end": "853759"
  },
  {
    "text": "to do that factoring is hard let's go shopping like the entire point of RSA is that factoring is hard if you can factor",
    "start": "853759",
    "end": "859759"
  },
  {
    "text": "a key like why we we'll just Factor keys and decrypt everything well the answer to that is you can't Factor all keys but",
    "start": "859759",
    "end": "867560"
  },
  {
    "text": "you nowadays because it's not 1999 anymore 512 bits what the the max export",
    "start": "867560",
    "end": "873160"
  },
  {
    "text": "length which was at least somewhat secure in the '90s is now factorable for around $100 on Amazon ec2 and you can",
    "start": "873160",
    "end": "880920"
  },
  {
    "text": "fiddle with uh the price to cost ratio um Nadia heninger and Luke Valenta at",
    "start": "880920",
    "end": "886240"
  },
  {
    "text": "upen have some work showing uh using like uh combination of like mathematical",
    "start": "886240",
    "end": "892519"
  },
  {
    "text": "factoring tools and the standard sort of distributed compute stuff you can get on ec2 um how you can optimize uh cost for",
    "start": "892519",
    "end": "899759"
  },
  {
    "text": "factoring um but it's roughly about $100 for a little over an",
    "start": "899759",
    "end": "905160"
  },
  {
    "text": "hour in fact this isn't so easy to do that uh last year when I was teaching a course for some undergrads we gave extra",
    "start": "905160",
    "end": "911959"
  },
  {
    "text": "credit to anyone who could factor a 512 bit uh public key and a couple of students using some free Amazon credit",
    "start": "911959",
    "end": "917880"
  },
  {
    "text": "they got at a hackathon just spun up like an M3 llarge and factored a 512-bit uh RSA key um and got the extra credit",
    "start": "917880",
    "end": "926000"
  },
  {
    "text": "um while everyone else was like wait you want us to have a major mathematical break what um but they they got the",
    "start": "926000",
    "end": "931240"
  },
  {
    "text": "right idea that's why it was extra credit um so effectively what this means",
    "start": "931240",
    "end": "936800"
  },
  {
    "text": "is that anyone who can spend $100 on ec2 can man in the middle a server that",
    "start": "936800",
    "end": "942440"
  },
  {
    "text": "supports export RSA in TLS the client doesn't need to support this just the",
    "start": "942440",
    "end": "949959"
  },
  {
    "text": "server so from a sort of cost and compute and cryptography standpoint that's all you need for the attack but",
    "start": "950680",
    "end": "956560"
  },
  {
    "text": "there's another follow-up question for is this attack feasible or not and that is do servers actually support the RSA",
    "start": "956560",
    "end": "962440"
  },
  {
    "text": "export Cipher right this was deprecated uh this was effectively useless after 1999 why do servers still have this",
    "start": "962440",
    "end": "969399"
  },
  {
    "text": "enabled no modern how to configure your TLS server like article will tell you to",
    "start": "969399",
    "end": "974800"
  },
  {
    "text": "enable these so we fired up zmap we connected to every https host on the",
    "start": "974800",
    "end": "979839"
  },
  {
    "text": "internet checked what ciphers they support and we found that a few days before the freak disclosure so the point all the way on the left there um note",
    "start": "979839",
    "end": "986680"
  },
  {
    "text": "that the graph's a log scale um about 36.7% of htps servers so a third of them",
    "start": "986680",
    "end": "993560"
  },
  {
    "text": "supported export RSA and then there's that steep drop off there that's when freak disclosure happened um and people",
    "start": "993560",
    "end": "1000639"
  },
  {
    "text": "patched this very quickly um down to under 10% at about 6% a week later and it's been slowly decreasing ever since",
    "start": "1000639",
    "end": "1008079"
  },
  {
    "text": "so the answer to the feasibility question is you know before disclosure this attack was super feasible uh one in",
    "start": "1008079",
    "end": "1014399"
  },
  {
    "text": "three https servers were vulnerable to it",
    "start": "1014399",
    "end": "1019440"
  },
  {
    "text": "um another thing that I want to note uh when we were running freak attack.com we were also so that that's",
    "start": "1019920",
    "end": "1027918"
  },
  {
    "text": "the server side vulnerability the client side vulnerability is you have this bug in your TLS implementation um this bug",
    "start": "1027919",
    "end": "1033199"
  },
  {
    "text": "has now been patched in every major browser but we were sort of trying to uh detect on the clients which ones were",
    "start": "1033199",
    "end": "1039520"
  },
  {
    "text": "vulnerable and which ones were not on our site um I don't want to make like broad scientific claims about the data",
    "start": "1039520",
    "end": "1044558"
  },
  {
    "text": "here um because we had some issues getting it collected as well as this isn't necessarily A representative sample of Internet users like who goes",
    "start": "1044559",
    "end": "1051200"
  },
  {
    "text": "to freak attack.com after a TLS volum this is a very specific subset of people um but we did noticed that about uh 10%",
    "start": "1051200",
    "end": "1059559"
  },
  {
    "text": "of the vulnerable population was reporting as Firefox and we were like why is Firefox showing up vulnerable",
    "start": "1059559",
    "end": "1064600"
  },
  {
    "text": "shouldn't we know that NSS wasn't vulnerable to it's the only library that wasn't vulnerable turns out that this is",
    "start": "1064600",
    "end": "1070240"
  },
  {
    "text": "because people have like uh Avast or some Manch or various other end host like man- INE middle software that's",
    "start": "1070240",
    "end": "1076400"
  },
  {
    "text": "doing added value um and and securing your https connections by man in the middling it on your host these libraries",
    "start": "1076400",
    "end": "1083320"
  },
  {
    "text": "would use S Channel or open SSL internally which were then vulnerable to the freak attack so if you installed",
    "start": "1083320",
    "end": "1088520"
  },
  {
    "text": "antivirus and used Firefox uh you were probably vulnerable",
    "start": "1088520",
    "end": "1094400"
  },
  {
    "text": "whoops um couple notes on mitigations uh server side disable RSA export ciphers",
    "start": "1094400",
    "end": "1101200"
  },
  {
    "text": "client side patch your clients um Everybody patched really or or all of the browsers release patches within days",
    "start": "1101200",
    "end": "1108120"
  },
  {
    "text": "um any anyone who's just been getting updates should be no longer vulnerable to this and then there's some more",
    "start": "1108120",
    "end": "1114880"
  },
  {
    "text": "information on freak attack.com in terms of origins of this vulnerability this although this was a a",
    "start": "1114880",
    "end": "1123360"
  },
  {
    "text": "implementation bug and I don't want to say that uh this had to happen but this",
    "start": "1123360",
    "end": "1130000"
  },
  {
    "text": "implementation bug could not have possibly happened if the export regulations didn't exist if if SSL had",
    "start": "1130000",
    "end": "1136840"
  },
  {
    "text": "been implemented one year later after after djb had won its court case we would not have seen this bug because we would not have needed these mechanisms",
    "start": "1136840",
    "end": "1143760"
  },
  {
    "text": "in the protocol that allowed the bug to exist in the first place and adding in these mechanisms just makes it really hard to reason about what you're",
    "start": "1143760",
    "end": "1149799"
  },
  {
    "text": "implementing and how the protocol works because now you have these sort of disperate State machines one for export",
    "start": "1149799",
    "end": "1154840"
  },
  {
    "text": "one for non-export um that you need to be able to reason with about how they interact and the root of freak was that they were",
    "start": "1154840",
    "end": "1161280"
  },
  {
    "text": "interacting in a way we thought they wouldn't we thought they were isolated but they were",
    "start": "1161280",
    "end": "1166519"
  },
  {
    "text": "not so that's all I have on freak um now I'd like to move on to just quickly go",
    "start": "1167720",
    "end": "1174080"
  },
  {
    "text": "through Log Jam um there's lots of other stuff on the internet about Log Jam and various details um but I just want to",
    "start": "1174080",
    "end": "1181120"
  },
  {
    "text": "sort of give the high level overview here um Log Jam followed directly out of freak it's another man-in-the-middle",
    "start": "1181120",
    "end": "1186919"
  },
  {
    "text": "downgrade attack but instead of attacking export RSA or attacking the other type of public key encryption that",
    "start": "1186919",
    "end": "1192799"
  },
  {
    "text": "at the time that was regulated which is to say export Diffy Helman so once again",
    "start": "1192799",
    "end": "1200080"
  },
  {
    "text": "uh let's go back in time Let's Pretend We're one of the SSL version 3 designers and that we need to make our protocol",
    "start": "1200080",
    "end": "1206039"
  },
  {
    "text": "compliant with the regulations and our protocol contains Diffy Helman so how do we do that well",
    "start": "1206039",
    "end": "1212280"
  },
  {
    "text": "the answer is we need to use a shorter Prime for Diffy H Helman the or group size however you want to call it shorter",
    "start": "1212280",
    "end": "1217919"
  },
  {
    "text": "modulus all different words for the same thing it needs to be only 512 bits then",
    "start": "1217919",
    "end": "1223360"
  },
  {
    "text": "once again how do we select which prime to use well the answer was convoluted protocol Shake again so before I go",
    "start": "1223360",
    "end": "1231039"
  },
  {
    "text": "through how it works in TLS I just want to do a quick refresher of Diffy Helman um this is the classic Diffy Helman",
    "start": "1231039",
    "end": "1236960"
  },
  {
    "text": "explanation picture from Wikipedia that I imagine many of you have seen before um so what we have at the top is",
    "start": "1236960",
    "end": "1245159"
  },
  {
    "text": "we have Alice talking to Bob and they have some common set of parameters the common set of parameters",
    "start": "1245159",
    "end": "1250480"
  },
  {
    "text": "in the pictures is the yellow paint in math terms this is your Prime P also referred to as the modulus and your",
    "start": "1250480",
    "end": "1256320"
  },
  {
    "text": "generator G um then they each pick some secret value which is the",
    "start": "1256320",
    "end": "1261480"
  },
  {
    "text": "exponents um then they combine the exponents with the generator modulo P that's the public values the orange and",
    "start": "1261480",
    "end": "1267720"
  },
  {
    "text": "blue and then both side can take both sides can take the other's public value combine it with their secret value and",
    "start": "1267720",
    "end": "1273679"
  },
  {
    "text": "get the shared secret which in this case is the brown paint I also like to think that this diagram really illustrates the",
    "start": "1273679",
    "end": "1279679"
  },
  {
    "text": "issues with using a short Prime because when there's only six colors pretty much all of them combined to brown right like",
    "start": "1279679",
    "end": "1286360"
  },
  {
    "text": "if someone was actually using paint as a mechan for a shared secret I think we could all break that crypto system",
    "start": "1286360",
    "end": "1292000"
  },
  {
    "text": "pretty easily and sort of the same thing applies when you're using a short",
    "start": "1292000",
    "end": "1297559"
  },
  {
    "text": "Prime so what is Log Jam Log Jam is a downgrade attack against TLS it leverages export Diffy Helman",
    "start": "1297559",
    "end": "1305600"
  },
  {
    "text": "instead of export RSA and it requires that the attacker rather than factor a key be able to compute uh discrete log",
    "start": "1305600",
    "end": "1312720"
  },
  {
    "text": "so undo the Diffy helmet operation um and so instead of spending $100 on ec2 to do it's a little more",
    "start": "1312720",
    "end": "1319640"
  },
  {
    "text": "expensive it takes about one week of pre-computation per Prime which sounds unreasonable at the",
    "start": "1319640",
    "end": "1326919"
  },
  {
    "text": "moment but we'll get back to why that's feasible first I'd like to go through the protocol and show sort of how this",
    "start": "1326919",
    "end": "1333559"
  },
  {
    "text": "works once again uh Alice talking to Bob we'll say Alice is a modern version of Chrome we'll say in like April of 2015",
    "start": "1333559",
    "end": "1340480"
  },
  {
    "text": "before disclosure Alice wants to speak Diffy Helman so she sends a cipher a DHE Diffy",
    "start": "1340480",
    "end": "1346320"
  },
  {
    "text": "Helman ephemeral Cipher we'll assume the server selects the cipher just like before it's going",
    "start": "1346320",
    "end": "1352080"
  },
  {
    "text": "to send its certificate but rather than using an RSA public key in the certificate the server",
    "start": "1352080",
    "end": "1357240"
  },
  {
    "text": "is also going to send over the parameters needed for Diffy Helman so the yellow paint um in this case that's",
    "start": "1357240",
    "end": "1362880"
  },
  {
    "text": "the the P and the g the prime and the generator as well as its public values so the the orange or the blue",
    "start": "1362880",
    "end": "1368559"
  },
  {
    "text": "paint um and then the client will go through finished ify Helman do the key",
    "start": "1368559",
    "end": "1373760"
  },
  {
    "text": "derivation and everybody's happy however if you're speaking an",
    "start": "1373760",
    "end": "1379159"
  },
  {
    "text": "export Cipher you need to redo this to make sure that it's compliant meaning that that Prime can only be 512 bits and",
    "start": "1379159",
    "end": "1385720"
  },
  {
    "text": "in fact the way that TLS did this was simply by saying if you're using an export Cipher export DHE Cipher it's",
    "start": "1385720",
    "end": "1391400"
  },
  {
    "text": "exactly the same as a normal Diffy Helman exchange same protocol flow same messages just that Prime needs to be",
    "start": "1391400",
    "end": "1397960"
  },
  {
    "text": "only 512 bits so this has the side effect of meaning that if you just pull",
    "start": "1397960",
    "end": "1403520"
  },
  {
    "text": "any random key exchange message server key exchange for Diffy Helman message off the wire no way to distinguish an",
    "start": "1403520",
    "end": "1410320"
  },
  {
    "text": "export one and a non-export one aside from the key length but you also don't know what what size the prime is going",
    "start": "1410320",
    "end": "1417320"
  },
  {
    "text": "to be anyway right because the server is sending it to you the server might be picking a 16-bit prime which Safari was",
    "start": "1417320",
    "end": "1422520"
  },
  {
    "text": "happen to negotiate until like two weeks ago or a few months ago rather um or",
    "start": "1422520",
    "end": "1428039"
  },
  {
    "text": "they might be sending you like a 16,000 bit Prime because the server is super paranoid you don't know which one is coming so you don't actually know if",
    "start": "1428039",
    "end": "1434679"
  },
  {
    "text": "this is a uh export or non-export key exchange so that leads itself to the Log",
    "start": "1434679",
    "end": "1439760"
  },
  {
    "text": "Jam attack once again we'll have an attacker on The Wire who rewrites the ciphers to be export um we have Chrome",
    "start": "1439760",
    "end": "1446520"
  },
  {
    "text": "on the left and a server supporting export DHE on the right and then uh the server because it thinks",
    "start": "1446520",
    "end": "1453600"
  },
  {
    "text": "it's sending speaking export is going to send a 512 bit Prime because it doesn't want to get arrested",
    "start": "1453600",
    "end": "1459480"
  },
  {
    "text": "um and then the client doesn't know what size was coming anyway is more than happy to take that message because it's",
    "start": "1459480",
    "end": "1465200"
  },
  {
    "text": "identical to the non-export version and negotiates uh a TLS connection using only 512 bits worth of",
    "start": "1465200",
    "end": "1472960"
  },
  {
    "text": "security and then at this point we'll assume that the attacker can undo the Diffy Helman here because it's only 512",
    "start": "1472960",
    "end": "1481559"
  },
  {
    "text": "bits so in terms of feasibility you need two things for this attack the first thing is you need the server to support",
    "start": "1481720",
    "end": "1488279"
  },
  {
    "text": "DHE exp port and the second thing is you need to be able to do the pre-computation um which is a sort of",
    "start": "1488279",
    "end": "1494600"
  },
  {
    "text": "per Prime operation one we pre-computation then basically free connection break on the prime so that means that if this",
    "start": "1494600",
    "end": "1501279"
  },
  {
    "text": "is going to be feasible you servers need to be sharing prime numbers um they do this is fine because these are the",
    "start": "1501279",
    "end": "1507399"
  },
  {
    "text": "common parameters these are often standardized into protocols they just happen to not be in TLS instead they",
    "start": "1507399",
    "end": "1512440"
  },
  {
    "text": "tend to be baked into web servers um so to figure out if this was",
    "start": "1512440",
    "end": "1517640"
  },
  {
    "text": "feasible or not we once again we fired up our internet scanner we connected every https server on the internet and",
    "start": "1517640",
    "end": "1523000"
  },
  {
    "text": "we check two things one do they support the DHE export Cipher and two what uh",
    "start": "1523000",
    "end": "1529240"
  },
  {
    "text": "Prime do they send us for the first one um for DHE export support we see that they do um it",
    "start": "1529240",
    "end": "1536000"
  },
  {
    "text": "doesn't have that giant leap up to like 30% um and that's likely because we",
    "start": "1536000",
    "end": "1541760"
  },
  {
    "text": "didn't the the because Log Jam followed from free like that's where we got the idea from we didn't have the scan data",
    "start": "1541760",
    "end": "1548320"
  },
  {
    "text": "for support for RSA export or excuse me for DHE export until after the freak disclosure and so if you layer the freak",
    "start": "1548320",
    "end": "1555279"
  },
  {
    "text": "graph on top you see that they track each other very Clos ly um so if I were a betting man and apparently I am cuz",
    "start": "1555279",
    "end": "1561520"
  },
  {
    "text": "I'm in Vegas um I would say that Diffy Helman export was way higher before the",
    "start": "1561520",
    "end": "1566799"
  },
  {
    "text": "freak disclosure and lots of people just turned off both at the same",
    "start": "1566799",
    "end": "1571480"
  },
  {
    "text": "time uh the sort of gap between the two lines is likely due to the fact that",
    "start": "1572080",
    "end": "1577320"
  },
  {
    "text": "Microsoft's web server IIs um it did support export RSA but it never supported export toy Helman um so the",
    "start": "1577320",
    "end": "1584240"
  },
  {
    "text": "curve is a little bit lower um and then if you look at the Alexa top",
    "start": "1584240",
    "end": "1591399"
  },
  {
    "text": "1 million so the most common visited sites on the internet um about 8 and a half% of them are vulnerable but if you",
    "start": "1591399",
    "end": "1598320"
  },
  {
    "text": "go and look at what primes they're using of those 8 and half% um 92% are using",
    "start": "1598320",
    "end": "1603480"
  },
  {
    "text": "one of two primes uh so 82% of them are using one that was shipped with Apache mod SSL",
    "start": "1603480",
    "end": "1610000"
  },
  {
    "text": "it's literally in the source code hardcoded in and another 10% are using a similar one that gets shipped with",
    "start": "1610000",
    "end": "1615640"
  },
  {
    "text": "engine X so in sort of cost terms what that means is you can do two onewe",
    "start": "1615640",
    "end": "1622799"
  },
  {
    "text": "pre-computations one for the mod SSL Prime and one for the engine X Prime and",
    "start": "1622799",
    "end": "1627919"
  },
  {
    "text": "then once you've done that you could break that would get you 92% of vulnerable servers you would then be able to attack um so to get the long",
    "start": "1627919",
    "end": "1634840"
  },
  {
    "text": "tail it you know cost starts going up but many servers including uh fbi.gov uh",
    "start": "1634840",
    "end": "1641559"
  },
  {
    "text": "were using that engine X Prime and a 500 and supported uh RSA export if you go to week DH you can see a demo a man in the",
    "start": "1641559",
    "end": "1648720"
  },
  {
    "text": "middle against fbi.gov and if you go to Twitter and you look up I think it's called dlog Orbot you can tweet at the",
    "start": "1648720",
    "end": "1656240"
  },
  {
    "text": "bot and it will calculate discret logs in those two groups for you um if Nadia students happen to still have it up uh",
    "start": "1656240",
    "end": "1662159"
  },
  {
    "text": "it goes down a lot um I think we also might have taken it down cuz someone made a Twitter account that had done",
    "start": "1662159",
    "end": "1667240"
  },
  {
    "text": "literally nothing it was an empty account except tweet at this bot and get theed logs and we were like something about this seems suspicious like this",
    "start": "1667240",
    "end": "1673720"
  },
  {
    "text": "person might actually be exploiting lock Jam um so I think they might have taken it down",
    "start": "1673720",
    "end": "1680120"
  },
  {
    "text": "uh but so log Jam is at least somewhat feasible little theoretical um but it",
    "start": "1681799",
    "end": "1688919"
  },
  {
    "text": "does have some implications uh for standards um and when I'm saying standards I mean things like rfc's and",
    "start": "1688919",
    "end": "1694919"
  },
  {
    "text": "that uh the first one is that you really",
    "start": "1694919",
    "end": "1700279"
  },
  {
    "text": "don't want to have negotiatable Diffy Helman parameters in a protocol you want to standardize them the problem with",
    "start": "1700279",
    "end": "1707159"
  },
  {
    "text": "standardizing them though is is you you uh you need to make sure you do a good job and that they'll last for two",
    "start": "1707159",
    "end": "1713159"
  },
  {
    "text": "decades or more so you have this tension between wanting to standardize things to decrease brittleness so that you can't",
    "start": "1713159",
    "end": "1718919"
  },
  {
    "text": "have servers sending weak primes or you don't know what there's coming but at the same time you don't want to like",
    "start": "1718919",
    "end": "1724799"
  },
  {
    "text": "bake in Weak uh parameters into your protocol so if you were back in 1995 or",
    "start": "1724799",
    "end": "1731240"
  },
  {
    "text": "1996 designing USS lv3 you certainly wouldn't really want to standardize in some 512-bit primes into your protocol",
    "start": "1731240",
    "end": "1738480"
  },
  {
    "text": "just so that your regulation compliant the writing was on the wall for those regulations like the court case was happening it had been one once and then",
    "start": "1738480",
    "end": "1745120"
  },
  {
    "text": "it was happening again it was probably going to be one again um why would you want to add that to your protocol when it's just going to be gone in a",
    "start": "1745120",
    "end": "1751679"
  },
  {
    "text": "year and it's kind of appealing that the Ser uh when you let the server pick the prime it's kind of appealing that then",
    "start": "1751679",
    "end": "1757519"
  },
  {
    "text": "you have this protocol where the security is as strong as the server wants if you have a really paranoid server it can send you a big Prime and",
    "start": "1757519",
    "end": "1763240"
  },
  {
    "text": "if you have a really lazy server it can send you a 16-bit prime um and and this is sort of like uh attractive from a",
    "start": "1763240",
    "end": "1770240"
  },
  {
    "text": "protocol design point of view but in terms of mitigations once",
    "start": "1770240",
    "end": "1775799"
  },
  {
    "text": "again we have two sides for the server disabled DHE export and for the client um uh if you get newer versions",
    "start": "1775799",
    "end": "1784480"
  },
  {
    "text": "of of chrome and pretty much every browser now I think the last one to patch was in September of 2015 um they",
    "start": "1784480",
    "end": "1791120"
  },
  {
    "text": "all just reject short primes now um so they don't necessarily know if you're getting a short Prime because you're",
    "start": "1791120",
    "end": "1796600"
  },
  {
    "text": "being man inth the- middled or just because the server likes short primes but no browser will accept a shorter",
    "start": "1796600",
    "end": "1803039"
  },
  {
    "text": "than 1024-bit Prime and 1024 bits is well out of the reach of uh anyone on",
    "start": "1803039",
    "end": "1809559"
  },
  {
    "text": "ec2 um so that effectively mitigates the attack client side um and in fact the",
    "start": "1809559",
    "end": "1815200"
  },
  {
    "text": "Chrome added a new error for uh uh for short primes it looks like this the",
    "start": "1815200",
    "end": "1820679"
  },
  {
    "text": "error week uh Emeral key A friend of mine back at Michigan who does uh",
    "start": "1820679",
    "end": "1826200"
  },
  {
    "text": "embedded systems iot stuff um one time he messaged me and he was like I was trying to connect to this iot",
    "start": "1826200",
    "end": "1831360"
  },
  {
    "text": "device and I keep getting this SSL Error and chrome I Blame You and I was like well what what was the error and he show",
    "start": "1831360",
    "end": "1837440"
  },
  {
    "text": "shows me a picture of it and it's Error week Emeral Diffy Helman key which came directly out of the research we did with logjam and I was like well you know what",
    "start": "1837440",
    "end": "1843640"
  },
  {
    "text": "I'll take the blame for this one this one was actually my fault um but even",
    "start": "1843640",
    "end": "1848960"
  },
  {
    "text": "more exciting though Chrome is just totally dropping um finite field so prime number based Diffy Helman in the",
    "start": "1848960",
    "end": "1855120"
  },
  {
    "text": "next version I believe um and so they'll only support elliptic curve Diffy Helman which isn't vulnerable to the same type",
    "start": "1855120",
    "end": "1861399"
  },
  {
    "text": "of attack and in fact if you download Chrome Canary I think it it all the Diffy helmet is gone uh thanks to some",
    "start": "1861399",
    "end": "1868760"
  },
  {
    "text": "good work by David Benjamin at",
    "start": "1868760",
    "end": "1872080"
  },
  {
    "text": "Google so that's freak that's Log Jam uh they're pretty similar they both have to do with",
    "start": "1874039",
    "end": "1880600"
  },
  {
    "text": "TLS now we come to drown which is a slightly different flare um so we've hit",
    "start": "1880600",
    "end": "1886720"
  },
  {
    "text": "the two types of key exchange that we regulated uh RSA and Diffy Helman uh now",
    "start": "1886720",
    "end": "1892159"
  },
  {
    "text": "let's finish the trifecta and nail uh export compliant uh symmetric ciphers",
    "start": "1892159",
    "end": "1898039"
  },
  {
    "text": "the ones that were limited to 40 bits so once again Ask yourselves if you have",
    "start": "1898039",
    "end": "1903880"
  },
  {
    "text": "a protocol based on symmetric ciphers how do you weaken it TLS sidestepped this problem by changing the key",
    "start": "1903880",
    "end": "1909960"
  },
  {
    "text": "derivation function what sslv2 did was you're like well if we can only use five bytes so 40 bits in our key just send n",
    "start": "1909960",
    "end": "1918120"
  },
  {
    "text": "five bytes in the clear text and only encrypt the last five and then just combine the two parts uh and then you're",
    "start": "1918120",
    "end": "1923639"
  },
  {
    "text": "nice and compliant and that's how export ciphers worked in sslv2 uh but before I go on too much",
    "start": "1923639",
    "end": "1931480"
  },
  {
    "text": "further I just want to note uh a couple things about sslv2 one is that yes I know it's completely broken um we're not",
    "start": "1931480",
    "end": "1939159"
  },
  {
    "text": "trying to come up with some new attack on sslv2 here everyone knows that it's already M on the middle LEL what we want",
    "start": "1939159",
    "end": "1945720"
  },
  {
    "text": "want to do with sslv2 is find a way to leverage it to attack modern TLS freaking log Jam showed that supporting",
    "start": "1945720",
    "end": "1953399"
  },
  {
    "text": "old types of cryptography isn't just harmless backwards compatibility it's actually hurting the security of modern",
    "start": "1953399",
    "end": "1959880"
  },
  {
    "text": "clients and so the question that we wanted to answer when we first started looking at sslv2 was is L sslv2 just",
    "start": "1959880",
    "end": "1966000"
  },
  {
    "text": "like a harmless vestigal organ left over or is it actually harmful to Modern",
    "start": "1966000",
    "end": "1971440"
  },
  {
    "text": "clients and so the first to answer that the first question was does anyone support sslv2 anymore and the answer was",
    "start": "1971440",
    "end": "1978080"
  },
  {
    "text": "a surprisingly large number of people do so this graph here um is a CDF of the",
    "start": "1978080",
    "end": "1983600"
  },
  {
    "text": "top 1 million domains and the percentage that supp of the top n that support TLS",
    "start": "1983600",
    "end": "1989039"
  },
  {
    "text": "and the percentage of the top n that support sslv2 so you can see that all of the top 10 support TLS that's like",
    "start": "1989039",
    "end": "1994840"
  },
  {
    "text": "Google Facebook LinkedIn um but down at the bottom the",
    "start": "1994840",
    "end": "1999919"
  },
  {
    "text": "blue curve the sslv2 curve you can see that there's a peak um that's at site ranked number 16 which is weebo the",
    "start": "1999919",
    "end": "2006240"
  },
  {
    "text": "Chinese version of Twitter um it supported sslv2 after that not a whole lot but once you get down into some",
    "start": "2006240",
    "end": "2011960"
  },
  {
    "text": "lower rank sites you see that somewhere around uh I think 12 or 17% of the top 1",
    "start": "2011960",
    "end": "2017919"
  },
  {
    "text": "million sites supported sslv2 and that to us was enough of an like indicator",
    "start": "2017919",
    "end": "2023000"
  },
  {
    "text": "that we should look at this more because people actually are supporting sslv2 and in fact if you go and look at",
    "start": "2023000",
    "end": "2028880"
  },
  {
    "text": "it outside of https while about uh let's see here 177% of htps servers supported",
    "start": "2028880",
    "end": "2036399"
  },
  {
    "text": "sslv2 20 8% of male servers of SMTP servers supported sslv2 which was really",
    "start": "2036399",
    "end": "2041559"
  },
  {
    "text": "weird we couldn't figure out why support was this high but then it turns out that as often it does uh there's another bug",
    "start": "2041559",
    "end": "2048800"
  },
  {
    "text": "in op SSL so there's this old backwards compatibility handshake for when you're",
    "start": "2048800",
    "end": "2055118"
  },
  {
    "text": "switching from sslv2 to sslv3 or you can upgrade a V2 handshake to",
    "start": "2055119",
    "end": "2060520"
  },
  {
    "text": "V3 um and so what lots of mail servers and web servers had done was that in their default Cipher uh default uh op",
    "start": "2060520",
    "end": "2067200"
  },
  {
    "text": "SSL fig that gets shipped out of the box with the web server they didn't disable sslv2 they disabled every single sslv2",
    "start": "2067200",
    "end": "2074679"
  },
  {
    "text": "Cipher of which there only six I think two of them were export compliant and four of them were other",
    "start": "2074679",
    "end": "2080079"
  },
  {
    "text": "ciphers they disabled all those ciphers but they left sslv2 enabled so that they could still support these upgrade",
    "start": "2080079",
    "end": "2086158"
  },
  {
    "text": "handshakes from two to three however there is a bug in the in op ssls implementation where a",
    "start": "2086159",
    "end": "2092960"
  },
  {
    "text": "sufficiently motivated client that really wanted to negotiate sslv2 could ignore what the server said and just",
    "start": "2092960",
    "end": "2098560"
  },
  {
    "text": "pick a random Cipher and negotiate sslv2 so no one noticed this because the open SSL client um behaved nicely in would",
    "start": "2098560",
    "end": "2105720"
  },
  {
    "text": "fail when you tried to do V2 with these servers um but a a aggressive client or",
    "start": "2105720",
    "end": "2111480"
  },
  {
    "text": "a scanner that was written really quickly and didn't fully read the RFC um well that just randomly picked a cipher",
    "start": "2111480",
    "end": "2117200"
  },
  {
    "text": "if the server didn't give one uh would also negotiate it which is how we saw so manyy of these and in fact uh some other",
    "start": "2117200",
    "end": "2123119"
  },
  {
    "text": "folks over in Germany um nimr aam and and Sebastian schisel had support",
    "start": "2123119",
    "end": "2129720"
  },
  {
    "text": "reported this to open SSL around the time that I was looking so that Cipher",
    "start": "2129720",
    "end": "2135119"
  },
  {
    "text": "seat selection bug was patched in January of 2016 which brings us to",
    "start": "2135119",
    "end": "2141359"
  },
  {
    "text": "drown so I'm going to gloss over a lot of the crypto details here but if you're",
    "start": "2141440",
    "end": "2147079"
  },
  {
    "text": "interested the technical term for drown is that is is a cross protocol black and Boer padding Oracle attack which",
    "start": "2147079",
    "end": "2152400"
  },
  {
    "text": "effectively means that using the export ciphers that are available in sslv2 and",
    "start": "2152400",
    "end": "2158200"
  },
  {
    "text": "the way that the RSA encryption is handled in those you can use that to attack a TLS connection and this is a",
    "start": "2158200",
    "end": "2165319"
  },
  {
    "text": "little bit complicated because the crypto that's used in sslv2 the lengths of the secrets and the way that it's",
    "start": "2165319",
    "end": "2170599"
  },
  {
    "text": "encrypted uh isn't formatted correctly for TLS so you have to play some crypto tricks to change the sslv2 crypto to",
    "start": "2170599",
    "end": "2176960"
  },
  {
    "text": "look like TLS crypto but effectively if you capture some TLS handshakes and",
    "start": "2176960",
    "end": "2183040"
  },
  {
    "text": "these the handshakes are done with a server that has a key that the key that the server is using for TLS is also used",
    "start": "2183040",
    "end": "2188880"
  },
  {
    "text": "for sslv2 either on that server as well or on a mail server somewhere else that's using the same key and",
    "start": "2188880",
    "end": "2195160"
  },
  {
    "text": "certificate um you can capture those Cipher Texs off the wire and then retroactively decrypt them for about",
    "start": "2195160",
    "end": "2201960"
  },
  {
    "text": "$400 on ec2 which is kind of expensive but also kind of cool if you're a crypto",
    "start": "2201960",
    "end": "2208359"
  },
  {
    "text": "nerd and the one of the big cool things about drown that's makes it a little bit different is that this cross protocol",
    "start": "2208359",
    "end": "2215599"
  },
  {
    "text": "thing works that you can use your SM TP server to attack uh you can use someone's SMTP server to attack their",
    "start": "2215599",
    "end": "2222280"
  },
  {
    "text": "their web server um because if you're assist admin you're probably thinking a lot more about your web server that's",
    "start": "2222280",
    "end": "2227760"
  },
  {
    "text": "running your production website than you are thinking about that random smt serp server that you spun up in order to like",
    "start": "2227760",
    "end": "2233440"
  },
  {
    "text": "send monitoring emails or whatever about your site I know I did and so if you look at the sort of",
    "start": "2233440",
    "end": "2239960"
  },
  {
    "text": "key reuse where um only 177% of https servers supported sslv2 but if you went",
    "start": "2239960",
    "end": "2245680"
  },
  {
    "text": "and tried to find keys on other protocols that raises vulnerability of drown from 17% to 33% so we're back at",
    "start": "2245680",
    "end": "2252520"
  },
  {
    "text": "about 1/3 of the internet being vulnerable to another export related",
    "start": "2252520",
    "end": "2257640"
  },
  {
    "text": "attack um and the these full numbers are available on drown attack.com",
    "start": "2257640",
    "end": "2264240"
  },
  {
    "text": "and unlike uh freak and log Jam the initial patching was a lot slower uh",
    "start": "2265280",
    "end": "2271119"
  },
  {
    "text": "likely because drown is is a bit more complicated it's a little harder to explain um I don't I just explain it",
    "start": "2271119",
    "end": "2276880"
  },
  {
    "text": "right now and I'm already disappointed with my explanation um it's sort of a complicated thing and it's cross",
    "start": "2276880",
    "end": "2282359"
  },
  {
    "text": "protocol and you have to really know what's on your network to be able to fully patch so it's possible some people",
    "start": "2282359",
    "end": "2288000"
  },
  {
    "text": "went and patched and turned off sslv2 on their https server but totally missed the fact that it was enabled on their",
    "start": "2288000",
    "end": "2293040"
  },
  {
    "text": "mail server and the fact that the open SSL client won't even negotiate sslv2 with",
    "start": "2293040",
    "end": "2298839"
  },
  {
    "text": "these servers makes it even harder to detect because you can't detect support for it with outof the boox",
    "start": "2298839",
    "end": "2304720"
  },
  {
    "text": "tools um so that brings us to special drown um everything I described so far",
    "start": "2304720",
    "end": "2311040"
  },
  {
    "text": "the sort of offline attack where you monitor some some connections you save them and then you use the sslv2 CER as",
    "start": "2311040",
    "end": "2317920"
  },
  {
    "text": "an oracle to decrypt them after effect is the variant of drown called General drown and it costs $400 every time you",
    "start": "2317920",
    "end": "2323520"
  },
  {
    "text": "want to do it special drown is a variant of it that leverages",
    "start": "2323520",
    "end": "2329119"
  },
  {
    "text": "an implementation bug that was accidentally patched in March of 2015 people didn't realize that the bug",
    "start": "2329119",
    "end": "2334800"
  },
  {
    "text": "existed there other code changes happen to remove it an open SSL that removes the $400 cost it basically lets you do",
    "start": "2334800",
    "end": "2341960"
  },
  {
    "text": "it on a laptop in about a minute instead of on a bunch of gpus on ec2 um and so if you go and you probe",
    "start": "2341960",
    "end": "2350560"
  },
  {
    "text": "servers to see if they are patched or not you can do this by sending a specially formatted sslv2 hello um",
    "start": "2350560",
    "end": "2356359"
  },
  {
    "text": "you'll see that not as many as general drown but a decent number uh around uh",
    "start": "2356359",
    "end": "2362280"
  },
  {
    "text": "9% of the top 1 million and in mid 20% of of trusted hdps we're vulnerable to",
    "start": "2362280",
    "end": "2368200"
  },
  {
    "text": "the man-in-the-middle variant special drown of of drown and this not only is this attack cheaper but you can do this",
    "start": "2368200",
    "end": "2374640"
  },
  {
    "text": "way more often because uh it it runs faster you don't even need to find a site that otherwise would be using",
    "start": "2374640",
    "end": "2380359"
  },
  {
    "text": "export RSA like in practice General drown is very difficult to to to pull",
    "start": "2380359",
    "end": "2386040"
  },
  {
    "text": "off special drown once you've made it throughout the crypto is actually not that hard you can do it on a normal",
    "start": "2386040",
    "end": "2391599"
  },
  {
    "text": "laptop you don't need a bunch of special conditions you just need to write lots and lots of of of sort of padding Oracle",
    "start": "2391599",
    "end": "2400079"
  },
  {
    "text": "code so and if if you're interested in the details of of special drown or general drown come find me after the",
    "start": "2400079",
    "end": "2406480"
  },
  {
    "text": "talk I will do my best to answer your questions or I will direct you to drown attack.com in our paper uh we rewrote",
    "start": "2406480",
    "end": "2412839"
  },
  {
    "text": "the whole paper uh uh about a month ago um and so I think it's uh it should be",
    "start": "2412839",
    "end": "2418319"
  },
  {
    "text": "easier to read now if you ever attempted reading it before um and maybe and it didn't make sense uh sorry it should be",
    "start": "2418319",
    "end": "2425000"
  },
  {
    "text": "clear now um but in terms of mitigations and lessons",
    "start": "2425000",
    "end": "2430720"
  },
  {
    "text": "uh from drown uh obviously you need to fully disable sslv 2 don't just disable the ciphers um and this is really I",
    "start": "2430720",
    "end": "2438839"
  },
  {
    "text": "think the the nail in the coffin for a leaving old old crypto",
    "start": "2438839",
    "end": "2445760"
  },
  {
    "text": "online for backwards compatibility we just keep finding ways that it is harming modern clients um so stop leaving old things",
    "start": "2445760",
    "end": "2453240"
  },
  {
    "text": "enabled for backwards compatibility um other sort of interesting takeaway that you might get from drown is that you're",
    "start": "2453240",
    "end": "2460200"
  },
  {
    "text": "not vul going to be vulnerable to drown if your mail server supports sslv2 as and your website doesn't if",
    "start": "2460200",
    "end": "2466079"
  },
  {
    "text": "they're using different keys so it might be prudent to in fact use different keys for different protocols or different",
    "start": "2466079",
    "end": "2471119"
  },
  {
    "text": "protocol versions um uh in the same way that we talk about using different keys for signatures and",
    "start": "2471119",
    "end": "2479000"
  },
  {
    "text": "encryption and then uh from a crypto standpoint uh what prevents this in newer versions of TLS is that the client",
    "start": "2479000",
    "end": "2485160"
  },
  {
    "text": "is authenticated before the server send secret derived data effectively that would make anything an online attack",
    "start": "2485160",
    "end": "2491319"
  },
  {
    "text": "instead of an offline attack um and so this is why modern versions of TLS aren't",
    "start": "2491319",
    "end": "2496680"
  },
  {
    "text": "vulnerable just a couple more uh sort of broad uh implications and lessons that I'd like to take away from these three",
    "start": "2496680",
    "end": "2502599"
  },
  {
    "text": "attacks the the first ones have to deal with a protocol design and Technology",
    "start": "2502599",
    "end": "2508119"
  },
  {
    "text": "standpoint um obsolete cryptography needs to be considered harmful uh in the same way that anything else that is",
    "start": "2508119",
    "end": "2514440"
  },
  {
    "text": "considered harmful is considered harmful um it's it's not just something that you're leaving online uh for backwards",
    "start": "2514440",
    "end": "2520200"
  },
  {
    "text": "compatibility every time that you leave sslv2 enabled um you're hurting the the",
    "start": "2520200",
    "end": "2525920"
  },
  {
    "text": "modern clients the people who are keeping up to dat um from a protocol design standpoint limiting complexity is",
    "start": "2525920",
    "end": "2533240"
  },
  {
    "text": "is really key uh a lot of these things weren't noticed simply because of how complex either the the code in op SSL",
    "start": "2533240",
    "end": "2540520"
  },
  {
    "text": "had to be just to implement TLS cuz TLS itself is very complicated um and from",
    "start": "2540520",
    "end": "2546000"
  },
  {
    "text": "the the separate State machine for export and non-export putting these together is just a recipe for complexity",
    "start": "2546000",
    "end": "2551839"
  },
  {
    "text": "and complexity is always the enemy of the secure when it comes to cryptography um and the other that I",
    "start": "2551839",
    "end": "2561040"
  },
  {
    "text": "would don't really think I would have to iterate this but I want to really make this point which is that weaken cryptography these export regulations",
    "start": "2561040",
    "end": "2567280"
  },
  {
    "text": "should be considered harmful not just from a perhaps legal standpoint and the way that they argued in the court case",
    "start": "2567280",
    "end": "2572680"
  },
  {
    "text": "in the '90s but from a security standpoint we just hit every form of export weakened cryptography um and used",
    "start": "2572680",
    "end": "2580079"
  },
  {
    "text": "it to attack modern clients in one way or another we hit the weakened RSA with freak we hit weakened Diffy Helman with Log Jam and we hit weaken symmetric",
    "start": "2580079",
    "end": "2586599"
  },
  {
    "text": "ciphers with drown the we we we nailed the trifecta um there there's not a",
    "start": "2586599",
    "end": "2592040"
  },
  {
    "text": "version of export cryptography that hasn't been used to attack modern clients",
    "start": "2592040",
    "end": "2597240"
  },
  {
    "text": "now from a policy standpoint um keep in mind that that crypto",
    "start": "2597240",
    "end": "2603559"
  },
  {
    "text": "regulations leave lasting effects that the these regulations were overturned in the 90s but were just",
    "start": "2603559",
    "end": "2609839"
  },
  {
    "text": "discovering these attacks uh nearly 20 years later um and that there there's this",
    "start": "2609839",
    "end": "2615880"
  },
  {
    "text": "concept the the concept that you could have different encryption for us and non- US citizens just doesn't make sense",
    "start": "2615880",
    "end": "2621000"
  },
  {
    "text": "on the internet even if you just connect to Facebook your traffic might even be going outside of the US and back in because of the way CDN and and networks",
    "start": "2621000",
    "end": "2628640"
  },
  {
    "text": "work it's it's not really possible to assign cryptography based on",
    "start": "2628640",
    "end": "2634359"
  },
  {
    "text": "nationality and so the tech logical while weakening cryptography in the way",
    "start": "2634800",
    "end": "2640040"
  },
  {
    "text": "that these regulations did is not the same as lawful access and what is being proposed uh or or the going dark problem",
    "start": "2640040",
    "end": "2646920"
  },
  {
    "text": "and things that have been proposed recently it's the closest that we've seen to it actually happening in practice and the technological evidence",
    "start": "2646920",
    "end": "2652720"
  },
  {
    "text": "for this suggests that any form of weakening any form of of lawful access any form of enabling someone who is not",
    "start": "2652720",
    "end": "2660119"
  },
  {
    "text": "either the client not on one end of the the connection to have some access to an",
    "start": "2660119",
    "end": "2665640"
  },
  {
    "text": "encrypted channel is a recipe for disaster so with that um I think we have",
    "start": "2665640",
    "end": "2672000"
  },
  {
    "text": "about five or six minutes left for questions um once again I'm David Adrien uh University of Michigan all the",
    "start": "2672000",
    "end": "2678359"
  },
  {
    "text": "attacks that I described are of uh are described online as well as the papers at those websites um hit me up on",
    "start": "2678359",
    "end": "2685359"
  },
  {
    "text": "Twitter contact me um thank you for attending and for getting up early and for coming out here",
    "start": "2685359",
    "end": "2692680"
  },
  {
    "text": "uh question with re question with regard to the short Keys did you see any instances where the key was not",
    "start": "2698359",
    "end": "2705280"
  },
  {
    "text": "dynamically generated and in fact it was a reusable static key uh for R for freak RSA the the the",
    "start": "2705280",
    "end": "2715160"
  },
  {
    "text": "the short keys they were reused um we didn't see any that were hardcoded into",
    "start": "2715160",
    "end": "2721359"
  },
  {
    "text": "a server implementation but pretty much every server that supported it would generate them at the time they were launched and then they would remain used",
    "start": "2721359",
    "end": "2728280"
  },
  {
    "text": "until the process was killed likely when the server was rebooted so months at a",
    "start": "2728280",
    "end": "2734359"
  },
  {
    "text": "time anyone else I have a quick question I I noted that you had mentioned the use of",
    "start": "2740079",
    "end": "2746079"
  },
  {
    "text": "elliptical curve but n say recently decided to move away from elliptical curve in their sweet PE protocols did",
    "start": "2746079",
    "end": "2752240"
  },
  {
    "text": "you uh did that come up in your discussions um so they moved away the the I assume you're talking about the",
    "start": "2752240",
    "end": "2758040"
  },
  {
    "text": "updated sweet B recommendations Forst B red out all elliptical uh they did not remove all of them they removed p256 but",
    "start": "2758040",
    "end": "2765280"
  },
  {
    "text": "they left a p520 whatever the other one is um and",
    "start": "2765280",
    "end": "2771359"
  },
  {
    "text": "suggested what they did suggest was that people who haven't bothered to move to elliptic curves yet um should just not",
    "start": "2771359",
    "end": "2778319"
  },
  {
    "text": "bother because we expect a new cryptography will be coming down in the future um elliptic curves are still the",
    "start": "2778319",
    "end": "2783559"
  },
  {
    "text": "best that we have um and if you don't like the NY curves there's bun lots of crypto from djb that's making its way",
    "start": "2783559",
    "end": "2789160"
  },
  {
    "text": "into TLS right now such as curve 25519 um that uh are also sort of",
    "start": "2789160",
    "end": "2795480"
  },
  {
    "text": "state-ofthe-art for what we have now um but these won't be Quantum resistant but we don't have a good Quantum resistant solution",
    "start": "2795480",
    "end": "2802838"
  },
  {
    "text": "yet H in your analysis of with in your",
    "start": "2804240",
    "end": "2810000"
  },
  {
    "text": "analysis of weak implementations on the public internet did you see a",
    "start": "2810000",
    "end": "2816000"
  },
  {
    "text": "significant portion of the weakness in um for lack of a better term s service",
    "start": "2816000",
    "end": "2824200"
  },
  {
    "text": "providers such as content delivery Network or uh I or isps that do reverse",
    "start": "2824200",
    "end": "2833079"
  },
  {
    "text": "proxying and would that have would that potentially have uh impacted large",
    "start": "2833079",
    "end": "2840400"
  },
  {
    "text": "numbers of principles in a way that was outside of the principles control uh we",
    "start": "2840400",
    "end": "2847119"
  },
  {
    "text": "saw a little bit of that we didn't do sort of a deep analysis into who was vulnerable",
    "start": "2847119",
    "end": "2852400"
  },
  {
    "text": "um I believe that for a while on like some servers I think aami might have supported RSA export I'm not sure um but",
    "start": "2852400",
    "end": "2860599"
  },
  {
    "text": "for example on drown we saw there was a ISP in Europe where they had given a",
    "start": "2860599",
    "end": "2868000"
  },
  {
    "text": "valid certificate to every user I think for like remote access and whatever software they were using for that was",
    "start": "2868000",
    "end": "2873359"
  },
  {
    "text": "vulnerable to drown um there's been a couple hosting providers I think not",
    "start": "2873359",
    "end": "2878640"
  },
  {
    "text": "really major cdns but uh a hosting provider uh I can't think of the names",
    "start": "2878640",
    "end": "2883960"
  },
  {
    "text": "off the top of my head that were uh vulnerable to either freak or Log Jam or",
    "start": "2883960",
    "end": "2889240"
  },
  {
    "text": "drown um but I I don't have a good answer for you um some of it sure uh I",
    "start": "2889240",
    "end": "2895119"
  },
  {
    "text": "didn't do the a detailed analysis though sorry what are your thoughts in terms of",
    "start": "2895119",
    "end": "2902760"
  },
  {
    "text": "uh I guess backward compatibility for whether it's old installation Java or",
    "start": "2902760",
    "end": "2908000"
  },
  {
    "text": "iot device or old mobile phones I mean one of the challenges with where you",
    "start": "2908000",
    "end": "2913319"
  },
  {
    "text": "have a browser that you can update it becomes a easy challenge but when a third of the traffic or that we're",
    "start": "2913319",
    "end": "2919760"
  },
  {
    "text": "getting is still what I would consider obsolete equipment and we don't we don't",
    "start": "2919760",
    "end": "2925319"
  },
  {
    "text": "control that and we can't update it what do we do then well there's there's Obsolete and there's obsolete uh none uh",
    "start": "2925319",
    "end": "2932000"
  },
  {
    "text": "while all older versions of Java for example don't support elliptic curves you certainly don't need sslv2 or any of",
    "start": "2932000",
    "end": "2939280"
  },
  {
    "text": "the export ciphers to talk to them a lot of them are just stuck on like TLS version one or version 1.1 speaking just",
    "start": "2939280",
    "end": "2946119"
  },
  {
    "text": "like older CBC ciphers which people are starting to talk about like we have better than that there are things that",
    "start": "2946119",
    "end": "2951400"
  },
  {
    "text": "are better than that but as far as we know that that's not nearly the same harm that uh the export ciphers were",
    "start": "2951400",
    "end": "2958680"
  },
  {
    "text": "causing that being said I would like to think that what we saw here is sort of an impetus for trying to solve this",
    "start": "2958680",
    "end": "2964400"
  },
  {
    "text": "problem more broadly for harassing people to upate for calling people out for not updating for at some point just",
    "start": "2964400",
    "end": "2970200"
  },
  {
    "text": "being like you know what it's not worth it to support these and I recognize that not everyone can um but I do know that",
    "start": "2970200",
    "end": "2975359"
  },
  {
    "text": "there's been a bit more of a trend among uh some people to stop maintaining so much your backward compatibility and",
    "start": "2975359",
    "end": "2981000"
  },
  {
    "text": "just be like you go and get a newer version but that's not always possible for",
    "start": "2981000",
    "end": "2986520"
  },
  {
    "text": "everybody one more we're go the hallway okay can I ask to what extent do you think we're done hearing about TLS",
    "start": "2986520",
    "end": "2992920"
  },
  {
    "text": "vulnerabilities I mean next year are we going to hear about another three major weaknesses is or or is this is this",
    "start": "2992920",
    "end": "3000040"
  },
  {
    "text": "thing finally hardened um I don't I don't know but I",
    "start": "3000040",
    "end": "3005160"
  },
  {
    "text": "do know that ver TLS version 1.3 which is currently being standardized um has",
    "start": "3005160",
    "end": "3010960"
  },
  {
    "text": "had uh the folks at inria people who have been finding VES in current versions of TLS have been working with",
    "start": "3010960",
    "end": "3016760"
  },
  {
    "text": "the the standardizer have been doing formal analysis and people have a much better understanding of what works and",
    "start": "3016760",
    "end": "3022440"
  },
  {
    "text": "what doesn't now and there's a lot of smart people um working on TLS 13 so I have a lot of faith that as TLS 13",
    "start": "3022440",
    "end": "3029160"
  },
  {
    "text": "finishes up um it will be much better than what we have now but I I can't",
    "start": "3029160",
    "end": "3034359"
  },
  {
    "text": "Envision the future so my question was I think uh very related",
    "start": "3034359",
    "end": "3040400"
  },
  {
    "text": "to just yeah sure thank you",
    "start": "3040400",
    "end": "3046119"
  }
]