[
  {
    "text": "welcome to the South Seas AB room where you're going to be hearing a talk on a thousand ways to die in Mobile OA",
    "start": "120",
    "end": "7240"
  },
  {
    "text": "presented by Yuan Yong and Eric before we begin uh a couple quick",
    "start": "7240",
    "end": "12679"
  },
  {
    "text": "notes in the business Hall in Bayside AB that's the big vendor room all kinds of great things to come and see there",
    "start": "12679",
    "end": "18560"
  },
  {
    "text": "terrific vendors there'll also be a welcome reception from 5:30 until 7",
    "start": "18560",
    "end": "24199"
  },
  {
    "text": "tonight the black hat Arsenal is on in the Palm foyer on level three that's",
    "start": "24199",
    "end": "29560"
  },
  {
    "text": "just the corner from here I believe and also the pony awards are happening tonight in the manderlay bay BCD room I",
    "start": "29560",
    "end": "36760"
  },
  {
    "text": "think that's just the next one over uh at 6:30 tonight and also thanks to",
    "start": "36760",
    "end": "41920"
  },
  {
    "text": "everybody for putting your phones on vibrate so we don't interrupt the talk and that's it so please go",
    "start": "41920",
    "end": "48120"
  },
  {
    "text": "ahead hello okay so hi everyone this is uh you",
    "start": "48120",
    "end": "54680"
  },
  {
    "text": "uh we're going to bring you today is like 1,000 way to die in Mobile alls so",
    "start": "54680",
    "end": "61039"
  },
  {
    "text": "uh sitting on my left side is Yan and uh uh on my right is Eric uh sure who is",
    "start": "61039",
    "end": "68560"
  },
  {
    "text": "like sitting in the audience seat is over also here today uh Robert and uh Patrick are now with us uh today um me",
    "start": "68560",
    "end": "77759"
  },
  {
    "text": "and J going to be the uh major speaker uh for this talk and uh okay so we're",
    "start": "77759",
    "end": "83720"
  },
  {
    "text": "going to to start uh to share with you like how we broke a lot of oil stuff so",
    "start": "83720",
    "end": "89920"
  },
  {
    "text": "we know this is a back hat so we don't want to like save all the goodies in the like very end and we going to show you",
    "start": "89920",
    "end": "97040"
  },
  {
    "text": "guys the all this demos like right now uh okay cool uh so the first one is",
    "start": "97040",
    "end": "105640"
  },
  {
    "text": "actually how we like break uh authentication in Instagram uh we have this uh we found this bability in",
    "start": "105640",
    "end": "113280"
  },
  {
    "text": "Instagram like two two years ago and they already fix it so uh like for the demo we use a different app like wish is",
    "start": "113280",
    "end": "120159"
  },
  {
    "text": "also a very popular app in uh like mobile app for shopping uh it's like top",
    "start": "120159",
    "end": "125880"
  },
  {
    "text": "in the Android App Store and uh this attack is still not fixed in wish right",
    "start": "125880",
    "end": "133879"
  },
  {
    "text": "now so um you can see attacker can log in to uh",
    "start": "133879",
    "end": "142200"
  },
  {
    "text": "wish using attacker",
    "start": "142200",
    "end": "146560"
  },
  {
    "text": "and this is like attackers",
    "start": "152280",
    "end": "155840"
  },
  {
    "text": "account so like uh terer create another app which is like malicious it gains a a",
    "start": "162920",
    "end": "169040"
  },
  {
    "text": "user legitimate user like victim Bob's uh Facebook ACC token when like with B",
    "start": "169040",
    "end": "174360"
  },
  {
    "text": "logins like uh attackers malicious are come like attacker can get this uh",
    "start": "174360",
    "end": "180640"
  },
  {
    "text": "uh a token from",
    "start": "180640",
    "end": "183879"
  },
  {
    "text": "B yeah what ATT does here is attacker still log in into wish with attacker's",
    "start": "188239",
    "end": "194480"
  },
  {
    "text": "own Facebook account like same credential but uh when attacker click on",
    "start": "194480",
    "end": "201680"
  },
  {
    "text": "okay it actually attacker intercept the request uh come come back from Facebook",
    "start": "201680",
    "end": "207720"
  },
  {
    "text": "uh attacker exchange the access token which to the attacker uh to Bob's X",
    "start": "207720",
    "end": "214400"
  },
  {
    "text": "token like that's happen in the background and now attor actually log",
    "start": "214400",
    "end": "219799"
  },
  {
    "text": "into Bob s",
    "start": "219799",
    "end": "223000"
  },
  {
    "text": "account uh that's first demo uh second demo is",
    "start": "225080",
    "end": "230159"
  },
  {
    "text": "uh so wait like if you use alls before you all know there is a permission page",
    "start": "230159",
    "end": "235360"
  },
  {
    "text": "which is a consent page and we found like a like tenson which is like very",
    "start": "235360",
    "end": "240439"
  },
  {
    "text": "very famous uh uh provider in uh China like in their mobile flow they don't",
    "start": "240439",
    "end": "245720"
  },
  {
    "text": "have this conent page so here we show like this uh users's account management page it indicate like this user has not",
    "start": "245720",
    "end": "252319"
  },
  {
    "text": "authorized any permission like any app at",
    "start": "252319",
    "end": "256680"
  },
  {
    "text": "all so but when user trying to login uh application with their tens account",
    "start": "261960",
    "end": "270840"
  },
  {
    "text": "like after enter their uh uh the",
    "start": "272520",
    "end": "277319"
  },
  {
    "text": "credential yeah the user are actually directly loging there is no consent page even though like there uh uh user never",
    "start": "283280",
    "end": "290000"
  },
  {
    "text": "authorized this app ever before and uh this like open like you can like",
    "start": "290000",
    "end": "295720"
  },
  {
    "text": "basically the app can ask any permission they want like all the permission they can have from tenson and like without",
    "start": "295720",
    "end": "302880"
  },
  {
    "text": "notify the user so the user won't know and without like the the conent and like the app can get every permission and",
    "start": "302880",
    "end": "310160"
  },
  {
    "text": "what is interesting is like actually like for their for tenson the mobile app so full mobile version they do have a",
    "start": "310160",
    "end": "316199"
  },
  {
    "text": "conent p but for the for the mobile they",
    "start": "316199",
    "end": "321280"
  },
  {
    "text": "don't we have learned how the attackers can log to the benai users account now",
    "start": "324240",
    "end": "330280"
  },
  {
    "text": "let's see how B user can be checked into log to a attacker account here we",
    "start": "330280",
    "end": "337160"
  },
  {
    "text": "present the demo which CHS how uh which use autoc code login with",
    "start": "337160",
    "end": "346120"
  },
  {
    "text": "GitHub so first the teer get into auto code page",
    "start": "346240",
    "end": "351919"
  },
  {
    "text": "and click login with GitHub the attacker will input his",
    "start": "351919",
    "end": "357759"
  },
  {
    "text": "username and password for GitHub so that he will get",
    "start": "357759",
    "end": "362800"
  },
  {
    "text": "authorization token from GitHub this token is similar as a session",
    "start": "362800",
    "end": "368880"
  },
  {
    "text": "token but instead of continuing to log in the attacker save this code and",
    "start": "368880",
    "end": "375800"
  },
  {
    "text": "actually inite the code into a malicious",
    "start": "375800",
    "end": "380280"
  },
  {
    "text": "link then when the B user is checked to click on the",
    "start": "382319",
    "end": "388560"
  },
  {
    "text": "link the B user is sending a request including the code which point to",
    "start": "388560",
    "end": "394080"
  },
  {
    "text": "attacker's account because auto code don't check",
    "start": "394080",
    "end": "400440"
  },
  {
    "text": "who is this user they will just use authorization code to represent which",
    "start": "400440",
    "end": "405680"
  },
  {
    "text": "user it is so then B users log to attacker's",
    "start": "405680",
    "end": "411120"
  },
  {
    "text": "account this attack could have very severe consequence it's very it's a",
    "start": "411120",
    "end": "417000"
  },
  {
    "text": "standard login CSF attack so if this app is associated with standing",
    "start": "417000",
    "end": "423280"
  },
  {
    "text": "payment options for example the B user might just add their bank account into",
    "start": "423280",
    "end": "429440"
  },
  {
    "text": "the app and lost money the last demo we're going to show",
    "start": "429440",
    "end": "435599"
  },
  {
    "text": "is how we break into Facebook",
    "start": "435599",
    "end": "439759"
  },
  {
    "text": "authentication so here we have one attacker",
    "start": "444280",
    "end": "450280"
  },
  {
    "text": "which follow all Facebook alls flow timul so the attacker Implement Facebook",
    "start": "450280",
    "end": "459280"
  },
  {
    "text": "or inside the web view then the attacker will be able to",
    "start": "459280",
    "end": "465680"
  },
  {
    "text": "get the teer will be able to get the cookie from Facebook we'll talk about",
    "start": "465680",
    "end": "471440"
  },
  {
    "text": "more details about this but remember that getting cookies from web view is a",
    "start": "471440",
    "end": "476879"
  },
  {
    "text": "feature supported by Android and iOS and this feature have lots of legitimate",
    "start": "476879",
    "end": "482039"
  },
  {
    "text": "usages that's why it's not so easy to fix this problem so we have said after you the",
    "start": "482039",
    "end": "488479"
  },
  {
    "text": "login with Facebook the attacker the militias app which Ed web view will be",
    "start": "488479",
    "end": "494159"
  },
  {
    "text": "able to get the long-term cookie from Facebook you can see like these are the",
    "start": "494159",
    "end": "500440"
  },
  {
    "text": "cookies that Facebook using it's a longtime cookie so it will stay alive for a long",
    "start": "500440",
    "end": "507840"
  },
  {
    "text": "time after getting in the cookie the attacker can just set the",
    "start": "507840",
    "end": "513360"
  },
  {
    "text": "cookie and apply the cookie to log to user's Facebook",
    "start": "513360",
    "end": "519120"
  },
  {
    "text": "account now all the information and the whole account is in the control of the",
    "start": "519120",
    "end": "528120"
  },
  {
    "text": "terer these four demos are just the tip of",
    "start": "529760",
    "end": "535160"
  },
  {
    "text": "asberg in fact the problem with ol is a very PR Bic problem in 2014 we have",
    "start": "535160",
    "end": "543160"
  },
  {
    "text": "started the O usage we found that 60% of",
    "start": "543160",
    "end": "548720"
  },
  {
    "text": "200 Android and iOS oros applications are implemented",
    "start": "548720",
    "end": "555640"
  },
  {
    "text": "incorrectly Facebook Twitter Evernote Pinterest Instagram this is just a few",
    "start": "556040",
    "end": "562399"
  },
  {
    "text": "victims that could suffer from this attacks we have a really long list to",
    "start": "562399",
    "end": "568360"
  },
  {
    "text": "go now after 2 years when we look back at these problems we found that these",
    "start": "568360",
    "end": "573920"
  },
  {
    "text": "problems are not fixed and there are more new attacks with",
    "start": "573920",
    "end": "581440"
  },
  {
    "text": "oos and you might wonder how bad are these attacks like you have seen some",
    "start": "582800",
    "end": "588839"
  },
  {
    "text": "already seen some flavor in the demo that these attacks have very severe",
    "start": "588839",
    "end": "595680"
  },
  {
    "text": "consequences the attacker can impersonate a legitimate service like",
    "start": "595680",
    "end": "601399"
  },
  {
    "text": "Pinterest attacker will also be able to access all user content inside",
    "start": "601399",
    "end": "607800"
  },
  {
    "text": "Services attackers can steal Facebook cookies attackers can do login",
    "start": "607800",
    "end": "615640"
  },
  {
    "text": "CSF in the worst case attacker can get full account",
    "start": "615640",
    "end": "620680"
  },
  {
    "text": "compromised they can access all the information and control the whole",
    "start": "620680",
    "end": "626360"
  },
  {
    "text": "accounts you might wonder why can't developers use all security",
    "start": "626600",
    "end": "632680"
  },
  {
    "text": "why do they make so many mistakes there are several",
    "start": "632680",
    "end": "638440"
  },
  {
    "text": "reasons and most of the reasons are very pervasive first there's a widely",
    "start": "638440",
    "end": "646000"
  },
  {
    "text": "confusion between authorization and authentication developers misunderstood",
    "start": "646000",
    "end": "651360"
  },
  {
    "text": "the security implication the difference between the two concepts second developers don't know",
    "start": "651360",
    "end": "659519"
  },
  {
    "text": "who to trust they don't know whether to trust the client they don't know how",
    "start": "659519",
    "end": "664720"
  },
  {
    "text": "should they protect their secret information third all spec is really",
    "start": "664720",
    "end": "671920"
  },
  {
    "text": "Broad and confusing for normal average Developers for example I wonder who have",
    "start": "671920",
    "end": "679040"
  },
  {
    "text": "read 71 Pages for o just a for Street model for all",
    "start": "679040",
    "end": "685560"
  },
  {
    "text": "2.0 also since all involve three parties it's very",
    "start": "686120",
    "end": "693040"
  },
  {
    "text": "important for the all the multi parties to collaborate together to build a",
    "start": "693040",
    "end": "698519"
  },
  {
    "text": "secure authentication and authorization finally all spec is",
    "start": "698519",
    "end": "704760"
  },
  {
    "text": "majorly written for web applications not for mobile",
    "start": "704760",
    "end": "711120"
  },
  {
    "text": "apps so in this talk we choose eight vulnerabilities to discuss and share",
    "start": "711839",
    "end": "718399"
  },
  {
    "text": "with with do our understandings about how to do all",
    "start": "718399",
    "end": "723480"
  },
  {
    "text": "security yeah okay so we talk about a lot of stuff like away now we like take",
    "start": "723480",
    "end": "728920"
  },
  {
    "text": "a step back so and talk about more detail like first question is like uh",
    "start": "728920",
    "end": "734480"
  },
  {
    "text": "what is all so like I think a lot of you already use or before and even you",
    "start": "734480",
    "end": "741079"
  },
  {
    "text": "haven't like probably you should do it now because like when you're busy catching all the Camas like you Lo when",
    "start": "741079",
    "end": "746680"
  },
  {
    "text": "you sign up you sign up with all that's like Google account and when you use a lot of like",
    "start": "746680",
    "end": "752399"
  },
  {
    "text": "uh you almost like always see like loging with Facebook so that's oos as",
    "start": "752399",
    "end": "758040"
  },
  {
    "text": "well so oos is actually a protocol for authorization um there are three party",
    "start": "758040",
    "end": "765720"
  },
  {
    "text": "involved in this process uh the first one is end user the user who we also say",
    "start": "765720",
    "end": "771519"
  },
  {
    "text": "it's like resource owner who actually owns the resources and the second one is a service provider who like",
    "start": "771519",
    "end": "779720"
  },
  {
    "text": "who actually store or like controls like users resources where user",
    "start": "779720",
    "end": "785800"
  },
  {
    "text": "has and the third one is Reliant party who want get the resources from the",
    "start": "785800",
    "end": "792000"
  },
  {
    "text": "user so when we say authorization is uh you can think about like like uh user is",
    "start": "792880",
    "end": "799360"
  },
  {
    "text": "a uh resource owner and the service provider is a bank and it it stor all",
    "start": "799360",
    "end": "805560"
  },
  {
    "text": "the resources like user own like user is basically giving the permission which like can think about is a key to the",
    "start": "805560",
    "end": "811440"
  },
  {
    "text": "resources uh to the real party to access behavior of uh user to get the uh",
    "start": "811440",
    "end": "818720"
  },
  {
    "text": "protected resources just think about like Facebook is a bank of all the cat pictures like user",
    "start": "818720",
    "end": "826000"
  },
  {
    "text": "all and uh this is a brief uh history of oos so oos one uh draft came out from",
    "start": "826000",
    "end": "836040"
  },
  {
    "text": "2007 and it take around three years to become standardized and like all two came out",
    "start": "836040",
    "end": "843800"
  },
  {
    "text": "like two years later in 2012 so one always say like to oos 2 like people sometimes think like OS 2 is",
    "start": "843800",
    "end": "850600"
  },
  {
    "text": "like a improved version of os one but basically but like they are actually separate like uh they come with like",
    "start": "850600",
    "end": "857399"
  },
  {
    "text": "separate people made a uh draft and like these are like they are very different",
    "start": "857399",
    "end": "862639"
  },
  {
    "text": "so you our SCH there are in the RFC he officially Define four kind of like",
    "start": "862639",
    "end": "868399"
  },
  {
    "text": "Grand TP uh it's like how how this flow can be uh established uh the first one is implicit",
    "start": "868399",
    "end": "874839"
  },
  {
    "text": "flow gr uh the second one is a c and uh there are resource owner password cral",
    "start": "874839",
    "end": "881720"
  },
  {
    "text": "gr and uh client cral gr so the first two are like for two like are used uh",
    "start": "881720",
    "end": "888800"
  },
  {
    "text": "majority and like we're going to focus on these two gr type or flow uh in this",
    "start": "888800",
    "end": "894279"
  },
  {
    "text": "talk uh so okay um let's start with uh all",
    "start": "894279",
    "end": "901440"
  },
  {
    "text": "one so uh if you are all one developer and you are like registering your",
    "start": "901440",
    "end": "907360"
  },
  {
    "text": "application in or one service proor this is a account like or application setting",
    "start": "907360",
    "end": "913040"
  },
  {
    "text": "page you're going to see so the most important two uh value here are uh the",
    "start": "913040",
    "end": "919639"
  },
  {
    "text": "first one is a consumer key which application key and second one is a consumer secret which also called it",
    "start": "919639",
    "end": "927519"
  },
  {
    "text": "uh API secret so during this flow there are",
    "start": "927519",
    "end": "934639"
  },
  {
    "text": "like as we said before are three participant uh user service provider and R party at very beginning Rel party",
    "start": "934639",
    "end": "941240"
  },
  {
    "text": "going to ask uh to want to uh send a request to service proor to say I want",
    "start": "941240",
    "end": "946560"
  },
  {
    "text": "this is my application ID and I want to access all these kind of resources uh of",
    "start": "946560",
    "end": "952800"
  },
  {
    "text": "this user so this request so the square parenthesis means like the requir",
    "start": "952800",
    "end": "959199"
  },
  {
    "text": "actually is signed by uh the application SQ we talked about before the service",
    "start": "959199",
    "end": "965880"
  },
  {
    "text": "provider going to verify this uh the signature and after that service sent a request token back to the r",
    "start": "965880",
    "end": "973360"
  },
  {
    "text": "party so what uh the re redirect the",
    "start": "973360",
    "end": "979360"
  },
  {
    "text": "request token with redirect callback URL redirect URL to the user and redirect to",
    "start": "979360",
    "end": "986800"
  },
  {
    "text": "the um server party to gain the permissions from the users going to see",
    "start": "986800",
    "end": "992360"
  },
  {
    "text": "this page from the service provider to this it actually basically ask user",
    "start": "992360",
    "end": "998079"
  },
  {
    "text": "whether they want to authorize this uh R party application to access certain",
    "start": "998079",
    "end": "1004839"
  },
  {
    "text": "permission and once on once user click on authorizing this app the uh request token will redirect",
    "start": "1004839",
    "end": "1012959"
  },
  {
    "text": "back to the Callback URL real party provided and then real party can sign",
    "start": "1012959",
    "end": "1018279"
  },
  {
    "text": "sign the signed version of the request token to the service paror service paror going to",
    "start": "1018279",
    "end": "1024520"
  },
  {
    "text": "return back a aess token which is like the real property actually can able to access the protected resources and when",
    "start": "1024520",
    "end": "1031280"
  },
  {
    "text": "Real Property access the resources you need to send the ACC token as",
    "start": "1031280",
    "end": "1037319"
  },
  {
    "text": "well so how to know like uh the reant part is the one user going to permission",
    "start": "1037319",
    "end": "1042880"
  },
  {
    "text": "to how to verify the identity of the r party uh this is very simple in the one",
    "start": "1042880",
    "end": "1049360"
  },
  {
    "text": "model because every uh every time when R party send a a token to the service",
    "start": "1049360",
    "end": "1056039"
  },
  {
    "text": "provider it has to be signed with this secret and the secret is store in real Pary web server so it's only known",
    "start": "1056039",
    "end": "1062480"
  },
  {
    "text": "between uh service provider and Reliant party and now we come to our first",
    "start": "1062480",
    "end": "1069400"
  },
  {
    "text": "vulnerability uh what if what if the secret is now store in Security in a web",
    "start": "1069400",
    "end": "1075600"
  },
  {
    "text": "server in a lot of mobile case like part is actually using a mobile application a",
    "start": "1075600",
    "end": "1081799"
  },
  {
    "text": "mobile client and to like the simple flow and simple work they store the secate uh in the mobile directly and",
    "start": "1081799",
    "end": "1089960"
  },
  {
    "text": "since this uh the step seven uh when they sign a access token it cannot be",
    "start": "1089960",
    "end": "1096039"
  },
  {
    "text": "trust since the secret is in the application so what we did there is we",
    "start": "1096039",
    "end": "1103000"
  },
  {
    "text": "have a pen application and we decompile the application it's not very hard to find the uh or secret since like you can",
    "start": "1103000",
    "end": "1111440"
  },
  {
    "text": "just search secret and this here it's a actual call and once you have the secret you",
    "start": "1111440",
    "end": "1119679"
  },
  {
    "text": "can be pretend to be Pinterest so what's the impact uh malsa",
    "start": "1119679",
    "end": "1127039"
  },
  {
    "text": "app can impersonate legit application and it just broke the all one authorization",
    "start": "1127039",
    "end": "1133080"
  },
  {
    "text": "model so we like when we found this uh issue uh there are like two well known",
    "start": "1133080",
    "end": "1139400"
  },
  {
    "text": "application is impact one is coral one is pinest and they like after we notify",
    "start": "1139400",
    "end": "1144600"
  },
  {
    "text": "this to company and they both revoke their secret immediately and Kora repli",
    "start": "1144600",
    "end": "1151200"
  },
  {
    "text": "to us and they just like at that time they stop uh they make the uh Twitter",
    "start": "1151200",
    "end": "1156520"
  },
  {
    "text": "login nonfunctional and right now when we check uh both application no longer use Twitter login",
    "start": "1156520",
    "end": "1164400"
  },
  {
    "text": "anymore so uh to do it right just don't don't store any secret in the mobile",
    "start": "1164480",
    "end": "1170679"
  },
  {
    "text": "application very simple and like uh after all one and",
    "start": "1170679",
    "end": "1177000"
  },
  {
    "text": "like the author of oos really uh one find some issue and they have a approved version which called OS 1.0a and the",
    "start": "1177000",
    "end": "1185760"
  },
  {
    "text": "what is ADD over there is um is a verifier so this verifier in the step",
    "start": "1185760",
    "end": "1191120"
  },
  {
    "text": "four uh not only the request token but also a verifier going to redirect send back to the r party R party need to sign",
    "start": "1191120",
    "end": "1199520"
  },
  {
    "text": "the verifier with the request token uh and send back to the service providor",
    "start": "1199520",
    "end": "1204840"
  },
  {
    "text": "server providor not only to verify uh the signature and also need to verify the verifier is the same uh is sent to",
    "start": "1204840",
    "end": "1211520"
  },
  {
    "text": "the r party so the verifier only going to be sent to the registered rir that's",
    "start": "1211520",
    "end": "1216679"
  },
  {
    "text": "a uh security model here but we can still uh have our like same similar",
    "start": "1216679",
    "end": "1223919"
  },
  {
    "text": "vality in one 1.0 a as well so this is a",
    "start": "1223919",
    "end": "1229640"
  },
  {
    "text": "vulnerability found in uh iote so uh what we did there is like we first of",
    "start": "1229640",
    "end": "1236159"
  },
  {
    "text": "all similar to last attack we get a local store uh secret from a a Rel party",
    "start": "1236159",
    "end": "1243240"
  },
  {
    "text": "using Evernote and uh at step three we change the Callback URL into a callback URL",
    "start": "1243240",
    "end": "1250400"
  },
  {
    "text": "weight control it's like Evo radio URL and what uh ion note did wrong at that",
    "start": "1250400",
    "end": "1257600"
  },
  {
    "text": "time is ever not uh didn't check the rir URL like whether it's matching the one Reliant party",
    "start": "1257600",
    "end": "1264039"
  },
  {
    "text": "registered whether it's a legitimate R URL it just redirect the re request",
    "start": "1264039",
    "end": "1269320"
  },
  {
    "text": "token and verifier back to what URL is provided so like uh then the attacker",
    "start": "1269320",
    "end": "1275480"
  },
  {
    "text": "gets a verify verifier attacker also has a secret you can make legitimate",
    "start": "1275480",
    "end": "1280559"
  },
  {
    "text": "signature out of the request token and verifier and get a legit access token",
    "start": "1280559",
    "end": "1285600"
  },
  {
    "text": "access uh users resources so uh how to do is right we talk about",
    "start": "1285600",
    "end": "1292320"
  },
  {
    "text": "what party should do now store uh client Security in the mobile application and",
    "start": "1292320",
    "end": "1297440"
  },
  {
    "text": "for uh service provider like register the callback or redirect URL and check",
    "start": "1297440",
    "end": "1302760"
  },
  {
    "text": "whether they match the register one okay we talk about this like 1.0 or",
    "start": "1302760",
    "end": "1310640"
  },
  {
    "text": "1.0a and from developer point of view like what developer should use for alls",
    "start": "1310640",
    "end": "1318120"
  },
  {
    "text": "or for authorization um like based on the flow graph you already seeing like all one is",
    "start": "1318120",
    "end": "1324080"
  },
  {
    "text": "very very complicated there are a lot of redirection there are you allow developer to know cryptography so this",
    "start": "1324080",
    "end": "1331480"
  },
  {
    "text": "is now trivial and the answer to if you want to use all foration the answer is",
    "start": "1331480",
    "end": "1337840"
  },
  {
    "text": "like not use all one and as always said like two there is a very a more",
    "start": "1337840",
    "end": "1343559"
  },
  {
    "text": "simplified version came all after all one which is all two",
    "start": "1343559",
    "end": "1349120"
  },
  {
    "text": "or to solve some problems but or 2 still have many security reliabilities",
    "start": "1349120",
    "end": "1357720"
  },
  {
    "text": "as we have mentioned we will be focusing on the two common flow for o",
    "start": "1357720",
    "end": "1363679"
  },
  {
    "text": "2.0 which is implex Grand flow and authorization code flow these two flows",
    "start": "1363679",
    "end": "1370240"
  },
  {
    "text": "are very different you can just think it as two different versions of oos",
    "start": "1370240",
    "end": "1376880"
  },
  {
    "text": "2.0 so first first let's see how all 2.0 implicit flow",
    "start": "1377000",
    "end": "1383919"
  },
  {
    "text": "works you can see from diagram that the implicit flow is much more simplified",
    "start": "1383919",
    "end": "1390480"
  },
  {
    "text": "than the previous protocol the only critical requirement here is that",
    "start": "1390480",
    "end": "1395880"
  },
  {
    "text": "relyant party must Supply a redirect U to get the exess",
    "start": "1395880",
    "end": "1402720"
  },
  {
    "text": "tokens to summarize there are majorly three difference from previous protocols",
    "start": "1402840",
    "end": "1408159"
  },
  {
    "text": "first there's no ring party secret that's nice developers don't have to worry about how",
    "start": "1408159",
    "end": "1415200"
  },
  {
    "text": "can they protect the secret second there's no signature or",
    "start": "1415200",
    "end": "1421120"
  },
  {
    "text": "encryption so developers don't have to go through the burdens of dealing with",
    "start": "1421120",
    "end": "1426720"
  },
  {
    "text": "this cryptal stuff third implicit floww introduce a",
    "start": "1426720",
    "end": "1433159"
  },
  {
    "text": "concept about barrier token which is that the access token is not not bound",
    "start": "1433159",
    "end": "1439200"
  },
  {
    "text": "to a relying party that is to say anyone who get the",
    "start": "1439200",
    "end": "1445240"
  },
  {
    "text": "access token will be able to access users information on the service",
    "start": "1445240",
    "end": "1451679"
  },
  {
    "text": "provider you can see that the access token is really important for authorization",
    "start": "1451679",
    "end": "1459080"
  },
  {
    "text": "here then here comes the question how can we handle the directions how can we",
    "start": "1459080",
    "end": "1465200"
  },
  {
    "text": "give the access token to the right ring party in the web web world people are",
    "start": "1465200",
    "end": "1473640"
  },
  {
    "text": "using browser redirections so that they can make sure the receiver of the access token should",
    "start": "1473640",
    "end": "1481200"
  },
  {
    "text": "be the same as the one that registered radi but how to do the radio action in",
    "start": "1481200",
    "end": "1489799"
  },
  {
    "text": "the mobile space for example Android has a scheme",
    "start": "1489799",
    "end": "1495120"
  },
  {
    "text": "called intent URI scheme so running party application register this",
    "start": "1495120",
    "end": "1503000"
  },
  {
    "text": "intent in iOS they also have a similar scheme called customized",
    "start": "1503000",
    "end": "1509440"
  },
  {
    "text": "scheme is this secure the answer is no so this is the",
    "start": "1509440",
    "end": "1514760"
  },
  {
    "text": "third vulnerability because attackers can overwrite the red UI in the",
    "start": "1514760",
    "end": "1521480"
  },
  {
    "text": "mobile for example in Android the techer can just register and overwrite the C",
    "start": "1521480",
    "end": "1528520"
  },
  {
    "text": "back for the intense game so they will be able to get access token since the",
    "start": "1528520",
    "end": "1534840"
  },
  {
    "text": "access token is not bound to a special Reliant party the attacker will be able",
    "start": "1534840",
    "end": "1540840"
  },
  {
    "text": "to access all the information inside users account L have the similar",
    "start": "1540840",
    "end": "1549480"
  },
  {
    "text": "problem the impact is serious attacker will have access to all face data with",
    "start": "1550399",
    "end": "1557360"
  },
  {
    "text": "without consent how to do it right for example in",
    "start": "1557360",
    "end": "1564600"
  },
  {
    "text": "Android they are using the signature to do secure redirection so each",
    "start": "1564600",
    "end": "1571640"
  },
  {
    "text": "application will be signed by the developer key you can see the code snip is for Android verifying the has the key",
    "start": "1571640",
    "end": "1580279"
  },
  {
    "text": "has of the package uh up until several months ago I",
    "start": "1580279",
    "end": "1585559"
  },
  {
    "text": "stop start doing seminar verification it's just start this",
    "start": "1585559",
    "end": "1592120"
  },
  {
    "text": "year okay uh let's talk about authentication and authorization so when",
    "start": "1592120",
    "end": "1597279"
  },
  {
    "text": "we talk about us like these two concept always come together and uh it's not like sometime like they get like uh uh",
    "start": "1597279",
    "end": "1605880"
  },
  {
    "text": "sometime they mix up together like which is what why we talk about authorization let's talk about authentication actually",
    "start": "1605880",
    "end": "1612919"
  },
  {
    "text": "authentication is like little bit uh simpler compared to authorization is basically uh who who user is who you are",
    "start": "1612919",
    "end": "1620600"
  },
  {
    "text": "so in this case is uh the service provider already know who the resource",
    "start": "1620600",
    "end": "1626279"
  },
  {
    "text": "own who the user is and the user want to using uh his or her existing session and",
    "start": "1626279",
    "end": "1632640"
  },
  {
    "text": "reuse her in the another Rel party so uh this is the same uh identity",
    "start": "1632640",
    "end": "1640480"
  },
  {
    "text": "and like and and the user want to use Le identity to use a ram party service or",
    "start": "1640480",
    "end": "1646640"
  },
  {
    "text": "like to store uh users data in the r party so you can see the major",
    "start": "1646640",
    "end": "1652720"
  },
  {
    "text": "difference the major difference over here is uh where the resources or which",
    "start": "1652720",
    "end": "1658080"
  },
  {
    "text": "Service uh user is using so in authorization uh user allow real party",
    "start": "1658080",
    "end": "1663720"
  },
  {
    "text": "to access data or resources within with user store in the service provider but",
    "start": "1663720",
    "end": "1670120"
  },
  {
    "text": "in authentication case is using want to using a consistent identity and use like",
    "start": "1670120",
    "end": "1675760"
  },
  {
    "text": "you start within the real party is to sort like data is belong to the real",
    "start": "1675760",
    "end": "1682600"
  },
  {
    "text": "party so if you like when you use your all to inut and if you miss the",
    "start": "1682919",
    "end": "1689159"
  },
  {
    "text": "authentication for with authorization there is a vulnerability you already talk about aess token actually is like",
    "start": "1689159",
    "end": "1696120"
  },
  {
    "text": "now B is like a barrier token so any party with access token can access users",
    "start": "1696120",
    "end": "1702799"
  },
  {
    "text": "uh data with G informations so in the step three when real party trying to use",
    "start": "1702799",
    "end": "1709480"
  },
  {
    "text": "uh access token to get uh user information from service p and use that",
    "start": "1709480",
    "end": "1714840"
  },
  {
    "text": "for authentication uh uh St for will return back a user ID from the service",
    "start": "1714840",
    "end": "1724640"
  },
  {
    "text": "provider and and and Rel party can to use that user ID as identifier in their",
    "start": "1724960",
    "end": "1730600"
  },
  {
    "text": "service so what can go wrong there so this is attack uh breakdown which when",
    "start": "1730600",
    "end": "1737480"
  },
  {
    "text": "we had demo with for the wish one so first have a malicious",
    "start": "1737480",
    "end": "1743480"
  },
  {
    "text": "application uh Bob is using this malicious application first is authenticate with",
    "start": "1743480",
    "end": "1748720"
  },
  {
    "text": "Facebook and Facebook think this is legit and return Bob's access token to",
    "start": "1748720",
    "end": "1754480"
  },
  {
    "text": "attacker now attacker have a Bob's access token so what attacker going to",
    "start": "1754480",
    "end": "1759720"
  },
  {
    "text": "do next is attacker going to to log in with attacker's account uh in Facebook",
    "start": "1759720",
    "end": "1764840"
  },
  {
    "text": "from wish and uh Facebook going to return",
    "start": "1764840",
    "end": "1769919"
  },
  {
    "text": "attacker's X token attacker intercept that request replace attacker's X token",
    "start": "1769919",
    "end": "1775640"
  },
  {
    "text": "into Bob's access token and we going to ask Facebook using Bob's access token",
    "start": "1775640",
    "end": "1781440"
  },
  {
    "text": "who this user is Facebook rer user uh Facebook's Bob's Facebook user ID and",
    "start": "1781440",
    "end": "1787840"
  },
  {
    "text": "which think okay this is Bob and which logging into attacker into Bob's",
    "start": "1787840",
    "end": "1794039"
  },
  {
    "text": "account so this is uh uh something uh behind the scene so the first the one on",
    "start": "1794039",
    "end": "1800600"
  },
  {
    "text": "the left is a response from Facebook you can see like this is like uh What uh",
    "start": "1800600",
    "end": "1805799"
  },
  {
    "text": "scope uh is requirting and also in the add VAR button you can see act token",
    "start": "1805799",
    "end": "1811360"
  },
  {
    "text": "token and what wish actually does is like it gets a same it gets ACC",
    "start": "1811360",
    "end": "1816399"
  },
  {
    "text": "immediately and using it to call Facebook me end point to get user information and use this uh uh response",
    "start": "1816399",
    "end": "1823559"
  },
  {
    "text": "in the response you can see the ID using this ID to identify who the user is in their system and in the attack case we",
    "start": "1823559",
    "end": "1830679"
  },
  {
    "text": "just describe which going to log in into the victim's account so what is the impact uh the",
    "start": "1830679",
    "end": "1838159"
  },
  {
    "text": "impact is like attacker can get a full account compromise with the r party app",
    "start": "1838159",
    "end": "1844080"
  },
  {
    "text": "in the tag we demote is wish but in 2014 we found this viability in a Facebook in",
    "start": "1844080",
    "end": "1850760"
  },
  {
    "text": "home application a thir party instram so uh at that time uh there is a",
    "start": "1850760",
    "end": "1857039"
  },
  {
    "text": "vulnerability to get full compromise in Instagram so you may Wonder like if I",
    "start": "1857039",
    "end": "1863679"
  },
  {
    "text": "want to do like all or like third party authentication how to do it better so",
    "start": "1863679",
    "end": "1869880"
  },
  {
    "text": "there is a new uh spec or uh coming out called open ID connect this is a uh",
    "start": "1869880",
    "end": "1876639"
  },
  {
    "text": "something based top on uh or tool and doing authentication so beside of access",
    "start": "1876639",
    "end": "1883039"
  },
  {
    "text": "token uh the service prid going to send back a ID token which is a signed uh Jon",
    "start": "1883039",
    "end": "1889480"
  },
  {
    "text": "web token JWT and inside the payload inside the signed payload uh you can see there are a lot of attributes for one",
    "start": "1889480",
    "end": "1896480"
  },
  {
    "text": "ISS is a isure so it's like indicate who is a service pror the second sub subject",
    "start": "1896480",
    "end": "1903200"
  },
  {
    "text": "is actually the user ID the third one AUD is audience which",
    "start": "1903200",
    "end": "1909080"
  },
  {
    "text": "is a uh R party it's usually the urum party's client ID and this is uh this is like return",
    "start": "1909080",
    "end": "1917919"
  },
  {
    "text": "with in with the same request sys with a token so first of all this everything is",
    "start": "1917919",
    "end": "1923480"
  },
  {
    "text": "signed so the Rel party can verify and can guarantee this token is belong to the real party and also like it's safe",
    "start": "1923480",
    "end": "1930559"
  },
  {
    "text": "one request the real party don't need to make a separate cards to know who this user is and in this payLo we show that",
    "start": "1930559",
    "end": "1938600"
  },
  {
    "text": "implicit flow actually in the last you can see a h hash is actually have a hash of ACC token to make sure this is uh",
    "start": "1938600",
    "end": "1946120"
  },
  {
    "text": "this is the same ACC token like send back to the r party so there is no",
    "start": "1946120",
    "end": "1951360"
  },
  {
    "text": "intercept there is no Forge so attacker cannot do anything with uh L uh ID",
    "start": "1951360",
    "end": "1957840"
  },
  {
    "text": "token okay let's get back to all tool so where already talk about impit flow and",
    "start": "1957840",
    "end": "1963679"
  },
  {
    "text": "there is another authorization code or code code flow so uh what is different",
    "start": "1963679",
    "end": "1969159"
  },
  {
    "text": "here is in step two instead of directly uh getting back access token to R party",
    "start": "1969159",
    "end": "1976039"
  },
  {
    "text": "Al Coke is uh sent to the r party a r party has to use authorization code and",
    "start": "1976039",
    "end": "1982480"
  },
  {
    "text": "this client credential include the client ID and client secret to retrieve",
    "start": "1982480",
    "end": "1988039"
  },
  {
    "text": "uh ACC token this has to be done from the r party server side because the credential the secret need to be stored",
    "start": "1988039",
    "end": "1994559"
  },
  {
    "text": "in the r party server and then R party can get protected Resources with access",
    "start": "1994559",
    "end": "2001399"
  },
  {
    "text": "to so there are two thing need to be uh mentioned one is uh the a the AL code",
    "start": "2001399",
    "end": "2007919"
  },
  {
    "text": "have to be a onetime password and it need to be uh be short Le and also the",
    "start": "2007919",
    "end": "2014000"
  },
  {
    "text": "service providor need to verify also callede belong to the same ran party if",
    "start": "2014000",
    "end": "2019679"
  },
  {
    "text": "not uh there is a vulnerability over there so uh this is a one found in a",
    "start": "2019679",
    "end": "2026639"
  },
  {
    "text": "very famous China provider uh Cena and uh the uh the round party we use is",
    "start": "2026639",
    "end": "2034399"
  },
  {
    "text": "called so so news so U uh first of all Bob using a",
    "start": "2034399",
    "end": "2041760"
  },
  {
    "text": "application which control by attacker and uh he it start with C or to cold",
    "start": "2041760",
    "end": "2050118"
  },
  {
    "text": "flow so Bobs also code going send to the malicious application and attacker owns",
    "start": "2050119",
    "end": "2057200"
  },
  {
    "text": "Bob's authorization code then attacker using uh similar to",
    "start": "2057200",
    "end": "2062358"
  },
  {
    "text": "what we had before for the in flow attacker login so who news with ATT",
    "start": "2062359",
    "end": "2067720"
  },
  {
    "text": "attacker's account uh then Cena going to send back attacker's authorization code attacker",
    "start": "2067720",
    "end": "2075000"
  },
  {
    "text": "intercept the request uh change it to Bob's authorization code and so going to send",
    "start": "2075000",
    "end": "2082720"
  },
  {
    "text": "Bob's authoriz code to Cena and gets Bob access token now attacker get full",
    "start": "2082720",
    "end": "2088118"
  },
  {
    "text": "control of uh Bobs so who knews account yeah this is basically uh the same turn",
    "start": "2088119",
    "end": "2094800"
  },
  {
    "text": "out from the impit flow uh impersonation attack so how to do this uh right a",
    "start": "2094800",
    "end": "2102599"
  },
  {
    "text": "service provider need to verify all the security critical content such like",
    "start": "2102599",
    "end": "2107880"
  },
  {
    "text": "authorization code on the server side and also uh Rel party need to store and do secure check uh always on server",
    "start": "2107880",
    "end": "2117480"
  },
  {
    "text": "side okay we have talked about the Tex which directly associate with the paral",
    "start": "2118160",
    "end": "2123640"
  },
  {
    "text": "flows now let's take look at the general problems that impact all the different o flows first",
    "start": "2123640",
    "end": "2131839"
  },
  {
    "text": "let's get a little bit more about consent page custom page is very important",
    "start": "2131839",
    "end": "2137560"
  },
  {
    "text": "because it's allows the user to Grant permission to the riant party apps so it",
    "start": "2137560",
    "end": "2143359"
  },
  {
    "text": "is a page that should describe what's the app and who is the user and what",
    "start": "2143359",
    "end": "2149640"
  },
  {
    "text": "kind of information do the app want to access for example here are the two exam",
    "start": "2149640",
    "end": "2156079"
  },
  {
    "text": "here are the two examples of modern consent page from service providers like",
    "start": "2156079",
    "end": "2162839"
  },
  {
    "text": "Facebook and Google so if there's not enough",
    "start": "2162839",
    "end": "2168040"
  },
  {
    "text": "information in the consent page you can imagine that users might just grant all",
    "start": "2168040",
    "end": "2174680"
  },
  {
    "text": "permissions like give all the info secret data inside the service provider",
    "start": "2174680",
    "end": "2179880"
  },
  {
    "text": "to a relyant party but this a Target travel let's say something more",
    "start": "2179880",
    "end": "2185200"
  },
  {
    "text": "interesting which is like when there's L of concern information that could lead",
    "start": "2185200",
    "end": "2191079"
  },
  {
    "text": "us to hike to the authentication so here we use example",
    "start": "2191079",
    "end": "2198760"
  },
  {
    "text": "with tenson tenson is a very big Chinese service provider you guys might know it",
    "start": "2198760",
    "end": "2204680"
  },
  {
    "text": "from it's the same provider as WeChat so it's have over 700 million",
    "start": "2204680",
    "end": "2210880"
  },
  {
    "text": "users over over China and overseas so",
    "start": "2210880",
    "end": "2215920"
  },
  {
    "text": "tensent doesn't provide any information related to the lying party so the app or",
    "start": "2215920",
    "end": "2222400"
  },
  {
    "text": "the the user will not know which app they are granting the information tool",
    "start": "2222400",
    "end": "2227480"
  },
  {
    "text": "and also because I ID is a public information then attackers can trying to",
    "start": "2227480",
    "end": "2235440"
  },
  {
    "text": "trace the user to log into their app but still seems like a legitimate",
    "start": "2235440",
    "end": "2241119"
  },
  {
    "text": "app let's take look at how this attack could happen in the first",
    "start": "2241119",
    "end": "2248079"
  },
  {
    "text": "step on the user device the user is checked to log to attacker's mobile app",
    "start": "2248079",
    "end": "2256680"
  },
  {
    "text": "but the user think he talking to a legitimate app after user input his tensent",
    "start": "2256680",
    "end": "2263480"
  },
  {
    "text": "credentials tensent will provide an identifier for that user so the",
    "start": "2263480",
    "end": "2269000"
  },
  {
    "text": "identifier is signed by tensent and it includes the app ID and user ID",
    "start": "2269000",
    "end": "2278160"
  },
  {
    "text": "so in this step the malicious application will get the special",
    "start": "2279280",
    "end": "2285000"
  },
  {
    "text": "identifier that is associated to the user's account because user will not see any",
    "start": "2285000",
    "end": "2291960"
  },
  {
    "text": "difference because there's no consent let's see how attacker can hack",
    "start": "2291960",
    "end": "2299119"
  },
  {
    "text": "into users's account with this identifier after getting the identifier",
    "start": "2299119",
    "end": "2306520"
  },
  {
    "text": "that's related to user's account attacker comes into his own mobile device and the attacker tried to log in",
    "start": "2306520",
    "end": "2314000"
  },
  {
    "text": "with tensent tenson will return the identifier that's linked to attacker's",
    "start": "2314000",
    "end": "2320800"
  },
  {
    "text": "account but attacker will substitute the identifier he will use",
    "start": "2320800",
    "end": "2327319"
  },
  {
    "text": "the identifier that's associate to the user's account that he get from the first",
    "start": "2327319",
    "end": "2333119"
  },
  {
    "text": "step and the relying party will think it's the same Beni",
    "start": "2333119",
    "end": "2340119"
  },
  {
    "text": "user then the attacker can just log to the beny user's account he will have",
    "start": "2340119",
    "end": "2345960"
  },
  {
    "text": "whole full control over the Beni users",
    "start": "2345960",
    "end": "2350880"
  },
  {
    "text": "account this attack has very serious impact so around over 700 million users",
    "start": "2351040",
    "end": "2358240"
  },
  {
    "text": "are affected and T acknowledge vulnerability and Pat it within a week",
    "start": "2358240",
    "end": "2366119"
  },
  {
    "text": "so how can we do with right as a service provider uh you should include username",
    "start": "2368160",
    "end": "2373960"
  },
  {
    "text": "and user profile to let user know that's the user's account who login and you",
    "start": "2373960",
    "end": "2380800"
  },
  {
    "text": "should also provide C name and icon to let user know which app is asking for the permissions of course you should",
    "start": "2380800",
    "end": "2388000"
  },
  {
    "text": "tell the user what permissions will be granted the second General problem is",
    "start": "2388000",
    "end": "2394240"
  },
  {
    "text": "about State token so you guys might know the say SF token so inside o there's",
    "start": "2394240",
    "end": "2400680"
  },
  {
    "text": "also a similar token that's generated generated randomly by ring",
    "start": "2400680",
    "end": "2406440"
  },
  {
    "text": "party to ensure the a Integrity of the O flow",
    "start": "2406440",
    "end": "2412720"
  },
  {
    "text": "session if you don't use a state token like we demonstrate in the GitHub demo",
    "start": "2412720",
    "end": "2418839"
  },
  {
    "text": "that b user will be loging to attacker's account which is a standard login CSF",
    "start": "2418839",
    "end": "2426319"
  },
  {
    "text": "attack they have two steps first attacker log to GitHub account and get authorization",
    "start": "2426319",
    "end": "2434119"
  },
  {
    "text": "code from GitHub instead of going on the teer send the fishion link to the user that have",
    "start": "2434119",
    "end": "2442640"
  },
  {
    "text": "embed the authorization code when the Ben user Bob render the",
    "start": "2442640",
    "end": "2449880"
  },
  {
    "text": "link a request will be sent to GitHub server with the authorization code from",
    "start": "2449880",
    "end": "2455839"
  },
  {
    "text": "attacker's account then GitHub will because GitHub because there's no State token being used GitHub",
    "start": "2455839",
    "end": "2463440"
  },
  {
    "text": "will just think it's a b user oh sorry it's a techer so the Ben user will be",
    "start": "2463440",
    "end": "2468680"
  },
  {
    "text": "logging to the attacker's account a little bit more detail that first when",
    "start": "2468680",
    "end": "2474040"
  },
  {
    "text": "attacker starts all flow on his machine you can see there's no State token being used in this",
    "start": "2474040",
    "end": "2480200"
  },
  {
    "text": "URI and in the second step on the user device when the user tricked into to",
    "start": "2480200",
    "end": "2486760"
  },
  {
    "text": "Rene I frame which contains authorization code from the attacker's",
    "start": "2486760",
    "end": "2493599"
  },
  {
    "text": "account after that user will be logged into attacker's",
    "start": "2493599",
    "end": "2499800"
  },
  {
    "text": "account to do this right service provider should support state token and",
    "start": "2499800",
    "end": "2505920"
  },
  {
    "text": "riing parties should Pass State cken to the provider and also verify the state",
    "start": "2505920",
    "end": "2514000"
  },
  {
    "text": "token our final ability is very dangerous because it",
    "start": "2514480",
    "end": "2519560"
  },
  {
    "text": "allows you to break the authentication of Facebook it's a associate with a feature",
    "start": "2519560",
    "end": "2527319"
  },
  {
    "text": "that's both Android and iOS support that's web view which is a browser that",
    "start": "2527319",
    "end": "2533640"
  },
  {
    "text": "bundle can be bundle inside the mobile app web view is very widely used for",
    "start": "2533640",
    "end": "2540720"
  },
  {
    "text": "hybrid apps in development and also for inviting content for example for",
    "start": "2540720",
    "end": "2545839"
  },
  {
    "text": "inviting or login page what view is very powerful it has lots of legitimate usit cases so the app",
    "start": "2545839",
    "end": "2554599"
  },
  {
    "text": "that's in B web view can get the cookies from the web view there's no enforcement",
    "start": "2554599",
    "end": "2560000"
  },
  {
    "text": "about same Orin policy inide web view so it's also demonstrated in the",
    "start": "2560000",
    "end": "2567960"
  },
  {
    "text": "demo that we use Facebook as example to show the attack first the developers",
    "start": "2567960",
    "end": "2574040"
  },
  {
    "text": "develop an app and follow exactly the Facebook o flow and Dev the dev the oos",
    "start": "2574040",
    "end": "2581040"
  },
  {
    "text": "flow inside web view instead of using Facebook at",
    "start": "2581040",
    "end": "2586599"
  },
  {
    "text": "DK then after us are loging with Facebook the app can get the cookie from",
    "start": "2586599",
    "end": "2593839"
  },
  {
    "text": "Facebook and the cookie is a longterm cookie so the ads can do whatever they want with the cookie like log to user",
    "start": "2593839",
    "end": "2603079"
  },
  {
    "text": "account this web whe attack has very Danger consequence that it allows full account",
    "start": "2603440",
    "end": "2610839"
  },
  {
    "text": "compromise since we VI have lots of legitimate reasons this usage for",
    "start": "2610839",
    "end": "2616079"
  },
  {
    "text": "allowing people to get cookies inside web view we don't know any fix for this",
    "start": "2616079",
    "end": "2622359"
  },
  {
    "text": "problem now we have talked about we have sampled",
    "start": "2622359",
    "end": "2629480"
  },
  {
    "text": "eight vulnerabilities but they actually even more problems so here comes the one",
    "start": "2629480",
    "end": "2635520"
  },
  {
    "text": "minute question how to do mobile o",
    "start": "2635520",
    "end": "2640520"
  },
  {
    "text": "security the answer is it is very very hard but we don't want to discourage",
    "start": "2640960",
    "end": "2647280"
  },
  {
    "text": "people from using mobile o because it's very widely used and it's so",
    "start": "2647280",
    "end": "2652599"
  },
  {
    "text": "useful is there anything we can do so if you're are service provider you should",
    "start": "2652599",
    "end": "2658400"
  },
  {
    "text": "remember this checklist first you want to verify the identity of the secret",
    "start": "2658400",
    "end": "2664200"
  },
  {
    "text": "information receivers like the token of the code also you want to provide informative",
    "start": "2664200",
    "end": "2671160"
  },
  {
    "text": "content page third you should considering using open ID connect for",
    "start": "2671160",
    "end": "2679280"
  },
  {
    "text": "authentication what if you are relying party the most important thing to remember is you should never trust the",
    "start": "2679280",
    "end": "2686920"
  },
  {
    "text": "client don't sto store any secret in the client and you should always perform",
    "start": "2686920",
    "end": "2692119"
  },
  {
    "text": "Security checks on the server you should also choose the right",
    "start": "2692119",
    "end": "2697280"
  },
  {
    "text": "flow and follow spe directly and you should use the official SD case to",
    "start": "2697280",
    "end": "2702920"
  },
  {
    "text": "develop your app okay so this is the end of talk we hope you guys learned about mobile o",
    "start": "2702920",
    "end": "2710640"
  },
  {
    "text": "problems and how to avoid them in the best efforts thank",
    "start": "2710640",
    "end": "2716970"
  },
  {
    "text": "[Applause]",
    "start": "2716970",
    "end": "2725800"
  },
  {
    "text": "you okay okay any",
    "start": "2725800",
    "end": "2730599"
  },
  {
    "text": "questions yeah one thing to mention that all the eight VAB bilities we talk about",
    "start": "2734040",
    "end": "2739240"
  },
  {
    "text": "talk about seven of them are still working so it's really lots of pitfalls",
    "start": "2739240",
    "end": "2745240"
  },
  {
    "text": "in this area",
    "start": "2745240",
    "end": "2748720"
  },
  {
    "text": "if you guys if you guys just use uh Json if you were to just use Json web tokens",
    "start": "2759800",
    "end": "2766000"
  },
  {
    "text": "instead uh they're always signed so doesn't that prevent a lot of you know",
    "start": "2766000",
    "end": "2771800"
  },
  {
    "text": "these issues with OA right because if you",
    "start": "2771800",
    "end": "2777319"
  },
  {
    "text": "authenticate with uh if you're using Json web tokens for authentication can't",
    "start": "2777319",
    "end": "2783119"
  },
  {
    "text": "you just verify that it's always you know signed by the correct uh service provider and",
    "start": "2783119",
    "end": "2791040"
  },
  {
    "text": "then you don't run into these types of issues uh that's open ID connect right so like in open ID connect the one thing",
    "start": "2791040",
    "end": "2798280"
  },
  {
    "text": "add is a uh ID token which include is a",
    "start": "2798280",
    "end": "2803319"
  },
  {
    "text": "JWT which is sign Json web token and also as way I already said like is talk",
    "start": "2803319",
    "end": "2808880"
  },
  {
    "text": "who is the user who is a service provider and who is a uh subject uh the",
    "start": "2808880",
    "end": "2813920"
  },
  {
    "text": "the the user and who is the audience uh real party so everything is signed with",
    "start": "2813920",
    "end": "2819240"
  },
  {
    "text": "a key from the Serv proor and you can like in the SP it's like like it also",
    "start": "2819240",
    "end": "2825359"
  },
  {
    "text": "mention there's a discover page so all the r party can go to the service provider's discover page and get the key",
    "start": "2825359",
    "end": "2831520"
  },
  {
    "text": "and verify is like is uh the payload is correct okay yeah cool thank you",
    "start": "2831520",
    "end": "2839480"
  }
]