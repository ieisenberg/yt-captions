[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14639"
  },
  {
    "text": "well first and foremost uh hello black cat usa uh thank you for tuning in to listen to luke and i speak today we're",
    "start": "14639",
    "end": "21520"
  },
  {
    "text": "going to be looking into some mac os management attacks kind of attacking kind of enterprise mac os estates and",
    "start": "21520",
    "end": "27279"
  },
  {
    "text": "and how we might do this i'm working on a corporate level a little bit of an introduction as to who we are i'm cam hall i work within",
    "start": "27279",
    "end": "34399"
  },
  {
    "text": "the security team over at github as a security engineer formerly used to work in a past life at secure consulting",
    "start": "34399",
    "end": "41200"
  },
  {
    "text": "where you might have seen some of her research in the past and i'm luke i'm currently a red team at actually",
    "start": "41200",
    "end": "46559"
  },
  {
    "text": "research and like callum i used to work at sq so quickly diving into it not wasting",
    "start": "46559",
    "end": "51760"
  },
  {
    "start": "50000",
    "end": "108000"
  },
  {
    "text": "too much time um can a quick agenda for today we are going to give a brief introduction into apple's mdm solution",
    "start": "51760",
    "end": "59120"
  },
  {
    "text": "as well as the jamf device management platform we're going to talk about how these kind of platforms can be abused",
    "start": "59120",
    "end": "65280"
  },
  {
    "text": "and either for kind of c2 access or sorry c2 communications or kind of initial access vectors there now",
    "start": "65280",
    "end": "72640"
  },
  {
    "text": "inevitably we are going to get distracted during this presentation and start talking uh about some function",
    "start": "72640",
    "end": "78560"
  },
  {
    "text": "hooking as a kind of brief introduction and we promise this does make sense we're going to tie it all back in later",
    "start": "78560",
    "end": "84240"
  },
  {
    "text": "when we start talking about kind of stealing secrets from sip protected processes now for those of you not",
    "start": "84240",
    "end": "89600"
  },
  {
    "text": "familiar with the apple ecosystem and sip is one of the core principles on devices that can prevent users from",
    "start": "89600",
    "end": "96720"
  },
  {
    "text": "being able to perform kind of unnecessary actions for a legitimate user things like hooking processes and",
    "start": "96720",
    "end": "102640"
  },
  {
    "text": "dumping processes or accessing kind of restricted areas of the device",
    "start": "102640",
    "end": "108640"
  },
  {
    "start": "108000",
    "end": "157000"
  },
  {
    "text": "so it's probably worth calling out right off the bat everything that we talk about here today we are going to be releasing uh there's",
    "start": "108640",
    "end": "114720"
  },
  {
    "text": "no need for taking screenshots midway through our talk uh we'll be releasing everything kind of open source on github",
    "start": "114720",
    "end": "120399"
  },
  {
    "text": "and this will all be released through the alias the mac pack which is where looking eye are going to be um releasing",
    "start": "120399",
    "end": "126719"
  },
  {
    "text": "all of our future research and just kind of keep an eye on that space there uh we're also going to be releasing two",
    "start": "126719",
    "end": "132080"
  },
  {
    "text": "mythic agents and for those of you that aren't overly familiar with mythic mythic is a c2 framework developed by",
    "start": "132080",
    "end": "138879"
  },
  {
    "text": "cody thomas and some of his colleagues over at spectre ops and pretty awesome framework you might know from a past",
    "start": "138879",
    "end": "144800"
  },
  {
    "text": "life as apfel and which is the mac os specific um kind of agent for the mythic",
    "start": "144800",
    "end": "150879"
  },
  {
    "text": "platform however it's far greater than that now it's now kind of windows linux kind of extends to everything",
    "start": "150879",
    "end": "158000"
  },
  {
    "start": "157000",
    "end": "232000"
  },
  {
    "text": "so to answer the kind of why behind this presentation why luca and i are so kind of focused on mac os enterprise security",
    "start": "158000",
    "end": "165599"
  },
  {
    "text": "when we talk about um enterprises we often think of kind of windows estates and but in recent times we've seen more",
    "start": "165599",
    "end": "172239"
  },
  {
    "text": "of a push towards either kind of traditional companies allowing people to use mac os devices and as well as things",
    "start": "172239",
    "end": "178480"
  },
  {
    "text": "like startup companies that are pure mac houses where that's all their end users are kind of using and now whenever you",
    "start": "178480",
    "end": "184959"
  },
  {
    "text": "have a mac os devices or any kind of um platform being used within a corporate environment you want to have some sort",
    "start": "184959",
    "end": "191680"
  },
  {
    "text": "of management in place so something to allow your administrators to configure",
    "start": "191680",
    "end": "196720"
  },
  {
    "text": "devices kind of uniform throughout all your employees or to kind of enforce certain security",
    "start": "196720",
    "end": "202720"
  },
  {
    "text": "restrictions kind of allowed applications and whether it's remotely administering these devices as well",
    "start": "202720",
    "end": "208239"
  },
  {
    "text": "there needs to be something to permit that to be enabled within that kind of corporate environment",
    "start": "208239",
    "end": "213760"
  },
  {
    "text": "so the examples we're going to be looking at today are apple's mdm solution as well as the jam pro device",
    "start": "213760",
    "end": "219840"
  },
  {
    "text": "management solution um however that's just because it's what we run into the most it's kind of most common for",
    "start": "219840",
    "end": "225120"
  },
  {
    "text": "ourselves but there are plenty more as you can see out there on the screen just now",
    "start": "225120",
    "end": "231440"
  },
  {
    "start": "232000",
    "end": "389000"
  },
  {
    "text": "cool thanks carl the next section is going to be an introduction to mdm so first of all what is mdm or more what",
    "start": "232799",
    "end": "239760"
  },
  {
    "text": "it isn't it's not a product you can't go to apple and say can i have your mdm solution please um it's more of a spec",
    "start": "239760",
    "end": "246080"
  },
  {
    "text": "or a protocol that a third-party vendor can implement now these third-party vendors are a little bit bound by what apple says you",
    "start": "246080",
    "end": "252959"
  },
  {
    "text": "can do over the mdm platform and as such they kind of often implement",
    "start": "252959",
    "end": "258239"
  },
  {
    "text": "their own capabilities above and beyond this spec and that tradition well usually involves running an agent on an end point um and",
    "start": "258239",
    "end": "265360"
  },
  {
    "text": "that'll be relevant a little bit later on for some of our attacks um to start with a very summary very",
    "start": "265360",
    "end": "270880"
  },
  {
    "text": "high level summary of the mdm solution um so step one you need to enroll your device in the mdm platform",
    "start": "270880",
    "end": "277919"
  },
  {
    "text": "and this gives the mdm solution some kind of uh privilege of your device it lets",
    "start": "277919",
    "end": "284240"
  },
  {
    "text": "it like push notifications and give commands and once that's been enrolled",
    "start": "284240",
    "end": "289680"
  },
  {
    "text": "it then communicates over the apple push notification service the apple push notification service is a kind of piece",
    "start": "289680",
    "end": "297040"
  },
  {
    "text": "of infrastructure managed by apple and essentially one giant message queue after you've sent that notification the",
    "start": "297040",
    "end": "303280"
  },
  {
    "text": "device can pick it up and it will then reach out to the mdm solution over https for commands and queries and publishing",
    "start": "303280",
    "end": "309600"
  },
  {
    "text": "the results so we're going to dive into enrollment in a little bit more detail and so",
    "start": "309600",
    "end": "315919"
  },
  {
    "text": "there's two ways of enrolling a device one is using the device enrollment program which is apple solution for",
    "start": "315919",
    "end": "321919"
  },
  {
    "text": "businesses such that you get your brand new macbook you open it up and it's all automatically enrolled in your mdm",
    "start": "321919",
    "end": "327440"
  },
  {
    "text": "server already we're going to look at the other side of this which is manually doing it and that involves running a",
    "start": "327440",
    "end": "332800"
  },
  {
    "text": "mobile config file on the device so these are plist files which are apple's xml flavor",
    "start": "332800",
    "end": "339199"
  },
  {
    "text": "and when you click on it it will open a box something like this on the right with a lot of red text saying that you're giving this",
    "start": "339199",
    "end": "345280"
  },
  {
    "text": "organization the ability to erase your device and configure all of your settings if you push install and put in the",
    "start": "345280",
    "end": "352000"
  },
  {
    "text": "administrator password and we'll then kick off a series of messages the first or one of the first messages",
    "start": "352000",
    "end": "358319"
  },
  {
    "text": "is a token update message and this provides the mdm solution with any authentication material that's required",
    "start": "358319",
    "end": "363840"
  },
  {
    "text": "to communicate over the apple push notification service and this will happen whenever these",
    "start": "363840",
    "end": "369120"
  },
  {
    "text": "pieces of authentication material change so what are they so the first one is a",
    "start": "369120",
    "end": "374319"
  },
  {
    "text": "token this is generated by the apple push notification service and given to the device and the second one is a push",
    "start": "374319",
    "end": "381520"
  },
  {
    "text": "magic this is generated by the device and then these two together are sent over to the mdm solution",
    "start": "381520",
    "end": "388960"
  },
  {
    "start": "389000",
    "end": "478000"
  },
  {
    "text": "so let's look at more of an end to end of how you can like do the full flow of running a command on a device so in this",
    "start": "389680",
    "end": "396160"
  },
  {
    "text": "scenario we're going to task um the device with sending us a list of installed applications",
    "start": "396160",
    "end": "401840"
  },
  {
    "text": "so step one the mdm solution will communicate over the apn service it will send the notification and the device",
    "start": "401840",
    "end": "408160"
  },
  {
    "text": "will pick that up and this will happen in pretty much near real time as the device maintains a persistent connection",
    "start": "408160",
    "end": "413280"
  },
  {
    "text": "to the apn service when the device wakes up it receives the notification and that's an instruction",
    "start": "413280",
    "end": "419120"
  },
  {
    "text": "to check into the mdm solution and say what have you got for me the mdm solution will reply and say",
    "start": "419120",
    "end": "426240"
  },
  {
    "text": "here's what i want you to do in this particular case we're going to ask for a list of",
    "start": "426240",
    "end": "431919"
  },
  {
    "text": "installed applications and finally after the device is kind of computed the command got all the results",
    "start": "431919",
    "end": "438720"
  },
  {
    "text": "together it then publishes them back over the same channel so what can we actually do and there's a",
    "start": "438720",
    "end": "445039"
  },
  {
    "text": "whole bunch of things we can do some of them are really interesting to us like being able to install configuration profiles and these",
    "start": "445039",
    "end": "452080"
  },
  {
    "text": "are kind of the mac equivalent of a windows gpo like editing settings on the device we have a whole bunch of query",
    "start": "452080",
    "end": "458240"
  },
  {
    "text": "information we can erase the device and shut it down and we can kind of install",
    "start": "458240",
    "end": "463280"
  },
  {
    "text": "applications um from the app store or from an enterprise application if we can sign it legitimately",
    "start": "463280",
    "end": "469840"
  },
  {
    "text": "um and then lots of stuff to do with accounts and encryption keys and some stuff that's absolutely not relevant",
    "start": "469840",
    "end": "475039"
  },
  {
    "text": "like installing books cool so now we know a little bit about mdm we're going to cover our first major",
    "start": "475039",
    "end": "481919"
  },
  {
    "text": "topic which is abusing it for c2 so what's the general premise we want to",
    "start": "481919",
    "end": "487440"
  },
  {
    "text": "set up our own mdm server and we want to maliciously enroll devices to gain some control within the bounds of how mdm",
    "start": "487440",
    "end": "494000"
  },
  {
    "text": "works so why are we interested in this well mdm client is an apple signed trusted application it doing things like",
    "start": "494000",
    "end": "501759"
  },
  {
    "text": "installing profiles or applications it's probably not very weird when it comes to detection",
    "start": "501759",
    "end": "507520"
  },
  {
    "text": "and it doesn't beacon as we've kind of covered in the infrastructure side of things it's only going to check in",
    "start": "507520",
    "end": "513440"
  },
  {
    "text": "over https when we tell it to over the apple push notification service and this",
    "start": "513440",
    "end": "518479"
  },
  {
    "text": "is kind of not true it will do it occasionally when we let open the device and turn it on for the first time and",
    "start": "518479",
    "end": "523599"
  },
  {
    "text": "things like that um but largely there's no beacon behavior and it's automatic persistence just by",
    "start": "523599",
    "end": "530000"
  },
  {
    "text": "the nature of what mdm is um an interesting tidbit from late 2020 mdm",
    "start": "530000",
    "end": "536399"
  },
  {
    "text": "client was on the content filter exclusion list and this was an update push to catalina that excluded certain",
    "start": "536399",
    "end": "542480"
  },
  {
    "text": "apple products or apple processes from being intercepted by um network",
    "start": "542480",
    "end": "547680"
  },
  {
    "text": "monitoring tools on the device and which made this traffic very hard to actually inspect and from a defensive perspective",
    "start": "547680",
    "end": "554640"
  },
  {
    "text": "and this was reverted after community outcry a couple months later",
    "start": "554640",
    "end": "559839"
  },
  {
    "text": "so this brings us on to the first kind of operational challenge of doing this um apple quite rightly so restrict who",
    "start": "559839",
    "end": "566240"
  },
  {
    "text": "can use the apple push notification service you need a series of certificates to do so um",
    "start": "566240",
    "end": "571680"
  },
  {
    "text": "specifically a push certificate now this push difficult can",
    "start": "571680",
    "end": "577200"
  },
  {
    "text": "be obtained from apple if you submit a signed push certificate csr",
    "start": "577200",
    "end": "583040"
  },
  {
    "text": "this certificate sorry this csr needs to be signed by a legitimate mdm vendor",
    "start": "583040",
    "end": "589279"
  },
  {
    "text": "with their certificate that they obtained from apple using the apple developer program it's a little bit of a process and we first looked at trying to",
    "start": "589279",
    "end": "596080"
  },
  {
    "text": "get this first certificate to do so we need to pay apple some money and also kind of prove to them that we're a",
    "start": "596080",
    "end": "601120"
  },
  {
    "text": "legitimate business um we didn't really want to do that we wanted to run our mdm server we didn't",
    "start": "601120",
    "end": "606959"
  },
  {
    "start": "603000",
    "end": "747000"
  },
  {
    "text": "really want to pay anybody um or like an actual vendor for a real service um",
    "start": "606959",
    "end": "612800"
  },
  {
    "text": "so to solve this we look at a tool called micromdm and this is open source it's on github it's very very cool",
    "start": "612800",
    "end": "619120"
  },
  {
    "text": "project and it lets us spin up our own mdm server and kind of interact with it and play with the internals but we still",
    "start": "619120",
    "end": "625839"
  },
  {
    "text": "need to get our push notification certificate now to get this um we use a public",
    "start": "625839",
    "end": "631120"
  },
  {
    "text": "service called mdmcert.download and this service um is offered by a company",
    "start": "631120",
    "end": "637920"
  },
  {
    "text": "that is letting you use their uh like vendor signing certificate to sign your own csrs and then submit them to apple",
    "start": "637920",
    "end": "644640"
  },
  {
    "text": "to get your push difficults whether this is in breach of the apple terms of service is a little bit hand",
    "start": "644640",
    "end": "650320"
  },
  {
    "text": "wavy um they've spoke to apple um apple haven't replied on the topic um",
    "start": "650320",
    "end": "656399"
  },
  {
    "text": "but it's still up there and it's usable and it definitely works and there's a few restrictions around",
    "start": "656399",
    "end": "661600"
  },
  {
    "text": "signing up with different emails so if you sign up with like a public email they won't accept you if you do one with a custom domain name then they will um",
    "start": "661600",
    "end": "669760"
  },
  {
    "text": "and this is to kind of restrict individuals from using this which is definitely in breach of the apple terms",
    "start": "669760",
    "end": "675519"
  },
  {
    "text": "of service and with all of our certificates solved then we can now communicate with the apn",
    "start": "675519",
    "end": "681920"
  },
  {
    "text": "service we now look at operational challenge number two and this is all about getting code",
    "start": "681920",
    "end": "687440"
  },
  {
    "text": "execution so there's lots of things in the mdm spec that are quite interesting especially from an information gathering",
    "start": "687440",
    "end": "693200"
  },
  {
    "text": "perspective but what we really want to do is execute code on the device and there's not a command that makes that",
    "start": "693200",
    "end": "700000"
  },
  {
    "text": "incredibly simple the closest thing we've got is the install enterprise application command",
    "start": "700000",
    "end": "705279"
  },
  {
    "text": "and this will allow us to execute a signed package file that's hosted on the mdm server",
    "start": "705279",
    "end": "711360"
  },
  {
    "text": "however the package must be signed by a valid developer certificate and to go through this process you need to speak",
    "start": "711360",
    "end": "716639"
  },
  {
    "text": "to apple you need to get a um sign up with them pay them some money and a few checks to take place as well",
    "start": "716639",
    "end": "723360"
  },
  {
    "text": "um but luckily there's actually a way around this so when we enroll the device in the mdm",
    "start": "723360",
    "end": "728399"
  },
  {
    "text": "solution for the first time and the ssl tls certificate of the web server will",
    "start": "728399",
    "end": "733760"
  },
  {
    "text": "be installed as a trusted certificate authority um on the device and using this we can",
    "start": "733760",
    "end": "740639"
  },
  {
    "text": "run whatever code we want if we sign it with that certificate which kind of alleviates that problem which is quite nice",
    "start": "740639",
    "end": "747519"
  },
  {
    "start": "747000",
    "end": "856000"
  },
  {
    "text": "put all this together it introduces authoris which is our first major tool drop of this talk and it's a mythic",
    "start": "747839",
    "end": "754240"
  },
  {
    "text": "agent nc2 profile uses mdm and all the stuff we spoke about previously and when you generate a payload it will",
    "start": "754240",
    "end": "760560"
  },
  {
    "text": "give you a mobile config file you do need admin um to install this",
    "start": "760560",
    "end": "765680"
  },
  {
    "text": "it ends up not being too much of a problem um like actually operationally because mac users are often roots on",
    "start": "765680",
    "end": "772160"
  },
  {
    "text": "their own devices anyway and it's kind of compounded by the fact that a lot of the typical user base for a mac is a developer and as we all know they uh",
    "start": "772160",
    "end": "779440"
  },
  {
    "text": "they often require local app in on their devices so a quick demo so",
    "start": "779440",
    "end": "788160"
  },
  {
    "text": "this is mythic it has authoris installed we're going to start by generating ourself a mobile config file",
    "start": "788160",
    "end": "794639"
  },
  {
    "text": "and specifying the server you'll notice that when we generate this and we download it it's going to open",
    "start": "794639",
    "end": "800959"
  },
  {
    "text": "automatically inside profiles this is thanks to safari auto opening some known file types which is uh which is lovely",
    "start": "800959",
    "end": "808639"
  },
  {
    "text": "one last step for the user this will pop up and a lot of the information displayed here is",
    "start": "808639",
    "end": "814160"
  },
  {
    "text": "customizable click install give it the admin password and it will install the profile and it will do all the",
    "start": "814160",
    "end": "819680"
  },
  {
    "text": "authentication exchanges that we spoke about previously we can see in the top right we now have that callback and we",
    "start": "819680",
    "end": "825680"
  },
  {
    "text": "can start interacting with our implant if we start issuing commands here",
    "start": "825680",
    "end": "832079"
  },
  {
    "text": "we can um get for example information back about the device but you'll notice that it's",
    "start": "832079",
    "end": "838480"
  },
  {
    "text": "not going to check it it won't check in until we tell it to explicitly",
    "start": "838480",
    "end": "843600"
  },
  {
    "text": "so we'll issue a force call back command and this will use the apple push notification service to actually send",
    "start": "843600",
    "end": "848720"
  },
  {
    "text": "that message it will check in give us all of our information and we can execute our command okay",
    "start": "848720",
    "end": "856399"
  },
  {
    "start": "856000",
    "end": "997000"
  },
  {
    "text": "brilliant so we're going to step away from mdm for a little bit and partially i should say and jump into the world of",
    "start": "856399",
    "end": "863519"
  },
  {
    "text": "jamf now for those of you that aren't familiar with jamf at all it's absolutely fine um jamf is a device",
    "start": "863519",
    "end": "869040"
  },
  {
    "text": "management platform often used to manage mac os estates it is a an agent-based",
    "start": "869040",
    "end": "875040"
  },
  {
    "text": "platform now what that means i think look kind of touched on earlier but quite often with these device management",
    "start": "875040",
    "end": "880480"
  },
  {
    "text": "platforms um administrators want some way to perform kind of custom actions on devices and and perhaps some actions",
    "start": "880480",
    "end": "886959"
  },
  {
    "text": "that we can't achieve um through kind of apple's uh native mdm stuff",
    "start": "886959",
    "end": "892000"
  },
  {
    "text": "and hence we have a kind of model where you'll see on the top here where we have the java pro server and we have jam from",
    "start": "892000",
    "end": "898639"
  },
  {
    "text": "road devices that have that jamf agent running there kind of executing any instructions that the jam",
    "start": "898639",
    "end": "904560"
  },
  {
    "text": "pro server instructs it to um now the main benefit of this is jamf allows you to customize a lot of things",
    "start": "904560",
    "end": "910959"
  },
  {
    "text": "that you want to do on that device however this also provides us a lot of kind of interesting aspects to look at",
    "start": "910959",
    "end": "916959"
  },
  {
    "text": "when we start investigating the jamf platform now at the kind of core of jamf we have",
    "start": "916959",
    "end": "922800"
  },
  {
    "text": "the java pro server now the jump rope server is the heart of everything uh within a jamf estate it is effectively",
    "start": "922800",
    "end": "929680"
  },
  {
    "text": "what administrators can use to enroll devices what they can use to manage those devices and what they can use to",
    "start": "929680",
    "end": "935600"
  },
  {
    "text": "kind of specify instructions to execute on their devices so to execute code in their devices you can go to the jack pro",
    "start": "935600",
    "end": "942160"
  },
  {
    "text": "server kind of scope the devices you want to target and then perform whatever action you feel necessary",
    "start": "942160",
    "end": "949120"
  },
  {
    "text": "um in terms of the actual payloads that jamf can kind of deliver in order to execute it's kind of required",
    "start": "949120",
    "end": "955120"
  },
  {
    "text": "instructions we have custom scripts which when you break it down in reality",
    "start": "955120",
    "end": "960160"
  },
  {
    "text": "is just a bash script that an administrator can kind of tell a device to execute using the jamf agent",
    "start": "960160",
    "end": "966959"
  },
  {
    "text": "and we have native payloads and we also have mdm now those last two payloads are",
    "start": "966959",
    "end": "972959"
  },
  {
    "text": "what we're really going to be looking at here today and the reason we find them particularly interesting is that unlike",
    "start": "972959",
    "end": "979440"
  },
  {
    "text": "custom scripts which are often dropped onto the device and the native payloads and the mdm side of things tend to be a",
    "start": "979440",
    "end": "986079"
  },
  {
    "text": "bit more obfuscated from the user so they kind of tend to be held in memory within either the kind of jamf agent",
    "start": "986079",
    "end": "992000"
  },
  {
    "text": "binary um or from the mdm agent itself",
    "start": "992000",
    "end": "997440"
  },
  {
    "start": "997000",
    "end": "1250000"
  },
  {
    "text": "so to kind of give a bit of idea of how the kind of trust model works between the java pro server and enrolled jamf",
    "start": "997440",
    "end": "1003759"
  },
  {
    "text": "agent device are jamf enrolled devices um when a device is first enrolled",
    "start": "1003759",
    "end": "1009040"
  },
  {
    "text": "within a java platform the first thing it does is generates a rsa key pair",
    "start": "1009040",
    "end": "1014079"
  },
  {
    "text": "now it generates this key pair sends the public key over to the java pro server",
    "start": "1014079",
    "end": "1019199"
  },
  {
    "text": "the java pro server then creates a device certificate for that enrolled device and that certificate is then",
    "start": "1019199",
    "end": "1026558"
  },
  {
    "text": "stored within the java pro server and kind of assigned to being that device's certificate and it then encrypts that",
    "start": "1026559",
    "end": "1033520"
  },
  {
    "text": "certificate with the public key previously sent by the device and it sends it back to the",
    "start": "1033520",
    "end": "1039120"
  },
  {
    "text": "device that's just enrolled now the device that's just enrolled then stores that device certificate within",
    "start": "1039120",
    "end": "1045120"
  },
  {
    "text": "what is called the jamf key chain now i want you to kind of hold that in the back of your mains for a minute and",
    "start": "1045120",
    "end": "1050720"
  },
  {
    "text": "because we're going to jump back to that in a second um now this device certificate you're",
    "start": "1050720",
    "end": "1055760"
  },
  {
    "text": "probably wondering what it's used for any kind of future request and that that",
    "start": "1055760",
    "end": "1061200"
  },
  {
    "text": "enrolled device makes to the javpro server it will sign the body of the request",
    "start": "1061200",
    "end": "1066400"
  },
  {
    "text": "with this device certificate and then can provide that signature within the request and now that enables the jam pro server",
    "start": "1066400",
    "end": "1073840"
  },
  {
    "text": "to verify that any sign any message that then comes from that device has indeed been signed and as",
    "start": "1073840",
    "end": "1080240"
  },
  {
    "text": "such uh as a legitimate and hasn't kind of been intercepted along the way",
    "start": "1080240",
    "end": "1085280"
  },
  {
    "text": "now what this looks like in the reality of things you'll see here we have the kind of basic xml body and then we can",
    "start": "1085280",
    "end": "1090799"
  },
  {
    "text": "see the device a jam device signature highlighted in green on the screen here",
    "start": "1090799",
    "end": "1097440"
  },
  {
    "text": "now i i asked you to keep in mind the jam key chain and i mentioned we'd be going back to it now luke and i found",
    "start": "1097520",
    "end": "1103760"
  },
  {
    "text": "the jam keychain pretty interesting because we noticed it was within every kind of jam from road device we'd seen",
    "start": "1103760",
    "end": "1109440"
  },
  {
    "text": "and we noticed that we at no point had ever configured any password for it and nor have we seen any configuration",
    "start": "1109440",
    "end": "1115840"
  },
  {
    "text": "settings anywhere to configure this password and so we did a little bit of reverse engineering and we performed",
    "start": "1115840",
    "end": "1122480"
  },
  {
    "text": "some kind of dialogue injection that we'll talk about a little bit later and we found that the jamf agent itself",
    "start": "1122480",
    "end": "1128960"
  },
  {
    "text": "contained the secret to unlock this keychain now keychain is effectively just a storage place that apple uses to",
    "start": "1128960",
    "end": "1136080"
  },
  {
    "text": "contain things like certificates and credentials and things like that and now what we found particularly",
    "start": "1136080",
    "end": "1141520"
  },
  {
    "text": "interesting is we looked for this um shared secret or we looked for this secret within the jams binary within",
    "start": "1141520",
    "end": "1148000"
  },
  {
    "text": "every jamf environment that we touched as soon as we kind of found the secret out in the first place and we found that",
    "start": "1148000",
    "end": "1154160"
  },
  {
    "text": "every single jamf environment had the same shared secret within the jamf binary now to kind of",
    "start": "1154160",
    "end": "1160240"
  },
  {
    "text": "emphasize that point you see up at the top we actually pulled down the jamf binary for apple's retail and so for",
    "start": "1160240",
    "end": "1167039"
  },
  {
    "text": "those of you that aren't familiar and apple stores the display and products that you can see they're all enrolled",
    "start": "1167039",
    "end": "1172720"
  },
  {
    "text": "with jam for management purposes and we're able even able to pull the binary",
    "start": "1172720",
    "end": "1178160"
  },
  {
    "text": "down from there look for the certificate within or sorry look for the secret key within that's used to unlock that jam",
    "start": "1178160",
    "end": "1183600"
  },
  {
    "text": "key chain and again it was the same as we'd previously seen so we kind of confirmed",
    "start": "1183600",
    "end": "1188960"
  },
  {
    "text": "that this was shared secret and that we could pull it from any um jamf binary within any estate would picture",
    "start": "1188960",
    "end": "1196240"
  },
  {
    "text": "now to kind of give you an idea of jamf's capabilities and we can perform code execution on our devices through",
    "start": "1196240",
    "end": "1202480"
  },
  {
    "text": "kind of everything you can see on screen and policy scripts is the main one that we see as well as kind of packages being",
    "start": "1202480",
    "end": "1208320"
  },
  {
    "text": "deployed and in terms of camera command and control capabilities jamf by very nature",
    "start": "1208320",
    "end": "1214480"
  },
  {
    "text": "is designed to check in so jamf the jamf agent checks into the jump pro server",
    "start": "1214480",
    "end": "1219600"
  },
  {
    "text": "every 15 minutes um as well as the kind of custom triggers that you can see on screen just now so start up and log in",
    "start": "1219600",
    "end": "1226720"
  },
  {
    "text": "that kind of thing and persistence wise if you're an administrator you wouldn't be too happy",
    "start": "1226720",
    "end": "1232640"
  },
  {
    "text": "if your jamf agent stops communicating and by nature it needs to always be persisting on the device it always needs",
    "start": "1232640",
    "end": "1238799"
  },
  {
    "text": "to be running and so we can see this launch demon that will always keep that jamf binary alive and it will keep it",
    "start": "1238799",
    "end": "1245200"
  },
  {
    "text": "alive and it will start as soon as the device is kind of started",
    "start": "1245200",
    "end": "1250240"
  },
  {
    "text": "so we've talked a little bit about what jamf does in some of its capabilities and at this point you're probably",
    "start": "1250240",
    "end": "1255760"
  },
  {
    "text": "thinking that jamf looks as if it was designed to be a c2 and profile or c2",
    "start": "1255760",
    "end": "1260960"
  },
  {
    "text": "framework and we're going to look at how we can actually make that happen a little bit so this is just a standard kind of scene",
    "start": "1260960",
    "end": "1268000"
  },
  {
    "text": "that you would see a standard setup where we have an enrolled jam device periodically checking in sending device",
    "start": "1268000",
    "end": "1273760"
  },
  {
    "text": "information to the java server and receiving and executing any instructions from the legitimate jam server now we",
    "start": "1273760",
    "end": "1281120"
  },
  {
    "text": "want to get a little bit interesting and we want to get in the middle of this and and see how we could potentially um use",
    "start": "1281120",
    "end": "1286960"
  },
  {
    "text": "this to our own advantage um and so we're going to get in the middle here we're going to get in between the two",
    "start": "1286960",
    "end": "1292720"
  },
  {
    "text": "we're going to cut the jam server out and we're going to get that device to start communicating with ourselves",
    "start": "1292720",
    "end": "1298480"
  },
  {
    "text": "now we can act like a java pro server we can send the request so the jamf agent is going to be expecting and now this",
    "start": "1298480",
    "end": "1305360"
  },
  {
    "text": "allows us to do things like receive that device information that the jam from road device is sending out and also",
    "start": "1305360",
    "end": "1311039"
  },
  {
    "text": "allows us to then execute like instructions through the jamf agent we can kind of abuse the functionality",
    "start": "1311039",
    "end": "1317280"
  },
  {
    "text": "is built into that agent itself now how would we go about kind of getting",
    "start": "1317280",
    "end": "1322720"
  },
  {
    "text": "that set up making that happen in the first place well the jamf agent listens and acts",
    "start": "1322720",
    "end": "1329440"
  },
  {
    "text": "based on the contents of the jamf configuration file so you'll see the the kind of location in the bottom right",
    "start": "1329440",
    "end": "1335280"
  },
  {
    "text": "here of the column jam software java.plist file this is just a property list that kind of points the jamf agent",
    "start": "1335280",
    "end": "1341840"
  },
  {
    "text": "to the right and jamf pro server or jss url and now what if we change this",
    "start": "1341840",
    "end": "1348320"
  },
  {
    "text": "configuration if with that single plus what happens if we change that and point it to own malicious server",
    "start": "1348320",
    "end": "1354960"
  },
  {
    "text": "well i'll let you get creative to how we might do that and one example we've thought of and as potentially pushing a",
    "start": "1354960",
    "end": "1360880"
  },
  {
    "text": "malicious package that when opened kind of deploys this and peers file to the default location and that jamf looks for",
    "start": "1360880",
    "end": "1368559"
  },
  {
    "text": "its configuration and at which point we can change the contents of that configuration and cause",
    "start": "1368559",
    "end": "1374240"
  },
  {
    "text": "the jamf agent to communicate with our server or whatever we want to to kind of imitate it as",
    "start": "1374240",
    "end": "1381120"
  },
  {
    "start": "1381000",
    "end": "1517000"
  },
  {
    "text": "and so we have our second um mythic seto profiling agent that we're going to be releasing today and now introducing",
    "start": "1381120",
    "end": "1388080"
  },
  {
    "text": "typhon and typhon is effectively imitating the native behavior of a jamf",
    "start": "1388080",
    "end": "1394240"
  },
  {
    "text": "pro server now the payload itself is pretty simple it is a jam configuration file that comes in a p list",
    "start": "1394240",
    "end": "1400799"
  },
  {
    "text": "as we've said you can deliver that however you like or you can customize it however you like and all we really need",
    "start": "1400799",
    "end": "1406559"
  },
  {
    "text": "to do here is get that jamf agent pointing to our mythic profile which will then be able to handle all the",
    "start": "1406559",
    "end": "1412400"
  },
  {
    "text": "incoming requests and effectively imitate a legitimate jam server",
    "start": "1412400",
    "end": "1417520"
  },
  {
    "text": "so a quick example as to how this might look and we've got our typhon agent here on screen as you can see um we're going to",
    "start": "1417520",
    "end": "1424880"
  },
  {
    "text": "kind of skip through the halo creation we've seen this before we're just creating a mac os payload and the",
    "start": "1424880",
    "end": "1430320"
  },
  {
    "text": "typhoon agent we're going to point it to our mythic server that's going to be acting as the jam server",
    "start": "1430320",
    "end": "1436000"
  },
  {
    "text": "and we are then going to rename the plist that's going to be created to the same name as the default jam",
    "start": "1436000",
    "end": "1441840"
  },
  {
    "text": "configuration file and and we're then just going to kind of export it we're just going to add in an",
    "start": "1441840",
    "end": "1447360"
  },
  {
    "text": "example command just now so accept that risk down the page download payload and we're then going to",
    "start": "1447360",
    "end": "1453520"
  },
  {
    "text": "we've pre-packaged just to save time here a package containing that p list once the user enters their password that",
    "start": "1453520",
    "end": "1460320"
  },
  {
    "text": "package is going to drop that jam configuration file into the right place for jump would expect it",
    "start": "1460320",
    "end": "1466240"
  },
  {
    "text": "and you can see here if we look at the contents you can see that's the string we just entered there which is our",
    "start": "1466240",
    "end": "1471919"
  },
  {
    "text": "mythic server so if we clear that we're now going to manually get jamf to check in and we",
    "start": "1471919",
    "end": "1478080"
  },
  {
    "text": "could wait 15 minutes or so for it to check in itself however this for the sake of the demonstration is a lot",
    "start": "1478080",
    "end": "1483679"
  },
  {
    "text": "easier and we can see we've now got a call back if we go and look at the callback and",
    "start": "1483679",
    "end": "1489360"
  },
  {
    "text": "you'll see that we have a nice callback from the jump and roll device we've just kind of changed the configuration off",
    "start": "1489360",
    "end": "1496080"
  },
  {
    "text": "so we're going to execute a script here and you can pass either a full script here or you can pass just the command as",
    "start": "1496080",
    "end": "1501120"
  },
  {
    "text": "i have and so we're just going to call ifconfig just to see what the interface uh looks like and we're going to cause",
    "start": "1501120",
    "end": "1508000"
  },
  {
    "text": "the jamf agent to check back in again and as you can see it's now processing the request and returning the content",
    "start": "1508000",
    "end": "1514400"
  },
  {
    "text": "from the jam and old device okay so we've now covered everything",
    "start": "1514400",
    "end": "1519679"
  },
  {
    "start": "1517000",
    "end": "1773000"
  },
  {
    "text": "we've got on c2 and abusing these frameworks we're not going to move on something slightly different and but",
    "start": "1519679",
    "end": "1525279"
  },
  {
    "text": "before we do get into the kind of the meat of this we need a little bit of prerequisites on function hooking specifically in objective c",
    "start": "1525279",
    "end": "1532640"
  },
  {
    "text": "so the why why would we look at something like this well it allows us to instrument a",
    "start": "1532640",
    "end": "1538480"
  },
  {
    "text": "pre-built binary with our own code we can change the functionality we can add debug messages",
    "start": "1538480",
    "end": "1543760"
  },
  {
    "text": "and just generally play with the internals so to do this we use the command um at",
    "start": "1543760",
    "end": "1549360"
  },
  {
    "text": "the bottom of the screen here so the dialid insert libraries environment variable will load a dialog that's",
    "start": "1549360",
    "end": "1555120"
  },
  {
    "text": "specified here and into whatever application we run at runtime",
    "start": "1555120",
    "end": "1562080"
  },
  {
    "text": "so on a fully protected mac os system by default this will not be possible so i'm",
    "start": "1562080",
    "end": "1568960"
  },
  {
    "text": "calm alluded to it at the start of the presentation but sip is a mac os control and that enforces the hardened runtime",
    "start": "1568960",
    "end": "1574960"
  },
  {
    "text": "which is something that you can compile as a compilation flag that you can compile into an application and this",
    "start": "1574960",
    "end": "1582240"
  },
  {
    "text": "protects the runtime integrity of any process where it's enabled and that includes things like code injection and",
    "start": "1582240",
    "end": "1589760"
  },
  {
    "text": "dll injection like we need to do for a lot of the concepts um discussed in this section so for this section um you can",
    "start": "1589760",
    "end": "1596159"
  },
  {
    "text": "turn sip off just to kind of have a play with these things and we'll show you how we kind of get around this problem um in",
    "start": "1596159",
    "end": "1602559"
  },
  {
    "text": "the last couple of sections so for this toy example we're going to look at calculator app and specifically",
    "start": "1602559",
    "end": "1609360"
  },
  {
    "text": "we're really interested in this function here the set lcd string value function and this is the function that's",
    "start": "1609360",
    "end": "1614559"
  },
  {
    "text": "responsible for taking a string and for outputting it as the result on the calculator application so usually this",
    "start": "1614559",
    "end": "1619760"
  },
  {
    "text": "would be kind of the result of your equation so we're going to do something here",
    "start": "1619760",
    "end": "1625039"
  },
  {
    "text": "called swizzling now i wish i made this termite myself because it's great but this is an actual",
    "start": "1625039",
    "end": "1630320"
  },
  {
    "text": "real term that's uh well before we started looking at this i mean it's something that actual objective c",
    "start": "1630320",
    "end": "1635440"
  },
  {
    "text": "developers use um and it's all about the association between selector and",
    "start": "1635440",
    "end": "1642240"
  },
  {
    "text": "implementation of that function and so what does this actually look like when we inject our dialog it's going to call",
    "start": "1642240",
    "end": "1648640"
  },
  {
    "text": "the load function which is going to start excusing our code inside of this we're going to get a",
    "start": "1648640",
    "end": "1653919"
  },
  {
    "text": "handle to the our target method we're going to add a new method to the class",
    "start": "1653919",
    "end": "1659919"
  },
  {
    "text": "we're going to get a handle to add the swizzle method the new one that we've added and then we're going to call",
    "start": "1659919",
    "end": "1665039"
  },
  {
    "text": "method underscore exchange implementations which is a c objective c runtime function",
    "start": "1665039",
    "end": "1672080"
  },
  {
    "text": "that will swap these and the implementations of these two functions so what does that actually do under the",
    "start": "1672080",
    "end": "1678720"
  },
  {
    "text": "hood so to understand this we need to know a little bit about objective how objective",
    "start": "1678720",
    "end": "1684000"
  },
  {
    "text": "c works so a selector is what we've got in the top left here um and it's a",
    "start": "1684000",
    "end": "1689679"
  },
  {
    "text": "string that identifies a function in a class so the set lcd string value inputs",
    "start": "1689679",
    "end": "1694840"
  },
  {
    "text": "selector and points to a implementation natural function code um",
    "start": "1694840",
    "end": "1700399"
  },
  {
    "text": "for our objective c binary and that's stored in memory uh in the structure that you can see in the bottom left here",
    "start": "1700399",
    "end": "1706000"
  },
  {
    "text": "so tying that value to our actual function code and the method we called",
    "start": "1706000",
    "end": "1711279"
  },
  {
    "text": "to exchange the implementations here very simply just takes both of these selectors and it swaps those two",
    "start": "1711279",
    "end": "1717200"
  },
  {
    "text": "indentations so they point at each other and what this means in practice is that when that original function is called it",
    "start": "1717200",
    "end": "1723120"
  },
  {
    "text": "will actually call our custom code that we've put into the binary so what custom code can that be and well",
    "start": "1723120",
    "end": "1729600"
  },
  {
    "text": "it can pretty much be anything we want you know if we want to add more information in terms of output or kind of change functionality",
    "start": "1729600",
    "end": "1736320"
  },
  {
    "text": "and people that are paying attention will look at this and say that's not valid code you can't do that",
    "start": "1736320",
    "end": "1742000"
  },
  {
    "text": "um but actually those that pay even more attention will notice that or will",
    "start": "1742000",
    "end": "1747679"
  },
  {
    "text": "remember that we've actually swapped the implementation of these functions so the swizzle understore underscore set lcd",
    "start": "1747679",
    "end": "1754320"
  },
  {
    "text": "string value function actually points to our original function so this is perfectly valid code",
    "start": "1754320",
    "end": "1760559"
  },
  {
    "text": "so putting all of this together what do we have and we have a calculator that we",
    "start": "1760559",
    "end": "1766399"
  },
  {
    "text": "control some of the code so we give our secret value and we get our secret output",
    "start": "1766399",
    "end": "1773278"
  },
  {
    "start": "1773000",
    "end": "2219000"
  },
  {
    "text": "okay so i did promise you that we would get distracted at some point during this and however i also promised that we",
    "start": "1773760",
    "end": "1779279"
  },
  {
    "text": "would get back on track and tell you why this all mattered so we're going to start looking at how we can get past",
    "start": "1779279",
    "end": "1784720"
  },
  {
    "text": "some of the restrictions that look mentioned that sip kind of enforces on devices so we're going to try stealing",
    "start": "1784720",
    "end": "1790799"
  },
  {
    "text": "some secrets from set protected processes now you may be wondering what kind of secrets we're after and the",
    "start": "1790799",
    "end": "1796480"
  },
  {
    "text": "answer is all of them and it's not a good hacking presentation unless you you manage to get your hands on everything",
    "start": "1796480",
    "end": "1802399"
  },
  {
    "text": "and we've been frustrated in the past about certain areas that seemed a little bit um off boundaries so we're gonna",
    "start": "1802399",
    "end": "1807679"
  },
  {
    "text": "have a look at how we can gain access to things like management account credentials as well as potentially uh",
    "start": "1807679",
    "end": "1813120"
  },
  {
    "text": "kind of active directory credentials as well so the big question is where are these",
    "start": "1813120",
    "end": "1818559"
  },
  {
    "text": "secrets um unfortunately the answer isn't one place we've shown in previous talks that we can gain access to custom",
    "start": "1818559",
    "end": "1824960"
  },
  {
    "text": "scripts and any credentials or secrets in there and we're now going to look at those last two kind of java payloads i",
    "start": "1824960",
    "end": "1831039"
  },
  {
    "text": "talked about earlier the native payloads and the mdm payloads themselves",
    "start": "1831039",
    "end": "1836480"
  },
  {
    "text": "so as i mentioned we broke custom scripts last year objective by the sea version 3 and 2020 and this is as the",
    "start": "1836480",
    "end": "1844480"
  },
  {
    "text": "two summer guys in the middle uh that you can see there and the long and short of this presentation was any secrets",
    "start": "1844480",
    "end": "1851279"
  },
  {
    "text": "that you pass within kind of scripts whether it's in the body or whether it's in the parameter we can get access to so",
    "start": "1851279",
    "end": "1857440"
  },
  {
    "text": "just no no don't put secrets and scripts that are going to end up on user devices um as a kind of sore point for ourselves",
    "start": "1857440",
    "end": "1864159"
  },
  {
    "text": "just to reinforce this is still not acceptable um it's still not a secure implementation of encrypting things but",
    "start": "1864159",
    "end": "1870880"
  },
  {
    "text": "then putting the encryption keys within the body of the script and it might have some benefits but it still doesn't",
    "start": "1870880",
    "end": "1876799"
  },
  {
    "text": "qualify as secure so end of that run and i'm sure we can move on from there",
    "start": "1876799",
    "end": "1882080"
  },
  {
    "text": "so we're going to talk about some new research though uh we're going to talk about something that luke and i have been calling and device impersonation",
    "start": "1882080",
    "end": "1888320"
  },
  {
    "text": "attacks now we're going to just kind of set the scene uh we have got onto a device",
    "start": "1888320",
    "end": "1894159"
  },
  {
    "text": "that's enrolled within a jamf environment we've compromised that user's device their uh local administrator and on that device and we",
    "start": "1894159",
    "end": "1901919"
  },
  {
    "text": "effectively want to either escalate or privilege privileges or gain some information that",
    "start": "1901919",
    "end": "1907120"
  },
  {
    "text": "will allow us to to laterally move within the network now we mentioned that kind of a device",
    "start": "1907120",
    "end": "1913279"
  },
  {
    "text": "authentication model that jamf has with its devices and the the kind of java keychain and",
    "start": "1913279",
    "end": "1918960"
  },
  {
    "text": "and the kind of process we walk through there and now for that full process to work to fully um authenticate to jamf",
    "start": "1918960",
    "end": "1926640"
  },
  {
    "text": "and demonstrate you are who you say you are jamf requires that you have first the device certificate and secondly the",
    "start": "1926640",
    "end": "1933360"
  },
  {
    "text": "hardware uuid that can be gained with the command on the screen there now we can quite easily get access to",
    "start": "1933360",
    "end": "1940320"
  },
  {
    "text": "all this information as we previously discussed so we're now in the scenario where we're going to steal the device",
    "start": "1940320",
    "end": "1946080"
  },
  {
    "text": "certificate and the jammed keychain from the device and we're also going to steal the uuid",
    "start": "1946080",
    "end": "1952159"
  },
  {
    "text": "now if we take that information over to our actual device the device where we're sitting on and we can then start",
    "start": "1952159",
    "end": "1958240"
  },
  {
    "text": "communicating with the java pro server so we can say hello i am one of your",
    "start": "1958240",
    "end": "1963440"
  },
  {
    "text": "legitimate devices i want you to send me all the policies and specifically i want you to configure my local admin account",
    "start": "1963440",
    "end": "1970559"
  },
  {
    "text": "so the jamf management account now we can provide jump with the necessary information is",
    "start": "1970559",
    "end": "1976720"
  },
  {
    "text": "to verify we are who we say we are we can provide the uuid uh we can ride the jam certificate or sorry the jump key",
    "start": "1976720",
    "end": "1983600"
  },
  {
    "text": "chain which contains our device certificate and as such jamf has no reason not to trust we are who we say we",
    "start": "1983600",
    "end": "1989919"
  },
  {
    "text": "are now you're probably wondering why would we want to act as another device from",
    "start": "1989919",
    "end": "1995200"
  },
  {
    "text": "our attacker machine well as we discussed earlier apple has a lot of inbuilt security controls such as sip",
    "start": "1995200",
    "end": "2001519"
  },
  {
    "text": "that may prevent us from performing certain attacks such as interacting with processes however if we're able to interact with",
    "start": "2001519",
    "end": "2008720"
  },
  {
    "text": "jamf as another device within our machine we get to set the playing field",
    "start": "2008720",
    "end": "2013760"
  },
  {
    "text": "so we get to see what security controls are enabled and what restrictions may prevent any of our kind of future",
    "start": "2013760",
    "end": "2019679"
  },
  {
    "text": "attacks and so namely here we want to be able to disable sip communicate with",
    "start": "2019679",
    "end": "2025679"
  },
  {
    "text": "jamf and as such directly interact with the jamf agent and to pull out any secrets that might be in there",
    "start": "2025679",
    "end": "2032720"
  },
  {
    "text": "so how does this work in reality um well if we steal the hardware uuid and we can",
    "start": "2032720",
    "end": "2038320"
  },
  {
    "text": "then set that within a virtual machine we can then drop the jam con key chain file into where jump would expect to",
    "start": "2038320",
    "end": "2044399"
  },
  {
    "text": "look for it and we can hook the jamf agent as we don't have those kind of protections offered by sip",
    "start": "2044399",
    "end": "2051440"
  },
  {
    "text": "now what is the kind of use case of this why is this useful well picture those credentials that have been pushed to the",
    "start": "2051440",
    "end": "2056800"
  },
  {
    "text": "device imagine we get our hands on those credentials as the kind of plain text thing what happens if that credential as",
    "start": "2056800",
    "end": "2063760"
  },
  {
    "text": "we've discussed in the past is shared across all of the jamf devices enrolled within that estate",
    "start": "2063760",
    "end": "2069200"
  },
  {
    "text": "and we also see things like distribution points which are the shares in which um jamf will tell a device to go and pull",
    "start": "2069200",
    "end": "2076240"
  },
  {
    "text": "certain packages from if we can gain access to the full contents of those shares by accessing the distribution",
    "start": "2076240",
    "end": "2082240"
  },
  {
    "text": "point credentials and lastly is local jump into in a bit and we often see devices being binded",
    "start": "2082240",
    "end": "2089118"
  },
  {
    "text": "with active directory using kind of active directory bind credentials so there's the potential for lateral",
    "start": "2089119",
    "end": "2094960"
  },
  {
    "text": "movement there so now we know a little bit about how to get all these secrets inside the jump",
    "start": "2094960",
    "end": "2101119"
  },
  {
    "text": "platform we're going to extend this to mdm and one kind of a last tree on this presentation",
    "start": "2101119",
    "end": "2107599"
  },
  {
    "text": "so jamf has the ability to push configuration profiles over mdm um and include within the mdm spec is",
    "start": "2107599",
    "end": "2114800"
  },
  {
    "text": "the ability to bind to active directory and the scenario that we were in um was that we'd compromise pretty much every",
    "start": "2114800",
    "end": "2121200"
  },
  {
    "text": "other credential but we really wanted to pivot into the ads state and this is the credential that we wanted to do",
    "start": "2121200",
    "end": "2127599"
  },
  {
    "text": "so a bit of background on this so to buy into active directory you need an account to do so and these credentials",
    "start": "2127599",
    "end": "2134320"
  },
  {
    "text": "are just used once like fire and forget and to create the computer object and kind of set things up",
    "start": "2134320",
    "end": "2139839"
  },
  {
    "text": "um the privilege required for this account um",
    "start": "2139839",
    "end": "2145040"
  },
  {
    "text": "is more so than would be required in a normal windows environment so there's no",
    "start": "2145040",
    "end": "2150160"
  },
  {
    "text": "like a machine account quota there's an apply here and you need to have missions to create the object and a few other",
    "start": "2150160",
    "end": "2155680"
  },
  {
    "text": "things um for that reason the account put here is often very privileged and this",
    "start": "2155680",
    "end": "2161200"
  },
  {
    "text": "particular um piece of text here is from the apple official documentation and",
    "start": "2161200",
    "end": "2167680"
  },
  {
    "text": "i guess it could be taken a few weeks but at least when i read this for the first time it says you know the active directory domain administrator might",
    "start": "2167680",
    "end": "2173920"
  },
  {
    "text": "need to give you a name and password that suggests to me that there's a lot of da creds sitting around in these ad",
    "start": "2173920",
    "end": "2178960"
  },
  {
    "text": "bind profiles so what can we do well step one we exploit the same device",
    "start": "2178960",
    "end": "2185119"
  },
  {
    "text": "impersonation against the target step two and we need to configure the mdm daemon to load our dialog and",
    "start": "2185119",
    "end": "2191200"
  },
  {
    "text": "there's a few things here we need to do to weaken this slightly and but i'll go on to say that in a second and then step three we're going",
    "start": "2191200",
    "end": "2197440"
  },
  {
    "text": "to run the jamf mdm command and this is going to set us up with a jam sorry with an mdm profile and sync all",
    "start": "2197440",
    "end": "2204960"
  },
  {
    "text": "of the policies to us and all of the profiles to us and in doing so we'll get all of the",
    "start": "2204960",
    "end": "2210720"
  },
  {
    "text": "policies and profiles down to the device and including the ad bind one we're after and that dialogue is going to dump",
    "start": "2210720",
    "end": "2216960"
  },
  {
    "text": "all of the credentials that pass through so what does this look like in practice",
    "start": "2216960",
    "end": "2223200"
  },
  {
    "start": "2219000",
    "end": "2376000"
  },
  {
    "text": "well the scenario here um we've already done the device impersonation so that's the hardware uid that's been spoofed",
    "start": "2223200",
    "end": "2229839"
  },
  {
    "text": "and no profiles are installed at the moment and you'll see here we've got the jamf keychain",
    "start": "2229839",
    "end": "2236000"
  },
  {
    "text": "installed in the jamf application support directory so we're all set up from a jam",
    "start": "2236000",
    "end": "2241359"
  },
  {
    "text": "perspective um but what about from an mdm client perspective so we need to weaken the",
    "start": "2241359",
    "end": "2246880"
  },
  {
    "text": "configuration of the mdm client here so that we can load down malicious dialog so we start by unloading the system mdm",
    "start": "2246880",
    "end": "2253839"
  },
  {
    "text": "client and this is uh sorry and then we copy this to our own user writeable location",
    "start": "2253839",
    "end": "2259839"
  },
  {
    "text": "and this is the case because the uh launch daemon configuration for mdm clients just normally um lives on a",
    "start": "2259839",
    "end": "2266400"
  },
  {
    "text": "read-only file system so we copy it to a place where we can write it and we start playing with the launch",
    "start": "2266400",
    "end": "2272320"
  },
  {
    "text": "daemon config so there's a key called environment variables as you've probably guessed we're going to use dialog insert",
    "start": "2272320",
    "end": "2278400"
  },
  {
    "text": "libraries to load our daily here and we'll pop these keys in and then",
    "start": "2278400",
    "end": "2283440"
  },
  {
    "text": "we'll save this we'll now load this um",
    "start": "2283440",
    "end": "2288640"
  },
  {
    "text": "so that launch d picks it up as a new launch daemon",
    "start": "2288640",
    "end": "2293680"
  },
  {
    "text": "and then from an mdm client perspective we're sorted here and also to note we've disabled sip and we've also disabled",
    "start": "2293680",
    "end": "2300480"
  },
  {
    "text": "library validation here as well which we can see with the uh with the one coming back from that",
    "start": "2300480",
    "end": "2307200"
  },
  {
    "text": "so uh dialog is going to be loaded we're all set up with jamf so we run jamf mdm",
    "start": "2307359",
    "end": "2312480"
  },
  {
    "text": "this is going to sync our profile we can see that the mdm client starts running",
    "start": "2312480",
    "end": "2317760"
  },
  {
    "text": "and we're going to skip a few steps here just well let's give a little bit of time while we wait for the policies to be synced um",
    "start": "2317760",
    "end": "2324480"
  },
  {
    "text": "but alas our dialup is loaded we get all our information and we can see in the output that we've got our active",
    "start": "2324480",
    "end": "2330480"
  },
  {
    "text": "directory credentials and from here we can pivot into the idea state and uh uh wreak some havoc there as well",
    "start": "2330480",
    "end": "2337920"
  },
  {
    "text": "so how bad is it so most of these attacks cannot be mitigated by configuration they're absolutely fundamental to the way these",
    "start": "2337920",
    "end": "2344079"
  },
  {
    "text": "platforms work and but the good news is that the follow-on attacks can be mitigated so for example not having shared local",
    "start": "2344079",
    "end": "2350560"
  },
  {
    "text": "admin and putting your lowest permissions possible on your ad bind account",
    "start": "2350560",
    "end": "2355920"
  },
  {
    "text": "so that's it that's all we've got for you and if there's any questions you can contact us on twitter",
    "start": "2355920",
    "end": "2363760"
  },
  {
    "text": "underscore callum hall and ruku underscore we also on bloodhound gang slack and keep an eye on those links for",
    "start": "2363760",
    "end": "2370800"
  },
  {
    "text": "some good stuff coming in the next couple of months thank you very much for listening thanks everyone",
    "start": "2370800",
    "end": "2377640"
  }
]