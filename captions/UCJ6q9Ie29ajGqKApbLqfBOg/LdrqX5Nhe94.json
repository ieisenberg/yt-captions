[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "good afternoon everyone um welcome to my",
    "start": "2520",
    "end": "5240"
  },
  {
    "text": "talk a moral fiber unlocking and",
    "start": "5240",
    "end": "8280"
  },
  {
    "text": "discovering the offensive capabilities",
    "start": "8280",
    "end": "10800"
  },
  {
    "text": "of",
    "start": "10800",
    "end": "12480"
  },
  {
    "text": "fibers now first a little bit about me",
    "start": "12480",
    "end": "15080"
  },
  {
    "text": "my name is Daniel Jerry I'm a security",
    "start": "15080",
    "end": "17359"
  },
  {
    "text": "researcher previously I was a senior",
    "start": "17359",
    "end": "19600"
  },
  {
    "text": "security researcher for with secure and",
    "start": "19600",
    "end": "21359"
  },
  {
    "text": "F secure in their strategic endpoint",
    "start": "21359",
    "end": "24119"
  },
  {
    "text": "research team prior to that I worked for",
    "start": "24119",
    "end": "26199"
  },
  {
    "text": "UK intelligence in a similar role and an",
    "start": "26199",
    "end": "28320"
  },
  {
    "text": "agent developer for about five years",
    "start": "28320",
    "end": "30080"
  },
  {
    "text": "years and I've also worked as an our",
    "start": "30080",
    "end": "31800"
  },
  {
    "text": "consultant for",
    "start": "31800",
    "end": "33760"
  },
  {
    "text": "mandiant so what are we going to cover",
    "start": "33760",
    "end": "35719"
  },
  {
    "text": "today well first off um what are fibers",
    "start": "35719",
    "end": "38600"
  },
  {
    "text": "I'm going to give you a little brief",
    "start": "38600",
    "end": "39840"
  },
  {
    "text": "overview so you understand like the core",
    "start": "39840",
    "end": "41800"
  },
  {
    "text": "components then we're going to talk",
    "start": "41800",
    "end": "43480"
  },
  {
    "text": "about the existing threat landscape and",
    "start": "43480",
    "end": "45440"
  },
  {
    "text": "some open source techniques already",
    "start": "45440",
    "end": "47199"
  },
  {
    "text": "available and then following this we're",
    "start": "47199",
    "end": "49480"
  },
  {
    "text": "going to dig into two new offensive",
    "start": "49480",
    "end": "52039"
  },
  {
    "text": "techniques that I've developed and",
    "start": "52039",
    "end": "54120"
  },
  {
    "text": "finally round off with some conclusions",
    "start": "54120",
    "end": "56280"
  },
  {
    "text": "and key",
    "start": "56280",
    "end": "58399"
  },
  {
    "start": "58000",
    "end": "241000"
  },
  {
    "text": "takeaways so first off what are",
    "start": "58399",
    "end": "61320"
  },
  {
    "text": "fibers well fibers are just another",
    "start": "61320",
    "end": "64040"
  },
  {
    "text": "vehicle to execute code think of them as",
    "start": "64040",
    "end": "66479"
  },
  {
    "text": "mini threads Microsoft's definition is",
    "start": "66479",
    "end": "69240"
  },
  {
    "text": "on the slide right now but I prefer to",
    "start": "69240",
    "end": "72080"
  },
  {
    "text": "Define them as stack for co-routines now",
    "start": "72080",
    "end": "74720"
  },
  {
    "text": "these are just like functions have that",
    "start": "74720",
    "end": "76759"
  },
  {
    "text": "have stacks except they don't return",
    "start": "76759",
    "end": "78920"
  },
  {
    "text": "like a regular function they're manually",
    "start": "78920",
    "end": "80960"
  },
  {
    "text": "switched to by the application itself",
    "start": "80960",
    "end": "83680"
  },
  {
    "text": "and they're a user mode concept",
    "start": "83680",
    "end": "86040"
  },
  {
    "text": "invisible to the kernel and only one",
    "start": "86040",
    "end": "88920"
  },
  {
    "text": "thread can run one fiber at any one",
    "start": "88920",
    "end": "92960"
  },
  {
    "text": "time now they're initially designed when",
    "start": "92960",
    "end": "96320"
  },
  {
    "text": "CPUs um had less Calles and threads",
    "start": "96320",
    "end": "99119"
  },
  {
    "text": "available to them and they were used in",
    "start": "99119",
    "end": "101640"
  },
  {
    "text": "things like SQL database servers um",
    "start": "101640",
    "end": "104960"
  },
  {
    "text": "these days Microsoft actually recommends",
    "start": "104960",
    "end": "107399"
  },
  {
    "text": "not to use fibers where possible but",
    "start": "107399",
    "end": "109520"
  },
  {
    "text": "people still do in sort of things like",
    "start": "109520",
    "end": "111600"
  },
  {
    "text": "browsers and audio software",
    "start": "111600",
    "end": "113960"
  },
  {
    "text": "plugins so what are the components of a",
    "start": "113960",
    "end": "116159"
  },
  {
    "text": "fiber well first we have our fiber",
    "start": "116159",
    "end": "118079"
  },
  {
    "text": "object and this contains our fiber data",
    "start": "118079",
    "end": "121920"
  },
  {
    "text": "and context",
    "start": "121920",
    "end": "123439"
  },
  {
    "text": "structure then we have fiber local",
    "start": "123439",
    "end": "125479"
  },
  {
    "text": "storage now this is the functional",
    "start": "125479",
    "end": "127719"
  },
  {
    "text": "equivalent to thread local storage and",
    "start": "127719",
    "end": "129879"
  },
  {
    "text": "allows a fiber to store and retrieve",
    "start": "129879",
    "end": "131879"
  },
  {
    "text": "values unique to each fiber based on an",
    "start": "131879",
    "end": "134560"
  },
  {
    "text": "index and then finally these are tied to",
    "start": "134560",
    "end": "137200"
  },
  {
    "text": "callback functions and these are",
    "start": "137200",
    "end": "139760"
  },
  {
    "text": "functions which are executed whenever",
    "start": "139760",
    "end": "141480"
  },
  {
    "text": "one of the indexes is freed or the fiber",
    "start": "141480",
    "end": "144319"
  },
  {
    "text": "object itself is",
    "start": "144319",
    "end": "146720"
  },
  {
    "text": "deleted some basic rules about using a",
    "start": "146720",
    "end": "149160"
  },
  {
    "text": "fiber to first use a fiber you need to",
    "start": "149160",
    "end": "152160"
  },
  {
    "text": "convert your thread to a fiber there's",
    "start": "152160",
    "end": "155360"
  },
  {
    "text": "no main fiber every fiber is considered",
    "start": "155360",
    "end": "157800"
  },
  {
    "text": "equal it's very",
    "start": "157800",
    "end": "159560"
  },
  {
    "text": "galarian um any fiber is free to create",
    "start": "159560",
    "end": "162360"
  },
  {
    "text": "or delete another fiber but crucially",
    "start": "162360",
    "end": "165280"
  },
  {
    "text": "only one fiber can run per thread at any",
    "start": "165280",
    "end": "168080"
  },
  {
    "text": "one",
    "start": "168080",
    "end": "169480"
  },
  {
    "text": "time and they're controlled by this",
    "start": "169480",
    "end": "172400"
  },
  {
    "text": "simple API and the main reason for this",
    "start": "172400",
    "end": "174959"
  },
  {
    "text": "Simplicity is we don't have any",
    "start": "174959",
    "end": "176760"
  },
  {
    "text": "synchronization objects to deal with and",
    "start": "176760",
    "end": "178959"
  },
  {
    "text": "by that I mean mutexes semaphores weable",
    "start": "178959",
    "end": "182159"
  },
  {
    "text": "timers that you do with threads and",
    "start": "182159",
    "end": "184120"
  },
  {
    "text": "that's because they're inherently",
    "start": "184120",
    "end": "185200"
  },
  {
    "text": "synchronized by the application itself",
    "start": "185200",
    "end": "187640"
  },
  {
    "text": "using the switch to fiber",
    "start": "187640",
    "end": "190440"
  },
  {
    "text": "function so how would one use fibers",
    "start": "190440",
    "end": "193319"
  },
  {
    "text": "with fiber API on Windows well first we",
    "start": "193319",
    "end": "196080"
  },
  {
    "text": "need to convert our thread to a fiber",
    "start": "196080",
    "end": "197799"
  },
  {
    "text": "with convert thread to",
    "start": "197799",
    "end": "199440"
  },
  {
    "text": "fiber then we create a new fiber we",
    "start": "199440",
    "end": "202360"
  },
  {
    "text": "create fiber optionally at this point we",
    "start": "202360",
    "end": "205280"
  },
  {
    "text": "could allocate some Fiber local storage",
    "start": "205280",
    "end": "207120"
  },
  {
    "text": "unique to that fiber",
    "start": "207120",
    "end": "209879"
  },
  {
    "text": "and then when we're ready to execute",
    "start": "209879",
    "end": "211439"
  },
  {
    "text": "this newly created fiber we call the",
    "start": "211439",
    "end": "213080"
  },
  {
    "text": "switch to fiber",
    "start": "213080",
    "end": "214480"
  },
  {
    "text": "function when we finish we can either",
    "start": "214480",
    "end": "217080"
  },
  {
    "text": "convert our fiber back to a thread with",
    "start": "217080",
    "end": "219360"
  },
  {
    "text": "convert fiber to thread or we can delete",
    "start": "219360",
    "end": "222040"
  },
  {
    "text": "the fiber or delete the overall thread",
    "start": "222040",
    "end": "225000"
  },
  {
    "text": "itself so if you're interested in more",
    "start": "225000",
    "end": "227879"
  },
  {
    "text": "of a breakdown of what fibers are and",
    "start": "227879",
    "end": "230040"
  },
  {
    "text": "the internals of fibers then I recommend",
    "start": "230040",
    "end": "232280"
  },
  {
    "text": "you check out my talk I did last year",
    "start": "232280",
    "end": "233879"
  },
  {
    "text": "from a defensive perspective and the QR",
    "start": "233879",
    "end": "235760"
  },
  {
    "text": "code is on the screen",
    "start": "235760",
    "end": "239319"
  },
  {
    "start": "241000",
    "end": "390000"
  },
  {
    "text": "but this talks more interested in the",
    "start": "241680",
    "end": "244040"
  },
  {
    "text": "offensive techniques and capabilities of",
    "start": "244040",
    "end": "247239"
  },
  {
    "text": "fibers so why fibers from a defensive",
    "start": "247239",
    "end": "250560"
  },
  {
    "text": "perspective or an attacking perspective",
    "start": "250560",
    "end": "252360"
  },
  {
    "text": "even well they're actually a delivery",
    "start": "252360",
    "end": "255239"
  },
  {
    "text": "mechanism they're not a UAC bypass",
    "start": "255239",
    "end": "257560"
  },
  {
    "text": "they're not a prives what they are is",
    "start": "257560",
    "end": "259919"
  },
  {
    "text": "another alternate execution method",
    "start": "259919",
    "end": "262160"
  },
  {
    "text": "Beyond just using a straight up uh fiber",
    "start": "262160",
    "end": "265560"
  },
  {
    "text": "and that means the hortic that you might",
    "start": "265560",
    "end": "267759"
  },
  {
    "text": "use from a detection standpoint for for",
    "start": "267759",
    "end": "270199"
  },
  {
    "text": "Threads don't always apply um they're",
    "start": "270199",
    "end": "273000"
  },
  {
    "text": "also old and that's not necessarily a",
    "start": "273000",
    "end": "275400"
  },
  {
    "text": "bad thing in fact it's actually a",
    "start": "275400",
    "end": "276960"
  },
  {
    "text": "positive thing because we can rely on",
    "start": "276960",
    "end": "278479"
  },
  {
    "text": "them being there um as an option in",
    "start": "278479",
    "end": "281160"
  },
  {
    "text": "order to execute our payload and",
    "start": "281160",
    "end": "283600"
  },
  {
    "text": "although Microsoft advice is not to use",
    "start": "283600",
    "end": "286160"
  },
  {
    "text": "fibers where possible if you interrogate",
    "start": "286160",
    "end": "288199"
  },
  {
    "text": "some of the system processes Microsoft",
    "start": "288199",
    "end": "290560"
  },
  {
    "text": "actually makes use of fibers",
    "start": "290560",
    "end": "293160"
  },
  {
    "text": "themselves and why do they appeal",
    "start": "293160",
    "end": "295560"
  },
  {
    "text": "specifically to attackers well",
    "start": "295560",
    "end": "297759"
  },
  {
    "text": "Simplicity um there's a very low barrier",
    "start": "297759",
    "end": "299960"
  },
  {
    "text": "to entry you've seen how basic the API",
    "start": "299960",
    "end": "302000"
  },
  {
    "text": "is I've managed to talk you through it",
    "start": "302000",
    "end": "303440"
  },
  {
    "text": "in a few seconds um and on top of that",
    "start": "303440",
    "end": "306919"
  },
  {
    "text": "they're slightly obscure and Niche so",
    "start": "306919",
    "end": "309479"
  },
  {
    "text": "they're not as likely to be taught in",
    "start": "309479",
    "end": "311880"
  },
  {
    "text": "like defensive 101 classes um getting at",
    "start": "311880",
    "end": "315240"
  },
  {
    "text": "dormant fibers I.E fibers that aren't",
    "start": "315240",
    "end": "317520"
  },
  {
    "text": "currently executing is actually",
    "start": "317520",
    "end": "318960"
  },
  {
    "text": "non-trivial because there's no um sort",
    "start": "318960",
    "end": "321840"
  },
  {
    "text": "of set functions to use um and then",
    "start": "321840",
    "end": "324800"
  },
  {
    "text": "fundamentally this moves into an",
    "start": "324800",
    "end": "326600"
  },
  {
    "text": "immature detection capability so a lot",
    "start": "326600",
    "end": "330039"
  },
  {
    "text": "of EDR products will use um kernel",
    "start": "330039",
    "end": "333039"
  },
  {
    "text": "callbacks say like thread notification",
    "start": "333039",
    "end": "335919"
  },
  {
    "text": "creation and deletion events but because",
    "start": "335919",
    "end": "337840"
  },
  {
    "text": "a fiber is a user mode concept a fiber",
    "start": "337840",
    "end": "341080"
  },
  {
    "text": "is born and dies in between those two",
    "start": "341080",
    "end": "343880"
  },
  {
    "text": "events therefore we don't collect any",
    "start": "343880",
    "end": "345560"
  },
  {
    "text": "Telemetry on top of that the um core",
    "start": "345560",
    "end": "348840"
  },
  {
    "text": "Stacks are different so we have to write",
    "start": "348840",
    "end": "350400"
  },
  {
    "text": "a whole new set of signatures there's no",
    "start": "350400",
    "end": "353199"
  },
  {
    "text": "remote enumeration functions in the",
    "start": "353199",
    "end": "354880"
  },
  {
    "text": "windows API like there is with threads",
    "start": "354880",
    "end": "357479"
  },
  {
    "text": "and there's also limited open source",
    "start": "357479",
    "end": "359400"
  },
  {
    "text": "tool cooling available as a result of",
    "start": "359400",
    "end": "361280"
  },
  {
    "text": "that and there's no etw specific",
    "start": "361280",
    "end": "363919"
  },
  {
    "text": "providers which a lot of EDI agents use",
    "start": "363919",
    "end": "366599"
  },
  {
    "text": "that Target fiber",
    "start": "366599",
    "end": "369479"
  },
  {
    "text": "specifically and you might be wondering",
    "start": "369479",
    "end": "372120"
  },
  {
    "text": "are fibers actually being used well a",
    "start": "372120",
    "end": "374039"
  },
  {
    "text": "quick Google search shows numerous pox",
    "start": "374039",
    "end": "377400"
  },
  {
    "text": "on um GitHub that are all kind of Av",
    "start": "377400",
    "end": "379800"
  },
  {
    "text": "evasion based that make use of fibers",
    "start": "379800",
    "end": "382280"
  },
  {
    "text": "and a handful of blog posts too saying",
    "start": "382280",
    "end": "384360"
  },
  {
    "text": "look if I use fibers instead of a",
    "start": "384360",
    "end": "385800"
  },
  {
    "text": "straight up thread as my delivery",
    "start": "385800",
    "end": "387440"
  },
  {
    "text": "mechanism it lowers my AV detection",
    "start": "387440",
    "end": "391199"
  },
  {
    "start": "390000",
    "end": "838000"
  },
  {
    "text": "rates so what's the first technique well",
    "start": "391199",
    "end": "393599"
  },
  {
    "text": "this is the overwhelming majority of",
    "start": "393599",
    "end": "396319"
  },
  {
    "text": "those pox use this and it's basically",
    "start": "396319",
    "end": "398240"
  },
  {
    "text": "just to execute your shell code directly",
    "start": "398240",
    "end": "400240"
  },
  {
    "text": "using a fiber so like before we convert",
    "start": "400240",
    "end": "402440"
  },
  {
    "text": "our thread to a fiber then we allocate",
    "start": "402440",
    "end": "405360"
  },
  {
    "text": "some memory and store our Shell Code to",
    "start": "405360",
    "end": "407280"
  },
  {
    "text": "it we can do this in any number of means",
    "start": "407280",
    "end": "409080"
  },
  {
    "text": "but I've just put one example on the",
    "start": "409080",
    "end": "411720"
  },
  {
    "text": "slide then we create our new fiber and",
    "start": "411720",
    "end": "414560"
  },
  {
    "text": "Supply a pointer to our Shell Code and",
    "start": "414560",
    "end": "417599"
  },
  {
    "text": "then when we're ready we could switch to",
    "start": "417599",
    "end": "419199"
  },
  {
    "text": "fiber to switch the execution and our",
    "start": "419199",
    "end": "421800"
  },
  {
    "text": "fibers shell code is executed",
    "start": "421800",
    "end": "426560"
  },
  {
    "text": "symbol so what the advantag is of using",
    "start": "426560",
    "end": "429080"
  },
  {
    "text": "this well we don't create any new",
    "start": "429080",
    "end": "431960"
  },
  {
    "text": "threads um so we avoid conal callbacks",
    "start": "431960",
    "end": "435160"
  },
  {
    "text": "For Thread generation events um we also",
    "start": "435160",
    "end": "437800"
  },
  {
    "text": "avoid using thread specific apis that",
    "start": "437800",
    "end": "440280"
  },
  {
    "text": "might be targeted by detection tools",
    "start": "440280",
    "end": "443319"
  },
  {
    "text": "it's really really simple to implement",
    "start": "443319",
    "end": "445879"
  },
  {
    "text": "and the remote fiber enumeration is",
    "start": "445879",
    "end": "448639"
  },
  {
    "text": "particularly",
    "start": "448639",
    "end": "451199"
  },
  {
    "text": "tricky the disadvantage is well we still",
    "start": "451199",
    "end": "453759"
  },
  {
    "text": "need to allocate space for our Shell",
    "start": "453759",
    "end": "455879"
  },
  {
    "text": "Code to store um and there's actually an",
    "start": "455879",
    "end": "458599"
  },
  {
    "text": "artifact inside the thread information",
    "start": "458599",
    "end": "460360"
  },
  {
    "text": "block which is inside the thread",
    "start": "460360",
    "end": "461800"
  },
  {
    "text": "environment block a standard Windows",
    "start": "461800",
    "end": "463240"
  },
  {
    "text": "data structure um known as a fiber data",
    "start": "463240",
    "end": "466120"
  },
  {
    "text": "pointer so that could be potentially",
    "start": "466120",
    "end": "467680"
  },
  {
    "text": "used as an artifact and on top of that",
    "start": "467680",
    "end": "470720"
  },
  {
    "text": "um fibers in general are less common in",
    "start": "470720",
    "end": "473199"
  },
  {
    "text": "thread so there's less space to",
    "start": "473199",
    "end": "475159"
  },
  {
    "text": "hide the second technique is to use um",
    "start": "475159",
    "end": "478520"
  },
  {
    "text": "fiber local storage callbacks and Define",
    "start": "478520",
    "end": "481159"
  },
  {
    "text": "a malicious callback so like before we",
    "start": "481159",
    "end": "483840"
  },
  {
    "text": "convert a thread to a fiber this time we",
    "start": "483840",
    "end": "487000"
  },
  {
    "text": "allocate some Fiber local storage and we",
    "start": "487000",
    "end": "489280"
  },
  {
    "text": "Supply a pointer to our evil",
    "start": "489280",
    "end": "491960"
  },
  {
    "text": "callback then optionally we canly a",
    "start": "491960",
    "end": "495479"
  },
  {
    "text": "parameter um to this callback uh that",
    "start": "495479",
    "end": "498199"
  },
  {
    "text": "we've defined",
    "start": "498199",
    "end": "499400"
  },
  {
    "text": "earlier and then we're ready to execute",
    "start": "499400",
    "end": "501639"
  },
  {
    "text": "it we either delete the fiber exit",
    "start": "501639",
    "end": "504000"
  },
  {
    "text": "thread or free that fiber local storage",
    "start": "504000",
    "end": "507120"
  },
  {
    "text": "index and this triggers the execution of",
    "start": "507120",
    "end": "509199"
  },
  {
    "text": "the",
    "start": "509199",
    "end": "510520"
  },
  {
    "text": "callback on older versions of Windows um",
    "start": "510520",
    "end": "514279"
  },
  {
    "text": "you also had a pointer to the Callback",
    "start": "514279",
    "end": "516279"
  },
  {
    "text": "table in the process environment block",
    "start": "516279",
    "end": "518719"
  },
  {
    "text": "so you could overwrite existing",
    "start": "518719",
    "end": "520039"
  },
  {
    "text": "callbacks with your malicious",
    "start": "520039",
    "end": "523279"
  },
  {
    "text": "callback now what the advantag is well",
    "start": "523440",
    "end": "526200"
  },
  {
    "text": "the Callback table is hidden um on newer",
    "start": "526200",
    "end": "529360"
  },
  {
    "text": "OS bills and the structure is",
    "start": "529360",
    "end": "531519"
  },
  {
    "text": "undocumented so that's good in an",
    "start": "531519",
    "end": "533920"
  },
  {
    "text": "attacker's perspective there's no",
    "start": "533920",
    "end": "536080"
  },
  {
    "text": "artifacts in the standard Windows",
    "start": "536080",
    "end": "537760"
  },
  {
    "text": "structure such as the thread environment",
    "start": "537760",
    "end": "539240"
  },
  {
    "text": "block of the thread information block",
    "start": "539240",
    "end": "541120"
  },
  {
    "text": "the payload could also be chunked up",
    "start": "541120",
    "end": "543040"
  },
  {
    "text": "over multiple different callbacks so you",
    "start": "543040",
    "end": "544680"
  },
  {
    "text": "could chain your exploit together um and",
    "start": "544680",
    "end": "547800"
  },
  {
    "text": "separate that that exploit code out if",
    "start": "547800",
    "end": "549920"
  },
  {
    "text": "you so desire um and the implementation",
    "start": "549920",
    "end": "552760"
  },
  {
    "text": "is actually very",
    "start": "552760",
    "end": "554839"
  },
  {
    "text": "trivial the disadvantage is if you're",
    "start": "554839",
    "end": "556959"
  },
  {
    "text": "overwriting existing callbacks you need",
    "start": "556959",
    "end": "559000"
  },
  {
    "text": "to be careful so you don't introduce",
    "start": "559000",
    "end": "560959"
  },
  {
    "text": "instability into the application itself",
    "start": "560959",
    "end": "563760"
  },
  {
    "text": "um and we still need to allocate some",
    "start": "563760",
    "end": "565360"
  },
  {
    "text": "memory in order to Define our malicious",
    "start": "565360",
    "end": "567920"
  },
  {
    "text": "callback",
    "start": "567920",
    "end": "570000"
  },
  {
    "text": "and then finally the last open- Source",
    "start": "570000",
    "end": "571680"
  },
  {
    "text": "technique is cool stack masking so when",
    "start": "571680",
    "end": "575120"
  },
  {
    "text": "running a thread um and a fiber inside",
    "start": "575120",
    "end": "578560"
  },
  {
    "text": "that thread um you'll only present the",
    "start": "578560",
    "end": "580880"
  },
  {
    "text": "stack of the currently running fiber so",
    "start": "580880",
    "end": "583480"
  },
  {
    "text": "when you're not executing malicious code",
    "start": "583480",
    "end": "585760"
  },
  {
    "text": "say when your beacon or your payload is",
    "start": "585760",
    "end": "588160"
  },
  {
    "text": "sleeping then you can switch to an",
    "start": "588160",
    "end": "590360"
  },
  {
    "text": "innocent looking fiber with an innocent",
    "start": "590360",
    "end": "592279"
  },
  {
    "text": "Co stack thereby masking it and this",
    "start": "592279",
    "end": "595000"
  },
  {
    "text": "technique was actually implemented in",
    "start": "595000",
    "end": "596360"
  },
  {
    "text": "cobal strike a couple of years ago and",
    "start": "596360",
    "end": "598360"
  },
  {
    "text": "has subsequently been picked up by some",
    "start": "598360",
    "end": "600160"
  },
  {
    "text": "open source pox",
    "start": "600160",
    "end": "602720"
  },
  {
    "text": "too so why Co Stacks well edrs would",
    "start": "602720",
    "end": "606440"
  },
  {
    "text": "traditionally collect data via user mode",
    "start": "606440",
    "end": "609640"
  },
  {
    "text": "hooks on sensitive functions that are",
    "start": "609640",
    "end": "611399"
  },
  {
    "text": "abused by malware um so in this instance",
    "start": "611399",
    "end": "613959"
  },
  {
    "text": "we have ZW create far then they record",
    "start": "613959",
    "end": "616519"
  },
  {
    "text": "the parameters that have been provided",
    "start": "616519",
    "end": "618240"
  },
  {
    "text": "to them and see which process is",
    "start": "618240",
    "end": "620120"
  },
  {
    "text": "actually accessing them um so attackers",
    "start": "620120",
    "end": "623440"
  },
  {
    "text": "realized this and they started using",
    "start": "623440",
    "end": "624640"
  },
  {
    "text": "direct cisal whereby you jump directly",
    "start": "624640",
    "end": "627320"
  },
  {
    "text": "into the kernel and skip this hook um",
    "start": "627320",
    "end": "630160"
  },
  {
    "text": "but as you can see um if we collect cor",
    "start": "630160",
    "end": "632640"
  },
  {
    "text": "Stacks then we can clearly see this from",
    "start": "632640",
    "end": "634839"
  },
  {
    "text": "a defensive aspect especially if that",
    "start": "634839",
    "end": "637519"
  },
  {
    "text": "call into the kernels come from some",
    "start": "637519",
    "end": "639440"
  },
  {
    "text": "unbacked region of memory that our Shell",
    "start": "639440",
    "end": "641480"
  },
  {
    "text": "Code resides",
    "start": "641480",
    "end": "643279"
  },
  {
    "text": "in and you can basically collect Co",
    "start": "643279",
    "end": "645720"
  },
  {
    "text": "Stacks in three main ways you can do",
    "start": "645720",
    "end": "647480"
  },
  {
    "text": "periodic scanning so taking a snapshot",
    "start": "647480",
    "end": "649880"
  },
  {
    "text": "of all the current currently running",
    "start": "649880",
    "end": "651160"
  },
  {
    "text": "threads and unwinding the stacks you can",
    "start": "651160",
    "end": "653760"
  },
  {
    "text": "be more targeted so you only wanted to",
    "start": "653760",
    "end": "657000"
  },
  {
    "text": "Target threads that are in a weight",
    "start": "657000",
    "end": "658639"
  },
  {
    "text": "State I.E your sleeping beacons or you",
    "start": "658639",
    "end": "661720"
  },
  {
    "text": "can do in line of event-based cool stack",
    "start": "661720",
    "end": "664320"
  },
  {
    "text": "collection um so you'd have like a",
    "start": "664320",
    "end": "666959"
  },
  {
    "text": "preexisting hook or kernel callback that",
    "start": "666959",
    "end": "669519"
  },
  {
    "text": "records cor Stacks when an certain event",
    "start": "669519",
    "end": "672720"
  },
  {
    "text": "on the operating system is",
    "start": "672720",
    "end": "674920"
  },
  {
    "text": "triggered so how does it actually work",
    "start": "674920",
    "end": "677839"
  },
  {
    "text": "um well we have fiber one with our",
    "start": "677839",
    "end": "680200"
  },
  {
    "text": "malicious cool stack um we have fiber 2",
    "start": "680200",
    "end": "683000"
  },
  {
    "text": "with our clean innocent cool stack Fiber",
    "start": "683000",
    "end": "685959"
  },
  {
    "text": "One calls switch to fiber when it wants",
    "start": "685959",
    "end": "687600"
  },
  {
    "text": "to rest I.E our payload wants to sleep",
    "start": "687600",
    "end": "690600"
  },
  {
    "text": "and this switches the two fibers so the",
    "start": "690600",
    "end": "692360"
  },
  {
    "text": "innocent fiber is now swapped into the",
    "start": "692360",
    "end": "694480"
  },
  {
    "text": "context of the running thread and this",
    "start": "694480",
    "end": "697000"
  },
  {
    "text": "is where we sleep um when a memory",
    "start": "697000",
    "end": "699519"
  },
  {
    "text": "scanner comes along does it like a",
    "start": "699519",
    "end": "701200"
  },
  {
    "text": "periodic scan it reports hey we're clean",
    "start": "701200",
    "end": "703880"
  },
  {
    "text": "no",
    "start": "703880",
    "end": "705200"
  },
  {
    "text": "worries and the advantages of doing this",
    "start": "705200",
    "end": "707600"
  },
  {
    "text": "is basically it protects against",
    "start": "707600",
    "end": "709440"
  },
  {
    "text": "periodic and targeted scanning and on",
    "start": "709440",
    "end": "712320"
  },
  {
    "text": "top of that it maintains legitimate",
    "start": "712320",
    "end": "713959"
  },
  {
    "text": "Stacks so a lot of Stack spoofing",
    "start": "713959",
    "end": "716320"
  },
  {
    "text": "techniques um will modify the core",
    "start": "716320",
    "end": "720519"
  },
  {
    "text": "Stacks with gadgets and um and then you",
    "start": "720519",
    "end": "724920"
  },
  {
    "text": "can detect that based on like horis STS",
    "start": "724920",
    "end": "726720"
  },
  {
    "text": "to check to see if their Stacks are",
    "start": "726720",
    "end": "728320"
  },
  {
    "text": "valid or not it doesn't apply here",
    "start": "728320",
    "end": "730360"
  },
  {
    "text": "because the stacks remain valid",
    "start": "730360",
    "end": "732440"
  },
  {
    "text": "throughout um also it's a lot more",
    "start": "732440",
    "end": "734920"
  },
  {
    "text": "trivial to implement than traditional",
    "start": "734920",
    "end": "737120"
  },
  {
    "text": "cool stack spoofing techniques and we're",
    "start": "737120",
    "end": "739519"
  },
  {
    "text": "not using any apcs or sacrificial",
    "start": "739519",
    "end": "741800"
  },
  {
    "text": "threads or suspending any threads to do",
    "start": "741800",
    "end": "743760"
  },
  {
    "text": "this and on top of that it's a user mode",
    "start": "743760",
    "end": "746120"
  },
  {
    "text": "concept so we're not going to generate",
    "start": "746120",
    "end": "747880"
  },
  {
    "text": "any kernel callback events for",
    "start": "747880",
    "end": "749920"
  },
  {
    "text": "it the disadvantages though is that we",
    "start": "749920",
    "end": "753199"
  },
  {
    "text": "could Target fiber specific indicators",
    "start": "753199",
    "end": "755720"
  },
  {
    "text": "so there's a couple of indicators the",
    "start": "755720",
    "end": "757760"
  },
  {
    "text": "same T Flags field uh which is inside",
    "start": "757760",
    "end": "760279"
  },
  {
    "text": "the thread environment block and we",
    "start": "760279",
    "end": "761920"
  },
  {
    "text": "could also look for the start routine of",
    "start": "761920",
    "end": "764360"
  },
  {
    "text": "fibers in the cool stack it also doesn't",
    "start": "764360",
    "end": "767120"
  },
  {
    "text": "protect us against inline event-based",
    "start": "767120",
    "end": "769720"
  },
  {
    "text": "cool stack collection depending on what",
    "start": "769720",
    "end": "771440"
  },
  {
    "text": "our payload is doing if it triggers",
    "start": "771440",
    "end": "773079"
  },
  {
    "text": "those and um if we can design a tool",
    "start": "773079",
    "end": "777880"
  },
  {
    "text": "that enumerates DOR fibers are those",
    "start": "777880",
    "end": "780480"
  },
  {
    "text": "that aren't in currently running then we",
    "start": "780480",
    "end": "783160"
  },
  {
    "text": "can scan them and reveal the",
    "start": "783160",
    "end": "785760"
  },
  {
    "text": "mask so one of those indicators uh the",
    "start": "785760",
    "end": "789760"
  },
  {
    "text": "the fiber start routine um was actually",
    "start": "789760",
    "end": "791959"
  },
  {
    "text": "highlighted in a MDC blog post as to how",
    "start": "791959",
    "end": "795680"
  },
  {
    "text": "to potentially look for um sleeping",
    "start": "795680",
    "end": "798399"
  },
  {
    "text": "beacons from Cobalt",
    "start": "798399",
    "end": "800920"
  },
  {
    "text": "strike and last year I wrote a toour",
    "start": "800920",
    "end": "803240"
  },
  {
    "text": "called weix when I dug into this topic",
    "start": "803240",
    "end": "806360"
  },
  {
    "text": "um that looks to extract all of that",
    "start": "806360",
    "end": "808279"
  },
  {
    "text": "fiber telemetry from memory including",
    "start": "808279",
    "end": "810360"
  },
  {
    "text": "the dormant fibers and was able to",
    "start": "810360",
    "end": "812360"
  },
  {
    "text": "detect all these techniques um I know of",
    "start": "812360",
    "end": "815160"
  },
  {
    "text": "at least one EDR solution that now",
    "start": "815160",
    "end": "817279"
  },
  {
    "text": "currently using this and imagine uh a",
    "start": "817279",
    "end": "819760"
  },
  {
    "text": "few more have their own techniques built",
    "start": "819760",
    "end": "822120"
  },
  {
    "text": "in but having dug into the internals of",
    "start": "822120",
    "end": "824760"
  },
  {
    "text": "fibers I realized can we take this",
    "start": "824760",
    "end": "827399"
  },
  {
    "text": "further can we expand on these",
    "start": "827399",
    "end": "829000"
  },
  {
    "text": "techniques make them a little bit more",
    "start": "829000",
    "end": "830759"
  },
  {
    "text": "sophisticated and crucially can we open",
    "start": "830759",
    "end": "832880"
  },
  {
    "text": "up the use case as well so with that in",
    "start": "832880",
    "end": "835360"
  },
  {
    "text": "mind I kind of built some Next",
    "start": "835360",
    "end": "836880"
  },
  {
    "text": "Generation tooling",
    "start": "836880",
    "end": "839240"
  },
  {
    "start": "838000",
    "end": "1038000"
  },
  {
    "text": "the first tool I built was Phantom",
    "start": "839240",
    "end": "841759"
  },
  {
    "text": "thread now this is an evolved method of",
    "start": "841759",
    "end": "844440"
  },
  {
    "text": "coack masking that looks to address some",
    "start": "844440",
    "end": "846680"
  },
  {
    "text": "of the weaknesses from the original",
    "start": "846680",
    "end": "849079"
  },
  {
    "text": "technique by that it removes the ability",
    "start": "849079",
    "end": "851639"
  },
  {
    "text": "of memory scanners to Target fibers",
    "start": "851639",
    "end": "853560"
  },
  {
    "text": "specifically and in addition it also",
    "start": "853560",
    "end": "855680"
  },
  {
    "text": "masks the dormant fiber as well as the",
    "start": "855680",
    "end": "857880"
  },
  {
    "text": "currently executing",
    "start": "857880",
    "end": "860320"
  },
  {
    "text": "fiber So to avoid being targeted we",
    "start": "860320",
    "end": "863600"
  },
  {
    "text": "could masquerade as a thread um and to",
    "start": "863600",
    "end": "866320"
  },
  {
    "text": "do that we look at that same T Flags",
    "start": "866320",
    "end": "867880"
  },
  {
    "text": "field from earlier this is the os's way",
    "start": "867880",
    "end": "870959"
  },
  {
    "text": "of distinguishing fibers from threads",
    "start": "870959",
    "end": "873480"
  },
  {
    "text": "and it does that by flipping the fourth",
    "start": "873480",
    "end": "875079"
  },
  {
    "text": "bit inside the convert thread to fiber",
    "start": "875079",
    "end": "878199"
  },
  {
    "text": "API Coe um and this check is actually",
    "start": "878199",
    "end": "881600"
  },
  {
    "text": "performed in the following fiber apis so",
    "start": "881600",
    "end": "884440"
  },
  {
    "text": "knowing this what we can do we can",
    "start": "884440",
    "end": "886600"
  },
  {
    "text": "temporarily patch that to that of a",
    "start": "886600",
    "end": "888720"
  },
  {
    "text": "thread and then anytime we wish to call",
    "start": "888720",
    "end": "891000"
  },
  {
    "text": "those fiber apis in our payload we can",
    "start": "891000",
    "end": "893800"
  },
  {
    "text": "temporarily switch it",
    "start": "893800",
    "end": "896160"
  },
  {
    "text": "back next we want to remove that fiber",
    "start": "896160",
    "end": "898600"
  },
  {
    "text": "specific",
    "start": "898600",
    "end": "899639"
  },
  {
    "text": "uh start routine from the stack um and",
    "start": "899639",
    "end": "903399"
  },
  {
    "text": "basically that was what was highlighted",
    "start": "903399",
    "end": "905000"
  },
  {
    "text": "in MTX blog post um but if you have a",
    "start": "905000",
    "end": "908320"
  },
  {
    "text": "look um this is only present in fibers",
    "start": "908320",
    "end": "912519"
  },
  {
    "text": "that have been created from the initial",
    "start": "912519",
    "end": "914199"
  },
  {
    "text": "fiber so if we perform our sleep during",
    "start": "914199",
    "end": "916759"
  },
  {
    "text": "our payload in the initial fiber created",
    "start": "916759",
    "end": "919279"
  },
  {
    "text": "from the thread um then we maintain the",
    "start": "919279",
    "end": "922440"
  },
  {
    "text": "thread start routine thereby avoiding um",
    "start": "922440",
    "end": "925560"
  },
  {
    "text": "leaving the F fiber start routine",
    "start": "925560",
    "end": "927639"
  },
  {
    "text": "present in the stack",
    "start": "927639",
    "end": "929600"
  },
  {
    "text": "and then finally if we look to mask our",
    "start": "929600",
    "end": "931160"
  },
  {
    "text": "dormant fiber in addition to our",
    "start": "931160",
    "end": "933360"
  },
  {
    "text": "currently executing fibers because tools",
    "start": "933360",
    "end": "935440"
  },
  {
    "text": "such as weix enumerate dorant fibers as",
    "start": "935440",
    "end": "937600"
  },
  {
    "text": "well therefore revealing the mask so to",
    "start": "937600",
    "end": "940839"
  },
  {
    "text": "do this we first create a dummy fiber",
    "start": "940839",
    "end": "942920"
  },
  {
    "text": "using either a template or copying the",
    "start": "942920",
    "end": "944920"
  },
  {
    "text": "existing running fiber then we patch the",
    "start": "944920",
    "end": "947600"
  },
  {
    "text": "dummy fiber in place of malicious fiber",
    "start": "947600",
    "end": "949920"
  },
  {
    "text": "when it's sleeping then when it scans it",
    "start": "949920",
    "end": "953199"
  },
  {
    "text": "reports hey both the running fibers and",
    "start": "953199",
    "end": "955800"
  },
  {
    "text": "the dorming fibers are clean after this",
    "start": "955800",
    "end": "959040"
  },
  {
    "text": "we could either delete our malicious",
    "start": "959040",
    "end": "960639"
  },
  {
    "text": "fiber and that's only if we want to run",
    "start": "960639",
    "end": "963319"
  },
  {
    "text": "it way maybe a handful of times or we",
    "start": "963319",
    "end": "965880"
  },
  {
    "text": "can restore it um and switch the",
    "start": "965880",
    "end": "968519"
  },
  {
    "text": "execution back to it and then repeat the",
    "start": "968519",
    "end": "970199"
  },
  {
    "text": "masking process",
    "start": "970199",
    "end": "972240"
  },
  {
    "text": "again so when switching to a dummy fiber",
    "start": "972240",
    "end": "975160"
  },
  {
    "text": "if we want to switch to this permanently",
    "start": "975160",
    "end": "976680"
  },
  {
    "text": "we need to also pass a sanity check and",
    "start": "976680",
    "end": "978680"
  },
  {
    "text": "that's based on this value known as the",
    "start": "978680",
    "end": "981360"
  },
  {
    "text": "exord cookie value and basically to to",
    "start": "981360",
    "end": "984920"
  },
  {
    "text": "do this we transplant that cookie and we",
    "start": "984920",
    "end": "987319"
  },
  {
    "text": "regenerate it um and we copy it into our",
    "start": "987319",
    "end": "990000"
  },
  {
    "text": "dummy fiber",
    "start": "990000",
    "end": "991959"
  },
  {
    "text": "object so when we put this all together",
    "start": "991959",
    "end": "994800"
  },
  {
    "text": "we get a a fiber that has the same T",
    "start": "994800",
    "end": "998040"
  },
  {
    "text": "Flags fi to that of a thread we have no",
    "start": "998040",
    "end": "1000839"
  },
  {
    "text": "fiber start routines um in our cor stack",
    "start": "1000839",
    "end": "1004519"
  },
  {
    "text": "and the malicious fiber object is masked",
    "start": "1004519",
    "end": "1006920"
  },
  {
    "text": "in addition to the currently running",
    "start": "1006920",
    "end": "1010199"
  },
  {
    "text": "fiber and the advantages of using this",
    "start": "1010199",
    "end": "1012800"
  },
  {
    "text": "well we don't have any fiber artifacts",
    "start": "1012800",
    "end": "1014360"
  },
  {
    "text": "so we can't be targeted specifically by",
    "start": "1014360",
    "end": "1017120"
  },
  {
    "text": "a memory scanner we have valid cor",
    "start": "1017120",
    "end": "1019560"
  },
  {
    "text": "Stacks um like",
    "start": "1019560",
    "end": "1022199"
  },
  {
    "text": "before in addition we also have the",
    "start": "1022199",
    "end": "1024360"
  },
  {
    "text": "dormant fiber masked and we also haven't",
    "start": "1024360",
    "end": "1027360"
  },
  {
    "text": "created any sacrificial threads the",
    "start": "1027360",
    "end": "1030160"
  },
  {
    "text": "disadvantage is is that we still don't",
    "start": "1030160",
    "end": "1032120"
  },
  {
    "text": "protect ourselves against real-time",
    "start": "1032120",
    "end": "1034240"
  },
  {
    "text": "coack collection if our payload is going",
    "start": "1034240",
    "end": "1036520"
  },
  {
    "text": "to be triggering",
    "start": "1036520",
    "end": "1039079"
  },
  {
    "start": "1038000",
    "end": "1084000"
  },
  {
    "text": "that the next up is dormant F uh poison",
    "start": "1039079",
    "end": "1043319"
  },
  {
    "text": "fiber so every other technique I've",
    "start": "1043319",
    "end": "1045839"
  },
  {
    "text": "spoken about thus far has been local to",
    "start": "1045839",
    "end": "1048400"
  },
  {
    "text": "a process that you control what poison",
    "start": "1048400",
    "end": "1052080"
  },
  {
    "text": "fiber does is it remotely targets",
    "start": "1052080",
    "end": "1054799"
  },
  {
    "text": "processes that are making use of fibers",
    "start": "1054799",
    "end": "1056880"
  },
  {
    "text": "and then injects into them and it does",
    "start": "1056880",
    "end": "1059120"
  },
  {
    "text": "this by either injecting directly into a",
    "start": "1059120",
    "end": "1061600"
  },
  {
    "text": "remote dormant fiber or by introducing a",
    "start": "1061600",
    "end": "1065280"
  },
  {
    "text": "new malicious callback then it relies on",
    "start": "1065280",
    "end": "1068559"
  },
  {
    "text": "the application that we've injected into",
    "start": "1068559",
    "end": "1070720"
  },
  {
    "text": "to schedule our Shell Code for",
    "start": "1070720",
    "end": "1073400"
  },
  {
    "text": "us so here we're going to cover how to",
    "start": "1073400",
    "end": "1076120"
  },
  {
    "text": "remotely enumerate fibers then how to",
    "start": "1076120",
    "end": "1078799"
  },
  {
    "text": "inject code directly into the dormant",
    "start": "1078799",
    "end": "1080400"
  },
  {
    "text": "fibers and then following that how to",
    "start": "1080400",
    "end": "1082559"
  },
  {
    "text": "inject malicious",
    "start": "1082559",
    "end": "1084520"
  },
  {
    "start": "1084000",
    "end": "1229000"
  },
  {
    "text": "callbacks so how do we remotely",
    "start": "1084520",
    "end": "1086520"
  },
  {
    "text": "enumerate fibers well first we identify",
    "start": "1086520",
    "end": "1090000"
  },
  {
    "text": "threads um using fibers using that same",
    "start": "1090000",
    "end": "1092760"
  },
  {
    "text": "T flag field from earlier so we take a",
    "start": "1092760",
    "end": "1094440"
  },
  {
    "text": "snapshot of all the currently running",
    "start": "1094440",
    "end": "1096240"
  },
  {
    "text": "threads and we interrogate that field we",
    "start": "1096240",
    "end": "1098280"
  },
  {
    "text": "see if that fourth bit is set if it's",
    "start": "1098280",
    "end": "1100159"
  },
  {
    "text": "set we can say hey this is currently",
    "start": "1100159",
    "end": "1102200"
  },
  {
    "text": "running a",
    "start": "1102200",
    "end": "1103720"
  },
  {
    "text": "fiber to pick out the dormant fibers um",
    "start": "1103720",
    "end": "1106720"
  },
  {
    "text": "we want to look inside the the API that",
    "start": "1106720",
    "end": "1109200"
  },
  {
    "text": "create fiber objects and we can see that",
    "start": "1109200",
    "end": "1111400"
  },
  {
    "text": "there's consistency they always use an a",
    "start": "1111400",
    "end": "1114360"
  },
  {
    "text": "requested block size heat block size of",
    "start": "1114360",
    "end": "1116480"
  },
  {
    "text": "530 heximal",
    "start": "1116480",
    "end": "1118280"
  },
  {
    "text": "bytes so we take that and then we",
    "start": "1118280",
    "end": "1121520"
  },
  {
    "text": "remotely enumerate um each heat block",
    "start": "1121520",
    "end": "1124799"
  },
  {
    "text": "entry in a Target process and then we do",
    "start": "1124799",
    "end": "1128280"
  },
  {
    "text": "that using the following steps if you're",
    "start": "1128280",
    "end": "1129679"
  },
  {
    "text": "more interested in like the breakdown of",
    "start": "1129679",
    "end": "1132200"
  },
  {
    "text": "that I put a QR code on the screen which",
    "start": "1132200",
    "end": "1133919"
  },
  {
    "text": "takes you to the video where explain",
    "start": "1133919",
    "end": "1135280"
  },
  {
    "text": "this a little bit further um but",
    "start": "1135280",
    "end": "1137720"
  },
  {
    "text": "essentially what we do is we look at the",
    "start": "1137720",
    "end": "1139440"
  },
  {
    "text": "PEB um remotely then we find the the",
    "start": "1139440",
    "end": "1142600"
  },
  {
    "text": "number of heaps then we enumerate the",
    "start": "1142600",
    "end": "1144799"
  },
  {
    "text": "Heap segments and then from there we get",
    "start": "1144799",
    "end": "1147240"
  },
  {
    "text": "each Heap block and we look at the",
    "start": "1147240",
    "end": "1149919"
  },
  {
    "text": "actual size and the unused bites to",
    "start": "1149919",
    "end": "1151919"
  },
  {
    "text": "generate the requested size and with",
    "start": "1151919",
    "end": "1154080"
  },
  {
    "text": "that we generate a list of potential",
    "start": "1154080",
    "end": "1156840"
  },
  {
    "text": "fiber",
    "start": "1156840",
    "end": "1158320"
  },
  {
    "text": "objects but that's annoying enough we",
    "start": "1158320",
    "end": "1160159"
  },
  {
    "text": "can't just say based on this allocated",
    "start": "1160159",
    "end": "1161880"
  },
  {
    "text": "size it could be anything else right um",
    "start": "1161880",
    "end": "1164520"
  },
  {
    "text": "so we need to validate these fiber",
    "start": "1164520",
    "end": "1166080"
  },
  {
    "text": "objects and within each fiber object you",
    "start": "1166080",
    "end": "1169080"
  },
  {
    "text": "get this exord stack cookie that I",
    "start": "1169080",
    "end": "1171039"
  },
  {
    "text": "mentioned earlier and this is made up of",
    "start": "1171039",
    "end": "1172799"
  },
  {
    "text": "three Fields um fiber data which is also",
    "start": "1172799",
    "end": "1176280"
  },
  {
    "text": "inside um the fiber object as well as a",
    "start": "1176280",
    "end": "1178799"
  },
  {
    "text": "stack base um and then we have this",
    "start": "1178799",
    "end": "1181159"
  },
  {
    "text": "third value known as the base P fiber",
    "start": "1181159",
    "end": "1183159"
  },
  {
    "text": "cookie now this is a randomly generated",
    "start": "1183159",
    "end": "1186000"
  },
  {
    "text": "value um that's created upon thread",
    "start": "1186000",
    "end": "1189559"
  },
  {
    "text": "creation and what we can do is we can",
    "start": "1189559",
    "end": "1193480"
  },
  {
    "text": "basically rearrange that equation that's",
    "start": "1193480",
    "end": "1195720"
  },
  {
    "text": "used to generate um the EXO cookie to",
    "start": "1195720",
    "end": "1198280"
  },
  {
    "text": "figure out this base P fiber value",
    "start": "1198280",
    "end": "1200720"
  },
  {
    "text": "because this is the only value that we",
    "start": "1200720",
    "end": "1201799"
  },
  {
    "text": "don't have um and once we know this",
    "start": "1201799",
    "end": "1204159"
  },
  {
    "text": "value we can take the list of those Heap",
    "start": "1204159",
    "end": "1206440"
  },
  {
    "text": "objects and we can compute an expected",
    "start": "1206440",
    "end": "1209360"
  },
  {
    "text": "fiber data value from these Heap objects",
    "start": "1209360",
    "end": "1212640"
  },
  {
    "text": "now if the expected fiber data value",
    "start": "1212640",
    "end": "1215039"
  },
  {
    "text": "matches that of the actual fiber data",
    "start": "1215039",
    "end": "1216840"
  },
  {
    "text": "value we can concur that this heat",
    "start": "1216840",
    "end": "1218880"
  },
  {
    "text": "object does indeed contain a dormant",
    "start": "1218880",
    "end": "1222240"
  },
  {
    "text": "fiber so now as an attacker we've gone",
    "start": "1222240",
    "end": "1224880"
  },
  {
    "text": "through those steps we have the",
    "start": "1224880",
    "end": "1226320"
  },
  {
    "text": "currently running fibers and the dormant",
    "start": "1226320",
    "end": "1228280"
  },
  {
    "text": "fibers",
    "start": "1228280",
    "end": "1229400"
  },
  {
    "start": "1229000",
    "end": "1380000"
  },
  {
    "text": "so let's start by injecting into those",
    "start": "1229400",
    "end": "1231360"
  },
  {
    "text": "dormant",
    "start": "1231360",
    "end": "1233080"
  },
  {
    "text": "fibers so a fiber object contains a",
    "start": "1233080",
    "end": "1235919"
  },
  {
    "text": "context and this records the saved",
    "start": "1235919",
    "end": "1238360"
  },
  {
    "text": "execution state of dormant fiber and",
    "start": "1238360",
    "end": "1241720"
  },
  {
    "text": "inside this context is an instruction",
    "start": "1241720",
    "end": "1243840"
  },
  {
    "text": "pointer um and what this does it points",
    "start": "1243840",
    "end": "1246240"
  },
  {
    "text": "to a r which has the side effect of",
    "start": "1246240",
    "end": "1249080"
  },
  {
    "text": "taking whatsoever off the top of the",
    "start": "1249080",
    "end": "1250559"
  },
  {
    "text": "stack in that dormant fiber and then",
    "start": "1250559",
    "end": "1252640"
  },
  {
    "text": "jumping to it therefore resuming um code",
    "start": "1252640",
    "end": "1256200"
  },
  {
    "text": "execution so knowing this location",
    "start": "1256200",
    "end": "1259799"
  },
  {
    "text": "um we can overwrite that providing",
    "start": "1259799",
    "end": "1262200"
  },
  {
    "text": "there's enough space with our Shell Code",
    "start": "1262200",
    "end": "1264799"
  },
  {
    "text": "um and then whenever this dormant fiber",
    "start": "1264799",
    "end": "1266440"
  },
  {
    "text": "is switch to it will execute our Shell",
    "start": "1266440",
    "end": "1269200"
  },
  {
    "text": "Code instead of the original dormant",
    "start": "1269200",
    "end": "1270720"
  },
  {
    "text": "fiber",
    "start": "1270720",
    "end": "1272440"
  },
  {
    "text": "code another method is via redirection",
    "start": "1272440",
    "end": "1276240"
  },
  {
    "text": "so instead of overwriting that dormant",
    "start": "1276240",
    "end": "1278320"
  },
  {
    "text": "fiber code we can allocate a new region",
    "start": "1278320",
    "end": "1280799"
  },
  {
    "text": "of memory remotely and then push the",
    "start": "1280799",
    "end": "1283240"
  },
  {
    "text": "address of this on top of that dormant",
    "start": "1283240",
    "end": "1285400"
  },
  {
    "text": "fiber stack that way when a fiber is",
    "start": "1285400",
    "end": "1288000"
  },
  {
    "text": "switched to",
    "start": "1288000",
    "end": "1289440"
  },
  {
    "text": "it will execute our new region of memory",
    "start": "1289440",
    "end": "1292400"
  },
  {
    "text": "first and then providing our Shell Code",
    "start": "1292400",
    "end": "1294760"
  },
  {
    "text": "ends with a r it will return execution",
    "start": "1294760",
    "end": "1297559"
  },
  {
    "text": "back to the legitimate fiber code and",
    "start": "1297559",
    "end": "1300919"
  },
  {
    "text": "continually run the application as",
    "start": "1300919",
    "end": "1304559"
  },
  {
    "text": "usual so the advantages of this um well",
    "start": "1304559",
    "end": "1307480"
  },
  {
    "text": "we can now Target processes using fibers",
    "start": "1307480",
    "end": "1310840"
  },
  {
    "text": "and inject into them remotely which we",
    "start": "1310840",
    "end": "1312880"
  },
  {
    "text": "couldn't do before um there's also no",
    "start": "1312880",
    "end": "1315840"
  },
  {
    "text": "need for us to trigger the execution",
    "start": "1315840",
    "end": "1317840"
  },
  {
    "text": "because we just rely on the inherent",
    "start": "1317840",
    "end": "1319960"
  },
  {
    "text": "switching of that application that we've",
    "start": "1319960",
    "end": "1322080"
  },
  {
    "text": "injected into we're also not creating",
    "start": "1322080",
    "end": "1324520"
  },
  {
    "text": "any new threads and then when we're",
    "start": "1324520",
    "end": "1326760"
  },
  {
    "text": "overwriting fiber code we're actually",
    "start": "1326760",
    "end": "1328640"
  },
  {
    "text": "not providing this enough space",
    "start": "1328640",
    "end": "1330480"
  },
  {
    "text": "allocating remotely any new regions of",
    "start": "1330480",
    "end": "1332559"
  },
  {
    "text": "memory we're just changing the",
    "start": "1332559",
    "end": "1334960"
  },
  {
    "text": "permissions on that memory",
    "start": "1334960",
    "end": "1337159"
  },
  {
    "text": "region now the disadvantage is um if we",
    "start": "1337159",
    "end": "1340919"
  },
  {
    "text": "are looking at all threads across a",
    "start": "1340919",
    "end": "1342919"
  },
  {
    "text": "system and we're taking a snapshot then",
    "start": "1342919",
    "end": "1345520"
  },
  {
    "text": "that's potentially quite noisy so we",
    "start": "1345520",
    "end": "1347360"
  },
  {
    "text": "need to bear that in mind also there's",
    "start": "1347360",
    "end": "1349520"
  },
  {
    "text": "race conditions possible between the",
    "start": "1349520",
    "end": "1351360"
  },
  {
    "text": "time which we inject our malicious uh",
    "start": "1351360",
    "end": "1354320"
  },
  {
    "text": "fiber code and the time in which the",
    "start": "1354320",
    "end": "1356039"
  },
  {
    "text": "application switches to that dormant",
    "start": "1356039",
    "end": "1358279"
  },
  {
    "text": "fiber um and on top of that if we're",
    "start": "1358279",
    "end": "1361440"
  },
  {
    "text": "overwriting existing fiber code and",
    "start": "1361440",
    "end": "1363360"
  },
  {
    "text": "we're not cleaning it up afterwards then",
    "start": "1363360",
    "end": "1365840"
  },
  {
    "text": "as soon as our Shell Code finishes",
    "start": "1365840",
    "end": "1367400"
  },
  {
    "text": "executing we will introduce some sort of",
    "start": "1367400",
    "end": "1370480"
  },
  {
    "text": "crash or exception handling um and when",
    "start": "1370480",
    "end": "1373440"
  },
  {
    "text": "we're redirecting we still are remotely",
    "start": "1373440",
    "end": "1376480"
  },
  {
    "text": "allocating memory um so we need to watch",
    "start": "1376480",
    "end": "1378679"
  },
  {
    "text": "out for that",
    "start": "1378679",
    "end": "1380640"
  },
  {
    "start": "1380000",
    "end": "1522000"
  },
  {
    "text": "too the next method is remote callback",
    "start": "1380640",
    "end": "1384960"
  },
  {
    "text": "injection so first we need to collect",
    "start": "1384960",
    "end": "1388240"
  },
  {
    "text": "the Callback table of the remote process",
    "start": "1388240",
    "end": "1390799"
  },
  {
    "text": "that's using fibers and we do this",
    "start": "1390799",
    "end": "1393640"
  },
  {
    "text": "through the fls data pointer that we",
    "start": "1393640",
    "end": "1395799"
  },
  {
    "text": "found in our dormant fibers um and what",
    "start": "1395799",
    "end": "1398880"
  },
  {
    "text": "this does it points to an entry in a w",
    "start": "1398880",
    "end": "1401559"
  },
  {
    "text": "link list and one of these entries",
    "start": "1401559",
    "end": "1404279"
  },
  {
    "text": "doesn't actually represent a fiber",
    "start": "1404279",
    "end": "1405840"
  },
  {
    "text": "object instead it represents a glob",
    "start": "1405840",
    "end": "1408840"
  },
  {
    "text": "fiber local storage",
    "start": "1408840",
    "end": "1411000"
  },
  {
    "text": "struct and inside this struct is a",
    "start": "1411000",
    "end": "1413840"
  },
  {
    "text": "pointer to the Callback table and the",
    "start": "1413840",
    "end": "1416919"
  },
  {
    "text": "first field of this callback table",
    "start": "1416919",
    "end": "1418720"
  },
  {
    "text": "defines the number of callbacks present",
    "start": "1418720",
    "end": "1421720"
  },
  {
    "text": "and then the subsequent Fields will be",
    "start": "1421720",
    "end": "1424880"
  },
  {
    "text": "either hardcoded values or values to",
    "start": "1424880",
    "end": "1429600"
  },
  {
    "text": "pointers to fibers sorry pointers to",
    "start": "1429600",
    "end": "1432200"
  },
  {
    "text": "fiber",
    "start": "1432200",
    "end": "1434080"
  },
  {
    "text": "callbacks so what we can do we can",
    "start": "1434080",
    "end": "1436080"
  },
  {
    "text": "either overwrite an existing callback",
    "start": "1436080",
    "end": "1438880"
  },
  {
    "text": "with the address of our malicious",
    "start": "1438880",
    "end": "1442360"
  },
  {
    "text": "callback or we could increase the size",
    "start": "1442360",
    "end": "1445320"
  },
  {
    "text": "of this callback table and then append a",
    "start": "1445320",
    "end": "1448159"
  },
  {
    "text": "new callback to the end of",
    "start": "1448159",
    "end": "1450520"
  },
  {
    "text": "it and then whenever the associated",
    "start": "1450520",
    "end": "1453400"
  },
  {
    "text": "index is freed the fiber is deleted or",
    "start": "1453400",
    "end": "1456640"
  },
  {
    "text": "the thread itself exits what happens is",
    "start": "1456640",
    "end": "1460320"
  },
  {
    "text": "there's a couple of functions inside",
    "start": "1460320",
    "end": "1462200"
  },
  {
    "text": "entd which scan the Callback table and",
    "start": "1462200",
    "end": "1464880"
  },
  {
    "text": "then execute our malicious Shell Code in",
    "start": "1464880",
    "end": "1468399"
  },
  {
    "text": "inside the",
    "start": "1468399",
    "end": "1471120"
  },
  {
    "text": "coolback and the advantages of this well",
    "start": "1471240",
    "end": "1475000"
  },
  {
    "text": "our injected callback is actually",
    "start": "1475000",
    "end": "1477919"
  },
  {
    "text": "cleaned up remotely by the application",
    "start": "1477919",
    "end": "1480159"
  },
  {
    "text": "itself for us so we don't have to bother",
    "start": "1480159",
    "end": "1482120"
  },
  {
    "text": "with",
    "start": "1482120",
    "end": "1482840"
  },
  {
    "text": "cleanup um and if we're appending",
    "start": "1482840",
    "end": "1485159"
  },
  {
    "text": "callbacks then um we're not overwriting",
    "start": "1485159",
    "end": "1488240"
  },
  {
    "text": "any critical fiber local storage",
    "start": "1488240",
    "end": "1490240"
  },
  {
    "text": "callbacks that may have been defined by",
    "start": "1490240",
    "end": "1491679"
  },
  {
    "text": "the",
    "start": "1491679",
    "end": "1492440"
  },
  {
    "text": "developer the disadvantages though is we",
    "start": "1492440",
    "end": "1495799"
  },
  {
    "text": "need to know that fiber local storage is",
    "start": "1495799",
    "end": "1498559"
  },
  {
    "text": "already present in that remote",
    "start": "1498559",
    "end": "1500399"
  },
  {
    "text": "application which in most cases you'd",
    "start": "1500399",
    "end": "1502919"
  },
  {
    "text": "assume it was but we can still check for",
    "start": "1502919",
    "end": "1505000"
  },
  {
    "text": "this on top of that it's a one-time",
    "start": "1505000",
    "end": "1507720"
  },
  {
    "text": "execution method only because the",
    "start": "1507720",
    "end": "1510240"
  },
  {
    "text": "application as soon as it's triggered",
    "start": "1510240",
    "end": "1511600"
  },
  {
    "text": "the Callback will clean it up um and if",
    "start": "1511600",
    "end": "1515120"
  },
  {
    "text": "we are overwriting callbacks we need to",
    "start": "1515120",
    "end": "1516840"
  },
  {
    "text": "be careful which callbacks we overwrite",
    "start": "1516840",
    "end": "1519080"
  },
  {
    "text": "so we don't introduce instability or",
    "start": "1519080",
    "end": "1522880"
  },
  {
    "start": "1522000",
    "end": "1709000"
  },
  {
    "text": "crashes and finally some conclusions and",
    "start": "1523399",
    "end": "1526640"
  },
  {
    "text": "key takeaways",
    "start": "1526640",
    "end": "1529000"
  },
  {
    "text": "so can we go further with these",
    "start": "1529000",
    "end": "1530640"
  },
  {
    "text": "techniques um I think we can a little",
    "start": "1530640",
    "end": "1532880"
  },
  {
    "text": "bit so for Phantom thread um we're not",
    "start": "1532880",
    "end": "1535760"
  },
  {
    "text": "protected against inline cool stack",
    "start": "1535760",
    "end": "1538520"
  },
  {
    "text": "collection so packaging it with say like",
    "start": "1538520",
    "end": "1542279"
  },
  {
    "text": "another technique such as dll proxy",
    "start": "1542279",
    "end": "1544279"
  },
  {
    "text": "loads and windows callbacks to make our",
    "start": "1544279",
    "end": "1545840"
  },
  {
    "text": "Stacks look a little bit more legitimate",
    "start": "1545840",
    "end": "1547720"
  },
  {
    "text": "might be a good",
    "start": "1547720",
    "end": "1549360"
  },
  {
    "text": "idea and on top of that we could also",
    "start": "1549360",
    "end": "1551679"
  },
  {
    "text": "encrypt that dormant fiber object that",
    "start": "1551679",
    "end": "1553320"
  },
  {
    "text": "we've temporarily patched out for our",
    "start": "1553320",
    "end": "1555080"
  },
  {
    "text": "dummy fiber um in case it gets scanned",
    "start": "1555080",
    "end": "1558000"
  },
  {
    "text": "by like overall generic memory",
    "start": "1558000",
    "end": "1560679"
  },
  {
    "text": "scanners for poison fiber um I think",
    "start": "1560679",
    "end": "1564120"
  },
  {
    "text": "Improvement wise is to provide some",
    "start": "1564120",
    "end": "1566279"
  },
  {
    "text": "builting cleanup capability so we're not",
    "start": "1566279",
    "end": "1568279"
  },
  {
    "text": "introducing crashes if we're just",
    "start": "1568279",
    "end": "1569760"
  },
  {
    "text": "overwriting directly that fiber code and",
    "start": "1569760",
    "end": "1572279"
  },
  {
    "text": "by that I mean perhaps use something",
    "start": "1572279",
    "end": "1574399"
  },
  {
    "text": "like a vector exception Handler that",
    "start": "1574399",
    "end": "1576039"
  },
  {
    "text": "captures the crash and replaces it",
    "start": "1576039",
    "end": "1577720"
  },
  {
    "text": "afterwards and resumes",
    "start": "1577720",
    "end": "1580760"
  },
  {
    "text": "execution and finally some key takeaways",
    "start": "1581279",
    "end": "1584080"
  },
  {
    "text": "well fibers can be used as an alternate",
    "start": "1584080",
    "end": "1587159"
  },
  {
    "text": "execution and delivery mechanism for",
    "start": "1587159",
    "end": "1589840"
  },
  {
    "text": "your payload um and you can use this to",
    "start": "1589840",
    "end": "1593760"
  },
  {
    "text": "sidestep say some traditional Telemetry",
    "start": "1593760",
    "end": "1596600"
  },
  {
    "text": "sources and horis sixs that are more",
    "start": "1596600",
    "end": "1599039"
  },
  {
    "text": "inclined to Target threads um in the",
    "start": "1599039",
    "end": "1602159"
  },
  {
    "text": "clean",
    "start": "1602159",
    "end": "1603159"
  },
  {
    "text": "manner two well Fiber remote fiber",
    "start": "1603159",
    "end": "1607399"
  },
  {
    "text": "injection is now possible thanks to",
    "start": "1607399",
    "end": "1610080"
  },
  {
    "text": "poison fiber and that expands its use",
    "start": "1610080",
    "end": "1612520"
  },
  {
    "text": "case to",
    "start": "1612520",
    "end": "1614200"
  },
  {
    "text": "attackers and then three to prevent",
    "start": "1614200",
    "end": "1617120"
  },
  {
    "text": "evasion techniques becoming in amongst",
    "start": "1617120",
    "end": "1620200"
  },
  {
    "text": "themselves High Fidelity indicators it's",
    "start": "1620200",
    "end": "1622919"
  },
  {
    "text": "important to remove the artifacts where",
    "start": "1622919",
    "end": "1625520"
  },
  {
    "text": "possible and by that I mean we've",
    "start": "1625520",
    "end": "1628799"
  },
  {
    "text": "removed those same typ flags and RTL",
    "start": "1628799",
    "end": "1631240"
  },
  {
    "text": "user fiber start within phant Phantom",
    "start": "1631240",
    "end": "1635880"
  },
  {
    "text": "thread so thanks very much for listening",
    "start": "1636279",
    "end": "1638679"
  },
  {
    "text": "to my talk um the QR codes for the tool",
    "start": "1638679",
    "end": "1641080"
  },
  {
    "text": "repos we toix the defensive tool is on",
    "start": "1641080",
    "end": "1644000"
  },
  {
    "text": "the slide I'll be releasing a moral",
    "start": "1644000",
    "end": "1646159"
  },
  {
    "text": "fiber over the next couple of days does",
    "start": "1646159",
    "end": "1648679"
  },
  {
    "text": "anyone have any",
    "start": "1648679",
    "end": "1651320"
  },
  {
    "text": "questions um I guess you could have a",
    "start": "1667600",
    "end": "1670760"
  },
  {
    "text": "call back that",
    "start": "1670760",
    "end": "1675039"
  },
  {
    "text": "replaces H good question no not easily",
    "start": "1675039",
    "end": "1678760"
  },
  {
    "text": "um you you could do it in a roundabout",
    "start": "1678760",
    "end": "1680720"
  },
  {
    "text": "way but you you probably be best off",
    "start": "1680720",
    "end": "1682760"
  },
  {
    "text": "just overwriting several callbacks or",
    "start": "1682760",
    "end": "1684760"
  },
  {
    "text": "appending several callbacks yeah because",
    "start": "1684760",
    "end": "1688000"
  },
  {
    "text": "they only get executed when the thread",
    "start": "1688000",
    "end": "1690120"
  },
  {
    "text": "gets deleted in some scenarios so you",
    "start": "1690120",
    "end": "1693399"
  },
  {
    "text": "have the thread which stores those",
    "start": "1693399",
    "end": "1694760"
  },
  {
    "text": "callbacks also",
    "start": "1694760",
    "end": "1697880"
  },
  {
    "text": "exit all thank you very much cheers",
    "start": "1701799",
    "end": "1706720"
  }
]